
3eb78eb921c1a01819453a4857e3bcc002f6d6f4e695365126b39e6a1bab1def.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sbb    ecx,0x40a3
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	mov    ecx,DWORD PTR ds:0x42a1b3
  401019:	adc    DWORD PTR ds:0x42a14f,ecx
  40101f:	push   esi
  401020:	push   edi
  401021:	and    DWORD PTR ds:0x42a183,0x0
  40102b:	jmp    0x40103d
  401030:	mov    edi,DWORD PTR ds:0x42a183
  401036:	inc    edi
  401037:	mov    DWORD PTR ds:0x42a183,edi
  40103d:	cmp    DWORD PTR ds:0x42a183,0x17
  401044:	jae    0x401067
  40104a:	cmp    DWORD PTR ds:0x42a183,0x1c
  401051:	ja     0x401067
  401057:	jmp    0x401062
  40105c:	call   DWORD PTR ds:0x42a293
  401062:	jmp    0x401030
  401067:	mov    esi,0x75108a8
  40106c:	mov    DWORD PTR ds:0x42a13f,0x1f
  401076:	cmp    DWORD PTR ds:0x42a13f,0x0
  40107d:	je     0x4010bf
  401083:	cmp    DWORD PTR ds:0x42a13f,0x2c
  40108a:	ja     0x4010bf
  401090:	jmp    0x4010ad
  401095:	push   DWORD PTR [ebp-0x1c]
  401098:	push   0x6c93
  40109d:	push   0x429093
  4010a2:	push   0x400000
  4010a7:	call   DWORD PTR ds:0x42a297
  4010ad:	mov    edi,DWORD PTR ds:0x42a13f
  4010b3:	dec    edi
  4010b4:	mov    DWORD PTR ds:0x42a13f,edi
  4010ba:	jmp    0x401076
  4010bf:	xor    eax,esi
  4010c1:	sbb    DWORD PTR ds:0x42a18f,0x4c4b
  4010cb:	mov    edi,0x3272ef
  4010d0:	and    DWORD PTR ds:0x42a13f,0x59cd
  4010da:	add    eax,edi
  4010dc:	mov    ecx,DWORD PTR ds:0x42a13b
  4010e2:	sbb    ecx,DWORD PTR ds:0x42a17b
  4010e8:	mov    DWORD PTR ds:0x42a13b,ecx
  4010ee:	mov    DWORD PTR [ebp-0x40],eax
  4010f1:	mov    DWORD PTR ds:0x42a167,0x1b
  4010fb:	cmp    DWORD PTR ds:0x42a167,0x0
  401102:	je     0x40114e
  401108:	cmp    DWORD PTR ds:0x42a167,0x3
  40110f:	jb     0x40114e
  401115:	jmp    0x401120
  40111a:	call   DWORD PTR ds:0x42a29b
  401120:	cmp    DWORD PTR ds:0x42a167,0x4
  401127:	jne    0x40113c
  40112d:	xor    ecx,ecx
  40112f:	add    ecx,DWORD PTR ds:0x42a167
  401135:	dec    ecx
  401136:	mov    DWORD PTR ds:0x42a167,ecx
  40113c:	mov    ecx,DWORD PTR ds:0x42a167
  401142:	dec    ecx
  401143:	mov    DWORD PTR ds:0x42a167,ecx
  401149:	jmp    0x4010fb
  40114e:	mov    eax,ds:0x4292af
  401153:	mov    eax,DWORD PTR [eax]
  401155:	xor    ecx,ecx
  401157:	or     ecx,DWORD PTR ds:0x42a27f
  40115d:	mov    ecx,DWORD PTR [ecx]
  40115f:	sbb    DWORD PTR ds:0x42a15f,ecx
  401165:	mov    DWORD PTR [ebp-0x3c],eax
  401168:	sub    ecx,0x5dee
  40116e:	mov    eax,ds:0x4294bf
  401173:	and    DWORD PTR ds:0x42a1b7,edx
  401179:	mov    eax,DWORD PTR [eax]
  40117b:	and    DWORD PTR ds:0x42a18f,0x0
  401185:	jmp    0x401197
  40118a:	mov    ecx,DWORD PTR ds:0x42a18f
  401190:	inc    ecx
  401191:	mov    DWORD PTR ds:0x42a18f,ecx
  401197:	cmp    DWORD PTR ds:0x42a18f,0x1d
  40119e:	jae    0x4011d3
  4011a4:	cmp    DWORD PTR ds:0x42a18f,0x22
  4011ab:	jg     0x4011d3
  4011b1:	jmp    0x4011ce
  4011b6:	push   DWORD PTR [ebp-0x10]
  4011b9:	push   0x1d13
  4011be:	push   0x42920b
  4011c3:	push   0x400000
  4011c8:	call   DWORD PTR ds:0x42a2a3
  4011ce:	jmp    0x40118a
  4011d3:	mov    DWORD PTR [ebp-0x1c],eax
  4011d6:	sub    ecx,eax
  4011d8:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  4011df:	mov    DWORD PTR ds:0x42a16b,0x4da
  4011e9:	mov    eax,DWORD PTR [ebp-0x34]
  4011ec:	dec    ecx
  4011ed:	xor    eax,esi
  4011ef:	xor    DWORD PTR ds:0x42a1a7,0x5e5b
  4011f9:	add    eax,edi
  4011fb:	add    DWORD PTR ds:0x42a16f,0x6276
  401205:	mov    DWORD PTR [ebp-0x40],eax
  401208:	and    DWORD PTR ds:0x42a147,0x0
  401212:	jmp    0x401226
  401217:	xor    ecx,ecx
  401219:	or     ecx,DWORD PTR ds:0x42a147
  40121f:	inc    ecx
  401220:	mov    DWORD PTR ds:0x42a147,ecx
  401226:	cmp    DWORD PTR ds:0x42a147,0x15
  40122d:	jae    0x401250
  401233:	cmp    DWORD PTR ds:0x42a147,0x19
  40123a:	jle    0x401250
  401240:	jmp    0x40124b
  401245:	call   DWORD PTR ds:0x42a2a7
  40124b:	jmp    0x401217
  401250:	mov    eax,ds:0x42942f
  401255:	mov    DWORD PTR [ebp-0x40],eax
  401258:	mov    eax,DWORD PTR [ebp-0x3c]
  40125b:	mov    DWORD PTR ds:0x42a18b,0x16
  401265:	cmp    DWORD PTR ds:0x42a18b,0x0
  40126c:	je     0x4012a7
  401272:	cmp    DWORD PTR ds:0x42a18b,0x20
  401279:	jg     0x4012a7
  40127f:	jmp    0x401295
  401284:	push   DWORD PTR [ebp-0x28]
  401287:	push   0x42a137
  40128c:	push   DWORD PTR [ebp-0x28]
  40128f:	call   DWORD PTR ds:0x42a2ab
  401295:	mov    ecx,DWORD PTR ds:0x42a18b
  40129b:	dec    ecx
  40129c:	mov    DWORD PTR ds:0x42a18b,ecx
  4012a2:	jmp    0x401265
  4012a7:	mov    DWORD PTR [ebp-0x14],eax
  4012aa:	sub    ecx,eax
  4012ac:	mov    eax,DWORD PTR [ebp-0x14]
  4012af:	push   0x4
  4012b1:	xor    ecx,ecx
  4012b3:	xor    ecx,DWORD PTR ds:0x42a1cb
  4012b9:	xor    DWORD PTR ds:0x42a143,ecx
  4012bf:	pop    ecx
  4012c0:	or     DWORD PTR ds:0x42a197,0x7ab3
  4012ca:	sub    ecx,eax
  4012cc:	add    DWORD PTR ds:0x42a13f,0x1333
  4012d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4012d9:	movzx  eax,BYTE PTR ds:0x42a187
  4012e0:	xor    DWORD PTR ds:0x42a14b,eax
  4012e6:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4012ed:	mov    DWORD PTR [ebp-0x18],ecx
  4012f0:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  4012fa:	add    DWORD PTR ds:0x42a1b3,0x1736
  401304:	mov    eax,DWORD PTR [ebp-0x14]
  401307:	mov    DWORD PTR [ebp-0x9c],eax
  40130d:	and    DWORD PTR ds:0x42a1ab,0x0
  401317:	jmp    0x40132a
  40131c:	xor    eax,eax
  40131e:	xor    eax,DWORD PTR ds:0x42a1ab
  401324:	inc    eax
  401325:	mov    ds:0x42a1ab,eax
  40132a:	cmp    DWORD PTR ds:0x42a1ab,0x18
  401331:	jae    0x401364
  401337:	cmp    DWORD PTR ds:0x42a1ab,0x1e
  40133e:	jb     0x401364
  401344:	jmp    0x40135f
  401349:	push   0x8043
  40134e:	push   0x4a07
  401353:	push   DWORD PTR [ebp-0x24]
  401356:	push   DWORD PTR [ebp-0xc]
  401359:	call   DWORD PTR ds:0x42a2af
  40135f:	jmp    0x40131c
  401364:	mov    eax,DWORD PTR [ebp-0x18]
  401367:	xor    DWORD PTR ds:0x42a18f,0x63f7
  401371:	mov    DWORD PTR [ebp-0x98],eax
  401377:	mov    eax,DWORD PTR [ebp-0x2c]
  40137a:	sbb    DWORD PTR ds:0x42a18f,0x379e
  401384:	xor    eax,esi
  401386:	add    eax,edi
  401388:	mov    DWORD PTR [ebp-0x94],eax
  40138e:	or     DWORD PTR ds:0x42a16b,0x36f8
  401398:	lea    eax,[ebp-0x48]
  40139b:	mov    DWORD PTR [ebp-0x90],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0xa0]
  4013a7:	inc    DWORD PTR ds:0x42a18b
  4013ad:	xor    eax,esi
  4013af:	sbb    DWORD PTR ds:0x42a18b,0x42a177
  4013b9:	add    eax,edi
  4013bb:	or     DWORD PTR ds:0x42a19b,0x42a15b
  4013c5:	mov    DWORD PTR [ebp-0xa0],eax
  4013cb:	sub    DWORD PTR ds:0x42a143,0x1d49
  4013d5:	lea    eax,[ebp-0xa0]
  4013db:	push   eax
  4013dc:	neg    eax
  4013de:	mov    eax,DWORD PTR [ebp+0xc]
  4013e1:	sub    DWORD PTR ds:0x42a17b,0x2c11
  4013eb:	xor    eax,esi
  4013ed:	add    eax,edi
  4013ef:	push   eax
  4013f0:	mov    eax,ds:0x42944f
  4013f5:	push   0x4293a5
  4013fa:	mov    DWORD PTR ds:0x42a157,0x524d
  401404:	push   DWORD PTR [eax]
  401406:	call   0x40a8fb
  40140b:	xor    edx,edx
  40140d:	add    edx,DWORD PTR ds:0x42a16f
  401413:	and    DWORD PTR ds:0x42a15f,edx
  401419:	mov    ebx,DWORD PTR [ebp-0x14]
  40141c:	mov    eax,DWORD PTR [ebp-0x18]
  40141f:	mov    DWORD PTR [ebp-0x58],eax
  401422:	mov    eax,ds:0x42a1d7
  401427:	mov    edx,DWORD PTR ds:0x42a21f
  40142d:	sub    edx,eax
  40142f:	sub    eax,DWORD PTR [eax+edx*1]
  401432:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  401439:	mov    eax,0xf89c85bb
  40143e:	mov    DWORD PTR [ebp-0x1c],eax
  401441:	xor    DWORD PTR ds:0x42a157,0x37ec
  40144b:	lea    ecx,[eax-0x2]
  40144e:	and    DWORD PTR ds:0x42a1b3,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42a1b3
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42a1b3,edx
  40146a:	cmp    DWORD PTR ds:0x42a1b3,0x18
  401471:	jae    0x4014be
  401477:	cmp    DWORD PTR ds:0x42a1b3,0x4
  40147e:	jge    0x4014be
  401484:	jmp    0x40149f
  401489:	push   DWORD PTR [ebp-0x18]
  40148c:	push   DWORD PTR [ebp-0x14]
  40148f:	push   0x42a1af
  401494:	push   0x249d
  401499:	call   DWORD PTR ds:0x42a2b3
  40149f:	cmp    DWORD PTR ds:0x42a1b3,0x3
  4014a6:	jne    0x4014b9
  4014ac:	mov    edx,DWORD PTR ds:0x42a1b3
  4014b2:	inc    edx
  4014b3:	mov    DWORD PTR ds:0x42a1b3,edx
  4014b9:	jmp    0x40145d
  4014be:	mov    DWORD PTR [ebp-0x28],ecx
  4014c1:	movzx  edx,WORD PTR ds:0x42a173
  4014c8:	sbb    DWORD PTR ds:0x42a157,edx
  4014ce:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4014d5:	mov    DWORD PTR [ebp-0x8],eax
  4014d8:	mov    eax,DWORD PTR [ebp-0x10]
  4014db:	xor    eax,esi
  4014dd:	and    DWORD PTR ds:0x42a14f,0x0
  4014e7:	jmp    0x4014fb
  4014ec:	xor    edx,edx
  4014ee:	or     edx,DWORD PTR ds:0x42a14f
  4014f4:	inc    edx
  4014f5:	mov    DWORD PTR ds:0x42a14f,edx
  4014fb:	cmp    DWORD PTR ds:0x42a14f,0x18
  401502:	jae    0x401551
  401508:	cmp    DWORD PTR ds:0x42a14f,0x5
  40150f:	jb     0x401551
  401515:	jmp    0x401532
  40151a:	push   0x42a167
  40151f:	push   DWORD PTR [ebp-0xc]
  401522:	push   0x4290bb
  401527:	push   0x429032
  40152c:	call   DWORD PTR ds:0x42a2b7
  401532:	cmp    DWORD PTR ds:0x42a14f,0x4
  401539:	jne    0x40154c
  40153f:	mov    edx,DWORD PTR ds:0x42a14f
  401545:	inc    edx
  401546:	mov    DWORD PTR ds:0x42a14f,edx
  40154c:	jmp    0x4014ec
  401551:	mov    edx,0xffcd8d91
  401556:	or     DWORD PTR ds:0x42a137,0x42a15b
  401560:	sub    edx,eax
  401562:	not    eax
  401564:	mov    DWORD PTR [ebp-0xc],edx
  401567:	mov    DWORD PTR ds:0x42a19f,0x2809
  401571:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401578:	mov    DWORD PTR ds:0x42a13b,ecx
  40157e:	mov    eax,DWORD PTR [ebp-0x8]
  401581:	mov    DWORD PTR ds:0x42a193,0x7f63
  40158b:	mov    DWORD PTR [ebp-0x3c],ebx
  40158e:	mov    DWORD PTR ds:0x42a193,0x4784
  401598:	cmp    eax,ecx
  40159a:	mov    DWORD PTR ds:0x42a1d3,0x12a
  4015a4:	je     0x40185b
  4015aa:	and    eax,ecx
  4015ac:	mov    eax,DWORD PTR [ebp-0x10]
  4015af:	and    DWORD PTR ds:0x42a163,0x0
  4015b9:	jmp    0x4015cb
  4015be:	mov    ecx,DWORD PTR ds:0x42a163
  4015c4:	inc    ecx
  4015c5:	mov    DWORD PTR ds:0x42a163,ecx
  4015cb:	cmp    DWORD PTR ds:0x42a163,0x10
  4015d2:	jae    0x401614
  4015d8:	cmp    DWORD PTR ds:0x42a163,0x6
  4015df:	jbe    0x401614
  4015e5:	jmp    0x4015f5
  4015ea:	push   0x4c56
  4015ef:	call   DWORD PTR ds:0x42a2bf
  4015f5:	cmp    DWORD PTR ds:0x42a163,0x5
  4015fc:	jne    0x40160f
  401602:	mov    ecx,DWORD PTR ds:0x42a163
  401608:	inc    ecx
  401609:	mov    DWORD PTR ds:0x42a163,ecx
  40160f:	jmp    0x4015be
  401614:	mov    ecx,DWORD PTR [ebp-0x10]
  401617:	sbb    DWORD PTR ds:0x42a13f,0x6da3
  401621:	xor    eax,esi
  401623:	xor    ecx,esi
  401625:	or     DWORD PTR ds:0x42a193,0x42a197
  40162f:	lea    ecx,[eax+ecx*1+0x64e5de]
  401636:	xor    eax,DWORD PTR ds:0x42a1c7
  40163c:	mov    eax,DWORD PTR [ebp-0xc]
  40163f:	xor    edx,edx
  401641:	div    ecx
  401643:	sub    ecx,eax
  401645:	mov    eax,DWORD PTR [ebp-0x8]
  401648:	mov    ecx,DWORD PTR [ebp-0x10]
  40164b:	sbb    DWORD PTR ds:0x42a18f,0x52cd
  401655:	xor    eax,esi
  401657:	xor    ecx,esi
  401659:	sub    eax,ecx
  40165b:	cmp    edx,eax
  40165d:	mov    DWORD PTR ds:0x42a15b,0x4928
  401667:	jne    0x401805
  40166d:	add    DWORD PTR ds:0x42a1ab,edi
  401673:	mov    eax,DWORD PTR [ebp-0xc]
  401676:	add    DWORD PTR ds:0x42a17b,ebx
  40167c:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  401683:	mov    eax,DWORD PTR [ebp-0x28]
  401686:	xor    DWORD PTR ds:0x42a16f,0x3725
  401690:	mov    ecx,DWORD PTR [ebp-0x18]
  401693:	add    DWORD PTR ds:0x42a13f,0x6412
  40169d:	xor    eax,esi
  40169f:	xor    ecx,esi
  4016a1:	add    eax,edi
  4016a3:	xor    DWORD PTR ds:0x42a15f,0x42a18b
  4016ad:	add    ecx,edi
  4016af:	mov    BYTE PTR [ebp-0x21],dl
  4016b2:	cmp    eax,ecx
  4016b4:	jae    0x4017dd
  4016ba:	lea    ecx,[eax-0x3272ef]
  4016c0:	mov    DWORD PTR ds:0x42a183,0x1c
  4016ca:	cmp    DWORD PTR ds:0x42a183,0x0
  4016d1:	je     0x401709
  4016d7:	cmp    DWORD PTR ds:0x42a183,0x23
  4016de:	jg     0x401709
  4016e4:	jmp    0x4016f7
  4016e9:	push   DWORD PTR [ebp-0x20]
  4016ec:	push   0x5db4
  4016f1:	call   DWORD PTR ds:0x42a2c3
  4016f7:	mov    edx,DWORD PTR ds:0x42a183
  4016fd:	dec    edx
  4016fe:	mov    DWORD PTR ds:0x42a183,edx
  401704:	jmp    0x4016ca
  401709:	mov    DWORD PTR [ebp-0x14],ecx
  40170c:	xor    DWORD PTR ds:0x42a1af,ecx
  401712:	mov    edx,DWORD PTR [ebp-0x14]
  401715:	xor    edx,esi
  401717:	add    edx,0x7f55d8fb
  40171d:	mov    DWORD PTR ds:0x42a14b,0x52dc
  401727:	lea    ecx,[ebp+eax*4-0xb4]
  40172e:	mov    DWORD PTR ds:0x42a16b,0x1786
  401738:	mov    DWORD PTR [ecx],edx
  40173a:	not    edx
  40173c:	mov    edx,DWORD PTR [ecx]
  40173e:	mov    DWORD PTR ds:0x42a13f,0x42a6
  401748:	cmp    edx,0x244ecb9c
  40174e:	mov    DWORD PTR ds:0x42a187,0x6943
  401758:	jbe    0x40177d
  40175e:	add    DWORD PTR ds:0x42a147,0x3ac8
  401768:	add    DWORD PTR [ecx],0x405fcdd
  40176e:	mov    DWORD PTR ds:0x42a17b,0x6763
  401778:	jmp    0x40178d
  40177d:	add    DWORD PTR ds:0x42a12b,0x42a18b
  401787:	add    DWORD PTR [ecx],0xfdaf4323
  40178d:	sub    ecx,0x38f7
  401793:	mov    ecx,DWORD PTR [ebp-0x18]
  401796:	xor    DWORD PTR ds:0x42a1a3,0x8c7
  4017a0:	xor    ecx,esi
  4017a2:	dec    DWORD PTR ds:0x42a137
  4017a8:	inc    eax
  4017a9:	sbb    DWORD PTR ds:0x42a1ab,0x42a1bb
  4017b3:	inc    DWORD PTR [ebp-0x14]
  4017b6:	add    DWORD PTR ds:0x42a1cf,0x42a16f
  4017c0:	add    ecx,edi
  4017c2:	cmp    eax,ecx
  4017c4:	mov    DWORD PTR ds:0x42a1af,0x74e1
  4017ce:	jb     0x40170c
  4017d4:	not    DWORD PTR ds:0x42a18b
  4017da:	mov    dl,BYTE PTR [ebp-0x21]
  4017dd:	xor    DWORD PTR ds:0x42a12f,edi
  4017e3:	mov    eax,DWORD PTR [ebp-0x34]
  4017e6:	xor    al,0xa8
  4017e8:	mov    cl,0x11
  4017ea:	sub    cl,al
  4017ec:	add    dl,cl
  4017ee:	mov    ecx,DWORD PTR [ebp-0x1c]
  4017f1:	xor    cl,0xa8
  4017f4:	sub    cl,0x11
  4017f7:	ror    dl,cl
  4017f9:	xor    eax,eax
  4017fb:	mov    eax,DWORD PTR [ebp-0xc]
  4017fe:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401805:	mov    eax,DWORD PTR [ebp-0xc]
  401808:	mov    ecx,DWORD PTR [ebp-0x28]
  40180b:	sub    eax,edi
  40180d:	xor    eax,esi
  40180f:	cmp    eax,ecx
  401811:	jne    0x40183b
  401817:	mov    eax,DWORD PTR [ebp-0x8]
  40181a:	mov    ecx,DWORD PTR [ebp-0x10]
  40181d:	xor    eax,esi
  40181f:	xor    ecx,esi
  401821:	sub    eax,ecx
  401823:	sub    eax,edi
  401825:	xor    eax,esi
  401827:	mov    DWORD PTR [ebp-0x8],eax
  40182a:	mov    eax,DWORD PTR [ebp-0x10]
  40182d:	xor    eax,esi
  40182f:	mov    ecx,0xffcd8d91
  401834:	sub    ecx,eax
  401836:	jmp    0x40184a
  40183b:	mov    eax,DWORD PTR [ebp-0x10]
  40183e:	xor    eax,esi
  401840:	mov    ecx,0xffcd8d11
  401845:	sub    ecx,eax
  401847:	add    ecx,DWORD PTR [ebp-0xc]
  40184a:	mov    DWORD PTR [ebp-0xc],ecx
  40184d:	mov    eax,DWORD PTR [ebp-0x8]
  401850:	cmp    eax,0xf89c85b9
  401855:	jne    0x4015aa
  40185b:	mov    DWORD PTR [ebp-0x34],0x9
  401862:	mov    ecx,DWORD PTR [ebp+0x8]
  401865:	xor    ecx,esi
  401867:	add    ecx,edi
  401869:	jmp    0x40a889
  40186e:	lea    eax,[ecx+ebx*1]
  401871:	mov    DWORD PTR [ebp-0x2c],eax
  401874:	mov    eax,DWORD PTR [ebp-0x58]
  401877:	sub    eax,ecx
  401879:	mov    DWORD PTR [ebp-0x1c],eax
  40187c:	mov    eax,DWORD PTR [ebp-0x1c]
  40187f:	mov    DWORD PTR [ebp-0x14],eax
  401882:	mov    eax,DWORD PTR [ebp-0x2c]
  401885:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  40188c:	mov    DWORD PTR [ebp-0x54],eax
  40188f:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  401896:	mov    eax,DWORD PTR [ebp-0x38]
  401899:	xor    eax,esi
  40189b:	add    eax,edi
  40189d:	mov    DWORD PTR [ebp-0x10],eax
  4018a0:	mov    eax,DWORD PTR [ebp-0x38]
  4018a3:	xor    eax,esi
  4018a5:	add    eax,edi
  4018a7:	mov    DWORD PTR [ebp-0x8],eax
  4018aa:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  4018b1:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  4018b8:	mov    eax,DWORD PTR [ebp-0x38]
  4018bb:	mov    edx,DWORD PTR [ebp-0x14]
  4018be:	xor    eax,esi
  4018c0:	add    eax,edi
  4018c2:	cmp    edx,eax
  4018c4:	je     0x40a87d
  4018ca:	mov    eax,DWORD PTR [ebp-0x20]
  4018cd:	xor    eax,esi
  4018cf:	mov    edx,0xffcd8d11
  4018d4:	sub    edx,eax
  4018d6:	add    edx,DWORD PTR [ebp-0x14]
  4018d9:	mov    eax,DWORD PTR [ebp-0x20]
  4018dc:	mov    ebx,DWORD PTR [ebp-0x10]
  4018df:	xor    eax,esi
  4018e1:	add    eax,edi
  4018e3:	imul   eax,ebx
  4018e6:	cmp    eax,edx
  4018e8:	ja     0x40a87a
  4018ee:	mov    edx,DWORD PTR [ebp-0x10]
  4018f1:	mov    eax,DWORD PTR [ebp-0x14]
  4018f4:	mov    ebx,DWORD PTR [ebp-0x2c]
  4018f7:	sub    eax,edx
  4018f9:	xor    ebx,esi
  4018fb:	xor    edx,edx
  4018fd:	add    ebx,edi
  4018ff:	div    ebx
  401901:	mov    DWORD PTR [ebp-0x8],eax
  401904:	mov    eax,DWORD PTR [ebp-0x44]
  401907:	mov    edx,DWORD PTR [ebp-0x8]
  40190a:	xor    eax,esi
  40190c:	add    eax,edi
  40190e:	cmp    edx,eax
  401910:	jbe    0x401920
  401916:	mov    eax,DWORD PTR [ebp-0x44]
  401919:	xor    eax,esi
  40191b:	add    eax,edi
  40191d:	mov    DWORD PTR [ebp-0x8],eax
  401920:	mov    eax,DWORD PTR [ebp-0x2c]
  401923:	mov    edx,DWORD PTR [ebp-0x8]
  401926:	xor    eax,esi
  401928:	add    eax,edi
  40192a:	imul   eax,edx
  40192d:	mov    DWORD PTR [ebp-0x8],eax
  401930:	mov    eax,DWORD PTR [ebp-0x38]
  401933:	mov    edx,DWORD PTR [ebp-0x8]
  401936:	xor    eax,esi
  401938:	add    eax,edi
  40193a:	cmp    edx,eax
  40193c:	je     0x40a863
  401942:	mov    eax,DWORD PTR [ebp-0x8]
  401945:	mov    DWORD PTR [ebp-0x18],eax
  401948:	mov    eax,DWORD PTR [ebp-0x10]
  40194b:	add    eax,DWORD PTR [ebp-0x54]
  40194e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  401955:	mov    DWORD PTR [ebp-0x8],eax
  401958:	mov    eax,0xf89c85ba
  40195d:	mov    DWORD PTR [ebp-0x28],eax
  401960:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  401967:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  40196e:	mov    DWORD PTR [ebp-0x30],eax
  401971:	mov    eax,DWORD PTR [ebp-0x1c]
  401974:	xor    eax,esi
  401976:	add    eax,edi
  401978:	jmp    0x40613f
  40197d:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  401984:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40198b:	mov    eax,DWORD PTR [ebp-0x30]
  40198e:	mov    edx,DWORD PTR [ebp-0xc]
  401991:	xor    eax,esi
  401993:	add    eax,edi
  401995:	imul   eax,edx
  401998:	mov    edx,DWORD PTR [ebp-0x8]
  40199b:	mov    al,BYTE PTR [eax+edx*1]
  40199e:	mov    BYTE PTR [ebp-0x1],al
  4019a1:	mov    eax,DWORD PTR [ebp-0x30]
  4019a4:	mov    edx,DWORD PTR [ebp-0xc]
  4019a7:	xor    eax,esi
  4019a9:	add    eax,edi
  4019ab:	imul   eax,edx
  4019ae:	mov    edx,DWORD PTR [ebp-0x5c]
  4019b1:	xor    edx,esi
  4019b3:	add    eax,edx
  4019b5:	mov    edx,DWORD PTR [ebp-0x8]
  4019b8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  4019c0:	mov    edx,DWORD PTR [ebp-0x4c]
  4019c3:	xor    edx,esi
  4019c5:	lea    eax,[edx+eax*1+0x3272ef]
  4019cc:	movzx  edx,BYTE PTR [ebp-0x1]
  4019d0:	xor    edx,eax
  4019d2:	mov    BYTE PTR [ebp-0x1],dl
  4019d5:	mov    al,BYTE PTR [ebp-0x1]
  4019d8:	mov    edx,DWORD PTR [ebp-0x30]
  4019db:	mov    ebx,DWORD PTR [ebp-0xc]
  4019de:	xor    edx,esi
  4019e0:	add    edx,edi
  4019e2:	jmp    0x403d52
  4019e7:	and    ebx,DWORD PTR [eax-0x16]
  4019ea:	daa    
  4019eb:	lea    eax,[edi+0x3005549b]
  4019f1:	repz rcr DWORD PTR [eax+0x7aa85119],1
  4019f8:	jp     0x401a74
  4019fa:	jp     0x401a2b
  4019fc:	pop    edi
  4019fd:	jp     0x401a79
  4019ff:	and    DWORD PTR [eax],ebp
  401a01:	daa    
  401a02:	cmp    eax,0x2f1b3125
  401a07:	jno    0x401a43
  401a09:	jne    0x401a81
  401a0b:	sbb    dh,BYTE PTR [edi+0x6a]
  401a0e:	push   0x69
  401a10:	inc    edx
  401a11:	rcr    eax,1
  401a13:	std    
  401a14:	ins    BYTE PTR es:[edi],dx
  401a15:	push   esp
  401a16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  401a1a:	jl     0x401a85
  401a1c:	gs iret 
  401a1e:	pop    ecx
  401a1f:	dec    edx
  401a20:	cmp    al,0x88
  401a22:	cli    
  401a23:	xchg   edi,eax
  401a24:	xchg   BYTE PTR [edi+0x49],ah
  401a27:	jg     0x401a70
  401a29:	mov    WORD PTR [esi+0x3bb2bc7f],?
  401a2f:	sub    bh,bh
  401a31:	jbe    0x401a0b
  401a33:	cli    
  401a34:	arpl   WORD PTR [edi+0x1e],di
  401a37:	jmp    0xe9fae381
  401a3c:	xchg   edi,eax
  401a3d:	and    ebx,esi
  401a3f:	mov    esi,DWORD PTR ds:0x8aab650f
  401a45:	rol    BYTE PTR [edi],1
  401a47:	imul   ebx,ecx,0xfa0ee010
  401a4d:	ss and al,0x54
  401a50:	or     BYTE PTR [esi],dh
  401a52:	imul   esi,DWORD PTR [ebp+eax*8-0x51],0x23
  401a57:	pop    ebp
  401a58:	adc    DWORD PTR [esi+0x2b55f5ff],esi
  401a5e:	add    BYTE PTR [edx-0x2c],0x5b
  401a62:	add    eax,0xbd84fa1a
  401a67:	jae    0x401a42
  401a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6a:	pop    edi
  401a6b:	mov    edi,DWORD PTR [ebp+0x4d922017]
  401a71:	add    ebx,DWORD PTR [esi+0xb838238]
  401a77:	fisubr DWORD PTR [ecx]
  401a79:	bound  ecx,QWORD PTR [ecx-0xc9fbcc0]
  401a7f:	iret   
  401a80:	mov    dh,BYTE PTR ds:0xc8c7cc95
  401a86:	xchg   esp,eax
  401a87:	ins    DWORD PTR es:[edi],dx
  401a88:	lock push ecx
  401a8a:	bound  ecx,QWORD PTR [eax+0x8]
  401a8d:	add    eax,DWORD PTR ds:[esi+0x13]
  401a91:	test   eax,0x4cb7ca4b
  401a96:	fcom   QWORD PTR [eax]
  401a98:	data16 stc 
  401a9a:	bound  esp,QWORD PTR [esi-0x4f]
  401a9d:	add    eax,0x5204bf74
  401aa2:	sbb    eax,0x387da9c2
  401aa7:	jb     0x401a9f
  401aa9:	jo     0x401a7e
  401aab:	ret    
  401aac:	pop    esp
  401aad:	add    eax,0x34a3b0b2
  401ab2:	push   esp
  401ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ab4:	in     al,0x86
  401ab6:	jge    0x401ad2
  401ab8:	scas   eax,DWORD PTR es:[edi]
  401ab9:	push   esp
  401aba:	mov    DWORD PTR [ecx],ebp
  401abc:	add    al,0xb4
  401abe:	sub    DWORD PTR [ebx+ebp*4-0x70],eax
  401ac2:	ja     0x401b26
  401ac4:	adc    dh,bl
  401ac6:	es out dx,eax
  401ac8:	jb     0x401ab1
  401aca:	lock lock test BYTE PTR gs:[esi+0x51],bh
  401ad0:	xor    ch,BYTE PTR ds:0x5fa84269
  401ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ad7:	fcom   QWORD PTR [esi-0x14dc72d]
  401add:	add    bh,BYTE PTR [ebx-0x5a5517ac]
  401ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ae4:	cmp    esp,esp
  401ae6:	inc    edx
  401ae7:	jmp    0xbb09:0xe6ed4343
  401aee:	mov    bl,0xe0
  401af0:	mov    esi,edi
  401af2:	sar    BYTE PTR ds:0xe82ea63c,0x7c
  401af9:	mov    edx,DWORD PTR [esi+0x14d1085]
  401aff:	inc    esp
  401b00:	stc    
  401b01:	pop    edx
  401b02:	sar    BYTE PTR [eax],1
  401b04:	out    dx,eax
  401b05:	or     BYTE PTR [edi+0xe],0x39
  401b09:	scas   al,BYTE PTR es:[edi]
  401b0a:	sbb    DWORD PTR [ebx+0x3d],esi
  401b0d:	or     eax,DWORD PTR [eax-0x1b5a68bd]
  401b13:	mov    ah,0x1e
  401b15:	jno    0x401b2d
  401b17:	pop    ecx
  401b18:	push   ds
  401b19:	xchg   BYTE PTR [edi-0x7bfe0391],bl
  401b1f:	fidiv  WORD PTR [eax-0x2ee65ca]
  401b25:	paddd  mm4,mm1
  401b28:	das    
  401b29:	adc    al,0x3b
  401b2b:	mov    cl,0x92
  401b2d:	les    esi,FWORD PTR [ecx+0x0]
  401b30:	je     0x401ac7
  401b32:	or     BYTE PTR [ebx-0x21246e3],dl
  401b38:	jg     0x401bb2
  401b3a:	sub    eax,0x82b7713f
  401b3f:	xlat   BYTE PTR ds:[ebx]
  401b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b41:	xchg   ecx,eax
  401b42:	jp     0x401b7b
  401b44:	mov    DWORD PTR [edx+ebx*4],0x7bc5cfa6
  401b4b:	retf   
  401b4c:	jo     0x401af0
  401b4e:	mov    dl,0xae
  401b50:	or     DWORD PTR [eax+eiz*1+0x28bf32ed],eax
  401b57:	ins    DWORD PTR es:[edi],dx
  401b58:	test   DWORD PTR [edx],edi
  401b5a:	or     eax,0x1037be8e
  401b5f:	mov    al,ds:0x14843f09
  401b64:	bound  ecx,QWORD PTR [edi]
  401b66:	cmp    DWORD PTR [esi-0x4f9af4a9],0x59
  401b6d:	mov    ch,0xcb
  401b6f:	lds    esi,FWORD PTR [edx]
  401b71:	xchg   esp,eax
  401b72:	gs retf 0x4963
  401b76:	push   edx
  401b77:	(bad)  
  401b78:	retf   
  401b79:	jmp    0xa583:0x7b005809
  401b80:	cmp    bh,BYTE PTR [ebp-0x6b]
  401b83:	pop    eax
  401b84:	cmp    ch,dl
  401b86:	mov    dh,0xff
  401b88:	mov    BYTE PTR [ecx],bh
  401b8a:	jp     0x401b4c
  401b8c:	iret   
  401b8d:	aas    
  401b8e:	jmp    0x94f10353
  401b93:	imul   eax,DWORD PTR ds:0xd6280c3b,0x22d525dd
  401b9d:	rcl    eax,0xf0
  401ba0:	push   edi
  401ba1:	repz push ebp
  401ba3:	outs   dx,DWORD PTR ds:[esi]
  401ba4:	sti    
  401ba5:	cmp    al,0x6
  401ba8:	add    DWORD PTR [esi+0x49f5a085],eax
  401bae:	in     al,dx
  401baf:	xchg   ebp,eax
  401bb0:	aad    0x7e
  401bb2:	sbb    BYTE PTR [ebx+ebx*8-0x15],0xbd
  401bb7:	fcom   QWORD PTR [ebx]
  401bb9:	pop    ebx
  401bba:	lahf   
  401bbb:	ret    0x74e0
  401bbe:	adc    al,0x3a
  401bc0:	cwde   
  401bc1:	out    dx,al
  401bc2:	popa   
  401bc3:	int    0xff
  401bc5:	cmp    al,0x17
  401bc7:	jne    0x401b73
  401bc9:	mov    ecx,0x3ee1a513
  401bce:	ret    
  401bcf:	push   edx
  401bd0:	push   ebp
  401bd1:	js     0x401b74
  401bd3:	daa    
  401bd4:	xor    dh,0x9a
  401bd7:	(bad)
  401bda:	mov    DWORD PTR [edi-0x16e1e31d],esp
  401be0:	sbb    eax,esi
  401be2:	jo     0x401c45
  401be4:	push   ss
  401be5:	xchg   ecx,eax
  401be6:	(bad)  
  401be8:	in     eax,0xc5
  401bea:	(bad)  
  401bec:	push   es
  401bed:	test   BYTE PTR [bx-0x1e],0x8e
  401bf2:	call   0x51683ded
  401bf7:	sub    al,0xf8
  401bf9:	jl     0x401c3b
  401bfb:	cdq    
  401bfc:	fs pop edx
  401bfe:	loopne 0x401b95
  401c00:	icebp  
  401c01:	js     0x401bb2
  401c03:	pop    esp
  401c04:	lods   al,BYTE PTR ds:[esi]
  401c05:	and    ebx,DWORD PTR [ecx]
  401c07:	loope  0x401c0d
  401c09:	mov    esp,0x8bd3b6a9
  401c0e:	mov    sp,ax
  401c11:	fiadd  DWORD PTR ds:0xde2c0ab0
  401c17:	popa   
  401c18:	test   al,0xe8
  401c1a:	push   ecx
  401c1b:	mov    al,ds:0xcf601297
  401c20:	or     bl,0x70
  401c23:	sbb    DWORD PTR [ebx],edx
  401c25:	adc    ch,BYTE PTR [ecx]
  401c27:	mov    DWORD PTR [ecx+eax*4],esi
  401c2a:	outs   dx,DWORD PTR ds:[esi]
  401c2b:	add    cl,BYTE PTR [ecx+ebp*8+0x14d9502c]
  401c32:	sub    bh,BYTE PTR [ebx+eax*1+0x22dff60b]
  401c39:	imul   edx,edx,0xffffffe2
  401c3c:	and    bl,BYTE PTR [esi]
  401c3e:	rol    DWORD PTR [ecx+ebp*8],cl
  401c41:	inc    esp
  401c42:	hlt    
  401c43:	(bad)  
  401c44:	ficomp WORD PTR ds:0xe0c0ea69
  401c4a:	int3   
  401c4b:	(bad)  
  401c4c:	in     al,dx
  401c4d:	pop    edx
  401c4e:	mov    bl,0xcb
  401c50:	pushf  
  401c51:	lock cmp al,0x7b
  401c54:	fist   DWORD PTR [eax]
  401c56:	int3   
  401c57:	pushf  
  401c58:	push   0xffffffed
  401c5a:	js     0x401c7a
  401c5c:	and    bl,BYTE PTR [ecx-0x49]
  401c5f:	push   ss
  401c60:	ficom  WORD PTR [ebp+0x1d6fea80]
  401c66:	push   ds
  401c67:	sbb    eax,0x2198cc7
  401c6c:	mov    al,ds:0x53fe5d43
  401c71:	int    0x41
  401c73:	(bad)
  401c76:	pop    es
  401c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c78:	pop    edi
  401c79:	cs aas 
  401c7b:	xchg   esp,eax
  401c7c:	ds ins DWORD PTR es:[edi],dx
  401c7e:	in     al,dx
  401c7f:	mov    ebp,0x9cd587fd
  401c84:	xchg   BYTE PTR [esi-0x12537512],ch
  401c8a:	mov    cl,0x4d
  401c8c:	jae    0x401cf7
  401c8e:	pop    ss
  401c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c90:	lods   al,BYTE PTR ds:[esi]
  401c91:	jo     0x401ce8
  401c93:	sub    cl,BYTE PTR [esi-0x164ed17f]
  401c99:	test   DWORD PTR [ecx+edi*8],ebp
  401c9c:	mov    al,ds:0x183001cf
  401ca1:	ror    DWORD PTR [esi-0x55d9fd0b],1
  401ca7:	add    ebp,DWORD PTR [ecx+0x23]
  401caa:	xlat   BYTE PTR ds:[ebx]
  401cab:	in     al,dx
  401cac:	jns    0x401d0a
  401cae:	dec    esi
  401caf:	je     0x401c9d
  401cb1:	lods   eax,DWORD PTR ds:[esi]
  401cb2:	dec    ecx
  401cb3:	push   edi
  401cb4:	(bad)  
  401cb5:	sbb    DWORD PTR ds:[esi-0x688dd56f],esp
  401cbc:	sbb    al,0x55
  401cbe:	sahf   
  401cbf:	mov    ah,0xed
  401cc2:	mov    dh,0x40
  401cc4:	shl    BYTE PTR [edx],1
  401cc6:	adc    edi,ebx
  401cc8:	add    al,0xdc
  401cca:	stos   DWORD PTR es:[edi],eax
  401ccb:	sti    
  401ccc:	inc    BYTE PTR [edi]
  401cce:	sbb    DWORD PTR [ecx],esp
  401cd0:	xchg   ebx,eax
  401cd1:	push   ebx
  401cd2:	adc    DWORD PTR [edi-0x419f2439],ebx
  401cd8:	hlt    
  401cd9:	adc    eax,0x3312bf65
  401cde:	ret    0x50b
  401ce1:	adc    al,0x81
  401ce3:	push   ebx
  401ce4:	sub    esp,DWORD PTR [edx+0x20]
  401ce7:	outs   dx,BYTE PTR ds:[esi]
  401ce8:	xchg   DWORD PTR [edx],ecx
  401cea:	or     edi,eax
  401cec:	cmp    DWORD PTR [edx],ecx
  401cee:	arpl   ax,bx
  401cf0:	hlt    
  401cf1:	jge    0x401ce5
  401cf3:	dec    ebx
  401cf4:	xchg   ecx,eax
  401cf5:	pop    esp
  401cf6:	xor    DWORD PTR [eax+eax*8-0x4c24ca01],0xffffffa5
  401cfe:	test   al,0x67
  401d00:	pop    ecx
  401d01:	arpl   dx,cx
  401d03:	xchg   ecx,eax
  401d04:	scas   eax,DWORD PTR es:[edi]
  401d05:	sub    BYTE PTR [edi],cl
  401d07:	and    BYTE PTR [eax],cl
  401d09:	in     eax,0x7e
  401d0b:	lods   al,BYTE PTR ds:[esi]
  401d0c:	test   DWORD PTR [eax-0xe],ebx
  401d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d10:	nop
  401d11:	fdivr  DWORD PTR [eax]
  401d13:	mov    bh,0xbf
  401d15:	dec    ebp
  401d16:	lahf   
  401d17:	cmp    esp,0xffffffd8
  401d1a:	test   eax,0x76de0e25
  401d1f:	and    cl,dh
  401d21:	aad    0x3e
  401d23:	inc    esp
  401d24:	jmp    0x401d1f
  401d26:	inc    ebx
  401d27:	out    dx,eax
  401d28:	pushf  
  401d29:	adc    ah,al
  401d2b:	xor    al,0x9
  401d2d:	mov    ebp,0x351a156c
  401d32:	mov    ecx,edx
  401d34:	inc    ebp
  401d35:	imul   edi,DWORD PTR ds:0x272f76ed,0xffffffba
  401d3c:	bound  ebp,QWORD PTR [edi-0x35]
  401d3f:	inc    esi
  401d40:	scas   al,BYTE PTR es:[edi]
  401d41:	add    BYTE PTR [ebp-0x2e],dh
  401d44:	popf   
  401d45:	retf   0x9801
  401d48:	pusha  
  401d49:	daa    
  401d4a:	aas    
  401d4b:	adc    BYTE PTR [edx],bh
  401d4d:	popf   
  401d4e:	call   0xac66c3d2
  401d53:	push   ds
  401d54:	sub    DWORD PTR [edi+edi*2+0x6b],ebp
  401d58:	xchg   ecx,eax
  401d59:	pop    es
  401d5a:	inc    BYTE PTR [edx+0x277521f3]
  401d60:	std    
  401d61:	adc    ebp,DWORD PTR [esi+0x5b07f389]
  401d67:	je     0x401d67
  401d69:	xchg   esp,eax
  401d6a:	test   al,0xeb
  401d6c:	fdiv   QWORD PTR [ebx+0x53]
  401d6f:	add    al,0x49
  401d71:	jne    0x401d99
  401d73:	(bad)  
  401d74:	xchg   ebx,eax
  401d75:	mov    esi,0xa910ee51
  401d7a:	or     eax,0xcd9446e1
  401d7f:	push   0xb455daa1
  401d84:	call   0xf68d919
  401d89:	sub    edi,esp
  401d8b:	popa   
  401d8c:	(bad)  
  401d8d:	fisubr DWORD PTR [edx-0x66]
  401d90:	sbb    BYTE PTR [ebx+0x66c70103],cl
  401d96:	dec    esi
  401d97:	jl     0x401e07
  401d99:	sbb    eax,0x5603d228
  401d9e:	lock stc 
  401da0:	inc    esp
  401da1:	jp     0x401da7
  401da3:	shl    esi,0x90
  401da6:	(bad)  
  401da7:	fcom   DWORD PTR [eax]
  401da9:	dec    eax
  401daa:	push   ss
  401dab:	sub    DWORD PTR [ebp+ebp*8-0x6b180cb8],ecx
  401db2:	sub    ah,BYTE PTR [eax]
  401db4:	pop    esi
  401db5:	adc    eax,DWORD PTR [ebp+0x7b]
  401db8:	stos   DWORD PTR es:[edi],eax
  401db9:	adc    eax,0x941c0c79
  401dbe:	mov    edx,0xdfd1998f
  401dc3:	aam    0x2a
  401dc5:	ins    DWORD PTR es:[edi],dx
  401dc6:	cmp    al,0x5e
  401dc8:	mov    ebp,0x35c7b899
  401dcd:	adc    esi,DWORD PTR [ebp+0xb189a4b]
  401dd3:	imul   esp,DWORD PTR [edi+0x4a],0x5e2e8986
  401dda:	xchg   ebp,eax
  401ddb:	loope  0x401dea
  401ddd:	pop    esp
  401dde:	sbb    esi,ebp
  401de0:	cs pop eax
  401de2:	jmp    0x7ae6aadd
  401de7:	inc    ebx
  401de8:	xlat   BYTE PTR ds:[ebx]
  401de9:	arpl   WORD PTR [edi],sp
  401deb:	shl    BYTE PTR [eax+0x24ded294],cl
  401df1:	xchg   DWORD PTR [eiz*4-0x36f28421],ebp
  401df8:	mov    dl,0x3a
  401dfa:	xcrypt-ctr (bad)
  401dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dfc:	fwait
  401dfd:	pop    edi
  401dfe:	bound  ecx,QWORD PTR [edx+0x7729a584]
  401e04:	dec    ebp
  401e05:	lock or DWORD PTR [ecx+0x4a],edi
  401e09:	inc    ax
  401e0b:	xchg   esi,eax
  401e0c:	sti    
  401e0d:	sbb    dh,BYTE PTR [eax]
  401e0f:	mov    ds:0x5dd20a85,eax
  401e14:	scas   al,BYTE PTR es:[edi]
  401e15:	test   bh,0xb0
  401e18:	sbb    ecx,DWORD PTR ds:0x6afbd9e8
  401e1e:	cmp    DWORD PTR [ecx+0x691a869b],eax
  401e24:	push   esp
  401e25:	cwde   
  401e26:	call   DWORD PTR [ebx+eiz*2-0x24]
  401e2a:	enter  0x1d2d,0xab
  401e2e:	lods   al,BYTE PTR ds:[esi]
  401e2f:	mov    ebp,0x60e9c866
  401e34:	dec    ebp
  401e35:	rol    BYTE PTR [edi-0x37],1
  401e38:	adc    DWORD PTR [ebp+ebp*1-0x76],ebx
  401e3c:	sub    eax,0x388af380
  401e41:	ja     0x401e13
  401e43:	mov    ds:0x738c40a,al
  401e48:	popf   
  401e49:	mov    ah,0xcd
  401e4b:	(bad)
  401e50:	jb     0x401e77
  401e52:	out    dx,al
  401e53:	add    al,0xce
  401e55:	inc    ebp
  401e56:	and    esp,ebx
  401e58:	mov    edi,0x5aa2e833
  401e5d:	icebp  
  401e5e:	xchg   ebp,eax
  401e5f:	lds    ebx,FWORD PTR [ecx-0x35]
  401e62:	dec    eax
  401e63:	cmp    al,0x2a
  401e65:	adc    ecx,eax
  401e67:	and    eax,edi
  401e69:	cmp    BYTE PTR [ecx+0x6b],cl
  401e6c:	int3   
  401e6d:	out    dx,eax
  401e6e:	and    bh,BYTE PTR [edx-0x2b58a545]
  401e74:	enter  0x8b8e,0x9
  401e78:	aaa    
  401e79:	xchg   BYTE PTR [esp+edx*4],bh
  401e7c:	je     0x401e5f
  401e7e:	sbb    eax,0x82e2f966
  401e83:	outs   dx,BYTE PTR ds:[esi]
  401e84:	add    dh,BYTE PTR [ebp*1+0x7eb6d6c0]
  401e8b:	sub    al,0x4b
  401e8d:	cld    
  401e8e:	inc    eax
  401e8f:	jp     0x401e94
  401e91:	push   esp
  401e92:	data16 sub bl,BYTE PTR [edx+0x66]
  401e96:	mov    esp,0x690c6ff0
  401e9b:	daa    
  401e9c:	aaa    
  401e9d:	mov    esp,0xba98f4d6
  401ea2:	cwde   
  401ea3:	jae    0x401f13
  401ea5:	xchg   ebp,eax
  401ea6:	aas    
  401ea7:	mov    cl,0x41
  401ea9:	test   DWORD PTR [edx],edi
  401eab:	mov    DWORD PTR [ebx-0x1c89c0ab],eax
  401eb1:	aaa    
  401eb2:	not    DWORD PTR [ecx-0x46]
  401eb5:	aad    0x83
  401eb7:	mov    ds:0xb942e281,al
  401ebc:	scas   eax,DWORD PTR es:[edi]
  401ebd:	xchg   ch,cl
  401ebf:	pop    ds
  401ec0:	adc    al,BYTE PTR [ecx-0x9a21f02]
  401ec6:	mov    bl,0x54
  401ec8:	cmp    BYTE PTR [ebx-0x675cd35e],0x21
  401ecf:	das    
  401ed0:	pusha  
  401ed1:	cli    
  401ed2:	xor    DWORD PTR [ebx+0x4e2b8276],eax
  401ed8:	pop    es
  401ed9:	(bad)  
  401eda:	int3   
  401edb:	sub    BYTE PTR [ecx+eiz*4+0x5b49d244],dh
  401ee2:	es push ss
  401ee4:	pop    ebx
  401ee5:	jecxz  0x401eba
  401ee7:	es daa 
  401ee9:	leave  
  401eea:	cmp    eax,0xe2917c8d
  401eef:	jae    0x401eef
  401ef1:	call   0x18ea:0xf0a675b
  401ef8:	ret    0x7ee7
  401efb:	pop    esi
  401efc:	and    ebx,ebp
  401efe:	inc    esi
  401eff:	lds    edi,FWORD PTR [edi]
  401f01:	jnp    0x401ebd
  401f03:	push   ebx
  401f04:	out    0xd8,al
  401f06:	test   eax,0x14253764
  401f0b:	in     al,0x63
  401f0d:	cli    
  401f0e:	push   0xece9d0c4
  401f13:	push   ds
  401f14:	mov    BYTE PTR [ecx-0x48],dl
  401f17:	jns    0x401f3a
  401f19:	cld    
  401f1a:	hlt    
  401f1b:	mov    bh,0xaf
  401f1d:	cmp    dh,al
  401f1f:	test   DWORD PTR [eax+0x5381da1f],0x6bb472ce
  401f29:	push   ebx
  401f2a:	loopne 0x401edb
  401f2c:	mov    eax,ds:0x8b013890
  401f31:	jp     0x401f6e
  401f33:	or     DWORD PTR [ecx+0x76],edx
  401f36:	push   0x860f326b
  401f3b:	daa    
  401f3c:	jle    0x401ed3
  401f3e:	mov    BYTE PTR [eax],bl
  401f40:	xchg   BYTE PTR [edx*8+0x32334a07],dh
  401f47:	mov    esi,0x67a6e629
  401f4c:	xchg   edi,eax
  401f4d:	daa    
  401f4e:	(bad)  
  401f50:	adc    BYTE PTR [edx-0x33],0x6
  401f54:	push   esi
  401f55:	clc    
  401f56:	outs   dx,DWORD PTR ds:[esi]
  401f57:	outs   dx,BYTE PTR ds:[esi]
  401f58:	jle    0x401fc5
  401f5a:	hlt    
  401f5b:	sbb    ch,BYTE PTR [edx]
  401f5d:	or     al,0x92
  401f5f:	pop    edx
  401f60:	pop    eax
  401f61:	mov    esi,0x2b01b548
  401f66:	inc    esi
  401f67:	in     al,0xab
  401f69:	or     BYTE PTR es:0x184553c9,ah
  401f70:	(bad)  
  401f71:	fadd   DWORD PTR [ecx-0x49]
  401f74:	arpl   WORD PTR [edx+0x41],si
  401f77:	mov    edi,0x209d3474
  401f7c:	rcl    BYTE PTR [edx],cl
  401f7e:	dec    eax
  401f7f:	out    dx,al
  401f80:	scas   al,BYTE PTR es:[edi]
  401f81:	or     al,0x9f
  401f83:	(bad)  
  401f84:	loope  0x401f21
  401f86:	jmp    0x401f3a
  401f88:	adc    eax,DWORD PTR [eax]
  401f8a:	jle    0x401fce
  401f8c:	jne    0x401f80
  401f8e:	mov    ds:0x9c2355af,eax
  401f93:	cld    
  401f94:	add    ebx,edi
  401f96:	(bad)  [eax]
  401f98:	or     bh,BYTE PTR [edi-0x1c]
  401f9b:	xchg   ecx,eax
  401f9c:	in     eax,dx
  401f9d:	(bad)  
  401f9f:	pop    ss
  401fa0:	pop    es
  401fa1:	cmp    eax,DWORD PTR [eax-0x2f769463]
  401fa7:	fidivr WORD PTR [ebp-0xd]
  401faa:	and    al,BYTE PTR [ebx+0x30]
  401fad:	stos   BYTE PTR es:[edi],al
  401fae:	jle    0x401fd2
  401fb0:	call   0x2729eff
  401fb5:	inc    ebx
  401fb6:	ins    DWORD PTR es:[edi],dx
  401fb7:	test   DWORD PTR [ebp+0x4f],edi
  401fba:	repnz inc edi
  401fbc:	ror    DWORD PTR [ebx+0x450ed75e],1
  401fc2:	aaa    
  401fc3:	push   ecx
  401fc4:	(bad)  
  401fc5:	mov    BYTE PTR [ecx],dl
  401fc7:	in     al,0x9b
  401fc9:	je     0x401fc8
  401fcb:	mov    al,ds:0xeda6b15
  401fd0:	lock fsub QWORD PTR [ebx+0x4a]
  401fd4:	push   ss
  401fd5:	jle    0x401f64
  401fd7:	test   BYTE PTR [edi-0x4b],0xe1
  401fdb:	jg     0x40203c
  401fdd:	mov    edi,0x85fe000e
  401fe2:	ss sub eax,0x1653d8ce
  401fe8:	data16 mov bh,0x64
  401feb:	jp     0x40205d
  401fed:	rol    DWORD PTR [eax+0x40],cl
  401ff0:	stos   DWORD PTR es:[edi],eax
  401ff1:	cmp    BYTE PTR [edi-0x750f493b],ch
  401ff7:	adc    eax,DWORD PTR [ebp-0x47]
  401ffa:	cmc    
  401ffb:	sub    BYTE PTR [ecx+0x1b],dl
  401ffe:	daa    
  401fff:	in     al,0xef
  402001:	(bad)  
  402002:	cmp    DWORD PTR [edx+eiz*8+0x2b],edx
  402006:	(bad)  
  402007:	and    dh,BYTE PTR [esi+0x45]
  40200a:	dec    ecx
  40200b:	xor    edx,ebx
  40200d:	aaa    
  40200e:	jmp    0x401f9e
  402010:	push   esi
  402011:	jg     0x402063
  402013:	jae    0x401fe2
  402015:	scas   eax,DWORD PTR es:[edi]
  402016:	rol    BYTE PTR [eax-0x4722e880],0xf7
  40201d:	mov    eax,ds:0x83c74fc7
  402022:	repz sbb DWORD PTR [esi],0xe73a89b6
  402029:	fild   QWORD PTR [esp+esi*8+0x2c]
  40202d:	daa    
  40202e:	sub    dl,BYTE PTR [edx+0x25353e0]
  402034:	test   DWORD PTR [esi+esi*8-0x26e7c3e0],eax
  40203b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40203c:	add    DWORD PTR [edx-0xca05878],0xffffffd1
  402043:	jmp    0xd704:0x69b54a09
  40204a:	dec    ecx
  40204b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40204c:	jg     0x402052
  40204e:	rcl    DWORD PTR [edi],1
  402050:	add    eax,esi
  402052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402053:	and    esi,DWORD PTR [eax-0x37]
  402056:	ret    0xf7f
  402059:	idiv   DWORD PTR [edi]
  40205b:	clc    
  40205c:	lock (bad) 
  40205e:	cmp    bh,ah
  402060:	iret   
  402061:	mov    ecx,0x8c24cb07
  402066:	cmp    ch,dl
  402068:	outs   dx,DWORD PTR ds:[esi]
  402069:	fucomp st(2)
  40206b:	call   0x7b6c7a39
  402070:	push   edi
  402071:	ficom  DWORD PTR [edi+0x40]
  402074:	mov    esi,0xd749bc71
  402079:	push   0xfffffff7
  40207b:	in     al,dx
  40207c:	scas   eax,DWORD PTR es:[edi]
  40207d:	jl     0x40205d
  40207f:	loop   0x4020a6
  402081:	outs   dx,BYTE PTR ds:[esi]
  402082:	xchg   ebp,eax
  402083:	(bad)  
  402084:	cwde   
  402085:	out    0x21,eax
  402087:	fwait
  402088:	cmp    eax,0x8e7600a2
  40208d:	push   ebx
  40208e:	je     0x402081
  402090:	arpl   bp,di
  402092:	out    0x2d,al
  402094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402095:	stos   DWORD PTR es:[edi],eax
  402096:	push   0x592450a8
  40209b:	fiadd  DWORD PTR [ebx]
  40209d:	(bad)  
  40209e:	clc    
  40209f:	imul   edx,DWORD PTR [esi],0xffffffe3
  4020a2:	cli    
  4020a3:	push   eax
  4020a4:	sub    DWORD PTR [edx-0x3b],ebx
  4020a7:	push   ds
  4020a8:	rol    BYTE PTR [ecx-0x4e],cl
  4020ab:	jne    0x40210d
  4020ad:	enter  0x611a,0xfc
  4020b1:	fldcw  WORD PTR [eax-0x3d543f0]
  4020b7:	repz cwde 
  4020b9:	mov    BYTE PTR [eax],ch
  4020bb:	nop
  4020bc:	fcomi  st,st(0)
  4020be:	call   0x943c2ebf
  4020c3:	cld    
  4020c4:	mov    ds,esp
  4020c6:	mov    esp,DWORD PTR [edx+0x37]
  4020c9:	and    BYTE PTR [esi+0x75],ah
  4020cc:	sbb    BYTE PTR [ebx-0x36ecf763],ch
  4020d2:	and    BYTE PTR [ecx+0x1f4be429],dl
  4020d8:	stc    
  4020d9:	test   BYTE PTR [edi],ch
  4020db:	fiadd  WORD PTR [ebx-0x1d8ccaeb]
  4020e1:	mov    esp,0x1bb2bfbb
  4020e6:	adc    al,BYTE PTR [ecx+0x66]
  4020e9:	das    
  4020ea:	mov    edx,0x421c5118
  4020ef:	and    eax,0x929db0ac
  4020f4:	push   0x19f814eb
  4020f9:	adc    ecx,DWORD PTR [ebx+0x65]
  4020fc:	int3   
  4020fd:	dec    ebx
  4020fe:	mov    ebx,DWORD PTR ds:0xc73931f0
  402104:	inc    edi
  402105:	aam    0xf5
  402107:	pop    ss
  402108:	pop    ecx
  402109:	jno    0x40215a
  40210b:	std    
  40210c:	lahf   
  40210d:	das    
  40210e:	inc    ebx
  40210f:	sub    ah,BYTE PTR [ebp-0x5b]
  402112:	pop    ds
  402113:	inc    ebp
  402114:	stc    
  402115:	push   esi
  402116:	daa    
  402117:	jecxz  0x4020d4
  402119:	js     0x40215c
  40211b:	stc    
  40211c:	fcmovu st,st(4)
  40211e:	push   esi
  40211f:	push   ecx
  402120:	call   0xc43500ed
  402125:	in     al,dx
  402126:	js     0x402195
  402128:	push   esi
  402129:	lds    edi,FWORD PTR [ebp+0x2a]
  40212c:	xchg   esi,eax
  40212d:	xor    eax,0x8248a66f
  402132:	arpl   WORD PTR [edx+0x7c],bx
  402135:	push   ebx
  402136:	imul   ebp,DWORD PTR [esi+0x7d],0xd97c8c9a
  40213d:	mov    edi,0xd576eb5e
  402142:	push   eax
  402143:	push   ebx
  402144:	xor    eax,0xfef8d243
  402149:	add    al,0x84
  40214b:	inc    esi
  40214c:	sbb    edx,DWORD PTR [ebp-0x635ee8dd]
  402152:	sub    esi,edi
  402154:	adc    BYTE PTR [eax+0x11],0x77
  402158:	outs   dx,BYTE PTR ds:[esi]
  402159:	xlat   BYTE PTR ds:[ebx]
  40215a:	sub    esi,DWORD PTR [eax+0x25]
  40215d:	rcr    dl,1
  40215f:	sub    edi,DWORD PTR ds:[ecx-0x75cb58ca]
  402166:	jg     0x4021ce
  402168:	cld    
  402169:	add    eax,0xf2ee355b
  40216e:	popf   
  40216f:	out    0xce,al
  402171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402172:	lds    ecx,FWORD PTR [edi+ebx*8-0x6d]
  402176:	add    edx,DWORD PTR [eax+0x3c]
  402179:	(bad)  [esi+0x53]
  40217c:	sub    dh,BYTE PTR [ecx]
  40217e:	mov    eax,0xecdf5f15
  402183:	iret   
  402184:	scas   al,BYTE PTR es:[edi]
  402185:	in     al,0x66
  402187:	cmp    BYTE PTR [ecx+eax*8],ah
  40218a:	dec    eax
  40218b:	test   eax,0x1fc64f2f
  402190:	fadd   QWORD PTR [si-0xb]
  402194:	aad    0x3
  402196:	xchg   esp,eax
  402197:	fmul   DWORD PTR ds:0x69f55b45
  40219d:	gs xchg ebp,esi
  4021a0:	push   cs
  4021a1:	es pop ss
  4021a3:	(bad)  
  4021a4:	sar    DWORD PTR [ecx+0x25d6c395],1
  4021aa:	pop    ecx
  4021ab:	outs   dx,BYTE PTR ds:[esi]
  4021ac:	sub    BYTE PTR [esi],bl
  4021ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021af:	xor    al,0xb0
  4021b1:	outs   dx,DWORD PTR ds:[esi]
  4021b2:	mov    ch,0xbc
  4021b4:	add    eax,0x89d690ab
  4021b9:	out    0xf4,al
  4021bb:	fld    DWORD PTR [ebp-0x29]
  4021be:	(bad)  
  4021bf:	ins    DWORD PTR es:[edi],dx
  4021c0:	mov    edx,gs
  4021c2:	push   es
  4021c3:	dec    ecx
  4021c4:	lods   al,BYTE PTR ds:[esi]
  4021c5:	js     0x402214
  4021c7:	mov    dl,0x15
  4021c9:	cwde   
  4021ca:	adc    al,0xb0
  4021cc:	rcl    BYTE PTR [edx+ebx*1-0x3c47ea2e],1
  4021d3:	push   ss
  4021d4:	mov    DWORD PTR [ebx+ebx*4],ecx
  4021d7:	lahf   
  4021d8:	(bad)  
  4021d9:	sbb    BYTE PTR [esi-0x42],bl
  4021dc:	ror    BYTE PTR [ecx+0x5c],cl
  4021df:	push   edx
  4021e0:	sub    bh,BYTE PTR [edx+0x64a77bc7]
  4021e6:	push   es
  4021e7:	lods   al,BYTE PTR ds:[esi]
  4021e8:	or     eax,0xa932c54c
  4021ed:	inc    ebx
  4021ee:	fcom   QWORD PTR [ecx]
  4021f0:	scas   al,BYTE PTR es:[edi]
  4021f1:	hlt    
  4021f2:	dec    edx
  4021f3:	in     al,0x50
  4021f5:	dec    ebp
  4021f6:	jp     0x4021d1
  4021f8:	mov    eax,0x3537cbf0
  4021fd:	pop    esp
  4021fe:	xlat   BYTE PTR ds:[ebx]
  4021ff:	test   al,0xa3
  402201:	int    0xb
  402203:	das    
  402204:	fnstsw WORD PTR [edx-0x13c7d324]
  40220a:	jo     0x4021eb
  40220c:	(bad)  
  40220d:	das    
  40220e:	into   
  40220f:	inc    ebx
  402210:	xor    esp,DWORD PTR [ebx]
  402212:	or     DWORD PTR [eax-0x59d5dd02],eax
  402218:	sbb    ah,BYTE PTR [esi]
  40221a:	sahf   
  40221b:	sub    eax,0xe04667c2
  402220:	cld    
  402221:	sbb    BYTE PTR [ebx+ecx*8+0x5d],cl
  402225:	pop    ss
  402226:	cli    
  402227:	pop    eax
  402228:	and    al,0x68
  40222a:	or     eax,0xdd02e6d9
  40222f:	and    al,0xfd
  402231:	xchg   edx,eax
  402232:	test   BYTE PTR [esi-0x142d3e68],bh
  402238:	popf   
  402239:	data16 out dx,al
  40223b:	jmp    0x6a9108fd
  402240:	add    al,dh
  402242:	pop    eax
  402243:	lahf   
  402244:	push   cs
  402245:	push   ss
  402246:	aas    
  402247:	adc    ebp,esi
  402249:	jl     0x402295
  40224b:	mov    dl,0xf
  40224d:	push   edx
  40224e:	mov    bh,0xc6
  402250:	ror    DWORD PTR [edi+0x5c],cl
  402253:	ror    BYTE PTR [ecx],0x81
  402256:	add    BYTE PTR [edi+0x7a],al
  402259:	xor    bl,BYTE PTR [ebx+0x38f7c2ed]
  40225f:	retf   
  402260:	std    
  402261:	push   eax
  402262:	loopne 0x40221c
  402264:	outs   dx,DWORD PTR ds:[esi]
  402265:	jno    0x40228a
  402267:	mov    ds:0x3dfac01e,al
  40226c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40226e:	add    ch,ah
  402270:	(bad)  
  402271:	sub    dl,ch
  402273:	mov    dh,0x4b
  402275:	test   al,0xe9
  402277:	xchg   ecx,eax
  402278:	pushf  
  402279:	adc    ebx,edi
  40227b:	scas   eax,DWORD PTR es:[edi]
  40227c:	out    dx,al
  40227d:	jp     0x40229a
  40227f:	adc    BYTE PTR [edi-0x6c],ah
  402282:	mov    bh,0xf6
  402284:	jl     0x40222a
  402286:	ins    DWORD PTR es:[edi],dx
  402287:	mov    ch,0x34
  402289:	fsubr  st,st(3)
  40228b:	inc    esi
  40228c:	rcl    DWORD PTR [ecx-0x3f],1
  40228f:	ss sahf 
  402291:	test   BYTE PTR [edi-0x5e8bdb41],cl
  402297:	push   esi
  402298:	dec    esp
  402299:	push   es
  40229a:	shr    DWORD PTR [ecx+0x41ecb6d6],cl
  4022a0:	loopne 0x4022a8
  4022a2:	sub    bh,ch
  4022a4:	mov    esp,0x3187ec5b
  4022a9:	stos   DWORD PTR es:[edi],eax
  4022aa:	cmp    al,0x6
  4022ac:	dec    esp
  4022ad:	jo     0x402300
  4022af:	(bad)  
  4022b0:	pop    edi
  4022b1:	push   0xffffff89
  4022b3:	pop    ecx
  4022b4:	ror    cl,0x6a
  4022b7:	imul   ebx,DWORD PTR [ebp-0x57],0x8dcf0494
  4022be:	ins    DWORD PTR es:[edi],dx
  4022bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022c0:	iret   
  4022c1:	mov    dh,BYTE PTR [edi]
  4022c3:	pop    edx
  4022c4:	cs loope 0x4022a6
  4022c7:	dec    ebp
  4022c8:	lahf   
  4022c9:	push   ecx
  4022ca:	loope  0x402253
  4022cc:	fild   DWORD PTR [ebx+ecx*4+0x66]
  4022d0:	inc    ebp
  4022d1:	adc    eax,0xbce2480f
  4022d6:	xor    DWORD PTR [esi],0x2b20b007
  4022dc:	xchg   ecx,eax
  4022dd:	ret    
  4022de:	fs pop esi
  4022e0:	leave  
  4022e1:	adc    DWORD PTR [esi],esi
  4022e3:	fs xchg ecx,eax
  4022e5:	aas    
  4022e6:	sub    al,0x19
  4022e8:	jmp    0x31e4:0xf3f7fc35
  4022ef:	xchg   edx,eax
  4022f0:	sbb    BYTE PTR [eax+0x3a],dh
  4022f3:	cs iret 
  4022f5:	ds jecxz 0x4022f9
  4022f8:	xor    al,BYTE PTR [edx-0x7]
  4022fb:	xchg   DWORD PTR ds:0x835e915a,eax
  402301:	jns    0x402310
  402303:	push   ss
  402304:	rcr    BYTE PTR [esi],1
  402306:	add    DWORD PTR [ebx],ebp
  402308:	push   ecx
  402309:	(bad)  
  40230a:	aas    
  40230b:	test   edi,esp
  40230d:	scas   al,BYTE PTR es:[edi]
  40230e:	mov    edx,0xb0b0b33b
  402313:	sti    
  402314:	mov    ecx,0xcc245036
  402319:	aaa    
  40231a:	mov    bl,0xd1
  40231c:	repz xor eax,eax
  40231f:	sub    al,0x43
  402321:	dec    edi
  402322:	cli    
  402323:	(bad)  
  402324:	repz jl 0x402395
  402327:	cmp    ch,BYTE PTR [ecx-0x1]
  40232a:	fcomi  st,st(0)
  40232c:	ss arpl bx,dx
  40232f:	(bad)  
  402330:	loopne 0x402336
  402332:	pop    ecx
  402333:	dec    ebp
  402334:	and    edx,DWORD PTR [ebp+0x7e218fd7]
  40233a:	stos   DWORD PTR es:[edi],eax
  40233b:	mov    bh,0x44
  40233d:	in     al,0x72
  40233f:	das    
  402340:	cmp    BYTE PTR [ebx+0x648fcf0f],ch
  402346:	in     al,0xcc
  402348:	leave  
  402349:	and    esi,DWORD PTR [edi-0x14]
  40234c:	cvtps2pd xmm4,xmm5
  40234f:	cmp    cl,dl
  402351:	sub    eax,0xb8b4721d
  402356:	xor    BYTE PTR [esi-0x59a4820e],dh
  40235c:	enter  0xe79,0x3a
  402360:	(bad)  [edx+0x5b]
  402363:	jmp    0xa762:0xb0bbe841
  40236a:	dec    eax
  40236b:	cld    
  40236c:	lods   al,BYTE PTR ds:[esi]
  40236d:	loope  0x402338
  40236f:	iret   
  402370:	in     al,0xe0
  402372:	ja     0x40239e
  402374:	push   0x3c
  402376:	stos   DWORD PTR es:[edi],eax
  402377:	out    dx,eax
  402378:	and    esp,DWORD PTR [edx-0x57]
  40237b:	adc    ecx,edx
  40237d:	(bad)  
  40237e:	in     eax,0x4f
  402380:	inc    esp
  402381:	out    0x2f,al
  402383:	mov    bl,0xa2
  402385:	push   eax
  402386:	retf   
  402387:	loop   0x4023b9
  402389:	and    eax,0x9ad6296b
  40238e:	mov    esp,0x4509489f
  402393:	in     al,0x98
  402395:	push   edx
  402396:	nop
  402397:	xchg   BYTE PTR [edx],ah
  402399:	sub    bh,BYTE PTR [ecx]
  40239b:	jp     0x402381
  40239d:	mov    dl,bl
  40239f:	ror    BYTE PTR [ebp+esi*1-0x7],1
  4023a3:	(bad)  
  4023a4:	idiv   esi
  4023a6:	and    edx,DWORD PTR [edx+ebx*1-0x4ffccb73]
  4023ad:	mov    WORD PTR [edi],ds
  4023af:	jecxz  0x402379
  4023b1:	lds    edi,FWORD PTR [eax+0x4c7065b0]
  4023b7:	or     bl,BYTE PTR [edi]
  4023b9:	mov    cl,BYTE PTR [edi-0x342b8ca8]
  4023bf:	push   eax
  4023c0:	mov    eax,?
  4023c2:	rcr    esi,cl
  4023c4:	mov    dl,0xc3
  4023c6:	mov    ebp,0xd2e23e84
  4023cb:	out    dx,al
  4023cc:	les    edi,FWORD PTR [ebx]
  4023ce:	repz mov edx,0x71e15d6f
  4023d4:	fcomp  QWORD PTR [eax-0x2f]
  4023d7:	pop    edi
  4023d8:	sbb    BYTE PTR [edi],0xdd
  4023db:	fs loopne 0x4023df
  4023de:	sbb    dh,ah
  4023e0:	mov    dh,0xf9
  4023e2:	sbb    al,BYTE PTR ds:0x95adfbf9
  4023e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e9:	out    0x5f,eax
  4023eb:	imul   ebx,DWORD PTR [ebp*8-0x69decf1a],0xb
  4023f3:	pushf  
  4023f4:	xchg   edi,eax
  4023f5:	jmp    0x4023bd
  4023f7:	out    dx,al
  4023f8:	xchg   esp,eax
  4023f9:	add    al,0xe0
  4023fb:	xchg   esp,eax
  4023fc:	dec    ebx
  4023fd:	mov    al,0xda
  4023ff:	inc    eax
  402400:	adc    BYTE PTR [ebx-0x3a],bl
  402403:	pop    ds
  402404:	cmp    cl,ah
  402406:	add    bh,bl
  402408:	arpl   WORD PTR [ebx],si
  40240a:	or     ebp,ecx
  40240c:	push   cs
  40240d:	aam    0xe7
  40240f:	in     eax,dx
  402410:	jp     0x40248e
  402412:	or     BYTE PTR [edi+edi*4-0xfbfe190],bl
  402419:	daa    
  40241a:	dec    ebp
  40241b:	test   al,0x36
  40241d:	adc    al,dh
  40241f:	aaa    
  402420:	cdq    
  402421:	int3   
  402422:	(bad)  [ecx]
  402424:	fild   DWORD PTR [eax+0xc]
  402427:	inc    edx
  402428:	push   ecx
  402429:	cs in  al,dx
  40242b:	sub    DWORD PTR [eax-0x562b4e7c],ebx
  402431:	fsubr  QWORD PTR [edi]
  402433:	into   
  402434:	paddusw mm0,mm0
  402437:	(bad)  
  402438:	cld    
  402439:	jecxz  0x4023ca
  40243b:	pop    ds
  40243c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40243d:	adc    BYTE PTR [ecx],cl
  40243f:	arpl   WORD PTR [ebx+0x646c2bad],ax
  402445:	jmp    0x402426
  402447:	je     0x402419
  402449:	out    dx,eax
  40244a:	in     eax,0x66
  40244c:	or     DWORD PTR [edx+ebp*4],0x14860c5f
  402453:	loope  0x402491
  402455:	scas   eax,DWORD PTR es:[edi]
  402456:	mov    dl,0xb0
  402458:	mov    dl,0xaa
  40245a:	xchg   ebx,eax
  40245b:	cdq    
  40245c:	dec    eax
  40245d:	mov    bl,0xcd
  40245f:	pop    edi
  402460:	push   esp
  402461:	mov    dh,0x88
  402463:	jmp    0x4024a5
  402465:	in     al,0xac
  402467:	sahf   
  402468:	cmc    
  402469:	shl    DWORD PTR [ebx-0x3171beae],cl
  40246f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402470:	and    esi,edx
  402472:	loop   0x4024a3
  402474:	push   0x78848dac
  402479:	pop    ebx
  40247a:	(bad)  
  40247b:	or     al,ah
  40247d:	or     ecx,DWORD PTR [ecx]
  40247f:	add    al,0xec
  402481:	lods   eax,DWORD PTR ds:[esi]
  402482:	call   0xefc0:0xf6341c41
  402489:	cli    
  40248a:	pop    ss
  40248b:	leave  
  40248c:	jl     0x4024c2
  40248e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402490:	sti    
  402491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402492:	(bad)  
  402493:	(bad)  
  402495:	inc    ebp
  402496:	mov    edx,0xd57a56d0
  40249b:	xchg   esi,eax
  40249c:	test   al,bh
  40249e:	jl     0x4024f6
  4024a0:	xchg   DWORD PTR [edx-0x5b],ecx
  4024a3:	mov    eax,0xaade7e36
  4024a8:	pusha  
  4024a9:	xchg   esi,eax
  4024aa:	bound  edx,QWORD PTR [eax+eax*8]
  4024ad:	addr16 mov ecx,0xe00ca8d4
  4024b3:	lds    ebp,FWORD PTR [ecx+edi*8]
  4024b6:	xor    al,0x14
  4024b8:	fcom   QWORD PTR [edx-0x2c0b0345]
  4024be:	xor    eax,0xe1216140
  4024c3:	mov    dl,0x64
  4024c5:	(bad)  
  4024c6:	and    BYTE PTR [edi-0x41358955],ah
  4024cc:	inc    ecx
  4024cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024ce:	fs gs retf 0x6da2
  4024d3:	sbb    BYTE PTR [ecx],ch
  4024d5:	mov    ds,WORD PTR ds:0xdde2ff3b
  4024db:	mov    al,ds:0x85dfa7e2
  4024e0:	test   eax,0x1a212a84
  4024e5:	and    DWORD PTR [eax],0x44
  4024e8:	cwde   
  4024e9:	cmp    DWORD PTR [eax],0xffffffb5
  4024ec:	in     eax,0xb7
  4024ee:	test   DWORD PTR [eax+esi*2-0x64d519f8],eax
  4024f5:	and    esi,DWORD PTR [esi+0x5d52546]
  4024fb:	cli    
  4024fc:	inc    esp
  4024fd:	fsub   QWORD PTR [ecx+0x3f111bb5]
  402503:	enter  0xd536,0xe
  402507:	es cld 
  402509:	and    al,0xb1
  40250b:	adc    eax,0xe3dca697
  402510:	ss icebp 
  402512:	cs inc edx
  402514:	mov    eax,ds:0x406c03e4
  402519:	sbb    BYTE PTR [eax+ecx*4+0x7e],bl
  40251d:	mov    ch,bl
  40251f:	jge    0x4024e7
  402521:	push   edx
  402522:	ja     0x4024e4
  402524:	sub    ah,BYTE PTR [ebp+0x91c94b4]
  40252a:	inc    esi
  40252b:	nop
  40252c:	stos   DWORD PTR es:[edi],eax
  40252d:	sub    ch,BYTE PTR [ecx]
  40252f:	call   0x8b92aab1
  402534:	pop    edi
  402535:	retf   0x10cd
  402538:	je     0x4024c4
  40253a:	inc    eax
  40253b:	int    0xe4
  40253d:	jg     0x40253a
  40253f:	mov    ecx,0x85c8b4a5
  402544:	sbb    ebp,DWORD PTR [eax+0x4131bb98]
  40254a:	sbb    BYTE PTR [ebx+0x1e],bl
  40254d:	sbb    eax,eax
  40254f:	sbb    bh,bh
  402551:	inc    edx
  402552:	inc    ebp
  402553:	and    bl,al
  402555:	das    
  402556:	es nop
  402558:	daa    
  402559:	int3   
  40255a:	js     0x40259e
  40255c:	or     ah,BYTE PTR [ebx]
  40255e:	mov    dl,0x4
  402560:	xor    al,0x74
  402562:	jge    0x402559
  402564:	adc    al,0x18
  402566:	(bad)  
  402567:	fs xor al,0x5
  40256a:	pop    edi
  40256b:	add    DWORD PTR [ecx],edx
  40256d:	aaa    
  40256e:	mov    ch,0xcb
  402570:	sbb    ch,al
  402572:	cmp    eax,0x84ec373a
  402577:	jmp    0x4025e8
  402579:	es mov esi,edi
  40257c:	xchg   DWORD PTR [eax-0x44a5dd36],edi
  402582:	xor    bl,BYTE PTR [ebp-0x5e]
  402585:	into   
  402586:	outs   dx,BYTE PTR ds:[esi]
  402587:	aaa    
  402588:	push   ebx
  402589:	pop    edi
  40258a:	xor    eax,0x94fbfbd6
  40258f:	inc    ebx
  402590:	xchg   esi,eax
  402591:	retf   
  402592:	mov    cl,0x94
  402594:	sub    BYTE PTR [ebp-0x75],bh
  402597:	sahf   
  402598:	and    al,0x63
  40259a:	daa    
  40259b:	jge    0x40260f
  40259d:	xor    al,0x50
  40259f:	scas   eax,DWORD PTR es:[edi]
  4025a0:	adc    DWORD PTR [eax],ecx
  4025a2:	cmp    ebp,esp
  4025a4:	jg     0x402548
  4025a6:	std    
  4025a7:	in     al,0x2
  4025a9:	das    
  4025aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ab:	addr16 cmp eax,0x64262e11
  4025b1:	push   ds
  4025b2:	or     edi,DWORD PTR [esi+eax*4+0x6bcc42f5]
  4025b9:	(bad)  
  4025ba:	in     eax,dx
  4025bb:	mov    cs,ebx
  4025bd:	inc    ebx
  4025be:	dec    esp
  4025bf:	xchg   edx,eax
  4025c0:	inc    esi
  4025c1:	stos   BYTE PTR es:[edi],al
  4025c2:	ds pop es
  4025c4:	adc    eax,0x52436d29
  4025c9:	call   0x991e:0x4b56d938
  4025d0:	jnp    0x40256f
  4025d2:	daa    
  4025d3:	loope  0x40259e
  4025d5:	shr    BYTE PTR [edi],1
  4025d7:	out    0xfc,al
  4025d9:	sub    ecx,0x557c2f67
  4025df:	pop    eax
  4025e0:	pop    ecx
  4025e1:	out    dx,al
  4025e2:	gs inc edi
  4025e4:	data16 and BYTE PTR [edi+0x3f],cl
  4025e8:	add    eax,0xa753ad1f
  4025ed:	gs aaa 
  4025ef:	push   ecx
  4025f0:	nop
  4025f1:	aas    
  4025f2:	jns    0x402627
  4025f4:	add    DWORD PTR [ebp+0x7f],edx
  4025f7:	(bad)  
  4025f8:	in     al,dx
  4025f9:	cli    
  4025fa:	icebp  
  4025fb:	add    ah,al
  4025fd:	repnz mov ecx,0xa9bc755b
  402603:	or     eax,0x33ea10a7
  402608:	xchg   BYTE PTR ds:0x9ecb43b1,bh
  40260e:	sub    eax,0x79644b33
  402613:	and    dl,cl
  402615:	in     al,dx
  402616:	fstp   TBYTE PTR [ebp+0x9]
  402619:	out    0x72,eax
  40261b:	mov    ds:0x9253a23b,eax
  402620:	les    edx,FWORD PTR [esi-0x387a7818]
  402626:	adc    DWORD PTR [esi],esp
  402628:	sbb    BYTE PTR [ebx+0x7d],al
  40262b:	jbe    0x402695
  40262d:	fwait
  40262e:	movups xmm6,XMMWORD PTR [ebx-0x1f]
  402632:	outs   dx,BYTE PTR ds:[esi]
  402633:	cdq    
  402634:	out    0x2b,eax
  402636:	retf   
  402637:	and    eax,DWORD PTR [ecx-0x9]
  40263a:	lahf   
  40263b:	xchg   BYTE PTR [eax],dl
  40263d:	sub    esi,0xffffffd8
  402640:	adc    BYTE PTR [edi+0x4b7d0f45],bh
  402646:	dec    edi
  402647:	jle    0x4025ef
  402649:	mov    BYTE PTR [ecx+0x50],0xb3
  40264d:	arpl   WORD PTR [edi],bx
  40264f:	push   ss
  402650:	mov    dh,0x6b
  402652:	cmp    ebp,DWORD PTR [ebx]
  402654:	or     eax,0xb23b0510
  402659:	outs   dx,BYTE PTR ds:[esi]
  40265a:	psraw  mm7,QWORD PTR ds:0x43a36a4e
  402661:	mov    ebx,edx
  402663:	cmp    eax,0xd7052dee
  402668:	pop    ebx
  402669:	hlt    
  40266a:	test   al,0xb8
  40266c:	pop    eax
  40266d:	xchg   ebp,eax
  40266e:	test   al,0x1a
  402670:	sub    al,0x26
  402672:	pop    ebx
  402673:	mov    ds:0x3dfac999,eax
  402678:	jle    0x402676
  40267a:	(bad)  
  40267b:	pop    ebp
  40267c:	mov    al,0x16
  40267e:	mov    eax,0xc1f4e750
  402683:	xchg   edi,eax
  402684:	jo     0x40265f
  402686:	aaa    
  402687:	inc    ecx
  402688:	mov    cl,0x0
  40268a:	sbb    ecx,DWORD PTR [eax+0x33]
  40268d:	out    0x53,eax
  40268f:	neg    esp
  402691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402692:	aas    
  402693:	and    edx,ebp
  402695:	popa   
  402696:	push   esp
  402697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402698:	cs dec esi
  40269a:	stos   BYTE PTR es:[edi],al
  40269b:	outs   dx,BYTE PTR ds:[esi]
  40269c:	mov    es,WORD PTR [ebp+0x65df7006]
  4026a2:	jmp    0x4026b0
  4026a4:	cdq    
  4026a5:	xor    eax,0x7fd55bc3
  4026aa:	adc    dh,dh
  4026ac:	mov    eax,ds:0xf0844ba
  4026b1:	loope  0x4026f7
  4026b3:	xor    al,0xfb
  4026b5:	jns    0x402733
  4026b7:	xchg   esi,eax
  4026b8:	jne    0x4026f8
  4026ba:	addr16 ja 0x4026c5
  4026bd:	pop    ebp
  4026be:	repnz mov dh,0x17
  4026c1:	call   DWORD PTR [edi]
  4026c3:	cdq    
  4026c4:	inc    esp
  4026c5:	hlt    
  4026c6:	mov    ah,0x36
  4026c8:	xlat   BYTE PTR ds:[ebx]
  4026c9:	icebp  
  4026ca:	cmp    BYTE PTR [esi],bh
  4026cc:	pushf  
  4026cd:	cmp    BYTE PTR [ebx+0x36],dh
  4026d0:	hlt    
  4026d1:	pop    ecx
  4026d2:	or     bl,BYTE PTR ds:0xd634eac9
  4026d8:	call   0xcc7:0x1c42cdc
  4026df:	push   cs
  4026e0:	pop    ds
  4026e1:	inc    ecx
  4026e2:	and    BYTE PTR [ebp+0x6faad2a7],ch
  4026e8:	cmp    ecx,eax
  4026ea:	xchg   ecx,eax
  4026eb:	cmp    al,0xcd
  4026ed:	or     ch,BYTE PTR [eax-0x4271d8bb]
  4026f3:	addr16 std 
  4026f5:	retf   
  4026f6:	mov    ah,0xd0
  4026f8:	gs pop ebx
  4026fa:	lds    edi,FWORD PTR [edx]
  4026fc:	hlt    
  4026fd:	retf   
  4026fe:	mov    BYTE PTR [bx+0x66c6],bl
  402703:	mov    al,ds:0xd8eaf4d7
  402708:	push   ebx
  402709:	or     al,0xee
  40270b:	jb     0x402774
  40270d:	addr16 dec esi
  40270f:	sbb    al,0xbb
  402711:	mov    al,ds:0x30f080b7
  402716:	mov    bh,0x18
  402718:	loop   0x4026ae
  40271a:	fcmovnu st,st(1)
  40271c:	mov    ebp,0x5e307571
  402721:	push   ss
  402722:	repnz xchg edi,eax
  402724:	adc    BYTE PTR [ebp+edi*2-0x5a],al
  402728:	inc    esp
  402729:	in     eax,0x8f
  40272b:	jne    0x4026f2
  40272d:	ficom  DWORD PTR [ecx]
  40272f:	imul   eax,DWORD PTR [edi+0x6d],0x66
  402733:	scas   eax,DWORD PTR es:[edi]
  402734:	inc    ecx
  402735:	repz popf 
  402737:	inc    eax
  402738:	xor    BYTE PTR [edx+0x3d],bl
  40273b:	push   es
  40273c:	push   esp
  40273d:	jne    0x4026ce
  40273f:	sbb    ebp,DWORD PTR [ecx-0x4e]
  402742:	pushf  
  402743:	mov    ebp,0x120cdb19
  402748:	cs scas eax,DWORD PTR es:[edi]
  40274a:	je     0x4026d1
  40274c:	in     al,dx
  40274d:	cmc    
  40274e:	cmp    al,0x1c
  402750:	into   
  402751:	sahf   
  402752:	sbb    BYTE PTR [esi],ah
  402754:	cs push cs
  402756:	clc    
  402757:	mov    ds:0xe318983a,eax
  40275c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40275d:	inc    ebp
  40275e:	xor    al,0x7b
  402760:	loope  0x40275c
  402762:	jb     0x4027b3
  402764:	sub    ebp,DWORD PTR [ebp+0x30]
  402767:	add    dl,ch
  402769:	call   0x77a4:0x10dcf245
  402770:	dec    esp
  402771:	xchg   ebp,eax
  402772:	cmc    
  402773:	mov    ebp,0xef708348
  402778:	lea    edi,[ebp-0x22]
  40277b:	inc    ebx
  40277c:	jae    0x40276d
  40277e:	std    
  40277f:	jno    0x402792
  402781:	sub    edi,esp
  402783:	in     eax,0xd0
  402785:	ins    DWORD PTR es:[edi],dx
  402786:	or     BYTE PTR [edx+0x7a7f3fe9],ah
  40278c:	jg     0x402778
  40278e:	fdivr  st(5),st
  402790:	xchg   edi,eax
  402791:	jmp    0xb35d1390
  402796:	aas    
  402797:	adc    eax,0x1b1312c8
  40279c:	sbb    eax,0xa577c942
  4027a1:	iret   
  4027a2:	ret    
  4027a3:	stos   DWORD PTR es:[edi],eax
  4027a4:	out    0xb7,al
  4027a6:	jnp    0x4027bf
  4027a8:	sub    ah,0x87
  4027ab:	mov    dh,BYTE PTR [edx+0x3f]
  4027ae:	je     0x40274b
  4027b0:	pop    esi
  4027b1:	mov    ds,WORD PTR [ecx+0x4e]
  4027b4:	out    0x38,eax
  4027b6:	hlt    
  4027b7:	int    0x8d
  4027b9:	(bad)  
  4027bb:	mov    edx,cs
  4027bd:	pop    edx
  4027be:	xchg   esp,eax
  4027bf:	inc    ebx
  4027c0:	push   ecx
  4027c1:	addr16 cmp esi,ebx
  4027c4:	in     eax,dx
  4027c5:	mov    eax,0xb77ce3d3
  4027ca:	lods   eax,DWORD PTR ds:[esi]
  4027cb:	push   0xffffffb2
  4027cd:	sub    dl,dh
  4027cf:	and    esi,DWORD PTR [esi]
  4027d1:	(bad)  
  4027d2:	lds    edx,FWORD PTR [ebp+edi*8+0x12]
  4027d6:	scas   eax,DWORD PTR es:[edi]
  4027d7:	sbb    BYTE PTR [ebp+0x297c11e8],bl
  4027dd:	xor    eax,0x83319120
  4027e2:	add    BYTE PTR [ebx],cl
  4027e4:	xor    bl,ah
  4027e6:	mov    ds:0x54834306,al
  4027eb:	leave  
  4027ec:	and    BYTE PTR [edi],bl
  4027ee:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027f0:	jmp    0xd3160fdc
  4027f5:	xchg   edx,eax
  4027f6:	cmp    bh,dl
  4027f8:	xor    ecx,DWORD PTR [edi]
  4027fa:	and    al,0x66
  4027fc:	push   ecx
  4027fd:	add    DWORD PTR [edi+0x40fd2b94],ebx
  402803:	mov    ebx,0x8ee46535
  402808:	(bad)  
  402809:	push   ebp
  40280a:	addr16 dec eax
  40280c:	xchg   ebp,eax
  40280d:	aas    
  40280e:	lea    eax,[ebx+0x3e]
  402811:	repz es cmp dl,dl
  402815:	mov    dh,0x3f
  402817:	pop    edi
  402818:	xor    BYTE PTR [ecx-0x1bb2e95a],dh
  40281e:	es aas 
  402820:	aam    0xd7
  402822:	push   0x8016267c
  402827:	out    dx,al
  402828:	mov    al,0x5d
  40282a:	adc    edi,DWORD PTR [edi-0x45fae332]
  402830:	jne    0x4027b9
  402832:	jbe    0x4028a9
  402834:	inc    ebx
  402835:	int    0xf
  402837:	adc    al,0xcf
  402839:	int3   
  40283a:	mov    ds:0xc6758fb9,al
  40283f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402840:	aad    0x6b
  402842:	or     dh,bl
  402844:	aas    
  402845:	inc    ebx
  402846:	nop
  402847:	push   esi
  402848:	sub    BYTE PTR [ebx],dh
  40284a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40284b:	stc    
  40284c:	sti    
  40284d:	inc    eax
  40284e:	cmc    
  40284f:	jecxz  0x4027f5
  402851:	mov    ah,0xd4
  402853:	fwait
  402854:	sti    
  402855:	jb     0x402849
  402857:	sqrtps xmm0,XMMWORD PTR [edx+ecx*2+0x4c]
  40285c:	pushf  
  40285d:	jmp    0x912090fe
  402862:	cld    
  402863:	pop    ebp
  402864:	(bad)  
  402865:	aam    0x44
  402867:	loop   0x402865
  402869:	and    DWORD PTR [esi-0x1cd6f869],edx
  40286f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402870:	cs fs mov bh,0x5f
  402874:	(bad)  
  402875:	je     0x4028c2
  402877:	fcomp  QWORD PTR [eax]
  402879:	jo     0x4028ad
  40287b:	shr    BYTE PTR [ebx-0x157ce138],1
  402881:	mov    al,0xf7
  402883:	add    bh,BYTE PTR [edx+esi*8]
  402886:	pushf  
  402887:	or     al,0x75
  402889:	sub    ebp,DWORD PTR [edx+0x640dee17]
  40288f:	adc    al,0xc5
  402891:	imul   edi,DWORD PTR [esi+0x4c2148e2],0x7cb7ee03
  40289b:	std    
  40289c:	fsub   DWORD PTR [esi-0x6e21d22d]
  4028a2:	inc    DWORD PTR [ecx+0x3bb24c40]
  4028a8:	mov    BYTE PTR [esi],al
  4028aa:	aaa    
  4028ab:	xlat   BYTE PTR ds:[ebx]
  4028ac:	jle    0x4028a6
  4028ae:	test   al,0xe4
  4028b0:	adc    DWORD PTR ds:0xcdbcf0c8,ebp
  4028b6:	pcmpeqw mm6,QWORD PTR [edi]
  4028b9:	test   al,0xb5
  4028bb:	(bad)  
  4028bc:	or     eax,0xbb0a9e81
  4028c1:	mov    ch,0x2
  4028c3:	pop    ecx
  4028c4:	fisub  WORD PTR [edx]
  4028c6:	cwde   
  4028c7:	aas    
  4028c8:	pop    eax
  4028c9:	push   esi
  4028ca:	scas   al,BYTE PTR es:[edi]
  4028cb:	(bad)  
  4028cc:	fdivr  DWORD PTR [edx]
  4028ce:	sbb    al,BYTE PTR [edi+0x7153d893]
  4028d4:	dec    ecx
  4028d5:	mov    ds:0xedf9ddec,al
  4028da:	pop    edi
  4028db:	sub    eax,0x33527490
  4028e0:	dec    esi
  4028e1:	xchg   DWORD PTR [edx-0x57],esp
  4028e4:	mov    ds:0xf1ab56ad,eax
  4028e9:	add    cl,BYTE PTR [esi]
  4028eb:	adc    ah,BYTE PTR [esi-0x6b3b54ae]
  4028f1:	pop    ss
  4028f2:	bound  ebp,QWORD PTR [edx+edi*1-0x2dd5a0a7]
  4028f9:	imul   edx,DWORD PTR [eax+0x6d],0x14c14ed3
  402900:	sahf   
  402901:	rol    DWORD PTR [edi-0x2a],0xaf
  402905:	(bad)  
  402906:	jb     0x402949
  402908:	pop    edi
  402909:	call   0xff90fef8
  40290e:	mov    ecx,0x8d8e30f9
  402913:	xchg   ebx,eax
  402914:	adc    BYTE PTR [eax-0x7f],bh
  402917:	loope  0x40298d
  402919:	sbb    eax,0x40665d4e
  40291e:	retf   0xac76
  402921:	mov    ebx,0xd7a486fb
  402926:	pop    ecx
  402927:	sub    al,0x32
  402929:	mov    edx,0x44d02aaf
  40292e:	push   cs
  40292f:	mov    dl,0xaf
  402931:	inc    edi
  402932:	arpl   WORD PTR [edi+edi*1+0x17],sp
  402936:	adc    eax,0xcc4b08aa
  40293b:	jbe    0x402947
  40293d:	inc    esi
  40293e:	ror    DWORD PTR [eax],cl
  402940:	and    bl,cl
  402942:	mov    ch,0xea
  402944:	mov    bh,bh
  402946:	pop    esp
  402947:	jge    0x402909
  402949:	shl    BYTE PTR [edi-0x62],0x21
  40294d:	xor    ebx,DWORD PTR [esi+0x4]
  402950:	pushf  
  402951:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  402953:	lods   eax,DWORD PTR ds:[esi]
  402955:	adc    BYTE PTR [edx+0x39],bl
  402958:	cmp    al,0xba
  40295a:	push   ebp
  40295b:	les    eax,FWORD PTR [esi-0x457e3bce]
  402961:	inc    esi
  402962:	xchg   ecx,eax
  402963:	sbb    DWORD PTR [ecx],edx
  402965:	jnp    0x402984
  402967:	dec    ebp
  402968:	push   ecx
  402969:	mov    eax,0x2d819420
  40296e:	outs   dx,BYTE PTR ds:[esi]
  40296f:	stos   BYTE PTR es:[edi],al
  402970:	into   
  402971:	push   ecx
  402972:	cmp    eax,DWORD PTR [eax+0x5c9c804f]
  402978:	mov    dl,0x27
  40297a:	mov    es,WORD PTR [ebx+ecx*8-0x22]
  40297e:	mov    al,ds:0x28e40cce
  402983:	pmaxub mm2,QWORD PTR [edi]
  402986:	sub    al,0xca
  402988:	out    0xc7,al
  40298a:	mov    eax,ds:0x6f376894
  40298f:	sti    
  402990:	js     0x4029e6
  402992:	add    eax,ecx
  402994:	inc    eax
  402995:	jne    0x4029b8
  402997:	test   eax,0xfdbb7a4f
  40299c:	out    0xde,al
  40299e:	pop    ecx
  40299f:	int3   
  4029a0:	(bad)  
  4029a1:	aam    0x4d
  4029a3:	or     edi,DWORD PTR [ecx+0x51]
  4029a6:	pop    edx
  4029a7:	rcl    DWORD PTR [esi+0x4427e3a9],cl
  4029ad:	sbb    eax,0x741eedf3
  4029b2:	ret    0x6cb8
  4029b5:	stos   DWORD PTR es:[edi],eax
  4029b6:	cdq    
  4029b7:	sahf   
  4029b8:	imul   edx,ebp,0x3c
  4029bb:	out    0x6,eax
  4029bd:	sar    BYTE PTR ds:0xe981135b,cl
  4029c3:	out    0xa4,eax
  4029c5:	xchg   esp,eax
  4029c6:	stos   BYTE PTR es:[edi],al
  4029c7:	cmp    eax,0x5afb7ef8
  4029cc:	push   cs
  4029cd:	sub    esi,esi
  4029cf:	and    ah,bl
  4029d1:	jl     0x4029cb
  4029d3:	ins    DWORD PTR es:[edi],dx
  4029d4:	cmp    eax,DWORD PTR [ecx+eax*4]
  4029d7:	or     al,0x9a
  4029d9:	cmp    BYTE PTR [esi+0x2e1f8174],ch
  4029df:	xor    ecx,DWORD PTR [esi+0x54d13280]
  4029e5:	stc    
  4029e6:	leave  
  4029e7:	xlat   BYTE PTR ds:[ebx]
  4029e8:	int    0x3d
  4029ea:	xor    al,0x75
  4029ec:	daa    
  4029ed:	mov    eax,ds:0x60f50c1f
  4029f2:	ins    BYTE PTR es:[edi],dx
  4029f3:	fwait
  4029f4:	xor    BYTE PTR [ebx+0x7b],bl
  4029f7:	xchg   ecx,eax
  4029f8:	addr16 pusha 
  4029fa:	mov    edx,0x70dc27a3
  4029ff:	push   ecx
  402a00:	pop    eax
  402a01:	and    al,0x1a
  402a03:	push   esi
  402a04:	aas    
  402a05:	and    eax,ebp
  402a07:	or     BYTE PTR [ecx-0x57],al
  402a0a:	shl    DWORD PTR [edx-0x20],1
  402a0d:	lods   eax,DWORD PTR ds:[esi]
  402a0e:	xchg   edi,eax
  402a0f:	pop    ecx
  402a10:	cmp    al,0xcf
  402a12:	pop    ecx
  402a13:	jns    0x402a8d
  402a15:	daa    
  402a16:	ins    BYTE PTR es:[edi],dx
  402a17:	or     eax,0x7d84c660
  402a1c:	stc    
  402a1d:	fdivr  QWORD PTR [ebp+0x2e217717]
  402a23:	lods   al,BYTE PTR ds:[esi]
  402a24:	lea    ecx,[esi+0x6e]
  402a27:	out    0x34,eax
  402a29:	and    DWORD PTR [ebp+edx*2-0x5e9d47e9],ebp
  402a30:	lods   eax,DWORD PTR ds:[esi]
  402a31:	xchg   edi,eax
  402a32:	ss not dh
  402a35:	cwde   
  402a36:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  402a38:	(bad)  
  402a39:	push   es
  402a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a3b:	mov    eax,DWORD PTR [ebp+0x49dfb868]
  402a41:	lea    edi,[bx+si]
  402a44:	sub    cl,dl
  402a46:	mov    es,esi
  402a48:	hlt    
  402a49:	fnsave [esi-0x39]
  402a4c:	xlat   BYTE PTR ds:[ebx]
  402a4d:	sbb    DWORD PTR [esi+eax*1],esp
  402a50:	sahf   
  402a51:	add    al,0x54
  402a53:	cli    
  402a54:	aas    
  402a55:	bound  edx,QWORD PTR [ebp-0x48]
  402a58:	imul   ecx,DWORD PTR [esi],0xffffff84
  402a5b:	daa    
  402a5c:	js     0x4029fc
  402a5e:	sub    dl,BYTE PTR [eax+0x46]
  402a61:	and    DWORD PTR ds:0x9f1e3f4d,esp
  402a67:	sub    ebp,DWORD PTR [ecx]
  402a69:	and    ebp,DWORD PTR [ebx]
  402a6b:	mov    eax,0x6177c1e1
  402a70:	stos   BYTE PTR es:[edi],al
  402a71:	adc    al,0x8c
  402a73:	jmp    0x402a74
  402a75:	mov    dh,0xef
  402a77:	xchg   edi,eax
  402a78:	xchg   ecx,eax
  402a79:	push   0x69
  402a7b:	cmp    eax,eax
  402a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a7e:	mov    ds:0x7a9d21ba,al
  402a83:	xor    al,BYTE PTR [edx]
  402a85:	iret   
  402a86:	and    DWORD PTR [eax+0x67a973fb],edx
  402a8c:	dec    ecx
  402a8d:	aaa    
  402a8e:	push   ds
  402a8f:	xchg   ebx,eax
  402a90:	hlt    
  402a91:	ds icebp 
  402a93:	push   ds
  402a94:	inc    esp
  402a95:	or     al,0xe7
  402a97:	ficom  WORD PTR [edx+edx*4-0x3]
  402a9b:	mov    ecx,0x3aae33d5
  402aa0:	jo     0x402afb
  402aa2:	adc    dh,bh
  402aa4:	cmp    ecx,DWORD PTR [eax+0x15c9bce8]
  402aaa:	cmp    DWORD PTR [ebx+ebp*8-0x15],0xffffff8a
  402aaf:	jno    0x402b14
  402ab1:	ss pop edx
  402ab3:	(bad)  
  402ab4:	fnstcw WORD PTR [ecx+ebx*2-0x3f]
  402ab8:	popa   
  402ab9:	retf   0xd553
  402abc:	add    eax,ecx
  402abe:	fs pop ss
  402ac0:	mov    edi,0xa993c811
  402ac5:	out    dx,eax
  402ac6:	jge    0x402ace
  402ac8:	lods   eax,DWORD PTR ds:[esi]
  402ac9:	push   ss
  402aca:	cmp    DWORD PTR [ecx],ebp
  402acc:	sub    al,0xca
  402ace:	xchg   ecx,eax
  402acf:	rcl    BYTE PTR [ebx-0x32fa806b],1
  402ad5:	xor    ebp,esi
  402ad7:	clc    
  402ad8:	scas   eax,DWORD PTR es:[edi]
  402ad9:	push   ss
  402ada:	mov    ebx,esi
  402adc:	mul    BYTE PTR [ebx+0x61]
  402adf:	aad    0x3
  402ae1:	add    eax,eax
  402ae3:	lds    ebp,FWORD PTR [esi]
  402ae5:	imul   ebp,edi,0xffffffa1
  402ae8:	lea    esi,[edx]
  402aea:	pop    esi
  402aeb:	sbb    BYTE PTR [ebp-0x68667b6a],0x91
  402af2:	push   esi
  402af3:	sbb    al,0xb3
  402af5:	push   0xccc904c4
  402afa:	mov    al,ds:0x29b1ce4a
  402aff:	inc    esi
  402b00:	in     al,0xfc
  402b02:	xchg   edx,eax
  402b03:	arpl   dx,bp
  402b05:	fdiv   st(1),st
  402b07:	test   ebp,0xeb95d872
  402b0d:	xchg   esi,eax
  402b0e:	sbb    ch,0x58
  402b11:	pusha  
  402b12:	into   
  402b13:	(bad)  
  402b14:	in     al,dx
  402b15:	je     0x402aea
  402b17:	pop    ecx
  402b18:	test   al,0x5c
  402b1a:	out    dx,al
  402b1b:	xchg   ecx,eax
  402b1c:	xchg   esp,eax
  402b1d:	clc    
  402b1e:	jae    0x402aa1
  402b20:	sbb    BYTE PTR [ecx],al
  402b22:	data16 and BYTE PTR [edi+0x6dd9a664],ch
  402b29:	push   edi
  402b2a:	mov    ds:0xec9efd19,al
  402b2f:	xchg   edi,eax
  402b30:	inc    esp
  402b31:	mov    al,ds:0x7836c35f
  402b36:	popf   
  402b37:	jmp    0x402b75
  402b39:	not    DWORD PTR [edx]
  402b3b:	in     al,dx
  402b3c:	je     0x402b35
  402b3e:	cld    
  402b3f:	in     ax,0x3d
  402b42:	in     al,0x75
  402b44:	mov    ds,WORD PTR [ebx]
  402b46:	and    eax,0xbe88d8f2
  402b4b:	adc    bh,BYTE PTR [esi]
  402b4d:	pop    edi
  402b4e:	cmp    eax,DWORD PTR [edi-0x21b2d42b]
  402b54:	div    BYTE PTR [eax+0x577bfdd0]
  402b5a:	clc    
  402b5b:	sub    esi,esi
  402b5d:	out    dx,al
  402b5e:	imul   ecx,DWORD PTR [edx+0x17],0x59c1d2af
  402b65:	sbb    eax,0x82879552
  402b6a:	aaa    
  402b6b:	fistp  QWORD PTR [ecx-0x5b83e6b6]
  402b71:	cmp    BYTE PTR [ecx],dh
  402b73:	pushf  
  402b74:	outs   dx,DWORD PTR ds:[esi]
  402b75:	pop    edi
  402b76:	bound  edx,QWORD PTR [ebx+ecx*2-0x73]
  402b7a:	int3   
  402b7b:	xlat   BYTE PTR ds:[ebx]
  402b7c:	adc    DWORD PTR [esi+0x56],esp
  402b7f:	ins    DWORD PTR es:[edi],dx
  402b80:	cmp    al,0x5d
  402b82:	cld    
  402b83:	mov    ds,WORD PTR [ecx+0x84e1da]
  402b89:	stc    
  402b8a:	push   0xffffffc5
  402b8c:	icebp  
  402b8d:	or     eax,0xa1d6772a
  402b92:	test   edx,0x6c77ed0b
  402b98:	mov    ah,0x17
  402b9a:	push   ecx
  402b9b:	push   ecx
  402b9c:	sub    BYTE PTR [esi+0x1d0d3d5f],dl
  402ba2:	fcmovu st,st(6)
  402ba4:	lock mov bh,0x8f
  402ba7:	out    dx,eax
  402ba8:	push   edx
  402ba9:	jge    0x402b43
  402bab:	adc    DWORD PTR [ebx-0x63],0x390e549
  402bb2:	test   al,0x23
  402bb4:	loopne 0x402b86
  402bb6:	push   ebp
  402bb7:	rol    DWORD PTR [eax-0x22],1
  402bba:	jae    0x402c0c
  402bbc:	push   cs
  402bbd:	into   
  402bbe:	(bad)  
  402bbf:	enter  0xdc20,0x78
  402bc3:	ja     0x402b83
  402bc5:	push   eax
  402bc6:	or     edx,DWORD PTR [ecx-0x50]
  402bc9:	jb     0x402bed
  402bcb:	dec    esi
  402bcc:	jno    0x402c02
  402bce:	or     edi,DWORD PTR [eax+0x41e51c0a]
  402bd4:	scas   eax,DWORD PTR es:[edi]
  402bd5:	mov    bh,0xac
  402bd7:	dec    ebp
  402bd8:	scas   eax,DWORD PTR es:[edi]
  402bd9:	adc    ebp,DWORD PTR [ebx+0xa]
  402bdc:	pop    ebx
  402bdd:	xor    al,0x44
  402bdf:	push   cs
  402be0:	mov    eax,ds:0xa3cc9f98
  402be5:	mov    esp,eax
  402be7:	jae    0x402c5a
  402be9:	mov    BYTE PTR [esi],ch
  402beb:	inc    ebp
  402bec:	adc    al,0x2
  402bee:	scas   eax,DWORD PTR es:[edi]
  402bef:	test   eax,0x96621d4d
  402bf4:	xchg   DWORD PTR [edi-0x515ceea7],esp
  402bfa:	xchg   edi,eax
  402bfb:	or     eax,ebx
  402bfd:	mov    bl,0x4e
  402bff:	xor    DWORD PTR [edx],0xffffffd4
  402c02:	mov    dh,0x45
  402c04:	call   0x95ea:0x92735f84
  402c0b:	mov    ds:0xbfc829a2,eax
  402c10:	(bad)  
  402c11:	aam    0xd8
  402c13:	inc    esp
  402c14:	cld    
  402c15:	xor    al,0xef
  402c17:	xchg   edi,eax
  402c18:	fist   DWORD PTR [edx-0x3d]
  402c1b:	push   eax
  402c1c:	outs   dx,BYTE PTR ds:[esi]
  402c1d:	int    0x35
  402c1f:	push   es
  402c20:	push   esp
  402c21:	push   edi
  402c22:	fsubrp st(3),st
  402c24:	cmp    DWORD PTR [ecx+0x54],eax
  402c27:	out    dx,eax
  402c28:	cld    
  402c29:	push   edx
  402c2a:	adc    edx,0x9edf0834
  402c30:	dec    ebx
  402c31:	scas   eax,DWORD PTR es:[edi]
  402c32:	jno    0x402c91
  402c34:	dec    ebp
  402c35:	inc    edi
  402c36:	xor    DWORD PTR [esi+edx*8-0x5e269a96],ebx
  402c3d:	(bad)  
  402c3e:	fsubp  st(6),st
  402c40:	dec    ecx
  402c41:	pop    ebp
  402c42:	sbb    eax,0xfc4fe861
  402c47:	out    dx,eax
  402c48:	aaa    
  402c49:	cmp    DWORD PTR [edi-0x4],0x75436b53
  402c50:	pop    es
  402c51:	add    esi,edi
  402c53:	div    ebp
  402c55:	jb     0x402c5e
  402c57:	je     0x402c96
  402c59:	sbb    dl,BYTE PTR [esi-0x219a82a6]
  402c5f:	inc    ebx
  402c60:	and    ebp,ebp
  402c62:	pop    edx
  402c63:	pop    ds
  402c64:	inc    edx
  402c65:	xchg   ah,dh
  402c67:	xor    eax,0xae1bb7ef
  402c6c:	lods   al,BYTE PTR ds:[esi]
  402c6d:	pop    ecx
  402c6e:	mov    ds:0x3268b480,eax
  402c73:	add    BYTE PTR [ecx],cl
  402c75:	(bad)  
  402c76:	mov    al,ds:0x9fb0a829
  402c7b:	mov    BYTE PTR [edi-0x33],ah
  402c7e:	xor    DWORD PTR [edi-0x5abf576c],0x52
  402c85:	in     eax,0x5
  402c87:	dec    esi
  402c88:	pop    es
  402c89:	jp     0x402cb8
  402c8b:	imul   esp,ebx,0xffffffa7
  402c8e:	pop    ebx
  402c8f:	jbe    0x402c61
  402c91:	xor    DWORD PTR [edx+0x0],esp
  402c94:	mov    al,0x58
  402c96:	aam    0x56
  402c98:	xchg   esi,eax
  402c99:	les    edx,FWORD PTR [ecx-0x50cc4569]
  402c9f:	sub    ebx,DWORD PTR [eax]
  402ca1:	gs push esp
  402ca3:	fs or  al,0x13
  402ca6:	out    0xe2,eax
  402ca8:	inc    ecx
  402ca9:	ds ret 0x4e83
  402cad:	push   ebp
  402cae:	mov    ah,0xe1
  402cb0:	jo     0xeba425ed
  402cb6:	out    0xa3,eax
  402cb8:	sub    ah,BYTE PTR [eax+ecx*1-0x6d]
  402cbc:	xor    BYTE PTR ds:0xe336b4bc,bl
  402cc2:	cmp    BYTE PTR [edx+0x77],bh
  402cc5:	data16 js 0x402d34
  402cc8:	not    ebx
  402cca:	xchg   ebx,eax
  402ccb:	sbb    al,0xbf
  402ccd:	push   ss
  402cce:	(bad)  
  402ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd0:	add    dh,dl
  402cd2:	jp     0x402d04
  402cd4:	shl    BYTE PTR [edi-0x6a],cl
  402cd7:	dec    ebp
  402cd8:	cld    
  402cd9:	add    eax,0xfeb945e7
  402cde:	sbb    DWORD PTR [eax+0xe],eax
  402ce1:	mov    dh,0xa6
  402ce3:	push   cs
  402ce4:	push   0xffffff86
  402ce6:	mov    al,ds:0x80f7a20b
  402ceb:	dec    eax
  402cec:	mov    eax,ds:0xdda97c86
  402cf1:	push   cs
  402cf2:	sbb    eax,0x23dba717
  402cf7:	add    bh,BYTE PTR [edx]
  402cf9:	nop
  402cfa:	ins    BYTE PTR es:[edi],dx
  402cfb:	sti    
  402cfc:	mov    cl,0x38
  402cfe:	inc    ebx
  402cff:	pusha  
  402d00:	out    dx,eax
  402d01:	inc    ecx
  402d02:	jno    0x402d3d
  402d04:	retf   
  402d05:	push   esi
  402d06:	xor    al,0x51
  402d08:	hlt    
  402d09:	sti    
  402d0a:	test   al,0xe7
  402d0c:	mov    ah,0x3f
  402d0e:	mov    esp,0x282b9aa2
  402d13:	hlt    
  402d14:	rol    bh,1
  402d16:	push   edi
  402d17:	adc    eax,0xc127d66b
  402d1c:	mov    ds:0xe37ac682,eax
  402d21:	add    ah,BYTE PTR [ebx-0x1c]
  402d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d25:	pop    ebp
  402d26:	dec    ecx
  402d27:	retf   
  402d28:	or     BYTE PTR [ebx-0x1e],bl
  402d2b:	xor    dl,ah
  402d2d:	cmp    edi,esp
  402d2f:	mov    eax,ds:0xe42fe869
  402d34:	adc    al,0x28
  402d36:	adc    edi,DWORD PTR [ebx]
  402d38:	add    cl,BYTE PTR [edi-0x7f2224cb]
  402d3e:	sub    esi,edx
  402d40:	retf   
  402d41:	pop    eax
  402d42:	and    BYTE PTR [eax-0x28c96dce],al
  402d48:	imul   esi,DWORD PTR [edx],0x971498f1
  402d4e:	mov    bl,0x74
  402d50:	(bad)  
  402d51:	and    BYTE PTR [ebx],ah
  402d53:	push   eax
  402d54:	cli    
  402d55:	xor    BYTE PTR [ebx+0x2c],al
  402d58:	fwait
  402d59:	inc    ebp
  402d5a:	sub    BYTE PTR [ecx+0x72],dh
  402d5d:	pusha  
  402d5e:	icebp  
  402d5f:	ret    
  402d60:	dec    eax
  402d61:	ins    DWORD PTR es:[edi],dx
  402d62:	(bad)  
  402d63:	sub    dl,BYTE PTR [esi+edi*1-0x7d]
  402d67:	add    DWORD PTR [ebp-0x8],0x13
  402d6b:	sub    bl,al
  402d6d:	cli    
  402d6e:	pop    edi
  402d6f:	ja     0x402d6d
  402d71:	sar    DWORD PTR [ebx+0x6f9c840a],cl
  402d77:	dec    edx
  402d78:	inc    ecx
  402d79:	mov    ebp,0x802bb3b9
  402d7e:	fisttp WORD PTR [esi+0xc616d73]
  402d84:	sub    al,0xd8
  402d86:	fst    st(7)
  402d88:	outs   dx,BYTE PTR ds:[esi]
  402d89:	mov    dl,0x92
  402d8b:	test   BYTE PTR [esi-0x24],cl
  402d8e:	retf   0xb4be
  402d91:	mov    eax,ds:0xc5a2e5b7
  402d96:	mov    esp,0xdb867f4b
  402d9b:	lds    eax,FWORD PTR [esi]
  402d9d:	cmp    DWORD PTR [ecx+eiz*8-0x4f71bef3],eax
  402da4:	int    0x5c
  402da6:	jbe    0x402d51
  402da8:	xor    cl,BYTE PTR [edx]
  402daa:	call   0x1a2ce6e1
  402daf:	jne    0x402de8
  402db1:	dec    edx
  402db2:	pop    es
  402db3:	cmp    ebx,DWORD PTR [esi]
  402db5:	popa   
  402db6:	mov    DWORD PTR [edi-0x52],ecx
  402db9:	aam    0x5d
  402dbb:	xor    dh,BYTE PTR ds:0x85e568c7
  402dc1:	mov    ss,WORD PTR [edi]
  402dc3:	les    esi,FWORD PTR [edi-0x2d]
  402dc6:	jg     0x402de8
  402dc8:	mov    eax,0x273158e8
  402dcd:	dec    eax
  402dce:	ss aam 0xf2
  402dd1:	shr    DWORD PTR [eax],1
  402dd3:	jb     0x402dd1
  402dd5:	pop    ebx
  402dd6:	call   0x4269:0xb2992caf
  402ddd:	(bad)  
  402dde:	lods   al,BYTE PTR ds:[esi]
  402ddf:	inc    ebx
  402de0:	mov    dl,0x93
  402de2:	pop    eax
  402de3:	sub    eax,0x6064f93a
  402de8:	adc    ebx,DWORD PTR [ebp+0x6b]
  402deb:	mov    bh,0x1f
  402ded:	loopne 0x402dd8
  402def:	je     0x402e2a
  402df1:	jno    0x402dd3
  402df3:	sub    eax,0x3075499b
  402df8:	cwde   
  402df9:	mov    DWORD PTR [edi],edx
  402dfb:	jmp    0x573daf1d
  402e00:	retf   
  402e01:	adc    ah,BYTE PTR [esi]
  402e03:	xchg   ecx,eax
  402e04:	mov    bl,0xac
  402e06:	sub    esp,DWORD PTR [ecx]
  402e08:	jp     0x402dfe
  402e0a:	xchg   ebp,eax
  402e0b:	cmc    
  402e0c:	and    BYTE PTR ds:0x31f82835,bh
  402e12:	jne    0x402e52
  402e14:	ror    BYTE PTR [bx],0xe4
  402e18:	and    BYTE PTR ds:0x7a8f363d,0x6c
  402e1f:	push   esp
  402e20:	and    DWORD PTR [edx+0x44],eax
  402e23:	lods   al,BYTE PTR ds:[esi]
  402e24:	ror    DWORD PTR [eax-0x563bb251],0x28
  402e2b:	jp     0x402e67
  402e2d:	inc    edi
  402e2e:	enter  0xc68f,0xcd
  402e32:	fisubr WORD PTR [eax+ebx*2]
  402e35:	jne    0x402e48
  402e37:	sub    eax,0x5688a616
  402e3c:	cmp    bh,BYTE PTR [edi]
  402e3e:	xchg   ecx,eax
  402e3f:	out    dx,eax
  402e40:	cmp    eax,0x39e5a085
  402e45:	adc    al,0x77
  402e47:	sub    al,0xdc
  402e49:	mov    ebx,DWORD PTR [eax+0x68]
  402e4c:	mov    ah,0x10
  402e4e:	xor    BYTE PTR [ecx],0x21
  402e51:	cmc    
  402e52:	adc    al,0x9b
  402e54:	jg     0x402ea9
  402e56:	lods   eax,DWORD PTR ds:[esi]
  402e57:	ja     0x402dfe
  402e59:	pop    eax
  402e5a:	(bad)  
  402e5b:	addr16 int 0x4b
  402e5e:	(bad)  
  402e5f:	fsub   st(4),st
  402e61:	bound  edx,QWORD PTR [esi+0x7a]
  402e64:	out    0xb7,al
  402e66:	in     al,dx
  402e67:	data16 mov al,0x9c
  402e6a:	dec    esp
  402e6b:	in     al,0xd9
  402e6d:	mov    ebx,0xd20611fa
  402e72:	test   DWORD PTR [ecx],0xc818d802
  402e78:	dec    edx
  402e79:	push   0x58
  402e7b:	dec    esp
  402e7c:	adc    esi,DWORD PTR [ebp-0x326c8345]
  402e82:	mov    ebx,0xd763f5c1
  402e87:	or     DWORD PTR [eax],edi
  402e89:	jecxz  0x402e8d
  402e8b:	sbb    BYTE PTR [edx+0x48fbab24],dh
  402e91:	mov    eax,ds:0x8f4db87f
  402e96:	pop    edi
  402e97:	(bad)  
  402e98:	pop    ds
  402e99:	jmp    0xb8f65b5d
  402e9e:	(bad)  
  402e9f:	pop    edi
  402ea0:	pop    ecx
  402ea1:	(bad)  
  402ea2:	mov    ebx,DWORD PTR [esi+0x57]
  402ea5:	jae    0x402ed3
  402ea7:	pop    DWORD PTR [ebp-0x73]
  402eaa:	pop    edx
  402eab:	aaa    
  402eac:	fimul  DWORD PTR [ebp+0x3bc1a23d]
  402eb2:	mov    ds,esi
  402eb4:	xchg   ebp,eax
  402eb5:	daa    
  402eb6:	push   ecx
  402eb7:	stos   DWORD PTR es:[edi],eax
  402eb8:	dec    ebp
  402eb9:	add    edx,DWORD PTR [edx+edi*2]
  402ebc:	sbb    eax,0xca7c0b92
  402ec1:	jge    0x402e86
  402ec3:	push   eax
  402ec4:	push   ds
  402ec5:	mov    esp,0xa1ddc4f1
  402eca:	inc    eax
  402ecb:	xchg   ebp,eax
  402ecc:	mov    edi,0xe69250a6
  402ed1:	aaa    
  402ed2:	adc    BYTE PTR [ecx+0x20d74f17],bl
  402ed8:	pop    ds
  402ed9:	and    cl,dh
  402edb:	xchg   esi,eax
  402edc:	int3   
  402edd:	mov    esi,0x95c1883d
  402ee2:	test   ch,0x4b
  402ee5:	stos   DWORD PTR es:[edi],eax
  402ee6:	clc    
  402ee7:	sbb    DWORD PTR [edx-0x76],esi
  402eea:	lahf   
  402eeb:	arpl   bp,ax
  402eed:	cwde   
  402eee:	adc    esi,DWORD PTR [ebx-0x8]
  402ef1:	sub    ch,BYTE PTR ds:0x11f9d925
  402ef7:	push   cs
  402ef8:	repz in eax,dx
  402efa:	popf   
  402efb:	pop    edi
  402efc:	mov    fs,WORD PTR [esi+ebp*2-0x16]
  402f00:	mov    bh,0x6d
  402f02:	push   edx
  402f03:	inc    edx
  402f04:	and    cl,BYTE PTR [edi]
  402f06:	repz dec ebp
  402f08:	dec    edi
  402f09:	mov    ds:0x2cce359b,al
  402f0e:	push   esi
  402f0f:	mov    edx,0x135034db
  402f14:	push   0xb84c6961
  402f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f1a:	xor    DWORD PTR [edx+eax*4+0x56],ecx
  402f1e:	sub    ecx,ebx
  402f20:	xor    DWORD PTR [ebp+0x4a],esp
  402f23:	pusha  
  402f24:	enter  0x4049,0x96
  402f28:	inc    edx
  402f29:	jg     0x402f26
  402f2b:	ds and al,0x95
  402f2e:	add    DWORD PTR [ecx+0x8],ebx
  402f31:	cmp    eax,0x921982e1
  402f36:	lods   al,BYTE PTR ds:[esi]
  402f37:	or     DWORD PTR [esi+0x2c],ebp
  402f3a:	js     0x402ecd
  402f3c:	and    BYTE PTR [esi-0x19b1c475],bh
  402f42:	jae    0x402f50
  402f44:	inc    edi
  402f45:	jmp    0xd336:0xde4a44eb
  402f4c:	imul   edx,DWORD PTR ds:0x7fd6d604,0xffffff95
  402f53:	sub    bh,BYTE PTR [ecx+0x10]
  402f56:	xor    ebx,DWORD PTR ds:0x1463566a
  402f5c:	push   ss
  402f5d:	(bad)  
  402f5f:	add    BYTE PTR [edx+ecx*4],0xfb
  402f63:	or     ebx,esp
  402f65:	jmp    0x402fe3
  402f67:	xchg   BYTE PTR [ebp+0x28be2d7d],dl
  402f6d:	inc    edx
  402f6e:	fist   DWORD PTR [ebx+0x555cc46c]
  402f74:	push   es
  402f75:	test   DWORD PTR [ebx],esi
  402f77:	js     0x402fbf
  402f79:	stc    
  402f7a:	pop    ds
  402f7b:	(bad)  
  402f7c:	fsub   DWORD PTR [ebx-0x7e7e6bd8]
  402f82:	lahf   
  402f83:	cmp    al,0x43
  402f85:	xor    al,BYTE PTR cs:[bx]
  402f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f8a:	popf   
  402f8b:	jp     0x402ffa
  402f8d:	les    ecx,FWORD PTR [ecx]
  402f8f:	sbb    DWORD PTR [edx-0x5a3ac4a5],edx
  402f95:	daa    
  402f96:	cmp    al,0xca
  402f98:	add    BYTE PTR [eax],ch
  402f9a:	jo     0x402ff2
  402f9c:	jno    0x402fdd
  402f9e:	lods   eax,DWORD PTR ds:[esi]
  402f9f:	push   es
  402fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fa1:	add    bh,BYTE PTR [ebx+0x4f]
  402fa4:	stc    
  402fa5:	dec    ecx
  402fa6:	mov    al,0xa
  402fa8:	fsubr  DWORD PTR [ecx+ecx*1]
  402fab:	mov    dh,0x87
  402fad:	out    dx,eax
  402fae:	jns    0x402fc0
  402fb0:	pop    esi
  402fb1:	les    edi,FWORD PTR [eax+0x59ad7627]
  402fb7:	and    edi,edi
  402fb9:	sbb    BYTE PTR [edi-0xb626963],cl
  402fbf:	bound  esp,QWORD PTR [esi-0x60d8e83b]
  402fc5:	mov    ebx,0xb56efde3
  402fca:	mov    ch,0x45
  402fcc:	in     al,dx
  402fcd:	call   0xb3f1:0x91540132
  402fd4:	imul   ecx,esi,0xed7fdd3b
  402fda:	adc    eax,0x1e9168a5
  402fdf:	retf   0x9ca9
  402fe2:	fidiv  WORD PTR [edx-0x6]
  402fe5:	inc    edx
  402fe6:	or     ah,BYTE PTR [eax+eax*8]
  402fe9:	mov    BYTE PTR [edx],ch
  402feb:	ror    bl,0xa3
  402fee:	imul   BYTE PTR [ecx+ecx*2+0x2bc02e7a]
  402ff5:	dec    esi
  402ff6:	jae    0x40302a
  402ff8:	jmp    0xa0d5:0x6a9326a5
  402fff:	paddusw mm3,QWORD PTR ds:0xbc6a970b
  403006:	xchg   DWORD PTR [eax-0x2d],eax
  403009:	repnz sub BYTE PTR [eax-0x48],bl
  40300d:	call   0x9518:0x2a7810fd
  403014:	ret    0x11b5
  403017:	or     eax,0xca0b2418
  40301c:	jo     0x402ff0
  40301e:	ret    
  40301f:	mov    WORD PTR [ebp-0x56],?
  403022:	push   ebp
  403023:	mov    ch,0xb2
  403025:	mov    BYTE PTR [esi],bh
  403027:	inc    ecx
  403029:	imul   ecx,DWORD PTR [ecx-0x59e42cba],0x2fa9e89c
  403033:	push   0xffffffe9
  403035:	push   0xff5affa2
  40303a:	je     0x40301b
  40303c:	rcl    DWORD PTR [ecx+0x19040f0b],cl
  403042:	fld    QWORD PTR [esi]
  403044:	repz xor edx,ebx
  403047:	loopne 0x403061
  403049:	and    eax,0xd06e0745
  40304e:	pop    edx
  40304f:	pop    edx
  403050:	inc    BYTE PTR [eax-0x141bf626]
  403056:	adc    BYTE PTR [esi],bh
  403058:	jno    0x402fe3
  40305a:	jmp    0xf1a:0x8f6fbc03
  403061:	or     DWORD PTR [ebx],0x3e
  403064:	ret    
  403065:	popa   
  403066:	mov    ebp,0x2854797e
  40306b:	push   esi
  40306c:	iret   
  40306d:	or     edi,DWORD PTR [eax]
  40306f:	dec    edx
  403070:	ror    DWORD PTR [ecx+0x2c],1
  403073:	and    eax,0xcb65d65c
  403078:	int3   
  403079:	xchg   DWORD PTR [ebx+0x19],edx
  40307c:	pop    ss
  40307d:	sub    DWORD PTR [eax-0x7026f3eb],ebp
  403083:	and    eax,0x2ccd119
  403088:	sbb    al,0x90
  40308a:	adc    DWORD PTR [ebx+0x3],ebx
  40308d:	sbb    eax,0x77031593
  403092:	sbb    al,0xa6
  403094:	es cwde 
  403096:	pop    ds
  403097:	push   esp
  403098:	mov    BYTE PTR [edx-0x12],bh
  40309b:	and    ebp,DWORD PTR [esi-0x7113205c]
  4030a1:	nop
  4030a2:	sbb    BYTE PTR [edx],al
  4030a4:	add    DWORD PTR [ebp+0x5e],0x36
  4030a8:	retf   0xa18e
  4030ab:	loopne 0x403123
  4030ad:	dec    esp
  4030ae:	jns    0x40308a
  4030b0:	cli    
  4030b1:	or     BYTE PTR [ecx],ch
  4030b3:	test   BYTE PTR [esi-0x78],al
  4030b6:	ss jne 0x4030f2
  4030b9:	sti    
  4030ba:	mov    eax,ds:0x8239379
  4030bf:	adc    al,0xca
  4030c1:	jb     0x40305a
  4030c3:	nop
  4030c4:	stos   DWORD PTR es:[edi],eax
  4030c5:	iret   
  4030c6:	or     ecx,DWORD PTR ss:[edx+0x51658f28]
  4030cd:	xchg   ecx,eax
  4030ce:	ret    
  4030cf:	push   ebx
  4030d0:	inc    ecx
  4030d1:	xchg   al,cl
  4030d3:	lds    eax,FWORD PTR [ebp-0x67ea24f2]
  4030d9:	add    ebp,DWORD PTR ds:0xcb87f1c3
  4030df:	or     ebx,ebx
  4030e1:	xor    al,0x5f
  4030e3:	pop    ds
  4030e4:	sub    al,0xba
  4030e6:	test   eax,0xc1fdee8b
  4030eb:	jg     0x4030f3
  4030ed:	pushf  
  4030ee:	loopne 0x403110
  4030f0:	mov    bh,BYTE PTR [esp+edi*8+0x1d]
  4030f4:	push   esi
  4030f5:	lahf   
  4030f6:	pop    ebp
  4030f7:	adc    DWORD PTR [edi-0x33],ebp
  4030fa:	mov    dl,0x8b
  4030fc:	jbe    0x4030ed
  4030fe:	ja     0x4030b6
  403100:	xchg   BYTE PTR [eax-0x2a],bl
  403103:	adc    BYTE PTR [edi-0x10734d27],al
  403109:	pop    ds
  40310a:	cld    
  40310b:	(bad)  
  40310c:	mov    ds,edi
  40310e:	rol    DWORD PTR [eax-0x4f6061b3],0x22
  403115:	cmp    eax,0xd20c82f0
  40311a:	test   BYTE PTR [edx],dh
  40311c:	mov    ebx,0x4a121089
  403121:	(bad)  [esi+0x3a]
  403124:	pop    ss
  403125:	gs mov ah,0x6d
  403128:	nop
  403129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312a:	jmp    0x403148
  40312c:	pop    ecx
  40312d:	sbb    al,0xd3
  40312f:	hlt    
  403130:	lods   al,BYTE PTR ds:[esi]
  403131:	mov    dh,0xb5
  403133:	mov    BYTE PTR [esi+0x3e],cl
  403136:	cli    
  403137:	push   0x43f7d6eb
  40313c:	inc    eax
  40313d:	mov    ebx,0x30fd3751
  403142:	jecxz  0x403109
  403144:	fcmovnb st,st(6)
  403146:	jnp    0x4031ba
  403148:	lods   al,BYTE PTR ds:[esi]
  403149:	xor    BYTE PTR [ecx+0x2a],bl
  40314c:	aaa    
  40314d:	outs   dx,BYTE PTR ds:[esi]
  40314e:	dec    eax
  40314f:	jp     0x403143
  403151:	inc    ebp
  403152:	fisttp WORD PTR [esi]
  403154:	in     al,dx
  403155:	add    DWORD PTR [edi-0x5b8cba8c],ecx
  40315b:	fldcw  WORD PTR [ebx]
  40315d:	sbb    DWORD PTR [ebx-0x32],edx
  403160:	es lock stc 
  403163:	mov    al,0xa3
  403165:	pop    esi
  403166:	(bad)  
  403168:	or     BYTE PTR [esi+0x21],dh
  40316b:	cmp    bl,ch
  40316d:	pop    ebp
  40316e:	sbb    BYTE PTR [edx-0x6b],bl
  403171:	push   edx
  403172:	sub    eax,0x3f02af86
  403177:	out    dx,eax
  403178:	mov    al,ds:0x4bd240d7
  40317d:	and    BYTE PTR [eax],0x17
  403180:	or     eax,0xfd53216a
  403185:	cs das 
  403187:	cdq    
  403188:	dec    esi
  403189:	sub    edx,DWORD PTR [ebx-0x71]
  40318c:	sbb    eax,0x4ae85c64
  403191:	cmp    DWORD PTR [eax+0x1d],ebp
  403194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403195:	loop   0x40320d
  403197:	fnstenv [edx-0x7bb43a46]
  40319d:	lds    ecx,FWORD PTR [ecx+0x4]
  4031a0:	xchg   esp,eax
  4031a1:	repnz lahf 
  4031a3:	enter  0x1ea1,0xdc
  4031a7:	mov    ah,0x83
  4031a9:	adc    al,BYTE PTR [edx]
  4031ab:	push   es
  4031ac:	xor    ebp,DWORD PTR [ebx]
  4031ae:	sub    DWORD PTR [eax],eax
  4031b0:	xlat   BYTE PTR ds:[ebx]
  4031b1:	addr16 push edi
  4031b3:	mov    eax,0xb859c8cd
  4031b8:	xchg   edx,eax
  4031b9:	xor    ebx,esi
  4031bb:	std    
  4031bc:	inc    esi
  4031bd:	ins    DWORD PTR es:[edi],dx
  4031be:	pop    esi
  4031bf:	xor    ebx,DWORD PTR [ecx]
  4031c1:	mov    ecx,DWORD PTR [eax-0x1a]
  4031c4:	(bad)
  4031c8:	and    BYTE PTR [esi-0x135b98],ch
  4031ce:	out    0x8a,al
  4031d0:	push   edi
  4031d1:	mov    bl,0xea
  4031d3:	retf   0x79b6
  4031d6:	leave  
  4031d7:	mov    esp,0x509c0d6a
  4031dc:	lods   al,BYTE PTR ds:[esi]
  4031dd:	sbb    cl,BYTE PTR [esp+eiz*4]
  4031e0:	dec    ebp
  4031e1:	adc    al,0x94
  4031e3:	xchg   BYTE PTR [ebp+0x77],bl
  4031e6:	pusha  
  4031e7:	mul    DWORD PTR [edi-0x5e]
  4031ea:	mov    cl,0xd7
  4031ec:	mov    cl,BYTE PTR [ebx+0x65]
  4031ef:	in     al,0x24
  4031f1:	adc    edi,esp
  4031f3:	js     0x403186
  4031f5:	pusha  
  4031f6:	jbe    0x403242
  4031f8:	dec    eax
  4031f9:	pop    edi
  4031fa:	mov    ch,0x8a
  4031fc:	mov    ah,0xdc
  4031fe:	sbb    eax,0xb12cfa0d
  403203:	loopne 0x4031b8
  403205:	in     eax,0x54
  403207:	jne    0x40326d
  403209:	ds je  0x4031f4
  40320c:	or     al,0x6d
  40320e:	xchg   edx,eax
  40320f:	dec    eax
  403210:	test   al,0xc7
  403212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403213:	stc    
  403214:	das    
  403215:	sbb    dl,ah
  403217:	test   eax,0xb09e39a9
  40321c:	xor    BYTE PTR [ebp+0x45],0x9a
  403220:	jae    0x40323c
  403222:	das    
  403223:	mov    dl,0xe1
  403225:	icebp  
  403226:	jbe    0x4031b7
  403228:	hlt    
  403229:	xchg   esi,eax
  40322a:	adc    esi,esp
  40322c:	sar    DWORD PTR [ebp-0x180b0fe1],0xd4
  403233:	or     DWORD PTR [esi],edi
  403235:	and    dh,BYTE PTR ds:0x5ad8cb72
  40323b:	mov    eax,ds:0xf94f4655
  403240:	cmp    al,0x4a
  403242:	ret    0xe2f5
  403245:	xchg   ebx,eax
  403246:	and    esi,DWORD PTR [ecx]
  403248:	daa    
  403249:	inc    edi
  40324a:	sub    esi,DWORD PTR [esi]
  40324c:	pop    esi
  40324d:	or     DWORD PTR [ebp-0x4],0x23
  403251:	stos   BYTE PTR es:[edi],al
  403252:	xchg   ecx,eax
  403253:	test   BYTE PTR [edi-0x56],dl
  403256:	icebp  
  403257:	inc    edi
  403258:	sub    eax,0x8b715fce
  40325d:	stos   DWORD PTR es:[edi],eax
  40325e:	scas   al,BYTE PTR es:[edi]
  40325f:	scas   eax,DWORD PTR es:[edi]
  403260:	out    dx,al
  403261:	sub    DWORD PTR ds:0xbabe5b38,edi
  403267:	loope  0x4032be
  403269:	inc    ecx
  40326a:	inc    esi
  40326b:	push   es
  40326c:	out    0x69,eax
  40326e:	and    BYTE PTR [edx-0x34],al
  403271:	outs   dx,BYTE PTR ds:[esi]
  403272:	rol    edi,0x4c
  403275:	lahf   
  403276:	inc    ebx
  403277:	push   eax
  403278:	jg     0x40324c
  40327a:	ss jmp 0x5d54fed5
  403280:	mov    bl,0xe2
  403282:	and    al,0xb
  403284:	fsub   QWORD PTR [ebx+0x6fcd893f]
  40328a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40328b:	es add al,0x29
  40328e:	cmp    BYTE PTR [edx-0x1d8bef8f],0xbd
  403295:	retf   0x9a7f
  403298:	shl    DWORD PTR [ebx+0x51],cl
  40329b:	cli    
  40329c:	lea    edx,[esi-0x61425493]
  4032a2:	retf   0x7576
  4032a5:	aam    0x3a
  4032a7:	jne    0x403254
  4032a9:	aam    0xfb
  4032ab:	sbb    BYTE PTR ds:0xd04b7b2f,al
  4032b1:	nop
  4032b2:	imul   edx,eax,0xa82f2c05
  4032b8:	fcomi  st,st(0)
  4032ba:	pop    ecx
  4032bb:	cmp    BYTE PTR [edx],bh
  4032bd:	jne    0x40327a
  4032bf:	mov    bl,0x3
  4032c1:	sti    
  4032c2:	push   esi
  4032c3:	mov    ecx,0xe47543cf
  4032c8:	cmp    edi,ebp
  4032ca:	aas    
  4032cb:	rcl    BYTE PTR [esi-0x6ed093b7],0x1d
  4032d2:	out    dx,al
  4032d3:	adc    al,0xd7
  4032d5:	dec    esi
  4032d6:	dec    ecx
  4032d7:	call   0x16b47b5b
  4032dc:	pop    esi
  4032dd:	leave  
  4032de:	les    esp,FWORD PTR [edx+edx*4]
  4032e1:	mov    ds:0xdf559645,al
  4032e6:	sbb    BYTE PTR [edi+0x32],0x61
  4032ea:	(bad)  
  4032eb:	or     DWORD PTR [ecx],esi
  4032ed:	std    
  4032ee:	xchg   BYTE PTR [esi],dl
  4032f0:	mov    esi,0x8289efd7
  4032f5:	adc    edi,DWORD PTR [edi]
  4032f7:	fisubr WORD PTR [edi]
  4032f9:	cmp    DWORD PTR [ebx+eiz*2],eax
  4032fc:	call   0xfd22c9fd
  403301:	sub    eax,0x2a910695
  403306:	adc    esp,ebp
  403308:	xor    BYTE PTR [esi+0x14b82be0],bh
  40330e:	jno    0x40335e
  403310:	das    
  403311:	pushf  
  403312:	lods   eax,DWORD PTR ds:[esi]
  403313:	lock jae 0x40330a
  403316:	jnp    0x4032e9
  403318:	inc    esp
  403319:	add    DWORD PTR [edi+0x76b61cd8],edx
  40331f:	adc    dh,BYTE PTR [esi+0xb]
  403322:	add    DWORD PTR [edi+0x216ab8de],ebx
  403328:	bound  ebp,QWORD PTR [ebx]
  40332a:	push   ss
  40332b:	mov    ah,BYTE PTR [edx-0x25]
  40332e:	std    
  40332f:	jmp    0x95b2:0xd4005695
  403336:	loop   0x403363
  403338:	scas   eax,DWORD PTR es:[edi]
  403339:	ins    DWORD PTR es:[edi],dx
  40333a:	adc    bh,BYTE PTR [ecx]
  40333c:	add    eax,0x61d68a5e
  403341:	xor    DWORD PTR [esi+0x6a],0xe936aeeb
  403348:	and    ebx,DWORD PTR [eax]
  40334a:	outs   dx,BYTE PTR ds:[esi]
  40334b:	sahf   
  40334c:	lods   eax,DWORD PTR ds:[esi]
  40334d:	adc    al,0xba
  40334f:	cld    
  403350:	enter  0x8a4d,0xfb
  403354:	fild   QWORD PTR [esi]
  403356:	ja     0x403359
  403358:	pop    es
  403359:	retf   0xce98
  40335c:	dec    ecx
  40335d:	and    edx,ecx
  40335f:	sti    
  403360:	(bad)  
  403361:	jbe    0x403345
  403363:	scas   al,BYTE PTR es:[edi]
  403364:	mov    cs,WORD PTR [ecx]
  403366:	iret   
  403367:	out    dx,al
  403368:	add    esi,DWORD PTR [eax+0x7fa3f735]
  40336e:	sub    al,0x19
  403370:	jle    0x4033ab
  403372:	std    
  403373:	scas   eax,DWORD PTR es:[edi]
  403374:	xchg   edi,eax
  403375:	cld    
  403376:	xor    BYTE PTR [ebp-0x39d7cb40],dh
  40337c:	adc    ebp,ebx
  40337e:	adc    bh,BYTE PTR [ebx+0x1986b9db]
  403384:	jne    0x40330d
  403386:	push   esi
  403387:	test   esp,ecx
  403389:	mov    ebx,0xbb2e07ad
  40338e:	retf   0xaf93
  403391:	pop    edx
  403392:	adc    BYTE PTR [ebp*2+0x32e639bb],cl
  403399:	fdivrp st(7),st
  40339c:	cwde   
  40339d:	jg     0x4033f5
  40339f:	push   0x74
  4033a1:	or     edi,DWORD PTR [esi+0x1e]
  4033a4:	mov    ebx,0xf8f69efd
  4033a9:	xor    BYTE PTR ss:[edx+0x34fc2757],dl
  4033b0:	cmp    eax,0x8e6a5fd9
  4033b5:	cmp    ebx,esp
  4033b7:	pop    es
  4033b8:	jo     0x403417
  4033ba:	inc    ebp
  4033bb:	xor    DWORD PTR [edx+ebp*4],0xffffffb0
  4033bf:	rol    DWORD PTR gs:[esi-0x5f95f3c9],1
  4033c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033c7:	call   0xbf38:0xbef03f4d
  4033ce:	out    dx,eax
  4033cf:	loope  0x403375
  4033d1:	pop    ds
  4033d2:	mov    ebx,0x39817e69
  4033d7:	neg    DWORD PTR [edi]
  4033d9:	xlat   BYTE PTR ds:[ebx]
  4033da:	sub    dl,BYTE PTR [ebx+ebp*8]
  4033dd:	pop    ebp
  4033de:	push   cs
  4033df:	stos   DWORD PTR es:[edi],eax
  4033e0:	xchg   edx,eax
  4033e1:	mov    cl,0x99
  4033e3:	ret    
  4033e4:	shr    BYTE PTR [ebx],cl
  4033e6:	es pop ebp
  4033e8:	xor    cl,BYTE PTR ds:[ebp+0x24cc611c]
  4033ef:	mov    esi,DWORD PTR [esi+0x63ae932f]
  4033f5:	call   0x576b:0xc4f02b86
  4033fc:	ja     0x403392
  4033fe:	repnz es xchg ebx,eax
  403401:	mov    edi,0x402560b0
  403406:	lea    edi,[ebx+0xef97ea9]
  40340c:	jo     0x4033ad
  40340e:	addr16 fs jmp 0x403404
  403412:	push   ebx
  403413:	enter  0xb912,0x15
  403417:	jge    0x4033e5
  403419:	call   0x3676:0xf528ae00
  403420:	push   ds
  403421:	sti    
  403422:	mov    ds:0x517986fd,eax
  403427:	xor    DWORD PTR [edx],eax
  403429:	popa   
  40342a:	add    ebx,esp
  40342c:	push   es
  40342d:	(bad)  
  40342e:	mov    edi,0x3fc5c67
  403433:	sahf   
  403434:	test   eax,0x2203c507
  403439:	push   ebp
  40343a:	call   0x8bd1:0xaa67accb
  403441:	cmp    BYTE PTR [ecx+edx*8+0x7b],al
  403445:	mov    cl,0x3e
  403447:	add    ah,BYTE PTR [esi]
  403449:	jns    0x40341e
  40344b:	sub    al,0x40
  40344d:	push   0x24
  40344f:	cdq    
  403450:	dec    esp
  403451:	scas   al,BYTE PTR es:[edi]
  403452:	xor    eax,0x2054b608
  403457:	cmc    
  403458:	or     bh,al
  40345a:	cld    
  40345b:	xlat   BYTE PTR ds:[ebx]
  40345c:	xchg   ebx,eax
  40345d:	sti    
  40345e:	inc    esp
  40345f:	xchg   esi,eax
  403460:	shr    BYTE PTR [ebx-0xc],1
  403463:	int3   
  403464:	mov    ds:0x6e7c5913,eax
  403469:	cli    
  40346a:	test   eax,0xb6d7fc5d
  40346f:	xlat   BYTE PTR ds:[ebx]
  403470:	xchg   esi,eax
  403471:	aas    
  403472:	sar    BYTE PTR [esp+eax*2],0xeb
  403476:	jmp    0x6235:0xc4c95129
  40347d:	xchg   edx,eax
  40347e:	shl    BYTE PTR [ebx-0x1646a83e],0x7
  403485:	mov    cl,0x6a
  403487:	lds    esp,FWORD PTR [ebp+esi*4+0x7b]
  40348b:	xor    BYTE PTR [ebx],ah
  40348d:	jmp    0x4034d8
  40348f:	(bad)  
  403490:	push   edx
  403491:	sub    al,0xac
  403493:	inc    esi
  403494:	or     bh,BYTE PTR [esi]
  403496:	jbe    0x4034b5
  403498:	sub    DWORD PTR [edx],esi
  40349a:	jb     0x4034f1
  40349c:	sbb    ecx,DWORD PTR [ecx+0x7a732b22]
  4034a2:	ds aad 0x6
  4034a5:	div    BYTE PTR [eax-0xd913a1b]
  4034ab:	add    eax,0x2f956dd1
  4034b0:	daa    
  4034b1:	sbb    ebx,esi
  4034b3:	xor    BYTE PTR [edi+0x43e2262e],bl
  4034b9:	inc    ebx
  4034ba:	mov    bh,0xfc
  4034bc:	mov    dl,0x72
  4034be:	mov    bl,0xa
  4034c0:	out    dx,eax
  4034c1:	inc    edx
  4034c2:	xchg   edi,eax
  4034c3:	jle    0x403470
  4034c5:	pusha  
  4034c6:	lods   al,BYTE PTR ds:[esi]
  4034c7:	addr16 daa 
  4034c9:	int    0xb0
  4034cb:	push   esp
  4034cc:	sbb    ebp,DWORD PTR [edx-0x27]
  4034cf:	outs   dx,DWORD PTR ds:[esi]
  4034d0:	data16 stos BYTE PTR es:[edi],al
  4034d2:	inc    esi
  4034d3:	call   0xc681f4b
  4034d8:	pop    edi
  4034d9:	push   eax
  4034da:	push   ebx
  4034db:	push   ecx
  4034dc:	pop    ebx
  4034dd:	in     al,dx
  4034de:	into   
  4034df:	repz icebp 
  4034e1:	inc    eax
  4034e2:	test   BYTE PTR [eax],ah
  4034e4:	clc    
  4034e5:	xor    ah,BYTE PTR [edi+eiz*4+0x12]
  4034e9:	stc    
  4034ea:	fucomi st,st(2)
  4034ec:	mov    esi,0x607f9f20
  4034f1:	adc    edx,DWORD PTR [eax]
  4034f3:	sub    eax,DWORD PTR [eax+0xd]
  4034f6:	outs   dx,DWORD PTR ds:[esi]
  4034f7:	je     0x4034f0
  4034f9:	push   edx
  4034fa:	dec    esi
  4034fb:	mov    ebp,0xfa28003d
  403500:	stc    
  403501:	or     BYTE PTR [esi-0x6d5c7068],ch
  403507:	jo     0x4034a8
  403509:	arpl   bp,di
  40350b:	push   edi
  40350c:	ins    BYTE PTR es:[edi],dx
  40350d:	mov    bl,0xe5
  40350f:	jecxz  0x403582
  403511:	mul    DWORD PTR [edx]
  403513:	sub    eax,edi
  403515:	das    
  403516:	push   ds
  403517:	icebp  
  403518:	pop    ds
  403519:	push   0x1a
  40351b:	inc    eax
  40351c:	fucomip st,st(4)
  40351e:	loop   0x403574
  403520:	and    eax,0xf01c64df
  403525:	push   0x9f1c2129
  40352a:	iret   
  40352b:	jmp    0x4035a9
  40352d:	pusha  
  40352e:	xchg   ebx,eax
  40352f:	vmwrite edx,DWORD PTR [esi]
  403532:	(bad)  
  403533:	sar    BYTE PTR [esi+0x13],0xe7
  403537:	gs out 0x95,eax
  40353a:	repz pushf 
  40353c:	adc    eax,0xe6aa82c8
  403541:	int    0x19
  403543:	inc    ebp
  403544:	aam    0xb4
  403546:	jb     0x403500
  403548:	mov    bh,dh
  40354a:	push   cs
  40354b:	sub    eax,0xfae25a36
  403550:	mov    ah,0xe5
  403552:	int3   
  403553:	inc    ecx
  403554:	cdq    
  403555:	and    DWORD PTR [ecx-0x450f5a4],ebx
  40355b:	jae    0x4034ff
  40355d:	mov    edx,0xf2e96b93
  403562:	mov    BYTE PTR [esi-0x3d1d339c],ah
  403568:	pop    ds
  403569:	pop    ds
  40356a:	lea    ebx,[ebp-0x50c60ba8]
  403570:	push   ecx
  403571:	leave  
  403572:	sbb    DWORD PTR [ebx+edx*4-0x77],esi
  403576:	std    
  403577:	fs xchg edx,eax
  403579:	mov    edi,0xdb0b740b
  40357e:	popa   
  40357f:	sahf   
  403580:	outs   dx,DWORD PTR ds:[esi]
  403581:	push   cs
  403582:	mov    bl,0x46
  403584:	test   DWORD PTR [eax-0x23],esi
  403587:	and    eax,DWORD PTR [edi-0x54]
  40358a:	ret    0x839d
  40358d:	cmp    ebx,DWORD PTR [esi-0x57]
  403590:	xor    DWORD PTR [eax],esi
  403592:	rol    DWORD PTR es:[ebp+0x6e],cl
  403596:	cmp    ah,BYTE PTR [ebx]
  403598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403599:	in     al,0x18
  40359b:	jnp    0x4035c3
  40359d:	or     ch,bh
  40359f:	pop    esp
  4035a0:	pop    ds
  4035a1:	cs mov eax,0x214220a8
  4035a7:	shl    DWORD PTR [eax+0x7fae90cf],cl
  4035ad:	dec    ebx
  4035ae:	mov    bh,0xe7
  4035b0:	or     dl,BYTE PTR [ebx-0x1215c25a]
  4035b6:	dec    ebx
  4035b7:	rcl    DWORD PTR [ebx+0x633d8686],1
  4035bd:	cmc    
  4035be:	les    eax,FWORD PTR [ecx-0x58de7f03]
  4035c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035c5:	je     0x4035ee
  4035c7:	push   edx
  4035c8:	repz imul esp,DWORD PTR [ecx-0xa9e0a79],0xb07416c9
  4035d3:	(bad)  
  4035d4:	(bad)  
  4035d6:	mov    eax,0x31afefc
  4035db:	xor    ecx,DWORD PTR [edx-0x64566c82]
  4035e1:	lock pop esi
  4035e3:	clc    
  4035e4:	push   ebp
  4035e5:	push   ss
  4035e6:	jge    0x40365e
  4035e8:	jp     0x403612
  4035ea:	in     al,dx
  4035eb:	xchg   edi,eax
  4035ec:	test   eax,0x717a9695
  4035f1:	pop    ss
  4035f2:	int    0x74
  4035f4:	or     ebx,ecx
  4035f6:	pop    esi
  4035f7:	mov    BYTE PTR [ebx],0x86
  4035fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035fb:	xchg   esp,eax
  4035fc:	mov    edi,esi
  4035fe:	aaa    
  4035ff:	iret   
  403600:	sub    edx,DWORD PTR [ebx+0x594b4b98]
  403606:	popf   
  403607:	xor    eax,0x951dc8bc
  40360c:	jmp    DWORD PTR [ebp+0xf]
  40360f:	packsswb mm0,QWORD PTR [ebp+0x5b85e6a6]
  403616:	sub    al,0x4a
  403618:	sub    cl,BYTE PTR ds:0x214824a
  40361e:	pusha  
  40361f:	lahf   
  403620:	out    0xd3,al
  403622:	sub    eax,0x64ab4013
  403627:	adc    al,0xdc
  403629:	sbb    cl,BYTE PTR [edi+0x30]
  40362c:	or     BYTE PTR [edi+ebp*8],0xe
  403630:	into   
  403631:	gs pop eax
  403633:	out    dx,eax
  403634:	adc    al,cl
  403636:	mov    dl,0xa0
  403638:	(bad)  
  403639:	fs cmc 
  40363b:	mov    ecx,0x2fc28067
  403640:	leave  
  403641:	mov    ch,0x1c
  403643:	into   
  403644:	mov    ebp,0xc86b7bf9
  403649:	xchg   edi,eax
  40364a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40364b:	and    eax,DWORD PTR [ebx-0x15b1dc94]
  403651:	and    eax,0x571e8e41
  403656:	push   ebx
  403657:	pop    ecx
  403658:	clc    
  403659:	icebp  
  40365a:	cmp    BYTE PTR [edx-0x25a67e70],0xcc
  403661:	push   ecx
  403662:	imul   ecx,DWORD PTR [ecx],0x81fe1ff5
  403668:	sbb    al,BYTE PTR [ecx]
  40366a:	popa   
  40366b:	int3   
  40366c:	and    al,ah
  40366e:	pushf  
  40366f:	add    al,0xf7
  403671:	xor    BYTE PTR [edx],dl
  403673:	leave  
  403674:	pop    ds
  403675:	test   DWORD PTR [esi+ecx*2+0x36],eax
  403679:	jno    0x40362f
  40367b:	cmp    al,0xb7
  40367d:	fmul   DWORD PTR [eax]
  40367f:	out    dx,eax
  403680:	mov    al,0x9b
  403682:	xchg   ebx,eax
  403683:	mov    dl,0x9
  403685:	xchg   edi,eax
  403686:	cdq    
  403687:	cmp    al,0x6c
  403689:	lock pusha 
  40368b:	or     eax,0x80415f3e
  403690:	ins    BYTE PTR es:[edi],dx
  403691:	(bad)  
  403692:	jg     0x403656
  403694:	je     0x403691
  403696:	push   0xd8ad6825
  40369b:	sub    BYTE PTR [eax+0x3a],ah
  40369e:	addr16 mov ebx,0x186e9cd6
  4036a4:	jnp    0x403629
  4036a6:	mov    ebx,0x9029d543
  4036ab:	mov    DWORD PTR [edx],ebx
  4036ad:	shr    DWORD PTR [esi+0x5255c84f],0xc7
  4036b4:	cdq    
  4036b5:	mov    ebx,0xdc087005
  4036ba:	jmp    0x4036cb
  4036bc:	cmp    BYTE PTR [edi],bl
  4036be:	mov    ebp,0x26337303
  4036c3:	sbb    eax,0x33db2338
  4036c8:	(bad)  
  4036ca:	rcl    DWORD PTR [ebx],1
  4036cc:	nop
  4036cd:	jbe    0x4036f9
  4036cf:	pop    es
  4036d0:	mov    bl,ch
  4036d2:	push   ss
  4036d3:	or     BYTE PTR [esi-0x19f1c7c4],0x2
  4036da:	repnz lods al,BYTE PTR ds:[esi]
  4036dc:	(bad)  
  4036dd:	mov    es,eax
  4036df:	jl     0x4036b8
  4036e1:	jle    0x403743
  4036e3:	dec    ebp
  4036e4:	mov    bl,0x90
  4036e6:	jge    0x4036da
  4036e8:	in     eax,dx
  4036e9:	and    eax,0x5ecb32ef
  4036ee:	adc    al,0x25
  4036f0:	push   ebx
  4036f1:	push   0x73
  4036f3:	jl     0x403732
  4036f5:	outs   dx,BYTE PTR ds:[esi]
  4036f6:	outs   dx,DWORD PTR ds:[esi]
  4036f7:	pop    esp
  4036f8:	sbb    eax,0xd5b0c43e
  4036fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036fe:	mov    ch,0x61
  403700:	outs   dx,DWORD PTR ds:[esi]
  403701:	dec    ebx
  403702:	scas   al,BYTE PTR es:[edi]
  403703:	aaa    
  403704:	ret    
  403705:	iret   
  403706:	outs   dx,BYTE PTR ds:[esi]
  403707:	push   esi
  403708:	push   ds
  403709:	or     bl,BYTE PTR [esi+0x5e]
  40370c:	pop    ss
  40370d:	mov    cl,BYTE PTR es:[eax+0x5e5547c7]
  403714:	or     al,0x21
  403716:	pusha  
  403717:	xchg   DWORD PTR [ebx+edi*4],ebx
  40371a:	push   ebp
  40371b:	test   dl,dh
  40371d:	jb     0x403755
  40371f:	mov    eax,ds:0x4b516b31
  403724:	push   eax
  403725:	fild   WORD PTR [edi]
  403727:	out    dx,eax
  403728:	push   edx
  403729:	pushf  
  40372a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40372b:	call   DWORD PTR [edi]
  40372d:	or     dh,BYTE PTR ds:0x5b0ebac0
  403733:	push   fs
  403735:	jecxz  0x4036d3
  403737:	adc    al,0x79
  403739:	push   ebx
  40373a:	dec    ebp
  40373b:	xlat   BYTE PTR ds:[ebx]
  40373c:	stos   DWORD PTR es:[edi],eax
  40373d:	ds or  al,cl
  403740:	sub    DWORD PTR [edi],ecx
  403742:	inc    ecx
  403743:	mov    BYTE PTR [eax-0x7e],al
  403746:	(bad)  
  403748:	shr    DWORD PTR [edi],cl
  40374a:	lahf   
  40374b:	sbb    bh,BYTE PTR [edx+eax*8]
  40374e:	mov    al,ds:0xd9ca8eb7
  403753:	pop    es
  403754:	shr    BYTE PTR [edx-0x55],1
  403757:	jno    0x4037b3
  403759:	vmread DWORD PTR [ecx-0x33036872],ebp
  403760:	xchg   ebp,eax
  403761:	cmp    BYTE PTR [eax+0x2f],al
  403764:	pop    edx
  403765:	or     DWORD PTR ds:0x3c7d598c,edx
  40376b:	jmp    0x4037da
  40376d:	aas    
  40376e:	and    DWORD PTR [ecx+edx*2+0x57],ebx
  403772:	add    DWORD PTR [esi-0x8],0xfffffffc
  403776:	dec    edx
  403777:	bound  ecx,QWORD PTR [eax]
  403779:	shl    DWORD PTR ds:0x99c9c14d,0xd6
  403780:	mov    ebp,0xedf5690e
  403785:	cmp    BYTE PTR [esi-0x7d],cl
  403788:	fmul   st(5),st
  40378a:	or     cl,ah
  40378c:	fist   WORD PTR [edi]
  40378e:	and    BYTE PTR [edi+edi*4],cl
  403791:	or     eax,0x5bb0fc2e
  403796:	mov    ds:0x4cc35a45,al
  40379b:	call   0x4efc:0x5f97e027
  4037a2:	mov    cl,0xce
  4037a4:	jp     0x403730
  4037a6:	dec    esp
  4037a7:	mov    ds:0xff109e76,al
  4037ac:	pop    eax
  4037ad:	or     al,BYTE PTR [ebx-0x73bf72c1]
  4037b3:	fld    QWORD PTR [esi-0x2425a28e]
  4037b9:	inc    ebp
  4037ba:	push   es
  4037bb:	jno    0x40378a
  4037bd:	mov    ds:0x327e5f47,eax
  4037c2:	enter  0x419b,0x89
  4037c6:	mov    al,ds:0x777d4443
  4037cb:	cdq    
  4037cc:	bound  ebx,QWORD PTR [ebp-0x5ffce98f]
  4037d2:	xchg   edx,ebp
  4037d4:	daa    
  4037d5:	xor    al,0x3d
  4037d7:	mov    ah,0xd5
  4037d9:	jns    0x40381f
  4037db:	(bad)  
  4037dc:	in     eax,dx
  4037dd:	fisttp QWORD PTR [edi+0x46eb5dd1]
  4037e3:	cmp    al,0x43
  4037e5:	sbb    al,0x82
  4037e7:	jecxz  0x4037d8
  4037e9:	mov    bh,0x69
  4037eb:	ficomp DWORD PTR [edx]
  4037ed:	jle    0x40386b
  4037ef:	mov    ebx,ecx
  4037f1:	jge    0x4037d6
  4037f3:	fimul  DWORD PTR [edi]
  4037f5:	lds    esi,FWORD PTR [eax-0x52]
  4037f8:	push   es
  4037f9:	mov    cl,0x81
  4037fb:	push   eax
  4037fc:	shr    BYTE PTR [ecx+0x4e],cl
  4037ff:	cli    
  403800:	fsub   QWORD PTR [esi+0x23132f0e]
  403806:	call   0xeb65:0x51214d4b
  40380d:	sub    ch,bl
  40380f:	out    dx,al
  403810:	sub    cl,BYTE PTR [eax+ebx*8]
  403813:	outs   dx,BYTE PTR ds:[esi]
  403814:	push   ds
  403815:	pusha  
  403816:	pushf  
  403817:	adc    al,0x32
  403819:	test   al,0xac
  40381b:	mov    DWORD PTR [esi+0x53c73104],edi
  403821:	mov    edx,0x6e26f3cd
  403826:	mov    ds:0x243c9e6d,al
  40382b:	loopne 0x403892
  40382d:	adc    edx,DWORD PTR [ecx+0x2f]
  403830:	fisubr WORD PTR [ecx+edx*8-0xb]
  403834:	clc    
  403835:	data16 mov bl,BYTE PTR [eax+eax*1+0x3f]
  40383a:	mov    ds:0xd858d937,al
  40383f:	out    0x9e,eax
  403841:	lock loopne 0x40389a
  403844:	mov    DWORD PTR [edi],esp
  403846:	lea    ecx,[esi+0x4779b402]
  40384c:	add    ebp,DWORD PTR [edi]
  40384e:	inc    esi
  40384f:	bound  ebp,QWORD PTR [ebx+0x49]
  403852:	enter  0xab2a,0x4e
  403856:	gs hlt 
  403858:	jg     0x4037ff
  40385a:	out    dx,eax
  40385b:	xchg   DWORD PTR [edi],esi
  40385d:	mov    eax,0x31d16a5a
  403862:	jecxz  0x40381d
  403864:	mov    bl,0x12
  403866:	jno    0x403881
  403868:	sub    ecx,DWORD PTR [ebx+esi*8+0x25]
  40386c:	mov    edx,0xedd47f38
  403871:	in     eax,0xe2
  403873:	xor    al,0xbd
  403875:	out    0xc1,al
  403877:	add    eax,0xf39ce5ea
  40387c:	int3   
  40387d:	pusha  
  40387e:	dec    esi
  40387f:	ins    DWORD PTR es:[edi],dx
  403880:	lds    esp,FWORD PTR [edi+0x3a]
  403883:	inc    ebx
  403884:	test   al,0x3f
  403886:	sub    BYTE PTR [edi+0x4add5d59],cl
  40388c:	imul   ebp,DWORD PTR [ecx],0xd57a5414
  403892:	mov    edi,0x6fa11111
  403897:	add    DWORD PTR [ecx],0xffffffc1
  40389a:	(bad)  
  40389b:	pop    eax
  40389c:	test   DWORD PTR [edi+0x36b4bc87],ecx
  4038a2:	xchg   DWORD PTR [ecx*2-0x2c5645ed],ebp
  4038a9:	adc    cl,bh
  4038ab:	pop    ecx
  4038ac:	lea    ecx,[edx+0x6b]
  4038af:	xor    al,0x41
  4038b1:	lods   al,BYTE PTR ds:[esi]
  4038b2:	jmp    0xe559:0x8c3d3c24
  4038b9:	aaa    
  4038ba:	cmp    BYTE PTR [edx-0x4be13752],bl
  4038c0:	les    ecx,FWORD PTR [ebx-0x479efc09]
  4038c6:	xor    al,0xdc
  4038c8:	js     0x403910
  4038ca:	jns    0x4038e5
  4038cc:	ds idiv ebp
  4038cf:	xchg   edi,eax
  4038d0:	mov    ds:0xb7c03837,eax
  4038d5:	in     al,dx
  4038d6:	adc    esp,DWORD PTR [edx]
  4038d8:	add    al,0x1e
  4038da:	xor    bh,al
  4038dc:	jae    0x4038e4
  4038de:	add    BYTE PTR [eax-0x4095673a],dl
  4038e4:	mov    eax,ds:0x3f4a769f
  4038e9:	mov    esp,0x5cbd82bb
  4038ee:	add    BYTE PTR [esi],bh
  4038f0:	pop    ebp
  4038f1:	jno    0x4038f0
  4038f3:	pop    ecx
  4038f4:	mov    eax,0x82583567
  4038f9:	xchg   edx,eax
  4038fa:	dec    esp
  4038fb:	scas   al,BYTE PTR es:[edi]
  4038fc:	adc    al,0x88
  4038fe:	frstor ds:0xf746753f
  403904:	or     bh,bh
  403906:	mov    esp,0x5ab2cd2e
  40390b:	call   0xd739:0xc9cb12a6
  403912:	pop    edi
  403913:	jp     0x40393e
  403915:	popf   
  403916:	rcl    DWORD PTR [edx-0x49],1
  403919:	push   ebx
  40391a:	loope  0x4038c5
  40391c:	popf   
  40391d:	dec    edx
  40391e:	sbb    BYTE PTR [edi+0x18],ah
  403921:	dec    ebx
  403922:	adc    DWORD PTR [ebp-0x3d],esp
  403925:	xchg   esp,eax
  403926:	call   DWORD PTR [edi+0x72]
  403929:	mov    bh,0x76
  40392b:	xchg   edi,eax
  40392c:	je     0x4038f2
  40392e:	loopne 0x4038c5
  403930:	pushf  
  403931:	push   edx
  403932:	cmp    eax,0xe8d4cc3f
  403937:	xchg   edx,eax
  403938:	pop    ebp
  403939:	jns    0x40399e
  40393b:	addr16 sub eax,0x45cf5fad
  403941:	xor    BYTE PTR ds:0xf72502e4,bl
  403947:	xor    edx,DWORD PTR [eax-0x64]
  40394a:	daa    
  40394b:	in     al,dx
  40394c:	shl    DWORD PTR [edi],1
  40394e:	add    eax,0x5f0560d1
  403953:	clc    
  403954:	jno    0x40399f
  403956:	push   ebp
  403957:	jge    0x40393d
  403959:	jl     0x4039b9
  40395b:	dec    ecx
  40395c:	out    0x34,eax
  40395e:	sub    dl,dh
  403960:	push   ebp
  403961:	mov    esp,0xe97d8c1c
  403966:	js     0x4039cb
  403968:	int3   
  403969:	rcr    DWORD PTR [ebx],1
  40396b:	xor    esi,esi
  40396d:	cmp    BYTE PTR [ecx-0xb],dh
  403970:	mov    ebx,0x822662ba
  403975:	inc    ebp
  403976:	fistp  DWORD PTR [esi]
  403978:	lock lea esp,[edi-0x2256d10]
  40397f:	jbe    0x403924
  403981:	mov    ebp,0x35c91f04
  403986:	pushf  
  403987:	imul   ebp,DWORD PTR [edi+0x47],0xffffffb4
  40398b:	inc    esp
  40398c:	es xor ebp,0x39
  403990:	pop    ebx
  403991:	and    edx,esp
  403993:	imul   edx,ebx,0x59535c8c
  403999:	outs   dx,DWORD PTR ds:[esi]
  40399a:	loope  0x4039e6
  40399c:	setle  BYTE PTR [esi+0x7a]
  4039a0:	add    BYTE PTR [eax+ecx*4],bh
  4039a3:	push   ss
  4039a4:	sahf   
  4039a5:	add    al,ah
  4039a7:	icebp  
  4039a8:	dec    ecx
  4039a9:	sahf   
  4039aa:	xchg   DWORD PTR [ebx+0x4f],edi
  4039ad:	xchg   esi,eax
  4039ae:	add    eax,0x96ed9b0b
  4039b3:	(bad)  
  4039b4:	stc    
  4039b5:	(bad)  
  4039b6:	sbb    BYTE PTR [esp+ebp*8],bh
  4039b9:	arpl   WORD PTR [edi-0x2],ax
  4039bc:	inc    edx
  4039bd:	xor    cl,dh
  4039bf:	loop   0x4039f2
  4039c1:	or     al,0x5c
  4039c3:	fst    DWORD PTR [edx-0x2eaada90]
  4039c9:	aam    0x4e
  4039cb:	fstp   TBYTE PTR [ebx-0x80]
  4039ce:	jmp    edx
  4039d0:	loopne 0x4039d6
  4039d2:	mov    bl,0xaa
  4039d4:	jb     0x4039d2
  4039d6:	outs   dx,DWORD PTR ds:[esi]
  4039d7:	cli    
  4039d8:	outs   dx,DWORD PTR ds:[esi]
  4039d9:	fwait
  4039da:	xchg   ebx,eax
  4039db:	pop    esp
  4039dc:	sub    ch,BYTE PTR [ebp-0x80]
  4039df:	ins    DWORD PTR es:[edi],dx
  4039e0:	sbb    edx,eax
  4039e2:	push   edi
  4039e3:	mov    ecx,0x52e34ee0
  4039e8:	mov    dl,0xf6
  4039ea:	loopne 0x403a45
  4039ec:	xchg   DWORD PTR [eax+edx*8-0x80],esp
  4039f0:	cmp    eax,0x2af68773
  4039f5:	and    bl,BYTE PTR [edi-0x214ed2ed]
  4039fb:	scas   eax,DWORD PTR es:[edi]
  4039fc:	cmp    al,0x93
  4039fe:	pop    es
  4039ff:	sub    bh,dh
  403a01:	outs   dx,BYTE PTR ds:[esi]
  403a02:	push   esp
  403a03:	add    al,0xc7
  403a05:	jmp    0x403a69
  403a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a08:	xor    ebp,DWORD PTR [edx]
  403a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a0b:	aas    
  403a0c:	push   edx
  403a0d:	mov    dh,0xa1
  403a0f:	and    DWORD PTR [ebx+0x15529240],esi
  403a15:	sbb    cl,BYTE PTR [ecx+0x6f]
  403a18:	test   DWORD PTR [edx+0x75],ebp
  403a1b:	jmp    0x21ea574b
  403a20:	(bad)  
  403a21:	sub    ebx,DWORD PTR [eax]
  403a23:	fadd   DWORD PTR [esi-0x186e2aa4]
  403a29:	mov    edx,0x42191038
  403a2e:	jmp    0x403a0b
  403a30:	xchg   edi,eax
  403a31:	out    0x65,al
  403a33:	jbe    0x403aaa
  403a35:	inc    esi
  403a36:	in     eax,dx
  403a37:	enter  0x5dee,0x23
  403a3b:	out    0x60,eax
  403a3d:	inc    BYTE PTR [ecx-0x62]
  403a40:	mov    esp,DWORD PTR [ecx+0x47dd2d3b]
  403a46:	dec    esp
  403a47:	shl    BYTE PTR [ebx+0x34],1
  403a4a:	push   eax
  403a4b:	fcmovb st,st(1)
  403a4d:	stos   DWORD PTR es:[edi],eax
  403a4e:	xchg   edi,eax
  403a4f:	cli    
  403a50:	pusha  
  403a51:	mov    BYTE PTR fs:[ecx+0x757dad25],al
  403a58:	or     ch,BYTE PTR [edx+0x63]
  403a5b:	and    al,0xf9
  403a5d:	inc    ebx
  403a5e:	and    al,BYTE PTR [esi-0x6a]
  403a61:	in     eax,dx
  403a62:	(bad)  [eax+ecx*4]
  403a65:	out    dx,eax
  403a66:	outs   dx,DWORD PTR ds:[esi]
  403a67:	jnp    0x403a03
  403a69:	neg    DWORD PTR [ebx+0x4a]
  403a6c:	and    al,0x33
  403a6e:	inc    esp
  403a6f:	pop    esp
  403a70:	push   eax
  403a71:	aam    0x35
  403a73:	ror    BYTE PTR [edx-0x71],cl
  403a76:	in     eax,dx
  403a77:	jp     0x403aeb
  403a79:	fild   DWORD PTR [ebx-0x6cd1381b]
  403a7f:	aaa    
  403a80:	xchg   edi,eax
  403a81:	outs   dx,DWORD PTR ds:[esi]
  403a82:	and    dh,bl
  403a84:	(bad)  
  403a85:	idiv   BYTE PTR [edi]
  403a87:	xchg   ecx,eax
  403a88:	sub    eax,DWORD PTR [ebx-0x3c70fa4e]
  403a8e:	in     eax,0xd9
  403a90:	mov    BYTE PTR [edx-0x9],0x2
  403a94:	mov    al,ds:0x502fef8e
  403a99:	enter  0x41a8,0x44
  403a9d:	sahf   
  403a9e:	jmp    0x403a9a
  403aa0:	fcomip st,st(2)
  403aa2:	xchg   ebp,eax
  403aa3:	stc    
  403aa4:	ja     0x403a32
  403aa6:	hlt    
  403aa7:	pushf  
  403aa8:	adc    ah,BYTE PTR [eax]
  403aaa:	and    ecx,DWORD PTR [ecx-0x2dde489f]
  403ab0:	xor    eax,0x84b7d892
  403ab5:	lods   al,BYTE PTR ds:[esi]
  403ab6:	pop    edi
  403ab7:	fwait
  403ab8:	push   es
  403ab9:	mov    cl,0x1
  403abb:	icebp  
  403abc:	mov    ecx,0xf04669f0
  403ac1:	pop    ds
  403ac2:	neg    DWORD PTR [edx+0x6e]
  403ac5:	push   ecx
  403ac7:	lods   eax,DWORD PTR ds:[esi]
  403ac8:	out    0xc1,al
  403aca:	jge    0x403a6d
  403acc:	les    eax,FWORD PTR [edi-0x3d1542b5]
  403ad2:	shr    BYTE PTR [ebp-0xc],0xd7
  403ad6:	pop    edx
  403ad7:	cdq    
  403ad8:	aaa    
  403ad9:	mov    ebx,0xb152e169
  403ade:	mov    BYTE PTR [edx+0x32],bl
  403ae1:	push   cs
  403ae2:	lea    esp,[edi]
  403ae4:	ins    DWORD PTR es:[edi],dx
  403ae5:	pop    es
  403ae6:	adc    al,0xcc
  403ae8:	call   DWORD PTR [ebp+0x76]
  403aeb:	icebp  
  403aec:	jno    0x403b54
  403aee:	xor    ebx,DWORD PTR [ebx*4+0x1a5af567]
  403af5:	loop   0x403a7d
  403af7:	dec    ebp
  403af8:	shl    BYTE PTR [edx],cl
  403afa:	mov    WORD PTR [esi],es
  403afc:	mov    esp,0x3e192b7c
  403b01:	lods   eax,DWORD PTR ds:[esi]
  403b02:	stos   DWORD PTR es:[edi],eax
  403b03:	sbb    DWORD PTR [esi+ebp*2],eax
  403b06:	mov    ds:0x5794eb2b,eax
  403b0b:	js     0x403b52
  403b0d:	into   
  403b0e:	adc    eax,0xc4a211ca
  403b13:	icebp  
  403b14:	mov    eax,0xd55d6b2d
  403b19:	add    DWORD PTR [ecx-0x5e],ecx
  403b1c:	jmp    0xae0aab3
  403b21:	(bad)  
  403b23:	into   
  403b24:	out    dx,al
  403b25:	fisub  WORD PTR [eax+0x12]
  403b28:	sti    
  403b29:	daa    
  403b2a:	aad    0x22
  403b2c:	into   
  403b2d:	dec    edx
  403b2e:	rol    BYTE PTR [ebp-0x3c],1
  403b31:	pop    es
  403b32:	or     esi,edi
  403b34:	pop    esp
  403b35:	ins    BYTE PTR es:[edi],dx
  403b36:	sbb    BYTE PTR [ebp+0x3cceb91e],al
  403b3c:	xchg   esp,eax
  403b3d:	dec    ecx
  403b3e:	or     dl,al
  403b40:	mov    ds:0xc28fc974,eax
  403b45:	jg     0x403b2a
  403b47:	pop    edi
  403b48:	pcmpgtw mm1,QWORD PTR [edi]
  403b4b:	loop   0x403ad6
  403b4d:	test   al,0xe8
  403b4f:	retf   0xd9ec
  403b52:	in     al,dx
  403b53:	add    ch,ah
  403b55:	push   ebx
  403b56:	or     BYTE PTR [edi],dh
  403b58:	pop    esp
  403b59:	cld    
  403b5a:	xor    eax,0x1f7fe247
  403b5f:	loop   0x403b5f
  403b61:	or     dl,bh
  403b63:	mov    ah,0x15
  403b65:	fucomi st,st(7)
  403b67:	(bad)  
  403b68:	cli    
  403b69:	dec    ecx
  403b6a:	mov    ebp,0xc6674a0d
  403b6f:	mov    WORD PTR [ecx+0x53],?
  403b72:	sbb    BYTE PTR [ecx+0x60],0x24
  403b76:	xchg   ecx,eax
  403b77:	cmp    al,0x61
  403b79:	cld    
  403b7a:	xor    al,0x3f
  403b7c:	or     eax,0xcfd81055
  403b81:	lahf   
  403b82:	pop    ebx
  403b83:	fbstp  TBYTE PTR [ebp+ecx*8-0x3cba1ceb]
  403b8a:	adc    al,0xfc
  403b8c:	rol    DWORD PTR [esi-0x44],1
  403b8f:	xor    DWORD PTR [eax],eax
  403b91:	cmp    eax,DWORD PTR [edx-0x6e]
  403b94:	int3   
  403b95:	push   ebx
  403b96:	or     esi,DWORD PTR [edx-0x9]
  403b99:	and    BYTE PTR [ebx],dl
  403b9b:	cs pop edx
  403b9d:	sub    ebp,edi
  403b9f:	adc    eax,0xa587b114
  403ba4:	out    0xfe,al
  403ba6:	gs jns 0x403b59
  403ba9:	std    
  403baa:	push   esp
  403bac:	or     edi,ecx
  403bae:	sti    
  403baf:	mov    ebp,0x5b8cdf9a
  403bb4:	add    BYTE PTR [edx-0x16],ch
  403bb7:	stos   DWORD PTR es:[edi],eax
  403bb8:	cmp    DWORD PTR [edx+edx*8+0x5],ebx
  403bbc:	push   esi
  403bbd:	jb     0x403bd5
  403bbf:	aam    0xa9
  403bc1:	out    0x9e,al
  403bc3:	ficom  WORD PTR [edx-0x32]
  403bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc7:	scas   al,BYTE PTR es:[edi]
  403bc8:	test   al,0xde
  403bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bcb:	pop    DWORD PTR [edx-0x37]
  403bce:	sbb    eax,0xaa485b53
  403bd3:	cld    
  403bd4:	outs   dx,BYTE PTR ds:[esi]
  403bd5:	inc    ebp
  403bd6:	mov    dl,0x4e
  403bd8:	out    dx,eax
  403bd9:	and    ecx,DWORD PTR [ebp+0x25]
  403bdc:	repnz hlt 
  403bde:	in     al,0xd2
  403be0:	ins    BYTE PTR es:[edi],dx
  403be1:	fsubr  QWORD PTR [esi]
  403be3:	out    0x6e,eax
  403be5:	jle    0x403be2
  403be7:	ror    DWORD PTR [edi],1
  403be9:	jge    0x403c35
  403beb:	mov    dl,0xfc
  403bed:	aaa    
  403bee:	retf   
  403bef:	xor    cl,dh
  403bf1:	(bad)  
  403bf2:	mov    edx,0x91b4dc49
  403bf7:	adc    al,BYTE PTR [eax-0x703ec095]
  403bfd:	clc    
  403bfe:	out    dx,eax
  403bff:	repz cmp al,0x6c
  403c02:	sub    edi,esp
  403c04:	push   eax
  403c05:	and    BYTE PTR ds:0x4e308e04,0x98
  403c0c:	xor    ch,cl
  403c0e:	xchg   ecx,eax
  403c0f:	add    dh,al
  403c11:	inc    eax
  403c12:	fwait
  403c13:	lahf   
  403c14:	push   esi
  403c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c16:	dec    esi
  403c17:	adc    al,0x10
  403c19:	and    DWORD PTR [ecx],0xc5f1221d
  403c1f:	outs   dx,DWORD PTR ds:[esi]
  403c20:	test   al,ch
  403c22:	dec    BYTE PTR [edx]
  403c24:	rcr    DWORD PTR [ebp+0x61496aee],0x4c
  403c2b:	sahf   
  403c2c:	jecxz  0x403c7f
  403c2e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403c30:	xor    eax,0x52e7ead
  403c35:	xor    ebx,DWORD PTR [eax]
  403c37:	mov    BYTE PTR [edx],cl
  403c39:	ja     0x403c96
  403c3b:	jne    0x403c49
  403c3d:	mov    ebx,0x1a800940
  403c42:	and    BYTE PTR [edi+0x67f87ed],dh
  403c48:	sub    al,0x55
  403c4a:	sbb    BYTE PTR [eax-0x19c36973],al
  403c50:	sbb    ch,BYTE PTR [ebp-0x151e83a9]
  403c56:	adc    al,0x77
  403c58:	sbb    DWORD PTR [ebp-0x784e43c7],ebx
  403c5e:	imul   edi,DWORD PTR [esp+esi*8+0x3f],0xaa4909f9
  403c66:	jle    0x403c70
  403c68:	jnp    0x403c6d
  403c6a:	call   0x4a4d:0xf8d2adb5
  403c71:	sbb    al,0x56
  403c73:	dec    esp
  403c74:	xchg   BYTE PTR [edx+0x55],bh
  403c77:	gs jmp 0xcdec7041
  403c7d:	and    al,0x51
  403c7f:	xchg   ebx,eax
  403c80:	out    dx,eax
  403c81:	sub    esp,DWORD PTR gs:[esi+0x73faee79]
  403c88:	push   ds
  403c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c8a:	pop    edi
  403c8b:	adc    DWORD PTR [eax+0x1fc717ac],ebx
  403c91:	arpl   bx,dx
  403c93:	and    eax,0xeab8969f
  403c98:	or     al,0x0
  403c9a:	hlt    
  403c9b:	mov    ecx,0xdd84d051
  403ca0:	add    esp,DWORD PTR ds:0x1a47d23c
  403ca6:	inc    edx
  403ca7:	(bad)  
  403ca8:	(bad)  
  403ca9:	enter  0x4bb3,0xb1
  403cad:	fucom  st(0)
  403caf:	faddp  st(2),st
  403cb1:	call   0x69510ed5
  403cb6:	mov    ebp,0xfa54cd78
  403cbb:	mov    ds:0xa5e8e738,al
  403cc0:	(bad)  
  403cc1:	in     al,0xa6
  403cc3:	sub    DWORD PTR [ecx+0x22],ebp
  403cc6:	jmp    0xed1a5ad5
  403ccb:	push   cs
  403ccc:	leave  
  403ccd:	inc    DWORD PTR [edx+0x11]
  403cd0:	int    0xfc
  403cd2:	test   BYTE PTR [eax+ecx*2-0x26e2e089],ch
  403cd9:	ret    
  403cda:	xor    DWORD PTR [edx-0x52b15532],edi
  403ce0:	adc    al,0xb3
  403ce2:	fwait
  403ce3:	inc    ebx
  403ce4:	xchg   edi,eax
  403ce5:	inc    ebx
  403ce6:	mov    bh,0x53
  403ce8:	gs loopne 0x403d33
  403ceb:	test   al,0xd
  403ced:	push   ss
  403cee:	ret    0xbf7c
  403cf1:	or     DWORD PTR [edi+0x23],edi
  403cf4:	mov    ecx,0xd7ba583c
  403cf9:	fsubr  QWORD PTR [esp+ebx*4]
  403cfc:	dec    esi
  403cfd:	dec    ebp
  403cfe:	scas   eax,DWORD PTR es:[edi]
  403cff:	sbb    eax,0x64406f18
  403d04:	js     0x4848d10d
  403d0a:	xchg   ebp,eax
  403d0b:	imul   esp,DWORD PTR [eax],0x4b
  403d0e:	push   ecx
  403d0f:	out    dx,eax
  403d10:	mov    ds:0x74b2156,eax
  403d15:	mov    dl,0x89
  403d17:	pop    esp
  403d18:	fs mov eax,0xd51a2ae0
  403d1e:	xor    dl,BYTE PTR [esp+eax*8]
  403d21:	cdq    
  403d22:	xor    al,0xc2
  403d24:	mov    al,ds:0xa15ebad9
  403d29:	test   DWORD PTR ds:0x9900384f,edi
  403d2f:	pop    esp
  403d30:	mov    al,BYTE PTR [ebx-0x5549384d]
  403d36:	addr16 pop ebx
  403d38:	rol    DWORD PTR [esi+edx*1],cl
  403d3b:	xchg   DWORD PTR [ebx+edi*2],edx
  403d3e:	xchg   edx,eax
  403d3f:	test   eax,0xe385718a
  403d44:	and    al,0xbd
  403d46:	(bad)  
  403d47:	leave  
  403d48:	jo     0x403d72
  403d4a:	rol    BYTE PTR [edx+ebp*2],1
  403d4d:	(bad)  
  403d4f:	pop    edi
  403d50:	dec    esi
  403d51:	ror    BYTE PTR [edi],1
  403d53:	scas   eax,DWORD PTR es:[edi]
  403d54:	ror    DWORD PTR [ebx+0x488f85d],cl
  403d5a:	sbb    cl,BYTE PTR [ebx+0x558bd045]
  403d60:	hlt    
  403d61:	xor    eax,esi
  403d63:	add    eax,edi
  403d65:	jmp    0x4060d5
  403d6a:	scas   al,BYTE PTR es:[edi]
  403d6b:	pushf  
  403d6c:	and    al,0xa
  403d6e:	add    al,0x82
  403d70:	test   BYTE PTR [eax+eiz*4+0x1c488d78],bl
  403d77:	dec    esp
  403d78:	in     eax,dx
  403d79:	cld    
  403d7a:	das    
  403d7b:	pop    edi
  403d7c:	jp     0x403df8
  403d7e:	das    
  403d7f:	pop    edi
  403d80:	jp     0x403dfc
  403d82:	sub    al,0xda
  403d84:	mov    bh,0x13
  403d86:	sub    DWORD PTR [ecx+0x3015e7d5],ebp
  403d8c:	push   ecx
  403d8d:	push   es
  403d8e:	fist   WORD PTR [ecx-0x4e42e836]
  403d94:	cmp    ch,BYTE PTR [ebx+ecx*4-0x74]
  403d98:	sub    BYTE PTR [eax],bl
  403d9a:	icebp  
  403d9b:	popa   
  403d9c:	pop    ebp
  403d9d:	sbb    DWORD PTR [edx-0x63],edi
  403da0:	xor    DWORD PTR [edx-0x4c],edx
  403da3:	adc    BYTE PTR [edx],bh
  403da5:	mov    ch,0x95
  403da7:	inc    esi
  403da8:	pop    esi
  403da9:	ffreep st(1)
  403dab:	pop    eax
  403dac:	mov    esp,0xb5a5d0d3
  403db1:	push   ds
  403db2:	fild   DWORD PTR fs:[edi+0x1ba398ea]
  403db9:	loopne 0x403dd7
  403dbb:	or     edi,DWORD PTR [ebx+0x4a847b69]
  403dc1:	push   ss
  403dc2:	cdq    
  403dc3:	or     al,0xee
  403dc5:	arpl   WORD PTR [edx],dx
  403dc7:	mov    dl,0x7a
  403dc9:	(bad)  
  403dca:	fdiv   DWORD PTR [ebx+0x235765fd]
  403dd0:	add    al,0x2f
  403dd2:	adc    eax,0x36dfc8f5
  403dd7:	jo     0x403d67
  403dd9:	or     ebp,ebx
  403ddb:	sbb    ecx,DWORD PTR [ecx+0x27b5036d]
  403de1:	adc    DWORD PTR [eax-0x56],ecx
  403de4:	les    esp,FWORD PTR [edi-0x3838a2d1]
  403dea:	cli    
  403deb:	jmp    0x403d8c
  403ded:	pop    es
  403dee:	data16 jle 0x403e10
  403df1:	xchg   ebx,eax
  403df2:	inc    eax
  403df3:	lahf   
  403df4:	mov    cl,0x28
  403df6:	(bad)  
  403df7:	push   ds
  403df8:	mov    ebx,DWORD PTR [ebx+0x6b4912cc]
  403dfe:	fisub  WORD PTR [edi+0x12eef6fe]
  403e04:	mov    esp,0x4c7f9d39
  403e09:	jne    0x403dd6
  403e0b:	jge    0x403dbc
  403e0d:	add    eax,0xbacebe45
  403e12:	fidivr DWORD PTR [esi-0x3e26987a]
  403e18:	pop    esi
  403e19:	adc    BYTE PTR [ecx+0x11],cl
  403e1c:	cmp    DWORD PTR [edx+0x7b0b9673],ecx
  403e22:	or     eax,0x47336516
  403e27:	push   edx
  403e28:	daa    
  403e29:	pop    esp
  403e2a:	cmp    ch,BYTE PTR [ebp-0x7a6f244d]
  403e30:	pop    ebp
  403e31:	mov    edx,0xaf5cc32
  403e36:	pop    edi
  403e37:	dec    edx
  403e38:	sub    ah,cl
  403e3a:	jae    0x403e6a
  403e3c:	pop    ebp
  403e3d:	fwait
  403e3e:	jp     0x403e6c
  403e40:	clc    
  403e41:	pusha  
  403e42:	cmp    BYTE PTR [esi],al
  403e44:	push   es
  403e45:	jle    0x403e1a
  403e47:	inc    ecx
  403e48:	(bad)  
  403e49:	mov    ds,WORD PTR [ebx+eiz*2]
  403e4c:	push   edx
  403e4d:	push   cs
  403e4e:	sar    esp,cl
  403e50:	mov    dl,bh
  403e52:	aas    
  403e53:	out    dx,al
  403e54:	inc    ebx
  403e55:	in     eax,dx
  403e56:	sbb    eax,0xead6a0ad
  403e5b:	push   esp
  403e5c:	pop    edx
  403e5d:	jo     0x403e4f
  403e5f:	jne    0x403e11
  403e61:	arpl   WORD PTR [edi-0x4543929a],cx
  403e67:	ffreep st(7)
  403e69:	adc    ch,dh
  403e6b:	test   BYTE PTR [esi-0x55],cl
  403e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e6f:	paddsw mm6,QWORD PTR [ecx+0x3b167eb9]
  403e76:	test   DWORD PTR [esi-0x28],esi
  403e79:	aad    0xfd
  403e7b:	cmp    DWORD PTR [ebp+0x30],edi
  403e7e:	mov    DWORD PTR [ecx-0x461363e8],edx
  403e84:	ins    BYTE PTR es:[edi],dx
  403e85:	ds pushf 
  403e87:	push   es
  403e88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e89:	je     0x403eec
  403e8b:	sbb    esp,DWORD PTR [ecx+0x65]
  403e8e:	int    0xc6
  403e90:	retf   0x4625
  403e93:	xchg   esp,eax
  403e94:	clc    
  403e95:	mov    esi,0x1a0b0a8a
  403e9a:	sub    al,cl
  403e9c:	enter  0x9f4,0x2f
  403ea0:	mov    bl,ah
  403ea2:	add    eax,0xcbcb2bd2
  403ea7:	call   0xfb59:0x5096dc3d
  403eae:	aad    0x2f
  403eb0:	and    bl,ah
  403eb2:	pop    es
  403eb3:	mov    dh,0x7a
  403eb5:	xor    ebp,DWORD PTR ds:0xa603eaa8
  403ebb:	cmp    eax,DWORD PTR [edi]
  403ebd:	out    dx,al
  403ebe:	cmp    bl,bl
  403ec0:	lea    edi,[eax-0x2]
  403ec3:	and    ecx,DWORD PTR [ecx]
  403ec5:	cmp    DWORD PTR [edx],0x3a
  403ec8:	pop    ss
  403ec9:	inc    edi
  403eca:	xor    al,0x41
  403ecc:	inc    edi
  403ecd:	add    DWORD PTR [ebx+0x4585bcca],0x69
  403ed4:	mov    al,0x52
  403ed6:	ins    BYTE PTR es:[edi],dx
  403ed7:	retf   0x372b
  403eda:	xor    BYTE PTR [ebx],ch
  403edc:	aaa    
  403edd:	mov    ebx,DWORD PTR [eax+0x1e]
  403ee0:	outs   dx,BYTE PTR ds:[esi]
  403ee1:	js     0x403e6b
  403ee3:	mov    dh,0x94
  403ee5:	fst    DWORD PTR [eax-0xb5ad0b]
  403eeb:	inc    esi
  403eec:	mov    al,ds:0x5bc4126d
  403ef1:	cmp    DWORD PTR [edi],0xffffffb9
  403ef4:	imul   eax,edi,0x55ce3b4d
  403efa:	and    dl,BYTE PTR [edi+0x1bd4f24f]
  403f00:	push   eax
  403f01:	dec    ebp
  403f02:	mov    ebp,0xc62ed21e
  403f07:	jbe    0x403ebd
  403f09:	jmp    0x42f9:0xe1634595
  403f10:	dec    ebp
  403f11:	mov    dh,0x91
  403f13:	jle    0x403eca
  403f15:	jae    0x403ec0
  403f17:	daa    
  403f18:	dec    esi
  403f19:	inc    esi
  403f1a:	jge    0x403ece
  403f1c:	aad    0xce
  403f1e:	jl     0x403f43
  403f20:	stos   BYTE PTR es:[edi],al
  403f21:	scas   eax,DWORD PTR es:[edi]
  403f22:	ds inc bp
  403f25:	out    dx,al
  403f26:	dec    ebp
  403f27:	adc    eax,0x8157980a
  403f2c:	shl    DWORD PTR [edx],cl
  403f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2f:	and    al,BYTE PTR [edi+ebx*4-0x19]
  403f33:	(bad)  
  403f34:	push   edi
  403f35:	aam    0x84
  403f37:	sar    ebp,cl
  403f39:	call   0xe15a:0x7c619dbf
  403f40:	(bad)  
  403f42:	(bad)  
  403f43:	js     0x403fb9
  403f45:	into   
  403f46:	mov    esp,0x8cd59ec2
  403f4b:	push   ss
  403f4c:	shl    DWORD PTR [eax+0x58a8b505],0x12
  403f53:	in     al,dx
  403f54:	sti    
  403f55:	inc    BYTE PTR [edi]
  403f57:	cmp    DWORD PTR [ecx-0x30],ebx
  403f5a:	jbe    0x403f70
  403f5c:	xchg   ecx,eax
  403f5d:	pop    ebp
  403f5e:	ret    
  403f5f:	add    DWORD PTR [eax],ebp
  403f61:	js     0x403f5a
  403f63:	scas   al,BYTE PTR es:[edi]
  403f64:	xor    al,0x78
  403f66:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  403f68:	(bad)  
  403f69:	xor    bl,BYTE PTR ds:0x34f342ed
  403f6f:	sbb    eax,ecx
  403f71:	aad    0x99
  403f73:	in     eax,dx
  403f74:	iret   
  403f75:	xchg   DWORD PTR [ebx-0x2332332b],ebp
  403f7b:	test   al,0x24
  403f7d:	and    DWORD PTR [esi],edi
  403f7f:	pop    eax
  403f80:	push   edi
  403f81:	mov    ah,0xeb
  403f83:	hlt    
  403f84:	push   ebp
  403f85:	pop    ebp
  403f86:	inc    edx
  403f87:	sub    ecx,DWORD PTR [ecx+eax*1-0x41]
  403f8b:	xchg   BYTE PTR [esi],dh
  403f8d:	or     eax,0x3b1fd64
  403f92:	fadd   QWORD PTR [ecx-0x6]
  403f95:	push   0xffffffcb
  403f97:	fimul  WORD PTR [ecx]
  403f99:	lock mov ch,0x9
  403f9c:	jmp    0x1b80:0x5164cc30
  403fa3:	or     dl,cl
  403fa5:	arpl   WORD PTR [esi-0x54],bx
  403fa8:	or     al,0x59
  403faa:	jno    0x403fa8
  403fac:	pop    ebx
  403fad:	xor    ecx,DWORD PTR [ebx+ebx*1+0x1]
  403fb1:	rcl    DWORD PTR [eax+0x77737ea5],0xe
  403fb8:	scas   al,BYTE PTR es:[edi]
  403fb9:	cmp    edx,eax
  403fbb:	aaa    
  403fbc:	out    0xfc,al
  403fbe:	cdq    
  403fbf:	enter  0x88f1,0xd
  403fc3:	cmp    edi,ecx
  403fc5:	jl     0x403fcd
  403fc7:	pop    ebx
  403fc8:	stos   DWORD PTR es:[edi],eax
  403fc9:	shr    ah,1
  403fcb:	push   cs
  403fcc:	(bad)  
  403fcd:	outs   dx,BYTE PTR ds:[esi]
  403fce:	out    0x58,al
  403fd0:	dec    ebp
  403fd1:	in     al,dx
  403fd2:	ja     0x403fc6
  403fd4:	push   ds
  403fd5:	inc    esp
  403fd6:	push   ds
  403fd7:	xchg   ebp,eax
  403fd8:	imul   DWORD PTR [ebp-0x54]
  403fdb:	lods   al,BYTE PTR ds:[esi]
  403fdc:	adc    eax,0x39863b53
  403fe1:	inc    esi
  403fe2:	in     al,0x8c
  403fe4:	stc    
  403fe5:	or     eax,0x4c59d5b5
  403fea:	dec    esp
  403feb:	mov    ah,0xc3
  403fed:	call   0xe73d:0xf95dd41b
  403ff4:	adc    BYTE PTR [ebx],bl
  403ff6:	and    DWORD PTR [eax-0x1525da32],eax
  403ffc:	aaa    
  403ffd:	pop    ds
  403ffe:	xchg   ebp,eax
  403fff:	imul   eax,edx,0x3b
  404002:	jns    0x403f85
  404004:	enter  0x745a,0x3a
  404008:	jno    0x404023
  40400a:	xchg   DWORD PTR [ebx+0x42],ebp
  40400d:	sbb    al,0x18
  40400f:	leave  
  404010:	xor    eax,0x59f4a6ca
  404015:	and    ebp,edx
  404017:	repz add esp,esi
  40401a:	dec    esp
  40401b:	push   eax
  40401c:	mov    bh,0x7b
  40401e:	inc    ecx
  40401f:	mov    ah,0xc9
  404021:	push   eax
  404022:	jmp    0x403fee
  404024:	adc    esp,DWORD PTR [esi+0x186fdd78]
  40402a:	mov    ah,0xd
  40402c:	cs out dx,eax
  40402e:	jmp    0x1967:0x5df86420
  404035:	repnz scas eax,DWORD PTR es:[edi]
  404037:	mov    dl,ah
  404039:	je     0x403fdc
  40403b:	jb     0x404004
  40403d:	pop    esi
  40403e:	retf   
  40403f:	jl     0x40404c
  404041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404042:	in     eax,0xf4
  404044:	and    DWORD PTR [eax],esi
  404046:	jo     0x40400c
  404048:	xor    bh,ah
  40404a:	xchg   ebp,eax
  40404b:	xchg   edx,eax
  40404c:	xchg   BYTE PTR [ebp-0x11],cl
  40404f:	enter  0xd1c0,0x40
  404053:	jne    0x4040d0
  404055:	cmp    BYTE PTR [eax],0xba
  404058:	jbe    0x4040cd
  40405a:	cdq    
  40405b:	xchg   ecx,eax
  40405c:	cmp    eax,0x5b778c1d
  404061:	scas   al,BYTE PTR es:[edi]
  404062:	xor    al,0x73
  404064:	scas   al,BYTE PTR es:[edi]
  404065:	das    
  404066:	or     al,0xce
  404068:	add    eax,0xaa4a545
  40406d:	mov    ecx,DWORD PTR ds:[bx+di-0x284d]
  404073:	jne    0x404054
  404075:	xchg   esi,eax
  404076:	adc    DWORD PTR [eax-0x1bc2755c],0xf732f61f
  404080:	int    0xaf
  404082:	push   cs
  404083:	mov    edx,0xc16ecba2
  404088:	mov    ds:0x1791377a,eax
  40408d:	xchg   esi,eax
  40408e:	cld    
  40408f:	xor    DWORD PTR [esi-0x5c0a5ea0],ebx
  404095:	mov    bl,0x3c
  404097:	shl    ecx,1
  404099:	sbb    al,0x51
  40409b:	pop    ebx
  40409c:	fwait
  40409d:	sbb    esi,DWORD PTR [eax+esi*1]
  4040a0:	fdecstp 
  4040a2:	jae    0x4040b9
  4040a4:	push   eax
  4040a5:	jmp    0x404059
  4040a7:	fs pop ecx
  4040a9:	sub    edx,DWORD PTR [edx+0x49]
  4040ac:	or     al,0xb7
  4040ae:	lods   al,BYTE PTR ds:[esi]
  4040af:	gs dec di
  4040b2:	mov    ds:0x3aedb343,eax
  4040b7:	(bad)  
  4040b8:	fcmovb st,st(1)
  4040ba:	loopne 0x40411f
  4040bc:	xor    al,0x14
  4040be:	(bad)  
  4040bf:	repnz mov esi,DWORD PTR [esi+eax*2+0x42cd7029]
  4040c7:	xchg   ebp,eax
  4040c8:	mov    ebp,0xa085d383
  4040cd:	jl     0x40405f
  4040cf:	mov    WORD PTR [ebx+0x23267e2],?
  4040d5:	scas   al,BYTE PTR es:[edi]
  4040d6:	icebp  
  4040d7:	and    ah,al
  4040d9:	pusha  
  4040da:	jp     0x404114
  4040dc:	dec    eax
  4040dd:	(bad)  
  4040de:	aam    0xfd
  4040e0:	fwait
  4040e1:	test   al,0x90
  4040e3:	push   ecx
  4040e4:	fmulp  st(4),st
  4040e6:	dec    ebx
  4040e7:	lahf   
  4040e8:	and    al,0xef
  4040ea:	(bad)  
  4040ec:	scas   al,BYTE PTR es:[edi]
  4040ed:	out    0xb3,al
  4040ef:	dec    ecx
  4040f0:	pop    ecx
  4040f1:	and    DWORD PTR [edi],ecx
  4040f3:	sbb    BYTE PTR [ebx],bh
  4040f5:	push   edx
  4040f6:	in     eax,0xf5
  4040f8:	push   0x230c4587
  4040fd:	pop    esp
  4040fe:	popf   
  4040ff:	retf   0x8c61
  404102:	loop   0x404107
  404104:	scas   eax,DWORD PTR es:[edi]
  404105:	add    ecx,edx
  404107:	fsubr  DWORD PTR [eax+eax*8-0x8]
  40410b:	xchg   ebp,eax
  40410c:	cwde   
  40410d:	adc    al,0x9f
  40410f:	les    eax,FWORD PTR [eax+eax*1]
  404112:	xchg   edx,edi
  404114:	dec    edx
  404115:	idiv   edi
  404117:	ja     0x4040db
  404119:	add    BYTE PTR [ecx+0x11],0x74
  40411d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40411e:	xchg   ecx,eax
  40411f:	imul   esp,DWORD PTR [eax+0x15],0xffffffb4
  404123:	test   eax,0x851159ff
  404128:	jge    0x4040fb
  40412a:	mov    ecx,0x95a4d778
  40412f:	fs mov ebp,0xfe30824
  404135:	mov    al,ds:0x149acdf0
  40413a:	xchg   BYTE PTR [ebp+ebp*8-0x7f699d7b],ch
  404141:	lahf   
  404142:	jne    0x40412f
  404144:	(bad)  
  404146:	xchg   esi,eax
  404147:	sbb    DWORD PTR [eax-0x3b9ae125],edx
  40414d:	shr    DWORD PTR [edx+0x31d86b7a],0xed
  404154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404155:	pushf  
  404156:	or     BYTE PTR [edx+0x5bfea8ac],0x1e
  40415d:	outs   dx,BYTE PTR ds:[esi]
  40415e:	cs mov dh,0x2c
  404161:	add    al,ah
  404163:	and    eax,0x17613df2
  404168:	xchg   BYTE PTR [ebx-0x3],bh
  40416b:	fist   DWORD PTR [ebp+0x3]
  40416e:	pop    edx
  40416f:	retf   
  404170:	fistp  QWORD PTR [ebp+0x6b2297c5]
  404176:	loope  0x404101
  404178:	sub    eax,0x57f7e0ca
  40417d:	pop    ebx
  40417e:	mov    ebp,edx
  404180:	push   cs
  404181:	adc    dl,BYTE PTR [ecx-0x39e6a49]
  404187:	(bad)  
  404188:	jl     0x404182
  40418a:	shl    BYTE PTR [ebx],cl
  40418c:	push   edx
  40418d:	sbb    eax,ebp
  40418f:	sub    BYTE PTR [eax],ah
  404191:	xchg   esi,eax
  404192:	fbstp  TBYTE PTR [ecx+0x45df9478]
  404198:	mov    dl,0xb6
  40419a:	dec    esp
  40419b:	loope  0x4041d0
  40419d:	jmp    0x4041a8
  40419f:	or     BYTE PTR [edx-0x4133367c],dl
  4041a5:	mov    BYTE PTR [esi],cl
  4041a7:	mov    ds:0x2ed144b3,al
  4041ac:	lods   al,BYTE PTR ds:[esi]
  4041ad:	lds    eax,FWORD PTR [esi]
  4041af:	pop    edx
  4041b0:	loop   0x40418d
  4041b2:	pop    esi
  4041b3:	mov    ecx,ecx
  4041b5:	cld    
  4041b6:	xchg   edi,eax
  4041b7:	dec    esp
  4041b8:	stos   BYTE PTR es:[edi],al
  4041b9:	jmp    0x4041c8
  4041bb:	(bad)  
  4041bc:	int    0xb
  4041be:	jg     0x40415b
  4041c0:	pop    ss
  4041c1:	and    BYTE PTR [edx+esi*1],0x6b
  4041c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041c6:	cdq    
  4041c7:	aam    0xd0
  4041c9:	cmp    eax,0xb11bd9b2
  4041ce:	pop    ebx
  4041cf:	(bad)  
  4041d0:	mov    ecx,0xdd0466f8
  4041d5:	adc    bl,ah
  4041d7:	in     eax,dx
  4041d8:	aad    0x5a
  4041da:	xchg   ebx,eax
  4041db:	ja     0x404177
  4041dd:	popa   
  4041de:	popf   
  4041df:	push   esp
  4041e0:	pusha  
  4041e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e2:	pop    ecx
  4041e3:	inc    esp
  4041e4:	mov    eax,0x75a7f733
  4041e9:	fisub  DWORD PTR [esi]
  4041eb:	xchg   BYTE PTR [ebp+eiz*2-0x77afc1ea],dl
  4041f2:	push   0x5d
  4041f4:	xor    al,0x80
  4041f6:	adc    al,dh
  4041f8:	cmp    BYTE PTR [edi],0x80
  4041fb:	(bad)  
  4041fc:	sbb    al,0x29
  4041fe:	mov    BYTE PTR [esi+0x1],ah
  404201:	push   edi
  404202:	shl    BYTE PTR [edi-0x60916fcf],1
  404208:	hlt    
  404209:	(bad)  [edi+0x40]
  40420c:	ins    BYTE PTR es:[edi],dx
  40420d:	jecxz  0x4041ef
  40420f:	(bad)  
  404210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404211:	data16 jl 0x40423a
  404214:	(bad)  
  404215:	hlt    
  404216:	test   al,0xfa
  404218:	jmp    0xfd4c:0x43ad5551
  40421f:	mov    al,ds:0xd267ddc6
  404224:	add    bl,al
  404226:	mov    ds:0x4027fd37,eax
  40422b:	stc    
  40422c:	rol    BYTE PTR [esi-0x6e],cl
  40422f:	inc    edx
  404230:	adc    DWORD PTR ds:0xd0755bd8,edx
  404236:	das    
  404237:	push   edx
  404238:	jae    0x40424c
  40423a:	inc    eax
  40423b:	and    ecx,edx
  40423d:	bound  esp,QWORD PTR [esi]
  40423f:	nop
  404240:	(bad)  
  404241:	cmp    ecx,DWORD PTR [esi]
  404243:	cmp    ah,bh
  404245:	and    eax,0xf39efe4e
  40424a:	addr16 sub al,0x51
  40424d:	idiv   DWORD PTR [eax]
  40424f:	enter  0xe5fb,0x27
  404253:	sahf   
  404254:	gs je  0x404227
  404257:	(bad)  
  404258:	int    0xf6
  40425a:	cmp    cl,BYTE PTR ds:0xd1effaba
  404260:	outs   dx,DWORD PTR ds:[esi]
  404261:	test   BYTE PTR [eax],0xaf
  404264:	xor    al,0x8b
  404266:	js     0x4042d0
  404268:	adc    ch,ah
  40426a:	pop    es
  40426b:	(bad)  
  40426c:	das    
  40426d:	jb     0x404259
  40426f:	jp     0x404290
  404271:	cmp    DWORD PTR [ebx],ebx
  404273:	das    
  404274:	adc    DWORD PTR [ecx+0x27],esp
  404277:	and    esp,0x49a5b7b2
  40427d:	pop    ebp
  40427e:	out    0xd3,eax
  404280:	add    bh,al
  404282:	(bad)  
  404283:	outs   dx,DWORD PTR ds:[esi]
  404284:	xchg   ebp,eax
  404285:	inc    edi
  404286:	in     eax,0x3f
  404288:	jmp    0x18eb3905
  40428d:	xchg   esi,eax
  40428e:	shr    BYTE PTR [edx+edx*8-0x5a05d4ce],cl
  404295:	fxch   st(4)
  404297:	adc    DWORD PTR ds:0xa02d5949,esi
  40429d:	data16 in al,dx
  40429f:	inc    edx
  4042a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a1:	mov    ebx,0xc21d74c2
  4042a6:	pop    esi
  4042a7:	mov    fs,WORD PTR [ebp+0xcc235ec]
  4042ad:	jo     0x40430b
  4042af:	jl     0x404251
  4042b1:	hlt    
  4042b2:	ret    
  4042b3:	lods   al,BYTE PTR ds:[esi]
  4042b4:	sbb    eax,DWORD PTR [ecx]
  4042b6:	or     ah,BYTE PTR [ebx+edi*2+0x22338828]
  4042bd:	push   ss
  4042be:	jge    0x4042eb
  4042c0:	jg     0x4042eb
  4042c2:	int    0xb7
  4042c4:	mov    esi,0x5a6860f4
  4042c9:	daa    
  4042ca:	push   cs
  4042cb:	jbe    0x4042c8
  4042cd:	fbld   TBYTE PTR [ebx+0x6c3a5d4f]
  4042d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d4:	retf   
  4042d5:	inc    esi
  4042d6:	mov    ds:0x19b8931e,eax
  4042db:	dec    ecx
  4042dc:	sub    DWORD PTR [esi+0x71],0x6033df21
  4042e3:	sub    eax,ecx
  4042e5:	fsub   DWORD PTR [eax+0x60eeaf41]
  4042eb:	jp     0x4042b4
  4042ed:	xor    al,0x84
  4042ef:	lock in al,0xbc
  4042f2:	mov    edx,0x3591296e
  4042f7:	cmp    BYTE PTR [eax-0x5c],0x70
  4042fb:	into   
  4042fc:	in     eax,dx
  4042fd:	push   esp
  4042fe:	outs   dx,DWORD PTR ds:[esi]
  4042ff:	push   0xffffffab
  404301:	mov    ds,WORD PTR [ecx-0x41]
  404304:	jl     0x404366
  404306:	jno    0x40433a
  404308:	mov    al,ds:0xd9eb967a
  40430d:	test   al,0xa7
  40430f:	jmp    0x93cecdd3
  404314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404315:	in     al,dx
  404316:	fwait
  404317:	sbb    edi,eax
  404319:	push   cs
  40431a:	fdiv   QWORD PTR [bp+si-0x60]
  40431e:	loop   0x404366
  404320:	fwait
  404321:	mov    BYTE PTR ds:0x3a50da70,dh
  404327:	cwde   
  404328:	mov    DWORD PTR ds:[ecx-0x5],edx
  40432c:	shl    DWORD PTR [edx-0x1a88e732],0x7a
  404333:	cmp    dl,al
  404335:	popf   
  404336:	outs   dx,DWORD PTR ds:[esi]
  404337:	add    al,al
  404339:	jbe    0x404396
  40433b:	ja     0x404376
  40433d:	pop    ecx
  40433e:	iret   
  40433f:	adc    eax,0x75e4bc43
  404344:	and    BYTE PTR [ebp+ebx*1-0x6b],bl
  404348:	gs ret 
  40434a:	push   ebx
  40434b:	(bad)
  40434f:	mov    cs,WORD PTR [ebp-0x3156d5f5]
  404355:	cld    
  404356:	add    bh,dl
  404358:	int    0xa7
  40435a:	cmc    
  40435b:	int    0x14
  40435d:	in     al,0x56
  40435f:	pop    esp
  404360:	adc    DWORD PTR [ebx+edx*8+0x2504f072],eax
  404367:	jae    0x4043be
  404369:	adc    dl,dl
  40436b:	xor    ecx,edx
  40436d:	sub    esi,DWORD PTR [ebp+0x57c38913]
  404373:	dec    eax
  404374:	push   esi
  404375:	mov    eax,ds:0x9dd336db
  40437a:	stc    
  40437b:	and    eax,0xadd8d484
  404380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404381:	xor    BYTE PTR [ebx+edi*4+0x4d55393f],ah
  404388:	mov    al,0xde
  40438a:	in     eax,dx
  40438b:	popa   
  40438c:	inc    edx
  40438d:	push   edi
  40438e:	int    0x35
  404390:	sub    BYTE PTR [edi-0x37],ch
  404393:	sub    edx,esp
  404395:	add    dh,bh
  404397:	retf   0xc25
  40439a:	lds    edi,FWORD PTR [eax+edx*8+0x5]
  40439e:	and    eax,0x7a3747
  4043a3:	jnp    0x40438b
  4043a5:	or     esp,DWORD PTR [ecx*1-0x7bdf086d]
  4043ac:	pop    eax
  4043ad:	jge    0x40436e
  4043af:	inc    ebp
  4043b0:	and    edx,DWORD PTR [edi+edx*8]
  4043b3:	jg     0x404431
  4043b5:	or     BYTE PTR [eax+0x465d8c2a],cl
  4043bb:	adc    eax,0xb9762e2c
  4043c0:	inc    esi
  4043c1:	inc    esp
  4043c2:	jge    0x4043ec
  4043c4:	pop    ecx
  4043c5:	inc    ebp
  4043c6:	sahf   
  4043c7:	mov    eax,0xbf8544b3
  4043cc:	das    
  4043cd:	mov    dh,0xaa
  4043cf:	push   esi
  4043d0:	(bad)  
  4043d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043d2:	sub    cl,BYTE PTR [eax-0x59ba3e2c]
  4043d8:	push   ebp
  4043d9:	fld    TBYTE PTR [ecx-0x79309eb5]
  4043df:	in     al,dx
  4043e0:	out    0xd6,al
  4043e2:	mov    ebp,0xcf701697
  4043e7:	xchg   edi,eax
  4043e8:	out    0x55,al
  4043ea:	(bad)  
  4043eb:	call   0x879b73d6
  4043f0:	mov    esi,0x6fe09e9c
  4043f5:	jnp    0x404475
  4043f7:	add    edi,DWORD PTR [eax*2-0x392bc41a]
  4043fe:	les    esp,FWORD PTR [ebp+0x10f618c5]
  404404:	mov    ebx,0x926e524f
  404409:	mov    bl,0x87
  40440b:	cmp    bl,BYTE PTR [edx+0x1b]
  40440e:	in     eax,0x81
  404410:	cmp    ebx,DWORD PTR [esi]
  404412:	(bad)  
  404413:	dec    ebp
  404414:	mov    dl,0x64
  404416:	lods   eax,DWORD PTR ds:[esi]
  404417:	fimul  WORD PTR es:[edi+ebp*4+0x602a9995]
  40441f:	mov    cl,0xf1
  404421:	add    BYTE PTR [ecx],bl
  404423:	mov    BYTE PTR [eax+0x8],dh
  404426:	test   BYTE PTR [eax],bl
  404428:	mov    ah,0x70
  40442a:	adc    DWORD PTR [eax],0x983a5502
  404430:	outs   dx,BYTE PTR ds:[esi]
  404431:	mov    ebp,0x7441dd27
  404436:	outs   dx,BYTE PTR ds:[esi]
  404437:	xor    al,BYTE PTR [ebx+0x23b3b65b]
  40443d:	aaa    
  40443e:	push   esp
  40443f:	sub    dl,BYTE PTR [eax+0x3d]
  404442:	retf   0x3045
  404445:	mov    ebp,DWORD PTR [edx]
  404447:	mov    dl,0x3e
  404449:	out    dx,eax
  40444a:	cmc    
  40444b:	jmp    0x40447e
  40444d:	and    DWORD PTR [eax],ebx
  40444f:	sahf   
  404450:	cli    
  404451:	push   ebx
  404452:	jmp    0x5bc3e631
  404457:	(bad)  
  404458:	xchg   esi,eax
  404459:	sbb    edi,DWORD PTR [ebp-0x4937c1b7]
  40445f:	outs   dx,DWORD PTR ds:[esi]
  404460:	in     al,dx
  404461:	sbb    ebx,esp
  404463:	dec    edi
  404464:	popf   
  404465:	cmp    al,0x68
  404467:	push   edi
  404468:	repz xor eax,0x4e99b4a1
  40446f:	xchg   esp,eax
  404470:	pop    eax
  404471:	xchg   esi,eax
  404472:	addr16 and ebp,edx
  404475:	inc    esi
  404476:	in     al,0xb4
  404478:	inc    edi
  404479:	test   BYTE PTR [ecx+0x65],ch
  40447c:	outs   dx,BYTE PTR ds:[esi]
  40447d:	inc    edi
  40447e:	stc    
  40447f:	pop    edx
  404480:	adc    bl,bl
  404482:	mov    edi,0x424d22bc
  404487:	dec    edx
  404488:	xor    al,0x7c
  40448a:	xchg   ebx,eax
  40448b:	mov    bl,0x32
  40448d:	mov    ds:0x9e66c724,al
  404492:	push   0xffffff95
  404494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404495:	fucomp st(6)
  404497:	dec    ecx
  404498:	test   eax,0x4ad717
  40449d:	or     BYTE PTR ds:0x7f2adf64,al
  4044a3:	mov    cl,0x16
  4044a5:	cmc    
  4044a6:	ret    0xd6fb
  4044a9:	xor    eax,0xe0ee09e0
  4044ae:	arpl   WORD PTR [ebp+eax*4-0x4b2bb680],dx
  4044b5:	es pop ebp
  4044b7:	rcl    BYTE PTR ds:0x82538a08,1
  4044bd:	lods   al,BYTE PTR ds:[esi]
  4044be:	push   cs
  4044bf:	and    al,0x9c
  4044c1:	outs   dx,BYTE PTR ds:[esi]
  4044c2:	mov    edx,0xeee5d158
  4044c7:	mov    bh,BYTE PTR [ecx+0x2b1ed478]
  4044cd:	sbb    ebp,edi
  4044cf:	adc    ch,dh
  4044d1:	mov    dh,0x6b
  4044d3:	ins    BYTE PTR es:[edi],dx
  4044d4:	adc    BYTE PTR [esi+0x61],0x78
  4044d8:	scas   eax,DWORD PTR es:[edi]
  4044d9:	dec    edi
  4044da:	das    
  4044db:	(bad)  
  4044dc:	push   ebp
  4044dd:	sub    DWORD PTR [ecx-0x2a],edi
  4044e0:	mov    cs,WORD PTR [edi-0x6b5edd78]
  4044e6:	push   ebx
  4044e7:	in     al,0xe8
  4044e9:	ja     0x4044bb
  4044eb:	out    0x95,al
  4044ed:	push   esp
  4044ee:	int    0xb
  4044f0:	sbb    bl,BYTE PTR ds:0x7153dcb5
  4044f6:	(bad)  
  4044f7:	push   0xf33d4c29
  4044fc:	pop    ecx
  4044fd:	stc    
  4044fe:	ins    DWORD PTR es:[edi],dx
  4044ff:	sbb    DWORD PTR [ecx+0x44],ebp
  404502:	outs   dx,DWORD PTR ds:[esi]
  404503:	cli    
  404504:	pop    esi
  404505:	out    0xfa,eax
  404507:	dec    esp
  404508:	into   
  404509:	mov    esp,0xefc4c7b4
  40450e:	sub    bl,BYTE PTR [ebx+eiz*4+0x77]
  404512:	inc    ebp
  404513:	pop    esp
  404514:	dec    edi
  404515:	test   al,0x25
  404517:	dec    esp
  404518:	mov    ?,WORD PTR [esi+ebx*4]
  40451b:	fsubr  DWORD PTR es:[eax-0x59]
  40451f:	shl    ebp,0xa5
  404522:	jl     0x40453a
  404524:	shl    BYTE PTR [edi],1
  404526:	cmp    DWORD PTR [ebx],ebx
  404528:	fs lock dec esp
  40452b:	scas   eax,DWORD PTR es:[edi]
  40452c:	xlat   BYTE PTR ds:[ebx]
  40452d:	ret    0xbc32
  404530:	xor    edx,DWORD PTR [ebp+0x5e77136c]
  404536:	mov    DWORD PTR [esi+edi*4+0x6354a492],0x47619caf
  404541:	mov    al,0x92
  404543:	inc    edx
  404544:	add    bl,BYTE PTR [esi]
  404546:	stos   DWORD PTR es:[edi],eax
  404547:	(bad)  
  404548:	loope  0x4044d4
  40454a:	rol    DWORD PTR [esi],0xd5
  40454d:	(bad)  
  40454f:	sti    
  404550:	jbe    0x40457e
  404552:	test   eax,0x6e068153
  404557:	xchg   edx,eax
  404558:	stc    
  404559:	pushf  
  40455a:	adc    ecx,edi
  40455c:	inc    esi
  40455d:	stos   BYTE PTR es:[edi],al
  40455e:	fisttp DWORD PTR [eax+0x67784954]
  404564:	cli    
  404565:	fst    QWORD PTR [ebp+0x7f4909fa]
  40456b:	mov    esp,0xec118b6d
  404570:	outs   dx,BYTE PTR ds:[esi]
  404571:	push   cs
  404572:	jecxz  0x404559
  404574:	inc    esp
  404575:	sbb    al,0x3
  404577:	sub    eax,0xb9a30bdd
  40457c:	in     eax,dx
  40457d:	(bad)  
  40457e:	icebp  
  40457f:	call   0xcbf8:0xc16df90a
  404586:	jbe    0x404576
  404588:	or     ch,BYTE PTR [edx]
  40458a:	repnz add eax,DWORD PTR [ebp-0x1c4f1835]
  404591:	(bad)  
  404592:	popa   
  404593:	adc    cl,al
  404595:	xor    edi,DWORD PTR [esi-0x28]
  404598:	add    BYTE PTR [esi-0x53f09174],0x13
  40459f:	mov    al,ds:0x96e5680d
  4045a4:	repz dec edi
  4045a6:	test   DWORD PTR [eax+0x20735ee8],esi
  4045ac:	cmp    esp,DWORD PTR [ebp+0x1f]
  4045af:	mov    cl,0x17
  4045b1:	popa   
  4045b2:	xchg   edi,eax
  4045b3:	rcl    BYTE PTR [edi],0x99
  4045b6:	cdq    
  4045b7:	mov    ah,0x96
  4045b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045ba:	loope  0x4045e9
  4045bc:	(bad)  
  4045be:	sbb    eax,0x506bb36c
  4045c3:	cmp    DWORD PTR [ebx+0x5eddff54],ebp
  4045c9:	mov    esp,0xeddb49c0
  4045ce:	imul   ah
  4045d0:	ja     0x4045ef
  4045d2:	outs   dx,DWORD PTR ds:[esi]
  4045d3:	aam    0xb5
  4045d5:	cdq    
  4045d6:	sub    al,0x99
  4045d8:	mov    al,0x9d
  4045da:	xor    BYTE PTR [edx],bh
  4045dc:	aam    0xde
  4045de:	and    al,0x63
  4045e0:	jl     0x4045f0
  4045e2:	lahf   
  4045e3:	sub    al,0xe7
  4045e5:	xchg   esp,eax
  4045e6:	mov    esi,0x172adb4f
  4045eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045ec:	lahf   
  4045ed:	scas   al,BYTE PTR es:[edi]
  4045ee:	lock push ds
  4045f0:	and    eax,0x450a556b
  4045f5:	retf   0x4ba8
  4045f8:	in     al,0x81
  4045fa:	add    DWORD PTR [edx],0xffffff86
  4045fd:	mov    edi,0x18accfa3
  404602:	jl     0x404637
  404604:	dec    esp
  404605:	in     al,dx
  404606:	fs pop edi
  404608:	jmp    0xb41c:0xfaa74dc4
  40460f:	mov    ds:0x40c3385c,al
  404614:	out    dx,eax
  404615:	test   al,0x61
  404617:	test   esp,eax
  404619:	sub    eax,0x4ca39707
  40461e:	cs cmp eax,0xbf867b9b
  404624:	push   ebp
  404625:	(bad)  [esi-0x6e]
  404628:	jo     0x40467f
  40462a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40462b:	mov    edi,0xf3ca27b0
  404630:	add    eax,DWORD PTR [ebp+0x14]
  404633:	mov    cl,0xef
  404635:	or     BYTE PTR [edi+edi*2],al
  404638:	mov    al,0xa7
  40463a:	rcl    BYTE PTR [ecx],cl
  40463c:	lahf   
  40463d:	or     eax,0xc4a25fd3
  404642:	cmc    
  404643:	aad    0x4b
  404645:	jle    0x404674
  404647:	(bad)  
  404648:	xchg   esi,eax
  404649:	and    eax,DWORD PTR [edi+0x247f028a]
  40464f:	adc    DWORD PTR [ebx+eiz*1-0xceaaf3f],0x19
  404657:	(bad)  
  404658:	xlat   BYTE PTR ds:[ebx]
  404659:	gs clc 
  40465b:	leave  
  40465c:	xchg   DWORD PTR [edi],edx
  40465e:	neg    eax
  404660:	dec    eax
  404661:	mov    bh,0xb4
  404663:	iret   
  404664:	ror    BYTE PTR ds:0xa2efcf70,cl
  40466a:	mov    ah,0xc0
  40466c:	imul   esi,ecx,0xffffffc2
  40466f:	sbb    esp,edx
  404671:	test   DWORD PTR [eax-0x5ee920db],edx
  404677:	push   eax
  404678:	jne    0x40466f
  40467a:	aaa    
  40467b:	jne    0x404670
  40467d:	les    ebx,FWORD PTR [edx+ebx*2+0x47]
  404681:	push   cs
  404682:	fcmovu st,st(6)
  404684:	dec    eax
  404685:	in     al,0x54
  404687:	mov    cl,0x9f
  404689:	test   al,0xbb
  40468b:	add    DWORD PTR [edi+0x27],ecx
  40468e:	xchg   DWORD PTR [ebp-0x73],edx
  404691:	loope  0x4046a2
  404693:	pop    esi
  404694:	mov    al,0x92
  404696:	and    DWORD PTR [ebp-0x2bcd6a11],esp
  40469c:	adc    DWORD PTR [ebx],ebx
  40469e:	(bad)  
  40469f:	fadd   QWORD PTR [ebp+0x38]
  4046a2:	out    dx,al
  4046a3:	pop    ecx
  4046a4:	mov    WORD PTR [ebp-0xd],?
  4046a7:	(bad)  
  4046a9:	mov    eax,0x50ce0e55
  4046ae:	sbb    eax,0x2259173e
  4046b3:	fld    QWORD PTR [esi-0x70]
  4046b6:	sbb    DWORD PTR [esi+0x68],edx
  4046b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046ba:	iret   
  4046bb:	aad    0xfe
  4046bd:	jne    0x404642
  4046bf:	jecxz  0x4046ff
  4046c1:	cmp    eax,0xd33c74a3
  4046c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c7:	xchg   edi,eax
  4046c8:	ins    BYTE PTR es:[edi],dx
  4046c9:	(bad)  [eax-0x23]
  4046cc:	push   ebx
  4046cd:	scas   al,BYTE PTR es:[edi]
  4046ce:	imul   ebp,DWORD PTR [eax-0x22],0xcb8e0ed7
  4046d5:	jge    0x404675
  4046d7:	add    al,0x44
  4046d9:	sub    al,0x35
  4046db:	xchg   esp,eax
  4046dc:	and    ah,BYTE PTR [ebp-0x1e24fc7d]
  4046e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046e3:	xor    ebx,0x53
  4046e6:	shl    DWORD PTR ds:0xe7c440df,1
  4046ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ed:	sbb    BYTE PTR [edi+0x1f812f52],cl
  4046f3:	jmp    0x2c5114fc
  4046f8:	out    dx,al
  4046f9:	dec    esp
  4046fa:	mov    ecx,0xad2adcf2
  4046ff:	(bad)  
  404700:	in     eax,dx
  404701:	clc    
  404702:	xchg   edx,eax
  404703:	ja     0x404717
  404705:	push   eax
  404706:	jecxz  0x4046ed
  404708:	fwait
  404709:	fs jmp 0x4046c1
  40470c:	or     eax,DWORD PTR [esi-0x37]
  40470f:	lahf   
  404710:	jb     0x4046e8
  404712:	xchg   edi,eax
  404713:	into   
  404714:	pop    es
  404715:	xchg   edx,eax
  404716:	or     al,0xdf
  404718:	pop    ds
  404719:	(bad)  
  40471a:	jg     0x40474e
  40471c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40471d:	fcomi  st,st(1)
  40471f:	inc    eax
  404720:	bound  ecx,QWORD PTR [ebx-0xe]
  404723:	bound  edi,QWORD PTR [esi]
  404725:	(bad)  
  404726:	dec    ebp
  404727:	cwde   
  404728:	icebp  
  404729:	mov    ebp,0x20ff0b43
  40472e:	jmp    0xdd34c9cc
  404733:	dec    esi
  404734:	addr16 xor al,0x91
  404737:	inc    ebp
  404738:	ret    0xcde3
  40473b:	mov    ds:0x42d802be,al
  404740:	stc    
  404741:	pop    ebx
  404742:	and    ebp,DWORD PTR [edx]
  404744:	dec    ebp
  404745:	pushf  
  404746:	sub    esp,DWORD PTR [edi-0x373e3807]
  40474c:	dec    ecx
  40474d:	into   
  40474e:	iret   
  40474f:	add    DWORD PTR [eax-0x44494b54],esp
  404755:	mov    al,ds:0xca60ac77
  40475a:	fdivr  QWORD PTR [ecx+0x72358d53]
  404760:	leave  
  404761:	fimul  WORD PTR [esi]
  404763:	adc    BYTE PTR [ebx-0xe188418],cl
  404769:	mov    ch,0x37
  40476b:	outs   dx,DWORD PTR ds:[esi]
  40476c:	inc    BYTE PTR [eax]
  40476e:	and    ch,dh
  404770:	icebp  
  404771:	jbe    0x40473f
  404773:	sbb    cl,ch
  404775:	pop    ebp
  404776:	adc    eax,0x38969b90
  40477b:	mov    ds:0x338d42ed,eax
  404780:	sti    
  404781:	(bad)  
  404783:	jg     0x404791
  404785:	or     ebp,ecx
  404787:	mov    edi,0x487275b3
  40478c:	mov    dh,0x5d
  40478e:	lock push ecx
  404790:	or     BYTE PTR [edx-0x26],dh
  404793:	bnd jl 0x4047cb
  404796:	jbe    0x40474a
  404798:	pop    edi
  404799:	adc    esp,ecx
  40479b:	into   
  40479c:	es cmc 
  40479e:	or     BYTE PTR [ebp+0x12bfb80d],bh
  4047a4:	cmp    BYTE PTR [eax],ch
  4047a6:	adc    al,0xe3
  4047a8:	cmp    DWORD PTR [edi+ebx*1+0x7b],edx
  4047ac:	test   eax,0x97d2b14c
  4047b1:	in     eax,dx
  4047b2:	push   ebp
  4047b3:	mov    bh,0x82
  4047b5:	int3   
  4047b6:	(bad)  
  4047b7:	push   0x7cf62a3d
  4047bc:	inc    ebp
  4047bd:	popf   
  4047be:	loop   0x40475b
  4047c0:	arpl   WORD PTR [esi+0x5dfa0016],si
  4047c6:	pop    eax
  4047c7:	retf   0xd165
  4047ca:	lahf   
  4047cb:	sar    DWORD PTR [edx],cl
  4047cd:	cli    
  4047ce:	int    0x9d
  4047d0:	pop    es
  4047d1:	jl     0x404767
  4047d3:	enter  0x7435,0x6f
  4047d7:	cmp    DWORD PTR [ebp-0x7e4314d0],edi
  4047dd:	stos   BYTE PTR es:[edi],al
  4047de:	mov    al,ds:0x482de15b
  4047e3:	aas    
  4047e4:	and    eax,0x9d425532
  4047e9:	daa    
  4047ea:	jno    0x40480e
  4047ec:	popa   
  4047ed:	push   esi
  4047ee:	or     edx,DWORD PTR [edx+0x44393d15]
  4047f4:	gs dec eax
  4047f6:	push   cs
  4047f7:	dec    edi
  4047f8:	inc    eax
  4047f9:	retf   
  4047fa:	adc    BYTE PTR [edi+edx*4+0x20],dh
  4047fe:	fdecstp 
  404800:	xlat   BYTE PTR ds:[ebx]
  404801:	and    DWORD PTR ds:0x3265eb0,ebp
  404807:	jge    0x404860
  404809:	pushf  
  40480a:	or     edi,esp
  40480c:	retf   
  40480d:	sub    BYTE PTR [ecx],dl
  40480f:	sbb    DWORD PTR ss:[esi],0x4c
  404813:	fidiv  DWORD PTR [ebp+0x5b]
  404816:	push   0x6c43fa1d
  40481b:	sahf   
  40481c:	sub    eax,0x354c2898
  404821:	popa   
  404822:	lea    esp,[ebx+0x430fe574]
  404828:	mov    ecx,0x7fc52fee
  40482d:	retf   
  40482e:	mov    bl,0x82
  404830:	xchg   esi,eax
  404831:	xor    eax,0x34e53b79
  404836:	bound  ecx,QWORD PTR [esi+0x206f57b1]
  40483c:	outs   dx,BYTE PTR ds:[esi]
  40483d:	lods   al,BYTE PTR ds:[esi]
  40483e:	jb     0x404853
  404840:	xchg   edi,eax
  404841:	fucomip st,st(2)
  404843:	aam    0xad
  404845:	xor    eax,0x93ec9b19
  40484a:	out    dx,al
  40484b:	sbb    eax,0x76520223
  404850:	jbe    0x404847
  404852:	es mov ebp,0x838fe92
  404858:	shl    DWORD PTR [ebx+0x2f],cl
  40485b:	aam    0x6e
  40485d:	inc    eax
  40485e:	push   es
  40485f:	pop    ebx
  404860:	jmp    0x404817
  404862:	mov    bh,0x6
  404864:	mov    eax,ds:0xd34bc33e
  404869:	les    esp,FWORD PTR [ecx]
  40486b:	cmp    al,0xb
  40486d:	and    eax,0x1b05b73f
  404872:	mov    eax,0x59d906eb
  404877:	cmp    eax,0xe8a33619
  40487c:	pop    eax
  40487d:	popf   
  40487e:	imul   ebp,DWORD PTR [eax+0x50],0xffffffff
  404882:	inc    esi
  404883:	shl    ebx,1
  404885:	pushf  
  404886:	inc    ebp
  404887:	sbb    DWORD PTR [esi],ecx
  404889:	shl    BYTE PTR [ecx],1
  40488b:	inc    ebp
  40488c:	xchg   ecx,eax
  40488d:	dec    edi
  40488e:	fidivr DWORD PTR [eax+0x1]
  404891:	jecxz  0x4048f0
  404893:	pop    edx
  404894:	mov    ebp,0x317c5d1c
  404899:	mov    DWORD PTR [edx-0x5f24ae7d],edi
  40489f:	mov    dh,0x20
  4048a1:	fucomi st,st(2)
  4048a3:	pop    esp
  4048a4:	dec    ebx
  4048a5:	(bad)  
  4048a6:	jne    0x4048dc
  4048a8:	mov    ch,cl
  4048aa:	jmp    0x2e83937d
  4048af:	jl     0x4048ba
  4048b1:	inc    edi
  4048b2:	add    dh,BYTE PTR [edx-0x7]
  4048b5:	xchg   edi,eax
  4048b6:	shl    BYTE PTR [eax+0x35c4abb4],0xea
  4048bd:	mov    WORD PTR [eax],ds
  4048bf:	fsubr  QWORD PTR [ebx+0x28]
  4048c2:	sbb    DWORD PTR [edi-0x3bcbda9],edx
  4048c8:	pop    DWORD PTR [ecx]
  4048ca:	pop    ebp
  4048cb:	sub    al,dl
  4048cd:	mov    dh,BYTE PTR [ebp-0x2f]
  4048d0:	repnz adc dl,dl
  4048d3:	stos   DWORD PTR es:[edi],eax
  4048d4:	mov    ds:0x1ef019af,eax
  4048d9:	iret   
  4048da:	les    ecx,FWORD PTR fs:[edi-0x5c]
  4048de:	test   eax,0x6481dd8c
  4048e3:	xor    al,0x36
  4048e5:	mov    ds:0xb4fb8bc2,eax
  4048ea:	outs   dx,BYTE PTR ds:[esi]
  4048eb:	xchg   edx,eax
  4048ec:	(bad)  
  4048ed:	fimul  WORD PTR [ebx+0x109e5f8f]
  4048f3:	ror    BYTE PTR [edx-0x6d],1
  4048f6:	xor    BYTE PTR [ecx+0x126ebbc7],bh
  4048fc:	(bad)  
  4048fd:	std    
  4048fe:	push   edx
  4048ff:	sbb    DWORD PTR [edx-0x27f8bc0d],eax
  404905:	ds jns 0x4048eb
  404908:	sub    ecx,DWORD PTR [edi+0x58]
  40490b:	sbb    al,0x34
  40490d:	push   esi
  40490e:	ror    BYTE PTR [edi+0xea4aaca],cl
  404914:	inc    esp
  404915:	stc    
  404916:	inc    ecx
  404917:	ja     0x404925
  404919:	mov    ebp,0xe03ba5a6
  40491e:	inc    esp
  40491f:	jae    0x4048f0
  404921:	cmp    ecx,DWORD PTR [edx+0xba8239a]
  404927:	int    0xc0
  404929:	repz bound ecx,QWORD PTR [ebp+0xc]
  40492d:	dec    edi
  40492e:	jne    0x40493e
  404930:	inc    ebx
  404931:	push   esi
  404932:	ror    edx,cl
  404934:	dec    ebp
  404935:	stc    
  404936:	push   ss
  404937:	jmp    0x4048c5
  404939:	or     al,0xff
  40493b:	sub    DWORD PTR [edx-0x19],esi
  40493e:	push   0x38
  404940:	sub    DWORD PTR [ebp-0x6b0d442b],0x7
  404947:	dec    esi
  404948:	adc    eax,0x183c3eea
  40494d:	pop    edi
  40494e:	bound  edx,QWORD PTR gs:[esi+0x6aa935ae]
  404955:	pop    edi
  404956:	inc    edx
  404957:	adc    DWORD PTR [ebx],edx
  404959:	pushf  
  40495a:	fisub  WORD PTR [ecx]
  40495c:	and    eax,0x10774a40
  404961:	cdq    
  404962:	pop    ds
  404963:	imul   ebx,DWORD PTR [edi+0x63074a9f],0x5a
  40496a:	push   esp
  40496b:	sub    BYTE PTR [edx+0x28],0xd4
  40496f:	cmc    
  404970:	cmp    DWORD PTR [ebx+0x71ee249b],eax
  404976:	call   0x539afa7c
  40497b:	jl     0x4048fe
  40497d:	cmp    BYTE PTR [eax],dh
  40497f:	mov    ebp,0x7c26debe
  404984:	scas   eax,DWORD PTR es:[edi]
  404985:	scas   eax,DWORD PTR es:[edi]
  404986:	je     0x4049a2
  404988:	aaa    
  404989:	or     BYTE PTR ds:0x39f81398,bh
  40498f:	jno    0x404954
  404991:	std    
  404992:	add    eax,0xa48ab3ab
  404997:	leave  
  404998:	and    al,0xe0
  40499a:	mov    esi,0x360a5ee1
  40499f:	mov    eax,0x49edd355
  4049a4:	lds    esi,FWORD PTR [esi+0x47]
  4049a7:	call   0x978cc5df
  4049ac:	sti    
  4049ad:	loop   0x404983
  4049af:	shl    DWORD PTR [esi+edi*2-0x5],cl
  4049b3:	or     eax,0x350d5bdc
  4049b8:	cmp    eax,esi
  4049ba:	add    ebx,0x52
  4049bd:	pop    ss
  4049be:	shl    DWORD PTR [esi],1
  4049c0:	push   0xffffffd7
  4049c2:	add    al,0x94
  4049c4:	leave  
  4049c5:	sub    DWORD PTR [eax],0xd5da54b2
  4049cb:	push   cs
  4049cc:	jne    0x404974
  4049ce:	addr16 pop ds
  4049d0:	add    edx,DWORD PTR [ecx]
  4049d2:	cld    
  4049d3:	or     eax,0x54e493ad
  4049d8:	repz aam 0x8
  4049db:	xchg   DWORD PTR [edi+0x5f],edx
  4049de:	jne    0x404964
  4049e0:	ja     0x4049ab
  4049e2:	cli    
  4049e3:	cwde   
  4049e4:	sbb    BYTE PTR [ecx],dh
  4049e6:	mov    eax,edx
  4049e8:	iret   
  4049e9:	sub    bh,BYTE PTR [edx]
  4049eb:	dec    edx
  4049ec:	fcomp  QWORD PTR [edi+0x7c]
  4049ef:	mov    bl,0xf8
  4049f1:	pop    esp
  4049f2:	or     BYTE PTR ds:0xaa6dfc10,ah
  4049f8:	add    cl,BYTE PTR [ebp+0x22a316db]
  4049fe:	shl    BYTE PTR [edi-0xd9889b4],0x73
  404a05:	stc    
  404a06:	jnp    0x404a80
  404a08:	add    eax,0x76b9b9c4
  404a0d:	popa   
  404a0e:	mov    ebx,0x7aa41199
  404a13:	and    eax,0x773f88b
  404a18:	mov    ebp,0xbd612b6
  404a1d:	push   edi
  404a1e:	stos   BYTE PTR es:[edi],al
  404a1f:	mov    eax,0xf54df319
  404a24:	rcr    BYTE PTR [eax-0x63],1
  404a27:	jnp    0x404a64
  404a29:	mov    bl,0xfe
  404a2b:	aam    0xcc
  404a2d:	bound  edx,QWORD PTR [edi-0x6f]
  404a30:	mov    al,0x95
  404a32:	mov    edx,0xcd3b09c6
  404a37:	adc    ecx,ecx
  404a39:	xchg   edx,eax
  404a3a:	xlat   BYTE PTR ds:[ebx]
  404a3b:	idiv   BYTE PTR ds:[eax-0x2bd62d4e]
  404a42:	inc    ebx
  404a43:	popa   
  404a44:	ins    BYTE PTR es:[edi],dx
  404a45:	inc    ebx
  404a46:	jge    0x404aa4
  404a48:	xchg   esp,eax
  404a49:	sbb    al,0x9a
  404a4b:	ficom  DWORD PTR [edi+eax*1+0x59d3caab]
  404a52:	mov    eax,0x1bdc1dcc
  404a57:	xor    bh,BYTE PTR [ecx-0x6]
  404a5a:	(bad)  
  404a5b:	push   ebx
  404a5c:	inc    esp
  404a5d:	add    eax,0x50f4a08
  404a62:	ds mov eax,0x6cc91684
  404a68:	sub    bh,BYTE PTR [edx-0x21bc5aca]
  404a6e:	(bad)
  404a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a73:	cwde   
  404a74:	mov    eax,esp
  404a76:	test   al,0xff
  404a78:	mov    ebx,0x4df22ebf
  404a7d:	das    
  404a7e:	imul   esp,DWORD PTR [ebx+eiz*2+0xe9d9adc],0xffffff81
  404a86:	in     eax,0x20
  404a88:	data16 mov cl,0x3
  404a8b:	rcr    DWORD PTR ds:0xd07262cc,cl
  404a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a92:	leave  
  404a93:	mov    esp,0xa00e8f27
  404a98:	sbb    eax,0x5f4bf668
  404a9d:	and    bl,BYTE PTR [esi+0x68ca2c99]
  404aa3:	sbb    DWORD PTR [eax-0x7c37f84e],0x40
  404aaa:	and    ch,BYTE PTR [ebx+0x13]
  404aad:	and    bl,BYTE PTR [edx]
  404aaf:	sub    DWORD PTR [ecx-0x2898e3d],eax
  404ab5:	fldcw  WORD PTR [ecx-0x6f]
  404ab8:	mov    BYTE PTR [ecx],ch
  404aba:	das    
  404abb:	jle    0x404a94
  404abd:	jo     0x404a72
  404abf:	mov    al,ds:0x29774053
  404ac4:	mov    ebx,0xc02b82e
  404ac9:	dec    edx
  404aca:	ds push eax
  404acc:	xor    eax,0xb5aaf7ec
  404ad1:	push   esi
  404ad2:	mov    ds,esi
  404ad4:	push   esp
  404ad5:	xor    eax,0xbb4f55f4
  404ada:	(bad)  
  404adb:	daa    
  404adc:	repnz popa 
  404ade:	inc    esp
  404adf:	stc    
  404ae0:	cmc    
  404ae1:	mov    ebp,0x7489beac
  404ae6:	ret    
  404ae7:	ss sbb al,0x6d
  404aea:	rcr    esi,1
  404aec:	arpl   WORD PTR [edx],si
  404aee:	inc    esp
  404aef:	pop    ebx
  404af0:	fstp   QWORD PTR [eax]
  404af2:	outs   dx,DWORD PTR ds:[esi]
  404af3:	and    ebx,DWORD PTR [ebx+0x6d]
  404af6:	dec    ecx
  404af7:	pop    edi
  404af8:	xchg   ebx,eax
  404af9:	push   esi
  404afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404afb:	jns    0x404ac2
  404afd:	jbe    0x404b7d
  404aff:	fwait
  404b00:	int3   
  404b01:	or     al,0x23
  404b03:	adc    esp,DWORD PTR [eax-0x7f]
  404b06:	(bad)  
  404b07:	sub    eax,0x724591a7
  404b0c:	and    cl,BYTE PTR [edi+0x6f]
  404b0f:	fimul  WORD PTR [eax-0x3398eaa6]
  404b15:	enter  0x237a,0x4b
  404b19:	adc    ecx,DWORD PTR [edi+0x30]
  404b1c:	imul   edi,DWORD PTR [ebx+0x6b],0xffffffbf
  404b20:	pop    esp
  404b21:	popa   
  404b22:	mov    eax,0x8bc39e6e
  404b27:	or     al,0x3f
  404b29:	ja     0x404b5c
  404b2b:	mov    cl,0xd1
  404b2d:	cmp    edx,ebp
  404b2f:	loope  0x404b43
  404b31:	call   0xc780:0x675b31ce
  404b38:	jbe    0x404b8c
  404b3a:	mov    ecx,0x6d0dae59
  404b3f:	es cmp al,0x97
  404b42:	add    eax,0x2a28734f
  404b47:	inc    ebp
  404b48:	xchg   esi,eax
  404b49:	xchg   edi,eax
  404b4a:	mov    DWORD PTR [edx+0x27],edx
  404b4d:	fsubr  QWORD PTR [esi-0x6e9cb3a9]
  404b53:	jnp    0x404af4
  404b55:	inc    ebp
  404b56:	imul   ebx,DWORD PTR [edi+0x2b],0x6abeef7d
  404b5d:	mov    ah,0x38
  404b5f:	aaa    
  404b60:	xchg   esp,eax
  404b61:	daa    
  404b62:	mov    ch,0x35
  404b64:	jo     0x404bad
  404b66:	push   eax
  404b67:	pusha  
  404b68:	jo     0x404af1
  404b6a:	pop    ds
  404b6b:	sub    DWORD PTR [esi],0x6d
  404b6e:	adc    edx,0x96662558
  404b74:	fcmovbe st,st(1)
  404b76:	mov    dh,0x6
  404b78:	pusha  
  404b79:	ins    DWORD PTR es:[edi],dx
  404b7a:	outs   dx,DWORD PTR ds:[esi]
  404b7b:	xchg   edx,eax
  404b7c:	fwait
  404b7d:	jmp    0x673a2d2b
  404b82:	push   ds
  404b83:	test   DWORD PTR [eiz*1+0x7c47f9c2],0x66d294b8
  404b8e:	das    
  404b8f:	test   DWORD PTR [eax+0x36],0xbad05c93
  404b96:	jns    0x404b26
  404b98:	loopne 0x404b74
  404b9a:	push   esp
  404b9b:	dec    edx
  404b9c:	les    esi,FWORD PTR [esi-0x693d314d]
  404ba2:	cmc    
  404ba3:	ss jmp 0x5807:0xc72b74fc
  404bab:	repnz hlt 
  404bad:	test   al,0x1a
  404baf:	add    BYTE PTR gs:[edi-0x31],ch
  404bb3:	lods   al,BYTE PTR ds:[esi]
  404bb4:	push   0xe400b3e4
  404bb9:	dec    esi
  404bba:	shl    BYTE PTR [eax+0x44],0xca
  404bbe:	das    
  404bbf:	or     al,0x1d
  404bc1:	and    DWORD PTR [ebp-0x3d061792],esp
  404bc7:	fsub   st,st(2)
  404bc9:	(bad)  
  404bca:	repz dec eax
  404bcc:	or     DWORD PTR [ebx],esp
  404bce:	fcmovu st,st(5)
  404bd0:	ffreep st(6)
  404bd2:	adc    eax,0xcffaa650
  404bd7:	addr16 sub eax,0x61f972fb
  404bdd:	in     eax,0x18
  404bdf:	fidiv  WORD PTR [edi+0xc7b9ed5]
  404be5:	stc    
  404be6:	mov    al,0x33
  404be8:	adc    bl,BYTE PTR [ebx+0x4d5c0a26]
  404bee:	xor    BYTE PTR [esi+0x1c],ah
  404bf1:	sbb    cl,ah
  404bf3:	jecxz  0x404bdf
  404bf5:	and    esp,ebp
  404bf7:	fisubr DWORD PTR [edi]
  404bf9:	push   ss
  404bfa:	(bad)  
  404bfc:	data16 jns 0x404c79
  404bff:	outs   dx,DWORD PTR ds:[esi]
  404c00:	sub    bl,BYTE PTR ds:0xd10b07ba
  404c06:	dec    DWORD PTR [edi-0x5128be09]
  404c0c:	outs   dx,BYTE PTR ds:[esi]
  404c0d:	out    0xb0,al
  404c0f:	push   0x1e785b52
  404c14:	stc    
  404c15:	dec    ebx
  404c16:	or     al,0xf5
  404c18:	in     al,0x4e
  404c1a:	dec    esp
  404c1b:	xchg   esp,eax
  404c1c:	jecxz  0x404c8c
  404c1e:	shl    DWORD PTR [eax],cl
  404c20:	pop    esp
  404c21:	inc    edx
  404c22:	aaa    
  404c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c24:	nop
  404c25:	in     al,dx
  404c26:	cli    
  404c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c28:	inc    edi
  404c29:	jae    0x404c2d
  404c2b:	cmp    ecx,DWORD PTR [edi]
  404c2d:	cmp    BYTE PTR [ebp-0x42],bh
  404c30:	sahf   
  404c31:	fs inc ebp
  404c33:	stos   DWORD PTR es:[edi],eax
  404c34:	push   es
  404c35:	(bad)  
  404c36:	aam    0x4c
  404c38:	into   
  404c39:	jo     0x404bf1
  404c3b:	mov    eax,0xe3676a81
  404c40:	adc    ebp,DWORD PTR [esp+ebx*8+0x4ee043f4]
  404c47:	sub    DWORD PTR [esi-0x11],ebx
  404c4a:	into   
  404c4b:	(bad)  
  404c4c:	xchg   esp,eax
  404c4d:	xchg   ebx,eax
  404c4e:	loope  0x404c6c
  404c50:	retf   
  404c51:	into   
  404c52:	inc    ebp
  404c53:	stos   DWORD PTR es:[edi],eax
  404c54:	jmp    0x404bd6
  404c56:	inc    esi
  404c57:	out    0x1,eax
  404c59:	adc    eax,DWORD PTR [edi-0x4a]
  404c5c:	repnz sbb BYTE PTR [eax],dh
  404c5f:	xor    ebx,DWORD PTR [ebx]
  404c61:	xchg   edi,eax
  404c62:	(bad)  
  404c63:	enter  0xbadd,0x3e
  404c67:	mov    al,0x7b
  404c69:	std    
  404c6a:	aad    0xc6
  404c6c:	test   DWORD PTR [edi+eax*8],edi
  404c6f:	add    ecx,edx
  404c71:	push   0x61
  404c73:	inc    ebp
  404c74:	pop    esi
  404c75:	fs int3 
  404c77:	adc    ebp,DWORD PTR ds:0x891ca8fb
  404c7d:	jae    0x404c83
  404c7f:	sbb    eax,0xf9988300
  404c84:	lods   al,BYTE PTR ds:[esi]
  404c85:	and    ah,BYTE PTR [edx-0x27]
  404c88:	cmp    ebp,DWORD PTR [ecx+0x44741eb4]
  404c8e:	and    edi,DWORD PTR [eax+0x1b]
  404c91:	cmp    BYTE PTR [eax+0x6],bh
  404c94:	sub    ebp,esi
  404c96:	test   BYTE PTR [edi-0x74],dh
  404c99:	jl     0x404cec
  404c9b:	inc    esp
  404c9c:	pop    es
  404c9d:	xor    DWORD PTR [edx],edx
  404c9f:	stos   DWORD PTR es:[edi],eax
  404ca0:	sub    DWORD PTR [edx+0xc7d4783],ebp
  404ca6:	inc    ecx
  404ca7:	cld    
  404ca8:	push   ecx
  404ca9:	pop    ss
  404caa:	ror    DWORD PTR [esi+edi*2+0x66],1
  404cae:	jb     0x404d23
  404cb0:	mov    eax,ds:0x5dab40c3
  404cb5:	mov    ds:0x727a7b3b,al
  404cba:	popa   
  404cbb:	(bad)  
  404cbc:	sbb    DWORD PTR [ecx-0xd],eax
  404cbf:	cmp    BYTE PTR [ecx+0x22],al
  404cc2:	inc    ebx
  404cc3:	jo     0x404c83
  404cc5:	or     al,0x83
  404cc7:	jl     0x404cb1
  404cc9:	xor    al,0xed
  404ccb:	dec    esi
  404ccc:	adc    DWORD PTR [esi],ebx
  404cce:	push   esi
  404ccf:	sbb    BYTE PTR [eax+0x68],dl
  404cd2:	dec    eax
  404cd3:	femms  
  404cd5:	(bad)  
  404cd6:	xor    BYTE PTR [ebp-0x7918acf3],bh
  404cdc:	pop    ecx
  404cdd:	push   esi
  404cde:	lods   al,BYTE PTR ds:[esi]
  404cdf:	or     ah,dh
  404ce1:	or     esi,ebx
  404ce3:	daa    
  404ce4:	inc    ecx
  404ce5:	sub    eax,0xc835c1e9
  404cea:	call   0x30057f7e
  404cef:	ret    0x72e5
  404cf2:	mov    DWORD PTR [eax+0x77],edi
  404cf5:	cmp    ebp,DWORD PTR [esi-0x2d]
  404cf8:	and    al,0x50
  404cfa:	stc    
  404cfb:	mov    ah,BYTE PTR [edx-0x30]
  404cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cff:	dec    ebp
  404d00:	xchg   ebx,eax
  404d01:	lock jo 0x404d52
  404d04:	mov    ds:0x21b9b737,al
  404d09:	push   ecx
  404d0a:	sbb    DWORD PTR ds:0xb47b9714,ebx
  404d10:	outs   dx,DWORD PTR ds:[esi]
  404d11:	sbb    eax,0xf3090b06
  404d16:	icebp  
  404d17:	dec    esp
  404d18:	or     ebx,DWORD PTR [ecx+0x6c774c95]
  404d1e:	adc    eax,0xc01aa27b
  404d23:	pop    ebx
  404d24:	sbb    al,0xcf
  404d26:	sahf   
  404d27:	pop    edx
  404d28:	mov    DWORD PTR [edi+eiz*1+0x78aef555],ebp
  404d2f:	inc    esp
  404d30:	fidivr WORD PTR [edx]
  404d32:	aaa    
  404d33:	pop    ss
  404d34:	pop    ss
  404d35:	call   0xcb8fd99f
  404d3a:	(bad)  
  404d3b:	retf   0x1d5e
  404d3e:	sbb    eax,0x3f9ed63a
  404d43:	outs   dx,BYTE PTR ds:[esi]
  404d44:	ss cli 
  404d46:	ins    DWORD PTR es:[edi],dx
  404d47:	and    BYTE PTR [ebp+0x3c37ee14],al
  404d4d:	ss inc esp
  404d4f:	arpl   WORD PTR [ebp-0x6f],bx
  404d52:	sbb    al,bl
  404d54:	je     0x404db6
  404d56:	xchg   esi,eax
  404d57:	mov    ah,BYTE PTR [ecx+0x60dd1c56]
  404d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d5e:	ret    0x1664
  404d61:	push   ss
  404d62:	popf   
  404d63:	jnp    0x404de3
  404d65:	ret    0x7476
  404d68:	jp     0x404d46
  404d6a:	xor    edx,DWORD PTR [eax+0x37]
  404d6d:	lahf   
  404d6e:	retf   0xab4a
  404d71:	dec    esi
  404d72:	and    cl,BYTE PTR [esi+esi*4]
  404d75:	or     BYTE PTR [edx-0x5a9d3daa],0xfc
  404d7c:	mov    esp,0x70ab8feb
  404d81:	stos   DWORD PTR es:[edi],eax
  404d82:	and    BYTE PTR [edi-0x3b4327f9],bl
  404d88:	add    dh,BYTE PTR [esp+ecx*4-0x6a1036ba]
  404d8f:	jp     0x404dbf
  404d91:	cs mov ebp,0x10aa3836
  404d97:	jecxz  0x404d1d
  404d99:	fwait
  404d9a:	push   esp
  404d9b:	imul   esi,DWORD PTR ds:0x4093a70,0x1e
  404da2:	je     0x404d65
  404da4:	fwait
  404da5:	in     al,dx
  404da6:	test   eax,0x606ddb3
  404dab:	lea    ecx,ds:0x3091df5e
  404db1:	xchg   esp,eax
  404db2:	out    0xe0,eax
  404db4:	in     eax,0x91
  404db6:	adc    dh,BYTE PTR ds:0x37595a23
  404dbc:	aam    0xf8
  404dbe:	out    dx,al
  404dbf:	fild   QWORD PTR [ebp+0xb]
  404dc2:	push   0x47
  404dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dc5:	dec    ebx
  404dc6:	inc    esp
  404dc7:	dec    edi
  404dc8:	loop   0x404dba
  404dca:	mov    ch,0xdd
  404dcc:	ret    
  404dcd:	jl     0x404d82
  404dcf:	fadd   QWORD PTR [eax+0x79]
  404dd2:	or     esp,DWORD PTR [ebx+0x38]
  404dd5:	mov    eax,ds:0x5bb64aec
  404dda:	jl     0x404e1a
  404ddc:	repz xor eax,0x41c77202
  404de2:	retf   
  404de3:	or     BYTE PTR [esi+0x10d060a1],al
  404de9:	adc    DWORD PTR [ecx+0x52bde5c1],ecx
  404def:	je     0x404dd8
  404df1:	loope  0x404e01
  404df3:	iret   
  404df4:	retf   0xd49d
  404df7:	dec    edi
  404df8:	out    0xa,eax
  404dfa:	pop    edi
  404dfb:	idiv   DWORD PTR ds:0xd15f024c
  404e01:	les    ebx,FWORD PTR [esi+0x71]
  404e04:	xchg   esp,eax
  404e05:	aam    0x6c
  404e07:	jne    0x404dd3
  404e09:	or     al,0xf1
  404e0b:	call   0x9688:0x6f93
  404e11:	add    DWORD PTR [eax+0x1218cd64],edi
  404e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e18:	dec    eax
  404e19:	cmp    al,ah
  404e1b:	push   edx
  404e1c:	jno    0x404e46
  404e1e:	sub    BYTE PTR [esi-0x44],bl
  404e21:	xchg   esi,eax
  404e22:	lods   al,BYTE PTR ds:[esi]
  404e23:	mov    bl,0xd5
  404e25:	mov    edi,0xd6bf40c4
  404e2a:	sahf   
  404e2b:	mov    edi,0xbd4f9994
  404e30:	stos   DWORD PTR es:[edi],eax
  404e31:	fbld   TBYTE PTR [eax+0xf17fb5a]
  404e37:	cmp    DWORD PTR [esi+eax*2+0x4c793ff9],0xb55e4504
  404e42:	jecxz  0x404e75
  404e44:	cld    
  404e45:	or     eax,0xb8901bdb
  404e4a:	enter  0x890c,0x8a
  404e4e:	fdivr  st,st(2)
  404e50:	out    0x74,eax
  404e52:	xlat   BYTE PTR ds:[ebx]
  404e53:	mov    cl,0x91
  404e55:	cmp    eax,0x3cf0294b
  404e5a:	mov    edx,0xb87a6e3
  404e5f:	xchg   ebx,eax
  404e60:	pop    edx
  404e61:	retf   0x398d
  404e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e65:	adc    ah,BYTE PTR [edx]
  404e67:	pop    edx
  404e68:	mov    ah,0x9c
  404e6a:	mov    bh,al
  404e6c:	mov    esp,0x654d839e
  404e71:	ret    
  404e72:	add    eax,0xbc25c3d2
  404e77:	dec    eax
  404e78:	iret   
  404e79:	pop    ds
  404e7a:	inc    esi
  404e7b:	mov    ah,0xcc
  404e7d:	pop    ebp
  404e7e:	inc    ecx
  404e7f:	and    BYTE PTR [eax-0x4a],cl
  404e82:	jns    0x404e1e
  404e84:	mov    esi,0xb2e95bf3
  404e89:	mov    bh,0x68
  404e8b:	push   esp
  404e8c:	xchg   DWORD PTR ds:[eax-0x6f0cf7d2],edi
  404e93:	call   0xfc00:0xa4b2026
  404e9a:	hlt    
  404e9b:	mov    esp,0xd3841cc8
  404ea0:	addr16 cmp eax,0xf3eb3b5b
  404ea6:	and    cl,BYTE PTR [eax-0x31648d03]
  404eac:	mov    esp,0xf14a8c6b
  404eb1:	not    DWORD PTR [edx+0x72]
  404eb4:	or     ebx,ebp
  404eb6:	fs pop ds
  404eb8:	ds ss dec ecx
  404ebb:	dec    esp
  404ebc:	xor    dl,BYTE PTR [ebp+0x110d00d7]
  404ec2:	cmp    dh,BYTE PTR ds:0x520e9ce1
  404ec8:	lods   eax,DWORD PTR ds:[esi]
  404ec9:	cs (bad) 
  404ecb:	daa    
  404ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ecd:	ins    BYTE PTR es:[di],dx
  404ecf:	cmp    eax,ebp
  404ed1:	jmp    0x404e80
  404ed3:	sar    ecx,0xcc
  404ed6:	dec    esp
  404ed7:	(bad)  
  404ed8:	jmp    0xbeafb4cc
  404edd:	push   es
  404ede:	push   edi
  404edf:	dec    ebp
  404ee0:	mul    ch
  404ee2:	std    
  404ee3:	mov    BYTE PTR [ebp+0x2fc1c57b],cl
  404ee9:	xor    al,dl
  404eeb:	push   0x8b3fb957
  404ef0:	fwait
  404ef1:	push   ecx
  404ef2:	push   ebx
  404ef3:	xchg   BYTE PTR [eax+0x2bda5712],ch
  404ef9:	adc    cl,dl
  404efb:	test   al,cl
  404efd:	ins    BYTE PTR es:[edi],dx
  404efe:	push   ebp
  404eff:	xchg   ebp,eax
  404f00:	jg     0x404f1a
  404f02:	rcr    ebx,cl
  404f04:	inc    esi
  404f05:	lock xchg edx,esp
  404f08:	ds cmp al,0x2
  404f0b:	addr16 mov bh,0xb
  404f0e:	arpl   WORD PTR [ecx],dx
  404f10:	cmc    
  404f11:	jmp    0xa77daac7
  404f16:	mov    ds,WORD PTR [ebx+0x2d]
  404f19:	jge    0x404f27
  404f1b:	mov    DWORD PTR [edi+0x3b],edx
  404f1e:	rol    BYTE PTR [esi],0xcb
  404f21:	adc    al,bl
  404f23:	repnz xchg ecx,eax
  404f25:	int3   
  404f26:	aam    0x9d
  404f28:	inc    edi
  404f29:	mov    ds:0x4e60401,al
  404f2e:	push   edi
  404f2f:	ja     0x404f15
  404f31:	cmp    ecx,DWORD PTR [eax+0x68]
  404f34:	fbstp  TBYTE PTR [eax+0x783ba82d]
  404f3a:	adc    eax,0x5728aa05
  404f3f:	xchg   BYTE PTR ds:0x5cada38e,ch
  404f45:	shl    BYTE PTR [eax+edi*8],0x7a
  404f49:	iret   
  404f4a:	loope  0x404ee4
  404f4c:	inc    esp
  404f4d:	mov    dl,0x46
  404f4f:	mov    ah,0x1b
  404f51:	jecxz  0x404eeb
  404f53:	cmp    al,0x6d
  404f55:	loopne 0x404fc2
  404f57:	mov    ah,0xe3
  404f59:	add    DWORD PTR [esi+ebp*4-0x5a],eax
  404f5d:	and    ebp,DWORD PTR [eax]
  404f5f:	dec    ecx
  404f60:	inc    edi
  404f61:	jmp    0x5c22b13c
  404f66:	loopne 0x404fd0
  404f68:	test   ch,ch
  404f6a:	mov    eax,0xb5085ac8
  404f6f:	cmp    edx,DWORD PTR [edi]
  404f71:	mov    bl,0xd3
  404f73:	retf   
  404f74:	ins    BYTE PTR es:[edi],dx
  404f75:	add    eax,0x1f4dfbcd
  404f7a:	(bad)  
  404f7b:	lahf   
  404f7c:	dec    ebp
  404f7d:	(bad)
  404f80:	call   0x64b4dabd
  404f85:	out    0xea,al
  404f87:	sub    eax,0x32b18cd6
  404f8c:	xchg   BYTE PTR [ebx+0x16dba096],bl
  404f92:	std    
  404f93:	test   BYTE PTR [eax+0x1d],0x38
  404f97:	stc    
  404f98:	xor    BYTE PTR [edx-0x70c4ffb7],cl
  404f9e:	pop    ebx
  404f9f:	jns    0x404f62
  404fa1:	into   
  404fa2:	test   DWORD PTR [esi],esi
  404fa4:	dec    ebp
  404fa5:	mov    edx,ebx
  404fa7:	jle    0x404f6c
  404fa9:	test   al,0x96
  404fab:	cwde   
  404fac:	push   esp
  404fad:	imul   ebx,DWORD PTR [edx-0xa],0xa91ba1cc
  404fb4:	push   ecx
  404fb5:	ffree  st(3)
  404fb7:	push   esi
  404fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb9:	push   esi
  404fba:	or     eax,DWORD PTR [ebp-0x40]
  404fbd:	outs   dx,DWORD PTR gs:[esi]
  404fbf:	mov    eax,0xff6bc625
  404fc4:	fisttp DWORD PTR [ecx]
  404fc6:	push   ebx
  404fc7:	rol    DWORD PTR [ebx+0x7],cl
  404fca:	test   BYTE PTR [ecx-0x64],al
  404fcd:	out    0x15,al
  404fcf:	scas   al,BYTE PTR es:[edi]
  404fd0:	push   0x69702c81
  404fd5:	sub    al,0x36
  404fd7:	inc    ebp
  404fd8:	aaa    
  404fd9:	jae    0x404f90
  404fdb:	(bad)  
  404fdc:	(bad)  
  404fde:	mov    gs,WORD PTR [eax-0x6a39eb71]
  404fe4:	in     al,0x3e
  404fe6:	retf   
  404fe7:	inc    esi
  404fe8:	aad    0x9
  404fea:	sub    eax,0x3882abb5
  404fef:	mov    eax,0x49e87873
  404ff4:	push   eax
  404ff5:	xchg   DWORD PTR [ecx+0x2c379d68],ecx
  404ffb:	mov    esi,0x5cc6d90a
  405000:	out    dx,eax
  405001:	mov    ebx,0xfb491c8b
  405006:	and    dl,0x19
  405009:	repnz cmp DWORD PTR [esi+0x27c8a1b],ebp
  405010:	test   al,0x8
  405012:	icebp  
  405013:	mov    al,ah
  405015:	scas   eax,DWORD PTR es:[edi]
  405016:	dec    ecx
  405017:	mov    esi,0x2d03ad30
  40501c:	pop    edi
  40501d:	adc    DWORD PTR [edi-0x1385904d],edx
  405023:	mov    ah,0x64
  405025:	mov    dl,0x58
  405027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405028:	into   
  405029:	sub    dh,BYTE PTR ds:0x5163
  40502e:	(bad)  
  40502f:	xchg   edx,eax
  405030:	jecxz  0x405022
  405032:	outs   dx,BYTE PTR ds:[esi]
  405033:	or     BYTE PTR [edi-0x3de73d9f],0xa7
  40503a:	and    BYTE PTR [eax-0x38],cl
  40503d:	pusha  
  40503e:	pop    esi
  40503f:	popf   
  405040:	stos   DWORD PTR es:[edi],eax
  405041:	scas   al,BYTE PTR es:[edi]
  405042:	adc    ebx,ecx
  405044:	adc    eax,0xb6811baf
  405049:	fidivr WORD PTR [edi-0x1f]
  40504c:	ret    
  40504d:	adc    BYTE PTR [ecx+eiz*1-0x2f018c2c],0xc4
  405055:	sbb    eax,0x5291f0e3
  40505a:	sahf   
  40505b:	jmp    0xb166:0x914828a5
  405062:	and    al,0x78
  405064:	and    eax,0xbc30fda8
  405069:	adc    edi,ecx
  40506b:	xlat   BYTE PTR ds:[ebx]
  40506c:	mov    esi,0xb3f7f22d
  405071:	je     0x405031
  405073:	das    
  405074:	add    eax,DWORD PTR ds:0xe2be3b33
  40507a:	loop   0x4050dd
  40507c:	daa    
  40507d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40507e:	int3   
  40507f:	push   edx
  405080:	out    dx,eax
  405081:	jno    0x405099
  405083:	or     DWORD PTR [esi+0x200f9c7a],ebp
  405089:	jecxz  0x40509d
  40508b:	pop    ebx
  40508c:	aaa    
  40508d:	dec    esi
  40508e:	sbb    DWORD PTR [ebx],edx
  405090:	sti    
  405091:	sub    edi,DWORD PTR fs:[eax+eax*1+0x45]
  405096:	sub    dl,ah
  405098:	cmc    
  405099:	push   ds
  40509a:	clc    
  40509b:	data16 stos BYTE PTR es:[edi],al
  40509d:	jnp    0x405029
  40509f:	fdiv   DWORD PTR [ebx]
  4050a1:	paddsb mm5,QWORD PTR [edx+0x51a084a6]
  4050a8:	(bad)  
  4050a9:	xchg   esp,eax
  4050aa:	(bad)  
  4050ab:	loop   0x40510c
  4050ad:	fdivr  st,st(0)
  4050af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050b0:	(bad)  
  4050b2:	mov    esi,0x222bb404
  4050b7:	aas    
  4050b8:	fstp   TBYTE PTR [ebx+ecx*8+0x232f853]
  4050bf:	dec    ebx
  4050c0:	stos   DWORD PTR es:[edi],eax
  4050c1:	and    ebp,DWORD PTR es:[ebx-0xb8cff04]
  4050c8:	push   ebx
  4050c9:	and    eax,0x1b6b6dce
  4050ce:	inc    edx
  4050cf:	sti    
  4050d0:	in     al,0xcd
  4050d2:	arpl   di,sp
  4050d4:	cli    
  4050d5:	stos   BYTE PTR es:[edi],al
  4050d6:	pusha  
  4050d7:	xchg   ecx,eax
  4050d8:	dec    esi
  4050d9:	pop    es
  4050da:	std    
  4050db:	inc    edi
  4050dc:	jae    0x4050c2
  4050de:	daa    
  4050df:	mov    ds:0xb1ae1599,eax
  4050e4:	shl    BYTE PTR [edx],1
  4050e6:	push   esi
  4050e7:	or     al,0xbd
  4050e9:	add    esp,DWORD PTR [ecx+0x50]
  4050ec:	mov    bl,0xd0
  4050ee:	not    bh
  4050f0:	jmp    0x405119
  4050f2:	mov    ecx,esi
  4050f4:	and    DWORD PTR [edx+0x56dc606a],edx
  4050fa:	(bad)  
  4050fb:	push   edx
  4050fc:	in     eax,dx
  4050fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050fe:	mov    bl,BYTE PTR [ecx-0xe8663de]
  405104:	xchg   ebx,eax
  405105:	fimul  DWORD PTR [esi]
  405107:	and    eax,0xc73cc6a0
  40510c:	add    DWORD PTR [eax-0xf],ebx
  40510f:	lea    ebp,[eax+0x53ac7c23]
  405115:	pop    esi
  405116:	sub    dl,BYTE PTR [edi]
  405118:	mov    WORD PTR [esi-0x1d12cbb],es
  40511e:	pop    ds
  40511f:	mov    WORD PTR [edi-0x43],es
  405122:	xchg   edx,eax
  405123:	lea    esp,[edi-0x20]
  405126:	or     al,0xbc
  405128:	sbb    bp,sp
  40512b:	sub    eax,0x4b0ce0f3
  405130:	mov    DWORD PTR [edx+0x5be83074],ebx
  405136:	mov    esp,0xfc7d7fbe
  40513b:	mov    ebp,0xd6ec7fca
  405140:	(bad)  
  405141:	xlat   BYTE PTR ds:[ebx]
  405142:	mov    cl,0xb
  405144:	ins    DWORD PTR es:[edi],dx
  405145:	xchg   edx,eax
  405146:	ins    DWORD PTR es:[edi],dx
  405147:	cwde   
  405148:	jge    0x405189
  40514a:	dec    esp
  40514b:	popf   
  40514c:	mov    ebx,0xba50b73c
  405151:	push   ebp
  405152:	outs   dx,BYTE PTR ds:[esi]
  405153:	jae    0x40513d
  405155:	xchg   edx,eax
  405156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405157:	push   ss
  405158:	lea    eax,ds:[si-0x47]
  40515d:	fwait
  40515e:	mov    esp,0x57852abe
  405163:	cmp    bh,BYTE PTR [eax+0x2c8edcf8]
  405169:	pop    ebp
  40516a:	jb     0x405151
  40516c:	mov    bh,0xb2
  40516e:	mov    bh,0xda
  405170:	out    0x80,al
  405172:	mov    eax,0xa0402b67
  405177:	js     0x4051d1
  405179:	dec    eax
  40517a:	jnp    0x405162
  40517c:	pop    ebp
  40517d:	fwait
  40517e:	mov    ah,0x5
  405180:	mov    eax,0x20033b4b
  405185:	stos   BYTE PTR es:[edi],al
  405186:	test   DWORD PTR [ebx-0x82d3163],edi
  40518c:	or     ebx,DWORD PTR [ecx]
  40518e:	popf   
  40518f:	push   ds
  405190:	out    dx,eax
  405191:	pop    ss
  405192:	mov    bh,0x5c
  405194:	mov    eax,ds:0xb2336aa4
  405199:	xor    eax,0x3cd442ba
  40519e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40519f:	and    dl,0x36
  4051a2:	jl     0x40516f
  4051a4:	cmp    eax,0xadadd038
  4051a9:	in     eax,dx
  4051aa:	add    BYTE PTR [ebx-0x6f],0x58
  4051ae:	aas    
  4051af:	outs   dx,DWORD PTR ds:[esi]
  4051b0:	mov    ds:0xcaae8365,al
  4051b5:	cwde   
  4051b6:	pop    esi
  4051b7:	fisubr WORD PTR [edx-0x5c570869]
  4051bd:	stc    
  4051be:	add    ebx,edx
  4051c0:	cs clc 
  4051c2:	fisttp WORD PTR [ebx]
  4051c4:	daa    
  4051c5:	dec    eax
  4051c6:	cmp    DWORD PTR [esi],0xffffffe6
  4051c9:	pop    es
  4051ca:	fs xor eax,0xcfde09b5
  4051d0:	mov    ds:0x136adaa6,eax
  4051d5:	or     DWORD PTR [ebx+0x61090e4f],ebx
  4051db:	sub    DWORD PTR [edi+0x7],ecx
  4051de:	aas    
  4051df:	cld    
  4051e0:	jle    0x4051e3
  4051e2:	or     eax,0x73ace6c3
  4051e7:	repnz leave 
  4051e9:	push   ss
  4051ea:	xchg   edi,eax
  4051eb:	dec    ebp
  4051ec:	inc    esi
  4051ed:	or     al,0xda
  4051ef:	call   0xbb60:0xabb6c8e5
  4051f6:	sbb    ebx,DWORD PTR [edx-0x19]
  4051f9:	fistp  DWORD PTR [ebx+0x0]
  4051fc:	push   ds
  4051fd:	jmp    DWORD PTR [ebp+0xd68ac18]
  405203:	mov    ebx,0x3b91684b
  405208:	int3   
  405209:	jb     0x40520b
  40520b:	cmp    eax,0xdad0d81e
  405210:	mov    edi,0x72b288e5
  405215:	mov    bl,bh
  405217:	mov    esi,0x2570d3a6
  40521c:	stos   DWORD PTR es:[edi],eax
  40521d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40521e:	or     eax,DWORD PTR [ecx+ebp*4+0x77a07617]
  405225:	leave  
  405226:	push   0x2d
  405228:	sub    al,0x91
  40522a:	pcmpgtb mm7,QWORD PTR [ebp+0x1cd012b6]
  405231:	scas   al,BYTE PTR es:[edi]
  405232:	jnp    0x4052ae
  405234:	xlat   BYTE PTR ds:[ebx]
  405235:	mov    ah,0x1b
  405237:	mov    cs,WORD PTR [ecx]
  405239:	cs mov edi,0x4b837267
  40523f:	out    dx,al
  405240:	in     eax,0x58
  405242:	jo     0x40523c
  405244:	mov    bh,BYTE PTR [ecx]
  405246:	jp     0x405247
  405248:	pop    edx
  405249:	(bad)  
  40524b:	adc    BYTE PTR [eax+0x6ec65ff5],dh
  405251:	lods   al,BYTE PTR ds:[esi]
  405252:	mov    eax,DWORD PTR [ebx-0x1]
  405255:	mov    dh,0x5
  405257:	stc    
  405258:	cmp    ah,BYTE PTR [eax+0x4c]
  40525b:	and    al,0x82
  40525d:	cs mov edx,0xe2d41a82
  405263:	adc    ch,al
  405265:	imul   ecx,DWORD PTR [ebx+0x14],0x3e
  405269:	mov    ds:0x49f6af11,eax
  40526e:	in     eax,dx
  40526f:	fisttp DWORD PTR [esi+ecx*1-0x33]
  405273:	retf   
  405274:	and    esp,ecx
  405276:	stos   DWORD PTR es:[edi],eax
  405277:	jp     0x40528b
  405279:	je     0x4052c8
  40527b:	fwait
  40527c:	mov    ecx,0xa1d6f7c0
  405281:	pushf  
  405282:	call   0xc7cf:0xdd9b987e
  405289:	cmp    eax,DWORD PTR [ecx+0x48]
  40528c:	ss js  0x40524c
  40528f:	xlat   BYTE PTR ds:[ebx]
  405290:	jmp    0xb4693f88
  405295:	lock cmc 
  405297:	std    
  405298:	mov    bp,WORD PTR [eax+eiz*1+0x3d1859d8]
  4052a0:	sar    DWORD PTR [ebx+eiz*4-0x68],0x31
  4052a5:	aam    0x19
  4052a7:	out    0x4,al
  4052a9:	and    eax,0x770a2a6b
  4052ae:	sub    BYTE PTR [esi+0x3],bh
  4052b1:	sbb    edi,DWORD PTR [esi+0x564e296b]
  4052b7:	clc    
  4052b8:	xor    BYTE PTR [edx],0xc3
  4052bb:	aam    0x92
  4052bd:	dec    DWORD PTR [edi+edx*4+0x669b80ab]
  4052c4:	repnz in al,0xce
  4052c7:	jnp    0x405344
  4052c9:	fs arpl ax,di
  4052cc:	xlat   BYTE PTR ds:[ebx]
  4052cd:	mov    ds:0x9eca3253,eax
  4052d2:	(bad)  
  4052d3:	sub    BYTE PTR [ebx+0x42],ch
  4052d6:	jmp    0x405258
  4052d8:	cli    
  4052d9:	(bad)  
  4052da:	jae    0x4052b6
  4052dc:	pop    ebx
  4052dd:	das    
  4052de:	xchg   DWORD PTR [ebx+0x6f298616],ecx
  4052e4:	out    0x2c,al
  4052e6:	enter  0xff42,0x42
  4052ea:	daa    
  4052eb:	mov    ecx,0x8d84ff9d
  4052f0:	push   edx
  4052f1:	adc    ebx,edx
  4052f3:	sbb    ebp,0xffffffc0
  4052f6:	sub    eax,0x294e6a52
  4052fb:	fcmove st,st(2)
  4052fd:	pop    ecx
  4052fe:	cmp    DWORD PTR [edx+0x58c33378],esi
  405304:	cmp    al,0x53
  405306:	xchg   ebp,eax
  405307:	enter  0x1d78,0xec
  40530b:	mov    bh,0x6d
  40530d:	(bad)  
  40530e:	out    dx,eax
  40530f:	mov    ds:0xf9ea511,eax
  405314:	nop
  405315:	pop    eax
  405316:	sti    
  405317:	not    cl
  405319:	mov    eax,es:0xae6de164
  40531f:	xchg   esp,eax
  405320:	xchg   esi,eax
  405321:	sbb    dh,al
  405323:	dec    ecx
  405324:	int    0x86
  405326:	pop    ss
  405327:	adc    esp,DWORD PTR [edx-0x8]
  40532a:	fisttp DWORD PTR [edx+0x47b02a90]
  405330:	mov    bh,0x69
  405332:	ret    0x2f3d
  405335:	fisub  DWORD PTR [ebp-0x61]
  405338:	xchg   edx,eax
  405339:	daa    
  40533a:	ret    
  40533b:	inc    ecx
  40533c:	pop    ds
  40533d:	xor    al,0x78
  40533f:	or     ebx,DWORD PTR [esi]
  405341:	dec    ebx
  405342:	adc    dl,BYTE PTR [ebx-0x3908b1bf]
  405348:	xlat   BYTE PTR ds:[ebx]
  405349:	or     eax,0xf465c644
  40534e:	loopne 0x405384
  405350:	jge    0x4052e2
  405352:	ins    DWORD PTR es:[edi],dx
  405353:	(bad)  
  405355:	ret    
  405356:	retf   
  405357:	inc    eax
  405358:	mov    edi,0x373dcbba
  40535d:	add    eax,0x8619cc0e
  405362:	in     eax,0xfe
  405364:	gs jmp 0x3b12:0xc6c1d63f
  40536c:	dec    ebp
  40536d:	adc    ebx,esi
  40536f:	mov    eax,DWORD PTR [eax]
  405371:	neg    BYTE PTR [ecx+ecx*4-0x704a9a7e]
  405378:	imul   edi,DWORD PTR [esi],0xc3c81607
  40537e:	mov    esi,0xfbdbcaf7
  405383:	pop    ecx
  405384:	mov    ch,0x20
  405386:	pushf  
  405387:	inc    ebx
  405388:	shl    BYTE PTR [edx-0x2e],cl
  40538b:	cli    
  40538c:	inc    esp
  40538d:	mov    ch,0xad
  40538f:	stc    
  405390:	adc    bh,BYTE PTR [edx+0x61]
  405393:	jp     0x40533f
  405395:	mov    eax,DWORD PTR [edi]
  405397:	addr16 push edx
  405399:	dec    ebx
  40539a:	xchg   DWORD PTR [ebx],ecx
  40539c:	aad    0x64
  40539e:	in     eax,dx
  40539f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053a0:	shl    DWORD PTR [edx+0x7],1
  4053a3:	inc    DWORD PTR [ebp+0x69]
  4053a6:	(bad)
  4053a9:	cmp    DWORD PTR [edi-0x36],ecx
  4053ac:	or     BYTE PTR ds:[ebx],ch
  4053af:	mov    ch,0x91
  4053b1:	aaa    
  4053b2:	cmc    
  4053b3:	rol    BYTE PTR [ebx-0x13],0xee
  4053b7:	xchg   edi,eax
  4053b8:	pushf  
  4053b9:	xchg   esi,eax
  4053ba:	jmp    0xaad8f9a4
  4053bf:	sub    BYTE PTR [ecx],bh
  4053c1:	pusha  
  4053c2:	mov    ds:0x50725ef5,al
  4053c7:	sti    
  4053c8:	sub    eax,0x7a9404f6
  4053cd:	nop
  4053ce:	addr16 mov ah,0x45
  4053d1:	aad    0x78
  4053d3:	and    eax,0x7f9e045e
  4053d8:	mov    al,0x55
  4053da:	sbb    BYTE PTR [ebp+0x7],ah
  4053dd:	scas   eax,DWORD PTR es:[edi]
  4053de:	xchg   esp,eax
  4053df:	popf   
  4053e0:	pop    ecx
  4053e1:	movq   QWORD PTR [ebp+0x74],mm7
  4053e5:	pop    ebp
  4053e6:	sbb    DWORD PTR ds:0x661b1776,0xffffffdf
  4053ed:	adc    esp,eax
  4053ef:	push   esi
  4053f0:	mov    ah,0x77
  4053f2:	add    ch,BYTE PTR [ebp+0x2]
  4053f5:	jmp    0x3aa0:0x36e5c65f
  4053fc:	test   BYTE PTR [ecx+ebp*8-0xa],0xa8
  405401:	bound  esi,QWORD PTR [edi]
  405403:	sub    dh,BYTE PTR [ecx]
  405405:	push   0xffffffda
  405407:	fdivr  QWORD PTR [ebp+ecx*1-0x49]
  40540b:	xchg   esi,eax
  40540c:	pop    eax
  40540d:	in     eax,dx
  40540e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40540f:	sub    edi,esp
  405411:	lea    ecx,[esi]
  405413:	aad    0x8b
  405415:	xor    al,0x58
  405417:	imul   esp,DWORD PTR [ebx],0x2
  40541a:	ds fwait
  40541c:	iret   
  40541d:	lods   eax,DWORD PTR ds:[esi]
  40541e:	jmp    0x84e6f3b3
  405423:	test   eax,0x216a9595
  405428:	(bad)  
  405429:	mov    ch,bl
  40542b:	dec    edx
  40542c:	pop    esp
  40542d:	outs   dx,DWORD PTR ds:[esi]
  40542e:	fs push es
  405430:	xchg   esi,eax
  405431:	leave  
  405432:	lods   eax,DWORD PTR ss:[esi]
  405434:	iret   
  405435:	and    al,0xbf
  405437:	ret    0x4f0b
  40543a:	or     eax,0x7eb5051c
  40543f:	mov    bl,0x7f
  405441:	add    eax,0xde5e3b13
  405446:	sbb    ah,BYTE PTR ds:0xc432c862
  40544c:	xchg   edx,eax
  40544d:	test   esp,ecx
  40544f:	mov    edi,0xe4ea2311
  405454:	add    DWORD PTR [ecx-0x4432b8b6],esp
  40545a:	inc    ecx
  40545b:	push   esi
  40545c:	icebp  
  40545d:	cmp    dh,BYTE PTR [eax-0x6b932dc3]
  405463:	rcl    BYTE PTR [esi+eax*2],cl
  405466:	add    bh,BYTE PTR [edx]
  405468:	adc    ebp,DWORD PTR [esi-0x6611df70]
  40546e:	dec    esi
  40546f:	adc    BYTE PTR [ebx-0x3dec5167],0x1e
  405476:	ins    BYTE PTR es:[edi],dx
  405477:	mov    ah,0x3d
  405479:	(bad)  
  40547a:	dec    esi
  40547b:	ins    DWORD PTR es:[edi],dx
  40547c:	pop    ebx
  40547d:	arpl   bx,ax
  40547f:	push   ss
  405480:	add    edi,DWORD PTR [ebx-0x1237e9eb]
  405486:	inc    bx
  405488:	jo     0x405477
  40548a:	adc    bh,BYTE PTR ds:0xc8b9522a
  405490:	inc    ebp
  405491:	lods   eax,DWORD PTR ds:[esi]
  405492:	inc    BYTE PTR [ecx-0xb767a81]
  405498:	test   eax,0xf2950daa
  40549d:	mov    edi,0x90e5113d
  4054a2:	adc    al,0x76
  4054a4:	fiadd  DWORD PTR [ecx+0x72487dd3]
  4054aa:	cmp    eax,0x2d6bb6d0
  4054af:	dec    edi
  4054b0:	jmp    FWORD PTR [ecx-0x6a]
  4054b3:	test   al,0x67
  4054b5:	fs xchg edx,eax
  4054b7:	repz xchg edi,eax
  4054b9:	or     DWORD PTR [eax],edi
  4054bb:	pop    ecx
  4054bc:	call   0x25baa39f
  4054c1:	cmp    ebp,ebx
  4054c3:	ror    DWORD PTR [eax-0xf],0xba
  4054c7:	mov    bh,0x91
  4054c9:	mov    ds:0xe3f30599,al
  4054ce:	and    DWORD PTR [eax+0x5fbdf201],edx
  4054d4:	fild   DWORD PTR [ebx]
  4054d6:	xchg   edi,eax
  4054d7:	pop    ebx
  4054d8:	stos   BYTE PTR es:[edi],al
  4054d9:	sbb    bl,bh
  4054db:	or     BYTE PTR [esi],cl
  4054dd:	lahf   
  4054de:	mov    DWORD PTR [ecx+0x27972c6d],ecx
  4054e4:	sub    DWORD PTR [ecx+ebx*2],eax
  4054e7:	jge    0x4054fa
  4054e9:	sar    esi,1
  4054eb:	xchg   ebx,eax
  4054ec:	mov    ds:0x9136b8e,eax
  4054f1:	jns    0x40547e
  4054f3:	sbb    ah,BYTE PTR [ecx]
  4054f5:	push   ebx
  4054f6:	pop    edi
  4054f7:	xchg   esi,eax
  4054f8:	aam    0x3c
  4054fa:	enter  0x16a2,0xbe
  4054fe:	push   edi
  4054ff:	mov    ecx,0x6e01becb
  405504:	add    edi,DWORD PTR [ebp+edi*1+0x45]
  405508:	rcl    DWORD PTR ds:0x9187ad7a,cl
  40550e:	pop    esi
  40550f:	sub    bh,BYTE PTR [edi-0x1a43480b]
  405515:	jge    0x405536
  405517:	in     eax,0x9c
  405519:	je     0x4054c9
  40551b:	push   cs
  40551c:	jg     0x405580
  40551e:	es repz in eax,dx
  405521:	sub    DWORD PTR [ecx-0x41],esp
  405524:	dec    ecx
  405525:	mov    ah,BYTE PTR [ecx-0xa]
  405528:	icebp  
  405529:	or     al,0xbc
  40552b:	in     al,dx
  40552c:	adc    al,0x12
  40552e:	in     eax,0xe5
  405530:	xor    BYTE PTR [ebx-0x676350e2],0x67
  405537:	add    eax,0x9ac57c3
  40553c:	jmp    0x73f859c7
  405541:	push   cs
  405542:	xor    esi,edx
  405544:	daa    
  405545:	sbb    edi,DWORD PTR [eax-0x2923b65a]
  40554b:	push   ebx
  40554c:	dec    esi
  40554d:	stos   BYTE PTR es:[di],al
  40554f:	push   esp
  405550:	xchg   esi,eax
  405551:	jg     0x405533
  405553:	sbb    dl,cl
  405555:	(bad)  
  405556:	js     0x405511
  405558:	sub    ecx,ebp
  40555a:	pop    es
  40555b:	or     bh,cl
  40555d:	fld    DWORD PTR [ebp-0x2ad73ca5]
  405563:	inc    eax
  405564:	(bad)  
  405566:	xor    BYTE PTR [edx+0x2fc4b4d0],bh
  40556c:	sub    BYTE PTR [ecx-0x17633e4],ah
  405572:	xchg   edi,eax
  405573:	push   ebx
  405574:	sbb    eax,DWORD PTR [edx]
  405576:	push   0xffffffb7
  405578:	xor    esp,DWORD PTR [ecx+esi*8+0x26f891c4]
  40557f:	daa    
  405580:	retf   
  405581:	xchg   ebx,eax
  405582:	out    dx,eax
  405583:	dec    esi
  405584:	loop   0x405600
  405586:	out    0x28,al
  405588:	xchg   ebx,eax
  405589:	pop    ecx
  40558a:	imul   edi,edi,0xc3b9a866
  405590:	xor    BYTE PTR [ecx+0x7ee0e617],0x8a
  405597:	adc    DWORD PTR [edx],eax
  405599:	add    edi,DWORD PTR [esi-0x71e33c0]
  40559f:	rol    dh,0x8d
  4055a2:	dec    ecx
  4055a3:	mov    cl,0x6c
  4055a5:	mov    ch,0x11
  4055a7:	pop    edx
  4055a8:	icebp  
  4055a9:	(bad)  
  4055aa:	sbb    edx,DWORD PTR [esi+edi*1+0x5838222e]
  4055b1:	hlt    
  4055b2:	sub    edi,DWORD PTR [edi]
  4055b4:	ja     0x405547
  4055b6:	pop    edx
  4055b7:	cmp    bh,BYTE PTR [ebx+ebx*4-0xf8b9fba]
  4055be:	enter  0x9556,0x56
  4055c2:	fwait
  4055c3:	push   esp
  4055c4:	push   0xffffffde
  4055c6:	imul   esp,edi,0xffffffaa
  4055c9:	test   BYTE PTR [ebp+0x60],dh
  4055cc:	jge    0x4055de
  4055ce:	dec    esi
  4055cf:	pop    edi
  4055d0:	(bad)
  4055d3:	dec    edi
  4055d4:	jmp    0x40560a
  4055d6:	jmp    0xc075:0x35552f83
  4055dd:	loop   0x4055fa
  4055df:	xor    BYTE PTR [ebx+0x16],ah
  4055e2:	mul    DWORD PTR [eax-0x52]
  4055e5:	call   0x448e44e1
  4055ea:	push   esi
  4055eb:	sbb    BYTE PTR [edx-0x6feb31dd],0x81
  4055f2:	outs   dx,DWORD PTR ds:[esi]
  4055f3:	aam    0x9a
  4055f5:	imul   ebx,DWORD PTR [ebp-0x32],0x18
  4055f9:	inc    esi
  4055fa:	sub    ch,dl
  4055fc:	repz leave 
  4055fe:	(bad)  
  4055ff:	mov    ds:0x2b2aa4d8,eax
  405604:	inc    ebx
  405605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405606:	jl     0x405638
  405608:	ins    BYTE PTR es:[edi],dx
  405609:	daa    
  40560a:	jmp    0xaef9:0x3656640d
  405611:	ds aaa 
  405613:	xchg   ecx,eax
  405614:	sahf   
  405615:	sbb    BYTE PTR [ebx-0x35],dh
  405618:	popf   
  405619:	sub    BYTE PTR [edx-0x14c15ee8],dh
  40561f:	loopne 0x40561b
  405621:	les    eax,FWORD PTR [ecx+0x2]
  405624:	xor    al,0xd9
  405626:	sbb    eax,0x9398bea5
  40562b:	ds call 0x5247:0x2cd5b1ef
  405633:	lahf   
  405634:	shr    DWORD PTR [eax-0x1e13f677],0x1e
  40563b:	push   esp
  40563c:	ret    
  40563d:	clc    
  40563e:	mov    cl,BYTE PTR [ebx+0x2]
  405641:	icebp  
  405642:	cmp    DWORD PTR [ecx+0x37],edi
  405645:	aam    0xc4
  405647:	sar    eax,0xf1
  40564a:	imul   sp,cx,0xd54
  40564f:	ds test al,0x5f
  405652:	ss sub eax,0x49cc0fb6
  405658:	js     0x405699
  40565a:	sbb    eax,0x600273fe
  40565f:	shl    DWORD PTR [ebx+0x7d],cl
  405662:	call   0x44c1a8e9
  405667:	push   0xffffffbc
  405669:	jnp    0x405625
  40566b:	adc    DWORD PTR [esi],ecx
  40566d:	hlt    
  40566e:	xchg   ebx,eax
  40566f:	jge    0x405693
  405671:	pop    ds
  405672:	cmp    BYTE PTR [eax],0xd0
  405675:	not    BYTE PTR [ebx+0x51]
  405678:	pop    ds
  405679:	ss (bad) 
  40567c:	sub    BYTE PTR [esp+eiz*2-0xf],al
  405680:	retf   
  405681:	push   ebx
  405682:	retf   0x41eb
  405685:	leave  
  405686:	test   DWORD PTR [ebx],0x5edd4669
  40568c:	imul   esp,DWORD PTR [ebp-0x413cc05a],0xfffffff4
  405693:	(bad)
  405698:	clc    
  405699:	sub    esp,DWORD PTR [esi+0x6486b272]
  40569f:	push   ss
  4056a0:	push   esp
  4056a1:	icebp  
  4056a2:	jne    0x4056b9
  4056a4:	out    dx,al
  4056a5:	daa    
  4056a6:	push   es
  4056a7:	icebp  
  4056a8:	lods   al,BYTE PTR ds:[esi]
  4056a9:	xchg   edx,eax
  4056aa:	xlat   BYTE PTR es:[ebx]
  4056ac:	push   edx
  4056ad:	adc    esi,ecx
  4056af:	loopne 0x405633
  4056b1:	add    eax,0x835b476f
  4056b6:	xchg   edx,eax
  4056b7:	jmp    DWORD PTR [edx+ebx*4-0x2e]
  4056bb:	(bad)  
  4056bc:	xor    al,0xb3
  4056be:	aas    
  4056bf:	hlt    
  4056c0:	mov    ecx,0x9256c0be
  4056c5:	add    BYTE PTR [edi],ch
  4056c7:	gs mov dl,0xb9
  4056ca:	bound  ecx,QWORD PTR [edi+0x3fdcc7b0]
  4056d0:	jl     0x405737
  4056d2:	dec    ecx
  4056d3:	push   esi
  4056d4:	cmp    BYTE PTR ds:0xcc8491f0,0xef
  4056db:	jle    0x4056bf
  4056dd:	mov    ds:0x90ddae7c,al
  4056e2:	mov    DWORD PTR [edx],eax
  4056e4:	xchg   edx,eax
  4056e5:	xor    ebp,DWORD PTR [ebx+0x4c72a54c]
  4056eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ec:	jb     0x4056b8
  4056ee:	hlt    
  4056ef:	mov    cl,0xda
  4056f1:	push   ebp
  4056f2:	and    BYTE PTR [edi+esi*8-0x43fb9176],ch
  4056f9:	push   edx
  4056fa:	repnz sub DWORD PTR [ebp-0x19],0x75a6def4
  405702:	into   
  405703:	pop    eax
  405704:	or     cl,dl
  405706:	ja     0x4056b8
  405708:	mov    dl,0x6e
  40570a:	and    DWORD PTR [eax],0x991710a1
  405710:	push   ecx
  405711:	pop    ds
  405712:	jg     0x4056e7
  405714:	xor    ebp,DWORD PTR [esp+ebx*4]
  405717:	sar    BYTE PTR [esi],cl
  405719:	or     esi,DWORD PTR [ecx]
  40571b:	jb     0x4056b1
  40571d:	inc    edi
  40571e:	fwait
  40571f:	ss imul edx,esi,0x5e7a0672
  405726:	aam    0xe9
  405728:	pop    ecx
  405729:	ffree  st(6)
  40572b:	jmp    0x4056c1
  40572d:	out    dx,eax
  40572e:	jmp    DWORD PTR [esp+eax*2+0xa]
  405732:	iret   
  405733:	out    0xa5,eax
  405735:	or     ebx,esp
  405737:	mov    cl,0x1a
  405739:	ja     0x405753
  40573b:	pop    ecx
  40573c:	(bad)  
  40573d:	repz mov ah,0xed
  405740:	mov    esp,0x58d62b29
  405745:	ins    BYTE PTR es:[edi],dx
  405746:	push   cs
  405747:	pop    edi
  405748:	std    
  405749:	inc    ebx
  40574a:	sbb    eax,0x6ff8df5
  40574f:	mov    edx,DWORD PTR [esi]
  405751:	xor    BYTE PTR [ebp-0x13f869ed],0x29
  405758:	sub    bl,dh
  40575a:	je     0x4057cb
  40575c:	fisttp DWORD PTR [edx+0x7c]
  40575f:	mul    esp
  405761:	mov    BYTE PTR [ecx+0x276ebc0d],dl
  405767:	les    esp,FWORD PTR [eax+0x6ea253a3]
  40576d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40576e:	mov    dh,0x55
  405770:	int    0xfb
  405772:	cmp    eax,0x54dc9d3a
  405777:	cs pop edi
  405779:	adc    BYTE PTR ds:0x163f23b3,0xf
  405780:	xor    al,BYTE PTR [edi+0x35]
  405783:	repz mov WORD PTR cs:0xbb7ea8c6,?
  40578b:	jge    0x40578e
  40578d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40578e:	cld    
  40578f:	test   al,0xfb
  405791:	jecxz  0x4057c3
  405793:	push   es
  405794:	imul   esi,DWORD PTR [ebp-0x1bf16a84],0x1c06711c
  40579e:	gs jnp 0x40573e
  4057a1:	xchg   edx,eax
  4057a2:	lock dec eax
  4057a4:	int3   
  4057a5:	xchg   ebx,eax
  4057a6:	int3   
  4057a7:	jmp    0x6dcdc51c
  4057ac:	add    edx,DWORD PTR [esi]
  4057ae:	dec    edi
  4057af:	xor    ebp,DWORD PTR [ebx+ebx*2]
  4057b2:	retf   0x91c0
  4057b5:	mov    dl,0x86
  4057b7:	outs   dx,BYTE PTR ds:[esi]
  4057b8:	jg     0x40579b
  4057ba:	psubusb mm2,mm0
  4057bd:	ins    DWORD PTR es:[edi],dx
  4057be:	mov    ah,0x96
  4057c0:	iret   
  4057c1:	in     al,0x6a
  4057c3:	sbb    edi,DWORD PTR [edi-0x5cc5dc5b]
  4057c9:	enter  0x1cd,0x49
  4057cd:	int3   
  4057ce:	xchg   esi,eax
  4057cf:	mov    ch,0x5a
  4057d1:	cmp    al,bl
  4057d3:	inc    ebp
  4057d4:	outs   dx,BYTE PTR ds:[esi]
  4057d5:	inc    ebx
  4057d6:	repnz outs dx,DWORD PTR ds:[esi]
  4057d8:	mov    es,WORD PTR [bx+si-0x1]
  4057dc:	outs   dx,DWORD PTR ds:[esi]
  4057dd:	push   ss
  4057de:	mov    ecx,0x1903565a
  4057e3:	(bad)  [ebp+0x5]
  4057e6:	mov    bh,0x57
  4057e8:	cmp    esi,DWORD PTR [ebp+0x184d3bfb]
  4057ee:	repz in eax,dx
  4057f0:	sub    DWORD PTR [esi-0x30],esp
  4057f3:	cmc    
  4057f4:	mov    edx,0xeae8d2a3
  4057f9:	loopne 0x405784
  4057fb:	and    al,0x7e
  4057fd:	lods   al,BYTE PTR ds:[esi]
  4057fe:	add    edi,DWORD PTR ds:0xafc3ee24
  405804:	imul   ebp,edx,0xf5d38258
  40580a:	enter  0xbc90,0x3
  40580e:	loopne 0x4057dd
  405810:	and    eax,0x23a0db8e
  405815:	pusha  
  405816:	(bad)  
  405817:	sub    dl,bh
  405819:	es and al,0x40
  40581c:	jae    0x40584e
  40581e:	cwde   
  40581f:	mov    eax,0xe1cac7f7
  405824:	cmp    BYTE PTR [edi-0x6c1acc83],dl
  40582a:	dec    esi
  40582b:	test   al,0x4
  40582d:	clc    
  40582e:	neg    DWORD PTR [ebp+0x64a5621c]
  405834:	(bad)  
  405835:	je     0x405839
  405837:	repz test al,0x5a
  40583a:	sub    ebp,ebp
  40583c:	lea    eax,[esi]
  40583e:	fcom   QWORD PTR [esi+0x598fea5f]
  405844:	pop    ecx
  405845:	jo     0x40581d
  405847:	add    ebx,esp
  405849:	fstp   DWORD PTR [edx-0x2ddd41ca]
  40584f:	mov    ebp,DWORD PTR [ecx-0x5464748a]
  405855:	and    DWORD PTR [ebx],ebx
  405857:	mov    eax,ds:0xdc068ada
  40585c:	bound  eax,QWORD PTR [ebx+0x3d]
  40585f:	popf   
  405860:	xchg   ecx,eax
  405861:	push   ebp
  405862:	(bad)  
  405863:	in     eax,0x74
  405865:	jnp    0x4058b6
  405867:	fsub   DWORD PTR [edi-0x36b5dd52]
  40586d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40586e:	adc    eax,0x98a43c5c
  405873:	xor    cl,BYTE PTR [eax]
  405875:	arpl   WORD PTR [esi+0x6084c1cd],si
  40587b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587c:	jns    0x4058d7
  40587e:	jmp    0xfad2:0x72351f5f
  405885:	sbb    edi,DWORD PTR [ecx-0x4a719949]
  40588b:	dec    ecx
  40588c:	lds    esi,FWORD PTR [eax+0x67792ee4]
  405892:	jo     0x405831
  405894:	add    DWORD PTR ds:0x49b987ec,esi
  40589a:	mov    BYTE PTR [esi+0x3a],0xd0
  40589e:	and    eax,0x5d6a8fd4
  4058a3:	cli    
  4058a4:	std    
  4058a5:	pop    esp
  4058a6:	shl    cl,cl
  4058a8:	pop    edx
  4058a9:	lock push ds
  4058ab:	jmp    0x40589d
  4058ad:	pop    ebp
  4058ae:	inc    eax
  4058af:	aad    0x3c
  4058b1:	call   0xeddbc84e
  4058b6:	push   ss
  4058b7:	add    ecx,esi
  4058b9:	mov    bl,0xba
  4058bb:	or     BYTE PTR [edi-0x3c],al
  4058be:	xchg   edi,eax
  4058bf:	loop   0x40590a
  4058c1:	xor    DWORD PTR [edx],0xe9976058
  4058c7:	(bad)  
  4058c8:	dec    ebx
  4058c9:	rcl    ebx,1
  4058cb:	aaa    
  4058cc:	ret    
  4058cd:	add    eax,0xe2aa5b13
  4058d2:	xchg   edi,eax
  4058d3:	dec    esp
  4058d4:	mov    bl,0x71
  4058d6:	jo     0x405938
  4058d8:	fsubp  st(6),st
  4058da:	mov    ds:0xd21409ef,eax
  4058df:	adc    ch,BYTE PTR [edx+0x5a]
  4058e2:	add    al,0xa3
  4058e4:	(bad)  
  4058e5:	(bad)  
  4058e7:	xchg   BYTE PTR [edi-0x125a6f8d],bl
  4058ed:	sub    al,BYTE PTR [edi-0x14]
  4058f0:	inc    ecx
  4058f1:	daa    
  4058f2:	int    0xbd
  4058f4:	push   esp
  4058f5:	sbb    al,0x5
  4058f7:	je     0x4058ab
  4058f9:	mov    eax,gs
  4058fb:	mov    ds:0xb1a6294e,eax
  405900:	loop   0x405946
  405902:	xchg   ecx,eax
  405903:	push   es
  405904:	fwait
  405905:	call   0x92f97629
  40590a:	ret    0x33f9
  40590d:	imul   esp,DWORD PTR [ecx-0x7a],0xd1ed873a
  405914:	and    ebp,DWORD PTR [eax-0xcb50da5]
  40591a:	or     al,0xcd
  40591c:	and    ebx,DWORD PTR [esi+esi*1]
  40591f:	mov    BYTE PTR [ebp+0x707a5d9c],ah
  405925:	int3   
  405926:	xchg   edi,eax
  405927:	test   BYTE PTR [esi+0x1b],al
  40592a:	test   edx,ecx
  40592c:	gs mov ebp,0x4d86b1ae
  405932:	adc    al,0xb8
  405934:	aaa    
  405935:	dec    edi
  405936:	or     ecx,DWORD PTR [ecx]
  405938:	int    0xef
  40593a:	mov    ebx,0xfcd3ee55
  40593f:	mov    dl,0x0
  405941:	mov    ?,eax
  405943:	xchg   ebx,eax
  405944:	ret    0x722a
  405947:	xor    eax,0x60930903
  40594c:	retf   
  40594d:	or     al,0xd6
  40594f:	pop    esi
  405950:	outs   dx,DWORD PTR ds:[esi]
  405951:	xchg   ebx,eax
  405952:	mov    DWORD PTR [edx],esp
  405954:	bswap  edx
  405956:	jge    0x405929
  405958:	or     al,0xc4
  40595a:	mov    eax,ds:0x96c2cc3a
  40595f:	push   ebp
  405961:	xor    DWORD PTR [edx+0x7f6c7910],eax
  405967:	fidivr DWORD PTR [ecx]
  405969:	dec    ebx
  40596a:	call   0x48cd:0x606534b5
  405971:	or     bl,BYTE PTR [ecx+ebx*2+0x406c6a77]
  405978:	rol    dl,1
  40597a:	sub    eax,0x5484eec2
  40597f:	cs inc edx
  405981:	(bad)  
  405982:	in     al,dx
  405983:	jno    0x40591f
  405985:	add    al,0x68
  405987:	sbb    al,0x59
  405989:	addr16 fs pop ss
  40598c:	add    eax,0xb363a7c8
  405991:	(bad)  
  405992:	iret   
  405993:	std    
  405994:	(bad)  
  405995:	loopne 0x40594e
  405997:	out    dx,eax
  405998:	inc    ebx
  405999:	inc    esp
  40599a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40599b:	ins    BYTE PTR es:[edi],dx
  40599c:	xor    dh,BYTE PTR [eax+0x6f]
  40599f:	scas   al,BYTE PTR es:[edi]
  4059a0:	jbe    0x4059e5
  4059a2:	adc    esp,DWORD PTR [eax-0x1d91704]
  4059a8:	fwait
  4059a9:	dec    edx
  4059aa:	add    ecx,DWORD PTR [eax+0x3]
  4059ad:	ins    DWORD PTR es:[edi],dx
  4059ae:	fmulp  st(1),st
  4059b0:	xor    dl,ch
  4059b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059b3:	jb     0x405a2b
  4059b5:	jno    0x4059f7
  4059b7:	dec    esp
  4059b8:	lock hlt 
  4059ba:	rol    DWORD PTR [edx],0xd5
  4059bd:	fdivr  DWORD PTR [edx+0x5f]
  4059c0:	shl    BYTE PTR ds:0x472d2d24,cl
  4059c6:	sub    al,0xb0
  4059c8:	inc    eax
  4059c9:	inc    esi
  4059ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059cb:	cmc    
  4059cc:	xchg   edx,eax
  4059cd:	outs   dx,DWORD PTR ds:[esi]
  4059ce:	mov    esp,0x76876a43
  4059d3:	fs jmp 0x4059ff
  4059d6:	dec    ecx
  4059d7:	or     DWORD PTR [edx+0x7],esp
  4059da:	test   DWORD PTR [edi+0x4a],edi
  4059dd:	push   ebp
  4059de:	fldenv [ebp+0x7]
  4059e1:	ds mov dl,0x81
  4059e4:	out    dx,al
  4059e5:	and    BYTE PTR ds:0x5a26b2cc,ah
  4059eb:	add    eax,0x3424b075
  4059f0:	leave  
  4059f1:	in     al,dx
  4059f2:	mov    ds:0xc4b1deae,al
  4059f7:	js     0x405a78
  4059f9:	out    dx,al
  4059fa:	sub    ebp,DWORD PTR [esi+0x57]
  4059fd:	dec    edi
  4059fe:	mov    esi,edi
  405a00:	rol    edx,1
  405a02:	xchg   ebx,eax
  405a03:	ror    DWORD PTR [edx],0x6f
  405a06:	add    ebp,DWORD PTR [ecx-0x2e9252b9]
  405a0c:	(bad)  
  405a0d:	mov    al,ds:0x68ab93da
  405a12:	es (bad) 
  405a14:	aad    0xb6
  405a16:	or     cl,dl
  405a18:	in     al,0xa
  405a1a:	push   si
  405a1c:	clc    
  405a1d:	and    DWORD PTR [ebx-0x77],esp
  405a20:	loopne 0x405a81
  405a22:	jle    0x405a9e
  405a24:	adc    dh,BYTE PTR [eax-0x587c1295]
  405a2a:	test   BYTE PTR [edx-0x6d],bl
  405a2d:	push   cs
  405a2e:	sbb    al,0x8f
  405a30:	retf   
  405a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a32:	ret    0xa734
  405a35:	fst    QWORD PTR [ebx-0x40e1ca0a]
  405a3b:	sub    al,al
  405a3d:	xor    ecx,DWORD PTR [edx]
  405a3f:	inc    eax
  405a40:	inc    ebx
  405a41:	xchg   esp,eax
  405a42:	adc    eax,0xf2568392
  405a47:	dec    ebp
  405a48:	push   ss
  405a49:	mov    edi,0xb5e907bf
  405a4e:	pop    edi
  405a4f:	int    0x49
  405a51:	push   esp
  405a52:	mov    edx,0x5edce9fb
  405a57:	mov    ch,0xb1
  405a59:	loope  0x405a09
  405a5b:	xor    DWORD PTR [ebx+0x4006779a],eax
  405a61:	into   
  405a62:	inc    eax
  405a63:	push   ebp
  405a64:	call   0x8a2c:0xb7ca4dd4
  405a6b:	les    edi,FWORD PTR [ebp-0x39]
  405a6e:	jnp    0x405ad1
  405a70:	out    dx,eax
  405a71:	adc    al,0x82
  405a73:	gs and eax,edi
  405a76:	popa   
  405a77:	aad    0x9a
  405a79:	mov    eax,ds:0x241a3a17
  405a7e:	add    ah,BYTE PTR [eax+0x55eeef5f]
  405a84:	(bad)  
  405a85:	frstor [esi+0x1c]
  405a88:	xor    eax,0x816ece5e
  405a8d:	mov    cl,0x15
  405a8f:	jmp    0xfec20972
  405a94:	gs js  0x405a6b
  405a97:	lods   al,BYTE PTR ds:[esi]
  405a98:	and    BYTE PTR [ebx-0x4e],al
  405a9b:	mov    ah,0x6f
  405a9d:	(bad)  
  405a9e:	(bad)  
  405a9f:	pop    ebp
  405aa0:	adc    al,0x97
  405aa2:	dec    ebp
  405aa3:	inc    edx
  405aa4:	int3   
  405aa5:	mov    WORD PTR [edi],fs
  405aa7:	pop    ds
  405aa8:	and    al,bl
  405aaa:	and    cl,BYTE PTR [edi+0x232e0aba]
  405ab0:	scas   eax,DWORD PTR es:[edi]
  405ab1:	pop    edx
  405ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab3:	push   ss
  405ab4:	jno    0x405b27
  405ab6:	iret   
  405ab7:	sbb    BYTE PTR [ecx+0x7fdc87fb],0xba
  405abe:	nop
  405abf:	enter  0xa056,0x25
  405ac3:	or     bl,cl
  405ac5:	shl    BYTE PTR [eax-0x61],cl
  405ac8:	cmp    eax,ebx
  405aca:	icebp  
  405acb:	mov    esi,0xf4199ffb
  405ad0:	jae    0x405a68
  405ad2:	jno    0x405a5e
  405ad4:	fisub  WORD PTR [ebp-0x68]
  405ad7:	xor    al,0xf3
  405ad9:	rcr    DWORD PTR [edi+0x6],1
  405adc:	adc    dl,BYTE PTR [esi]
  405ade:	in     al,0xb7
  405ae0:	jnp    0x405b19
  405ae2:	or     DWORD PTR [ebx+0x4e469bf4],0x4f84bf49
  405aec:	sbb    bh,BYTE PTR [esi+0x76]
  405aef:	and    al,0xc1
  405af1:	xlat   BYTE PTR ds:[ebx]
  405af2:	mov    dl,0x26
  405af4:	scas   al,BYTE PTR es:[edi]
  405af5:	xchg   ecx,eax
  405af6:	pushf  
  405af7:	sti    
  405af8:	sub    bh,BYTE PTR [ebx+0x11]
  405afb:	mov    eax,ds:0x4302e869
  405b00:	mov    bl,0xc
  405b02:	mov    dl,BYTE PTR [eax]
  405b04:	popa   
  405b05:	sub    DWORD PTR [edi-0x7341e323],esp
  405b0b:	or     eax,0x8c45a32e
  405b10:	std    
  405b11:	loopne 0x405b57
  405b13:	mov    esi,0x46b2cd88
  405b18:	and    ecx,ecx
  405b1a:	dec    edx
  405b1b:	inc    ebp
  405b1c:	repnz hlt 
  405b1e:	test   BYTE PTR [ebx+0x5f],ch
  405b21:	(bad)  
  405b22:	js     0x405b34
  405b24:	popa   
  405b25:	xor    eax,0xb4129ae8
  405b2a:	dec    ebp
  405b2b:	jns    0x405b07
  405b2d:	in     eax,dx
  405b2e:	mov    eax,0xa54fcaee
  405b33:	and    esi,eax
  405b35:	mov    al,ds:0x11ceaa14
  405b3a:	retf   
  405b3b:	das    
  405b3c:	mov    WORD PTR [ecx-0x5e],?
  405b3f:	xchg   ebx,eax
  405b40:	fst    QWORD PTR [ecx-0x3]
  405b43:	inc    edx
  405b44:	hlt    
  405b45:	shl    dl,0x41
  405b48:	retf   
  405b49:	cmc    
  405b4a:	jbe    0x405b27
  405b4c:	sub    BYTE PTR [edi],cl
  405b4e:	gs and dh,dl
  405b51:	jecxz  0x405b4d
  405b53:	jl     0x405b5a
  405b55:	sbb    eax,0xbd33f77c
  405b5a:	fbld   TBYTE PTR [edi]
  405b5c:	jnp    0x405b15
  405b5e:	(bad)  
  405b5f:	fsubr  QWORD PTR [ebx-0x32]
  405b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b64:	or     edx,ebx
  405b66:	daa    
  405b67:	jmp    0x405b6d
  405b69:	fsubrp st(4),st
  405b6b:	ins    DWORD PTR es:[edi],dx
  405b6c:	addr16 jnp 0x405b5f
  405b6f:	mov    bl,0xdc
  405b71:	adc    eax,0x7d23e228
  405b76:	out    dx,eax
  405b77:	cwde   
  405b78:	ret    0xc98e
  405b7b:	fld    QWORD PTR [edi-0x30]
  405b7e:	push   edx
  405b7f:	inc    esi
  405b80:	mov    ebp,0x68d48949
  405b85:	jp     0x405b58
  405b87:	xor    al,0xcd
  405b89:	mov    al,ds:0xbff227d6
  405b8e:	add    al,0xb3
  405b90:	(bad)  
  405b92:	loopne 0x405bed
  405b94:	xchg   esp,eax
  405b95:	xchg   edx,eax
  405b96:	icebp  
  405b97:	mov    ch,0xe2
  405b99:	shr    bh,1
  405b9b:	push   cs
  405b9c:	mov    ecx,0x5695ed5c
  405ba1:	aaa    
  405ba2:	leave  
  405ba3:	fs adc al,0xb2
  405ba6:	inc    esi
  405ba7:	loope  0x405b49
  405ba9:	push   esi
  405baa:	jecxz  0x405b76
  405bac:	in     eax,dx
  405bad:	jmp    0x786d44fd
  405bb2:	push   edi
  405bb3:	rcl    DWORD PTR [edx+0x464a130f],0x89
  405bba:	(bad)  
  405bbb:	and    DWORD PTR [edi-0x7f],eax
  405bbe:	and    dl,BYTE PTR [esi-0x58]
  405bc1:	cli    
  405bc2:	rcl    DWORD PTR [ebp-0x7f],cl
  405bc5:	cmc    
  405bc6:	mov    edx,0xb81d2404
  405bcb:	cmp    al,BYTE PTR [esi+0x6]
  405bce:	cs and al,0x4e
  405bd1:	push   ebp
  405bd2:	xchg   edx,eax
  405bd3:	adc    eax,DWORD PTR [edx-0x65]
  405bd6:	and    bl,BYTE PTR [esi]
  405bd8:	stos   DWORD PTR es:[edi],eax
  405bd9:	dec    edi
  405bda:	inc    ebx
  405bdb:	and    eax,0x15758452
  405be0:	js     0x405bc4
  405be2:	inc    ebp
  405be3:	push   ecx
  405be4:	add    al,0x65
  405be6:	push   0x35
  405be8:	fisub  WORD PTR [eax+eax*2-0x51b9e40f]
  405bef:	inc    eax
  405bf0:	clc    
  405bf1:	add    DWORD PTR [ebp+0x2eb5f459],edi
  405bf7:	jo     0x405c6a
  405bf9:	and    ah,BYTE PTR [ecx+0x964a2d3]
  405bff:	or     dl,BYTE PTR [edi-0x61719c32]
  405c05:	mov    edi,0xd8cc006d
  405c0a:	xor    eax,0x7326f563
  405c0f:	das    
  405c10:	mov    eax,0xb262c5cd
  405c15:	paddd  mm7,QWORD PTR [esi+0x5e]
  405c19:	mov    dl,ah
  405c1b:	adc    esi,ebx
  405c1d:	scas   al,BYTE PTR es:[edi]
  405c1e:	das    
  405c1f:	push   es
  405c20:	sub    ch,BYTE PTR [ebp+0x2d]
  405c23:	cmc    
  405c24:	repz test eax,0xb9a6c12f
  405c2a:	push   ecx
  405c2b:	icebp  
  405c2c:	aaa    
  405c2d:	dec    esi
  405c2e:	(bad)  
  405c2f:	cmp    al,0x7f
  405c31:	dec    esp
  405c32:	jmp    0x810f:0xce8d8e83
  405c39:	lds    ebp,FWORD PTR [edx-0x775fb4d1]
  405c3f:	sbb    BYTE PTR [ebx+0x1],0xf7
  405c43:	pop    ecx
  405c44:	xchg   edx,eax
  405c45:	xchg   DWORD PTR [esi+0x7655c95f],esi
  405c4b:	stos   BYTE PTR es:[edi],al
  405c4c:	sbb    al,bl
  405c4e:	sbb    ebp,DWORD PTR [esi]
  405c50:	xchg   edi,eax
  405c51:	cld    
  405c52:	sub    eax,0xf1c47131
  405c57:	fmul   QWORD PTR [esp+edi*4+0x30]
  405c5b:	push   eax
  405c5c:	fld    DWORD PTR [edi]
  405c5e:	sub    eax,0x1900eac2
  405c63:	repnz in al,0x1f
  405c66:	jae    0x405c2e
  405c68:	pop    esp
  405c69:	jo     0x405c13
  405c6b:	pop    es
  405c6c:	mov    ebx,0xb8639a5
  405c71:	in     eax,dx
  405c72:	in     eax,dx
  405c73:	fistp  DWORD PTR [esi]
  405c75:	push   esi
  405c76:	cmp    BYTE PTR [edi+0x2c],cl
  405c79:	fimul  WORD PTR [edi-0x758ab9c4]
  405c7f:	(bad)  
  405c80:	push   ebx
  405c81:	fcomi  st,st(1)
  405c83:	mov    cl,ah
  405c85:	and    bl,dl
  405c87:	lds    ebx,FWORD PTR [edi-0x55]
  405c8a:	data16 mov ds:0x23a6cfec,al
  405c90:	pop    esp
  405c91:	out    0xcc,al
  405c93:	into   
  405c94:	fwait
  405c95:	ins    DWORD PTR es:[edi],dx
  405c96:	mov    BYTE PTR [ecx+edx*4+0x170d5b7d],dl
  405c9d:	cli    
  405c9e:	cli    
  405c9f:	leave  
  405ca0:	cmp    DWORD PTR [esi],0x405de395
  405ca6:	jo     0x405c6a
  405ca8:	retf   
  405ca9:	dec    ecx
  405caa:	cwde   
  405cab:	pop    esp
  405cac:	call   edi
  405cae:	fwait
  405caf:	(bad)  
  405cb0:	js     0x405c8b
  405cb2:	pop    esp
  405cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb4:	pop    ebp
  405cb5:	rcl    BYTE PTR [edi+0x12320d7e],cl
  405cbb:	xchg   edi,eax
  405cbc:	das    
  405cbd:	or     eax,0x1b257af7
  405cc2:	jl     0x405c89
  405cc4:	cdq    
  405cc5:	loopne 0x405c5b
  405cc7:	loopne 0x405c9f
  405cc9:	inc    edx
  405cca:	jp     0x405ca7
  405ccc:	pop    ebx
  405ccd:	dec    esi
  405cce:	mov    bh,0xb1
  405cd0:	jo     0x405c7a
  405cd2:	sbb    BYTE PTR [esp+eax*8-0x2be29971],bl
  405cd9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cdb:	pusha  
  405cdc:	push   0xffffff8e
  405cde:	or     BYTE PTR [eax+0x73b8f668],0xfb
  405ce5:	jnp    0x405d39
  405ce7:	jg     0x405d37
  405ce9:	adc    bl,BYTE PTR [edx+esi*2]
  405cec:	sub    al,0xfe
  405cee:	bound  esi,QWORD PTR [eax]
  405cf0:	mov    esp,0x16e6e0ea
  405cf5:	nop
  405cf6:	mov    al,ds:0x803d8f4b
  405cfb:	jge    0x405cb1
  405cfd:	or     bh,BYTE PTR [edi+0x28]
  405d00:	push   ebp
  405d01:	adc    DWORD PTR [esi+ecx*8-0x75cf7459],0x173e703b
  405d0c:	(bad)  
  405d0d:	sti    
  405d0e:	mov    bl,0xc0
  405d10:	jne    0x405d1d
  405d12:	push   0xb38f9c25
  405d17:	mov    cl,0xa
  405d19:	sub    dl,BYTE PTR [ebx-0x66]
  405d1c:	lods   al,BYTE PTR ds:[esi]
  405d1d:	cmp    al,0xc8
  405d1f:	inc    esp
  405d20:	sbb    eax,0xfc999910
  405d25:	fbstp  TBYTE PTR [esi]
  405d27:	call   0x3652d4ad
  405d2c:	imul   esp,DWORD PTR [edi],0x786c5dfd
  405d32:	mov    ah,ch
  405d34:	xchg   ebx,eax
  405d35:	cld    
  405d36:	push   es
  405d37:	push   edi
  405d38:	xor    eax,0x43c795ba
  405d3d:	mov    ?,WORD PTR [esi+0x474c4535]
  405d43:	test   DWORD PTR [edx],0x83343ab3
  405d49:	lods   al,BYTE PTR ds:[esi]
  405d4a:	jb     0x405d42
  405d4c:	xchg   edx,eax
  405d4d:	(bad)
  405d50:	inc    edi
  405d51:	sbb    al,0x92
  405d53:	shl    DWORD PTR [esi],1
  405d55:	sar    DWORD PTR [esi],cl
  405d57:	loopne 0x405dcb
  405d59:	retf   
  405d5a:	fbstp  TBYTE PTR ds:0x5948070
  405d60:	xor    edi,esi
  405d62:	pop    edx
  405d63:	jae    0x405ce6
  405d65:	nop
  405d66:	lds    ebx,FWORD PTR [edi-0x6c]
  405d69:	jns    0x405d02
  405d6b:	out    0xa7,eax
  405d6d:	jecxz  0x405dcf
  405d6f:	dec    ebx
  405d70:	das    
  405d71:	std    
  405d72:	fnstsw WORD PTR [edx+ecx*1-0x3d03e9e1]
  405d79:	dec    edi
  405d7a:	sbb    BYTE PTR [esi+0x45eb8a29],ch
  405d80:	sub    BYTE PTR ds:0xc03f73dd,bl
  405d86:	push   edi
  405d87:	sahf   
  405d88:	and    DWORD PTR [esi+0x11efa2e7],edi
  405d8e:	fldenv [esi]
  405d90:	pop    ecx
  405d91:	add    eax,0x3f1132c6
  405d96:	inc    edx
  405d97:	cmp    al,0x1d
  405d99:	and    DWORD PTR [edx-0x47],eax
  405d9c:	sbb    eax,0x3b521617
  405da1:	and    ebx,esp
  405da3:	dec    eax
  405da4:	(bad)  
  405da5:	pop    ds
  405da6:	call   0x2637:0x51f610dc
  405dad:	push   0xc68e134b
  405db2:	add    ch,BYTE PTR [esi]
  405db4:	loopne 0x405dc8
  405db6:	push   esi
  405db7:	mov    eax,0xc5c59bc4
  405dbc:	pop    DWORD PTR [ecx]
  405dbe:	push   ebp
  405dbf:	push   eax
  405dc0:	(bad)
  405dc3:	push   ebp
  405dc4:	ins    DWORD PTR es:[edi],dx
  405dc5:	ja     0x405e43
  405dc7:	test   al,0xa3
  405dc9:	gs in  eax,dx
  405dcb:	pushf  
  405dcc:	test   BYTE PTR [esi],bh
  405dce:	in     eax,0xd1
  405dd0:	adc    DWORD PTR [ebp+0x53e754f2],eax
  405dd6:	int3   
  405dd7:	jp     0x405e34
  405dd9:	push   es
  405dda:	loope  0x405d7c
  405ddc:	adc    esi,DWORD PTR [esi]
  405dde:	sbb    al,0x4a
  405de0:	ret    0xf891
  405de3:	jp     0x405d89
  405de5:	out    0x8f,al
  405de7:	pop    edx
  405de8:	xor    DWORD PTR [eax+esi*4+0x635b8056],ebx
  405def:	sub    ebp,DWORD PTR [ecx+0xb]
  405df2:	adc    ch,BYTE PTR [edx]
  405df4:	push   eax
  405df5:	in     al,0xec
  405df7:	aaa    
  405df8:	sub    eax,0xd12685f3
  405dfd:	pop    ds
  405dfe:	int3   
  405dff:	mov    ebx,0xcf9d6887
  405e04:	xlat   BYTE PTR ds:[ebx]
  405e05:	imul   ecx,DWORD PTR [esi],0x381f61f6
  405e0b:	lods   eax,DWORD PTR ds:[esi]
  405e0c:	add    esp,DWORD PTR [edi-0x6e33153f]
  405e12:	and    esp,0x6eef905c
  405e18:	sahf   
  405e19:	aaa    
  405e1a:	push   edi
  405e1b:	inc    ebx
  405e1c:	or     al,0x5d
  405e1e:	push   ds
  405e1f:	stc    
  405e20:	dec    esp
  405e21:	(bad)  
  405e23:	push   0xa39fb284
  405e28:	pop    esp
  405e29:	imul   esi,DWORD PTR ds:0xb5e791fe,0x55534847
  405e33:	pop    es
  405e34:	xchg   BYTE PTR [edx+0x6e],bh
  405e37:	jnp    0x405e79
  405e39:	retf   
  405e3a:	and    BYTE PTR [ebp-0x10],0x0
  405e3e:	aam    0xb1
  405e40:	pusha  
  405e41:	enter  0xbbf5,0x6a
  405e45:	adc    BYTE PTR [ebx],0x76
  405e48:	lea    ebp,[esp+edx*4-0x3fcf0f31]
  405e4f:	nop
  405e50:	jne    0x405e25
  405e52:	ja     0x405e49
  405e54:	(bad)  
  405e55:	and    ebp,DWORD PTR [ecx+0x719e1a3e]
  405e5b:	xchg   esi,eax
  405e5c:	dec    eax
  405e5d:	jnp    0x405e0b
  405e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e60:	pop    esi
  405e61:	push   ds
  405e62:	test   DWORD PTR [ecx-0x55f0f006],0xb706b1c8
  405e6c:	pop    ds
  405e6d:	cmp    DWORD PTR [esp+edx*1+0x25c27950],edi
  405e74:	lds    ebp,FWORD PTR [edi-0x717d69e6]
  405e7a:	(bad)  
  405e7b:	jne    0x405eca
  405e7d:	loopne 0x405e09
  405e7f:	outs   dx,BYTE PTR ds:[esi]
  405e80:	push   ebx
  405e81:	mov    eax,ds:0xf5def3f2
  405e87:	scas   eax,DWORD PTR es:[edi]
  405e88:	(bad)  
  405e89:	dec    edi
  405e8a:	mov    edi,0xbbe16980
  405e8f:	rcr    BYTE PTR [edi+edx*4-0x69967d3b],0x73
  405e97:	cli    
  405e98:	(bad)  
  405e99:	enter  0x75a5,0xe
  405e9d:	jle    0x405e52
  405e9f:	adc    eax,0xfa0943d8
  405ea4:	in     eax,dx
  405ea5:	xor    eax,0xa2ff29ff
  405eaa:	ror    edx,0x39
  405ead:	mov    bh,0x36
  405eaf:	cmp    al,0xb1
  405eb1:	outs   dx,DWORD PTR ds:[esi]
  405eb2:	mov    al,ds:0x89221275
  405eb7:	and    esi,DWORD PTR [ebx+0xc]
  405eba:	inc    ebp
  405ebb:	adc    DWORD PTR [ecx*1-0x50e727ab],edx
  405ec2:	in     eax,dx
  405ec3:	nop
  405ec4:	mov    bh,0xc0
  405ec6:	cmp    bl,dh
  405ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eca:	scas   eax,DWORD PTR es:[edi]
  405ecb:	cwde   
  405ecc:	fcmovu st,st(2)
  405ece:	jbe    0x405ef4
  405ed0:	push   0x6
  405ed2:	fwait
  405ed3:	mov    ds:0xe8ac525c,al
  405ed8:	jmp    DWORD PTR [edi]
  405eda:	mov    BYTE PTR [edi+ebx*4-0x266bcb9e],bh
  405ee1:	enter  0x4e85,0x75
  405ee5:	add    esp,DWORD PTR [eax+ecx*8-0x313b7836]
  405eec:	ror    dl,cl
  405eee:	popf   
  405eef:	es jne 0x405ecc
  405ef2:	div    DWORD PTR [edi-0x716ab06d]
  405ef8:	fucomp st(7)
  405efa:	inc    ebp
  405efb:	dec    eax
  405efc:	sub    BYTE PTR [esi+0x65],dl
  405eff:	push   ecx
  405f00:	jb     0x405f6d
  405f02:	adc    BYTE PTR [eax+0x4bb77a9e],al
  405f08:	popf   
  405f09:	xchg   edi,eax
  405f0a:	daa    
  405f0b:	paddb  mm2,mm2
  405f0e:	icebp  
  405f0f:	int    0xfd
  405f11:	(bad)  
  405f12:	fadd   QWORD PTR [edx]
  405f14:	and    dh,BYTE PTR [esi-0xc]
  405f17:	nop
  405f18:	mov    edx,DWORD PTR [edi-0x4d53583c]
  405f1e:	fimul  WORD PTR [ebp+0x2a]
  405f21:	inc    esi
  405f22:	add    DWORD PTR [esi+edi*2+0x19],eax
  405f26:	outs   dx,DWORD PTR ds:[esi]
  405f27:	cs sub eax,0x15240047
  405f2d:	xchg   ebx,eax
  405f2e:	or     DWORD PTR [edi+0x16e2dc6b],0x79b94d3f
  405f38:	sub    BYTE PTR [edi+eax*4-0x8c4af3c],ch
  405f3f:	rcl    BYTE PTR ds:0xd10bfc31,cl
  405f45:	rcl    BYTE PTR [edx+0x2c],cl
  405f48:	mov    ds:0x22bfd82d,eax
  405f4d:	jmp    0xcb98c28f
  405f52:	dec    ebx
  405f53:	xchg   ebp,eax
  405f54:	dec    esi
  405f55:	imul   ebx,DWORD PTR [esi+0x2f],0xffffffaa
  405f59:	dec    edx
  405f5a:	frstor [ecx+0x219c9859]
  405f60:	cdq    
  405f61:	mov    al,ds:0x66b08b83
  405f66:	xchg   edx,eax
  405f67:	xchg   esi,eax
  405f68:	pop    ecx
  405f69:	pop    ebx
  405f6a:	push   0x211b5bd4
  405f6f:	dec    ebp
  405f70:	out    0x67,eax
  405f72:	ret    
  405f73:	scas   al,BYTE PTR es:[edi]
  405f74:	adc    cl,BYTE PTR ds:0xfe5ba2f4
  405f7a:	leave  
  405f7b:	test   DWORD PTR [ebx+0x28],edx
  405f7e:	and    bh,BYTE PTR [ebp-0x92d2dc7]
  405f84:	popf   
  405f85:	scas   al,BYTE PTR es:[edi]
  405f86:	push   ebx
  405f87:	cmp    dl,bh
  405f89:	push   cs
  405f8a:	push   ds
  405f8b:	sub    eax,ebp
  405f8d:	(bad)  
  405f8e:	fild   QWORD PTR [ecx-0x4]
  405f91:	push   esi
  405f92:	ret    0xc78e
  405f95:	loope  0x405f7f
  405f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f98:	cdq    
  405f99:	jecxz  0x405fac
  405f9b:	stc    
  405f9c:	sbb    BYTE PTR [edx+eiz*1],0x1d
  405fa0:	xchg   edx,eax
  405fa1:	xor    eax,0xf4b6ea83
  405fa6:	jno    0x405f6a
  405fa8:	cwde   
  405fa9:	mov    ah,0xad
  405fab:	mov    esp,0xd24dd33f
  405fb0:	add    edi,esi
  405fb2:	cmp    al,0x6d
  405fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb5:	pop    eax
  405fb6:	pusha  
  405fb7:	fwait
  405fb8:	pop    esi
  405fb9:	or     ah,BYTE PTR [esi+0x5ce72a3c]
  405fbf:	jbe    0x406032
  405fc1:	stc    
  405fc2:	ret    0x26d7
  405fc5:	les    ebx,FWORD PTR [esi+ebp*1]
  405fc8:	(bad)  
  405fc9:	in     eax,dx
  405fca:	cmp    eax,0x3c5a9c04
  405fcf:	mov    BYTE PTR [edi+0x23],0x9f
  405fd3:	pushf  
  405fd4:	test   DWORD PTR [ecx],0x8121dbc3
  405fda:	bound  eax,QWORD PTR [eax]
  405fdc:	gs mov eax,0xa8dd6062
  405fe2:	xchg   ebp,eax
  405fe3:	mov    esp,DWORD PTR ds:0xb4cf4b26
  405fe9:	mov    edx,0xc001f0fe
  405fee:	cmp    eax,DWORD PTR [ecx]
  405ff0:	mov    dh,al
  405ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ff3:	dec    edi
  405ff4:	inc    ecx
  405ff5:	lds    eax,FWORD PTR [edx+0x1fe15438]
  405ffb:	shl    DWORD PTR [eax],0xfd
  405ffe:	add    cl,BYTE PTR [ebx-0x44]
  406001:	sub    DWORD PTR [ebp+0x67def2cb],0xce3403cd
  40600b:	inc    edi
  40600c:	fs retf 0x29d
  406010:	in     al,dx
  406011:	daa    
  406012:	stc    
  406013:	adc    al,0xf8
  406015:	cli    
  406016:	retf   
  406017:	out    0x3d,eax
  406019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40601a:	dec    esp
  40601b:	xchg   esi,eax
  40601c:	pop    esi
  40601d:	out    0x12,eax
  40601f:	lahf   
  406020:	cmp    DWORD PTR [esi-0x2e3eb2a],esi
  406026:	repz mov dh,0x8e
  406029:	outs   dx,BYTE PTR ds:[esi]
  40602a:	and    al,0x1d
  40602c:	mov    bl,0xcf
  40602e:	clc    
  40602f:	dec    ch
  406031:	xchg   esp,eax
  406032:	cmp    DWORD PTR [ebx-0xa],0xae43de86
  406039:	jmp    0x406022
  40603b:	mov    ebx,0xe597e625
  406040:	adc    al,0xf1
  406042:	cmp    BYTE PTR [esi],0xa9
  406045:	aam    0xb1
  406047:	fild   WORD PTR [ecx+0x57]
  40604a:	fistp  DWORD PTR [ebp+0x1a]
  40604d:	xchg   ecx,eax
  40604e:	pushf  
  40604f:	push   0xc4d6fa62
  406054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406055:	xor    ah,0xe2
  406058:	cwde   
  406059:	push   0xea7e4529
  40605e:	jno    0x40602f
  406060:	dec    DWORD PTR [edx]
  406062:	jmp    FWORD PTR [ebx]
  406064:	retf   0x8ca3
  406067:	mov    esp,0x6a3b294f
  40606c:	stc    
  40606d:	test   BYTE PTR [edx+0x36],ah
  406070:	sbb    eax,0xff5ac85f
  406075:	sti    
  406076:	xor    eax,eax
  406078:	or     cl,BYTE PTR [ebx]
  40607a:	shl    DWORD PTR [ebx+0x65bfbc24],0x58
  406081:	inc    ecx
  406082:	or     edi,DWORD PTR [ecx+edi*2-0x15]
  406086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406087:	ret    
  406088:	add    ebp,DWORD PTR [ecx+ebp*1+0xf67b6e2]
  40608f:	push   esi
  406090:	or     eax,0xceca2d1c
  406095:	popf   
  406096:	inc    edx
  406097:	(bad)  
  406098:	fistp  QWORD PTR [ebx+0xa]
  40609b:	pop    ebp
  40609c:	xchg   DWORD PTR [edx+ebp*2+0x43f724d4],ebx
  4060a3:	pushf  
  4060a4:	cmp    edx,DWORD PTR [eax]
  4060a6:	dec    ecx
  4060a7:	fsub   DWORD PTR [edx-0x1c573026]
  4060ad:	pushf  
  4060ae:	jge    0x406106
  4060b0:	mov    ebx,0x973e9159
  4060b5:	gs mov ah,al
  4060b8:	sub    BYTE PTR [edx+0x4d],0x42
  4060bc:	xchg   ch,cl
  4060be:	out    0xd7,al
  4060c0:	push   es
  4060c1:	scas   eax,DWORD PTR es:[edi]
  4060c2:	(bad)  
  4060c3:	out    dx,al
  4060c4:	test   eax,ebp
  4060c6:	test   ah,bh
  4060c8:	jbe    0x406144
  4060ca:	xchg   edi,eax
  4060cb:	sub    eax,esi
  4060cd:	mov    ecx,DWORD PTR [ebx]
  4060cf:	mov    edx,0x9fba3f6d
  4060d4:	lea    ecx,[edi]
  4060d6:	scas   eax,DWORD PTR es:[edi]
  4060d7:	ret    0x558b
  4060da:	clc    
  4060db:	mov    al,BYTE PTR [eax+edx*1]
  4060de:	mov    BYTE PTR [ebp-0x1],al
  4060e1:	mov    eax,DWORD PTR [ebp-0x30]
  4060e4:	mov    edx,DWORD PTR [ebp-0xc]
  4060e7:	xor    eax,esi
  4060e9:	add    eax,edi
  4060eb:	imul   eax,edx
  4060ee:	mov    edx,DWORD PTR [ebp-0x28]
  4060f1:	xor    edx,esi
  4060f3:	add    eax,edx
  4060f5:	mov    edx,DWORD PTR [ebp-0x8]
  4060f8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  406100:	mov    edx,DWORD PTR [ebp-0x50]
  406103:	xor    edx,esi
  406105:	lea    eax,[edx+eax*1+0x3272ef]
  40610c:	movzx  edx,BYTE PTR [ebp-0x1]
  406110:	xor    edx,eax
  406112:	mov    BYTE PTR [ebp-0x1],dl
  406115:	mov    al,BYTE PTR [ebp-0x1]
  406118:	mov    edx,DWORD PTR [ebp-0x30]
  40611b:	mov    ebx,DWORD PTR [ebp-0xc]
  40611e:	xor    edx,esi
  406120:	add    edx,edi
  406122:	imul   edx,ebx
  406125:	mov    ebx,DWORD PTR [ebp-0x8]
  406128:	mov    BYTE PTR [edx+ebx*1],al
  40612b:	mov    eax,DWORD PTR [ebp-0x40]
  40612e:	mov    edx,DWORD PTR [ebp-0x28]
  406131:	xor    eax,esi
  406133:	xor    edx,esi
  406135:	add    eax,edi
  406137:	add    edx,edi
  406139:	imul   eax,edx
  40613c:	add    eax,DWORD PTR [ebp-0xc]
  40613f:	mov    DWORD PTR [ebp-0xc],eax
  406142:	mov    eax,DWORD PTR [ebp-0xc]
  406145:	mov    edx,DWORD PTR [ebp-0x18]
  406148:	cmp    edx,eax
  40614a:	jb     0x40197d
  406150:	mov    eax,DWORD PTR [ebp-0x28]
  406153:	mov    edx,DWORD PTR [ebp-0x18]
  406156:	xor    eax,esi
  406158:	add    eax,edi
  40615a:	imul   eax,edx
  40615d:	jmp    0x4084cd
  406162:	daa    
  406163:	add    edi,DWORD PTR [ebx]
  406165:	in     al,dx
  406166:	cmp    esp,DWORD PTR [edi+eax*4-0x6cabb385]
  40616d:	push   edi
  40616e:	in     al,0x37
  406170:	inc    ebp
  406171:	jb     0x40614f
  406173:	cmp    al,0x7a
  406175:	jp     0x4061a6
  406177:	pop    edi
  406178:	jp     0x4061f4
  40617a:	aam    0x8f
  40617c:	inc    esi
  40617d:	sub    WORD PTR [esi+0x31],0xa3b2
  406183:	mov    esi,0xf94e0dc0
  406188:	in     al,0xab
  40618a:	mov    ebx,0xa5f35c8a
  40618f:	popa   
  406190:	cmp    DWORD PTR [eax+esi*2],esp
  406193:	inc    edx
  406194:	outs   dx,DWORD PTR ds:[esi]
  406195:	pusha  
  406196:	pop    ebx
  406197:	adc    al,0x4e
  406199:	stc    
  40619a:	mov    edi,gs
  40619c:	in     eax,0xee
  40619e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40619f:	mov    al,0x6d
  4061a1:	cdq    
  4061a2:	jge    0x4061ba
  4061a4:	mov    esp,0xc888db20
  4061a9:	inc    eax
  4061aa:	mov    bh,0x46
  4061ac:	xchg   ebp,eax
  4061ad:	popa   
  4061ae:	lods   eax,DWORD PTR ds:[esi]
  4061af:	pop    ebp
  4061b0:	pop    es
  4061b1:	sub    esp,edi
  4061b3:	pop    ecx
  4061b4:	pop    eax
  4061b5:	mov    dh,0x13
  4061b7:	pop    esp
  4061b8:	ja     0x406190
  4061ba:	xchg   edx,eax
  4061bb:	lahf   
  4061bc:	jae    0x4061ae
  4061be:	sub    cl,al
  4061c0:	jae    0x40616d
  4061c2:	jp     0x406229
  4061c4:	xor    cl,ch
  4061c6:	or     esi,DWORD PTR [ebx-0x42]
  4061c9:	imul   esi,DWORD PTR [ebp+0x37],0xa026c7a3
  4061d0:	xchg   BYTE PTR [edi+0x75e8319c],al
  4061d6:	mov    esp,0x245d30fb
  4061db:	aas    
  4061dc:	mov    ebp,0x54f80fa4
  4061e1:	jns    0x40619d
  4061e3:	and    DWORD PTR ds:0x5d155211,ecx
  4061e9:	seto   dh
  4061ec:	ins    BYTE PTR es:[edi],dx
  4061ed:	and    eax,0x6480d84
  4061f2:	icebp  
  4061f3:	mov    dh,0x1
  4061f5:	push   ecx
  4061f6:	sub    esp,edi
  4061f8:	xlat   BYTE PTR ds:[ebx]
  4061f9:	xchg   BYTE PTR [esi-0x680478b4],al
  4061ff:	and    BYTE PTR [esi],ah
  406201:	in     al,dx
  406202:	(bad)  
  406204:	mov    bl,0x8b
  406206:	and    al,0xd4
  406208:	imul   ecx,DWORD PTR [eax-0x2ec4bbe3],0x64946643
  406212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406213:	aas    
  406214:	(bad)  
  406215:	hlt    
  406216:	dec    edx
  406217:	int    0x19
  406219:	mov    dh,0x43
  40621b:	xchg   ebx,eax
  40621c:	pop    ebx
  40621d:	adc    BYTE PTR [esi-0xeeb9296],0x2a
  406224:	jmp    0x40629c
  406226:	mov    al,ds:0x56e34093
  40622b:	(bad)  [ecx-0x6]
  40622e:	into   
  40622f:	ss retf 
  406231:	dec    esi
  406232:	test   edx,ebp
  406234:	rcl    DWORD PTR [edx-0x1fbff51],cl
  40623a:	and    eax,0xe2d70ef8
  40623f:	pop    ebp
  406240:	sub    BYTE PTR [ecx],bl
  406242:	push   ds
  406243:	xor    al,0xfd
  406245:	std    
  406246:	inc    esi
  406247:	std    
  406248:	mov    DWORD PTR [ebp+0x46f8e91f],esp
  40624e:	jg     0x4062a1
  406250:	mov    edi,0x499e5536
  406255:	pusha  
  406256:	pop    ecx
  406257:	jp     0x4061fb
  406259:	sub    ebp,esi
  40625b:	xchg   ebp,eax
  40625c:	or     al,BYTE PTR [esp+edx*2]
  40625f:	mov    cl,0xd
  406261:	or     eax,0x34612639
  406266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406267:	xor    edx,DWORD PTR [edi+ebp*4]
  40626a:	xchg   edi,eax
  40626b:	loope  0x406202
  40626d:	ins    DWORD PTR es:[edi],dx
  40626e:	test   DWORD PTR [esi+0x10],ecx
  406271:	mov    bh,0x64
  406273:	sbb    edx,DWORD PTR ds:0x69f1e435
  406279:	jge    0x40628b
  40627b:	rcl    DWORD PTR [edx],1
  40627d:	mov    ebp,0xe5dc03d6
  406282:	ror    DWORD PTR [ebp+0x5bb93273],0xf1
  406289:	xor    al,0xb8
  40628b:	scas   al,BYTE PTR es:[edi]
  40628c:	cmp    BYTE PTR [edx+0x64],ch
  40628f:	xor    dl,ah
  406291:	push   ebx
  406292:	(bad)  
  406293:	aas    
  406294:	xchg   BYTE PTR [ebx],dh
  406296:	jle    0x406254
  406298:	jbe    0x40622d
  40629a:	into   
  40629b:	jecxz  0x40630d
  40629d:	cmp    al,0xb9
  40629f:	xchg   ebp,eax
  4062a0:	push   ecx
  4062a1:	jb     0x4062d1
  4062a3:	test   eax,0x9c010e42
  4062a8:	popa   
  4062a9:	jmp    0xf98a67e5
  4062ae:	push   ebx
  4062af:	in     al,dx
  4062b0:	mov    dh,0x1d
  4062b2:	shr    DWORD PTR [ebp-0x6b],0x98
  4062b6:	adc    DWORD PTR [edi],edi
  4062b8:	cmp    DWORD PTR [ecx],esi
  4062ba:	inc    edx
  4062bb:	sub    edi,0xffffffca
  4062be:	inc    ebx
  4062bf:	stos   BYTE PTR es:[edi],al
  4062c0:	loop   0x406258
  4062c2:	jnp    0x4062ac
  4062c4:	pop    edx
  4062c5:	mov    al,ds:0xa638ddb7
  4062ca:	fsub   st,st(6)
  4062cc:	jmp    0x406259
  4062ce:	inc    edi
  4062cf:	jno    0x4062a1
  4062d1:	ins    DWORD PTR es:[edi],dx
  4062d2:	pop    ss
  4062d3:	test   eax,0x1cc65bbf
  4062d8:	push   ss
  4062d9:	outs   dx,DWORD PTR ds:[esi]
  4062da:	cmp    DWORD PTR [esi],edi
  4062dc:	leave  
  4062dd:	jl     0x4062b1
  4062df:	pop    ebx
  4062e0:	clc    
  4062e1:	pop    es
  4062e2:	nop
  4062e3:	iret   
  4062e4:	mov    BYTE PTR [esp+esi*8-0x46b1cdfc],cl
  4062eb:	test   al,0x17
  4062ed:	scas   eax,DWORD PTR es:[edi]
  4062ee:	pop    ebx
  4062ef:	or     DWORD PTR [ebx+ebx*2],ecx
  4062f2:	or     eax,DWORD PTR [ebp-0x6ee9da6e]
  4062f8:	sub    esi,DWORD PTR [ebx-0x1cde4e65]
  4062fe:	inc    ecx
  4062ff:	rcl    esi,0xe2
  406302:	pop    ecx
  406303:	(bad)  
  406304:	imul   edx,esi,0xefcd3243
  40630a:	mov    dh,0xbc
  40630c:	ds xchg esi,eax
  40630e:	adc    BYTE PTR [ebx],dl
  406310:	mov    eax,ds:0x69afcacc
  406315:	dec    ebp
  406316:	stc    
  406317:	sub    edi,DWORD PTR [esi+0x4d7d54c0]
  40631d:	pusha  
  40631e:	lds    ecx,FWORD PTR [edx]
  406320:	add    bl,BYTE PTR [edx]
  406322:	out    0x9e,eax
  406324:	rcl    BYTE PTR [edx],0xc5
  406327:	sahf   
  406328:	lock xor eax,ecx
  40632b:	and    ch,BYTE PTR [esi+0x29]
  40632e:	or     eax,0x604a1692
  406333:	xchg   DWORD PTR [edi-0x3ed0aa7a],edx
  406339:	enter  0x163f,0xe7
  40633d:	daa    
  40633e:	sub    dh,ah
  406340:	outs   dx,BYTE PTR ds:[esi]
  406341:	sub    al,0xcb
  406343:	or     al,0x1e
  406345:	xchg   BYTE PTR [ecx+0x66],al
  406348:	add    DWORD PTR [edi-0x6e],esi
  40634b:	ret    
  40634c:	ins    BYTE PTR es:[edi],dx
  40634d:	adc    edi,esp
  40634f:	ret    0xfa56
  406352:	fs adc al,0x45
  406355:	test   al,0x93
  406357:	mov    dh,0x52
  406359:	inc    eax
  40635a:	neg    BYTE PTR [edx]
  40635c:	jbe    0x406352
  40635e:	fs adc edx,edi
  406361:	and    al,0x88
  406363:	stos   BYTE PTR es:[edi],al
  406364:	outs   dx,BYTE PTR ds:[esi]
  406365:	jmp    0x75f:0x1983c0f8
  40636c:	icebp  
  40636d:	sbb    ecx,DWORD PTR [ebp+eax*4+0x5dccc1]
  406374:	aaa    
  406375:	bound  esi,QWORD PTR [esi]
  406377:	int    0xbb
  406379:	in     al,0xca
  40637b:	or     DWORD PTR [eax],esi
  40637d:	and    eax,0xf24210f0
  406382:	hlt    
  406383:	jnp    0x40637a
  406385:	dec    ebp
  406386:	loopne 0x406338
  406388:	mov    esp,0xd0f9e873
  40638d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40638e:	mov    edx,0x72658422
  406393:	jmp    esp
  406395:	ret    
  406396:	mov    edi,0xf14a1bad
  40639b:	pop    edi
  40639c:	jne    0x40641c
  40639e:	adc    DWORD PTR [edx+0x12],edi
  4063a1:	je     0x4063d8
  4063a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a4:	pop    edi
  4063a5:	cs in  eax,dx
  4063a7:	or     esi,DWORD PTR [ebx+0x19e63fae]
  4063ad:	scas   al,BYTE PTR es:[edi]
  4063ae:	js     0x40639a
  4063b0:	in     al,0x37
  4063b2:	sti    
  4063b3:	stc    
  4063b4:	jae    0x4063b6
  4063b6:	into   
  4063b7:	xchg   esp,ebx
  4063b9:	mov    BYTE PTR ds:0x8b718df4,al
  4063bf:	sub    edi,DWORD PTR [ebp-0x21]
  4063c2:	nop
  4063c3:	cwde   
  4063c4:	test   BYTE PTR [ecx+0x6e],cl
  4063c7:	outs   dx,DWORD PTR ds:[esi]
  4063c8:	adc    eax,DWORD PTR [ebx+edx*4-0x4ff0f2d3]
  4063cf:	iret   
  4063d0:	cmc    
  4063d1:	xor    eax,0x9663f50
  4063d6:	gs into 
  4063d8:	cld    
  4063d9:	xor    esi,DWORD PTR [ebp+0x2]
  4063dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063dd:	sar    DWORD PTR [eax],cl
  4063df:	and    dl,BYTE PTR [edi-0x22]
  4063e2:	dec    edx
  4063e3:	aam    0xfd
  4063e5:	fadd   QWORD PTR [esi+0x6b]
  4063e8:	icebp  
  4063e9:	fs jno 0x4063d1
  4063ec:	std    
  4063ed:	and    al,0xc1
  4063ef:	jp     0x40637a
  4063f1:	(bad)  
  4063f2:	mov    edi,0x17ea164
  4063f7:	jge    0x406478
  4063f9:	jle    0x406441
  4063fb:	(bad)  
  4063fc:	std    
  4063fd:	(bad)  
  4063fe:	out    dx,eax
  4063ff:	xor    cl,BYTE PTR [ebp+0x2a]
  406402:	dec    BYTE PTR ds:0xd687baba
  406408:	in     eax,dx
  406409:	je     0x4063a4
  40640b:	mov    bl,0x9d
  40640d:	push   edx
  40640e:	mov    ecx,0xf6ad9a30
  406413:	add    eax,0x779f9543
  406418:	xchg   esp,eax
  406419:	inc    esp
  40641a:	mov    WORD PTR [edi+0x2c3584c],?
  406420:	add    eax,0x47440e70
  406425:	ja     0x40644a
  406427:	aas    
  406428:	call   esi
  40642a:	shr    al,0x37
  40642d:	je     0x4063bf
  40642f:	or     ch,dh
  406431:	cmovns ebx,DWORD PTR [edi+0x6b]
  406435:	xchg   esi,eax
  406436:	retf   0x4a76
  406439:	add    DWORD PTR [eax+0x66],eax
  40643c:	ror    DWORD PTR [ecx+ebp*4+0x18],1
  406440:	pop    edi
  406441:	xchg   esp,eax
  406442:	xor    eax,DWORD PTR [ebp+0xe]
  406445:	and    al,0xc6
  406447:	cli    
  406448:	push   eax
  406449:	loop   0x4063e5
  40644b:	leave  
  40644c:	pop    esi
  40644d:	mov    ds:0x3c3e870a,al
  406453:	cmp    DWORD PTR [ebp-0x74],ebp
  406456:	out    dx,al
  406457:	in     al,dx
  406458:	ror    BYTE PTR [ecx-0x8],0x5c
  40645c:	sahf   
  40645d:	dec    edi
  40645e:	cmp    cl,BYTE PTR [ebx+0x1a]
  406461:	das    
  406462:	push   ds
  406463:	int3   
  406464:	sub    BYTE PTR ds:0x8d6d1b23,cl
  40646a:	je     0x40644f
  40646c:	daa    
  40646d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40646e:	cdq    
  40646f:	xchg   ecx,eax
  406470:	push   eax
  406471:	push   ds
  406472:	or     BYTE PTR [eax+0x31],cl
  406475:	loopne 0x4064d3
  406477:	cmc    
  406478:	and    eax,0x4925bc3f
  40647d:	jns    0x4064d6
  40647f:	in     al,dx
  406480:	pop    edi
  406481:	test   bh,dl
  406483:	sub    eax,0x1b345235
  406488:	loope  0x40645e
  40648a:	mov    dh,0x14
  40648c:	lods   al,BYTE PTR ds:[esi]
  40648d:	add    BYTE PTR [esi-0x6d7d4f38],bl
  406493:	or     DWORD PTR [edi],esi
  406495:	add    eax,0xd8baec9a
  40649a:	xor    al,0x10
  40649c:	invd   
  40649e:	inc    eax
  40649f:	in     eax,dx
  4064a0:	ret    
  4064a1:	fnstcw WORD PTR [eax]
  4064a3:	push   0xd650c502
  4064a8:	xchg   edx,eax
  4064a9:	adc    esi,DWORD PTR [edi+0x36c32a95]
  4064af:	loopne 0x406485
  4064b1:	ds nop
  4064b3:	adc    ch,al
  4064b5:	dec    edi
  4064b6:	sbb    bl,0x56
  4064b9:	cmc    
  4064ba:	or     al,BYTE PTR [edi+edi*4-0x58082754]
  4064c1:	dec    ecx
  4064c2:	jle    0x4064c9
  4064c4:	cs into 
  4064c6:	or     al,al
  4064c8:	or     BYTE PTR [edx],cl
  4064ca:	hlt    
  4064cb:	das    
  4064cc:	jge    0x406459
  4064ce:	push   esp
  4064cf:	adc    BYTE PTR [ebp-0x2a],ah
  4064d2:	jns    0x4064ec
  4064d4:	mov    eax,ds:0x44bb166b
  4064d9:	xlat   BYTE PTR ds:[ebx]
  4064da:	lahf   
  4064db:	mov    DWORD PTR [eax-0x2d],esi
  4064de:	inc    eax
  4064df:	dec    ebp
  4064e0:	fisubr WORD PTR [esi-0x32]
  4064e3:	push   es
  4064e4:	inc    esi
  4064e5:	pop    es
  4064e6:	fstp   TBYTE PTR [eax]
  4064e8:	jl     0x406478
  4064ea:	adc    eax,0x8079c662
  4064ef:	sar    cl,0x65
  4064f2:	shl    DWORD PTR [ecx],0x80
  4064f5:	ins    DWORD PTR es:[edi],dx
  4064f6:	lahf   
  4064f7:	icebp  
  4064f8:	inc    ebp
  4064f9:	sub    al,0x8a
  4064fb:	sbb    al,0x1b
  4064fd:	inc    ebp
  4064fe:	xchg   edi,eax
  4064ff:	leave  
  406500:	mov    ah,ah
  406502:	cmp    DWORD PTR [ebx-0x40],ebp
  406505:	enter  0x3854,0xc4
  406509:	cmp    dh,BYTE PTR [ebp+0x19]
  40650c:	test   al,0x0
  40650e:	neg    edi
  406510:	cli    
  406511:	rep outs dx,DWORD PTR ds:[esi]
  406513:	test   DWORD PTR [ebx-0x5716f8bf],eax
  406519:	out    0x8a,ax
  40651c:	mov    cl,0x57
  40651e:	dec    ecx
  40651f:	jp     0x4064fd
  406521:	in     eax,dx
  406522:	jo     0x406516
  406524:	adc    cl,BYTE PTR [ebx-0x71]
  406527:	or     dh,al
  406529:	dec    edx
  40652a:	push   DWORD PTR cs:[edx]
  40652d:	sub    eax,0x3fbecafe
  406532:	sub    DWORD PTR ds:0xd8ccae2,esp
  406538:	mov    ecx,0x49826d58
  40653d:	cmp    eax,0x962edfac
  406542:	mov    edi,0x311c0ade
  406547:	into   
  406548:	dec    ecx
  406549:	(bad)  
  40654a:	cs cdq 
  40654c:	in     eax,0xb7
  40654e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40654f:	rcr    BYTE PTR [edi-0x58a3f57],1
  406555:	jge    0x4064e6
  406557:	pop    edi
  406558:	xor    esp,DWORD PTR [eax+esi*2]
  40655b:	ret    0xfba6
  40655e:	push   ebp
  40655f:	fdivr  QWORD PTR [ebx]
  406561:	jle    0x4064ed
  406563:	mov    eax,0xdb3a6830
  406568:	pop    eax
  406569:	mov    eax,0x71022b64
  40656e:	and    dh,BYTE PTR gs:[ecx+0x10]
  406572:	pop    ebx
  406573:	xor    DWORD PTR [ecx-0x7ed5d5ae],0xcbe85d2
  40657d:	add    DWORD PTR [edx],edx
  40657f:	in     eax,0x11
  406581:	(bad)  
  406582:	cmp    DWORD PTR [ebx-0x10],eax
  406585:	cmp    edi,DWORD PTR [edi-0x28]
  406588:	lods   al,BYTE PTR ds:[esi]
  406589:	adc    DWORD PTR [esi],esi
  40658b:	adc    DWORD PTR [ecx+0x54],esp
  40658e:	mov    ebx,0x571764a
  406593:	sbb    esi,DWORD PTR [edx-0x2c41ce8a]
  406599:	or     dh,BYTE PTR [ebp-0x1e]
  40659c:	bound  eax,QWORD PTR [ebx]
  40659e:	adc    al,0x94
  4065a0:	sbb    DWORD PTR ds:0xe87be1df,eax
  4065a6:	and    al,0xb8
  4065a8:	cmp    al,0x6a
  4065aa:	pop    ds
  4065ab:	pop    edi
  4065ac:	ret    
  4065ad:	cli    
  4065ae:	push   ecx
  4065af:	and    al,0x82
  4065b1:	xchg   edi,eax
  4065b2:	pop    esi
  4065b3:	inc    eax
  4065b4:	inc    ecx
  4065b5:	stos   DWORD PTR es:[edi],eax
  4065b6:	sub    al,0xf4
  4065b8:	inc    DWORD PTR [ebp-0xaa8b036]
  4065be:	mov    esp,0xce80192f
  4065c3:	jo     0x4065f1
  4065c5:	add    esi,DWORD PTR [eax-0x50]
  4065c8:	and    bh,dh
  4065ca:	xchg   esi,eax
  4065cb:	lea    ecx,[ebx-0x78]
  4065ce:	mov    al,ds:0xd65f0372
  4065d3:	sbb    ch,dl
  4065d5:	jnp    0x406574
  4065d7:	push   eax
  4065d8:	(bad)  
  4065d9:	jbe    0x40658b
  4065db:	xchg   ebp,eax
  4065dc:	in     eax,dx
  4065dd:	jle    0x4065b4
  4065df:	push   ss
  4065e0:	das    
  4065e1:	mov    edi,0x54d28f41
  4065e6:	xor    ch,BYTE PTR [eax+0x2585dd02]
  4065ec:	pop    ebp
  4065ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ef:	(bad)
  4065f3:	ins    BYTE PTR es:[edi],dx
  4065f4:	inc    ebx
  4065f5:	push   edi
  4065f6:	xor    BYTE PTR [edi-0x64f66b16],cl
  4065fc:	jp     0x4065b1
  4065fe:	xchg   edi,eax
  4065ff:	repz mov eax,0xa4fe2d56
  406605:	(bad)
  406608:	dec    esi
  406609:	dec    edi
  40660a:	pop    esi
  40660b:	rol    ah,1
  40660d:	pop    es
  40660e:	stos   BYTE PTR es:[edi],al
  40660f:	mov    cl,0xa6
  406611:	mov    dl,0xeb
  406613:	push   edi
  406614:	cmc    
  406615:	lock or edx,DWORD PTR [ecx]
  406618:	imul   edx,DWORD PTR [edx+0x4a],0x5e9e4b91
  40661f:	add    edi,esi
  406621:	jns    0x4065ce
  406623:	gs clc 
  406625:	xchg   edi,eax
  406626:	inc    edx
  406627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406628:	sbb    eax,0xc9877edd
  40662d:	out    0xa2,al
  40662f:	add    DWORD PTR [ecx+0xd],ebx
  406632:	jbe    0x406685
  406634:	mov    edi,0xb426860
  406639:	repnz push 0x60e4e68e
  40663f:	jle    0x40669a
  406641:	test   eax,0x47baa709
  406646:	mov    ?,WORD PTR [edi-0x63]
  406649:	jp     0x406661
  40664b:	popf   
  40664c:	xchg   edi,eax
  40664d:	pop    WORD PTR es:[esi]
  406651:	jmp    0x4066b4
  406653:	rol    BYTE PTR [edi+0x4addc7dc],1
  406659:	xor    al,BYTE PTR [esi+edi*1+0x18375027]
  406660:	or     cl,BYTE PTR [edi]
  406662:	(bad)  
  406663:	pxor   mm6,QWORD PTR [edx-0x55]
  406667:	mov    es,edi
  406669:	adc    DWORD PTR [esi-0x78c7938],esp
  40666f:	add    edi,DWORD PTR [ebx+0x3eca479c]
  406675:	or     DWORD PTR [eax+0x706d0278],edi
  40667b:	xchg   DWORD PTR [ebx],esi
  40667d:	jmp    0x74d0:0xb576e825
  406684:	mov    ds:0x68210e30,eax
  406689:	icebp  
  40668a:	int    0x31
  40668c:	jmp    0x40669f
  40668e:	data16 jns 0x406627
  406691:	and    BYTE PTR [eax+eax*1+0x305cb533],al
  406698:	ret    0xf42a
  40669b:	shl    DWORD PTR [esi+0x62],cl
  40669e:	dec    esi
  40669f:	and    BYTE PTR [ebx],bl
  4066a1:	add    al,ch
  4066a3:	(bad)  
  4066a4:	sub    DWORD PTR [ebp+0x2c],eax
  4066a7:	pop    eax
  4066a8:	and    al,0x6a
  4066aa:	pop    edx
  4066ab:	adc    ebx,edi
  4066ad:	mov    edx,0x125e89bb
  4066b2:	xor    ecx,esi
  4066b4:	xchg   BYTE PTR [edx+0x737eea3b],dl
  4066ba:	(bad)  
  4066bb:	pop    edx
  4066bc:	cs into 
  4066be:	dec    edi
  4066bf:	mov    edi,0x9b3c09c3
  4066c5:	xchg   edi,eax
  4066c6:	push   eax
  4066c7:	jecxz  0x4066fd
  4066c9:	shl    BYTE PTR [eax+0x2d11f42a],1
  4066cf:	idiv   ebx
  4066d1:	nop
  4066d2:	data16 js 0x4066d1
  4066d5:	(bad)  
  4066d6:	out    dx,eax
  4066d7:	fchs   
  4066d9:	pop    ss
  4066da:	and    DWORD PTR [ecx-0x14],ebx
  4066dd:	add    BYTE PTR [edi],bl
  4066df:	or     BYTE PTR ds:0xffec1ddd,ch
  4066e5:	and    eax,0x9c51fdd
  4066ea:	jl     0x4066ff
  4066ec:	(bad)  
  4066ed:	dec    ebx
  4066ee:	push   edx
  4066ef:	xor    DWORD PTR [esi+0x45],ebp
  4066f2:	jge    0x4066ce
  4066f4:	dec    esp
  4066f5:	xchg   ebp,eax
  4066f6:	shr    DWORD PTR [ecx-0x3d9a016c],cl
  4066fc:	into   
  4066fd:	fs adc eax,0xd3aebc5
  406703:	dec    eax
  406704:	xor    esi,ecx
  406706:	add    ecx,DWORD PTR [esi-0x52]
  406709:	xchg   esp,eax
  40670a:	jecxz  0x40669c
  40670c:	rcl    BYTE PTR [eax],cl
  40670e:	jmp    0x40675c
  406710:	faddp  st(0),st
  406712:	rcr    DWORD PTR [bp+si-0x6b],cl
  406716:	pop    DWORD PTR [edx+0x385db74d]
  40671c:	mov    edx,0xb7e2fcc3
  406721:	inc    ebp
  406722:	sub    al,al
  406724:	jmp    0x40671d
  406726:	cli    
  406727:	loopne 0x4066c4
  406729:	out    0x8b,eax
  40672b:	mov    esi,0xecc84fbb
  406730:	nop
  406731:	popf   
  406732:	inc    esi
  406733:	int    0xaf
  406735:	gs in  al,dx
  406737:	enter  0xcc08,0x7e
  40673b:	(bad)  
  40673c:	mov    ebx,0xefd055c4
  406741:	xor    dh,BYTE PTR ds:0xa15f1dde
  406747:	cli    
  406748:	scas   eax,DWORD PTR es:[edi]
  406749:	das    
  40674a:	adc    DWORD PTR [edx+0x2bd29088],0xffffffc5
  406751:	(bad)  
  406752:	xor    BYTE PTR [ebx+0x4611f401],dl
  406758:	dec    eax
  406759:	xchg   bh,cl
  40675b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40675c:	mov    esi,0x41f56794
  406761:	cli    
  406762:	imul   esi,DWORD PTR [ecx],0x61275253
  406768:	shr    BYTE PTR [eax+0x7f],0x92
  40676c:	mov    eax,ds:0xac6412f2
  406771:	or     edi,ebp
  406773:	mov    eax,0x14f59932
  406778:	cs out dx,eax
  40677a:	and    BYTE PTR [edi+0x43],ah
  40677d:	repz fist WORD PTR ds:0x600e5194
  406784:	push   es
  406785:	and    DWORD PTR [ebx],edx
  406787:	inc    edx
  406788:	mov    ch,BYTE PTR [ecx]
  40678a:	(bad)  
  40678c:	in     al,0xc3
  40678e:	les    edi,FWORD PTR [esi]
  406790:	sbb    al,0x41
  406792:	paddsb mm2,QWORD PTR [edx+0x64]
  406796:	adc    DWORD PTR [eax+edi*2+0x77],esp
  40679a:	imul   edi,DWORD PTR [edi+0x65],0xffffffee
  40679e:	xor    BYTE PTR [ebp-0x4bc2e6aa],dh
  4067a4:	cmp    bl,cl
  4067a6:	retf   
  4067a7:	xchg   ecx,eax
  4067a8:	cdq    
  4067a9:	scas   al,BYTE PTR es:[edi]
  4067aa:	ret    
  4067ab:	jbe    0x406784
  4067ad:	fwait
  4067ae:	int3   
  4067af:	(bad)  
  4067b0:	icebp  
  4067b1:	sbb    esp,DWORD PTR [ebp-0x2158c29b]
  4067b7:	test   DWORD PTR [ebx+eax*4-0x3300fb7e],ecx
  4067be:	jp     0x4067d6
  4067c0:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067c2:	mov    edi,0x60133469
  4067c7:	jns    0x4067b3
  4067c9:	sub    DWORD PTR [eax+0x7edb48f8],ebp
  4067cf:	dec    DWORD PTR [ebx-0x36588501]
  4067d5:	xchg   BYTE PTR [eax+0x61e5a3a5],ah
  4067db:	jmp    0x75890b8b
  4067e0:	ss mov eax,0x7269eaa1
  4067e6:	and    al,0xbf
  4067e8:	outs   dx,BYTE PTR ds:[esi]
  4067e9:	and    BYTE PTR [ebx-0x21dee33a],dl
  4067ef:	sbb    BYTE PTR [edi-0x8],ch
  4067f2:	xchg   ecx,eax
  4067f3:	dec    esp
  4067f4:	xor    ah,BYTE PTR [ebx]
  4067f6:	fwait
  4067f7:	test   al,0x99
  4067f9:	test   BYTE PTR [edx+0x52],al
  4067fc:	in     eax,0xc8
  4067fe:	arpl   WORD PTR [edi-0x2ee32c91],si
  406804:	mov    al,ds:0xa2c3ace3
  406809:	adc    ch,ch
  40680b:	ds adc edi,eax
  40680e:	call   0x9545:0x1a3099a9
  406815:	ss push ebp
  406817:	out    dx,eax
  406818:	jle    0x406839
  40681a:	clc    
  40681b:	cdq    
  40681c:	pop    esp
  40681d:	mov    WORD PTR [ebx-0x24],ds
  406820:	xor    al,0x23
  406822:	xor    BYTE PTR [esi-0x5657854b],0x38
  406829:	mov    ebx,0xeaa8da7c
  40682e:	and    eax,0xb23c7071
  406833:	lds    eax,FWORD PTR [edx+0x1083b6b2]
  406839:	ror    BYTE PTR [esi-0x5ef0535],cl
  40683f:	ins    BYTE PTR es:[edi],dx
  406840:	cld    
  406841:	cmp    esp,ebp
  406843:	shl    edx,1
  406845:	ficomp WORD PTR [esi-0xe]
  406848:	lods   eax,DWORD PTR ds:[esi]
  406849:	cli    
  40684a:	pop    ss
  40684b:	adc    eax,0x34826b9a
  406850:	adc    DWORD PTR [ebp+eax*4-0x27453f82],edx
  406857:	repz sbb al,0x46
  40685a:	xlat   BYTE PTR ds:[ebx]
  40685b:	test   DWORD PTR [edx],edx
  40685d:	je     0x4068b9
  40685f:	gs aam 0xb9
  406862:	xor    DWORD PTR [eax-0x1c],edx
  406865:	mov    ch,0xf3
  406867:	mov    bl,BYTE PTR [ebx+0x7c8c566b]
  40686d:	aad    0x3b
  40686f:	test   eax,0x26c789ed
  406874:	call   0xe10a121a
  406879:	ss xchg esp,eax
  40687b:	imul   esi,DWORD PTR [eax-0x5f888b3a],0xffffffa6
  406882:	rol    DWORD PTR [ebx+0xef05789],0x89
  406889:	into   
  40688a:	xchg   esp,eax
  40688b:	mov    ah,0x51
  40688d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688e:	sub    al,0xfb
  406890:	cmc    
  406891:	cld    
  406892:	call   0xd8e2b85a
  406897:	push   0xf532c204
  40689c:	retf   
  40689d:	inc    ebp
  40689e:	retf   
  40689f:	cs pop ebp
  4068a1:	cmp    al,0x39
  4068a3:	out    0x6d,al
  4068a5:	dec    ebx
  4068a6:	outs   dx,BYTE PTR ds:[esi]
  4068a7:	xor    DWORD PTR [esi],edi
  4068a9:	stos   DWORD PTR es:[edi],eax
  4068aa:	pop    eax
  4068ab:	fisttp WORD PTR [esi]
  4068ad:	hlt    
  4068ae:	repnz or al,0x42
  4068b1:	dec    esi
  4068b2:	in     eax,0xe5
  4068b4:	fs pusha 
  4068b6:	dec    ecx
  4068b7:	in     al,dx
  4068b8:	nop    esi
  4068bb:	les    ebx,FWORD PTR [ebx]
  4068bd:	aaa    
  4068be:	push   ecx
  4068bf:	mov    eax,ds:0x8bc9b78e
  4068c4:	popa   
  4068c5:	addr16 enter 0x8ea8,0xc1
  4068ca:	xchg   ecx,eax
  4068cb:	out    dx,al
  4068cc:	inc    eax
  4068cd:	sahf   
  4068ce:	stos   DWORD PTR es:[edi],eax
  4068cf:	in     eax,0xef
  4068d1:	fcmovne st,st(3)
  4068d3:	cdq    
  4068d4:	ins    BYTE PTR es:[edi],dx
  4068d5:	jge    0x4068ad
  4068d7:	int    0x82
  4068d9:	in     eax,0x12
  4068db:	and    edi,ebx
  4068dd:	mov    ebp,0x62b8ce7e
  4068e2:	iret   
  4068e3:	ins    BYTE PTR es:[edi],dx
  4068e4:	jmp    FWORD PTR [edx-0x1e6d5f98]
  4068ea:	mov    dh,0xcf
  4068ec:	lahf   
  4068ed:	mov    DWORD PTR [ecx+edx*1-0x25],edi
  4068f1:	sub    al,0x72
  4068f3:	outs   dx,DWORD PTR ds:[esi]
  4068f4:	lds    esi,FWORD PTR [ebp-0x4b15d607]
  4068fa:	clc    
  4068fb:	sub    al,0x65
  4068fd:	shl    ebp,0x66
  406900:	les    esp,FWORD PTR [edx-0x22ffde86]
  406906:	cmc    
  406907:	cmp    edx,DWORD PTR [ebx-0x39]
  40690a:	or     al,0x44
  40690c:	shr    edx,1
  40690e:	ins    DWORD PTR es:[edi],dx
  40690f:	mov    ecx,0x36850605
  406914:	jnp    0x406989
  406916:	and    DWORD PTR [ebx],eax
  406918:	lods   eax,DWORD PTR ds:[esi]
  406919:	dec    edx
  40691a:	icebp  
  40691b:	mov    cl,0x9a
  40691d:	dec    eax
  40691e:	and    ecx,esp
  406920:	in     eax,0x3d
  406922:	out    dx,eax
  406923:	or     DWORD PTR [eax-0x45],esi
  406926:	mov    ds:0x1c8731b3,eax
  40692b:	sub    BYTE PTR [edi+0x29],al
  40692e:	call   0x4790:0x6346339b
  406935:	push   0x266dc5a1
  40693a:	pop    ds
  40693b:	mov    BYTE PTR [edi+esi*1+0x9],bl
  40693f:	jmp    0xefdb57d5
  406944:	adc    BYTE PTR [ecx],ah
  406946:	dec    esi
  406947:	ins    BYTE PTR es:[edi],dx
  406948:	or     eax,0xc8ff6bd3
  40694d:	push   ds
  40694e:	add    eax,0x51690eb3
  406953:	push   esp
  406954:	inc    esi
  406955:	sub    edi,esi
  406957:	mov    esp,0x249739de
  40695c:	sbb    esi,DWORD PTR [eax]
  40695e:	push   ebx
  40695f:	pop    edx
  406960:	in     eax,dx
  406961:	sahf   
  406962:	lods   al,BYTE PTR ds:[esi]
  406963:	shr    dh,1
  406965:	dec    ebp
  406966:	push   ecx
  406967:	xchg   edi,eax
  406968:	scas   al,BYTE PTR es:[edi]
  406969:	js     0x4069e0
  40696b:	pop    ds
  40696c:	xchg   DWORD PTR [ebp-0x2e],edi
  40696f:	mov    ds:0xdeb120cf,eax
  406974:	(bad)
  406977:	mov    eax,0x30ce5b38
  40697c:	out    0x74,eax
  40697e:	adc    eax,0x9f6fd879
  406983:	in     al,dx
  406984:	stos   BYTE PTR es:[edi],al
  406985:	jb     0x4069be
  406987:	pop    ebx
  406988:	lahf   
  406989:	test   eax,0xee602588
  40698e:	nop
  40698f:	scas   eax,DWORD PTR es:[edi]
  406990:	enter  0x6310,0x4
  406994:	repnz out dx,eax
  406996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406997:	daa    
  406998:	push   eax
  406999:	xor    esp,DWORD PTR [edx+esi*8-0x7666f3d1]
  4069a0:	(bad)  
  4069a1:	mov    fs,WORD PTR [edi]
  4069a3:	push   eax
  4069a4:	mov    bh,0xce
  4069a6:	es aas 
  4069a8:	aas    
  4069a9:	mov    edi,0x3db59a84
  4069ae:	std    
  4069af:	dec    ecx
  4069b0:	push   0x462835c0
  4069b5:	ds in  al,dx
  4069b7:	mov    es,WORD PTR [ecx+0x7d]
  4069ba:	xor    ebx,DWORD PTR [ecx+0x3d]
  4069bd:	xchg   ebp,eax
  4069be:	cwde   
  4069bf:	popf   
  4069c0:	mov    edx,0x61d4fff2
  4069c5:	mov    ch,0x59
  4069c7:	imul   ecx,DWORD PTR [esi+edi*8-0x24],0x88543f46
  4069cf:	sub    bh,bh
  4069d1:	xor    ecx,ebp
  4069d3:	or     dl,ch
  4069d5:	in     al,dx
  4069d6:	cli    
  4069d7:	jp     0x4069ab
  4069d9:	inc    edx
  4069da:	adc    eax,0xc133f1e6
  4069df:	push   ss
  4069e0:	imul   edx,edi,0x99f50c6c
  4069e6:	push   edi
  4069e7:	jp     0x4069ea
  4069e9:	dec    edx
  4069ea:	jnp    0x4069f8
  4069ec:	das    
  4069ed:	mov    ah,0x69
  4069ef:	sbb    eax,0xa8114ae5
  4069f4:	test   BYTE PTR ds:0xddd46986,0xa8
  4069fb:	mov    edi,0x55cab79d
  406a00:	in     al,0x56
  406a02:	(bad)  
  406a03:	fiadd  WORD PTR [ebx+eiz*1]
  406a06:	mov    dl,0x6
  406a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a09:	mov    esi,0x81aa94c8
  406a0e:	js     0x406a46
  406a10:	cmp    DWORD PTR [ebp+0x76],0x7cfae7de
  406a17:	add    BYTE PTR [esp+ebx*8+0x21],bh
  406a1b:	jbe    0x406a28
  406a1d:	xchg   ecx,eax
  406a1e:	fild   WORD PTR [edx-0x7e]
  406a21:	adc    BYTE PTR [eax-0x6095bdf3],ch
  406a27:	loop   0x406a37
  406a29:	mov    edi,0xab8fd59f
  406a2e:	sbb    cl,dh
  406a30:	lods   eax,DWORD PTR ds:[esi]
  406a31:	retf   
  406a32:	push   0x3a6ae0a9
  406a37:	mov    ebp,0x756c3a6b
  406a3c:	xchg   ebp,eax
  406a3d:	mov    ds:0x4c459f49,eax
  406a42:	aaa    
  406a43:	or     DWORD PTR gs:[esi+0x6fbc3ea8],0x8
  406a4b:	test   DWORD PTR [ebx],edx
  406a4d:	rcl    ch,1
  406a4f:	leave  
  406a50:	mov    bl,0x85
  406a52:	push   eax
  406a53:	cmp    cl,0x36
  406a56:	fwait
  406a57:	pxor   mm0,QWORD PTR [ecx]
  406a5a:	cld    
  406a5b:	add    DWORD PTR [ebp-0x46021442],edx
  406a61:	leave  
  406a62:	sbb    BYTE PTR [ecx+0x3908a6e4],al
  406a68:	inc    ecx
  406a69:	inc    BYTE PTR [esi]
  406a6b:	inc    ecx
  406a6c:	mov    ch,0x75
  406a6e:	mov    ebx,0xc41a5b8d
  406a73:	inc    ebx
  406a74:	es in  al,0xbf
  406a77:	repnz cmp BYTE PTR [edx+0x53],al
  406a7b:	pop    edi
  406a7c:	test   BYTE PTR [esi],dl
  406a7e:	and    ecx,ebp
  406a80:	jbe    0x406a9c
  406a82:	lsl    ebx,di
  406a85:	mov    bl,0xa8
  406a87:	loop   0x406a0b
  406a89:	mov    bh,0x4f
  406a8b:	add    BYTE PTR [eax],ah
  406a8d:	jg     0x406a8f
  406a8f:	jns    0x406a5d
  406a91:	jg     0x406ad2
  406a93:	imul   esi,DWORD PTR [esi+0x5a],0xfffffffa
  406a97:	scas   al,BYTE PTR es:[edi]
  406a98:	xor    DWORD PTR [ecx],esi
  406a9a:	(bad)  
  406a9b:	and    DWORD PTR [edi-0x7bede92b],ebx
  406aa1:	push   edi
  406aa2:	repnz mov ebp,DWORD PTR [ebx+eiz*4+0x3cacc151]
  406aaa:	call   FWORD PTR [ecx+0x3174ef88]
  406ab0:	daa    
  406ab1:	and    al,0xd8
  406ab3:	adc    esp,DWORD PTR [ebx]
  406ab5:	sub    al,0x5f
  406ab7:	sub    DWORD PTR [bx+si],esi
  406aba:	leave  
  406abb:	xlat   BYTE PTR ds:[ebx]
  406abc:	xchg   ebx,eax
  406abd:	repz fisub WORD PTR [edi-0x56]
  406ac1:	fwait
  406ac2:	das    
  406ac3:	(bad)  
  406ac4:	in     al,dx
  406ac5:	or     BYTE PTR [ebx+eax*1],ch
  406ac8:	xor    ecx,ebp
  406aca:	sub    al,BYTE PTR [eax+ecx*8]
  406acd:	push   edx
  406ace:	dec    ebx
  406acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ad0:	fs mov ebx,0x2fc68bd
  406ad6:	inc    esi
  406ad7:	stos   DWORD PTR es:[edi],eax
  406ad8:	bswap  esp
  406ada:	mov    ds:0xad2cd55c,eax
  406adf:	aas    
  406ae0:	pop    edi
  406ae1:	retf   0xf5ba
  406ae4:	lea    ecx,[eax-0x41a11e25]
  406aea:	and    al,0x86
  406aec:	push   0x34
  406aee:	xlat   BYTE PTR ss:[ebx]
  406af0:	fst    QWORD PTR [ebx+eiz*1]
  406af3:	mov    bh,0x46
  406af5:	and    eax,0x32a3484c
  406afa:	xor    eax,0x1f25f17a
  406aff:	or     bl,BYTE PTR [edx-0x2fd7c0f8]
  406b05:	ret    
  406b06:	sahf   
  406b07:	enter  0xaae5,0xca
  406b0b:	push   esp
  406b0c:	xor    BYTE PTR [edi-0x55],0xdd
  406b10:	push   0xffffffdd
  406b12:	inc    eax
  406b13:	xor    eax,0x45e420b3
  406b18:	repz and dl,BYTE PTR [edi+edi*4+0x70c427ba]
  406b20:	dec    BYTE PTR [ebx-0x63]
  406b23:	inc    eax
  406b24:	sbb    ch,BYTE PTR [eax-0x38]
  406b27:	sahf   
  406b28:	adc    eax,0xc9c1e96e
  406b2d:	sbb    esp,edi
  406b2f:	out    dx,eax
  406b30:	cmp    al,0x9c
  406b32:	xchg   esi,eax
  406b33:	jno    0x406b8a
  406b35:	pop    es
  406b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b37:	cld    
  406b38:	je     0x406b92
  406b3a:	fimul  WORD PTR [ebx-0x5d6a3a50]
  406b40:	mov    dh,BYTE PTR [ecx-0x4a]
  406b43:	enter  0x2925,0x26
  406b47:	stc    
  406b48:	cmp    cl,BYTE PTR [eax]
  406b4a:	lods   al,BYTE PTR ds:[esi]
  406b4b:	mov    eax,ds:0x8ee86bca
  406b50:	leave  
  406b51:	loope  0x406b0f
  406b53:	sbb    BYTE PTR [ecx],bh
  406b55:	je     0x406af2
  406b57:	jns    0x406b4f
  406b59:	lea    ebx,[edi-0x5df9e26]
  406b5f:	call   0xc00ee9ed
  406b64:	(bad)  
  406b65:	jo     0x406b2b
  406b67:	cmp    bh,BYTE PTR [ecx]
  406b69:	sbb    DWORD PTR [bx-0x7c],edi
  406b6d:	aas    
  406b6e:	or     DWORD PTR [eax-0x6dca70cd],eax
  406b74:	shl    BYTE PTR [esi-0x1d0be89b],cl
  406b7a:	hlt    
  406b7b:	and    ch,BYTE PTR [eax-0x6f]
  406b7e:	jnp    0x406bc4
  406b80:	add    DWORD PTR [ecx-0x1d7159b7],eax
  406b86:	mov    ds:0x44f16850,al
  406b8b:	cmp    eax,0xe52d7432
  406b90:	inc    esi
  406b91:	aas    
  406b92:	jg     0x406bab
  406b94:	gs mov bh,0x49
  406b97:	imul   eax,ebp,0xffffff9b
  406b9a:	jmp    0x406b47
  406b9c:	retf   0x33fc
  406b9f:	mov    al,ds:0x63a35e17
  406ba4:	or     cl,al
  406ba6:	in     eax,dx
  406ba7:	jbe    0x406c26
  406ba9:	jb     0x406bc0
  406bab:	lea    edx,[edx+0x65587368]
  406bb1:	sub    al,BYTE PTR ds:0xd2585828
  406bb7:	int    0x99
  406bb9:	stos   DWORD PTR es:[edi],eax
  406bba:	xlat   BYTE PTR ds:[ebx]
  406bbb:	inc    ecx
  406bbc:	stos   DWORD PTR es:[edi],eax
  406bbd:	mov    ecx,0x6d9185a2
  406bc2:	and    BYTE PTR [edx],dh
  406bc4:	retf   0xa2fe
  406bc7:	sbb    eax,0xbdd2c76d
  406bcc:	inc    esp
  406bcd:	div    ah
  406bcf:	xor    BYTE PTR [ebp-0x4afafcf0],cl
  406bd5:	es jmp 0x7614:0xfd92d23b
  406bdd:	xor    BYTE PTR [edx+0x5c0232ea],al
  406be3:	add    al,0x2c
  406be5:	sub    al,0x2
  406be7:	cs inc eax
  406be9:	int    0xdf
  406beb:	dec    esp
  406bec:	std    
  406bed:	xchg   edi,eax
  406bee:	add    DWORD PTR [edx+0x2d],ebx
  406bf1:	icebp  
  406bf2:	inc    esp
  406bf3:	mov    cl,0x3
  406bf5:	sbb    ch,BYTE PTR [ecx-0x2d]
  406bf8:	adc    eax,DWORD PTR [ebx+0x4]
  406bfb:	pop    DWORD PTR [eax-0x17b7e58e]
  406c01:	inc    ecx
  406c02:	ins    BYTE PTR es:[edi],dx
  406c03:	retf   0xd4b8
  406c06:	cmovb  edx,DWORD PTR [esi-0x48]
  406c0a:	dec    ecx
  406c0b:	stc    
  406c0c:	lds    esi,FWORD PTR [eax-0x73]
  406c0f:	jp     0x406c4b
  406c11:	(bad)  
  406c12:	mov    ah,0xe4
  406c14:	imul   esi,ebp,0xf6044ca2
  406c1a:	outs   dx,BYTE PTR ds:[esi]
  406c1b:	iret   
  406c1c:	(bad)  
  406c1d:	mov    dl,0x6a
  406c1f:	or     DWORD PTR [ecx+0x70],ebp
  406c22:	shl    DWORD PTR [eax+0x19ac396d],1
  406c28:	dec    ecx
  406c29:	(bad)  
  406c2a:	clc    
  406c2b:	cmp    bh,ah
  406c2d:	lods   eax,DWORD PTR ds:[esi]
  406c2e:	popf   
  406c2f:	or     ah,BYTE PTR [esi+edi*4-0x6b997f06]
  406c36:	inc    eax
  406c37:	and    ebp,ebp
  406c39:	jge    0x406c77
  406c3b:	jecxz  0x406c3b
  406c3d:	jmp    0x406bf2
  406c3f:	mov    dl,0x31
  406c41:	or     edx,edi
  406c43:	jo     0x406c25
  406c45:	lahf   
  406c46:	sbb    eax,0xba02551b
  406c4b:	out    dx,al
  406c4c:	push   0xfffffff3
  406c4e:	inc    ebx
  406c4f:	dec    edx
  406c50:	inc    ecx
  406c51:	sbb    esi,DWORD PTR [edx-0x5e]
  406c54:	repz je 0x406cb7
  406c57:	loopne 0x406ccf
  406c59:	mov    fs:0x96a44824,eax
  406c5f:	mov    BYTE PTR [edx-0x5a9f801f],ch
  406c65:	dec    edx
  406c66:	mov    ah,0x96
  406c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c69:	inc    eax
  406c6a:	jp     0x406cd9
  406c6c:	dec    ebp
  406c6d:	pop    ebx
  406c6e:	ret    
  406c6f:	or     edx,DWORD PTR [ebx]
  406c71:	push   0x78
  406c73:	scas   eax,DWORD PTR es:[edi]
  406c74:	fmul   QWORD PTR [eax]
  406c76:	pop    esp
  406c77:	lahf   
  406c78:	(bad)  
  406c79:	out    dx,al
  406c7a:	ds jno 0x406cc0
  406c7d:	int3   
  406c7e:	lods   eax,DWORD PTR ds:[esi]
  406c7f:	pop    es
  406c80:	loope  0x406c98
  406c82:	popf   
  406c83:	xchg   bp,ax
  406c85:	icebp  
  406c86:	cs mov ebx,0x3166d41b
  406c8c:	push   ebx
  406c8d:	fild   DWORD PTR [ecx]
  406c8f:	push   cx
  406c91:	mov    edi,0xb6091ac5
  406c96:	jno    0x406ce4
  406c98:	xor    DWORD PTR ds:0x577aa57d,esp
  406c9e:	cmp    al,0x21
  406ca0:	xchg   edi,eax
  406ca1:	inc    edx
  406ca2:	ja     0x406cc6
  406ca4:	adc    ah,BYTE PTR [eax]
  406ca6:	ror    BYTE PTR [eax+0x3a],0x5d
  406caa:	inc    ebp
  406cab:	repnz and eax,0x27551b54
  406cb1:	in     eax,dx
  406cb2:	aam    0x5d
  406cb4:	xchg   edx,eax
  406cb5:	ins    BYTE PTR es:[edi],dx
  406cb6:	ret    
  406cb7:	lock cmp DWORD PTR [edi-0xd61fbc4],esi
  406cbe:	inc    esp
  406cbf:	ret    
  406cc0:	push   ds
  406cc1:	xor    DWORD PTR es:[eax+0x42ec16cc],edx
  406cc8:	call   0xc46e:0xed745e83
  406ccf:	ss (bad) 
  406cd1:	popa   
  406cd2:	lods   eax,DWORD PTR ds:[esi]
  406cd3:	mov    bl,0xe6
  406cd5:	fisttp QWORD PTR [ebx-0x5ea9b4fc]
  406cdb:	stos   DWORD PTR es:[edi],eax
  406cdc:	popf   
  406cdd:	lea    eax,[edx-0x58]
  406ce0:	push   ebx
  406ce1:	jl     0x406cb6
  406ce3:	daa    
  406ce4:	inc    edx
  406ce5:	cdq    
  406ce6:	fdivr  DWORD PTR ds:[edx+0xf]
  406cea:	mov    DWORD PTR [eax-0x7b],ebp
  406ced:	(bad)  
  406cee:	cmc    
  406cef:	sar    cl,0x84
  406cf2:	mov    WORD PTR [ecx+edx*1],fs
  406cf5:	sbb    esi,DWORD PTR [edi+0x1f694a54]
  406cfb:	int3   
  406cfc:	pop    es
  406cfd:	lods   eax,DWORD PTR ds:[esi]
  406cfe:	out    dx,al
  406cff:	push   ebx
  406d00:	adc    BYTE PTR [eax-0x3],0x9f
  406d04:	das    
  406d05:	xchg   edi,eax
  406d06:	in     eax,dx
  406d07:	push   edi
  406d08:	jns    0x406d79
  406d0a:	lds    ecx,FWORD PTR [edi]
  406d0c:	stos   DWORD PTR es:[edi],eax
  406d0d:	pop    eax
  406d0e:	pop    edx
  406d0f:	loopne 0x406d5d
  406d11:	sub    ch,cl
  406d13:	scas   al,BYTE PTR es:[edi]
  406d14:	cli    
  406d15:	stos   BYTE PTR es:[edi],al
  406d16:	pop    edx
  406d17:	add    eax,0xddb11eeb
  406d1c:	nop
  406d1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d1e:	push   ecx
  406d1f:	push   ebx
  406d20:	add    esp,ecx
  406d22:	mov    bh,0xf1
  406d24:	inc    esp
  406d25:	push   ss
  406d26:	lahf   
  406d27:	nop
  406d28:	xchg   edi,eax
  406d29:	jae    0x406d84
  406d2b:	mov    al,0x94
  406d2d:	retf   
  406d2e:	fsubr  QWORD PTR [ebp-0x2c]
  406d31:	and    BYTE PTR [eax],ah
  406d33:	mov    ch,0xa8
  406d35:	stos   BYTE PTR es:[edi],al
  406d36:	inc    eax
  406d37:	hlt    
  406d38:	mov    eax,0x41e74765
  406d3d:	ss out dx,al
  406d3f:	fbstp  TBYTE PTR [ebx]
  406d41:	sbb    DWORD PTR [ebx-0x12be1e16],ebx
  406d47:	ins    DWORD PTR es:[edi],dx
  406d48:	mov    ch,BYTE PTR [edx+0x1be002ca]
  406d4e:	jnp    0x406d95
  406d50:	jmp    0x406d2e
  406d52:	mov    cl,0xae
  406d54:	in     al,0x75
  406d56:	imul   edi,DWORD PTR [esi-0x64],0x96a44d4a
  406d5d:	aad    0xb5
  406d5f:	mov    cl,0x44
  406d61:	rcl    BYTE PTR [ecx+0x4a4f0b4b],0xd
  406d68:	pushf  
  406d69:	and    edi,DWORD PTR [esi+0x7179408]
  406d6f:	cld    
  406d70:	aad    0xdc
  406d72:	mov    DWORD PTR [ecx+eiz*8-0x45bac15c],ecx
  406d79:	nop
  406d7a:	adc    edx,DWORD PTR [eax]
  406d7c:	xchg   edx,eax
  406d7d:	cmp    cl,BYTE PTR [ecx+ecx*8-0x1ef45f4b]
  406d84:	xor    eax,DWORD PTR [eax]
  406d86:	fstp   DWORD PTR [edx+0x75]
  406d89:	mov    eax,ds:0x3e59e135
  406d8e:	xchg   DWORD PTR [edi+ebp*1-0xeb400cf],edi
  406d95:	nop
  406d96:	jne    0x406daf
  406d98:	xchg   esp,eax
  406d99:	sbb    edi,ebx
  406d9b:	pop    edi
  406d9c:	mov    ah,0x5f
  406d9e:	imul   ecx,DWORD PTR [ebp-0x25],0x721368fd
  406da5:	xchg   esp,eax
  406da6:	stos   DWORD PTR es:[edi],eax
  406da7:	scas   al,BYTE PTR es:[edi]
  406da8:	mov    cl,0x7a
  406daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dab:	loope  0x406d49
  406dad:	adc    al,0xb6
  406daf:	xor    ah,BYTE PTR [edx]
  406db1:	jnp    0x406d9b
  406db3:	xchg   ecx,eax
  406db4:	mov    al,0x77
  406db6:	xor    BYTE PTR [edi+0x68111fd3],ah
  406dbc:	xchg   edx,eax
  406dbd:	sub    DWORD PTR [ebx+eax*1+0x798478a5],edx
  406dc4:	ss sub al,0x0
  406dc7:	or     ch,BYTE PTR [ebx+0x67]
  406dca:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  406dcc:	sbb    DWORD PTR [edx],0x10655b9d
  406dd2:	dec    eax
  406dd3:	push   edx
  406dd4:	out    0xf2,al
  406dd6:	in     eax,dx
  406dd7:	(bad)  
  406dd8:	fdivp  st(1),st
  406dda:	push   ebp
  406ddb:	push   esi
  406ddc:	push   eax
  406ddd:	or     BYTE PTR [ebx-0x29],bl
  406de0:	pop    esp
  406de1:	rcl    DWORD PTR [esi],1
  406de3:	imul   esi,DWORD PTR [edx-0x23e2906a],0xffffffca
  406dea:	mov    ebx,0x6234a059
  406def:	leave  
  406df0:	nop
  406df1:	hlt    
  406df2:	xchg   BYTE PTR [edi],bl
  406df4:	mov    dl,0xb3
  406df6:	adc    bl,BYTE PTR [ecx-0x3ff4ce6e]
  406dfc:	xor    BYTE PTR [ecx],dh
  406dfe:	push   0xffffff82
  406e00:	cdq    
  406e01:	mov    dh,0xa8
  406e03:	fwait
  406e04:	cmp    eax,0x40256a82
  406e09:	fiadd  DWORD PTR ds:0x2a9ded04
  406e0f:	jmp    0x406e60
  406e11:	jmp    0xf4b8:0x19b4ef2d
  406e18:	js     0x406dff
  406e1a:	mov    BYTE PTR [eax+edx*1+0x43],dh
  406e1e:	fwait
  406e1f:	js     0x406e68
  406e21:	aam    0xa6
  406e23:	xchg   edi,eax
  406e24:	or     al,BYTE PTR [edx-0x6b21bb67]
  406e2a:	bound  edi,QWORD PTR [ebx-0x144e2488]
  406e30:	inc    edx
  406e31:	pop    esp
  406e32:	and    al,0x5d
  406e34:	icebp  
  406e35:	push   0x1f693777
  406e3a:	lods   al,BYTE PTR ds:[esi]
  406e3b:	adc    eax,0xbd5ec40a
  406e40:	and    al,0xe2
  406e42:	ret    0x82b1
  406e45:	fucom  st(5)
  406e47:	int    0xa4
  406e49:	dec    esp
  406e4a:	pop    ebp
  406e4b:	xor    al,0x5f
  406e4d:	rol    ecx,0x77
  406e50:	lahf   
  406e51:	or     DWORD PTR [edx+0x1c],edi
  406e54:	sbb    eax,esi
  406e56:	cs adc al,0x16
  406e59:	add    eax,0xfc56082b
  406e5e:	sub    esp,ecx
  406e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e61:	jecxz  0x406e8d
  406e63:	call   0x559fa178
  406e68:	jae    0x406e05
  406e6a:	or     al,0x97
  406e6c:	shr    DWORD PTR [ebp-0x6f],cl
  406e6f:	mov    ds:0x97740396,al
  406e74:	xchg   DWORD PTR [edi+0x7a0b938c],ecx
  406e7a:	xlat   BYTE PTR ds:[ebx]
  406e7b:	mov    al,ds:0xb96329c7
  406e80:	push   cs
  406e81:	jge    0x406e7d
  406e83:	mov    eax,0x47205792
  406e88:	in     eax,0x6e
  406e8a:	in     eax,0xe7
  406e8c:	fimul  WORD PTR [ebp+0x41f68e69]
  406e92:	std    
  406e93:	push   0x6b011b72
  406e98:	cmp    DWORD PTR [edi-0x3b41ad1a],0xd5b3e876
  406ea2:	(bad)  
  406ea4:	jmp    0xe103:0xdb5cdf1
  406eab:	aam    0x1e
  406ead:	ret    
  406eae:	jecxz  0x406e87
  406eb0:	(bad)  
  406eb1:	push   esi
  406eb2:	jo     0x406e97
  406eb4:	addr16 loope 0x406eac
  406eb7:	jnp    0x406ec4
  406eb9:	or     ecx,DWORD PTR [edx]
  406ebb:	sbb    BYTE PTR [ecx-0x7fb0e49c],0xb5
  406ec2:	pop    ss
  406ec3:	and    edx,edi
  406ec5:	out    0x7b,al
  406ec7:	mov    ds:0x43cd0ef8,al
  406ecc:	sbb    eax,0x1661abd1
  406ed1:	jecxz  0x406e76
  406ed3:	fs jge 0x406ea3
  406ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed7:	xor    eax,0xc4794003
  406edc:	retf   
  406edd:	stc    
  406ede:	ins    BYTE PTR es:[edi],dx
  406edf:	ins    DWORD PTR es:[edi],dx
  406ee0:	test   al,0x27
  406ee2:	daa    
  406ee3:	repnz and ebx,esp
  406ee6:	fnstcw WORD PTR ds:0x1418795
  406eec:	sar    DWORD PTR [eax+0x11],1
  406eef:	xchg   edx,eax
  406ef0:	lods   eax,DWORD PTR ds:[esi]
  406ef1:	adc    ch,BYTE PTR [ebp+0x64b2275d]
  406ef7:	push   edx
  406ef8:	stos   BYTE PTR es:[edi],al
  406ef9:	push   0x6311d017
  406efe:	jmp    0x5f0d:0x181f37f2
  406f05:	stos   DWORD PTR es:[edi],eax
  406f06:	push   ebp
  406f07:	enter  0xe745,0x2
  406f0b:	xor    eax,0xed2aca79
  406f10:	retfw  
  406f12:	pop    eax
  406f13:	cli    
  406f14:	mov    eax,ds:0x4c7a64ff
  406f19:	adc    ebp,0xffffffcb
  406f1c:	jmp    0xaba6:0xf36bbaae
  406f23:	sub    DWORD PTR ds:0x7068a6d4,ebx
  406f29:	stos   DWORD PTR es:[edi],eax
  406f2a:	push   cx
  406f2c:	sub    DWORD PTR [ebx],edi
  406f2e:	push   ss
  406f2f:	pop    ss
  406f30:	das    
  406f31:	lahf   
  406f32:	sbb    esp,DWORD PTR [ecx-0x78]
  406f35:	cmp    BYTE PTR [edi+0x51],bl
  406f38:	mov    ds:0x9734de61,al
  406f3d:	shl    cl,0x4
  406f40:	in     eax,dx
  406f41:	es mov esi,0x4a7a9546
  406f47:	mov    bh,0x7
  406f49:	and    bh,BYTE PTR [esp+edi*1]
  406f4c:	nop
  406f4d:	add    al,0xd8
  406f4f:	mov    ebp,0xccb7117e
  406f54:	mov    esi,0xcd9acf0b
  406f59:	sbb    ch,BYTE PTR [edi+0x887673e]
  406f5f:	adc    al,0xc0
  406f61:	xchg   ecx,eax
  406f62:	push   ebx
  406f63:	fmul   QWORD PTR [eax-0x227e16d7]
  406f69:	or     BYTE PTR [esi+0x2],0x4e
  406f6d:	xor    ebx,0xf9f557d3
  406f73:	jae    0x406fd8
  406f75:	ins    DWORD PTR es:[edi],dx
  406f76:	mov    ds:0x5fbf8480,al
  406f7b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  406f7d:	push   ebp
  406f7e:	pop    edi
  406f7f:	xchg   BYTE PTR [ebx-0x666962f8],dh
  406f85:	jp     0x406fb2
  406f87:	bound  esp,QWORD PTR [edx]
  406f89:	daa    
  406f8a:	(bad)  
  406f8b:	and    eax,0x292eb2d1
  406f90:	mov    ecx,0x91a441e0
  406f95:	jl     0x406f7a
  406f97:	xchg   esi,eax
  406f98:	dec    ebp
  406f99:	add    DWORD PTR ds:0xd738bf1,esp
  406f9f:	in     eax,0xd5
  406fa1:	mov    ds:0xc8299fd4,eax
  406fa6:	or     al,0x8
  406fa8:	sahf   
  406fa9:	add    al,0x74
  406fab:	fsubr  QWORD PTR [eax+ebx*8]
  406fae:	popf   
  406faf:	in     eax,dx
  406fb0:	imul   edx,DWORD PTR [eax-0x709cb5a8],0x3474a80d
  406fba:	xor    DWORD PTR [ebx],0x4f
  406fbd:	push   edi
  406fbe:	sbb    ch,BYTE PTR [edi+edi*4-0x10]
  406fc2:	push   0x7
  406fc4:	cmp    BYTE PTR gs:[esi-0x18],bl
  406fc8:	mov    eax,DWORD PTR [esi]
  406fca:	dec    ebp
  406fcb:	push   ecx
  406fcc:	dec    ecx
  406fcd:	add    edi,DWORD PTR [ecx]
  406fcf:	fisubr WORD PTR [esi+0x54]
  406fd2:	inc    edx
  406fd3:	add    cl,BYTE PTR ds:0x56af4365
  406fd9:	pop    esp
  406fda:	outs   dx,BYTE PTR ds:[esi]
  406fdb:	jge    0x406faa
  406fdd:	add    ah,BYTE PTR [edx]
  406fdf:	xchg   edx,eax
  406fe0:	mov    edx,0x45864db0
  406fe5:	imul   edi,DWORD PTR [ebx-0x2a],0xffffff8f
  406fe9:	mov    edx,?
  406feb:	mov    cl,0x9c
  406fed:	fisubr DWORD PTR [ecx]
  406fef:	fs ret 0x810f
  406ff3:	adc    esp,DWORD PTR ds:0xd090b1b4
  406ff9:	jge    0x40706c
  406ffb:	ja     0x406ff8
  406ffd:	test   al,0x80
  406fff:	adc    eax,DWORD PTR [eax-0x1c]
  407002:	in     eax,0xe3
  407004:	push   eax
  407005:	jbe    0x40706e
  407007:	aaa    
  407008:	mov    ch,0xff
  40700a:	cdq    
  40700b:	mov    ch,0x47
  40700d:	dec    esp
  40700e:	jmp    0x407052
  407010:	test   al,0xe
  407012:	pop    eax
  407013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407014:	ins    BYTE PTR es:[edi],dx
  407015:	sti    
  407016:	fwait
  407017:	jg     0x407009
  407019:	call   0x7d4f:0x7d40fcbe
  407020:	lea    ebp,[ebp-0x78]
  407023:	aam    0xee
  407025:	adc    al,0x45
  407027:	in     al,dx
  407028:	push   es
  407029:	pushf  
  40702a:	inc    ecx
  40702b:	mov    ah,0x9b
  40702d:	pandn  mm0,mm7
  407030:	je     0x407083
  407032:	sub    eax,0x2f3dd43f
  407037:	dec    eax
  407038:	test   DWORD PTR [ebx],edx
  40703a:	inc    ebp
  40703b:	dec    eax
  40703c:	cli    
  40703d:	cdq    
  40703e:	and    eax,0xb107ad78
  407043:	mov    es:0x818384b0,al
  407049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40704a:	jmp    0xbc544bbe
  40704f:	push   eax
  407050:	je     0x40700d
  407052:	ja     0x4070c2
  407054:	cmp    eax,0x34ced9b6
  407059:	add    eax,0x3326b306
  40705e:	and    cl,0x6d
  407061:	je     0x407056
  407063:	jne    0x407013
  407065:	sbb    ecx,DWORD PTR [ebx]
  407067:	mov    gs,WORD PTR [eax+0x5b]
  40706a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40706b:	xchg   esp,eax
  40706c:	cmp    BYTE PTR ds:0x1db84575,bh
  407072:	int    0xa6
  407074:	sub    esp,esi
  407076:	lahf   
  407077:	jo     0x4070f7
  407079:	adc    al,0x26
  40707b:	lock push esi
  40707d:	add    esi,ebp
  40707f:	aam    0x63
  407081:	jnp    0x407068
  407083:	nop
  407084:	popa   
  407085:	in     eax,0x3e
  407087:	dec    edi
  407088:	imul   ebp,edi,0x63893bad
  40708e:	ret    0xc0ab
  407091:	rol    esp,cl
  407093:	clc    
  407094:	hlt    
  407095:	(bad)  
  407096:	jns    0x40709f
  407098:	scas   eax,DWORD PTR es:[edi]
  407099:	push   esp
  40709a:	mov    ecx,edi
  40709c:	rcl    DWORD PTR [esi-0x1726a5d1],0x9c
  4070a3:	xchg   edx,eax
  4070a4:	mov    dh,0xa8
  4070a6:	pop    eax
  4070a7:	pop    ecx
  4070a8:	inc    esi
  4070a9:	sub    al,0x82
  4070ab:	xor    BYTE PTR [esi],0xc1
  4070ae:	or     eax,0xce903341
  4070b3:	jp     0x4070f1
  4070b5:	fdiv   DWORD PTR [eax]
  4070b7:	das    
  4070b8:	mov    ebp,edi
  4070ba:	ret    0x63d9
  4070bd:	dec    eax
  4070be:	mov    edi,DWORD PTR [edi+ecx*4+0x2]
  4070c2:	xlat   BYTE PTR ds:[ebx]
  4070c3:	ss pushf 
  4070c5:	lods   al,BYTE PTR ds:[esi]
  4070c6:	inc    esp
  4070c7:	cs cdq 
  4070c9:	jo     0x4070e4
  4070cb:	ds enter 0xef87,0xd6
  4070d0:	push   ebp
  4070d1:	mov    edi,0x6b717066
  4070d6:	and    al,0xf0
  4070d8:	or     dh,BYTE PTR [esi-0x7e]
  4070db:	pop    esi
  4070dc:	je     0x4070ab
  4070de:	(bad)  
  4070e0:	mov    dl,0x5c
  4070e2:	xchg   ch,cl
  4070e4:	into   
  4070e5:	push   ds
  4070e6:	dec    ebp
  4070e7:	cbw    
  4070e9:	fs ds popa 
  4070ec:	faddp  st(6),st
  4070ee:	ret    0xaff0
  4070f1:	out    0x85,al
  4070f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070f4:	iret   
  4070f5:	mov    al,0x11
  4070f7:	fnclex 
  4070f9:	dec    edi
  4070fa:	lock mov ch,0x2e
  4070fd:	dec    ebp
  4070fe:	inc    esp
  4070ff:	rcl    BYTE PTR [edx+0x43],0x49
  407103:	sub    edx,edx
  407105:	add    eax,0x4618a483
  40710a:	cmp    al,0x2c
  40710c:	lods   eax,DWORD PTR ds:[esi]
  40710d:	aam    0xdf
  40710f:	in     eax,0xb5
  407111:	dec    ebp
  407112:	addr16 pop edi
  407114:	aas    
  407115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407116:	jno    0x40713e
  407118:	mov    al,ds:0x8484bbc
  40711d:	cmp    BYTE PTR [ecx+0x56],0x9f
  407121:	push   edx
  407122:	inc    ecx
  407123:	into   
  407124:	ds aad 0xb2
  407127:	inc    edi
  407128:	pusha  
  407129:	sbb    ecx,esp
  40712b:	pop    edx
  40712c:	pop    edi
  40712d:	aad    0xcf
  40712f:	push   ecx
  407130:	dec    esi
  407131:	je     0x4070f7
  407133:	add    esp,DWORD PTR [ebp+0x0]
  407136:	fnstsw WORD PTR [ebx]
  407138:	fbstp  TBYTE PTR [esi+ecx*2+0x13]
  40713c:	les    esp,FWORD PTR [bx+di+0x7ea9]
  407141:	mov    ah,0xf6
  407143:	add    bl,ch
  407145:	and    al,0x58
  407147:	imul   BYTE PTR [eax-0x79]
  40714a:	jns    0x407145
  40714c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40714d:	jmp    0xb09d:0x13759a2c
  407154:	pushw  0xff90
  407157:	xchg   edi,eax
  407158:	unpcklps xmm1,xmm7
  40715b:	add    eax,DWORD PTR [ebp-0x60]
  40715e:	loopne 0x407141
  407160:	mov    ebx,0x3e166271
  407165:	inc    esi
  407166:	aas    
  407167:	stc    
  407168:	push   eax
  407169:	outs   dx,DWORD PTR ds:[esi]
  40716a:	icebp  
  40716b:	scas   eax,DWORD PTR es:[edi]
  40716c:	xchg   edx,eax
  40716d:	mov    ecx,0x6adaad1c
  407172:	mov    edx,0x519db250
  407177:	adc    al,0xf5
  407179:	je     0x4071f4
  40717b:	inc    esp
  40717c:	in     eax,0xd8
  40717e:	push   cs
  40717f:	ret    
  407180:	or     ch,dl
  407182:	mov    ah,0xc9
  407184:	jbe    0x4071a2
  407186:	pop    edx
  407187:	loope  0x407109
  407189:	loop   0x4071a5
  40718b:	xchg   edx,eax
  40718c:	out    0x5,al
  40718e:	test   DWORD PTR [ebx+eax*2],esp
  407191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407192:	jbe    0x4071f8
  407194:	sbb    DWORD PTR [esp+esi*4],esp
  407197:	push   es
  407198:	(bad)  
  407199:	cmc    
  40719a:	push   ss
  40719b:	inc    esp
  40719c:	les    edi,FWORD PTR [eax]
  40719e:	push   ds
  40719f:	push   DWORD PTR [edx+0x4c]
  4071a2:	(bad)  
  4071a3:	lock dec edi
  4071a5:	jne    0x4071c2
  4071a7:	mov    al,0xf9
  4071a9:	shr    BYTE PTR [ebx+0x14],1
  4071ac:	add    BYTE PTR [eax],bh
  4071ae:	arpl   WORD PTR [eax+0x33],sp
  4071b1:	push   ebx
  4071b2:	mov    ds:0x5a391a94,al
  4071b7:	adc    dl,BYTE PTR [edi-0x71d3145]
  4071bd:	push   ebp
  4071be:	icebp  
  4071bf:	add    esp,DWORD PTR [esi+edi*1-0x371519a5]
  4071c6:	jnp    0x4071e4
  4071c8:	dec    eax
  4071c9:	ror    bh,cl
  4071cb:	stc    
  4071cc:	in     al,0x1a
  4071ce:	cld    
  4071cf:	loope  0x407203
  4071d1:	popa   
  4071d2:	fcmovnbe st,st(3)
  4071d4:	push   esp
  4071d5:	aaa    
  4071d6:	xchg   ebp,eax
  4071d7:	cmp    al,0x1a
  4071d9:	push   ss
  4071da:	mov    BYTE PTR [ebx+0x23],cl
  4071dd:	fsubr  st(0),st
  4071df:	pop    ss
  4071e0:	jns    0x407169
  4071e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071e3:	ret    0x5743
  4071e6:	popa   
  4071e7:	mov    eax,esi
  4071e9:	adc    cl,BYTE PTR [ecx-0x3f]
  4071ec:	outs   dx,DWORD PTR ds:[esi]
  4071ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ee:	dec    ebx
  4071ef:	mov    bl,0x27
  4071f1:	jo     0x407218
  4071f3:	stc    
  4071f4:	int3   
  4071f5:	in     al,0x8c
  4071f7:	sub    eax,0xf55464e0
  4071fc:	inc    edx
  4071fd:	xor    BYTE PTR [eax-0x28b0f330],0xeb
  407204:	xchg   esp,eax
  407205:	jmp    0x8f33f257
  40720a:	xor    eax,0x963d9a2e
  40720f:	or     BYTE PTR [esi+0x2b23ac35],0x4d
  407216:	scas   eax,DWORD PTR es:[edi]
  407217:	or     ch,BYTE PTR [ebx]
  407219:	inc    esp
  40721a:	sub    bh,BYTE PTR [esi-0x35]
  40721d:	dec    ebp
  40721e:	mov    bh,0x30
  407220:	add    eax,0xb880a5db
  407225:	call   0x6c0864be
  40722a:	lahf   
  40722b:	xchg   esp,edx
  40722d:	xchg   esi,eax
  40722e:	cmc    
  40722f:	lods   eax,DWORD PTR ds:[esi]
  407230:	stc    
  407231:	mov    WORD PTR [ebx+0x6e1f1bce],cs
  407237:	into   
  407238:	into   
  407239:	jmp    0x1976:0xcdb910f
  407240:	(bad)  
  407241:	xchg   ecx,eax
  407242:	jnp    0x40721b
  407244:	shl    BYTE PTR [ebp-0x60],1
  407247:	je     0x407290
  407249:	stos   BYTE PTR es:[edi],al
  40724a:	pop    esp
  40724b:	mov    WORD PTR [esi+0x67],fs
  40724e:	jp     0x4072ba
  407250:	pop    esp
  407251:	loope  0x40726f
  407253:	pop    esp
  407254:	dec    ecx
  407255:	sahf   
  407256:	push   0xffffffc7
  407258:	xchg   BYTE PTR [ecx],cl
  40725a:	xor    al,0xba
  40725c:	jbe    0x4071fb
  40725e:	mov    ds:0x165c1113,al
  407263:	nop
  407264:	cmp    BYTE PTR [edx],dh
  407266:	jae    0x4072d1
  407268:	(bad)  
  407269:	sbb    dh,BYTE PTR [edx]
  40726b:	cld    
  40726c:	jno    0x40722f
  40726e:	fwait
  40726f:	int3   
  407270:	jge    0x40720b
  407272:	addr16 mov eax,ds:0xca13
  407276:	mov    ch,bl
  407278:	enter  0xafb4,0x9f
  40727c:	xchg   ecx,eax
  40727d:	popaw  
  40727f:	dec    esp
  407280:	div    DWORD PTR [eax+0x25f1ff54]
  407286:	mov    esi,0xf5c53d15
  40728b:	dec    bh
  40728d:	adc    bl,bl
  40728f:	xor    edi,esp
  407291:	in     eax,0x98
  407293:	cmp    eax,0x5d52e09a
  407298:	sbb    eax,0xba96518e
  40729d:	mov    ah,0x31
  40729f:	shl    DWORD PTR [edi+0x744836a4],1
  4072a5:	imul   eax,DWORD PTR [esi+eiz*1],0x85bc5e25
  4072ac:	fist   WORD PTR [ebp-0x19]
  4072af:	mov    ah,0xf4
  4072b1:	je     0x407271
  4072b3:	ror    DWORD PTR [ecx],0xfb
  4072b6:	(bad)  
  4072b7:	out    0xf8,eax
  4072b9:	xchg   ebx,eax
  4072ba:	xor    eax,0x79122b2f
  4072bf:	(bad)  
  4072c0:	out    dx,eax
  4072c1:	test   DWORD PTR [edx],edi
  4072c3:	out    dx,eax
  4072c4:	push   edi
  4072c5:	pop    ebp
  4072c6:	dec    esp
  4072c7:	and    BYTE PTR [eax+eiz*4],dh
  4072ca:	bound  edi,QWORD PTR [ebx-0x41a2b6eb]
  4072d0:	cs and eax,0x5dd266b8
  4072d6:	stos   BYTE PTR es:[edi],al
  4072d7:	add    eax,0xffffffdc
  4072da:	dec    ecx
  4072db:	sub    ebx,DWORD PTR [esi+0x1806d6f3]
  4072e1:	lods   ax,WORD PTR ds:[esi]
  4072e3:	xor    DWORD PTR [ebx],ecx
  4072e5:	inc    esp
  4072e6:	hlt    
  4072e7:	xor    ebx,DWORD PTR [esi-0x7b]
  4072ea:	sub    esi,DWORD PTR [edx+eax*2-0x58]
  4072ee:	inc    eax
  4072ef:	ds jmp 0x7810:0x403b07fa
  4072f7:	pop    ebx
  4072f8:	arpl   WORD PTR [eax],bx
  4072fa:	xchg   BYTE PTR ds:0x98f82663,dl
  407300:	xor    al,0xc7
  407302:	stos   BYTE PTR es:[edi],al
  407303:	cmc    
  407304:	xor    esp,DWORD PTR [ebx-0x2d]
  407307:	xor    eax,edi
  407309:	sahf   
  40730a:	pop    ebx
  40730b:	inc    ecx
  40730c:	adc    eax,DWORD PTR [ebp+ebx*4-0x7]
  407310:	add    eax,ecx
  407312:	inc    eax
  407313:	and    al,0x56
  407315:	sub    ebp,DWORD PTR [ebp+ebx*8+0x5d5ae042]
  40731c:	pop    es
  40731d:	test   eax,0x1764496f
  407322:	mov    sp,WORD PTR fs:[eax+0x80bc6ec]
  40732a:	dec    esp
  40732b:	call   0x6e58:0x51d52f55
  407332:	push   0xffffffee
  407334:	dec    ebx
  407335:	xchg   esp,eax
  407336:	adc    eax,0x6b44dd6e
  40733b:	cwde   
  40733c:	and    al,0x3a
  40733e:	outs   dx,DWORD PTR ds:[esi]
  40733f:	ret    
  407340:	lock jno 0x407310
  407343:	sub    DWORD PTR [ecx],esi
  407345:	add    bh,BYTE PTR [edx]
  407347:	add    cl,0xc
  40734a:	cmp    al,0xa8
  40734c:	int3   
  40734d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40734e:	pop    eax
  40734f:	pop    eax
  407350:	jno    0x40735e
  407352:	pop    ebx
  407353:	pop    es
  407354:	or     bh,al
  407356:	push   es
  407357:	(bad)  
  407358:	cwde   
  407359:	mov    BYTE PTR [edx],dl
  40735b:	pusha  
  40735c:	call   0x849417e0
  407361:	scas   eax,DWORD PTR es:[edi]
  407362:	fsub   st(2),st
  407364:	gs pushf 
  407366:	js     0x407387
  407368:	push   ebp
  407369:	xor    bl,BYTE PTR [edi+eiz*8+0x1a]
  40736d:	mov    fs,WORD PTR [edx]
  40736f:	cmp    ebp,DWORD PTR [esi]
  407371:	jmp    0x1180:0x10ed20b8
  407378:	jne    0x40731d
  40737a:	retf   0x5786
  40737d:	addr16 ud2 
  407380:	inc    eax
  407381:	jns    0x40736c
  407383:	shl    BYTE PTR [ebp+0x3b],1
  407386:	mov    ss,WORD PTR [esi+0x4f]
  407389:	and    al,0x7c
  40738b:	and    eax,DWORD PTR [ebp+eiz*4-0x238ed2b3]
  407392:	out    0x7a,eax
  407394:	sbb    esi,DWORD PTR [ebx]
  407396:	(bad)  
  407397:	pop    ds
  407398:	pop    esi
  407399:	sub    BYTE PTR [ecx],ah
  40739b:	adc    DWORD PTR [edx-0x5f],ebx
  40739e:	cli    
  40739f:	(bad)  
  4073a0:	ins    DWORD PTR es:[edi],dx
  4073a1:	mov    WORD PTR [ebx],es
  4073a3:	or     DWORD PTR [ebx+0x535536cb],ebx
  4073a9:	jp     0x40741e
  4073ab:	xor    BYTE PTR [edi-0x15],dh
  4073ae:	ds (bad) 
  4073b0:	(bad)  
  4073b1:	cwde   
  4073b2:	test   al,0xc7
  4073b4:	iret   
  4073b5:	(bad)  
  4073b6:	cmc    
  4073b7:	push   ebp
  4073b8:	ffreep st(3)
  4073ba:	mov    fs,WORD PTR [edx+0x41465217]
  4073c0:	mov    WORD PTR [edi+0x68892b21],?
  4073c6:	dec    ebx
  4073c7:	fxam   
  4073c9:	mov    al,0x8a
  4073cb:	mov    ch,ch
  4073cd:	call   0x8c28:0xce9680a8
  4073d4:	or     DWORD PTR [bx+si-0x30],0x53044752
  4073dc:	iret   
  4073dd:	xor    al,0x7c
  4073df:	xchg   edi,eax
  4073e0:	mov    dh,0x28
  4073e2:	mov    ecx,0xa50a40ea
  4073e7:	call   0x6482:0xd2760f1a
  4073ee:	push   eax
  4073ef:	mov    esp,0xbf2998b8
  4073f4:	inc    ecx
  4073f5:	loopne 0x4073c5
  4073f7:	je     0x407432
  4073f9:	jmp    0x407440
  4073fb:	cdq    
  4073fc:	fist   DWORD PTR [ecx]
  4073fe:	mov    WORD PTR [edi-0x419a2552],cs
  407404:	leave  
  407405:	fs into 
  407407:	ins    DWORD PTR es:[edi],dx
  407408:	adc    DWORD PTR [edi],0x39696146
  40740e:	enter  0x3e42,0xe4
  407412:	gs cli 
  407414:	pop    edi
  407415:	out    0x1a,eax
  407417:	adc    ah,BYTE PTR [esi+0x10eb993c]
  40741d:	lea    edx,[edi-0x12dc8529]
  407423:	jns    0x4073c7
  407425:	rol    BYTE PTR [eax-0x37],1
  407428:	xor    cl,BYTE PTR [eax-0x8073f4a]
  40742e:	test   al,0x32
  407430:	push   0x4b9a9aa3
  407435:	sbb    ebp,edx
  407437:	out    0xac,eax
  407439:	sub    ecx,DWORD PTR [ebp+0x4a1a5c7]
  40743f:	push   esp
  407440:	push   ebx
  407441:	inc    ebp
  407442:	icebp  
  407443:	es ret 0x10db
  407447:	or     dh,BYTE PTR [ecx]
  407449:	adc    eax,0x60a23934
  40744e:	mov    esi,0xf0395b65
  407453:	ja     0x407415
  407455:	dec    ecx
  407456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407457:	gs push edx
  407459:	inc    ecx
  40745a:	test   al,0x4e
  40745c:	mov    ebp,0x3d1c7dd2
  407461:	dec    eax
  407462:	or     BYTE PTR [edi+0x63],dh
  407465:	mov    WORD PTR [edx],?
  407467:	cmp    eax,0xc4ba648
  40746c:	mov    edx,0x4ef606e8
  407471:	xor    al,0x5c
  407473:	xor    bl,BYTE PTR [esi-0x29]
  407476:	mov    bh,0xb4
  407478:	test   eax,ebx
  40747a:	inc    edi
  40747b:	push   0xffffffc3
  40747d:	dec    ebp
  40747e:	xor    ebx,DWORD PTR [eax+edx*1-0x42]
  407482:	aaa    
  407483:	cdq    
  407484:	sub    DWORD PTR [edx],edi
  407486:	das    
  407487:	mov    ds:0xcdb850d,al
  40748c:	cmp    BYTE PTR [ecx+edx*1+0x7ff59a13],ah
  407493:	mov    ss,WORD PTR [edx+0x4de9d31f]
  407499:	popf   
  40749a:	add    bl,BYTE PTR [ebx]
  40749c:	test   DWORD PTR [edi],esi
  40749e:	cld    
  40749f:	lahf   
  4074a0:	ss (bad) 
  4074a2:	ror    DWORD PTR [ebx+0x3210aaf3],1
  4074a8:	dec    edi
  4074a9:	push   ecx
  4074aa:	mov    al,0x9e
  4074ac:	das    
  4074ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074ae:	xor    BYTE PTR [esp+esi*8+0x3],dh
  4074b2:	inc    edi
  4074b3:	mov    cl,BYTE PTR [ecx-0x3605d81e]
  4074b9:	popf   
  4074ba:	cmp    eax,DWORD PTR [ebx+0xc]
  4074bd:	xor    ch,BYTE PTR [esi]
  4074bf:	int3   
  4074c0:	adc    eax,0x74b32e3c
  4074c5:	push   0xffffff8b
  4074c7:	mov    BYTE PTR [edi],0x56
  4074ca:	add    ebp,DWORD PTR [esp+edx*2+0x751f1dc0]
  4074d1:	push   eax
  4074d2:	dec    edi
  4074d3:	popa   
  4074d4:	or     esi,esp
  4074d6:	dec    eax
  4074d7:	dec    BYTE PTR [ebx-0x11]
  4074da:	jno    0x40745f
  4074dc:	daa    
  4074dd:	bound  esp,QWORD PTR [eax]
  4074df:	add    DWORD PTR [eax+ecx*1],esp
  4074e2:	cmp    eax,0xf06c6b3c
  4074e7:	jbe    0x407490
  4074e9:	sahf   
  4074ea:	add    eax,0x6d55683c
  4074ef:	ss retf 
  4074f1:	lea    edi,[ebx+0x16390a93]
  4074f7:	hlt    
  4074f8:	xlat   BYTE PTR ds:[ebx]
  4074f9:	ds inc eax
  4074fb:	push   ebx
  4074fc:	mov    eax,0x83d0d2a2
  407501:	pop    ebp
  407502:	push   ds
  407503:	pop    ebx
  407504:	jle    0x40750b
  407506:	es int 0xc6
  407509:	ret    0x9347
  40750c:	mov    edx,0x19084f67
  407511:	loopne 0x40752c
  407513:	cmp    al,0xed
  407515:	jp     0x4074d1
  407517:	dec    ebp
  407518:	in     al,dx
  407519:	push   ebx
  40751a:	xlat   BYTE PTR ds:[ebx]
  40751b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40751c:	imul   ebx,DWORD PTR [ecx+0x11],0xffffffd6
  407520:	bound  eax,QWORD PTR [esi-0x4bf55286]
  407526:	sub    ecx,DWORD PTR cs:[eax+0x72dfa174]
  40752d:	cdq    
  40752e:	mov    bh,0x56
  407530:	dec    esi
  407531:	jbe    0x407543
  407533:	js     0x4074c5
  407535:	mov    edx,0xab40b5ee
  40753a:	rep ds ins BYTE PTR es:[edi],dx
  40753d:	sbb    DWORD PTR [esi],eax
  40753f:	ror    edx,cl
  407541:	rcr    BYTE PTR [ebx+0x15],0xa6
  407545:	adc    eax,0x674c4855
  40754a:	sbb    dl,BYTE PTR [ecx]
  40754c:	pusha  
  40754d:	call   0xd3b5:0x3ec283bc
  407554:	mov    BYTE PTR [esi+0x21],bh
  407557:	out    dx,eax
  407558:	mov    dl,0x61
  40755a:	and    DWORD PTR [edx+0x4189b507],esp
  407560:	(bad)  
  407561:	fs mov ecx,0x4ab16e3a
  407567:	and    BYTE PTR [esi],0x4
  40756a:	das    
  40756b:	in     al,dx
  40756c:	xor    dh,bl
  40756e:	fcmovnbe st,st(3)
  407570:	push   edi
  407571:	push   DWORD PTR [ecx]
  407573:	outs   dx,DWORD PTR ds:[esi]
  407574:	daa    
  407575:	je     0x40759d
  407577:	aad    0xa6
  407579:	jbe    0x4075d1
  40757b:	lds    edi,FWORD PTR ds:0x8d678edb
  407581:	test   eax,0x52907ee7
  407586:	sbb    dl,ch
  407588:	into   
  407589:	adc    eax,0xa6c13a90
  40758e:	xor    al,0xf3
  407590:	popa   
  407591:	fmul   QWORD PTR [ebp-0x3c2ca85c]
  407597:	aad    0x28
  407599:	cld    
  40759a:	mov    ah,0x44
  40759c:	bound  esp,QWORD PTR [ecx+ecx*4]
  40759f:	and    eax,0x44da7a8
  4075a4:	mov    edi,0xded9a6b2
  4075a9:	inc    edx
  4075aa:	jmp    0x407592
  4075ac:	xlat   BYTE PTR ds:[ebx]
  4075ad:	xor    bl,BYTE PTR [ebp-0x15]
  4075b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b1:	mov    WORD PTR [edi],?
  4075b3:	dec    ebx
  4075b4:	cmp    BYTE PTR ds:0x5738687e,0x2c
  4075bb:	ins    DWORD PTR es:[edi],dx
  4075bc:	mov    ah,0x34
  4075be:	ja     0x4075ee
  4075c0:	jmp    0x1b8e9794
  4075c5:	pop    esp
  4075c6:	mov    WORD PTR [ebp-0x196ef709],gs
  4075cc:	inc    ebx
  4075cd:	out    dx,al
  4075ce:	lds    esi,FWORD PTR [ecx-0x9000ec5]
  4075d4:	shl    ch,cl
  4075d6:	rcr    DWORD PTR [edi-0x579c2933],0x63
  4075dd:	js     0x40765c
  4075df:	or     al,0xe
  4075e1:	repnz pop di
  4075e4:	xchg   ecx,eax
  4075e5:	push   edx
  4075e6:	es pushf 
  4075e8:	scas   eax,DWORD PTR es:[edi]
  4075e9:	and    bl,dh
  4075eb:	push   eax
  4075ec:	xchg   edx,eax
  4075ed:	cdq    
  4075ee:	std    
  4075ef:	jg     0x4075f0
  4075f1:	popa   
  4075f2:	cdq    
  4075f3:	dec    edx
  4075f4:	mov    ds:0xbed37790,al
  4075f9:	push   0xbd193235
  4075fe:	ret    
  4075ff:	sub    DWORD PTR [ecx],edi
  407601:	hlt    
  407602:	push   0x2359d369
  407607:	add    dl,bl
  407609:	shl    DWORD PTR [eax],0xf0
  40760c:	iret   
  40760d:	mov    ch,0x3e
  40760f:	ds xlat BYTE PTR ss:[ebx]
  407612:	nop
  407613:	sub    ebx,DWORD PTR [esi-0x4419c1a8]
  407619:	sub    eax,0xe81c7cc4
  40761e:	jmp    0x21c8:0x17248ec7
  407625:	imul   ebp,DWORD PTR [edx],0x6bf4651f
  40762b:	and    ah,bl
  40762d:	jnp    0x4075e9
  40762f:	push   cs
  407630:	fsub   DWORD PTR [esi-0x21bc039d]
  407636:	push   cs
  407637:	retf   
  407638:	inc    ecx
  407639:	mov    esp,0x1e6f673b
  40763e:	lahf   
  40763f:	push   ds
  407640:	dec    esi
  407641:	daa    
  407642:	fwait
  407643:	xchg   ebx,eax
  407644:	sub    BYTE PTR [esi-0x11],bh
  407647:	int3   
  407648:	push   eax
  407649:	jg     0x40764f
  40764b:	xor    ebp,DWORD PTR [edi]
  40764d:	retf   0x6ad6
  407650:	ds out 0x79,al
  407653:	sub    ah,bh
  407655:	cmp    BYTE PTR [ebx],al
  407657:	ds sahf 
  407659:	scas   al,BYTE PTR es:[edi]
  40765a:	xlat   BYTE PTR ds:[ebx]
  40765b:	push   cs
  40765c:	sbb    al,0x36
  40765e:	dec    ecx
  40765f:	stos   BYTE PTR es:[edi],al
  407660:	popa   
  407661:	push   DWORD PTR cs:[esi-0x36]
  407665:	pop    esi
  407666:	cld    
  407667:	fwait
  407668:	pop    esi
  407669:	test   eax,0x113cb59b
  40766e:	or     bl,al
  407670:	pop    esp
  407671:	mov    bh,0xcf
  407673:	hlt    
  407674:	gs dec edx
  407676:	into   
  407677:	popf   
  407678:	sub    DWORD PTR [eax-0x1e317119],esi
  40767e:	jg     0x407688
  407680:	jae    0x40764d
  407682:	repz add al,0xbd
  407685:	mov    ds:0xf936cf7a,al
  40768a:	inc    edx
  40768b:	stos   DWORD PTR es:[edi],eax
  40768c:	or     eax,0x960a3536
  407691:	loopne 0x407652
  407693:	sub    eax,0x1ab9c7dc
  407698:	sbb    esi,DWORD PTR [ebp+ebx*2+0x264196e0]
  40769f:	daa    
  4076a0:	mov    esp,esp
  4076a2:	mov    ds:0x9f2fcd5c,al
  4076a7:	mov    esi,DWORD PTR ds:0x359162ab
  4076ad:	sar    DWORD PTR [esi-0x5cbe3c38],0x9b
  4076b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076b5:	les    edx,FWORD PTR [ebp-0x24d38b34]
  4076bb:	fmul   st,st(4)
  4076bd:	add    edx,edi
  4076bf:	gs pop ebp
  4076c1:	push   edi
  4076c2:	and    DWORD PTR [esi+eax*2-0x6cd55497],ecx
  4076c9:	jo     0x407738
  4076cb:	adc    BYTE PTR [eax+0x44e21df6],dh
  4076d1:	jno    0x4076e9
  4076d3:	push   esp
  4076d4:	mov    es,WORD PTR [edx-0x6828f15e]
  4076da:	xchg   dl,cl
  4076dc:	into   
  4076dd:	xchg   ebp,eax
  4076de:	aad    0x44
  4076e0:	out    dx,eax
  4076e1:	push   ss
  4076e2:	(bad)  [eax]
  4076e4:	pop    ss
  4076e5:	(bad)  
  4076e6:	xor    al,0x73
  4076e8:	xchg   edi,eax
  4076e9:	sbb    eax,0xd6a3c9ce
  4076ee:	mov    dh,0xfb
  4076f0:	stc    
  4076f1:	les    esi,FWORD PTR [edi]
  4076f3:	push   ebx
  4076f4:	inc    ebp
  4076f5:	push   eax
  4076f6:	inc    eax
  4076f7:	mov    es,WORD PTR [edx]
  4076f9:	pop    ecx
  4076fa:	(bad)  
  4076fb:	retf   0x7e70
  4076fe:	int3   
  4076ff:	out    dx,al
  407700:	sub    al,0x20
  407702:	jns    0x4076b6
  407704:	jmp    0xc75bd6d
  407709:	fcom   DWORD PTR [ebp-0x38]
  40770c:	xor    DWORD PTR ss:[ecx],0xfffffff4
  407710:	fwait
  407711:	add    DWORD PTR [edx-0x46],esi
  407714:	mov    dl,0x45
  407716:	mov    sp,0x34a5
  40771a:	mov    ch,BYTE PTR [edx+0x13ad15b1]
  407720:	adc    al,0x56
  407722:	and    eax,0xd72014f6
  407727:	aaa    
  407728:	sub    DWORD PTR [edi+0x1665b867],esp
  40772e:	scas   al,BYTE PTR es:[edi]
  40772f:	pop    eax
  407730:	addr16 add esp,ecx
  407733:	dec    ebp
  407734:	jl     0x4076d6
  407736:	mov    esp,0xa974f01d
  40773b:	icebp  
  40773c:	dec    esp
  40773d:	adc    DWORD PTR [edx+0x7258eb19],ebp
  407743:	add    eax,0xf9d61edf
  407748:	push   ds
  407749:	ja     0x407715
  40774b:	cmp    ebx,0x44
  40774e:	sbb    DWORD PTR [ecx+0x67],0x666b9a48
  407755:	mov    edx,0xbd9e0665
  40775a:	or     bp,bp
  40775d:	sti    
  40775e:	not    BYTE PTR [ebp-0x4f900fff]
  407764:	fs (bad) 
  407766:	xlat   BYTE PTR ds:[ebx]
  407767:	gs or  al,0x60
  40776a:	or     al,0x6f
  40776c:	mov    al,bl
  40776e:	ins    BYTE PTR es:[edi],dx
  40776f:	aad    0x97
  407771:	mov    eax,ds:0x1c3a54db
  407776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407777:	mov    ah,0x43
  407779:	or     eax,0xa85041a2
  40777e:	xor    eax,0xaaa080fe
  407783:	mov    bl,0xeb
  407785:	jo     0x4077af
  407787:	xchg   DWORD PTR [eax*8-0x2058d1de],edi
  40778e:	push   ecx
  40778f:	add    DWORD PTR [ecx-0x7b],edx
  407792:	and    BYTE PTR [ebx-0x46],al
  407795:	and    edi,DWORD PTR [ebp-0x3c]
  407798:	idiv   BYTE PTR [ebx-0x6a]
  40779b:	ror    BYTE PTR [eax-0x2e],1
  40779e:	add    BYTE PTR [ebp+0x3885b31],al
  4077a4:	inc    DWORD PTR [ebx-0x1cda582f]
  4077aa:	jns    0x4077cc
  4077ac:	in     eax,dx
  4077ad:	xor    al,BYTE PTR [ebx+0x1b]
  4077b0:	addr16 out 0xcb,eax
  4077b3:	or     ebp,DWORD PTR [esi-0x9]
  4077b6:	std    
  4077b7:	mov    ah,0xa8
  4077b9:	fisub  WORD PTR [edx-0x1f]
  4077bc:	arpl   WORD PTR [esi],dx
  4077be:	xor    al,0x9a
  4077c0:	adc    ecx,esi
  4077c2:	loop   0x4077b8
  4077c4:	outs   dx,DWORD PTR ds:[esi]
  4077c5:	loop   0x407821
  4077c7:	xchg   esp,eax
  4077c8:	xlat   BYTE PTR ds:[ebx]
  4077c9:	xchg   edx,eax
  4077ca:	xor    ch,BYTE PTR [ebx-0x2fb8c174]
  4077d0:	adc    al,0xe
  4077d2:	outs   dx,DWORD PTR ds:[esi]
  4077d3:	cmp    ebx,DWORD PTR [edx]
  4077d5:	setbe  dh
  4077d8:	jo     0x4077c2
  4077da:	mov    bh,0x17
  4077dc:	add    dh,al
  4077de:	retf   0x1fa1
  4077e1:	mov    ds:0xa3112b75,al
  4077e6:	mov    ch,0x76
  4077e8:	adc    eax,0xaa12c45e
  4077ed:	ret    0x30d0
  4077f0:	test   BYTE PTR [ebx],ch
  4077f2:	cmp    DWORD PTR [esp+ecx*1+0x614462d7],0x97276f60
  4077fd:	jmp    0xdbb06574
  407802:	jl     0x4077eb
  407804:	mov    cl,0x78
  407806:	sub    ah,BYTE PTR [ecx]
  407808:	inc    edi
  407809:	mov    bh,0x98
  40780b:	ret    
  40780c:	repz dec ebp
  40780e:	xchg   ecx,eax
  40780f:	mov    ebx,0xf8e455a0
  407814:	and    al,0xbd
  407816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407817:	and    eax,0x4da90a09
  40781c:	rcr    ebx,1
  40781e:	sbb    eax,0x5e4b25c
  407823:	aaa    
  407824:	clc    
  407825:	xchg   ebp,eax
  407826:	push   ecx
  407827:	mov    al,0x89
  407829:	pop    ebp
  40782a:	cmc    
  40782b:	mov    dh,0x92
  40782d:	mov    al,0xc6
  40782f:	loopne 0x407811
  407831:	dec    edi
  407832:	dec    ecx
  407833:	xor    esp,esi
  407835:	ds jbe 0x407808
  407838:	(bad)
  40783d:	test   eax,0x4ea9d361
  407842:	push   ecx
  407843:	pop    edi
  407844:	jb     0x40783a
  407846:	out    0x64,eax
  407848:	or     ecx,0xffffff92
  40784b:	push   0x5c
  40784d:	jo     0x407868
  40784f:	je     0x407837
  407851:	sub    eax,0xe155a67e
  407856:	pop    ebx
  407857:	push   esi
  407858:	shl    BYTE PTR [esi+0x56],0x92
  40785c:	xchg   edx,eax
  40785d:	mov    esp,0x87851c9f
  407862:	inc    esi
  407863:	sahf   
  407864:	lock inc ecx
  407866:	stos   BYTE PTR es:[edi],al
  407867:	pop    edi
  407868:	aad    0x9c
  40786a:	fdiv   st(2),st
  40786c:	adc    BYTE PTR [ebx],al
  40786e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786f:	jo     0x407894
  407871:	ja     0x40785b
  407873:	fwait
  407874:	adc    BYTE PTR [ebx],0xae
  407877:	clc    
  407878:	xchg   edx,eax
  407879:	out    0xb5,eax
  40787b:	jmp    0x4078ae
  40787d:	and    al,0xf9
  40787f:	jne    0x40789d
  407881:	xchg   ecx,eax
  407882:	jnp    0x40785c
  407884:	cmc    
  407885:	mov    ebp,0x6dc77d10
  40788a:	mov    bh,0xf0
  40788c:	xor    eax,0xdc95bae0
  407891:	sub    al,0x7d
  407893:	pushf  
  407894:	sub    eax,0xd10f76c5
  407899:	bound  esi,QWORD PTR [ecx-0x4cc06bf0]
  40789f:	push   edi
  4078a0:	and    al,0xf1
  4078a2:	adc    al,0xbd
  4078a4:	into   
  4078a5:	ins    DWORD PTR es:[edi],dx
  4078a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078a7:	das    
  4078a8:	test   eax,0x368b54ad
  4078ad:	fidivr DWORD PTR [edx+0x1236ab1f]
  4078b3:	push   eax
  4078b4:	or     eax,0x8b72afa3
  4078b9:	fistp  QWORD PTR [edx+0x469597ed]
  4078bf:	jmp    0x83141e13
  4078c4:	mov    al,ds:0x634d2d5
  4078c9:	sub    eax,0x95d432cf
  4078ce:	lods   al,BYTE PTR ds:[esi]
  4078cf:	jg     0x40786f
  4078d1:	mov    ebx,0x40068169
  4078d6:	ins    DWORD PTR es:[edi],dx
  4078d7:	loope  0x407949
  4078d9:	push   edx
  4078da:	jp     0x407863
  4078dc:	or     al,0x7a
  4078de:	mov    ah,BYTE PTR [ebx-0x4c351523]
  4078e4:	neg    DWORD PTR [edx+0x522243a7]
  4078ea:	and    eax,0x55a4ecd7
  4078ef:	xchg   DWORD PTR [ebx+edi*8+0x1d1c4a71],edx
  4078f6:	repz add esp,DWORD PTR [edx+0x60]
  4078fa:	mov    ch,0x67
  4078fc:	in     al,0xc
  4078fe:	fwait
  4078ff:	test   BYTE PTR [ebp+0xb345397],dl
  407905:	jnp    0x4078ab
  407907:	push   ss
  407908:	adc    BYTE PTR [esp+eiz*2+0x67],dl
  40790c:	das    
  40790d:	jbe    0x4078e3
  40790f:	fstp   DWORD PTR [esi]
  407911:	popa   
  407912:	cli    
  407913:	(bad)  
  407914:	push   esi
  407915:	and    DWORD PTR [ecx+0x55523456],ebx
  40791b:	push   0x8687ef39
  407920:	jnp    0x4078a2
  407922:	scas   al,BYTE PTR es:[edi]
  407923:	xchg   ecx,eax
  407924:	xchg   DWORD PTR [edx+eiz*2+0x2],edx
  407928:	mov    edx,0x1812978a
  40792d:	push   ebp
  40792e:	dec    esi
  40792f:	popf   
  407930:	sahf   
  407931:	gs xchg edx,eax
  407933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407934:	inc    edx
  407935:	push   es
  407936:	dec    ebx
  407937:	ss leave 
  407939:	adc    eax,edx
  40793b:	loope  0x40794c
  40793d:	inc    ecx
  40793e:	les    esp,FWORD PTR [edi+ecx*1+0x67]
  407942:	shl    BYTE PTR [edx-0x78db80c],0xa
  407949:	mov    edx,0xeb7477e8
  40794e:	je     0x407928
  407950:	rol    BYTE PTR [edx],0x68
  407953:	loop   0x4079a8
  407955:	hlt    
  407956:	hlt    
  407957:	or     bx,bp
  40795a:	jge    0x407927
  40795c:	cs adc bl,0x43
  407960:	shl    BYTE PTR [ecx+eiz*2-0x1a],1
  407964:	mov    BYTE PTR [edx+0x2f8b946e],ch
  40796a:	and    DWORD PTR [ecx],ebx
  40796c:	xor    eax,ecx
  40796e:	aaa    
  40796f:	adc    eax,0xdb915eef
  407974:	sti    
  407975:	jb     0x40797a
  407977:	cmp    edx,0x8162eb5b
  40797d:	ins    BYTE PTR es:[edi],dx
  40797e:	mov    ah,0xe2
  407980:	mov    bh,0x88
  407982:	cmp    BYTE PTR [ebx+esi*2],bl
  407985:	aas    
  407986:	adc    DWORD PTR [edx+0x40110e79],esp
  40798c:	lock test DWORD PTR [eax-0x6595c9e5],ebp
  407993:	movzx  ebp,BYTE PTR [ebx-0x7efe6dd6]
  40799a:	sub    esp,edx
  40799c:	sub    esp,edi
  40799e:	ins    BYTE PTR es:[edi],dx
  40799f:	pop    ebx
  4079a0:	dec    edi
  4079a1:	sar    BYTE PTR [eax+0x1e6b5866],cl
  4079a7:	sbb    eax,esi
  4079a9:	test   eax,0xc7d2e7d8
  4079ae:	loop   0x407977
  4079b0:	push   es
  4079b1:	inc    BYTE PTR [esi]
  4079b3:	inc    ebx
  4079b4:	sahf   
  4079b5:	dec    ebp
  4079b6:	inc    ebx
  4079b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b8:	fcomp  DWORD PTR [ebx+eax*4+0x6a64653e]
  4079bf:	je     0x407a24
  4079c1:	mov    ecx,0xb8ee5d66
  4079c6:	cs jecxz 0x4079a0
  4079c9:	push   ss
  4079ca:	xlat   BYTE PTR ds:[ebx]
  4079cb:	xlat   BYTE PTR ds:[ebx]
  4079cc:	aam    0x81
  4079ce:	mov    ds:0x892ad6a5,al
  4079d3:	imul   esi,DWORD PTR [edi+0x407a7a59],0xffffffc0
  4079da:	adc    eax,0xa1726fe4
  4079df:	mov    ch,0xd7
  4079e1:	or     BYTE PTR [esi],0x2f
  4079e4:	xor    eax,DWORD PTR [eax-0x1c]
  4079e7:	imul   ecx,DWORD PTR ds:0xca02c618,0x46
  4079ee:	repz fisub WORD PTR [ebx-0x380a7ec3]
  4079f5:	mov    WORD PTR [ecx],cs
  4079f7:	dec    eax
  4079f8:	std    
  4079f9:	xchg   eax,edi
  4079fb:	ss in  eax,dx
  4079fd:	aas    
  4079fe:	retf   
  4079ff:	xchg   ebx,eax
  407a00:	std    
  407a01:	aaa    
  407a02:	out    dx,eax
  407a03:	aaa    
  407a04:	adc    eax,0x1acd6115
  407a09:	fadd   QWORD PTR [eax+0x54bee5d9]
  407a0f:	add    ebp,ecx
  407a11:	pop    es
  407a12:	repz inc ecx
  407a14:	sbb    ch,cl
  407a16:	jmp    0x407a3f
  407a18:	out    0xc5,eax
  407a1a:	stos   BYTE PTR es:[edi],al
  407a1b:	out    dx,al
  407a1c:	lods   al,BYTE PTR ss:[esi]
  407a1e:	cmp    DWORD PTR [ecx+edx*1-0x7e9b374b],ebp
  407a25:	inc    esp
  407a26:	lds    esp,FWORD PTR [ebp+0x22]
  407a29:	cmc    
  407a2a:	aas    
  407a2b:	pop    ebp
  407a2c:	add    edi,DWORD PTR [ebx-0x4405fe05]
  407a32:	sbb    BYTE PTR [edi],ch
  407a34:	inc    eax
  407a35:	inc    ebp
  407a36:	mov    ds:0xff0d85a0,al
  407a3b:	push   edx
  407a3c:	jno    0x4079ed
  407a3e:	pusha  
  407a3f:	(bad)  
  407a41:	sub    al,0x81
  407a43:	int    0x2b
  407a45:	adc    DWORD PTR [ecx-0x11],0x6e
  407a49:	inc    edi
  407a4a:	jmp    0x407a2e
  407a4c:	or     BYTE PTR [eax+edx*1+0x4dee80ef],dl
  407a53:	xor    eax,0xd627ed2b
  407a58:	stos   DWORD PTR es:[edi],eax
  407a59:	pop    eax
  407a5a:	test   BYTE PTR [edx+0x1686b2f9],dl
  407a60:	imul   ecx,edi,0xffffffbd
  407a63:	push   edi
  407a64:	jmp    0xf0c8861
  407a69:	adc    al,0xf4
  407a6b:	cs sbb al,0x9e
  407a6e:	mov    edx,0xf00917e1
  407a73:	imul   BYTE PTR [ebx+0x13]
  407a76:	xchg   BYTE PTR [ebx-0x224a2b1f],ch
  407a7c:	loopne 0x407a47
  407a7e:	lea    esp,[ebp-0x2a]
  407a81:	icebp  
  407a82:	pushf  
  407a83:	(bad)  
  407a84:	enter  0x339a,0xef
  407a88:	mov    esp,ebp
  407a8a:	fs mov ch,bl
  407a8d:	ss sub eax,0x1a440692
  407a93:	test   eax,0xf0c8a1b2
  407a98:	push   esi
  407a99:	fcomp  QWORD PTR [ecx]
  407a9b:	jge    0x407b01
  407a9d:	cmp    eax,0xa9857ff8
  407aa2:	in     al,0x96
  407aa4:	mov    ds:0xdcf566b4,eax
  407aa9:	test   eax,0x71a958ac
  407aae:	cmp    eax,0xbcbf5429
  407ab3:	sbb    al,0x3
  407ab5:	loop   0x407a38
  407ab7:	outs   dx,BYTE PTR ds:[esi]
  407ab8:	jo     0x407aad
  407aba:	call   0x98eb:0x913fcd8b
  407ac1:	stc    
  407ac2:	xchg   esi,eax
  407ac3:	add    al,BYTE PTR [edi+0x48]
  407ac6:	pop    ebp
  407ac8:	xor    dh,BYTE PTR [ebp-0x16429c79]
  407ace:	inc    ebx
  407acf:	or     ecx,0xffffffc3
  407ad2:	repnz xchg esi,eax
  407ad4:	inc    ebx
  407ad5:	pop    edx
  407ad6:	pusha  
  407ad7:	fdivr  QWORD PTR [edi+0x38]
  407ada:	(bad)  
  407adb:	and    BYTE PTR [eax+0x793d531],ch
  407ae1:	add    BYTE PTR [ebp-0xe],cl
  407ae4:	sub    edx,edi
  407ae6:	xor    dl,BYTE PTR ds:0x248872ff
  407aec:	dec    eax
  407aed:	popf   
  407aee:	jmp    0x87cb:0x714def0b
  407af5:	sbb    al,0xab
  407af7:	push   eax
  407af8:	mov    bl,0x73
  407afa:	jge    0x407b39
  407afc:	sub    bl,BYTE PTR [eax]
  407afe:	sahf   
  407aff:	(bad)  
  407b00:	jmp    DWORD PTR [esi+esi*2]
  407b03:	ret    0xcde7
  407b06:	outs   dx,BYTE PTR ds:[esi]
  407b07:	out    0x94,eax
  407b09:	mov    dh,0x53
  407b0b:	ficom  DWORD PTR [esi-0x38]
  407b0e:	in     al,dx
  407b0f:	out    0xc,al
  407b11:	cs adc al,0xbc
  407b14:	fwait
  407b15:	pop    es
  407b16:	and    BYTE PTR [ecx+0x35],ah
  407b19:	cwde   
  407b1a:	arpl   WORD PTR [ecx-0x40],si
  407b1d:	addr16 sbb eax,0xc55304c
  407b23:	ret    0xb9e1
  407b26:	inc    edx
  407b27:	adc    esi,edi
  407b29:	push   DWORD PTR [edx-0x72]
  407b2c:	les    ecx,FWORD PTR [edx+eiz*2]
  407b2f:	mov    WORD PTR [ecx],gs
  407b31:	jno    0x407b88
  407b33:	mov    eax,0x4226cb53
  407b38:	inc    esi
  407b39:	nop
  407b3a:	adc    BYTE PTR [eax+0x42],ch
  407b3d:	(bad)  
  407b3f:	add    eax,0xffffff8b
  407b42:	rol    BYTE PTR [edx-0x454941ff],cl
  407b48:	and    BYTE PTR [ebx],ch
  407b4a:	ret    
  407b4b:	mov    ebp,0x18d9e4d9
  407b50:	pop    ecx
  407b51:	dec    eax
  407b52:	rcr    DWORD PTR [ecx+0x694ce488],0x51
  407b59:	(bad)
  407b5d:	mov    cl,0x4b
  407b5f:	jne    0x407b79
  407b61:	pop    ds
  407b62:	push   eax
  407b63:	fcomip st,st(2)
  407b65:	cmp    DWORD PTR [esp+esi*2],ebp
  407b68:	cmp    eax,0xa687e7f
  407b6d:	add    eax,eax
  407b6f:	cmp    eax,0x65a0632b
  407b74:	cmp    eax,0x75da95e1
  407b79:	pusha  
  407b7a:	adc    edx,ecx
  407b7c:	sbb    esi,edi
  407b7e:	out    0x49,eax
  407b80:	pop    esi
  407b81:	out    dx,al
  407b82:	mov    edi,0x7623b876
  407b87:	out    0xa5,eax
  407b89:	jns    0x407be5
  407b8b:	sti    
  407b8c:	sbb    ah,bl
  407b8e:	xcrypt-ofb (bad)
  407b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b90:	stos   DWORD PTR es:[edi],eax
  407b91:	jne    0x407b36
  407b93:	(bad)  
  407b94:	fisttp DWORD PTR [ecx+0x66]
  407b97:	jp     0x407b3d
  407b99:	loopne 0x407c08
  407b9b:	in     eax,dx
  407b9c:	dec    esp
  407b9d:	cld    
  407b9e:	adc    bh,BYTE PTR [edx]
  407ba0:	xchg   edi,eax
  407ba1:	cli    
  407ba2:	cmp    DWORD PTR [edx],ecx
  407ba4:	mov    ecx,0x873ef5d
  407ba9:	xor    ch,dh
  407bab:	sbb    al,0x4f
  407bad:	fdivr  QWORD PTR [edx-0xc]
  407bb0:	mov    bl,0x81
  407bb2:	cld    
  407bb3:	leave  
  407bb4:	xor    DWORD PTR [ecx],ebp
  407bb6:	xchg   ebx,eax
  407bb7:	(bad)
  407bbb:	xchg   esp,eax
  407bbc:	push   cs
  407bbd:	dec    ebp
  407bbe:	fist   DWORD PTR [edx]
  407bc0:	out    0x77,eax
  407bc2:	and    eax,0x989967b4
  407bc7:	loope  0x407bb4
  407bc9:	test   eax,0xa478587
  407bce:	pushf  
  407bcf:	mov    esi,0x4da279bb
  407bd4:	mov    ah,0x87
  407bd6:	xor    al,al
  407bd8:	cdq    
  407bd9:	test   BYTE PTR [edx],bl
  407bdb:	dec    esp
  407bdc:	lods   al,BYTE PTR ds:[esi]
  407bdd:	aad    0x3e
  407bdf:	dec    ebp
  407be0:	jp     0x407c0d
  407be2:	sbb    BYTE PTR [edx+edx*2+0x41],0x63
  407be7:	daa    
  407be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bea:	sub    al,0xf
  407bec:	jmp    0xbcbcb05
  407bf1:	add    DWORD PTR [eax],eax
  407bf3:	inc    edx
  407bf4:	ins    BYTE PTR es:[edi],dx
  407bf5:	sbb    eax,DWORD PTR [eax-0x14]
  407bf8:	aad    0x28
  407bfa:	icebp  
  407bfb:	pop    edx
  407bfc:	mov    BYTE PTR [edi*2+0x42018fae],ah
  407c03:	jno    0x407bf0
  407c05:	inc    ebp
  407c06:	or     al,0xa2
  407c08:	es loopne 0x407bb3
  407c0b:	xor    bh,BYTE PTR [esi-0x30a3dc1a]
  407c11:	adc    DWORD PTR [ebx+0x4b],ebx
  407c14:	gs cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  407c17:	xlat   BYTE PTR ds:[ebx]
  407c18:	xchg   ebx,eax
  407c19:	jmp    0xe3e4:0xcd185c35
  407c20:	jns    0x407c76
  407c22:	xor    DWORD PTR [edx+0x51],ebx
  407c25:	ffreep st(2)
  407c27:	ss pop ebp
  407c29:	push   ebx
  407c2a:	inc    ecx
  407c2b:	cmp    eax,DWORD PTR [ebx+0x61f9c88b]
  407c31:	xchg   BYTE PTR [ecx],al
  407c33:	ins    DWORD PTR es:[edi],dx
  407c34:	cld    
  407c35:	adc    eax,0x52bff9b7
  407c3a:	jmp    0x407c33
  407c3c:	je     0x407c5b
  407c3e:	jle    0x407c07
  407c40:	push   edi
  407c41:	data16 ffreep st(1)
  407c44:	and    al,0xc6
  407c46:	inc    ebx
  407c47:	cli    
  407c48:	jmp    0x32c4db51
  407c4d:	and    bl,BYTE PTR [edx+ebx*1+0x5bc4bd97]
  407c54:	scas   al,BYTE PTR es:[edi]
  407c55:	inc    edi
  407c56:	test   al,0xf8
  407c58:	(bad)  
  407c59:	mov    ecx,0x73719d28
  407c5e:	or     BYTE PTR [edi+0x66],ch
  407c61:	popf   
  407c62:	xchg   ecx,eax
  407c63:	mov    ecx,0x9504b551
  407c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c69:	and    eax,0x41b071dc
  407c6e:	cmp    DWORD PTR [eax-0x345482df],ebx
  407c74:	das    
  407c75:	gs out 0x2f,eax
  407c78:	mov    ecx,0xf9c0d0a5
  407c7d:	adc    DWORD PTR [edx-0x59563177],ecx
  407c83:	adc    ecx,ecx
  407c85:	addr16 mov dl,0x71
  407c88:	je     0x407cd0
  407c8a:	push   es
  407c8b:	xchg   edx,eax
  407c8c:	push   ebx
  407c8d:	cs pushw cs
  407c90:	rcr    DWORD PTR [eax+0x64],0xf
  407c94:	mov    eax,ds:0x121f6398
  407c99:	mov    dh,0x27
  407c9b:	loop   0x407cf5
  407c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c9e:	sbb    DWORD PTR [ebx+0x2f],ebx
  407ca1:	push   0xffffffa9
  407ca3:	in     al,dx
  407ca4:	inc    eax
  407ca5:	inc    ebp
  407ca6:	and    BYTE PTR [esi],0xd1
  407ca9:	lods   eax,DWORD PTR ds:[esi]
  407caa:	xchg   ecx,eax
  407cab:	rol    DWORD PTR [ebp+0x5c74eada],cl
  407cb1:	jns    0x407c4c
  407cb3:	sub    eax,0xd7aff2ea
  407cb8:	inc    esp
  407cb9:	adc    DWORD PTR [ecx],esi
  407cbb:	pop    ecx
  407cbc:	outs   dx,DWORD PTR ds:[esi]
  407cbd:	js     0x407c54
  407cbf:	push   edx
  407cc0:	sbb    eax,0x7a31ac37
  407cc5:	inc    esp
  407cc6:	mov    eax,ds:0xf296c1c4
  407ccb:	mov    dl,0xf5
  407ccd:	xor    DWORD PTR [edi-0x4cf6b63e],esp
  407cd3:	pop    esp
  407cd4:	or     al,BYTE PTR [edx+0x1a]
  407cd7:	cmp    dh,BYTE PTR [ebx]
  407cd9:	imul   eax,DWORD PTR [eax],0xf3adb331
  407cdf:	add    al,0x72
  407ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce2:	(bad)  
  407ce3:	repnz xor eax,DWORD PTR [ebx+0x47b9d805]
  407cea:	sbb    cl,dl
  407cec:	(bad)  
  407ced:	push   esp
  407cee:	in     eax,dx
  407cef:	mov    bh,0x57
  407cf1:	test   al,0x7d
  407cf3:	and    al,BYTE PTR [esi+ebp*1-0x7e2a5ed5]
  407cfa:	sub    eax,0xf6aafcca
  407cff:	xchg   edx,eax
  407d00:	jmp    0x64d9e5
  407d05:	mov    dl,0xee
  407d07:	xchg   ecx,eax
  407d08:	fst    QWORD PTR [edi+ebx*1+0x43e69eb9]
  407d0f:	aam    0xf7
  407d11:	ret    0xb91f
  407d14:	xor    esi,DWORD PTR ds:0xed5707f
  407d1a:	sbb    dh,BYTE PTR [ebp-0x1b]
  407d1d:	les    edx,FWORD PTR [ecx-0x8]
  407d20:	aaa    
  407d21:	out    0x99,al
  407d23:	test   eax,0x96600648
  407d28:	jns    0x407cc6
  407d2a:	mov    bh,0xa1
  407d2c:	or     al,0x5c
  407d2e:	es push edx
  407d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d31:	and    al,0x23
  407d33:	dec    ebp
  407d34:	stc    
  407d35:	ss inc edi
  407d37:	sub    eax,0x6d157b97
  407d3c:	mov    edi,edx
  407d3e:	sub    BYTE PTR [ebp-0x42],dl
  407d41:	and    eax,0xdc75fff7
  407d46:	clc    
  407d47:	mov    eax,0xdc9dfd57
  407d4c:	stos   DWORD PTR es:[edi],eax
  407d4d:	jo     0x407cd9
  407d4f:	dec    esi
  407d50:	lock mov BYTE PTR [edx],dl
  407d53:	leave  
  407d54:	mov    ah,0x4d
  407d56:	mov    dl,0x6c
  407d58:	inc    esi
  407d59:	xor    BYTE PTR [eax+edi*1-0x41b5466b],al
  407d60:	jne    0x407d3d
  407d62:	fisttp DWORD PTR [edx]
  407d64:	ja     0x407d08
  407d66:	push   ecx
  407d67:	jmp    0x407d5b
  407d69:	aas    
  407d6a:	out    dx,eax
  407d6b:	aad    0xcf
  407d6d:	push   esp
  407d6e:	sub    bl,dl
  407d70:	scas   al,BYTE PTR es:[edi]
  407d71:	les    esi,FWORD PTR [ebx+0x53]
  407d74:	xor    eax,0xac71aaba
  407d79:	test   eax,0x408e4b2b
  407d7e:	add    bh,cl
  407d80:	(bad)  
  407d81:	jmp    0xff8cab95
  407d86:	adc    cl,dl
  407d88:	out    0x9b,al
  407d8a:	mov    bh,0x12
  407d8c:	leave  
  407d8d:	(bad)  
  407d8e:	cwde   
  407d8f:	in     al,0xa0
  407d91:	fnstenv [ebx]
  407d93:	in     al,dx
  407d94:	aam    0x1e
  407d96:	imul   edi,DWORD PTR [ecx],0x7c
  407d99:	ins    BYTE PTR es:[edi],dx
  407d9a:	mov    edx,0x4903542a
  407d9f:	or     eax,0x2ef7ed9
  407da4:	(bad)  
  407da5:	stos   BYTE PTR es:[edi],al
  407da6:	xor    esp,DWORD PTR [edx]
  407da8:	cmc    
  407da9:	mov    ds:0xf6bc8454,al
  407dae:	frstor [eax]
  407db0:	jno    0x407dc1
  407db2:	popf   
  407db3:	loopne 0x407db6
  407db5:	or     cl,al
  407db7:	cmc    
  407db8:	test   BYTE PTR [ebx+0x54164bc],dl
  407dbe:	hlt    
  407dbf:	out    dx,eax
  407dc0:	aaa    
  407dc1:	jmp    0x5cb7:0xd3968012
  407dc8:	mov    bh,0x0
  407dca:	dec    ebp
  407dcb:	add    BYTE PTR [ecx+0x2b8b07e2],dh
  407dd1:	les    ecx,FWORD PTR [edi]
  407dd3:	and    bh,ah
  407dd5:	inc    edx
  407dd6:	dec    ebp
  407dd7:	ss ret 
  407dd9:	aas    
  407dda:	xchg   DWORD PTR [edi],esp
  407ddc:	dec    esp
  407ddd:	xchg   BYTE PTR [ecx+0x69059d33],ch
  407de3:	pop    ebp
  407de4:	ja     0x407e4d
  407de6:	push   es
  407de7:	fidiv  DWORD PTR [eax]
  407de9:	es pop esi
  407deb:	add    DWORD PTR [ecx-0x7e],0x89a94c81
  407df2:	mov    esp,0x465b2042
  407df7:	out    0xd8,al
  407df9:	aas    
  407dfa:	push   ecx
  407dfb:	(bad)  
  407dfc:	aam    0x47
  407dfe:	inc    edx
  407dff:	xor    eax,0x12f27d65
  407e04:	unpcklps xmm7,XMMWORD PTR [eax-0x63]
  407e08:	push   eax
  407e09:	mov    BYTE PTR [ecx-0x7e],0xf0
  407e0d:	cmc    
  407e0e:	test   BYTE PTR [esi],bh
  407e10:	in     al,0x2b
  407e12:	adc    bh,dl
  407e14:	mov    dx,0xee5
  407e18:	push   ebx
  407e19:	loop   0x407e07
  407e1b:	scas   al,BYTE PTR es:[edi]
  407e1c:	imul   ebp,DWORD PTR es:[ebx],0xa51f1da
  407e23:	outs   dx,DWORD PTR ds:[esi]
  407e24:	push   ebp
  407e25:	jmp    0x8d48:0xd1a8cd2a
  407e2c:	inc    edx
  407e2d:	mov    ds:0xe43cab40,eax
  407e32:	push   0x5d0a0e6
  407e37:	getsec 
  407e39:	cwde   
  407e3a:	push   ebp
  407e3b:	lds    edi,FWORD PTR [esi+0x2ff1a730]
  407e41:	sbb    DWORD PTR [eax],eax
  407e43:	fist   WORD PTR [ebx-0x5a]
  407e46:	push   esi
  407e47:	mov    ch,0xa8
  407e49:	add    DWORD PTR [edx-0x49],esi
  407e4c:	pop    ebp
  407e4d:	adc    bl,ch
  407e4f:	inc    ecx
  407e50:	data16 jns 0x407e45
  407e53:	jns    0x407e17
  407e55:	adc    DWORD PTR [ecx-0x14],0xfffffff4
  407e59:	sbb    al,0xce
  407e5b:	pop    ecx
  407e5c:	dec    esp
  407e5d:	je     0x407deb
  407e5f:	in     eax,0x3b
  407e61:	cmc    
  407e62:	mov    al,ds:0x41db3b75
  407e67:	jb     0x407e33
  407e69:	add    BYTE PTR [ecx],bl
  407e6b:	add    dh,ch
  407e6d:	push   0xffffffc1
  407e6f:	push   ebx
  407e70:	or     al,dh
  407e72:	xchg   esp,eax
  407e73:	rcr    BYTE PTR [ebx+0x5ded5c34],cl
  407e79:	xchg   esp,eax
  407e7a:	fwait
  407e7b:	dec    edx
  407e7c:	std    
  407e7d:	push   edi
  407e7e:	inc    eax
  407e7f:	lods   eax,DWORD PTR ds:[esi]
  407e80:	xchg   esi,eax
  407e81:	fst    QWORD PTR [edx+0x1a]
  407e84:	neg    DWORD PTR [edx-0x7f]
  407e87:	jmp    0x3951:0x4cb1b5d5
  407e8e:	hlt    
  407e8f:	inc    ebp
  407e90:	xor    edx,DWORD PTR [ebx]
  407e92:	sbb    BYTE PTR [ecx+0x4b],dh
  407e95:	jae    0x407eb4
  407e97:	rcl    BYTE PTR [ebp+ecx*2-0x2f34be61],cl
  407e9e:	add    DWORD PTR [ebp+ebx*2-0x6b],edx
  407ea2:	imul   ebx,DWORD PTR [edx],0x6e40d948
  407ea8:	inc    esp
  407ea9:	hlt    
  407eaa:	jmp    0x407ea5
  407eac:	stos   BYTE PTR es:[edi],al
  407ead:	cld    
  407eae:	sub    eax,0x98831b9
  407eb3:	jge    0x407e98
  407eb5:	add    al,0x6c
  407eb7:	jecxz  0x407e73
  407eb9:	fidiv  DWORD PTR [edi-0x6a]
  407ebc:	cli    
  407ebd:	mov    edx,0xc389236c
  407ec2:	inc    ebx
  407ec3:	std    
  407ec4:	push   edi
  407ec5:	or     bh,BYTE PTR [ecx-0x34]
  407ec8:	ror    DWORD PTR [esi-0x4af932fa],1
  407ece:	es aaa 
  407ed0:	mov    bl,0x1c
  407ed2:	ins    DWORD PTR es:[edi],dx
  407ed3:	inc    esp
  407ed4:	xor    eax,0x80ff1f32
  407ed9:	inc    ebp
  407eda:	adc    al,0x56
  407edc:	ret    0xdf4c
  407edf:	or     BYTE PTR [esi+0x33],0x5e
  407ee3:	mov    eax,ds:0x4a3df8a
  407ee8:	and    BYTE PTR [eax],bh
  407eea:	or     BYTE PTR [eax+0x19],ah
  407eed:	pop    edx
  407eee:	sbb    BYTE PTR [esi+0x4641d46b],ah
  407ef4:	in     al,dx
  407ef5:	mov    eax,0x61fed9e9
  407efa:	xor    al,0x53
  407efc:	sub    DWORD PTR [bp+0x3d],edi
  407f00:	push   ebx
  407f01:	add    al,0xa0
  407f03:	mov    ch,0x13
  407f05:	mov    esp,0xf46ec744
  407f0a:	ins    DWORD PTR es:[edi],dx
  407f0b:	xchg   dl,dh
  407f0d:	lods   eax,DWORD PTR ds:[esi]
  407f0e:	cmp    ecx,ebp
  407f10:	scas   al,BYTE PTR es:[edi]
  407f11:	mov    bh,0x6
  407f13:	or     al,0x8f
  407f15:	xchg   ebx,eax
  407f16:	cli    
  407f17:	sub    al,0x20
  407f19:	xchg   edi,eax
  407f1a:	lock stos DWORD PTR es:[edi],eax
  407f1c:	or     eax,0xdf1816db
  407f21:	mov    ah,0x2b
  407f23:	(bad)  
  407f24:	and    DWORD PTR [esi+esi*2],eax
  407f27:	addr16 out 0x28,al
  407f2a:	add    esp,DWORD PTR [ecx-0x529fc9f6]
  407f30:	shl    edx,0x8a
  407f33:	sahf   
  407f34:	es or  eax,0xb6439d4c
  407f3a:	mov    BYTE PTR [ebp+0x1d],0xf8
  407f3e:	rcl    DWORD PTR [edx],1
  407f40:	mov    cl,0x1d
  407f42:	repz in eax,0xd0
  407f45:	mov    al,0xbf
  407f47:	mov    al,ds:0xcca47de4
  407f4c:	or     BYTE PTR [eax+0x2c],ah
  407f4f:	mov    ebx,ss
  407f51:	je     0x407f0a
  407f53:	call   0xa4857292
  407f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f59:	shl    BYTE PTR [edi],1
  407f5b:	pop    esp
  407f5c:	jae    0x407f42
  407f5e:	pop    edx
  407f5f:	inc    ecx
  407f60:	pop    edi
  407f61:	pop    ds
  407f62:	call   0xf62c253c
  407f67:	test   DWORD PTR [edi],edi
  407f69:	mov    dh,0xe
  407f6b:	jl     0x407f00
  407f6d:	adc    BYTE PTR [ecx],dh
  407f6f:	outs   dx,BYTE PTR ds:[esi]
  407f70:	jmp    FWORD PTR [edi+0x69]
  407f73:	call   0x1f8d07d6
  407f78:	pop    ebx
  407f79:	xchg   BYTE PTR [ecx+eax*4],al
  407f7c:	loope  0x407f8d
  407f7e:	adc    cl,BYTE PTR [ecx]
  407f80:	cli    
  407f81:	mov    ah,dl
  407f83:	push   ss
  407f84:	mov    BYTE PTR [ecx],ch
  407f86:	push   ds
  407f87:	lahf   
  407f88:	sbb    DWORD PTR [ebp-0x10b812a0],ebx
  407f8e:	pop    eax
  407f8f:	sbb    al,ch
  407f91:	aas    
  407f92:	and    ah,BYTE PTR [ebp-0x35]
  407f95:	push   cs
  407f96:	inc    ecx
  407f97:	and    DWORD PTR [bx-0x2248],eax
  407f9c:	xlat   BYTE PTR ds:[ebx]
  407f9d:	inc    ecx
  407f9e:	je     0x407f4f
  407fa0:	pop    ebp
  407fa1:	cdq    
  407fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa3:	idiv   BYTE PTR [ebx]
  407fa5:	enter  0xc744,0xf9
  407fa9:	stc    
  407faa:	daa    
  407fab:	and    esi,DWORD PTR [edi]
  407fad:	mov    dh,0x76
  407faf:	addr16 and esi,esp
  407fb2:	loope  0x408008
  407fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb5:	xor    DWORD PTR [edx-0x32],esp
  407fb8:	mov    ch,0xf4
  407fba:	xchg   esi,eax
  407fbb:	jmp    0x407f52
  407fbd:	loop   0x40803c
  407fbf:	adc    BYTE PTR [ecx+0x2b],dl
  407fc2:	dec    edi
  407fc3:	pop    ecx
  407fc4:	cmp    edx,ebp
  407fc6:	sbb    eax,ebx
  407fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc9:	mov    dl,dh
  407fcb:	(bad)  
  407fcc:	rol    BYTE PTR [ebx+0x3],1
  407fcf:	in     eax,0xff
  407fd1:	xor    DWORD PTR [ecx-0x18],edx
  407fd4:	push   ds
  407fd5:	ins    DWORD PTR es:[edi],dx
  407fd6:	outs   dx,BYTE PTR ds:[esi]
  407fd7:	xor    eax,0x4bb66be4
  407fdc:	scas   eax,DWORD PTR es:[edi]
  407fdd:	arpl   WORD PTR [ecx-0x17fde984],dx
  407fe3:	cmp    cl,ah
  407fe5:	lds    edi,FWORD PTR [ebx+0x683b2a2e]
  407feb:	add    bh,bl
  407fed:	in     eax,dx
  407fee:	sub    BYTE PTR [edi*4+0x64b5440e],0xfb
  407ff6:	push   ds
  407ff7:	ss sbb al,0xa7
  407ffa:	mov    WORD PTR [ecx+eax*1-0x5e],ss
  407ffe:	jnp    0x407fb7
  408000:	adc    BYTE PTR [esp+ebp*1-0x6fd88891],ah
  408007:	shl    DWORD PTR ds:0xe1b12774,1
  40800d:	dec    eax
  40800e:	int    0x55
  408010:	inc    BYTE PTR [edx-0x6]
  408013:	xor    DWORD PTR [eax+ecx*4+0x32],ebx
  408017:	push   eax
  408018:	es or  ecx,esi
  40801b:	sbb    al,al
  40801d:	aas    
  40801e:	mov    al,0x6a
  408020:	call   DWORD PTR [ecx-0x19a400cb]
  408026:	mov    esi,0x7113b70f
  40802b:	mov    esi,0xa6eb56b4
  408030:	sbb    BYTE PTR [edi+0x25],ch
  408033:	xor    eax,0x769ee1a0
  408038:	aam    0x16
  40803a:	xor    bh,BYTE PTR [edx+0x55456038]
  408040:	sub    eax,DWORD PTR [edi]
  408042:	sub    eax,0x993acc55
  408047:	adc    al,0x13
  408049:	popa   
  40804a:	int3   
  40804b:	inc    ecx
  40804c:	cmp    ah,BYTE PTR [edi+0x187aaf98]
  408052:	sub    ebp,edx
  408054:	push   0xffffffa7
  408056:	sub    BYTE PTR [ebx+0x4cc3735c],al
  40805c:	icebp  
  40805d:	dec    esp
  40805e:	cmp    DWORD PTR [ebx],ebx
  408060:	push   es
  408061:	arpl   WORD PTR [ebx-0x26],bx
  408064:	xchg   BYTE PTR [ecx+eax*4],dh
  408067:	ficom  WORD PTR [esi-0x48]
  40806a:	adc    eax,0xe4b416a7
  40806f:	adc    BYTE PTR [edi],0xd8
  408072:	daa    
  408073:	xor    DWORD PTR [ebx+0x38],esp
  408076:	jmp    0x4080a7
  408078:	aas    
  408079:	pop    es
  40807a:	repz scas al,BYTE PTR es:[edi]
  40807c:	xchg   esi,eax
  40807d:	sub    BYTE PTR [edx+0x58],bl
  408080:	xor    BYTE PTR [edi-0x6c],0x24
  408084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408085:	cmp    bh,BYTE PTR [edi+0xf243885]
  40808b:	mov    ds:0xad0ef305,al
  408090:	sti    
  408091:	push   cs
  408092:	pop    esp
  408093:	mov    esi,0x3d94616c
  408098:	dec    edi
  408099:	hlt    
  40809a:	sub    eax,0xec6d5bdb
  40809f:	cs pop ecx
  4080a1:	xchg   DWORD PTR ds:0x816be551,ebx
  4080a7:	enter  0xe134,0x59
  4080ab:	xor    al,0x12
  4080ad:	jbe    0x40808f
  4080af:	(bad)  [eax-0x69f5b80c]
  4080b5:	push   cs
  4080b6:	sub    DWORD PTR [edx],edx
  4080b8:	arpl   WORD PTR [edi+0x1c51dba8],cx
  4080be:	push   edx
  4080bf:	out    dx,eax
  4080c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080c1:	jae    0x40813d
  4080c3:	push   esi
  4080c4:	sbb    al,ah
  4080c6:	cmp    BYTE PTR [esi],0xa5
  4080c9:	add    ecx,ebx
  4080cb:	sub    eax,0x4cfc1bab
  4080d0:	jecxz  0x408136
  4080d2:	repz stc 
  4080d4:	add    al,0x96
  4080d6:	mov    ebx,0x31a16926
  4080db:	jg     0x4080a8
  4080dd:	call   0x470:0x9b9d590
  4080e4:	inc    esi
  4080e5:	jmp    0x40807d
  4080e7:	sbb    eax,0x4644c1dc
  4080ec:	call   0x697aa732
  4080f1:	aas    
  4080f2:	mov    ds:0xc2fe3a1e,al
  4080f7:	jo     0x40814a
  4080f9:	pop    ss
  4080fa:	pop    edi
  4080fb:	repz lea ecx,[esi-0x2f3e7db7]
  408102:	adc    edi,DWORD PTR [eax+0x79f6ec3b]
  408108:	std    
  408109:	data16 out 0x6f,al
  40810c:	mov    gs,ecx
  40810e:	jp     0x408127
  408110:	adc    al,0x75
  408112:	jmp    0x408157
  408114:	int3   
  408115:	mov    bh,al
  408117:	rol    DWORD PTR [ecx-0x73950967],1
  40811d:	jae    0x4080d6
  40811f:	aam    0x60
  408121:	in     eax,dx
  408122:	lea    ecx,[eax]
  408124:	test   eax,0x9b76447a
  408129:	pushf  
  40812a:	sahf   
  40812b:	mov    dl,0x10
  40812d:	mov    ds:0x571387,eax
  408132:	and    BYTE PTR [ebx],bl
  408134:	add    DWORD PTR [ebp+esi*1-0x5b26b450],0xffffffcb
  40813c:	pop    eax
  40813d:	cmp    bh,BYTE PTR [edi]
  40813f:	adc    ecx,esp
  408141:	ret    0xd9d2
  408144:	push   ss
  408145:	mov    ecx,0xe65ecec6
  40814a:	retf   0x3145
  40814d:	fist   WORD PTR [edi+0xaa72566]
  408153:	cwde   
  408154:	mov    ch,0x1c
  408156:	imul   edi,DWORD PTR [ebx],0x34
  408159:	xchg   ebp,eax
  40815a:	jns    0x4081a3
  40815c:	test   ebx,ebp
  40815e:	into   
  40815f:	dec    esi
  408160:	jle    0x408162
  408162:	(bad)  
  408163:	pop    ecx
  408164:	mov    esp,esp
  408166:	ret    0xdd2b
  408169:	(bad)  
  40816a:	(bad)  
  40816b:	dec    DWORD PTR [ebx]
  40816d:	mov    gs,ecx
  40816f:	cmp    eax,0xa6fa8877
  408174:	cmp    DWORD PTR [eax+0x371d02a],esi
  40817a:	mov    bl,0x45
  40817c:	adc    ch,BYTE PTR [eax+0x53ef21a9]
  408182:	jmp    0xf72c:0x98f00456
  408189:	in     eax,0xe6
  40818b:	fimul  DWORD PTR [eax]
  40818d:	cmp    ah,dh
  40818f:	sti    
  408190:	retf   0x74d1
  408193:	sbb    eax,0x53ffa6c8
  408198:	js     0x408140
  40819a:	ffree  st(5)
  40819c:	ja     0x40812b
  40819e:	ins    DWORD PTR es:[edi],dx
  40819f:	outs   dx,DWORD PTR ds:[esi]
  4081a0:	js     0x408193
  4081a2:	icebp  
  4081a3:	push   cs
  4081a4:	jmp    0x6beb4f59
  4081a9:	push   0xaa5a0375
  4081ae:	xchg   DWORD PTR [ecx],ecx
  4081b0:	jle    0x408145
  4081b2:	add    DWORD PTR [eax],esp
  4081b4:	and    eax,0xa30abc21
  4081b9:	mov    eax,ds:0xeb6daf40
  4081be:	adc    ecx,eax
  4081c0:	mov    ah,0xfa
  4081c2:	fisub  DWORD PTR [edx-0x328e18f1]
  4081c8:	mov    esp,0x64273058
  4081cd:	ret    0x5514
  4081d0:	les    esp,FWORD PTR [ecx+0x4f28d63]
  4081d6:	mov    ah,0xbb
  4081d8:	mov    DWORD PTR [edx+0x1e],0x37e068bd
  4081df:	(bad)  
  4081e0:	jle    0x40818f
  4081e2:	mov    DWORD PTR [ebp+0x78],esp
  4081e5:	jb     0x4081e3
  4081e7:	(bad)  
  4081e9:	jle    0x4081cf
  4081eb:	or     al,BYTE PTR [esi+esi*2+0x9]
  4081ef:	clc    
  4081f0:	mov    edi,0xa13bf78c
  4081f5:	sub    BYTE PTR [eax-0x1a09c072],ah
  4081fb:	jge    0x408223
  4081fd:	push   es
  4081fe:	(bad)  
  408200:	or     DWORD PTR [ebx+0x3fa1bfe3],ebp
  408206:	push   edi
  408207:	xchg   esp,eax
  408208:	cmp    al,0xc0
  40820a:	fwait
  40820b:	lods   al,BYTE PTR ds:[esi]
  40820c:	in     eax,0x11
  40820e:	cmc    
  40820f:	inc    edi
  408210:	out    0xa2,eax
  408212:	loope  0x4081ea
  408214:	and    eax,0x8361064f
  408219:	(bad)  
  40821a:	aad    0x46
  40821c:	mov    bl,0xf7
  40821e:	scas   al,BYTE PTR es:[edi]
  40821f:	enter  0x72ab,0xd
  408223:	push   esi
  408224:	lods   eax,DWORD PTR ds:[esi]
  408225:	sar    BYTE PTR [eax],1
  408227:	mov    eax,0x952e96bc
  40822c:	mov    WORD PTR [ebp-0x74],fs
  40822f:	in     eax,0xb5
  408231:	sbb    edi,DWORD PTR [edi]
  408233:	push   edi
  408234:	ins    BYTE PTR es:[edi],dx
  408235:	shl    esi,1
  408237:	fs push edi
  408239:	jp     0x4081cf
  40823b:	add    bl,al
  40823d:	mov    bl,0xc7
  40823f:	retf   
  408240:	sahf   
  408241:	lahf   
  408242:	or     al,ch
  408244:	nop
  408245:	push   ss
  408246:	sbb    ecx,DWORD PTR [edx]
  408248:	xlat   BYTE PTR ds:[ebx]
  408249:	mov    edx,0xf80079ea
  40824e:	fdivr  DWORD PTR [esi+0x78fdef2f]
  408254:	in     al,dx
  408255:	(bad)
  408258:	jl     0x4082b7
  40825a:	pop    ecx
  40825b:	repnz mov ebp,0x536ab83
  408261:	jmp    0x4081f8
  408263:	loop   0x408289
  408265:	push   ds
  408266:	adc    BYTE PTR ss:[edi],0xf9
  40826a:	popa   
  40826b:	xchg   edx,eax
  40826c:	push   0xffffffe7
  40826e:	dec    ecx
  40826f:	shl    DWORD PTR [ebx+0x5e1b9ef8],1
  408275:	push   esp
  408276:	cwde   
  408277:	dec    edx
  408278:	sub    DWORD PTR [edi-0x36],esp
  40827b:	dec    edx
  40827c:	fist   DWORD PTR [edi+esi*4+0x2d]
  408280:	stos   DWORD PTR es:[edi],eax
  408281:	test   BYTE PTR [eax],0x42
  408284:	cmp    BYTE PTR [ecx-0x18],bh
  408287:	mov    bl,BYTE PTR [ecx+0x29ab3dbc]
  40828d:	mov    ebx,0x69e0b9fc
  408292:	nop
  408293:	adc    eax,0x74fb2cb3
  408298:	mov    ah,dl
  40829a:	sar    DWORD PTR [ebx+0x2e],1
  40829d:	iret   
  40829e:	pop    eax
  40829f:	int    0x4d
  4082a1:	cli    
  4082a2:	(bad)  
  4082a3:	mov    ebx,0x214a989d
  4082a8:	nop
  4082a9:	adc    BYTE PTR ds:0xfa97182c,ah
  4082af:	and    DWORD PTR [eax+0x29],ebx
  4082b2:	pop    ebp
  4082b3:	and    al,0xe2
  4082b5:	outs   dx,DWORD PTR ds:[esi]
  4082b6:	rol    BYTE PTR [esi-0x54],1
  4082b9:	mov    DWORD PTR [edi-0x37574ac3],ebp
  4082bf:	push   ebx
  4082c0:	sbb    DWORD PTR [esi+0x2f3900b],esi
  4082c6:	mov    eax,ds:0x4f3f9352
  4082cb:	les    esi,FWORD PTR [ecx]
  4082cd:	loope  0x4082ca
  4082cf:	cmp    al,0xe
  4082d1:	das    
  4082d2:	cs pushf 
  4082d4:	push   ebp
  4082d5:	adc    ebx,edi
  4082d7:	pusha  
  4082d8:	inc    ebp
  4082d9:	pop    edi
  4082da:	fisubr WORD PTR [edx]
  4082dc:	adc    dl,BYTE PTR [ebx]
  4082de:	mov    ds:0x4be730b7,eax
  4082e3:	mov    al,ds:0x8b04c2e5
  4082e8:	cld    
  4082e9:	rcr    BYTE PTR [esp+ebx*2],1
  4082ec:	sbb    al,0x17
  4082ee:	mov    cl,0x2e
  4082f0:	iret   
  4082f1:	es push 0x78
  4082f4:	and    eax,0x1f5cad63
  4082f9:	jb     0x408324
  4082fb:	stos   DWORD PTR es:[edi],eax
  4082fc:	pop    ss
  4082fd:	sahf   
  4082fe:	ds cli 
  408300:	pop    edi
  408301:	loopne 0x408337
  408303:	sti    
  408304:	lock test BYTE PTR [edx-0x5f937ff0],ch
  40830b:	mov    eax,ds:0xdf1af05a
  408310:	cli    
  408311:	test   ch,ah
  408313:	lea    ebx,[ebx-0x16c96812]
  408319:	mov    eax,0x10398611
  40831e:	add    edx,DWORD PTR [ecx-0x45]
  408321:	pusha  
  408322:	out    0x88,al
  408324:	sub    edx,DWORD PTR [edi-0x6b]
  408327:	out    0x51,eax
  408329:	and    al,0xe8
  40832b:	je     0x408336
  40832d:	push   ss
  40832e:	push   ebx
  40832f:	cdq    
  408330:	add    BYTE PTR [ebp+0x43],cl
  408333:	lds    ebp,FWORD PTR [edx+eax*8-0x70b60520]
  40833a:	cmp    dl,cl
  40833c:	fdivr  DWORD PTR [edx-0x2]
  40833f:	inc    esp
  408340:	dec    ebp
  408341:	or     al,0xa
  408343:	loop   0x408307
  408345:	dec    ebp
  408346:	stc    
  408347:	pop    esp
  408348:	ins    DWORD PTR es:[edi],dx
  408349:	xchg   DWORD PTR [edi-0x30f36332],eax
  40834f:	shl    BYTE PTR [ecx],cl
  408351:	mov    bl,0xa
  408353:	mov    eax,ds:0xdd54f34
  408358:	add    eax,0x6da6b99
  40835d:	fistp  QWORD PTR [esi-0x1]
  408360:	test   eax,0x6bfa2e07
  408365:	inc    edi
  408366:	xchg   ecx,eax
  408367:	mov    cl,0x5f
  408369:	push   ds
  40836a:	bound  ebp,QWORD PTR [esi+0x54]
  40836d:	push   eax
  40836e:	inc    eax
  40836f:	or     BYTE PTR [ebx],bl
  408371:	inc    esi
  408372:	aas    
  408373:	mov    edx,0xf81738e3
  408378:	xor    ah,BYTE PTR [esp+ebp*8-0x3e9f591f]
  40837f:	loopne 0x4083a4
  408381:	inc    esi
  408382:	stos   BYTE PTR es:[edi],al
  408383:	je     0x40831b
  408385:	mov    cl,0xfc
  408387:	lods   al,BYTE PTR ds:[esi]
  408388:	sub    BYTE PTR [ecx],al
  40838a:	mov    al,ds:0x8ae03882
  408390:	outs   dx,DWORD PTR ds:[esi]
  408391:	adc    ebp,ecx
  408393:	jmp    0x408328
  408395:	cmp    ebp,DWORD PTR [ecx+0x30]
  408398:	cld    
  408399:	nop
  40839a:	out    0x94,eax
  40839c:	adc    DWORD PTR [ebx+0x7aa9efb7],ecx
  4083a2:	sbb    DWORD PTR [esi-0x72ec2144],esi
  4083a8:	lods   eax,DWORD PTR ds:[esi]
  4083a9:	aaa    
  4083aa:	fucomip st,st(7)
  4083ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083ad:	(bad)  
  4083ae:	mov    cl,0x30
  4083b0:	adc    eax,DWORD PTR [ecx-0x47a06284]
  4083b6:	jo     0x4083f8
  4083b8:	(bad)  
  4083b9:	inc    edi
  4083ba:	and    edx,edx
  4083bc:	inc    eax
  4083bd:	outs   dx,DWORD PTR ds:[esi]
  4083be:	fild   WORD PTR [ebx-0xc]
  4083c1:	rcl    DWORD PTR ds:0x1dc8a06e,1
  4083c7:	cs jae 0x408432
  4083ca:	xchg   esi,eax
  4083cb:	mov    esi,0xad247403
  4083d0:	jbe    0x408399
  4083d2:	adc    al,0x5a
  4083d4:	jmp    0xfb50e0a8
  4083d9:	mov    ebx,ebp
  4083db:	repz push 0xa849a1bb
  4083e1:	in     al,0x13
  4083e3:	mov    al,0x81
  4083e5:	or     al,0x8e
  4083e7:	push   0x5da9c1d2
  4083ec:	out    dx,eax
  4083ed:	ins    BYTE PTR es:[edi],dx
  4083ee:	arpl   WORD PTR [edx],cx
  4083f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083f1:	adc    al,0x2e
  4083f3:	sti    
  4083f4:	and    al,0x94
  4083f6:	xadd   DWORD PTR [ecx-0x59288dcb],eax
  4083fd:	cmp    DWORD PTR [esi-0x5d],ebp
  408400:	(bad)  
  408401:	ror    DWORD PTR [ebx],cl
  408403:	xor    al,BYTE PTR [eax-0x75718b0a]
  408409:	add    edi,DWORD PTR [edi+0x24ebc314]
  40840f:	pop    ss
  408410:	push   edi
  408411:	(bad)  
  408412:	stc    
  408413:	outs   dx,DWORD PTR ds:[esi]
  408414:	and    dh,bl
  408416:	in     al,0x87
  408418:	cdq    
  408419:	add    DWORD PTR [ebp-0x75403734],ecx
  40841f:	cmp    DWORD PTR [ecx],ebx
  408421:	adc    bh,dh
  408423:	int3   
  408424:	or     eax,0xd8af187c
  408429:	test   DWORD PTR [edx],edi
  40842b:	std    
  40842c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842d:	test   eax,0x231c2e7d
  408432:	pop    ss
  408433:	nop
  408434:	cmc    
  408435:	sbb    al,0x90
  408437:	pop    ds
  408438:	call   0x1680:0xa5422b06
  40843f:	mov    ds:0xa1862aba,eax
  408444:	mov    bh,0xf2
  408446:	inc    ebx
  408447:	or     dh,BYTE PTR [ebp-0x5e]
  40844a:	and    dh,BYTE PTR [esi+0x2eab1400]
  408450:	rol    esi,0xae
  408453:	ins    BYTE PTR es:[edi],dx
  408454:	aad    0x6
  408456:	mov    al,ds:0xe1f9d04b
  40845b:	pop    edx
  40845c:	cmp    eax,0x3a545805
  408461:	fild   QWORD PTR [esi-0x3e]
  408464:	add    ebx,esi
  408466:	xchg   edx,eax
  408467:	retf   
  408468:	pushf  
  408469:	add    eax,eax
  40846b:	jns    0x408449
  40846d:	xchg   BYTE PTR [esi+esi*1+0x3c],cl
  408471:	je     0x408412
  408473:	dec    esi
  408474:	das    
  408475:	pop    ds
  408476:	jns    0x408482
  408478:	ret    
  408479:	dec    edx
  40847a:	fcomp  QWORD PTR [eax+edx*8-0x39]
  40847e:	lea    eax,[esi+edx*4-0x5002a98a]
  408485:	mov    dh,0x62
  408487:	gs and eax,0x2ce080a7
  40848d:	aam    0x91
  40848f:	and    BYTE PTR [ecx],ch
  408491:	push   ebp
  408492:	pop    es
  408493:	lods   eax,DWORD PTR ds:[esi]
  408494:	int    0xa2
  408496:	cmp    al,0x8c
  408498:	in     eax,0xbf
  40849a:	xor    BYTE PTR [esi+edi*1],dl
  40849d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40849f:	dec    ebx
  4084a0:	xor    cl,BYTE PTR [esi]
  4084a2:	jg     0x408474
  4084a4:	cld    
  4084a5:	aas    
  4084a6:	inc    ebp
  4084a7:	push   eax
  4084a8:	retf   0x84bc
  4084ab:	in     eax,dx
  4084ac:	add    cl,dh
  4084ae:	data16 and al,BYTE PTR [bx+si]
  4084b2:	ja     0x4084f9
  4084b4:	pop    ds
  4084b5:	dec    edi
  4084b6:	arpl   cx,sp
  4084b8:	and    BYTE PTR [eax],dl
  4084ba:	and    DWORD PTR [edx-0x23041fc8],ecx
  4084c0:	mov    ah,0xa5
  4084c2:	pop    esi
  4084c3:	pop    ebp
  4084c4:	je     0x408481
  4084c6:	or     eax,0x5084fdd6
  4084cb:	push   ebp
  4084cc:	mov    ebp,0x33e4558b
  4084d1:	(bad)  
  4084d2:	add    edx,edi
  4084d4:	or     eax,edx
  4084d6:	mov    edx,DWORD PTR [ebp-0x20]
  4084d9:	xor    edx,esi
  4084db:	add    eax,edx
  4084dd:	mov    edx,DWORD PTR [ebp-0x20]
  4084e0:	xor    edx,esi
  4084e2:	add    eax,edx
  4084e4:	mov    edx,DWORD PTR [ebp-0x10]
  4084e7:	lea    eax,[eax+edx*1+0x64e5de]
  4084ee:	jmp    0x40a872
  4084f3:	jmp    0x40a863
  4084f8:	mov    ecx,0x7b608113
  4084fd:	in     al,0x9f
  4084ff:	jnp    0x40851c
  408501:	mov    bl,0xe4
  408503:	pop    ebx
  408504:	dec    edi
  408505:	xor    DWORD PTR [ebx],ecx
  408507:	hlt    
  408508:	adc    DWORD PTR [ecx],0x5f2f7a7a
  40850e:	jp     0x40858a
  408510:	xor    al,0x1a
  408512:	lock inc ecx
  408514:	adc    DWORD PTR [esp+esi*1-0x6c],ebx
  408518:	aas    
  408519:	mov    ebx,0xafb9bb9c
  40851e:	xor    DWORD PTR [eax-0x56],ebp
  408521:	xchg   DWORD PTR [edx+0x66],esp
  408524:	sbb    eax,0xaf7b24b0
  408529:	outs   dx,BYTE PTR ds:[esi]
  40852a:	test   DWORD PTR [eax-0x71],edi
  40852d:	sti    
  40852e:	pop    esi
  40852f:	adc    bl,BYTE PTR [edi-0x17]
  408532:	mov    eax,ds:0x2788ff15
  408537:	mov    edi,0xf20233bc
  40853c:	xchg   ecx,eax
  40853d:	iret   
  40853e:	jge    0x40856b
  408540:	fxch   st(3)
  408542:	cmp    ebp,ebp
  408544:	inc    ebx
  408545:	gs gs pop esi
  408548:	or     BYTE PTR [edx],ch
  40854a:	jge    0x408545
  40854c:	push   ds
  40854d:	add    edx,DWORD PTR [edi+0x6b]
  408550:	mov    ecx,DWORD PTR [esi]
  408552:	lds    ebp,FWORD PTR [eax+0x1c977159]
  408558:	mov    dl,0x1
  40855a:	imul   eax,DWORD PTR [esi],0x48
  40855d:	rol    BYTE PTR [ebx+0x29847168],0x78
  408564:	in     eax,0x65
  408566:	lea    ebx,[ebx-0x7f]
  408569:	outs   dx,BYTE PTR ds:[esi]
  40856a:	jmp    0x40851c
  40856c:	popa   
  40856d:	arpl   WORD PTR ds:0x1766c284,si
  408573:	mov    dh,0xe
  408575:	pop    esi
  408576:	add    DWORD PTR [ebp-0x76],ebx
  408579:	std    
  40857a:	adc    ah,BYTE PTR [ecx-0x5620574]
  408580:	xchg   ebx,eax
  408581:	sub    eax,0xf91f3297
  408586:	push   esp
  408587:	packssdw mm7,QWORD PTR [edi+0x2d]
  40858b:	int    0x64
  40858d:	jge    0x408604
  40858f:	or     BYTE PTR [edx-0x38],cl
  408592:	pop    ebx
  408593:	mov    al,0x75
  408595:	jp     0x4085e8
  408597:	and    DWORD PTR [edx+0x36cd3024],ebp
  40859d:	pop    es
  40859e:	jnp    0x4085f6
  4085a0:	fnsetpm(287 only) 
  4085a2:	(bad)  
  4085a3:	fdivr  DWORD PTR [eax+0x33]
  4085a6:	pop    ss
  4085a7:	rcl    BYTE PTR [ebp+0x4a4d640b],cl
  4085ad:	mov    esp,0xdc179e0d
  4085b2:	pop    edi
  4085b3:	pop    esp
  4085b4:	fcomp  DWORD PTR [edi-0x1eb3346f]
  4085ba:	inc    edi
  4085bb:	sub    DWORD PTR ds:0x1c9573aa,esp
  4085c1:	jge    0x408554
  4085c3:	je     0x4085a9
  4085c5:	jae    0x40862f
  4085c7:	sub    DWORD PTR [edi],esp
  4085c9:	daa    
  4085ca:	mov    ecx,0x50c76d88
  4085cf:	or     dh,BYTE PTR [esi]
  4085d1:	pop    ebx
  4085d2:	sbb    ch,cl
  4085d4:	sub    dl,al
  4085d6:	pop    edi
  4085d7:	(bad)  
  4085d8:	cli    
  4085d9:	fld    st(3)
  4085db:	jmp    0x56c8:0x87e86128
  4085e2:	ror    DWORD PTR [edx-0x79],cl
  4085e5:	lock ror cl,cl
  4085e8:	sbb    al,0xa3
  4085ea:	addr16 repz or bl,bh
  4085ee:	mov    bl,0x88
  4085f0:	into   
  4085f1:	daa    
  4085f2:	mov    esi,0x833e2aff
  4085f7:	mov    dh,0x8a
  4085f9:	loopne 0x4085b2
  4085fb:	das    
  4085fc:	fcmovnu st,st(2)
  4085fe:	xor    esp,DWORD PTR [ebp-0x7885137e]
  408604:	lods   eax,DWORD PTR ds:[si]
  408606:	dec    esi
  408607:	repnz pusha 
  408609:	dec    ecx
  40860a:	push   edx
  40860b:	push   ebx
  40860c:	daa    
  40860d:	mov    ebp,0x50471a4f
  408612:	into   
  408613:	jb     0x40863a
  408615:	fs in  eax,0xf0
  408618:	mov    eax,0x24a2db17
  40861d:	mov    esp,0x4f636cba
  408622:	mov    eax,ds:0xaf6299c7
  408627:	add    al,0xce
  408629:	test   BYTE PTR [eax+0x4b68f4a],dl
  40862f:	adc    dh,BYTE PTR [esi-0x48]
  408632:	jb     0x408656
  408634:	cmp    ah,BYTE PTR [ecx+0x17]
  408637:	outs   dx,BYTE PTR ds:[esi]
  408638:	jbe    0x4085d2
  40863a:	ror    DWORD PTR [ebx+0x4a],0x6f
  40863e:	sbb    al,0xf5
  408640:	and    DWORD PTR [eax],0xf778bcbe
  408646:	add    BYTE PTR ds:0x973fce5b,cl
  40864c:	mov    eax,0x8e5cacb5
  408651:	into   
  408652:	mov    BYTE PTR [ebx+0x272b5df4],bl
  408658:	data16 adc ch,BYTE PTR [ebx-0x4f87254e]
  40865f:	jae    0x408667
  408661:	jne    0x408635
  408663:	ficomp WORD PTR [esi+0x77d86305]
  408669:	(bad)  
  40866a:	out    0x21,eax
  40866c:	mov    BYTE PTR [ebx-0x5e],ch
  40866f:	ror    BYTE PTR [ebx+0x49],1
  408672:	enter  0x6848,0xc9
  408676:	pop    es
  408677:	mov    ebp,0xfdbd3470
  40867c:	jle    0x4086f5
  40867e:	popa   
  40867f:	popf   
  408680:	stos   DWORD PTR es:[edi],eax
  408681:	data16 jmp 0x4086cd
  408684:	ja     0x4086dc
  408686:	clc    
  408687:	je     0x4086c2
  408689:	add    DWORD PTR [esi+eax*2-0x239405f6],0x56
  408691:	mov    edi,0xe06d4c13
  408696:	les    ebp,FWORD PTR [bx+0x74e4]
  40869b:	jp     0x408650
  40869d:	mov    al,ds:0x44fece3
  4086a2:	jnp    0x40870c
  4086a4:	mov    ds:0x3143f477,al
  4086a9:	pop    eax
  4086aa:	(bad)  
  4086ab:	mov    ebx,0x92ae249e
  4086b0:	push   esp
  4086b1:	mov    bl,0xef
  4086b3:	jecxz  0x408682
  4086b5:	and    al,0x6c
  4086b7:	add    eax,0x8bb5a8d7
  4086bc:	xor    cl,BYTE PTR [eax-0x3]
  4086bf:	jmp    0xd8af:0x6b084021
  4086c6:	jo     0x4086e4
  4086c8:	xchg   ebp,eax
  4086c9:	add    ah,BYTE PTR [edx+0x76]
  4086cc:	pop    ecx
  4086cd:	wrmsr  
  4086cf:	fistp  QWORD PTR [eax]
  4086d1:	mov    cl,0x50
  4086d3:	push   eax
  4086d4:	test   edi,esi
  4086d6:	dec    ecx
  4086d7:	stos   BYTE PTR es:[edi],al
  4086d8:	test   BYTE PTR [eax+0xa0907f1],0x4a
  4086df:	dec    edi
  4086e0:	sub    DWORD PTR [ebp-0x2600eee5],esp
  4086e6:	pop    ebp
  4086e7:	dec    ecx
  4086e8:	add    al,0xdb
  4086ea:	and    eax,0x68bcac3b
  4086ef:	pop    esi
  4086f0:	adc    eax,0xb00b0cb1
  4086f5:	in     al,dx
  4086f6:	gs push 0xfffffff4
  4086f9:	daa    
  4086fa:	js     0x4086fc
  4086fc:	scas   eax,DWORD PTR es:[edi]
  4086fd:	jbe    0x4086dc
  4086ff:	mov    dl,0x1f
  408701:	dec    ecx
  408702:	push   edx
  408703:	and    edx,DWORD PTR [edi-0x71]
  408706:	xlat   BYTE PTR ds:[ebx]
  408707:	dec    edi
  408708:	retf   
  408709:	adc    DWORD PTR [ecx+0x430c710e],ecx
  40870f:	inc    BYTE PTR [ecx+0x6d]
  408712:	int3   
  408713:	aam    0x65
  408715:	jl     0x408717
  408717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408718:	cmp    DWORD PTR [eax-0x4ca08ec],0x2fec3c86
  408722:	popa   
  408723:	add    al,0xa1
  408725:	fadd   DWORD PTR [ebx]
  408727:	ss inc edi
  408729:	mov    ds:0x8437cc8b,al
  40872e:	mov    ds:0xf8fe9603,al
  408733:	mov    BYTE PTR [ecx-0x67],al
  408736:	sub    ah,BYTE PTR [ecx-0x2e90e4f1]
  40873c:	out    0x34,eax
  40873e:	adc    eax,0x4b0a54e7
  408743:	mov    eax,ds:0x97a57cb9
  408748:	mov    esp,0x13391c34
  40874d:	aad    0xdd
  40874f:	xchg   ecx,eax
  408750:	adc    eax,0x67535654
  408755:	and    eax,0x631e6324
  40875a:	inc    esp
  40875b:	rol    BYTE PTR [ecx],0xc6
  40875e:	sub    BYTE PTR [esi],bl
  408760:	adc    edx,DWORD PTR [edi+0x10]
  408763:	mov    ebx,0x4a32af5a
  408768:	add    al,0x6c
  40876a:	jmp    0x7d5a9b5a
  40876f:	stos   BYTE PTR es:[edi],al
  408770:	das    
  408771:	stos   BYTE PTR es:[edi],al
  408772:	pushf  
  408773:	and    BYTE PTR [edx+0x5],dl
  408776:	shr    dl,cl
  408778:	mov    eax,0x1d189c6f
  40877d:	inc    ebp
  40877e:	pop    ss
  40877f:	sub    BYTE PTR [ecx+0x16e6d6ba],0x3d
  408786:	adc    edi,0xaaa41852
  40878c:	ret    0xa0b7
  40878f:	pop    ds
  408790:	ja     0x40880f
  408792:	repnz dec edi
  408794:	ret    0x32b4
  408797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408798:	push   ebp
  408799:	inc    esi
  40879a:	loope  0x408738
  40879c:	push   0x58
  40879e:	lock cwde 
  4087a0:	repz mov edi,0x4c2b1e2a
  4087a6:	jle    0x40873f
  4087a8:	sbb    bl,BYTE PTR [edx-0x2e0512fd]
  4087ae:	and    eax,0x91586b2f
  4087b3:	lods   al,BYTE PTR ds:[esi]
  4087b4:	bound  esi,QWORD PTR [ebx]
  4087b6:	stos   BYTE PTR es:[edi],al
  4087b7:	push   ds
  4087b8:	mov    al,ds:0xbdd7025b
  4087bd:	add    al,0x6b
  4087bf:	in     al,dx
  4087c0:	into   
  4087c1:	shr    DWORD PTR [edi],1
  4087c3:	sar    DWORD PTR [ecx+0x27],1
  4087c6:	nop
  4087c7:	mov    al,ds:0xfbda0077
  4087cc:	outs   dx,BYTE PTR ds:[esi]
  4087cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ce:	push   eax
  4087cf:	test   DWORD PTR [edx-0x73dc358a],esi
  4087d5:	mov    eax,ds:0xd2903be7
  4087da:	mov    dh,0x97
  4087dc:	pop    esi
  4087dd:	cmp    bh,al
  4087df:	dec    esp
  4087e0:	push   ecx
  4087e1:	iret   
  4087e2:	shl    BYTE PTR [eax],cl
  4087e4:	sbb    BYTE PTR ds:[ecx+0x4b],ch
  4087e8:	push   esp
  4087e9:	inc    eax
  4087ea:	stos   BYTE PTR es:[edi],al
  4087eb:	test   eax,0xf60bdbbe
  4087f0:	fbld   TBYTE PTR [ecx-0x3bc5314a]
  4087f6:	mov    ebx,ds
  4087f8:	enter  0x79a8,0xda
  4087fc:	mov    esi,0x2f940214
  408801:	lock add al,0x80
  408804:	test   DWORD PTR [esi],0x9031c930
  40880a:	jg     0x4087ad
  40880c:	and    BYTE PTR [esi+0x1e],0xec
  408810:	add    al,0xdd
  408812:	xor    DWORD PTR [edi+0x2],ebp
  408815:	dec    esp
  408816:	in     eax,0xa3
  408818:	popa   
  408819:	add    DWORD PTR [edi+0x71],ebx
  40881c:	sub    esi,DWORD PTR [eax+0x3b]
  40881f:	adc    al,0xf
  408821:	out    0x79,eax
  408823:	test   al,0x34
  408825:	fwait
  408826:	xor    DWORD PTR [edi],esp
  408828:	jnp    0x4087c5
  40882a:	int    0x49
  40882c:	jb     0x40882a
  40882e:	lock popa 
  408830:	mov    ebx,0xd0a37ca2
  408835:	shl    bh,0x2e
  408838:	stos   BYTE PTR es:[edi],al
  408839:	or     cl,cl
  40883b:	jg     0x408856
  40883d:	scas   al,BYTE PTR es:[edi]
  40883e:	repnz sbb DWORD PTR [edx-0x21c7f101],0xffffffb0
  408846:	xchg   esp,eax
  408847:	fcom   st(0)
  408849:	shr    esi,0x1f
  40884c:	in     al,dx
  40884d:	xchg   esp,eax
  40884e:	inc    esi
  40884f:	dec    edi
  408850:	shl    dl,1
  408852:	mov    edi,DWORD PTR [eax]
  408854:	push   edx
  408855:	adc    bh,bl
  408857:	test   al,0xdd
  408859:	(bad)  
  40885a:	and    ah,BYTE PTR ds:0x2b260728
  408860:	xor    ch,BYTE PTR [ebx]
  408862:	inc    edi
  408863:	xchg   edi,eax
  408864:	out    dx,eax
  408865:	leave  
  408866:	sti    
  408867:	js     0x4087f3
  408869:	add    DWORD PTR [ebx+ecx*4],ebp
  40886c:	pop    ecx
  40886d:	sub    eax,0xcbff9441
  408872:	jb     0x4087ff
  408874:	(bad)  
  408875:	or     BYTE PTR [ebp+0x31be6d23],bh
  40887b:	out    0x48,al
  40887d:	inc    ebx
  40887e:	mov    esi,ecx
  408880:	sar    DWORD PTR [ebx+0x53],cl
  408883:	ret    
  408884:	push   ebp
  408886:	cmp    eax,0x9da49e2a
  40888b:	pusha  
  40888c:	dec    edi
  40888d:	inc    eax
  40888e:	shl    BYTE PTR [edx+0x21],cl
  408891:	jl     0x408862
  408893:	sbb    DWORD PTR [edx],ecx
  408895:	leave  
  408896:	(bad)  
  408898:	in     eax,dx
  408899:	std    
  40889a:	mov    esp,0xe1cd8bf
  40889f:	mov    dl,0x63
  4088a1:	sub    DWORD PTR [edi+ebx*1+0x3230f7b9],esp
  4088a8:	push   edx
  4088a9:	bswap  esp
  4088ab:	push   edi
  4088ac:	xor    eax,0xe27aea2c
  4088b1:	and    eax,0x1892be0a
  4088b6:	fnsave [esi-0x2d]
  4088b9:	ret    0xd8b
  4088bc:	stos   BYTE PTR es:[edi],al
  4088bd:	push   0x6243766e
  4088c2:	or     al,0x87
  4088c4:	aaa    
  4088c5:	sub    eax,0x21bfde8c
  4088ca:	fst    QWORD PTR [ebx]
  4088cc:	sbb    cl,BYTE PTR [eax]
  4088ce:	(bad)  
  4088cf:	and    BYTE PTR [esi+0x3cc2453a],al
  4088d5:	ss aam 0x5e
  4088d8:	cli    
  4088d9:	or     eax,0x144cf16f
  4088de:	popa   
  4088df:	mov    BYTE PTR [eax],bl
  4088e1:	nop
  4088e2:	mov    eax,ds:0x5caaa8f4
  4088e7:	stc    
  4088e8:	(bad)  
  4088e9:	retf   0x21bc
  4088ec:	jmp    0xa963:0x299bbe45
  4088f3:	mov    dl,ch
  4088f5:	out    dx,eax
  4088f6:	or     ebp,DWORD PTR [ebx-0x1b]
  4088f9:	addr16 enter 0xa0b8,0x98
  4088fe:	mov    eax,0x6ee42e63
  408903:	jg     0x4088a1
  408905:	lods   eax,DWORD PTR gs:[esi]
  408907:	pop    ecx
  408908:	sbb    DWORD PTR [edx+0x437c78c8],eax
  40890e:	in     al,dx
  40890f:	repz iret 
  408911:	arpl   bp,ax
  408913:	lea    edx,[ecx-0x77]
  408916:	lea    edx,[esi]
  408918:	pop    ss
  408919:	mov    ch,0x16
  40891b:	lock jb 0x4088b6
  40891e:	pop    ss
  40891f:	clc    
  408920:	pop    ebx
  408921:	shl    DWORD PTR [ebx-0x52],cl
  408924:	lea    esp,[esi+ebx*2+0x40]
  408928:	(bad)
  40892c:	push   edx
  40892d:	loop   0x4088d3
  40892f:	setl   BYTE PTR [ebx+0x2e015c22]
  408936:	inc    ebx
  408937:	mov    esi,0x8c5ce097
  40893c:	retf   0xde33
  40893f:	ins    BYTE PTR es:[edi],dx
  408940:	adc    DWORD PTR [edx-0x68],0xfffffff8
  408944:	jo     0x4088e0
  408946:	pop    edx
  408947:	das    
  408948:	adc    esp,ecx
  40894a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40894b:	lahf   
  40894c:	mov    ebp,0xea72060e
  408951:	jmp    0x40899f
  408953:	hlt    
  408954:	xchg   ebx,eax
  408955:	(bad)  
  408956:	jecxz  0x4089ab
  408958:	sti    
  408959:	xchg   esi,eax
  40895a:	nop
  40895b:	inc    ebp
  40895c:	pop    esp
  40895d:	scas   eax,DWORD PTR es:[edi]
  40895e:	cs ds push es
  408961:	jo     0x408952
  408963:	or     BYTE PTR [edi],0x16
  408966:	je     0x4089c7
  408968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408969:	sub    eax,0xb58eb96d
  40896e:	jb     0x408920
  408970:	xor    al,0xf6
  408972:	mov    ah,0xd2
  408974:	aam    0xf0
  408976:	lahf   
  408977:	cmp    BYTE PTR [edi-0x8da021c],0x2
  40897e:	mov    DWORD PTR [ebx-0x5cc58973],edx
  408984:	aaa    
  408985:	popf   
  408986:	jne    0x40890f
  408988:	add    BYTE PTR [ebp-0x55a0215c],bh
  40898e:	jecxz  0x4089f6
  408990:	dec    ebx
  408991:	mov    ecx,0x7ad1f22f
  408996:	jae    0x408982
  408998:	aas    
  408999:	or     al,0x51
  40899b:	hlt    
  40899c:	mov    DWORD PTR [ecx-0x4dd7ee51],0x1425f304
  4089a6:	popa   
  4089a7:	xchg   ecx,eax
  4089a8:	cmp    eax,eax
  4089aa:	mov    esp,cs
  4089ac:	xor    BYTE PTR [edx+edi*2],dl
  4089af:	pop    ss
  4089b0:	not    edx
  4089b2:	xor    al,0xc8
  4089b4:	(bad)  
  4089b6:	mov    ds:0xfd214e35,eax
  4089bb:	sar    BYTE PTR [ebx-0x5c],0xfb
  4089bf:	dec    edx
  4089c0:	sbb    cl,BYTE PTR [eax-0x4d]
  4089c3:	push   ecx
  4089c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c5:	and    BYTE PTR [ebx-0x12],al
  4089c8:	adc    bl,dh
  4089ca:	jp     0x408a22
  4089cc:	icebp  
  4089cd:	xchg   ebp,eax
  4089ce:	mov    ds:0xc6f1a674,al
  4089d3:	mov    cl,0x83
  4089d5:	nop
  4089d6:	add    eax,0xa1b52ef7
  4089db:	push   esi
  4089dc:	ret    
  4089dd:	xor    edi,DWORD PTR [edi+0x7268230]
  4089e3:	mov    ebp,0xbcdb0849
  4089e8:	cli    
  4089e9:	pop    ss
  4089ea:	push   es
  4089eb:	adc    BYTE PTR [edi-0x7c],bl
  4089ee:	xchg   ebx,eax
  4089ef:	push   edi
  4089f0:	pop    esp
  4089f1:	cdq    
  4089f2:	xchg   BYTE PTR [eax+edi*8],dh
  4089f5:	or     bh,BYTE PTR [ebx+ecx*4+0x62]
  4089f9:	(bad)  
  4089fa:	jnp    0x4089c9
  4089fc:	inc    edi
  4089fd:	and    dh,dh
  4089ff:	loope  0x408a7c
  408a01:	xchg   esi,eax
  408a02:	xchg   esp,eax
  408a03:	je     0x408a05
  408a05:	(bad)  
  408a06:	cmp    eax,0x1e6a22b
  408a0b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  408a0d:	rcr    cl,cl
  408a0f:	mov    dh,0x18
  408a11:	(bad)  
  408a12:	fdiv   DWORD PTR [ecx+ebx*2-0x1672b27d]
  408a19:	sub    al,0x73
  408a1b:	pop    esi
  408a1c:	mov    ecx,0xa37f6750
  408a21:	call   0x90df:0xdb768fa
  408a28:	xchg   edi,eax
  408a29:	fstp   TBYTE PTR [ebp+edx*2-0x66]
  408a2d:	sbb    al,BYTE PTR ds:0x9dc7056a
  408a33:	add    ecx,ebp
  408a35:	sbb    BYTE PTR [edx-0x1ec9696d],dh
  408a3b:	mov    bh,0x7b
  408a3d:	pop    esi
  408a3e:	pop    ebx
  408a3f:	or     ecx,ebx
  408a41:	jmp    0x6adf:0x62c76490
  408a48:	pop    es
  408a49:	ret    0xd518
  408a4c:	(bad)  
  408a4d:	push   eax
  408a4e:	adc    eax,DWORD PTR [ebx-0x50]
  408a51:	push   es
  408a52:	xchg   ecx,eax
  408a53:	ins    BYTE PTR es:[edi],dx
  408a54:	shl    DWORD PTR [esi+0x16],cl
  408a57:	inc    ecx
  408a58:	inc    ebp
  408a59:	jp     0x408a5b
  408a5b:	add    ch,BYTE PTR [esi]
  408a5d:	add    DWORD PTR [esi-0x50],0x32
  408a61:	mov    fs,WORD PTR [eax+0x31]
  408a64:	aam    0x51
  408a66:	test   al,0x32
  408a68:	mov    eax,0x80709fbe
  408a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a6e:	fwait
  408a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a70:	lods   al,BYTE PTR ds:[esi]
  408a71:	aam    0xcc
  408a73:	(bad)  
  408a74:	jb     0x408a49
  408a76:	or     esp,DWORD PTR [edi]
  408a78:	push   0xffffffbb
  408a7a:	xlat   BYTE PTR ds:[ebx]
  408a7b:	xchg   ecx,eax
  408a7c:	repz or eax,edx
  408a7f:	pop    esp
  408a80:	imul   esp,DWORD PTR [eax+0x341278b1],0x30
  408a87:	ins    DWORD PTR es:[edi],dx
  408a88:	cmp    eax,0x6ee689ac
  408a8d:	ror    ch,cl
  408a8f:	jle    0x408a7e
  408a91:	into   
  408a92:	stos   DWORD PTR es:[edi],eax
  408a93:	pop    ecx
  408a94:	or     esp,DWORD PTR es:[esi-0x77]
  408a98:	in     al,0x63
  408a9a:	sbb    eax,0xac351261
  408a9f:	adc    BYTE PTR [ebp-0x34],cl
  408aa2:	aas    
  408aa3:	test   BYTE PTR [edx+0x5730956e],ah
  408aa9:	xor    BYTE PTR [ebp+0x7a5c6be1],al
  408aaf:	dec    esp
  408ab0:	jl     0x408b31
  408ab2:	push   ecx
  408ab3:	xchg   edi,eax
  408ab4:	add    edx,DWORD PTR [eax]
  408ab6:	mov    al,0x55
  408ab8:	lods   al,BYTE PTR ds:[esi]
  408ab9:	shr    BYTE PTR [ecx+0x4595a2e5],1
  408abf:	cld    
  408ac0:	mov    eax,ds:0x26ea280
  408ac5:	xor    BYTE PTR [edi+0x273bc7e5],ch
  408acb:	mov    al,ds:0x14d659a8
  408ad0:	addr16 mov al,0xd5
  408ad3:	cmp    BYTE PTR [ecx-0x72e0621b],0x2c
  408ada:	in     al,0xc8
  408adc:	xchg   ecx,eax
  408add:	fsub   DWORD PTR [esi]
  408adf:	push   edx
  408ae0:	int3   
  408ae1:	fwait
  408ae2:	inc    esp
  408ae3:	mov    ebx,0x88ba92a7
  408ae8:	mov    eax,0x4209458e
  408aed:	or     ebx,DWORD PTR [ecx-0x2c6a2b93]
  408af3:	repz xor ah,dl
  408af6:	jl     0x408a93
  408af8:	shl    BYTE PTR [ebx+0x56],1
  408afb:	jo     0x408b36
  408afd:	push   ecx
  408afe:	jb     0x408aef
  408b00:	push   ss
  408b01:	or     DWORD PTR [edi+0x65],esi
  408b04:	sub    edx,ebx
  408b06:	ins    DWORD PTR es:[edi],dx
  408b07:	in     eax,dx
  408b08:	stc    
  408b09:	add    edx,esp
  408b0b:	pushf  
  408b0c:	stos   DWORD PTR es:[edi],eax
  408b0d:	xor    DWORD PTR [ecx+0x55],ecx
  408b10:	jns    0x408b1c
  408b12:	jg     0x408af9
  408b14:	mov    eax,0xeb51d8b2
  408b19:	inc    edx
  408b1a:	popa   
  408b1b:	cmc    
  408b1c:	fdiv   DWORD PTR [edi+0x12689a5c]
  408b22:	inc    eax
  408b23:	ds call 0x4f507e9f
  408b29:	sub    ebp,DWORD PTR [esi-0x14c5980d]
  408b2f:	in     eax,dx
  408b30:	inc    ebp
  408b31:	sahf   
  408b32:	cvtps2pd xmm0,QWORD PTR ds:0xd95172ea
  408b39:	push   ebx
  408b3a:	outs   dx,DWORD PTR ds:[esi]
  408b3b:	pop    edx
  408b3c:	sub    esi,0xffffffdc
  408b3f:	stos   BYTE PTR es:[edi],al
  408b40:	ins    DWORD PTR es:[edi],dx
  408b41:	adc    al,0x6
  408b43:	loopne 0x408b1e
  408b45:	adc    ebp,DWORD PTR [eax]
  408b47:	dec    DWORD PTR [eax]
  408b49:	scas   eax,DWORD PTR es:[edi]
  408b4a:	bnd ret 
  408b4c:	xchg   ecx,eax
  408b4d:	xchg   edi,eax
  408b4e:	(bad)  
  408b4f:	ror    DWORD PTR [edx-0x78],1
  408b52:	pop    es
  408b53:	ret    
  408b54:	rcl    ch,0xa0
  408b57:	pmaxsw mm5,QWORD PTR [ecx-0x5]
  408b5b:	(bad)  
  408b5c:	cmp    al,0xb5
  408b5e:	sub    edi,DWORD PTR [edx+eiz*4+0x67]
  408b62:	sub    bh,al
  408b64:	xor    eax,0x6087ae4f
  408b69:	std    
  408b6a:	xor    al,0xbc
  408b6c:	std    
  408b6d:	cmp    eax,0x23985464
  408b72:	mov    ebx,0x78c1f3dc
  408b77:	push   ebx
  408b78:	rcr    DWORD PTR [esi+0xfddd4ff],0xbf
  408b7f:	sbb    ebx,0x5dba0482
  408b85:	mov    al,ds:0x4aa971c0
  408b8a:	stc    
  408b8b:	jbe    0x408b28
  408b8d:	inc    esp
  408b8e:	(bad)  [ecx*2+0x3ae93ee1]
  408b95:	pop    ecx
  408b96:	fldenv [edx]
  408b98:	in     eax,0x3b
  408b9a:	mov    edi,0x637cf025
  408b9f:	push   DWORD PTR [edx+0x70]
  408ba2:	mov    edx,0xe509fc4f
  408ba7:	repnz loope 0x408b53
  408baa:	sub    ecx,DWORD PTR [ebx+0x6a]
  408bad:	icebp  
  408bae:	push   0xcf00955
  408bb3:	xor    eax,0xb11ed407
  408bb8:	scas   al,BYTE PTR es:[edi]
  408bb9:	xchg   esi,eax
  408bba:	adc    eax,0xc5b42cca
  408bbf:	jnp    0x408c18
  408bc1:	stos   BYTE PTR es:[edi],al
  408bc2:	adc    edx,DWORD PTR [edi+ebp*1]
  408bc5:	dec    ebp
  408bc6:	bound  esp,QWORD PTR [ebp+0x4c]
  408bc9:	cs push edx
  408bcb:	inc    esi
  408bcc:	mov    esi,0xef7f9232
  408bd1:	test   al,0x93
  408bd3:	mov    al,ds:0x8ede1e1f
  408bd8:	push   eax
  408bd9:	call   0x74119400
  408bde:	add    edx,DWORD PTR [edi]
  408be0:	mov    ecx,0xc03c968f
  408be5:	cli    
  408be6:	push   0xca4cbafa
  408beb:	xchg   ecx,eax
  408bec:	mov    ecx,0xcdea8f6
  408bf1:	add    dl,BYTE PTR [ebx-0x5]
  408bf4:	adc    al,0x14
  408bf6:	aas    
  408bf7:	xor    eax,0x74bea5da
  408bfc:	or     DWORD PTR [edx-0x1a],edx
  408bff:	stc    
  408c00:	(bad)  
  408c01:	jge    0x408bea
  408c03:	shr    DWORD PTR [ebp-0xc],0x10
  408c07:	lock lahf 
  408c09:	dec    eax
  408c0a:	sbb    al,0x28
  408c0c:	cmp    eax,0x6a53d752
  408c11:	pushf  
  408c12:	inc    esi
  408c13:	mov    ds:0x71aafd67,al
  408c18:	scas   al,BYTE PTR es:[edi]
  408c19:	sub    eax,0x4cdf2f52
  408c1e:	out    0xfc,al
  408c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c21:	repz retf 0x1787
  408c25:	or     bh,cl
  408c27:	push   es
  408c28:	add    al,0xa2
  408c2a:	jl     0x408c12
  408c2c:	sbb    BYTE PTR [eax],0x29
  408c2f:	mov    bl,0x8a
  408c31:	(bad)  
  408c32:	sub    al,0x2a
  408c34:	das    
  408c35:	mov    ecx,0xe9dd08ff
  408c3a:	into   
  408c3b:	into   
  408c3c:	mov    edx,0xe93f17d4
  408c41:	sub    ecx,edx
  408c43:	jmp    0xfd8e:0xd2e364dd
  408c4a:	add    al,0xe5
  408c4c:	inc    ebx
  408c4d:	int    0x37
  408c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c50:	lahf   
  408c51:	cmp    cl,BYTE PTR [eax]
  408c53:	je     0x408c42
  408c55:	xchg   DWORD PTR [ebx],edx
  408c57:	stc    
  408c58:	push   0x3b
  408c5a:	cdq    
  408c5b:	jo     0x408c6d
  408c5d:	pop    ebx
  408c5e:	pop    esi
  408c5f:	loop   0x408c15
  408c61:	out    0x72,eax
  408c63:	ret    
  408c64:	xchg   esi,eax
  408c65:	fisttp QWORD PTR [eax+0x2176f121]
  408c6b:	loopne 0x408cc1
  408c6d:	xchg   esi,eax
  408c6e:	add    cl,BYTE PTR [edi+ebx*8]
  408c71:	(bad)  
  408c72:	retf   0xe20e
  408c75:	jnp    0x408cf4
  408c77:	ins    DWORD PTR es:[edi],dx
  408c78:	imul   edx,DWORD PTR [edi+0x4afe4162],0xfffffff1
  408c7f:	scas   eax,DWORD PTR es:[edi]
  408c80:	pop    esi
  408c81:	sub    DWORD PTR [esi-0x66baa9a3],ebx
  408c87:	inc    ebx
  408c88:	enter  0xbba3,0xba
  408c8c:	(bad)  
  408c8e:	in     al,dx
  408c8f:	push   esi
  408c90:	enter  0xe8aa,0x7
  408c94:	inc    ecx
  408c95:	and    dl,BYTE PTR [ecx-0x53]
  408c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c99:	pop    esi
  408c9a:	xchg   ecx,eax
  408c9b:	cwde   
  408c9c:	loopne 0x408ce7
  408c9e:	sub    esp,eax
  408ca0:	mov    bl,0x21
  408ca2:	iret   
  408ca3:	xchg   ebx,eax
  408ca4:	js     0x408c4c
  408ca6:	sahf   
  408ca7:	xor    BYTE PTR [edi+0x4ef07dbe],ch
  408cad:	cmp    dh,BYTE PTR [ebx-0x1a95c689]
  408cb3:	shl    bl,0xaf
  408cb6:	mov    edx,0x6891f00
  408cbb:	jbe    0x408d0d
  408cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cbe:	in     eax,dx
  408cbf:	mov    WORD PTR [ecx+0x22],cs
  408cc2:	push   esi
  408cc3:	lahf   
  408cc4:	mov    edi,0xd5aeca73
  408cc9:	test   BYTE PTR [esi+0xb],cl
  408ccc:	call   0x78f9:0x41f3aead
  408cd3:	jl     0x408c95
  408cd5:	imul   eax,DWORD PTR [ebx],0x70
  408cd8:	and    ch,BYTE PTR [esi+0x4a3f78c4]
  408cde:	push   ecx
  408cdf:	scas   eax,DWORD PTR es:[edi]
  408ce0:	jae    0x408d37
  408ce2:	push   0xa14a49eb
  408ce7:	jns    0x408c84
  408ce9:	push   eax
  408cea:	xchg   esi,eax
  408ceb:	mov    edx,0x37d0dc49
  408cf0:	pop    ecx
  408cf1:	lds    ebp,FWORD PTR [esi]
  408cf3:	pop    ss
  408cf4:	jle    0x408d5f
  408cf6:	dec    ebx
  408cf7:	mov    dl,0xec
  408cf9:	mov    cl,0xd2
  408cfb:	pop    esi
  408cfc:	stc    
  408cfd:	xor    dl,BYTE PTR [ebp-0x52af123c]
  408d03:	pop    esi
  408d04:	dec    ecx
  408d05:	fldcw  WORD PTR [edi-0x6]
  408d08:	fwait
  408d09:	push   eax
  408d0a:	out    dx,eax
  408d0b:	push   esp
  408d0c:	out    dx,al
  408d0d:	pop    ss
  408d0e:	inc    ebx
  408d0f:	in     eax,0xe0
  408d11:	add    eax,0x6e77fdc
  408d16:	stc    
  408d17:	pop    eax
  408d18:	iret   
  408d19:	inc    ebp
  408d1a:	jmp    0x408d82
  408d1c:	scas   al,BYTE PTR es:[edi]
  408d1d:	dec    esi
  408d1e:	les    esi,FWORD PTR [ecx]
  408d20:	retf   
  408d21:	xchg   BYTE PTR [esi],ch
  408d23:	call   0x5c43da28
  408d28:	mov    ch,0x43
  408d2a:	jl     0x408d3d
  408d2c:	jecxz  0x408cba
  408d2e:	xchg   ecx,eax
  408d2f:	nop
  408d30:	cmp    BYTE PTR ds:0x619889f6,cl
  408d36:	sub    esp,edi
  408d38:	int3   
  408d39:	out    dx,eax
  408d3a:	shl    BYTE PTR [edx+0x37],cl
  408d3d:	push   edx
  408d3e:	out    dx,al
  408d3f:	into   
  408d40:	ds xchg esi,eax
  408d42:	ficomp DWORD PTR [eax-0x2e]
  408d45:	test   eax,0x4ad763df
  408d4a:	lock es inc ebp
  408d4d:	inc    esp
  408d4e:	add    DWORD PTR [ebx+0x63ddb3c1],ebp
  408d54:	ss cli 
  408d56:	pusha  
  408d57:	inc    ebp
  408d58:	in     al,0x71
  408d5a:	data16 cld 
  408d5c:	mov    dh,0x6f
  408d5e:	es leave 
  408d60:	add    eax,0xa697f9d6
  408d65:	icebp  
  408d66:	cmp    dh,BYTE PTR [eax+0x6e]
  408d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d6a:	lods   al,BYTE PTR ds:[esi]
  408d6b:	jmp    0xa8f0:0x1a8fb107
  408d72:	cwde   
  408d73:	mov    bl,0xe1
  408d75:	sub    BYTE PTR [ebx+edi*8],bl
  408d78:	cli    
  408d79:	icebp  
  408d7a:	mov    cl,0x9a
  408d7c:	cld    
  408d7d:	adc    al,0xcb
  408d7f:	xor    BYTE PTR [ebp-0xb],dh
  408d82:	ficomp WORD PTR [edi-0x16b5d7e7]
  408d88:	add    eax,0x52e053a8
  408d8d:	jo     0x408d54
  408d8f:	std    
  408d90:	xchg   ebp,eax
  408d91:	ins    DWORD PTR es:[edi],dx
  408d92:	outs   dx,DWORD PTR ds:[esi]
  408d93:	not    esp
  408d95:	cmp    edi,DWORD PTR [ebp-0x26]
  408d98:	dec    edi
  408d99:	shr    eax,0x98
  408d9c:	aaa    
  408d9d:	popa   
  408d9e:	jecxz  0x408d40
  408da0:	fild   DWORD PTR [ecx+0x2782b53b]
  408da6:	lds    edi,FWORD PTR [eax]
  408da8:	aas    
  408da9:	call   0x1654:0x218b0992
  408db0:	cmc    
  408db1:	inc    esp
  408db2:	mov    bl,0xe0
  408db4:	(bad)  
  408db5:	cdq    
  408db6:	push   eax
  408db7:	call   0x5cb9:0x77d22eea
  408dbe:	hlt    
  408dbf:	sbb    eax,0x39cc762a
  408dc4:	and    cl,bl
  408dc6:	or     DWORD PTR [ebp-0x28807a45],eax
  408dcc:	icebp  
  408dcd:	and    eax,0x18ea7498
  408dd2:	dec    eax
  408dd3:	mov    DWORD PTR [esi],0x9808d355
  408dd9:	push   ebp
  408dda:	push   esp
  408ddb:	int3   
  408ddc:	sti    
  408ddd:	arpl   dx,di
  408ddf:	push   ecx
  408de0:	sub    eax,0xf42f4bf4
  408de5:	aad    0xe4
  408de7:	adc    dl,BYTE PTR [edx]
  408de9:	stos   BYTE PTR es:[edi],al
  408dea:	test   BYTE PTR [ecx-0x63f516b7],dh
  408df0:	ret    
  408df1:	and    edi,eax
  408df3:	jbe    0x408d8f
  408df5:	pop    esp
  408df6:	or     DWORD PTR [eax+0x193d55a5],esp
  408dfc:	mov    ds:0x3577a11d,al
  408e01:	cmp    edx,DWORD PTR [eax-0x29f4abb2]
  408e07:	sahf   
  408e08:	xchg   esp,eax
  408e09:	gs sbb ah,al
  408e0c:	loopne 0x408e3e
  408e0e:	jmp    0x645c4aba
  408e13:	cld    
  408e14:	fdiv   DWORD PTR [edx-0xb]
  408e17:	xchg   ebp,eax
  408e18:	aas    
  408e19:	pop    esi
  408e1a:	push   cs
  408e1b:	mov    DWORD PTR [ecx],ebx
  408e1d:	mov    edx,0x6d0144f4
  408e22:	lea    edx,[edx]
  408e24:	sahf   
  408e25:	in     al,dx
  408e26:	xor    al,0xa2
  408e28:	and    ecx,ebp
  408e2a:	sbb    BYTE PTR [eax+0x4c],ah
  408e2d:	leave  
  408e2e:	lods   eax,DWORD PTR ds:[esi]
  408e2f:	pop    esp
  408e30:	hlt    
  408e31:	aaa    
  408e32:	ret    0x791d
  408e35:	mov    dh,0xbe
  408e37:	add    edi,DWORD PTR [edi]
  408e39:	stos   BYTE PTR es:[edi],al
  408e3a:	add    ebx,DWORD PTR [ebp+0x1d]
  408e3d:	xchg   edx,eax
  408e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e3f:	out    dx,al
  408e40:	dec    edx
  408e41:	inc    ebp
  408e42:	and    bl,BYTE PTR [ebp+0x7f310246]
  408e48:	(bad)  
  408e49:	jb     0x408e07
  408e4b:	iret   
  408e4c:	push   ebp
  408e4d:	int    0x7f
  408e4f:	adc    ebx,DWORD PTR [ebp-0x45f66caf]
  408e55:	(bad)  
  408e56:	aam    0xb7
  408e58:	data16 (bad) 
  408e5b:	fst    QWORD PTR [edi+eiz*8+0xe]
  408e5f:	lods   al,BYTE PTR ds:[esi]
  408e60:	iret   
  408e61:	or     esi,ebp
  408e63:	aam    0x15
  408e65:	add    BYTE PTR [edi-0x13855c78],bh
  408e6b:	mov    WORD PTR [ecx],?
  408e6d:	inc    edx
  408e6e:	jmp    0x408eab
  408e70:	call   0x72f2:0xabb9f674
  408e77:	mov    esi,DWORD PTR [edx+0x358ba582]
  408e7d:	gs xchg edx,eax
  408e7f:	(bad)
  408e83:	pop    ds
  408e84:	arpl   WORD PTR [edx-0x1],ax
  408e87:	bound  ebp,QWORD PTR [edx-0x62]
  408e8a:	xchg   DWORD PTR ds:0x81ed495a,esi
  408e90:	sahf   
  408e91:	sbb    edx,DWORD PTR [edx]
  408e93:	cmp    BYTE PTR [edi+0x4f],bl
  408e96:	test   al,0xf1
  408e98:	aaa    
  408e99:	cli    
  408e9a:	(bad)  
  408e9b:	adc    BYTE PTR [eax],bl
  408e9d:	and    DWORD PTR [eax],0xffffff87
  408ea0:	xlat   BYTE PTR ds:[ebx]
  408ea1:	leave  
  408ea2:	mov    al,0x3d
  408ea4:	mov    ebp,0xf1ccf1
  408ea9:	stc    
  408eaa:	jmp    0x408ea2
  408eac:	out    0x28,eax
  408eae:	mov    BYTE PTR [edi],0xa1
  408eb1:	arpl   si,dx
  408eb3:	inc    BYTE PTR [ebp+0x2f]
  408eb6:	cli    
  408eb7:	jb     0x408f06
  408eb9:	ds out dx,eax
  408ebb:	sbb    BYTE PTR [ebp+0x1fd55669],ch
  408ec1:	mov    al,ds:0x9b6f1f69
  408ec6:	jmp    0xaf01b74f
  408ecb:	mov    bl,0x5
  408ecd:	mov    al,0x80
  408ecf:	rcl    BYTE PTR [esi],0xfc
  408ed2:	ins    BYTE PTR es:[edi],dx
  408ed3:	xchg   edi,eax
  408ed4:	ret    
  408ed5:	in     al,0x3c
  408ed7:	stc    
  408ed8:	adc    dh,BYTE PTR [esp+ebx*8-0x3d]
  408edc:	adc    al,0xba
  408ede:	mov    bh,0x2
  408ee0:	or     bl,BYTE PTR [eax]
  408ee2:	xor    cl,BYTE PTR [ebp-0x5a529ea0]
  408ee8:	dec    edi
  408ee9:	jle    0x408ea6
  408eeb:	jns    0x408ecd
  408eed:	jle    0x408ea0
  408eef:	and    eax,0x77a0665c
  408ef4:	(bad)  
  408ef5:	mov    WORD PTR [edi+ebx*1],fs
  408ef8:	in     al,dx
  408ef9:	ds dec esp
  408efb:	sub    eax,0xdac57f3a
  408f00:	inc    ebx
  408f01:	xchg   ebp,eax
  408f02:	mov    ebx,0xe0b326ed
  408f07:	mov    ah,0xa9
  408f09:	push   edx
  408f0a:	fmulp  st(2),st
  408f0c:	(bad)  
  408f0d:	in     eax,dx
  408f0e:	fsub   QWORD PTR [ebp+edx*1+0x400fddea]
  408f15:	jno    0x408ef9
  408f17:	push   0x2487e091
  408f1c:	mov    ah,0xe
  408f1e:	jae    0x408ec3
  408f20:	xchg   ebx,eax
  408f21:	or     dh,BYTE PTR ds:0xcbb788a7
  408f27:	xor    eax,0x42463ba3
  408f2c:	outs   dx,DWORD PTR ds:[esi]
  408f2d:	fdivr  DWORD PTR [edi]
  408f2f:	mov    bh,al
  408f31:	xor    eax,0xde94639b
  408f36:	push   ss
  408f37:	hlt    
  408f38:	(bad)  
  408f39:	pop    edi
  408f3a:	xchg   BYTE PTR [ecx],cl
  408f3c:	adc    ebx,esi
  408f3e:	dec    edx
  408f3f:	mov    al,0x95
  408f41:	mov    eax,ds:0x8f420b0e
  408f46:	dec    ebx
  408f47:	aas    
  408f48:	xchg   DWORD PTR [ebp+0x638a3ce9],ebx
  408f4e:	jno    0x408fb9
  408f50:	rol    BYTE PTR [esi+0x40cf49d7],cl
  408f56:	out    dx,eax
  408f57:	retf   
  408f58:	ss or  bl,dl
  408f5b:	jno    0x408fc4
  408f5d:	and    eax,0xd2e8685f
  408f62:	(bad)  
  408f64:	clc    
  408f65:	sub    DWORD PTR [ecx-0x54f34c6d],esp
  408f6b:	pop    ecx
  408f6c:	xchg   ebx,eax
  408f6d:	scas   al,BYTE PTR es:[edi]
  408f6e:	jmp    0xd773d2ed
  408f73:	stos   DWORD PTR es:[edi],eax
  408f74:	add    eax,0x953354
  408f79:	jno    0x408f2b
  408f7b:	jae    0x408f80
  408f7d:	mov    ds:0x37125b1e,eax
  408f82:	xor    DWORD PTR [ebp+0x36440b08],0x47
  408f89:	enter  0x56c7,0x96
  408f8d:	(bad)  
  408f8e:	and    al,0x74
  408f90:	das    
  408f91:	pop    esi
  408f92:	dec    ebx
  408f93:	int3   
  408f94:	icebp  
  408f95:	enter  0x477f,0xe6
  408f99:	or     DWORD PTR [eax-0x7ea0db2c],esi
  408f9f:	inc    ebp
  408fa0:	jmp    0x408fd8
  408fa2:	sbb    ebp,DWORD PTR [esi+0x1a4433e9]
  408fa8:	jmp    0x408f70
  408faa:	and    eax,DWORD PTR [ebp+ebx*8+0x1f]
  408fae:	(bad)  [eax]
  408fb0:	outs   dx,DWORD PTR ds:[esi]
  408fb1:	(bad)  
  408fb2:	(bad)  
  408fb4:	icebp  
  408fb5:	(bad)  
  408fb6:	loope  0x408f8f
  408fb8:	pop    ecx
  408fb9:	sub    bh,BYTE PTR [edi+0x73918f99]
  408fbf:	mov    al,ds:0x79557b7b
  408fc4:	test   BYTE PTR [edx-0x74],bl
  408fc7:	push   cs
  408fc8:	sti    
  408fc9:	dec    edx
  408fca:	inc    esp
  408fcb:	jo     0x408f5a
  408fcd:	cld    
  408fce:	jge    0x409036
  408fd0:	add    DWORD PTR [eax+0x11949f03],edi
  408fd6:	bound  ecx,QWORD PTR [ecx]
  408fd8:	adc    al,0x1a
  408fda:	jmp    0x409041
  408fdc:	popa   
  408fdd:	pop    eax
  408fde:	std    
  408fdf:	loop   0x408f72
  408fe1:	xchg   DWORD PTR [esi-0x112f9034],ebp
  408fe7:	pop    es
  408fe8:	addr16 xchg esi,eax
  408fea:	bnd ja 0x409058
  408fed:	lds    esi,FWORD PTR [edi-0x3]
  408ff0:	inc    esp
  408ff1:	and    BYTE PTR fs:0x9fa9c088,bh
  408ff8:	mov    edi,0x867c90c9
  408ffd:	cmp    DWORD PTR [esi],ecx
  408fff:	xchg   edi,eax
  409000:	hlt    
  409001:	rol    DWORD PTR [ebx-0x4],0x85
  409005:	mov    dl,0x37
  409007:	lods   eax,DWORD PTR ds:[esi]
  409008:	mov    ebx,0x1fb11c08
  40900d:	and    al,0x80
  40900f:	add    eax,0x69f14f00
  409014:	jmp    FWORD PTR [ecx]
  409016:	jbe    0x409026
  409018:	ret    0x7855
  40901b:	pop    eax
  40901c:	sbb    BYTE PTR [eax-0x52],bh
  40901f:	push   edi
  409020:	cmp    BYTE PTR [ecx+0x6c],al
  409023:	leave  
  409024:	sub    DWORD PTR [edi],edi
  409026:	int3   
  409027:	jge    0x40901b
  409029:	adc    DWORD PTR [esi],0xffffffbf
  40902c:	js     0x409027
  40902e:	sahf   
  40902f:	sbb    eax,0xfcabe1bf
  409034:	out    0x3,eax
  409036:	sbb    DWORD PTR [ebx],eax
  409038:	(bad)  
  409039:	stc    
  40903a:	fs xchg esi,eax
  40903c:	or     al,0xd9
  40903e:	pop    es
  40903f:	jae    0x40907e
  409041:	imul   eax,DWORD PTR [ebx-0xdbefabf],0xd94af359
  40904b:	fidivr WORD PTR [edx]
  40904d:	cdq    
  40904e:	mov    ebp,0x1619c58d
  409053:	hlt    
  409054:	ror    BYTE PTR [esi],0xb8
  409057:	into   
  409058:	mov    eax,0x7f7a286
  40905d:	cmp    eax,0x7e4f028b
  409062:	push   0xffffffbb
  409064:	add    cl,cl
  409066:	ss fwait
  409068:	xchg   DWORD PTR [ebx],edx
  40906a:	fisttp DWORD PTR [esi+ebx*4]
  40906d:	sbb    dl,ch
  40906f:	mov    ebp,0xa8af84b9
  409074:	pop    ebp
  409075:	xchg   esp,eax
  409076:	jge    0x408ff8
  409078:	xchg   ebp,eax
  409079:	xor    al,0x3
  40907b:	rcr    BYTE PTR [eax],0x62
  40907e:	xor    eax,0xed8ed36f
  409083:	fild   WORD PTR [edx+0x15]
  409086:	or     BYTE PTR [esi],bl
  409088:	cmp    al,BYTE PTR es:[ecx]
  40908b:	cwde   
  40908c:	jb     0x409092
  40908e:	or     DWORD PTR [ebx-0x613b4a42],ebp
  409094:	jo     0x40908e
  409096:	xchg   ecx,eax
  409097:	out    0xbc,eax
  409099:	add    DWORD PTR [edx],esi
  40909b:	mov    ds:0x9ada4d76,al
  4090a0:	ja     0x40902c
  4090a2:	pop    esp
  4090a3:	sahf   
  4090a4:	imul   edx,esi,0x56e539e5
  4090aa:	shl    BYTE PTR [esi+0x9a72ed1],0xa4
  4090b1:	mov    bh,0x14
  4090b3:	or     edx,DWORD PTR [edx+0x709ebedf]
  4090b9:	sar    DWORD PTR [esp+ecx*1],1
  4090bc:	mov    edi,DWORD PTR [edx]
  4090be:	cld    
  4090bf:	push   ebx
  4090c0:	add    eax,0x667b504c
  4090c5:	call   0x3c9a:0x830ca545
  4090cc:	mov    dh,0xd6
  4090ce:	xchg   cl,al
  4090d0:	(bad)  
  4090d1:	repz or ah,cl
  4090d4:	xchg   DWORD PTR [ebp+0x5cb41138],esi
  4090da:	xchg   ebp,eax
  4090db:	jmp    0x8fc6c7f4
  4090e0:	fild   DWORD PTR [esi+ebx*8-0x5cdd92d6]
  4090e7:	das    
  4090e8:	jbe    0x4090c2
  4090ea:	pop    es
  4090eb:	jo     0x40906f
  4090ed:	mov    ebx,0xfdf25c22
  4090f2:	mov    eax,ds:0x2eae5f2e
  4090f7:	(bad)  
  4090f8:	fdivr  QWORD PTR [edx]
  4090fa:	adc    DWORD PTR [edx-0x7c],ebx
  4090fd:	mov    esi,0x6c4f937b
  409102:	cmp    dl,BYTE PTR ds:0xda0d83c9
  409108:	jbe    0x409104
  40910a:	fldenv [eax+0x1d34b1af]
  409110:	sbb    ch,BYTE PTR [esi]
  409112:	mov    ebx,0xb22d7662
  409117:	sahf   
  409118:	mov    al,0x6
  40911a:	in     al,dx
  40911b:	sub    al,ah
  40911d:	retf   0xb578
  409120:	fwait
  409121:	xchg   edx,eax
  409122:	sub    eax,0xeced2118
  409127:	in     eax,dx
  409128:	pop    ebx
  409129:	cli    
  40912a:	adc    esi,edx
  40912c:	test   DWORD PTR [eax*1-0x69e4913a],ebx
  409133:	sub    BYTE PTR [edi-0x3ddf2c70],bl
  409139:	sbb    al,0x8b
  40913b:	cmp    eax,0xbcc862a0
  409140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409141:	loop   0x4090eb
  409143:	data16 das 
  409145:	xchg   BYTE PTR [ebx],ah
  409147:	mov    eax,ds:0xfff6e133
  40914c:	ret    
  40914d:	(bad)  
  40914e:	jp     0x4091c0
  409150:	test   DWORD PTR [ecx],0xc93854f1
  409156:	mov    ds:0xf44c3896,eax
  40915b:	jl     0x4090e7
  40915d:	repnz icebp 
  40915f:	add    eax,0x1f495cd3
  409164:	push   esi
  409165:	push   ebp
  409166:	mov    al,0x2e
  409168:	gs addr16 xor esi,esp
  40916c:	xor    eax,ebx
  40916e:	cld    
  40916f:	imul   esp,DWORD PTR [ebx-0x10],0xbb494eb0
  409176:	xor    DWORD PTR [eax+esi*4+0x5a4c103f],esp
  40917d:	and    ch,BYTE PTR [edx+esi*2+0x60]
  409181:	pusha  
  409182:	fld    QWORD PTR [ebx+0x54077217]
  409188:	cld    
  409189:	out    dx,al
  40918a:	mov    edx,0xc0ccc30f
  40918f:	sbb    ebx,edi
  409191:	fiadd  DWORD PTR [esi-0x26]
  409194:	mov    DWORD PTR ds:0x8c88e3bc,edx
  40919a:	jp     0x409155
  40919c:	aad    0xff
  40919e:	pop    ebx
  40919f:	inc    esi
  4091a0:	or     eax,0x3ecb79f3
  4091a5:	(bad)  
  4091a6:	fcomip st,st(5)
  4091a8:	popf   
  4091a9:	or     DWORD PTR [ecx],esi
  4091ab:	cmp    eax,DWORD PTR [eax+0x50]
  4091ae:	mov    ebx,0x7734ce43
  4091b3:	imul   BYTE PTR [ebx+0x641e38f1]
  4091b9:	xchg   ecx,eax
  4091ba:	js     0x409141
  4091bc:	fist   DWORD PTR [esi-0x3a]
  4091bf:	loopne 0x40922e
  4091c1:	in     eax,0xd0
  4091c3:	ror    BYTE PTR ds:0xc21b5338,1
  4091c9:	inc    eax
  4091ca:	mov    al,ds:0x64ba3dd4
  4091cf:	cmp    DWORD PTR [ebx],ecx
  4091d1:	jge    0x4091fb
  4091d3:	pop    edx
  4091d4:	sub    al,0xa6
  4091d6:	xor    BYTE PTR [ecx-0x203d7f8b],ah
  4091dc:	std    
  4091dd:	popf   
  4091de:	fcmovnbe st,st(0)
  4091e0:	inc    ebp
  4091e1:	adc    esi,ecx
  4091e3:	and    eax,0xea38882a
  4091e8:	lods   eax,DWORD PTR ds:[esi]
  4091e9:	sub    esi,esi
  4091eb:	retf   0xffb2
  4091ee:	mov    edx,0x36d04257
  4091f3:	int    0xf3
  4091f5:	jle    0x40925f
  4091f7:	or     esi,esp
  4091f9:	pushf  
  4091fa:	xor    BYTE PTR [ebp+0x50c7cd6e],bh
  409200:	sbb    al,0x2c
  409202:	ds jo  0x4091ee
  409205:	aas    
  409206:	inc    ecx
  409207:	cmp    ah,BYTE PTR [ebx+eiz*1+0x17bb5360]
  40920e:	inc    ebx
  40920f:	pop    edi
  409210:	mov    eax,ds:0x3aa9c886
  409215:	jg     0x409212
  409217:	push   0x30
  409219:	test   al,0xda
  40921b:	out    0xed,al
  40921d:	sbb    DWORD PTR [edx+0x77],esi
  409220:	add    al,0x62
  409222:	sbb    edi,eax
  409224:	fld    QWORD PTR [esi]
  409226:	hlt    
  409227:	add    ebx,esi
  409229:	sub    dl,BYTE PTR [ebx]
  40922b:	pop    edx
  40922c:	mov    al,ds:0xf60ea54e
  409231:	xchg   edx,eax
  409232:	lods   al,BYTE PTR ds:[esi]
  409233:	mov    ds:0x811d2453,eax
  409238:	ins    DWORD PTR es:[edi],dx
  409239:	es pop edi
  40923b:	stos   BYTE PTR es:[edi],al
  40923c:	mov    al,ds:0xed1c37b0
  409241:	in     al,dx
  409242:	stos   BYTE PTR es:[edi],al
  409243:	sub    ebx,esi
  409245:	xchg   DWORD PTR ds:0x6f16dda7,edx
  40924b:	(bad)  
  40924c:	repnz cmp edi,DWORD PTR [esi]
  40924f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409250:	dec    ebp
  409251:	(bad)  [edx+ecx*4-0x40]
  409255:	test   al,0xc9
  409257:	mov    dh,0x94
  409259:	mov    ebx,0xd98fe537
  40925e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925f:	fs xchg esi,ebx
  409262:	sbb    BYTE PTR [esi+0x6e],bl
  409265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409266:	dec    edi
  409267:	add    ebx,DWORD PTR [ebx]
  409269:	pop    edx
  40926a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40926b:	mov    bl,0xd1
  40926d:	pusha  
  40926e:	rol    DWORD PTR [ebp+0xf12ed30],1
  409274:	jne    0x409284
  409276:	mov    DWORD PTR [eax-0x7],ecx
  409279:	cmp    bl,dl
  40927b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40927c:	lock mov cl,0x56
  40927f:	jns    0x409260
  409281:	dec    ebx
  409282:	xor    al,0x76
  409284:	stos   BYTE PTR es:[edi],al
  409285:	mov    al,0xd2
  409287:	lods   al,BYTE PTR ds:[esi]
  409288:	cmp    al,0xbd
  40928a:	nop
  40928b:	lods   al,BYTE PTR ds:[esi]
  40928c:	fwait
  40928d:	xchg   edi,eax
  40928e:	xchg   ebx,eax
  40928f:	mov    cl,0xfc
  409291:	and    dl,bh
  409293:	cmp    al,0x59
  409295:	add    ch,dh
  409297:	movnti DWORD PTR [ecx+0x71],esi
  40929b:	(bad)  
  40929c:	mov    eax,0x938a6b86
  4092a1:	or     eax,0xfb6279c7
  4092a6:	inc    ecx
  4092a7:	out    dx,al
  4092a8:	push   cs
  4092a9:	loop   0x4092a5
  4092ab:	ret    0x5dd5
  4092ae:	mov    dl,0x17
  4092b0:	xchg   esi,eax
  4092b1:	jnp    0x409275
  4092b3:	jns    0x409263
  4092b5:	aam    0x8e
  4092b7:	test   DWORD PTR [edx-0x3e],ebp
  4092ba:	shl    BYTE PTR [ecx],1
  4092bc:	bound  ecx,QWORD PTR [edi]
  4092be:	xchg   edx,eax
  4092bf:	mov    ch,0xa8
  4092c1:	je     0x4092ad
  4092c3:	in     eax,0xa4
  4092c5:	pop    esi
  4092c6:	jbe    0x409334
  4092c8:	lods   al,BYTE PTR ds:[esi]
  4092c9:	and    al,0xcb
  4092cb:	jno    0x4092d4
  4092cd:	cmp    al,0x26
  4092cf:	(bad)  
  4092d0:	out    dx,al
  4092d1:	jbe    0x409325
  4092d3:	adc    eax,0xad09f22e
  4092d8:	mov    ecx,0x49d21c03
  4092dd:	mov    esp,0x80b5b6c3
  4092e2:	mov    BYTE PTR [eax],dh
  4092e4:	aas    
  4092e5:	cmp    eax,eax
  4092e7:	and    DWORD PTR [edi],esi
  4092e9:	jmp    0xd65:0xe0b4b631
  4092f0:	mov    edx,0x54f170c2
  4092f5:	popa   
  4092f6:	jnp    0x40928f
  4092f8:	loopne 0x4092f6
  4092fa:	enter  0x833e,0xb4
  4092fe:	pop    ecx
  4092ff:	jge    0x4092f4
  409301:	fistp  DWORD PTR [ebp-0x7eb1f8c2]
  409307:	leave  
  409308:	pop    ds
  409309:	mov    ds:0x30e66631,eax
  40930e:	enter  0x3329,0xa5
  409312:	mov    ah,dh
  409314:	inc    ebp
  409315:	imul   ecx,DWORD PTR [ebx],0x60
  409318:	shl    eax,1
  40931a:	repnz test eax,0x5b267d54
  409320:	jns    0x409384
  409322:	push   ss
  409323:	push   cs
  409324:	cmp    dl,ah
  409326:	jmp    0x4092cd
  409328:	scas   eax,DWORD PTR es:[edi]
  409329:	out    dx,al
  40932a:	es out dx,eax
  40932c:	cmp    al,0xd3
  40932e:	(bad)  
  40932f:	xor    eax,0x29b7afa4
  409334:	inc    eax
  409335:	cmp    esi,DWORD PTR [esi+0x257070ec]
  40933b:	xlat   BYTE PTR ds:[ebx]
  40933c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40933d:	xchg   edi,eax
  40933e:	pop    ebx
  40933f:	add    eax,0x129188ce
  409344:	test   cl,ch
  409346:	xor    eax,0xcc504e1
  40934b:	lds    edi,FWORD PTR ds:0x530c0a57
  409351:	ds (bad) 
  409353:	jb     0x40936e
  409355:	shr    BYTE PTR [esi+0x12],cl
  409358:	jg     0x409363
  40935a:	ins    DWORD PTR es:[edi],dx
  40935b:	jmp    0x40931b
  40935d:	xchg   ebx,eax
  40935e:	sbb    BYTE PTR [ebx+0x66c2c4d7],dh
  409364:	pop    es
  409365:	adc    BYTE PTR [edx],ch
  409367:	pop    eax
  409368:	cmp    al,0x75
  40936a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40936b:	and    bh,BYTE PTR [ecx+0x591d25e4]
  409371:	mov    ds:0x9dacc228,al
  409376:	fldcw  WORD PTR [edx]
  409378:	sbb    eax,0xebf4596d
  40937d:	jge    0x40932c
  40937f:	iret   
  409380:	mov    edx,0x3241f41c
  409385:	shl    DWORD PTR ds:0xda1391be,0x13
  40938c:	retf   
  40938d:	pusha  
  40938e:	shl    bl,cl
  409390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409391:	popa   
  409392:	push   0x98f75ced
  409397:	push   ebp
  409398:	(bad)  [edi-0x20]
  40939b:	cmp    edi,ebp
  40939d:	fisttp WORD PTR [edx]
  40939f:	or     al,0xe3
  4093a1:	shr    cl,1
  4093a3:	std    
  4093a4:	cmp    eax,0xad7d541d
  4093a9:	pop    ebx
  4093aa:	repz xchg edx,eax
  4093ac:	fidivr DWORD PTR [eax]
  4093ae:	fs loopne 0x40942c
  4093b1:	xchg   esi,eax
  4093b2:	out    0xc9,eax
  4093b4:	jnp    0x4093c8
  4093b6:	hlt    
  4093b7:	mov    cl,0x55
  4093b9:	jb     0x409411
  4093bb:	fs loopne 0x4093aa
  4093be:	mov    bl,0x4
  4093c0:	addr16 inc edi
  4093c2:	jg     0x40936e
  4093c4:	mov    edx,0xe47cbfc8
  4093c9:	inc    eax
  4093ca:	xchg   ebx,eax
  4093cb:	test   dh,bl
  4093cd:	rcr    BYTE PTR [ecx+edi*2-0x15],1
  4093d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093d2:	cmp    ebp,eax
  4093d4:	outs   dx,BYTE PTR ds:[esi]
  4093d5:	dec    edx
  4093d6:	mov    cl,al
  4093d8:	mov    DWORD PTR [ebp-0x16c175c7],ecx
  4093de:	cld    
  4093df:	les    ebp,FWORD PTR [ecx]
  4093e1:	pushf  
  4093e2:	arpl   di,sp
  4093e4:	dec    edi
  4093e5:	mov    bl,0x8f
  4093e7:	adc    edi,eax
  4093e9:	xor    BYTE PTR [esi+0x1beaf242],bl
  4093ef:	(bad)  
  4093f0:	out    0x27,eax
  4093f2:	mov    esi,0xee49e9e0
  4093f7:	xchg   esi,eax
  4093f8:	std    
  4093f9:	and    BYTE PTR [ebp+0x38ee0289],dl
  4093ff:	(bad)  
  409400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409401:	in     al,dx
  409402:	dec    esi
  409403:	jmp    0xbdf5:0x6a8939b6
  40940a:	sbb    eax,0xd4c8da8b
  40940f:	(bad)  
  409410:	into   
  409411:	cmp    ebp,DWORD PTR [edi-0x1a]
  409414:	xlat   BYTE PTR ds:[ebx]
  409415:	sbb    BYTE PTR [edx],bl
  409417:	or     esp,DWORD PTR [ebx-0x398b4f8]
  40941d:	int3   
  40941e:	imul   eax,ecx,0x6f
  409421:	sub    DWORD PTR [ecx+eiz*2+0x56ade708],0xffffff98
  409429:	sbb    al,0x65
  40942b:	scas   al,BYTE PTR es:[edi]
  40942c:	cmp    BYTE PTR [edi-0x77c85ce5],bl
  409432:	int    0xe1
  409434:	addr16 lock mov edx,0x125c1fde
  40943b:	add    DWORD PTR [esi*8+0x1bb5e9e1],edx
  409442:	outs   dx,BYTE PTR ds:[esi]
  409443:	es pushf 
  409445:	outs   dx,BYTE PTR ds:[esi]
  409446:	out    0x18,al
  409448:	jl     0x409439
  40944a:	bound  ebx,QWORD PTR [esp+ebp*8+0x42fd1569]
  409451:	out    dx,eax
  409452:	in     al,dx
  409453:	add    DWORD PTR [edi-0x3b],edx
  409456:	sub    DWORD PTR [edi],0x282065aa
  40945c:	gs jp  0x40942b
  40945f:	daa    
  409460:	push   es
  409461:	mov    ds:0xd2911cca,eax
  409467:	mov    BYTE PTR [ecx+0x5d],0x3b
  40946b:	cmp    eax,0xd96f6fbd
  409470:	xor    BYTE PTR [eax+0x1],bl
  409473:	sbb    dh,BYTE PTR [ebp-0x1d57495b]
  409479:	scas   al,BYTE PTR es:[edi]
  40947a:	fsubr  st,st(3)
  40947c:	inc    esp
  40947d:	pusha  
  40947e:	jmp    0x4094a7
  409480:	mov    dl,0x6b
  409482:	out    0x2b,al
  409484:	push   edi
  409485:	adc    eax,0x5339cd92
  40948a:	rcr    BYTE PTR [ecx+eiz*4-0x4412d1df],0xae
  409492:	or     ebp,DWORD PTR [eax-0x11]
  409495:	call   0x212af4b1
  40949a:	mov    edx,0x6dcb9672
  40949f:	(bad)  
  4094a0:	xchg   edx,eax
  4094a1:	sub    eax,0x15e39108
  4094a6:	lds    esp,FWORD PTR [ebx]
  4094a8:	mov    al,ds:0xf634b553
  4094ad:	leave  
  4094ae:	mov    edi,0x9a0876ea
  4094b3:	or     DWORD PTR [ebx+0x321e667],esp
  4094b9:	(bad)  
  4094ba:	(bad)  
  4094bb:	sub    eax,0x53042a40
  4094c0:	out    0x1b,eax
  4094c2:	jno    0x40951b
  4094c4:	or     DWORD PTR [esi+0x7b57fe5d],edi
  4094ca:	or     cl,bl
  4094cc:	loop   0x40949a
  4094ce:	in     eax,dx
  4094cf:	and    eax,0x1ebceaef
  4094d4:	pmullw mm5,QWORD PTR [edi]
  4094d7:	bound  edx,QWORD PTR [eax-0x34]
  4094da:	pop    ecx
  4094db:	retf   
  4094dc:	push   ebx
  4094dd:	idiv   cl
  4094df:	adc    esp,DWORD PTR [ebx+edi*4-0x623b45d3]
  4094e6:	mov    dh,0x91
  4094e8:	and    ebx,DWORD PTR [eax+0x32]
  4094eb:	mov    BYTE PTR [ecx+0x4399986f],dl
  4094f1:	cmp    dh,BYTE PTR ds:0xbdb6b5a0
  4094f7:	fbstp  TBYTE PTR [ebp-0x66e4b3b6]
  4094fd:	das    
  4094fe:	clc    
  4094ff:	icebp  
  409500:	and    esi,DWORD PTR [esi+0x7a32925b]
  409506:	lods   al,BYTE PTR ds:[esi]
  409507:	jle    0x40948a
  409509:	arpl   WORD PTR [ebp+0x79],bp
  40950c:	fcom   QWORD PTR [esi+0x59]
  40950f:	cwde   
  409510:	and    ebx,DWORD PTR [edx+edi*2-0x16]
  409514:	dec    ebx
  409515:	jg     0x40957f
  409517:	std    
  409518:	(bad)  
  409519:	inc    eax
  40951a:	mov    ah,0xc2
  40951c:	in     al,dx
  40951d:	and    DWORD PTR ds:0x75112987,eax
  409523:	mov    edi,0x5757a025
  409528:	icebp  
  409529:	jmp    0x4094b2
  40952b:	aas    
  40952c:	inc    esi
  40952d:	(bad)  
  40952f:	fs xchg ebp,eax
  409531:	pop    esi
  409532:	ja     0x4095b0
  409534:	aaa    
  409535:	mov    WORD PTR [ebx],?
  409537:	add    esi,DWORD PTR [edx+0x7a]
  40953a:	sti    
  40953b:	mov    edi,es
  40953d:	push   edi
  40953e:	pop    ebx
  40953f:	push   esi
  409540:	aam    0xcf
  409542:	mov    eax,ds:0x9cb55f33
  409547:	lea    ebx,[edx-0x4ff76c1f]
  40954d:	outs   dx,DWORD PTR ds:[esi]
  40954e:	loopne 0x409583
  409550:	clc    
  409551:	cmp    dl,al
  409553:	mov    WORD PTR [eax],gs
  409555:	lahf   
  409556:	xor    ah,ch
  409558:	or     eax,0x59f3e9e2
  40955d:	in     eax,dx
  40955e:	ret    0x163f
  409561:	sbb    ebx,DWORD PTR [edi+0x4]
  409564:	xchg   ebp,eax
  409565:	inc    esp
  409566:	mov    ecx,0xfcd68f3a
  40956b:	dec    ecx
  40956c:	clc    
  40956d:	mov    ch,0x89
  40956f:	hlt    
  409570:	lahf   
  409571:	add    eax,0x16bdc330
  409576:	pop    eax
  409577:	add    al,0x36
  409579:	dec    edx
  40957a:	sbb    DWORD PTR [ebp*1+0x3a6fdee9],ebp
  409581:	mov    ch,0x9e
  409583:	adc    BYTE PTR [ebx+0x47e1ad84],ah
  409589:	pusha  
  40958a:	push   es
  40958b:	fs mov ebx,0x15fa1d3f
  409591:	xchg   BYTE PTR [edx],ch
  409593:	lds    ebp,FWORD PTR [esi]
  409595:	mov    ecx,0x1c840571
  40959a:	in     al,dx
  40959b:	fs mov bh,0x4a
  40959e:	xor    BYTE PTR [ecx+0x336b50ec],0x40
  4095a5:	dec    esp
  4095a6:	jecxz  0x409563
  4095a8:	pop    ebx
  4095a9:	or     esp,edi
  4095ab:	or     esi,DWORD PTR [edx]
  4095ad:	cmp    esi,DWORD PTR [ecx]
  4095af:	sbb    DWORD PTR [eax-0x2b],edi
  4095b2:	inc    esp
  4095b3:	sbb    bl,BYTE PTR [esi+0x3821db94]
  4095b9:	push   es
  4095ba:	ficomp DWORD PTR [esi+0x66]
  4095bd:	or     DWORD PTR ds:0xe9a9ca84,edi
  4095c3:	mov    ds:0x21804a23,al
  4095c8:	pop    esi
  4095c9:	rol    BYTE PTR [esi+edi*8+0x4287d8dd],1
  4095d0:	sbb    ch,ch
  4095d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095d3:	mov    al,0x87
  4095d5:	adc    ah,BYTE PTR [eax]
  4095d7:	xchg   ecx,eax
  4095d8:	cmp    DWORD PTR [edx],eax
  4095da:	cmc    
  4095db:	sbb    eax,0x179dec19
  4095e0:	xor    eax,0xc8fc03c
  4095e5:	pop    ds
  4095e6:	adc    al,0xa8
  4095e8:	or     esp,DWORD PTR [edi]
  4095ea:	fwait
  4095eb:	dec    ebp
  4095ec:	or     BYTE PTR [eax-0x13],al
  4095ef:	outs   dx,DWORD PTR ds:[esi]
  4095f0:	ffree  st(7)
  4095f2:	arpl   WORD PTR [eax],ax
  4095f4:	xchg   ecx,eax
  4095f5:	xor    dh,BYTE PTR ds:0xc9f53e18
  4095fb:	xor    BYTE PTR [edi+eax*1],bh
  4095fe:	mov    cl,0x42
  409600:	das    
  409601:	mov    eax,0xaebc3369
  409606:	xchg   ebp,eax
  409607:	add    al,ch
  409609:	test   DWORD PTR [edx+0x28],ecx
  40960c:	push   ebx
  40960d:	cmp    BYTE PTR [eax-0x56],bh
  409610:	bound  edi,QWORD PTR [edx+0x13]
  409613:	xchg   esp,eax
  409614:	cmc    
  409615:	dec    ebp
  409616:	push   edx
  409617:	sbb    eax,0x298bbf78
  40961c:	ret    
  40961d:	xchg   esp,eax
  40961e:	and    DWORD PTR [ebp-0x80],ecx
  409621:	retf   
  409622:	mov    bl,0xdc
  409624:	dec    edx
  409625:	and    ah,BYTE PTR [ecx-0x5b]
  409628:	lds    ebp,FWORD PTR [ecx+eiz*1]
  40962b:	aad    0xbe
  40962d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40962e:	dec    esp
  40962f:	mov    ch,0xd0
  409631:	cmp    bh,ah
  409633:	stc    
  409634:	ds bound edi,QWORD PTR ss:[ecx+ebx*4-0x3d]
  40963a:	inc    edi
  40963b:	pop    edx
  40963c:	add    esp,DWORD PTR [edi]
  40963e:	push   ecx
  40963f:	stos   BYTE PTR es:[edi],al
  409640:	into   
  409641:	xlat   BYTE PTR ds:[ebx]
  409643:	aad    0xbb
  409645:	xor    al,al
  409647:	inc    ebx
  409648:	add    ebx,edi
  40964a:	out    0x6a,al
  40964c:	hlt    
  40964d:	popf   
  40964e:	into   
  40964f:	xor    al,0x29
  409651:	push   cs
  409652:	push   ecx
  409653:	mov    esi,0x927e2e9
  409658:	std    
  409659:	call   0xf75f:0x392f5bb8
  409660:	jmp    0x776719d6
  409665:	jnp    0x4096b8
  409667:	loopne 0x4096d2
  409669:	or     DWORD PTR [ebp+eiz*4-0x34a75d89],edx
  409670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409671:	push   0xffffffef
  409673:	jo     0x4096b7
  409675:	push   ebx
  409676:	pop    esi
  409677:	adc    esp,DWORD PTR [edx-0x6cc622fb]
  40967d:	cld    
  40967e:	psubusb mm7,mm0
  409681:	xor    DWORD PTR [esi+eax*4-0x7dda3ac4],0xe334f562
  40968c:	pop    ecx
  40968d:	in     al,dx
  40968e:	sub    al,0x34
  409690:	push   0x1b
  409692:	mov    ecx,0xc2208154
  409697:	pop    edi
  409698:	retf   
  409699:	xor    ebx,edx
  40969b:	inc    esp
  40969c:	adc    BYTE PTR [esi-0x68],0xe8
  4096a0:	and    al,0xff
  4096a2:	sbb    cl,BYTE PTR [edx-0x68]
  4096a5:	jae    0x4096f9
  4096a7:	or     ch,ch
  4096a9:	arpl   WORD PTR [ecx-0x4b],cx
  4096ac:	leave  
  4096ad:	or     dh,ch
  4096af:	sub    BYTE PTR [edx-0x78],dh
  4096b2:	lods   al,BYTE PTR ds:[esi]
  4096b3:	push   0xffffffc2
  4096b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096b6:	leave  
  4096b7:	sbb    BYTE PTR [esi-0x37],al
  4096ba:	add    ah,bh
  4096bc:	addr16 mov bl,0x51
  4096bf:	hlt    
  4096c0:	pop    ss
  4096c1:	dec    ecx
  4096c2:	enter  0xe385,0x9e
  4096c6:	xor    DWORD PTR [edx+0x65ccec02],ebp
  4096cc:	loopne 0x409677
  4096ce:	fwait
  4096cf:	jmp    0x74636de4
  4096d4:	xchg   esi,eax
  4096d5:	push   ebx
  4096d6:	pop    esi
  4096d7:	jbe    0x40971e
  4096d9:	dec    edi
  4096da:	int3   
  4096db:	sbb    BYTE PTR [eax+0x3],cl
  4096de:	out    dx,eax
  4096df:	test   eax,0x17a1dde
  4096e4:	adc    BYTE PTR [esi],0x7f
  4096e7:	inc    ecx
  4096e8:	push   esi
  4096e9:	div    esp
  4096eb:	or     al,0xcc
  4096ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ee:	ss jo  0x40976d
  4096f1:	pop    ecx
  4096f2:	mov    ah,0x27
  4096f4:	mov    al,ds:0x91eb86c6
  4096f9:	repz sbb eax,DWORD PTR [eax-0x76]
  4096fd:	jmp    0x9f4:0x31c39857
  409704:	fidivr WORD PTR [ebx-0x3aae44c0]
  40970a:	and    BYTE PTR [ebx-0xd4bdc8c],0xa4
  409711:	and    al,0xd4
  409713:	out    0xe4,al
  409715:	dec    edi
  409716:	iret   
  409717:	jnp    0x4096ed
  409719:	cs iret 
  40971b:	mov    WORD PTR ds:0xedd8721d,?
  409721:	jbe    0x4096ff
  409723:	cmc    
  409724:	mov    DWORD PTR [esi+eiz*2],edx
  409727:	jmp    0x4096da
  409729:	(bad)  
  40972b:	in     al,0x2d
  40972d:	lds    esp,FWORD PTR [edi+eax*2]
  409730:	push   ds
  409731:	adc    DWORD PTR [esi-0x37e57081],ebp
  409737:	fldenv [edx]
  409739:	(bad)  
  40973a:	fcmovu st,st(5)
  40973c:	shr    ecx,0xf8
  40973f:	scas   eax,DWORD PTR es:[edi]
  409740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409741:	sti    
  409742:	push   esi
  409743:	test   eax,0x2140914c
  409748:	out    dx,al
  409749:	push   esp
  40974a:	pop    ss
  40974b:	fwait
  40974c:	mov    edi,0xc07fb9b
  409751:	xchg   ebx,eax
  409752:	ins    BYTE PTR es:[edi],dx
  409753:	lea    ebp,[ebp+0x0]
  409756:	xor    al,0x80
  409758:	sub    ch,0xa9
  40975b:	bound  ecx,QWORD PTR [esi+0x3682245b]
  409761:	jge    0x40970b
  409763:	inc    esi
  409764:	fs scas eax,DWORD PTR es:[edi]
  409766:	add    al,0x61
  409768:	into   
  409769:	and    cl,ch
  40976b:	out    0xf7,al
  40976d:	sub    al,0x6
  40976f:	and    BYTE PTR [ecx],0xbb
  409772:	call   eax
  409774:	mov    WORD PTR [ecx+eax*4],?
  409777:	hlt    
  409778:	ffreep st(0)
  40977a:	imul   esi,edx,0x42992771
  409780:	test   al,0x6b
  409782:	add    eax,DWORD PTR [edi]
  409784:	outs   dx,BYTE PTR ds:[esi]
  409785:	iret   
  409786:	push   ebp
  409787:	xchg   esi,eax
  409788:	hlt    
  409789:	icebp  
  40978a:	jno    0x409711
  40978c:	and    al,0xd9
  40978e:	aam    0x56
  409790:	ret    
  409791:	lods   eax,DWORD PTR ds:[esi]
  409792:	add    eax,0x2139db1b
  409797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409798:	fs mov ecx,0x21551c82
  40979e:	adc    esp,ebx
  4097a0:	out    dx,al
  4097a1:	ins    BYTE PTR es:[edi],dx
  4097a2:	xor    eax,0xe34f442f
  4097a7:	iret   
  4097a8:	out    dx,al
  4097a9:	jp     0x409803
  4097ab:	push   0xffffff9d
  4097ad:	stos   BYTE PTR es:[edi],al
  4097ae:	fild   WORD PTR [ebx+0x6f]
  4097b1:	aas    
  4097b2:	dec    esi
  4097b3:	bound  edi,QWORD PTR [edi-0x70]
  4097b6:	out    dx,al
  4097b7:	std    
  4097b8:	stos   DWORD PTR es:[edi],eax
  4097b9:	adc    ch,BYTE PTR [eax+0x5a5b60c7]
  4097bf:	push   ebp
  4097c0:	std    
  4097c1:	push   esp
  4097c2:	and    eax,0xaa2ce664
  4097c7:	mov    ah,0xd7
  4097c9:	jae    0x409808
  4097cb:	imul   edx,DWORD PTR [ebp+esi*8-0x1e0477f4],0xffffffd7
  4097d3:	xchg   ecx,eax
  4097d4:	iret   
  4097d5:	mov    DWORD PTR [eax-0x28],0x4d669acf
  4097dc:	pop    edx
  4097dd:	adc    cl,dh
  4097df:	mov    dl,0xf0
  4097e1:	aaa    
  4097e2:	xchg   esi,eax
  4097e3:	scas   eax,DWORD PTR es:[edi]
  4097e4:	out    dx,eax
  4097e5:	xchg   eax,ecx
  4097e7:	xlat   BYTE PTR ds:[ebx]
  4097e8:	hlt    
  4097e9:	xchg   edx,eax
  4097ea:	loop   0x40982f
  4097ec:	mov    ds:0xb06dec1c,eax
  4097f1:	ss (bad) 
  4097f3:	pushf  
  4097f4:	imul   DWORD PTR [edi-0x63]
  4097f7:	adc    ax,0xffc1
  4097fb:	loope  0x4097b7
  4097fd:	and    DWORD PTR [edi],esi
  4097ff:	rcr    DWORD PTR [edx-0x3a],cl
  409802:	ss (bad) 
  409804:	sbb    eax,0xc296950c
  409809:	jae    0x409860
  40980b:	imul   edx,ecx,0xffffff88
  40980e:	mov    esp,0xcd551288
  409813:	aaa    
  409814:	ins    DWORD PTR es:[edi],dx
  409815:	neg    BYTE PTR [edx+0x7d]
  409818:	in     eax,dx
  409819:	inc    esi
  40981a:	fnsave [eax+0x6825b912]
  409820:	fnstenv [esi+eax*4]
  409823:	sub    eax,0xf34bc63d
  409828:	pop    ebp
  409829:	mov    edx,0x4a01d3a6
  40982e:	mov    dh,0xc1
  409830:	jae    0x40988f
  409832:	retf   0xd910
  409835:	rol    bl,1
  409837:	in     eax,0x85
  409839:	mov    dl,0x1c
  40983b:	pop    edx
  40983c:	ss or  al,0x6d
  40983f:	pop    ebx
  409840:	fnstenv [ebx-0x52]
  409843:	jns    0x4097fc
  409845:	shl    ah,0xb9
  409848:	scas   al,BYTE PTR es:[edi]
  409849:	add    DWORD PTR [esi-0x6cc72b2],0xc01d598b
  409853:	fst    DWORD PTR [edi+0x84b5]
  409859:	jo     0x409881
  40985b:	(bad)  
  40985c:	pushf  
  40985d:	std    
  40985e:	daa    
  40985f:	mov    dl,BYTE PTR [ebx-0x14c3ad1a]
  409865:	mov    ecx,0xb09de745
  40986a:	std    
  40986b:	cmp    dh,bh
  40986d:	sbb    esi,DWORD PTR ds:0xcea559e6
  409873:	adc    al,0xac
  409875:	sub    al,0xd2
  409877:	test   al,0xf
  409879:	rcl    BYTE PTR [edx],cl
  40987b:	fisttp QWORD PTR [ebx]
  40987d:	(bad)  
  40987e:	jmp    DWORD PTR [ebx-0x17]
  409881:	je     0x409862
  409883:	bound  edi,QWORD PTR [ecx]
  409885:	ja     0x4098ef
  409887:	pop    ss
  409888:	out    dx,al
  409889:	int    0x78
  40988b:	pop    ebx
  40988c:	ds jle 0x4098fc
  40988f:	mov    cl,0xc2
  409891:	or     eax,0xec555001
  409896:	lahf   
  409897:	dec    eax
  409898:	push   ebx
  409899:	fwait
  40989a:	push   0x65
  40989c:	fadd   QWORD PTR [esi+eiz*2-0x68305fcb]
  4098a3:	push   ebp
  4098a4:	sub    eax,0x48b73a44
  4098a9:	cdq    
  4098aa:	(bad)  
  4098ab:	fld    QWORD PTR [edx+0x4f9e624c]
  4098b1:	mov    edx,0xe608a732
  4098b6:	cmp    DWORD PTR [eax+0x32],edi
  4098b9:	jmp    0x9696d0bf
  4098be:	(bad)  
  4098bf:	ret    0x19ba
  4098c2:	sub    dh,BYTE PTR [esi+0x31064f11]
  4098c8:	add    DWORD PTR [ebx+0x45],esp
  4098cb:	ficom  WORD PTR [edi]
  4098cd:	xor    DWORD PTR [ebx],0x3b236168
  4098d3:	lahf   
  4098d4:	jge    0x409932
  4098d6:	(bad)  
  4098d9:	test   BYTE PTR [esi],dh
  4098db:	sbb    ah,BYTE PTR [ebx+0x2a7750f5]
  4098e1:	and    eax,esi
  4098e3:	data16 clc 
  4098e5:	mov    ch,0xcb
  4098e8:	xor    al,0xff
  4098ea:	push   eax
  4098eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098ec:	ror    BYTE PTR ds:[eax],0x42
  4098f0:	fs jecxz 0x4098fc
  4098f3:	call   0x19a40303
  4098f8:	mov    eax,ebx
  4098fa:	cmp    al,0x83
  4098fc:	push   ebp
  4098fd:	ret    0xb2a2
  409900:	push   esi
  409901:	xchg   DWORD PTR [eax-0x78],ebx
  409904:	retf   0xe8b1
  409907:	inc    ecx
  409908:	or     DWORD PTR [ebp-0x20],ebx
  40990b:	test   eax,0x24b99b33
  409910:	adc    dh,cl
  409912:	adc    bl,BYTE PTR [esi]
  409914:	inc    esp
  409915:	jb     0x4098c2
  409917:	and    BYTE PTR [ebp+0x173032ce],dl
  40991d:	popf   
  40991e:	or     al,0x30
  409920:	div    ch
  409922:	mov    BYTE PTR [edx-0x4f74674b],al
  409928:	and    ebp,edi
  40992a:	sub    DWORD PTR [ebx+0x476b77c],0xffffffa2
  409931:	cmp    ebx,DWORD PTR [eax-0x38]
  409934:	pop    ebp
  409935:	and    eax,0xf53c3b9e
  40993a:	mov    ds:0xd6ea1e15,eax
  40993f:	test   ebp,edx
  409941:	adc    BYTE PTR [ecx-0xad80f6],bl
  409947:	sub    eax,0x1152eb9e
  40994c:	or     al,0x27
  40994e:	dec    eax
  40994f:	dec    eax
  409950:	sbb    BYTE PTR [eax],ch
  409952:	(bad)  
  409953:	or     esi,DWORD PTR [ebx]
  409955:	std    
  409956:	stos   BYTE PTR es:[edi],al
  409957:	gs mov edx,0x9eb1d6be
  40995d:	jmp    0xdb0f71a6
  409962:	jae    0x4098e7
  409964:	icebp  
  409965:	push   esi
  409966:	xchg   cx,ax
  409968:	icebp  
  409969:	ja     0x409944
  40996b:	fs mov ah,bh
  40996e:	xor    DWORD PTR [esi],ecx
  409970:	dec    ebx
  409971:	push   di
  409973:	fwait
  409974:	jae    0x4099b2
  409976:	fdivr  DWORD PTR [ecx]
  409978:	xchg   esp,eax
  409979:	imul   ebx,DWORD PTR [edx],0x36753d4d
  40997f:	cmp    BYTE PTR [ecx+0x1a4030c1],al
  409985:	das    
  409986:	cdq    
  409987:	add    dh,BYTE PTR [ecx-0x5d8201a2]
  40998d:	cmp    eax,0xe7eb368
  409992:	test   ebx,edx
  409994:	out    dx,eax
  409995:	test   al,0x76
  409997:	mov    dh,0x81
  409999:	push   ecx
  40999a:	fiadd  DWORD PTR [ecx-0xf]
  40999d:	fcmovbe st,st(3)
  40999f:	outs   dx,DWORD PTR ds:[esi]
  4099a0:	retf   
  4099a1:	dec    ebp
  4099a2:	adc    BYTE PTR [edx],bl
  4099a4:	cmp    BYTE PTR [ecx],dh
  4099a6:	out    dx,eax
  4099a7:	enter  0xe8d3,0xad
  4099ab:	fdiv   DWORD PTR [edi+0x53]
  4099ae:	add    DWORD PTR [edx-0x71fcdf4c],edi
  4099b4:	test   al,0x59
  4099b6:	pop    ds
  4099b7:	mov    ds:0x9d2e9477,eax
  4099bc:	aam    0x64
  4099be:	aas    
  4099bf:	imul   eax,DWORD PTR [ebp-0x4263719d],0xffffffad
  4099c6:	jb     0x409a38
  4099c8:	pop    ebx
  4099c9:	push   cs
  4099ca:	push   0x11
  4099cc:	stos   BYTE PTR es:[edi],al
  4099cd:	test   al,0xe1
  4099cf:	jno    0x4099d1
  4099d1:	dec    esi
  4099d2:	and    al,0x50
  4099d4:	leave  
  4099d5:	(bad)  
  4099d6:	retf   
  4099d7:	add    eax,0x64020b6c
  4099dc:	int    0x29
  4099de:	jnp    0x4099f2
  4099e0:	mov    ecx,0xf3380aee
  4099e5:	or     eax,0xa698b4f8
  4099ea:	icebp  
  4099eb:	xchg   esp,eax
  4099ec:	inc    BYTE PTR [eax-0x24]
  4099ef:	lods   al,BYTE PTR ds:[esi]
  4099f0:	lahf   
  4099f1:	adc    al,0xea
  4099f3:	rcl    DWORD PTR [edx+esi*8-0x54c12b78],0x11
  4099fb:	stos   BYTE PTR es:[edi],al
  4099fc:	jl     0x409a7d
  4099fe:	es xchg edi,eax
  409a00:	leave  
  409a01:	pop    ss
  409a02:	scas   eax,DWORD PTR es:[edi]
  409a03:	mov    ecx,0x1bb9221e
  409a08:	jge    0x409a2a
  409a0a:	jno    0x4099b5
  409a0c:	xchg   ebp,eax
  409a0d:	out    dx,eax
  409a0e:	add    DWORD PTR [ebp-0xe],ebx
  409a11:	loopne 0x40999b
  409a13:	sub    DWORD PTR [ebp+0x7f],esi
  409a16:	sub    al,0x82
  409a18:	dec    ebx
  409a19:	mov    cl,0xbc
  409a1b:	int3   
  409a1c:	inc    ebx
  409a1d:	pop    edi
  409a1e:	jae    0x409a60
  409a20:	retf   
  409a21:	aaa    
  409a22:	es mov bl,0xe1
  409a25:	int3   
  409a26:	cmp    BYTE PTR [esi+0x4b],al
  409a29:	mov    edi,0x3c1255c4
  409a2e:	mov    WORD PTR [edi],?
  409a30:	sti    
  409a31:	aas    
  409a32:	dec    ecx
  409a33:	popf   
  409a34:	mov    eax,ds:0xa9dfd3e2
  409a39:	push   esi
  409a3a:	cmp    al,0x4
  409a3c:	and    al,0x1e
  409a3e:	pop    edx
  409a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a40:	imul   eax,DWORD PTR [ebx+0x3c],0xb701e465
  409a47:	jg     0x409a07
  409a49:	jns    0x409a5c
  409a4b:	clc    
  409a4c:	jmp    0x5f5f:0x1778639a
  409a53:	(bad)  
  409a54:	or     al,0xa6
  409a56:	fdivr  QWORD PTR [ecx]
  409a58:	aad    0xfe
  409a5a:	fimul  WORD PTR ds:0x8d77c2e3
  409a60:	mov    al,0xb8
  409a62:	pop    ss
  409a63:	mov    edi,DWORD PTR [edx-0x22453bba]
  409a69:	or     DWORD PTR [ecx+0x49698b4d],esp
  409a6f:	and    edx,DWORD PTR [esi]
  409a71:	iret   
  409a72:	arpl   WORD PTR [ebx-0x9],bp
  409a75:	sub    esp,DWORD PTR [ebx]
  409a77:	test   eax,0x8d3456db
  409a7c:	xor    ah,BYTE PTR [ecx-0x1b63635d]
  409a82:	inc    ecx
  409a83:	ss (bad) 
  409a85:	xchg   esi,eax
  409a86:	pop    ds
  409a87:	mov    esp,0x7f4d0b00
  409a8c:	mov    DWORD PTR [ebx+0x1],eax
  409a8f:	sub    al,0x4f
  409a91:	loope  0x409a47
  409a93:	test   DWORD PTR [edi],0x61d07dba
  409a99:	xor    eax,0xaa60c72
  409a9e:	bound  edx,QWORD PTR [eax-0x5c]
  409aa1:	stos   DWORD PTR es:[edi],eax
  409aa2:	and    eax,0x60a6d48b
  409aa7:	bnd jne 0x409ac7
  409aaa:	pushf  
  409aab:	sahf   
  409aac:	aas    
  409aad:	(bad)  
  409aae:	mov    bh,0xbd
  409ab0:	mov    al,0xf
  409ab2:	in     eax,dx
  409ab3:	jns    0x409a92
  409ab5:	adc    BYTE PTR [edi-0x64],ch
  409ab8:	cmp    eax,0x4edcfbc
  409abd:	test   al,0x7e
  409abf:	ja     0x409b03
  409ac1:	scas   al,BYTE PTR es:[edi]
  409ac2:	int3   
  409ac3:	imul   DWORD PTR [edi+0xf]
  409ac6:	mov    eax,0x7f584cfb
  409acb:	and    al,0x96
  409acd:	imul   esi,DWORD PTR [ebx],0xdcca375a
  409ad3:	xchg   edi,eax
  409ad4:	mov    ecx,DWORD PTR [ecx+0x492828b6]
  409ada:	dec    edi
  409adb:	shr    BYTE PTR [ecx+edi*1],1
  409ade:	sti    
  409adf:	not    BYTE PTR [ecx-0x59a1bb09]
  409ae5:	adc    eax,0xfd0b8992
  409aea:	idiv   BYTE PTR [edx+eiz*2-0xf]
  409aee:	mov    ah,0x16
  409af0:	cmp    al,BYTE PTR [eax+esi*4]
  409af3:	pushf  
  409af4:	popf   
  409af5:	retf   
  409af6:	imul   esp,DWORD PTR [edx],0xffffffd5
  409af9:	iret   
  409afa:	not    DWORD PTR [edi-0x7a3bdc66]
  409b00:	mov    edi,0x72d4b8b9
  409b05:	cmc    
  409b06:	xchg   cl,bh
  409b08:	(bad)  
  409b09:	out    dx,eax
  409b0a:	add    DWORD PTR [ebp+edi*4-0x41],edx
  409b0e:	dec    edi
  409b0f:	lock stos BYTE PTR es:[edi],al
  409b11:	out    dx,eax
  409b12:	stc    
  409b13:	adc    al,0x5f
  409b15:	pop    ds
  409b16:	mov    DWORD PTR [edi],esp
  409b18:	or     cl,BYTE PTR [edi-0x7a]
  409b1b:	cwde   
  409b1c:	pop    ds
  409b1d:	mov    bh,0x86
  409b1f:	gs out dx,al
  409b21:	bswap  ebx
  409b23:	mov    ebp,0xa420f4c6
  409b28:	scas   al,BYTE PTR es:[edi]
  409b29:	loop   0x409b6b
  409b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b2c:	fs pushf 
  409b2e:	neg    BYTE PTR [edx+edi*4]
  409b31:	(bad)  
  409b32:	fimul  DWORD PTR [eax+eax*8-0x391d4d49]
  409b39:	inc    edi
  409b3a:	into   
  409b3b:	inc    edx
  409b3c:	out    0x4,al
  409b3e:	inc    edi
  409b3f:	mov    ebx,0xd1fb0e80
  409b44:	pop    esp
  409b45:	outs   dx,DWORD PTR ds:[esi]
  409b46:	arpl   dx,ax
  409b48:	fiadd  DWORD PTR [ecx+0x62]
  409b4b:	adc    eax,0xb7b17cd8
  409b50:	arpl   WORD PTR [ecx+esi*2-0x63],bp
  409b54:	and    eax,0xd6589442
  409b59:	jo     0x409b81
  409b5b:	mov    esi,0xdbe16b7a
  409b60:	xor    ecx,DWORD PTR [eax+edx*4+0x3557cb2]
  409b67:	jge    0x409bc6
  409b69:	cli    
  409b6a:	mov    ah,0xf1
  409b6c:	mov    cl,0xf6
  409b6e:	inc    esi
  409b6f:	mov    ds:0xa8e98e2e,eax
  409b74:	in     eax,0x50
  409b76:	ss repz push cs
  409b79:	adc    ecx,ebx
  409b7b:	jne    0x409b9b
  409b7d:	call   0x24e181a7
  409b82:	mov    ch,bl
  409b84:	xor    DWORD PTR [edx+0x254046da],ecx
  409b8a:	mov    ecx,0xc6512be1
  409b8f:	mov    ah,BYTE PTR [edx+eax*2]
  409b92:	jg     0x409b5c
  409b94:	cs push ebx
  409b96:	popf   
  409b97:	loop   0x409b93
  409b99:	(bad)  
  409b9a:	hlt    
  409b9b:	sub    eax,0x4225fdaa
  409ba0:	and    BYTE PTR [edx],ah
  409ba2:	fild   DWORD PTR [edi-0x75a4baaa]
  409ba8:	std    
  409ba9:	add    al,0xe4
  409bab:	inc    edi
  409bac:	pop    esi
  409bad:	adc    al,0x25
  409baf:	mov    eax,ds:0xb38370fc
  409bb4:	shl    esi,cl
  409bb6:	jb     0x409b79
  409bb8:	outs   dx,DWORD PTR ds:[esi]
  409bb9:	adc    ch,BYTE PTR [esp+eax*4]
  409bbc:	test   DWORD PTR [ebp-0x22],ecx
  409bbf:	xor    ecx,DWORD PTR [esi-0x4]
  409bc2:	hlt    
  409bc3:	(bad)  
  409bc4:	ds ja  0x409b92
  409bc7:	fnsave ds:0xa200ec3f
  409bcd:	push   ecx
  409bce:	and    al,0x10
  409bd0:	cmp    DWORD PTR [esi],esp
  409bd2:	or     DWORD PTR [ecx+0x22],edi
  409bd5:	pop    eax
  409bd6:	xor    ch,0xe5
  409bd9:	jl     0x409c18
  409bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bdc:	sar    dl,0xa0
  409bdf:	stc    
  409be0:	scas   al,BYTE PTR es:[edi]
  409be1:	leave  
  409be2:	ds mov eax,0x7d599207
  409be8:	sub    DWORD PTR [edx],0xffffffa1
  409beb:	xlat   BYTE PTR ds:[ebx]
  409bec:	jbe    0x409b73
  409bee:	xor    eax,DWORD PTR [eax+0x15]
  409bf1:	lods   eax,DWORD PTR ds:[esi]
  409bf2:	inc    esi
  409bf3:	das    
  409bf4:	scas   al,BYTE PTR es:[edi]
  409bf5:	jge    0x409ba5
  409bf7:	dec    eax
  409bf8:	out    0x6f,al
  409bfa:	fcmove st,st(4)
  409bfc:	das    
  409bfd:	imul   DWORD PTR [esi-0x71c1ec45]
  409c03:	retf   
  409c04:	mov    ecx,0x88d49552
  409c09:	adc    DWORD PTR [ecx+0x4b670b],0x85aeda4c
  409c13:	ja     0x409c53
  409c15:	push   es
  409c16:	mov    bl,0x35
  409c18:	sub    DWORD PTR [edx+eax*4-0x7d],esi
  409c1c:	rcr    esp,0xe3
  409c1f:	add    al,0x5b
  409c21:	mov    ch,0x4b
  409c23:	sub    edi,edi
  409c25:	stos   DWORD PTR es:[edi],eax
  409c26:	and    al,0xf6
  409c28:	cmp    esi,DWORD PTR [edi-0x69]
  409c2b:	push   0xfffffff6
  409c2d:	loope  0x409c14
  409c2f:	pop    ebp
  409c30:	jmp    0x409c0e
  409c32:	(bad)  
  409c33:	pop    eax
  409c34:	mov    al,0xce
  409c36:	xchg   BYTE PTR [ecx+0x1c7db259],bh
  409c3c:	test   eax,0x399dfa32
  409c41:	mov    edx,0xbac73fba
  409c46:	jae    0x409c03
  409c48:	mov    ebp,0x27cded4c
  409c4d:	sbb    al,0x45
  409c4f:	cmp    DWORD PTR [ecx-0x9],ecx
  409c52:	call   0xc2de44a1
  409c57:	mov    BYTE PTR [ebp+0x2d04452b],0x1d
  409c5e:	or     DWORD PTR [eax-0x6e],eax
  409c61:	nop
  409c62:	dec    ecx
  409c63:	cmp    DWORD PTR [ebx],esi
  409c65:	xchg   DWORD PTR [eax],esi
  409c67:	mov    edx,0xb223a2e7
  409c6c:	xor    eax,0xd50d9e1e
  409c71:	mov    esp,0xc99d5940
  409c76:	test   eax,0x1e819868
  409c7b:	inc    ebp
  409c7c:	or     edi,DWORD PTR [esi+eax*1-0x7d1bd811]
  409c83:	fild   QWORD PTR [edx+0x415c20dc]
  409c89:	inc    ebp
  409c8a:	outs   dx,DWORD PTR ds:[esi]
  409c8b:	lods   al,BYTE PTR ds:[esi]
  409c8c:	mov    DWORD PTR [bx+di],eax
  409c8f:	mov    edx,gs
  409c91:	jle    0x409c35
  409c93:	xchg   ebp,eax
  409c94:	mov    al,ds:0xda055e4d
  409c99:	aas    
  409c9a:	loope  0x409c5e
  409c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c9d:	arpl   WORD PTR [ebp+0xa],sp
  409ca0:	jne    0x409c5f
  409ca2:	xor    al,0xa9
  409ca4:	repnz shr DWORD PTR [ecx-0xfe9f40e],cl
  409cab:	jle    0x409ccd
  409cad:	mov    dx,0x661d
  409cb1:	(bad)  
  409cb2:	ins    BYTE PTR es:[edi],dx
  409cb3:	mov    bl,0x17
  409cb5:	inc    ebx
  409cb6:	jo     0x409d34
  409cb8:	fidivr WORD PTR [esi]
  409cba:	push   edx
  409cbb:	dec    ebp
  409cbc:	pop    ebx
  409cbd:	xor    al,0xd4
  409cbf:	xor    bh,dh
  409cc1:	clc    
  409cc2:	jno    0x409d07
  409cc4:	push   ebp
  409cc5:	std    
  409cc6:	lods   al,BYTE PTR ds:[esi]
  409cc7:	adc    bl,0x9e
  409cca:	xor    ebx,DWORD PTR [ebx-0x6c]
  409ccd:	xor    dl,BYTE PTR [edx+edi*1]
  409cd0:	mov    esi,0xcc774bae
  409cd5:	lds    ecx,FWORD PTR [edi+eax*8-0x4c]
  409cd9:	stos   BYTE PTR es:[edi],al
  409cda:	jp     0x409d16
  409cdc:	adc    ebp,DWORD PTR [eax]
  409cde:	add    BYTE PTR fs:[esi+esi*1],bh
  409ce2:	ror    DWORD PTR [esi],0x91
  409ce5:	int    0x50
  409ce7:	shr    DWORD PTR [eax+0x57bb6235],1
  409ced:	adc    al,0x66
  409cef:	push   edi
  409cf0:	mov    dh,0x51
  409cf2:	mov    eax,ds:0x3cba516f
  409cf7:	(bad)  
  409cf8:	ins    BYTE PTR es:[edi],dx
  409cf9:	out    0x4d,eax
  409cfb:	test   al,0xca
  409cfd:	(bad)  
  409cfe:	mov    bl,0x13
  409d00:	xchg   esp,eax
  409d01:	inc    ecx
  409d02:	out    dx,al
  409d03:	mov    eax,ds:0x1c0b6398
  409d08:	bound  esp,QWORD PTR [edi+ebp*4]
  409d0b:	shl    DWORD PTR [esp+edi*8+0x37e92ebf],cl
  409d12:	int    0xfa
  409d14:	cmp    BYTE PTR [ecx+0x5c],0x2c
  409d18:	clc    
  409d19:	ror    DWORD PTR [esi],0xfb
  409d1c:	enter  0x28aa,0x44
  409d20:	ins    BYTE PTR es:[edi],dx
  409d21:	pop    ds
  409d22:	fidivr DWORD PTR [ebx-0x19]
  409d25:	sbb    eax,0x1d573e5e
  409d2a:	add    BYTE PTR [eax+0x6726731f],cl
  409d30:	xchg   BYTE PTR [ecx],bh
  409d32:	ds dec ebx
  409d34:	fstp   QWORD PTR [ebp-0x4c]
  409d37:	sub    ah,BYTE PTR [eax-0x68f29959]
  409d3d:	or     BYTE PTR [ebx+0xd356a46],bh
  409d43:	jae    0x409dae
  409d45:	sub    al,0xf5
  409d47:	das    
  409d48:	scas   al,BYTE PTR es:[edi]
  409d49:	add    BYTE PTR [edx],bh
  409d4b:	add    esp,DWORD PTR [eax]
  409d4d:	or     BYTE PTR [eax+0x6c],al
  409d50:	pusha  
  409d51:	imul   edi,DWORD PTR [eax],0xffffff8c
  409d54:	pop    esp
  409d55:	lods   al,BYTE PTR ds:[esi]
  409d56:	sbb    eax,0xd8af99e6
  409d5b:	int    0x6
  409d5d:	daa    
  409d5e:	jae    0x409dc9
  409d60:	outs   dx,DWORD PTR ds:[esi]
  409d61:	pop    ebp
  409d62:	js     0x409d1b
  409d64:	push   0xffffffe6
  409d66:	xor    bh,BYTE PTR [ebp+0x2676fb0]
  409d6c:	in     eax,dx
  409d6d:	jl     0x409de8
  409d6f:	imul   eax,ebp,0xbfb32faa
  409d75:	cli    
  409d76:	mov    ebx,0x389eae7a
  409d7b:	or     eax,0xbc74b3c
  409d80:	and    al,0xc9
  409d82:	lods   al,BYTE PTR ds:[esi]
  409d83:	pop    esp
  409d84:	fbstp  TBYTE PTR [ebp-0x6b5070c7]
  409d8a:	inc    eax
  409d8b:	(bad)  
  409d8c:	and    eax,0x53599769
  409d91:	xor    edx,esp
  409d93:	out    0x74,eax
  409d95:	test   BYTE PTR [eax+0x56],cl
  409d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d99:	xor    al,0x30
  409d9b:	pop    esi
  409d9c:	lods   al,BYTE PTR ds:[esi]
  409d9d:	cmp    BYTE PTR [esi+0x65],cl
  409da0:	or     edi,esp
  409da2:	mov    bl,0xf6
  409da4:	aaa    
  409da5:	fisub  WORD PTR [esi-0x50c4824c]
  409dab:	mov    ecx,0x1c076340
  409db0:	test   BYTE PTR [esi+0x71],ch
  409db3:	cmp    bh,BYTE PTR [ebx+0x2be2e883]
  409db9:	inc    esp
  409dba:	out    dx,eax
  409dbb:	adc    DWORD PTR [esi+0x5a6b560b],edx
  409dc1:	cld    
  409dc2:	jl     0x409e19
  409dc4:	sahf   
  409dc5:	push   ebp
  409dc6:	into   
  409dc7:	mov    DWORD PTR [esi-0x33],edx
  409dca:	sub    DWORD PTR [ebx-0x36],esp
  409dcd:	mov    eax,DWORD PTR [ecx]
  409dcf:	jp     0x409da3
  409dd1:	ret    
  409dd2:	push   ds
  409dd3:	mov    esi,0xdf4e23ed
  409dd8:	inc    edx
  409dd9:	adc    ecx,edx
  409ddb:	ds dec esp
  409ddd:	mov    ds:0xad113489,al
  409de2:	stos   BYTE PTR es:[edi],al
  409de3:	cmp    al,0x2a
  409de5:	and    eax,0x2be9e8b6
  409dea:	cmp    eax,0x59a00fd1
  409def:	mov    fs:0x420c41c8,eax
  409df5:	out    0x82,eax
  409df7:	add    BYTE PTR [edi],bh
  409df9:	jp     0x409e75
  409dfb:	ds clc 
  409dfd:	(bad)  
  409dfe:	sub    esi,DWORD PTR [ecx+0x1a]
  409e01:	ret    
  409e02:	mov    BYTE PTR gs:[ecx],0xde
  409e06:	hlt    
  409e07:	pop    es
  409e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e09:	pop    ebx
  409e0a:	in     al,dx
  409e0b:	push   ecx
  409e0c:	idiv   bh
  409e0e:	rcl    DWORD PTR [esi-0x78],cl
  409e11:	jnp    0x409daa
  409e13:	fdiv   st,st(7)
  409e15:	test   DWORD PTR [esi-0x55c83527],0xd169da3d
  409e1f:	cmp    al,0x41
  409e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e22:	pop    ss
  409e23:	pushf  
  409e24:	xchg   ecx,eax
  409e25:	cmc    
  409e26:	mov    al,0x36
  409e28:	mov    ?,WORD PTR [ecx-0x34]
  409e2b:	jp     0x409e0c
  409e2d:	(bad)  [ebp+0x509826aa]
  409e33:	cmp    al,0x18
  409e35:	sar    BYTE PTR [ecx-0x224df6ce],0x9b
  409e3c:	mov    ds,ebx
  409e3e:	lods   al,BYTE PTR ds:[esi]
  409e3f:	fistp  WORD PTR [edx+0x6763d055]
  409e45:	and    ch,cl
  409e47:	push   ss
  409e48:	fldcw  WORD PTR [eax+0x41a2ddd0]
  409e4e:	leave  
  409e4f:	or     bh,bh
  409e51:	jmp    0xd8fd:0x3bdaecc8
  409e58:	fdiv   QWORD PTR [ecx]
  409e5a:	mov    dl,BYTE PTR [edi-0x67]
  409e5d:	xor    bh,ah
  409e5f:	gs inc ebp
  409e61:	or     eax,0xf22ceb46
  409e66:	mov    ds:0x251309c4,al
  409e6b:	mov    ds:0x190c347d,eax
  409e70:	les    ecx,FWORD PTR [ecx+edi*2]
  409e73:	adc    BYTE PTR ds:0x207d478f,dl
  409e79:	lds    esi,FWORD PTR [edi+0x48]
  409e7c:	adc    bl,BYTE PTR [edx+0x48]
  409e7f:	std    
  409e80:	enter  0xc48a,0xa9
  409e84:	outs   dx,DWORD PTR ds:[esi]
  409e85:	(bad)  
  409e86:	jae    0x409e4b
  409e88:	jne    0x409e14
  409e8a:	xor    eax,0x11eaa226
  409e8f:	icebp  
  409e90:	add    cl,cl
  409e92:	jo     0x409e20
  409e94:	inc    esp
  409e95:	sbb    al,BYTE PTR [ebx]
  409e97:	sub    BYTE PTR [edx],bl
  409e99:	jecxz  0x409e59
  409e9b:	mov    ch,0x33
  409e9d:	xor    al,0xf8
  409e9f:	aad    0x94
  409ea1:	adc    BYTE PTR [ecx],0x19
  409ea4:	lahf   
  409ea5:	frstor [ecx+0x3e]
  409ea8:	xchg   BYTE PTR [edi],bh
  409eaa:	mov    bl,0xa
  409eac:	jge    0x409e87
  409eae:	ins    DWORD PTR es:[edi],dx
  409eaf:	mov    WORD PTR [ebp+0x2e8e46ff],?
  409eb5:	xlat   BYTE PTR ds:[ebx]
  409eb6:	ret    
  409eb7:	cld    
  409eb8:	sub    ebx,DWORD PTR [ebx]
  409eba:	jns    0x409e88
  409ebc:	inc    DWORD PTR [eax+eiz*8]
  409ebf:	xchg   ebp,eax
  409ec0:	or     BYTE PTR [esi+0x682e314b],ah
  409ec6:	and    BYTE PTR [ebp-0x22],ch
  409ec9:	add    esi,eax
  409ecb:	jbe    0x409f29
  409ecd:	or     dl,BYTE PTR [ebx+0x2e]
  409ed0:	mov    ebx,0x221498fb
  409ed5:	jo     0x409f1e
  409ed7:	fcomp  DWORD PTR [esi+edx*1-0x63]
  409edb:	pop    ss
  409edc:	js     0x409e77
  409ede:	pop    eax
  409edf:	stos   BYTE PTR es:[edi],al
  409ee0:	jb     0x409f11
  409ee2:	neg    BYTE PTR [ecx+eiz*1]
  409ee5:	and    DWORD PTR [esi+ebx*4],ebp
  409ee8:	cmp    DWORD PTR [ebp+0x25142885],ebx
  409eee:	pop    edx
  409eef:	mov    ch,0x9e
  409ef1:	mov    BYTE PTR ds:0xdc630cc5,cl
  409ef7:	jg     0x409f12
  409ef9:	int    0x57
  409efb:	fisubr WORD PTR [ebx+0x30d84234]
  409f01:	jge    0x409eee
  409f03:	or     eax,0x41854b16
  409f08:	push   ds
  409f09:	sahf   
  409f0a:	push   ds
  409f0b:	xor    ecx,DWORD PTR [ebp-0x57d851bb]
  409f11:	adc    eax,0x19c262f5
  409f16:	xor    DWORD PTR [esi+0x32],edi
  409f19:	(bad)  
  409f1a:	ins    DWORD PTR es:[edi],dx
  409f1b:	mov    bl,0xff
  409f1d:	cld    
  409f1e:	fcos   
  409f20:	popa   
  409f21:	aad    0x8
  409f23:	mov    edi,0xbd418b2a
  409f28:	int    0xc0
  409f2a:	scas   eax,DWORD PTR es:[edi]
  409f2b:	jmp    0x409eed
  409f2d:	cmp    bl,al
  409f2f:	jle    0x409ed8
  409f31:	jo     0x409f00
  409f33:	xlat   BYTE PTR ds:[ebx]
  409f34:	push   edx
  409f35:	add    DWORD PTR fs:[ecx-0x4723fedc],eax
  409f3c:	push   0x27b8809e
  409f41:	or     al,0x1a
  409f43:	add    al,0x23
  409f45:	and    DWORD PTR [ebp-0x1bad4f8a],ecx
  409f4b:	(bad)  
  409f4d:	push   edi
  409f4e:	jne    0x409f36
  409f50:	dec    edx
  409f51:	loop   0x409f9c
  409f53:	dec    edx
  409f54:	mov    ebx,0xfbec9506
  409f59:	pop    ebx
  409f5a:	adc    eax,0x4e68f717
  409f5f:	test   al,0xd0
  409f61:	add    ebx,DWORD PTR [ebp+edx*2-0x68]
  409f65:	adc    bh,ch
  409f67:	mov    eax,edi
  409f69:	retf   
  409f6a:	inc    ebx
  409f6b:	gs aad 0x89
  409f6e:	add    eax,0xb0c5fd92
  409f73:	cmp    DWORD PTR [esp+eax*4],eax
  409f76:	cs stc 
  409f78:	stos   DWORD PTR es:[edi],eax
  409f79:	je     0x409f93
  409f7b:	int3   
  409f7c:	xchg   ebx,eax
  409f7d:	xchg   esi,eax
  409f7e:	mov    esp,0xe34b6d7e
  409f83:	jne    0x409fb7
  409f85:	mov    cl,0x5e
  409f87:	sub    DWORD PTR [ecx-0x10],0x88b40653
  409f8e:	pop    edi
  409f8f:	jnp    0x409f94
  409f91:	xchg   BYTE PTR [ebx-0x2f04464e],bh
  409f97:	ds push ecx
  409f99:	add    al,0xf7
  409f9b:	adc    bl,BYTE PTR [ecx]
  409f9d:	pop    ebx
  409f9e:	into   
  409f9f:	sub    edi,0x20e69827
  409fa5:	jl     0x409fae
  409fa7:	cmp    al,0x47
  409fa9:	sub    DWORD PTR [ecx+0x3e],ebp
  409fac:	in     al,dx
  409fad:	ss push 0x52
  409fb0:	push   ds
  409fb1:	(bad)  
  409fb2:	mov    ds:0xca1110e,al
  409fb7:	iret   
  409fb8:	jecxz  0x40a01e
  409fba:	jb     0x409fc0
  409fbc:	test   DWORD PTR ds:0x821e3122,edx
  409fc2:	mov    bh,0x8a
  409fc4:	rol    BYTE PTR [ebx-0x2c7f0258],cl
  409fca:	pop    esi
  409fcb:	rol    BYTE PTR [esi+0x58376a90],1
  409fd1:	add    al,0x28
  409fd3:	ret    0x6e4
  409fd6:	inc    edx
  409fd7:	mov    ds:0x3d989415,eax
  409fdc:	jno    0x40a002
  409fde:	out    0xc6,eax
  409fe0:	bound  esp,QWORD PTR [esi-0x5f]
  409fe3:	or     BYTE PTR [edi],dl
  409fe5:	pusha  
  409fe6:	push   cs
  409fe7:	inc    esi
  409fe8:	(bad)  
  409fe9:	ret    0x1268
  409fec:	ins    BYTE PTR es:[edi],dx
  409fed:	(bad)  
  409fee:	loope  0x40a01f
  409ff0:	pop    esi
  409ff1:	mov    ds:0x48564d44,eax
  409ff6:	call   FWORD PTR [ecx+0x64]
  409ff9:	mov    BYTE PTR [eax-0x388e11a8],bl
  409fff:	ret    
  40a000:	inc    edx
  40a001:	test   esp,edi
  40a003:	mov    ds:0x370d6d78,eax
  40a008:	test   DWORD PTR [ecx],0xb96ba724
  40a00e:	pop    esp
  40a00f:	mov    esp,0xb2cc1e0c
  40a014:	mov    cl,0xec
  40a016:	cmp    esi,edx
  40a018:	mov    esi,0x3f7c59d6
  40a01d:	fidiv  DWORD PTR [ebx]
  40a01f:	lock cmp edx,ebp
  40a022:	test   BYTE PTR [ecx+0x60],0x93
  40a026:	aad    0x75
  40a028:	(bad)  
  40a029:	pop    edx
  40a02a:	inc    esi
  40a02b:	sub    al,0x5e
  40a02d:	lods   eax,DWORD PTR ds:[esi]
  40a02e:	and    cl,ch
  40a030:	popa   
  40a031:	pushf  
  40a032:	idiv   BYTE PTR [ebx+0x54c507b1]
  40a038:	pop    ds
  40a039:	mov    ecx,fs
  40a03b:	in     al,0xa3
  40a03d:	int    0x68
  40a03f:	lods   eax,DWORD PTR ds:[esi]
  40a040:	out    dx,eax
  40a041:	add    DWORD PTR [ebx+0x28],edx
  40a044:	xchg   BYTE PTR [edx],bh
  40a046:	je     0x40a052
  40a048:	ins    DWORD PTR es:[edi],dx
  40a049:	push   edi
  40a04a:	jp     0x40a0c6
  40a04c:	push   ds
  40a04d:	loopne 0x40a0a7
  40a04f:	add    BYTE PTR [ecx+0x6d],0xc2
  40a053:	retf   0x1f7e
  40a056:	or     BYTE PTR [ebx],bh
  40a058:	xchg   ebp,eax
  40a059:	dec    ebp
  40a05a:	mov    esp,0x80b07d4
  40a05f:	fsubr  DWORD PTR [edi-0x3f7cb946]
  40a065:	std    
  40a066:	mov    ebx,0xcd34599f
  40a06b:	inc    edi
  40a06c:	lahf   
  40a06d:	icebp  
  40a06e:	stc    
  40a06f:	xor    ecx,DWORD PTR [edi]
  40a071:	mov    dl,0xe9
  40a073:	jl     0x40a002
  40a075:	enter  0x4064,0xa3
  40a079:	lea    edi,[edi+0x6aabf9d8]
  40a07f:	add    BYTE PTR [ebp+0x12ee8896],ch
  40a085:	jmp    0x55db:0x2a61dfa
  40a08c:	int3   
  40a08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a08e:	aam    0x95
  40a090:	das    
  40a091:	repnz pop ebp
  40a093:	or     cl,dh
  40a095:	mov    fs,WORD PTR [edx-0x1d]
  40a098:	jno    0x40a01a
  40a09a:	mov    dl,0x7f
  40a09c:	daa    
  40a09d:	mov    dh,0x4e
  40a09f:	jmp    0x40a090
  40a0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a2:	loope  0x40a056
  40a0a4:	sub    edi,edx
  40a0a6:	adc    DWORD PTR [edx+0x140d4485],ebp
  40a0ac:	push   ebp
  40a0ad:	mov    eax,0xe4f50652
  40a0b2:	cmp    DWORD PTR [esi+0x3f],edi
  40a0b5:	mov    ch,0x55
  40a0b7:	mov    al,ds:0x86ad1b51
  40a0bc:	(bad)  
  40a0bd:	xor    DWORD PTR [esi],eax
  40a0bf:	push   edi
  40a0c0:	pop    eax
  40a0c1:	jmp    0xef057db1
  40a0c6:	(bad)  [edx-0x2344ae6b]
  40a0cd:	scas   al,BYTE PTR es:[edi]
  40a0ce:	mov    cl,BYTE PTR [edi]
  40a0d0:	sar    BYTE PTR [ebx],0xad
  40a0d3:	jl     0x40a127
  40a0d5:	loopne 0x40a098
  40a0d7:	daa    
  40a0d8:	lock push 0xe586d218
  40a0de:	mov    edx,0xbe1463d4
  40a0e3:	rcl    bl,cl
  40a0e5:	aad    0x6c
  40a0e7:	lods   al,BYTE PTR ds:[esi]
  40a0e8:	mov    al,0x4
  40a0ea:	hlt    
  40a0eb:	ja     0x40a115
  40a0ed:	and    eax,DWORD PTR [ecx]
  40a0ef:	out    dx,al
  40a0f0:	ja     0x40a0cc
  40a0f2:	imul   eax,DWORD PTR [esi+0x16],0x9da84d88
  40a0f9:	xchg   BYTE PTR [ebx+0x2],bl
  40a0fc:	pop    ebx
  40a0fd:	test   eax,0xf37ca677
  40a102:	mov    cl,0xdc
  40a104:	dec    edi
  40a105:	mov    al,ds:0x79312221
  40a10a:	lahf   
  40a10b:	ins    DWORD PTR es:[edi],dx
  40a10c:	push   0xa8a6c4e3
  40a111:	enter  0xb19d,0x4a
  40a115:	xlat   BYTE PTR ds:[ebx]
  40a116:	and    ch,dh
  40a118:	es dec edx
  40a11a:	xor    esi,DWORD PTR [edx+0x29]
  40a11d:	cmp    esp,DWORD PTR [ecx+0x6e567533]
  40a123:	rcr    BYTE PTR [ebx+0xa],0xdf
  40a127:	loopne 0x40a175
  40a129:	cld    
  40a12a:	clc    
  40a12b:	mov    esp,0xce4b71f1
  40a130:	add    eax,0xd07e5384
  40a135:	fidiv  DWORD PTR [eax+0x0]
  40a138:	mov    eax,DWORD PTR [esi]
  40a13a:	jno    0x40a1aa
  40a13c:	imul   edi,DWORD PTR [eax],0x1b0eacc3
  40a142:	xchg   edi,eax
  40a143:	dec    ebx
  40a144:	int    0x5a
  40a146:	std    
  40a147:	or     al,0x83
  40a149:	inc    dl
  40a14b:	call   0xd6c8:0x6220d28a
  40a152:	jge    0x40a186
  40a154:	pop    edi
  40a155:	mov    al,0x21
  40a157:	cld    
  40a158:	daa    
  40a159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a15a:	sub    ebx,DWORD PTR [esi]
  40a15c:	fs push ecx
  40a15e:	sbb    al,0x9c
  40a160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a161:	repnz xor esp,DWORD PTR [eax-0x36808b4a]
  40a168:	push   es
  40a169:	mov    dl,dl
  40a16b:	adc    al,BYTE PTR [eax+0x66c94ceb]
  40a171:	cwde   
  40a172:	lock inc ecx
  40a174:	cmp    al,0x83
  40a176:	adc    eax,0x9d1a021e
  40a17b:	mov    bl,0xc5
  40a17d:	xchg   ebp,eax
  40a17e:	sti    
  40a17f:	lahf   
  40a180:	popf   
  40a181:	jae    0x40a15a
  40a183:	mov    bh,0x8
  40a185:	or     al,0xd
  40a187:	(bad)  
  40a188:	mov    ah,0x4
  40a18a:	add    BYTE PTR [ebx+0x3616dc08],bh
  40a190:	push   esi
  40a191:	sbb    eax,0x13ac0fcf
  40a196:	mulps  xmm5,XMMWORD PTR [ebx-0x80b6b9f]
  40a19d:	aam    0xf
  40a19f:	or     BYTE PTR [edx+0x7c],dh
  40a1a2:	hlt    
  40a1a3:	gs call 0x247b:0xceccbe21
  40a1ab:	loopne 0x40a1ac
  40a1ad:	sbb    esp,ebx
  40a1af:	cdq    
  40a1b0:	dec    ebp
  40a1b1:	test   al,0x29
  40a1b3:	jns    0x40a1bb
  40a1b5:	sub    eax,0x71c8d08a
  40a1ba:	sub    BYTE PTR [ecx-0x7f],dl
  40a1bd:	(bad)  [eax]
  40a1bf:	stc    
  40a1c0:	pop    edi
  40a1c1:	jp     0x40a221
  40a1c3:	push   ecx
  40a1c4:	out    dx,al
  40a1c5:	xor    ah,dl
  40a1c7:	xchg   edi,eax
  40a1c8:	outs   dx,DWORD PTR ds:[esi]
  40a1c9:	lahf   
  40a1ca:	test   DWORD PTR [esi],ebp
  40a1cc:	fwait
  40a1cd:	jns    0x40a1c7
  40a1cf:	fwait
  40a1d0:	shl    ebx,0xbc
  40a1d3:	sahf   
  40a1d4:	loop   0x40a218
  40a1d6:	cmp    BYTE PTR [eax],bl
  40a1d8:	iret   
  40a1d9:	pop    ebx
  40a1da:	cmp    cl,0x97
  40a1dd:	jnp    0x40a25d
  40a1df:	pop    ss
  40a1e0:	push   esi
  40a1e1:	jnp    0x40a238
  40a1e3:	inc    esp
  40a1e4:	push   esp
  40a1e5:	int3   
  40a1e6:	xchg   ecx,eax
  40a1e7:	push   ecx
  40a1e8:	inc    esp
  40a1e9:	pop    es
  40a1ea:	push   ss
  40a1eb:	mov    ds:0xb40cd19a,eax
  40a1f0:	fnsave ds:0x7164935e
  40a1f6:	jo     0x40a23f
  40a1f8:	scas   al,BYTE PTR es:[edi]
  40a1f9:	jmp    0x40a1d9
  40a1fb:	js     0x40a209
  40a1fd:	mov    DWORD PTR [ebx-0x14],edi
  40a200:	imul   esi,DWORD PTR [ebx+0x6e],0x9000bd53
  40a207:	sub    dh,BYTE PTR [ebp+0x70]
  40a20a:	adc    edx,edx
  40a20c:	scas   eax,DWORD PTR es:[edi]
  40a20d:	loop   0x40a1ad
  40a20f:	test   eax,0x29108d31
  40a214:	(bad)  
  40a215:	xlat   BYTE PTR ds:[ebx]
  40a216:	mov    dl,0xd7
  40a218:	sbb    BYTE PTR [esi+0x72a072bf],0xf6
  40a21f:	call   0x9336893a
  40a224:	ror    BYTE PTR [ebp-0x4e548eb9],1
  40a22a:	xor    BYTE PTR [eax-0x38d9324f],dh
  40a230:	push   0xffffffa7
  40a232:	dec    dh
  40a234:	xor    ecx,DWORD PTR ds:0x3767337a
  40a23a:	es xchg esp,eax
  40a23c:	pop    eax
  40a23d:	rcr    BYTE PTR [edx-0x152e06cb],0x73
  40a244:	or     DWORD PTR [ebp-0x33],ebx
  40a247:	sub    ah,dh
  40a249:	gs dec ebx
  40a24b:	or     DWORD PTR [edx],ecx
  40a24d:	mov    DWORD PTR [esi+0x5dbfddb3],edi
  40a253:	adc    eax,0x7a0989d7
  40a258:	cmp    al,0x75
  40a25a:	or     bl,BYTE PTR [ecx]
  40a25c:	add    edi,ecx
  40a25e:	outs   dx,BYTE PTR ds:[esi]
  40a25f:	mov    ebp,0xb3678789
  40a264:	lock lahf 
  40a266:	cdq    
  40a267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a268:	inc    esp
  40a269:	test   DWORD PTR [eax],0x3eba2152
  40a26f:	mov    DWORD PTR [edx+0x75228054],0x97c708d2
  40a279:	add    eax,0x1b6c0e27
  40a27e:	push   0x1e1fd39a
  40a283:	icebp  
  40a284:	xor    dl,bl
  40a286:	sar    DWORD PTR [esi],1
  40a288:	mov    bl,0x37
  40a28a:	cmc    
  40a28b:	int    0xbd
  40a28d:	int    0xaf
  40a28f:	mov    al,0x4f
  40a291:	xchg   ecx,eax
  40a292:	mov    al,ds:0xcc16346d
  40a297:	jne    0x40a2f6
  40a299:	mov    dl,0x1a
  40a29b:	inc    eax
  40a29c:	dec    esi
  40a29d:	xor    eax,0x37d39025
  40a2a2:	add    DWORD PTR ds:0x4932b77b,ecx
  40a2a8:	shl    DWORD PTR [edx],cl
  40a2aa:	and    DWORD PTR [edx],esp
  40a2ac:	fwait
  40a2ad:	xor    al,0x3e
  40a2af:	add    DWORD PTR [ebx-0x23],ecx
  40a2b2:	jns    0x40a2b3
  40a2b4:	lds    ebp,FWORD PTR [eax]
  40a2b6:	pushf  
  40a2b7:	enter  0x14cb,0x4e
  40a2bb:	fst    QWORD PTR [ebx+0x2719cd9]
  40a2c1:	je     0x40a29d
  40a2c3:	scas   eax,DWORD PTR es:[edi]
  40a2c4:	inc    ecx
  40a2c5:	and    al,0x7c
  40a2c7:	xchg   edi,eax
  40a2c8:	pushf  
  40a2c9:	int    0xdb
  40a2cb:	adc    al,BYTE PTR [edx+0x1a]
  40a2ce:	push   ds
  40a2cf:	outs   dx,DWORD PTR ds:[esi]
  40a2d0:	inc    edx
  40a2d1:	ins    BYTE PTR es:[edi],dx
  40a2d2:	mov    ebp,0x9103504a
  40a2d7:	adc    BYTE PTR [esi-0x69b35e2f],0x17
  40a2de:	xchg   edi,eax
  40a2df:	popf   
  40a2e0:	xchg   edx,eax
  40a2e1:	pop    eax
  40a2e2:	mov    edx,0x65326b3a
  40a2e7:	sub    dl,BYTE PTR [ebx]
  40a2e9:	xlat   BYTE PTR ds:[ebx]
  40a2ea:	imul   ebx,DWORD PTR [ecx+0x6c],0x9512d95f
  40a2f1:	out    0x2a,eax
  40a2f3:	mov    ch,0x1f
  40a2f5:	dec    ebp
  40a2f6:	jge    0x40a306
  40a2f8:	test   eax,0xac386e58
  40a2fd:	pop    edx
  40a2fe:	jmp    0x40a2be
  40a300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a301:	loop   0x40a31d
  40a303:	push   esi
  40a304:	mov    dl,0x56
  40a306:	ror    esp,1
  40a308:	cmp    eax,0xd9b86a13
  40a30d:	sbb    eax,0x63e36f45
  40a312:	push   eax
  40a313:	in     al,0xad
  40a315:	test   eax,0x49d1a49a
  40a31a:	hlt    
  40a31b:	mov    eax,ds:0x9b52f7a2
  40a320:	ficomp WORD PTR [ecx+0x7d2454f2]
  40a326:	add    eax,0x5bf4f586
  40a32b:	sub    BYTE PTR [edx],bh
  40a32d:	stc    
  40a32e:	int3   
  40a32f:	retf   
  40a330:	fcomp  QWORD PTR [esi+ecx*8-0x365ca55d]
  40a337:	pop    edx
  40a338:	mov    edx,0x4ed50c0
  40a33d:	pop    edi
  40a33e:	push   ecx
  40a33f:	fistp  WORD PTR [ebp-0x49]
  40a342:	sbb    ah,BYTE PTR [esi+0x12]
  40a345:	ret    0x205d
  40a348:	and    DWORD PTR [ebx],edx
  40a34a:	out    dx,al
  40a34b:	sub    al,0xf7
  40a34d:	fcomi  st,st(2)
  40a34f:	retf   
  40a350:	pop    edi
  40a351:	sbb    eax,0xd763ea6f
  40a356:	std    
  40a357:	push   edx
  40a358:	xor    al,0x45
  40a35a:	xchg   ebp,eax
  40a35b:	cmp    DWORD PTR [eax-0x79],ecx
  40a35e:	cmp    edi,eax
  40a360:	mov    ebp,0x5c5031bb
  40a365:	push   eax
  40a366:	js     0x40a3a5
  40a368:	mov    esp,0x87d966d0
  40a36d:	das    
  40a36e:	gs inc ecx
  40a370:	dec    edi
  40a371:	scas   eax,DWORD PTR es:[edi]
  40a372:	(bad)  
  40a374:	xor    ch,BYTE PTR [edi-0x4186652e]
  40a37a:	outs   dx,BYTE PTR ds:[esi]
  40a37b:	mov    cs,WORD PTR ds:0x62638b0e
  40a381:	add    BYTE PTR [ebp-0x39],dh
  40a384:	les    edx,FWORD PTR [ecx-0x619aff6c]
  40a38a:	adc    edx,esp
  40a38c:	xor    al,0x6b
  40a38e:	xor    dh,BYTE PTR [esi-0x44003f5]
  40a394:	cmc    
  40a395:	and    eax,0x9a51e265
  40a39a:	sub    al,0xd3
  40a39c:	jmp    0x40a383
  40a39e:	cli    
  40a39f:	call   0x6aa0:0x112e4ade
  40a3a6:	mov    dh,0x89
  40a3a8:	adc    DWORD PTR [ebp-0x11],esp
  40a3ab:	add    dl,BYTE PTR [ebp-0x38eeb6fb]
  40a3b1:	adc    edi,DWORD PTR [eax+0x3]
  40a3b4:	jno    0x40a368
  40a3b6:	inc    esp
  40a3b7:	ins    BYTE PTR es:[edi],dx
  40a3b8:	jns    0x40a420
  40a3ba:	shl    DWORD PTR [eax+eiz*1-0x73102fa8],cl
  40a3c1:	cmp    eax,0x18a79cd
  40a3c6:	sbb    eax,0x97cbefb1
  40a3cb:	sti    
  40a3cc:	pop    ebx
  40a3cd:	dec    edi
  40a3ce:	cdq    
  40a3cf:	call   0xe8dcb78c
  40a3d4:	sub    edx,ebp
  40a3d6:	imul   ecx,DWORD PTR [ebx],0xffffffdb
  40a3d9:	outs   dx,BYTE PTR ds:[esi]
  40a3da:	sub    BYTE PTR [esi-0x35c7c84],dl
  40a3e0:	call   ebp
  40a3e2:	sbb    ebp,DWORD PTR [esi-0x7a]
  40a3e5:	dec    esp
  40a3e6:	lods   eax,DWORD PTR ds:[esi]
  40a3e7:	or     al,0x26
  40a3e9:	jnp    0x40a373
  40a3eb:	adc    ecx,ebp
  40a3ed:	aad    0xc9
  40a3ef:	sub    edi,DWORD PTR [edx-0x478a1fa6]
  40a3f5:	nop
  40a3f6:	and    eax,0x8d266d61
  40a3fb:	je     0x40a417
  40a3fd:	mov    ch,0xf6
  40a3ff:	xchg   esi,eax
  40a400:	bound  eax,QWORD PTR [edx+0x26]
  40a403:	gs dec esi
  40a405:	dec    esi
  40a406:	or     al,cl
  40a408:	adc    bl,ch
  40a40a:	push   esi
  40a40b:	mov    ebp,0xc3c2b9a4
  40a410:	cwde   
  40a411:	ins    DWORD PTR es:[edi],dx
  40a412:	in     eax,dx
  40a413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a414:	mov    DWORD PTR [ebp+0x0],edi
  40a417:	icebp  
  40a418:	into   
  40a419:	repz jns 0x40a444
  40a41c:	test   BYTE PTR [eax-0x54da4979],al
  40a422:	les    esi,FWORD PTR [ecx+0xb]
  40a425:	mov    eax,0x40bd32e7
  40a42a:	xor    al,0x36
  40a42c:	xor    BYTE PTR [ecx-0x6f5378cd],bh
  40a432:	push   esp
  40a433:	xor    edi,edi
  40a435:	or     BYTE PTR [edx+eiz*4-0xa],0xdc
  40a43a:	nop
  40a43b:	mov    esp,0x2385c5bc
  40a440:	scas   al,BYTE PTR es:[edi]
  40a441:	jle    0x40a496
  40a443:	dec    eax
  40a444:	adc    ch,BYTE PTR [edi]
  40a446:	call   0xa09f:0xa8ededdf
  40a44d:	sub    DWORD PTR [ebx+eax*8-0x74],0x68b9f704
  40a455:	data16 cmp al,0x14
  40a458:	and    bl,BYTE PTR [edi]
  40a45a:	fadd   DWORD PTR [eax-0x62ff313a]
  40a460:	pop    ebp
  40a461:	das    
  40a462:	jb     0x40a438
  40a464:	pop    es
  40a465:	sub    eax,0x6f088ed7
  40a46a:	xchg   edx,eax
  40a46b:	pop    edi
  40a46c:	call   0x981a:0xd9ab6787
  40a473:	mov    WORD PTR [edx-0x44],gs
  40a476:	cmp    cl,BYTE PTR [esi-0x117a29ef]
  40a47c:	enter  0x392b,0xee
  40a480:	mov    ebx,0xe85e1990
  40a485:	lds    edx,FWORD PTR [edi+0xaab8f46]
  40a48b:	fs popf 
  40a48d:	dec    ecx
  40a48e:	xor    al,0x63
  40a490:	push   0x9
  40a492:	jns    0x40a4e2
  40a494:	(bad)
  40a499:	lahf   
  40a49a:	mov    dl,0x77
  40a49c:	add    al,0xa
  40a49e:	pop    ss
  40a49f:	cmp    esi,DWORD PTR [eax-0x7dbf51bb]
  40a4a5:	pop    esp
  40a4a6:	or     DWORD PTR [edx+edi*2+0x7defdaa1],0x3a
  40a4ae:	aam    0x94
  40a4b0:	lock xchg esp,eax
  40a4b2:	adc    al,0xcb
  40a4b4:	icebp  
  40a4b5:	push   esp
  40a4b6:	stos   BYTE PTR es:[edi],al
  40a4b7:	xlat   BYTE PTR ds:[ebx]
  40a4b8:	adc    ebp,DWORD PTR [esi+0x10]
  40a4bb:	(bad)  
  40a4bc:	outs   dx,DWORD PTR ds:[esi]
  40a4bd:	mov    cl,0x7c
  40a4bf:	pop    eax
  40a4c0:	test   DWORD PTR [ebx+0x3b],eax
  40a4c3:	push   esi
  40a4c4:	mov    edi,0xa6841fab
  40a4c9:	jno    0x40a46c
  40a4cb:	mov    edi,0x559e07ad
  40a4d0:	dec    edx
  40a4d1:	test   ch,al
  40a4d3:	mov    ebx,0x77f87536
  40a4d8:	lods   eax,DWORD PTR ds:[esi]
  40a4d9:	mov    bh,0xd6
  40a4db:	cli    
  40a4dc:	jmp    0xdc65d3b4
  40a4e1:	pop    ecx
  40a4e2:	mov    eax,0xb8d9175d
  40a4e7:	out    dx,eax
  40a4e8:	sub    bl,BYTE PTR [ebx-0x22]
  40a4eb:	push   ss
  40a4ec:	jge    0x40a507
  40a4ee:	jb     0x40a4be
  40a4f0:	push   ds
  40a4f1:	fadd   st,st(5)
  40a4f3:	pop    ebp
  40a4f4:	dec    esp
  40a4f5:	popa   
  40a4f6:	xchg   ebp,eax
  40a4f7:	sub    eax,0x97809b82
  40a4fc:	fidivr WORD PTR [esi+0x3b]
  40a4ff:	retf   
  40a500:	jae    0x40a4f0
  40a502:	(bad)  
  40a503:	out    0xf2,al
  40a505:	push   ebx
  40a506:	enter  0x3346,0x75
  40a50a:	fistp  QWORD PTR [ecx]
  40a50c:	inc    edi
  40a50d:	fwait
  40a50e:	cdq    
  40a50f:	xor    BYTE PTR [ebp-0x414bdf7d],dl
  40a515:	cdq    
  40a516:	sub    eax,DWORD PTR [edi+0x6f]
  40a519:	and    al,bl
  40a51b:	dec    edi
  40a51c:	ret    0x614e
  40a51f:	mov    ch,0xe0
  40a521:	adc    esp,DWORD PTR [esi-0x292bd0e0]
  40a527:	mov    dl,0x8f
  40a529:	cmp    ebx,0x55
  40a52c:	sub    al,0xd5
  40a52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a52f:	adc    BYTE PTR [ebp+0x22971d45],al
  40a535:	dec    ebp
  40a536:	pop    DWORD PTR [ebx+0x73]
  40a539:	pop    esp
  40a53a:	ror    DWORD PTR [ebp+0x57d6e945],cl
  40a540:	fbstp  TBYTE PTR [edx-0x5391fced]
  40a546:	or     eax,0xa4b4ce7b
  40a54b:	mov    ecx,DWORD PTR [ebx-0x4d]
  40a54e:	out    0x6d,eax
  40a550:	jmp    0x40a5d0
  40a552:	loope  0x40a54c
  40a554:	repnz adc BYTE PTR [ecx],dl
  40a557:	pop    ebx
  40a558:	and    bh,BYTE PTR [ecx-0x66495982]
  40a55e:	adc    eax,0xcc6f171a
  40a563:	push   ebx
  40a564:	xlat   BYTE PTR ds:[ebx]
  40a565:	xchg   ebp,esp
  40a567:	jge    0x40a5da
  40a569:	mov    eax,0x9946b1f1
  40a56e:	aam    0x93
  40a570:	xchg   ebx,eax
  40a571:	adc    BYTE PTR [ecx-0x8],al
  40a574:	and    DWORD PTR [eax-0x32],edx
  40a577:	sub    ch,BYTE PTR [ebx+0x6e63fa8]
  40a57d:	in     eax,dx
  40a57e:	or     DWORD PTR [ecx-0x50],eax
  40a581:	jae    0x40a601
  40a583:	retf   0xc90b
  40a586:	ret    0xa160
  40a589:	xor    ecx,DWORD PTR [edx-0x67]
  40a58c:	cmc    
  40a58d:	inc    ebx
  40a58e:	mov    dh,0xb8
  40a590:	loopne 0x40a5f8
  40a592:	sbb    ch,al
  40a594:	sbb    edi,DWORD PTR [esi-0x52]
  40a597:	test   al,0x5e
  40a599:	call   0xf687c7d5
  40a59e:	pop    ds
  40a59f:	add    ah,ah
  40a5a1:	mov    al,0xf5
  40a5a3:	mov    gs,WORD PTR [ecx+edx*1-0x48]
  40a5a7:	jecxz  0x40a5fe
  40a5a9:	push   ebp
  40a5aa:	ins    BYTE PTR es:[edi],dx
  40a5ab:	sub    DWORD PTR [esi+0x53],ebp
  40a5ae:	(bad)  
  40a5af:	les    eax,FWORD PTR [edx+eax*8-0x46a15743]
  40a5b6:	scas   eax,DWORD PTR es:[edi]
  40a5b7:	jg     0x40a628
  40a5b9:	mov    ch,0x15
  40a5bb:	popaw  
  40a5bd:	jg     0x40a5f4
  40a5bf:	ret    
  40a5c0:	jl     0x40a55b
  40a5c2:	lods   al,BYTE PTR ds:[esi]
  40a5c3:	psraw  mm0,QWORD PTR [ebx+0x4f1c7509]
  40a5ca:	ins    DWORD PTR es:[edi],dx
  40a5cb:	icebp  
  40a5cc:	and    BYTE PTR [ebx+0x17d14f8b],al
  40a5d2:	pop    esi
  40a5d3:	sub    ebp,DWORD PTR [eax-0x50]
  40a5d6:	inc    ebp
  40a5d7:	xor    al,0x53
  40a5d9:	stos   BYTE PTR es:[edi],al
  40a5da:	test   eax,0x19edc78f
  40a5df:	and    al,0x38
  40a5e1:	cli    
  40a5e2:	call   0x8a0c:0xd2619d78
  40a5e9:	xchg   esp,eax
  40a5ea:	inc    edx
  40a5eb:	(bad)  
  40a5ec:	xchg   esp,eax
  40a5ed:	(bad)  
  40a5ee:	adc    BYTE PTR [ebx+0x68],dh
  40a5f1:	mov    ch,0x6f
  40a5f3:	pop    edi
  40a5f4:	nop
  40a5f5:	jne    0x40a581
  40a5f7:	and    DWORD PTR [esi],ecx
  40a5f9:	in     eax,dx
  40a5fa:	mov    ebx,0xd5bdbea1
  40a5ff:	arpl   WORD PTR [esi-0x4748529b],cx
  40a605:	test   al,0xa1
  40a607:	pusha  
  40a608:	cmp    BYTE PTR [ecx+edx*4-0x4],al
  40a60c:	mov    edx,0xca5e9731
  40a611:	ins    DWORD PTR es:[edi],dx
  40a612:	(bad)  
  40a613:	std    
  40a614:	inc    edx
  40a615:	imul   esi,DWORD PTR [esi+0x78],0x13ff7fa8
  40a61c:	push   cs
  40a61d:	ret    
  40a61e:	lea    ebp,[ebx]
  40a620:	imul   esi,DWORD PTR [edi-0x5b],0x98e4a7d8
  40a627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a628:	or     eax,0x47b45993
  40a62d:	pusha  
  40a62e:	lods   eax,DWORD PTR ds:[esi]
  40a62f:	jge    0x40a5f8
  40a631:	mov    eax,ds:0x8910c9b6
  40a636:	test   DWORD PTR [ebx-0x2137e69c],esi
  40a63c:	pop    ebp
  40a63d:	retf   0x5c5
  40a640:	push   0x7f
  40a642:	push   ss
  40a643:	das    
  40a644:	pop    edx
  40a645:	loop   0x40a608
  40a647:	sahf   
  40a648:	ficom  WORD PTR [ecx+0x55473f39]
  40a64e:	mov    esi,0xf5d0b07d
  40a653:	(bad)  
  40a654:	daa    
  40a655:	ret    0xc87
  40a658:	mov    ebx,0x8072e7c5
  40a65d:	dec    ecx
  40a65e:	xor    ecx,edx
  40a660:	push   eax
  40a661:	push   ds
  40a662:	push   cs
  40a663:	push   0x4e69186
  40a668:	adc    al,0x47
  40a66a:	(bad)  
  40a66b:	popa   
  40a66c:	sahf   
  40a66d:	push   0x2174ce57
  40a672:	es pop esi
  40a674:	iret   
  40a675:	push   ds
  40a676:	dec    esi
  40a677:	xchg   ebp,eax
  40a678:	pop    es
  40a679:	xchg   esi,eax
  40a67a:	mov    DWORD PTR [eax+0x1],ebx
  40a67d:	imul   esp,DWORD PTR [esi],0xffa40f38
  40a683:	pushf  
  40a684:	dec    edi
  40a685:	lock mov al,ds:0x741f82da
  40a68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a68c:	cmp    BYTE PTR [edi+0x5a],ah
  40a68f:	mov    al,ds:0xe280efd9
  40a694:	iret   
  40a695:	and    BYTE PTR [eax],0x9b
  40a698:	mov    ebx,ds
  40a69a:	push   edx
  40a69b:	repz sahf 
  40a69d:	adc    ah,dl
  40a69f:	shl    BYTE PTR [edi],cl
  40a6a1:	mulps  xmm0,XMMWORD PTR ds:0x651e9f66
  40a6a8:	jge    0x40a66e
  40a6aa:	mov    eax,0xd3b4940c
  40a6af:	dec    ecx
  40a6b0:	jmp    0x30334031
  40a6b5:	aas    
  40a6b6:	xchg   edi,eax
  40a6b7:	cmp    DWORD PTR [esp+ecx*2+0xf],ebx
  40a6bb:	leave  
  40a6bc:	popf   
  40a6bd:	mov    BYTE PTR [ebx-0xd793244],bl
  40a6c3:	ror    DWORD PTR [edx-0x66cf71a5],0x50
  40a6ca:	mov    edi,0x22e4b61
  40a6cf:	jno    0x40a6e6
  40a6d1:	aaa    
  40a6d2:	js     0x40a6b5
  40a6d4:	cmp    eax,0x1ffa1875
  40a6d9:	xchg   DWORD PTR [edx+0x20],ebx
  40a6dc:	mov    al,0xb7
  40a6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6df:	shl    DWORD PTR [ebx+0x6f],0x28
  40a6e3:	bound  ecx,QWORD PTR [eax+esi*4+0x39]
  40a6e7:	dec    ebx
  40a6e8:	lods   al,BYTE PTR ds:[esi]
  40a6e9:	jne    0x40a6a4
  40a6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6ec:	(bad)  
  40a6ed:	retf   0x7a6a
  40a6f0:	aad    0x25
  40a6f2:	jg     0x40a68b
  40a6f4:	inc    ecx
  40a6f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6f6:	xchg   ebx,eax
  40a6f7:	jnp    0x40a680
  40a6f9:	pop    edi
  40a6fa:	push   esi
  40a6fb:	push   DWORD PTR [edi-0x6a]
  40a6fe:	xchg   esp,eax
  40a6ff:	adc    eax,DWORD PTR [ecx+0x12a6d410]
  40a705:	scas   eax,DWORD PTR es:[edi]
  40a706:	ds mov cl,0x94
  40a709:	int    0x9
  40a70b:	xor    DWORD PTR [ebx+0x5d],esi
  40a70e:	fist   WORD PTR [ebp+0x10]
  40a711:	retf   
  40a712:	jns    0x40a721
  40a714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a715:	cmp    DWORD PTR [esi+ebx*4-0x80],0x93d1da83
  40a71d:	shr    bl,1
  40a71f:	cmp    esi,DWORD PTR [ebp+0x79539762]
  40a725:	add    eax,0xfeb19d12
  40a72a:	and    DWORD PTR ds:0x431b44e8,ebx
  40a730:	sub    BYTE PTR [esi+0x57],cl
  40a733:	ret    
  40a734:	add    DWORD PTR [ebx+0x1f],esi
  40a737:	loope  0x40a731
  40a739:	or     eax,DWORD PTR [edx]
  40a73b:	mov    cl,al
  40a73d:	and    ecx,DWORD PTR [ebp+0x57fa8cd5]
  40a743:	mov    bh,0xf5
  40a745:	imul   esi,DWORD PTR ds:0xe2095636,0xd5c9712c
  40a74f:	mov    edi,0xa91ff058
  40a754:	pop    ecx
  40a755:	jno    0x40a78a
  40a757:	mov    ah,0xef
  40a759:	hlt    
  40a75a:	fnsave [edi+eiz*2]
  40a75d:	add    al,0xd8
  40a75f:	jno    0x40a7cd
  40a761:	xor    BYTE PTR [eax],0x56
  40a764:	std    
  40a765:	std    
  40a766:	sahf   
  40a767:	loope  0x40a79b
  40a769:	xchg   esp,eax
  40a76a:	or     bh,BYTE PTR [edi-0x44cdf652]
  40a770:	popa   
  40a771:	dec    esp
  40a772:	(bad)  
  40a773:	(bad)  
  40a774:	lock mov esi,0x9a9a32d3
  40a77a:	mov    dh,0xde
  40a77c:	(bad)  
  40a77e:	inc    ecx
  40a77f:	adc    eax,DWORD PTR [ebx]
  40a781:	xor    eax,0x460383ba
  40a786:	nop
  40a787:	push   edi
  40a788:	mov    eax,0xf1fe18b3
  40a78d:	jns    0x40a729
  40a78f:	mov    ebx,0xbf46763b
  40a794:	and    ah,BYTE PTR [esi+0x73]
  40a797:	fimul  WORD PTR [edx+0x4e]
  40a79a:	ja     0x40a7cd
  40a79c:	es pop ss
  40a79e:	out    dx,al
  40a79f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7a0:	xor    eax,DWORD PTR [edx]
  40a7a2:	adc    eax,0x5d8fa45e
  40a7a7:	rcr    DWORD PTR [ecx],0x65
  40a7aa:	je     0x40a799
  40a7ac:	xchg   edi,eax
  40a7ad:	pop    ecx
  40a7ae:	(bad)  
  40a7af:	std    
  40a7b0:	cmp    ebp,ecx
  40a7b2:	or     eax,0xdcdf92cb
  40a7b7:	pop    ebx
  40a7b8:	loopne 0x40a80b
  40a7ba:	jmp    0x1a18:0xd0dab6a3
  40a7c1:	or     eax,0x592ab888
  40a7c6:	(bad)  
  40a7c7:	push   ebx
  40a7c8:	and    ch,BYTE PTR [esi]
  40a7ca:	mov    eax,ds:0xde61ab0f
  40a7cf:	pop    edx
  40a7d0:	mov    BYTE PTR [ecx],bh
  40a7d2:	cwde   
  40a7d3:	cmc    
  40a7d4:	stc    
  40a7d5:	xchg   BYTE PTR [ecx-0x7b],bl
  40a7d8:	sub    ebx,DWORD PTR cs:[esi]
  40a7db:	mov    eax,ds:0x56fec4aa
  40a7e0:	sbb    DWORD PTR [esi+edx*1],edi
  40a7e3:	add    BYTE PTR [edi-0x23e4aeba],0xd7
  40a7ea:	sahf   
  40a7eb:	outs   dx,BYTE PTR ds:[esi]
  40a7ec:	adc    DWORD PTR [ebx],esi
  40a7ee:	lds    esp,FWORD PTR [eax]
  40a7f0:	out    0x44,eax
  40a7f2:	push   ds
  40a7f3:	dec    esp
  40a7f4:	ss pop ss
  40a7f6:	pop    ebx
  40a7f7:	jne    0x40a865
  40a7f9:	ds retf 
  40a7fb:	popa   
  40a7fc:	pop    esp
  40a7fd:	sub    BYTE PTR [edx-0x21],dh
  40a800:	push   ecx
  40a801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a802:	mov    esp,0xef362a79
  40a808:	(bad)  
  40a809:	cmp    ecx,esp
  40a80b:	xor    eax,ebx
  40a80d:	arpl   WORD PTR [ebx],si
  40a80f:	cs fsub st(1),st
  40a812:	test   al,0x63
  40a814:	lock aad 0x8b
  40a817:	call   0xd0bb:0x9fa5fc3a
  40a81e:	in     al,dx
  40a81f:	inc    DWORD PTR [ecx+0x256e2694]
  40a825:	out    dx,al
  40a826:	mov    al,0x11
  40a828:	jecxz  0x40a7c3
  40a82a:	cmp    eax,0x8e869e35
  40a82f:	sbb    BYTE PTR [edi-0x752024b1],0xe9
  40a836:	aas    
  40a837:	addr16 hlt 
  40a839:	cli    
  40a83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a83b:	mov    BYTE PTR [edi],dh
  40a83d:	push   0x71
  40a83f:	add    BYTE PTR [ebx-0x5ff657fc],dl
  40a845:	lea    esi,[ecx+ebx*8+0x5a]
  40a849:	push   ebp
  40a84a:	push   ds
  40a84b:	dec    edi
  40a84c:	mov    ss,WORD PTR [edi-0x3e]
  40a84f:	inc    esi
  40a850:	jns    0x40a85e
  40a852:	adc    eax,0xfc14c67f
  40a857:	and    edx,DWORD PTR [ebp-0x5f96d16b]
  40a85d:	mov    ch,0xb3
  40a85f:	jmp    0xe045:0x8bf5fa3e
  40a866:	mov    edx,DWORD PTR [ebp-0x10]
  40a869:	xor    eax,esi
  40a86b:	lea    eax,[eax+edx*1+0x3272ef]
  40a872:	mov    DWORD PTR [ebp-0x10],eax
  40a875:	jmp    0x4018ca
  40a87a:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a87d:	mov    eax,DWORD PTR [ebp+0xc]
  40a880:	xor    eax,esi
  40a882:	lea    ecx,[ecx+eax*1+0x3272ef]
  40a889:	lea    eax,[ecx-0x3272ef]
  40a88f:	xor    eax,esi
  40a891:	cmp    eax,0xf89c95b9
  40a896:	jne    0x40186e
  40a89c:	dec    DWORD PTR [ebp-0x34]
  40a89f:	jne    0x401862
  40a8a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a8a8:	mov    ecx,DWORD PTR [ebp+0xc]
  40a8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40a8ae:	xor    ecx,esi
  40a8b0:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ef]
  40a8b7:	xor    eax,esi
  40a8b9:	mov    al,BYTE PTR [eax+ebx*1+0x3272ef]
  40a8c0:	xor    edx,esi
  40a8c2:	mov    BYTE PTR [edx+ebx*1+0x3272ef],cl
  40a8c9:	mov    ecx,DWORD PTR [ebp+0xc]
  40a8cc:	xor    ecx,esi
  40a8ce:	mov    BYTE PTR [ecx+ebx*1+0x3272ef],al
  40a8d5:	mov    eax,DWORD PTR [ebp+0xc]
  40a8d8:	xor    eax,esi
  40a8da:	add    eax,edi
  40a8dc:	pop    edi
  40a8dd:	pop    esi
  40a8de:	pop    ebx
  40a8df:	leave  
  40a8e0:	ret    0x8
  40a8e3:	mov    DWORD PTR ds:0x42a14f,0x31f7
  40a8ed:	xor    eax,eax
  40a8ef:	xor    DWORD PTR ds:0x42a133,0x42a16f
  40a8f9:	inc    eax
  40a8fa:	ret    
  40a8fb:	push   ebp
  40a8fc:	mov    ebp,esp
  40a8fe:	sub    esp,0x38
  40a901:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a908:	push   ebx
  40a909:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40a910:	add    eax,0x7451
  40a915:	mov    eax,DWORD PTR [ebp-0x4]
  40a918:	push   esi
  40a919:	adc    DWORD PTR ds:0x42a16f,0x11c9
  40a923:	mov    esi,0x75108a8
  40a928:	xor    eax,esi
  40a92a:	and    DWORD PTR ds:0x42a1cb,0x42a193
  40a934:	push   edi
  40a935:	mov    edi,DWORD PTR ds:0x42a1bf
  40a93b:	or     DWORD PTR ds:0x42a1cb,edi
  40a941:	mov    edi,0x3272ef
  40a946:	add    eax,edi
  40a948:	sub    DWORD PTR ds:0x42a1a7,0x1574
  40a952:	mov    DWORD PTR [ebp-0x1c],eax
  40a955:	mov    DWORD PTR ds:0x42a16b,0x10
  40a95f:	cmp    DWORD PTR ds:0x42a16b,0x0
  40a966:	je     0x40a99e
  40a96c:	cmp    DWORD PTR ds:0x42a16b,0x12
  40a973:	jle    0x40a99e
  40a979:	jmp    0x40a98e
  40a97e:	push   0x8e23
  40a983:	push   0x3392
  40a988:	call   DWORD PTR ds:0x42a2c7
  40a98e:	mov    eax,ds:0x42a16b
  40a993:	dec    eax
  40a994:	mov    ds:0x42a16b,eax
  40a999:	jmp    0x40a95f
  40a99e:	mov    eax,DWORD PTR [ebp+0x14]
  40a9a1:	test   eax,eax
  40a9a3:	mov    DWORD PTR ds:0x42a19b,0x1a9e
  40a9ad:	je     0x40aa33
  40a9b3:	mov    DWORD PTR ds:0x42a17f,0x1e
  40a9bd:	cmp    DWORD PTR ds:0x42a17f,0x0
  40a9c4:	je     0x40aa1b
  40a9ca:	cmp    DWORD PTR ds:0x42a17f,0xc
  40a9d1:	jb     0x40aa1b
  40a9d7:	jmp    0x40a9ef
  40a9dc:	push   DWORD PTR [ebp-0xc]
  40a9df:	push   0x42a1af
  40a9e4:	push   0x400000
  40a9e9:	call   DWORD PTR ds:0x42a2cf
  40a9ef:	cmp    DWORD PTR ds:0x42a17f,0xd
  40a9f6:	jne    0x40aa09
  40a9fc:	mov    ebx,DWORD PTR ds:0x42a17f
  40aa02:	dec    ebx
  40aa03:	mov    DWORD PTR ds:0x42a17f,ebx
  40aa09:	mov    ebx,DWORD PTR ds:0x42a17f
  40aa0f:	dec    ebx
  40aa10:	mov    DWORD PTR ds:0x42a17f,ebx
  40aa16:	jmp    0x40a9bd
  40aa1b:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1e:	or     ebx,0x6757
  40aa24:	mov    eax,DWORD PTR [eax]
  40aa26:	xor    DWORD PTR ds:0x42a127,0x5a4b
  40aa30:	mov    DWORD PTR [ebp-0x1c],eax
  40aa33:	mov    eax,DWORD PTR [ebp-0x4]
  40aa36:	dec    DWORD PTR ds:0x42a18f
  40aa3c:	xor    eax,esi
  40aa3e:	add    eax,edi
  40aa40:	and    DWORD PTR ds:0x42a18f,0x0
  40aa4a:	jmp    0x40aa5c
  40aa4f:	mov    ebx,DWORD PTR ds:0x42a18f
  40aa55:	inc    ebx
  40aa56:	mov    DWORD PTR ds:0x42a18f,ebx
  40aa5c:	cmp    DWORD PTR ds:0x42a18f,0x13
  40aa63:	jae    0x40aaaa
  40aa69:	cmp    DWORD PTR ds:0x42a18f,0x4
  40aa70:	jb     0x40aaaa
  40aa76:	jmp    0x40aa8b
  40aa7b:	push   0x42a127
  40aa80:	push   0x37a6
  40aa85:	call   DWORD PTR ds:0x42a2d3
  40aa8b:	cmp    DWORD PTR ds:0x42a18f,0x3
  40aa92:	jne    0x40aaa5
  40aa98:	mov    ebx,DWORD PTR ds:0x42a18f
  40aa9e:	inc    ebx
  40aa9f:	mov    DWORD PTR ds:0x42a18f,ebx
  40aaa5:	jmp    0x40aa4f
  40aaaa:	mov    DWORD PTR [ebp-0x8],eax
  40aaad:	mov    ebx,DWORD PTR ds:0x42a1e7
  40aab3:	mov    ebx,DWORD PTR [ebx]
  40aab5:	xor    DWORD PTR ds:0x42a17f,ebx
  40aabb:	mov    eax,DWORD PTR [ebp-0xc]
  40aabe:	mov    DWORD PTR ds:0x42a1cb,0x14
  40aac8:	cmp    DWORD PTR ds:0x42a1cb,0x0
  40aacf:	je     0x40aaff
  40aad5:	cmp    DWORD PTR ds:0x42a1cb,0x16
  40aadc:	jbe    0x40aaff
  40aae2:	jmp    0x40aaed
  40aae7:	call   DWORD PTR ds:0x42a293
  40aaed:	mov    ebx,DWORD PTR ds:0x42a1cb
  40aaf3:	dec    ebx
  40aaf4:	mov    DWORD PTR ds:0x42a1cb,ebx
  40aafa:	jmp    0x40aac8
  40aaff:	xor    eax,esi
  40ab01:	movzx  ebx,BYTE PTR ds:0x42a17b
  40ab08:	adc    ebx,DWORD PTR ds:0x42a1af
  40ab0e:	mov    DWORD PTR ds:0x42a17b,ebx
  40ab14:	add    eax,edi
  40ab16:	mov    DWORD PTR ds:0x42a16f,0x16
  40ab20:	cmp    DWORD PTR ds:0x42a16f,0x0
  40ab27:	je     0x40ab6b
  40ab2d:	cmp    DWORD PTR ds:0x42a16f,0x1e
  40ab34:	jbe    0x40ab6b
  40ab3a:	jmp    0x40ab57
  40ab3f:	push   DWORD PTR [ebp-0x1c]
  40ab42:	push   0x2f0e
  40ab47:	push   0x429025
  40ab4c:	push   0x400000
  40ab51:	call   DWORD PTR ds:0x42a297
  40ab57:	xor    ebx,ebx
  40ab59:	add    ebx,DWORD PTR ds:0x42a16f
  40ab5f:	dec    ebx
  40ab60:	mov    DWORD PTR ds:0x42a16f,ebx
  40ab66:	jmp    0x40ab20
  40ab6b:	mov    DWORD PTR [ebp-0x24],eax
  40ab6e:	sub    DWORD PTR ds:0x42a183,0x244c
  40ab78:	mov    eax,DWORD PTR [ebp-0x4]
  40ab7b:	xor    eax,esi
  40ab7d:	neg    DWORD PTR ds:0x42a1c7
  40ab83:	add    eax,edi
  40ab85:	and    DWORD PTR ds:0x42a18b,0x0
  40ab8f:	jmp    0x40aba1
  40ab94:	mov    ebx,DWORD PTR ds:0x42a18b
  40ab9a:	inc    ebx
  40ab9b:	mov    DWORD PTR ds:0x42a18b,ebx
  40aba1:	cmp    DWORD PTR ds:0x42a18b,0x19
  40aba8:	jae    0x40abe5
  40abae:	cmp    DWORD PTR ds:0x42a18b,0xf
  40abb5:	jb     0x40abe5
  40abbb:	jmp    0x40abc6
  40abc0:	call   DWORD PTR ds:0x42a29b
  40abc6:	cmp    DWORD PTR ds:0x42a18b,0xe
  40abcd:	jne    0x40abe0
  40abd3:	mov    ebx,DWORD PTR ds:0x42a18b
  40abd9:	inc    ebx
  40abda:	mov    DWORD PTR ds:0x42a18b,ebx
  40abe0:	jmp    0x40ab94
  40abe5:	mov    DWORD PTR [ebp-0x30],eax
  40abe8:	mov    ebx,DWORD PTR [ebp-0x4]
  40abeb:	and    DWORD PTR ds:0x42a13f,ecx
  40abf1:	xor    ebx,esi
  40abf3:	and    DWORD PTR ds:0x42a17f,0x0
  40abfd:	jmp    0x40ac0d
  40ac02:	mov    eax,ds:0x42a17f
  40ac07:	inc    eax
  40ac08:	mov    ds:0x42a17f,eax
  40ac0d:	cmp    DWORD PTR ds:0x42a17f,0x13
  40ac14:	jae    0x40ac61
  40ac1a:	cmp    DWORD PTR ds:0x42a17f,0x6
  40ac21:	jb     0x40ac61
  40ac27:	jmp    0x40ac44
  40ac2c:	push   0x65b7
  40ac31:	push   0x437f
  40ac36:	push   0x4291f1
  40ac3b:	push   DWORD PTR [ebp-0x1c]
  40ac3e:	call   DWORD PTR ds:0x42a2a3
  40ac44:	cmp    DWORD PTR ds:0x42a17f,0x5
  40ac4b:	jne    0x40ac5c
  40ac51:	mov    eax,ds:0x42a17f
  40ac56:	inc    eax
  40ac57:	mov    ds:0x42a17f,eax
  40ac5c:	jmp    0x40ac02
  40ac61:	add    ebx,edi
  40ac63:	mov    DWORD PTR ds:0x42a147,0x13
  40ac6d:	cmp    DWORD PTR ds:0x42a147,0x0
  40ac74:	je     0x40aca2
  40ac7a:	cmp    DWORD PTR ds:0x42a147,0x18
  40ac81:	jg     0x40aca2
  40ac87:	jmp    0x40ac92
  40ac8c:	call   DWORD PTR ds:0x42a2a7
  40ac92:	mov    eax,ds:0x42a147
  40ac97:	dec    eax
  40ac98:	mov    ds:0x42a147,eax
  40ac9d:	jmp    0x40ac6d
  40aca2:	mov    eax,DWORD PTR [ebp-0x24]
  40aca5:	or     DWORD PTR ds:0x42a177,0x6e45
  40acaf:	sub    eax,edi
  40acb1:	sub    DWORD PTR ds:0x42a143,0x42a193
  40acbb:	lea    ecx,[ebx-0x3272ef]
  40acc1:	xor    eax,esi
  40acc3:	xor    ecx,esi
  40acc5:	mov    DWORD PTR ds:0x42a1b7,0x526e
  40accf:	cmp    ecx,eax
  40acd1:	je     0x40aeaf
  40acd7:	or     DWORD PTR ds:0x42a127,0x176b
  40ace1:	mov    eax,DWORD PTR [ebp-0x4]
  40ace4:	xor    eax,esi
  40ace6:	add    DWORD PTR ds:0x42a14f,0x42a14b
  40acf0:	add    eax,edi
  40acf2:	cmp    ebx,eax
  40acf4:	mov    DWORD PTR ds:0x42a1bf,0x7cb
  40acfe:	jne    0x40ae8c
  40ad04:	xor    DWORD PTR ds:0x42a163,0x47ee
  40ad0e:	push   DWORD PTR [ebp+0x8]
  40ad11:	not    DWORD PTR ds:0x42a177
  40ad17:	call   0x424cc1
  40ad1c:	mov    DWORD PTR [ebp-0x14],eax
  40ad1f:	and    DWORD PTR ds:0x42a163,0x0
  40ad29:	mov    ecx,DWORD PTR ds:0x42a163
  40ad2f:	inc    ecx
  40ad30:	mov    DWORD PTR ds:0x42a163,ecx
  40ad36:	cmp    DWORD PTR ds:0x42a163,0x9
  40ad3d:	jle    0x40ad82
  40ad43:	jmp    0x40ad5b
  40ad48:	push   0x1fb9
  40ad4d:	push   0x42a1c3
  40ad52:	push   DWORD PTR [ebp-0x28]
  40ad55:	call   DWORD PTR ds:0x42a2ab
  40ad5b:	cmp    DWORD PTR ds:0x42a163,0x8
  40ad62:	jne    0x40ad75
  40ad68:	mov    ecx,DWORD PTR ds:0x42a163
  40ad6e:	inc    ecx
  40ad6f:	mov    DWORD PTR ds:0x42a163,ecx
  40ad75:	cmp    DWORD PTR ds:0x42a163,0x13
  40ad7c:	jb     0x40ad29
  40ad82:	mov    eax,DWORD PTR [ebp-0x4]
  40ad85:	sub    ecx,DWORD PTR ds:0x42a1af
  40ad8b:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad8e:	xor    DWORD PTR ds:0x42a137,0x508b
  40ad98:	xor    eax,esi
  40ad9a:	sub    DWORD PTR ds:0x42a177,0x58b3
  40ada4:	add    eax,edi
  40ada6:	mov    DWORD PTR ds:0x42a1cf,0x3d63
  40adb0:	cmp    ecx,eax
  40adb2:	mov    DWORD PTR ds:0x42a15f,0x56c5
  40adbc:	je     0x40af1a
  40adc2:	sub    DWORD PTR ds:0x42a15f,0x42a183
  40adcc:	push   DWORD PTR [ebp-0x14]
  40adcf:	add    DWORD PTR ds:0x42a147,0x42a193
  40add9:	push   DWORD PTR [ebp+0x8]
  40addc:	call   0x424dc2
  40ade1:	mov    DWORD PTR [ebp-0x14],eax
  40ade4:	and    DWORD PTR ds:0x42a1af,0x0
  40adee:	mov    ecx,DWORD PTR ds:0x42a1af
  40adf4:	inc    ecx
  40adf5:	mov    DWORD PTR ds:0x42a1af,ecx
  40adfb:	cmp    DWORD PTR ds:0x42a1af,0xd
  40ae02:	ja     0x40ae48
  40ae08:	jmp    0x40ae21
  40ae0d:	push   0x24a8
  40ae12:	push   DWORD PTR [ebp-0x1c]
  40ae15:	push   DWORD PTR [ebp-0x14]
  40ae18:	push   DWORD PTR [ebp-0x10]
  40ae1b:	call   DWORD PTR ds:0x42a2af
  40ae21:	cmp    DWORD PTR ds:0x42a1af,0xc
  40ae28:	jne    0x40ae3b
  40ae2e:	mov    ecx,DWORD PTR ds:0x42a1af
  40ae34:	inc    ecx
  40ae35:	mov    DWORD PTR ds:0x42a1af,ecx
  40ae3b:	cmp    DWORD PTR ds:0x42a1af,0x18
  40ae42:	jb     0x40adee
  40ae48:	mov    eax,DWORD PTR [ebp-0x4]
  40ae4b:	mov    ecx,DWORD PTR [ebp-0x14]
  40ae4e:	xor    eax,esi
  40ae50:	add    eax,edi
  40ae52:	cmp    ecx,eax
  40ae54:	je     0x40af1a
  40ae5a:	mov    eax,DWORD PTR [ebp-0x14]
  40ae5d:	mov    eax,DWORD PTR [eax+0x18]
  40ae60:	mov    DWORD PTR [ebp-0x24],eax
  40ae63:	mov    eax,DWORD PTR [ebp-0x14]
  40ae66:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae69:	add    ecx,DWORD PTR [eax+0x20]
  40ae6c:	mov    DWORD PTR [ebp-0x2c],ecx
  40ae6f:	mov    eax,DWORD PTR [ebp-0x14]
  40ae72:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae75:	add    ecx,DWORD PTR [eax+0x24]
  40ae78:	mov    DWORD PTR [ebp-0x34],ecx
  40ae7b:	mov    eax,DWORD PTR [ebp-0x14]
  40ae7e:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae81:	add    ecx,DWORD PTR [eax+0x1c]
  40ae84:	mov    DWORD PTR [ebp-0x14],ecx
  40ae87:	jmp    0x40aee2
  40ae8c:	mov    eax,DWORD PTR [ebp-0x2c]
  40ae8f:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae92:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae95:	mov    DWORD PTR [ebp-0x28],ecx
  40ae98:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9b:	mov    ecx,DWORD PTR [ebp-0x28]
  40ae9e:	xor    eax,esi
  40aea0:	add    eax,edi
  40aea2:	cmp    ecx,eax
  40aea4:	je     0x40aee2
  40aeaa:	jmp    0x40aed3
  40aeaf:	mov    eax,DWORD PTR [ebp-0x4]
  40aeb2:	mov    ecx,DWORD PTR [ebp-0x8]
  40aeb5:	xor    eax,esi
  40aeb7:	add    eax,edi
  40aeb9:	cmp    ecx,eax
  40aebb:	mov    eax,DWORD PTR [ebp-0x4]
  40aebe:	je     0x40af1d
  40aec4:	mov    ecx,DWORD PTR [ebp-0x30]
  40aec7:	xor    eax,esi
  40aec9:	add    eax,edi
  40aecb:	cmp    ecx,eax
  40aecd:	je     0x40af26
  40aed3:	lea    eax,[ebp-0x8]
  40aed6:	push   eax
  40aed7:	push   DWORD PTR [ebp-0x28]
  40aeda:	push   DWORD PTR [ebp+0xc]
  40aedd:	call   0x40b11d
  40aee2:	mov    eax,DWORD PTR [ebp-0x4]
  40aee5:	mov    ecx,DWORD PTR [ebp-0x8]
  40aee8:	xor    eax,esi
  40aeea:	add    eax,edi
  40aeec:	cmp    ecx,eax
  40aeee:	je     0x40af09
  40aef4:	mov    eax,DWORD PTR [ebp-0x34]
  40aef7:	movzx  eax,WORD PTR [eax+ebx*2]
  40aefb:	mov    ecx,DWORD PTR [ebp-0x14]
  40aefe:	mov    eax,DWORD PTR [ecx+eax*4]
  40af01:	mov    DWORD PTR [ebp-0x38],eax
  40af04:	jmp    0x40aeaf
  40af09:	mov    eax,DWORD PTR [ebp-0xc]
  40af0c:	xor    eax,esi
  40af0e:	lea    ebx,[ebx+eax*1+0x3272ef]
  40af15:	jmp    0x40ac63
  40af1a:	mov    eax,DWORD PTR [ebp-0x4]
  40af1d:	xor    eax,esi
  40af1f:	add    eax,edi
  40af21:	jmp    0x40b045
  40af26:	mov    eax,DWORD PTR [ebp-0x38]
  40af29:	add    eax,DWORD PTR [ebp+0x8]
  40af2c:	mov    DWORD PTR [ebp-0x18],eax
  40af2f:	mov    eax,DWORD PTR [ebp-0x1c]
  40af32:	test   eax,eax
  40af34:	je     0x40afce
  40af3a:	mov    DWORD PTR [ebp-0x20],0x0
  40af41:	push   0x3
  40af43:	xor    edx,edx
  40af45:	pop    edx
  40af46:	add    edx,0x8
  40af49:	push   edx
  40af4a:	pop    ecx
  40af4b:	push   0x6
  40af4d:	dec    ecx
  40af4e:	pop    ebx
  40af4f:	dec    ebx
  40af50:	xchg   ebx,ecx
  40af52:	sub    ebx,ecx
  40af54:	xchg   ebx,ecx
  40af56:	dec    ecx
  40af57:	mov    eax,DWORD PTR [ebp-0x1c]
  40af5a:	imul   eax,ecx
  40af5d:	sub    esp,eax
  40af5f:	mov    DWORD PTR [ebp-0x20],esp
  40af62:	mov    eax,DWORD PTR [ebp-0x4]
  40af65:	xor    eax,esi
  40af67:	add    eax,edi
  40af69:	jmp    0x40afa7
  40af6e:	mov    ecx,DWORD PTR [ebp-0xc]
  40af71:	mov    eax,DWORD PTR [ebp+0x8]
  40af74:	mov    edx,DWORD PTR [ebp+0x14]
  40af77:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40af7b:	xor    ecx,esi
  40af7d:	add    ecx,edi
  40af7f:	xor    edx,edx
  40af81:	div    ecx
  40af83:	mov    ecx,DWORD PTR [ebp-0x4]
  40af86:	xor    ecx,esi
  40af88:	lea    eax,[ecx+eax*1+0x3272ef]
  40af8f:	mov    ecx,DWORD PTR [ebp+0x8]
  40af92:	mov    edx,DWORD PTR [ebp-0x20]
  40af95:	mov    DWORD PTR [edx+ecx*4],eax
  40af98:	mov    eax,DWORD PTR [ebp-0xc]
  40af9b:	mov    ecx,DWORD PTR [ebp+0x8]
  40af9e:	xor    eax,esi
  40afa0:	lea    eax,[eax+ecx*1+0x3272ef]
  40afa7:	mov    DWORD PTR [ebp+0x8],eax
  40afaa:	mov    eax,DWORD PTR [ebp-0xc]
  40afad:	mov    ecx,DWORD PTR [ebp+0x14]
  40afb0:	xor    eax,esi
  40afb2:	add    eax,edi
  40afb4:	imul   eax,DWORD PTR [ecx]
  40afb7:	mov    ecx,DWORD PTR [ebp-0x4]
  40afba:	mov    edx,DWORD PTR [ebp+0x8]
  40afbd:	xor    ecx,esi
  40afbf:	lea    ecx,[ecx+edx*1+0x3272ef]
  40afc6:	cmp    ecx,eax
  40afc8:	jne    0x40af6e
  40afce:	mov    eax,DWORD PTR [ebp-0x4]
  40afd1:	xor    eax,esi
  40afd3:	add    eax,edi
  40afd5:	mov    DWORD PTR [ebp-0x10],eax
  40afd8:	mov    ebx,0x65655
  40afdd:	add    ebx,0x3234
  40afe3:	xchg   ebx,esi
  40afe5:	xor    ebx,ebx
  40afe7:	push   esi
  40afe8:	mov    esi,ebx
  40afea:	pop    ebx
  40afeb:	mov    edx,esi
  40afed:	add    ebx,0x1002
  40aff3:	lea    eax,[ebp-0x18]
  40aff6:	add    edx,eax
  40aff8:	add    edx,0x5
  40affb:	push   edx
  40affc:	inc    esi
  40affd:	pop    ecx
  40affe:	dec    ecx
  40afff:	xchg   ecx,eax
  40b000:	dec    eax
  40b001:	xchg   ecx,eax
  40b002:	dec    ecx
  40b003:	xchg   ecx,edx
  40b005:	dec    edx
  40b006:	push   edx
  40b007:	mov    edx,ebx
  40b009:	pop    ebx
  40b00a:	dec    ebx
  40b00b:	call   DWORD PTR [ebx]
  40b00d:	cmp    DWORD PTR [ebp+0x10],esi
  40b010:	je     0x40b031
  40b016:	xchg   edx,eax
  40b017:	push   0xc
  40b019:	pop    ecx
  40b01a:	dec    ecx
  40b01b:	push   0x3
  40b01d:	pop    ebx
  40b01e:	inc    ebx
  40b01f:	xchg   ebx,ecx
  40b021:	inc    ecx
  40b022:	sub    ebx,ecx
  40b024:	xchg   ebx,ecx
  40b026:	dec    ecx
  40b027:	dec    ecx
  40b028:	mov    eax,DWORD PTR [ebp-0x1c]
  40b02b:	imul   eax,ecx
  40b02e:	add    esp,eax
  40b030:	xchg   edx,eax
  40b031:	push   eax
  40b032:	xor    ebx,ebx
  40b034:	mov    edx,esp
  40b036:	dec    edx
  40b037:	inc    ebx
  40b038:	add    ebx,DWORD PTR [edx+ebx*1]
  40b03b:	dec    ebx
  40b03c:	xor    edx,edx
  40b03e:	add    DWORD PTR [ebp-0x10],ebx
  40b041:	pop    ebx
  40b042:	mov    eax,DWORD PTR [ebp-0x10]
  40b045:	pop    edi
  40b046:	pop    esi
  40b047:	pop    ebx
  40b048:	leave  
  40b049:	ret    0x10
  40b04c:	push   ebp
  40b04d:	mov    ebp,esp
  40b04f:	push   ecx
  40b050:	and    DWORD PTR ds:0x42a13f,0x0
  40b05a:	mov    ecx,DWORD PTR ds:0x42a13f
  40b060:	inc    ecx
  40b061:	mov    DWORD PTR ds:0x42a13f,ecx
  40b067:	cmp    DWORD PTR ds:0x42a13f,0x9
  40b06e:	jl     0x40b0b8
  40b074:	jmp    0x40b091
  40b079:	push   0x2d70
  40b07e:	push   DWORD PTR [ebp-0x14]
  40b081:	push   0x42a187
  40b086:	push   0x2ee9
  40b08b:	call   DWORD PTR ds:0x42a2b3
  40b091:	cmp    DWORD PTR ds:0x42a13f,0x8
  40b098:	jne    0x40b0ab
  40b09e:	mov    ecx,DWORD PTR ds:0x42a13f
  40b0a4:	inc    ecx
  40b0a5:	mov    DWORD PTR ds:0x42a13f,ecx
  40b0ab:	cmp    DWORD PTR ds:0x42a13f,0x1b
  40b0b2:	jb     0x40b05a
  40b0b8:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40b0bf:	mov    eax,DWORD PTR [ebp-0x4]
  40b0c2:	mov    edx,DWORD PTR [ebp+0x10]
  40b0c5:	and    ecx,DWORD PTR ds:0x42a1a7
  40b0cb:	mov    ecx,0x75108a8
  40b0d0:	or     DWORD PTR ds:0x42a187,0x42a183
  40b0da:	xor    eax,ecx
  40b0dc:	add    eax,0x3272ef
  40b0e1:	mov    DWORD PTR [edx],eax
  40b0e3:	mov    eax,DWORD PTR [ebp+0xc]
  40b0e6:	xor    eax,ecx
  40b0e8:	push   esi
  40b0e9:	mov    esi,DWORD PTR [ebp+0x10]
  40b0ec:	mov    edx,0x3272ef
  40b0f1:	add    eax,edx
  40b0f3:	mov    DWORD PTR [esi+0x4],eax
  40b0f6:	mov    eax,DWORD PTR [ebp+0x14]
  40b0f9:	mov    esi,DWORD PTR [ebp+0x10]
  40b0fc:	mov    DWORD PTR [esi+0x8],eax
  40b0ff:	mov    eax,DWORD PTR [ebp+0x18]
  40b102:	mov    esi,DWORD PTR [ebp+0x10]
  40b105:	mov    DWORD PTR [esi+0xc],eax
  40b108:	mov    eax,DWORD PTR [ebp+0x1c]
  40b10b:	mov    esi,DWORD PTR [ebp+0x10]
  40b10e:	mov    DWORD PTR [esi+0x10],eax
  40b111:	mov    eax,DWORD PTR [ebp+0x8]
  40b114:	xor    eax,ecx
  40b116:	add    eax,edx
  40b118:	pop    esi
  40b119:	leave  
  40b11a:	ret    0x18
  40b11d:	push   ebp
  40b11e:	mov    ebp,esp
  40b120:	sub    esp,0x9c
  40b126:	mov    ecx,DWORD PTR [ebp+0x8]
  40b129:	and    DWORD PTR ds:0x42a17f,0x0
  40b133:	mov    eax,ds:0x42a17f
  40b138:	inc    eax
  40b139:	mov    ds:0x42a17f,eax
  40b13e:	cmp    DWORD PTR ds:0x42a17f,0x9
  40b145:	jbe    0x40b18f
  40b14b:	jmp    0x40b16a
  40b150:	push   0x42a15f
  40b155:	push   0x468f
  40b15a:	push   0x42900e
  40b15f:	push   0x4290e5
  40b164:	call   DWORD PTR ds:0x42a2b7
  40b16a:	cmp    DWORD PTR ds:0x42a17f,0x8
  40b171:	jne    0x40b182
  40b177:	mov    eax,ds:0x42a17f
  40b17c:	inc    eax
  40b17d:	mov    ds:0x42a17f,eax
  40b182:	cmp    DWORD PTR ds:0x42a17f,0x13
  40b189:	jb     0x40b133
  40b18f:	mov    eax,0x8a96
  40b194:	xor    ax,WORD PTR [ecx+0x20]
  40b198:	add    DWORD PTR ds:0x42a18f,ecx
  40b19e:	mov    ecx,0x3b59
  40b1a3:	adc    DWORD PTR ds:0x42a1af,0x457a
  40b1ad:	add    ax,cx
  40b1b0:	movzx  eax,ax
  40b1b3:	mov    DWORD PTR ds:0x42a16b,0x1b
  40b1bd:	cmp    DWORD PTR ds:0x42a16b,0x0
  40b1c4:	je     0x40b1f7
  40b1ca:	cmp    DWORD PTR ds:0x42a16b,0x1f
  40b1d1:	ja     0x40b1f7
  40b1d7:	jmp    0x40b1e5
  40b1dc:	push   DWORD PTR [ebp-0x1c]
  40b1df:	call   DWORD PTR ds:0x42a2bf
  40b1e5:	mov    ecx,DWORD PTR ds:0x42a16b
  40b1eb:	dec    ecx
  40b1ec:	mov    DWORD PTR ds:0x42a16b,ecx
  40b1f2:	jmp    0x40b1bd
  40b1f7:	mov    DWORD PTR [ebp-0x10],eax
  40b1fa:	jmp    0x40d57f
  40b1ff:	inc    ecx
  40b200:	pop    edx
  40b201:	cmp    edi,esi
  40b203:	and    DWORD PTR [edi-0x78343779],edx
  40b209:	dec    ebp
  40b20a:	pop    eax
  40b20b:	fisubr WORD PTR [ecx+0x7]
  40b20e:	inc    edx
  40b20f:	ss cmc 
  40b211:	jp     0x40b28d
  40b213:	adc    bl,BYTE PTR [edi+0x7a]
  40b216:	jp     0x40b1c0
  40b218:	pop    esi
  40b219:	stos   DWORD PTR es:[edi],eax
  40b21a:	pop    ebp
  40b21b:	(bad)  
  40b21d:	test   DWORD PTR [ebp+edi*4+0x635dd880],eax
  40b224:	inc    ebp
  40b225:	out    0x73,eax
  40b227:	ss cmc 
  40b229:	mov    esp,0x3e64f232
  40b22e:	div    BYTE PTR [eax-0x312b1b0d]
  40b234:	mov    cl,0x6d
  40b236:	cmp    eax,0xd8e77e0c
  40b23b:	jo     0x40b29e
  40b23d:	mov    bh,0x5a
  40b23f:	aaa    
  40b240:	das    
  40b241:	daa    
  40b242:	leave  
  40b243:	sub    ebx,0x31
  40b246:	adc    DWORD PTR [edx-0x4f],edi
  40b249:	es in  al,0xab
  40b24c:	aad    0xd
  40b24e:	rcl    bh,1
  40b250:	loopne 0x40b24a
  40b252:	mul    DWORD PTR [ecx-0x13afe3a5]
  40b258:	push   edi
  40b259:	data16 jnp 0x40b2d9
  40b25c:	out    dx,eax
  40b25d:	dec    eax
  40b25e:	xchg   edx,eax
  40b25f:	loop   0x40b25e
  40b261:	pop    ebp
  40b262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b263:	(bad)  [ebx-0x3538401]
  40b269:	dec    ebp
  40b26a:	mul    edx
  40b26c:	leave  
  40b26d:	dec    edx
  40b26e:	cdq    
  40b26f:	mov    dh,0xe3
  40b271:	and    ebp,edi
  40b273:	arpl   WORD PTR [edi-0x668e0b2d],bp
  40b279:	fidivr WORD PTR [esp+eiz*8+0x2aac5fc2]
  40b280:	(bad)  
  40b282:	sub    ecx,DWORD PTR [edi+esi*4]
  40b285:	fnstcw WORD PTR [ecx]
  40b287:	addr16 cld 
  40b289:	mov    al,ds:0x128d5174
  40b28e:	cmp    ebx,DWORD PTR [esi]
  40b290:	dec    esi
  40b291:	repz ss mov ss:0x99a346cb,al
  40b299:	inc    esp
  40b29a:	jp     0x40b2f0
  40b29c:	shr    BYTE PTR [edx],0x45
  40b29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a0:	sub    bl,BYTE PTR [eax+0x1f13c534]
  40b2a6:	mov    eax,ds:0xd5ae4844
  40b2ab:	sbb    al,0x94
  40b2ad:	or     BYTE PTR [esi+0x1687cda0],cl
  40b2b3:	mov    eax,0x3402f96d
  40b2b8:	jbe    0x40b2ba
  40b2ba:	sub    al,BYTE PTR [edi+0xbf2b10b]
  40b2c0:	neg    esp
  40b2c2:	adc    BYTE PTR [esi+0x393bccd5],dl
  40b2c8:	sub    eax,0xaeaf356a
  40b2cd:	pop    ecx
  40b2ce:	clc    
  40b2cf:	add    BYTE PTR [esi+0x6],0x8b
  40b2d3:	jae    0x40b289
  40b2d5:	pop    ds
  40b2d6:	icebp  
  40b2d7:	jge    0x40b351
  40b2d9:	jg     0x40b2fd
  40b2db:	sbb    edi,DWORD PTR [edi+0x49]
  40b2de:	xchg   edx,eax
  40b2df:	fwait
  40b2e0:	call   0x8c1e042f
  40b2e5:	sbb    DWORD PTR [ebx],edi
  40b2e7:	je     0x40b2f9
  40b2e9:	dec    edx
  40b2ea:	sub    ah,cl
  40b2ec:	lea    ecx,[ecx]
  40b2ee:	cld    
  40b2ef:	stc    
  40b2f0:	loopne 0x40b286
  40b2f2:	iret   
  40b2f3:	out    0xf6,eax
  40b2f5:	aam    0x3f
  40b2f7:	retf   0x3495
  40b2fa:	test   BYTE PTR [ecx-0x44],cl
  40b2fd:	pop    edx
  40b2fe:	aad    0x4d
  40b300:	push   ss
  40b301:	mov    ebx,0x257c057e
  40b306:	mov    edi,0x8baa78ea
  40b30b:	add    ah,BYTE PTR [edx]
  40b30d:	jecxz  0x40b355
  40b30f:	push   esp
  40b310:	ror    BYTE PTR [edx+0x385d6d8f],cl
  40b316:	in     eax,dx
  40b317:	push   cs
  40b318:	push   eax
  40b319:	outs   dx,BYTE PTR ds:[esi]
  40b31a:	sbb    BYTE PTR [ecx],0xf
  40b31d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b31e:	call   0xaadc5837
  40b323:	mov    ch,0x77
  40b325:	mov    ?,WORD PTR [edi-0x6b]
  40b328:	out    0x9e,eax
  40b32a:	jmp    0x11a1:0x477f2854
  40b331:	adc    edi,DWORD PTR [ecx+0x12]
  40b334:	(bad)  [ecx+0x9]
  40b337:	iret   
  40b338:	stos   BYTE PTR es:[edi],al
  40b339:	sub    eax,0x29babbdc
  40b33e:	ror    DWORD PTR [edx+0xc],0x2b
  40b342:	dec    esp
  40b343:	out    0xb7,eax
  40b345:	cwde   
  40b346:	fcmovbe st,st(2)
  40b348:	mov    ebp,0x736448fd
  40b34d:	retf   
  40b34e:	cmc    
  40b34f:	fdivr  QWORD PTR [eax-0x26]
  40b352:	fild   QWORD PTR [ecx]
  40b354:	(bad)  [edi-0x62]
  40b357:	and    DWORD PTR [edx],ebp
  40b359:	outs   dx,DWORD PTR ds:[esi]
  40b35a:	mov    eax,0x1952516f
  40b35f:	(bad)  
  40b360:	sbb    BYTE PTR [esi],dl
  40b362:	sub    ch,ch
  40b364:	mov    al,ds:0xee6398db
  40b36a:	sbb    eax,0x747921f8
  40b36f:	clc    
  40b370:	mov    bh,0xf6
  40b372:	popf   
  40b373:	cs mov ecx,?
  40b376:	mov    ah,0x4d
  40b378:	or     eax,0xde6d34fb
  40b37d:	mov    edi,DWORD PTR [eax+0x1dea319b]
  40b383:	(bad)  
  40b384:	mov    esi,0x61034fe7
  40b389:	je     0x40b3ec
  40b38b:	push   eax
  40b38c:	add    ah,bh
  40b38e:	lock adc DWORD PTR [ebx-0x1f25e747],ebx
  40b395:	stos   DWORD PTR es:[edi],eax
  40b396:	cmp    DWORD PTR [ecx-0x6f],ecx
  40b399:	outs   dx,BYTE PTR ds:[esi]
  40b39a:	jnp    0x40b3c8
  40b39c:	outs   dx,DWORD PTR ds:[esi]
  40b39d:	out    dx,al
  40b39e:	mov    ebx,0xefef997
  40b3a3:	jle    0x40b36b
  40b3a5:	add    DWORD PTR [esi],esi
  40b3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3a8:	in     al,0x6b
  40b3aa:	jb     0x40b32f
  40b3ac:	xchg   BYTE PTR [edi],ch
  40b3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3af:	aad    0xcd
  40b3b1:	or     ebx,edi
  40b3b3:	arpl   WORD PTR [eax],bp
  40b3b5:	test   eax,0xc56e9725
  40b3ba:	loope  0x40b408
  40b3bc:	push   ds
  40b3bd:	sub    eax,0x38b5b556
  40b3c2:	loope  0x40b424
  40b3c4:	mov    cl,0xd1
  40b3c6:	mov    bh,0x98
  40b3c8:	rcr    DWORD PTR [edx+ecx*1-0x62],0x5
  40b3cd:	mov    edx,0x7a088e
  40b3d2:	or     al,0xec
  40b3d4:	test   BYTE PTR [eax+ecx*2],ch
  40b3d7:	sub    al,0xe7
  40b3d9:	outs   dx,BYTE PTR ds:[esi]
  40b3da:	daa    
  40b3db:	dec    esi
  40b3dc:	sar    DWORD PTR [ebp+0x249d6d35],0xc8
  40b3e3:	xchg   esp,eax
  40b3e4:	push   0x7f0def98
  40b3e9:	dec    edx
  40b3ea:	sti    
  40b3eb:	addr16 sub eax,0x4e165fbe
  40b3f1:	or     DWORD PTR [eax-0x23],esp
  40b3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f5:	es in  al,0x1d
  40b3f8:	xchg   edi,eax
  40b3f9:	sub    ecx,DWORD PTR [esi-0x72e9490d]
  40b3ff:	ss adc eax,0xdf056bb1
  40b405:	(bad)  
  40b406:	sbb    ch,BYTE PTR [ebp+0x5f5265f4]
  40b40c:	into   
  40b40d:	imul   eax,DWORD PTR [ecx+0x62],0x4a1dd334
  40b414:	cld    
  40b415:	jle    0x40b45b
  40b417:	icebp  
  40b418:	sti    
  40b419:	sbb    eax,0x2e607f49
  40b41e:	loope  0x40b467
  40b420:	sbb    bl,cl
  40b422:	mov    bl,0x8e
  40b424:	rcl    DWORD PTR [ebx],cl
  40b426:	cdq    
  40b427:	ficomp DWORD PTR [ebx-0x2c]
  40b42a:	btc    eax,edi
  40b42d:	outs   dx,DWORD PTR ds:[esi]
  40b42e:	push   ebx
  40b42f:	sbb    eax,ecx
  40b431:	pop    edx
  40b432:	and    ch,al
  40b434:	lock popf 
  40b436:	mov    al,0x99
  40b438:	mov    esi,0x268418df
  40b43d:	into   
  40b43e:	jl     0x40b462
  40b440:	mov    eax,ebx
  40b442:	inc    esi
  40b443:	aam    0xf6
  40b445:	lea    edx,[edi-0x21]
  40b448:	jp     0x40b3e8
  40b44a:	loope  0x40b4ab
  40b44c:	mul    DWORD PTR [edx+ecx*4]
  40b44f:	cmc    
  40b450:	lods   eax,DWORD PTR ds:[esi]
  40b451:	enter  0x425f,0xcd
  40b455:	jge    0x40b45d
  40b457:	dec    ebp
  40b458:	sti    
  40b459:	push   cs
  40b45a:	pop    es
  40b45b:	pop    ebp
  40b45c:	push   ss
  40b45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b45e:	push   0xffffffa3
  40b460:	jp     0x40b441
  40b462:	push   es
  40b463:	pop    ss
  40b464:	xor    BYTE PTR [eax+0x19],dl
  40b467:	pusha  
  40b468:	out    dx,al
  40b469:	or     dh,BYTE PTR [edi+0x7f941de5]
  40b46f:	ins    DWORD PTR es:[edi],dx
  40b470:	lahf   
  40b471:	in     eax,0x70
  40b473:	cmp    eax,0x8973b555
  40b478:	or     edx,DWORD PTR [ebp+0x2aa6ba6b]
  40b47e:	mov    bl,0x7c
  40b480:	fldcw  WORD PTR [esi]
  40b482:	jmp    0x40b4db
  40b484:	imul   ebp,esp,0xffffff9c
  40b487:	test   DWORD PTR [edx+ecx*2],edi
  40b48a:	dec    ecx
  40b48b:	mov    esi,0x5a78de9f
  40b490:	mov    edx,0x87c0c974
  40b495:	sbb    dh,BYTE PTR [ebx+0x2f3315cc]
  40b49b:	sbb    DWORD PTR [ebp+0x7ffc6821],ebx
  40b4a1:	out    0x2d,eax
  40b4a3:	dec    ebx
  40b4a4:	cs dec ecx
  40b4a6:	jl     0x40b4e1
  40b4a8:	dec    edx
  40b4a9:	aaa    
  40b4aa:	stc    
  40b4ab:	push   ebx
  40b4ac:	sti    
  40b4ad:	js     0x40b4f8
  40b4af:	lahf   
  40b4b0:	adc    BYTE PTR [edx],bh
  40b4b2:	(bad)  
  40b4b3:	retf   0x42e0
  40b4b6:	adc    esi,DWORD PTR [eax+eax*8]
  40b4b9:	and    edx,esp
  40b4bb:	xchg   BYTE PTR [eax+0xabc3f09],ch
  40b4c1:	sbb    bh,dh
  40b4c3:	ja     0x40b4cb
  40b4c5:	mov    DWORD PTR [esi],edi
  40b4c7:	imul   ecx,DWORD PTR [ebp-0x7c],0xffffffbc
  40b4cb:	cmp    esi,ebp
  40b4cd:	pop    esp
  40b4ce:	xchg   esp,eax
  40b4cf:	cli    
  40b4d0:	inc    esp
  40b4d1:	pop    edx
  40b4d2:	cmp    BYTE PTR [ecx+0x79],0xc1
  40b4d6:	call   ecx
  40b4d8:	sub    al,ah
  40b4da:	js     0x40b4e7
  40b4dc:	(bad)  
  40b4dd:	pslld  mm0,mm0
  40b4e0:	inc    edi
  40b4e1:	xchg   ebp,eax
  40b4e2:	(bad)  
  40b4e3:	cwde   
  40b4e4:	mov    ebx,ds
  40b4e6:	aaa    
  40b4e7:	adc    al,0x46
  40b4e9:	xor    ch,BYTE PTR ds:0xfb120192
  40b4ef:	ret    0x9cff
  40b4f2:	loope  0x40b50b
  40b4f4:	fnstcw WORD PTR fs:[ecx+0xd460871]
  40b4fb:	push   eax
  40b4fc:	mov    bh,0x8e
  40b4fe:	sub    BYTE PTR [edi-0x4],bl
  40b501:	arpl   WORD PTR [ecx+0x30],sp
  40b504:	xor    al,0x23
  40b506:	fwait
  40b507:	jg     0x40b50e
  40b509:	adc    eax,0x7f451932
  40b50e:	mov    eax,DWORD PTR [ecx]
  40b510:	adc    DWORD PTR [esp+edx*4],ecx
  40b513:	sbb    BYTE PTR [eax+eiz*4],dh
  40b516:	xor    BYTE PTR [ebx-0x2140227],dl
  40b51c:	push   edi
  40b51d:	pop    ebx
  40b51e:	mov    eax,ds:0x96971eb2
  40b523:	pop    esp
  40b524:	push   ebx
  40b525:	push   0x54c028ca
  40b52a:	jecxz  0x40b59d
  40b52c:	or     ebp,DWORD PTR [edx+0x4a]
  40b52f:	ror    BYTE PTR [ecx+eax*4],0xe1
  40b533:	js     0x40b4ea
  40b535:	(bad)  
  40b536:	mov    esi,0x4efe65f1
  40b53b:	or     eax,0x9da0366a
  40b540:	cmp    ch,dl
  40b542:	bnd jl 0x40b51d
  40b545:	out    0x35,eax
  40b547:	adc    al,0x4c
  40b549:	jmp    0x40b522
  40b54b:	add    dl,BYTE PTR ds:0x796e481d
  40b551:	jmp    0x40b578
  40b553:	test   BYTE PTR [ebx-0x58e3ff06],cl
  40b559:	and    bh,dh
  40b55b:	push   es
  40b55c:	jo     0x40b5a4
  40b55e:	inc    esi
  40b55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b560:	sub    BYTE PTR [edx+0x6c],ch
  40b563:	scas   al,BYTE PTR es:[edi]
  40b564:	sbb    eax,0xabec50a3
  40b569:	sbb    al,0xa
  40b56b:	add    DWORD PTR [ecx-0x32],ecx
  40b56e:	mov    BYTE PTR [edx+esi*1+0x73],bh
  40b572:	xchg   ebx,eax
  40b573:	or     eax,0x37776273
  40b578:	sub    BYTE PTR es:[ebx],cl
  40b57b:	cmp    dl,BYTE PTR [eax]
  40b57d:	inc    ebp
  40b57e:	jmp    0x5bf65c3f
  40b583:	aaa    
  40b584:	jmp    0x4c3c4e94
  40b589:	(bad)  
  40b58a:	pop    DWORD PTR ds:0x73777098
  40b590:	(bad)  
  40b591:	jecxz  0x40b529
  40b593:	sbb    DWORD PTR [eax-0xd],ecx
  40b596:	jnp    0x40b5df
  40b598:	cmovl  esi,DWORD PTR [esi]
  40b59b:	shr    BYTE PTR [ebp+0x8],cl
  40b59e:	lea    edi,[eax]
  40b5a0:	mov    dl,0x36
  40b5a2:	jae    0x40b610
  40b5a4:	loopne 0x40b5a3
  40b5a6:	adc    cl,al
  40b5a8:	outs   dx,DWORD PTR ds:[esi]
  40b5aa:	inc    ebp
  40b5ab:	push   0x49
  40b5ad:	in     al,0xf5
  40b5af:	cmp    al,0xc4
  40b5b1:	outs   dx,BYTE PTR ds:[esi]
  40b5b2:	ss out dx,al
  40b5b4:	pop    ecx
  40b5b5:	outs   dx,BYTE PTR ds:[esi]
  40b5b6:	aam    0x85
  40b5b8:	push   edi
  40b5b9:	aas    
  40b5ba:	out    0x17,eax
  40b5bc:	fisub  WORD PTR [ebx+0x27]
  40b5bf:	js     0x40b61b
  40b5c1:	lahf   
  40b5c2:	adc    al,0x86
  40b5c4:	fbstp  TBYTE PTR [edx-0x12831669]
  40b5ca:	adc    eax,0x5b40030f
  40b5cf:	mov    ecx,0x70c899f0
  40b5d4:	ds cli 
  40b5d6:	shr    ch,cl
  40b5d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d9:	(bad)  
  40b5da:	cmp    eax,0xb3b42ca5
  40b5df:	sbb    DWORD PTR [edi-0x71],ecx
  40b5e2:	ror    BYTE PTR [eax+eax*4],cl
  40b5e5:	push   ds
  40b5e6:	and    BYTE PTR [ebp+0x3f],bh
  40b5e9:	cmp    eax,0x6ee6d00a
  40b5ee:	ror    DWORD PTR [edx+esi*1+0x7afb2a3d],cl
  40b5f5:	pushf  
  40b5f6:	xchg   ebx,eax
  40b5f7:	or     ch,BYTE PTR [ebp+0x68d5e672]
  40b5fd:	popf   
  40b5fe:	cmp    ah,ch
  40b600:	fwait
  40b601:	push   ds
  40b602:	(bad)  
  40b603:	scas   eax,DWORD PTR es:[edi]
  40b604:	push   ecx
  40b605:	stc    
  40b606:	int    0x81
  40b608:	jb     0x40b5d7
  40b60a:	test   DWORD PTR [edi+0x4d],esi
  40b60d:	mov    esi,DWORD PTR [edi+0xce3251b]
  40b613:	mov    ds:0x83e2d6a5,al
  40b618:	inc    esi
  40b619:	sbb    al,0xe2
  40b61b:	push   eax
  40b61c:	(bad)  
  40b61e:	push   cs
  40b61f:	nop
  40b620:	add    bh,BYTE PTR [esi+0x3f5d6c77]
  40b626:	cmp    ch,0x36
  40b629:	mov    ds:0x1e3700f8,al
  40b62e:	and    BYTE PTR [ecx+0x2c],dh
  40b631:	xchg   ebp,eax
  40b632:	mov    ecx,0x9b1f1b41
  40b637:	mov    esi,0x67c3f3ef
  40b63c:	fs daa 
  40b63e:	mov    bh,0xa4
  40b640:	inc    ebx
  40b641:	dec    eax
  40b642:	and    dl,bl
  40b644:	xchg   DWORD PTR [edx],ebp
  40b646:	fild   WORD PTR [edi]
  40b648:	lods   eax,DWORD PTR ds:[esi]
  40b649:	xor    DWORD PTR [eax+0x6541e88],ebp
  40b64f:	lahf   
  40b650:	scas   al,BYTE PTR es:[edi]
  40b651:	xchg   ebp,eax
  40b652:	out    0xd,al
  40b654:	mov    bl,0xe4
  40b656:	jl     0x40b6d0
  40b658:	(bad)  
  40b659:	sub    eax,0xa8175a25
  40b65e:	jb     0x40b649
  40b660:	push   cs
  40b661:	lods   eax,DWORD PTR ds:[esi]
  40b662:	sar    BYTE PTR [ecx-0x4d5a9d3b],cl
  40b668:	cld    
  40b669:	(bad)  
  40b66a:	scas   eax,DWORD PTR es:[edi]
  40b66b:	mov    ebx,ds
  40b66d:	cmc    
  40b66e:	fnsave [ecx-0x65098311]
  40b674:	jl     0x40b684
  40b676:	repnz sub dl,BYTE PTR [edx+eax*8-0x15a63e0c]
  40b67e:	fisubr DWORD PTR [ebp-0x55ecc0cc]
  40b684:	push   edx
  40b685:	mov    edx,DWORD PTR [ecx+0x28]
  40b688:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b68a:	jns    0x40b634
  40b68c:	addr16 in al,dx
  40b68e:	mov    esp,0x5b4abfa
  40b693:	hlt    
  40b694:	out    dx,al
  40b695:	jg     0x40b68b
  40b697:	inc    ebp
  40b698:	mov    eax,ds:0xbe0e64ad
  40b69d:	(bad)  
  40b69e:	inc    eax
  40b69f:	cmp    al,0xf5
  40b6a1:	daa    
  40b6a2:	lods   eax,DWORD PTR ds:[esi]
  40b6a3:	mov    ch,0xca
  40b6a5:	mov    ch,0x1
  40b6a7:	repz mov dl,al
  40b6aa:	aaa    
  40b6ab:	repnz dec ecx
  40b6ad:	repnz mov WORD PTR [esi],ds
  40b6b0:	mov    ebx,eax
  40b6b2:	or     BYTE PTR [edx],bl
  40b6b4:	popf   
  40b6b5:	jb     0x40b6c0
  40b6b7:	sbb    al,0xde
  40b6b9:	sub    dl,BYTE PTR [edx]
  40b6bb:	push   esi
  40b6bc:	mov    al,0xd6
  40b6be:	not    edi
  40b6c0:	fnstenv [ebx+0x18]
  40b6c3:	inc    esi
  40b6c4:	aaa    
  40b6c5:	xchg   ecx,eax
  40b6c6:	(bad)  
  40b6c7:	fild   WORD PTR [esi-0x717fe956]
  40b6cd:	mov    ds:0x56103736,eax
  40b6d2:	mov    edi,DWORD PTR [ebx-0x4f16d321]
  40b6d8:	mov    BYTE PTR [ebx-0x43],al
  40b6db:	cmp    dl,BYTE PTR [ebx-0x64]
  40b6de:	cwde   
  40b6df:	or     edi,DWORD PTR [esi-0x4f67b05b]
  40b6e5:	mov    cl,0xab
  40b6e7:	retf   0x995e
  40b6ea:	pop    edi
  40b6eb:	in     ax,dx
  40b6ed:	jmp    0x3026:0xb7aa6410
  40b6f4:	iret   
  40b6f5:	fwait
  40b6f6:	mov    al,ds:0xf36a241d
  40b6fb:	gs jo  0x40b71f
  40b6fe:	(bad)  
  40b6ff:	sbb    ecx,DWORD PTR [esi]
  40b701:	and    esp,DWORD PTR [ecx+0x34]
  40b704:	icebp  
  40b705:	imul   BYTE PTR [ecx+0x3f5f49c0]
  40b70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b70c:	shl    esp,0x12
  40b70f:	call   0x8d79e5ed
  40b714:	mov    DWORD PTR [edi],esp
  40b716:	pusha  
  40b717:	push   esi
  40b718:	adc    al,0x47
  40b71a:	xchg   esi,eax
  40b71b:	inc    esp
  40b71c:	push   DWORD PTR [esi-0x5e8f4e3a]
  40b722:	sbb    ch,BYTE PTR [eax+0x6eecc517]
  40b728:	xchg   edi,eax
  40b729:	or     eax,0x871d9cc3
  40b72e:	mov    esp,0xae612789
  40b733:	jbe    0x40b74e
  40b735:	fist   DWORD PTR [edi+0x4ea26a4e]
  40b73b:	adc    BYTE PTR ds:0x770873ea,ah
  40b741:	push   0x41
  40b743:	mov    DWORD PTR [ebp-0x69],eax
  40b746:	pop    ebx
  40b747:	jbe    0x40b6e7
  40b749:	outs   dx,DWORD PTR ds:[esi]
  40b74a:	(bad)  
  40b74b:	push   ebp
  40b74c:	loop   0x40b6f1
  40b74e:	add    al,0xd2
  40b750:	repz mov bh,0xef
  40b753:	outs   dx,BYTE PTR ds:[esi]
  40b754:	pop    ecx
  40b755:	pop    esp
  40b756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b757:	mov    ecx,0x28a96d78
  40b75c:	daa    
  40b75d:	push   0x3a
  40b75f:	add    ecx,DWORD PTR [edi-0x410c32f3]
  40b765:	cmc    
  40b766:	or     DWORD PTR ds:0x6b53ebea,edi
  40b76c:	daa    
  40b76d:	pop    es
  40b76e:	adc    DWORD PTR [ebp-0x11],ebx
  40b771:	out    dx,al
  40b772:	xchg   ebp,eax
  40b773:	fwait
  40b774:	xor    ebx,DWORD PTR [ebx-0x19]
  40b777:	ret    
  40b778:	push   eax
  40b779:	sbb    esp,DWORD PTR [ebx+0x36]
  40b77c:	outs   dx,BYTE PTR ds:[esi]
  40b77d:	and    al,0xd3
  40b77f:	push   edi
  40b780:	and    eax,0xe4ae9760
  40b785:	into   
  40b786:	sar    ecx,1
  40b788:	jo     0x40b70b
  40b78a:	jmp    0x3f6d:0xe9857034
  40b791:	dec    edx
  40b792:	xchg   BYTE PTR [esi+0x41],ah
  40b795:	inc    edx
  40b796:	push   ebx
  40b797:	dec    esp
  40b798:	outs   dx,DWORD PTR ds:[esi]
  40b799:	test   BYTE PTR [ebp-0x35fe4122],bl
  40b79f:	es and eax,0xb7577a8b
  40b7a5:	mov    DWORD PTR [ecx-0x18],eax
  40b7a8:	adc    al,0x89
  40b7aa:	xchg   esi,eax
  40b7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7ac:	adc    DWORD PTR [eax-0x4993db13],ebx
  40b7b2:	and    al,0x8c
  40b7b4:	lock and BYTE PTR [ebp+eax*1-0x34c261df],0xcd
  40b7bd:	rcl    al,1
  40b7bf:	dec    edi
  40b7c0:	xchg   ecx,eax
  40b7c1:	aas    
  40b7c2:	or     DWORD PTR [ecx],0xf905478e
  40b7c8:	sti    
  40b7c9:	xor    cl,0xaa
  40b7cc:	popf   
  40b7cd:	rcl    bh,1
  40b7cf:	mov    ebx,0x9352e0c6
  40b7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d5:	cmp    BYTE PTR ds:0x9a764c8e,al
  40b7db:	adc    bh,0xa6
  40b7de:	outs   dx,DWORD PTR ds:[esi]
  40b7df:	mov    ebx,0x9315ee1
  40b7e4:	sti    
  40b7e5:	inc    ebp
  40b7e6:	dec    edx
  40b7e7:	cld    
  40b7e8:	subps  xmm6,XMMWORD PTR fs:[ebx+0x16]
  40b7ed:	push   ebx
  40b7ee:	(bad)  
  40b7ef:	mov    ch,0x18
  40b7f1:	ror    DWORD PTR [eax*8-0x422048d2],1
  40b7f8:	loopne 0x40b80b
  40b7fa:	neg    DWORD PTR [ebp-0x6167fc9d]
  40b800:	dec    eax
  40b801:	push   es
  40b802:	das    
  40b803:	cmc    
  40b804:	je     0x40b884
  40b806:	dec    esp
  40b807:	or     BYTE PTR [eax],al
  40b809:	mov    bh,0xc8
  40b80b:	jae    0x40b800
  40b80d:	cmp    eax,0xa55995d
  40b812:	xor    BYTE PTR [esi+0x681c4215],bh
  40b818:	xchg   edx,eax
  40b819:	loope  0x40b87d
  40b81b:	inc    edx
  40b81c:	ins    DWORD PTR es:[edi],dx
  40b81d:	inc    esi
  40b81e:	fist   DWORD PTR [ebx+eax*4+0x530a56e3]
  40b825:	cmp    BYTE PTR [esi],al
  40b827:	out    0xff,al
  40b829:	push   ebp
  40b82a:	in     eax,dx
  40b82b:	and    al,0xea
  40b82d:	in     al,dx
  40b82e:	out    dx,al
  40b82f:	ins    DWORD PTR es:[edi],dx
  40b830:	aaa    
  40b831:	push   es
  40b832:	sub    ah,dh
  40b834:	and    al,0x1
  40b836:	je     0x40b7e6
  40b838:	push   0x1f6d0fc3
  40b83d:	dec    edx
  40b83e:	movhps QWORD PTR [esi+eiz*4],xmm2
  40b842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b843:	xchg   edi,eax
  40b844:	cwde   
  40b845:	mov    WORD PTR [ecx+0x20b9453f],ds
  40b84b:	imul   eax,DWORD PTR [ebx+0x1f7fa596],0x4c
  40b852:	out    dx,al
  40b853:	lea    edi,[ecx-0x6f80816]
  40b859:	cmp    BYTE PTR [ecx],ch
  40b85b:	ficomp DWORD PTR [ecx+0x36]
  40b85e:	rol    DWORD PTR [esi+0x41],cl
  40b861:	nop
  40b862:	ss lahf 
  40b864:	push   esi
  40b865:	sub    BYTE PTR [edi-0x6d244986],ch
  40b86b:	ret    0xca72
  40b86e:	ror    DWORD PTR [edi-0x765c21b],0x41
  40b875:	out    0x58,eax
  40b877:	xor    ebp,DWORD PTR [eax-0x10538b88]
  40b87d:	mov    ebp,0x5d8ea4e2
  40b882:	cmp    eax,0xf3c8ec2c
  40b887:	jmp    0x7df8:0x49ebb80b
  40b88e:	add    al,0x8d
  40b890:	into   
  40b891:	lahf   
  40b892:	push   cs
  40b893:	arpl   WORD PTR [edx+0x58],dx
  40b896:	mov    dl,0x19
  40b898:	out    dx,eax
  40b899:	scas   eax,DWORD PTR es:[edi]
  40b89a:	mov    cl,0xb7
  40b89c:	xor    esi,DWORD PTR [esi+0x5b780df0]
  40b8a2:	scas   eax,DWORD PTR es:[edi]
  40b8a3:	pop    es
  40b8a4:	imul   esi,DWORD PTR [ebx+0x2f0a9707],0x15
  40b8ab:	add    BYTE PTR [edx],bl
  40b8ad:	push   esp
  40b8ae:	adc    DWORD PTR [eax-0x3d],eax
  40b8b1:	ss dec eax
  40b8b3:	fsub   DWORD PTR [edx]
  40b8b5:	dec    ebx
  40b8b6:	pop    ebx
  40b8b7:	jecxz  0x40b91f
  40b8b9:	sub    ebp,edx
  40b8bb:	retf   
  40b8bc:	fstp   DWORD PTR [ebp+edi*8+0x20599a63]
  40b8c3:	in     eax,0xe6
  40b8c5:	repnz pop edi
  40b8c7:	jns    0x40b8cb
  40b8c9:	(bad)  
  40b8ca:	inc    BYTE PTR [edi+0x1b8bff72]
  40b8d0:	lock ss jo 0x40b8b2
  40b8d4:	arpl   WORD PTR [edi-0x6],bx
  40b8d7:	gs out 0xc3,eax
  40b8da:	data16 (bad) 
  40b8dc:	rcl    edi,1
  40b8de:	stc    
  40b8df:	fwait
  40b8e0:	xchg   ecx,eax
  40b8e1:	and    eax,0x5ac71653
  40b8e6:	push   edi
  40b8e7:	mov    al,ds:0xd9733023
  40b8ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ee:	out    dx,al
  40b8ef:	in     al,0x43
  40b8f1:	loopne 0x40b897
  40b8f3:	inc    edx
  40b8f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8f5:	xchg   edx,eax
  40b8f6:	enter  0x345f,0xba
  40b8fa:	fst    QWORD PTR ds:0xe385b07e
  40b900:	mov    ch,0x9
  40b902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b903:	push   edx
  40b904:	xor    DWORD PTR gs:[ecx+eax*4-0x62],esi
  40b909:	or     bh,BYTE PTR [edi]
  40b90b:	neg    DWORD PTR [ebp+0x72275f9c]
  40b911:	imul   ebx,DWORD PTR [ebp-0xa41a47c],0xad61bccb
  40b91b:	into   
  40b91c:	pop    es
  40b91d:	sbb    eax,DWORD PTR [eax+0x77]
  40b920:	mov    WORD PTR [ebx-0xb1b8aad],ds
  40b926:	cmp    BYTE PTR [edx+ebx*8+0x70],dh
  40b92a:	push   esp
  40b92b:	push   0x2902a663
  40b930:	std    
  40b931:	sbb    edx,DWORD PTR [esi+0x4f]
  40b934:	adc    al,0xc5
  40b936:	scas   al,BYTE PTR es:[edi]
  40b937:	push   cs
  40b938:	push   ebx
  40b939:	push   eax
  40b93a:	sbb    ch,BYTE PTR [ebx]
  40b93c:	sbb    BYTE PTR [edx+0x157061b8],dl
  40b942:	xchg   ebp,eax
  40b943:	mov    ds:0xca71c19a,eax
  40b948:	xchg   BYTE PTR [esp+esi*2-0x51876527],bl
  40b94f:	jae    0x40b94b
  40b951:	iret   
  40b952:	imul   esp,ebx,0xffffff85
  40b955:	and    ch,BYTE PTR [edx-0x7c70e41f]
  40b95b:	pop    edx
  40b95c:	fnstenv [ebx-0x22]
  40b95f:	xlat   BYTE PTR ds:[ebx]
  40b960:	imul   edx,DWORD PTR [ebx-0x14],0xffffff9b
  40b964:	mov    ch,0x53
  40b966:	dec    esi
  40b967:	pop    ecx
  40b968:	sti    
  40b969:	mov    edi,eax
  40b96b:	aas    
  40b96c:	clc    
  40b96d:	lock jle 0x40b9c2
  40b970:	and    dh,cl
  40b972:	and    esi,DWORD PTR [edi]
  40b974:	lds    ebx,FWORD PTR [eax-0x7b]
  40b977:	ds call 0x74c0:0xf4fed5f3
  40b97f:	(bad)  
  40b980:	out    dx,al
  40b981:	ret    0xc042
  40b984:	jae    0x40b9f3
  40b986:	push   cs
  40b987:	jo     0x40b987
  40b989:	and    BYTE PTR [ebx+0x26006f12],ch
  40b98f:	pop    es
  40b990:	and    DWORD PTR [ebp+0x13],esi
  40b993:	bswap  ecx
  40b995:	push   edx
  40b996:	mov    dl,0x93
  40b998:	add    BYTE PTR [ebx],ah
  40b99a:	push   ds
  40b99b:	or     dh,cl
  40b99d:	int3   
  40b99e:	jo     0x40b954
  40b9a0:	mov    eax,DWORD PTR [ebp+0x2f]
  40b9a3:	xchg   ebx,eax
  40b9a4:	mov    esp,0xf461a60f
  40b9a9:	out    0x10,al
  40b9ab:	mov    ebp,0xd45b3dab
  40b9b0:	and    BYTE PTR [ecx],0xbd
  40b9b3:	fwait
  40b9b4:	push   ss
  40b9b5:	shr    ebx,cl
  40b9b7:	fcmovnbe st,st(5)
  40b9b9:	jno    0x40b97f
  40b9bb:	cmc    
  40b9bc:	mov    cs,WORD PTR ds:0xf91eea36
  40b9c2:	jno    0x40b9d4
  40b9c4:	(bad)  
  40b9c5:	and    eax,0x5673ff38
  40b9ca:	fild   DWORD PTR [eax+0xc95c454]
  40b9d0:	mov    ecx,0x7e775e65
  40b9d5:	retf   
  40b9d6:	(bad)  
  40b9d7:	out    0xb5,eax
  40b9d9:	lock xor DWORD PTR [esi-0x32],ecx
  40b9dd:	int3   
  40b9de:	adc    ecx,DWORD PTR [ebp-0x79]
  40b9e1:	xchg   BYTE PTR [ebp-0x16528296],dh
  40b9e7:	jmp    0xd11b2d6c
  40b9ec:	and    BYTE PTR [ebp+ecx*1-0x48],0xa3
  40b9f1:	out    dx,eax
  40b9f2:	inc    ebx
  40b9f3:	sub    al,0x62
  40b9f5:	pop    ebp
  40b9f6:	mov    bl,0x9f
  40b9f8:	ins    DWORD PTR es:[edi],dx
  40b9f9:	fistp  WORD PTR [edx+0x5b]
  40b9fc:	inc    ecx
  40b9fd:	iret   
  40b9fe:	in     al,0xcd
  40ba00:	out    dx,al
  40ba01:	inc    esp
  40ba02:	add    eax,0xa794e7a5
  40ba07:	pop    ebx
  40ba08:	mov    edi,0x1c31b02c
  40ba0d:	xchg   ecx,eax
  40ba0e:	adc    BYTE PTR [edx+ecx*4+0x2c],al
  40ba12:	mov    ch,0x57
  40ba14:	jno    0x40b9cb
  40ba16:	and    edi,DWORD PTR [esi+0x25]
  40ba19:	cmp    BYTE PTR [esi+ebp*8],al
  40ba1c:	xor    al,0x60
  40ba1e:	push   ss
  40ba1f:	mov    ds:0x7e6c9dba,eax
  40ba24:	adc    DWORD PTR [edi-0x43],eax
  40ba27:	mov    ebp,0x59eed925
  40ba2c:	mov    ch,0xa4
  40ba2e:	mov    ?,WORD PTR [edx]
  40ba30:	sbb    al,0xae
  40ba32:	jns    0x40ba32
  40ba34:	pop    ds
  40ba35:	lea    edi,[ecx-0x55]
  40ba38:	js     0x40ba5a
  40ba3a:	aad    0x8e
  40ba3c:	xchg   esi,eax
  40ba3d:	in     al,dx
  40ba3e:	or     DWORD PTR [esi+eiz*1],ecx
  40ba41:	cmp    DWORD PTR [edx+0x18],ebx
  40ba44:	adc    BYTE PTR [edi+0x5f650d92],bh
  40ba4a:	jb     0x40ba29
  40ba4c:	fidivr WORD PTR [edi-0x3d329910]
  40ba52:	imul   esp,DWORD PTR [edi-0x5d5a2c75],0xffffff93
  40ba59:	nop
  40ba5a:	push   ebx
  40ba5b:	xor    BYTE PTR [eax],bh
  40ba5d:	stos   BYTE PTR es:[edi],al
  40ba5e:	cmp    al,0x3
  40ba60:	adc    DWORD PTR [edi],edx
  40ba62:	sub    eax,0x65a8e2fb
  40ba67:	dec    edx
  40ba68:	mov    ebp,0xd7ec0a92
  40ba6d:	fist   WORD PTR [esi+0x626a6dca]
  40ba73:	sbb    dh,BYTE PTR [edx]
  40ba75:	outs   dx,DWORD PTR ds:[esi]
  40ba76:	sbb    BYTE PTR [esi],bl
  40ba78:	jae    0x40ba92
  40ba7a:	sub    bh,bh
  40ba7c:	add    ebp,DWORD PTR [edx-0x24]
  40ba7f:	or     ah,bh
  40ba81:	repz pop si
  40ba84:	jp     0x40ba25
  40ba86:	sbb    BYTE PTR [eax-0x68],dl
  40ba89:	and    BYTE PTR [ebx+eiz*4+0x2],ch
  40ba8d:	addr16 nop
  40ba8f:	jmp    0xdf92:0xea72ea54
  40ba96:	test   al,0x11
  40ba98:	(bad)  
  40ba99:	cmp    eax,0xbb1841ab
  40ba9e:	popf   
  40ba9f:	repz add DWORD PTR [ebx+0x3],esp
  40baa3:	and    eax,0x6b0ca945
  40baa8:	xchg   ebx,eax
  40baa9:	imul   esp,DWORD PTR [ebx],0x83bb5d04
  40baaf:	xchg   DWORD PTR [esi-0x41],eax
  40bab2:	into   
  40bab3:	repnz adc esi,DWORD PTR [esi+ecx*8-0x59]
  40bab8:	daa    
  40bab9:	sub    eax,0x19a62a95
  40babe:	or     ch,0xaa
  40bac1:	fidivr WORD PTR [edi]
  40bac3:	out    0x94,al
  40bac5:	cmp    BYTE PTR [edi+0x1c8a810c],cl
  40bacb:	outs   dx,DWORD PTR ds:[esi]
  40bacc:	sub    BYTE PTR [ebx+esi*1-0x502e821b],0x1b
  40bad4:	retfw  0x8058
  40bad8:	push   eax
  40bad9:	dec    esp
  40bada:	cmp    DWORD PTR [esp-0x7d],edx
  40bade:	xchg   ecx,eax
  40badf:	mov    edi,0x2e590f86
  40bae4:	jl     0x40bb06
  40bae6:	fiadd  WORD PTR [edi]
  40bae8:	or     al,0x79
  40baea:	jmp    0x1cd504f2
  40baef:	loopne 0x40bb5d
  40baf1:	leave  
  40baf2:	shl    BYTE PTR [edx+0x25],cl
  40baf5:	fsub   QWORD PTR [ecx-0x7e]
  40baf8:	icebp  
  40baf9:	vdivss xmm2,xmm2,xmm0
  40bafd:	repnz xchg ebp,eax
  40baff:	and    BYTE PTR [edx],0x96
  40bb02:	add    al,0x71
  40bb04:	xor    BYTE PTR [ecx],dl
  40bb06:	xchg   esi,eax
  40bb07:	(bad)  
  40bb08:	cmp    edi,DWORD PTR [ebx+ecx*4+0x63a3c3fc]
  40bb0f:	rol    DWORD PTR [ebp-0x68c9e0ad],cl
  40bb15:	add    al,0xf1
  40bb17:	cmc    
  40bb18:	inc    esi
  40bb19:	icebp  
  40bb1a:	sbb    DWORD PTR [esi-0x2b],esp
  40bb1d:	xchg   DWORD PTR [edx-0x4a],ecx
  40bb20:	add    ebx,DWORD PTR [eax+eiz*1-0x79e640fe]
  40bb27:	adc    eax,0xa875f5a6
  40bb2c:	mov    edx,0x55ccfd38
  40bb31:	jle    0x40baf0
  40bb33:	xor    al,0x57
  40bb35:	(bad)  
  40bb36:	jl     0x40bb80
  40bb38:	jle    0x40bb50
  40bb3a:	call   0xb42290c4
  40bb3f:	and    dl,0x71
  40bb42:	push   0x314cc340
  40bb47:	dec    esi
  40bb48:	xchg   edi,eax
  40bb49:	push   cs
  40bb4a:	add    cl,ch
  40bb4c:	fst    st(5)
  40bb4e:	enter  0xc86f,0x40
  40bb52:	xchg   ch,bh
  40bb54:	jnp    0x40bb56
  40bb56:	test   eax,0xff6e6bef
  40bb5b:	ja     0x40bb06
  40bb5d:	push   0x9ab66569
  40bb62:	adc    BYTE PTR [eax+0x7c0195d5],ah
  40bb68:	and    eax,0xbc310d34
  40bb6d:	xchg   esi,eax
  40bb6e:	or     bl,BYTE PTR [ecx]
  40bb70:	pusha  
  40bb71:	pop    esi
  40bb72:	fwait
  40bb73:	in     al,dx
  40bb74:	arpl   WORD PTR [eax-0x265a35f8],bx
  40bb7a:	cmp    DWORD PTR [edi-0x22937635],esi
  40bb80:	ror    ah,cl
  40bb82:	scas   al,BYTE PTR es:[edi]
  40bb83:	xchg   ebx,eax
  40bb84:	dec    ecx
  40bb85:	xchg   ebp,eax
  40bb86:	sub    ch,BYTE PTR [ebp-0x2e62d4d]
  40bb8c:	pop    es
  40bb8d:	cmc    
  40bb8e:	mov    DWORD PTR [ecx-0x28],0x821bf01b
  40bb95:	aad    0x17
  40bb97:	ds fwait
  40bb99:	and    dh,ah
  40bb9b:	popf   
  40bb9c:	popf   
  40bb9d:	and    eax,0x7f6e9467
  40bba2:	xchg   edx,eax
  40bba3:	(bad)  
  40bba4:	sub    ebp,DWORD PTR [edi]
  40bba6:	push   es
  40bba7:	pop    eax
  40bba8:	int    0x35
  40bbaa:	and    eax,DWORD PTR [ebp-0x77]
  40bbad:	fsub   QWORD PTR [edi+edx*4-0x5b2925d3]
  40bbb4:	mov    ebp,0x19fa926e
  40bbb9:	or     al,0xfc
  40bbbb:	out    dx,eax
  40bbbc:	push   0x1
  40bbbe:	sbb    BYTE PTR [edx-0x59030c3d],al
  40bbc4:	cmp    DWORD PTR [esi-0x13],ebp
  40bbc7:	out    0x12,eax
  40bbc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbca:	jae    0x40bb4d
  40bbcc:	push   0x2f
  40bbce:	fcmovnu st,st(3)
  40bbd0:	icebp  
  40bbd1:	mov    esi,0x599d53
  40bbd6:	jno    0x40bb64
  40bbd8:	mov    esi,0x2fbb6f74
  40bbdd:	hlt    
  40bbde:	out    dx,al
  40bbdf:	cmp    al,0x96
  40bbe1:	test   dh,dl
  40bbe3:	cmp    eax,0xed620317
  40bbe8:	adc    DWORD PTR [edi+ebp*2-0x23],ecx
  40bbec:	jge    0x40bbed
  40bbee:	mov    ebp,0xdbb1a01e
  40bbf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbf4:	ins    DWORD PTR es:[edi],dx
  40bbf5:	mov    dh,0x75
  40bbf7:	lods   eax,DWORD PTR ds:[esi]
  40bbf8:	mov    ebx,esi
  40bbfa:	add    ch,ch
  40bbfc:	es pop edi
  40bbfe:	mov    bh,0x59
  40bc00:	sti    
  40bc01:	xor    DWORD PTR [eax-0x6e],edx
  40bc04:	xchg   ecx,eax
  40bc05:	pop    ecx
  40bc06:	pop    ds
  40bc07:	mov    al,ds:0x5531b627
  40bc0c:	push   0x33df6d0
  40bc11:	inc    ecx
  40bc12:	out    0xf0,al
  40bc14:	mov    esp,0x8088cfaf
  40bc19:	jmp    0x40bc72
  40bc1b:	push   ebx
  40bc1c:	xchg   ebx,eax
  40bc1d:	mov    esp,0x7504b561
  40bc22:	pop    ebp
  40bc23:	sar    DWORD PTR ds:0x6fd38275,0xd7
  40bc2a:	jl     0x40bc8f
  40bc2c:	dec    esp
  40bc2d:	mov    al,ds:0xa6c22804
  40bc32:	(bad)  
  40bc33:	imul   ebx,DWORD PTR ds:0x34cc10b3,0x63
  40bc3a:	imul   edx,DWORD PTR [edx-0x3a1c3530],0x18
  40bc41:	lock push ss
  40bc43:	or     cl,BYTE PTR [ebx+0x48]
  40bc46:	add    DWORD PTR [esi+eiz*2+0x3f93d087],0x63
  40bc4e:	xor    al,0xa2
  40bc50:	or     DWORD PTR [esi],ebx
  40bc52:	jg     0x40bcc7
  40bc54:	std    
  40bc55:	fisub  WORD PTR ds:[ecx+0x40]
  40bc59:	enter  0xa644,0x71
  40bc5d:	xor    BYTE PTR ds:[edi+0x33598681],ah
  40bc64:	sar    DWORD PTR [ebx-0x2489e9cd],cl
  40bc6a:	jae    0x40bce9
  40bc6c:	sub    dl,cl
  40bc6e:	dec    ecx
  40bc6f:	(bad)  
  40bc70:	fistp  QWORD PTR [esi+ebp*2]
  40bc73:	add    BYTE PTR [eax+0x337a0b2],0xc2
  40bc7a:	jbe    0x40bcc8
  40bc7c:	in     al,dx
  40bc7d:	jnp    0x40bcb1
  40bc7f:	mov    cl,0xc9
  40bc81:	ss inc ebp
  40bc83:	leave  
  40bc84:	addr16 in eax,0x60
  40bc87:	adc    DWORD PTR [edi],esp
  40bc89:	iret   
  40bc8a:	es js  0x40bc6e
  40bc8d:	pop    esp
  40bc8e:	js     0x40bce0
  40bc90:	cmp    eax,0x7e403821
  40bc95:	cli    
  40bc96:	push   ebx
  40bc97:	into   
  40bc98:	retf   0xb728
  40bc9b:	mov    al,0xe6
  40bc9d:	push   0x31
  40bc9f:	or     BYTE PTR [esi+0xc],cl
  40bca2:	test   DWORD PTR [esi+eax*8-0x5354fcff],ebx
  40bca9:	fwait
  40bcaa:	push   edx
  40bcab:	pop    ebx
  40bcac:	mov    ebp,0xe977165a
  40bcb1:	mov    ecx,0xe8c66cc9
  40bcb6:	add    eax,ecx
  40bcb8:	imul   esp,ecx,0xb463bb2c
  40bcbe:	or     esp,edi
  40bcc0:	sub    BYTE PTR [ecx+edx*8],ch
  40bcc3:	and    al,0xac
  40bcc5:	push   esi
  40bcc6:	(bad)  
  40bcc7:	call   0xaa802405
  40bccc:	retf   0xfbf7
  40bccf:	in     al,dx
  40bcd0:	fild   WORD PTR [ebp+0x70]
  40bcd3:	push   ebx
  40bcd4:	sbb    dl,dh
  40bcd6:	out    0xfc,al
  40bcd8:	scas   al,BYTE PTR es:[edi]
  40bcd9:	repz jecxz 0x40bd08
  40bcdc:	cli    
  40bcdd:	ja     0x40bcae
  40bcdf:	inc    ebp
  40bce0:	mov    ebx,0x692af710
  40bce5:	add    al,0x83
  40bce7:	outs   dx,BYTE PTR ds:[esi]
  40bce8:	mov    ecx,DWORD PTR [esi-0x6d]
  40bceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcec:	(bad)  
  40bcee:	cs cld 
  40bcf0:	xlat   BYTE PTR ds:[ebx]
  40bcf1:	xchg   esi,eax
  40bcf2:	in     eax,0x87
  40bcf4:	out    0xe,eax
  40bcf6:	jnp    0x40bd31
  40bcf8:	add    DWORD PTR [edi-0x70d884d1],0x42
  40bcff:	sahf   
  40bd00:	mov    ebp,0x82aad941
  40bd05:	mov    ah,0x0
  40bd07:	outs   dx,BYTE PTR ds:[esi]
  40bd08:	(bad)  
  40bd09:	sbb    ebx,edi
  40bd0b:	cdq    
  40bd0c:	idiv   edx
  40bd0e:	ds call 0x310b:0xea510725
  40bd16:	out    0x5f,al
  40bd18:	push   esp
  40bd19:	mov    ebx,0x494b323d
  40bd1e:	in     al,0x35
  40bd20:	jb     0x40bd32
  40bd22:	ror    BYTE PTR [eax+ebp*4+0x11],1
  40bd26:	push   edx
  40bd27:	inc    eax
  40bd28:	sub    al,0x6e
  40bd2a:	enter  0xeac5,0x2e
  40bd2e:	rcl    BYTE PTR [edx+0x3a],1
  40bd31:	pop    ss
  40bd32:	mul    ah
  40bd34:	push   0x4f
  40bd36:	shl    BYTE PTR [edi+0x289f918b],1
  40bd3c:	pop    es
  40bd3d:	sub    eax,0xfa759d16
  40bd42:	lods   al,BYTE PTR ds:[esi]
  40bd43:	cli    
  40bd44:	mov    dl,0x1b
  40bd46:	add    al,0xc3
  40bd48:	push   ds
  40bd49:	push   0xffffffe6
  40bd4b:	hlt    
  40bd4c:	fldenv [edx-0x746e257e]
  40bd52:	or     edx,DWORD PTR [ebx]
  40bd54:	data16 cld 
  40bd56:	enter  0xf059,0x4a
  40bd5a:	xchg   esp,eax
  40bd5b:	dec    esp
  40bd5c:	sub    ebp,DWORD PTR [edx]
  40bd5e:	push   cs
  40bd5f:	add    ch,BYTE PTR [ebp-0x3973a655]
  40bd65:	mov    ?,WORD PTR [eax-0x32]
  40bd68:	and    BYTE PTR [eax],bl
  40bd6a:	pop    ebx
  40bd6b:	add    cl,bl
  40bd6d:	and    ch,ch
  40bd6f:	imul   ebp,DWORD PTR [esi+0xa],0xc1e21569
  40bd76:	hlt    
  40bd77:	mov    WORD PTR [edi+edx*2+0x47],ss
  40bd7b:	and    eax,0xcab2d921
  40bd80:	xchg   edi,eax
  40bd81:	je     0x40bd51
  40bd83:	in     eax,dx
  40bd84:	fst    QWORD PTR [ebx]
  40bd86:	das    
  40bd87:	push   ebx
  40bd88:	mov    eax,ds:0xd48b5a47
  40bd8d:	jecxz  0x40bd5f
  40bd8f:	mul    BYTE PTR [edi+esi*1-0x6c3a63ce]
  40bd96:	fiadd  DWORD PTR [ebx+0x3f397bec]
  40bd9c:	or     DWORD PTR [ecx],ebx
  40bd9e:	sbb    al,0x58
  40bda0:	mov    eax,ebp
  40bda2:	fdivr  QWORD PTR [edx]
  40bda4:	dec    esi
  40bda5:	test   BYTE PTR [eax-0x4d],0xdb
  40bda9:	repz xchg esi,eax
  40bdab:	jecxz  0x40bde5
  40bdad:	mov    bl,0x52
  40bdaf:	in     eax,dx
  40bdb0:	xchg   edi,eax
  40bdb1:	push   0x7c082695
  40bdb6:	sti    
  40bdb7:	cmp    dl,BYTE PTR [edi-0x383e7284]
  40bdbd:	jle    0x40bde1
  40bdbf:	cld    
  40bdc0:	sti    
  40bdc1:	repnz scas al,BYTE PTR es:[edi]
  40bdc3:	sub    BYTE PTR [esi],0x23
  40bdc6:	xchg   edx,eax
  40bdc7:	ret    0x75b1
  40bdca:	outs   dx,DWORD PTR ds:[esi]
  40bdcb:	aam    0xf7
  40bdcd:	std    
  40bdce:	and    DWORD PTR [esp+eiz*2],ebp
  40bdd1:	cli    
  40bdd2:	jns    0x40be0d
  40bdd4:	dec    ebp
  40bdd5:	mov    ah,0x74
  40bdd7:	and    bl,BYTE PTR [esi]
  40bdd9:	ds in  al,0xc9
  40bddc:	cmp    edi,DWORD PTR [edi+edx*4-0x5a1cb617]
  40bde3:	jl     0x40bdad
  40bde5:	ret    0x8b98
  40bde8:	pop    ebp
  40bde9:	and    ecx,DWORD PTR [ebp+0x71376e39]
  40bdef:	jecxz  0x40bd9e
  40bdf1:	mov    dl,0x71
  40bdf3:	(bad)  
  40bdf4:	retf   0x196f
  40bdf7:	and    eax,0x97fa9748
  40bdfc:	test   DWORD PTR [edx+0x68b92f3],esi
  40be02:	fcom   QWORD PTR [ebp-0x77fad945]
  40be08:	pop    ebp
  40be09:	or     bh,dl
  40be0b:	mov    dh,0xff
  40be0d:	and    al,0x42
  40be0f:	and    eax,0xb9769731
  40be14:	pop    eax
  40be15:	retf   
  40be16:	xor    bl,0x2d
  40be19:	sub    edx,DWORD PTR [ebp+0x5c35c8d2]
  40be1f:	out    dx,al
  40be20:	mov    edi,DWORD PTR [esi]
  40be22:	aam    0xf7
  40be24:	xchg   edi,eax
  40be25:	sbb    bl,BYTE PTR ds:0xce3408c8
  40be2b:	mov    ds:0x98c7ecd0,al
  40be30:	and    al,BYTE PTR [edi+0x6d]
  40be33:	jle    0x40beb2
  40be35:	xchg   DWORD PTR [ebp+edx*2-0x6b9b04f8],edx
  40be3c:	fidivr DWORD PTR [edx-0x3b]
  40be3f:	sub    eax,0xc7efa28d
  40be44:	shr    BYTE PTR [eax],1
  40be46:	inc    esi
  40be47:	add    BYTE PTR [esi-0x16],0x12
  40be4b:	sbb    DWORD PTR [ebp-0x57],esi
  40be4e:	push   cs
  40be4f:	aam    0x37
  40be51:	test   eax,0x70941fa2
  40be56:	pop    ebp
  40be57:	push   ss
  40be58:	daa    
  40be59:	and    dl,BYTE PTR [esi-0x416ae9c6]
  40be5f:	jg     0x40be6f
  40be61:	leave  
  40be62:	inc    eax
  40be63:	sbb    eax,0x8935366f
  40be68:	pop    es
  40be69:	call   0xb12fa527
  40be6e:	call   0xd66de7c7
  40be73:	sbb    DWORD PTR [ebx+eax*2],eax
  40be76:	xchg   esp,eax
  40be77:	fadd   QWORD PTR [ecx-0x5e7bbb2e]
  40be7d:	xor    eax,0xf73a81dd
  40be82:	daa    
  40be83:	js     0x40be65
  40be85:	imul   esi,DWORD PTR [esi-0x7a],0x73
  40be89:	ins    BYTE PTR es:[edi],dx
  40be8a:	int    0x4d
  40be8c:	scas   eax,DWORD PTR es:[edi]
  40be8d:	mov    esi,0x9b66ea80
  40be92:	imul   eax,DWORD PTR [ecx],0xffffff90
  40be95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be96:	push   esp
  40be97:	out    0x7d,eax
  40be99:	(bad)  [esi-0x6178dbc3]
  40be9f:	mov    edi,0xa78175c
  40bea4:	pop    edi
  40bea5:	cmp    edx,0x68
  40bea8:	cmp    esi,DWORD PTR [ebp+0x2614f309]
  40beae:	jno    0x40be78
  40beb0:	jge    0x40bea3
  40beb2:	add    al,0xfb
  40beb4:	adc    ebx,DWORD PTR [ebp-0x53d93526]
  40beba:	xlat   BYTE PTR ds:[ebx]
  40bebb:	popf   
  40bebc:	pushf  
  40bebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bebe:	nop
  40bebf:	stos   DWORD PTR es:[edi],eax
  40bec0:	pushf  
  40bec1:	add    edx,DWORD PTR [edi-0x1b]
  40bec4:	mov    ecx,DWORD PTR [edi+esi*2-0x395543a6]
  40becb:	ret    0xce5c
  40bece:	push   ebp
  40becf:	(bad)  
  40bed0:	out    0xf8,al
  40bed2:	je     0x40be68
  40bed4:	repnz outs dx,DWORD PTR ds:[esi]
  40bed6:	int    0x89
  40bed8:	mov    bh,0xd9
  40beda:	xchg   edx,eax
  40bedb:	adc    ecx,esi
  40bedd:	pop    edx
  40bede:	gs pop es
  40bee0:	push   eax
  40bee1:	and    BYTE PTR [edi+edi*1-0x68],0xb7
  40bee6:	mov    DWORD PTR [edi+ecx*2],ecx
  40bee9:	jp     0x40befa
  40beeb:	mov    esp,esp
  40beed:	imul   edi,DWORD PTR [ecx-0x31c79582],0x51436696
  40bef7:	sbb    bh,BYTE PTR [ebp-0x2a]
  40befa:	and    dh,dl
  40befc:	ds lock ss stos BYTE PTR es:[edi],al
  40bf00:	jb     0x40bf27
  40bf02:	ja     0x40bebf
  40bf04:	in     al,dx
  40bf05:	pavgw  mm1,QWORD PTR [ebx]
  40bf08:	iret   
  40bf09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf0a:	dec    eax
  40bf0b:	mov    dl,0xed
  40bf0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf0e:	out    dx,al
  40bf0f:	pusha  
  40bf10:	jb     0x40bf07
  40bf12:	jp     0x40be9f
  40bf14:	mov    al,ds:0xed53b828
  40bf19:	mov    ch,BYTE PTR [eax-0x80]
  40bf1c:	adc    BYTE PTR [ebx+0x3be88455],cl
  40bf22:	fnsave [ebx+eiz*1-0x1e]
  40bf26:	mov    esp,0xea92f4de
  40bf2b:	sbb    al,bl
  40bf2d:	sbb    eax,DWORD PTR ds:0x9d7fee2f
  40bf33:	mov    ss,WORD PTR [ebp-0xe]
  40bf36:	mov    ss,WORD PTR [ecx-0x7dd465ab]
  40bf3c:	cmp    dl,BYTE PTR [edi]
  40bf3e:	pop    edx
  40bf3f:	inc    esp
  40bf40:	push   ds
  40bf41:	jmp    0x5f18937b
  40bf46:	pop    esi
  40bf47:	sub    DWORD PTR [esi-0xf],esp
  40bf4a:	and    esp,ecx
  40bf4c:	jecxz  0x40bf6d
  40bf4e:	in     al,0x21
  40bf50:	(bad)  
  40bf51:	xchg   esp,eax
  40bf52:	adc    DWORD PTR [esi-0x42],0x286dc04e
  40bf59:	gs xchg esp,eax
  40bf5b:	sub    eax,0xcf6a2ae4
  40bf60:	xor    ah,BYTE PTR [esp+esi*4]
  40bf63:	int3   
  40bf64:	pop    ebp
  40bf65:	xor    dl,BYTE PTR [eax-0x28bf9834]
  40bf6b:	(bad)  
  40bf6c:	jno    0x40bf02
  40bf6e:	inc    ebp
  40bf6f:	loope  0x40bf4d
  40bf71:	shl    DWORD PTR [ebx+0x2fda1e33],1
  40bf77:	mov    ch,0x1
  40bf79:	jecxz  0x40bf98
  40bf7b:	push   ss
  40bf7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf7d:	je     0x40bfe1
  40bf7f:	test   al,0x2d
  40bf81:	xchg   ebp,eax
  40bf82:	dec    edx
  40bf83:	mov    edi,0x7cd3fb0b
  40bf88:	mov    bh,0x76
  40bf8a:	mov    ds:0x1e00fcab,al
  40bf8f:	dec    ebp
  40bf90:	mov    ah,0x6b
  40bf92:	lds    eax,FWORD PTR [edi+ecx*4-0x28]
  40bf96:	mov    ah,0x31
  40bf98:	or     esi,DWORD PTR [ecx+0x558cc4a4]
  40bf9e:	mov    fs,WORD PTR [eax-0x1d]
  40bfa1:	arpl   WORD PTR [bp-0x8],bp
  40bfa5:	ret    
  40bfa6:	imul   esi,edi,0x7b
  40bfa9:	sbb    DWORD PTR [ebx-0x3bbabd82],ecx
  40bfaf:	xchg   esi,eax
  40bfb0:	adc    DWORD PTR [ecx+edi*2+0x1],0x28
  40bfb5:	lea    esp,[esi-0x25]
  40bfb8:	push   esi
  40bfb9:	pop    esp
  40bfba:	cmc    
  40bfbb:	cmp    eax,0xbf5ab2b2
  40bfc0:	push   edx
  40bfc1:	pusha  
  40bfc2:	mov    BYTE PTR [ecx+ebp*8+0x1b2df39a],ch
  40bfc9:	xchg   edx,eax
  40bfca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfcb:	aam    0x95
  40bfcd:	jg     0x40bf53
  40bfcf:	das    
  40bfd0:	jp     0x40c050
  40bfd2:	mov    bh,0x2
  40bfd4:	jns    0x40bf75
  40bfd6:	pop    esi
  40bfd7:	test   bh,bh
  40bfd9:	adc    al,0x5d
  40bfdb:	adc    al,0x27
  40bfdd:	test   al,0xa4
  40bfdf:	adc    BYTE PTR [eax-0x555f0227],al
  40bfe5:	popa   
  40bfe6:	inc    edx
  40bfe7:	test   eax,0x605c4970
  40bfec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfed:	pop    ebx
  40bfee:	mov    bh,0x71
  40bff0:	xor    BYTE PTR ds:0x744bfd1d,0x77
  40bff7:	xlat   BYTE PTR ds:[ebx]
  40bff8:	fisubr WORD PTR ds:0x2096983f
  40bffe:	mov    edi,0xb96da88c
  40c003:	js     0x40c009
  40c005:	nop
  40c006:	inc    esi
  40c007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c008:	ret    0xa1ef
  40c00b:	push   ecx
  40c00c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c00d:	pop    ebx
  40c00e:	jp     0x40bff4
  40c010:	mov    bl,0x1
  40c012:	out    0xd5,eax
  40c014:	mov    bl,0x92
  40c016:	aam    0x69
  40c018:	pop    esp
  40c019:	xor    ecx,DWORD PTR [ebx-0x3]
  40c01c:	inc    esp
  40c01d:	fwait
  40c01e:	sbb    ecx,edi
  40c020:	push   es
  40c021:	dec    esp
  40c022:	jp     0x40bfa9
  40c024:	fwait
  40c025:	mov    bh,0x2d
  40c027:	retf   
  40c028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c02a:	add    BYTE PTR [ebx+ebx*4+0x54a87732],dl
  40c031:	jns    0x40c01c
  40c033:	in     eax,0xc2
  40c035:	xchg   esp,eax
  40c036:	xchg   ebx,eax
  40c037:	clc    
  40c038:	call   0x7bee:0x52f2e4e0
  40c03f:	scas   al,BYTE PTR es:[edi]
  40c040:	aam    0xcf
  40c042:	std    
  40c043:	xchg   DWORD PTR [ecx-0x1fb82c52],eax
  40c049:	gs not al
  40c04c:	jb     0x40c018
  40c04e:	dec    esi
  40c04f:	cmp    dl,cl
  40c051:	mov    ebp,0xe48a6660
  40c056:	mov    ebx,0x39c9ca0
  40c05b:	and    DWORD PTR [ebx],0x88f1155e
  40c061:	pop    ecx
  40c062:	pop    ebx
  40c063:	push   eax
  40c064:	mov    bl,0x97
  40c066:	sub    eax,0x955bc63a
  40c06b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c06c:	pop    ds
  40c06d:	lods   al,BYTE PTR ds:[esi]
  40c06e:	daa    
  40c06f:	adc    al,0x30
  40c071:	or     edx,DWORD PTR [edx]
  40c073:	fisttp WORD PTR gs:0x16de325a
  40c07a:	cmp    edx,0xffffffa4
  40c07d:	std    
  40c07e:	ret    
  40c07f:	pop    ds
  40c080:	jne    0x40c0b1
  40c082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c083:	fidiv  WORD PTR [edi]
  40c085:	push   ebp
  40c086:	loop   0x40c100
  40c088:	(bad)  
  40c08a:	int3   
  40c08b:	xor    eax,0x19c8c631
  40c090:	ret    0x60f1
  40c093:	(bad)  
  40c094:	jno    0x40c042
  40c096:	es push esi
  40c098:	fs sub dl,BYTE PTR gs:[eax+eiz*1-0x74cf2c51]
  40c0a1:	xlat   BYTE PTR ds:[ebx]
  40c0a2:	retf   0xcbb2
  40c0a5:	fnstenv [ecx+eiz*8+0x3441d158]
  40c0ac:	xchg   ebp,eax
  40c0ad:	mov    ah,0x3f
  40c0af:	loop   0x40c06b
  40c0b1:	dec    eax
  40c0b2:	inc    ebx
  40c0b3:	add    al,0x3d
  40c0b5:	shr    ch,0x1d
  40c0b8:	neg    BYTE PTR [edi-0x7393cd51]
  40c0be:	xor    al,0x6b
  40c0c0:	paddsw mm2,mm2
  40c0c3:	jle    0x40c0d0
  40c0c5:	adc    ebx,DWORD PTR [eax-0x6ebc2c50]
  40c0cb:	loopne 0x40c0b8
  40c0cd:	jge    0x40c06d
  40c0cf:	das    
  40c0d0:	jbe    0x40c0e3
  40c0d2:	fwait
  40c0d3:	cwde   
  40c0d4:	sbb    cl,ch
  40c0d6:	jmp    0x1ee9:0x4c290c60
  40c0dd:	sti    
  40c0de:	fisttp DWORD PTR [ebp+0x2a959e51]
  40c0e4:	in     eax,dx
  40c0e5:	dec    edi
  40c0e6:	add    BYTE PTR [ebx+0x7074fe8f],dh
  40c0ec:	and    DWORD PTR [ecx+0x690d01f9],esp
  40c0f2:	xor    BYTE PTR [esi-0x57],0x3
  40c0f6:	jg     0x40c114
  40c0f8:	retf   0x6e05
  40c0fb:	push   DWORD PTR [edi+0x22]
  40c0fe:	in     eax,0x16
  40c100:	push   0xf7c9a80b
  40c105:	mov    eax,ds:0xa7f4eb7d
  40c10a:	test   DWORD PTR [eax-0x18],esp
  40c10d:	add    eax,0xa0880c04
  40c112:	dec    edx
  40c113:	jg     0x40c123
  40c115:	pop    esi
  40c116:	mov    ah,0x2f
  40c118:	adc    BYTE PTR [eax-0x3e10850c],0xe5
  40c11f:	cmp    ch,BYTE PTR [eax+edi*1-0x7a]
  40c123:	scas   eax,DWORD PTR es:[edi]
  40c124:	scas   eax,DWORD PTR es:[edi]
  40c125:	in     al,dx
  40c126:	add    BYTE PTR [edi+edi*2],ah
  40c129:	dec    eax
  40c12a:	out    0xa0,al
  40c12c:	inc    esi
  40c12d:	jmp    0xcdb7:0x429530a0
  40c134:	mov    esp,0xd450a7f4
  40c139:	inc    ebx
  40c13a:	dec    edx
  40c13b:	sbb    al,0xd8
  40c13d:	call   0x8aaa:0x28044cd5
  40c144:	adc    BYTE PTR [edi],0x52
  40c147:	sbb    eax,0x39fbbfbe
  40c14c:	(bad)  
  40c14d:	in     eax,dx
  40c14e:	or     al,0xa
  40c150:	stos   BYTE PTR es:[edi],al
  40c151:	mov    dl,0xa
  40c153:	sub    ebx,esi
  40c155:	fld    QWORD PTR [eax+esi*2-0x7e]
  40c159:	cs mov edx,0x26e000ed
  40c15f:	or     eax,0x1b3707ed
  40c164:	cld    
  40c165:	mov    WORD PTR [ebx-0x29de2704],cs
  40c16b:	in     eax,dx
  40c16c:	mov    cl,0x6c
  40c16f:	lods   eax,DWORD PTR ds:[esi]
  40c170:	in     eax,dx
  40c171:	in     al,0x7d
  40c173:	jge    0x40c142
  40c175:	add    eax,ebx
  40c177:	xchg   BYTE PTR [edi+0x666cb1e],ch
  40c17d:	inc    esp
  40c17e:	scas   eax,DWORD PTR es:[edi]
  40c17f:	mov    ebx,0x31f7ca05
  40c184:	(bad)  
  40c185:	pop    edx
  40c186:	rcr    DWORD PTR [ebx+0x75],cl
  40c189:	mov    dh,0xfe
  40c18b:	pop    edx
  40c18c:	sub    al,0x86
  40c18e:	cs aad 0xbf
  40c191:	add    eax,0x3f3007b1
  40c196:	retf   0x5f72
  40c199:	loopne 0x40c154
  40c19b:	gs pop ebx
  40c19d:	add    ebp,DWORD PTR [ebp+0x53cd003d]
  40c1a3:	sub    eax,0x2ad9a16f
  40c1a8:	outs   dx,DWORD PTR ds:[esi]
  40c1a9:	popa   
  40c1aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1ab:	xor    al,0xba
  40c1ad:	push   ebp
  40c1ae:	mov    edx,0x2aec850f
  40c1b3:	dec    esp
  40c1b4:	stos   BYTE PTR es:[edi],al
  40c1b5:	xor    DWORD PTR [eax],0x46
  40c1b8:	xchg   edx,eax
  40c1b9:	les    esi,FWORD PTR [edi]
  40c1bb:	call   0x7adf:0x162474c2
  40c1c2:	frndint 
  40c1c4:	into   
  40c1c5:	call   0x7e6a:0x52354868
  40c1cc:	inc    edi
  40c1cd:	sbb    BYTE PTR [ebp-0x492a130e],dh
  40c1d3:	jl     0x40c243
  40c1d5:	jne    0x40c1a5
  40c1d7:	mov    ebx,0x8659c47b
  40c1dc:	push   edi
  40c1dd:	push   0x1406ff48
  40c1e2:	push   edx
  40c1e3:	mov    eax,0x679a0521
  40c1e8:	push   eax
  40c1e9:	rcl    eax,cl
  40c1eb:	icebp  
  40c1ec:	stos   DWORD PTR es:[edi],eax
  40c1ed:	pop    esi
  40c1ee:	addr16 sbb ch,dh
  40c1f1:	xchg   ebp,eax
  40c1f2:	call   0xa91c:0xd21c1fed
  40c1f9:	cwde   
  40c1fa:	les    esp,FWORD PTR [ebp+0x37]
  40c1fd:	jb     0x40c24a
  40c1ff:	inc    eax
  40c200:	xlat   BYTE PTR ds:[ebx]
  40c201:	mov    eax,ds:0xea7efb97
  40c206:	jnp    0x40c1cb
  40c208:	xchg   edx,eax
  40c209:	push   edx
  40c20a:	and    dh,BYTE PTR [ebx+0x46]
  40c20d:	inc    ebp
  40c20e:	inc    edx
  40c20f:	inc    dl
  40c211:	cmp    eax,0x90b9093e
  40c216:	repz adc bh,ch
  40c219:	(bad)  
  40c21a:	dec    ax
  40c21c:	pop    edi
  40c21d:	xchg   esi,eax
  40c21e:	imul   ecx,edi,0x2687c60f
  40c224:	leave  
  40c225:	popa   
  40c226:	stc    
  40c227:	pop    ebp
  40c228:	ja     0x40c29a
  40c22a:	or     BYTE PTR [edx],ch
  40c22c:	inc    esi
  40c22d:	pop    edx
  40c22e:	std    
  40c22f:	out    dx,eax
  40c230:	cmp    dl,BYTE PTR [ebx-0x36]
  40c233:	shl    BYTE PTR cs:[edx+0x5c5f8208],cl
  40c23a:	sahf   
  40c23b:	adc    BYTE PTR [ebx],ch
  40c23d:	mov    ebp,0x68f6df6e
  40c242:	and    DWORD PTR [esi],eax
  40c244:	nop
  40c245:	mov    ds:0xddf24d6a,eax
  40c24a:	mov    ebx,0x98f61dec
  40c24f:	jno    0x40c272
  40c251:	es xchg esp,eax
  40c253:	sbb    DWORD PTR [eax+0x10],esp
  40c256:	cmp    edx,ebp
  40c258:	popa   
  40c259:	stc    
  40c25a:	test   eax,0xa71435bf
  40c25f:	push   esi
  40c260:	jge    0x40c1fa
  40c262:	ja     0x40c26c
  40c264:	push   ebp
  40c265:	jp     0x40c21d
  40c267:	push   es
  40c268:	jmp    0x5a2e:0xcdcdc668
  40c26f:	mov    ah,0x39
  40c271:	dec    ebp
  40c272:	inc    ecx
  40c273:	or     ah,0xb9
  40c276:	push   eax
  40c277:	adc    eax,0xa5d0f5ae
  40c27c:	mov    dl,0x14
  40c27e:	add    BYTE PTR [edi],0xf4
  40c281:	mov    ebp,0x902c7338
  40c286:	push   ss
  40c287:	test   eax,0xfac704ee
  40c28c:	(bad)
  40c28f:	or     BYTE PTR [ebx-0x59],dl
  40c292:	xor    eax,0xcbab2958
  40c297:	jmp    0x51a38bce
  40c29c:	or     eax,0xc91cf06d
  40c2a1:	adc    eax,0x65e7878d
  40c2a6:	lds    edx,FWORD PTR [ebx+eiz*1]
  40c2a9:	inc    edi
  40c2aa:	test   DWORD PTR [eax],ebp
  40c2ac:	xor    dh,BYTE PTR fs:[edi+0x350040bf]
  40c2b3:	dec    ebx
  40c2b4:	sbb    eax,0x8076f932
  40c2b9:	dec    ecx
  40c2ba:	or     eax,0xa59a477c
  40c2bf:	bound  ebp,QWORD PTR [edi]
  40c2c1:	in     eax,dx
  40c2c2:	sbb    cl,BYTE PTR [ecx-0x271b50ac]
  40c2c8:	mov    al,ds:0xae9dd7c1
  40c2cd:	sub    DWORD PTR [esp+ebx*2-0x6b564619],0x28
  40c2d5:	xor    DWORD PTR es:[ebx],0x48b1f7da
  40c2dc:	mov    ecx,0xa7bd1789
  40c2e1:	loopne 0x40c348
  40c2e3:	mov    ds:0x62889659,al
  40c2e8:	retf   0x6d02
  40c2eb:	idiv   BYTE PTR [esi-0x19]
  40c2ee:	(bad)  
  40c2ef:	lods   eax,DWORD PTR ds:[esi]
  40c2f0:	shl    BYTE PTR [eax+0x3f],1
  40c2f3:	dec    ecx
  40c2f4:	xchg   ebx,eax
  40c2f5:	stc    
  40c2f6:	add    dh,0x3b
  40c2f9:	jmp    0x263c:0x3935d9bf
  40c300:	popf   
  40c301:	cdq    
  40c302:	ins    DWORD PTR es:[edi],dx
  40c303:	mov    eax,ds:0x821fe213
  40c308:	mov    ch,0xf4
  40c30a:	imul   edi,DWORD PTR [ebp+0x2d],0xffffffa0
  40c30e:	lock jo 0x40c2cc
  40c311:	(bad)  [edi-0x56]
  40c314:	xor    BYTE PTR [ebp+ecx*1+0x66],cl
  40c318:	ins    DWORD PTR es:[edi],dx
  40c319:	fwait
  40c31a:	mov    al,ds:0x4fecba75
  40c31f:	loop   0x40c2a2
  40c321:	and    esp,DWORD PTR [eax-0x71225619]
  40c327:	add    dh,BYTE PTR [eax]
  40c329:	xchg   esp,eax
  40c32a:	inc    esi
  40c32b:	stos   DWORD PTR es:[edi],eax
  40c32c:	xchg   ebp,eax
  40c32d:	fstp   st(4)
  40c32f:	dec    eax
  40c330:	xor    edx,DWORD PTR [eax+0x6a]
  40c333:	div    DWORD PTR [eax-0x2cdfb0b]
  40c339:	gs ins DWORD PTR es:[edi],dx
  40c33b:	fwait
  40c33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c33d:	xor    dh,BYTE PTR [edx+0x2fd31737]
  40c343:	arpl   WORD PTR [edi-0x21d78313],dx
  40c349:	rcr    DWORD PTR [ebx],cl
  40c34b:	adc    ah,dl
  40c34d:	(bad)  
  40c34e:	clc    
  40c34f:	popf   
  40c350:	dec    BYTE PTR [ebp-0x739b1375]
  40c356:	inc    ebp
  40c357:	mov    edi,0x50727c34
  40c35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c35d:	add    al,0x44
  40c35f:	push   ss
  40c360:	push   ds
  40c361:	and    DWORD PTR [edx],ecx
  40c363:	inc    esi
  40c364:	aam    0x8
  40c366:	das    
  40c367:	jmp    0x40c31b
  40c369:	call   0xb7a7:0xa4f9b0cb
  40c370:	inc    eax
  40c371:	imul   ebx,DWORD PTR [ebp+edx*8+0x19],0x11
  40c376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c377:	test   al,0x12
  40c379:	pop    gs
  40c37b:	pop    eax
  40c37c:	cli    
  40c37d:	(bad)  
  40c37e:	xor    al,0xdd
  40c380:	xor    DWORD PTR [eax],esp
  40c382:	add    al,0x51
  40c384:	in     eax,0xaf
  40c386:	sub    esp,DWORD PTR [edi+0x4d73e884]
  40c38c:	add    ebp,ecx
  40c38e:	sbb    al,0xf7
  40c390:	or     edx,ebp
  40c392:	sub    BYTE PTR ds:0xec56414f,0x2f
  40c399:	jle    0x40c402
  40c39b:	xlat   BYTE PTR ds:[ebx]
  40c39c:	mov    eax,ds:0x4d727845
  40c3a1:	mov    dl,BYTE PTR [esi]
  40c3a3:	cmp    DWORD PTR [edx],ebp
  40c3a5:	jecxz  0x40c3cd
  40c3a7:	cmp    DWORD PTR [eax+0x66c352bf],ecx
  40c3ad:	add    al,0x10
  40c3af:	nop
  40c3b0:	mov    eax,ds:0xc9e56242
  40c3b5:	inc    edi
  40c3b6:	jne    0x40c37b
  40c3b8:	mov    esi,0xe7c9f45b
  40c3bd:	adc    eax,0xb8a54f2e
  40c3c2:	out    dx,eax
  40c3c3:	mov    BYTE PTR [ebx-0x71],dl
  40c3c6:	cmp    esp,DWORD PTR [edi-0x65e4223c]
  40c3cc:	sub    eax,0x2d7d5511
  40c3d1:	leave  
  40c3d2:	push   ecx
  40c3d3:	jo     0x40c3a4
  40c3d5:	inc    edx
  40c3d6:	(bad)  
  40c3d7:	or     dh,BYTE PTR ds:[ebp+edi*2-0x43]
  40c3dc:	pop    edx
  40c3dd:	jno    0x40c3f4
  40c3df:	cld    
  40c3e0:	sub    eax,0x79a64651
  40c3e5:	ror    cl,0xf8
  40c3e8:	add    ebx,DWORD PTR [ebp-0x5b404ccf]
  40c3ee:	and    ecx,DWORD PTR [esi-0x14928361]
  40c3f4:	call   FWORD PTR [esi+0x18ea3e38]
  40c3fa:	daa    
  40c3fb:	cmp    edx,DWORD PTR [esi+0x6a]
  40c3fe:	iret   
  40c3ff:	stos   BYTE PTR es:[edi],al
  40c400:	mov    ds:0x37effd97,eax
  40c405:	xlat   BYTE PTR ds:[ebx]
  40c406:	(bad)  
  40c407:	cli    
  40c408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c409:	pop    ss
  40c40a:	sub    ch,0x97
  40c40d:	mov    esp,0x443cb18
  40c412:	mov    bh,0x6b
  40c414:	jle    0x40c403
  40c416:	enter  0xa815,0x82
  40c41a:	lods   eax,DWORD PTR ds:[esi]
  40c41b:	or     BYTE PTR [edx-0x72777f93],ah
  40c421:	dec    ebp
  40c422:	fld    TBYTE PTR ds:0x8248cd0b
  40c428:	mov    ds:0x346a3922,al
  40c42d:	adc    BYTE PTR [esi],ch
  40c42f:	hlt    
  40c430:	das    
  40c431:	mov    dh,0x3e
  40c433:	jecxz  0x40c493
  40c435:	add    ebp,DWORD PTR [eax+0x5b5c4d52]
  40c43b:	xor    bh,bl
  40c43d:	xchg   esi,eax
  40c43e:	sbb    BYTE PTR [ebx+0x6c1bc8fc],bl
  40c444:	push   ebx
  40c445:	lock je 0x40c3d2
  40c448:	xor    al,0xd5
  40c44a:	jbe    0x40c3f0
  40c44c:	aad    0xd6
  40c44e:	mov    ebp,eax
  40c450:	mov    bl,0x76
  40c452:	add    edi,DWORD PTR ds:0x8cb05927
  40c458:	sub    BYTE PTR [ebx+0x5b],dl
  40c45b:	xchg   ecx,eax
  40c45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c45d:	out    dx,eax
  40c45e:	ja     0x40c4d4
  40c460:	scas   eax,DWORD PTR es:[edi]
  40c461:	hlt    
  40c462:	(bad)  
  40c463:	(bad)  
  40c464:	aas    
  40c465:	stos   DWORD PTR es:[edi],eax
  40c466:	aam    0xc2
  40c468:	in     eax,0x80
  40c46a:	lahf   
  40c46b:	push   ecx
  40c46c:	fsubp  st(4),st
  40c46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c46f:	mov    DWORD PTR [esi],0xd1f4164b
  40c475:	(bad)  
  40c476:	leave  
  40c477:	repz je 0x40c4d6
  40c47a:	outs   dx,BYTE PTR ds:[esi]
  40c47b:	pop    eax
  40c47c:	xor    eax,0x4ed54bae
  40c481:	loope  0x40c470
  40c483:	jmp    0xea46bcdb
  40c488:	mov    dh,0x5
  40c48a:	packuswb mm5,QWORD PTR [eax-0x70]
  40c48e:	imul   esp,DWORD PTR gs:[ebx+eax*1-0xb],0xffffff8c
  40c494:	stc    
  40c495:	stos   BYTE PTR es:[edi],al
  40c496:	xor    al,0x3c
  40c498:	push   ebx
  40c499:	dec    esi
  40c49a:	inc    ecx
  40c49b:	enter  0x5244,0x62
  40c49f:	scas   al,BYTE PTR es:[edi]
  40c4a0:	push   esp
  40c4a1:	int    0xf8
  40c4a3:	and    ebp,DWORD PTR [edx-0x3ba9daca]
  40c4a9:	lds    edx,FWORD PTR [eax+0x5ff23cc5]
  40c4af:	add    ebx,DWORD PTR [edi]
  40c4b1:	jecxz  0x40c4dc
  40c4b3:	adc    dl,dl
  40c4b5:	push   es
  40c4b6:	cmc    
  40c4b7:	out    0x79,eax
  40c4b9:	sub    eax,DWORD PTR [eax+0x40]
  40c4bc:	arpl   WORD PTR [ecx-0x21],ax
  40c4bf:	rcr    DWORD PTR [ebx+0x4a],1
  40c4c2:	popa   
  40c4c3:	cld    
  40c4c4:	mov    edx,0x65f1b438
  40c4c9:	out    0xbb,eax
  40c4cb:	mov    ah,0x34
  40c4cd:	pop    ebx
  40c4ce:	call   0x5851:0xf6bbe4cb
  40c4d5:	lods   eax,DWORD PTR ds:[esi]
  40c4d6:	cmp    eax,0xd4021a20
  40c4db:	xchg   ebp,eax
  40c4dc:	inc    esi
  40c4dd:	nop
  40c4de:	cwde   
  40c4df:	(bad)  [esi+0x11]
  40c4e2:	or     BYTE PTR [edi-0x27],ah
  40c4e5:	mov    ds:0xed8822b1,al
  40c4ea:	cmp    BYTE PTR [edi],ah
  40c4ec:	cli    
  40c4ed:	xchg   ebx,eax
  40c4ee:	repz jle 0x40c4d1
  40c4f1:	imul   esi,DWORD PTR [edx+0x19ea1864],0xfffffff3
  40c4f8:	mov    WORD PTR [eax],es
  40c4fa:	loopne 0x40c52a
  40c4fc:	cmc    
  40c4fd:	cmp    esp,DWORD PTR [ebx]
  40c4ff:	inc    esp
  40c500:	rcl    DWORD PTR [edx-0x52],1
  40c503:	jl     0x40c4f8
  40c505:	adc    BYTE PTR gs:[ecx+ebx*1+0x1bbde282],ch
  40c50d:	cmp    eax,0xb27ed808
  40c512:	xchg   DWORD PTR [ecx+0x439d634f],ecx
  40c518:	push   ss
  40c519:	int3   
  40c51a:	and    al,0x0
  40c51c:	add    al,al
  40c51e:	mov    ch,0x2b
  40c520:	retf   0x6971
  40c523:	fiadd  DWORD PTR [ebx]
  40c525:	cmc    
  40c526:	adc    eax,0x6342ee51
  40c52b:	shr    BYTE PTR [ebx],cl
  40c52d:	ins    DWORD PTR es:[edi],dx
  40c52e:	aas    
  40c52f:	in     eax,0xbd
  40c531:	iret   
  40c532:	cs aas 
  40c534:	rol    DWORD PTR [eax+0x5e],0x97
  40c538:	inc    ecx
  40c539:	inc    edx
  40c53a:	xlat   BYTE PTR ds:[ebx]
  40c53b:	pop    ss
  40c53c:	push   ss
  40c53d:	nop
  40c53e:	xchg   esi,eax
  40c53f:	iret   
  40c540:	xchg   BYTE PTR [edi+ebx*8],al
  40c543:	xchg   edx,eax
  40c544:	ret    0x48bd
  40c547:	fiadd  WORD PTR [edx-0x3c]
  40c54a:	into   
  40c54b:	xchg   edx,eax
  40c54c:	adc    eax,eax
  40c54e:	pop    ss
  40c54f:	dec    eax
  40c550:	hlt    
  40c551:	jns    0x40c4f8
  40c553:	dec    eax
  40c554:	sbb    DWORD PTR [edx+0x7a],ecx
  40c557:	daa    
  40c558:	mov    ecx,0x89d4a697
  40c55d:	mov    DWORD PTR [edx-0x6d],ecx
  40c560:	inc    edx
  40c561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c562:	jb     0x40c4e8
  40c564:	mov    al,ds:0xc3fac119
  40c569:	sub    al,0x12
  40c56b:	aaa    
  40c56c:	aaa    
  40c56d:	adc    dh,BYTE PTR [ecx+0x2d3c126b]
  40c573:	xlat   BYTE PTR ds:[ebx]
  40c574:	jmp    0xf2e139f6
  40c579:	or     bh,BYTE PTR [ebp-0x85cc080]
  40c57f:	mov    ecx,0x33aabdc
  40c584:	inc    cl
  40c586:	push   esi
  40c587:	into   
  40c588:	lds    ebx,FWORD PTR [edi+ebx*4-0x78]
  40c58c:	jo     0x40c5fb
  40c58e:	neg    dh
  40c590:	mov    ds:0xddb38925,eax
  40c595:	imul   ebx,DWORD PTR [esi],0xb5888ea5
  40c59b:	adc    dl,dh
  40c59d:	ret    0x1cd8
  40c5a0:	push   esi
  40c5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5a2:	and    DWORD PTR ds:0xa9a51ae8,ecx
  40c5a8:	cmp    BYTE PTR [ecx-0x783901d5],dl
  40c5ae:	(bad)
  40c5b3:	pop    esi
  40c5b4:	dec    esi
  40c5b5:	hlt    
  40c5b6:	repz dec ecx
  40c5b8:	or     cl,ah
  40c5ba:	(bad)  
  40c5bb:	into   
  40c5bc:	push   ss
  40c5bd:	iret   
  40c5be:	mov    esp,0x5a2791c7
  40c5c3:	mov    eax,0xf4312918
  40c5c8:	sbb    bl,BYTE PTR [esi]
  40c5ca:	and    DWORD PTR [edx],0x2e5501d5
  40c5d0:	xor    DWORD PTR [eax+0x6b295436],edi
  40c5d6:	jb     0x40c5c6
  40c5d8:	test   BYTE PTR [eax],ah
  40c5da:	sub    al,0xa6
  40c5dc:	test   BYTE PTR [eax-0x572d195c],dl
  40c5e2:	mov    bl,0xb7
  40c5e4:	xchg   edi,eax
  40c5e5:	mov    ah,0x7e
  40c5e7:	call   0x7b9f694c
  40c5ec:	ds out 0xbd,al
  40c5ef:	cmp    esp,esi
  40c5f1:	jb     0x40c64b
  40c5f3:	mov    esp,0xdcf26a81
  40c5f8:	ds mov edx,0x1f730f8b
  40c5fe:	in     eax,0xca
  40c600:	adc    DWORD PTR [esi+ecx*4-0x6448e814],edi
  40c607:	pop    ds
  40c608:	clc    
  40c609:	pop    es
  40c60a:	jge    0x40c5cf
  40c60c:	or     eax,0xc21a99b3
  40c611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c612:	jae    0x40c679
  40c614:	shl    edx,1
  40c616:	inc    ah
  40c618:	shl    bh,0xf3
  40c61b:	push   es
  40c61c:	out    0x4a,al
  40c61e:	push   0x4fc9b75e
  40c623:	loop   0x40c610
  40c625:	sub    DWORD PTR [ebx+0x29f1538b],ebp
  40c62b:	sbb    ah,BYTE PTR [eax]
  40c62d:	pusha  
  40c62e:	in     al,0x36
  40c630:	fsubr  DWORD PTR [edi]
  40c632:	adc    cl,al
  40c634:	iret   
  40c635:	push   edx
  40c636:	and    edi,DWORD PTR [edi-0x1feef9e9]
  40c63c:	inc    ebx
  40c63d:	add    eax,0xb9d15ac
  40c642:	fsubr  st,st(7)
  40c644:	sub    edx,DWORD PTR [edi-0x38d9c290]
  40c64a:	jmp    0x8b51:0x94aef223
  40c651:	xor    al,BYTE PTR ds:0x71d5c249
  40c657:	sbb    edx,DWORD PTR [eax+0x27]
  40c65a:	cs inc esp
  40c65c:	in     al,0x8b
  40c65e:	and    eax,0xd5adbd7b
  40c663:	cld    
  40c664:	enter  0xf43b,0x28
  40c668:	adc    eax,0x909c2f49
  40c66d:	push   eax
  40c66e:	in     al,dx
  40c66f:	shl    DWORD PTR [ebx+0x777b08c0],cl
  40c675:	inc    ebp
  40c676:	push   ds
  40c677:	mov    DWORD PTR [ebx],ebp
  40c679:	inc    ebp
  40c67a:	mov    ds,WORD PTR [ecx-0x6a]
  40c67d:	lock es icebp 
  40c680:	mov    ds:0x637fb212,eax
  40c685:	cli    
  40c686:	fdivr  QWORD PTR [esi+0x77]
  40c689:	shr    BYTE PTR [edi-0x42],0xe6
  40c68d:	push   eax
  40c68e:	and    DWORD PTR [esi],eax
  40c690:	mov    eax,ds:0x73c47389
  40c695:	jge    0x40c6c5
  40c697:	int    0xd2
  40c699:	out    0xed,al
  40c69b:	adc    edx,DWORD PTR [edi-0x15c16a2]
  40c6a1:	push   eax
  40c6a2:	shl    DWORD PTR [ebx+0x41],0xb0
  40c6a6:	js     0x40c674
  40c6a8:	lock int3 
  40c6aa:	xchg   ebx,eax
  40c6ab:	out    dx,eax
  40c6ac:	cmp    ecx,ebp
  40c6ae:	retf   0x9991
  40c6b1:	jnp    0x40c6ca
  40c6b3:	adc    esp,0xffffffa9
  40c6b6:	scas   al,BYTE PTR es:[edi]
  40c6b7:	or     dh,bl
  40c6b9:	inc    edx
  40c6ba:	fwait
  40c6bb:	test   al,0xc9
  40c6bd:	mov    dh,0x1a
  40c6bf:	repnz sub al,0xe4
  40c6c2:	stc    
  40c6c3:	retf   
  40c6c4:	jge    0x40c741
  40c6c6:	push   0xffffffb6
  40c6c8:	loop   0x40c6f2
  40c6ca:	jl     0x40c70d
  40c6cc:	mov    esi,0xf13cfeac
  40c6d1:	mov    edi,0xb699889c
  40c6d6:	jmp    0x40c6c5
  40c6d8:	sbb    esp,DWORD PTR [esi+0x377c0595]
  40c6de:	or     eax,ecx
  40c6e0:	retf   
  40c6e1:	add    eax,0x81aa22f7
  40c6e6:	inc    ecx
  40c6e7:	jb     0x40c740
  40c6e9:	fs mov al,0x4e
  40c6ec:	xchg   BYTE PTR [ebp-0x5c],bh
  40c6ef:	mov    ds:0xbc816f46,al
  40c6f4:	shl    DWORD PTR [ebx],1
  40c6f6:	jae    0x40c698
  40c6f8:	adc    esi,DWORD PTR [edx+0x654f55cf]
  40c6fe:	lds    edi,FWORD PTR [edi-0x35]
  40c701:	push   ebx
  40c702:	out    dx,eax
  40c703:	retf   0xb05e
  40c706:	add    eax,0x8f066fa4
  40c70b:	lock into 
  40c70d:	pop    eax
  40c70e:	mov    esp,0x5f388c28
  40c713:	addr16 (bad) 
  40c715:	jecxz  0x40c77f
  40c717:	ror    DWORD PTR [ecx+ebp*1],cl
  40c71a:	std    
  40c71b:	push   esp
  40c71c:	jbe    0x40c783
  40c71e:	inc    ebx
  40c71f:	mov    eax,ds:0x8718ed8c
  40c724:	sbb    eax,0xada1281c
  40c729:	jl     0x40c700
  40c72b:	sti    
  40c72c:	test   al,0x51
  40c72e:	pop    esi
  40c72f:	ins    DWORD PTR es:[edi],dx
  40c730:	repz std 
  40c732:	and    BYTE PTR [edi-0x450edd2f],ch
  40c738:	adc    al,0x82
  40c73a:	push   0xfffffff1
  40c73c:	mov    ah,0x34
  40c73e:	retf   
  40c73f:	(bad)  
  40c740:	and    edi,DWORD PTR [ebp-0x547343e2]
  40c746:	mov    dl,0x89
  40c748:	out    dx,al
  40c749:	push   0x7c7fecca
  40c74e:	xor    ecx,edx
  40c750:	and    cl,bl
  40c752:	popa   
  40c753:	mov    esi,0x2d0a65f5
  40c758:	or     BYTE PTR [ebp+0xd6482fa],0xc4
  40c75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c760:	xchg   edx,eax
  40c761:	mov    ch,0x5d
  40c763:	or     ebp,DWORD PTR [edx+0x5c]
  40c766:	or     DWORD PTR [ebx+0x6c],eax
  40c769:	repz pop ds
  40c76b:	sbb    bl,al
  40c76d:	inc    esp
  40c76e:	inc    ebp
  40c76f:	sub    ebx,DWORD PTR [esi-0x62]
  40c772:	cs xchg edx,eax
  40c774:	in     eax,dx
  40c775:	mov    ah,0xd
  40c777:	push   edi
  40c778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c779:	inc    esi
  40c77a:	int3   
  40c77b:	mov    esp,0xf1acc67b
  40c780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c781:	mov    ecx,0xb3bb018b
  40c786:	jnp    0x40c793
  40c788:	pop    esp
  40c789:	pop    esi
  40c78a:	idiv   eax
  40c78c:	fnsave [eax]
  40c78e:	dec    edx
  40c78f:	loop   0x40c79e
  40c791:	cdq    
  40c792:	dec    ebx
  40c793:	mov    cl,0x23
  40c795:	in     al,0x9d
  40c797:	mov    esp,0xb32c9728
  40c79c:	test   eax,0x690faa33
  40c7a1:	mov    ebx,0x975ac3f7
  40c7a6:	dec    ecx
  40c7a7:	push   es
  40c7a8:	pop    es
  40c7a9:	out    0xdb,eax
  40c7ab:	sbb    DWORD PTR [esi+ebp*1+0x6d323723],esi
  40c7b2:	mov    WORD PTR [esi+esi*1+0x7066fed3],es
  40c7b9:	test   DWORD PTR [eax],edx
  40c7bb:	aam    0x0
  40c7bd:	mov    ebp,0xfc9a5623
  40c7c2:	sub    al,0xcd
  40c7c4:	adc    eax,0xb08a1cf4
  40c7c9:	dec    esi
  40c7ca:	shl    DWORD PTR [eax],1
  40c7cc:	or     dl,BYTE PTR [eax]
  40c7ce:	jmp    0x40c75a
  40c7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d1:	pop    edx
  40c7d2:	js     0x40c75b
  40c7d4:	nop
  40c7d5:	xchg   edx,eax
  40c7d6:	mov    BYTE PTR [edi+0x48],0xfc
  40c7da:	inc    ebp
  40c7db:	mov    bl,0xfe
  40c7dd:	sub    ebp,DWORD PTR [ecx-0x414e9a46]
  40c7e3:	fisub  WORD PTR [ebp+0xe323b49]
  40c7e9:	mov    eax,ds:0x230cc0fd
  40c7ee:	sar    DWORD PTR [ecx+0x5],0x1f
  40c7f2:	jecxz  0x40c859
  40c7f4:	sub    dl,dl
  40c7f6:	shr    DWORD PTR [ebp-0x5d],cl
  40c7f9:	(bad)  
  40c7fb:	push   DWORD PTR [edi-0x1f]
  40c7fe:	enter  0xdcd6,0x21
  40c802:	in     al,dx
  40c803:	ror    BYTE PTR ds:0x54f89caa,0x92
  40c80a:	fimul  DWORD PTR [esi+0x7daee8d2]
  40c810:	fsubp  st(2),st
  40c812:	push   eax
  40c813:	test   al,0xe0
  40c815:	push   0x76
  40c817:	inc    eax
  40c818:	sub    ebp,edx
  40c81a:	mov    cl,0x77
  40c81c:	pop    esi
  40c81d:	sbb    al,0xba
  40c81f:	scas   al,BYTE PTR es:[edi]
  40c820:	fs ins DWORD PTR es:[edi],dx
  40c822:	mov    gs,WORD PTR [esi-0x62065aa5]
  40c828:	clc    
  40c829:	clc    
  40c82a:	cmp    al,0xf2
  40c82c:	div    DWORD PTR [esi]
  40c82e:	mov    eax,ds
  40c830:	cdq    
  40c831:	jnp    0x40c854
  40c833:	das    
  40c834:	sbb    eax,0x92589067
  40c839:	cdq    
  40c83a:	aaa    
  40c83b:	add    BYTE PTR [ebp-0x2c],al
  40c83e:	cmp    ah,bh
  40c840:	sbb    eax,0x9b62f7a8
  40c845:	sbb    BYTE PTR [edi+0x302d84b],0x7e
  40c84c:	imul   ebx,DWORD PTR [edi+eiz*4+0x5],0xa50bb580
  40c854:	inc    eax
  40c855:	sub    eax,0x4ab0e07b
  40c85a:	add    ebx,esi
  40c85c:	ss jbe 0x40c85a
  40c85f:	add    ebp,edi
  40c861:	mov    WORD PTR [ebp+0x6a],gs
  40c864:	adc    DWORD PTR [eax],ebp
  40c866:	mov    es,edi
  40c868:	sub    BYTE PTR [ecx+eax*8],dl
  40c86b:	pop    edx
  40c86c:	fist   DWORD PTR [esi*4+0x370b9f9c]
  40c873:	sub    edi,ecx
  40c875:	clc    
  40c876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c877:	and    al,0xa3
  40c879:	or     dh,BYTE PTR [ecx]
  40c87b:	pop    esi
  40c87c:	div    BYTE PTR [esi]
  40c87e:	push   ebp
  40c87f:	cwde   
  40c880:	bound  ecx,QWORD PTR [ebp-0x43]
  40c883:	push   es
  40c884:	sub    DWORD PTR [ecx],eax
  40c886:	lahf   
  40c887:	adc    edi,DWORD PTR [ebp-0x61]
  40c88a:	outs   dx,BYTE PTR ds:[esi]
  40c88c:	sub    BYTE PTR [edi+0x5f5b241f],ah
  40c892:	mov    eax,0xc4c0d6e6
  40c897:	test   eax,0xbb8fc00f
  40c89c:	sub    BYTE PTR [edi+0x55],dh
  40c89f:	scas   eax,DWORD PTR es:[edi]
  40c8a0:	imul   DWORD PTR [eax+0x78]
  40c8a3:	fs aam 0x43
  40c8a6:	cmp    BYTE PTR [eax+0x39],0xc0
  40c8aa:	sahf   
  40c8ab:	or     eax,0xc21f8239
  40c8b0:	mov    ebx,0x63da64b0
  40c8b5:	(bad)  
  40c8b6:	xor    edx,esi
  40c8b8:	pushw  ss
  40c8ba:	jno    0x40c908
  40c8bc:	xor    dl,BYTE PTR [ecx+eax*8-0x6a007714]
  40c8c3:	jns    0x40c934
  40c8c5:	adc    BYTE PTR [ebx-0x398baf66],dl
  40c8cb:	mov    ebx,0xb1ee5af0
  40c8d0:	mov    edi,0x355a9d82
  40c8d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d6:	loop   0x40c914
  40c8d8:	hlt    
  40c8d9:	or     DWORD PTR [eax],ebx
  40c8db:	mov    cl,0x9a
  40c8dd:	ror    BYTE PTR [ecx],0xb7
  40c8e0:	sahf   
  40c8e1:	lock mov gs:0x3ef74d31,eax
  40c8e8:	inc    esi
  40c8e9:	enter  0x9b1,0x77
  40c8ed:	cli    
  40c8ee:	jnp    0x40c89d
  40c8f0:	in     al,dx
  40c8f1:	push   eax
  40c8f2:	imul   eax,DWORD PTR [ebp+0x4b486f68],0xfcb453ef
  40c8fc:	nop
  40c8fd:	js     0x40c94c
  40c8ff:	xor    eax,0x756a5454
  40c904:	in     eax,0xb7
  40c906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c907:	(bad)  
  40c909:	rcr    DWORD PTR ds:0x29086751,0xd9
  40c910:	push   esi
  40c911:	(bad)  
  40c912:	fmul   DWORD PTR [ebx-0x54b51f88]
  40c918:	sub    BYTE PTR [edi],ah
  40c91a:	(bad)  
  40c91b:	jle    0x40c963
  40c91d:	mov    dh,0x54
  40c91f:	pop    eax
  40c920:	ror    bl,cl
  40c922:	out    0x6d,al
  40c924:	mov    esp,0x6e47ebe7
  40c929:	inc    DWORD PTR [esi+edi*4]
  40c92c:	inc    esp
  40c92d:	inc    edx
  40c92e:	mov    bl,0x29
  40c930:	xchg   ebx,eax
  40c931:	push   ss
  40c932:	add    eax,0x6e7fb00d
  40c937:	loop   0x40c8ca
  40c939:	pop    ss
  40c93a:	jne    0x40c8ca
  40c93c:	icebp  
  40c93d:	push   0x1641df08
  40c942:	mov    edi,0x52695ef8
  40c947:	push   ss
  40c948:	test   bl,dh
  40c94a:	dec    edx
  40c94b:	mov    edx,0xce94fac5
  40c950:	fwait
  40c951:	xchg   edi,eax
  40c952:	xor    BYTE PTR [ecx-0x3fd39150],dh
  40c958:	inc    edx
  40c959:	mov    BYTE PTR [edx],cl
  40c95b:	gs push ss
  40c95d:	xor    al,0x28
  40c95f:	cmp    al,0xd0
  40c961:	xchg   ecx,eax
  40c962:	icebp  
  40c963:	daa    
  40c964:	mov    al,ds:0x7b6d76f9
  40c969:	call   0x11e:0xb7d64cbf
  40c970:	xchg   ecx,eax
  40c971:	and    BYTE PTR [ecx],bl
  40c973:	cld    
  40c974:	ins    BYTE PTR es:[edi],dx
  40c975:	(bad)  
  40c976:	clc    
  40c977:	test   eax,0x753c99aa
  40c97c:	bound  edx,QWORD PTR [ecx-0x7bf67a57]
  40c982:	pop    ebx
  40c983:	jl     0x40c917
  40c985:	test   al,0x75
  40c987:	push   es
  40c988:	jo     0x40c98b
  40c98a:	xchg   ah,bh
  40c98c:	int3   
  40c98d:	shr    DWORD PTR ss:[esi+0x671938f0],0xc7
  40c995:	in     al,0xcd
  40c997:	loop   0x40c91c
  40c999:	jae    0x40c9e2
  40c99b:	retf   
  40c99c:	sbb    bl,BYTE PTR [ebx+0x130413af]
  40c9a2:	and    eax,0xa78e3ee1
  40c9a7:	ins    DWORD PTR es:[edi],dx
  40c9a8:	movups xmm1,XMMWORD PTR [edx+0x552f5f10]
  40c9af:	cld    
  40c9b0:	add    BYTE PTR [eax-0xd],bh
  40c9b3:	div    bh
  40c9b5:	iret   
  40c9b6:	not    DWORD PTR [ebp+0x14]
  40c9b9:	sub    ah,bl
  40c9bb:	scas   al,BYTE PTR es:[edi]
  40c9bc:	or     DWORD PTR ds:0x7468b602,edx
  40c9c2:	push   ds
  40c9c3:	inc    ecx
  40c9c4:	jg     0x40c95e
  40c9c6:	xchg   esp,eax
  40c9c7:	pop    ebx
  40c9c8:	xor    BYTE PTR [edx-0x72725861],0x31
  40c9cf:	jae    0x40ca05
  40c9d1:	dec    esp
  40c9d2:	int3   
  40c9d3:	adc    al,ah
  40c9d5:	xor    ah,0xe2
  40c9d8:	jecxz  0x40c981
  40c9da:	jne    0x40ca38
  40c9dc:	mov    ds:0x55fe80c,al
  40c9e1:	fcmove st,st(4)
  40c9e3:	mov    DWORD PTR [ebp-0x322aff93],edx
  40c9e9:	loop   0x40ca52
  40c9eb:	ficomp DWORD PTR [ebx+ebx*4-0x5a]
  40c9ef:	arpl   si,bx
  40c9f1:	nop
  40c9f2:	push   edx
  40c9f3:	ffree  st(5)
  40c9f5:	data16 stc 
  40c9f7:	sar    BYTE PTR [eax+0x2c8af858],0x84
  40c9fe:	inc    ecx
  40c9ff:	mov    dl,0x1d
  40ca01:	cmp    al,0xdd
  40ca03:	stc    
  40ca04:	fwait
  40ca05:	add    edi,DWORD PTR [ebx-0x6c122230]
  40ca0b:	push   ecx
  40ca0c:	(bad)  
  40ca0d:	mov    ebx,0xbbaa7b17
  40ca12:	xor    al,0x6f
  40ca14:	mov    ecx,0x8e2b9bef
  40ca19:	(bad)  
  40ca1a:	mov    ds:0xad136c18,al
  40ca1f:	(bad)  
  40ca21:	jp     0x40ca50
  40ca23:	leave  
  40ca24:	dec    eax
  40ca25:	dec    edx
  40ca26:	ficom  WORD PTR [ebp-0x183f97c4]
  40ca2c:	push   edx
  40ca2d:	pop    esi
  40ca2e:	mov    esi,0xda7d126e
  40ca33:	lods   eax,DWORD PTR ds:[esi]
  40ca34:	call   0xbc65f975
  40ca39:	jge    0x40c9bc
  40ca3b:	enter  0x7577,0x4b
  40ca3f:	sbb    eax,0x43ba4b5a
  40ca44:	out    dx,eax
  40ca45:	mov    ah,0x89
  40ca47:	sti    
  40ca48:	pop    esp
  40ca49:	test   DWORD PTR [esp+ebx*4+0x3804f1bd],ebx
  40ca50:	add    ecx,DWORD PTR [ebp-0x3f]
  40ca53:	or     eax,esp
  40ca55:	iret   
  40ca56:	mov    eax,ds:0x73109e31
  40ca5b:	dec    ebp
  40ca5c:	out    dx,al
  40ca5d:	add    BYTE PTR [edx+0x7daf97f0],cl
  40ca63:	mov    al,ds:0x88d4b973
  40ca68:	xor    esp,DWORD PTR [edi]
  40ca6a:	add    al,0xbe
  40ca6c:	and    DWORD PTR [esi],0x3
  40ca6f:	or     edx,esi
  40ca71:	dec    esp
  40ca72:	mov    ecx,0x264d666
  40ca78:	and    BYTE PTR [edx+0x7fe10794],al
  40ca7e:	sub    edx,edi
  40ca80:	pop    ds
  40ca81:	invd   
  40ca83:	sti    
  40ca84:	adc    cl,bh
  40ca86:	inc    esi
  40ca87:	call   0x3550:0x6500c227
  40ca8e:	inc    ebx
  40ca8f:	xchg   edx,eax
  40ca90:	and    al,0x8
  40ca92:	jae    0x40ca83
  40ca94:	pop    ss
  40ca95:	push   edi
  40ca96:	mov    eax,es
  40ca98:	cmp    eax,DWORD PTR [esi-0x12e7ce52]
  40ca9e:	push   0xffffffc5
  40caa0:	xchg   ebx,eax
  40caa1:	cmp    al,0x28
  40caa3:	inc    edi
  40caa4:	push   cs
  40caa5:	jns    0x40ca58
  40caa7:	sub    al,0x57
  40caa9:	sub    edi,DWORD PTR [edi-0x252712fd]
  40caaf:	fist   DWORD PTR ds:0x412c012f
  40cab5:	mov    ds:0x84ee212f,eax
  40caba:	aaa    
  40cabb:	dec    ebx
  40cabc:	xor    ebx,edi
  40cabe:	leave  
  40cabf:	cmp    DWORD PTR [edi],ebp
  40cac1:	xchg   esi,eax
  40cac2:	ds in  al,dx
  40cac4:	jp     0x40caf9
  40cac6:	pop    ds
  40cac7:	pusha  
  40cac8:	mov    ecx,0x4019fc02
  40cacd:	test   eax,0xcc412f25
  40cad2:	xor    bh,ah
  40cad4:	mov    ds:0xca09f904,al
  40cad9:	and    al,BYTE PTR [ebx-0x59]
  40cadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cadd:	sub    DWORD PTR [edx+ebp*4+0x30],0x3e7097eb
  40cae5:	add    BYTE PTR [esi+0x684068],0xec
  40caec:	push   edx
  40caed:	xchg   edx,eax
  40caee:	pop    es
  40caef:	xor    BYTE PTR [edi],ch
  40caf1:	cmp    cl,BYTE PTR [edi+eiz*8+0x4b]
  40caf5:	push   eax
  40caf6:	out    0x76,al
  40caf8:	add    eax,0xb5c3852b
  40cafd:	mov    al,0x9e
  40caff:	pop    ds
  40cb00:	mov    ebx,0x36cd1a69
  40cb05:	push   ds
  40cb06:	fidivr WORD PTR [eax-0x4563e716]
  40cb0c:	bound  esi,QWORD PTR [ebp+0x494a4138]
  40cb12:	cmp    ecx,DWORD PTR [ecx+ebp*8-0x17e8d846]
  40cb19:	mov    al,ds:0x88a91383
  40cb1e:	mov    eax,0x1571f0b7
  40cb23:	pop    ebp
  40cb24:	stos   BYTE PTR es:[edi],al
  40cb25:	jg     0x40cb67
  40cb27:	xchg   ebp,eax
  40cb28:	push   ebx
  40cb29:	and    al,0x38
  40cb2b:	xchg   DWORD PTR [edi+0x66],ebx
  40cb2e:	cwde   
  40cb2f:	push   ds
  40cb30:	sbb    eax,0xa3cf0c84
  40cb35:	jmp    0x2335d678
  40cb3a:	and    dl,ah
  40cb3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb3d:	jae    0x40cb09
  40cb3f:	ret    
  40cb40:	sub    ebp,DWORD PTR [eax+0x696253b0]
  40cb46:	jns    0x40cbb1
  40cb48:	dec    ebx
  40cb49:	(bad)  
  40cb4a:	xchg   ebx,eax
  40cb4b:	push   ecx
  40cb4c:	inc    eax
  40cb4d:	lods   al,BYTE PTR ds:[esi]
  40cb4e:	test   al,0x6b
  40cb50:	add    eax,0x10e0255f
  40cb55:	ins    DWORD PTR es:[edi],dx
  40cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb57:	mov    ah,0x65
  40cb59:	jb     0x40cb93
  40cb5b:	sar    BYTE PTR [edx],1
  40cb5d:	sub    al,0x97
  40cb5f:	rcl    edx,1
  40cb61:	popa   
  40cb62:	sahf   
  40cb63:	rcl    DWORD PTR [edi+0xa4b41c],0xdc
  40cb6a:	ja     0x40cbca
  40cb6c:	(bad)  
  40cb6d:	and    eax,0xabc6a504
  40cb72:	hlt    
  40cb73:	pop    ss
  40cb74:	sahf   
  40cb75:	test   eax,0xa79f03c0
  40cb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb7b:	lods   eax,DWORD PTR ds:[esi]
  40cb7c:	xlat   BYTE PTR ds:[ebx]
  40cb7d:	or     BYTE PTR [ebx-0x15107838],0xa8
  40cb84:	scas   eax,DWORD PTR es:[edi]
  40cb85:	cmovnp eax,DWORD PTR [edx+0x6d]
  40cb89:	es push ebx
  40cb8b:	pop    ebp
  40cb8c:	sub    al,0x12
  40cb8e:	cmp    al,0xf6
  40cb90:	add    al,0x1d
  40cb92:	xchg   BYTE PTR [ecx],cl
  40cb94:	sub    cl,BYTE PTR [esi+edi*8]
  40cb97:	and    eax,0x6f8fac37
  40cb9c:	push   0x205e1b2e
  40cba1:	test   DWORD PTR [eax+0x1f79b2bc],eax
  40cba7:	jecxz  0x40cc24
  40cba9:	jmp    0x40cbdb
  40cbab:	clc    
  40cbac:	xor    cl,BYTE PTR [edx]
  40cbae:	nop
  40cbaf:	mov    eax,gs
  40cbb1:	inc    esp
  40cbb2:	dec    ecx
  40cbb3:	test   al,0xe
  40cbb5:	sbb    DWORD PTR [edx+0x6],edi
  40cbb8:	out    dx,eax
  40cbb9:	fsub   DWORD PTR [edi+0x7e533018]
  40cbbf:	lods   al,BYTE PTR ds:[esi]
  40cbc0:	jg     0x40cbb5
  40cbc2:	outs   dx,DWORD PTR ds:[si]
  40cbc4:	pop    edi
  40cbc5:	push   0x137b7dd5
  40cbca:	les    ebp,FWORD PTR [edx-0x71]
  40cbcd:	sub    BYTE PTR [esi],dh
  40cbcf:	daa    
  40cbd0:	xchg   esi,eax
  40cbd1:	sar    BYTE PTR [ebx],cl
  40cbd3:	mov    eax,ds:0x1e0f280e
  40cbd8:	adc    ebp,edx
  40cbda:	sub    al,0x30
  40cbdc:	(bad)  
  40cbdd:	pop    ebp
  40cbde:	dec    esi
  40cbdf:	mov    ds:0xd5f4876,eax
  40cbe4:	dec    esp
  40cbe5:	add    al,0xa5
  40cbe7:	daa    
  40cbe8:	scas   eax,DWORD PTR es:[edi]
  40cbe9:	lahf   
  40cbea:	pushf  
  40cbeb:	cdq    
  40cbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbed:	aas    
  40cbee:	jg     0x40cc44
  40cbf0:	xor    eax,0xcc0fe1f
  40cbf5:	pop    esp
  40cbf6:	cmp    bh,BYTE PTR ds:0x8e4fb21
  40cbfc:	xchg   ebp,eax
  40cbfd:	sbb    DWORD PTR ds:0xc6cba1e2,ebp
  40cc03:	jae    0x40cb8f
  40cc05:	loopne 0x40cbbb
  40cc07:	mov    ebp,0xfed522d1
  40cc0c:	ja     0x40cc79
  40cc0e:	(bad)  
  40cc0f:	mov    ah,0x5b
  40cc11:	std    
  40cc12:	xchg   esp,eax
  40cc13:	inc    ebx
  40cc14:	mov    esi,0x838e078a
  40cc19:	ds call 0xb639:0x4d352bba
  40cc21:	xchg   esp,eax
  40cc22:	(bad)  ss:[edi]
  40cc25:	pusha  
  40cc26:	mov    cl,0x8e
  40cc28:	add    ah,dh
  40cc2a:	gs cdq 
  40cc2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc2d:	je     0x40cc75
  40cc2f:	aad    0x61
  40cc31:	and    esi,ebp
  40cc33:	jnp    0x40cc04
  40cc35:	inc    esi
  40cc36:	inc    esp
  40cc37:	or     esp,DWORD PTR [edi+0x59982848]
  40cc3d:	sahf   
  40cc3e:	xchg   edx,eax
  40cc3f:	daa    
  40cc40:	cmp    dl,0xde
  40cc43:	lods   eax,DWORD PTR ds:[esi]
  40cc44:	add    DWORD PTR [edi-0x39],esi
  40cc47:	retf   0x769e
  40cc4a:	inc    esi
  40cc4b:	stos   DWORD PTR es:[edi],eax
  40cc4c:	mov    ch,0x47
  40cc4e:	jp     0x40cc62
  40cc50:	xchg   esp,eax
  40cc51:	add    DWORD PTR [edi+0x4212aef3],0x2b
  40cc58:	neg    ecx
  40cc5a:	mov    bh,0xf6
  40cc5c:	mov    DWORD PTR [ecx],eax
  40cc5e:	adc    cl,BYTE PTR [edi+0x146caf46]
  40cc64:	es lahf 
  40cc66:	mov    BYTE PTR [eax-0x60],al
  40cc69:	(bad)  
  40cc6a:	and    al,0x76
  40cc6c:	adc    al,BYTE PTR [ebx+ecx*1+0x2a883811]
  40cc73:	sbb    bl,BYTE PTR [eax+0x26]
  40cc76:	xchg   esp,eax
  40cc77:	push   es
  40cc78:	inc    ecx
  40cc79:	loopne 0x40ccf5
  40cc7b:	add    ebp,edx
  40cc7d:	icebp  
  40cc7e:	sbb    BYTE PTR [edi],ch
  40cc80:	(bad)  
  40cc81:	mov    WORD PTR [eax-0x11],?
  40cc84:	clc    
  40cc85:	idiv   BYTE PTR ds:0x3535e2b9
  40cc8b:	push   esp
  40cc8c:	outs   dx,DWORD PTR ds:[esi]
  40cc8d:	retf   0x95db
  40cc90:	aad    0x5e
  40cc92:	mov    ah,0xe3
  40cc94:	arpl   WORD PTR [eax],di
  40cc96:	push   ebp
  40cc97:	fsubr  QWORD PTR [edi+0x4e]
  40cc9a:	xchg   BYTE PTR [ecx],al
  40cc9c:	rcl    bh,0x35
  40cc9f:	lds    eax,FWORD PTR [esi]
  40cca1:	(bad)
  40cca5:	(bad)  
  40cca6:	pop    ebp
  40cca7:	jno    0x40cce9
  40cca9:	xor    al,cl
  40ccab:	test   al,0xc0
  40ccad:	inc    DWORD PTR [esi-0x27ac797c]
  40ccb3:	xor    al,0x53
  40ccb5:	mov    esi,0x22e71438
  40ccba:	addr16 jns 0x40cce5
  40ccbd:	sbb    esi,DWORD PTR [eax+0xe7be38]
  40ccc3:	sbb    BYTE PTR [eax+eiz*2+0xfb9ddbb],bl
  40ccca:	push   eax
  40cccb:	in     eax,dx
  40cccc:	test   eax,0x26a7136d
  40ccd1:	pop    eax
  40ccd2:	mov    edx,0x1e1cb26e
  40ccd7:	dec    ebx
  40ccd8:	mov    ecx,0x7c72d42a
  40ccdd:	cwde   
  40ccde:	or     eax,DWORD PTR [esi+esi*2]
  40cce1:	test   ebp,ecx
  40cce3:	adc    bl,cl
  40cce5:	dec    edx
  40cce6:	pop    ds
  40cce7:	adc    BYTE PTR [edx],ah
  40cce9:	dec    esp
  40ccea:	retf   0xf7c3
  40cced:	call   DWORD PTR [ebp-0x56]
  40ccf0:	popf   
  40ccf1:	jmp    0x40cd31
  40ccf3:	stc    
  40ccf4:	(bad)  
  40ccf5:	cld    
  40ccf6:	add    BYTE PTR [esi],ch
  40ccf8:	ret    
  40ccf9:	xor    BYTE PTR [edx+esi*2],cl
  40ccfc:	add    dl,al
  40ccfe:	push   eax
  40ccff:	adc    al,0x17
  40cd01:	js     0x40cd3a
  40cd03:	push   esp
  40cd04:	and    DWORD PTR [ebp-0x19],esi
  40cd07:	mov    dl,BYTE PTR [esi+0x5f]
  40cd0a:	iret   
  40cd0b:	aaa    
  40cd0c:	call   0x6058:0x9220757c
  40cd13:	mov    eax,ds:0x385c84ac
  40cd18:	into   
  40cd19:	adc    ecx,DWORD PTR [ecx-0x59ef067f]
  40cd1f:	addr16 in al,0x8c
  40cd22:	xchg   edx,eax
  40cd23:	pusha  
  40cd24:	sub    al,0x30
  40cd26:	sub    BYTE PTR [ebx+0x491ad1b],bl
  40cd2c:	dec    ebx
  40cd2d:	pop    ebx
  40cd2e:	jae    0x40cd11
  40cd30:	push   esi
  40cd31:	mov    eax,0xcad115e9
  40cd36:	sub    esp,DWORD PTR [ebp+0x1bedc062]
  40cd3c:	stos   BYTE PTR es:[edi],al
  40cd3d:	int    0x1a
  40cd3f:	sbb    al,0x0
  40cd41:	adc    BYTE PTR [edi],dh
  40cd43:	push   0x663b46f1
  40cd48:	imul   esp,DWORD PTR [ecx+0x53],0xffffff9f
  40cd4c:	push   0x747a590e
  40cd51:	sbb    ecx,DWORD PTR [ecx+0x7b]
  40cd54:	in     al,dx
  40cd55:	push   ecx
  40cd56:	xchg   esp,eax
  40cd57:	in     eax,dx
  40cd58:	cmp    al,0xe0
  40cd5a:	outs   dx,DWORD PTR ds:[esi]
  40cd5b:	std    
  40cd5c:	inc    BYTE PTR [ebp-0x7725d75]
  40cd62:	retf   
  40cd63:	aam    0xed
  40cd65:	mov    eax,ds:0xd62e5098
  40cd6a:	aas    
  40cd6b:	lock mov eax,ds:0x510b9f06
  40cd71:	mov    edx,es
  40cd73:	mov    ebx,0x2c9a7ae7
  40cd78:	popf   
  40cd79:	cmp    DWORD PTR [eax],ecx
  40cd7b:	cmp    eax,0xcf663867
  40cd80:	pusha  
  40cd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd82:	std    
  40cd83:	xor    DWORD PTR [esi+0x69d6cc3a],ebx
  40cd89:	clc    
  40cd8a:	sub    DWORD PTR [eax+0x3f],esi
  40cd8d:	aam    0x31
  40cd8f:	jl     0x40cdc3
  40cd91:	sahf   
  40cd92:	addr16 aam 0x7f
  40cd95:	pop    es
  40cd96:	push   esp
  40cd97:	push   0x47fef3e3
  40cd9c:	add    ah,BYTE PTR ds:0x198e3c90
  40cda2:	rcl    BYTE PTR [eax],cl
  40cda4:	je     0x40cd3f
  40cda6:	enter  0x59b6,0xd1
  40cdaa:	cld    
  40cdab:	jle    0x40cdfd
  40cdad:	xchg   edi,eax
  40cdae:	data16 xor al,0x29
  40cdb1:	xchg   edx,eax
  40cdb2:	std    
  40cdb3:	jp     0x40cdf9
  40cdb5:	push   ds
  40cdb6:	xor    BYTE PTR [ecx-0x43a81b0c],0x70
  40cdbd:	pop    ecx
  40cdbe:	pop    esp
  40cdbf:	adc    BYTE PTR cs:[eax],al
  40cdc2:	fmulp  st(4),st
  40cdc4:	outs   dx,BYTE PTR ds:[esi]
  40cdc5:	cli    
  40cdc6:	inc    eax
  40cdc7:	mov    ecx,0x7060b8f1
  40cdcc:	xor    ch,BYTE PTR [ebp+0x1ffc43a0]
  40cdd2:	repz xchg ebx,eax
  40cdd4:	mov    bl,0xa6
  40cdd6:	xchg   esi,eax
  40cdd7:	in     eax,dx
  40cdd8:	in     eax,0xa5
  40cdda:	xchg   ebx,eax
  40cddb:	push   edi
  40cddc:	mov    eax,ds:0x34e43dc9
  40cde1:	repz jmp 0xb5b665e6
  40cde7:	lods   eax,DWORD PTR ds:[esi]
  40cde8:	mov    eax,0xabf1949b
  40cded:	xchg   edi,eax
  40cdee:	xchg   ebp,eax
  40cdef:	repz adc dh,BYTE PTR [ebx+0x71]
  40cdf3:	or     DWORD PTR [ebx-0x24],edi
  40cdf6:	in     eax,dx
  40cdf7:	aas    
  40cdf8:	(bad)  
  40cdf9:	cmp    BYTE PTR [ecx+eiz*8],cl
  40cdfc:	mov    dl,BYTE PTR [eax]
  40cdfe:	nop
  40cdff:	fist   WORD PTR [ebx]
  40ce01:	jle    0x40ce37
  40ce03:	jnp    0x40cde3
  40ce05:	inc    esi
  40ce06:	jge    0x40ce63
  40ce08:	gs jp  0x40cddd
  40ce0b:	inc    ecx
  40ce0c:	es push eax
  40ce0e:	lods   eax,DWORD PTR ds:[esi]
  40ce0f:	or     eax,ebx
  40ce11:	sbb    al,0x6
  40ce13:	inc    ecx
  40ce14:	int    0x33
  40ce16:	adc    al,0xf9
  40ce18:	lds    ecx,FWORD PTR [edi-0x3b]
  40ce1b:	int    0x75
  40ce1d:	pop    edx
  40ce1e:	jne    0x40cdd2
  40ce20:	es call 0xee12a7b6
  40ce26:	sub    edi,DWORD PTR [edx+0x3]
  40ce29:	iret   
  40ce2a:	push   esi
  40ce2b:	inc    esi
  40ce2c:	push   esi
  40ce2d:	inc    ecx
  40ce2e:	repz cmp esi,edi
  40ce31:	add    eax,0x179b0b9b
  40ce36:	inc    esi
  40ce37:	xchg   ebx,eax
  40ce38:	inc    esp
  40ce39:	test   BYTE PTR [ebp+eiz*1+0x45],cl
  40ce3d:	cld    
  40ce3e:	sbb    BYTE PTR [ebp+esi*2+0x76c86fa8],bl
  40ce45:	retf   0x11e6
  40ce48:	pop    edi
  40ce49:	stos   DWORD PTR es:[edi],eax
  40ce4a:	nop
  40ce4b:	mov    al,0xa6
  40ce4d:	mov    esi,0xa507eebf
  40ce52:	push   esi
  40ce53:	pusha  
  40ce54:	cmc    
  40ce55:	push   edi
  40ce56:	mov    eax,0x2261b0fa
  40ce5b:	sbb    eax,0xea93641b
  40ce60:	mov    ah,0xa5
  40ce62:	cmp    BYTE PTR [ecx],0x68
  40ce65:	xchg   DWORD PTR [esi+0x51],ebx
  40ce68:	stos   BYTE PTR es:[edi],al
  40ce69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce6a:	mov    ds,ecx
  40ce6c:	adc    BYTE PTR [ecx-0x6a],ch
  40ce6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce70:	jbe    0x40cebd
  40ce72:	ror    DWORD PTR [eax+esi*2-0x1ecfb3ac],cl
  40ce79:	jno    0x40ce25
  40ce7b:	or     ebp,DWORD PTR [eax+0x47b2dbc9]
  40ce81:	add    eax,0x741ebfc0
  40ce86:	outs   dx,DWORD PTR ds:[esi]
  40ce87:	inc    esp
  40ce88:	lds    esp,FWORD PTR ds:0x752bf7e7
  40ce8e:	out    dx,eax
  40ce8f:	fwait
  40ce90:	in     al,0xa5
  40ce92:	ret    
  40ce93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce94:	retf   
  40ce95:	or     al,0x6d
  40ce97:	or     ch,BYTE PTR [edi+0x478caca8]
  40ce9d:	push   ebx
  40ce9e:	xchg   ah,cl
  40cea0:	or     BYTE PTR [ecx],bh
  40cea2:	sbb    BYTE PTR [edx],0x22
  40cea5:	(bad)  
  40cea6:	xchg   esp,eax
  40cea7:	fistp  QWORD PTR [edx]
  40cea9:	pop    eax
  40ceaa:	pop    ss
  40ceab:	inc    ebx
  40ceac:	ror    BYTE PTR [edi+0x4c401112],1
  40ceb2:	sbb    edx,edi
  40ceb4:	add    BYTE PTR [ebx+0x63],ch
  40ceb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceb8:	fwait
  40ceb9:	(bad)  
  40ceba:	sub    bl,BYTE PTR [eax]
  40cebc:	mov    ah,0x5f
  40cebe:	mov    ch,0x6a
  40cec0:	sub    BYTE PTR [ecx],cl
  40cec2:	cmp    DWORD PTR [eax+0x37],edx
  40cec5:	inc    ebx
  40cec6:	dec    ebp
  40cec7:	mov    bl,0x22
  40cec9:	add    ebp,DWORD PTR [eax-0x20]
  40cecc:	aas    
  40cecd:	mov    DWORD PTR [eax-0x6f08eccf],ebx
  40ced3:	in     eax,dx
  40ced4:	(bad)  
  40ced5:	dec    ecx
  40ced6:	test   DWORD PTR [eax],0xb8c3f980
  40cedc:	and    edx,DWORD PTR [eax+0x7d]
  40cedf:	mov    al,ds:0x4b6116ed
  40cee4:	std    
  40cee5:	and    al,0xed
  40cee7:	and    eax,0x83bcc550
  40ceec:	(bad)  [eax-0x56]
  40ceef:	push   edi
  40cef0:	mov    ebp,ss
  40cef2:	pop    esi
  40cef3:	imul   edx,DWORD PTR [ebp-0x3e2c54d],0xa
  40cefa:	pop    es
  40cefb:	fidiv  DWORD PTR [edx+0x45]
  40cefe:	push   es
  40ceff:	xor    BYTE PTR [edi-0x5b],bh
  40cf02:	repz pop ecx
  40cf04:	jae    0x40cf77
  40cf06:	xor    ebp,ebp
  40cf08:	jns    0x40cec8
  40cf0a:	dec    esi
  40cf0b:	inc    esp
  40cf0c:	mov    esp,0x58935ae6
  40cf11:	bound  ebp,QWORD PTR ds:0x774e9f2e
  40cf17:	fwait
  40cf18:	retf   0x477a
  40cf1b:	punpcklwd mm4,DWORD PTR [edi-0x159a8f27]
  40cf22:	mov    ebp,0x994af0b7
  40cf27:	push   esp
  40cf28:	push   edx
  40cf29:	mov    esi,0xa59e10d5
  40cf2e:	fs xor eax,0xda49c288
  40cf34:	mov    ebp,0x3614794a
  40cf39:	push   ds
  40cf3a:	or     al,0xa4
  40cf3c:	jmp    0xa1d5:0x6a2a8827
  40cf43:	rcr    DWORD PTR ds:0x4b2d02b7,0x75
  40cf4a:	sub    DWORD PTR [esi-0x3fd5104b],0xfffffff5
  40cf51:	shl    BYTE PTR [esi+0x57541c58],1
  40cf57:	adc    DWORD PTR [esi],edi
  40cf59:	and    dl,BYTE PTR [edx]
  40cf5b:	inc    esp
  40cf5c:	dec    eax
  40cf5d:	inc    esi
  40cf5e:	fpatan 
  40cf60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf61:	and    DWORD PTR [ebx],ebx
  40cf63:	push   ds
  40cf64:	fisttp WORD PTR [esi+0x77]
  40cf68:	add    eax,0xd470198a
  40cf6d:	sbb    esp,DWORD PTR [edi]
  40cf6f:	sub    bh,bl
  40cf71:	xlat   BYTE PTR ds:[ebx]
  40cf72:	mov    al,0xb4
  40cf74:	out    0xc2,eax
  40cf76:	pushf  
  40cf77:	jmp    0x40cf63
  40cf79:	fld    TBYTE PTR [ebx-0x6a]
  40cf7c:	call   0x9a5ede73
  40cf81:	fs xlat BYTE PTR gs:[ebx]
  40cf84:	cld    
  40cf85:	pop    ecx
  40cf86:	cld    
  40cf87:	popa   
  40cf88:	repz mov cl,BYTE PTR [edx-0x64]
  40cf8c:	test   eax,0xf58cb96b
  40cf91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf92:	sbb    esi,eax
  40cf94:	test   al,0x3e
  40cf96:	or     al,0xfb
  40cf98:	sub    DWORD PTR [edi-0x38],0x78
  40cf9c:	in     al,dx
  40cf9d:	mov    ?,WORD PTR [ecx-0x66]
  40cfa0:	xlat   BYTE PTR ds:[ebx]
  40cfa1:	inc    ebx
  40cfa2:	xchg   BYTE PTR [eax+eiz*8+0x9],dl
  40cfa6:	inc    edi
  40cfa7:	push   esi
  40cfa8:	add    bl,BYTE PTR [ecx+edi*2-0x38a16d44]
  40cfaf:	adc    al,0xfb
  40cfb1:	push   edi
  40cfb2:	and    bh,bh
  40cfb4:	fidivr WORD PTR [edi-0x7e09a251]
  40cfba:	pop    esp
  40cfbb:	xlat   BYTE PTR ds:[ebx]
  40cfbc:	outs   dx,BYTE PTR ds:[esi]
  40cfbd:	inc    ebp
  40cfbe:	lock fidiv WORD PTR ss:[ebx+0x3d]
  40cfc3:	jbe    0x40cfe6
  40cfc5:	pop    es
  40cfc6:	out    dx,al
  40cfc7:	push   0xd34b0e0
  40cfcc:	cmp    eax,0xc0fc196a
  40cfd1:	dec    eax
  40cfd2:	xchg   BYTE PTR [edi],bl
  40cfd4:	pop    ebx
  40cfd5:	xlat   BYTE PTR ds:[ebx]
  40cfd6:	repz mov ds:0x71019086,al
  40cfdc:	(bad)  
  40cfdd:	addr16 add al,0xa9
  40cfe0:	lods   eax,DWORD PTR ds:[esi]
  40cfe1:	loop   0x40d018
  40cfe3:	pushf  
  40cfe4:	sbb    esi,DWORD PTR [ebx-0x1e1c2105]
  40cfea:	popf   
  40cfeb:	mov    ch,BYTE PTR [ebx]
  40cfed:	and    BYTE PTR [ebx],bh
  40cfef:	shl    DWORD PTR [esi-0x1c7fd56],1
  40cff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cff6:	test   BYTE PTR [ecx-0x6],dh
  40cff9:	mov    ebx,0xfed5b9e2
  40cffe:	sub    esp,esi
  40d000:	and    eax,0x45cfa7be
  40d005:	imul   edi,edi,0x1f9bdfe0
  40d00b:	xor    edi,DWORD PTR [eax+0x4d]
  40d00e:	sbb    DWORD PTR [ecx],0x930c66b4
  40d014:	data16 clc 
  40d016:	and    DWORD PTR [esi-0x2b],eax
  40d019:	mov    al,0x5f
  40d01b:	pop    edi
  40d01c:	(bad)  
  40d01d:	imul   esp,DWORD PTR [edi+0x4bf08fe1],0x98a8d407
  40d027:	mov    bh,dl
  40d029:	leave  
  40d02a:	jge    0x40d06e
  40d02c:	inc    edx
  40d02d:	push   ecx
  40d02e:	lock sub dl,BYTE PTR [esi-0x4c61cd7e]
  40d035:	xchg   BYTE PTR [edi-0x6280b7fe],bl
  40d03b:	(bad)  
  40d03c:	fidiv  WORD PTR [esi-0x7477ba52]
  40d042:	xchg   edi,eax
  40d043:	cdq    
  40d044:	xor    bh,BYTE PTR [edi]
  40d046:	mov    ss,WORD PTR [di-0x3037]
  40d04b:	mov    ds:0x95fbc41c,eax
  40d050:	add    DWORD PTR [ecx-0x7e],ebp
  40d053:	and    ebx,DWORD PTR [esi+0x1cc5fa00]
  40d059:	sahf   
  40d05a:	aas    
  40d05b:	js     0x40d074
  40d05d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d05e:	push   cs
  40d05f:	in     al,0x5d
  40d061:	sti    
  40d062:	jecxz  0x40d00f
  40d064:	ins    BYTE PTR es:[edi],dx
  40d065:	cmp    BYTE PTR [ebx-0x6a],ch
  40d068:	rcl    ebx,1
  40d06a:	fld    DWORD PTR [edx]
  40d06c:	test   BYTE PTR ds:0xa6bfc536,ah
  40d072:	jp     0x40d08d
  40d074:	fs push 0xeb0471d0
  40d07a:	fs mov edx,0x9a1dff2
  40d080:	mov    ah,0xcf
  40d082:	cmp    bl,BYTE PTR [eax+0x7f9fd520]
  40d088:	aam    0xcb
  40d08a:	cmp    esi,DWORD PTR [eax+0x76]
  40d08d:	xchg   edi,eax
  40d08e:	ret    0x8aa6
  40d091:	sub    edx,eax
  40d093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d094:	push   es
  40d095:	cs xchg ebx,eax
  40d097:	pushf  
  40d098:	stos   BYTE PTR es:[edi],al
  40d099:	(bad)  
  40d09a:	cld    
  40d09b:	cld    
  40d09c:	inc    edx
  40d09d:	repnz adc esi,ebp
  40d0a0:	cmp    cl,BYTE PTR [ebx]
  40d0a2:	xor    eax,0x27818237
  40d0a7:	push   0xffffffe1
  40d0a9:	jge    0x40d039
  40d0ab:	xchg   esi,eax
  40d0ac:	add    al,0xcb
  40d0ae:	jmp    0x40d04f
  40d0b0:	aaa    
  40d0b1:	inc    edx
  40d0b2:	mov    cl,0x8d
  40d0b4:	fsub   DWORD PTR [edi+0x76fa0ed5]
  40d0ba:	push   0x1daa77e3
  40d0bf:	jle    0x40d122
  40d0c1:	xor    ebp,edi
  40d0c3:	adc    bh,BYTE PTR ds:0x2807758f
  40d0c9:	push   edx
  40d0ca:	pop    ds
  40d0cb:	or     edi,DWORD PTR [edx+ecx*8+0x12]
  40d0cf:	xchg   ecx,eax
  40d0d0:	pop    eax
  40d0d1:	mov    al,ds:0x2f04742c
  40d0d6:	loope  0x40d088
  40d0d8:	or     ebp,ecx
  40d0da:	pushf  
  40d0db:	jne    0x40d0df
  40d0dd:	sub    dl,BYTE PTR [edx+0x1458c05d]
  40d0e3:	into   
  40d0e4:	mov    eax,ds:0x79de3d15
  40d0e9:	add    bl,BYTE PTR [ebp-0x52]
  40d0ec:	sahf   
  40d0ed:	int    0x8c
  40d0ef:	outs   dx,BYTE PTR ds:[esi]
  40d0f0:	jae    0x40d0ba
  40d0f2:	mov    bh,0xba
  40d0f4:	pop    ebp
  40d0f5:	leave  
  40d0f6:	std    
  40d0f7:	out    0xdc,al
  40d0f9:	sub    bh,BYTE PTR [esi+0x12]
  40d0fc:	inc    ebp
  40d0fd:	(bad)  
  40d0fe:	(bad)  
  40d100:	fdivr  st(1),st
  40d102:	fwait
  40d103:	dec    esi
  40d104:	iret   
  40d105:	dec    edx
  40d106:	int    0xd1
  40d108:	arpl   WORD PTR [ecx+ebp*8],dx
  40d10b:	fcomp  QWORD PTR [edi]
  40d10d:	sar    BYTE PTR [edx-0x46015346],1
  40d113:	dec    eax
  40d114:	adc    BYTE PTR [edx+0x35],0xfb
  40d118:	mov    ebx,0xe83bd756
  40d11d:	call   0x5d511b5
  40d122:	or     DWORD PTR [esi+ecx*4+0x291f3f5],ebx
  40d129:	call   0xc1fc5a87
  40d12e:	aas    
  40d12f:	cmc    
  40d130:	hlt    
  40d131:	pop    ebp
  40d132:	jne    0x40d112
  40d134:	mov    eax,0x29ac1b5e
  40d139:	sub    DWORD PTR ds:[edx+0x6d],ebp
  40d13d:	push   ds
  40d13e:	mov    esi,0xf5ada0eb
  40d143:	lds    ecx,FWORD PTR [esi+0x5f]
  40d146:	pop    es
  40d147:	(bad)  [eax]
  40d149:	xchg   dh,ah
  40d14b:	mov    esi,0xdd6d25e6
  40d150:	fisttp WORD PTR ds:0x31949da6
  40d156:	xchg   BYTE PTR [esi],ah
  40d158:	popa   
  40d159:	jo     0x40d1bb
  40d15b:	inc    edx
  40d15c:	repz push eax
  40d15e:	retf   
  40d15f:	lahf   
  40d160:	sub    DWORD PTR ds:0x27570841,esp
  40d166:	inc    edi
  40d167:	jmp    0x7674:0x8f84213d
  40d16e:	inc    ebp
  40d16f:	addr16 xchg esp,eax
  40d171:	aaa    
  40d172:	xchg   ebp,eax
  40d173:	sbb    DWORD PTR [eax+0x76],0xffffffc0
  40d177:	sub    BYTE PTR [esi-0x38],bl
  40d17a:	pop    ss
  40d17b:	push   0xfffffff5
  40d17d:	(bad)  
  40d17e:	sub    eax,0x16426c04
  40d183:	int    0x8e
  40d185:	xchg   edx,eax
  40d186:	sub    eax,0x1fc354a0
  40d18b:	adc    dh,BYTE PTR [esi]
  40d18d:	push   edi
  40d18e:	(bad)  
  40d18f:	std    
  40d190:	xchg   dl,al
  40d192:	xor    al,0xd6
  40d194:	cmc    
  40d195:	fidivr WORD PTR [edx]
  40d197:	(bad)  
  40d198:	data16 ja 0x40d14b
  40d19b:	jbe    0x40d153
  40d19d:	(bad)  
  40d19e:	fcos   
  40d1a0:	mov    eax,0x827cf36f
  40d1a5:	in     eax,dx
  40d1a6:	popf   
  40d1a7:	repnz repnz sub BYTE PTR [esp+edx*4-0x3992ba56],bl
  40d1b0:	data16 (bad) 
  40d1b2:	shl    DWORD PTR [ecx],cl
  40d1b4:	sahf   
  40d1b5:	add    eax,0xbf8b0094
  40d1ba:	jle    0x40d1eb
  40d1bc:	hlt    
  40d1bd:	retf   0xacf
  40d1c0:	pop    edx
  40d1c1:	je     0x40d1e8
  40d1c3:	fst    QWORD PTR [eax+0x496c361c]
  40d1c9:	int3   
  40d1ca:	int3   
  40d1cb:	sub    DWORD PTR [eax-0x315e409f],eax
  40d1d1:	(bad)  
  40d1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1d3:	adc    cl,bh
  40d1d5:	jge    0x40d15e
  40d1d7:	push   edi
  40d1d8:	push   0xef36e27d
  40d1dd:	test   BYTE PTR [ebx+0x79c7b56c],bh
  40d1e3:	ds hlt 
  40d1e5:	inc    ecx
  40d1e6:	push   ebp
  40d1e7:	push   esi
  40d1e8:	xor    eax,0x4d849b65
  40d1ed:	imul   ebx,DWORD PTR [ebx+0x2c156420],0xffffffa1
  40d1f4:	ins    DWORD PTR es:[edi],dx
  40d1f5:	mov    esi,0x55cd26bf
  40d1fa:	xchg   ebp,ecx
  40d1fc:	jo     0x40d1af
  40d1fe:	push   esp
  40d1ff:	jmp    0xc14f:0x849655fc
  40d206:	mov    ?,WORD PTR [ecx+0x78]
  40d209:	push   0xffffff98
  40d20b:	pushf  
  40d20c:	adc    dl,BYTE PTR [eax-0xcae8da3]
  40d212:	je     0x40d198
  40d214:	stos   BYTE PTR es:[edi],al
  40d215:	imul   edx,esp,0xfa8fa12b
  40d21b:	scas   al,BYTE PTR es:[edi]
  40d21c:	xchg   esi,eax
  40d21d:	cwde   
  40d21e:	xor    dh,dh
  40d220:	leave  
  40d221:	adc    DWORD PTR [ebx+ecx*1-0x64],esi
  40d225:	ds sub esi,ecx
  40d228:	jae    0x40d23a
  40d22a:	outs   dx,BYTE PTR ds:[esi]
  40d22b:	std    
  40d22c:	mov    dl,0xd0
  40d22e:	fmulp  st(7),st
  40d230:	sbb    al,0xd2
  40d232:	dec    ebp
  40d233:	mov    al,ds:0xec525508
  40d238:	enter  0x86d5,0xda
  40d23c:	fdiv   DWORD PTR [edi-0x35e0dc62]
  40d242:	dec    eax
  40d243:	sti    
  40d244:	into   
  40d245:	push   edx
  40d246:	popa   
  40d247:	mov    al,ds:0x303f116e
  40d24c:	fsubr  QWORD PTR [ebp+0x298bfe9d]
  40d252:	cld    
  40d253:	int    0x6b
  40d255:	in     eax,0x59
  40d257:	pusha  
  40d258:	and    ecx,DWORD PTR [ebx+0x2b]
  40d25b:	pop    ds
  40d25c:	cmp    esp,DWORD PTR [ecx-0x4]
  40d25f:	push   cs
  40d260:	fsubrp st(0),st
  40d262:	int3   
  40d263:	mov    cl,0x64
  40d265:	dec    ebx
  40d266:	jmp    0x40d29d
  40d268:	sti    
  40d269:	jne    0x40d292
  40d26b:	rol    DWORD PTR [ebx],cl
  40d26d:	push   edx
  40d26e:	mov    ebx,0x3e7512d6
  40d273:	stos   BYTE PTR es:[edi],al
  40d274:	rcl    edi,1
  40d276:	pop    ebp
  40d277:	cmp    DWORD PTR [esi],edx
  40d279:	push   esp
  40d27a:	scas   al,BYTE PTR es:[edi]
  40d27b:	call   0x7fd0b49d
  40d280:	jecxz  0x40d218
  40d282:	mov    ebp,0x9d8bea4
  40d287:	adc    ecx,DWORD PTR [edx]
  40d289:	ror    BYTE PTR [eax],0xd3
  40d28c:	sbb    esp,DWORD PTR [ebx]
  40d28e:	dec    ebx
  40d28f:	and    cl,dh
  40d291:	sbb    al,0x9c
  40d293:	mov    dh,0x25
  40d295:	test   BYTE PTR [ecx],bh
  40d297:	xchg   ecx,eax
  40d298:	test   al,0xc3
  40d29a:	lods   eax,DWORD PTR ds:[esi]
  40d29b:	dec    ebx
  40d29c:	jmp    0x42931352
  40d2a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a2:	or     DWORD PTR [edx-0x6d],eax
  40d2a5:	or     eax,0x93bd828e
  40d2aa:	or     eax,0x4ed81fc2
  40d2af:	clc    
  40d2b0:	(bad)  
  40d2b1:	pop    esi
  40d2b2:	mov    al,ds:0x43c2d9dc
  40d2b7:	stos   BYTE PTR es:[edi],al
  40d2b8:	scas   eax,DWORD PTR es:[edi]
  40d2b9:	loopne 0x40d32d
  40d2bb:	dec    esp
  40d2bc:	call   0xbb6b88d5
  40d2c1:	dec    ebx
  40d2c2:	out    dx,al
  40d2c3:	ret    0xdd25
  40d2c6:	and    BYTE PTR [edx-0x33],al
  40d2c9:	jae    0x40d2f7
  40d2cb:	das    
  40d2cc:	xchg   esi,eax
  40d2cd:	in     al,0x7a
  40d2cf:	mov    WORD PTR ds:0xfca7933b,?
  40d2d5:	mov    cl,0x6
  40d2d7:	jle    0x40d2e6
  40d2d9:	push   ss
  40d2da:	(bad)  
  40d2db:	mov    bh,0x32
  40d2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2de:	iret   
  40d2df:	push   0x62ff2930
  40d2e4:	inc    edi
  40d2e5:	std    
  40d2e6:	out    dx,eax
  40d2e7:	mov    cl,0xe9
  40d2e9:	das    
  40d2ea:	sbb    al,0xe2
  40d2ec:	std    
  40d2ed:	sub    ebx,DWORD PTR [esi]
  40d2ef:	loop   0x40d2d8
  40d2f1:	dec    eax
  40d2f2:	lods   al,BYTE PTR ds:[esi]
  40d2f3:	loop   0x40d373
  40d2f5:	dec    ecx
  40d2f6:	call   0x5d28:0xa6ef6820
  40d2fd:	adc    dh,BYTE PTR [ecx+0x32]
  40d300:	ins    DWORD PTR es:[edi],dx
  40d301:	mov    edx,0xeeebd040
  40d306:	mov    esp,0x81c735a0
  40d30b:	scas   eax,DWORD PTR es:[edi]
  40d30c:	and    DWORD PTR [edi-0x49],esi
  40d30f:	enter  0x721f,0xd2
  40d313:	mov    ebx,0xec7a3643
  40d318:	cmp    bh,dh
  40d31a:	adc    bh,cl
  40d31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d31d:	mov    eax,ds:0x6ba8ebe7
  40d322:	icebp  
  40d323:	fdivr  st(6),st
  40d325:	or     BYTE PTR [ebp+ebp*4-0x1b],bl
  40d329:	out    0xfe,al
  40d32b:	repnz (bad) 
  40d32d:	outs   dx,DWORD PTR ds:[esi]
  40d32e:	jnp    0x40d38f
  40d330:	jnp    0x40d2c9
  40d332:	adc    eax,edi
  40d334:	lods   al,BYTE PTR ds:[esi]
  40d335:	dec    ecx
  40d336:	adc    DWORD PTR [ebp+0x3b],edx
  40d339:	mov    edx,0x5bd71b86
  40d33e:	rcr    BYTE PTR [ebp+0x7524a13d],0x6b
  40d345:	mov    bh,0xd1
  40d347:	adc    dl,BYTE PTR [edx]
  40d349:	imul   esp,DWORD PTR [ebp-0x53],0xe67e3375
  40d350:	mov    eax,ds:0x18bd48ab
  40d355:	mov    esp,eax
  40d357:	push   edx
  40d358:	jns    0x40d308
  40d35a:	fimul  DWORD PTR [esi-0x2e]
  40d35d:	aas    
  40d35e:	xchg   ebx,eax
  40d35f:	adc    DWORD PTR [bx+di],esp
  40d362:	(bad)  
  40d363:	clc    
  40d364:	ja     0x40d349
  40d366:	or     eax,0x8fb7f06e
  40d36b:	add    al,0x90
  40d36d:	ds dec ebx
  40d36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d370:	aas    
  40d371:	xchg   ebp,eax
  40d372:	jp     0x40d33f
  40d374:	enter  0x48b1,0x50
  40d378:	scas   eax,DWORD PTR es:[edi]
  40d379:	cmc    
  40d37a:	xchg   DWORD PTR [eax+0x2c],edx
  40d37d:	dec    ebp
  40d37e:	repnz sub al,0x62
  40d381:	mov    ebp,0xba4e6af4
  40d386:	iret   
  40d387:	mov    ch,0x5c
  40d389:	imul   ecx,DWORD PTR [edi-0x10],0x1e
  40d38d:	jmp    0x40d3ce
  40d38f:	dec    edx
  40d390:	test   BYTE PTR [ecx],bh
  40d392:	mov    esi,edx
  40d394:	jo     0x40d324
  40d396:	les    esi,FWORD PTR [edx+edi*8]
  40d399:	inc    esi
  40d39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d39b:	mov    ds:0x3e8bca5d,eax
  40d3a0:	rcl    DWORD PTR [ebp+0x1fb8029b],cl
  40d3a6:	mov    bh,0xc4
  40d3a8:	adc    ch,BYTE PTR [ecx+0x5a5e7293]
  40d3ae:	inc    eax
  40d3af:	fdivr  st(5),st
  40d3b1:	sub    eax,0x5
  40d3b4:	sbb    ebp,DWORD PTR [ecx-0x76]
  40d3b7:	retf   
  40d3b8:	inc    eax
  40d3b9:	in     eax,0xb8
  40d3bb:	loopne 0x40d342
  40d3bd:	inc    esp
  40d3be:	cmp    al,0x31
  40d3c0:	cmp    al,0x8c
  40d3c2:	dec    ecx
  40d3c3:	sbb    DWORD PTR [edi+0x1844d235],ebx
  40d3c9:	fild   DWORD PTR [eax]
  40d3cb:	scas   al,BYTE PTR es:[edi]
  40d3cc:	rcl    edi,1
  40d3ce:	dec    esp
  40d3cf:	in     al,dx
  40d3d0:	repz xor al,0x71
  40d3d3:	iret   
  40d3d4:	fldenv [edx-0xf9552b6]
  40d3da:	outs   dx,BYTE PTR ds:[esi]
  40d3db:	sbb    esp,DWORD PTR [ecx]
  40d3dd:	fimul  DWORD PTR [ecx+0x629cf8f4]
  40d3e3:	and    dh,BYTE PTR [esp+eax*2-0x62]
  40d3e7:	sub    BYTE PTR [ecx+0x63],0x11
  40d3eb:	rcr    dl,cl
  40d3ed:	mov    WORD PTR [edx],es
  40d3ef:	fsubrp st(3),st
  40d3f1:	mov    al,0x96
  40d3f3:	scas   eax,DWORD PTR es:[edi]
  40d3f4:	les    esp,FWORD PTR [edi+eiz*4]
  40d3f7:	sub    al,BYTE PTR [ebx]
  40d3f9:	imul   edx,DWORD PTR [ebp-0x6d3b29a4],0x1fc3a9cb
  40d403:	xchg   edx,eax
  40d404:	fwait
  40d405:	mov    cs,ebx
  40d407:	ret    
  40d408:	cmc    
  40d409:	dec    ebx
  40d40a:	enter  0xe193,0xef
  40d40e:	xchg   ecx,eax
  40d40f:	jle    0x40d3b9
  40d411:	sar    BYTE PTR [edi],cl
  40d413:	pop    eax
  40d414:	shl    BYTE PTR [ebx-0x79],1
  40d417:	mov    eax,DWORD PTR [edx]
  40d419:	test   ch,0x59
  40d41c:	inc    edx
  40d41d:	adc    BYTE PTR [eax-0xae72ec6],ah
  40d423:	lahf   
  40d424:	stos   BYTE PTR es:[edi],al
  40d425:	mov    edi,0x5c399383
  40d42a:	cmp    al,0xa6
  40d42c:	imul   ebx,DWORD PTR [edx+0x1e72aef2],0xffffffa8
  40d433:	inc    ecx
  40d434:	lock fcomp QWORD PTR [esi+0x7fa03f38]
  40d43b:	mov    esp,0xc837596e
  40d440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d441:	gs jbe 0x40d4ac
  40d444:	mov    dl,0x18
  40d446:	in     al,0xd7
  40d448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d449:	mov    ds:0x779e6257,al
  40d44e:	scas   eax,DWORD PTR es:[edi]
  40d44f:	cli    
  40d450:	data16 cmp BYTE PTR [edi-0x61df6f92],0x5d
  40d458:	loop   0x40d430
  40d45a:	mov    ds:0xc80d943f,eax
  40d45f:	out    dx,al
  40d460:	xchg   ecx,eax
  40d461:	outs   dx,BYTE PTR ds:[esi]
  40d462:	jl     0x40d461
  40d464:	add    al,0x19
  40d466:	and    DWORD PTR [ebx+edi*1],esi
  40d469:	ins    BYTE PTR es:[edi],dx
  40d46a:	(bad)  
  40d46b:	xchg   ecx,eax
  40d46c:	push   ds
  40d46d:	daa    
  40d46e:	lds    ebp,FWORD PTR [ebp+0x6a210614]
  40d474:	jecxz  0x40d478
  40d476:	adc    ebx,DWORD PTR [edi]
  40d478:	pop    es
  40d479:	pushf  
  40d47a:	mov    dl,0xab
  40d47c:	xor    DWORD PTR [edx-0x36a00582],edi
  40d482:	in     eax,0x1a
  40d484:	sub    al,0xb0
  40d486:	push   cs
  40d487:	cli    
  40d488:	xchg   BYTE PTR [esi+0x17],cl
  40d48b:	mov    bl,0x4f
  40d48d:	xor    ebx,DWORD PTR [edi]
  40d48f:	lea    esi,[ebp+0x59]
  40d492:	mov    ch,0x78
  40d494:	leave  
  40d495:	xor    edx,DWORD PTR [ebp+0x6b287363]
  40d49b:	cwde   
  40d49c:	xchg   edi,eax
  40d49d:	push   ebp
  40d49e:	stos   DWORD PTR es:[edi],eax
  40d49f:	add    BYTE PTR [eax+ebx*4],0x82
  40d4a3:	es (bad) 
  40d4a5:	(bad)  
  40d4a6:	xchg   ecx,eax
  40d4a7:	ret    
  40d4a8:	in     eax,dx
  40d4a9:	and    bl,BYTE PTR cs:[ebp+0x34]
  40d4ad:	dec    eax
  40d4ae:	jmp    0x40d4b7
  40d4b0:	ins    BYTE PTR es:[edi],dx
  40d4b1:	les    edx,FWORD PTR [esi+0x68]
  40d4b4:	test   BYTE PTR [ebx],dl
  40d4b6:	dec    edx
  40d4b7:	cld    
  40d4b8:	rol    edi,1
  40d4ba:	fdiv   QWORD PTR [esi+0x7b]
  40d4bd:	idiv   DWORD PTR [edi-0x6488f294]
  40d4c3:	sbb    al,cl
  40d4c5:	js     0x40d545
  40d4c7:	pop    ebx
  40d4c8:	jle    0x40d53e
  40d4ca:	fidivr WORD PTR [ecx-0x585668fc]
  40d4d0:	xchg   ebx,eax
  40d4d1:	mov    ?,ecx
  40d4d3:	mov    bl,0x2e
  40d4d5:	stos   DWORD PTR es:[edi],eax
  40d4d6:	popa   
  40d4d7:	imul   ecx,DWORD PTR [ecx+ebp*1],0xffffffcf
  40d4db:	push   ss
  40d4dc:	or     DWORD PTR [edi+0x1b0351e0],0x64
  40d4e3:	or     ebx,DWORD PTR [edi+edx*8-0x7a1a0f15]
  40d4ea:	pop    ebx
  40d4eb:	xchg   BYTE PTR [ebx],dl
  40d4ed:	icebp  
  40d4ee:	les    ebx,FWORD PTR [esp+eax*1+0x39]
  40d4f2:	clc    
  40d4f3:	dec    esi
  40d4f4:	mov    esi,0x3041bc38
  40d4f9:	mov    eax,ds:0xa9363b0f
  40d4fe:	leave  
  40d4ff:	push   edi
  40d500:	pop    es
  40d501:	sub    edi,edi
  40d503:	xchg   edi,eax
  40d504:	aas    
  40d505:	xlat   BYTE PTR ds:[ebx]
  40d506:	jbe    0x40d577
  40d508:	xlat   BYTE PTR ds:[ebx]
  40d509:	lock fbstp TBYTE PTR [eax+0x18]
  40d50d:	in     al,0x1a
  40d50f:	repnz mov dl,0xc0
  40d512:	sti    
  40d513:	(bad)  
  40d515:	push   esi
  40d516:	js     0x40d4ea
  40d518:	xchg   edx,eax
  40d519:	and    DWORD PTR [ecx-0x4eb239ca],esi
  40d51f:	jns    0x40d591
  40d521:	adc    dh,BYTE PTR [edx]
  40d523:	clc    
  40d524:	pop    ss
  40d525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d526:	js     0x40d529
  40d528:	mov    ah,0xce
  40d52a:	jb     0x40d506
  40d52c:	lea    edx,[edi+0x5df16648]
  40d532:	test   al,0xb9
  40d534:	pop    ebx
  40d535:	inc    edi
  40d536:	dec    edi
  40d537:	daa    
  40d538:	pop    ds
  40d539:	in     al,0xce
  40d53b:	add    DWORD PTR [ecx],ebp
  40d53d:	mov    ds:0xde9003a5,al
  40d542:	pop    edx
  40d543:	dec    esp
  40d544:	and    cl,BYTE PTR [edx]
  40d546:	popa   
  40d547:	das    
  40d548:	fisttp DWORD PTR [esi+eax*8-0x69]
  40d54c:	inc    esi
  40d54d:	aas    
  40d54e:	int    0x28
  40d550:	test   BYTE PTR [edi],ah
  40d552:	add    DWORD PTR [eax],ebx
  40d554:	repnz and DWORD PTR ds:0x90d205d7,edx
  40d55b:	dec    esi
  40d55c:	and    bl,BYTE PTR [edx-0x20]
  40d55f:	add    DWORD PTR [ebx-0x75],edi
  40d562:	jg     0x40d5b0
  40d564:	out    dx,eax
  40d565:	aas    
  40d566:	sbb    al,0x5e
  40d568:	in     al,0xfe
  40d56a:	fisttp WORD PTR [esi]
  40d56c:	fwait
  40d56d:	cli    
  40d56e:	aaa    
  40d56f:	push   eax
  40d570:	add    DWORD PTR [ebx+0xa8744d],0x40
  40d577:	pop    ebx
  40d578:	out    dx,eax
  40d579:	in     al,0xe1
  40d57b:	jno    0x40d58b
  40d57d:	sbb    ebp,DWORD PTR [ecx]
  40d57f:	mov    BYTE PTR [ebp-0x1],0x79
  40d583:	adc    ecx,0x7537
  40d589:	lea    eax,[ebp-0x1]
  40d58c:	adc    DWORD PTR ds:0x42a19b,edx
  40d592:	mov    DWORD PTR [ebp-0xc],eax
  40d595:	mov    al,BYTE PTR [ebp-0x1]
  40d598:	sbb    ecx,DWORD PTR ds:0x42a173
  40d59e:	mov    ecx,DWORD PTR [ebp-0xc]
  40d5a1:	xor    al,0x7b
  40d5a3:	dec    al
  40d5a5:	add    DWORD PTR ds:0x42a147,0x42a177
  40d5af:	mov    BYTE PTR [ecx],al
  40d5b1:	dec    ecx
  40d5b2:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40d5b9:	push   ebx
  40d5ba:	mov    eax,ds:0x42a227
  40d5bf:	xor    ecx,ecx
  40d5c1:	xor    ecx,DWORD PTR ds:0x42a25f
  40d5c7:	sub    ecx,eax
  40d5c9:	sub    eax,DWORD PTR [eax+ecx*1]
  40d5cc:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  40d5d3:	and    DWORD PTR ds:0x42a1b7,0x0
  40d5dd:	jmp    0x40d5ef
  40d5e2:	mov    ecx,DWORD PTR ds:0x42a1b7
  40d5e8:	inc    ecx
  40d5e9:	mov    DWORD PTR ds:0x42a1b7,ecx
  40d5ef:	cmp    DWORD PTR ds:0x42a1b7,0x1e
  40d5f6:	jae    0x40d623
  40d5fc:	cmp    DWORD PTR ds:0x42a1b7,0x27
  40d603:	ja     0x40d623
  40d609:	jmp    0x40d61e
  40d60e:	push   0x2919
  40d613:	push   0x5f54
  40d618:	call   DWORD PTR ds:0x42a2c3
  40d61e:	jmp    0x40d5e2
  40d623:	mov    ecx,DWORD PTR [ebp-0x18]
  40d626:	xor    DWORD PTR ds:0x42a14b,ebx
  40d62c:	push   esi
  40d62d:	and    DWORD PTR ds:0x42a147,0x0
  40d637:	jmp    0x40d647
  40d63c:	mov    eax,ds:0x42a147
  40d641:	inc    eax
  40d642:	mov    ds:0x42a147,eax
  40d647:	cmp    DWORD PTR ds:0x42a147,0x19
  40d64e:	jae    0x40d679
  40d654:	cmp    DWORD PTR ds:0x42a147,0x22
  40d65b:	jbe    0x40d679
  40d661:	jmp    0x40d674
  40d666:	push   0x61d1
  40d66b:	push   DWORD PTR [ebp-0x18]
  40d66e:	call   DWORD PTR ds:0x42a2c7
  40d674:	jmp    0x40d63c
  40d679:	mov    eax,0x75108a8
  40d67e:	sub    esi,DWORD PTR ds:0x42a1ab
  40d684:	xor    ecx,eax
  40d686:	mov    esi,0x3272ef
  40d68b:	push   edi
  40d68c:	sbb    DWORD PTR ds:0x42a1cb,0x42a1c7
  40d696:	add    ecx,esi
  40d698:	mov    DWORD PTR ds:0x42a1bf,0x6562
  40d6a2:	jmp    0x40d6b2
  40d6a7:	mov    dl,BYTE PTR [ebp-0x1]
  40d6aa:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40d6b1:	inc    ecx
  40d6b2:	mov    DWORD PTR ds:0x42a1af,0x1651
  40d6bc:	cmp    ecx,0x40
  40d6bf:	jb     0x40d6a7
  40d6c5:	mov    DWORD PTR ds:0x42a19f,0x1c
  40d6cf:	cmp    DWORD PTR ds:0x42a19f,0x0
  40d6d6:	je     0x40d72f
  40d6dc:	cmp    DWORD PTR ds:0x42a19f,0x5
  40d6e3:	jb     0x40d72f
  40d6e9:	jmp    0x40d703
  40d6ee:	push   0x2a2f
  40d6f3:	push   0x42a1ab
  40d6f8:	push   0x400000
  40d6fd:	call   DWORD PTR ds:0x42a2cf
  40d703:	cmp    DWORD PTR ds:0x42a19f,0x6
  40d70a:	jne    0x40d71d
  40d710:	mov    edx,DWORD PTR ds:0x42a19f
  40d716:	dec    edx
  40d717:	mov    DWORD PTR ds:0x42a19f,edx
  40d71d:	mov    edx,DWORD PTR ds:0x42a19f
  40d723:	dec    edx
  40d724:	mov    DWORD PTR ds:0x42a19f,edx
  40d72a:	jmp    0x40d6cf
  40d72f:	mov    edx,DWORD PTR [ebp-0x18]
  40d732:	mov    DWORD PTR ds:0x42a17b,0x4b1
  40d73c:	xor    edx,eax
  40d73e:	adc    DWORD PTR ds:0x42a19b,0x42a1cf
  40d748:	add    edx,esi
  40d74a:	mov    DWORD PTR ds:0x42a1ab,0x5d5c
  40d754:	jmp    0x40fb6b
  40d759:	mov    edi,DWORD PTR [ebp+0x8]
  40d75c:	xor    DWORD PTR ds:0x42a167,0x6495
  40d766:	mov    ecx,0x8a96
  40d76b:	and    DWORD PTR ds:0x42a133,0x42a1a7
  40d775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40d77a:	sbb    DWORD PTR ds:0x42a17b,0x2976
  40d784:	mov    edi,0x3b59
  40d789:	xor    DWORD PTR ds:0x42a143,0x42a187
  40d793:	add    cx,di
  40d796:	movzx  ecx,cx
  40d799:	sbb    DWORD PTR ds:0x42a193,0x4902
  40d7a3:	mov    DWORD PTR [ebp-0xc],ecx
  40d7a6:	xor    DWORD PTR ds:0x42a167,edx
  40d7ac:	jmp    0x40fb31
  40d7b1:	popa   
  40d7b2:	sbb    DWORD PTR [edi],0x5b849f06
  40d7b8:	test   DWORD PTR [esp+eiz*4],ebx
  40d7bb:	push   esp
  40d7bc:	pop    esi
  40d7bd:	iret   
  40d7be:	aam    0x9e
  40d7c0:	ret    0xcace
  40d7c3:	jp     0x40d83f
  40d7c5:	adc    bl,BYTE PTR [edi+0x7a]
  40d7c8:	jp     0x40d7ab
  40d7ca:	ret    
  40d7cb:	push   esi
  40d7cc:	mov    ebp,0x15aefed9
  40d7d1:	mov    esi,0xde1ce9c8
  40d7d6:	xchg   ebx,eax
  40d7d7:	call   0xd09f7251
  40d7dc:	cmp    eax,DWORD PTR [ebx+0x20162679]
  40d7e2:	ins    BYTE PTR es:[edi],dx
  40d7e3:	sar    DWORD PTR [eax+0x45689e19],cl
  40d7e9:	ins    DWORD PTR es:[edi],dx
  40d7ea:	and    eax,0x192267b6
  40d7ef:	cmp    ebp,DWORD PTR [ebx+0x36bf4706]
  40d7f5:	bnd jno 0x40d839
  40d7f8:	and    al,cl
  40d7fa:	push   ss
  40d7fb:	sbb    eax,0xf7758927
  40d800:	bsf    edx,DWORD PTR [edi]
  40d803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d804:	in     eax,dx
  40d805:	pop    edx
  40d806:	stos   DWORD PTR es:[edi],eax
  40d807:	test   eax,0x9f097111
  40d80c:	loop   0x40d7e8
  40d80e:	inc    ecx
  40d80f:	fwait
  40d810:	popf   
  40d811:	es inc esp
  40d813:	or     eax,0xaf7f71cd
  40d818:	cdq    
  40d819:	or     BYTE PTR [eax-0x59b07e02],dl
  40d81f:	or     ecx,DWORD PTR [eax]
  40d821:	not    eax
  40d823:	mov    edx,0x3c74f0f1
  40d828:	xlat   BYTE PTR ds:[ebx]
  40d829:	push   esp
  40d82a:	ins    DWORD PTR es:[edi],dx
  40d82b:	lods   eax,DWORD PTR ds:[esi]
  40d82c:	inc    esp
  40d82d:	mov    ah,BYTE PTR [edi+edi*1+0x7251d35d]
  40d834:	into   
  40d835:	dec    eax
  40d836:	xchg   esi,eax
  40d837:	pop    ecx
  40d838:	jae    0x40d7d2
  40d83a:	dec    ebx
  40d83b:	mov    edx,0x33f306a1
  40d840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d841:	xchg   esp,eax
  40d842:	adc    eax,0xbd549257
  40d847:	adc    ch,BYTE PTR [ebx]
  40d849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d84a:	xchg   ebp,eax
  40d84b:	cmp    bl,BYTE PTR [eax+0x4d268267]
  40d851:	adc    dl,ah
  40d853:	out    dx,eax
  40d854:	inc    edx
  40d855:	push   0xffffff91
  40d857:	push   cs
  40d858:	aam    0xc0
  40d85a:	mov    ds:0x4320ff89,eax
  40d85f:	jno    0x40d8af
  40d861:	fdiv   st(4),st
  40d863:	add    DWORD PTR [ebx],ebx
  40d865:	inc    edi
  40d866:	int    0xc5
  40d868:	repnz dec ecx
  40d86a:	xor    eax,0x8cfd588c
  40d86f:	or     BYTE PTR [edi+esi*1],dh
  40d872:	jne    0x40d8da
  40d874:	jmp    0x40d7f7
  40d876:	mov    ds:0x6188bca5,al
  40d87b:	int    0xd0
  40d87d:	ins    DWORD PTR es:[edi],dx
  40d87e:	push   ebp
  40d87f:	popa   
  40d880:	ins    DWORD PTR es:[edi],dx
  40d881:	sub    DWORD PTR [ecx],eax
  40d883:	sbb    esi,ecx
  40d885:	xchg   ebx,eax
  40d886:	loope  0x40d82c
  40d888:	fwait
  40d889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d88a:	adc    eax,0x3f0f3f08
  40d88f:	add    BYTE PTR [ebp+0x22d88621],0x7c
  40d896:	int3   
  40d897:	icebp  
  40d898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d899:	inc    ecx
  40d89a:	mov    eax,0xb5bfaf10
  40d89f:	xlat   BYTE PTR ds:[ebx]
  40d8a0:	mov    bl,0xc4
  40d8a2:	jmp    0x5350:0x8a327250
  40d8a9:	scas   al,BYTE PTR es:[edi]
  40d8aa:	jnp    0x40d894
  40d8ac:	jno    0x40d830
  40d8ae:	push   cs
  40d8af:	xchg   ebp,eax
  40d8b0:	mov    ch,0x70
  40d8b2:	pop    edi
  40d8b3:	mov    esi,esp
  40d8b5:	sub    eax,0x885b4e6
  40d8ba:	fnstsw WORD PTR [eax]
  40d8bc:	mov    edi,0x231e97e7
  40d8c1:	stos   BYTE PTR es:[edi],al
  40d8c2:	and    eax,0x416aaeb1
  40d8c7:	imul   edx,DWORD PTR [ecx+ebp*4+0x640fea8c],0xb1700670
  40d8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8d3:	adc    eax,0xb6d9d92c
  40d8d8:	ror    BYTE PTR [ebp+0x51],1
  40d8db:	sub    eax,0xa3d0fa27
  40d8e0:	jg     0x40d95c
  40d8e2:	(bad)
  40d8e5:	out    dx,al
  40d8e6:	scas   eax,DWORD PTR es:[edi]
  40d8e7:	pop    ss
  40d8e8:	stos   DWORD PTR es:[edi],eax
  40d8e9:	mov    dl,0x2a
  40d8eb:	sbb    ecx,DWORD PTR [ebx+0x79]
  40d8ee:	idiv   DWORD PTR [ecx]
  40d8f0:	xor    al,0xcf
  40d8f2:	pop    edx
  40d8f3:	push   0x19f35268
  40d8f8:	into   
  40d8f9:	(bad)  
  40d8fa:	cmp    BYTE PTR [edi],ah
  40d8fc:	or     eax,0x9dc1c0e1
  40d901:	mov    ecx,0x4ffbf84d
  40d906:	clc    
  40d907:	pop    esi
  40d908:	dec    edx
  40d909:	adc    BYTE PTR [edx],0xa
  40d90c:	fs popf 
  40d90e:	ror    al,1
  40d910:	xor    BYTE PTR [esi+edx*4-0x2],dh
  40d914:	pop    ecx
  40d915:	mov    bh,cl
  40d917:	arpl   WORD PTR [eax],di
  40d919:	inc    ebp
  40d91a:	inc    eax
  40d91b:	or     eax,0x901e7c33
  40d920:	jbe    0x40d8b4
  40d922:	mov    ebp,0xbd684053
  40d927:	push   ss
  40d928:	push   cs
  40d929:	dec    si
  40d92b:	stos   BYTE PTR es:[edi],al
  40d92c:	call   0x6a23a4f7
  40d931:	test   al,0x2c
  40d933:	add    ecx,ecx
  40d935:	mov    eax,ds:0x3f6f7890
  40d93a:	and    BYTE PTR [ebx+0x2a],dl
  40d93d:	jp     0x40d8d3
  40d93f:	adc    eax,0xfc8693d4
  40d944:	sub    ebx,eax
  40d946:	pusha  
  40d947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d948:	(bad)  
  40d949:	cmp    BYTE PTR [edi],bh
  40d94b:	mov    al,ds:0x4ba5a746
  40d950:	loope  0x40d98e
  40d952:	xchg   ecx,eax
  40d953:	std    
  40d954:	mov    esi,0x507651b3
  40d959:	adc    BYTE PTR [edi-0x28249d77],0x7
  40d960:	ror    DWORD PTR [ebx],0x7c
  40d963:	cmc    
  40d964:	pusha  
  40d965:	and    cl,BYTE PTR [esi+0x1f]
  40d968:	adc    dh,bl
  40d96a:	pop    es
  40d96b:	mov    ah,0x79
  40d96d:	sbb    al,0xef
  40d96f:	pop    edi
  40d970:	lods   al,BYTE PTR ds:[esi]
  40d971:	aad    0x2e
  40d973:	js     0x40d98b
  40d975:	and    ecx,ebp
  40d977:	jle    0x40d953
  40d979:	popa   
  40d97a:	iret   
  40d97b:	push   ebx
  40d97c:	ja     0x40d9a0
  40d97e:	jmp    0xca2c:0xdcaab4ba
  40d985:	cmp    edx,DWORD PTR [ecx-0x18d65dd0]
  40d98b:	mov    al,0xeb
  40d98d:	jnp    0x40d959
  40d98f:	or     al,0xe7
  40d991:	pop    eax
  40d992:	jg     0x40da13
  40d994:	xlat   BYTE PTR ds:[ebx]
  40d995:	mov    esp,0x3a855c56
  40d99a:	sub    cl,ch
  40d99c:	push   eax
  40d99d:	(bad)  
  40d99e:	nop
  40d99f:	jp     0x40d9e6
  40d9a1:	int    0x40
  40d9a3:	popf   
  40d9a4:	imul   eax,edx,0x4aaad9a0
  40d9aa:	xor    dh,BYTE PTR [esi+0x7]
  40d9ad:	push   ds
  40d9ae:	dec    esi
  40d9af:	and    BYTE PTR [eax],0xc6
  40d9b2:	push   ebx
  40d9b3:	js     0x40da1a
  40d9b5:	in     eax,0xf8
  40d9b7:	adc    esi,DWORD PTR ds:0x98ba2b64
  40d9bd:	dec    esp
  40d9be:	push   esp
  40d9bf:	fistp  WORD PTR [edi+0x34dc7b6f]
  40d9c5:	mov    WORD PTR [esi+0x26],gs
  40d9c8:	sub    dh,BYTE PTR [edi+0x71]
  40d9cb:	mov    cl,0x97
  40d9cd:	retf   
  40d9ce:	jg     0x40d9aa
  40d9d0:	xor    eax,0x65296334
  40d9d5:	mov    ebx,esp
  40d9d7:	int    0x85
  40d9d9:	aad    0xf3
  40d9db:	fwait
  40d9dc:	and    BYTE PTR [ecx-0xf],cl
  40d9df:	daa    
  40d9e0:	push   edx
  40d9e1:	xor    dl,bl
  40d9e3:	inc    ecx
  40d9e4:	std    
  40d9e5:	push   ss
  40d9e6:	sub    edx,DWORD PTR [edi]
  40d9e8:	icebp  
  40d9e9:	mov    cl,0x2e
  40d9eb:	dec    eax
  40d9ec:	xchg   esi,eax
  40d9ed:	in     eax,dx
  40d9ee:	xor    al,BYTE PTR [ecx-0x40]
  40d9f1:	xchg   ebx,eax
  40d9f2:	add    DWORD PTR [edx-0x2b6478c7],ebx
  40d9f8:	mov    cl,0x82
  40d9fa:	lea    esp,[esp+eiz*8+0x69]
  40d9fe:	addr16 xor al,0x31
  40da01:	xchg   esp,eax
  40da02:	idiv   DWORD PTR [ebx+0x1c]
  40da05:	and    esp,DWORD PTR [ebp-0x66]
  40da08:	sbb    ch,BYTE PTR [ecx]
  40da0a:	fcom   st(0)
  40da0c:	test   DWORD PTR ss:[edi-0x61],0x5714eb91
  40da14:	mov    dl,0xfe
  40da16:	mov    dl,0xc3
  40da18:	push   ebp
  40da19:	daa    
  40da1a:	inc    esp
  40da1b:	add    al,0x97
  40da1d:	adc    DWORD PTR [ebx+0x64dc3acd],edx
  40da23:	sub    BYTE PTR ds:0xfbd4f155,bl
  40da29:	into   
  40da2a:	dec    eax
  40da2b:	inc    edx
  40da2c:	xlat   BYTE PTR ds:[ebx]
  40da2d:	jne    0x40da63
  40da2f:	adc    DWORD PTR [ebp-0x66],ebx
  40da32:	mov    edi,0xaf10f823
  40da37:	dec    ecx
  40da38:	test   DWORD PTR [edi],esp
  40da3a:	sub    al,0x24
  40da3c:	jg     0x40dab4
  40da3e:	and    DWORD PTR [eax],ebx
  40da40:	and    al,0x30
  40da42:	ins    DWORD PTR es:[edi],dx
  40da43:	dec    esi
  40da44:	add    esp,esi
  40da46:	sbb    DWORD PTR [edx-0x42c86d8d],ebx
  40da4c:	or     bl,ah
  40da4e:	jno    0x40da0d
  40da50:	pop    ds
  40da51:	lods   al,BYTE PTR ds:[esi]
  40da52:	mov    bh,0xad
  40da54:	imul   ebx,DWORD PTR [ecx+0x78],0x15
  40da58:	xor    DWORD PTR [eax],0x7f0ce16d
  40da5e:	loop   0x40dab1
  40da60:	loope  0x40da6e
  40da62:	(bad)  
  40da64:	cs cmp eax,0xa2143299
  40da6a:	and    eax,0xfca4abe4
  40da6f:	shr    bl,1
  40da71:	push   es
  40da72:	dec    esp
  40da73:	inc    dl
  40da75:	outs   dx,DWORD PTR ds:[esi]
  40da76:	out    0x5e,eax
  40da78:	loop   0x40da25
  40da7a:	dec    ebp
  40da7b:	inc    esi
  40da7c:	push   esi
  40da7d:	push   0x730d2a29
  40da82:	push   eax
  40da83:	pop    ebp
  40da84:	daa    
  40da85:	adc    edx,eax
  40da87:	lock fwait
  40da89:	push   eax
  40da8a:	sub    al,0xd6
  40da8c:	shl    DWORD PTR [esi],cl
  40da8e:	out    0xe7,eax
  40da90:	hlt    
  40da91:	add    esp,eax
  40da93:	pop    ecx
  40da94:	shl    esi,0xa5
  40da97:	and    eax,0xa9f9c472
  40da9c:	scas   al,BYTE PTR es:[edi]
  40da9d:	mov    WORD PTR [eax-0x14d9ba5a],?
  40daa3:	push   0x12f26c46
  40daa8:	pop    eax
  40daa9:	arpl   bx,di
  40daab:	pop    esi
  40daac:	mov    cl,0x77
  40daae:	cmp    bl,BYTE PTR [ebx-0x12]
  40dab1:	lods   eax,DWORD PTR ds:[esi]
  40dab2:	fcomi  st,st(6)
  40dab4:	addr16 mov cl,0x48
  40dab7:	jg     0x40da58
  40dab9:	push   edi
  40daba:	(bad)  
  40dabb:	cmp    dl,BYTE PTR [ecx+0x2cfeaffb]
  40dac1:	repnz add ecx,DWORD PTR [edx+0x683a4154]
  40dac8:	xor    dl,cl
  40daca:	add    cl,BYTE PTR [edi+0x1eb717f4]
  40dad0:	push   0xcad23c9b
  40dad5:	and    DWORD PTR [ecx-0x66],ebx
  40dad8:	xchg   ebp,eax
  40dad9:	sbb    eax,0xaff3fcc9
  40dade:	add    BYTE PTR [ecx-0x6],dh
  40dae1:	je     0x40dac6
  40dae3:	mov    ds:0xde8de12e,eax
  40dae8:	retf   0x51c8
  40daeb:	xor    ch,BYTE PTR [edx+0x470316fe]
  40daf1:	sti    
  40daf2:	xor    al,0x93
  40daf4:	or     al,0x94
  40daf6:	in     eax,0x8f
  40daf8:	ficom  DWORD PTR [ecx-0x65]
  40dafb:	addr16 mov bh,0x87
  40dafe:	or     ebx,esi
  40db00:	test   al,0x3e
  40db02:	inc    esi
  40db03:	hlt    
  40db04:	imul   DWORD PTR [ecx]
  40db06:	sbb    ah,BYTE PTR [edi+0x3086b51]
  40db0c:	(bad)  
  40db0d:	out    dx,eax
  40db0e:	es inc ecx
  40db10:	mov    ecx,0x7d6ab143
  40db15:	cmp    DWORD PTR [eax+0x32],esp
  40db18:	popa   
  40db19:	test   al,0xe4
  40db1b:	and    ecx,DWORD PTR [esi-0x146f1c79]
  40db21:	mov    ds:0x4ef07d5,eax
  40db26:	or     cl,bl
  40db28:	stc    
  40db29:	cmp    eax,0x16b1502b
  40db2e:	pushf  
  40db2f:	(bad)  
  40db31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db32:	dec    esi
  40db33:	or     DWORD PTR [ebp-0x7425a3e5],ebx
  40db39:	stos   BYTE PTR es:[edi],al
  40db3a:	push   eax
  40db3b:	mov    esp,0x9d31262c
  40db40:	pop    ecx
  40db41:	and    DWORD PTR [eax],esp
  40db43:	and    edi,esi
  40db45:	jge    0x40dac8
  40db47:	or     DWORD PTR [ebp+0x7649f69c],0x1f
  40db4e:	mov    eax,0x80b14d19
  40db53:	mov    ?,WORD PTR [ebx]
  40db55:	jo     0x40db27
  40db57:	push   ebp
  40db58:	add    bl,ch
  40db5a:	mov    ch,0x9d
  40db5c:	daa    
  40db5d:	adc    al,0x2
  40db5f:	mov    ch,0xf7
  40db61:	repnz retf 
  40db63:	int3   
  40db64:	mov    DWORD PTR [eax],edx
  40db66:	fisub  WORD PTR [esi-0x1c]
  40db69:	aas    
  40db6a:	sub    ebp,DWORD PTR [ebp+0x2f4e7ebc]
  40db70:	or     eax,0xee5309e4
  40db75:	cli    
  40db76:	adc    esi,DWORD PTR [eax-0x30]
  40db79:	ja     0x40dbf1
  40db7b:	inc    ebp
  40db7c:	(bad)  
  40db7d:	mov    edx,0x14cb4158
  40db82:	or     ah,ah
  40db84:	mov    ebp,0xc24114f6
  40db89:	sub    eax,DWORD PTR [ecx]
  40db8b:	mov    ds:0x98076f67,eax
  40db90:	clc    
  40db91:	mov    al,ds:0x583aed0f
  40db96:	dec    esp
  40db97:	push   0x4
  40db99:	std    
  40db9a:	ret    0x685c
  40db9d:	aas    
  40db9e:	cld    
  40db9f:	inc    eax
  40dba0:	out    0x5,eax
  40dba2:	mov    dl,0x5b
  40dba4:	inc    ebp
  40dba5:	in     eax,dx
  40dba6:	fist   WORD PTR [eax+0x14e081cd]
  40dbac:	xlat   BYTE PTR ds:[ebx]
  40dbad:	sub    eax,DWORD PTR [edi+0xc]
  40dbb0:	in     eax,0xd5
  40dbb2:	icebp  
  40dbb3:	and    eax,0x75d8a7be
  40dbb8:	arpl   WORD PTR [ebx],sp
  40dbba:	push   ds
  40dbbb:	stc    
  40dbbc:	mov    edx,0xa0e396af
  40dbc1:	and    eax,0x498f1323
  40dbc6:	addr16 inc eax
  40dbc8:	adc    ebp,edi
  40dbca:	lds    edx,FWORD PTR [esi-0x30]
  40dbcd:	test   al,0xf2
  40dbcf:	and    cl,dl
  40dbd1:	xchg   DWORD PTR [eax],edx
  40dbd3:	(bad)  
  40dbd4:	div    BYTE PTR [ebx-0x5228f4a9]
  40dbda:	and    DWORD PTR [edi+eax*2-0x4d],esp
  40dbde:	mov    ecx,0x9385689a
  40dbe3:	pop    ecx
  40dbe4:	lahf   
  40dbe5:	mov    al,0xdc
  40dbe7:	mov    bl,BYTE PTR [ebp+0x31]
  40dbea:	jmp    0x40dc3e
  40dbec:	mov    dh,0x7d
  40dbee:	fisubr DWORD PTR [ebx-0x36b3509]
  40dbf4:	aaa    
  40dbf5:	mov    bl,0x18
  40dbf7:	loop   0x40dc33
  40dbf9:	fnstcw WORD PTR [ebp-0xe]
  40dbfc:	mov    bh,0xc
  40dbfe:	jl     0x40dc21
  40dc00:	mov    cl,0x26
  40dc02:	cdq    
  40dc03:	push   edx
  40dc04:	out    0xad,eax
  40dc06:	aas    
  40dc07:	xchg   BYTE PTR [eax+0x607c2006],dl
  40dc0d:	inc    edi
  40dc0e:	test   BYTE PTR [edi+ecx*4-0x60],ch
  40dc12:	mov    ebx,0x7474e6c8
  40dc17:	jo     0x40dc0d
  40dc19:	bound  edi,QWORD PTR [ecx-0xa7d6348]
  40dc1f:	mov    dh,0xe8
  40dc21:	retf   0x9462
  40dc24:	jmp    0xd606:0xe8250257
  40dc2b:	jo     0x40dc5b
  40dc2d:	or     BYTE PTR [esi+0x43],al
  40dc30:	xor    al,0xff
  40dc32:	les    ebp,FWORD PTR [edi+0x2d494b32]
  40dc38:	in     eax,dx
  40dc39:	aaa    
  40dc3a:	and    edi,DWORD PTR [esi]
  40dc3c:	jmp    0x5045:0xa47c48f6
  40dc43:	repz add edi,DWORD PTR [si]
  40dc47:	(bad)  ds:0x643015b
  40dc4d:	adc    dl,cl
  40dc4f:	mov    edx,0x7d804942
  40dc54:	add    eax,0x612693b6
  40dc59:	fsubr  st(1),st
  40dc5b:	dec    ebp
  40dc5c:	ret    0x48e8
  40dc5f:	fcmovnb st,st(4)
  40dc61:	jecxz  0x40dc1e
  40dc63:	iret   
  40dc64:	xor    ah,bh
  40dc66:	sbb    ebp,DWORD PTR [ecx]
  40dc68:	(bad)  
  40dc69:	push   ss
  40dc6a:	add    al,0x9e
  40dc6c:	jg     0x40dc65
  40dc6e:	add    edi,DWORD PTR [edx-0x784bfa2a]
  40dc74:	xor    eax,0xc2bc480d
  40dc79:	and    al,0x39
  40dc7b:	es scas al,BYTE PTR es:[edi]
  40dc7d:	popa   
  40dc7e:	fmul   st(4),st
  40dc80:	sub    al,dh
  40dc82:	xlat   BYTE PTR ds:[ebx]
  40dc83:	cmc    
  40dc84:	out    0xff,eax
  40dc86:	dec    eax
  40dc87:	fwait
  40dc88:	mov    edi,0xe605ec4c
  40dc8d:	dec    esp
  40dc8e:	sahf   
  40dc8f:	xor    BYTE PTR [ebp+0x7d],0xee
  40dc93:	xchg   esp,eax
  40dc94:	call   0x2a0f0184
  40dc99:	jl     0x40dcf4
  40dc9b:	data16 mov ah,bh
  40dc9e:	js     0x40dcec
  40dca0:	ret    
  40dca1:	dec    edi
  40dca2:	xor    dh,ch
  40dca4:	cwde   
  40dca5:	ss addr16 jp 0x40dce5
  40dca9:	imul   ebx,DWORD PTR [eax-0x7],0xff913478
  40dcb0:	jl     0x40dc83
  40dcb2:	stos   DWORD PTR es:[edi],eax
  40dcb3:	in     al,0x50
  40dcb5:	and    al,0x66
  40dcb7:	jg     0x40dc79
  40dcb9:	push   ebx
  40dcba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcbb:	(bad)
  40dcc0:	repnz sbb DWORD PTR [edi-0x7d],edx
  40dcc4:	popf   
  40dcc5:	xchg   ecx,eax
  40dcc6:	sub    BYTE PTR [ebx],dh
  40dcc8:	or     eax,0x3756cf61
  40dccd:	pushf  
  40dcce:	mov    WORD PTR [ebx],?
  40dcd0:	adc    DWORD PTR [edi],ebx
  40dcd2:	cmp    DWORD PTR [ecx-0x71],0xffffffff
  40dcd6:	xchg   edx,eax
  40dcd7:	or     DWORD PTR [edx+0x3de67d48],edi
  40dcdd:	mov    ebp,0x3933371
  40dce2:	dec    edi
  40dce3:	std    
  40dce4:	out    0xc,al
  40dce6:	dec    ebx
  40dce7:	int3   
  40dce8:	(bad)  
  40dcea:	aas    
  40dceb:	xor    eax,0xa3b90fd5
  40dcf0:	mov    DWORD PTR [esi-0x6f],esi
  40dcf3:	cmp    bl,BYTE PTR [ebp+eax*1+0xef21434]
  40dcfa:	sbb    DWORD PTR [ecx-0x6d734006],esi
  40dd00:	sub    ch,dh
  40dd02:	out    dx,al
  40dd03:	add    al,0x3b
  40dd05:	jl     0x40dc9c
  40dd07:	add    ecx,DWORD PTR [eax-0x3e]
  40dd0a:	pop    ss
  40dd0b:	push   ebp
  40dd0c:	ret    0xc894
  40dd0f:	outs   dx,BYTE PTR ds:[esi]
  40dd10:	sbb    cl,ch
  40dd12:	ins    DWORD PTR es:[edi],dx
  40dd13:	loope  0x40dd88
  40dd15:	xchg   ecx,eax
  40dd16:	jl     0x40dca1
  40dd18:	jo     0x40dcb5
  40dd1a:	inc    ebp
  40dd1b:	cmp    bh,0xfe
  40dd1e:	aad    0x5b
  40dd20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd21:	(bad)  
  40dd22:	dec    ebx
  40dd23:	stos   BYTE PTR es:[edi],al
  40dd24:	xor    eax,0x15d3ef63
  40dd29:	mov    eax,0xb600f28e
  40dd2e:	jns    0x40dd2e
  40dd30:	xlat   BYTE PTR ds:[ebx]
  40dd31:	out    0xec,al
  40dd33:	lahf   
  40dd34:	mov    DWORD PTR [edi+0x2f429608],esi
  40dd3a:	or     eax,0x56a2175b
  40dd3f:	fsubr  st,st(0)
  40dd41:	sbb    DWORD PTR [edi-0x2e],ecx
  40dd44:	stos   BYTE PTR es:[edi],al
  40dd45:	leave  
  40dd46:	nop
  40dd47:	or     ch,0xb4
  40dd4a:	mov    bh,BYTE PTR [ecx+0x31ccf2a1]
  40dd50:	repz call 0x5b72:0xb8848005
  40dd58:	fwait
  40dd59:	rcr    cl,0x8d
  40dd5c:	push   es
  40dd5d:	not    BYTE PTR [ebx+0x38307cd3]
  40dd63:	lods   eax,DWORD PTR ds:[esi]
  40dd64:	idiv   DWORD PTR [ebx]
  40dd66:	mov    esp,0x79de61ed
  40dd6b:	pop    edi
  40dd6c:	sbb    ebp,0x7
  40dd6f:	push   edi
  40dd70:	scas   eax,DWORD PTR es:[edi]
  40dd71:	ror    BYTE PTR [ebx+0x612af3ce],1
  40dd77:	stos   DWORD PTR es:[edi],eax
  40dd78:	dec    esp
  40dd79:	imul   esi,DWORD PTR [ebp+0x52],0xfcabbeae
  40dd80:	sti    
  40dd81:	jp     0x40ddbf
  40dd83:	arpl   WORD PTR [eax+0x33],cx
  40dd86:	and    BYTE PTR [bx-0x586c],cl
  40dd8b:	clc    
  40dd8c:	push   ebx
  40dd8d:	arpl   WORD PTR [ebx-0x295927cb],bx
  40dd93:	push   cs
  40dd94:	(bad)  
  40dd95:	dec    ecx
  40dd96:	rcr    DWORD PTR [ecx],0x82
  40dd99:	xor    edi,DWORD PTR [ebp-0x666682b1]
  40dd9f:	cwde   
  40dda0:	push   esi
  40dda1:	cmp    bl,BYTE PTR [esi+edx*8+0x66]
  40dda5:	push   esi
  40dda6:	loopne 0x40dd8d
  40dda8:	mov    dh,0xc8
  40ddaa:	dec    ebx
  40ddab:	or     bh,al
  40ddad:	cmp    al,0x96
  40ddaf:	out    0x4c,al
  40ddb1:	lds    ebx,FWORD PTR [ecx-0x13]
  40ddb4:	scas   al,BYTE PTR es:[edi]
  40ddb5:	dec    ebx
  40ddb6:	mov    al,ds:0xa2c128b8
  40ddbb:	call   0xb6a83db5
  40ddc0:	add    al,0xad
  40ddc2:	loopne 0x40de3b
  40ddc4:	repnz fwait
  40ddc6:	mov    cl,0x9b
  40ddc8:	push   0xbc65d12f
  40ddcd:	adc    eax,DWORD PTR [esi]
  40ddcf:	sub    BYTE PTR [edi+0x7e4446a4],bh
  40ddd5:	pop    ebx
  40ddd6:	retf   
  40ddd7:	and    eax,0xee0d6e01
  40dddc:	loope  0x40ddca
  40ddde:	xchg   esp,eax
  40dddf:	push   eax
  40dde0:	jne    0x40ddc0
  40dde2:	dec    esi
  40dde3:	icebp  
  40dde4:	cwde   
  40dde5:	pop    ds
  40dde6:	mov    esi,0x34e70f28
  40ddeb:	push   0xffffffc7
  40dded:	and    eax,0xea4eb6a5
  40ddf2:	and    DWORD PTR [edx+0x6cbd11f5],eax
  40ddf8:	and    bl,BYTE PTR [edi]
  40ddfa:	mov    ebp,0x240e6d7a
  40ddff:	addr16 jmp 0x958ab724
  40de05:	sub    DWORD PTR [esi+0x5c5489b3],ecx
  40de0b:	lea    ebp,[esi]
  40de0d:	add    DWORD PTR [ebx+eiz*4],edx
  40de10:	popa   
  40de11:	adc    DWORD PTR ds:0x64837fbb,edx
  40de17:	cmp    esp,DWORD PTR [esi]
  40de19:	nop
  40de1a:	out    dx,eax
  40de1b:	jne    0x40ddf7
  40de1d:	sar    esp,0x88
  40de20:	fisub  WORD PTR [ebx+eiz*8+0x6a]
  40de24:	ret    
  40de25:	sbb    DWORD PTR [esi-0x58],ebp
  40de28:	call   0x70aa:0x3026dc91
  40de2f:	pop    edx
  40de30:	add    ebx,DWORD PTR [ecx-0x5668381c]
  40de36:	int3   
  40de37:	jle    0x40de9e
  40de39:	inc    edi
  40de3a:	sub    edi,DWORD PTR [ecx+0x5a]
  40de3d:	jecxz  0x40de8a
  40de3f:	cld    
  40de40:	je     0x40ddc7
  40de42:	(bad)  
  40de44:	ss sbb al,0x8c
  40de47:	mov    ebp,0x88a6a491
  40de4c:	sbb    bl,BYTE PTR [edi-0x51]
  40de4f:	cmp    DWORD PTR [edx+edi*8],eax
  40de52:	fist   WORD PTR [ecx+edx*2]
  40de55:	mov    al,0x58
  40de57:	data16 and al,0xf6
  40de5a:	push   ss
  40de5b:	cld    
  40de5c:	mov    gs,WORD PTR [edi+ebp*8+0x715288f9]
  40de63:	mov    dh,0x99
  40de65:	les    eax,FWORD PTR [ecx+ebx*8-0x47870e02]
  40de6c:	add    eax,0xcd44de44
  40de71:	out    dx,eax
  40de72:	xor    bl,BYTE PTR [eax-0x1bc0045]
  40de78:	and    al,BYTE PTR [esp+edx*4-0x77841b16]
  40de7f:	inc    eax
  40de80:	sti    
  40de81:	add    dl,BYTE PTR [eax+0x123bcbc8]
  40de87:	mov    ebx,0xa9c96ee9
  40de8c:	nop
  40de8d:	push   edi
  40de8e:	inc    ebp
  40de8f:	stos   DWORD PTR es:[edi],eax
  40de90:	pop    edi
  40de91:	xchg   ebp,eax
  40de92:	mov    dl,0xa0
  40de94:	(bad)  
  40de95:	aad    0xea
  40de97:	xlat   BYTE PTR ds:[ebx]
  40de98:	mov    al,ds:0xf99e5593
  40de9d:	and    eax,0x53650254
  40dea2:	call   0x798c:0xd07fb93f
  40dea9:	jmp    0xf3750e18
  40deae:	repnz rcr DWORD PTR [ebx-0x4f],1
  40deb2:	sub    eax,0x5896fcfe
  40deb7:	out    dx,eax
  40deb8:	lock and al,0x78
  40debb:	iret   
  40debc:	sbb    esi,0xffffff80
  40debf:	inc    esi
  40dec0:	mov    esp,0xae853130
  40dec5:	loopne 0x40df43
  40dec7:	jne    0x40deb4
  40dec9:	outs   dx,BYTE PTR ds:[esi]
  40decb:	fidivr DWORD PTR ds:0xba70d3e4
  40ded1:	inc    edx
  40ded2:	enter  0x6c88,0xc1
  40ded6:	rol    DWORD PTR [edi],1
  40ded8:	sub    al,0x14
  40deda:	rcr    dl,0x3e
  40dedd:	mov    eax,0x15eea8ab
  40dee2:	imul   ebx,DWORD PTR ss:[eax-0x16],0xffffffc4
  40dee7:	jmp    0xcf96899f
  40deec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deed:	sub    ch,dh
  40deef:	mov    cl,BYTE PTR [ebx-0x2]
  40def2:	push   ds
  40def3:	shl    DWORD PTR [edi-0x52276a58],cl
  40def9:	scas   al,BYTE PTR es:[edi]
  40defa:	das    
  40defb:	sar    DWORD PTR [esi+eax*8+0x3c],1
  40deff:	dec    ebp
  40df00:	repz inc ebp
  40df02:	or     ax,0x57e9
  40df06:	add    eax,0xbb557e0a
  40df0b:	fstp   QWORD PTR ds:0x67cfebae
  40df11:	xor    bl,BYTE PTR [ecx]
  40df13:	push   ebp
  40df14:	sub    BYTE PTR [edx+0x4b],ch
  40df17:	mov    DWORD PTR [edi],ebx
  40df19:	or     bl,BYTE PTR [esi]
  40df1b:	(bad)  [edx]
  40df1d:	loop   0x40deb0
  40df1f:	push   es
  40df20:	cwde   
  40df21:	inc    edx
  40df22:	push   ecx
  40df23:	fld    QWORD PTR [ebx]
  40df25:	in     al,dx
  40df26:	pop    edi
  40df27:	enter  0x3f37,0x97
  40df2b:	shl    BYTE PTR [ecx-0x6],cl
  40df2e:	stos   DWORD PTR es:[edi],eax
  40df2f:	push   edi
  40df30:	push   ebp
  40df31:	mov    al,ds:0xa09129c2
  40df36:	es sub al,0x9d
  40df39:	shl    BYTE PTR [eax+0x42],0x36
  40df3d:	popf   
  40df3e:	or     al,0x6e
  40df40:	stc    
  40df41:	pushf  
  40df42:	mov    edx,0x81554033
  40df47:	mov    al,ds:0xe6325bfc
  40df4c:	(bad)  
  40df4d:	daa    
  40df4e:	ret    0xd375
  40df51:	adc    al,0xed
  40df53:	xchg   ecx,eax
  40df54:	lds    ebx,FWORD PTR [edi-0x2a5a830b]
  40df5a:	mov    ecx,0x2d191576
  40df5f:	retf   0x4c62
  40df62:	sub    al,0x58
  40df64:	(bad)  
  40df65:	gs imul esp,ecx,0x67
  40df69:	shl    ah,1
  40df6b:	int    0x62
  40df6d:	(bad)  
  40df6e:	leave  
  40df6f:	call   0x5633200d
  40df74:	sub    dh,bh
  40df76:	lock cmp ebx,ebp
  40df79:	(bad)  
  40df7b:	and    al,BYTE PTR [ebx]
  40df7d:	adc    eax,0x43e9dad3
  40df82:	push   ss
  40df83:	or     al,0x4
  40df85:	call   eax
  40df87:	dec    ebp
  40df88:	sbb    dl,dh
  40df8a:	inc    ebx
  40df8b:	repnz xor DWORD PTR [esi],0x24c41284
  40df92:	idiv   DWORD PTR [ebx-0x7f5737ed]
  40df98:	and    DWORD PTR [edi+0x4b],edi
  40df9b:	mul    ah
  40df9d:	shr    BYTE PTR [ebx-0x65],0x29
  40dfa1:	fwait
  40dfa2:	mov    eax,0xd7b9e756
  40dfa7:	(bad)  
  40dfa8:	pop    ds
  40dfa9:	jecxz  0x40dfbb
  40dfab:	push   ss
  40dfac:	or     BYTE PTR [ebx+0x36],cl
  40dfaf:	das    
  40dfb0:	jo     0x40e030
  40dfb2:	mov    al,0x7f
  40dfb4:	mov    dl,BYTE PTR [ebx-0x541ae0ee]
  40dfba:	mov    WORD PTR [esi],?
  40dfbc:	xchg   ebp,eax
  40dfbd:	inc    eax
  40dfbe:	(bad)  
  40dfbf:	jmp    0x40dfbb
  40dfc1:	adc    DWORD PTR [ecx-0x159e0261],ebp
  40dfc7:	push   cs
  40dfc8:	xor    al,cl
  40dfca:	jmp    0x40e012
  40dfcc:	mov    ah,0x56
  40dfce:	push   esi
  40dfcf:	inc    esp
  40dfd0:	call   0x861c8d66
  40dfd5:	adc    eax,0x897c12fc
  40dfda:	inc    ebp
  40dfdb:	mov    bl,0x63
  40dfdd:	je     0x40df78
  40dfdf:	mov    bl,0x90
  40dfe1:	add    eax,0x2fdbbad0
  40dfe6:	and    DWORD PTR [edi],0xd8f930b3
  40dfec:	imul   ebp,ebp,0xffffff8c
  40dfef:	mov    bh,bh
  40dff1:	mov    DWORD PTR [ebp+0x22],edx
  40dff4:	jmp    0xd3c1:0x2e4fe704
  40dffb:	mov    ds:0x543817e9,eax
  40e000:	cmp    ch,al
  40e002:	mov    eax,DWORD PTR [ecx]
  40e004:	cmp    eax,0x246163a9
  40e009:	nop
  40e00a:	pop    eax
  40e00b:	je     0x40e035
  40e00d:	mov    al,0x40
  40e00f:	test   eax,0x48f28fb0
  40e014:	loopne 0x40e077
  40e016:	sub    eax,DWORD PTR [ebx]
  40e018:	stos   DWORD PTR es:[edi],eax
  40e019:	adc    BYTE PTR [eax],dl
  40e01b:	ror    esp,1
  40e01d:	rol    DWORD PTR [esp+edx*2-0x1c],cl
  40e021:	ror    DWORD PTR [edi-0x3c9dfa82],0xde
  40e028:	cld    
  40e029:	inc    eax
  40e02a:	test   eax,esi
  40e02c:	mov    ebp,esp
  40e02e:	adc    al,0x42
  40e030:	cli    
  40e031:	icebp  
  40e032:	stc    
  40e033:	sbb    DWORD PTR [ebp-0x9],eax
  40e036:	inc    edi
  40e037:	aas    
  40e038:	into   
  40e039:	dec    esi
  40e03a:	adc    DWORD PTR [ecx+0x3e],edi
  40e03d:	rol    BYTE PTR es:[esi-0x55],1
  40e041:	fidivr WORD PTR [eax-0x7c]
  40e044:	repz sub al,0x7d
  40e047:	add    cl,0xe4
  40e04a:	sti    
  40e04b:	out    0x7a,eax
  40e04d:	or     eax,0xf983628
  40e052:	cmova  ecx,DWORD PTR [esi]
  40e055:	mov    edx,0x43bb514f
  40e05a:	cmp    DWORD PTR [edi],esp
  40e05c:	ret    
  40e05d:	xchg   edx,eax
  40e05e:	or     edi,ebx
  40e060:	rcl    DWORD PTR cs:[ebx-0x690d7c72],1
  40e067:	add    dh,BYTE PTR [edx+eax*2+0x15a3c30f]
  40e06e:	outs   dx,BYTE PTR ds:[esi]
  40e06f:	xor    dl,BYTE PTR [ecx-0xe]
  40e072:	xor    edi,DWORD PTR ds:0x744f1834
  40e078:	add    eax,0x89b98232
  40e07d:	arpl   WORD PTR [ebp+0x257c0e59],dx
  40e083:	popa   
  40e084:	loop   0x40e04e
  40e086:	cli    
  40e087:	std    
  40e088:	ficomp WORD PTR ds:0xac579cee
  40e08e:	inc    esi
  40e08f:	jno    0x40e032
  40e091:	cmp    BYTE PTR [edx+0x40],ah
  40e094:	fnstenv [eax-0x759c07a1]
  40e09a:	pop    eax
  40e09b:	in     al,dx
  40e09c:	sar    DWORD PTR [esi-0x64],1
  40e09f:	cmp    DWORD PTR [ebp+0x23],eax
  40e0a2:	not    BYTE PTR [ecx+esi*2]
  40e0a5:	fdivr  DWORD PTR [ecx]
  40e0a7:	sbb    BYTE PTR [ebx],dh
  40e0a9:	ss add dh,cl
  40e0ac:	cwde   
  40e0ad:	loope  0x40e0d9
  40e0af:	inc    esp
  40e0b0:	sbb    DWORD PTR [ebx-0x53],eax
  40e0b3:	test   esp,ecx
  40e0b5:	mov    bh,0xe6
  40e0b7:	mov    ebp,0x5b55e3
  40e0bc:	or     al,0x34
  40e0be:	hlt    
  40e0bf:	or     eax,0x1071cad2
  40e0c4:	inc    ebp
  40e0c5:	and    DWORD PTR [esi+0x12],ebx
  40e0c8:	jns    0x40e0b0
  40e0ca:	outs   dx,DWORD PTR ds:[esi]
  40e0cb:	stos   BYTE PTR es:[edi],al
  40e0cc:	lahf   
  40e0cd:	adc    edx,DWORD PTR [esi+0x5e]
  40e0d0:	test   eax,0x31a18f63
  40e0d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d6:	add    edx,ebp
  40e0d8:	and    ah,ch
  40e0da:	loopne 0x40e0bb
  40e0dc:	push   edi
  40e0dd:	cmp    BYTE PTR [ecx+0x6758faf0],al
  40e0e3:	jmp    0x40e08c
  40e0e5:	cmp    ebp,esp
  40e0e7:	lahf   
  40e0e8:	push   esp
  40e0e9:	xor    DWORD PTR [esi],edi
  40e0eb:	cmc    
  40e0ec:	pop    edx
  40e0ed:	inc    ebp
  40e0ee:	loope  0x40e167
  40e0f0:	mov    DWORD PTR [edi],ecx
  40e0f2:	arpl   WORD PTR gs:[edi],ax
  40e0f5:	push   ebp
  40e0f6:	xchg   esi,eax
  40e0f7:	adc    DWORD PTR [esi+0x48e1143a],ebx
  40e0fd:	mov    esi,0x55449864
  40e102:	lea    esp,[edi-0x12]
  40e105:	push   esp
  40e106:	int    0x1f
  40e108:	jl     0x40e121
  40e10a:	pop    esp
  40e10b:	jp     0x40e0ff
  40e10d:	loop   0x40e0aa
  40e10f:	or     al,0x6b
  40e111:	mov    ah,0x33
  40e113:	pop    eax
  40e114:	cmp    ebp,DWORD PTR [eax+0x46]
  40e117:	icebp  
  40e118:	les    eax,FWORD PTR [esi+ecx*1-0x481fe4e1]
  40e11f:	stos   BYTE PTR es:[edi],al
  40e120:	stos   BYTE PTR es:[edi],al
  40e121:	cmp    DWORD PTR [esp+ebp*2+0x68],esi
  40e125:	loop   0x40e0e7
  40e127:	jecxz  0x40e0af
  40e129:	sub    DWORD PTR [esp+ecx*1-0x54],edi
  40e12d:	dec    esi
  40e12e:	dec    esp
  40e12f:	push   ss
  40e130:	and    ah,dh
  40e132:	xchg   edi,eax
  40e133:	out    0xd,al
  40e135:	mov    al,0xd4
  40e137:	lock push ebx
  40e139:	js     0x40e0e3
  40e13b:	bound  ecx,QWORD PTR [edi+eax*2+0xb]
  40e13f:	call   0x70db:0xc2344030
  40e146:	mov    DWORD PTR [edx+0x5d],ecx
  40e149:	and    ah,BYTE PTR [esp+ebp*1-0x5e92f123]
  40e150:	mov    ds:0xe83b309d,eax
  40e155:	xchg   esp,eax
  40e156:	nop
  40e157:	fstp   TBYTE PTR [edx+0x153f810f]
  40e15d:	or     ecx,DWORD PTR [eax]
  40e15f:	pop    ds
  40e160:	cdq    
  40e161:	push   esi
  40e162:	mov    BYTE PTR [eax+0x4],ah
  40e165:	mov    ds,WORD PTR [ebx]
  40e167:	js     0x40e125
  40e169:	jno    0x40e124
  40e16b:	imul   DWORD PTR [ecx-0x67900697]
  40e171:	push   cs
  40e172:	add    ah,ch
  40e174:	push   ss
  40e175:	cwde   
  40e176:	loopne 0x40e11c
  40e178:	xor    dh,bl
  40e17a:	cld    
  40e17b:	aam    0x36
  40e17d:	dec    ecx
  40e17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e17f:	cmp    al,dl
  40e181:	lahf   
  40e182:	and    DWORD PTR [eax+0x44520938],eax
  40e188:	jb     0x40e113
  40e18a:	aam    0x4b
  40e18c:	test   eax,0x4db5f021
  40e191:	inc    edi
  40e192:	addr16 sub al,0x4f
  40e195:	rcl    DWORD PTR [ecx+0x72b69009],0xdf
  40e19c:	and    ecx,DWORD PTR [ebp+0x79390f3c]
  40e1a2:	jbe    0x40e1a9
  40e1a4:	aaa    
  40e1a5:	cdq    
  40e1a6:	out    0xc,eax
  40e1a8:	leave  
  40e1a9:	cmp    al,0x1c
  40e1ab:	int3   
  40e1ac:	and    ah,BYTE PTR [ebp+0xf7f9589]
  40e1b2:	jns    0x40e178
  40e1b4:	outs   dx,DWORD PTR ds:[esi]
  40e1b5:	jmp    0x1630617a
  40e1ba:	xchg   edx,eax
  40e1bb:	in     eax,0x94
  40e1bd:	pop    ds
  40e1be:	cmp    BYTE PTR [edx-0x1e],al
  40e1c1:	repnz ffree st(4)
  40e1c4:	add    DWORD PTR ds:0x19de6d24,ecx
  40e1ca:	inc    edx
  40e1cb:	fsub   DWORD PTR [ebx]
  40e1cd:	add    BYTE PTR [ebp+0x75],bl
  40e1d0:	loop   0x40e243
  40e1d2:	fdiv   QWORD PTR [esi+0x36bee84e]
  40e1d8:	or     edi,DWORD PTR [eax]
  40e1da:	xor    BYTE PTR [ebp+0x59],bl
  40e1dd:	pop    edi
  40e1de:	rcl    BYTE PTR [edi+0x51],cl
  40e1e1:	hlt    
  40e1e2:	daa    
  40e1e3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40e1e5:	dec    esi
  40e1e6:	add    eax,ecx
  40e1e8:	lea    eax,[edi+0x4f]
  40e1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1ec:	outs   dx,BYTE PTR ds:[esi]
  40e1ed:	dec    ebx
  40e1ee:	icebp  
  40e1ef:	mov    bl,dh
  40e1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f2:	(bad)  [edi+ebp*4]
  40e1f5:	andps  xmm0,XMMWORD PTR [ebx+0x46725eac]
  40e1fc:	or     al,0xdb
  40e1fe:	push   edx
  40e1ff:	fistp  WORD PTR [edx]
  40e201:	or     eax,esi
  40e203:	inc    esi
  40e204:	mov    bl,0x29
  40e206:	scas   al,BYTE PTR es:[edi]
  40e207:	sbb    al,0xa6
  40e209:	push   edi
  40e20a:	push   edi
  40e20b:	lock in al,dx
  40e20d:	(bad)  
  40e20f:	push   ss
  40e210:	lods   al,BYTE PTR ds:[esi]
  40e211:	cmp    al,bh
  40e213:	rcr    ebx,0x8d
  40e216:	or     al,0x8d
  40e218:	jp     0x40e1bc
  40e21a:	stos   DWORD PTR es:[edi],eax
  40e21b:	pusha  
  40e21c:	xchg   edx,eax
  40e21d:	cmp    BYTE PTR [ebx-0x5b],bl
  40e220:	ds dec eax
  40e222:	and    BYTE PTR [edi-0x5d],0x49
  40e226:	or     al,0x8
  40e228:	mov    edx,0x9c1289b9
  40e22d:	cmp    eax,0x88ddfba7
  40e232:	sub    al,0x26
  40e234:	call   0x3549a1c5
  40e239:	xchg   BYTE PTR [eax-0x31504411],ch
  40e23f:	out    dx,al
  40e240:	iret   
  40e241:	dec    eax
  40e242:	or     eax,0x62832560
  40e247:	mov    DWORD PTR [eax],ecx
  40e249:	sub    ah,BYTE PTR [ebp-0x13]
  40e24c:	xlat   BYTE PTR ds:[ebx]
  40e24d:	mov    esp,0xd48e1f55
  40e252:	mov    ah,0xde
  40e254:	inc    edx
  40e255:	mov    ds:0x336e3ae1,eax
  40e25a:	out    dx,al
  40e25b:	rol    BYTE PTR [edx+edi*2-0x37b0f8b9],cl
  40e262:	mov    ch,0x51
  40e264:	dec    ebp
  40e265:	fist   DWORD PTR [ecx-0x4545ecc2]
  40e26b:	mov    es,WORD PTR ds:0x8cb4
  40e270:	adc    DWORD PTR ds:0xc5f7a30d,ebx
  40e276:	js     0x40e294
  40e278:	push   ebx
  40e279:	adc    eax,0x9a90d77
  40e27e:	push   edx
  40e280:	test   al,0x37
  40e282:	xor    DWORD PTR [ecx-0x48],edx
  40e285:	out    dx,al
  40e286:	call   0x24f51d40
  40e28b:	jbe    0x40e2cd
  40e28d:	in     al,0x55
  40e28f:	(bad)  
  40e290:	jge    0x40e242
  40e292:	jns    0x40e216
  40e294:	fdiv   DWORD PTR [esi]
  40e296:	adc    esi,DWORD PTR [ebx-0x65]
  40e299:	jae    0xd79c9536
  40e29f:	pop    ds
  40e2a0:	inc    eax
  40e2a1:	stos   BYTE PTR es:[edi],al
  40e2a2:	test   BYTE PTR [ecx],bh
  40e2a4:	cmp    DWORD PTR [ecx],esi
  40e2a6:	loop   0x40e244
  40e2a8:	sbb    bh,BYTE PTR [eax-0x308b4e92]
  40e2ae:	add    eax,0x66e2275d
  40e2b3:	and    dh,bl
  40e2b5:	mov    bl,0xee
  40e2b7:	jg     0x40e337
  40e2b9:	mov    dl,0x95
  40e2bb:	sbb    bh,0xe6
  40e2be:	cld    
  40e2bf:	or     esi,DWORD PTR [esi+0x2f185db5]
  40e2c5:	outs   dx,BYTE PTR ds:[esi]
  40e2c6:	mov    ds:0x37c3cb3b,al
  40e2cb:	icebp  
  40e2cc:	xchg   edx,eax
  40e2cd:	sti    
  40e2ce:	push   ss
  40e2cf:	pop    DWORD PTR ds:0xeb06fdd5
  40e2d5:	lods   eax,DWORD PTR ds:[esi]
  40e2d6:	sbb    DWORD PTR [ecx+0x32],0x7ea3a057
  40e2dd:	add    DWORD PTR [ecx+0x12],0x4388a328
  40e2e4:	cli    
  40e2e5:	and    esi,ebp
  40e2e7:	call   0xdbfc:0xb4679d00
  40e2ee:	ins    DWORD PTR es:[edi],dx
  40e2ef:	jp     0x40e28a
  40e2f1:	clc    
  40e2f2:	dec    esi
  40e2f3:	sub    eax,0xab274997
  40e2f8:	mov    bh,0x81
  40e2fa:	sbb    ebp,0xed592c72
  40e300:	pusha  
  40e301:	aas    
  40e302:	dec    edi
  40e303:	inc    edi
  40e304:	and    eax,ebp
  40e306:	lock push ss
  40e308:	mov    ah,0xae
  40e30a:	repz mov eax,0x316b5603
  40e310:	mov    dl,0x8b
  40e312:	mov    esp,0x6815ef02
  40e317:	aas    
  40e318:	lahf   
  40e319:	xchg   ebp,eax
  40e31a:	mov    edi,0x70d1a34c
  40e31f:	hlt    
  40e320:	inc    eax
  40e321:	sbb    BYTE PTR [esi-0x15],dl
  40e324:	ret    
  40e325:	dec    edi
  40e326:	in     al,0xac
  40e328:	mov    al,ds:0xd141aa2c
  40e32d:	sar    DWORD PTR [ebx-0x41],0xf9
  40e331:	out    0x94,al
  40e333:	or     al,dh
  40e335:	jle    0x40e376
  40e337:	js     0x40e2ce
  40e339:	or     BYTE PTR [ebp-0x73],0x33
  40e33d:	(bad)  
  40e33e:	pop    esi
  40e33f:	fidivr WORD PTR [edx+edi*2+0x34426006]
  40e346:	test   DWORD PTR [eax],esi
  40e348:	fdivr  st(0),st
  40e34a:	in     eax,dx
  40e34b:	mov    ds,WORD PTR [eax+0x58fc4e10]
  40e351:	xchg   edx,eax
  40e352:	inc    ecx
  40e353:	in     al,0x5e
  40e355:	push   ss
  40e356:	mov    ebx,0xd8435fd7
  40e35b:	jp     0x40e378
  40e35d:	dec    esi
  40e35e:	xchg   esi,eax
  40e35f:	and    al,0xe0
  40e361:	xchg   edi,eax
  40e362:	fld    TBYTE PTR [edi]
  40e364:	cmp    DWORD PTR [ecx+edi*8-0x23b11013],esi
  40e36b:	xchg   ebp,eax
  40e36c:	cmp    BYTE PTR [ecx-0x34defcde],bh
  40e372:	stos   DWORD PTR es:[edi],eax
  40e373:	pop    ebx
  40e374:	xchg   BYTE PTR [ebx],ah
  40e376:	push   eax
  40e377:	inc    ecx
  40e378:	push   ss
  40e379:	push   edx
  40e37a:	dec    esi
  40e37b:	sbb    eax,0xda9decc8
  40e380:	pop    ds
  40e381:	mov    ah,0x69
  40e383:	jno    0x40e391
  40e385:	sti    
  40e386:	adc    edx,ecx
  40e388:	rcl    ecx,cl
  40e38a:	scas   al,BYTE PTR es:[edi]
  40e38b:	xchg   bl,cl
  40e38d:	js     0x40e329
  40e38f:	pop    esp
  40e390:	cmp    al,0x73
  40e392:	out    0xf6,eax
  40e394:	ret    0xdcb9
  40e397:	or     edi,DWORD PTR [ebx]
  40e399:	cmp    eax,0x4079cbdf
  40e39e:	leave  
  40e39f:	cmp    al,0x80
  40e3a1:	xchg   ebx,eax
  40e3a2:	jl     0x40e3b9
  40e3a4:	ds inc ebx
  40e3a6:	jb     0x40e349
  40e3a8:	shr    BYTE PTR [edi-0x1f8a3df7],1
  40e3ae:	aaa    
  40e3af:	dec    esi
  40e3b0:	retf   0x5654
  40e3b3:	in     eax,0x1f
  40e3b5:	mul    dh
  40e3b7:	aad    0xa2
  40e3b9:	jmp    0xf072ea87
  40e3be:	aas    
  40e3bf:	sar    eax,1
  40e3c1:	cwde   
  40e3c2:	mov    ebp,0xf66fe802
  40e3c7:	jp     0x40e40d
  40e3c9:	sti    
  40e3ca:	rcr    DWORD PTR ss:[ebx+0x37],cl
  40e3ce:	sbb    DWORD PTR [ecx],ecx
  40e3d0:	cmp    edi,DWORD PTR ds:0x79d42e27
  40e3d6:	dec    esp
  40e3d7:	or     cl,bl
  40e3d9:	fs jb  0x40e37b
  40e3dc:	push   eax
  40e3dd:	or     esi,DWORD PTR [eax+0x142817ed]
  40e3e3:	fldcw  WORD PTR [ecx+0x2d908000]
  40e3e9:	mov    al,0xf1
  40e3eb:	ret    
  40e3ec:	push   ebp
  40e3ed:	cs stos BYTE PTR es:[edi],al
  40e3ef:	mov    al,0x5
  40e3f1:	gs mov dl,0x90
  40e3f4:	fstp   st(2)
  40e3f6:	fwait
  40e3f7:	clc    
  40e3f8:	sbb    eax,0xb2ec6034
  40e3fd:	je     0x40e3aa
  40e3ff:	inc    eax
  40e400:	(bad)  
  40e401:	rcl    dl,cl
  40e403:	or     esp,DWORD PTR [edi]
  40e405:	mov    esi,0x6b961374
  40e40a:	adc    ah,cl
  40e40c:	add    BYTE PTR [ebx],bh
  40e40e:	mov    edi,0x4c967c4c
  40e413:	sbb    bl,bh
  40e415:	hlt    
  40e416:	into   
  40e417:	push   esi
  40e418:	fadd   DWORD PTR [ecx+0x45]
  40e41b:	ins    BYTE PTR es:[edi],dx
  40e41c:	inc    esp
  40e41d:	into   
  40e41e:	ss dec ecx
  40e420:	xor    dh,dl
  40e422:	xor    eax,0x820cfa2a
  40e427:	(bad)  
  40e428:	(bad)  
  40e429:	jecxz  0x40e449
  40e42b:	cli    
  40e42c:	mov    al,ds:0xb99a439d
  40e431:	or     al,BYTE PTR [esi+esi*8]
  40e434:	mov    WORD PTR [ecx],ss
  40e436:	ja     0x40e43b
  40e438:	or     ecx,esp
  40e43a:	inc    esp
  40e43b:	and    edi,ebx
  40e43d:	pop    es
  40e43e:	aad    0xd3
  40e440:	pop    ebp
  40e441:	das    
  40e442:	push   ss
  40e443:	(bad)  
  40e444:	mov    es,ecx
  40e446:	aaa    
  40e447:	add    al,0x97
  40e449:	aaa    
  40e44a:	sub    bh,BYTE PTR [edi]
  40e44c:	xor    eax,esi
  40e44e:	push   cs
  40e44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e450:	inc    DWORD PTR [ebx+0x11]
  40e453:	pop    eax
  40e454:	nop
  40e455:	lock or DWORD PTR [ebx-0x4ddf81c1],eax
  40e45c:	cmp    esi,0xffffff8e
  40e45f:	push   ss
  40e460:	pop    ss
  40e461:	add    al,0xa7
  40e463:	xchg   edx,eax
  40e464:	jmp    0x40e4e2
  40e466:	ins    DWORD PTR es:[edi],dx
  40e467:	into   
  40e468:	shr    DWORD PTR ds:0xf28c87b3,0xad
  40e46f:	sbb    BYTE PTR [esi+0x775e7290],ch
  40e475:	repnz icebp 
  40e477:	(bad)  
  40e478:	mov    esp,0xd0de4e3f
  40e47d:	inc    edx
  40e47e:	mov    esi,0xddb4958b
  40e483:	ins    DWORD PTR es:[edi],dx
  40e484:	pop    ds
  40e485:	xchg   esi,eax
  40e486:	aas    
  40e487:	outs   dx,BYTE PTR ds:[esi]
  40e488:	pop    ds
  40e489:	aam    0x55
  40e48b:	in     eax,dx
  40e48c:	inc    eax
  40e48d:	cmc    
  40e48e:	mov    ecx,0x7123e51b
  40e493:	xchg   ecx,eax
  40e494:	daa    
  40e495:	xchg   edx,eax
  40e496:	gs out dx,al
  40e498:	sbb    dh,dl
  40e49a:	dec    ebx
  40e49b:	aam    0x95
  40e49d:	call   0x9769:0xbffec487
  40e4a4:	shl    ebx,1
  40e4a6:	pop    eax
  40e4a7:	bound  esp,QWORD PTR [ebx+0x7c]
  40e4aa:	shl    esp,cl
  40e4ac:	inc    ecx
  40e4ad:	sub    al,0xa4
  40e4af:	in     al,0xf1
  40e4b1:	push   eax
  40e4b2:	cwde   
  40e4b3:	loope  0x40e500
  40e4b5:	mov    ebx,0xdacfb1b1
  40e4ba:	xchg   esi,eax
  40e4bb:	xchg   edi,eax
  40e4bc:	das    
  40e4bd:	(bad)  
  40e4be:	aad    0x59
  40e4c0:	repnz xchg edi,eax
  40e4c2:	jns    0x40e4cf
  40e4c4:	dec    ecx
  40e4c5:	mov    dl,ch
  40e4c7:	add    eax,edx
  40e4c9:	jg     0x40e46c
  40e4cb:	les    edi,FWORD PTR [eax+0x4deb96aa]
  40e4d1:	scas   al,BYTE PTR es:[edi]
  40e4d2:	test   BYTE PTR [edi],ch
  40e4d4:	or     al,0x49
  40e4d6:	jle    0x40e47b
  40e4d8:	jle    0x40e4bf
  40e4da:	std    
  40e4db:	icebp  
  40e4dc:	int    0xdd
  40e4de:	fadd   QWORD PTR [eax+0x3253b3fb]
  40e4e4:	sbb    ebp,DWORD PTR [eax+0x3fbb7576]
  40e4ea:	or     esi,DWORD PTR [eax-0x7a]
  40e4ed:	push   edx
  40e4ee:	pop    ebp
  40e4ef:	push   edi
  40e4f0:	dec    edx
  40e4f1:	call   0xdde57353
  40e4f6:	xchg   BYTE PTR [esi],dh
  40e4f8:	cmp    dl,bl
  40e4fa:	icebp  
  40e4fb:	mov    esp,0x9795974b
  40e500:	ficom  DWORD PTR [eax]
  40e502:	xchg   DWORD PTR [ecx+esi*1-0x57f057a1],esi
  40e509:	(bad)  
  40e50a:	test   al,0xf7
  40e50c:	pop    ds
  40e50d:	(bad)  
  40e50e:	not    BYTE PTR [eax-0x7b7b81c]
  40e514:	cld    
  40e515:	in     eax,dx
  40e516:	and    BYTE PTR [esp+esi*1],cl
  40e519:	icebp  
  40e51a:	mov    ebx,0x5d93c50
  40e51f:	ins    BYTE PTR es:[edi],dx
  40e520:	sub    esp,DWORD PTR [edx+ebp*1-0x4e]
  40e524:	pop    ds
  40e525:	jmp    0x14f8:0x1011f37a
  40e52c:	add    eax,0x6c07c04f
  40e531:	imul   edx,DWORD PTR [edx+0x4131d87e],0xdb9be5cf
  40e53b:	jmp    0x6f28dcec
  40e540:	sbb    BYTE PTR [ebx-0x3ec9929],dh
  40e546:	jns    0x40e578
  40e548:	call   0xfe5a:0x422c6072
  40e54f:	lods   al,BYTE PTR ds:[esi]
  40e550:	popf   
  40e551:	mov    dl,BYTE PTR [eax+ebp*1+0x3c3fe569]
  40e558:	inc    esi
  40e559:	je     0x40e4fb
  40e55b:	cmp    DWORD PTR [edx+0x1915295c],0xffffff82
  40e562:	ss pushf 
  40e564:	mov    ebx,0x8958aa6a
  40e569:	adc    eax,0x50e92c6d
  40e56e:	scas   eax,DWORD PTR es:[edi]
  40e56f:	hlt    
  40e570:	sub    al,BYTE PTR [eax+0xd6dc82c]
  40e576:	imul   DWORD PTR [ecx+0x6c22c01e]
  40e57c:	out    dx,eax
  40e57d:	jo     0x40e5c4
  40e57f:	pop    edi
  40e580:	imul   ecx,DWORD PTR [esi-0x70fdf9],0x8900f13f
  40e58a:	xor    BYTE PTR [esi-0xa79cded],bl
  40e590:	jl     0x40e516
  40e592:	jns    0x40e54d
  40e594:	pop    edx
  40e595:	add    DWORD PTR [ecx],esi
  40e597:	pop    ebx
  40e598:	popf   
  40e599:	sbb    ah,BYTE PTR [ecx]
  40e59b:	push   esi
  40e59c:	mov    ds:0x75563f41,al
  40e5a1:	add    ebx,DWORD PTR [eax-0x59]
  40e5a4:	push   0xa61be790
  40e5a9:	adc    ch,BYTE PTR [ebx-0x27911623]
  40e5af:	lods   al,BYTE PTR ds:[esi]
  40e5b0:	jg     0x40e60b
  40e5b2:	mov    esp,0x16de19b2
  40e5b7:	ret    
  40e5b8:	vmwrite ebx,DWORD PTR ds:0xc12b32c0
  40e5bf:	leave  
  40e5c0:	mov    bh,0x4b
  40e5c2:	int3   
  40e5c3:	outs   dx,DWORD PTR ds:[esi]
  40e5c4:	not    DWORD PTR [esi]
  40e5c6:	cmp    BYTE PTR [ecx+0x4db6e3f],0x72
  40e5cd:	cmp    eax,DWORD PTR [edi-0x6d9d976e]
  40e5d3:	jmp    0x40e577
  40e5d5:	das    
  40e5d6:	or     DWORD PTR [edx],eax
  40e5d8:	stos   BYTE PTR es:[edi],al
  40e5d9:	ins    DWORD PTR es:[edi],dx
  40e5da:	mov    eax,0xeeaf2e88
  40e5df:	jne    0x40e5b9
  40e5e1:	pusha  
  40e5e2:	cmp    esi,DWORD PTR [ecx]
  40e5e4:	jae    0x40e643
  40e5e6:	sub    eax,0x465845de
  40e5eb:	jecxz  0x40e5b6
  40e5ed:	sti    
  40e5ee:	lock (bad) 
  40e5f0:	pop    esp
  40e5f1:	jl     0x40e661
  40e5f3:	adc    DWORD PTR [eax],edx
  40e5f5:	leave  
  40e5f6:	inc    ebp
  40e5f7:	jp     0x40e5c4
  40e5f9:	pop    ecx
  40e5fa:	das    
  40e5fb:	cmp    eax,DWORD PTR [eax]
  40e5fd:	outs   dx,DWORD PTR ds:[esi]
  40e5fe:	mov    cl,0x26
  40e600:	push   eax
  40e601:	push   ss
  40e602:	mov    ecx,0xd27e1703
  40e607:	in     eax,0x38
  40e609:	ja     0x40e59f
  40e60b:	xchg   edi,eax
  40e60c:	lock daa 
  40e60e:	call   DWORD PTR [edx]
  40e610:	or     eax,0x907a19b7
  40e615:	aaa    
  40e616:	jbe    0x40e677
  40e618:	and    eax,0xd2bd8fdf
  40e61d:	retf   
  40e61e:	mov    esp,ds
  40e620:	leave  
  40e621:	or     edi,ebp
  40e623:	pushf  
  40e624:	and    cl,bl
  40e626:	and    esp,DWORD PTR [esi-0x27da0292]
  40e62c:	sahf   
  40e62d:	cmp    BYTE PTR [ebp-0x58],cl
  40e630:	add    eax,0x460940fd
  40e635:	jg     0x40e5e8
  40e637:	xchg   ecx,eax
  40e638:	jg     0x40e663
  40e63a:	cs push es
  40e63c:	mov    eax,0xb830626f
  40e641:	dec    esp
  40e642:	dec    ebx
  40e643:	inc    ecx
  40e644:	ins    DWORD PTR es:[edi],dx
  40e645:	pop    ss
  40e646:	push   ss
  40e647:	and    ch,BYTE PTR [edi]
  40e649:	loope  0x40e68a
  40e64b:	lahf   
  40e64c:	les    ebp,FWORD PTR [ecx]
  40e64e:	jo     0x40e65e
  40e650:	into   
  40e651:	arpl   WORD PTR [ebp+eax*1+0x5c],ax
  40e655:	std    
  40e656:	jbe    0x40e66d
  40e658:	pop    ebx
  40e659:	pop    es
  40e65a:	scas   al,BYTE PTR es:[edi]
  40e65b:	mov    bl,0x92
  40e65d:	pop    es
  40e65e:	mov    ecx,0x6da42df9
  40e663:	jl     0x40e657
  40e665:	and    eax,0x3f099558
  40e66a:	add    DWORD PTR [ecx],edx
  40e66c:	ficomp WORD PTR [edi]
  40e66e:	fidivr DWORD PTR [edi]
  40e670:	or     eax,0xbd696e4c
  40e675:	bswap  ebx
  40e677:	sahf   
  40e678:	bound  eax,QWORD PTR [edi+0xeabdf69]
  40e67e:	inc    esi
  40e67f:	jb     0x40e657
  40e681:	cli    
  40e682:	stc    
  40e683:	cmp    eax,DWORD PTR [ebx-0x265cbd37]
  40e689:	add    esi,DWORD PTR [eax-0x5ea6f4a3]
  40e68f:	xchg   ebp,eax
  40e690:	cli    
  40e691:	xchg   esi,eax
  40e692:	imul   eax
  40e694:	xchg   ecx,eax
  40e695:	cmc    
  40e696:	dec    esp
  40e697:	xchg   ebp,eax
  40e698:	adc    BYTE PTR [eax],dh
  40e69a:	int3   
  40e69b:	ret    0x5bc3
  40e69e:	cwde   
  40e69f:	bswap  ecx
  40e6a1:	adc    al,0x2
  40e6a3:	dec    edi
  40e6a4:	sbb    ah,bl
  40e6a6:	stc    
  40e6a7:	fs pop edx
  40e6a9:	mov    ah,cl
  40e6ab:	(bad)  
  40e6ad:	jns    0x40e6b6
  40e6af:	push   ebp
  40e6b0:	cmp    BYTE PTR [eax+0x37],bh
  40e6b3:	sub    eax,0x16cf8c59
  40e6b8:	push   ss
  40e6b9:	push   ecx
  40e6ba:	jne    0x40e66e
  40e6bc:	dec    esp
  40e6bd:	fucomi st,st(7)
  40e6bf:	popf   
  40e6c0:	xor    dh,BYTE PTR [ecx-0x34]
  40e6c3:	ret    
  40e6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c5:	xchg   esi,eax
  40e6c6:	mov    dh,0x41
  40e6c8:	ja     0x40e71a
  40e6ca:	mov    eax,0x4de22a0d
  40e6cf:	push   eax
  40e6d0:	add    al,0xcf
  40e6d2:	add    esi,DWORD PTR ds:0x58d32a3e
  40e6d8:	js     0x40e68b
  40e6da:	jl     0x40e752
  40e6dc:	mov    ebx,0x823761b6
  40e6e1:	cmp    al,0x1e
  40e6e3:	enter  0x3b4d,0x48
  40e6e7:	add    BYTE PTR [ecx+0x2a14160],ch
  40e6ed:	les    edx,FWORD PTR [edi-0x38]
  40e6f0:	mov    esi,DWORD PTR [edx+0x2c]
  40e6f3:	das    
  40e6f4:	inc    ebp
  40e6f5:	sbb    DWORD PTR [eax-0x48765984],ecx
  40e6fb:	mov    edx,0x7f449110
  40e700:	enter  0x7a78,0x59
  40e704:	dec    ecx
  40e705:	outs   dx,DWORD PTR ds:[esi]
  40e706:	icebp  
  40e707:	lods   al,BYTE PTR ds:[esi]
  40e708:	xchg   ebp,eax
  40e709:	out    0xe0,al
  40e70b:	loope  0x40e747
  40e70d:	lock xor ecx,DWORD PTR [ebx+0x61]
  40e711:	aaa    
  40e712:	retf   
  40e713:	add    eax,0x8bcd7378
  40e718:	xchg   ebx,eax
  40e719:	(bad)
  40e71d:	jmp    0x915e:0x4c54de0
  40e724:	push   es
  40e725:	mov    bl,0x81
  40e727:	xchg   DWORD PTR [eax-0x5406b65b],esi
  40e72d:	cdq    
  40e72e:	inc    esi
  40e72f:	scas   eax,DWORD PTR es:[edi]
  40e730:	adc    eax,0x1a2a41fc
  40e735:	sbb    eax,DWORD PTR [esi]
  40e737:	fldcw  WORD PTR [esi+0x23]
  40e73a:	ss jno 0x40e761
  40e73d:	sub    DWORD PTR [esi+esi*4+0x74eab708],ebp
  40e744:	stos   BYTE PTR es:[edi],al
  40e745:	fld    QWORD PTR [eax]
  40e747:	mov    edi,0xfc6bbc02
  40e74c:	gs inc ebx
  40e74e:	repz mov edx,0x380e3b6f
  40e754:	push   ds
  40e755:	dec    eax
  40e756:	sub    ch,BYTE PTR [ebx]
  40e758:	ss xchg DWORD PTR fs:[ecx],esi
  40e75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e75d:	inc    ebx
  40e75e:	out    0x9d,eax
  40e760:	mov    dh,0xf3
  40e762:	mov    cl,0x6f
  40e764:	jecxz  0x40e7c2
  40e766:	pushf  
  40e767:	(bad)  
  40e768:	jbe    0x40e7b9
  40e76a:	imul   ecx,ecx,0x7fe590ef
  40e770:	shl    DWORD PTR [edx+0x74],0x2f
  40e774:	pop    esp
  40e775:	jecxz  0x40e721
  40e777:	mov    eax,0x3905b224
  40e77c:	cmp    ebp,DWORD PTR [ecx-0x6f]
  40e77f:	cmp    DWORD PTR [edx],0x56b2f2a9
  40e785:	add    DWORD PTR [ebp+eax*2+0x7b],ebp
  40e789:	lock neg DWORD PTR [ebx+edx*4-0x6806c9cd]
  40e791:	(bad)  
  40e792:	xor    al,0xde
  40e794:	push   eax
  40e795:	dec    edi
  40e796:	inc    esp
  40e797:	mov    ebp,cs
  40e799:	dec    ecx
  40e79a:	ins    BYTE PTR es:[edi],dx
  40e79b:	push   esi
  40e79c:	loop   0x40e7fb
  40e79e:	fist   DWORD PTR [ebp+edi*4-0x16]
  40e7a2:	fwait
  40e7a3:	cmp    ch,BYTE PTR [ebp+0x5d]
  40e7a6:	sbb    bl,al
  40e7a8:	or     ebx,DWORD PTR [esi-0x60]
  40e7ab:	std    
  40e7ac:	adc    BYTE PTR [ecx+0x43],0x78
  40e7b0:	(bad)  [ebx+0x15]
  40e7b3:	push   edx
  40e7b4:	push   ebp
  40e7b5:	fisubr DWORD PTR [esi]
  40e7b7:	rcl    DWORD PTR [ebp+0x23],0x6
  40e7bb:	je     0x40e742
  40e7bd:	adc    BYTE PTR [edi-0x1e],al
  40e7c0:	fimul  DWORD PTR [eax+0x35]
  40e7c3:	out    dx,al
  40e7c4:	pop    ecx
  40e7c5:	inc    edx
  40e7c6:	adc    eax,0x64488b06
  40e7cb:	test   al,0x18
  40e7cd:	mov    bl,0xc
  40e7cf:	adc    dh,BYTE PTR [ecx]
  40e7d1:	xor    ebp,ebx
  40e7d3:	pop    es
  40e7d4:	call   0x403c:0xc3de8f45
  40e7db:	sub    al,0xbc
  40e7dd:	imul   esp,DWORD PTR [edi],0x2283d253
  40e7e3:	std    
  40e7e4:	xlat   BYTE PTR ds:[ebx]
  40e7e5:	(bad)
  40e7e8:	cmp    dh,BYTE PTR [esi-0xfea7c41]
  40e7ee:	jmp    0x40e84c
  40e7f0:	xlat   BYTE PTR ds:[ebx]
  40e7f1:	(bad)  
  40e7f2:	jl     0x40e7f6
  40e7f4:	sbb    al,ch
  40e7f6:	xor    ebp,ecx
  40e7f8:	es xchg ebp,eax
  40e7fa:	test   DWORD PTR [edx],0xd908009d
  40e800:	out    dx,eax
  40e801:	sub    edx,DWORD PTR [edx-0x67]
  40e804:	mov    al,0xe9
  40e806:	jbe    0x40e7ba
  40e808:	mov    bl,0x7a
  40e80a:	test   edi,eax
  40e80c:	mov    al,0x5c
  40e80e:	(bad)  
  40e80f:	out    dx,eax
  40e810:	pop    esi
  40e811:	shl    DWORD PTR [edx-0x1ae36ecf],0x6d
  40e818:	pop    edx
  40e819:	lds    ebx,FWORD PTR ds:0xdc5788d5
  40e81f:	jp     0x40e8a0
  40e821:	mov    esp,0xa93fe84f
  40e826:	push   0x416af137
  40e82b:	ficomp WORD PTR [ebp+0xc7ccc91]
  40e831:	xchg   BYTE PTR [esi-0x2e],dl
  40e834:	jg     0x40e7f2
  40e836:	and    ecx,ecx
  40e838:	js     0x40e86e
  40e83a:	push   0x38fd86e8
  40e83f:	popa   
  40e840:	cmp    bl,BYTE PTR [edx+0x18]
  40e843:	jo     0x40e88a
  40e845:	scas   eax,DWORD PTR es:[edi]
  40e846:	(bad)  [edi]
  40e848:	loopne 0x40e89f
  40e84a:	push   edi
  40e84b:	pop    ss
  40e84c:	(bad)  
  40e84d:	popf   
  40e84e:	fcom   st(1)
  40e850:	dec    dx
  40e852:	dec    ecx
  40e853:	les    edi,FWORD PTR [edi+0x635aceba]
  40e859:	mov    es,esp
  40e85b:	inc    esp
  40e85c:	stc    
  40e85d:	cmc    
  40e85e:	add    bh,BYTE PTR [ecx]
  40e860:	in     eax,dx
  40e861:	xchg   esp,eax
  40e862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e863:	pop    edx
  40e864:	call   0x8a00a8dd
  40e869:	fsub   QWORD PTR [edi*8-0x7e5f5f56]
  40e870:	xchg   ecx,eax
  40e871:	iret   
  40e872:	cli    
  40e873:	out    0x80,al
  40e875:	mov    ebx,0x379d6ed4
  40e87a:	into   
  40e87b:	pop    esi
  40e87c:	push   ds
  40e87d:	jp     0x40e820
  40e87f:	leave  
  40e880:	popf   
  40e881:	imul   ebp
  40e883:	push   esp
  40e884:	xchg   DWORD PTR [ebx+ebx*1],esp
  40e887:	fs test eax,0xb4a3bd21
  40e88d:	imul   esi,DWORD PTR [ecx+ebx*4],0x526e735f
  40e894:	cdq    
  40e895:	mov    esi,0xe5438ef1
  40e89a:	dec    edi
  40e89b:	dec    ecx
  40e89c:	xchg   ecx,eax
  40e89d:	loop   0x40e829
  40e89f:	test   al,0x8a
  40e8a1:	lahf   
  40e8a2:	or     al,0x60
  40e8a4:	xchg   esp,eax
  40e8a5:	repz and al,0x1e
  40e8a8:	mov    esi,0x8eddccea
  40e8ad:	jno    0x40e881
  40e8af:	pop    esi
  40e8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b1:	mov    esp,0x38da2917
  40e8b6:	dec    esi
  40e8b7:	es out 0x21,al
  40e8ba:	push   eax
  40e8bb:	pop    esp
  40e8bc:	fs mov ebx,0x7074c88e
  40e8c2:	push   ss
  40e8c3:	jge    0x40e864
  40e8c5:	or     eax,0x822446f0
  40e8ca:	cmp    DWORD PTR [ebp-0x36545d8e],0xba66873d
  40e8d4:	add    eax,0x42c0120f
  40e8d9:	push   ds
  40e8da:	dec    edi
  40e8db:	shl    dh,1
  40e8dd:	xor    esi,DWORD PTR [edi-0x1b2f7983]
  40e8e3:	mov    WORD PTR [edi],cs
  40e8e5:	pop    ecx
  40e8e6:	jns    0x40e91f
  40e8e8:	cli    
  40e8e9:	sbb    eax,0x38b7d19b
  40e8ee:	and    edi,DWORD PTR ss:[ebx-0x178fbe1f]
  40e8f5:	js     0x40e936
  40e8f7:	gs (bad) 
  40e8f9:	push   ds
  40e8fa:	sahf   
  40e8fb:	push   edi
  40e8fc:	mov    dl,BYTE PTR [ecx+0x73]
  40e8ff:	pushf  
  40e900:	sbb    DWORD PTR [edx+ecx*1],ecx
  40e903:	xchg   esp,eax
  40e904:	cmp    BYTE PTR [ecx],al
  40e906:	into   
  40e907:	xchg   edi,eax
  40e908:	addr16 pop ds
  40e90a:	pop    edx
  40e90b:	out    dx,eax
  40e90c:	mov    BYTE PTR [edx],bl
  40e90e:	xor    DWORD PTR [edi],ecx
  40e910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e911:	test   al,0xdd
  40e913:	sbb    DWORD PTR [ebx-0x77e4df8e],ebx
  40e919:	push   ss
  40e91a:	and    bl,bh
  40e91c:	jnp    0x40e932
  40e91e:	outs   dx,DWORD PTR ds:[esi]
  40e91f:	pop    ss
  40e920:	cmp    al,BYTE PTR [eax+0x4a]
  40e923:	inc    esi
  40e924:	test   eax,0xb1e65bb4
  40e929:	repz cmp cl,bh
  40e92c:	js     0x40e8de
  40e92e:	sbb    BYTE PTR [edx+eax*4-0x1792f0ee],dh
  40e935:	hlt    
  40e936:	jecxz  0x40e992
  40e938:	jg     0x40e969
  40e93a:	mov    ?,WORD PTR [ebp+0x2cd7571c]
  40e940:	pop    edi
  40e941:	mov    ebp,0x6bd132f
  40e946:	adc    dl,al
  40e948:	mov    dh,0x39
  40e94a:	mov    bh,ch
  40e94c:	stc    
  40e94d:	jae    0x40e95b
  40e94f:	bnd call 0x7f7c7011
  40e955:	test   eax,0x61b6731a
  40e95a:	out    dx,al
  40e95b:	xchg   ebp,eax
  40e95c:	xlat   BYTE PTR ds:[ebx]
  40e95d:	scas   eax,DWORD PTR es:[edi]
  40e95e:	add    al,0xdd
  40e960:	gs out dx,eax
  40e962:	stos   BYTE PTR es:[edi],al
  40e963:	push   ds
  40e964:	clc    
  40e965:	loope  0x40e906
  40e967:	and    edi,ebx
  40e969:	sub    edi,DWORD PTR [esi-0x3a62d92]
  40e96f:	pop    esi
  40e970:	test   eax,0x603c21cc
  40e975:	into   
  40e976:	push   0xffffff9f
  40e978:	push   es
  40e979:	mov    bh,BYTE PTR [ecx+0x43]
  40e97c:	push   ebx
  40e97d:	into   
  40e97e:	(bad)  
  40e97f:	jp     0x40e987
  40e981:	push   edi
  40e982:	adc    BYTE PTR [ecx+edx*4-0x12123b59],bh
  40e989:	push   esi
  40e98a:	mov    al,ds:0xb5314b13
  40e98f:	rol    edx,cl
  40e991:	jo     0x40ea12
  40e993:	jmp    0x40e918
  40e995:	aam    0x6
  40e997:	jg     0x40e919
  40e999:	fisttp QWORD PTR [eax-0x7f0d7b65]
  40e99f:	sbb    esi,DWORD PTR [edi-0x50288299]
  40e9a5:	adc    BYTE PTR [eax],ah
  40e9a7:	sbb    al,0xe9
  40e9a9:	push   cs
  40e9aa:	out    dx,al
  40e9ab:	jge    0x40e94e
  40e9ad:	sahf   
  40e9ae:	outs   dx,DWORD PTR ds:[esi]
  40e9af:	(bad)  
  40e9b0:	std    
  40e9b1:	out    dx,eax
  40e9b2:	push   0x579faaf4
  40e9b7:	stos   BYTE PTR es:[edi],al
  40e9b8:	adc    eax,ebx
  40e9ba:	fcomp  QWORD PTR [esi+ebp*1+0x7e27aba0]
  40e9c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c2:	xchg   ebp,eax
  40e9c3:	sti    
  40e9c4:	or     BYTE PTR [ebx-0x40019af7],dh
  40e9ca:	ins    DWORD PTR es:[edi],dx
  40e9cb:	push   ss
  40e9cc:	lock out 0xef,al
  40e9cf:	pop    esi
  40e9d0:	add    ch,BYTE PTR [eax+0x52]
  40e9d3:	jge    0x40e9e3
  40e9d5:	addr16 push 0x834031b0
  40e9db:	jb     0x40e99f
  40e9dd:	sbb    BYTE PTR cs:[edx-0x5ee63fdb],bl
  40e9e4:	call   0x9ddd:0x1e530754
  40e9eb:	les    esi,FWORD PTR [edi+ebx*1+0x1c]
  40e9ef:	mov    ds:0xf9f847fe,al
  40e9f4:	push   ebx
  40e9f5:	dec    esp
  40e9f6:	cmp    DWORD PTR [ebx],esi
  40e9f8:	sar    DWORD PTR [edx+eax*1-0x65c72c88],cl
  40e9ff:	stc    
  40ea00:	add    eax,0x1b596ac6
  40ea05:	dec    esi
  40ea06:	jns    0x40e9c8
  40ea08:	aaa    
  40ea09:	fdiv   DWORD PTR [edi+ecx*2]
  40ea0c:	fidiv  DWORD PTR [edx]
  40ea0e:	jle    0x40ea22
  40ea10:	mov    bh,0xd8
  40ea12:	cdq    
  40ea13:	jle    0x40ea7e
  40ea15:	xlat   BYTE PTR ds:[ebx]
  40ea16:	fwait
  40ea17:	cs mov ebp,0xf09b0a82
  40ea1d:	arpl   WORD PTR [ecx],bx
  40ea1f:	xor    edi,DWORD PTR [esi-0x3a]
  40ea22:	mov    cl,0xc7
  40ea24:	shl    BYTE PTR [ebp-0x14],cl
  40ea27:	retf   
  40ea28:	add    esp,DWORD PTR ss:[eax]
  40ea2b:	dec    ecx
  40ea2c:	ins    DWORD PTR es:[edi],dx
  40ea2d:	jle    0x40ea05
  40ea2f:	aad    0xc1
  40ea31:	ret    
  40ea32:	cmp    DWORD PTR ds:0xd8f52eb1,eax
  40ea38:	fstp   QWORD PTR [eax]
  40ea3a:	jb     0x40ea0e
  40ea3c:	mul    DWORD PTR [edi-0x4857f728]
  40ea42:	dec    eax
  40ea43:	or     edx,ecx
  40ea45:	mov    edi,0x55627a87
  40ea4a:	iret   
  40ea4b:	mov    ds:0xfbc72695,al
  40ea50:	pop    ss
  40ea51:	push   es
  40ea52:	sbb    edi,DWORD PTR [ecx+0x40]
  40ea55:	(bad)  [ebp+0x46]
  40ea58:	dec    edi
  40ea59:	imul   edx,DWORD PTR [ebx],0xffffffc2
  40ea5c:	xlat   BYTE PTR ds:[ebx]
  40ea5d:	or     esi,DWORD PTR [ebp-0x21]
  40ea60:	std    
  40ea61:	adc    ebp,esp
  40ea63:	int3   
  40ea64:	adc    esi,DWORD PTR [ebx]
  40ea66:	dec    ebp
  40ea67:	(bad)  
  40ea68:	int    0x4b
  40ea6a:	jno    0x40ea35
  40ea6c:	mov    BYTE PTR [esi],dl
  40ea6e:	dec    esp
  40ea6f:	pop    es
  40ea70:	retf   
  40ea71:	icebp  
  40ea72:	push   esi
  40ea73:	mov    dl,0xfe
  40ea75:	icebp  
  40ea76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea77:	sub    edx,edx
  40ea79:	or     esi,0xffffff8f
  40ea7c:	jle    0x40ea0f
  40ea7e:	pop    ss
  40ea7f:	les    ecx,FWORD PTR [ebp-0x6c]
  40ea82:	aad    0xc8
  40ea84:	sbb    BYTE PTR [eax],dh
  40ea86:	or     cl,BYTE PTR [eax]
  40ea88:	inc    esi
  40ea89:	fld    st(7)
  40ea8b:	popf   
  40ea8c:	pop    ebp
  40ea8d:	icebp  
  40ea8e:	jns    0x40ea1a
  40ea90:	push   ebx
  40ea91:	xchg   esi,eax
  40ea92:	in     eax,0x2b
  40ea94:	fcos   
  40ea96:	add    eax,0xe1727562
  40ea9b:	aaa    
  40ea9c:	push   edi
  40ea9d:	lahf   
  40ea9e:	call   0xb31b88ea
  40eaa3:	cmc    
  40eaa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaa5:	loopne 0x40ea56
  40eaa7:	push   edx
  40eaa8:	push   edi
  40eaa9:	jnp    0x40eb0c
  40eaab:	fldenv [esp+edi*4+0x29]
  40eaaf:	xlat   BYTE PTR ds:[ebx]
  40eab0:	dec    edi
  40eab1:	inc    edi
  40eab2:	sahf   
  40eab3:	ficomp DWORD PTR [eax]
  40eab5:	xor    ebx,ecx
  40eab7:	je     0x40ea8b
  40eab9:	sub    eax,0x574c4227
  40eabe:	mov    ds:0xb34588df,al
  40eac3:	outs   dx,BYTE PTR ds:[esi]
  40eac4:	dec    ebx
  40eac5:	inc    eax
  40eac6:	lds    ebx,FWORD PTR [ebp-0x499c528c]
  40eacc:	rol    DWORD PTR [edi+0x37105e42],cl
  40ead2:	(bad)  [edx-0x4a]
  40ead5:	push   cs
  40ead6:	retf   
  40ead7:	cdq    
  40ead8:	test   DWORD PTR [edx+0x6673b016],ebp
  40eade:	fs retf 0xec4d
  40eae2:	lahf   
  40eae3:	inc    ecx
  40eae4:	sub    eax,0x7b1807b8
  40eae9:	(bad)  
  40eaea:	jp     0x40eb31
  40eaec:	inc    esi
  40eaed:	jb     0x40eaa1
  40eaef:	pop    ecx
  40eaf0:	loop   0x40eb0e
  40eaf2:	cwde   
  40eaf3:	xchg   DWORD PTR [ebx+0x5b],edx
  40eaf6:	jb     0x40eb2f
  40eaf8:	in     eax,0x28
  40eafa:	dec    ebx
  40eafb:	js     0x40eaca
  40eafd:	(bad)  
  40eafe:	push   es
  40eaff:	xchg   DWORD PTR [esi],ebp
  40eb01:	sar    DWORD PTR [ecx-0x8522a72],1
  40eb07:	mov    dl,0xa6
  40eb09:	jl     0x40eb57
  40eb0b:	cld    
  40eb0c:	and    DWORD PTR [ebp+0x71],eax
  40eb0f:	ins    BYTE PTR es:[edi],dx
  40eb10:	mov    ch,0x7e
  40eb12:	dec    eax
  40eb13:	sub    ecx,DWORD PTR [edi-0x76cb2646]
  40eb19:	cmp    esi,ebx
  40eb1b:	outs   dx,BYTE PTR ds:[esi]
  40eb1c:	xor    DWORD PTR [eax],edx
  40eb1e:	push   ebp
  40eb1f:	mov    eax,ds:0xe52ccf26
  40eb24:	lods   eax,DWORD PTR ds:[esi]
  40eb25:	lds    esp,FWORD PTR [ecx]
  40eb27:	stos   DWORD PTR es:[edi],eax
  40eb28:	adc    DWORD PTR [edi+0x6a36257a],esp
  40eb2e:	lds    edx,FWORD PTR [ecx]
  40eb30:	arpl   WORD PTR ds:0xcb3b18ca,dx
  40eb36:	(bad)  
  40eb37:	test   BYTE PTR [eax+0x6b],0x86
  40eb3b:	hlt    
  40eb3c:	push   edx
  40eb3d:	add    esp,edi
  40eb3f:	xchg   edi,eax
  40eb40:	rcl    BYTE PTR ds:[eax+edi*4-0x1a],0xe
  40eb46:	mov    bh,0xbe
  40eb48:	xor    bh,BYTE PTR [edx+0x24]
  40eb4b:	and    eax,0x1244de5f
  40eb50:	sub    dh,BYTE PTR [edi-0x26]
  40eb53:	xchg   edx,eax
  40eb54:	jnp    0x13d7aad0
  40eb5a:	je     0x40eb9e
  40eb5c:	push   ecx
  40eb5d:	pop    esp
  40eb5e:	sahf   
  40eb5f:	and    DWORD PTR [edi+edi*4],esp
  40eb62:	mov    dh,0xa4
  40eb64:	and    bl,ch
  40eb66:	or     bh,BYTE PTR [ecx+0x7b]
  40eb69:	add    ecx,DWORD PTR [edx-0x4f]
  40eb6c:	fs cwde 
  40eb6e:	push   cs
  40eb6f:	and    ebp,DWORD PTR [edx+eax*8+0x1000cf2f]
  40eb76:	sub    ecx,DWORD PTR [edx+0x36]
  40eb79:	push   ss
  40eb7a:	in     al,dx
  40eb7b:	jge    0x40eb78
  40eb7d:	pop    edi
  40eb7e:	mov    ch,0x7b
  40eb80:	pop    esp
  40eb81:	mov    edx,DWORD PTR [edi]
  40eb83:	cmp    DWORD PTR ds:0x174a0ad3,eax
  40eb89:	jns    0x40eb72
  40eb8b:	loopne 0x40eb4e
  40eb8d:	(bad)  
  40eb8e:	or     dh,BYTE PTR [edi+0x164fcd8a]
  40eb94:	pop    esi
  40eb95:	fcom   QWORD PTR [ebp-0x7e92d0d8]
  40eb9b:	shl    BYTE PTR [edi+eiz*1],0xbf
  40eb9f:	cmp    DWORD PTR [esi],ebx
  40eba1:	loop   0x40ebe8
  40eba3:	cmp    al,0x9b
  40eba5:	dec    edi
  40eba6:	mov    cl,bl
  40eba8:	imul   ecx,ecx,0xffffffd3
  40ebab:	pop    ss
  40ebac:	jno    0x40eb6b
  40ebae:	sbb    DWORD PTR [esi],ecx
  40ebb0:	or     ch,bl
  40ebb2:	push   ebp
  40ebb3:	sub    eax,0x6308fa59
  40ebb8:	cs mov esi,0x702fd71c
  40ebbe:	pop    ecx
  40ebbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebc0:	inc    ebp
  40ebc1:	(bad)  
  40ebc2:	jmp    0x47d4d95b
  40ebc7:	mul    ah
  40ebc9:	mov    ds:0x6dc2cfd,al
  40ebce:	push   0xffffffbd
  40ebd0:	xchg   esp,eax
  40ebd1:	pop    ecx
  40ebd2:	sbb    ah,BYTE PTR [ebx-0x3c]
  40ebd5:	lods   al,BYTE PTR ds:[esi]
  40ebd6:	(bad)  
  40ebd7:	pop    ecx
  40ebd8:	jnp    0x40ebbc
  40ebda:	loop   0x40ec4b
  40ebdc:	push   ss
  40ebdd:	clc    
  40ebde:	xchg   esi,eax
  40ebdf:	out    0x6e,al
  40ebe1:	popf   
  40ebe2:	xchg   ebx,eax
  40ebe3:	mov    ah,0x87
  40ebe5:	xchg   ebx,eax
  40ebe6:	mov    eax,0x6946856d
  40ebeb:	fst    QWORD PTR [ebp+0x30]
  40ebee:	cmp    BYTE PTR [eax-0x852b36],dh
  40ebf4:	and    esi,DWORD PTR [esi-0x75]
  40ebf7:	in     al,dx
  40ebf8:	dec    ebx
  40ebf9:	in     al,0xa2
  40ebfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebfc:	pop    esi
  40ebfd:	cmp    BYTE PTR [esi+0x4d],dh
  40ec00:	daa    
  40ec01:	(bad)  
  40ec02:	pop    ebp
  40ec03:	pop    esp
  40ec04:	dec    ebx
  40ec05:	les    ebx,FWORD PTR [ebp+0x7]
  40ec08:	pushf  
  40ec09:	scas   al,BYTE PTR es:[edi]
  40ec0a:	ds dec ebx
  40ec0c:	pop    edx
  40ec0d:	ss xor dh,dl
  40ec10:	mov    ebx,DWORD PTR [ebx-0x68041837]
  40ec16:	and    DWORD PTR [edx-0x6142b16f],edx
  40ec1c:	fsub   QWORD PTR [ebp+0x6d5063a9]
  40ec22:	aas    
  40ec23:	das    
  40ec24:	dec    esi
  40ec25:	inc    BYTE PTR [ebx+0x3bb22679]
  40ec2b:	xchg   ebp,eax
  40ec2c:	dec    ebx
  40ec2d:	xor    DWORD PTR [esp+edx*1-0x1e84dc20],ecx
  40ec34:	push   ebx
  40ec35:	and    DWORD PTR [eax-0x629cff21],0xd
  40ec3c:	sbb    dl,al
  40ec3e:	jnp    0x40ec06
  40ec40:	imul   esi,ecx,0x6
  40ec43:	imul   eax,DWORD PTR [esi+0x546e7071],0xe50c908a
  40ec4d:	(bad)  
  40ec4e:	gs pop ecx
  40ec50:	in     al,dx
  40ec51:	mov    al,BYTE PTR [eax+0x6961a80e]
  40ec57:	stos   BYTE PTR es:[edi],al
  40ec58:	shr    BYTE PTR [edi-0x30],0xce
  40ec5c:	dec    esi
  40ec5d:	add    BYTE PTR [esi+0x55],al
  40ec60:	sti    
  40ec61:	pop    eax
  40ec62:	dec    eax
  40ec63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec64:	push   ecx
  40ec65:	enter  0x6bec,0x1a
  40ec69:	dec    esi
  40ec6a:	add    eax,edx
  40ec6c:	ins    DWORD PTR es:[edi],dx
  40ec6d:	jle    0x40ec57
  40ec6f:	jno    0x40ec7a
  40ec71:	pop    edx
  40ec72:	sub    eax,0x2c10c8ec
  40ec77:	and    al,0xf1
  40ec79:	pop    ebp
  40ec7a:	pushf  
  40ec7b:	adc    al,0xb1
  40ec7d:	and    ecx,DWORD PTR [edi+0x46]
  40ec80:	mov    al,0xa7
  40ec82:	pop    esi
  40ec83:	mov    al,0xc3
  40ec85:	ret    
  40ec86:	dec    edx
  40ec87:	dec    edx
  40ec88:	sahf   
  40ec89:	sbb    BYTE PTR [ebx],bl
  40ec8b:	(bad)  [eax+0x373ef61d]
  40ec91:	mov    es,eax
  40ec93:	push   edx
  40ec94:	(bad)  
  40ec95:	out    dx,eax
  40ec96:	imul   ecx,DWORD PTR [ebp-0x5d1d06e8],0xffffffd8
  40ec9d:	pop    edx
  40ec9e:	stos   DWORD PTR es:[edi],eax
  40ec9f:	(bad)  
  40eca0:	dec    ecx
  40eca1:	mov    cl,0xde
  40eca3:	sub    bh,cl
  40eca5:	je     0x40ecc9
  40eca7:	(bad)  
  40eca8:	in     al,0x68
  40ecaa:	cmp    eax,0xed583b09
  40ecaf:	sbb    BYTE PTR [edi+edx*2+0x1d6bb3f8],cl
  40ecb6:	in     eax,0x26
  40ecb8:	push   ecx
  40ecb9:	daa    
  40ecba:	mov    ds:0x934b1b56,al
  40ecbf:	idiv   DWORD PTR [eax-0xe]
  40ecc2:	mov    ebx,0xa3497ff2
  40ecc7:	add    al,0xe0
  40ecc9:	sbb    ebx,DWORD PTR [ebx+0x6598187b]
  40eccf:	(bad)
  40ecd2:	les    edx,FWORD PTR [ecx-0x49d97e10]
  40ecd8:	cmp    dl,ah
  40ecda:	push   es
  40ecdb:	jle    0x40ecdb
  40ecdd:	add    DWORD PTR [ebx-0x3a],edx
  40ece0:	sub    edx,DWORD PTR [ebx]
  40ece2:	retf   0x2a40
  40ece5:	out    0x71,eax
  40ece7:	pop    ebx
  40ece8:	in     al,dx
  40ece9:	xor    edx,DWORD PTR [ebx+0x26fdc96f]
  40ecef:	jmp    0x40ecc5
  40ecf1:	xchg   ebp,eax
  40ecf2:	sub    al,0x3f
  40ecf4:	mov    ds:0x5b5fc125,eax
  40ecf9:	and    BYTE PTR [ebp-0x3c],bl
  40ecfc:	ss xchg esi,eax
  40ecfe:	repnz call 0x340d:0xc874553
  40ed06:	bound  eax,QWORD PTR ds:0xe0077503
  40ed0c:	push   ss
  40ed0d:	pop    eax
  40ed0e:	sbb    dl,BYTE PTR [ebp-0x53]
  40ed11:	mov    al,ds:0x1e749759
  40ed16:	sub    al,0x80
  40ed18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed19:	and    DWORD PTR [ebp+ebp*2-0x3b],edi
  40ed1d:	jge    0x40ed2b
  40ed1f:	inc    ebx
  40ed20:	push   ds
  40ed21:	mov    al,0x8d
  40ed23:	sub    ecx,DWORD PTR [ecx+0x1d8d0a69]
  40ed29:	leave  
  40ed2a:	jge    0x40ed78
  40ed2c:	jp     0x40ed8c
  40ed2e:	pusha  
  40ed2f:	xor    ecx,DWORD PTR [edx]
  40ed31:	add    al,0x9e
  40ed33:	jp     0x40ed78
  40ed35:	hlt    
  40ed36:	invd   
  40ed38:	jns    0x40ece6
  40ed3a:	inc    ecx
  40ed3b:	add    eax,0xaa159f27
  40ed40:	sub    al,0xfc
  40ed42:	jp     0x40ecd1
  40ed44:	test   edx,esi
  40ed46:	inc    ebp
  40ed47:	rcl    DWORD PTR [esi],0xe8
  40ed4a:	dec    esp
  40ed4b:	aam    0xc0
  40ed4d:	push   esp
  40ed4e:	jns    0x40ecf6
  40ed50:	adc    ax,0x331e
  40ed54:	dec    ebp
  40ed55:	xor    esi,esp
  40ed57:	out    dx,eax
  40ed58:	shl    BYTE PTR [ecx-0x2b],0x79
  40ed5c:	iret   
  40ed5d:	scas   eax,DWORD PTR es:[edi]
  40ed5e:	dec    ecx
  40ed5f:	dec    esi
  40ed60:	fnstcw WORD PTR [edi]
  40ed62:	push   eax
  40ed63:	cs mov cl,0xac
  40ed66:	(bad)  [ebx+0x42]
  40ed69:	and    al,0x67
  40ed6b:	sbb    DWORD PTR [edx+edi*1],0x28220c66
  40ed72:	push   0x6c
  40ed74:	js     0x40ed15
  40ed76:	inc    ebx
  40ed77:	adc    al,0x97
  40ed79:	pop    eax
  40ed7a:	mov    BYTE PTR [edi+0x6a],al
  40ed7d:	stc    
  40ed7e:	adc    eax,0x43fa2fee
  40ed83:	bound  esp,QWORD PTR [ecx]
  40ed85:	(bad)  
  40ed86:	rol    ebp,cl
  40ed88:	xor    dl,BYTE PTR [edx-0x196dcf7c]
  40ed8e:	fidivr DWORD PTR [ebx-0x66]
  40ed91:	xchg   edx,eax
  40ed92:	pop    esi
  40ed93:	or     BYTE PTR [ebp+0x5c026374],0xca
  40ed9a:	div    BYTE PTR [eax]
  40ed9c:	ror    BYTE PTR [edx-0x246e617b],cl
  40eda2:	sub    esi,DWORD PTR [esi+0x61]
  40eda5:	adc    ecx,edx
  40eda7:	les    ecx,FWORD PTR gs:[si-0x3bfc]
  40edad:	xor    ecx,DWORD PTR [edi+0x35]
  40edb0:	out    0xb9,al
  40edb2:	add    BYTE PTR [esp+ecx*8],0x3e
  40edb6:	ret    0x7e07
  40edb9:	shl    BYTE PTR [edx-0x66],0x2c
  40edbd:	dec    ebp
  40edbe:	or     DWORD PTR [edi-0x51],0x2de0ecc4
  40edc5:	repz add eax,0x11c75da1
  40edcb:	leave  
  40edcc:	scas   eax,DWORD PTR es:[edi]
  40edcd:	xlat   BYTE PTR ss:[ebx]
  40edcf:	fmul   DWORD PTR [ebx-0x3ca045a1]
  40edd5:	daa    
  40edd6:	cmp    BYTE PTR [edi-0x24],bl
  40edd9:	jne    0x40ed8f
  40eddb:	scas   al,BYTE PTR es:[edi]
  40eddc:	mov    al,ds:0xadbbb60b
  40ede1:	lods   al,BYTE PTR ds:[esi]
  40ede2:	jnp    0x40ee21
  40ede4:	enter  0x8c0b,0x92
  40ede8:	sub    al,0xc8
  40edea:	mov    ecx,0xc97ca236
  40edef:	icebp  
  40edf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf1:	mov    ebx,0x3f45b9da
  40edf6:	mov    cl,0x8c
  40edf8:	mov    ecx,0x45d8941e
  40edfd:	xchg   edx,eax
  40edfe:	add    al,0x4f
  40ee00:	inc    edi
  40ee01:	and    DWORD PTR [eax],ecx
  40ee03:	mul    ebp
  40ee05:	inc    ebp
  40ee06:	sub    dl,BYTE PTR [esi-0x12]
  40ee09:	adc    DWORD PTR [ebp+0x47484651],esi
  40ee0f:	daa    
  40ee10:	das    
  40ee11:	enter  0xbdb6,0xfd
  40ee15:	stos   BYTE PTR es:[edi],al
  40ee16:	in     eax,dx
  40ee17:	into   
  40ee18:	mov    dh,cl
  40ee1a:	(bad)  
  40ee1b:	in     al,dx
  40ee1c:	dec    esi
  40ee1d:	push   ecx
  40ee1e:	mov    ah,0x37
  40ee20:	repz xor eax,DWORD PTR [esi-0x3a]
  40ee24:	and    eax,0x29711849
  40ee29:	xor    BYTE PTR [ecx+0x5],bh
  40ee2c:	or     eax,0xa2137480
  40ee31:	fdiv   DWORD PTR [edx+0x2d8e608a]
  40ee37:	mov    WORD PTR [esi-0x571c7d77],?
  40ee3d:	sbb    BYTE PTR [edi-0x64],0x6
  40ee41:	mov    bh,0xd1
  40ee43:	fistp  WORD PTR [eax-0x59]
  40ee46:	iret   
  40ee47:	pop    edi
  40ee48:	adc    eax,edi
  40ee4a:	xchg   ebp,eax
  40ee4b:	repz pop ss
  40ee4d:	xchg   esp,eax
  40ee4e:	fistp  DWORD PTR [eax+edi*1-0x7927477e]
  40ee55:	not    BYTE PTR [ecx+0x6]
  40ee58:	push   esi
  40ee59:	sub    ecx,DWORD PTR ds:0x38c0eda1
  40ee5f:	push   esp
  40ee60:	pop    eax
  40ee61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee62:	mov    ebp,0xb00e78bf
  40ee67:	dec    eax
  40ee68:	dec    ebx
  40ee69:	les    edi,FWORD PTR [esi+0x18e3673e]
  40ee6f:	inc    BYTE PTR [ebx-0x68]
  40ee72:	cmp    ebx,esi
  40ee74:	fsub   DWORD PTR [eax+0x21]
  40ee77:	xchg   edi,eax
  40ee78:	imul   esp,DWORD PTR [eax+0x61],0xffffffdd
  40ee7c:	loopne 0x40eeec
  40ee7e:	mov    ebp,0x38ce3abe
  40ee83:	fyl2x  
  40ee85:	dec    ecx
  40ee86:	popa   
  40ee87:	jns    0x40ee42
  40ee89:	call   0x75cdacfa
  40ee8e:	xchg   al,al
  40ee90:	add    BYTE PTR [ecx+0x24],al
  40ee93:	push   edx
  40ee94:	push   es
  40ee95:	mov    al,ds:0xcda3ebcf
  40ee9a:	aaa    
  40ee9b:	scas   eax,DWORD PTR es:[edi]
  40ee9c:	jecxz  0x40ee69
  40ee9e:	mov    dl,0xad
  40eea0:	in     eax,0x4b
  40eea2:	fild   DWORD PTR [ecx-0x6]
  40eea5:	push   ds
  40eea6:	adc    eax,0xa629878c
  40eeab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeac:	add    DWORD PTR [edx-0x7eb8e9c9],eax
  40eeb2:	mov    bl,0xc3
  40eeb4:	call   0x43b8b930
  40eeb9:	mov    esi,0xee4c899e
  40eebe:	arpl   WORD PTR [eax+eiz*1-0xb13089],di
  40eec5:	xor    al,dh
  40eec7:	cmp    al,0x67
  40eec9:	xchg   esp,eax
  40eeca:	popa   
  40eecb:	pop    esp
  40eecc:	aas    
  40eecd:	jle    0x40eed8
  40eecf:	mov    eax,0x23be5174
  40eed4:	push   DWORD PTR [ecx]
  40eed6:	and    eax,0x81e9e98f
  40eedb:	push   edx
  40eedc:	mov    edx,0x77a6d099
  40eee1:	push   edi
  40eee2:	jle    0x40eea7
  40eee4:	ret    
  40eee5:	push   ss
  40eee6:	out    dx,eax
  40eee7:	loope  0x40ef3e
  40eee9:	sbb    DWORD PTR [ecx],eax
  40eeeb:	xchg   edi,eax
  40eeec:	mov    ecx,0xdb03d08b
  40eef1:	in     al,0xe2
  40eef3:	imul   esi,DWORD PTR [ebx-0x326abfe2],0x1e
  40eefa:	dec    eax
  40eefb:	iret   
  40eefc:	or     esp,DWORD PTR [ecx-0x6a4b77b3]
  40ef02:	repnz loope 0x40eebb
  40ef05:	int    0x13
  40ef07:	stos   BYTE PTR es:[edi],al
  40ef08:	in     al,dx
  40ef09:	sahf   
  40ef0a:	(bad)  
  40ef0b:	mov    ds:0xd433ee6f,al
  40ef10:	push   ecx
  40ef11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef12:	les    esi,FWORD PTR [edi-0x157b1f9a]
  40ef18:	xor    DWORD PTR [esi+0x3c],edi
  40ef1b:	jno    0x40eedb
  40ef1d:	icebp  
  40ef1e:	icebp  
  40ef1f:	rol    edx,0xc3
  40ef22:	fcos   
  40ef24:	xchg   ebx,eax
  40ef25:	scas   eax,DWORD PTR es:[edi]
  40ef26:	xchg   ebp,eax
  40ef27:	adc    ah,BYTE PTR [edx]
  40ef29:	add    dl,BYTE PTR [edx+0x531eb576]
  40ef2f:	or     al,BYTE PTR [edx+0x71]
  40ef32:	and    al,0x9a
  40ef34:	mov    eax,ds:0xa7b43636
  40ef39:	popf   
  40ef3a:	mov    bl,0x6f
  40ef3c:	or     al,0xab
  40ef3e:	mov    esi,0xddd5f0b2
  40ef43:	cmc    
  40ef44:	arpl   WORD PTR [ecx],di
  40ef46:	pusha  
  40ef47:	and    al,0xd1
  40ef49:	out    0x50,eax
  40ef4b:	mov    ch,0x28
  40ef4d:	je     0x40eef7
  40ef4f:	mov    eax,ds:0xa4cbcf6d
  40ef54:	xor    DWORD PTR [eax],0x37
  40ef57:	retf   0x2f0c
  40ef5a:	bound  ebp,QWORD PTR ds:0xbcd1fcca
  40ef60:	fcomp  QWORD PTR [ecx+0x561b1ac]
  40ef66:	mov    dh,0x41
  40ef68:	test   DWORD PTR [esi-0x5b7ec6de],eax
  40ef6e:	aad    0xe
  40ef70:	mov    dh,0x64
  40ef72:	sbb    bh,al
  40ef74:	pop    ecx
  40ef75:	pop    esi
  40ef76:	add    al,0x84
  40ef78:	lahf   
  40ef79:	leave  
  40ef7a:	clc    
  40ef7b:	and    BYTE PTR ds:0x8e35ea96,al
  40ef81:	out    0x9b,eax
  40ef83:	mov    ebx,0xb622c43d
  40ef88:	cli    
  40ef89:	rol    ebx,cl
  40ef8b:	mov    al,0x6d
  40ef8d:	or     al,0xe9
  40ef8f:	test   ebx,esi
  40ef91:	add    BYTE PTR [edx+edx*2+0x47],0x26
  40ef96:	sbb    eax,0x6b482ea7
  40ef9b:	push   ecx
  40ef9c:	mov    ds:0xfe082596,eax
  40efa1:	mov    WORD PTR [eax+0x6],?
  40efa4:	cwde   
  40efa5:	repnz cli 
  40efa7:	icebp  
  40efa8:	xor    al,0x12
  40efaa:	jb     0x40eff0
  40efac:	add    DWORD PTR [eax-0x6b3f2e94],esi
  40efb2:	mov    ch,0xdc
  40efb4:	cli    
  40efb5:	call   0x4434:0x16844351
  40efbc:	pusha  
  40efbd:	sub    al,0x2f
  40efbf:	inc    esi
  40efc0:	xor    BYTE PTR ds:0xb332a5ed,ah
  40efc6:	sub    bh,BYTE PTR [ecx]
  40efc8:	mov    ecx,?
  40efca:	sahf   
  40efcb:	fmul   st,st(0)
  40efcd:	cmc    
  40efce:	ins    BYTE PTR es:[edi],dx
  40efcf:	mov    edi,DWORD PTR [ebp+0x1726c05d]
  40efd5:	pop    ecx
  40efd6:	inc    ebp
  40efd7:	xchg   edi,eax
  40efd8:	and    edx,DWORD PTR [edi-0x6e]
  40efdb:	(bad)  
  40efdc:	pop    ebx
  40efdd:	adc    BYTE PTR [ebx],0x51
  40efe0:	pop    ebx
  40efe1:	adc    edx,DWORD PTR ds:0x2775b5ef
  40efe7:	mov    esp,0x944676d
  40efec:	lods   al,BYTE PTR ds:[esi]
  40efed:	pop    eax
  40efee:	or     al,0xb1
  40eff0:	jmp    0x11e5d1ff
  40eff5:	test   eax,0x3035f928
  40effa:	inc    eax
  40effb:	inc    edi
  40effc:	xchg   esi,eax
  40effd:	call   0x3b86f45a
  40f002:	ins    DWORD PTR es:[edi],dx
  40f003:	mov    eax,ds:0x5fc1b31d
  40f008:	cmp    DWORD PTR [eax],0xc229ca20
  40f00e:	lods   al,BYTE PTR ds:[esi]
  40f00f:	sub    eax,0xa96be652
  40f014:	sub    eax,0x77747735
  40f019:	ret    
  40f01a:	jmp    0xb64a:0xb6b0b7ae
  40f021:	jecxz  0x40f015
  40f023:	arpl   bp,si
  40f025:	jmp    0x40f08f
  40f027:	adc    ebx,ebp
  40f029:	pop    bx
  40f02b:	in     eax,dx
  40f02c:	dec    edi
  40f02d:	and    ch,BYTE PTR [esi-0x3fe1ec1c]
  40f033:	retf   0x788c
  40f036:	mov    bh,0x5c
  40f038:	sub    al,0x8a
  40f03a:	dec    BYTE PTR [ebx]
  40f03c:	(bad)  
  40f03d:	jb     0x40efd0
  40f03f:	xor    cl,BYTE PTR [ecx-0x1a]
  40f042:	jno    0x40f009
  40f044:	(bad)  
  40f045:	mov    bh,0x17
  40f047:	mov    esi,0xd8affc01
  40f04c:	hlt    
  40f04d:	shr    BYTE PTR [edx-0x7b],0xfc
  40f051:	jb     0x40f007
  40f053:	adc    bl,BYTE PTR ds:0x7a026928
  40f059:	or     eax,esi
  40f05b:	adc    edx,DWORD PTR [ebx]
  40f05d:	mov    WORD PTR [edx-0xa],fs
  40f060:	bound  ecx,QWORD PTR ds:0x18741314
  40f066:	mov    edi,0x85a16d50
  40f06b:	mov    esp,0x54059b7
  40f070:	fld    DWORD PTR [ebp+0x36]
  40f073:	fistp  WORD PTR [eax]
  40f075:	xchg   ebx,eax
  40f076:	daa    
  40f077:	pushf  
  40f078:	mov    eax,0xf9d1165a
  40f07d:	lock aaa 
  40f07f:	rol    bh,0x83
  40f082:	or     DWORD PTR [esi],esp
  40f084:	(bad)
  40f087:	jg     0x40f051
  40f089:	dec    ebp
  40f08a:	test   edi,0x6366ad9a
  40f090:	rol    cl,cl
  40f092:	mov    ebx,0xbc62c747
  40f097:	xlat   BYTE PTR ds:[ebx]
  40f098:	clc    
  40f099:	lds    ebx,FWORD PTR [ecx-0x4a]
  40f09c:	cmp    eax,0x94cd36c8
  40f0a1:	push   edx
  40f0a2:	mov    eax,ds:0x697731ac
  40f0a7:	ins    BYTE PTR es:[edi],dx
  40f0a8:	in     eax,0x56
  40f0aa:	mov    ebx,DWORD PTR [esi+0x3]
  40f0ad:	sbb    ebx,DWORD PTR [ecx-0x1d]
  40f0b0:	push   ds
  40f0b1:	adc    DWORD PTR gs:[esp+eax*2+0x6f],ecx
  40f0b6:	adc    eax,0xec224bf0
  40f0bb:	mov    ebx,DWORD PTR fs:[edx+0x4d4be450]
  40f0c2:	xor    al,0xa7
  40f0c4:	xlat   BYTE PTR ds:[ebx]
  40f0c5:	push   edx
  40f0c6:	lahf   
  40f0c7:	mov    ds:0xe672527d,eax
  40f0cc:	jnp    0x40f10f
  40f0ce:	cli    
  40f0cf:	xchg   ecx,eax
  40f0d0:	inc    ebp
  40f0d1:	nop
  40f0d2:	stos   BYTE PTR es:[edi],al
  40f0d3:	push   edx
  40f0d4:	je     0x40f11b
  40f0d6:	fsub   QWORD PTR [ebp+0x19b71398]
  40f0dc:	jb     0x40f14d
  40f0de:	jle    0x40f10f
  40f0e0:	clc    
  40f0e1:	push   cs
  40f0e2:	fsubrp st(2),st
  40f0e4:	or     dh,bl
  40f0e6:	push   sp
  40f0e8:	mov    bl,0xe8
  40f0ea:	pop    ebp
  40f0eb:	fiadd  DWORD PTR [ebp+0xd]
  40f0ee:	aad    0x94
  40f0f0:	test   al,0xbe
  40f0f2:	retf   
  40f0f3:	or     esi,ebx
  40f0f5:	dec    esi
  40f0f6:	loopne 0x40f155
  40f0f8:	sbb    eax,0x28014494
  40f0fd:	rcl    BYTE PTR [ecx+0x2f],cl
  40f100:	pop    eax
  40f101:	inc    ecx
  40f102:	xor    al,0xe7
  40f104:	push   0xfffffff7
  40f106:	or     bl,al
  40f108:	push   0xffffffd8
  40f10a:	xchg   ebp,eax
  40f10b:	pop    esi
  40f10c:	pop    eax
  40f10d:	mov    cl,0x75
  40f10f:	pop    ebp
  40f110:	das    
  40f111:	add    esp,DWORD PTR cs:[eax-0xa]
  40f115:	lea    esp,[ebx-0x7e]
  40f118:	jge    0x40f0bb
  40f11a:	pop    esi
  40f11b:	ret    0xa612
  40f11e:	push   ss
  40f11f:	jns    0x40f0ee
  40f121:	mov    BYTE PTR [edx+0x10],bh
  40f124:	ja     0x40f148
  40f126:	lea    edx,[edi+0x77b93a5a]
  40f12c:	mov    ebx,0x2ccfb0f5
  40f131:	push   0x50
  40f133:	inc    esp
  40f134:	mov    bh,0xd7
  40f136:	sub    eax,0xc9e34ffe
  40f13b:	xlat   BYTE PTR ds:[ebx]
  40f13c:	cmp    edi,DWORD PTR [esp+ecx*8]
  40f13f:	jp     0x40f113
  40f141:	jno    0x40f0f9
  40f143:	dec    esp
  40f144:	add    ebp,DWORD PTR [eax+0x20]
  40f147:	cmp    al,0xd8
  40f149:	inc    edi
  40f14a:	pop    ds
  40f14b:	xlat   BYTE PTR ds:[ebx]
  40f14c:	shl    edx,1
  40f14e:	lods   al,BYTE PTR ds:[esi]
  40f14f:	cmp    DWORD PTR [ebx+eax*1],edi
  40f152:	sub    al,0x4b
  40f154:	push   ss
  40f155:	and    DWORD PTR [ecx-0x549a5d8c],ebx
  40f15b:	imul   edi,DWORD PTR [edx-0x4f],0x7c
  40f15f:	out    0x7,eax
  40f161:	and    al,0xb0
  40f163:	les    esp,FWORD PTR [edi]
  40f165:	call   0xe5c4f7c9
  40f16a:	push   eax
  40f16b:	ret    0x36ee
  40f16e:	popf   
  40f16f:	jmp    0x1452:0x8d987911
  40f176:	dec    edi
  40f177:	mov    ds:0x96a37e1a,eax
  40f17c:	pop    esi
  40f17d:	(bad)  
  40f17e:	cld    
  40f17f:	cmp    ebp,DWORD PTR ds:0xa75d9ffb
  40f185:	pop    ds
  40f186:	popf   
  40f187:	pop    ebx
  40f188:	inc    edx
  40f189:	jmp    0xa7a50bed
  40f18e:	adc    bh,BYTE PTR [esi]
  40f190:	ins    BYTE PTR es:[edi],dx
  40f191:	push   0x14e45ad
  40f196:	xor    DWORD PTR [ecx+0x7ba0b1f1],esi
  40f19c:	mov    dl,0xf9
  40f19e:	mov    bl,0xcc
  40f1a0:	test   edx,edi
  40f1a2:	fiadd  WORD PTR [edi+0x2f64c916]
  40f1a8:	mov    ah,0xea
  40f1aa:	pop    ss
  40f1ab:	inc    eax
  40f1ac:	push   edi
  40f1ad:	pop    eax
  40f1ae:	push   ebx
  40f1af:	clc    
  40f1b0:	jle    0x40f1b4
  40f1b2:	xor    BYTE PTR [edi],al
  40f1b4:	adc    al,0xaf
  40f1b6:	inc    ebp
  40f1b7:	(bad)  
  40f1b8:	and    eax,0x3410427
  40f1bd:	and    BYTE PTR [eax+0x3c],cl
  40f1c0:	mov    DWORD PTR [eax+0x71677d7a],ebp
  40f1c6:	repz xchg edi,eax
  40f1c8:	add    DWORD PTR [ebx+0x57],eax
  40f1cb:	fidivr DWORD PTR ds:0x5d6c1fbc
  40f1d1:	(bad)  [edi-0x55cc74ac]
  40f1d7:	jecxz  0x40f1b8
  40f1d9:	xchg   edi,eax
  40f1da:	es ja  0x40f21a
  40f1dd:	mov    dh,0x0
  40f1df:	mov    edi,0xb1f3836b
  40f1e4:	mov    eax,0x772635ff
  40f1e9:	or     DWORD PTR [esi+0xa5eaa64],ecx
  40f1ef:	dec    edx
  40f1f0:	sar    DWORD PTR [ebx+0x267be53],1
  40f1f6:	push   ecx
  40f1f7:	add    bh,dh
  40f1f9:	les    edx,FWORD PTR [edx]
  40f1fb:	(bad)  
  40f1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1fe:	sbb    eax,0x941ff608
  40f203:	mov    edi,0xedd9dde0
  40f208:	jnp    0x40f1cb
  40f20a:	ret    
  40f20b:	jecxz  0x40f1d9
  40f20d:	je     0x40f1e9
  40f20f:	xchg   ebx,eax
  40f210:	shl    BYTE PTR [ebx+0x1b],1
  40f213:	adc    al,0xcf
  40f215:	xchg   ecx,ebx
  40f217:	into   
  40f218:	mov    edx,DWORD PTR [ebx+0xb0f4fb9]
  40f21e:	out    0x67,al
  40f220:	or     edx,DWORD PTR [ebx]
  40f222:	cwde   
  40f223:	outs   dx,BYTE PTR ds:[esi]
  40f224:	mov    edx,0x6243881d
  40f229:	pop    ss
  40f22a:	push   edi
  40f22b:	mov    ch,BYTE PTR [esi-0x559d2be7]
  40f231:	fisub  DWORD PTR [ebp-0x55]
  40f234:	mov    ah,0x85
  40f236:	fwait
  40f237:	sub    al,0xc6
  40f239:	mov    ecx,0x5252d9f3
  40f23e:	cmp    BYTE PTR [ebp+0x2ff648d7],0x8b
  40f245:	mov    ecx,0x73469fde
  40f24a:	push   eax
  40f24b:	dec    ebp
  40f24c:	repz pop edx
  40f24e:	push   edi
  40f24f:	sbb    BYTE PTR [eax-0x34e05f8e],bh
  40f255:	(bad)  
  40f257:	mov    cl,0x27
  40f259:	add    al,0x1d
  40f25b:	inc    ecx
  40f25c:	inc    ebx
  40f25d:	cld    
  40f25e:	fdivr  QWORD PTR [bp-0x43ed]
  40f263:	ret    
  40f264:	sti    
  40f265:	into   
  40f266:	and    DWORD PTR [ebp-0x9e0b592],0xff330654
  40f270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f271:	sbb    DWORD PTR [ebx],ebx
  40f273:	scas   eax,DWORD PTR es:[edi]
  40f274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f275:	mov    ecx,0x59ed4439
  40f27a:	cmp    eax,eax
  40f27c:	hlt    
  40f27d:	jnp    0x40f24d
  40f27f:	push   cs
  40f280:	in     eax,0x7a
  40f282:	les    eax,FWORD PTR [edi]
  40f284:	jl     0x40f27e
  40f286:	mov    edi,DWORD PTR [eax]
  40f288:	xlat   BYTE PTR ds:[ebx]
  40f289:	push   es
  40f28a:	into   
  40f28b:	shr    DWORD PTR [ecx],cl
  40f28d:	inc    ecx
  40f28e:	das    
  40f28f:	daa    
  40f290:	js     0x40f2b0
  40f292:	out    dx,eax
  40f293:	and    eax,0x3143553e
  40f298:	inc    ecx
  40f299:	mov    al,ds:0xe49b0a1a
  40f29e:	jmp    0x3b660249
  40f2a3:	inc    esp
  40f2a4:	es sbb eax,0x4295b7c6
  40f2aa:	pop    ds
  40f2ab:	or     BYTE PTR [edx],0xfc
  40f2ae:	xchg   ebx,eax
  40f2af:	or     eax,0xb5ee3634
  40f2b4:	pop    ebp
  40f2b5:	fidivr WORD PTR [ecx]
  40f2b7:	inc    edi
  40f2b8:	inc    ecx
  40f2b9:	mov    esi,0x5c8fe038
  40f2be:	(bad)  
  40f2bf:	jmp    0x6d:0xb4a9245b
  40f2c6:	fstp   DWORD PTR [edi+0x7ec56a0b]
  40f2cc:	popf   
  40f2cd:	mov    al,0x54
  40f2cf:	mov    bl,0xfe
  40f2d1:	out    0xe0,eax
  40f2d3:	sub    eax,0xbbee9d17
  40f2d8:	fdivr  DWORD PTR [edx-0x271eb6c]
  40f2de:	(bad)  
  40f2df:	icebp  
  40f2e0:	inc    eax
  40f2e1:	ds loopne 0x40f2d3
  40f2e4:	jmp    FWORD PTR [esi-0x3b]
  40f2e7:	push   ecx
  40f2e8:	jbe    0x40f33a
  40f2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2eb:	mov    gs,WORD PTR [esi+eax*8+0x74]
  40f2ef:	out    0x15,al
  40f2f1:	push   es
  40f2f2:	outs   dx,DWORD PTR ds:[esi]
  40f2f3:	add    BYTE PTR [edx],bh
  40f2f5:	lods   eax,DWORD PTR ds:[esi]
  40f2f6:	lods   eax,DWORD PTR ds:[esi]
  40f2f7:	xlat   BYTE PTR ds:[ebx]
  40f2f8:	(bad)  
  40f2f9:	repz std 
  40f2fb:	xor    eax,0x51373d7d
  40f300:	aam    0xbb
  40f302:	enter  0x486b,0x88
  40f306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f307:	cld    
  40f308:	std    
  40f309:	add    al,0x18
  40f30b:	into   
  40f30c:	mov    fs,WORD PTR [ebp+0x6b7c1ff4]
  40f312:	mov    esp,0x184da397
  40f317:	mov    ecx,0x7c0ae0ac
  40f31c:	sbb    DWORD PTR [esi-0x3d],esi
  40f31f:	mov    edi,0xf915a389
  40f324:	cld    
  40f325:	shl    DWORD PTR [esp+eiz*4],0xd3
  40f329:	scas   eax,DWORD PTR es:[edi]
  40f32a:	inc    eax
  40f32b:	sti    
  40f32c:	mov    DWORD PTR [ebx+eax*4+0x71b26f53],ebx
  40f333:	jbe    0x40f39f
  40f335:	xchg   esp,eax
  40f336:	(bad)  
  40f337:	lock adc DWORD PTR [edi+esi*4-0x4168aeb],esp
  40f33f:	mov    al,0xf4
  40f341:	xchg   ebp,eax
  40f342:	mov    eax,0xac4564e3
  40f347:	xchg   ebx,eax
  40f348:	mov    edx,DWORD PTR [esi-0x5e]
  40f34b:	stc    
  40f34c:	dec    eax
  40f34d:	cmp    eax,0x38628f3b
  40f352:	or     al,0xdb
  40f354:	sahf   
  40f355:	xchg   ebp,eax
  40f356:	test   BYTE PTR [eax-0x14],dl
  40f359:	adc    eax,0x31506106
  40f35e:	jp     0x40f3c6
  40f360:	hlt    
  40f361:	sti    
  40f362:	test   DWORD PTR [ebx-0x1c6dc8e9],ebp
  40f368:	xchg   ebx,eax
  40f369:	jl     0x40f368
  40f36b:	retf   0xc039
  40f36e:	push   0xffffff93
  40f370:	je     0x40f332
  40f372:	mov    esi,0xd919c86a
  40f377:	es sahf 
  40f379:	shl    DWORD PTR [ecx+0x79],0xd1
  40f37d:	cmp    BYTE PTR [ecx],0x56
  40f380:	cs xchg edx,eax
  40f382:	ss (bad) 
  40f385:	xor    eax,0x59298d42
  40f38a:	lahf   
  40f38b:	pushf  
  40f38c:	shl    DWORD PTR [eax-0x50202a2c],cl
  40f392:	or     BYTE PTR ds:0xa4c2c597,0x8f
  40f399:	lods   al,BYTE PTR ds:[esi]
  40f39a:	mov    ch,dl
  40f39c:	pop    ds
  40f39d:	push   es
  40f39e:	cmp    BYTE PTR [esp+ebx*1],ah
  40f3a1:	pop    edi
  40f3a2:	into   
  40f3a3:	aad    0xf0
  40f3a5:	mov    esi,0x75bce9ea
  40f3aa:	(bad)  
  40f3ab:	data16 add al,0x75
  40f3ae:	fstp   TBYTE PTR [ebp-0x7b92359f]
  40f3b4:	repz out dx,al
  40f3b6:	imul   edi,edx,0x12ce3fa9
  40f3bc:	mov    ds:0xb6149627,al
  40f3c1:	(bad)  
  40f3c2:	bswap  esp
  40f3c4:	mov    ds:0xb724dfc3,al
  40f3c9:	pop    esi
  40f3ca:	adc    bl,0xbb
  40f3cd:	push   ebp
  40f3ce:	adc    bh,BYTE PTR [ecx]
  40f3d0:	icebp  
  40f3d1:	inc    esp
  40f3d2:	and    BYTE PTR [eax-0x37],dl
  40f3d5:	rcl    BYTE PTR [esi+edi*2+0x66],cl
  40f3d9:	call   0x8076507a
  40f3de:	dec    esp
  40f3df:	or     ebp,DWORD PTR [esi+edi*2+0x5a]
  40f3e3:	and    edx,ebx
  40f3e5:	cdq    
  40f3e6:	jno    0x40f3c0
  40f3e8:	push   0xffffffcd
  40f3ea:	add    eax,0x8ae9e5a1
  40f3ef:	jge    0x40f427
  40f3f1:	(bad)  
  40f3f2:	pushf  
  40f3f3:	rol    BYTE PTR [ebx+0x4112f6a0],cl
  40f3f9:	jne    0x40f3ea
  40f3fb:	iret   
  40f3fc:	mov    al,ds:0x7ede36b3
  40f401:	cmp    BYTE PTR [ebx],ah
  40f403:	inc    ecx
  40f404:	dec    DWORD PTR [eax+edi*2+0x4c731f6d]
  40f40b:	xchg   DWORD PTR [edx-0x51],ebp
  40f40e:	add    eax,0xbc0f770
  40f413:	iret   
  40f414:	test   dl,cl
  40f416:	and    BYTE PTR [edi-0x35d8e947],ch
  40f41c:	(bad)  [eax]
  40f41e:	or     cl,BYTE PTR [ecx]
  40f420:	fwait
  40f421:	xchg   ebx,eax
  40f422:	test   al,0xd8
  40f424:	out    dx,eax
  40f425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f426:	xor    esi,DWORD PTR [ecx-0x1f2caedb]
  40f42c:	shl    BYTE PTR [ebp+0x44],cl
  40f42f:	test   BYTE PTR [ecx+0x36155d57],0x51
  40f436:	aam    0x4d
  40f438:	jmp    0xcc7c:0xa8ef1b16
  40f43f:	mov    gs,WORD PTR [esi-0x34c720b7]
  40f445:	inc    ebp
  40f446:	nop
  40f447:	adc    ebx,ebx
  40f449:	pop    ecx
  40f44a:	dec    edx
  40f44b:	push   ebp
  40f44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f44d:	not    ebp
  40f44f:	sbb    DWORD PTR [ebx+0x101bfa72],ecx
  40f455:	mov    ebx,0x9f7a8a85
  40f45a:	mov    edx,0x640d3134
  40f45f:	int3   
  40f460:	ss pushf 
  40f462:	leave  
  40f463:	xchg   ebp,eax
  40f464:	mov    edx,0x429dae06
  40f469:	or     ah,BYTE PTR [esi-0x36]
  40f46c:	push   cs
  40f46d:	mov    ah,0x44
  40f46f:	sub    al,0xba
  40f471:	stos   DWORD PTR es:[edi],eax
  40f472:	int3   
  40f473:	dec    edx
  40f474:	jp     0x40f476
  40f476:	ins    DWORD PTR es:[edi],dx
  40f477:	dec    esi
  40f478:	repnz retf 0x27a
  40f47c:	xchg   edx,eax
  40f47d:	test   BYTE PTR [eax-0x6b0f8d84],al
  40f483:	mov    ds:0xd0a2c3bc,eax
  40f488:	nop
  40f489:	jno    0x40f4df
  40f48b:	mov    edi,0xa2c5c757
  40f490:	cs stos DWORD PTR es:[edi],eax
  40f492:	sbb    ebx,DWORD PTR [ebx+0x1e]
  40f495:	rcr    ecx,cl
  40f497:	jle    0x40f429
  40f499:	iret   
  40f49a:	mov    al,0x28
  40f49c:	pop    edx
  40f49d:	mov    bl,0x1c
  40f49f:	push   0xffffffa1
  40f4a1:	lds    eax,FWORD PTR [eax-0xeaa628b]
  40f4a7:	jg     0x40f4ca
  40f4a9:	xchg   esp,eax
  40f4aa:	cmc    
  40f4ab:	outs   dx,BYTE PTR ds:[esi]
  40f4ac:	and    edx,esp
  40f4ae:	cmp    dh,BYTE PTR [ebp-0x68ad0533]
  40f4b4:	in     al,0x7
  40f4b6:	(bad)  
  40f4b7:	mov    ebp,0x3e6f7eef
  40f4bc:	mov    eax,ds:0x1c8a19aa
  40f4c1:	jg     0x40f525
  40f4c3:	ja     0x40f4a8
  40f4c5:	inc    ebx
  40f4c6:	cs mov edx,0x2c918748
  40f4cc:	jmp    0xc2fe:0x9584cd1
  40f4d3:	gs aam 0x82
  40f4d6:	loopne 0x40f4a1
  40f4d8:	jae    0x40f477
  40f4da:	fldenv [esi]
  40f4dc:	ja     0x40f4b2
  40f4de:	aam    0xc8
  40f4e0:	pop    es
  40f4e1:	aaa    
  40f4e2:	mov    ebp,0x58b681ba
  40f4e7:	adc    eax,0xf3551447
  40f4ec:	inc    edx
  40f4ed:	mov    ch,0xe5
  40f4ef:	out    dx,al
  40f4f0:	into   
  40f4f1:	xchg   edi,eax
  40f4f2:	add    DWORD PTR [esi+ecx*2],edi
  40f4f5:	out    dx,al
  40f4f6:	xlat   BYTE PTR ds:[ebx]
  40f4f7:	push   edi
  40f4f8:	sahf   
  40f4f9:	add    ah,BYTE PTR [edi]
  40f4fb:	push   ebp
  40f4fc:	pop    edx
  40f4fd:	(bad)  
  40f4fe:	dec    edi
  40f4ff:	pop    es
  40f500:	cs cs (bad) 
  40f503:	into   
  40f504:	test   BYTE PTR [esi+0x7f],cl
  40f507:	push   edi
  40f508:	ds or  eax,edi
  40f50b:	jl     0x40f54f
  40f50d:	mov    esi,0x2eb95d89
  40f512:	test   DWORD PTR [esi-0x50],edi
  40f515:	add    eax,0xfe5a71cd
  40f51a:	pop    ebx
  40f51b:	or     al,0xcb
  40f51d:	push   edx
  40f51e:	pop    esi
  40f51f:	push   ebp
  40f520:	xor    BYTE PTR [ebx+0x46],cl
  40f523:	add    al,0xe2
  40f525:	dec    edx
  40f526:	ret    
  40f527:	(bad)  
  40f528:	pop    ecx
  40f529:	cmp    dh,bl
  40f52b:	fs into 
  40f52d:	add    eax,0x1507b996
  40f532:	(bad)  
  40f533:	jnp    0x40f569
  40f535:	mov    ah,0x3e
  40f537:	mul    edi
  40f539:	sub    esi,DWORD PTR [edx+0x954c9e1]
  40f53f:	mov    eax,ds:0x7f8157ab
  40f544:	mov    edx,0x3461025b
  40f549:	test   ah,0x86
  40f54c:	and    BYTE PTR [ebx],bh
  40f54e:	cmc    
  40f54f:	shr    DWORD PTR [ecx+edx*1],0x9
  40f553:	push   edi
  40f554:	push   es
  40f555:	inc    esp
  40f556:	ret    
  40f557:	push   cs
  40f558:	push   esi
  40f559:	xor    DWORD PTR ds:0xe31f9ec6,ecx
  40f55f:	pusha  
  40f560:	cmp    dh,BYTE PTR [esi-0x63]
  40f563:	(bad)  
  40f565:	or     BYTE PTR [edi+0x6adfc095],dh
  40f56b:	fs jo  0x40f56a
  40f56e:	adc    eax,0xca28fbe1
  40f573:	popa   
  40f574:	jbe    0x40f537
  40f576:	shl    DWORD PTR [ebp-0x77],1
  40f579:	mov    ss,WORD PTR [ecx-0x1d]
  40f57c:	stos   DWORD PTR es:[edi],eax
  40f57d:	cmp    esp,DWORD PTR [ebp+0x358ce0c4]
  40f583:	fcomp  QWORD PTR [eax]
  40f585:	push   edx
  40f586:	jecxz  0x40f5ac
  40f588:	mov    ebx,0xf89c6e75
  40f58d:	xchg   BYTE PTR [esi+0x10],bh
  40f590:	int    0x30
  40f592:	retf   0x3e12
  40f595:	pop    ecx
  40f596:	push   esi
  40f597:	icebp  
  40f598:	clc    
  40f599:	pop    esp
  40f59a:	arpl   WORD PTR [ebx+0x2efb53ea],sp
  40f5a0:	xchg   ecx,eax
  40f5a1:	mov    bh,al
  40f5a3:	jmp    0x1c3b:0xbaac8243
  40f5aa:	sbb    DWORD PTR [ecx+edx*4-0x6a4cd2e2],esi
  40f5b1:	daa    
  40f5b2:	retf   
  40f5b3:	pop    ss
  40f5b4:	in     al,0x39
  40f5b6:	arpl   WORD PTR [ebx],sp
  40f5b8:	sahf   
  40f5b9:	ficom  WORD PTR [esi+esi*4+0x6abf059d]
  40f5c0:	xor    dh,BYTE PTR [ecx+0x9]
  40f5c3:	std    
  40f5c4:	pushf  
  40f5c5:	inc    ebx
  40f5c6:	out    dx,eax
  40f5c7:	jmp    0x822c:0xb23df942
  40f5ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5cf:	jns    0x40f62e
  40f5d1:	xor    eax,0xd845e7d
  40f5d6:	popa   
  40f5d7:	push   ds
  40f5d8:	cli    
  40f5d9:	xchg   BYTE PTR [ecx+0x64623c27],dl
  40f5df:	jb     0x40f5fb
  40f5e1:	ss mov ebp,0x5b8a4660
  40f5e7:	and    eax,esi
  40f5e9:	ds pop esp
  40f5eb:	add    eax,0xda90a558
  40f5f0:	sbb    eax,DWORD PTR [ebp-0x790c84eb]
  40f5f6:	adc    bh,BYTE PTR [ebx-0x57]
  40f5f9:	ds xchg ebp,eax
  40f5fb:	les    edi,FWORD PTR [esi]
  40f5fd:	jbe    0x40f586
  40f5ff:	scas   al,BYTE PTR es:[edi]
  40f600:	scas   eax,DWORD PTR es:[edi]
  40f601:	call   0x7c8d:0x7b28bda1
  40f608:	rcr    DWORD PTR [eax+0x1d],0xcf
  40f60c:	dec    ecx
  40f60d:	stc    
  40f60e:	mov    al,ds:0x40b5c100
  40f613:	out    dx,eax
  40f614:	ins    DWORD PTR es:[edi],dx
  40f615:	dec    esi
  40f616:	add    esi,eax
  40f618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f619:	inc    esi
  40f61a:	mov    eax,0x4864ce7
  40f61f:	adc    al,BYTE PTR [ecx-0x3b2fe977]
  40f625:	xchg   DWORD PTR [esi],esi
  40f627:	sahf   
  40f628:	cdq    
  40f629:	test   BYTE PTR [edx-0x36],0x37
  40f62d:	shr    BYTE PTR [ebx-0x493ba5c3],0x87
  40f634:	xchg   ebx,eax
  40f635:	xor    dh,BYTE PTR [edx-0x7a]
  40f638:	pop    edi
  40f639:	imul   BYTE PTR [ecx]
  40f63b:	sahf   
  40f63c:	add    al,0xbd
  40f63e:	test   eax,0x36fad4e
  40f643:	fisttp QWORD PTR [ebx-0x69]
  40f646:	pop    ecx
  40f647:	push   ds
  40f648:	inc    edx
  40f649:	enter  0x3af1,0xb9
  40f64d:	fdiv   DWORD PTR [edi*2+0xf9cffd2]
  40f654:	cmovae edx,DWORD PTR [ecx-0x13]
  40f658:	mov    edx,0xda430755
  40f65d:	xchg   ebp,eax
  40f65e:	cmp    al,cl
  40f660:	mov    eax,0x2f2ca063
  40f665:	pop    ebx
  40f666:	xchg   ecx,eax
  40f667:	push   esi
  40f668:	mov    ch,0xa3
  40f66a:	xchg   DWORD PTR [esi],edi
  40f66c:	rcl    BYTE PTR [esi-0x7778e1c9],cl
  40f672:	leave  
  40f673:	and    ebp,DWORD PTR [ecx-0x56ff5f16]
  40f679:	jns    0x40f6e3
  40f67b:	data16 jnp 0x40f68e
  40f67e:	test   BYTE PTR [eax-0x614a564a],cl
  40f684:	es push eax
  40f686:	pusha  
  40f687:	arpl   WORD PTR [ebp-0x7d],bx
  40f68a:	mov    dh,0x7b
  40f68c:	xchg   BYTE PTR [ebx+0x58b89508],cl
  40f692:	and    al,0x8
  40f694:	cmp    DWORD PTR [eax],ecx
  40f696:	jg     0x40f62b
  40f698:	cmp    ecx,esp
  40f69a:	(bad)  
  40f69c:	fidivr DWORD PTR [esi-0x36]
  40f69f:	(bad)  
  40f6a0:	not    DWORD PTR [edi+ecx*1+0x6d]
  40f6a4:	std    
  40f6a5:	outs   dx,BYTE PTR ds:[esi]
  40f6a6:	int    0x41
  40f6a8:	imul   esp,ecx,0x1e
  40f6ab:	mov    eax,0x3d52052d
  40f6b0:	jmp    0xe044aac0
  40f6b5:	or     cl,BYTE PTR [edi]
  40f6b7:	add    DWORD PTR [eax+0x67f0838f],0x1d
  40f6be:	push   es
  40f6bf:	mov    dh,0x8
  40f6c1:	out    0x4c,eax
  40f6c3:	and    al,0xf1
  40f6c5:	sar    DWORD PTR [edx],0xfa
  40f6c8:	aam    0x50
  40f6ca:	fld    TBYTE PTR [edx]
  40f6cc:	jmp    0x40f6d1
  40f6ce:	pop    es
  40f6cf:	(bad)  
  40f6d0:	mov    cl,0x3f
  40f6d2:	inc    ecx
  40f6d3:	xchg   esi,eax
  40f6d4:	aad    0xd9
  40f6d6:	(bad)  
  40f6d7:	hlt    
  40f6d8:	jge    0x40f73d
  40f6da:	add    eax,0xeb87fd
  40f6df:	pop    ebp
  40f6e0:	test   ch,al
  40f6e2:	adc    BYTE PTR [ecx+0x6d],al
  40f6e5:	outs   dx,DWORD PTR ds:[esi]
  40f6e6:	hlt    
  40f6e7:	push   esi
  40f6e8:	cmp    ebx,0x193fca33
  40f6ee:	popw   ds
  40f6f0:	cmp    DWORD PTR [eax-0x700ee524],ebx
  40f6f6:	jmp    0x40f692
  40f6f8:	addr16 mov ecx,0xe4e644ec
  40f6fe:	sbb    DWORD PTR [edi],ebx
  40f700:	and    edi,DWORD PTR [edi+0x66]
  40f703:	mov    bl,0x15
  40f705:	not    BYTE PTR [ebx-0x55]
  40f708:	adc    BYTE PTR [eax-0x72e6048e],bl
  40f70e:	push   cs
  40f70f:	pop    eax
  40f710:	into   
  40f711:	sbb    DWORD PTR [edx],esp
  40f713:	cmc    
  40f714:	mov    BYTE PTR [edx*8+0x665c69f1],0xbe
  40f71c:	cmp    esi,DWORD PTR [edx]
  40f71e:	dec    esp
  40f71f:	(bad)  
  40f720:	adc    dh,BYTE PTR [ebx+0x26]
  40f723:	lds    edx,FWORD PTR [esi-0x18]
  40f726:	cmp    BYTE PTR [esi-0x3e6d089b],dh
  40f72c:	jo     0x40f747
  40f72e:	rol    BYTE PTR [eax],0x57
  40f731:	xchg   ebp,eax
  40f732:	xchg   ebp,eax
  40f733:	cmp    DWORD PTR [ecx-0x610d510c],edx
  40f739:	stos   DWORD PTR es:[edi],eax
  40f73a:	adc    esi,DWORD PTR [di+0x4de9]
  40f73f:	pushf  
  40f740:	out    0x95,eax
  40f742:	mov    edx,0x82c90d8
  40f747:	js     0x40f71d
  40f749:	jae    0x40f727
  40f74b:	and    ch,BYTE PTR [edi+eiz*2-0x27a335e7]
  40f752:	xchg   edi,eax
  40f753:	fisub  DWORD PTR [ebp+0x73464968]
  40f759:	add    DWORD PTR [edi],ebp
  40f75b:	xchg   edx,eax
  40f75c:	enter  0xcfb7,0x17
  40f760:	push   0x19
  40f762:	repz dec ebx
  40f764:	(bad)  
  40f766:	pop    ebx
  40f767:	mov    edi,0x66f8d35c
  40f76c:	jbe    0x40f74c
  40f76e:	pop    edi
  40f76f:	shl    DWORD PTR [edx],0xf5
  40f772:	enter  0xbd96,0x3e
  40f776:	iret   
  40f777:	mov    ds:0xc59ca23b,al
  40f77c:	bnd jle 0x40f733
  40f77f:	in     al,dx
  40f780:	and    DWORD PTR [edx+eiz*1],ebp
  40f783:	mov    al,ds:0x1a4eead8
  40f788:	adc    BYTE PTR [ecx+eiz*1],0xc6
  40f78c:	xor    ch,ah
  40f78e:	scas   eax,DWORD PTR es:[edi]
  40f78f:	mov    esi,0x2b346fc0
  40f794:	popf   
  40f795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f796:	(bad)  
  40f797:	in     eax,0x49
  40f799:	inc    edi
  40f79a:	mov    bh,BYTE PTR [ebx]
  40f79c:	xlat   BYTE PTR ds:[ebx]
  40f79d:	pop    ebx
  40f79e:	retf   
  40f79f:	sbb    dh,BYTE PTR [eax+0x34]
  40f7a2:	ficomp WORD PTR [edi-0xdc240b5]
  40f7a8:	jmp    0x6ef4:0xd39169a1
  40f7af:	idiv   BYTE PTR [ecx+0x51af32fd]
  40f7b5:	outs   dx,BYTE PTR cs:[esi]
  40f7b7:	xchg   BYTE PTR [esi],bl
  40f7b9:	add    al,0xa0
  40f7bb:	inc    edx
  40f7bc:	adc    al,0x84
  40f7be:	cs inc eax
  40f7c0:	mov    ch,bh
  40f7c2:	scas   eax,DWORD PTR es:[edi]
  40f7c3:	rcr    DWORD PTR [eax+ecx*2+0x7c],1
  40f7c7:	cmc    
  40f7c8:	add    BYTE PTR [ebx-0x70],cl
  40f7cb:	jmp    0x180d30b5
  40f7d0:	xchg   ebx,eax
  40f7d1:	mov    ecx,0xbdc26dc1
  40f7d6:	cmp    DWORD PTR [edx+0x65],ebp
  40f7d9:	outs   dx,BYTE PTR ds:[esi]
  40f7da:	push   ecx
  40f7db:	adc    eax,0x1cf5eedd
  40f7e0:	cdq    
  40f7e1:	shr    DWORD PTR [ebp-0x14],0x44
  40f7e5:	test   BYTE PTR cs:[ebx],dh
  40f7e8:	cmp    dh,dh
  40f7ea:	fadd   DWORD PTR [esi]
  40f7ec:	cwde   
  40f7ed:	jne    0x40f834
  40f7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7f0:	retf   0x68ba
  40f7f3:	mov    dh,0xf
  40f7f5:	mov    edx,0xc05c9f4
  40f7fa:	ja     0x40f870
  40f7fc:	in     eax,dx
  40f7fd:	retf   0x1802
  40f800:	pop    es
  40f801:	cs ret 
  40f803:	popa   
  40f804:	inc    eax
  40f805:	fs js  0x40f7b6
  40f808:	xor    al,0xb1
  40f80a:	daa    
  40f80b:	sbb    eax,0x1b5ed001
  40f810:	sub    DWORD PTR [esi+ebx*2],edi
  40f813:	and    al,0x22
  40f815:	dec    esi
  40f816:	lods   eax,DWORD PTR ds:[esi]
  40f817:	and    edx,DWORD PTR ds:0x1457bceb
  40f81d:	pop    edx
  40f81e:	lods   al,BYTE PTR ds:[esi]
  40f81f:	sar    DWORD PTR [edi],1
  40f821:	sbb    DWORD PTR [ecx+0x41713c92],esp
  40f827:	nop
  40f828:	push   edx
  40f829:	pop    ecx
  40f82a:	push   0x3f3857fc
  40f82f:	(bad)  
  40f830:	sub    al,0x94
  40f832:	ins    DWORD PTR es:[edi],dx
  40f833:	rcl    dl,cl
  40f835:	xchg   esp,eax
  40f836:	shr    DWORD PTR [ebx+0x14],1
  40f839:	dec    ebx
  40f83a:	pushf  
  40f83b:	(bad)
  40f83e:	mov    esi,0xabafbbf0
  40f843:	mov    eax,ds:0x27033253
  40f848:	pop    esp
  40f849:	push   edi
  40f84a:	push   cs
  40f84b:	mov    esi,0xec3bb824
  40f850:	clc    
  40f851:	int3   
  40f852:	ins    DWORD PTR es:[edi],dx
  40f853:	add    al,0xe8
  40f855:	sub    ebp,DWORD PTR [ebx]
  40f857:	hlt    
  40f858:	lods   al,BYTE PTR ds:[esi]
  40f859:	fsubr  DWORD PTR [ecx+ebp*2]
  40f85c:	inc    edi
  40f85d:	fbld   TBYTE PTR [edx-0x3b68104]
  40f863:	inc    esp
  40f864:	push   eax
  40f865:	mov    ebx,0x6bf4a1f6
  40f86a:	into   
  40f86b:	sti    
  40f86c:	xchg   DWORD PTR [eax-0x74d6454],edx
  40f872:	(bad)  
  40f874:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40f876:	push   ss
  40f877:	push   esi
  40f878:	cwde   
  40f879:	lods   al,BYTE PTR ds:[esi]
  40f87a:	pop    eax
  40f87b:	cli    
  40f87c:	repnz (bad) 
  40f87e:	xchg   edi,eax
  40f87f:	imul   edi,DWORD PTR [eax+eiz*1-0x13920da9],0xffffff85
  40f887:	rcr    DWORD PTR [ebx+edi*1],cl
  40f88a:	push   0x404365f5
  40f88f:	(bad)  
  40f891:	mov    ah,0x70
  40f893:	pop    ebp
  40f894:	(bad)  
  40f895:	shl    edx,1
  40f897:	fimul  DWORD PTR [eax+0x5f02d5a8]
  40f89d:	dec    ebp
  40f89e:	fadd   st,st(6)
  40f8a0:	out    dx,eax
  40f8a1:	add    BYTE PTR [ebx+0x47],dh
  40f8a4:	ins    BYTE PTR es:[edi],dx
  40f8a5:	mov    al,ds:0x34044812
  40f8aa:	arpl   WORD PTR [ebx],bp
  40f8ac:	call   0x8360d06b
  40f8b1:	dec    esi
  40f8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8b3:	add    BYTE PTR [ecx-0x47],dh
  40f8b6:	push   ecx
  40f8b7:	pop    ecx
  40f8b8:	js     0x40f850
  40f8ba:	jbe    0x40f8be
  40f8bc:	mov    bl,ah
  40f8be:	xor    al,0x97
  40f8c0:	mov    edi,0xdae19687
  40f8c5:	in     eax,0xa
  40f8c7:	dec    edx
  40f8c8:	jnp    0x40f92c
  40f8ca:	dec    eax
  40f8cb:	mov    ebp,0x8469b001
  40f8d0:	jge    0x40f8b4
  40f8d2:	stos   BYTE PTR es:[edi],al
  40f8d3:	fst    st(7)
  40f8d5:	stos   DWORD PTR es:[edi],eax
  40f8d6:	cwde   
  40f8d7:	add    bh,BYTE PTR [ebx+0x3999f9fe]
  40f8dd:	repz jp 0x40f93b
  40f8e0:	dec    al
  40f8e2:	icebp  
  40f8e3:	sti    
  40f8e4:	mov    bl,BYTE PTR [eax-0x2fdbd756]
  40f8ea:	push   ebx
  40f8eb:	mov    ah,0x2d
  40f8ed:	xchg   esi,eax
  40f8ee:	sbb    ecx,ebp
  40f8f0:	xlat   BYTE PTR ds:[ebx]
  40f8f1:	in     al,0x3f
  40f8f3:	aas    
  40f8f4:	sti    
  40f8f5:	mov    cl,0xd2
  40f8f7:	dec    ebx
  40f8f8:	enter  0x3ea4,0x9c
  40f8fc:	lea    ebx,[eax-0x39619347]
  40f902:	sti    
  40f903:	jns    0x40f885
  40f905:	sar    BYTE PTR [ebp+0x6e73143d],1
  40f90b:	dec    eax
  40f90c:	push   ss
  40f90d:	dec    edx
  40f90e:	push   0xb
  40f910:	add    eax,DWORD PTR [esp+edx*8]
  40f913:	add    eax,0xb10ce38e
  40f918:	sbb    bh,ah
  40f91a:	ja     0x40f924
  40f91c:	arpl   WORD PTR [edi],bx
  40f91e:	xor    eax,0x475b67ff
  40f923:	jbe    0x40f952
  40f925:	or     esi,edx
  40f927:	mov    ebx,0xa1697e5b
  40f92c:	and    bh,BYTE PTR [ebx+0x44]
  40f92f:	lods   al,BYTE PTR ds:[esi]
  40f930:	enter  0x942,0x7a
  40f934:	mov    DWORD PTR ds:0x917fba13,ebx
  40f93a:	or     ch,BYTE PTR [ebp+ebp*1-0x2e]
  40f93e:	mov    DWORD PTR [ecx+0x41],ebx
  40f941:	fsubr  QWORD PTR ds:0x2626e2ec
  40f947:	pop    ds
  40f948:	mov    ebx,0xe9f9fdad
  40f94d:	add    BYTE PTR [ebp+0x1a],ah
  40f950:	and    eax,0xd38640f8
  40f955:	lods   al,BYTE PTR ds:[esi]
  40f956:	lds    ebx,FWORD PTR [esi]
  40f958:	sub    bl,bl
  40f95a:	inc    esp
  40f95b:	sbb    DWORD PTR [ecx+0xb9cd9de],ebp
  40f961:	je     0x40f9d4
  40f963:	pop    edx
  40f964:	sbb    edx,DWORD PTR [edi]
  40f966:	push   0x56190039
  40f96b:	dec    edx
  40f96c:	sub    al,0x25
  40f96e:	std    
  40f96f:	fstp   DWORD PTR [edx+0x4e]
  40f972:	jecxz  0x40f93f
  40f974:	int    0xbd
  40f976:	push   esi
  40f977:	xchg   esp,eax
  40f978:	gs push es
  40f97a:	jle    0x40f921
  40f97c:	cmc    
  40f97d:	in     al,0xe7
  40f97f:	sub    DWORD PTR [ebx+0x51550e9f],ebx
  40f985:	or     DWORD PTR [edx+0xc],ecx
  40f988:	pop    esp
  40f989:	loop   0x40f959
  40f98b:	xor    edi,DWORD PTR [esi]
  40f98d:	mov    eax,0x48393223
  40f992:	in     eax,0x1a
  40f994:	test   BYTE PTR [edi],ah
  40f996:	fs test al,0x21
  40f999:	icebp  
  40f99a:	test   al,0xbc
  40f99c:	pop    ss
  40f99d:	adc    esi,DWORD PTR [esi+0x3df071ec]
  40f9a3:	jle    0x40fa22
  40f9a5:	bound  edi,QWORD PTR [ebx]
  40f9a7:	shr    BYTE PTR [eax+0x46],0x2c
  40f9ab:	mov    cl,0x6b
  40f9ad:	xchg   DWORD PTR [edi+eax*2-0x34],edi
  40f9b1:	dec    ebx
  40f9b2:	shl    DWORD PTR [ecx],cl
  40f9b4:	js     0x40fa30
  40f9b6:	dec    ebx
  40f9b7:	ret    0xde52
  40f9ba:	sahf   
  40f9bb:	add    cl,BYTE PTR [ebx]
  40f9bd:	push   ecx
  40f9be:	mov    ebp,0xc149c142
  40f9c3:	mov    edi,0x4d4f36bb
  40f9c8:	jns    0x40f9e4
  40f9ca:	out    0x94,al
  40f9cc:	sbb    DWORD PTR [edi+0x17],ebx
  40f9cf:	and    DWORD PTR [eax+eiz*8+0x3b78892d],0xfffffff8
  40f9d7:	fcom   st(1)
  40f9d9:	sbb    bl,dl
  40f9db:	(bad)  
  40f9dc:	cmp    bh,BYTE PTR [eax-0x510233a4]
  40f9e2:	or     edx,DWORD PTR [ebp-0x19d64f45]
  40f9e8:	mov    cl,BYTE PTR [ebp-0x22]
  40f9eb:	mov    ch,0x87
  40f9ed:	lds    ebx,FWORD PTR [esi-0x7a458faa]
  40f9f3:	retf   0xbde1
  40f9f6:	inc    eax
  40f9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f8:	test   al,0xe1
  40f9fa:	inc    ecx
  40f9fb:	fnclex 
  40f9fd:	xor    dh,BYTE PTR [ecx-0x3e000f19]
  40fa03:	fnstcw WORD PTR [ebx-0x3380022a]
  40fa09:	popf   
  40fa0a:	adc    bh,dl
  40fa0c:	mov    dl,0xab
  40fa0e:	sbb    BYTE PTR [edi+0x14],0x57
  40fa12:	jno    0x40f994
  40fa14:	sub    eax,0xd46a12aa
  40fa19:	add    al,0xa9
  40fa1b:	jl     0x40fa7d
  40fa1d:	rcr    DWORD PTR [edi-0x412ae462],0xee
  40fa24:	fisttp DWORD PTR [edx]
  40fa26:	into   
  40fa27:	xchg   esp,eax
  40fa28:	retf   
  40fa29:	lods   eax,DWORD PTR ds:[esi]
  40fa2a:	adc    cl,BYTE PTR [ecx+edx*1+0x4a]
  40fa2e:	pop    ecx
  40fa2f:	xor    DWORD PTR [ebp-0x352ba875],ecx
  40fa35:	push   esi
  40fa36:	xor    al,0xbc
  40fa38:	pop    eax
  40fa39:	cld    
  40fa3a:	popf   
  40fa3b:	jmp    0x40f9de
  40fa3d:	mov    WORD PTR [edx-0x2f8111c4],ds
  40fa43:	pop    ss
  40fa44:	addr16 xchg edx,eax
  40fa46:	in     eax,dx
  40fa47:	jge    0x40fa63
  40fa49:	inc    ebp
  40fa4a:	pop    es
  40fa4b:	sub    DWORD PTR [ecx-0x27],0x6e
  40fa4f:	xlat   BYTE PTR ds:[ebx]
  40fa50:	int    0x5d
  40fa52:	xor    ebx,esi
  40fa54:	rcr    DWORD PTR [edx+0x125ce7df],1
  40fa5a:	bnd call esi
  40fa5d:	cld    
  40fa5e:	xchg   edi,eax
  40fa5f:	ins    DWORD PTR es:[edi],dx
  40fa60:	shl    DWORD PTR [esp+edi*2-0x56],0x89
  40fa65:	sub    cl,al
  40fa67:	sub    BYTE PTR [ebx],dl
  40fa69:	ret    0xd027
  40fa6c:	sub    al,0x70
  40fa6e:	lds    ecx,FWORD PTR [ecx-0x1e1b0684]
  40fa74:	shl    bh,0x38
  40fa77:	aam    0x8e
  40fa79:	jae    0x40fa10
  40fa7b:	test   al,0xdb
  40fa7d:	jg     0x40fa08
  40fa7f:	int3   
  40fa80:	cmp    DWORD PTR [eax-0x23881c62],ecx
  40fa86:	rcr    DWORD PTR [eax+eax*2+0x60],0x1c
  40fa8b:	imul   ecx,esi,0xd50b7195
  40fa91:	fisttp QWORD PTR ss:[eax]
  40fa94:	leave  
  40fa95:	fnstenv [edi-0x43]
  40fa98:	and    al,0xb0
  40fa9b:	mov    cl,0x74
  40fa9d:	call   0x72b063a9
  40faa2:	jg     0x40faff
  40faa4:	dec    edx
  40faa5:	in     al,0xc6
  40faa7:	fsub   DWORD PTR [edi-0x75]
  40faaa:	shl    DWORD PTR [edx],1
  40faac:	jb     0x40fa6f
  40faae:	cmp    ebx,edi
  40fab0:	je     0x40fac5
  40fab2:	mov    dh,BYTE PTR [edx+0x59cc6900]
  40fab8:	rcl    BYTE PTR [esi+0x1c2e1674],0xc
  40fabf:	jb     0x40fa76
  40fac1:	cwde   
  40fac2:	or     al,0x6
  40fac4:	push   0xffffffc3
  40fac6:	push   ebp
  40fac7:	jmp    0xe274e2b5
  40facc:	std    
  40facd:	ins    BYTE PTR es:[edi],dx
  40face:	mov    eax,ds:0x55dcfd2c
  40fad3:	and    eax,0xb91ab83d
  40fad8:	inc    ebp
  40fad9:	jno    0x40fb22
  40fadb:	neg    DWORD PTR [edx+0x52]
  40fade:	lds    esp,FWORD PTR [edx]
  40fae0:	xchg   ebp,eax
  40fae1:	sub    dl,BYTE PTR [edx-0x3d]
  40fae4:	(bad)  
  40fae5:	sahf   
  40fae6:	pop    ecx
  40fae7:	out    0xa5,eax
  40fae9:	cmp    esi,DWORD PTR [eax+edx*8-0x63213f9a]
  40faf0:	ss scas al,BYTE PTR es:[edi]
  40faf2:	(bad)  
  40faf3:	sahf   
  40faf4:	mov    ebp,0x723ea99b
  40faf9:	fidivr WORD PTR ds:[ebx]
  40fafc:	push   ecx
  40fafd:	dec    ecx
  40fafe:	sahf   
  40faff:	add    BYTE PTR [ebp-0x76],0x50
  40fb03:	xchg   ecx,eax
  40fb04:	jnp    0x40fb4f
  40fb06:	mov    cl,0x89
  40fb08:	jge    0x40fb2c
  40fb0a:	cld    
  40fb0b:	mov    WORD PTR [ebx],cs
  40fb0d:	mov    bl,0xb5
  40fb0f:	ja     0x40fb35
  40fb11:	xchg   edx,eax
  40fb12:	cwde   
  40fb13:	pop    esp
  40fb14:	lods   al,BYTE PTR ds:[esi]
  40fb15:	or     edx,0x1e8591e4
  40fb1b:	test   DWORD PTR [ebp+0x2a9e55f1],0xae2adf5f
  40fb25:	imul   ecx,edi,0xffffff91
  40fb28:	repnz (bad) 
  40fb2a:	sub    ah,bh
  40fb2c:	dec    eax
  40fb2d:	int    0xd6
  40fb2f:	test   al,0x12
  40fb31:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb34:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fb38:	xor    DWORD PTR ds:0x42a16f,0x6377
  40fb42:	xor    ecx,0x8a96
  40fb48:	sub    DWORD PTR ds:0x42a16f,0x7d05
  40fb52:	add    ecx,edi
  40fb54:	mov    DWORD PTR ds:0x42a1a7,edi
  40fb5a:	mov    edi,DWORD PTR [ebp-0xc]
  40fb5d:	inc    DWORD PTR ds:0x42a12b
  40fb63:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fb6a:	inc    edx
  40fb6b:	mov    ecx,DWORD PTR [ebp-0x10]
  40fb6e:	mov    DWORD PTR ds:0x42a1af,0x4619
  40fb78:	cmp    edx,ecx
  40fb7a:	jne    0x40d759
  40fb80:	mov    ecx,DWORD PTR [ebp-0x18]
  40fb83:	and    DWORD PTR ds:0x42a1a7,0x0
  40fb8d:	jmp    0x40fb9f
  40fb92:	mov    edi,DWORD PTR ds:0x42a1a7
  40fb98:	inc    edi
  40fb99:	mov    DWORD PTR ds:0x42a1a7,edi
  40fb9f:	cmp    DWORD PTR ds:0x42a1a7,0x1c
  40fba6:	jae    0x40fbd1
  40fbac:	cmp    DWORD PTR ds:0x42a1a7,0x20
  40fbb3:	jg     0x40fbd1
  40fbb9:	jmp    0x40fbcc
  40fbbe:	push   0x42a1d3
  40fbc3:	push   DWORD PTR [ebp-0x10]
  40fbc6:	call   DWORD PTR ds:0x42a2d3
  40fbcc:	jmp    0x40fb92
  40fbd1:	mov    edx,DWORD PTR [ebp+0x10]
  40fbd4:	or     edi,0x72f1
  40fbda:	xor    ecx,eax
  40fbdc:	add    ecx,esi
  40fbde:	mov    DWORD PTR [edx],ecx
  40fbe0:	adc    DWORD PTR ds:0x42a17b,0xfda
  40fbea:	mov    ecx,DWORD PTR [ebp-0x18]
  40fbed:	and    DWORD PTR ds:0x42a127,ecx
  40fbf3:	xor    ecx,eax
  40fbf5:	add    ecx,esi
  40fbf7:	mov    DWORD PTR [ebp-0xc],ecx
  40fbfa:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fc01:	mov    ecx,DWORD PTR ds:0x42a12f
  40fc07:	xor    ecx,DWORD PTR ds:0x42a13b
  40fc0d:	mov    DWORD PTR ds:0x42a12f,ecx
  40fc13:	mov    DWORD PTR [ebp-0x14],0xf89c8589
  40fc1a:	and    edi,DWORD PTR ds:0x42a13f
  40fc20:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fc27:	and    DWORD PTR ds:0x42a13b,0x0
  40fc31:	mov    ecx,DWORD PTR ds:0x42a13b
  40fc37:	inc    ecx
  40fc38:	mov    DWORD PTR ds:0x42a13b,ecx
  40fc3e:	cmp    DWORD PTR ds:0x42a13b,0x24
  40fc45:	jbe    0x40fc63
  40fc4b:	jmp    0x40fc56
  40fc50:	call   DWORD PTR ds:0x42a293
  40fc56:	cmp    DWORD PTR ds:0x42a13b,0x15
  40fc5d:	jb     0x40fc31
  40fc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc66:	sbb    DWORD PTR ds:0x42a1bb,ebx
  40fc6c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc6f:	and    edi,DWORD PTR ds:0x42a17f
  40fc75:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc78:	adc    edi,0x3f37
  40fc7e:	xor    ecx,eax
  40fc80:	xor    DWORD PTR ds:0x42a18b,edx
  40fc86:	add    ecx,esi
  40fc88:	mov    edi,0x2513
  40fc8d:	mov    ecx,0x242ebcd
  40fc92:	mov    edi,0xf641bcc
  40fc97:	mov    DWORD PTR ds:0x42a163,0x3833
  40fca1:	je     0x41b544
  40fca7:	movzx  edx,WORD PTR ds:0x42a143
  40fcae:	or     DWORD PTR ds:0x42a1bb,edx
  40fcb4:	mov    edx,DWORD PTR [ebp+0x8]
  40fcb7:	or     DWORD PTR ds:0x42a12b,edi
  40fcbd:	mov    ebx,DWORD PTR [ebp-0x8]
  40fcc0:	adc    DWORD PTR ds:0x42a18f,0x42a177
  40fcca:	xor    edx,eax
  40fccc:	mov    DWORD PTR ds:0x42a1ab,0x2aa1
  40fcd6:	xor    ebx,eax
  40fcd8:	sub    edx,ebx
  40fcda:	neg    ebx
  40fcdc:	sub    edx,esi
  40fcde:	adc    ebx,DWORD PTR ds:0x42a16b
  40fce4:	xor    edx,eax
  40fce6:	xor    ebx,ebx
  40fce8:	or     ebx,DWORD PTR ds:0x42a187
  40fcee:	sub    DWORD PTR ds:0x42a147,ebx
  40fcf4:	mov    DWORD PTR [ebp+0x8],edx
  40fcf7:	mov    edx,DWORD PTR [ebp+0x8]
  40fcfa:	and    DWORD PTR ds:0x42a13f,ebx
  40fd00:	mov    ebx,DWORD PTR [ebp-0x58]
  40fd03:	sub    DWORD PTR ds:0x42a17f,0x42a1b3
  40fd0d:	add    edx,0x5708fa
  40fd13:	sub    DWORD PTR ds:0x42a16f,0x2df9
  40fd1d:	imul   edx,ebx
  40fd20:	and    DWORD PTR ds:0x42a14f,0x0
  40fd2a:	jmp    0x40fd3c
  40fd2f:	mov    ebx,DWORD PTR ds:0x42a14f
  40fd35:	inc    ebx
  40fd36:	mov    DWORD PTR ds:0x42a14f,ebx
  40fd3c:	cmp    DWORD PTR ds:0x42a14f,0x1e
  40fd43:	jae    0x40fd94
  40fd49:	cmp    DWORD PTR ds:0x42a14f,0x9
  40fd50:	jbe    0x40fd94
  40fd56:	jmp    0x40fd73
  40fd5b:	push   0x5a7a
  40fd60:	push   DWORD PTR [ebp-0x1c]
  40fd63:	push   0x4290f0
  40fd68:	push   0x400000
  40fd6d:	call   DWORD PTR ds:0x42a297
  40fd73:	cmp    DWORD PTR ds:0x42a14f,0x8
  40fd7a:	jne    0x40fd8f
  40fd80:	xor    ebx,ebx
  40fd82:	or     ebx,DWORD PTR ds:0x42a14f
  40fd88:	inc    ebx
  40fd89:	mov    DWORD PTR ds:0x42a14f,ebx
  40fd8f:	jmp    0x40fd2f
  40fd94:	mov    DWORD PTR [ebp-0x58],edx
  40fd97:	mov    DWORD PTR ds:0x42a1a3,0x13
  40fda1:	cmp    DWORD PTR ds:0x42a1a3,0x0
  40fda8:	je     0x40fdd8
  40fdae:	cmp    DWORD PTR ds:0x42a1a3,0x14
  40fdb5:	jb     0x40fdd8
  40fdbb:	jmp    0x40fdc6
  40fdc0:	call   DWORD PTR ds:0x42a29b
  40fdc6:	mov    edx,DWORD PTR ds:0x42a1a3
  40fdcc:	dec    edx
  40fdcd:	mov    DWORD PTR ds:0x42a1a3,edx
  40fdd3:	jmp    0x40fda1
  40fdd8:	mov    edx,DWORD PTR [ebp+0x8]
  40fddb:	xor    DWORD PTR ds:0x42a167,0x6c23
  40fde5:	mov    ebx,DWORD PTR [ebp-0x54]
  40fde8:	sbb    DWORD PTR ds:0x42a183,0x57b9
  40fdf2:	add    edx,0x64f89c
  40fdf8:	or     edx,ebx
  40fdfa:	movzx  ebx,WORD PTR ds:0x42a187
  40fe01:	sbb    DWORD PTR ds:0x42a1b3,ebx
  40fe07:	mov    DWORD PTR [ebp-0x54],edx
  40fe0a:	mov    edx,DWORD PTR [ebp+0x8]
  40fe0d:	and    DWORD PTR ds:0x42a1af,0x0
  40fe17:	xor    ebx,ebx
  40fe19:	xor    ebx,DWORD PTR ds:0x42a1af
  40fe1f:	inc    ebx
  40fe20:	mov    DWORD PTR ds:0x42a1af,ebx
  40fe26:	cmp    DWORD PTR ds:0x42a1af,0x7
  40fe2d:	jge    0x40fe75
  40fe33:	jmp    0x40fe4e
  40fe38:	push   0x45bb
  40fe3d:	push   DWORD PTR [ebp-0x20]
  40fe40:	push   0x42923d
  40fe45:	push   DWORD PTR [ebp-0x18]
  40fe48:	call   DWORD PTR ds:0x42a2a3
  40fe4e:	cmp    DWORD PTR ds:0x42a1af,0x6
  40fe55:	jne    0x40fe68
  40fe5b:	mov    ebx,DWORD PTR ds:0x42a1af
  40fe61:	inc    ebx
  40fe62:	mov    DWORD PTR ds:0x42a1af,ebx
  40fe68:	cmp    DWORD PTR ds:0x42a1af,0x14
  40fe6f:	jb     0x40fe17
  40fe75:	mov    ebx,DWORD PTR [ebp-0x50]
  40fe78:	add    edx,ecx
  40fe7a:	adc    DWORD PTR ds:0x42a167,0x1f0e
  40fe84:	xor    edx,ebx
  40fe86:	and    DWORD PTR ds:0x42a17b,0x42a1a7
  40fe90:	mov    DWORD PTR [ebp-0x50],edx
  40fe93:	and    DWORD PTR ds:0x42a1a3,0x1c1b
  40fe9d:	mov    edx,DWORD PTR [ebp+0x8]
  40fea0:	mov    ebx,DWORD PTR [ebp-0x4c]
  40fea3:	sbb    DWORD PTR ds:0x42a177,0x5e0b
  40fead:	add    edx,edi
  40feaf:	and    edx,ebx
  40feb1:	xor    DWORD PTR ds:0x42a12f,ecx
  40feb7:	mov    DWORD PTR [ebp-0x4c],edx
  40feba:	and    DWORD PTR ds:0x42a16f,0x0
  40fec4:	jmp    0x40fed6
  40fec9:	mov    edx,DWORD PTR ds:0x42a16f
  40fecf:	inc    edx
  40fed0:	mov    DWORD PTR ds:0x42a16f,edx
  40fed6:	cmp    DWORD PTR ds:0x42a16f,0x1b
  40fedd:	jae    0x40ff00
  40fee3:	cmp    DWORD PTR ds:0x42a16f,0x1e
  40feea:	jge    0x40ff00
  40fef0:	jmp    0x40fefb
  40fef5:	call   DWORD PTR ds:0x42a2a7
  40fefb:	jmp    0x40fec9
  40ff00:	mov    edx,DWORD PTR [ebp+0x8]
  40ff03:	mov    ebx,DWORD PTR [ebp-0x48]
  40ff06:	not    DWORD PTR ds:0x42a183
  40ff0c:	lea    edx,[ebx+edx*1+0x241fcdf]
  40ff13:	add    ebx,DWORD PTR ds:0x42a1c7
  40ff19:	mov    DWORD PTR [ebp-0x48],edx
  40ff1c:	mov    DWORD PTR ds:0x42a19b,0x1d36
  40ff26:	mov    edx,DWORD PTR [ebp+0x8]
  40ff29:	mov    ebx,0xfa5e1530
  40ff2e:	sub    ebx,edx
  40ff30:	mov    DWORD PTR ds:0x42a1bf,0x1f
  40ff3a:	cmp    DWORD PTR ds:0x42a1bf,0x0
  40ff41:	je     0x40ff82
  40ff47:	cmp    DWORD PTR ds:0x42a1bf,0x22
  40ff4e:	jge    0x40ff82
  40ff54:	jmp    0x40ff6e
  40ff59:	push   0x84e5
  40ff5e:	push   0x42a137
  40ff63:	push   0x6ce8
  40ff68:	call   DWORD PTR ds:0x42a2ab
  40ff6e:	xor    edx,edx
  40ff70:	or     edx,DWORD PTR ds:0x42a1bf
  40ff76:	dec    edx
  40ff77:	mov    DWORD PTR ds:0x42a1bf,edx
  40ff7d:	jmp    0x40ff3a
  40ff82:	add    ebx,DWORD PTR [ebp-0x44]
  40ff85:	mov    DWORD PTR [ebp-0x44],ebx
  40ff88:	mov    edx,DWORD PTR [ebp+0x8]
  40ff8b:	adc    DWORD PTR ds:0x42a16b,0x42a12f
  40ff95:	xor    edx,eax
  40ff97:	adc    DWORD PTR ds:0x42a163,0x5ee0
  40ffa1:	add    edx,esi
  40ffa3:	jne    0x40fca7
  40ffa9:	mov    DWORD PTR ds:0x42a147,0x481d
  40ffb3:	jmp    0x41b544
  40ffb8:	mov    edx,DWORD PTR [ebp-0xc]
  40ffbb:	adc    DWORD PTR ds:0x42a137,edi
  40ffc1:	sub    edx,esi
  40ffc3:	xor    ebx,ebx
  40ffc5:	or     ebx,DWORD PTR ds:0x42a197
  40ffcb:	or     ebx,DWORD PTR ds:0x42a137
  40ffd1:	mov    DWORD PTR ds:0x42a197,ebx
  40ffd7:	xor    edx,eax
  40ffd9:	mov    DWORD PTR [ebp-0x5c],edx
  40ffdc:	mov    edx,DWORD PTR [ebp-0x10]
  40ffdf:	sbb    DWORD PTR ds:0x42a143,0x42a15b
  40ffe9:	mov    ebx,DWORD PTR [ebp-0x8]
  40ffec:	sub    DWORD PTR ds:0x42a193,0x2e82
  40fff6:	xor    edx,eax
  40fff8:	xor    ebx,eax
  40fffa:	mov    DWORD PTR ds:0x42a177,0x1dc1
  410004:	sub    edx,ebx
  410006:	and    DWORD PTR ds:0x42a1c3,0x42a17b
  410010:	sub    edx,esi
  410012:	xor    edx,eax
  410014:	mov    DWORD PTR ds:0x42a18b,0x3cb9
  41001e:	mov    DWORD PTR [ebp-0x10],edx
  410021:	mov    edx,DWORD PTR [ebp-0x14]
  410024:	mov    DWORD PTR [ebp+0x8],edx
  410027:	jmp    0x412514
  41002c:	mov    edx,DWORD PTR [ebp+0x8]
  41002f:	mov    ebx,DWORD PTR [ebp-0x8]
  410032:	xor    DWORD PTR ds:0x42a1cb,0x42a163
  41003c:	xor    edx,eax
  41003e:	adc    DWORD PTR ds:0x42a16b,0x42a177
  410048:	xor    ebx,eax
  41004a:	sbb    DWORD PTR ds:0x42a1c3,0x42a1af
  410054:	sub    edx,ebx
  410056:	or     DWORD PTR ds:0x42a1af,edx
  41005c:	sub    edx,esi
  41005e:	and    DWORD PTR ds:0x42a133,0x0
  410068:	xor    ebx,ebx
  41006a:	xor    ebx,DWORD PTR ds:0x42a133
  410070:	inc    ebx
  410071:	mov    DWORD PTR ds:0x42a133,ebx
  410077:	cmp    DWORD PTR ds:0x42a133,0x5
  41007e:	jbe    0x4100c6
  410084:	jmp    0x41009d
  410089:	push   DWORD PTR [ebp-0x14]
  41008c:	push   DWORD PTR [ebp-0x24]
  41008f:	push   0x52a1
  410094:	push   DWORD PTR [ebp-0x20]
  410097:	call   DWORD PTR ds:0x42a2af
  41009d:	cmp    DWORD PTR ds:0x42a133,0x4
  4100a4:	jne    0x4100b9
  4100aa:	xor    ebx,ebx
  4100ac:	or     ebx,DWORD PTR ds:0x42a133
  4100b2:	inc    ebx
  4100b3:	mov    DWORD PTR ds:0x42a133,ebx
  4100b9:	cmp    DWORD PTR ds:0x42a133,0x16
  4100c0:	jb     0x410068
  4100c6:	xor    edx,eax
  4100c8:	and    DWORD PTR ds:0x42a1c3,0x0
  4100d2:	xor    ebx,ebx
  4100d4:	or     ebx,DWORD PTR ds:0x42a1c3
  4100da:	inc    ebx
  4100db:	mov    DWORD PTR ds:0x42a1c3,ebx
  4100e1:	cmp    DWORD PTR ds:0x42a1c3,0xb
  4100e8:	jbe    0x4124b4
  4100ee:	jmp    0x410108
  4100f3:	push   0x81d2
  4100f8:	push   0x1
  4100fa:	push   0x42a1a7
  4100ff:	push   DWORD PTR [ebp-0x14]
  410102:	call   DWORD PTR ds:0x42a2b3
  410108:	cmp    DWORD PTR ds:0x42a1c3,0xa
  41010f:	jne    0x410122
  410115:	mov    ebx,DWORD PTR ds:0x42a1c3
  41011b:	inc    ebx
  41011c:	mov    DWORD PTR ds:0x42a1c3,ebx
  410122:	cmp    DWORD PTR ds:0x42a1c3,0x18
  410129:	jb     0x4100d2
  41012f:	jmp    0x4124b4
  410134:	or     ah,BYTE PTR [ebp-0x5e]
  410137:	jns    0x4100be
  410139:	mov    ebp,0x52330581
  41013e:	test   al,0xcd
  410140:	jae    0x4101a8
  410142:	repnz add BYTE PTR [esi-0x52],ah
  410146:	jp     0x4101c2
  410148:	adc    bl,BYTE PTR [edi+0x7a]
  41014b:	jp     0x410163
  41014d:	(bad)  
  41014e:	rol    BYTE PTR [edi-0x645dd5ce],0x80
  410155:	add    eax,0x50a4409c
  41015a:	ret    0x6b01
  41015d:	fs xchg edx,eax
  41015f:	fisttp DWORD PTR [ecx]
  410161:	jnp    0x4e3e8c4
  410167:	and    DWORD PTR [edx],eax
  410169:	jnp    0x410135
  41016b:	jecxz  0x41013c
  41016d:	pop    eax
  41016e:	cmp    cl,BYTE PTR [esi-0x3a8828c7]
  410174:	dec    edx
  410175:	pusha  
  410176:	xor    DWORD PTR [ecx-0x2e1478d8],ebx
  41017c:	cmp    eax,0x12894d3c
  410181:	pop    ecx
  410182:	mov    ?,ebp
  410184:	je     0x410175
  410186:	dec    eax
  410187:	fidiv  WORD PTR [ebx+0x32]
  41018a:	pop    ds
  41018b:	push   ebx
  41018c:	jno    0x410199
  41018e:	(bad)  
  41018f:	mov    bl,0x5
  410191:	lock pop ds
  410193:	(bad)  
  410194:	jmp    0x788b:0xcbb349e1
  41019b:	jno    0x4101a8
  41019d:	aad    0xfd
  41019f:	adc    BYTE PTR [edx],cl
  4101a1:	(bad)  
  4101a2:	(bad)  ds:0x2eff18e3
  4101a8:	cli    
  4101a9:	loop   0x410145
  4101ab:	fwait
  4101ac:	push   0x62fb016d
  4101b1:	test   DWORD PTR [edi],ebx
  4101b3:	inc    edi
  4101b4:	in     eax,0x92
  4101b6:	and    BYTE PTR [esi+0x7f],dh
  4101b9:	sub    DWORD PTR [ebx+0x12d5d255],edx
  4101bf:	(bad)  
  4101c0:	mov    dh,0x95
  4101c2:	dec    esi
  4101c3:	imul   ecx,edi,0x27
  4101c6:	lea    edi,[ecx+0x24]
  4101c9:	add    DWORD PTR [ecx],0x35dd9e30
  4101cf:	and    al,0x1
  4101d1:	jmp    0x410161
  4101d3:	in     al,dx
  4101d4:	lock mov cl,0x2b
  4101d7:	sbb    al,0x6e
  4101d9:	call   0x1f367507
  4101de:	pop    edi
  4101df:	(bad)  
  4101e0:	js     0x4101b7
  4101e2:	imul   edi,DWORD PTR [ebx],0x4c4c4008
  4101e8:	scas   eax,DWORD PTR es:[edi]
  4101e9:	lods   eax,DWORD PTR ds:[esi]
  4101ea:	stos   BYTE PTR es:[edi],al
  4101eb:	ins    DWORD PTR es:[edi],dx
  4101ec:	and    WORD PTR [ebp+0x4e],dx
  4101f0:	fdiv   st,st(3)
  4101f2:	jnp    0x4101c5
  4101f4:	mov    ebp,0x5dfaf3e1
  4101f9:	ins    DWORD PTR es:[edi],dx
  4101fa:	aaa    
  4101fb:	sbb    BYTE PTR [edi],ah
  4101fd:	jnp    0x410244
  4101ff:	dec    edx
  410200:	lods   al,BYTE PTR ds:[esi]
  410201:	aad    0xb8
  410203:	sar    ch,0x80
  410206:	icebp  
  410207:	pop    ss
  410208:	jp     0x4101f9
  41020a:	cmp    eax,0xc36dbec9
  41020f:	clc    
  410210:	stc    
  410211:	push   es
  410212:	push   ss
  410213:	xor    DWORD PTR [edi-0x3b660335],edx
  410219:	xchg   ecx,eax
  41021a:	sub    bl,BYTE PTR [ebp+eax*2-0x173c0f28]
  410221:	xchg   edi,eax
  410222:	test   BYTE PTR [esi-0x25],cl
  410225:	mov    bl,0xc3
  410227:	int3   
  410228:	aad    0x49
  41022a:	push   es
  41022b:	ror    DWORD PTR [esp+eax*2+0x49d57bda],0x20
  410233:	and    bl,dh
  410235:	and    eax,0xe419c077
  41023a:	pop    ebx
  41023b:	jmp    0x53b4:0x7eca2cef
  410242:	add    DWORD PTR [edi],esi
  410244:	or     DWORD PTR ds:0x6b352421,0x564c8a5d
  41024e:	js     0x4101d1
  410250:	cmp    eax,0x531c19e4
  410255:	mov    ebp,0xa1d0638e
  41025a:	pop    edx
  41025b:	mov    al,ds:0x194f0989
  410260:	jmp    0x4102c2
  410262:	sahf   
  410263:	adc    al,0xbe
  410265:	and    ebp,DWORD PTR [eax]
  410267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410268:	shl    bh,1
  41026a:	and    cl,BYTE PTR [ebp+0x42748c0c]
  410270:	lea    ecx,[eax-0x14]
  410273:	push   esp
  410274:	lea    ebx,[ebx-0xd1e5025]
  41027a:	ja     0x410264
  41027c:	adc    edx,DWORD PTR [ebx+ecx*4]
  41027f:	jns    0x41029a
  410281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410282:	pusha  
  410283:	call   0xa9ee9313
  410288:	and    al,0xea
  41028a:	push   es
  41028b:	data16 in al,dx
  41028d:	xchg   BYTE PTR [ebx],cl
  41028f:	dec    eax
  410290:	loope  0x41029c
  410292:	push   0x59
  410294:	xor    ebx,DWORD PTR [edx+ebp*1]
  410297:	sub    edx,DWORD PTR [edx+0x24]
  41029a:	iret   
  41029b:	pop    eax
  41029c:	mov    ds:0xa2ae37d9,al
  4102a1:	test   eax,0x4fea0424
  4102a6:	cmp    BYTE PTR ds:0x4ba38f41,dh
  4102ac:	das    
  4102ad:	sub    dl,BYTE PTR [edi-0x248934c]
  4102b3:	std    
  4102b4:	das    
  4102b5:	call   0xb91e:0x88f20f52
  4102bc:	mov    ds,WORD PTR [ecx+0x1c]
  4102bf:	inc    eax
  4102c0:	aam    0xdb
  4102c2:	cmp    BYTE PTR [edx-0x631e570b],bh
  4102c8:	outs   dx,DWORD PTR ds:[esi]
  4102c9:	pop    edx
  4102ca:	lds    edi,FWORD PTR [ecx]
  4102cc:	test   DWORD PTR [esi],ebp
  4102ce:	daa    
  4102cf:	push   es
  4102d0:	pusha  
  4102d1:	sbb    BYTE PTR [eax-0x34],ch
  4102d4:	call   0xc00b:0x75e6a1bd
  4102db:	cmc    
  4102dc:	jb     0x410316
  4102de:	pop    edi
  4102df:	sbb    al,0xca
  4102e1:	or     al,0x38
  4102e3:	mov    ebp,0x7dcb4764
  4102e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102e9:	cld    
  4102ea:	sbb    edi,esi
  4102ec:	cwde   
  4102ed:	pop    ecx
  4102ee:	(bad)  
  4102ef:	rcr    BYTE PTR [ecx+esi*1+0x426957c6],cl
  4102f6:	(bad)  
  4102f7:	pop    ebx
  4102f8:	test   BYTE PTR [ecx-0x31],dl
  4102fb:	lahf   
  4102fc:	mov    ebp,0x44e857f7
  410301:	push   edi
  410302:	fwait
  410303:	pop    eax
  410304:	jne    0x41031e
  410306:	push   ecx
  410307:	jbe    0x410348
  410309:	mov    ebp,0x6c729d71
  41030e:	(bad)  
  41030f:	in     eax,0x45
  410311:	rcl    ah,1
  410313:	jg     0x410327
  410315:	push   ebx
  410316:	jns    0x41031f
  410318:	and    dl,BYTE PTR ds:0x16dea6bf
  41031e:	and    ah,BYTE PTR [ebx-0x5e]
  410321:	inc    eax
  410322:	cli    
  410323:	inc    ebp
  410324:	mov    edx,0xbacce612
  410329:	pushaw 
  41032b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41032c:	lock mov WORD PTR [ecx-0x23214714],gs
  410333:	add    BYTE PTR [edx-0x4051641c],ah
  410339:	push   ebp
  41033b:	mov    ebx,0x6a81ae82
  410340:	push   ebp
  410341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410342:	popf   
  410343:	(bad)  
  410344:	stc    
  410345:	push   eax
  410346:	aas    
  410347:	mov    esp,0x800c1d16
  41034c:	fnstenv [ebx]
  41034e:	arpl   WORD PTR [ecx-0x4b],si
  410351:	jo     0x4103cf
  410353:	cmp    al,0x96
  410355:	jmp    0xa6ebc785
  41035a:	push   ebp
  41035b:	inc    ebp
  41035c:	add    BYTE PTR [edi+0x35],0x5f
  410360:	xor    al,BYTE PTR [ecx]
  410362:	cmp    eax,0x89c8f305
  410367:	or     dh,BYTE PTR [edi]
  410369:	pop    ss
  41036a:	add    BYTE PTR [ebx+0x65a75ab5],dl
  410370:	cdq    
  410371:	jl     0x410329
  410373:	sbb    DWORD PTR [edi+0x3234c053],esp
  410379:	cmp    eax,0x9424d1aa
  41037e:	or     BYTE PTR [ebx-0x6b],dl
  410381:	pop    es
  410382:	push   0x85c3bbd1
  410387:	inc    ebp
  410388:	and    ebx,DWORD PTR [esi+0x14]
  41038b:	add    cl,BYTE PTR [esi-0x59f182d3]
  410391:	loopne 0x4103af
  410393:	jno    0x41034a
  410395:	mov    cs,ebx
  410397:	or     ch,BYTE PTR [edi+0x761ba798]
  41039d:	and    DWORD PTR [ecx+0x5dfe8195],ebx
  4103a3:	mov    ebx,0x147959bf
  4103a8:	add    al,0xa5
  4103aa:	jmp    0x55a6:0x79cd61ba
  4103b1:	pop    edi
  4103b2:	(bad)  
  4103b4:	test   BYTE PTR [edi-0x20],dh
  4103b7:	ss repnz inc ebx
  4103ba:	sub    DWORD PTR [ebx],eax
  4103bc:	fmul   DWORD PTR [esi+esi*8-0x70]
  4103c0:	or     ch,BYTE PTR [ebp+0x4d]
  4103c3:	dec    edi
  4103c4:	jmp    0xa0424f34
  4103c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103ca:	repnz in eax,0x1b
  4103cd:	ret    
  4103ce:	sbb    al,0xec
  4103d0:	in     al,0xb8
  4103d2:	dec    edi
  4103d3:	xchg   esi,eax
  4103d4:	outs   dx,DWORD PTR ds:[esi]
  4103d5:	std    
  4103d6:	(bad)  
  4103d7:	xlat   BYTE PTR ds:[ebx]
  4103d8:	jmp    0x4103d8
  4103da:	clc    
  4103db:	lahf   
  4103dc:	add    al,0x27
  4103de:	vpunpcklqdq ymm1,ymm1,YMMWORD PTR [ecx]
  4103e2:	mov    BYTE PTR [esi-0x43d0dca],dl
  4103e8:	inc    ecx
  4103e9:	inc    edi
  4103ea:	xor    al,0xfe
  4103ec:	and    al,0x7d
  4103ee:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4103f0:	test   DWORD PTR [ebx],esi
  4103f2:	mov    WORD PTR [esi-0x65efc2e1],ss
  4103f8:	stc    
  4103f9:	add    BYTE PTR [edx-0x73],bh
  4103fc:	cmp    eax,0x46f33bc1
  410401:	add    edx,DWORD PTR [ecx-0x211810c9]
  410407:	pusha  
  410408:	pop    esi
  410409:	add    ebp,DWORD PTR [eax-0x5e]
  41040c:	mov    esp,0xa3020e33
  410411:	shl    eax,0x3a
  410414:	(bad)  
  410415:	(bad)  
  410416:	hlt    
  410417:	into   
  410418:	sbb    bl,dl
  41041a:	das    
  41041b:	pop    eax
  41041c:	and    DWORD PTR [edi+0x37],esi
  41041f:	jmp    bp
  410422:	pop    ebx
  410423:	mov    bh,0xb6
  410425:	rol    BYTE PTR [edi-0x70c3de8b],1
  41042b:	into   
  41042c:	imul   edi,DWORD PTR [edi-0x3fb23b8d],0xb55cf1f7
  410436:	imul   DWORD PTR [ebx+0x7]
  410439:	push   esi
  41043a:	sub    dl,BYTE PTR [edi-0x42]
  41043d:	inc    ebp
  41043e:	or     eax,edi
  410440:	jne    0x4104b6
  410442:	push   es
  410443:	ja     0x4103ec
  410445:	inc    esp
  410446:	sub    ah,ah
  410448:	add    BYTE PTR [eax-0x6f60530c],dl
  41044e:	jno    0x41041b
  410450:	arpl   WORD PTR [ebp+0x63],sp
  410453:	imul   esi,DWORD PTR [ebx+eax*2+0x5a],0x335d4e67
  41045b:	ja     0x410487
  41045d:	push   0x52bd54cf
  410462:	add    al,0xba
  410464:	mov    esi,0x794bb6c
  410469:	add    bp,WORD PTR [edi-0x60]
  41046d:	fcomp  DWORD PTR [esi]
  41046f:	mov    bh,0xd
  410471:	and    DWORD PTR [ebx],ebx
  410473:	(bad)  
  410475:	aad    0xaa
  410477:	neg    DWORD PTR [ebx-0x570a5d8f]
  41047d:	out    dx,al
  41047e:	ja     0x41044e
  410480:	sbb    eax,0x5ec29a1
  410485:	sub    esi,DWORD PTR [edx+0x64485d98]
  41048b:	hlt    
  41048c:	imul   ecx,eax,0xd645480f
  410492:	ret    
  410493:	ins    DWORD PTR es:[edi],dx
  410494:	into   
  410495:	popf   
  410496:	mov    cs,WORD PTR [esp+ebp*4]
  410499:	test   eax,0xcf020bd7
  41049e:	mov    dl,0xfb
  4104a0:	jb     0x4104ea
  4104a2:	in     eax,0xa
  4104a4:	mov    edi,0xeb55de67
  4104a9:	bound  ebp,QWORD PTR [edx+0x24]
  4104ac:	and    eax,0xc6734a22
  4104b1:	jmp    0x7fe046f3
  4104b6:	mov    fs,edx
  4104b8:	xor    eax,0xc0451b3d
  4104bd:	cmp    DWORD PTR [ebx+0x4e52e11f],esi
  4104c3:	hlt    
  4104c4:	jmp    0x9b96:0x2fe6caca
  4104cb:	sbb    eax,0x2d6e2abd
  4104d0:	mov    esi,0x27c022ab
  4104d5:	(bad)  
  4104d6:	jle    0x410550
  4104d8:	cmc    
  4104d9:	xchg   ebx,eax
  4104da:	pop    es
  4104db:	and    ebp,ebp
  4104dd:	xor    dl,BYTE PTR [edi]
  4104df:	repz mov dl,0xca
  4104e2:	and    edx,eax
  4104e4:	cli    
  4104e5:	adc    cl,cl
  4104e7:	add    DWORD PTR [ecx+0xd15c940],edx
  4104ed:	push   cs
  4104ee:	inc    edx
  4104ef:	push   edx
  4104f0:	and    ah,0x3
  4104f3:	(bad)  
  4104f4:	fwait
  4104f5:	jns    0x41053b
  4104f7:	lods   al,BYTE PTR ds:[esi]
  4104f8:	aam    0xd1
  4104fa:	sbb    ch,BYTE PTR [edi+0x5d1c15f4]
  410500:	fucom  st(0)
  410502:	rcl    DWORD PTR [edx],1
  410504:	shl    ebp,0x1d
  410507:	aad    0x5d
  410509:	test   al,0xc0
  41050b:	repz jle 0x4104ef
  41050e:	sub    BYTE PTR [ebp+ebp*2-0x788b2583],ah
  410515:	cdq    
  410516:	loop   0x4104ea
  410518:	mov    eax,ds:0xd9af7dc7
  41051d:	adc    edx,eax
  41051f:	mov    eax,0xdcf45c27
  410524:	cmp    eax,0x4d8c4e71
  410529:	rcl    BYTE PTR [edi+0x7b],0xe3
  41052d:	in     al,0x75
  41052f:	dec    eax
  410530:	retf   
  410531:	xchg   edx,eax
  410532:	les    edx,FWORD PTR ds:0xe1cbabde
  410538:	rol    DWORD PTR ds:0xa6c03798,cl
  41053e:	in     al,0xb8
  410540:	inc    esp
  410541:	mov    ds:0x38155a4e,al
  410546:	sbb    DWORD PTR [ebp-0x4e0edf79],ecx
  41054c:	or     eax,0x6f0e1dbb
  410551:	pop    es
  410552:	adc    eax,0x601be15e
  410557:	ja     0x410548
  410559:	jno    0x410572
  41055b:	ficomp WORD PTR [ebx+0x27]
  41055e:	jge    0x4104ed
  410560:	jmp    0x4105b7
  410562:	cdq    
  410563:	ret    
  410564:	mov    al,0xe9
  410566:	aam    0x34
  410568:	imul   edi,DWORD PTR [esi-0x72],0xffffff8a
  41056c:	mov    WORD PTR [edx+0x64],cs
  41056f:	add    edx,ebp
  410571:	data16 add BYTE PTR [eax+0xaf21307],al
  410578:	lea    esi,[eax-0x9]
  41057b:	mov    ds:0x3e6618e5,eax
  410580:	pusha  
  410581:	jae    0x41050c
  410583:	sub    eax,0x301738c2
  410588:	xlat   BYTE PTR ds:[ebx]
  410589:	xchg   edx,eax
  41058a:	ret    0xaca5
  41058d:	sbb    BYTE PTR [eax+0x56],0x1e
  410591:	mov    dh,BYTE PTR [eax+0x14]
  410594:	adc    BYTE PTR [edx-0x24],al
  410597:	in     eax,0x55
  410599:	and    DWORD PTR [esi],ebp
  41059b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41059c:	std    
  41059d:	or     dl,BYTE PTR [ecx]
  41059f:	les    esi,FWORD PTR [ebx]
  4105a1:	push   esp
  4105a2:	dec    ebx
  4105a3:	dec    ecx
  4105a4:	icebp  
  4105a5:	xlat   BYTE PTR ds:[ebx]
  4105a6:	loop   0x41061f
  4105a8:	std    
  4105a9:	popa   
  4105aa:	sbb    eax,DWORD PTR [ebp+edx*8+0x66ef81ad]
  4105b1:	pop    ss
  4105b2:	adc    eax,0x3db541cd
  4105b7:	(bad)  
  4105b8:	stos   BYTE PTR es:[edi],al
  4105b9:	push   eax
  4105ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105bb:	push   edi
  4105bc:	jmp    FWORD PTR [ebx+0x4c]
  4105bf:	adc    edi,DWORD PTR [ebp+0x351c5511]
  4105c5:	div    bh
  4105c7:	xchg   ecx,eax
  4105c8:	xor    DWORD PTR [eax-0x40],eax
  4105cb:	or     eax,0x3dfcf7f1
  4105d0:	xchg   edi,eax
  4105d1:	test   cl,dl
  4105d3:	pop    eax
  4105d4:	mov    bl,0x19
  4105d6:	aad    0xe7
  4105d8:	mov    dh,0x30
  4105da:	test   BYTE PTR [ecx-0x4757b898],bh
  4105e0:	push   ss
  4105e1:	push   esi
  4105e2:	inc    eax
  4105e3:	xchg   ebx,eax
  4105e4:	sahf   
  4105e5:	sahf   
  4105e6:	xchg   ecx,eax
  4105e7:	push   es
  4105e8:	gs adc esi,esi
  4105eb:	mov    al,ds:0x70bfe87b
  4105f0:	jmp    0x410611
  4105f2:	aam    0xed
  4105f4:	fst    DWORD PTR [ecx+0x30]
  4105f7:	pushf  
  4105f8:	stc    
  4105f9:	push   es
  4105fa:	mov    cs,WORD PTR [eax]
  4105fc:	and    eax,0x44d74eda
  410601:	mov    ecx,0x56c0ba8c
  410606:	mov    esp,0xfb032304
  41060b:	xchg   esi,eax
  41060c:	call   DWORD PTR [ebp-0x588fb769]
  410612:	pop    ecx
  410613:	icebp  
  410614:	sub    al,0xf0
  410616:	sbb    al,0x82
  410618:	aad    0xab
  41061a:	sub    DWORD PTR [di],ebx
  41061d:	push   es
  41061e:	dec    edi
  41061f:	push   edi
  410620:	jp     0x410658
  410622:	jbe    0x4105f1
  410624:	sub    esi,DWORD PTR [ebp+0x1cbba751]
  41062a:	fistp  WORD PTR [edi]
  41062c:	jae    0x410678
  41062e:	dec    esp
  41062f:	cmp    DWORD PTR [edi+ebp*1],eax
  410632:	inc    edx
  410633:	or     BYTE PTR [ebx],bh
  410635:	dec    edi
  410636:	hlt    
  410637:	mov    dl,0x69
  410639:	in     al,0x78
  41063b:	xchg   esi,eax
  41063c:	or     eax,DWORD PTR [edx-0x50]
  41063f:	call   0x4945bddf
  410644:	stos   BYTE PTR es:[edi],al
  410645:	sub    DWORD PTR [edi+0x2de7f6c9],edx
  41064b:	push   ebp
  41064c:	mov    ecx,0x90d94dff
  410651:	push   cs
  410652:	fs pop ebx
  410654:	pop    ebx
  410655:	inc    eax
  410656:	xor    bl,BYTE PTR [ebp+0x71]
  410659:	fld    st(1)
  41065b:	jae    0x410621
  41065d:	add    DWORD PTR [esi-0x4fa71ebc],esi
  410663:	dec    ecx
  410664:	popa   
  410665:	jbe    0x4106ab
  410667:	into   
  410668:	adc    DWORD PTR [esi+0x618285f4],ebx
  41066e:	adc    al,0x5d
  410670:	stc    
  410671:	retf   0x1f18
  410674:	or     BYTE PTR [ebx+0x5e75d867],al
  41067a:	and    al,0x91
  41067c:	mov    edi,gs
  41067e:	ror    BYTE PTR [eax],cl
  410680:	test   al,0x86
  410682:	test   eax,0xd44b686b
  410687:	pop    ebp
  410688:	ja     0x410620
  41068a:	pop    eax
  41068b:	pop    ebp
  41068c:	out    dx,al
  41068d:	out    0x55,eax
  41068f:	push   cs
  410690:	pop    ds
  410691:	dec    esp
  410692:	sub    eax,0x67aafc
  410697:	inc    edx
  410698:	inc    eax
  410699:	in     eax,dx
  41069a:	sub    al,0xcb
  41069c:	dec    ebp
  41069d:	test   BYTE PTR [edx-0x2971e8e6],dl
  4106a3:	xchg   esi,eax
  4106a4:	dec    esi
  4106a5:	adc    BYTE PTR [ebx+0x51c54332],al
  4106ab:	or     DWORD PTR [ebx+0x5471d53e],esi
  4106b1:	jmp    0xd49ed152
  4106b6:	mov    ebx,0x971a0bac
  4106bb:	lahf   
  4106bc:	push   es
  4106bd:	enter  0x189a,0x4
  4106c1:	push   ecx
  4106c2:	les    ebx,FWORD PTR [ebp+0x11]
  4106c5:	loope  0x410674
  4106c7:	xor    DWORD PTR [ecx],0x26
  4106ca:	add    DWORD PTR [eax+0x39431b28],0xc0906288
  4106d4:	sub    edx,esp
  4106d6:	pop    ecx
  4106d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106d8:	in     al,dx
  4106d9:	dec    ebp
  4106da:	mov    al,ds:0xa239187d
  4106df:	mov    al,ds:0x61d75eef
  4106e4:	rol    DWORD PTR [ecx-0x21],1
  4106e7:	dec    edi
  4106e8:	mov    BYTE PTR [eax*2+0x6a60ea42],al
  4106ef:	nop
  4106f0:	in     eax,0xce
  4106f2:	mov    ah,0xe
  4106f4:	lds    ebx,FWORD PTR [ebx+eiz*2+0x167c58b]
  4106fb:	dec    ecx
  4106fc:	test   al,0x19
  4106fe:	retf   0x3840
  410701:	es and eax,0x4760f153
  410707:	or     bl,BYTE PTR [edx]
  410709:	cld    
  41070a:	or     eax,0xbe02c322
  41070f:	rcr    edx,0x3f
  410712:	ja     0x4106d0
  410714:	xchg   BYTE PTR ds:0x1effb940,bl
  41071a:	mov    bh,0x9
  41071c:	mov    ds:0xcbd9115d,eax
  410721:	xor    ecx,DWORD PTR [ecx-0x2c65daa]
  410727:	ds pop es
  410729:	or     BYTE PTR [ebx],cl
  41072b:	cld    
  41072c:	inc    ebx
  41072d:	aas    
  41072e:	xchg   edi,eax
  41072f:	(bad)  
  410730:	mov    ebp,0x8d5eee7a
  410735:	mov    ah,0x6e
  410737:	fwait
  410738:	adc    DWORD PTR [ebp-0x3],esi
  41073b:	shr    ecx,1
  41073d:	mov    al,al
  41073f:	xchg   esp,eax
  410740:	shr    eax,0x13
  410743:	push   es
  410744:	ds loop 0x41078d
  410747:	imul   esp,DWORD PTR fs:[eax-0x69e1c1c8],0x97d6cff4
  410752:	push   ecx
  410753:	or     eax,0xce93f77
  410758:	loope  0x410750
  41075a:	idiv   BYTE PTR [ebp+0xf]
  41075d:	sbb    BYTE PTR [esi+eiz*2],cl
  410760:	imul   eax,DWORD PTR [ebp-0x40],0xffffff8f
  410764:	sbb    al,0xed
  410766:	push   es
  410767:	int3   
  410768:	mov    al,dl
  41076a:	pop    ecx
  41076b:	(bad)  
  41076c:	fsubr  QWORD PTR [edi]
  41076e:	or     al,BYTE PTR [edx+0xa]
  410771:	les    edx,FWORD PTR [ecx+0x57]
  410774:	lea    esi,[edx-0x2a]
  410777:	or     DWORD PTR [edx+0x28],ebp
  41077a:	sub    ah,ah
  41077c:	(bad)  
  41077d:	cmc    
  41077e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41077f:	mov    al,ds:0x9c47d4f4
  410784:	adc    edi,edx
  410786:	or     DWORD PTR [edi],ebp
  410788:	push   0x36
  41078a:	inc    esp
  41078b:	pusha  
  41078c:	xor    eax,0xbe8d0525
  410791:	fwait
  410792:	mov    es,ebp
  410794:	xchg   esp,eax
  410795:	xchg   ebp,eax
  410796:	cmp    ch,BYTE PTR [edi+ebp*4+0x60]
  41079a:	pop    ecx
  41079b:	jmp    0x410810
  41079d:	xor    al,0xe0
  41079f:	test   DWORD PTR [edx+0x42],0xd41b77ec
  4107a6:	inc    esp
  4107a7:	push   esp
  4107a8:	fnsave [edx]
  4107aa:	in     al,0x0
  4107ac:	jle    0x410762
  4107ae:	lods   al,BYTE PTR ds:[esi]
  4107af:	xor    eax,0x65f238e8
  4107b4:	push   esi
  4107b5:	popa   
  4107b6:	sbb    al,dh
  4107b8:	fs pop eax
  4107ba:	mov    bl,0x3e
  4107bc:	mov    al,ds:0x4aa3379b
  4107c1:	test   BYTE PTR cs:[eax],bh
  4107c4:	idiv   BYTE PTR [eax+0x50]
  4107c7:	inc    ebp
  4107c8:	push   ebp
  4107c9:	cld    
  4107ca:	fs lahf 
  4107cc:	push   esi
  4107cd:	dec    ebp
  4107ce:	shrd   DWORD PTR [eax],ebp,cl
  4107d1:	sar    DWORD PTR [ebp-0x55306053],1
  4107d7:	int3   
  4107d8:	out    dx,eax
  4107d9:	adc    bl,dh
  4107db:	in     eax,0x24
  4107dd:	out    0x52,eax
  4107df:	fs cs jle 0x41079b
  4107e3:	xlat   BYTE PTR ds:[ebx]
  4107e4:	out    dx,al
  4107e5:	sub    eax,0x647665d7
  4107ea:	fucom  st(3)
  4107ec:	fistp  DWORD PTR [eax+edi*1+0x8707ce9]
  4107f3:	and    al,0xf5
  4107f5:	fcom   QWORD PTR [esi]
  4107f7:	and    DWORD PTR [ecx-0xd],0x48ef9774
  4107fe:	scas   al,BYTE PTR es:[edi]
  4107ff:	xchg   ecx,eax
  410800:	retf   
  410801:	popf   
  410802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410803:	dec    DWORD PTR [eax]
  410805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410806:	pop    edi
  410807:	jnp    0x41081b
  410809:	and    bl,bl
  41080b:	jl     0x41083f
  41080d:	stos   DWORD PTR es:[edi],eax
  41080e:	pop    ecx
  41080f:	add    BYTE PTR [ebx-0x2b7954f5],dh
  410815:	sub    al,BYTE PTR [esi]
  410817:	push   0xa81e1660
  41081c:	cdq    
  41081d:	adc    ah,cl
  41081f:	retf   
  410820:	mov    edi,0x6f91bda8
  410825:	sub    ecx,DWORD PTR [eax]
  410827:	sub    DWORD PTR [ebx+0x2a71ab31],esi
  41082d:	loop   0x4107d5
  41082f:	mov    eax,0x4c7a5314
  410834:	leave  
  410835:	xchg   ebx,eax
  410836:	out    0xa2,eax
  410838:	inc    ebx
  410839:	imul   edi,DWORD PTR [ecx],0x64
  41083c:	sbb    al,0x86
  41083e:	call   FWORD PTR [ecx+0x50]
  410841:	push   cs
  410842:	xchg   esi,eax
  410843:	loop   0x4107e2
  410845:	mov    al,0xb1
  410847:	mov    ds:0x1ba21d3f,al
  41084c:	dec    ecx
  41084d:	push   edi
  41084e:	pop    eax
  41084f:	popa   
  410850:	xlat   BYTE PTR ds:[ebx]
  410851:	jne    0x410869
  410853:	sbb    dh,ch
  410855:	push   ebp
  410856:	xchg   edi,eax
  410857:	sbb    edi,DWORD PTR ds:0xe2b19777
  41085d:	imul   edx,DWORD PTR [ebp-0x11aa1f91],0x13
  410864:	push   esi
  410865:	das    
  410866:	jns    0x410870
  410868:	jne    0x41083f
  41086a:	dec    edi
  41086b:	push   esp
  41086c:	lds    ecx,FWORD PTR [edx+ebx*1+0x45e39f84]
  410873:	(bad)  
  410874:	fdiv   DWORD PTR [eax+0x48]
  410877:	pop    esi
  410878:	sbb    bh,bh
  41087a:	fst    QWORD PTR [edi+0x1ec217a6]
  410880:	mov    esp,0x81ea3301
  410885:	call   0xb7bf:0x21dde74f
  41088c:	iret   
  41088d:	mov    cl,0x1b
  41088f:	lahf   
  410890:	test   al,0x15
  410892:	mov    ?,WORD PTR [ebp+0x51368daa]
  410898:	jbe    0x41084d
  41089a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41089c:	in     al,0xdc
  41089e:	mov    ?,WORD PTR [esi+0x64]
  4108a1:	cwde   
  4108a2:	leave  
  4108a3:	pop    es
  4108a4:	jo     0x41091c
  4108a6:	(bad)  
  4108a7:	sub    esp,DWORD PTR [esp+ebp*1+0x686cdbc3]
  4108ae:	shl    DWORD PTR [ebx],0x93
  4108b1:	out    dx,al
  4108b2:	xor    ch,BYTE PTR [edx+0xf]
  4108b5:	push   ebp
  4108b6:	cmp    esi,DWORD PTR [eax-0x6da2190a]
  4108bc:	push   edx
  4108bd:	inc    edx
  4108be:	jae    0x4108bb
  4108c0:	not    ebp
  4108c2:	jmp    0xb5a7:0x9294cd6c
  4108c9:	mov    ebx,0x2d9c4b15
  4108ce:	data16 jg 0x410915
  4108d1:	mov    DWORD PTR [ecx+0xf],eax
  4108d4:	sar    dh,cl
  4108d6:	sti    
  4108d7:	int    0xdd
  4108d9:	xor    eax,0x80a61e37
  4108de:	loope  0x410862
  4108e0:	xor    edi,DWORD PTR [eax-0x63]
  4108e3:	push   ds
  4108e4:	cmc    
  4108e5:	push   ebp
  4108e6:	hlt    
  4108e7:	dec    esi
  4108e8:	in     eax,0x5b
  4108ea:	jae    0x41092d
  4108ec:	clc    
  4108ed:	and    DWORD PTR [ebp+ecx*1+0x63cb1952],edx
  4108f4:	and    ebx,DWORD PTR [ecx+0x1e2f565b]
  4108fa:	mov    esp,0x5e56b92c
  4108ff:	pop    edx
  410900:	cmp    edx,DWORD PTR [ebp+0x56]
  410903:	scas   al,BYTE PTR es:[edi]
  410904:	les    ebp,FWORD PTR ds:0xb6180cc3
  41090a:	hlt    
  41090b:	(bad)  
  41090c:	std    
  41090d:	xchg   ecx,eax
  41090e:	cmp    dl,BYTE PTR [esi]
  410910:	dec    esp
  410911:	mov    dl,cl
  410913:	retf   
  410914:	jmp    0xc868cbe5
  410919:	in     al,dx
  41091a:	sbb    edi,esp
  41091c:	add    DWORD PTR [ecx+esi*8-0x70],ebp
  410920:	and    al,0x97
  410922:	mov    ecx,0x2da23ac7
  410927:	push   0xf2f428ab
  41092c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41092d:	(bad)  
  41092e:	fdivr  DWORD PTR [edi-0x1b]
  410931:	(bad)  
  410932:	(bad)  
  410933:	pushf  
  410934:	mov    al,ds:0x5cb78bb0
  410939:	retf   0x8085
  41093c:	add    al,0x68
  41093e:	mov    esi,esp
  410940:	(bad)  
  410941:	cmp    eax,DWORD PTR [ecx+eax*4-0x17]
  410945:	jo     0x41097d
  410947:	push   es
  410948:	cmp    ebx,esi
  41094a:	sub    bh,bl
  41094c:	ja     0x4108e1
  41094e:	scas   eax,DWORD PTR es:[edi]
  41094f:	mov    ch,0xe9
  410951:	mov    eax,0xac06037e
  410956:	rol    BYTE PTR [edi-0x4d],cl
  410959:	scas   al,BYTE PTR es:[edi]
  41095a:	sub    esp,esp
  41095c:	js     0x41092e
  41095e:	jbe    0x41092c
  410960:	(bad)  
  410961:	jg     0x4108fe
  410963:	pop    DWORD PTR [eax-0x57]
  410966:	popa   
  410967:	push   eax
  410968:	or     cl,BYTE PTR [ecx+0x61]
  41096b:	cs and eax,0x487b667f
  410971:	arpl   WORD PTR [ecx-0x766d4017],sp
  410977:	jge    0x4109b2
  410979:	stos   DWORD PTR es:[edi],eax
  41097a:	lods   eax,DWORD PTR ds:[esi]
  41097b:	push   cs
  41097c:	pop    esi
  41097d:	das    
  41097e:	add    al,0x8f
  410980:	(bad)  
  410981:	arpl   si,cx
  410983:	aas    
  410984:	fnstenv [ecx]
  410986:	adc    BYTE PTR [edi+0x5f],dl
  410989:	and    ebp,ebx
  41098b:	repz in al,0x8b
  41098e:	pop    ebp
  41098f:	cli    
  410990:	inc    esi
  410991:	pop    ebp
  410992:	jl     0x41092f
  410994:	std    
  410995:	iret   
  410996:	push   ecx
  410997:	rol    cl,0x6b
  41099a:	ret    0xdf0
  41099d:	cs inc eax
  41099f:	imul   ecx,ebx,0x72cb9070
  4109a5:	mov    BYTE PTR [ecx+0x15],bl
  4109a8:	xor    dh,0x79
  4109ab:	jmp    0x2e2a8475
  4109b0:	adc    al,BYTE PTR [edx+ebp*1]
  4109b3:	dec    eax
  4109b4:	pop    esp
  4109b5:	sahf   
  4109b6:	(bad)  
  4109b7:	jo     0x4109aa
  4109b9:	pop    ecx
  4109ba:	lods   al,BYTE PTR ds:[esi]
  4109bb:	mov    ecx,0xf5f6b1b6
  4109c0:	mov    edi,0x120b6d94
  4109c5:	add    bh,BYTE PTR [eax+eax*4]
  4109c8:	adc    ah,BYTE PTR [ebx]
  4109ca:	retf   0xd583
  4109cd:	es mov edx,0x5c0fb9e
  4109d3:	sub    bh,dh
  4109d5:	push   cs
  4109d6:	aad    0xf
  4109d8:	into   
  4109d9:	fisttp WORD PTR [esi-0x42ba4ea6]
  4109df:	jmp    0xbbe9:0xfe936505
  4109e6:	mov    al,ds:0x5fcaa113
  4109eb:	arpl   WORD PTR [edx-0x1f],bp
  4109ee:	ret    
  4109ef:	into   
  4109f0:	dec    edx
  4109f1:	and    eax,DWORD PTR [ebx]
  4109f3:	mov    WORD PTR [ebx],?
  4109f5:	push   DWORD PTR [esi+0xb]
  4109f8:	fst    DWORD PTR [ebp-0x65]
  4109fb:	mov    ch,0xe4
  4109fd:	fstp   QWORD PTR [eax+0xe]
  410a00:	sbb    BYTE PTR [ebx+ebp*8+0x3c],dl
  410a04:	sar    dl,cl
  410a06:	popa   
  410a07:	cs jmp 0x66dfea05
  410a0d:	imul   esi,DWORD PTR [edx-0x42],0x4e
  410a11:	test   al,0x81
  410a13:	mov    dl,0x13
  410a15:	xor    ecx,DWORD PTR [edi-0x6f]
  410a18:	scas   eax,DWORD PTR es:[edi]
  410a19:	jp     0x410a13
  410a1b:	sub    edx,ebx
  410a1d:	mov    ch,0x22
  410a1f:	mov    ds:0xcf68a064,al
  410a24:	xor    DWORD PTR [edx],ebx
  410a26:	mov    dh,0xa5
  410a28:	pop    esp
  410a29:	adc    cl,BYTE PTR [ebx+eiz*4-0x2dcc9016]
  410a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a31:	mov    ecx,0xe7fc1009
  410a36:	pop    DWORD PTR [edx]
  410a38:	dec    ecx
  410a39:	cmp    BYTE PTR [esi*2-0x25472fb2],ch
  410a40:	ins    BYTE PTR es:[edi],dx
  410a41:	mov    dh,0xcd
  410a43:	add    dl,BYTE PTR [ebp+0x29]
  410a46:	xor    esp,DWORD PTR [esi]
  410a48:	inc    edi
  410a49:	sti    
  410a4a:	(bad)  
  410a4b:	lahf   
  410a4c:	dec    edi
  410a4d:	xchg   esp,eax
  410a4e:	test   BYTE PTR [ecx-0xa],bl
  410a51:	cmp    BYTE PTR [edx+ebp*4-0x5f],ah
  410a55:	jae    0x4109fd
  410a57:	push   ebx
  410a58:	call   0x8a26e54e
  410a5d:	int    0xb1
  410a5f:	je     0x4109f1
  410a61:	lods   eax,DWORD PTR ds:[esi]
  410a62:	dec    edi
  410a63:	lock out 0x31,al
  410a66:	and    bl,BYTE PTR [ebx-0x5f7ecb2a]
  410a6c:	jge    0x410aeb
  410a6e:	sbb    dh,BYTE PTR [esi-0x1fa832ab]
  410a74:	or     BYTE PTR [edi],0xb1
  410a77:	adc    al,0x1e
  410a79:	fst    DWORD PTR [ecx]
  410a7b:	cmp    eax,0x64bbaedf
  410a80:	rol    cl,0x5f
  410a83:	push   0xff646a4
  410a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a89:	jmp    0x99dee66
  410a8e:	rcr    DWORD PTR [ebp+0x60],0x22
  410a92:	retf   
  410a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a94:	repnz rol DWORD PTR [ecx],0x7f
  410a98:	cmp    BYTE PTR [ebx+0x6fdce2a9],0x76
  410a9f:	jg     0x410ac1
  410aa1:	adc    eax,0x4b37e35c
  410aa6:	(bad)  
  410aa7:	mov    cl,0xc2
  410aa9:	test   DWORD PTR [eax-0x55],eax
  410aac:	mov    ds:0x3bf57194,eax
  410ab1:	es or  eax,0x9d3d51d1
  410ab7:	std    
  410ab8:	push   ebx
  410ab9:	sbb    DWORD PTR [ebp-0x23],ecx
  410abc:	pop    eax
  410abd:	in     al,dx
  410abe:	pop    esp
  410abf:	ret    
  410ac0:	call   FWORD PTR [eax-0x37]
  410ac3:	jp     0x410a93
  410ac5:	div    DWORD PTR [ebp-0x6a]
  410ac8:	mov    ebp,0x2762b12c
  410acd:	lock call 0xd0f:0xe8817451
  410ad5:	push   ebx
  410ad6:	mov    ch,0x38
  410ad8:	test   dl,bl
  410ada:	mov    cl,0x93
  410adc:	pop    edx
  410add:	call   0xc74f:0x560c7925
  410ae4:	xchg   ecx,eax
  410ae5:	stos   DWORD PTR es:[edi],eax
  410ae6:	mov    bh,BYTE PTR [eax-0x7f9743d8]
  410aec:	push   ebx
  410aed:	mov    ds:0x65af710,al
  410af2:	sbb    al,0x30
  410af4:	sbb    eax,0x8a25c703
  410af9:	sbb    BYTE PTR [edx+eax*1+0x5e],al
  410afd:	push   cs
  410afe:	cmp    ebx,DWORD PTR [edx-0x58]
  410b01:	sbb    BYTE PTR [ecx+0x15],ah
  410b04:	aam    0x7e
  410b06:	cwde   
  410b07:	xor    bl,ah
  410b09:	xchg   edx,eax
  410b0a:	adc    esp,ebx
  410b0c:	in     al,0x6d
  410b0e:	add    eax,0x74e0add
  410b13:	in     eax,dx
  410b14:	mov    al,0x84
  410b16:	dec    esp
  410b17:	inc    edx
  410b18:	les    esp,FWORD PTR [ecx+0x6cacc4c8]
  410b1e:	xlat   BYTE PTR ds:[ebx]
  410b1f:	cmp    ebp,esi
  410b21:	out    dx,al
  410b22:	repz ret 0xf3ea
  410b26:	jp     0x410b6d
  410b28:	cwde   
  410b29:	xor    DWORD PTR [eax+0x15],eax
  410b2c:	add    ebx,ebx
  410b2e:	jmp    FWORD PTR [edx]
  410b30:	ficom  WORD PTR [edx]
  410b32:	fmulp  st(3),st
  410b34:	mov    edi,0x643d1244
  410b39:	or     DWORD PTR [ebx+0x2d],ebp
  410b3c:	addr16 inc edi
  410b3e:	pushf  
  410b3f:	cmp    esp,DWORD PTR [eax]
  410b41:	icebp  
  410b42:	ja     0x410b57
  410b44:	test   al,0x36
  410b46:	add    al,0x7c
  410b48:	add    bl,al
  410b4a:	dec    eax
  410b4b:	imul   eax,esi,0x48f0b958
  410b51:	int    0x11
  410b53:	dec    eax
  410b54:	push   eax
  410b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b56:	jge    0x410b9c
  410b58:	jno    0x410b9e
  410b5a:	add    eax,0x962dd3dd
  410b5f:	rcl    DWORD PTR [ebp-0x631bfe98],cl
  410b65:	leave  
  410b66:	ins    BYTE PTR es:[edi],dx
  410b67:	jg     0x410b20
  410b69:	fld    st(4)
  410b6b:	xchg   BYTE PTR [ebx+0x207aae35],cl
  410b71:	push   ebp
  410b72:	cmc    
  410b73:	and    dh,0xa
  410b76:	jl     0x410ba9
  410b78:	cmp    eax,0x916dc198
  410b7d:	cmc    
  410b7e:	and    eax,0xf4521a9e
  410b83:	pushf  
  410b84:	or     eax,esp
  410b86:	retf   
  410b87:	or     BYTE PTR [eax+0x7],dh
  410b8a:	loopne 0x410b9a
  410b8c:	mov    eax,ds:0x50d12443
  410b91:	loop   0x410ba3
  410b93:	cmp    cl,dl
  410b95:	cmc    
  410b96:	push   eax
  410b97:	js     0x410ba3
  410b99:	jnp    0x410c10
  410b9b:	pop    ecx
  410b9c:	ins    DWORD PTR es:[edi],dx
  410b9d:	mov    edi,0xef255fd7
  410ba2:	or     DWORD PTR [edx-0x201caa4c],edx
  410ba8:	icebp  
  410ba9:	or     eax,0xb4d0a900
  410bae:	fwait
  410baf:	dec    esp
  410bb0:	cld    
  410bb1:	fs sub edi,0x66
  410bb5:	dec    ebp
  410bb6:	popa   
  410bb7:	test   al,0xb1
  410bb9:	sub    DWORD PTR [ebp-0x1040fe54],edi
  410bbf:	retf   0xab4d
  410bc2:	(bad)  
  410bc3:	dec    ebp
  410bc4:	mov    al,0x52
  410bc6:	loopne 0x410c40
  410bc8:	inc    edx
  410bc9:	dec    ebp
  410bca:	pop    ss
  410bcb:	out    dx,al
  410bcc:	xor    al,0x57
  410bce:	clc    
  410bcf:	push   ds
  410bd0:	jmp    eax
  410bd2:	jbe    0x410c1a
  410bd4:	fist   DWORD PTR [eax]
  410bd6:	fs (bad) 
  410bd8:	cmp    BYTE PTR [ebx],cl
  410bda:	stc    
  410bdb:	xchg   edx,eax
  410bdc:	das    
  410bdd:	fcmovne st,st(7)
  410bdf:	sbb    bh,BYTE PTR [bx+0x5c]
  410be3:	sbb    al,0x87
  410be5:	sbb    BYTE PTR [ecx],cl
  410be7:	fdiv   DWORD PTR [esi-0xca7e42e]
  410bed:	xchg   BYTE PTR [ecx-0x50],bh
  410bf0:	cmp    BYTE PTR [eax-0x58a31398],bl
  410bf6:	mov    esp,0x76486f59
  410bfb:	adc    BYTE PTR [ecx],bh
  410bfd:	dec    edi
  410bfe:	dec    ebx
  410bff:	mov    edx,0x31fe9872
  410c04:	stc    
  410c05:	call   0x8cc29f25
  410c0a:	bound  eax,QWORD PTR [ebx]
  410c0c:	int    0x9
  410c0e:	dec    ebx
  410c0f:	jb     0x410c57
  410c11:	int3   
  410c12:	in     al,dx
  410c13:	push   ebx
  410c14:	les    ecx,FWORD PTR [edx+0x22]
  410c17:	xchg   edx,eax
  410c18:	xor    bl,ah
  410c1a:	pop    esi
  410c1b:	jmp    0x410c29
  410c1d:	pushf  
  410c1e:	and    eax,0xafe52739
  410c23:	xchg   esi,eax
  410c24:	(bad)  
  410c25:	and    edi,ebp
  410c27:	out    dx,al
  410c28:	int3   
  410c29:	xor    ebx,ebp
  410c2b:	aad    0xa4
  410c2d:	ret    0xdfb1
  410c30:	xor    al,0x24
  410c33:	mov    cl,0xdd
  410c35:	in     al,0x90
  410c37:	ins    BYTE PTR es:[edi],dx
  410c38:	sub    al,0xba
  410c3a:	push   ecx
  410c3b:	fsubr  st,st(4)
  410c3d:	shl    BYTE PTR [ebp-0x36],1
  410c40:	ins    BYTE PTR es:[edi],dx
  410c41:	outs   dx,BYTE PTR ds:[esi]
  410c42:	jne    0x410c58
  410c44:	mov    al,ds:0xaa888f79
  410c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c4a:	and    BYTE PTR [eax],dh
  410c4c:	pop    ss
  410c4d:	aaa    
  410c4e:	adc    BYTE PTR [ecx*8-0x23c83954],al
  410c55:	cs pop esi
  410c57:	js     0x410c18
  410c59:	adc    ebp,edi
  410c5b:	pusha  
  410c5c:	repnz mov al,0xcf
  410c5f:	call   0xe812:0xf3db157f
  410c66:	mov    dh,0x3c
  410c68:	shl    BYTE PTR [ecx-0xb],0x47
  410c6c:	test   eax,0x8ddcb51f
  410c71:	add    BYTE PTR [ebx],ah
  410c73:	gs imul edx,edi,0xa7b44aad
  410c7a:	mov    WORD PTR [ecx+0x7fa6a579],?
  410c80:	test   eax,0x98544969
  410c85:	jo     0x410cc9
  410c87:	fwait
  410c88:	and    DWORD PTR [eax],edx
  410c8a:	and    al,0x9a
  410c8c:	mov    bh,0x35
  410c8e:	adc    eax,0x137c4ab8
  410c93:	jl     0x410c19
  410c95:	in     al,0xa2
  410c97:	popa   
  410c98:	js     0x410c3f
  410c9a:	inc    ebp
  410c9b:	jns    0x410d0b
  410c9d:	lahf   
  410c9e:	pop    esp
  410c9f:	ins    DWORD PTR es:[edi],dx
  410ca0:	jle    0x410c2d
  410ca2:	push   cs
  410ca3:	inc    edx
  410ca4:	jg     0x410c59
  410ca6:	out    dx,eax
  410ca7:	mov    al,ds:0xd756b436
  410cac:	mov    cl,0xc7
  410cae:	ins    BYTE PTR es:[edi],dx
  410caf:	lods   eax,DWORD PTR ds:[esi]
  410cb0:	sub    al,0x7f
  410cb2:	fs mov ebp,0xbbfa3097
  410cb8:	and    BYTE PTR [esi],ah
  410cba:	mov    ah,0xde
  410cbc:	mov    ds:0x6e67ccbe,al
  410cc1:	sbb    BYTE PTR [esi+eax*1-0x52],0xb7
  410cc6:	sbb    dh,BYTE PTR [eax-0x59]
  410cc9:	or     eax,0xafd02ca9
  410cce:	loopne 0x410cad
  410cd0:	pop    es
  410cd1:	gs inc edx
  410cd3:	mov    edx,ebp
  410cd5:	push   ebx
  410cd6:	pop    edi
  410cd7:	fadd   QWORD PTR [ebp-0x39d4d4a1]
  410cdd:	popf   
  410cde:	add    BYTE PTR [eax-0x8d94ad0],0x8d
  410ce5:	dec    ecx
  410ce6:	mov    eax,ds:0x5daae9f3
  410ceb:	js     0x410ce4
  410ced:	pop    es
  410cee:	cdq    
  410cef:	add    DWORD PTR [edi+0x47ea8efa],ebp
  410cf5:	dec    ecx
  410cf6:	jl     0x410cad
  410cf8:	in     eax,0xcc
  410cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cfb:	add    DWORD PTR [edi-0x34],edx
  410cfe:	(bad)  
  410cff:	outs   dx,DWORD PTR ds:[esi]
  410d00:	(bad)  
  410d01:	xor    edi,DWORD PTR [eax+0x34483c80]
  410d07:	xor    BYTE PTR [ebp+0xff20ace],ah
  410d0d:	aad    0xd6
  410d0f:	pushf  
  410d10:	add    al,0xe9
  410d12:	and    eax,0xeed3c6f1
  410d17:	(bad)  
  410d18:	(bad)  
  410d19:	mov    esp,0x5972b5d9
  410d1e:	sahf   
  410d1f:	mov    gs,WORD PTR [ebx+0x21]
  410d22:	clc    
  410d23:	rcl    BYTE PTR [eax+0x640722fe],cl
  410d29:	sti    
  410d2a:	adc    eax,0xcee925e7
  410d2f:	cmp    BYTE PTR [ebp-0x36],al
  410d32:	jle    0x410d36
  410d34:	mov    edi,edx
  410d36:	mov    al,ds:0x1223c92d
  410d3b:	fstp   DWORD PTR [ecx-0x6c3953b8]
  410d41:	adc    BYTE PTR [edi],bh
  410d43:	sub    eax,0x18db6eb
  410d48:	xchg   ebx,eax
  410d49:	ds jbe 0x410cf0
  410d4c:	outs   dx,BYTE PTR ds:[esi]
  410d4d:	imul   ebp,DWORD PTR [ecx],0xfffffff3
  410d50:	cmp    al,0x4
  410d52:	mov    DWORD PTR [ebp+eax*8-0x3a],esp
  410d56:	xor    eax,DWORD PTR [edx+0x47ad2edc]
  410d5c:	xchg   edi,eax
  410d5d:	adc    DWORD PTR [edi+0x49],eax
  410d60:	lods   eax,DWORD PTR ds:[esi]
  410d61:	and    ah,BYTE PTR [ebp-0x13bd726e]
  410d67:	mov    edi,0x75f7e88e
  410d6c:	pop    ds
  410d6d:	imul   BYTE PTR [esi-0x59]
  410d70:	xchg   ebp,eax
  410d71:	retf   0x82df
  410d74:	ins    DWORD PTR es:[edi],dx
  410d75:	lock mov al,0xf3
  410d78:	sti    
  410d79:	bt     DWORD PTR [eax+0x26459bf9],ebx
  410d80:	mov    ds:0xbedb2470,al
  410d85:	or     BYTE PTR [esi+0x717de389],ah
  410d8b:	call   0x95c5a289
  410d90:	xchg   bh,bl
  410d92:	outs   dx,DWORD PTR ds:[esi]
  410d93:	mov    gs,WORD PTR [ebp-0x277ee2d8]
  410d99:	sar    BYTE PTR ds:0x1a3f2e4b,0xc2
  410da0:	pop    esi
  410da1:	pop    ebp
  410da2:	popa   
  410da3:	dec    ecx
  410da4:	ficom  WORD PTR [edx+0x1e]
  410da7:	pop    ebp
  410da8:	cmp    DWORD PTR [ebx],edi
  410daa:	push   0x92d2b4d6
  410daf:	adc    BYTE PTR [ebx],cl
  410db1:	xchg   ebp,eax
  410db2:	shl    dh,1
  410db4:	mov    ebx,0x505ff0a6
  410db9:	xchg   esp,eax
  410dba:	es cmc 
  410dbc:	add    BYTE PTR ds:0x8f600f7c,ah
  410dc2:	mov    ch,0xfb
  410dc4:	aaa    
  410dc5:	sti    
  410dc6:	outs   dx,BYTE PTR ds:[esi]
  410dc7:	ja     0x410dc6
  410dc9:	dec    esp
  410dca:	sub    BYTE PTR [ecx+0x33],al
  410dcd:	xchg   ch,dl
  410dcf:	mov    ebx,0x94ba8b7b
  410dd4:	and    al,0x26
  410dd6:	or     ch,BYTE PTR [edi+0x2ba24808]
  410ddc:	out    dx,eax
  410ddd:	lock dec esp
  410ddf:	out    0x3c,al
  410de1:	rdmsr  
  410de3:	in     al,dx
  410de4:	mov    eax,0x6f85a12e
  410de9:	lods   eax,DWORD PTR ds:[esi]
  410dea:	shl    BYTE PTR [ebx],cl
  410dec:	setae  BYTE PTR [ecx-0x26]
  410df0:	cdq    
  410df1:	or     dl,BYTE PTR [edx]
  410df3:	pop    ecx
  410df4:	stos   BYTE PTR es:[edi],al
  410df5:	ins    BYTE PTR es:[edi],dx
  410df6:	pop    ebp
  410df7:	test   eax,0x5377aee
  410dfc:	fiadd  WORD PTR [ebp+0x4f]
  410dff:	hlt    
  410e00:	jg     0x3ba78559
  410e06:	inc    edx
  410e07:	stos   DWORD PTR es:[edi],eax
  410e08:	pusha  
  410e09:	das    
  410e0a:	and    BYTE PTR [ebp-0x355681dd],ah
  410e10:	loop   0x410da9
  410e12:	xchg   ebp,eax
  410e13:	repnz or eax,0x8049f9ac
  410e19:	int3   
  410e1a:	ret    
  410e1b:	and    DWORD PTR [edx-0xc23f0d2],0x11
  410e22:	dec    ebx
  410e23:	xchg   esi,eax
  410e24:	xchg   edi,eax
  410e25:	sar    DWORD PTR [edx+0x1e],0xd8
  410e29:	sti    
  410e2a:	sub    BYTE PTR [ebp+0x6def45fb],dh
  410e30:	cmp    ebx,esi
  410e32:	add    BYTE PTR [ebx],0x6d
  410e35:	sar    bh,1
  410e37:	nop
  410e38:	jb     0x410e8f
  410e3a:	cmp    bh,BYTE PTR ds:0xbcd8eb1b
  410e40:	cmc    
  410e41:	call   0x622:0x99b53202
  410e48:	push   esi
  410e49:	pop    es
  410e4a:	inc    esi
  410e4b:	arpl   WORD PTR [ebx+edi*1+0x1886dd4b],di
  410e52:	inc    esp
  410e53:	scas   eax,DWORD PTR es:[edi]
  410e54:	inc    ebp
  410e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e56:	dec    ecx
  410e57:	call   0x6279:0x869a3ca7
  410e5e:	mov    ?,WORD PTR [ebp+0x4c]
  410e61:	jae    0x410eaf
  410e63:	(bad)  
  410e64:	mov    cl,0x10
  410e66:	out    dx,al
  410e67:	test   eax,0x68e9d2b7
  410e6c:	loope  0x410e6a
  410e6e:	cmp    eax,0x1af89abe
  410e73:	jns    0x410e86
  410e75:	inc    al
  410e77:	xchg   edi,eax
  410e78:	sbb    eax,0x6f66092b
  410e7d:	ins    DWORD PTR es:[edi],dx
  410e7e:	fwait
  410e7f:	test   DWORD PTR [edx],edx
  410e81:	gs jno 0x410ed5
  410e84:	out    dx,eax
  410e85:	imul   ebp,esp,0xfffffffd
  410e88:	fwait
  410e89:	push   esp
  410e8a:	push   ebx
  410e8b:	ret    0x8fef
  410e8e:	xor    DWORD PTR [ebx],0x29
  410e91:	sub    BYTE PTR [ebx+0x3c],ah
  410e94:	fcom   st(4)
  410e96:	retf   
  410e97:	mov    edx,0xd03a5487
  410e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e9d:	mov    al,ds:0x4be77b7f
  410ea2:	call   0xd9b3:0x70d62888
  410ea9:	stc    
  410eaa:	enter  0x7a95,0xd0
  410eae:	inc    ebx
  410eaf:	jmp    0x87a3e0dc
  410eb4:	inc    eax
  410eb5:	pop    ds
  410eb6:	arpl   WORD PTR [esi-0x17],sp
  410eb9:	jne    0x410f35
  410ebb:	mov    esi,DWORD PTR [esi-0x24fa8aac]
  410ec1:	dec    ecx
  410ec2:	lock jnp 0x410f0d
  410ec5:	cs or  al,0x27
  410ec8:	mov    ch,0x6e
  410eca:	aad    0xdd
  410ecc:	(bad)  
  410ecd:	jl     0x410e7e
  410ecf:	dec    ecx
  410ed0:	dec    edx
  410ed1:	mov    cl,0x47
  410ed3:	xlat   BYTE PTR ds:[ebx]
  410ed4:	in     eax,dx
  410ed5:	sahf   
  410ed6:	icebp  
  410ed7:	xchg   edi,eax
  410ed8:	xor    esi,DWORD PTR [ecx-0x218f56fb]
  410ede:	ret    
  410edf:	out    dx,al
  410ee0:	and    eax,0xfbaeeb68
  410ee5:	icebp  
  410ee6:	adc    DWORD PTR [edx-0x1ab5a583],edx
  410eec:	mov    WORD PTR [ecx+0x48eeeec8],?
  410ef2:	push   ss
  410ef3:	lea    ebx,[edi+0x4b]
  410ef6:	jmp    0xf857:0xcd827424
  410efd:	cmp    DWORD PTR [ecx+0x27],edx
  410f00:	and    edi,eax
  410f02:	lods   eax,DWORD PTR ds:[esi]
  410f03:	test   eax,0x9020b17b
  410f09:	xchg   edx,eax
  410f0a:	jmp    0xd5c7:0x253374fd
  410f11:	fsubr  DWORD PTR [eax+0x43]
  410f14:	pop    edx
  410f15:	pop    edi
  410f16:	repnz sbb dl,BYTE PTR [edi-0x5329208e]
  410f1d:	mov    ds:0x5ee99042,al
  410f22:	jne    0x410ef3
  410f24:	fcomp  QWORD PTR [esp+eax*2+0x567b7e91]
  410f2b:	pop    edi
  410f2c:	sbb    DWORD PTR [edx-0x17],esi
  410f2f:	xchg   ebx,esp
  410f31:	add    edi,DWORD PTR [esi]
  410f33:	call   0x1299:0xa9cd5380
  410f3a:	lds    ebp,FWORD PTR [eax-0x64f3033e]
  410f40:	dec    edx
  410f41:	inc    edx
  410f42:	call   0xcaab:0x253112c5
  410f49:	lea    esp,[esi+eiz*2]
  410f4c:	in     eax,dx
  410f4d:	dec    ebp
  410f4e:	push   edx
  410f4f:	jecxz  0x410f8c
  410f51:	jl     0x410ed3
  410f53:	dec    eax
  410f54:	ffreep st(1)
  410f56:	fldenv [edx-0x403fb515]
  410f5c:	push   ds
  410f5d:	or     DWORD PTR [ebp-0x2b1be5a6],eax
  410f63:	ins    BYTE PTR es:[edi],dx
  410f64:	sbb    dh,BYTE PTR [ebx+0x30cccae1]
  410f6a:	pop    eax
  410f6b:	dec    edi
  410f6c:	test   al,0xaf
  410f6e:	ror    esp,1
  410f70:	dec    ebp
  410f71:	mov    bl,0x61
  410f73:	or     BYTE PTR [edx],ah
  410f75:	fistp  WORD PTR [edi+edi*1]
  410f78:	mov    dh,0x32
  410f7a:	or     edi,eax
  410f7c:	data16 sbb bl,0x8
  410f80:	mov    ecx,0xc1e602b4
  410f85:	push   ebp
  410f86:	cmp    esp,DWORD PTR [ebx-0x5d]
  410f89:	xor    al,BYTE PTR [edx+0x8]
  410f8c:	mov    al,0x73
  410f8e:	pusha  
  410f8f:	mov    esi,0xb5d07b44
  410f94:	jle    0x410f68
  410f96:	nop
  410f97:	mov    ds:0xf6b97b73,al
  410f9c:	inc    edi
  410f9d:	jmp    0xdf99:0x998b66a5
  410fa4:	(bad)  
  410fa5:	out    dx,eax
  410fa6:	out    dx,eax
  410fa7:	outs   dx,BYTE PTR ds:[esi]
  410fa8:	xor    edx,0xffffffb8
  410fab:	pop    esp
  410fac:	mov    al,ds:0xdb829373
  410fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fb2:	xor    edx,ecx
  410fb4:	adc    BYTE PTR [ebx+0x21],ah
  410fb7:	(bad)  
  410fb8:	jg     0x410fd2
  410fba:	test   eax,0x3ece3b34
  410fbf:	sti    
  410fc0:	inc    ebp
  410fc1:	xchg   edi,eax
  410fc2:	push   eax
  410fc3:	sahf   
  410fc4:	xchg   esi,eax
  410fc5:	xchg   ebp,eax
  410fc6:	adc    WORD PTR [edi],0x9fe3
  410fcb:	adc    DWORD PTR [esi-0x18c8ab08],edx
  410fd1:	push   esp
  410fd2:	addr16 cdq 
  410fd4:	or     BYTE PTR [edi+0x5529398],dl
  410fda:	cli    
  410fdb:	lods   al,BYTE PTR ds:[esi]
  410fdc:	(bad)  
  410fdd:	cmp    DWORD PTR [ebx+0x6acb982b],eax
  410fe3:	fwait
  410fe4:	int    0x19
  410fe6:	jne    0x411034
  410fe8:	int3   
  410fe9:	lock (bad) 
  410feb:	out    0x1d,al
  410fed:	or     ebx,eax
  410fef:	shl    DWORD PTR [edx],cl
  410ff1:	je     0x410f9a
  410ff3:	or     DWORD PTR [eax+ebx*1+0x5e0d305a],edi
  410ffa:	outs   dx,DWORD PTR ds:[esi]
  410ffb:	fimul  DWORD PTR fs:[esi]
  410ffe:	jo     0x411047
  411000:	add    al,0xd7
  411002:	in     eax,0xfe
  411004:	nop
  411005:	mov    bl,0x4c
  411007:	fwait
  411008:	and    eax,0x232fae6b
  41100d:	(bad)
  411010:	xor    eax,DWORD PTR [edi+ebp*2]
  411013:	dec    ecx
  411014:	cld    
  411015:	lods   al,BYTE PTR ds:[esi]
  411016:	and    bh,ah
  411018:	sbb    DWORD PTR [ecx+0x7d423ae8],0x4f
  41101f:	test   al,0x50
  411021:	sub    DWORD PTR [edx+0x3d665557],edx
  411027:	inc    edx
  411028:	lahf   
  411029:	leave  
  41102a:	lods   al,BYTE PTR ds:[esi]
  41102b:	adc    eax,edx
  41102d:	mov    ebx,0xfe63da2
  411032:	sbb    dl,0x89
  411035:	adc    DWORD PTR [ebx+esi*1+0x79fa92ac],ecx
  41103c:	or     al,0xbe
  41103e:	push   esp
  41103f:	cmp    bl,cl
  411041:	idiv   DWORD PTR [edx+ebp*4+0x7f]
  411045:	mov    ecx,0xc4ac387c
  41104a:	out    0x19,al
  41104c:	dec    ecx
  41104d:	scas   al,BYTE PTR es:[edi]
  41104e:	adc    eax,0xe2bccdee
  411053:	and    DWORD PTR [ebx+0x67],ebx
  411056:	lea    esp,[edx-0x12c66fcb]
  41105c:	jl     0x4110d4
  41105e:	cdq    
  41105f:	and    al,bl
  411061:	jmp    0x41100a
  411063:	fist   WORD PTR [edi+edi*1]
  411066:	adc    edx,DWORD PTR [ebp+0x29]
  411069:	jb     0x411015
  41106b:	jle    0x411025
  41106d:	not    DWORD PTR [ebx]
  41106f:	push   ebp
  411070:	jnp    0x411094
  411072:	div    bh
  411074:	(bad)
  411077:	mov    cl,0xa8
  411079:	jb     0x411027
  41107b:	imul   eax,DWORD PTR [ebx+0x2f],0x1a
  41107f:	sub    esi,edx
  411081:	rcr    ecx,0x6a
  411084:	aad    0x30
  411086:	inc    esi
  411087:	scas   al,BYTE PTR es:[edi]
  411088:	mov    ah,0xa0
  41108a:	push   ebp
  41108b:	out    0xd1,eax
  41108d:	fild   WORD PTR [eax]
  41108f:	fwait
  411090:	dec    ebp
  411091:	inc    esi
  411092:	scas   al,BYTE PTR es:[edi]
  411093:	loopne 0x4110ec
  411095:	lods   al,BYTE PTR fs:[esi]
  411097:	cmp    al,0x36
  411099:	xchg   ebp,eax
  41109a:	mov    al,ds:0x412add16
  41109f:	adc    BYTE PTR ds:0x3d2d8a25,dl
  4110a5:	out    0x3e,eax
  4110a7:	pop    eax
  4110a8:	ror    DWORD PTR [ebp-0x2c],0x6d
  4110ac:	out    dx,eax
  4110ad:	pop    ds
  4110ae:	mul    BYTE PTR [edi+0x74]
  4110b1:	fidivr WORD PTR [ebx+0x43]
  4110b4:	mov    ecx,0xd08377a1
  4110b9:	pushf  
  4110ba:	sahf   
  4110bb:	xchg   esi,eax
  4110bc:	pop    ecx
  4110bd:	sahf   
  4110be:	enter  0x9dcb,0x73
  4110c2:	xor    eax,0x7a79f49d
  4110c7:	pop    edi
  4110c8:	daa    
  4110c9:	ins    BYTE PTR es:[edi],dx
  4110ca:	dec    ecx
  4110cb:	jmp    0x4c410a34
  4110d0:	sbb    DWORD PTR ds:0x55a945f6,0xffffffb2
  4110d7:	sub    al,0xdb
  4110d9:	sbb    bh,cl
  4110db:	or     BYTE PTR [edi],bh
  4110dd:	daa    
  4110de:	sbb    eax,0xdafb5687
  4110e3:	cli    
  4110e4:	mov    eax,fs
  4110e6:	xor    bl,BYTE PTR [eax]
  4110e8:	(bad)  
  4110e9:	je     0x4110b4
  4110eb:	es mov bl,0xe2
  4110ee:	pop    ecx
  4110ef:	mov    ds:0x97019d5,eax
  4110f4:	jo     0x411094
  4110f6:	mov    WORD PTR [edx+0x4d79240b],fs
  4110fc:	push   esi
  4110fd:	es cli 
  4110ff:	sar    DWORD PTR [edi-0x67],0x87
  411103:	sbb    BYTE PTR [edx],0xd0
  411106:	sahf   
  411107:	popa   
  411108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411109:	(bad)  
  41110a:	jmp    0xf382:0x8102459b
  411111:	loop   0x41113e
  411113:	outs   dx,DWORD PTR ds:[esi]
  411114:	mov    ds:0x35a90235,eax
  411119:	ss mov al,0x9c
  41111c:	leave  
  41111d:	jmp    0x24de8600
  411122:	jb     0x4110d8
  411124:	add    ah,BYTE PTR [ebp-0x31]
  411127:	adc    eax,0x837100ed
  41112c:	aam    0xa5
  41112e:	xor    cl,BYTE PTR [esi-0x33]
  411131:	and    esi,DWORD PTR [esi]
  411133:	mov    ah,0xb5
  411135:	es mov bh,0x40
  411138:	cdq    
  411139:	push   eax
  41113a:	out    0xc0,eax
  41113c:	js     0x4110d5
  41113e:	xor    eax,0x28b72afa
  411143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411144:	leave  
  411145:	pop    ds
  411146:	shl    DWORD PTR [ebp+0x3],cl
  411149:	ret    0x4cbd
  41114c:	push   es
  41114d:	inc    ecx
  41114e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41114f:	jae    0x4110db
  411151:	and    al,BYTE PTR [edi]
  411153:	pop    edx
  411154:	dec    edx
  411155:	out    dx,eax
  411156:	sti    
  411157:	rcl    DWORD PTR [ebx-0x5c5c7071],cl
  41115d:	aad    0xd5
  41115f:	mov    ebx,edx
  411161:	adc    eax,0x619e55ff
  411166:	(bad)  
  411167:	pop    edx
  411168:	sbb    BYTE PTR [ebp+edi*8+0x2c19e2b],dl
  41116f:	nop
  411170:	sub    al,0x10
  411172:	stos   BYTE PTR es:[edi],al
  411173:	dec    edi
  411174:	jne    0x41117d
  411176:	iret   
  411177:	add    edi,DWORD PTR [eax+0x24698053]
  41117d:	mov    bh,0xbd
  41117f:	add    al,0x5c
  411181:	mov    bh,0xf3
  411183:	xor    DWORD PTR [eax+0x3a0ef2dc],edi
  411189:	inc    eax
  41118a:	sub    dh,BYTE PTR [esp+ecx*2]
  41118d:	xchg   esp,eax
  41118e:	pop    ss
  41118f:	clc    
  411190:	aas    
  411191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411192:	daa    
  411193:	jb     0x4111db
  411195:	frstor [edi+0x55e4a54b]
  41119b:	shl    WORD PTR es:[edi+0x1a],cl
  4111a0:	lods   al,BYTE PTR ds:[esi]
  4111a1:	xor    al,0x4f
  4111a3:	sub    dh,BYTE PTR [ebx]
  4111a5:	sub    dh,0xc2
  4111a8:	mov    eax,0xb89d83e2
  4111ad:	fwait
  4111ae:	icebp  
  4111af:	in     eax,dx
  4111b0:	cli    
  4111b1:	frstor gs:[eax+0x5063c1cc]
  4111b8:	adc    BYTE PTR [edx+0x74],bh
  4111bb:	cmc    
  4111bc:	iret   
  4111bd:	jmp    0x573f4a15
  4111c2:	and    ebx,edx
  4111c4:	cli    
  4111c5:	pop    ebx
  4111c6:	mov    bh,0xc5
  4111c8:	imul   ebx,DWORD PTR [edx],0xffffffae
  4111cb:	add    al,0x4f
  4111cd:	retf   
  4111ce:	or     eax,0x458fa378
  4111d3:	inc    esi
  4111d4:	xchg   esp,eax
  4111d5:	hlt    
  4111d6:	repnz add cl,BYTE PTR [edx-0x6905f7a5]
  4111dd:	push   edi
  4111de:	lea    edx,[ebx]
  4111e0:	mov    cl,0xb1
  4111e2:	fstp   TBYTE PTR [ebx+esi*8+0x3e6092e]
  4111e9:	mov    edi,0x8dad7e95
  4111ee:	sub    al,0xa0
  4111f0:	mov    esp,0xa0296a15
  4111f5:	out    dx,al
  4111f6:	std    
  4111f7:	stos   DWORD PTR es:[edi],eax
  4111f8:	jle    0x41124c
  4111fa:	push   esi
  4111fb:	shl    BYTE PTR [edi+0x70],0x61
  4111ff:	xchg   DWORD PTR [edi+ecx*8+0x47dd9e18],edi
  411206:	push   ds
  411207:	jecxz  0x4111d5
  411209:	xchg   ecx,eax
  41120a:	jno    0x411209
  41120c:	mov    ch,BYTE PTR [edi-0x16a96a55]
  411212:	ja     0x4111e1
  411214:	into   
  411215:	xor    dl,ch
  411217:	les    edi,FWORD PTR [ebx]
  411219:	sbb    eax,0x17522b16
  41121e:	into   
  41121f:	mov    eax,0xc4144abf
  411224:	ror    DWORD PTR [ecx-0x2],0xab
  411228:	cmp    BYTE PTR [esi+0x78],bl
  41122b:	adc    eax,0xf732c775
  411230:	loope  0x411299
  411232:	idiv   DWORD PTR [ebp+0x799f163e]
  411238:	add    DWORD PTR [ebx+0x53],ebp
  41123b:	cmc    
  41123c:	mov    ah,BYTE PTR [edx+eax*2-0x3b765341]
  411243:	adc    al,0xf9
  411245:	sbb    eax,0xf2990c88
  41124a:	xchg   DWORD PTR [ebp-0x336ba4a6],ebp
  411250:	jmp    0x41125f
  411252:	push   ss
  411253:	xchg   esi,eax
  411254:	mov    esi,0x7b963d12
  411259:	adc    BYTE PTR [edi-0xf4b41d0],0x2b
  411260:	cmp    BYTE PTR [eax+0x4b],dh
  411263:	jmp    0x476a:0xf8849312
  41126a:	ret    
  41126b:	push   ss
  41126c:	call   0x17e2dbe1
  411271:	std    
  411272:	sub    ebp,DWORD PTR [edx+0x5]
  411275:	pop    ds
  411276:	retf   
  411277:	outs   dx,DWORD PTR ds:[esi]
  411278:	add    eax,DWORD PTR [edx]
  41127a:	sbb    dh,BYTE PTR [edx-0x53caf54f]
  411280:	fs sbb eax,0x96ff4de9
  411286:	xor    al,0xd1
  411288:	inc    ebx
  411289:	test   eax,0xbfe403
  41128e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41128f:	mov    eax,ds:0x608e9b60
  411294:	mul    DWORD PTR [eax+0x3b83fb17]
  41129a:	not    DWORD PTR [esp+eax*2+0x61]
  41129e:	or     DWORD PTR [esi+0x1aa8f10f],eax
  4112a4:	mov    bh,0x5b
  4112a6:	push   ecx
  4112a7:	pop    esp
  4112a8:	jae    0x41123e
  4112aa:	imul   ecx,eax,0x273f4297
  4112b0:	cli    
  4112b1:	and    dh,BYTE PTR [ecx]
  4112b3:	adc    BYTE PTR [ecx+0x1273ef89],ah
  4112b9:	outs   dx,DWORD PTR ds:[esi]
  4112ba:	inc    ecx
  4112bb:	repz cdq 
  4112bd:	repnz add eax,0xba921cc5
  4112c3:	jb     0x4112ee
  4112c5:	test   al,0xae
  4112c7:	cmp    DWORD PTR [esi],0x8a3e5076
  4112cd:	shl    BYTE PTR [eax+0x5d],0x96
  4112d1:	mov    edx,0x93099910
  4112d6:	xchg   DWORD PTR [ebx+0x65],ecx
  4112d9:	cmc    
  4112da:	shl    bl,0x78
  4112dd:	pop    ebp
  4112de:	ins    BYTE PTR es:[edi],dx
  4112df:	imul   ebp,DWORD PTR [bp+si+0x55f4],0xeff4f7b4
  4112e8:	adc    BYTE PTR [esi-0x64f7d08f],ah
  4112ee:	mov    eax,DWORD PTR [esi]
  4112f0:	icebp  
  4112f1:	dec    edi
  4112f2:	clc    
  4112f3:	jp     0x41128c
  4112f5:	jl     0x4112ca
  4112f7:	iret   
  4112f8:	or     dl,cl
  4112fa:	pusha  
  4112fb:	or     eax,0x208eb8b9
  411300:	jb     0x41137e
  411302:	lea    esi,[ecx+0x5e]
  411305:	fistp  WORD PTR [ebx]
  411307:	mov    ecx,0x88c99b0
  41130c:	xchg   DWORD PTR [eax-0x31c5669a],edi
  411312:	out    dx,al
  411313:	adc    cl,bh
  411315:	scas   eax,DWORD PTR es:[edi]
  411316:	push   0xd5b339f5
  41131b:	mov    edi,0xaa85098d
  411320:	aas    
  411321:	or     al,0xb7
  411323:	lods   eax,DWORD PTR ds:[esi]
  411324:	push   ss
  411325:	hlt    
  411326:	inc    ecx
  411327:	jmp    0x6f92e8bd
  41132c:	mov    ch,0xb6
  41132e:	xlat   BYTE PTR ds:[ebx]
  41132f:	fcom   QWORD PTR [edx+0x48]
  411332:	sbb    eax,0x204be62a
  411337:	retf   
  411338:	popfw  
  41133a:	mov    ebp,0xae2a5ce
  41133f:	inc    ecx
  411340:	adc    eax,0xc9e77121
  411345:	pop    esi
  411346:	or     edi,DWORD PTR [ebp-0x2f]
  411349:	scas   eax,DWORD PTR es:[edi]
  41134a:	lock loopne 0x411327
  41134d:	mov    ebx,0x9af6e933
  411352:	jp     0x4113cb
  411354:	push   esi
  411355:	inc    eax
  411356:	add    BYTE PTR [esi],0x57
  411359:	or     eax,0xb1221e55
  41135e:	test   BYTE PTR [eax],ch
  411360:	adc    eax,0x1dbe8193
  411365:	push   edi
  411366:	out    dx,eax
  411367:	jl     0x4112ff
  411369:	adc    ecx,esi
  41136b:	pop    ebp
  41136c:	jnp    0x411384
  41136e:	mov    dh,0x98
  411370:	call   0xb520:0x82433642
  411377:	jo     0x41134b
  411379:	mov    ch,0x5c
  41137b:	stos   BYTE PTR es:[edi],al
  41137c:	or     al,0x4a
  41137e:	pop    esp
  41137f:	inc    ebx
  411380:	fst    QWORD PTR [ecx+edi*4+0xc]
  411384:	mov    dl,BYTE PTR [ecx+0x5b814a4d]
  41138a:	sbb    al,0x82
  41138c:	stos   BYTE PTR es:[edi],al
  41138d:	pop    ebx
  41138e:	mov    al,0xf2
  411390:	fmul   QWORD PTR [ebp-0x45]
  411393:	(bad)  
  411394:	adc    ebp,DWORD PTR [esi+eax*1]
  411397:	sub    ch,bh
  411399:	stos   DWORD PTR es:[edi],eax
  41139a:	mov    esi,0x362f0300
  41139f:	jmp    0x4113d8
  4113a1:	js     0x411412
  4113a3:	xchg   edi,eax
  4113a4:	push   edx
  4113a5:	fcmove st,st(4)
  4113a7:	or     eax,0xc021d190
  4113ac:	not    DWORD PTR [eax]
  4113ae:	push   ebp
  4113af:	push   edx
  4113b0:	inc    ebx
  4113b1:	xchg   ebx,eax
  4113b2:	pop    ds
  4113b3:	js     0x4113cb
  4113b5:	test   BYTE PTR [eax-0x53b14d94],cl
  4113bb:	aaa    
  4113bc:	pop    ecx
  4113bd:	mov    cl,0x92
  4113bf:	in     al,0x83
  4113c1:	(bad)  
  4113c2:	pop    edx
  4113c3:	jmp    0xa4ad:0x61c09299
  4113ca:	cmp    eax,0xe696d6ea
  4113cf:	mov    gs,eax
  4113d1:	ja     0x4113d2
  4113d3:	lds    edx,FWORD PTR cs:[ebx+0x795d5ab5]
  4113da:	scas   al,BYTE PTR es:[edi]
  4113db:	mov    bh,0x47
  4113dd:	jle    0x4113d6
  4113df:	std    
  4113e0:	outs   dx,BYTE PTR ds:[esi]
  4113e1:	retf   
  4113e2:	add    BYTE PTR [esi],0x5c
  4113e5:	retf   0x2b75
  4113e8:	mov    ebp,0x2eaeb0b
  4113ed:	or     eax,DWORD PTR ds:[ebx-0x2ac660f3]
  4113f4:	pushf  
  4113f5:	fst    DWORD PTR [ebx-0x3c2c87da]
  4113fb:	(bad)  
  4113fc:	push   cs
  4113fd:	in     eax,0xb8
  4113ff:	inc    esp
  411400:	jb     0x41140b
  411402:	das    
  411403:	fmul   DWORD PTR [esp+eiz*8+0x45]
  411407:	dec    edx
  411408:	lock xchg esi,ecx
  41140b:	fisttp QWORD PTR [edi+0x68]
  41140e:	mov    dh,0xa4
  411410:	icebp  
  411411:	sbb    DWORD PTR [ebp-0x6],ebx
  411414:	shr    DWORD PTR [esi+0x681ceebe],0x40
  41141b:	out    0x60,al
  41141d:	(bad)  
  41141e:	aad    0xa2
  411420:	sahf   
  411421:	out    dx,al
  411422:	mov    edx,0x290e35c7
  411427:	retf   
  411428:	stos   BYTE PTR es:[edi],al
  411429:	retf   
  41142a:	repnz shl BYTE PTR [eax+edx*1+0x1500419c],cl
  411432:	jne    0x4113bf
  411434:	call   0x5c5c:0xf4a1c909
  41143b:	imul   eax,DWORD PTR [edx],0x2744c111
  411441:	js     0x411494
  411443:	ret    
  411444:	(bad)  
  411445:	push   0xf82acbf3
  41144a:	sbb    bh,al
  41144c:	pusha  
  41144d:	cli    
  41144e:	in     eax,0x1c
  411450:	and    eax,0x8de12df1
  411455:	jp     0x411498
  411457:	inc    ebx
  411458:	sub    al,0xd5
  41145a:	pop    edx
  41145b:	push   0xffffffeb
  41145d:	add    bl,ch
  41145f:	mov    ah,0x67
  411461:	ret    
  411462:	fsin   
  411464:	scas   eax,DWORD PTR es:[edi]
  411465:	mov    ecx,0x9912e587
  41146a:	pop    ds
  41146b:	iret   
  41146c:	xor    cl,BYTE PTR [edi-0x6b]
  41146f:	or     DWORD PTR [esi],0xb0d3a924
  411475:	dec    ebx
  411476:	push   ecx
  411477:	loopne 0x4114b2
  411479:	pop    eax
  41147a:	and    al,0x75
  41147c:	imul   edi,DWORD PTR [ebx+0x402b8e31],0xffffffe8
  411483:	cmovg  ecx,DWORD PTR ds:0xb8340a33
  41148a:	and    ch,BYTE PTR [edi]
  41148c:	dec    ecx
  41148d:	out    dx,eax
  41148e:	pop    ebx
  41148f:	jg     0x411473
  411491:	sbb    al,ah
  411493:	pusha  
  411494:	push   edx
  411495:	outs   dx,BYTE PTR ds:[esi]
  411496:	scas   eax,DWORD PTR es:[edi]
  411497:	mov    fs,WORD PTR [eax]
  411499:	inc    esp
  41149a:	lods   al,BYTE PTR ds:[esi]
  41149b:	xlat   BYTE PTR ds:[ebx]
  41149c:	mov    esp,0xe7d7e885
  4114a1:	and    BYTE PTR ds:0x895d6cae,dl
  4114a7:	aaa    
  4114a8:	sti    
  4114a9:	and    al,0x34
  4114ab:	mov    ecx,0x159364f9
  4114b0:	and    eax,0xcf0f16b8
  4114b5:	ds inc eax
  4114b7:	rcr    DWORD PTR [ebp-0x60],1
  4114ba:	jno    0x4114e2
  4114bc:	push   0x3b8d64b5
  4114c1:	dec    eax
  4114c2:	icebp  
  4114c3:	and    DWORD PTR [ebp+0x2047304f],edx
  4114c9:	sbb    DWORD PTR [edi+0x11],ecx
  4114cc:	lahf   
  4114cd:	mov    cl,dh
  4114cf:	xchg   esi,eax
  4114d0:	loope  0x4114cd
  4114d2:	xor    ecx,DWORD PTR [eax-0x79f174a]
  4114d8:	xchg   esp,eax
  4114d9:	sub    al,0xa9
  4114db:	inc    edx
  4114dc:	push   esi
  4114dd:	rol    ch,0xd5
  4114e0:	and    esp,ebp
  4114e2:	ins    BYTE PTR es:[edi],dx
  4114e3:	data16 test al,bh
  4114e6:	or     DWORD PTR [esi+0x7f],edx
  4114e9:	gs (bad) 
  4114ec:	rcl    BYTE PTR [esi-0x5b],1
  4114ef:	out    0xe6,eax
  4114f1:	leave  
  4114f2:	or     eax,0xac2cae89
  4114f7:	das    
  4114f8:	cmp    DWORD PTR [eax],esi
  4114fa:	in     al,0xc6
  4114fc:	xchg   DWORD PTR [esi-0x15e4331c],edx
  411502:	push   ebp
  411503:	xsaves [eax+0x399addc7]
  41150a:	mov    al,ds:0x40bd0f2e
  41150f:	leave  
  411510:	stc    
  411511:	pop    ds
  411512:	or     edx,eax
  411514:	std    
  411515:	adc    al,BYTE PTR [edx+0x67]
  411518:	jecxz  0x411553
  41151a:	popa   
  41151b:	jo     0x411597
  41151d:	xchg   ebp,eax
  41151e:	jo     0x411550
  411520:	daa    
  411521:	pop    ebp
  411522:	fdivr  DWORD PTR [edx+0x4b8e3a7c]
  411528:	jl     0x411506
  41152a:	push   esp
  41152b:	and    edx,DWORD PTR [eax-0x3676a667]
  411531:	(bad)  
  411532:	ja     0x411596
  411534:	xor    DWORD PTR [edi+0x0],esp
  411537:	push   ecx
  411538:	mov    esp,0x85071f90
  41153d:	sbb    DWORD PTR [ecx+0x34],ebp
  411540:	jmp    0x233e:0xad106303
  411547:	aaa    
  411548:	pop    esi
  411549:	cmp    esp,edx
  41154b:	stos   BYTE PTR es:[edi],al
  41154c:	or     ebx,DWORD PTR [ecx+0x3d5dab30]
  411552:	mov    ecx,0xe16a2526
  411557:	sub    al,0x7b
  411559:	cld    
  41155a:	cmc    
  41155b:	xchg   edx,eax
  41155c:	xchg   edi,eax
  41155d:	nop
  41155e:	out    dx,al
  41155f:	or     BYTE PTR [esi],al
  411561:	ret    
  411562:	loopne 0x4115e3
  411564:	or     BYTE PTR [edi],dh
  411566:	or     BYTE PTR [ebp-0x68],dl
  411569:	or     ch,BYTE PTR [eax-0x4]
  41156c:	lea    edx,[esi]
  41156e:	jne    0x4114f4
  411570:	mov    al,ds:0x98900c90
  411575:	call   FWORD PTR [ebx-0x3184f572]
  41157b:	aad    0x60
  41157d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41157e:	mov    edi,0xe83c46a6
  411583:	retf   0x6aa8
  411586:	inc    ebx
  411587:	add    eax,ebp
  411589:	std    
  41158a:	mov    DWORD PTR [esi+0x3e],0x2d9343b8
  411591:	outs   dx,BYTE PTR ds:[esi]
  411592:	mov    esi,0xb49dcc9d
  411597:	fiadd  WORD PTR [edx-0x3c14dc7a]
  41159d:	jmp    0xcfb60287
  4115a2:	add    edx,ebx
  4115a4:	fcomp  DWORD PTR [edx]
  4115a6:	or     DWORD PTR [edx-0x22b9e696],eax
  4115ac:	jnp    0x4115ed
  4115ae:	xchg   ecx,eax
  4115af:	es ins DWORD PTR es:[edi],dx
  4115b1:	push   cs
  4115b2:	mov    ebp,DWORD PTR [ebp+eiz*8-0x20]
  4115b6:	retf   0x806e
  4115b9:	and    ecx,esi
  4115bb:	xor    eax,0xd6ff7973
  4115c0:	psrlw  mm3,mm5
  4115c3:	scas   al,BYTE PTR es:[edi]
  4115c4:	loopne 0x411554
  4115c6:	and    ah,BYTE PTR [edi-0x58]
  4115c9:	jno    0x41154d
  4115cb:	sbb    DWORD PTR [edx+0x18],0xffffffce
  4115cf:	jp     0x4115a5
  4115d1:	std    
  4115d2:	or     DWORD PTR [esi],ecx
  4115d4:	adc    BYTE PTR [ebp-0x3dd8cfe6],bh
  4115da:	enter  0x6c6f,0x58
  4115de:	leave  
  4115df:	icebp  
  4115e0:	xchg   esi,eax
  4115e1:	fdivrp st(0),st
  4115e3:	sbb    eax,0x87280456
  4115e8:	enter  0xb760,0x6e
  4115ec:	(bad)  
  4115ed:	jg     0x4115e9
  4115ef:	loopne 0x4115da
  4115f1:	in     eax,0x35
  4115f3:	shl    DWORD PTR [eax+0xe],0x2
  4115f7:	sbb    dh,BYTE PTR [edx+eiz*8-0x12e7766]
  4115fe:	jge    0x4115fa
  411600:	cli    
  411601:	out    dx,al
  411602:	mov    bh,0xca
  411604:	mov    ebx,0x983336ba
  411609:	mov    ?,WORD PTR [ebp-0x2b91779f]
  41160f:	arpl   WORD PTR [edx-0x52fd9c4b],cx
  411615:	sbb    eax,0x891a5920
  41161a:	mov    al,ds:0x5970a1de
  41161f:	xor    al,0x3a
  411621:	cmp    al,BYTE PTR [edx+ebp*1+0x22]
  411625:	mov    cl,0x62
  411627:	inc    eax
  411628:	popf   
  411629:	leave  
  41162a:	mov    DWORD PTR [ecx+0x10a6fc9a],eax
  411630:	push   esi
  411631:	repnz and ch,cl
  411634:	xor    ch,BYTE PTR [esi+0x71a8301]
  41163a:	inc    ecx
  41163b:	xchg   ecx,eax
  41163c:	xchg   esp,eax
  41163d:	sahf   
  41163e:	ja     0x411674
  411640:	ret    0x7db4
  411643:	inc    eax
  411644:	hlt    
  411645:	and    ch,BYTE PTR [ecx*4-0x70e1ec4b]
  41164c:	clc    
  41164d:	ins    BYTE PTR es:[edi],dx
  41164e:	test   BYTE PTR [ecx+eax*1],bh
  411651:	(bad)  
  411652:	out    dx,al
  411653:	nop
  411654:	dec    esp
  411655:	sbb    edx,DWORD PTR [edi]
  411657:	xchg   ecx,eax
  411658:	jne    0x4115e0
  41165a:	sbb    ebx,DWORD PTR [edx-0xf]
  41165d:	and    edx,ebx
  41165f:	arpl   ax,bx
  411661:	dec    edi
  411662:	test   BYTE PTR [ebx],0xff
  411665:	clc    
  411666:	adc    eax,0x11d330d0
  41166b:	mov    ebx,0x3f6d5616
  411670:	mov    ch,0xf2
  411672:	cmp    dl,BYTE PTR [edx+0x53]
  411675:	ds test al,0x10
  411678:	hlt    
  411679:	or     DWORD PTR [esi+ecx*2+0x33f52e82],ebx
  411680:	xor    eax,0x8c873d5e
  411685:	das    
  411686:	fcomip st,st(0)
  411688:	dec    edi
  411689:	or     BYTE PTR [esi+esi*8+0x4b],0x9e
  41168e:	xchg   edi,eax
  41168f:	scas   eax,DWORD PTR es:[edi]
  411690:	xlat   BYTE PTR ds:[ebx]
  411691:	inc    ebp
  411692:	cld    
  411693:	xor    eax,DWORD PTR [ebx+0x73]
  411696:	fwait
  411697:	add    DWORD PTR ss:[esi],0xffffff96
  41169b:	ficomp WORD PTR [ebp-0x5d]
  41169e:	test   DWORD PTR [edx+0x1a],ecx
  4116a1:	in     eax,0x71
  4116a3:	fidivr WORD PTR [edx]
  4116a5:	aam    0x7b
  4116a7:	mov    WORD PTR [edx+0x77f16d5e],?
  4116ad:	jbe    0x4116ac
  4116af:	lock and cl,BYTE PTR [esi+ecx*4-0x2d218d06]
  4116b7:	cmp    esp,DWORD PTR [eax+0x3c]
  4116ba:	jmp    0x41171e
  4116bc:	mov    ebp,0x3c9b0fb
  4116c1:	stos   BYTE PTR es:[edi],al
  4116c2:	test   cl,0x22
  4116c5:	xchg   edx,esp
  4116c7:	popa   
  4116c8:	sub    BYTE PTR [ecx],cl
  4116ca:	xor    edx,edi
  4116cc:	pop    ebp
  4116cd:	stc    
  4116ce:	leave  
  4116cf:	int    0x6a
  4116d1:	xchg   dh,dl
  4116d3:	xchg   BYTE PTR [ebp-0xeefeda9],dl
  4116d9:	(bad)  
  4116db:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4116dd:	inc    ecx
  4116de:	mov    bl,0x4c
  4116e0:	ins    BYTE PTR es:[edi],dx
  4116e1:	pop    es
  4116e2:	cmp    eax,0x113cc657
  4116e7:	in     al,0xcb
  4116e9:	enter  0x8b4,0x57
  4116ed:	fwait
  4116ee:	xchg   esi,eax
  4116ef:	fld    TBYTE PTR [ecx+edi*1+0x3406a539]
  4116f6:	mov    ds:0xffe27a0b,al
  4116fb:	sub    DWORD PTR [ecx-0x3c5af3bb],edx
  411701:	mov    eax,0xfd66fe76
  411706:	push   0x56
  411708:	jmp    0xe189f382
  41170d:	or     al,0x1e
  41170f:	hlt    
  411710:	pop    eax
  411711:	adc    DWORD PTR [edx+0x0],edx
  411714:	mov    DWORD PTR [edi],ebx
  411716:	pop    ss
  411717:	push   0xffffffbd
  411719:	mov    ds:0xf8a21d5b,al
  41171e:	sub    DWORD PTR [eax+0x4baabc30],esp
  411724:	sbb    BYTE PTR [edx],bl
  411726:	and    BYTE PTR [eax*4-0xde801eb],dh
  41172d:	sub    ah,dl
  41172f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411730:	push   ds
  411731:	pop    eax
  411732:	adc    eax,0x75276a19
  411737:	(bad)  
  411738:	(bad)  
  411739:	test   BYTE PTR [ebx-0x525debc8],0x2b
  411740:	xor    eax,0xbb2b1860
  411745:	and    al,0x2
  411747:	adc    ecx,edx
  411749:	or     DWORD PTR [edx-0x64fc4702],ebx
  41174f:	daa    
  411750:	push   0xffffff95
  411752:	fimul  WORD PTR [eax+0x8d98174]
  411758:	fwait
  411759:	(bad)  
  41175a:	mov    cl,0x7e
  41175c:	ret    0x9b62
  41175f:	jo     0x411708
  411761:	xchg   ebx,eax
  411762:	push   ebp
  411763:	stc    
  411764:	js     0x411757
  411766:	mov    ch,0xc7
  411768:	clts   
  41176a:	in     al,dx
  41176b:	sbb    DWORD PTR [esi+0x42],ebp
  41176e:	push   ecx
  41176f:	adc    eax,0xf643ff74
  411774:	fst    st(3)
  411776:	lds    ebp,FWORD PTR [eax-0x55ea0e7c]
  41177c:	lock lock mov ch,0xfa
  411780:	sub    DWORD PTR [edx+esi*1-0x60ce1f17],esp
  411787:	xor    DWORD PTR ds:0xfde33fda,edx
  41178d:	pop    eax
  41178e:	out    dx,eax
  41178f:	sbb    eax,0x9574cba2
  411794:	pop    ebx
  411795:	mov    dh,0x9e
  411797:	fstp   DWORD PTR [ebp-0x6efd63b3]
  41179d:	test   al,0x11
  41179f:	mov    ds:0x7b57598e,eax
  4117a4:	rcr    esp,1
  4117a6:	jle    0x41178a
  4117a8:	push   ss
  4117a9:	xchg   ecx,eax
  4117aa:	jp     0x41179a
  4117ac:	or     BYTE PTR [edi],0x34
  4117af:	mov    ds:0x6e5b6d82,eax
  4117b4:	aam    0x37
  4117b6:	mov    ebx,0x2c3dfec
  4117bb:	sub    bl,bl
  4117bd:	cli    
  4117be:	fst    QWORD PTR [esi-0x56191578]
  4117c4:	adc    DWORD PTR [esi],edx
  4117c6:	jnp    0x4117e3
  4117c8:	int3   
  4117c9:	pop    eax
  4117ca:	scas   al,BYTE PTR es:[edi]
  4117cb:	cmp    eax,0x161c47f9
  4117d0:	arpl   WORD PTR [ecx+ecx*4+0x68],bp
  4117d4:	jbe    0x411774
  4117d6:	jecxz  0x41182d
  4117d8:	test   eax,0xb20f97d4
  4117dd:	(bad)  
  4117de:	pop    esi
  4117df:	jbe    0x411793
  4117e1:	mov    cl,0x17
  4117e3:	cli    
  4117e4:	push   ecx
  4117e5:	jne    0x4117cf
  4117e7:	(bad)  
  4117e8:	xchg   edi,eax
  4117e9:	jne    0x41185a
  4117eb:	call   0x9310dad5
  4117f0:	sub    dl,bh
  4117f2:	leave  
  4117f3:	cwde   
  4117f4:	fisubr DWORD PTR [edx+0x4e]
  4117f7:	jbe    0x41178d
  4117f9:	call   0x9a5886d3
  4117fe:	data16 sub al,0x88
  411801:	push   ecx
  411802:	xchg   edi,eax
  411803:	xchg   ebx,eax
  411804:	cs or  al,0xa1
  411807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411808:	push   cs
  411809:	sbb    DWORD PTR [ebx+0x6c9acefe],eax
  41180f:	jae    0x411839
  411811:	dec    edx
  411812:	pop    ebx
  411813:	jns    0x4117d2
  411815:	xor    BYTE PTR [eax],ah
  411817:	cli    
  411818:	aam    0x5f
  41181a:	test   eax,0xa80337b3
  41181f:	pop    ebp
  411820:	jo     0x4117da
  411822:	sub    DWORD PTR [edx],ebx
  411824:	ds sbb eax,0xe4804e0
  41182a:	mov    bl,0x30
  41182c:	rcl    BYTE PTR [esi+0x24],cl
  41182f:	sub    DWORD PTR [bx+di],0x7a18a718
  411836:	in     al,0x9c
  411838:	out    0x8c,al
  41183a:	cmc    
  41183b:	in     eax,dx
  41183c:	push   esi
  41183d:	hlt    
  41183e:	out    dx,al
  41183f:	xor    edx,ebp
  411841:	out    dx,al
  411842:	jle    0x4117d5
  411844:	adc    cl,BYTE PTR [ebp+0x3d]
  411847:	rcr    BYTE PTR [ebx],0x6a
  41184a:	mov    bl,BYTE PTR [esi]
  41184c:	ror    DWORD PTR ds:0x2d5d6e58,1
  411852:	leave  
  411853:	and    eax,0x1e11ba94
  411858:	cmp    eax,0x2daa8bf1
  41185d:	icebp  
  41185e:	jle    0x411896
  411860:	adc    BYTE PTR [ebx-0x52],al
  411863:	int    0x6e
  411865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411866:	pop    ebx
  411867:	pop    ss
  411868:	into   
  411869:	dec    edx
  41186a:	test   al,dl
  41186c:	test   BYTE PTR [edx+ebp*1-0x20],0xb3
  411871:	cwde   
  411872:	pop    eax
  411873:	jnp    0x4118ab
  411875:	xchg   esi,eax
  411876:	sbb    BYTE PTR [edx+0x31b1386a],0x74
  41187d:	dec    ebp
  41187e:	or     al,0xb0
  411880:	loopne 0x4118b7
  411882:	xchg   ebp,eax
  411883:	lods   al,BYTE PTR ds:[esi]
  411884:	fistp  QWORD PTR [ebp+0x53fd4c45]
  41188a:	and    BYTE PTR [ebx+eiz*1-0x3d],0xf
  41188f:	into   
  411890:	mov    DWORD PTR [ecx+0x15],0x689be8b1
  411897:	xor    eax,0xfa48f977
  41189c:	fstp   QWORD PTR [edx+0x905fd0e]
  4118a2:	jns    0x4118ce
  4118a4:	daa    
  4118a5:	jb     0x41183d
  4118a7:	fist   WORD PTR [edx-0x9185790]
  4118ad:	adc    ah,ah
  4118af:	xchg   edx,eax
  4118b0:	push   ecx
  4118b1:	mov    dh,0x1c
  4118b3:	pop    edx
  4118b4:	test   bh,bl
  4118b6:	cs push ebp
  4118b8:	mov    ch,0xb5
  4118ba:	out    0x25,eax
  4118bc:	pop    ds
  4118bd:	dec    esp
  4118be:	shl    BYTE PTR [edi+0x48cbacec],cl
  4118c4:	push   ebp
  4118c5:	ja     0x411930
  4118c7:	repnz cmp al,BYTE PTR [esi+0x6ec030f0]
  4118ce:	sti    
  4118cf:	retf   
  4118d0:	lock inc BYTE PTR [ebx-0x23]
  4118d4:	sbb    bh,BYTE PTR [ebp+0x39]
  4118d7:	and    eax,0x9f9fa127
  4118dc:	and    BYTE PTR [eax],bl
  4118de:	mul    ecx
  4118e0:	push   ebx
  4118e1:	jns    0x41192d
  4118e3:	inc    ebp
  4118e4:	jno    0x411905
  4118e6:	add    dh,cl
  4118e8:	add    al,0x61
  4118ea:	pop    edx
  4118eb:	in     al,0x78
  4118ed:	adc    edi,DWORD PTR [ebx-0xb16aa56]
  4118f3:	das    
  4118f4:	mov    ds:0x9a445b7,eax
  4118f9:	jp     0x41191a
  4118fb:	adc    BYTE PTR [ecx+0x6d],dl
  4118fe:	sbb    bl,BYTE PTR [eax-0x5b37b459]
  411904:	add    DWORD PTR [esi+0x68fa6a27],esp
  41190a:	mov    gs,WORD PTR [esi+eiz*1+0x7e]
  41190e:	sbb    al,0xf8
  411910:	push   edx
  411911:	shl    BYTE PTR [esi+0x76],0xc4
  411915:	cli    
  411916:	aas    
  411917:	loopne 0x4118ed
  411919:	ins    BYTE PTR es:[edi],dx
  41191a:	out    dx,eax
  41191b:	test   eax,0x3c517a0b
  411920:	lock add BYTE PTR [ebp+0x68],al
  411924:	sbb    ah,al
  411926:	mov    edi,DWORD PTR gs:[ebp-0x18]
  41192a:	repnz mov WORD PTR ds:0x7c995b4,ds
  411931:	cld    
  411932:	and    BYTE PTR [edi],al
  411934:	dec    ebx
  411935:	xchg   ecx,eax
  411936:	das    
  411937:	and    al,0x9a
  411939:	(bad)  
  41193a:	mov    eax,ds:0x16a12c8d
  41193f:	call   0x9c8d:0xfd87fa1
  411946:	mov    dh,0x75
  411948:	sub    dl,BYTE PTR [esi+0x6e267e0a]
  41194e:	sbb    bl,al
  411950:	js     0x41197f
  411952:	fisub  DWORD PTR [ebp-0x4ae15884]
  411958:	call   0x2c51:0xadd27e9c
  41195f:	xor    edi,ebx
  411961:	pop    es
  411962:	adc    eax,0x16380dd4
  411967:	cli    
  411968:	xchg   BYTE PTR [ebp+edx*8-0x29],dl
  41196c:	aam    0x6d
  41196e:	pop    ecx
  41196f:	jp     0x41192b
  411971:	mov    DWORD PTR [edx-0x6b013d43],ebx
  411977:	fwait
  411978:	daa    
  411979:	pushf  
  41197a:	js     0x411946
  41197c:	lea    ecx,[ecx-0x48496022]
  411982:	mov    bh,0x9c
  411984:	aad    0xc3
  411986:	out    dx,eax
  411987:	dec    edx
  411988:	(bad)  
  411989:	jo     0x411958
  41198b:	add    edi,DWORD PTR [edi+0x59]
  41198e:	or     dl,ah
  411990:	mov    esi,0x1ac44dd8
  411995:	cmc    
  411996:	cdq    
  411997:	enter  0xdac6,0x14
  41199b:	out    0x1,al
  41199d:	cwde   
  41199e:	sub    bh,BYTE PTR [ebx+0x63b74550]
  4119a4:	add    DWORD PTR [ebp+0xd6afdb],esp
  4119aa:	int    0x5b
  4119ac:	mov    eax,0x6ad2955b
  4119b1:	aas    
  4119b2:	pop    ebx
  4119b3:	cwde   
  4119b4:	adc    eax,DWORD PTR [esi+esi*4]
  4119b7:	mov    cl,0xf
  4119b9:	pop    ss
  4119ba:	je     0x4119cc
  4119bc:	aad    0x21
  4119be:	frstor [edi-0x7ce946b8]
  4119c4:	enter  0xa04a,0xa9
  4119c8:	js     0x411a24
  4119ca:	inc    edi
  4119cb:	mov    BYTE PTR [ecx+0x646a0e17],ch
  4119d1:	shr    esi,0x24
  4119d4:	and    ecx,DWORD PTR [eax+0x78b938ce]
  4119da:	(bad)  
  4119db:	jno    0x411a29
  4119dd:	pushf  
  4119de:	fnstcw WORD PTR [esi]
  4119e0:	imul   eax,ebp,0xffffffc2
  4119e3:	neg    BYTE PTR ds:0x9c400195
  4119e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ea:	iret   
  4119eb:	xchg   esi,eax
  4119ec:	jne    0x411a33
  4119ee:	mov    al,0xe9
  4119f0:	daa    
  4119f1:	or     ecx,DWORD PTR ds:[edi+0x14]
  4119f5:	adc    al,0x2a
  4119f7:	loop   0x411a0b
  4119f9:	adc    esi,DWORD PTR [edx]
  4119fb:	push   es
  4119fc:	dec    ecx
  4119fd:	loop   0x411a73
  4119ff:	sbb    BYTE PTR [ebp+0x5e32765f],0x9e
  411a06:	xchg   DWORD PTR [eax-0x5fcb65c7],ebx
  411a0c:	pop    edi
  411a0d:	pop    eax
  411a0e:	enter  0xfb06,0xea
  411a12:	adc    BYTE PTR [edx-0x1df34d29],dh
  411a18:	fisub  WORD PTR [ecx-0x4c2e949a]
  411a1e:	les    edx,FWORD PTR [esi+0xfb0d475]
  411a24:	xor    DWORD PTR [eax+0x7d486782],esi
  411a2a:	ja     0x411a95
  411a2c:	mov    ch,0x1e
  411a2e:	and    al,BYTE PTR [ebx+0x73]
  411a31:	mov    al,0xce
  411a33:	aas    
  411a34:	mov    esp,0x1e317442
  411a39:	xor    al,0x1
  411a3b:	dec    ebp
  411a3c:	jmp    0xa614:0xc300f621
  411a43:	pusha  
  411a44:	nop
  411a45:	sbb    DWORD PTR [esi],eax
  411a47:	and    eax,0xeb8b0bc6
  411a4c:	or     al,0x28
  411a4e:	cld    
  411a4f:	and    dh,cl
  411a51:	dec    ecx
  411a52:	or     eax,0xab865b0
  411a57:	xor    al,0xec
  411a59:	push   ebx
  411a5a:	push   esi
  411a5b:	and    eax,0x43d1ad42
  411a60:	inc    eax
  411a61:	cmp    al,0x87
  411a63:	test   al,0xcb
  411a65:	mov    ah,0xd7
  411a67:	mov    BYTE PTR [esi-0x2e],0xa6
  411a6b:	ins    DWORD PTR es:[edi],dx
  411a6c:	pop    edi
  411a6d:	fs aad 0x62
  411a70:	loope  0x411a41
  411a72:	ret    
  411a73:	push   ebp
  411a74:	ret    0x5e63
  411a77:	sbb    al,0xa0
  411a79:	fwait
  411a7a:	cld    
  411a7b:	jnp    0x411a05
  411a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a7e:	data16 hlt 
  411a80:	push   esi
  411a81:	out    0x82,eax
  411a83:	fwait
  411a84:	jnp    0x411a26
  411a86:	xchg   DWORD PTR [edi-0x23728936],eax
  411a8c:	mov    bl,0xc3
  411a8e:	push   ecx
  411a8f:	jmp    0xb590:0x73d21362
  411a96:	jno    0x411b0b
  411a98:	out    dx,eax
  411a99:	cmc    
  411a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a9b:	inc    edx
  411a9c:	popa   
  411a9d:	dec    esp
  411a9e:	inc    esp
  411a9f:	retf   0xa3de
  411aa2:	mov    bh,0xf4
  411aa4:	sbb    BYTE PTR [edi+0x69],dl
  411aa7:	jge    0x411ac2
  411aa9:	out    dx,eax
  411aaa:	push   0xfd3417ea
  411aaf:	push   esp
  411ab0:	xchg   edi,eax
  411ab1:	cmc    
  411ab2:	cmp    dh,BYTE PTR [eax+0x1446fa7]
  411ab8:	std    
  411ab9:	ret    0xdf6f
  411abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411abd:	pop    ds
  411abe:	das    
  411abf:	gs clc 
  411ac1:	(bad)  
  411ac2:	pop    edi
  411ac3:	mov    ah,0x36
  411ac5:	(bad)  
  411ac6:	jnp    0x411aef
  411ac8:	jecxz  0x411ae1
  411aca:	dec    esi
  411acb:	lahf   
  411acc:	add    BYTE PTR [esi+0x28],ch
  411acf:	mov    ds:0xb6cae81d,eax
  411ad4:	mov    dl,BYTE PTR [edi+0x6e5131bf]
  411ada:	fiadd  DWORD PTR [ecx]
  411adc:	into   
  411add:	adc    al,0xb2
  411adf:	inc    ebp
  411ae0:	fdivr  DWORD PTR gs:[edi+edx*2+0x5f5fdbdd]
  411ae8:	dec    ecx
  411ae9:	jecxz  0x411ab2
  411aeb:	jno    0x411b44
  411aed:	ins    BYTE PTR es:[edi],dx
  411aee:	fnstcw WORD PTR [esi+0x1c]
  411af1:	or     ah,BYTE PTR [esp+ebp*2+0x40]
  411af5:	mov    esp,0x8cce1425
  411afa:	(bad)  [ebx-0x64f50efc]
  411b00:	jae    0x411b0b
  411b02:	inc    esp
  411b03:	repz jo 0x411aa2
  411b06:	out    dx,eax
  411b07:	js     0x411adf
  411b09:	hlt    
  411b0a:	pop    es
  411b0b:	lds    esi,FWORD PTR [esi]
  411b0d:	mov    ah,ah
  411b0f:	add    ch,bl
  411b11:	adc    esi,DWORD PTR ds:0xbee74431
  411b17:	or     ebx,DWORD PTR [esi+edx*2+0x37]
  411b1b:	je     0x411aba
  411b1d:	(bad)  
  411b1e:	pop    ecx
  411b1f:	int    0x69
  411b21:	jns    0x411b0b
  411b23:	push   esi
  411b24:	jnp    0x411b3c
  411b26:	cmp    DWORD PTR [eax-0x6eb9d47e],0x33
  411b2d:	aas    
  411b2e:	daa    
  411b2f:	outs   dx,DWORD PTR ds:[esi]
  411b30:	and    cl,BYTE PTR [eax+0x34]
  411b33:	and    DWORD PTR [ebp+0x49],0x28
  411b37:	lds    ebp,FWORD PTR [eax]
  411b39:	mov    WORD PTR [ebp+0x77],?
  411b3c:	add    BYTE PTR [edi-0x280593f8],dh
  411b42:	bound  eax,QWORD PTR [eax]
  411b44:	jo     0x411b30
  411b46:	nop
  411b47:	(bad)  
  411b49:	cmc    
  411b4a:	pop    ss
  411b4b:	and    eax,0xc46571ea
  411b50:	dec    ebp
  411b51:	inc    edi
  411b52:	inc    edi
  411b53:	fisubr WORD PTR [edx-0x2b]
  411b56:	xchg   esp,eax
  411b57:	fs and al,0x45
  411b5a:	shl    BYTE PTR [edx+eax*8+0x75],0xdd
  411b5f:	ja     0x411bc4
  411b61:	jp     0x411b31
  411b63:	add    al,0x8d
  411b65:	mov    dh,0x20
  411b67:	mov    ds:0x7e605456,eax
  411b6c:	shl    bl,1
  411b6e:	mov    bl,0x4a
  411b70:	enter  0x57ee,0xf0
  411b74:	push   0x2df1ff60
  411b79:	jge    0x411b75
  411b7b:	jmp    0xa41:0xaaaffbe7
  411b82:	test   BYTE PTR [esi+edi*1+0x15a6e801],ah
  411b89:	shl    ah,1
  411b8b:	xchg   edx,eax
  411b8c:	test   eax,0x6977726b
  411b91:	fmul   QWORD PTR [edx-0xc]
  411b94:	loop   0x411b59
  411b96:	pop    ebp
  411b97:	sub    al,0xfc
  411b99:	(bad)  
  411b9a:	dec    esp
  411b9b:	hlt    
  411b9c:	adc    eax,0x37a4fedf
  411ba1:	repnz adc BYTE PTR ds:0x641a94fd,bl
  411ba8:	js     0x411c08
  411baa:	dec    ecx
  411bab:	addr16 call 0xc3ff:0xd6986e57
  411bb3:	ins    BYTE PTR es:[edi],dx
  411bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb5:	mov    bl,bl
  411bb7:	or     edi,DWORD PTR [eax]
  411bb9:	ficom  DWORD PTR [eax+0x1a]
  411bbc:	mov    edi,DWORD PTR [ebp+ebp*2-0x3c]
  411bc0:	push   cs
  411bc1:	jmp    0xc3fc:0xb860a6b5
  411bc8:	test   DWORD PTR [esi-0x64a7baf6],edx
  411bce:	out    0x9a,al
  411bd0:	xchg   ebp,eax
  411bd1:	je     0x411bfc
  411bd3:	sbb    eax,0x60dd17fb
  411bd8:	push   ebp
  411bd9:	adc    al,0x7f
  411bdb:	adc    dh,BYTE PTR ds:0x8d5d0e15
  411be1:	mov    ch,cl
  411be3:	and    BYTE PTR [eax],ah
  411be5:	mov    edx,0x5bcc4521
  411bea:	push   edx
  411beb:	in     al,dx
  411bec:	scas   eax,DWORD PTR es:[edi]
  411bed:	dec    esp
  411bee:	mov    ebx,0xd141f45e
  411bf3:	call   0x1a6aa82f
  411bf8:	test   eax,0xacd10155
  411bfd:	cmp    BYTE PTR [ebp+0x1032b05e],0xae
  411c04:	sub    cl,al
  411c06:	out    dx,al
  411c07:	stc    
  411c08:	dec    esi
  411c09:	sbb    eax,0xc9fdbb37
  411c0e:	jne    0x411bb3
  411c10:	fbstp  TBYTE PTR [bp-0x3243]
  411c15:	adc    cl,ah
  411c17:	in     al,dx
  411c18:	test   al,0xdd
  411c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c1b:	stos   BYTE PTR es:[edi],al
  411c1c:	cmp    BYTE PTR [esp+eax*2-0x4d0c847f],cl
  411c23:	call   0xc7d:0xa8e5da8d
  411c2a:	push   cs
  411c2b:	pop    eax
  411c2c:	or     dh,BYTE PTR [ebp+0x49953fd0]
  411c32:	iret   
  411c33:	xor    DWORD PTR [eax],ecx
  411c35:	outs   dx,BYTE PTR ds:[esi]
  411c36:	jl     0x411c0b
  411c38:	packuswb mm3,QWORD PTR [edi-0x79]
  411c3c:	xchg   ebp,eax
  411c3d:	sbb    dl,al
  411c3f:	or     edi,DWORD PTR [edx]
  411c41:	and    bh,BYTE PTR ds:0x4574570d
  411c47:	mov    ebp,0x34bbd307
  411c4c:	pop    ebx
  411c4d:	mov    edx,es
  411c4f:	xchg   ebx,eax
  411c50:	enter  0x5d62,0xa1
  411c54:	sub    DWORD PTR [esi+0x33],0xae10fd74
  411c5b:	adc    esp,esp
  411c5d:	mov    BYTE PTR [edi+edi*4],0x28
  411c61:	mov    dh,0x23
  411c63:	push   0x463baed5
  411c68:	inc    ecx
  411c69:	test   eax,0xaf876239
  411c6e:	jge    0x411cb5
  411c70:	test   eax,0x2415d964
  411c75:	neg    WORD PTR [eax+0x7c]
  411c79:	jmp    0x129a:0xc5669bd6
  411c80:	mov    eax,0xdad353a8
  411c85:	sub    esi,0xffffffbc
  411c88:	mov    esi,0x2af69dd2
  411c8d:	pop    ss
  411c8e:	push   edx
  411c8f:	sbb    eax,0x98e3c136
  411c94:	or     ah,BYTE PTR [eax+0x5a]
  411c97:	int3   
  411c98:	test   eax,0x5dacda6f
  411c9d:	sti    
  411c9e:	loop   0x411c4b
  411ca0:	je     0x411c9f
  411ca2:	imul   ebp,DWORD PTR [edi+0x20],0x956ec5dd
  411ca9:	mov    ebp,0xce2e4948
  411cae:	push   ss
  411caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb0:	xor    eax,0x117140be
  411cb5:	call   0xf60595bf
  411cba:	mov    ds:0x410d0b5e,eax
  411cbf:	or     ecx,DWORD PTR [esi-0x52c6aea]
  411cc5:	bound  ecx,QWORD PTR [ebx]
  411cc7:	pop    edx
  411cc8:	xlat   BYTE PTR ds:[ebx]
  411cc9:	or     al,0x4b
  411ccb:	jl     0x411c7b
  411ccd:	push   edx
  411cce:	repnz imul edx,DWORD PTR [ebx+eiz*1-0x61],0x5a276ce5
  411cd7:	out    dx,eax
  411cd8:	cmp    BYTE PTR [ebx+0x1b],dh
  411cdb:	outs   dx,BYTE PTR ds:[esi]
  411cdc:	jnp    0x411d52
  411cde:	rol    DWORD PTR [ecx+0x22],0x5b
  411ce2:	add    BYTE PTR [edx],dl
  411ce4:	and    DWORD PTR [esp+ebx*2+0x55],eax
  411ce8:	shl    DWORD PTR [ecx],1
  411cea:	add    DWORD PTR [esi-0x17550144],ebp
  411cf0:	sbb    edi,edx
  411cf2:	js     0x411c74
  411cf4:	mov    ah,0x7d
  411cf6:	jo     0x411d65
  411cf8:	clc    
  411cf9:	rol    dh,0x44
  411cfc:	inc    ebp
  411cfd:	adc    DWORD PTR [edi+0x70],eax
  411d00:	push   ss
  411d01:	jl     0x411d43
  411d03:	jae    0x411cb3
  411d05:	mov    ch,0x28
  411d07:	in     al,dx
  411d08:	mov    esi,0xc0219df5
  411d0d:	or     al,0x57
  411d0f:	sub    BYTE PTR [edi-0x32],cl
  411d12:	dec    esp
  411d13:	mov    DWORD PTR [esi],ecx
  411d15:	xchg   BYTE PTR [edi],ah
  411d17:	mov    al,ds:0xcc96d05b
  411d1c:	jae    0x411d3b
  411d1e:	(bad)  
  411d1f:	stc    
  411d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d21:	loop   0x411d09
  411d23:	pop    ds
  411d24:	ret    
  411d25:	push   cs
  411d26:	inc    edi
  411d27:	stc    
  411d28:	popa   
  411d29:	outs   dx,DWORD PTR ds:[esi]
  411d2a:	and    eax,0xa2365a60
  411d2f:	dec    ebx
  411d30:	fist   WORD PTR [edx+0x36e9ea4a]
  411d36:	test   BYTE PTR [edx],cl
  411d38:	sahf   
  411d39:	push   0xe74b6293
  411d3e:	enter  0x7adb,0x5b
  411d42:	rcr    BYTE PTR [ecx],cl
  411d44:	pop    DWORD PTR [ebx+0x260b1c8]
  411d4a:	and    ecx,DWORD PTR [ecx+0x3bba7442]
  411d50:	push   cs
  411d51:	ret    
  411d52:	pop    eax
  411d53:	sub    bl,BYTE PTR [edi]
  411d55:	lock mov esp,0xe25e61b9
  411d5b:	fmul   DWORD PTR [ebp-0x6814e294]
  411d61:	push   eax
  411d62:	popf   
  411d63:	std    
  411d64:	push   ds
  411d65:	xlat   BYTE PTR ds:[ebx]
  411d66:	jmp    0x2992:0x4bed5d7b
  411d6d:	test   eax,0xf3317f4a
  411d72:	(bad)  
  411d73:	and    eax,ebp
  411d75:	inc    edi
  411d76:	or     al,0xc3
  411d78:	jmp    0xc7de7102
  411d7d:	jge    0x411da2
  411d7f:	call   0xdfc1:0xc2b1eed0
  411d86:	adc    dh,BYTE PTR [esi+ebx*8-0x6a]
  411d8a:	xchg   ebp,eax
  411d8b:	out    dx,al
  411d8c:	aaa    
  411d8d:	xor    esp,ecx
  411d8f:	shl    DWORD PTR [ebx+0x1c],cl
  411d92:	ret    
  411d93:	cmp    eax,0xcb27bdad
  411d98:	sub    eax,0xe76dd49
  411d9d:	adc    al,0xda
  411d9f:	inc    ebp
  411da0:	sbb    al,BYTE PTR [eax+0x9]
  411da3:	cmp    eax,0x568688b3
  411da8:	stos   BYTE PTR es:[edi],al
  411da9:	adc    eax,0x7c8e9e0e
  411dae:	outs   dx,DWORD PTR ds:[esi]
  411daf:	xchg   esi,eax
  411db0:	imul   esi,DWORD PTR [ebp+0x481bb335],0x560aec77
  411dba:	xor    BYTE PTR [ebx+0x246a0517],al
  411dc0:	aaa    
  411dc1:	mov    dl,0x1
  411dc3:	aam    0x2a
  411dc5:	and    BYTE PTR [edx+0xf],0xf6
  411dc9:	lds    ecx,FWORD PTR [edi+0x6f]
  411dcc:	or     bl,BYTE PTR [ebx]
  411dce:	cli    
  411dcf:	mov    eax,cs:0x3bff0481
  411dd5:	fiadd  DWORD PTR [edx]
  411dd7:	xchg   DWORD PTR [edx],ecx
  411dd9:	es pop esi
  411ddb:	and    al,0x16
  411ddd:	adc    cl,BYTE PTR [ecx+0x738eda0f]
  411de3:	push   cs
  411de4:	int    0x9c
  411de6:	clc    
  411de7:	retf   
  411de8:	jg     0x411e29
  411dea:	sahf   
  411deb:	in     al,0x87
  411ded:	sbb    eax,edx
  411def:	and    eax,0x492dff43
  411df4:	inc    ebp
  411df5:	xor    al,al
  411df7:	xchg   edi,eax
  411df8:	outs   dx,DWORD PTR ds:[esi]
  411df9:	js     0x411da8
  411dfb:	mov    bl,0x1c
  411dfd:	xor    eax,DWORD PTR [ebx]
  411dff:	div    DWORD PTR [edx+eiz*1+0x64fcf7d5]
  411e06:	adc    DWORD PTR [esi+eax*4],0x67524337
  411e0d:	mov    ?,ebp
  411e0f:	xor    ebp,eax
  411e11:	mov    eax,0x15e4c0a3
  411e16:	cmp    dl,0xeb
  411e19:	pop    ss
  411e1a:	xor    BYTE PTR [eax+0x69de21d5],cl
  411e20:	fsub   st,st(5)
  411e22:	jae    0x411e80
  411e24:	and    al,0x8b
  411e26:	je     0x411dbd
  411e28:	jb     0x411e3c
  411e2a:	or     ah,dl
  411e2c:	icebp  
  411e2d:	sbb    dh,dh
  411e2f:	adc    eax,0xf46e9138
  411e34:	jnp    0xae00a069
  411e3a:	cld    
  411e3b:	mov    dh,0xcb
  411e3d:	add    dh,BYTE PTR [esi-0x41]
  411e40:	xor    ebp,edi
  411e42:	stc    
  411e43:	cdq    
  411e44:	sub    DWORD PTR [edx+0x17],edi
  411e47:	(bad)  
  411e48:	fdivr  DWORD PTR [ecx-0xf]
  411e4b:	and    al,0xa3
  411e4d:	xor    eax,0xf8eaad6f
  411e52:	sbb    dl,bl
  411e54:	aas    
  411e55:	adc    al,0x5
  411e57:	idiv   ah
  411e59:	xor    al,0x4
  411e5b:	sahf   
  411e5c:	popa   
  411e5d:	or     al,0xab
  411e5f:	loope  0x411e57
  411e61:	cmp    DWORD PTR [eax+edi*4+0x1a14bfb4],0xedd527d2
  411e6c:	and    al,BYTE PTR ds:0x40de387
  411e72:	xor    ebx,DWORD PTR ds:0x2213eb02
  411e78:	push   edi
  411e79:	xchg   edi,eax
  411e7a:	sub    BYTE PTR [edx-0x29227b93],ah
  411e80:	mov    eax,0xc03e73f
  411e85:	dec    eax
  411e86:	lock leave 
  411e88:	popf   
  411e89:	test   BYTE PTR [esi-0x5f2924f3],bl
  411e8f:	and    DWORD PTR [edx+0x2c8512d2],ecx
  411e95:	jnp    0x411efc
  411e97:	xor    BYTE PTR [eax],ch
  411e99:	repz cs jg 0x411e77
  411e9d:	adc    DWORD PTR [eax+0x68],ecx
  411ea0:	test   BYTE PTR [ebp-0x416c5370],bh
  411ea6:	add    eax,0x507ad7fe
  411eab:	sar    DWORD PTR [ebp-0x333deabe],cl
  411eb1:	mov    ecx,DWORD PTR [eax+0x1]
  411eb4:	cmp    al,0x15
  411eb6:	je     0x411edb
  411eb8:	add    DWORD PTR [esi-0x2e],esi
  411ebb:	and    DWORD PTR fs:[eax],ebp
  411ebe:	push   ebp
  411ebf:	and    eax,0xd881c514
  411ec4:	add    bl,BYTE PTR [edi+0x75]
  411ec7:	push   cs
  411ec8:	nop
  411ec9:	mov    bh,0x98
  411ecb:	inc    ecx
  411ecc:	sar    BYTE PTR [ebp-0x59c93370],cl
  411ed2:	jns    0x411e66
  411ed4:	ss pop ebx
  411ed6:	xchg   esi,edi
  411ed8:	adc    esp,DWORD PTR ds:0x741d6a01
  411ede:	push   ds
  411edf:	cmp    eax,0xa5bf7690
  411ee4:	cmp    al,dl
  411ee6:	inc    edx
  411ee7:	push   esp
  411ee8:	daa    
  411ee9:	aas    
  411eea:	mov    al,ds:0xbe4aad83
  411eef:	or     eax,0x9b67a6a4
  411ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ef5:	lods   eax,DWORD PTR ds:[esi]
  411ef6:	push   edi
  411ef7:	jno    0x411f27
  411ef9:	inc    ebp
  411efa:	pusha  
  411efb:	xor    esp,DWORD PTR [ecx+0x4136671a]
  411f01:	sub    al,0x51
  411f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f04:	and    BYTE PTR [di-0x3a],ah
  411f08:	pop    ebx
  411f09:	test   BYTE PTR [ecx],dl
  411f0b:	mov    bl,ah
  411f0d:	or     ebx,esp
  411f0f:	jecxz  0x411ee5
  411f11:	test   DWORD PTR [eax-0x74],esi
  411f14:	cmpps  xmm2,XMMWORD PTR [eax+0x5e],0x51
  411f19:	aam    0x1d
  411f1b:	jno    0x411f35
  411f1d:	int3   
  411f1e:	cmp    bh,BYTE PTR [edx]
  411f20:	mov    edx,0x33a7e691
  411f25:	cmc    
  411f26:	push   0xc56dcc31
  411f2b:	shr    bh,0x21
  411f2e:	ins    DWORD PTR es:[edi],dx
  411f2f:	or     edx,ecx
  411f31:	(bad)  
  411f32:	push   ebx
  411f33:	pop    esi
  411f34:	mov    edi,0x6135a04
  411f39:	sub    BYTE PTR [edx],al
  411f3b:	xchg   esp,eax
  411f3c:	adc    al,0xf6
  411f3e:	fidivr DWORD PTR [eax]
  411f40:	xchg   edi,eax
  411f41:	pop    edx
  411f42:	loopne 0x411f82
  411f44:	retf   
  411f45:	and    eax,0xad0ca20
  411f4a:	sar    BYTE PTR [edx],0xa4
  411f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f4e:	leave  
  411f4f:	cmp    ah,BYTE PTR [ebp+0x2b]
  411f52:	inc    esi
  411f53:	lahf   
  411f54:	sbb    esi,DWORD PTR [ebp+0x1e]
  411f57:	jne    0x411f95
  411f59:	mov    eax,ds:0xa0d95369
  411f5e:	jns    0x411f4e
  411f60:	push   eax
  411f61:	fld    QWORD PTR [ebx+0x1618ac38]
  411f67:	jge    0x411ef1
  411f69:	lahf   
  411f6a:	adc    edx,ebx
  411f6c:	cdq    
  411f6d:	ror    ebx,cl
  411f6f:	push   ss
  411f70:	push   es
  411f71:	jns    0x411f2a
  411f73:	sbb    edi,0xfffffff5
  411f76:	sub    esp,DWORD PTR [ebx+0x77af902b]
  411f7c:	mov    ecx,0xca5689f7
  411f81:	adc    al,0x47
  411f83:	repnz sahf 
  411f85:	push   ebp
  411f86:	pop    ebx
  411f87:	iret   
  411f88:	shl    dl,cl
  411f8a:	aas    
  411f8b:	mov    cl,0x90
  411f8d:	add    al,0x13
  411f8f:	jns    0x411f15
  411f91:	add    eax,0xa8e7188a
  411f96:	sub    ecx,esp
  411f98:	retf   
  411f99:	mov    ds:0x96780690,al
  411f9e:	or     BYTE PTR [eax+0x3d],dl
  411fa1:	cwde   
  411fa2:	push   edx
  411fa3:	add    al,0x34
  411fa5:	sub    ah,BYTE PTR [ecx+eiz*2+0x58cc5e77]
  411fac:	pushf  
  411fad:	shr    bh,cl
  411faf:	test   al,0x5
  411fb1:	ret    0x6a1
  411fb4:	add    DWORD PTR [edi-0x15b93c97],ecx
  411fba:	int    0xc5
  411fbc:	ds aaa 
  411fbe:	add    eax,0x56334d89
  411fc3:	inc    edx
  411fc4:	add    ecx,eax
  411fc6:	mov    eax,0xd76c8f63
  411fcb:	pushf  
  411fcc:	ret    
  411fcd:	clc    
  411fce:	je     0x411ff6
  411fd0:	push   eax
  411fd1:	mov    ah,0x77
  411fd3:	xchg   esp,eax
  411fd4:	ss sbb ch,bh
  411fd7:	mov    edx,ecx
  411fd9:	push   ecx
  411fda:	cmp    DWORD PTR [ecx-0x379b7ec7],esi
  411fe0:	(bad)  
  411fe1:	test   BYTE PTR [esp+0x1c82ddd0],0xfa
  411fe9:	mov    esp,0x13b8afc1
  411fee:	push   es
  411fef:	cwde   
  411ff0:	xchg   edx,eax
  411ff1:	(bad)  
  411ff3:	in     al,dx
  411ff4:	push   eax
  411ff5:	ja     0x411fbd
  411ff7:	or     BYTE PTR [edi+0x6d],cl
  411ffa:	mov    al,0x52
  411ffd:	mov    ecx,0x7be65c76
  412002:	pop    ebp
  412003:	push   ds
  412004:	loopne 0x411fd5
  412006:	jmp    0x8a474b9d
  41200b:	xor    BYTE PTR [edi],cl
  41200d:	adc    BYTE PTR ds:0x7ae789f3,cl
  412013:	imul   eax,DWORD PTR [ecx],0x43f89a3c
  412019:	lods   eax,DWORD PTR ds:[esi]
  41201a:	iret   
  41201b:	mov    ah,bl
  41201d:	rcr    ch,1
  41201f:	pop    es
  412020:	and    BYTE PTR [ebx],ch
  412022:	sub    al,0x11
  412024:	mov    eax,0x703c94ac
  412029:	les    ecx,FWORD PTR [ebp+0x321beaf6]
  41202f:	mov    ch,0x6e
  412031:	mov    al,0x1e
  412033:	or     DWORD PTR [esi+0x19575e03],esp
  412039:	cmc    
  41203a:	cmp    al,0xa
  41203c:	loopne 0x412013
  41203e:	xchg   ebp,eax
  41203f:	iret   
  412040:	lea    eax,[ecx-0x12]
  412043:	sbb    DWORD PTR [ebx],ebp
  412045:	add    ecx,esp
  412047:	pop    esi
  412048:	and    eax,0xffffff86
  41204b:	in     al,dx
  41204c:	adc    eax,0x7130cf8b
  412051:	jnp    0x411ff5
  412053:	(bad)  
  412054:	add    al,0x2d
  412056:	stos   BYTE PTR es:[edi],al
  412057:	xor    ebp,DWORD PTR [ebp+ecx*1+0x2b]
  41205b:	jmp    0x6cde61f0
  412060:	int3   
  412061:	xor    edx,edi
  412063:	lods   eax,DWORD PTR ds:[esi]
  412064:	addr16 ja 0x411ffb
  412067:	adc    edx,DWORD PTR [edi]
  412069:	aad    0x72
  41206b:	add    DWORD PTR [esi],eax
  41206d:	mov    ah,0xd
  41206f:	push   esi
  412070:	dec    ebp
  412071:	jns    0x412023
  412073:	or     eax,0x92da5c6e
  412078:	mov    cl,0x6
  41207a:	pop    esp
  41207b:	cmp    dl,BYTE PTR [ecx]
  41207d:	cmp    al,ah
  41207f:	lock hlt 
  412081:	cmp    ebp,edi
  412083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412084:	cld    
  412085:	adc    esp,DWORD PTR [ebp+0x930868a]
  41208b:	inc    edi
  41208c:	pop    ecx
  41208d:	sub    DWORD PTR [ecx-0x47057a87],ecx
  412093:	push   es
  412094:	call   0x2ceab1e0
  412099:	bound  eax,QWORD PTR [edi+esi*2-0x2b]
  41209d:	scas   al,BYTE PTR es:[edi]
  41209e:	addr16 out dx,eax
  4120a0:	add    BYTE PTR [ecx+0x6b7e91be],0x8a
  4120a7:	adc    cl,BYTE PTR [esi-0x28]
  4120aa:	mov    esp,0xd82de857
  4120af:	daa    
  4120b0:	adc    BYTE PTR ds:0x4eb5df53,ah
  4120b6:	dec    esi
  4120b7:	push   ss
  4120b8:	push   esi
  4120b9:	xchg   ebx,eax
  4120ba:	ds loopne 0x4120cf
  4120bd:	cmp    DWORD PTR [ebp+0x52],0xffffffe5
  4120c1:	rol    DWORD PTR [esi+0x6c],cl
  4120c4:	enter  0x80ea,0xb2
  4120c8:	repz idiv BYTE PTR [edi+0x2f5565e9]
  4120cf:	mov    al,BYTE PTR [eax-0x3d]
  4120d2:	sbb    BYTE PTR [eax],ch
  4120d4:	rcr    ch,1
  4120d6:	int    0xd2
  4120d8:	push   es
  4120d9:	push   ss
  4120da:	jg     0x412093
  4120dc:	out    0x79,eax
  4120de:	add    edi,0xa25b8344
  4120e4:	cmp    DWORD PTR [ecx+0x53],0xc0d3880c
  4120eb:	aad    0x14
  4120ed:	in     al,0x9f
  4120ef:	sar    BYTE PTR [esi+0x3c93172a],0x78
  4120f6:	(bad)  
  4120f7:	std    
  4120f8:	xor    eax,0xfeab25f1
  4120fd:	popa   
  4120fe:	jae    0x41215c
  412100:	outs   dx,DWORD PTR ds:[esi]
  412101:	stos   BYTE PTR es:[edi],al
  412102:	(bad)  
  412104:	add    al,0x3b
  412106:	cmp    BYTE PTR [ebx],ch
  412108:	out    dx,eax
  412109:	sub    DWORD PTR [eax],eax
  41210b:	sbb    bh,BYTE PTR [ebx]
  41210d:	add    al,0x5b
  41210f:	int    0x87
  412111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412112:	(bad)  
  412113:	ins    DWORD PTR es:[edi],dx
  412114:	mov    edi,0x3a4c8b2b
  412119:	add    cl,BYTE PTR [edi]
  41211b:	retf   0x29f7
  41211e:	jecxz  0x4120bc
  412120:	jle    0x41215a
  412122:	mov    ah,0xc9
  412124:	(bad)
  412127:	daa    
  412128:	xchg   edx,eax
  412129:	sbb    al,0x5
  41212b:	inc    ebx
  41212c:	pop    ds
  41212d:	push   ss
  41212e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412130:	ja     0x4120f4
  412132:	push   esp
  412133:	cmp    DWORD PTR [ebx-0x66],eax
  412136:	les    esp,FWORD PTR [ebp-0x3d]
  412139:	iret   
  41213a:	mov    dh,0xdf
  41213c:	xor    DWORD PTR [ebp+0x11],eax
  41213f:	adc    ch,BYTE PTR [ebx-0x7d273ac9]
  412145:	mov    DWORD PTR [ebp+0x7],edi
  412148:	into   
  412149:	addr16 cmp edx,ebx
  41214c:	repnz mov edx,0xc9697a7a
  412152:	or     eax,0xb74bf9ae
  412157:	jg     0x41215e
  412159:	xchg   ebx,eax
  41215a:	popa   
  41215b:	cmc    
  41215c:	out    dx,al
  41215d:	in     eax,0x9d
  41215f:	scas   al,BYTE PTR es:[edi]
  412160:	xchg   ecx,eax
  412161:	pop    esi
  412162:	fs add al,0x69
  412165:	jp     0x412181
  412167:	cld    
  412168:	pop    ds
  412169:	shr    BYTE PTR [edx+0x12ce762e],1
  41216f:	cwde   
  412170:	fdiv   QWORD PTR [ebp+0x2b53aa0b]
  412176:	dec    esp
  412177:	loope  0x41218c
  412179:	fisttp DWORD PTR [ebp-0x75]
  41217c:	pop    ebx
  41217d:	in     al,0x66
  41217f:	sub    dh,ah
  412181:	mov    eax,esp
  412183:	inc    esp
  412184:	push   edx
  412185:	mov    ds:0x55f784ae,al
  41218a:	mov    ch,0xa6
  41218c:	rcl    ch,1
  41218e:	fdivp  st(7),st
  412190:	add    eax,0xe6e0f57b
  412195:	push   ds
  412196:	js     0x4121aa
  412198:	jp     0x412170
  41219a:	lock jne 0x412129
  41219d:	imul   ebx,DWORD PTR [esi+0x6e840a74],0x7c
  4121a4:	mov    ebx,DWORD PTR [eax+ebx*2]
  4121a7:	(bad)  
  4121a8:	out    dx,al
  4121a9:	xor    esi,ebx
  4121ab:	outs   dx,DWORD PTR ds:[esi]
  4121ac:	sbb    DWORD PTR [ecx-0x6],esp
  4121af:	mov    ss,WORD PTR [edx-0x60]
  4121b2:	push   esi
  4121b3:	test   DWORD PTR [edx+0x2ac48a48],ebx
  4121b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121ba:	rcl    DWORD PTR [ebx*4-0x5079ff3a],cl
  4121c1:	int    0x9c
  4121c3:	outs   dx,BYTE PTR ds:[esi]
  4121c4:	mov    edx,DWORD PTR [edi+0x19d58d58]
  4121ca:	or     eax,0x9214ea46
  4121cf:	and    DWORD PTR [ebp+0x77],ecx
  4121d2:	pop    edi
  4121d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d4:	and    DWORD PTR [eax+eax*8-0xd],0x7
  4121d9:	loope  0x412217
  4121db:	outs   dx,BYTE PTR ds:[esi]
  4121dc:	arpl   sp,bx
  4121de:	jno    0x41216d
  4121e0:	mov    al,BYTE PTR [edx-0x1b65b5cf]
  4121e6:	jle    0x412267
  4121e8:	repnz into 
  4121ea:	push   0xffffffeb
  4121ec:	lock mov ecx,0xb42e57e2
  4121f2:	lods   al,BYTE PTR ds:[esi]
  4121f3:	hlt    
  4121f4:	iret   
  4121f5:	fstp   DWORD PTR [eax-0x52]
  4121f8:	sub    ch,BYTE PTR [edi]
  4121fa:	dec    esi
  4121fb:	or     eax,0x74682e0
  412200:	xchg   esp,eax
  412201:	cmp    eax,0x9db282e
  412206:	stos   DWORD PTR es:[edi],eax
  412207:	xor    BYTE PTR [edi+0x2a51279e],al
  41220d:	ret    0x7ea5
  412210:	mov    ah,0xb9
  412212:	mov    ch,0xf2
  412214:	cmp    al,0xf9
  412216:	mov    ds:0xda23a0,al
  41221b:	xchg   ebp,esi
  41221d:	(bad)  
  41221e:	ffree  st(0)
  412220:	sub    ebx,DWORD PTR [ecx+0x27525199]
  412226:	sub    bl,al
  412228:	test   eax,0xbb189da7
  41222d:	and    eax,0x153eeb52
  412232:	fdiv   st,st(5)
  412234:	nop
  412235:	leave  
  412236:	repnz lods eax,DWORD PTR ds:[esi]
  412238:	les    edx,FWORD PTR [ebx]
  41223a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41223b:	mov    dh,0x72
  41223d:	mov    ebp,0x22cff536
  412242:	push   ss
  412243:	and    ebx,edi
  412245:	dec    esi
  412246:	dec    ebx
  412247:	cmp    eax,0x6657e800
  41224c:	addr16 (bad) 
  41224e:	int    0x4d
  412250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412251:	retf   0xdf85
  412254:	sub    al,BYTE PTR [esi-0x25]
  412257:	and    BYTE PTR [esi],ch
  412259:	dec    ebp
  41225a:	iret   
  41225b:	inc    esp
  41225c:	mulps  xmm4,XMMWORD PTR [edx+0x42]
  412260:	hlt    
  412261:	mov    ecx,0xda574a04
  412266:	fstp   TBYTE PTR [eax+0x5325cd46]
  41226c:	pop    es
  41226d:	and    esi,DWORD PTR [ebp-0x3a]
  412270:	pop    ds
  412271:	push   ebx
  412272:	mov    es,WORD PTR [ebx]
  412274:	fs xchg ebx,eax
  412276:	add    ebx,DWORD PTR [ecx+0x678c9607]
  41227c:	call   0xad36:0xca39ee35
  412283:	jno    0x41227b
  412285:	jno    0x4122f4
  412287:	sub    DWORD PTR [edi],0x39
  41228a:	inc    ecx
  41228b:	out    0x1b,al
  41228d:	or     eax,0x542abada
  412292:	xchg   esi,eax
  412293:	jmp    0x520c:0x32d3c4a8
  41229a:	sahf   
  41229b:	call   0x48725304
  4122a0:	in     al,0x3d
  4122a2:	mov    dl,0x9d
  4122a4:	mov    ds:0xa1718e27,al
  4122a9:	cmp    al,0xfb
  4122ab:	mov    cl,0x5f
  4122ad:	sti    
  4122ae:	dec    esp
  4122af:	sar    DWORD PTR [eax-0x24],0xec
  4122b3:	mov    edx,0x691c4720
  4122b8:	cs ins BYTE PTR es:[edi],dx
  4122ba:	pop    ecx
  4122bb:	loop   0x41231f
  4122bd:	sub    al,0x44
  4122bf:	(bad)  
  4122c0:	mov    cs,WORD PTR [eax+0x19]
  4122c3:	mov    al,0xea
  4122c5:	jne    0x4122a2
  4122c7:	mov    ah,0xbf
  4122c9:	mov    ecx,0xd0b6b55d
  4122ce:	mov    edi,0xc35d4ccf
  4122d3:	cmc    
  4122d4:	loop   0x4122df
  4122d6:	lock push 0x6029f148
  4122dc:	bound  eax,QWORD PTR [esi+ecx*1]
  4122df:	cdq    
  4122e0:	xchg   esi,eax
  4122e1:	xchg   ecx,eax
  4122e2:	ds cwde 
  4122e4:	lods   eax,DWORD PTR ds:[esi]
  4122e5:	outs   dx,BYTE PTR ds:[esi]
  4122e6:	lea    esp,[edi+eiz*2-0x58]
  4122ea:	dec    esp
  4122eb:	pop    esp
  4122ec:	mov    ecx,0xfb1778bb
  4122f1:	xchg   BYTE PTR [ebp-0x48],dl
  4122f4:	jg     0x4122ba
  4122f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122f7:	sub    al,0xf3
  4122f9:	jo     0x412320
  4122fb:	enter  0x3c9c,0xde
  4122ff:	push   eax
  412300:	sub    esp,DWORD PTR [ecx-0x4b203261]
  412306:	push   ecx
  412307:	jb     0x41228e
  412309:	in     al,dx
  41230a:	(bad)  
  41230b:	cmp    eax,0xa5398036
  412310:	mov    ecx,0xe73c19d9
  412315:	in     al,0x68
  412317:	call   0xae02093b
  41231c:	das    
  41231d:	enter  0x8de1,0xaf
  412321:	out    0xee,eax
  412323:	rcl    BYTE PTR [ebp-0x73],cl
  412326:	lds    eax,FWORD PTR [edx+0x5582ad8c]
  41232c:	dec    ebx
  41232d:	cmp    dh,BYTE PTR [eax-0x1f1e78b1]
  412333:	scas   eax,DWORD PTR es:[edi]
  412334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412335:	sti    
  412336:	neg    BYTE PTR [edx+0x40f4d19f]
  41233c:	arpl   WORD PTR [eax+0x8b426ba],si
  412342:	xlat   BYTE PTR ds:[ebx]
  412343:	daa    
  412344:	fidivr WORD PTR [esp+ebp*8+0x57b47ca1]
  41234b:	pop    ebx
  41234c:	enter  0xaafb,0x2e
  412350:	mov    esi,0x3b645ad0
  412355:	push   cs
  412356:	outs   dx,BYTE PTR ds:[esi]
  412357:	sahf   
  412358:	jmp    0x5d58adf8
  41235d:	popf   
  41235e:	mov    dh,0x9b
  412360:	mov    ebp,0x495f632e
  412365:	pop    edx
  412366:	es mov al,es:0x5650dbdc
  41236d:	fst    DWORD PTR [ebx+0x1889995c]
  412373:	cs or  edx,ecx
  412376:	stos   BYTE PTR es:[edi],al
  412377:	sub    dh,0x13
  41237a:	mov    edx,ebp
  41237c:	jno    0x4123a6
  41237e:	mov    eax,ds:0x47e33dc3
  412383:	ss push 0x7d9ef97b
  412389:	fld    st(3)
  41238b:	pop    es
  41238c:	sub    cl,0x48
  41238f:	in     eax,dx
  412390:	jne    0x412378
  412392:	push   ecx
  412393:	mov    ecx,0x2c2f78dd
  412398:	aam    0xdc
  41239a:	call   0x7dfe:0xd580632c
  4123a1:	clc    
  4123a2:	push   0x1117446f
  4123a7:	or     DWORD PTR [esi-0x63af9cd4],edi
  4123ad:	add    edx,DWORD PTR [edi+esi*4-0x5d]
  4123b1:	fs dec ebx
  4123b3:	inc    ebp
  4123b4:	pop    ds
  4123b5:	mov    ebx,0xcb8d766e
  4123ba:	inc    edx
  4123bb:	ror    DWORD PTR [ecx+0x242435b2],0xcf
  4123c2:	push   edx
  4123c3:	or     cl,cl
  4123c5:	mov    ch,0x1
  4123c7:	xor    eax,0xc3e6d5f1
  4123cc:	xor    DWORD PTR [eax],eax
  4123ce:	(bad)  
  4123cf:	outs   dx,BYTE PTR ds:[esi]
  4123d0:	(bad)  
  4123d1:	dec    esi
  4123d2:	pop    esp
  4123d3:	ins    DWORD PTR es:[edi],dx
  4123d4:	cwde   
  4123d5:	mov    edi,0xba909b07
  4123da:	add    bh,al
  4123dc:	mov    edx,0xea73f747
  4123e1:	push   es
  4123e2:	xchg   BYTE PTR [si],bl
  4123e5:	sbb    ebx,0x5a34e076
  4123eb:	clc    
  4123ec:	lock jp 0x4123d9
  4123ef:	icebp  
  4123f0:	loopne 0x41242d
  4123f2:	mov    fs,WORD PTR [edi-0x2]
  4123f5:	cmp    BYTE PTR [esi],0xa9
  4123f8:	add    ecx,DWORD PTR [eax]
  4123fa:	cmp    ecx,ebp
  4123fc:	mov    dh,bl
  4123fe:	stos   DWORD PTR es:[edi],eax
  4123ff:	sbb    eax,0x61a1f4ef
  412404:	inc    ebx
  412405:	or     al,al
  412407:	ins    DWORD PTR es:[edi],dx
  412408:	adc    esi,DWORD PTR [ecx+0x27]
  41240b:	sar    al,1
  41240d:	(bad)  [edi-0x379a176d]
  412413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412414:	mov    WORD PTR [ebx+eiz*2],gs
  412417:	cs dec ebx
  412419:	arpl   WORD PTR [ebx],cx
  41241b:	cs jno 0x41246c
  41241e:	inc    edi
  41241f:	ins    BYTE PTR es:[edi],dx
  412420:	test   ah,dl
  412422:	jmp    0xaff2:0x2ca3c2ee
  412429:	stc    
  41242a:	imul   edx,edx,0x55
  41242d:	mov    esp,0x4757b74f
  412432:	loope  0x41247c
  412434:	cmp    bl,bh
  412436:	xor    eax,0x828f0f7f
  41243b:	mov    bh,0xd6
  41243d:	xor    esp,DWORD PTR [ecx+edi*2-0x496dd91b]
  412444:	popf   
  412445:	lods   al,BYTE PTR ds:[esi]
  412446:	dec    edx
  412447:	or     bh,0x4b
  41244a:	jecxz  0x412452
  41244c:	scas   al,BYTE PTR es:[edi]
  41244d:	inc    esi
  41244e:	gs (bad) 
  412450:	push   esi
  412451:	mov    eax,ds:0x4adb138c
  412456:	aas    
  412457:	jo     0x4123fb
  412459:	mov    edx,0xf66aa378
  41245e:	ret    
  41245f:	jno    0x4124d1
  412461:	aaa    
  412462:	or     edi,edi
  412464:	or     al,0x4b
  412466:	add    BYTE PTR cs:[eax],al
  412469:	xchg   esi,eax
  41246a:	js     0x4124c7
  41246c:	jge    0x4124b8
  41246e:	out    0xe6,eax
  412470:	mov    ds:0xc11500cd,al
  412475:	mov    dh,0x70
  412477:	pop    ebp
  412478:	idiv   DWORD PTR [ebx+0x28d2418d]
  41247e:	call   0xb213:0x1c20d909
  412485:	sub    edi,DWORD PTR [edx-0x7178d3fe]
  41248b:	dec    esp
  41248c:	fist   DWORD PTR [eax-0x50]
  41248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412490:	xchg   esp,eax
  412491:	push   ebx
  412492:	fcom   QWORD PTR ds:0x26bcb18a
  412498:	mov    bl,BYTE PTR [esi-0xe622eec]
  41249e:	enter  0x2b76,0xf1
  4124a2:	pop    esp
  4124a3:	enter  0xa597,0x40
  4124a7:	mov    WORD PTR [edx],fs
  4124a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124aa:	mov    BYTE PTR [ecx-0x70ad14d0],dl
  4124b0:	and    BYTE PTR [eax+0x55891390],ah
  4124b6:	or     BYTE PTR [ebx+0x5d8b0855],cl
  4124bc:	test   al,0x81
  4124be:	ret    0x8fa
  4124c1:	push   edi
  4124c2:	add    BYTE PTR [edi],cl
  4124c4:	scas   eax,DWORD PTR es:[edi]
  4124c5:	ror    DWORD PTR [ecx+0x558ba855],cl
  4124cb:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4124d1:	pushf  
  4124d2:	clc    
  4124d3:	add    BYTE PTR fs:[ebx],cl
  4124d6:	ror    DWORD PTR [ecx+0x558bac55],cl
  4124dc:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  4124e2:	xor    edx,ebx
  4124e4:	mov    DWORD PTR [ebp-0x50],edx
  4124e7:	mov    edx,DWORD PTR [ebp+0x8]
  4124ea:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124ed:	add    edx,edi
  4124ef:	and    edx,ebx
  4124f1:	mov    DWORD PTR [ebp-0x4c],edx
  4124f4:	mov    edx,DWORD PTR [ebp+0x8]
  4124f7:	mov    ebx,DWORD PTR [ebp-0x48]
  4124fa:	lea    edx,[ebx+edx*1+0x241fcdf]
  412501:	mov    DWORD PTR [ebp-0x48],edx
  412504:	mov    edx,DWORD PTR [ebp+0x8]
  412507:	mov    ebx,0xfa5e1530
  41250c:	sub    ebx,edx
  41250e:	add    ebx,DWORD PTR [ebp-0x44]
  412511:	mov    DWORD PTR [ebp-0x44],ebx
  412514:	mov    edx,DWORD PTR [ebp+0x8]
  412517:	xor    edx,eax
  412519:	add    edx,esi
  41251b:	jne    0x41002c
  412521:	mov    edx,DWORD PTR [ebp-0xc]
  412524:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41252b:	mov    bl,BYTE PTR [ebp-0x1]
  41252e:	cmp    dl,bl
  412530:	je     0x41909d
  412536:	mov    ecx,DWORD PTR [ebp-0x5c]
  412539:	mov    edx,DWORD PTR [ebp-0xc]
  41253c:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412543:	mov    ebx,DWORD PTR [ebp+0xc]
  412546:	xor    ecx,eax
  412548:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ef]
  41254f:	jne    0x41b556
  412555:	mov    ecx,DWORD PTR [ebp-0x5c]
  412558:	mov    edx,DWORD PTR [ebp+0xc]
  41255b:	xor    ecx,eax
  41255d:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ef]
  412565:	mov    edx,DWORD PTR [ebp-0x18]
  412568:	xor    edx,eax
  41256a:	add    edx,esi
  41256c:	cmp    ecx,edx
  41256e:	mov    ecx,DWORD PTR [ebp-0x14]
  412571:	mov    DWORD PTR [ebp+0x8],ecx
  412574:	mov    ecx,DWORD PTR [ebp+0x8]
  412577:	je     0x41d9e3
  41257d:	jmp    0x414902
  412582:	lods   eax,DWORD PTR ds:[esi]
  412583:	xor    edi,DWORD PTR [ecx-0x65]
  412586:	out    dx,eax
  412587:	fwait
  412588:	fwait
  412589:	sub    edi,DWORD PTR [esi+0x14f535c0]
  41258f:	(bad)  
  412590:	fxch   st(1)
  412592:	inc    BYTE PTR [ebx+0x5f127a7a]
  412598:	jp     0x412614
  41259a:	xchg   edx,eax
  41259b:	bnd jmp 0x412563
  41259e:	retf   0xf4e4
  4125a1:	or     eax,0x60d2d5a9
  4125a6:	cli    
  4125a7:	out    0x69,al
  4125a9:	jnp    0x4125af
  4125ab:	ins    DWORD PTR es:[edi],dx
  4125ac:	or     eax,0xab4aafdf
  4125b1:	pop    ebp
  4125b2:	xlat   BYTE PTR ds:[ebx]
  4125b3:	loop   0x41260a
  4125b5:	pop    ebp
  4125b6:	lods   eax,DWORD PTR ds:[esi]
  4125b7:	(bad)  
  4125b8:	int    0x31
  4125ba:	fst    DWORD PTR [ebp-0x26]
  4125bd:	into   
  4125be:	push   edi
  4125bf:	iret   
  4125c0:	in     al,dx
  4125c1:	mov    esi,0x5c98bf3b
  4125c6:	or     eax,0x778f1d0
  4125cb:	push   esp
  4125cc:	jmp    0x8dac:0xd4863d7c
  4125d3:	cld    
  4125d4:	mov    eax,0x9b0571c8
  4125d9:	or     al,0x86
  4125db:	and    ch,dl
  4125dd:	ss jo  0x41260d
  4125e0:	pop    ss
  4125e1:	xchg   ebp,eax
  4125e2:	mov    esp,0x200bddba
  4125e7:	mov    eax,ds:0xaf449074
  4125ec:	jp     0x4125fb
  4125ee:	imul   ecx,DWORD PTR [esi+0x3c],0x8d10f496
  4125f5:	xchg   ecx,eax
  4125f6:	xchg   ecx,eax
  4125f7:	or     al,0x83
  4125f9:	gs pusha 
  4125fb:	xor    esi,DWORD PTR [ebp-0x65ccb0db]
  412601:	loopne 0x4125d7
  412603:	frstor [edi-0xd6d0fcc]
  412609:	fimul  WORD PTR [esi]
  41260b:	mov    esp,0xc47ab01
  412610:	test   esi,eax
  412612:	pop    ebp
  412613:	push   ecx
  412614:	das    
  412615:	fcom   DWORD PTR [ecx+0x32]
  412618:	push   ss
  412619:	jmp    0x412672
  41261b:	sti    
  41261c:	(bad)  
  41261d:	jp     0x41260c
  41261f:	nop    DWORD PTR [ecx+0x34]
  412623:	cdq    
  412624:	and    DWORD PTR [ebx],0xa6f4d222
  41262a:	js     0x41266a
  41262c:	sbb    eax,DWORD PTR [ebp+0x7f]
  41262f:	xor    dl,BYTE PTR ds:0xc53acc32
  412635:	cmp    DWORD PTR [ecx],0xffffff8f
  412638:	cld    
  412639:	std    
  41263a:	sti    
  41263b:	mov    DWORD PTR [eax+0x2ff58967],eax
  412641:	loope  0x4125e1
  412643:	outs   dx,BYTE PTR ds:[esi]
  412644:	pop    ds
  412645:	hlt    
  412646:	lock jmp 0x41268d
  412649:	push   eax
  41264a:	jp     0x4126b6
  41264c:	sub    BYTE PTR [ebx+0x20],cl
  41264f:	cmp    dl,BYTE PTR [eax+0x12b69f25]
  412655:	stos   DWORD PTR es:[edi],eax
  412656:	mov    ebx,0x444593e
  41265b:	addr16 enter 0xf9ba,0x63
  412660:	and    esp,DWORD PTR [esi]
  412662:	jge    0x412695
  412664:	sub    BYTE PTR [eax-0x15c03669],dl
  41266a:	sbb    eax,0xc55d2d88
  41266f:	fist   DWORD PTR [esi+0x55]
  412672:	cdq    
  412673:	call   0xa2033834
  412678:	pop    esp
  412679:	or     al,0xf5
  41267b:	push   cs
  41267c:	lods   eax,DWORD PTR ds:[esi]
  41267d:	call   0xa63a:0x900dcda0
  412684:	rcr    DWORD PTR [eax-0x432c4dda],cl
  41268a:	repnz xlat BYTE PTR ds:[bx]
  41268d:	or     bh,BYTE PTR [eax+0x2e1ce8ed]
  412693:	fwait
  412694:	cdq    
  412695:	jp     0x41261c
  412697:	and    al,BYTE PTR [ebx-0x3f11bae6]
  41269d:	fistp  QWORD PTR fs:[edx]
  4126a0:	jmp    DWORD PTR [ebp+0x14]
  4126a3:	loopne 0x412694
  4126a5:	push   0xfffffff4
  4126a7:	mov    cs,WORD PTR [esi-0x66]
  4126aa:	jns    0x412692
  4126ac:	popf   
  4126ad:	xchg   DWORD PTR [ecx],esi
  4126af:	jns    0x412631
  4126b1:	sti    
  4126b2:	and    eax,0xb4bd653f
  4126b7:	xor    BYTE PTR [edx],ah
  4126b9:	ror    BYTE PTR [ebx-0x1],cl
  4126bc:	mov    al,0xcb
  4126be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126bf:	add    eax,0xf7c3f24f
  4126c4:	sbb    DWORD PTR [edi-0x6fb3e875],edi
  4126ca:	in     eax,dx
  4126cb:	push   bx
  4126cd:	cs into 
  4126cf:	data16 fstp DWORD PTR [ecx-0x39829072]
  4126d6:	(bad)  
  4126d7:	nop
  4126d8:	jbe    0x4126c7
  4126da:	call   0xa2c00d07
  4126df:	popfw  
  4126e1:	aas    
  4126e2:	mov    ds:0x656a03d9,eax
  4126e7:	js     0x412741
  4126e9:	sbb    al,0x18
  4126eb:	mov    ecx,0x662ca4a
  4126f0:	loop   0x4126db
  4126f2:	or     eax,0x58158efb
  4126f7:	mov    ds:0x6cbf318,al
  4126fc:	loope  0x412765
  4126fe:	or     DWORD PTR [ebx+ebp*8-0x62c559cc],ecx
  412705:	retf   0x6522
  412708:	lock mov al,ds:0x53c5c53f
  41270e:	pop    edi
  41270f:	inc    esp
  412710:	adc    eax,0x14d26984
  412715:	sub    BYTE PTR [edi+0x51e59883],dl
  41271b:	out    0xa6,al
  41271d:	mov    ds:0x3b5e1d34,eax
  412722:	int3   
  412723:	imul   ebp,DWORD PTR [edi+0x48],0xffffff94
  412727:	sbb    eax,ebx
  412729:	cmp    BYTE PTR [ebp+0x34],0x55
  41272d:	arpl   WORD PTR [ebx+0xca5d3c9],bp
  412733:	es pop ebp
  412735:	xchg   esp,eax
  412736:	outs   dx,BYTE PTR ds:[esi]
  412737:	fs xchg ecx,eax
  412739:	dec    edx
  41273a:	jge    0x412773
  41273c:	repnz shl DWORD PTR [ebx],1
  41273f:	repz pop ss
  412741:	aam    0x59
  412743:	mov    bh,0xd7
  412745:	dec    edx
  412746:	dec    esi
  412747:	or     al,al
  412749:	imul   ecx,edx,0x126d5686
  41274f:	das    
  412750:	scas   al,BYTE PTR es:[edi]
  412751:	fnstcw WORD PTR [ebx-0x2b]
  412754:	loopne 0x4126ea
  412756:	stc    
  412757:	mov    ds:0x13c88835,eax
  41275c:	xchg   esi,eax
  41275d:	ret    0x924b
  412760:	inc    eax
  412761:	mov    esp,0x5fef1ff5
  412766:	not    dh
  412768:	jbe    0x412776
  41276a:	push   cs
  41276b:	dec    edi
  41276c:	inc    ecx
  41276d:	out    0xb9,eax
  41276f:	dec    ecx
  412770:	sub    BYTE PTR [ebp+0x2ad6eede],0xf5
  412777:	cmp    al,0x50
  412779:	inc    ebp
  41277a:	out    0xb6,eax
  41277c:	mov    WORD PTR [edi+eax*1-0x9e73c9c],?
  412783:	cmp    al,0x31
  412785:	scas   eax,DWORD PTR es:[edi]
  412786:	es inc ebx
  412788:	loop   0x412713
  41278a:	mov    es,WORD PTR [ecx+0x3c]
  41278d:	(bad)  
  41278e:	loope  0x412781
  412790:	fisubr WORD PTR [edi]
  412792:	ret    
  412793:	sbb    eax,0x184c6498
  412798:	inc    esp
  412799:	test   DWORD PTR [ebx+ebx*2-0x3b],0xe7324040
  4127a1:	jbe    0x412781
  4127a3:	jne    0xa6f11ba8
  4127a9:	add    al,0xd2
  4127ab:	lods   al,BYTE PTR ds:[esi]
  4127ac:	mov    WORD PTR [ecx-0x72d3368a],es
  4127b2:	xor    DWORD PTR [ecx+esi*8],eax
  4127b5:	push   es
  4127b6:	(bad)  
  4127b7:	mov    WORD PTR [eax+0x63],fs
  4127ba:	pop    eax
  4127bb:	xor    BYTE PTR [ebp+0x4a9ecb0e],ch
  4127c1:	push   es
  4127c2:	inc    edx
  4127c3:	pop    ebx
  4127c4:	xor    BYTE PTR [ebx-0x27],bl
  4127c7:	retf   0x20ec
  4127ca:	int3   
  4127cb:	dec    ebx
  4127cc:	sub    DWORD PTR [edx+0x30046021],0xfd663d0b
  4127d6:	imul   esp,esp,0xffffffbf
  4127d9:	jg     0x412765
  4127db:	test   DWORD PTR [edx],esp
  4127dd:	ret    0x7948
  4127e0:	pushf  
  4127e1:	test   eax,0x49fea0da
  4127e6:	loop   0x412792
  4127e8:	lock adc ah,ah
  4127eb:	int3   
  4127ec:	sar    esp,cl
  4127ee:	adc    eax,0x6778e58f
  4127f3:	or     BYTE PTR [ebx-0x19],dh
  4127f6:	ja     0x4127b9
  4127f8:	sar    BYTE PTR [eax+eax*1-0x67],1
  4127fc:	xchg   cl,ch
  4127fe:	mov    ecx,es
  412800:	lds    esi,FWORD PTR [esi+0x30]
  412803:	div    BYTE PTR [edx]
  412805:	aaa    
  412806:	mov    ds:0x3621b0a7,eax
  41280b:	test   al,0x51
  41280d:	push   esp
  41280e:	cmp    BYTE PTR [eax-0x4b],ch
  412811:	pop    edi
  412812:	int    0x4
  412814:	jmp    0x37943aa6
  412819:	mov    eax,gs
  41281b:	sub    eax,DWORD PTR ss:[edi]
  41281e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41281f:	push   cs
  412820:	push   ebp
  412821:	imul   ebp,DWORD PTR [esi-0x1e90418d],0xffffffbb
  412828:	jns    0x41287c
  41282a:	sbb    eax,0x3efbf790
  41282f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412830:	push   ss
  412831:	punpckhwd mm2,mm2
  412834:	stc    
  412835:	jl     0x412814
  412837:	cmp    bl,bl
  412839:	imul   edx,DWORD PTR [edx-0x2130f6eb],0x90533536
  412843:	or     ebx,ecx
  412845:	add    al,0x5f
  412847:	pop    edx
  412848:	mov    ds:0x4b9db70c,al
  41284d:	sbb    ecx,edx
  41284f:	pop    esi
  412850:	call   0x5d93:0x3356d980
  412857:	stc    
  412858:	ss rol ecx,0xc5
  41285c:	and    dl,BYTE PTR [ecx-0x67]
  41285f:	gs in  eax,dx
  412861:	push   ds
  412862:	jbe    0x412822
  412864:	jo     0x4128ad
  412866:	lods   eax,DWORD PTR ds:[esi]
  412867:	iret   
  412868:	rep stos BYTE PTR es:[edi],al
  41286a:	sub    DWORD PTR [eax+0x3c7a4113],0xffffffc0
  412871:	adc    BYTE PTR [ecx+ebx*4+0x25],bh
  412875:	inc    esi
  412876:	popf   
  412877:	call   0x8dd99d1a
  41287c:	enter  0xd215,0x7d
  412880:	inc    ecx
  412881:	sbb    BYTE PTR [esi-0x4db04cf6],dh
  412887:	push   edi
  412888:	int    0x89
  41288a:	jmp    0x2365d0c8
  41288f:	mov    dl,0x13
  412891:	aam    0x38
  412893:	xor    al,0x5b
  412895:	pop    esi
  412896:	mov    ss,edi
  412898:	adc    ecx,DWORD PTR [ecx-0x6a]
  41289b:	dec    esp
  41289c:	into   
  41289d:	jbe    0x4128ca
  41289f:	outs   dx,BYTE PTR ds:[esi]
  4128a0:	xchg   edi,eax
  4128a1:	jecxz  0x412914
  4128a3:	pop    ebp
  4128a4:	jge    0x412857
  4128a6:	push   ecx
  4128a7:	inc    ecx
  4128a8:	imul   esi,DWORD PTR [ebx+0x3ed2f061],0x4d
  4128af:	hlt    
  4128b0:	aas    
  4128b1:	and    ebp,DWORD PTR [edx+0x3e]
  4128b4:	lods   eax,DWORD PTR ds:[esi]
  4128b5:	mov    esi,0x6d1f28da
  4128ba:	repz adc bl,BYTE PTR [bx+di-0x1d49]
  4128c0:	xchg   ebx,eax
  4128c1:	sub    ecx,DWORD PTR es:[esi+0x2faf9059]
  4128c8:	lods   eax,DWORD PTR ds:[esi]
  4128c9:	fdiv   st(4),st
  4128cb:	es ja  0x4128a7
  4128ce:	les    eax,FWORD PTR [esi+esi*1-0x6f]
  4128d2:	or     dl,dh
  4128d4:	add    eax,0x7fb2a32f
  4128d9:	cs inc esi
  4128db:	ror    DWORD PTR [ebx],1
  4128dd:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4128df:	addr16 jge 0x4128cc
  4128e2:	pop    ecx
  4128e3:	mov    WORD PTR [esi-0x2b3fbff6],?
  4128e9:	or     al,0xf5
  4128eb:	(bad)  
  4128ec:	push   0xe86dd9ba
  4128f1:	add    esp,edi
  4128f3:	(bad)  
  4128f4:	xchg   esp,eax
  4128f5:	rcr    BYTE PTR [ecx+0x72],cl
  4128f8:	aam    0x43
  4128fa:	leave  
  4128fb:	mov    al,0xb9
  4128fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128fe:	and    eax,0x6048d954
  412903:	hlt    
  412904:	fwait
  412905:	add    al,0x36
  412907:	rcr    DWORD PTR [ecx+0x7175fcd2],cl
  41290d:	jmp    0x1dc6dbee
  412912:	dec    esp
  412913:	dec    ebx
  412914:	popf   
  412915:	aaa    
  412916:	scas   eax,DWORD PTR es:[edi]
  412917:	sbb    eax,0xd8e786f8
  41291c:	or     eax,0xb6bb3711
  412921:	fild   WORD PTR [edx+0x70]
  412924:	push   0x7ce90a1c
  412929:	inc    eax
  41292a:	repnz scas eax,DWORD PTR es:[edi]
  41292c:	jp     0x4128f1
  41292e:	mov    DWORD PTR [edi],ecx
  412930:	call   0x6c989c06
  412935:	lds    esp,FWORD PTR [ebp-0x41]
  412938:	rcl    BYTE PTR [edx-0x3c88119b],cl
  41293e:	mov    ch,al
  412940:	adc    eax,0xe1d5df08
  412945:	sub    eax,0xc98d58e
  41294a:	xchg   ebp,eax
  41294b:	das    
  41294c:	invlpg BYTE PTR [ebx+0x4bc4eb3a]
  412953:	sbb    cx,bx
  412956:	sub    al,0xa9
  412958:	xchg   ecx,eax
  412959:	stos   BYTE PTR es:[edi],al
  41295a:	es xchg esp,eax
  41295c:	push   ebx
  41295d:	dec    edi
  41295e:	mov    BYTE PTR [eax+0x288dc293],0x71
  412965:	xor    eax,0xb9894be7
  41296a:	sti    
  41296b:	mov    ah,0x4e
  41296d:	or     DWORD PTR [edx+0x63],edi
  412970:	sar    DWORD PTR [edi-0x4e],0xe4
  412974:	xchg   esi,eax
  412975:	xor    BYTE PTR [esi+edx*8],bh
  412978:	xchg   edi,eax
  412979:	or     ah,dh
  41297b:	lea    ecx,[edx-0x17]
  41297e:	hlt    
  41297f:	fbld   TBYTE PTR [esi-0x7e2eaa84]
  412985:	fld    TBYTE PTR [ebx-0x79]
  412988:	bound  ebp,QWORD PTR [edx]
  41298a:	fwait
  41298b:	lds    ecx,FWORD PTR [ebx+0x1]
  41298e:	cld    
  41298f:	push   edx
  412990:	mov    ds:0x63566df6,eax
  412995:	xor    dh,al
  412997:	pushf  
  412998:	xor    al,0xea
  41299a:	cdq    
  41299b:	mov    edi,0xf6d97dd8
  4129a0:	push   esi
  4129a1:	mov    esp,0x2c0beefc
  4129a6:	jns    0x41292a
  4129a8:	hlt    
  4129a9:	fistp  QWORD PTR [ebx]
  4129ab:	gs cs pusha 
  4129ae:	cdq    
  4129af:	hlt    
  4129b0:	adc    BYTE PTR [edi+0x5d],ch
  4129b3:	pop    esp
  4129b4:	cdq    
  4129b5:	jns    0x412a22
  4129b7:	xor    esp,DWORD PTR [esi-0x5f]
  4129ba:	dec    ecx
  4129bb:	mov    al,0x5f
  4129bd:	sbb    ebp,ebp
  4129bf:	dec    eax
  4129c0:	daa    
  4129c1:	pop    es
  4129c2:	add    eax,0xc9bef14e
  4129c7:	hlt    
  4129c8:	mov    esi,ecx
  4129ca:	or     eax,esp
  4129cc:	(bad)  
  4129cd:	and    BYTE PTR [edx-0xc],bl
  4129d0:	lock mov DWORD PTR [ebx+ebp*1],edx
  4129d4:	xor    al,0x70
  4129d6:	xor    ecx,ebx
  4129d8:	clc    
  4129d9:	xchg   esi,eax
  4129da:	ret    
  4129db:	repz ficomp WORD PTR [ebx]
  4129de:	je     0x4129eb
  4129e0:	outs   dx,BYTE PTR ds:[esi]
  4129e1:	mov    ss,WORD PTR ds:0x5598e578
  4129e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e8:	cmc    
  4129e9:	xlat   BYTE PTR ds:[ebx]
  4129ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129eb:	sbb    al,0x3c
  4129ed:	ret    
  4129ee:	pop    eax
  4129ef:	adc    eax,DWORD PTR [ebx-0x24]
  4129f2:	inc    esp
  4129f3:	out    dx,al
  4129f4:	adc    eax,DWORD PTR [ebx]
  4129f6:	scas   al,BYTE PTR es:[edi]
  4129f7:	arpl   WORD PTR [ebx-0x71],di
  4129fa:	inc    esp
  4129fb:	dec    ebp
  4129fc:	clc    
  4129fd:	je     0x412a1b
  4129ff:	loop   0x412a38
  412a01:	lods   eax,DWORD PTR ds:[esi]
  412a02:	sub    edi,DWORD PTR [ecx]
  412a04:	call   0xe72:0xb66e374a
  412a0b:	dec    edi
  412a0c:	mov    BYTE PTR [ebx+0x46],ch
  412a0f:	add    bl,ah
  412a11:	push   ss
  412a12:	jbe    0x412a70
  412a14:	jns    0x412a57
  412a16:	ret    
  412a17:	call   0x3db2:0x670095e6
  412a1e:	outs   dx,BYTE PTR ds:[esi]
  412a1f:	inc    edi
  412a20:	lahf   
  412a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a22:	pop    esi
  412a23:	inc    esp
  412a24:	push   es
  412a25:	aad    0x54
  412a27:	jecxz  0x412aa4
  412a29:	adc    DWORD PTR [edx-0xd],ecx
  412a2c:	mov    ch,BYTE PTR [ebp+0x4d]
  412a2f:	loopne 0x412a8c
  412a31:	ror    BYTE PTR [ecx+ebp*2],1
  412a34:	gs mov edi,ss
  412a37:	and    al,0x41
  412a3a:	in     al,dx
  412a3b:	push   esi
  412a3c:	jno    0x412aac
  412a3e:	mov    edx,0x368e6b75
  412a43:	mul    esi
  412a45:	mov    eax,ds:0x68d29cfb
  412a4a:	sbb    ebx,eax
  412a4c:	ds mov es,esi
  412a4f:	add    bl,0x9e
  412a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a53:	aaa    
  412a54:	adc    al,0x1f
  412a56:	or     dh,ah
  412a58:	les    edi,FWORD PTR [edx-0x7d]
  412a5b:	cmp    al,BYTE PTR [ebx+0xf]
  412a5e:	mov    edi,DWORD PTR [edx]
  412a60:	cld    
  412a61:	btc    DWORD PTR [ecx-0x16],0x6d
  412a66:	sahf   
  412a67:	mov    cl,0x75
  412a69:	mov    al,ds:0xa3addb71
  412a6e:	mov    bl,0x84
  412a70:	rcl    ecx,cl
  412a72:	je     0x412a3b
  412a74:	mov    ds:0x471ebbc9,eax
  412a79:	pop    ss
  412a7a:	xor    eax,0x5933d6f1
  412a7f:	push   ebp
  412a80:	mov    al,0xdf
  412a82:	(bad)  
  412a83:	and    eax,0xb9654af2
  412a88:	sub    dh,BYTE PTR [di-0xa]
  412a8c:	retf   0x8b24
  412a8f:	aad    0xa1
  412a91:	fisub  DWORD PTR [esi+0x6c]
  412a94:	nop
  412a95:	pop    edi
  412a96:	adc    eax,0x42a9cb15
  412a9b:	sbb    BYTE PTR [esi+edx*4-0x2460a85e],0xdf
  412aa3:	xchg   BYTE PTR [ebp+0x28],dl
  412aa6:	sbb    DWORD PTR [ecx],0xd45ac8b6
  412aac:	loopne 0x412ab7
  412aae:	cmp    BYTE PTR [edi-0xc6becb3],bh
  412ab4:	leave  
  412ab5:	adc    DWORD PTR [edi],ebp
  412ab7:	sub    eax,0x2ecd27e4
  412abc:	mov    ss,WORD PTR [ebx+0x2]
  412abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ac0:	cmc    
  412ac1:	push   cs
  412ac2:	push   esi
  412ac3:	sbb    eax,DWORD PTR [edi]
  412ac5:	push   ds
  412ac6:	retf   
  412ac7:	call   0xb85a:0x4359793c
  412ace:	ja     0x412ae6
  412ad0:	mov    ebx,0xd80fc71a
  412ad5:	mov    WORD PTR [ebp-0x27],ss
  412ad8:	adc    DWORD PTR [eax-0x24dc37ca],eax
  412ade:	mov    bh,0x73
  412ae0:	cmp    al,0xdd
  412ae2:	or     eax,0x823994f3
  412ae7:	iret   
  412ae8:	add    eax,0xf4582ce0
  412aed:	add    dh,BYTE PTR [ebp+0x35]
  412af0:	ret    0xe87
  412af3:	mov    esp,0x63ad0afc
  412af8:	repz xor eax,0xf84d9995
  412afe:	aad    0xe6
  412b00:	inc    ebx
  412b01:	xchg   ebx,eax
  412b02:	das    
  412b03:	xlat   BYTE PTR ds:[ebx]
  412b04:	mov    esi,0x589041d9
  412b09:	inc    edx
  412b0a:	xor    esi,0x20
  412b0d:	ficomp WORD PTR [ebx]
  412b0f:	xchg   ebp,eax
  412b10:	sub    BYTE PTR [edi+0x1e],bh
  412b13:	cmp    al,0x43
  412b15:	lock add ebx,ebp
  412b18:	adc    BYTE PTR [ebp+0x45acf2c5],bh
  412b1e:	out    0xd9,eax
  412b20:	mov    edx,0x93c7ad07
  412b25:	mov    eax,ds:0xbb3c685f
  412b2a:	mov    ebp,0x304d283
  412b2f:	and    DWORD PTR [ebx+0x2ca5c423],0xffffffcd
  412b36:	pop    eax
  412b37:	and    al,0xec
  412b39:	in     eax,0x75
  412b3b:	add    eax,DWORD PTR [ebx]
  412b3d:	pop    es
  412b3e:	mov    dh,0xb4
  412b40:	ret    
  412b41:	mov    ch,0x48
  412b43:	xchg   DWORD PTR [ecx+esi*1],ebx
  412b46:	cmc    
  412b47:	popa   
  412b48:	jbe    0x412af4
  412b4a:	into   
  412b4b:	(bad)  
  412b4c:	and    al,0x43
  412b4e:	int3   
  412b4f:	sbb    esp,DWORD PTR [eax+eax*1]
  412b52:	pop    es
  412b53:	cs (bad) 
  412b55:	pop    eax
  412b56:	inc    edi
  412b57:	xchg   DWORD PTR [ecx+0x31],edx
  412b5a:	cdq    
  412b5b:	subps  xmm2,xmm2
  412b5e:	pop    ds
  412b5f:	xor    BYTE PTR [ecx],al
  412b61:	adc    al,0x54
  412b63:	adc    bh,BYTE PTR [eax+0x3442d47f]
  412b69:	scas   al,BYTE PTR es:[edi]
  412b6a:	sbb    eax,0xfde38832
  412b6f:	jns    0x412b86
  412b71:	(bad)  
  412b72:	shr    BYTE PTR [esi-0x2a],cl
  412b75:	xor    esi,ebp
  412b77:	in     eax,dx
  412b78:	dec    edx
  412b79:	bound  edx,QWORD PTR [edx-0x9]
  412b7c:	pop    esi
  412b7d:	mov    ah,0xfe
  412b7f:	sub    bl,BYTE PTR [edi]
  412b81:	popa   
  412b82:	inc    edi
  412b83:	jle    0x412b91
  412b85:	add    al,0x41
  412b87:	cmp    edi,DWORD PTR [ebx-0x6d]
  412b8a:	inc    ecx
  412b8b:	loope  0x412bfe
  412b8d:	cs dec esp
  412b8f:	dec    edi
  412b90:	sti    
  412b91:	bound  ebx,QWORD PTR [ebp-0x43]
  412b94:	pop    edi
  412b95:	xchg   BYTE PTR [ecx+0x75],dh
  412b98:	xchg   edx,eax
  412b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b9b:	adc    eax,0x7388a778
  412ba0:	lahf   
  412ba1:	or     BYTE PTR [ebp+0x761156f8],cl
  412ba7:	mov    ecx,0xe6e97563
  412bac:	push   edx
  412bad:	sub    BYTE PTR [esi-0x37],0xe4
  412bb1:	sub    bl,BYTE PTR [ebp-0x760578fa]
  412bb7:	xchg   esi,eax
  412bb8:	xchg   BYTE PTR [edi-0x6a163a8c],dh
  412bbe:	pop    edi
  412bbf:	mov    ebx,0x85236c39
  412bc4:	pushf  
  412bc5:	mov    dl,0x3e
  412bc7:	mov    edx,0x2d94f6f3
  412bcc:	js     0x412c3e
  412bce:	dec    ebx
  412bcf:	jl     0x412c39
  412bd1:	aam    0xba
  412bd3:	mov    ds:0xf5d8959b,eax
  412bd8:	mov    ch,0x84
  412bda:	mov    ds:0x2659fa10,al
  412bdf:	sbb    esi,ebp
  412be1:	ins    BYTE PTR es:[edi],dx
  412be2:	es daa 
  412be4:	push   edx
  412be5:	mov    ch,0x3c
  412be7:	enter  0xb114,0xb7
  412beb:	cmp    BYTE PTR [eax+ecx*4+0x20],ah
  412bef:	(bad)  
  412bf0:	in     al,dx
  412bf1:	fs out 0xaf,al
  412bf4:	and    DWORD PTR [ebx+edx*1+0x4890696b],ebp
  412bfb:	inc    DWORD PTR [esi]
  412bfd:	icebp  
  412bfe:	sbb    cl,ah
  412c00:	xchg   edx,eax
  412c01:	test   BYTE PTR [ecx],ah
  412c03:	call   0x9801:0x5ecdca53
  412c0a:	adc    al,0xf
  412c0c:	nop
  412c0d:	test   eax,0x49b18261
  412c12:	retf   0x3238
  412c15:	mov    bh,0x71
  412c17:	push   0x5e
  412c19:	retf   0xf5c5
  412c1c:	cmp    edx,DWORD PTR [ebp-0x7f6a7b24]
  412c22:	jae    0x412c82
  412c24:	inc    esp
  412c25:	inc    esi
  412c26:	inc    DWORD PTR [ecx-0xca13955]
  412c2c:	lahf   
  412c2d:	aas    
  412c2e:	push   ecx
  412c2f:	les    ebx,FWORD PTR [edx+0xa]
  412c32:	retf   
  412c33:	add    eax,DWORD PTR [edi]
  412c35:	push   edx
  412c36:	enter  0xed16,0xf4
  412c3a:	and    ecx,DWORD PTR [edx]
  412c3c:	push   0x9497bf2f
  412c41:	xchg   edi,eax
  412c42:	sbb    DWORD PTR [edi-0x3e],edi
  412c45:	je     0x412ca8
  412c47:	xlat   BYTE PTR ds:[ebx]
  412c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c4b:	xchg   ecx,eax
  412c4c:	adc    dh,dl
  412c4e:	call   0xa2a2f768
  412c53:	adc    al,0xcc
  412c55:	in     eax,dx
  412c56:	or     bl,BYTE PTR [ecx-0x593eabc8]
  412c5c:	(bad)  
  412c5d:	lock or al,0x8f
  412c60:	add    al,0x63
  412c62:	iret   
  412c63:	out    dx,al
  412c64:	aam    0x90
  412c66:	(bad)  
  412c67:	mov    ds:0xd3b18dac,eax
  412c6c:	mov    eax,ds:0x8def7068
  412c71:	push   es
  412c72:	inc    esp
  412c73:	imul   edx,DWORD PTR [eax+edx*4-0x5fc0311d],0xd5598d73
  412c7e:	imul   ecx,ebx,0x38b05385
  412c84:	pop    eax
  412c85:	fwait
  412c86:	xor    DWORD PTR [ecx],esi
  412c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c89:	inc    edi
  412c8a:	call   0x4308:0x9313c241
  412c91:	in     al,0xc1
  412c93:	push   ss
  412c94:	rcr    DWORD PTR [esi+ecx*1+0x22bbfe9c],0xed
  412c9c:	and    eax,0xc5cec3ff
  412ca1:	xor    bl,BYTE PTR [ecx+0x28]
  412ca4:	fiadd  WORD PTR [ecx+0x2b]
  412ca7:	pop    esi
  412ca8:	mov    bl,0x4c
  412caa:	xchg   DWORD PTR [edi],esp
  412cac:	sar    BYTE PTR [ebp-0x20fced2a],0x5e
  412cb3:	push   ds
  412cb4:	mov    al,ds:0x11cd6994
  412cb9:	mov    edi,0xeb136c13
  412cbe:	xlat   BYTE PTR ds:[ebx]
  412cbf:	and    BYTE PTR [eax-0x1303158f],bl
  412cc5:	mov    ebp,0x95b60950
  412cca:	loop   0x412d1c
  412ccc:	mov    ds:0x1a56a878,al
  412cd1:	push   ebp
  412cd2:	repz mov gs,esi
  412cd5:	inc    esi
  412cd6:	ins    DWORD PTR es:[edi],dx
  412cd7:	cld    
  412cd8:	and    eax,0x22a7a872
  412cdd:	mov    edi,0x8f9467fa
  412ce2:	bound  edi,QWORD PTR [edi-0xf612223]
  412ce8:	cmp    bh,bh
  412cea:	push   esp
  412ceb:	(bad)  
  412ced:	or     eax,0x5eed8b4a
  412cf2:	scas   al,BYTE PTR es:[edi]
  412cf3:	pushf  
  412cf4:	mov    ecx,0x4bb29c5b
  412cf9:	jne    0x412d50
  412cfb:	and    BYTE PTR [edi],bh
  412cfd:	and    al,0x58
  412cff:	push   ecx
  412d00:	sub    eax,0xbd490977
  412d05:	fcomi  st,st(0)
  412d07:	stos   BYTE PTR es:[edi],al
  412d08:	mov    ebp,0xd8cc7862
  412d0d:	mov    bl,0xb4
  412d0f:	or     eax,0x190bbf2b
  412d14:	add    ecx,ebp
  412d16:	mov    ds:0x554cd119,al
  412d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d1c:	jmp    0x412d78
  412d1e:	dec    esi
  412d1f:	xlat   BYTE PTR ds:[ebx]
  412d20:	fsub   DWORD PTR [eax-0x49]
  412d23:	pop    esi
  412d24:	icebp  
  412d25:	out    0x66,eax
  412d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d28:	mov    eax,ds:0x3a9bee71
  412d2d:	lock jp 0x412cd6
  412d30:	fistp  QWORD PTR [ebx+edi*4+0x0]
  412d34:	push   0xffffffce
  412d36:	jl     0x412db7
  412d38:	ss and al,0xed
  412d3b:	xor    al,0x97
  412d3d:	test   edi,ecx
  412d3f:	call   0x46df:0x53aa74b8
  412d46:	idiv   DWORD PTR [ebp+0x4]
  412d49:	arpl   WORD PTR [esi-0x27f5ef48],bp
  412d4f:	(bad)  
  412d50:	bound  eax,QWORD PTR [eax+0x3bcf673]
  412d56:	loope  0x412d7d
  412d58:	mov    dl,0x38
  412d5a:	jecxz  0x412d24
  412d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d5d:	pop    ecx
  412d5e:	scas   al,BYTE PTR es:[edi]
  412d5f:	in     al,0xbd
  412d61:	ins    BYTE PTR es:[edi],dx
  412d62:	sbb    esp,edx
  412d64:	mov    WORD PTR [edx-0x66],?
  412d67:	(bad)  
  412d68:	dec    ebx
  412d69:	xabort 0x9c
  412d6c:	fisttp WORD PTR [edi+eiz*8-0x13]
  412d70:	inc    ebx
  412d71:	mov    WORD PTR [ebp+0x2c],?
  412d74:	nop
  412d75:	loop   0x412d1d
  412d77:	push   0x17402d5e
  412d7c:	and    edi,DWORD PTR [edx]
  412d7e:	stos   DWORD PTR es:[edi],eax
  412d7f:	push   ecx
  412d80:	clc    
  412d81:	(bad)  
  412d82:	dec    esp
  412d83:	stc    
  412d84:	je     0x412dc6
  412d86:	xor    eax,DWORD PTR [edx-0x7d71459e]
  412d8c:	add    al,0x3
  412d8e:	mov    edi,0x4288f19f
  412d93:	aam    0x65
  412d95:	inc    ebx
  412d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d97:	xchg   edi,eax
  412d98:	xlat   BYTE PTR ds:[ebx]
  412d99:	push   edx
  412d9a:	sub    DWORD PTR [ebx],ecx
  412d9c:	pop    edx
  412d9d:	icebp  
  412d9e:	add    al,0x2d
  412da0:	and    ch,BYTE PTR [ebx+ebx*1+0x6b]
  412da4:	sbb    al,0x82
  412da6:	test   BYTE PTR [edi+0xc],ch
  412da9:	fwait
  412daa:	or     BYTE PTR [ebp+0x2b],0x6d
  412dae:	fisttp DWORD PTR gs:[ecx]
  412db1:	inc    esp
  412db2:	mov    ecx,0x2f550eb5
  412db7:	push   ebx
  412db8:	sub    BYTE PTR [ebx+0x4aeee592],bh
  412dbe:	xor    al,ah
  412dc0:	sahf   
  412dc1:	push   eax
  412dc2:	lods   al,BYTE PTR ds:[esi]
  412dc3:	ds (bad) 
  412dc5:	in     eax,dx
  412dc6:	push   ecx
  412dc7:	fldcw  WORD PTR [ebx]
  412dc9:	cmp    eax,0x77f522d9
  412dce:	stc    
  412dcf:	fwait
  412dd0:	and    eax,0xdefb0616
  412dd5:	cmp    dh,BYTE PTR [ecx+0x2cf22b5b]
  412ddb:	cdq    
  412ddc:	sbb    eax,0x5b3ceeeb
  412de1:	cwde   
  412de2:	icebp  
  412de3:	inc    edi
  412de4:	ins    DWORD PTR es:[edi],dx
  412de5:	test   eax,0x4859b014
  412dea:	nop
  412deb:	outs   dx,DWORD PTR ds:[esi]
  412dec:	sbb    ebx,edx
  412dee:	shr    DWORD PTR [ecx+0x53],cl
  412df1:	push   0xf2696258
  412df6:	test   DWORD PTR [ecx-0x441530e],0x1b7656ed
  412e00:	and    DWORD PTR cs:[esi+0x3a],ecx
  412e04:	shl    DWORD PTR [ebx-0x1821d9c1],0x9a
  412e0b:	(bad)  [edx+0x4089cecc]
  412e11:	inc    ebp
  412e12:	sbb    dl,dl
  412e14:	and    BYTE PTR [esi],bl
  412e16:	stos   BYTE PTR es:[edi],al
  412e17:	sahf   
  412e18:	xchg   edi,eax
  412e19:	mov    bh,0xdc
  412e1b:	call   0x10f1:0x17c9bda4
  412e22:	xchg   ecx,eax
  412e23:	pop    ss
  412e24:	fsub   DWORD PTR [esi+ebp*1]
  412e27:	in     al,dx
  412e28:	(bad)  
  412e29:	pop    esi
  412e2a:	out    0x89,al
  412e2c:	push   ebp
  412e2d:	call   0x16ce33dc
  412e32:	jmp    0x412e1a
  412e34:	call   0x75c5:0x1d99a1b3
  412e3b:	ja     0x412dcc
  412e3d:	pop    ecx
  412e3e:	loop   0x412e83
  412e40:	xchg   DWORD PTR [edi-0x44],ebx
  412e43:	push   ebx
  412e44:	or     eax,0xe1f755d3
  412e49:	call   0x3ce398a0
  412e4e:	sub    al,0x9a
  412e50:	jecxz  0x412e13
  412e52:	mov    dh,0x6
  412e54:	(bad)  
  412e55:	out    dx,al
  412e56:	test   al,0x8c
  412e58:	jbe    0x412e9a
  412e5a:	mov    BYTE PTR [ecx+0x58],bh
  412e5d:	ins    BYTE PTR es:[edi],dx
  412e5e:	jno    0x412e53
  412e60:	dec    edi
  412e61:	push   edi
  412e62:	push   esp
  412e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e64:	nop
  412e65:	stos   DWORD PTR es:[edi],eax
  412e66:	cdq    
  412e67:	push   ebx
  412e68:	and    esp,eax
  412e6a:	icebp  
  412e6b:	out    dx,eax
  412e6c:	add    BYTE PTR [ecx+0x6d],0xa2
  412e70:	sbb    bl,BYTE PTR [edi+edx*8+0xf787d0c]
  412e77:	pop    ebp
  412e78:	jl     0x412e28
  412e7a:	pop    esi
  412e7b:	pop    edx
  412e7c:	dec    ebp
  412e7d:	popf   
  412e7e:	aaa    
  412e7f:	(bad)  
  412e80:	test   al,0x96
  412e82:	mov    dl,0x95
  412e84:	adc    edi,DWORD PTR [edx-0x21]
  412e87:	arpl   WORD PTR [ebp-0x4c],sp
  412e8a:	leave  
  412e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e8c:	sti    
  412e8d:	mov    ebx,0x9e1fab5d
  412e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e93:	cwde   
  412e94:	mov    bl,0x21
  412e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e97:	sub    eax,eax
  412e99:	(bad)  
  412e9a:	jo     0x412eea
  412e9c:	mul    DWORD PTR [ecx+ebx*8]
  412e9f:	and    eax,0x3fbda09b
  412ea4:	jb     0x3c204020
  412eaa:	or     DWORD PTR ds:0xeaedbb1a,esi
  412eb0:	pop    edi
  412eb1:	pop    ss
  412eb2:	xor    BYTE PTR [esi+0x49],dh
  412eb5:	in     al,0x93
  412eb7:	push   0x63
  412eb9:	or     edx,DWORD PTR [edi]
  412ebb:	dec    edx
  412ebc:	push   es
  412ebd:	add    eax,0xdcda8493
  412ec2:	sub    eax,0x1811ba16
  412ec7:	xor    eax,0x8f3a1315
  412ecc:	sti    
  412ecd:	add    BYTE PTR [esi],0x80
  412ed0:	rcr    DWORD PTR [ecx+0x11],1
  412ed3:	jnp    0x412eb2
  412ed5:	js     0x412efe
  412ed7:	mov    al,cl
  412ed9:	jo     0x412e7f
  412edb:	repnz clc 
  412edd:	or     eax,0x38e3aabc
  412ee2:	std    
  412ee3:	int    0xe
  412ee5:	popa   
  412ee6:	or     al,0x7f
  412ee8:	mov    ebx,DWORD PTR [esi-0x27]
  412eeb:	jne    0x412ee3
  412eed:	(bad)  
  412eef:	sahf   
  412ef0:	inc    edx
  412ef1:	add    DWORD PTR ds:0xf039896b,esp
  412ef7:	xchg   DWORD PTR [eax-0x69],edi
  412efa:	cld    
  412efb:	dec    esp
  412efc:	dec    ecx
  412efd:	pop    esp
  412efe:	mov    dl,0x51
  412f00:	add    eax,0x6f3fa173
  412f05:	aas    
  412f06:	jle    0x412e8c
  412f08:	dec    ecx
  412f09:	cdq    
  412f0a:	outs   dx,DWORD PTR ds:[esi]
  412f0b:	add    al,0x80
  412f0d:	div    DWORD PTR [edi-0x36]
  412f10:	pop    ebx
  412f11:	(bad)
  412f14:	pop    ebx
  412f15:	adc    eax,DWORD PTR [esp+ebx*2]
  412f18:	pushf  
  412f19:	mov    BYTE PTR [esi],dh
  412f1b:	mov    ch,0xc
  412f1d:	out    dx,eax
  412f1e:	xor    bl,BYTE PTR [ecx]
  412f20:	add    dl,BYTE PTR [edi-0x2a4bcf50]
  412f26:	mov    eax,0xf3120eff
  412f2b:	jae    0x412f9f
  412f2d:	out    0x60,eax
  412f2f:	jmp    0x412f77
  412f31:	je     0x412ef1
  412f33:	cmp    al,0xf3
  412f35:	mov    dh,0xe4
  412f37:	push   0xffffff9d
  412f39:	packuswb mm1,mm7
  412f3c:	push   ebp
  412f3d:	(bad)  
  412f3e:	popa   
  412f3f:	out    0x52,eax
  412f41:	sahf   
  412f42:	inc    BYTE PTR gs:[esp+edi*1]
  412f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f47:	and    eax,0x63345cf7
  412f4c:	mov    eax,0x22cf55fd
  412f51:	mov    ah,0x71
  412f53:	scas   eax,DWORD PTR es:[edi]
  412f54:	jmp    0x412efb
  412f56:	mov    al,0xf4
  412f58:	dec    ebp
  412f59:	push   cs
  412f5a:	ffreep st(0)
  412f5c:	(bad)  
  412f5d:	sbb    al,0x88
  412f5f:	sub    ch,BYTE PTR [esi-0x3c]
  412f62:	cli    
  412f63:	jmp    0x412f7c
  412f65:	addr16 in eax,0x23
  412f68:	int    0x59
  412f6a:	xchg   DWORD PTR [edi-0x32],eax
  412f6d:	repnz fsubr st(1),st
  412f70:	shl    bl,cl
  412f72:	das    
  412f73:	push   0x38
  412f75:	pop    ebx
  412f76:	scas   eax,DWORD PTR es:[edi]
  412f77:	sub    ah,al
  412f79:	add    esp,esp
  412f7b:	sar    DWORD PTR [edx],1
  412f7d:	stos   DWORD PTR es:[edi],eax
  412f7e:	xchg   esp,eax
  412f7f:	call   FWORD PTR [eax+edi*1]
  412f82:	adc    eax,0x5f0e7057
  412f87:	dec    edi
  412f88:	daa    
  412f89:	xor    DWORD PTR [ebx-0x69],edi
  412f8c:	ins    BYTE PTR es:[edi],dx
  412f8d:	and    al,ah
  412f8f:	sbb    BYTE PTR [ecx+0x3e864d8f],bl
  412f95:	ret    
  412f96:	jae    0x412fe5
  412f98:	jecxz  0x412f99
  412f9a:	xchg   ebx,eax
  412f9b:	out    0x2d,eax
  412f9d:	xor    al,0xd2
  412f9f:	xchg   esp,eax
  412fa0:	in     eax,dx
  412fa1:	aam    0x7c
  412fa3:	pop    esp
  412fa4:	xor    al,0xfa
  412fa6:	pusha  
  412fa7:	lods   eax,DWORD PTR ds:[esi]
  412fa8:	pushf  
  412fa9:	sbb    eax,0xf29f1fd4
  412fae:	test   BYTE PTR [edx],bl
  412fb0:	repz push esi
  412fb2:	popf   
  412fb3:	sub    BYTE PTR [edi],cl
  412fb5:	out    0x60,eax
  412fb7:	sbb    eax,0x6ae6a7d6
  412fbc:	push   ecx
  412fbd:	sar    BYTE PTR [ebp-0x25b4477d],1
  412fc3:	mov    dh,0x38
  412fc5:	cmp    BYTE PTR [eax+0x4f],cl
  412fc8:	cmp    ebx,edi
  412fca:	fs (bad) 
  412fcc:	jge    0x412f7b
  412fce:	imul   ebx,esp,0xffffff88
  412fd1:	cmp    al,dl
  412fd3:	iret   
  412fd4:	xor    BYTE PTR [edi+0x4040e03a],ah
  412fda:	imul   edx,eax,0xc5b29baa
  412fe0:	pop    edx
  412fe1:	dec    ebp
  412fe2:	fwait
  412fe3:	dec    edx
  412fe4:	or     DWORD PTR [ecx],edx
  412fe6:	sub    eax,0xb92645ac
  412feb:	ficomp DWORD PTR [ebx-0x11]
  412fee:	sbb    eax,0x4a370a9
  412ff3:	inc    edx
  412ff4:	jns    0x412f9c
  412ff6:	faddp  st(2),st
  412ff8:	sbb    DWORD PTR [eax-0x7a],ebx
  412ffb:	call   0x785:0xe63f2fef
  413002:	inc    eax
  413003:	jne    0x412f91
  413005:	adc    eax,DWORD PTR [ebp+0x7fe0e03c]
  41300b:	dec    edx
  41300c:	clc    
  41300d:	mov    ecx,0xbc85a6af
  413012:	ret    0xb3b1
  413015:	dec    ebx
  413016:	stos   BYTE PTR es:[edi],al
  413017:	sahf   
  413018:	pop    dx
  41301a:	and    DWORD PTR [edx+0x2ffc29d2],ebp
  413020:	lds    ecx,FWORD PTR [ebp+0x54e7a2da]
  413026:	rcr    DWORD PTR [ebx+0x38],cl
  413029:	add    DWORD PTR [edx+0x3fc1692a],0x10
  413030:	mov    WORD PTR [ebp-0x3e],es
  413033:	fild   QWORD PTR [esi+eax*4-0x13a9e234]
  41303a:	out    0x50,al
  41303c:	mov    BYTE PTR [ecx],dh
  41303e:	(bad)  
  41303f:	imul   edi,esi,0xdfbc4c73
  413045:	xchg   ecx,eax
  413046:	pop    esi
  413047:	lahf   
  413048:	fild   QWORD PTR [edi-0x33]
  41304b:	addr16 aaa 
  41304d:	inc    ebx
  41304e:	add    al,0xd9
  413050:	and    dl,BYTE PTR ds:0xde708f2f
  413056:	(bad)  
  413057:	leave  
  413058:	loope  0x413042
  41305a:	out    0xdc,al
  41305c:	fwait
  41305d:	ret    
  41305e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41305f:	sahf   
  413060:	cmp    bl,BYTE PTR [edx+0x56859284]
  413066:	inc    ebx
  413067:	jle    0x412ffc
  413069:	(bad)  
  41306a:	mov    eax,0x2bf02cc3
  41306f:	mov    ch,0x6e
  413071:	pop    ebx
  413072:	mov    dl,0xd6
  413074:	jo     0x41307b
  413076:	sub    dl,BYTE PTR [ebx+0x47]
  413079:	sbb    al,0xf
  41307b:	ds in  eax,dx
  41307d:	inc    esi
  41307e:	int    0xd2
  413080:	scas   eax,DWORD PTR es:[edi]
  413081:	push   eax
  413082:	xor    al,0x4f
  413084:	stc    
  413085:	jo     0x41304f
  413087:	jne    0x41303b
  413089:	mov    ebp,0xe577e066
  41308e:	xchg   edi,eax
  41308f:	ds clc 
  413091:	jns    0x41307f
  413093:	ds out dx,al
  413095:	add    dl,dl
  413097:	sbb    BYTE PTR [esi+0x27c43484],dh
  41309d:	xor    esp,DWORD PTR [eax+0x7e41b259]
  4130a3:	jmp    0x2757:0xeffda173
  4130aa:	or     al,0x6c
  4130ac:	mov    cl,cl
  4130ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130af:	inc    esp
  4130b0:	pop    eax
  4130b1:	fnstsw WORD PTR [ecx+eiz*8]
  4130b4:	jg     0x41304b
  4130b6:	add    eax,0x4ec933bb
  4130bb:	hlt    
  4130bc:	cmp    BYTE PTR [ebx-0x4f],dl
  4130bf:	ret    0x6ee2
  4130c2:	dec    eax
  4130c3:	stc    
  4130c4:	cs dec esi
  4130c6:	call   0xdc4a78a3
  4130cb:	loopne 0x41313c
  4130cd:	test   eax,0x2d6f4eab
  4130d2:	sub    bl,BYTE PTR [esi]
  4130d4:	call   0x11b6:0x38ba0b30
  4130db:	addr16 int3 
  4130dd:	pop    edx
  4130de:	inc    esp
  4130df:	add    esp,DWORD PTR [edi]
  4130e1:	sbb    esp,0x2d
  4130e4:	repz cmp al,0x95
  4130e7:	test   BYTE PTR [ecx+0x40],dh
  4130ea:	das    
  4130eb:	rcl    BYTE PTR [ebp-0x6d73efcb],1
  4130f1:	adc    DWORD PTR [edi],0xffffff94
  4130f4:	inc    edi
  4130f5:	jle    0x413080
  4130f7:	out    0xb9,al
  4130f9:	push   ecx
  4130fa:	ins    DWORD PTR es:[edi],dx
  4130fb:	sub    dh,ah
  4130fd:	cmc    
  4130fe:	xor    eax,0x2a5eda90
  413103:	xchg   DWORD PTR [ebp-0x69ba7d54],edi
  413109:	or     DWORD PTR [ecx+ebx*1+0x7a],ebx
  41310d:	dec    BYTE PTR [ebx+0x3d]
  413110:	mov    bl,0x50
  413112:	pop    edx
  413113:	stc    
  413114:	test   bl,bl
  413116:	xchg   esp,eax
  413117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413118:	nop
  413119:	mov    eax,0x2e79de63
  41311e:	sub    ecx,DWORD PTR [esi-0x42d548d8]
  413124:	scas   eax,DWORD PTR es:[edi]
  413125:	(bad)  
  413126:	mov    eax,0x559ff267
  41312b:	popfw  
  41312d:	stos   DWORD PTR es:[edi],eax
  41312e:	int3   
  41312f:	pop    ebx
  413130:	(bad)  
  413131:	in     al,0x22
  413133:	push   ss
  413134:	mov    ch,0xab
  413136:	fld    DWORD PTR [ecx-0x1fa84904]
  41313c:	jecxz  0x4131a1
  41313e:	test   eax,0x39cb0415
  413143:	cmp    al,0xca
  413145:	inc    esi
  413146:	icebp  
  413147:	pushw  ds
  413149:	rcr    edi,cl
  41314b:	mov    dh,0xf
  41314d:	enter  0xd60c,0xd0
  413151:	ret    0x52b6
  413154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413155:	lds    ebx,FWORD PTR [edx+0x78]
  413158:	(bad)  
  413159:	mov    eax,0x5bbb1767
  41315e:	xchg   esp,eax
  41315f:	loopne 0x41312c
  413161:	jle    0x41319b
  413163:	pop    ebx
  413164:	jns    0x413175
  413166:	bound  edi,QWORD PTR [ebx]
  413168:	and    eax,0xb138235b
  41316e:	(bad)  
  41316f:	ins    DWORD PTR es:[edi],dx
  413170:	imul   edx,esp,0xbfb5b84b
  413176:	inc    eax
  413177:	(bad)  
  413179:	popf   
  41317a:	push   esp
  41317b:	dec    ebx
  41317c:	xor    ecx,DWORD PTR [ebx-0x49]
  41317f:	out    dx,al
  413180:	mov    dl,0xbe
  413182:	mov    ds:0x50f34f04,al
  413187:	pop    eax
  413188:	(bad)  
  413189:	int3   
  41318a:	jbe    0x4131ff
  41318c:	nop
  41318d:	sub    esp,eax
  41318f:	jb     0x413195
  413191:	pop    ds
  413192:	and    al,0xb1
  413194:	jmp    0xf115:0x2c3ebf0
  41319b:	mov    bl,0x37
  41319d:	mov    esi,DWORD PTR [ecx+esi*1+0x49]
  4131a1:	sub    DWORD PTR [ebx+0x1ed2d563],0x70989733
  4131ab:	addr16 mov dh,0xd9
  4131ae:	mov    ebp,0x752996d6
  4131b3:	mov    al,ds:0x57c55ee2
  4131b8:	nop
  4131b9:	stc    
  4131ba:	lea    edx,[edi+0x61c857d2]
  4131c0:	and    DWORD PTR [ebp-0x333a8dee],ebx
  4131c6:	cmp    edx,ecx
  4131c8:	and    BYTE PTR [esp+edx*2],bl
  4131cb:	mov    cl,0x28
  4131cd:	fist   WORD PTR [esi+0x7268a776]
  4131d3:	inc    esi
  4131d4:	mov    esp,DWORD PTR [ebx]
  4131d6:	call   0x46fa:0xa33977e5
  4131dd:	fadd   QWORD PTR [ecx]
  4131df:	jp     0x413178
  4131e1:	enter  0xd224,0x2f
  4131e5:	cmp    DWORD PTR [edi+0x5e],esp
  4131e8:	cmovg  eax,DWORD PTR [ebx-0x6c]
  4131ec:	dec    ecx
  4131ed:	pusha  
  4131ee:	jb     0x4131ef
  4131f0:	jecxz  0x413219
  4131f2:	jp     0x413270
  4131f4:	jp     0x41321e
  4131f6:	in     al,0x58
  4131f8:	cmp    esi,esp
  4131fa:	sub    BYTE PTR [ecx],bl
  4131fc:	inc    edi
  4131fd:	dec    edx
  4131fe:	addr16 push ebx
  413200:	sub    BYTE PTR [esp+eax*4],ch
  413203:	mov    edx,0xa04b0662
  413208:	push   esp
  413209:	jb     0x4131e5
  41320b:	cmc    
  41320c:	not    BYTE PTR [ecx+0x564a164b]
  413212:	or     DWORD PTR [edi-0x36be0981],0xffffff85
  413219:	cdq    
  41321a:	(bad)  
  41321b:	sbb    al,0xb7
  41321d:	out    0xf1,eax
  41321f:	sbb    DWORD PTR [ebx],ebx
  413221:	push   cs
  413222:	sti    
  413223:	sbb    eax,DWORD PTR ss:[edi]
  413226:	adc    ebp,esp
  413228:	in     al,0x3c
  41322a:	push   es
  41322b:	cmp    DWORD PTR [esi-0x4605b3b6],esp
  413231:	mov    ch,0x99
  413233:	push   es
  413234:	mov    ds,WORD PTR [eax+ecx*4]
  413237:	and    BYTE PTR [eax+0x729f4c7c],0x12
  41323e:	sub    ebp,edi
  413240:	push   0xffffff90
  413242:	out    0xd2,al
  413244:	mov    ah,BYTE PTR [esi+eax*8]
  413247:	call   0xa8858277
  41324c:	ins    DWORD PTR es:[edi],dx
  41324d:	push   ebp
  41324e:	stc    
  41324f:	(bad)  
  413250:	or     ch,BYTE PTR [eax-0x29]
  413253:	clc    
  413254:	ins    DWORD PTR es:[edi],dx
  413255:	and    BYTE PTR [esi+eiz*4],cl
  413258:	jp     0x41320c
  41325a:	mov    es,ebp
  41325c:	push   edx
  41325d:	push   0x54
  41325f:	mov    eax,0x2a148a2f
  413264:	ret    0x4504
  413267:	jg     0x4132bf
  413269:	leave  
  41326a:	in     eax,dx
  41326b:	fbld   TBYTE PTR [eax]
  41326d:	mov    ebp,0x7341cc87
  413272:	or     al,0x86
  413274:	cmc    
  413275:	sub    eax,DWORD PTR [edi-0x2025ee47]
  41327b:	ror    al,1
  41327d:	sbb    esp,DWORD PTR [ebx]
  41327f:	leave  
  413280:	sbb    ebx,edi
  413282:	jo     0x41325e
  413284:	call   0xcab2:0xd3863163
  41328b:	loope  0x413269
  41328d:	repz shl BYTE PTR [edi-0x5093a5aa],0xa3
  413295:	xchg   DWORD PTR [eax],ebp
  413297:	sub    BYTE PTR [eax],0xd8
  41329a:	inc    edi
  41329b:	sbb    ah,BYTE PTR [ebx]
  41329d:	dec    edi
  41329e:	popa   
  41329f:	cmp    DWORD PTR [eax+0x13d6ba99],esi
  4132a5:	xchg   esp,eax
  4132a6:	sub    DWORD PTR [eax+0x10],edx
  4132a9:	mov    ?,WORD PTR ss:[ebx]
  4132ac:	in     al,dx
  4132ad:	and    bh,BYTE PTR [eax]
  4132af:	add    eax,0x973e6224
  4132b4:	add    ebp,0x2451885d
  4132ba:	pop    edi
  4132bb:	jmp    0xc4d7:0x766fc3eb
  4132c2:	pusha  
  4132c3:	out    0xd7,eax
  4132c5:	je     0x413296
  4132c7:	add    ebp,DWORD PTR [ecx+0x4d]
  4132ca:	loope  0x413323
  4132cc:	pop    eax
  4132cd:	data16 sahf 
  4132cf:	daa    
  4132d0:	and    DWORD PTR [edi+0x4],0xfc87842c
  4132d7:	mov    ebx,0x8e4140f7
  4132dc:	mov    edi,0x86844388
  4132e1:	daa    
  4132e2:	add    eax,0xd28a4bb0
  4132e7:	das    
  4132e8:	popa   
  4132e9:	sub    esi,ecx
  4132eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ec:	div    BYTE PTR [ebx+0x61a5c6e1]
  4132f2:	adc    eax,0xfb647868
  4132f7:	push   es
  4132f8:	fnsave [edx]
  4132fa:	dec    sp
  4132fc:	or     DWORD PTR [ebx+0x13],ecx
  4132ff:	(bad)  
  413300:	push   0x14dc051f
  413305:	mov    cl,0x45
  413307:	mov    dh,0xa7
  413309:	stos   DWORD PTR es:[edi],eax
  41330a:	xor    al,ch
  41330c:	hlt    
  41330d:	in     eax,0x54
  41330f:	pop    ebx
  413310:	into   
  413311:	xchg   esi,eax
  413312:	jp     0x413366
  413314:	enter  0x79df,0x30
  413318:	js     0x413391
  41331a:	pop    ebp
  41331b:	je     0x413350
  41331d:	and    ah,cl
  41331f:	add    DWORD PTR [edx-0x2d],edi
  413322:	ror    DWORD PTR [ebx-0x8991632],1
  413328:	out    0xb1,eax
  41332a:	push   0xffffffbc
  41332c:	mov    eax,ds:0x4f780e26
  413331:	mov    ebp,0x7f90d604
  413336:	in     al,dx
  413337:	test   eax,0x7e40168f
  41333d:	push   esi
  41333e:	mov    eax,0x37c2397a
  413343:	add    al,0x2d
  413345:	pop    ss
  413346:	jne    0x413387
  413348:	mov    ch,0x30
  41334a:	push   ss
  41334b:	mov    WORD PTR [edi],ds
  41334d:	xchg   edi,eax
  41334e:	xchg   DWORD PTR [esi],ebp
  413350:	imul   edx,edx,0xffffffa5
  413353:	pop    ecx
  413354:	cs dec ebp
  413356:	pop    esi
  413357:	scas   eax,DWORD PTR es:[edi]
  413358:	lock loop 0x4132e2
  41335b:	pminsw mm0,mm7
  41335e:	jge    0x413348
  413360:	sti    
  413361:	mov    bl,0xbb
  413363:	adc    eax,0xd989bf8f
  413368:	mov    dh,0x97
  41336a:	ds jbe 0x4133a7
  41336d:	dec    edi
  41336e:	or     dh,BYTE PTR [ecx-0xa5e0141]
  413374:	data16 inc BYTE PTR [esi]
  413377:	stos   BYTE PTR es:[edi],al
  413378:	add    BYTE PTR [eax+esi*2],0xe3
  41337c:	push   0xffffffa2
  41337e:	pop    edi
  41337f:	rcr    esi,cl
  413381:	mov    ecx,0xfa7bc604
  413386:	xor    DWORD PTR [esi],esp
  413388:	dec    edi
  413389:	cli    
  41338a:	sbb    al,al
  41338c:	shl    BYTE PTR [ebp+0x6592d874],1
  413392:	mov    ds:0x1501d745,al
  413397:	add    al,0x41
  413399:	les    ebp,FWORD PTR [ebp+ecx*2-0x3428462]
  4133a0:	in     al,0x48
  4133a2:	xchg   ebp,eax
  4133a3:	cmp    esp,DWORD PTR [edx+0x73]
  4133a6:	lods   al,BYTE PTR ds:[esi]
  4133a7:	mov    edx,DWORD PTR [eax+0x60]
  4133aa:	hlt    
  4133ab:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ad:	call   0xbb9ebb5d
  4133b2:	xor    edi,DWORD PTR [eax-0x675f1b4c]
  4133b8:	xchg   esp,eax
  4133b9:	adc    bl,ch
  4133bb:	xchg   esi,eax
  4133bc:	adc    al,dl
  4133be:	mov    dh,0x92
  4133c0:	outs   dx,BYTE PTR ds:[esi]
  4133c1:	fdiv   st,st(7)
  4133c3:	(bad)  
  4133c4:	out    0x53,al
  4133c6:	test   BYTE PTR [edi-0x20484dac],dh
  4133cc:	xchg   ebp,eax
  4133cd:	mov    ebp,0xbb360dc7
  4133d2:	pop    esi
  4133d3:	mov    bh,0xce
  4133d5:	mov    gs,WORD PTR [edi]
  4133d7:	cmp    BYTE PTR [eax],bh
  4133d9:	pop    ebp
  4133da:	inc    ebx
  4133db:	shl    ah,1
  4133dd:	xchg   edx,eax
  4133de:	mov    dl,0xcd
  4133e0:	or     esp,DWORD PTR [eax+0x548434a4]
  4133e6:	mov    ds:0x9e31ecb,al
  4133eb:	sub    ch,BYTE PTR gs:[edx-0x36]
  4133ef:	enter  0x1872,0xac
  4133f3:	xchg   ebp,eax
  4133f4:	fist   DWORD PTR [esi+esi*8]
  4133f7:	imul   edx,ecx,0x22
  4133fa:	xchg   edi,eax
  4133fb:	in     al,dx
  4133fc:	adc    al,0x54
  4133fe:	rol    BYTE PTR [eax],cl
  413400:	iret   
  413401:	add    edx,DWORD PTR [eax+0x33]
  413404:	xor    bl,bl
  413406:	jmp    0x4133e2
  413408:	pop    esi
  413409:	in     al,0xbe
  41340b:	rol    DWORD PTR [ecx-0x696ff43b],1
  413411:	mov    esp,0xd9c030b
  413416:	es and al,0xc9
  413419:	cmp    DWORD PTR [edx],edx
  41341b:	push   cs
  41341c:	sub    eax,0x3b18b21
  413421:	add    ah,BYTE PTR [ecx-0x7c0eebb7]
  413427:	stos   DWORD PTR es:[edi],eax
  413428:	push   ecx
  413429:	or     ch,ch
  41342b:	inc    ebp
  41342c:	xor    al,BYTE PTR [ebp-0x4e]
  41342f:	call   FWORD PTR [edi+0x43a4dfbb]
  413435:	sbb    cl,BYTE PTR [edi+0x74]
  413438:	inc    edi
  413439:	push   cs
  41343a:	shr    BYTE PTR [ebx+ecx*1+0x19],cl
  41343e:	push   edi
  41343f:	fdivr  DWORD PTR [ecx]
  413441:	xor    BYTE PTR [esi+eiz*1],ah
  413444:	fmul   DWORD PTR [esi]
  413446:	push   edx
  413447:	inc    ebx
  413448:	fiadd  DWORD PTR [ebx]
  41344a:	addr16 jmp 0x413466
  41344d:	stc    
  41344e:	jle    0x413416
  413450:	cli    
  413451:	(bad)  
  413452:	ins    DWORD PTR es:[edi],dx
  413453:	sub    BYTE PTR [edx],dh
  413455:	mov    dl,0xdf
  413457:	(bad)  
  413458:	mov    bl,0x65
  41345a:	stc    
  41345b:	sbb    BYTE PTR [esi+0x70],0xa6
  41345f:	(bad)  
  413460:	clc    
  413461:	cmp    eax,esi
  413463:	add    al,0xf9
  413465:	mov    eax,0x5f624adb
  41346a:	push   ds
  41346b:	js     0x413490
  41346d:	imul   edx,DWORD PTR [ecx],0xdcb0899
  413473:	fs test al,0xc0
  413476:	(bad)  [ebx]
  413478:	retf   
  413479:	stc    
  41347a:	test   BYTE PTR [ebx-0x4e],0x32
  41347e:	cmp    bh,BYTE PTR [eax+0x7f]
  413481:	ss xor ah,cl
  413484:	fs aad 0x60
  413487:	lea    ebx,[edx]
  413489:	leave  
  41348a:	push   es
  41348b:	sub    eax,0x27ac35f9
  413490:	sar    DWORD PTR [ecx],1
  413492:	mov    dh,0x3e
  413494:	fisttp WORD PTR [ebp-0x25cdb4e8]
  41349a:	nop
  41349b:	and    al,0x8e
  41349d:	jle    0x41351d
  41349f:	jb     0x41346a
  4134a1:	push   ds
  4134a2:	out    0xee,al
  4134a4:	inc    esi
  4134a5:	and    al,0xde
  4134a7:	nop
  4134a8:	mov    ds:0xe4c65f6,eax
  4134ad:	ins    DWORD PTR es:[edi],dx
  4134ae:	imul   ch
  4134b0:	sbb    al,0x26
  4134b2:	or     bh,BYTE PTR [esi+0x6a]
  4134b5:	ins    DWORD PTR es:[edi],dx
  4134b6:	xchg   ebx,eax
  4134b7:	inc    edi
  4134b8:	push   ebp
  4134b9:	mov    esi,0x6f63b3d1
  4134be:	jnp    0x4134b0
  4134c0:	add    al,0xb9
  4134c2:	xor    al,BYTE PTR [ecx+eiz*1+0x34]
  4134c6:	cwde   
  4134c7:	enter  0x41d4,0x39
  4134cb:	xchg   esi,eax
  4134cc:	mov    ebp,0x9d7dd5eb
  4134d1:	or     dl,BYTE PTR [ecx]
  4134d3:	pusha  
  4134d4:	(bad)  
  4134d5:	fdiv   st(0),st
  4134d7:	mov    bl,0xd2
  4134d9:	adc    dh,BYTE PTR [edi+0x5e5df16b]
  4134df:	data16 arpl si,bx
  4134e2:	inc    esp
  4134e3:	jmp    0xcaf7e940
  4134e8:	(bad)
  4134eb:	cwde   
  4134ec:	xchg   ebp,eax
  4134ed:	sub    eax,0xffb2849
  4134f2:	repz idiv DWORD PTR [eax]
  4134f5:	pop    es
  4134f6:	cwde   
  4134f7:	(bad)  
  4134f8:	adc    cl,dl
  4134fa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134fc:	(bad)  
  4134fd:	fcos   
  4134ff:	inc    ecx
  413500:	aad    0x25
  413502:	adc    esi,DWORD PTR [ebx+edx*1]
  413505:	inc    BYTE PTR [eax+0x50f67bc3]
  41350b:	test   DWORD PTR [ecx-0x4144f71e],edx
  413511:	cs lahf 
  413513:	std    
  413514:	push   di
  413516:	adc    ebx,DWORD PTR [edi-0x31]
  413519:	dec    edi
  41351a:	leave  
  41351b:	adc    DWORD PTR [esi-0x3012be89],eax
  413521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413522:	xor    al,0x7b
  413524:	dec    ebp
  413525:	imul   ebx,ebp,0xb
  413528:	adc    eax,0x410deaf7
  41352d:	mov    edi,0xebde7d6a
  413532:	pop    ecx
  413533:	pop    ebx
  413534:	mov    esp,DWORD PTR [esi+0x1db68fdb]
  41353a:	pop    esi
  41353b:	scas   al,BYTE PTR es:[edi]
  41353c:	js     0x4134f2
  41353e:	cwde   
  41353f:	pop    esi
  413540:	cld    
  413541:	(bad)  
  413542:	mov    ah,0xde
  413544:	pop    edi
  413545:	jge    0x413541
  413547:	or     dh,BYTE PTR [eax+0x61]
  41354a:	pop    esp
  41354b:	push   es
  41354c:	stos   DWORD PTR es:[edi],eax
  41354d:	les    eax,FWORD PTR [esi+0x3a]
  413550:	cli    
  413551:	xlat   BYTE PTR ds:[ebx]
  413552:	(bad)  
  413554:	xchg   ebp,eax
  413555:	pop    ecx
  413556:	sahf   
  413557:	fwait
  413558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413559:	dec    ebx
  41355a:	dec    esp
  41355b:	sbb    eax,0x98feb87e
  413560:	mov    esi,0x30c7d6df
  413565:	and    ch,bh
  413567:	jl     0x4135ba
  413569:	dec    esp
  41356a:	aad    0x66
  41356c:	jl     0x4135d4
  41356e:	mov    ah,BYTE PTR [ecx]
  413570:	add    edx,DWORD PTR [eax+eax*2]
  413573:	enter  0xa801,0x8
  413577:	dec    esi
  413578:	fadd   QWORD PTR [ebx-0x751db469]
  41357e:	push   0x6f4eb128
  413583:	jnp    0x413580
  413585:	sbb    dl,BYTE PTR [esi-0x59]
  413588:	add    al,0xfc
  41358a:	push   0x41
  41358c:	jecxz  0x4135f4
  41358e:	mov    ah,0x12
  413590:	sub    bl,BYTE PTR [edx+ebx*8-0xad9c684]
  413597:	jbe    0x413595
  413599:	mov    DWORD PTR [esi+0x36],eax
  41359c:	aas    
  41359d:	jns    0x413618
  41359f:	push   cs
  4135a0:	shr    ebp,cl
  4135a2:	cld    
  4135a3:	mov    edx,0xc37ed210
  4135a8:	ficom  WORD PTR [ebp-0xd]
  4135ab:	fs pushw 0xfff4
  4135af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b0:	nop
  4135b1:	mov    dl,0x8a
  4135b3:	cmp    al,al
  4135b5:	pop    ebp
  4135b6:	leave  
  4135b7:	aas    
  4135b8:	int3   
  4135b9:	inc    ebx
  4135ba:	pop    es
  4135bb:	mov    WORD PTR [esi-0x67f25565],gs
  4135c1:	js     0x413615
  4135c3:	inc    esp
  4135c4:	popa   
  4135c5:	and    eax,0xbd005911
  4135ca:	fistp  WORD PTR [esi+0x5a50e80c]
  4135d0:	inc    esp
  4135d1:	(bad)  
  4135d3:	xor    ecx,DWORD PTR [edi+0x6c]
  4135d6:	imul   edi,DWORD PTR [eax],0x7b657766
  4135dc:	mov    ebx,0xb6dbcc43
  4135e1:	xchg   edx,eax
  4135e2:	adc    edx,DWORD PTR [edx]
  4135e4:	js     0x4135a7
  4135e6:	dec    edi
  4135e7:	mov    edx,0x2f9ee202
  4135ec:	jmp    0xa6372780
  4135f1:	xchg   BYTE PTR [ecx],bh
  4135f3:	sub    bh,ah
  4135f5:	xor    ebx,DWORD PTR [eax+0x2c]
  4135f8:	pop    edx
  4135f9:	dec    esp
  4135fb:	std    
  4135fc:	push   0xf667cbbe
  413601:	(bad)  
  413602:	xchg   edi,eax
  413603:	lods   al,BYTE PTR ds:[esi]
  413604:	xor    dx,0x7a1f
  413609:	jl     0x413678
  41360b:	dec    ebx
  41360c:	cmp    DWORD PTR [ebx-0x23fae772],ecx
  413612:	popa   
  413613:	cld    
  413614:	mov    al,0xf2
  413616:	sbb    eax,0x6df3bb33
  41361b:	sbb    al,cl
  41361d:	ja     0x4135c3
  41361f:	push   cs
  413620:	pop    ds
  413621:	enter  0xb9b7,0x5c
  413625:	lods   al,BYTE PTR ds:[esi]
  413626:	mov    bl,0x46
  413628:	xor    DWORD PTR [edi+ebp*4-0x1e],edi
  41362c:	jge    0x413619
  41362e:	sbb    DWORD PTR [ecx+edx*1],edx
  413631:	out    0x86,al
  413633:	(bad)  
  413634:	pop    ds
  413635:	xor    dh,BYTE PTR [edi]
  413637:	sub    ebp,DWORD PTR [ebx-0x16ba2af7]
  41363d:	push   edi
  41363e:	mov    ch,0x63
  413640:	mov    eax,ds:0x592d6653
  413645:	lods   al,BYTE PTR fs:[esi]
  413647:	call   0x93e9:0xb604a8f2
  41364e:	sub    BYTE PTR [esi-0x65],0xd4
  413652:	(bad)  
  413653:	jno    0x4136b7
  413655:	out    dx,al
  413656:	push   ebx
  413657:	pop    ebp
  413658:	fwait
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	inc    esi
  41365b:	stc    
  41365c:	inc    esi
  41365d:	jae    0x4136b1
  41365f:	jb     0x41361e
  413661:	push   esi
  413662:	fs sub eax,0x1b4aa7f1
  413668:	or     BYTE PTR [esi-0x6cec39d6],dl
  41366e:	mov    ds:0x6c33fcc4,al
  413673:	aas    
  413674:	stc    
  413675:	inc    esp
  413676:	mov    esp,0x1ab8c95b
  41367b:	stos   BYTE PTR es:[edi],al
  41367c:	jmp    0x413686
  41367e:	daa    
  41367f:	dec    ecx
  413680:	shl    BYTE PTR [edx-0x33cd2840],1
  413686:	sti    
  413687:	add    BYTE PTR [ebx-0x3e],dl
  41368a:	je     0x41370a
  41368c:	mov    dl,0x27
  41368e:	add    dl,ah
  413690:	mov    dl,BYTE PTR [edx+0x3e5c6917]
  413696:	xchg   esp,eax
  413697:	std    
  413698:	ds cld 
  41369a:	pop    esi
  41369b:	inc    edx
  41369c:	sub    ebp,DWORD PTR [edi-0x3bcae596]
  4136a2:	iret   
  4136a3:	pop    ds
  4136a4:	ret    0xf3ac
  4136a7:	jno    0x4136a0
  4136a9:	mov    edi,0xdd9e4d4b
  4136ae:	mov    esp,0xff1ef06d
  4136b3:	xlat   BYTE PTR ds:[ebx]
  4136b4:	retf   0x79c4
  4136b7:	mov    ?,WORD PTR [edx+0x37dc9a87]
  4136bd:	xchg   edx,eax
  4136be:	stos   DWORD PTR es:[edi],eax
  4136bf:	push   ecx
  4136c0:	aam    0xe7
  4136c2:	mov    dh,al
  4136c4:	aam    0xe3
  4136c6:	(bad)  
  4136c7:	scas   eax,DWORD PTR es:[edi]
  4136c8:	(bad)  
  4136c9:	xchg   esi,eax
  4136ca:	(bad)  
  4136cb:	mov    eax,ds:0xe7876ae0
  4136d0:	outs   dx,DWORD PTR ds:[esi]
  4136d1:	(bad)  
  4136d2:	fisubr DWORD PTR [ebx-0x45bd51f7]
  4136d8:	iret   
  4136d9:	stos   DWORD PTR es:[edi],eax
  4136da:	dec    ebp
  4136db:	jbe    0x4136c7
  4136dd:	xor    eax,0xc433bdc1
  4136e2:	outs   dx,BYTE PTR ds:[esi]
  4136e3:	mov    ds:0xd7f8e2a7,al
  4136e8:	push   0x485a78d1
  4136ed:	dec    ecx
  4136ee:	ror    al,cl
  4136f0:	sub    BYTE PTR [edi-0x48],ah
  4136f3:	inc    edx
  4136f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136f5:	mov    edx,0x3b119974
  4136fa:	push   cs
  4136fb:	and    ebx,ebp
  4136fd:	mov    ecx,DWORD PTR [edx]
  4136ff:	stos   DWORD PTR es:[edi],eax
  413700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413701:	lahf   
  413702:	add    al,0xb6
  413704:	das    
  413705:	sub    edi,DWORD PTR [edi-0x5d]
  413708:	ret    0x2055
  41370b:	lea    ecx,[eax-0x7dd7bbd1]
  413711:	je     0x4136ce
  413713:	pusha  
  413714:	fsub   QWORD PTR [ebx]
  413716:	test   DWORD PTR [eax-0x61526c6f],esi
  41371c:	jns    0x41374c
  41371e:	(bad)  
  41371f:	jg     0x41379f
  413721:	pop    DWORD PTR [edx+ebp*1+0x32]
  413725:	imul   BYTE PTR [ebx-0x2eecb923]
  41372b:	leave  
  41372c:	or     bh,BYTE PTR [esi]
  41372e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41372f:	in     al,dx
  413730:	add    al,0x48
  413732:	repz mov bh,0xfb
  413735:	adc    al,0x88
  413737:	jne    0x4136e1
  413739:	dec    edx
  41373a:	retf   0xdbf7
  41373d:	ja     0x41372b
  41373f:	push   cs
  413740:	add    DWORD PTR [esi+0x47840b2d],0xfffffffe
  413747:	jecxz  0x4137bf
  413749:	inc    edx
  41374a:	sbb    eax,0xca4c375a
  41374f:	sbb    esp,ecx
  413751:	pop    ebp
  413752:	shl    DWORD PTR [eax-0x1e2e2686],0xbe
  413759:	loopne 0x41371c
  41375b:	fstp   QWORD PTR [esi]
  41375d:	test   eax,0xd2a8ea83
  413762:	js     0x41376a
  413764:	addr16 inc ebp
  413766:	mov    al,0xe1
  413768:	sub    esp,ebx
  41376a:	push   eax
  41376b:	hlt    
  41376c:	sbb    eax,0x595b6fd
  413771:	xchg   esi,edi
  413773:	xchg   ebp,eax
  413774:	xor    DWORD PTR [ebx],esi
  413776:	cmp    DWORD PTR [eax],ecx
  413778:	sbb    eax,0xe1190611
  41377d:	les    edx,FWORD PTR [ecx-0x30]
  413780:	out    0xc5,al
  413782:	cmp    BYTE PTR [esi-0x2e],bh
  413785:	inc    esp
  413786:	jmp    0xb8da:0x5bc8b04e
  41378d:	mov    esi,0xa6b271a8
  413792:	jnp    0x413773
  413794:	fs fcmovnb st,st(2)
  413797:	push   edi
  413798:	jno    0x413723
  41379a:	mov    esp,0x2bc03de1
  41379f:	lods   eax,DWORD PTR ds:[esi]
  4137a0:	mov    ch,0xf4
  4137a2:	xchg   DWORD PTR [ebp+0x5f1ab619],eax
  4137a8:	push   ebx
  4137a9:	mov    dh,0x4a
  4137ab:	and    DWORD PTR [esi],0x3a
  4137ae:	cli    
  4137af:	mov    ch,0x67
  4137b1:	rcl    BYTE PTR [esi-0x37],cl
  4137b4:	adc    ah,dl
  4137b6:	loopne 0x413835
  4137b8:	inc    ebp
  4137b9:	sub    DWORD PTR [edi+0x5c],eax
  4137bc:	call   FWORD PTR [ebx]
  4137be:	(bad)  
  4137bf:	je     0x413783
  4137c1:	hlt    
  4137c2:	push   ss
  4137c3:	imul   edx,edi,0xffffffad
  4137c6:	test   al,0x69
  4137c8:	jne    0x413759
  4137ca:	cmp    eax,0xa3a6cb3a
  4137cf:	outs   dx,BYTE PTR ds:[esi]
  4137d0:	fstp   DWORD PTR [eax*2+0x568575c]
  4137d7:	sub    al,0x38
  4137d9:	lahf   
  4137da:	in     al,dx
  4137db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137dc:	sub    DWORD PTR [ebx+eiz*1],0x86515e8b
  4137e3:	push   cs
  4137e4:	fistp  WORD PTR [ecx-0x6bb43b3d]
  4137ea:	shl    DWORD PTR [edx+0x4c17672],0x16
  4137f1:	push   0xa53bacb6
  4137f6:	dec    eax
  4137f7:	mov    al,ds:0xda74e234
  4137fc:	addr16 pop ss
  4137fe:	sub    cl,BYTE PTR [ebx]
  413800:	pop    ds
  413801:	repz xchg esi,eax
  413803:	(bad)  
  413805:	gs test al,0x38
  413808:	add    BYTE PTR [ebp+0x7],0xd4
  41380c:	cmp    DWORD PTR [ebx+0x2efb1814],0x9887b7d4
  413816:	stos   BYTE PTR es:[edi],al
  413817:	idiv   BYTE PTR [edx+0x526f901b]
  41381d:	mov    ecx,0x24dba295
  413822:	jmp    0x337b:0x133c7cd2
  413829:	fs jo  0x41386a
  41382c:	xor    dl,ch
  41382e:	mov    ah,al
  413830:	and    al,BYTE PTR [edx]
  413832:	jg     0x4138a3
  413834:	dec    ebp
  413835:	cmp    dl,ch
  413837:	adc    DWORD PTR [ebx-0x6e],ebx
  41383a:	lods   al,BYTE PTR ds:[esi]
  41383b:	mov    dl,0xee
  41383d:	or     eax,0x837f452d
  413842:	pop    edi
  413843:	(bad)  
  413844:	enter  0xa59a,0x83
  413848:	test   cl,0xac
  41384b:	shl    BYTE PTR [ebx-0xf],cl
  41384e:	aad    0xbb
  413850:	xchg   ebp,eax
  413851:	pop    edx
  413852:	sub    esi,DWORD PTR [esi+0x4]
  413855:	in     eax,0x7a
  413857:	push   edx
  413858:	repnz cmc 
  41385a:	enter  0x3a68,0x7d
  41385e:	rcr    DWORD PTR [ebp+edi*4-0x52ed1c37],1
  413865:	mov    dl,BYTE PTR [edi]
  413867:	clc    
  413868:	mov    cl,BYTE PTR [esi-0x12]
  41386b:	(bad)  ds:0x86fe5c3c
  413871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413872:	lfs    esi,FWORD PTR [ebp-0x42e87fb5]
  413879:	push   0x23
  41387b:	pop    esi
  41387c:	push   ebx
  41387d:	xchg   edx,eax
  41387e:	push   es
  41387f:	pop    es
  413880:	inc    ebp
  413881:	cwde   
  413882:	repz dec ecx
  413884:	cs or  dl,al
  413887:	jp     0x4138f5
  413889:	cmp    dl,bh
  41388b:	xor    BYTE PTR [eax-0x52f0c6f3],dl
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	fs or  al,0x37
  413895:	inc    eax
  413896:	inc    eax
  413897:	test   al,0x68
  413899:	mov    ecx,0x66ef0a16
  41389e:	pop    edi
  41389f:	ret    0xe6fb
  4138a2:	in     al,dx
  4138a3:	or     BYTE PTR [ebp-0x7d2dfda7],0x7b
  4138aa:	aas    
  4138ab:	mov    edx,0x39dcc0
  4138b0:	mov    cl,0x53
  4138b2:	not    BYTE PTR [edx+0x46]
  4138b5:	push   esi
  4138b6:	jae    0x413843
  4138b8:	jo     0x413869
  4138ba:	sub    ebp,DWORD PTR [edx]
  4138bc:	pop    ecx
  4138bd:	and    eax,0xea9f5879
  4138c2:	dec    edi
  4138c3:	outs   dx,DWORD PTR ds:[esi]
  4138c4:	push   ecx
  4138c5:	pop    ecx
  4138c6:	lods   al,BYTE PTR ds:[esi]
  4138c7:	fcmovu st,st(1)
  4138c9:	(bad)  
  4138ca:	fcomi  st,st(6)
  4138cc:	add    eax,0x64936f0e
  4138d1:	(bad)
  4138d4:	and    eax,0x5e85073e
  4138d9:	jecxz  0x4138e0
  4138db:	mov    DWORD PTR [ebx-0x29],ebx
  4138de:	and    eax,0xf51598a5
  4138e3:	test   al,0x84
  4138e5:	outs   dx,BYTE PTR ds:[esi]
  4138e6:	push   es
  4138e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e8:	addr16 pop ebp
  4138ea:	sbb    DWORD PTR ss:[ecx-0x4d],ecx
  4138ee:	add    DWORD PTR [esi],ecx
  4138f0:	leave  
  4138f1:	call   0xcc93:0xf5de0fbf
  4138f8:	loope  0x413932
  4138fa:	jp     0x41394e
  4138fc:	jge    0x41395f
  4138fe:	xchg   ebx,eax
  4138ff:	fs adc cl,bl
  413902:	mov    edx,0x3f708b84
  413907:	fsub   st(7),st
  413909:	lahf   
  41390a:	psrlw  mm4,mm3
  41390d:	mov    bl,0xad
  41390f:	or     ah,ah
  413911:	fwait
  413912:	pop    esp
  413913:	cld    
  413914:	enter  0xc250,0x79
  413918:	nop
  413919:	cld    
  41391a:	rsm    
  41391c:	sahf   
  41391d:	pop    ds
  41391e:	inc    esi
  41391f:	mov    al,ds:0x4709b716
  413924:	loope  0x413914
  413926:	mov    al,0x15
  413928:	xchg   ecx,eax
  413929:	pusha  
  41392a:	or     al,0xa
  41392c:	out    0x1a,al
  41392e:	mov    dl,0x4
  413930:	pop    esp
  413931:	jp     0x4138bf
  413933:	mov    al,0xd5
  413935:	out    dx,eax
  413936:	imul   edx,DWORD PTR ds:0x69481c72,0xfffffffa
  41393d:	mov    ebx,0xaa1be56a
  413942:	fild   WORD PTR [ecx+0x20ebab0f]
  413948:	std    
  413949:	mov    DWORD PTR [eax-0x5b8d5101],esi
  41394f:	mov    ds:0x5b0a3ffe,eax
  413954:	lods   al,BYTE PTR ds:[esi]
  413955:	sbb    eax,0x418f0f63
  41395a:	cld    
  41395b:	cmp    ah,dh
  41395d:	adc    BYTE PTR [edi+edi*8],bh
  413960:	cmc    
  413961:	jne    0x4138e9
  413963:	daa    
  413964:	mov    ah,0x91
  413966:	mov    bh,0x11
  413968:	aad    0x6d
  41396a:	fcomi  st,st(3)
  41396c:	neg    BYTE PTR [ebp-0x146b6b4]
  413972:	sub    edi,esp
  413974:	and    eax,0xd261437f
  413979:	and    esi,DWORD PTR [edi]
  41397b:	xchg   ebx,eax
  41397c:	jns    0x413902
  41397e:	mov    ecx,0x94ab6747
  413983:	adc    DWORD PTR ss:[edi+0x77],ebx
  413987:	sbb    ecx,DWORD PTR [edx-0x26]
  41398a:	adc    esi,eax
  41398c:	fmul   st(7),st
  41398e:	ror    BYTE PTR [ecx+0x41],0x21
  413992:	dec    edi
  413993:	pop    edi
  413994:	push   edi
  413995:	pusha  
  413996:	mov    dl,0x28
  413998:	sbb    dh,bh
  41399a:	aas    
  41399b:	jb     0x4139c4
  41399d:	adc    esi,ebx
  41399f:	imul   esi,edx,0x6a
  4139a2:	das    
  4139a3:	(bad)  
  4139a4:	pop    esp
  4139a5:	sti    
  4139a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139a7:	mov    eax,0x61ec7afc
  4139ac:	sahf   
  4139ad:	mov    BYTE PTR [edx],bh
  4139af:	lods   al,BYTE PTR ds:[esi]
  4139b0:	adc    bh,cl
  4139b2:	addps  xmm2,xmm7
  4139b5:	ins    DWORD PTR es:[edi],dx
  4139b6:	jae    0x4139d8
  4139b8:	pop    ebx
  4139b9:	outs   dx,DWORD PTR ds:[esi]
  4139ba:	call   0xb5dc4e12
  4139bf:	lods   eax,DWORD PTR ds:[esi]
  4139c0:	pop    edi
  4139c1:	xchg   esi,eax
  4139c2:	mov    ds:0x784cfaf0,al
  4139c7:	(bad)  
  4139ca:	and    dl,dl
  4139cc:	or     edi,esp
  4139ce:	ss jo  0x413a38
  4139d1:	xor    al,0x0
  4139d3:	call   0xcf85:0xc78deea7
  4139da:	call   0xee148164
  4139df:	adc    BYTE PTR [esi-0x36],dl
  4139e2:	cld    
  4139e3:	sub    BYTE PTR [ecx-0x6b],ch
  4139e6:	mov    ebp,0x2c45fc26
  4139ec:	jl     0x413a5d
  4139ee:	mov    edi,0x5d5461c6
  4139f3:	stos   BYTE PTR es:[edi],al
  4139f4:	push   0x44
  4139f6:	aas    
  4139f7:	int3   
  4139f8:	stc    
  4139f9:	cmp    eax,0x1494c94d
  4139fe:	fst    DWORD PTR [edi]
  413a00:	sub    ch,bl
  413a02:	outs   dx,DWORD PTR ds:[esi]
  413a03:	jecxz  0x413a72
  413a05:	mov    edi,0x3275a71f
  413a0a:	jle    0x413a4e
  413a0c:	int    0x60
  413a0e:	sbb    BYTE PTR ds:0x900bf5cd,al
  413a14:	pusha  
  413a15:	jnp    0x4139c6
  413a17:	in     eax,dx
  413a18:	mov    esp,0xa141b626
  413a1d:	and    BYTE PTR [edi],0x8e
  413a20:	or     ah,0x1e
  413a23:	in     al,dx
  413a24:	sti    
  413a25:	dec    edx
  413a26:	jle    0x413a67
  413a28:	xchg   ebp,eax
  413a29:	sbb    al,BYTE PTR ds:[esi]
  413a2c:	jno    0x413a4e
  413a2e:	add    eax,0xc8a647b9
  413a33:	jle    0x413a10
  413a35:	stc    
  413a36:	call   0xf23d1753
  413a3b:	mov    WORD PTR [edx],gs
  413a3d:	dec    eax
  413a3e:	mov    eax,ds:0xdaefb59e
  413a43:	sbb    ecx,DWORD PTR [ebx+ebx*1-0x579d171]
  413a4a:	and    ebx,edi
  413a4c:	sub    eax,0x2c06dc22
  413a51:	out    dx,eax
  413a52:	(bad)  
  413a53:	cmp    ah,cl
  413a55:	ret    
  413a56:	lds    ecx,FWORD PTR [ecx+0x45]
  413a59:	sbb    DWORD PTR gs:[edx-0x136c6c32],eax
  413a60:	cmp    eax,0x72a99e9d
  413a65:	jb     0x413a67
  413a67:	int    0xac
  413a69:	sbb    eax,0x4d3801c9
  413a6e:	mov    edx,0x4b9a991
  413a73:	add    al,BYTE PTR [ebx+ecx*1]
  413a76:	cli    
  413a77:	cmc    
  413a78:	mov    ch,BYTE PTR [ecx-0x1885450e]
  413a7e:	push   edi
  413a7f:	dec    edi
  413a80:	mov    bh,BYTE PTR [ebp+0x6ec7c63e]
  413a86:	sahf   
  413a87:	fisttp WORD PTR [esi-0x19ca00dc]
  413a8d:	ret    
  413a8e:	aas    
  413a8f:	std    
  413a90:	mov    ah,0x7b
  413a92:	in     eax,dx
  413a93:	add    dl,BYTE PTR [ebx]
  413a95:	add    edx,DWORD PTR [ecx]
  413a97:	test   eax,0x4a32a40f
  413a9c:	dec    bx
  413a9e:	pop    esi
  413a9f:	repz fisttp WORD PTR [ebp+0x2b]
  413aa3:	loope  0x413aa5
  413aa5:	push   edi
  413aa6:	jmp    0x8fa2:0xa669d12b
  413aad:	ins    DWORD PTR es:[edi],dx
  413aae:	jb     0x413aef
  413ab0:	mov    esi,0x7424fd36
  413ab5:	push   esp
  413ab6:	call   0xfeeb:0xf1e40ee
  413abd:	adc    dl,BYTE PTR [esp+ebx*1]
  413ac0:	mov    dl,0x6f
  413ac2:	adc    BYTE PTR [edx-0x3c9b67e1],al
  413ac8:	iret   
  413ac9:	jo     0x413abb
  413acb:	repz pushf 
  413acd:	ret    
  413ace:	fs adc eax,0xcebae116
  413ad4:	dec    edi
  413ad5:	test   al,0x5b
  413ad7:	adc    DWORD PTR [esi-0x381905c],ebp
  413add:	add    BYTE PTR [eax],dl
  413adf:	in     al,0x8d
  413ae1:	mov    eax,ds:0x8fca2a5
  413ae6:	inc    edi
  413ae7:	mov    ds:0xfd5c40e,al
  413aec:	pop    esp
  413aed:	sahf   
  413aee:	mov    ecx,0xffcd20b5
  413af3:	cmc    
  413af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af5:	daa    
  413af6:	div    DWORD PTR [ecx+0x75]
  413af9:	xor    BYTE PTR [ebx+0x0],0xce
  413afd:	cmp    eax,0x9856f5cc
  413b02:	sub    eax,ebp
  413b04:	mov    al,ds:0x858d99dc
  413b09:	shl    DWORD PTR [edi+0xe],1
  413b0c:	add    dl,BYTE PTR gs:[ecx+0x6eab8a5e]
  413b13:	xchg   BYTE PTR ds:0x24a05c68,dl
  413b19:	jle    0x413a9b
  413b1b:	xchg   ebx,eax
  413b1c:	push   eax
  413b1d:	pop    esp
  413b1e:	add    ecx,DWORD PTR [ecx-0x1d]
  413b21:	push   edi
  413b22:	add    al,0x6f
  413b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b25:	sar    BYTE PTR [edi+0x10],cl
  413b28:	add    BYTE PTR [ebx-0x3f],dh
  413b2b:	pop    edx
  413b2c:	jae    0x413b36
  413b2e:	xchg   edx,eax
  413b2f:	push   es
  413b30:	out    dx,al
  413b31:	fist   WORD PTR [esi-0x26]
  413b34:	shl    BYTE PTR [edx-0x63],0xe8
  413b38:	push   eax
  413b39:	repnz push ss
  413b3b:	jmp    0x413b0f
  413b3d:	xchg   esp,eax
  413b3e:	pusha  
  413b3f:	add    al,0x40
  413b41:	mov    al,ds:0x5631354d
  413b46:	or     al,0x7e
  413b48:	mov    gs,WORD PTR [edx]
  413b4a:	mov    eax,ds:0xf23851fa
  413b4f:	inc    ebx
  413b50:	inc    esp
  413b51:	dec    esp
  413b52:	call   0x90637094
  413b57:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413b59:	sub    BYTE PTR [ebx+0x6f5e1e3d],bh
  413b5f:	inc    ecx
  413b60:	cmp    DWORD PTR [ecx],eax
  413b62:	mov    DWORD PTR [ecx-0x31f913e7],edx
  413b68:	push   0xfa00bd9b
  413b6d:	dec    esp
  413b6e:	leave  
  413b6f:	jnp    0x413bc3
  413b71:	lods   eax,DWORD PTR ds:[esi]
  413b72:	sbb    dl,BYTE PTR [edx+0x65]
  413b75:	pop    edi
  413b76:	retf   0x4b91
  413b79:	in     al,0x2b
  413b7b:	adc    BYTE PTR [ecx-0x30100647],bh
  413b81:	(bad)  
  413b82:	retf   0xa091
  413b85:	sti    
  413b86:	xlat   BYTE PTR ds:[ebx]
  413b87:	mov    edx,0x691a11
  413b8c:	xlat   BYTE PTR ds:[ebx]
  413b8d:	xor    al,0x9e
  413b8f:	sub    bl,BYTE PTR [edi+0x5e]
  413b92:	lea    esi,[ecx+0x1d277b83]
  413b98:	pop    ebx
  413b99:	dec    eax
  413b9a:	push   ecx
  413b9b:	sub    al,0xf8
  413b9d:	or     ch,BYTE PTR [edi+0x61]
  413ba0:	pop    ebp
  413ba1:	xchg   esp,eax
  413ba2:	jo     0x413bc5
  413ba4:	cmp    ah,bl
  413ba6:	or     DWORD PTR [edi],0xaebc7ba2
  413bac:	hlt    
  413bad:	imul   esp,edi,0xfffffff3
  413bb0:	pop    eax
  413bb1:	(bad)  
  413bb2:	push   cs
  413bb3:	xchg   edi,eax
  413bb4:	in     eax,0xed
  413bb6:	mov    WORD PTR [ebx],ss
  413bb8:	adc    eax,0xe1307500
  413bbd:	add    DWORD PTR [ebx-0x6b],ebx
  413bc0:	mov    ds:0x847301ad,al
  413bc5:	ja     0x413be2
  413bc7:	jmp    0x8549:0x64162b64
  413bce:	in     al,0xb4
  413bd0:	imul   ebp,DWORD PTR [edi+0x1a8a83d9],0x84203cab
  413bda:	add    cl,ah
  413bdc:	mov    ebx,0xa7fb32e5
  413be1:	iret   
  413be2:	into   
  413be3:	pop    edi
  413be4:	adc    al,0xbc
  413be6:	sbb    DWORD PTR [edi+0x43],0x77
  413bea:	dec    ebp
  413beb:	neg    eax
  413bed:	inc    eax
  413bee:	push   edi
  413bef:	push   DWORD PTR [edx]
  413bf1:	in     al,dx
  413bf2:	xchg   eax,esp
  413bf4:	cs mov bh,dh
  413bf7:	sbb    edi,DWORD PTR [ebp-0x42]
  413bfa:	mov    ebx,DWORD PTR [eax+0x365911a]
  413c00:	daa    
  413c01:	loop   0x413bfb
  413c03:	push   ecx
  413c04:	adc    al,0xd9
  413c06:	sbb    eax,edi
  413c08:	inc    ecx
  413c09:	mov    eax,ds:0x8efb3c31
  413c0e:	xchg   edx,eax
  413c0f:	in     eax,dx
  413c10:	ror    BYTE PTR [edx],1
  413c12:	adc    BYTE PTR gs:[edi],bl
  413c15:	xchg   esp,eax
  413c16:	sbb    al,0x6f
  413c18:	imul   edi,DWORD PTR [ebx+0x5f],0x22
  413c1c:	pop    ss
  413c1d:	fsubr  DWORD PTR [esi]
  413c1f:	push   edi
  413c20:	loope  0x413c2a
  413c22:	push   esp
  413c23:	fistp  WORD PTR [esi-0x8]
  413c26:	stos   BYTE PTR es:[edi],al
  413c27:	sub    al,cl
  413c29:	or     ch,ch
  413c2b:	fptan  
  413c2d:	or     eax,0xa27737fc
  413c32:	mov    BYTE PTR [ecx-0x5c8d74a],al
  413c38:	outs   dx,DWORD PTR ds:[esi]
  413c39:	cmp    bh,BYTE PTR [ebx-0x3c]
  413c3c:	das    
  413c3d:	xlat   BYTE PTR ds:[ebx]
  413c3e:	fadd   DWORD PTR [edi+0x3c]
  413c41:	rcr    BYTE PTR [esp+ebp*2-0x2c3e41d9],0x47
  413c49:	js     0x413c82
  413c4b:	add    ch,BYTE PTR [edi]
  413c4d:	clc    
  413c4e:	mov    al,0x8b
  413c50:	xor    al,0x81
  413c52:	sahf   
  413c53:	dec    ebp
  413c54:	out    0x56,al
  413c56:	retf   0x17a2
  413c59:	sub    ch,ch
  413c5b:	push   eax
  413c5c:	inc    esp
  413c5d:	cli    
  413c5e:	xchg   edi,eax
  413c5f:	xor    dl,BYTE PTR [edx]
  413c61:	push   cs
  413c62:	add    bl,dh
  413c64:	dec    esp
  413c65:	push   es
  413c66:	out    0x50,al
  413c68:	imul   esi,esp,0x3a335849
  413c6e:	cmp    DWORD PTR [edx],ecx
  413c70:	inc    eax
  413c71:	sbb    esi,DWORD PTR [esi]
  413c73:	mov    ah,0x4c
  413c75:	mov    ah,0x98
  413c77:	lahf   
  413c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c79:	pop    es
  413c7a:	les    edi,FWORD PTR [ebx]
  413c7c:	mov    bl,0x4a
  413c7e:	cmp    al,0xe9
  413c80:	mov    esp,0x6ff0c585
  413c85:	sbb    esp,ecx
  413c87:	mov    BYTE PTR [edx+esi*2-0xf729878],ch
  413c8e:	sub    al,0xc4
  413c90:	sti    
  413c91:	mov    ds:0xc370b715,eax
  413c96:	test   DWORD PTR [ecx],eax
  413c98:	mov    ebp,0xe6be682e
  413c9d:	inc    esi
  413c9e:	jno    0x413cc9
  413ca0:	aaa    
  413ca1:	adc    eax,0x2eeb62e5
  413ca6:	inc    ecx
  413ca7:	mov    cl,BYTE PTR [ecx+0x72407c6c]
  413cad:	mov    ah,0x24
  413caf:	imul   ecx,DWORD PTR [edi-0x71],0x45edbad
  413cb6:	neg    BYTE PTR [ebx]
  413cb8:	mov    dh,0x7
  413cba:	xor    ch,BYTE PTR [edi]
  413cbc:	sub    BYTE PTR [edi],bh
  413cbe:	sub    al,0x5a
  413cc0:	add    BYTE PTR ds:0xdab848d8,ch
  413cc6:	push   edx
  413cc7:	push   edx
  413cc8:	push   ds
  413cc9:	add    al,0x9b
  413ccc:	ret    
  413ccd:	push   ecx
  413cce:	lods   eax,DWORD PTR ds:[esi]
  413ccf:	jbe    0x413cff
  413cd1:	pop    ss
  413cd2:	or     BYTE PTR [ecx],dh
  413cd4:	cmp    al,0xa8
  413cd6:	inc    esi
  413cd7:	cmp    eax,0xb66ccbb7
  413cdc:	aaa    
  413cdd:	push   ds
  413cde:	(bad)  [edx-0x2db37a25]
  413ce4:	and    dh,BYTE PTR [ecx+0x44]
  413ce7:	dec    ebp
  413ce8:	retf   0x473a
  413ceb:	xor    eax,0xe5a9506d
  413cf0:	rol    BYTE PTR [esi],0x37
  413cf3:	push   ebx
  413cf4:	dec    ebx
  413cf5:	cdq    
  413cf6:	mov    ch,0xe6
  413cf8:	test   al,0xa7
  413cfa:	lds    edi,FWORD PTR [ecx+0x754f7c31]
  413d00:	loopne 0x413c91
  413d02:	scas   al,BYTE PTR es:[edi]
  413d03:	int3   
  413d04:	mov    eax,ebp
  413d06:	mov    esi,0xb5c2fb24
  413d0b:	mov    ecx,?
  413d0d:	jbe    0x413cc3
  413d0f:	xchg   esi,eax
  413d10:	pop    ebp
  413d11:	dec    ecx
  413d12:	addr16 cwde 
  413d14:	sbb    BYTE PTR [ebp-0x14316c0e],cl
  413d1a:	inc    ebp
  413d1b:	and    DWORD PTR [esi+0x38],esi
  413d1e:	in     eax,dx
  413d1f:	out    0x9f,eax
  413d21:	cmp    DWORD PTR [ebx-0x24],esp
  413d24:	in     eax,0x7f
  413d26:	dec    edi
  413d27:	jmp    0x413cb8
  413d29:	popa   
  413d2a:	test   BYTE PTR [edi],ch
  413d2c:	xchg   esi,eax
  413d2d:	call   0xf0a0:0xb811e55a
  413d34:	popa   
  413d35:	cmp    BYTE PTR [edi+ecx*8-0x7ae86b6b],ah
  413d3c:	enter  0x9450,0x34
  413d40:	or     DWORD PTR [ebx],0x70
  413d43:	jg     0x413d53
  413d45:	aam    0x70
  413d47:	aaa    
  413d48:	and    bl,BYTE PTR [eax]
  413d4a:	xor    BYTE PTR [ebp-0x1e1ec818],dl
  413d50:	ins    DWORD PTR es:[edi],dx
  413d51:	jmp    0xe238:0x3437bd4f
  413d58:	cdq    
  413d59:	jmp    0xe91e:0xb08b4f30
  413d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d61:	mov    cl,0x2a
  413d63:	iret   
  413d64:	cs rcr dl,0x19
  413d68:	mov    ebp,0xbf254a06
  413d6d:	sub    edx,eax
  413d6f:	sbb    DWORD PTR [edi+ebp*2],edi
  413d72:	repz jo 0x413d90
  413d75:	scas   al,BYTE PTR es:[edi]
  413d76:	fiadd  DWORD PTR [esi]
  413d78:	stos   BYTE PTR es:[edi],al
  413d79:	or     ecx,esi
  413d7b:	(bad)  
  413d7c:	ins    DWORD PTR es:[edi],dx
  413d7d:	cs pusha 
  413d7f:	(bad)  
  413d80:	into   
  413d81:	dec    esi
  413d82:	gs push ss
  413d84:	cmp    DWORD PTR [ecx+0x3fc64b75],eax
  413d8a:	mov    dh,0xe0
  413d8c:	pop    esp
  413d8d:	scas   eax,DWORD PTR es:[edi]
  413d8e:	lods   eax,DWORD PTR ds:[esi]
  413d8f:	mov    dh,0x7c
  413d91:	fwait
  413d92:	ret    
  413d93:	sub    eax,0x85db91f2
  413d98:	jae    0x413db3
  413d9a:	xor    BYTE PTR [ebx+edi*2-0x1c53852c],cl
  413da1:	mov    al,ds:0x4bf3f288
  413da6:	leave  
  413da7:	(bad)
  413daa:	xor    DWORD PTR [esi+esi*8-0x69],edx
  413dae:	dec    ecx
  413daf:	in     al,dx
  413db0:	pop    edx
  413db1:	mov    BYTE PTR [ecx-0x67229842],bh
  413db7:	out    0xfc,eax
  413db9:	cmp    DWORD PTR [edi],edx
  413dbb:	inc    eax
  413dbc:	retf   0x5bc9
  413dbf:	ficomp DWORD PTR [edx-0x2f]
  413dc2:	push   edx
  413dc3:	rcr    eax,cl
  413dc5:	and    DWORD PTR [ecx-0x68b1df50],ecx
  413dcb:	jbe    0x413e1e
  413dcd:	repz mov al,0xb0
  413dd0:	cwde   
  413dd1:	adc    al,0xd9
  413dd3:	loopne 0x413d80
  413dd5:	mov    edx,0x7e674d36
  413dda:	ds jbe 0x413dd2
  413ddd:	sub    al,0x4a
  413ddf:	adc    DWORD PTR [edx+0x11400ff0],esp
  413de5:	push   0x97569e02
  413dea:	lds    eax,FWORD PTR [esp+ecx*2+0x6]
  413dee:	jl     0x413e3d
  413df0:	aad    0x28
  413df2:	sub    DWORD PTR [esi],esp
  413df4:	std    
  413df5:	xor    BYTE PTR [edi+0xa],0x9b
  413df9:	mov    eax,0xb96b40bd
  413dfe:	call   0xc15a:0xa48b939a
  413e05:	jg     0x413de8
  413e07:	packsswb mm0,QWORD PTR [eax]
  413e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0b:	mov    al,ds:0xd90ccc9c
  413e10:	dec    ebx
  413e11:	bound  ebx,QWORD PTR [eax-0x193b35b3]
  413e17:	and    ebx,ecx
  413e19:	xchg   BYTE PTR [edx+0x11],bh
  413e1c:	hlt    
  413e1d:	push   ss
  413e1e:	push   edi
  413e1f:	push   cs
  413e20:	jnp    0x413ea0
  413e22:	fucomi st,st(6)
  413e24:	push   ds
  413e25:	xchg   ebx,eax
  413e26:	int    0xb2
  413e28:	mov    dl,0xa7
  413e2a:	push   eax
  413e2b:	imul   DWORD PTR [ecx+0x43b8c126]
  413e31:	mov    esi,DWORD PTR gs:[edx]
  413e34:	mov    al,ds:0x8a4b071d
  413e39:	mov    dl,0x30
  413e3b:	cmp    edx,esi
  413e3d:	mov    ebx,0x24b0f2bc
  413e42:	imul   ecx,esp,0x7
  413e45:	pop    edi
  413e46:	push   eax
  413e47:	(bad)  
  413e48:	mov    bl,BYTE PTR [eax+0x57]
  413e4b:	jb     0x413e2f
  413e4d:	xchg   edx,eax
  413e4e:	in     al,dx
  413e4f:	push   es
  413e50:	iret   
  413e51:	xor    bh,ah
  413e53:	xchg   ebx,eax
  413e54:	retf   0x683
  413e57:	push   ss
  413e58:	pop    edx
  413e59:	ret    
  413e5a:	(bad)  
  413e5b:	fstp   DWORD PTR [eiz*4+0x34546bb3]
  413e62:	in     al,dx
  413e63:	inc    edx
  413e64:	ins    BYTE PTR es:[edi],dx
  413e65:	push   cs
  413e66:	sahf   
  413e67:	and    dh,bl
  413e69:	sub    DWORD PTR [edi+eax*1],ebp
  413e6c:	into   
  413e6d:	push   ss
  413e6e:	loope  0x413e0b
  413e70:	sbb    DWORD PTR [ebx],eax
  413e72:	jnp    0x413ef3
  413e74:	inc    edx
  413e75:	dec    edx
  413e76:	or     DWORD PTR [ecx+0x6a],0x17
  413e7a:	or     ecx,DWORD PTR [ecx]
  413e7c:	xchg   BYTE PTR [esi+0xe44e1f4],bh
  413e82:	inc    esp
  413e83:	retf   
  413e84:	jl     0x413e46
  413e86:	adc    eax,0x24143a2f
  413e8b:	sbb    bl,BYTE PTR [esi-0x67fcece6]
  413e91:	aam    0xf3
  413e93:	shr    DWORD PTR [ebx+0x30],cl
  413e96:	pop    ecx
  413e97:	inc    ebp
  413e98:	xchg   esp,eax
  413e99:	push   ds
  413e9a:	mov    eax,0x57f543b3
  413e9f:	imul   ebp,DWORD PTR [esi-0x1b3bcaa1],0x6
  413ea6:	lods   eax,DWORD PTR ds:[esi]
  413ea7:	mov    dl,0x4e
  413ea9:	ds cmovl esp,ecx
  413ead:	mov    esp,fs
  413eaf:	sbb    al,bh
  413eb1:	jmp    0x413e5b
  413eb3:	mov    bl,0xe3
  413eb5:	xchg   DWORD PTR [ecx],eax
  413eb7:	lods   eax,DWORD PTR ds:[esi]
  413eb8:	adc    BYTE PTR [edi*2+0x12a84946],ch
  413ebf:	lock mov BYTE PTR [di],cl
  413ec3:	lock sub eax,0xc21bcfc1
  413ec9:	sub    eax,eax
  413ecb:	into   
  413ecc:	mov    cl,0xb
  413ece:	js     0x413f4b
  413ed0:	pop    esp
  413ed1:	sbb    al,0x27
  413ed3:	shl    DWORD PTR [esp+edi*1-0x4dda3a8d],1
  413eda:	xchg   ebp,eax
  413edb:	hlt    
  413edc:	paddw  mm4,QWORD PTR [esi]
  413edf:	mov    DWORD PTR es:[eax+0x30f7b699],ecx
  413ee6:	cmp    cl,BYTE PTR [ebp+0x2714b5a5]
  413eec:	cli    
  413eed:	pop    ecx
  413eee:	lahf   
  413eef:	outs   dx,BYTE PTR ds:[esi]
  413ef0:	lahf   
  413ef1:	dec    ecx
  413ef3:	stos   DWORD PTR es:[edi],eax
  413ef4:	std    
  413ef5:	pop    edx
  413ef6:	jno    0x413f2e
  413ef8:	dec    eax
  413ef9:	fmul   st(4),st
  413efb:	xlat   BYTE PTR ds:[ebx]
  413efc:	push   edx
  413efd:	jmp    0x413edd
  413eff:	lock cmp bl,BYTE PTR [ebp+ebx*2+0x7981fe5d]
  413f07:	mov    ebp,0x4ed9a371
  413f0c:	(bad)  
  413f0e:	push   cs
  413f0f:	out    0xd8,al
  413f11:	cdq    
  413f12:	pop    edx
  413f13:	pop    esp
  413f14:	sahf   
  413f15:	or     esi,DWORD PTR [ebp+0x5d]
  413f18:	imul   ebx,DWORD PTR [edx+0x48],0xffffff90
  413f1c:	add    eax,0x57c76ca6
  413f21:	inc    edi
  413f22:	sbb    DWORD PTR [eax+0x3cf7aea4],edi
  413f28:	sbb    BYTE PTR [ebx+0x3bc8f386],dl
  413f2e:	push   ebx
  413f2f:	and    ebx,edx
  413f31:	xchg   esp,esp
  413f33:	enter  0xa898,0xe2
  413f37:	pop    esi
  413f38:	fnsave [eax]
  413f3a:	in     eax,dx
  413f3b:	clc    
  413f3c:	sbb    ebp,ebx
  413f3e:	jmp    0x9d73:0xe8b9f417
  413f45:	and    BYTE PTR [ecx-0x211e7db0],ch
  413f4b:	(bad)  
  413f4c:	jl     0x413f2d
  413f4e:	jecxz  0x413f4f
  413f50:	or     eax,0x26b8550a
  413f55:	aas    
  413f56:	xor    ecx,DWORD PTR [esi-0x70]
  413f59:	pop    ebx
  413f5a:	idiv   DWORD PTR [ebx-0x656fdc80]
  413f60:	lds    ecx,FWORD PTR [ebp-0x5b4099aa]
  413f66:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f68:	div    ebp
  413f6a:	cli    
  413f6b:	sbb    DWORD PTR [ebp+0x6fbcffd1],edx
  413f71:	lods   ax,WORD PTR ds:[esi]
  413f73:	mov    esp,0x6d74a7f1
  413f78:	(bad)  
  413f79:	pop    ecx
  413f7a:	pusha  
  413f7b:	xlat   BYTE PTR ds:[ebx]
  413f7c:	popa   
  413f7d:	sub    eax,0xd1d0b8af
  413f82:	push   esi
  413f83:	(bad)  
  413f84:	iret   
  413f85:	dec    edi
  413f86:	aas    
  413f87:	dec    eax
  413f88:	call   0x8a9ab2e
  413f8d:	xchg   ecx,eax
  413f8e:	xchg   ecx,eax
  413f8f:	loope  0x413f56
  413f91:	sub    BYTE PTR [ebx+edi*8+0x229cad25],bh
  413f98:	iret   
  413f99:	xor    cl,cl
  413f9b:	lds    esi,FWORD PTR [ecx]
  413f9d:	jnp    0x413ff8
  413f9f:	ret    
  413fa0:	cdq    
  413fa1:	fimul  DWORD PTR [ebp+0x6c375103]
  413fa7:	jl     0x413f41
  413fa9:	adc    al,0xf
  413fab:	mov    bh,0xe9
  413fad:	sub    al,0x8d
  413faf:	inc    ecx
  413fb0:	pop    ecx
  413fb1:	call   0x44f8c977
  413fb6:	call   0x5d58:0x12d6be6f
  413fbd:	ror    BYTE PTR [eax],1
  413fbf:	(bad)  
  413fc0:	(bad)  
  413fc2:	shl    BYTE PTR [ecx+ebp*8],cl
  413fc5:	mov    ds:0x51a37251,al
  413fca:	inc    ebx
  413fcb:	sahf   
  413fcc:	add    al,0xbd
  413fce:	push   0x3cdefede
  413fd3:	ror    BYTE PTR [ebx-0x7f],1
  413fd6:	neg    ebp
  413fd8:	mov    ecx,0x90aeea0d
  413fdd:	outs   dx,BYTE PTR ds:[esi]
  413fde:	aas    
  413fdf:	push   esp
  413fe0:	sti    
  413fe1:	cmp    BYTE PTR [edi],ch
  413fe3:	jb     0x41403c
  413fe5:	call   0x2959:0xbe659710
  413fec:	add    ah,BYTE PTR [esi+0x3e]
  413fef:	jmp    0xa287b659
  413ff4:	ss add al,0x5e
  413ff7:	sub    bl,al
  413ff9:	add    cl,bh
  413ffb:	xchg   ebp,eax
  413ffc:	adc    eax,0x135916fa
  414001:	popf   
  414002:	aad    0x90
  414004:	add    DWORD PTR [eax+0x7a781aac],edx
  41400a:	in     al,0xc2
  41400c:	inc    esp
  41400d:	dec    esp
  41400e:	in     al,0xe5
  414010:	sar    ch,1
  414012:	mov    fs,WORD PTR [eax]
  414014:	repz sbb DWORD PTR [ebp-0x62],esp
  414018:	or     ecx,DWORD PTR [eax+esi*1-0x1b46e072]
  41401f:	mov    ds:0xbc5dcc92,al
  414024:	nop
  414025:	push   edi
  414026:	cmp    bl,0xd8
  414029:	add    bh,BYTE PTR [eax-0x37373d04]
  41402f:	cmp    eax,0x53ab28f8
  414034:	pop    ebx
  414035:	mov    ebp,0x30b79ba4
  41403a:	ins    BYTE PTR es:[edi],dx
  41403b:	nop
  41403c:	loopne 0x414079
  41403e:	shl    BYTE PTR [ecx],1
  414040:	sar    DWORD PTR [ebp+0x4],cl
  414043:	adc    DWORD PTR [ebx],esi
  414045:	push   ecx
  414046:	std    
  414047:	and    al,0x5d
  414049:	(bad)  [esi]
  41404b:	fs in  eax,0xeb
  41404e:	fwait
  41404f:	xchg   edx,eax
  414050:	add    dh,BYTE PTR [eax+0x29]
  414053:	push   edi
  414054:	popf   
  414055:	xlat   BYTE PTR ds:[ebx]
  414056:	jmp    0x41400e
  414058:	mov    ds:0xcb78ec0c,al
  41405d:	lds    esp,FWORD PTR [eax+eiz*8+0xb810adc]
  414064:	out    dx,eax
  414065:	mov    ebx,ebx
  414067:	pusha  
  414068:	pop    ss
  414069:	nop
  41406a:	call   0x703a0c7f
  41406f:	pop    edx
  414070:	out    0x4c,al
  414072:	mov    bh,0x2d
  414074:	jns    0x41408a
  414076:	xor    esp,ecx
  414078:	imul   DWORD PTR [ebp+0x3531596f]
  41407e:	sar    BYTE PTR [edx],1
  414080:	ins    DWORD PTR es:[edi],dx
  414081:	pop    esi
  414082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414083:	iret   
  414084:	mov    ch,0x11
  414086:	popf   
  414087:	dec    esi
  414088:	pop    ss
  414089:	ja     0x41400e
  41408b:	ret    0x261d
  41408e:	cld    
  41408f:	rcr    DWORD PTR [bx+di],1
  414092:	add    DWORD PTR [eax-0x3a],0x36a74285
  414099:	jne    0x414055
  41409b:	mov    dh,0x9f
  41409d:	mov    dh,0x67
  41409f:	mov    bl,0x3e
  4140a1:	out    0xdc,al
  4140a3:	and    DWORD PTR [edx+0x3f],ebp
  4140a6:	jg     0x4140d3
  4140a8:	stos   DWORD PTR es:[edi],eax
  4140a9:	call   0x9ed0:0x40d9c331
  4140b0:	outs   dx,DWORD PTR ds:[esi]
  4140b1:	in     eax,0xa8
  4140b3:	gs test al,0x4d
  4140b6:	enter  0x30a8,0xcc
  4140ba:	aam    0xa2
  4140bc:	lds    ecx,FWORD PTR [edx-0x62acade4]
  4140c2:	push   ebx
  4140c3:	sbb    BYTE PTR [edx],dh
  4140c5:	mov    edx,0x8c35c14
  4140ca:	add    al,ah
  4140cc:	or     cl,BYTE PTR [edx+0x3498555b]
  4140d2:	cmp    BYTE PTR [ebx-0x2a],ah
  4140d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140d6:	js     0x41405f
  4140d8:	adc    ebp,DWORD PTR [edi+0x5daf2f26]
  4140de:	ja     0x41415b
  4140e0:	shr    BYTE PTR [eax],1
  4140e2:	push   es
  4140e3:	shl    DWORD PTR [eax],cl
  4140e5:	mov    ebp,0x8ed69d19
  4140ea:	stos   DWORD PTR es:[edi],eax
  4140eb:	mov    ebx,esp
  4140ed:	sub    eax,0xbb356544
  4140f2:	scas   al,BYTE PTR es:[edi]
  4140f3:	and    ebx,edx
  4140f5:	(bad)  
  4140f6:	push   cs
  4140f7:	aaa    
  4140f8:	jle    0x4140c7
  4140fa:	and    ch,BYTE PTR [eax-0x6d]
  4140fd:	mov    edx,0x86e34e58
  414102:	jb     0x41414b
  414104:	push   eax
  414105:	inc    edi
  414106:	push   es
  414107:	jb     0x41417b
  414109:	sub    DWORD PTR [edx+eiz*8],0x7a
  41410d:	inc    dl
  41410f:	dec    eax
  414110:	bound  esi,QWORD PTR [ebx+0xb]
  414113:	cwde   
  414114:	test   BYTE PTR [esi-0x19],ah
  414117:	add    ebp,DWORD PTR [edi]
  414119:	retf   
  41411a:	stos   DWORD PTR es:[edi],eax
  41411b:	inc    eax
  41411c:	popf   
  41411d:	out    0x46,al
  41411f:	scas   eax,DWORD PTR es:[edi]
  414120:	retf   0x890d
  414123:	cmp    DWORD PTR [ecx],ecx
  414125:	dec    esp
  414126:	test   BYTE PTR [esi],cl
  414128:	pop    ecx
  414129:	mov    ch,0xea
  41412b:	je     0x41419c
  41412d:	xor    BYTE PTR [esi],ah
  41412f:	mov    ebx,ebx
  414131:	jge    0x41419d
  414133:	(bad)  
  414134:	shl    ebp,0xd8
  414137:	aam    0x7d
  414139:	or     eax,0x4cd1d92d
  41413e:	add    al,BYTE PTR [edx-0x29]
  414141:	jecxz  0x4140e3
  414143:	pop    esi
  414144:	sbb    eax,0x863c83ab
  414149:	xchg   BYTE PTR [esp+ecx*4-0xd],ch
  41414d:	sbb    ch,BYTE PTR [esi+0x6d]
  414150:	push   esi
  414151:	push   0xffffff92
  414153:	jbe    0x41410b
  414155:	mov    ah,0x7d
  414157:	lds    ebp,FWORD PTR [edi]
  414159:	xchg   esp,eax
  41415a:	push   es
  41415b:	cmp    eax,DWORD PTR [edx-0x7c]
  41415e:	or     BYTE PTR [edi+eiz*1],cl
  414161:	pop    es
  414162:	and    al,0x97
  414164:	push   edx
  414165:	(bad)  
  414166:	xlat   BYTE PTR ds:[ebx]
  414167:	mov    ds:0xcbcd849d,al
  41416c:	jne    0x4140f4
  41416e:	popa   
  41416f:	mov    ah,0xd2
  414171:	cli    
  414172:	fist   WORD PTR [eax+ebx*8]
  414175:	ins    BYTE PTR es:[edi],dx
  414176:	inc    esp
  414177:	mov    cl,0xd0
  414179:	sub    eax,0xfbf2afe5
  41417e:	and    DWORD PTR [esi-0x67c21066],esi
  414184:	xchg   esp,eax
  414185:	sub    eax,0x838f22d7
  41418a:	jmp    0x414194
  41418c:	ins    DWORD PTR es:[edi],dx
  41418d:	jne    0x4141db
  41418f:	adc    dh,dh
  414191:	sub    BYTE PTR [edx+0x3124ec7d],0xbe
  414198:	shl    edi,1
  41419a:	dec    ecx
  41419b:	(bad)  
  41419c:	out    0x5b,al
  41419e:	es mov ch,ah
  4141a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141a2:	mov    ch,bl
  4141a4:	mov    ebx,0x9f264086
  4141a9:	in     eax,0xb0
  4141ab:	inc    ecx
  4141ac:	inc    BYTE PTR [ecx-0x79]
  4141af:	xchg   esi,eax
  4141b0:	gs xchg edx,eax
  4141b2:	aaa    
  4141b3:	or     dh,BYTE PTR [edi-0x279db19e]
  4141b9:	mov    cl,0x78
  4141bb:	cmp    al,0xcf
  4141bd:	mov    cl,0xa3
  4141bf:	pop    edx
  4141c0:	mov    edi,0x7497bc63
  4141c5:	cmp    ebp,ebx
  4141c7:	xchg   esp,eax
  4141c8:	int3   
  4141c9:	js     0x41423f
  4141cb:	fs addr16 cmp bh,ch
  4141cf:	icebp  
  4141d0:	add    DWORD PTR [eax-0x5d],eax
  4141d3:	add    ch,BYTE PTR [ebp+0x5b]
  4141d6:	inc    ebp
  4141d7:	mov    ecx,0xab82772a
  4141dc:	jmp    0x414163
  4141de:	sahf   
  4141df:	cmp    ebx,esi
  4141e1:	pop    esi
  4141e2:	inc    esi
  4141e3:	imul   eax,DWORD PTR [edi-0x2f112885],0x44ab7300
  4141ed:	push   cs
  4141ee:	out    dx,al
  4141ef:	shl    bl,0x2e
  4141f2:	call   0x23537cce
  4141f7:	jmp    FWORD PTR [ebx+0x15]
  4141fa:	cmc    
  4141fb:	inc    ebx
  4141fc:	aas    
  4141fd:	and    al,0x5b
  4141ff:	or     DWORD PTR [eax+0x4edca410],eax
  414205:	(bad)  
  414207:	cmp    al,0x6f
  414209:	cmp    BYTE PTR [ebp-0x26],0xc0
  41420d:	sub    eax,0x66ba9dd6
  414212:	mov    ebp,0xbd24ea8e
  414217:	mul    BYTE PTR [esi]
  414219:	popa   
  41421a:	lods   eax,DWORD PTR ds:[esi]
  41421b:	adc    dh,BYTE PTR [ecx-0x23e2bc0f]
  414221:	xlat   BYTE PTR ds:[ebx]
  414222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414223:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414225:	out    0x7b,al
  414227:	iret   
  414228:	in     al,0x47
  41422a:	push   ecx
  41422b:	scas   al,BYTE PTR es:[edi]
  41422c:	cmp    DWORD PTR [ebx],eax
  41422e:	dec    edx
  41422f:	mov    bh,0xba
  414231:	aam    0x2f
  414233:	es (bad) 
  414235:	(bad)  
  414236:	jecxz  0x414285
  414238:	stos   DWORD PTR es:[edi],eax
  414239:	pop    ecx
  41423a:	ror    ah,cl
  41423c:	inc    ebx
  41423d:	mov    ah,0x1a
  41423f:	sbb    ebx,DWORD PTR ds:0x626f7329
  414245:	xchg   edx,eax
  414246:	add    al,0x73
  414248:	and    al,0xb9
  41424a:	mov    ecx,0xfa2ceb87
  41424f:	xchg   esp,eax
  414250:	mov    eax,ds:0x75e46b87
  414255:	in     eax,dx
  414256:	fwait
  414257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414258:	sub    eax,0x8ddf4268
  41425d:	mov    es,WORD PTR [esi+ebx*8+0x3758fc36]
  414264:	rcr    bh,1
  414266:	push   0xbce30e7a
  41426b:	repnz mov ecx,0xe6c531bc
  414271:	add    BYTE PTR [esp+esi*8],cl
  414274:	in     al,0xe2
  414276:	adc    eax,0x906151ec
  41427b:	mov    WORD PTR [esi-0x6a33a706],ss
  414281:	dec    esp
  414282:	inc    edi
  414283:	mov    dl,ah
  414285:	outs   dx,BYTE PTR ds:[esi]
  414286:	adc    eax,DWORD PTR [ecx]
  414288:	cmc    
  414289:	ins    BYTE PTR es:[edi],dx
  41428a:	lea    esp,[ecx+0x8]
  41428d:	stos   BYTE PTR es:[edi],al
  41428e:	lods   al,BYTE PTR ds:[esi]
  41428f:	sbb    DWORD PTR [ebx+0x5fa84a71],ebx
  414295:	call   DWORD PTR [ebp-0x2bb4494c]
  41429b:	sti    
  41429c:	mov    dl,0xd9
  41429e:	hlt    
  41429f:	pushf  
  4142a0:	pop    es
  4142a1:	jb     0x4142df
  4142a3:	fnstcw WORD PTR [edx-0x24]
  4142a6:	mov    dh,0x6a
  4142a8:	sti    
  4142a9:	push   edi
  4142aa:	pop    edi
  4142ab:	push   eax
  4142ac:	mov    dh,0xda
  4142ae:	xchg   edx,eax
  4142af:	jns    0x4142df
  4142b1:	push   cs
  4142b2:	(bad)  
  4142b3:	cmp    al,0x9c
  4142b5:	aam    0x7c
  4142b7:	ins    DWORD PTR es:[edi],dx
  4142b8:	pop    ss
  4142b9:	popf   
  4142ba:	cli    
  4142bb:	mov    ecx,0x262461b6
  4142c0:	adc    al,0x8d
  4142c2:	sbb    DWORD PTR [edx],0x396e2c98
  4142c8:	rcl    DWORD PTR [ebp-0x443efc41],cl
  4142ce:	push   esi
  4142cf:	mov    es,WORD PTR [eax-0x74]
  4142d2:	dec    esi
  4142d3:	pop    edi
  4142d4:	mov    edi,0x1d2c38a6
  4142d9:	jae    0x4142d9
  4142db:	ret    0x288b
  4142de:	dec    ecx
  4142df:	mov    eax,0xb5eb09ed
  4142e4:	clc    
  4142e5:	shr    esp,0x97
  4142e8:	rcl    BYTE PTR [edx-0x44991e5f],cl
  4142ee:	adc    cl,bl
  4142f0:	(bad)  
  4142f1:	popa   
  4142f2:	clc    
  4142f3:	jmp    0xce461b89
  4142f8:	out    dx,al
  4142f9:	jmp    0x4142cc
  4142fb:	inc    esi
  4142fc:	sbb    al,0xea
  4142fe:	loop   0x4142e6
  414300:	test   DWORD PTR [ecx-0x1c],ecx
  414303:	loopne 0x414375
  414305:	test   al,0x25
  414307:	loope  0x41436f
  414309:	cmp    eax,ebp
  41430b:	imul   ecx,DWORD PTR [eax],0x5d
  41430e:	sub    esp,DWORD PTR [ecx+eiz*4+0x76]
  414312:	add    DWORD PTR [eax],ecx
  414314:	jp     0x4142e5
  414316:	push   ecx
  414317:	out    0xb9,al
  414319:	mov    al,ds:0x15620f05
  41431e:	std    
  41431f:	(bad)
  414322:	mov    ebp,0x2989cdf3
  414327:	ins    DWORD PTR es:[edi],dx
  414328:	jae    0x414356
  41432a:	dec    bh
  41432c:	mov    bh,0x8a
  41432e:	or     al,0xb2
  414330:	outs   dx,BYTE PTR ds:[esi]
  414331:	cmp    eax,0xb404b15
  414336:	iret   
  414337:	inc    ebx
  414338:	sub    eax,0xce752c24
  41433d:	sbb    ch,BYTE PTR [edi]
  41433f:	mov    ch,0x40
  414341:	ss jmp 0x836616d3
  414347:	rcr    BYTE PTR [esi],0xd3
  41434a:	shl    ah,cl
  41434c:	ret    
  41434d:	push   es
  41434e:	scas   eax,DWORD PTR es:[edi]
  41434f:	in     eax,0x92
  414351:	inc    edi
  414352:	repz sti 
  414354:	xchg   ebp,eax
  414355:	in     al,dx
  414356:	and    DWORD PTR [ecx+0x6e],0x47e5a879
  41435d:	rcr    DWORD PTR [ecx-0x2e],1
  414360:	push   0xffffffde
  414362:	das    
  414363:	lahf   
  414364:	(bad)  
  414365:	stos   DWORD PTR es:[edi],eax
  414366:	cmp    eax,0x31540bf8
  41436b:	jo     0x414366
  41436d:	mov    ecx,0xc7012ab1
  414372:	cs sub al,0xf1
  414375:	dec    edi
  414376:	leave  
  414377:	out    dx,al
  414378:	dec    esp
  414379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41437a:	fstp   QWORD PTR [ebp+0x68]
  41437d:	sbb    esp,DWORD PTR [edx-0x49]
  414380:	xor    bh,BYTE PTR [ebx]
  414382:	lods   eax,DWORD PTR ss:[esi]
  414384:	mov    ds:0xdc5a4b32,al
  414389:	and    al,BYTE PTR [eax+0x48]
  41438c:	add    BYTE PTR [esi+0x29],0xb1
  414390:	ficom  WORD PTR [edi-0x6e349626]
  414396:	push   eax
  414397:	test   DWORD PTR [ecx+0xd506bef],0x18292301
  4143a1:	push   edx
  4143a2:	add    esp,ecx
  4143a4:	fwait
  4143a5:	hlt    
  4143a6:	in     eax,dx
  4143a7:	aaa    
  4143a8:	test   BYTE PTR [ebp+ebp*4-0xb],0xab
  4143ad:	and    ebx,ebx
  4143af:	inc    ebp
  4143b0:	call   0xfcf4:0x21527a21
  4143b7:	retf   0x5f2c
  4143ba:	outs   dx,DWORD PTR ds:[esi]
  4143bb:	int    0xc
  4143bd:	add    dh,cl
  4143bf:	jg     0x414437
  4143c1:	rol    DWORD PTR [edx+0x72c3ba45],cl
  4143c7:	push   ebp
  4143c8:	and    eax,0x9a5b783c
  4143cd:	loopne 0x4143ef
  4143cf:	retf   
  4143d0:	and    eax,0x184b6e61
  4143d5:	ror    BYTE PTR [ebp-0x616d2fad],0x9e
  4143dc:	in     al,dx
  4143dd:	stos   BYTE PTR es:[edi],al
  4143de:	jns    0x414403
  4143e0:	mov    esi,0x1efbebdc
  4143e5:	(bad)  
  4143e6:	cwde   
  4143e7:	pop    edx
  4143e8:	loop   0x414463
  4143ea:	scas   al,BYTE PTR es:[edi]
  4143eb:	iret   
  4143ec:	xchg   esi,eax
  4143ed:	adc    al,0x3e
  4143ef:	mov    cl,0x64
  4143f1:	push   esi
  4143f2:	xor    edx,DWORD PTR [ebx+0x6e]
  4143f5:	in     al,dx
  4143f6:	dec    DWORD PTR [edi-0x4b2c178a]
  4143fc:	mov    ebx,0x4100e776
  414401:	and    edi,0xffffff86
  414404:	mov    dh,0x40
  414406:	push   ss
  414407:	in     al,0x2
  414409:	mov    eax,ds:0x7b759acf
  41440e:	(bad)  
  41440f:	cmp    ebp,DWORD PTR [eax+0x68]
  414412:	sbb    eax,0xeec1a885
  414417:	setge  BYTE PTR [ebx]
  41441a:	inc    ecx
  41441b:	clc    
  41441c:	aaa    
  41441d:	ss or  eax,0x8dd1c35a
  414423:	dec    ecx
  414424:	mov    cl,0x8c
  414426:	int    0xa2
  414428:	dec    ecx
  414429:	xor    BYTE PTR [eax-0x3],bl
  41442c:	in     al,dx
  41442d:	fcomp  QWORD PTR [eax]
  41442f:	cdq    
  414430:	movnti DWORD PTR [ebp+0x4fe574fd],edi
  414437:	stc    
  414438:	es pop ebx
  41443a:	jge    0x4143ca
  41443c:	daa    
  41443d:	shl    DWORD PTR [esi],1
  41443f:	inc    edx
  414440:	ret    
  414441:	jmp    0x2ad3:0x313ee5ab
  414448:	div    BYTE PTR [eax+ecx*4]
  41444b:	sub    edi,edx
  41444d:	push   edx
  41444e:	inc    esi
  41444f:	cdq    
  414450:	cmp    BYTE PTR [edi-0x1c],bl
  414453:	jbe    0x4144a4
  414455:	sbb    al,0x7
  414457:	lods   eax,DWORD PTR ds:[esi]
  414458:	fdiv   DWORD PTR [edx-0x22376a74]
  41445e:	or     eax,DWORD PTR [eax]
  414460:	jge    0x4144c4
  414462:	popf   
  414463:	(bad)  
  414464:	into   
  414465:	dec    ebp
  414466:	(bad)  
  414467:	div    DWORD PTR [eax]
  414469:	rcr    BYTE PTR [edx+0x45cc9e84],0xeb
  414470:	sbb    al,0x3
  414472:	push   ds
  414473:	dec    eax
  414474:	jmp    0x4b499cb0
  414479:	addr16 push ds
  41447b:	jns    0x41443b
  41447d:	div    ecx
  41447f:	mov    eax,0xa1eb6b1
  414484:	int3   
  414485:	xlat   BYTE PTR ds:[ebx]
  414486:	or     eax,0xf28c2b54
  41448b:	adc    eax,0x9da33429
  414490:	mov    edi,0x2a543a46
  414495:	leave  
  414496:	pop    esp
  414497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414498:	lods   al,BYTE PTR ds:[esi]
  414499:	imul   eax,edx,0x95da0c22
  41449f:	sub    al,0x1c
  4144a1:	(bad)  cs:[eax+edx*1-0x2a]
  4144a6:	rcl    bh,0xfe
  4144a9:	std    
  4144aa:	lock scas al,BYTE PTR es:[edi]
  4144ac:	sbb    esp,DWORD PTR ds:0x634c96e5
  4144b2:	jg     0x4144b3
  4144b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144b5:	enter  0x25af,0xed
  4144b9:	cmp    dl,bl
  4144bb:	cs xchg esi,eax
  4144bd:	lods   eax,DWORD PTR ds:[esi]
  4144be:	jmp    FWORD PTR [eax+0x59]
  4144c1:	leave  
  4144c2:	fist   WORD PTR [esi-0x281bac6c]
  4144c8:	std    
  4144c9:	xor    al,0x16
  4144cb:	adc    edx,ecx
  4144cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ce:	icebp  
  4144cf:	or     ebx,DWORD PTR [esi]
  4144d1:	call   0x4aa1:0xca4df142
  4144d8:	js     0x41451d
  4144da:	and    bh,BYTE PTR [esi]
  4144dc:	or     al,0x8b
  4144de:	and    dh,BYTE PTR [esi]
  4144e0:	cmp    eax,0x6edcc34d
  4144e5:	cmp    ah,bh
  4144e7:	call   0x4a54:0x1d367ff2
  4144ee:	mov    bh,0xf9
  4144f0:	imul   esp,DWORD PTR ds:0x6b1b2251,0x77
  4144f7:	test   bl,bh
  4144f9:	gs es pop ebp
  4144fc:	sar    DWORD PTR ds:0x4e8a06b4,cl
  414502:	lahf   
  414503:	ins    BYTE PTR es:[edi],dx
  414504:	addr16 aad 0x2d
  414507:	(bad)  
  414508:	cli    
  414509:	lds    ecx,FWORD PTR [ecx+ecx*8]
  41450c:	add    eax,0x3e462fd9
  414511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414512:	retf   
  414513:	lea    ecx,[eax+ecx*1]
  414516:	shr    BYTE PTR [ebx],0xfa
  414519:	jmp    0x414507
  41451b:	outs   dx,BYTE PTR ds:[esi]
  41451c:	test   BYTE PTR [bp+0x70],0x97
  414521:	push   cs
  414522:	sub    al,BYTE PTR [ecx]
  414524:	pop    ecx
  414525:	fcomi  st,st(5)
  414527:	ret    0x452e
  41452a:	inc    ecx
  41452b:	popf   
  41452c:	pusha  
  41452d:	mov    ebp,DWORD PTR [ecx+0x35]
  414530:	inc    esp
  414531:	in     al,dx
  414532:	jo     0x41453f
  414534:	cmc    
  414535:	xchg   ebp,eax
  414536:	stos   DWORD PTR es:[edi],eax
  414537:	pusha  
  414538:	shr    DWORD PTR cs:[ebx+0x44f6df81],cl
  41453f:	cs pop edx
  414541:	mov    al,ds:0xf14300d5
  414546:	fidiv  WORD PTR [esi+0x21245e98]
  41454c:	push   esi
  41454d:	add    ch,BYTE PTR [edx]
  41454f:	or     eax,0x7875489b
  414554:	jmp    0xc482dc24
  414559:	pop    ecx
  41455a:	shl    eax,1
  41455c:	outs   dx,BYTE PTR ds:[esi]
  41455d:	test   BYTE PTR [esi+esi*4-0x450b5a84],al
  414564:	imul   ebx,DWORD PTR [edi+eax*2+0x4],0x6b
  414569:	out    0x57,eax
  41456b:	iret   
  41456c:	stc    
  41456d:	ret    0xd170
  414570:	test   DWORD PTR [eax+0x42],esi
  414573:	jns    0x414593
  414575:	push   cs
  414576:	cdq    
  414577:	push   ecx
  414578:	fwait
  414579:	push   ds
  41457a:	stos   BYTE PTR es:[edi],al
  41457b:	xor    bl,BYTE PTR [ebp-0x2d]
  41457e:	test   DWORD PTR [ebx-0x77],ecx
  414581:	push   ss
  414582:	into   
  414583:	lock jg 0x414565
  414586:	hlt    
  414587:	and    BYTE PTR [esi+0x3a],ah
  41458a:	sub    BYTE PTR [eax-0x77],0xe
  41458e:	pop    esp
  41458f:	out    dx,al
  414590:	xlat   BYTE PTR ds:[ebx]
  414591:	aam    0xa2
  414593:	cmp    al,BYTE PTR [ecx]
  414595:	inc    edx
  414596:	or     BYTE PTR [ebx+0x22d9d522],bh
  41459c:	mov    fs,WORD PTR [ebx+0x178b6a32]
  4145a2:	into   
  4145a3:	mov    ds:0x5eaaa2ef,eax
  4145a8:	test   eax,0x79b30ae2
  4145ad:	or     edi,esp
  4145af:	aad    0xb0
  4145b1:	mov    esp,0x2ad65762
  4145b6:	mov    eax,ds:0xa0e7546d
  4145bb:	mov    ah,0x29
  4145bd:	xchg   ecx,eax
  4145be:	bound  edi,QWORD PTR [ebp-0x501501c3]
  4145c4:	adc    edx,DWORD PTR [ecx+0x51cfa3fd]
  4145ca:	fld    QWORD PTR [edi]
  4145cc:	or     bh,BYTE PTR [ebx]
  4145ce:	dec    ebp
  4145cf:	jns    0x414606
  4145d1:	es es (bad) 
  4145d4:	or     BYTE PTR [eax+0x50],dh
  4145d7:	popa   
  4145d8:	inc    ebp
  4145d9:	(bad)  
  4145db:	fdivr  st,st(6)
  4145dd:	rol    DWORD PTR [edi],0x26
  4145e0:	jg     0x4145c0
  4145e2:	and    dh,cl
  4145e4:	fsubr  DWORD PTR [edx+0x51ae25f9]
  4145ea:	ins    BYTE PTR es:[edi],dx
  4145eb:	shl    BYTE PTR [ebx+edi*4-0x6f182f17],0xd5
  4145f3:	jmp    0xf85e:0xe23a8dd9
  4145fa:	mov    ebp,0x1372e3a4
  4145ff:	ins    BYTE PTR es:[edi],dx
  414600:	dec    esi
  414601:	jge    0x414678
  414603:	call   0x5274b4cd
  414608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414609:	fistp  QWORD PTR [ecx+0x188cbb15]
  41460f:	cdq    
  414610:	neg    DWORD PTR [edi+0x34ff234a]
  414616:	clc    
  414617:	(bad)  
  414619:	mov    al,0x19
  41461b:	clc    
  41461c:	sbb    dl,dl
  41461e:	sbb    BYTE PTR [ebx],al
  414620:	(bad)  
  414621:	jecxz  0x4145bd
  414623:	aas    
  414624:	push   eax
  414625:	jb     0x414670
  414627:	pushf  
  414628:	pop    edi
  414629:	xchg   esp,eax
  41462a:	test   BYTE PTR [edi],0xab
  41462d:	cdq    
  41462e:	retf   
  41462f:	mov    dl,0x2c
  414632:	icebp  
  414633:	(bad)
  414637:	add    al,0x62
  414639:	imul   esp,DWORD PTR [ebp+0x41],0x684aef4e
  414640:	ds or  al,0xc8
  414643:	stos   BYTE PTR es:[edi],al
  414644:	bound  esi,QWORD PTR [ebx]
  414646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414647:	icebp  
  414648:	lods   al,BYTE PTR ds:[esi]
  414649:	jbe    0x414628
  41464b:	pop    ecx
  41464c:	mov    ebx,esp
  41464e:	inc    esp
  41464f:	mov    ah,0x88
  414651:	xadd   DWORD PTR [eax-0x7338f47],ecx
  414658:	xchg   DWORD PTR [esi-0x38],ecx
  41465b:	and    eax,0x979bd724
  414660:	shl    BYTE PTR [edx],1
  414662:	push   es
  414663:	mov    esi,0xb74afc73
  414668:	(bad)  
  41466a:	pop    edi
  41466b:	pop    ss
  41466c:	jae    0x4146af
  41466e:	push   ss
  41466f:	or     BYTE PTR ds:0x23e5fd71,0xdc
  414676:	frstor [ecx+0x7d22844e]
  41467c:	std    
  41467d:	in     eax,0xad
  41467f:	xchg   edx,eax
  414680:	or     BYTE PTR [ecx-0x67dec9fc],bl
  414686:	cmp    BYTE PTR [ecx-0x16331718],al
  41468c:	jae    0x41465a
  41468e:	les    ebx,FWORD PTR [edx]
  414690:	imul   edx,ecx,0xffffffc0
  414693:	mov    esi,0x1275daa2
  414698:	or     eax,0x508d2361
  41469d:	xor    ch,BYTE PTR [ebp+eiz*4+0x4bef9f88]
  4146a4:	mov    al,0xd0
  4146a6:	fcompp 
  4146a8:	adc    al,0x6f
  4146aa:	fisttp QWORD PTR [ecx]
  4146ac:	xor    al,0x5c
  4146ae:	sbb    ebx,DWORD PTR [edi-0x61]
  4146b1:	iret   
  4146b2:	mov    ebp,0x797ac905
  4146b7:	sbb    eax,0xf465e0fc
  4146bc:	jecxz  0x414680
  4146be:	mov    ebp,0xc766602a
  4146c3:	jo     0x41465b
  4146c5:	ss push ebx
  4146c7:	push   0x22
  4146c9:	int    0x20
  4146cb:	sbb    ebx,DWORD PTR [edi]
  4146cd:	test   eax,0x5d3cefbe
  4146d2:	ficom  DWORD PTR [ebp-0x1]
  4146d5:	aas    
  4146d6:	aaa    
  4146d7:	popf   
  4146d8:	cmp    BYTE PTR [esi-0x53c64fe2],0x33
  4146df:	adc    DWORD PTR ds:0x6ab58aa,0xdf782260
  4146e9:	inc    eax
  4146ea:	shl    BYTE PTR [ebp+0x14bafa6e],0x31
  4146f1:	dec    esp
  4146f2:	xor    ebx,edi
  4146f4:	add    al,ch
  4146f6:	nop
  4146f7:	lea    ecx,[edi-0x27fba2]
  4146fd:	arpl   WORD PTR cs:[eax-0x6209bda4],ax
  414704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414705:	repz push eax
  414707:	inc    esi
  414708:	sub    DWORD PTR [eax+eiz*2+0x9],0x20cd080b
  414710:	fs pop eax
  414712:	int    0x8d
  414714:	sbb    eax,0x7bd8da2b
  414719:	pop    ds
  41471a:	or     ch,dh
  41471c:	mov    edi,0xd5e07ace
  414721:	dec    ebp
  414722:	pop    DWORD PTR [ebx+0xbd41a77]
  414728:	dec    esi
  414729:	dec    esp
  41472a:	push   cs
  41472b:	aad    0x70
  41472d:	add    cl,BYTE PTR [esi*2-0x7295e276]
  414734:	aas    
  414735:	sub    eax,edx
  414737:	and    dl,BYTE PTR [edi]
  414739:	cmp    ebp,DWORD PTR [esi]
  41473b:	inc    esp
  41473c:	pop    edi
  41473d:	add    dl,dh
  41473f:	ror    ecx,cl
  414741:	mov    BYTE PTR [eax],cl
  414743:	fsubr  QWORD PTR [esi]
  414745:	jmp    0x666c:0xd7286a91
  41474c:	push   ebx
  41474d:	xchg   esp,eax
  41474e:	test   DWORD PTR [ecx-0x3d],ebx
  414751:	std    
  414752:	pusha  
  414753:	cs (bad) 
  414756:	lods   al,BYTE PTR ds:[esi]
  414757:	js     0x414788
  414759:	xlat   BYTE PTR ds:[ebx]
  41475a:	dec    ecx
  41475b:	add    al,0x1c
  41475d:	push   ds
  41475e:	push   edx
  41475f:	bnd gs es jns 0x414796
  414764:	mov    ?,WORD PTR [ebx-0x5ca468de]
  41476a:	sbb    eax,ebx
  41476c:	out    dx,eax
  41476d:	out    0x6b,al
  41476f:	xor    bh,ah
  414771:	or     bl,bh
  414773:	in     eax,0x82
  414775:	mov    ch,0xf
  414777:	adc    eax,0x7955292a
  41477c:	stos   BYTE PTR es:[edi],al
  41477d:	js     0x41476f
  41477f:	pop    ss
  414780:	out    dx,eax
  414781:	stc    
  414782:	jmp    0xde2607f0
  414787:	jmp    0x4147b4
  414789:	xlat   BYTE PTR ds:[ebx]
  41478a:	mov    esi,0xe59b844c
  41478f:	dec    edx
  414790:	and    al,0x21
  414792:	fdivr  QWORD PTR [ebx-0x20]
  414795:	sub    BYTE PTR [ebp-0x5c4b08da],dl
  41479b:	push   ss
  41479c:	jl     0x4147bc
  41479e:	xor    BYTE PTR [ebp+0x3b],dl
  4147a1:	clc    
  4147a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a3:	cld    
  4147a4:	call   0x17d5:0x1ea1d17b
  4147ab:	cdq    
  4147ac:	push   0xffffffed
  4147ae:	jo     0x414730
  4147b0:	cmp    ebx,ecx
  4147b2:	mov    esp,0x3ec5f9aa
  4147b7:	mov    ebx,0xb911215e
  4147bc:	inc    ecx
  4147bd:	push   ss
  4147be:	fstp   DWORD PTR [eax+ebp*2]
  4147c1:	and    al,0x6e
  4147c3:	out    dx,eax
  4147c4:	or     BYTE PTR [ebp-0x13],al
  4147c7:	sbb    ebp,DWORD PTR [eax]
  4147c9:	sahf   
  4147ca:	aad    0x85
  4147cc:	jnp    0x4147d0
  4147ce:	test   ecx,0x8a5d1a89
  4147d4:	or     bh,0x70
  4147d7:	push   ss
  4147d8:	mov    bl,0xe3
  4147da:	or     eax,0xba79f134
  4147df:	xor    ch,ah
  4147e1:	sbb    edx,DWORD PTR [ecx]
  4147e3:	(bad)  
  4147e5:	cmp    ebx,DWORD PTR [eax-0x60d9f5a]
  4147eb:	mov    eax,0x5de58a55
  4147f0:	push   edi
  4147f1:	xor    esi,DWORD PTR [edi+0x4c]
  4147f4:	lock cs cwde 
  4147f7:	dec    edi
  4147f8:	adc    eax,0x3161bdca
  4147fd:	loopne 0x41485b
  4147ff:	cld    
  414800:	(bad)  
  414801:	pop    ebx
  414802:	lea    eax,[edi+0x7b]
  414805:	mov    ebp,0x92b1504d
  41480a:	cmp    al,0x67
  41480c:	shl    DWORD PTR [esi],0x5a
  41480f:	pushf  
  414810:	mov    ebp,0xfc48c5cf
  414815:	(bad)  
  414816:	int    0x23
  414818:	sbb    DWORD PTR [eax+0x52],eax
  41481b:	add    esi,ecx
  41481d:	repnz imul ebp,ecx,0xf86de84c
  414824:	enter  0xc233,0x6d
  414828:	mov    edx,esp
  41482a:	(bad)  
  41482d:	into   
  41482e:	adc    al,0xf7
  414830:	add    BYTE PTR [ebp+0x7e],ch
  414833:	and    al,0xbd
  414835:	xchg   ecx,eax
  414836:	loop   0x4147cd
  414838:	or     al,dh
  41483a:	jl     0x41481a
  41483c:	xchg   esp,eax
  41483d:	xor    cl,BYTE PTR [edi]
  41483f:	and    bh,BYTE PTR [eax]
  414841:	xchg   ecx,eax
  414842:	jno    0x414825
  414844:	push   ss
  414845:	sahf   
  414846:	mov    esi,0xc75e10ac
  41484b:	mov    gs,WORD PTR [eax+0x35ebfbec]
  414851:	pop    ecx
  414852:	cs mov dh,0x1e
  414855:	dec    edx
  414856:	int    0xa2
  414858:	push   edi
  414859:	mov    edi,0x24a26e9b
  41485e:	sbb    DWORD PTR [eax+edi*2-0x73bbe3ac],edi
  414865:	jge    0x4148c9
  414867:	push   edx
  414868:	or     eax,0x7a6ac2b9
  41486d:	jecxz  0x41486c
  41486f:	pushf  
  414870:	or     dh,BYTE PTR [edx]
  414872:	iret   
  414873:	jne    0x414830
  414875:	push   esp
  414876:	sti    
  414877:	imul   edx,DWORD PTR [esi+0x50],0x63647614
  41487e:	jbe    0x41484b
  414880:	sbb    BYTE PTR [eax+edx*8+0x34fdda0a],ah
  414887:	jbe    0x4148d1
  414889:	jg     0x4148dc
  41488b:	dec    edx
  41488c:	add    al,0x58
  41488e:	mov    bh,0x86
  414890:	pop    esi
  414891:	sub    ah,BYTE PTR [edx+0x51]
  414894:	daa    
  414895:	aam    0x3
  414897:	sbb    eax,0xa7d13ce6
  41489c:	inc    esi
  41489d:	aam    0x7b
  41489f:	(bad)  
  4148a0:	jle    0x414835
  4148a2:	dec    ebp
  4148a3:	xchg   ecx,eax
  4148a4:	gs call 0x8b8f:0x8504f6b2
  4148ac:	in     al,dx
  4148ad:	cmp    bh,BYTE PTR [ecx-0x78]
  4148b0:	cwde   
  4148b1:	adc    al,0xf
  4148b3:	mov    ecx,0x605cd458
  4148b8:	in     al,dx
  4148b9:	xor    BYTE PTR [edx+0x70],ah
  4148bc:	ja     0x4148ad
  4148be:	sub    al,BYTE PTR [eax+0x51]
  4148c1:	push   esp
  4148c2:	mov    edx,0xa7f9d7b7
  4148c7:	arpl   WORD PTR [ebp-0x45],sp
  4148ca:	(bad)  
  4148cb:	bnd ret 
  4148cd:	push   0xad172b67
  4148d2:	das    
  4148d3:	out    0x3c,al
  4148d5:	mov    eax,ds:0xa1338857
  4148da:	sbb    esp,DWORD PTR [esi+0x48207c6c]
  4148e0:	dec    edx
  4148e1:	sbb    eax,0x21bccec3
  4148e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148e7:	daa    
  4148e8:	div    DWORD PTR [edi]
  4148ea:	fst    QWORD PTR [edx]
  4148ec:	fiadd  DWORD PTR [edx+0x32]
  4148ef:	cs add esp,esp
  4148f2:	scas   eax,DWORD PTR es:[edi]
  4148f3:	jg     0x4148a2
  4148f5:	nop
  4148f6:	inc    eax
  4148f7:	fst    QWORD PTR [ebp-0x70]
  4148fa:	leave  
  4148fb:	xchg   ebx,eax
  4148fc:	sahf   
  4148fd:	lea    ebp,[ebx]
  4148ff:	dec    ebx
  414900:	jb     0x41496a
  414902:	xor    ecx,eax
  414904:	add    ecx,esi
  414906:	mov    ecx,0x242ebcd
  41490b:	je     0x419125
  414911:	jmp    0x416c96
  414916:	cwde   
  414917:	add    BYTE PTR [ecx],al
  414919:	or     eax,0x7b940381
  41491e:	test   al,0xe5
  414920:	pusha  
  414921:	mov    ah,0x7b
  414923:	popa   
  414924:	je     0x4148ce
  414926:	xchg   esi,eax
  414927:	pusha  
  414928:	jns    0x4149a4
  41492a:	adc    bl,BYTE PTR [edi+0x7a]
  41492d:	jp     0x41490b
  41492f:	add    dl,BYTE PTR [edx-0x6f02b7b6]
  414935:	nop
  414936:	push   ecx
  414937:	add    eax,0xb72de9b9
  41493c:	push   esp
  41493d:	xchg   esi,eax
  41493e:	inc    esp
  41493f:	clc    
  414940:	xor    al,0x4d
  414942:	cmp    DWORD PTR [ecx+0x3],edx
  414945:	mov    al,ds:0x9c542f44
  41494a:	icebp  
  41494b:	sti    
  41494c:	ret    0x282f
  41494f:	stos   BYTE PTR es:[edi],al
  414950:	(bad)  
  414951:	xchg   ebx,eax
  414952:	xlat   BYTE PTR ds:[ebx]
  414953:	pop    es
  414954:	cwde   
  414955:	dec    edi
  414956:	cmp    al,0x27
  414958:	call   0xd3b20793
  41495d:	mov    eax,DWORD PTR [edx-0x66443c47]
  414963:	iret   
  414964:	aam    0xf6
  414966:	pop    ss
  414967:	dec    ebx
  414968:	or     bh,ch
  41496a:	xchg   edx,eax
  41496b:	lock arpl WORD PTR [edi],bx
  41496e:	add    al,0x23
  414971:	pop    ebp
  414972:	mov    dl,0xfb
  414974:	(bad)  
  414975:	mov    edi,0x56616e7f
  41497a:	fisubr DWORD PTR ds:0x23811ddc
  414980:	sbb    edi,DWORD PTR [esi+0x28f8fdd1]
  414986:	mov    ds:0x677812bd,al
  41498b:	fcomp  DWORD PTR [ebx-0x53a3087c]
  414991:	pop    eax
  414992:	fs add esp,esi
  414995:	std    
  414996:	clc    
  414997:	aam    0xb7
  414999:	jecxz  0x41491f
  41499b:	cmp    dl,cl
  41499d:	cwde   
  41499e:	pushf  
  41499f:	mov    ch,0x63
  4149a1:	pop    ds
  4149a2:	push   esi
  4149a3:	mov    eax,ds:0x76c185b
  4149a8:	xchg   dh,bl
  4149aa:	imul   sp,WORD PTR [ebp+eax*2-0x5896ce19],0x3f9d
  4149b4:	(bad)  
  4149b5:	imul   esp,ebx,0x5d
  4149b8:	(bad)  
  4149b9:	mov    ebp,0x9df2c317
  4149be:	pop    edi
  4149bf:	fwait
  4149c0:	jmp    0x4149b5
  4149c2:	ja     0x414a26
  4149c4:	and    esp,ecx
  4149c6:	push   0xe0290a3c
  4149cb:	call   0x2e24:0x2bfc8c20
  4149d2:	push   es
  4149d3:	push   esi
  4149d4:	gs push ds
  4149d6:	scas   eax,DWORD PTR es:[edi]
  4149d7:	inc    edi
  4149d8:	cmp    eax,0xd78bc849
  4149dd:	test   al,0x41
  4149df:	jg     0x41496b
  4149e1:	inc    esp
  4149e2:	idiv   bh
  4149e4:	cmp    ebx,DWORD PTR [edi+eiz*4+0xe]
  4149e8:	cdq    
  4149e9:	cli    
  4149ea:	push   ss
  4149eb:	xchg   edx,eax
  4149ec:	and    BYTE PTR [ebp*4+0x64aa0404],0xa1
  4149f4:	add    BYTE PTR [ebx-0x27],0x2a
  4149f8:	push   ss
  4149f9:	push   ss
  4149fa:	adc    DWORD PTR [ebp+0x46e83dbc],esi
  414a00:	mov    ch,0x1d
  414a02:	mov    cl,ch
  414a04:	jecxz  0x4149db
  414a06:	dec    eax
  414a07:	push   ds
  414a08:	push   ds
  414a09:	xor    DWORD PTR [ebp-0x19e5ff61],ebx
  414a0f:	jle    0x4149f6
  414a11:	pushf  
  414a12:	jae    0x414995
  414a14:	(bad)  
  414a15:	je     0x414a3d
  414a17:	and    BYTE PTR [eax+edi*8-0x6297f8c1],0xf7
  414a1f:	call   0x4b87c477
  414a24:	mov    WORD PTR [eax-0x22e88dd8],es
  414a2a:	les    esp,FWORD PTR [esi-0x67]
  414a2d:	adc    BYTE PTR [edi+0x50],al
  414a30:	pop    ss
  414a31:	xchg   DWORD PTR [eax],edx
  414a33:	pop    es
  414a34:	dec    edi
  414a35:	es mov ecx,0x34b30b01
  414a3b:	loopne 0x414aae
  414a3d:	test   BYTE PTR [ebx],bl
  414a3f:	mov    ecx,DWORD PTR [edi-0x6af88e8c]
  414a45:	lods   eax,DWORD PTR ds:[esi]
  414a46:	popa   
  414a47:	jmp    0xcd369373
  414a4c:	adc    eax,0x82ee222c
  414a51:	fsubrp st(0),st
  414a53:	mov    esp,DWORD PTR [eax]
  414a55:	pop    ds
  414a56:	data16 mov WORD PTR [ebx-0x3b79b09b],ds
  414a5d:	xor    BYTE PTR [ecx+eax*4+0x7ab0c780],0x91
  414a65:	nop
  414a66:	fdiv   DWORD PTR [edx+0x14]
  414a69:	bound  edi,QWORD PTR [esi+edx*4+0x630deacd]
  414a70:	jmp    0xa0d6:0x23c5ef17
  414a77:	movaps xmm0,XMMWORD PTR es:[edx]
  414a7b:	lea    ebp,[esi-0x44]
  414a7e:	les    esi,FWORD PTR ds:0x543117f5
  414a84:	cmp    ah,ch
  414a86:	and    eax,0xcc87e793
  414a8b:	and    ch,BYTE PTR [edi+ebx*8+0x40]
  414a8f:	xor    BYTE PTR [ebx],0x61
  414a92:	(bad)  
  414a93:	mov    DWORD PTR [edx+0x70],esp
  414a96:	inc    esp
  414a97:	mov    al,0xce
  414a99:	popf   
  414a9a:	ret    
  414a9b:	cmp    dh,BYTE PTR [edx-0x2c883a46]
  414aa1:	js     0x414ab6
  414aa3:	(bad)  
  414aa4:	xor    DWORD PTR [ebp+0x7c],eax
  414aa7:	outs   dx,BYTE PTR ds:[esi]
  414aa8:	mov    bh,0x7c
  414aaa:	or     DWORD PTR [ebx+0x20],0x17
  414aae:	lods   al,BYTE PTR ds:[esi]
  414aaf:	mov    dh,0x62
  414ab1:	dec    esi
  414ab2:	inc    esi
  414ab3:	retf   0xe537
  414ab6:	aaa    
  414ab7:	mov    BYTE PTR [esi],ah
  414ab9:	out    0x6a,al
  414abb:	addr16 (bad) 
  414abe:	bound  ecx,QWORD PTR [esp+ecx*2-0x1d59575b]
  414ac5:	jl     0x414aae
  414ac7:	aad    0x56
  414ac9:	sub    BYTE PTR [edi-0x6cfd29c9],ch
  414acf:	jle    0x414b47
  414ad1:	jmp    0x5d04:0xa48991fe
  414ad8:	pop    ecx
  414ad9:	nop
  414ada:	or     eax,0x90ae2d04
  414adf:	add    al,0x77
  414ae1:	lea    ebp,[edx+0x51]
  414ae4:	loope  0x414b07
  414ae6:	(bad)  [edi+ecx*2+0x45273027]
  414aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aee:	and    BYTE PTR [ecx+0x40b5e5f0],bh
  414af4:	or     DWORD PTR [edx],edx
  414af6:	retf   
  414af7:	push   cs
  414af8:	lahf   
  414af9:	xchg   esi,eax
  414afa:	mov    ebp,0x467ca122
  414aff:	into   
  414b00:	(bad)  
  414b01:	loopne 0x414afb
  414b03:	loope  0x414aeb
  414b05:	sub    ebp,DWORD PTR [eax-0x11a6c57d]
  414b0b:	cld    
  414b0c:	ret    0x20ff
  414b0f:	daa    
  414b10:	xchg   ebp,eax
  414b11:	stc    
  414b12:	or     al,0x1a
  414b14:	dec    esp
  414b15:	cmp    eax,0xe2f0cf1b
  414b1a:	push   0xa84e0363
  414b1f:	sub    al,0x78
  414b21:	in     al,0xff
  414b23:	icebp  
  414b24:	jb     0x414b75
  414b26:	push   0xbe666a
  414b2b:	jo     0x414b7c
  414b2d:	test   al,0xb0
  414b2f:	test   DWORD PTR [ebx+edx*8-0x11],ecx
  414b33:	add    DWORD PTR [ebx-0x29],ecx
  414b36:	mov    ah,0xe1
  414b38:	adc    eax,0xade79122
  414b3d:	push   esi
  414b3e:	cld    
  414b3f:	addr16 das 
  414b41:	(bad)  
  414b42:	jl     0x414b85
  414b44:	adc    DWORD PTR [esi-0x628a9f92],edi
  414b4a:	(bad)  
  414b4b:	pop    ebx
  414b4c:	or     al,BYTE PTR [esi]
  414b4e:	out    dx,eax
  414b4f:	xor    edi,esp
  414b51:	retf   
  414b52:	inc    ebp
  414b53:	mov    eax,0x712121d8
  414b58:	jp     0x414b60
  414b5a:	sbb    edx,DWORD PTR [esi+0x2e450e1e]
  414b60:	push   eax
  414b61:	and    ah,BYTE PTR [edx]
  414b63:	push   edi
  414b64:	xor    ecx,edi
  414b66:	sahf   
  414b67:	jle    0x414bbd
  414b69:	sbb    DWORD PTR [ecx-0x46efb766],ebx
  414b6f:	in     al,0x5b
  414b71:	cmp    eax,0x61252a99
  414b76:	add    ebx,DWORD PTR [bx+si]
  414b79:	sbb    DWORD PTR [eax+0xa],esi
  414b7c:	hlt    
  414b7d:	outs   dx,DWORD PTR ds:[esi]
  414b7e:	push   es
  414b7f:	jl     0x414ba8
  414b81:	and    eax,0xf62bc7dd
  414b86:	scas   eax,DWORD PTR es:[edi]
  414b87:	mov    ebp,0x6e4dbc5a
  414b8c:	jle    0x414b97
  414b8e:	div    ch
  414b90:	test   al,0x2f
  414b92:	push   cs
  414b93:	stos   DWORD PTR es:[edi],eax
  414b94:	push   0xfffffff1
  414b96:	daa    
  414b97:	dec    ebx
  414b98:	push   ss
  414b99:	add    edi,eax
  414b9b:	imul   DWORD PTR [esi+0x70]
  414b9e:	pusha  
  414b9f:	js     0x414c17
  414ba1:	je     0x414ba4
  414ba3:	std    
  414ba4:	in     al,0xba
  414ba6:	sbb    DWORD PTR [esi+0x23dd6849],eax
  414bac:	mov    DWORD PTR [esi+0x20],ebp
  414baf:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  414bb1:	jge    0x414b86
  414bb3:	daa    
  414bb4:	je     0x414c21
  414bb6:	jb     0x414c2a
  414bb8:	adc    BYTE PTR [eax+0x15],dh
  414bbb:	fidivr DWORD PTR [eax-0x4c]
  414bbe:	mov    esp,eax
  414bc0:	mov    dh,0x7e
  414bc2:	lods   al,BYTE PTR ds:[esi]
  414bc3:	dec    esp
  414bc4:	hlt    
  414bc5:	ds mov bh,0x1a
  414bc8:	mov    WORD PTR ds:0x5cb2be0c,cs
  414bce:	mov    BYTE PTR [ecx+0x34],cl
  414bd1:	mov    al,ds:0x3edfec2c
  414bd6:	loopne 0x414bc0
  414bd8:	pop    esp
  414bd9:	pusha  
  414bda:	jmp    0x414b83
  414bdc:	cs jo  0x414c07
  414bdf:	sub    edi,edi
  414be1:	pop    eax
  414be2:	shl    bl,cl
  414be4:	out    dx,eax
  414be5:	sub    esp,esi
  414be7:	enter  0xef5d,0xe7
  414beb:	jmp    0xa84:0xb7a1f886
  414bf2:	mov    dh,BYTE PTR [edi]
  414bf4:	(bad)  
  414bf5:	or     dh,BYTE PTR [edi+0x1561c9ea]
  414bfb:	pop    ebx
  414bfc:	call   0x12ce57c5
  414c01:	sbb    bl,BYTE PTR [ebx+0x1e5976e7]
  414c07:	js     0x414c57
  414c09:	imul   DWORD PTR [eax]
  414c0b:	push   edi
  414c0c:	sub    al,0x8b
  414c0e:	push   edi
  414c0f:	xchg   esi,eax
  414c10:	cld    
  414c11:	into   
  414c12:	dec    ecx
  414c13:	ja     0x414c06
  414c15:	gs pop eax
  414c17:	les    ebx,FWORD PTR [edx+0x78125ee3]
  414c1d:	jp     0x414c41
  414c1f:	xor    BYTE PTR [ebx+0x792b67a5],ch
  414c25:	enter  0x9c5,0x51
  414c29:	sub    eax,0x32a37d80
  414c2e:	jmp    0x96ec:0x226eecf4
  414c35:	shl    BYTE PTR [esp+edx*4+0x1e],0xdc
  414c3a:	into   
  414c3b:	inc    esp
  414c3c:	cli    
  414c3d:	cli    
  414c3e:	push   edx
  414c3f:	retf   
  414c40:	push   cs
  414c41:	enter  0xedd7,0x28
  414c45:	sbb    DWORD PTR [edi],edi
  414c47:	jmp    0xa3ed:0x68b3cb98
  414c4e:	xor    ecx,DWORD PTR [ebp+0x3c]
  414c51:	push   esi
  414c52:	pushf  
  414c53:	(bad)  
  414c54:	adc    eax,0x4d5cd068
  414c59:	les    esp,FWORD PTR [edi-0x539a0300]
  414c5f:	popa   
  414c60:	adc    BYTE PTR [eax-0xe],cl
  414c63:	jge    0x37ed9bff
  414c69:	pop    esp
  414c6a:	loop   0x414ca0
  414c6c:	pop    esi
  414c6d:	iret   
  414c6e:	mov    ds:0x9f1a65d2,eax
  414c73:	pop    ebp
  414c74:	push   ecx
  414c75:	or     DWORD PTR [eax+0xf],0x76
  414c79:	(bad)  
  414c7a:	lahf   
  414c7b:	inc    edx
  414c7c:	pop    ebx
  414c7e:	and    al,0x81
  414c80:	(bad)  
  414c81:	push   esi
  414c82:	jmp    0x414cfb
  414c84:	clc    
  414c85:	cld    
  414c86:	push   0xcb0e0b55
  414c8b:	shl    BYTE PTR [ebx+edi*4+0x210aeae],0x48
  414c93:	jno    0x414cf3
  414c95:	push   esi
  414c96:	xor    DWORD PTR [ecx+eax*8-0x1d5567b6],0xffffffc9
  414c9e:	pop    esp
  414c9f:	pop    esi
  414ca0:	add    eax,0xbcec2eb6
  414ca5:	sub    esi,DWORD PTR [eax+0x3c]
  414ca8:	cli    
  414ca9:	xchg   esp,eax
  414caa:	std    
  414cab:	popa   
  414cac:	cmp    dl,BYTE PTR [edx-0x34a2cd0e]
  414cb2:	jns    0x414c81
  414cb4:	xor    bh,BYTE PTR [ebx-0x3c038398]
  414cba:	xor    eax,0xaf62292b
  414cbf:	push   esi
  414cc0:	add    cl,BYTE PTR [eax-0x45]
  414cc3:	push   esp
  414cc4:	mov    WORD PTR [edi],?
  414cc6:	sub    edx,DWORD PTR [ecx-0x6d]
  414cc9:	dec    eax
  414cca:	test   DWORD PTR [esi],esi
  414ccc:	(bad)  
  414ccd:	lea    ebp,[ecx-0x55a2e3ea]
  414cd3:	(bad)  
  414cd4:	int3   
  414cd5:	div    BYTE PTR [edi+0x3e15994]
  414cdb:	enter  0xe3f8,0xe
  414cdf:	sbb    DWORD PTR [esi+eax*1+0x12],ecx
  414ce3:	inc    edi
  414ce4:	dec    eax
  414ce5:	sub    BYTE PTR [eax],dh
  414ce7:	add    DWORD PTR [ebx],edx
  414ce9:	stos   BYTE PTR es:[edi],al
  414cea:	das    
  414ceb:	cmp    ecx,DWORD PTR [ebx-0x80]
  414cee:	xchg   esi,eax
  414cef:	shr    al,1
  414cf1:	jmp    0xc6b4:0x7e0b66bc
  414cf8:	pop    eax
  414cf9:	jno    0x414ccc
  414cfb:	aam    0xf8
  414cfd:	or     BYTE PTR [edi-0x5f53e9bb],0x89
  414d04:	mov    ah,0xc
  414d06:	pop    ecx
  414d07:	ins    BYTE PTR es:[edi],dx
  414d08:	popf   
  414d09:	push   eax
  414d0a:	xor    eax,0x7238ced9
  414d0f:	jo     0x414d3b
  414d11:	js     0x414d1f
  414d13:	mov    ecx,0x990ea84b
  414d18:	cmp    al,0xd9
  414d1a:	mov    dh,0x59
  414d1c:	ins    BYTE PTR es:[edi],dx
  414d1d:	or     eax,0x44443e33
  414d22:	stc    
  414d23:	daa    
  414d24:	out    0x30,al
  414d26:	(bad)  
  414d27:	pushf  
  414d28:	dec    edi
  414d29:	sar    DWORD PTR [eax-0xf],cl
  414d2c:	and    ecx,DWORD PTR [esi+ebx*2-0x1a80e06f]
  414d33:	data16 adc al,0xdf
  414d36:	ret    0x2715
  414d39:	pusha  
  414d3a:	inc    BYTE PTR [ebx]
  414d3c:	xchg   esp,eax
  414d3d:	das    
  414d3e:	and    BYTE PTR [edx-0x43],dh
  414d41:	adc    BYTE PTR [ecx-0x344559cc],ch
  414d47:	call   0xb2e95022
  414d4c:	pop    ss
  414d4d:	mov    eax,ds:0xff51d5e1
  414d52:	test   al,0xf
  414d54:	popf   
  414d55:	mov    esp,ecx
  414d57:	add    ah,BYTE PTR [esi]
  414d59:	adc    eax,0x5e8b16aa
  414d5e:	lock aam 0x8b
  414d61:	loopne 0x414de1
  414d63:	add    bh,0x30
  414d66:	fs push eax
  414d68:	xchg   edi,eax
  414d69:	js     0x414d2a
  414d6b:	jo     0x414dac
  414d6d:	adc    ebx,eax
  414d6f:	lds    eax,FWORD PTR [esi-0x7154f406]
  414d75:	ret    0x7d48
  414d78:	cmp    al,0x29
  414d7a:	in     al,0x8e
  414d7c:	lahf   
  414d7d:	jnp    0x414d74
  414d7f:	jge    0x414de9
  414d81:	and    BYTE PTR [edi],0xf5
  414d84:	inc    ebx
  414d85:	(bad)  
  414d87:	ins    DWORD PTR es:[edi],dx
  414d88:	or     DWORD PTR [ecx-0x2167708e],eax
  414d8e:	or     DWORD PTR [ebp+0x6bfac334],eax
  414d94:	and    eax,0xc46d4547
  414d99:	and    DWORD PTR [edx+0x5fb835a2],edx
  414d9f:	cli    
  414da0:	push   ds
  414da1:	push   es
  414da2:	sbb    al,0x66
  414da4:	push   0x9edb8b65
  414da9:	and    DWORD PTR [ebx],ebx
  414dab:	push   ds
  414dac:	dec    eax
  414dad:	cld    
  414dae:	sbb    bl,dh
  414db0:	(bad)  [eax]
  414db2:	mov    dh,0x22
  414db4:	js     0x414d9a
  414db6:	sub    ch,BYTE PTR [esi]
  414db8:	cld    
  414db9:	xchg   edi,eax
  414dba:	pop    edi
  414dbb:	cli    
  414dbc:	cmp    eax,0x4040d6f8
  414dc1:	sar    eax,0x41
  414dc4:	aaa    
  414dc5:	mov    bh,0xa2
  414dc7:	scas   al,BYTE PTR es:[edi]
  414dc8:	cmp    BYTE PTR [edx+eiz*1+0x45],dh
  414dcc:	sbb    DWORD PTR ds:[edx+0x775169e9],esp
  414dd3:	mov    eax,ds:0x58213169
  414dd8:	xchg   ebx,eax
  414dd9:	mov    ah,0x5a
  414ddb:	loope  0x414e24
  414ddd:	mov    ch,0xf6
  414ddf:	mov    cl,0xb5
  414de1:	imul   ebp,DWORD PTR [edx+0x7e0d1cde],0x25
  414de8:	fwait
  414de9:	xchg   edi,eax
  414dea:	out    dx,al
  414deb:	xor    esi,DWORD PTR [ebx+0x318924]
  414df1:	dec    ebp
  414df2:	adc    al,BYTE PTR [ebp+0x4d9ac287]
  414df8:	cli    
  414df9:	xlat   BYTE PTR ds:[ebx]
  414dfa:	xor    BYTE PTR [eax],bh
  414dfc:	call   0xabeb:0x20271a60
  414e03:	pusha  
  414e04:	dec    edx
  414e05:	in     eax,0x7e
  414e07:	jp     0x414e6a
  414e09:	add    ah,BYTE PTR [ecx-0x73547b1b]
  414e0f:	jno    0x414e27
  414e11:	dec    eax
  414e12:	sar    DWORD PTR [esi-0x15],cl
  414e15:	pushf  
  414e16:	xchg   BYTE PTR [ecx+0x62b47b34],bh
  414e1c:	adc    ecx,DWORD PTR [ebp+0x3fb00ad3]
  414e22:	in     eax,dx
  414e23:	pop    ebp
  414e24:	sbb    al,0x6b
  414e26:	adc    eax,0x1cbbd56e
  414e2b:	clc    
  414e2c:	cmp    bl,BYTE PTR [ebp+eiz*4-0x80]
  414e30:	dec    edi
  414e31:	mov    dh,0xa2
  414e33:	xor    eax,0xe89b0692
  414e38:	inc    edx
  414e39:	aam    0x8c
  414e3b:	push   ebx
  414e3c:	sub    eax,0xf5546d0f
  414e41:	sbb    DWORD PTR [esi-0x4111ecd3],edi
  414e47:	pop    ds
  414e48:	addr16 inc ecx
  414e4a:	daa    
  414e4b:	push   es
  414e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4d:	(bad)  
  414e4e:	push   ebp
  414e4f:	inc    eax
  414e50:	push   edx
  414e51:	fisubr DWORD PTR [ecx-0x4b]
  414e54:	aam    0x52
  414e56:	lock mov ah,0xa7
  414e59:	or     BYTE PTR [ecx-0x3d],bh
  414e5c:	aad    0xad
  414e5e:	jb     0x414e30
  414e60:	cdq    
  414e61:	(bad)  
  414e62:	fadd   DWORD PTR [ebx-0x4]
  414e65:	repz int 0x70
  414e68:	sub    eax,0x73638052
  414e6d:	lock lock mov eax,0x29f07825
  414e74:	dec    eax
  414e75:	xor    DWORD PTR [edx],0x45
  414e78:	push   esi
  414e79:	mov    bl,0x76
  414e7b:	dec    BYTE PTR [esi+0x2957418d]
  414e81:	inc    edx
  414e82:	lods   eax,DWORD PTR ds:[esi]
  414e83:	hlt    
  414e84:	repz mov ecx,0xe94b4977
  414e8a:	cmp    al,0x18
  414e8c:	push   ebx
  414e8d:	loop   0x414eb5
  414e8f:	std    
  414e90:	iret   
  414e91:	mov    dh,0xaa
  414e93:	cmp    DWORD PTR [esi+eax*4-0x3d],edx
  414e97:	pop    esp
  414e98:	mov    ds:0x97403fd4,eax
  414e9d:	jns    0x414f19
  414e9f:	adc    BYTE PTR [ebx-0x3d9473bc],dh
  414ea5:	nop
  414ea6:	xchg   edx,eax
  414ea7:	sub    eax,0x8abbfe8e
  414eac:	hlt    
  414ead:	inc    edi
  414eae:	int    0xd6
  414eb0:	mov    edi,0x8ad066c1
  414eb5:	lods   al,BYTE PTR ds:[esi]
  414eb6:	out    0x94,al
  414eb8:	test   bl,bh
  414eba:	mov    al,0xa5
  414ebc:	rcl    esp,1
  414ebe:	gs push esp
  414ec0:	and    BYTE PTR [edi+ecx*8],0x0
  414ec4:	xor    bl,0x9a
  414ec7:	adc    eax,0x69be842d
  414ecc:	lods   al,BYTE PTR ds:[esi]
  414ecd:	xchg   edi,eax
  414ece:	and    ch,BYTE PTR [edx]
  414ed0:	xchg   esp,eax
  414ed1:	sbb    BYTE PTR [ecx],dl
  414ed3:	xor    eax,0xbdd17b3
  414ed8:	mov    ds:0x3ac67fa9,eax
  414edd:	(bad)  
  414ede:	icebp  
  414edf:	xor    DWORD PTR [ebx-0x37],edi
  414ee2:	mov    ah,BYTE PTR [edi]
  414ee4:	and    eax,ebx
  414ee6:	mov    esi,0x9f18410a
  414eeb:	stos   DWORD PTR es:[edi],eax
  414eec:	out    0x1,eax
  414eee:	stos   BYTE PTR es:[edi],al
  414eef:	mov    WORD PTR [ebp+0x47],ss
  414ef2:	and    al,0xe6
  414ef4:	call   0xfe0e1dab
  414ef9:	int3   
  414efa:	adc    cl,dl
  414efc:	sti    
  414efd:	test   BYTE PTR [edi],dl
  414eff:	call   0xf15b9ca5
  414f04:	lds    edi,FWORD PTR [ebx+esi*8-0x592c6f4f]
  414f0b:	push   cs
  414f0c:	ret    
  414f0d:	adc    ch,BYTE PTR [ebx]
  414f0f:	pop    ax
  414f11:	int3   
  414f12:	jns    0x414f30
  414f14:	repnz push eax
  414f16:	or     al,0x73
  414f18:	outs   dx,DWORD PTR ds:[esi]
  414f19:	sub    eax,0xec144106
  414f1e:	sub    esp,DWORD PTR [esp+ebx*8+0x114c6a88]
  414f25:	sbb    eax,0xd7db60cb
  414f2a:	mov    al,0xe2
  414f2c:	fsub   QWORD PTR [eax+0x3d]
  414f2f:	adc    eax,0x83ddd6c4
  414f34:	jb     0x414eeb
  414f36:	fwait
  414f37:	mov    eax,DWORD PTR [esi]
  414f39:	cmp    DWORD PTR ds:[ebx],esp
  414f3c:	add    al,0xa
  414f3e:	mov    bh,0x48
  414f40:	mov    esi,0x8a291a7a
  414f45:	ror    BYTE PTR ds:0x9164eac8,1
  414f4b:	out    0xa8,al
  414f4d:	stc    
  414f4e:	push   ss
  414f4f:	adc    dh,BYTE PTR [eax]
  414f51:	inc    ebp
  414f52:	arpl   WORD PTR [esi],cx
  414f54:	fsubr  QWORD PTR [edx-0x61]
  414f57:	xchg   ebp,eax
  414f58:	daa    
  414f59:	add    eax,0xb8d7df47
  414f5e:	adc    al,0x10
  414f60:	test   ecx,esi
  414f62:	push   es
  414f63:	in     eax,0x51
  414f65:	outs   dx,BYTE PTR ds:[esi]
  414f66:	popa   
  414f67:	sbb    ebx,esi
  414f69:	pop    es
  414f6a:	test   DWORD PTR [esi-0x49178ddf],ebp
  414f70:	aam    0x71
  414f72:	fisttp WORD PTR [ebp+0x43253dee]
  414f78:	sti    
  414f79:	pop    esi
  414f7a:	push   esi
  414f7b:	(bad)  
  414f7c:	fisubr WORD PTR [ebp-0x58]
  414f7f:	mov    ebx,0xb107a8a8
  414f84:	adc    DWORD PTR [eax+0x5b],0x6ae28ead
  414f8b:	jle    0x415001
  414f8d:	pop    es
  414f8e:	fs xor eax,0xe02f595f
  414f94:	test   eax,0x7c01f7ab
  414f99:	xlat   BYTE PTR ds:[ebx]
  414f9a:	pop    edx
  414f9b:	loope  0x414f64
  414f9d:	rcl    DWORD PTR [edx],1
  414f9f:	push   es
  414fa0:	inc    ebp
  414fa1:	out    dx,eax
  414fa2:	loope  0x414fca
  414fa4:	sub    eax,0xc6ab354
  414fa9:	int    0xb4
  414fab:	pop    edi
  414fac:	dec    ebp
  414fad:	push   ss
  414fae:	sbb    al,0x2d
  414fb0:	mov    cs,esp
  414fb2:	xchg   ebx,eax
  414fb3:	mov    DWORD PTR [eax+edi*4-0x71],0xc0d6db4c
  414fbb:	pop    ss
  414fbc:	jmp    0x414fc2
  414fbe:	retf   
  414fbf:	call   0x56f5:0xb60b31ab
  414fc6:	pop    ecx
  414fc7:	pop    ebx
  414fc8:	sbb    eax,0xed5266b3
  414fcd:	jle    0x415034
  414fcf:	fcomp  QWORD PTR [edi-0x4f3a7991]
  414fd5:	(bad)  cs:[edi]
  414fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fd9:	inc    edx
  414fda:	mov    eax,0x724a2189
  414fdf:	aas    
  414fe0:	aas    
  414fe1:	ins    BYTE PTR es:[edi],dx
  414fe2:	cwde   
  414fe3:	inc    edi
  414fe4:	push   eax
  414fe5:	mov    dh,0xd
  414fe7:	icebp  
  414fe8:	inc    ebx
  414fe9:	add    al,BYTE PTR [edx+ebx*1+0x1d]
  414fed:	pop    ecx
  414fee:	rol    DWORD PTR [ecx],0x1c
  414ff1:	popf   
  414ff2:	push   edi
  414ff3:	lods   al,BYTE PTR ds:[esi]
  414ff4:	dec    edi
  414ff5:	or     eax,0xf9c9be9a
  414ffa:	pop    ebx
  414ffb:	(bad)  
  414ffc:	xor    dl,al
  414ffe:	mov    esp,0x6681adfe
  415003:	and    eax,0xc43942f7
  415008:	iret   
  415009:	in     eax,dx
  41500a:	add    al,0x2d
  41500c:	dec    edx
  41500d:	push   0xc6da2507
  415012:	jo     0x415055
  415014:	repz fwait
  415016:	(bad)  
  415017:	in     eax,dx
  415018:	test   BYTE PTR [edx],0xb6
  41501b:	fucom  st(6)
  41501d:	repz adc esp,DWORD PTR [ecx-0x3d]
  415021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415022:	ret    0x1cde
  415025:	ret    
  415026:	ss mov ecx,edx
  415029:	cmp    dh,dh
  41502b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502c:	cld    
  41502d:	mov    esi,0xe9d9de11
  415032:	popf   
  415033:	cs jle 0x41501d
  415036:	test   al,0xd9
  415038:	add    bl,BYTE PTR [ebx-0x7a]
  41503b:	xor    BYTE PTR [ebp+0x58],cl
  41503e:	jne    0x41506b
  415040:	dec    esp
  415041:	sub    ebp,0xffffff9f
  415044:	jle    0x414fe8
  415046:	sub    DWORD PTR [edi+edi*2],ebp
  415049:	pop    esi
  41504a:	push   ebx
  41504b:	push   ebx
  41504c:	mov    esp,eax
  41504e:	in     eax,dx
  41504f:	push   cs
  415050:	push   ebp
  415051:	mov    esp,ds
  415053:	stos   BYTE PTR es:[edi],al
  415054:	(bad)
  415058:	xchg   ebp,eax
  415059:	out    dx,eax
  41505a:	fcom   QWORD PTR [eax]
  41505c:	std    
  41505d:	cmp    ebp,eax
  41505f:	mov    fs,ecx
  415061:	fst    QWORD PTR [ecx+0x3444c9b2]
  415067:	pop    ss
  415068:	pop    ds
  415069:	lods   al,BYTE PTR ds:[esi]
  41506a:	imul   eax,DWORD PTR [ecx-0x2a07fc57],0x34
  415071:	add    al,0x38
  415073:	xor    ch,cl
  415075:	bound  ebp,QWORD PTR [eax]
  415077:	enter  0x9baf,0xc
  41507b:	lods   eax,DWORD PTR ds:[esi]
  41507c:	sub    dh,al
  41507e:	and    eax,0xb1429821
  415083:	lods   al,BYTE PTR ds:[esi]
  415084:	push   ss
  415085:	mov    cl,0xf9
  415087:	pop    ebx
  415088:	sbb    bh,BYTE PTR [edi-0x6]
  41508b:	push   ebp
  41508c:	es push es
  41508e:	mov    eax,0x42ea7e1a
  415093:	fimul  WORD PTR [eax-0x17]
  415096:	je     0x41505f
  415098:	xchg   edx,eax
  415099:	retf   
  41509a:	push   ss
  41509b:	pop    ebx
  41509c:	(bad)  
  41509d:	rcr    BYTE PTR [esp+edx*1-0x38],0x2a
  4150a2:	popf   
  4150a3:	movhps QWORD PTR ds:0x5dbda73e,xmm6
  4150aa:	pop    edx
  4150ab:	jbe    0x415038
  4150ad:	or     al,ah
  4150af:	jne    0x415069
  4150b1:	push   esi
  4150b2:	or     ah,BYTE PTR [esi]
  4150b4:	test   DWORD PTR [ecx+0x1e],eax
  4150b7:	xchg   ebx,eax
  4150b8:	aaa    
  4150b9:	sub    edx,DWORD PTR [edx]
  4150bb:	(bad)
  4150be:	add    al,0xdb
  4150c0:	xchg   edi,eax
  4150c1:	adc    al,0x92
  4150c3:	cmp    esp,DWORD PTR [ebx+0x72]
  4150c6:	jno    0x415147
  4150c8:	mov    bl,0x9
  4150ca:	sar    DWORD PTR [ebx+0x51],1
  4150cd:	aas    
  4150ce:	les    edi,FWORD PTR [esi+0x17186152]
  4150d4:	in     al,dx
  4150d5:	fnstenv [esi-0xb]
  4150d8:	push   0x57
  4150da:	pushf  
  4150db:	imul   ebp,DWORD PTR [edi-0x625b4291],0xffffffef
  4150e2:	stc    
  4150e3:	data16 fs cli 
  4150e6:	xor    DWORD PTR [edi-0x7ae32a03],edx
  4150ec:	std    
  4150ed:	mov    edi,0x229c2c15
  4150f2:	and    eax,0x9e736484
  4150f7:	cmp    eax,0x99c61e30
  4150fc:	loopne 0x4150c9
  4150fe:	or     DWORD PTR [eax-0x45],0xa1341c58
  415105:	cmp    edx,DWORD PTR [ecx+ebx*2]
  415108:	cmp    eax,0xb4c6f72d
  41510d:	jns    0x4150de
  41510f:	cmp    eax,0xc0799945
  415114:	dec    edi
  415115:	mov    esi,edx
  415117:	sub    bl,BYTE PTR [edi+0x113c321e]
  41511d:	or     ecx,DWORD PTR [edx]
  41511f:	xor    eax,DWORD PTR [edx+edx*4]
  415122:	test   BYTE PTR ds:0x16123f65,0xc9
  415129:	mov    bl,0x3a
  41512b:	xlat   BYTE PTR ds:[ebx]
  41512c:	xchg   ax,ax
  41512e:	push   ebx
  41512f:	xchg   esi,eax
  415130:	xchg   ecx,eax
  415131:	call   0x63a1:0xc3fbd843
  415138:	push   ss
  415139:	stos   BYTE PTR es:[edi],al
  41513a:	jnp    0x415195
  41513c:	out    0xf2,eax
  41513e:	inc    edx
  41513f:	pushf  
  415140:	pusha  
  415141:	fcomp  QWORD PTR [eax-0x3f6b5eb2]
  415147:	pusha  
  415148:	inc    ecx
  415149:	mov    bh,0x2b
  41514b:	fstp   TBYTE PTR [edx+0x3639931d]
  415151:	mov    bl,0xd6
  415153:	ror    DWORD PTR [edx+esi*1-0x6c],cl
  415157:	cli    
  415158:	and    eax,0x70b49db0
  41515d:	jecxz  0x4151d3
  41515f:	aam    0xb9
  415161:	aas    
  415162:	xor    DWORD PTR [ebx+0x35],0xa568ac9f
  415169:	dec    BYTE PTR [edx]
  41516b:	push   edx
  41516c:	jns    0x415182
  41516e:	or     BYTE PTR [ecx+0x1e108378],0x83
  415175:	or     al,0x3e
  415177:	jl     0x41513c
  415179:	stos   BYTE PTR es:[edi],al
  41517a:	or     ebx,esi
  41517c:	sbb    al,dh
  41517e:	jne    0x41518a
  415180:	ficom  DWORD PTR [ecx+0x37b5cd62]
  415186:	ret    
  415187:	pop    esi
  415188:	std    
  415189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41518a:	dec    ebx
  41518b:	mov    bh,0xd4
  41518d:	out    0x11,eax
  41518f:	mov    edx,0x43ddd7e6
  415194:	sbb    ah,BYTE PTR [ebx-0x49]
  415197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415198:	push   es
  415199:	mov    cl,BYTE PTR [ecx]
  41519b:	popa   
  41519c:	dec    ebp
  41519d:	push   edi
  41519e:	push   esi
  41519f:	sbb    eax,0xc122a376
  4151a4:	fnsave [edi+esi*1-0x2c3175d2]
  4151ab:	mov    bh,0xee
  4151ad:	(bad)  
  4151ae:	test   eax,0x9accdb0d
  4151b3:	rcl    ebx,1
  4151b5:	push   esp
  4151b6:	xor    al,0x2a
  4151b8:	push   ebp
  4151b9:	xchg   BYTE PTR [esi-0x26],bh
  4151bc:	push   ebx
  4151bd:	fiadd  DWORD PTR [ebp*8-0x70f27e85]
  4151c4:	and    al,0x58
  4151c6:	sub    eax,0x68fba9a3
  4151cb:	mov    bh,0x84
  4151cd:	nop
  4151ce:	push   es
  4151cf:	adc    al,0x61
  4151d1:	mov    dl,0xe5
  4151d3:	push   0xffffff8d
  4151d5:	mov    cl,0xa2
  4151d7:	call   0x2990fd1b
  4151dc:	and    eax,0x79b9d3f1
  4151e1:	ss pop eax
  4151e3:	xor    al,0xa6
  4151e5:	fcmovnu st,st(3)
  4151e7:	in     al,dx
  4151e8:	sbb    BYTE PTR [eax],bh
  4151ea:	pop    edi
  4151eb:	gs dec edi
  4151ed:	lock push ecx
  4151ef:	xor    esp,eax
  4151f1:	mov    al,ds:0xe36e449f
  4151f6:	ds pusha 
  4151f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151f9:	jbe    0x4151a4
  4151fb:	je     0x4151d9
  4151fd:	mov    bx,0x9926
  415201:	jecxz  0x415259
  415203:	sub    ebp,edi
  415205:	jg     0x415232
  415207:	scas   eax,DWORD PTR es:[edi]
  415208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415209:	jmp    FWORD PTR [edx+ecx*8]
  41520c:	call   0xc0bf:0xfad13ca7
  415213:	push   0xbdf11f16
  415218:	mov    dl,0xca
  41521a:	gs dec edx
  41521c:	sbb    al,0xc3
  41521e:	stc    
  41521f:	cmp    ebx,0xd0094a4f
  415225:	push   0x24
  415227:	addr16 jmp 0x83fb462c
  41522d:	push   es
  41522e:	adc    BYTE PTR [edi-0x3],cl
  415231:	xor    BYTE PTR [eax],dh
  415233:	push   edi
  415234:	cmp    BYTE PTR [eax],bh
  415236:	adc    BYTE PTR [edx-0x2b120c0],ah
  41523c:	dec    ebp
  41523d:	adc    ch,bh
  41523f:	add    al,0xaa
  415241:	xor    DWORD PTR [ecx+0x6a7bd1b8],0xffffffce
  415248:	aad    0x4d
  41524a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41524b:	sub    DWORD PTR [eax-0x42],ebx
  41524e:	xchg   edx,eax
  41524f:	adc    edi,DWORD PTR [bx-0x48]
  415253:	aaa    
  415254:	sar    DWORD PTR [edx+0x25b56747],cl
  41525a:	ret    
  41525b:	jge    0x4152c1
  41525d:	out    dx,eax
  41525e:	push   edi
  41525f:	hlt    
  415260:	mov    es,WORD PTR [ebp+0x376b31fd]
  415266:	stos   DWORD PTR es:[edi],eax
  415267:	push   esp
  415268:	pop    ebp
  415269:	jge    0x41520d
  41526b:	mov    ch,0x78
  41526d:	xchg   edi,eax
  41526e:	push   ebp
  41526f:	sbb    ch,dh
  415271:	sub    eax,0x606addc0
  415276:	cmp    bl,al
  415278:	cmc    
  415279:	jne    0x4152af
  41527b:	xchg   esi,eax
  41527c:	imul   esi,edi,0x10
  41527f:	adc    edi,0xb43394b2
  415285:	push   ecx
  415286:	lahf   
  415287:	inc    esi
  415288:	mov    bh,0xa2
  41528a:	ret    0x9789
  41528d:	mov    edi,0x3c7e0bf7
  415292:	in     eax,0x27
  415294:	pop    ss
  415295:	int3   
  415296:	sub    bl,BYTE PTR [edx]
  415298:	cmp    al,0xc9
  41529a:	out    dx,eax
  41529b:	cmc    
  41529c:	fild   QWORD PTR [edx-0x70]
  41529f:	fnstcw WORD PTR [eax-0x4d318b62]
  4152a5:	mov    eax,esp
  4152a7:	clc    
  4152a8:	mov    edi,DWORD PTR [ebx+edi*4]
  4152ab:	(bad)  
  4152ac:	es or  al,0xba
  4152af:	pop    edx
  4152b0:	mov    ebp,ds
  4152b2:	inc    edi
  4152b3:	pop    ebx
  4152b4:	pop    ds
  4152b5:	das    
  4152b6:	cmp    edx,DWORD PTR [ecx+0x517d20e5]
  4152bc:	(bad)  
  4152bd:	(bad)  
  4152be:	cld    
  4152bf:	cdq    
  4152c0:	clc    
  4152c1:	xchg   esp,eax
  4152c2:	or     DWORD PTR ss:[ecx-0x51f355a1],ecx
  4152c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152ca:	sub    al,0x91
  4152cc:	mov    esp,0xab786c64
  4152d1:	inc    edx
  4152d2:	sbb    al,0xf6
  4152d4:	pop    eax
  4152d5:	mov    DWORD PTR [ebx+0x5ad5cbe0],eax
  4152db:	sbb    BYTE PTR [eax-0x664bc6ef],0xb4
  4152e2:	add    al,0x9
  4152e4:	xor    BYTE PTR [eax-0x11d22c94],ah
  4152ea:	sbb    edx,DWORD PTR [eax]
  4152ec:	adc    BYTE PTR [ebx-0x4288eef2],cl
  4152f2:	pop    eax
  4152f3:	pop    edx
  4152f4:	je     0x41536a
  4152f6:	push   ds
  4152f7:	and    eax,0x676304fb
  4152fc:	cwd    
  4152fe:	lock xor DWORD PTR ds:0xd6bf5c7b,0x7b0533a0
  415309:	sbb    ecx,eax
  41530b:	pusha  
  41530c:	cmc    
  41530d:	mov    edx,0x6f325f0b
  415312:	fwait
  415313:	adc    cl,bh
  415315:	jns    0x4152f1
  415317:	data16 in al,dx
  415319:	repnz pushf 
  41531b:	push   esi
  41531c:	xlat   BYTE PTR ds:[ebx]
  41531d:	ins    DWORD PTR es:[edi],dx
  41531e:	out    dx,al
  41531f:	sahf   
  415320:	or     edi,esp
  415322:	out    0x50,al
  415324:	cmp    edi,DWORD PTR [eax+ecx*2-0x52e9c533]
  41532b:	pusha  
  41532c:	add    ch,bl
  41532e:	sti    
  41532f:	sub    esp,DWORD PTR [ebx-0x564c3d1c]
  415335:	aad    0xbe
  415337:	mov    ?,WORD PTR [ebx-0x7c]
  41533a:	inc    BYTE PTR [edi]
  41533c:	jmp    0x7e712a3e
  415341:	and    BYTE PTR [esi+0x64],ah
  415344:	out    dx,al
  415345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415346:	mov    ds:0x8a8e2ac7,al
  41534b:	lahf   
  41534c:	stc    
  41534d:	sbb    BYTE PTR [ecx+0x2c885033],0x66
  415354:	dec    eax
  415355:	sbb    al,0x7
  415357:	pop    ebx
  415358:	cmp    bh,ch
  41535a:	mov    ecx,0x49f36ed2
  41535f:	lahf   
  415360:	and    BYTE PTR [ecx+edi*2+0x2e],bl
  415364:	xlat   BYTE PTR ds:[ebx]
  415365:	fistp  QWORD PTR [esi-0x4be24896]
  41536b:	pop    esp
  41536c:	pop    ebx
  41536d:	fwait
  41536e:	shr    al,0x93
  415371:	(bad)  
  415372:	adc    eax,0x5b3a15cd
  415377:	ret    0x1158
  41537a:	mov    esp,0xf53ef650
  41537f:	add    DWORD PTR [ebx-0x7b],ebp
  415382:	loop   0x4153f9
  415384:	jle    0x415348
  415386:	sbb    DWORD PTR [eax+0x4ba1ce57],edx
  41538c:	popf   
  41538d:	outs   dx,DWORD PTR ds:[esi]
  41538e:	stos   BYTE PTR es:[edi],al
  41538f:	mov    cl,0x14
  415391:	in     eax,dx
  415392:	test   al,0xb2
  415394:	dec    esp
  415395:	sub    ch,BYTE PTR [ecx+esi*2+0x7b619c3]
  41539c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539d:	outs   dx,DWORD PTR ds:[esi]
  41539e:	push   es
  41539f:	add    eax,0x707a6961
  4153a4:	loopne 0x41537f
  4153a6:	loop   0x4153a0
  4153a8:	in     eax,0xde
  4153aa:	cmp    BYTE PTR [esp+esi*8-0x1a9e10f6],ah
  4153b1:	or     ch,al
  4153b3:	inc    esi
  4153b4:	pop    edx
  4153b5:	pop    edi
  4153b6:	add    al,0x9a
  4153b8:	and    ecx,DWORD PTR [eax+0x9117340]
  4153be:	cmc    
  4153bf:	aad    0x13
  4153c1:	and    al,BYTE PTR [ebx-0x5648b332]
  4153c7:	ret    
  4153c8:	xchg   BYTE PTR [ecx-0x4d],al
  4153cb:	jecxz  0x4153f4
  4153cd:	push   edi
  4153ce:	cmp    al,0x99
  4153d0:	(bad)  
  4153d1:	int    0xd2
  4153d3:	mov    dh,0x64
  4153d5:	fiadd  WORD PTR [edi+0x14]
  4153d8:	push   edi
  4153d9:	push   0x39daee2d
  4153de:	push   edx
  4153df:	and    DWORD PTR [ebx+ecx*1],ebp
  4153e2:	shl    DWORD PTR [esp-0x219df442],cl
  4153e9:	mov    al,0xee
  4153eb:	and    BYTE PTR [esi-0x47fba45d],0x80
  4153f2:	int3   
  4153f3:	inc    ebp
  4153f4:	push   esi
  4153f5:	jl     0x4153ac
  4153f7:	mov    dh,0x51
  4153f9:	xor    BYTE PTR [ebx+eiz*1-0x73],bl
  4153fd:	sti    
  4153fe:	rcl    DWORD PTR fs:[esi-0x2eb49c24],cl
  415405:	fwait
  415406:	pop    esi
  415407:	cmp    al,0xdc
  415409:	jecxz  0x4153f8
  41540b:	lea    esi,[edx+0x403d44ad]
  415411:	jmp    0x560e4a6b
  415416:	pusha  
  415417:	mov    esp,0xcc753745
  41541c:	or     eax,0xeb09dc22
  415421:	addr16 mov ah,0x78
  415424:	push   ebx
  415425:	and    al,bl
  415427:	cmp    al,0x4
  415429:	aad    0x57
  41542b:	fwait
  41542c:	jmp    0x360b:0xa9029f20
  415433:	add    ch,BYTE PTR [edx+0x39e52d18]
  415439:	loopne 0x41548c
  41543b:	pop    ecx
  41543c:	inc    DWORD PTR [ecx-0x2dceebaf]
  415442:	push   ebx
  415443:	je     0x4154b2
  415445:	push   ds
  415446:	int3   
  415447:	das    
  415448:	xchg   edi,eax
  415449:	add    bh,bl
  41544b:	sub    BYTE PTR ds:0xd6f8a08b,al
  415451:	and    al,0x6f
  415453:	cmc    
  415454:	outs   dx,BYTE PTR ds:[esi]
  415455:	loope  0x41543c
  415457:	mov    dl,0x4d
  415459:	(bad)  
  41545a:	test   DWORD PTR [ebx],0x2dd1ef08
  415460:	in     al,dx
  415461:	in     eax,dx
  415462:	fld    QWORD PTR [eax+ecx*8-0x54]
  415466:	je     0x415459
  415468:	into   
  415469:	imul   ebp,DWORD PTR [esi+esi*1-0x13],0x6f
  41546e:	jmp    0x415423
  415470:	push   esi
  415471:	mov    ecx,0x28cd196a
  415476:	fbstp  TBYTE PTR [esi]
  415478:	sbb    eax,0x540e4ac5
  41547d:	add    ecx,ebp
  41547f:	lahf   
  415480:	dec    edx
  415481:	mov    eax,DWORD PTR [esi-0x26d00844]
  415487:	rcl    DWORD PTR [edx],0x91
  41548a:	push   ebp
  41548b:	mov    ?,WORD PTR [edx-0x3ba93fc5]
  415491:	sub    eax,0xc46c8071
  415496:	cmp    BYTE PTR [ecx],bl
  415498:	test   al,0xf8
  41549a:	add    ebx,edi
  41549c:	xchg   ecx,eax
  41549d:	test   al,0x50
  41549f:	lahf   
  4154a0:	inc    ebx
  4154a1:	lods   eax,DWORD PTR ds:[esi]
  4154a2:	sbb    DWORD PTR [edi],edi
  4154a4:	mov    bh,BYTE PTR [eax]
  4154a6:	xchg   ebx,eax
  4154a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a8:	jnp    0x4154e4
  4154aa:	jns    0x415524
  4154ac:	add    cl,BYTE PTR ds:[edx]
  4154af:	fmul   QWORD PTR [edi+0x6feeaff3]
  4154b5:	(bad)  [ecx+0x58daf7b9]
  4154bb:	sahf   
  4154bc:	les    eax,FWORD PTR [esi]
  4154be:	in     eax,dx
  4154bf:	nop
  4154c0:	std    
  4154c1:	jle    0x415515
  4154c3:	(bad)  
  4154c4:	mov    esp,0xba322581
  4154c9:	pop    ebp
  4154ca:	into   
  4154cb:	push   edi
  4154cc:	test   BYTE PTR [eax],al
  4154ce:	lea    ebx,[ebp+eiz*8+0x17819470]
  4154d5:	jo     0x4154e8
  4154d7:	out    dx,eax
  4154d8:	cmp    DWORD PTR [ecx+0x3d],esp
  4154db:	mov    al,0xa
  4154dd:	sbb    eax,0xc34eca9e
  4154e2:	jnp    0x415553
  4154e4:	sub    al,0xfa
  4154e6:	adc    DWORD PTR [ebp-0x149786b1],ebx
  4154ec:	mov    esp,0xfe852ccd
  4154f1:	sti    
  4154f2:	push   ds
  4154f3:	pop    esi
  4154f4:	mov    eax,0xbfb2b0b4
  4154f9:	xchg   esi,eax
  4154fa:	and    eax,0x8220e98c
  4154ff:	fs sbb cl,bh
  415502:	adc    al,0x2a
  415504:	hlt    
  415505:	iret   
  415506:	inc    ecx
  415507:	mov    dh,0xb1
  415509:	add    DWORD PTR ds:[ebx+0x3a8d7835],esi
  415510:	cmp    edi,0x7d
  415513:	out    0x6d,al
  415515:	dec    ebx
  415516:	sbb    dh,BYTE PTR [ebx+0x27]
  415519:	retf   0x6532
  41551c:	loop   0x4154df
  41551e:	adc    al,0xcb
  415520:	out    dx,al
  415521:	jne    0x41551c
  415523:	inc    ebx
  415524:	mov    dh,0xcd
  415526:	dec    edi
  415527:	add    DWORD PTR [eax],eax
  415529:	mov    dh,0x17
  41552b:	adc    eax,esp
  41552d:	mov    bl,0xa8
  41552f:	adc    esi,DWORD PTR [ecx+0xa]
  415532:	xor    BYTE PTR [edi+edi*2+0x24],cl
  415536:	push   esi
  415537:	cmp    ebx,DWORD PTR [ebx-0x20d5490a]
  41553d:	ss pop edi
  41553f:	add    edi,DWORD PTR [esp+edx*2-0xc]
  415543:	jl     0x415536
  415545:	or     eax,0x120f1a12
  41554a:	(bad)  
  41554b:	sbb    edx,ebx
  41554d:	retf   0xdff1
  415550:	scas   al,BYTE PTR es:[edi]
  415551:	mov    cs,WORD PTR [ecx-0x52a0158e]
  415557:	jae    0x41552b
  415559:	dec    edx
  41555a:	outs   dx,BYTE PTR ds:[esi]
  41555b:	das    
  41555c:	test   eax,0x8309f7b5
  415561:	xchg   ebx,eax
  415562:	and    DWORD PTR [ecx+ecx*8],ecx
  415565:	(bad)  
  415566:	jo     0x415537
  415568:	add    al,0x30
  41556a:	xchg   ecx,esp
  41556c:	cmp    eax,0x5fa18734
  415571:	(bad)  
  415572:	addr16 mov edx,0xdf8096c7
  415578:	push   ss
  415579:	arpl   WORD PTR [esi+0x5683f1dd],bp
  41557f:	stos   DWORD PTR es:[edi],eax
  415580:	cmp    eax,0xd5c904db
  415585:	int3   
  415586:	mov    ebp,0xa2c43184
  41558b:	pop    edx
  41558c:	inc    ebp
  41558d:	test   DWORD PTR [ebx-0x2ec4183f],eax
  415593:	retf   
  415594:	push   ebx
  415595:	std    
  415596:	dec    ebx
  415597:	aam    0xfa
  415599:	xor    bl,BYTE PTR [ecx+eax*1]
  41559c:	xchg   edi,eax
  41559d:	inc    esp
  41559e:	call   FWORD PTR [edx]
  4155a0:	adc    esi,DWORD PTR [ecx]
  4155a2:	xchg   ebp,eax
  4155a3:	in     al,dx
  4155a4:	push   ds
  4155a5:	cmc    
  4155a6:	push   esp
  4155a7:	mov    esi,0xd1d9600e
  4155ac:	mov    BYTE PTR [edi+edi*4-0x3184bc8b],ah
  4155b3:	bound  edi,QWORD PTR [esi]
  4155b5:	mov    ah,0xf8
  4155b7:	jne    0x4155ed
  4155b9:	fisttp QWORD PTR ds:0xc60969f2
  4155bf:	mov    al,0x5
  4155c1:	aaa    
  4155c2:	mov    esp,0xf0a92339
  4155c7:	fstp   QWORD PTR [edx]
  4155c9:	int    0xcf
  4155cb:	shr    ah,1
  4155cd:	dec    edi
  4155ce:	shr    BYTE PTR [ebx-0x77875dc6],0x39
  4155d5:	jns    0x4155c0
  4155d7:	xor    BYTE PTR [esi-0x18fbf0e7],cl
  4155dd:	xor    al,0x81
  4155df:	aaa    
  4155e0:	pop    eax
  4155e1:	ffreep st(7)
  4155e3:	push   ss
  4155e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155e5:	std    
  4155e6:	scas   eax,DWORD PTR es:[edi]
  4155e7:	mov    ds:0x790f6fbf,eax
  4155ec:	inc    ecx
  4155ed:	cmp    dh,BYTE PTR [eax]
  4155ef:	jle    0x415635
  4155f1:	call   FWORD PTR [ebp+0x3e371b20]
  4155f7:	adc    al,0x8c
  4155f9:	repz dec edx
  4155fb:	pop    esp
  4155fc:	xor    esp,edx
  4155fe:	stos   BYTE PTR es:[edi],al
  4155ff:	and    ah,BYTE PTR ds:0x99bcdcfe
  415605:	(bad)  
  415606:	xor    eax,0xde8e8418
  41560b:	mov    dl,0xca
  41560d:	loopne 0x415622
  41560f:	mov    al,0x75
  415611:	push   0xb
  415613:	cdq    
  415614:	(bad)  
  415616:	jl     0x415606
  415618:	mov    ebx,0xe6883b35
  41561d:	jmp    0xf5a:0x7655003a
  415624:	sahf   
  415625:	pop    esp
  415626:	mov    ebx,0x43d6f39b
  41562b:	imul   esp,DWORD PTR [edi+eiz*1-0x769e85d8],0x2a6da38
  415636:	xchg   ebx,eax
  415637:	out    0xab,eax
  415639:	xchg   ebx,eax
  41563a:	mov    edx,0x3cda1e40
  41563f:	mov    cl,0xae
  415641:	dec    ecx
  415642:	push   ebp
  415643:	and    BYTE PTR [ecx-0x66],ch
  415646:	inc    eax
  415647:	ins    DWORD PTR es:[edi],dx
  415648:	push   cs
  415649:	cli    
  41564a:	xchg   esp,eax
  41564b:	cli    
  41564c:	sbb    ebx,DWORD PTR [edi-0x738f899a]
  415652:	mov    esi,0xa577f70d
  415657:	sub    eax,DWORD PTR cs:[esi-0x7bd239cf]
  41565e:	test   BYTE PTR ds:[esi],ch
  415661:	jl     0x4156de
  415663:	sahf   
  415664:	outs   dx,BYTE PTR ds:[esi]
  415665:	into   
  415666:	pop    ecx
  415667:	inc    edi
  415668:	pop    edx
  415669:	adc    BYTE PTR [eax-0x27],cl
  41566c:	mov    ebp,0x18e17184
  415671:	jg     0x4155fb
  415673:	sti    
  415674:	xor    dl,BYTE PTR [esi-0x1c0df1a7]
  41567a:	in     al,dx
  41567b:	fnsave [esi+esi*8-0x3b]
  41567f:	rcr    BYTE PTR [esi+0x6745482c],0xc5
  415686:	std    
  415687:	mov    al,ds:0x777fc522
  41568c:	mov    ds:0x380c5c49,al
  415691:	push   edx
  415692:	sahf   
  415693:	push   0x20
  415695:	and    BYTE PTR [edi+edi*2-0xa47c0e0],dh
  41569c:	aaa    
  41569d:	sbb    al,0x61
  41569f:	push   es
  4156a0:	imul   DWORD PTR [eax+0x69]
  4156a3:	jle    0x415639
  4156a5:	arpl   si,dx
  4156a7:	xchg   edx,eax
  4156a8:	and    cl,dl
  4156aa:	into   
  4156ab:	mov    ah,0x43
  4156ad:	xor    DWORD PTR [eax],eax
  4156af:	pop    ebx
  4156b0:	pop    ss
  4156b1:	sub    eax,0x7fb5f9d4
  4156b6:	add    esi,ebp
  4156b8:	addr16 mov ebp,0x4cd3eb2a
  4156be:	mov    bh,0xfe
  4156c0:	fld    QWORD PTR [ecx+0x2d]
  4156c3:	loope  0x415725
  4156c5:	les    ebp,FWORD PTR [eax]
  4156c7:	aaa    
  4156c8:	jg     0x4156d0
  4156ca:	ss jge 0x4156c9
  4156cd:	jecxz  0x415660
  4156cf:	sub    DWORD PTR [esi],esp
  4156d1:	sub    BYTE PTR [edi+0x34821299],dh
  4156d7:	push   eax
  4156d8:	add    al,0xc6
  4156da:	fsubr  st,st(4)
  4156dc:	(bad)
  4156df:	daa    
  4156e0:	jmp    DWORD PTR [edi]
  4156e2:	xchg   esp,eax
  4156e3:	cmc    
  4156e4:	ret    
  4156e5:	ins    BYTE PTR es:[edi],dx
  4156e6:	or     ebx,edx
  4156e8:	addr16 (bad) 
  4156ea:	fisttp DWORD PTR [edx-0x793597fd]
  4156f0:	inc    esp
  4156f1:	imul   eax,DWORD PTR [edx+0x3a],0x4aef5de6
  4156f8:	lods   al,BYTE PTR ds:[esi]
  4156f9:	sbb    DWORD PTR [esi-0x71],eax
  4156fc:	mov    ah,0x22
  4156fe:	sub    eax,0xfcf16e66
  415703:	sub    ecx,esi
  415705:	dec    ebx
  415706:	sub    al,0x28
  415708:	mov    esi,0xc76e6eb4
  41570d:	cmp    eax,0x863588ae
  415712:	rcr    DWORD PTR [ecx+0x29],1
  415715:	ret    0x5de0
  415718:	cmp    DWORD PTR [ecx],ebx
  41571a:	jnp    0x415761
  41571c:	aaa    
  41571d:	data16 (bad) 
  41571f:	in     eax,0x66
  415721:	fidivr DWORD PTR [esp+ecx*2]
  415724:	rol    BYTE PTR [esi-0x275d47a2],1
  41572a:	inc    ecx
  41572b:	popa   
  41572c:	test   eax,0xbfed70f8
  415731:	push   edi
  415732:	js     0x41570a
  415734:	ja     0x41578c
  415736:	bound  edx,QWORD PTR [eax]
  415738:	sbb    DWORD PTR [eax-0x58],ebx
  41573b:	mov    bl,0x58
  41573d:	adc    DWORD PTR [eax+ebx*2+0x7a38ac1d],0x23
  415745:	fdivr  DWORD PTR [ebx+0x460c7b1e]
  41574b:	adc    BYTE PTR [ecx+0x46],bl
  41574e:	cld    
  41574f:	data16 lahf 
  415751:	jl     0x415738
  415753:	repnz add BYTE PTR [ecx],al
  415756:	add    DWORD PTR [ebp-0x1614cc09],edi
  41575c:	out    0xd8,eax
  41575e:	outs   dx,BYTE PTR ds:[esi]
  41575f:	test   eax,0x9c41cb6d
  415764:	xor    eax,0xd3468675
  415769:	iret   
  41576a:	bound  esi,QWORD PTR [eax+0x1]
  41576d:	mov    ch,0x12
  41576f:	or     eax,0x764b41f5
  415774:	gs pop edx
  415776:	jecxz  0x4156fd
  415778:	clc    
  415779:	(bad)  
  41577a:	test   DWORD PTR [eax+0x6e],0x281a55f7
  415781:	out    0x48,eax
  415783:	int    0x24
  415785:	pop    ebx
  415786:	add    cl,bh
  415788:	xchg   ebx,edx
  41578a:	dec    esi
  41578b:	xchg   BYTE PTR [ebx-0x7e69a47a],cl
  415791:	out    dx,eax
  415792:	imul   eax,DWORD PTR [edx+0x4a],0xa6479804
  415799:	push   eax
  41579a:	test   DWORD PTR [ebx+edx*1-0x13],ecx
  41579e:	(bad)  
  41579f:	fnstsw WORD PTR [edx+0x51c63320]
  4157a5:	xor    dh,BYTE PTR [esi+0x7c]
  4157a8:	inc    esp
  4157a9:	push   ds
  4157aa:	not    BYTE PTR [ebx-0x71f28617]
  4157b0:	sbb    al,cl
  4157b2:	pop    ebp
  4157b3:	bound  ebp,QWORD PTR [ebp-0x58]
  4157b6:	add    DWORD PTR ds:0x36d761af,edx
  4157bc:	fild   QWORD PTR [eax-0x31]
  4157bf:	fld    DWORD PTR [ecx+edx*1]
  4157c2:	(bad)  
  4157c3:	mov    bh,0xb5
  4157c5:	fs sahf 
  4157c7:	(bad)  [ecx]
  4157c9:	xor    edi,DWORD PTR [ecx-0x345c0836]
  4157cf:	repz fcomp DWORD PTR [ecx+0x280f2b70]
  4157d6:	(bad)  
  4157d8:	sbb    DWORD PTR [ebx-0x33e8b19],esp
  4157de:	cwde   
  4157df:	xor    edx,DWORD PTR [edi-0x43bebebb]
  4157e5:	mov    dl,0x3e
  4157e7:	cmp    BYTE PTR [esi],ch
  4157e9:	into   
  4157ea:	mov    bl,0x7a
  4157ec:	add    BYTE PTR [edi],bh
  4157ee:	(bad)  
  4157ef:	repz sub edi,0xf5c4cf52
  4157f6:	and    BYTE PTR [ebx+0x18],0x4
  4157fa:	xor    eax,0xb917a617
  4157ff:	dec    edi
  415800:	aas    
  415801:	mov    cl,0xc0
  415803:	mov    ebp,0x25ec915d
  415808:	jecxz  0x415853
  41580a:	sub    ebp,DWORD PTR [esp+edi*2]
  41580d:	xchg   esp,eax
  41580e:	jmp    0xaaaf99d3
  415813:	retf   
  415814:	test   DWORD PTR [edx-0x798029b5],ebp
  41581a:	xor    ah,BYTE PTR [ecx+0x52]
  41581d:	nop
  41581e:	imul   ebp,edi,0x5f89fa9e
  415824:	pop    esi
  415825:	jno    0x41581d
  415827:	mov    DWORD PTR [ecx+ecx*1-0x1ccd453c],edi
  41582e:	adc    ch,BYTE PTR [ebx+edx*8]
  415831:	or     dh,bl
  415833:	fldenvw [ebx]
  415836:	pop    ss
  415837:	dec    edx
  415838:	and    eax,0xd3f8a8d1
  41583d:	call   eax
  41583f:	cmc    
  415840:	cmp    al,0x1f
  415842:	popf   
  415843:	(bad)
  415846:	pop    esp
  415847:	sti    
  415848:	das    
  415849:	outs   dx,BYTE PTR ds:[esi]
  41584a:	out    0xd4,eax
  41584c:	stos   BYTE PTR es:[edi],al
  41584d:	xor    ah,BYTE PTR [ebx+0x22]
  415850:	call   0x6f9126fb
  415855:	arpl   WORD PTR [ecx+0x68],si
  415858:	jg     0x4158ce
  41585a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41585b:	jmp    0xf451:0x221eac02
  415862:	dec    eax
  415863:	lods   eax,DWORD PTR ds:[esi]
  415864:	or     esi,edi
  415866:	out    dx,al
  415867:	ss aaa 
  415869:	jno    0x4158a0
  41586b:	adc    esp,DWORD PTR [ecx+0x2]
  41586e:	dec    ebx
  41586f:	lea    edi,[edx+0x7a]
  415872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415873:	cmp    DWORD PTR [ebx-0x15],ecx
  415876:	rcl    esp,cl
  415878:	xor    DWORD PTR [eax],0x60
  41587b:	jns    0x415826
  41587d:	xchg   ebp,eax
  41587e:	aaa    
  41587f:	add    bh,BYTE PTR [edx]
  415881:	mov    ds:0xaab8e44a,eax
  415886:	ds test eax,0xfdcf4515
  41588c:	push   edi
  41588d:	(bad)  
  41588e:	mov    dl,dl
  415890:	into   
  415891:	mov    esi,0x4ef89347
  415896:	icebp  
  415897:	out    0xdd,eax
  415899:	(bad)  
  41589a:	lock xchg esi,eax
  41589c:	xor    al,BYTE PTR [ecx]
  41589e:	rol    DWORD PTR [eax],1
  4158a0:	ja     0x41582c
  4158a2:	sub    edx,esp
  4158a4:	into   
  4158a5:	mov    edx,0xccf5533c
  4158aa:	leave  
  4158ab:	or     al,0x2
  4158ad:	jmp    0x1920:0x8cbf5050
  4158b4:	call   0xd0749f9a
  4158b9:	add    BYTE PTR [ebx+0x2f],al
  4158bc:	cmp    DWORD PTR [edx],esi
  4158be:	(bad)  
  4158bf:	sub    al,0x48
  4158c1:	hlt    
  4158c2:	mov    cl,0x6d
  4158c4:	xor    eax,ebx
  4158c6:	test   eax,0x4eba4c89
  4158cb:	(bad)
  4158ce:	sub    esi,0xffffffaa
  4158d1:	jb     0x4158fa
  4158d3:	mov    ch,0xfc
  4158d5:	or     eax,0x461c18d5
  4158da:	xchg   esi,eax
  4158db:	push   edi
  4158dc:	dec    ebx
  4158dd:	or     BYTE PTR [ebx-0x4f],al
  4158e0:	shl    dh,0x32
  4158e3:	xchg   edi,eax
  4158e4:	in     eax,0x91
  4158e6:	nop
  4158e7:	adc    BYTE PTR [ebp-0x52f140ff],dh
  4158ed:	mov    ds:0xca3142de,eax
  4158f2:	push   edi
  4158f3:	add    esp,DWORD PTR [edi-0x4cde99e]
  4158f9:	dec    eax
  4158fa:	sti    
  4158fb:	(bad)  
  4158fc:	and    DWORD PTR [ecx],ecx
  4158fe:	test   BYTE PTR [ebx+0x6e],bh
  415901:	mov    eax,ds:0x6122cbc9
  415906:	xchg   ebp,eax
  415907:	dec    ecx
  415908:	inc    edx
  415909:	xchg   ebp,eax
  41590a:	and    edx,DWORD PTR [esp+ebp*8-0x22135232]
  415911:	pop    esi
  415912:	inc    ebp
  415913:	xchg   edx,eax
  415914:	adc    BYTE PTR [ebx-0x65cf4b23],dh
  41591a:	icebp  
  41591b:	scas   eax,DWORD PTR es:[edi]
  41591c:	mov    bh,0x72
  41591e:	sub    DWORD PTR [ecx+eiz*4-0x10],ebp
  415922:	pushf  
  415923:	hlt    
  415924:	dec    eax
  415925:	daa    
  415926:	jecxz  0x41591f
  415928:	rol    BYTE PTR ds:[ebx+0x10],0x8f
  41592d:	sbb    ax,WORD PTR [edi-0xa784412]
  415934:	sbb    eax,0x1f3de235
  415939:	xor    eax,0xbf32d0e8
  41593e:	push   ss
  41593f:	stos   BYTE PTR es:[edi],al
  415940:	dec    esi
  415941:	or     DWORD PTR [edi],ebp
  415943:	pusha  
  415944:	pop    ecx
  415945:	lea    eax,[edi+edi*2]
  415948:	mov    edi,0xabeff586
  41594d:	fsubr  st(6),st
  41594f:	push   edx
  415950:	mov    esp,0x5fe8667d
  415955:	hlt    
  415956:	ror    BYTE PTR [eax-0x53],0x9f
  41595a:	leave  
  41595b:	xchg   edx,eax
  41595c:	mov    esi,0x8b872387
  415961:	adc    al,0xd7
  415963:	sub    dh,BYTE PTR [ecx+0x49]
  415966:	sbb    al,0x30
  415968:	add    al,0x35
  41596a:	inc    ebx
  41596b:	sbb    al,0xb9
  41596d:	add    al,0x9f
  41596f:	xchg   ebx,eax
  415970:	push   ebp
  415971:	push   edi
  415972:	ins    DWORD PTR es:[edi],dx
  415973:	adc    dh,BYTE PTR [eax+0xb]
  415976:	add    ah,0xd3
  415979:	mov    ch,0x30
  41597b:	jmp    0x18c65825
  415980:	sahf   
  415981:	pushf  
  415982:	push   edi
  415983:	mov    ebp,0xaa5f3492
  415988:	dec    edi
  415989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41598a:	(bad)  
  41598b:	popf   
  41598c:	sbb    edx,edx
  41598e:	aad    0xd6
  415990:	pop    ebp
  415991:	pop    edx
  415992:	pop    ecx
  415993:	jg     0x415948
  415995:	push   cs
  415996:	or     BYTE PTR [esi-0x7],0xb5
  41599a:	sbb    BYTE PTR [esi+0x62],bh
  41599d:	jg     0x415a1e
  41599f:	jne    0x41598a
  4159a1:	pop    ebx
  4159a2:	pusha  
  4159a3:	push   0x908a1218
  4159a8:	ds cli 
  4159aa:	nop
  4159ab:	push   esp
  4159ac:	std    
  4159ad:	pop    edx
  4159ae:	mov    BYTE PTR [ebx],cl
  4159b0:	jl     0x415a2a
  4159b2:	scas   al,BYTE PTR es:[edi]
  4159b3:	aas    
  4159b4:	push   ecx
  4159b5:	mov    bl,0x77
  4159b7:	jmp    DWORD PTR [eax-0x69]
  4159ba:	les    esp,FWORD PTR [edx-0x2e400e88]
  4159c0:	(bad)  
  4159c1:	push   ebx
  4159c2:	iret   
  4159c3:	and    al,0x21
  4159c5:	js     0x41597b
  4159c7:	fsub   QWORD PTR [eax+eiz*1-0x16]
  4159cb:	out    dx,al
  4159cc:	and    DWORD PTR [eax-0x68],0x21
  4159d0:	dec    eax
  4159d1:	int    0x73
  4159d3:	push   edi
  4159d4:	es cld 
  4159d6:	call   0x3ccb11dd
  4159db:	mov    BYTE PTR ds:0x640cfbe0,dl
  4159e1:	mov    DWORD PTR cs:[ebx-0x2e7bf6b4],esi
  4159e8:	retf   
  4159e9:	fstp   DWORD PTR [edi]
  4159eb:	mov    ah,0xfd
  4159ed:	adc    al,BYTE PTR [ecx+ecx*2-0x6d]
  4159f1:	mov    ds:0xe8a4edd9,eax
  4159f6:	mov    edi,0x6c2fe00a
  4159fb:	sub    DWORD PTR [edi-0x68],0xb64931b8
  415a02:	push   ebp
  415a03:	arpl   dx,dx
  415a05:	jge    0x415990
  415a07:	dec    edi
  415a08:	clc    
  415a09:	sub    al,0x63
  415a0b:	repz or eax,0x7b84bd75
  415a11:	sti    
  415a12:	or     BYTE PTR [ebx+eiz*2-0x74],ah
  415a16:	(bad)  
  415a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a18:	inc    edi
  415a19:	mov    eax,0x13824179
  415a1e:	(bad)  
  415a1f:	jns    0x415a6a
  415a21:	aas    
  415a22:	mov    bh,0xe7
  415a24:	lea    ebp,[edi-0x65]
  415a27:	out    0x41,eax
  415a29:	pop    ebx
  415a2a:	inc    eax
  415a2b:	push   ss
  415a2c:	cs mov ebx,0x7b26b2dc
  415a32:	jno    0x415a19
  415a34:	mov    dh,0x59
  415a36:	jge    0x415a76
  415a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a39:	mov    ah,0xba
  415a3b:	ret    
  415a3c:	adc    cl,BYTE PTR [ecx-0x6e1f8907]
  415a42:	daa    
  415a43:	mov    al,0x4b
  415a45:	inc    ebx
  415a46:	sbb    al,0x79
  415a49:	add    BYTE PTR [eax+esi*2],0x98
  415a4d:	add    al,0x38
  415a4f:	inc    edx
  415a50:	pop    ss
  415a51:	aaa    
  415a52:	mov    bl,BYTE PTR [edx+0x2ca304fc]
  415a58:	mov    WORD PTR [ebp-0x1dde8880],es
  415a5e:	aas    
  415a5f:	dec    ebp
  415a60:	pop    ebp
  415a61:	cmp    al,0xc3
  415a63:	jmp    0x8912:0xdc5575c7
  415a6a:	cwde   
  415a6b:	scas   al,BYTE PTR es:[edi]
  415a6c:	mov    ah,0x84
  415a6e:	push   DWORD PTR [ebp+0x57]
  415a71:	les    ebx,FWORD PTR [ebx+0x2]
  415a74:	jno    0x415a57
  415a76:	les    eax,FWORD PTR [ecx+0x44fde79b]
  415a7c:	jnp    0x415a21
  415a7e:	xchg   DWORD PTR [eax+0x12b8ac0f],edx
  415a84:	pop    ebp
  415a85:	ins    BYTE PTR es:[edi],dx
  415a86:	lods   al,BYTE PTR ds:[esi]
  415a87:	sbb    eax,0x94241048
  415a8c:	sbb    al,0x5a
  415a8e:	(bad)  
  415a91:	sbb    DWORD PTR [edi-0x29],0x20b137ce
  415a98:	dec    edx
  415a99:	in     al,dx
  415a9a:	bound  edx,QWORD PTR [ecx+0x8928c58]
  415aa0:	ins    BYTE PTR es:[edi],dx
  415aa1:	jg     0x415ac3
  415aa3:	gs nop
  415aa5:	sbb    ebp,DWORD PTR [eax+ebp*2+0x44]
  415aa9:	rol    ch,0x2d
  415aac:	mov    dh,0x60
  415aae:	jo     0x415af3
  415ab0:	cdq    
  415ab1:	jecxz  0x415ad0
  415ab3:	ss aas 
  415ab5:	pusha  
  415ab6:	inc    eax
  415ab7:	inc    esi
  415ab8:	add    BYTE PTR [edi+0x23dc6326],0x6d
  415abf:	push   0xffffffad
  415ac1:	dec    edi
  415ac2:	mov    cl,0x60
  415ac4:	cmc    
  415ac5:	inc    ebx
  415ac6:	sub    DWORD PTR [edx-0x6b],edx
  415ac9:	mov    edi,0x1db49f78
  415ace:	ds push es
  415ad0:	xchg   edx,esi
  415ad2:	pop    eax
  415ad3:	or     BYTE PTR [edx],ch
  415ad5:	mov    al,BYTE PTR [edx-0x14]
  415ad8:	pop    ebp
  415ad9:	mov    esp,0xc62a107b
  415ade:	out    0x6a,al
  415ae0:	or     al,0xed
  415ae2:	(bad)  
  415ae3:	xor    BYTE PTR [eax],bh
  415ae5:	add    eax,0x9ed40e3f
  415aea:	inc    ecx
  415aeb:	dec    edx
  415aec:	shl    DWORD PTR [edx+0x78],1
  415aef:	cs dec esp
  415af1:	add    eax,0xb22d08dc
  415af6:	add    edx,esi
  415af8:	call   0x5188:0x454cecea
  415aff:	xlat   BYTE PTR ds:[ebx]
  415b00:	sub    edx,DWORD PTR [edi+0x799432f6]
  415b06:	rcl    DWORD PTR [edi+0x35aa2517],cl
  415b0c:	push   ebp
  415b0d:	cmp    bh,0x4c
  415b10:	pop    ebp
  415b11:	leave  
  415b12:	add    eax,0x1a2379e6
  415b17:	icebp  
  415b18:	push   cs
  415b19:	sbb    BYTE PTR [ebx+0x57f0901],ah
  415b1f:	sub    eax,0xbaadb22
  415b24:	pop    eax
  415b25:	mov    ecx,cs
  415b27:	inc    edi
  415b28:	xchg   ebx,eax
  415b29:	mov    fs,WORD PTR [ecx]
  415b2b:	neg    DWORD PTR [ecx+0x15a0ac92]
  415b31:	xlat   BYTE PTR ds:[ebx]
  415b32:	cld    
  415b33:	sub    DWORD PTR [ecx],ebp
  415b35:	sti    
  415b36:	frstor [ecx]
  415b38:	aaa    
  415b39:	test   BYTE PTR [eax],0xd7
  415b3c:	mov    WORD PTR [ecx+0x8],cs
  415b3f:	add    cl,ch
  415b41:	cmp    DWORD PTR [ecx-0xb],ebx
  415b44:	mov    eax,DWORD PTR [ebp-0x690dbd14]
  415b4a:	cmp    edx,DWORD PTR [edi]
  415b4c:	stc    
  415b4d:	jb     0x415b7d
  415b4f:	dec    ebp
  415b50:	mov    dh,0xd9
  415b52:	pop    ecx
  415b53:	rcl    ecx,cl
  415b55:	mov    cs,ecx
  415b57:	or     al,0x28
  415b59:	das    
  415b5a:	pusha  
  415b5b:	xchg   edx,eax
  415b5c:	je     0x415ae7
  415b5e:	dec    esi
  415b5f:	fstp   TBYTE PTR [edx]
  415b61:	jecxz  0x415b8e
  415b63:	arpl   WORD PTR [edx-0x12e43163],bp
  415b69:	xor    eax,0x2a989b80
  415b6e:	outs   dx,BYTE PTR ds:[esi]
  415b6f:	push   esp
  415b70:	lock ret 
  415b72:	jle    0x415b92
  415b74:	inc    ebp
  415b75:	sbb    esp,DWORD PTR [ebp+0x73]
  415b78:	add    BYTE PTR [ebx],bh
  415b7a:	dec    ecx
  415b7b:	ror    BYTE PTR [eax-0x1b68252d],cl
  415b81:	jl     0x415b9d
  415b83:	div    DWORD PTR [esi]
  415b85:	ins    BYTE PTR es:[edi],dx
  415b86:	mov    bl,0x85
  415b88:	xor    DWORD PTR ss:[edi+ecx*4-0x61abbd93],edi
  415b90:	xchg   esp,eax
  415b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b92:	inc    ecx
  415b93:	out    0x0,al
  415b95:	xchg   edi,eax
  415b96:	lods   al,BYTE PTR ds:[esi]
  415b97:	fs in  eax,0x5b
  415b9a:	push   ss
  415b9b:	(bad)  
  415b9c:	idiv   DWORD PTR [esi-0x46]
  415b9f:	mov    eax,0x3c761f9a
  415ba4:	push   es
  415ba5:	inc    edi
  415ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ba7:	xchg   esi,eax
  415ba8:	jecxz  0x415b5c
  415baa:	xchg   edi,eax
  415bab:	stos   BYTE PTR es:[edi],al
  415bac:	and    eax,0x39290257
  415bb1:	inc    edx
  415bb2:	ss sbb eax,0xb06cf570
  415bb8:	jb     0x415bff
  415bba:	icebp  
  415bbb:	push   esi
  415bbc:	cmc    
  415bbd:	and    BYTE PTR [ebp-0x22bf94d1],al
  415bc3:	mov    dh,0x8
  415bc5:	in     eax,0x3c
  415bc7:	inc    esp
  415bc8:	inc    esp
  415bc9:	addr16 or al,0x4a
  415bcc:	fs inc eax
  415bce:	jne    0x415c3a
  415bd0:	sbb    ebx,DWORD PTR [ebx]
  415bd2:	xchg   esi,eax
  415bd3:	fbld   TBYTE PTR [ebx+edx*4+0x3f9ad4c8]
  415bda:	retf   
  415bdb:	sbb    ah,cl
  415bdd:	out    0xe3,eax
  415bdf:	cmp    al,0x1f
  415be1:	hlt    
  415be2:	pop    ecx
  415be3:	adc    dh,BYTE PTR [edx]
  415be5:	std    
  415be6:	sub    dh,dl
  415be8:	pop    esi
  415be9:	into   
  415bea:	scas   eax,DWORD PTR es:[edi]
  415beb:	dec    eax
  415bec:	(bad)  ds:0x76033aab
  415bf2:	loop   0x415be1
  415bf4:	mov    ah,0xe7
  415bf6:	pop    ecx
  415bf7:	(bad)  
  415bf8:	scas   eax,DWORD PTR es:[edi]
  415bf9:	add    BYTE PTR [ebx-0x28],al
  415bfc:	jb     0x415b9c
  415bfe:	xor    al,0x7a
  415c00:	fist   DWORD PTR ds:0x2c7e57bf
  415c06:	pop    ecx
  415c07:	inc    ecx
  415c08:	out    dx,eax
  415c09:	lods   al,BYTE PTR ds:[esi]
  415c0a:	pushf  
  415c0b:	ss call 0xda457e20
  415c11:	push   edi
  415c12:	mov    ds:0x5a0fc21f,eax
  415c17:	mov    dh,0xb5
  415c19:	div    BYTE PTR [eax-0x14]
  415c1c:	popf   
  415c1d:	dec    esp
  415c1e:	mov    al,dh
  415c20:	into   
  415c21:	or     al,BYTE PTR [esi+eiz*1-0x27b2ffa3]
  415c28:	pushf  
  415c29:	sub    eax,0x45e8c96c
  415c2e:	pop    ds
  415c2f:	sbb    bh,dh
  415c31:	dec    ebp
  415c32:	outs   dx,BYTE PTR ds:[esi]
  415c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c34:	push   si
  415c36:	or     DWORD PTR [esi+ebx*4],ecx
  415c39:	mov    ds:0xd844fc4a,al
  415c3e:	adc    al,0x65
  415c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c41:	jge    0x415cae
  415c43:	pusha  
  415c44:	ins    DWORD PTR es:[edi],dx
  415c45:	dec    eax
  415c46:	sub    al,0xbf
  415c48:	pusha  
  415c49:	shr    DWORD PTR [ebp-0x6bf9427d],cl
  415c4f:	mov    dl,0x95
  415c51:	scas   al,BYTE PTR es:[edi]
  415c52:	pop    edi
  415c53:	popa   
  415c54:	into   
  415c55:	test   eax,0x10a14a83
  415c5a:	int3   
  415c5b:	into   
  415c5c:	or     al,0x8d
  415c5e:	mov    edx,0xcb2b8f33
  415c63:	lods   al,BYTE PTR ds:[esi]
  415c64:	jecxz  0x415caa
  415c66:	faddp  st(3),st
  415c68:	(bad)  
  415c69:	sbb    eax,0x4a7c7792
  415c6e:	pop    ss
  415c6f:	adc    DWORD PTR [edx],esi
  415c71:	push   0xf43801ad
  415c76:	jg     0x415c34
  415c78:	inc    ebx
  415c79:	sbb    ecx,DWORD PTR [edi-0x23]
  415c7c:	sbb    eax,0x495da100
  415c81:	call   edx
  415c83:	jmp    0xd362:0xddaa2e09
  415c8a:	fcom   st(7)
  415c8c:	stc    
  415c8d:	sahf   
  415c8e:	int    0x37
  415c90:	jmp    0x247f568f
  415c95:	jecxz  0x415cc9
  415c97:	and    BYTE PTR [ebx+0x7651ffae],0x73
  415c9e:	and    BYTE PTR [eax+0x28],bl
  415ca1:	mov    BYTE PTR [edx+0x7d54e8a7],dh
  415ca7:	push   es
  415ca8:	jecxz  0x415c35
  415caa:	sbb    bh,bl
  415cac:	imul   BYTE PTR [ebx-0x66]
  415caf:	adc    DWORD PTR [ecx+0x80d0b94],edi
  415cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb6:	mov    ds:0xd2bae97,al
  415cbb:	(bad)  
  415cbc:	and    cl,BYTE PTR [edi]
  415cbe:	shrd   DWORD PTR [edx-0x59],eax,0xc9
  415cc3:	ror    BYTE PTR [ecx+eiz*4+0x73],cl
  415cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc8:	sbb    ch,BYTE PTR [eax+0x5d]
  415ccb:	mov    al,0x6b
  415ccd:	aas    
  415cce:	jg     0x415cd2
  415cd0:	fld    DWORD PTR [ecx-0x36a3c853]
  415cd6:	adc    BYTE PTR [ecx+0x1d],dl
  415cd9:	stos   BYTE PTR es:[edi],al
  415cda:	adc    al,0x7e
  415cdc:	int3   
  415cdd:	lea    ebp,[ecx-0x6968743d]
  415ce3:	xchg   esi,eax
  415ce4:	adc    eax,ebx
  415ce6:	pop    edi
  415ce7:	cli    
  415ce8:	jne    0x415cdb
  415cea:	add    BYTE PTR [ebx-0x14283f9a],bh
  415cf0:	pop    edi
  415cf1:	cmp    DWORD PTR [ebx+0x3540baa2],edi
  415cf7:	pop    edi
  415cf8:	sbb    al,0xca
  415cfa:	mov    dh,0xf3
  415cfc:	mov    esp,0x1c1611e
  415d01:	add    DWORD PTR [eax],ebp
  415d03:	add    al,0xf0
  415d05:	mov    ebp,0xed6d299f
  415d0a:	test   al,0xe4
  415d0c:	and    ebx,DWORD PTR [ecx]
  415d0e:	ficom  DWORD PTR [ebx]
  415d10:	sbb    dl,bl
  415d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d13:	loopne 0x415d4d
  415d15:	cmp    ecx,DWORD PTR [edx-0x71]
  415d18:	cs fwait
  415d1a:	inc    ecx
  415d1b:	ss inc edx
  415d1d:	stos   BYTE PTR es:[edi],al
  415d1e:	push   ebp
  415d1f:	ds jp  0x415d2f
  415d22:	sbb    eax,0x1d66eb35
  415d27:	pop    ds
  415d28:	popf   
  415d29:	aas    
  415d2a:	inc    esp
  415d2b:	xchg   ecx,eax
  415d2c:	xchg   esi,eax
  415d2d:	jge    0x415cd2
  415d2f:	cli    
  415d30:	sbb    eax,0x90bae4a3
  415d35:	pop    ecx
  415d36:	mov    ecx,0xa6689bfa
  415d3b:	test   BYTE PTR [ebp-0x25feef96],dh
  415d41:	inc    edi
  415d42:	sub    al,0xda
  415d44:	scas   eax,DWORD PTR es:[edi]
  415d45:	dec    ecx
  415d46:	dec    esi
  415d47:	hlt    
  415d48:	fs dec esp
  415d4a:	jo     0x415d90
  415d4c:	and    al,0x2
  415d4e:	mov    esp,0xc33d388b
  415d53:	test   eax,0x8b7fbf99
  415d58:	aas    
  415d59:	out    0x4c,al
  415d5b:	mov    dl,0x80
  415d5d:	xchg   edx,ebp
  415d5f:	jmp    0x415da1
  415d61:	fsubp  st(1),st
  415d63:	adc    al,0xae
  415d65:	push   edi
  415d66:	add    dl,BYTE PTR [edx+0x19ced620]
  415d6c:	fbstp  TBYTE PTR [edi-0x1]
  415d6f:	mov    edx,0x19bac6a4
  415d74:	xchg   ebp,eax
  415d75:	fdiv   DWORD PTR [esi-0x41]
  415d78:	icebp  
  415d79:	fadd   DWORD PTR [eax+0x64]
  415d7c:	ret    0xb6eb
  415d7f:	or     eax,0x245e1845
  415d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d85:	mov    dh,BYTE PTR [eax+eiz*8-0x412be0a2]
  415d8c:	or     eax,0xbebd92df
  415d91:	lock data16 jb 0x415d24
  415d95:	ret    
  415d96:	pop    ss
  415d97:	push   0xbb7ce0fd
  415d9c:	ins    BYTE PTR es:[edi],dx
  415d9d:	xchg   ebx,eax
  415d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d9f:	push   ds
  415da0:	adc    dh,ah
  415da2:	shr    DWORD PTR [ecx-0x2f],0xf5
  415da6:	popf   
  415da7:	push   ebp
  415da8:	cs shl ebp,0x8b
  415dac:	mov    eax,ds:0x1f7fb460
  415db1:	rcl    ebx,0x4
  415db4:	neg    bl
  415db6:	popa   
  415db7:	pop    ds
  415db8:	aas    
  415db9:	popa   
  415dba:	mov    bl,0x9e
  415dbc:	int    0x11
  415dbe:	xchg   DWORD PTR [edi-0xe],ebx
  415dc1:	fisttp WORD PTR [eax-0x58]
  415dc4:	bound  edx,QWORD PTR [edx+0x2ab26d55]
  415dca:	icebp  
  415dcb:	pop    ebp
  415dcc:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dce:	add    eax,0xe7c77fe8
  415dd3:	ficomp DWORD PTR [eax+0x39]
  415dd6:	dec    ebx
  415dd7:	(bad)  
  415dd8:	aaa    
  415dd9:	dec    ebp
  415dda:	aam    0x94
  415ddc:	fwait
  415ddd:	xchg   ecx,eax
  415dde:	inc    edi
  415ddf:	xchg   BYTE PTR [edx+eax*8+0x3233f7a9],ah
  415de6:	(bad)  
  415de7:	retf   
  415de8:	sub    al,0x71
  415dea:	dec    edx
  415deb:	and    al,BYTE PTR es:[esi]
  415dee:	mov    ah,0x9e
  415df0:	jecxz  0x415d82
  415df2:	or     BYTE PTR [ecx],cl
  415df4:	push   ecx
  415df5:	imul   edi,eax,0x7f
  415df8:	scas   al,BYTE PTR es:[edi]
  415df9:	rcr    DWORD PTR [ebx+ebp*4-0x19912d41],0x5b
  415e01:	in     al,dx
  415e02:	imul   esp,DWORD PTR [eax-0x7a],0xffffffbd
  415e06:	popa   
  415e07:	inc    ebx
  415e08:	jnp    0x415dbf
  415e0a:	or     BYTE PTR [edx-0x3a],dh
  415e0d:	sub    eax,0xce801b00
  415e12:	inc    ecx
  415e13:	mov    ds:0xb23301,eax
  415e18:	push   esp
  415e19:	test   BYTE PTR [eax+0x21],ah
  415e1c:	in     al,dx
  415e1d:	daa    
  415e1e:	jge    0x415e32
  415e20:	in     eax,0x7a
  415e22:	xchg   ecx,eax
  415e23:	dec    esp
  415e24:	mov    cl,0x22
  415e26:	push   ebp
  415e27:	mov    ch,0xaf
  415e29:	inc    eax
  415e2a:	inc    esi
  415e2b:	js     0x415e3f
  415e2d:	neg    DWORD PTR [ebx]
  415e2f:	mov    esp,0xe9f52cfc
  415e34:	jge    0x415e77
  415e36:	push   0xfffffffe
  415e38:	mov    es:0x894441c4,eax
  415e3e:	xor    edx,DWORD PTR [esi+0x61421afb]
  415e44:	fsub   QWORD PTR [esi+0x5]
  415e47:	sbb    al,0x66
  415e49:	cmp    al,0xfb
  415e4b:	mov    bh,0x4d
  415e4d:	test   BYTE PTR [esi-0x4d],cl
  415e50:	pop    ds
  415e51:	je     0x415e36
  415e53:	enter  0x6a80,0xd0
  415e57:	mov    al,ds:0x4cdf92b0
  415e5c:	xchg   esi,eax
  415e5d:	and    al,0xb4
  415e5f:	adc    eax,0x257ab426
  415e64:	inc    eax
  415e65:	pushw  ds
  415e67:	push   ds
  415e68:	adc    eax,0x22adf3e
  415e6d:	push   cs
  415e6e:	ins    DWORD PTR es:[edi],dx
  415e6f:	fucomi st,st(3)
  415e71:	imul   esi,DWORD PTR [esi],0x3b
  415e74:	inc    eax
  415e75:	and    DWORD PTR [edx],esp
  415e77:	dec    esp
  415e78:	sub    edx,ebx
  415e7a:	sub    ah,BYTE PTR [esp+edx*1]
  415e7d:	icebp  
  415e7e:	and    DWORD PTR [edx],esp
  415e80:	pop    ebp
  415e81:	(bad)  
  415e82:	xchg   ebp,eax
  415e83:	in     eax,0x56
  415e85:	cwde   
  415e86:	xor    al,0xa2
  415e88:	pop    edx
  415e89:	pop    edx
  415e8a:	das    
  415e8b:	repz cmp cl,0xe
  415e8f:	sub    BYTE PTR [ebp-0x78],0xb4
  415e93:	bound  ebp,QWORD PTR [esi+0x72]
  415e96:	outs   dx,BYTE PTR ds:[esi]
  415e97:	add    edi,eax
  415e99:	fadd   DWORD PTR [edx+edi*2+0x1]
  415e9d:	icebp  
  415e9e:	sub    dl,dh
  415ea0:	div    BYTE PTR [ecx]
  415ea2:	test   BYTE PTR [edx],ah
  415ea4:	sbb    ch,al
  415ea6:	imul   ebx,DWORD PTR [esi-0x1cdd9d61],0x15
  415ead:	xchg   BYTE PTR [esi],cl
  415eaf:	xchg   esp,eax
  415eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb1:	xor    edi,DWORD PTR [edx-0x53375522]
  415eb7:	inc    ebp
  415eb8:	aaa    
  415eb9:	mov    ebp,0x8cc49521
  415ebe:	test   al,0x36
  415ec0:	inc    ebx
  415ec1:	out    dx,al
  415ec2:	call   0xbe1317c4
  415ec7:	mov    ah,0xd
  415ec9:	push   edi
  415eca:	stos   DWORD PTR es:[edi],eax
  415ecb:	sub    esi,DWORD PTR [edx+0x31]
  415ece:	and    DWORD PTR [eax],esp
  415ed0:	add    eax,esp
  415ed2:	lahf   
  415ed3:	mov    eax,0x2309b7e5
  415ed8:	or     eax,0x2fe0510f
  415edd:	frndint 
  415edf:	xchg   ebx,eax
  415ee0:	xor    BYTE PTR [ecx+0x46],ah
  415ee3:	sub    BYTE PTR [ecx+ecx*4-0x53e15529],ah
  415eea:	add    al,0xe7
  415eec:	push   es
  415eed:	repnz mov cl,0x78
  415ef0:	addr16 (bad) 
  415ef2:	stc    
  415ef3:	jae    0x415efa
  415ef5:	mov    eax,0xf59800
  415efa:	pusha  
  415efb:	sbb    dl,BYTE PTR [ebx-0x62381b62]
  415f01:	mov    eax,ds:0xcb728fa0
  415f06:	pusha  
  415f07:	mov    ?,edi
  415f09:	sbb    bl,BYTE PTR [esi+eax*4]
  415f0c:	aam    0x79
  415f0e:	lds    eax,FWORD PTR [ebx-0x65d1decd]
  415f14:	cdq    
  415f15:	xchg   ebp,eax
  415f16:	ins    BYTE PTR es:[edi],dx
  415f17:	test   eax,0x30cb1d55
  415f1c:	add    dl,dh
  415f1e:	scas   al,BYTE PTR es:[edi]
  415f1f:	out    0x64,al
  415f21:	xchg   esp,esi
  415f23:	push   eax
  415f24:	mov    ds:0x4c6b5312,eax
  415f29:	std    
  415f2a:	mov    ds:0x8155344,al
  415f2f:	leave  
  415f30:	mov    bl,0xbc
  415f32:	aas    
  415f33:	mov    DWORD PTR [ebx],ebx
  415f35:	mov    al,0x35
  415f37:	and    al,0x7f
  415f39:	and    edx,esp
  415f3b:	test   DWORD PTR [esp+ebx*2+0x10],eax
  415f3f:	jb     0x415f54
  415f41:	aas    
  415f42:	std    
  415f43:	and    eax,0x267d54ba
  415f48:	inc    edi
  415f49:	imul   edi,DWORD PTR [esi-0x13141481],0xffffffce
  415f50:	push   eax
  415f51:	or     dh,al
  415f53:	shr    BYTE PTR ds:0x3c52e95f,0x77
  415f5a:	and    al,0xf0
  415f5c:	loopne 0x415f0e
  415f5e:	lods   al,BYTE PTR ds:[esi]
  415f5f:	mov    ds:0xc926dfad,al
  415f64:	or     ch,BYTE PTR [edx+edx*2]
  415f67:	(bad)  
  415f68:	mov    ebx,0x9ed3b538
  415f6d:	gs mov ebx,0x89d463db
  415f73:	mov    dl,BYTE PTR [esi-0x11e48c9a]
  415f79:	ja     0x415f5b
  415f7b:	aad    0xc8
  415f7d:	gs jecxz 0x415ff6
  415f80:	and    eax,edx
  415f82:	std    
  415f83:	mov    edi,0x66a49aea
  415f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f89:	jno    0x415f4e
  415f8b:	inc    esp
  415f8c:	dec    esi
  415f8d:	mov    al,ds:0x62eb2590
  415f92:	in     al,dx
  415f93:	out    0x6a,eax
  415f95:	pop    ebx
  415f96:	and    BYTE PTR [eax+0x51],bl
  415f99:	cdq    
  415f9a:	mov    ds:0x905304fd,eax
  415f9f:	mov    ds:0xf3e75aa8,al
  415fa4:	sub    DWORD PTR [esi],edi
  415fa6:	mov    al,ds:0xbb4cd887
  415fab:	mov    edx,0x90f5d49c
  415fb0:	outs   dx,DWORD PTR ds:[esi]
  415fb1:	pop    ebp
  415fb2:	xlat   BYTE PTR ds:[ebx]
  415fb3:	loop   0x415f3e
  415fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fb6:	push   es
  415fb7:	xor    edi,esp
  415fb9:	and    al,0xff
  415fbb:	pushf  
  415fbc:	xor    BYTE PTR [edx+0x48f84664],ch
  415fc2:	cmp    al,0x12
  415fc4:	add    ch,al
  415fc6:	mov    edi,ebp
  415fc8:	sbb    BYTE PTR [esi+0xaaf61b7],bh
  415fce:	leave  
  415fcf:	outs   dx,BYTE PTR ds:[esi]
  415fd0:	dec    esi
  415fd1:	ja     0x415f65
  415fd3:	inc    eax
  415fd4:	cdq    
  415fd5:	hlt    
  415fd6:	pop    ebx
  415fd7:	es loop 0x415f60
  415fda:	enter  0x9ed4,0xd1
  415fde:	mov    WORD PTR [edx-0x79059d19],es
  415fe4:	(bad)  
  415fe5:	mov    edi,0xff8d61d5
  415fea:	pop    ss
  415feb:	pop    ebp
  415fec:	and    DWORD PTR [ebp+0x2aa554ad],ebx
  415ff2:	dec    ecx
  415ff3:	sbb    ebp,DWORD PTR [ebx+0x76dfa4bb]
  415ff9:	popf   
  415ffa:	sbb    ebx,ebx
  415ffc:	jae    0x41601a
  415ffe:	and    al,0x87
  416000:	test   BYTE PTR ds:0x2b3fa432,bh
  416006:	xor    edx,ebp
  416008:	out    0x8e,eax
  41600a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41600b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41600c:	enter  0x9f0b,0xc2
  416010:	es test eax,0xb550864
  416016:	outs   dx,DWORD PTR ds:[esi]
  416017:	mov    dh,0xc5
  416019:	dec    ebx
  41601a:	out    dx,eax
  41601b:	mov    edi,0xb6947cba
  416020:	adc    ebx,DWORD PTR [ecx-0x80]
  416023:	repz xchg ebx,eax
  416025:	lods   al,BYTE PTR ds:[esi]
  416026:	inc    ebp
  416027:	adc    eax,DWORD PTR [bx+si+0x2d00]
  41602c:	sbb    DWORD PTR [ebx*8+0x6a7fdca5],ebp
  416033:	or     al,0xd7
  416035:	ret    
  416036:	jge    0x415fc3
  416038:	and    al,0x60
  41603a:	scas   eax,DWORD PTR es:[edi]
  41603b:	xor    eax,0xca9a8f09
  416040:	cld    
  416041:	jo     0x415fff
  416043:	and    dl,BYTE PTR [esi+edi*4+0x455e561a]
  41604a:	sub    edi,DWORD PTR [ecx]
  41604c:	aas    
  41604d:	sub    DWORD PTR [edx+0x48838d79],ecx
  416053:	sbb    al,0x65
  416055:	push   ds
  416056:	mov    bh,0x9e
  416058:	pop    ss
  416059:	sti    
  41605a:	jmp    0xc42f:0xfe192d0b
  416061:	mov    ds:0xa16a4872,al
  416066:	jecxz  0x41603d
  416068:	out    0x60,eax
  41606a:	cld    
  41606b:	xchg   DWORD PTR [ebx],esp
  41606d:	out    0x1e,eax
  41606f:	inc    ecx
  416070:	add    DWORD PTR [edi],ebx
  416072:	lahf   
  416073:	mov    cl,0xfe
  416075:	sbb    bh,cl
  416077:	aaa    
  416078:	popa   
  416079:	mov    dh,0x81
  41607b:	mov    BYTE PTR [ecx+0x4a],0xea
  41607f:	and    bh,ah
  416081:	repz inc eax
  416083:	mov    esi,0x318d1613
  416088:	pop    ebx
  416089:	cmp    cl,cl
  41608b:	jecxz  0x416058
  41608d:	jl     0x41604f
  41608f:	cmp    edi,eax
  416091:	sub    ch,ch
  416093:	retf   
  416094:	adc    cl,BYTE PTR [edi-0x4d694c7f]
  41609a:	fsub   QWORD PTR [esi-0x3c3a3959]
  4160a0:	jecxz  0x416036
  4160a2:	sub    ecx,DWORD PTR [ecx-0x205ad35a]
  4160a8:	gs clc 
  4160aa:	stos   BYTE PTR es:[edi],al
  4160ab:	dec    ecx
  4160ac:	stos   DWORD PTR es:[edi],eax
  4160ad:	popa   
  4160ae:	mov    DWORD PTR [eax-0x1a],esp
  4160b1:	outs   dx,DWORD PTR ds:[esi]
  4160b2:	add    BYTE PTR [eiz*8+0x333606ae],dh
  4160b9:	inc    ebp
  4160ba:	dec    ebp
  4160bb:	retf   0xa0e8
  4160be:	mov    cl,0xaa
  4160c0:	and    eax,0x93189a3e
  4160c5:	jge    0x4160fa
  4160c7:	xchg   edx,eax
  4160c8:	and    eax,0xb0ec8e14
  4160cd:	mov    bl,al
  4160cf:	fidivr DWORD PTR [ecx]
  4160d1:	push   ss
  4160d2:	std    
  4160d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160d4:	aas    
  4160d5:	lahf   
  4160d6:	iret   
  4160d7:	mov    al,0x35
  4160d9:	adc    BYTE PTR ds:[eax-0x11],ch
  4160dd:	sbb    esp,esp
  4160df:	aam    0x85
  4160e1:	jno    0x416146
  4160e3:	rcr    BYTE PTR [edi],1
  4160e5:	mov    es,WORD PTR [esi-0x37331254]
  4160eb:	push   ebx
  4160ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ed:	mov    ebp,0xd2ee31ed
  4160f2:	xchg   ebp,ecx
  4160f4:	out    dx,al
  4160f5:	(bad)
  4160f9:	push   ecx
  4160fa:	or     DWORD PTR [eax],0x79
  4160fd:	xor    eax,0x9a58278a
  416102:	mov    esp,0x15405023
  416107:	or     eax,0xd8512f0b
  41610c:	test   eax,0xb722265b
  416111:	lods   al,BYTE PTR ds:[esi]
  416112:	loopne 0x4160c8
  416114:	mov    dl,0x7b
  416116:	jo     0x4160c3
  416118:	int    0x6a
  41611a:	mov    al,ds:0xe7bf5801
  41611f:	data16 hlt 
  416121:	repnz pop esi
  416123:	mov    cl,0x6c
  416125:	shl    DWORD PTR [esi],cl
  416127:	jae    0x416195
  416129:	aad    0xa6
  41612b:	mov    ebx,0x16af4150
  416130:	pop    ecx
  416131:	cmp    bl,BYTE PTR [ecx]
  416133:	retf   
  416134:	call   0xf2e8:0xd98d7409
  41613b:	fisttp QWORD PTR [edx+0x5d455ea7]
  416141:	dec    eax
  416142:	popf   
  416143:	(bad)  
  416144:	clc    
  416145:	retf   0xfb55
  416148:	dec    esi
  416149:	js     0x41615b
  41614b:	and    eax,0x256958b1
  416150:	lds    esi,FWORD PTR [ebx]
  416152:	nop
  416153:	jecxz  0x4160d9
  416155:	out    0x97,al
  416157:	mov    ch,0x33
  416159:	ins    BYTE PTR es:[edi],dx
  41615a:	fild   DWORD PTR [ebp+0x38]
  41615d:	xor    DWORD PTR ds:[edx+0x2e927bbd],ebx
  416164:	repz xor esi,ecx
  416167:	and    ah,BYTE PTR [esi-0x69]
  41616a:	sbb    eax,0x188468ee
  41616f:	cmc    
  416170:	mov    cl,BYTE PTR [ebx-0x1d11bd3c]
  416176:	sar    DWORD PTR [ecx+0x39],1
  416179:	outs   dx,BYTE PTR ds:[esi]
  41617a:	xor    eax,DWORD PTR [ecx-0xd]
  41617d:	mov    bl,0xf3
  41617f:	pusha  
  416180:	jns    0x416105
  416182:	imul   ebx,DWORD PTR [ebx],0xb7c89707
  416188:	sbb    BYTE PTR [eax],bh
  41618a:	inc    eax
  41618b:	jno    0x416161
  41618d:	rcl    dh,0x22
  416190:	ds add al,0x64
  416193:	or     edx,DWORD PTR [edi-0x70]
  416196:	sub    BYTE PTR [edx-0x7c2fdaf9],ah
  41619c:	js     0x416121
  41619e:	aam    0x5b
  4161a0:	fs push ebx
  4161a2:	loopne 0x4161d3
  4161a4:	adc    eax,0x45ccc704
  4161a9:	je     0x416166
  4161ab:	inc    edx
  4161ac:	ds addr16 pop eax
  4161af:	mov    ds:0xbd143324,al
  4161b4:	in     eax,0x89
  4161b6:	(bad)  
  4161b7:	test   DWORD PTR [ebp+0x66e0a78b],0x78d76e5e
  4161c1:	mov    ds:0x541135a8,al
  4161c6:	adc    DWORD PTR ds:0x8238335,ebp
  4161cc:	push   esi
  4161cd:	movzx  ecx,BYTE PTR [eax+0x38]
  4161d1:	inc    ebx
  4161d2:	test   BYTE PTR [esi],bh
  4161d4:	sbb    eax,0x918c49e1
  4161d9:	ror    DWORD PTR [ebp-0x1],0x28
  4161dd:	shl    BYTE PTR [ebp-0x1947ac4b],1
  4161e3:	ror    DWORD PTR [eax],0xf0
  4161e6:	fidivr DWORD PTR [eax+0x41]
  4161e9:	mov    eax,ds:0x453436f5
  4161ee:	loop   0x416204
  4161f0:	mov    ss,WORD PTR [ebp+0xf732d1a]
  4161f6:	pop    edi
  4161f7:	push   0xe7d894dc
  4161fc:	outs   dx,BYTE PTR ds:[esi]
  4161fd:	xchg   esp,eax
  4161fe:	mov    al,0xff
  416200:	aam    0xf9
  416202:	xor    al,0x15
  416204:	bound  eax,QWORD PTR ds:0xf4a6560c
  41620a:	enter  0x81e2,0x91
  41620e:	gs mov bh,0xbe
  416211:	push   cs
  416212:	mov    edx,DWORD PTR [esp]
  416215:	cmp    eax,0xa402b1b7
  41621a:	enter  0xdfe3,0x29
  41621e:	int    0x38
  416220:	inc    ebx
  416221:	nop
  416222:	gs pop edx
  416224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416225:	leave  
  416226:	cdq    
  416227:	das    
  416228:	jle    0x416233
  41622a:	jb     0x416265
  41622c:	mov    ch,0xce
  41622e:	jbe    0x416297
  416230:	(bad)  
  416231:	inc    ebp
  416232:	fcomp  QWORD PTR [ebp-0x24]
  416235:	dec    eax
  416236:	cmp    al,0x1f
  416238:	pushf  
  416239:	mov    esi,0x3a21d59b
  41623e:	arpl   WORD PTR [esi+ebp*8-0x2972a943],bp
  416245:	cli    
  416246:	outs   dx,DWORD PTR ds:[esi]
  416247:	outs   dx,DWORD PTR ss:[esi]
  416249:	mov    ?,esp
  41624b:	jle    0x4161ec
  41624d:	sahf   
  41624e:	cmp    BYTE PTR [ebp-0x63],0x69
  416252:	data16 and al,0x45
  416255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416256:	pop    ds
  416257:	ss xchg edi,eax
  416259:	arpl   WORD PTR [esi],si
  41625b:	ds and eax,0x9f4578cd
  416261:	out    dx,eax
  416262:	and    esi,ebx
  416264:	jecxz  0x4162a5
  416266:	shr    bh,cl
  416268:	cmp    DWORD PTR [esi+0x103d0fb6],edi
  41626e:	jbe    0x416254
  416270:	pushf  
  416271:	les    edx,FWORD PTR [edx-0x76d9fdf2]
  416277:	es scas eax,DWORD PTR es:[edi]
  416279:	les    esi,FWORD PTR [ecx+0x381c4812]
  41627f:	and    ah,BYTE PTR [edx+edi*2+0x6d5a5ac4]
  416286:	and    ch,ch
  416288:	data16 or bl,BYTE PTR [ebx+edx*1+0x15696f9c]
  416290:	adc    dh,dh
  416292:	data16 in al,dx
  416294:	(bad)  
  416295:	icebp  
  416296:	mov    DWORD PTR [edx+0x66a089fb],ebp
  41629c:	scas   al,BYTE PTR es:[edi]
  41629d:	ins    DWORD PTR es:[edi],dx
  41629e:	aas    
  41629f:	fwait
  4162a0:	xor    DWORD PTR [ebp+0x11],ebp
  4162a3:	mov    ?,WORD PTR [ecx-0x24]
  4162a6:	and    DWORD PTR gs:[edx+ecx*2-0x1499186c],esi
  4162ae:	ja     0x4162ec
  4162b0:	repnz inc edx
  4162b2:	ret    0xe27f
  4162b5:	pop    esi
  4162b6:	cld    
  4162b7:	adc    BYTE PTR [edx],al
  4162b9:	jge    0x416317
  4162bb:	cmp    ecx,DWORD PTR [eax+0x774e2783]
  4162c1:	mov    WORD PTR [ebp+0x68],?
  4162c4:	mov    bl,0x76
  4162c6:	xchg   ebp,eax
  4162c7:	nop
  4162c8:	jbe    0x41627f
  4162ca:	dec    edi
  4162cb:	push   edi
  4162cc:	cwde   
  4162cd:	dec    ebp
  4162ce:	ror    DWORD PTR [edx+0x30],1
  4162d1:	out    dx,eax
  4162d2:	(bad)  
  4162d3:	outs   dx,BYTE PTR ds:[esi]
  4162d4:	adc    eax,0x433c781e
  4162d9:	inc    edi
  4162da:	pop    ds
  4162db:	les    edx,FWORD PTR [ebp+0x78535b0a]
  4162e1:	retf   0xd10e
  4162e4:	inc    eax
  4162e5:	jmp    0xa661:0xc53851b3
  4162ec:	mov    ds:0x94343011,eax
  4162f1:	inc    esi
  4162f2:	mov    eax,0x147c495d
  4162f7:	stos   DWORD PTR es:[edi],eax
  4162f8:	pop    eax
  4162f9:	(bad)  
  4162fa:	adc    eax,0x317fda4e
  4162ff:	xchg   BYTE PTR [edi],ch
  416301:	pop    ebp
  416302:	es xchg ebx,eax
  416304:	gs iret 
  416306:	add    DWORD PTR [edi],edi
  416308:	data16 aaa 
  41630a:	sub    al,0xb7
  41630c:	stc    
  41630d:	les    ebp,FWORD PTR [eax+eiz*8-0x33]
  416311:	add    DWORD PTR [esi+0x1b],0x16fa5ce7
  416318:	hlt    
  416319:	outs   dx,BYTE PTR ds:[esi]
  41631a:	or     al,0x96
  41631c:	pop    ss
  41631d:	cwde   
  41631e:	call   0x1db54b1f
  416323:	or     eax,0xce788a4f
  416328:	fild   QWORD PTR [esi]
  41632a:	mov    dh,0xac
  41632c:	or     dl,bl
  41632e:	fld    st(3)
  416330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416331:	(bad)  
  416332:	enter  0x70d0,0xfb
  416336:	popa   
  416337:	sbb    eax,DWORD PTR [ebx+edx*1-0x4015e190]
  41633e:	arpl   WORD PTR [ecx-0x7255ccbb],di
  416344:	xor    al,0x5c
  416346:	mov    esi,0x5ae47e4
  41634b:	lods   eax,DWORD PTR ds:[esi]
  41634c:	retf   0x60f0
  41634f:	sti    
  416350:	jg     0x4163ae
  416352:	dec    esi
  416353:	jnp    0x41635f
  416355:	pavgw  mm4,QWORD PTR [ecx+0x10]
  416359:	sbb    eax,0x65b09ddf
  41635e:	lock ds push ds
  416361:	and    BYTE PTR [esi],ch
  416363:	aam    0x68
  416365:	addr16 jae 0x4163e2
  416368:	cmc    
  416369:	sti    
  41636a:	dec    esi
  41636b:	lods   al,BYTE PTR ds:[si]
  41636d:	jmp    0xbcd57a75
  416372:	cwde   
  416373:	jp     0x41635f
  416375:	jg     0x4163b9
  416377:	call   0x33c2:0x8579e320
  41637e:	adc    ebp,0x14
  416381:	(bad)  
  416382:	jb     0x4163a8
  416384:	jmp    0xcffba395
  416389:	and    al,0xec
  41638b:	je     0x41633a
  41638d:	inc    ecx
  41638e:	pop    ds
  41638f:	je     0x416376
  416391:	or     ebp,DWORD PTR [edi]
  416393:	xor    eax,DWORD PTR [edx-0x4e79ddc9]
  416399:	shl    BYTE PTR [ecx-0x246cc1fb],cl
  41639f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163a0:	mov    esp,esi
  4163a2:	and    bl,al
  4163a4:	pushf  
  4163a5:	xor    esi,eax
  4163a7:	inc    esp
  4163a8:	scas   al,BYTE PTR es:[edi]
  4163a9:	sbb    ebx,DWORD PTR [ebp+esi*8-0x5080c5fa]
  4163b0:	pop    esi
  4163b1:	or     dh,BYTE PTR [eax]
  4163b3:	loope  0x416419
  4163b5:	inc    ebp
  4163b6:	sub    ebp,ebx
  4163b8:	retf   
  4163b9:	leave  
  4163ba:	cmp    esi,DWORD PTR ds:[esi]
  4163bd:	nop
  4163be:	repnz fidiv WORD PTR [ecx+ebp*4+0x60b3494e]
  4163c6:	pop    esp
  4163c7:	sub    DWORD PTR [esi],eax
  4163c9:	jg     0x41640a
  4163cb:	daa    
  4163cc:	pusha  
  4163cd:	and    edx,ebp
  4163cf:	jmp    0xcb84:0xf90dac1
  4163d6:	pop    esi
  4163d7:	ffreep st(0)
  4163d9:	jns    0x41636a
  4163db:	lds    ebx,FWORD PTR [esi+0x13]
  4163de:	in     al,0xd3
  4163e0:	arpl   WORD PTR [eax-0x1658a43e],dx
  4163e6:	pushf  
  4163e7:	shr    esi,cl
  4163e9:	pop    esi
  4163ea:	mov    esp,0x981b2993
  4163ef:	xchg   edi,eax
  4163f0:	es test al,0x13
  4163f3:	and    al,0x19
  4163f5:	xchg   BYTE PTR [edx],bl
  4163f7:	int3   
  4163f8:	lock leave 
  4163fa:	in     eax,dx
  4163fb:	mov    eax,DWORD PTR [edx-0xab89b9d]
  416401:	dec    ebx
  416402:	cmp    ebx,esi
  416404:	ins    BYTE PTR es:[edi],dx
  416405:	or     BYTE PTR [esi+0x50b3493e],cl
  41640b:	sub    eax,0xf7631fc4
  416410:	in     eax,dx
  416411:	sub    esi,DWORD PTR [esi+0xf4f9806]
  416417:	adc    DWORD PTR [ecx],edi
  416419:	mov    cl,0x83
  41641b:	sub    DWORD PTR [esi-0x63],edx
  41641e:	repz ror edx,cl
  416421:	call   FWORD PTR [edx+eiz*1+0x3f5c534f]
  416428:	shl    BYTE PTR [eax+0x63],1
  41642b:	xor    edx,esi
  41642d:	xchg   ebp,eax
  41642e:	mov    al,0xdd
  416430:	pop    ss
  416431:	push   esi
  416432:	es sti 
  416434:	not    BYTE PTR [eax+ebx*4]
  416437:	pop    DWORD PTR ds:0x79212bed
  41643d:	push   esi
  41643e:	dec    esi
  41643f:	sbb    al,ah
  416441:	xor    ah,dh
  416443:	out    dx,eax
  416444:	ret    
  416445:	adc    eax,ebp
  416447:	mov    ds:0x4954ecf7,eax
  41644c:	add    dh,cl
  41644e:	popa   
  41644f:	loopne 0x41643d
  416451:	jmp    FWORD PTR [eax]
  416453:	jle    0x4164c6
  416455:	mov    ch,0xec
  416457:	push   edx
  416458:	test   DWORD PTR [ecx-0x53fe557d],ebx
  41645e:	mov    BYTE PTR [eax],ch
  416460:	outs   dx,DWORD PTR ds:[esi]
  416461:	mov    WORD PTR [edx-0x5cb6ac48],ss
  416467:	fsub   DWORD PTR [ebx+0x5bbe8adc]
  41646d:	adc    DWORD PTR [edx+edx*1+0x4284e279],eax
  416474:	mov    BYTE PTR [edx+0x9d14dc7],bh
  41647a:	sbb    al,0xa1
  41647c:	jle    0x416466
  41647e:	je     0x416427
  416480:	sub    BYTE PTR [esi],dl
  416482:	test   DWORD PTR [eax+0x74f14303],ecx
  416488:	sub    eax,0x9df21138
  41648d:	xor    bl,BYTE PTR [edi+0x6b]
  416490:	dec    ebx
  416491:	mov    al,ds:0xb9e2f835
  416496:	jbe    0x41648a
  416498:	aad    0xef
  41649a:	cli    
  41649b:	jmp    0x416426
  41649d:	mov    ch,0x0
  41649f:	(bad)  
  4164a0:	rcl    DWORD PTR [ecx],1
  4164a2:	push   esi
  4164a3:	das    
  4164a4:	push   ds
  4164a5:	(bad)  
  4164a6:	adc    cl,BYTE PTR [ecx-0x78]
  4164a9:	sub    DWORD PTR [esi],esp
  4164ab:	fcmovnu st,st(5)
  4164ad:	imul   edx,DWORD PTR [esi-0x148c0b4],0x37dce53b
  4164b7:	mov    ebp,0xacdb1dc9
  4164bc:	xchg   ebp,eax
  4164bd:	or     ch,BYTE PTR [esi-0x5b331aa5]
  4164c3:	xchg   ebp,eax
  4164c4:	out    0xfd,al
  4164c6:	or     al,0x21
  4164c8:	js     0x416527
  4164ca:	hlt    
  4164cb:	xchg   ecx,eax
  4164cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164cd:	dec    esp
  4164ce:	pop    ecx
  4164cf:	gs (bad) 
  4164d2:	ficom  DWORD PTR [ebx-0x62]
  4164d5:	int3   
  4164d6:	jne    0x416469
  4164d8:	jbe    0x41647a
  4164da:	and    al,0xa7
  4164dc:	mov    edx,0x6a1633ca
  4164e1:	xchg   ebx,eax
  4164e2:	scas   al,BYTE PTR es:[edi]
  4164e3:	push   ecx
  4164e4:	jnp    0x416563
  4164e6:	add    ebx,eax
  4164e8:	es jae 0x41646e
  4164eb:	sub    eax,0xe59debec
  4164f0:	xchg   BYTE PTR [edx+0x10],ch
  4164f3:	in     al,0xe6
  4164f5:	and    BYTE PTR [eax+0x74],ah
  4164f8:	rcl    al,0x19
  4164fb:	loop   0x416568
  4164fd:	frstpm(287 only) 
  4164ff:	gs sbb eax,0xc1ec941d
  416505:	loop   0x416519
  416507:	cld    
  416508:	jae    0x416537
  41650a:	mov    al,0xa6
  41650c:	push   0x70102e9d
  416511:	jp     0x416514
  416513:	pop    edi
  416514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416515:	dec    ecx
  416516:	sbb    eax,0xdd5dfda3
  41651b:	adc    DWORD PTR [esp+esi*8-0x44],esp
  41651f:	lahf   
  416520:	call   0x8051736a
  416525:	shr    DWORD PTR [edx],0xc1
  416528:	test   esp,edx
  41652a:	pop    edx
  41652b:	stc    
  41652c:	or     DWORD PTR [eax+edx*1+0x7cb1070f],edi
  416533:	addr16 dec ebx
  416535:	dec    esi
  416536:	push   ebp
  416537:	loop   0x416548
  416539:	jae    0x4165a4
  41653b:	(bad)  
  41653c:	out    0x96,al
  41653e:	ins    DWORD PTR es:[edi],dx
  41653f:	cmp    al,dl
  416541:	and    bl,ch
  416543:	add    BYTE PTR [eax+ebx*8-0x41],0xa2
  416548:	xchg   ebx,eax
  416549:	inc    ecx
  41654a:	pop    ebp
  41654b:	iret   
  41654c:	stos   BYTE PTR es:[edi],al
  41654d:	in     al,dx
  41654e:	push   edi
  41654f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416550:	stc    
  416551:	aas    
  416552:	or     al,BYTE PTR [ebp-0x5743e283]
  416558:	mov    cl,0x27
  41655a:	mov    ds:0x25bcf03e,eax
  41655f:	xchg   ebx,eax
  416560:	(bad)
  416565:	loopne 0x416561
  416567:	mov    esp,0x404dda48
  41656c:	arpl   WORD PTR [ebx+ebx*2],di
  41656f:	push   ss
  416570:	ror    DWORD PTR [esi+0x5deb8d3c],0xeb
  416577:	out    0xbf,eax
  416579:	stos   DWORD PTR es:[edi],eax
  41657a:	push   edi
  41657b:	leave  
  41657c:	daa    
  41657d:	push   esi
  41657e:	and    eax,0xbc6fa0d
  416583:	fs repnz dec esp
  416586:	je     0x41655a
  416588:	jmp    0xb35b:0xde8ddd17
  41658f:	ret    
  416590:	mov    bl,0xf9
  416592:	cmp    BYTE PTR [edx+0x41],0xc7
  416596:	add    BYTE PTR [ebp-0x58e7e187],dl
  41659c:	pushf  
  41659d:	mov    ds:0xf843aae9,al
  4165a2:	xchg   ecx,eax
  4165a3:	jp     0x41654d
  4165a5:	push   ecx
  4165a6:	hlt    
  4165a7:	mov    esi,0xff28bf92
  4165ac:	jmp    0xe3448523
  4165b1:	repz leave 
  4165b3:	sahf   
  4165b4:	inc    edi
  4165b5:	mov    bl,0x3
  4165b7:	xor    edx,edx
  4165b9:	dec    esi
  4165ba:	push   ebx
  4165bb:	hlt    
  4165bc:	(bad)  
  4165bd:	adc    BYTE PTR [ebp-0x80],dl
  4165c0:	aaa    
  4165c1:	adc    eax,0x10d09192
  4165c6:	out    0x31,al
  4165c8:	cmp    DWORD PTR [edi+0x7c11766b],ebp
  4165ce:	fstp   TBYTE PTR [ebp-0x36f4f878]
  4165d4:	cwde   
  4165d5:	jae    0x4165b8
  4165d7:	aaa    
  4165d8:	xor    dh,BYTE PTR [edi]
  4165da:	test   eax,eax
  4165dc:	inc    edi
  4165dd:	adc    eax,0x100b49e1
  4165e2:	mov    dl,0x9e
  4165e4:	ficomp DWORD PTR [ecx+0x3f250968]
  4165ea:	cmp    ecx,edi
  4165ec:	int3   
  4165ed:	and    eax,0x669c090e
  4165f2:	add    ch,dl
  4165f4:	mov    ebx,0x2d27adb8
  4165f9:	retf   0x73b9
  4165fc:	fs inc esp
  4165fe:	loopne 0x416642
  416600:	in     al,dx
  416601:	jae    0x4165ef
  416603:	call   0x8042:0xdfac792c
  41660a:	mov    bh,0x8b
  41660c:	xor    al,0xf2
  41660e:	inc    ebx
  41660f:	mov    WORD PTR [esi-0x34],ds
  416612:	adc    ebx,DWORD PTR [eax+0x1aef3340]
  416618:	pusha  
  416619:	nop
  41661a:	(bad)  
  41661c:	mov    eax,ds:0xb7b1c00b
  416621:	jae    0x4165bd
  416623:	neg    BYTE PTR [ecx-0x4a]
  416626:	gs pop ecx
  416628:	xchg   bl,dh
  41662a:	test   esi,ebp
  41662c:	scas   al,BYTE PTR es:[edi]
  41662d:	sar    DWORD PTR [ecx-0x350f6fa6],1
  416633:	xchg   BYTE PTR [eax],al
  416635:	mov    esp,0x9954c771
  41663a:	dec    edi
  41663b:	push   0xcf0f659d
  416640:	ins    BYTE PTR es:[edi],dx
  416641:	mov    dl,0x8f
  416643:	add    BYTE PTR [edx-0x3da52a14],0x27
  41664a:	jmp    0x407:0xfcb227d7
  416651:	into   
  416652:	or     BYTE PTR [ebp+0x3a],bl
  416655:	stos   BYTE PTR es:[edi],al
  416656:	ss adc al,0xdd
  416659:	idiv   esp
  41665b:	cmp    BYTE PTR [eax],al
  41665d:	(bad)  
  41665e:	gs push ebx
  416660:	push   ds
  416661:	xchg   esi,eax
  416662:	stos   BYTE PTR es:[edi],al
  416663:	shl    eax,0x2b
  416666:	dec    eax
  416667:	cmp    ecx,DWORD PTR [ecx]
  416669:	cdq    
  41666a:	sar    esp,cl
  41666c:	movd   mm5,DWORD PTR [ecx-0x6a]
  416670:	lods   eax,DWORD PTR ds:[esi]
  416671:	test   ecx,esi
  416673:	out    dx,al
  416674:	and    eax,0x8950a702
  416679:	xchg   DWORD PTR [ecx+eiz*8],ebx
  41667c:	pop    edx
  41667d:	daa    
  41667e:	or     edx,esp
  416680:	sub    eax,0x7f507abb
  416685:	add    al,0x1a
  416687:	mov    ah,0xbd
  416689:	(bad)  
  41668a:	cld    
  41668b:	mov    ecx,0x653bb560
  416690:	xchg   BYTE PTR [ebp+edi*8+0x6354df00],bh
  416697:	push   esi
  416698:	add    BYTE PTR [edi+esi*4+0x314f17d3],0xb3
  4166a0:	enter  0x49b,0x36
  4166a4:	in     al,0xb8
  4166a6:	aad    0x2e
  4166a8:	and    BYTE PTR [eax+0x7e781c3f],0xb1
  4166af:	fisttp WORD PTR [ebp+0x3f]
  4166b2:	sub    BYTE PTR [esi+0x7ecd7e3f],ch
  4166b8:	outs   dx,DWORD PTR ds:[esi]
  4166b9:	popf   
  4166ba:	cmp    eax,0x2be7213c
  4166bf:	xchg   edi,eax
  4166c0:	jg     0x416659
  4166c2:	mov    ecx,0x3ad85c2a
  4166c7:	jmp    0x3c66:0x8df71db6
  4166ce:	push   esp
  4166cf:	pop    eax
  4166d0:	test   BYTE PTR [esi],cl
  4166d2:	pop    esp
  4166d3:	adc    edx,DWORD PTR [ebp+0x331f2d32]
  4166d9:	mov    ds:0x22b8e077,al
  4166de:	call   FWORD PTR [edx+edx*8+0x523ef98e]
  4166e5:	rol    DWORD PTR [edi+0x5e363e31],1
  4166eb:	ja     0x416686
  4166ed:	sub    eax,0x20a53e6f
  4166f2:	add    eax,0xf6a2402b
  4166f7:	push   es
  4166f8:	sub    eax,0xab969221
  4166fd:	daa    
  4166fe:	push   ecx
  4166ff:	lahf   
  416700:	(bad)  
  416701:	in     al,0xfb
  416703:	repnz push eax
  416705:	push   ss
  416706:	xor    al,0x55
  416708:	lods   al,BYTE PTR ds:[esi]
  416709:	pop    edi
  41670a:	(bad)  
  41670b:	(bad)  
  41670c:	push   ebp
  41670d:	mov    DWORD PTR [ebx],edi
  41670f:	xlat   BYTE PTR ds:[ebx]
  416710:	lahf   
  416711:	ins    DWORD PTR es:[edi],dx
  416712:	or     ebx,DWORD PTR [edx+0x2]
  416715:	je     0x4166e2
  416717:	jns    0x416741
  416719:	enter  0x8a9c,0x0
  41671d:	lds    ebx,FWORD PTR [eax]
  41671f:	fstp   DWORD PTR [ebp+0x59878c72]
  416725:	aam    0xe3
  416727:	stos   DWORD PTR es:[edi],eax
  416728:	sar    DWORD PTR [esi+0x2c283dff],1
  41672e:	adc    bh,BYTE PTR [edi-0x28]
  416731:	imul   edi,DWORD PTR [edx-0x5],0xc
  416735:	adc    cl,BYTE PTR [ebp-0x21d4a4d6]
  41673b:	mov    bh,0x3
  41673d:	clc    
  41673e:	push   ss
  41673f:	hlt    
  416740:	retf   0x30a1
  416743:	adc    ch,BYTE PTR [ecx]
  416745:	pop    ecx
  416746:	repnz adc eax,0x81cd1fee
  41674c:	push   ebp
  41674d:	push   esi
  41674e:	stos   DWORD PTR es:[edi],eax
  41674f:	call   0x970ed7ca
  416754:	in     eax,0x4c
  416756:	dec    esp
  416757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416758:	push   0x1e2d38ed
  41675d:	out    0x85,eax
  41675f:	adc    esi,DWORD PTR [esi+0x266dec80]
  416765:	xor    ah,ch
  416767:	sbb    al,0xf
  416769:	lea    ebx,[ecx+0x4d791b21]
  41676f:	or     edx,DWORD PTR [edx-0x751329f9]
  416775:	or     dl,cl
  416777:	adc    eax,0x56f0659d
  41677c:	mov    ds:0x3fc6659b,eax
  416781:	jmp    0xe654d38e
  416786:	jg     0x416735
  416788:	push   DWORD PTR [ebp-0x63]
  41678b:	daa    
  41678c:	(bad)  
  41678d:	adc    cl,dh
  41678f:	ror    DWORD PTR [esi-0x752b603f],cl
  416795:	adc    al,0xbb
  416797:	mov    ?,esp
  416799:	pop    eax
  41679a:	(bad)  
  41679b:	std    
  41679c:	or     al,0xd4
  41679e:	sub    al,BYTE PTR [ebx+eiz*2+0x75]
  4167a2:	ins    BYTE PTR es:[edi],dx
  4167a3:	mov    eax,0xa2c3db20
  4167a8:	fst    DWORD PTR [edi-0x70]
  4167ab:	jne    0x4167f3
  4167ad:	sub    ebx,DWORD PTR [eax]
  4167af:	sahf   
  4167b0:	(bad)  
  4167b2:	and    al,0xbf
  4167b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167b5:	xor    edi,ebp
  4167b7:	daa    
  4167b8:	fadd   st,st(0)
  4167ba:	pop    ecx
  4167bb:	sbb    eax,0x348311ea
  4167c0:	cmp    al,0x67
  4167c2:	imul   esi,DWORD PTR [ecx-0x4ee06723],0x5c4dcd94
  4167cc:	mov    WORD PTR [ecx],gs
  4167ce:	aas    
  4167cf:	psubusb mm4,mm2
  4167d2:	mov    eax,ds:0xf61d00f8
  4167d7:	mov    edx,0xbca13c61
  4167dc:	adc    edx,ebx
  4167de:	sub    BYTE PTR [ebp-0x38157e54],ch
  4167e4:	pop    ss
  4167e5:	ret    
  4167e6:	sub    al,BYTE PTR [eax]
  4167e8:	test   DWORD PTR [edx-0x4a0e3e20],esi
  4167ee:	repz dec ecx
  4167f0:	out    0x29,eax
  4167f2:	push   0xf8317442
  4167f7:	mov    DWORD PTR [esi+0x37],esp
  4167fa:	popa   
  4167fb:	jl     0x416805
  4167fd:	out    dx,eax
  4167fe:	imul   ebp,esi,0x6235fefc
  416804:	stc    
  416805:	and    DWORD PTR [eax+ebp*1+0x12],ebx
  416809:	xor    eax,DWORD PTR [ebp+0x2c]
  41680c:	mov    WORD PTR fs:[ebx],fs
  41680f:	jmp    0xdb9e8cf9
  416814:	nop
  416815:	mov    edi,0x11126781
  41681a:	mov    BYTE PTR [ebx+0x3b7e75d3],bh
  416820:	in     eax,dx
  416821:	fiadd  WORD PTR [esi-0x6efde312]
  416827:	mov    eax,0x90452c9a
  41682c:	mov    ah,0x1d
  41682e:	dec    esp
  41682f:	mov    bh,0x9f
  416831:	dec    ebx
  416832:	push   cs
  416833:	and    al,0xbc
  416835:	mov    WORD PTR ds:0xe468ac52,?
  41683b:	inc    edx
  41683c:	add    BYTE PTR [edx+0x23],ch
  41683f:	sub    DWORD PTR [ecx+0x25],eax
  416842:	clc    
  416843:	adc    al,0x79
  416845:	daa    
  416846:	adc    ah,dl
  416848:	pop    eax
  416849:	mov    dl,0xaa
  41684b:	and    BYTE PTR [edi+ebp*1-0x466e9508],cl
  416852:	outs   dx,BYTE PTR ds:[esi]
  416853:	aaa    
  416854:	sar    esi,cl
  416856:	dec    ebp
  416857:	pusha  
  416858:	mov    al,0x9b
  41685a:	outs   dx,BYTE PTR ds:[esi]
  41685b:	xchg   DWORD PTR ds:0x59058d8,esp
  416861:	pop    edi
  416862:	int    0x70
  416864:	mul    BYTE PTR [ecx]
  416866:	fadd   QWORD PTR [edx+0x7226cc61]
  41686c:	mov    WORD PTR [ebp-0x2f],?
  41686f:	leave  
  416870:	in     eax,0xb1
  416872:	data16 jnp 0x41689f
  416875:	mov    ah,0x3
  416877:	cs and eax,0x2b62c0bc
  41687d:	mov    ds:0xc94e8c41,al
  416882:	popa   
  416883:	loope  0x4168ac
  416885:	push   0xf00e5578
  41688a:	add    DWORD PTR [edi],ebx
  41688c:	fs inc esp
  41688e:	stc    
  41688f:	cwde   
  416890:	lds    edx,FWORD PTR [ebx+edi*1-0x505d148b]
  416897:	jne    0x41686a
  416899:	test   edx,edx
  41689b:	lea    ebx,[ebp+edx*1+0x11]
  41689f:	inc    edx
  4168a0:	(bad)  
  4168a1:	jge    0x416845
  4168a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168a4:	dec    esp
  4168a5:	mov    esi,0xf4a96c6
  4168aa:	psubw  mm5,mm5
  4168ad:	das    
  4168ae:	adc    al,bl
  4168b0:	out    dx,eax
  4168b1:	mov    ebx,0x7c05935c
  4168b6:	jae    0x416867
  4168b8:	ja     0x416906
  4168ba:	jno    0x41685d
  4168bc:	(bad)  
  4168be:	xchg   ebp,eax
  4168bf:	out    dx,eax
  4168c0:	in     eax,0x1c
  4168c2:	add    DWORD PTR [edx],edi
  4168c4:	ins    BYTE PTR es:[edi],dx
  4168c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c6:	xchg   ebx,eax
  4168c7:	dec    edi
  4168c8:	pop    edi
  4168c9:	popf   
  4168ca:	pop    eax
  4168cb:	inc    edx
  4168cc:	xchg   ebp,eax
  4168cd:	popa   
  4168ce:	jmp    0x3bdb:0x5123
  4168d4:	mov    dh,0xcf
  4168d6:	push   edi
  4168d7:	mov    bl,0x30
  4168d9:	push   ebp
  4168da:	inc    ebx
  4168db:	xchg   esi,eax
  4168dc:	aas    
  4168dd:	js     0x4168a1
  4168df:	(bad)  
  4168e0:	mov    dh,0xd9
  4168e2:	jmp    0x9645ca2
  4168e7:	sbb    BYTE PTR [edx],0xa1
  4168ea:	out    0x15,al
  4168ec:	shr    BYTE PTR [edi+ebx*1],1
  4168ef:	iret   
  4168f0:	pop    esp
  4168f1:	loop   0x416907
  4168f3:	icebp  
  4168f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f5:	cmp    eax,0x5de7ff64
  4168fa:	mov    ebx,0xfd109d95
  4168ff:	pop    ds
  416900:	(bad)  
  416901:	sbb    cl,BYTE PTR [ebx+eiz*4-0x3a8e2da8]
  416908:	mov    cl,BYTE PTR [edx-0x482b4d3d]
  41690e:	push   edx
  41690f:	vpsubd xmm5,xmm6,xmm2
  416913:	push   ebx
  416914:	xchg   edx,eax
  416915:	xchg   esi,eax
  416916:	lock loopne 0x4168ea
  416919:	mov    eax,edi
  41691b:	jo     0x41691b
  41691d:	mov    ecx,0x958cca45
  416922:	xchg   edi,eax
  416923:	int3   
  416924:	and    al,bl
  416926:	adc    eax,0x8b942014
  41692b:	aam    0x78
  41692d:	loop   0x4168f2
  41692f:	jl     0x416988
  416931:	ret    0xd0f4
  416934:	jle    0x41697b
  416936:	(bad)  
  416937:	cmp    eax,0xd3f63ff7
  41693c:	jle    0x416961
  41693e:	ficom  DWORD PTR [ecx]
  416940:	into   
  416941:	in     al,0xce
  416943:	hlt    
  416944:	or     DWORD PTR [esi+0x41],edi
  416947:	mov    esp,0x6ec0597a
  41694c:	(bad)  
  41694d:	jmp    0x41694d
  41694f:	mov    BYTE PTR [eax-0x41],dh
  416952:	mov    al,0x9e
  416954:	cwde   
  416955:	and    dl,BYTE PTR [edi]
  416957:	cmp    cl,ah
  416959:	aas    
  41695a:	jl     0x416925
  41695c:	sbb    DWORD PTR [ebx-0x77d319bc],0xc63b46b7
  416966:	rcr    eax,1
  416968:	inc    ebx
  416969:	ins    BYTE PTR es:[edi],dx
  41696a:	shl    DWORD PTR [ebp-0x21c49444],0x2c
  416971:	push   ds
  416972:	dec    esi
  416973:	outs   dx,DWORD PTR ds:[esi]
  416974:	iret   
  416975:	cwde   
  416976:	sbb    DWORD PTR [eax-0x50],edi
  416979:	dec    esp
  41697a:	retf   0xa8c6
  41697d:	mov    DWORD PTR ds:0x2cd7869e,edx
  416983:	mov    ebx,0xfa9f5227
  416988:	sbb    DWORD PTR [esi-0x79],edi
  41698b:	sbb    eax,0x80d73bc0
  416990:	loop   0x4169fd
  416992:	lods   eax,DWORD PTR ds:[esi]
  416993:	stos   BYTE PTR es:[edi],al
  416994:	jns    0x416999
  416996:	and    eax,DWORD PTR [esi-0x28c819fc]
  41699c:	add    cl,BYTE PTR [edx+esi*1-0x220255dc]
  4169a3:	jg     0x4169f8
  4169a5:	aad    0x78
  4169a7:	sub    al,ah
  4169a9:	jae    0x41695f
  4169ab:	int    0xa9
  4169ad:	sbb    al,0x81
  4169af:	mov    cl,0x5d
  4169b1:	popa   
  4169b2:	xor    al,0xcf
  4169b4:	mov    al,ds:0xa5adc49f
  4169b9:	iret   
  4169ba:	mov    ecx,0xdca3e048
  4169bf:	inc    esi
  4169c0:	sbb    BYTE PTR [edx],ah
  4169c2:	lock push esp
  4169c4:	or     BYTE PTR [edx+0x1a],bh
  4169c7:	jge    0x4169db
  4169c9:	adc    al,BYTE PTR [ebx-0x38196523]
  4169cf:	out    0x9b,al
  4169d1:	sub    dh,ah
  4169d3:	mov    ebx,DWORD PTR [ebx]
  4169d5:	aaa    
  4169d6:	mov    eax,ds:0xd8e9a747
  4169db:	sbb    dl,0x2d
  4169de:	js     0x416a43
  4169e0:	shrd   DWORD PTR [edx],ebp,cl
  4169e3:	dec    ebp
  4169e4:	shr    BYTE PTR [ebp+0x4e],cl
  4169e7:	mov    ds:0x8094d009,al
  4169ec:	cmp    BYTE PTR [eax],dh
  4169ee:	jno    0x416a65
  4169f0:	(bad)  
  4169f1:	cwde   
  4169f2:	dec    ecx
  4169f3:	pushf  
  4169f4:	iret   
  4169f5:	data16 mov ds:0x727182dd,al
  4169fb:	pop    eax
  4169fc:	call   0x3ef4:0x3b1fee2
  416a03:	imul   edi,edx,0x60ae48c1
  416a09:	fdivr  st,st(6)
  416a0b:	adc    DWORD PTR [esp],0xb42f2d7a
  416a12:	pop    ss
  416a13:	jg     0x416a16
  416a15:	ret    
  416a16:	xor    dh,BYTE PTR [esi-0x58]
  416a19:	sbb    cl,bl
  416a1b:	sar    DWORD PTR [edx-0x295e1b80],0xd5
  416a22:	push   ss
  416a23:	mov    es,ecx
  416a25:	mov    dh,0x71
  416a27:	idiv   BYTE PTR [edi+0x57]
  416a2a:	mov    eax,ds:0x2a62a33f
  416a2f:	and    ebx,DWORD PTR ds:[eax-0x6c]
  416a33:	(bad)  
  416a34:	ds and eax,0xa38ec75c
  416a3a:	adc    DWORD PTR [ecx+0x73546e04],ecx
  416a40:	cmp    BYTE PTR [edx+0x0],bh
  416a43:	aam    0x20
  416a45:	xchg   ecx,eax
  416a46:	dec    ecx
  416a47:	push   eax
  416a48:	in     al,dx
  416a49:	out    0xa,eax
  416a4b:	add    ebx,DWORD PTR [ebx*2-0x1354345]
  416a52:	imul   edi,DWORD PTR [ebx+0x47],0xffffffc8
  416a56:	sub    BYTE PTR [edx],ch
  416a58:	aas    
  416a59:	add    eax,0x1fa5f8be
  416a5e:	int3   
  416a5f:	fwait
  416a60:	hlt    
  416a61:	inc    edi
  416a62:	dec    esp
  416a63:	sub    eax,ebx
  416a65:	push   ebp
  416a66:	push   edi
  416a67:	into   
  416a68:	stc    
  416a69:	cli    
  416a6a:	sahf   
  416a6b:	xchg   edi,eax
  416a6c:	xchg   edi,eax
  416a6d:	mov    eax,ds:0x83237a5f
  416a72:	loope  0x416a91
  416a74:	arpl   WORD PTR [edi+0x5b],di
  416a77:	(bad)  
  416a78:	push   ss
  416a79:	out    dx,al
  416a7a:	fwait
  416a7b:	(bad)  
  416a7d:	sub    DWORD PTR [ebx-0x1f],edi
  416a80:	inc    ebp
  416a81:	mov    ebp,0xe81d9b01
  416a86:	pop    es
  416a87:	mov    ch,BYTE PTR [bp+si]
  416a8a:	lds    ebx,FWORD PTR [edx+0x52]
  416a8d:	retf   0x7b4
  416a90:	je     0x416a28
  416a92:	jns    0x416aa7
  416a94:	push   0xc850b07e
  416a99:	jo     0x416aa3
  416a9b:	xchg   esp,eax
  416a9c:	lods   al,BYTE PTR ds:[esi]
  416a9d:	dec    ebp
  416a9e:	bound  ebp,QWORD PTR [ecx]
  416aa0:	dec    edx
  416aa1:	mov    ecx,0x5d579bb9
  416aa6:	(bad)  
  416aa7:	je     0x416a65
  416aa9:	out    dx,eax
  416aaa:	and    ebp,DWORD PTR [eax+edx*1-0x6716202f]
  416ab1:	aam    0xfc
  416ab3:	pop    ss
  416ab4:	inc    edx
  416ab5:	sub    eax,0x4d8aa9ee
  416aba:	push   cs
  416abb:	lahf   
  416abc:	retf   
  416abd:	js     0x416a47
  416abf:	aad    0xa0
  416ac1:	fadd   st(6),st
  416ac3:	push   eax
  416ac4:	adc    al,0x93
  416ac6:	add    eax,0x782851dc
  416acb:	jl     0x416ae8
  416acd:	js     0x416b3c
  416acf:	mov    al,0x55
  416ad1:	rol    DWORD PTR [edi+0x3],cl
  416ad4:	mov    bh,0x16
  416ad6:	scas   al,BYTE PTR es:[edi]
  416ad7:	and    DWORD PTR [ebp+0x581436f3],ecx
  416add:	test   BYTE PTR [eax+0x1f],0xd0
  416ae1:	pushf  
  416ae2:	bnd ss jg 0x416a76
  416ae6:	sbb    ebx,DWORD PTR [edi]
  416ae8:	jnp    0x416abe
  416aea:	dec    edx
  416aeb:	punpckldq mm3,DWORD PTR [esi-0x15]
  416aef:	lea    esi,[ebp-0x4294563f]
  416af5:	adc    al,0x32
  416af7:	xchg   esp,eax
  416af8:	test   al,0x36
  416afa:	sbb    al,0xb
  416afc:	stc    
  416afd:	retf   0xe4fc
  416b00:	mov    al,0x5b
  416b02:	mov    eax,ds:0x6695ba31
  416b07:	or     bl,BYTE PTR [ebx-0x7cc5ec59]
  416b0d:	jbe    0x416b56
  416b0f:	mov    ebx,0xddbe853e
  416b14:	loope  0x416ab0
  416b16:	xor    eax,0xba988415
  416b1b:	xor    bh,ch
  416b1d:	addr16 aad 0xd3
  416b20:	xchg   esp,eax
  416b21:	and    edx,edi
  416b23:	stos   BYTE PTR es:[edi],al
  416b24:	and    al,0x1b
  416b26:	je     0x416b8c
  416b28:	js     0x416b19
  416b2a:	jp     0xc021880b
  416b30:	dec    ecx
  416b31:	mov    ebp,es
  416b33:	rcl    DWORD PTR [ecx+0x3a],0xf8
  416b37:	xor    DWORD PTR [ebx+edi*1+0x30b1dbc4],ebp
  416b3e:	(bad)  
  416b3f:	jecxz  0x416b67
  416b41:	pop    ds
  416b42:	shr    DWORD PTR [edi+0x10e7d21c],1
  416b48:	mov    ebx,DWORD PTR [eax]
  416b4a:	sub    eax,esp
  416b4c:	lds    edx,FWORD PTR [esi+0x3588f5ed]
  416b52:	rol    DWORD PTR [eax],cl
  416b54:	stos   DWORD PTR es:[edi],eax
  416b55:	or     DWORD PTR [esi],edi
  416b57:	or     BYTE PTR [edi],dh
  416b59:	xor    edx,DWORD PTR [edi+edx*1]
  416b5c:	out    0x41,al
  416b5e:	fdiv   DWORD PTR [eax+edi*1+0x18]
  416b62:	sbb    eax,0xce259468
  416b67:	imul   BYTE PTR [ebp-0x79]
  416b6a:	dec    esi
  416b6b:	sub    al,0x79
  416b6d:	jecxz  0x416b32
  416b6f:	aaa    
  416b70:	retf   0xc10
  416b73:	aas    
  416b74:	add    edx,ecx
  416b76:	je     0x416b3e
  416b78:	into   
  416b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b7a:	mov    DWORD PTR [edx-0x6d36ae1d],ebp
  416b80:	mov    ecx,ds
  416b82:	pop    ecx
  416b83:	jp     0x416b7a
  416b85:	popa   
  416b86:	adc    esi,ebx
  416b88:	aaa    
  416b89:	cmp    al,0x43
  416b8b:	pop    esp
  416b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b8d:	jae    0x416c09
  416b8f:	fld    TBYTE PTR [eax]
  416b91:	push   edi
  416b92:	ja     0x416b8d
  416b94:	pop    eax
  416b95:	xor    BYTE PTR [ecx],dh
  416b97:	loopne 0x416b47
  416b99:	inc    eax
  416b9a:	shl    DWORD PTR [ebx],cl
  416b9c:	ja     0x416b21
  416b9e:	jb     0x416c13
  416ba0:	push   ss
  416ba1:	xchg   ebx,eax
  416ba2:	xchg   BYTE PTR [ebp-0x6c70b973],dl
  416ba8:	gs xor ah,bh
  416bab:	retf   0xd4b3
  416bae:	out    dx,eax
  416baf:	push   esi
  416bb0:	inc    ebx
  416bb1:	in     eax,dx
  416bb2:	add    eax,0x19634325
  416bb7:	daa    
  416bb8:	in     eax,dx
  416bb9:	loopne 0x416b41
  416bbb:	cld    
  416bbc:	neg    BYTE PTR [esi+edx*1-0x57994a46]
  416bc3:	sub    dl,BYTE PTR [edx+0x40]
  416bc6:	inc    esp
  416bc7:	mov    dl,0x41
  416bc9:	and    ebp,ecx
  416bcb:	or     ch,BYTE PTR [eax+0x4b]
  416bce:	fldenv [eax]
  416bd0:	repz pop ebx
  416bd2:	retf   0x8d33
  416bd5:	(bad)  
  416bd7:	jecxz  0x416bd0
  416bd9:	dec    ebp
  416bda:	and    bl,BYTE PTR [ebx+edx*8]
  416bdd:	xchg   ebp,eax
  416bde:	xlat   BYTE PTR ds:[ebx]
  416bdf:	sub    esp,DWORD PTR [ebx]
  416be1:	cdq    
  416be2:	mov    dl,0xe4
  416be4:	nop
  416be5:	(bad)  
  416be6:	pusha  
  416be7:	pop    ds
  416be8:	aaa    
  416be9:	loop   0x416c14
  416beb:	adc    al,0xb
  416bed:	or     dh,bl
  416bef:	mov    BYTE PTR [ebx],dh
  416bf1:	sbb    BYTE PTR [edx-0x1a6409c0],ch
  416bf7:	inc    ecx
  416bf8:	sub    BYTE PTR [esi-0x6bb6e93c],ch
  416bfe:	xchg   DWORD PTR [ebp+0x4a5d002c],esi
  416c04:	jo     0x416be5
  416c06:	push   ecx
  416c07:	xlat   BYTE PTR ds:[ebx]
  416c08:	inc    DWORD PTR [edi+0x20046229]
  416c0e:	daa    
  416c0f:	or     eax,0x3d1d40cb
  416c14:	pop    ss
  416c15:	sti    
  416c16:	cmp    dl,BYTE PTR [eax*2-0x5f2051be]
  416c1d:	jmp    0xe95f:0x81dbe35e
  416c24:	or     edx,DWORD PTR [eax]
  416c26:	out    0x19,eax
  416c28:	adc    eax,0x7452d522
  416c2d:	int3   
  416c2e:	xchg   edx,eax
  416c2f:	and    BYTE PTR [ecx+ebx*4+0x6a],0x45
  416c34:	mov    dh,0xa5
  416c36:	jg     0x416bf7
  416c38:	push   esi
  416c39:	ret    
  416c3a:	and    cl,BYTE PTR es:[ecx-0x4a]
  416c3e:	jno    0x416c73
  416c40:	push   ecx
  416c41:	fcomp  DWORD PTR [edx+0x6b]
  416c44:	enter  0xbd88,0xf7
  416c48:	int3   
  416c49:	sbb    esi,ebx
  416c4b:	jl     0x416bf4
  416c4d:	je     0x416bd8
  416c4f:	es mov esp,ebp
  416c52:	ret    
  416c53:	sub    cl,cl
  416c55:	push   es
  416c56:	add    DWORD PTR [edi],esp
  416c58:	xlat   BYTE PTR ds:[ebx]
  416c59:	jo     0x416c5a
  416c5b:	ret    0x4617
  416c5e:	sub    dl,BYTE PTR [ebx+0x4b78b8ef]
  416c64:	(bad)  
  416c65:	outs   dx,BYTE PTR ds:[esi]
  416c66:	hlt    
  416c67:	cs stc 
  416c69:	add    eax,ecx
  416c6b:	out    dx,eax
  416c6c:	dec    eax
  416c6d:	jl     0x416c0c
  416c6f:	repz cs lock xchg edi,eax
  416c73:	test   BYTE PTR [edi+0x34],dh
  416c76:	popf   
  416c77:	xor    al,0xb9
  416c79:	jmp    0x416c2a
  416c7b:	and    al,0x71
  416c7d:	sub    DWORD PTR [edi-0x2d],eax
  416c80:	jp     0x416c0c
  416c82:	bound  edi,QWORD PTR [edx+edx*4-0x12ccd290]
  416c89:	int3   
  416c8a:	clc    
  416c8b:	ins    DWORD PTR es:[edi],dx
  416c8c:	jno    0x416c3f
  416c8e:	dec    edi
  416c8f:	out    0x97,eax
  416c91:	test   eax,0x8361a200
  416c96:	mov    edx,DWORD PTR [ebp+0x8]
  416c99:	mov    ebx,DWORD PTR [ebp-0x8]
  416c9c:	xor    edx,eax
  416c9e:	xor    ebx,eax
  416ca0:	sub    edx,ebx
  416ca2:	sub    edx,esi
  416ca4:	xor    edx,eax
  416ca6:	mov    DWORD PTR [ebp+0x8],edx
  416ca9:	mov    edx,DWORD PTR [ebp+0x8]
  416cac:	mov    ebx,DWORD PTR [ebp-0x58]
  416caf:	add    edx,0x5708fa
  416cb5:	imul   edx,ebx
  416cb8:	mov    DWORD PTR [ebp-0x58],edx
  416cbb:	mov    edx,DWORD PTR [ebp+0x8]
  416cbe:	mov    ebx,DWORD PTR [ebp-0x54]
  416cc1:	add    edx,0x64f89c
  416cc7:	or     edx,ebx
  416cc9:	mov    DWORD PTR [ebp-0x54],edx
  416ccc:	mov    edx,DWORD PTR [ebp+0x8]
  416ccf:	mov    ebx,DWORD PTR [ebp-0x50]
  416cd2:	add    edx,ecx
  416cd4:	xor    edx,ebx
  416cd6:	mov    DWORD PTR [ebp-0x50],edx
  416cd9:	mov    edx,DWORD PTR [ebp+0x8]
  416cdc:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cdf:	add    edx,edi
  416ce1:	jmp    0x419066
  416ce6:	fidivr WORD PTR [ecx-0x44]
  416ce9:	call   0x43d01081
  416cee:	xchg   ebx,eax
  416cef:	jmp    0x3152:0x5ad882c3
  416cf6:	cs inc esp
  416cf8:	jns    0x416d74
  416cfa:	adc    bl,BYTE PTR [edi+0x7a]
  416cfd:	jp     0x416cdf
  416cff:	xor    eax,0xff17766c
  416d04:	fisttp WORD PTR [edx]
  416d06:	(bad)  
  416d07:	imul   ebp,ebp,0xfffffffb
  416d0a:	aas    
  416d0b:	or     eax,0xcf7184a0
  416d10:	dec    esi
  416d11:	pop    ebx
  416d12:	lods   al,BYTE PTR ds:[esi]
  416d13:	stos   DWORD PTR es:[edi],eax
  416d14:	or     eax,0x7e46bb45
  416d19:	dec    eax
  416d1a:	in     al,dx
  416d1b:	pop    ebp
  416d1c:	dec    esi
  416d1d:	add    BYTE PTR [esi-0x66],bh
  416d20:	push   edi
  416d21:	cmp    esp,DWORD PTR [edx+0x6a3b4664]
  416d27:	xor    eax,0x80fdbf42
  416d2c:	xchg   ax,ax
  416d2e:	aam    0x21
  416d30:	xchg   esp,eax
  416d31:	mov    ebx,0x49b6dbfe
  416d36:	popa   
  416d37:	ret    0x3e33
  416d3a:	clc    
  416d3b:	xor    dh,BYTE PTR [ebx-0x5f]
  416d3e:	mov    WORD PTR [esp+ebp*4-0x32],cs
  416d42:	fdivr  DWORD PTR [esi]
  416d44:	ja     0x416d20
  416d46:	nop
  416d47:	xchg   DWORD PTR [ebx+0x21],edx
  416d4a:	into   
  416d4b:	sbb    esi,DWORD PTR [ebx+0x30bf2dde]
  416d51:	mov    bl,0xd4
  416d53:	ins    DWORD PTR es:[edi],dx
  416d54:	or     ah,al
  416d56:	(bad)  
  416d57:	cld    
  416d58:	nop
  416d59:	dec    esi
  416d5a:	xor    eax,DWORD PTR [eax+edi*8]
  416d5d:	cmp    DWORD PTR [edx+0x42],edx
  416d60:	push   ebx
  416d61:	dec    eax
  416d62:	sub    ecx,edi
  416d64:	cld    
  416d65:	test   al,0x15
  416d67:	pop    eax
  416d68:	fs jne 0x416d96
  416d6b:	stos   DWORD PTR es:[edi],eax
  416d6c:	ins    BYTE PTR es:[edi],dx
  416d6d:	lahf   
  416d6e:	(bad)  [ebx-0x57596eaa]
  416d74:	loopne 0x416d57
  416d76:	xchg   edi,eax
  416d77:	sub    dl,BYTE PTR [ebp+eiz*1+0x65d8aeba]
  416d7e:	stos   DWORD PTR es:[edi],eax
  416d7f:	push   edx
  416d80:	lahf   
  416d81:	jmp    0xad5d:0xfcf289e0
  416d88:	xchg   edi,eax
  416d89:	push   edi
  416d8a:	fcompp 
  416d8c:	in     eax,dx
  416d8d:	fcmove st,st(2)
  416d8f:	cld    
  416d90:	sbb    bh,dl
  416d92:	ja     0x416d5d
  416d94:	pop    ebp
  416d95:	cwde   
  416d96:	stos   BYTE PTR es:[edi],al
  416d97:	loop   0x416df0
  416d99:	fist   WORD PTR [esi-0x38]
  416d9c:	ins    DWORD PTR es:[edi],dx
  416d9d:	jge    0x416da7
  416d9f:	loope  0x416d8c
  416da1:	mov    al,ds:0xb04887e6
  416da6:	add    ah,ch
  416da8:	in     al,0xa3
  416daa:	cmp    eax,0x383b7eb4
  416daf:	out    dx,al
  416db0:	add    ch,cl
  416db2:	or     esp,DWORD PTR [ebx]
  416db4:	iret   
  416db5:	sub    eax,0x3cef948
  416dba:	mov    esi,0xe0c348df
  416dbf:	pop    ds
  416dc0:	xchg   edi,eax
  416dc1:	fldcw  WORD PTR [ebp-0x78]
  416dc4:	xchg   edi,eax
  416dc5:	jne    0x416e16
  416dc7:	or     bh,cl
  416dc9:	enter  0x9b6a,0x28
  416dcd:	out    dx,eax
  416dce:	pushf  
  416dcf:	inc    edx
  416dd0:	outs   dx,DWORD PTR ds:[esi]
  416dd1:	(bad)  
  416dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dd3:	in     eax,dx
  416dd4:	pop    es
  416dd5:	call   0x5b2e9d4a
  416dda:	mov    ch,0x3f
  416ddc:	xchg   ebx,eax
  416ddd:	popa   
  416dde:	push   ebx
  416ddf:	mov    eax,0x86b43564
  416de4:	add    ecx,DWORD PTR [edi+0x66]
  416de7:	ret    0x70b1
  416dea:	jb     0x416dff
  416dec:	aaa    
  416ded:	push   ebx
  416dee:	jg     0x416de6
  416df0:	dec    esi
  416df1:	inc    edi
  416df2:	jmp    0x416dfd
  416df4:	aas    
  416df5:	pop    esp
  416df6:	jne    0x416d89
  416df8:	push   esp
  416df9:	mov    ah,0xe3
  416dfb:	into   
  416dfc:	sub    BYTE PTR [eax+0x5a],0x1b
  416e00:	inc    ebx
  416e01:	ins    DWORD PTR es:[edi],dx
  416e02:	or     esp,DWORD PTR [esi-0x402f236d]
  416e08:	mov    ch,0x7
  416e0a:	xchg   ecx,eax
  416e0b:	mov    ds:0x3c8797ab,al
  416e10:	les    ebp,FWORD PTR [eax+0x441cc768]
  416e16:	cmp    BYTE PTR cs:[ebx],bl
  416e19:	bound  edx,QWORD PTR [ebp+0x7d]
  416e1c:	pop    eax
  416e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e1e:	jmp    0xca724d2d
  416e23:	xlat   BYTE PTR ds:[ebx]
  416e24:	dec    edi
  416e25:	cdq    
  416e26:	xchg   DWORD PTR ds:0xa36fbf76,edi
  416e2c:	push   ecx
  416e2d:	retf   0xf280
  416e30:	ins    BYTE PTR es:[edi],dx
  416e31:	sbb    BYTE PTR gs:[esi],ah
  416e34:	pop    ds
  416e35:	push   esp
  416e36:	jns    0x416dbf
  416e38:	xchg   esi,eax
  416e39:	jmp    0x416e09
  416e3b:	loope  0x416e1a
  416e3d:	pop    eax
  416e3e:	bound  ebx,QWORD PTR [edx-0x25721422]
  416e44:	fisttp DWORD PTR [eax+edi*1-0x5e]
  416e48:	pushf  
  416e49:	out    0x21,al
  416e4b:	imul   ebx,DWORD PTR [eax+eax*1+0x1e04f733],0x31
  416e53:	jne    0x416e72
  416e55:	out    0xba,eax
  416e57:	cmp    DWORD PTR [ebp+0x5d],ecx
  416e5a:	pushf  
  416e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5c:	pusha  
  416e5d:	ja     0x416e92
  416e5f:	inc    ecx
  416e60:	or     DWORD PTR [ebx+ebp*2+0x3a],0x50
  416e65:	frstor [eax-0x5f]
  416e68:	jmp    0x4b8f:0x54cfca77
  416e6f:	inc    esp
  416e70:	sbb    DWORD PTR [edi+ebx*4+0x2e390054],ecx
  416e77:	push   0xffffff8c
  416e79:	icebp  
  416e7a:	and    esp,DWORD PTR [ebp+0x2e]
  416e7d:	mov    ah,0xdb
  416e7f:	in     eax,0x61
  416e81:	jae    0x416e84
  416e83:	dec    DWORD PTR [eax]
  416e85:	mov    al,0x66
  416e87:	cmp    eax,0xe3446216
  416e8c:	jecxz  0x416ed8
  416e8e:	inc    esp
  416e90:	inc    edx
  416e91:	mov    cl,0x5b
  416e93:	inc    ebx
  416e94:	sti    
  416e95:	jae    0x416ee9
  416e97:	or     al,0x49
  416e99:	jmp    0x4dd5400f
  416e9e:	arpl   WORD PTR [ecx-0x72b6ab00],dx
  416ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ea5:	dec    esi
  416ea6:	cdq    
  416ea7:	nop
  416ea8:	pop    esi
  416ea9:	aam    0x8a
  416eab:	lock loope 0x416f0f
  416eae:	mov    BYTE PTR [edi+0x59],cl
  416eb1:	adc    al,0x7c
  416eb3:	sbb    al,0xad
  416eb5:	jg     0x416e7f
  416eb7:	dec    ebp
  416eb8:	(bad)  
  416eb9:	adc    ah,BYTE PTR [ebx]
  416ebb:	ds inc edx
  416ebd:	push   ebp
  416ebe:	test   eax,0x6d2939c2
  416ec3:	bound  ecx,QWORD PTR [eax-0x2b6d392f]
  416ec9:	xchg   DWORD PTR [ecx-0x72],ebx
  416ecc:	retf   
  416ecd:	and    al,0x7e
  416ecf:	in     al,dx
  416ed0:	adc    eax,0x669bf049
  416ed5:	scas   eax,DWORD PTR es:[edi]
  416ed6:	and    BYTE PTR [edi+0x7c],0xa9
  416eda:	mov    esi,0x5bc7dbdf
  416edf:	xor    eax,0x346d95db
  416ee4:	dec    ebp
  416ee5:	dec    ebp
  416ee6:	xor    eax,0x51b5114c
  416eeb:	add    al,0xe1
  416eed:	aad    0x8
  416eef:	fadd   DWORD PTR [ebx-0x7d8dca39]
  416ef5:	pop    edx
  416ef6:	(bad)  
  416ef7:	loopne 0x416ec7
  416ef9:	add    eax,0xe913a893
  416efe:	sbb    ch,BYTE PTR [edi]
  416f00:	pop    ecx
  416f01:	push   ecx
  416f02:	pop    esi
  416f03:	cmp    ch,ah
  416f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f06:	std    
  416f07:	xchg   esp,eax
  416f08:	pop    ecx
  416f09:	sbb    ecx,DWORD PTR [ebx+edi*8]
  416f0c:	jge    0x416f70
  416f0e:	or     eax,DWORD PTR [edx+ebp*2-0x8]
  416f12:	add    eax,0xbce03bc1
  416f17:	(bad)  
  416f18:	in     eax,dx
  416f19:	test   eax,0x18616b7d
  416f1e:	push   ds
  416f1f:	imul   edi,DWORD PTR [edx-0x428e4a9],0xdbd3810f
  416f29:	xor    BYTE PTR [edx+0x45],bh
  416f2c:	rcr    BYTE PTR [edx-0x50],0x1
  416f30:	fnstenv [esi+ecx*8+0x76595ce4]
  416f37:	ins    DWORD PTR es:[edi],dx
  416f38:	xor    al,0x44
  416f3a:	xchg   esp,eax
  416f3b:	(bad)  
  416f3c:	sbb    DWORD PTR es:[ecx+0x475ce842],ebp
  416f43:	test   BYTE PTR [edx-0x790a7f5e],ch
  416f49:	sbb    al,BYTE PTR [esi-0x6e]
  416f4c:	add    BYTE PTR [esp+ebx*2+0x26],0x95
  416f51:	sub    dl,dl
  416f53:	xchg   esi,eax
  416f54:	out    dx,eax
  416f55:	mov    esi,0xaf2b3723
  416f5a:	add    edx,edi
  416f5c:	jnp    0x416f2e
  416f5e:	outs   dx,BYTE PTR ds:[esi]
  416f5f:	mov    dl,0xb4
  416f61:	xchg   DWORD PTR [ecx-0x4f6ed44a],esp
  416f67:	and    eax,DWORD PTR [ebx-0x52b93bb0]
  416f6d:	adc    eax,0x99670d7
  416f72:	aas    
  416f73:	(bad)  
  416f74:	mov    BYTE PTR [ecx+0x66],dh
  416f77:	js     0x416fa5
  416f79:	cmp    BYTE PTR [esi+0x5b71ffa6],ch
  416f7f:	sti    
  416f80:	push   ebx
  416f81:	inc    eax
  416f82:	icebp  
  416f83:	arpl   WORD PTR [ecx+0x5ce8756d],ax
  416f89:	xchg   edx,esi
  416f8b:	ficomp DWORD PTR [ebx-0xb405075]
  416f91:	cmp    BYTE PTR ds:0xf16673e0,0xfb
  416f98:	sar    cl,cl
  416f9a:	sbb    al,0x4e
  416f9c:	ss pop ds
  416f9e:	ja     0x416f87
  416fa0:	push   edx
  416fa1:	xor    ebx,DWORD PTR [edi]
  416fa3:	test   BYTE PTR [ecx+0x67376d5d],ch
  416fa9:	jge    0x416ff3
  416fab:	xchg   edi,eax
  416fac:	cmovne esp,DWORD PTR [edx+0x74]
  416fb0:	inc    edx
  416fb1:	mov    ah,0x69
  416fb3:	and    DWORD PTR [ebx-0x46dd875a],0xade3df72
  416fbd:	test   dh,cl
  416fbf:	loope  0x416fa7
  416fc1:	dec    eax
  416fc2:	(bad)  
  416fc3:	popa   
  416fc4:	jge    0x416fd2
  416fc6:	mov    al,0x44
  416fc8:	out    0x8e,al
  416fca:	add    bl,BYTE PTR [ebp-0x3aa3858a]
  416fd0:	pop    edi
  416fd1:	sahf   
  416fd2:	repnz lods eax,DWORD PTR ds:[esi]
  416fd4:	(bad)  
  416fd5:	or     ebp,DWORD PTR ds:0xa649cdc8
  416fdb:	push   cs
  416fdc:	pop    ebx
  416fdd:	sahf   
  416fde:	xchg   BYTE PTR [edi+0x5b755923],al
  416fe4:	add    al,BYTE PTR [edx+0x5e]
  416fe7:	adc    eax,0x746fa7fd
  416fec:	das    
  416fed:	mov    ecx,0x3a61d0f1
  416ff2:	lods   al,BYTE PTR ds:[esi]
  416ff3:	ds xchg ecx,eax
  416ff5:	or     BYTE PTR [ecx],dl
  416ff7:	lea    esi,[esi]
  416ff9:	test   eax,0x2c94d4f4
  416ffe:	xchg   BYTE PTR [ecx-0x4d0d5f98],ch
  417004:	int3   
  417005:	push   cs
  417006:	not    DWORD PTR [eax+0x70]
  417009:	sub    al,0xc6
  41700b:	mov    ch,0x71
  41700d:	xchg   esp,eax
  41700e:	jno    0x416fe5
  417010:	cmc    
  417011:	sbb    DWORD PTR [ecx-0x3310c9d6],edx
  417017:	call   0xfbf1ad1b
  41701c:	adc    eax,DWORD PTR [ebx]
  41701e:	enter  0x3779,0x7f
  417022:	xor    eax,0xc5fbac4b
  417027:	jnp    0x416ffb
  417029:	fs enter 0x7964,0xe1
  41702e:	retf   
  41702f:	daa    
  417030:	mov    esi,0x4ca9358b
  417035:	(bad)  
  417037:	div    BYTE PTR [esi+esi*1+0x5a]
  41703b:	cmp    edi,DWORD PTR [ecx-0x78]
  41703e:	dec    esi
  41703f:	int    0xb1
  417041:	xor    al,0xaf
  417043:	scas   al,BYTE PTR es:[edi]
  417044:	xchg   esp,eax
  417045:	out    dx,al
  417046:	add    eax,0xc5644fe4
  41704b:	scas   al,BYTE PTR es:[edi]
  41704c:	int3   
  41704d:	mov    BYTE PTR [ebp-0x5e],ch
  417050:	(bad)  
  417051:	bnd ret 
  417053:	sub    edi,DWORD PTR [esi]
  417055:	jmp    0x417027
  417057:	in     al,0xad
  417059:	mov    cs,ebx
  41705b:	mov    ch,0xa1
  41705d:	fstp   TBYTE PTR [eax-0x14da2315]
  417063:	dec    ecx
  417064:	mov    al,ds:0xf149e922
  417069:	hlt    
  41706a:	shl    BYTE PTR [edx],0x7f
  41706d:	push   eax
  41706e:	adc    dl,ah
  417070:	mov    bh,BYTE PTR [ecx-0x60]
  417073:	mov    ebx,DWORD PTR [ecx+eiz*2-0x2e]
  417077:	jmp    edi
  417079:	inc    edi
  41707a:	pop    ebp
  41707b:	pop    esp
  41707c:	(bad)
  417081:	cmp    al,0xd0
  417083:	ja     0x4170d6
  417085:	fnstsw WORD PTR [ecx-0x27]
  417088:	stc    
  417089:	and    DWORD PTR [edi-0x4],ecx
  41708c:	jle    0x4170cf
  41708e:	mov    dh,0x1d
  417090:	jbe    0x41703a
  417092:	(bad)  
  417093:	pop    DWORD PTR [edx]
  417095:	loop   0x4170b1
  417097:	mov    ebx,0xd936c4bb
  41709c:	mov    ebx,0xff254672
  4170a1:	sub    dh,al
  4170a3:	add    al,0x3b
  4170a5:	stos   DWORD PTR es:[edi],eax
  4170a6:	dec    eax
  4170a7:	dec    ecx
  4170a8:	pop    esp
  4170a9:	mov    ds:0x9912eff3,eax
  4170ae:	pop    eax
  4170af:	pop    esp
  4170b0:	push   cs
  4170b1:	cs mov dl,0xc6
  4170b4:	loop   0x41709f
  4170b6:	add    DWORD PTR [ecx+0x5f5c3fa9],ebx
  4170bc:	pop    esi
  4170bd:	pop    ecx
  4170be:	retf   
  4170bf:	adc    ch,BYTE PTR [ecx]
  4170c1:	jb     0x4170da
  4170c3:	add    ecx,DWORD PTR [ebp-0xb]
  4170c6:	dec    esp
  4170c7:	mov    eax,0xddb91f84
  4170cc:	mov    bh,BYTE PTR [edx-0x781927ec]
  4170d2:	sub    al,0xc6
  4170d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170d5:	or     DWORD PTR [ebx],0xa8f5231a
  4170db:	hlt    
  4170dc:	fsubr  st(5),st
  4170de:	xchg   BYTE PTR [edx+0x716a9e29],dl
  4170e4:	pop    eax
  4170e5:	gs ret 0xeba4
  4170e9:	aas    
  4170ea:	in     al,0xed
  4170ec:	(bad)  [eax-0x32]
  4170ef:	stos   BYTE PTR es:[edi],al
  4170f0:	in     eax,0xf2
  4170f2:	retf   
  4170f3:	cmp    cl,0x4e
  4170f6:	fbstp  TBYTE PTR cs:[ebx-0x54]
  4170fa:	ins    DWORD PTR es:[edi],dx
  4170fb:	retf   0x65e4
  4170fe:	inc    esi
  4170ff:	in     al,0x46
  417101:	cld    
  417102:	(bad)  
  417103:	mov    bl,0x57
  417105:	imul   edx,DWORD PTR [edx-0x17],0x47
  417109:	xchg   ecx,eax
  41710a:	pusha  
  41710b:	bound  ecx,QWORD PTR [esi-0x4d]
  41710e:	iret   
  41710f:	arpl   WORD PTR [edi-0x64847e5],bp
  417115:	lock lods al,BYTE PTR ds:[esi]
  417117:	sti    
  417118:	or     eax,0x9c2c71
  41711d:	out    dx,eax
  41711e:	test   DWORD PTR [ebp-0x3ba8bf59],esi
  417124:	xchg   ebp,eax
  417125:	inc    esi
  417126:	sub    BYTE PTR [edi],bh
  417128:	mov    ch,0xf3
  41712a:	pop    ds
  41712b:	lds    esp,FWORD PTR [eax+0x4b62c91b]
  417131:	jp     0x417160
  417133:	jne    0x41716d
  417135:	(bad)  
  417137:	mov    DWORD PTR [ebx+0x17],esi
  41713a:	ja     0x417162
  41713c:	popf   
  41713d:	mov    bh,0xed
  41713f:	jl     0x417175
  417141:	jge    0x41712b
  417143:	fidivr WORD PTR [edi-0x2b]
  417146:	push   sp
  417148:	cwde   
  417149:	cdq    
  41714a:	sbb    al,BYTE PTR [ebp+0x3d8bed4e]
  417150:	loope  0x417158
  417152:	fcmovne st,st(2)
  417154:	shl    dh,0xa9
  417157:	ja     0x41711f
  417159:	sub    BYTE PTR [eax+0x37437d92],0x6b
  417160:	stos   DWORD PTR es:[edi],eax
  417161:	popa   
  417162:	daa    
  417163:	test   BYTE PTR [ebx+0x2],ah
  417166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417167:	sbb    al,0x32
  417169:	dec    ebx
  41716a:	jae    0x417135
  41716c:	lea    esp,[eax+0x76]
  41716f:	les    ebx,FWORD PTR [edi+0x6]
  417172:	outs   dx,DWORD PTR ds:[esi]
  417173:	lods   eax,DWORD PTR ds:[esi]
  417174:	adc    BYTE PTR [edi+ebp*8],bl
  417177:	xchg   ebx,eax
  417178:	jecxz  0x4171cf
  41717a:	push   esi
  41717b:	ror    BYTE PTR [esi+0x49ce1e1b],1
  417181:	pop    ebp
  417182:	popf   
  417183:	ins    BYTE PTR es:[edi],dx
  417184:	es jecxz 0x4171d4
  417187:	push   0xe8c15b08
  41718c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41718d:	push   edx
  41718e:	xor    al,0xf5
  417190:	loopne 0x4171f2
  417192:	and    ah,dl
  417194:	arpl   di,bp
  417196:	fild   WORD PTR [ebx-0x22]
  417199:	or     DWORD PTR [ebx],ecx
  41719b:	xor    al,al
  41719d:	test   edi,esp
  41719f:	das    
  4171a0:	mov    eax,ds:0x2ea70f1f
  4171a5:	cwde   
  4171a6:	cli    
  4171a7:	sub    ebp,DWORD PTR [esi+0x44a6645a]
  4171ad:	fisub  WORD PTR [eax-0x11697667]
  4171b3:	cmp    eax,0x46ed1d77
  4171b8:	inc    edx
  4171b9:	ss rcl ebp,1
  4171bc:	push   DWORD PTR [esi-0x4c45be9a]
  4171c2:	mov    bh,0x7d
  4171c4:	sub    eax,0xaf674f85
  4171c9:	ret    0x5a98
  4171cc:	ds adc al,0x38
  4171cf:	xor    BYTE PTR es:[edx+0x2d17ba14],0xf8
  4171d7:	rol    eax,1
  4171d9:	dec    ebx
  4171da:	adc    dh,ch
  4171dc:	and    al,0x89
  4171de:	adc    DWORD PTR [ebp+eiz*8-0x394e829f],ebp
  4171e5:	or     dl,BYTE PTR [edi+0xf3614bd]
  4171eb:	jno    0x41717a
  4171ed:	retf   
  4171ee:	fcmovnu st,st(5)
  4171f0:	push   ebp
  4171f1:	cmp    esp,DWORD PTR [eax-0x6fd3549a]
  4171f7:	sub    BYTE PTR [eax+0x1a955304],dh
  4171fd:	sbb    edi,esp
  4171ff:	into   
  417200:	and    eax,0xe6cda1e3
  417205:	sti    
  417206:	xor    ebx,DWORD PTR [ebx+0x4f]
  417209:	or     eax,0xefab5d95
  41720e:	cmp    ecx,ecx
  417210:	mov    edi,0x86656a90
  417215:	es cmp al,0xde
  417218:	call   0x16e9d7b3
  41721d:	and    esp,DWORD PTR [esi]
  41721f:	cli    
  417220:	scas   eax,DWORD PTR es:[edi]
  417221:	sar    BYTE PTR [ebx-0x3d638f83],cl
  417227:	adc    eax,0xbeb26b5
  41722c:	fnstcw WORD PTR [eax]
  41722e:	sub    DWORD PTR [edx+ebx*8],eax
  417231:	ret    
  417232:	cdq    
  417233:	call   0x294ae787
  417238:	and    eax,0x84ec3db5
  41723d:	outs   dx,BYTE PTR ds:[esi]
  41723e:	cdq    
  41723f:	mov    dl,0x83
  417241:	hlt    
  417242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417243:	pushf  
  417244:	test   DWORD PTR [ebx],ebp
  417246:	or     eax,0x3bc59dab
  41724b:	hlt    
  41724c:	pop    ecx
  41724d:	add    esp,esp
  41724f:	call   0x39e86b79
  417254:	shl    ebp,0xc5
  417257:	jecxz  0x4171e5
  417259:	sbb    ecx,DWORD PTR [eax+0xb]
  41725c:	mov    ?,WORD PTR [edx-0x4a7bb945]
  417262:	push   0x8540a34d
  417267:	cmp    ch,al
  417269:	inc    edx
  41726a:	mov    eax,ds:0xf072b1b9
  41726f:	bound  ecx,QWORD PTR [esi+0x1abe01ce]
  417275:	mov    eax,0x545a053f
  41727a:	pop    eax
  41727b:	pop    esi
  41727c:	shr    eax,0x4
  41727f:	push   edi
  417280:	inc    ebp
  417281:	mov    cl,0xa1
  417283:	setb   BYTE PTR [ebx+0x7d7fb9b4]
  41728a:	push   ecx
  41728b:	xor    bl,BYTE PTR [ebx]
  41728d:	xlat   BYTE PTR ds:[ebx]
  41728e:	or     esp,eax
  417290:	inc    eax
  417291:	xchg   DWORD PTR [ebp+0x1f3f0e02],esp
  417297:	adc    eax,0x96643418
  41729c:	rcr    BYTE PTR [edx-0x4291a14c],cl
  4172a2:	addr16 iret 
  4172a4:	jle    0x4172c0
  4172a6:	jp     0x417319
  4172a8:	mov    DWORD PTR [ecx],0xe74eafc3
  4172ae:	frstor [ebx]
  4172b0:	jae    0x4172c2
  4172b2:	addr16 enter 0x251,0xc
  4172b7:	sbb    ch,BYTE PTR [eax-0x79]
  4172ba:	cmp    ah,ah
  4172bc:	inc    esp
  4172bd:	(bad)  
  4172be:	jle    0x417307
  4172c0:	sbb    DWORD PTR [ebp-0x73957438],esi
  4172c6:	out    0xe2,al
  4172c8:	das    
  4172c9:	ja     0x4172d9
  4172cb:	sub    dl,BYTE PTR [eax+0x29]
  4172ce:	imul   ecx,DWORD PTR [esi],0xeceb06de
  4172d4:	loope  0x417319
  4172d6:	pop    edx
  4172d7:	mov    DWORD PTR [edi-0x45d9d9b5],esi
  4172dd:	dec    esp
  4172de:	push   0x6d
  4172e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e1:	pop    esp
  4172e2:	out    0x93,eax
  4172e4:	bnd jge 0x417308
  4172e7:	pusha  
  4172e8:	(bad)  
  4172ea:	fist   DWORD PTR [edx]
  4172ec:	xlat   BYTE PTR ds:[ebx]
  4172ed:	or     DWORD PTR [edi-0x1d],0xffffffe7
  4172f1:	adc    ebp,DWORD PTR [edx+esi*8-0x5871a5ad]
  4172f8:	(bad)  
  4172fa:	xor    ecx,DWORD PTR [ebp-0x6399f8bc]
  417300:	inc    edx
  417301:	pop    esp
  417302:	leave  
  417303:	call   0xc19a7c62
  417308:	inc    esi
  417309:	jnp    0x4172c8
  41730b:	push   eax
  41730c:	je     0x41732e
  41730e:	in     eax,dx
  41730f:	adc    BYTE PTR [ecx],dl
  417311:	and    eax,0x9a910f27
  417316:	mov    ds:0x75856680,eax
  41731b:	xor    BYTE PTR [eax-0x61],0x8c
  41731f:	outs   dx,BYTE PTR ds:[esi]
  417320:	loopne 0x41737f
  417322:	rcr    DWORD PTR [ebx-0x58],0xc1
  417326:	xchg   edi,eax
  417327:	mov    esi,0x99c0e7e1
  41732c:	scas   eax,DWORD PTR es:[edi]
  41732d:	ret    
  41732e:	or     DWORD PTR [edx+0x17eb0c75],edx
  417334:	sbb    ecx,edi
  417336:	popf   
  417337:	xor    ch,BYTE PTR [ebp-0x4d]
  41733a:	or     BYTE PTR [edi-0x76],0x43
  41733e:	test   al,0x10
  417340:	inc    edi
  417341:	pop    esi
  417342:	bound  ebp,QWORD PTR [eax-0x62]
  417345:	jno    0x417358
  417347:	sub    dh,BYTE PTR [eax+0x1c516d86]
  41734d:	fstp   st(4)
  41734f:	mov    ebp,DWORD PTR [esi+ebp*2-0x6d29671a]
  417356:	(bad)  
  417357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417358:	(bad)  
  417359:	ror    bh,0x60
  41735c:	mov    ecx,0xf7a78919
  417361:	mov    dl,0x45
  417363:	jbe    0x41737f
  417365:	cld    
  417366:	ss fs clc 
  417369:	sub    al,0x4f
  41736b:	fild   QWORD PTR [eax]
  41736d:	xor    esp,esp
  41736f:	cmc    
  417370:	push   ebx
  417371:	repnz lock fbstp TBYTE PTR [edx+0x7d]
  417376:	sar    BYTE PTR [eax-0x27dfb0cc],0xbc
  41737d:	or     bl,bh
  41737f:	sbb    BYTE PTR [esi],ch
  417381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417382:	test   al,0x1f
  417384:	je     0x4173d2
  417386:	add    DWORD PTR [esp+edx*4-0x29],edx
  41738a:	mov    ecx,0xbe9cbd65
  41738f:	jmp    0x4b4e5296
  417394:	inc    ebx
  417395:	push   es
  417396:	add    BYTE PTR [edx-0x29],bh
  417399:	and    DWORD PTR [ebx],ebp
  41739b:	xchg   ebx,eax
  41739c:	jmp    0x417344
  41739e:	xor    ebx,DWORD PTR [esi+0x1a]
  4173a1:	mov    al,ds:0xf53bc9ab
  4173a6:	cmp    al,0x54
  4173a8:	pushf  
  4173a9:	icebp  
  4173aa:	outs   dx,DWORD PTR ds:[esi]
  4173ab:	test   al,0xd2
  4173ad:	xchg   DWORD PTR [esi],ecx
  4173af:	ja     0x41737d
  4173b1:	popf   
  4173b2:	xchg   ebp,eax
  4173b3:	sahf   
  4173b4:	fs stc 
  4173b6:	repz jmp 0x4173c6
  4173b9:	cmp    esp,DWORD PTR [edi-0x50]
  4173bc:	sub    ecx,DWORD PTR [edi]
  4173be:	mov    edx,0xdb56c6c3
  4173c3:	and    eax,esi
  4173c5:	add    DWORD PTR ds:0x73581706,esp
  4173cb:	sbb    edi,DWORD PTR [edx+0x61]
  4173ce:	jmp    0x40b3fb55
  4173d3:	pop    ebx
  4173d4:	jle    0x417447
  4173d6:	arpl   cx,di
  4173d8:	das    
  4173d9:	dec    ebx
  4173da:	into   
  4173db:	cs push ss
  4173dd:	scas   al,BYTE PTR es:[edi]
  4173de:	cmp    ch,BYTE PTR [edx-0x126acccb]
  4173e4:	and    al,0x8
  4173e6:	cmc    
  4173e7:	jl     0x41736e
  4173e9:	mov    dl,0xb
  4173eb:	sub    ebx,edx
  4173ed:	not    BYTE PTR [ebx-0x73]
  4173f0:	lods   eax,DWORD PTR ds:[esi]
  4173f1:	inc    ecx
  4173f2:	xor    eax,0x3d937ff7
  4173f7:	es int3 
  4173f9:	jb     0x4173a3
  4173fb:	and    al,0x38
  4173fd:	jmp    0xf535:0x4b128369
  417404:	ret    0x59e2
  417407:	mov    esi,0x278402f0
  41740c:	mov    eax,0x18df41d6
  417411:	add    dh,BYTE PTR [edi]
  417413:	xor    bh,BYTE PTR [esi]
  417415:	scas   eax,DWORD PTR es:[edi]
  417416:	out    dx,al
  417417:	test   DWORD PTR [edx],esi
  417419:	jbe    0x41742f
  41741b:	pop    ss
  41741c:	cmp    eax,0xd742c9f3
  417421:	idiv   BYTE PTR [ecx+0xba1b48a]
  417427:	sub    dl,BYTE PTR [ebx]
  417429:	cmp    BYTE PTR [eax],ch
  41742b:	mov    dl,0x3a
  41742d:	jl     0x4173af
  41742f:	inc    ebp
  417430:	scas   eax,DWORD PTR es:[edi]
  417431:	inc    edx
  417432:	push   edi
  417434:	and    dh,BYTE PTR ds:0xd28adc1c
  41743a:	cs ret 
  41743c:	bound  edx,QWORD PTR [ecx+0x55]
  41743f:	cmp    DWORD PTR [ebp+0x1a],ecx
  417442:	dec    ecx
  417443:	pop    ebx
  417444:	or     eax,0xc6cfa921
  417449:	cmp    eax,0xc5737b2e
  41744e:	xor    eax,0x5e92d9f7
  417453:	xchg   edi,eax
  417454:	mov    ecx,0x49e8403a
  417459:	xchg   esi,eax
  41745a:	push   ds
  41745b:	cwde   
  41745c:	test   BYTE PTR [edx+0x7a8d2b9],al
  417462:	(bad)  
  417463:	xchg   esi,eax
  417464:	push   ss
  417465:	das    
  417466:	mov    ecx,ecx
  417468:	jmp    0xc2ab8192
  41746d:	gs dec ebp
  41746f:	out    dx,eax
  417470:	sbb    bh,BYTE PTR [ecx-0x28]
  417473:	jmp    FWORD PTR [esi+0x10]
  417476:	imul   BYTE PTR [edx+esi*4]
  417479:	sahf   
  41747a:	fmul   QWORD PTR [esi+0xf9a2672]
  417480:	add    eax,0x90e3ebde
  417485:	mov    ch,0x62
  417487:	test   BYTE PTR [ebx],bh
  417489:	imul   esp,DWORD PTR [esi+0x5956fe71],0x7f16aac9
  417493:	mov    BYTE PTR [edi+0x4e],cl
  417496:	test   DWORD PTR [edi],edi
  417498:	xchg   BYTE PTR [edx-0x2f],bl
  41749b:	fist   WORD PTR [edi+esi*1]
  41749e:	test   al,0xbe
  4174a0:	lds    esi,FWORD PTR [ebx-0x6d61f0f3]
  4174a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a7:	sbb    dh,BYTE PTR [eax-0x2c]
  4174aa:	jg     0x417492
  4174ac:	cld    
  4174ad:	and    BYTE PTR [eax-0x2775ff27],dh
  4174b3:	in     eax,0xa1
  4174b5:	out    0xe8,eax
  4174b7:	cmp    ebx,DWORD PTR [edx]
  4174b9:	stos   DWORD PTR es:[edi],eax
  4174ba:	outs   dx,DWORD PTR ds:[esi]
  4174bb:	ds add ch,dh
  4174be:	cmp    esp,0xffffffcd
  4174c1:	mov    al,0x47
  4174c3:	adc    al,0x37
  4174c5:	lock xacquire or BYTE PTR [ebp-0x597ff243],cl
  4174cd:	push   ecx
  4174ce:	dec    esi
  4174cf:	fisubr WORD PTR [edx-0x49]
  4174d2:	jo     0x41746e
  4174d4:	mov    cl,0x10
  4174d6:	add    DWORD PTR [eax+0x67],eax
  4174d9:	push   0x8ec59acf
  4174de:	add    eax,DWORD PTR [edx+0x5fba9505]
  4174e4:	outs   dx,DWORD PTR ds:[esi]
  4174e5:	ins    DWORD PTR es:[edi],dx
  4174e6:	dec    ecx
  4174e7:	mov    ds:0xccc47878,eax
  4174ec:	mov    al,0x38
  4174ee:	push   0x52
  4174f0:	or     eax,0x367c62f9
  4174f5:	sbb    DWORD PTR [ebp+edx*1-0x5bc871e8],0x68
  4174fd:	mov    dl,BYTE PTR [esi-0x1e]
  417500:	adc    cl,BYTE PTR [esi-0x2a]
  417503:	push   eax
  417504:	add    dh,dl
  417506:	int    0x52
  417508:	hlt    
  417509:	bound  ebx,QWORD PTR [ecx+0x3ebb2d56]
  41750f:	jecxz  0x417570
  417511:	add    eax,0xc94eb863
  417516:	dec    eax
  417517:	gs std 
  417519:	pusha  
  41751a:	fbstp  TBYTE PTR [esi]
  41751c:	mov    eax,ds:0xdcc3ce82
  417521:	mov    DWORD PTR [edx],edx
  417523:	jns    0x4174ca
  417525:	add    DWORD PTR [ecx-0x6c2d63ef],edi
  41752b:	cmp    eax,0x14ae11ce
  417530:	inc    edx
  417531:	xor    bh,dl
  417533:	outs   dx,BYTE PTR ds:[esi]
  417534:	sbb    BYTE PTR [edx+edx*2+0x4],bh
  417538:	jnp    0x417577
  41753a:	adc    dl,BYTE PTR [ecx-0x4f]
  41753d:	adc    esp,DWORD PTR [edx]
  41753f:	pop    edx
  417540:	ror    BYTE PTR [edi-0x28],0xf5
  417544:	repz or ebx,eax
  417547:	test   eax,0x13905f3
  41754c:	dec    edx
  41754d:	add    al,0xbe
  41754f:	(bad)  
  417550:	jnp    0x417574
  417552:	mov    BYTE PTR [edi],cl
  417554:	xor    edx,DWORD PTR [esp+edi*8-0x6300bfa1]
  41755b:	sahf   
  41755c:	fidiv  WORD PTR [ebp-0x177b4516]
  417562:	jecxz  0x417542
  417564:	push   es
  417565:	adc    DWORD PTR [edi],esp
  417567:	das    
  417568:	mov    cl,0x8e
  41756a:	test   BYTE PTR [edx],dl
  41756c:	cli    
  41756d:	loopne 0x417559
  41756f:	dec    ecx
  417570:	mov    DWORD PTR [esi+0x1a],edx
  417573:	mov    bh,BYTE PTR [ebx-0x75]
  417576:	pop    esp
  417577:	pop    edx
  417578:	(bad)  
  417579:	cmp    eax,DWORD PTR [eax+0x1e72d06e]
  41757f:	test   ecx,ecx
  417581:	lods   eax,DWORD PTR ds:[esi]
  417582:	sbb    al,BYTE PTR [edi-0x1d]
  417585:	sub    BYTE PTR [eax+0x26],0xe
  417589:	and    al,0x1e
  41758b:	stc    
  41758c:	mov    eax,0xe3162ffb
  417591:	sbb    BYTE PTR [ecx],ah
  417593:	add    cl,bh
  417595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417596:	xchg   ebp,ebx
  417598:	std    
  417599:	lds    eax,FWORD PTR [ecx-0x72619921]
  41759f:	xor    BYTE PTR [eax+0x5c],ah
  4175a2:	dec    edx
  4175a3:	js     0x417623
  4175a5:	cmp    BYTE PTR [esi+0x21],bh
  4175a8:	int    0x76
  4175aa:	fs retf 0x35ab
  4175ae:	cwde   
  4175af:	jmp    0x4175b2
  4175b1:	mov    ecx,0x73310ba0
  4175b6:	xchg   esi,eax
  4175b7:	popf   
  4175b8:	call   0xda214523
  4175bd:	mov    bh,0x27
  4175bf:	repnz mov edx,0xb6b58d9d
  4175c5:	inc    edi
  4175c6:	in     eax,0x41
  4175c8:	fmulp  st(0),st
  4175ca:	dec    ebp
  4175cb:	mov    eax,ds:0xd2af4f9e
  4175d0:	fidiv  WORD PTR [ecx+0x68934e26]
  4175d6:	popf   
  4175d7:	stc    
  4175d8:	inc    esi
  4175d9:	popf   
  4175da:	push   ds
  4175db:	inc    esi
  4175dc:	and    eax,0xf8ecd01a
  4175e1:	add    ebp,DWORD PTR [ebp-0x76]
  4175e4:	test   eax,0x8e15592c
  4175e9:	pushf  
  4175ea:	(bad)  
  4175eb:	shl    BYTE PTR [ebp-0x7e86ec5b],cl
  4175f1:	mov    ch,BYTE PTR [ebp-0x6b]
  4175f4:	jnp    0x417623
  4175f6:	jmp    0x4175fd
  4175f8:	repz adc DWORD PTR [ecx-0x662f5a5c],eax
  4175ff:	fnstsw WORD PTR [edx+0xe]
  417602:	(bad)  
  417603:	(bad)  
  417604:	push   ds
  417605:	pop    edi
  417606:	fld    DWORD PTR [edi+edx*2]
  417609:	jmp    0xd9c75dc1
  41760e:	daa    
  41760f:	adc    bl,bh
  417611:	fcomp  DWORD PTR [edx-0x3201e77b]
  417617:	push   ebp
  417618:	les    esi,FWORD PTR [esi-0x14fd836]
  41761e:	sbb    al,0x6
  417620:	test   DWORD PTR [eax+0x3f],esi
  417623:	ss mov bh,0x3a
  417626:	jnp    0x4175dd
  417628:	repnz pop es
  41762a:	inc    edi
  41762b:	jnp    0x41761d
  41762d:	jmp    0x417685
  41762f:	jae    0x4175fb
  417631:	xor    al,0x92
  417633:	ins    DWORD PTR es:[edi],dx
  417634:	mov    esp,0xaf5d4840
  417639:	sub    al,0xf6
  41763b:	aaa    
  41763c:	scas   al,BYTE PTR es:[edi]
  41763d:	outs   dx,DWORD PTR ds:[esi]
  41763e:	hlt    
  41763f:	push   eax
  417640:	(bad)  
  417641:	mov    ecx,0xe950b6c0
  417646:	and    eax,0xc9f9526e
  41764b:	out    dx,eax
  41764c:	inc    esi
  41764d:	pop    es
  41764e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41764f:	rol    edx,cl
  417651:	enter  0x27df,0x7
  417655:	xchg   edx,eax
  417656:	xchg   BYTE PTR [edx-0x10],bh
  417659:	fsub   st(7),st
  41765b:	lea    edi,[ebx+0x56]
  41765e:	cld    
  41765f:	jo     0x417602
  417661:	inc    ebx
  417662:	loope  0x417629
  417664:	pop    ecx
  417665:	pop    ebp
  417666:	out    0xa9,al
  417668:	sbb    bl,BYTE PTR [ecx]
  41766a:	test   eax,0x1b36a83a
  41766f:	or     edi,0xc
  417672:	push   ecx
  417673:	add    eax,ecx
  417675:	jecxz  0x4176eb
  417677:	add    al,0xeb
  41767a:	push   esp
  41767b:	jle    0x4176b8
  41767d:	inc    ebp
  41767e:	(bad)  
  417680:	gs je  0x4176c3
  417683:	mov    dh,0x83
  417685:	or     BYTE PTR [ebx-0x34],bh
  417688:	inc    ebx
  417689:	es push ecx
  41768b:	pop    ss
  41768c:	addr16 jno 0x417701
  41768f:	outs   dx,BYTE PTR ds:[esi]
  417690:	ret    
  417691:	aad    0x6b
  417693:	cs idiv BYTE PTR ss:[esi+0x1f32ded4]
  41769b:	add    esi,edi
  41769d:	gs out dx,al
  41769f:	aaa    
  4176a0:	sub    bl,BYTE PTR [ebp+0x7a]
  4176a3:	xor    eax,0x4215d8f9
  4176a8:	shr    ah,0xd3
  4176ab:	aaa    
  4176ac:	(bad)  
  4176ad:	xchg   ebx,eax
  4176ae:	dec    edx
  4176af:	es and ah,0x91
  4176b3:	gs or  al,0x78
  4176b6:	jae    0x41768d
  4176b8:	push   edx
  4176b9:	ds mov edx,0x4062a62
  4176bf:	cwde   
  4176c0:	mov    BYTE PTR [ebx-0x6c],cl
  4176c3:	inc    ebp
  4176c4:	pop    ebx
  4176c5:	fwait
  4176c6:	sub    ebx,ecx
  4176c8:	mov    dl,0xac
  4176ca:	xor    al,0xb5
  4176cc:	mov    ah,0x0
  4176ce:	ds out dx,al
  4176d0:	lea    eax,[esi+0x3080fa38]
  4176d6:	xor    BYTE PTR [esi-0x7],al
  4176d9:	out    dx,eax
  4176da:	adc    DWORD PTR [edx-0x1d],ecx
  4176dd:	sar    DWORD PTR [esi*1-0x5eeed387],cl
  4176e4:	add    bh,BYTE PTR [edx]
  4176e6:	push   cs
  4176e7:	ins    DWORD PTR es:[edi],dx
  4176e8:	cdq    
  4176e9:	call   0xf9e36564
  4176ee:	xchg   edx,eax
  4176ef:	mov    esi,DWORD PTR [ebx]
  4176f1:	mov    bl,0xc9
  4176f3:	frstor [edi+ecx*1-0x7f]
  4176f7:	mov    WORD PTR [esi],cs
  4176f9:	pop    edx
  4176fa:	enter  0x245f,0x43
  4176fe:	add    eax,0x6bb3c75b
  417703:	xchg   DWORD PTR [ebp+0x6],ebp
  417706:	sbb    edx,edi
  417708:	enter  0x9972,0xab
  41770c:	std    
  41770d:	cdq    
  41770e:	push   ebx
  41770f:	std    
  417710:	mov    ebp,0x31433e9b
  417715:	xchg   esp,eax
  417716:	fdivr  QWORD PTR [ebx]
  417718:	pop    ds
  417719:	or     eax,esi
  41771b:	adc    edi,DWORD PTR ds:[ebx]
  41771e:	sbb    al,0xf7
  417720:	jl     0x417747
  417722:	add    eax,0x6ff73286
  417727:	ja     0x4176f4
  417729:	lods   al,BYTE PTR ds:[esi]
  41772a:	push   esp
  41772b:	nop
  41772c:	xchg   DWORD PTR [edi+ecx*4-0x56],ecx
  417730:	push   ss
  417731:	mov    ah,0x4e
  417733:	adc    edi,DWORD PTR [esp+esi*1-0x5a]
  417737:	mov    al,ds:0x5189825e
  41773c:	hlt    
  41773d:	in     eax,0xd3
  41773f:	test   cl,dl
  417741:	add    BYTE PTR [ecx-0x4b],ah
  417744:	fld    QWORD PTR cs:[eax+0x67818abb]
  41774b:	xor    DWORD PTR [esi],ebx
  41774d:	mov    gs,WORD PTR [ecx-0x77]
  417750:	daa    
  417751:	pop    esi
  417752:	add    DWORD PTR [eax-0x51],ebp
  417755:	jge    0x4177a0
  417757:	xchg   DWORD PTR [ebx-0x49],eax
  41775a:	jno    0x4177aa
  41775c:	or     eax,0x3539712f
  417761:	stc    
  417762:	lock dec esi
  417764:	scas   eax,DWORD PTR es:[edi]
  417765:	cmp    edi,DWORD PTR [esi+0x3af5d54]
  41776b:	push   cs
  41776c:	loopne 0x417705
  41776e:	stos   DWORD PTR es:[edi],eax
  41776f:	lea    ebx,[ebp+0x67]
  417772:	dec    edi
  417773:	sbb    ah,BYTE PTR [ecx+0x7b]
  417776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417777:	neg    DWORD PTR [ebx+0x116a3c85]
  41777d:	(bad)
  417781:	pop    eax
  417782:	inc    ecx
  417783:	or     ah,BYTE PTR [ebx+0x58]
  417786:	ret    
  417787:	call   0x384a:0xc5c61573
  41778e:	and    DWORD PTR [esi],esi
  417790:	(bad)  
  417791:	leave  
  417792:	and    BYTE PTR [edx+0x6e895f37],ch
  417798:	int3   
  417799:	ss mov bl,0x71
  41779c:	pushf  
  41779d:	(bad)  
  41779e:	jmp    0xedc95c5e
  4177a3:	pop    esp
  4177a4:	push   esp
  4177a5:	iret   
  4177a6:	outs   dx,BYTE PTR ds:[esi]
  4177a7:	out    dx,al
  4177a8:	into   
  4177a9:	into   
  4177aa:	sbb    eax,0x15c24cc6
  4177af:	xchg   esp,eax
  4177b0:	je     0x417735
  4177b2:	mov    WORD PTR [edx-0x4a],gs
  4177b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177b6:	repz imul eax,eax,0x12
  4177ba:	mov    ah,BYTE PTR [ecx-0x54b9a84b]
  4177c0:	push   esi
  4177c1:	jmp    0x8565bf88
  4177c6:	push   esi
  4177c7:	mov    ebx,0x1d8f605e
  4177cc:	pushf  
  4177cd:	cmp    al,0x24
  4177cf:	add    eax,0x32325180
  4177d4:	pop    ebp
  4177d5:	push   es
  4177d6:	retf   0x2f88
  4177d9:	mov    DWORD PTR [ebp-0x22],ecx
  4177dc:	jecxz  0x4177d3
  4177de:	push   eax
  4177df:	fcom   QWORD PTR [eax-0x6b]
  4177e2:	add    ah,BYTE PTR [ebp-0x101b417b]
  4177e8:	inc    esi
  4177e9:	test   BYTE PTR [edx-0x4f],al
  4177ec:	push   cs
  4177ed:	mov    ebx,0xfd67d7ed
  4177f2:	sbb    DWORD PTR ds:0x82f4c745,edx
  4177f9:	cmp    ebx,DWORD PTR [edi-0x6563a2c]
  4177ff:	xor    eax,0x63efe54d
  417804:	lahf   
  417805:	cmp    DWORD PTR [edi+0x2619de1a],ebx
  41780b:	mov    esi,0x678bae0d
  417810:	retf   0x6915
  417813:	loopne 0x4177cc
  417815:	bound  edx,QWORD PTR [ebx-0x5f]
  417818:	fsubr  DWORD PTR [ebx-0x7a8ecb43]
  41781e:	or     al,BYTE PTR [ebx-0x76]
  417821:	fxch   st(1)
  417823:	dec    ebx
  417824:	or     ebx,DWORD PTR [esi+0x75]
  417827:	mov    al,0x74
  417829:	push   edx
  41782a:	sub    eax,0x73c5f969
  41782f:	and    BYTE PTR [ecx],bl
  417831:	mov    ch,0xd1
  417833:	jg     0x4177eb
  417835:	jmp    0x4177df
  417837:	fdiv   st,st(3)
  417839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41783a:	aas    
  41783b:	rcl    DWORD PTR [edi],cl
  41783d:	xor    BYTE PTR [ebx],dl
  41783f:	dec    esp
  417840:	or     ebx,0x49eceff8
  417846:	and    al,BYTE PTR [eax]
  417848:	les    ecx,FWORD PTR ds:0xf0c857b1
  41784e:	aad    0xc0
  417850:	push   ebp
  417851:	js     0x417807
  417853:	dec    edx
  417854:	push   edx
  417855:	into   
  417856:	lds    ebx,FWORD PTR [esi+edi*4+0x4a]
  41785a:	cli    
  41785b:	scas   al,BYTE PTR es:[edi]
  41785c:	ret    
  41785d:	(bad)  
  41785e:	test   eax,0x31cc0344
  417863:	(bad)
  417867:	add    BYTE PTR [eax+0x2aa4407f],bl
  41786d:	mov    BYTE PTR [esi-0x4c],0x9f
  417871:	enter  0x94e4,0x7a
  417875:	lea    edi,[edi+ebp*1-0x3f]
  417879:	mov    ebx,0xdeb0b0ad
  41787e:	mov    edx,0x69444d42
  417883:	or     DWORD PTR [eax],eax
  417885:	add    DWORD PTR ds:0x4912e624,eax
  41788b:	aam    0x52
  41788d:	mov    ecx,0x626b7355
  417892:	loope  0x4178eb
  417894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417896:	pushf  
  417897:	mov    dh,ah
  417899:	(bad)  
  41789a:	sub    eax,0xdcfa06bf
  41789f:	(bad)  
  4178a0:	fild   DWORD PTR ds:0xd6609677
  4178a6:	and    BYTE PTR [ecx+0x6d],0xb6
  4178aa:	mov    ch,0x6e
  4178ac:	rol    cl,1
  4178ae:	add    al,0x6d
  4178b0:	push   eax
  4178b1:	and    DWORD PTR [ebx-0x23205f69],esi
  4178b7:	push   ebx
  4178b8:	inc    ebx
  4178b9:	shl    ch,0x8f
  4178bc:	inc    ebx
  4178bd:	addr16 ffreep st(3)
  4178c0:	jnp    0x4178d8
  4178c2:	sbb    eax,0xf874ae1d
  4178c7:	push   es
  4178c8:	jne    0x417878
  4178ca:	mov    edi,ebp
  4178cc:	lds    esi,FWORD PTR [edx-0x53f6f087]
  4178d2:	mov    ecx,0x2a10321e
  4178d7:	shr    ecx,0x97
  4178da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178db:	aaa    
  4178dc:	and    edx,edx
  4178de:	push   es
  4178df:	js     0x4178fc
  4178e1:	into   
  4178e2:	dec    eax
  4178e3:	add    cl,dl
  4178e5:	fs dec eax
  4178e7:	lahf   
  4178e8:	push   0x1f
  4178ea:	push   eax
  4178ec:	lock cli 
  4178ee:	test   eax,0x31803819
  4178f3:	rol    esi,0x88
  4178f6:	pop    eax
  4178f7:	loop   0x4178e6
  4178f9:	push   esi
  4178fa:	int3   
  4178fb:	mov    cl,0x46
  4178fd:	dec    edx
  4178fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ff:	cmp    al,0xbd
  417901:	fwait
  417902:	dec    ecx
  417903:	mov    gs,ecx
  417905:	pop    ebx
  417906:	jl     0x4178e6
  417908:	push   esi
  417909:	in     eax,0x3
  41790b:	ins    DWORD PTR es:[edi],dx
  41790c:	aaa    
  41790d:	hlt    
  41790e:	hlt    
  41790f:	ins    BYTE PTR es:[edi],dx
  417910:	aad    0xb0
  417912:	pop    edx
  417913:	les    eax,FWORD PTR [ebp+esi*4+0x6966b229]
  41791a:	aaa    
  41791b:	or     eax,0xad5db8d0
  417920:	and    BYTE PTR [ecx+0xa74a888],0x12
  417927:	xchg   cl,ch
  417929:	jmp    FWORD PTR [eax+0x77973b11]
  41792f:	pop    esi
  417930:	mov    eax,ds:0x315e7aef
  417935:	mov    DWORD PTR [ebx+0x822b5b5],esi
  41793b:	pop    esi
  41793c:	inc    edx
  41793d:	jb     0x417966
  41793f:	mov    ebx,0x918c771a
  417944:	(bad)  
  417946:	push   edi
  417947:	cwde   
  417948:	out    dx,al
  417949:	or     BYTE PTR [eax+0x7f],ah
  41794c:	pop    es
  41794d:	sub    esp,0xffffffd5
  417950:	(bad)  
  417952:	pop    ds
  417953:	(bad)  
  417954:	mov    edi,0x59da9d96
  417959:	clc    
  41795a:	sub    ch,bh
  41795c:	out    0xa6,al
  41795e:	mov    bl,0x52
  417960:	mov    esi,0x7480d81d
  417965:	sub    eax,0x9b641992
  41796a:	gs dec eax
  41796c:	push   ecx
  41796d:	sub    eax,0xe504b3ba
  417972:	sbb    ecx,DWORD PTR [edx-0x38]
  417975:	mov    ds:0xebc66c14,al
  41797a:	js     0x417930
  41797c:	stos   DWORD PTR es:[edi],eax
  41797d:	add    ah,al
  41797f:	jnp    0x417980
  417981:	sub    ebx,DWORD PTR [ecx]
  417983:	cmp    BYTE PTR [esi+esi*2],cl
  417986:	lahf   
  417987:	test   ecx,0xfbf3ba92
  41798d:	dec    ebx
  41798e:	pop    ecx
  41798f:	mov    ebp,0xc21d114d
  417994:	repz int 0x67
  417997:	mov    cl,BYTE PTR [edi+0x48d598e2]
  41799d:	fbstp  TBYTE PTR [esi-0x61157da9]
  4179a3:	sub    BYTE PTR [esi],ch
  4179a5:	fnsave [ebp-0x34]
  4179a8:	div    BYTE PTR [edi+0xe34a624]
  4179ae:	lds    ecx,FWORD PTR [eax+0x4c]
  4179b1:	xchg   DWORD PTR [ecx+0x6b],edi
  4179b4:	test   al,0xe0
  4179b6:	cwde   
  4179b7:	icebp  
  4179b8:	icebp  
  4179b9:	std    
  4179ba:	fistp  WORD PTR [ebp-0x2]
  4179bd:	xchg   esi,eax
  4179be:	sbb    eax,0x6d6daf6c
  4179c3:	paddusw mm2,mm3
  4179c6:	ja     0x4179d3
  4179c8:	cld    
  4179c9:	sub    al,0xda
  4179cb:	pop    edi
  4179cc:	in     al,dx
  4179cd:	fadd   QWORD PTR [edx]
  4179cf:	mov    ds:0x559597c5,al
  4179d4:	js     0x417a32
  4179d6:	cmp    al,0x29
  4179d8:	and    ebx,DWORD PTR [ecx-0x7b3fa7c2]
  4179de:	adc    edi,DWORD PTR [ecx]
  4179e0:	pop    eax
  4179e1:	mov    edx,0x3277eeae
  4179e6:	push   es
  4179e7:	das    
  4179e8:	iret   
  4179e9:	jecxz  0x417a15
  4179eb:	int    0xce
  4179ed:	adc    al,0x2d
  4179f0:	fnstenv [ebp+esi*2+0xe]
  4179f4:	add    DWORD PTR [ebp+0x50],0xffffffc7
  4179f8:	aaa    
  4179f9:	push   ecx
  4179fa:	cmp    ecx,DWORD PTR [edi]
  4179fc:	mov    esi,0x717c4830
  417a01:	daa    
  417a02:	dec    edx
  417a03:	out    dx,eax
  417a04:	je     0x4179fa
  417a06:	xor    eax,0x6d091a85
  417a0b:	mov    eax,ds:0x928812da
  417a10:	adc    al,0xfe
  417a12:	rcl    DWORD PTR [eax-0x6f7bd5d],cl
  417a18:	xor    dl,BYTE PTR [ecx+0x30396e5a]
  417a1e:	ds imul esp,edi,0x66
  417a22:	xchg   esp,eax
  417a23:	push   esp
  417a24:	adc    eax,DWORD PTR [edx-0x59]
  417a27:	ret    
  417a28:	std    
  417a29:	retf   
  417a2a:	cmc    
  417a2b:	add    BYTE PTR [ebp-0x70],dl
  417a2e:	adc    edx,esp
  417a30:	cs mov dh,0xf5
  417a33:	fnstenv [edx-0xc]
  417a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a37:	nop
  417a38:	cmp    eax,DWORD PTR [edi+0x12026a38]
  417a3e:	mov    WORD PTR [esi],ss
  417a40:	adc    dl,BYTE PTR [eax-0x18724ecd]
  417a46:	and    bl,BYTE PTR [ebp-0x3bf3f424]
  417a4c:	cmp    eax,0x9154ba2a
  417a51:	mov    DWORD PTR [ebx-0xe],ebp
  417a54:	dec    eax
  417a55:	addr16 pop esp
  417a57:	push   edx
  417a58:	mov    ebp,0xab66e2fc
  417a5d:	and    eax,0x2fcc1daf
  417a62:	scas   al,BYTE PTR es:[edi]
  417a63:	enter  0x7bd9,0x2
  417a67:	rcr    DWORD PTR [esp],1
  417a6a:	shl    BYTE PTR [eax],1
  417a6c:	add    al,0x1b
  417a6e:	mov    esi,0x4eb3e99b
  417a73:	call   0xf46d8f73
  417a78:	dec    esp
  417a79:	call   0x3db3:0x32453026
  417a80:	mov    al,0xc5
  417a82:	adc    BYTE PTR [edx+0x41],dl
  417a85:	cmp    al,0xa7
  417a87:	stos   BYTE PTR es:[edi],al
  417a88:	cmp    ebx,ecx
  417a8a:	scas   al,BYTE PTR es:[edi]
  417a8b:	jmp    0x417a6b
  417a8d:	loopne 0x417aec
  417a8f:	sub    esp,DWORD PTR [edi+eax*4+0x61f86e72]
  417a96:	adc    BYTE PTR [ebp+0x77],0xd3
  417a9a:	loope  0x417af8
  417a9c:	retf   0x91f7
  417a9f:	xor    eax,0x719bff60
  417aa4:	mov    cl,0x62
  417aa6:	iret   
  417aa7:	mov    ebx,0x39264e5b
  417aac:	scas   eax,DWORD PTR es:[edi]
  417aad:	push   ds
  417aae:	pop    ebp
  417aaf:	das    
  417ab0:	adc    edx,DWORD PTR [ebp+0x6f17ec0a]
  417ab6:	test   al,0x72
  417ab8:	inc    edi
  417aba:	mov    ah,0x0
  417abc:	mov    ecx,0xb5e5064c
  417ac1:	push   ecx
  417ac2:	in     al,0x97
  417ac4:	jmp    FWORD PTR [eax+0x19]
  417ac7:	jne    0x417a66
  417ac9:	push   ebx
  417aca:	adc    DWORD PTR [edx+eiz*4-0x10de8e1f],edx
  417ad1:	adc    DWORD PTR [esi],edi
  417ad3:	inc    edi
  417ad4:	sbb    eax,0x5d8ed146
  417ad9:	bound  esi,QWORD PTR [edx-0x5826404]
  417adf:	push   esp
  417ae0:	sub    al,0x3a
  417ae2:	scas   eax,DWORD PTR es:[edi]
  417ae3:	mov    ch,0x41
  417ae5:	data16 ja 0x417b0b
  417ae8:	sysenter 
  417aea:	dec    ebp
  417aeb:	pop    ds
  417aec:	mov    ds:0xaa8bb702,al
  417af1:	pop    esi
  417af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417af3:	push   ebx
  417af4:	lods   eax,DWORD PTR ds:[esi]
  417af5:	push   ss
  417af6:	jnp    0x417af3
  417af8:	test   eax,0xcb95ba3a
  417afd:	lahf   
  417afe:	xchg   ebx,eax
  417aff:	mov    eax,0xdeaee18c
  417b04:	sbb    eax,0x4642210f
  417b09:	imul   esp,eax,0xf93e967d
  417b0f:	daa    
  417b10:	repnz push ds
  417b12:	hlt    
  417b13:	dec    ebx
  417b14:	addr16 retf 
  417b16:	clc    
  417b17:	popa   
  417b18:	cmp    dh,ch
  417b1a:	xor    ebx,ebp
  417b1c:	loop   0x417b3b
  417b1e:	lea    esp,[esi+0x1f]
  417b21:	jmp    0xcdb7:0xe4abd14b
  417b28:	and    DWORD PTR [ecx+0x1417825d],edi
  417b2e:	push   cs
  417b2f:	push   ebx
  417b30:	pop    esp
  417b31:	and    eax,0xa43ec5d1
  417b36:	std    
  417b37:	sti    
  417b38:	add    ebp,DWORD PTR [esi-0x63]
  417b3b:	in     al,0x4d
  417b3d:	xlat   BYTE PTR ds:[ebx]
  417b3e:	cli    
  417b3f:	scas   al,BYTE PTR es:[edi]
  417b40:	cwde   
  417b41:	pop    ebx
  417b42:	scas   eax,DWORD PTR es:[edi]
  417b43:	aas    
  417b44:	xor    DWORD PTR [ebx],ebx
  417b46:	sub    eax,0x666e3a28
  417b4b:	or     DWORD PTR [eax+0x3d39681a],0x1eb8aee7
  417b55:	dec    esp
  417b56:	mov    esp,0xcc6b1439
  417b5b:	push   0x48816806
  417b60:	ret    0x4043
  417b63:	jnp    0x417b8f
  417b65:	adc    eax,0x65a2771d
  417b6a:	mov    edi,0xb4ad515
  417b6f:	xor    BYTE PTR [ecx],dh
  417b71:	add    ah,ah
  417b73:	mov    cl,0x92
  417b75:	int    0xc7
  417b77:	je     0x417bbb
  417b79:	cmp    edi,ebx
  417b7b:	xchg   edi,eax
  417b7c:	jno    0x417be5
  417b7e:	lea    ebx,[edx+ebx*4+0x2]
  417b82:	sub    BYTE PTR [edi],dl
  417b84:	mov    ds,ebx
  417b86:	cmp    al,0x98
  417b88:	mov    eax,ds:0xacb6575e
  417b8d:	stos   DWORD PTR es:[edi],eax
  417b8e:	adc    esp,DWORD PTR [ecx]
  417b90:	rcr    DWORD PTR [ebx],cl
  417b92:	fcom   st(1)
  417b94:	pop    ds
  417b95:	push   es
  417b96:	xchg   BYTE PTR [di],dl
  417b99:	test   DWORD PTR [edi+0x26c46b85],edi
  417b9f:	leave  
  417ba0:	jnp    0x417be5
  417ba2:	xchg   esp,eax
  417ba3:	mov    ah,0x24
  417ba5:	pop    ds
  417ba6:	and    ebp,DWORD PTR [esi-0x73c0924d]
  417bac:	leave  
  417bad:	test   al,0xe1
  417baf:	pop    ecx
  417bb0:	jo     0x417bea
  417bb2:	push   esi
  417bb3:	jle    0x417b63
  417bb5:	sub    bh,ah
  417bb7:	stos   DWORD PTR es:[edi],eax
  417bb8:	and    cl,ch
  417bba:	or     al,0x7
  417bbc:	inc    edi
  417bbd:	adc    ch,cl
  417bbf:	pushf  
  417bc0:	push   es
  417bc1:	cmp    BYTE PTR [esi+esi*2],ah
  417bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc5:	jmp    FWORD PTR [edx+0x77]
  417bc8:	sbb    BYTE PTR [esi],cl
  417bca:	pop    ebp
  417bcb:	mov    ds:0x20e0fbf4,al
  417bd0:	dec    esp
  417bd1:	jne    0x417be1
  417bd3:	pop    ss
  417bd4:	sbb    eax,0xdccc79b3
  417bd9:	jae    0x417bfe
  417bdb:	je     0x417c32
  417bdd:	int    0xfb
  417bdf:	xchg   DWORD PTR [esi+0x6],edx
  417be2:	stc    
  417be3:	cdq    
  417be4:	add    ebx,edi
  417be6:	(bad)  
  417be7:	call   0x9ce4:0xd5c4698c
  417bee:	fcmovne st,st(3)
  417bf0:	inc    esi
  417bf1:	mov    esp,0x4e207593
  417bf6:	int    0x19
  417bf8:	outs   dx,BYTE PTR ds:[esi]
  417bf9:	cld    
  417bfa:	js     0x417ba9
  417bfc:	(bad)  
  417bfd:	std    
  417bfe:	imul   DWORD PTR [ebp+0x1220660f]
  417c04:	sbb    eax,0xd3b84cbb
  417c09:	out    0xc9,al
  417c0b:	inc    edi
  417c0c:	test   al,0xd0
  417c0e:	push   edi
  417c0f:	xor    edx,esi
  417c11:	scas   eax,DWORD PTR es:[edi]
  417c12:	daa    
  417c13:	mov    BYTE PTR [esi],ah
  417c15:	(bad)  
  417c16:	pushf  
  417c17:	ds iret 
  417c19:	call   0x817f:0xa5678dbc
  417c20:	adc    ah,BYTE PTR [ebp+0x28301d18]
  417c26:	and    DWORD PTR [ebx+0x6d],ebx
  417c29:	loope  0x417bd3
  417c2b:	xchg   edi,edx
  417c2d:	into   
  417c2e:	cmp    bh,BYTE PTR es:[edi+0x5c]
  417c32:	sbb    eax,0xdf8b8716
  417c37:	mov    eax,0xa9b380f
  417c3c:	fsubr  DWORD PTR [eax+0x17]
  417c3f:	aam    0xa8
  417c41:	pop    esp
  417c42:	(bad)  
  417c43:	jne    0x417c57
  417c45:	cmp    al,0xd6
  417c47:	inc    edi
  417c48:	adc    bh,BYTE PTR [ebx+ebx*2]
  417c4b:	and    al,0x3d
  417c4d:	dec    eax
  417c4e:	add    eax,0xef8cd354
  417c53:	or     DWORD PTR [edi+0x50],esp
  417c56:	fst    QWORD PTR [esi+0x6e]
  417c59:	test   al,0x6a
  417c5b:	call   0xcb52a4fa
  417c60:	sbb    ah,BYTE PTR [eax+edx*4-0x2566abc6]
  417c67:	in     al,dx
  417c68:	push   edi
  417c69:	mov    DWORD PTR [esi],ecx
  417c6b:	dec    esi
  417c6c:	data16 mov bl,0x56
  417c6f:	mov    ecx,0xd61b249f
  417c74:	adc    DWORD PTR [ebx-0x7fa0aff8],edi
  417c7a:	ds xor eax,0x8c97c14d
  417c80:	repz push ds
  417c82:	mov    dl,0x41
  417c84:	sti    
  417c85:	jbe    0x417c49
  417c87:	jge    0x417c4b
  417c89:	xchg   edx,eax
  417c8a:	or     ecx,DWORD PTR [edx-0x72]
  417c8d:	cdq    
  417c8e:	imul   ecx,edi,0x41d4a92e
  417c94:	inc    ecx
  417c95:	sbb    DWORD PTR [ebx+0x1eafc946],ebx
  417c9b:	adc    DWORD PTR [ebx+0x1d],eax
  417c9e:	sbb    al,0x4e
  417ca0:	mov    bl,0x56
  417ca2:	push   ebp
  417ca3:	fistp  WORD PTR [edi+0x39]
  417ca6:	and    dl,BYTE PTR [edx]
  417ca8:	retf   
  417ca9:	mov    ebp,DWORD PTR [ecx]
  417cab:	test   al,0xc0
  417cad:	and    al,0xd7
  417caf:	retf   0xf4c3
  417cb2:	sub    BYTE PTR [esi-0x4cbaffe8],ch
  417cb8:	and    esi,DWORD PTR [eax-0x4ae43bf]
  417cbe:	mov    esp,0xdba346f9
  417cc3:	call   DWORD PTR [ebp+0x17]
  417cc6:	xor    bl,dh
  417cc8:	fsubr  DWORD PTR [ecx*2+0x7522e71e]
  417ccf:	push   ecx
  417cd0:	cmp    BYTE PTR [eax-0x26986b2d],bl
  417cd6:	mov    ecx,0xeed3a515
  417cdb:	push   esi
  417cdc:	mov    ah,0xae
  417cde:	dec    esi
  417cdf:	jnp    0x417cd8
  417ce1:	inc    ebp
  417ce2:	daa    
  417ce3:	jbe    0x417cd2
  417ce5:	sub    edx,edi
  417ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce8:	out    0x19,eax
  417cea:	bswap  ecx
  417cec:	(bad)  
  417cee:	add    al,0x37
  417cf0:	or     BYTE PTR [eax+esi*8-0xde3763c],ah
  417cf7:	inc    bl
  417cf9:	pop    ebp
  417cfa:	cli    
  417cfb:	xor    eax,0xe4ed7e5b
  417d00:	ds mov ch,0x25
  417d03:	in     al,dx
  417d04:	mov    BYTE PTR [ecx+ebp*8],0x76
  417d08:	or     ah,BYTE PTR [eax]
  417d0a:	pop    edx
  417d0b:	out    0xf4,al
  417d0d:	or     BYTE PTR [esi],dh
  417d0f:	into   
  417d10:	add    BYTE PTR [eax+0x30],0xf8
  417d14:	mov    dh,cl
  417d16:	dec    ecx
  417d17:	xchg   ebp,eax
  417d18:	sub    al,0x65
  417d1a:	adc    al,0xc3
  417d1c:	jmp    0x417cee
  417d1e:	pop    esp
  417d1f:	sub    al,0x7d
  417d21:	dec    ebx
  417d22:	jne    0x417d69
  417d24:	adc    eax,0x444bc70c
  417d29:	push   esp
  417d2a:	push   cs
  417d2b:	cmp    dh,dl
  417d2d:	imul   ecx,edx,0x8e35f264
  417d33:	push   ecx
  417d34:	aas    
  417d35:	test   ebx,esi
  417d37:	aad    0x75
  417d39:	stos   BYTE PTR es:[edi],al
  417d3a:	gs jns 0x417da0
  417d3d:	push   es
  417d3e:	out    0x1d,eax
  417d40:	(bad)  
  417d41:	(bad)  
  417d42:	test   eax,0x78833ebf
  417d47:	imul   edx,DWORD PTR [edi],0xffffffc5
  417d4a:	out    dx,eax
  417d4b:	mov    al,0x7c
  417d4d:	mov    ebx,0x27ea1d59
  417d52:	xor    BYTE PTR [edx-0x6f],dh
  417d55:	xchg   ebp,eax
  417d56:	rcr    al,0x2a
  417d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d5b:	or     eax,0xdbe071fb
  417d60:	in     eax,0x32
  417d62:	fmul   DWORD PTR [eax+0x67]
  417d65:	in     al,0xc0
  417d67:	ror    BYTE PTR [edx-0x5c],cl
  417d6a:	adc    eax,0x520ed857
  417d6f:	add    al,0xc8
  417d71:	(bad)  
  417d72:	stos   BYTE PTR es:[edi],al
  417d73:	sub    dl,BYTE PTR [ebx-0x167c219d]
  417d79:	mov    ebx,0xbd46a6d7
  417d7e:	or     eax,DWORD PTR [ebp+0x3b00354f]
  417d84:	ins    DWORD PTR es:[edi],dx
  417d85:	dec    edi
  417d86:	mov    al,0x6
  417d88:	shl    DWORD PTR [esi+eax*2-0x5d],1
  417d8c:	test   DWORD PTR [edi+0xb],0x64a718f7
  417d93:	adc    BYTE PTR [ebx+eax*8],cl
  417d96:	mov    ecx,0x80c2159e
  417d9b:	cmp    al,0x22
  417d9d:	std    
  417d9e:	retf   
  417d9f:	mov    dl,0xdd
  417da1:	pop    esi
  417da2:	test   DWORD PTR ds:0x3488250c,esp
  417da8:	adc    DWORD PTR [edi+0x3f6dc811],0xfffffff3
  417daf:	daa    
  417db0:	leave  
  417db1:	dec    esi
  417db2:	cmp    al,0x9e
  417db4:	mov    ?,WORD PTR [esp+ebx*2-0x3b]
  417db8:	(bad)  
  417db9:	adc    edx,DWORD PTR [edx+0x26]
  417dbc:	sub    BYTE PTR [ebx-0x6596f030],bl
  417dc2:	aaa    
  417dc3:	push   cs
  417dc4:	aad    0x49
  417dc6:	jp     0x417d94
  417dc8:	call   0x244a:0xa7d7e1c8
  417dcf:	sbb    BYTE PTR [eax-0x28c5b84d],dh
  417dd5:	lea    ecx,[eax+0x19]
  417dd8:	imul   eax,ecx,0x5b
  417ddb:	and    eax,0xe1ebd7b
  417de0:	scas   al,BYTE PTR es:[edi]
  417de1:	out    0x20,al
  417de3:	imul   ecx,DWORD PTR [eax-0x1c],0x3ea728a5
  417dea:	cmp    al,0xf7
  417dec:	xor    bh,BYTE PTR [edi-0x7d]
  417def:	inc    ebx
  417df0:	xchg   edi,eax
  417df1:	(bad)  
  417df2:	jae    0x417e64
  417df4:	jmp    FWORD PTR [ebx]
  417df6:	add    al,0xfa
  417df8:	xchg   edi,eax
  417df9:	jb     0x417d90
  417dfb:	add    DWORD PTR [eax],edi
  417dfd:	mov    bh,0xea
  417dff:	mov    DWORD PTR [eax+0x4e36e85d],edx
  417e05:	int    0x76
  417e07:	and    ch,BYTE PTR [ebx]
  417e09:	mov    ds:0xef267168,eax
  417e0e:	mov    ecx,0x9883c45
  417e13:	sbb    bh,BYTE PTR [edx-0x11]
  417e16:	fidiv  DWORD PTR [ebx-0x4bc09dc]
  417e1c:	scas   eax,DWORD PTR es:[edi]
  417e1d:	adc    dl,cl
  417e1f:	jle    0x417e71
  417e21:	aaa    
  417e22:	hlt    
  417e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e24:	inc    edi
  417e25:	popa   
  417e26:	push   ebx
  417e27:	lahf   
  417e28:	xchg   ch,ah
  417e2a:	loopne 0x417db6
  417e2c:	shr    BYTE PTR [ecx+0x31f9b86d],0xc8
  417e33:	das    
  417e34:	jle    0x417e4d
  417e36:	call   0x8154de04
  417e3b:	add    eax,0x17b57eb2
  417e40:	dec    ecx
  417e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e42:	pop    esp
  417e43:	dec    ecx
  417e44:	push   edi
  417e45:	sbb    DWORD PTR ds:0xcbc63c0d,edi
  417e4b:	push   eax
  417e4c:	cmp    ebp,DWORD PTR [edx-0x3e93123a]
  417e52:	out    dx,eax
  417e53:	jne    0x417e20
  417e55:	inc    eax
  417e56:	push   eax
  417e57:	cld    
  417e58:	stos   DWORD PTR es:[edi],eax
  417e59:	pop    ds
  417e5a:	xor    DWORD PTR [esi+0xc],edx
  417e5d:	push   ss
  417e5e:	shl    DWORD PTR [esi],0x92
  417e61:	scas   eax,DWORD PTR es:[edi]
  417e62:	shl    BYTE PTR [esi],0xdf
  417e65:	repnz add eax,0x59e4098f
  417e6b:	dec    esi
  417e6c:	pop    edi
  417e6d:	xchg   BYTE PTR [edx],al
  417e6f:	iret   
  417e70:	sar    DWORD PTR [ebp+0xa],0x14
  417e74:	inc    edx
  417e75:	shl    DWORD PTR [esi],cl
  417e77:	sar    BYTE PTR [edx*8-0x2d3eff23],1
  417e7e:	ja     0x417e22
  417e80:	enter  0x49ef,0x3b
  417e84:	mov    bl,0x7e
  417e86:	mov    esp,0x121d00e4
  417e8b:	sbb    ebx,edx
  417e8d:	adc    cl,BYTE PTR [esp+edx*2]
  417e90:	leave  
  417e91:	jl     0x417efe
  417e93:	pop    ss
  417e94:	jp     0x417ecd
  417e96:	jge    0x417e28
  417e98:	inc    esi
  417e99:	or     ah,ah
  417e9b:	or     BYTE PTR [edx+ebp*8+0x45bcd67a],cl
  417ea2:	repz imul eax,DWORD PTR [esi+ebp*4+0x26],0x94d4fab2
  417eab:	ret    0x56cb
  417eae:	in     eax,dx
  417eaf:	imul   edi,DWORD PTR [ebx-0x6f],0x834ceac
  417eb6:	xchg   esi,eax
  417eb7:	sbb    BYTE PTR [esi],ah
  417eb9:	push   ebp
  417eba:	mov    ah,0x66
  417ebc:	hlt    
  417ebd:	inc    ecx
  417ebe:	call   0xd7487a00
  417ec3:	fsin   
  417ec5:	pop    es
  417ec6:	cmp    edi,esp
  417ec8:	les    esp,FWORD PTR [ebx+0x50ac9b0a]
  417ece:	cld    
  417ecf:	loope  0x417ef5
  417ed1:	test   al,0xe
  417ed3:	cmp    BYTE PTR [edx+eax*4+0x39],bl
  417ed7:	and    bl,ah
  417ed9:	push   ebp
  417eda:	jp     0x417ea2
  417edc:	popa   
  417edd:	adc    DWORD PTR [ebp+0x53],ecx
  417ee0:	cmp    eax,0xea519c62
  417ee5:	push   edi
  417ee6:	les    eax,FWORD PTR [esi+0x7068df2a]
  417eec:	and    al,0x4b
  417eee:	push   edi
  417eef:	pusha  
  417ef0:	test   eax,0xb4276bd3
  417ef5:	jb     0x417f44
  417ef7:	arpl   bx,bx
  417ef9:	jb     0x417eed
  417efb:	mov    DWORD PTR [esi-0x51],ebp
  417efe:	cs (bad) 
  417f00:	mov    dh,0x8c
  417f02:	adc    eax,0x8d1db607
  417f07:	lahf   
  417f08:	call   0x204f:0x454475e6
  417f0f:	push   esi
  417f10:	fist   WORD PTR [esi]
  417f12:	inc    edx
  417f13:	push   edi
  417f14:	or     DWORD PTR [ecx],0xffffffda
  417f17:	ds in  eax,dx
  417f19:	out    0xc6,al
  417f1b:	mov    esi,0xfe569216
  417f20:	cmc    
  417f21:	imul   esp,DWORD PTR [edi+edx*4],0xffffffb4
  417f25:	or     BYTE PTR [edi+0x55],bl
  417f28:	jb     0x417f04
  417f2a:	inc    edi
  417f2b:	adc    DWORD PTR [ecx-0x75],0x33
  417f2f:	cmp    bl,BYTE PTR [ecx-0x35]
  417f32:	ret    0xcaee
  417f35:	arpl   WORD PTR ds:0x2c17abf1,di
  417f3b:	in     al,dx
  417f3c:	or     eax,0x3066cdf6
  417f41:	and    ebx,DWORD PTR [eiz*1-0x35c46994]
  417f48:	mov    edx,0x2890fb13
  417f4d:	fadd   DWORD PTR [edi-0x55]
  417f50:	inc    eax
  417f51:	mov    dh,0x7b
  417f53:	fistp  DWORD PTR [eax-0x5df4da4d]
  417f59:	mov    bl,0x18
  417f5b:	lock test eax,0x9c9167fc
  417f61:	jb     0x417f86
  417f63:	push   edi
  417f64:	(bad)  
  417f65:	push   esi
  417f66:	call   0x77fd:0x645b0947
  417f6d:	in     al,dx
  417f6e:	push   edi
  417f6f:	push   edx
  417f70:	fwait
  417f71:	jmp    0x417f9d
  417f73:	inc    edi
  417f74:	mov    gs,ebx
  417f76:	add    eax,DWORD PTR [eax]
  417f78:	stc    
  417f79:	rcr    BYTE PTR [esi-0x1bdbe91a],0x31
  417f80:	xchg   ecx,ebp
  417f82:	mov    al,0x68
  417f84:	inc    ecx
  417f85:	imul   edx,DWORD PTR [esp+edi*8],0x70
  417f89:	into   
  417f8a:	jp     0x417fa1
  417f8c:	push   edi
  417f8d:	push   es
  417f8e:	push   edi
  417f8f:	scas   eax,DWORD PTR es:[edi]
  417f90:	cmp    bh,al
  417f92:	ss dec edi
  417f94:	xor    al,0x22
  417f96:	mov    edi,0xd525f336
  417f9b:	mov    edx,0xde7f153e
  417fa0:	daa    
  417fa1:	lock or edi,ecx
  417fa4:	mov    esi,0xc9d8717a
  417fa9:	dec    ecx
  417faa:	loope  0x417f77
  417fac:	inc    ecx
  417fad:	adc    bl,ah
  417faf:	lds    esi,FWORD PTR [ebx]
  417fb1:	sbb    al,0x8c
  417fb3:	adc    edi,DWORD PTR [eax-0x55]
  417fb6:	inc    ebx
  417fb7:	or     al,0x50
  417fb9:	add    DWORD PTR [eax-0x4e],ecx
  417fbc:	popa   
  417fbd:	into   
  417fbe:	cdq    
  417fbf:	imul   ecx,DWORD PTR [ebp-0x7b],0x8b43b5ee
  417fc6:	sbb    ebx,DWORD PTR [ebp-0x23]
  417fc9:	and    al,0xa3
  417fcb:	mov    esi,edx
  417fcd:	ror    DWORD PTR [eax],cl
  417fcf:	pop    ds
  417fd0:	mov    ch,0x78
  417fd2:	rcr    BYTE PTR [edx],cl
  417fd4:	and    DWORD PTR [ebx+ecx*4+0x572bcb7a],edx
  417fdb:	pop    esp
  417fdc:	pop    eax
  417fdd:	cli    
  417fde:	sub    eax,ebx
  417fe0:	iret   
  417fe1:	iret   
  417fe2:	dec    eax
  417fe3:	aam    0xb8
  417fe5:	xor    cl,BYTE PTR [edi+0x7a]
  417fe8:	mov    ds:0x2efa65d4,al
  417fed:	push   0xfffffff6
  417fef:	cmp    al,BYTE PTR [edi-0x2126af4e]
  417ff5:	xor    bh,0xdd
  417ff8:	ror    DWORD PTR ds:0x14b0a426,0x13
  417fff:	dec    ebp
  418000:	neg    DWORD PTR ds:0x3ceff7c1
  418006:	sbb    al,0x90
  418008:	mov    dh,0xdc
  41800a:	pop    ds
  41800b:	fwait
  41800c:	or     al,BYTE PTR [edi+ebp*2]
  41800f:	dec    eax
  418010:	(bad)  
  418011:	(bad)
  418014:	mov    DWORD PTR fs:[eax+0x55],0x76805d4e
  41801c:	add    edi,DWORD PTR [ebx+0x2c]
  41801f:	adc    BYTE PTR [eax-0x2b],dh
  418022:	cli    
  418023:	xchg   ebx,eax
  418024:	xor    al,0x61
  418026:	mov    ds:0x655c09fa,al
  41802b:	in     eax,dx
  41802c:	sbb    ebx,DWORD PTR [esi]
  41802e:	into   
  41802f:	pop    eax
  418030:	mov    dh,BYTE PTR [ecx-0x13]
  418033:	repnz inc edi
  418035:	fimul  DWORD PTR [ebx+0x5cac53f3]
  41803b:	jne    0x7d3605bb
  418041:	fimul  WORD PTR es:[esi+0x4eebe16b]
  418048:	jge    0x41801e
  41804a:	sbb    DWORD PTR [ebx+0x2e],edi
  41804d:	shr    DWORD PTR [esi],1
  41804f:	pop    ecx
  418050:	xchg   esi,eax
  418051:	test   BYTE PTR [ecx-0x1f35a885],bl
  418057:	adc    ah,ah
  418059:	ins    DWORD PTR es:[edi],dx
  41805a:	jge    0x4180b4
  41805c:	cdq    
  41805d:	inc    ebx
  41805e:	and    eax,0xff43a66d
  418063:	xchg   ebp,eax
  418064:	lds    edx,FWORD PTR [edx-0x1a755260]
  41806a:	in     eax,0x0
  41806c:	(bad)  [edi+0x210f45af]
  418072:	outs   dx,BYTE PTR ds:[esi]
  418073:	or     ch,BYTE PTR [eax+0x62]
  418076:	lea    ebx,[eax+0x7a]
  418079:	mov    ah,0xff
  41807b:	ret    0xfe7e
  41807e:	mov    esp,0xd0dece6b
  418083:	cs push esp
  418085:	sbb    ecx,esi
  418087:	(bad)  
  418089:	mov    WORD PTR ds:0x4850f7e4,?
  41808f:	int3   
  418090:	inc    ebp
  418091:	fadd   QWORD PTR [ebx]
  418093:	sbb    edi,DWORD PTR [esi-0x3c7e7c0d]
  418099:	add    bh,dl
  41809b:	xchg   edi,eax
  41809c:	shl    DWORD PTR [edx+ebx*8],1
  41809f:	sbb    edi,DWORD PTR [edx+edi*2]
  4180a2:	das    
  4180a3:	js     0x4180a4
  4180a5:	mov    edx,0xffc546c8
  4180aa:	aam    0x50
  4180ac:	inc    BYTE PTR [edx-0x4e49ee9]
  4180b2:	sbb    bl,ch
  4180b4:	push   0x3fe63c1b
  4180b9:	xor    al,0x51
  4180bb:	pop    eax
  4180bc:	test   al,0xf5
  4180be:	stos   BYTE PTR es:[edi],al
  4180bf:	aad    0xc7
  4180c1:	stos   DWORD PTR es:[edi],eax
  4180c2:	daa    
  4180c3:	inc    edx
  4180c4:	pop    ss
  4180c5:	add    BYTE PTR [ebp+0x67],dh
  4180c8:	push   0x4c
  4180ca:	pop    edx
  4180cb:	outs   dx,DWORD PTR ds:[esi]
  4180cc:	and    ebx,esp
  4180ce:	mov    bl,0xb6
  4180d0:	jae    0x418129
  4180d2:	inc    edi
  4180d3:	mov    esi,0x781a2258
  4180d8:	push   edi
  4180d9:	xchg   edx,eax
  4180da:	test   DWORD PTR [eax],eax
  4180dc:	push   ds
  4180dd:	ja     0x4180f6
  4180df:	xor    dl,BYTE PTR [eax]
  4180e1:	neg    BYTE PTR [esi+eiz*4]
  4180e4:	mov    ch,0xbb
  4180e6:	jmp    0x5614:0xe140b37b
  4180ed:	or     edx,DWORD PTR [ebx+0x24]
  4180f0:	loopne 0x418122
  4180f2:	push   es
  4180f3:	xchg   edx,eax
  4180f4:	fnstenv [edi]
  4180f6:	pop    ebp
  4180f7:	jb     0x418177
  4180f9:	imul   edx,DWORD PTR ds:0x2b2af220
  418100:	sub    al,0xa3
  418102:	dec    eax
  418103:	fbld   TBYTE PTR [esi+0x18f863d3]
  418109:	xor    al,0xae
  41810b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41810c:	or     eax,0x253c57ba
  418111:	out    0x88,eax
  418113:	or     al,0xff
  418115:	out    0x17,eax
  418117:	push   ebx
  418118:	jne    0x418137
  41811a:	in     al,0xc2
  41811c:	or     DWORD PTR [ebx],0xf62d3dbd
  418122:	lea    eax,[edi+esi*1]
  418125:	imul   ebx,DWORD PTR [esi],0x4a
  418128:	es sub bh,bl
  41812b:	sub    BYTE PTR [ebx],0xdc
  41812e:	call   0x865cf6e4
  418133:	mov    eax,ds:0xac1e94f0
  418138:	or     al,0xf5
  41813a:	and    bh,BYTE PTR [ebx+edx*8-0x23a267d7]
  418141:	add    al,0x25
  418143:	sbb    eax,0x910f8535
  418148:	push   esp
  418149:	out    dx,al
  41814a:	or     BYTE PTR ds:0x27cf7a25,bl
  418150:	aaa    
  418151:	shr    BYTE PTR [edi-0x69063a0c],1
  418157:	(bad)  
  418158:	fnstenv [edx]
  41815a:	sbb    DWORD PTR [eax-0xc],ebp
  41815d:	scas   eax,DWORD PTR es:[edi]
  41815e:	out    0x7f,eax
  418160:	out    dx,eax
  418161:	sbb    eax,0x48fc5b11
  418166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418167:	jbe    0x4181cf
  418169:	das    
  41816a:	or     BYTE PTR es:[ebx],bh
  41816d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41816e:	in     eax,0x7a
  418170:	push   es
  418171:	lods   al,BYTE PTR ds:[esi]
  418172:	rcr    eax,1
  418174:	call   0x51ac:0x616f0a31
  41817b:	mov    ebp,0x1d65440a
  418180:	mov    eax,ds:0xc0f11bab
  418185:	adc    esp,DWORD PTR [ebp+0x34]
  418188:	xor    esp,edx
  41818a:	cdq    
  41818b:	mov    eax,0xcfc93bcd
  418190:	(bad)  
  418191:	repz push fs
  418194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418195:	xor    BYTE PTR [edx+eax*2],dl
  418198:	pop    ds
  418199:	leave  
  41819a:	add    edx,edx
  41819c:	nop
  41819d:	mov    edi,0xc6da9195
  4181a2:	repnz mov eax,0x712f7f24
  4181a8:	enter  0x5cd0,0xe6
  4181ac:	ja     0x418176
  4181ae:	and    DWORD PTR [ebx-0x68],0xffffffe5
  4181b2:	es cmp eax,0x59510207
  4181b8:	and    ah,bh
  4181ba:	ret    0x4fe2
  4181bd:	imul   ecx,DWORD PTR [eax-0x504a7b6b],0xc267a8e1
  4181c7:	cwde   
  4181c8:	inc    ecx
  4181c9:	pop    eax
  4181ca:	push   ds
  4181cb:	inc    eax
  4181cc:	enter  0xc8ce,0xf2
  4181d0:	add    BYTE PTR [ebx],bl
  4181d2:	xor    BYTE PTR [edi-0x6943cde1],dh
  4181d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181d9:	jne    0x418237
  4181db:	mov    ?,WORD PTR [edi]
  4181dd:	mov    edi,0xa839dd96
  4181e2:	mov    ch,0x83
  4181e4:	push   edx
  4181e5:	(bad)  
  4181e6:	push   edi
  4181e7:	pop    ds
  4181e8:	out    dx,al
  4181e9:	fdiv   QWORD PTR [ebx+esi*1-0x79]
  4181ed:	mov    ds:0xb45a462f,al
  4181f2:	and    al,0xc9
  4181f4:	ja     0x41818e
  4181f6:	or     ecx,ecx
  4181f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f9:	test   eax,0xcccdfb68
  4181fe:	inc    edi
  4181ff:	iret   
  418200:	aad    0xe3
  418202:	daa    
  418203:	sbb    eax,0x6e0fa844
  418208:	dec    ecx
  418209:	in     al,0x59
  41820b:	jb     0x418263
  41820d:	or     eax,0x36554a8e
  418212:	das    
  418213:	and    cl,ah
  418215:	test   BYTE PTR [edx-0x33],0x86
  418219:	and    al,0x4d
  41821b:	push   ss
  41821c:	mov    ?,ebp
  41821e:	arpl   WORD PTR [esp+ebp*1-0x5ce38bfa],bx
  418225:	aas    
  418226:	loopne 0x41823c
  418228:	lea    ebx,[edx]
  41822a:	shl    BYTE PTR [ecx-0x45],0x79
  41822e:	mov    ah,BYTE PTR [edi-0x3f]
  418231:	leave  
  418232:	imul   esp,DWORD PTR ds:0x68be235d,0xa6fe6fe4
  41823c:	and    al,0x3f
  41823e:	or     eax,0x598bca5b
  418243:	out    0x52,eax
  418245:	fimul  DWORD PTR [edi]
  418247:	fdivr  DWORD PTR [eax-0x1c]
  41824a:	pop    ebp
  41824b:	and    DWORD PTR [ecx-0x11],ebx
  41824e:	imul   eax,eax,0xb5137807
  418254:	jmp    0xa5f54917
  418259:	pop    ebx
  41825a:	mov    esp,0xcc1954cc
  41825f:	mov    edi,0xe3bcf58b
  418264:	mov    DWORD PTR [ecx+0x28],ebx
  418267:	es dec edi
  418269:	dec    edi
  41826a:	mov    ds:0x8c5cbca8,al
  41826f:	or     eax,0x7b59e739
  418274:	and    eax,0x16207a33
  418279:	cdq    
  41827a:	pusha  
  41827b:	stos   BYTE PTR es:[edi],al
  41827c:	enter  0x9005,0xa5
  418280:	push   ebp
  418281:	ss ret 0x83c6
  418285:	inc    edi
  418286:	cmc    
  418287:	div    DWORD PTR [ebx+edi*4-0x45]
  41828b:	sbb    al,0x20
  41828d:	or     al,0x9e
  41828f:	pop    ebx
  418290:	mov    esp,0xdb433d34
  418295:	add    DWORD PTR [esi-0x55cc3975],ebp
  41829b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41829c:	in     eax,0x40
  41829e:	pop    edx
  41829f:	pusha  
  4182a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a1:	jne    0x41831b
  4182a3:	dec    esi
  4182a4:	aaa    
  4182a5:	mov    eax,0xdfa985be
  4182aa:	into   
  4182ab:	cli    
  4182ac:	jg     0x4182c0
  4182ae:	loopne 0x41828b
  4182b0:	and    cl,ah
  4182b2:	cmp    DWORD PTR [edx+ebx*4+0x514444d8],edx
  4182b9:	push   esp
  4182ba:	jnp    0x4182d9
  4182bc:	iret   
  4182bd:	ins    DWORD PTR es:[edi],dx
  4182be:	cwde   
  4182bf:	xlat   BYTE PTR ds:[ebx]
  4182c0:	shl    BYTE PTR [ebx],cl
  4182c2:	and    eax,0xb62cb541
  4182c7:	mov    esp,ss
  4182c9:	sbb    al,0x2
  4182cb:	adc    ah,BYTE PTR ds:0xc39000e4
  4182d1:	mov    ds:0x9ff02980,eax
  4182d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182d7:	shr    cl,1
  4182d9:	inc    eax
  4182da:	dec    edi
  4182db:	adc    ecx,DWORD PTR [ebp+0x4d]
  4182de:	cwde   
  4182df:	jmp    FWORD PTR [esi+0x7c]
  4182e2:	mov    edi,0xad2307ec
  4182e7:	cmc    
  4182e8:	push   ds
  4182e9:	pop    esp
  4182ea:	mov    ch,0xbe
  4182ec:	lods   al,BYTE PTR ds:[esi]
  4182ed:	fidiv  WORD PTR [ecx+0x66704a3d]
  4182f3:	adc    eax,0x6b706155
  4182f8:	sbb    dh,cl
  4182fa:	int    0x2c
  4182fc:	les    edi,FWORD PTR [esi+0x59]
  4182ff:	in     eax,dx
  418300:	cmp    bl,0x60
  418303:	add    BYTE PTR [ebx+0x22],0x9b
  418307:	sbb    ebp,DWORD PTR [ebx]
  418309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830a:	dec    edx
  41830b:	pushf  
  41830c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41830d:	(bad)  
  41830e:	mov    ch,0x50
  418310:	sub    eax,0xa857e2e4
  418315:	pop    esp
  418316:	cli    
  418317:	push   es
  418318:	push   ss
  418319:	jl     0x4182f8
  41831b:	dec    ebp
  41831c:	lea    esp,[esi+ebp*8-0x5a89d02a]
  418323:	mov    bh,0xdf
  418325:	scas   al,BYTE PTR es:[edi]
  418326:	dec    edi
  418327:	popa   
  418328:	bound  edx,QWORD PTR [ecx]
  41832a:	(bad)  
  41832b:	cmp    BYTE PTR [esp+edx*1],al
  41832e:	popa   
  41832f:	and    edx,esp
  418331:	dec    edi
  418332:	lods   al,BYTE PTR ds:[esi]
  418333:	mov    esi,ebx
  418335:	test   DWORD PTR [ebx+0x3e],esi
  418338:	dec    edx
  418339:	test   BYTE PTR [eax],al
  41833b:	adc    ch,BYTE PTR [edi-0xa]
  41833e:	dec    DWORD PTR [esi+0x49]
  418341:	call   0x2312:0x185c75e3
  418348:	cwde   
  418349:	mov    bl,0x92
  41834b:	dec    esi
  41834c:	out    0x34,al
  41834e:	adc    DWORD PTR [edx+0x28],0xfffffff7
  418352:	sbb    eax,0xfd5c05f5
  418357:	ss jge 0x4183a6
  41835a:	xor    dh,BYTE PTR [ebx]
  41835c:	sbb    BYTE PTR [ebx-0x4aa24561],0x6
  418363:	push   ds
  418364:	mov    ds:0xf349916e,al
  418369:	scas   al,BYTE PTR es:[edi]
  41836a:	dec    edx
  41836b:	rcr    DWORD PTR [ecx+0x4e],1
  41836e:	adc    BYTE PTR ds:0x52857c4b,dl
  418374:	inc    esi
  418375:	sbb    eax,0x13a0ea0d
  41837a:	sti    
  41837b:	retf   
  41837c:	js     0x4183df
  41837e:	sub    eax,0xf2285c5
  418383:	nop
  418384:	fwait
  418385:	inc    ebp
  418386:	pop    ecx
  418387:	sbb    ebx,DWORD PTR ss:[ebp-0x1f60b843]
  41838e:	pop    ds
  41838f:	loopne 0x418405
  418391:	(bad)  
  418392:	mov    esp,0x9a6b0a8f
  418397:	cmp    eax,ebx
  418399:	pop    edi
  41839a:	cmp    dh,bh
  41839c:	pusha  
  41839d:	mov    eax,ds:0x36181516
  4183a2:	je     0x41840d
  4183a4:	sub    al,0x27
  4183a6:	or     ah,bh
  4183a8:	sar    DWORD PTR [eax],0xe8
  4183ab:	mov    esp,0x517f2b36
  4183b0:	mov    edx,DWORD PTR [eax]
  4183b2:	je     0x4183ba
  4183b4:	aaa    
  4183b5:	neg    DWORD PTR [edx+0x42287268]
  4183bb:	call   0x9d4410ec
  4183c0:	ins    DWORD PTR es:[edi],dx
  4183c1:	retf   0x31d1
  4183c4:	push   ds
  4183c5:	push   ds
  4183c6:	rol    dh,1
  4183c8:	dec    edx
  4183c9:	sub    DWORD PTR [ebp-0x53cf7c32],ebp
  4183cf:	mov    bh,0x95
  4183d1:	jb     0x4183e3
  4183d3:	jnp    0x41835a
  4183d5:	adc    eax,esi
  4183d7:	sub    BYTE PTR [ecx+0x2ca28544],0xec
  4183de:	aaa    
  4183df:	xlat   BYTE PTR ds:[ebx]
  4183e0:	add    al,0x91
  4183e2:	pop    ecx
  4183e3:	das    
  4183e4:	fwait
  4183e5:	push   ebx
  4183e6:	adc    al,0x26
  4183e8:	xor    eax,0x5466c7ef
  4183ed:	dec    ecx
  4183ee:	jle    0x41839c
  4183f0:	adc    DWORD PTR ss:[esi+0x531c6c76],ebp
  4183f7:	test   al,0xe1
  4183f9:	mov    ebp,0xcd5beb82
  4183fe:	jp     0x418420
  418400:	jo     0x4183e3
  418402:	mov    ah,0xc
  418404:	leave  
  418405:	xchg   DWORD PTR [ebp-0xef496],edi
  41840b:	add    DWORD PTR [edi-0x296e8c1],esp
  418411:	ror    esi,0x1d
  418414:	dec    ebp
  418415:	pop    edx
  418416:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418418:	sub    BYTE PTR [ebx+ebp*1+0x6743f806],bl
  41841f:	dec    ebx
  418420:	and    BYTE PTR [ecx+0x29e299e6],al
  418426:	imul   eax,eax,0x74
  418429:	test   al,0x21
  41842b:	jae    0x418452
  41842d:	mov    cl,0x14
  41842f:	push   ds
  418430:	stos   DWORD PTR es:[edi],eax
  418431:	out    0x80,eax
  418433:	sub    eax,0x712e846e
  418438:	pop    edx
  418439:	cmp    al,0x39
  41843b:	xchg   esi,eax
  41843c:	xor    edi,edi
  41843e:	jle    0x418490
  418440:	jge    0x418479
  418442:	mov    dl,BYTE PTR [esi+0x6f]
  418445:	dec    edx
  418446:	xor    DWORD PTR [esi-0x7b],edi
  418449:	dec    esp
  41844a:	push   esi
  41844b:	cmp    al,0xf5
  41844d:	pop    ecx
  41844e:	jge    0x4184a9
  418450:	shr    esp,1
  418452:	pop    esp
  418453:	sub    BYTE PTR [eax],ah
  418455:	inc    ebx
  418456:	je     0x418487
  418458:	xor    BYTE PTR [edi-0x7f084d09],dh
  41845e:	aas    
  41845f:	push   edi
  418460:	pop    edx
  418461:	xchg   edi,eax
  418462:	mov    dh,0x19
  418464:	push   ebx
  418465:	sub    DWORD PTR [eax-0x77a32135],0xffffffb3
  41846c:	xchg   esp,eax
  41846d:	stc    
  41846e:	popf   
  41846f:	cld    
  418470:	xor    ecx,esp
  418472:	cmp    al,0x9c
  418474:	cmc    
  418475:	int3   
  418476:	test   al,0x7c
  418478:	push   eax
  418479:	jmp    0x4ddad4a5
  41847e:	adc    ch,dl
  418480:	and    al,dl
  418482:	inc    eax
  418483:	fnsave [esi-0x35]
  418486:	sub    edi,esi
  418488:	aam    0xc0
  41848a:	jg     0x418438
  41848c:	jle    0x4184d2
  41848e:	dec    eax
  41848f:	add    esp,DWORD PTR [eax]
  418491:	inc    esi
  418492:	mov    ah,cl
  418494:	adc    ebx,DWORD PTR [esi-0x3]
  418497:	loop   0x418492
  418499:	mov    ecx,0x2585cf90
  41849e:	mov    edx,0x23696374
  4184a3:	cdq    
  4184a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a5:	sub    dh,BYTE PTR [ebp-0x5d]
  4184a8:	mov    WORD PTR [edi+0x642e0ca7],fs
  4184ae:	pop    ds
  4184af:	in     al,dx
  4184b0:	add    eax,0x5ac8b9f8
  4184b5:	mov    dh,0xd
  4184b7:	adc    cl,al
  4184b9:	loopne 0x418485
  4184bb:	aam    0x29
  4184bd:	test   DWORD PTR [ecx+0x2f08296f],edi
  4184c3:	out    dx,eax
  4184c4:	add    BYTE PTR [edx],al
  4184c6:	pop    ecx
  4184c7:	mov    eax,0xa0b6e786
  4184cc:	or     DWORD PTR [ebx-0x783101ff],edi
  4184d2:	cli    
  4184d3:	bound  esi,QWORD PTR [ecx]
  4184d5:	cmp    al,0xb5
  4184d7:	adc    DWORD PTR [eax],0x45
  4184da:	cld    
  4184db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184dc:	mov    DWORD PTR [edx],esi
  4184de:	aad    0xf
  4184e0:	mov    edi,0xf55b83d2
  4184e5:	outs   dx,DWORD PTR ds:[esi]
  4184e6:	call   0x5e011ee0
  4184eb:	(bad)  
  4184ec:	fcmovb st,st(5)
  4184ee:	shl    DWORD PTR [ecx+0x301af3e4],1
  4184f4:	dec    ebp
  4184f5:	loop   0x418514
  4184f7:	mov    ch,0x26
  4184f9:	hlt    
  4184fa:	cmp    al,cl
  4184fc:	ds xchg edi,eax
  4184fe:	dec    esp
  4184ff:	call   0x33579ace
  418504:	lock dec edi
  418506:	popa   
  418507:	or     dl,cl
  418509:	xchg   BYTE PTR [eax-0x7d249314],al
  41850f:	and    al,0x9a
  418511:	push   edi
  418512:	lea    edx,[eax-0x4a]
  418515:	sbb    DWORD PTR [esi],edx
  418517:	ss jne 0x41854e
  41851a:	push   edi
  41851b:	xor    eax,0xa426d1c7
  418520:	dec    edi
  418521:	mov    WORD PTR [edi+0x1c],gs
  418524:	fdivr  DWORD PTR [esi]
  418526:	sti    
  418527:	xchg   esi,eax
  418528:	out    dx,al
  418529:	sub    eax,0xde9444df
  41852e:	mov    al,ds:0x60e82e47
  418533:	loope  0x41858c
  418535:	adc    BYTE PTR [ecx+0x53],ah
  418538:	mov    esi,0x1d2ccd07
  41853d:	dec    ebx
  41853e:	jecxz  0x418540
  418540:	xor    dl,bl
  418542:	arpl   WORD PTR [edi+0x69],sp
  418545:	shl    BYTE PTR [eax-0x3080b496],1
  41854b:	rcl    ebp,1
  41854d:	inc    ebp
  41854e:	loop   0x418596
  418550:	pop    edi
  418551:	scas   eax,DWORD PTR es:[edi]
  418552:	clc    
  418553:	fstp   QWORD PTR [esi]
  418555:	shl    DWORD PTR [esi+0xc],cl
  418558:	ror    BYTE PTR [eax-0x30],cl
  41855b:	xor    esp,eax
  41855d:	cmp    ecx,DWORD PTR [ebx-0x24]
  418560:	fistp  WORD PTR [ebp+0x44]
  418563:	pop    edx
  418564:	mov    edi,0xcaff4a1b
  418569:	mov    bh,0xf8
  41856b:	jle    0x4184fd
  41856d:	rcr    DWORD PTR [ebx],1
  41856f:	inc    edi
  418570:	out    0xc2,eax
  418572:	pop    ds
  418573:	fisub  DWORD PTR [ebx+0x18]
  418576:	aas    
  418577:	out    0x9d,eax
  418579:	or     eax,0x30baaeea
  41857e:	jle    0x41855f
  418580:	fwait
  418581:	sub    al,0xc3
  418583:	daa    
  418584:	xchg   edx,eax
  418585:	push   cs
  418586:	add    edi,DWORD PTR [eax+0x52]
  418589:	mov    bl,0x93
  41858b:	addr16 pop ss
  41858d:	xor    DWORD PTR [esi+edi*1+0x4a50e2ce],esp
  418594:	repnz xlat BYTE PTR ds:[ebx]
  418596:	sbb    bl,BYTE PTR [edx-0x42db5a47]
  41859c:	cdq    
  41859d:	out    0xfa,eax
  41859f:	test   al,0xb2
  4185a1:	or     BYTE PTR [esi+0x21e09e9a],0x0
  4185a8:	jmp    0xecf9:0xb2db189f
  4185af:	popf   
  4185b0:	add    al,0x44
  4185b2:	or     al,0x85
  4185b4:	ins    BYTE PTR es:[edi],dx
  4185b5:	retf   
  4185b6:	adc    ebp,edi
  4185b8:	les    edi,FWORD PTR [ebx+0x3d]
  4185bb:	mov    al,0x3e
  4185bd:	mov    DWORD PTR [ebx],esp
  4185bf:	adc    DWORD PTR [ebp+0x5c],ebp
  4185c2:	pop    ss
  4185c3:	mov    ah,0xa4
  4185c5:	mul    BYTE PTR [ecx-0x3b]
  4185c8:	push   esi
  4185c9:	dec    esp
  4185ca:	mov    ch,0x14
  4185cc:	cmp    cl,BYTE PTR [ecx-0x1c]
  4185cf:	cdq    
  4185d0:	pop    esi
  4185d1:	sub    esi,0x22
  4185d4:	iret   
  4185d5:	inc    DWORD PTR [ecx]
  4185d7:	out    dx,al
  4185d8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4185da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185db:	out    0x9c,al
  4185dd:	popa   
  4185de:	test   eax,0x4d59a47
  4185e3:	hlt    
  4185e4:	sub    ebp,DWORD PTR [edx]
  4185e6:	fs xor al,bl
  4185e9:	mov    BYTE PTR [ebx-0x78ca3380],bh
  4185ef:	mov    ecx,esi
  4185f1:	dec    esi
  4185f2:	out    0x5d,eax
  4185f4:	mov    ecx,0xecdd409
  4185f9:	inc    ebx
  4185fa:	sbb    ebx,DWORD PTR [ecx+0xf]
  4185fd:	or     ch,ch
  4185ff:	xor    DWORD PTR [edx+0x17ace101],edi
  418605:	sub    DWORD PTR [ebx+ebp*2-0x74af6caf],0x3e
  41860d:	in     al,0x6c
  41860f:	jge    0x418646
  418611:	cmp    ch,bh
  418613:	outs   dx,DWORD PTR ds:[esi]
  418614:	outs   dx,DWORD PTR ds:[esi]
  418615:	int    0x9f
  418617:	mov    esp,0xd870da91
  41861c:	mov    BYTE PTR [edx-0x6e],0x5f
  418620:	mov    cl,0x62
  418622:	xchg   edi,eax
  418623:	xor    DWORD PTR [esp+eiz*4-0x4b9741a5],eax
  41862a:	mov    ss,edi
  41862c:	jmp    0xb05619e1
  418631:	inc    eax
  418632:	jl     0x418618
  418634:	pop    edx
  418635:	cli    
  418636:	stos   BYTE PTR es:[edi],al
  418637:	inc    edx
  418638:	lea    edi,[eax-0x64b2d58c]
  41863e:	in     eax,dx
  41863f:	daa    
  418640:	and    al,0x1e
  418642:	xchg   edi,eax
  418643:	dec    ecx
  418644:	outs   dx,DWORD PTR ds:[esi]
  418645:	xchg   BYTE PTR [ebp+0x72a19807],bl
  41864b:	dec    eax
  41864c:	add    al,0x69
  41864e:	jmp    0x2e88fbb2
  418653:	ror    dh,cl
  418655:	push   ds
  418656:	cli    
  418657:	fcomp  QWORD PTR [esi+0x5595042c]
  41865d:	sbb    ch,BYTE PTR [ebx+eiz*1+0x56]
  418661:	xchg   edx,eax
  418662:	xchg   ecx,eax
  418663:	push   es
  418664:	dec    ebp
  418665:	adc    ch,BYTE PTR [eax+0x68]
  418668:	xor    al,0x90
  41866a:	jmp    0x2d787ad8
  41866f:	mov    ds:0x4294fbc7,al
  418674:	in     eax,0x7c
  418676:	ret    0x5c09
  418679:	arpl   WORD PTR [edx+eax*4],bp
  41867c:	in     eax,0x20
  41867e:	pop    edx
  41867f:	nop
  418680:	inc    eax
  418681:	jmp    0x2702:0xc6d06116
  418688:	mov    BYTE PTR [edx],dl
  41868a:	cs sub al,0xad
  41868d:	les    edi,FWORD PTR [ecx-0x4776807a]
  418693:	adc    al,0x58
  418695:	jge    0x4186be
  418697:	iret   
  418698:	out    dx,eax
  418699:	test   DWORD PTR [eax],edx
  41869b:	push   ss
  41869c:	pop    esp
  41869d:	mov    al,0x20
  41869f:	add    cl,BYTE PTR [eax-0x18]
  4186a2:	ins    DWORD PTR es:[edi],dx
  4186a3:	inc    eax
  4186a4:	dec    eax
  4186a5:	out    0xa6,eax
  4186a7:	out    dx,eax
  4186a8:	ins    BYTE PTR es:[edi],dx
  4186a9:	mov    eax,0xa07ac7a7
  4186ae:	adc    DWORD PTR [edi-0x62],0x34
  4186b2:	aam    0x47
  4186b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186b5:	and    esi,edx
  4186b7:	adc    ch,BYTE PTR [edi+0x59]
  4186ba:	into   
  4186bb:	(bad)  
  4186bd:	packssdw mm7,QWORD PTR [ebp-0x3c]
  4186c1:	jp     0x4186c6
  4186c3:	dec    ebp
  4186c4:	mov    BYTE PTR [edx],ah
  4186c6:	xchg   edi,eax
  4186c7:	and    al,0x6b
  4186c9:	jae    0x17333b05
  4186cf:	and    edx,DWORD PTR [ebx]
  4186d1:	pop    edi
  4186d2:	and    BYTE PTR [ebp+0x1b91d840],ah
  4186d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186d9:	or     DWORD PTR [edx+0x124a1587],esp
  4186df:	xor    eax,0xde905a32
  4186e4:	sub    DWORD PTR [edi],esi
  4186e6:	push   cs
  4186e7:	cld    
  4186e8:	aad    0xd1
  4186ea:	add    ecx,DWORD PTR [edx]
  4186ec:	dec    esi
  4186ed:	leave  
  4186ee:	ins    BYTE PTR es:[edi],dx
  4186ef:	ret    0xef9e
  4186f2:	push   0xb1feff57
  4186f7:	je     0x418763
  4186f9:	int    0x7
  4186fb:	adc    al,0x2a
  4186fd:	xchg   esi,eax
  4186fe:	bound  ecx,QWORD PTR [edi]
  418700:	es (bad) 
  418702:	fdivr  st,st(2)
  418704:	sbb    al,0xbf
  418706:	mov    ch,0x35
  418708:	xor    esp,eax
  41870a:	push   ds
  41870b:	mov    dl,0x27
  41870d:	loop   0x41873a
  41870f:	shufps xmm3,xmm1,0x5e
  418713:	mov    ecx,DWORD PTR ds:0xe2fdf942
  418719:	loopne 0x418797
  41871b:	dec    esp
  41871c:	mov    ebp,0x9756ed60
  418721:	dec    eax
  418722:	sub    dh,bl
  418724:	pop    ss
  418725:	shl    eax,0xb
  418728:	and    ebx,DWORD PTR [eax+0x6829d075]
  41872e:	arpl   WORD PTR [edi+0x64],bx
  418731:	push   esp
  418732:	hlt    
  418733:	inc    ecx
  418734:	cmp    al,0x42
  418736:	lock mov al,ds:0xdab5a252
  41873c:	fisubr DWORD PTR [ebx+esi*1+0x1f]
  418740:	mov    ds:0x2d8bff1,eax
  418745:	retf   
  418746:	lods   al,BYTE PTR ds:[esi]
  418747:	xchg   esi,eax
  418748:	loopne 0x41877f
  41874a:	mov    edi,0x1cc8c1f0
  41874f:	inc    eax
  418750:	out    0xb3,eax
  418752:	cld    
  418753:	push   ebp
  418754:	mov    eax,DWORD PTR [esi+0x46b7b87b]
  41875a:	imul   edi,DWORD PTR [eax],0xffffff81
  41875d:	je     0x418760
  41875f:	shl    BYTE PTR ds:0x8fb596a5,0x82
  418766:	ins    BYTE PTR es:[edi],dx
  418767:	ja     0x418729
  418769:	outs   dx,BYTE PTR ds:[esi]
  41876a:	and    ebp,DWORD PTR [ebx+0x42f4f58]
  418770:	outs   dx,BYTE PTR ds:[esi]
  418771:	or     BYTE PTR [ebp-0x13],dl
  418774:	sub    ebx,DWORD PTR [ebx+0x133a565f]
  41877a:	mov    edi,0x6784eafd
  41877f:	dec    esi
  418780:	or     al,0x83
  418782:	(bad)  
  418783:	ins    DWORD PTR es:[edi],dx
  418784:	shr    esi,cl
  418786:	(bad)  
  418787:	inc    esp
  418788:	inc    ebp
  418789:	xor    esi,0x31
  41878c:	es loopne 0x41874b
  41878f:	leave  
  418790:	jle    0x418808
  418792:	sbb    al,0xbc
  418794:	inc    edi
  418795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418796:	bound  ebx,QWORD PTR [edx+0x50]
  418799:	or     edx,DWORD PTR [ebx]
  41879b:	pusha  
  41879c:	mul    ecx
  41879e:	je     0x41880a
  4187a0:	inc    ebx
  4187a1:	push   ecx
  4187a2:	(bad)  
  4187a3:	call   0x807d:0xc3af8da8
  4187aa:	push   ebp
  4187ab:	cs fs jo 0x4187f3
  4187af:	push   ds
  4187b0:	inc    ebx
  4187b1:	ins    DWORD PTR es:[edi],dx
  4187b2:	loopne 0x41881c
  4187b4:	mov    eax,ds:0x660977a9
  4187b9:	stos   DWORD PTR es:[edi],eax
  4187ba:	xchg   DWORD PTR es:[eax+0x30e26905],ebx
  4187c1:	inc    esi
  4187c2:	jne    0x418823
  4187c4:	into   
  4187c5:	jge    0x418778
  4187c7:	dec    ebx
  4187c8:	mov    esp,0x374a52d5
  4187cd:	xor    al,0xbc
  4187cf:	ja     0x4187a9
  4187d1:	inc    ebx
  4187d2:	stos   BYTE PTR es:[edi],al
  4187d3:	or     BYTE PTR [edx-0x3e],0x25
  4187d7:	dec    ecx
  4187d8:	dec    ecx
  4187d9:	jp     0x4187fb
  4187db:	test   BYTE PTR ds:0xeccc647e,cl
  4187e1:	pop    edx
  4187e2:	push   cs
  4187e3:	retf   
  4187e4:	(bad)  
  4187e6:	loop   0x41878a
  4187e8:	or     ch,BYTE PTR [edx]
  4187ea:	shl    BYTE PTR [edx],0xe6
  4187ed:	mov    esp,0x9dac8afe
  4187f2:	fiadd  WORD PTR [ebx+0x50]
  4187f5:	daa    
  4187f6:	mov    ah,0xe7
  4187f8:	pushf  
  4187f9:	cmp    DWORD PTR [edi],edx
  4187fb:	dec    edx
  4187fc:	add    DWORD PTR fs:[esi],ebx
  4187ff:	lahf   
  418800:	dec    eax
  418801:	into   
  418802:	sti    
  418803:	and    eax,0xda4637da
  418808:	push   0x91f40265
  41880d:	aad    0x8a
  41880f:	jb     0x41879c
  418811:	stos   DWORD PTR es:[edi],eax
  418812:	imul   ebx,DWORD PTR [eax+0x1b7a9463],0xffffffa1
  418819:	pop    ecx
  41881a:	mov    ebp,0x1ca569c0
  41881f:	mov    esi,0x60193298
  418824:	push   eax
  418825:	push   ds
  418826:	ins    DWORD PTR es:[edi],dx
  418827:	rcl    DWORD PTR [ebp+ecx*2+0x3a],1
  41882b:	test   DWORD PTR [ebp-0x1b6f00d9],esp
  418831:	stos   BYTE PTR es:[edi],al
  418832:	xor    al,0x57
  418834:	mov    bl,0x57
  418836:	xor    edx,eax
  418838:	fcmovb st,st(4)
  41883a:	adc    BYTE PTR [ecx+edi*2],ah
  41883d:	add    ch,BYTE PTR [eax]
  41883f:	push   ds
  418840:	(bad)  
  418841:	dec    ecx
  418842:	mov    esi,0x560e1576
  418847:	retf   0xdddf
  41884a:	push   ecx
  41884b:	pop    es
  41884c:	and    dl,BYTE PTR [edx+0x1aba9027]
  418852:	inc    esp
  418853:	add    eax,0xbbf5fb3f
  418858:	adc    cl,0x98
  41885b:	pop    esp
  41885c:	jp     0x41889c
  41885e:	out    0x19,eax
  418860:	das    
  418861:	ja     0x4188a1
  418863:	mov    ds:0xdc9ef90,eax
  418868:	mov    edi,0xb037cb03
  41886d:	ss das 
  41886f:	ja     0x418889
  418871:	test   dh,al
  418873:	mov    bl,0x0
  418875:	sbb    al,0xe
  418877:	repnz in eax,dx
  418879:	xchg   ebp,eax
  41887a:	bound  edx,QWORD PTR [esi+0x5f]
  41887d:	inc    esi
  41887e:	xchg   ebx,eax
  41887f:	into   
  418880:	pop    ecx
  418881:	and    eax,esp
  418883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418884:	cmp    ax,0x27af
  418888:	lds    ebx,FWORD PTR ds:0x6af41656
  41888e:	mov    edi,ebx
  418890:	dec    edx
  418891:	inc    edx
  418892:	jno    0x418835
  418894:	push   ds
  418895:	cmc    
  418896:	mov    edi,0xbe853b59
  41889b:	sub    eax,0xf34ab7f4
  4188a0:	out    0xef,al
  4188a2:	adc    BYTE PTR [edx+0x9cef72],bl
  4188a8:	xchg   ebx,eax
  4188a9:	test   al,0x38
  4188ab:	hlt    
  4188ac:	cdq    
  4188ad:	loope  0x4188c7
  4188af:	mov    ebp,0xbaf169aa
  4188b4:	call   0x3834bb8e
  4188b9:	mov    esi,0x1cb9f153
  4188be:	arpl   WORD PTR [edx+0x3da6858e],bp
  4188c4:	arpl   WORD PTR [ebx+0x14],bp
  4188c7:	test   al,dl
  4188c9:	das    
  4188ca:	xchg   ebx,eax
  4188cb:	std    
  4188cc:	xchg   DWORD PTR [esi-0x7b06cd83],edx
  4188d2:	adc    cl,dl
  4188d4:	popf   
  4188d5:	or     al,0x5d
  4188d7:	or     esi,DWORD PTR [ebp+0x54cbe13b]
  4188dd:	sbb    ch,BYTE PTR [ebp+0x5e69b352]
  4188e3:	pop    ebx
  4188e4:	nop
  4188e5:	xchg   ecx,eax
  4188e6:	xor    edx,esi
  4188e8:	gs push ebx
  4188ea:	mov    al,ds:0x8198fdb4
  4188ef:	ficomp WORD PTR [edi]
  4188f1:	data16 mov ah,0x59
  4188f4:	mov    al,0x7e
  4188f6:	fcomp  DWORD PTR [eax]
  4188f8:	ror    DWORD PTR [edi+0xe93eafc],1
  4188fe:	fwait
  4188ff:	addr16 aad 0x5b
  418902:	fisttp WORD PTR [eax-0x44]
  418905:	shl    BYTE PTR [ecx+0x3b362cbf],0x13
  41890c:	daa    
  41890d:	xor    edi,DWORD PTR [edx-0x6d]
  418910:	out    0x58,eax
  418912:	xor    eax,ecx
  418914:	dec    eax
  418915:	ss aad 0x5e
  418918:	je     0x41892a
  41891a:	jp     0x418982
  41891c:	pop    esp
  41891d:	pop    ebp
  41891e:	nop
  41891f:	out    0xb5,eax
  418921:	inc    ebp
  418922:	(bad)  
  418924:	shl    DWORD PTR [edx-0x5e],0x6a
  418928:	inc    esi
  418929:	pop    esi
  41892a:	adc    BYTE PTR [edx+edi*1],al
  41892d:	ficomp DWORD PTR [ebx-0x2c]
  418930:	mov    bl,bl
  418932:	scas   al,BYTE PTR es:[edi]
  418933:	aad    0x16
  418935:	loope  0x418966
  418937:	mov    dl,0x76
  418939:	or     al,0x87
  41893b:	out    dx,eax
  41893c:	fwait
  41893d:	(bad)  
  41893e:	adc    ebp,DWORD PTR [edx+0x2e199d3b]
  418944:	rol    dh,0x10
  418947:	pusha  
  418948:	test   al,0xdf
  41894a:	mov    edi,0xacef6def
  41894f:	ds cli 
  418951:	mov    ecx,DWORD PTR [edi-0x28]
  418954:	adc    al,0xc8
  418956:	das    
  418957:	inc    ecx
  418958:	retf   
  418959:	(bad)  
  41895a:	sub    BYTE PTR [esi+eiz*4-0x5c],bl
  41895e:	scas   eax,DWORD PTR es:[edi]
  41895f:	popf   
  418960:	sahf   
  418961:	or     esi,DWORD PTR [esi+edx*1+0x40]
  418965:	shr    DWORD PTR [edi],0xe4
  418968:	out    0xd6,al
  41896a:	jns    0x418938
  41896c:	cmp    eax,0x701b814f
  418971:	in     al,dx
  418972:	lock aaa 
  418974:	cmp    ah,ch
  418976:	sbb    bh,dl
  418978:	mov    ebp,0x5132da32
  41897d:	out    0xc9,al
  41897f:	(bad)
  418983:	jl     0x4189d5
  418985:	and    al,0x3b
  418987:	ins    DWORD PTR es:[edi],dx
  418988:	retf   
  418989:	or     BYTE PTR [edx],0x76
  41898c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41898d:	cld    
  41898e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41898f:	neg    ebp
  418991:	push   ebp
  418992:	mov    ecx,0xd8be223f
  418997:	mov    DWORD PTR [ecx+0x32],esp
  41899a:	cdq    
  41899b:	xchg   edx,eax
  41899c:	lods   eax,DWORD PTR ds:[esi]
  41899d:	push   ecx
  41899e:	xchg   ecx,eax
  41899f:	imul   ebp,DWORD PTR [ebp+0x125a3aa4],0x98a83ac5
  4189a9:	pop    DWORD PTR [ebx]
  4189ab:	jge    0x418a27
  4189ad:	dec    edi
  4189ae:	dec    esi
  4189af:	cmp    al,al
  4189b1:	movlps QWORD PTR [edi+edi*1],xmm1
  4189b5:	in     eax,0xe8
  4189b7:	jge    0x418a03
  4189b9:	inc    edi
  4189ba:	cmp    BYTE PTR [ebx+0x7],dl
  4189bd:	gs ins DWORD PTR es:[edi],dx
  4189bf:	call   0x7f3f:0xe7688ef7
  4189c6:	xchg   edx,eax
  4189c7:	inc    edx
  4189c8:	pop    ebp
  4189c9:	test   eax,0x2830bd0f
  4189ce:	rep stos BYTE PTR es:[edi],al
  4189d0:	std    
  4189d1:	inc    ecx
  4189d2:	fstp   QWORD PTR [edi+eax*1-0x73]
  4189d6:	xchg   edx,eax
  4189d7:	push   ebp
  4189d8:	xor    eax,0xa47e7c86
  4189dd:	repnz rcr DWORD PTR [edi+0x62],0x77
  4189e2:	into   
  4189e3:	jno    0x418969
  4189e5:	adc    BYTE PTR [ecx-0xe],0xb1
  4189e9:	out    0x16,al
  4189eb:	cdq    
  4189ec:	aam    0xac
  4189ee:	mov    ch,BYTE PTR [esi-0x2f]
  4189f1:	jbe    0x4189b6
  4189f3:	imul   ecx,DWORD PTR [ecx+0x4d],0xffffffff
  4189f7:	xchg   esi,eax
  4189f8:	dec    eax
  4189f9:	or     DWORD PTR [edi-0x57],ecx
  4189fc:	pop    esi
  4189fd:	into   
  4189fe:	mov    al,0xa9
  418a00:	push   edi
  418a01:	pop    edi
  418a02:	pop    edi
  418a03:	stos   DWORD PTR es:[edi],eax
  418a04:	mov    bh,0xf5
  418a06:	dec    ebp
  418a07:	or     dl,dh
  418a09:	push   esp
  418a0a:	ds push es
  418a0c:	mov    ss,esp
  418a0e:	and    BYTE PTR [esi+0x51efc64],0xc8
  418a15:	call   0x33ed24c5
  418a1a:	inc    edi
  418a1b:	lods   eax,DWORD PTR ds:[esi]
  418a1c:	inc    edx
  418a1d:	dec    eax
  418a1e:	xor    eax,DWORD PTR [ebx-0x1b19e4bf]
  418a24:	mov    ah,0x55
  418a26:	sub    al,0x2b
  418a28:	js     0x418a28
  418a2a:	js     0x418a27
  418a2c:	or     al,0xbe
  418a2e:	lods   eax,DWORD PTR ds:[esi]
  418a2f:	fisub  DWORD PTR [edi+0x4962ad44]
  418a35:	sbb    bl,BYTE PTR [edx+0x51]
  418a38:	mov    esp,0x77817290
  418a3d:	aaa    
  418a3e:	fsub   QWORD PTR [edi-0x75]
  418a41:	cld    
  418a42:	fst    DWORD PTR [edi+0x29]
  418a45:	pop    ds
  418a46:	dec    esp
  418a47:	jb     0x418ac2
  418a49:	sbb    BYTE PTR [ebp+0x20],0x7e
  418a4d:	add    DWORD PTR [edx],0xfffffff9
  418a50:	popf   
  418a51:	test   eax,0x1bdfdaed
  418a56:	sub    dh,BYTE PTR [eax+ebx*4]
  418a59:	addr16 fwait
  418a5b:	mov    ch,0xca
  418a5d:	(bad)
  418a60:	pop    ss
  418a61:	cmp    ecx,ebp
  418a63:	popf   
  418a64:	dec    ebp
  418a65:	jle    0x418aa4
  418a67:	add    eax,0x46793bb2
  418a6c:	sbb    ecx,DWORD PTR [edi]
  418a6e:	lea    ebx,[edi+0x3]
  418a71:	pop    ecx
  418a72:	les    edx,FWORD PTR [ebx+0x1ea22d64]
  418a78:	adc    DWORD PTR [esi+0x5e],0xffffffe4
  418a7c:	aad    0x3c
  418a7e:	lods   eax,DWORD PTR ds:[esi]
  418a7f:	icebp  
  418a80:	mov    eax,0xe3b4eb19
  418a85:	cwde   
  418a86:	fld    TBYTE PTR [eax]
  418a88:	call   0xc153fac9
  418a8d:	dec    edx
  418a8e:	hlt    
  418a8f:	inc    ecx
  418a90:	stos   DWORD PTR es:[edi],eax
  418a91:	pop    esp
  418a92:	(bad)  
  418a93:	sub    DWORD PTR [edi],eax
  418a95:	arpl   WORD PTR [esi+0x61],bp
  418a98:	mov    dh,0xc5
  418a9a:	mov    eax,ds:0x4121240
  418a9f:	enter  0xf2af,0x7a
  418aa3:	test   al,0xc0
  418aa5:	(bad)  
  418aa6:	cmp    eax,0x761dabe2
  418aab:	xor    esi,ebx
  418aad:	sti    
  418aae:	ins    BYTE PTR es:[edi],dx
  418aaf:	push   edx
  418ab0:	mov    esi,0x71abebbc
  418ab5:	mov    cl,0x1a
  418ab7:	xchg   ecx,eax
  418ab8:	(bad)  
  418ab9:	mov    bh,0xc5
  418abb:	aam    0x9
  418abd:	jl     0x418b23
  418abf:	outs   dx,DWORD PTR ds:[esi]
  418ac0:	fbld   TBYTE PTR [eax]
  418ac2:	test   BYTE PTR ds:0xc358c334,al
  418ac8:	into   
  418ac9:	cwde   
  418aca:	(bad)  
  418acb:	into   
  418acc:	sbb    BYTE PTR [ecx-0x72],dl
  418acf:	or     edx,ecx
  418ad1:	add    al,0x43
  418ad3:	inc    esi
  418ad4:	rcr    DWORD PTR [edx],cl
  418ad6:	inc    edx
  418ad7:	dec    esp
  418ad8:	aad    0x20
  418ada:	ja     0x418ab9
  418adc:	push   cs
  418add:	scas   eax,DWORD PTR es:[edi]
  418ade:	fs out 0x50,al
  418ae1:	loope  0x418a89
  418ae3:	call   0xe3566c3
  418ae8:	test   al,0xb5
  418aea:	out    dx,eax
  418aeb:	pusha  
  418aec:	pop    ss
  418aed:	inc    eax
  418aee:	das    
  418aef:	mul    cl
  418af1:	mov    ah,0x7f
  418af3:	clc    
  418af4:	bound  esi,QWORD PTR ds:0x65f24353
  418afa:	push   0xffffffcf
  418afc:	dec    edi
  418afd:	pop    esi
  418afe:	fcomp  QWORD PTR [edi+edi*1]
  418b01:	xor    al,0x77
  418b03:	add    dl,dh
  418b05:	adc    DWORD PTR [esi],esp
  418b07:	ja     0x418b0a
  418b09:	pop    ebp
  418b0a:	mov    bl,0xd
  418b0c:	fnstenv [ebx-0x135f5d14]
  418b12:	dec    ebx
  418b13:	sbb    cl,BYTE PTR [ecx-0x26]
  418b16:	fild   DWORD PTR [ebx+esi*1]
  418b19:	retf   0xce88
  418b1c:	xlat   BYTE PTR ds:[ebx]
  418b1d:	in     eax,dx
  418b1e:	cwde   
  418b1f:	repnz hlt 
  418b21:	or     DWORD PTR [edx+0x65675f4c],esp
  418b27:	cs cld 
  418b29:	dec    ecx
  418b2a:	dec    eax
  418b2b:	and    esp,ecx
  418b2d:	fadd   DWORD PTR [edi]
  418b2f:	xor    eax,0x2f8276f2
  418b34:	call   0x66c38474
  418b39:	repnz xchg esp,eax
  418b3b:	nop
  418b3c:	cmc    
  418b3d:	push   edi
  418b3e:	or     BYTE PTR [ecx-0x709bd4c5],dl
  418b44:	cmp    al,0x7f
  418b46:	pop    edx
  418b47:	mov    ebx,0x3b5e5d7d
  418b4c:	adc    BYTE PTR [ecx+0x77],dh
  418b4f:	sbb    BYTE PTR [ebp-0x474e079b],dl
  418b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b56:	xor    DWORD PTR [ebx],eax
  418b58:	mov    eax,0x5354d102
  418b5d:	inc    esi
  418b5e:	call   0x187a6a78
  418b63:	ins    DWORD PTR es:[edi],dx
  418b64:	fistp  DWORD PTR [ecx+0x77]
  418b67:	mov    ah,0x82
  418b69:	not    dl
  418b6b:	mov    esi,0x6944a5ae
  418b70:	mov    dh,0xcb
  418b72:	leave  
  418b73:	shl    esp,1
  418b75:	rcr    ebx,0xf0
  418b78:	les    edi,FWORD PTR [eax+eiz*8+0x30]
  418b7c:	jne    0x418afe
  418b7e:	pop    edx
  418b7f:	repnz mov ebx,0x3507cd13
  418b85:	xchg   esp,eax
  418b86:	xor    ebx,esp
  418b88:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b8a:	ins    DWORD PTR es:[edi],dx
  418b8b:	sub    esp,DWORD PTR [ebp-0x4d11c28a]
  418b91:	fld    TBYTE PTR [eax-0x26]
  418b94:	bound  edx,QWORD PTR [edx+0x5a5e91fa]
  418b9a:	add    DWORD PTR [eax+0x3a71fbca],0x3848f4e4
  418ba4:	xlat   BYTE PTR ds:[ebx]
  418ba5:	sub    ecx,esp
  418ba7:	aas    
  418ba8:	rcl    dl,0xfc
  418bab:	xchg   ecx,eax
  418bac:	mov    ds:0xeb5c2c95,al
  418bb1:	add    cl,BYTE PTR [edi]
  418bb3:	xor    al,0x7b
  418bb5:	div    BYTE PTR [edi-0x6]
  418bb8:	clc    
  418bb9:	cli    
  418bba:	dec    esp
  418bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bbc:	in     al,dx
  418bbd:	mov    ah,0xe3
  418bbf:	cwde   
  418bc0:	cmc    
  418bc1:	push   es
  418bc2:	pusha  
  418bc3:	or     BYTE PTR [ecx-0x501bf037],ch
  418bc9:	ret    0xf6ba
  418bcc:	cmp    cl,BYTE PTR [ecx+edi*2+0x43b64144]
  418bd3:	jmp    0x418c3b
  418bd5:	stc    
  418bd6:	ret    0x13a2
  418bd9:	inc    eax
  418bda:	pop    esi
  418bdb:	call   0x6d9c:0xa04977cb
  418be2:	jb     0x418c50
  418be4:	in     al,0x86
  418be6:	les    ebx,FWORD PTR [edi-0x18]
  418be9:	out    dx,eax
  418bea:	repnz cwde 
  418bec:	pop    eax
  418bed:	xchg   esi,eax
  418bee:	in     eax,dx
  418bef:	xchg   esp,eax
  418bf0:	push   eax
  418bf1:	icebp  
  418bf2:	jne    0x418c4a
  418bf4:	xchg   BYTE PTR [edi],ah
  418bf6:	xchg   BYTE PTR [ecx-0x933f922],al
  418bfc:	mov    esp,0x1cb1cbc6
  418c01:	lock xor dh,BYTE PTR [ecx]
  418c04:	xor    BYTE PTR [ebx-0x590532a0],0x2d
  418c0b:	adc    DWORD PTR [ebx],eax
  418c0d:	inc    ebp
  418c0e:	imul   DWORD PTR [esi-0x7c]
  418c11:	sbb    al,0x4e
  418c13:	ins    DWORD PTR es:[edi],dx
  418c14:	es cld 
  418c16:	fstp   QWORD PTR [eax-0x20cdaff]
  418c1c:	cli    
  418c1d:	aad    0xc9
  418c1f:	pop    ds
  418c20:	push   edx
  418c21:	or     DWORD PTR ds:0xee1d266,ebp
  418c27:	(bad)  
  418c28:	jecxz  0x418c05
  418c2a:	rcr    eax,1
  418c2c:	cmp    al,0x77
  418c2e:	lds    esi,FWORD PTR [ebp+0x61]
  418c31:	cmp    bh,dl
  418c33:	das    
  418c34:	fs cdq 
  418c36:	add    esi,DWORD PTR [ebx+0x6c67c4f0]
  418c3c:	or     edx,edi
  418c3e:	dec    ecx
  418c3f:	xchg   edx,eax
  418c40:	mov    eax,ds:0xa93b6e6d
  418c45:	pop    eax
  418c46:	adc    al,0xab
  418c48:	inc    esi
  418c49:	ss xor al,0xf9
  418c4c:	xchg   DWORD PTR ds:0x5e806b67,ecx
  418c52:	mov    eax,0x3bc4e1f2
  418c57:	sub    eax,DWORD PTR [ebx+ecx*1+0x80c932]
  418c5e:	mov    es,WORD PTR [edi]
  418c60:	arpl   WORD PTR ds:0xf85fdb40,ax
  418c66:	jle    0x418cad
  418c68:	and    DWORD PTR [edi],0xffffffa6
  418c6b:	or     BYTE PTR [ebx+ecx*4+0x66e81dce],bh
  418c72:	adc    DWORD PTR ds:0x9a302c05,0x7df2ab1b
  418c7c:	mov    edi,0x8e0e87c7
  418c81:	pop    edx
  418c82:	clc    
  418c83:	push   0x1
  418c85:	fstp   TBYTE PTR [eax-0x3e]
  418c88:	(bad)  
  418c89:	not    BYTE PTR [edi+ecx*8-0x6a4b53d7]
  418c90:	jmp    0xc69ec55f
  418c95:	jp     0x418cdb
  418c97:	mov    dh,0xd3
  418c99:	sub    DWORD PTR [edx],ecx
  418c9b:	cmp    DWORD PTR [ebp-0x437c94f4],ecx
  418ca1:	and    BYTE PTR [ebp-0x52d376fe],dl
  418ca7:	mov    ebx,0x56ff6e1d
  418cac:	into   
  418cad:	pop    esi
  418cae:	dec    DWORD PTR [eax+0x3ac3f67d]
  418cb4:	adc    al,0x4d
  418cb6:	mov    dl,0xe
  418cb8:	mov    ah,ch
  418cba:	adc    DWORD PTR [ebp-0x62c75190],0x4c
  418cc1:	outs   dx,BYTE PTR ds:[esi]
  418cc2:	push   esp
  418cc3:	fwait
  418cc4:	cmp    cl,cl
  418cc6:	or     bl,cl
  418cc8:	mov    dh,0xed
  418cca:	(bad)  
  418ccb:	pop    esi
  418ccc:	sub    eax,0x7b01bf6c
  418cd1:	mov    edi,0xb9d93954
  418cd6:	retf   0x8d82
  418cd9:	sti    
  418cda:	sbb    ah,ch
  418cdc:	sbb    edx,DWORD PTR [eax-0x45]
  418cdf:	push   ss
  418ce0:	sbb    DWORD PTR [edi+0x7],0xd0ade32
  418ce7:	mov    edi,0x8db85c96
  418cec:	imul   esi,DWORD PTR [edi+0x2cfd1b2f],0xffffffd5
  418cf3:	jmp    0x418cd9
  418cf5:	ret    
  418cf6:	scas   al,BYTE PTR es:[edi]
  418cf7:	sbb    al,0x7
  418cf9:	adc    DWORD PTR [ecx],edi
  418cfb:	inc    ecx
  418cfc:	fst    DWORD PTR [ebx]
  418cfe:	aaa    
  418cff:	test   al,0xc1
  418d01:	jbe    0x418c97
  418d03:	ds das 
  418d05:	cmp    DWORD PTR [eax],ecx
  418d07:	jp     0x418c95
  418d09:	push   ds
  418d0a:	jo     0x418ce4
  418d0c:	(bad)  
  418d0d:	jmp    0x3ece:0x3ab2671e
  418d14:	pop    ecx
  418d15:	adc    eax,0x831c418f
  418d1a:	and    edx,DWORD PTR [ebx-0x7437956b]
  418d20:	sub    eax,0x5f459cdf
  418d25:	push   edi
  418d26:	sbb    al,0x14
  418d28:	push   ds
  418d29:	or     edx,DWORD PTR [ebx]
  418d2b:	pushf  
  418d2c:	arpl   WORD PTR [ebx-0x6e],ax
  418d2f:	ret    
  418d30:	sti    
  418d31:	push   edx
  418d32:	adc    al,bh
  418d34:	cmp    dh,BYTE PTR [esi+0x67]
  418d37:	cmp    al,0xe
  418d39:	mov    dh,0x68
  418d3b:	mov    ch,0x54
  418d3d:	mov    ebx,0xcdf6a349
  418d42:	mov    DWORD PTR [edx+edi*2+0x4e2836db],ecx
  418d49:	cld    
  418d4a:	ret    0x2075
  418d4d:	or     al,0xa2
  418d4f:	adc    dl,BYTE PTR [ecx]
  418d51:	pop    edi
  418d52:	in     al,0xda
  418d54:	xlat   BYTE PTR ds:[ebx]
  418d55:	neg    ch
  418d57:	icebp  
  418d58:	in     al,dx
  418d59:	popf   
  418d5a:	dec    ebp
  418d5b:	xor    BYTE PTR [ebx],bl
  418d5d:	sub    BYTE PTR [edi+ecx*8-0x505b4f3f],ch
  418d64:	pusha  
  418d65:	jmp    0x5cfb1c38
  418d6a:	stos   DWORD PTR es:[edi],eax
  418d6b:	or     esi,DWORD PTR [ecx+0x1b]
  418d6e:	lods   eax,DWORD PTR ds:[esi]
  418d6f:	out    0x41,al
  418d71:	or     DWORD PTR [edx],esp
  418d73:	jae    0x418d77
  418d75:	xlat   BYTE PTR ds:[ebx]
  418d76:	xlat   BYTE PTR ds:[ebx]
  418d77:	aad    0xa6
  418d79:	adc    BYTE PTR [ebp+0x664ac841],cl
  418d7f:	js     0x418d8b
  418d81:	or     al,0x56
  418d83:	push   es
  418d84:	es sbb eax,0xe3e815d9
  418d8a:	stos   DWORD PTR es:[edi],eax
  418d8b:	test   eax,0x34628ec1
  418d90:	xor    ebp,0x731cab91
  418d96:	ret    0x54bd
  418d99:	cmp    DWORD PTR ds:0xae3b0724,ebx
  418d9f:	mov    edx,DWORD PTR [ebx]
  418da1:	push   ebp
  418da2:	into   
  418da3:	mov    dl,0x6f
  418da5:	mov    DWORD PTR [ebp-0x5a],ebp
  418da8:	sub    edi,edx
  418daa:	leave  
  418dab:	xchg   ebx,eax
  418dac:	jns    0x418d58
  418dae:	retf   
  418daf:	jg     0x418dea
  418db1:	(bad)  
  418db2:	(bad)  
  418db3:	frstor [ebp-0x6b]
  418db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418db7:	jle    0x418d77
  418db9:	rcr    DWORD PTR [ebx-0x510b0e34],0x98
  418dc0:	dec    edx
  418dc1:	and    al,0xde
  418dc3:	mov    ds:0xb20b0777,eax
  418dc8:	data16 cs (bad) 
  418dcb:	push   ebp
  418dcc:	xchg   ebp,eax
  418dcd:	push   DWORD PTR [esi-0x39]
  418dd0:	adc    edx,ebp
  418dd2:	push   es
  418dd3:	outs   dx,DWORD PTR ds:[esi]
  418dd4:	out    0xd0,eax
  418dd6:	scas   al,BYTE PTR es:[edi]
  418dd7:	sub    edx,DWORD PTR [ebx-0x4078eb89]
  418ddd:	mov    al,ds:0xc75f4f82
  418de2:	sub    eax,0x17033be8
  418de7:	test   al,0xcd
  418de9:	jge    0x418d6e
  418deb:	push   edx
  418dec:	cmp    ch,ch
  418dee:	(bad)
  418df3:	jo     0x418da0
  418df5:	cmc    
  418df6:	xlat   BYTE PTR ds:[ebx]
  418df7:	jnp    0x418db8
  418df9:	adc    DWORD PTR ds:0x4391efe2,0x3a4c7b97
  418e03:	std    
  418e04:	fistp  QWORD PTR [esi+0x27]
  418e07:	xchg   ecx,eax
  418e08:	sbb    dh,BYTE PTR [ebp-0x4e]
  418e0b:	enter  0xdd44,0xd
  418e0f:	fiadd  WORD PTR [esp+esi*8]
  418e12:	scas   al,BYTE PTR es:[edi]
  418e13:	arpl   sp,cx
  418e15:	jp     0x418e2f
  418e17:	xchg   esi,eax
  418e18:	gs std 
  418e1a:	inc    esp
  418e1b:	fist   WORD PTR [edx+eax*1+0x28]
  418e1f:	loope  0x418ddf
  418e21:	rcl    dl,1
  418e23:	addr16 sbb al,0x40
  418e26:	adc    eax,0xc7e24c81
  418e2b:	mov    DWORD PTR [edx],ebx
  418e2d:	js     0x418e0c
  418e2f:	mov    ss,edi
  418e31:	dec    ecx
  418e32:	xor    bl,BYTE PTR [ebx+0xb6a61bd]
  418e38:	scas   al,BYTE PTR es:[edi]
  418e39:	bound  ebp,QWORD PTR [ecx+0x36]
  418e3c:	cmp    eax,0x74ce5455
  418e41:	jo     0x418e6c
  418e43:	outs   dx,BYTE PTR ds:[esi]
  418e44:	ja     0x418e99
  418e46:	leave  
  418e47:	jecxz  0x418e6a
  418e49:	ret    0x27df
  418e4c:	jp     0x418ded
  418e4e:	fucomp st(4)
  418e50:	jnp    0x418e38
  418e52:	mov    ebx,0x7e721f98
  418e57:	xchg   edi,eax
  418e58:	ret    0x50b4
  418e5b:	add    al,BYTE PTR [eax-0x33]
  418e5e:	jl     0x418e20
  418e60:	push   ss
  418e61:	imul   esi,DWORD PTR [ebp-0x7dcd6629],0x7f
  418e68:	lds    edx,FWORD PTR [ecx]
  418e6a:	daa    
  418e6b:	dec    ebp
  418e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e6d:	mov    eax,ds:0xdba201c9
  418e72:	mov    cl,0x7e
  418e74:	and    DWORD PTR [ecx+0x5132bd38],ebx
  418e7a:	call   0x7229:0xdb23c782
  418e81:	mov    dh,0x8a
  418e83:	scas   al,BYTE PTR es:[edi]
  418e84:	sar    bl,cl
  418e86:	test   al,0x4c
  418e88:	mov    ebx,0x757aa553
  418e8d:	xor    al,0xf0
  418e8f:	push   ebp
  418e90:	jmp    0x418ec6
  418e92:	rcl    BYTE PTR [ebx],1
  418e94:	mov    al,0xae
  418e96:	inc    edx
  418e97:	into   
  418e98:	fdivr  st,st(7)
  418e9a:	pop    ebp
  418e9b:	mov    dh,0xc7
  418e9d:	retf   0xadac
  418ea0:	xchg   ecx,eax
  418ea1:	(bad)
  418ea5:	adc    al,BYTE PTR [ebx]
  418ea7:	sub    eax,DWORD PTR [ebp+0x6bcfa1fa]
  418ead:	repz fs jecxz 0x418ef9
  418eb1:	inc    ebx
  418eb2:	pop    es
  418eb3:	imul   ecx
  418eb5:	dec    edi
  418eb6:	aas    
  418eb7:	xchg   dh,bl
  418eb9:	cdq    
  418eba:	ror    DWORD PTR [edx],cl
  418ebc:	in     al,0x9f
  418ebe:	jmp    0x56ff:0xfcd965c3
  418ec5:	jmp    0x78e1a9c2
  418eca:	and    esp,DWORD PTR [ebx+0x64]
  418ecd:	dec    ecx
  418ece:	aam    0xd3
  418ed0:	out    dx,eax
  418ed1:	call   0xf5a8:0x9b5a983
  418ed8:	jnp    0x418e72
  418eda:	scas   eax,DWORD PTR es:[edi]
  418edb:	outs   dx,BYTE PTR ds:[esi]
  418edc:	inc    esi
  418edd:	fs mov ebx,0xba62e2d5
  418ee3:	xchg   ecx,eax
  418ee4:	cs int 0xd2
  418ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee8:	xchg   BYTE PTR [ebp+0xc68f401],ah
  418eee:	xchg   esp,eax
  418eef:	inc    esp
  418ef0:	mov    al,cs:0x8f07ee0
  418ef6:	add    eax,0xbc51492b
  418efb:	push   esi
  418efc:	jne    0x418f65
  418efe:	test   eax,0x26e04b1f
  418f03:	ror    DWORD PTR ds:0x445c4a3a,cl
  418f09:	ins    DWORD PTR es:[edi],dx
  418f0a:	sbb    eax,0x9634963c
  418f0f:	pop    es
  418f10:	rcl    BYTE PTR [ebx-0x21],cl
  418f13:	adc    al,0xe
  418f15:	ss push ebx
  418f17:	xchg   esi,eax
  418f18:	push   ebp
  418f19:	sti    
  418f1a:	sahf   
  418f1b:	mov    esp,0xf7596407
  418f20:	es jnp 0x418f04
  418f23:	fstp   QWORD PTR [eax]
  418f25:	lods   eax,DWORD PTR ds:[esi]
  418f26:	lea    ecx,[edi]
  418f28:	jnp    0x418f2e
  418f2a:	rcl    DWORD PTR ds:0x735ffe33,cl
  418f30:	cmp    BYTE PTR [ebx],0xa9
  418f33:	cmp    al,0xb4
  418f35:	mov    dh,0xc9
  418f37:	add    BYTE PTR [eax+0x19],dh
  418f3a:	dec    ebp
  418f3b:	sbb    BYTE PTR [eax+0x5b],bh
  418f3e:	mov    dl,0xc3
  418f40:	inc    esp
  418f41:	push   eax
  418f42:	hlt    
  418f43:	pop    edx
  418f44:	mov    ebx,0xe292f325
  418f49:	xlat   BYTE PTR ds:[ebx]
  418f4a:	mov    eax,0xd424ae68
  418f4f:	out    0xbf,eax
  418f51:	jo     0x418f17
  418f53:	mov    ebp,0x2fe71f66
  418f58:	xor    esi,edi
  418f5a:	inc    esp
  418f5b:	xchg   edx,eax
  418f5c:	jg     0x418f9b
  418f5e:	xchg   esi,eax
  418f5f:	mov    dl,0x1a
  418f61:	fsub   DWORD PTR [esi+ebx*1+0x2c]
  418f65:	(bad)  
  418f67:	repnz inc eax
  418f69:	(bad)  
  418f6a:	xor    al,0xf5
  418f6c:	jl     0x418fd4
  418f6e:	adc    DWORD PTR [ecx+eax*4],eax
  418f71:	retf   
  418f72:	fdiv   DWORD PTR [ebp+0x1b]
  418f75:	pop    esp
  418f76:	sub    ecx,0x2f
  418f79:	cmp    al,0x1c
  418f7b:	hlt    
  418f7c:	xor    bh,0x70
  418f7f:	outs   dx,DWORD PTR ds:[esi]
  418f80:	xchg   ebp,eax
  418f81:	lods   al,BYTE PTR ds:[esi]
  418f82:	je     0x418f45
  418f84:	push   ss
  418f85:	into   
  418f86:	or     eax,0x6665de2
  418f8b:	mov    eax,ds:0x1daa2508
  418f90:	xor    edi,DWORD PTR [ecx+0x2d]
  418f93:	dec    ebp
  418f94:	sub    edx,DWORD PTR [eax-0x4f]
  418f97:	sahf   
  418f98:	pop    ebx
  418f99:	xor    edi,DWORD PTR [ebx+0x2c4353b]
  418f9f:	icebp  
  418fa0:	jl     0x419016
  418fa2:	ror    DWORD PTR [ecx+0x64],cl
  418fa5:	in     eax,0x7b
  418fa7:	sub    DWORD PTR [edx-0x79],edi
  418faa:	mov    DWORD PTR [ebp+0x5a9b22],edi
  418fb0:	pop    eax
  418fb1:	in     eax,0xa1
  418fb3:	jo     0x419020
  418fb5:	imul   ebx,DWORD PTR [edx],0x56d6fe96
  418fbb:	dec    edx
  418fbc:	mov    bh,BYTE PTR [esi-0x58]
  418fbf:	push   esi
  418fc0:	pop    ecx
  418fc1:	adc    BYTE PTR [edx],0xa0
  418fc4:	(bad)  
  418fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc6:	pushfw 
  418fc8:	xchg   BYTE PTR [ebx-0x79],bl
  418fcb:	shl    BYTE PTR [ebp+0x11],0xb0
  418fcf:	mov    BYTE PTR [edx+0x72],dl
  418fd2:	sbb    DWORD PTR [ebp+0x42],0xffffffac
  418fd6:	iret   
  418fd7:	push   ds
  418fd8:	ss push cs
  418fda:	shl    DWORD PTR [ecx],0xad
  418fdd:	inc    edi
  418fde:	and    eax,0x36696c11
  418fe3:	div    DWORD PTR [edi]
  418fe5:	hlt    
  418fe6:	sbb    al,0x4d
  418fe8:	int    0xd1
  418fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418feb:	mov    al,0xb3
  418fed:	ins    BYTE PTR es:[edi],dx
  418fee:	pop    eax
  418fef:	pop    edi
  418ff0:	pop    ebp
  418ff1:	iret   
  418ff2:	and    DWORD PTR [ebx-0x54],eax
  418ff5:	int    0x2d
  418ff7:	hlt    
  418ff8:	add    al,0x79
  418ffa:	mov    ebp,0x677c808a
  418fff:	scas   eax,DWORD PTR es:[edi]
  419000:	xchg   DWORD PTR [edx-0xf9f01e9],esi
  419006:	jmp    0xbfac:0xd47cac95
  41900d:	push   esp
  41900e:	xchg   edx,eax
  41900f:	push   ebp
  419010:	aam    0xf9
  419012:	or     edx,esp
  419014:	ds mov ebp,0xf03acae0
  41901a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41901b:	push   cs
  41901c:	jbe    0x418fe7
  41901e:	mov    dh,0x9f
  419020:	mov    ebp,0x3c7688c0
  419025:	xchg   edx,eax
  419026:	add    BYTE PTR [ecx],bh
  419028:	fbstp  TBYTE PTR ds:0x1698072e
  41902e:	dec    esp
  41902f:	xchg   edi,eax
  419030:	in     al,dx
  419031:	cmp    al,BYTE PTR [edi]
  419033:	dec    eax
  419034:	add    eax,0xa13a76b1
  419039:	nop
  41903a:	lahf   
  41903b:	mov    ?,eax
  41903d:	pop    es
  41903e:	lock sub BYTE PTR [ebp-0x73a5e41f],ah
  419045:	inc    ebx
  419046:	jl     0x419065
  419048:	popa   
  419049:	leave  
  41904a:	pop    ebp
  41904b:	ja     0x4190c7
  41904d:	dec    ebp
  41904e:	or     DWORD PTR [ebx+0x599c3e6a],ebp
  419054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419055:	push   0xffffff9a
  419057:	call   0xfb7410
  41905c:	mov    ds:0x7eaf5601,eax
  419061:	mov    WORD PTR ds:0x23888674,gs
  419067:	ror    DWORD PTR [ecx+0x558bb455],cl
  41906d:	or     BYTE PTR [ebx-0x6b7247a3],cl
  419073:	adc    ebx,edi
  419075:	cld    
  419076:	inc    ecx
  419077:	add    cl,BYTE PTR [ecx+0x558bb855]
  41907d:	or     BYTE PTR [ebx-0x5a1ead0],bh
  419083:	sub    ebx,edx
  419085:	add    ebx,DWORD PTR [ebp-0x44]
  419088:	mov    DWORD PTR [ebp-0x44],ebx
  41908b:	mov    edx,DWORD PTR [ebp+0x8]
  41908e:	xor    edx,eax
  419090:	add    edx,esi
  419092:	jne    0x416c96
  419098:	jmp    0x419125
  41909d:	mov    edx,DWORD PTR [ebp-0x14]
  4190a0:	mov    DWORD PTR [ebp+0x8],edx
  4190a3:	jmp    0x419118
  4190a8:	mov    edx,DWORD PTR [ebp+0x8]
  4190ab:	mov    ebx,DWORD PTR [ebp-0x8]
  4190ae:	xor    edx,eax
  4190b0:	xor    ebx,eax
  4190b2:	sub    edx,ebx
  4190b4:	sub    edx,esi
  4190b6:	xor    edx,eax
  4190b8:	mov    DWORD PTR [ebp+0x8],edx
  4190bb:	mov    edx,DWORD PTR [ebp+0x8]
  4190be:	mov    ebx,DWORD PTR [ebp-0x58]
  4190c1:	add    edx,0x5708fa
  4190c7:	imul   edx,ebx
  4190ca:	mov    DWORD PTR [ebp-0x58],edx
  4190cd:	mov    edx,DWORD PTR [ebp+0x8]
  4190d0:	mov    ebx,DWORD PTR [ebp-0x54]
  4190d3:	add    edx,0x64f89c
  4190d9:	or     edx,ebx
  4190db:	mov    DWORD PTR [ebp-0x54],edx
  4190de:	mov    edx,DWORD PTR [ebp+0x8]
  4190e1:	mov    ebx,DWORD PTR [ebp-0x50]
  4190e4:	add    edx,ecx
  4190e6:	xor    edx,ebx
  4190e8:	mov    DWORD PTR [ebp-0x50],edx
  4190eb:	mov    edx,DWORD PTR [ebp+0x8]
  4190ee:	mov    ebx,DWORD PTR [ebp-0x4c]
  4190f1:	add    edx,edi
  4190f3:	and    edx,ebx
  4190f5:	mov    DWORD PTR [ebp-0x4c],edx
  4190f8:	mov    edx,DWORD PTR [ebp+0x8]
  4190fb:	mov    ebx,DWORD PTR [ebp-0x48]
  4190fe:	lea    edx,[ebx+edx*1+0x241fcdf]
  419105:	mov    DWORD PTR [ebp-0x48],edx
  419108:	mov    edx,DWORD PTR [ebp+0x8]
  41910b:	mov    ebx,0xfa5e1530
  419110:	sub    ebx,edx
  419112:	add    ebx,DWORD PTR [ebp-0x44]
  419115:	mov    DWORD PTR [ebp-0x44],ebx
  419118:	mov    edx,DWORD PTR [ebp+0x8]
  41911b:	xor    edx,eax
  41911d:	add    edx,esi
  41911f:	jne    0x4190a8
  419125:	mov    edx,DWORD PTR [ebp-0x14]
  419128:	mov    DWORD PTR [ebp+0x8],edx
  41912b:	jmp    0x41b525
  419130:	mov    edx,DWORD PTR [ebp+0x8]
  419133:	mov    ebx,DWORD PTR [ebp-0x8]
  419136:	xor    edx,eax
  419138:	xor    ebx,eax
  41913a:	sub    edx,ebx
  41913c:	sub    edx,esi
  41913e:	xor    edx,eax
  419140:	mov    DWORD PTR [ebp+0x8],edx
  419143:	mov    edx,DWORD PTR [ebp+0x8]
  419146:	mov    ebx,DWORD PTR [ebp-0x58]
  419149:	add    edx,0x5708fa
  41914f:	imul   edx,ebx
  419152:	mov    DWORD PTR [ebp-0x58],edx
  419155:	mov    edx,DWORD PTR [ebp+0x8]
  419158:	mov    ebx,DWORD PTR [ebp-0x54]
  41915b:	add    edx,0x64f89c
  419161:	or     edx,ebx
  419163:	mov    DWORD PTR [ebp-0x54],edx
  419166:	mov    edx,DWORD PTR [ebp+0x8]
  419169:	mov    ebx,DWORD PTR [ebp-0x50]
  41916c:	add    edx,ecx
  41916e:	xor    edx,ebx
  419170:	mov    DWORD PTR [ebp-0x50],edx
  419173:	mov    edx,DWORD PTR [ebp+0x8]
  419176:	mov    ebx,DWORD PTR [ebp-0x4c]
  419179:	add    edx,edi
  41917b:	and    edx,ebx
  41917d:	mov    DWORD PTR [ebp-0x4c],edx
  419180:	mov    edx,DWORD PTR [ebp+0x8]
  419183:	mov    ebx,DWORD PTR [ebp-0x48]
  419186:	lea    edx,[ebx+edx*1+0x241fcdf]
  41918d:	jmp    0x41b512
  419192:	stos   DWORD PTR es:[edi],eax
  419193:	push   ds
  419194:	(bad)  
  419195:	and    al,0xcb
  419197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419198:	jnp    0x419127
  41919a:	jge    0x41913b
  41919c:	xor    eax,0xc306821b
  4191a1:	or     al,dh
  4191a3:	sbb    DWORD PTR [ecx+0x7a],edi
  4191a6:	adc    bl,BYTE PTR [edi+0x7a]
  4191a9:	jp     0x4191c8
  4191ab:	mov    DWORD PTR [esi+0x4b],ecx
  4191ae:	xor    BYTE PTR [edx+eiz*8-0xac0b7de],dl
  4191b5:	bound  eax,QWORD PTR [ebx+ecx*4-0x7f]
  4191b9:	shl    DWORD PTR [edi+0x55],1
  4191bc:	(bad)  
  4191bd:	sbb    esi,DWORD PTR [ebp+0x49]
  4191c0:	(bad)  
  4191c1:	pop    ecx
  4191c2:	jl     0x419168
  4191c4:	mov    ch,BYTE PTR [ebp-0x36bb1e69]
  4191ca:	daa    
  4191cb:	mov    al,ds:0xb74f5868
  4191d0:	in     eax,0x4f
  4191d2:	jno    0x4191ef
  4191d4:	mov    ebx,0x517e33b3
  4191d9:	fisttp WORD PTR [edi+0x46]
  4191dc:	pop    eax
  4191dd:	xor    eax,0x563270a4
  4191e2:	adc    edx,edx
  4191e4:	push   fs
  4191e6:	emms   
  4191e8:	aaa    
  4191e9:	stos   DWORD PTR es:[edi],eax
  4191ea:	xchg   ch,bl
  4191ec:	xchg   ebx,eax
  4191ed:	xchg   ebp,eax
  4191ee:	mov    ebp,0xae34e5e6
  4191f3:	not    BYTE PTR [eax+0x51]
  4191f6:	adc    DWORD PTR [edx-0x41],edi
  4191f9:	pop    ebp
  4191fa:	(bad)
  4191fe:	add    BYTE PTR [ecx-0x3b],ah
  419201:	(bad)  
  419202:	or     al,0x24
  419204:	jmp    0x3b8921d7
  419209:	out    0xc0,eax
  41920b:	(bad)  
  41920c:	leave  
  41920d:	xchg   edi,eax
  41920e:	mov    eax,0x8135abbe
  419213:	ins    BYTE PTR es:[edi],dx
  419214:	and    dh,BYTE PTR [ebx+0x6f47c19c]
  41921a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41921b:	inc    ecx
  41921c:	rcl    DWORD PTR [ebp+0x5c50682],cl
  419222:	add    ch,BYTE PTR [eax]
  419224:	gs xchg ebp,eax
  419226:	push   0x1ce51d05
  41922b:	stc    
  41922c:	push   0x64
  41922e:	pop    ebp
  41922f:	in     eax,dx
  419230:	inc    edx
  419231:	int    0xc0
  419233:	push   eax
  419234:	popa   
  419235:	xor    BYTE PTR [edx],dh
  419237:	cli    
  419238:	jae    0x41928e
  41923a:	inc    ebx
  41923b:	pop    edi
  41923c:	jae    0x41924b
  41923e:	sar    BYTE PTR [esi-0x5e],1
  419241:	ins    DWORD PTR es:[edi],dx
  419242:	int    0xe5
  419244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419245:	dec    ecx
  419246:	mov    ah,0x96
  419248:	xchg   edx,eax
  419249:	dec    eax
  41924a:	pop    ecx
  41924b:	lock (bad) 
  41924d:	in     eax,0x58
  41924f:	mov    esi,0x87fcbabd
  419254:	jg     0x4192bd
  419256:	mov    bl,0x83
  419258:	loope  0x4192b0
  41925a:	sbb    DWORD PTR [edx-0x3e],ecx
  41925d:	dec    edx
  41925e:	push   cs
  41925f:	sar    DWORD PTR [ebx+0x14e6acf5],0x30
  419266:	pop    eax
  419267:	ret    
  419268:	sub    ebx,ecx
  41926a:	das    
  41926b:	ja     0x419214
  41926d:	icebp  
  41926e:	repnz lock (bad) 
  419272:	icebp  
  419273:	sbb    bh,bh
  419275:	hlt    
  419276:	ret    
  419277:	out    0xd0,eax
  419279:	stos   DWORD PTR es:[edi],eax
  41927a:	imul   esi,DWORD PTR [edi-0x62],0x9f0c3f4d
  419281:	and    dl,al
  419283:	out    dx,eax
  419284:	dec    esp
  419285:	loope  0x4192d6
  419287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419288:	mov    ds:0x9f8d7f4d,al
  41928d:	jo     0x419267
  41928f:	and    bh,BYTE PTR [esp+ebp*8]
  419292:	shr    DWORD PTR [ebx],1
  419294:	push   cs
  419295:	in     al,0x97
  419297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419298:	ret    
  419299:	cli    
  41929a:	xor    al,0x1c
  41929c:	mov    edi,DWORD PTR [edx+0x10]
  41929f:	arpl   WORD PTR [edx],si
  4192a1:	mov    al,BYTE PTR [ecx+0x547c0c67]
  4192a7:	or     cl,BYTE PTR [ebx]
  4192a9:	das    
  4192aa:	leave  
  4192ab:	add    al,0xf2
  4192ad:	xor    BYTE PTR [edi+0x2e4f20f5],dl
  4192b3:	popa   
  4192b4:	dec    eax
  4192b5:	jae    0x419274
  4192b7:	sub    ah,ch
  4192b9:	or     eax,0xbad9cf23
  4192be:	adc    DWORD PTR [ebx-0x21],esi
  4192c1:	sub    al,BYTE PTR [ebp-0x583eb70a]
  4192c7:	jno    0x419292
  4192c9:	sub    ch,BYTE PTR [esi+esi*8+0x1b2219a8]
  4192d0:	int    0x5c
  4192d2:	sub    ebx,DWORD PTR [ebx+0x71]
  4192d5:	xchg   esp,eax
  4192d6:	mov    ds:0x1cc51d45,eax
  4192db:	imul   BYTE PTR [ecx+0x17cd8dde]
  4192e1:	and    al,0x2
  4192e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192e4:	(bad)  
  4192e5:	out    0x50,eax
  4192e7:	dec    ebx
  4192e8:	jo     0x419280
  4192ea:	push   ebp
  4192eb:	sahf   
  4192ec:	fcmovu st,st(0)
  4192ee:	stos   DWORD PTR es:[edi],eax
  4192ef:	(bad)  [eax]
  4192f1:	or     BYTE PTR [ecx-0x59],ch
  4192f4:	mov    dh,0x2b
  4192f6:	std    
  4192f7:	dec    edx
  4192f8:	repnz push esp
  4192fa:	sub    BYTE PTR [eax-0x42],cl
  4192fd:	out    0x7b,al
  4192ff:	(bad)  
  419300:	sbb    bl,BYTE PTR [ecx-0xfdacd8a]
  419306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419307:	adc    BYTE PTR [esi-0x73],ch
  41930a:	sar    BYTE PTR [esi],1
  41930c:	pop    esp
  41930d:	mov    dl,dl
  41930f:	jmp    0x7c8d:0xca2e13b6
  419316:	out    dx,eax
  419317:	icebp  
  419318:	(bad)  
  419319:	fwait
  41931a:	mov    eax,ds:0xe311f58e
  41931f:	into   
  419320:	scas   al,BYTE PTR es:[edi]
  419321:	stc    
  419322:	mov    ecx,0x16a0e63b
  419327:	es aad 0xc8
  41932a:	out    0x97,al
  41932c:	mov    dh,BYTE PTR [ebx+0x2f]
  41932f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419330:	push   ebx
  419331:	shr    edx,0x5d
  419334:	retf   0xb74a
  419337:	leave  
  419338:	cdq    
  419339:	and    esp,DWORD PTR [eax-0x2836c24d]
  41933f:	dec    esi
  419340:	jno    0x41937c
  419342:	popf   
  419343:	mov    eax,0x3c91f36e
  419348:	inc    ecx
  419349:	jecxz  0x419300
  41934b:	ins    BYTE PTR es:[edi],dx
  41934c:	xor    eax,0x3ebe6e30
  419351:	(bad)  
  419352:	loope  0x4193b5
  419354:	mov    cs:0x18d9486d,al
  41935a:	cli    
  41935b:	mov    BYTE PTR [ebp-0x18],bl
  41935e:	and    al,0x2b
  419360:	mov    cl,0x87
  419362:	(bad)  
  419363:	push   esp
  419364:	int3   
  419365:	cmp    eax,0x2bde97fa
  41936a:	into   
  41936b:	jle    0x41930c
  41936d:	push   edx
  41936e:	lods   al,BYTE PTR ds:[esi]
  41936f:	int3   
  419370:	or     DWORD PTR [ebx+0x3fefc0fd],0x1d59a4b0
  41937a:	test   DWORD PTR [ebx],0xbae38a27
  419380:	js     0x419393
  419382:	adc    esi,DWORD PTR [eax-0x5]
  419385:	daa    
  419386:	scas   eax,DWORD PTR es:[edi]
  419387:	dec    ebp
  419388:	popf   
  419389:	leave  
  41938a:	jns    0x4193ca
  41938c:	ins    BYTE PTR es:[edi],dx
  41938d:	xchg   ecx,esp
  41938f:	push   ecx
  419390:	dec    esp
  419391:	jae    0x4193cb
  419393:	xor    eax,0x2319164b
  419398:	push   cs
  419399:	xchg   DWORD PTR [eax+0x27987362],ebx
  41939f:	test   BYTE PTR [ebx+0x5d5de0b7],dl
  4193a5:	mov    ch,0x30
  4193a7:	sub    al,0x90
  4193a9:	sbb    BYTE PTR [ecx+0x64],bl
  4193ac:	sbb    DWORD PTR [edx+esi*1+0x2b],esp
  4193b0:	jno    0x419343
  4193b2:	add    al,0xf7
  4193b4:	int    0x9a
  4193b6:	pop    edx
  4193b7:	dec    ecx
  4193b8:	stos   BYTE PTR es:[edi],al
  4193b9:	or     ch,bl
  4193bb:	xor    BYTE PTR [eax+esi*4],ah
  4193be:	sub    eax,0x7f63bdbb
  4193c3:	lahf   
  4193c4:	adc    ecx,DWORD PTR [eax]
  4193c6:	stos   BYTE PTR es:[edi],al
  4193c7:	int3   
  4193c8:	pop    es
  4193c9:	jecxz  0x4193d7
  4193cb:	or     eax,0x390e5b5e
  4193d0:	xchg   ecx,eax
  4193d1:	shr    BYTE PTR [eax-0x5a],1
  4193d4:	test   DWORD PTR [edi+0x15043f01],esi
  4193da:	sti    
  4193db:	jno    0x41943e
  4193dd:	out    0x0,eax
  4193df:	iret   
  4193e0:	xchg   ecx,eax
  4193e1:	jle    0x419413
  4193e3:	pop    ds
  4193e4:	push   DWORD PTR [ebp+0x6c]
  4193e7:	push   ecx
  4193e8:	cmp    DWORD PTR [esi+0x4a97ab07],ebp
  4193ee:	mov    dl,0x80
  4193f0:	retf   
  4193f1:	test   dl,cl
  4193f3:	pusha  
  4193f4:	out    dx,eax
  4193f5:	call   0x75507001
  4193fa:	xor    al,0xe
  4193fc:	fimul  WORD PTR fs:[esi]
  4193ff:	fmul   DWORD PTR [ebx]
  419401:	retf   0xc9e9
  419404:	stos   DWORD PTR es:[edi],eax
  419405:	mov    dh,BYTE PTR [esi-0xf]
  419408:	sbb    DWORD PTR [ecx],ebx
  41940a:	rol    DWORD PTR [ebp-0x51],0xe0
  41940e:	or     esp,DWORD PTR [edx+0x5a]
  419411:	div    BYTE PTR [ebx+ebp*1+0x32]
  419415:	shr    DWORD PTR ds:0xfe2ad932,0x48
  41941c:	mov    cl,0x82
  41941e:	loopne 0x4193c6
  419420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419421:	shl    DWORD PTR [ebx-0x15],0x8c
  419425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419426:	xor    DWORD PTR [eax+edi*1],edi
  419429:	mov    bh,0xf2
  41942b:	rcl    BYTE PTR [ecx-0x808c34a],1
  419431:	xlat   BYTE PTR ds:[ebx]
  419432:	cmp    edx,DWORD PTR [edi+eiz*1]
  419435:	jo     0x419463
  419437:	stos   BYTE PTR es:[edi],al
  419438:	ja     0x419464
  41943a:	repnz pop es
  41943c:	adc    ebp,DWORD PTR [edx-0x1bec3b03]
  419442:	pop    cx
  419444:	popa   
  419445:	inc    eax
  419446:	jmp    0xb3ba:0xba1ce0e4
  41944d:	shl    DWORD PTR [edx+ecx*1+0x51],0x66
  419452:	pop    es
  419453:	mov    ch,0x5c
  419456:	jns    0x4194aa
  419458:	add    al,0xed
  41945a:	xor    al,0xc5
  41945c:	add    ah,BYTE PTR [ebx]
  41945e:	cmp    al,0x6c
  419460:	add    BYTE PTR [edx-0x49],dh
  419463:	imul   ebx,DWORD PTR [ebx-0x2f3fe08f],0x49b60087
  41946d:	clc    
  41946e:	imul   ebx,edx,0x8021a1e5
  419474:	lahf   
  419475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419476:	cli    
  419477:	mov    dl,al
  419479:	push   ds
  41947a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41947b:	rcr    DWORD PTR [ecx-0x7a],cl
  41947e:	sub    eax,0x71e5da6e
  419483:	sahf   
  419484:	pop    ss
  419485:	retf   0xe33c
  419488:	(bad)  
  419489:	inc    edx
  41948a:	scas   al,BYTE PTR es:[edi]
  41948b:	(bad)  
  41948c:	mov    bh,0xfa
  41948e:	pop    esp
  41948f:	jp     0x4194b0
  419491:	ins    DWORD PTR es:[edi],dx
  419492:	into   
  419493:	inc    ebp
  419494:	mov    ds:0xdc3b6c3c,eax
  419499:	xchg   bl,cl
  41949b:	add    DWORD PTR [esi-0x5d],edi
  41949e:	inc    ebp
  41949f:	add    al,0x17
  4194a1:	jb     0x419447
  4194a3:	xlat   BYTE PTR ds:[ebx]
  4194a4:	aaa    
  4194a5:	or     DWORD PTR [ecx-0x78cce7b0],esp
  4194ab:	mov    ds:0x4c3ef2d5,al
  4194b0:	inc    edi
  4194b1:	xchg   esp,eax
  4194b2:	jmp    0x7986:0x4b750cc
  4194b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ba:	cwde   
  4194bb:	sub    eax,0x3b941156
  4194c0:	xchg   BYTE PTR [esi+0x5a],bl
  4194c3:	(bad)  
  4194c4:	xchg   ebx,eax
  4194c5:	std    
  4194c6:	fsub   DWORD PTR [edi+ebx*1+0x19]
  4194ca:	jbe    0x419529
  4194cc:	leave  
  4194cd:	sub    esp,0xf8b31fa5
  4194d3:	mov    ecx,0x331b6cf9
  4194d8:	adc    BYTE PTR ds:0x785a6a05,ch
  4194de:	mov    dh,0xc2
  4194e0:	rep outs dx,BYTE PTR ds:[esi]
  4194e2:	jge    0x4194d1
  4194e4:	(bad)  
  4194e5:	lock xchg esp,eax
  4194e7:	out    0x3e,eax
  4194e9:	push   esi
  4194ea:	adc    eax,0xf220c128
  4194ef:	mov    fs,ebp
  4194f1:	push   ds
  4194f2:	mov    eax,esi
  4194f4:	(bad)  
  4194f5:	imul   eax,DWORD PTR [edx],0xcf99599e
  4194fb:	fdiv   DWORD PTR [edi-0x26]
  4194fe:	mov    dl,0xc1
  419500:	xor    DWORD PTR [ebp-0x2a2225bc],edi
  419506:	mov    eax,0x76fd07e4
  41950b:	push   eax
  41950c:	ins    DWORD PTR es:[edi],dx
  41950d:	adc    ah,cl
  41950f:	pop    edi
  419510:	bound  esi,QWORD PTR [eax]
  419512:	pop    es
  419513:	dec    esi
  419514:	jns    0x419504
  419516:	dec    edx
  419517:	push   ds
  419518:	push   DWORD PTR [ecx]
  41951a:	mov    cl,BYTE PTR [eax+0x410336e7]
  419520:	loop   0x419501
  419522:	adc    DWORD PTR [ecx],edx
  419524:	test   eax,0xc7c9f18d
  419529:	retf   
  41952a:	xchg   ebx,eax
  41952b:	and    edi,DWORD PTR [ecx+0x31]
  41952e:	pop    ds
  41952f:	imul   ebx,DWORD PTR [ebx],0xa737a2e8
  419535:	test   ecx,ecx
  419537:	xchg   esp,eax
  419538:	sub    BYTE PTR [ebx+0x69],0xd6
  41953c:	scas   al,BYTE PTR es:[edi]
  41953d:	pop    esp
  41953e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41953f:	test   BYTE PTR [ecx*1-0x3b24572f],bl
  419546:	imul   esp,DWORD PTR [edx],0xf1f1c1d5
  41954c:	loop   0x4194e8
  41954e:	jge    0x41953d
  419550:	mul    DWORD PTR [esi-0x3f]
  419553:	and    ebx,ebp
  419555:	inc    edx
  419556:	adc    DWORD PTR [eax+0x25088210],ebp
  41955c:	std    
  41955d:	inc    edx
  41955e:	fwait
  41955f:	jne    0x41952b
  419561:	adc    al,0x9e
  419563:	pop    edi
  419564:	jge    0x4194f0
  419566:	or     ah,BYTE PTR ds:0x40d22ff5
  41956c:	mov    DWORD PTR [ebx-0x6ab9b3c8],eax
  419572:	or     ah,BYTE PTR [ebx]
  419574:	test   eax,0x57c29eb
  419579:	and    eax,0x78dea5e9
  41957e:	das    
  41957f:	mov    edx,0x90036e4e
  419584:	jno    0x41958d
  419586:	jb     0x419548
  419588:	dec    edi
  419589:	adc    DWORD PTR [eax-0x1f793ec4],esi
  41958f:	(bad)  
  419590:	ins    BYTE PTR es:[edi],dx
  419591:	out    0x6a,al
  419593:	in     eax,0x6c
  419595:	retf   0x4a08
  419598:	imul   esp,ebx,0xffffffac
  41959b:	stos   BYTE PTR es:[edi],al
  41959c:	int    0x58
  41959e:	popa   
  41959f:	push   es
  4195a0:	pop    edi
  4195a1:	jle    0x41954e
  4195a3:	and    eax,0x7c5651e
  4195a8:	xor    ebp,DWORD PTR [edx]
  4195aa:	adc    edi,DWORD PTR [esp+eax*1-0x2b]
  4195ae:	lahf   
  4195af:	mov    ds:0xcb971bee,eax
  4195b4:	or     BYTE PTR [edx+ecx*1],ch
  4195b7:	mov    ebx,0x8f7ed0dd
  4195bc:	fndisi(8087 only) 
  4195be:	pop    DWORD PTR [esi]
  4195c0:	fwait
  4195c1:	ret    
  4195c2:	jg     0x41963e
  4195c4:	into   
  4195c5:	xor    eax,0xad8e226
  4195ca:	enter  0x790a,0x91
  4195ce:	pusha  
  4195cf:	test   al,0x3e
  4195d1:	add    eax,0x178ab531
  4195d6:	xchg   esi,eax
  4195d7:	jb     0x4195f1
  4195d9:	in     eax,0x90
  4195db:	dec    esp
  4195dc:	inc    edx
  4195dd:	shl    DWORD PTR [eax-0xe659aa0],0x5
  4195e4:	inc    edi
  4195e5:	jmp    0x55f1e54f
  4195ea:	ins    DWORD PTR es:[edi],dx
  4195eb:	dec    ebp
  4195ec:	or     eax,0xe5b914df
  4195f1:	add    edx,DWORD PTR [esi]
  4195f3:	push   esp
  4195f4:	frstor [edx-0x4b56517]
  4195fa:	push   cs
  4195fb:	inc    edx
  4195fc:	fst    DWORD PTR [eax+0xb89f8ba]
  419602:	sbb    al,0x99
  419605:	gs enter 0x3ca8,0xfb
  41960a:	jmp    0x150149d1
  41960f:	shl    BYTE PTR [esi+0x662d6cd8],0x7f
  419616:	cmp    edi,edi
  419618:	call   0x6d47c61
  41961d:	retf   
  41961e:	(bad)  
  41961f:	aam    0xc8
  419621:	jecxz  0x4195f6
  419623:	push   ds
  419624:	add    edx,DWORD PTR ds:0x1dd46a43
  41962a:	cld    
  41962b:	(bad)  
  41962c:	(bad)  
  41962d:	xlat   BYTE PTR ds:[ebx]
  41962e:	cmc    
  41962f:	cmp    esp,ebx
  419631:	and    BYTE PTR fs:[eax+0x4d9113c7],al
  419638:	loopne 0x419622
  41963a:	pop    ecx
  41963b:	test   DWORD PTR ds:0x9476f4b2,ecx
  419641:	nop
  419642:	imul   ebp,DWORD PTR [ecx],0xffffffb4
  419645:	jo     0x419671
  419647:	add    eax,0xd442ff42
  41964c:	(bad)  
  41964d:	rcl    cl,0x52
  419650:	cdq    
  419651:	mov    ebp,0x44e01525
  419656:	fldpi  
  419658:	xchg   ebx,eax
  419659:	cmp    bl,BYTE PTR [ecx+ebx*2]
  41965c:	and    eax,0xa4ca2f18
  419661:	mov    eax,ds:0x21b92c37
  419666:	hlt    
  419667:	cmp    al,0xbc
  419669:	adc    DWORD PTR [ebx],0x72
  41966c:	in     al,0xb0
  41966e:	out    0x9f,eax
  419670:	inc    BYTE PTR [edx]
  419672:	sar    DWORD PTR [ebx+0x4c],1
  419675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419676:	repnz fwait
  419678:	mov    eax,ds:0x2e16c594
  41967d:	jle    0x4196b3
  41967f:	add    esi,ecx
  419681:	or     edx,DWORD PTR [ebp*2-0x26297de5]
  419688:	pop    edi
  419689:	fs mov ch,0x87
  41968c:	cli    
  41968d:	jle    0x419664
  41968f:	or     al,0xef
  419691:	out    0x2a,al
  419693:	push   cs
  419694:	sbb    bl,dl
  419696:	cmp    al,0x3a
  419698:	jno    0x4196c8
  41969a:	mov    cl,0x69
  41969c:	stos   DWORD PTR es:[edi],eax
  41969d:	lds    ebx,FWORD PTR [edx]
  41969f:	loope  0x41968d
  4196a1:	call   DWORD PTR [edx]
  4196a3:	jae    0x41966e
  4196a5:	adc    BYTE PTR [edi-0x4d5e8c96],cl
  4196ab:	push   ecx
  4196ac:	xlat   BYTE PTR ds:[ebx]
  4196ad:	mov    edi,DWORD PTR [ebp-0x40559340]
  4196b3:	leave  
  4196b4:	or     ecx,DWORD PTR [eax-0x3a]
  4196b7:	sub    DWORD PTR [ebx+eax*8+0x6050b1df],ebx
  4196be:	jne    0x41965a
  4196c0:	imul   ebp,edx,0xf23cd2cc
  4196c6:	aam    0x4e
  4196c8:	mov    ds:0xee81cc20,al
  4196cd:	sub    ebx,DWORD PTR [esp+eax*8+0x6b]
  4196d1:	mov    ebx,0xe4f4ee6f
  4196d6:	hlt    
  4196d7:	mov    edi,0x881a06d3
  4196dc:	push   esp
  4196dd:	dec    edx
  4196de:	adc    dl,BYTE PTR [edx-0x34cce538]
  4196e4:	call   0x68ab:0xd1938b1a
  4196eb:	fst    st(0)
  4196ed:	adc    eax,0x6510ee85
  4196f2:	push   0x4bde7626
  4196f7:	rcr    BYTE PTR [edx+0x17eaab50],cl
  4196fd:	test   DWORD PTR [edi+edi*2],ebp
  419700:	pop    ds
  419701:	mov    ecx,ss
  419703:	loopne 0x419761
  419705:	in     eax,dx
  419706:	dec    edi
  419707:	mov    cl,0xc4
  419709:	xchg   edi,eax
  41970a:	mov    edi,0x7b3bfc26
  41970f:	test   BYTE PTR gs:[ecx],bh
  419712:	mov    esi,0xb46e0a4d
  419717:	gs aad 0x75
  41971a:	fsub   QWORD PTR [edx+0x17]
  41971d:	(bad)  
  41971e:	rsqrtps xmm3,XMMWORD PTR [edx+eax*4+0xe]
  419723:	(bad)  
  419724:	fmulp  st(0),st
  419726:	xor    esp,DWORD PTR [ebp+0x6a6dde41]
  41972c:	sar    BYTE PTR [esi-0x66],cl
  41972f:	enter  0xbef2,0xd6
  419733:	push   0x94174194
  419738:	dec    edi
  419739:	stc    
  41973a:	fcomp  QWORD PTR [ebp-0x6e]
  41973d:	popa   
  41973e:	ins    DWORD PTR es:[edi],dx
  41973f:	imul   ebx,eax,0xc03be4f6
  419745:	dec    edi
  419746:	ret    0x791a
  419749:	lea    esi,[edi-0x20]
  41974c:	inc    edx
  41974d:	inc    ecx
  41974e:	stc    
  41974f:	retf   0x9351
  419752:	js     0x419795
  419754:	dec    eax
  419755:	and    al,BYTE PTR [edi]
  419757:	popa   
  419758:	push   0x20b7f55e
  41975d:	jmp    0xc891:0x8a9bc8eb
  419764:	out    0x6e,al
  419766:	fmul   st,st(0)
  419768:	fdiv   QWORD PTR [eax+0x7f]
  41976b:	pop    esp
  41976c:	ret    0x13cf
  41976f:	and    eax,DWORD PTR [ecx+0x69]
  419772:	dec    esi
  419773:	dec    ecx
  419774:	mul    DWORD PTR [esi-0x181b1ef1]
  41977a:	ficomp DWORD PTR [ecx+0x79]
  41977d:	xchg   bh,al
  41977f:	xchg   BYTE PTR [ecx],ah
  419781:	(bad)  
  419783:	jle    0x4197ad
  419785:	sbb    bh,BYTE PTR [edi+0x50b7e8fd]
  41978b:	pop    esi
  41978c:	jp     0x419733
  41978e:	shl    BYTE PTR [esi+eax*8-0x4355c39e],1
  419795:	cli    
  419796:	inc    ebx
  419797:	push   ebp
  419798:	out    dx,eax
  419799:	cdq    
  41979a:	and    al,0x12
  41979c:	push   esp
  41979d:	jmp    0x889f80b5
  4197a2:	add    al,0x6e
  4197a4:	fisttp DWORD PTR [eax-0x592a3f90]
  4197aa:	out    0xc3,al
  4197ac:	cmp    BYTE PTR [edi+0x608cbc55],dh
  4197b2:	jnp    0x4197c3
  4197b4:	inc    ebx
  4197b5:	inc    ebx
  4197b6:	and    BYTE PTR [edi],dl
  4197b8:	pop    ebp
  4197b9:	push   esp
  4197ba:	stc    
  4197bb:	dec    ebp
  4197bc:	sbb    al,0xb8
  4197be:	pushf  
  4197bf:	mov    ss,WORD PTR [ecx+0x6f]
  4197c2:	pop    ss
  4197c3:	push   esi
  4197c4:	leave  
  4197c5:	outs   dx,BYTE PTR ds:[esi]
  4197c6:	sbb    eax,0xa28c9319
  4197cb:	(bad)  
  4197cc:	xor    ecx,DWORD PTR [esi+edi*4]
  4197cf:	or     al,0xf6
  4197d1:	into   
  4197d2:	xchg   esi,eax
  4197d3:	jmp    0x419843
  4197d5:	mov    ecx,0x48507ec7
  4197da:	push   ecx
  4197db:	jecxz  0x419793
  4197dd:	pop    edi
  4197de:	sub    esp,DWORD PTR [ecx-0x72cad6c5]
  4197e4:	pop    edi
  4197e5:	mov    BYTE PTR [ebx+0x70d5f5c6],bh
  4197eb:	ja     0x4197bb
  4197ed:	xchg   esp,eax
  4197ee:	jne    0x4197bb
  4197f0:	xchg   ecx,eax
  4197f1:	lds    ecx,FWORD PTR [esi]
  4197f3:	scas   al,BYTE PTR es:[edi]
  4197f4:	pop    esp
  4197f5:	int3   
  4197f6:	or     DWORD PTR [esi+ebx*1+0x38],esi
  4197fa:	pop    es
  4197fb:	gs mov ch,0xf9
  4197fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ff:	jmp    0x4197b9
  419801:	hlt    
  419802:	js     0x41985c
  419804:	aas    
  419805:	xchg   DWORD PTR [ebx],esp
  419807:	xlat   BYTE PTR ds:[ebx]
  419808:	fwait
  419809:	shl    DWORD PTR [edi-0x54],0xf
  41980d:	sub    bl,ch
  41980f:	sub    al,0x78
  419811:	dec    edi
  419812:	and    DWORD PTR [edi-0x63],0xae23f8ac
  419819:	and    BYTE PTR [edi],0xe5
  41981c:	jg     0x41984f
  41981e:	loop   0x41989c
  419820:	mov    ch,ch
  419822:	adc    BYTE PTR [ebx],al
  419824:	mov    ecx,ecx
  419826:	neg    DWORD PTR [ebx]
  419828:	cmp    BYTE PTR [edi+edi*4+0x57],ah
  41982c:	push   edi
  41982d:	pop    ds
  41982e:	call   FWORD PTR [ebx+esi*2+0x4dcf91e9]
  419835:	pop    eax
  419836:	mov    eax,ds:0xab04923d
  41983b:	xchg   esi,eax
  41983c:	sbb    bh,BYTE PTR [eax-0x1c]
  41983f:	pushf  
  419840:	xor    ch,BYTE PTR [eax+0x3b]
  419843:	push   esi
  419844:	xchg   esp,eax
  419845:	mov    dh,0x7f
  419847:	ret    
  419848:	(bad)  
  419849:	sbb    al,BYTE PTR [esi]
  41984b:	in     eax,0x1e
  41984d:	add    ebp,DWORD PTR [ebp+0x1b]
  419850:	jb     0x419809
  419852:	xor    dl,BYTE PTR [ebp-0x18a34db7]
  419858:	xchg   esp,eax
  419859:	sbb    DWORD PTR [edi],esp
  41985b:	pop    ds
  41985c:	jge    0x4198a8
  41985e:	lds    ecx,FWORD PTR [ebp-0x44]
  419861:	jl     0x419878
  419863:	inc    ebx
  419864:	repz cmp DWORD PTR cs:[eax-0x7e],edi
  419869:	pop    esp
  41986a:	inc    esp
  41986b:	addr16 push edi
  41986e:	sbb    eax,0xe3845d28
  419873:	mov    esp,0x1b07e47c
  419878:	mov    ecx,0xd2527ee1
  41987d:	dec    eax
  41987e:	sbb    BYTE PTR [edi+0x15],al
  419881:	jae    0x4198d2
  419883:	cmp    eax,0x2431b2a2
  419888:	inc    eax
  419889:	jmp    0x712e3ebf
  41988e:	push   cs
  41988f:	cmp    al,BYTE PTR [eax-0x308a54a2]
  419895:	loopne 0x419827
  419897:	or     al,0x38
  419899:	and    DWORD PTR [ecx+0x7003ddb0],esi
  41989f:	xchg   edi,eax
  4198a0:	pop    ecx
  4198a1:	rcr    BYTE PTR [edx+edi*2-0x5b],1
  4198a5:	lods   al,BYTE PTR ds:[esi]
  4198a6:	push   ss
  4198a7:	fisttp WORD PTR [esi+edx*2]
  4198aa:	and    dh,0xc3
  4198ad:	push   esi
  4198ae:	repz xor al,0x59
  4198b1:	pop    edx
  4198b2:	dec    esp
  4198b3:	pop    ss
  4198b4:	fstp   TBYTE PTR [ecx-0x30]
  4198b7:	pop    ss
  4198b8:	push   cs
  4198b9:	sub    al,0x9
  4198bb:	imul   edi,DWORD PTR [edx-0x6c],0xef871d9a
  4198c2:	in     eax,0xa8
  4198c4:	sti    
  4198c5:	arpl   WORD PTR ds:0x46dd63aa,sp
  4198cb:	lock push esp
  4198cd:	dec    ebp
  4198ce:	in     eax,dx
  4198cf:	xchg   esp,eax
  4198d0:	mov    ebx,0xe9a7d105
  4198d5:	pop    esp
  4198d6:	cs call 0xccb916e1
  4198dc:	pop    es
  4198dd:	bound  ebx,QWORD PTR [esi-0x40]
  4198e0:	std    
  4198e1:	and    eax,0xde0c2004
  4198e6:	inc    ebx
  4198e7:	idiv   BYTE PTR [esp+esi*2-0x13]
  4198eb:	popa   
  4198ec:	jno    0x4198b8
  4198ee:	shr    esi,1
  4198f0:	push   0x27c4b73c
  4198f5:	jno    0x419881
  4198f7:	out    dx,al
  4198f8:	into   
  4198f9:	cmp    DWORD PTR [ebx],esi
  4198fb:	mov    dl,0xbc
  4198fd:	mov    ebp,0x96e80025
  419902:	push   eax
  419903:	mov    dh,0xa8
  419905:	sbb    BYTE PTR [ebp+0x16],0x27
  419909:	xchg   esi,eax
  41990a:	jmp    0x4198e0
  41990c:	lea    edi,ds:0x8d1d7a9a
  419912:	ss push 0x35
  419915:	xor    ebp,ebp
  419917:	push   ebp
  419918:	(bad)  
  419919:	mov    ds:0xd8a0f898,al
  41991e:	(bad)  
  41991f:	mov    esp,0xbcbfc21a
  419924:	lahf   
  419925:	or     esi,DWORD PTR [eax]
  419927:	or     eax,0x74d3ce73
  41992c:	jae    0x4198b6
  41992e:	dec    esp
  41992f:	in     al,dx
  419930:	(bad)  
  419931:	sub    BYTE PTR [ebp-0x6f],ch
  419934:	cmp    DWORD PTR [edi+0xa4cc1d6],edx
  41993a:	mov    edi,0xc71b3238
  41993f:	mov    dl,0xbc
  419941:	mov    al,fs:0x12acaa7d
  419947:	mov    ds:0x45f7ac98,eax
  41994c:	jno    0x419964
  41994e:	not    BYTE PTR [edx-0x11ae21cf]
  419954:	mov    ebp,0xd5d5ed1f
  419959:	shl    DWORD PTR [edi],1
  41995b:	inc    edi
  41995c:	push   ds
  41995d:	cmp    dh,bl
  41995f:	pop    ecx
  419960:	je     0x4199cb
  419962:	fisttp DWORD PTR [esi+0x16]
  419965:	jl     0x419934
  419967:	and    eax,0x7c04ac3f
  41996c:	enter  0x3587,0xb0
  419970:	cs mov edi,0x3a38e6e5
  419976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419977:	cmc    
  419978:	pop    ss
  419979:	hlt    
  41997a:	xchg   edi,eax
  41997b:	aaa    
  41997c:	push   ebp
  41997d:	adc    BYTE PTR [edi+0x38990510],0xfa
  419984:	jae    0x41990a
  419986:	clc    
  419987:	es rcl dh,cl
  41998a:	dec    ebx
  41998b:	test   DWORD PTR [edi+0x1],esi
  41998e:	leave  
  41998f:	retf   0xdd37
  419992:	pop    ecx
  419993:	push   edx
  419994:	add    esi,DWORD PTR [edi]
  419996:	push   0xd
  419998:	cmp    DWORD PTR [eax+0xbb64b55],esp
  41999e:	push   0x6
  4199a0:	int3   
  4199a1:	rcr    edx,1
  4199a3:	push   ss
  4199a4:	mov    cl,0x3e
  4199a6:	cli    
  4199a7:	sub    al,dh
  4199a9:	sub    DWORD PTR [ebx+ebp*4+0x33],edi
  4199ad:	jne    0x4199fb
  4199af:	lods   al,BYTE PTR ds:[esi]
  4199b0:	sub    BYTE PTR [edi],bl
  4199b2:	inc    edx
  4199b3:	push   edi
  4199b4:	jmp    0x34ed:0xbf7ed1f9
  4199bb:	cmp    edi,DWORD PTR [esi+ecx*1+0x7e900b75]
  4199c2:	mov    esi,DWORD PTR [ecx]
  4199c4:	or     dl,BYTE PTR es:[ebp+0x4d]
  4199c8:	fdivrp st(3),st
  4199ca:	(bad)
  4199ce:	sbb    eax,0x3b7ac335
  4199d3:	shl    DWORD PTR [ebp+0x2592352],1
  4199d9:	xchg   edx,eax
  4199da:	add    ah,BYTE PTR [ecx-0x9]
  4199dd:	dec    esp
  4199de:	push   ebx
  4199df:	push   esp
  4199e0:	test   DWORD PTR [ebx+ebp*1+0x69],ecx
  4199e4:	mov    ds:0xf3dad6f3,eax
  4199e9:	ret    0x8a64
  4199ec:	jmp    0x83129345
  4199f1:	push   0x42
  4199f3:	cmp    bl,BYTE PTR [esi]
  4199f5:	test   BYTE PTR [edi-0x2e],cl
  4199f8:	sbb    DWORD PTR [esi],esi
  4199fa:	mov    DWORD PTR [ecx-0x53],edi
  4199fd:	jmp    0x419a55
  4199ff:	lock cmp DWORD PTR [ebx+0x7f],ebp
  419a03:	add    eax,0x64e7e4a7
  419a08:	arpl   ax,sp
  419a0a:	gs pop ds
  419a0c:	add    DWORD PTR [ebp+0x11],0x28
  419a10:	mov    ebx,0x8a6f70a0
  419a15:	(bad)  [bp+di+0x7e]
  419a19:	rol    cl,cl
  419a1b:	jmp    0xc168:0x526438e
  419a22:	dec    esi
  419a23:	or     bh,BYTE PTR [esi-0x74206a44]
  419a29:	mov    bh,0xdb
  419a2b:	xor    DWORD PTR [ecx-0x54],esi
  419a2e:	adc    BYTE PTR ds:0xcd91eb1a,0x88
  419a35:	dec    ecx
  419a36:	test   al,0x1a
  419a38:	jecxz  0x419a15
  419a3a:	push   edi
  419a3b:	xchg   esp,eax
  419a3c:	sahf   
  419a3d:	pop    edi
  419a3e:	js     0x419a34
  419a40:	dec    ecx
  419a41:	test   ch,bl
  419a43:	add    edi,ebp
  419a45:	mov    ds:0x3a399c2,al
  419a4a:	outs   dx,DWORD PTR ds:[esi]
  419a4b:	mov    BYTE PTR [edi+esi*4],ah
  419a4e:	inc    esi
  419a4f:	or     ch,BYTE PTR [esi-0x67]
  419a52:	pop    ebp
  419a53:	test   DWORD PTR [esp+ebp*4+0x6],esp
  419a57:	sub    BYTE PTR [edx+0x1],ah
  419a5a:	mov    ds:0xe5703e86,eax
  419a5f:	jge    0x419aa7
  419a61:	cmp    eax,0xe468d05d
  419a66:	call   0x1a99922b
  419a6b:	into   
  419a6c:	adc    ch,dh
  419a6e:	push   es
  419a6f:	pop    ebp
  419a70:	cli    
  419a71:	xchg   ebx,eax
  419a72:	push   0xffffffd8
  419a74:	mov    ch,0x33
  419a76:	inc    esp
  419a77:	xor    DWORD PTR [edx],ebp
  419a79:	push   esp
  419a7a:	inc    edx
  419a7b:	jmp    0xe3bce800
  419a80:	dec    eax
  419a81:	ja     0x419a93
  419a83:	cdq    
  419a84:	jg     0x419a6f
  419a86:	pushf  
  419a87:	adc    BYTE PTR [ebx+0xa],dl
  419a8a:	push   ebx
  419a8b:	push   es
  419a8c:	stos   BYTE PTR es:[edi],al
  419a8d:	dec    edx
  419a8e:	adc    DWORD PTR [eax-0x6c],0xcf36016d
  419a95:	addr16 in al,dx
  419a97:	aam    0x90
  419a99:	inc    BYTE PTR [esi-0x365c7a1f]
  419a9f:	test   cl,bh
  419aa1:	jbe    0x419a87
  419aa3:	fsubr  DWORD PTR [esi-0xd]
  419aa6:	rcl    BYTE PTR [eax],0x4a
  419aa9:	or     al,0x20
  419aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aac:	jge    0x419a2e
  419aae:	add    BYTE PTR [edx+0x875d9f7],0xe
  419ab5:	push   eax
  419ab6:	js     0x419af7
  419ab8:	lahf   
  419ab9:	in     eax,0x1a
  419abb:	dec    ebx
  419abc:	inc    ecx
  419abd:	cmp    DWORD PTR [ecx+0x3242259b],esi
  419ac3:	xor    bh,BYTE PTR [ecx+ebp*4]
  419ac6:	call   0x69a1033a
  419acb:	pusha  
  419acc:	and    BYTE PTR [ebp+eax*4+0x79],bl
  419ad0:	jae    0x419a56
  419ad2:	inc    DWORD PTR [edx-0x44]
  419ad5:	div    DWORD PTR [eax+0x76]
  419ad8:	mov    ds:0x3cc875fa,eax
  419add:	xor    al,0x22
  419adf:	cmp    DWORD PTR [ebx-0x63],0xd01069da
  419ae6:	in     eax,0x1f
  419ae8:	mov    ecx,0xed6da04d
  419aed:	cmp    DWORD PTR [eax-0x3b],esi
  419af0:	cdq    
  419af1:	mov    ebx,0x8aad1e01
  419af6:	add    eax,0xea8bbb57
  419afb:	or     ebx,DWORD PTR [ebx+ecx*4-0x54]
  419aff:	pusha  
  419b00:	jmp    0x419a96
  419b02:	jg     0x419a99
  419b04:	or     eax,0x26ed506b
  419b09:	dec    esp
  419b0a:	aaa    
  419b0b:	jne    0x419aff
  419b0d:	out    0x71,eax
  419b0f:	leave  
  419b10:	sub    al,0xd0
  419b12:	test   eax,0xc917c164
  419b17:	xchg   ebx,eax
  419b18:	sub    DWORD PTR [ecx+0x4d865a39],edx
  419b1e:	mov    sp,bp
  419b21:	cmp    cl,BYTE PTR [edi+0x3ace0508]
  419b27:	cmp    eax,0x76d2b147
  419b2c:	jmp    0x419b60
  419b2e:	stos   DWORD PTR es:[edi],eax
  419b2f:	ja     0x419ad9
  419b31:	jo     0x419b96
  419b33:	dec    ebp
  419b34:	stos   BYTE PTR es:[edi],al
  419b35:	inc    BYTE PTR [ecx]
  419b37:	jne    0x419af7
  419b39:	or     al,0xf1
  419b3b:	xchg   ebp,eax
  419b3c:	in     al,0xba
  419b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b3f:	outs   dx,BYTE PTR ds:[esi]
  419b40:	call   0x30ad0e0e
  419b45:	fld    DWORD PTR [ecx]
  419b47:	pop    ecx
  419b48:	popa   
  419b49:	pop    es
  419b4a:	or     ch,BYTE PTR [edx-0x10da8e11]
  419b50:	or     eax,0xc726445b
  419b55:	jnp    0x419b8b
  419b57:	mov    eax,ds:0xd2f4e589
  419b5c:	sub    eax,0xc0fe0bdb
  419b61:	gs (bad) 
  419b63:	neg    BYTE PTR [ebx]
  419b65:	retf   0x1eaa
  419b68:	shl    DWORD PTR [esi+0x7ace7a3],1
  419b6e:	pop    ds
  419b6f:	ret    
  419b70:	fldcw  WORD PTR [ebx]
  419b72:	xor    al,0xd7
  419b74:	cli    
  419b75:	cmc    
  419b76:	xor    eax,0xb50178ff
  419b7b:	test   al,0x4d
  419b7d:	or     BYTE PTR [ebx-0x23],0xe1
  419b81:	mov    BYTE PTR [esi-0x116d59df],bl
  419b87:	adc    eax,0x6656374f
  419b8c:	push   cs
  419b8d:	mov    dl,0xf8
  419b8f:	pop    edi
  419b90:	out    dx,eax
  419b91:	shl    BYTE PTR [edx],1
  419b93:	fwait
  419b94:	in     al,0xe1
  419b96:	stos   DWORD PTR es:[edi],eax
  419b97:	ins    BYTE PTR es:[edi],dx
  419b98:	nop
  419b99:	cmp    dh,BYTE PTR [edi]
  419b9b:	xor    DWORD PTR [ebp-0x7748ef23],ebp
  419ba1:	cmp    al,0x5d
  419ba3:	or     al,0xc4
  419ba5:	jbe    0x419b30
  419ba7:	lods   eax,DWORD PTR ds:[esi]
  419ba8:	push   cs
  419ba9:	outs   dx,DWORD PTR ds:[esi]
  419baa:	loope  0x419ba2
  419bac:	mov    eax,0xd3d0df4f
  419bb1:	jae    0x419bc9
  419bb3:	mov    dh,0x8
  419bb5:	repz clc 
  419bb7:	sub    al,0x86
  419bb9:	shl    BYTE PTR [ebp+0x7b1488b1],0xa6
  419bc0:	sub    eax,DWORD PTR [esi]
  419bc2:	rol    BYTE PTR [edx],0x61
  419bc5:	neg    BYTE PTR [eax-0xbdae201]
  419bcb:	adc    al,0x2d
  419bcd:	inc    ebp
  419bce:	jge    0x419b8b
  419bd0:	inc    edx
  419bd1:	cmp    cl,dl
  419bd3:	sbb    al,0xfa
  419bd5:	retf   0xe3cb
  419bd8:	ror    ecx,0x10
  419bdb:	cwde   
  419bdc:	hlt    
  419bdd:	int    0x36
  419bdf:	adc    bl,BYTE PTR [eax]
  419be1:	push   0x63
  419be3:	or     DWORD PTR [eax-0x5a],0x84099260
  419bea:	int    0x13
  419bec:	mov    al,ds:0x661d44a0
  419bf1:	sbb    ebx,edx
  419bf3:	sub    bl,ah
  419bf5:	aam    0x95
  419bf7:	sub    BYTE PTR [edx],ah
  419bf9:	xchg   BYTE PTR [ecx-0xe],al
  419bfc:	cli    
  419bfd:	inc    esp
  419bfe:	mov    ds:0xfe403f19,eax
  419c03:	hlt    
  419c04:	mov    dh,0xb4
  419c06:	fcomip st,st(7)
  419c08:	pop    ebx
  419c09:	cmp    al,0x59
  419c0b:	iret   
  419c0c:	call   0x92499fa7
  419c11:	fdivr  DWORD PTR [ecx-0x539e1cdc]
  419c17:	dec    esi
  419c18:	xor    al,0xa
  419c1a:	jecxz  0x419bab
  419c1c:	pop    ds
  419c1d:	xchg   edi,eax
  419c1e:	push   0xffffff88
  419c20:	retf   0x5965
  419c23:	and    eax,0xb46ee675
  419c28:	loop   0x419c62
  419c2a:	pop    ds
  419c2b:	and    eax,0x58c41e18
  419c30:	out    dx,eax
  419c31:	pop    esi
  419c32:	or     BYTE PTR ds:0x114692f6,al
  419c38:	imul   BYTE PTR [edi]
  419c3a:	ins    BYTE PTR es:[edi],dx
  419c3b:	cmp    eax,0xab26621e
  419c40:	hlt    
  419c41:	je     0x419c6b
  419c43:	fs mov eax,0xdad07d5a
  419c49:	cmp    DWORD PTR ds:0xf125abff,edx
  419c4f:	add    eax,0x8650ab0
  419c54:	iret   
  419c55:	mov    al,ds:0x57981122
  419c5a:	jmp    0xcd47:0x6fe33c9b
  419c61:	lds    edx,FWORD PTR [ebx+0x23]
  419c64:	jle    0x419c70
  419c66:	or     DWORD PTR [eax],ebp
  419c68:	imul   ebx,DWORD PTR [edx-0x5a6ceeea],0xffffffd1
  419c6f:	push   esp
  419c70:	ins    BYTE PTR es:[edi],dx
  419c71:	sub    BYTE PTR [esi+ebp*1+0x7f],dh
  419c75:	jo     0x419c7c
  419c77:	cmp    ecx,DWORD PTR ds:0x7ebcdf57
  419c7d:	jecxz  0x419caa
  419c7f:	xor    dh,cl
  419c81:	ins    BYTE PTR es:[edi],dx
  419c82:	push   es
  419c83:	add    BYTE PTR [esi-0x59],cl
  419c86:	imul   DWORD PTR [ebx+0x64]
  419c89:	jnp    0x419ca6
  419c8b:	jl     0x419c18
  419c8d:	test   al,0x91
  419c8f:	xchg   edi,eax
  419c90:	xchg   edi,eax
  419c91:	in     al,0x3d
  419c93:	pushf  
  419c94:	mov    bh,0x23
  419c96:	rcl    DWORD PTR [ebx+eax*8],0xa3
  419c9a:	(bad)  
  419c9b:	adc    eax,0x3606a19c
  419ca0:	sbb    DWORD PTR [ebx],ecx
  419ca2:	mov    bh,0x4b
  419ca4:	fdiv   QWORD PTR [edx*8+0x14539d2d]
  419cab:	push   eax
  419cac:	rcr    DWORD PTR [esi+0x28],1
  419caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cb0:	and    DWORD PTR [eax+0x37],ebp
  419cb3:	mov    edx,0x3e997a9c
  419cb8:	mov    ah,0x5d
  419cba:	add    BYTE PTR ds:0xd4f7b6e8,dh
  419cc0:	or     ch,BYTE PTR [ebx]
  419cc2:	aam    0x3d
  419cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cc5:	cmc    
  419cc6:	push   esi
  419cc7:	pop    ds
  419cc8:	sti    
  419cc9:	test   DWORD PTR [esi-0x49],0xd07f9749
  419cd0:	pusha  
  419cd1:	mov    ebp,0xe5eef029
  419cd6:	sbb    DWORD PTR [eax-0x33],esi
  419cd9:	aas    
  419cda:	cmp    BYTE PTR ds:0xe5004e2e,dh
  419ce0:	sbb    ebp,DWORD PTR [edi-0x40]
  419ce3:	call   0xc6d2:0xec2ef58b
  419cea:	out    dx,eax
  419ceb:	xor    BYTE PTR [eax-0x1befca16],al
  419cf1:	push   ebp
  419cf2:	cmp    eax,0xce238adf
  419cf7:	pop    ebx
  419cf8:	test   al,0x61
  419cfa:	adc    dl,ah
  419cfc:	imul   ebx,DWORD PTR [ecx-0x1edc4913],0x351c2e53
  419d06:	inc    edi
  419d07:	pause  
  419d09:	cmp    DWORD PTR [eax+esi*2],esp
  419d0c:	sar    BYTE PTR [ecx+edi*1+0x30],1
  419d10:	outs   dx,BYTE PTR ds:[esi]
  419d11:	call   0x34ab:0x3a4946c6
  419d18:	scas   al,BYTE PTR es:[edi]
  419d19:	pop    es
  419d1a:	mov    ah,0x9a
  419d1c:	sub    BYTE PTR [esp+esi*1-0x6fbeedfe],al
  419d23:	test   DWORD PTR [edi-0x769477c4],esp
  419d29:	nop
  419d2a:	aam    0x7c
  419d2c:	int3   
  419d2d:	and    DWORD PTR [ebx],edi
  419d2f:	dec    edx
  419d30:	icebp  
  419d31:	jmp    0xcdbf:0x82111fd9
  419d38:	lea    ebx,[eax+0x6f]
  419d3b:	arpl   sp,dx
  419d3d:	leave  
  419d3e:	fdiv   QWORD PTR [ebx+ebx*1]
  419d41:	dec    esp
  419d42:	cmp    al,0x3e
  419d45:	xchg   ebp,eax
  419d46:	loopne 0x419d55
  419d48:	ins    DWORD PTR es:[edi],dx
  419d49:	dec    DWORD PTR [eax-0x5]
  419d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d4d:	adc    eax,0xbf467c3
  419d52:	pop    edi
  419d53:	jne    0x419d09
  419d55:	pop    eax
  419d56:	sbb    DWORD PTR [edi],0x3589a0df
  419d5c:	jae    0x419dc6
  419d5e:	cmc    
  419d5f:	jl     0x419d41
  419d61:	imul   esi,edi,0x1c
  419d64:	add    al,0x42
  419d66:	push   edi
  419d67:	fnstenv [ebp+0x12]
  419d6a:	or     al,0x24
  419d6c:	out    0xe3,al
  419d6e:	(bad)  
  419d6f:	fstp   st(4)
  419d71:	pop    es
  419d72:	jnp    0x419cfb
  419d74:	iret   
  419d75:	stos   BYTE PTR es:[edi],al
  419d76:	jp     0x419d0b
  419d78:	and    BYTE PTR [ecx],ch
  419d7a:	push   esi
  419d7b:	jmp    DWORD PTR [eax+eiz*4+0x7f]
  419d7f:	push   esi
  419d80:	mov    ecx,0xfc7535a8
  419d85:	int3   
  419d86:	cmp    dh,BYTE PTR [esi-0x118c9e98]
  419d8c:	xor    eax,0x8fd92d94
  419d91:	inc    ebx
  419d92:	cmp    esi,esp
  419d94:	inc    edx
  419d95:	cmc    
  419d96:	bound  ebp,QWORD PTR [ecx+0x2a491b84]
  419d9c:	dec    esi
  419d9d:	neg    DWORD PTR [ebx-0x38]
  419da0:	stos   BYTE PTR es:[edi],al
  419da1:	icebp  
  419da2:	ins    DWORD PTR es:[edi],dx
  419da3:	or     esp,esi
  419da5:	aad    0x52
  419da7:	jae    0x419d80
  419da9:	inc    edx
  419daa:	ret    
  419dab:	xchg   edi,eax
  419dac:	pusha  
  419dad:	pushf  
  419dae:	mov    edi,0x78e5b26d
  419db3:	pop    esp
  419db4:	cmp    eax,0xa294ca5c
  419db9:	ins    DWORD PTR es:[edi],dx
  419dba:	xchg   ebp,eax
  419dbb:	xchg   BYTE PTR [ebx-0x3877df71],bh
  419dc1:	sub    ebx,edx
  419dc3:	jle    0x419da0
  419dc5:	call   0x2cd1:0xadbb3606
  419dcc:	sti    
  419dcd:	ins    DWORD PTR es:[edi],dx
  419dce:	jnp    0x419de2
  419dd0:	sbb    BYTE PTR [ecx],0x51
  419dd3:	(bad)  
  419dd4:	rol    BYTE PTR [edx-0xe],0xa4
  419dd8:	inc    edi
  419dd9:	mov    bl,0x19
  419ddb:	std    
  419ddc:	test   DWORD PTR [edi+0x6d],0x592a5c7
  419de3:	inc    ebx
  419de4:	addr16 push esi
  419de6:	and    al,0xe9
  419de8:	add    BYTE PTR [eax-0x4e083550],0x98
  419def:	pop    ecx
  419df0:	inc    edx
  419df1:	out    0x89,al
  419df3:	in     eax,0xb8
  419df5:	pusha  
  419df6:	les    eax,FWORD PTR [edx]
  419df8:	call   0x8bac200e
  419dfd:	cmp    al,0xda
  419dff:	adc    ebp,DWORD PTR [edx-0x80]
  419e02:	xchg   ebp,eax
  419e03:	aaa    
  419e04:	jl     0x419e6c
  419e06:	xlat   BYTE PTR ds:[ebx]
  419e07:	pushf  
  419e08:	and    DWORD PTR [ecx+edi*4-0x4523889c],esp
  419e0f:	pop    eax
  419e10:	xor    al,0x88
  419e12:	int3   
  419e13:	mov    dh,0x41
  419e15:	inc    ecx
  419e16:	xchg   esi,eax
  419e18:	xchg   DWORD PTR [ecx],esp
  419e1a:	jmp    0x6308:0x26072026
  419e21:	dec    BYTE PTR [edx-0x19]
  419e24:	sbb    al,0x71
  419e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e27:	dec    ebx
  419e28:	mov    ebx,0x4e4c9648
  419e2d:	mov    ebx,0xb6f33529
  419e32:	or     eax,0x3eccae17
  419e37:	std    
  419e38:	push   es
  419e39:	ret    0x814f
  419e3c:	cmp    DWORD PTR [eax],0x78
  419e3f:	pop    ebx
  419e40:	pop    ds
  419e41:	jbe    0x419ea0
  419e43:	shl    BYTE PTR [edx+0x940d7d5],1
  419e49:	xchg   edi,eax
  419e4a:	push   ecx
  419e4b:	inc    edx
  419e4c:	and    cl,BYTE PTR [ecx+0x762d0656]
  419e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e53:	push   eax
  419e54:	mov    BYTE PTR [edi],bh
  419e56:	test   DWORD PTR [esi],esi
  419e58:	or     al,0x21
  419e5a:	bnd jns 0x419e4f
  419e5d:	cmp    dl,BYTE PTR [edi+ebx*2]
  419e60:	dec    esi
  419e61:	lds    ebx,FWORD PTR [ebx]
  419e63:	adc    al,0xdc
  419e65:	jmp    0x419ed7
  419e67:	sub    al,0x90
  419e69:	xor    DWORD PTR [ecx*8+0x4991ddfd],0x1aca7a43
  419e74:	dec    eax
  419e75:	in     eax,dx
  419e76:	paddsw mm3,QWORD PTR [edi]
  419e79:	mov    DWORD PTR [eax-0x9],edx
  419e7c:	mov    esi,0x4921ad54
  419e81:	push   0x11
  419e83:	lahf   
  419e84:	imul   ebp,DWORD PTR [ecx-0x12],0xd8b97d03
  419e8b:	or     DWORD PTR [ecx+0xc],ebp
  419e8e:	fwait
  419e8f:	scas   eax,DWORD PTR es:[edi]
  419e90:	retf   
  419e91:	and    BYTE PTR [edx-0x4f],al
  419e94:	addr16 test al,0x21
  419e97:	add    eax,edx
  419e99:	repz or ch,BYTE PTR [ebx+ebx*1]
  419e9d:	add    eax,0x24935379
  419ea2:	push   0xffffffae
  419ea4:	sub    bl,BYTE PTR [esi]
  419ea6:	and    al,0xd9
  419ea8:	jecxz  0x419eee
  419eaa:	retf   
  419eab:	pop    es
  419eac:	test   al,0x88
  419eae:	sub    ah,0x4d
  419eb1:	clc    
  419eb2:	into   
  419eb3:	sar    ah,cl
  419eb5:	inc    ebx
  419eb6:	pushf  
  419eb7:	inc    ebx
  419eb8:	test   DWORD PTR [eax-0x33],esi
  419ebb:	mov    ebx,0xa63a617f
  419ec0:	xor    DWORD PTR [ebp-0x1e4979d8],ebx
  419ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ec7:	int    0xf
  419ec9:	mov    ebp,DWORD PTR [ebx+0x54]
  419ecc:	add    DWORD PTR [esi+0x5],esi
  419ecf:	clc    
  419ed0:	sbb    BYTE PTR [edx+edi*1],al
  419ed3:	xchg   esp,eax
  419ed4:	push   ebp
  419ed5:	sbb    DWORD PTR [ebp+edx*8+0x55cda7c6],ebx
  419edc:	jge    0x419ea7
  419ede:	cmp    eax,ebp
  419ee0:	shr    eax,0xb6
  419ee3:	ret    0xe98a
  419ee6:	jbe    0x419e9f
  419ee8:	jne    0x419f2e
  419eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eeb:	or     al,0xc7
  419eed:	xor    BYTE PTR [esi],bl
  419eef:	addr16 dec edx
  419ef1:	mov    dh,0xba
  419ef3:	lock pop ds
  419ef5:	ins    DWORD PTR es:[edi],dx
  419ef6:	mov    esi,0x92db266e
  419efb:	retf   
  419efc:	lds    edx,FWORD PTR [ebp-0x33]
  419eff:	dec    edx
  419f00:	push   ecx
  419f01:	adc    ebx,DWORD PTR [eax+edi*2+0x40]
  419f05:	pop    edi
  419f06:	out    dx,eax
  419f07:	jle    0x419ee6
  419f09:	cwde   
  419f0a:	xchg   ebx,eax
  419f0b:	push   cs
  419f0c:	xchg   DWORD PTR [ebx],ebx
  419f0e:	or     bh,BYTE PTR [eax+0x1b403cdc]
  419f14:	mov    ah,BYTE PTR [edx+0x17]
  419f17:	retf   
  419f18:	or     dh,BYTE PTR [ebx-0x5b]
  419f1b:	add    bh,BYTE PTR [edx]
  419f1d:	jne    0x419f9d
  419f1f:	int3   
  419f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f21:	mov    cs,WORD PTR [ebx]
  419f23:	mov    eax,0xd0f346b8
  419f28:	mov    DWORD PTR [ebp+0x54],ecx
  419f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f2c:	cmp    edx,DWORD PTR [edx]
  419f2e:	inc    edx
  419f2f:	xchg   ebx,eax
  419f30:	and    eax,0xdf518202
  419f35:	sub    edx,ebx
  419f37:	jle    0x419ed9
  419f39:	stos   BYTE PTR es:[edi],al
  419f3a:	(bad)  
  419f3b:	test   al,0xb8
  419f3d:	in     eax,dx
  419f3e:	cld    
  419f3f:	inc    esp
  419f40:	or     eax,0xa178e5b4
  419f45:	or     eax,0x25e572
  419f4a:	or     bl,BYTE PTR [edx+edi*8-0x37]
  419f4e:	fcomp  QWORD PTR [ebx+0x5bdca406]
  419f54:	xor    al,0xdd
  419f56:	ret    0xed44
  419f59:	ficomp DWORD PTR [ebx+0x6ff8e13a]
  419f5f:	pop    esp
  419f60:	loop   0x419ee9
  419f62:	ins    BYTE PTR es:[edi],dx
  419f63:	mov    ebp,0xcc9001a2
  419f68:	sub    DWORD PTR [eax+0x6c],esi
  419f6b:	inc    ebp
  419f6c:	neg    BYTE PTR [esi+ebp*1]
  419f6f:	stc    
  419f70:	and    eax,0xc5c7961d
  419f75:	add    BYTE PTR [ebx],ah
  419f77:	dec    ebp
  419f78:	ret    0x6e42
  419f7b:	int3   
  419f7c:	scas   al,BYTE PTR es:[edi]
  419f7d:	je     0x419f2a
  419f7f:	cs inc eax
  419f81:	fist   DWORD PTR [ebp-0x126c756e]
  419f87:	scas   al,BYTE PTR es:[edi]
  419f88:	xchg   edi,eax
  419f89:	xchg   esp,eax
  419f8a:	popf   
  419f8b:	dec    edx
  419f8c:	jmp    0xeeae:0x401b6486
  419f93:	add    edi,esi
  419f95:	push   0x23
  419f97:	pop    ebp
  419f98:	in     al,dx
  419f99:	retf   
  419f9a:	(bad)  
  419f9b:	in     al,dx
  419f9c:	pop    eax
  419f9d:	xor    eax,0x556e0340
  419fa2:	push   ebp
  419fa3:	repnz lods al,BYTE PTR ds:[esi]
  419fa5:	sbb    BYTE PTR [edx+0x4db6391],ah
  419fab:	aas    
  419fac:	jecxz  0x419f37
  419fae:	popf   
  419faf:	aam    0xdb
  419fb1:	test   esi,0x6b1722a4
  419fb7:	mov    dl,0xb6
  419fb9:	iret   
  419fba:	leave  
  419fbb:	cmp    DWORD PTR [edi+0x7a],edx
  419fbe:	pusha  
  419fbf:	add    esi,DWORD PTR ss:0x7b5f4511
  419fc6:	jg     0x419f73
  419fc8:	mov    bl,BYTE PTR [esi]
  419fca:	in     al,0x49
  419fcc:	push   esi
  419fcd:	aad    0x8c
  419fcf:	mov    al,ds:0x4f345e44
  419fd4:	xor    al,0x8f
  419fd6:	pop    eax
  419fd7:	aaa    
  419fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fda:	push   ebp
  419fdb:	int    0x19
  419fdd:	push   ecx
  419fde:	adc    esp,DWORD PTR [esi]
  419fe0:	out    dx,al
  419fe1:	inc    edi
  419fe2:	and    eax,0x4c2242c4
  419fe7:	rol    DWORD PTR ds:0x84e85429,0x47
  419fee:	xchg   esp,eax
  419fef:	(bad)  
  419ff0:	mov    eax,ecx
  419ff2:	aas    
  419ff3:	xchg   ebx,eax
  419ff4:	xchg   ebp,eax
  419ff5:	ror    DWORD PTR [edx-0x21],1
  419ff8:	cmp    al,0xe9
  419ffa:	imul   eax,ebx,0xb687f32f
  41a000:	mov    eax,ds:0xd981f82c
  41a005:	xchg   edi,eax
  41a006:	dec    eax
  41a007:	jmp    0xcb96:0x71040d74
  41a00e:	jl     0x419fe9
  41a010:	pop    ds
  41a011:	xor    al,0x6a
  41a013:	and    bl,BYTE PTR [eax+eax*4-0x43]
  41a017:	ret    
  41a018:	data16 fdivrp st(5),st
  41a01b:	scas   eax,DWORD PTR es:[edi]
  41a01c:	retf   0x3cb4
  41a01f:	sbb    BYTE PTR [ecx-0x6f],0xbb
  41a023:	jmp    0xf78532e4
  41a028:	jg     0x41a041
  41a02a:	sub    al,0x2
  41a02c:	inc    esp
  41a02d:	outs   dx,BYTE PTR ds:[esi]
  41a02e:	test   BYTE PTR [edi+0x11],al
  41a031:	mov    eax,0xca54e3c9
  41a036:	fwait
  41a037:	arpl   WORD PTR [edi+0x29],sp
  41a03a:	dec    edi
  41a03b:	xchg   ecx,eax
  41a03c:	dec    esi
  41a03d:	iret   
  41a03e:	test   DWORD PTR [edi-0x47fb2f9],eax
  41a044:	leave  
  41a045:	and    eax,0x96439e30
  41a04a:	in     al,0xe9
  41a04c:	rol    bh,cl
  41a04e:	xchg   esp,eax
  41a04f:	shl    bl,0xe1
  41a052:	xor    al,BYTE PTR [ebx]
  41a054:	add    dh,BYTE PTR [ebx]
  41a056:	mov    ds:0x7663f6d,eax
  41a05b:	mov    dh,0x5
  41a05e:	or     edi,DWORD PTR [edx+0x5a]
  41a061:	mov    esp,0x137ab8ff
  41a066:	ror    BYTE PTR [edx+0x2f],cl
  41a069:	jo     0x41a02e
  41a06b:	xchg   ebx,eax
  41a06c:	push   es
  41a06d:	cmp    esi,DWORD PTR [ecx]
  41a06f:	xchg   esp,eax
  41a070:	(bad)  
  41a071:	mov    edx,0x9b5c1778
  41a076:	cmp    edi,0x4617d34f
  41a07c:	pop    ecx
  41a07d:	pop    ds
  41a07e:	aam    0xcd
  41a080:	cmp    eax,ebp
  41a082:	jo     0x41a058
  41a084:	xor    eax,0x6ed95cd3
  41a089:	pop    ebp
  41a08a:	icebp  
  41a08b:	cwde   
  41a08c:	(bad)  
  41a08d:	adc    esp,ebp
  41a08f:	pop    ds
  41a090:	sub    BYTE PTR es:[esi+0x2fffd445],dh
  41a097:	dec    esp
  41a098:	jns    0x41a0ed
  41a09a:	adc    dh,BYTE PTR [edx+edx*2+0x23e719f9]
  41a0a1:	inc    esp
  41a0a2:	sub    DWORD PTR [edi+0x64],eax
  41a0a5:	jp     0x41a0e5
  41a0a7:	sub    bl,bh
  41a0a9:	out    dx,eax
  41a0aa:	lods   eax,DWORD PTR ds:[esi]
  41a0ab:	sub    ebp,ebp
  41a0ad:	jp     0x41a084
  41a0af:	loope  0x41a06d
  41a0b1:	mov    al,0x3b
  41a0b3:	jbe    0x41a126
  41a0b5:	sar    BYTE PTR [esi+0x7e9371ee],0x4
  41a0bc:	fisubr WORD PTR [eax-0x78]
  41a0bf:	(bad)  
  41a0c0:	sub    al,0x9d
  41a0c2:	mov    eax,0xadab4dfe
  41a0c7:	inc    ebp
  41a0c8:	jecxz  0x41a0c2
  41a0ca:	les    esp,FWORD PTR [eax-0x79d8d8ff]
  41a0d0:	sti    
  41a0d1:	inc    esp
  41a0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0d3:	sbb    eax,0x7df7c2e3
  41a0d8:	jne    0x41a10f
  41a0da:	loope  0x41a0e3
  41a0dc:	and    BYTE PTR [ecx+0x23],bh
  41a0df:	jne    0x41a070
  41a0e1:	(bad)  
  41a0e2:	outs   dx,BYTE PTR ds:[esi]
  41a0e3:	mov    esi,0x51ab49fc
  41a0e8:	jnp    0x41a0c2
  41a0ea:	mov    ah,0xba
  41a0ec:	pop    ebp
  41a0ed:	mov    esi,0xc4407adf
  41a0f2:	xor    al,0x7b
  41a0f4:	retf   
  41a0f5:	neg    eax
  41a0f7:	mov    DWORD PTR [esi+0x25],edx
  41a0fa:	add    DWORD PTR [eax],0xb792c112
  41a100:	dec    edi
  41a101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a102:	std    
  41a103:	push   ebp
  41a104:	out    0x2b,al
  41a106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a107:	inc    esp
  41a108:	adc    DWORD PTR [ebx+esi*8-0x5f5c4bad],edx
  41a10f:	(bad)  
  41a110:	and    eax,0x11cead1a
  41a115:	pop    esi
  41a116:	in     eax,dx
  41a117:	stos   DWORD PTR es:[edi],eax
  41a118:	inc    ecx
  41a119:	outs   dx,BYTE PTR ds:[esi]
  41a11a:	cmp    eax,0xab201fda
  41a11f:	cs push ebx
  41a121:	jnp    0x41a0d6
  41a123:	jnp    0x41a16c
  41a125:	jbe    0x41a0b8
  41a127:	std    
  41a128:	or     al,BYTE PTR [ecx]
  41a12a:	call   0xe236d7b3
  41a12f:	mov    bh,0xfa
  41a131:	into   
  41a132:	sar    cl,cl
  41a134:	inc    ebx
  41a135:	mov    ch,0x1e
  41a137:	out    dx,al
  41a138:	mov    ecx,0xf3dd8415
  41a13d:	pop    edi
  41a13e:	leave  
  41a13f:	hlt    
  41a140:	inc    esp
  41a141:	push   esp
  41a142:	mov    ds:0xe77b34ef,eax
  41a147:	(bad)  
  41a148:	aam    0xa7
  41a14a:	push   0xffffffe1
  41a14c:	pop    esp
  41a14d:	dec    ebp
  41a14e:	jg     0x41a118
  41a150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a151:	loopne 0x41a0f6
  41a153:	xchg   esi,eax
  41a154:	das    
  41a155:	dec    ebx
  41a156:	mov    ebx,0xc26e0bb5
  41a15b:	cmp    BYTE PTR [eax-0x61],bh
  41a15e:	or     BYTE PTR [edx+0x3b],ch
  41a161:	cmp    BYTE PTR [ecx],dl
  41a163:	fldenv [eax-0x58]
  41a166:	add    esp,DWORD PTR [ebx]
  41a168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a169:	es pusha 
  41a16b:	push   es
  41a16c:	cmp    eax,0xbaeaf0a9
  41a171:	xor    bl,BYTE PTR [esi+0x53]
  41a174:	fnstenv [edx-0x71f34891]
  41a17a:	inc    esi
  41a17b:	jmp    0x63db:0x40109c9
  41a182:	cdq    
  41a183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a184:	test   DWORD PTR [edx+0x1],ebp
  41a187:	and    DWORD PTR [esi-0x2f],esi
  41a18a:	cmp    al,BYTE PTR [ecx+0x42]
  41a18d:	lock int3 
  41a18f:	xor    eax,0x8de28b8d
  41a194:	jae    0x41a1a5
  41a196:	adc    BYTE PTR [eax-0x66],dl
  41a199:	sbb    eax,0x44ff0d76
  41a19e:	jmp    0x3d64:0x728351d1
  41a1a5:	adc    esi,eax
  41a1a7:	jg     0x41a1c4
  41a1a9:	scas   al,BYTE PTR es:[edi]
  41a1aa:	inc    ebx
  41a1ab:	dec    ebx
  41a1ac:	test   DWORD PTR [esp+edx*2-0x6e],esp
  41a1b0:	in     al,0x3a
  41a1b2:	pusha  
  41a1b3:	clc    
  41a1b4:	push   edx
  41a1b5:	mov    al,0xcf
  41a1b7:	aad    0x38
  41a1b9:	(bad)  
  41a1bb:	or     al,0x1a
  41a1bd:	out    dx,eax
  41a1be:	adc    DWORD PTR [ecx+edi*1-0x52d4b3d6],edi
  41a1c5:	sahf   
  41a1c6:	or     DWORD PTR [edi-0x74dd761],ebx
  41a1cc:	mov    esp,0xb4121a90
  41a1d1:	inc    ebp
  41a1d2:	ins    DWORD PTR es:[edi],dx
  41a1d3:	mov    BYTE PTR [ecx-0x1c250065],bh
  41a1d9:	sahf   
  41a1da:	sahf   
  41a1db:	repz hlt 
  41a1dd:	sbb    eax,0x495e6854
  41a1e2:	or     eax,0xbb4041e
  41a1e7:	out    dx,eax
  41a1e8:	cwde   
  41a1e9:	pop    ecx
  41a1ea:	loope  0x41a234
  41a1ec:	mov    eax,ds:0xa449ecbf
  41a1f1:	mov    cl,0xbc
  41a1f3:	cmp    al,0x9a
  41a1f5:	jo     0x41a210
  41a1f7:	scas   al,BYTE PTR es:[edi]
  41a1f8:	mov    dl,0x39
  41a1fa:	pop    ds
  41a1fb:	jns    0x41a201
  41a1fd:	cli    
  41a1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1ff:	das    
  41a200:	(bad)  
  41a201:	sub    ah,al
  41a203:	repnz sbb eax,0x6b649e1b
  41a209:	or     ch,BYTE PTR [ecx+0x46]
  41a20c:	sbb    BYTE PTR [edx+0x40dde9a5],ch
  41a212:	shr    BYTE PTR [eax+0x386e0af8],cl
  41a218:	xlat   BYTE PTR ds:[ebx]
  41a219:	imul   edi,DWORD PTR [eax+0x19],0x4f
  41a21d:	and    DWORD PTR [ecx+0x27c23ce4],ecx
  41a223:	or     ebp,DWORD PTR [edx-0x3e05f00e]
  41a229:	das    
  41a22a:	jl     0x41a1db
  41a22c:	push   ss
  41a22d:	push   ds
  41a22e:	pop    ebx
  41a22f:	sub    ah,BYTE PTR [edi]
  41a231:	mov    WORD PTR [eax+0xefd4a9e],ss
  41a237:	cwde   
  41a238:	ret    
  41a239:	jne    0x41a209
  41a23b:	add    bh,BYTE PTR [edx+0x17]
  41a23e:	shl    DWORD PTR ds:0x25cb3ed4,1
  41a244:	sub    DWORD PTR [edi-0x1748d1c5],0x2a
  41a24b:	pop    es
  41a24c:	mov    dh,0x7a
  41a24e:	and    ecx,DWORD PTR [edx-0x27]
  41a251:	(bad)
  41a256:	xchg   edi,eax
  41a257:	not    DWORD PTR [ebx]
  41a259:	test   DWORD PTR [edi-0x3471fb77],ebp
  41a25f:	arpl   WORD PTR [edx],ax
  41a261:	fiadd  DWORD PTR [esp+esi*1-0x49]
  41a265:	nop
  41a266:	inc    esi
  41a267:	mov    esp,0x763ca16f
  41a26c:	in     eax,dx
  41a26d:	inc    ebp
  41a26e:	fsubr  QWORD PTR [ebp-0x11]
  41a271:	mov    esi,0x9898c249
  41a276:	rcr    edx,1
  41a278:	xchg   edi,eax
  41a279:	jnp    0x41a2cc
  41a27b:	rcl    BYTE PTR [eax+eax*4],1
  41a27e:	int3   
  41a27f:	or     al,0x81
  41a281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a282:	out    0x7c,eax
  41a284:	ja     0x41a276
  41a286:	sti    
  41a287:	(bad)  
  41a288:	and    DWORD PTR [ebp+0x3cceef9],ebx
  41a28e:	adc    DWORD PTR [eax],0x62
  41a291:	(bad)  
  41a292:	leave  
  41a293:	sbb    eax,0x271153f2
  41a298:	sar    ah,cl
  41a29a:	mov    ds:0xf3468fb3,al
  41a29f:	xor    BYTE PTR [edx-0x39],ah
  41a2a2:	pop    edi
  41a2a3:	sbb    BYTE PTR [eax-0x38590af7],bh
  41a2a9:	or     eax,0xbd2021f2
  41a2ae:	adc    bl,ah
  41a2b0:	test   al,0x14
  41a2b2:	retf   
  41a2b3:	imul   DWORD PTR [ecx-0x29]
  41a2b6:	sub    cl,BYTE PTR [ebp+0x2cd029d2]
  41a2bc:	xor    BYTE PTR [edx+0x75],al
  41a2bf:	dec    ebx
  41a2c0:	mov    ss:0x3ec17fbc,eax
  41a2c6:	push   0x5f69380f
  41a2cb:	cdq    
  41a2cc:	fcom   DWORD PTR [eax]
  41a2ce:	nop
  41a2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2d0:	fsub   st(7),st
  41a2d2:	mov    eax,0xe8dc7340
  41a2d7:	cmp    al,0x3a
  41a2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2da:	pop    edx
  41a2db:	out    dx,al
  41a2dc:	or     edx,DWORD PTR [edx-0x1e7c0eee]
  41a2e2:	les    ebx,FWORD PTR [edi]
  41a2e4:	ss sbb eax,0x7057ec07
  41a2ea:	or     eax,0x195ad3d9
  41a2ef:	and    DWORD PTR [eax+ecx*4+0x55792d75],ebx
  41a2f6:	nop
  41a2f7:	fsub   st(1),st
  41a2f9:	cwde   
  41a2fa:	aad    0xd1
  41a2fc:	xchg   ebp,eax
  41a2fd:	or     ch,dl
  41a2ff:	fucomp st(0)
  41a301:	loop   0x41a300
  41a303:	mov    ebx,0x60a8c28
  41a308:	aaa    
  41a309:	adc    ebp,DWORD PTR ds:0xe83716df
  41a30f:	xchg   edx,eax
  41a310:	mov    eax,0x4fed81f
  41a315:	fdivr  QWORD PTR [edx]
  41a317:	xchg   BYTE PTR [ecx+0x7e],dl
  41a31a:	cli    
  41a31b:	pop    esp
  41a31c:	int3   
  41a31d:	mov    al,0x4f
  41a31f:	addr16 mov al,ds:0x2088
  41a323:	gs sub ebp,ecx
  41a326:	shr    BYTE PTR [eax],cl
  41a328:	mov    dh,BYTE PTR [eax-0x4d4d1a55]
  41a32e:	inc    ebp
  41a32f:	mov    WORD PTR [edi+0x6],es
  41a332:	push   es
  41a333:	mov    al,ds:0x9796662a
  41a338:	out    dx,al
  41a339:	xlat   BYTE PTR ds:[ebx]
  41a33a:	fidivr WORD PTR [ebx]
  41a33c:	xchg   ecx,eax
  41a33d:	push   cs
  41a33e:	cmp    al,0x13
  41a340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a341:	inc    ebp
  41a342:	cld    
  41a343:	jb     0x41a2fe
  41a345:	icebp  
  41a346:	(bad)  
  41a348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a349:	mov    edi,0x2ea71f06
  41a34e:	or     bl,BYTE PTR [edx-0x5bcfad14]
  41a354:	fwait
  41a355:	stc    
  41a356:	ins    DWORD PTR es:[edi],dx
  41a357:	xchg   edi,eax
  41a358:	mov    ch,0xab
  41a35a:	xchg   esi,eax
  41a35b:	cli    
  41a35c:	(bad)  
  41a35d:	xchg   ebx,eax
  41a35e:	pop    ebx
  41a35f:	pop    ebx
  41a360:	and    edi,DWORD PTR [eax+0x71f09ee4]
  41a366:	mov    edx,0x48c6ef57
  41a36b:	mov    al,ds:0x62637f19
  41a370:	sahf   
  41a371:	ret    0xa95
  41a374:	fcomp  DWORD PTR [esi]
  41a376:	inc    esp
  41a377:	adc    al,0xf0
  41a379:	outs   dx,DWORD PTR ds:[esi]
  41a37a:	aas    
  41a37b:	je     0x41a3bf
  41a37d:	outs   dx,BYTE PTR ds:[esi]
  41a37e:	imul   edx,DWORD PTR [esi],0x44bb19f8
  41a384:	out    0xaf,al
  41a386:	mov    dh,0x1c
  41a388:	(bad)
  41a38b:	sub    ecx,eax
  41a38d:	outs   dx,BYTE PTR ds:[esi]
  41a38e:	cmp    al,0xbf
  41a390:	lods   eax,DWORD PTR ds:[esi]
  41a391:	xor    esi,DWORD PTR [esi+ebp*8+0xedc58d8]
  41a398:	and    DWORD PTR [ebx],edi
  41a39a:	add    dl,al
  41a39c:	imul   edi,DWORD PTR [ecx-0x6],0xffffffe2
  41a3a0:	push   edi
  41a3a1:	xor    al,0xff
  41a3a3:	in     eax,dx
  41a3a4:	in     al,dx
  41a3a5:	iret   
  41a3a6:	adc    eax,0x39dbd36b
  41a3ab:	adc    ecx,DWORD PTR [edx-0x12]
  41a3ae:	pop    ss
  41a3af:	xchg   eax,ebp
  41a3b1:	ins    BYTE PTR es:[edi],dx
  41a3b2:	dec    edi
  41a3b3:	cli    
  41a3b4:	repnz and ebp,edi
  41a3b7:	mov    BYTE PTR [ecx+eiz*2-0x5803283a],0xa6
  41a3bf:	in     eax,dx
  41a3c0:	je     0x41a397
  41a3c2:	hlt    
  41a3c3:	dec    ebx
  41a3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c5:	scas   eax,DWORD PTR es:[edi]
  41a3c6:	jb     0x41a381
  41a3c8:	test   eax,0xd7ce78e
  41a3cd:	sti    
  41a3ce:	mov    eax,0x4084f527
  41a3d3:	aam    0xb7
  41a3d5:	dec    edx
  41a3d6:	aad    0xd3
  41a3d8:	push   esi
  41a3d9:	mov    eax,0x210216d6
  41a3de:	cld    
  41a3df:	mov    ebx,0xd08efd4a
  41a3e4:	cmp    bl,0x5d
  41a3e7:	inc    edx
  41a3e8:	jae    0x41a45f
  41a3ea:	pop    edi
  41a3eb:	cmc    
  41a3ec:	push   0x5e8c1d4
  41a3f1:	not    DWORD PTR [ecx]
  41a3f3:	leave  
  41a3f4:	mov    DWORD PTR [ebp-0x7],ebx
  41a3f7:	mov    bl,0x97
  41a3f9:	mov    esi,DWORD PTR [edx+esi*4]
  41a3fc:	cmp    BYTE PTR [ebx-0x69],ah
  41a3ff:	mov    ds:0x90b807ee,eax
  41a404:	sbb    bl,BYTE PTR [ebx]
  41a406:	rcl    ebp,cl
  41a408:	pop    ebx
  41a409:	stos   DWORD PTR es:[edi],eax
  41a40a:	ins    BYTE PTR es:[edi],dx
  41a40b:	test   al,0x6a
  41a40d:	xchg   DWORD PTR [edi-0x26693c51],ebx
  41a413:	leave  
  41a414:	scas   eax,DWORD PTR es:[edi]
  41a415:	fnsave [edi]
  41a417:	pop    ecx
  41a418:	ret    
  41a419:	xchg   esp,eax
  41a41a:	mov    WORD PTR [eax+esi*8-0x48],cs
  41a41e:	push   ds
  41a41f:	iret   
  41a420:	jmp    0x6f61162
  41a425:	call   0x101900f2
  41a42a:	mov    edi,0x51f16df3
  41a42f:	add    al,BYTE PTR [edi-0xc7b2fd6]
  41a435:	sbb    DWORD PTR [edx+0x723c5f41],esp
  41a43b:	jmp    0xd0d1:0xcdab281e
  41a442:	pop    ss
  41a443:	xor    dl,ch
  41a445:	stc    
  41a446:	add    eax,0x84c96c75
  41a44b:	mov    al,ds:0x7c1eeb8
  41a450:	pop    ss
  41a451:	xchg   edi,eax
  41a452:	inc    esi
  41a453:	data16 or BYTE PTR [ebp-0x27],cl
  41a457:	ret    0x52d
  41a45a:	ret    0xc841
  41a45d:	mov    dh,0xb6
  41a45f:	neg    BYTE PTR [edi-0x24]
  41a462:	push   ds
  41a463:	mov    ebp,0xe2d87112
  41a468:	push   es
  41a469:	add    al,0x65
  41a46b:	or     bh,BYTE PTR [eax+eax*4]
  41a46e:	leave  
  41a46f:	pop    edi
  41a470:	dec    eax
  41a471:	scas   eax,DWORD PTR es:[edi]
  41a472:	dec    ecx
  41a473:	xchg   ecx,eax
  41a474:	gs inc edi
  41a476:	int3   
  41a477:	mov    ds:0x9794185,eax
  41a47c:	mov    dh,0xe2
  41a47e:	imul   ebp,DWORD PTR [eax],0xfffffffe
  41a481:	sahf   
  41a482:	adc    eax,0xedc01561
  41a487:	enter  0x3f88,0xae
  41a48b:	lock jb 0x41a491
  41a48e:	lock cmp ecx,DWORD PTR [edx+eax*1]
  41a492:	jge    0x41a445
  41a494:	or     DWORD PTR [esi],ebp
  41a496:	xchg   ebx,eax
  41a497:	inc    ebp
  41a498:	sub    BYTE PTR [ebx+0x4a],dl
  41a49b:	fs and cl,al
  41a49e:	sbb    ah,dh
  41a4a0:	mov    esp,ecx
  41a4a2:	sbb    esi,DWORD PTR [esi-0x3c]
  41a4a5:	stos   BYTE PTR es:[edi],al
  41a4a6:	mov    dh,0xb2
  41a4a8:	push   ds
  41a4a9:	adc    BYTE PTR [esi+0x6],ch
  41a4ac:	xor    eax,0x503be7a
  41a4b1:	sahf   
  41a4b2:	lar    ecx,di
  41a4b5:	push   ebp
  41a4b6:	sbb    ah,bh
  41a4b8:	pop    edx
  41a4b9:	mov    ah,0x34
  41a4bb:	in     al,0x6f
  41a4bd:	mov    cs,WORD PTR [eax]
  41a4bf:	js     0x41a4cd
  41a4c1:	xor    esi,DWORD PTR [ecx+0x5170b1a2]
  41a4c7:	pushf  
  41a4c8:	cmp    BYTE PTR ds:0xc992e229,cl
  41a4ce:	icebp  
  41a4cf:	imul   BYTE PTR [eax-0x2592f26d]
  41a4d5:	es icebp 
  41a4d7:	add    BYTE PTR [eax+edx*1],dh
  41a4da:	or     DWORD PTR [ecx-0x22],esp
  41a4dd:	daa    
  41a4de:	ret    0x23dc
  41a4e1:	out    dx,al
  41a4e2:	xchg   edx,eax
  41a4e3:	xchg   ebp,eax
  41a4e4:	(bad)  
  41a4e5:	sbb    DWORD PTR [ebp+0x750682c8],ecx
  41a4eb:	adc    eax,0xace384d2
  41a4f0:	mov    edi,0x8bf9ae77
  41a4f5:	aaa    
  41a4f6:	(bad)
  41a4f9:	fsubr  QWORD PTR [esi-0x522e75d2]
  41a4ff:	xor    al,0x25
  41a501:	xchg   edx,eax
  41a502:	xlat   BYTE PTR ds:[ebx]
  41a503:	cdq    
  41a504:	adc    DWORD PTR [ebx+0x610f1489],esp
  41a50a:	retf   0xac52
  41a50d:	sbb    eax,0xf8fee9ab
  41a512:	fistp  QWORD PTR [ebx]
  41a514:	sahf   
  41a515:	xchg   ebx,eax
  41a516:	jns    0x41a590
  41a518:	xchg   esp,eax
  41a519:	lahf   
  41a51a:	sbb    dh,BYTE PTR [ebx+0x670c1dcf]
  41a520:	ficom  DWORD PTR [ebp+0x7b7dfcde]
  41a526:	mov    ecx,0xe14c2a48
  41a52b:	leave  
  41a52c:	in     eax,dx
  41a52d:	jnp    0x41a4b1
  41a52f:	jl     0x41a52d
  41a531:	ins    BYTE PTR es:[edi],dx
  41a532:	sbb    al,0x4b
  41a534:	(bad)  
  41a535:	jnp    0x41a59f
  41a537:	push   ebp
  41a538:	jns    0x41a594
  41a53a:	ds push ecx
  41a53c:	mov    dl,0x6e
  41a53e:	pop    ds
  41a53f:	pop    ds
  41a540:	ret    0xcd55
  41a543:	sbb    al,0xc6
  41a545:	pop    eax
  41a546:	test   al,dh
  41a548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a549:	pop    esi
  41a54a:	(bad)  
  41a54c:	lahf   
  41a54d:	cld    
  41a54e:	jb     0x41a515
  41a550:	fisttp DWORD PTR fs:0x9e9c0f98
  41a557:	pop    esi
  41a558:	cmp    dh,BYTE PTR [eax+0x5f9f8543]
  41a55e:	pop    ecx
  41a55f:	jp     0x41a573
  41a561:	xor    eax,0x2c5dd465
  41a566:	rcl    DWORD PTR [esi-0x376133f6],1
  41a56c:	adc    DWORD PTR [ecx-0x6e],0xffffffd0
  41a570:	cmp    al,BYTE PTR [ebx-0x52]
  41a573:	hlt    
  41a574:	xor    al,0xd5
  41a576:	jmp    0x164b:0x1c8360cc
  41a57d:	fistp  QWORD PTR [esi-0x35]
  41a580:	lahf   
  41a581:	fisttp DWORD PTR [ebx]
  41a583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a584:	cmc    
  41a585:	mov    ?,ecx
  41a587:	mov    ah,BYTE PTR [esp+ecx*4+0x12]
  41a58b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a58c:	int    0xde
  41a58e:	in     eax,0xf2
  41a590:	aaa    
  41a591:	lock dec esi
  41a593:	mov    dh,0xef
  41a595:	or     BYTE PTR [ecx],dh
  41a597:	xor    ebp,DWORD PTR [ebp-0x3f798b0a]
  41a59d:	rcl    al,1
  41a59f:	push   cs
  41a5a0:	or     BYTE PTR [ebx+0x28e5b58a],dh
  41a5a6:	test   BYTE PTR [ecx],0xcc
  41a5a9:	bound  eax,QWORD PTR [esp+eiz*2]
  41a5ac:	xchg   DWORD PTR [eax-0x76c7aa9d],ebp
  41a5b2:	aam    0x52
  41a5b4:	xchg   DWORD PTR [eax+0x45b3fba0],edx
  41a5ba:	cmc    
  41a5bb:	cld    
  41a5bc:	sub    bh,ch
  41a5be:	cmp    al,0x6
  41a5c0:	daa    
  41a5c1:	(bad)  
  41a5c2:	mov    ecx,0x6bfc68b0
  41a5c7:	jmp    0x41a643
  41a5c9:	adc    al,BYTE PTR [eax-0x1c]
  41a5cc:	xchg   esp,eax
  41a5cd:	jg     0x41a61a
  41a5cf:	add    DWORD PTR [esi],eax
  41a5d1:	rcpps  xmm6,XMMWORD PTR [eax-0x4dec1463]
  41a5d8:	sar    BYTE PTR [ebx],cl
  41a5da:	adc    al,0x1c
  41a5dc:	xchg   BYTE PTR [ebp-0x177b0e82],ah
  41a5e2:	adc    BYTE PTR [edx+edi*8-0x2bb43fb6],al
  41a5e9:	mov    ebp,0x6d77af98
  41a5ee:	rcr    BYTE PTR [esi+0x36216da1],1
  41a5f4:	sub    esi,DWORD PTR [ecx+0x4b]
  41a5f7:	stos   DWORD PTR es:[edi],eax
  41a5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5f9:	push   cs
  41a5fa:	xor    edx,esp
  41a5fc:	lds    esp,FWORD PTR [ecx-0x386f34c9]
  41a602:	retf   
  41a603:	aaa    
  41a604:	popa   
  41a605:	cli    
  41a606:	add    eax,0xe6c89411
  41a60b:	sti    
  41a60c:	dec    esi
  41a60d:	xchg   ebp,eax
  41a60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a60f:	jl     0x41a5ca
  41a611:	repnz fwait
  41a613:	mov    edi,0x1531fd3f
  41a618:	mov    ch,0xe
  41a61a:	mov    al,0xd7
  41a61c:	or     DWORD PTR [eax],ecx
  41a61e:	or     al,0xd3
  41a620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a621:	sub    BYTE PTR [ecx+0x54],cl
  41a624:	xchg   edi,eax
  41a625:	push   edx
  41a626:	into   
  41a627:	aad    0x33
  41a629:	sub    edi,ebp
  41a62b:	pop    ss
  41a62c:	dec    esp
  41a62d:	add    ah,bl
  41a62f:	jmp    0xb6f2afae
  41a634:	cmc    
  41a635:	fldcw  WORD PTR [edx+0x43b3cddd]
  41a63b:	shr    BYTE PTR [edi],cl
  41a63d:	fcmovne st,st(2)
  41a63f:	sqrtps xmm1,XMMWORD PTR [ebx]
  41a642:	arpl   WORD PTR ds:0x6ef3d7d4,sp
  41a648:	shr    DWORD PTR [ecx+0x12],1
  41a64b:	cmp    cl,BYTE PTR [ebp-0x67]
  41a64e:	cwde   
  41a64f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a650:	mov    ah,0xfc
  41a652:	test   esp,ebp
  41a654:	dec    edi
  41a655:	call   0x53487a4e
  41a65a:	mov    bh,0x86
  41a65c:	or     dh,BYTE PTR [ecx+edx*4-0xe1b98f8]
  41a663:	fmul   DWORD PTR [edi]
  41a665:	hlt    
  41a666:	repnz and ah,BYTE PTR [edi+0x43]
  41a66a:	(bad)  
  41a66b:	data16 sbb al,0xd0
  41a66e:	in     eax,0xa4
  41a670:	in     eax,0x44
  41a672:	adc    al,0x3
  41a674:	ins    DWORD PTR es:[edi],dx
  41a675:	(bad)  
  41a676:	push   0x473172b9
  41a67b:	mov    ds:0x4634021,eax
  41a680:	(bad)  
  41a681:	jge    0x41a6cc
  41a683:	adc    BYTE PTR [eax+0x7d53cb35],al
  41a689:	jp     0x41a6d7
  41a68b:	sub    ebx,DWORD PTR [esi-0x458cabef]
  41a691:	scas   eax,DWORD PTR es:[edi]
  41a692:	sub    al,0xd4
  41a694:	fwait
  41a695:	jns    0x41a715
  41a697:	push   ecx
  41a698:	sti    
  41a699:	mov    ds:0x5a278214,eax
  41a69e:	fbstp  TBYTE PTR [edx+0x6e]
  41a6a1:	mov    edx,0x8a55cea8
  41a6a6:	dec    edi
  41a6a7:	test   al,0xa5
  41a6a9:	pop    eax
  41a6aa:	mov    cl,0xa
  41a6ac:	pop    esp
  41a6ad:	xor    al,0x6e
  41a6af:	mov    ds:0x503f0e6b,al
  41a6b4:	sbb    eax,DWORD PTR [ebp+0x68]
  41a6b7:	aam    0x3b
  41a6b9:	cs in  eax,0x4b
  41a6bc:	scas   al,BYTE PTR es:[edi]
  41a6bd:	stos   BYTE PTR es:[edi],al
  41a6be:	ds jae 0x41a682
  41a6c1:	jl     0x41a6c7
  41a6c3:	or     BYTE PTR [edi-0x5b],bl
  41a6c6:	mov    ebp,0xcc1fb1fc
  41a6cb:	stc    
  41a6cc:	frstpm(287 only) 
  41a6ce:	dec    ecx
  41a6cf:	jb     0x41a696
  41a6d1:	and    eax,0x4a3d10e1
  41a6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d7:	std    
  41a6d8:	sbb    al,0x53
  41a6da:	add    eax,0x3cbe43c5
  41a6df:	icebp  
  41a6e0:	xor    DWORD PTR [edx-0x15],eax
  41a6e3:	jmp    0x686e:0x2563f9ca
  41a6ea:	cs push 0xffffffef
  41a6ed:	(bad)  
  41a6ee:	(bad)  
  41a6ef:	retf   0x7bfa
  41a6f2:	cmp    ecx,0x49
  41a6f5:	ja     0x41a68d
  41a6f7:	mov    ecx,0x49f411b7
  41a6fc:	xchg   ebx,eax
  41a6fd:	ds pushf 
  41a6ff:	push   esp
  41a700:	in     eax,0x8f
  41a702:	mov    ebx,0x8deae3fe
  41a707:	js     0x41a778
  41a709:	fisub  WORD PTR [ebx]
  41a70b:	stos   BYTE PTR es:[edi],al
  41a70c:	mov    eax,ds:0xc1150f87
  41a711:	ficomp WORD PTR [esi+0x15]
  41a714:	dec    ebp
  41a715:	sti    
  41a716:	mov    ecx,0x6a4db545
  41a71b:	rcl    eax,cl
  41a71d:	push   esi
  41a71e:	fimul  DWORD PTR [ebp+0x73]
  41a721:	fld    DWORD PTR [eax-0x4]
  41a724:	pusha  
  41a725:	pop    ecx
  41a726:	stos   DWORD PTR es:[edi],eax
  41a727:	cmp    esp,DWORD PTR [ebx-0x3]
  41a72a:	shr    DWORD PTR [edx+0x4b7426b0],1
  41a730:	repnz inc esi
  41a732:	mov    ds:0xf45392a8,eax
  41a737:	imul   esi,DWORD PTR [edx+0x10],0x74
  41a73b:	dec    ebx
  41a73c:	sbb    al,0xab
  41a73e:	xchg   DWORD PTR [edi-0x5e625030],esp
  41a744:	push   ss
  41a745:	ins    BYTE PTR es:[edi],dx
  41a746:	jge    0x41a729
  41a748:	sbb    DWORD PTR [eax-0x2f],ebp
  41a74b:	ret    
  41a74c:	ret    
  41a74d:	mov    dl,0xd0
  41a74f:	dec    edx
  41a750:	in     eax,dx
  41a751:	dec    ecx
  41a752:	aam    0x9e
  41a754:	(bad)  
  41a755:	stos   BYTE PTR es:[edi],al
  41a756:	scas   eax,DWORD PTR es:[edi]
  41a757:	jno    0x41a7a0
  41a759:	dec    edx
  41a75a:	imul   ebp,DWORD PTR [esi+0x54],0xffffff9e
  41a75e:	mov    ebx,0x55a75d80
  41a763:	add    BYTE PTR ds:0xe5c74a86,ch
  41a769:	retf   
  41a76a:	sub    bh,al
  41a76c:	xchg   esi,eax
  41a76d:	adc    eax,0xb493f662
  41a772:	(bad)  
  41a773:	out    dx,eax
  41a774:	xchg   BYTE PTR [ecx+eax*2-0x3e],bl
  41a778:	stos   BYTE PTR es:[edi],al
  41a779:	pop    edx
  41a77a:	fdiv   st,st(2)
  41a77c:	sbb    bl,0x75
  41a77f:	(bad)  
  41a780:	test   dl,bl
  41a782:	clc    
  41a783:	pop    eax
  41a784:	addr16 add al,0xd1
  41a787:	call   0xecc1ff90
  41a78c:	loope  0x41a73d
  41a78e:	dec    ch
  41a790:	and    BYTE PTR ds:0x1c4daf60,cl
  41a796:	stos   DWORD PTR es:[edi],eax
  41a797:	push   esi
  41a798:	lods   eax,DWORD PTR ds:[esi]
  41a799:	aam    0xa1
  41a79b:	mov    bl,0x65
  41a79d:	daa    
  41a79e:	xlat   BYTE PTR ds:[ebx]
  41a79f:	in     al,0x8
  41a7a1:	pop    ebx
  41a7a2:	pop    esp
  41a7a3:	dec    ecx
  41a7a4:	pop    ds
  41a7a5:	jmp    0x6582f99d
  41a7aa:	inc    edi
  41a7ab:	push   cs
  41a7ac:	mov    cl,0xc6
  41a7ae:	in     eax,0x4c
  41a7b0:	out    0x1a,al
  41a7b2:	out    dx,eax
  41a7b3:	pop    esp
  41a7b4:	jp     0x41a778
  41a7b6:	push   eax
  41a7b7:	jl     0x41a74d
  41a7b9:	mov    ecx,0x75c9729
  41a7be:	sar    DWORD PTR [ecx+ebx*1],cl
  41a7c1:	jo     0x41a79b
  41a7c3:	sub    eax,DWORD PTR [ebx+eax*2]
  41a7c6:	xchg   edi,eax
  41a7c7:	gs pop edi
  41a7c9:	inc    ecx
  41a7ca:	and    bh,cl
  41a7cc:	rcr    DWORD PTR [eax-0x50],cl
  41a7cf:	ins    DWORD PTR es:[edi],dx
  41a7d0:	cwde   
  41a7d1:	mov    edx,0x7bed3fa4
  41a7d6:	lock aad 0xfd
  41a7d9:	mov    dl,0x90
  41a7db:	jl     0x41a773
  41a7dd:	scas   eax,DWORD PTR es:[edi]
  41a7de:	mov    al,ds:0xd28ba9b8
  41a7e3:	addr16 pop ss
  41a7e5:	call   0x4bc0:0xb2dbab53
  41a7ec:	(bad)  
  41a7ed:	pushf  
  41a7ee:	lods   eax,DWORD PTR ds:[esi]
  41a7ef:	mov    eax,fs:0x9d544c4b
  41a7f5:	fild   WORD PTR [ecx]
  41a7f7:	xor    ebp,esp
  41a7f9:	fs mov edx,0x59d0b282
  41a7ff:	mov    ch,0x4d
  41a801:	mov    ch,0x58
  41a803:	or     BYTE PTR [esi+0x41a6db2f],0x2f
  41a80a:	pop    ss
  41a80b:	bound  esi,QWORD PTR [esi]
  41a80d:	fldcw  WORD PTR [ecx+0x59ca4c36]
  41a813:	fmul   QWORD PTR [ecx+0x22]
  41a816:	xor    DWORD PTR [edi],eax
  41a818:	pop    eax
  41a819:	add    BYTE PTR [ecx+0x34],bh
  41a81c:	je     0x41a84a
  41a81e:	repz jo 0x41a7e4
  41a821:	and    edx,DWORD PTR [ebp-0x46]
  41a824:	mov    ds,WORD PTR [ecx-0x3a74c881]
  41a82a:	push   esi
  41a82b:	sub    al,0x13
  41a82d:	inc    edi
  41a82e:	in     al,0x8
  41a830:	mov    esp,0x529f6f
  41a835:	dec    esp
  41a836:	in     eax,0x9b
  41a838:	out    dx,ax
  41a83a:	enter  0x85b9,0x2
  41a83e:	pop    ecx
  41a83f:	test   DWORD PTR [esi+0x240fe4b],edi
  41a845:	aaa    
  41a846:	adc    DWORD PTR [esi],0xd3e904d7
  41a84c:	dec    edx
  41a84d:	mov    ch,0x76
  41a84f:	lds    ebx,FWORD PTR [esi-0x73]
  41a852:	cmp    esp,ecx
  41a854:	(bad)  [eax+0xa]
  41a857:	inc    ebx
  41a858:	mov    ds:0x8a181aec,al
  41a85d:	pusha  
  41a85e:	mov    edi,0xda2192cb
  41a863:	leave  
  41a864:	out    0xe6,eax
  41a866:	sub    al,0xd8
  41a868:	loop   0x41a885
  41a86a:	inc    ecx
  41a86b:	push   ebx
  41a86c:	adc    al,0xc5
  41a86e:	lea    edx,[edx]
  41a870:	xchg   esp,eax
  41a871:	sbb    eax,DWORD PTR [eax]
  41a873:	mov    eax,0xb206aa0c
  41a878:	in     al,0x85
  41a87a:	push   esi
  41a87b:	mov    bh,0xc2
  41a87d:	jge    0x41a80f
  41a87f:	inc    eax
  41a880:	or     DWORD PTR [eax-0x6c],0xbd4dc05
  41a887:	lods   al,BYTE PTR ds:[esi]
  41a888:	mov    edi,0xc8aed3bf
  41a88d:	pop    esp
  41a88e:	jo     0x41a8d5
  41a890:	cdq    
  41a891:	shl    dh,0xe
  41a894:	sahf   
  41a895:	cmp    al,0xc3
  41a897:	std    
  41a898:	cmp    eax,0x1ea8d61d
  41a89d:	dec    esp
  41a89e:	or     ecx,DWORD PTR ds:0x5ce3253c
  41a8a4:	mov    ebx,esp
  41a8a6:	repnz cmp ah,bh
  41a8a9:	cdq    
  41a8aa:	sub    al,0x9e
  41a8ac:	push   ecx
  41a8ad:	adc    dl,BYTE PTR [ebx]
  41a8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b0:	out    0x65,al
  41a8b2:	mov    esi,0x7b5752ac
  41a8b7:	loop   0x41a83d
  41a8b9:	jb     0x41a850
  41a8bb:	stos   BYTE PTR es:[edi],al
  41a8bc:	iret   
  41a8bd:	push   ecx
  41a8be:	xchg   ebp,eax
  41a8bf:	jge    0x3e7d8054
  41a8c5:	sbb    eax,0x245c32d7
  41a8ca:	les    ebp,FWORD PTR [edi+0x4ace9a38]
  41a8d0:	dec    edx
  41a8d1:	sbb    ebx,DWORD PTR [edi+0x5f]
  41a8d4:	mov    ecx,0x80e8c16d
  41a8d9:	inc    edx
  41a8da:	push   ecx
  41a8db:	test   eax,0x3fe0df61
  41a8e0:	ror    DWORD PTR [edx],1
  41a8e2:	stos   BYTE PTR es:[edi],al
  41a8e3:	pop    esp
  41a8e4:	test   DWORD PTR [ebx-0x7d],ebp
  41a8e7:	loope  0x41a8be
  41a8e9:	shl    al,1
  41a8eb:	cwde   
  41a8ec:	mov    eax,0x8755738e
  41a8f1:	test   BYTE PTR [edi+0x2c4130cb],bh
  41a8f7:	mov    esi,0xb79b654e
  41a8fc:	cmp    bl,BYTE PTR [eax-0x297ba70a]
  41a902:	push   ss
  41a903:	inc    edx
  41a904:	into   
  41a905:	shl    DWORD PTR [edx-0x6],0xc1
  41a909:	stos   BYTE PTR es:[edi],al
  41a90a:	fs xchg ecx,eax
  41a90c:	inc    eax
  41a90d:	sub    eax,0xfef86122
  41a912:	adc    DWORD PTR [ecx+edx*2-0x65],ebp
  41a916:	pop    ebp
  41a917:	push   edx
  41a918:	push   edx
  41a919:	scas   al,BYTE PTR es:[edi]
  41a91a:	pop    eax
  41a91b:	ins    DWORD PTR es:[edi],dx
  41a91c:	jle    0x41a8c5
  41a91e:	inc    esi
  41a91f:	out    dx,eax
  41a920:	xor    eax,0x7aee09c8
  41a925:	and    BYTE PTR [ebx+ecx*2-0x527f4d11],0xf
  41a92d:	adc    al,0x92
  41a92f:	repz rcl BYTE PTR [edx-0x1d],0xd1
  41a934:	cwde   
  41a935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a936:	nop
  41a937:	std    
  41a938:	lds    esi,FWORD PTR [esi+0x8]
  41a93b:	mov    eax,ds:0xfe890ba0
  41a940:	not    cl
  41a942:	repnz sbb BYTE PTR [ebx+0x777a3c74],dl
  41a949:	mov    ebx,0xd47f27b6
  41a94e:	cmp    BYTE PTR [esi],al
  41a950:	cmp    BYTE PTR [ebp+0x54c26974],bl
  41a956:	mov    al,ds:0xf031bb5b
  41a95b:	ror    BYTE PTR [edi+0x67],1
  41a95e:	lock push edi
  41a960:	scas   eax,DWORD PTR es:[edi]
  41a961:	xchg   esi,esi
  41a963:	mov    esp,0xb25a06a0
  41a968:	cmp    al,0x62
  41a96a:	ja     0x41a9db
  41a96c:	jae    0x41a957
  41a96e:	fst    DWORD PTR [edi-0x7a1014d1]
  41a974:	xor    al,0x4a
  41a976:	mov    eax,ds:0x5c83ca67
  41a97b:	adc    edx,DWORD PTR [ebp+0x3f]
  41a97e:	jae    0x41a9ed
  41a980:	sbb    al,0x71
  41a982:	adc    DWORD PTR ds:0x77c9eab3,edx
  41a988:	adc    eax,0xaa69d8ac
  41a98d:	adc    eax,0xceb8a795
  41a992:	jno    0x41a9e8
  41a994:	clc    
  41a995:	in     al,0x9e
  41a997:	aad    0xd
  41a999:	mov    eax,ds:0x96cee0e1
  41a99e:	les    ebx,FWORD PTR [eax-0x3d]
  41a9a1:	xchg   esi,eax
  41a9a2:	add    al,BYTE PTR [ebx]
  41a9a4:	je     0x41a995
  41a9a6:	jmp    0xf63d:0x19fe10c4
  41a9ad:	imul   ebx,ebx,0xffffffdf
  41a9b0:	std    
  41a9b1:	imul   edx,DWORD PTR [ebp+0x437dc655],0x3b
  41a9b8:	sbb    ebp,0x600624cd
  41a9be:	adc    DWORD PTR [eax+0x62],esi
  41a9c1:	and    bh,BYTE PTR [ebx]
  41a9c3:	int    0xfb
  41a9c5:	aaa    
  41a9c6:	push   edi
  41a9c7:	mov    ebx,es
  41a9c9:	cmp    eax,0x1de8756e
  41a9ce:	jg     0x41aa15
  41a9d0:	xchg   esp,ebx
  41a9d2:	adc    BYTE PTR [esi+0x7],dl
  41a9d5:	dec    edx
  41a9d6:	cdq    
  41a9d7:	dec    edx
  41a9d8:	pop    eax
  41a9d9:	jb     0x41aa12
  41a9db:	ss mov bl,0xbc
  41a9de:	jp     0x41a9cc
  41a9e0:	scas   eax,DWORD PTR es:[edi]
  41a9e1:	or     edi,DWORD PTR [ebx-0x55]
  41a9e4:	and    bh,BYTE PTR [edx+0x82fbbca]
  41a9ea:	or     eax,0xb48618ef
  41a9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f0:	hlt    
  41a9f1:	aas    
  41a9f2:	loopne 0x41a97c
  41a9f4:	sub    al,0xc8
  41a9f6:	inc    edi
  41a9f7:	mov    edi,0x540342ce
  41a9fc:	and    ch,0x84
  41a9ff:	ins    BYTE PTR es:[edi],dx
  41aa00:	out    dx,al
  41aa01:	sbb    ah,bh
  41aa03:	shl    DWORD PTR [ecx+0x7b484c29],0xee
  41aa0a:	gs inc edi
  41aa0c:	out    dx,al
  41aa0d:	cs (bad) 
  41aa0f:	jp     0x41aa8b
  41aa11:	add    al,0xbc
  41aa13:	(bad)  
  41aa14:	lock jns 0x41aa23
  41aa17:	aad    0xad
  41aa19:	outs   dx,DWORD PTR ds:[esi]
  41aa1a:	sti    
  41aa1b:	pusha  
  41aa1c:	xchg   ebx,eax
  41aa1d:	jmp    0xb42d92dc
  41aa22:	sahf   
  41aa23:	jg     0x41aa5b
  41aa25:	fwait
  41aa26:	cld    
  41aa27:	jg     0x41aa88
  41aa29:	add    al,BYTE PTR [ebx]
  41aa2b:	std    
  41aa2c:	fs cs test eax,0x5aa337a2
  41aa33:	jnp    0x41aa39
  41aa35:	dec    edx
  41aa36:	ret    0x645b
  41aa39:	addr16 jmp 0x41aa19
  41aa3c:	repnz popf 
  41aa3e:	aaa    
  41aa3f:	rcl    DWORD PTR [ebp-0x706a7c50],1
  41aa45:	adc    BYTE PTR [edx+ebp*1-0x54],ch
  41aa49:	ror    DWORD PTR [ebx],cl
  41aa4b:	ret    0x8fa1
  41aa4e:	(bad)  [esi+eiz*2]
  41aa51:	fs ins DWORD PTR es:[edi],dx
  41aa53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa54:	adc    BYTE PTR [edi],cl
  41aa56:	jne    0x41a9e0
  41aa58:	mov    dh,0x62
  41aa5a:	push   eax
  41aa5b:	and    al,0x86
  41aa5d:	imul   esi,DWORD PTR [eax+0x78dc1be3],0xffffffb3
  41aa64:	sub    esi,DWORD PTR [ebx-0x2d]
  41aa67:	sub    edx,DWORD PTR [edi+0x61]
  41aa6a:	mov    ds:0x9d787226,eax
  41aa6f:	or     eax,0xd9329b1a
  41aa74:	ja     0x41aa2d
  41aa76:	out    0xf5,al
  41aa78:	xor    eax,DWORD PTR [esi]
  41aa7a:	sbb    BYTE PTR gs:[esi+0x4e],0x24
  41aa7f:	(bad)  
  41aa80:	add    ebp,DWORD PTR [ecx+0x510d0436]
  41aa86:	pushf  
  41aa87:	push   cs
  41aa88:	aam    0x48
  41aa8a:	mov    WORD PTR [eax-0x76],cs
  41aa8d:	inc    esi
  41aa8e:	repz and eax,0xea317020
  41aa94:	(bad)  
  41aa95:	cmc    
  41aa96:	sbb    DWORD PTR [ebx-0x31857ec],esp
  41aa9c:	mov    edx,DWORD PTR [ebx+eax*4-0x24]
  41aaa0:	jnp    0x41aa2d
  41aaa2:	lock jge 0x41ab02
  41aaa5:	aaa    
  41aaa6:	cs jmp 0x41aac6
  41aaa9:	mov    WORD PTR [edx],?
  41aaab:	cli    
  41aaac:	pop    edx
  41aaad:	mov    esp,0xcd0f7ab8
  41aab2:	xor    al,0xfe
  41aab4:	xchg   edx,eax
  41aab5:	adc    al,0xf0
  41aab7:	push   ebp
  41aab8:	sbb    edx,DWORD PTR fs:[ebx-0x7c]
  41aabc:	push   eax
  41aabd:	pop    edi
  41aabe:	cmp    eax,0x850edd17
  41aac3:	not    BYTE PTR [eax-0x52]
  41aac6:	test   dh,0xa6
  41aac9:	add    edi,DWORD PTR [edi]
  41aacb:	cmp    cl,BYTE PTR [edi]
  41aacd:	jmp    0x52ed8cd
  41aad2:	(bad)  
  41aad3:	jb     0x41aac1
  41aad5:	or     BYTE PTR [edx+0x9e3062a],ah
  41aadb:	add    al,0x9c
  41aadd:	sahf   
  41aade:	int3   
  41aadf:	mov    ecx,0x3759e148
  41aae4:	aas    
  41aae5:	xor    ebp,ebp
  41aae7:	fmul   QWORD PTR [ecx-0x78b98ae6]
  41aaed:	adc    BYTE PTR [eax-0x23],dh
  41aaf0:	in     al,0xf0
  41aaf2:	xor    BYTE PTR [ebp+0x7a],dh
  41aaf5:	inc    ebx
  41aaf6:	in     al,0xde
  41aaf8:	xchg   edx,eax
  41aaf9:	shl    BYTE PTR [esi+0x7a],0x7
  41aafd:	(bad)  
  41aafe:	lods   al,BYTE PTR ds:[esi]
  41aaff:	xchg   ebx,eax
  41ab00:	mov    ebx,0x8f55bfa1
  41ab05:	gs and BYTE PTR ds:[edx+0x1131be4b],ah
  41ab0d:	into   
  41ab0e:	leave  
  41ab0f:	dec    ebp
  41ab10:	aaa    
  41ab11:	cld    
  41ab12:	callw  0x88a1
  41ab16:	cwde   
  41ab17:	imul   ebx,DWORD PTR [esi],0xffffffe0
  41ab1a:	enter  0x8054,0x40
  41ab1e:	test   edi,0x5e167b45
  41ab24:	hlt    
  41ab25:	dec    esp
  41ab26:	into   
  41ab27:	jl     0x41ab20
  41ab29:	icebp  
  41ab2a:	mov    BYTE PTR [esi],bl
  41ab2c:	add    edi,ebx
  41ab2e:	sub    ebp,DWORD PTR [ebx-0x6226ecba]
  41ab34:	sub    al,0x19
  41ab36:	add    ah,BYTE PTR [ecx]
  41ab38:	add    esi,DWORD PTR [esi+0x65f756ca]
  41ab3e:	addr16 cdq 
  41ab40:	push   ds
  41ab41:	mov    edi,0x9daaa998
  41ab46:	mov    al,0x4e
  41ab48:	adc    BYTE PTR [edx+0x56aa0c99],dh
  41ab4e:	sbb    al,0x8a
  41ab50:	scas   al,BYTE PTR es:[edi]
  41ab51:	push   ebp
  41ab52:	fdiv   QWORD PTR [ebx+edi*8+0x8]
  41ab56:	ins    DWORD PTR es:[edi],dx
  41ab57:	or     BYTE PTR [ebx+ecx*8-0x71],ch
  41ab5b:	repnz mov ch,0xd
  41ab5e:	(bad)  
  41ab5f:	dec    DWORD PTR [edx-0x6]
  41ab62:	std    
  41ab63:	and    BYTE PTR [ebp-0x6b],ch
  41ab66:	pop    ebx
  41ab67:	fdivr  QWORD PTR [edi-0x35]
  41ab6a:	jmp    0x6056:0x8e520ad8
  41ab71:	pop    ecx
  41ab72:	mov    ecx,0xa1b1bf80
  41ab77:	jl     0x41abad
  41ab79:	aaa    
  41ab7a:	lock aas 
  41ab7c:	and    BYTE PTR [ebx-0x70],0x7b
  41ab80:	add    ebp,DWORD PTR [ebx-0x6f]
  41ab83:	push   0x5d
  41ab85:	xor    BYTE PTR [edx+edi*1],0x88
  41ab89:	mov    DWORD PTR [esi],edi
  41ab8b:	popa   
  41ab8c:	mov    eax,?
  41ab8e:	clts   
  41ab90:	dec    esp
  41ab91:	add    ecx,DWORD PTR [ecx-0x7e]
  41ab94:	jb     0x41aba2
  41ab96:	mov    eax,0x50d2a745
  41ab9b:	push   ebp
  41ab9c:	out    0x0,al
  41ab9e:	xchg   BYTE PTR [eax+ecx*8],cl
  41aba1:	loopne 0x41ab41
  41aba3:	aad    0x67
  41aba5:	jmp    0x2874:0x989ebd16
  41abac:	xchg   esp,eax
  41abad:	push   ebx
  41abae:	sbb    bh,0xc
  41abb1:	fcmovbe st,st(2)
  41abb3:	pop    ds
  41abb4:	jne    0x41ab3f
  41abb6:	mov    edx,0xc5196d7a
  41abbb:	call   0xaef1:0x6aa40cdd
  41abc2:	test   BYTE PTR [edx],dl
  41abc4:	inc    edi
  41abc5:	aaa    
  41abc6:	push   ecx
  41abc7:	pop    ebp
  41abc8:	or     eax,0x307dde85
  41abcd:	dec    ebp
  41abce:	adc    DWORD PTR [ecx-0x48],ebp
  41abd1:	pop    ebp
  41abd2:	pop    esp
  41abd3:	xchg   ebx,eax
  41abd4:	nop
  41abd5:	push   esp
  41abd6:	aad    0xa5
  41abd8:	in     al,dx
  41abd9:	into   
  41abda:	push   edx
  41abdb:	pop    ebx
  41abdc:	ficom  WORD PTR [esp+ebx*4-0x4c]
  41abe0:	sbb    dl,BYTE PTR [edi+0x64]
  41abe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abe4:	lahf   
  41abe5:	adc    al,0x54
  41abe7:	inc    ebx
  41abe8:	push   ebp
  41abe9:	cli    
  41abea:	push   0xfffffff0
  41abec:	jne    0x41ac5a
  41abee:	(bad)  
  41abef:	es mov edx,0x5558669b
  41abf5:	fst    st(7)
  41abf7:	jmp    0x8f67ecbe
  41abfc:	inc    ebx
  41abfd:	das    
  41abfe:	aaa    
  41abff:	adc    al,0x31
  41ac01:	lods   al,BYTE PTR ds:[esi]
  41ac02:	pop    es
  41ac03:	and    BYTE PTR [edi],al
  41ac05:	fcomp  st(1)
  41ac07:	dec    esi
  41ac08:	and    al,0x2f
  41ac0a:	(bad)  
  41ac0b:	push   es
  41ac0c:	bound  ebp,QWORD PTR ds:0xb936dee8
  41ac12:	mov    eax,ds:0x725d19f6
  41ac17:	cmp    al,0x26
  41ac19:	mov    ch,al
  41ac1b:	jmp    0xfeaf7f9a
  41ac20:	sbb    BYTE PTR [eax+0x1c],bl
  41ac23:	mov    ah,bl
  41ac25:	sub    cl,cl
  41ac27:	mov    DWORD PTR [edx+0x59],eax
  41ac2a:	popf   
  41ac2b:	xor    esi,DWORD PTR [eax]
  41ac2d:	inc    edi
  41ac2e:	sbb    edx,DWORD PTR [edx-0x13a33e43]
  41ac34:	dec    ebp
  41ac35:	(bad)  
  41ac36:	popa   
  41ac37:	repz jb 0x41aca6
  41ac3a:	sub    BYTE PTR [edi-0x1c],0x1c
  41ac3e:	lods   eax,DWORD PTR ds:[esi]
  41ac3f:	aam    0x77
  41ac41:	mov    bh,0x80
  41ac43:	jmp    0x7222:0x7c3edefa
  41ac4a:	or     cl,ah
  41ac4c:	rep stos DWORD PTR es:[edi],eax
  41ac4e:	push   es
  41ac4f:	out    dx,eax
  41ac50:	mov    eax,ds:0xeb5ce8ed
  41ac55:	add    DWORD PTR [edx-0x4939ad40],0x6ae93766
  41ac5f:	dec    edi
  41ac60:	cmp    eax,DWORD PTR [ecx+0x24]
  41ac63:	imul   ebx,DWORD PTR [eax],0x68d37d92
  41ac69:	dec    eax
  41ac6a:	add    al,0x78
  41ac6c:	(bad)
  41ac6f:	lock cmp esi,DWORD PTR [edx+0x41c3eb54]
  41ac76:	adc    eax,0xa5d0d10d
  41ac7b:	data16 xor ah,BYTE PTR [ebx+0x27bc49ef]
  41ac82:	(bad)  
  41ac83:	cs call 0xcdd96947
  41ac89:	xchg   edi,eax
  41ac8a:	out    dx,eax
  41ac8b:	cdq    
  41ac8c:	add    BYTE PTR [esi-0x7648713f],0x8a
  41ac93:	pusha  
  41ac94:	sub    ah,BYTE PTR [edx]
  41ac96:	inc    eax
  41ac97:	sub    ecx,DWORD PTR [eax-0x72cb7c36]
  41ac9d:	mov    ch,0xa2
  41ac9f:	dec    eax
  41aca0:	call   ecx
  41aca2:	sbb    edi,esi
  41aca4:	into   
  41aca5:	push   cs
  41aca6:	fsub   DWORD PTR [esi-0x62]
  41aca9:	popa   
  41acaa:	xor    esi,DWORD PTR [edx+0x315fdf9e]
  41acb0:	cld    
  41acb1:	aam    0x94
  41acb3:	sub    bl,0x49
  41acb6:	inc    edx
  41acb7:	add    DWORD PTR [edi],esp
  41acb9:	add    bh,BYTE PTR ds:0x643bd320
  41acbf:	add    al,0xe4
  41acc1:	(bad)  [eax+ebx*4-0x35572655]
  41acc8:	out    dx,al
  41acc9:	mov    cl,dh
  41accb:	std    
  41accc:	pop    esp
  41accd:	ss jg  0x41ace3
  41acd0:	cs or  dl,dl
  41acd3:	push   esi
  41acd4:	jle    0x41acdb
  41acd6:	out    0xdb,ax
  41acd9:	mov    dh,dh
  41acdb:	leave  
  41acdc:	pop    ecx
  41acdd:	jb     0x41acae
  41acdf:	int    0xf9
  41ace1:	bound  edi,QWORD PTR [esi+0x1f8c9d13]
  41ace7:	outs   dx,DWORD PTR ds:[esi]
  41ace8:	call   0x9473:0xb132bdbd
  41acef:	stc    
  41acf0:	stc    
  41acf1:	inc    DWORD PTR [edi]
  41acf3:	in     al,0x1b
  41acf5:	pop    ebp
  41acf6:	inc    esp
  41acf7:	mov    edx,0x319b77e5
  41acfc:	retf   
  41acfd:	sub    al,0x8a
  41acff:	mov    bl,0xc6
  41ad01:	sub    al,0x8a
  41ad03:	dec    ebp
  41ad04:	fwait
  41ad05:	pop    es
  41ad06:	mov    edi,0x96d090b4
  41ad0b:	xor    edi,DWORD PTR [eax+ecx*1]
  41ad0e:	pusha  
  41ad0f:	rcr    bl,1
  41ad11:	fld    DWORD PTR [esi+esi*2-0x40c7ca6a]
  41ad18:	rcl    BYTE PTR [ecx+0x78],1
  41ad1b:	clc    
  41ad1c:	sub    ecx,edx
  41ad1e:	adc    BYTE PTR [esi+0x3a],0x43
  41ad22:	pmulhuw mm3,QWORD PTR [edx-0x8036b54]
  41ad29:	xchg   ebp,eax
  41ad2a:	push   edi
  41ad2b:	lock and al,0xa0
  41ad2e:	stos   DWORD PTR es:[edi],eax
  41ad2f:	jmp    0x4313:0x8270cc2c
  41ad36:	sub    BYTE PTR [ecx+0x723f7b5f],dl
  41ad3c:	test   DWORD PTR fs:0xa96b50a2,ebx
  41ad43:	rcr    bh,0x83
  41ad46:	xchg   ebx,eax
  41ad47:	nop
  41ad48:	arpl   di,bp
  41ad4a:	fs jmp 0x41ad01
  41ad4d:	ins    BYTE PTR es:[edi],dx
  41ad4e:	cdq    
  41ad4f:	xchg   ecx,eax
  41ad50:	xchg   ebp,eax
  41ad51:	pop    ebx
  41ad52:	into   
  41ad53:	lods   al,BYTE PTR ds:[esi]
  41ad54:	icebp  
  41ad55:	mov    esp,0x74fd224c
  41ad5a:	mov    eax,ebp
  41ad5c:	clc    
  41ad5d:	clc    
  41ad5e:	(bad)  
  41ad5f:	cmp    ecx,DWORD PTR [eax]
  41ad61:	inc    esi
  41ad62:	or     bh,BYTE PTR [ebx-0x38f0cb69]
  41ad68:	daa    
  41ad69:	pop    ebp
  41ad6a:	mov    esp,0x7afdde4
  41ad6f:	and    DWORD PTR [eax-0x5d8f4598],0xff63dda9
  41ad79:	add    bh,ch
  41ad7b:	inc    esi
  41ad7c:	imul   ecx,DWORD PTR [edx*2+0x2b19e30d],0x47
  41ad84:	imul   ecx,eax,0xaca305f3
  41ad8a:	sahf   
  41ad8b:	hlt    
  41ad8c:	push   eax
  41ad8d:	and    al,0x39
  41ad8f:	ins    DWORD PTR es:[edi],dx
  41ad90:	hlt    
  41ad91:	cmp    ebx,edi
  41ad93:	stos   BYTE PTR es:[edi],al
  41ad94:	in     eax,dx
  41ad95:	push   es
  41ad96:	sbb    esp,ebx
  41ad98:	js     0x41ae09
  41ad9a:	dec    esi
  41ad9b:	bound  eax,QWORD PTR [ebx+0xd18a78c]
  41ada1:	in     al,dx
  41ada2:	aad    0x74
  41ada4:	loop   0x41add0
  41ada6:	(bad)  
  41ada7:	ror    DWORD PTR ds:0x7a647dcb,1
  41adad:	jmp    0x8140:0x6da7d6e7
  41adb4:	xchg   ebx,eax
  41adb5:	ja     0x41aded
  41adb7:	mov    al,ds:0xa4b0b43b
  41adbc:	and    al,0x5
  41adbe:	scas   al,BYTE PTR es:[edi]
  41adbf:	aas    
  41adc0:	jmp    0x5375:0xd2f4d07a
  41adc7:	xor    BYTE PTR [edi+0x30df491a],0x15
  41adce:	fdiv   DWORD PTR [edi]
  41add0:	pop    esi
  41add1:	jle    0x41adb7
  41add3:	xchg   esp,eax
  41add4:	xchg   ebp,eax
  41add5:	inc    esp
  41add6:	call   FWORD PTR [edi-0x41]
  41add9:	push   ebp
  41adda:	add    eax,0x1803f521
  41addf:	cmp    al,0xae
  41ade1:	and    eax,0xa19fa72e
  41ade6:	cmp    BYTE PTR [eax-0x41],bh
  41ade9:	cmp    ecx,DWORD PTR [edx+0x5e]
  41adec:	int3   
  41aded:	mov    ah,0xd3
  41adef:	call   0xd8036aec
  41adf4:	test   eax,0x4e107d06
  41adf9:	sub    BYTE PTR [edx+ecx*2],0x24
  41adfd:	outs   dx,BYTE PTR ds:[esi]
  41adfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adff:	fs and al,0xec
  41ae02:	ret    
  41ae03:	mov    ds:0x3d24abfd,al
  41ae08:	push   ss
  41ae09:	inc    edi
  41ae0a:	mov    esi,0x9eb7af43
  41ae0f:	push   edi
  41ae10:	pop    ebp
  41ae11:	add    eax,0xb6841356
  41ae16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae17:	es xor eax,0xabc22da0
  41ae1d:	jecxz  0x41ae86
  41ae1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae20:	sti    
  41ae21:	fcom   DWORD PTR [eax+0x3b]
  41ae24:	(bad)  
  41ae25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae26:	sub    BYTE PTR [edi-0x402ac8e1],dh
  41ae2c:	fs fdivr st(6),st
  41ae2f:	mov    al,ds:0x4c4f370d
  41ae34:	push   ss
  41ae35:	ss mov bh,0xa0
  41ae38:	xchg   ebx,eax
  41ae39:	retf   0x849f
  41ae3c:	lock aad 0xc9
  41ae3f:	in     eax,dx
  41ae40:	push   ecx
  41ae41:	div    BYTE PTR [edi+0x6881ba7b]
  41ae47:	getsec 
  41ae49:	xchg   ecx,eax
  41ae4a:	test   ah,dh
  41ae4c:	loop   0x41ae87
  41ae4e:	arpl   ax,bx
  41ae50:	stc    
  41ae51:	lods   eax,DWORD PTR ds:[esi]
  41ae52:	ret    
  41ae53:	adc    dl,BYTE PTR [edi+0x30521d08]
  41ae59:	jecxz  0x41ae5d
  41ae5b:	jle    0x41ae19
  41ae5d:	fldln2 
  41ae5f:	test   DWORD PTR [ebp-0x4583222a],esi
  41ae65:	mov    dh,0xec
  41ae67:	inc    esp
  41ae68:	push   esi
  41ae69:	je     0x41ae48
  41ae6b:	jb     0x41aee9
  41ae6d:	call   0x3fb9:0xc0b45865
  41ae74:	mov    ds:0xf02adb3a,eax
  41ae79:	mov    ch,0x60
  41ae7b:	sbb    BYTE PTR [ebp+edi*8+0x3b545e88],dh
  41ae82:	pop    ebx
  41ae83:	xor    BYTE PTR [ecx-0x69],dl
  41ae86:	pop    ds
  41ae87:	push   ds
  41ae88:	popf   
  41ae89:	repnz sub al,0xc1
  41ae8c:	adc    DWORD PTR ds:[ecx],ebp
  41ae8f:	out    dx,eax
  41ae90:	test   BYTE PTR [ebx],0xd5
  41ae93:	add    al,0x6
  41ae95:	mov    ebp,0x83844bdf
  41ae9a:	mov    ds:0x9251819c,eax
  41ae9f:	test   ch,0x6
  41aea2:	loope  0x41aef0
  41aea4:	and    ah,dl
  41aea6:	loop   0x41aed4
  41aea8:	push   0xfffffffa
  41aeaa:	mov    ch,0x4c
  41aeac:	retf   
  41aead:	inc    esp
  41aeae:	adc    ebx,esp
  41aeb0:	lods   al,BYTE PTR ds:[esi]
  41aeb1:	mov    ds,WORD PTR [edi]
  41aeb3:	mov    al,ds:0xa1032375
  41aeb8:	mov    ebx,0x7997d768
  41aebd:	or     eax,0x2ac456c7
  41aec2:	dec    esi
  41aec3:	mov    ds:0x9cfcb5b8,eax
  41aec8:	cdq    
  41aec9:	xlat   BYTE PTR ds:[ebx]
  41aeca:	fwait
  41aecb:	imul   ebp,DWORD PTR [ebp+0x2a],0xffffffc1
  41aecf:	adc    DWORD PTR [eax+0x7b],0xffffffa7
  41aed3:	ss ss jmp 0xb21d:0x7bdb575e
  41aedc:	mov    BYTE PTR [eax+0x52a86cd],al
  41aee2:	adc    eax,0xbbb5faca
  41aee7:	xchg   ecx,eax
  41aee8:	(bad)  
  41aee9:	stc    
  41aeea:	lahf   
  41aeeb:	mov    al,0xb5
  41aeed:	mov    al,0x2c
  41aeef:	mov    DWORD PTR [ebx+0x537c6b0b],ebx
  41aef5:	pop    ss
  41aef6:	jnp    0x41af6f
  41aef8:	iret   
  41aef9:	jl     0x41aed8
  41aefb:	mov    esp,0xf357aa20
  41af00:	push   edi
  41af01:	scas   eax,DWORD PTR es:[edi]
  41af02:	adc    BYTE PTR [edx+0x7be31fb7],dh
  41af08:	ret    0x6f21
  41af0b:	or     eax,DWORD PTR [edi-0x6f126655]
  41af11:	(bad)  
  41af13:	sbb    edx,DWORD PTR [eax-0x75]
  41af16:	push   eax
  41af17:	daa    
  41af18:	and    ah,cl
  41af1a:	pusha  
  41af1b:	out    dx,eax
  41af1c:	pop    ebp
  41af1d:	(bad)  
  41af1f:	test   edi,0xe1560371
  41af25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af26:	sar    DWORD PTR [edx],0xff
  41af29:	fidivr DWORD PTR [eax+0x3ffaaaf5]
  41af2f:	jmp    0x41af5f
  41af31:	jecxz  0x41af1c
  41af33:	sub    al,BYTE PTR [edi-0x3801b23d]
  41af39:	xchg   esp,edi
  41af3b:	test   DWORD PTR [ebp-0x4328309],ecx
  41af41:	jecxz  0x41af26
  41af43:	dec    DWORD PTR [ecx-0x60c809a]
  41af49:	(bad)  
  41af4a:	push   edi
  41af4b:	and    al,0x6c
  41af4d:	mov    ah,0xcd
  41af4f:	lds    edx,FWORD PTR ds:0x53b99d3e
  41af55:	addr16 jne 0x41af54
  41af58:	fisttp QWORD PTR [ecx]
  41af5a:	sub    BYTE PTR [ebx+0x5ed825c0],dl
  41af60:	sub    eax,DWORD PTR [edi+0x1a651d2d]
  41af66:	loope  0x41af46
  41af68:	imul   edx,DWORD PTR [edx+eax*2],0x1076bd8a
  41af6f:	push   0xffffffe4
  41af71:	add    dl,0xf8
  41af74:	fmul   QWORD PTR [ebx]
  41af76:	pop    ebx
  41af77:	mov    dl,0xc0
  41af79:	push   ss
  41af7a:	dec    esi
  41af7b:	ds callw 0x4d42
  41af80:	(bad)  
  41af81:	mov    eax,ds:0x8c86fa2c
  41af86:	(bad)  
  41af87:	iret   
  41af88:	clc    
  41af89:	or     bh,BYTE PTR [ebx+0x41]
  41af8c:	sbb    edx,DWORD PTR [ecx+eiz*4]
  41af8f:	pop    edi
  41af90:	mov    ebx,0x4149e876
  41af95:	je     0x41af26
  41af97:	add    eax,0x89318100
  41af9c:	sub    al,0x1b
  41af9e:	js     0x41af21
  41afa0:	popa   
  41afa1:	push   ds
  41afa2:	int    0x6f
  41afa4:	push   eax
  41afa5:	call   0x3b528bc9
  41afaa:	(bad)  
  41afab:	pop    edi
  41afac:	mov    ecx,0x5bf7080e
  41afb1:	aam    0xab
  41afb3:	mov    esi,0x9854b708
  41afb8:	into   
  41afb9:	imul   esi,DWORD PTR [ebp-0x60103a27],0x7e
  41afc0:	jl     0x41b011
  41afc2:	icebp  
  41afc3:	or     esp,DWORD PTR [ecx-0x719d7cc7]
  41afc9:	ins    BYTE PTR es:[edi],dx
  41afca:	xor    cl,bh
  41afcc:	mov    DWORD PTR [eax],esp
  41afce:	shl    DWORD PTR [eax-0x2a647222],0x97
  41afd5:	dec    edx
  41afd6:	lea    edi,[ebx]
  41afd8:	jp     0x41af5a
  41afda:	jle    0x41afa3
  41afdc:	jnp    0x41b026
  41afde:	cmp    eax,0x4de2c625
  41afe3:	or     al,0x8a
  41afe5:	xchg   edi,eax
  41afe6:	xlat   BYTE PTR ds:[ebx]
  41afe7:	push   ds
  41afe8:	mov    ebx,0x89869f44
  41afed:	and    BYTE PTR ds:[edx+0x6f],ah
  41aff1:	nop
  41aff2:	aaa    
  41aff3:	(bad)  
  41aff4:	push   0x843b733e
  41aff9:	jns    0x41b000
  41affb:	push   ebp
  41affc:	mov    al,0x63
  41affe:	adc    DWORD PTR [ebx],0xfded1557
  41b004:	in     al,0x54
  41b006:	cwde   
  41b007:	pop    edx
  41b008:	fdecstp 
  41b00a:	sbb    DWORD PTR [esi-0x67],eax
  41b00d:	xbegin 0x70b5a446
  41b013:	xchg   ebx,eax
  41b014:	sub    eax,0x222a67dd
  41b019:	arpl   bp,cx
  41b01b:	mov    ah,0x89
  41b01d:	or     al,0x74
  41b01f:	lea    ebp,[ecx]
  41b021:	aam    0xec
  41b023:	push   ecx
  41b024:	fild   WORD PTR [esp+ebx*4-0x48]
  41b028:	cli    
  41b029:	fcom   DWORD PTR [eax+ecx*4-0x6d845df8]
  41b030:	pusha  
  41b031:	or     eax,0xd840e37f
  41b036:	out    0x50,al
  41b038:	fs push ecx
  41b03a:	sbb    dl,BYTE PTR [esi-0x21]
  41b03d:	fmul   DWORD PTR [esi+0x71]
  41b040:	aas    
  41b041:	aam    0xb2
  41b043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b044:	inc    eax
  41b045:	mov    cl,0xf9
  41b047:	rcr    BYTE PTR cs:[esi+ebp*4-0x4c],0xf2
  41b04d:	jo     0x41afd8
  41b04f:	retf   0x717a
  41b052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b053:	inc    eax
  41b054:	imul   BYTE PTR [ebp+0x7bc148fd]
  41b05a:	push   0xffffffd1
  41b05c:	cwde   
  41b05d:	jne    0x41b0d0
  41b05f:	int3   
  41b060:	mov    cl,0xc6
  41b062:	dec    edi
  41b063:	ret    
  41b064:	daa    
  41b065:	and    dh,al
  41b067:	inc    ebp
  41b068:	cli    
  41b069:	adc    eax,0xe183d354
  41b06e:	lds    ebp,FWORD PTR [eax+0x45ca7452]
  41b074:	(bad)  
  41b075:	lods   al,BYTE PTR ds:[esi]
  41b076:	xor    eax,ebx
  41b078:	mov    ah,0x83
  41b07a:	mov    ecx,0xf3cf623e
  41b07f:	pop    eax
  41b080:	push   ebx
  41b081:	xor    esi,DWORD PTR [esi]
  41b083:	cmp    al,0x53
  41b085:	dec    esi
  41b086:	ins    DWORD PTR es:[edi],dx
  41b087:	sub    ebp,DWORD PTR [ebp+0x7a]
  41b08a:	jae    0x41b096
  41b08c:	sbb    eax,0x99a6166e
  41b091:	(bad)  
  41b092:	sbb    ch,BYTE PTR [ebx]
  41b094:	leave  
  41b095:	or     ch,al
  41b097:	sbb    bl,BYTE PTR [ebp+0x359cfc96]
  41b09d:	pop    ebp
  41b09e:	cmp    BYTE PTR [eax-0x7a0c628d],bh
  41b0a4:	loopne 0x41b0f9
  41b0a6:	nop
  41b0a7:	ficomp DWORD PTR [ebp-0x2f]
  41b0aa:	inc    ecx
  41b0ab:	shr    DWORD PTR [ebp-0x43],cl
  41b0ae:	sahf   
  41b0af:	or     edx,DWORD PTR [ebx+0x29a50d6d]
  41b0b5:	mov    bh,0xed
  41b0b7:	mov    al,0xe3
  41b0b9:	dec    ebp
  41b0ba:	xchg   esp,eax
  41b0bb:	pop    ecx
  41b0bc:	and    al,BYTE PTR [eax+edi*4-0x61]
  41b0c0:	dec    ebp
  41b0c1:	fs into 
  41b0c3:	mov    edi,0xf6453b36
  41b0c8:	daa    
  41b0c9:	outs   dx,BYTE PTR ds:[esi]
  41b0ca:	(bad)  
  41b0cb:	mov    cl,0x36
  41b0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0ce:	popa   
  41b0cf:	out    dx,al
  41b0d0:	pop    ebp
  41b0d1:	in     eax,0x94
  41b0d3:	pusha  
  41b0d4:	jno    0x41b08e
  41b0d6:	jecxz  0x41b094
  41b0d8:	push   ebp
  41b0d9:	hlt    
  41b0da:	test   DWORD PTR [ecx],edi
  41b0dc:	call   DWORD PTR [ecx+0x3c8e3830]
  41b0e2:	es jmp 0xce106306
  41b0e8:	xchg   ecx,eax
  41b0e9:	stc    
  41b0ea:	imul   esi,DWORD PTR [ebp+0x3464ff4e],0x7762aaab
  41b0f4:	push   esp
  41b0f5:	in     eax,0x68
  41b0f7:	pop    ds
  41b0f8:	inc    edx
  41b0f9:	and    eax,DWORD PTR [esi]
  41b0fb:	lock aad 0x86
  41b0fe:	sbb    edx,esp
  41b100:	les    esp,FWORD PTR [edi-0x7707c807]
  41b106:	pusha  
  41b107:	mov    ecx,0xd2132067
  41b10c:	xor    al,BYTE PTR [eax+0x21fbbde1]
  41b112:	push   esi
  41b113:	les    esi,FWORD PTR [edx+0x33]
  41b116:	mov    ah,0x6
  41b118:	mov    ds:0x3a3ac28c,eax
  41b11d:	loopne 0x41b165
  41b11f:	mov    ah,0x53
  41b121:	idiv   BYTE PTR [ebx+ebx*1]
  41b124:	pushf  
  41b125:	push   ds
  41b126:	or     ecx,ebp
  41b128:	popf   
  41b129:	cwde   
  41b12a:	push   0xffffffd0
  41b12c:	ins    BYTE PTR es:[edi],dx
  41b12d:	sub    eax,0x958de75
  41b132:	inc    esp
  41b133:	call   0x1c2c0a65
  41b138:	add    DWORD PTR [esi-0x73],eax
  41b13b:	(bad)  
  41b13c:	dec    esp
  41b13d:	cmp    DWORD PTR [ebp+0x28],esi
  41b140:	clc    
  41b141:	mov    WORD PTR [edx-0x56],?
  41b144:	out    dx,al
  41b145:	mov    edx,0x97dce809
  41b14a:	sahf   
  41b14b:	retf   0xc840
  41b14e:	xor    al,0x3c
  41b150:	cmp    edi,edi
  41b152:	push   ds
  41b153:	iret   
  41b154:	repnz mov edx,0x77daad56
  41b15a:	mov    edx,0xebc4572
  41b15f:	dec    ecx
  41b160:	enter  0x77aa,0x68
  41b164:	sbb    DWORD PTR [ebx],ebx
  41b166:	push   edx
  41b167:	push   cs
  41b168:	mov    ch,0xba
  41b16a:	jp     0x41b1e1
  41b16c:	mov    bh,0xda
  41b16e:	push   edi
  41b16f:	pop    ebp
  41b170:	clc    
  41b171:	popa   
  41b172:	inc    ebx
  41b173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b174:	or     eax,esp
  41b176:	outs   dx,BYTE PTR ds:[esi]
  41b177:	je     0x41b1e8
  41b179:	inc    ebx
  41b17a:	out    0xba,eax
  41b17c:	sub    eax,0xd9195aa6
  41b181:	mov    bl,0x5c
  41b183:	sar    DWORD PTR [ecx+0x26cc2e98],cl
  41b189:	pushf  
  41b18a:	stos   DWORD PTR es:[edi],eax
  41b18b:	adc    BYTE PTR [edi+0x2e],0xed
  41b18f:	(bad)  
  41b190:	xchg   ecx,eax
  41b191:	push   ds
  41b192:	aas    
  41b193:	sub    eax,0x98216a33
  41b198:	stos   DWORD PTR es:[edi],eax
  41b199:	or     eax,0x9ab8db16
  41b19e:	jb     0x41b14f
  41b1a0:	js     0x41b16c
  41b1a2:	jg     0x41b209
  41b1a4:	push   ecx
  41b1a5:	hlt    
  41b1a6:	es mov al,0x8c
  41b1a9:	add    bh,dl
  41b1ab:	push   eax
  41b1ac:	data16 fsub QWORD PTR [ebp+0x19c1644d]
  41b1b3:	and    eax,0xffffff94
  41b1b6:	xchg   ecx,eax
  41b1b7:	out    0xc2,al
  41b1b9:	in     eax,0x72
  41b1bb:	mov    ah,0xbe
  41b1bd:	add    DWORD PTR [edi],esi
  41b1bf:	xchg   ebp,eax
  41b1c0:	(bad)  
  41b1c1:	mov    esp,0x7c998303
  41b1c6:	pop    ds
  41b1c7:	ficom  DWORD PTR [ebp-0x2657e8b]
  41b1cd:	pop    edx
  41b1ce:	pop    ecx
  41b1cf:	in     eax,0x76
  41b1d1:	xchg   ecx,eax
  41b1d2:	pop    ecx
  41b1d3:	push   ebx
  41b1d4:	sub    al,0x69
  41b1d6:	mov    ch,0xc2
  41b1d8:	ret    0x6660
  41b1db:	xchg   edx,eax
  41b1dc:	adc    al,0xcc
  41b1de:	adc    al,0xf6
  41b1e0:	inc    edi
  41b1e1:	adc    cl,BYTE PTR [esi]
  41b1e3:	aad    0x60
  41b1e5:	into   
  41b1e6:	cli    
  41b1e7:	pushf  
  41b1e8:	mov    dh,0x79
  41b1ea:	test   al,0x2e
  41b1ec:	or     al,0xc3
  41b1ee:	pop    esi
  41b1ef:	mov    ds:0x9b5f5f2,eax
  41b1f4:	dec    esi
  41b1f5:	cld    
  41b1f6:	inc    eax
  41b1f7:	jge    0x41b186
  41b1f9:	xchg   esp,eax
  41b1fa:	jae    0x41b253
  41b1fc:	mov    ebp,0xa7a62aa2
  41b201:	test   al,0x81
  41b203:	jp     0x41b23a
  41b205:	or     BYTE PTR [eax+0x2a28d338],0x4e
  41b20c:	adc    al,0x72
  41b20e:	cmp    BYTE PTR [ebp-0x38],ah
  41b211:	sbb    al,0x4c
  41b213:	sbb    al,al
  41b215:	mov    gs,WORD PTR [ebx]
  41b217:	push   edi
  41b218:	xlat   BYTE PTR ds:[ebx]
  41b219:	int3   
  41b21a:	push   eax
  41b21b:	push   edi
  41b21c:	mov    si,0x4cc8
  41b220:	mov    al,0x2d
  41b222:	daa    
  41b223:	and    eax,DWORD PTR [edx]
  41b225:	inc    edx
  41b226:	mov    dh,0xc7
  41b228:	pop    esi
  41b229:	cmp    ecx,0xffffff96
  41b22c:	push   cs
  41b22d:	data16 out dx,al
  41b22f:	test   DWORD PTR [esi-0x1d],edi
  41b232:	pop    esi
  41b233:	inc    esi
  41b234:	dec    ecx
  41b235:	ins    DWORD PTR es:[edi],dx
  41b236:	into   
  41b237:	les    ecx,FWORD PTR [ebp-0x670592b3]
  41b23d:	xor    eax,0x2e703fcd
  41b242:	in     eax,dx
  41b243:	fnsave [edi]
  41b245:	cwde   
  41b246:	push   ebx
  41b247:	sbb    bl,bh
  41b249:	jp     0x41b250
  41b24b:	sub    BYTE PTR [eax+0x26],bh
  41b24e:	and    DWORD PTR [ecx+ebx*1],esp
  41b251:	call   0x19c30258
  41b256:	int    0x7b
  41b258:	xor    al,0x98
  41b25a:	mov    esi,0x398efad7
  41b25f:	repnz ins BYTE PTR es:[edi],dx
  41b261:	push   eax
  41b262:	iret   
  41b263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b264:	or     al,0x9a
  41b266:	fsub   QWORD PTR [esi-0xbde60c7]
  41b26c:	and    BYTE PTR [ecx-0x36],0xb8
  41b270:	das    
  41b271:	or     cl,BYTE PTR [ebx-0x52484e4b]
  41b277:	jg     0x41b27a
  41b279:	ret    0x2e3c
  41b27c:	adc    al,0x70
  41b27e:	xor    DWORD PTR [edx+ecx*1],esi
  41b281:	add    BYTE PTR [edi+0x2],dh
  41b284:	not    esi
  41b286:	int3   
  41b287:	sub    edi,DWORD PTR [esp+ecx*1]
  41b28a:	cmp    edi,esp
  41b28c:	mov    eax,ds:0x135cbee0
  41b291:	loopne 0x41b298
  41b293:	call   0xdc7b8dc8
  41b298:	cmp    ah,BYTE PTR [eax+0x69425107]
  41b29e:	xchg   ecx,eax
  41b29f:	mov    ebp,0x981c0b2
  41b2a4:	push   0xb862d43a
  41b2a9:	(bad)  
  41b2aa:	std    
  41b2ab:	les    esi,FWORD PTR [esi+0x41]
  41b2ae:	adc    BYTE PTR [edi+0x42],ah
  41b2b1:	xchg   BYTE PTR [esi],ah
  41b2b3:	int    0x77
  41b2b5:	int    0xeb
  41b2b7:	mov    eax,edi
  41b2b9:	scas   eax,DWORD PTR es:[edi]
  41b2ba:	test   al,0xd7
  41b2bc:	arpl   WORD PTR [ecx+ebp*2],dx
  41b2bf:	mov    BYTE PTR [eax],ah
  41b2c1:	sub    dl,BYTE PTR [esi]
  41b2c3:	dec    edi
  41b2c4:	mov    edx,0xd1f3259a
  41b2c9:	and    bh,cl
  41b2cb:	xchg   edx,eax
  41b2cc:	sub    eax,0x5e2028d9
  41b2d1:	bound  ecx,QWORD PTR [bp+0x3d87]
  41b2d6:	addr16 call 0x8846:0x590f2d0d
  41b2de:	retf   0x7bdc
  41b2e1:	cli    
  41b2e2:	pop    ss
  41b2e3:	ins    BYTE PTR es:[edi],dx
  41b2e4:	or     eax,0x9e760768
  41b2e9:	or     edx,ebp
  41b2eb:	add    BYTE PTR [ebx-0x60],bl
  41b2ee:	ret    0x3338
  41b2f1:	adc    BYTE PTR [edi],ah
  41b2f3:	dec    ebp
  41b2f4:	add    ch,BYTE PTR ds:0xc28d887a
  41b2fa:	push   0x22
  41b2fc:	xchg   DWORD PTR [edi-0x3f],ecx
  41b2ff:	jb     0x41b320
  41b301:	aaa    
  41b302:	mov    edi,0xd78be5cc
  41b307:	shr    BYTE PTR [esi-0x7598f37f],1
  41b30d:	pop    ebp
  41b30e:	or     BYTE PTR ds:0xedc96e36,cl
  41b314:	add    dh,BYTE PTR [edx+eiz*4]
  41b317:	xchg   esi,eax
  41b318:	inc    eax
  41b319:	test   DWORD PTR ds:0x2623cf4b,eax
  41b31f:	scas   al,BYTE PTR es:[edi]
  41b320:	shr    ah,0xd0
  41b323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b324:	fstp   DWORD PTR [eax+0x71f506a5]
  41b32a:	mov    esp,DWORD PTR gs:0x8c6fff45
  41b331:	lods   al,BYTE PTR ds:[esi]
  41b332:	add    ebp,DWORD PTR [edx+0x55]
  41b335:	push   es
  41b336:	(bad)  
  41b337:	jmp    0x2f5c3cb8
  41b33c:	jb     0x41b33a
  41b33e:	pop    esp
  41b33f:	add    edi,DWORD PTR cs:[eax]
  41b342:	aam    0xd8
  41b344:	xor    dl,BYTE PTR [edi]
  41b346:	jo     0x41b2fd
  41b348:	or     DWORD PTR [edx-0xb],ebp
  41b34b:	mov    al,0x1a
  41b34d:	mov    esi,0x44b31a90
  41b352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b353:	ins    BYTE PTR es:[edi],dx
  41b354:	into   
  41b355:	mov    ds:0xf2d1c6cf,eax
  41b35a:	and    bl,BYTE PTR [edx-0x27260c0d]
  41b360:	adc    DWORD PTR [eax],esp
  41b362:	or     ch,BYTE PTR [eax]
  41b364:	mov    eax,ds:0xbcd74ba7
  41b369:	cwde   
  41b36a:	lods   al,BYTE PTR ds:[esi]
  41b36b:	cmc    
  41b36c:	rcl    dl,0xdb
  41b36f:	test   al,0x92
  41b371:	push   ds
  41b372:	cmp    dl,ah
  41b374:	ret    0x7810
  41b377:	fadd   QWORD PTR [ebx]
  41b379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b37a:	dec    al
  41b37c:	jl     0x41b323
  41b37e:	je     0x41b338
  41b380:	cmp    al,0xb2
  41b382:	and    al,0xe8
  41b384:	xchg   ebp,eax
  41b385:	stos   DWORD PTR es:[edi],eax
  41b386:	ins    BYTE PTR es:[edi],dx
  41b387:	push   ebx
  41b388:	inc    eax
  41b389:	push   esi
  41b38a:	dec    ebx
  41b38b:	lock push ecx
  41b38d:	mov    bl,0x1
  41b38f:	shr    BYTE PTR [esi-0x5f],1
  41b392:	sti    
  41b393:	imul   ebp,DWORD PTR [esi],0x2861958a
  41b399:	aam    0xa7
  41b39b:	dec    eax
  41b39c:	imul   edi,DWORD PTR [ecx],0x68
  41b39f:	xchg   ebp,eax
  41b3a0:	sub    DWORD PTR [ebx-0x7b],ebp
  41b3a3:	jbe    0x41b3a5
  41b3a5:	mov    cl,0x4e
  41b3a7:	dec    ecx
  41b3a8:	pop    ebp
  41b3a9:	jbe    0x41b410
  41b3ab:	inc    eax
  41b3ac:	clc    
  41b3ad:	add    al,0xc3
  41b3af:	push   cs
  41b3b0:	fisubr DWORD PTR [ecx+edx*4-0x2c7260e6]
  41b3b7:	inc    BYTE PTR gs:[edi-0x61]
  41b3bb:	sti    
  41b3bc:	xchg   DWORD PTR [edx+edx*1],edi
  41b3bf:	pop    ds
  41b3c0:	gs cmc 
  41b3c2:	or     al,0x56
  41b3c4:	pop    ebx
  41b3c5:	mov    BYTE PTR [edi-0x4e9f2057],0xc7
  41b3cc:	mov    bh,0x86
  41b3ce:	cmp    BYTE PTR [ebp-0x5a],dh
  41b3d1:	jmp    0x40c19d4f
  41b3d6:	in     al,dx
  41b3d7:	rcl    BYTE PTR [edx+0x61],cl
  41b3da:	div    BYTE PTR [ecx+0xf6db1e8]
  41b3e0:	repz and eax,0x868a0b2e
  41b3e6:	popa   
  41b3e7:	lods   al,BYTE PTR ds:[esi]
  41b3e8:	lods   al,BYTE PTR ss:[esi]
  41b3ea:	clc    
  41b3eb:	xor    ebx,DWORD PTR [ebx+0x4de75eca]
  41b3f1:	xor    bl,BYTE PTR [ebx]
  41b3f3:	inc    esi
  41b3f4:	xchg   ebp,eax
  41b3f5:	call   0x8403:0x3a78c1f9
  41b3fc:	add    al,0x94
  41b3fe:	aas    
  41b3ff:	xchg   DWORD PTR [ecx+0x48d9972c],eax
  41b405:	pop    es
  41b406:	shr    BYTE PTR [ebx-0x4142eb7a],1
  41b40c:	hlt    
  41b40d:	std    
  41b40e:	ins    BYTE PTR es:[edi],dx
  41b40f:	loop   0x41b3a4
  41b411:	mov    ds:0xc9a06234,al
  41b416:	or     al,0x78
  41b418:	or     DWORD PTR [eax+0x3a],edi
  41b41b:	xor    bl,BYTE PTR [esi+0x56]
  41b41e:	jp     0x41b3e9
  41b420:	adc    DWORD PTR [edi],esi
  41b422:	sub    eax,0xcd5f59b5
  41b427:	sub    eax,0x37d6d71f
  41b42c:	aad    0x9c
  41b42e:	or     bh,bl
  41b430:	imul   edx,ecx,0xcb0aa426
  41b436:	arpl   WORD PTR [esi-0x1],bx
  41b439:	sub    al,0x6a
  41b43b:	mov    dh,0x7
  41b43d:	pop    ebx
  41b43e:	mov    esp,0x41638782
  41b443:	mov    edx,0x51242800
  41b448:	xor    al,0x80
  41b44a:	and    DWORD PTR [ebx*1+0x7083c740],edx
  41b451:	add    al,0x63
  41b453:	add    eax,0x9e2624b
  41b458:	(bad)  
  41b45a:	rol    esi,1
  41b45c:	pop    ds
  41b45d:	sti    
  41b45e:	sti    
  41b45f:	or     al,0xd2
  41b461:	rcr    BYTE PTR cs:[ebx+0x17729f30],1
  41b468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b469:	push   ebp
  41b46a:	or     ebx,ecx
  41b46c:	std    
  41b46d:	mov    edi,0x6af69773
  41b472:	das    
  41b473:	cmc    
  41b474:	les    edx,FWORD PTR [ecx-0x74]
  41b477:	xchg   ebx,eax
  41b478:	lock xchg ebp,eax
  41b47a:	test   ebp,eax
  41b47c:	push   0x3e
  41b47e:	jmp    0x41b4f1
  41b480:	retf   0x78d1
  41b483:	adc    eax,0x8092efeb
  41b488:	adc    DWORD PTR [ebx-0x5c],esp
  41b48b:	retf   0x863d
  41b48e:	cmp    eax,0x140f2edd
  41b493:	push   esi
  41b494:	add    esp,DWORD PTR [ebx]
  41b496:	adc    eax,0x253e6567
  41b49b:	aaa    
  41b49c:	pop    ebx
  41b49d:	jmp    0x41b50e
  41b49f:	test   eax,0xe3b637e4
  41b4a4:	adc    DWORD PTR [ebx+0x293ee21c],ecx
  41b4aa:	push   ecx
  41b4ab:	arpl   WORD PTR [ecx+edx*4],dx
  41b4ae:	sbb    DWORD PTR [edi+ecx*1-0x2f0d97c4],0x5b530e1a
  41b4b9:	pop    ds
  41b4ba:	dec    esi
  41b4bb:	adc    ah,dl
  41b4bd:	int    0x10
  41b4bf:	xor    bl,al
  41b4c1:	jns    0x41b47e
  41b4c3:	xchg   esi,eax
  41b4c4:	mov    ebp,0xd8737161
  41b4c9:	stos   DWORD PTR es:[edi],eax
  41b4ca:	or     eax,0xd9edbb5
  41b4cf:	pusha  
  41b4d0:	jo     0x41b4c4
  41b4d2:	imul   edx,edi,0x2d3fb721
  41b4d8:	prefetcht2 BYTE PTR [eax]
  41b4db:	jmp    0x41b4ad
  41b4dd:	aas    
  41b4de:	or     eax,0x93fae00d
  41b4e3:	repz mov ds:0x487d4cf9,al
  41b4e9:	jbe    0x41b4e8
  41b4eb:	in     eax,0x49
  41b4ed:	arpl   sp,sp
  41b4ef:	out    0x8d,eax
  41b4f1:	loopne 0x41b4c7
  41b4f3:	clc    
  41b4f4:	xchg   esi,eax
  41b4f5:	push   ss
  41b4f6:	and    ch,BYTE PTR [ebp+edx*8+0x43fc4c35]
  41b4fd:	or     al,0xf5
  41b4ff:	retf   
  41b500:	push   esp
  41b501:	add    BYTE PTR [ebx],dh
  41b503:	ja     0x41b4ef
  41b505:	imul   esp,DWORD PTR [ebx-0x1a202929],0xb627dd0a
  41b50f:	sbb    BYTE PTR [eax],0x43
  41b512:	mov    DWORD PTR [ebp-0x48],edx
  41b515:	mov    edx,DWORD PTR [ebp+0x8]
  41b518:	mov    ebx,0xfa5e1530
  41b51d:	sub    ebx,edx
  41b51f:	add    ebx,DWORD PTR [ebp-0x44]
  41b522:	mov    DWORD PTR [ebp-0x44],ebx
  41b525:	mov    edx,DWORD PTR [ebp+0x8]
  41b528:	xor    edx,eax
  41b52a:	add    edx,esi
  41b52c:	jne    0x419130
  41b532:	mov    edx,DWORD PTR [ebp-0x8]
  41b535:	mov    ebx,DWORD PTR [ebp-0xc]
  41b538:	xor    edx,eax
  41b53a:	lea    edx,[edx+ebx*1+0x3272ef]
  41b541:	mov    DWORD PTR [ebp-0xc],edx
  41b544:	mov    edx,DWORD PTR [ebp-0x10]
  41b547:	xor    edx,eax
  41b549:	add    edx,esi
  41b54b:	jne    0x40ffb8
  41b551:	jmp    0x41d9ed
  41b556:	mov    ecx,DWORD PTR [ebp-0x14]
  41b559:	mov    DWORD PTR [ebp+0x8],ecx
  41b55c:	jmp    0x41b5d5
  41b561:	mov    ecx,DWORD PTR [ebp+0x8]
  41b564:	mov    edx,DWORD PTR [ebp-0x8]
  41b567:	xor    ecx,eax
  41b569:	xor    edx,eax
  41b56b:	sub    ecx,edx
  41b56d:	sub    ecx,esi
  41b56f:	xor    ecx,eax
  41b571:	mov    DWORD PTR [ebp+0x8],ecx
  41b574:	mov    ecx,DWORD PTR [ebp+0x8]
  41b577:	mov    edx,DWORD PTR [ebp-0x58]
  41b57a:	add    ecx,0x5708fa
  41b580:	imul   ecx,edx
  41b583:	mov    DWORD PTR [ebp-0x58],ecx
  41b586:	mov    ecx,DWORD PTR [ebp+0x8]
  41b589:	mov    edx,DWORD PTR [ebp-0x54]
  41b58c:	add    ecx,0x64f89c
  41b592:	or     ecx,edx
  41b594:	mov    DWORD PTR [ebp-0x54],ecx
  41b597:	mov    ecx,DWORD PTR [ebp+0x8]
  41b59a:	mov    edx,DWORD PTR [ebp-0x50]
  41b59d:	add    ecx,0x242ebcd
  41b5a3:	xor    ecx,edx
  41b5a5:	mov    DWORD PTR [ebp-0x50],ecx
  41b5a8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5ab:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5ae:	add    ecx,edi
  41b5b0:	and    ecx,edx
  41b5b2:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5b5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5b8:	mov    edx,DWORD PTR [ebp-0x48]
  41b5bb:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5c2:	mov    DWORD PTR [ebp-0x48],ecx
  41b5c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5c8:	mov    edx,0xfa5e1530
  41b5cd:	sub    edx,ecx
  41b5cf:	add    edx,DWORD PTR [ebp-0x44]
  41b5d2:	mov    DWORD PTR [ebp-0x44],edx
  41b5d5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5d8:	xor    ecx,eax
  41b5da:	add    ecx,esi
  41b5dc:	jne    0x41b561
  41b5e2:	jmp    0x41d9f9
  41b5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5ea:	mov    edx,DWORD PTR [ebp-0x8]
  41b5ed:	xor    ecx,eax
  41b5ef:	xor    edx,eax
  41b5f1:	sub    ecx,edx
  41b5f3:	sub    ecx,esi
  41b5f5:	xor    ecx,eax
  41b5f7:	mov    DWORD PTR [ebp+0x8],ecx
  41b5fa:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fd:	mov    edx,DWORD PTR [ebp-0x58]
  41b600:	add    ecx,0x5708fa
  41b606:	imul   ecx,edx
  41b609:	mov    DWORD PTR [ebp-0x58],ecx
  41b60c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60f:	mov    edx,DWORD PTR [ebp-0x54]
  41b612:	add    ecx,0x64f89c
  41b618:	or     ecx,edx
  41b61a:	mov    DWORD PTR [ebp-0x54],ecx
  41b61d:	mov    ecx,DWORD PTR [ebp+0x8]
  41b620:	mov    edx,DWORD PTR [ebp-0x50]
  41b623:	add    ecx,0x242ebcd
  41b629:	xor    ecx,edx
  41b62b:	mov    DWORD PTR [ebp-0x50],ecx
  41b62e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b631:	mov    edx,DWORD PTR [ebp-0x4c]
  41b634:	add    ecx,edi
  41b636:	jmp    0x41d9bb
  41b63b:	mov    ch,ah
  41b63d:	cmp    al,0x62
  41b63f:	sbb    al,0xa2
  41b641:	test   BYTE PTR [edi+ebp*2+0x29220c6f],al
  41b648:	jns    0x41b6c3
  41b64a:	inc    eax
  41b64b:	pop    esi
  41b64c:	std    
  41b64d:	jns    0x41b6c9
  41b64f:	adc    bl,BYTE PTR [edi+0x7a]
  41b652:	jp     0x41b65c
  41b654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b655:	mov    BYTE PTR [edx+ebx*1-0x16],al
  41b659:	hlt    
  41b65a:	(bad)  
  41b65b:	bound  esp,QWORD PTR [ebp-0x2e]
  41b65e:	mov    BYTE PTR [eax],ah
  41b660:	xor    BYTE PTR [ebp+0x50],0xb1
  41b664:	xor    esi,DWORD PTR [eax+0x5c9916f3]
  41b66a:	ror    edi,1
  41b66c:	retf   
  41b66d:	addr16 aam 0x9e
  41b670:	xor    al,0xe6
  41b672:	lahf   
  41b673:	aam    0xa5
  41b675:	std    
  41b676:	cs in  eax,0x7e
  41b679:	lahf   
  41b67a:	add    al,0xa5
  41b67c:	pop    ds
  41b67d:	inc    eax
  41b67e:	fwait
  41b67f:	push   es
  41b680:	push   esi
  41b681:	lods   eax,DWORD PTR ds:[esi]
  41b682:	or     dh,BYTE PTR [edx+esi*1]
  41b685:	mov    ah,0xa5
  41b687:	arpl   WORD PTR [ecx+0x37],bp
  41b68a:	pop    edx
  41b68b:	push   ecx
  41b68c:	jmp    0x1e24c14d
  41b691:	or     BYTE PTR [eax],cl
  41b693:	push   cs
  41b694:	mov    esp,0xffe158cd
  41b699:	push   ss
  41b69a:	or     eax,0xa8d36a3d
  41b69f:	scas   eax,DWORD PTR es:[edi]
  41b6a0:	stc    
  41b6a1:	fsubr  DWORD PTR [ebp-0x97a8404]
  41b6a7:	mov    eax,ds:0x25fe2f49
  41b6ac:	mov    ?,WORD PTR [eax]
  41b6ae:	retf   0x3adc
  41b6b1:	pop    ss
  41b6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b3:	push   es
  41b6b4:	popa   
  41b6b5:	mov    BYTE PTR [ebp+0x7ebfe23],bl
  41b6bb:	push   es
  41b6bc:	nop
  41b6bd:	inc    ebp
  41b6be:	cmp    cl,al
  41b6c0:	std    
  41b6c1:	mov    esi,0x6e3df442
  41b6c6:	xchg   ebp,eax
  41b6c7:	mov    ch,BYTE PTR [ecx]
  41b6c9:	rcl    DWORD PTR [esp+esi*8],cl
  41b6cc:	dec    edi
  41b6cd:	dec    esi
  41b6ce:	cmp    DWORD PTR [edi],eax
  41b6d0:	sar    DWORD PTR [ebp+0xd],1
  41b6d3:	mov    ch,BYTE PTR [edi+0x5c75612b]
  41b6d9:	pop    esi
  41b6da:	cmp    al,0xe0
  41b6dc:	(bad)  
  41b6dd:	shr    BYTE PTR [edx],cl
  41b6df:	mov    eax,0x54a4ea76
  41b6e4:	imul   edi,DWORD PTR [ebp+0x51],0xffffff8b
  41b6e8:	fwait
  41b6e9:	cmp    al,0xaf
  41b6eb:	jbe    0x41b74e
  41b6ed:	pusha  
  41b6ee:	pop    es
  41b6ef:	(bad)  [eax-0x4d]
  41b6f2:	cmp    eax,0xebd2c294
  41b6f7:	out    dx,al
  41b6f8:	lock xor BYTE PTR [edi+0x68815ba7],dl
  41b6ff:	in     eax,0x54
  41b701:	test   eax,0x695e1097
  41b706:	jle    0x41b6dc
  41b708:	(bad)  
  41b70a:	sbb    al,0xf0
  41b70c:	or     al,0x23
  41b70e:	xor    dh,ah
  41b710:	(bad)  
  41b711:	sub    DWORD PTR [ecx+0x33],eax
  41b714:	arpl   WORD PTR [ecx],sp
  41b716:	dec    edx
  41b717:	lods   eax,DWORD PTR ds:[esi]
  41b718:	ins    BYTE PTR es:[edi],dx
  41b719:	ss pop ebx
  41b71b:	pop    ds
  41b71c:	and    al,0x92
  41b71e:	mov    DWORD PTR [eax+0x4b],ebx
  41b721:	nop
  41b722:	xchg   ecx,eax
  41b723:	sub    eax,0x9bf6b64b
  41b728:	and    BYTE PTR [esi-0x6f],dh
  41b72b:	imul   edi,DWORD PTR [ecx-0x33176d30],0xffffff8d
  41b732:	fldcw  WORD PTR [ecx+0x24d5102b]
  41b738:	outs   dx,BYTE PTR ds:[esi]
  41b739:	sbb    esi,DWORD PTR [ecx+eiz*4]
  41b73c:	pop    es
  41b73d:	ds stos BYTE PTR es:[edi],al
  41b73f:	cmp    BYTE PTR [esi+eax*4-0x694a8c2],0xfa
  41b747:	and    DWORD PTR [ecx-0x1e7352ba],edx
  41b74d:	out    dx,al
  41b74e:	ss test eax,0xc90b4c8e
  41b755:	xchg   ecx,eax
  41b756:	mov    edx,0x7badf50b
  41b75b:	cmp    al,BYTE PTR [eax]
  41b75d:	mov    ebx,0x244eb665
  41b762:	in     al,0x0
  41b764:	dec    BYTE PTR [edi-0x669775e1]
  41b76a:	addr16 dec ecx
  41b76c:	test   eax,0x639dc6f8
  41b771:	pop    bp
  41b773:	ss xor eax,0x13b7644f
  41b779:	push   esp
  41b77a:	adc    BYTE PTR [ebx-0x4d],al
  41b77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b77e:	or     al,0xdf
  41b780:	in     al,0x87
  41b782:	std    
  41b783:	mov    eax,esi
  41b785:	sar    DWORD PTR [esi],0x97
  41b788:	fist   WORD PTR [eax+edx*2]
  41b78b:	or     BYTE PTR [eax],dl
  41b78d:	add    al,0x29
  41b78f:	out    dx,al
  41b790:	sbb    eax,0x3094cda9
  41b795:	mov    edi,0xc0a4517e
  41b79a:	xor    ecx,DWORD PTR [esi-0x3337dba2]
  41b7a0:	fbld   TBYTE PTR [esi-0x2c]
  41b7a3:	je     0x41b793
  41b7a5:	xchg   esi,eax
  41b7a6:	dec    ebp
  41b7a7:	mov    eax,ds:0x4cae029e
  41b7ac:	cld    
  41b7ad:	sub    dl,BYTE PTR [esi+0x5d54ee4f]
  41b7b3:	cmc    
  41b7b4:	dec    esp
  41b7b5:	mov    edx,0x2d46b25a
  41b7ba:	mov    al,cl
  41b7bc:	xor    eax,DWORD PTR [eax]
  41b7be:	pop    ecx
  41b7bf:	dec    esi
  41b7c0:	mov    esp,0x17b396fe
  41b7c5:	test   BYTE PTR [edi+0x5],0xfb
  41b7c9:	and    dl,BYTE PTR [esi-0x18]
  41b7cc:	adc    BYTE PTR [eax],bl
  41b7ce:	bound  esp,QWORD PTR [ebp+0x3c50e619]
  41b7d4:	jmp    0xddf1:0xc8f350a3
  41b7db:	jmp    0x7e:0xa3d59a8e
  41b7e2:	test   al,0x98
  41b7e4:	(bad)  
  41b7e5:	mov    esi,0x893649f7
  41b7ea:	mov    eax,0x6008110b
  41b7ef:	xchg   edx,eax
  41b7f0:	(bad)  
  41b7f1:	xchg   ebp,eax
  41b7f2:	mov    ds:0xb5d430a5,eax
  41b7f7:	out    dx,al
  41b7f8:	repnz mov cl,0xa1
  41b7fb:	aas    
  41b7fc:	mov    esp,0xaaa65837
  41b801:	add    ebp,ebx
  41b803:	push   edx
  41b804:	aad    0xb4
  41b806:	sbb    cl,ch
  41b808:	rcr    BYTE PTR [eax+edi*2+0x78],0x7d
  41b80d:	jmp    0x3224:0x2e82069f
  41b814:	sbb    dh,cl
  41b816:	mov    al,0x81
  41b818:	hlt    
  41b819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b81a:	test   al,0x8a
  41b81c:	sbb    ebp,DWORD PTR [edi+0x13]
  41b81f:	int3   
  41b820:	mov    ds:0xde69ecee,eax
  41b825:	sub    al,0xd9
  41b827:	loop   0x41b84d
  41b829:	mov    ah,0x3b
  41b82b:	and    BYTE PTR [eax+0x5e243cc8],cl
  41b831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b832:	mov    ds:0x50ba3410,al
  41b837:	sbb    DWORD PTR [ecx-0x9da8d67],esi
  41b83d:	push   esi
  41b83e:	add    cl,ah
  41b840:	sub    al,0xdf
  41b842:	ins    BYTE PTR es:[edi],dx
  41b843:	adc    esi,eax
  41b845:	loop   0x41b81f
  41b847:	fcomp  DWORD PTR [edi]
  41b849:	lahf   
  41b84a:	sbb    ebx,DWORD PTR [eax]
  41b84c:	jnp    0x41b7da
  41b84e:	pop    esi
  41b84f:	repnz push esp
  41b851:	scas   al,BYTE PTR es:[edi]
  41b852:	push   eax
  41b853:	sub    BYTE PTR [esi],dh
  41b855:	xchg   eax,ecx
  41b857:	retf   0x8745
  41b85a:	cmp    DWORD PTR [edi],edi
  41b85c:	push   esp
  41b85d:	push   es
  41b85e:	pushf  
  41b85f:	lods   al,BYTE PTR ds:[esi]
  41b860:	jle    0x41b7f1
  41b862:	push   es
  41b863:	(bad)  
  41b864:	out    dx,eax
  41b865:	cwde   
  41b866:	or     dl,0xd7
  41b869:	xor    al,0x77
  41b86b:	xchg   esi,ecx
  41b86d:	and    DWORD PTR [eax-0x111deb91],edi
  41b873:	(bad)  
  41b875:	arpl   WORD PTR [ebx],cx
  41b877:	or     BYTE PTR [esi-0x50a48236],0xe1
  41b87e:	imul   edx,edi,0x63
  41b881:	sub    dh,BYTE PTR [ecx]
  41b883:	fs pop esp
  41b885:	xchg   BYTE PTR [ecx+0x56],dh
  41b888:	inc    esi
  41b889:	xchg   DWORD PTR [edx+0x2f87bad],edx
  41b88f:	xor    eax,0x2a8e5ec0
  41b894:	inc    edi
  41b895:	rcr    DWORD PTR [eax],cl
  41b897:	xchg   esi,eax
  41b898:	cs push ss
  41b89a:	fs and eax,0xcf1aeeea
  41b8a0:	mov    bl,0xa7
  41b8a2:	push   es
  41b8a3:	cmc    
  41b8a4:	(bad)  
  41b8a5:	imul   esp,DWORD PTR [edi],0xc973a93f
  41b8ab:	stos   DWORD PTR es:[edi],eax
  41b8ac:	loop   0x41b913
  41b8ae:	stc    
  41b8af:	stos   DWORD PTR es:[edi],eax
  41b8b0:	add    ch,BYTE PTR [esi-0x34c650d0]
  41b8b6:	xor    al,0xc9
  41b8b8:	(bad)  
  41b8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8ba:	sbb    eax,0x357349ff
  41b8bf:	jno    0x41b926
  41b8c1:	gs cwde 
  41b8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8c4:	imul   ecx,DWORD PTR [esi+0x6c],0xe84e9cd3
  41b8cb:	lods   eax,DWORD PTR ds:[esi]
  41b8cc:	cli    
  41b8cd:	mov    al,BYTE PTR [ebx+0x64]
  41b8d0:	mov    esi,0x4e60d0f6
  41b8d5:	xor    DWORD PTR [ebx-0x6ac8b36e],edi
  41b8db:	and    dh,BYTE PTR [edx+eax*1]
  41b8de:	pop    ebp
  41b8df:	out    dx,al
  41b8e0:	add    dh,ch
  41b8e2:	pop    ss
  41b8e3:	jecxz  0x41b957
  41b8e5:	or     cl,bh
  41b8e7:	inc    edx
  41b8e8:	pop    eax
  41b8e9:	cmc    
  41b8ea:	sbb    BYTE PTR [eax+0xb119088],dl
  41b8f0:	dec    edi
  41b8f1:	xlat   BYTE PTR ds:[ebx]
  41b8f2:	test   al,0xe5
  41b8f4:	iret   
  41b8f5:	leave  
  41b8f6:	aad    0xa5
  41b8f8:	call   0xa8c4:0x477c8a85
  41b8ff:	jne    0x41b94a
  41b901:	sub    bl,BYTE PTR ds:0x5036cc20
  41b907:	add    bh,BYTE PTR [edx+edx*2-0x31f0ef01]
  41b90e:	pop    ebp
  41b90f:	pop    ebx
  41b910:	in     eax,0xea
  41b912:	ja     0x41b921
  41b914:	mov    cl,0xd7
  41b916:	xor    DWORD PTR [ebx-0x307dbf4d],edx
  41b91c:	xchg   esi,eax
  41b91d:	jecxz  0x41b8ab
  41b91f:	pop    esi
  41b920:	test   al,0x68
  41b922:	dec    esp
  41b923:	pop    ds
  41b924:	hlt    
  41b925:	cld    
  41b926:	push   esp
  41b927:	fsubr  QWORD PTR [esi]
  41b929:	dec    edx
  41b92a:	or     BYTE PTR [edx-0x76],bl
  41b92d:	int3   
  41b92e:	fisttp QWORD PTR [eax-0x23]
  41b931:	mov    dh,0xd9
  41b933:	(bad)  
  41b934:	shl    DWORD PTR [ecx+0x60],1
  41b937:	adc    al,0xe6
  41b939:	or     eax,0x186603bf
  41b93e:	dec    esi
  41b93f:	mov    dl,0x22
  41b941:	add    eax,0x9482bc3f
  41b946:	fyl2x  
  41b948:	xchg   BYTE PTR [esp+edx*4+0x2848b535],bl
  41b94f:	fild   DWORD PTR [ebx]
  41b951:	mov    ebp,DWORD PTR [eax+0x1e]
  41b954:	test   DWORD PTR [ebx+0x6f],eax
  41b957:	(bad)  
  41b958:	push   ecx
  41b959:	pop    ss
  41b95a:	lods   eax,DWORD PTR ds:[esi]
  41b95b:	jle    0x41b967
  41b95d:	sbb    edx,ebp
  41b95f:	mov    ebp,0x43daaec2
  41b964:	aas    
  41b965:	pushf  
  41b966:	xchg   esi,eax
  41b967:	gs xchg esp,eax
  41b969:	dec    ebp
  41b96a:	mov    eax,0x31b9b400
  41b96f:	aas    
  41b970:	dec    edi
  41b971:	sub    al,0x54
  41b973:	xadd   BYTE PTR [eax],dh
  41b976:	jl     0x41b9e8
  41b978:	sub    ch,al
  41b97a:	in     al,dx
  41b97b:	icebp  
  41b97c:	add    dh,dl
  41b97e:	(bad)  
  41b97f:	in     eax,dx
  41b980:	popf   
  41b981:	(bad)  
  41b983:	xchg   esp,eax
  41b984:	sbb    BYTE PTR [edi-0x72d93a96],ah
  41b98a:	outs   dx,DWORD PTR ds:[esi]
  41b98b:	mov    bh,0x8c
  41b98d:	repz jmp 0x7707:0x3bddab32
  41b995:	inc    eax
  41b996:	fistp  QWORD PTR [ecx+0x33053e36]
  41b99c:	mov    edi,0x1a26427a
  41b9a1:	iret   
  41b9a2:	dec    ebx
  41b9a3:	pop    eax
  41b9a4:	mov    edx,0x4028e51e
  41b9a9:	pop    esi
  41b9aa:	popf   
  41b9ab:	fsubr  QWORD PTR [eax]
  41b9ad:	shl    BYTE PTR [ebp-0x55baa21d],0x7c
  41b9b4:	gs dec edx
  41b9b6:	aam    0x2d
  41b9b8:	test   BYTE PTR [esi-0x1e2ad61a],ah
  41b9be:	pop    eax
  41b9bf:	ss out dx,al
  41b9c1:	jmp    0x41b9db
  41b9c3:	push   cs
  41b9c4:	adc    BYTE PTR [edx+eax*4],dh
  41b9c7:	mov    BYTE PTR [ecx-0x1189ebe3],bl
  41b9cd:	push   esp
  41b9ce:	pop    DWORD PTR [esi]
  41b9d0:	or     BYTE PTR [eax-0x9cb889],bh
  41b9d6:	es popf 
  41b9d8:	push   ebp
  41b9d9:	jne    0x41b9b6
  41b9db:	adc    DWORD PTR [eax+0x36c3c78e],esp
  41b9e1:	add    eax,0xd7e45312
  41b9e6:	sbb    DWORD PTR [edi-0x2e],esp
  41b9e9:	imul   esi,DWORD PTR [ecx-0x52697e0d],0xfbb15cae
  41b9f3:	jg     0x41ba12
  41b9f5:	icebp  
  41b9f6:	test   al,0x6a
  41b9f8:	push   ds
  41b9f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9fa:	xchg   BYTE PTR [ebp+0x14d78b3],ah
  41ba00:	mov    bl,0x6b
  41ba02:	jns    0x41b9e7
  41ba04:	add    DWORD PTR [ebx],ecx
  41ba06:	push   ebx
  41ba07:	sbb    eax,0x2ecab9f3
  41ba0c:	scas   al,BYTE PTR es:[edi]
  41ba0d:	pop    es
  41ba0e:	pop    ds
  41ba0f:	arpl   WORD PTR [ecx-0xd7856e7],bp
  41ba15:	mov    cl,0x6c
  41ba17:	in     al,0xd0
  41ba19:	fld    DWORD PTR [esi]
  41ba1b:	leave  
  41ba1c:	shl    DWORD PTR [ebp-0x450ae30c],cl
  41ba22:	dec    ebp
  41ba23:	pop    ss
  41ba24:	sub    BYTE PTR [edx+0x79],dh
  41ba27:	mov    ds:0x1065cc97,eax
  41ba2c:	sti    
  41ba2d:	sub    al,0x0
  41ba2f:	inc    ebp
  41ba30:	push   0xeec620c7
  41ba35:	dec    ebx
  41ba36:	mov    WORD PTR [ebx+esi*8-0x71],fs
  41ba3a:	int3   
  41ba3b:	mov    al,ds:0x6d2f5652
  41ba40:	mov    cl,0x69
  41ba42:	cli    
  41ba43:	ret    
  41ba44:	cmc    
  41ba45:	adc    eax,0xb42d9495
  41ba4a:	and    al,0x5c
  41ba4c:	mov    dl,0x66
  41ba4e:	retf   
  41ba4f:	sbb    ah,cl
  41ba51:	pop    es
  41ba52:	inc    ebp
  41ba53:	push   eax
  41ba54:	inc    ebx
  41ba55:	push   eax
  41ba56:	dec    eax
  41ba57:	add    BYTE PTR [eax],bh
  41ba59:	mov    ebp,0x2d285721
  41ba5e:	mov    DWORD PTR [ebx*1+0x41ae5484],esi
  41ba65:	adc    BYTE PTR [ebx+0x66],al
  41ba68:	mov    bl,0x8f
  41ba6a:	ins    BYTE PTR es:[edi],dx
  41ba6b:	dec    ebp
  41ba6c:	call   0x176f:0xb4d6312a
  41ba73:	jnp    0x41bab6
  41ba75:	push   es
  41ba76:	cmp    DWORD PTR [ecx-0x47],0x46
  41ba7a:	jl     0x41ba5d
  41ba7c:	adc    eax,0x60da25ca
  41ba81:	or     WORD PTR [edx-0x5ab93f0],bx
  41ba88:	jg     0x41ba8c
  41ba8a:	in     eax,dx
  41ba8b:	dec    eax
  41ba8c:	push   ebp
  41ba8d:	ror    dh,1
  41ba8f:	jp     0x41ba9a
  41ba91:	push   es
  41ba92:	xor    eax,0x89634749
  41ba97:	test   BYTE PTR [edx-0x80],0x6e
  41ba9b:	push   ebp
  41ba9c:	adc    cl,al
  41ba9e:	retf   0xb693
  41baa1:	je     0x41bae6
  41baa3:	dec    ebx
  41baa4:	mov    dl,0xbf
  41baa6:	dec    ebx
  41baa7:	mov    ebp,0x3a786016
  41baac:	and    cl,BYTE PTR [esi]
  41baae:	mov    dl,0x9d
  41bab0:	adc    edx,DWORD PTR [esi+0x76b340f5]
  41bab6:	hlt    
  41bab7:	shr    bh,1
  41bab9:	push   ecx
  41baba:	xchg   edx,eax
  41babb:	outs   dx,DWORD PTR ds:[esi]
  41babc:	jae    0x41bb21
  41babe:	mov    ds,WORD PTR [ebp+edx*8-0x15529207]
  41bac5:	popf   
  41bac6:	and    edi,DWORD PTR [edi-0x13]
  41bac9:	int3   
  41baca:	sub    eax,0x6b565c0b
  41bacf:	stos   DWORD PTR es:[edi],eax
  41bad0:	xchg   ecx,eax
  41bad1:	and    bl,bh
  41bad3:	aad    0xb3
  41bad5:	xchg   edx,eax
  41bad6:	sbb    ah,BYTE PTR [eax+0x23]
  41bad9:	repz or DWORD PTR [eax+ebx*8+0x70],esi
  41bade:	dec    esi
  41badf:	retf   0x2c28
  41bae2:	push   ebx
  41bae3:	(bad)
  41bae6:	(bad)  
  41bae7:	dec    esi
  41bae8:	and    ch,BYTE PTR [ebx-0x51]
  41baeb:	test   al,0x9b
  41baed:	xor    edx,0xfffffff1
  41baf0:	hlt    
  41baf1:	inc    ecx
  41baf2:	mov    ds:0x492a0a45,eax
  41baf7:	pop    esi
  41baf8:	pop    ebx
  41baf9:	ss fxch st(5)
  41bafc:	cdq    
  41bafd:	jge    0x41bb62
  41baff:	neg    DWORD PTR [edx-0x46]
  41bb02:	jge    0x41bb02
  41bb04:	add    al,0xaa
  41bb06:	ja     0x41bb55
  41bb08:	jo     0x41baba
  41bb0a:	ja     0x41bb03
  41bb0c:	fwait
  41bb0d:	cmp    eax,0xd79af980
  41bb12:	pop    ebp
  41bb13:	in     eax,dx
  41bb14:	imul   esp,eax,0xfffffffb
  41bb17:	xor    BYTE PTR [edx],dl
  41bb19:	leave  
  41bb1a:	in     al,0x65
  41bb1c:	aas    
  41bb1d:	jmp    0xa002:0xe515f839
  41bb24:	xor    dh,BYTE PTR [edx]
  41bb26:	add    eax,0x7a18802d
  41bb2b:	aad    0xf7
  41bb2d:	jo     0x41bb65
  41bb2f:	inc    esp
  41bb30:	push   ds
  41bb31:	xchg   ebp,eax
  41bb32:	sbb    dh,BYTE PTR [eax]
  41bb34:	outs   dx,BYTE PTR ds:[esi]
  41bb35:	pop    esp
  41bb36:	adc    dh,al
  41bb38:	inc    esi
  41bb39:	inc    esp
  41bb3a:	mov    ds:0x67403093,al
  41bb3f:	gs addr16 addr16 jnp 0x41bb93
  41bb44:	std    
  41bb45:	mov    dh,0xd8
  41bb47:	int3   
  41bb48:	xlat   BYTE PTR ds:[ebx]
  41bb49:	xchg   esi,eax
  41bb4a:	stc    
  41bb4b:	ret    0xe906
  41bb4e:	push   es
  41bb4f:	xchg   ebx,eax
  41bb50:	or     BYTE PTR ds:0x26cdc1fd,ah
  41bb56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb57:	shr    DWORD PTR [edx],1
  41bb59:	sahf   
  41bb5a:	mov    ebx,0xf5082d86
  41bb5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb60:	mov    ah,0xd1
  41bb62:	ds sti 
  41bb64:	call   0xfeeb07f
  41bb69:	lahf   
  41bb6a:	fwait
  41bb6b:	adc    al,0x8c
  41bb6d:	rol    bh,1
  41bb6f:	nop
  41bb70:	les    edx,FWORD PTR [ecx-0xb]
  41bb73:	std    
  41bb74:	pop    esp
  41bb75:	daa    
  41bb76:	cmp    ch,BYTE PTR [eax+ebx*8-0x61]
  41bb7a:	cs sbb bh,ch
  41bb7d:	out    0x3e,al
  41bb7f:	cmp    edx,edi
  41bb81:	push   esi
  41bb82:	imul   esp,DWORD PTR [ebx-0x19],0x62
  41bb86:	push   0x4d2c07b
  41bb8b:	sbb    BYTE PTR [eax+edi*1+0x6b],dl
  41bb8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb90:	test   dl,dl
  41bb92:	cmp    ebp,ebx
  41bb94:	push   0xa6400e3
  41bb99:	stos   DWORD PTR es:[edi],eax
  41bb9a:	pop    edi
  41bb9b:	xchg   ebx,eax
  41bb9c:	xor    DWORD PTR [esi+ecx*8-0x29723929],esp
  41bba3:	mov    cl,0x48
  41bba5:	mov    ch,0x64
  41bba7:	nop
  41bba8:	inc    eax
  41bba9:	cmp    dh,bl
  41bbab:	fist   DWORD PTR [esi-0x4a3c7a80]
  41bbb1:	daa    
  41bbb2:	dec    eax
  41bbb3:	(bad)  
  41bbb4:	jg     0x41bb97
  41bbb6:	jg     0x41bb44
  41bbb8:	mov    ds:0xe947ed83,eax
  41bbbd:	repz sbb eax,0x4e32b088
  41bbc3:	fisubr WORD PTR [edi-0x47]
  41bbc6:	mov    ecx,ebx
  41bbc8:	xchg   esi,eax
  41bbc9:	ds shr bl,1
  41bbcc:	inc    ebx
  41bbcd:	fwait
  41bbce:	xlat   BYTE PTR ds:[ebx]
  41bbcf:	mov    ds:0x35e7f806,eax
  41bbd4:	xor    BYTE PTR [edi-0x7e],al
  41bbd7:	sbb    ebx,DWORD PTR [esi+0x31508bfa]
  41bbdd:	std    
  41bbde:	stos   BYTE PTR es:[edi],al
  41bbdf:	test   eax,0xe07d0ade
  41bbe4:	stos   BYTE PTR es:[edi],al
  41bbe5:	shr    DWORD PTR [esi-0xd],cl
  41bbe8:	sub    al,0x58
  41bbea:	inc    edx
  41bbeb:	mov    esp,0xa66f4e54
  41bbf0:	pop    ebx
  41bbf1:	inc    eax
  41bbf2:	adc    al,0xca
  41bbf4:	das    
  41bbf5:	or     DWORD PTR [eax-0x6e],esp
  41bbf8:	inc    ecx
  41bbf9:	ins    DWORD PTR es:[edi],dx
  41bbfa:	ror    eax,0x2c
  41bbfd:	push   esi
  41bbfe:	inc    edi
  41bbff:	sbb    eax,0x1e0cd810
  41bc04:	inc    ebp
  41bc05:	mov    ah,0x14
  41bc07:	jmp    0x41bc09
  41bc09:	fstp   st(4)
  41bc0b:	aam    0x35
  41bc0d:	addr16 cmp al,al
  41bc10:	add    bh,BYTE PTR [edx-0x4196a8e8]
  41bc16:	aad    0x46
  41bc18:	add    al,0x8c
  41bc1a:	popf   
  41bc1b:	nop
  41bc1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc1d:	cmp    esp,esi
  41bc1f:	sbb    edi,edx
  41bc21:	mov    bl,0x46
  41bc23:	push   0x36d09f10
  41bc28:	xor    dh,BYTE PTR [ebp-0x1aabf7ca]
  41bc2e:	mov    ebx,0x7d4d62bf
  41bc33:	push   ebx
  41bc34:	out    0x2b,al
  41bc36:	push   edx
  41bc37:	jp     0x41bc08
  41bc39:	leave  
  41bc3a:	and    ecx,ebp
  41bc3c:	xlat   BYTE PTR ds:[ebx]
  41bc3d:	call   0x32e64247
  41bc42:	ds adc bh,BYTE PTR cs:[esi]
  41bc46:	ins    BYTE PTR es:[edi],dx
  41bc47:	adc    BYTE PTR [edi],cl
  41bc49:	mov    ecx,0xd73b0b5
  41bc4e:	stc    
  41bc4f:	aam    0xde
  41bc51:	mov    esp,0x86b97295
  41bc56:	push   es
  41bc57:	xor    BYTE PTR [esi-0x68],dl
  41bc5a:	cmp    BYTE PTR ds:0xf00fa5a6,ch
  41bc60:	(bad)  
  41bc61:	daa    
  41bc62:	lahf   
  41bc63:	or     eax,0x2815a90a
  41bc68:	cmp    dh,BYTE PTR [ecx+0x2a]
  41bc6b:	add    esp,0x20
  41bc6e:	repz xchg bx,ax
  41bc71:	push   esp
  41bc72:	sub    BYTE PTR [edi+0x57],0xd3
  41bc76:	icebp  
  41bc77:	stos   DWORD PTR es:[edi],eax
  41bc78:	shr    DWORD PTR [ebx],0x5c
  41bc7b:	test   eax,ebx
  41bc7d:	xor    ch,cl
  41bc7f:	test   DWORD PTR [ecx-0x55],ebp
  41bc82:	jmp    0x41bc53
  41bc84:	test   BYTE PTR [esi-0x1f513eae],ah
  41bc8a:	loope  0x41bcf2
  41bc8c:	addr16 push esp
  41bc8e:	pop    esi
  41bc8f:	mov    al,ds:0x480595f9
  41bc94:	lods   eax,DWORD PTR ds:[esi]
  41bc95:	add    eax,eax
  41bc97:	mov    BYTE PTR [eax+ecx*1],dh
  41bc9a:	stos   DWORD PTR es:[edi],eax
  41bc9b:	(bad)  
  41bc9c:	out    dx,al
  41bc9d:	loopne 0x41bcf6
  41bc9f:	test   al,0x62
  41bca1:	adc    eax,0x22d4bcf1
  41bca6:	lea    eax,[edx+0x62]
  41bca9:	or     eax,0x974efa54
  41bcae:	leave  
  41bcaf:	push   ds
  41bcb0:	mov    al,ds:0xad0e71f8
  41bcb5:	push   ds
  41bcb6:	cmp    esi,esp
  41bcb8:	xor    BYTE PTR [eax-0x10],0x40
  41bcbc:	inc    edi
  41bcbd:	mov    DWORD PTR [ebp+0x28],edx
  41bcc0:	gs cmc 
  41bcc2:	fs lock (bad) 
  41bcc5:	jecxz  0x41bc8b
  41bcc7:	jnp    0x41bce4
  41bcc9:	jnp    0x41bc83
  41bccb:	inc    edi
  41bccc:	inc    esi
  41bccd:	adc    eax,0x9c5fccde
  41bcd2:	fistp  WORD PTR [ecx+0xc]
  41bcd5:	mov    cl,0xc3
  41bcd7:	cmp    ebp,eax
  41bcd9:	and    BYTE PTR [edi-0x231a0a37],ah
  41bcdf:	sbb    BYTE PTR [esi-0x49],ch
  41bce2:	mov    BYTE PTR [edx-0x569f92ae],dh
  41bce8:	fwait
  41bce9:	outs   dx,DWORD PTR ds:[esi]
  41bcea:	pushf  
  41bceb:	xchg   esp,eax
  41bcec:	fcomi  st,st(7)
  41bcee:	retf   0xab62
  41bcf1:	or     al,BYTE PTR [edx+ebx*8-0x2d]
  41bcf5:	push   es
  41bcf6:	cld    
  41bcf7:	adc    BYTE PTR ds:0x3c333438,0x6e
  41bcfe:	sbb    BYTE PTR [edi],al
  41bd00:	aam    0xec
  41bd02:	jnp    0x41bd33
  41bd04:	js     0x41bc9f
  41bd06:	adc    ch,dh
  41bd08:	add    al,0xff
  41bd0a:	rcr    DWORD PTR [ecx],1
  41bd0c:	xchg   edx,eax
  41bd0d:	ret    
  41bd0e:	pop    ss
  41bd0f:	in     eax,0xc4
  41bd11:	push   eax
  41bd12:	mov    eax,0xcbf83e2
  41bd17:	test   ecx,0x606dd27f
  41bd1d:	jp     0x41bccd
  41bd1f:	mov    edx,0xc2b8a11f
  41bd24:	mov    cl,0xff
  41bd26:	adc    ebx,DWORD PTR [ecx-0x5b]
  41bd29:	adc    bl,BYTE PTR [eax]
  41bd2b:	test   DWORD PTR [ebp+eax*1-0x1f],ebx
  41bd2f:	stos   BYTE PTR es:[edi],al
  41bd30:	xchg   ebx,eax
  41bd31:	mov    dh,0xc2
  41bd33:	retf   
  41bd34:	in     eax,dx
  41bd35:	mov    bl,0xbd
  41bd37:	loop   0x41bd8f
  41bd39:	adc    esp,eax
  41bd3b:	fidiv  WORD PTR [edx+ebp*1]
  41bd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd3f:	retf   0xf209
  41bd42:	clc    
  41bd43:	adc    dl,BYTE PTR [edi+ebp*8-0x25]
  41bd47:	cmc    
  41bd48:	cdq    
  41bd49:	jg     0x41bcee
  41bd4b:	jge    0x41bd5a
  41bd4d:	ret    0xa9ae
  41bd50:	xlat   BYTE PTR ds:[ebx]
  41bd51:	cmp    dl,0x82
  41bd54:	adc    dh,0x23
  41bd57:	pop    ebx
  41bd58:	pop    ebp
  41bd59:	enter  0x20c9,0xec
  41bd5d:	std    
  41bd5e:	inc    eax
  41bd5f:	pop    esp
  41bd60:	in     eax,dx
  41bd61:	add    bh,BYTE PTR [ebp+0x19]
  41bd64:	sub    dl,BYTE PTR [esi+edx*1+0x50762e69]
  41bd6b:	xor    dh,BYTE PTR [edx-0x5d]
  41bd6e:	mov    cl,dh
  41bd70:	xor    eax,DWORD PTR [edx+0x52dc0006]
  41bd76:	cmovl  ecx,ebp
  41bd79:	dec    ecx
  41bd7a:	and    al,BYTE PTR [ecx-0x784b50bb]
  41bd80:	std    
  41bd81:	das    
  41bd82:	popa   
  41bd83:	jb     0x41bdc5
  41bd85:	cmp    al,BYTE PTR fs:[esi-0x55]
  41bd89:	test   ecx,esp
  41bd8b:	or     ah,dl
  41bd8d:	push   0x0
  41bd8f:	sub    eax,0x52bfe233
  41bd94:	cs scas al,BYTE PTR es:[edi]
  41bd96:	mov    esi,0xfb6d516a
  41bd9b:	cmp    dh,ch
  41bd9d:	es xchg esp,eax
  41bd9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bda0:	int3   
  41bda1:	fldcw  WORD PTR [ecx]
  41bda3:	cmp    DWORD PTR [edx],edx
  41bda5:	(bad)  
  41bda6:	inc    ecx
  41bda7:	xor    al,0xea
  41bda9:	shl    DWORD PTR [ebx-0x34cbc03b],1
  41bdaf:	xchg   DWORD PTR [ecx],edx
  41bdb1:	ret    
  41bdb2:	mov    edi,0x36b0498d
  41bdb7:	inc    edx
  41bdb8:	xor    BYTE PTR [edi+0x175048dd],dh
  41bdbe:	mov    eax,0xaf931728
  41bdc3:	xlat   BYTE PTR ds:[ebx]
  41bdc4:	out    0x4a,eax
  41bdc6:	xchg   edx,eax
  41bdc7:	and    al,0x37
  41bdc9:	call   0x66d04e28
  41bdce:	mov    ds:0xadfaccd7,eax
  41bdd3:	pop    ss
  41bdd4:	leave  
  41bdd5:	shl    dl,0x81
  41bdd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd9:	push   0xf401a20e
  41bdde:	adc    DWORD PTR [edi+0x1a],ecx
  41bde1:	hlt    
  41bde2:	test   edi,edx
  41bde4:	add    DWORD PTR [esi],eax
  41bde6:	ret    0x2a89
  41bde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdea:	lea    esi,[ebx+0x19b82c4d]
  41bdf0:	imul   eax,esp,0xffffffd2
  41bdf3:	jo     0x41be59
  41bdf5:	adc    bh,dl
  41bdf7:	adc    edi,ebp
  41bdf9:	push   es
  41bdfa:	mov    al,0xa9
  41bdfc:	(bad)  
  41bdfd:	pop    ecx
  41bdfe:	cmp    DWORD PTR [esi-0x4954e175],esi
  41be04:	dec    ecx
  41be05:	mov    dl,BYTE PTR [edx-0x5a]
  41be08:	outs   dx,DWORD PTR ds:[esi]
  41be09:	or     BYTE PTR [ecx+0x64b3a728],dl
  41be0f:	adc    cl,ah
  41be11:	retf   
  41be12:	js     0x41be89
  41be14:	dec    edi
  41be15:	jns    0x41be14
  41be17:	mov    WORD PTR [edx*2+0x440c9a77],cs
  41be1e:	fnstsw WORD PTR ds:0xf3ca6125
  41be24:	imul   ecx,ebp,0xb33d6707
  41be2a:	fmul   st(7),st
  41be2c:	dec    esp
  41be2d:	scas   al,BYTE PTR es:[edi]
  41be2e:	pop    es
  41be2f:	push   cs
  41be30:	in     eax,0xfa
  41be32:	ficom  DWORD PTR [eax]
  41be34:	shl    DWORD PTR [edx+0x52],0x5a
  41be38:	push   ds
  41be39:	dec    edi
  41be3a:	inc    ebx
  41be3b:	icebp  
  41be3c:	pop    ebx
  41be3d:	cmp    al,0xcd
  41be3f:	jno    0x41beb3
  41be41:	xor    DWORD PTR [eax-0x20],esi
  41be44:	xor    eax,0xdf420940
  41be49:	or     ah,bl
  41be4b:	(bad)  [edx-0x1d]
  41be4e:	and    esi,edi
  41be50:	mov    DWORD PTR [eax],esi
  41be52:	fcom   QWORD PTR [ebp+0x598c20e8]
  41be58:	and    ch,BYTE PTR [ecx-0x38]
  41be5b:	cmp    al,cl
  41be5d:	mov    edi,0xcbf3e098
  41be62:	pop    ecx
  41be63:	mov    DWORD PTR [ebp+0x28],ecx
  41be66:	jl     0x41be90
  41be68:	cmp    esi,DWORD PTR [edi+0x2cbbd841]
  41be6e:	dec    edi
  41be6f:	push   es
  41be70:	addr16 xchg ebp,eax
  41be72:	or     DWORD PTR [ebx],0x629c5577
  41be78:	lods   al,BYTE PTR ds:[esi]
  41be79:	popf   
  41be7a:	popf   
  41be7b:	or     BYTE PTR [ecx-0x2b630256],0x51
  41be82:	jo     0x41be1d
  41be84:	and    eax,0xd7637093
  41be89:	push   esp
  41be8a:	xchg   esi,eax
  41be8b:	jno    0x41be8c
  41be8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be8e:	xlat   BYTE PTR ds:[ebx]
  41be8f:	sub    dl,bl
  41be91:	(bad)  
  41be92:	nop
  41be93:	fsubr  DWORD PTR [edx-0x1d]
  41be96:	mov    ebp,0x84ccc50
  41be9b:	mov    ebx,0xf1ca8536
  41bea0:	pop    esi
  41bea1:	xor    dl,BYTE PTR [edi]
  41bea3:	fmul   DWORD PTR [ecx-0x399f29ad]
  41bea9:	aaa    
  41beaa:	div    ecx
  41beac:	push   edi
  41bead:	popa   
  41beae:	xchg   ebx,eax
  41beaf:	xchg   BYTE PTR [ebx-0x6e],ah
  41beb2:	sbb    BYTE PTR [eax-0x61],ch
  41beb5:	jmp    0x37200aa1
  41beba:	stc    
  41bebb:	sbb    ah,BYTE PTR [esi-0x33]
  41bebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bec0:	xchg   edi,eax
  41bec1:	adc    BYTE PTR [ebx+ebp*1],ch
  41bec4:	out    dx,al
  41bec5:	sub    cl,bl
  41bec7:	shr    ebx,1
  41bec9:	mov    bh,BYTE PTR [edx]
  41becb:	test   BYTE PTR [edi+0x32],al
  41bece:	pop    esi
  41becf:	xchg   ah,bh
  41bed1:	ret    
  41bed2:	or     al,BYTE PTR [edx+0x264b46a8]
  41bed8:	jmp    0x6906efb8
  41bedd:	inc    edi
  41bede:	bound  ebx,QWORD PTR [ebx+0x20]
  41bee1:	inc    esi
  41bee2:	jns    0x41be9b
  41bee4:	rcr    BYTE PTR [esi+eax*8],cl
  41bee7:	std    
  41bee8:	mov    ebx,ss
  41beea:	es in  eax,0x9e
  41beed:	mov    BYTE PTR ds:0xb211191e,ch
  41bef3:	lods   eax,DWORD PTR ds:[esi]
  41bef4:	fist   WORD PTR [edx-0x78]
  41bef7:	mov    ch,0x6a
  41bef9:	mov    edx,0x313aa93
  41befe:	ins    DWORD PTR es:[edi],dx
  41beff:	push   es
  41bf00:	(bad)  
  41bf01:	cli    
  41bf02:	and    ebx,ebx
  41bf04:	mov    ebp,0x1e0048d
  41bf0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf0b:	push   cs
  41bf0c:	add    eax,0x1c5dfbd2
  41bf11:	xchg   edx,eax
  41bf12:	stos   BYTE PTR es:[edi],al
  41bf13:	ins    BYTE PTR es:[edi],dx
  41bf14:	in     eax,0x7c
  41bf16:	(bad)  
  41bf17:	test   esp,0x97072a42
  41bf1d:	push   esi
  41bf1e:	jle    0x41becc
  41bf20:	mov    bh,0x69
  41bf22:	jl     0x41bf75
  41bf24:	cmp    dl,BYTE PTR [edx]
  41bf26:	fs std 
  41bf28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf29:	mov    ah,0x24
  41bf2b:	fmul   st,st(0)
  41bf2d:	in     al,dx
  41bf2e:	jle    0x41bf41
  41bf30:	scas   eax,DWORD PTR es:[edi]
  41bf31:	popa   
  41bf32:	and    ebx,edi
  41bf34:	pusha  
  41bf35:	mov    al,0x48
  41bf37:	test   al,0x45
  41bf39:	stc    
  41bf3a:	jnp    0x41bf87
  41bf3c:	jb     0x41bee7
  41bf3e:	loopne 0x41bf3a
  41bf40:	jle    0x41bf45
  41bf42:	pop    edi
  41bf43:	or     eax,0xf5cced87
  41bf48:	pushf  
  41bf49:	es cdq 
  41bf4b:	jecxz  0x41bfaa
  41bf4d:	mov    ah,0x73
  41bf4f:	mov    ah,0x23
  41bf51:	(bad)  
  41bf52:	imul   ecx,esp,0xde1015ed
  41bf58:	sbb    eax,0x66ab2e18
  41bf5d:	div    DWORD PTR [ebp+0x46215f94]
  41bf63:	inc    ebx
  41bf64:	pop    ss
  41bf65:	(bad)  
  41bf66:	out    0x32,eax
  41bf68:	xchg   esp,eax
  41bf69:	hlt    
  41bf6a:	inc    ebx
  41bf6b:	push   ecx
  41bf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6d:	sub    ah,BYTE PTR [eax-0x22]
  41bf70:	popf   
  41bf71:	out    dx,eax
  41bf72:	inc    eax
  41bf73:	mov    ds:0xd860b3b,al
  41bf78:	out    dx,al
  41bf79:	cmp    esi,DWORD PTR [edi-0x3]
  41bf7c:	dec    BYTE PTR [ebx-0x33]
  41bf7f:	daa    
  41bf80:	pop    ebx
  41bf81:	popa   
  41bf82:	add    eax,0x6abc099e
  41bf87:	outs   dx,BYTE PTR ds:[esi]
  41bf88:	cwde   
  41bf89:	int    0xa0
  41bf8b:	outs   dx,BYTE PTR ds:[esi]
  41bf8c:	pop    ss
  41bf8d:	inc    esp
  41bf8e:	fmul   st,st(4)
  41bf90:	cs hlt 
  41bf92:	add    DWORD PTR [edx+0x3c],0x6be652ef
  41bf99:	push   eax
  41bf9a:	lea    edi,[ecx-0x19]
  41bf9d:	push   esp
  41bf9e:	not    DWORD PTR [ecx-0x12]
  41bfa1:	cmp    al,0xe2
  41bfa3:	sub    BYTE PTR [edx+0x56],bh
  41bfa6:	xor    cl,dl
  41bfa8:	push   es
  41bfa9:	push   esi
  41bfaa:	shl    BYTE PTR [ecx-0x64],cl
  41bfad:	rcr    BYTE PTR [ebp+0x36a4d4e7],0x9
  41bfb4:	push   es
  41bfb5:	pop    ebx
  41bfb6:	or     DWORD PTR [ebx+0x690d95d6],esi
  41bfbc:	adc    bh,BYTE PTR [esi+0x3882f8d8]
  41bfc2:	cmp    eax,0xbb361b99
  41bfc7:	jmp    0x2d2c60c2
  41bfcc:	lods   eax,DWORD PTR ds:[esi]
  41bfcd:	pop    eax
  41bfce:	mov    dl,0x55
  41bfd0:	jns    0x41c00e
  41bfd2:	mov    BYTE PTR [edi+esi*8+0x2d8727d8],0x86
  41bfda:	cs aam 0x4c
  41bfdd:	adc    al,0xc7
  41bfdf:	cmp    ebp,DWORD PTR [ebx]
  41bfe1:	and    DWORD PTR [eax+0x6d],0x5bde55d3
  41bfe8:	inc    esp
  41bfe9:	lods   eax,DWORD PTR ds:[esi]
  41bfea:	fcomp  DWORD PTR [edx+edi*2+0x79]
  41bfee:	push   edx
  41bfef:	cmp    dl,bl
  41bff1:	inc    eax
  41bff2:	inc    edi
  41bff3:	push   cs
  41bff4:	(bad)  
  41bff5:	int    0xfd
  41bff7:	sub    eax,0x68dcf238
  41bffc:	fstp   QWORD PTR [ecx]
  41bffe:	lahf   
  41bfff:	xchg   edi,eax
  41c000:	xor    BYTE PTR [edi+0x3d],ch
  41c003:	leave  
  41c004:	inc    esi
  41c005:	rcl    BYTE PTR [edx-0x6d04bc00],0x9b
  41c00c:	cmp    DWORD PTR [ebx+eiz*8-0x51339c4e],esp
  41c013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c014:	sbb    eax,0x1ddb2773
  41c019:	int3   
  41c01a:	sbb    esp,eax
  41c01c:	aad    0xb7
  41c01e:	fwait
  41c01f:	(bad)  
  41c020:	sti    
  41c021:	into   
  41c022:	sti    
  41c023:	aas    
  41c024:	adc    cl,BYTE PTR [ebx-0x5edc20e2]
  41c02a:	in     eax,0x7f
  41c02c:	arpl   WORD PTR [edi-0x2],si
  41c02f:	mov    dh,0xae
  41c031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c032:	out    dx,ax
  41c034:	sbb    eax,DWORD PTR [edi]
  41c036:	fwait
  41c037:	xchg   edi,eax
  41c038:	or     bh,BYTE PTR [edx+0x3f]
  41c03b:	fldcw  WORD PTR [edi+0x19]
  41c03e:	add    DWORD PTR [edx],ebp
  41c040:	dec    esi
  41c041:	xor    BYTE PTR [ebx+0x5d],bh
  41c044:	add    eax,0x9bfce0d7
  41c049:	icebp  
  41c04a:	xchg   esp,eax
  41c04b:	cmp    al,0xe2
  41c04d:	sub    cl,bl
  41c04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c050:	outs   dx,DWORD PTR ds:[esi]
  41c051:	and    al,0x50
  41c053:	mov    BYTE PTR [ecx+0x5df1fcdd],0xb9
  41c05a:	cmp    DWORD PTR [esi+0x731e9ad4],esi
  41c060:	mov    bh,0x54
  41c062:	add    BYTE PTR [edx],0xd7
  41c065:	mov    esp,0x40e44822
  41c06a:	sbb    DWORD PTR [ebx],0x156570b4
  41c070:	jl     0x41c0c6
  41c072:	mov    ebx,0x44297e18
  41c077:	adc    DWORD PTR [ebp+0x48],0x3c
  41c07b:	mov    WORD PTR [eax+0x85e76a0],ss
  41c081:	jo     0x41c041
  41c083:	inc    esi
  41c084:	sub    DWORD PTR [esi+0x8],esi
  41c087:	popa   
  41c088:	mov    ecx,0x358734b6
  41c08d:	mov    esp,0x91389a67
  41c092:	inc    ebx
  41c093:	loopne 0x41c03a
  41c095:	arpl   cx,ax
  41c097:	adc    al,0xd7
  41c099:	call   0x88ba:0x9bc3
  41c09f:	dec    esp
  41c0a0:	xchg   edi,eax
  41c0a1:	cmp    eax,DWORD PTR [eax-0x67]
  41c0a4:	and    al,0x7b
  41c0a6:	or     bh,cl
  41c0a8:	xor    eax,0x33576592
  41c0ad:	test   al,0xfe
  41c0af:	sti    
  41c0b0:	iret   
  41c0b1:	dec    edx
  41c0b2:	or     eax,0x982c0c05
  41c0b7:	gs pop ebx
  41c0b9:	(bad)  
  41c0ba:	aas    
  41c0bb:	stc    
  41c0bc:	sbb    edx,DWORD PTR [eax+0x13]
  41c0bf:	repz xchg ebp,eax
  41c0c1:	dec    esp
  41c0c2:	xchg   ebp,eax
  41c0c3:	mov    ecx,?
  41c0c5:	retf   
  41c0c6:	add    eax,0x86ef5f56
  41c0cb:	movzx  esi,BYTE PTR [ecx-0x13]
  41c0cf:	rol    DWORD PTR [edi+0x6445f30b],0x7
  41c0d6:	push   eax
  41c0d7:	test   eax,0x587344ca
  41c0dc:	adc    edx,ebx
  41c0de:	bound  esp,QWORD PTR [edx]
  41c0e0:	xlat   BYTE PTR ds:[ebx]
  41c0e1:	sti    
  41c0e2:	push   edi
  41c0e3:	xchg   BYTE PTR [esi-0x3aacfd5f],bl
  41c0e9:	xchg   esi,eax
  41c0ea:	mov    dl,0xc
  41c0ec:	fdiv   DWORD PTR [ecx+0x78]
  41c0ef:	addr16 enter 0xbef9,0xf7
  41c0f4:	rol    BYTE PTR [ebx+0x424bf7dd],cl
  41c0fa:	jmp    0xfb84:0x690a4736
  41c101:	push   ebx
  41c102:	in     eax,dx
  41c103:	push   ebx
  41c104:	outs   dx,DWORD PTR ds:[esi]
  41c105:	(bad)  
  41c106:	out    dx,eax
  41c107:	sti    
  41c108:	push   0xffffffeb
  41c10a:	ror    BYTE PTR [ebx+0x46],cl
  41c10d:	push   ss
  41c10e:	fst    QWORD PTR [esi+0x4b89a030]
  41c114:	and    eax,0x2949ef31
  41c119:	mov    esp,ebp
  41c11b:	xchg   DWORD PTR [ebp+0x68],ebx
  41c11e:	sub    DWORD PTR [edx],esi
  41c120:	jbe    0x41c11a
  41c122:	imul   ebx,DWORD PTR ds:[ebx],0xffffffce
  41c126:	inc    edi
  41c127:	outs   dx,DWORD PTR ds:[esi]
  41c128:	mov    bl,0x3a
  41c12a:	(bad)
  41c12d:	inc    ecx
  41c12e:	shl    DWORD PTR [ecx+0x1f],0x0
  41c132:	aas    
  41c133:	in     al,0x10
  41c135:	sti    
  41c136:	mov    ds:0x7dd94757,eax
  41c13b:	sub    al,0x42
  41c13d:	pushf  
  41c13e:	inc    edi
  41c13f:	js     0x41c114
  41c141:	rol    DWORD PTR [ebp-0x29d1f109],0xd9
  41c148:	ror    ecx,1
  41c14a:	sub    DWORD PTR [ecx-0x40ed0699],edx
  41c150:	aaa    
  41c151:	dec    ecx
  41c152:	loopne 0x41c0d7
  41c154:	(bad)  
  41c155:	dec    esi
  41c156:	cld    
  41c157:	mov    al,ds:0x8e4dfb1
  41c15c:	xchg   esp,eax
  41c15d:	shl    DWORD PTR [edi-0x643083e5],0x6c
  41c164:	jo     0x41c1af
  41c166:	shr    DWORD PTR [ebp+0x2d339db6],cl
  41c16c:	jmp    0x41c190
  41c16e:	sub    bl,BYTE PTR ds:0x59738646
  41c174:	xchg   edx,eax
  41c175:	xor    DWORD PTR [edi],esi
  41c177:	mov    ds:0xa475bbff,al
  41c17c:	sub    DWORD PTR [edx-0x7547020b],edx
  41c182:	pop    ebx
  41c183:	jns    0x41c17c
  41c185:	pop    ebp
  41c186:	scas   al,BYTE PTR es:[edi]
  41c187:	jae    0x41c17a
  41c189:	inc    eax
  41c18a:	imul   ebp,ebx,0xffffffb5
  41c18d:	mov    cl,0x4c
  41c18f:	int3   
  41c190:	jp     0x41c1f1
  41c192:	add    DWORD PTR [edx+0x28],0x50
  41c196:	in     eax,0xbf
  41c198:	dec    eax
  41c199:	les    edi,FWORD PTR es:[edx+0x32]
  41c19d:	push   edi
  41c19e:	jle    0x41c209
  41c1a0:	(bad)  
  41c1a1:	imul   edx,DWORD PTR [edx-0x39876c10],0x34
  41c1a8:	xor    al,0x55
  41c1aa:	cmp    eax,0x374c97ff
  41c1af:	push   eax
  41c1b0:	adc    bl,0x48
  41c1b3:	call   0xbb03:0x44865839
  41c1ba:	push   ds
  41c1bb:	mov    cl,0xc1
  41c1bd:	xchg   ecx,eax
  41c1be:	dec    ebx
  41c1bf:	in     eax,0x21
  41c1c1:	sbb    al,0x5e
  41c1c3:	mov    dh,0x5d
  41c1c5:	mov    ebp,0x417f8f5e
  41c1ca:	ret    
  41c1cb:	xchg   ebp,eax
  41c1cc:	pop    eax
  41c1cd:	pop    edx
  41c1ce:	and    al,0xb9
  41c1d0:	adc    eax,0xd34ac567
  41c1d5:	push   ds
  41c1d6:	or     BYTE PTR [eax-0x301f7c5b],dh
  41c1dc:	dec    ecx
  41c1dd:	fmul   DWORD PTR [ebx+0x11]
  41c1e0:	retf   
  41c1e1:	in     eax,dx
  41c1e2:	jge    0x41c1c1
  41c1e4:	add    esp,DWORD PTR [ebx+0x43]
  41c1e7:	push   edx
  41c1e8:	loopne 0x41c263
  41c1ea:	sbb    BYTE PTR [eax+ebp*4],cl
  41c1ed:	jns    0x41c20e
  41c1ef:	jle    0x41c26c
  41c1f1:	xchg   DWORD PTR [ebp-0x41be4ee5],eax
  41c1f7:	push   edi
  41c1f8:	daa    
  41c1f9:	scas   al,BYTE PTR es:[edi]
  41c1fa:	repnz (bad) 
  41c1fc:	scas   al,BYTE PTR es:[edi]
  41c1fd:	mov    esi,0x5dc0c070
  41c202:	cmp    eax,0x60555e60
  41c207:	ret    0x55a3
  41c20a:	push   ecx
  41c20b:	push   0xffffff8b
  41c20d:	mov    ch,0x9c
  41c20f:	mov    dl,0x38
  41c211:	jae    0x41c22f
  41c213:	xchg   esi,eax
  41c214:	mov    BYTE PTR [ecx-0x210b4246],bl
  41c21a:	cmp    DWORD PTR [edx-0x5361cd1a],esp
  41c220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c221:	dec    eax
  41c222:	add    ch,dh
  41c224:	out    dx,eax
  41c225:	or     BYTE PTR [eax-0x6f9719ed],cl
  41c22b:	xchg   edi,eax
  41c22c:	xchg   ecx,eax
  41c22d:	in     al,0xe9
  41c22f:	outs   dx,BYTE PTR ds:[esi]
  41c230:	jmp    0xeae9ac11
  41c235:	add    al,0x81
  41c237:	pop    esi
  41c238:	and    DWORD PTR [edx+0x71],0xffffff8f
  41c23c:	sub    esp,0xffffffc0
  41c23f:	add    DWORD PTR [ebx*1-0x5405aa61],esp
  41c246:	pop    esp
  41c247:	push   0x4c212802
  41c24c:	or     bl,BYTE PTR [ebp+0x5f]
  41c24f:	sar    DWORD PTR [ebx+0x45],0xbf
  41c253:	inc    DWORD PTR [esi]
  41c255:	xor    al,0x6b
  41c257:	std    
  41c258:	les    esi,FWORD PTR [ebp-0x77]
  41c25b:	retf   0x99c0
  41c25e:	clc    
  41c25f:	mov    WORD PTR [ecx-0x52],?
  41c262:	push   eax
  41c263:	push   ebp
  41c264:	and    cl,al
  41c266:	push   ebx
  41c267:	and    BYTE PTR [ebp-0x51850db6],bh
  41c26d:	xchg   ebp,eax
  41c26e:	xchg   DWORD PTR [ebx+esi*1-0x27057a1a],ebp
  41c275:	jne    0x41c234
  41c277:	fldcw  WORD PTR [ebp+0x5c]
  41c27a:	aad    0x47
  41c27c:	xchg   edi,eax
  41c27d:	inc    esp
  41c27e:	nop
  41c27f:	daa    
  41c280:	hlt    
  41c281:	or     BYTE PTR [edi-0xa],0x6b
  41c285:	mul    DWORD PTR [ecx-0x6b]
  41c288:	or     al,0x7
  41c28a:	cmp    ecx,DWORD PTR [ebp+0x78]
  41c28d:	inc    ebp
  41c28e:	stos   BYTE PTR es:[edi],al
  41c28f:	sbb    bl,BYTE PTR [eax-0x11]
  41c292:	lds    ebp,FWORD PTR [esi-0x194291fc]
  41c298:	mov    ch,0xec
  41c29a:	test   DWORD PTR [ecx],0xc9e9e6f1
  41c2a0:	ss ja  0x41c252
  41c2a3:	(bad)
  41c2a8:	aad    0x8e
  41c2aa:	fidiv  DWORD PTR [esi+edi*1-0xbc47701]
  41c2b1:	daa    
  41c2b2:	clc    
  41c2b3:	out    0x74,al
  41c2b5:	ror    BYTE PTR [edx-0x35714e9],1
  41c2bb:	xor    edx,DWORD PTR [ebp-0x45]
  41c2be:	jge    0x41c29e
  41c2c0:	lods   eax,DWORD PTR ds:[esi]
  41c2c1:	std    
  41c2c2:	sbb    dh,ah
  41c2c4:	shr    DWORD PTR [ecx-0x72],0x2
  41c2c8:	shr    DWORD PTR [esi+0x6d],1
  41c2cb:	or     cl,BYTE PTR [ebp-0x3]
  41c2ce:	(bad)  
  41c2cf:	(bad)  
  41c2d0:	loope  0x41c313
  41c2d2:	icebp  
  41c2d3:	aam    0xfa
  41c2d5:	cmp    eax,0x62e73e68
  41c2da:	adc    eax,0x3a2a0a5a
  41c2df:	aaa    
  41c2e0:	int    0x5e
  41c2e2:	jecxz  0x41c2bd
  41c2e4:	stos   BYTE PTR es:[edi],al
  41c2e5:	push   cs
  41c2e6:	push   esp
  41c2e7:	call   0x7040:0x2fec488d
  41c2ee:	out    0x75,eax
  41c2f0:	pop    edx
  41c2f1:	dec    esp
  41c2f2:	arpl   ax,sp
  41c2f4:	cmp    BYTE PTR [edx],al
  41c2f6:	inc    ebp
  41c2f7:	popf   
  41c2f8:	test   al,0x6d
  41c2fa:	add    BYTE PTR [esi-0x5f9a1bbd],bl
  41c300:	(bad)  
  41c301:	mov    ebp,0xb6c987d3
  41c306:	call   DWORD PTR [eax-0x40b98026]
  41c30c:	dec    edi
  41c30d:	push   es
  41c30e:	xor    DWORD PTR [ebp-0x6a156668],edi
  41c314:	je     0x41c358
  41c316:	xor    ch,BYTE PTR [ebx]
  41c318:	jbe    0x41c340
  41c31a:	sbb    DWORD PTR [esi-0x29],0x73
  41c31e:	mov    ebp,0x99ee0448
  41c323:	sub    BYTE PTR ds:0xbb05b76d,dh
  41c329:	push   es
  41c32a:	dec    ebx
  41c32b:	mov    bh,0xdf
  41c32d:	test   DWORD PTR [eax+0x7d],ebp
  41c330:	mov    edx,0x4444032c
  41c335:	dec    ebp
  41c336:	inc    ecx
  41c337:	xchg   ebx,eax
  41c338:	dec    esp
  41c339:	call   0xca29ff0
  41c33e:	and    eax,0xb7746a22
  41c343:	xor    al,0x46
  41c345:	dec    ecx
  41c346:	popa   
  41c347:	and    cl,BYTE PTR [eax+0x41]
  41c34a:	imul   ebx,DWORD PTR [ebx-0x5a],0xb2ce5106
  41c351:	sbb    BYTE PTR [ecx+0x2efa668],dl
  41c357:	rcr    BYTE PTR [eax-0x11],cl
  41c35a:	push   ss
  41c35b:	add    DWORD PTR [esi+ebx*2+0x614c3d1e],ebp
  41c362:	dec    edi
  41c363:	nop
  41c364:	test   DWORD PTR gs:[ebp+0x13],esp
  41c368:	lahf   
  41c369:	add    esi,DWORD PTR [esi+esi*1-0x13]
  41c36d:	push   eax
  41c36e:	pop    edi
  41c36f:	jbe    0x41c3f0
  41c371:	cmp    al,0x29
  41c373:	mov    dh,0xcd
  41c375:	mov    ecx,0x417a9ef6
  41c37a:	call   0xa8c6:0xe5349088
  41c381:	add    dl,cl
  41c383:	clc    
  41c384:	not    BYTE PTR [edi-0x31]
  41c387:	adc    eax,0x6280f062
  41c38c:	mov    eax,ds:0x1b52d76b
  41c391:	into   
  41c392:	sub    ch,BYTE PTR [edi-0x59720bf]
  41c398:	scas   al,BYTE PTR es:[edi]
  41c399:	mov    cl,0x21
  41c39b:	shl    esi,1
  41c39d:	div    BYTE PTR [ecx-0x7c]
  41c3a0:	or     BYTE PTR [edx+0x2109ea97],ch
  41c3a6:	mov    edx,edi
  41c3a8:	sub    eax,0xb52c3ac7
  41c3ad:	push   edx
  41c3ae:	mov    edi,0x48d27158
  41c3b3:	test   esi,ecx
  41c3b5:	pop    edx
  41c3b6:	sbb    eax,DWORD PTR [edi]
  41c3b8:	xchg   edi,eax
  41c3b9:	test   esp,edi
  41c3bb:	push   edx
  41c3bc:	enter  0x85cb,0x3d
  41c3c0:	or     al,0xd
  41c3c2:	mov    esp,DWORD PTR [ebx+ebp*4-0x23dc1094]
  41c3c9:	sub    al,0x8f
  41c3cb:	or     esp,DWORD PTR [esi]
  41c3cd:	jmp    0x41c38a
  41c3cf:	add    edx,edx
  41c3d1:	sub    esp,DWORD PTR [esi+0x50a0587f]
  41c3d7:	loopne 0x41c3e7
  41c3d9:	pusha  
  41c3da:	mov    esi,0x4efcdc8e
  41c3df:	mov    edi,DWORD PTR [ebp-0x77]
  41c3e2:	and    eax,DWORD PTR [ebx]
  41c3e4:	aad    0xe1
  41c3e6:	retf   0xb20b
  41c3e9:	sub    DWORD PTR [esi],ecx
  41c3eb:	call   0x9ee7:0x542b224e
  41c3f2:	pop    ebx
  41c3f3:	rol    ebx,0xfb
  41c3f6:	cmc    
  41c3f7:	out    dx,al
  41c3f8:	xor    BYTE PTR [edx+0x44],bl
  41c3fb:	aas    
  41c3fc:	jne    0x41c470
  41c3fe:	out    dx,eax
  41c3ff:	and    bl,BYTE PTR [ebx+0x5a]
  41c402:	add    BYTE PTR [eax],0x9b
  41c405:	mov    esp,0x7aefefac
  41c40a:	je     0x41c47f
  41c40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c40d:	cld    
  41c40e:	ins    DWORD PTR es:[edi],dx
  41c40f:	xor    ah,ah
  41c411:	pop    edi
  41c412:	lods   al,BYTE PTR ds:[esi]
  41c413:	pushf  
  41c414:	stc    
  41c415:	sbb    bl,BYTE PTR [ebp+ebx*8-0x2503ddac]
  41c41c:	xor    al,0x51
  41c41e:	sahf   
  41c41f:	scas   al,BYTE PTR es:[edi]
  41c420:	fistp  DWORD PTR [ebp+eiz*8-0x1e]
  41c424:	psubsw mm7,QWORD PTR [edi-0x63f39102]
  41c42b:	jl     0x41c49a
  41c42d:	enter  0x8dd0,0x9d
  41c431:	imul   ebx,DWORD PTR [ebx-0x54],0x38cbe76f
  41c438:	lods   al,BYTE PTR ds:[esi]
  41c439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43a:	xor    eax,0x9e72d41f
  41c43f:	ret    0xb337
  41c442:	inc    ecx
  41c443:	mov    esp,0xbf323fd7
  41c448:	aaa    
  41c449:	mov    ebp,0x7bc70a6d
  41c44e:	jl     0x41c3fc
  41c450:	mov    bh,0x0
  41c452:	sbb    eax,0x7d42462f
  41c457:	mov    esp,0x77d4b672
  41c45c:	mov    WORD PTR [ecx-0x39],ds
  41c45f:	mov    ss,WORD PTR [edx+0x74]
  41c462:	mov    ds:0x2ceffe4e,eax
  41c467:	inc    ebx
  41c468:	add    DWORD PTR [ebx+0x4393d4df],ebp
  41c46e:	jns    0x41c45c
  41c470:	dec    esp
  41c471:	sbb    al,0x9c
  41c473:	call   0x5cc1:0x7cf1b393
  41c47a:	in     eax,0xd
  41c47c:	jp     0x41c439
  41c47e:	scas   al,BYTE PTR es:[edi]
  41c47f:	xchg   edx,eax
  41c480:	sti    
  41c481:	lds    ebx,FWORD PTR [ebx+ecx*4]
  41c484:	lods   eax,DWORD PTR ds:[esi]
  41c485:	push   ebp
  41c486:	push   ebx
  41c487:	repz jmp 0xa263e1dc
  41c48d:	push   edx
  41c48e:	adc    BYTE PTR [ecx+ebx*2+0x6cc8213d],cl
  41c495:	and    DWORD PTR [ecx],edi
  41c497:	outs   dx,BYTE PTR ds:[esi]
  41c498:	test   eax,0x89eca8ca
  41c49d:	mov    esi,0x68590e08
  41c4a2:	retf   
  41c4a3:	(bad)  
  41c4a4:	stos   BYTE PTR es:[edi],al
  41c4a5:	mov    esi,gs
  41c4a7:	arpl   WORD PTR ds:0xf1fb63a1,sp
  41c4ad:	or     al,0x9e
  41c4af:	push   ecx
  41c4b0:	fbld   TBYTE PTR [ebx]
  41c4b2:	xor    BYTE PTR [ecx+0x427cfca4],bh
  41c4b8:	mov    dh,0x28
  41c4ba:	stos   DWORD PTR es:[edi],eax
  41c4bb:	inc    ecx
  41c4bc:	pop    eax
  41c4bd:	ror    DWORD PTR [edi],0x44
  41c4c0:	pop    eax
  41c4c1:	xlat   BYTE PTR ds:[ebx]
  41c4c2:	out    0x81,al
  41c4c4:	inc    edx
  41c4c5:	popf   
  41c4c6:	lahf   
  41c4c7:	push   DWORD PTR [eax]
  41c4c9:	fild   DWORD PTR [ebx+0x6ae83079]
  41c4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4d0:	mov    ebp,0xcb5a1ff5
  41c4d5:	in     eax,dx
  41c4d6:	out    dx,al
  41c4d7:	aam    0xc
  41c4d9:	out    dx,al
  41c4da:	or     bh,BYTE PTR ds:0xe1bc3816
  41c4e0:	mov    dh,BYTE PTR [edx+0x23]
  41c4e3:	dec    esi
  41c4e4:	aas    
  41c4e5:	into   
  41c4e6:	jns    0x41c53a
  41c4e8:	nop
  41c4e9:	xchg   ebx,eax
  41c4ea:	pop    ebx
  41c4eb:	pop    esi
  41c4ec:	dec    edx
  41c4ed:	iret   
  41c4ee:	les    eax,FWORD PTR [esi-0x53f8be79]
  41c4f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4f5:	pmaddwd mm1,QWORD PTR [edx+0x4d7fc218]
  41c4fc:	aas    
  41c4fd:	push   0x4f
  41c4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c500:	aad    0x88
  41c502:	(bad)  
  41c503:	aam    0x2b
  41c505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c506:	sbb    eax,0x99d9596
  41c50b:	aam    0x40
  41c50d:	es int3 
  41c50f:	cmp    esp,DWORD PTR [ebp+0x39]
  41c512:	dec    eax
  41c513:	cmp    BYTE PTR [esi-0x36],cl
  41c516:	fidiv  WORD PTR [edi-0x26e1219d]
  41c51c:	mov    bl,0x54
  41c51e:	das    
  41c51f:	adc    DWORD PTR [eax-0x45cc9d79],0x32266180
  41c529:	xor    eax,0xa4267efa
  41c52e:	mov    ecx,0xa36ed79f
  41c533:	addr16 push edx
  41c535:	pop    esp
  41c536:	leave  
  41c537:	or     DWORD PTR [eax],0x67
  41c53a:	mov    ecx,0x53a500fb
  41c53f:	fwait
  41c540:	repnz and BYTE PTR [esi+0x68],bl
  41c544:	push   edi
  41c545:	xor    ch,BYTE PTR [ebp-0x311f7ac4]
  41c54b:	cmp    al,0xb2
  41c54d:	hlt    
  41c54e:	data16 addr16 mov dl,0xfc
  41c552:	pop    ebx
  41c553:	aad    0x35
  41c555:	push   ecx
  41c556:	jmp    0x9d8b8a68
  41c55b:	sbb    ecx,DWORD PTR [edx-0x477f6462]
  41c561:	mov    bh,0xa0
  41c563:	push   0x44f202e5
  41c568:	pop    ebp
  41c569:	jle    0x41c51f
  41c56b:	xor    BYTE PTR [eax+0x23],dl
  41c56e:	int3   
  41c56f:	inc    edi
  41c570:	push   edx
  41c571:	push   edi
  41c572:	mov    edi,0xe9f24db7
  41c577:	mov    ah,0xef
  41c579:	stos   DWORD PTR es:[edi],eax
  41c57a:	push   0xffffff92
  41c57c:	mov    edx,0x615a485c
  41c581:	or     esi,0x7bf16958
  41c587:	pusha  
  41c588:	pop    edx
  41c589:	xchg   ecx,eax
  41c58a:	stos   DWORD PTR es:[edi],eax
  41c58b:	jae    0x41c52b
  41c58d:	or     DWORD PTR [ecx-0x78f03f],0x46
  41c594:	xor    eax,0x5be41656
  41c599:	add    al,cl
  41c59b:	mov    ah,0x8a
  41c59d:	inc    esi
  41c59e:	iret   
  41c59f:	dec    ecx
  41c5a0:	leave  
  41c5a1:	(bad)  
  41c5a2:	loope  0x41c551
  41c5a4:	jecxz  0x41c5fd
  41c5a6:	dec    ebp
  41c5a7:	jg     0x41c59f
  41c5a9:	imul   esp,DWORD PTR [eax+0x210443d6],0xab8546ac
  41c5b3:	outs   dx,BYTE PTR cs:[esi]
  41c5b5:	loope  0x41c57a
  41c5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b8:	cs (bad) 
  41c5ba:	jo     0x41c625
  41c5bc:	inc    BYTE PTR [ebx]
  41c5be:	(bad)  
  41c5bf:	fs jno 0x41c61c
  41c5c2:	inc    eax
  41c5c3:	jg     0x41c5aa
  41c5c5:	mov    WORD PTR [eax+0x1c],ss
  41c5c8:	les    edi,FWORD PTR [edi-0x61e8a753]
  41c5ce:	pause  
  41c5d0:	retf   
  41c5d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5d2:	xchg   esi,eax
  41c5d3:	dec    esp
  41c5d4:	inc    ebp
  41c5d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5d6:	call   0x7809:0xfc2b9018
  41c5dd:	and    al,0x3e
  41c5df:	test   al,0xd7
  41c5e1:	cmp    bl,BYTE PTR [edx+edi*4-0x52bf7b20]
  41c5e8:	js     0x41c65e
  41c5ea:	sub    eax,0xbfbc0b21
  41c5ef:	jle    0x41c646
  41c5f1:	cmp    eax,0xde5ccfb8
  41c5f6:	fbstp  TBYTE PTR [eax-0x5f491ec8]
  41c5fc:	loope  0x41c612
  41c5fe:	aam    0xc4
  41c600:	add    BYTE PTR gs:[esi],ch
  41c603:	shl    eax,0x7b
  41c606:	in     al,0x5c
  41c608:	and    edi,edx
  41c60a:	or     BYTE PTR [edi+ecx*2-0xf],al
  41c60e:	fisubr DWORD PTR [ecx-0x6c]
  41c611:	repz rol DWORD PTR [ebp+0x41],1
  41c615:	shl    BYTE PTR [ecx-0x69d6bfee],0x88
  41c61c:	fistp  DWORD PTR [esi+0x35]
  41c61f:	mov    esp,0x4e2983c0
  41c624:	push   esi
  41c625:	push   ebp
  41c626:	dec    edi
  41c627:	stc    
  41c628:	adc    edi,edx
  41c62a:	(bad)  
  41c62c:	jnp    0x41c5e1
  41c62e:	test   BYTE PTR [ebx],0xc5
  41c631:	mov    bh,0x35
  41c633:	adc    DWORD PTR ds:0x5fb21e2a,ebp
  41c639:	call   0xb5341ece
  41c63e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c640:	push   ebx
  41c641:	or     ch,BYTE PTR [eax-0x49]
  41c644:	mov    eax,edi
  41c646:	call   0xdc67482
  41c64b:	jnp    0x41c5d8
  41c64d:	je     0x41c683
  41c64f:	rcl    BYTE PTR [ebp-0x2d],1
  41c652:	dec    ebp
  41c653:	stc    
  41c654:	mov    ecx,0xe5f7e762
  41c659:	repz lds ecx,FWORD PTR [eax]
  41c65c:	cmp    al,0xa0
  41c65e:	cld    
  41c65f:	aas    
  41c660:	rol    DWORD PTR [esi-0x59],cl
  41c663:	clc    
  41c664:	xor    dl,ah
  41c666:	cmc    
  41c667:	out    0x3,al
  41c669:	dec    edi
  41c66a:	fld    st(3)
  41c66c:	pop    esi
  41c66d:	push   ds
  41c66e:	dec    eax
  41c66f:	lods   eax,DWORD PTR ds:[esi]
  41c670:	xchg   ecx,eax
  41c671:	dec    eax
  41c672:	out    0x3,al
  41c674:	inc    ebx
  41c675:	dec    esp
  41c676:	push   ds
  41c677:	cmp    DWORD PTR [ebx+0x74],esp
  41c67a:	nop
  41c67b:	push   ss
  41c67c:	imul   edi,DWORD PTR ds:0xbbb9e925,0x193f50e6
  41c686:	xchg   DWORD PTR [eax+0x6a93b5cc],edx
  41c68c:	jl     0x41c6ca
  41c68e:	test   BYTE PTR [edi+0x11],cl
  41c691:	adc    eax,0x6323dac1
  41c696:	imul   ecx,DWORD PTR [edx],0x18
  41c699:	push   esi
  41c69a:	retf   0x11f7
  41c69d:	mov    ebp,0x308c2215
  41c6a2:	sahf   
  41c6a3:	pop    es
  41c6a4:	adc    eax,DWORD PTR ds:0x241d35b7
  41c6aa:	popa   
  41c6ab:	bound  edx,QWORD PTR [edi+0x29]
  41c6ae:	lods   al,BYTE PTR ds:[esi]
  41c6af:	test   DWORD PTR ds:0xe9c9a716,ebx
  41c6b6:	mov    ds:0x9d2ad15c,al
  41c6bb:	test   BYTE PTR [ebx-0x6b],dh
  41c6be:	inc    esi
  41c6bf:	sbb    ch,BYTE PTR [edx]
  41c6c1:	fstp   QWORD PTR [eax-0x70]
  41c6c4:	and    esi,ebp
  41c6c6:	cmp    eax,0x159f3a9a
  41c6cb:	or     eax,0xb0cbcfe1
  41c6d0:	mov    gs,ecx
  41c6d2:	popf   
  41c6d3:	call   0x76d4:0x7640f1a1
  41c6da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6db:	xchg   eax,esp
  41c6dd:	push   esp
  41c6de:	mov    bh,0xf9
  41c6e0:	in     eax,0x71
  41c6e2:	andnps xmm1,XMMWORD PTR [ecx-0x5b]
  41c6e6:	scas   al,BYTE PTR es:[edi]
  41c6e7:	in     eax,0xfb
  41c6e9:	inc    edi
  41c6ea:	std    
  41c6eb:	jno    0x41c70d
  41c6ed:	and    ah,BYTE PTR [esi+0x45fed3b1]
  41c6f3:	xchg   DWORD PTR [edx-0x57a4af19],esi
  41c6f9:	xor    eax,0x869cfa94
  41c6fe:	xor    bl,BYTE PTR [eax+0x39b2d036]
  41c704:	xchg   ebp,eax
  41c705:	outs   dx,DWORD PTR ds:[esi]
  41c706:	or     bl,BYTE PTR [eax-0x1d23568]
  41c70c:	fcomp  DWORD PTR [ecx]
  41c70e:	mov    esi,gs
  41c710:	mov    ?,WORD PTR [ebx+0x1e]
  41c713:	cs xchg ebp,eax
  41c715:	div    BYTE PTR [edx+0x4ea08fbd]
  41c71b:	adc    al,0x4c
  41c71d:	lods   eax,DWORD PTR ds:[esi]
  41c71e:	mov    ds:0xe5dcb986,eax
  41c723:	pop    ebp
  41c724:	test   BYTE PTR [edi],bl
  41c726:	mov    esp,0xdab77e55
  41c72b:	mov    ecx,0xf826bef7
  41c730:	sbb    esp,DWORD PTR [ecx]
  41c732:	jmp    0xa9c2:0x529728b3
  41c739:	push   ss
  41c73a:	stc    
  41c73b:	out    dx,eax
  41c73c:	stos   DWORD PTR es:[edi],eax
  41c73d:	push   eax
  41c73e:	jle    0x41c766
  41c740:	mov    ebx,?
  41c742:	push   ebx
  41c743:	xchg   ebx,eax
  41c744:	or     al,0x27
  41c746:	nop
  41c747:	inc    eax
  41c748:	jmp    0x13123129
  41c74d:	int    0x1c
  41c74f:	retf   0x6a72
  41c752:	push   ebx
  41c753:	enter  0xee24,0x33
  41c757:	pop    eax
  41c758:	sbb    ah,cl
  41c75a:	out    0x78,al
  41c75c:	dec    edx
  41c75d:	in     al,0x76
  41c75f:	push   edi
  41c760:	repnz mov cl,0x55
  41c763:	aam    0x3c
  41c765:	sbb    DWORD PTR [eax],edx
  41c767:	test   eax,0xeaac7c1d
  41c76c:	outs   dx,BYTE PTR ds:[esi]
  41c76d:	out    dx,al
  41c76e:	xor    eax,eax
  41c770:	hlt    
  41c771:	mov    ch,0xd7
  41c773:	or     eax,0x7cc9edf7
  41c778:	ins    DWORD PTR es:[edi],dx
  41c779:	aaa    
  41c77a:	(bad)  
  41c77b:	cmp    eax,0x4d74fa3d
  41c780:	(bad)  
  41c781:	lea    esi,[edi]
  41c783:	jb     0x41c797
  41c785:	loopne 0x41c71e
  41c787:	pop    esp
  41c788:	xchg   ebp,eax
  41c789:	inc    esi
  41c78a:	test   eax,0x64f771b1
  41c78f:	adc    bh,BYTE PTR [eax-0x39]
  41c792:	in     al,dx
  41c793:	lock shr BYTE PTR [edi],0x68
  41c797:	sbb    al,0x7a
  41c799:	push   fs
  41c79b:	in     eax,0x39
  41c79d:	es enter 0xca05,0x3b
  41c7a2:	push   edx
  41c7a3:	inc    esi
  41c7a4:	outs   dx,BYTE PTR ds:[esi]
  41c7a5:	icebp  
  41c7a6:	inc    DWORD PTR [edi+0x53]
  41c7a9:	sti    
  41c7aa:	adc    dl,BYTE PTR [eax-0x27]
  41c7ad:	cmp    DWORD PTR [edi+0x22],0x65a15175
  41c7b4:	pop    esi
  41c7b5:	mov    ecx,0x833b5de4
  41c7ba:	hlt    
  41c7bb:	cwde   
  41c7bc:	or     esi,ebp
  41c7be:	clc    
  41c7bf:	mov    bl,0xa3
  41c7c1:	jmp    0x41c81f
  41c7c3:	gs sbb eax,0x5475b98d
  41c7c9:	call   0x6b3d030f
  41c7ce:	daa    
  41c7cf:	and    DWORD PTR [esi+0x22],edi
  41c7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7d3:	pop    edi
  41c7d4:	pop    edi
  41c7d5:	(bad)  
  41c7d6:	out    0xb5,eax
  41c7d8:	(bad)  
  41c7d9:	fstp   DWORD PTR [esi-0x2dfd547f]
  41c7df:	fidiv  DWORD PTR [edi+0x73]
  41c7e2:	jmp    0xc1ac:0x3585d2d
  41c7e9:	enter  0x6f1c,0x38
  41c7ed:	pop    ebx
  41c7ee:	dec    DWORD PTR [ecx]
  41c7f0:	fnstsw WORD PTR [edx]
  41c7f2:	jg     0x41c857
  41c7f4:	xor    eax,0x44448ca4
  41c7f9:	add    eax,0xefe516c
  41c7fe:	(bad)  
  41c7ff:	sbb    edx,edx
  41c801:	aam    0xd2
  41c803:	int3   
  41c804:	test   eax,0x9ceebc00
  41c809:	lahf   
  41c80a:	xchg   ebp,eax
  41c80b:	in     al,0x7b
  41c80d:	fldcw  WORD PTR [edi]
  41c80f:	push   edi
  41c810:	nop
  41c811:	cmp    bh,dl
  41c813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c814:	mov    cl,0xf8
  41c816:	pop    eax
  41c817:	dec    DWORD PTR [ecx+0x45]
  41c81a:	imul   edx,esi,0xc457c7e2
  41c820:	jle    0x41c7f7
  41c822:	enter  0x386f,0xd1
  41c826:	and    eax,0xe6499549
  41c82b:	mov    ds:0x2b94b549,eax
  41c830:	add    BYTE PTR [ebp-0x15],al
  41c833:	pop    ds
  41c834:	repz popw es
  41c837:	xchg   ecx,eax
  41c838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c839:	dec    ecx
  41c83a:	sahf   
  41c83b:	ret    
  41c83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c83d:	int3   
  41c83e:	add    DWORD PTR [edi+edi*1-0x4ad16457],ecx
  41c845:	mov    eax,DWORD PTR [edx+0x37]
  41c848:	(bad)  
  41c849:	sbb    DWORD PTR [ecx-0x31baff1],edx
  41c84f:	stos   BYTE PTR es:[edi],al
  41c850:	pop    ss
  41c851:	out    dx,al
  41c852:	out    0xeb,al
  41c854:	pop    esp
  41c855:	into   
  41c856:	mov    edx,0x619482b3
  41c85b:	into   
  41c85c:	pop    ebx
  41c85d:	pop    edi
  41c85e:	mov    BYTE PTR [edi+0x487de703],ch
  41c864:	adc    al,0x42
  41c866:	loope  0x41c8af
  41c868:	pop    esp
  41c869:	(bad)  
  41c86a:	es cdq 
  41c86c:	xchg   ebx,eax
  41c86d:	cwde   
  41c86e:	aaa    
  41c86f:	mov    al,0x4
  41c871:	pop    ds
  41c872:	sub    BYTE PTR [ebp-0x4],dh
  41c875:	ds stos DWORD PTR es:[edi],eax
  41c877:	cmp    al,0xbc
  41c879:	lock cmp DWORD PTR [eax-0x634caea1],0x17
  41c881:	push   esp
  41c882:	xchg   ebp,eax
  41c883:	jnp    0x41c849
  41c885:	jns    0x41c8e0
  41c887:	inc    ebx
  41c888:	cld    
  41c889:	shl    BYTE PTR ds:0xeaf505b,0x18
  41c890:	cli    
  41c891:	call   0x3fe:0x3e8c3b
  41c898:	or     al,0x38
  41c89a:	ins    DWORD PTR es:[edi],dx
  41c89b:	sub    DWORD PTR [ecx],esp
  41c89d:	sti    
  41c89e:	and    eax,0x1af72b3c
  41c8a3:	retf   0x8473
  41c8a6:	jmp    0x4d81b741
  41c8ab:	add    DWORD PTR es:[edi+edi*1+0x42e15b7f],ebp
  41c8b3:	(bad)  [esi+ebx*4+0x528f8487]
  41c8ba:	out    0xc0,eax
  41c8bc:	adc    eax,DWORD PTR [eax-0x7f]
  41c8bf:	cmp    eax,0x6d32451b
  41c8c4:	lods   al,BYTE PTR ds:[esi]
  41c8c5:	loope  0x41c8ef
  41c8c7:	in     al,0x76
  41c8c9:	hlt    
  41c8ca:	gs popf 
  41c8cc:	lods   al,BYTE PTR ds:[esi]
  41c8cd:	cmc    
  41c8ce:	add    BYTE PTR [ebx-0x3f],bh
  41c8d1:	pop    esp
  41c8d2:	xchg   DWORD PTR [edx*8+0x5266518c],ebp
  41c8d9:	es sbb dl,ah
  41c8dc:	pop    ebx
  41c8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8de:	retf   
  41c8df:	shl    BYTE PTR [eax-0x1a778bda],1
  41c8e5:	lds    edx,FWORD PTR [esi-0x42]
  41c8e8:	mov    dl,0xcc
  41c8ea:	inc    edx
  41c8eb:	ja     0x41c940
  41c8ed:	out    0xad,al
  41c8ef:	loop   0x41c937
  41c8f1:	sub    esp,DWORD PTR [esi]
  41c8f3:	in     eax,dx
  41c8f4:	and    BYTE PTR [ecx+0x2cef5daa],ch
  41c8fa:	btc    DWORD PTR gs:0xc52048e2,edi
  41c902:	xor    eax,0xd627c427
  41c907:	cmp    bl,BYTE PTR [edi+0x78e174f8]
  41c90d:	es popf 
  41c90f:	lea    eax,[ebx+0x61617820]
  41c915:	sbb    al,0x81
  41c917:	imul   ecx,DWORD PTR [ecx],0x4297413c
  41c91d:	stos   DWORD PTR es:[edi],eax
  41c91e:	jle    0x41c8e2
  41c920:	jo     0x41c8f4
  41c922:	mov    dl,0x44
  41c924:	add    bh,dh
  41c926:	stos   BYTE PTR es:[edi],al
  41c927:	call   0x36a1f377
  41c92c:	(bad)  
  41c92d:	imul   ebp,DWORD PTR [ebx-0x25],0x73
  41c931:	or     ebp,DWORD PTR [ebp-0x43]
  41c934:	push   cs
  41c935:	add    BYTE PTR [ebp+0x2e],cl
  41c938:	fs pop ebp
  41c93a:	shl    BYTE PTR [esi],cl
  41c93c:	stos   BYTE PTR es:[edi],al
  41c93d:	pop    edx
  41c93e:	pop    ss
  41c93f:	cmp    BYTE PTR [ecx+0x20],ch
  41c942:	jns    0x41c99c
  41c944:	push   0x29c03ea8
  41c949:	push   edi
  41c94a:	or     DWORD PTR [esi+0x2a2d3b8],esp
  41c950:	dec    DWORD PTR [edx+0x6c6c8275]
  41c956:	xchg   DWORD PTR [esi-0x2c48ad14],edx
  41c95c:	cdq    
  41c95d:	(bad)  
  41c95e:	out    dx,eax
  41c95f:	sti    
  41c960:	test   DWORD PTR [ebp+0x189b2014],esp
  41c966:	add    cl,al
  41c968:	cdq    
  41c969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c96a:	in     al,0xa
  41c96c:	pop    ss
  41c96d:	out    0x90,eax
  41c96f:	daa    
  41c970:	fild   QWORD PTR [ebp+0x4c7be12a]
  41c976:	and    ah,ch
  41c978:	adc    cl,BYTE PTR [ebx+0x31]
  41c97b:	or     BYTE PTR [eax+0x15],ah
  41c97e:	push   cs
  41c97f:	sar    al,1
  41c981:	push   ecx
  41c982:	cli    
  41c983:	mov    esp,0x8f49bf0e
  41c988:	fwait
  41c989:	(bad)  
  41c98a:	inc    BYTE PTR [esi-0x1ad642d1]
  41c990:	add    eax,0xf5e64af3
  41c995:	rep lods eax,DWORD PTR ds:[esi]
  41c997:	dec    edx
  41c998:	sahf   
  41c999:	sub    BYTE PTR [ecx],dl
  41c99b:	push   ds
  41c99c:	popf   
  41c99d:	mov    edi,0x9d51eee9
  41c9a2:	lahf   
  41c9a3:	ror    DWORD PTR [ebx+eiz*1+0x40243e2c],0xb7
  41c9ab:	or     eax,0x93287fca
  41c9b0:	ja     0x41c9bd
  41c9b2:	mov    esp,eax
  41c9b4:	fcomp  QWORD PTR [ecx]
  41c9b6:	cli    
  41c9b7:	fistp  WORD PTR [edx+0x6f]
  41c9ba:	mov    fs,ecx
  41c9bc:	adc    dl,BYTE PTR [esi]
  41c9be:	ret    0x8b65
  41c9c1:	and    bl,bh
  41c9c3:	sub    BYTE PTR [eax-0x68254044],ch
  41c9c9:	mov    esp,0xb0bb027d
  41c9ce:	shr    esi,0x6
  41c9d1:	jecxz  0x41c9e1
  41c9d3:	(bad)  
  41c9d4:	push   ecx
  41c9d5:	or     DWORD PTR [ebx+0x4f666841],esp
  41c9db:	mov    ds:0xfcf9646a,eax
  41c9e0:	in     al,dx
  41c9e1:	out    dx,eax
  41c9e2:	dec    ebp
  41c9e3:	sub    al,0xb9
  41c9e5:	ret    
  41c9e6:	(bad)  
  41c9e7:	fld    st(6)
  41c9e9:	dec    eax
  41c9ea:	xor    BYTE PTR [edi-0x777e5b38],bl
  41c9f0:	adc    al,0xa1
  41c9f2:	dec    eax
  41c9f3:	pop    esp
  41c9f4:	push   ebp
  41c9f5:	push   0x3a
  41c9f7:	sbb    edi,DWORD PTR [eax+eax*4-0x5ab0b40a]
  41c9fe:	push   edx
  41c9ff:	xor    eax,0xd5f5b30f
  41ca04:	jb     0x41ca71
  41ca06:	loopne 0x41ca46
  41ca08:	jne    0x41ca20
  41ca0a:	aam    0x90
  41ca0c:	xlat   BYTE PTR ds:[ebx]
  41ca0d:	sbb    ch,BYTE PTR [esi-0x55]
  41ca10:	js     0x41c9ec
  41ca12:	adc    DWORD PTR [esi-0x2c0a4f3d],edx
  41ca18:	test   BYTE PTR [edx+0x49],dl
  41ca1b:	test   eax,0x681ae5d9
  41ca20:	mov    ds:0x88ed71db,eax
  41ca25:	xchg   ecx,eax
  41ca26:	test   al,0x5
  41ca28:	or     al,0x2a
  41ca2a:	(bad)  
  41ca2b:	jo     0x41ca8f
  41ca2d:	jl     0x41ca04
  41ca2f:	test   eax,0x1cc7bb7e
  41ca34:	push   esi
  41ca35:	inc    edi
  41ca36:	and    bh,ah
  41ca38:	jmp    0x41ca60
  41ca3a:	lods   eax,DWORD PTR ds:[esi]
  41ca3b:	shr    bl,1
  41ca3d:	push   0xde092966
  41ca42:	mov    al,ds:0xefe85067
  41ca47:	mov    ecx,0x5ed79e6e
  41ca4c:	popa   
  41ca4d:	cdq    
  41ca4e:	mov    ebp,0x9843d4c3
  41ca53:	pushf  
  41ca54:	outs   dx,BYTE PTR ds:[esi]
  41ca55:	or     dh,ah
  41ca57:	add    cl,BYTE PTR ds:0x56065515
  41ca5d:	jne    0x41c9ff
  41ca5f:	das    
  41ca60:	push   eax
  41ca61:	mov    esp,0x4626a25d
  41ca66:	js     0x41ca0e
  41ca68:	and    al,0xd6
  41ca6a:	cli    
  41ca6b:	push   ebp
  41ca6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca6d:	hlt    
  41ca6e:	push   es
  41ca6f:	pop    edi
  41ca70:	ins    BYTE PTR es:[edi],dx
  41ca71:	std    
  41ca72:	push   0x53
  41ca74:	inc    esi
  41ca75:	adc    edi,edi
  41ca77:	xchg   ebx,eax
  41ca78:	or     al,0x30
  41ca7a:	inc    ebp
  41ca7b:	mov    edx,0xfb46bef6
  41ca80:	xchg   BYTE PTR [eax],bh
  41ca82:	lds    ecx,FWORD PTR [edi]
  41ca84:	test   DWORD PTR [edx-0x456e2db4],ebx
  41ca8a:	mov    dh,BYTE PTR [eax+0xae72662]
  41ca90:	sahf   
  41ca91:	in     al,dx
  41ca92:	jmp    0x9d31:0x22fa9e33
  41ca99:	int3   
  41ca9a:	add    eax,0xacb66abc
  41ca9f:	jae    0x41ca6a
  41caa1:	push   esp
  41caa2:	cli    
  41caa3:	pop    esi
  41caa4:	dec    esp
  41caa5:	jl     0x41cad5
  41caa7:	call   0xd70dcdd4
  41caac:	inc    ebp
  41caad:	arpl   WORD PTR [eax],di
  41caaf:	pusha  
  41cab0:	push   ss
  41cab1:	xchg   edi,eax
  41cab2:	outs   dx,DWORD PTR ds:[esi]
  41cab3:	aas    
  41cab4:	fstp   QWORD PTR [esi]
  41cab6:	add    DWORD PTR [edx-0x47],eax
  41cab9:	push   esi
  41caba:	xchg   esi,eax
  41cabb:	clc    
  41cabc:	push   esi
  41cabd:	mov    esp,0xa4b0add7
  41cac2:	push   ebp
  41cac3:	xor    cl,BYTE PTR [edi+0x46efe849]
  41cac9:	sti    
  41caca:	pop    eax
  41cacb:	dec    ecx
  41cacc:	(bad)  
  41cacd:	push   edi
  41cace:	push   0xd
  41cad0:	mov    ds:0xec095a76,eax
  41cad5:	jg     0x41cac4
  41cad7:	sbb    BYTE PTR [edx*2+0x1b1c7e13],dh
  41cade:	daa    
  41cadf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cae0:	push   ss
  41cae1:	stos   DWORD PTR es:[edi],eax
  41cae2:	scas   eax,DWORD PTR es:[edi]
  41cae3:	adc    al,0x79
  41cae5:	and    al,dh
  41cae7:	xchg   cl,al
  41cae9:	mov    ds:0x243848e5,al
  41caee:	scas   eax,DWORD PTR es:[edi]
  41caef:	mov    bh,0x7a
  41caf1:	sbb    BYTE PTR [esi+ecx*1],al
  41caf4:	mov    cl,0xb1
  41caf6:	scas   al,BYTE PTR es:[edi]
  41caf7:	popa   
  41caf8:	aam    0x2f
  41cafa:	add    esi,edx
  41cafc:	or     ebx,DWORD PTR [edx+0x442c8c1c]
  41cb02:	loop   0x41cb6a
  41cb04:	xchg   ebp,eax
  41cb05:	outs   dx,DWORD PTR ds:[esi]
  41cb06:	add    al,0xcf
  41cb08:	scas   eax,DWORD PTR es:[edi]
  41cb09:	imul   ebp,ebx,0x3f688363
  41cb0f:	pop    esp
  41cb10:	popa   
  41cb11:	or     cl,BYTE PTR [ebx-0x58010f88]
  41cb17:	lock (bad) 
  41cb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb1a:	sahf   
  41cb1b:	lds    esp,FWORD PTR [esi-0x51]
  41cb1e:	pop    ss
  41cb1f:	imul   edi,DWORD PTR [eax],0x10ec799a
  41cb25:	into   
  41cb26:	sbb    DWORD PTR [ecx+ecx*2],ecx
  41cb29:	(bad)  
  41cb2b:	pop    ebx
  41cb2c:	cmp    cl,cl
  41cb2e:	nop
  41cb2f:	repnz mov al,ds:0x62b3b3cb
  41cb35:	and    al,0x5
  41cb37:	shl    BYTE PTR [ebx],cl
  41cb39:	(bad)  
  41cb3a:	jo     0x41cb4e
  41cb3c:	stos   DWORD PTR es:[edi],eax
  41cb3d:	aas    
  41cb3e:	cdq    
  41cb3f:	sti    
  41cb40:	jmp    0xdf01:0x6ef54d7e
  41cb47:	outs   dx,BYTE PTR ds:[esi]
  41cb48:	lds    ebx,FWORD PTR [esp+ebp*1-0x56]
  41cb4c:	push   ecx
  41cb4d:	lea    eax,[eax]
  41cb4f:	push   ss
  41cb50:	dec    ebx
  41cb51:	inc    edi
  41cb52:	nop
  41cb53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb54:	test   eax,0x3756f79a
  41cb59:	shr    BYTE PTR [ebx],1
  41cb5b:	test   edi,ebp
  41cb5d:	xor    eax,DWORD PTR [ecx]
  41cb5f:	and    eax,0x5da8efe4
  41cb64:	cwde   
  41cb65:	nop
  41cb66:	scas   al,BYTE PTR es:[edi]
  41cb67:	loope  0x41cafa
  41cb69:	enter  0xcb93,0xac
  41cb6d:	adc    edx,eax
  41cb6f:	push   edi
  41cb70:	pop    ds
  41cb71:	jae    0x41cb02
  41cb73:	ret    
  41cb74:	mov    bl,0x53
  41cb76:	lods   al,BYTE PTR ds:[esi]
  41cb77:	(bad)  
  41cb78:	sbb    BYTE PTR [esi],ch
  41cb7a:	inc    ebx
  41cb7b:	dec    ecx
  41cb7c:	inc    ebx
  41cb7d:	xchg   esp,eax
  41cb7e:	ins    BYTE PTR es:[edi],dx
  41cb7f:	mov    ds:0xabb20a08,al
  41cb84:	cmp    ebp,DWORD PTR [ebx-0x6338da46]
  41cb8a:	push   ebx
  41cb8b:	pusha  
  41cb8c:	sub    edi,DWORD PTR [edx-0x3f]
  41cb8f:	xlat   BYTE PTR ds:[ebx]
  41cb90:	loop   0x41cb2a
  41cb92:	enter  0xbaea,0x63
  41cb96:	xchg   ebx,eax
  41cb97:	ins    DWORD PTR es:[edi],dx
  41cb98:	mov    esp,0x6604bc42
  41cb9d:	mov    esi,0xc82c4e21
  41cba2:	mov    ch,0x5b
  41cba4:	scas   ax,WORD PTR es:[edi]
  41cba6:	push   ecx
  41cba7:	and    eax,0xfe4143e3
  41cbac:	(bad)  
  41cbad:	jnp    0x41cb2f
  41cbaf:	or     dh,dl
  41cbb1:	ficomp WORD PTR [eax-0x3435c601]
  41cbb7:	mov    cs,WORD PTR [esi]
  41cbb9:	inc    edx
  41cbba:	outs   dx,DWORD PTR ds:[esi]
  41cbbb:	gs add al,0x2a
  41cbbe:	leave  
  41cbbf:	xchg   BYTE PTR [edi-0x155ebd25],ch
  41cbc5:	sbb    dl,BYTE PTR [ebx]
  41cbc7:	sar    DWORD PTR [ebp+eax*8+0x28],cl
  41cbcb:	pop    edi
  41cbcc:	int3   
  41cbcd:	xor    esp,DWORD PTR [edi]
  41cbcf:	mov    ebx,0xae518119
  41cbd4:	pop    ss
  41cbd5:	daa    
  41cbd6:	(bad)  
  41cbd7:	cmp    DWORD PTR [edi-0x18],ecx
  41cbda:	(bad)  
  41cbdc:	mov    edx,0x44eee92
  41cbe1:	stos   BYTE PTR es:[edi],al
  41cbe2:	daa    
  41cbe3:	add    BYTE PTR [ebp+0x1f8ba66a],0x86
  41cbea:	push   0x3628b56b
  41cbef:	pop    esi
  41cbf0:	dec    ebx
  41cbf1:	add    ebx,DWORD PTR [esi+ebp*8+0xd08573a]
  41cbf8:	iret   
  41cbf9:	jl     0x41cbbe
  41cbfb:	fnstsw WORD PTR [ebx-0x33]
  41cbfe:	aam    0xe7
  41cc00:	pusha  
  41cc01:	mov    eax,0x4a38f1a7
  41cc06:	lds    eax,FWORD PTR [ebx-0x76]
  41cc09:	loopne 0x41cbfb
  41cc0b:	inc    ebx
  41cc0c:	cld    
  41cc0d:	mov    dh,0x90
  41cc0f:	mov    WORD PTR [ecx-0x24],ds
  41cc12:	mov    esp,0xede939c2
  41cc17:	cli    
  41cc18:	add    ebx,DWORD PTR [edi+0x3274ef47]
  41cc1e:	lods   eax,DWORD PTR ds:[esi]
  41cc1f:	lea    edx,[edx]
  41cc21:	sbb    al,0xeb
  41cc23:	mov    WORD PTR [eax+0x186668d6],fs
  41cc29:	fcomp  st(6)
  41cc2b:	dec    eax
  41cc2c:	jns    0x41cc71
  41cc2e:	jecxz  0x41cc30
  41cc30:	mov    eax,ds:0xcd597b17
  41cc35:	and    edi,ebp
  41cc37:	xor    BYTE PTR [edx+ecx*8-0x3b8f6385],al
  41cc3e:	sub    al,0xdd
  41cc40:	enter  0x782e,0x7a
  41cc44:	pop    ss
  41cc45:	int    0x2e
  41cc47:	xor    eax,0x938baa60
  41cc4c:	dec    esi
  41cc4d:	(bad)  
  41cc4e:	in     al,0x7e
  41cc50:	rcl    BYTE PTR [eax],0xe9
  41cc53:	nop
  41cc54:	lock pop esp
  41cc56:	or     eax,0x8ae282db
  41cc5b:	mov    ds:0x2b11f904,al
  41cc60:	mov    ds:0xcf99491c,al
  41cc65:	cmp    al,0xda
  41cc67:	and    ah,BYTE PTR [ecx+ebx*1-0x6a]
  41cc6b:	cs pushf 
  41cc6d:	jno    0x41cc37
  41cc6f:	inc    ebp
  41cc70:	(bad)
  41cc75:	jo     0x41cce9
  41cc77:	push   cs
  41cc78:	push   es
  41cc79:	hlt    
  41cc7a:	sbb    DWORD PTR [ecx-0x22],0x5f
  41cc7e:	jnp    0x41cc4c
  41cc80:	or     al,0x5b
  41cc82:	in     eax,dx
  41cc83:	imul   edx,DWORD PTR [ebx-0x4c90ca71],0xb7b773d3
  41cc8d:	clc    
  41cc8e:	xor    ah,BYTE PTR [edi-0x53]
  41cc91:	dec    edi
  41cc92:	pop    ds
  41cc93:	xor    al,0xc4
  41cc95:	fbstp  TBYTE PTR [esi-0x54]
  41cc98:	loopne 0x41cccb
  41cc9a:	lods   al,BYTE PTR ds:[esi]
  41cc9b:	cmp    dl,BYTE PTR [edx]
  41cc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc9e:	stos   DWORD PTR es:[edi],eax
  41cc9f:	xor    ebp,DWORD PTR [ebp-0x32]
  41cca2:	mov    bl,0x81
  41cca4:	into   
  41cca5:	shr    BYTE PTR [ecx+0xa],cl
  41cca8:	push   ds
  41cca9:	scas   eax,DWORD PTR es:[edi]
  41ccaa:	out    0x1e,eax
  41ccac:	sub    bl,BYTE PTR [ebx]
  41ccae:	jnp    0x41cd2c
  41ccb0:	fsub   DWORD PTR [eax+esi*1-0x26]
  41ccb4:	pop    ebp
  41ccb5:	lock dec edx
  41ccb7:	retf   0x8ef3
  41ccba:	add    al,0xc0
  41ccbc:	dec    ecx
  41ccbd:	or     eax,0x1808c9a2
  41ccc2:	xlat   BYTE PTR ds:[ebx]
  41ccc3:	pusha  
  41ccc4:	inc    eax
  41ccc6:	and    DWORD PTR [ecx],edx
  41ccc8:	sbb    DWORD PTR [eax+0xbf8e8ec],ebp
  41ccce:	enter  0xa9bc,0xdc
  41ccd2:	and    al,0x1c
  41ccd4:	dec    ecx
  41ccd5:	sahf   
  41ccd6:	(bad)  
  41ccd7:	jne    0x41cc93
  41ccd9:	and    DWORD PTR [ecx],0xb273168c
  41ccdf:	inc    ebp
  41cce0:	ret    
  41cce1:	pop    ds
  41cce2:	cli    
  41cce3:	rcl    bh,cl
  41cce5:	xchg   ecx,eax
  41cce6:	cmp    BYTE PTR [esi+0x70],0xed
  41ccea:	retf   0xca6d
  41cced:	jb     0x41ccea
  41ccef:	aaa    
  41ccf0:	scas   al,BYTE PTR es:[edi]
  41ccf1:	inc    BYTE PTR [edi+0x4c]
  41ccf4:	jae    0x41cd48
  41ccf6:	xor    BYTE PTR [edx],dl
  41ccf8:	or     al,0xc0
  41ccfa:	pop    ecx
  41ccfb:	iret   
  41ccfc:	ins    DWORD PTR es:[edi],dx
  41ccfd:	cwde   
  41ccfe:	sub    dl,BYTE PTR [ebp+0x34]
  41cd01:	pop    es
  41cd02:	xchg   ebx,eax
  41cd03:	add    DWORD PTR ss:[eax+edi*4+0x30],esp
  41cd08:	mov    ebx,0x832ba77a
  41cd0d:	mov    edx,0x58131f16
  41cd12:	push   ebp
  41cd13:	fdiv   DWORD PTR [edi+ebp*8-0x6f]
  41cd17:	test   al,0xd5
  41cd19:	sti    
  41cd1a:	pop    ebx
  41cd1b:	push   edi
  41cd1c:	in     eax,dx
  41cd1d:	jl     0x41cd61
  41cd1f:	fs ss xor eax,0x3175a876
  41cd26:	dec    edi
  41cd27:	nop
  41cd28:	xor    DWORD PTR [ebx],edi
  41cd2a:	bound  esi,QWORD PTR [ecx+0x3f40928a]
  41cd30:	jmp    0xfae4ccb5
  41cd35:	or     BYTE PTR [ecx+0x74e53252],0x80
  41cd3c:	imul   dh
  41cd3e:	push   ds
  41cd3f:	add    BYTE PTR [edi],al
  41cd41:	cmc    
  41cd42:	jmp    0xbcf1708
  41cd47:	sub    esp,0x20
  41cd4a:	in     eax,0xe
  41cd4c:	ss cmp dh,cl
  41cd4f:	mov    edi,0x1cae5bf1
  41cd54:	mov    esi,0xb517bb41
  41cd59:	sbb    DWORD PTR [ecx+0x6d3b454e],0x93bcfb7
  41cd63:	pop    ds
  41cd64:	mov    edx,0x3d4d419c
  41cd69:	mov    edx,0xb433992e
  41cd6e:	cmp    DWORD PTR [ebp-0x62345e40],esi
  41cd74:	push   cs
  41cd75:	mov    dh,0x24
  41cd77:	xchg   esp,eax
  41cd78:	jbe    0x41cde6
  41cd7a:	lods   al,BYTE PTR ds:[esi]
  41cd7b:	sub    eax,0xee12755
  41cd80:	jmp    0xdb36:0x8c4bdf60
  41cd87:	and    eax,0x52b9afaf
  41cd8c:	iret   
  41cd8d:	dec    ebx
  41cd8e:	xchg   ebp,eax
  41cd8f:	adc    eax,0x7043f4c1
  41cd94:	mov    dl,0x25
  41cd96:	jbe    0x41cd4f
  41cd98:	call   0x3adcfe1d
  41cd9d:	in     eax,dx
  41cd9e:	cwde   
  41cd9f:	pushf  
  41cda0:	push   esi
  41cda1:	fbstp  TBYTE PTR [ebx]
  41cda3:	pop    ecx
  41cda4:	cmp    DWORD PTR [eax],ebp
  41cda6:	jbe    0x41cdd0
  41cda8:	add    dl,al
  41cdaa:	and    BYTE PTR [ecx],cl
  41cdac:	dec    eax
  41cdad:	lock cmc 
  41cdaf:	and    al,BYTE PTR [ebx+ebx*1+0x76700270]
  41cdb6:	clc    
  41cdb7:	ins    DWORD PTR es:[edi],dx
  41cdb8:	leave  
  41cdb9:	push   edx
  41cdba:	popf   
  41cdbb:	cmp    DWORD PTR ds:0x7df98430,0xffffffb2
  41cdc2:	dec    eax
  41cdc3:	sbb    DWORD PTR [ecx],esp
  41cdc5:	mov    cl,0x39
  41cdc7:	ror    DWORD PTR ds:0x132c4186,0x8
  41cdce:	jae    0x41ce01
  41cdd0:	add    al,0xab
  41cdd2:	jecxz  0x41ce2c
  41cdd4:	loope  0x41cdf4
  41cdd6:	xor    dl,ch
  41cdd8:	imul   ebx,edi,0x28a2e4ac
  41cdde:	popf   
  41cddf:	and    al,0x20
  41cde1:	xchg   ebx,eax
  41cde2:	sbb    al,BYTE PTR [ebx]
  41cde4:	ins    DWORD PTR es:[edi],dx
  41cde5:	mov    esp,0x86b36120
  41cdea:	hlt    
  41cdeb:	push   es
  41cdec:	jmp    0x9c8837c3
  41cdf1:	dec    eax
  41cdf2:	and    al,0x49
  41cdf4:	cmp    BYTE PTR [eax],bl
  41cdf6:	call   0x91d5:0x6bf50374
  41cdfd:	out    dx,al
  41cdfe:	popa   
  41cdff:	icebp  
  41ce00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce01:	and    cl,BYTE PTR ds:0x2260c263
  41ce07:	cmp    al,BYTE PTR [esi+eax*1+0xe]
  41ce0b:	push   edi
  41ce0c:	(bad)  
  41ce0d:	in     eax,dx
  41ce0e:	mov    ecx,0x470975c4
  41ce13:	inc    ebp
  41ce14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce15:	loop   0x41ce5e
  41ce17:	repz push eax
  41ce19:	stc    
  41ce1a:	cmp    BYTE PTR [esi-0x29022597],cl
  41ce20:	mov    esp,0x82918ed2
  41ce25:	sbb    cl,BYTE PTR [ebx+0x44]
  41ce28:	dec    esp
  41ce29:	lds    edi,FWORD PTR [esi+0x53]
  41ce2c:	xor    esp,0x7069307f
  41ce32:	dec    edx
  41ce33:	repnz repnz push esp
  41ce36:	and    edi,DWORD PTR [ecx-0x510f75a3]
  41ce3c:	stc    
  41ce3d:	or     BYTE PTR [edi],0xe0
  41ce40:	inc    esp
  41ce41:	inc    esp
  41ce42:	push   ds
  41ce43:	mov    dl,ah
  41ce45:	push   esi
  41ce46:	outs   dx,BYTE PTR ds:[esi]
  41ce47:	fsub   QWORD PTR [edx+0x4f]
  41ce4a:	xlat   BYTE PTR ds:[ebx]
  41ce4b:	push   es
  41ce4c:	and    al,0xd7
  41ce4e:	xor    DWORD PTR [edi],ebx
  41ce50:	push   ss
  41ce51:	or     bl,ah
  41ce53:	shl    edx,1
  41ce55:	cmp    eax,0xdc3c3024
  41ce5b:	mov    DWORD PTR [ecx],ecx
  41ce5d:	push   ebx
  41ce5e:	(bad)  
  41ce5f:	xor    edi,ecx
  41ce61:	jge    0x41ce7a
  41ce63:	xchg   edi,eax
  41ce64:	in     al,dx
  41ce65:	fstp   TBYTE PTR [eax]
  41ce67:	dec    edx
  41ce68:	seto   bl
  41ce6b:	mov    ecx,0x27002f4a
  41ce70:	lahf   
  41ce71:	(bad)  
  41ce72:	pop    ebx
  41ce73:	ins    BYTE PTR es:[edi],dx
  41ce74:	xor    eax,0x753c5ecd
  41ce79:	or     dl,ch
  41ce7b:	sub    ch,dl
  41ce7d:	mov    esp,0xf3211eb2
  41ce82:	push   0xf7563bb2
  41ce87:	out    dx,al
  41ce88:	fwait
  41ce89:	dec    ebp
  41ce8a:	xchg   esp,eax
  41ce8b:	scas   eax,DWORD PTR es:[edi]
  41ce8c:	call   0x439b:0xe086959f
  41ce93:	mov    ss,esi
  41ce95:	iret   
  41ce96:	push   0xffffff95
  41ce98:	jbe    0x41cebd
  41ce9a:	mov    BYTE PTR [edi],bh
  41ce9c:	inc    ebx
  41ce9d:	stos   DWORD PTR es:[edi],eax
  41ce9e:	js     0x41ce26
  41cea0:	pop    edx
  41cea1:	shl    BYTE PTR [ecx-0x4611a4d5],0x60
  41cea8:	push   eax
  41cea9:	cs div ecx
  41ceac:	mov    ah,0xb9
  41ceae:	mov    edi,0x952cba4e
  41ceb3:	daa    
  41ceb4:	xor    bl,dh
  41ceb6:	gs daa 
  41ceb8:	cmp    edi,DWORD PTR [ebp+0x1d0e8dc]
  41cebe:	sub    eax,0x18644ca6
  41cec3:	xchg   ebx,eax
  41cec4:	in     eax,dx
  41cec5:	or     BYTE PTR [ebp+0x65],bl
  41cec8:	(bad)  [edi]
  41ceca:	pop    ebp
  41cecb:	icebp  
  41cecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cecd:	in     eax,dx
  41cece:	clc    
  41cecf:	mov    cl,0xd2
  41ced1:	dec    esi
  41ced2:	xor    DWORD PTR [edx+0x2e],edx
  41ced5:	test   BYTE PTR [edx+0x76],al
  41ced8:	pop    edx
  41ced9:	mov    bh,0xda
  41cedb:	sbb    al,0x8
  41cedd:	xchg   edi,eax
  41cede:	mov    edx,0x45282aea
  41cee3:	repnz xchg ebx,eax
  41cee5:	popf   
  41cee6:	xor    eax,0x2924ed17
  41ceeb:	cmc    
  41ceec:	xchg   edi,eax
  41ceee:	pop    es
  41ceef:	retf   
  41cef0:	mov    ah,0x82
  41cef2:	(bad)
  41cef5:	cdq    
  41cef6:	adc    ecx,DWORD PTR ds:0x18990c85
  41cefc:	lock popa 
  41cefe:	nop
  41ceff:	inc    ecx
  41cf00:	add    al,0x3a
  41cf02:	add    dl,al
  41cf04:	cdq    
  41cf05:	je     0x41cf48
  41cf07:	(bad)  
  41cf08:	or     DWORD PTR [ebp+0xb],0x3b
  41cf0c:	rol    DWORD PTR [ebx],0xd1
  41cf0f:	fdivr  QWORD PTR es:[eax+0x151d9e72]
  41cf16:	iret   
  41cf17:	fisubr WORD PTR [eax]
  41cf19:	ja     0x41cf4f
  41cf1b:	scas   eax,DWORD PTR es:[edi]
  41cf1c:	arpl   dx,sp
  41cf1e:	and    al,0x9f
  41cf20:	idiv   DWORD PTR [eax+ebp*2+0x43]
  41cf24:	ja     0x41cee6
  41cf26:	xor    ebp,DWORD PTR [ecx+eiz*1-0x4e]
  41cf2a:	mov    fs,WORD PTR [eax+ebx*8-0x16]
  41cf2e:	dec    edx
  41cf2f:	in     eax,dx
  41cf30:	retf   
  41cf31:	stos   DWORD PTR es:[edi],eax
  41cf32:	lods   eax,DWORD PTR ds:[esi]
  41cf33:	loop   0x41ceff
  41cf35:	gs mov dh,0xab
  41cf38:	lea    esi,gs:[edi-0x63]
  41cf3c:	js     0x41cf8d
  41cf3e:	sbb    ecx,DWORD PTR [ebx]
  41cf40:	mov    ebx,0x8f9f2380
  41cf45:	lea    edi,[ecx+edi*1+0x5cc5c5f2]
  41cf4c:	aad    0x9d
  41cf4e:	inc    edi
  41cf4f:	jmp    0x1c01:0xfbc7c199
  41cf56:	imul   ebp,DWORD PTR es:[esi-0x66af32d7],0x5a
  41cf5e:	pop    ebx
  41cf5f:	push   ds
  41cf60:	and    ebp,DWORD PTR [bx+si]
  41cf63:	out    0x12,eax
  41cf65:	add    ecx,ebx
  41cf67:	jns    0x41cfab
  41cf69:	sti    
  41cf6a:	retf   0x9ca6
  41cf6d:	push   ss
  41cf6e:	xor    eax,0x15650116
  41cf73:	lea    ebp,[edx]
  41cf75:	aaa    
  41cf76:	lahf   
  41cf77:	adc    BYTE PTR [edi+0x7a309229],dl
  41cf7d:	xchg   edi,eax
  41cf7e:	mov    DWORD PTR [esi+0x38ef7178],ebx
  41cf84:	mov    ds:0x8d2e43e2,eax
  41cf89:	sub    al,0xd5
  41cf8b:	push   eax
  41cf8c:	mov    bl,0x3a
  41cf8e:	ds cmc 
  41cf90:	cmp    dl,0x1e
  41cf93:	call   0x6232:0x8c341367
  41cf9a:	add    eax,0xf00e22ac
  41cf9f:	shr    edi,cl
  41cfa1:	pop    ds
  41cfa2:	inc    esi
  41cfa3:	push   ebp
  41cfa4:	(bad)  
  41cfa5:	fist   DWORD PTR [esp+ebp*1+0x7f26117c]
  41cfac:	mov    al,ds:0x46f20cd5
  41cfb1:	or     al,dl
  41cfb3:	mov    ds:0xc95d09b2,eax
  41cfb8:	inc    eax
  41cfb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfba:	sbb    BYTE PTR [ecx-0x14],dh
  41cfbd:	dec    ecx
  41cfbe:	sbb    cl,ah
  41cfc0:	mov    dh,BYTE PTR [eax]
  41cfc2:	out    0xef,eax
  41cfc4:	jns    0x41d01c
  41cfc6:	add    BYTE PTR [ecx+eax*4+0x21],al
  41cfca:	sub    eax,0xbd49e2fb
  41cfcf:	inc    esi
  41cfd0:	mov    esp,0x4be63c2f
  41cfd5:	lea    ecx,[ebx+0x98e7fc5]
  41cfdb:	adc    eax,0x7d0b09fd
  41cfe0:	retf   0x527f
  41cfe3:	push   es
  41cfe4:	adc    BYTE PTR [esi-0x49b9eb91],al
  41cfea:	or     bl,BYTE PTR [esi-0x1b]
  41cfed:	adc    DWORD PTR [ebx],0x2212e626
  41cff3:	sbb    dl,BYTE PTR [ecx]
  41cff5:	jns    0x41cfe2
  41cff7:	call   0x95ad:0xe5cec2d0
  41cffe:	lock out dx,eax
  41d000:	and    DWORD PTR [eax],ecx
  41d002:	sahf   
  41d003:	inc    ecx
  41d004:	push   ecx
  41d005:	pushf  
  41d006:	jo     0x41cfba
  41d008:	jmp    0x1099:0x7f613b47
  41d00f:	loop   0x41d066
  41d011:	sub    al,0x92
  41d013:	stc    
  41d014:	xor    BYTE PTR [edi-0x798ee95d],ah
  41d01a:	or     eax,0xcbf5b24
  41d01f:	stos   BYTE PTR es:[edi],al
  41d020:	mov    BYTE PTR [edi*2+0x59540dda],dh
  41d027:	loopne 0x41d016
  41d029:	cld    
  41d02a:	dec    BYTE PTR [esi-0x64]
  41d02d:	push   cs
  41d02e:	adc    DWORD PTR [eax-0x7a133de2],0x29813bec
  41d038:	xchg   BYTE PTR [ebx+0x67f27adc],bl
  41d03e:	push   esi
  41d03f:	mov    esi,0xbc9b4942
  41d044:	in     eax,0x9d
  41d046:	inc    eax
  41d047:	dec    edi
  41d048:	mov    al,ds:0x9f62faa
  41d04d:	(bad)  
  41d04e:	je     0x41d05b
  41d050:	scas   eax,DWORD PTR es:[edi]
  41d051:	add    ah,BYTE PTR [ecx-0x5b]
  41d054:	sbb    edi,ecx
  41d056:	push   edi
  41d057:	fs test esi,0xb06cc42
  41d05e:	es stc 
  41d060:	mov    ds:0x57af0bb,eax
  41d065:	pop    ss
  41d066:	loopne 0x41d0c8
  41d068:	in     eax,0x8c
  41d06a:	dec    eax
  41d06c:	add    edx,DWORD PTR [eax]
  41d06e:	pop    eax
  41d06f:	dec    esi
  41d070:	les    edx,FWORD PTR [eax-0x68]
  41d073:	jle    0x41d070
  41d075:	add    BYTE PTR [eax*4+0x1efe7e],dl
  41d07c:	dec    edx
  41d07d:	adc    BYTE PTR [eax-0x335a32be],0x62
  41d084:	push   0xffffffe5
  41d086:	shr    DWORD PTR ds:0x5e19e6ea,0xaa
  41d08d:	cli    
  41d08e:	ins    DWORD PTR es:[edi],dx
  41d08f:	clc    
  41d090:	or     eax,0xd4eb121
  41d095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d096:	sbb    bh,cl
  41d098:	push   ebp
  41d099:	int    0x77
  41d09b:	out    0xf,al
  41d09d:	mov    cl,0x6e
  41d09f:	nop
  41d0a0:	cld    
  41d0a1:	add    eax,0x1bc3ac67
  41d0a6:	sbb    bh,ah
  41d0a8:	aaa    
  41d0a9:	xchg   BYTE PTR [ebp+eiz*1-0x1b],al
  41d0ad:	push   ds
  41d0ae:	sub    al,0x35
  41d0b0:	mov    ds:0x9f373d00,al
  41d0b5:	dec    esp
  41d0b6:	xchg   ebp,eax
  41d0b7:	test   eax,0x29643233
  41d0bc:	ds test al,0xbe
  41d0bf:	sbb    DWORD PTR [ecx],0x2481d89
  41d0c5:	out    dx,eax
  41d0c6:	retf   
  41d0c7:	and    al,0xca
  41d0c9:	cmp    al,0x9
  41d0cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0cc:	xchg   edx,eax
  41d0cd:	push   0x45593821
  41d0d2:	fwait
  41d0d3:	lsl    eax,WORD PTR [ebx-0x17dddec]
  41d0da:	mov    al,ds:0xf5303a2e
  41d0df:	(bad)  
  41d0e0:	sub    al,0x72
  41d0e2:	dec    edi
  41d0e3:	xchg   DWORD PTR [eax],ebx
  41d0e5:	adc    BYTE PTR [ecx-0x6f3c59ab],0x83
  41d0ec:	xlat   BYTE PTR ds:[ebx]
  41d0ed:	push   edi
  41d0ee:	pop    ebx
  41d0ef:	mov    al,ds:0x74fd020e
  41d0f4:	leave  
  41d0f5:	mov    al,ds:0x83b22114
  41d0fa:	ins    WORD PTR es:[edi],dx
  41d0fc:	loope  0x41d125
  41d0fe:	sbb    bl,BYTE PTR [edx]
  41d100:	add    edx,DWORD PTR [ebp+0x2b74a9bb]
  41d106:	call   0x9809:0x8f14396c
  41d10d:	ret    
  41d10e:	cmp    eax,0xf9d20dfd
  41d113:	jb     0x41d103
  41d115:	dec    eax
  41d116:	push   es
  41d117:	(bad)  
  41d118:	jbe    0x41d0b7
  41d11a:	lahf   
  41d11b:	aam    0xc5
  41d11d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41d11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d120:	stc    
  41d121:	mov    ecx,0xcb8190ac
  41d126:	std    
  41d127:	mov    eax,DWORD PTR ds:0x44390ec2
  41d12d:	mov    dh,0xe6
  41d12f:	int    0xba
  41d131:	shl    DWORD PTR [ebp-0x9b62441],1
  41d137:	jge    0x41d13b
  41d139:	cmc    
  41d13a:	mov    esp,0x68988224
  41d13f:	jno    0x41d137
  41d141:	xor    eax,0x7e6bf9b0
  41d146:	les    esi,FWORD PTR ds:0x88d5195a
  41d14c:	mov    ecx,ebx
  41d14e:	mov    edi,0x5c95839
  41d153:	sbb    DWORD PTR [edi+0x4831c5],ecx
  41d159:	add    dl,BYTE PTR [edi+ebx*1+0x148d5b63]
  41d160:	mov    ecx,DWORD PTR [edi-0x5dc8bcf8]
  41d166:	ss xchg ebp,eax
  41d168:	outs   dx,DWORD PTR ds:[esi]
  41d169:	or     al,0xe8
  41d16b:	sub    al,0x39
  41d16d:	mov    edx,ecx
  41d16f:	xor    BYTE PTR [ecx+0x3f],0xc1
  41d173:	imul   edx,DWORD PTR [ebp-0x3a],0xffffffe8
  41d177:	scas   al,BYTE PTR es:[edi]
  41d178:	jl     0x41d1bb
  41d17a:	and    eax,0xf8f58acc
  41d17f:	jecxz  0x41d176
  41d181:	jbe    0x41d1be
  41d183:	xchg   BYTE PTR [ebp-0x637da7fc],bh
  41d189:	pop    ebp
  41d18a:	in     eax,0xf5
  41d18c:	or     cl,BYTE PTR [ebx+0x28]
  41d18f:	jb     0x41d126
  41d191:	je     0x41d122
  41d193:	mov    edx,ebp
  41d195:	jnp    0x41d1c1
  41d197:	ins    DWORD PTR es:[edi],dx
  41d198:	stos   DWORD PTR es:[edi],eax
  41d199:	jle    0x41d1b0
  41d19b:	rcl    BYTE PTR [esi+ebp*8],0xf5
  41d19f:	in     al,dx
  41d1a0:	aas    
  41d1a1:	cld    
  41d1a2:	scas   al,BYTE PTR es:[edi]
  41d1a3:	mov    ebp,0x712ead31
  41d1a8:	mov    BYTE PTR [esi],0x8a
  41d1ab:	or     al,0x60
  41d1ad:	les    esp,FWORD PTR [ebx+0x36]
  41d1b0:	sub    eax,0xe430942d
  41d1b5:	out    dx,eax
  41d1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1b7:	inc    esp
  41d1b8:	stos   BYTE PTR es:[edi],al
  41d1b9:	jmp    0x41d201
  41d1bb:	and    ebp,DWORD PTR cs:[eax+ebp*4+0x2d071f73]
  41d1c3:	jns    0x41d1bd
  41d1c5:	ret    0xcc7
  41d1c8:	sar    DWORD PTR [ebp-0x4709205c],1
  41d1ce:	mov    edi,0x8f3e510
  41d1d3:	dec    eax
  41d1d4:	mov    cl,0x79
  41d1d6:	mov    ch,0x11
  41d1d8:	les    edx,FWORD PTR [edx+eiz*8]
  41d1db:	rol    BYTE PTR [ecx+0x69116bd4],cl
  41d1e1:	xor    DWORD PTR [ebx+0x39],esp
  41d1e4:	(bad)  
  41d1e5:	jp     0x41d237
  41d1e7:	push   ecx
  41d1e8:	xchg   edi,eax
  41d1e9:	push   cs
  41d1ea:	adc    eax,0x131a7c47
  41d1ef:	adc    al,0x58
  41d1f1:	mov    ch,ch
  41d1f3:	stos   BYTE PTR es:[edi],al
  41d1f4:	push   ebp
  41d1f5:	ret    
  41d1f6:	fcomp  DWORD PTR [ecx*4-0x690a3afb]
  41d1fd:	mov    dh,BYTE PTR [ebx-0x21]
  41d200:	loope  0x41d1b8
  41d202:	jecxz  0x41d238
  41d204:	stos   BYTE PTR es:[edi],al
  41d205:	ds dec ebx
  41d207:	jmp    edx
  41d209:	out    0x43,al
  41d20b:	inc    esp
  41d20c:	imul   edi,DWORD PTR [ecx],0x4df1839b
  41d212:	mov    ecx,0x4187edc4
  41d217:	inc    ebx
  41d218:	or     esi,DWORD PTR [ebx+0x52]
  41d21b:	mov    eax,0x1b4eba17
  41d220:	out    dx,eax
  41d221:	lea    esp,[eax+0x462e95]
  41d227:	mov    ecx,0xe1f28ef7
  41d22c:	sbb    BYTE PTR [eax-0x63],bh
  41d22f:	data16 sahf 
  41d231:	fcom   QWORD PTR [ebx]
  41d233:	adc    ebp,DWORD PTR [edi+0x133373b]
  41d239:	dec    ecx
  41d23a:	dec    ebx
  41d23b:	xchg   esi,eax
  41d23c:	in     eax,dx
  41d23d:	cld    
  41d23e:	mov    al,0x39
  41d240:	or     bh,al
  41d242:	in     al,dx
  41d243:	loop   0x41d200
  41d245:	sub    BYTE PTR [edi+0x759e4fae],ah
  41d24b:	addr16 xor eax,0x4b74244f
  41d251:	mov    ecx,DWORD PTR [eax-0x33]
  41d254:	bound  ebp,QWORD PTR [eax+eax*2]
  41d257:	leave  
  41d258:	xlat   BYTE PTR ds:[ebx]
  41d259:	int3   
  41d25a:	(bad)  
  41d25b:	mov    esi,0xbfa0e714
  41d260:	inc    ebp
  41d261:	inc    esp
  41d262:	add    edx,esp
  41d264:	cli    
  41d265:	lea    edx,[ebx+0x3ac68a58]
  41d26b:	and    eax,0xb25b5912
  41d270:	(bad)  
  41d271:	cmp    ebx,DWORD PTR [edx+0x1d6a2eeb]
  41d277:	push   esp
  41d278:	(bad)  [esi-0x3a]
  41d27b:	arpl   di,si
  41d27d:	pop    esp
  41d27e:	cmp    eax,0x20f525d7
  41d283:	imul   esp,DWORD PTR [eax+ebp*8+0x5a],0xf80081e3
  41d28b:	in     eax,0xd9
  41d28d:	mov    bh,0x2e
  41d28f:	not    DWORD PTR [edx]
  41d291:	push   ss
  41d292:	cmp    eax,0x48cdb81f
  41d297:	les    ebx,FWORD PTR [edx-0x46ae7c7b]
  41d29d:	adc    edi,DWORD PTR [esi+0xd]
  41d2a0:	mov    dh,0xa8
  41d2a2:	sbb    eax,0xf3557d53
  41d2a7:	test   DWORD PTR [edx],eax
  41d2a9:	test   DWORD PTR [eax+0x39],0x51e06d01
  41d2b0:	(bad)  
  41d2b2:	mov    bl,0x81
  41d2b4:	push   ebx
  41d2b5:	aad    0x4c
  41d2b7:	jg     0x41d2dd
  41d2b9:	pop    es
  41d2ba:	xchg   edx,eax
  41d2bb:	adc    ebp,DWORD PTR [ebp+ebp*4-0x648fa19a]
  41d2c2:	dec    edi
  41d2c3:	mov    edx,0x8e0cd64
  41d2c8:	nop
  41d2c9:	pop    ecx
  41d2ca:	mov    bh,0x9d
  41d2cc:	dec    edx
  41d2cd:	pop    ebp
  41d2ce:	mov    edi,0x4480649d
  41d2d3:	inc    edx
  41d2d4:	mov    esp,0x6277072c
  41d2d9:	sbb    BYTE PTR [ecx*8-0x671d821d],cl
  41d2e0:	mov    eax,ds:0xf795748f
  41d2e5:	pushf  
  41d2e6:	push   ebx
  41d2e7:	or     al,0x57
  41d2e9:	imul   edx,DWORD PTR [eax-0x56],0xffffffc5
  41d2ed:	dec    eax
  41d2ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ef:	dec    edx
  41d2f0:	sub    cl,BYTE PTR [edx-0x17124cc8]
  41d2f6:	pop    edi
  41d2f7:	xchg   esp,eax
  41d2f8:	pop    ds
  41d2f9:	xor    eax,0x5e1950b4
  41d2fe:	(bad)  
  41d2ff:	cmp    al,0xdf
  41d301:	sbb    al,0x6f
  41d303:	je     0x41d2de
  41d305:	data16 or al,BYTE PTR [ebp-0x20]
  41d309:	cmovl  eax,DWORD PTR [ebx-0xcd907a6]
  41d310:	pop    edi
  41d311:	adc    ah,ch
  41d313:	stc    
  41d314:	mov    eax,ds:0x75bb6146
  41d319:	jbe    0x41d378
  41d31b:	nop
  41d31c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d31d:	push   0x71de8090
  41d322:	call   0x4942:0x928373c4
  41d329:	sbb    eax,0xc8ebce7c
  41d32e:	stos   BYTE PTR es:[edi],al
  41d32f:	mov    esi,ds
  41d331:	test   al,0x1d
  41d333:	mov    dh,BYTE PTR ds:0x76ab6a6c
  41d339:	or     dh,dh
  41d33b:	cdq    
  41d33c:	call   0xa9bb:0xfafe0f43
  41d343:	jns    0x41d2d6
  41d345:	jnp    0x41d367
  41d347:	sub    esi,DWORD PTR [edx-0x12]
  41d34a:	and    DWORD PTR [ebx],0x76c7d33a
  41d350:	dec    ebx
  41d351:	xor    BYTE PTR [edi+edi*4],al
  41d354:	out    dx,eax
  41d355:	jo     0x41d329
  41d357:	sub    bh,BYTE PTR [eax+0x38]
  41d35a:	pop    ebx
  41d35b:	std    
  41d35c:	int    0x62
  41d35e:	out    dx,eax
  41d35f:	bound  ebx,QWORD PTR [edx+edi*8-0x24e642e]
  41d366:	jmp    0x94b7:0xd085025d
  41d36d:	adc    DWORD PTR [esi+0x10a72a03],ebp
  41d373:	or     DWORD PTR [ebp-0x4c6796b1],0x38e1e53a
  41d37d:	(bad)  
  41d37e:	xchg   esp,eax
  41d37f:	fcomi  st,st(6)
  41d381:	fdivr  DWORD PTR [eax]
  41d383:	mov    eax,ds:0x59591dda
  41d388:	test   eax,0x7f4fd05d
  41d38d:	hlt    
  41d38e:	cmp    ah,dh
  41d390:	pop    edi
  41d391:	xchg   edi,eax
  41d392:	loope  0x41d37a
  41d394:	shl    DWORD PTR [esi-0x5a],0x1c
  41d398:	sti    
  41d399:	push   0x52
  41d39b:	mov    cl,0x91
  41d39d:	mov    ds:0x4bc01ab0,al
  41d3a2:	pop    ds
  41d3a3:	xchg   esp,eax
  41d3a4:	pop    es
  41d3a5:	lea    ebx,[esi+0x2e194f6c]
  41d3ab:	push   ecx
  41d3ac:	in     al,dx
  41d3ad:	out    dx,eax
  41d3ae:	test   eax,0xb18baee7
  41d3b3:	cwde   
  41d3b4:	retf   
  41d3b5:	test   DWORD PTR [edx-0x19],0x8aac3d17
  41d3bc:	js     0x41d41a
  41d3be:	cmp    DWORD PTR [ecx-0x7253ee4b],ebp
  41d3c4:	ja     0x41d407
  41d3c6:	push   cs
  41d3c7:	(bad)  
  41d3c8:	inc    ebx
  41d3c9:	ror    BYTE PTR [edi-0x23],cl
  41d3cc:	and    edi,DWORD PTR [ebx+0x27]
  41d3cf:	jbe    0x41d3e0
  41d3d1:	iret   
  41d3d2:	cdq    
  41d3d3:	ret    
  41d3d4:	xchg   esp,eax
  41d3d5:	call   0x8cf:0x8ede92de
  41d3dc:	xchg   edx,esp
  41d3de:	jb     0x41d3b6
  41d3e0:	jno    0x41d3d1
  41d3e2:	mov    ch,0x6c
  41d3e4:	mov    WORD PTR [edi+0x6a96c60c],?
  41d3ea:	(bad)  
  41d3eb:	jmp    0xf30f:0x73b32819
  41d3f2:	or     DWORD PTR [edx-0x70],esp
  41d3f5:	mov    bl,0xf
  41d3f7:	cmp    al,0xfb
  41d3f9:	lea    ebx,[ecx]
  41d3fb:	out    0x85,al
  41d3fd:	cmp    dl,BYTE PTR ds:0xae8d9e6
  41d403:	mov    al,0x81
  41d405:	rcl    BYTE PTR [esi],1
  41d407:	cmp    BYTE PTR [esi-0x7908501b],dl
  41d40d:	sub    ebp,DWORD PTR [ebx-0x40cf6a40]
  41d413:	cld    
  41d414:	scas   eax,DWORD PTR es:[edi]
  41d415:	fdivr  QWORD PTR [ebx]
  41d417:	test   al,bl
  41d419:	ja     0x41d3b8
  41d41b:	sub    al,0x6d
  41d41d:	dec    ecx
  41d41e:	and    al,BYTE PTR [esp+edx*1+0x0]
  41d422:	cs xor al,0x56
  41d425:	mov    al,ds:0xd7fa61a5
  41d42a:	jno    0x41d3cb
  41d42c:	fdivr  st,st(7)
  41d42e:	cs pusha 
  41d430:	or     cl,BYTE PTR [ebx]
  41d432:	mov    edi,0xc57ae13a
  41d437:	and    BYTE PTR fs:[esi-0x1796c4e0],dh
  41d43e:	push   ebp
  41d43f:	adc    ebp,DWORD PTR [edx-0x54]
  41d442:	inc    esi
  41d443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d444:	imul   BYTE PTR [ebp-0x4f]
  41d447:	add    DWORD PTR [ebp-0x6deadcc2],0x3e
  41d44e:	sub    eax,0xb9676bdd
  41d453:	(bad)  
  41d454:	and    al,0xc7
  41d456:	loope  0x41d437
  41d458:	jns    0x41d460
  41d45a:	inc    esi
  41d45b:	mov    bh,0x17
  41d45d:	or     al,0xcc
  41d45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d460:	inc    ebx
  41d461:	and    bh,dl
  41d463:	icebp  
  41d464:	sbb    BYTE PTR [eax],ah
  41d466:	test   DWORD PTR [ebx],0x6ba9d647
  41d46c:	mov    ds:0xdc59f8f2,al
  41d471:	or     dl,BYTE PTR [eax+0x78]
  41d474:	mov    ebp,0xc0e1987f
  41d479:	ins    BYTE PTR es:[edi],dx
  41d47a:	mov    cl,0x84
  41d47c:	mov    bl,0xe7
  41d47e:	lock mov ds,WORD PTR [ecx]
  41d481:	cmc    
  41d482:	inc    esp
  41d483:	shl    BYTE PTR [ecx],0xcb
  41d486:	mov    edi,DWORD PTR [edx+0x4dd3ade3]
  41d48c:	add    DWORD PTR [edi],eax
  41d48e:	mov    edx,0x778f0ae8
  41d493:	and    al,0x57
  41d495:	cmp    al,0xd3
  41d497:	xor    BYTE PTR [edi+0x63a05b93],ah
  41d49d:	ins    DWORD PTR es:[edi],dx
  41d49e:	xor    DWORD PTR [ebx],edi
  41d4a0:	pop    edx
  41d4a1:	outs   dx,DWORD PTR ds:[esi]
  41d4a2:	dec    edx
  41d4a3:	sbb    al,0x11
  41d4a5:	and    bl,BYTE PTR [esi+0x11]
  41d4a8:	outs   dx,BYTE PTR ds:[esi]
  41d4a9:	stos   DWORD PTR es:[edi],eax
  41d4aa:	mov    edi,0x650b12bb
  41d4af:	ds repnz push eax
  41d4b2:	rcl    BYTE PTR [eax-0x43],1
  41d4b5:	fucom  st(5)
  41d4b7:	cmp    ah,BYTE PTR [eax+0x53]
  41d4ba:	mov    WORD PTR [esi+edi*2+0x6b2cc3a6],?
  41d4c1:	cli    
  41d4c2:	leave  
  41d4c3:	(bad)  
  41d4c5:	jl     0x41d44f
  41d4c7:	(bad)  
  41d4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4c9:	sub    BYTE PTR [ecx-0x51],bh
  41d4cc:	or     al,0x82
  41d4ce:	xor    ah,BYTE PTR [esi-0x7cf74b0a]
  41d4d4:	imul   ebp,edx,0xffffffa6
  41d4d7:	test   al,0x2b
  41d4d9:	adc    ah,BYTE PTR [ecx]
  41d4db:	sbb    esi,edx
  41d4dd:	mov    ch,0x64
  41d4df:	in     al,dx
  41d4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4e1:	in     eax,dx
  41d4e2:	ja     0x41d542
  41d4e4:	ja     0x41d4ed
  41d4e6:	lea    esp,[di-0x658a]
  41d4eb:	and    edi,DWORD PTR [esi]
  41d4ed:	xchg   ebx,eax
  41d4ee:	mov    DWORD PTR [ecx+edx*2-0x7b],eax
  41d4f2:	and    DWORD PTR [edx],0x3cfae6c0
  41d4f8:	pause  
  41d4fa:	xor    ebp,ebp
  41d4fc:	adc    dl,BYTE PTR [esi]
  41d4fe:	gs mov ecx,0x4b07e665
  41d504:	mov    ecx,eax
  41d506:	popf   
  41d507:	call   0x1af5:0xe8d169a5
  41d50e:	ja     0x41d4fe
  41d510:	jmp    0x6b39:0xc94c4c6e
  41d517:	loope  0x41d4b5
  41d519:	jg     0x41d568
  41d51b:	addr16 jae 0x41d4fb
  41d51e:	rcl    DWORD PTR [ecx-0x5f],1
  41d521:	mov    ebp,0x7b8357fa
  41d526:	inc    ecx
  41d527:	adc    edi,DWORD PTR [ebx-0x6b3a9e8e]
  41d52d:	cwde   
  41d52e:	inc    edi
  41d52f:	inc    ebp
  41d530:	sbb    BYTE PTR [edx+0x7f939454],al
  41d536:	fistp  WORD PTR [ebp-0x10]
  41d539:	out    dx,al
  41d53a:	jge    0x41d502
  41d53c:	pop    esp
  41d53d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d53e:	fidivr WORD PTR [ebx]
  41d540:	mov    eax,0x2523df3e
  41d545:	ss push 0x14
  41d548:	jae    0x41d567
  41d54a:	ret    
  41d54b:	aas    
  41d54c:	add    ah,BYTE PTR [ecx+0x4fc77128]
  41d552:	push   0xffffffd5
  41d554:	div    DWORD PTR [edx+0x6d]
  41d557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d558:	ss sahf 
  41d55a:	and    BYTE PTR [ebx+edx*4-0x3b1b247e],ah
  41d561:	and    DWORD PTR fs:[edi],esp
  41d564:	push   ds
  41d565:	lods   al,BYTE PTR ds:[esi]
  41d566:	cmp    al,0xa5
  41d568:	add    BYTE PTR [eax],bh
  41d56a:	mov    esi,0xf9a893ed
  41d56f:	int3   
  41d570:	arpl   ax,cx
  41d572:	das    
  41d573:	jl     0x41d5a2
  41d575:	lods   eax,DWORD PTR ds:[esi]
  41d576:	sub    ecx,eax
  41d578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d579:	and    al,0x39
  41d57b:	jb     0x41d578
  41d57d:	out    0x1,eax
  41d57f:	test   esp,0x7cd9264d
  41d585:	ds mov edx,0x6322d2c
  41d58b:	leave  
  41d58c:	xor    al,0x5d
  41d58e:	inc    eax
  41d58f:	repz mov WORD PTR [edx+0x48d97af7],?
  41d596:	sbb    DWORD PTR [edi+0x6ddaf065],edx
  41d59c:	xor    dh,BYTE PTR [eax-0xf910356]
  41d5a2:	sbb    BYTE PTR [edx+0x1d],dh
  41d5a5:	add    eax,0x51f2f324
  41d5aa:	adc    al,0xb6
  41d5ac:	imul   edx,DWORD PTR [ebp-0xa],0x7b
  41d5b0:	(bad)  
  41d5b1:	mov    al,0x54
  41d5b3:	cli    
  41d5b4:	rcl    BYTE PTR [esi],0x87
  41d5b7:	sub    dh,bh
  41d5b9:	mov    ds,WORD PTR [edi+0x3557099]
  41d5bf:	daa    
  41d5c0:	fisttp QWORD PTR [edx-0x27b0143]
  41d5c6:	aad    0x88
  41d5c8:	fadd   st(7),st
  41d5ca:	and    eax,0xcd5e1589
  41d5cf:	pop    esp
  41d5d0:	(bad)  
  41d5d1:	inc    edx
  41d5d2:	loopne 0x41d64c
  41d5d4:	mov    esi,0x4972f84a
  41d5d9:	stos   DWORD PTR es:[edi],eax
  41d5da:	cli    
  41d5db:	nop
  41d5dc:	call   DWORD PTR [ecx+0x64bbdba4]
  41d5e2:	pop    ebx
  41d5e3:	cmp    eax,DWORD PTR [edx-0x67]
  41d5e6:	push   esi
  41d5e7:	cld    
  41d5e8:	std    
  41d5e9:	add    ch,BYTE PTR [esi+0x71]
  41d5ec:	jle    0x41d5cb
  41d5ee:	jle    0x41d63c
  41d5f0:	jnp    0x41d588
  41d5f2:	in     al,0x4b
  41d5f4:	call   0x97f1:0x214fdea4
  41d5fb:	jl     0x41d5b6
  41d5fd:	mov    ebp,0x7409a6ff
  41d602:	fdiv   QWORD PTR [edx-0x6c]
  41d605:	ret    
  41d606:	mov    eax,0x29019093
  41d60b:	xchg   edi,eax
  41d60c:	add    BYTE PTR [edx+0x1dc33377],al
  41d612:	and    eax,0x308b9f9c
  41d617:	es sbb ecx,ecx
  41d61a:	les    eax,FWORD PTR [eax]
  41d61c:	test   BYTE PTR es:[ecx+0x4a],bh
  41d620:	test   al,0xab
  41d622:	mov    esi,0x9f68e084
  41d627:	repnz sub edx,edx
  41d62a:	rol    BYTE PTR [esi-0x7e],1
  41d62d:	in     al,0x89
  41d62f:	retf   
  41d630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d631:	mov    edi,0xa4305230
  41d636:	fbld   TBYTE PTR [edx]
  41d638:	jp     0x41d60b
  41d63a:	adc    eax,0x9c11efcb
  41d63f:	sub    eax,0xcecb4725
  41d644:	jbe    0x41d5d4
  41d646:	mov    edx,0xb99fdef6
  41d64b:	sbb    BYTE PTR [eax+0x24156f07],bl
  41d651:	add    edi,DWORD PTR [edi-0x14]
  41d654:	test   DWORD PTR [edx+0x36],eax
  41d657:	js     0x41d6cf
  41d659:	xchg   edi,eax
  41d65a:	mov    dh,0x34
  41d65c:	or     eax,0xd5726e19
  41d661:	lds    edi,FWORD PTR [eax]
  41d663:	pop    ebp
  41d664:	lods   eax,DWORD PTR ds:[esi]
  41d665:	push   ds
  41d666:	hlt    
  41d667:	xor    edi,DWORD PTR [esi+0x3b]
  41d66a:	(bad)
  41d66f:	scas   al,BYTE PTR es:[edi]
  41d670:	mov    ebx,0x836be2b2
  41d675:	fnsave ds:0xc185feeb
  41d67b:	inc    esi
  41d67c:	inc    esp
  41d67d:	loope  0x41d692
  41d67f:	push   eax
  41d680:	(bad)  
  41d681:	sub    eax,0x6f701f3c
  41d686:	mov    al,0xdb
  41d688:	mov    edx,0xf332f6ba
  41d68d:	loop   0x41d62d
  41d68f:	ja     0x41d61e
  41d691:	scas   al,BYTE PTR es:[edi]
  41d692:	xchg   edx,eax
  41d693:	ss mov bl,0x3f
  41d696:	and    ch,BYTE PTR [ebx-0x22]
  41d699:	xor    bp,cx
  41d69c:	or     al,0xfa
  41d69e:	and    edx,DWORD PTR [ebx-0x535fd8ed]
  41d6a4:	psubusw mm1,QWORD PTR [ecx-0x41530840]
  41d6ab:	sbb    eax,0xebbcd48d
  41d6b0:	ja     0x41d718
  41d6b2:	xchg   edx,eax
  41d6b3:	ret    0x7736
  41d6b6:	stc    
  41d6b7:	sub    bh,bh
  41d6b9:	pop    ecx
  41d6ba:	push   edx
  41d6bb:	cmc    
  41d6bc:	hlt    
  41d6bd:	retf   0x6239
  41d6c0:	mov    cs,ebx
  41d6c2:	sub    dh,BYTE PTR [edx+0x54]
  41d6c5:	fwait
  41d6c6:	jle    0x41d715
  41d6c8:	scas   eax,DWORD PTR es:[edi]
  41d6c9:	push   esi
  41d6ca:	in     eax,0x80
  41d6cc:	jl     0x41d747
  41d6ce:	aam    0x12
  41d6d0:	int3   
  41d6d1:	ffree  st(6)
  41d6d3:	shr    DWORD PTR [edx-0x58],0xae
  41d6d7:	lods   eax,DWORD PTR ds:[esi]
  41d6d8:	jmp    0x41d752
  41d6da:	loopne 0x41d729
  41d6dc:	add    DWORD PTR [esi+0x755e22ba],edx
  41d6e2:	jno    0x41d676
  41d6e4:	aas    
  41d6e5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6e7:	cli    
  41d6e8:	rcr    BYTE PTR [esp+esi*8+0x73],cl
  41d6ec:	inc    ebp
  41d6ed:	mov    ah,0x59
  41d6ef:	push   esp
  41d6f0:	sub    bh,BYTE PTR [ebx+ebp*8-0x4]
  41d6f4:	int3   
  41d6f5:	adc    ah,ch
  41d6f7:	xchg   ebp,esi
  41d6f9:	mov    bh,0xcd
  41d6fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6fc:	lds    cx,DWORD PTR ds:0x69af8c70
  41d703:	jecxz  0x41d70b
  41d705:	rcl    DWORD PTR [edx+0x274642e3],0x86
  41d70c:	pop    esp
  41d70d:	cld    
  41d70e:	xchg   edx,eax
  41d70f:	(bad)  
  41d710:	vshufps xmm5,xmm1,XMMWORD PTR [esi],0x98
  41d715:	ror    ebp,0xe1
  41d718:	and    esi,esi
  41d71a:	(bad)  
  41d71b:	stc    
  41d71c:	popa   
  41d71d:	xor    eax,DWORD PTR [eax+0x5d8e485]
  41d723:	ret    
  41d724:	mov    bl,0x46
  41d726:	inc    edi
  41d727:	and    al,0xc9
  41d729:	lods   al,BYTE PTR ds:[esi]
  41d72a:	xor    BYTE PTR [esi-0x60e0a331],bl
  41d730:	loop   0x41d6b8
  41d732:	out    0xf1,al
  41d734:	(bad)  
  41d735:	int3   
  41d736:	js     0x41d6d8
  41d738:	rcl    bh,1
  41d73a:	fs mov ebx,0x3d231e3f
  41d740:	mov    edx,0xa8147f45
  41d745:	ret    
  41d746:	push   ss
  41d747:	in     eax,0x20
  41d749:	xchg   esp,eax
  41d74a:	call   0xfb19ed85
  41d74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d750:	pop    esp
  41d751:	sub    DWORD PTR [ebx],0x36
  41d754:	xor    al,0x3c
  41d756:	shr    DWORD PTR [eax],0x74
  41d759:	pop    ecx
  41d75a:	push   ecx
  41d75b:	cdq    
  41d75c:	test   BYTE PTR [edi+0x1b],ah
  41d75f:	adc    cl,BYTE PTR [esi+esi*4-0xa714ee2]
  41d766:	lahf   
  41d767:	dec    BYTE PTR [ecx+edi*4-0x73]
  41d76b:	out    dx,eax
  41d76c:	je     0x41d785
  41d76e:	call   0x9f8e:0x218f2877
  41d775:	not    ebx
  41d777:	push   esp
  41d778:	repz cli 
  41d77a:	adc    dl,BYTE PTR [edx+0x77]
  41d77d:	mov    ebp,0x587f7cd7
  41d782:	push   cs
  41d783:	xchg   DWORD PTR [ebx],ebx
  41d785:	inc    bh
  41d787:	(bad)  
  41d788:	addr16 and al,0xe4
  41d78b:	mov    dl,0x2a
  41d78d:	jae    0x41d7ed
  41d78f:	inc    esp
  41d790:	loopne 0x41d744
  41d792:	cmp    eax,0xe865286a
  41d797:	or     edx,edi
  41d799:	dec    edi
  41d79a:	sbb    al,0xc7
  41d79c:	mov    ebp,0x7324796d
  41d7a1:	repz mov edi,0x528a75f8
  41d7a7:	sti    
  41d7a8:	sub    edx,DWORD PTR [ecx+0x7f]
  41d7ab:	pushf  
  41d7ac:	cwde   
  41d7ad:	dec    eax
  41d7ae:	jb     0x41d760
  41d7b0:	and    eax,0xd589a1ec
  41d7b5:	pop    eax
  41d7b6:	in     eax,0x74
  41d7b8:	mov    ds:0xb9d240e8,al
  41d7bd:	pop    ss
  41d7be:	das    
  41d7bf:	and    eax,edi
  41d7c1:	jmp    0x94b60194
  41d7c6:	mov    ebp,0x5bb40361
  41d7cb:	fistp  DWORD PTR [eax-0x61]
  41d7ce:	or     bh,al
  41d7d0:	dec    edi
  41d7d1:	xor    al,0x35
  41d7d3:	jl     0x41d7da
  41d7d5:	xor    eax,0x55c37e50
  41d7da:	sahf   
  41d7db:	and    DWORD PTR [ebx-0x60d0a7ef],0x8b835b40
  41d7e5:	jbe    0x41d824
  41d7e7:	mov    dh,0x95
  41d7e9:	test   dl,ah
  41d7eb:	mov    bh,0x4f
  41d7ed:	pop    edi
  41d7ee:	dec    esp
  41d7ef:	xchg   ecx,eax
  41d7f0:	xchg   edi,eax
  41d7f1:	mov    bh,0xf0
  41d7f3:	xchg   ebx,eax
  41d7f4:	mov    esi,0x509ebefd
  41d7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7fa:	mov    ecx,DWORD PTR [edi+0x17]
  41d7fd:	fwait
  41d7fe:	sub    ah,BYTE PTR [ecx]
  41d800:	pop    es
  41d801:	push   ds
  41d802:	xor    DWORD PTR [esi+0x73fde973],0xf1645f4
  41d80c:	dec    ebx
  41d80d:	and    al,0x98
  41d80f:	mov    dh,BYTE PTR [eax-0x354f42d0]
  41d815:	test   eax,0xee78353f
  41d81a:	pop    esp
  41d81b:	imul   edx,DWORD PTR [ecx+0x1e65d5f7],0x3f
  41d822:	adc    DWORD PTR [edi],esi
  41d824:	(bad)  
  41d825:	push   ecx
  41d826:	lods   eax,DWORD PTR ds:[esi]
  41d827:	xchg   edi,eax
  41d828:	imul   ecx,DWORD PTR ds:0x77649e42,0x9800647f
  41d832:	hlt    
  41d833:	daa    
  41d834:	les    ebp,FWORD PTR [ebx-0x3f89e6cf]
  41d83a:	repnz test BYTE PTR [edx+0x23],dl
  41d83e:	xor    al,0x5c
  41d840:	xor    eax,0xf5254e92
  41d845:	aad    0x35
  41d847:	loope  0x41d8c8
  41d849:	shl    BYTE PTR [edx],1
  41d84b:	mov    gs,WORD PTR [eax+0x70]
  41d84e:	add    dh,bl
  41d850:	sbb    al,0xbc
  41d852:	dec    edx
  41d853:	sub    esi,DWORD PTR [edx-0x4635d2b9]
  41d859:	push   edx
  41d85a:	mov    ch,0x81
  41d85c:	stos   BYTE PTR es:[edi],al
  41d85d:	pop    es
  41d85e:	inc    eax
  41d85f:	cwde   
  41d860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d861:	xchg   edi,eax
  41d862:	push   esp
  41d863:	pusha  
  41d864:	ss mov ebp,0xe9e88339
  41d86a:	mov    eax,ds:0x2caf36e7
  41d86f:	div    BYTE PTR [edi+0x147cb330]
  41d875:	pop    edi
  41d876:	dec    esp
  41d877:	fidivr DWORD PTR [esi+0x7124cfce]
  41d87d:	sbb    ebp,DWORD PTR [ecx+0x3f5d139b]
  41d883:	(bad)  
  41d885:	(bad)  
  41d886:	hlt    
  41d887:	sbb    ebx,DWORD PTR [ebp+0x4d]
  41d88a:	ja     0x41d822
  41d88c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d88d:	ins    BYTE PTR es:[edi],dx
  41d88e:	inc    edi
  41d88f:	cmp    eax,0x5c0c856c
  41d894:	iret   
  41d895:	call   0xd4ad4616
  41d89a:	in     eax,dx
  41d89b:	jge    0x41d900
  41d89d:	scas   eax,DWORD PTR es:[edi]
  41d89e:	sbb    ecx,DWORD PTR [ebx+eax*8]
  41d8a1:	xchg   ecx,eax
  41d8a2:	imul   ebp,edi,0x30
  41d8a5:	fisubr WORD PTR [ecx+0x1297eb78]
  41d8ab:	ror    DWORD PTR [eax+edx*4],cl
  41d8ae:	mov    edi,edx
  41d8b0:	stc    
  41d8b1:	js     0x41d885
  41d8b3:	lock push edi
  41d8b5:	sahf   
  41d8b6:	and    eax,0x60ce73b4
  41d8bb:	jp     0x41d889
  41d8bd:	loop   0x41d8ce
  41d8bf:	and    DWORD PTR ds:0xb48f4501,eax
  41d8c5:	in     eax,0xb2
  41d8c7:	lods   eax,DWORD PTR ds:[esi]
  41d8c8:	ds enter 0xb349,0x82
  41d8cd:	shl    BYTE PTR [edx],1
  41d8cf:	dec    esi
  41d8d0:	icebp  
  41d8d1:	in     al,0x31
  41d8d3:	add    edi,edx
  41d8d5:	inc    ebp
  41d8d6:	stos   BYTE PTR es:[edi],al
  41d8d7:	(bad)  
  41d8d8:	iret   
  41d8d9:	xchg   DWORD PTR [eax+0x113f3876],esi
  41d8df:	out    dx,eax
  41d8e0:	adc    ch,BYTE PTR [edx+0xbf28de4]
  41d8e6:	sbb    al,0x87
  41d8e8:	mov    ?,WORD PTR ds:0xd910602
  41d8ee:	jnp    0x41d913
  41d8f0:	dec    edx
  41d8f1:	or     DWORD PTR [edi+eax*4],eax
  41d8f4:	xor    esp,DWORD PTR [edx+eax*1+0x6e]
  41d8f8:	add    ch,BYTE PTR [ecx]
  41d8fa:	in     eax,0x60
  41d8fc:	jnp    0x41d978
  41d8fe:	jns    0x41d94a
  41d900:	sar    BYTE PTR [ebx-0x4c],0xfc
  41d904:	push   ds
  41d905:	ret    0x4eda
  41d908:	xor    DWORD PTR [esi+0x3778400e],edx
  41d90e:	cmp    ecx,ebp
  41d910:	ins    DWORD PTR es:[edi],dx
  41d911:	sub    al,0xb3
  41d913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d914:	pminsw mm3,QWORD PTR [ecx+0x7f07cf09]
  41d91b:	jp     0x41d972
  41d91d:	aam    0x73
  41d91f:	cmp    dh,BYTE PTR [eax+0x90e3a47]
  41d925:	xor    esp,ecx
  41d927:	jnp    0x41d967
  41d929:	sbb    DWORD PTR [esp+edx*4+0x0],ebx
  41d92d:	add    dl,BYTE PTR [eax+0x5ab9bcba]
  41d933:	xor    BYTE PTR [esi-0x22a102f0],ch
  41d939:	dec    eax
  41d93a:	test   DWORD PTR [esi],edi
  41d93c:	pop    ecx
  41d93d:	hlt    
  41d93e:	repz xchg bl,ah
  41d941:	mov    dh,0xc7
  41d943:	and    al,0x23
  41d945:	and    BYTE PTR [eax],dl
  41d947:	xchg   BYTE PTR [esi-0x22],dl
  41d94a:	sub    ebp,DWORD PTR [ecx-0x6d]
  41d94d:	jg     0x41d8d1
  41d94f:	and    ch,dh
  41d951:	adc    al,0x9a
  41d953:	rcl    ah,1
  41d955:	xchg   DWORD PTR [eax],esi
  41d957:	mov    cl,0xff
  41d959:	clc    
  41d95a:	pop    ds
  41d95b:	out    dx,al
  41d95c:	out    0x37,al
  41d95e:	sbb    al,0xaa
  41d960:	mov    ebp,0xc9341fe6
  41d965:	cmp    esi,DWORD PTR [ebx+0x5f1ed24d]
  41d96b:	pop    edx
  41d96c:	mov    esi,0x9e9b8c07
  41d971:	les    ecx,FWORD PTR [eax+0x3d958419]
  41d977:	cli    
  41d978:	xchg   edi,eax
  41d979:	mov    dh,0x93
  41d97b:	mov    al,ds:0x4d4c8601
  41d980:	xchg   edi,eax
  41d981:	ror    BYTE PTR [ebp-0x15],0xf8
  41d985:	and    al,0x54
  41d987:	xchg   esi,eax
  41d988:	jne    0x41d915
  41d98a:	retf   0xf71a
  41d98d:	jmp    0xe64eba3c
  41d992:	xchg   esi,eax
  41d993:	repz mov eax,ds:0x4e0708c7
  41d999:	xchg   BYTE PTR [edi],bl
  41d99b:	dec    esi
  41d99c:	sub    eax,0xcbb381ba
  41d9a1:	mov    ecx,0x8669b74a
  41d9a6:	or     dl,bh
  41d9a8:	inc    ecx
  41d9a9:	or     eax,edx
  41d9ab:	push   edi
  41d9ac:	pop    esi
  41d9ad:	mov    ecx,DWORD PTR [ebx+0xef04c42]
  41d9b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9b4:	and    DWORD PTR [edx+0x60],0x55f24b1c
  41d9bb:	and    ecx,edx
  41d9bd:	mov    DWORD PTR [ebp-0x4c],ecx
  41d9c0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d9c3:	mov    edx,DWORD PTR [ebp-0x48]
  41d9c6:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41d9cd:	mov    DWORD PTR [ebp-0x48],ecx
  41d9d0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d9d3:	mov    edx,0xfa5e1530
  41d9d8:	sub    edx,ecx
  41d9da:	add    edx,DWORD PTR [ebp-0x44]
  41d9dd:	mov    DWORD PTR [ebp-0x44],edx
  41d9e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d9e3:	xor    ecx,eax
  41d9e5:	add    ecx,esi
  41d9e7:	jne    0x41b5e7
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9f0:	xor    ecx,eax
  41d9f2:	mov    eax,DWORD PTR [ebp+0x10]
  41d9f5:	add    ecx,esi
  41d9f7:	mov    DWORD PTR [eax],ecx
  41d9f9:	pop    edi
  41d9fa:	pop    esi
  41d9fb:	pop    ebx
  41d9fc:	leave  
  41d9fd:	ret    0xc
  41da00:	push   ebp
  41da01:	mov    ebp,esp
  41da03:	sub    esp,0x78
  41da06:	add    ecx,ecx
  41da08:	push   esi
  41da09:	mov    DWORD PTR ds:0x42a1a3,0x13
  41da13:	cmp    DWORD PTR ds:0x42a1a3,0x0
  41da1a:	je     0x41da5c
  41da20:	cmp    DWORD PTR ds:0x42a1a3,0x1e
  41da27:	jle    0x41da5c
  41da2d:	jmp    0x41da4a
  41da32:	push   0x42a18b
  41da37:	push   DWORD PTR [ebp-0x18]
  41da3a:	push   0x429018
  41da3f:	push   0x4290d7
  41da44:	call   DWORD PTR ds:0x42a2b7
  41da4a:	mov    esi,DWORD PTR ds:0x42a1a3
  41da50:	dec    esi
  41da51:	mov    DWORD PTR ds:0x42a1a3,esi
  41da57:	jmp    0x41da13
  41da5c:	push   edi
  41da5d:	mov    eax,ds:0x42942f
  41da62:	sub    DWORD PTR ds:0x42a1d3,ecx
  41da68:	mov    DWORD PTR [ebp-0x24],eax
  41da6b:	and    eax,edi
  41da6d:	mov    eax,ds:0x42954f
  41da72:	movzx  ecx,WORD PTR ds:0x42a12b
  41da79:	adc    ecx,DWORD PTR ds:0x42a19f
  41da7f:	mov    DWORD PTR ds:0x42a12b,ecx
  41da85:	mov    DWORD PTR [ebp-0x30],eax
  41da88:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41da8f:	and    DWORD PTR ds:0x42a12b,ebx
  41da95:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  41da9c:	mov    eax,DWORD PTR [ebp-0x10]
  41da9f:	sub    DWORD PTR ds:0x42a12f,0x69af
  41daa9:	mov    ecx,DWORD PTR [ebp-0x10]
  41daac:	and    edi,0x886
  41dab2:	sub    eax,ecx
  41dab4:	mov    DWORD PTR [ebp-0x10],eax
  41dab7:	sbb    DWORD PTR ds:0x42a16b,0x4fc4
  41dac1:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  41dac8:	and    DWORD PTR ds:0x42a157,0x0
  41dad2:	xor    eax,eax
  41dad4:	or     eax,DWORD PTR ds:0x42a157
  41dada:	inc    eax
  41dadb:	mov    ds:0x42a157,eax
  41dae0:	cmp    DWORD PTR ds:0x42a157,0x2f
  41dae7:	jle    0x41db08
  41daed:	jmp    0x41dafb
  41daf2:	push   DWORD PTR [ebp-0x18]
  41daf5:	call   DWORD PTR ds:0x42a2bf
  41dafb:	cmp    DWORD PTR ds:0x42a157,0x1f
  41db02:	jb     0x41dad2
  41db08:	mov    eax,DWORD PTR [ebp-0x18]
  41db0b:	mov    ecx,DWORD PTR [ebp-0x18]
  41db0e:	mov    esi,DWORD PTR ds:0x42a22f
  41db14:	mov    esi,DWORD PTR [esi]
  41db16:	sbb    DWORD PTR ds:0x42a15b,esi
  41db1c:	sub    eax,ecx
  41db1e:	and    DWORD PTR ds:0x42a18f,0x0
  41db28:	jmp    0x41db3c
  41db2d:	xor    edi,edi
  41db2f:	xor    edi,DWORD PTR ds:0x42a18f
  41db35:	inc    edi
  41db36:	mov    DWORD PTR ds:0x42a18f,edi
  41db3c:	cmp    DWORD PTR ds:0x42a18f,0x19
  41db43:	jae    0x41db6e
  41db49:	cmp    DWORD PTR ds:0x42a18f,0x1e
  41db50:	jle    0x41db6e
  41db56:	jmp    0x41db69
  41db5b:	push   0x2b00
  41db60:	push   DWORD PTR [ebp-0xc]
  41db63:	call   DWORD PTR ds:0x42a2c3
  41db69:	jmp    0x41db2d
  41db6e:	mov    DWORD PTR [ebp-0x18],eax
  41db71:	xor    eax,0x7540
  41db76:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  41db7d:	mov    eax,DWORD PTR [ebp-0xc]
  41db80:	xor    DWORD PTR ds:0x42a1d3,edi
  41db86:	mov    ecx,DWORD PTR [ebp-0xc]
  41db89:	sub    eax,ecx
  41db8b:	jmp    0x41ff41
  41db90:	loope  0x41db9a
  41db92:	loope  0x41db55
  41db94:	xchg   DWORD PTR [edi-0x1517f73f],eax
  41db9a:	iret   
  41db9b:	addr16 dec edx
  41db9d:	add    ah,BYTE PTR [eax+0x1b]
  41dba0:	not    dl
  41dba2:	jns    0x41dc1e
  41dba4:	loope  0x41dc05
  41dba6:	jp     0x41dc22
  41dba8:	stos   DWORD PTR es:[edi],eax
  41dba9:	cld    
  41dbaa:	and    DWORD PTR [edx],ecx
  41dbac:	out    dx,al
  41dbad:	jns    0x41dc27
  41dbaf:	pop    edi
  41dbb0:	jmp    0x41dbd4
  41dbb2:	pop    edi
  41dbb3:	sbb    esp,DWORD PTR [edx-0x78fdfec9]
  41dbb9:	fld    QWORD PTR [edi]
  41dbbb:	std    
  41dbbc:	push   ebp
  41dbbd:	pop    ebp
  41dbbe:	dec    eax
  41dbbf:	mov    eax,ds:0xd60b509d
  41dbc4:	rcl    esp,0x28
  41dbc7:	dec    eax
  41dbc8:	inc    esi
  41dbc9:	stos   DWORD PTR es:[edi],eax
  41dbca:	pop    ebp
  41dbcb:	add    BYTE PTR [edx-0x55],0xfa
  41dbcf:	mov    eax,DWORD PTR [eax+0x23af894]
  41dbd5:	fisubr DWORD PTR [ebx]
  41dbd7:	pop    esp
  41dbd8:	ret    0x93aa
  41dbdb:	js     0x41db9e
  41dbdd:	push   0x4f
  41dbdf:	adc    BYTE PTR [ebp-0x6bcb9e1f],dh
  41dbe5:	pop    ss
  41dbe6:	add    DWORD PTR [ecx],esi
  41dbe8:	out    0xf0,eax
  41dbea:	xchg   esi,eax
  41dbeb:	sbb    DWORD PTR [edx+0x2f],edi
  41dbee:	ins    DWORD PTR es:[edi],dx
  41dbef:	fwait
  41dbf0:	cmp    al,0x21
  41dbf2:	pop    ds
  41dbf3:	sub    ebp,DWORD PTR [ebx+0x15]
  41dbf6:	inc    esi
  41dbf7:	push   ecx
  41dbf8:	push   ecx
  41dbf9:	or     BYTE PTR ds:0xb1c0b2fe,ch
  41dbff:	mov    edi,0x18df1357
  41dc04:	sbb    ecx,DWORD PTR [ebx-0x1]
  41dc07:	sbb    eax,0x696153d
  41dc0c:	jbe    0x41dbba
  41dc0e:	pop    ebx
  41dc0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc10:	scas   al,BYTE PTR es:[edi]
  41dc11:	fstp   st(6)
  41dc13:	xchg   ebp,eax
  41dc14:	xor    eax,0x8ba813db
  41dc19:	jmp    0x55e3:0x41ea8b8a
  41dc20:	xchg   esp,eax
  41dc21:	adc    DWORD PTR [ebp-0x3f],0x5ada8360
  41dc28:	(bad)  
  41dc29:	stc    
  41dc2a:	and    ecx,DWORD PTR [ecx-0x6a3c54b7]
  41dc30:	dec    edx
  41dc31:	mov    eax,ds:0xcbef5748
  41dc36:	jle    0x41dc15
  41dc38:	sub    BYTE PTR [ebx+eiz*2],ch
  41dc3b:	adc    al,0xfd
  41dc3d:	(bad)  
  41dc3e:	stc    
  41dc3f:	sub    cl,BYTE PTR [ebx-0x86a1e40]
  41dc45:	loop   0x41dc8e
  41dc47:	dec    esp
  41dc48:	cmp    eax,DWORD PTR es:[eax]
  41dc4b:	into   
  41dc4c:	pop    ebp
  41dc4d:	fstp   QWORD PTR [edi-0x5a]
  41dc50:	jne    0x41dc19
  41dc52:	cs or  esp,0xc00babb
  41dc59:	mov    bl,ch
  41dc5b:	cli    
  41dc5c:	sahf   
  41dc5d:	dec    esi
  41dc5e:	mov    cl,0xfc
  41dc60:	push   ss
  41dc61:	out    dx,al
  41dc62:	pop    esi
  41dc63:	inc    esp
  41dc64:	push   0xa799d620
  41dc69:	fild   WORD PTR [ebx+0x1d]
  41dc6c:	push   esp
  41dc6d:	sbb    DWORD PTR [edi+0x9],0x4a863cb6
  41dc74:	push   0x23
  41dc76:	loop   0x41dce4
  41dc78:	push   edi
  41dc79:	int    0x59
  41dc7b:	div    BYTE PTR [ebx+eiz*4]
  41dc7e:	pop    ss
  41dc7f:	lods   eax,DWORD PTR ds:[esi]
  41dc80:	shr    al,cl
  41dc82:	inc    edi
  41dc83:	std    
  41dc84:	sbb    BYTE PTR [ecx+0x2b],ch
  41dc87:	cmp    DWORD PTR ds:0x97443790,0xffffffcf
  41dc8e:	js     0x41dc19
  41dc90:	push   esp
  41dc91:	dec    DWORD PTR [edi-0x52]
  41dc94:	jno    0x41dc66
  41dc96:	mov    ?,WORD PTR [ebp+0x37077f43]
  41dc9c:	shr    BYTE PTR [ebx-0x3497a5d],1
  41dca2:	sti    
  41dca3:	lds    edx,FWORD PTR [edx+0x32194062]
  41dca9:	inc    edx
  41dcaa:	aam    0x47
  41dcac:	fcmovne st,st(4)
  41dcae:	(bad)  
  41dcb0:	jns    0x41dcaa
  41dcb2:	fdiv   QWORD PTR cs:[ebx+0x1e2c30b]
  41dcb9:	pop    ebx
  41dcba:	gs jne 0x41dcdd
  41dcbd:	icebp  
  41dcbe:	push   edx
  41dcbf:	dec    ecx
  41dcc0:	xchg   ecx,eax
  41dcc1:	aam    0x7e
  41dcc3:	shl    esp,0x45
  41dcc6:	cdq    
  41dcc7:	lahf   
  41dcc8:	sbb    BYTE PTR [edx],cl
  41dcca:	push   0xffffffef
  41dccc:	xchg   edx,eax
  41dccd:	shl    DWORD PTR [edx],0xec
  41dcd0:	mov    bl,0xdf
  41dcd2:	into   
  41dcd3:	xchg   ebp,eax
  41dcd4:	lahf   
  41dcd5:	push   ebx
  41dcd6:	(bad)  
  41dcd7:	xchg   edx,eax
  41dcd8:	aam    0xf4
  41dcda:	mov    bh,0x9a
  41dcdc:	loopne 0x41dcd1
  41dcde:	inc    ebx
  41dcdf:	add    esi,DWORD PTR [ecx-0x5eb0be5e]
  41dce5:	push   ss
  41dce6:	mov    esp,esi
  41dce8:	pop    ebx
  41dce9:	ss int3 
  41dceb:	iret   
  41dcec:	push   eax
  41dced:	popa   
  41dcee:	dec    eax
  41dcef:	test   DWORD PTR [esi+eax*1-0x5c],0x7dbd8978
  41dcf7:	cli    
  41dcf8:	add    esi,eax
  41dcfa:	pop    ecx
  41dcfb:	sub    cl,BYTE PTR [edx]
  41dcfd:	or     ch,dl
  41dcff:	js     0x41dcb2
  41dd01:	jnp    0x41dd19
  41dd03:	add    esp,DWORD PTR [esi+0x80eb8a]
  41dd09:	fcmovnb st,st(1)
  41dd0b:	sbb    al,0x75
  41dd0d:	mov    dl,0x59
  41dd0f:	mov    esi,edi
  41dd11:	stos   BYTE PTR es:[edi],al
  41dd12:	mov    BYTE PTR [edi+0x50],ah
  41dd15:	jge    0x41dcd4
  41dd17:	fidivr DWORD PTR [esi-0x49d162df]
  41dd1d:	pop    esp
  41dd1e:	mov    al,ds:0x61431020
  41dd23:	mov    WORD PTR [eax-0x61],cs
  41dd26:	ror    cl,cl
  41dd28:	lock or DWORD PTR [edx],ebx
  41dd2b:	adc    al,0x56
  41dd2d:	bound  esp,QWORD PTR [eax+edi*4]
  41dd30:	push   ebp
  41dd31:	jne    0x41dd52
  41dd33:	adc    DWORD PTR [ecx],0x822834f5
  41dd39:	ds stos BYTE PTR es:[edi],al
  41dd3b:	push   esp
  41dd3c:	sub    al,cl
  41dd3e:	pop    ds
  41dd3f:	ja     0x41dcea
  41dd41:	mov    esi,0x133b3525
  41dd46:	mov    ecx,0xac5570b2
  41dd4b:	enter  0x7539,0x80
  41dd4f:	out    0xda,al
  41dd51:	cmp    DWORD PTR cs:[ebx-0x5611286f],0x7d
  41dd59:	leave  
  41dd5a:	ins    DWORD PTR es:[edi],dx
  41dd5b:	push   ss
  41dd5c:	or     ebp,DWORD PTR [ecx]
  41dd5e:	lahf   
  41dd5f:	or     dl,BYTE PTR [esi-0x39]
  41dd62:	outs   dx,DWORD PTR ds:[esi]
  41dd63:	dec    esi
  41dd64:	cs jnp 0x41ddda
  41dd67:	test   al,0x74
  41dd69:	loopne 0x41dd90
  41dd6b:	jo     0x41dde9
  41dd6d:	jecxz  0x41dd28
  41dd6f:	mov    WORD PTR [esi+0x3a],ds
  41dd72:	(bad)  
  41dd73:	jmp    0x3408b6ef
  41dd78:	pop    ss
  41dd79:	gs mov dl,0x32
  41dd7c:	je     0x41dd28
  41dd7e:	push   ebx
  41dd7f:	pop    esp
  41dd80:	xlat   BYTE PTR ds:[ebx]
  41dd81:	daa    
  41dd82:	es std 
  41dd84:	into   
  41dd85:	inc    eax
  41dd86:	push   esi
  41dd87:	loope  0x41dd78
  41dd89:	fisub  WORD PTR [ecx]
  41dd8b:	fcomp  st(2)
  41dd8d:	lea    ebp,[esi+0x64]
  41dd90:	lahf   
  41dd91:	xor    BYTE PTR [eax-0x495162db],ch
  41dd97:	fidivr DWORD PTR ds:0x624e975e
  41dd9d:	push   edx
  41dd9e:	in     eax,dx
  41dd9f:	lahf   
  41dda0:	(bad)  
  41dda1:	scas   eax,DWORD PTR es:[edi]
  41dda2:	fidivr WORD PTR [edi]
  41dda4:	fstp   DWORD PTR [ebx-0x73]
  41dda7:	test   eax,0x43526672
  41ddac:	mov    esi,0x902eb4f9
  41ddb1:	in     eax,dx
  41ddb2:	push   esi
  41ddb3:	push   ebp
  41ddb4:	xor    ecx,0x6f30b1cd
  41ddba:	sbb    dh,ch
  41ddbc:	dec    ecx
  41ddbd:	and    al,0x28
  41ddbf:	xor    ebp,DWORD PTR [ecx]
  41ddc1:	cmp    al,0xc
  41ddc3:	rcl    DWORD PTR ss:[ebp+0x1d],1
  41ddc7:	popa   
  41ddc8:	stos   BYTE PTR es:[edi],al
  41ddc9:	shr    DWORD PTR [edx-0x6a],cl
  41ddcc:	xor    edx,DWORD PTR [ebx]
  41ddce:	add    al,0x58
  41ddd0:	aaa    
  41ddd1:	test   cl,ah
  41ddd3:	lock jae 0x41dd9e
  41ddd6:	cld    
  41ddd7:	jns    0x41dd89
  41ddd9:	lahf   
  41ddda:	cmovb  ebp,esp
  41dddd:	xor    DWORD PTR cs:[eax],ebp
  41dde0:	dec    esp
  41dde1:	or     BYTE PTR [edx-0x66],0x12
  41dde5:	repnz sbb BYTE PTR [ecx+0x2f],bh
  41dde9:	in     al,dx
  41ddea:	pop    ebp
  41ddeb:	bound  eax,QWORD PTR [ebx+0x2e7e3e08]
  41ddf1:	mov    bh,0x5c
  41ddf3:	das    
  41ddf4:	cli    
  41ddf5:	mov    WORD PTR [ecx+0x2d35f074],?
  41ddfb:	jmp    0x97dad2f1
  41de00:	leave  
  41de01:	mov    ebx,0x9df47483
  41de06:	mov    bh,0xf2
  41de09:	stc    
  41de0a:	call   0xa441f5e3
  41de0f:	sub    DWORD PTR [eax],edx
  41de11:	adc    DWORD PTR [esi],esp
  41de13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de14:	in     eax,0x66
  41de16:	gs (bad) 
  41de19:	inc    DWORD PTR ds:[edi-0x75]
  41de1d:	sbb    ecx,DWORD PTR [edx]
  41de1f:	jl     0x41de58
  41de21:	retf   0x3ed9
  41de24:	pushf  
  41de25:	jl     0x41ddf2
  41de27:	cmp    esi,DWORD PTR [ecx-0x6b]
  41de2a:	std    
  41de2b:	(bad)  
  41de2c:	mov    ebp,DWORD PTR [ebp+ebx*8+0x71]
  41de30:	pop    esp
  41de31:	cmp    eax,0xae6a451a
  41de36:	push   ebx
  41de37:	repz adc eax,0xbf310f8c
  41de3d:	fimul  WORD PTR [edx-0x46]
  41de40:	mov    ebp,0x2c5a3584
  41de45:	test   al,0xcc
  41de47:	into   
  41de48:	sbb    edx,DWORD PTR [ecx+0x4f]
  41de4b:	xchg   esp,eax
  41de4c:	jmp    0xf859:0x14b716c7
  41de53:	test   eax,0x8174ccc
  41de58:	ins    BYTE PTR es:[edi],dx
  41de59:	ret    
  41de5a:	push   ecx
  41de5b:	pop    ss
  41de5c:	popf   
  41de5d:	addr16 mov edx,0xa595186a
  41de63:	daa    
  41de64:	cmp    eax,0x83856994
  41de69:	and    eax,0xfb91563c
  41de6e:	push   ss
  41de6f:	add    DWORD PTR [ebp-0x2],esp
  41de72:	leave  
  41de73:	and    ebx,DWORD PTR [esi-0x6a]
  41de76:	daa    
  41de77:	mov    bl,0xf7
  41de79:	out    dx,eax
  41de7a:	stos   DWORD PTR es:[edi],eax
  41de7b:	cmp    eax,0xd00b0fa0
  41de80:	jecxz  0x41dec6
  41de82:	pop    esi
  41de83:	xor    bl,BYTE PTR [eax-0x48cb1dcb]
  41de89:	in     eax,dx
  41de8a:	mov    ch,0xc0
  41de8c:	jno    0x41deb7
  41de8e:	mov    al,ds:0x41f60866
  41de93:	loope  0x41de5b
  41de95:	sub    dh,cl
  41de97:	sub    DWORD PTR [eax],ebx
  41de99:	aam    0x75
  41de9b:	sbb    bh,BYTE PTR [esi]
  41de9d:	les    eax,FWORD PTR [edx+0x48]
  41dea0:	push   eax
  41dea1:	jg     0x41de7b
  41dea3:	leave  
  41dea4:	push   edx
  41dea5:	hlt    
  41dea6:	test   eax,0x43785ab4
  41deab:	mov    bh,0x5a
  41dead:	pusha  
  41deae:	data16 in al,0x9
  41deb1:	aad    0x29
  41deb3:	lods   eax,DWORD PTR ds:[esi]
  41deb4:	jno    0x41de40
  41deb6:	adc    esp,esi
  41deb8:	jmp    0x41de50
  41deba:	mov    ebx,0x2b723efd
  41debf:	(bad)  
  41dec1:	adc    eax,DWORD PTR [ebp-0x79]
  41dec4:	mov    esp,0xc38c69f3
  41dec9:	mov    al,ds:0xa5c3a750
  41dece:	fisubr WORD PTR [esi+0x5a]
  41ded1:	int3   
  41ded2:	icebp  
  41ded3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded4:	inc    eax
  41ded5:	fmul   st,st(4)
  41ded7:	adc    esi,DWORD PTR [ebx]
  41ded9:	test   DWORD PTR ds:0x3a2b78a3,ecx
  41dedf:	pop    ds
  41dee0:	fwait
  41dee1:	loope  0x41ded4
  41dee3:	mov    bl,0x9e
  41dee5:	retf   
  41dee6:	fidiv  DWORD PTR [edi]
  41dee8:	adc    eax,DWORD PTR [ecx+edi*4]
  41deeb:	stos   DWORD PTR es:[edi],eax
  41deec:	fidiv  WORD PTR ds:0x4c92012e
  41def2:	daa    
  41def3:	add    al,0x80
  41def5:	or     BYTE PTR [ecx],ch
  41def7:	xchg   dl,ch
  41def9:	pop    eax
  41defa:	mov    ebx,0x92ece18d
  41deff:	retf   0x74e4
  41df02:	idiv   DWORD PTR [esi+0x7]
  41df05:	mov    ah,0x7
  41df07:	pop    eax
  41df08:	(bad)  
  41df09:	adc    BYTE PTR [esi+esi*8-0x4464c050],bl
  41df10:	xchg   ebp,eax
  41df11:	lea    ecx,ds:0xd7460464
  41df17:	dec    esi
  41df18:	add    eax,0x113f32be
  41df1d:	push   ecx
  41df1f:	pop    ds
  41df20:	pop    edx
  41df21:	dec    ebp
  41df22:	sub    ebp,ecx
  41df24:	cmp    ecx,DWORD PTR [ebx]
  41df26:	jb     0x41df8e
  41df28:	jno    0x41df7d
  41df2a:	push   ebp
  41df2b:	xchg   cl,dh
  41df2d:	idiv   BYTE PTR [edi]
  41df2f:	je     0x41df84
  41df31:	std    
  41df32:	fdivr  DWORD PTR [edx]
  41df34:	int    0xee
  41df36:	mov    eax,ds:0xe10584c
  41df3b:	mov    esp,0x1e2fc7a9
  41df40:	in     al,dx
  41df41:	retf   0xbe5b
  41df44:	aam    0x21
  41df46:	mov    edx,0x8659c1c3
  41df4b:	dec    ebx
  41df4d:	and    BYTE PTR fs:[edi+0x166e3695],ch
  41df54:	aaa    
  41df55:	scas   al,BYTE PTR es:[edi]
  41df56:	xchg   esp,eax
  41df57:	jno    0x41def9
  41df59:	sahf   
  41df5a:	std    
  41df5b:	fcomp  QWORD PTR [ebp+eiz*1+0x2143f2a5]
  41df62:	xor    eax,0xaf046615
  41df67:	fistp  WORD PTR [edi+0x6323f518]
  41df6d:	aam    0x90
  41df6f:	push   esi
  41df70:	push   0xe39adc24
  41df75:	imul   edi,DWORD PTR fs:0x46ff0c58,0xce42d9cd
  41df80:	lock sbb edx,DWORD PTR [edi-0x40eff682]
  41df87:	fwait
  41df88:	jo     0x41dff6
  41df8a:	loop   0x41dfd0
  41df8c:	in     al,dx
  41df8d:	imul   esi,DWORD PTR es:[edi+0x6a5be972],0x79d4ecff
  41df98:	mov    bl,0x3c
  41df9a:	loope  0x41df46
  41df9c:	icebp  
  41df9d:	std    
  41df9e:	cmp    al,ch
  41dfa0:	int3   
  41dfa1:	sbb    al,0xc8
  41dfa3:	adc    al,0x7e
  41dfa5:	fsubr  QWORD PTR [ecx+ebp*2+0x7a]
  41dfa9:	mov    bl,0xfe
  41dfab:	cmp    DWORD PTR [edx-0x59],ebx
  41dfae:	nop
  41dfaf:	inc    ebp
  41dfb0:	jb     0x41e031
  41dfb2:	mov    eax,ds:0x5fa1225a
  41dfb7:	jmp    0xe08cf0b2
  41dfbc:	or     al,0xef
  41dfbe:	mov    esi,0x485d7be5
  41dfc3:	jne    0x41dff3
  41dfc5:	cmp    DWORD PTR [esi+0x2e],edi
  41dfc8:	adc    al,0xfa
  41dfca:	faddp  st(3),st
  41dfcc:	inc    edx
  41dfcd:	dec    ebp
  41dfce:	and    ebp,0x3e
  41dfd1:	inc    edx
  41dfd2:	in     al,0x85
  41dfd4:	dec    ebp
  41dfd5:	add    ah,bl
  41dfd7:	jae    0x41dfc7
  41dfd9:	or     edi,esi
  41dfdb:	jp     0x41df84
  41dfdd:	mul    DWORD PTR [esi-0x5aee50b1]
  41dfe3:	lods   eax,DWORD PTR ds:[esi]
  41dfe4:	ins    BYTE PTR es:[edi],dx
  41dfe5:	add    al,0x87
  41dfe7:	mov    dh,0x3e
  41dfe9:	retf   
  41dfea:	std    
  41dfeb:	jnp    0x41df88
  41dfed:	add    dh,al
  41dfef:	fisttp DWORD PTR [eax-0x4c089e32]
  41dff5:	and    DWORD PTR [esi-0x4b],0x90cdc2ff
  41dffc:	or     edx,DWORD PTR [ecx+0x322b04e8]
  41e002:	mov    al,ds:0x3c8d90ae
  41e007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e008:	xchg   esi,eax
  41e009:	push   0x1ec1c411
  41e00e:	mov    es,edi
  41e010:	in     al,0xe
  41e012:	or     BYTE PTR [ecx-0xf],0xa6
  41e016:	add    eax,0xc7687b11
  41e01b:	mov    es,WORD PTR [ecx-0x27]
  41e01e:	mov    DWORD PTR [edx+edi*2-0x68],esi
  41e022:	fadd   DWORD PTR [ebx+0x728c636]
  41e028:	mov    edx,DWORD PTR [esi+ecx*4-0x26811d2b]
  41e02f:	fistp  QWORD PTR [edi]
  41e031:	xchg   edi,eax
  41e032:	into   
  41e033:	xor    BYTE PTR [esi-0x21],al
  41e036:	cmp    DWORD PTR [ebp-0x63],ecx
  41e039:	jo     0x41e098
  41e03b:	cld    
  41e03c:	push   0x68
  41e03e:	push   ds
  41e03f:	out    dx,eax
  41e040:	(bad)  
  41e041:	push   esp
  41e042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e043:	icebp  
  41e044:	sti    
  41e045:	cmp    eax,0xef2713f8
  41e04a:	and    DWORD PTR [edx],0xffffff94
  41e04d:	inc    edi
  41e04e:	repz mov al,0xea
  41e051:	test   DWORD PTR [eax+0x4402f8aa],eax
  41e057:	call   0x117d:0x1582cbb5
  41e05e:	test   al,0x6d
  41e060:	add    BYTE PTR [eax+ecx*2+0x13],ch
  41e064:	cmp    DWORD PTR [edx],ebp
  41e066:	aaa    
  41e067:	xchg   edi,esi
  41e069:	jno    0x41e0c4
  41e06b:	int3   
  41e06c:	popa   
  41e06d:	and    bl,BYTE PTR [ecx+0x693f8d8]
  41e073:	cmp    eax,0xbc361aa9
  41e078:	mov    ch,0x88
  41e07a:	adc    DWORD PTR ds:0x2e79fb0,0x6ea047ba
  41e084:	push   ebx
  41e085:	push   ebx
  41e086:	inc    ecx
  41e087:	popa   
  41e088:	pop    ecx
  41e089:	xor    al,0x28
  41e08b:	das    
  41e08c:	inc    edi
  41e08d:	dec    edi
  41e08e:	dec    ebp
  41e08f:	ss cwde 
  41e091:	ja     0x41e059
  41e093:	loope  0x41e03b
  41e095:	ds addr16 popa 
  41e098:	dec    ebx
  41e099:	lods   eax,DWORD PTR ds:[esi]
  41e09a:	adc    BYTE PTR [edi-0x57af4e55],ah
  41e0a0:	popf   
  41e0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0a2:	scas   eax,DWORD PTR es:[edi]
  41e0a3:	lock mov ds,WORD PTR [esi-0x47f8b93e]
  41e0aa:	aam    0x9
  41e0ac:	jg     0x41e042
  41e0ae:	(bad)  
  41e0af:	jbe    0x41e06b
  41e0b1:	ret    
  41e0b2:	arpl   sp,cx
  41e0b4:	or     al,0xc6
  41e0b6:	and    ebp,edi
  41e0b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0b9:	and    ecx,DWORD PTR [edi]
  41e0bb:	push   ecx
  41e0bc:	ins    BYTE PTR es:[edi],dx
  41e0bd:	loopne 0x41e0fd
  41e0bf:	data16 sti 
  41e0c1:	popf   
  41e0c2:	mov    esi,0x2f638edd
  41e0c7:	cmp    DWORD PTR [ecx],esi
  41e0c9:	pop    eax
  41e0ca:	push   ds
  41e0cb:	addr16 inc esp
  41e0cd:	movq   mm5,mm0
  41e0d0:	inc    esp
  41e0d1:	popa   
  41e0d2:	add    eax,0x646d83db
  41e0d7:	sti    
  41e0d8:	push   ebx
  41e0d9:	lods   al,BYTE PTR ds:[esi]
  41e0da:	and    al,0x88
  41e0dc:	fistp  DWORD PTR [ecx]
  41e0de:	cmp    DWORD PTR [ebx+edi*4-0x20],ebx
  41e0e2:	xlat   BYTE PTR ds:[ebx]
  41e0e3:	pop    ss
  41e0e4:	mov    cl,0x96
  41e0e6:	fcom   QWORD PTR [ebx+0x13476d31]
  41e0ec:	(bad)  
  41e0ed:	fimul  WORD PTR gs:[edx-0x5a]
  41e0f2:	sbb    ah,dh
  41e0f4:	pop    ebx
  41e0f5:	xor    DWORD PTR [ebx],esp
  41e0f7:	mov    ebx,0xe9a4e5a7
  41e0fc:	dec    ecx
  41e0fd:	adc    eax,0xf008542e
  41e102:	ror    al,cl
  41e104:	out    dx,al
  41e105:	push   ds
  41e106:	xchg   esi,eax
  41e107:	jnp    0x41e146
  41e109:	loope  0x41e10e
  41e10b:	js     0x41e186
  41e10d:	cmc    
  41e10e:	xchg   DWORD PTR [eax],ebx
  41e110:	or     ebp,ebx
  41e112:	pop    edx
  41e113:	pop    esp
  41e114:	pop    es
  41e115:	xchg   edi,eax
  41e116:	les    esi,FWORD PTR [edx-0x73f6b057]
  41e11c:	mov    edi,DWORD PTR [ebx+0x25dd37c6]
  41e122:	in     al,dx
  41e123:	sbb    BYTE PTR [esp+ebp*8+0x775a3e28],bh
  41e12a:	or     BYTE PTR [edx],bh
  41e12c:	arpl   WORD PTR [eax+0x5d538fe4],dx
  41e132:	clc    
  41e133:	clc    
  41e134:	iret   
  41e135:	sub    al,0x55
  41e137:	mov    bl,0xa8
  41e139:	loopne 0x41e198
  41e13b:	test   ebx,ebx
  41e13d:	add    al,0xbc
  41e13f:	ret    
  41e140:	fwait
  41e141:	loope  0x41e0e9
  41e143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e144:	pop    edi
  41e145:	xchg   ecx,eax
  41e146:	jp     0x41e137
  41e148:	cmp    eax,0x527f7b5a
  41e14d:	sbb    al,0x62
  41e14f:	inc    ebx
  41e150:	aam    0x62
  41e152:	and    bl,BYTE PTR [eax-0x77]
  41e155:	call   DWORD PTR gs:[edi-0xf]
  41e159:	leave  
  41e15a:	fcmovnbe st,st(1)
  41e15c:	cmc    
  41e15d:	gs pop es
  41e15f:	push   cs
  41e160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e161:	ret    0xdb49
  41e164:	and    edi,eax
  41e166:	scas   al,BYTE PTR es:[edi]
  41e167:	jecxz  0x41e14c
  41e169:	sub    edx,DWORD PTR [edi]
  41e16b:	or     al,0xd
  41e16d:	imul   esi,DWORD PTR [ecx-0x3af35ffa],0x2c
  41e174:	inc    ebx
  41e175:	(bad)  
  41e176:	lds    ebp,FWORD PTR [esi+0x1c]
  41e179:	out    0x61,al
  41e17b:	mov    bl,0x93
  41e17d:	add    edi,esi
  41e17f:	adc    ecx,ecx
  41e181:	ret    0x5efd
  41e184:	mov    edi,0x8e42dbf8
  41e189:	pop    esi
  41e18a:	mov    ds:0x4cd05747,al
  41e18f:	inc    ecx
  41e190:	div    BYTE PTR [ebp+0x4f63c1f4]
  41e196:	ror    BYTE PTR [ebp+0x25],cl
  41e199:	adc    eax,0x51c95c10
  41e19e:	addr16 dec esp
  41e1a0:	jmp    0x41e192
  41e1a2:	xor    eax,0x8df42094
  41e1a7:	bound  eax,QWORD PTR [ecx-0x4945586b]
  41e1ad:	inc    esi
  41e1ae:	xchg   ecx,eax
  41e1af:	dec    ebx
  41e1b0:	ret    
  41e1b1:	addr16 cmp ecx,edi
  41e1b4:	aas    
  41e1b5:	iret   
  41e1b6:	les    edx,FWORD PTR [ebp+0x7eec8ec8]
  41e1bc:	add    edi,ebx
  41e1be:	pop    ebx
  41e1bf:	bound  edx,QWORD PTR [edi-0x15]
  41e1c2:	cwde   
  41e1c3:	mov    al,ds:0x2aa3afa1
  41e1c8:	pop    eax
  41e1c9:	fdivr  DWORD PTR [edx]
  41e1cb:	clc    
  41e1cc:	popf   
  41e1cd:	inc    esp
  41e1ce:	cwde   
  41e1cf:	fwait
  41e1d0:	daa    
  41e1d1:	push   ebx
  41e1d2:	test   eax,0xb468cd5f
  41e1d7:	out    0x8f,al
  41e1d9:	fmul   DWORD PTR [eax+0x32]
  41e1dc:	fidiv  WORD PTR [ecx+0x17f3d728]
  41e1e2:	mov    WORD PTR [ebx-0x2bb68874],gs
  41e1e8:	stos   DWORD PTR es:[edi],eax
  41e1e9:	jne    0x41e1c1
  41e1eb:	adc    ecx,DWORD PTR [ebx]
  41e1ed:	jae    0x41e238
  41e1ef:	mov    dl,0xb2
  41e1f1:	add    DWORD PTR [eax],0x5df4b0cd
  41e1f7:	das    
  41e1f8:	adc    esi,DWORD PTR [edx-0x61a5174b]
  41e1fe:	and    eax,0xc80848a0
  41e203:	mov    edi,DWORD PTR [edi+ebp*2]
  41e206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e207:	add    al,0x63
  41e209:	in     al,0x87
  41e20b:	mov    edx,DWORD PTR ds:[eax-0x2b]
  41e20f:	lods   eax,DWORD PTR ds:[esi]
  41e210:	imul   edi,DWORD PTR [ebx-0x204ad42e],0xd6c43e73
  41e21a:	gs add al,0xbd
  41e21d:	mov    ebp,0xcf56d518
  41e222:	add    DWORD PTR [edx+0x3d],esi
  41e225:	comiss xmm6,DWORD PTR [edx]
  41e228:	aaa    
  41e229:	iret   
  41e22a:	adc    eax,0x7e70b788
  41e22f:	mov    BYTE PTR [edi+0x51],dh
  41e232:	arpl   WORD PTR [edx-0x53],di
  41e235:	inc    ebp
  41e236:	arpl   ax,ax
  41e238:	std    
  41e239:	xchg   DWORD PTR [esi],esp
  41e23b:	push   eax
  41e23c:	cmp    edx,DWORD PTR [ebp-0x1a]
  41e23f:	or     DWORD PTR [esi+0x77],0xffffffa3
  41e243:	xlat   BYTE PTR ds:[ebx]
  41e244:	and    eax,0x46c164fb
  41e249:	sub    esi,DWORD PTR [esi+ecx*4-0x69d914cd]
  41e250:	dec    edi
  41e251:	popa   
  41e252:	xchg   ecx,eax
  41e253:	jbe    0x41e2bd
  41e255:	fmul   QWORD PTR [ebx]
  41e257:	mov    esp,0xdc578557
  41e25c:	mov    eax,0x46e25b88
  41e261:	pusha  
  41e262:	(bad)  
  41e263:	jnp    0x41e2ac
  41e265:	jno    0x41e2db
  41e267:	retf   0xb1e3
  41e26a:	int    0x97
  41e26c:	dec    ebx
  41e26d:	add    eax,0xc84c7205
  41e272:	jmp    0x19eb:0x27863d07
  41e279:	into   
  41e27a:	ror    BYTE PTR [edi],1
  41e27c:	(bad)  
  41e27d:	mov    eax,0xc7837492
  41e282:	and    esp,DWORD PTR [eax+ebx*1]
  41e285:	sub    bl,ah
  41e287:	adc    BYTE PTR [edx+ecx*2+0x4e],bl
  41e28b:	and    eax,0x8b7c8985
  41e290:	fcmovne st,st(7)
  41e292:	push   eax
  41e293:	scas   eax,DWORD PTR es:[di]
  41e295:	fild   DWORD PTR [edi+eax*1-0x69]
  41e299:	clc    
  41e29a:	mov    esp,0x98c3f62b
  41e29f:	pop    es
  41e2a0:	add    BYTE PTR [ebx-0x4954867f],dl
  41e2a6:	add    DWORD PTR [ebp-0x49c89db8],esi
  41e2ac:	push   esp
  41e2ad:	jle    0x41e2e0
  41e2af:	sbb    DWORD PTR [edx+edx*2+0x48cdd2b4],esi
  41e2b6:	mov    ds:0xadfd8f49,al
  41e2bb:	pop    esp
  41e2bc:	xchg   ebp,eax
  41e2bd:	call   0x6152:0x5cfda69f
  41e2c4:	mov    ah,0x50
  41e2c6:	repz cmp DWORD PTR [esi-0x17],esi
  41e2ca:	leave  
  41e2cb:	shl    eax,1
  41e2cd:	fnsave [ebx+0x41]
  41e2d0:	xchg   esi,eax
  41e2d1:	div    BYTE PTR [edi+0x3b]
  41e2d4:	xchg   esp,eax
  41e2d5:	(bad)  
  41e2d6:	ins    BYTE PTR es:[edi],dx
  41e2d7:	daa    
  41e2d8:	aas    
  41e2d9:	es push ebp
  41e2db:	icebp  
  41e2dc:	and    eax,0x1870f8e7
  41e2e1:	aas    
  41e2e2:	dec    ebp
  41e2e3:	or     dl,0x94
  41e2e6:	jp     0x41e30c
  41e2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2e9:	xchg   ebp,eax
  41e2ea:	jbe    0x41e2ec
  41e2ec:	out    0x11,eax
  41e2ee:	or     DWORD PTR [edx-0x63214600],0x60381b53
  41e2f8:	sub    edx,edi
  41e2fa:	xchg   esp,eax
  41e2fb:	cs pop eax
  41e2fd:	dec    edx
  41e2fe:	lahf   
  41e2ff:	and    ebp,DWORD PTR [edx-0x5b]
  41e302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e303:	xchg   ebx,eax
  41e304:	mov    edx,0xf7bf9f63
  41e309:	mov    bh,0xa7
  41e30b:	mov    esp,ss
  41e30d:	mov    edx,0x191e457
  41e312:	and    al,BYTE PTR ss:[esi]
  41e315:	adc    ah,dh
  41e317:	fbstp  TBYTE PTR [eax-0x3a24d3f2]
  41e31d:	in     eax,0xcf
  41e31f:	ins    DWORD PTR es:[edi],dx
  41e320:	cs test DWORD PTR ss:[edx],ecx
  41e324:	dec    edi
  41e325:	test   ch,ah
  41e327:	mov    ecx,0x1cd13f79
  41e32c:	push   ecx
  41e32d:	lea    ebx,[ecx-0x5cec3139]
  41e333:	push   esi
  41e334:	ret    0x2af7
  41e337:	mov    ds:0xf70487f4,eax
  41e33c:	push   esp
  41e33d:	lock ss mov ch,0xc2
  41e341:	cmp    ebx,DWORD PTR [ebp+0x6d]
  41e344:	add    eax,0xa33973d9
  41e349:	fst    DWORD PTR [edx-0x4d]
  41e34c:	sbb    BYTE PTR [edi],0xe4
  41e34f:	shl    edx,cl
  41e351:	xor    esp,ebx
  41e353:	cmp    cl,BYTE PTR [ebp-0x71]
  41e356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e357:	in     al,dx
  41e358:	lahf   
  41e359:	in     al,0x5c
  41e35b:	icebp  
  41e35c:	out    0x47,eax
  41e35e:	push   0x4f
  41e360:	xchg   esi,eax
  41e361:	and    cl,ah
  41e363:	dec    edi
  41e364:	sub    eax,eax
  41e366:	repz pop ebp
  41e368:	loop   0x41e35b
  41e36a:	icebp  
  41e36b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e36c:	test   DWORD PTR [ebp-0x7e],ebp
  41e36f:	(bad)  
  41e370:	push   0xa5ec156b
  41e375:	mov    dl,0x46
  41e377:	fst    st(2)
  41e379:	ret    
  41e37a:	cmp    al,0x9
  41e37c:	dec    esp
  41e37d:	push   edx
  41e37e:	(bad)  
  41e380:	ficomp DWORD PTR [esi]
  41e382:	push   esp
  41e383:	test   al,0xab
  41e385:	fcom   QWORD PTR [eax-0x3d]
  41e388:	cwde   
  41e389:	pop    esp
  41e38a:	jmp    0x627c:0xb7d1c33
  41e391:	retf   
  41e392:	retf   0xb03a
  41e395:	jnp    0x41e346
  41e397:	shl    DWORD PTR [eax],1
  41e399:	in     eax,dx
  41e39a:	inc    ecx
  41e39b:	inc    ecx
  41e39c:	xchg   BYTE PTR [ebp+eiz*4-0x261eca0],dh
  41e3a3:	outs   dx,DWORD PTR ds:[esi]
  41e3a4:	mov    ch,BYTE PTR [eax+0x5afbf5bc]
  41e3aa:	sahf   
  41e3ab:	loope  0x41e40b
  41e3ad:	icebp  
  41e3ae:	mov    WORD PTR [ebx-0x26f0e39c],ds
  41e3b4:	rcr    DWORD PTR [ebx],cl
  41e3b6:	fbstp  TBYTE PTR [eax+0x48]
  41e3b9:	call   0x5f23b516
  41e3be:	mov    bh,BYTE PTR [edi+0x30033776]
  41e3c4:	xor    ch,BYTE PTR ds:0xf08d274d
  41e3ca:	clc    
  41e3cb:	jne    0x41e40b
  41e3cd:	xchg   esp,eax
  41e3ce:	call   0x68354510
  41e3d3:	out    0xb6,al
  41e3d5:	pop    ss
  41e3d6:	pop    ds
  41e3d7:	adc    BYTE PTR [eax+0x1d6c4933],bl
  41e3dd:	pop    ds
  41e3de:	xor    al,BYTE PTR [ebx-0x46]
  41e3e1:	inc    ebp
  41e3e2:	pop    ecx
  41e3e3:	clc    
  41e3e4:	ins    BYTE PTR es:[edi],dx
  41e3e5:	bound  edi,QWORD PTR [esi+ebp*2-0x7ad3a543]
  41e3ec:	jo     0x41e400
  41e3ee:	xor    dh,BYTE PTR [ebp-0x64]
  41e3f1:	les    edx,FWORD PTR [ebx-0x76]
  41e3f4:	sbb    DWORD PTR [esi],0xffffffee
  41e3f7:	push   ss
  41e3f8:	cmp    DWORD PTR [esi],0x7979a598
  41e3fe:	pop    ebx
  41e3ff:	ret    0x79fe
  41e402:	dec    eax
  41e403:	cmp    DWORD PTR [ecx],0xc814b364
  41e409:	aam    0xc6
  41e40b:	ret    
  41e40c:	push   eax
  41e40d:	popa   
  41e40e:	adc    al,0xf5
  41e410:	in     eax,0xc5
  41e412:	vunpcklpd xmm4,xmm5,XMMWORD PTR [edx-0x36]
  41e417:	add    BYTE PTR [ecx+0x32],0xe0
  41e41b:	mov    esp,0x8b0aebf9
  41e420:	and    bl,BYTE PTR [ebx]
  41e422:	push   0xcbe66fd8
  41e427:	lahf   
  41e428:	cmp    eax,0x6bfac6dc
  41e42d:	repz out dx,eax
  41e42f:	sub    ecx,edx
  41e431:	(bad)  
  41e432:	clc    
  41e433:	retf   
  41e434:	out    0x58,al
  41e436:	pop    edi
  41e437:	sbb    eax,0x73304f69
  41e43c:	rcl    BYTE PTR ds:0xc736b969,0x40
  41e443:	jmp    0x41e4c3
  41e445:	push   ds
  41e446:	jns    0x41e3ea
  41e448:	int    0xa5
  41e44a:	stos   BYTE PTR es:[edi],al
  41e44b:	add    al,BYTE PTR [eax-0x71d1fcf8]
  41e451:	inc    edi
  41e452:	mov    ebp,0x1e566675
  41e457:	shr    DWORD PTR [ebp+ecx*8+0x16],cl
  41e45b:	and    al,0x52
  41e45d:	or     BYTE PTR [esi+ebx*4-0x3a],bl
  41e461:	pop    ebx
  41e462:	aaa    
  41e463:	ins    DWORD PTR es:[edi],dx
  41e464:	pop    ecx
  41e465:	aad    0x26
  41e467:	push   ds
  41e468:	mov    ebp,DWORD PTR [ebp-0x2d13d712]
  41e46e:	jg     0x41e48a
  41e470:	in     al,dx
  41e471:	jbe    0x41e471
  41e473:	imul   esp,DWORD PTR [edi-0x5e],0xffffff82
  41e477:	jb     0x41e457
  41e479:	cmp    BYTE PTR [edi],ah
  41e47b:	fst    DWORD PTR [esp+edx*8]
  41e47e:	(bad)  
  41e47f:	adc    eax,0xa370e531
  41e484:	mov    esp,0x9cc3d25a
  41e489:	enter  0xf4bd,0x8f
  41e48d:	jnp    0x41e44b
  41e48f:	add    eax,0xe8b7dadd
  41e494:	(bad)  
  41e495:	adc    al,0x64
  41e497:	icebp  
  41e498:	cvtdq2ps xmm7,XMMWORD PTR [ebp+edx*2+0x61c58b09]
  41e4a0:	lods   eax,DWORD PTR ds:[esi]
  41e4a1:	mov    esp,0xe2659667
  41e4a6:	xor    eax,0x7ccfe75b
  41e4ab:	in     eax,0x2c
  41e4ad:	loop   0x41e4a6
  41e4af:	repnz loop 0x41e48c
  41e4b2:	jge    0x41e493
  41e4b4:	xchg   eax,esi
  41e4b6:	std    
  41e4b7:	jo     0x41e447
  41e4b9:	xor    al,0x71
  41e4bb:	popf   
  41e4bc:	inc    ebx
  41e4bd:	mov    esi,es
  41e4bf:	adc    ecx,0xffffffe9
  41e4c2:	push   ds
  41e4c3:	jns    0x41e4fa
  41e4c5:	outs   dx,DWORD PTR ds:[esi]
  41e4c6:	mov    dl,0x2f
  41e4c8:	jno    0x41e495
  41e4ca:	mul    BYTE PTR [ebx+0x76e5bc02]
  41e4d0:	xchg   ecx,eax
  41e4d1:	or     al,0x26
  41e4d3:	out    dx,eax
  41e4d4:	xchg   BYTE PTR [edx-0x1473b3e8],dh
  41e4da:	adc    al,0x28
  41e4dc:	mov    ds:0xd2e0d7e5,al
  41e4e1:	xchg   DWORD PTR [edx],edx
  41e4e3:	gs dec ecx
  41e4e5:	stos   DWORD PTR es:[edi],eax
  41e4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4e7:	outs   dx,DWORD PTR ds:[esi]
  41e4e8:	push   esp
  41e4e9:	cmp    al,0x6c
  41e4eb:	rcr    esp,0x60
  41e4ee:	adc    bh,BYTE PTR [eax-0xa]
  41e4f1:	push   esp
  41e4f2:	inc    esi
  41e4f3:	cmp    eax,0x228b80d2
  41e4f8:	scas   eax,DWORD PTR es:[edi]
  41e4f9:	mov    esp,0x7814f80
  41e4fe:	mov    ebp,0x9f33cc56
  41e503:	sbb    ebx,DWORD PTR [edx+0x75]
  41e506:	and    DWORD PTR [esi-0x93fb834],eax
  41e50c:	fsubrp st(4),st
  41e50e:	or     BYTE PTR [esi+0x393819e6],0xc9
  41e515:	inc    ecx
  41e516:	cdq    
  41e517:	bnd jnp 0x41e49e
  41e51a:	or     DWORD PTR [ebp+eax*2-0x12],0x3f
  41e51f:	xor    al,0x9b
  41e521:	push   eax
  41e522:	mov    bl,BYTE PTR [esp+esi*8+0x67]
  41e526:	xchg   ebp,eax
  41e527:	cmc    
  41e528:	pop    ebx
  41e529:	push   esp
  41e52a:	adc    DWORD PTR [edx-0x230ca728],edx
  41e530:	cmp    ebp,DWORD PTR [edx]
  41e532:	and    al,0x60
  41e534:	iret   
  41e535:	and    BYTE PTR [edx-0x3c8444d],cl
  41e53b:	add    eax,0xa6cbfb77
  41e540:	and    eax,0xa7dfda93
  41e545:	mov    cl,bl
  41e547:	inc    ebx
  41e548:	pop    es
  41e549:	xchg   esp,eax
  41e54a:	out    dx,al
  41e54b:	jmp    0x41e5c8
  41e54d:	cs pop ds
  41e54f:	dec    ebp
  41e550:	pop    ds
  41e551:	jecxz  0x41e5ba
  41e553:	shl    BYTE PTR ds:0xf25cfa06,0x0
  41e55a:	fcmovu st,st(3)
  41e55c:	mov    ds:0xaacbd256,al
  41e561:	scas   al,BYTE PTR es:[edi]
  41e562:	(bad)  
  41e563:	jl     0x41e583
  41e565:	mov    bh,0x28
  41e567:	sbb    eax,0x99650531
  41e56c:	in     al,0xd
  41e56e:	mov    ebp,0x38e77e4c
  41e573:	outs   dx,DWORD PTR ds:[esi]
  41e574:	scas   eax,DWORD PTR es:[edi]
  41e575:	test   BYTE PTR [esi],dl
  41e577:	sub    al,BYTE PTR [ebx]
  41e579:	mov    BYTE PTR [ebp-0x752d6c7],al
  41e57f:	pop    ecx
  41e580:	mov    dh,0xe
  41e582:	push   esp
  41e583:	mov    al,0xc
  41e585:	out    0xef,eax
  41e587:	in     al,0xc8
  41e589:	xchg   esp,eax
  41e58a:	push   ecx
  41e58c:	mov    esi,0x41d6120
  41e591:	cwde   
  41e592:	lods   al,BYTE PTR ds:[esi]
  41e593:	xchg   DWORD PTR [eax-0x63],ebp
  41e596:	(bad)  [esi+0x4]
  41e599:	push   ss
  41e59a:	push   esi
  41e59b:	test   al,0xa0
  41e59d:	pushf  
  41e59e:	lock bound ebp,QWORD PTR [ecx]
  41e5a1:	xchg   BYTE PTR [edx+0x21910bc0],ch
  41e5a7:	les    ebp,FWORD PTR [edi+edx*4-0x5d]
  41e5ab:	sub    DWORD PTR [edi-0x74933b36],edx
  41e5b1:	mov    esp,ecx
  41e5b3:	or     ah,BYTE PTR [edi]
  41e5b5:	push   edx
  41e5b6:	inc    eax
  41e5b7:	xchg   ebx,eax
  41e5b8:	mov    ?,WORD PTR [edx+edi*2+0x5d999e78]
  41e5bf:	dec    ecx
  41e5c0:	pusha  
  41e5c1:	push   ebx
  41e5c2:	jns    0x41e61d
  41e5c4:	push   esp
  41e5c5:	imul   edx,DWORD PTR [esi],0x753aaebd
  41e5cb:	ds daa 
  41e5cd:	idiv   DWORD PTR [esi+edi*4]
  41e5d0:	fdivr  DWORD PTR [edi+0x1]
  41e5d3:	mov    ?,WORD PTR [edi-0x2]
  41e5d6:	idiv   esi
  41e5d8:	leave  
  41e5d9:	mov    bl,0xa7
  41e5db:	ja     0x41e5dd
  41e5dd:	pop    edi
  41e5de:	not    DWORD PTR [eax]
  41e5e0:	enter  0x39dd,0x2b
  41e5e4:	aaa    
  41e5e5:	mov    ah,0x6f
  41e5e7:	(bad)  
  41e5e8:	fdiv   QWORD PTR [ebx+ecx*2]
  41e5eb:	xchg   esp,eax
  41e5ec:	lahf   
  41e5ed:	push   edi
  41e5ee:	jb     0x41e606
  41e5f0:	cs cmp eax,0xfa877bea
  41e5f6:	adc    al,0x5a
  41e5f8:	mov    esi,DWORD PTR [esi-0x24]
  41e5fb:	retf   
  41e5fc:	xor    DWORD PTR [edx+0x2cd1f420],ecx
  41e602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e603:	sbb    eax,0x257dfe2a
  41e608:	mov    esi,0x103ef5e3
  41e60d:	fmul   QWORD PTR [edi-0x40]
  41e610:	cmp    DWORD PTR [eax+ebx*2],edx
  41e613:	out    0xff,eax
  41e615:	in     al,0x5
  41e617:	inc    eax
  41e618:	test   BYTE PTR [eax+esi*4],bh
  41e61b:	(bad)  
  41e61c:	mov    edx,DWORD PTR [ebx+0x25]
  41e61f:	mov    WORD PTR [edi],?
  41e621:	bound  edi,QWORD PTR [edx*4+0x1afa8054]
  41e628:	leave  
  41e629:	aaa    
  41e62a:	adc    BYTE PTR ds:[ebx],0xbc
  41e62e:	jl     0x41e5f2
  41e630:	fidivr DWORD PTR [edx-0x6ace704f]
  41e636:	sahf   
  41e637:	rcr    BYTE PTR [edx+0x46ec6c6a],1
  41e63d:	icebp  
  41e63e:	fcom   DWORD PTR [edx+ecx*4-0x3a]
  41e642:	push   edi
  41e643:	mov    BYTE PTR [eax-0x4390b381],ch
  41e649:	mov    edx,0x7fedbfc
  41e64e:	stos   DWORD PTR es:[edi],eax
  41e64f:	and    al,0x28
  41e651:	(bad)  
  41e653:	jp     0x41e620
  41e655:	push   ds
  41e656:	push   esp
  41e657:	cwde   
  41e658:	xchg   ecx,eax
  41e659:	ja     0x41e5ee
  41e65b:	cmp    eax,0x822fb7b7
  41e660:	mov    cl,0x32
  41e662:	adc    DWORD PTR [ebp-0x4],ebx
  41e665:	cmc    
  41e666:	adc    eax,0x1c4bf9cc
  41e66b:	lds    ebx,FWORD PTR [esi-0x2cfab974]
  41e671:	add    BYTE PTR [ecx-0x7],ah
  41e674:	mov    ebx,0x13f3d16f
  41e679:	push   0xffffff8f
  41e67b:	fisubr WORD PTR [ecx]
  41e67d:	inc    ebp
  41e67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e67f:	loope  0x41e641
  41e681:	jo     0x41e6c8
  41e683:	and    DWORD PTR [ecx-0x66f88c6c],edi
  41e689:	(bad)  
  41e68a:	and    ah,BYTE PTR [esi]
  41e68c:	push   ebx
  41e68d:	push   edi
  41e68e:	out    0xb4,al
  41e690:	mov    al,0xc1
  41e692:	cmp    al,0xc
  41e694:	repz sar DWORD PTR [edi+edx*4],0x8a
  41e699:	retf   0xb192
  41e69c:	and    edi,DWORD PTR [ebp-0xc]
  41e69f:	jo     0x41e65d
  41e6a1:	stos   DWORD PTR es:[edi],eax
  41e6a2:	xchg   DWORD PTR [ecx],edx
  41e6a4:	cmp    esp,0x3bd1c007
  41e6aa:	xchg   ebx,eax
  41e6ab:	aad    0x68
  41e6ad:	dec    ebx
  41e6ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6af:	fldenv [edi+esi*2]
  41e6b2:	rcr    DWORD PTR [eax+ebp*1+0x2165347d],0x4
  41e6ba:	lods   al,BYTE PTR ds:[esi]
  41e6bb:	pop    edi
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	pusha  
  41e6be:	retfw  0x4ac0
  41e6c2:	xchg   ecx,eax
  41e6c3:	inc    edx
  41e6c4:	lock or al,0x38
  41e6c7:	pop    ecx
  41e6c8:	nop    DWORD PTR [eax]
  41e6cb:	or     al,0x7e
  41e6cd:	aas    
  41e6ce:	xor    eax,0xc005f2dd
  41e6d3:	(bad)  
  41e6d4:	sub    DWORD PTR [edx+ebp*2],ebp
  41e6d7:	xchg   ebx,eax
  41e6d8:	jae    0x41e707
  41e6da:	sub    edx,DWORD PTR ds:0x8c5230ed
  41e6e0:	mov    bl,0x7
  41e6e2:	pop    edi
  41e6e3:	xchg   esi,eax
  41e6e4:	scas   al,BYTE PTR es:[edi]
  41e6e5:	mov    al,ds:0x303d75ff
  41e6ea:	stc    
  41e6eb:	js     0x41e705
  41e6ed:	sti    
  41e6ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ef:	bound  ecx,QWORD PTR [ebx]
  41e6f1:	jns    0x41e71a
  41e6f3:	test   BYTE PTR [esi-0x47],ch
  41e6f6:	int    0xf5
  41e6f8:	jne    0x41e6a5
  41e6fa:	xchg   edi,eax
  41e6fb:	out    0xe4,al
  41e6fd:	ds pop ebp
  41e6ff:	mov    edi,0xb08e564b
  41e704:	sub    bl,BYTE PTR [eax+0x78]
  41e707:	jp     0x41e72b
  41e709:	adc    dl,BYTE PTR [ebx+edi*8-0x66]
  41e70d:	push   esi
  41e70e:	scas   eax,DWORD PTR es:[edi]
  41e70f:	and    dl,BYTE PTR [edi]
  41e711:	dec    ebp
  41e712:	(bad)  
  41e713:	mov    ch,0xc2
  41e715:	adc    ah,bl
  41e717:	bound  esp,QWORD PTR [ebx+0x7badb128]
  41e71d:	loope  0x41e76b
  41e71f:	add    al,0x1c
  41e721:	inc    ebp
  41e722:	sub    DWORD PTR [esi+0x59312a1e],ecx
  41e728:	add    edx,ebp
  41e72a:	mov    bh,0xa2
  41e72c:	jecxz  0x41e6b5
  41e72e:	test   ebp,esp
  41e730:	mov    ecx,0xc6ba54cd
  41e735:	mov    bl,0x43
  41e737:	inc    ebp
  41e738:	sub    edx,DWORD PTR [ebp+0x70256ac]
  41e73e:	in     al,dx
  41e73f:	fdivr  QWORD PTR [edi]
  41e741:	(bad)  
  41e742:	(bad)  
  41e743:	fisub  WORD PTR [edi+0x3e6529c9]
  41e749:	data16 jg 0x41e754
  41e74c:	lahf   
  41e74d:	stc    
  41e74e:	rcl    ebx,0xe2
  41e751:	adc    al,0x7b
  41e753:	adc    bh,BYTE PTR [ecx-0x23]
  41e756:	or     eax,0xf349bf3b
  41e75b:	int3   
  41e75c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e75d:	frstor [edx+0x5eb58525]
  41e763:	ret    
  41e764:	retf   
  41e765:	iret   
  41e766:	mov    bl,0x95
  41e768:	jp     0x41e7d3
  41e76a:	les    eax,FWORD PTR [ebp-0x78027149]
  41e770:	mov    BYTE PTR [edx-0x29],cl
  41e773:	icebp  
  41e774:	sub    eax,0x1de30e19
  41e779:	nop
  41e77a:	or     BYTE PTR [edi+0x2b],ah
  41e77d:	xor    al,0x70
  41e77f:	cmp    edx,DWORD PTR [ebx+eax*2]
  41e782:	add    BYTE PTR ds:0xbada429e,ch
  41e788:	and    eax,eax
  41e78a:	adc    DWORD PTR [ebp-0x5a],eax
  41e78d:	aas    
  41e78e:	pusha  
  41e78f:	inc    esi
  41e790:	mov    ch,0xd6
  41e792:	inc    ebp
  41e793:	mov    ebp,0x19734c3a
  41e798:	cmp    al,0xab
  41e79a:	popf   
  41e79b:	jl     0x41e79b
  41e79d:	lock leave 
  41e79f:	data16 mov dh,0x55
  41e7a2:	fist   WORD PTR [edx]
  41e7a4:	call   0xe8b48cc0
  41e7a9:	push   0x648bc3c
  41e7ae:	ins    BYTE PTR es:[edi],dx
  41e7af:	imul   esi,eax,0x336c72b3
  41e7b5:	sbb    ch,dh
  41e7b7:	mov    BYTE PTR [esi+0x50],dl
  41e7ba:	ins    DWORD PTR es:[edi],dx
  41e7bb:	gs jp  0x41e7ea
  41e7be:	enter  0x570c,0x9d
  41e7c2:	sti    
  41e7c3:	lods   eax,DWORD PTR ds:[esi]
  41e7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7c5:	cmp    ebx,DWORD PTR [edi]
  41e7c7:	(bad)  
  41e7c8:	push   ds
  41e7c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ca:	xchg   ebx,eax
  41e7cb:	jb     0x41e793
  41e7cd:	out    0x29,al
  41e7cf:	sahf   
  41e7d0:	xchg   edx,eax
  41e7d1:	cmp    ebp,DWORD PTR [eax]
  41e7d3:	outs   dx,DWORD PTR ds:[esi]
  41e7d4:	dec    ebp
  41e7d5:	mov    ah,BYTE PTR [esp+eax*8+0x1ca96ec]
  41e7dc:	daa    
  41e7dd:	scas   al,BYTE PTR es:[edi]
  41e7de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7df:	pop    esi
  41e7e0:	sub    BYTE PTR ds:0x1b2506ff,al
  41e7e6:	jmp    0x3a9f36d2
  41e7eb:	add    DWORD PTR [edi+0x2e],ebp
  41e7ee:	sbb    al,0x51
  41e7f0:	push   edi
  41e7f1:	adc    eax,0xd2f713bd
  41e7f6:	push   ecx
  41e7f7:	lods   al,BYTE PTR ds:[esi]
  41e7f8:	mov    cl,0x3d
  41e7fa:	jbe    0x41e86f
  41e7fc:	jnp    0x41e821
  41e7fe:	fsubr  QWORD PTR [esi-0x76e773e5]
  41e804:	mov    edx,0x49d89fe8
  41e809:	adc    BYTE PTR [ebx],bh
  41e80b:	cwde   
  41e80c:	cmp    BYTE PTR [ebp-0x2b],0x6d
  41e810:	mov    eax,0x7f10b163
  41e815:	jmp    0x4182934c
  41e81a:	add    BYTE PTR [ebx-0x2e23a97e],ah
  41e820:	pushf  
  41e821:	pop    ss
  41e822:	xchg   esi,eax
  41e823:	cmp    esp,DWORD PTR [ecx+0x4e26fc20]
  41e829:	sbb    al,0x2c
  41e82b:	jo     0x41e879
  41e82d:	fs xor eax,0xe6d6ab65
  41e833:	repz jmp 0x41e7ee
  41e836:	inc    ebx
  41e837:	xchg   esi,eax
  41e838:	repz je 0x41e81b
  41e83b:	and    BYTE PTR [edi-0x2d],dh
  41e83e:	cmp    al,0x72
  41e840:	out    0x62,eax
  41e842:	lock outs dx,DWORD PTR ds:[esi]
  41e844:	xchg   esp,eax
  41e845:	daa    
  41e846:	loop   0x41e8af
  41e848:	sbb    eax,0x40272336
  41e84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84e:	sbb    al,0xb8
  41e850:	adc    al,0xe6
  41e852:	call   0xbd1a784f
  41e857:	test   DWORD PTR [ebx+0x120dc017],ecx
  41e85d:	mov    dl,0x6d
  41e85f:	sub    DWORD PTR [edx+0x64],edx
  41e862:	dec    ebx
  41e863:	loop   0x41e845
  41e865:	mov    ds:0xf6e3ab13,eax
  41e86a:	out    dx,al
  41e86b:	xor    DWORD PTR [ecx-0x623d5cf5],esi
  41e871:	dec    eax
  41e872:	outs   dx,BYTE PTR ds:[esi]
  41e873:	lea    ebx,[edx-0x46a69e70]
  41e879:	pop    ss
  41e87a:	xchg   ecx,eax
  41e87b:	retf   0x667f
  41e87e:	and    dl,dl
  41e880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e881:	fdiv   st,st(6)
  41e883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e884:	or     esp,eax
  41e886:	fisttp WORD PTR [ebp+0x71]
  41e889:	mov    ebp,0xa2277bee
  41e88e:	lahf   
  41e88f:	popa   
  41e890:	mov    ebp,DWORD PTR [esi]
  41e892:	jge    0x41e8a9
  41e894:	out    0x77,al
  41e896:	frstor [ecx+0xb66c819]
  41e89c:	mov    esp,0x481a9471
  41e8a1:	jno    0x41e917
  41e8a3:	fcom   QWORD PTR [ebp+0x36]
  41e8a6:	pop    ebx
  41e8a7:	aas    
  41e8a8:	scas   al,BYTE PTR es:[edi]
  41e8a9:	push   ss
  41e8aa:	jno    0x41e83e
  41e8ac:	jl     0x41e8be
  41e8ae:	shl    DWORD PTR ds:0xbc99ff57,cl
  41e8b4:	jecxz  0x41e8cc
  41e8b6:	(bad)  
  41e8b7:	into   
  41e8b8:	jp     0x41e8ad
  41e8ba:	and    bh,BYTE PTR [ecx+edx*1]
  41e8bd:	sub    edi,DWORD PTR [edi]
  41e8bf:	imul   edi,eax,0x53
  41e8c2:	inc    esi
  41e8c3:	outs   dx,BYTE PTR ds:[esi]
  41e8c4:	imul   ebp,DWORD PTR ds:0x5a05105e,0xffffffcb
  41e8cb:	xchg   esi,eax
  41e8cc:	cmp    bh,al
  41e8ce:	pusha  
  41e8cf:	dec    esi
  41e8d0:	enter  0x57d3,0xd
  41e8d4:	leave  
  41e8d5:	sahf   
  41e8d6:	push   cs
  41e8d7:	enter  0x10ad,0x63
  41e8db:	mov    ecx,0x7491e540
  41e8e0:	xchg   esp,eax
  41e8e1:	jne    0x41e8f3
  41e8e3:	aam    0xe5
  41e8e5:	test   BYTE PTR [edi],ah
  41e8e7:	mov    ebx,0xa78d74e1
  41e8ec:	xchg   ebp,eax
  41e8ed:	lahf   
  41e8ee:	xlat   BYTE PTR ds:[ebx]
  41e8ef:	sub    edx,eax
  41e8f1:	dec    ebx
  41e8f2:	and    eax,0xc74278d0
  41e8f7:	jae    0x41e974
  41e8f9:	imul   ebp,DWORD PTR [esi+esi*4-0x5d21a1b],0xdd6c9150
  41e904:	xchg   ecx,eax
  41e905:	add    al,0xd7
  41e907:	sahf   
  41e908:	mov    eax,esi
  41e90a:	inc    ebp
  41e90b:	call   0x9336bbc4
  41e910:	lock shl BYTE PTR [ebx],cl
  41e913:	loope  0x41e91e
  41e915:	cli    
  41e916:	pop    edx
  41e917:	xor    esp,DWORD PTR [ecx+esi*8+0xc070bcf]
  41e91e:	ret    
  41e91f:	mov    al,ds:0xb6ec7f9e
  41e924:	lahf   
  41e925:	add    BYTE PTR ds:0x730ad99,dh
  41e92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e92c:	hlt    
  41e92d:	dec    ebp
  41e92e:	pop    ds
  41e92f:	(bad)  
  41e931:	(bad)  
  41e932:	in     eax,0x4b
  41e934:	push   eax
  41e935:	stos   BYTE PTR es:[edi],al
  41e936:	inc    eax
  41e937:	popf   
  41e938:	mov    ch,0xf9
  41e93a:	or     eax,0xd39ac91e
  41e93f:	push   ecx
  41e940:	adc    BYTE PTR [edx-0x7],ch
  41e943:	out    dx,eax
  41e944:	aaa    
  41e945:	xchg   ebx,eax
  41e946:	mov    edi,0xa75afd1
  41e94b:	(bad)  
  41e94c:	mov    ds:0x11b4c33a,al
  41e951:	cmp    esi,DWORD PTR [eax+0x4c]
  41e954:	mov    ecx,0x4b2a112
  41e959:	(bad)  
  41e95a:	cmc    
  41e95b:	retf   
  41e95c:	repnz loope 0x41e8e8
  41e95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e960:	push   ebx
  41e961:	dec    edx
  41e962:	mov    cl,0x89
  41e964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e965:	xchg   esp,eax
  41e966:	pop    si
  41e968:	dec    edi
  41e969:	xchg   esi,eax
  41e96a:	outs   dx,BYTE PTR ds:[esi]
  41e96b:	adc    bl,cl
  41e96d:	sbb    DWORD PTR [esi-0x52],0x3a049ab1
  41e974:	je     0x41e9ef
  41e976:	push   ecx
  41e977:	mov    DWORD PTR [edi],ebp
  41e979:	inc    eax
  41e97a:	sbb    BYTE PTR ds:0x51352d55,bh
  41e980:	inc    edi
  41e981:	sbb    bl,cl
  41e983:	ficomp WORD PTR [eax+eax*4+0x98e81d3]
  41e98a:	mov    ebx,0xe63e3b2e
  41e98f:	fst    DWORD PTR [ecx]
  41e991:	cld    
  41e992:	mov    dh,0x58
  41e994:	pop    esi
  41e995:	add    al,0x17
  41e997:	sar    DWORD PTR [ecx+edi*8+0x6],0x8f
  41e99c:	jg     0x41e93c
  41e99e:	push   cs
  41e99f:	push   0x71c98584
  41e9a4:	(bad)  
  41e9a6:	retf   
  41e9a7:	push   ebx
  41e9a8:	test   BYTE PTR [edi+edx*1+0x33],al
  41e9ac:	xchg   esi,eax
  41e9ad:	repnz in eax,0xe3
  41e9b0:	in     eax,0xd2
  41e9b2:	inc    ecx
  41e9b3:	dec    ebp
  41e9b4:	in     al,dx
  41e9b5:	xchg   esi,eax
  41e9b6:	or     al,0x6c
  41e9b8:	jb     0x41ea34
  41e9ba:	je     0x41e9d7
  41e9bc:	jp     0x41e99d
  41e9be:	mov    ah,0xd7
  41e9c0:	xlat   BYTE PTR ds:[ebx]
  41e9c1:	mov    ebp,0xf4a86946
  41e9c6:	sbb    BYTE PTR [edx],ch
  41e9c8:	and    al,0xeb
  41e9ca:	je     0x41e9ff
  41e9cc:	sub    DWORD PTR [edx],edx
  41e9ce:	in     eax,dx
  41e9cf:	loopne 0x41e9ea
  41e9d1:	cs jb  0x41e9cd
  41e9d4:	(bad)  [edi-0x5f]
  41e9d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9d8:	call   0x2c4b:0xfd2c4d7f
  41e9df:	push   ds
  41e9e0:	xchg   esi,eax
  41e9e1:	jo     0x41e9bd
  41e9e3:	xchg   DWORD PTR [esi+0x17],ebp
  41e9e6:	cmp    al,0x6c
  41e9e8:	pop    esi
  41e9e9:	inc    esp
  41e9ea:	add    ebp,esi
  41e9ec:	gs pop ebp
  41e9ee:	and    BYTE PTR ds:0x12469dd3,0x4c
  41e9f5:	sbb    BYTE PTR [edx-0x332bdf4c],al
  41e9fb:	adc    ebx,ebx
  41e9fd:	daa    
  41e9fe:	add    DWORD PTR [esp+esi*4+0x1a43e540],eax
  41ea05:	ds mov eax,0xfd142a66
  41ea0b:	cs out 0xad,eax
  41ea0e:	cmp    edi,ebp
  41ea10:	xlat   BYTE PTR ds:[ebx]
  41ea11:	cmp    al,0x39
  41ea13:	call   0x797:0x1aa3379
  41ea1a:	retf   0x6f0b
  41ea1d:	fs mov DWORD PTR gs:[ecx-0x23c822ed],0xdcfe1f57
  41ea29:	and    DWORD PTR [eax],edi
  41ea2b:	aad    0x90
  41ea2d:	inc    esi
  41ea2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea2f:	mov    BYTE PTR [edi],ah
  41ea31:	jg     0x41ea49
  41ea33:	jno    0x41e9e0
  41ea35:	jl     0x41e9cd
  41ea37:	jno    0x41e9e4
  41ea39:	ds push eax
  41ea3b:	sub    bl,BYTE PTR [edx]
  41ea3d:	cmp    edx,DWORD PTR [eax+0x7a]
  41ea40:	adc    DWORD PTR [edx],ebx
  41ea42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea43:	in     al,0x96
  41ea45:	call   0xc70b:0xe9a1dd9d
  41ea4c:	dec    eax
  41ea4d:	(bad)  
  41ea4e:	sbb    al,0xd2
  41ea50:	rol    DWORD PTR [ebx-0x13],cl
  41ea53:	or     eax,DWORD PTR [esi-0x5b54ea02]
  41ea59:	mov    ecx,0x18336a4c
  41ea5e:	mov    ds:0xec77c3a5,eax
  41ea63:	mov    eax,ds:0xaa0ab4f6
  41ea68:	leave  
  41ea69:	cmp    ah,ah
  41ea6b:	sbb    eax,0xf64b122
  41ea70:	xchg   ebp,eax
  41ea71:	xchg   esp,eax
  41ea72:	out    dx,al
  41ea73:	in     eax,dx
  41ea74:	test   al,0x2a
  41ea76:	ins    DWORD PTR es:[edi],dx
  41ea77:	repnz imul ebp,DWORD PTR [ecx],0x84e54665
  41ea7e:	mov    cl,0x5b
  41ea80:	mul    cl
  41ea82:	sub    bl,BYTE PTR [edx+0x4b]
  41ea85:	xchg   esi,eax
  41ea86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea87:	cwde   
  41ea88:	pushf  
  41ea89:	rcr    DWORD PTR [eax-0x14],cl
  41ea8c:	outs   dx,BYTE PTR ds:[esi]
  41ea8d:	xchg   ebp,eax
  41ea8e:	xchg   edi,eax
  41ea8f:	fwait
  41ea90:	mov    ebp,0xd7b5f78c
  41ea95:	mov    edi,0x9f5b46ff
  41ea9a:	imul   esi,ebx,0xffffff83
  41ea9d:	dec    ebp
  41ea9e:	and    dl,BYTE PTR [edi+0x5866d179]
  41eaa4:	fcom   QWORD PTR [esi]
  41eaa6:	mov    ch,0xf9
  41eaa8:	or     al,0x94
  41eaaa:	imul   ebx,DWORD PTR [edx],0xffffff98
  41eaad:	add    DWORD PTR [esp+ebx*8],ebx
  41eab0:	imul   eax,DWORD PTR [eax+0x45],0xffffffc6
  41eab4:	xor    ecx,DWORD PTR [eax+edi*4-0x12]
  41eab8:	fidiv  WORD PTR cs:[edx+0xe]
  41eabc:	xlat   BYTE PTR ds:[ebx]
  41eabd:	jg     0x41eac2
  41eabf:	aad    0x0
  41eac1:	dec    bx
  41eac3:	or     DWORD PTR [esi],esp
  41eac5:	dec    esi
  41eac6:	pop    ebp
  41eac7:	(bad)  
  41eac8:	sbb    bl,BYTE PTR [ebp-0x1ff8e8dd]
  41eace:	stos   DWORD PTR es:[edi],eax
  41eacf:	push   cs
  41ead0:	out    dx,al
  41ead1:	sbb    bl,cl
  41ead3:	dec    edx
  41ead4:	imul   ebp,DWORD PTR [ebp+0x46981331],0xebcb5b0c
  41eade:	adc    eax,0x8c5b2085
  41eae3:	mov    al,0x37
  41eae5:	jp     0x41eb25
  41eae7:	add    eax,0x7350af4b
  41eaec:	popf   
  41eaed:	imul   ecx,DWORD PTR [eax],0x5
  41eaf0:	dec    esi
  41eaf1:	cmp    al,0xb6
  41eaf3:	into   
  41eaf4:	sub    DWORD PTR [edx-0x4bf3cbab],edi
  41eafa:	test   BYTE PTR ss:[esi],dh
  41eafd:	sub    bl,BYTE PTR [ebx+0x1c6dd556]
  41eb03:	cdq    
  41eb04:	aas    
  41eb05:	ret    0x32d6
  41eb08:	mov    ebp,0x62d95296
  41eb0d:	dec    eax
  41eb0e:	in     eax,dx
  41eb0f:	cmp    DWORD PTR [ebp+0x4512e42],ebx
  41eb15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb16:	pop    eax
  41eb17:	jb     0x41eb35
  41eb19:	in     eax,dx
  41eb1a:	lods   al,BYTE PTR ds:[esi]
  41eb1b:	div    ch
  41eb1d:	sahf   
  41eb1e:	dec    eax
  41eb1f:	cdq    
  41eb20:	test   DWORD PTR [ebx],ebx
  41eb22:	jl     0x41eb39
  41eb24:	data16 jb 0x41eb44
  41eb27:	mov    ch,0x96
  41eb29:	leave  
  41eb2a:	clc    
  41eb2b:	sub    BYTE PTR [ebx],ah
  41eb2d:	push   cs
  41eb2e:	and    eax,0x820841b3
  41eb33:	cdq    
  41eb34:	dec    edi
  41eb35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb36:	clc    
  41eb37:	xor    al,0x67
  41eb39:	xchg   ecx,eax
  41eb3a:	gs cwde 
  41eb3c:	adc    DWORD PTR [edi+edi*2],ebp
  41eb3f:	xlat   BYTE PTR ds:[ebx]
  41eb40:	mov    al,0x3d
  41eb42:	xor    DWORD PTR [eax+0x37f5916c],esi
  41eb48:	pop    es
  41eb49:	sbb    DWORD PTR [ecx],edx
  41eb4b:	nop
  41eb4c:	push   ecx
  41eb4d:	sar    DWORD PTR [esi-0x7efb0e6e],cl
  41eb53:	leave  
  41eb54:	ja     0x41eaf6
  41eb56:	fisubr DWORD PTR [edi+0x31]
  41eb59:	inc    edx
  41eb5a:	dec    ebp
  41eb5b:	ins    DWORD PTR es:[edi],dx
  41eb5c:	popf   
  41eb5d:	mov    ch,0x19
  41eb5f:	clc    
  41eb60:	iret   
  41eb61:	stc    
  41eb62:	cmp    al,0xc9
  41eb64:	repz aas 
  41eb66:	es mov ah,0x6d
  41eb69:	cli    
  41eb6a:	sub    DWORD PTR [ecx-0x80],ebp
  41eb6d:	inc    edx
  41eb6e:	mov    esp,0xea1730b1
  41eb73:	xchg   edx,eax
  41eb74:	outs   dx,DWORD PTR ds:[esi]
  41eb75:	dec    edi
  41eb76:	jge    0x41ebad
  41eb78:	ret    
  41eb79:	and    edi,esp
  41eb7b:	jo     0x41eb26
  41eb7d:	ins    DWORD PTR es:[edi],dx
  41eb7e:	(bad)  
  41eb7f:	or     ebp,DWORD PTR [esi+0x59]
  41eb82:	div    dl
  41eb84:	ficom  DWORD PTR [esi]
  41eb86:	push   ss
  41eb87:	mov    bl,0x27
  41eb89:	inc    BYTE PTR [ecx+0x188e42a9]
  41eb8f:	sub    bh,al
  41eb91:	retf   
  41eb92:	sub    DWORD PTR [ebx+0x351835f6],eax
  41eb98:	xchg   cl,dh
  41eb9a:	cld    
  41eb9b:	jo     0x41ebca
  41eb9d:	push   0x5b
  41eb9f:	xchg   ecx,eax
  41eba0:	xor    ch,BYTE PTR es:[esi]
  41eba3:	ret    0x1ef0
  41eba6:	mov    eax,ds:0x8b552030
  41ebab:	mov    DWORD PTR [esi],esp
  41ebad:	(bad)  
  41ebae:	je     0x41ebaf
  41ebb0:	pop    eax
  41ebb1:	es pop ecx
  41ebb3:	lods   al,BYTE PTR ds:[esi]
  41ebb4:	addr16 jno 0x41eb6e
  41ebb7:	jnp    0x41eb62
  41ebb9:	or     BYTE PTR ds:0xb66da87e,dl
  41ebbf:	mov    ss,ebx
  41ebc1:	cld    
  41ebc2:	ja     0x41ebb7
  41ebc4:	lods   eax,DWORD PTR es:[esi]
  41ebc6:	imul   eax,DWORD PTR ds:0x96c6,0x934b324a
  41ebcf:	in     al,dx
  41ebd0:	push   cs
  41ebd1:	iret   
  41ebd2:	xchg   esp,eax
  41ebd3:	push   ebp
  41ebd4:	push   cs
  41ebd5:	pop    bp
  41ebd7:	pop    ds
  41ebd8:	sub    ebx,DWORD PTR [edi-0x6d7a0af2]
  41ebde:	shl    BYTE PTR [eax-0x63],1
  41ebe1:	(bad)
  41ebe5:	or     DWORD PTR [esi+0x67],esp
  41ebe8:	add    BYTE PTR [esi],0xaa
  41ebeb:	(bad)  
  41ebed:	jae    0x41ec68
  41ebef:	je     0x41ec4f
  41ebf1:	scas   al,BYTE PTR es:[edi]
  41ebf2:	pop    es
  41ebf3:	xchg   esp,eax
  41ebf4:	push   0x4
  41ebf6:	outs   dx,BYTE PTR ds:[esi]
  41ebf7:	and    eax,0x3b4239ab
  41ebfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebfd:	(bad)  [edi-0x46]
  41ec00:	into   
  41ec01:	mov    bl,0x7f
  41ec03:	and    al,0xa0
  41ec05:	mov    ebx,DWORD PTR [ecx+0x31f9f46f]
  41ec0b:	inc    ebp
  41ec0c:	jmp    0x41ec41
  41ec0e:	jge    0x41ebce
  41ec10:	pop    ebp
  41ec11:	jmp    0x89ab26e8
  41ec16:	xchg   esi,eax
  41ec17:	jle    0x41ebff
  41ec19:	mov    dl,0xb6
  41ec1b:	loop   0x41ec0a
  41ec1d:	add    DWORD PTR [ebp+0x2b9a5ade],esp
  41ec23:	push   ecx
  41ec24:	int3   
  41ec25:	xor    eax,DWORD PTR [ebx+0x1a]
  41ec28:	sub    al,0x69
  41ec2a:	loope  0x41ec96
  41ec2c:	mov    ecx,0x444d2ad4
  41ec31:	sub    al,0xed
  41ec33:	xor    al,0xe9
  41ec35:	fld    DWORD PTR [ebp+edi*8-0x39]
  41ec39:	jbe    0x41ebd5
  41ec3b:	mov    esi,0xf57e38ed
  41ec40:	aam    0x90
  41ec42:	mov    esp,0x2b4775d1
  41ec47:	mov    edx,0x15df18a8
  41ec4c:	push   es
  41ec4d:	adc    DWORD PTR [edx-0x6473aa59],ecx
  41ec53:	mov    edi,0xb3acd367
  41ec58:	pop    ds
  41ec59:	jmp    0x3ff6:0x5ef93bb7
  41ec60:	test   eax,0xc64e46b1
  41ec65:	add    edi,ecx
  41ec67:	jmp    0x8119de4f
  41ec6c:	mov    ebp,DWORD PTR [ebx-0x4dec1b47]
  41ec72:	out    0x97,al
  41ec74:	sub    al,0xb
  41ec76:	fs or  al,0x85
  41ec79:	xor    ah,BYTE PTR [ecx]
  41ec7b:	pop    esi
  41ec7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec7d:	out    0xfe,eax
  41ec7f:	lds    ebx,FWORD PTR [esi]
  41ec81:	mov    BYTE PTR [ebx+0x4ade2d0e],dl
  41ec87:	dec    eax
  41ec88:	mov    ch,0xf6
  41ec8a:	icebp  
  41ec8b:	loope  0x41ec97
  41ec8d:	xor    esi,esp
  41ec8f:	lods   eax,DWORD PTR ds:[esi]
  41ec90:	clc    
  41ec91:	ja     0x41ec7f
  41ec93:	repnz shl BYTE PTR [ecx],1
  41ec96:	in     eax,dx
  41ec97:	mov    edx,0xa2fcabe8
  41ec9c:	or     esi,DWORD PTR [ecx+0x5b82cfd4]
  41eca2:	not    esi
  41eca4:	ja     0x41ecea
  41eca6:	adc    BYTE PTR [edi-0x39],bh
  41eca9:	cli    
  41ecaa:	add    ch,0x17
  41ecad:	daa    
  41ecae:	sub    al,0x86
  41ecb0:	sub    edi,DWORD PTR [ebp-0x24]
  41ecb3:	sti    
  41ecb4:	inc    edi
  41ecb5:	and    al,0xbb
  41ecb7:	push   ss
  41ecb8:	xchg   esp,eax
  41ecb9:	mov    esi,0x6e9b0cc5
  41ecbe:	outs   dx,DWORD PTR ds:[esi]
  41ecbf:	mov    esi,0x9f272f73
  41ecc4:	push   ss
  41ecc5:	push   edx
  41ecc6:	mov    al,ds:0xcf450d1e
  41eccb:	shl    BYTE PTR [esi-0x39],cl
  41ecce:	mov    ds:0x6874b274,al
  41ecd3:	cli    
  41ecd4:	and    bh,ah
  41ecd6:	cwde   
  41ecd7:	(bad)  
  41ecd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecd9:	cmp    eax,0x65b18a4c
  41ecde:	mov    esp,0xed6d3ab6
  41ece3:	addr16 pop ebp
  41ece5:	bsf    ebp,DWORD PTR [eax+0x4eb7e4be]
  41ecec:	jp     0x41ed04
  41ecee:	cld    
  41ecef:	add    DWORD PTR [ebx+0x14aec192],esp
  41ecf5:	mov    dl,BYTE PTR [edi-0x79d869fd]
  41ecfb:	jmp    0x41ed7a
  41ecfd:	js     0x41ed66
  41ecff:	aad    0xef
  41ed01:	mov    ecx,0x3dfd8d6f
  41ed06:	pop    es
  41ed07:	out    dx,eax
  41ed08:	mov    dh,0xd0
  41ed0a:	mov    cl,BYTE PTR [esi]
  41ed0c:	ds inc edx
  41ed0e:	sub    dl,BYTE PTR [ebp-0x2385a467]
  41ed14:	and    al,0xc
  41ed16:	sub    BYTE PTR [esp+esi*1+0x7d],bh
  41ed1a:	push   esp
  41ed1b:	sbb    cl,BYTE PTR [esi+0x69]
  41ed1e:	mov    esi,0x97096664
  41ed23:	in     al,dx
  41ed24:	(bad)  
  41ed25:	pop    ebp
  41ed26:	mov    eax,ss
  41ed28:	and    bl,bh
  41ed2a:	dec    ecx
  41ed2b:	cmp    BYTE PTR [esi+ecx*2],dh
  41ed2e:	push   0x37c1b6e4
  41ed33:	test   BYTE PTR [edx],dh
  41ed35:	jno    0x41ece4
  41ed37:	push   eax
  41ed38:	inc    ebp
  41ed39:	dec    esi
  41ed3a:	imul   ecx,eax,0x2
  41ed3d:	test   al,0xfb
  41ed3f:	loope  0x41ed0b
  41ed41:	outs   dx,DWORD PTR ds:[esi]
  41ed42:	jae    0x41ed39
  41ed44:	jp     0x41ece2
  41ed46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed47:	jp     0x41ed7f
  41ed49:	mov    ebx,0xba910143
  41ed4e:	push   esi
  41ed4f:	test   DWORD PTR [esi+esi*8-0x78],esp
  41ed53:	cdq    
  41ed54:	xor    BYTE PTR [edi],al
  41ed56:	test   ecx,0x989d5a5
  41ed5c:	mov    ah,0xe
  41ed5e:	paddsw mm2,QWORD PTR [eax+0x41fa08c4]
  41ed65:	jne    0x41ed5b
  41ed67:	xchg   edi,eax
  41ed68:	cmp    eax,0xaffbe06d
  41ed6d:	mov    bl,0x8a
  41ed6f:	dec    ebx
  41ed70:	xlat   BYTE PTR ds:[ebx]
  41ed71:	lfs    esp,FWORD PTR [ebx-0x2]
  41ed75:	and    eax,0xf3fb6aa
  41ed7a:	fst    DWORD PTR [edi-0x26]
  41ed7d:	into   
  41ed7e:	mov    ds:0x5bec4f54,al
  41ed83:	push   ss
  41ed84:	pop    edx
  41ed85:	inc    edx
  41ed86:	xchg   esi,eax
  41ed87:	sbb    dh,BYTE PTR [eax]
  41ed89:	pop    edx
  41ed8a:	jmp    0xe640:0x1a1c66bb
  41ed91:	xlat   BYTE PTR ds:[ebx]
  41ed92:	add    BYTE PTR [eax],bh
  41ed94:	lea    esp,[edi+0x78]
  41ed97:	mov    ecx,0x572ce74d
  41ed9c:	or     BYTE PTR [edx],cl
  41ed9e:	sti    
  41ed9f:	sub    DWORD PTR [ebx],ebp
  41eda1:	push   0x94653307
  41eda6:	fst    QWORD PTR [ebx-0x7d]
  41eda9:	in     eax,0xf4
  41edab:	pushf  
  41edac:	jno    0x41edff
  41edae:	bound  ebp,QWORD PTR [eax-0x63]
  41edb1:	add    edx,edi
  41edb3:	mov    ebp,0x38eb01d6
  41edb8:	(bad)  
  41edb9:	daa    
  41edba:	div    bl
  41edbc:	xor    DWORD PTR [ebx],esp
  41edbe:	mov    ds:0xa1743948,eax
  41edc3:	push   ss
  41edc4:	and    esi,DWORD PTR [esi]
  41edc6:	stos   DWORD PTR es:[edi],eax
  41edc7:	jmp    0x97f8:0xab9b6421
  41edce:	or     DWORD PTR [edx+0x23],0x31
  41edd2:	and    cl,BYTE PTR [ecx+0x639da0da]
  41edd8:	cmp    eax,0x1bd127ff
  41eddd:	not    BYTE PTR [esi+0x4c]
  41ede0:	in     al,0xd0
  41ede2:	push   esi
  41ede3:	mov    esi,0xf822943b
  41ede8:	inc    ecx
  41ede9:	outs   dx,BYTE PTR ds:[esi]
  41edea:	sti    
  41edeb:	out    0x68,eax
  41eded:	pushf  
  41edee:	aam    0xfd
  41edf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf1:	je     0x41edbd
  41edf3:	adc    eax,0xec5c0ce9
  41edf8:	pop    esp
  41edf9:	sub    DWORD PTR [ebx+0x74dfd839],edx
  41edff:	bound  ebp,QWORD PTR [esi]
  41ee01:	xchg   esi,eax
  41ee02:	xor    bh,BYTE PTR [ebx+0x7a]
  41ee05:	jae    0x41ee34
  41ee07:	dec    ebp
  41ee08:	and    ebx,DWORD PTR [ebp-0x15]
  41ee0b:	push   ecx
  41ee0c:	push   0xffffffb3
  41ee0e:	push   edi
  41ee0f:	ins    BYTE PTR es:[edi],dx
  41ee10:	mov    ch,0xa0
  41ee12:	int    0x69
  41ee14:	add    ecx,DWORD PTR [esi]
  41ee16:	in     eax,0x74
  41ee18:	push   ss
  41ee19:	call   0x300a7632
  41ee1e:	mov    eax,0xe2543e04
  41ee23:	pushf  
  41ee24:	loop   0x41ee5b
  41ee26:	imul   ebx,edx,0xffffffcf
  41ee29:	cmp    edx,ebx
  41ee2b:	xlat   BYTE PTR ds:[ebx]
  41ee2c:	xor    BYTE PTR [esi+0x2410571e],al
  41ee32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee33:	adc    bh,ch
  41ee35:	mov    cl,0x73
  41ee37:	scas   eax,DWORD PTR es:[edi]
  41ee38:	rcr    BYTE PTR [edx],1
  41ee3a:	xchg   BYTE PTR [ebx],bl
  41ee3c:	das    
  41ee3d:	xchg   esp,eax
  41ee3e:	sub    ch,BYTE PTR [ebx]
  41ee40:	cmp    al,0xbe
  41ee42:	aaa    
  41ee43:	mov    ds:0x5ec7f6df,eax
  41ee48:	aam    0x8
  41ee4a:	shl    DWORD PTR ds:0xdf918ad3,1
  41ee50:	xchg   DWORD PTR [ebx+eiz*4+0x6d],esp
  41ee54:	int    0x84
  41ee56:	sub    DWORD PTR [ebp-0x165a0420],esp
  41ee5c:	pop    esi
  41ee5d:	xor    eax,0x9a8939a6
  41ee62:	cmc    
  41ee63:	jns    0x41eed9
  41ee65:	test   eax,0xea11b5d9
  41ee6a:	sbb    al,0x17
  41ee6c:	or     al,0xcb
  41ee6e:	inc    esi
  41ee6f:	dec    eax
  41ee70:	inc    edi
  41ee71:	scas   eax,DWORD PTR es:[edi]
  41ee72:	sub    esi,DWORD PTR [esi-0x6a4088ba]
  41ee78:	(bad)  
  41ee79:	std    
  41ee7a:	retf   0x5f89
  41ee7d:	mov    cl,0x4a
  41ee7f:	add    bh,BYTE PTR [ebp+0x2e8c770f]
  41ee85:	push   ebp
  41ee86:	ins    DWORD PTR es:[edi],dx
  41ee87:	out    dx,al
  41ee88:	sub    ebp,edx
  41ee8a:	adc    bh,0xf8
  41ee8d:	pop    edi
  41ee8e:	mov    ebp,0x78b4e26e
  41ee93:	and    BYTE PTR [ecx],cl
  41ee95:	outs   dx,BYTE PTR ds:[esi]
  41ee96:	jne    0x41eeb6
  41ee98:	nop
  41ee99:	imul   esp,eax,0xa52872dd
  41ee9f:	jb     0x41eeae
  41eea1:	fwait
  41eea2:	cmc    
  41eea3:	mov    cl,0x48
  41eea5:	ss mov edi,0xcaa718bf
  41eeab:	mov    esi,0x205ae898
  41eeb0:	xchg   ecx,eax
  41eeb1:	or     bh,BYTE PTR [edx+edi*8+0x61]
  41eeb5:	pop    esi
  41eeb6:	mov    eax,0xe5e78555
  41eebb:	data16 test al,0x22
  41eebe:	xor    BYTE PTR [esi+0x60557c3d],0x99
  41eec5:	and    eax,0xf793f5d6
  41eeca:	in     al,dx
  41eecb:	(bad)  
  41eecd:	fdivr  DWORD PTR [esi-0x36]
  41eed0:	jge    0x41eecb
  41eed2:	push   edx
  41eed3:	xchg   ebx,eax
  41eed4:	mov    al,0x1d
  41eed6:	ins    DWORD PTR es:[edi],dx
  41eed7:	ror    BYTE PTR [edi+0x6f],cl
  41eeda:	xchg   DWORD PTR [esi+0x31],ebx
  41eedd:	sbb    eax,0xa7ce9199
  41eee2:	das    
  41eee3:	out    0x8,al
  41eee5:	add    bh,BYTE PTR [eax+edx*4-0x521c3864]
  41eeec:	loopne 0x41eecd
  41eeee:	jg     0x41ef05
  41eef0:	scas   al,BYTE PTR es:[edi]
  41eef1:	sbb    eax,DWORD PTR ds:0x1a763f6a
  41eef7:	(bad)  
  41eef8:	adc    bl,cl
  41eefa:	adc    eax,DWORD PTR [eax]
  41eefc:	lea    esp,[edi]
  41eefe:	sar    BYTE PTR [ecx-0x74],cl
  41ef01:	mov    al,ds:0x3f1abaf6
  41ef06:	push   ebx
  41ef07:	ficom  DWORD PTR [ebp-0x6406f7c3]
  41ef0d:	cli    
  41ef0e:	loope  0x41ef3e
  41ef10:	push   cs
  41ef11:	add    al,0x9d
  41ef13:	mov    al,0xfe
  41ef15:	fwait
  41ef16:	pushw  0xffeb
  41ef19:	add    DWORD PTR [edx+0xf02f09c],0xffffffc7
  41ef20:	sbb    BYTE PTR [eax-0x69],dl
  41ef23:	(bad)  [esi-0x777a75b1]
  41ef29:	jnp    0x41ef84
  41ef2b:	out    dx,al
  41ef2c:	mov    eax,ds:0x80513f74
  41ef31:	sub    dl,dh
  41ef33:	out    0x2,eax
  41ef35:	xlat   BYTE PTR ds:[ebx]
  41ef36:	inc    ebx
  41ef37:	cli    
  41ef38:	sar    DWORD PTR [edi],0x7c
  41ef3b:	out    dx,eax
  41ef3c:	je     0x41eecb
  41ef3e:	xchg   esi,eax
  41ef3f:	pop    ebp
  41ef40:	xor    ah,BYTE PTR [ebx+0x4a]
  41ef43:	mov    edx,?
  41ef45:	(bad)  
  41ef46:	cmp    BYTE PTR [ecx+0x3030719f],ah
  41ef4c:	xchg   ebx,eax
  41ef4d:	and    al,0x5b
  41ef4f:	rcr    DWORD PTR [esp+ecx*4-0x55],0xe4
  41ef54:	test   DWORD PTR ss:[ecx+edi*8],edx
  41ef58:	fwait
  41ef59:	jno    0x41ef82
  41ef5b:	out    0xc8,al
  41ef5d:	inc    ebp
  41ef5e:	jae    0x41ef85
  41ef60:	dec    ebx
  41ef61:	inc    eax
  41ef62:	ss dec eax
  41ef64:	jmp    0xf98de9c
  41ef69:	ss jmp 0x1eca04cb
  41ef6f:	lods   al,BYTE PTR ds:[esi]
  41ef70:	clc    
  41ef71:	mov    eax,0x4d6199fc
  41ef76:	mov    ch,0x2e
  41ef78:	loopne 0x41ef9f
  41ef7a:	(bad)  
  41ef7b:	sbb    edi,DWORD PTR [ebx+edx*1-0x3c]
  41ef7f:	int3   
  41ef80:	mov    esp,0xaedf0a5b
  41ef85:	(bad)  
  41ef86:	xor    ch,BYTE PTR [edx+0x2c6ab578]
  41ef8c:	int3   
  41ef8d:	xchg   ecx,eax
  41ef8e:	in     eax,dx
  41ef8f:	ffree  st(3)
  41ef91:	test   DWORD PTR [edx+0x5e],0xd9af2c64
  41ef98:	xchg   edx,eax
  41ef99:	add    al,0xb5
  41ef9b:	js     0x41ef52
  41ef9d:	push   edx
  41ef9e:	je     0x41efa6
  41efa0:	jo     0x41efbb
  41efa2:	aaa    
  41efa3:	mov    WORD PTR [ecx+0x6077d3ce],?
  41efa9:	mov    ebx,0x2375d295
  41efae:	rcr    esi,cl
  41efb0:	ja     0x41efbe
  41efb2:	cwde   
  41efb3:	pop    ds
  41efb4:	pop    ds
  41efb5:	in     eax,dx
  41efb6:	pop    edi
  41efb7:	sub    ebp,DWORD PTR [ebp+0x359e36e7]
  41efbd:	retf   
  41efbe:	lods   eax,DWORD PTR ds:[esi]
  41efbf:	(bad)  [edx-0x1]
  41efc2:	xor    bh,BYTE PTR [eax-0x3c7ee3d7]
  41efc8:	sahf   
  41efc9:	add    esp,ebp
  41efcb:	jecxz  0x41ef9f
  41efcd:	mov    fs,esp
  41efcf:	cmp    eax,0xeac5f0e0
  41efd4:	daa    
  41efd5:	int    0x13
  41efd7:	data16 xor al,0xe9
  41efda:	int    0x1c
  41efdc:	sbb    BYTE PTR [edi+0x65960cce],al
  41efe2:	mul    BYTE PTR [edi+eiz*2+0x1d]
  41efe6:	aad    0x2f
  41efe8:	fld    QWORD PTR [esi-0x1155e2f6]
  41efee:	loope  0x41f04f
  41eff0:	xchg   ecx,eax
  41eff1:	cmp    esi,ebx
  41eff3:	stos   BYTE PTR es:[edi],al
  41eff4:	jp     0x41f028
  41eff6:	fxch   st(3)
  41eff8:	rcl    BYTE PTR [edi+0x63b5d002],cl
  41effe:	adc    ebx,edx
  41f000:	mov    ebp,0x5f2245aa
  41f005:	(bad)  
  41f006:	stos   DWORD PTR es:[edi],eax
  41f007:	sbb    BYTE PTR ds:0x74b3eb21,dl
  41f00d:	fnstsw WORD PTR [ecx+0x0]
  41f010:	gs cmp eax,0xae4bca0d
  41f016:	cmc    
  41f017:	(bad)  
  41f018:	std    
  41f019:	nop
  41f01a:	add    eax,0xb8b337e8
  41f01f:	iret   
  41f020:	inc    eax
  41f021:	aaa    
  41f022:	inc    esi
  41f023:	aas    
  41f024:	inc    ebp
  41f025:	popf   
  41f026:	inc    esi
  41f027:	pusha  
  41f028:	mov    dl,0xfc
  41f02a:	jp     0x41f04d
  41f02c:	dec    BYTE PTR [edi]
  41f02e:	pop    ds
  41f02f:	loop   0x41f044
  41f031:	hlt    
  41f032:	je     0x41f00d
  41f034:	cmp    al,0x25
  41f036:	xor    BYTE PTR [edi+0x66],ah
  41f039:	jmp    0x41efe2
  41f03b:	cld    
  41f03c:	inc    edi
  41f03d:	push   es
  41f03e:	dec    ebx
  41f03f:	pop    es
  41f040:	add    al,0xd5
  41f042:	in     eax,0x7c
  41f044:	fdiv   QWORD PTR [edi+ecx*8+0x140b21e8]
  41f04b:	mov    dl,0x76
  41f04d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f04e:	sub    DWORD PTR [ebp+0x55],ebp
  41f051:	fwait
  41f052:	shl    BYTE PTR [edx],cl
  41f054:	mov    ds:0x502724b7,al
  41f059:	dec    edx
  41f05a:	jmp    0xb8a902f4
  41f05f:	lahf   
  41f060:	jge    0x41f086
  41f062:	xor    al,0x5b
  41f064:	or     DWORD PTR [esi],0xdeddcc45
  41f06a:	sub    eax,0x585f6d0f
  41f06f:	jl     0x41f0a0
  41f071:	dec    eax
  41f072:	repz div BYTE PTR [esi-0x6e]
  41f076:	fimul  WORD PTR [edx+eiz*2-0x74]
  41f07a:	inc    ecx
  41f07b:	or     eax,0xf16f12a1
  41f080:	or     eax,0xdf941dc0
  41f085:	outs   dx,BYTE PTR ds:[esi]
  41f086:	jae    0x41f0d2
  41f088:	dec    esp
  41f089:	clc    
  41f08a:	inc    ebp
  41f08b:	and    al,0xe2
  41f08d:	(bad)  
  41f08e:	pop    ebx
  41f08f:	sbb    eax,0x59a3f27d
  41f094:	inc    eax
  41f095:	icebp  
  41f096:	pop    esp
  41f097:	fisub  WORD PTR [eax]
  41f099:	cmp    ch,BYTE PTR [esi+0x680c4eb0]
  41f09f:	cli    
  41f0a0:	dec    ecx
  41f0a1:	mov    dh,0x91
  41f0a3:	scas   al,BYTE PTR es:[edi]
  41f0a4:	jmp    0x7e17:0xae4c88a9
  41f0ab:	jg     0x41f123
  41f0ad:	mov    ah,0xf
  41f0af:	nop
  41f0b0:	push   ss
  41f0b1:	arpl   di,dx
  41f0b3:	sbb    DWORD PTR [eax-0xa],ebp
  41f0b6:	mov    al,0xa7
  41f0b8:	adc    al,0xce
  41f0ba:	cs mov ecx,0xc84d3d0d
  41f0c0:	push   DWORD PTR ds:0x5760431b
  41f0c6:	je     0x41f0ea
  41f0c8:	mov    esi,0x3819fdfc
  41f0cd:	xor    DWORD PTR [esi-0x76b1a216],edi
  41f0d3:	ret    0x7125
  41f0d6:	or     al,0xa2
  41f0d8:	mov    bh,0xc9
  41f0da:	aas    
  41f0db:	inc    eax
  41f0dc:	mov    bl,0x8f
  41f0de:	adc    ah,BYTE PTR [edx+ecx*2+0x78]
  41f0e2:	(bad)  [ecx-0x18dc775]
  41f0e8:	or     ch,ah
  41f0ea:	jp     0x41f145
  41f0ec:	mov    ebx,0xb4fe52fc
  41f0f1:	mov    ecx,0x646d6a45
  41f0f6:	pop    ss
  41f0f7:	in     al,0xd6
  41f0f9:	xor    BYTE PTR gs:[ebx],cl
  41f0fc:	mov    ebx,cs
  41f0fe:	mov    dh,0x5d
  41f100:	push   ecx
  41f101:	push   ecx
  41f102:	mov    al,BYTE PTR [ebx+0x4c]
  41f105:	or     ebp,edi
  41f107:	sbb    eax,0x9b62983e
  41f10c:	ret    0x6bfc
  41f10f:	inc    ebp
  41f110:	lahf   
  41f111:	ss sti 
  41f113:	aam    0xf1
  41f115:	(bad)  
  41f116:	adc    eax,0x56b25e2c
  41f11b:	pop    edx
  41f11c:	jp     0x41f12a
  41f11e:	sub    DWORD PTR [eax+ebx*2+0x2242e5ec],esp
  41f125:	and    al,0x2b
  41f127:	fcomp  QWORD PTR [esi+0x45]
  41f12a:	mov    BYTE PTR [ecx],dl
  41f12c:	les    edx,FWORD PTR [eax*4+0x566b1596]
  41f133:	int    0x77
  41f135:	cmp    BYTE PTR [edi-0x954b49e],cl
  41f13b:	add    ebx,DWORD PTR [ebx-0x27c34267]
  41f141:	jl     0x41f19b
  41f143:	pushf  
  41f144:	add    al,0xa5
  41f146:	pop    edx
  41f147:	cmp    ecx,DWORD PTR [ebx]
  41f149:	sbb    al,dh
  41f14b:	or     eax,0x7498015
  41f150:	push   es
  41f151:	pop    eax
  41f152:	aaa    
  41f153:	add    DWORD PTR [ecx-0x63997cad],edx
  41f159:	lods   al,BYTE PTR ds:[esi]
  41f15a:	data16 jb 0x41f1b5
  41f15d:	repz push 0x7f55316a
  41f163:	jmp    0x3aa7f37d
  41f168:	cmp    bh,bh
  41f16a:	sub    al,BYTE PTR [edx+0x78]
  41f16d:	pop    es
  41f16e:	jo     0x41f1a1
  41f170:	fidivr DWORD PTR [eax+0x27]
  41f173:	outs   dx,DWORD PTR ds:[esi]
  41f174:	aad    0x4
  41f176:	imul   ebp,ebp,0x3c
  41f179:	and    al,BYTE PTR [ebx]
  41f17b:	push   ecx
  41f17c:	in     eax,0x63
  41f17e:	mov    esp,0xe9f9b410
  41f183:	xor    ebx,DWORD PTR [edi]
  41f185:	jle    0x41f1de
  41f187:	aam    0xcd
  41f189:	inc    ebp
  41f18a:	pop    es
  41f18b:	js     0x41f17a
  41f18d:	dec    ecx
  41f18e:	cmp    eax,0xc25e4125
  41f193:	test   eax,0x84804552
  41f198:	jnp    0x41f1c1
  41f19a:	ds sub al,ah
  41f19d:	and    DWORD PTR [edx+0x51795683],ecx
  41f1a3:	push   ebp
  41f1a4:	dec    ecx
  41f1a5:	ins    DWORD PTR es:[edi],dx
  41f1a6:	arpl   WORD PTR [esp+esi*8+0x54],dx
  41f1aa:	pmaddwd mm0,QWORD PTR [ecx]
  41f1ad:	push   cs
  41f1ae:	jno    0x41f208
  41f1b0:	jb     0x41f190
  41f1b2:	sub    al,0xbb
  41f1b4:	es pop ebp
  41f1b6:	jecxz  0x41f1f8
  41f1b8:	pop    es
  41f1b9:	sub    BYTE PTR cs:[ebx],al
  41f1bc:	xchg   ebx,eax
  41f1bd:	into   
  41f1be:	mov    eax,0xf5ae3a35
  41f1c3:	out    dx,eax
  41f1c4:	mov    esi,0x323c8ba6
  41f1c9:	and    al,0xb7
  41f1cb:	stos   BYTE PTR es:[edi],al
  41f1cc:	and    eax,0xf78baf75
  41f1d1:	imul   esi,DWORD PTR [eax],0x34
  41f1d4:	repz (bad) 
  41f1d6:	loop   0x41f1ec
  41f1d8:	add    al,0xcf
  41f1da:	test   BYTE PTR [edi-0x70ddc6ec],al
  41f1e0:	stos   BYTE PTR es:[edi],al
  41f1e1:	mov    al,ds:0x15d3b2ba
  41f1e6:	or     al,0x6
  41f1e8:	ret    
  41f1e9:	jo     0x41f219
  41f1eb:	outs   dx,BYTE PTR ds:[esi]
  41f1ec:	dec    ecx
  41f1ed:	addr16 out 0x35,eax
  41f1f0:	sahf   
  41f1f1:	adc    eax,0xc5b07f4
  41f1f6:	ins    BYTE PTR es:[edi],dx
  41f1f7:	mov    esp,0x8fff9758
  41f1fc:	loope  0x41f1ac
  41f1fe:	aad    0x36
  41f200:	std    
  41f201:	add    eax,DWORD PTR [esi+esi*4-0x68c86d67]
  41f208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f209:	jmp    0x53f6:0x27a11db
  41f210:	(bad)  [esi]
  41f212:	mov    ecx,0x8f48d4f3
  41f217:	sub    al,0xb6
  41f219:	retf   
  41f21a:	cmovle ebx,eax
  41f21d:	adc    BYTE PTR [ebp-0x2f],al
  41f220:	(bad)  
  41f221:	out    dx,al
  41f222:	cmc    
  41f223:	cmp    eax,0xe16552fd
  41f228:	dec    esp
  41f229:	xor    DWORD PTR [esi+0x441ed034],esp
  41f22f:	push   esi
  41f230:	jmp    0x2a7:0xe1fd7028
  41f237:	jne    0x41f265
  41f239:	push   ecx
  41f23a:	and    esi,ebp
  41f23c:	clc    
  41f23d:	and    ebx,ebp
  41f23f:	int3   
  41f240:	mov    al,ds:0x1fc32d0a
  41f245:	popf   
  41f246:	sub    edx,0xdd6b0a5e
  41f24c:	aaa    
  41f24d:	ret    0x466e
  41f250:	push   ebx
  41f251:	inc    esi
  41f252:	in     eax,0x99
  41f254:	nop
  41f255:	inc    edx
  41f256:	xchg   ebp,eax
  41f257:	fmul   QWORD PTR [esi]
  41f259:	sub    DWORD PTR [eax+0x64],eax
  41f25c:	dec    esp
  41f25d:	ret    0x1967
  41f260:	pop    ecx
  41f261:	sbb    al,0xd2
  41f263:	int    0x8c
  41f265:	stc    
  41f266:	pop    ecx
  41f267:	push   0x8ad65710
  41f26c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f26d:	jo     0x41f257
  41f26f:	mov    ds:0xb7e6404,eax
  41f274:	in     al,0x24
  41f276:	adc    BYTE PTR [edx-0x38],al
  41f279:	dec    ebp
  41f27a:	clc    
  41f27b:	cdq    
  41f27c:	cs xor esp,esp
  41f27f:	in     al,dx
  41f280:	dec    edx
  41f281:	adc    BYTE PTR [eax+0x5a],ch
  41f284:	ret    0x4b4c
  41f287:	outs   dx,DWORD PTR ds:[esi]
  41f288:	inc    ebp
  41f289:	mov    eax,0xf11e6fe0
  41f28e:	push   esi
  41f28f:	ja     0x41f29a
  41f291:	mov    ebx,0xd3ab1bf3
  41f296:	inc    BYTE PTR [edi-0x6eb160d1]
  41f29c:	in     al,0x39
  41f29e:	fst    QWORD PTR [esp+0x424b561b]
  41f2a5:	enter  0xeb10,0x32
  41f2a9:	xchg   ebx,eax
  41f2aa:	(bad)  
  41f2ab:	jno    0x41f2ff
  41f2ad:	jae    0x41f2d6
  41f2af:	xchg   esp,eax
  41f2b0:	shr    BYTE PTR [edx+0x300d3e4c],1
  41f2b6:	xlat   BYTE PTR ds:[ebx]
  41f2b7:	jmp    0xe559:0xf5130002
  41f2be:	jge    0x41f309
  41f2c0:	clc    
  41f2c1:	dec    ebp
  41f2c2:	push   eax
  41f2c3:	and    al,0x10
  41f2c5:	sbb    BYTE PTR [edi-0x65],cl
  41f2c8:	push   0x316ae1c7
  41f2cd:	jb     0x41f254
  41f2cf:	jle    0x41f2fa
  41f2d1:	adc    eax,0x73694a29
  41f2d6:	mov    ch,0x71
  41f2d8:	jmp    0x32827266
  41f2dd:	pop    ecx
  41f2de:	data16 int3 
  41f2e0:	mov    cl,BYTE PTR [esi-0x3e1a41c]
  41f2e6:	dec    eax
  41f2e7:	xchg   ecx,eax
  41f2e8:	iret   
  41f2e9:	ins    BYTE PTR es:[edi],dx
  41f2ea:	leave  
  41f2eb:	test   eax,0x5c7f6ae1
  41f2f0:	rcl    cl,0x67
  41f2f3:	mov    esi,0xebc52d7
  41f2f8:	fcomi  st,st(7)
  41f2fa:	mov    al,ds:0x3d0e1889
  41f2ff:	pop    es
  41f300:	or     ah,BYTE PTR [ecx-0x40]
  41f303:	aam    0xae
  41f305:	(bad)  
  41f306:	(bad)  
  41f307:	pop    esp
  41f308:	inc    edi
  41f309:	xchg   esp,eax
  41f30a:	pop    ds
  41f30b:	stos   BYTE PTR es:[edi],al
  41f30c:	call   0x496f5cdd
  41f311:	mov    edi,0x16182a14
  41f316:	cld    
  41f317:	jno    0x41f2e1
  41f319:	out    dx,al
  41f31a:	xchg   ebp,eax
  41f31b:	inc    ecx
  41f31c:	push   ds
  41f31d:	test   DWORD PTR [edi-0x64],ecx
  41f320:	adc    al,0x7d
  41f322:	jne    0x41f339
  41f324:	nop
  41f325:	sub    BYTE PTR [edx-0x5a],0x43
  41f329:	xor    eax,0x91618230
  41f32e:	adc    DWORD PTR [edi],ebx
  41f330:	mov    eax,0xa8da42b
  41f335:	inc    edi
  41f336:	xor    eax,0x6c4452ad
  41f33b:	pop    ds
  41f33c:	test   al,0xd2
  41f33e:	xchg   esp,eax
  41f33f:	imul   ebp,DWORD PTR [edx-0x18],0x29
  41f343:	test   al,0x8c
  41f345:	cmp    al,0xfe
  41f347:	push   ecx
  41f348:	aad    0xf1
  41f34a:	(bad)  
  41f34b:	in     al,dx
  41f34c:	jno    0x41f2ec
  41f34e:	mov    ch,0x2c
  41f350:	jmp    0x41f38a
  41f352:	xlat   BYTE PTR ds:[ebx]
  41f353:	aad    0xc8
  41f355:	dec    esp
  41f356:	push   ebp
  41f357:	push   ecx
  41f358:	rcr    eax,0x50
  41f35b:	jae    0x41f39b
  41f35d:	mov    ch,0xe4
  41f35f:	fistp  DWORD PTR [edi]
  41f361:	xor    al,0x46
  41f363:	shl    dl,0xe7
  41f366:	in     eax,0x3c
  41f368:	jne    0x41f3ac
  41f36a:	and    edx,DWORD PTR [ebx]
  41f36c:	or     ebp,DWORD PTR [ecx-0x294be5a4]
  41f372:	jae    0x41f38c
  41f374:	sub    eax,0x77e96e55
  41f379:	call   0xd78f:0x6d55bbd9
  41f380:	fwait
  41f381:	mov    cl,0x97
  41f383:	call   0x777c:0x232a381
  41f38a:	sbb    BYTE PTR [eax],al
  41f38c:	xor    esi,ecx
  41f38e:	push   es
  41f38f:	rol    BYTE PTR [edx+0x3dc5f86e],1
  41f395:	adc    eax,0xd62449ff
  41f39a:	pop    esi
  41f39b:	std    
  41f39c:	mov    esi,0x6fce7df7
  41f3a1:	inc    esp
  41f3a2:	pushf  
  41f3a3:	popa   
  41f3a4:	pop    ebx
  41f3a5:	jmp    0xfeba:0x87e65127
  41f3ac:	xor    DWORD PTR [ebx],esp
  41f3ae:	add    DWORD PTR [edx+0x5d64c3aa],eax
  41f3b4:	imul   ebx,DWORD PTR [edi-0x4ab3025a],0x24b02f82
  41f3be:	lea    esp,[ebx+eiz*4+0x75b552f8]
  41f3c5:	addr16 jns 0x41f445
  41f3c8:	mov    ch,0xb8
  41f3ca:	dec    eax
  41f3cb:	jmp    0x8bc9:0x4ac1ce8
  41f3d2:	(bad)  
  41f3d3:	not    BYTE PTR [esi-0x51]
  41f3d6:	adc    BYTE PTR [esi],dl
  41f3d8:	cmp    esp,edi
  41f3da:	jnp    0x41f421
  41f3dc:	inc    ecx
  41f3dd:	cdq    
  41f3de:	xchg   BYTE PTR [ebp-0x88cc62a],al
  41f3e4:	repnz sub al,0xfb
  41f3e7:	ins    DWORD PTR es:[edi],dx
  41f3e8:	mov    edi,0x90c40373
  41f3ed:	mov    dl,0xcb
  41f3ef:	pop    ecx
  41f3f0:	pop    ecx
  41f3f1:	inc    esp
  41f3f2:	sub    DWORD PTR [ebx-0x7df843ec],eax
  41f3f8:	xor    al,0x2b
  41f3fa:	jmp    0xb2fe4c10
  41f3ff:	fsubr  DWORD PTR [ecx]
  41f401:	xlat   BYTE PTR ds:[ebx]
  41f402:	cmovp  ebx,DWORD PTR [ecx-0x769927a0]
  41f409:	push   eax
  41f40a:	mov    ebx,0xe0bf2ef9
  41f40f:	cmp    DWORD PTR [ebx],edx
  41f411:	xchg   esp,eax
  41f412:	add    esi,edi
  41f414:	xor    BYTE PTR [edx+ebx*2],dl
  41f417:	mov    ch,ah
  41f419:	cmp    esp,DWORD PTR [ebx+0x2f]
  41f41c:	pop    es
  41f41d:	add    eax,0xbfd5ca7
  41f422:	mov    WORD PTR [ebx+0x726dbf2c],ds
  41f428:	dec    esp
  41f429:	inc    ecx
  41f42a:	mov    ch,0xd8
  41f42c:	add    al,0x73
  41f42e:	mov    ch,0x3d
  41f430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f431:	and    al,0x45
  41f433:	or     edx,DWORD PTR [ecx+0x38c02bc7]
  41f439:	push   es
  41f43a:	popf   
  41f43b:	lea    ecx,[ebx]
  41f43d:	xor    eax,0xa87a2564
  41f442:	cmp    DWORD PTR [edi],ebx
  41f444:	fimul  WORD PTR [ebx+0x37]
  41f447:	test   DWORD PTR [edx],edx
  41f449:	int    0x6f
  41f44b:	add    edi,esp
  41f44d:	push   ebx
  41f44e:	cmc    
  41f44f:	fistp  DWORD PTR [ebx]
  41f451:	sub    al,0x1
  41f453:	mov    BYTE PTR ds:0xd4c3fb2b,dl
  41f459:	ds mov al,0xe9
  41f45c:	adc    eax,0xc1300d09
  41f461:	adc    edx,DWORD PTR [ebx+0x1b9d0ea1]
  41f467:	pop    ss
  41f468:	lods   al,BYTE PTR ds:[esi]
  41f469:	fmul   DWORD PTR ds:0xa227466f
  41f46f:	cmp    al,0xaa
  41f471:	push   esp
  41f472:	idiv   BYTE PTR [ecx]
  41f474:	(bad)  
  41f475:	pushf  
  41f476:	sar    DWORD PTR ds:0x13ac038,1
  41f47c:	aam    0x34
  41f47e:	inc    edx
  41f47f:	mov    esp,0x440f9881
  41f484:	sti    
  41f485:	(bad)  
  41f486:	cmp    bl,BYTE PTR [ebx-0x1e02332c]
  41f48c:	add    eax,0xb681edc8
  41f491:	add    ecx,ebp
  41f493:	iret   
  41f494:	outs   dx,BYTE PTR ds:[esi]
  41f495:	push   0x28
  41f497:	je     0x41f434
  41f499:	pop    ds
  41f49a:	jns    0x41f448
  41f49c:	and    al,0xc8
  41f49e:	mov    ds:0x23cb140e,al
  41f4a3:	ret    
  41f4a4:	mov    edi,DWORD PTR [edx+edi*4+0x528f7dda]
  41f4ab:	out    dx,al
  41f4ac:	add    eax,0x70446a9a
  41f4b1:	loope  0x41f47f
  41f4b3:	sbb    BYTE PTR [eax+0x5f],al
  41f4b6:	mov    ecx,0x6a2e1d6e
  41f4bb:	cmp    al,0x63
  41f4bd:	push   es
  41f4be:	popa   
  41f4bf:	mov    esp,0xad0a3b6e
  41f4c4:	ja     0x41f452
  41f4c6:	or     DWORD PTR [eax+ebx*2],0x10
  41f4ca:	jno    0x41f52f
  41f4cc:	sbb    DWORD PTR [ebx],ecx
  41f4ce:	adc    al,0xb9
  41f4d0:	ss cmp eax,0x3e6c310
  41f4d6:	scas   al,BYTE PTR es:[edi]
  41f4d7:	(bad)  
  41f4d8:	jns    0x41f491
  41f4da:	dec    edx
  41f4db:	add    BYTE PTR ds:0x11be23cb,bh
  41f4e1:	pop    es
  41f4e2:	je     0x41f558
  41f4e4:	cdq    
  41f4e5:	sbb    BYTE PTR [eax-0x70],0x4e
  41f4e9:	inc    eax
  41f4ea:	scas   al,BYTE PTR es:[edi]
  41f4eb:	cmp    ah,BYTE PTR [esi-0x1d96ebcd]
  41f4f1:	mov    ah,0x50
  41f4f3:	inc    edx
  41f4f4:	in     al,0xf6
  41f4f6:	(bad)  
  41f4f7:	in     al,dx
  41f4f8:	dec    ebp
  41f4f9:	jle    0x41f4ca
  41f4fb:	iret   
  41f4fc:	pop    es
  41f4fd:	mov    edx,0x7c00194e
  41f502:	cmp    BYTE PTR [ecx+edi*4+0x7c],al
  41f506:	scas   eax,DWORD PTR es:[edi]
  41f507:	cmp    edx,DWORD PTR [edi-0x16]
  41f50a:	rcr    DWORD PTR [edi+0x35ed15cb],cl
  41f510:	into   
  41f511:	(bad)  
  41f512:	shr    BYTE PTR [ecx+0x18774f1],1
  41f518:	xor    DWORD PTR [ebp-0x3c131120],0xfcb4fa1c
  41f522:	gs push ebp
  41f524:	adc    BYTE PTR [eax+0x2c],cl
  41f527:	mov    dl,0x3f
  41f529:	test   BYTE PTR [ebp+0x158a285e],dh
  41f52f:	fwait
  41f530:	xor    dl,cl
  41f532:	jnp    0x41f4f1
  41f534:	aam    0x85
  41f536:	or     BYTE PTR [eax-0x5aa252e9],bh
  41f53c:	sbb    eax,0xb46d464b
  41f541:	cmp    al,0x4c
  41f543:	mov    ebp,0x5318682d
  41f548:	shl    DWORD PTR [edi+eax*2],cl
  41f54b:	and    dh,0x3b
  41f54e:	in     eax,0x9d
  41f550:	rcr    BYTE PTR [edi],1
  41f552:	push   ecx
  41f553:	mov    ecx,0xbdc61faf
  41f558:	inc    esp
  41f559:	mov    esp,0xcc597721
  41f55e:	jnp    0x41f526
  41f560:	push   ecx
  41f561:	adc    ecx,DWORD PTR [eax]
  41f563:	cdq    
  41f564:	cli    
  41f565:	leave  
  41f566:	and    ecx,DWORD PTR [edi+0x10f0776b]
  41f56c:	xor    DWORD PTR [ecx],esi
  41f56e:	ret    0x7971
  41f571:	dec    esp
  41f572:	pop    edi
  41f573:	push   esi
  41f574:	lea    ecx,ds:0xcb6440bb
  41f57a:	pop    eax
  41f57b:	es push eax
  41f57e:	in     al,dx
  41f57f:	jnp    0x41f51a
  41f581:	shl    ch,cl
  41f583:	test   al,0x4e
  41f585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f586:	xchg   ebx,eax
  41f587:	mov    eax,0x435145f9
  41f58c:	ds xchg edi,eax
  41f58e:	and    BYTE PTR [ebx],al
  41f590:	imul   esp,DWORD PTR [eax],0x6380f91
  41f596:	mov    al,0x18
  41f598:	push   esi
  41f599:	data16 (bad) 
  41f59b:	jmp    0xc0716de4
  41f5a0:	cli    
  41f5a1:	pop    es
  41f5a2:	pop    DWORD PTR [esi+ebp*8]
  41f5a5:	(bad)  
  41f5a7:	popf   
  41f5a8:	retf   0xb395
  41f5ab:	inc    edx
  41f5ac:	mov    cl,0x4f
  41f5ae:	arpl   WORD PTR [ecx+0x46],bx
  41f5b1:	push   ds
  41f5b2:	xchg   BYTE PTR [eax],cl
  41f5b4:	add    al,0x9d
  41f5b6:	(bad)  
  41f5b7:	sbb    ax,0xdf61
  41f5bb:	cdq    
  41f5bc:	clc    
  41f5bd:	mov    es,WORD PTR [ecx+edx*1]
  41f5c0:	adc    BYTE PTR [esi],dh
  41f5c2:	mov    ds:0xc1c571ef,eax
  41f5c7:	dec    esp
  41f5c8:	test   edx,ebp
  41f5ca:	jmp    0xc66d:0x8fd26f7a
  41f5d1:	sub    eax,0x5a034e62
  41f5d6:	mov    ch,0x84
  41f5d8:	ds dec ecx
  41f5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5db:	dec    edi
  41f5dc:	mov    ecx,DWORD PTR [ebp+0x5d]
  41f5df:	cdq    
  41f5e0:	mov    ch,0xdf
  41f5e2:	mov    ch,0xb5
  41f5e4:	cmp    al,0xd9
  41f5e6:	shl    DWORD PTR [edx+0x38cda682],1
  41f5ec:	sbb    eax,DWORD PTR ds:0xf4996e7e
  41f5f2:	push   0x30
  41f5f4:	xchg   edi,eax
  41f5f5:	mov    ebp,0xb114e56d
  41f5fa:	sbb    eax,0xf728b297
  41f5ff:	aad    0xa4
  41f601:	cld    
  41f602:	pop    ebx
  41f603:	popa   
  41f604:	adc    dl,bh
  41f606:	lods   eax,DWORD PTR ds:[esi]
  41f607:	maskmovq mm5,(bad)
  41f608:	imul   DWORD PTR [edx]
  41f60a:	(bad)  
  41f60b:	das    
  41f60c:	repnz push eax
  41f60e:	add    edx,esp
  41f610:	push   edi
  41f611:	adc    al,0xab
  41f614:	(bad)  
  41f615:	dec    ebx
  41f617:	pop    esi
  41f618:	ret    0x585a
  41f61b:	call   DWORD PTR [edi]
  41f61d:	pop    esi
  41f61e:	jecxz  0x41f5f2
  41f620:	dec    edx
  41f621:	mov    dh,0xf6
  41f623:	xor    bh,0x68
  41f626:	push   edi
  41f627:	jmp    0xa58c676d
  41f62c:	sub    ebx,DWORD PTR [ebp-0x7b84b32a]
  41f632:	add    ebp,esi
  41f634:	mov    ebp,0x8e68cc8b
  41f639:	inc    eax
  41f63a:	jbe    0x41f60c
  41f63c:	ja     0x41f5da
  41f63e:	sub    cl,0x3d
  41f641:	push   0xf11bb477
  41f646:	push   ds
  41f647:	sbb    eax,0x992f92f5
  41f64c:	mov    dl,0xcc
  41f64e:	jl     0x41f608
  41f650:	jmp    0x9ce1:0xeb8eeef0
  41f657:	pop    ss
  41f658:	sbb    eax,0xe1ba48
  41f65d:	cmp    BYTE PTR [esi+0x2a332985],bl
  41f663:	test   al,0x9c
  41f665:	mov    BYTE PTR [eax+0x33],dl
  41f668:	mov    al,ds:0xfa61b834
  41f66d:	mov    ebx,esi
  41f66f:	and    DWORD PTR [edx+0x1b],esi
  41f672:	xchg   edx,eax
  41f673:	cmp    DWORD PTR [esi+0x39],ebp
  41f676:	jb     0x41f6bd
  41f678:	jecxz  0x41f6a4
  41f67a:	ret    0x1806
  41f67d:	mov    ecx,0xd3504e74
  41f682:	ins    BYTE PTR es:[edi],dx
  41f683:	pop    esi
  41f684:	mov    bl,0x2f
  41f686:	mov    bh,BYTE PTR es:[ebp+0x71]
  41f68a:	xchg   edx,eax
  41f68b:	or     BYTE PTR [esp+ebp*2+0x6de657df],al
  41f692:	mov    edi,0x80ace5f0
  41f697:	imul   BYTE PTR [ebx-0x8]
  41f69a:	mov    ebp,0xebbd6fb3
  41f69f:	imul   esi,eax,0x4a7029bf
  41f6a5:	dec    ebp
  41f6a6:	sahf   
  41f6a7:	shl    BYTE PTR [esi],0xf
  41f6aa:	into   
  41f6ab:	adc    BYTE PTR [esi+eax*8+0x3464f3c2],al
  41f6b2:	add    esi,DWORD PTR [eax+0x5b]
  41f6b5:	jg     0x41f652
  41f6b7:	out    0x5b,al
  41f6b9:	dec    eax
  41f6ba:	cmp    ecx,esi
  41f6bc:	inc    ecx
  41f6bd:	sbb    BYTE PTR [esi-0x69],ah
  41f6c0:	lds    eax,FWORD PTR [eax+0x5af05746]
  41f6c6:	outs   dx,DWORD PTR ds:[esi]
  41f6c7:	mov    ebp,0xaf6a5b15
  41f6cc:	enter  0x3b73,0xb6
  41f6d0:	call   0x9a49ec16
  41f6d5:	xchg   esp,eax
  41f6d6:	sub    ecx,0xde54492a
  41f6dc:	adc    BYTE PTR [edi-0x21],ch
  41f6df:	add    ecx,edx
  41f6e1:	imul   sp,WORD PTR [eax+ebp*4],0x45d8
  41f6e7:	in     al,dx
  41f6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e9:	and    eax,0xa4c855f4
  41f6ee:	in     al,0x52
  41f6f0:	fld    QWORD PTR [edx-0x6de91aa]
  41f6f6:	mov    bl,0xdb
  41f6f8:	xchg   ebx,eax
  41f6f9:	out    dx,eax
  41f6fa:	jecxz  0x41f74c
  41f6fc:	dec    ebx
  41f6fd:	sti    
  41f6fe:	(bad)  
  41f700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f701:	lahf   
  41f702:	pop    esi
  41f703:	ja     0x41f71d
  41f705:	rol    DWORD PTR [ecx],1
  41f707:	arpl   dx,ax
  41f709:	imul   BYTE PTR [edi]
  41f70b:	ror    BYTE PTR [esi+0x4e],0x97
  41f70f:	aas    
  41f710:	shl    DWORD PTR [edi+ebp*1+0x7d],1
  41f714:	rcr    BYTE PTR [ecx+edi*4+0x2f],cl
  41f718:	lock (bad) 
  41f71a:	cmp    BYTE PTR [edx+edx*2-0xbd486a2],ch
  41f721:	mov    edx,0x97aca04e
  41f726:	or     al,0xf3
  41f728:	pop    eax
  41f729:	lea    esi,[esi]
  41f72b:	aam    0x27
  41f72d:	neg    DWORD PTR [ebp+0x1efb2b28]
  41f733:	cmp    dl,cl
  41f735:	jbe    0x41f783
  41f737:	cs jne 0x41f716
  41f73a:	sbb    edi,esp
  41f73c:	repz jno 0x41f720
  41f73f:	push   ebx
  41f740:	and    al,0x50
  41f742:	lea    ebp,[esi]
  41f744:	mov    edx,0xc62f5eef
  41f749:	sbb    cl,cl
  41f74b:	pop    ebx
  41f74c:	cs sti 
  41f74e:	pushf  
  41f74f:	bound  edx,QWORD PTR [edi+0x2f]
  41f752:	(bad)  
  41f753:	int    0x96
  41f755:	push   es
  41f756:	dec    edx
  41f757:	cmp    al,0x8e
  41f759:	js     0x41f778
  41f75b:	mov    ds:0x7bab3602,al
  41f760:	add    eax,0x685793f7
  41f765:	outs   dx,DWORD PTR ds:[esi]
  41f766:	push   0xf9350b9d
  41f76b:	(bad)  
  41f76d:	add    DWORD PTR [ebx-0x43abeb3d],edi
  41f773:	clc    
  41f774:	ds or  al,0xf3
  41f777:	xor    esi,DWORD PTR [ecx]
  41f779:	add    bh,BYTE PTR [ebp+ecx*1+0x32c2ef18]
  41f780:	shr    BYTE PTR [ebp-0x14f4d036],cl
  41f786:	inc    edx
  41f787:	ja     0x41f7ed
  41f789:	jg     0x41f7a8
  41f78b:	stos   DWORD PTR es:[edi],eax
  41f78c:	fiadd  DWORD PTR [ecx-0xf7288f7]
  41f792:	jmp    0xbe498a07
  41f797:	push   es
  41f798:	in     al,0x82
  41f79a:	dec    ebp
  41f79b:	out    0xeb,eax
  41f79d:	fldenv [esi]
  41f79f:	retf   
  41f7a0:	add    BYTE PTR [eax+0x12],cl
  41f7a3:	mov    ds:0x8a97fcfd,eax
  41f7a8:	mov    dl,0x7a
  41f7aa:	xor    eax,edx
  41f7ac:	dec    esi
  41f7ad:	inc    esi
  41f7ae:	cmp    ch,BYTE PTR [ecx]
  41f7b0:	jecxz  0x41f7a2
  41f7b2:	add    ecx,esi
  41f7b4:	and    ebx,DWORD PTR [ebp-0x746c5c17]
  41f7ba:	mov    ebx,DWORD PTR [esi]
  41f7bc:	jge    0x41f746
  41f7be:	pop    ebp
  41f7bf:	jmp    0x41f7d4
  41f7c1:	push   esi
  41f7c2:	unpckhps xmm3,xmm1
  41f7c5:	pusha  
  41f7c6:	inc    eax
  41f7c7:	std    
  41f7c8:	inc    BYTE PTR [ecx-0xd]
  41f7cb:	je     0x41f778
  41f7cd:	mov    ds:0x3f0ca3b9,eax
  41f7d2:	das    
  41f7d3:	scas   eax,DWORD PTR es:[edi]
  41f7d4:	outs   dx,BYTE PTR ds:[esi]
  41f7d5:	std    
  41f7d6:	in     eax,0x20
  41f7d8:	arpl   WORD PTR [esp+ecx*4-0x61b7d274],cx
  41f7df:	dec    edi
  41f7e0:	add    al,0x35
  41f7e2:	imul   ebp,DWORD PTR gs:[ebx+0x74],0x72
  41f7e7:	in     al,0x53
  41f7e9:	adc    eax,0x5fac5bc9
  41f7ee:	xor    eax,0x216a1d44
  41f7f3:	dec    ebp
  41f7f4:	test   DWORD PTR [eax-0x41ca2e89],esi
  41f7fa:	mov    al,0x39
  41f7fc:	cmp    al,0x17
  41f7fe:	cmp    al,BYTE PTR [ebx+esi*2+0x7f]
  41f802:	stos   BYTE PTR es:[edi],al
  41f803:	stos   BYTE PTR es:[edi],al
  41f804:	cmp    BYTE PTR [ebx],dl
  41f806:	icebp  
  41f807:	fstp   QWORD PTR [edi+ecx*4]
  41f80a:	repz and esi,eax
  41f80d:	int    0x45
  41f80f:	imul   ecx,ebx,0xffffff92
  41f812:	pop    ebx
  41f813:	cmp    ebp,esp
  41f815:	dec    ecx
  41f816:	sbb    al,0x5c
  41f818:	dec    esp
  41f819:	aam    0xff
  41f81b:	sbb    eax,0x1922bffa
  41f820:	mov    WORD PTR [eax+ebp*8+0x23d29745],gs
  41f827:	push   edx
  41f828:	jg     0x41f83b
  41f82a:	imul   esi,DWORD PTR [esp+ebx*8],0x1031dacd
  41f831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f832:	pop    es
  41f833:	call   0x14f9c69e
  41f838:	inc    edi
  41f839:	mov    cl,0xd7
  41f83b:	xchg   DWORD PTR cs:[edx+ebx*1-0x37d7b8a8],edx
  41f843:	repz mov edi,edi
  41f846:	jmp    0x41f87b
  41f848:	sub    BYTE PTR [ebx+edx*2-0x41092d29],dl
  41f84f:	in     al,0xb7
  41f851:	jbe    0x41f7e1
  41f853:	mov    bl,0xcd
  41f855:	popf   
  41f856:	xor    DWORD PTR [ebx-0xd],0x58d791a3
  41f85d:	mov    esi,0xdedadb30
  41f862:	icebp  
  41f863:	inc    ecx
  41f864:	aam    0xfb
  41f866:	dec    edi
  41f867:	or     eax,0x9e052a56
  41f86c:	push   ebp
  41f86d:	sub    BYTE PTR [edx],ch
  41f86f:	int    0x3
  41f871:	test   DWORD PTR [edi-0x163e7970],ecx
  41f877:	test   al,0x1
  41f879:	stos   DWORD PTR es:[edi],eax
  41f87a:	call   0xf547e893
  41f87f:	ds (bad) 
  41f881:	xor    DWORD PTR [edx+0x20],ebp
  41f884:	pop    ebp
  41f885:	add    eax,0xa3982547
  41f88a:	cmp    ebp,ecx
  41f88c:	or     eax,edx
  41f88e:	pusha  
  41f88f:	xor    ecx,DWORD PTR [edi+0x5e]
  41f892:	mov    bh,0x62
  41f894:	mov    eax,0xba32f4c2
  41f899:	popf   
  41f89a:	push   ds
  41f89b:	les    ebx,FWORD PTR [ebp-0x2fa78827]
  41f8a1:	push   cs
  41f8a2:	jne    0x41f88f
  41f8a4:	ret    0xb790
  41f8a7:	pop    es
  41f8a8:	sbb    dl,cl
  41f8aa:	adc    BYTE PTR [esi],bl
  41f8ac:	push   ds
  41f8ad:	les    esi,FWORD PTR ds:0xf0688d02
  41f8b3:	push   ecx
  41f8b4:	mov    bh,BYTE PTR [ecx]
  41f8b6:	cwde   
  41f8b7:	xor    al,0x39
  41f8b9:	pop    eax
  41f8ba:	xor    ecx,esp
  41f8bc:	dec    ebx
  41f8bd:	sub    BYTE PTR [ebx+0x24],ch
  41f8c0:	jno    0x41f8ec
  41f8c2:	add    eax,0x26047018
  41f8c7:	icebp  
  41f8c8:	pop    eax
  41f8c9:	or     cl,bl
  41f8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8cc:	jae    0x41f943
  41f8ce:	dec    esp
  41f8cf:	jge    0x41f931
  41f8d1:	pop    esp
  41f8d2:	(bad)  
  41f8d3:	mov    edi,DWORD PTR [eax]
  41f8d5:	mov    ds:0xeb573b2a,eax
  41f8da:	les    ecx,FWORD PTR [ebx]
  41f8dc:	and    eax,0xd01cf4cc
  41f8e1:	inc    esi
  41f8e2:	dec    esp
  41f8e3:	dec    edx
  41f8e4:	dec    ebp
  41f8e5:	repz aad 0x95
  41f8e8:	sub    DWORD PTR [esi+0x14],0x555f83c9
  41f8ef:	cmp    ebx,ebx
  41f8f1:	mov    fs,edx
  41f8f3:	add    al,BYTE PTR [ebx-0x7b]
  41f8f6:	xor    ecx,DWORD PTR [ecx-0x66]
  41f8f9:	push   ebx
  41f8fa:	shl    al,0x51
  41f8fd:	daa    
  41f8fe:	in     al,dx
  41f8ff:	jns    0x41f8ad
  41f901:	aam    0x33
  41f903:	pop    ss
  41f904:	retf   0x78b3
  41f907:	repz clc 
  41f909:	xor    bh,ch
  41f90b:	dec    ecx
  41f90c:	arpl   WORD PTR [eax+edx*4-0xc],si
  41f910:	push   eax
  41f911:	out    0x9f,al
  41f913:	sub    ah,bl
  41f915:	popa   
  41f916:	pop    ecx
  41f917:	sahf   
  41f918:	sub    bl,BYTE PTR [ecx+ecx*4]
  41f91b:	push   edx
  41f91c:	enter  0x9c94,0x3a
  41f920:	fcom   DWORD PTR [esi+0x1f70532]
  41f926:	cdq    
  41f927:	mov    WORD PTR gs:[ecx-0x75],?
  41f92b:	pop    ss
  41f92c:	sub    al,0x34
  41f92e:	pop    esp
  41f92f:	sub    al,0xc4
  41f931:	stos   DWORD PTR es:[edi],eax
  41f932:	rol    DWORD PTR [eax-0x2f],1
  41f935:	cld    
  41f936:	sub    edi,ecx
  41f938:	cdq    
  41f939:	or     edi,ebx
  41f93b:	mov    eax,ds:0x344ec25f
  41f940:	sub    DWORD PTR [esi],ebp
  41f942:	imul   ecx,DWORD PTR [esi+0x74],0x63e182a8
  41f949:	cwde   
  41f94a:	xor    eax,0x4fb2fe3f
  41f94f:	mov    ah,0x5f
  41f951:	or     eax,0xa30d7edb
  41f956:	xor    al,0x9a
  41f958:	adc    al,0xdc
  41f95a:	(bad)  
  41f95c:	fisub  WORD PTR [esi-0x6ecdf7d8]
  41f962:	xor    DWORD PTR [edx],edx
  41f964:	imul   edi,DWORD PTR [edi],0xffffff89
  41f967:	dec    edx
  41f968:	cmp    DWORD PTR ds:0xe9b72a89,edi
  41f96e:	xchg   DWORD PTR [esp+ebp*8],edx
  41f971:	jo     0x41f999
  41f973:	ss jg  0x41f914
  41f976:	pop    ss
  41f977:	sub    DWORD PTR [esp+ebp*4+0x5e],0xffffffce
  41f97c:	(bad)  
  41f97d:	das    
  41f97e:	inc    ebp
  41f97f:	pop    esp
  41f980:	and    DWORD PTR [eax+0x25],eax
  41f983:	push   ss
  41f984:	xor    DWORD PTR [edx],ebx
  41f986:	mov    bh,BYTE PTR [edx-0x17]
  41f989:	push   0xfffffffe
  41f98b:	push   DWORD PTR [ecx+0x42768121]
  41f991:	cld    
  41f992:	retf   
  41f993:	push   ss
  41f994:	sti    
  41f995:	shl    DWORD PTR [edx],cl
  41f997:	punpckhwd mm7,mm2
  41f99a:	icebp  
  41f99b:	mov    al,0x3b
  41f99d:	ret    
  41f99e:	xchg   edx,eax
  41f99f:	or     ah,BYTE PTR [edi+0x48afe4fc]
  41f9a5:	shl    ebx,cl
  41f9a7:	sbb    eax,0x8ad231b7
  41f9ac:	test   DWORD PTR [eax],edx
  41f9ae:	jmp    0x41f98a
  41f9b0:	push   ss
  41f9b1:	test   DWORD PTR [ecx+eax*1+0x3cb4c182],edi
  41f9b8:	mov    esp,0x3194fc69
  41f9bd:	repnz inc edx
  41f9bf:	das    
  41f9c0:	fdivr  QWORD PTR [ebp+ebx*2-0xf5e4e76]
  41f9c7:	or     ebp,edi
  41f9c9:	inc    ebx
  41f9ca:	jle    0x41f95c
  41f9cc:	xchg   edx,eax
  41f9cd:	mov    bh,0x16
  41f9cf:	outs   dx,DWORD PTR ds:[esi]
  41f9d0:	ror    DWORD PTR [ebx],1
  41f9d2:	pop    ss
  41f9d3:	add    DWORD PTR [esi+edi*2-0x3f],edi
  41f9d7:	test   DWORD PTR [ecx+0xf54543c],ebp
  41f9dd:	popf   
  41f9de:	xor    BYTE PTR fs:[esi],cl
  41f9e1:	std    
  41f9e2:	cwde   
  41f9e3:	push   ebx
  41f9e4:	and    edx,DWORD PTR [esi-0x62c02d98]
  41f9ea:	rep lods eax,DWORD PTR ds:[esi]
  41f9ec:	push   edi
  41f9ed:	adc    al,0x5e
  41f9ef:	std    
  41f9f0:	sbb    al,0x89
  41f9f2:	mov    ebp,0xa6d6b643
  41f9f7:	jecxz  0x41fa20
  41f9f9:	and    eax,0xd89d6f8b
  41f9fe:	adc    ebp,eax
  41fa00:	mov    al,0x28
  41fa02:	push   esi
  41fa03:	push   ecx
  41fa04:	push   edx
  41fa05:	ror    DWORD PTR [ecx-0x5618fc6],0x28
  41fa0c:	test   BYTE PTR [edx+0x7b75c09f],dl
  41fa12:	lea    ebx,[ecx-0x7106471f]
  41fa18:	ret    0x5e2e
  41fa1b:	ja     0x41f9a7
  41fa1d:	(bad)  
  41fa1e:	jae    0x41fa7a
  41fa20:	cmp    bl,BYTE PTR [edx]
  41fa22:	rcr    BYTE PTR [esp+edi*4-0x4b],0xc9
  41fa27:	or     ecx,esp
  41fa29:	sub    BYTE PTR [edi+0x368bcb08],0xf9
  41fa30:	aad    0x6b
  41fa32:	xchg   esi,eax
  41fa33:	mov    dh,0xab
  41fa35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa36:	outs   dx,BYTE PTR ds:[esi]
  41fa37:	ins    DWORD PTR es:[edi],dx
  41fa38:	jae    0x41f9eb
  41fa3a:	or     al,0xea
  41fa3c:	cli    
  41fa3d:	or     al,0xbe
  41fa3f:	sahf   
  41fa40:	add    bl,BYTE PTR [eax+0x1e]
  41fa43:	loop   0x41fa53
  41fa45:	inc    BYTE PTR [ebx]
  41fa47:	ss jl  0x41fa9f
  41fa4a:	sbb    ecx,DWORD PTR [edi+0x32]
  41fa4d:	lahf   
  41fa4e:	mov    dh,0xff
  41fa50:	xchg   DWORD PTR [eax+0x4],edi
  41fa53:	pop    esi
  41fa54:	mov    al,ds:0xad641a6d
  41fa59:	dec    ebp
  41fa5a:	ja     0x41f9eb
  41fa5c:	ret    
  41fa5d:	pop    ebp
  41fa5e:	dec    esp
  41fa5f:	mov    eax,0x976f2d75
  41fa64:	lock int 0xd
  41fa67:	out    dx,eax
  41fa68:	rcr    DWORD PTR [eax-0x716e0b6a],1
  41fa6e:	mov    ah,BYTE PTR cs:[edi+0x7]
  41fa72:	dec    eax
  41fa73:	add    eax,eax
  41fa75:	hlt    
  41fa76:	inc    ebp
  41fa77:	cmp    ebp,esi
  41fa79:	or     al,BYTE PTR [edx]
  41fa7b:	jae    0x41fa30
  41fa7d:	push   0xffffff89
  41fa7f:	stos   BYTE PTR es:[edi],al
  41fa80:	jmp    0x41fa26
  41fa82:	xor    bl,BYTE PTR [ebx-0x75]
  41fa85:	jge    0x41faef
  41fa87:	xchg   ecx,eax
  41fa88:	or     al,0x24
  41fa8a:	addr16 daa 
  41fa8c:	cmp    DWORD PTR [ebx-0x79beada0],0xfffffff2
  41fa93:	fcmovnbe st,st(7)
  41fa95:	lods   al,BYTE PTR ds:[esi]
  41fa96:	ret    
  41fa97:	adc    dh,cl
  41fa99:	stos   BYTE PTR es:[edi],al
  41fa9a:	rcr    ebx,1
  41fa9c:	push   edx
  41fa9d:	inc    esp
  41fa9e:	jmp    DWORD PTR [ebx+0x5674451e]
  41faa4:	xchg   esp,eax
  41faa5:	aas    
  41faa6:	jmp    0x41fab4
  41faa8:	repnz test DWORD PTR [ecx],esi
  41faab:	sbb    eax,0x255a9953
  41fab0:	cld    
  41fab1:	sub    BYTE PTR [ebp-0xab97821],dl
  41fab7:	nop
  41fab8:	inc    eax
  41fab9:	fs jbe 0x41fa66
  41fabc:	lds    edx,FWORD PTR [edx+0x790da555]
  41fac2:	and    al,0xaf
  41fac4:	and    ebp,DWORD PTR [ecx+0x38]
  41fac7:	inc    edx
  41fac8:	fcomp  QWORD PTR [edx-0x1b]
  41facb:	mov    DWORD PTR [esi],eax
  41facd:	dec    ecx
  41face:	fst    QWORD PTR [eax+ecx*1-0x32791ae4]
  41fad5:	call   0xf8e2e329
  41fada:	sbb    edx,DWORD PTR [edi]
  41fadc:	jge    0x41fa7f
  41fade:	pusha  
  41fadf:	cmp    al,0x13
  41fae1:	xor    eax,0x4edeff99
  41fae6:	mov    cl,0x12
  41fae8:	mov    ds:0x3564c61,al
  41faed:	and    al,0x21
  41faef:	rol    BYTE PTR [esi*4-0x519a7f07],0xed
  41faf7:	data16 int 0x3e
  41fafa:	fwait
  41fafb:	ja     0x41fa8f
  41fafd:	data16 sti 
  41faff:	and    BYTE PTR [esi],bl
  41fb01:	retf   0x4e71
  41fb04:	in     al,dx
  41fb05:	mov    eax,0x234ac874
  41fb0a:	in     eax,dx
  41fb0b:	aam    0x85
  41fb0d:	fs enter 0xe3df,0x2c
  41fb12:	lods   eax,DWORD PTR ds:[esi]
  41fb13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb14:	xsavec ds:[eax+0x133a6391]
  41fb1c:	data16 cli 
  41fb1e:	push   0xd7f16e14
  41fb23:	mov    dl,0x6f
  41fb25:	push   esi
  41fb26:	mov    edx,0xed4dae22
  41fb2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb2c:	jne    0x41fae8
  41fb2e:	ret    
  41fb2f:	adc    ah,BYTE PTR [ecx]
  41fb31:	dec    ebp
  41fb32:	pop    esp
  41fb33:	or     al,0xb8
  41fb35:	add    DWORD PTR [edi-0x7643bcdd],0x2c
  41fb3c:	inc    eax
  41fb3d:	aam    0xd3
  41fb3f:	xor    BYTE PTR [esi],cl
  41fb41:	xor    DWORD PTR [ecx-0x3fe711c2],esi
  41fb47:	sub    ebp,ecx
  41fb49:	inc    esi
  41fb4a:	mov    ah,0x70
  41fb4c:	scas   eax,DWORD PTR es:[edi]
  41fb4d:	and    eax,0xcf6f528c
  41fb52:	jne    0x41fadc
  41fb54:	or     eax,0x8178874d
  41fb59:	(bad)  
  41fb5a:	outs   dx,DWORD PTR ds:[esi]
  41fb5b:	pop    esi
  41fb5c:	ins    BYTE PTR es:[edi],dx
  41fb5d:	or     eax,0xeba103e0
  41fb62:	fs lock nop
  41fb65:	lods   al,BYTE PTR ds:[esi]
  41fb66:	das    
  41fb67:	jecxz  0x41fbd9
  41fb69:	test   DWORD PTR [ecx+0x72],edi
  41fb6c:	pop    ebp
  41fb6d:	jbe    0x41fb49
  41fb6f:	sub    BYTE PTR [di],cl
  41fb72:	mov    dl,0xe
  41fb74:	mov    eax,ds:0xe2677d26
  41fb79:	xchg   BYTE PTR [ebx-0x64],bl
  41fb7c:	aam    0xe1
  41fb7e:	ss stos DWORD PTR es:[edi],eax
  41fb80:	jb     0x41fbd5
  41fb82:	inc    ebx
  41fb83:	pop    ss
  41fb84:	push   ebx
  41fb85:	loope  0x41fb53
  41fb87:	dec    ebx
  41fb88:	xor    dl,ah
  41fb8a:	aas    
  41fb8b:	fst    QWORD PTR [esp+edi*8+0x60692f4b]
  41fb92:	and    al,0xeb
  41fb94:	outs   dx,BYTE PTR ds:[esi]
  41fb95:	rcr    ah,1
  41fb97:	mov    esp,0x6684d916
  41fb9c:	ins    BYTE PTR es:[edi],dx
  41fb9d:	(bad)  [ebx]
  41fb9f:	(bad)  
  41fba0:	fimul  DWORD PTR [edi-0x105d2a2e]
  41fba6:	inc    ecx
  41fba7:	pop    edi
  41fba8:	pop    edi
  41fba9:	sub    BYTE PTR [esi-0x31d2be34],al
  41fbaf:	in     al,0x24
  41fbb1:	call   ebp
  41fbb3:	jno    0x41fb5a
  41fbb5:	jmp    0x1fcdbe4e
  41fbba:	xchg   esp,eax
  41fbbb:	jp     0x41fbc4
  41fbbd:	and    al,0x9d
  41fbbf:	into   
  41fbc0:	pop    esp
  41fbc1:	nop
  41fbc2:	xor    eax,0x9d1b460c
  41fbc7:	call   0x6572371f
  41fbcc:	ret    
  41fbcd:	cmp    eax,0xd3b1a80d
  41fbd2:	xchg   DWORD PTR [edi+0x58c487d7],edi
  41fbd8:	fld    QWORD PTR ds:0x1c658b7d
  41fbde:	mov    ecx,0x846010c8
  41fbe3:	loop   0x41fb73
  41fbe5:	xchg   esi,eax
  41fbe6:	cmp    ebx,0x54
  41fbe9:	dec    eax
  41fbea:	fld    QWORD PTR [eax]
  41fbec:	xlat   BYTE PTR ds:[ebx]
  41fbed:	stos   BYTE PTR es:[edi],al
  41fbee:	cmp    esi,DWORD PTR [ecx+0x36a5decd]
  41fbf4:	aas    
  41fbf5:	loopne 0x41fb9e
  41fbf7:	not    ebp
  41fbf9:	adc    ebp,DWORD PTR cs:[ecx]
  41fbfc:	fs shl esp,1
  41fbff:	inc    edi
  41fc00:	jnp    0x41fc2c
  41fc02:	imul   eax,DWORD PTR ds:0xb7cc9d94,0xeda545c9
  41fc0c:	lds    ebp,FWORD PTR [ecx+0x832f8d8]
  41fc12:	retf   
  41fc13:	mov    edx,0xce36dd2c
  41fc18:	xor    eax,0xaa175781
  41fc1d:	lods   al,BYTE PTR ds:[esi]
  41fc1e:	add    ch,BYTE PTR [ebx+0x73]
  41fc21:	(bad)  
  41fc22:	push   0x9abcbc8f
  41fc27:	or     ah,ch
  41fc29:	xor    al,cl
  41fc2b:	js     0x41fc27
  41fc2d:	ret    0x8e70
  41fc30:	bound  eax,QWORD PTR [edi-0x7f]
  41fc33:	pusha  
  41fc34:	in     eax,0xe9
  41fc36:	sub    DWORD PTR [ebx],esi
  41fc38:	test   al,0xdc
  41fc3a:	or     cl,0xb1
  41fc3d:	mov    ds:0x2beb5ce0,al
  41fc42:	sar    BYTE PTR [ecx],cl
  41fc44:	push   0x62
  41fc46:	sub    bl,ch
  41fc48:	inc    edi
  41fc49:	stos   DWORD PTR es:[edi],eax
  41fc4a:	les    edx,FWORD PTR [ebx+ebx*2]
  41fc4d:	xor    eax,0x6d152eef
  41fc52:	or     eax,0x694d603b
  41fc57:	call   0xacb4473a
  41fc5c:	shl    DWORD PTR [ecx-0x1b],0x2e
  41fc60:	in     al,dx
  41fc61:	adc    dl,dl
  41fc63:	mov    esi,0xa9be7088
  41fc68:	pop    edx
  41fc69:	loop   0x41fce4
  41fc6b:	jns    0x41fc0a
  41fc6d:	fisttp QWORD PTR [edi]
  41fc6f:	bnd call 0x4738e47
  41fc75:	out    dx,al
  41fc76:	adc    al,BYTE PTR [edx-0x3538ac9d]
  41fc7c:	push   ds
  41fc7d:	mov    ch,0xd8
  41fc7f:	jno    0x41fc8a
  41fc81:	cmp    ah,dl
  41fc83:	jecxz  0x41fc1e
  41fc85:	and    eax,0x3033600e
  41fc8a:	and    al,0x6a
  41fc8c:	cmp    dh,bh
  41fc8e:	or     eax,0xd0ab5939
  41fc93:	imul   esp,DWORD PTR [edi-0x7d38a1c2],0x17a7fac4
  41fc9d:	cmp    DWORD PTR [edx],ecx
  41fc9f:	pop    ebx
  41fca0:	sub    BYTE PTR [ecx],cl
  41fca2:	mov    edx,esp
  41fca4:	adc    edi,esp
  41fca6:	dec    DWORD PTR [eax-0x597497]
  41fcac:	lods   al,BYTE PTR ds:[esi]
  41fcad:	cli    
  41fcae:	int3   
  41fcaf:	lods   eax,DWORD PTR ds:[esi]
  41fcb1:	push   edi
  41fcb2:	jmp    0x41fc6c
  41fcb4:	add    ch,BYTE PTR [edi-0x4a]
  41fcb7:	jmp    0xa44:0x767bf72a
  41fcbe:	add    BYTE PTR [edx+0x57cfb29c],bl
  41fcc4:	dec    ecx
  41fcc5:	ffree  st(7)
  41fcc7:	pop    cx
  41fcc9:	ins    BYTE PTR es:[edi],dx
  41fcca:	pop    edi
  41fccb:	ins    DWORD PTR es:[edi],dx
  41fccc:	repnz xor BYTE PTR [ebp+0x35e70ad4],ah
  41fcd3:	or     al,BYTE PTR [esi+0x3893ac8a]
  41fcd9:	aad    0x1a
  41fcdb:	mov    dh,0x4a
  41fcdd:	inc    ecx
  41fcde:	jle    0x41fc6a
  41fce0:	test   DWORD PTR [esi],edx
  41fce2:	fwait
  41fce3:	or     DWORD PTR [edx+0x6a],edi
  41fce6:	inc    edx
  41fce7:	fcom   DWORD PTR [ebp+ecx*4+0x7b798ebb]
  41fcee:	xchg   edx,eax
  41fcef:	fstp   QWORD PTR [ebx-0x7e89766c]
  41fcf5:	mov    edx,0x5a899561
  41fcfa:	xor    ch,BYTE PTR fs:[ecx-0x55cf3b93]
  41fd01:	test   al,0x7f
  41fd03:	mov    eax,0xf792eb9e
  41fd08:	pop    es
  41fd09:	inc    edi
  41fd0a:	xchg   esp,eax
  41fd0b:	mov    edx,0x1174f193
  41fd10:	mov    ebp,DWORD PTR [ecx-0x41]
  41fd13:	ins    BYTE PTR es:[edi],dx
  41fd14:	retf   0x30cd
  41fd17:	sub    BYTE PTR [ebx+0x4a],ch
  41fd1a:	sub    DWORD PTR [eax+0x62c81752],ecx
  41fd20:	(bad)  
  41fd21:	popa   
  41fd22:	loopne 0x41fd7f
  41fd24:	outs   dx,DWORD PTR ds:[esi]
  41fd25:	cmp    DWORD PTR [eax],0x4ca36472
  41fd2b:	fs int3 
  41fd2d:	xlat   BYTE PTR ds:[ebx]
  41fd2e:	xchg   DWORD PTR [eax+0x3625f66c],edi
  41fd34:	sub    BYTE PTR [ecx+0x62],ch
  41fd37:	jg     0x41fd18
  41fd39:	sbb    BYTE PTR ds:0x2d0c16b2,dh
  41fd3f:	xchg   eax,eax
  41fd41:	call   0xb06d4031
  41fd46:	fdivp  st(3),st
  41fd48:	test   eax,0xf5ad0e47
  41fd4d:	push   ecx
  41fd4e:	or     esi,DWORD PTR [ecx]
  41fd50:	scas   al,BYTE PTR es:[edi]
  41fd51:	repz rcl DWORD PTR [edi-0x7b],cl
  41fd55:	pop    ebp
  41fd56:	int3   
  41fd57:	out    dx,eax
  41fd58:	scas   al,BYTE PTR es:[edi]
  41fd59:	pusha  
  41fd5a:	gs inc esi
  41fd5c:	push   eax
  41fd5d:	mov    ds:0x7fe01480,eax
  41fd62:	test   BYTE PTR [esi],0xca
  41fd65:	add    al,0x1c
  41fd67:	scas   al,BYTE PTR es:[edi]
  41fd68:	dec    ebp
  41fd69:	dec    esi
  41fd6a:	xchg   DWORD PTR [ecx-0x6c9bb4af],edx
  41fd70:	pop    edx
  41fd71:	mov    eax,0x1677a4c3
  41fd76:	cmp    eax,0xba0f73d0
  41fd7b:	lds    edx,FWORD PTR [ebx-0x6c]
  41fd7e:	xchg   esp,eax
  41fd7f:	sbb    cl,BYTE PTR [ebp-0x12]
  41fd82:	push   edx
  41fd83:	mov    edi,0x40fec6f4
  41fd88:	and    eax,0xe6ee10a2
  41fd8d:	jbe    0x41fd94
  41fd8f:	xor    BYTE PTR ds:0xe08d,dh
  41fd94:	js     0x41fd17
  41fd96:	or     DWORD PTR [ecx],esi
  41fd98:	xchg   edx,eax
  41fd99:	mov    ds:0xd660f5b3,al
  41fd9e:	add    bl,cl
  41fda0:	sub    eax,ecx
  41fda2:	lea    esp,[esi]
  41fda4:	(bad)  
  41fda5:	out    dx,al
  41fda6:	jns    0x41fdb8
  41fda8:	pop    edi
  41fda9:	ret    0x3188
  41fdac:	fist   WORD PTR [edx]
  41fdae:	push   cs
  41fdaf:	retf   
  41fdb0:	inc    ebp
  41fdb1:	bound  esp,QWORD PTR [edx+eiz*2-0x1fbb0b01]
  41fdb8:	inc    BYTE PTR [ebp+0x37]
  41fdbb:	or     BYTE PTR [edx],bl
  41fdbd:	mov    al,0x85
  41fdbf:	jb     0x41fe21
  41fdc1:	push   edx
  41fdc2:	pop    ecx
  41fdc3:	ss xchg ebx,eax
  41fdc5:	out    dx,eax
  41fdc6:	popa   
  41fdc7:	test   BYTE PTR [esi+0x5481d26d],al
  41fdcd:	xchg   esp,eax
  41fdce:	into   
  41fdcf:	jmp    0x41fd84
  41fdd1:	adc    BYTE PTR [ecx-0x45],0xa1
  41fdd5:	ins    DWORD PTR es:[edi],dx
  41fdd6:	adc    al,0xce
  41fdd8:	out    dx,al
  41fdd9:	xchg   edi,eax
  41fdda:	cld    
  41fddb:	dec    ecx
  41fddc:	ds add ah,0x32
  41fde0:	enter  0x31ff,0x45
  41fde4:	lea    eax,[eax]
  41fde6:	cli    
  41fde7:	mov    ebp,0x490f03bc
  41fdec:	cmp    DWORD PTR [eax-0x3f3ef29c],edx
  41fdf2:	imul   ecx,ebx,0x70
  41fdf5:	mov    dl,0x22
  41fdf7:	jnp    0x41fe4e
  41fdf9:	scas   al,BYTE PTR es:[edi]
  41fdfa:	dec    ebx
  41fdfb:	sar    dl,0x8e
  41fdfe:	push   ss
  41fdff:	inc    edx
  41fe00:	out    dx,al
  41fe01:	sbb    edi,DWORD PTR [ecx+0x14476acc]
  41fe07:	rol    DWORD PTR [ebx-0x6e],cl
  41fe0a:	retf   0x270e
  41fe0d:	popa   
  41fe0e:	sti    
  41fe0f:	ret    
  41fe10:	mov    edx,0xa3f36b95
  41fe15:	cmp    ax,0xae5c
  41fe19:	loop   0x41fde5
  41fe1b:	sbb    eax,0x7515323e
  41fe20:	mov    fs,WORD PTR [eax]
  41fe22:	pop    esi
  41fe23:	inc    ebx
  41fe24:	imul   BYTE PTR [esi]
  41fe26:	xor    al,0xf6
  41fe28:	gs mov esp,0x6106a650
  41fe2e:	push   ds
  41fe2f:	shl    DWORD PTR [esi-0x68],cl
  41fe32:	add    bl,BYTE PTR ds:0x70e6303b
  41fe38:	nop
  41fe39:	ret    
  41fe3a:	mov    ah,0xff
  41fe3c:	push   ds
  41fe3d:	mov    edi,0x1afa2f45
  41fe42:	nop
  41fe43:	or     BYTE PTR [ebx+0xd265108],ch
  41fe49:	rcl    BYTE PTR [ebp+ebx*1+0x28],cl
  41fe4d:	jmp    0x3c3d:0xd34a5293
  41fe54:	mov    bh,0xa9
  41fe56:	je     0x41fe4c
  41fe58:	mov    dl,0x40
  41fe5a:	adc    DWORD PTR [edi],ebp
  41fe5c:	jl     0x41fe19
  41fe5e:	sub    ebp,DWORD PTR [ebp+ebx*4-0x5e]
  41fe62:	inc    eax
  41fe63:	in     eax,0x83
  41fe65:	sub    BYTE PTR [edi],bh
  41fe67:	cmp    DWORD PTR [ebp+0x108533ab],ecx
  41fe6d:	xchg   edx,eax
  41fe6e:	adc    ebp,edx
  41fe70:	lahf   
  41fe71:	in     al,0xc3
  41fe73:	mov    ?,WORD PTR [ebp+0x1af29c8e]
  41fe79:	repnz aam 0xa0
  41fe7c:	dec    ebx
  41fe7d:	in     eax,dx
  41fe7e:	lea    eax,[ecx-0xb6ad83c]
  41fe84:	scas   al,BYTE PTR es:[edi]
  41fe85:	mov    bl,0xeb
  41fe87:	jmp    0xd7850b3b
  41fe8c:	mov    ds:0x934d50c9,eax
  41fe91:	sub    BYTE PTR [esi-0x44],dl
  41fe94:	push   ss
  41fe95:	jae    0x41ff00
  41fe97:	lea    eax,[eax-0x71]
  41fe9a:	jo     0x41fee5
  41fe9c:	jmp    0xa63998b5
  41fea1:	add    DWORD PTR [edi+edx*8+0x3be585d4],0xa00fb1e2
  41feac:	inc    esp
  41fead:	pop    eax
  41feae:	outs   dx,BYTE PTR ds:[esi]
  41feaf:	adc    al,0xb9
  41feb1:	fadd   QWORD PTR [edi]
  41feb3:	mov    ds:0xfaa55641,al
  41feb8:	sbb    eax,0x88240da8
  41febd:	inc    edi
  41febe:	sbb    dh,BYTE PTR [esi-0x45]
  41fec1:	add    eax,0x952b784b
  41fec6:	add    edx,edi
  41fec8:	ins    BYTE PTR es:[edi],dx
  41fec9:	mov    BYTE PTR [esi+edx*8+0x5d8f10e9],ah
  41fed0:	pop    ecx
  41fed1:	enter  0xa25a,0x59
  41fed5:	daa    
  41fed6:	ret    0xb408
  41fed9:	imul   esp,DWORD PTR [ebx],0x3a4dc565
  41fedf:	xor    edi,esp
  41fee1:	out    0x9,eax
  41fee3:	push   esi
  41fee4:	popf   
  41fee5:	mov    ch,0x50
  41fee7:	lods   eax,DWORD PTR ds:[esi]
  41fee8:	push   eax
  41fee9:	mov    ebx,0x52d5f25e
  41feee:	sub    esp,DWORD PTR [ebx]
  41fef0:	scas   eax,DWORD PTR es:[edi]
  41fef1:	test   BYTE PTR [ecx],ch
  41fef3:	push   ecx
  41fef4:	in     eax,dx
  41fef5:	pop    ebx
  41fef6:	sti    
  41fef7:	gs inc esi
  41fef9:	xchg   esi,eax
  41fefa:	imul   esp,DWORD PTR [eax],0xd316d35e
  41ff00:	dec    ebx
  41ff01:	enter  0x407c,0x1f
  41ff05:	cmp    DWORD PTR [esi],0xfffffff5
  41ff08:	sbb    si,si
  41ff0b:	(bad)  
  41ff0d:	repz retw 0x8a3
  41ff12:	push   ds
  41ff13:	call   0xe669e872
  41ff18:	or     edx,edi
  41ff1a:	pop    ecx
  41ff1b:	fdivr  QWORD PTR [esi+0x783ba970]
  41ff21:	ret    0x3c52
  41ff24:	adc    DWORD PTR [eax+0x7e02764],edi
  41ff2a:	push   es
  41ff2b:	adc    esi,DWORD PTR [eax+0x3a]
  41ff2e:	ret    0x440
  41ff31:	retf   
  41ff32:	adc    eax,DWORD PTR [ebx+0x2da98388]
  41ff38:	ja     0x41febf
  41ff3a:	stos   BYTE PTR es:[edi],al
  41ff3b:	adc    DWORD PTR [ebx-0x572c2932],esi
  41ff41:	mov    DWORD PTR [ebp-0xc],eax
  41ff44:	add    DWORD PTR ds:0x42a18f,edi
  41ff4a:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  41ff51:	dec    DWORD PTR ds:0x42a193
  41ff57:	mov    eax,DWORD PTR [ebp-0x1c]
  41ff5a:	mov    ecx,DWORD PTR ds:0x42a207
  41ff60:	mov    ecx,DWORD PTR [ecx]
  41ff62:	xor    DWORD PTR ds:0x42a173,ecx
  41ff68:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ff6b:	and    DWORD PTR ds:0x42a173,0x0
  41ff75:	mov    edi,DWORD PTR ds:0x42a173
  41ff7b:	inc    edi
  41ff7c:	mov    DWORD PTR ds:0x42a173,edi
  41ff82:	cmp    DWORD PTR ds:0x42a173,0x16
  41ff89:	jb     0x41ffb1
  41ff8f:	jmp    0x41ffa4
  41ff94:	push   0x372f
  41ff99:	push   0x5fe0
  41ff9e:	call   DWORD PTR ds:0x42a2c7
  41ffa4:	cmp    DWORD PTR ds:0x42a173,0x14
  41ffab:	jb     0x41ff75
  41ffb1:	sub    eax,ecx
  41ffb3:	mov    DWORD PTR [ebp-0x1c],eax
  41ffb6:	xor    ecx,ecx
  41ffb8:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  41ffbf:	sub    ecx,DWORD PTR ds:0x42a133
  41ffc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ffc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41ffcb:	and    DWORD PTR ds:0x42a1af,0x0
  41ffd5:	jmp    0x41ffe9
  41ffda:	xor    edi,edi
  41ffdc:	add    edi,DWORD PTR ds:0x42a1af
  41ffe2:	inc    edi
  41ffe3:	mov    DWORD PTR ds:0x42a1af,edi
  41ffe9:	cmp    DWORD PTR ds:0x42a1af,0x1b
  41fff0:	jae    0x42003a
  41fff6:	cmp    DWORD PTR ds:0x42a1af,0x7
  41fffd:	ja     0x42003a
  420003:	jmp    0x42001b
  420008:	push   0x160a
  42000d:	push   0x42a157
  420012:	push   DWORD PTR [ebp-0x18]
  420015:	call   DWORD PTR ds:0x42a2cf
  42001b:	cmp    DWORD PTR ds:0x42a1af,0x6
  420022:	jne    0x420035
  420028:	mov    edi,DWORD PTR ds:0x42a1af
  42002e:	inc    edi
  42002f:	mov    DWORD PTR ds:0x42a1af,edi
  420035:	jmp    0x41ffda
  42003a:	sub    eax,ecx
  42003c:	mov    DWORD PTR [ebp-0x20],eax
  42003f:	mov    eax,DWORD PTR [ebp-0x2c]
  420042:	mov    ecx,DWORD PTR [ebp-0x20]
  420045:	mov    esi,0x75108a8
  42004a:	xor    eax,esi
  42004c:	mov    edi,0x3272ef
  420051:	add    eax,edi
  420053:	or     eax,ecx
  420055:	mov    DWORD PTR [ebp-0x20],eax
  420058:	mov    eax,DWORD PTR [ebp-0x4]
  42005b:	mov    ecx,DWORD PTR [ebp-0x4]
  42005e:	sub    eax,ecx
  420060:	mov    DWORD PTR [ebp-0x4],eax
  420063:	or     DWORD PTR [ebp-0x4],0xf89c85be
  42006a:	mov    eax,DWORD PTR [ebp-0xc]
  42006d:	xor    eax,esi
  42006f:	add    eax,edi
  420071:	push   eax
  420072:	mov    eax,DWORD PTR [ebp-0x10]
  420075:	xor    eax,esi
  420077:	add    eax,edi
  420079:	push   eax
  42007a:	mov    eax,DWORD PTR [ebp-0x4]
  42007d:	xor    eax,esi
  42007f:	add    eax,edi
  420081:	push   eax
  420082:	lea    eax,[ebp-0x78]
  420085:	push   eax
  420086:	push   DWORD PTR [ebp-0x2c]
  420089:	push   DWORD PTR [ebp-0x28]
  42008c:	call   0x40b04c
  420091:	test   eax,eax
  420093:	je     0x4200c1
  420099:	lea    eax,[ebp-0x78]
  42009c:	push   eax
  42009d:	mov    eax,DWORD PTR [ebp-0x28]
  4200a0:	xor    eax,esi
  4200a2:	add    eax,edi
  4200a4:	push   eax
  4200a5:	mov    eax,DWORD PTR [ebp-0x24]
  4200a8:	add    eax,0xaa
  4200ad:	push   eax
  4200ae:	mov    eax,DWORD PTR [ebp-0x24]
  4200b1:	mov    eax,DWORD PTR [eax+0x198]
  4200b7:	push   DWORD PTR [eax]
  4200b9:	call   0x40a8fb
  4200be:	mov    DWORD PTR [ebp-0x14],eax
  4200c1:	mov    ecx,DWORD PTR ds:0x429527
  4200c7:	lea    eax,[ebp+0x4]
  4200ca:	mov    DWORD PTR [ecx*4+0x42951f],eax
  4200d1:	inc    DWORD PTR ds:0x429527
  4200d7:	mov    eax,DWORD PTR [ebp-0x14]
  4200da:	test   eax,eax
  4200dc:	je     0x420144
  4200e2:	lea    eax,[ebp-0x8]
  4200e5:	mov    DWORD PTR [ebp-0x34],eax
  4200e8:	mov    eax,DWORD PTR [ebp-0x30]
  4200eb:	mov    DWORD PTR [ebp-0x8],eax
  4200ee:	mov    eax,DWORD PTR [ebp-0x8]
  4200f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4200f4:	sub    eax,ecx
  4200f6:	mov    DWORD PTR [ebp-0x8],eax
  4200f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4200fc:	xor    ecx,esi
  4200fe:	mov    eax,0xffcd8d11
  420103:	sub    eax,ecx
  420105:	add    DWORD PTR [ebp-0x8],eax
  420108:	mov    eax,DWORD PTR [ebp-0x8]
  42010b:	mov    ecx,DWORD PTR [ebp-0x14]
  42010e:	mov    DWORD PTR [ecx+0x1],eax
  420111:	mov    eax,DWORD PTR [ebp-0x14]
  420114:	push   DWORD PTR [ebp-0x24]
  420117:	mov    BYTE PTR [eax],0xe9
  42011a:	mov    eax,ds:0x4292ab
  42011f:	push   DWORD PTR [eax]
  420121:	push   DWORD PTR ds:0x42950f
  420127:	push   DWORD PTR ds:0x4292b3
  42012d:	push   DWORD PTR ds:0x4294ef
  420133:	push   DWORD PTR ds:0x429f1b
  420139:	push   DWORD PTR [ebp-0x28]
  42013c:	push   DWORD PTR [ebp-0x2c]
  42013f:	mov    eax,DWORD PTR [ebp-0x14]
  420142:	call   eax
  420144:	pop    edi
  420145:	pop    esi
  420146:	leave  
  420147:	ret    
  420148:	push   ebp
  420149:	mov    ebp,esp
  42014b:	sub    esp,0x1c
  42014e:	add    DWORD PTR ds:0x42a133,edx
  420154:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  42015b:	lea    eax,[ebp+0x14]
  42015e:	mov    DWORD PTR [ebp-0x4],eax
  420161:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  420168:	lea    eax,[ebp-0xc]
  42016b:	and    DWORD PTR ds:0x42a163,0x0
  420175:	jmp    0x420187
  42017a:	mov    ecx,DWORD PTR ds:0x42a163
  420180:	inc    ecx
  420181:	mov    DWORD PTR ds:0x42a163,ecx
  420187:	cmp    DWORD PTR ds:0x42a163,0x1d
  42018e:	jae    0x4201b9
  420194:	cmp    DWORD PTR ds:0x42a163,0x1e
  42019b:	jge    0x4201b9
  4201a1:	jmp    0x4201b4
  4201a6:	push   0x42a157
  4201ab:	push   DWORD PTR [ebp-0x28]
  4201ae:	call   DWORD PTR ds:0x42a2d3
  4201b4:	jmp    0x42017a
  4201b9:	mov    DWORD PTR [ebp-0x14],eax
  4201bc:	xor    ecx,ecx
  4201be:	or     ecx,DWORD PTR ds:0x42a1b7
  4201c4:	and    ecx,DWORD PTR ds:0x42a1ab
  4201ca:	mov    DWORD PTR ds:0x42a1b7,ecx
  4201d0:	mov    eax,DWORD PTR [ebp-0xc]
  4201d3:	sbb    ecx,edx
  4201d5:	mov    edx,DWORD PTR [ebp-0x14]
  4201d8:	mov    ecx,0x75108a8
  4201dd:	add    DWORD PTR ds:0x42a1d3,0x42a18f
  4201e7:	xor    eax,ecx
  4201e9:	sbb    DWORD PTR ds:0x42a1bb,0x42a13f
  4201f3:	add    eax,0x3272ef
  4201f8:	mov    DWORD PTR [edx],eax
  4201fa:	mov    DWORD PTR ds:0x42a16b,0x1a
  420204:	cmp    DWORD PTR ds:0x42a16b,0x0
  42020b:	je     0x420239
  420211:	cmp    DWORD PTR ds:0x42a16b,0x1c
  420218:	jge    0x420239
  42021e:	jmp    0x420229
  420223:	call   DWORD PTR ds:0x42a293
  420229:	mov    eax,ds:0x42a16b
  42022e:	dec    eax
  42022f:	mov    ds:0x42a16b,eax
  420234:	jmp    0x420204
  420239:	mov    eax,ds:0x4292a7
  42023e:	mov    edx,DWORD PTR [ebp-0x4]
  420241:	mov    eax,DWORD PTR [eax]
  420243:	mov    DWORD PTR ds:0x42a14b,0x12e2
  42024d:	add    eax,DWORD PTR [edx]
  42024f:	or     edx,0x7147
  420255:	push   esi
  420256:	mov    DWORD PTR [ebp-0x8],eax
  420259:	and    DWORD PTR ds:0x42a15f,0x0
  420263:	jmp    0x420273
  420268:	mov    eax,ds:0x42a15f
  42026d:	inc    eax
  42026e:	mov    ds:0x42a15f,eax
  420273:	cmp    DWORD PTR ds:0x42a15f,0x15
  42027a:	jae    0x4202af
  420280:	cmp    DWORD PTR ds:0x42a15f,0x1f
  420287:	jge    0x4202af
  42028d:	jmp    0x4202aa
  420292:	push   DWORD PTR [ebp-0x18]
  420295:	push   0x7a6f
  42029a:	push   0x42906a
  42029f:	push   0x400000
  4202a4:	call   DWORD PTR ds:0x42a297
  4202aa:	jmp    0x420268
  4202af:	mov    edx,DWORD PTR [ebp+0x8]
  4202b2:	xor    eax,eax
  4202b4:	mov    eax,ds:0x42942f
  4202b9:	mov    eax,DWORD PTR [eax+0x198]
  4202bf:	sub    DWORD PTR ds:0x42a163,ebx
  4202c5:	xor    edx,ecx
  4202c7:	add    esi,0x2212
  4202cd:	mov    esi,0x3272ef
  4202d2:	add    edx,esi
  4202d4:	mov    DWORD PTR ds:0x42a18b,0x2e1b
  4202de:	cmp    DWORD PTR [eax],edx
  4202e0:	je     0x420301
  4202e6:	mov    DWORD PTR ds:0x42a18b,0x7bac
  4202f0:	mov    eax,DWORD PTR [eax]
  4202f2:	mov    DWORD PTR ds:0x42a167,0x79fc
  4202fc:	jmp    0x423906
  420301:	mov    eax,DWORD PTR [ebp+0x18]
  420304:	xor    eax,ecx
  420306:	and    DWORD PTR ds:0x42a14b,0x42a13b
  420310:	push   ebx
  420311:	and    DWORD PTR ds:0x42a193,0x0
  42031b:	jmp    0x42032f
  420320:	xor    ebx,ebx
  420322:	xor    ebx,DWORD PTR ds:0x42a193
  420328:	inc    ebx
  420329:	mov    DWORD PTR ds:0x42a193,ebx
  42032f:	cmp    DWORD PTR ds:0x42a193,0x1b
  420336:	jae    0x420359
  42033c:	cmp    DWORD PTR ds:0x42a193,0x26
  420343:	jg     0x420359
  420349:	jmp    0x420354
  42034e:	call   DWORD PTR ds:0x42a29b
  420354:	jmp    0x420320
  420359:	add    eax,esi
  42035b:	movzx  ebx,WORD PTR ds:0x42a1b3
  420362:	sub    DWORD PTR ds:0x42a1ab,ebx
  420368:	xor    edx,edx
  42036a:	mov    ebx,0xfabdbeda
  42036f:	xor    DWORD PTR ds:0x42a1b7,0x42a143
  420379:	add    eax,ebx
  42037b:	mov    DWORD PTR ds:0x42a17f,0x709e
  420385:	push   edi
  420386:	mov    edi,0x12e3
  42038b:	adc    edx,0xffffffff
  42038e:	mov    edi,0x8a29a13b
  420393:	xor    eax,edi
  420395:	xor    edx,0x0
  420398:	cmp    eax,0x70941fe1
  42039d:	mov    DWORD PTR ds:0x42a18f,0x2900
  4203a7:	jne    0x4203de
  4203ad:	mov    DWORD PTR ds:0x42a1bb,0x7794
  4203b7:	cmp    edx,0xffffffff
  4203ba:	mov    DWORD PTR ds:0x42a183,0x5653
  4203c4:	jne    0x4203de
  4203ca:	push   0xf89c85ba
  4203cf:	mov    DWORD PTR ds:0x42a13f,0xea6
  4203d9:	jmp    0x4238f3
  4203de:	sbb    eax,DWORD PTR ds:0x42a167
  4203e4:	mov    eax,DWORD PTR [ebp+0x18]
  4203e7:	xor    eax,ecx
  4203e9:	adc    DWORD PTR ds:0x42a1b7,0x42a183
  4203f3:	add    eax,esi
  4203f5:	xor    edx,edx
  4203f7:	dec    DWORD PTR ds:0x42a17b
  4203fd:	add    eax,ebx
  4203ff:	mov    DWORD PTR ds:0x42a133,0x604
  420409:	adc    edx,0xffffffff
  42040c:	adc    DWORD PTR ds:0x42a12f,0x42a18f
  420416:	xor    eax,edi
  420418:	xor    edx,0x0
  42041b:	mov    DWORD PTR ds:0x42a14b,0x4b6d
  420425:	cmp    eax,0x70941fe7
  42042a:	mov    DWORD PTR ds:0x42a18f,0x342
  420434:	jne    0x4238e0
  42043a:	mov    DWORD PTR ds:0x42a19b,0x69f4
  420444:	cmp    edx,0xffffffff
  420447:	jne    0x4238e0
  42044d:	and    edx,eax
  42044f:	mov    eax,DWORD PTR [ebp+0x10]
  420452:	inc    edx
  420453:	xor    eax,ecx
  420455:	movzx  edx,BYTE PTR ds:0x42a173
  42045c:	and    DWORD PTR ds:0x42a1bf,edx
  420462:	add    eax,esi
  420464:	sub    DWORD PTR ds:0x42a1d3,0x2e10
  42046e:	mov    DWORD PTR [ebp-0x18],eax
  420471:	xor    DWORD PTR ds:0x42a197,ebx
  420477:	mov    eax,DWORD PTR [ebp+0xc]
  42047a:	mov    edx,DWORD PTR ds:0x42a14f
  420480:	and    DWORD PTR ds:0x42a1bf,edx
  420486:	mov    edx,DWORD PTR [ebp-0x8]
  420489:	or     DWORD PTR ds:0x42a197,0x42a1bb
  420493:	xor    eax,ecx
  420495:	xor    DWORD PTR ds:0x42a173,0x2c59
  42049f:	add    eax,esi
  4204a1:	add    DWORD PTR ds:0x42a12b,0x1203
  4204ab:	imul   eax,DWORD PTR [edx]
  4204ae:	mov    edx,DWORD PTR [ebp+0x8]
  4204b1:	xor    edx,ecx
  4204b3:	add    edx,esi
  4204b5:	mov    DWORD PTR ds:0x42a157,0x15dc
  4204bf:	cmp    edx,eax
  4204c1:	mov    eax,DWORD PTR [ebp-0x4]
  4204c4:	mov    DWORD PTR ds:0x42a19b,0x25f0
  4204ce:	je     0x422919
  4204d4:	xor    DWORD PTR ds:0x42a1b3,edi
  4204da:	mov    edx,DWORD PTR [ebp-0x18]
  4204dd:	and    DWORD PTR ds:0x42a12b,0x42a167
  4204e7:	add    DWORD PTR [eax],edx
  4204e9:	mov    eax,DWORD PTR [ebp-0x4]
  4204ec:	sbb    edx,0x41ab
  4204f2:	mov    edx,DWORD PTR [ebp+0xc]
  4204f5:	or     DWORD PTR ds:0x42a167,0x42a133
  4204ff:	xor    edx,ecx
  420501:	and    DWORD PTR ds:0x42a133,0x1b9a
  42050b:	add    edx,esi
  42050d:	imul   edx,DWORD PTR [eax]
  420510:	mov    DWORD PTR ds:0x42a1c7,0x43e8
  42051a:	mov    DWORD PTR [eax],edx
  42051c:	mov    eax,DWORD PTR [ebp-0x4]
  42051f:	and    DWORD PTR ds:0x42a183,0x0
  420529:	mov    edx,DWORD PTR ds:0x42a183
  42052f:	inc    edx
  420530:	mov    DWORD PTR ds:0x42a183,edx
  420536:	cmp    DWORD PTR ds:0x42a183,0x8
  42053d:	jge    0x420589
  420543:	jmp    0x420560
  420548:	push   0x4b4a
  42054d:	push   DWORD PTR [ebp-0x20]
  420550:	push   0x429257
  420555:	push   0x400000
  42055a:	call   DWORD PTR ds:0x42a2a3
  420560:	cmp    DWORD PTR ds:0x42a183,0x7
  420567:	jne    0x42057c
  42056d:	xor    edx,edx
  42056f:	or     edx,DWORD PTR ds:0x42a183
  420575:	inc    edx
  420576:	mov    DWORD PTR ds:0x42a183,edx
  42057c:	cmp    DWORD PTR ds:0x42a183,0x1f
  420583:	jb     0x420529
  420589:	mov    DWORD PTR [ebp-0x1c],eax
  42058c:	not    DWORD PTR ds:0x42a197
  420592:	mov    eax,DWORD PTR [ebp+0x10]
  420595:	jmp    0x422908
  42059a:	and    eax,0x3cc0e30
  42059f:	les    ebx,FWORD PTR [ebx+0x426a7a97]
  4205a5:	imul   edx,esp,0x5d559f96
  4205ab:	mov    dh,0x79
  4205ad:	jp     0x4205db
  4205af:	pop    edi
  4205b0:	jp     0x42062c
  4205b2:	dec    ebx
  4205b3:	inc    esp
  4205b4:	ja     0x4205f0
  4205b6:	pushf  
  4205b7:	fisub  DWORD PTR [esi]
  4205b9:	les    ecx,FWORD PTR [edi]
  4205bb:	scas   al,BYTE PTR es:[edi]
  4205bc:	popf   
  4205bd:	or     eax,0x3ad7aa59
  4205c2:	stc    
  4205c3:	cmp    eax,0xb277f1d0
  4205c8:	mul    DWORD PTR [eax]
  4205ca:	adc    ch,BYTE PTR [ecx+0x20]
  4205cd:	mov    esp,0x9884e7fa
  4205d2:	dec    esp
  4205d3:	push   ebx
  4205d4:	mov    esi,0x668df7c7
  4205d9:	scas   eax,DWORD PTR es:[edi]
  4205da:	ss jae 0x4205f3
  4205dd:	jne    0x420648
  4205df:	into   
  4205e0:	mov    dh,0xad
  4205e2:	dec    edi
  4205e3:	push   0xb8cb5c96
  4205e8:	(bad)  
  4205e9:	push   cs
  4205ea:	call   0x68da:0xea95efe
  4205f1:	jg     0x42057d
  4205f3:	jnp    0x4205bc
  4205f5:	rcl    ah,cl
  4205f7:	test   BYTE PTR [eax+eax*4-0x568bc354],cl
  4205fe:	cdq    
  4205ff:	mov    DWORD PTR [esi-0x27],0x42ccf918
  420606:	test   eax,0x9fdc0004
  42060b:	add    ebp,DWORD PTR [ecx]
  42060d:	sahf   
  42060e:	cmp    ecx,DWORD PTR [edx-0x26]
  420611:	pop    ss
  420612:	repz popa 
  420614:	mov    bl,0x65
  420616:	add    esi,ebp
  420618:	mov    eax,0xa0377b6b
  42061d:	push   esp
  42061e:	mov    ebx,0x71bd11c0
  420623:	sar    ecx,1
  420625:	fwait
  420626:	lock neg BYTE PTR [edi+0x57]
  42062a:	inc    ebx
  42062b:	xchg   DWORD PTR [bp+0x4f15],ebp
  420630:	pop    esi
  420631:	sub    al,ch
  420633:	jecxz  0x42063c
  420635:	into   
  420636:	inc    ebp
  420637:	xor    bh,BYTE PTR [eiz*1-0x7e4b790d]
  42063e:	inc    ebx
  42063f:	fcomp  QWORD PTR [ecx]
  420641:	push   es
  420642:	ins    BYTE PTR es:[edi],dx
  420643:	pop    es
  420644:	or     ebp,ebp
  420646:	in     al,0x19
  420648:	xchg   esp,eax
  420649:	and    DWORD PTR ds:0x2a85cea1,0x65419d7f
  420653:	(bad)  
  420654:	call   FWORD PTR [ebx]
  420656:	pushf  
  420657:	mov    ah,0x38
  420659:	jmp    esp
  42065b:	mov    cl,0xbf
  42065d:	xor    ebp,ecx
  42065f:	int    0xf4
  420661:	call   FWORD PTR [edi+0x5122868c]
  420667:	or     ch,bl
  420669:	fst    QWORD PTR [ecx+0x77da2da7]
  42066f:	or     DWORD PTR [ebx-0x25a326c],ebp
  420675:	and    al,BYTE PTR [ebx]
  420677:	outs   dx,BYTE PTR ds:[esi]
  420678:	stc    
  420679:	or     eax,0x190aa0c5
  42067e:	test   al,0x8f
  420680:	fwait
  420681:	push   edx
  420682:	scas   al,BYTE PTR es:[edi]
  420683:	std    
  420684:	or     al,0xcc
  420686:	xor    BYTE PTR [eax-0x1da63584],al
  42068c:	in     eax,dx
  42068d:	ja     0x4206aa
  42068f:	mov    DWORD PTR [edi],esp
  420691:	jns    0x4206a4
  420693:	(bad)  
  420694:	sbb    DWORD PTR [ebx],esi
  420696:	or     al,0x2e
  420698:	jmp    0x7a7fde21
  42069d:	mov    WORD PTR [ebx+0x46],fs
  4206a0:	cwde   
  4206a1:	adc    eax,0x15f09aac
  4206a6:	cld    
  4206a7:	and    BYTE PTR [edi+eax*1-0x61],al
  4206ab:	lock rcr ch,1
  4206ae:	retf   
  4206af:	rcr    DWORD PTR [ebp-0x758e342a],cl
  4206b5:	aad    0x73
  4206b7:	out    0xd3,al
  4206b9:	pushf  
  4206ba:	sub    ebp,DWORD PTR [esi+0x4ce3ce21]
  4206c0:	loop   0x420652
  4206c2:	dec    ebx
  4206c3:	mov    esp,0x816e45df
  4206c8:	ja     0x4206db
  4206ca:	fbstp  TBYTE PTR [edi]
  4206cc:	ds jbe 0x42066e
  4206cf:	rcl    BYTE PTR [edx+0x244d57ca],1
  4206d5:	mov    bh,0xd1
  4206d7:	or     dh,ah
  4206d9:	push   esi
  4206da:	mov    bl,0xda
  4206dc:	ss mov dl,0x47
  4206df:	bound  ebx,QWORD PTR [ecx-0x40]
  4206e2:	pushf  
  4206e3:	loope  0x42075f
  4206e5:	mov    ecx,0x4b01f4f4
  4206ea:	pop    edx
  4206eb:	jns    0x4206f6
  4206ed:	mov    edi,0xab6e98d3
  4206f2:	test   eax,0x2d1b271b
  4206f7:	ficomp DWORD PTR ds:0xe8e24368
  4206fd:	or     BYTE PTR [ebp+0x768ceab6],al
  420703:	nop
  420704:	jb     0x4206d3
  420706:	cmp    al,0x3b
  420708:	ds hlt 
  42070a:	xchg   ecx,eax
  42070b:	xchg   dl,al
  42070d:	int    0x5c
  42070f:	daa    
  420710:	cdq    
  420711:	mov    ebp,0xc98975dc
  420716:	mov    dl,0x47
  420718:	adc    cl,BYTE PTR [edx-0x3]
  42071b:	sahf   
  42071c:	and    DWORD PTR [esi-0x2dc0a85],ebp
  420722:	test   DWORD PTR ds:0xcdae8a49,eax
  420728:	jns    0x4206bd
  42072a:	jmp    0x42070c
  42072c:	cmp    ch,BYTE PTR ds:0x367ca52b
  420732:	sub    al,0x9b
  420734:	or     al,BYTE PTR [ebp+0x4]
  420737:	jns    0x4207a4
  420739:	cs push ebp
  42073b:	mov    ebp,0x4123e320
  420740:	sbb    edx,DWORD PTR [ebx]
  420742:	ins    DWORD PTR es:[edi],dx
  420743:	sub    eax,0x2c559f64
  420748:	je     0x4206cd
  42074a:	push   esp
  42074b:	push   ss
  42074c:	push   ss
  42074d:	sub    ecx,edi
  42074f:	cmp    dl,BYTE PTR [eax-0x3036509f]
  420755:	jne    0x4207ba
  420757:	sub    esi,eax
  420759:	inc    esi
  42075a:	mov    cl,0x5
  42075c:	stos   BYTE PTR es:[edi],al
  42075d:	cdq    
  42075e:	outs   dx,DWORD PTR ds:[esi]
  42075f:	aam    0x7a
  420761:	ror    BYTE PTR [ebp-0x2f],1
  420764:	mov    ah,0xb
  420766:	push   0x55
  420768:	mov    WORD PTR [edx+0x287cadd3],cs
  42076e:	lock push edi
  420770:	mov    BYTE PTR [edi],0x35
  420773:	jne    0x420786
  420775:	rcr    BYTE PTR [ebx-0x75],1
  420778:	loopne 0x420782
  42077a:	call   0x11fa:0x9f7a6f56
  420781:	inc    BYTE PTR [esi-0x6b5cf51a]
  420787:	add    ebx,esi
  420789:	stc    
  42078a:	pop    eax
  42078b:	jle    0x420758
  42078d:	or     edx,DWORD PTR [ecx]
  42078f:	outs   dx,BYTE PTR ds:[esi]
  420790:	jmp    0x42078f
  420792:	dec    edx
  420793:	inc    ecx
  420794:	ret    0xd850
  420797:	adc    DWORD PTR [ebx],esi
  420799:	shr    ah,1
  42079b:	int    0x88
  42079d:	xchg   ecx,eax
  42079e:	inc    eax
  42079f:	mov    eax,0xc2d84f2e
  4207a4:	int    0xdb
  4207a6:	(bad)  [ecx]
  4207a8:	fwait
  4207a9:	jmp    0x4207c1
  4207ab:	xor    ebx,DWORD PTR [eax+0x73]
  4207ae:	pop    edx
  4207af:	mov    ds:0x5946bf9b,al
  4207b4:	mov    bl,0x71
  4207b6:	push   edx
  4207b7:	xor    dl,BYTE PTR [edi+eiz*4-0x28]
  4207bb:	int3   
  4207bc:	ss out dx,eax
  4207be:	inc    esi
  4207bf:	mov    bh,0x92
  4207c1:	xchg   esi,eax
  4207c2:	sub    bh,BYTE PTR [ebp+0x714ccec1]
  4207c8:	xchg   BYTE PTR [edx-0x43333e1c],cl
  4207ce:	cmp    BYTE PTR [edi],al
  4207d0:	in     al,dx
  4207d1:	shl    DWORD PTR [ebp-0x2],1
  4207d4:	adc    BYTE PTR [ecx-0x18b894d],ah
  4207da:	lahf   
  4207db:	xchg   esi,eax
  4207dc:	dec    edi
  4207dd:	cmp    eax,0x7d1fbd39
  4207e2:	sbb    BYTE PTR [esi-0x3b99a302],ah
  4207e8:	mov    bl,0x68
  4207ea:	inc    ecx
  4207eb:	cmp    eax,0xa5546271
  4207f0:	lods   eax,DWORD PTR ds:[esi]
  4207f1:	xor    cl,BYTE PTR [eax+0x51]
  4207f4:	inc    ebx
  4207f5:	rcl    BYTE PTR [edi+0x6b859681],cl
  4207fb:	retf   
  4207fc:	loope  0x420869
  4207fe:	repz push esp
  420800:	test   eax,0x2efd7274
  420805:	fadd   DWORD PTR [ecx-0x6c]
  420808:	dec    ebp
  420809:	js     0x4207c2
  42080b:	xchg   edi,eax
  42080c:	mov    ebx,0xfd116a7b
  420811:	push   esp
  420812:	aas    
  420813:	xchg   ecx,eax
  420814:	outs   dx,DWORD PTR ds:[esi]
  420815:	mov    cl,0xde
  420817:	cdq    
  420818:	pop    ecx
  420819:	dec    esi
  42081a:	scas   al,BYTE PTR es:[edi]
  42081b:	ins    DWORD PTR es:[edi],dx
  42081c:	dec    eax
  42081d:	xchg   edi,eax
  42081e:	ins    BYTE PTR es:[edi],dx
  42081f:	(bad)  
  420820:	adc    dl,ah
  420822:	xchg   ecx,eax
  420823:	push   ds
  420824:	add    DWORD PTR [esi+0x640a1282],eax
  42082a:	mov    ah,0x40
  42082c:	repz xor BYTE PTR [ebx-0x57],0xda
  420831:	adc    edx,DWORD PTR [ebp-0x4d]
  420834:	in     al,0x6c
  420836:	sbb    al,0x6d
  420838:	test   al,0x37
  42083a:	call   0xb363:0x4c8937ce
  420841:	mov    edx,0x1ca0f76a
  420846:	jmp    0x420836
  420848:	inc    edx
  420849:	jb     0x4208b0
  42084b:	inc    ebx
  42084c:	mov    eax,0xdcb0abf8
  420851:	scas   eax,DWORD PTR es:[edi]
  420852:	push   ds
  420853:	and    esi,DWORD PTR [eax+0x5b]
  420856:	popa   
  420857:	call   0x696f:0x5fe1ce6b
  42085e:	or     DWORD PTR [ecx],esi
  420860:	jmp    0x420840
  420862:	fld    QWORD PTR [ecx+esi*1+0x60978a7f]
  420869:	call   0x580a:0xcd9a1d4f
  420870:	je     0x42087d
  420872:	stc    
  420873:	or     eax,0x2efbe6a1
  420878:	pop    ds
  420879:	fwait
  42087a:	dec    ebx
  42087b:	cdq    
  42087c:	test   DWORD PTR [ebx],ebx
  42087e:	pusha  
  42087f:	and    DWORD PTR [esi],edx
  420881:	dec    ebp
  420882:	int3   
  420883:	push   esi
  420884:	lea    eax,[ecx-0x6e8e3e7c]
  42088a:	lahf   
  42088b:	leave  
  42088c:	xor    eax,0xd1a0c35a
  420891:	xchg   esp,eax
  420892:	dec    esi
  420893:	aad    0x28
  420895:	sahf   
  420896:	xchg   DWORD PTR [ecx],edx
  420898:	push   ebx
  420899:	cmc    
  42089a:	xor    bl,ah
  42089c:	add    eax,0x6d502740
  4208a1:	xchg   edx,eax
  4208a2:	adc    eax,0x830b968d
  4208a7:	(bad)  
  4208a8:	sahf   
  4208a9:	jmp    0x5526d78e
  4208ae:	jb     0x4208a2
  4208b0:	test   DWORD PTR [ecx+0x1b],0x745627ce
  4208b7:	fidiv  WORD PTR [ebx]
  4208b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208ba:	aas    
  4208bb:	pop    esp
  4208bc:	inc    edi
  4208bd:	sub    al,0x2c
  4208bf:	mov    ebx,0x11be1d37
  4208c4:	jle    0x420872
  4208c6:	adc    DWORD PTR [eax-0x7c],ebx
  4208c9:	mov    edi,0xfc6a649a
  4208ce:	fdivr  QWORD PTR [ecx+edx*1+0x2b]
  4208d2:	add    DWORD PTR [edi+edx*4-0x18],esp
  4208d6:	aaa    
  4208d7:	loope  0x4208c5
  4208d9:	jmp    0x305523f0
  4208de:	js     0x420880
  4208e0:	xchg   edx,eax
  4208e1:	jae    0x4208d4
  4208e3:	sub    al,0x62
  4208e5:	fwait
  4208e6:	jecxz  0x420884
  4208e8:	ins    BYTE PTR es:[edi],dx
  4208e9:	sub    DWORD PTR [edx+0x4],ecx
  4208ec:	xchg   esi,eax
  4208ed:	ja     0x42089d
  4208ef:	pushf  
  4208f0:	in     al,dx
  4208f1:	xchg   edi,eax
  4208f2:	sahf   
  4208f3:	ret    
  4208f4:	aaa    
  4208f5:	mov    ah,0x64
  4208f7:	sbb    BYTE PTR [edi],0x1d
  4208fa:	es test eax,0x5ffe4c50
  420900:	je     0x420973
  420902:	and    al,0xb4
  420904:	jmp    0x4208b7
  420906:	inc    ecx
  420907:	add    eax,0x4cba366b
  42090c:	lea    esp,[esi]
  42090e:	mov    ebx,0xfe556035
  420913:	dec    ecx
  420914:	push   0x72
  420916:	cmp    al,0x6b
  420918:	dec    edx
  420919:	jns    0x42093a
  42091b:	pop    ss
  42091c:	mov    ecx,0x7e8933c1
  420921:	mov    eax,ds:0x98b10acf
  420926:	test   al,0xf7
  420928:	aad    0x97
  42092a:	fsubrp st(6),st
  42092c:	sub    dh,BYTE PTR [ebx+ebp*1+0x757ced11]
  420933:	test   eax,0xc5a5b4ea
  420938:	sti    
  420939:	fnstsw WORD PTR [eax+0x3db7902f]
  42093f:	push   0x9cfdb609
  420944:	jb     0x420972
  420946:	sbb    bh,BYTE PTR [ebp+edx*2+0x43b30cac]
  42094d:	xchg   esi,eax
  42094e:	lods   eax,DWORD PTR ds:[esi]
  42094f:	cmp    edx,DWORD PTR [ecx]
  420951:	inc    edx
  420952:	jle    0x420907
  420954:	jmp    0x420959
  420956:	dec    edi
  420957:	loopne 0x42096d
  420959:	xor    DWORD PTR [eax-0x76],eax
  42095c:	dec    esp
  42095d:	adc    esp,edx
  42095f:	xor    BYTE PTR [eax],dh
  420961:	bound  ecx,QWORD PTR [ecx-0x74]
  420964:	icebp  
  420965:	jecxz  0x420946
  420967:	xchg   esp,eax
  420968:	cmp    eax,DWORD PTR [edx-0x17]
  42096b:	outs   dx,DWORD PTR ds:[esi]
  42096c:	add    DWORD PTR [edi],ecx
  42096e:	loop   0x420972
  420970:	mov    fs,WORD PTR [edx+0x2c]
  420973:	mov    dl,0x10
  420975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420976:	pop    ds
  420977:	and    DWORD PTR ds:0x50822dbe,esi
  42097d:	fild   WORD PTR [eax]
  42097f:	mov    ebx,DWORD PTR [edx+0xc]
  420982:	mov    ds:0x8bd02b24,al
  420987:	aam    0x5d
  420989:	dec    ebp
  42098a:	adc    ch,BYTE PTR [eax+0x1]
  42098d:	ret    
  42098e:	bswap  ebp
  420990:	jbe    0x420971
  420992:	(bad)  
  420993:	xchg   edx,eax
  420994:	stc    
  420995:	pop    edi
  420996:	out    0x49,al
  420998:	and    al,0x52
  42099a:	pop    eax
  42099b:	mov    ds:0x7c9d9f4c,eax
  4209a0:	aas    
  4209a1:	scas   eax,DWORD PTR es:[edi]
  4209a2:	push   ecx
  4209a3:	sbb    DWORD PTR [ebp+0x60],eax
  4209a6:	out    dx,eax
  4209a7:	dec    ecx
  4209a8:	add    eax,0x3e6f32d2
  4209ad:	into   
  4209ae:	in     al,dx
  4209af:	xchg   ecx,eax
  4209b0:	pop    ebp
  4209b1:	fisttp DWORD PTR [edx-0x48]
  4209b4:	ja     0x420a26
  4209b6:	adc    BYTE PTR [edx+0x2236c855],bh
  4209bc:	rcl    DWORD PTR [eax],cl
  4209be:	cmp    eax,0x2c76d593
  4209c3:	mov    edi,0x327b4c14
  4209c8:	out    dx,al
  4209c9:	inc    eax
  4209ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209cb:	sub    bl,BYTE PTR [eax+0x571ba4e7]
  4209d1:	sub    dh,bl
  4209d3:	sbb    eax,0x64e7490
  4209d8:	aam    0xd5
  4209da:	mov    esi,ebp
  4209dc:	jecxz  0x4209cd
  4209de:	mov    cl,0xbe
  4209e0:	dec    eax
  4209e1:	pop    ebx
  4209e2:	ds sbb bh,dh
  4209e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209e6:	sub    BYTE PTR [edi-0x2f],dl
  4209e9:	dec    esp
  4209ea:	ror    BYTE PTR [ebx+0x6b],cl
  4209ed:	dec    edx
  4209ee:	mov    bl,0x37
  4209f0:	and    DWORD PTR [edi+0xfcae34f],ebp
  4209f6:	nop
  4209f7:	test   eax,0xfe6ebb56
  4209fc:	push   ecx
  4209fd:	inc    edx
  4209fe:	mov    DWORD PTR [edi],esp
  420a00:	or     DWORD PTR [ecx],esi
  420a02:	push   ebp
  420a03:	mov    bl,0xa9
  420a05:	not    esi
  420a07:	push   esp
  420a08:	stc    
  420a09:	pop    edx
  420a0a:	xor    dh,BYTE PTR [eax+ebx*8-0x4b]
  420a0e:	pop    DWORD PTR [ebp+0x2c926b4a]
  420a14:	int    0x6c
  420a16:	mov    esi,esp
  420a18:	xchg   DWORD PTR [ecx+0x1],edx
  420a1b:	push   ds
  420a1c:	mov    cl,0x6e
  420a1e:	icebp  
  420a1f:	sbb    DWORD PTR [edi-0x68],ecx
  420a22:	mov    ecx,0xff82c03e
  420a27:	es sbb cl,ch
  420a2a:	jg     0x4209f4
  420a2c:	outs   dx,BYTE PTR ds:[esi]
  420a2d:	das    
  420a2e:	mov    edx,0x281a7f55
  420a33:	jne    0x420a95
  420a35:	(bad)  
  420a36:	or     eax,0x931983af
  420a3b:	inc    edi
  420a3c:	cs inc eax
  420a3e:	cdq    
  420a3f:	sti    
  420a40:	pusha  
  420a41:	in     al,0x54
  420a43:	mov    al,0x6d
  420a45:	pop    es
  420a46:	fwait
  420a47:	sar    DWORD PTR [ebx-0x5c],1
  420a4a:	das    
  420a4b:	mov    al,0x0
  420a4d:	or     ah,al
  420a4f:	in     eax,0x6
  420a51:	aam    0x67
  420a53:	push   es
  420a54:	cs sbb eax,0xfeef53cf
  420a5a:	push   es
  420a5b:	push   cs
  420a5c:	and    al,bl
  420a5e:	sti    
  420a5f:	cdq    
  420a60:	or     al,0x71
  420a62:	lahf   
  420a63:	aad    0x93
  420a65:	cmc    
  420a66:	xchg   edi,eax
  420a67:	aad    0x63
  420a69:	icebp  
  420a6a:	lock scas eax,DWORD PTR es:[edi]
  420a6c:	cld    
  420a6d:	lock jle 0x420a65
  420a70:	adc    DWORD PTR [ebp+ecx*8+0x458f69b8],eax
  420a77:	stc    
  420a78:	out    0x44,al
  420a7a:	pop    esi
  420a7b:	dec    edi
  420a7c:	mov    WORD PTR [edi],cs
  420a7e:	retf   0x5d5a
  420a81:	pop    ds
  420a82:	or     bl,al
  420a84:	add    BYTE PTR [esp+ebp*4+0x15],al
  420a88:	mov    dh,0x56
  420a8a:	push   eax
  420a8b:	jno    0x420a94
  420a8d:	push   ebx
  420a8e:	or     DWORD PTR [ebx-0x1f],esp
  420a91:	outs   dx,BYTE PTR ds:[esi]
  420a92:	mov    edi,0xd57ec04a
  420a97:	nop
  420a98:	repz jbe 0x420b05
  420a9b:	xchg   edx,eax
  420a9c:	int    0xd1
  420a9e:	and    BYTE PTR [ebx],dh
  420aa0:	in     al,dx
  420aa1:	loop   0x420a50
  420aa3:	adc    al,0xdf
  420aa5:	iret   
  420aa6:	fadd   st(3),st
  420aa8:	shr    DWORD PTR [ebp+0x6ba153ee],1
  420aae:	int    0x7e
  420ab0:	mov    dl,0xfb
  420ab2:	int3   
  420ab3:	rcr    BYTE PTR [esi-0x78],0x6c
  420ab7:	xor    eax,0x252bf6e7
  420abc:	(bad)  
  420abd:	loope  0x420acd
  420abf:	adc    al,0xc1
  420ac1:	cmp    al,0x83
  420ac3:	sbb    edi,eax
  420ac5:	and    ebp,DWORD PTR [edi-0x2b]
  420ac8:	ds scas eax,DWORD PTR es:[edi]
  420aca:	(bad)  
  420acb:	(bad)  
  420acc:	push   ebp
  420acd:	adc    al,0x75
  420acf:	sbb    eax,DWORD PTR [ebx+edx*1+0x38]
  420ad3:	mov    ebx,0xbeb8d9f6
  420ad8:	cmp    bh,BYTE PTR [edi-0x1702f093]
  420ade:	rcr    DWORD PTR [edi+0x49c90995],0x4a
  420ae5:	aad    0x52
  420ae7:	xor    eax,DWORD PTR [ebx+0x54]
  420aea:	jge    0x420b56
  420aec:	fwait
  420aed:	push   edx
  420aee:	mov    ?,WORD PTR [ebx+0x45]
  420af1:	add    al,0x55
  420af3:	adc    DWORD PTR [ebx],eax
  420af5:	aad    0xd8
  420af7:	fcomi  st,st(6)
  420af9:	and    eax,0xad9e9e3a
  420afe:	inc    edx
  420aff:	mov    ds:0xb94ffe7a,eax
  420b04:	(bad)  
  420b06:	loope  0x420afc
  420b08:	pop    ecx
  420b09:	test   al,0x35
  420b0b:	jbe    0x420b5e
  420b0d:	rol    BYTE PTR [edx+0x1b],0xe7
  420b11:	xchg   esp,eax
  420b12:	mov    bh,0xa5
  420b14:	inc    eax
  420b15:	adc    ah,BYTE PTR [edx-0x6c]
  420b18:	fsub   QWORD PTR [ecx+0x72]
  420b1b:	inc    ebx
  420b1c:	add    DWORD PTR [ebx+ebx*2-0x787939da],0x3684109c
  420b27:	(bad)  
  420b28:	out    dx,al
  420b29:	push   edx
  420b2a:	ret    0x6575
  420b2d:	xchg   ecx,eax
  420b2e:	jo     0x420aff
  420b30:	lea    eax,[eax+eax*4-0x3d]
  420b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b35:	int3   
  420b36:	push   eax
  420b37:	aaa    
  420b38:	mov    al,ds:0xafafaa5c
  420b3d:	cdq    
  420b3e:	cs mov dx,?
  420b42:	jno    0x420b4d
  420b44:	pop    es
  420b45:	or     al,ch
  420b47:	push   ds
  420b48:	call   edx
  420b4a:	shl    BYTE PTR [edx-0x75],1
  420b4d:	mov    eax,0xb436adeb
  420b52:	ss dec eax
  420b54:	out    dx,al
  420b55:	jmp    0x420b06
  420b57:	cmc    
  420b58:	xchg   edx,eax
  420b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b5a:	or     DWORD PTR [ebx+0xca30ce0],edi
  420b60:	inc    ebx
  420b61:	les    eax,FWORD PTR [ebx+0x528c4256]
  420b67:	fisubr WORD PTR [esi-0x33]
  420b6a:	mov    edi,0x264a55ab
  420b6f:	scas   eax,DWORD PTR es:[edi]
  420b70:	hlt    
  420b71:	aad    0xa1
  420b73:	jo     0x420ba7
  420b75:	inc    edi
  420b76:	test   DWORD PTR [esi-0x2c],0xa395556d
  420b7d:	popa   
  420b7e:	push   esp
  420b7f:	(bad)  
  420b80:	mov    ebp,0xda69d294
  420b85:	push   esi
  420b86:	das    
  420b87:	aad    0xb2
  420b89:	imul   esp,DWORD PTR [eax+0x51e50c56],0x3
  420b90:	sub    ah,ah
  420b92:	call   0x4705:0xb26456cb
  420b99:	xor    esi,esi
  420b9b:	jnp    0x420b9f
  420b9d:	adc    BYTE PTR [ecx+0x722574f1],0x2b
  420ba4:	xor    esi,ebx
  420ba6:	mov    ebx,0xaf76d99
  420bab:	jo     0x420c17
  420bad:	inc    ebx
  420bae:	repnz out dx,al
  420bb0:	lock mov dh,0xd2
  420bb3:	sub    al,0x35
  420bb5:	std    
  420bb6:	push   0x92538f47
  420bbb:	adc    bh,al
  420bbd:	pop    ss
  420bbe:	sub    esi,DWORD PTR [esi+0x38]
  420bc1:	(bad)
  420bc5:	sbb    bl,BYTE PTR [ebp-0x693f1dff]
  420bcb:	gs inc ebx
  420bcd:	or     al,0x91
  420bcf:	(bad)  
  420bd0:	test   eax,0x7f5e6daf
  420bd5:	and    al,0x15
  420bd7:	test   BYTE PTR [edx+0x2961ebdf],bh
  420bdd:	icebp  
  420bde:	dec    ebx
  420bdf:	mov    ecx,0x16ff8dd3
  420be4:	mov    cl,0xe
  420be6:	stc    
  420be7:	add    BYTE PTR [esi],bl
  420be9:	pushf  
  420bea:	mov    ds:0xb3a9b4e9,eax
  420bef:	xor    eax,0xd0fcee3f
  420bf4:	adc    BYTE PTR [edi+0x38],cl
  420bf7:	and    BYTE PTR [eax+edi*2+0x67],dh
  420bfb:	add    BYTE PTR [ebp+0x6cac5989],bl
  420c01:	push   edi
  420c02:	and    cl,BYTE PTR [ecx-0x2e4168c4]
  420c08:	mov    eax,0xf2ab2453
  420c0d:	repz cmp edx,DWORD PTR es:[ebx-0x7a7e0359]
  420c15:	mov    al,0xa9
  420c17:	push   0xffffffb6
  420c19:	push   ds
  420c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c1b:	enter  0xe6d9,0x77
  420c1f:	pop    ss
  420c20:	jp     0x420bad
  420c22:	in     eax,dx
  420c23:	cdq    
  420c24:	lock in al,0x78
  420c27:	dec    ecx
  420c28:	iret   
  420c29:	adc    edi,ebp
  420c2b:	jo     0x420bf0
  420c2d:	popf   
  420c2e:	jp     0x420bbb
  420c30:	or     BYTE PTR [ecx+0xbc46ac4],bh
  420c36:	or     DWORD PTR [edx+esi*2-0x187b67f1],esi
  420c3d:	add    eax,0xb5194546
  420c42:	loopne 0x420bf5
  420c44:	dec    edx
  420c45:	pop    ebx
  420c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c47:	dec    ebp
  420c48:	inc    edi
  420c49:	int    0xad
  420c4b:	jmp    0x7c3b:0x44b6f848
  420c52:	ror    DWORD PTR [ebp+0x40],cl
  420c55:	pop    esp
  420c56:	dec    ebx
  420c57:	xchg   ebp,eax
  420c58:	cwde   
  420c59:	test   eax,0xb76b9411
  420c5e:	icebp  
  420c5f:	xchg   ecx,eax
  420c60:	ins    DWORD PTR es:[edi],dx
  420c61:	add    eax,0x993b01c8
  420c66:	cld    
  420c67:	cmp    DWORD PTR [eax+0x1c],eax
  420c6a:	lds    ebx,FWORD PTR [eax]
  420c6c:	out    0x53,al
  420c6e:	scas   al,BYTE PTR es:[edi]
  420c6f:	inc    eax
  420c70:	mov    bh,dh
  420c72:	inc    edi
  420c73:	cmc    
  420c74:	or     eax,0x39545b7f
  420c79:	sbb    eax,0x1c8a669
  420c7e:	push   0x914cda2e
  420c83:	lahf   
  420c84:	dec    ebp
  420c85:	or     al,0x6e
  420c87:	mov    ecx,0xe86643d8
  420c8c:	mov    cl,0xaa
  420c8e:	xchg   esi,eax
  420c8f:	mov    edx,0xd13e4d9e
  420c94:	jmp    FWORD PTR [esi-0x7dd70856]
  420c9a:	xchg   ebx,eax
  420c9b:	mov    WORD PTR [ebx],cs
  420c9d:	loopne 0x420c3c
  420c9f:	fidiv  DWORD PTR [ecx-0x6b02fdff]
  420ca5:	(bad)  
  420ca6:	sbb    DWORD PTR [edi],ebx
  420ca8:	sbb    DWORD PTR [edi],esi
  420caa:	push   cs
  420cab:	arpl   dx,bx
  420cad:	lahf   
  420cae:	pop    esi
  420caf:	mov    dh,0x34
  420cb1:	(bad)  
  420cb2:	fbstp  TBYTE PTR [esp+ebx*2-0x5602192f]
  420cb9:	mov    edx,0x55f0d213
  420cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cbf:	test   ecx,eax
  420cc1:	stc    
  420cc2:	sub    eax,0x2f265ff4
  420cc7:	adc    edi,DWORD PTR [ecx]
  420cc9:	popa   
  420cca:	jmp    FWORD PTR ds:0x8184e8c2
  420cd0:	(bad)  
  420cd1:	ror    dl,cl
  420cd3:	test   DWORD PTR [esi-0x5bb8ae89],edx
  420cd9:	or     al,0x8f
  420cdb:	scas   al,BYTE PTR es:[edi]
  420cdc:	fisubr DWORD PTR [ebp-0x7bf2e862]
  420ce3:	xchg   BYTE PTR [ebp+0x4064f35f],cl
  420ce9:	xor    BYTE PTR [esi-0x16f5ca08],ah
  420cef:	loop   0x420c82
  420cf1:	sub    ah,BYTE PTR [esi]
  420cf3:	fnsave [edx+edi*4-0x30]
  420cf7:	xor    DWORD PTR ds:0xac2eb8eb,edx
  420cfd:	ss jle 0x420d4b
  420d00:	mov    al,ds:0x917de694
  420d05:	mov    eax,ds:0x52cd0695
  420d0a:	cld    
  420d0b:	hlt    
  420d0c:	or     ebp,esi
  420d0e:	jae    0x420d20
  420d10:	int3   
  420d11:	fcmovu st,st(1)
  420d13:	adc    BYTE PTR [edi],ah
  420d15:	in     eax,0x53
  420d17:	inc    edx
  420d18:	xor    BYTE PTR [esi-0x39],bh
  420d1b:	inc    edx
  420d1c:	(bad)  
  420d1d:	popf   
  420d1e:	cmp    bh,BYTE PTR [edx]
  420d20:	push   edi
  420d21:	sbb    al,0x97
  420d23:	dec    esp
  420d24:	cdq    
  420d25:	adc    ebp,DWORD PTR [ebx]
  420d27:	mov    DWORD PTR [eax],0xfce68b1d
  420d2d:	and    BYTE PTR [edi],dl
  420d2f:	cmp    WORD PTR ds:0x614873e8,bp
  420d36:	inc    ecx
  420d37:	arpl   WORD PTR [esi+0x8],dx
  420d3a:	pushf  
  420d3b:	jmp    0xa48e6796
  420d40:	jb     0x420db9
  420d42:	and    BYTE PTR [ebx+0x7e69ea56],bh
  420d48:	push   ebp
  420d49:	test   eax,ecx
  420d4b:	push   eax
  420d4c:	mov    ebx,DWORD PTR [ebp+0x76af8ea6]
  420d52:	mov    edx,0x65e94cb1
  420d57:	lock rcl BYTE PTR [ecx+0x3fa233b5],cl
  420d5e:	xor    al,0x80
  420d60:	rol    DWORD PTR [ebx+0x2b95d4a5],0xef
  420d67:	repz adc BYTE PTR [edi],dl
  420d6a:	xor    BYTE PTR [eax+0x6310d753],bl
  420d70:	xchg   ebp,eax
  420d71:	loope  0x420dad
  420d73:	pop    esp
  420d74:	mov    dh,0x4a
  420d76:	ret    0x8a03
  420d79:	cdq    
  420d7a:	das    
  420d7b:	sbb    eax,0xa5de86bb
  420d80:	dec    ebx
  420d81:	mov    dl,BYTE PTR [edx+0x72285d2b]
  420d87:	clc    
  420d88:	and    ah,BYTE PTR [ecx-0x2ec903fa]
  420d8e:	sbb    ah,al
  420d90:	mov    ah,0x20
  420d92:	jg     0x420dea
  420d94:	loop   0x420deb
  420d96:	sti    
  420d97:	pop    ds
  420d98:	sub    dh,BYTE PTR [edi+eax*1]
  420d9b:	xchg   edx,eax
  420d9c:	and    edx,DWORD PTR [eax-0x13]
  420d9f:	mov    al,0xf1
  420da1:	int    0xb7
  420da3:	jns    0x420d88
  420da5:	pop    esi
  420da6:	pop    esp
  420da7:	push   eax
  420da8:	data16 jmp 0x420e10
  420dab:	lea    esi,[ecx]
  420dad:	mov    ah,BYTE PTR [esi+0x5d]
  420db0:	xor    al,0x18
  420db2:	mov    eax,0xfd7c0821
  420db7:	and    ah,BYTE PTR [esp+ecx*8]
  420dba:	shr    BYTE PTR [esi+edx*1],1
  420dbd:	ret    0x3738
  420dc0:	or     DWORD PTR [ecx+edx*1],esi
  420dc3:	push   esi
  420dc4:	pop    esi
  420dc5:	or     cl,bl
  420dc7:	cmp    ah,BYTE PTR [edi]
  420dc9:	and    DWORD PTR [eax-0x6],ebx
  420dcc:	sub    ecx,DWORD PTR [ebp-0xbbdde96]
  420dd2:	or     ebx,DWORD PTR [edi+0x9]
  420dd5:	shl    BYTE PTR [ebx-0x6],1
  420dd8:	scas   al,BYTE PTR es:[edi]
  420dd9:	jmp    0x420e01
  420ddb:	test   eax,0xecb428f6
  420de0:	sbb    BYTE PTR [ebx-0xbb66613],dh
  420de6:	(bad)  
  420de7:	loop   0x420d85
  420de9:	sub    BYTE PTR [ebx+0x18],dl
  420dec:	aam    0xdc
  420dee:	push   edx
  420def:	ret    
  420df0:	outs   dx,DWORD PTR ds:[esi]
  420df1:	sbb    dl,ah
  420df3:	loopne 0x420d89
  420df5:	adc    BYTE PTR [esi-0x7a],ch
  420df8:	dec    esp
  420df9:	inc    edi
  420dfa:	sbb    edx,DWORD PTR [ebx-0x23c0e629]
  420e00:	lods   al,BYTE PTR ds:[esi]
  420e01:	fbstp  TBYTE PTR [esi]
  420e03:	cs js  0x420e4f
  420e06:	xor    ch,dh
  420e08:	and    ah,BYTE PTR [ecx+0x28]
  420e0b:	xor    ebp,DWORD PTR [edi]
  420e0d:	mov    WORD PTR [esi-0x72],ds
  420e10:	arpl   WORD PTR [ebp-0x151a669e],ax
  420e16:	stos   BYTE PTR es:[edi],al
  420e17:	sti    
  420e18:	jmp    0x4568:0xc5ff57e8
  420e1f:	arpl   WORD PTR [esi],dx
  420e21:	mov    dh,0x13
  420e23:	nop
  420e24:	jo     0x420e3b
  420e26:	jb     0x420e22
  420e28:	push   0xffffffd3
  420e2a:	mov    edx,0x29f6ca43
  420e2f:	jle    0x420eaa
  420e31:	xchg   ebx,eax
  420e32:	pop    es
  420e33:	mov    ds:0xa5da538c,al
  420e38:	test   eax,0x4b2ee5c5
  420e3d:	iret   
  420e3e:	loop   0x420eb5
  420e40:	stc    
  420e41:	or     al,0x1a
  420e43:	aad    0x97
  420e45:	dec    esi
  420e46:	mov    WORD PTR [ebp-0x129f92e6],?
  420e4c:	or     al,0x60
  420e4e:	or     al,0xf0
  420e50:	cmp    ch,BYTE PTR [eax+0x1b]
  420e53:	xchg   esi,eax
  420e54:	push   eax
  420e55:	jo     0x420e6b
  420e57:	(bad)  
  420e58:	hlt    
  420e59:	adc    eax,0xd3713589
  420e5e:	xlat   BYTE PTR ds:[ebx]
  420e5f:	and    dh,al
  420e61:	outs   dx,BYTE PTR ds:[esi]
  420e62:	(bad)  
  420e63:	cld    
  420e64:	adc    DWORD PTR [edi+0x6e911f25],esp
  420e6a:	outs   dx,DWORD PTR ds:[esi]
  420e6b:	fist   DWORD PTR [ecx-0x23]
  420e6e:	popa   
  420e6f:	cmp    DWORD PTR [ecx-0x557bd624],0x3d
  420e76:	push   0xffffff8a
  420e78:	pop    es
  420e79:	aas    
  420e7a:	sbb    bl,BYTE PTR [eax]
  420e7c:	lds    ebp,FWORD PTR [ebp-0x50ef1ea8]
  420e82:	inc    esi
  420e83:	fidiv  DWORD PTR [eax]
  420e85:	retf   
  420e86:	xor    al,0xcc
  420e88:	xor    DWORD PTR [edi+ebx*1-0x1],0xb1059ff0
  420e90:	fisttp DWORD PTR [edx+0x4c8fd3e3]
  420e96:	data16 loope 0x420f06
  420e99:	(bad)  
  420e9a:	in     eax,dx
  420e9b:	scas   al,BYTE PTR es:[edi]
  420e9c:	shl    BYTE PTR [edi],1
  420e9e:	ret    
  420e9f:	leave  
  420ea0:	jecxz  0x420eac
  420ea2:	inc    edx
  420ea3:	into   
  420ea4:	pop    ebx
  420ea5:	pop    edi
  420ea6:	loop   0x420ead
  420ea8:	hlt    
  420ea9:	call   0xc350:0x9e83a741
  420eb0:	and    DWORD PTR [edx+0x36],0x1cd50a2e
  420eb7:	popa   
  420eb8:	(bad)  
  420eb9:	out    0x3d,al
  420ebb:	dec    DWORD PTR ds:0x42743740
  420ec1:	xchg   BYTE PTR [edi],ah
  420ec3:	add    bh,al
  420ec5:	adc    al,BYTE PTR [ebp-0x8e2507d]
  420ecb:	fisub  WORD PTR [ebp+eax*2-0x2475a021]
  420ed2:	push   ecx
  420ed3:	mov    eax,ds:0x343cc5e5
  420ed8:	repz inc eax
  420eda:	(bad)  
  420edb:	push   edx
  420edc:	sahf   
  420edd:	or     eax,0x6eb2bdc9
  420ee2:	push   es
  420ee3:	jp     0x420f63
  420ee5:	enter  0x5448,0x49
  420ee9:	xchg   ecx,eax
  420eea:	cmc    
  420eeb:	and    eax,0x2dc04494
  420ef0:	call   0x11ef8d72
  420ef5:	or     BYTE PTR [esi],0xe4
  420ef8:	push   esi
  420ef9:	push   edx
  420efa:	das    
  420efb:	into   
  420efc:	punpcklbw mm2,DWORD PTR [edx]
  420eff:	xor    BYTE PTR [edx+0x7051da74],bh
  420f05:	xchg   ebx,eax
  420f06:	test   eax,0xa9ad9db3
  420f0b:	mov    edi,0x13bfe33f
  420f10:	in     eax,dx
  420f11:	das    
  420f12:	push   cs
  420f13:	ret    
  420f14:	jl     0x420ef3
  420f16:	call   0xc945:0xa63b2261
  420f1d:	sub    al,0x24
  420f1f:	dec    ecx
  420f20:	cmp    eax,0x8300b84d
  420f25:	xchg   ebp,eax
  420f26:	mov    al,0x80
  420f28:	dec    ecx
  420f29:	mov    dh,0xf8
  420f2b:	or     al,0xb0
  420f2d:	xor    eax,0x5da4f794
  420f32:	adc    eax,0x58de13b4
  420f37:	sar    dh,cl
  420f39:	lahf   
  420f3a:	call   0xfa7cfe5a
  420f3f:	loopne 0x420ee4
  420f41:	call   0x91637645
  420f46:	pop    ebx
  420f47:	adc    edi,ecx
  420f49:	outs   dx,BYTE PTR ds:[esi]
  420f4a:	(bad)  
  420f4b:	push   ebp
  420f4c:	fisttp QWORD PTR [esi]
  420f4e:	jno    0x420fc3
  420f50:	jg     0x420fc4
  420f52:	sub    al,0xcb
  420f54:	mov    ebp,DWORD PTR [eax]
  420f56:	push   ecx
  420f57:	cmc    
  420f58:	jg     0x420fcc
  420f5a:	fwait
  420f5b:	pop    esi
  420f5c:	dec    esp
  420f5d:	xor    edi,esp
  420f5f:	mov    dl,BYTE PTR [eax+0x6de4c795]
  420f65:	mov    DWORD PTR [edx+0x3033e51],eax
  420f6b:	jle    0x420f54
  420f6d:	add    bl,cl
  420f6f:	retf   
  420f70:	cmp    cl,dh
  420f72:	push   0xaa58e27d
  420f77:	call   FWORD PTR [edi]
  420f79:	inc    eax
  420f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f7b:	mov    ecx,0x4db17b8d
  420f80:	add    ah,BYTE PTR [edi]
  420f82:	sub    BYTE PTR [eax-0x2],0x15
  420f86:	sub    eax,0x387d6682
  420f8b:	jg     0x420fd7
  420f8d:	hlt    
  420f8e:	sbb    bh,BYTE PTR [ebx]
  420f90:	sahf   
  420f91:	xor    BYTE PTR [edx+0x65],al
  420f94:	fidivr DWORD PTR [esi]
  420f96:	sti    
  420f97:	xor    DWORD PTR [ebp-0x16],edi
  420f9a:	out    dx,eax
  420f9b:	jecxz  0x420f64
  420f9d:	push   0x28deb5ea
  420fa2:	popf   
  420fa3:	ret    0xef46
  420fa6:	lea    eax,[esi-0x49]
  420fa9:	dec    ecx
  420faa:	loop   0x420ff8
  420fac:	adc    al,0xa5
  420fae:	pop    ecx
  420faf:	sbb    bl,BYTE PTR [edi]
  420fb1:	imul   esi,DWORD PTR gs:0x4734aade,0xffffffa4
  420fb9:	cdq    
  420fba:	daa    
  420fbb:	jbe    0x421038
  420fbd:	not    DWORD PTR [eax+0x65580bdf]
  420fc3:	das    
  420fc4:	fwait
  420fc5:	out    0x13,eax
  420fc7:	jg     0x420f8b
  420fc9:	add    al,0x8f
  420fcb:	bound  esi,QWORD PTR [ebx]
  420fcd:	mov    edx,0xbdb381b8
  420fd2:	aas    
  420fd3:	mov    eax,0x81ccc52e
  420fd8:	mov    edx,0xa7f6602d
  420fdd:	xlat   BYTE PTR ds:[ebx]
  420fde:	cmp    DWORD PTR [ebx+esi*4+0x77],ebx
  420fe2:	ret    
  420fe3:	or     BYTE PTR [eax],dh
  420fe5:	xchg   edx,eax
  420fe6:	retf   
  420fe7:	pop    edx
  420fe8:	int3   
  420fe9:	cmc    
  420fea:	std    
  420feb:	or     edi,DWORD PTR [ebx+0x8]
  420fee:	(bad)  
  420fef:	pop    ebx
  420ff0:	sbb    eax,0xbaa57c9a
  420ff5:	mov    bl,0x56
  420ff7:	inc    esi
  420ff8:	leave  
  420ff9:	xor    esi,DWORD PTR [edi+0x63]
  420ffc:	scas   eax,DWORD PTR es:[edi]
  420ffd:	mov    eax,DWORD PTR [esp+edx*8]
  421000:	pusha  
  421001:	cmp    al,0xb
  421003:	nop
  421004:	jmp    0x421001
  421006:	fnstsw WORD PTR [eax+0x77]
  421009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42100a:	fsubr  DWORD PTR [edx-0x700e427a]
  421010:	fdiv   QWORD PTR ds:0x911df782
  421016:	mov    al,ds:0x5031130f
  42101b:	(bad)  [edi+0x21]
  42101e:	(bad)  
  42101f:	mov    al,0xb3
  421021:	and    BYTE PTR [esi],dh
  421023:	mov    ch,0xbd
  421025:	jmp    0xd9d52fd
  42102a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42102b:	mov    ecx,0x9ff11883
  421030:	inc    edx
  421031:	sti    
  421032:	out    0x63,eax
  421034:	repnz or al,0x7c
  421037:	adc    BYTE PTR [ebx-0x15e6ade0],dh
  42103d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42103e:	ror    BYTE PTR [eax-0x7d],1
  421041:	out    0x3c,al
  421043:	sbb    DWORD PTR [esi+0x713da70b],0xf04c1f7b
  42104d:	jnp    0x421085
  42104f:	clc    
  421050:	jecxz  0x4210a5
  421052:	push   edx
  421053:	adc    BYTE PTR es:[ecx],dl
  421056:	fild   DWORD PTR [ebp-0x5b]
  42105a:	mov    cl,0xa8
  42105c:	xor    BYTE PTR [ebx+0x1b],cl
  42105f:	or     BYTE PTR [ebx+ebp*2-0x7e7f0d19],cl
  421066:	xor    esi,DWORD PTR [eax-0x61]
  421069:	push   esp
  42106a:	sbb    BYTE PTR [edx-0xd],bl
  42106d:	inc    edx
  42106e:	jno    0x420ff7
  421070:	sub    esp,DWORD PTR [eax-0x67253b71]
  421076:	dec    esp
  421077:	in     al,0xfa
  421079:	ja     0x421051
  42107b:	in     al,0x48
  42107d:	push   esi
  42107e:	inc    esp
  42107f:	jo     0x421026
  421081:	push   0xfffffff7
  421083:	(bad)  
  421084:	cmp    eax,DWORD PTR [eax+ebx*2-0x4d382c4c]
  42108b:	in     al,0xf8
  42108d:	push   edi
  42108e:	xchg   ecx,eax
  42108f:	aas    
  421090:	scas   al,BYTE PTR es:[edi]
  421091:	lods   al,BYTE PTR ds:[esi]
  421092:	pop    ecx
  421093:	push   cs
  421094:	jmp    0x5ae0efaa
  421099:	xor    BYTE PTR [edx+0x374a2671],0x8f
  4210a0:	mov    cl,0xc2
  4210a2:	xchg   ebp,eax
  4210a3:	inc    ebx
  4210a4:	jmp    0x4210a2
  4210a6:	inc    ebp
  4210a7:	jb     0x421079
  4210a9:	call   0x42db:0xd877c28e
  4210b0:	out    dx,al
  4210b1:	xor    al,0xaa
  4210b3:	inc    esp
  4210b4:	xor    eax,DWORD PTR [eax]
  4210b6:	mov    esi,0xf12d63d4
  4210bb:	jmp    0xce3e46d0
  4210c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c1:	or     DWORD PTR [ecx],eax
  4210c3:	xor    esi,ebx
  4210c5:	ror    esi,cl
  4210c7:	(bad)  
  4210c8:	cmp    BYTE PTR [ebx],ah
  4210ca:	es lock daa 
  4210cd:	fdiv   QWORD PTR ds:0x89734ba9
  4210d3:	pop    ebp
  4210d4:	test   al,0x8b
  4210d6:	not    BYTE PTR [edi+0x652829d3]
  4210dc:	ins    DWORD PTR es:[edi],dx
  4210dd:	xchg   ecx,eax
  4210de:	mov    eax,ds:0x8e6a930c
  4210e3:	cmp    DWORD PTR [ebx+ecx*4],ebx
  4210e6:	iret   
  4210e7:	ret    
  4210e8:	arpl   WORD PTR [eax],ax
  4210ea:	ja     0x4210f3
  4210ec:	cwde   
  4210ed:	sbb    eax,0xcbf889b4
  4210f2:	mov    ebx,0x704b1c46
  4210f7:	hlt    
  4210f8:	cs or  al,0x7f
  4210fb:	loop   0x4210fc
  4210fd:	mov    eax,0x99f7d1bf
  421102:	xchg   esi,eax
  421103:	data16 mov al,ds:0xf3a1d04e
  421109:	leave  
  42110a:	iret   
  42110b:	lods   al,BYTE PTR ds:[esi]
  42110c:	(bad)  
  42110e:	xchg   ecx,eax
  42110f:	adc    eax,0x58435e93
  421114:	or     esp,DWORD PTR [edx+eiz*8-0x4e34b12a]
  42111b:	mov    al,ds:0x6d5e7daa
  421120:	add    eax,DWORD PTR [ecx]
  421122:	mul    BYTE PTR [edi]
  421124:	std    
  421125:	rol    DWORD PTR [ebx+0x1b],0xd5
  421129:	dec    edx
  42112a:	sbb    DWORD PTR [edi-0x26],0xffffffcf
  42112e:	pop    es
  42112f:	test   BYTE PTR ds:0x124d781,0xda
  421136:	cmp    BYTE PTR [edx-0x1e],dh
  421139:	loop   0x42118b
  42113b:	sub    eax,0x709d26dc
  421140:	(bad)  
  421141:	fucomip st,st(5)
  421143:	out    dx,eax
  421144:	test   BYTE PTR [ebx+esi*8+0x7f],dl
  421148:	cmc    
  421149:	out    0x62,eax
  42114b:	test   BYTE PTR [eax+0x36],bl
  42114e:	and    eax,0xc0517b01
  421153:	loop   0x421155
  421155:	fwait
  421156:	aam    0xe9
  421158:	or     eax,0x1522bb97
  42115d:	add    DWORD PTR [edi+0x415ff348],ebp
  421163:	outs   dx,DWORD PTR ds:[esi]
  421164:	lock test eax,0x9dba9234
  42116a:	jp     0x421154
  42116c:	add    eax,0xe2d918ff
  421171:	jp     0x421187
  421173:	rcl    BYTE PTR [ebp+0x5a],0x75
  421177:	push   ebp
  421178:	sub    al,0xdf
  42117a:	jmp    0x99cd:0x40adb39c
  421181:	scas   al,BYTE PTR es:[edi]
  421182:	pop    ds
  421183:	mov    dh,0xb4
  421185:	aas    
  421186:	ins    DWORD PTR es:[edi],dx
  421187:	xchg   esp,eax
  421188:	out    0x72,al
  42118a:	dec    esi
  42118b:	shr    DWORD PTR [edx+0x3b1c670a],0x85
  421192:	jne    0x421118
  421194:	add    DWORD PTR [ecx+0x1d6ad856],0x33
  42119b:	mov    dh,0xd6
  42119d:	mov    dh,0x69
  42119f:	jp     0x421215
  4211a1:	jnp    0x4211e5
  4211a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a4:	clc    
  4211a5:	jecxz  0x42119b
  4211a7:	ds pop ecx
  4211a9:	push   ecx
  4211aa:	sahf   
  4211ab:	cmp    al,BYTE PTR [ecx-0x5]
  4211ae:	test   BYTE PTR [ebp+0x186009c4],al
  4211b4:	sbb    BYTE PTR [edx+edx*2],bl
  4211b7:	dec    eax
  4211b8:	addr16 loope 0x4211f3
  4211bb:	mov    edx,0x2326d68b
  4211c0:	jnp    0x42123e
  4211c2:	mov    bh,0xf1
  4211c4:	jmp    DWORD PTR [ecx+0x74]
  4211c7:	ja     0x4211cf
  4211c9:	mov    bl,0x81
  4211cb:	mov    esp,0xf8da706d
  4211d0:	inc    ecx
  4211d1:	stos   BYTE PTR es:[edi],al
  4211d2:	or     edi,DWORD PTR [ebx]
  4211d4:	cmp    edi,eax
  4211d6:	add    al,0xc5
  4211d8:	fidivr DWORD PTR [edx]
  4211da:	xchg   edi,eax
  4211db:	and    eax,0xe262f273
  4211e0:	addr16 dec edx
  4211e2:	inc    ecx
  4211e3:	loope  0x4211b2
  4211e5:	retf   0xd7de
  4211e8:	out    dx,al
  4211e9:	cli    
  4211ea:	or     eax,0x90c93de8
  4211ef:	cmc    
  4211f0:	in     al,0xb4
  4211f2:	sub    ah,0xb4
  4211f5:	aas    
  4211f6:	xlat   BYTE PTR ds:[ebx]
  4211f7:	call   0x12f0a094
  4211fc:	push   esi
  4211fd:	mov    esi,0xb94df564
  421202:	push   ds
  421203:	aam    0xd8
  421205:	adc    al,0xec
  421207:	xor    al,0xe9
  421209:	scas   al,BYTE PTR es:[edi]
  42120a:	or     BYTE PTR [edx+0x5],0xc0
  42120e:	loopne 0x421227
  421210:	and    BYTE PTR [esi+0xa],ah
  421213:	inc    esi
  421214:	and    DWORD PTR [ecx+0x1d8b1b36],ebx
  42121a:	mov    esp,0x3f1d0c25
  42121f:	xor    DWORD PTR [edx+0x4c],ebp
  421222:	ss inc ebx
  421224:	jo     0x421279
  421226:	in     eax,dx
  421227:	cmp    eax,0x69ee7660
  42122c:	out    0x80,eax
  42122e:	and    dh,BYTE PTR [ebx+edx*8]
  421231:	cdq    
  421232:	dec    ebx
  421233:	mov    ch,BYTE PTR ds:0xbe8f82ea
  421239:	aad    0x9d
  42123b:	sbb    edx,ecx
  42123d:	add    esi,DWORD PTR [eax-0x6c]
  421240:	or     ch,BYTE PTR [eax-0x1ff24616]
  421246:	jge    0x42123f
  421248:	into   
  421249:	pop    edx
  42124a:	push   esi
  42124b:	arpl   WORD PTR [ecx+edi*8],cx
  42124e:	cmp    ebx,esi
  421250:	retf   
  421251:	xchg   edi,eax
  421252:	rcr    DWORD PTR ds:0x669b7ddd,1
  421258:	xchg   ebx,eax
  421259:	shl    BYTE PTR [ebp+0x3e],cl
  42125c:	sbb    eax,0x104618d
  421261:	xchg   edi,eax
  421262:	mov    ds:0xc942cf66,al
  421267:	inc    ebx
  421268:	adc    esp,DWORD PTR [edx]
  42126a:	add    BYTE PTR [esi+0x74f74a46],dl
  421270:	dec    ebx
  421271:	push   esi
  421272:	adc    DWORD PTR [edi+esi*1-0x2],0x53d0e6c6
  42127a:	(bad)  
  42127b:	in     al,dx
  42127c:	outs   dx,BYTE PTR ds:[esi]
  42127d:	jmp    0x6a52:0x94d19487
  421284:	outs   dx,BYTE PTR ds:[esi]
  421285:	sbb    eax,0x4018a96f
  42128a:	retf   
  42128b:	mov    edi,0x150d2384
  421290:	sbb    al,0x65
  421292:	mov    al,ds:0x1f08bfcd
  421297:	ret    
  421298:	sar    BYTE PTR [ebx-0x23],1
  42129b:	fcomp  st(4)
  42129d:	push   ss
  42129e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42129f:	mov    edx,0xd6da39c6
  4212a4:	retf   0x248f
  4212a7:	mov    bl,0xc6
  4212a9:	mov    ch,0xe3
  4212ab:	adc    DWORD PTR [ebx],edi
  4212ad:	jg     0x421308
  4212af:	adc    bl,BYTE PTR [edi+eax*1]
  4212b2:	imul   esp,DWORD PTR [ebp-0x12],0xffffffe5
  4212b6:	mov    dl,0x79
  4212b8:	mov    eax,0x52334147
  4212bd:	icebp  
  4212be:	mov    ebx,0xb730976c
  4212c3:	popa   
  4212c4:	mov    ds:0xcc78162b,eax
  4212c9:	(bad)  
  4212ca:	xchg   edi,eax
  4212cb:	inc    ebp
  4212cc:	in     al,dx
  4212cd:	fstp   TBYTE PTR [ebp+esi*4+0x33]
  4212d1:	jnp    0x421331
  4212d3:	mov    es,WORD PTR fs:[esi]
  4212d6:	cmp    eax,0xf9418002
  4212db:	int3   
  4212dc:	les    eax,FWORD PTR ds:[edi+ebx*2+0x69846523]
  4212e4:	jl     0x4212fc
  4212e6:	push   ecx
  4212e7:	bound  edx,QWORD PTR [edx-0x79]
  4212ea:	adc    al,0xa2
  4212ec:	push   esp
  4212ed:	sti    
  4212ee:	addr16 fcos 
  4212f1:	sub    cl,BYTE PTR [esi+0x14ca5760]
  4212f7:	in     al,dx
  4212f8:	xchg   DWORD PTR [edi-0x38],edx
  4212fb:	in     al,0x5b
  4212fd:	bound  ebp,QWORD PTR [edi]
  4212ff:	mov    eax,0xdb9b0c99
  421304:	jnp    0x4212c2
  421306:	imul   esi,ebp,0xffffff85
  421309:	loop   0x42131d
  42130b:	outs   dx,DWORD PTR ds:[esi]
  42130c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42130d:	mov    ?,ebx
  42130f:	jne    0x4212af
  421311:	xchg   DWORD PTR [edx+0xef74e8c],esi
  421317:	ins    BYTE PTR es:[edi],dx
  421318:	and    eax,0xbd9d8311
  42131d:	sar    ah,cl
  42131f:	cs cdq 
  421321:	jb     0x4212fa
  421323:	jg     0x4212aa
  421325:	nop
  421326:	iret   
  421327:	adc    al,0x1b
  421329:	mov    esi,DWORD PTR [esp+ebx*8-0x79]
  42132d:	sbb    dh,BYTE PTR [ebp-0x30]
  421330:	xor    eax,0x2f1bd9b0
  421335:	mov    ecx,DWORD PTR [ebp-0x12]
  421338:	mov    ecx,DWORD PTR [edx]
  42133a:	scas   al,BYTE PTR es:[edi]
  42133b:	repz inc eax
  42133d:	push   ss
  42133e:	xchg   esp,eax
  42133f:	sahf   
  421340:	out    0xb1,eax
  421342:	jl     0x4212df
  421344:	loop   0x421321
  421346:	cmp    DWORD PTR [ecx],edx
  421348:	mov    ah,0x6b
  42134a:	mov    edx,0x76182bc3
  42134f:	or     al,0xf3
  421351:	add    BYTE PTR [esi],dl
  421353:	popf   
  421354:	fisub  DWORD PTR [ebx-0xdea57d9]
  42135a:	in     al,0x97
  42135c:	push   eax
  42135d:	adc    bh,bl
  42135f:	adc    esi,DWORD PTR [esi+0x315706c8]
  421365:	push   cs
  421366:	fld    DWORD PTR [ebp+0x24]
  421369:	xchg   edi,eax
  42136a:	sub    al,0x15
  42136c:	sti    
  42136d:	int    0xee
  42136f:	stc    
  421370:	stos   BYTE PTR es:[edi],al
  421371:	sub    ebx,DWORD PTR [ebx]
  421373:	mov    dl,0xf
  421375:	loope  0x4213e2
  421377:	fild   DWORD PTR ds:0xda7b9f8
  42137d:	mov    ch,0x19
  42137f:	div    DWORD PTR [ecx]
  421381:	popf   
  421382:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421384:	fucomip st,st(1)
  421386:	sub    dl,BYTE PTR [edi+0x28]
  421389:	mov    ah,0x1d
  42138b:	mov    eax,ds:0xa7430a74
  421390:	push   ss
  421391:	xor    ebp,DWORD PTR [eax+ecx*1+0x36]
  421395:	adc    al,0x49
  421397:	jne    0x42138e
  421399:	push   eax
  42139a:	test   eax,0x2b44b871
  42139f:	mov    dh,0x1f
  4213a1:	mov    ecx,0xf2d3f508
  4213a6:	js     0x4213c9
  4213a8:	outs   dx,BYTE PTR ds:[esi]
  4213a9:	outs   dx,BYTE PTR ds:[esi]
  4213aa:	push   ecx
  4213ab:	xchg   edx,eax
  4213ac:	lock jae 0x4213a6
  4213af:	add    edi,DWORD PTR ds:0x6ffa8d76
  4213b5:	inc    edi
  4213b6:	pop    edx
  4213b7:	jle    0x4213f4
  4213b9:	(bad)  [ebx]
  4213bb:	dec    ebp
  4213bc:	dec    ebp
  4213bd:	dec    edx
  4213be:	stc    
  4213bf:	push   eax
  4213c0:	stc    
  4213c1:	int3   
  4213c2:	mov    edx,0x24e38b9a
  4213c7:	sub    al,0x52
  4213c9:	cmp    BYTE PTR [ebx],bl
  4213cb:	fs (bad) 
  4213cd:	pushf  
  4213ce:	sub    DWORD PTR [esi],eax
  4213d0:	outs   dx,DWORD PTR ds:[esi]
  4213d1:	sub    esp,DWORD PTR [edi-0x51]
  4213d4:	inc    esp
  4213d5:	add    esi,ebp
  4213d7:	jmp    0x4213cf
  4213d9:	xor    eax,0x513e6f36
  4213de:	xor    DWORD PTR [edx],esp
  4213e0:	aad    0xd4
  4213e2:	inc    esi
  4213e3:	out    dx,eax
  4213e4:	adc    DWORD PTR [edx+0x2917f36e],edx
  4213ea:	inc    eax
  4213eb:	dec    esp
  4213ec:	sbb    edi,DWORD PTR [ebx-0x4737c290]
  4213f2:	and    eax,0xca9fc87b
  4213f7:	adc    dh,BYTE PTR [ecx+ecx*8]
  4213fa:	sub    al,0x14
  4213fc:	jmp    0xca31f470
  421401:	or     eax,0xdced6863
  421406:	jge    0x4213f5
  421408:	pop    es
  421409:	ret    
  42140a:	xlat   BYTE PTR ds:[ebx]
  42140b:	add    eax,0x8284d3ca
  421410:	xor    esi,eax
  421412:	lods   eax,DWORD PTR ds:[esi]
  421413:	(bad)  
  421414:	jmp    0x421398
  421416:	inc    ebp
  421417:	mov    DWORD PTR ds:0x7a97a36d,0xe5021cb2
  421421:	(bad)  
  421422:	imul   ebp,DWORD PTR [ebx-0xc],0x48
  421426:	hlt    
  421427:	jge    0x4213cc
  421429:	mov    al,ds:0xed5c68e1
  42142e:	scas   eax,DWORD PTR es:[edi]
  42142f:	loopne 0x42147e
  421431:	pop    ecx
  421432:	mov    ?,WORD PTR [eax-0x3cbb467e]
  421438:	mov    edi,0xd4068082
  42143d:	call   0x9b14:0xb03d95a5
  421444:	mov    eax,0xffa2a7e8
  421449:	and    eax,0x9f1fd5fb
  42144e:	aad    0xdc
  421450:	mov    al,0x94
  421452:	dec    ecx
  421453:	xchg   DWORD PTR fs:[ebx-0x358aa7ca],ecx
  42145a:	push   ds
  42145b:	jmp    0x42147f
  42145d:	add    eax,0xcf0474c3
  421462:	mov    edx,DWORD PTR [eax+0x14]
  421465:	mov    ecx,DWORD PTR [eax+0x710630e0]
  42146b:	inc    eax
  42146c:	or     ebx,edi
  42146e:	ret    
  42146f:	cld    
  421470:	cmp    eax,0xb49e614
  421475:	dec    ecx
  421476:	xor    eax,0x6a2c2903
  42147b:	sub    DWORD PTR [ebp+0x5cb4e39e],ebp
  421481:	xchg   edi,eax
  421482:	jp     0x4214d0
  421484:	loopne 0x4214ac
  421486:	adc    al,0xe6
  421488:	pop    ss
  421489:	xchg   esi,eax
  42148a:	dec    esi
  42148b:	(bad)  
  42148c:	xchg   edx,eax
  42148d:	enter  0xcd8b,0x9b
  421491:	xchg   edx,eax
  421492:	mov    al,ds:0xfc596b3c
  421497:	lldt   WORD PTR [eax]
  42149a:	dec    eax
  42149b:	mov    esp,0xb5e66665
  4214a0:	jnp    0x421507
  4214a2:	xlat   BYTE PTR ds:[ebx]
  4214a3:	scas   al,BYTE PTR es:[edi]
  4214a4:	adc    ch,BYTE PTR [ebx-0x7b]
  4214a7:	rcl    dh,cl
  4214a9:	add    edx,edi
  4214ab:	je     0x421521
  4214ad:	jno    0x421443
  4214af:	mov    ebp,DWORD PTR [ecx]
  4214b1:	ins    BYTE PTR es:[edi],dx
  4214b2:	loope  0x4214b7
  4214b4:	retf   0x5e92
  4214b7:	stc    
  4214b8:	mov    ds:0x27896c06,al
  4214bd:	xchg   esp,eax
  4214be:	std    
  4214bf:	gs js  0x4214d3
  4214c2:	call   0xfb5e499e
  4214c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214c9:	aaa    
  4214ca:	mov    bh,BYTE PTR [ebx+0x1f9f78a5]
  4214d0:	mov    esi,0xa220f999
  4214d5:	iret   
  4214d6:	dec    edi
  4214d7:	cli    
  4214d8:	cwde   
  4214d9:	dec    edi
  4214da:	lods   al,BYTE PTR ds:[esi]
  4214db:	ja     0x421557
  4214dd:	pop    esp
  4214de:	(bad)  
  4214df:	jg     0x421472
  4214e1:	and    eax,0xacdf6b8d
  4214e6:	rol    BYTE PTR [esi],1
  4214e8:	lea    esp,[ecx-0x69]
  4214eb:	jge    0x42150a
  4214ed:	nop
  4214ee:	and    DWORD PTR [edi+0x56],0x2
  4214f2:	jmp    0x4214f9
  4214f4:	push   eax
  4214f5:	inc    ebp
  4214f6:	daa    
  4214f7:	fwait
  4214f8:	repz imul ebp,DWORD PTR [edx-0x48614932],0xa101608e
  421503:	jp     0x421570
  421505:	adc    DWORD PTR [edi],ecx
  421507:	mov    ebp,0xe5502a4a
  42150c:	fs pop esp
  42150e:	xchg   esp,eax
  42150f:	lods   al,BYTE PTR ds:[esi]
  421510:	mov    ss,WORD PTR [edi]
  421512:	jns    0x421501
  421514:	cdq    
  421515:	shl    ebx,1
  421517:	test   eax,0xc492c47
  42151c:	sub    BYTE PTR [edx],bl
  42151e:	mov    al,ds:0x8fe7c4a6
  421523:	fistp  WORD PTR [ebx+0x7ba59d35]
  421529:	jmp    0xe202:0x8a148788
  421530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421531:	fcmovnb st,st(5)
  421533:	inc    esi
  421534:	pop    ebx
  421535:	adc    ecx,ecx
  421537:	mov    bh,0xcf
  421539:	mov    ecx,DWORD PTR ds:[esi+0x17]
  42153d:	sub    ch,BYTE PTR [ebx]
  42153f:	adc    esi,DWORD PTR [edx-0x726925d]
  421545:	inc    ebp
  421546:	inc    ebx
  421547:	or     DWORD PTR [edi+0x58],0xfffffff1
  42154b:	stc    
  42154c:	cwde   
  42154d:	in     eax,0xd0
  42154f:	xor    eax,0xd8efd775
  421554:	dec    ebp
  421555:	repnz (bad) 
  421557:	mov    ebx,0xf3f9b953
  42155c:	out    0x65,eax
  42155e:	data16 icebp 
  421560:	(bad)  
  421561:	ss or  eax,0x20423ae3
  421567:	and    DWORD PTR [ebp-0x6e],0x5618f1be
  42156e:	lods   al,BYTE PTR ds:[esi]
  42156f:	mov    esp,0xeb6c4f44
  421574:	loopne 0x421578
  421576:	sbb    bl,BYTE PTR [eax-0x3c]
  421579:	jmp    0x42155b
  42157b:	test   al,0xa2
  42157d:	lock jno 0x421502
  421580:	in     al,dx
  421581:	sbb    BYTE PTR [ebx],dh
  421583:	pop    edi
  421584:	in     eax,dx
  421585:	aas    
  421586:	fst    st(0)
  421588:	xor    al,0x6c
  42158a:	sub    eax,0x6402580c
  42158f:	fistp  WORD PTR [edi]
  421591:	shr    DWORD PTR [esi+0x76],1
  421594:	mov    ss,ebp
  421596:	enter  0x1065,0x6f
  42159a:	mov    eax,ds:0xcc1e184b
  42159f:	add    al,0x4d
  4215a1:	mov    ch,0xc5
  4215a3:	mov    ah,0xaa
  4215a5:	fisubr DWORD PTR [ebp-0x46036e93]
  4215ab:	mov    ebp,0xa29b1625
  4215b0:	jl     0x421537
  4215b2:	mov    ebx,0xcff26e65
  4215b7:	mov    ecx,0x34dff883
  4215bc:	xor    esi,esi
  4215be:	mov    al,ds:0x95ebf8f6
  4215c3:	mov    edx,0x83731716
  4215c8:	fiadd  DWORD PTR [esi+0x6bb1ffcb]
  4215ce:	xchg   edi,eax
  4215cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215d0:	dec    eax
  4215d1:	lock push edx
  4215d3:	inc    ebp
  4215d4:	xchg   ebx,eax
  4215d5:	pop    es
  4215d6:	stc    
  4215d7:	dec    edi
  4215d8:	push   ss
  4215d9:	lahf   
  4215da:	rcl    DWORD PTR [ecx+ebp*4],cl
  4215dd:	pop    ebp
  4215de:	cld    
  4215df:	mov    ch,BYTE PTR [eax]
  4215e1:	es in  al,dx
  4215e3:	xchg   edi,ecx
  4215e5:	mov    sp,0x4292
  4215e9:	icebp  
  4215ea:	pop    ebx
  4215eb:	arpl   WORD PTR [esi-0x27b90f93],bx
  4215f1:	mov    BYTE PTR [ebx],bh
  4215f3:	xchg   esi,eax
  4215f4:	fwait
  4215f5:	out    0xbb,al
  4215f7:	mov    ebx,0x3094f6ff
  4215fc:	(bad)  
  4215fe:	mov    ah,0x43
  421600:	push   ecx
  421601:	adc    al,0x6f
  421603:	jmp    0x35dd8729
  421608:	(bad)  
  421609:	pusha  
  42160a:	pop    ss
  42160b:	and    eax,0x1d227734
  421610:	cmc    
  421611:	test   dh,bl
  421613:	scas   eax,DWORD PTR es:[edi]
  421614:	cdq    
  421615:	xchg   BYTE PTR [ecx+0x56bbce14],ch
  42161b:	call   0x7c7b:0x7ad2b7e2
  421622:	rcl    BYTE PTR [ebx+0x3e9b122c],1
  421628:	pop    eax
  421629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42162a:	pusha  
  42162b:	in     eax,dx
  42162c:	test   eax,0x1270a7c1
  421631:	fsubr  QWORD PTR [esi]
  421633:	xchg   DWORD PTR [eax+0x16],edi
  421636:	iret   
  421637:	push   esp
  421638:	and    eax,0xdde6be1d
  42163d:	push   ss
  42163e:	stos   DWORD PTR es:[edi],eax
  42163f:	call   0x762f34ac
  421644:	nop    DWORD PTR [edx-0xb]
  421648:	sti    
  421649:	jge    0x421625
  42164b:	add    DWORD PTR [ebp-0x40b0f683],edx
  421651:	xchg   ecx,eax
  421652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421653:	xor    al,0xe
  421655:	mov    ds:0x8448455f,al
  42165a:	ficomp DWORD PTR [edi+ebx*4-0x7f45cb9f]
  421661:	aaa    
  421662:	das    
  421663:	cmp    al,0x96
  421665:	xchg   ebx,eax
  421666:	xchg   ebx,eax
  421667:	jmp    0x421646
  421669:	sub    al,0x8c
  42166b:	imul   edx,DWORD PTR [ebx],0x401b2e2
  421671:	movaps xmm2,XMMWORD PTR [esi-0x4a]
  421675:	test   al,0x8c
  421677:	in     al,dx
  421678:	jecxz  0x421619
  42167a:	dec    eax
  42167b:	adc    edx,DWORD PTR [edi]
  42167d:	dec    ebp
  42167e:	adc    al,0x20
  421680:	lods   al,BYTE PTR ss:[esi]
  421682:	mov    cl,0x9e
  421684:	shl    BYTE PTR [ecx],0x4e
  421687:	gs sub eax,0x8a25787
  42168d:	test   al,0x96
  42168f:	arpl   WORD PTR [edi-0x15780bb4],cx
  421695:	pusha  
  421696:	(bad)  
  421697:	js     0x42162e
  421699:	cmp    esp,DWORD PTR [ecx-0x3c20c724]
  42169f:	sub    al,0xd6
  4216a1:	cli    
  4216a2:	dec    edi
  4216a3:	xchg   ecx,eax
  4216a4:	adc    eax,0xd774c4e7
  4216a9:	dec    edx
  4216aa:	sti    
  4216ab:	mov    cs,esp
  4216ad:	ja     0x421723
  4216af:	ror    BYTE PTR [eax+0x29f25aa7],1
  4216b5:	inc    esi
  4216b6:	lahf   
  4216b7:	pop    ss
  4216b8:	add    ch,bh
  4216ba:	cld    
  4216bb:	push   edx
  4216bc:	dec    ecx
  4216bd:	arpl   bx,bx
  4216bf:	inc    edx
  4216c0:	loopne 0x4216d3
  4216c2:	test   al,0x3
  4216c4:	pop    ebp
  4216c5:	inc    esi
  4216c6:	sbb    al,0xa2
  4216c8:	add    bh,BYTE PTR [esp+edi*1-0x17]
  4216cc:	mov    ecx,0xe63ea8eb
  4216d1:	jmp    FWORD PTR [ecx]
  4216d3:	push   edx
  4216d4:	mov    dh,0x68
  4216d6:	sub    ecx,DWORD PTR [ebx]
  4216d8:	push   eax
  4216d9:	sar    bh,1
  4216db:	lods   al,BYTE PTR ds:[esi]
  4216dc:	stc    
  4216dd:	xor    eax,0x3a2d1eb3
  4216e2:	fwait
  4216e3:	mov    dh,0xec
  4216e5:	xchg   edx,eax
  4216e6:	push   0x61
  4216e8:	xor    al,0xb
  4216ea:	dec    edx
  4216eb:	xchg   edx,eax
  4216ec:	xor    DWORD PTR [ebp+0x70c57165],ebx
  4216f2:	xchg   DWORD PTR [ebx+0x26718cea],ebx
  4216f8:	jp     0x421732
  4216fa:	adc    BYTE PTR [edx-0x34c6054d],0xef
  421701:	fistp  WORD PTR [eax-0x20]
  421704:	addr16 mov ah,0xce
  421707:	stc    
  421708:	mov    edx,DWORD PTR [eax]
  42170a:	lods   eax,DWORD PTR ds:[esi]
  42170b:	jnp    0x421776
  42170d:	ret    0x8189
  421710:	dec    esi
  421711:	pushf  
  421712:	enter  0xc2d2,0x8f
  421716:	(bad)  [edi+eiz*4]
  421719:	shl    DWORD PTR [ebx],cl
  42171b:	dec    edi
  42171c:	or     ecx,DWORD PTR [ecx-0x1d4fc587]
  421722:	fiadd  DWORD PTR [esi]
  421724:	add    DWORD PTR [ebp+0x22fa675d],0x7e
  42172b:	cld    
  42172c:	in     al,0x80
  42172e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42172f:	sbb    eax,0xab2894b8
  421734:	iret   
  421735:	test   eax,0x9464189e
  42173a:	out    0x81,al
  42173c:	inc    ebx
  42173d:	fs lahf 
  42173f:	push   cs
  421740:	dec    ebp
  421741:	outs   dx,BYTE PTR ds:[esi]
  421742:	jmp    DWORD PTR [edx-0x6]
  421745:	and    dh,BYTE PTR [edx-0x48]
  421748:	add    dl,BYTE PTR [edi+0x4d2f06b3]
  42174e:	sub    dl,BYTE PTR [edi-0x1c]
  421751:	scas   al,BYTE PTR es:[edi]
  421752:	sti    
  421753:	out    0x2,eax
  421755:	xchg   dx,ax
  421757:	cmp    esp,DWORD PTR [edi+0x49]
  42175a:	(bad)  
  42175b:	fst    DWORD PTR [ebx-0x582d1be4]
  421761:	push   cs
  421762:	ret    
  421763:	mov    eax,0x2690fcc8
  421768:	inc    edi
  421769:	xchg   esp,eax
  42176a:	call   0x73323431
  42176f:	cli    
  421770:	(bad)  
  421771:	pop    ss
  421772:	push   ebx
  421773:	mov    ds:0xcdccbf77,eax
  421778:	scas   al,BYTE PTR es:[edi]
  421779:	push   ecx
  42177a:	retf   0xe5c4
  42177d:	adc    al,0x88
  42177f:	in     eax,0xc3
  421781:	pop    esi
  421782:	add    DWORD PTR [ebp+0x32c65fe5],ebp
  421788:	aam    0x9a
  42178a:	in     al,dx
  42178b:	out    dx,eax
  42178c:	pushf  
  42178d:	or     ebp,ecx
  42178f:	inc    ebx
  421790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421791:	sub    edi,DWORD PTR [edi+0x2b574a52]
  421797:	bound  esp,QWORD PTR [edi]
  421799:	lahf   
  42179a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42179b:	xchg   edi,eax
  42179c:	push   0x18ee637f
  4217a1:	mov    BYTE PTR [esp+edx*8-0x4b0924a9],dh
  4217a8:	mov    ah,0xee
  4217aa:	mov    DWORD PTR ds:0xa6bd648a,edi
  4217b0:	mov    ebp,0xffb6f858
  4217b5:	(bad)  
  4217b6:	or     eax,0x3782a2b0
  4217bb:	jo     0x4217fe
  4217bd:	jge    0x42182c
  4217bf:	aam    0x8
  4217c1:	imul   edx,DWORD PTR [eax+0x5f7298a8],0xffffff95
  4217c8:	(bad)  
  4217c9:	enter  0xa1c0,0x68
  4217cd:	fmul   DWORD PTR [edi-0x7e]
  4217d0:	mov    eax,ds:0xc515fb54
  4217d5:	jle    0x4217ab
  4217d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d8:	(bad)  
  4217d9:	std    
  4217da:	enter  0x6ebf,0x87
  4217de:	xchg   DWORD PTR [ebp+0x2c5d02e4],esp
  4217e4:	in     eax,0x6c
  4217e6:	jmp    FWORD PTR [edi]
  4217e8:	call   0xf0d7:0x9263621d
  4217ef:	jae    0x42179f
  4217f1:	add    eax,0x4944172
  4217f6:	mov    ds:0x5570b381,al
  4217fb:	pop    esi
  4217fc:	mov    eax,ds:0x10d84295
  421801:	int    0xce
  421803:	mov    dh,0xdd
  421805:	cmp    esp,edi
  421807:	inc    edx
  421808:	pop    esi
  421809:	jae    0x4217d5
  42180b:	adc    dh,BYTE PTR [edx]
  42180d:	mov    ebx,DWORD PTR [ebp-0x6]
  421810:	sbb    dl,BYTE PTR [edx+0x192b86ab]
  421816:	out    dx,eax
  421817:	fldenv [esi+esi*8+0x32]
  42181b:	add    dh,cl
  42181d:	mov    eax,ds:0xc83fc325
  421822:	(bad)  
  421823:	aam    0x5b
  421825:	push   esi
  421826:	xchg   ebx,eax
  421827:	push   edi
  421828:	cmp    eax,DWORD PTR [ecx+ecx*1]
  42182b:	jmp    0x428defd6
  421830:	mov    esi,0x9f669f4e
  421835:	sub    al,0x7c
  421837:	mov    ds:0xaf40c9f1,eax
  42183c:	sbb    eax,0x8aea3f0f
  421841:	outs   dx,DWORD PTR ds:[esi]
  421842:	cmp    BYTE PTR [ecx],dl
  421844:	jmp    0x6300:0x45c68dae
  42184b:	sbb    DWORD PTR [ebp-0x38d32eb1],eax
  421851:	std    
  421852:	mov    ds:0x8af0fe19,eax
  421857:	lods   al,BYTE PTR ds:[esi]
  421858:	push   esi
  421859:	inc    edx
  42185a:	pop    ebp
  42185b:	mov    edx,0x7a58e97
  421860:	push   ebp
  421861:	xchg   BYTE PTR [esi-0x27],dh
  421864:	test   bl,ah
  421866:	in     eax,dx
  421867:	data16 mov al,0xdb
  42186a:	dec    edi
  42186b:	mov    ecx,0x92f5bed3
  421870:	fisub  DWORD PTR [esi-0x37]
  421873:	jg     0x4218b7
  421875:	in     al,dx
  421876:	mov    DWORD PTR [ecx-0x3d],esp
  421879:	sbb    ah,al
  42187b:	pop    esi
  42187c:	sbb    ch,al
  42187e:	xchg   esp,eax
  42187f:	pop    ss
  421880:	mul    DWORD PTR [ecx+0x5c]
  421883:	int    0x8f
  421885:	pop    edi
  421887:	imul   ecx,DWORD PTR [ecx+eiz*8+0x31514172],0x3d
  42188f:	xchg   ecx,eax
  421890:	out    0x67,al
  421892:	retf   
  421893:	mov    al,0x25
  421895:	mov    DWORD PTR [edi-0x444c74fb],ecx
  42189b:	xchg   DWORD PTR [edi],ebx
  42189d:	imul   ebx,DWORD PTR [eax-0x7a60191e],0x5c
  4218a4:	out    dx,eax
  4218a5:	push   edi
  4218a6:	lods   eax,DWORD PTR ds:[esi]
  4218a7:	ret    0x2dcd
  4218aa:	inc    esi
  4218ab:	ret    
  4218ac:	and    DWORD PTR [esi],eax
  4218ae:	fistp  QWORD PTR [edi+0x2b]
  4218b1:	sbb    BYTE PTR [ecx+ecx*4],ah
  4218b4:	dec    edx
  4218b5:	jmp    FWORD PTR [ebx-0x7fcc9196]
  4218bb:	in     eax,dx
  4218bc:	(bad)  
  4218bd:	mov    ah,ah
  4218bf:	pop    eax
  4218c0:	dec    ecx
  4218c1:	add    eax,ecx
  4218c3:	gs inc ebp
  4218c5:	pop    ebp
  4218c6:	mov    DWORD PTR ds:0xdd9df78b,esp
  4218cc:	loopne 0x4218d8
  4218ce:	xchg   ebp,eax
  4218cf:	mov    eax,ds:0xe0e2afce
  4218d4:	mov    ds:0xe91cfb67,eax
  4218d9:	sub    BYTE PTR [ebx],0x89
  4218dc:	test   ecx,esi
  4218de:	add    BYTE PTR [eax-0x9],0x50
  4218e2:	xchg   ebx,eax
  4218e3:	jbe    0x4218f9
  4218e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218e6:	sbb    ebx,edx
  4218e8:	mov    cs,WORD PTR [esi+0x514387cf]
  4218ee:	or     DWORD PTR [eax+0x8],ebx
  4218f1:	daa    
  4218f2:	jmp    0x4218ae
  4218f4:	mov    ebx,0xe13e8967
  4218f9:	shl    DWORD PTR [eax-0x5b],0x32
  4218fd:	or     al,BYTE PTR [esi-0x15]
  421900:	xchg   ebp,eax
  421901:	int3   
  421902:	mov    DWORD PTR [edi+0x21],esi
  421905:	jmp    0x4fc23936
  42190a:	clc    
  42190b:	lods   al,BYTE PTR ds:[esi]
  42190c:	mov    al,0x70
  42190e:	call   0xaf87:0xea7cc91c
  421915:	inc    ebp
  421916:	pushfw 
  421918:	dec    esi
  421919:	les    esi,FWORD PTR [edi-0x756e9628]
  42191f:	sbb    eax,0x2f3e6703
  421924:	jge    0x4218e2
  421926:	add    ebp,esp
  421928:	fild   WORD PTR [ebp-0x1fb54736]
  42192e:	cmp    BYTE PTR [edi],al
  421930:	and    al,0x7a
  421932:	daa    
  421933:	loop   0x42198c
  421935:	psadbw mm4,QWORD PTR [ebx]
  421938:	mov    fs,WORD PTR [edi+0x114a2df]
  42193e:	ret    
  42193f:	cmp    ch,BYTE PTR [ebx+0x3e036156]
  421945:	jg     0x421989
  421947:	or     BYTE PTR [edx-0x4be5af2e],al
  42194d:	cmp    DWORD PTR [eax],ecx
  42194f:	mov    eax,DWORD PTR [ebx+0x1144463d]
  421955:	sbb    al,BYTE PTR [ecx]
  421957:	gs (bad) 
  421959:	into   
  42195a:	int3   
  42195b:	lock and eax,0x57cde48c
  421961:	xchg   ebp,eax
  421962:	cli    
  421963:	mov    ah,0x4c
  421965:	cmp    DWORD PTR [edi+0x64],0x84e89185
  42196c:	les    eax,FWORD PTR ds:0xb760251a
  421972:	arpl   WORD PTR [esi-0x2f383982],bp
  421978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421979:	pop    ebp
  42197a:	sbb    ch,dh
  42197c:	retf   0x56bf
  42197f:	out    0x70,al
  421981:	push   eax
  421982:	push   eax
  421983:	add    cl,bl
  421985:	sti    
  421986:	stos   BYTE PTR es:[edi],al
  421987:	and    BYTE PTR [edi],ch
  421989:	inc    ebp
  42198a:	push   esp
  42198b:	aad    0xc2
  42198d:	mov    ah,0x68
  42198f:	or     ch,BYTE PTR [ebp+0x68]
  421992:	mov    bl,0x8c
  421994:	or     DWORD PTR [ecx-0x5775af48],0x27
  42199b:	cmp    ebp,edi
  42199d:	and    cl,cl
  42199f:	push   ecx
  4219a0:	add    edx,DWORD PTR [ecx]
  4219a2:	pop    ds
  4219a3:	shr    BYTE PTR [ebp-0x4ec4a31],0x80
  4219aa:	fcmovnb st,st(5)
  4219ac:	push   es
  4219ad:	imul   esp,DWORD PTR [eax],0xbd961996
  4219b3:	mov    al,ds:0xf5849c1f
  4219b8:	cmp    ebp,DWORD PTR [ecx+0x27]
  4219bb:	push   edi
  4219bc:	push   ds
  4219bd:	add    eax,0x88485532
  4219c2:	mov    eax,0x79ab95c7
  4219c7:	gs mov bl,0xe2
  4219ca:	dec    ebp
  4219cb:	idiv   BYTE PTR [ecx+0x383c804d]
  4219d1:	nop
  4219d2:	mov    DWORD PTR [edi+0x59],ebp
  4219d5:	sbb    DWORD PTR [ebx],esi
  4219d7:	xor    eax,eax
  4219d9:	fs adc eax,0x61b09b20
  4219df:	mov    ah,0x78
  4219e1:	push   edi
  4219e2:	adc    al,0xb0
  4219e4:	(bad)  
  4219e5:	jmp    0x42196f
  4219e7:	pop    edi
  4219e8:	popf   
  4219e9:	xchg   ebx,eax
  4219ea:	sub    edi,eax
  4219ec:	loopne 0x42198f
  4219ee:	sub    eax,0x46559548
  4219f3:	cmp    edx,edi
  4219f5:	push   ds
  4219f6:	lods   al,BYTE PTR ds:[esi]
  4219f7:	fs push esi
  4219f9:	shl    DWORD PTR ds:0x9f10c2bc,cl
  4219ff:	sbb    dh,ch
  421a01:	pop    edx
  421a02:	pushf  
  421a03:	test   ecx,edx
  421a05:	xlat   BYTE PTR ds:[ebx]
  421a06:	loopne 0x421a12
  421a08:	mov    ebp,edx
  421a0a:	adc    eax,0xe41eb16
  421a0f:	pop    edi
  421a10:	push   ds
  421a11:	pop    eax
  421a12:	fldenv es:[ebp+0x6]
  421a16:	ror    DWORD PTR [edi+0x1995b163],cl
  421a1c:	sbb    eax,esp
  421a1e:	sub    eax,0xaf766be1
  421a23:	test   BYTE PTR ds:0x1c8de1bc,dh
  421a29:	sub    eax,0x84414016
  421a2e:	sub    eax,0x4a63be07
  421a33:	xor    BYTE PTR [eax+ebx*2],ah
  421a36:	outs   dx,DWORD PTR ds:[esi]
  421a37:	inc    ebx
  421a38:	int3   
  421a39:	rcr    DWORD PTR [esi],0xa7
  421a3c:	mov    bl,0xe5
  421a3e:	sbb    DWORD PTR [edi-0x47],esp
  421a41:	test   DWORD PTR [ebp-0x3],esp
  421a44:	jnp    0x4219eb
  421a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a47:	xchg   edx,eax
  421a48:	pop    DWORD PTR [ebx-0x1a49b612]
  421a4e:	xchg   ebp,eax
  421a4f:	adc    BYTE PTR [ecx-0x3b],dh
  421a52:	(bad)  
  421a54:	xchg   ebp,eax
  421a55:	out    dx,eax
  421a56:	inc    esp
  421a57:	(bad)  
  421a58:	jne    0x421a31
  421a5a:	shl    BYTE PTR [edi-0x6e03ac88],0xc
  421a61:	inc    ecx
  421a62:	pusha  
  421a63:	pop    ebp
  421a64:	cmp    DWORD PTR [edx-0x51],edx
  421a67:	stos   DWORD PTR es:[edi],eax
  421a68:	cli    
  421a69:	xchg   ecx,eax
  421a6a:	outs   dx,DWORD PTR ds:[esi]
  421a6b:	sbb    al,0x3f
  421a6d:	std    
  421a6e:	icebp  
  421a6f:	adc    esp,edx
  421a71:	dec    edx
  421a72:	adc    eax,edi
  421a74:	cmp    BYTE PTR [ebx-0x7f],dh
  421a77:	retf   0x650f
  421a7a:	adc    ecx,DWORD PTR [esi]
  421a7c:	jo     0x421a96
  421a7e:	fisubr WORD PTR ds:0x7a1c0bdc
  421a84:	ja     0x421a22
  421a86:	mov    bl,0x15
  421a88:	and    al,BYTE PTR [eax]
  421a8a:	mov    ss,WORD PTR [ecx+0x411e9e77]
  421a90:	lea    edi,[edi-0x7a9d1039]
  421a96:	aam    0x50
  421a98:	fwait
  421a99:	mov    cl,0xd3
  421a9b:	mov    al,ds:0xa0c0c731
  421aa0:	stc    
  421aa1:	mov    al,0xd0
  421aa3:	add    BYTE PTR [esi+edx*1-0x2d],0x57
  421aa8:	int    0xfc
  421aaa:	push   0xaa5aacec
  421aaf:	mov    al,0xbc
  421ab1:	aad    0xcb
  421ab3:	enter  0xa457,0xcb
  421ab7:	adc    DWORD PTR [edi-0xb],0x2f62d337
  421abe:	and    eax,0x1e021158
  421ac3:	out    dx,al
  421ac4:	(bad)  
  421ac5:	aad    0x29
  421ac7:	lahf   
  421ac8:	das    
  421ac9:	ins    BYTE PTR es:[edi],dx
  421aca:	jecxz  0x421a50
  421acc:	ja     0x421af4
  421ace:	ins    BYTE PTR es:[edi],dx
  421acf:	out    0x67,al
  421ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ad2:	jl     0x421ae9
  421ad4:	mov    bl,0x27
  421ad6:	jb     0x421b0f
  421ad8:	rcl    BYTE PTR [eax],1
  421ada:	mov    BYTE PTR [edx],dh
  421adc:	or     bl,BYTE PTR [ecx]
  421ade:	test   al,0x65
  421ae0:	mov    ecx,?
  421ae2:	inc    ecx
  421ae3:	or     eax,0x1469f611
  421ae8:	test   eax,0x6875fa40
  421aed:	enter  0xa86a,0x2b
  421af1:	int3   
  421af2:	and    cl,dh
  421af4:	call   0xfa4b573b
  421af9:	jns    0x421ab6
  421afb:	es cdq 
  421afd:	fmulp  st(7),st
  421aff:	mov    WORD PTR [esi+0x4a],gs
  421b02:	xchg   ebx,eax
  421b03:	aas    
  421b04:	(bad)  [eax-0x1c]
  421b07:	xor    ebp,ebx
  421b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b0a:	mov    al,BYTE PTR [ecx+edx*2]
  421b0d:	mov    ds:0x9a168976,al
  421b12:	cld    
  421b13:	scas   eax,DWORD PTR es:[edi]
  421b14:	sbb    ebx,DWORD PTR [esi-0x630dd001]
  421b1a:	or     DWORD PTR gs:[esi],edi
  421b1d:	pop    edx
  421b1e:	adc    DWORD PTR [edx-0x7d],0xbc1b4529
  421b25:	repnz mov ds:0x755bc859,eax
  421b2b:	or     eax,0x63ac94cc
  421b31:	xlat   BYTE PTR ds:[ebx]
  421b32:	xor    BYTE PTR [eax],0xe8
  421b35:	js     0x421af2
  421b37:	(bad)  
  421b38:	or     esi,DWORD PTR [edi*1+0x702f1dac]
  421b3f:	retfw  0x549
  421b43:	mov    DWORD PTR [eax],esp
  421b45:	xchg   DWORD PTR [edi-0x40],ecx
  421b48:	in     al,0x78
  421b4a:	mov    ebp,0x70946493
  421b4f:	mov    edi,ebp
  421b51:	in     al,dx
  421b52:	mov    ch,0x53
  421b54:	clc    
  421b55:	and    eax,0xfc10a2e9
  421b5a:	pushf  
  421b5b:	in     al,dx
  421b5c:	push   esi
  421b5d:	call   0x64a971e7
  421b62:	cmp    DWORD PTR [ebx-0x56],edx
  421b65:	cli    
  421b66:	mov    dh,0xb0
  421b68:	scas   eax,DWORD PTR es:[edi]
  421b69:	adc    dh,dl
  421b6b:	rep outs dx,BYTE PTR ds:[esi]
  421b6d:	sub    bh,ah
  421b6f:	jbe    0x421b76
  421b71:	or     eax,0x48
  421b74:	jo     0x421b17
  421b76:	sub    al,0xbd
  421b78:	(bad)  
  421b79:	cld    
  421b7a:	call   0x5142e7fb
  421b7f:	jl     0x421bdd
  421b81:	mov    cl,BYTE PTR [bp+si-0xc]
  421b85:	sub    al,0xe7
  421b87:	sti    
  421b88:	lock inc edx
  421b8a:	xor    al,0x61
  421b8c:	mov    bh,0xe4
  421b8e:	cmp    ah,cl
  421b90:	mov    es,edx
  421b92:	in     eax,dx
  421b93:	mov    ah,0x85
  421b95:	inc    esi
  421b96:	dec    esi
  421b97:	mov    dl,0xdd
  421b99:	call   0xc1db6a07
  421b9e:	cdq    
  421b9f:	stc    
  421ba0:	xchg   DWORD PTR [eax+edx*1-0x6d],ebx
  421ba4:	add    BYTE PTR [esi],bl
  421ba6:	push   eax
  421ba7:	xor    DWORD PTR [ebx-0x7b1f9ce6],ebx
  421bad:	pop    esi
  421bae:	sub    BYTE PTR [esi],dl
  421bb0:	xchg   esp,eax
  421bb1:	out    dx,eax
  421bb2:	push   ds
  421bb3:	xchg   edi,eax
  421bb4:	shr    DWORD PTR [edx+0x1e],cl
  421bb7:	repnz sahf 
  421bb9:	pop    esi
  421bba:	pushf  
  421bbb:	xchg   DWORD PTR [ecx+0x5b],ecx
  421bbe:	div    DWORD PTR [edi+0x56]
  421bc1:	aam    0x91
  421bc3:	push   0x2f
  421bc5:	cmp    eax,0xf20465a
  421bca:	into   
  421bcb:	pop    ebp
  421bcc:	in     eax,0x3d
  421bce:	rol    DWORD PTR [ecx+0x7e],cl
  421bd1:	or     ecx,esp
  421bd3:	mov    ds:0xfae623e3,eax
  421bd8:	xchg   esp,eax
  421bd9:	xchg   esi,eax
  421bda:	sbb    ch,bh
  421bdc:	in     eax,dx
  421bdd:	dec    ebx
  421bde:	test   al,0xc7
  421be0:	pushf  
  421be1:	hlt    
  421be2:	mov    eax,DWORD PTR [esi-0xc]
  421be5:	repz cmp bh,ch
  421be8:	es inc edi
  421bea:	or     BYTE PTR [edx],al
  421bec:	jg     0x421bb1
  421bee:	inc    ebx
  421bef:	int    0x71
  421bf1:	mov    dh,0xb6
  421bf3:	(bad)  
  421bf4:	std    
  421bf5:	outs   dx,DWORD PTR ds:[esi]
  421bf6:	outs   dx,BYTE PTR ds:[esi]
  421bf7:	pushf  
  421bf8:	and    BYTE PTR [edx+0x1b],dl
  421bfb:	idiv   bh
  421bfd:	or     esi,ecx
  421bff:	inc    ecx
  421c00:	clc    
  421c01:	fcmovbe st,st(1)
  421c04:	pop    edi
  421c05:	mov    esi,0x1cc38974
  421c0a:	js     0x421b96
  421c0c:	mov    ds:0x2ed52beb,eax
  421c11:	mov    ebx,0xa2815f76
  421c16:	push   ss
  421c17:	xor    dl,BYTE PTR [ecx]
  421c19:	out    0x71,eax
  421c1b:	inc    esp
  421c1c:	cmp    dh,BYTE PTR [ebp+0x17bcea89]
  421c22:	or     ah,dh
  421c24:	adc    bh,dh
  421c26:	addr16 int3 
  421c28:	stos   BYTE PTR es:[edi],al
  421c29:	aas    
  421c2a:	push   cs
  421c2b:	mov    dl,0x7e
  421c2d:	lahf   
  421c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c2f:	iret   
  421c30:	rcl    BYTE PTR [ecx+ecx*4],0x67
  421c34:	and    DWORD PTR [ebp+0x4f15132c],ebx
  421c3a:	rol    BYTE PTR [edx-0x1c],cl
  421c3d:	add    DWORD PTR [edx],ecx
  421c3f:	pop    ebp
  421c40:	inc    edx
  421c41:	push   ebp
  421c42:	pop    ebx
  421c43:	adc    al,ch
  421c45:	cmp    DWORD PTR [edi],esp
  421c47:	or     eax,0xe7416814
  421c4c:	fucomp st(4)
  421c4e:	and    esi,ecx
  421c50:	les    ecx,FWORD PTR [ebp-0x4b3d8ff4]
  421c56:	add    al,0x94
  421c58:	mov    bh,0x77
  421c5a:	push   esi
  421c5b:	mov    ah,0xd0
  421c5d:	fstp   QWORD PTR [ebp-0x13]
  421c60:	push   ebp
  421c61:	stc    
  421c62:	gs int 0xba
  421c65:	jp     0x421c20
  421c67:	pushf  
  421c68:	cdq    
  421c69:	jne    0x421cc3
  421c6b:	mov    esi,0x4bd4810c
  421c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c71:	jle    0x421c92
  421c73:	push   edi
  421c74:	jmp    0xf51b388e
  421c79:	adc    al,BYTE PTR [edx]
  421c7b:	push   0xd3266003
  421c80:	iret   
  421c81:	add    DWORD PTR [ebp+0x1c4d84fc],ebp
  421c87:	and    eax,0x2ed6d07a
  421c8c:	imul   esi,ebx,0xffffffb1
  421c8f:	sti    
  421c90:	pop    edx
  421c91:	iret   
  421c92:	rcl    bl,cl
  421c94:	outs   dx,BYTE PTR ds:[esi]
  421c95:	pop    es
  421c96:	sbb    ch,BYTE PTR [ecx-0x43]
  421c99:	mov    ebp,0x911a375a
  421c9e:	mov    bh,0xb
  421ca0:	out    0xb4,al
  421ca2:	les    ebp,FWORD PTR [eax+0x55674ec2]
  421ca8:	pop    ss
  421ca9:	jnp    0x421cf3
  421cab:	xchg   DWORD PTR [eax+0xe],esi
  421cae:	sbb    BYTE PTR [ebx+0x7eca8af9],dh
  421cb4:	fidivr WORD PTR [ebp+esi*1-0x54]
  421cb8:	fstp   TBYTE PTR [ecx+0x6705fdec]
  421cbe:	aaa    
  421cbf:	retf   
  421cc0:	int3   
  421cc1:	hlt    
  421cc2:	xchg   edx,eax
  421cc3:	data16 jge 0x421c59
  421cc6:	int    0x79
  421cc8:	lea    ebp,[edx+0x30]
  421ccb:	sub    esp,DWORD PTR [ebp-0x38]
  421cce:	dec    eax
  421ccf:	popf   
  421cd0:	mov    ?,edi
  421cd2:	arpl   WORD PTR ds:0x87d2a094,ax
  421cd8:	hlt    
  421cd9:	ins    DWORD PTR es:[edi],dx
  421cda:	and    eax,0xc0473952
  421cdf:	call   0x5d60fadf
  421ce4:	das    
  421ce5:	xor    BYTE PTR [ebp+0x62],0xb2
  421ce9:	and    eax,edi
  421ceb:	jno    0x421ccf
  421ced:	rcr    BYTE PTR [ebx+0x5d8f02a4],1
  421cf3:	sub    BYTE PTR [esi+esi*2],0x45
  421cf7:	mov    eax,0x3364fe23
  421cfc:	pop    eax
  421cfd:	div    edi
  421cff:	add    al,0x3e
  421d01:	(bad)  
  421d02:	cmp    DWORD PTR [eax-0x67285bd3],eax
  421d08:	sbb    BYTE PTR [eax-0x1b],ch
  421d0b:	push   ecx
  421d0c:	lods   al,BYTE PTR ds:[esi]
  421d0d:	mov    WORD PTR [ebx-0x16],ds
  421d10:	xchg   DWORD PTR [edx+edx*2],esi
  421d13:	cli    
  421d14:	mov    dl,0x77
  421d16:	pop    esi
  421d17:	enter  0x3212,0xe3
  421d1b:	(bad)  
  421d1c:	jbe    0x421d44
  421d1e:	ins    DWORD PTR es:[edi],dx
  421d1f:	push   0xffffffbb
  421d21:	pop    esi
  421d22:	xor    al,dl
  421d24:	jo     0x421cea
  421d26:	popf   
  421d27:	loopne 0x421d28
  421d29:	arpl   WORD PTR [ebx],si
  421d2b:	mov    ch,0x6d
  421d2d:	daa    
  421d2e:	xchg   ebp,eax
  421d2f:	pusha  
  421d30:	dec    esp
  421d31:	mov    bl,0xb2
  421d33:	jmp    0x8b1e:0xcf7e048f
  421d3a:	mov    dh,0x2
  421d3c:	jge    0x421db0
  421d3e:	(bad)  
  421d3f:	arpl   WORD PTR [eax-0x3a],si
  421d42:	mov    edi,0xffcb23de
  421d47:	lahf   
  421d48:	inc    eax
  421d49:	ret    
  421d4a:	or     al,0x17
  421d4c:	sbb    dh,BYTE PTR [esi+0x6f10487f]
  421d52:	pop    ss
  421d53:	sbb    DWORD PTR [eax+0x19a191d6],0xffffff87
  421d5a:	push   ebp
  421d5b:	jno    0x421daa
  421d5d:	lea    esp,[eax+0x46a13b17]
  421d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d64:	inc    edx
  421d65:	mov    dh,0x21
  421d67:	sub    DWORD PTR [edx+ebx*1],esp
  421d6a:	mov    esp,0x4ca48417
  421d6f:	adc    BYTE PTR [ebx-0x2],cl
  421d72:	sbb    eax,0x11042563
  421d77:	pop    es
  421d78:	in     al,dx
  421d79:	add    cl,BYTE PTR [esi-0x11]
  421d7c:	and    eax,0xb86a2d78
  421d81:	aad    0xbf
  421d83:	mov    bh,0x61
  421d85:	or     BYTE PTR [edi+0x4d],al
  421d88:	fstp   st(1)
  421d8a:	dec    ebp
  421d8b:	sub    eax,0xb28c0164
  421d90:	loope  0x421d48
  421d92:	cmp    eax,0x9a9a2a46
  421d97:	xor    eax,0x8ec38171
  421d9c:	test   eax,0xf1f6e182
  421da1:	test   DWORD PTR [edx-0x36539e26],0x7605700a
  421dab:	loope  0x421d94
  421dad:	cwde   
  421dae:	int    0x81
  421db0:	fild   QWORD PTR [edx]
  421db2:	cli    
  421db3:	push   ebx
  421db4:	addr16 xchg esp,eax
  421db6:	xor    al,0x66
  421db8:	outs   dx,DWORD PTR ds:[esi]
  421db9:	jnp    0x421e08
  421dbb:	mov    ebx,0x76b0a2c4
  421dc0:	add    edx,DWORD PTR [edi]
  421dc2:	dec    ebx
  421dc3:	sbb    bl,0x48
  421dc6:	xor    DWORD PTR [edi],edx
  421dc8:	inc    ebx
  421dc9:	fs retf 0xd17b
  421dcd:	cli    
  421dce:	int    0x8a
  421dd0:	test   eax,0x93f49450
  421dd5:	ins    BYTE PTR es:[edi],dx
  421dd6:	int3   
  421dd7:	out    0xad,eax
  421dd9:	test   BYTE PTR [edx+0x26],dl
  421ddc:	sub    al,0x12
  421dde:	fcmovb st,st(0)
  421de0:	sub    BYTE PTR [edi-0x21],dh
  421de3:	pop    ebp
  421de4:	cld    
  421de5:	xor    al,0x80
  421de7:	cmp    ebx,esp
  421de9:	jo     0x421d7e
  421deb:	cmp    cl,BYTE PTR [ecx-0x4713fc03]
  421df1:	mov    esp,0x784a4262
  421df6:	cmp    eax,0xa37d1ee2
  421dfb:	sbb    ebp,DWORD PTR [esi]
  421dfd:	int3   
  421dfe:	cmp    ch,BYTE PTR [ebx+0x25]
  421e01:	xor    DWORD PTR [eax+eiz*4+0x7a],ebp
  421e05:	xor    ebx,DWORD PTR [edx]
  421e07:	or     cl,0x39
  421e0a:	call   0x4e178ddf
  421e0f:	dec    edx
  421e10:	mov    ds:0xda2a5a7e,al
  421e15:	loopne 0x421e42
  421e17:	add    ecx,DWORD PTR [edi]
  421e19:	gs sbb eax,0x5547aaee
  421e1f:	fistp  WORD PTR [esi]
  421e21:	in     eax,0x3c
  421e23:	mov    ?,WORD PTR [ebx]
  421e25:	fs aas 
  421e27:	pusha  
  421e28:	and    al,0x4e
  421e2a:	mov    BYTE PTR [edx-0x1958839f],dl
  421e30:	add    DWORD PTR [edx+ebp*4-0x10],ebx
  421e34:	xchg   BYTE PTR [esp+edi*4],ch
  421e37:	mov    esi,0xf8ea0161
  421e3c:	(bad)  
  421e3d:	fmulp  st(5),st
  421e3f:	sbb    edi,DWORD PTR [ecx-0x572180d5]
  421e45:	mov    bh,BYTE PTR ds:0x8d897287
  421e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e4c:	xlat   BYTE PTR ds:[ebx]
  421e4d:	daa    
  421e4e:	pop    ds
  421e4f:	xchg   ecx,eax
  421e50:	aam    0x61
  421e52:	cmp    BYTE PTR [edi-0x58],al
  421e55:	call   0x5b9f:0xd6b08f97
  421e5c:	add    al,BYTE PTR [ebx+0x2217c6bf]
  421e62:	in     al,0x8c
  421e64:	in     eax,0xe3
  421e66:	xchg   ebp,eax
  421e67:	mov    ch,0x1f
  421e69:	ret    0xf7
  421e6c:	xor    dh,BYTE PTR [esi+0x6f]
  421e6f:	inc    edx
  421e70:	ror    BYTE PTR [edi],1
  421e72:	in     al,dx
  421e73:	jnp    0x421ebd
  421e75:	aas    
  421e76:	rcl    WORD PTR [ebx],0x3
  421e7a:	fsubr  QWORD PTR [eax-0x25440d4f]
  421e80:	lahf   
  421e81:	retf   
  421e82:	aaa    
  421e83:	sub    ecx,DWORD PTR [ecx-0x11d660ab]
  421e89:	cdq    
  421e8a:	enter  0xebae,0x35
  421e8e:	cs and edi,ecx
  421e91:	xor    DWORD PTR [eax],0x8201f699
  421e97:	xor    eax,0xfb7f20bc
  421e9c:	das    
  421e9d:	xor    esp,edi
  421e9f:	push   esp
  421ea0:	mov    ds:0xfa7abd19,al
  421ea5:	xlat   BYTE PTR ds:[ebx]
  421ea6:	mov    cl,0x51
  421ea8:	sub    BYTE PTR [esi],0x7e
  421eab:	sar    BYTE PTR [edx-0x110c2a0d],cl
  421eb1:	sub    DWORD PTR [edx+ebp*8+0x596a2ca],ebp
  421eb8:	mov    ax,ds:0xf7614794
  421ebe:	xchg   esi,eax
  421ebf:	mov    ah,0xd0
  421ec1:	add    DWORD PTR [ebp-0x6f],edi
  421ec4:	div    BYTE PTR [esi-0x3f5c276d]
  421eca:	mov    eax,0x46caafe3
  421ecf:	dec    esi
  421ed0:	mov    esp,0xd5831bf2
  421ed5:	xchg   DWORD PTR [ecx-0x66],ebp
  421ed8:	in     al,dx
  421ed9:	popf   
  421eda:	or     eax,0x4ef9f106
  421edf:	arpl   cx,ax
  421ee1:	cmp    DWORD PTR [ebx-0x5c],ecx
  421ee4:	xchg   edi,eax
  421ee5:	les    ecx,FWORD PTR [ecx-0x76921634]
  421eeb:	retf   0xc1ba
  421eee:	xchg   esp,eax
  421eef:	sub    edx,DWORD PTR [edi+0x5e714c3e]
  421ef5:	sbb    ebx,ebp
  421ef7:	mov    eax,ds:0x840dd842
  421efc:	jno    0x421f2b
  421efe:	jbe    0x421f03
  421f00:	sbb    DWORD PTR [ecx-0x5f],edi
  421f03:	test   BYTE PTR [ecx+edi*2],dh
  421f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f07:	jne    0x421f1d
  421f09:	ja     0x421eb9
  421f0b:	ror    DWORD PTR [esi-0x612a6e57],1
  421f11:	mov    eax,ds:0x7d9962e5
  421f16:	es mov esi,0x9187cd68
  421f1c:	imul   ecx,DWORD PTR [ecx+ebp*8+0x31bfe8cf],0xdcb4d776
  421f27:	imul   esi,esi,0x256fd360
  421f2d:	jae    0x421fa4
  421f2f:	call   0x69d995d8
  421f34:	add    DWORD PTR [esi+0x3ba75841],ebp
  421f3a:	pop    edi
  421f3b:	fcom   QWORD PTR [esi]
  421f3d:	cmp    BYTE PTR [ecx],bh
  421f3f:	xor    DWORD PTR [edx+0x4cf47d94],eax
  421f45:	mov    ss,WORD PTR [eax+eax*4]
  421f48:	sahf   
  421f49:	rcl    al,cl
  421f4b:	dec    eax
  421f4c:	add    BYTE PTR [edi-0x60],cl
  421f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f50:	dec    edx
  421f51:	mov    bl,0x50
  421f53:	imul   esp,DWORD PTR [edx-0x30d05772],0x22bd7d94
  421f5d:	mov    esp,DWORD PTR [edi]
  421f5f:	lds    eax,FWORD PTR [esi-0x1d3ae45d]
  421f65:	pusha  
  421f66:	pcmpgtb mm6,QWORD PTR [edx]
  421f69:	mov    cl,0xf8
  421f6b:	cdq    
  421f6c:	imul   eax,DWORD PTR [ecx],0x9105eab5
  421f72:	outs   dx,DWORD PTR ds:[si]
  421f74:	push   es
  421f75:	xor    bl,BYTE PTR [edi]
  421f77:	in     al,dx
  421f78:	sub    eax,0x9e53991a
  421f7d:	ficomp WORD PTR [ebx+0x2ab4f35]
  421f83:	mov    ch,0x6e
  421f85:	test   al,0x14
  421f87:	scas   al,BYTE PTR es:[edi]
  421f88:	std    
  421f89:	ret    
  421f8a:	cmp    DWORD PTR [ecx+esi*2],ebp
  421f8d:	adc    eax,0xd88e6edc
  421f92:	inc    esp
  421f93:	and    edx,edi
  421f95:	and    BYTE PTR [ebp-0x2c2fd1d8],dh
  421f9b:	rcr    DWORD PTR [eax+ebp*4-0xb],1
  421f9f:	fs in  al,dx
  421fa1:	mov    cl,0x9a
  421fa3:	(bad)  
  421fa5:	dec    ecx
  421fa6:	arpl   di,bp
  421fa8:	(bad)  
  421fa9:	mov    ebx,0xfe3dc252
  421fae:	push   ds
  421faf:	mov    ds:0xf242b440,eax
  421fb4:	js     0x422019
  421fb6:	out    0x5f,al
  421fb8:	loopne 0x422029
  421fba:	or     cl,dh
  421fbc:	cdq    
  421fbd:	ret    0xf32e
  421fc0:	adc    dl,BYTE PTR [ecx+0x60]
  421fc3:	shr    BYTE PTR [ecx],cl
  421fc5:	ss mov ss,esi
  421fc8:	pop    esp
  421fc9:	cmp    dl,BYTE PTR [ebp+0x56]
  421fcc:	pop    ecx
  421fcd:	jg     0x421fb3
  421fcf:	lock lahf 
  421fd1:	iret   
  421fd2:	adc    BYTE PTR [eax],bl
  421fd4:	xor    eax,0x9e185f1b
  421fd9:	ret    0xf701
  421fdc:	adc    DWORD PTR [esi+0x51],edi
  421fdf:	test   eax,0x4df150ca
  421fe4:	fidivr WORD PTR [ebp+0x5dea8e5]
  421fea:	mov    ch,0x25
  421fec:	shl    BYTE PTR [ecx],0xcc
  421fef:	dec    esi
  421ff0:	stos   BYTE PTR es:[edi],al
  421ff1:	repz xchg ebx,eax
  421ff3:	lds    ebx,FWORD PTR [ecx]
  421ff5:	dec    eax
  421ff6:	xor    BYTE PTR [ebp+0x429845dc],ah
  421ffc:	or     al,0xc7
  421ffe:	imul   eax,DWORD PTR [edx],0xffffffaf
  422001:	xor    eax,0x40cf41fc
  422006:	fs nop
  422008:	std    
  422009:	and    eax,0x6eea8355
  42200e:	lods   eax,DWORD PTR ds:[esi]
  42200f:	out    dx,eax
  422010:	mov    dh,0x58
  422012:	add    BYTE PTR [edx+0x27],ch
  422015:	repz int 0x5
  422018:	outs   dx,BYTE PTR ds:[esi]
  422019:	dec    ecx
  42201a:	inc    eax
  42201b:	pop    esp
  42201c:	rcr    BYTE PTR [esi],cl
  42201e:	add    ch,BYTE PTR [esi-0x42]
  422021:	dec    ebx
  422022:	cmp    ebp,DWORD PTR [ebx-0x30d01544]
  422028:	loopne 0x422036
  42202a:	sub    ch,0xa9
  42202d:	push   0xc41a727
  422032:	fcompp 
  422034:	adc    BYTE PTR [edi-0x1],bl
  422037:	mov    edx,0xab014280
  42203c:	int3   
  42203d:	jmp    0x70bef367
  422042:	test   eax,0x8569358b
  422047:	sub    eax,DWORD PTR [edx+0x67]
  42204a:	jno    0x422018
  42204c:	inc    edx
  42204d:	pusha  
  42204e:	enter  0x6c30,0x7e
  422052:	mov    DWORD PTR [esi+0x2f],esp
  422055:	adc    eax,0x5ce0ccfe
  42205a:	mov    eax,ds:0x9a4bbc15
  42205f:	(bad)  
  422061:	(bad)  
  422062:	xchg   edi,eax
  422063:	cmp    cl,bh
  422065:	pop    ds
  422066:	sbb    eax,0x1f6d7268
  42206b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42206c:	mov    ebp,edx
  42206e:	std    
  42206f:	lds    edi,FWORD PTR [edx-0x1d048bf4]
  422075:	and    esi,ecx
  422077:	les    edi,FWORD PTR [edi+edx*2-0x6dbe14a0]
  42207e:	xchg   esi,eax
  42207f:	jp     0x4220ec
  422081:	dec    edx
  422082:	mov    bh,0x1a
  422084:	mov    WORD PTR ds:0x88c0a3a2,?
  42208a:	push   cs
  42208b:	mov    ecx,0x15425364
  422090:	sbb    DWORD PTR [ecx+0x48],0xffffffab
  422094:	dec    edi
  422095:	sub    DWORD PTR ds:0x7a78f8f6,ebx
  42209b:	mov    BYTE PTR [ebp-0x6e],bl
  42209e:	fdivr  DWORD PTR ds:0xdb806ada
  4220a4:	int3   
  4220a5:	sbb    esi,DWORD PTR [eax+0x74]
  4220a8:	xchg   ebp,eax
  4220a9:	mov    dh,0x26
  4220ab:	in     al,0x1d
  4220ad:	dec    esi
  4220ae:	sahf   
  4220af:	ror    BYTE PTR [ebx-0x6396ac19],cl
  4220b5:	es pop ebp
  4220b7:	data16 mov ah,0xdb
  4220ba:	fldenv [ecx]
  4220bc:	inc    ebp
  4220bd:	pop    ss
  4220be:	cmp    al,0x79
  4220c0:	aam    0xdd
  4220c2:	arpl   WORD PTR [eax],dx
  4220c4:	dec    ecx
  4220c5:	(bad)  
  4220c6:	cwde   
  4220c7:	mov    ecx,0x63e0ca22
  4220cc:	daa    
  4220cd:	ror    BYTE PTR [ebp+ebx*2+0x57929dae],1
  4220d4:	xchg   edx,eax
  4220d5:	addr16 inc eax
  4220d7:	not    BYTE PTR [ebx]
  4220d9:	dec    ebp
  4220da:	jnp    0x4220ef
  4220dc:	pop    es
  4220dd:	add    eax,0x196ed6da
  4220e2:	mov    ds:0x33a9f2a5,eax
  4220e7:	in     al,0x49
  4220e9:	dec    ebx
  4220ea:	pop    esp
  4220eb:	pop    es
  4220ec:	sbb    BYTE PTR [eax],0xa3
  4220ef:	pusha  
  4220f0:	push   eax
  4220f1:	jmp    0x422143
  4220f3:	(bad)  
  4220f4:	mov    cl,0x1b
  4220f6:	fimul  WORD PTR [edi]
  4220f8:	mov    edi,0xc6053f33
  4220fd:	mov    ebp,0xd7af89cc
  422102:	stos   DWORD PTR es:[edi],eax
  422103:	mov    bh,0x8
  422105:	mov    eax,ds:0xc5be65ad
  42210a:	jl     0x4220ce
  42210c:	xor    eax,0x17d92632
  422111:	inc    ecx
  422112:	repnz xchg edi,eax
  422114:	sub    DWORD PTR [esi+0x9],edx
  422117:	sahf   
  422118:	add    DWORD PTR [eax+0xa],ebp
  42211b:	aas    
  42211c:	(bad)  
  42211d:	js     0x422113
  42211f:	nop
  422120:	clc    
  422121:	xlat   BYTE PTR ds:[ebx]
  422122:	jp     0x422178
  422124:	jmp    0x74:0x4505
  42212a:	jg     0x42217f
  42212c:	or     al,0x68
  42212e:	call   0x912c:0xd99d28d9
  422135:	ret    
  422136:	sbb    DWORD PTR [esi+0x59],0xffffff9e
  42213a:	sbb    eax,0x9f43c143
  42213f:	inc    ebp
  422140:	mov    eax,0xbf64915b
  422145:	xchg   ebx,eax
  422146:	in     al,dx
  422147:	leave  
  422148:	push   0x5
  42214a:	mov    ch,0xd
  42214c:	rol    DWORD PTR ds:0x184e725,cl
  422152:	xchg   edx,eax
  422153:	jnp    0x4221c0
  422155:	(bad)  
  422156:	addr16 mov al,ds:0xdbb6
  42215a:	or     al,0x22
  42215c:	shl    DWORD PTR [ebx+0x35],cl
  42215f:	jl     0x422120
  422161:	adc    al,0x9e
  422163:	dec    ecx
  422164:	cmp    eax,0xf0594391
  422169:	ret    
  42216a:	call   0xd4ad:0xe63db403
  422171:	mov    dh,BYTE PTR [esi+0xd]
  422174:	xchg   edi,eax
  422175:	cmc    
  422176:	fdiv   QWORD PTR [ecx-0x4e]
  422179:	cmp    dh,ch
  42217b:	or     eax,0x5f1840a5
  422180:	and    edi,ecx
  422182:	adc    al,0xfb
  422184:	es pop ebx
  422186:	int    0x81
  422188:	pop    edx
  422189:	mov    ch,0x3c
  42218b:	mov    bh,0x3e
  42218d:	inc    ecx
  42218e:	jecxz  0x4221f5
  422190:	aam    0xf6
  422192:	ror    ecx,0xfd
  422195:	test   al,0xfa
  422197:	js     0x422126
  422199:	ret    0x4d7e
  42219c:	ins    BYTE PTR es:[edi],dx
  42219d:	or     ah,BYTE PTR [ebx]
  42219f:	adc    bl,BYTE PTR [ebx]
  4221a1:	adc    esp,DWORD PTR [edi-0x3e]
  4221a4:	jae    0x4221aa
  4221a6:	cmp    esp,DWORD PTR [ecx]
  4221a8:	test   DWORD PTR [edi],eax
  4221aa:	leave  
  4221ab:	cmp    DWORD PTR ds:0xae613fbf,edi
  4221b1:	xor    DWORD PTR [esi+0x4f],eax
  4221b4:	shr    BYTE PTR [edx+0x4add4f8b],cl
  4221ba:	xor    BYTE PTR [edi+0x2b],0x62
  4221be:	lock enter 0xda65,0x6
  4221c3:	(bad)  [edx-0x4f631a20]
  4221c9:	mov    DWORD PTR [eax],ebp
  4221cb:	jae    0x42221d
  4221cd:	xchg   ebx,eax
  4221ce:	scas   eax,DWORD PTR es:[edi]
  4221cf:	inc    eax
  4221d0:	mov    dh,0xd2
  4221d2:	xchg   ecx,eax
  4221d3:	push   edx
  4221d4:	push   cs
  4221d5:	pop    ebp
  4221d6:	mov    ebp,0xb465d4c0
  4221db:	out    dx,eax
  4221dc:	fld    QWORD PTR [edi-0x728fa351]
  4221e2:	call   0x2421c031
  4221e7:	dec    esp
  4221e8:	lods   al,BYTE PTR ds:[esi]
  4221e9:	cmc    
  4221ea:	push   esi
  4221eb:	push   ebx
  4221ec:	gs sub eax,0xb3e2ccc0
  4221f2:	sbb    ebx,edx
  4221f4:	(bad)  
  4221f5:	cmp    al,0x2
  4221f7:	jg     0x422261
  4221f9:	retf   0xd1f6
  4221fc:	jge    0x42227d
  4221fe:	shl    DWORD PTR ds:0xbe007e1f,cl
  422204:	ret    
  422205:	sub    DWORD PTR [esi+0x63231aaf],0x7f
  42220c:	lea    edx,[edx-0x72]
  42220f:	ror    DWORD PTR [edx+0x6b],cl
  422212:	or     DWORD PTR [ebp-0x11],0xffffffc3
  422216:	jg     0x422284
  422218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422219:	sbb    edx,ebp
  42221b:	loopne 0x422282
  42221d:	cmp    ch,BYTE PTR [edx-0x146e7da1]
  422223:	gs jb  0x4222a0
  422226:	push   edi
  422227:	add    eax,0xd7337137
  42222c:	push   0xfec485bb
  422231:	mov    cl,0x8c
  422233:	sbb    DWORD PTR [ebx+esi*2+0x58da548f],0xfff03263
  42223e:	das    
  42223f:	mov    edx,0xda734e08
  422244:	leave  
  422245:	(bad)  
  422246:	push   esi
  422247:	and    DWORD PTR ds:0x5269090d,0x5f
  42224e:	xchg   ebp,eax
  42224f:	jmp    0x4221d1
  422251:	cmp    eax,DWORD PTR [eax]
  422253:	popf   
  422254:	add    ebx,DWORD PTR [ebx-0x4a]
  422257:	ret    0xd39
  42225a:	push   esp
  42225b:	call   edi
  42225d:	loop   0x422276
  42225f:	lea    edi,ds:0xab558806
  422265:	cmp    DWORD PTR [edx+0x7704dc3b],ebp
  42226b:	and    eax,DWORD PTR [esi-0x71]
  42226e:	mov    esp,0x2a06cac5
  422273:	je     0x422212
  422275:	clc    
  422276:	push   eax
  422277:	add    al,0xe
  422279:	xchg   ebp,eax
  42227a:	js     0x422203
  42227c:	mov    ds:0x4de895a5,al
  422281:	mov    ds:0x858e3b08,al
  422286:	test   BYTE PTR [eax+0x34ddd13c],0x45
  42228d:	xchg   ebx,eax
  42228e:	jg     0x42224b
  422290:	lea    ebx,[esi]
  422292:	mov    bl,0x5e
  422294:	push   eax
  422295:	sbb    eax,0xdd8e1028
  42229a:	mov    al,ds:0x8331f076
  42229f:	add    al,0x6e
  4222a1:	push   cs
  4222a2:	cmp    eax,0x5ddd8df8
  4222a7:	fdiv   QWORD PTR [ecx+0x2218f231]
  4222ad:	inc    ebp
  4222ae:	fadd   QWORD PTR [eax+0x7c]
  4222b1:	fisttp WORD PTR [ecx+0x14a918af]
  4222b7:	jmp    0x2f39:0x308b11fe
  4222be:	(bad)  
  4222bf:	jnp    0x422336
  4222c1:	pop    esi
  4222c2:	mov    eax,0x27e90322
  4222c7:	ror    BYTE PTR ds:0xf75b4dab,cl
  4222cd:	dec    ecx
  4222ce:	mov    dh,0x75
  4222d0:	es jne 0x42230f
  4222d3:	cmp    DWORD PTR [edi-0x15576595],ecx
  4222d9:	and    esi,ebp
  4222db:	stc    
  4222dc:	shr    dh,0xd8
  4222df:	cmp    ecx,eax
  4222e1:	add    DWORD PTR [esp+edi*4],ecx
  4222e4:	rcl    DWORD PTR [ebx],1
  4222e6:	add    bh,BYTE PTR [eax-0x78]
  4222e9:	fisttp QWORD PTR [ebp-0x5792d795]
  4222ef:	inc    edi
  4222f0:	jmp    0xc2db19d4
  4222f5:	fild   WORD PTR [eax-0x7c]
  4222f8:	jmp    0x432e:0x53a01842
  4222ff:	fmul   QWORD PTR [eax-0x3eb9154]
  422305:	iret   
  422306:	imul   BYTE PTR [ecx*1+0x6d0c86d2]
  42230d:	and    ebp,DWORD PTR [ebx]
  42230f:	adc    eax,0xf1619e54
  422314:	xchg   ebx,eax
  422315:	hlt    
  422316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422317:	and    BYTE PTR [edi+eiz*4],0xf1
  42231b:	je     0x4222e0
  42231d:	fisub  DWORD PTR [eax]
  42231f:	stos   BYTE PTR es:[edi],al
  422320:	pop    esi
  422321:	adc    ebx,ecx
  422323:	retf   
  422324:	ror    BYTE PTR [ecx+0x0],0xed
  422328:	sub    bl,BYTE PTR [esi+0x10]
  42232b:	cmc    
  42232c:	dec    eax
  42232d:	xor    bh,ch
  42232f:	pop    ebx
  422330:	enter  0x8c97,0x22
  422334:	iret   
  422335:	jns    0x42236f
  422337:	jnp    0x42231f
  422339:	mov    dh,0x29
  42233b:	mov    eax,ds:0x46804f46
  422340:	adc    eax,0xa8908403
  422345:	xchg   DWORD PTR [esi],esp
  422347:	cmp    BYTE PTR [edx+0x426e7181],dl
  42234d:	adc    al,0x90
  42234f:	inc    edi
  422350:	ret    
  422351:	sahf   
  422352:	(bad)  
  422353:	jl     0x4222da
  422355:	scas   eax,DWORD PTR es:[edi]
  422356:	jnp    0x422314
  422358:	(bad)  
  422359:	or     BYTE PTR [ebp+0xae53ec3],dh
  42235f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422360:	push   eax
  422361:	inc    eax
  422362:	(bad)  
  422364:	cmp    al,0x42
  422366:	div    BYTE PTR [edx-0x2d42b38e]
  42236c:	retf   
  42236d:	ret    0x42c0
  422370:	mov    esp,0x4012c093
  422375:	cwde   
  422376:	xor    al,0x7a
  422378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422379:	pop    es
  42237a:	xor    al,0xe1
  42237c:	and    dl,0xc6
  42237f:	sbb    dh,BYTE PTR [ebx+0x44852ada]
  422385:	std    
  422386:	pop    es
  422387:	xchg   BYTE PTR [ebx],al
  422389:	mov    WORD PTR [edi+ecx*8],fs
  42238c:	mov    esi,ebx
  42238e:	les    esp,FWORD PTR [ebx+ecx*1]
  422391:	and    edi,ebx
  422393:	bound  edi,QWORD PTR [ecx+eax*2]
  422396:	ds push 0x87af93e0
  42239c:	enter  0xa957,0x2
  4223a0:	add    eax,0xc32311f3
  4223a5:	into   
  4223a6:	ja     0x422379
  4223a8:	es add al,dl
  4223ab:	ds dec edx
  4223ad:	inc    esp
  4223ae:	pop    esi
  4223af:	push   edx
  4223b0:	loope  0x4223b5
  4223b2:	and    ebp,DWORD PTR [ecx+0x6cc29327]
  4223b8:	in     eax,dx
  4223b9:	std    
  4223ba:	(bad)  
  4223bb:	dec    edx
  4223bc:	repnz pop ss
  4223be:	lods   al,BYTE PTR ds:[esi]
  4223bf:	dec    si
  4223c1:	and    DWORD PTR ds:0xc5485802,esi
  4223c7:	out    dx,eax
  4223c8:	mov    ah,0xe5
  4223ca:	jmp    0x1db5:0xa58d6393
  4223d1:	ret    0xc9f2
  4223d4:	cmp    al,0x5e
  4223d6:	push   edx
  4223d7:	mov    al,ds:0xf6299e76
  4223dc:	dec    esi
  4223dd:	add    al,0x84
  4223df:	inc    ebx
  4223e0:	js     0x422438
  4223e2:	ins    BYTE PTR es:[edi],dx
  4223e3:	push   esi
  4223e4:	retf   0xa185
  4223e7:	imul   ecx,DWORD PTR [esi],0xe9d59f00
  4223ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223ee:	mov    esp,0xd0de1b2e
  4223f3:	jbe    0x4223ad
  4223f5:	fcomi  st,st(6)
  4223f7:	pop    es
  4223f8:	rol    DWORD PTR ds:0x6cd28e56,1
  4223fe:	and    eax,0xccae556e
  422403:	in     eax,dx
  422404:	loopne 0x4223de
  422406:	adc    al,BYTE PTR [edx-0x4718397c]
  42240c:	push   ss
  42240d:	cmp    eax,0xe17ad981
  422412:	adc    ebx,0x19
  422415:	jg     0x42248a
  422417:	jmp    DWORD PTR [ebx+0x2e314894]
  42241d:	dec    al
  42241f:	mov    ebp,0xe2901ca
  422424:	sbb    al,BYTE PTR [esi-0x15]
  422427:	cmp    DWORD PTR [edi+0x6d],ebp
  42242a:	add    al,al
  42242c:	in     al,dx
  42242d:	pushf  
  42242e:	push   0xedd4df6f
  422433:	mov    bl,0x87
  422435:	addr16 fxch st(7)
  422438:	jge    0x422468
  42243a:	mov    ds:0xd37cc1c9,al
  422440:	std    
  422441:	add    DWORD PTR [edi],esi
  422443:	data16 stos BYTE PTR es:[edi],al
  422445:	cmp    BYTE PTR [ebp+0x5],dl
  422448:	das    
  422449:	repz popf 
  42244b:	jg     0x422490
  42244d:	fwait
  42244e:	sub    eax,0x9ee9ad50
  422453:	xor    DWORD PTR [edx-0x5e0d5290],eax
  422459:	out    0xed,eax
  42245b:	ds in  al,dx
  42245d:	cli    
  42245e:	inc    esp
  42245f:	addr16 aas 
  422461:	push   ecx
  422462:	cli    
  422463:	(bad)  
  422464:	aaa    
  422465:	repz cdq 
  422467:	int3   
  422468:	enter  0x3483,0xea
  42246c:	sbb    eax,0xb364492e
  422471:	in     eax,0xfe
  422473:	inc    esp
  422474:	sbb    al,dh
  422476:	cmp    DWORD PTR [edi],0xffffff80
  422479:	adc    eax,0x1137447c
  42247e:	pushf  
  42247f:	dec    ebx
  422480:	mov    ds:0x830a5314,al
  422485:	ss ss add ecx,ebx
  422489:	add    BYTE PTR [edi-0x1f],cl
  42248c:	gs sbb esi,eax
  42248f:	jnp    0x4224b3
  422491:	ja     0x42246b
  422493:	les    ebp,FWORD PTR [ecx+0x3e]
  422496:	xor    bh,BYTE PTR [edx-0x5a]
  422499:	xor    ch,BYTE PTR [ebx+0x15]
  42249c:	jp     0x4224da
  42249e:	imul   ebx,ecx,0xffffffc3
  4224a1:	aaa    
  4224a2:	lea    edx,[ebx]
  4224a4:	jae    0x422479
  4224a6:	or     esi,DWORD PTR [edi]
  4224a8:	push   esp
  4224a9:	push   esi
  4224aa:	or     eax,0x5d2e535c
  4224af:	imul   DWORD PTR [edx+0x32ebbee]
  4224b5:	in     eax,dx
  4224b6:	xchg   esi,eax
  4224b7:	inc    ebp
  4224b8:	mov    al,ds:0x73240817
  4224bd:	mov    esp,0xa527421
  4224c2:	jge    0x42253f
  4224c4:	jg     0x422464
  4224c6:	sbb    eax,0x8e0fddfc
  4224cb:	(bad)  
  4224cc:	in     eax,dx
  4224cd:	in     eax,dx
  4224ce:	jb     0x4224e3
  4224d0:	pusha  
  4224d1:	jae    0x422489
  4224d3:	arpl   WORD PTR [ecx-0x19],si
  4224d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d7:	std    
  4224d8:	add    BYTE PTR [ecx+edi*4+0x3e],bl
  4224dc:	xchg   DWORD PTR [esi-0x20],ecx
  4224df:	sahf   
  4224e0:	mov    ebp,0x2fa6c883
  4224e5:	stos   DWORD PTR es:[edi],eax
  4224e6:	mov    BYTE PTR [edx],bl
  4224e8:	jge    0x422497
  4224ea:	pop    ebx
  4224eb:	adc    DWORD PTR [esp+ebp*1],ecx
  4224ee:	pop    ebx
  4224ef:	ror    DWORD PTR [edi-0xa],1
  4224f2:	fst    QWORD PTR [ebx-0x28056a98]
  4224f8:	sbb    BYTE PTR [esi-0x203fc71a],dh
  4224fe:	add    al,0xf5
  422500:	sub    ch,ch
  422502:	cmp    BYTE PTR [esi+0x596d7f6],bl
  422508:	test   eax,0xe39b281b
  42250d:	aad    0x13
  42250f:	jo     0x42253c
  422511:	cli    
  422512:	test   al,0xd7
  422514:	lahf   
  422515:	clc    
  422516:	pop    esp
  422517:	jno    0x42250a
  422519:	jno    0x422580
  42251b:	(bad)  
  42251c:	(bad)  
  42251d:	mov    eax,DWORD PTR [esi+0x68]
  422520:	out    dx,eax
  422521:	pop    edx
  422522:	loop   0x4224d0
  422524:	in     eax,0x3f
  422526:	xor    eax,esp
  422528:	jnp    0x422553
  42252a:	fwait
  42252b:	icebp  
  42252c:	adc    bl,ah
  42252e:	push   esp
  42252f:	xchg   esp,eax
  422530:	jne    0x4225a5
  422532:	mov    ecx,0x7ce6c869
  422537:	loope  0x422500
  422539:	aam    0xe9
  42253b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42253c:	inc    eax
  42253d:	adc    BYTE PTR [ecx],ch
  42253f:	mov    edi,0xb8369148
  422544:	fnstenv [eax]
  422546:	popf   
  422547:	ins    BYTE PTR es:[edi],dx
  422548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422549:	lock outs dx,DWORD PTR ds:[esi]
  42254b:	pop    eax
  42254c:	mov    ds,WORD PTR [ecx-0x11f51bd0]
  422552:	jno    0x42258c
  422554:	imul   ecx,edi,0x31
  422557:	into   
  422558:	jmp    0x42258b
  42255a:	mov    esp,0x536c2144
  42255f:	jns    0x422553
  422561:	xor    edx,0x21
  422564:	xchg   ecx,eax
  422565:	ror    BYTE PTR [edx],0xc9
  422568:	dec    esi
  422569:	pop    esp
  42256a:	mov    dl,0xfb
  42256c:	hlt    
  42256d:	(bad)  
  42256e:	into   
  42256f:	imul   edx,DWORD PTR [edi+esi*1-0x6c],0x166f7d4c
  422577:	bound  eax,QWORD PTR [ebx]
  422579:	std    
  42257a:	mov    edx,DWORD PTR [ecx+ebx*8]
  42257d:	add    edx,ecx
  42257f:	cdq    
  422580:	dec    ebx
  422581:	icebp  
  422582:	push   ebx
  422583:	xchg   BYTE PTR [esi-0x7a7baba],ch
  422589:	clc    
  42258a:	ret    0xa12c
  42258d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42258e:	call   0xde85:0xaca82597
  422595:	mov    dh,BYTE PTR [ebp+0x7b]
  422598:	es xor al,0xb7
  42259b:	enter  0xfda3,0x98
  42259f:	mov    bl,0xb8
  4225a1:	cmp    ecx,DWORD PTR [ebx-0x68739568]
  4225a7:	mov    dh,0xdd
  4225a9:	push   es
  4225aa:	xchg   ebx,eax
  4225ab:	xor    BYTE PTR ds:0xbc46e727,dl
  4225b1:	imul   ebp,ebp,0xad0f6cfe
  4225b7:	inc    ecx
  4225b8:	in     al,0xdb
  4225ba:	xor    al,0x30
  4225bc:	jmp    0x9dc5780c
  4225c1:	push   ds
  4225c2:	dec    ebx
  4225c3:	out    dx,eax
  4225c4:	pop    eax
  4225c5:	jge    0x422582
  4225c7:	xor    eax,ecx
  4225c9:	ret    
  4225ca:	rol    DWORD PTR [ebp+0x2c],1
  4225cd:	mov    ds:0xfb89b6c1,al
  4225d2:	(bad)  
  4225d3:	inc    esi
  4225d4:	in     al,dx
  4225d5:	shr    BYTE PTR [esi-0x52],0x57
  4225d9:	(bad)  
  4225da:	cmp    al,ah
  4225dc:	sti    
  4225dd:	imul   BYTE PTR [eax-0x34]
  4225e0:	mov    eax,ds:0xdf436b4e
  4225e5:	cmp    BYTE PTR [ebp-0x1fb1b8fe],al
  4225eb:	repz cli 
  4225ed:	inc    esp
  4225ee:	sub    eax,0xd0b0034c
  4225f3:	fld    st(0)
  4225f5:	cwde   
  4225f6:	jmp    DWORD PTR [edi+0x69]
  4225f9:	pop    esp
  4225fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225fb:	mov    ?,di
  4225fe:	or     DWORD PTR [edx],edx
  422600:	inc    eax
  422601:	pop    edi
  422602:	fwait
  422603:	push   edi
  422604:	in     al,0xb8
  422606:	in     eax,0x63
  422608:	or     BYTE PTR [esi+0x5],al
  42260b:	fcmovne st,st(6)
  42260d:	(bad)  
  42260e:	into   
  42260f:	lahf   
  422610:	or     ah,bl
  422612:	pushf  
  422613:	xor    DWORD PTR [edx],esi
  422615:	dec    esi
  422616:	scas   eax,DWORD PTR es:[edi]
  422617:	mov    esp,0x8fb896d2
  42261c:	fs leave 
  42261e:	lea    ecx,[ecx-0x1b3d87ff]
  422624:	in     al,dx
  422625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422626:	cs pop ecx
  422628:	scas   eax,DWORD PTR es:[edi]
  422629:	retf   0x4dec
  42262c:	pop    esi
  42262d:	gs je  0x422661
  422630:	xchg   BYTE PTR [ebx-0x41],bh
  422633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422634:	stos   BYTE PTR es:[edi],al
  422635:	hlt    
  422636:	pop    eax
  422637:	jle    0x422681
  422639:	sbb    ch,ch
  42263b:	gs dec esp
  42263d:	pop    edi
  42263e:	mov    ds,WORD PTR [ecx+0x63]
  422641:	or     ah,dl
  422643:	pop    ebx
  422644:	lahf   
  422645:	jmp    0x35494791
  42264a:	inc    eax
  42264b:	xor    ecx,DWORD PTR [edi+0x7c]
  42264e:	mov    gs,WORD PTR [esi-0xe]
  422651:	mov    DWORD PTR [edx],esp
  422653:	ror    BYTE PTR [eax],cl
  422655:	(bad)  
  422656:	aas    
  422657:	cmp    edi,DWORD PTR [edi]
  422659:	add    eax,0x15caeed6
  42265e:	cmp    eax,0x79d6405b
  422663:	mov    ebx,0xf96dc225
  422668:	jb     0x4226b5
  42266a:	and    DWORD PTR [edx+0x7b1a942],0xf6730892
  422674:	call   0xcb9c:0x325e2329
  42267b:	imul   ah
  42267d:	rol    BYTE PTR [edx],0xf4
  422680:	dec    ebp
  422681:	in     eax,dx
  422682:	fwait
  422683:	enter  0xd422,0xd3
  422687:	pop    ds
  422688:	sub    BYTE PTR [ebp+0x3b53cad3],cl
  42268e:	pop    ebx
  42268f:	inc    esp
  422690:	les    edi,FWORD PTR [eax+0x2e7ee4af]
  422696:	pop    eax
  422697:	push   edx
  422698:	adc    al,0x3d
  42269a:	mov    ch,0x23
  42269c:	cmp    edx,DWORD PTR [eax]
  42269e:	rcr    edi,cl
  4226a0:	xchg   BYTE PTR [edx-0x3d],dh
  4226a3:	out    0x47,al
  4226a5:	and    eax,0x77c4571
  4226aa:	add    DWORD PTR [edi-0x182a9bc0],ebp
  4226b0:	fs push esi
  4226b2:	ja     0x422711
  4226b4:	pop    ebx
  4226b5:	jns    0x422729
  4226b7:	sub    eax,0x20316629
  4226bc:	(bad)  
  4226bd:	mov    al,cs:0xdbb6a50d
  4226c3:	addr16 or al,0x8a
  4226c6:	fiadd  WORD PTR [ebx-0xfa8f94b]
  4226cc:	pop    ebp
  4226cd:	in     al,dx
  4226ce:	xor    al,0xc9
  4226d0:	cdq    
  4226d1:	jnp    0x4226f4
  4226d3:	stc    
  4226d4:	mov    ah,0xdb
  4226d6:	mov    al,0x83
  4226d8:	lods   al,BYTE PTR ds:[esi]
  4226d9:	loop   0x4226a3
  4226db:	pop    ss
  4226dc:	mov    edx,DWORD PTR [edi]
  4226de:	repz dec edi
  4226e0:	xchg   esp,eax
  4226e1:	xchg   esp,eax
  4226e2:	das    
  4226e3:	dec    eax
  4226e4:	in     al,dx
  4226e5:	test   BYTE PTR [eax],0xa6
  4226e8:	mov    ch,0xfd
  4226ea:	mov    bl,0x98
  4226ec:	ret    0x65fb
  4226ef:	aam    0x67
  4226f1:	jp     0x42273d
  4226f3:	out    dx,eax
  4226f4:	inc    esi
  4226f5:	sub    ch,BYTE PTR [edx+0x32]
  4226f8:	shl    BYTE PTR [ecx],0x26
  4226fb:	add    ah,BYTE PTR [eax]
  4226fd:	shl    BYTE PTR [edi+eiz*1],0x2e
  422701:	lods   eax,DWORD PTR ds:[esi]
  422702:	loopne 0x4226e0
  422704:	mov    ecx,0x24bf0510
  422709:	inc    ecx
  42270a:	out    dx,eax
  42270b:	pop    ebx
  42270c:	adc    ecx,DWORD PTR ds:0x58d0250c
  422712:	in     al,0x6c
  422714:	cld    
  422715:	test   BYTE PTR [esi-0x73],cl
  422718:	out    0xd5,eax
  42271a:	sub    DWORD PTR ss:[ebx+0x7a554b77],esp
  422721:	dec    ebx
  422722:	repz dec esi
  422724:	inc    ebp
  422725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422726:	mov    eax,esi
  422728:	(bad)  
  422729:	aam    0x79
  42272b:	popf   
  42272c:	push   ecx
  42272d:	retf   
  42272e:	ret    0x269f
  422731:	(bad)  
  422732:	fidivr DWORD PTR [ebx-0x7ad9acbf]
  422738:	lds    eax,FWORD PTR [edx+0x709fadda]
  42273e:	stos   BYTE PTR es:[edi],al
  42273f:	lahf   
  422740:	or     dh,BYTE PTR [edx+0x5235ff1c]
  422746:	mov    ebp,0xc1732344
  42274b:	mov    ch,0xb4
  42274d:	fiadd  WORD PTR [ebx]
  42274f:	sbb    BYTE PTR [esi+0x1e],0x38
  422753:	retf   
  422754:	jmp    0xf080eeaf
  422759:	daa    
  42275a:	aaa    
  42275b:	unpckhps xmm5,XMMWORD PTR ds:0x58c66ab2
  422762:	out    0xf5,eax
  422764:	dec    dh
  422766:	hlt    
  422767:	push   ebp
  422768:	xor    BYTE PTR [edi+0x1ae7820d],ch
  42276e:	jmp    0x4662ea52
  422773:	inc    esi
  422774:	mov    edx,DWORD PTR [ebp+0x19ebe3f1]
  42277a:	sub    al,dh
  42277c:	pushf  
  42277d:	inc    edx
  42277e:	jnp    0x4227b9
  422780:	cli    
  422781:	push   cs
  422782:	mov    al,0x54
  422784:	inc    edx
  422785:	inc    ebx
  422786:	sub    DWORD PTR [ebx+eiz*2+0x44],esp
  42278a:	scas   al,BYTE PTR es:[edi]
  42278b:	cmp    DWORD PTR [ecx-0x24187b39],ebx
  422791:	pop    es
  422792:	pop    edx
  422793:	(bad)  
  422794:	cmp    esp,DWORD PTR [edi]
  422796:	pop    ss
  422797:	xchg   ebp,eax
  422798:	xchg   ebx,eax
  422799:	mov    ?,WORD PTR [ebp-0x648c7218]
  42279f:	or     bl,BYTE PTR [ebx]
  4227a1:	jne    0x42281c
  4227a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227a4:	mov    ebx,0x566b1b02
  4227a9:	push   ecx
  4227aa:	inc    esi
  4227ab:	loope  0x4227d6
  4227ad:	(bad)  
  4227ae:	mov    al,ds:0xa5f653d0
  4227b3:	ds inc ebp
  4227b5:	cdq    
  4227b6:	mov    al,0x13
  4227b8:	add    ah,BYTE PTR [edx+0x4d]
  4227bb:	lahf   
  4227bc:	sbb    al,BYTE PTR [edx+edx*1-0x1c547c26]
  4227c3:	mov    gs,WORD PTR fs:[edx+0xe]
  4227c7:	mov    dl,0xbf
  4227c9:	jp     0x422827
  4227cb:	cwde   
  4227cc:	xchg   edi,eax
  4227cd:	xchg   ebx,eax
  4227ce:	mov    cl,0x54
  4227d0:	ret    0xd851
  4227d3:	and    eax,0xda519258
  4227d8:	adc    DWORD PTR [edx-0x5292aad7],edi
  4227de:	scas   al,BYTE PTR es:[edi]
  4227df:	mov    eax,ds:0x5422260f
  4227e4:	inc    ecx
  4227e5:	mov    al,ds:0xb922c516
  4227ea:	imul   DWORD PTR ss:[eax-0x7ce2697d]
  4227f1:	push   ebp
  4227f2:	cli    
  4227f3:	stos   BYTE PTR es:[edi],al
  4227f4:	inc    eax
  4227f5:	mov    ecx,0x7c22e79
  4227fa:	pop    ss
  4227fb:	in     al,0x85
  4227fd:	xchg   edx,eax
  4227fe:	scas   al,BYTE PTR es:[edi]
  4227ff:	fld    st(1)
  422801:	fsubrp st(2),st
  422803:	mov    dh,0x55
  422805:	lods   eax,DWORD PTR ds:[esi]
  422806:	fmul   DWORD PTR [edx+0x5d0bd1cf]
  42280c:	les    ebp,FWORD PTR [ecx]
  42280e:	repnz mov ds:0x865a9f8,al
  422814:	mov    DWORD PTR [ecx+0x15004e60],ecx
  42281a:	jmp    0xdbb8d0d9
  42281f:	push   edi
  422820:	lahf   
  422821:	ret    0xe97a
  422824:	fmul   QWORD PTR [ebp-0x25d25355]
  42282a:	xchg   edx,eax
  42282b:	jb     0x42285d
  42282d:	stos   DWORD PTR es:[edi],eax
  42282e:	in     eax,dx
  42282f:	and    bl,BYTE PTR [eax+0x12]
  422832:	dec    ecx
  422833:	jmp    0x422855
  422835:	(bad)  
  422837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422838:	sub    bh,BYTE PTR [ecx-0x1881534b]
  42283e:	xchg   edi,eax
  42283f:	cmp    bl,bl
  422841:	or     eax,0x31e4203c
  422846:	xchg   BYTE PTR [edx-0x7654afb1],ch
  42284c:	shl    DWORD PTR [eax-0xa4ac2b9],1
  422852:	push   es
  422853:	sbb    ecx,edx
  422855:	(bad)  
  422856:	(bad)
  422859:	test   DWORD PTR [eax+0x4],ecx
  42285c:	jle    0x422874
  42285e:	mov    ds:0x851a815c,eax
  422863:	pop    esp
  422864:	and    ch,BYTE PTR [ecx+ebx*4-0x13]
  422868:	enter  0x2c78,0xc0
  42286c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286d:	sub    al,0xc7
  42286f:	mov    ebx,0xfc682fb2
  422874:	outs   dx,BYTE PTR ds:[esi]
  422875:	sub    eax,0x518e177c
  42287a:	arpl   di,ax
  42287c:	inc    ebx
  42287d:	dec    ebx
  42287e:	fldcw  WORD PTR [edx]
  422880:	mov    ebp,0x40667f3f
  422885:	je     0x4228f5
  422887:	mov    al,0x38
  422889:	pushw  cs
  42288b:	xor    al,0x41
  42288d:	sbb    ah,BYTE PTR [edx]
  42288f:	std    
  422890:	stc    
  422891:	push   esi
  422892:	lock inc edx
  422894:	dec    eax
  422895:	(bad)  
  422896:	shr    eax,0xeb
  422899:	inc    esi
  42289a:	add    eax,0xfc4d4eca
  42289f:	in     al,0xab
  4228a1:	cmp    al,0x6a
  4228a3:	inc    ebp
  4228a4:	aas    
  4228a5:	(bad)  
  4228a6:	repnz loope 0x4228fe
  4228a9:	pop    es
  4228aa:	cmp    ch,BYTE PTR [ebx]
  4228ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ae:	js     0x4228b2
  4228b0:	or     DWORD PTR [edi+esi*4+0x5b31bbcf],edx
  4228b7:	cwde   
  4228b8:	scas   al,BYTE PTR es:[edi]
  4228b9:	(bad)  
  4228bb:	mov    ds:0xf656f291,al
  4228c0:	mov    ch,0x3b
  4228c2:	lock (bad) 
  4228c4:	shl    BYTE PTR [edx-0x3b],cl
  4228c7:	cmp    eax,0x715f7635
  4228cc:	arpl   WORD PTR [eax-0x33],cx
  4228cf:	sbb    al,0x36
  4228d1:	aam    0xbc
  4228d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d4:	mov    eax,ds:0x13251d76
  4228d9:	adc    eax,0xd15d73ab
  4228de:	les    esi,FWORD PTR [ecx]
  4228e0:	jo     0x4228c1
  4228e2:	cmp    al,0xc8
  4228e4:	ror    BYTE PTR [ebx],1
  4228e6:	in     eax,0xb0
  4228e8:	jg     0x4228f0
  4228ea:	(bad)  
  4228eb:	mov    ch,0xdf
  4228ed:	cdq    
  4228ee:	dec    ebp
  4228ef:	jmp    0x8f0fccb8
  4228f4:	jmp    0x532fdf8f
  4228f9:	jmp    0x422972
  4228fb:	sub    al,0x5c
  4228fd:	out    dx,al
  4228fe:	test   BYTE PTR [ebx-0x2c],dl
  422901:	push   0x9229de0c
  422906:	xor    dl,BYTE PTR [ebp+0x33]
  422909:	sar    DWORD PTR [edx-0x3272ef],0x2b
  422910:	ror    BYTE PTR [ebx+0x59e9e445],1
  422916:	add    BYTE PTR [eax],al
  422918:	add    BYTE PTR [ebx+0x10311455],cl
  42291e:	mov    DWORD PTR ds:0x42a17b,0x16
  422928:	cmp    DWORD PTR ds:0x42a17b,0x0
  42292f:	je     0x42295d
  422935:	cmp    DWORD PTR ds:0x42a17b,0x25
  42293c:	jbe    0x42295d
  422942:	jmp    0x42294d
  422947:	call   DWORD PTR ds:0x42a2a7
  42294d:	mov    eax,ds:0x42a17b
  422952:	dec    eax
  422953:	mov    ds:0x42a17b,eax
  422958:	jmp    0x422928
  42295d:	mov    eax,DWORD PTR [ebp-0x4]
  422960:	mov    DWORD PTR [ebp-0x1c],eax
  422963:	mov    eax,DWORD PTR [ebp+0x10]
  422966:	xor    eax,ecx
  422968:	mov    edx,0xffcd8d11
  42296d:	sub    edx,eax
  42296f:	mov    eax,DWORD PTR [ebp-0x1c]
  422972:	add    DWORD PTR [eax],edx
  422974:	mov    eax,DWORD PTR [ebp-0x4]
  422977:	mov    edx,DWORD PTR [ebp-0x8]
  42297a:	add    edx,DWORD PTR [eax]
  42297c:	mov    DWORD PTR [ebp-0x8],edx
  42297f:	mov    eax,DWORD PTR [ebp+0xc]
  422982:	mov    edx,DWORD PTR [ebp+0xc]
  422985:	xor    edx,ecx
  422987:	xor    eax,ecx
  422989:	lea    eax,[eax+edx*1+0x64e5de]
  422990:	mov    edx,DWORD PTR [ebp+0xc]
  422993:	xor    edx,ecx
  422995:	add    edx,esi
  422997:	imul   eax,edx
  42299a:	mov    edx,DWORD PTR [ebp+0xc]
  42299d:	xor    edx,ecx
  42299f:	sub    edx,eax
  4229a1:	mov    eax,DWORD PTR [ebp-0x4]
  4229a4:	add    edx,esi
  4229a6:	cmp    DWORD PTR [eax],edx
  4229a8:	mov    eax,DWORD PTR [ebp-0x4]
  4229ab:	jg     0x4229c8
  4229b1:	mov    DWORD PTR [ebp-0x1c],eax
  4229b4:	mov    eax,DWORD PTR [ebp+0x10]
  4229b7:	xor    eax,ecx
  4229b9:	mov    edx,0xffcd8d11
  4229be:	sub    edx,eax
  4229c0:	mov    eax,DWORD PTR [ebp-0x1c]
  4229c3:	jmp    0x4229cf
  4229c8:	mov    edx,DWORD PTR [ebp+0x10]
  4229cb:	xor    edx,ecx
  4229cd:	add    edx,esi
  4229cf:	add    DWORD PTR [eax],edx
  4229d1:	mov    eax,DWORD PTR [ebp-0x8]
  4229d4:	mov    edx,DWORD PTR [ebp-0x10]
  4229d7:	mov    eax,DWORD PTR [eax]
  4229d9:	xor    edx,ecx
  4229db:	add    edx,0x3272ee
  4229e1:	not    edx
  4229e3:	and    eax,edx
  4229e5:	mov    DWORD PTR [ebp-0x4],eax
  4229e8:	movsx  eax,BYTE PTR [eax+0x1]
  4229ec:	cdq    
  4229ed:	add    eax,ebx
  4229ef:	adc    edx,0xffffffff
  4229f2:	xor    eax,edi
  4229f4:	xor    edx,0x0
  4229f7:	cmp    eax,0x70941e0f
  4229fc:	jne    0x423835
  422a02:	cmp    edx,0xffffffff
  422a05:	jne    0x423835
  422a0b:	mov    eax,DWORD PTR [ebp-0x4]
  422a0e:	movsx  eax,BYTE PTR [eax]
  422a11:	cdq    
  422a12:	add    eax,ebx
  422a14:	adc    edx,0xffffffff
  422a17:	xor    eax,edi
  422a19:	xor    edx,0x0
  422a1c:	cmp    eax,0x70941e1c
  422a21:	jne    0x423835
  422a27:	cmp    edx,0xffffffff
  422a2a:	je     0x42384c
  422a30:	jmp    0x423835
  422a35:	sbb    dl,dh
  422a37:	pop    edx
  422a38:	rcl    DWORD PTR [eax-0x6348682f],1
  422a3e:	jae    0x422a78
  422a40:	mov    ebp,ebp
  422a42:	sub    BYTE PTR [ecx+ebx*2],0x7
  422a46:	mov    edi,DWORD PTR [ecx+0x7a]
  422a49:	xchg   edx,eax
  422a4a:	jne    0x422ac6
  422a4c:	jp     0x422a5d
  422a4e:	call   0x1981:0x581a8486
  422a55:	xchg   esi,eax
  422a56:	add    esi,DWORD PTR [ebx-0x22dc91ff]
  422a5c:	rol    BYTE PTR [edx],0xf0
  422a5f:	jge    0x422a2c
  422a61:	not    eax
  422a63:	push   esp
  422a64:	sub    BYTE PTR [eax-0x7e],dh
  422a67:	dec    edi
  422a68:	jge    0x422a4d
  422a6a:	jge    0x422a5f
  422a6c:	sbb    eax,0x4b78d24f
  422a71:	add    al,0x87
  422a73:	ret    
  422a74:	fdivr  st,st(3)
  422a76:	inc    edi
  422a77:	pop    eax
  422a78:	cmp    eax,0x3e90a6c8
  422a7d:	push   edi
  422a7e:	or     ebx,DWORD PTR [edx-0x34]
  422a81:	outs   dx,DWORD PTR ds:[esi]
  422a82:	cmp    al,0xc4
  422a85:	add    al,0xb6
  422a87:	sar    DWORD PTR [esi-0x33],1
  422a8a:	std    
  422a8b:	std    
  422a8c:	cli    
  422a8d:	and    ebp,DWORD PTR [ecx]
  422a8f:	jge    0x422ace
  422a91:	sbb    cl,dh
  422a93:	mov    ch,0x59
  422a95:	jae    0x156dc30c
  422a9b:	in     eax,0x24
  422a9d:	mov    ds:0x4581b1d4,eax
  422aa2:	inc    esi
  422aa3:	shr    DWORD PTR [edi+0x13],1
  422aa6:	add    cl,BYTE PTR [ecx-0x3fdf3f0b]
  422aac:	pushf  
  422aad:	cdq    
  422aae:	lds    esi,FWORD PTR [eax-0x1b]
  422ab1:	in     al,0x53
  422ab3:	lahf   
  422ab4:	repnz push ss
  422ab6:	inc    edi
  422ab7:	sub    BYTE PTR [ebx],0xf2
  422aba:	pop    ecx
  422abb:	jnp    0x422b10
  422abd:	dec    esi
  422abe:	std    
  422abf:	push   ebp
  422ac0:	jb     0x422a82
  422ac2:	in     eax,0xdc
  422ac4:	test   DWORD PTR cs:[edi-0x21],ebx
  422ac8:	cdq    
  422ac9:	pop    eax
  422aca:	mov    ecx,0x7bddb90d
  422acf:	outs   dx,DWORD PTR ds:[esi]
  422ad0:	mov    ecx,0xbe1644f
  422ad5:	and    ah,dh
  422ad7:	sub    eax,esp
  422ad9:	pop    eax
  422ada:	mov    WORD PTR [edi+ecx*8],fs
  422add:	and    eax,0xc1fffcfd
  422ae2:	xor    DWORD PTR [eax+eax*4+0x56],0x18
  422ae7:	jno    0x422b42
  422ae9:	stc    
  422aea:	test   al,0x4d
  422aec:	gs xor eax,0x40a8a5e1
  422af2:	inc    edi
  422af3:	push   edi
  422af4:	adc    DWORD PTR [edi-0x41d7c16b],0x1a267c92
  422afe:	outs   dx,BYTE PTR ds:[esi]
  422aff:	sub    bl,bh
  422b01:	mov    DWORD PTR [eax+ebp*8+0x66],esi
  422b05:	sbb    bl,bh
  422b07:	ins    DWORD PTR es:[edi],dx
  422b08:	cmp    DWORD PTR [ebx],0x3260fb1b
  422b0e:	jbe    0x422b61
  422b10:	add    al,0x5d
  422b12:	xchg   edx,eax
  422b13:	sub    BYTE PTR [ecx-0x17],ch
  422b16:	cmp    al,0x4
  422b18:	outs   dx,DWORD PTR ds:[esi]
  422b19:	int3   
  422b1a:	add    BYTE PTR [ebp+0xbcf8b0e],0x9
  422b21:	out    0xed,al
  422b23:	inc    eax
  422b24:	jno    0x422afd
  422b26:	xor    DWORD PTR [ecx+0x2d],ecx
  422b29:	test   eax,0x3da1d13
  422b2e:	stos   BYTE PTR es:[edi],al
  422b2f:	push   ds
  422b30:	xchg   esp,eax
  422b31:	jno    0x422ae4
  422b33:	jbe    0x422b1f
  422b35:	lock inc eax
  422b37:	xchg   edx,eax
  422b38:	mov    ds:0x9f04e80c,eax
  422b3d:	mov    dl,cl
  422b3f:	aaa    
  422b40:	and    eax,0xb2bd1eb3
  422b45:	xchg   BYTE PTR [ebp+esi*1-0x738de761],al
  422b4c:	in     al,dx
  422b4d:	ror    bl,cl
  422b4f:	xchg   ch,bh
  422b51:	sbb    al,0x14
  422b53:	jle    0x422b40
  422b55:	add    edx,DWORD PTR [esi+0x3bed02bf]
  422b5b:	xlat   BYTE PTR ds:[ebx]
  422b5c:	sub    ebp,DWORD PTR [ebx-0x5eb7f742]
  422b62:	or     DWORD PTR [ebx-0x4105068c],0xa7da3cba
  422b6c:	or     ecx,esi
  422b6e:	jle    0x422b28
  422b70:	in     al,0x4d
  422b72:	inc    edi
  422b73:	adc    bh,0xa9
  422b76:	pop    edi
  422b77:	sti    
  422b78:	stos   DWORD PTR es:[edi],eax
  422b79:	cmp    DWORD PTR [ecx+0x1c4289c6],ebp
  422b7f:	add    cl,BYTE PTR [edi+0xab228c2]
  422b85:	cmp    DWORD PTR [ebp-0x3b4102b4],edi
  422b8b:	popa   
  422b8c:	pop    ebp
  422b8d:	push   edx
  422b8e:	inc    esi
  422b8f:	je     0x422bfd
  422b91:	mov    dl,0x36
  422b93:	xchg   ebx,eax
  422b94:	lea    esp,[edi-0x11297c27]
  422b9a:	es pop ecx
  422b9c:	sub    ecx,DWORD PTR [esi-0x54af2408]
  422ba2:	sahf   
  422ba3:	inc    esp
  422ba4:	xchg   ebp,eax
  422ba5:	(bad)  
  422ba6:	sti    
  422ba7:	dec    ebp
  422ba8:	or     edi,ebp
  422baa:	jbe    0x422b4a
  422bac:	pop    ss
  422bad:	xor    eax,0x34b4ddcf
  422bb2:	loop   0x422bed
  422bb4:	icebp  
  422bb5:	xor    ah,BYTE PTR [ebp+0x297abdfe]
  422bbb:	inc    edi
  422bbc:	shl    BYTE PTR [edx+edi*8+0x34909112],1
  422bc3:	inc    edi
  422bc4:	mov    DWORD PTR [edx],esp
  422bc6:	add    esi,ebx
  422bc8:	xchg   BYTE PTR fs:[ecx+eiz*8-0x4e30b568],cl
  422bd0:	pop    esi
  422bd1:	fistp  WORD PTR [eax-0x34475826]
  422bd7:	inc    ebp
  422bd8:	and    al,0xed
  422bda:	sub    dh,dl
  422bdc:	push   ss
  422bdd:	jecxz  0x422bc1
  422bdf:	ror    DWORD PTR [edx+0x8],cl
  422be2:	stos   BYTE PTR es:[edi],al
  422be3:	fcom   QWORD PTR [esi+ebx*8-0x387cf66d]
  422bea:	add    eax,0x8f74bf6e
  422bef:	jle    0x422c2e
  422bf1:	add    DWORD PTR [edi],eax
  422bf3:	stos   BYTE PTR es:[edi],al
  422bf4:	enter  0xf609,0xd1
  422bf8:	enter  0xf929,0xb4
  422bfc:	lods   eax,DWORD PTR ds:[esi]
  422bfd:	call   0xed585719
  422c02:	cli    
  422c03:	push   ss
  422c04:	enter  0x94e7,0x8b
  422c08:	or     ebx,0xffffffbd
  422c0b:	mov    bh,0x91
  422c0d:	adc    eax,esi
  422c0f:	jo     0x422c3b
  422c11:	lods   eax,DWORD PTR ds:[esi]
  422c12:	dec    ebx
  422c13:	xchg   esp,eax
  422c14:	ret    
  422c15:	or     bl,cl
  422c17:	sub    ch,al
  422c19:	clc    
  422c1a:	mov    eax,0x5e25643a
  422c1f:	popa   
  422c20:	aaa    
  422c21:	mov    al,ds:0x5ad8b40f
  422c26:	aad    0xd9
  422c28:	xchg   BYTE PTR [ebp+0x16],bl
  422c2b:	rcr    DWORD PTR [ecx+0x7630106],cl
  422c31:	adc    cl,BYTE PTR [ecx+ebp*2+0x44]
  422c35:	into   
  422c36:	or     DWORD PTR ds:0xf49d9c65,ebp
  422c3c:	inc    ebx
  422c3d:	fidivr DWORD PTR [ecx-0x3d583028]
  422c43:	pop    edi
  422c44:	loop   0x422c47
  422c46:	shl    DWORD PTR [ebx-0x8b64845],0x7f
  422c4d:	iret   
  422c4e:	push   edx
  422c4f:	cmp    eax,0x3e59ad70
  422c54:	mov    ds:0xa5bd4ff8,eax
  422c59:	add    eax,0xe4610df1
  422c5e:	fucomi st,st(0)
  422c60:	(bad)  
  422c61:	into   
  422c62:	push   0xfffffffb
  422c64:	popf   
  422c65:	dec    edi
  422c66:	add    eax,0x30cab3fb
  422c6b:	jmp    0xd6a8:0x2fb7c1a3
  422c72:	xor    al,0x5f
  422c74:	pop    ecx
  422c75:	inc    esp
  422c76:	xchg   esi,eax
  422c77:	ds leave 
  422c79:	push   ecx
  422c7a:	xchg   edi,eax
  422c7b:	in     eax,dx
  422c7c:	xchg   edi,eax
  422c7d:	sbb    BYTE PTR [edx-0x277c1d60],ch
  422c83:	aas    
  422c84:	ret    
  422c85:	call   0x8744:0xfb6e1aba
  422c8c:	cmp    al,0xbf
  422c8e:	mov    ds:0xa93bc6be,al
  422c93:	popf   
  422c94:	sbb    al,0x9a
  422c96:	inc    eax
  422c97:	gs dec edi
  422c99:	cmp    DWORD PTR [eax-0x32],ecx
  422c9c:	mov    DWORD PTR [ecx-0x6f],esp
  422c9f:	in     eax,0x21
  422ca1:	mov    eax,0xa917eca0
  422ca6:	(bad)  [ebx]
  422ca8:	and    dl,BYTE PTR [edi]
  422caa:	cmc    
  422cab:	in     eax,dx
  422cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cad:	xchg   edx,eax
  422cae:	popf   
  422caf:	cmp    ah,bl
  422cb1:	or     edx,ebx
  422cb3:	fcom   DWORD PTR gs:[ebp+0x5ba1fbdc]
  422cba:	dec    edx
  422cbb:	aas    
  422cbc:	sahf   
  422cbd:	or     al,bl
  422cbf:	mov    edx,DWORD PTR [esi-0x2501f7b5]
  422cc5:	add    dl,al
  422cc7:	and    eax,0x91604db8
  422ccc:	pushf  
  422ccd:	mov    eax,0xcd4681a2
  422cd2:	std    
  422cd3:	leave  
  422cd4:	int3   
  422cd5:	int    0x3a
  422cd7:	and    DWORD PTR [eax+edx*2-0x35dd7f3f],ecx
  422cde:	jge    0x422d48
  422ce0:	ins    BYTE PTR es:[edi],dx
  422ce1:	and    al,0x23
  422ce3:	aas    
  422ce4:	push   0xf471b518
  422ce9:	(bad)  
  422cea:	mov    eax,ds:0x90848496
  422cef:	arpl   WORD PTR [ecx+0x5],bp
  422cf2:	cmp    bh,ah
  422cf4:	and    DWORD PTR [edi+0x4],edx
  422cf7:	daa    
  422cf8:	and    eax,0xf24db606
  422cfd:	pop    esp
  422cfe:	pop    esp
  422cff:	xchg   ebx,eax
  422d00:	adc    DWORD PTR [eax+0x4e2f0085],ebp
  422d06:	lahf   
  422d07:	adc    edx,ebx
  422d09:	sub    bl,bh
  422d0b:	jbe    0x422ce3
  422d0d:	mov    bl,0x93
  422d0f:	and    BYTE PTR [edi+0x1e15f218],dl
  422d15:	sbb    dl,BYTE PTR cs:[eax]
  422d18:	push   cs
  422d19:	jmp    0x422d61
  422d1b:	pop    ds
  422d1c:	int    0x51
  422d1e:	jne    0x422cb2
  422d20:	movups xmm4,XMMWORD PTR [eax+0x64]
  422d24:	imul   ebp,ebp,0x442c0372
  422d2a:	jle    0x422d3b
  422d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d2d:	neg    dl
  422d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d30:	iret   
  422d31:	pop    ds
  422d32:	shl    DWORD PTR [ebx],cl
  422d34:	cmp    eax,ecx
  422d36:	inc    esp
  422d37:	rcl    BYTE PTR [eax+eax*1-0x3617c0ed],cl
  422d3e:	loope  0x422cd3
  422d40:	rcr    DWORD PTR [ebp+ebp*4-0x47],1
  422d44:	jb     0x422d0e
  422d46:	in     eax,dx
  422d47:	cmp    DWORD PTR [ebp+0x25961d61],esp
  422d4d:	and    al,BYTE PTR [eax]
  422d4f:	ins    DWORD PTR es:[edi],dx
  422d50:	sbb    DWORD PTR [ebx],edi
  422d52:	into   
  422d53:	fcmovbe st,st(6)
  422d55:	shl    DWORD PTR [edi+0x3546ea7d],cl
  422d5b:	enter  0xa907,0x33
  422d5f:	aam    0xc8
  422d61:	imul   ecx,DWORD PTR [edx-0x2d],0xffffffa3
  422d65:	lods   al,BYTE PTR cs:[esi]
  422d67:	aaa    
  422d68:	shr    bl,1
  422d6a:	pop    ds
  422d6b:	leave  
  422d6c:	jnp    0x422d96
  422d6e:	popf   
  422d6f:	pushf  
  422d70:	or     al,0x3c
  422d72:	popf   
  422d73:	xchg   ebp,eax
  422d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d75:	cwde   
  422d76:	stos   BYTE PTR es:[edi],al
  422d77:	mov    ebp,0x3ee59d95
  422d7c:	mov    esi,DWORD PTR [ebp-0x5168b0b2]
  422d82:	fucom  st(7)
  422d84:	cwde   
  422d85:	dec    eax
  422d86:	dec    esp
  422d87:	int    0x94
  422d89:	dec    ecx
  422d8a:	adc    BYTE PTR [ecx-0x1081388f],dh
  422d90:	aam    0xd7
  422d92:	retf   
  422d93:	test   DWORD PTR [esi],esi
  422d95:	inc    esi
  422d96:	int    0x3e
  422d98:	pop    ecx
  422d99:	add    ch,BYTE PTR [edx+0x6aadd3af]
  422d9f:	shl    DWORD PTR [ebp+0xa742c99],0x15
  422da6:	(bad)  
  422da7:	cs xchg esp,eax
  422da9:	ins    DWORD PTR es:[edi],dx
  422daa:	push   ecx
  422dab:	sti    
  422dac:	imul   ecx,DWORD PTR [esi],0xffffff95
  422daf:	loopne 0x422dd0
  422db1:	adc    ch,BYTE PTR [ebx+0x4]
  422db4:	dec    ebp
  422db5:	xlat   BYTE PTR ds:[ebx]
  422db6:	xchg   ebx,eax
  422db7:	sahf   
  422db8:	xadd   BYTE PTR [esi-0x60cf1417],bl
  422dbf:	call   0x2da5771d
  422dc4:	xlat   BYTE PTR ds:[ebx]
  422dc5:	mov    esp,0x148ddf92
  422dca:	or     DWORD PTR ds:0x486e9a5f,eax
  422dd0:	sbb    BYTE PTR [eax],bl
  422dd2:	adc    ah,BYTE PTR [esi]
  422dd4:	adc    al,ch
  422dd6:	mov    dl,0x69
  422dd8:	or     eax,0x9d9cf2ae
  422ddd:	push   ds
  422dde:	xor    BYTE PTR [edx+0x75],al
  422de1:	retf   
  422de2:	test   al,0x27
  422de4:	mov    ds:0x334dd10,al
  422de9:	adc    ah,BYTE PTR [eax]
  422deb:	mov    ebp,eax
  422ded:	xor    cl,BYTE PTR [esi+0x6]
  422df0:	(bad)  
  422df1:	in     al,dx
  422df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422df3:	in     eax,dx
  422df4:	sub    eax,0xcdb8c31
  422df9:	dec    bl
  422dfb:	pop    esi
  422dfc:	mov    al,0x83
  422dfe:	inc    edi
  422dff:	adc    ah,BYTE PTR [edx]
  422e01:	sbb    eax,0x1b93ad1b
  422e06:	xchg   ebx,eax
  422e07:	bound  eax,QWORD PTR [esi-0x3a39547f]
  422e0d:	inc    eax
  422e0e:	push   ebp
  422e0f:	jge    0x422dd2
  422e11:	or     ecx,DWORD PTR es:[edx+0x32015c5c]
  422e18:	inc    ebp
  422e19:	or     ecx,DWORD PTR [esi-0x36]
  422e1c:	clc    
  422e1d:	repz xor cl,cl
  422e20:	or     eax,0xd92936de
  422e25:	lock lds eax,FWORD PTR [eax-0x4b53b109]
  422e2c:	push   es
  422e2d:	mov    ebx,0xbeffafa
  422e32:	mov    esi,0x1990f07f
  422e37:	repnz bswap eax
  422e3a:	mov    DWORD PTR [eax],esp
  422e3c:	xor    eax,0x18e407e9
  422e41:	aam    0x5d
  422e43:	xchg   ebx,eax
  422e44:	loope  0x422df8
  422e46:	repz in al,0xde
  422e49:	lock mov dh,0x18
  422e4c:	and    eax,0x5bf02f41
  422e51:	jb     0x422e2f
  422e53:	inc    ecx
  422e54:	xlat   BYTE PTR ds:[ebx]
  422e55:	div    DWORD PTR [eax-0x2057caf9]
  422e5b:	or     eax,0x42b63ba9
  422e60:	in     al,dx
  422e61:	lahf   
  422e62:	push   cs
  422e63:	mov    bl,0x7d
  422e65:	xchg   ebx,esi
  422e67:	sti    
  422e68:	inc    ebp
  422e69:	imul   eax,DWORD PTR [esi+esi*1+0xdd7a4f1],0x38
  422e71:	xchg   DWORD PTR [eax+0x2982ced6],ebx
  422e77:	and    edx,DWORD PTR [edi+eiz*1+0x2f54e074]
  422e7e:	jmp    0x422eda
  422e80:	fdiv   DWORD PTR [ebp+ebp*8+0x3]
  422e84:	mov    ds:0xf15fba9d,eax
  422e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e8a:	dec    edi
  422e8b:	and    BYTE PTR [ebx+0xb66668c],0x96
  422e92:	(bad)  
  422e93:	push   0x1d
  422e95:	popf   
  422e96:	ret    
  422e97:	lahf   
  422e98:	cmp    ch,0x3
  422e9b:	mov    bl,dl
  422e9d:	lock sar esp,cl
  422ea0:	in     al,dx
  422ea1:	bound  edx,QWORD PTR [edi-0x4c99a8e0]
  422ea7:	mov    ch,dl
  422ea9:	fs mov eax,0x285d135c
  422eaf:	or     eax,0xf4e946f6
  422eb4:	jnp    0x422e43
  422eb6:	in     eax,0x96
  422eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eb9:	xor    ch,BYTE PTR [edi]
  422ebb:	sbb    esp,DWORD PTR [esi-0x33]
  422ebe:	(bad)  
  422ebf:	nop
  422ec0:	dec    edi
  422ec1:	loopne 0x422eec
  422ec3:	sub    BYTE PTR [eax-0x15],dl
  422ec6:	push   esi
  422ec7:	jle    0x422f13
  422ec9:	stos   DWORD PTR es:[edi],eax
  422eca:	sbb    ah,BYTE PTR [ecx]
  422ecc:	add    DWORD PTR [eax+0x28fa5a62],edi
  422ed2:	add    eax,0x4cfb569c
  422ed7:	das    
  422ed8:	or     eax,ecx
  422eda:	cmp    al,0x69
  422edc:	pop    eax
  422edd:	and    eax,0x983d9977
  422ee2:	(bad)  
  422ee3:	lds    edx,FWORD PTR [ebp+0x5b]
  422ee6:	xchg   ebp,eax
  422ee7:	aad    0x8e
  422ee9:	jae    0x422f10
  422eeb:	mov    eax,ds:0xe6adf9af
  422ef0:	test   BYTE PTR [esi],cl
  422ef2:	lock repz push eax
  422ef5:	push   0xffffffec
  422ef7:	ja     0x422f75
  422ef9:	cmp    bh,BYTE PTR [edx-0x704563a7]
  422eff:	clc    
  422f00:	sbb    al,0x13
  422f02:	xchg   ecx,eax
  422f03:	(bad)  
  422f04:	ret    
  422f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f06:	xchg   edx,eax
  422f07:	push   esi
  422f08:	clc    
  422f09:	jae    0x422f3a
  422f0b:	jb     0x422f72
  422f0d:	jle    0x422edd
  422f0f:	jmp    0x1610cb8
  422f14:	jg     0x422f59
  422f16:	add    esp,DWORD PTR [ebp+0x7a063601]
  422f1c:	mov    bl,BYTE PTR [eax]
  422f1e:	pop    ds
  422f1f:	or     eax,DWORD PTR [eax-0x36]
  422f22:	lahf   
  422f23:	test   BYTE PTR [eax],0xa5
  422f26:	sub    dl,dl
  422f28:	pushf  
  422f29:	pop    edx
  422f2a:	xchg   esp,eax
  422f2b:	es pop ebp
  422f2d:	retf   0x8deb
  422f30:	ds ds je 0x422f85
  422f34:	inc    ebx
  422f35:	data16 sbb cl,bh
  422f38:	(bad)  
  422f39:	(bad)  
  422f3a:	fist   DWORD PTR [eax-0x1e]
  422f3d:	mov    dh,0x42
  422f3f:	inc    ebp
  422f40:	pusha  
  422f41:	out    0x20,eax
  422f43:	pop    esp
  422f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f45:	in     al,0x9e
  422f47:	xchg   ah,bh
  422f49:	ins    BYTE PTR es:[edi],dx
  422f4a:	repnz shl edx,0x43
  422f4e:	out    dx,eax
  422f4f:	leave  
  422f50:	mov    bl,BYTE PTR [edi+0x5034070f]
  422f56:	imul   ebp,ebp,0x5b
  422f59:	out    0xeb,al
  422f5b:	mov    ecx,0x4c771ee3
  422f60:	xor    BYTE PTR [edx-0x3e0ccf0b],cl
  422f66:	(bad)  
  422f67:	pop    ebp
  422f68:	jmp    0x422f03
  422f6a:	jno    0x422fd6
  422f6c:	call   0xc6858441
  422f71:	(bad)  
  422f72:	jge    0x422f5a
  422f74:	cmp    eax,DWORD PTR [edx]
  422f76:	or     al,0xa3
  422f78:	dec    ebp
  422f79:	int    0xf7
  422f7b:	pop    es
  422f7c:	repz shr BYTE PTR fs:[edi-0x603374d9],cl
  422f84:	sub    BYTE PTR [edi-0x706469f7],dl
  422f8a:	adc    ecx,DWORD PTR [edx]
  422f8c:	out    0xa3,al
  422f8e:	out    0x6a,al
  422f90:	sbb    esi,esi
  422f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f93:	fistp  DWORD PTR [edi]
  422f95:	dec    eax
  422f96:	sti    
  422f97:	push   cs
  422f98:	inc    edx
  422f99:	outs   dx,DWORD PTR ds:[esi]
  422f9a:	hlt    
  422f9b:	xchg   ecx,eax
  422f9c:	add    al,0x8c
  422f9e:	sbb    ebx,DWORD PTR [edi+0x1aff3662]
  422fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fa5:	icebp  
  422fa6:	xchg   esp,eax
  422fa7:	imul   ebp,esp,0x67
  422faa:	ficomp WORD PTR [edi+ebx*8-0x1ffc13bc]
  422fb1:	and    al,0xfa
  422fb3:	or     DWORD PTR [edx+0x1df35aa9],esi
  422fb9:	jae    0x422f76
  422fbb:	into   
  422fbc:	or     BYTE PTR [ecx+0x1f],0x9e
  422fc0:	cld    
  422fc1:	xchg   DWORD PTR [ecx+edx*2-0x2c54796e],ebp
  422fc8:	call   0xa45adc5c
  422fcd:	out    dx,al
  422fce:	outs   dx,BYTE PTR ds:[esi]
  422fcf:	test   eax,0x2095282
  422fd4:	ficomp WORD PTR [ebp-0x70]
  422fd7:	popa   
  422fd8:	sub    esp,ecx
  422fda:	rcl    DWORD PTR [ebx+0x10],cl
  422fdd:	rol    DWORD PTR [ebx],cl
  422fdf:	xlat   BYTE PTR ds:[ebx]
  422fe0:	fwait
  422fe1:	mov    eax,ds:0x2ff7a5bd
  422fe6:	jns    0x423030
  422fe8:	call   0x82a6:0xa7872415
  422fef:	or     al,BYTE PTR [ebx]
  422ff1:	xchg   ebx,eax
  422ff2:	dec    ecx
  422ff3:	ror    DWORD PTR [ebp+0x5e],cl
  422ff6:	add    DWORD PTR [edx],esi
  422ff8:	rcl    BYTE PTR [esi-0x5ae039ae],1
  422ffe:	ss push esp
  423000:	xor    BYTE PTR [bp+di+0x4d00],0x6f
  423006:	stc    
  423007:	mov    al,ds:0xba2d7a2c
  42300c:	arpl   WORD PTR [edx],bp
  42300e:	jb     0x423082
  423010:	cld    
  423011:	stc    
  423012:	mov    ch,0x77
  423014:	dec    esi
  423015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423016:	mov    al,0x67
  423018:	mov    edx,0x8de2eb59
  42301d:	dec    esp
  42301e:	fisub  WORD PTR [eax]
  423020:	dec    ecx
  423021:	cmp    DWORD PTR [ebx],0x79
  423024:	dec    ebx
  423025:	mov    ebx,0x5be22faa
  42302a:	icebp  
  42302b:	ret    0x348c
  42302e:	jno    0x423086
  423030:	dec    ecx
  423031:	push   edx
  423032:	or     bl,0x9d
  423035:	pop    ds
  423036:	adc    eax,0x964daf7d
  42303b:	(bad)  
  42303d:	arpl   WORD PTR [edi+esi*4-0x2e12f912],si
  423044:	fnstenv [edx+0x14a74fa1]
  42304a:	jns    0x4230a4
  42304c:	mov    esp,edi
  42304e:	mov    WORD PTR [ebx-0xd],?
  423051:	jnp    0x423028
  423053:	stos   BYTE PTR es:[edi],al
  423054:	mov    bl,BYTE PTR [ebx]
  423056:	adc    eax,0xa15461b8
  42305b:	xchg   ebx,eax
  42305c:	push   eax
  42305d:	test   al,0xc4
  42305f:	or     cl,BYTE PTR [esi-0x27]
  423062:	xor    bh,BYTE PTR [ebp+0x4f]
  423065:	stos   DWORD PTR es:[edi],eax
  423066:	rcr    BYTE PTR [edx-0x80],1
  423069:	daa    
  42306a:	cs jno 0x423082
  42306d:	pushf  
  42306e:	dec    esi
  42306f:	pop    edi
  423070:	sti    
  423071:	sbb    cl,BYTE PTR [ecx-0x59]
  423074:	jmp    0x42300c
  423076:	ret    0xc9cf
  423079:	add    DWORD PTR [ebx],ecx
  42307b:	call   0x24b2:0x1281c903
  423082:	xor    ah,dh
  423084:	jle    0x423079
  423086:	cmp    BYTE PTR [ecx],dl
  423088:	push   eax
  423089:	inc    ecx
  42308a:	xchg   edi,ebp
  42308c:	retf   0xfa5a
  42308f:	cmp    BYTE PTR [eax+edx*2],al
  423092:	hlt    
  423093:	or     al,0x28
  423095:	and    al,0xdb
  423097:	add    BYTE PTR ds:0x555eaf9f,0x60
  42309e:	stos   BYTE PTR es:[edi],al
  42309f:	out    0x5c,eax
  4230a1:	xor    ch,BYTE PTR [esi+0x2e834844]
  4230a7:	xor    esp,DWORD PTR [ebx+0x65]
  4230aa:	inc    edx
  4230ab:	inc    ebp
  4230ac:	push   edx
  4230ad:	mov    WORD PTR [esi],cs
  4230af:	sub    edi,esi
  4230b1:	out    dx,eax
  4230b2:	inc    ebp
  4230b3:	fdivr  DWORD PTR [esi+eiz*1]
  4230b6:	sbb    dh,BYTE PTR cs:[ecx+eax*1+0x69]
  4230bb:	xchg   ebx,eax
  4230bc:	loop   0x4230a4
  4230be:	xchg   bl,ch
  4230c0:	scas   al,BYTE PTR es:[edi]
  4230c1:	push   0x984278d7
  4230c6:	shr    DWORD PTR ds:0xd0045fef,cl
  4230cc:	and    BYTE PTR ds:0x8b4cda66,bl
  4230d2:	test   eax,0x9a5089ed
  4230d7:	mov    al,0x98
  4230d9:	jg     0x4230b2
  4230db:	repnz out dx,al
  4230dd:	fild   WORD PTR [ecx-0xe]
  4230e0:	es fs dec esp
  4230e3:	fist   WORD PTR [ecx]
  4230e5:	inc    edx
  4230e6:	pushf  
  4230e7:	(bad)  
  4230e8:	dec    ebp
  4230e9:	or     al,0x9d
  4230eb:	and    ch,dl
  4230ed:	sub    dl,BYTE PTR [edi+ebx*2]
  4230f0:	cmp    al,0xcf
  4230f2:	icebp  
  4230f3:	add    eax,0x1b02c358
  4230f8:	push   edi
  4230f9:	int    0x82
  4230fb:	xchg   BYTE PTR [ecx+ebx*4+0x63],dl
  4230ff:	into   
  423100:	shl    DWORD PTR [eax],0xed
  423103:	je     0x423124
  423105:	sbb    al,al
  423107:	jl     0x423110
  423109:	enter  0xd9f5,0x77
  42310d:	(bad)  
  42310e:	mov    eax,ds:0xe05974cb
  423113:	outs   dx,DWORD PTR ds:[esi]
  423114:	mov    ebp,0xd14d001
  423119:	adc    ebp,DWORD PTR [edi+edi*8-0x80]
  42311d:	jp     0x42313d
  42311f:	ret    0x1a2b
  423122:	push   0x303ed516
  423127:	jmp    0x423142
  423129:	(bad)  
  42312a:	mov    ecx,0xaf9e5efa
  42312f:	add    bl,BYTE PTR [edx-0x4b4c5d44]
  423135:	popa   
  423136:	into   
  423137:	sub    bh,BYTE PTR [ecx+ebx*8+0x41]
  42313b:	sbb    DWORD PTR [edx],ebp
  42313d:	push   0xffffffd7
  42313f:	mov    ah,0x7
  423141:	pushf  
  423142:	cs pop esi
  423144:	ror    ecx,cl
  423146:	mov    WORD PTR [ecx+0x53],ds
  423149:	fdivr  QWORD PTR [ebx]
  42314b:	retf   
  42314c:	jnp    0x4231c1
  42314e:	pop    ebp
  42314f:	enter  0x3462,0xbe
  423153:	or     al,0x27
  423155:	(bad)  
  423157:	addr16 pusha 
  423159:	jne    0x4231c9
  42315b:	xchg   eax,edx
  42315d:	push   cs
  42315e:	ds pop edi
  423160:	(bad)  
  423161:	cwde   
  423162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423163:	(bad)  [edx+0x3fefdf01]
  423169:	xor    al,BYTE PTR [ebp-0x24]
  42316c:	push   edi
  42316d:	mov    esp,0x5d9a1e03
  423172:	stos   DWORD PTR es:[edi],eax
  423173:	mov    al,ds:0x8baaf778
  423178:	dec    edx
  423179:	ins    BYTE PTR es:[edi],dx
  42317a:	imul   esp,ebp,0x5650bc1c
  423180:	sub    eax,0x6d7ffc94
  423185:	scas   al,BYTE PTR es:[edi]
  423186:	out    0xa,al
  423188:	stc    
  423189:	fld    DWORD PTR [eax-0x2903582b]
  42318f:	mov    al,BYTE PTR [esi]
  423191:	dec    ebx
  423192:	(bad)  
  423193:	mov    bl,0xfc
  423195:	out    0xeb,eax
  423197:	push   ebx
  423198:	push   ebx
  423199:	lahf   
  42319a:	push   0x3e36b2b8
  42319f:	int3   
  4231a0:	(bad)  
  4231a1:	xlat   BYTE PTR ds:[ebx]
  4231a2:	xor    dl,BYTE PTR [ecx+0x26]
  4231a5:	adc    BYTE PTR [esi+ebx*2],dl
  4231a8:	dec    esp
  4231a9:	and    edx,DWORD PTR [ebx]
  4231ab:	pop    eax
  4231ac:	arpl   WORD PTR ds:0xfd5913f1,di
  4231b2:	inc    ecx
  4231b3:	and    DWORD PTR [edi*4+0x37ed94f],edi
  4231ba:	mov    edx,ebx
  4231bc:	pop    ds
  4231bd:	xor    al,0x99
  4231bf:	fld    TBYTE PTR [eax]
  4231c1:	js     0x423206
  4231c3:	mov    ah,0x4d
  4231c5:	cmp    al,BYTE PTR [edx]
  4231c7:	pusha  
  4231c8:	aas    
  4231c9:	pop    ebp
  4231ca:	cmp    BYTE PTR [ecx],ah
  4231cc:	dec    eax
  4231cd:	ficom  DWORD PTR [esi+edx*4+0x496729c7]
  4231d4:	in     al,0x9b
  4231d6:	push   0xffffff8b
  4231d8:	xor    eax,0xe6e79a24
  4231dd:	add    dl,BYTE PTR [ebx+0x5e774a66]
  4231e3:	imul   BYTE PTR [ebx-0x78faf6df]
  4231e9:	xchg   ecx,eax
  4231ea:	add    esi,eax
  4231ec:	push   ss
  4231ed:	or     DWORD PTR [edx],edx
  4231ef:	dec    edx
  4231f0:	hlt    
  4231f1:	ins    BYTE PTR es:[edi],dx
  4231f2:	test   al,bh
  4231f4:	sbb    eax,0x6e2ac83c
  4231f9:	cmp    eax,DWORD PTR [ecx+0x50]
  4231fc:	jbe    0x423277
  4231fe:	push   ebx
  4231ff:	lods   eax,DWORD PTR ds:[esi]
  423200:	push   cs
  423201:	mov    al,0x57
  423203:	test   BYTE PTR [esi-0x2d],0x5
  423207:	push   ecx
  423208:	mov    dl,0x86
  42320a:	pop    esi
  42320b:	mov    ?,WORD PTR [ebx+0x4]
  42320e:	fadd   QWORD PTR [ecx-0x35]
  423211:	retf   0xcb86
  423214:	jge    0x4231ae
  423216:	inc    esp
  423217:	std    
  423218:	aad    0x22
  42321a:	shr    DWORD PTR [edi+0x9],0x2b
  42321e:	test   dl,bl
  423220:	push   0xb4eee584
  423225:	jmp    0x423296
  423227:	dec    ebp
  423228:	xchg   esi,eax
  423229:	repnz xchg edx,eax
  42322b:	cli    
  42322c:	sbb    ah,BYTE PTR [edx-0x86c86b0]
  423232:	jg     0x423200
  423234:	pop    esp
  423235:	outs   dx,BYTE PTR ds:[esi]
  423236:	inc    esp
  423237:	ins    DWORD PTR es:[edi],dx
  423238:	push   esi
  423239:	std    
  42323a:	xchg   ebp,edx
  42323c:	aas    
  42323d:	mov    cl,0x2
  42323f:	std    
  423240:	jae    0x4232b7
  423242:	mov    ecx,0x819c0f0d
  423247:	mov    ch,0x22
  423249:	dec    edx
  42324a:	jne    0x42322e
  42324c:	in     eax,dx
  42324d:	test   DWORD PTR [ecx],ebx
  42324f:	js     0x4231f4
  423251:	jb     0x423232
  423253:	and    esi,DWORD PTR [ebp+0x2d]
  423256:	mov    ecx,edi
  423258:	fs ret 0xbeb4
  42325c:	xor    bh,0xb4
  42325f:	xchg   edx,eax
  423260:	je     0x423210
  423262:	repnz pusha 
  423264:	fnsave [edi]
  423266:	xor    eax,0x3b07a312
  42326b:	int    0x3b
  42326d:	add    BYTE PTR [eax],0x6f
  423270:	add    ch,BYTE PTR [edx-0x32]
  423273:	sbb    ebx,edx
  423275:	aas    
  423276:	lods   eax,DWORD PTR ds:[esi]
  423277:	dec    ebp
  423278:	push   ss
  423279:	push   esp
  42327a:	xchg   BYTE PTR [esi+ebx*8-0x76],cl
  42327e:	mov    ecx,0xe3accee
  423283:	test   eax,0xab41a4e9
  423288:	push   DWORD PTR [ebx-0xd18b3a0]
  42328e:	dec    edx
  42328f:	stos   DWORD PTR es:[edi],eax
  423290:	std    
  423291:	jo     0x42323a
  423293:	xlat   BYTE PTR ds:[ebx]
  423294:	push   0x4d
  423296:	lea    edx,[esi]
  423298:	ds jbe 0x42321d
  42329b:	mov    esp,0xf48f685d
  4232a0:	mov    edx,DWORD PTR [eax-0x69]
  4232a3:	(bad)  
  4232a4:	lock mov edx,DWORD PTR [ebp-0x419c457b]
  4232ab:	xor    BYTE PTR [esi-0x37fe9f34],dl
  4232b1:	cwde   
  4232b2:	in     eax,0xf9
  4232b4:	jecxz  0x423247
  4232b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b7:	cdq    
  4232b8:	jmp    0x3e32:0x7c98e4da
  4232bf:	hlt    
  4232c0:	enter  0x2f13,0x77
  4232c4:	dec    ebx
  4232c5:	shl    DWORD PTR [edx-0x4e83b12b],cl
  4232cb:	sar    BYTE PTR [ecx+0x45ff2702],0x62
  4232d2:	or     esp,edi
  4232d4:	rcr    BYTE PTR [esi],1
  4232d6:	es in  al,0x7f
  4232d9:	sti    
  4232da:	jns    0x42328d
  4232dc:	xchg   esp,eax
  4232dd:	outs   dx,DWORD PTR cs:[esi]
  4232df:	jmp    0xf8071f86
  4232e4:	enter  0x9df,0x9f
  4232e8:	(bad)  
  4232e9:	mov    ds:0xe1506dfb,al
  4232ee:	xor    dh,bl
  4232f0:	mov    bl,0x9f
  4232f2:	inc    ebp
  4232f3:	stos   DWORD PTR es:[edi],eax
  4232f4:	mov    ds:0xf35891c7,al
  4232f9:	adc    bl,bl
  4232fb:	xchg   esp,eax
  4232fc:	fs dec esi
  4232fe:	test   ebp,eax
  423300:	int3   
  423301:	ins    BYTE PTR es:[edi],dx
  423302:	pop    eax
  423303:	push   edx
  423304:	jae    0x4232b7
  423306:	jmp    0x4232e5
  423308:	pop    esi
  423309:	jns    0x4232bc
  42330b:	dec    ebx
  42330c:	xor    eax,0x1f31040
  423311:	pop    es
  423312:	cmp    BYTE PTR [edi],0x3f
  423315:	das    
  423316:	daa    
  423317:	jge    0x4232ab
  423319:	add    al,0xcb
  42331b:	mov    ebx,0x99a2018d
  423320:	or     eax,0x28a978bc
  423325:	sub    al,0x48
  423327:	das    
  423328:	fistp  WORD PTR ds:0xe1765510
  42332e:	jge    0x4232d0
  423330:	xchg   edi,eax
  423331:	jno    0x423395
  423333:	xor    BYTE PTR [ebp+0x5e4be005],dl
  423339:	inc    edi
  42333a:	loopne 0x423362
  42333c:	xor    edi,ebp
  42333e:	pop    esi
  42333f:	mov    eax,0xc829d5e2
  423344:	mov    esp,0x6553d0fb
  423349:	mov    edx,0xdf07467b
  42334e:	mov    cl,0xe1
  423350:	rol    bh,cl
  423352:	dec    ebx
  423353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423354:	push   ebp
  423355:	lea    ebx,[ebp-0x1]
  423358:	mov    WORD PTR [esi],cs
  42335a:	test   DWORD PTR [edi+ebp*1],ebx
  42335d:	mov    ecx,0x7ed4585d
  423362:	push   es
  423363:	add    al,0x59
  423365:	pop    ecx
  423366:	stos   BYTE PTR es:[edi],al
  423367:	ins    DWORD PTR es:[edi],dx
  423368:	sahf   
  423369:	sbb    DWORD PTR [edx-0x67d0cade],ebx
  42336f:	jb     0x423379
  423371:	fucomp st(7)
  423373:	das    
  423374:	push   0xc0e0fef1
  423379:	cmp    ch,bl
  42337b:	in     eax,0xba
  42337d:	and    al,0xec
  423380:	sub    DWORD PTR [esi+0x54],ebx
  423383:	bound  eax,QWORD PTR [ebx+0x3e]
  423386:	int    0x1f
  423388:	gs push esp
  42338a:	jl     0x42337f
  42338c:	ss dec ebx
  42338e:	sbb    DWORD PTR [ebx*4-0x35e3c7f8],esp
  423395:	rcl    BYTE PTR [ecx+0x1],0xc0
  423399:	mov    ecx,DWORD PTR [ebp-0x3e12d1b3]
  42339f:	in     eax,0x8b
  4233a1:	fs sahf 
  4233a3:	ins    DWORD PTR es:[edi],dx
  4233a4:	dec    esi
  4233a5:	inc    DWORD PTR [edx+0x7a6e35ba]
  4233ab:	jg     0x423414
  4233ad:	sbb    bl,BYTE PTR [esi-0x5e]
  4233b0:	shl    edx,0x1c
  4233b3:	jae    0x42342b
  4233b5:	scas   al,BYTE PTR es:[edi]
  4233b6:	push   ebp
  4233b7:	ret    0xbd35
  4233ba:	(bad)  
  4233bb:	push   esp
  4233bc:	les    esi,FWORD PTR ds:0x1bf12521
  4233c2:	lea    ebx,[esi+ebp*1-0x20595286]
  4233c9:	push   ecx
  4233ca:	jnp    0x42338e
  4233cc:	stos   DWORD PTR es:[edi],eax
  4233cd:	mov    al,ds:0x18e8db12
  4233d2:	cld    
  4233d3:	sub    eax,0x76d3f763
  4233d8:	push   edi
  4233d9:	neg    BYTE PTR ss:0xb6f42f55
  4233e0:	mov    esi,ebx
  4233e2:	rol    BYTE PTR [esi-0x24],cl
  4233e5:	jnp    0x4233dd
  4233e7:	cmp    dh,BYTE PTR [edi-0x11]
  4233ea:	add    ch,bl
  4233ec:	lods   eax,DWORD PTR ds:[esi]
  4233ed:	dec    ebp
  4233ee:	sub    esi,edx
  4233f0:	mov    cs,WORD PTR [eax+0x70aef605]
  4233f6:	mov    al,ds:0xa9be5e8e
  4233fb:	mov    al,0x60
  4233fd:	inc    esp
  4233fe:	rcl    BYTE PTR [esp+ecx*1-0x2b],1
  423402:	ret    
  423403:	test   BYTE PTR [edx+0x5b],0xba
  423407:	(bad)  
  423408:	cmp    esp,DWORD PTR [ebp-0x21]
  42340b:	add    dl,BYTE PTR [edi+0x67]
  42340e:	push   edi
  42340f:	add    edi,esi
  423411:	push   edx
  423412:	loopne 0x4233db
  423414:	ss mov ebp,0x16b61db6
  42341a:	cs add al,0x37
  42341d:	pop    eax
  42341e:	xor    bh,ah
  423420:	xchg   esp,eax
  423421:	mov    edi,DWORD PTR [edi-0x1]
  423424:	add    cl,BYTE PTR [eax+0x4834f7d6]
  42342a:	pop    edi
  42342b:	mov    ebx,0x99234b3c
  423430:	imul   edi,DWORD PTR [ecx+0x6e],0xaee72b12
  423437:	push   0x48b3f330
  42343c:	sahf   
  42343d:	jno    0x4233db
  42343f:	je     0x423417
  423441:	out    0x6e,eax
  423443:	mov    eax,0x727890e5
  423448:	and    eax,0x591a949f
  42344d:	stc    
  42344e:	sub    DWORD PTR [ebp+0x175bcdd7],esp
  423454:	pop    edx
  423455:	jmp    0x59a3:0xbb6bd6dd
  42345c:	jmp    0x3d0d84f9
  423461:	fsubr  DWORD PTR [eax+0x738090a2]
  423467:	adc    al,cl
  423469:	adc    dl,BYTE PTR [esi]
  42346b:	lock push ecx
  42346d:	inc    ebp
  42346e:	dec    edi
  42346f:	pop    ebp
  423470:	ret    0x5115
  423473:	lock inc esi
  423475:	retf   
  423476:	(bad)  
  423477:	adc    eax,DWORD PTR [esi+0x1f]
  42347a:	cmp    eax,0x84330b6b
  42347f:	push   0x7b7d425f
  423484:	or     esp,DWORD PTR [ecx+0x165b4576]
  42348a:	adc    eax,0x89938e34
  42348f:	scas   eax,DWORD PTR es:[edi]
  423490:	retf   
  423491:	adc    eax,0x208be27
  423496:	xor    al,0x93
  423498:	add    DWORD PTR [esi+ebp*2-0x6a],ebx
  42349c:	stos   DWORD PTR es:[edi],eax
  42349d:	pop    edi
  42349e:	adc    edx,DWORD PTR [esi+0x79]
  4234a1:	mov    eax,0x9203ee45
  4234a6:	(bad)  
  4234a7:	xor    esp,ebp
  4234a9:	cdq    
  4234aa:	mov    ebx,0xbd785077
  4234af:	mov    BYTE PTR [edx],cl
  4234b1:	add    BYTE PTR [edx+ecx*4+0x59],0xd3
  4234b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234b7:	mov    al,0xef
  4234b9:	mov    WORD PTR [ebx+0x14],?
  4234bc:	inc    esp
  4234bd:	push   edx
  4234be:	adc    DWORD PTR [ecx+0x3bfcb49],esp
  4234c4:	shl    DWORD PTR [ebx],cl
  4234c6:	and    bl,BYTE PTR [edx]
  4234c8:	sahf   
  4234c9:	mov    BYTE PTR [ebp-0x47a4f968],bh
  4234cf:	xor    BYTE PTR [edx],ch
  4234d1:	test   al,0x5c
  4234d3:	std    
  4234d4:	xor    DWORD PTR [ecx],ebp
  4234d6:	aaa    
  4234d7:	mov    ebp,0x57d3d5ed
  4234dc:	mov    edx,DWORD PTR [edi+0x3d1be9e1]
  4234e2:	hlt    
  4234e3:	test   BYTE PTR [eax],cl
  4234e5:	cmp    dl,BYTE PTR [edi-0x16]
  4234e8:	dec    ebx
  4234e9:	dec    ecx
  4234ea:	(bad)  
  4234ec:	fs jo  0x423497
  4234ef:	pop    eax
  4234f0:	bound  esi,QWORD PTR [eax+0x66b96f62]
  4234f6:	stos   DWORD PTR es:[edi],eax
  4234f7:	mov    al,BYTE PTR [esp+ecx*4+0x74]
  4234fb:	ficomp DWORD PTR [edi]
  4234fd:	ja     0x423539
  4234ff:	or     bh,BYTE PTR [eax+0x4dd4939c]
  423505:	jo     0x42351f
  423507:	jp     0x423569
  423509:	add    BYTE PTR [edx],dh
  42350b:	xchg   ebx,eax
  42350c:	mov    ds,WORD PTR [edx-0x70]
  42350f:	lock lods eax,DWORD PTR ds:[esi]
  423511:	pop    esp
  423512:	add    edx,0x67
  423515:	dec    ebx
  423516:	js     0x42353d
  423518:	iret   
  423519:	dec    edx
  42351a:	or     al,0xf9
  42351c:	lar    edi,WORD PTR [esi+0x1c84fa61]
  423523:	inc    edi
  423524:	jecxz  0x4235a2
  423526:	aad    0x4b
  423528:	sbb    DWORD PTR [esi-0x64],0x24
  42352c:	mov    edi,0x6c882566
  423531:	adc    DWORD PTR [ecx+0x2cfad414],edx
  423537:	outs   dx,DWORD PTR ds:[esi]
  423538:	cwde   
  423539:	in     al,dx
  42353a:	shl    cl,0x26
  42353d:	or     ch,BYTE PTR [ecx]
  42353f:	mov    bh,0x96
  423541:	xchg   ecx,eax
  423542:	pop    ds
  423543:	fmul   st(3),st
  423545:	call   0xfe04ebca
  42354a:	add    al,0x5a
  42354c:	mov    al,0x58
  42354e:	ss adc eax,0x577062ca
  423554:	mov    WORD PTR [ebx+0x68],cs
  423557:	pop    edx
  423558:	aad    0x8f
  42355a:	sti    
  42355b:	retf   0x8cf4
  42355e:	repnz adc edx,eax
  423561:	(bad)  
  423562:	mov    dl,0xf3
  423564:	ins    BYTE PTR es:[edi],dx
  423565:	mov    edx,0x5c45a8ad
  42356a:	sbb    eax,0x8fbf06e2
  42356f:	jmp    0x903fd8ae
  423574:	retf   
  423575:	outs   dx,BYTE PTR ds:[esi]
  423576:	popf   
  423577:	fadd   QWORD PTR [edx]
  423579:	xchg   ebp,eax
  42357a:	mov    ebp,DWORD PTR [ebp+0x26368b5e]
  423580:	loopne 0x4235d1
  423582:	push   edx
  423583:	sbb    eax,0x62d6dbe0
  423588:	imul   esp,DWORD PTR [esi+0x9e08f8a],0x6e
  42358f:	jle    0x4235d3
  423591:	xchg   ebx,eax
  423592:	adc    al,dh
  423594:	pop    ecx
  423595:	stos   DWORD PTR es:[edi],eax
  423596:	sub    eax,esi
  423598:	jnp    0x42358a
  42359a:	pop    edi
  42359b:	or     al,0x8f
  42359d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42359e:	gs nop
  4235a0:	cs mov ebx,0x5256ae4c
  4235a6:	sbb    ebp,edi
  4235a8:	outs   dx,DWORD PTR ds:[esi]
  4235a9:	mov    edi,0x4d3d5386
  4235ae:	div    bh
  4235b0:	sbb    edx,ebp
  4235b2:	sbb    ecx,DWORD PTR [ebp-0x78]
  4235b5:	aaa    
  4235b6:	inc    edx
  4235b7:	jae    0x423588
  4235b9:	jo     0x423579
  4235bb:	cmp    eax,0x27e0edcb
  4235c0:	mov    bh,0x7b
  4235c2:	cmp    dl,BYTE PTR [esi-0x1e937909]
  4235c8:	stos   BYTE PTR es:[edi],al
  4235c9:	push   ebx
  4235ca:	cmp    esi,esi
  4235cc:	adc    ah,BYTE PTR [ebx]
  4235ce:	adc    DWORD PTR [edx+eiz*4],0x18c19a60
  4235d5:	lods   eax,DWORD PTR ds:[esi]
  4235d6:	mov    dh,0xe9
  4235d8:	jns    0x42359b
  4235da:	dec    ebp
  4235db:	gs stos BYTE PTR es:[edi],al
  4235dd:	cmp    BYTE PTR [eax],dl
  4235df:	mov    eax,ds:0x9c9d266c
  4235e4:	jbe    0x4235fc
  4235e6:	add    al,0x8a
  4235e8:	mov    ch,BYTE PTR [esi+eiz*4]
  4235eb:	popa   
  4235ec:	not    BYTE PTR [edx]
  4235ee:	xchg   dh,bh
  4235f0:	add    eax,0xf47c5e26
  4235f5:	cmp    DWORD PTR [ecx],eax
  4235f7:	icebp  
  4235f8:	and    ecx,DWORD PTR [ecx+0x2]
  4235fb:	outs   dx,DWORD PTR ds:[esi]
  4235fc:	sbb    eax,0x184f17ac
  423601:	mov    edx,0xc6c56576
  423606:	cli    
  423607:	fxch   st(0)
  423609:	xchg   al,bl
  42360b:	fadd   QWORD PTR [edx+0x25]
  42360e:	and    DWORD PTR [ecx+0x6502d849],esp
  423614:	jb     0x4235e1
  423616:	add    bh,BYTE PTR [esi]
  423618:	or     BYTE PTR [ebp-0x35688678],0xd9
  42361f:	mov    eax,ds:0x514179bd
  423624:	loop   0x423654
  423626:	dec    esi
  423627:	add    esp,0x59
  42362a:	fs push 0xc7b8bd25
  423630:	dec    edx
  423631:	(bad)  
  423633:	mov    eax,0x4bb062b5
  423638:	push   0x8
  42363a:	ret    0x282b
  42363d:	call   0x3337616
  423642:	adc    DWORD PTR [ecx-0xa],esp
  423645:	or     cl,BYTE PTR [ebp+0x3342aa62]
  42364b:	lock mov ebx,0x89e55b96
  423651:	sbb    eax,0x59b6eb62
  423656:	dec    esp
  423657:	mov    ah,0x10
  423659:	mov    esp,0xb340f7cf
  42365e:	add    al,0xb6
  423660:	and    dh,BYTE PTR [esp+eax*2-0x53340a9f]
  423667:	pop    ecx
  423668:	ins    BYTE PTR es:[edi],dx
  423669:	jae    0x4236a4
  42366b:	rep ins DWORD PTR es:[edi],dx
  42366d:	es jge 0x42364d
  423670:	push   0xecb96522
  423675:	xchg   esp,eax
  423676:	fdivrp st(1),st
  423678:	inc    ebx
  423679:	mov    ch,0x7a
  42367b:	not    dh
  42367d:	xchg   ecx,eax
  42367e:	mov    bh,0x96
  423680:	mov    bh,0x2e
  423682:	les    ecx,FWORD PTR [ecx+esi*4]
  423685:	out    0x2d,al
  423687:	ins    DWORD PTR es:[edi],dx
  423688:	je     0x423611
  42368a:	pop    ebx
  42368b:	dec    ebx
  42368c:	mov    ah,0xaf
  42368e:	sub    eax,0xe51b3b19
  423694:	jmp    0x7c9656d2
  423699:	cmp    al,0xd5
  42369b:	cdq    
  42369c:	xchg   esp,eax
  42369d:	jg     0x423626
  42369f:	shl    ch,1
  4236a1:	into   
  4236a2:	add    DWORD PTR [eax-0x7a35ddbd],ecx
  4236a8:	jle    0x4236e0
  4236aa:	call   0xf9fb:0x93ecbb45
  4236b1:	inc    edx
  4236b2:	mov    dl,0xa9
  4236b4:	mov    eax,ds:0x99733291
  4236b9:	outs   dx,DWORD PTR ds:[esi]
  4236ba:	outs   dx,DWORD PTR ds:[esi]
  4236bb:	loop   0x42369e
  4236bd:	mov    esp,0x7f2a3cba
  4236c2:	leave  
  4236c3:	(bad)  
  4236c4:	jmp    0x4236c4
  4236c6:	inc    ebp
  4236c7:	push   ss
  4236c8:	ss stos BYTE PTR es:[edi],al
  4236ca:	push   esi
  4236cb:	cmp    ch,BYTE PTR [edi+0x6649c70]
  4236d1:	ins    BYTE PTR es:[edi],dx
  4236d2:	adc    cl,BYTE PTR [ebx-0x59d9eadb]
  4236d8:	and    eax,DWORD PTR [ecx+edi*1]
  4236db:	sahf   
  4236dc:	push   ecx
  4236dd:	fistp  DWORD PTR [esi+0x45626711]
  4236e3:	addr16 jne 0x4236a7
  4236e6:	mov    ds:0x6c06f1fc,al
  4236eb:	daa    
  4236ec:	dec    edx
  4236ed:	dec    edx
  4236ee:	adc    BYTE PTR [esi-0x790c95ed],ah
  4236f4:	or     al,0x1c
  4236f6:	fimul  WORD PTR [eax]
  4236f8:	je     0x4236d0
  4236fa:	cld    
  4236fb:	mov    bh,0x61
  4236fd:	push   esp
  4236fe:	in     al,dx
  4236ff:	fild   DWORD PTR [ebp+0x7]
  423702:	and    al,BYTE PTR [eax+0x6686c82d]
  423708:	ins    BYTE PTR es:[edi],dx
  423709:	cdq    
  42370a:	sub    dl,BYTE PTR [esi+eax*2-0x25]
  42370e:	js     0x42373b
  423710:	dec    BYTE PTR [eax]
  423712:	or     eax,0x77519596
  423717:	retf   
  423718:	out    0x26,al
  42371a:	jge    0x4236ad
  42371c:	adc    al,0xa5
  42371e:	and    dl,dh
  423720:	mov    ds:0x10c2a504,al
  423725:	mov    di,0xc90f
  423729:	lods   al,BYTE PTR ds:[esi]
  42372a:	adc    eax,0x54126fb2
  42372f:	pop    edi
  423730:	scas   eax,DWORD PTR es:[edi]
  423731:	pop    ss
  423732:	stos   DWORD PTR es:[edi],eax
  423733:	loope  0x423723
  423735:	xchg   edx,eax
  423736:	pop    esi
  423737:	cmp    BYTE PTR [ebx-0x4],bh
  42373a:	enter  0xb6c2,0x2e
  42373e:	mov    ds:0x6effc02e,eax
  423743:	out    0xa7,al
  423745:	loopne 0x4236cc
  423747:	pusha  
  423748:	or     esi,DWORD PTR [edi]
  42374a:	sbb    BYTE PTR [edx-0x33],bh
  42374d:	and    DWORD PTR [ebp+0x209c7701],edi
  423753:	pop    es
  423754:	dec    esp
  423755:	repz imul eax,DWORD PTR [esi-0x7bd42eb],0xec8f851f
  423760:	lods   al,BYTE PTR ds:[esi]
  423761:	and    bl,BYTE PTR [ebx+0x27083fe3]
  423767:	dec    edi
  423768:	xchg   edi,eax
  423769:	in     al,0x56
  42376b:	cmp    DWORD PTR [edi+0x4e],0xffffff8b
  42376f:	xor    al,0xbd
  423771:	ss add eax,0x9ecfb3b6
  423777:	adc    BYTE PTR [edi+0xda38221],dh
  42377d:	and    DWORD PTR [eax],0x99131e81
  423783:	hlt    
  423784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423785:	pop    ebp
  423786:	les    ecx,FWORD PTR [esi+ebx*8]
  423789:	jne    0x423808
  42378b:	and    esp,edi
  42378d:	sar    DWORD PTR cs:[edx+0x14],1
  423791:	aam    0xb3
  423793:	pop    ebp
  423794:	popf   
  423795:	jge    0x423792
  423797:	or     al,0xc1
  423799:	mov    edi,0x230a812c
  42379e:	mov    DWORD PTR [edx-0x6352d32],0xe79607ae
  4237a8:	push   ds
  4237a9:	imul   edi,DWORD PTR [edi],0xffffffe4
  4237ac:	fcomp  DWORD PTR [edi]
  4237ae:	jecxz  0x423742
  4237b0:	xchg   ecx,eax
  4237b1:	dec    ebx
  4237b2:	sbb    eax,0x42752940
  4237b7:	adc    eax,0xa9af4b6
  4237bc:	jae    0x423810
  4237be:	pop    eax
  4237bf:	xor    BYTE PTR [ebp-0x47],ah
  4237c2:	jmp    0xc22327c7
  4237c7:	loope  0x423767
  4237c9:	add    edx,ebx
  4237cb:	xor    DWORD PTR [esi+0x9],edi
  4237ce:	sbb    eax,0x397d4681
  4237d3:	int3   
  4237d4:	pop    ecx
  4237d5:	mov    eax,ds:0xb4b681bf
  4237da:	sbb    DWORD PTR [edi+0x5d],eax
  4237dd:	popa   
  4237de:	pop    esi
  4237df:	mov    ebx,0xf7237341
  4237e4:	xchg   esp,eax
  4237e5:	ror    ebp,0x84
  4237e8:	std    
  4237e9:	xchg   edi,eax
  4237ea:	cmp    DWORD PTR [edx+0x7e4cda63],edx
  4237f0:	or     BYTE PTR [ebp-0x55],dl
  4237f3:	mov    bh,0x66
  4237f5:	inc    eax
  4237f6:	xor    BYTE PTR [edi],dh
  4237f8:	mov    ss,WORD PTR [edx-0x5d]
  4237fb:	sub    ah,bl
  4237fd:	add    esp,DWORD PTR [ebp-0x2d32f81c]
  423803:	xor    DWORD PTR [ecx],ecx
  423805:	lock icebp 
  423807:	pop    ds
  423808:	inc    esp
  423809:	sbb    BYTE PTR [esi],dl
  42380b:	fdivr  DWORD PTR [edi-0x40b5e2b9]
  423811:	bound  ebx,QWORD PTR [edx+0x5f]
  423814:	(bad)  
  423815:	(bad)
  42381a:	mov    ebp,0xb59d4423
  42381f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423820:	(bad)  [edx-0x3fc83fd8]
  423826:	jp     0x4237c6
  423828:	mov    ebp,DWORD PTR [edi]
  42382a:	dec    esp
  42382b:	bound  ecx,QWORD PTR [edi+0x50]
  42382e:	jne    0x4237ec
  423830:	popa   
  423831:	ss push eax
  423833:	js     0x4238b4
  423835:	mov    eax,DWORD PTR [ebp-0x10]
  423838:	xor    eax,ecx
  42383a:	mov    edx,0xffcd8d11
  42383f:	sub    edx,eax
  423841:	add    DWORD PTR [ebp-0x4],edx
  423844:	mov    eax,DWORD PTR [ebp-0x4]
  423847:	jmp    0x4229e8
  42384c:	mov    eax,DWORD PTR [ebp-0x14]
  42384f:	mov    eax,DWORD PTR [eax]
  423851:	mov    edx,DWORD PTR [ebp-0x4]
  423854:	mov    edx,DWORD PTR [edx+0x3c]
  423857:	lea    eax,[edx+eax*8+0x78]
  42385b:	mov    edx,DWORD PTR [ebp-0x4]
  42385e:	mov    eax,DWORD PTR [eax+edx*1]
  423861:	mov    DWORD PTR [ebp-0x8],eax
  423864:	mov    eax,DWORD PTR [ebp+0x8]
  423867:	xor    eax,ecx
  423869:	add    eax,esi
  42386b:	mov    DWORD PTR [ebp-0x14],eax
  42386e:	mov    eax,DWORD PTR [ebp+0x8]
  423871:	mov    edx,DWORD PTR [ebp-0x8]
  423874:	xor    eax,ecx
  423876:	add    eax,esi
  423878:	cmp    edx,eax
  42387a:	jne    0x423898
  423880:	mov    eax,DWORD PTR [ebp+0xc]
  423883:	xor    eax,ecx
  423885:	mov    ecx,DWORD PTR [ebp-0x8]
  423888:	add    eax,esi
  42388a:	imul   eax,ecx
  42388d:	mov    DWORD PTR [ebp-0x8],eax
  423890:	push   DWORD PTR [ebp+0x18]
  423893:	jmp    0x4238f3
  423898:	mov    eax,DWORD PTR [ebp-0x8]
  42389b:	mov    ecx,DWORD PTR [ebp-0x4]
  42389e:	add    eax,ecx
  4238a0:	mov    DWORD PTR [ebp-0x14],eax
  4238a3:	mov    eax,DWORD PTR [ebp-0x14]
  4238a6:	mov    eax,DWORD PTR [eax+0xc]
  4238a9:	movsx  eax,BYTE PTR [eax+ecx*1]
  4238ad:	cdq    
  4238ae:	add    eax,ebx
  4238b0:	adc    edx,0xffffffff
  4238b3:	xor    eax,edi
  4238b5:	xor    edx,0x0
  4238b8:	cmp    eax,0x70941e1e
  4238bd:	jne    0x423890
  4238c3:	cmp    edx,0xffffffff
  4238c6:	jne    0x423890
  4238cc:	mov    eax,ds:0x42942f
  4238d1:	mov    eax,DWORD PTR [eax+0x198]
  4238d7:	mov    DWORD PTR [eax],ecx
  4238d9:	mov    eax,ecx
  4238db:	jmp    0x423904
  4238e0:	mov    eax,DWORD PTR [ebp+0x18]
  4238e3:	cmp    eax,0xf89c85ba
  4238e8:	jne    0x423904
  4238ee:	push   0xf89c85bb
  4238f3:	push   DWORD PTR [ebp+0x14]
  4238f6:	push   DWORD PTR [ebp+0x10]
  4238f9:	push   DWORD PTR [ebp+0xc]
  4238fc:	push   DWORD PTR [ebp+0x8]
  4238ff:	call   0x420148
  423904:	pop    edi
  423905:	pop    ebx
  423906:	pop    esi
  423907:	leave  
  423908:	ret    0x14
  42390b:	push   ebp
  42390c:	mov    ebp,esp
  42390e:	and    esp,0xfffffff8
  423911:	add    DWORD PTR ds:0x42a177,0x42a1bb
  42391b:	sub    esp,0x1ac
  423921:	push   ebx
  423922:	push   esi
  423923:	mov    DWORD PTR ds:0x42a15f,0x573c
  42392d:	push   edi
  42392e:	xor    edi,edi
  423930:	push   edi
  423931:	not    DWORD PTR ds:0x42a18f
  423937:	call   DWORD PTR ds:0x42a28b
  42393d:	mov    esi,DWORD PTR ds:0x42a2cb
  423943:	add    DWORD PTR ds:0x42a14b,0x7d28
  42394d:	push   0xf
  42394f:	and    DWORD PTR ds:0x42a183,0x1edb
  423959:	mov    DWORD PTR [esp+0x14],eax
  42395d:	lea    eax,[esp+0x44]
  423961:	sub    DWORD PTR ds:0x42a19b,0x42a187
  42396b:	push   eax
  42396c:	push   0x429553
  423971:	sbb    DWORD PTR ds:0x42a17f,0x7a6
  42397b:	push   0x429567
  423980:	adc    DWORD PTR ds:0x42a17f,0x6000
  42398a:	push   0x42958f
  42398f:	adc    DWORD PTR ds:0x42a1c3,0x42a1b7
  423999:	call   esi
  42399b:	shl    eax,0x15
  42399e:	mov    DWORD PTR ds:0x42a197,0x6670
  4239a8:	cmp    eax,0x1000000
  4239ad:	je     0x4239c4
  4239b3:	xor    eax,eax
  4239b5:	mov    DWORD PTR ds:0x42a12f,0x1037
  4239bf:	jmp    0x424a7b
  4239c4:	or     DWORD PTR ds:0x42a187,0x42a127
  4239ce:	push   0x4295b7
  4239d3:	call   DWORD PTR ds:0x42a29f
  4239d9:	xor    DWORD PTR ds:0x42a15b,0x42a1b3
  4239e3:	test   eax,eax
  4239e5:	mov    DWORD PTR ds:0x42a137,0x194e
  4239ef:	jne    0x4239b3
  4239f5:	lea    eax,[esp+0x78]
  4239f9:	xor    DWORD PTR ds:0x42a173,0x42a157
  423a03:	push   eax
  423a04:	push   0x4295d3
  423a09:	sbb    DWORD PTR ds:0x42a1ab,0x42a133
  423a13:	call   DWORD PTR ds:0x42a2bb
  423a19:	cmp    eax,0xffffffff
  423a1c:	mov    DWORD PTR ds:0x42a193,0x52a3
  423a26:	jne    0x4239b3
  423a2c:	mov    DWORD PTR ds:0x42a19b,0xfae
  423a36:	push   DWORD PTR [esp+0x10]
  423a3a:	add    DWORD PTR ds:0x42a157,0x42a16f
  423a44:	push   edi
  423a45:	sbb    DWORD PTR ds:0x42a1c3,0x76dd
  423a4f:	call   DWORD PTR ds:0x42a287
  423a55:	mov    ecx,DWORD PTR ds:0x42a24f
  423a5b:	mov    ebx,DWORD PTR ds:0x42a267
  423a61:	sub    ecx,ebx
  423a63:	sub    ecx,DWORD PTR [ecx+ebx*1]
  423a66:	mov    DWORD PTR [esp+0x30],edi
  423a6a:	or     DWORD PTR ds:0x42a16f,0x565
  423a74:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  423a7c:	mov    DWORD PTR ds:0x42a143,0x78c3
  423a86:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423a8e:	or     ebx,ecx
  423a90:	lea    eax,[esp+0x3c]
  423a94:	mov    DWORD PTR [esp+0x30],eax
  423a98:	add    ebx,edi
  423a9a:	lea    eax,[esp+0x38]
  423a9e:	mov    edi,DWORD PTR ds:0x42a1e3
  423aa4:	mov    ecx,DWORD PTR ds:0x42a21f
  423aaa:	sub    edi,ecx
  423aac:	and    edi,DWORD PTR [edi+ecx*1]
  423aaf:	mov    DWORD PTR [esp+0x10],eax
  423ab3:	and    DWORD PTR ds:0x42a17b,0x5d3c
  423abd:	mov    eax,ds:0x42942f
  423ac2:	xor    ebx,ebx
  423ac4:	xor    ebx,DWORD PTR ds:0x42a18b
  423aca:	sbb    DWORD PTR ds:0x42a1bf,ebx
  423ad0:	mov    eax,DWORD PTR [eax+0x1c8]
  423ad6:	sbb    edi,DWORD PTR ds:0x42a1cf
  423adc:	mov    eax,DWORD PTR [eax]
  423ade:	and    DWORD PTR ds:0x42a173,0x0
  423ae8:	mov    edi,DWORD PTR ds:0x42a173
  423aee:	inc    edi
  423aef:	mov    DWORD PTR ds:0x42a173,edi
  423af5:	cmp    DWORD PTR ds:0x42a173,0xf
  423afc:	jl     0x423b41
  423b02:	jmp    0x423b1a
  423b07:	push   DWORD PTR [ebp-0x1c]
  423b0a:	push   0x42a127
  423b0f:	push   0x25af
  423b14:	call   DWORD PTR ds:0x42a2ab
  423b1a:	cmp    DWORD PTR ds:0x42a173,0xe
  423b21:	jne    0x423b34
  423b27:	mov    edi,DWORD PTR ds:0x42a173
  423b2d:	inc    edi
  423b2e:	mov    DWORD PTR ds:0x42a173,edi
  423b34:	cmp    DWORD PTR ds:0x42a173,0x1d
  423b3b:	jb     0x423ae8
  423b41:	mov    ecx,DWORD PTR [esp+0x10]
  423b45:	and    ebx,DWORD PTR ds:0x42a1ab
  423b4b:	mov    edi,0x75108a8
  423b50:	xor    ebx,DWORD PTR ds:0x42a173
  423b56:	xor    eax,edi
  423b58:	mov    ebx,DWORD PTR ds:0x42a18b
  423b5e:	or     DWORD PTR ds:0x42a13f,ebx
  423b64:	mov    ebx,0x3272ef
  423b69:	add    eax,ebx
  423b6b:	mov    DWORD PTR ds:0x42a1c3,0x4871
  423b75:	mov    DWORD PTR [ecx],eax
  423b77:	mov    eax,ds:0x42a193
  423b7c:	mov    eax,ds:0x429feb
  423b81:	cmp    eax,0x445cecf9
  423b86:	jne    0x423c06
  423b8c:	sbb    ecx,0x3851
  423b92:	mov    eax,DWORD PTR [esp+0x20]
  423b96:	sub    DWORD PTR ds:0x42a16b,edi
  423b9c:	mov    ecx,DWORD PTR ds:0x42942f
  423ba2:	mov    ecx,DWORD PTR [ecx+0x198]
  423ba8:	adc    DWORD PTR ds:0x42a14b,0x1545
  423bb2:	xor    eax,edi
  423bb4:	add    eax,ebx
  423bb6:	mov    DWORD PTR [ecx],eax
  423bb8:	xor    eax,DWORD PTR ds:0x42a19f
  423bbe:	mov    eax,DWORD PTR [esp+0x20]
  423bc2:	sub    DWORD PTR ds:0x42a13f,0x2657
  423bcc:	xor    eax,edi
  423bce:	add    eax,ebx
  423bd0:	mov    ds:0x429feb,eax
  423bd5:	dec    DWORD PTR ds:0x42a18b
  423bdb:	mov    eax,DWORD PTR [esp+0x20]
  423bdf:	xor    DWORD PTR ds:0x42a15b,0x42a1af
  423be9:	xor    eax,edi
  423beb:	sbb    DWORD PTR ds:0x42a157,0xceb
  423bf5:	add    eax,ebx
  423bf7:	sbb    DWORD PTR ds:0x42a177,0x42a19f
  423c01:	mov    ds:0x429527,eax
  423c06:	sub    eax,0xfb3
  423c0b:	mov    eax,ds:0x42942f
  423c10:	not    DWORD PTR ds:0x42a1a3
  423c16:	mov    eax,DWORD PTR [eax+0x18c]
  423c1c:	sub    DWORD PTR ds:0x42a133,0x42a19b
  423c26:	mov    eax,DWORD PTR [eax]
  423c28:	not    DWORD PTR ds:0x42a133
  423c2e:	mov    DWORD PTR [esp+0x60],eax
  423c32:	adc    DWORD PTR ds:0x42a1c7,0x42a1af
  423c3c:	mov    eax,0xf89c85bd
  423c41:	mov    DWORD PTR [esp+0x18],eax
  423c45:	sbb    DWORD PTR ds:0x42a17f,0x42a177
  423c4f:	mov    DWORD PTR [esp+0x18],eax
  423c53:	sub    DWORD PTR ds:0x42a143,0x5dcc
  423c5d:	mov    DWORD PTR [esp+0x18],eax
  423c61:	mov    DWORD PTR [esp+0x18],0xf89c85b9
  423c69:	sbb    DWORD PTR ds:0x42a1a3,0x2005
  423c73:	mov    DWORD PTR [esp+0x10],eax
  423c77:	mov    DWORD PTR ds:0x42a1a7,0x202e
  423c81:	mov    DWORD PTR [esp+0x10],0xf89c85b1
  423c89:	mov    eax,DWORD PTR [esp+0x20]
  423c8d:	add    DWORD PTR ds:0x42a187,0x42a19f
  423c97:	xor    eax,edi
  423c99:	or     DWORD PTR ds:0x42a15b,0x42a163
  423ca3:	add    eax,ebx
  423ca5:	jmp    0x423f55
  423caa:	dec    DWORD PTR ds:0x42a143
  423cb0:	lea    eax,[esp+0x44]
  423cb4:	adc    DWORD PTR ds:0x42a16f,0x2f79
  423cbe:	push   eax
  423cbf:	xor    DWORD PTR ds:0x42a13b,0x2364
  423cc9:	push   0x4295ef
  423cce:	push   0x429603
  423cd3:	push   0x42962b
  423cd8:	sub    DWORD PTR ds:0x42a16b,0x2bd1
  423ce2:	call   esi
  423ce4:	mov    DWORD PTR ds:0x42a147,0x6294
  423cee:	shl    eax,0x15
  423cf1:	cmp    eax,0x1000000
  423cf6:	jne    0x4239b3
  423cfc:	dec    DWORD PTR ds:0x42a163
  423d02:	push   0x429653
  423d07:	adc    DWORD PTR ds:0x42a1cb,0x42a1af
  423d11:	call   DWORD PTR ds:0x42a29f
  423d17:	add    DWORD PTR ds:0x42a14b,0x6241
  423d21:	test   eax,eax
  423d23:	jne    0x4239b3
  423d29:	or     DWORD PTR ds:0x42a133,0x259a
  423d33:	lea    eax,[esp+0x78]
  423d37:	push   eax
  423d38:	push   0x42966f
  423d3d:	xor    DWORD PTR ds:0x42a17b,0x66c
  423d47:	call   DWORD PTR ds:0x42a2bb
  423d4d:	cmp    eax,0xffffffff
  423d50:	mov    DWORD PTR ds:0x42a187,0x7420
  423d5a:	jne    0x4239b3
  423d60:	and    DWORD PTR ds:0x42a167,0x0
  423d6a:	mov    eax,ds:0x42a167
  423d6f:	inc    eax
  423d70:	mov    ds:0x42a167,eax
  423d75:	cmp    DWORD PTR ds:0x42a167,0x5
  423d7c:	jl     0x423dc4
  423d82:	jmp    0x423d9f
  423d87:	push   0x38f5
  423d8c:	push   DWORD PTR [ebp-0x10]
  423d8f:	push   0x7b72
  423d94:	push   0x6a40
  423d99:	call   DWORD PTR ds:0x42a2af
  423d9f:	cmp    DWORD PTR ds:0x42a167,0x4
  423da6:	jne    0x423db7
  423dac:	mov    eax,ds:0x42a167
  423db1:	inc    eax
  423db2:	mov    ds:0x42a167,eax
  423db7:	cmp    DWORD PTR ds:0x42a167,0x12
  423dbe:	jb     0x423d6a
  423dc4:	mov    eax,DWORD PTR [esp+0xc]
  423dc8:	mov    ecx,DWORD PTR [esp+0x10]
  423dcc:	dec    DWORD PTR ds:0x42a15f
  423dd2:	xor    eax,edi
  423dd4:	sub    DWORD PTR ds:0x42a1a7,0x2267
  423dde:	lea    eax,[eax+ecx*1+0x3272ef]
  423de5:	sbb    DWORD PTR ds:0x42a1bb,0x1a84
  423def:	push   eax
  423df0:	and    DWORD PTR ds:0x42a15f,0x0
  423dfa:	jmp    0x423e0a
  423dff:	mov    eax,ds:0x42a15f
  423e04:	inc    eax
  423e05:	mov    ds:0x42a15f,eax
  423e0a:	cmp    DWORD PTR ds:0x42a15f,0x12
  423e11:	jae    0x423e42
  423e17:	cmp    DWORD PTR ds:0x42a15f,0x21
  423e1e:	jb     0x423e42
  423e24:	jmp    0x423e3d
  423e29:	push   DWORD PTR [ebp-0x24]
  423e2c:	push   DWORD PTR [ebp-0xc]
  423e2f:	push   0x42a1af
  423e34:	push   DWORD PTR [ebp-0x14]
  423e37:	call   DWORD PTR ds:0x42a2b3
  423e3d:	jmp    0x423dff
  423e42:	mov    eax,DWORD PTR [esp+0x1c]
  423e46:	add    DWORD PTR ds:0x42a1c3,0x42a19f
  423e50:	xor    eax,edi
  423e52:	adc    DWORD PTR ds:0x42a147,0x3c17
  423e5c:	lea    eax,[ebp+eax*1+0x3272f7]
  423e63:	and    DWORD PTR ds:0x42a18b,0x7df0
  423e6d:	push   eax
  423e6e:	mov    eax,ds:0x42a12b
  423e73:	xor    DWORD PTR ds:0x42a1ab,eax
  423e79:	mov    eax,ds:0x42942f
  423e7e:	xor    DWORD PTR ds:0x42a147,0x5716
  423e88:	push   DWORD PTR [eax+0x1bc]
  423e8e:	inc    DWORD PTR ds:0x42a1c3
  423e94:	call   0x424a84
  423e99:	add    DWORD PTR ds:0x42a18f,ebx
  423e9f:	mov    eax,DWORD PTR [esp+0xc]
  423ea3:	and    DWORD PTR ds:0x42a18f,0x0
  423ead:	mov    ecx,DWORD PTR ds:0x42a18f
  423eb3:	inc    ecx
  423eb4:	mov    DWORD PTR ds:0x42a18f,ecx
  423eba:	cmp    DWORD PTR ds:0x42a18f,0x23
  423ec1:	jg     0x423ef3
  423ec7:	jmp    0x423ee6
  423ecc:	push   0x42a137
  423ed1:	push   0x3da7
  423ed6:	push   0x4290e5
  423edb:	push   0x42912b
  423ee0:	call   DWORD PTR ds:0x42a2b7
  423ee6:	cmp    DWORD PTR ds:0x42a18f,0x1c
  423eed:	jb     0x423ead
  423ef3:	mov    ecx,DWORD PTR [esp+0x10]
  423ef7:	and    DWORD PTR ds:0x42a1a3,0x0
  423f01:	jmp    0x423f13
  423f06:	mov    edx,DWORD PTR ds:0x42a1a3
  423f0c:	inc    edx
  423f0d:	mov    DWORD PTR ds:0x42a1a3,edx
  423f13:	cmp    DWORD PTR ds:0x42a1a3,0x15
  423f1a:	jae    0x423f42
  423f20:	cmp    DWORD PTR ds:0x42a1a3,0x23
  423f27:	jl     0x423f42
  423f2d:	jmp    0x423f3d
  423f32:	push   0x2b36
  423f37:	call   DWORD PTR ds:0x42a2bf
  423f3d:	jmp    0x423f06
  423f42:	xor    eax,edi
  423f44:	add    DWORD PTR ds:0x42a15b,0x498
  423f4e:	lea    eax,[ecx+eax*1+0x3272ef]
  423f55:	add    DWORD PTR ds:0x42a1d3,0x5749
  423f5f:	mov    ecx,DWORD PTR [esp+0xc]
  423f63:	and    DWORD PTR ds:0x42a18f,ecx
  423f69:	mov    edx,DWORD PTR [esp+0xc]
  423f6d:	xor    edx,edi
  423f6f:	xor    ecx,edi
  423f71:	add    ecx,edx
  423f73:	mov    edx,DWORD PTR [esp+0xc]
  423f77:	xor    edx,edi
  423f79:	mov    DWORD PTR ds:0x42a15f,0x7e75
  423f83:	lea    ecx,[ecx+edx*1+0x9758cd]
  423f8a:	mov    DWORD PTR ds:0x42a14b,0x16f9
  423f94:	mov    DWORD PTR [esp+0x10],eax
  423f98:	push   0xf
  423f9a:	mov    DWORD PTR ds:0x42a1bb,0x175a
  423fa4:	cmp    eax,ecx
  423fa6:	mov    DWORD PTR ds:0x42a15f,0x2b18
  423fb0:	jbe    0x423caa
  423fb6:	mov    eax,DWORD PTR [ebp+0xc]
  423fb9:	add    ecx,DWORD PTR ds:0x42a173
  423fbf:	mov    ds:0x4292b3,eax
  423fc4:	mov    eax,DWORD PTR [ebp+0x10]
  423fc7:	xor    ecx,ecx
  423fc9:	xor    ecx,DWORD PTR ds:0x42a1b3
  423fcf:	sbb    DWORD PTR ds:0x42a1cb,ecx
  423fd5:	mov    ds:0x42950f,eax
  423fda:	mov    eax,ds:0x4292b3
  423fdf:	mov    ecx,DWORD PTR ds:0x42a12f
  423fe5:	or     ecx,DWORD PTR ds:0x42a15f
  423feb:	mov    DWORD PTR ds:0x42a12f,ecx
  423ff1:	mov    ecx,DWORD PTR [esp+0x34]
  423ff5:	adc    DWORD PTR ds:0x42a1c7,0x192d
  423fff:	sub    eax,ebx
  424001:	xor    eax,edi
  424003:	or     DWORD PTR ds:0x42a1af,0x42a1cb
  42400d:	mov    DWORD PTR [ecx],eax
  42400f:	sub    DWORD PTR ds:0x42a187,0x2768
  424019:	lea    eax,[esp+0x30]
  42401d:	and    DWORD PTR ds:0x42a17b,0x51d9
  424027:	mov    DWORD PTR [esp+0x74],eax
  42402b:	lea    eax,[ebp+0x4]
  42402e:	mov    DWORD PTR [esp+0x30],eax
  424032:	lea    eax,[esp+0x44]
  424036:	xor    DWORD PTR ds:0x42a1ab,0x6aa
  424040:	push   eax
  424041:	sub    DWORD PTR ds:0x42a137,0x42a18b
  42404b:	push   0x42968b
  424050:	push   0x42969f
  424055:	sub    DWORD PTR ds:0x42a12f,0x6538
  42405f:	push   0x4296c7
  424064:	add    DWORD PTR ds:0x42a17f,0x42a1cf
  42406e:	call   esi
  424070:	shl    eax,0x15
  424073:	mov    DWORD PTR ds:0x42a1bf,0x1cd6
  42407d:	cmp    eax,0x1000000
  424082:	mov    DWORD PTR ds:0x42a193,0x32c8
  42408c:	jne    0x4239b3
  424092:	push   0x4296ef
  424097:	call   DWORD PTR ds:0x42a29f
  42409d:	xor    DWORD PTR ds:0x42a16f,0x42a177
  4240a7:	test   eax,eax
  4240a9:	jne    0x4239b3
  4240af:	adc    DWORD PTR ds:0x42a16f,0x7895
  4240b9:	lea    eax,[esp+0x78]
  4240bd:	push   eax
  4240be:	push   0x42970b
  4240c3:	call   DWORD PTR ds:0x42a2bb
  4240c9:	cmp    eax,0xffffffff
  4240cc:	jne    0x4239b3
  4240d2:	push   0xf
  4240d4:	lea    eax,[esp+0x44]
  4240d8:	push   eax
  4240d9:	sub    DWORD PTR ds:0x42a19b,0x42a167
  4240e3:	push   0x429727
  4240e8:	sbb    DWORD PTR ds:0x42a18b,0x654e
  4240f2:	push   0x42973b
  4240f7:	push   0x429763
  4240fc:	add    DWORD PTR ds:0x42a15f,0x4c0a
  424106:	call   esi
  424108:	shl    eax,0x15
  42410b:	mov    DWORD PTR ds:0x42a17b,0x49de
  424115:	cmp    eax,0x1000000
  42411a:	mov    DWORD PTR ds:0x42a1a7,0x39fb
  424124:	jne    0x4239b3
  42412a:	sbb    DWORD PTR ds:0x42a1bb,0x7658
  424134:	push   0x42978b
  424139:	call   DWORD PTR ds:0x42a29f
  42413f:	test   eax,eax
  424141:	jne    0x4239b3
  424147:	lea    eax,[esp+0x78]
  42414b:	adc    DWORD PTR ds:0x42a14f,0x33c9
  424155:	push   eax
  424156:	push   0x4297a7
  42415b:	and    DWORD PTR ds:0x42a187,0x42a1c3
  424165:	call   DWORD PTR ds:0x42a2bb
  42416b:	cmp    eax,0xffffffff
  42416e:	jne    0x4239b3
  424174:	add    DWORD PTR ds:0x42a14f,0x42a1b3
  42417e:	push   0xf
  424180:	adc    DWORD PTR ds:0x42a14f,0x42a17b
  42418a:	lea    eax,[esp+0x44]
  42418e:	adc    DWORD PTR ds:0x42a197,0x4372
  424198:	push   eax
  424199:	sub    DWORD PTR ds:0x42a1c3,0x57ed
  4241a3:	push   0x4297c3
  4241a8:	push   0x4297d7
  4241ad:	push   0x4297ff
  4241b2:	sbb    DWORD PTR ds:0x42a143,0x42a1d3
  4241bc:	call   esi
  4241be:	shl    eax,0x15
  4241c1:	cmp    eax,0x1000000
  4241c6:	mov    DWORD PTR ds:0x42a1bb,0x7ab0
  4241d0:	jne    0x4239b3
  4241d6:	and    DWORD PTR ds:0x42a1b7,0x42a16b
  4241e0:	push   0x429827
  4241e5:	neg    DWORD PTR ds:0x42a13f
  4241eb:	call   DWORD PTR ds:0x42a29f
  4241f1:	test   eax,eax
  4241f3:	mov    DWORD PTR ds:0x42a183,0x529e
  4241fd:	jne    0x4239b3
  424203:	or     DWORD PTR ds:0x42a173,0x42a13f
  42420d:	lea    eax,[esp+0x78]
  424211:	push   eax
  424212:	adc    DWORD PTR ds:0x42a14b,0x42a183
  42421c:	push   0x429843
  424221:	call   DWORD PTR ds:0x42a2bb
  424227:	mov    DWORD PTR ds:0x42a167,0x1720
  424231:	cmp    eax,0xffffffff
  424234:	mov    DWORD PTR ds:0x42a1b3,0x34b9
  42423e:	jne    0x4239b3
  424244:	xor    DWORD PTR ds:0x42a127,0x42a193
  42424e:	push   0xf
  424250:	lea    eax,[esp+0x44]
  424254:	push   eax
  424255:	push   0x42985f
  42425a:	sbb    DWORD PTR ds:0x42a13f,0x42a14b
  424264:	push   0x429873
  424269:	push   0x42989b
  42426e:	call   esi
  424270:	mov    DWORD PTR ds:0x42a183,0x7c87
  42427a:	shl    eax,0x15
  42427d:	cmp    eax,0x1000000
  424282:	jne    0x4239b3
  424288:	sub    DWORD PTR ds:0x42a14f,0x1b5
  424292:	push   0x4298c3
  424297:	adc    DWORD PTR ds:0x42a15f,0x2d72
  4242a1:	call   DWORD PTR ds:0x42a29f
  4242a7:	test   eax,eax
  4242a9:	jne    0x4239b3
  4242af:	xor    DWORD PTR ds:0x42a177,0x5023
  4242b9:	lea    eax,[esp+0x78]
  4242bd:	add    DWORD PTR ds:0x42a19b,0x39d
  4242c7:	push   eax
  4242c8:	push   0x4298df
  4242cd:	call   DWORD PTR ds:0x42a2bb
  4242d3:	mov    DWORD PTR ds:0x42a16f,0xd24
  4242dd:	cmp    eax,0xffffffff
  4242e0:	jne    0x4239b3
  4242e6:	not    DWORD PTR ds:0x42a157
  4242ec:	push   0xf
  4242ee:	mov    DWORD PTR ds:0x42a197,0x1e5a
  4242f8:	lea    eax,[esp+0x44]
  4242fc:	push   eax
  4242fd:	push   0x4298fb
  424302:	push   0x42990f
  424307:	push   0x429937
  42430c:	add    DWORD PTR ds:0x42a17f,0x42a1a7
  424316:	call   esi
  424318:	mov    DWORD PTR ds:0x42a19f,0x41c3
  424322:	shl    eax,0x15
  424325:	cmp    eax,0x1000000
  42432a:	jne    0x4239b3
  424330:	sub    DWORD PTR ds:0x42a137,0x2237
  42433a:	push   0x42995f
  42433f:	xor    DWORD PTR ds:0x42a15b,0x42a1d3
  424349:	call   DWORD PTR ds:0x42a29f
  42434f:	test   eax,eax
  424351:	mov    DWORD PTR ds:0x42a167,0x62c6
  42435b:	jne    0x4239b3
  424361:	and    DWORD PTR ds:0x42a1af,0x5eb4
  42436b:	lea    eax,[esp+0x78]
  42436f:	adc    DWORD PTR ds:0x42a15b,0x4918
  424379:	push   eax
  42437a:	or     DWORD PTR ds:0x42a177,0x42a12f
  424384:	push   0x42997b
  424389:	sbb    DWORD PTR ds:0x42a173,0x42a133
  424393:	call   DWORD PTR ds:0x42a2bb
  424399:	mov    DWORD PTR ds:0x42a12b,0x13e7
  4243a3:	cmp    eax,0xffffffff
  4243a6:	mov    DWORD PTR ds:0x42a1ab,0xa62
  4243b0:	jne    0x4239b3
  4243b6:	xor    DWORD PTR ds:0x42a137,0x42a197
  4243c0:	push   0xf
  4243c2:	lea    eax,[esp+0x44]
  4243c6:	or     DWORD PTR ds:0x42a18f,0x2cef
  4243d0:	push   eax
  4243d1:	push   0x429997
  4243d6:	push   0x4299ab
  4243db:	sub    DWORD PTR ds:0x42a17f,0x42a16b
  4243e5:	push   0x4299d3
  4243ea:	call   esi
  4243ec:	shl    eax,0x15
  4243ef:	mov    DWORD PTR ds:0x42a16f,0x43ec
  4243f9:	cmp    eax,0x1000000
  4243fe:	mov    DWORD PTR ds:0x42a1a3,0x18cb
  424408:	jne    0x4239b3
  42440e:	add    DWORD PTR ds:0x42a18b,0x5057
  424418:	push   0x4299fb
  42441d:	or     DWORD PTR ds:0x42a19f,0x48df
  424427:	call   DWORD PTR ds:0x42a29f
  42442d:	and    DWORD PTR ds:0x42a1bf,0x7c0c
  424437:	test   eax,eax
  424439:	mov    DWORD PTR ds:0x42a187,0x257b
  424443:	jne    0x4239b3
  424449:	xor    DWORD PTR ds:0x42a1cb,0x42a1c7
  424453:	lea    eax,[esp+0x78]
  424457:	add    DWORD PTR ds:0x42a197,0x4894
  424461:	push   eax
  424462:	or     DWORD PTR ds:0x42a12b,0x42a19f
  42446c:	push   0x429a17
  424471:	sbb    DWORD PTR ds:0x42a127,0x42a14f
  42447b:	call   DWORD PTR ds:0x42a2bb
  424481:	cmp    eax,0xffffffff
  424484:	mov    DWORD PTR ds:0x42a177,0xc3a
  42448e:	jne    0x4239b3
  424494:	push   0xf
  424496:	lea    eax,[esp+0x44]
  42449a:	inc    DWORD PTR ds:0x42a1cb
  4244a0:	push   eax
  4244a1:	push   0x429a33
  4244a6:	push   0x429a47
  4244ab:	sub    DWORD PTR ds:0x42a13b,0x42a14f
  4244b5:	push   0x429a6f
  4244ba:	xor    DWORD PTR ds:0x42a15f,0x6779
  4244c4:	call   esi
  4244c6:	mov    DWORD PTR ds:0x42a1b7,0x68bf
  4244d0:	shl    eax,0x15
  4244d3:	mov    DWORD PTR ds:0x42a13b,0x5b0c
  4244dd:	cmp    eax,0x1000000
  4244e2:	mov    DWORD PTR ds:0x42a133,0x4026
  4244ec:	jne    0x4239b3
  4244f2:	push   0x429a97
  4244f7:	and    DWORD PTR ds:0x42a1b7,0x42a147
  424501:	call   DWORD PTR ds:0x42a29f
  424507:	test   eax,eax
  424509:	jne    0x4239b3
  42450f:	lea    eax,[esp+0x78]
  424513:	push   eax
  424514:	push   0x429ab3
  424519:	call   DWORD PTR ds:0x42a2bb
  42451f:	mov    DWORD PTR ds:0x42a1b7,0xded
  424529:	cmp    eax,0xffffffff
  42452c:	mov    DWORD PTR ds:0x42a13b,0x163f
  424536:	jne    0x4239b3
  42453c:	or     DWORD PTR ds:0x42a1cf,0x42a13b
  424546:	push   0xf
  424548:	lea    eax,[esp+0x44]
  42454c:	push   eax
  42454d:	push   0x429acf
  424552:	push   0x429ae3
  424557:	add    DWORD PTR ds:0x42a167,0x42a1c7
  424561:	push   0x429b0b
  424566:	or     DWORD PTR ds:0x42a157,0x42a1a3
  424570:	call   esi
  424572:	shl    eax,0x15
  424575:	mov    DWORD PTR ds:0x42a1a7,0x724c
  42457f:	cmp    eax,0x1000000
  424584:	mov    DWORD PTR ds:0x42a13b,0x4087
  42458e:	jne    0x4239b3
  424594:	xor    DWORD PTR ds:0x42a163,0x42a13b
  42459e:	push   0x429b33
  4245a3:	or     DWORD PTR ds:0x42a143,0x1c84
  4245ad:	call   DWORD PTR ds:0x42a29f
  4245b3:	xor    DWORD PTR ds:0x42a193,0x1623
  4245bd:	test   eax,eax
  4245bf:	mov    DWORD PTR ds:0x42a15f,0x197f
  4245c9:	jne    0x4239b3
  4245cf:	lea    eax,[esp+0x78]
  4245d3:	inc    DWORD PTR ds:0x42a137
  4245d9:	push   eax
  4245da:	push   0x429b4f
  4245df:	xor    DWORD PTR ds:0x42a1bb,0x42a1b7
  4245e9:	call   DWORD PTR ds:0x42a2bb
  4245ef:	mov    DWORD PTR ds:0x42a16f,0x1cd6
  4245f9:	cmp    eax,0xffffffff
  4245fc:	jne    0x4239b3
  424602:	sbb    DWORD PTR ds:0x42a17f,0x4eb9
  42460c:	push   0xf
  42460e:	lea    eax,[esp+0x44]
  424612:	or     DWORD PTR ds:0x42a1d3,0x42a193
  42461c:	push   eax
  42461d:	sub    DWORD PTR ds:0x42a17b,0x42a1bb
  424627:	push   0x429b6b
  42462c:	add    DWORD PTR ds:0x42a16b,0x35f5
  424636:	push   0x429b7f
  42463b:	push   0x429ba7
  424640:	sbb    DWORD PTR ds:0x42a1a7,0x42a167
  42464a:	call   esi
  42464c:	shl    eax,0x15
  42464f:	cmp    eax,0x1000000
  424654:	jne    0x4239b3
  42465a:	push   0x429bcf
  42465f:	call   DWORD PTR ds:0x42a29f
  424665:	test   eax,eax
  424667:	jne    0x4239b3
  42466d:	lea    eax,[esp+0x78]
  424671:	push   eax
  424672:	push   0x429beb
  424677:	call   DWORD PTR ds:0x42a2bb
  42467d:	cmp    eax,0xffffffff
  424680:	jne    0x4239b3
  424686:	push   0xf
  424688:	lea    eax,[esp+0x44]
  42468c:	push   eax
  42468d:	push   0x429c07
  424692:	push   0x429c1b
  424697:	push   0x429c43
  42469c:	call   esi
  42469e:	shl    eax,0x15
  4246a1:	cmp    eax,0x1000000
  4246a6:	jne    0x4239b3
  4246ac:	push   0x429c6b
  4246b1:	call   DWORD PTR ds:0x42a29f
  4246b7:	test   eax,eax
  4246b9:	jne    0x4239b3
  4246bf:	lea    eax,[esp+0x78]
  4246c3:	push   eax
  4246c4:	push   0x429c87
  4246c9:	call   DWORD PTR ds:0x42a2bb
  4246cf:	cmp    eax,0xffffffff
  4246d2:	jne    0x4239b3
  4246d8:	push   0xf
  4246da:	lea    eax,[esp+0x44]
  4246de:	push   eax
  4246df:	push   0x429ca3
  4246e4:	push   0x429cb7
  4246e9:	push   0x429cdf
  4246ee:	call   esi
  4246f0:	shl    eax,0x15
  4246f3:	cmp    eax,0x1000000
  4246f8:	jne    0x4239b3
  4246fe:	push   0x429d07
  424703:	call   DWORD PTR ds:0x42a29f
  424709:	test   eax,eax
  42470b:	jne    0x4239b3
  424711:	lea    eax,[esp+0x78]
  424715:	push   eax
  424716:	push   0x429d23
  42471b:	call   DWORD PTR ds:0x42a2bb
  424721:	cmp    eax,0xffffffff
  424724:	jne    0x4239b3
  42472a:	push   0xf
  42472c:	lea    eax,[esp+0x44]
  424730:	push   eax
  424731:	push   0x429d3f
  424736:	push   0x429d53
  42473b:	push   0x429d7b
  424740:	call   esi
  424742:	shl    eax,0x15
  424745:	cmp    eax,0x1000000
  42474a:	jne    0x4239b3
  424750:	push   0x429da3
  424755:	call   DWORD PTR ds:0x42a29f
  42475b:	test   eax,eax
  42475d:	jne    0x4239b3
  424763:	lea    eax,[esp+0x78]
  424767:	push   eax
  424768:	push   0x429dbf
  42476d:	call   DWORD PTR ds:0x42a2bb
  424773:	cmp    eax,0xffffffff
  424776:	jne    0x4239b3
  42477c:	mov    eax,DWORD PTR [esp+0x3c]
  424780:	cmp    eax,0xf89c85ba
  424785:	je     0x4247e4
  42478b:	mov    eax,DWORD PTR [esp+0x20]
  42478f:	mov    ecx,DWORD PTR [esp+0x38]
  424793:	xor    eax,edi
  424795:	add    eax,ebx
  424797:	cmp    eax,ecx
  424799:	je     0x4247e4
  42479f:	mov    eax,ds:0x42942f
  4247a4:	mov    eax,DWORD PTR [eax+0x194]
  4247aa:	mov    ecx,DWORD PTR [eax]
  4247ac:	mov    eax,DWORD PTR [ecx+0x3c]
  4247af:	push   DWORD PTR ds:0x42950f
  4247b5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4247b9:	push   DWORD PTR ds:0x4292b3
  4247bf:	add    eax,ecx
  4247c1:	mov    ecx,DWORD PTR ds:0x42942f
  4247c7:	mov    ecx,DWORD PTR [ecx+0x194]
  4247cd:	push   DWORD PTR [ecx]
  4247cf:	call   eax
  4247d1:	mov    ecx,DWORD PTR ds:0x42942f
  4247d7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4247dd:	mov    DWORD PTR [ecx],eax
  4247df:	jmp    0x424a08
  4247e4:	mov    eax,DWORD PTR [esp+0x20]
  4247e8:	mov    ecx,DWORD PTR [esp+0x60]
  4247ec:	xor    eax,edi
  4247ee:	add    eax,ebx
  4247f0:	cmp    eax,ecx
  4247f2:	jne    0x42485b
  4247f8:	mov    eax,DWORD PTR [esp+0x20]
  4247fc:	mov    ecx,DWORD PTR ds:0x42942f
  424802:	mov    ecx,DWORD PTR [ecx+0x198]
  424808:	xor    eax,edi
  42480a:	add    eax,ebx
  42480c:	cmp    eax,DWORD PTR [ecx]
  42480e:	jne    0x424834
  424814:	mov    eax,DWORD PTR [esp+0x20]
  424818:	push   0xf89c85b9
  42481d:	xor    eax,edi
  42481f:	add    eax,ebx
  424821:	push   eax
  424822:	push   0xf89c85bd
  424827:	push   DWORD PTR [esp+0x18]
  42482b:	push   DWORD PTR [esp+0x30]
  42482f:	call   0x420148
  424834:	push   DWORD PTR [esp+0xc]
  424838:	push   DWORD PTR [esp+0x24]
  42483c:	call   0x401000
  424841:	mov    eax,DWORD PTR [esp+0x20]
  424845:	xor    eax,edi
  424847:	add    eax,ebx
  424849:	mov    ds:0x4294bb,eax
  42484e:	mov    eax,DWORD PTR [esp+0x20]
  424852:	xor    eax,edi
  424854:	add    eax,ebx
  424856:	mov    ds:0x4294b3,eax
  42485b:	mov    eax,DWORD PTR [esp+0x2c]
  42485f:	test   eax,eax
  424861:	je     0x424a08
  424867:	push   0xf
  424869:	lea    eax,[esp+0x44]
  42486d:	push   eax
  42486e:	push   0x429ddb
  424873:	mov    DWORD PTR [esp+0x70],0xf152c32
  42487b:	push   0x429def
  424880:	mov    DWORD PTR [esp+0x7c],0x712ed2f
  424888:	mov    DWORD PTR [esp+0x84],0x373fc01
  424893:	push   0x429e17
  424898:	mov    DWORD PTR [esp+0x7c],0x72670ad1
  4248a0:	call   esi
  4248a2:	shl    eax,0x15
  4248a5:	cmp    eax,0x1000000
  4248aa:	jne    0x4239b3
  4248b0:	push   0x429e3f
  4248b5:	call   DWORD PTR ds:0x42a29f
  4248bb:	test   eax,eax
  4248bd:	jne    0x4239b3
  4248c3:	lea    eax,[esp+0x78]
  4248c7:	push   eax
  4248c8:	push   0x429e5b
  4248cd:	call   DWORD PTR ds:0x42a2bb
  4248d3:	cmp    eax,0xffffffff
  4248d6:	jne    0x4239b3
  4248dc:	call   0x41da00
  4248e1:	mov    eax,DWORD PTR [esp+0x34]
  4248e5:	mov    eax,DWORD PTR [esp+0xc]
  4248e9:	mov    DWORD PTR [esp+0x30],eax
  4248ed:	mov    eax,DWORD PTR [esp+0x20]
  4248f1:	mov    DWORD PTR [esp+0xc],eax
  4248f5:	mov    eax,eax
  4248f7:	mov    eax,ds:0x42942f
  4248fc:	mov    ecx,DWORD PTR [eax+0x1c0]
  424902:	mov    edx,DWORD PTR [ecx]
  424904:	and    DWORD PTR [esp+0x1c],0x0
  424909:	mov    esi,0xfabdbeda
  42490e:	add    edx,esi
  424910:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424915:	mov    ecx,0x8a29a13b
  42491a:	xor    edx,ecx
  42491c:	mov    DWORD PTR [esp+0x10],edx
  424920:	mov    edx,DWORD PTR [esp+0x1c]
  424924:	xor    edx,0x0
  424927:	cmp    DWORD PTR [esp+0x10],0x70941fe0
  42492f:	mov    DWORD PTR [esp+0x14],edx
  424933:	jne    0x424942
  424939:	cmp    edx,0xffffffff
  42493c:	je     0x4249ab
  424942:	mov    eax,DWORD PTR [eax+0x1c8]
  424948:	mov    eax,DWORD PTR [eax]
  42494a:	cdq    
  42494b:	add    eax,esi
  42494d:	adc    edx,0xffffffff
  424950:	and    DWORD PTR [esp+0x1c],0x0
  424955:	xor    edx,0x0
  424958:	mov    DWORD PTR [esp+0x24],edx
  42495c:	mov    edx,DWORD PTR [esp+0xc]
  424960:	mov    DWORD PTR [esp+0x18],edx
  424964:	xor    eax,ecx
  424966:	add    DWORD PTR [esp+0x18],esi
  42496a:	mov    edx,DWORD PTR [esp+0x18]
  42496e:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424973:	xor    edx,ecx
  424975:	mov    DWORD PTR [esp+0x10],edx
  424979:	mov    edx,DWORD PTR [esp+0x1c]
  42497d:	xor    edx,0x0
  424980:	mov    DWORD PTR [esp+0x14],edx
  424984:	cmp    DWORD PTR [esp+0x10],eax
  424988:	jne    0x42499a
  42498e:	mov    eax,DWORD PTR [esp+0x24]
  424992:	cmp    edx,eax
  424994:	je     0x4249ab
  42499a:	mov    eax,DWORD PTR [esp+0xc]
  42499e:	add    eax,DWORD PTR [esp+0x30]
  4249a2:	mov    DWORD PTR [esp+0xc],eax
  4249a6:	jmp    0x424a08
  4249ab:	mov    eax,ds:0x4294b3
  4249b0:	mov    edx,DWORD PTR ds:0x4294bb
  4249b6:	xor    eax,edx
  4249b8:	mov    ds:0x4294b3,eax
  4249bd:	mov    edx,DWORD PTR ds:0x4294b3
  4249c3:	mov    eax,DWORD PTR [esp+0x2c]
  4249c7:	add    DWORD PTR [eax],edx
  4249c9:	mov    edx,DWORD PTR [esp+0xc]
  4249cd:	mov    eax,ds:0x4294b3
  4249d2:	xor    edx,edi
  4249d4:	add    edx,ebx
  4249d6:	xor    ebx,ebx
  4249d8:	add    edx,esi
  4249da:	adc    ebx,0xffffffff
  4249dd:	xor    edi,edi
  4249df:	xor    edx,ecx
  4249e1:	xor    ebx,0x0
  4249e4:	add    eax,esi
  4249e6:	adc    edi,0xffffffff
  4249e9:	xor    eax,ecx
  4249eb:	xor    edi,0x0
  4249ee:	cmp    eax,edx
  4249f0:	jne    0x424a08
  4249f6:	cmp    edi,ebx
  4249f8:	jne    0x424a08
  4249fe:	mov    eax,ds:0x4294b3
  424a03:	mov    ds:0x4294bb,eax
  424a08:	push   0xf
  424a0a:	lea    eax,[esp+0x44]
  424a0e:	push   eax
  424a0f:	push   0x429e77
  424a14:	push   0x429e8b
  424a19:	push   0x429eb3
  424a1e:	call   DWORD PTR ds:0x42a2cb
  424a24:	shl    eax,0x15
  424a27:	cmp    eax,0x1000000
  424a2c:	jne    0x4239b3
  424a32:	push   0x429edb
  424a37:	call   DWORD PTR ds:0x42a29f
  424a3d:	test   eax,eax
  424a3f:	jne    0x4239b3
  424a45:	lea    eax,[esp+0x78]
  424a49:	push   eax
  424a4a:	push   0x429ef7
  424a4f:	call   DWORD PTR ds:0x42a2bb
  424a55:	cmp    eax,0xffffffff
  424a58:	jne    0x4239b3
  424a5e:	mov    eax,ds:0x42942f
  424a63:	push   0x4
  424a65:	add    eax,0x1cc
  424a6a:	push   eax
  424a6b:	lea    eax,[esp+0x3c]
  424a6f:	push   eax
  424a70:	call   0x424a84
  424a75:	mov    eax,DWORD PTR [esp+0x34]
  424a79:	mov    eax,DWORD PTR [eax]
  424a7b:	pop    edi
  424a7c:	pop    esi
  424a7d:	pop    ebx
  424a7e:	mov    esp,ebp
  424a80:	pop    ebp
  424a81:	ret    0xc
  424a84:	push   ebp
  424a85:	mov    ebp,esp
  424a87:	sub    esp,0x10
  424a8a:	and    DWORD PTR ds:0x42a17f,0x0
  424a94:	xor    edx,edx
  424a96:	add    edx,DWORD PTR ds:0x42a17f
  424a9c:	inc    edx
  424a9d:	mov    DWORD PTR ds:0x42a17f,edx
  424aa3:	cmp    DWORD PTR ds:0x42a17f,0xc
  424aaa:	jb     0x424aea
  424ab0:	jmp    0x424ac3
  424ab5:	push   DWORD PTR [ebp-0xc]
  424ab8:	push   0x4b82
  424abd:	call   DWORD PTR ds:0x42a2c3
  424ac3:	cmp    DWORD PTR ds:0x42a17f,0xb
  424aca:	jne    0x424add
  424ad0:	mov    edx,DWORD PTR ds:0x42a17f
  424ad6:	inc    edx
  424ad7:	mov    DWORD PTR ds:0x42a17f,edx
  424add:	cmp    DWORD PTR ds:0x42a17f,0x16
  424ae4:	jb     0x424a94
  424aea:	mov    eax,0xf89c85b9
  424aef:	mov    DWORD PTR [ebp-0x4],eax
  424af2:	sbb    ecx,edx
  424af4:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424afb:	mov    ecx,DWORD PTR [ebp-0x4]
  424afe:	mov    DWORD PTR ds:0x42a1bb,0x13
  424b08:	cmp    DWORD PTR ds:0x42a1bb,0x0
  424b0f:	je     0x424b49
  424b15:	cmp    DWORD PTR ds:0x42a1bb,0x1e
  424b1c:	jbe    0x424b49
  424b22:	jmp    0x424b37
  424b27:	push   0x5b3a
  424b2c:	push   0x40cb
  424b31:	call   DWORD PTR ds:0x42a2c7
  424b37:	mov    edx,DWORD PTR ds:0x42a1bb
  424b3d:	dec    edx
  424b3e:	mov    DWORD PTR ds:0x42a1bb,edx
  424b44:	jmp    0x424b08
  424b49:	push   esi
  424b4a:	sub    DWORD PTR ds:0x42a1c7,ecx
  424b50:	mov    edx,0x75108a8
  424b55:	add    DWORD PTR ds:0x42a197,edi
  424b5b:	xor    ecx,edx
  424b5d:	neg    esi
  424b5f:	mov    esi,0x3272ef
  424b64:	adc    DWORD PTR ds:0x42a133,0x42a12f
  424b6e:	push   edi
  424b6f:	mov    edi,DWORD PTR [ebp+0x10]
  424b72:	add    ecx,esi
  424b74:	mov    DWORD PTR ds:0x42a1a7,0x8eb
  424b7e:	cmp    ecx,edi
  424b80:	mov    DWORD PTR ds:0x42a1a7,0x4f38
  424b8a:	je     0x424cbb
  424b90:	mov    DWORD PTR ds:0x42a1c7,0x14
  424b9a:	cmp    DWORD PTR ds:0x42a1c7,0x0
  424ba1:	je     0x424bfc
  424ba7:	cmp    DWORD PTR ds:0x42a1c7,0xb
  424bae:	jle    0x424bfc
  424bb4:	jmp    0x424bce
  424bb9:	push   0x7f3b
  424bbe:	push   0x42a1bb
  424bc3:	push   0x400000
  424bc8:	call   DWORD PTR ds:0x42a2cf
  424bce:	cmp    DWORD PTR ds:0x42a1c7,0xc
  424bd5:	jne    0x424be8
  424bdb:	mov    ecx,DWORD PTR ds:0x42a1c7
  424be1:	dec    ecx
  424be2:	mov    DWORD PTR ds:0x42a1c7,ecx
  424be8:	xor    ecx,ecx
  424bea:	add    ecx,DWORD PTR ds:0x42a1c7
  424bf0:	dec    ecx
  424bf1:	mov    DWORD PTR ds:0x42a1c7,ecx
  424bf7:	jmp    0x424b9a
  424bfc:	mov    ecx,DWORD PTR [ebp-0x4]
  424bff:	mov    edi,DWORD PTR [ebp+0x10]
  424c02:	xor    eax,eax
  424c04:	xor    ecx,edx
  424c06:	add    ecx,esi
  424c08:	add    edi,0xfabdbeda
  424c0e:	adc    eax,0xffffffff
  424c11:	xor    eax,0x0
  424c14:	mov    DWORD PTR [ebp-0xc],eax
  424c17:	push   ebx
  424c18:	xor    ebx,ebx
  424c1a:	xor    edi,0x8a29a13b
  424c20:	mov    eax,ecx
  424c22:	add    eax,0xfabdbeda
  424c27:	adc    ebx,0xffffffff
  424c2a:	xor    eax,0x8a29a13b
  424c2f:	xor    ebx,0x0
  424c32:	cmp    eax,edi
  424c34:	jne    0x424c4d
  424c3a:	cmp    ebx,DWORD PTR [ebp-0xc]
  424c3d:	je     0x424cb5
  424c43:	jmp    0x424c4d
  424c48:	mov    esi,0x3272ef
  424c4d:	mov    eax,DWORD PTR [ebp-0x4]
  424c50:	mov    edi,DWORD PTR [ebp-0x8]
  424c53:	xor    edi,edx
  424c55:	add    edi,esi
  424c57:	mov    esi,DWORD PTR [ebp+0x8]
  424c5a:	imul   edi,ecx
  424c5d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c60:	xor    eax,edx
  424c62:	add    eax,ecx
  424c64:	mov    al,BYTE PTR [ebx+eax*1+0x3272ef]
  424c6b:	mov    BYTE PTR [edi+esi*1],al
  424c6e:	mov    eax,DWORD PTR [ebp-0x8]
  424c71:	mov    esi,DWORD PTR [ebp+0x10]
  424c74:	xor    eax,edx
  424c76:	xor    ebx,ebx
  424c78:	add    esi,0xfabdbeda
  424c7e:	adc    ebx,0xffffffff
  424c81:	lea    ecx,[ecx+eax*1+0x3272ef]
  424c88:	xor    edi,edi
  424c8a:	xor    esi,0x8a29a13b
  424c90:	xor    ebx,0x0
  424c93:	mov    eax,ecx
  424c95:	add    eax,0xfabdbeda
  424c9a:	adc    edi,0xffffffff
  424c9d:	xor    eax,0x8a29a13b
  424ca2:	xor    edi,0x0
  424ca5:	cmp    eax,esi
  424ca7:	jne    0x424c48
  424cad:	cmp    edi,ebx
  424caf:	jne    0x424c48
  424cb5:	mov    eax,0xf89c85ba
  424cba:	pop    ebx
  424cbb:	pop    edi
  424cbc:	pop    esi
  424cbd:	leave  
  424cbe:	ret    0xc
  424cc1:	push   ebp
  424cc2:	mov    ebp,esp
  424cc4:	push   ecx
  424cc5:	and    edx,DWORD PTR ds:0x42a15b
  424ccb:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  424cd2:	mov    DWORD PTR ds:0x42a14b,0x1b
  424cdc:	cmp    DWORD PTR ds:0x42a14b,0x0
  424ce3:	je     0x424d33
  424ce9:	cmp    DWORD PTR ds:0x42a14b,0xe
  424cf0:	ja     0x424d33
  424cf6:	jmp    0x424d0b
  424cfb:	push   0x42a14f
  424d00:	push   0x85a8
  424d05:	call   DWORD PTR ds:0x42a2d3
  424d0b:	cmp    DWORD PTR ds:0x42a14b,0xf
  424d12:	jne    0x424d23
  424d18:	mov    eax,ds:0x42a14b
  424d1d:	dec    eax
  424d1e:	mov    ds:0x42a14b,eax
  424d23:	mov    eax,ds:0x42a14b
  424d28:	dec    eax
  424d29:	mov    ds:0x42a14b,eax
  424d2e:	jmp    0x424cdc
  424d33:	mov    eax,DWORD PTR [ebp+0x8]
  424d36:	and    DWORD PTR ds:0x42a19b,0x0
  424d40:	mov    edx,DWORD PTR ds:0x42a19b
  424d46:	inc    edx
  424d47:	mov    DWORD PTR ds:0x42a19b,edx
  424d4d:	cmp    DWORD PTR ds:0x42a19b,0x19
  424d54:	jbe    0x424d72
  424d5a:	jmp    0x424d65
  424d5f:	call   DWORD PTR ds:0x42a293
  424d65:	cmp    DWORD PTR ds:0x42a19b,0x13
  424d6c:	jb     0x424d40
  424d72:	movsx  eax,BYTE PTR [eax]
  424d75:	mov    edx,0x3272ef
  424d7a:	sub    eax,edx
  424d7c:	mov    ecx,0x75108a8
  424d81:	xor    eax,ecx
  424d83:	cmp    eax,0xf89c85f6
  424d88:	jne    0x424db7
  424d8e:	mov    eax,DWORD PTR [ebp+0x8]
  424d91:	push   esi
  424d92:	mov    esi,DWORD PTR [ebp+0x8]
  424d95:	add    esi,DWORD PTR [eax+0x3c]
  424d98:	mov    DWORD PTR [ebp+0x8],esi
  424d9b:	mov    eax,DWORD PTR [ebp-0x4]
  424d9e:	mov    esi,DWORD PTR [ebp+0x8]
  424da1:	xor    eax,ecx
  424da3:	add    eax,edx
  424da5:	cmp    DWORD PTR [esi+0x54],eax
  424da8:	pop    esi
  424da9:	je     0x424db7
  424daf:	mov    eax,DWORD PTR [ebp+0x8]
  424db2:	jmp    0x424dbe
  424db7:	mov    eax,DWORD PTR [ebp-0x4]
  424dba:	xor    eax,ecx
  424dbc:	add    eax,edx
  424dbe:	leave  
  424dbf:	ret    0x4
  424dc2:	push   ebp
  424dc3:	mov    ebp,esp
  424dc5:	sub    esp,0xc
  424dc8:	sub    edx,edx
  424dca:	push   esi
  424dcb:	mov    DWORD PTR ds:0x42a14b,0x4414
  424dd5:	mov    esi,0xf89c85b9
  424dda:	and    DWORD PTR ds:0x42a147,0x2b27
  424de4:	mov    DWORD PTR [ebp-0x8],esi
  424de7:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  424dee:	adc    ecx,ecx
  424df0:	push   edi
  424df1:	mov    eax,eax
  424df3:	neg    ecx
  424df5:	mov    eax,DWORD PTR [ebp-0x4]
  424df8:	and    DWORD PTR ds:0x42a173,0x0
  424e02:	jmp    0x424e16
  424e07:	xor    edi,edi
  424e09:	add    edi,DWORD PTR ds:0x42a173
  424e0f:	inc    edi
  424e10:	mov    DWORD PTR ds:0x42a173,edi
  424e16:	cmp    DWORD PTR ds:0x42a173,0x17
  424e1d:	jae    0x424e6a
  424e23:	cmp    DWORD PTR ds:0x42a173,0xb
  424e2a:	jle    0x424e6a
  424e30:	jmp    0x424e4b
  424e35:	push   DWORD PTR [ebp-0x14]
  424e38:	push   DWORD PTR [ebp-0x24]
  424e3b:	push   0x4290b2
  424e40:	push   0x400000
  424e45:	call   DWORD PTR ds:0x42a297
  424e4b:	cmp    DWORD PTR ds:0x42a173,0xa
  424e52:	jne    0x424e65
  424e58:	mov    edi,DWORD PTR ds:0x42a173
  424e5e:	inc    edi
  424e5f:	mov    DWORD PTR ds:0x42a173,edi
  424e65:	jmp    0x424e07
  424e6a:	mov    edi,DWORD PTR [ebp-0x8]
  424e6d:	mov    ecx,0x75108a8
  424e72:	xor    eax,ecx
  424e74:	adc    DWORD PTR ds:0x42a183,0x7f13
  424e7e:	xor    edi,ecx
  424e80:	mov    edx,0x3272ef
  424e85:	sub    DWORD PTR ds:0x42a183,0x42a13f
  424e8f:	add    edi,edx
  424e91:	add    eax,edx
  424e93:	imul   eax,edi
  424e96:	not    edi
  424e98:	mov    edi,DWORD PTR [ebp+0xc]
  424e9b:	mov    DWORD PTR ds:0x42a163,0x324
  424ea5:	cmp    edi,eax
  424ea7:	je     0x424f03
  424ead:	and    DWORD PTR ds:0x42a177,edx
  424eb3:	mov    DWORD PTR [ebp-0xc],esi
  424eb6:	mov    eax,DWORD PTR [ebp-0xc]
  424eb9:	inc    esi
  424eba:	mov    esi,DWORD PTR [ebp+0xc]
  424ebd:	xor    eax,ecx
  424ebf:	lea    eax,[eax*8+0x19397f0]
  424ec6:	mov    eax,DWORD PTR [esi+eax*1]
  424ec9:	mov    DWORD PTR [ebp+0xc],eax
  424ecc:	mov    eax,DWORD PTR [ebp-0x4]
  424ecf:	mov    esi,DWORD PTR [ebp-0x8]
  424ed2:	xor    eax,ecx
  424ed4:	xor    esi,ecx
  424ed6:	add    esi,edx
  424ed8:	add    eax,edx
  424eda:	imul   eax,esi
  424edd:	mov    esi,DWORD PTR [ebp+0xc]
  424ee0:	cmp    esi,eax
  424ee2:	je     0x424f03
  424ee8:	mov    eax,DWORD PTR [ebp-0x4]
  424eeb:	xor    eax,ecx
  424eed:	mov    ecx,DWORD PTR [ebp+0xc]
  424ef0:	add    eax,edx
  424ef2:	imul   eax,ecx
  424ef5:	add    eax,DWORD PTR [ebp+0x8]
  424ef8:	mov    DWORD PTR [ebp+0xc],eax
  424efb:	mov    eax,DWORD PTR [ebp+0xc]
  424efe:	jmp    0x424f14
  424f03:	mov    eax,DWORD PTR [ebp-0x4]
  424f06:	mov    esi,DWORD PTR [ebp-0x8]
  424f09:	xor    esi,ecx
  424f0b:	xor    eax,ecx
  424f0d:	add    esi,edx
  424f0f:	add    eax,edx
  424f11:	imul   eax,esi
  424f14:	pop    edi
  424f15:	pop    esi
  424f16:	leave  
  424f17:	ret    0x8
	...
  424f22:	add    BYTE PTR [eax],al
  424f24:	mov    ch,0x45
  424f26:	out    0x4d,al
  424f28:	add    BYTE PTR [eax],al
  424f2a:	add    BYTE PTR [eax],al
  424f2c:	add    al,BYTE PTR [eax]
  424f2e:	add    BYTE PTR [eax],al
  424f30:	xor    BYTE PTR [eax],al
  424f32:	add    BYTE PTR [eax],al
  424f34:	inc    eax
  424f35:	dec    edi
  424f36:	add    al,BYTE PTR [eax]
  424f38:	inc    eax
  424f39:	inc    ebx
  424f3a:	add    al,BYTE PTR [eax]
  424f3c:	add    BYTE PTR [eax],al
  424f3e:	add    BYTE PTR [eax],al
  424f40:	push   edx
  424f41:	push   ebx
  424f42:	inc    esp
  424f43:	push   ebx
  424f44:	jg     0x424f71
  424f46:	test   eax,0x1b244829
  424f4b:	inc    ebp
  424f4c:	call   0xaa44:0xdcbe735e
  424f53:	mov    cl,0x1
  424f55:	add    BYTE PTR [eax],al
  424f57:	add    BYTE PTR [esi+0x3a],al
  424f5a:	pop    esp
  424f5b:	push   edi
  424f5c:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  424f63:	inc    esp
  424f64:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  424f6b:	inc    ebp
  424f6c:	js     0x424fd3
  424f6e:	arpl   WORD PTR [eax],ax
  424f70:	mov    edx,DWORD PTR [ebp-0x14]
  424f73:	sub    esp,0x108
  424f79:	push   ebx
  424f7a:	mov    eax,ebx
  424f7c:	xchg   ecx,eax
  424f7d:	mov    eax,DWORD PTR [ebp+0x8]
  424f80:	cmp    eax,0xf89c85b9
  424f85:	jne    0x425447
  424f8b:	mov    eax,DWORD PTR [ebp+0xc]
  424f8e:	cmp    eax,0xf89c85ba
  424f93:	jne    0x425447
  424f99:	mov    eax,DWORD PTR [ebp+0x24]
  424f9c:	mov    DWORD PTR [ebp-0x4],eax
  424f9f:	mov    eax,DWORD PTR [ebp-0x4]
  424fa2:	mov    eax,DWORD PTR [eax+0x1d8]
  424fa8:	mov    eax,DWORD PTR [eax]
  424faa:	mov    eax,DWORD PTR [eax]
  424fac:	mov    DWORD PTR [ebp-0x8],eax
  424faf:	mov    BYTE PTR [ebp-0x18],0x13
  424fb3:	mov    BYTE PTR [ebp-0x17],0x1e
  424fb7:	mov    BYTE PTR [ebp-0x16],0x11
  424fbb:	mov    BYTE PTR [ebp-0x15],0x4f
  424fbf:	mov    BYTE PTR [ebp-0x14],0x48
  424fc3:	mov    BYTE PTR [ebp-0x13],0x7a
  424fc7:	mov    BYTE PTR [ebp-0x20],0xd
  424fcb:	mov    BYTE PTR [ebp-0x1f],0xf
  424fcf:	mov    BYTE PTR [ebp-0x1e],0x1d
  424fd3:	mov    BYTE PTR [ebp-0x1d],0x8
  424fd7:	mov    BYTE PTR [ebp-0x1c],0x4f
  424fdb:	mov    BYTE PTR [ebp-0x1b],0x48
  424fdf:	mov    BYTE PTR [ebp-0x1a],0x7a
  424fe3:	mov    BYTE PTR [ebp-0x28],0xf
  424fe7:	mov    BYTE PTR [ebp-0x27],0x12
  424feb:	mov    BYTE PTR [ebp-0x26],0x16
  424fef:	mov    BYTE PTR [ebp-0x25],0x3
  424ff3:	mov    BYTE PTR [ebp-0x24],0x19
  424ff7:	push   esi
  424ff8:	mov    BYTE PTR [ebp-0x23],0xa
  424ffc:	mov    BYTE PTR [ebp-0x22],0x11
  425000:	push   edi
  425001:	mov    BYTE PTR [ebp-0x21],0x7a
  425005:	xor    esi,esi
  425007:	mov    eax,0xff
  42500c:	lea    ecx,[ebp+esi*1-0x18]
  425010:	movzx  edx,BYTE PTR [ecx]
  425013:	xor    edx,0x7b
  425016:	add    edx,eax
  425018:	inc    esi
  425019:	mov    BYTE PTR [ecx],dl
  42501b:	cmp    esi,0x6
  42501e:	jb     0x42500c
  425020:	xor    esi,esi
  425022:	lea    ecx,[ebp+esi*1-0x20]
  425026:	movzx  edx,BYTE PTR [ecx]
  425029:	xor    edx,0x7b
  42502c:	add    edx,eax
  42502e:	inc    esi
  42502f:	mov    BYTE PTR [ecx],dl
  425031:	cmp    esi,0x7
  425034:	jb     0x425022
  425036:	xor    esi,esi
  425038:	lea    ecx,[ebp+esi*1-0x28]
  42503c:	movzx  edx,BYTE PTR [ecx]
  42503f:	xor    edx,0x7b
  425042:	add    edx,eax
  425044:	inc    esi
  425045:	mov    BYTE PTR [ecx],dl
  425047:	cmp    esi,0x8
  42504a:	jb     0x425038
  42504c:	lea    eax,[ebp-0x2c]
  42504f:	mov    DWORD PTR [ebp-0x8],eax
  425052:	mov    ecx,DWORD PTR [ebp-0x8]
  425055:	mov    eax,0x7113fccf
  42505a:	mov    DWORD PTR [ecx],eax
  42505c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42505f:	mov    esi,0x4e31
  425064:	mov    ebx,0x3272ef
  425069:	cmp    ecx,eax
  42506b:	jne    0x425136
  425071:	lea    eax,[esi+0x35]
  425074:	mov    WORD PTR [ebp-0x78],ax
  425078:	mov    eax,esi
  42507a:	mov    WORD PTR [ebp-0x76],ax
  42507e:	add    eax,0x4b
  425081:	mov    WORD PTR [ebp-0x74],ax
  425085:	lea    eax,[esi+0xe]
  425088:	mov    WORD PTR [ebp-0x72],ax
  42508c:	add    eax,0x3f
  42508f:	mov    ecx,eax
  425091:	lea    eax,[esi-0xd]
  425094:	mov    WORD PTR [ebp-0x66],ax
  425098:	mov    eax,esi
  42509a:	mov    WORD PTR [ebp-0x64],ax
  42509e:	add    eax,0xfffffff4
  4250a1:	mov    WORD PTR [ebp-0x62],ax
  4250a5:	mov    eax,0x44a
  4250aa:	mov    WORD PTR [ebp-0x60],ax
  4250ae:	mov    eax,0x567b
  4250b3:	mov    WORD PTR [ebp-0x5e],ax
  4250b7:	mov    eax,0x611b
  4250bc:	mov    WORD PTR [ebp-0x5c],ax
  4250c0:	lea    eax,[ebp-0xe0]
  4250c6:	push   eax
  4250c7:	mov    eax,DWORD PTR [ebp+0xc]
  4250ca:	mov    edi,0x75108a8
  4250cf:	xor    eax,edi
  4250d1:	add    eax,ebx
  4250d3:	push   eax
  4250d4:	mov    WORD PTR [ebp-0x70],cx
  4250d8:	lea    ecx,[esi+0xa]
  4250db:	mov    edx,ecx
  4250dd:	lea    eax,[ebp-0x78]
  4250e0:	push   eax
  4250e1:	mov    eax,DWORD PTR [ebp-0x4]
  4250e4:	mov    eax,DWORD PTR [eax+0x198]
  4250ea:	mov    WORD PTR [ebp-0x6e],dx
  4250ee:	mov    edx,0x4f85
  4250f3:	mov    WORD PTR [ebp-0x6c],dx
  4250f7:	mov    DWORD PTR [ebp-0x6a],0x4e7e4e38
  4250fe:	mov    DWORD PTR [ebp-0x5a],0x4e3bf1e9
  425105:	mov    DWORD PTR [ebp-0xe0],0x1
  42510f:	mov    DWORD PTR [ebp-0xdc],0x255
  425119:	push   DWORD PTR [eax]
  42511b:	mov    eax,DWORD PTR [ebp+0x10]
  42511e:	call   eax
  425120:	mov    DWORD PTR [ebp-0x8],eax
  425123:	mov    eax,DWORD PTR [ebp-0x8]
  425126:	test   eax,eax
  425128:	je     0x42513b
  42512a:	xor    DWORD PTR ds:0x76586876,0x87687666
  425134:	jmp    0x42513b
  425136:	mov    edi,0x75108a8
  42513b:	mov    eax,DWORD PTR [ebp-0x4]
  42513e:	mov    ecx,DWORD PTR [eax+0x18c]
  425144:	xor    eax,eax
  425146:	cmp    DWORD PTR [ecx],eax
  425148:	jne    0x4253ba
  42514e:	mov    ecx,DWORD PTR [ebp-0x4]
  425151:	mov    ecx,DWORD PTR [ecx+0x17c]
  425157:	mov    DWORD PTR [ecx],eax
  425159:	mov    ecx,DWORD PTR [ebp-0x4]
  42515c:	mov    ecx,DWORD PTR [ecx+0x180]
  425162:	mov    DWORD PTR [ecx],eax
  425164:	mov    eax,0x4e6c
  425169:	mov    WORD PTR [ebp-0x9c],ax
  425170:	mov    eax,esi
  425172:	mov    WORD PTR [ebp-0x9a],ax
  425179:	mov    eax,0x4e7c
  42517e:	mov    WORD PTR [ebp-0x98],ax
  425185:	add    eax,0xffffffc0
  425188:	mov    WORD PTR [ebp-0x96],ax
  42518f:	mov    eax,0x4f81
  425194:	mov    WORD PTR [ebp-0x94],ax
  42519b:	mov    eax,0x4e3d
  4251a0:	mov    WORD PTR [ebp-0x92],ax
  4251a7:	add    eax,0x41
  4251aa:	mov    WORD PTR [ebp-0x90],ax
  4251b1:	mov    eax,0x4e3b
  4251b6:	mov    WORD PTR [ebp-0x8e],ax
  4251bd:	mov    eax,esi
  4251bf:	mov    WORD PTR [ebp-0x8c],ax
  4251c6:	mov    eax,0x4e38
  4251cb:	mov    WORD PTR [ebp-0x8a],ax
  4251d2:	mov    eax,0x99fc
  4251d7:	mov    WORD PTR [ebp-0x88],ax
  4251de:	mov    eax,0x8d6d
  4251e3:	mov    WORD PTR [ebp-0x86],ax
  4251ea:	mov    eax,0xd66e
  4251ef:	mov    WORD PTR [ebp-0x84],ax
  4251f6:	mov    eax,0xd78a
  4251fb:	mov    WORD PTR [ebp-0x82],ax
  425202:	mov    eax,0x278b
  425207:	mov    WORD PTR [ebp-0x80],ax
  42520b:	mov    eax,0x478b
  425210:	mov    WORD PTR [ebp-0x7e],ax
  425214:	mov    eax,0x4e3a
  425219:	push   0x8
  42521b:	mov    WORD PTR [ebp-0x7c],ax
  42521f:	mov    DWORD PTR [ebp-0x10],0x316120f
  425226:	mov    DWORD PTR [ebp-0xc],0x7a110a19
  42522d:	lea    eax,[ebp-0x10]
  425230:	pop    ecx
  425231:	mov    dl,BYTE PTR [eax]
  425233:	xor    dl,0x7b
  425236:	dec    dl
  425238:	mov    BYTE PTR [eax],dl
  42523a:	inc    eax
  42523b:	dec    ecx
  42523c:	jne    0x425231
  42523e:	lea    eax,[ebp-0x10]
  425241:	mov    DWORD PTR [ebp-0xdc],eax
  425247:	lea    eax,[ebp-0xe0]
  42524d:	push   eax
  42524e:	mov    eax,DWORD PTR [ebp+0xc]
  425251:	xor    eax,edi
  425253:	add    eax,ebx
  425255:	push   eax
  425256:	mov    eax,DWORD PTR [ebp-0x4]
  425259:	add    eax,0x66
  42525c:	push   eax
  42525d:	mov    eax,DWORD PTR [ebp-0x4]
  425260:	mov    eax,DWORD PTR [eax+0x198]
  425266:	mov    DWORD PTR [ebp-0xe0],0x1
  425270:	push   DWORD PTR [eax]
  425272:	mov    eax,DWORD PTR [ebp+0x10]
  425275:	call   eax
  425277:	mov    ecx,DWORD PTR [ebp+0x8]
  42527a:	xor    ecx,edi
  42527c:	add    ecx,ebx
  42527e:	mov    DWORD PTR [ebp-0x8],eax
  425281:	cmp    eax,ecx
  425283:	jne    0x42529e
  425285:	mov    eax,ds:0x33730bc0
  42528a:	or     eax,0x22150bcf
  42528f:	mov    ds:0x33730bc0,eax
  425294:	add    eax,0x3372e92f
  425299:	mov    ds:0x33730bc0,eax
  42529e:	mov    ecx,0x4e69
  4252a3:	mov    eax,ecx
  4252a5:	mov    WORD PTR [ebp-0x40],ax
  4252a9:	add    eax,0xfffffff9
  4252ac:	mov    edx,eax
  4252ae:	mov    WORD PTR [ebp-0x3e],dx
  4252b2:	mov    edx,0x4f9a
  4252b7:	mov    WORD PTR [ebp-0x3c],dx
  4252bb:	add    edx,0xffffffe8
  4252be:	mov    WORD PTR [ebp-0x3a],dx
  4252c2:	mov    edx,0x4f80
  4252c7:	mov    WORD PTR [ebp-0x38],dx
  4252cb:	add    edx,0xf
  4252ce:	mov    WORD PTR [ebp-0x36],dx
  4252d2:	mov    edx,0x4fb6
  4252d7:	mov    WORD PTR [ebp-0x34],dx
  4252db:	mov    WORD PTR [ebp-0x32],cx
  4252df:	mov    ecx,esi
  4252e1:	mov    WORD PTR [ebp-0x30],cx
  4252e5:	lea    ecx,[edx-0x2d]
  4252e8:	mov    edx,ecx
  4252ea:	mov    WORD PTR [ebp-0x54],dx
  4252ee:	mov    edx,eax
  4252f0:	mov    WORD PTR [ebp-0x52],dx
  4252f4:	mov    edx,0x4e7a
  4252f9:	mov    WORD PTR [ebp-0x50],dx
  4252fd:	mov    WORD PTR [ebp-0x4e],ax
  425301:	lea    eax,[edx-0x1a]
  425304:	mov    WORD PTR [ebp-0x4c],ax
  425308:	add    eax,0xf
  42530b:	mov    WORD PTR [ebp-0x4a],ax
  42530f:	lea    eax,[ecx+0xd]
  425312:	mov    WORD PTR [ebp-0x48],ax
  425316:	mov    WORD PTR [ebp-0x46],cx
  42531a:	mov    WORD PTR [ebp-0x44],si
  42531e:	mov    eax,DWORD PTR [ebp+0x8]
  425321:	movzx  ecx,WORD PTR [ebp-0x54]
  425325:	xor    eax,edi
  425327:	add    eax,ebx
  425329:	xor    eax,ecx
  42532b:	mov    WORD PTR [ebp-0x54],ax
  42532f:	mov    eax,DWORD PTR [ebp+0x8]
  425332:	movzx  ecx,WORD PTR [ebp-0x40]
  425336:	xor    eax,edi
  425338:	add    eax,ebx
  42533a:	xor    eax,ecx
  42533c:	mov    WORD PTR [ebp-0x40],ax
  425340:	xor    eax,eax
  425342:	mov    WORD PTR [ebp-0xf4],ax
  425349:	mov    WORD PTR [ebp-0x108],ax
  425350:	mov    edi,DWORD PTR [ebp+0x24]
  425353:	lea    eax,[ebp-0xf4]
  425359:	lea    edx,[ebp-0x54]
  42535c:	mov    DWORD PTR [ebp-0xe0],0x2
  425366:	mov    DWORD PTR [ebp-0xdc],eax
  42536c:	call   0x427da3
  425371:	mov    DWORD PTR [ebp-0xd8],eax
  425377:	lea    eax,[ebp-0xe0]
  42537d:	push   eax
  42537e:	mov    eax,DWORD PTR [ebp+0xc]
  425381:	xor    eax,0x75108a8
  425386:	add    eax,ebx
  425388:	push   eax
  425389:	lea    eax,[ebp-0x9c]
  42538f:	push   eax
  425390:	push   DWORD PTR [ebp-0x8]
  425393:	mov    eax,DWORD PTR [ebp+0x10]
  425396:	call   eax
  425398:	mov    edi,DWORD PTR [ebp+0x24]
  42539b:	lea    eax,[ebp-0x108]
  4253a1:	lea    edx,[ebp-0x40]
  4253a4:	mov    DWORD PTR [ebp-0xdc],eax
  4253aa:	call   0x427da3
  4253af:	mov    DWORD PTR [ebp-0xd8],eax
  4253b5:	mov    edi,0x75108a8
  4253ba:	mov    eax,DWORD PTR [ebp+0x14]
  4253bd:	push   DWORD PTR [ebp-0x4]
  4253c0:	push   DWORD PTR [ebp+0x20]
  4253c3:	push   DWORD PTR [ebp+0x1c]
  4253c6:	push   DWORD PTR [ebp+0x18]
  4253c9:	push   DWORD PTR [ebp+0x10]
  4253cc:	push   DWORD PTR [ebp+0x8]
  4253cf:	push   DWORD PTR [ebp+0xc]
  4253d2:	call   0x426644
  4253d7:	test   eax,eax
  4253d9:	je     0x42541d
  4253db:	add    DWORD PTR [ebp-0x4],eax
  4253de:	push   DWORD PTR [ebp-0x4]
  4253e1:	lea    esi,[ebp+0x4]
  4253e4:	call   0x425835
  4253e9:	mov    eax,DWORD PTR [ebp-0x4]
  4253ec:	mov    eax,DWORD PTR [eax+0x1c8]
  4253f2:	mov    eax,DWORD PTR [eax]
  4253f4:	xor    eax,edi
  4253f6:	add    eax,ebx
  4253f8:	mov    eax,DWORD PTR [ebp-0x4]
  4253fb:	jne    0x425413
  4253fd:	mov    ecx,DWORD PTR [ebp-0x4]
  425400:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425406:	push   DWORD PTR [ecx]
  425408:	mov    eax,DWORD PTR [eax+0x1e0]
  42540e:	call   DWORD PTR [eax+0x28]
  425411:	jmp    0x42541d
  425413:	mov    eax,DWORD PTR [eax+0x17c]
  425419:	mov    eax,DWORD PTR [eax]
  42541b:	add    DWORD PTR [esi],eax
  42541d:	mov    eax,DWORD PTR [ebp-0x4]
  425420:	mov    eax,DWORD PTR [eax+0x1dc]
  425426:	dec    DWORD PTR [eax]
  425428:	mov    ecx,DWORD PTR [ebp-0x4]
  42542b:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425431:	mov    eax,DWORD PTR [eax]
  425433:	lea    eax,[ecx+eax*4]
  425436:	mov    ecx,DWORD PTR [ebp-0x4]
  425439:	mov    ecx,DWORD PTR [ecx+0x17c]
  42543f:	mov    eax,DWORD PTR [eax]
  425441:	mov    ecx,DWORD PTR [ecx]
  425443:	add    DWORD PTR [eax],ecx
  425445:	pop    edi
  425446:	pop    esi
  425447:	pop    ebx
  425448:	leave  
  425449:	ret    0x20
  42544c:	push   edi
  42544d:	push   esi
  42544e:	push   ebx
  42544f:	push   ebp
  425450:	mov    ebp,esp
  425452:	mov    eax,DWORD PTR [ebp+0x24]
  425455:	add    DWORD PTR [ebp+0x28],eax
  425458:	push   eax
  425459:	cld    
  42545a:	mov    esi,DWORD PTR [ebp+0x18]
  42545d:	add    DWORD PTR [ebp+0x1c],esi
  425460:	push   esi
  425461:	mov    esi,DWORD PTR [ebp+0x14]
  425464:	lods   eax,DWORD PTR ds:[esi]
  425465:	xchg   edx,eax
  425466:	push   edx
  425467:	mov    cl,BYTE PTR [esi-0x2]
  42546a:	or     eax,0xffffffff
  42546d:	shl    eax,cl
  42546f:	not    eax
  425471:	push   eax
  425472:	mov    cl,dh
  425474:	or     eax,0xffffffff
  425477:	shl    eax,cl
  425479:	not    eax
  42547b:	push   eax
  42547c:	add    cl,dl
  42547e:	mov    edi,esi
  425480:	sub    esp,0xc
  425483:	sub    eax,eax
  425485:	inc    eax
  425486:	push   eax
  425487:	push   eax
  425488:	push   eax
  425489:	push   eax
  42548a:	push   eax
  42548b:	push   edi
  42548c:	sub    esi,esi
  42548e:	push   esi
  42548f:	or     ebx,0xffffffff
  425492:	mov    eax,0x300
  425497:	shl    eax,cl
  425499:	lea    ecx,[eax+0x736]
  42549f:	mov    eax,0x4000400
  4254a4:	shr    ecx,1
  4254a6:	rep stos DWORD PTR es:[edi],eax
  4254a8:	push   0x5
  4254aa:	pop    ecx
  4254ab:	call   0x425796
  4254b0:	loop   0x4254ab
  4254b2:	lea    esi,[esi]
  4254b4:	lea    edi,[edi]
  4254b6:	mov    edi,DWORD PTR [ebp-0x4]
  4254b9:	mov    eax,DWORD PTR [ebp-0x10]
  4254bc:	sub    edi,DWORD PTR [ebp+0x24]
  4254bf:	and    eax,edi
  4254c1:	mov    DWORD PTR [ebp-0x18],eax
  4254c4:	mov    al,0x0
  4254c6:	call   0x4257ae
  4254cb:	jne    0x425566
  4254d1:	mov    cl,BYTE PTR [ebp-0xc]
  4254d4:	and    edi,DWORD PTR [ebp-0x14]
  4254d7:	shl    edi,cl
  4254d9:	sub    cl,0x8
  4254dc:	neg    cl
  4254de:	shr    esi,cl
  4254e0:	pop    eax
  4254e1:	add    edi,esi
  4254e3:	pop    esi
  4254e4:	lea    edi,[edi+edi*2]
  4254e7:	shl    edi,0x8
  4254ea:	cmp    al,0x7
  4254ec:	pop    edx
  4254ed:	lea    ecx,[esi+edi*2+0xe6c]
  4254f4:	push   ecx
  4254f5:	push   esi
  4254f6:	mov    esi,0x100
  4254fb:	push   eax
  4254fc:	mov    al,0x1
  4254fe:	jb     0x425534
  425500:	mov    edi,DWORD PTR [ebp-0x4]
  425503:	sub    edi,DWORD PTR [ebp-0x24]
  425506:	movzx  edi,BYTE PTR [edi]
  425509:	mov    ebp,DWORD PTR [ebp-0x34]
  42550c:	shl    edi,1
  42550e:	mov    ecx,esi
  425510:	and    esi,edi
  425512:	add    ecx,esi
  425514:	lea    ebp,[ebp+ecx*2+0x0]
  425518:	call   0x4257cd
  42551d:	mov    ecx,eax
  42551f:	shr    esi,0x8
  425522:	and    ecx,0x1
  425525:	cmp    esi,ecx
  425527:	mov    esi,0x100
  42552c:	jne    0x42553c
  42552e:	cmp    eax,esi
  425530:	jb     0x425509
  425532:	jmp    0x425548
  425534:	mov    ebp,DWORD PTR [ebp-0x34]
  425537:	call   0x4257cd
  42553c:	inc    eax
  42553d:	inc    esi
  42553e:	sub    eax,0x1
  425541:	sub    esi,0x1
  425544:	cmp    eax,esi
  425546:	jb     0x425534
  425548:	pop    edx
  425549:	inc    edx
  42554a:	cmp    edx,0x5
  42554d:	dec    edx
  42554e:	mov    ecx,edx
  425550:	jb     0x425561
  425552:	inc    edx
  425553:	cmp    edx,0xb
  425556:	dec    edx
  425557:	mov    cl,0x4
  425559:	dec    cl
  42555b:	jb     0x425561
  42555d:	mov    cl,0x7
  42555f:	dec    cl
  425561:	sub    edx,ecx
  425563:	push   edx
  425564:	jmp    0x4255b5
  425566:	mov    al,0xc1
  425568:	dec    al
  42556a:	call   0x4257be
  42556f:	jne    0x425585
  425571:	pop    eax
  425572:	pop    edi
  425573:	pop    edx
  425574:	pop    ecx
  425575:	pop    edx
  425576:	pop    ecx
  425577:	push   DWORD PTR [esp]
  42557a:	push   ecx
  42557b:	push   edx
  42557c:	mov    edx,0x664
  425581:	mov    cl,0x0
  425583:	jmp    0x4255f8
  425585:	mov    al,0xcd
  425587:	dec    al
  425589:	call   0x4257be
  42558e:	jne    0x4255be
  425590:	mov    al,0xf1
  425592:	dec    al
  425594:	call   0x4257ae
  425599:	jne    0x4255ee
  42559b:	pop    eax
  42559c:	cmp    al,0x7
  42559e:	mov    al,0x9
  4255a0:	jb     0x4255a4
  4255a2:	mov    al,0xb
  4255a4:	push   eax
  4255a5:	mov    esi,DWORD PTR [ebp-0x4]
  4255a8:	sub    esi,DWORD PTR [ebp-0x24]
  4255ab:	cmp    esi,DWORD PTR [ebp+0x24]
  4255ae:	jb     0x425785
  4255b4:	lods   al,BYTE PTR ds:[esi]
  4255b5:	mov    edi,DWORD PTR [ebp-0x4]
  4255b8:	stos   BYTE PTR es:[edi],al
  4255b9:	jmp    0x42574c
  4255be:	mov    al,0xd8
  4255c0:	call   0x4257be
  4255c5:	mov    esi,DWORD PTR [ebp-0x28]
  4255c8:	je     0x4255e5
  4255ca:	mov    al,0xe4
  4255cc:	call   0x4257be
  4255d1:	mov    esi,DWORD PTR [ebp-0x2c]
  4255d4:	je     0x4255df
  4255d6:	mov    esi,DWORD PTR [ebp-0x30]
  4255d9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4255dc:	mov    DWORD PTR [ebp-0x30],ecx
  4255df:	mov    ecx,DWORD PTR [ebp-0x28]
  4255e2:	mov    DWORD PTR [ebp-0x2c],ecx
  4255e5:	mov    ecx,DWORD PTR [ebp-0x24]
  4255e8:	mov    DWORD PTR [ebp-0x28],ecx
  4255eb:	mov    DWORD PTR [ebp-0x24],esi
  4255ee:	pop    eax
  4255ef:	pop    edi
  4255f0:	pop    ecx
  4255f1:	mov    edx,0xa68
  4255f6:	mov    cl,0x8
  4255f8:	add    edx,edi
  4255fa:	push   edx
  4255fb:	push   edi
  4255fc:	cmp    al,0x7
  4255fe:	mov    al,cl
  425600:	jb     0x425604
  425602:	add    al,0x3
  425604:	push   eax
  425605:	mov    ebp,DWORD PTR [ebp-0x34]
  425608:	call   0x4257cb
  42560d:	jne    0x425623
  42560f:	mov    eax,DWORD PTR [ebp-0x18]
  425612:	mov    edi,DWORD PTR [ebp-0x34]
  425615:	shl    eax,0x3
  425618:	sub    ecx,ecx
  42561a:	push   0x8
  42561c:	pop    esi
  42561d:	lea    edi,[edi+eax*2+0x4]
  425621:	jmp    0x425658
  425623:	mov    ebp,DWORD PTR [ebp-0x34]
  425626:	add    ebp,0x2
  425629:	call   0x4257cb
  42562e:	jne    0x425648
  425630:	mov    eax,DWORD PTR [ebp-0x18]
  425633:	mov    edi,DWORD PTR [ebp-0x34]
  425636:	shl    eax,0x3
  425639:	push   0x8
  42563b:	pop    ecx
  42563c:	push   0x8
  42563e:	pop    esi
  42563f:	lea    edi,[edi+eax*2+0x104]
  425646:	jmp    0x425658
  425648:	mov    edi,0x204
  42564d:	add    edi,DWORD PTR [ebp-0x34]
  425650:	push   0x10
  425652:	pop    ecx
  425653:	mov    esi,0x100
  425658:	mov    DWORD PTR [ebp-0x1c],ecx
  42565b:	sub    eax,eax
  42565d:	inc    eax
  42565e:	mov    ebp,edi
  425660:	call   0x4257cd
  425665:	mov    ecx,eax
  425667:	sub    ecx,esi
  425669:	jb     0x42565e
  42566b:	add    DWORD PTR [ebp-0x1c],ecx
  42566e:	cmp    DWORD PTR [ebp-0x3c],0x4
  425672:	jae    0x425728
  425678:	add    DWORD PTR [ebp-0x3c],0x7
  42567c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42567f:	cmp    ecx,0x4
  425682:	jb     0x425687
  425684:	push   0x3
  425686:	pop    ecx
  425687:	mov    edi,DWORD PTR [ebp-0x38]
  42568a:	shl    ecx,0x6
  42568d:	sub    eax,eax
  42568f:	inc    eax
  425690:	push   0x40
  425692:	pop    esi
  425693:	lea    edi,[edi+ecx*2+0x360]
  42569a:	mov    ebp,edi
  42569c:	call   0x4257cd
  4256a1:	mov    ecx,eax
  4256a3:	sub    ecx,esi
  4256a5:	jb     0x42569a
  4256a7:	mov    DWORD PTR [ebp-0x18],ecx
  4256aa:	mov    DWORD PTR [ebp-0x24],ecx
  4256ad:	cmp    ecx,0x4
  4256b0:	jb     0x425725
  4256b2:	mov    esi,ecx
  4256b4:	and    DWORD PTR [ebp-0x24],0x1
  4256b8:	shr    esi,1
  4256ba:	or     DWORD PTR [ebp-0x24],0x2
  4256be:	dec    esi
  4256bf:	cmp    ecx,0xe
  4256c2:	jae    0x4256dd
  4256c4:	mov    eax,0x2af
  4256c9:	sub    eax,ecx
  4256cb:	mov    ecx,esi
  4256cd:	shl    BYTE PTR [ebp-0x24],cl
  4256d0:	add    eax,DWORD PTR [ebp-0x24]
  4256d3:	shl    eax,1
  4256d5:	add    eax,DWORD PTR [ebp-0x38]
  4256d8:	mov    DWORD PTR [ebp-0x34],eax
  4256db:	jmp    0x42570a
  4256dd:	sub    esi,0x4
  4256e0:	call   0x42578a
  4256e5:	shr    ebx,1
  4256e7:	shl    DWORD PTR [ebp-0x24],1
  4256ea:	cmp    DWORD PTR [ebp-0x20],ebx
  4256ed:	jb     0x4256f5
  4256ef:	inc    DWORD PTR [ebp-0x24]
  4256f2:	sub    DWORD PTR [ebp-0x20],ebx
  4256f5:	dec    esi
  4256f6:	jne    0x4256e0
  4256f8:	mov    eax,0x644
  4256fd:	add    eax,DWORD PTR [ebp-0x38]
  425700:	mov    DWORD PTR [ebp-0x34],eax
  425703:	shl    DWORD PTR [ebp-0x24],0x4
  425707:	push   0x4
  425709:	pop    esi
  42570a:	sub    edi,edi
  42570c:	inc    edi
  42570d:	mov    eax,edi
  42570f:	mov    ebp,DWORD PTR [ebp-0x34]
  425712:	call   0x4257cd
  425717:	test   al,0x1
  425719:	je     0x42571e
  42571b:	or     DWORD PTR [ebp-0x24],edi
  42571e:	shl    edi,1
  425720:	dec    esi
  425721:	jne    0x42570f
  425723:	jmp    0x425725
  425725:	inc    DWORD PTR [ebp-0x24]
  425728:	mov    ecx,DWORD PTR [ebp-0x1c]
  42572b:	add    ecx,0x2
  42572e:	mov    edi,DWORD PTR [ebp-0x4]
  425731:	mov    eax,edi
  425733:	sub    eax,DWORD PTR [ebp+0x24]
  425736:	cmp    DWORD PTR [ebp-0x24],eax
  425739:	ja     0x425785
  42573b:	mov    esi,edi
  42573d:	sub    esi,DWORD PTR [ebp-0x24]
  425740:	mov    edx,DWORD PTR [ebp+0x28]
  425743:	lods   al,BYTE PTR ds:[esi]
  425744:	stos   BYTE PTR es:[edi],al
  425745:	cmp    edi,edx
  425747:	jae    0x42574c
  425749:	dec    ecx
  42574a:	jne    0x425743
  42574c:	mov    DWORD PTR [ebp-0x4],edi
  42574f:	movzx  esi,al
  425752:	cmp    edi,DWORD PTR [ebp+0x28]
  425755:	jb     0x4254b6
  42575b:	call   0x42578a
  425760:	sub    eax,eax
  425762:	lea    ebp,[esp+0x3c]
  425766:	mov    edx,DWORD PTR [ebp+0x20]
  425769:	mov    esi,DWORD PTR [ebp-0x8]
  42576c:	sub    esi,DWORD PTR [ebp+0x18]
  42576f:	mov    DWORD PTR [ebp-0x4d],ecx
  425772:	fidiv  DWORD PTR ds:0x31787ab3
  425778:	jp     0x42578f
  42577a:	stos   DWORD PTR es:[edi],eax
  42577b:	ins    DWORD PTR es:[edi],dx
  42577c:	lods   al,BYTE PTR ds:[esi]
  42577d:	repnz inc BYTE PTR [edx]
  425780:	nop
  425781:	cmc    
  425782:	test   esi,edi
  425784:	out    0x31,al
  425786:	mov    BYTE PTR [esi+0x748be834],al
  42578c:	test   DWORD PTR [ebp-0x76b1767b],eax
  425792:	xchg   esp,eax
  425793:	mov    WORD PTR [eiz*4+0x685ab3de],ss
  42579a:	jno    0x4257f6
  42579c:	cmc    
  42579d:	push   edx
  42579e:	sbb    BYTE PTR [ebx+0x88c089a],dh
  4257a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257a5:	aaa    
  4257a6:	stos   DWORD PTR es:[edi],eax
  4257a7:	call   0x94fe:0x685aab08
  4257ae:	mov    bl,0xba
  4257b0:	cwde   
  4257b1:	rcr    DWORD PTR [edi-0x78],0x8c
  4257b5:	or     al,0x95
  4257b7:	xchg   ecx,eax
  4257b8:	call   0xc19d:0x348c9128
  4257bf:	pop    edi
  4257c0:	mov    BYTE PTR [ecx+0x3ab3989a],dl
  4257c6:	test   al,0xbb
  4257c8:	ss call 0x9a36:0xbb883185
  4257d0:	test   DWORD PTR [ebx-0x7a7a7a8c],ecx
  4257d6:	mov    DWORD PTR [edx-0xb],edx
  4257d9:	mov    bl,0xb6
  4257db:	adc    eax,0x15168c65
  4257e0:	add    eax,0x15b671a5
  4257e5:	not    BYTE PTR [edx-0x9]
  4257e8:	scas   eax,DWORD PTR es:[edi]
  4257e9:	leave  
  4257ea:	test   BYTE PTR [esi+0x148c6515],dl
  4257f0:	or     BYTE PTR [eax-0x74dfdbac],cl
  4257f6:	retf   
  4257f7:	movzx  edx,WORD PTR [ebp+0x0]
  4257fb:	shr    ecx,0xb
  4257fe:	imul   ecx,edx
  425801:	cmp    DWORD PTR [esp+0x20],ecx
  425805:	jae    0x42581e
  425807:	mov    ebx,ecx
  425809:	mov    ecx,0x800
  42580e:	sub    ecx,edx
  425810:	shr    ecx,0x5
  425813:	add    WORD PTR [ebp+0x0],cx
  425817:	add    eax,eax
  425819:	lea    ebp,[esp+0x40]
  42581d:	ret    
  42581e:	shr    edx,0x5
  425821:	sub    DWORD PTR [esp+0x20],ecx
  425825:	sub    ebx,ecx
  425827:	sub    WORD PTR [ebp+0x0],dx
  42582b:	add    eax,eax
  42582d:	add    eax,0x1
  425830:	lea    ebp,[esp+0x40]
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ebp,esp
  425838:	sub    esp,0x12c
  42583e:	push   ebx
  42583f:	push   esi
  425840:	push   edi
  425841:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  425848:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42584f:	mov    eax,DWORD PTR [ebp+0x8]
  425852:	mov    DWORD PTR [ebp+0x8],eax
  425855:	mov    ecx,DWORD PTR [ebp-0x10]
  425858:	mov    ebx,0x75108a8
  42585d:	xor    ecx,ebx
  42585f:	mov    eax,0x3272ef
  425864:	add    ecx,eax
  425866:	mov    DWORD PTR [ebp-0x24],ecx
  425869:	mov    ecx,DWORD PTR [ebp-0x10]
  42586c:	xor    ecx,ebx
  42586e:	add    ecx,eax
  425870:	mov    DWORD PTR [ebp-0x40],ecx
  425873:	mov    ecx,DWORD PTR [ebp-0x10]
  425876:	xor    ecx,ebx
  425878:	add    ecx,eax
  42587a:	mov    DWORD PTR [ebp-0x3c],ecx
  42587d:	mov    ecx,DWORD PTR [ebp-0x10]
  425880:	xor    ecx,ebx
  425882:	add    ecx,eax
  425884:	mov    DWORD PTR [ebp-0xd8],ecx
  42588a:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  425891:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  425898:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  42589f:	push   0x25
  4258a1:	pop    ecx
  4258a2:	mov    DWORD PTR [ebp-0x30],ecx
  4258a5:	mov    DWORD PTR [ebp-0x30],ecx
  4258a8:	push   0x65
  4258aa:	pop    ecx
  4258ab:	mov    DWORD PTR [ebp-0x30],ecx
  4258ae:	mov    DWORD PTR [ebp-0x30],ecx
  4258b1:	mov    DWORD PTR [ebp-0x30],0x4d
  4258b8:	mov    DWORD PTR [ebp-0x30],0x43
  4258bf:	mov    ecx,DWORD PTR [ebp-0x10]
  4258c2:	xor    ecx,ebx
  4258c4:	add    ecx,eax
  4258c6:	mov    DWORD PTR [ebp-0x30],ecx
  4258c9:	mov    ecx,DWORD PTR [ebp-0x10]
  4258cc:	xor    ecx,ebx
  4258ce:	add    ecx,eax
  4258d0:	mov    DWORD PTR [ebp-0x30],ecx
  4258d3:	mov    DWORD PTR [ebp-0x28],0x258
  4258da:	mov    DWORD PTR [ebp-0x34],0x36
  4258e1:	mov    DWORD PTR [ebp-0x14],0x7a
  4258e8:	lea    edi,[ebp-0x10c]
  4258ee:	lea    esi,[ebp-0x12c]
  4258f4:	call   0x4265b3
  4258f9:	dec    DWORD PTR [ebp-0x14]
  4258fc:	jne    0x4258e8
  4258fe:	dec    DWORD PTR [ebp-0x34]
  425901:	jne    0x4258e1
  425903:	dec    DWORD PTR [ebp-0x28]
  425906:	jne    0x4258da
  425908:	mov    DWORD PTR [ebp-0x28],0x400e
  42590f:	mov    eax,DWORD PTR [ebp-0x10]
  425912:	xor    eax,ebx
  425914:	mov    esi,0x3272ef
  425919:	add    eax,esi
  42591b:	mov    DWORD PTR [ebp-0x1c],eax
  42591e:	mov    eax,DWORD PTR [ebp-0x10]
  425921:	and    DWORD PTR [ebp-0x94],0x0
  425928:	xor    eax,ebx
  42592a:	add    eax,esi
  42592c:	mov    DWORD PTR [ebp-0x38],eax
  42592f:	mov    eax,fs:0x18
  425935:	mov    DWORD PTR [ebp-0x94],eax
  42593b:	mov    eax,DWORD PTR [eax+0x30]
  42593e:	mov    DWORD PTR [ebp-0xcc],eax
  425944:	mov    eax,DWORD PTR [eax+0xc]
  425947:	mov    DWORD PTR [ebp-0xc0],eax
  42594d:	mov    eax,DWORD PTR [ebp+0x8]
  425950:	lea    ecx,[ebp-0x94]
  425956:	mov    DWORD PTR [eax+0x1a0],ecx
  42595c:	mov    eax,DWORD PTR [ebp+0x8]
  42595f:	lea    ecx,[ebp-0xcc]
  425965:	mov    DWORD PTR [eax+0x1a4],ecx
  42596b:	mov    eax,DWORD PTR [ebp+0x8]
  42596e:	push   DWORD PTR [ebp+0x8]
  425971:	lea    ecx,[ebp-0xc0]
  425977:	mov    DWORD PTR [eax+0x1a8],ecx
  42597d:	call   0x427d74
  425982:	mov    ecx,DWORD PTR [ebp-0x10]
  425985:	xor    ecx,ebx
  425987:	add    ecx,esi
  425989:	cmp    ecx,eax
  42598b:	je     0x425d0e
  425991:	mov    eax,DWORD PTR [ebp+0x8]
  425994:	mov    eax,DWORD PTR [eax+0x194]
  42599a:	mov    ecx,DWORD PTR [eax]
  42599c:	mov    eax,DWORD PTR [ebp+0x8]
  42599f:	mov    eax,DWORD PTR [eax+0x194]
  4259a5:	mov    eax,DWORD PTR [eax]
  4259a7:	add    eax,DWORD PTR [ecx+0x3c]
  4259aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4259ad:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4259b3:	lea    edx,[ebp-0xec]
  4259b9:	push   edx
  4259ba:	mov    edx,DWORD PTR [ebp+0x8]
  4259bd:	mov    edx,DWORD PTR [edx+0x18c]
  4259c3:	mov    edx,DWORD PTR [edx]
  4259c5:	add    edx,DWORD PTR [eax+0x88]
  4259cb:	push   0x4
  4259cd:	push   DWORD PTR [eax+0x8c]
  4259d3:	push   edx
  4259d4:	call   DWORD PTR [ecx+0x1c]
  4259d7:	push   DWORD PTR [ebp+0x8]
  4259da:	xor    eax,eax
  4259dc:	mov    DWORD PTR [ebp-0xa8],0x123f0f31
  4259e6:	mov    DWORD PTR [ebp-0xa4],0xb360819
  4259f0:	mov    DWORD PTR [ebp-0xa0],0x39081d03
  4259fa:	mov    BYTE PTR [ebp-0x9c],0x7a
  425a01:	lea    edi,[ebp-0x9b]
  425a07:	stos   DWORD PTR es:[edi],eax
  425a08:	stos   WORD PTR es:[edi],ax
  425a0a:	stos   BYTE PTR es:[edi],al
  425a0b:	xor    eax,eax
  425a0d:	mov    DWORD PTR [ebp-0xbc],0x123f0f31
  425a17:	mov    DWORD PTR [ebp-0xb8],0xb360819
  425a21:	mov    DWORD PTR [ebp-0xb4],0x23081d03
  425a2b:	mov    BYTE PTR [ebp-0xb0],0x7a
  425a32:	lea    edi,[ebp-0xaf]
  425a38:	stos   DWORD PTR es:[edi],eax
  425a39:	stos   WORD PTR es:[edi],ax
  425a3b:	stos   BYTE PTR es:[edi],al
  425a3c:	mov    edi,DWORD PTR [ebp+0x8]
  425a3f:	mov    eax,DWORD PTR [ebp+0x8]
  425a42:	mov    edx,DWORD PTR [eax+0x1b8]
  425a48:	mov    DWORD PTR [ebp-0x68],0x80e0f16
  425a4f:	mov    DWORD PTR [ebp-0x64],0x110a151f
  425a56:	mov    WORD PTR [ebp-0x60],0x7a39
  425a5c:	mov    DWORD PTR [ebp-0x90],0x123f0f31
  425a66:	mov    DWORD PTR [ebp-0x8c],0x16390819
  425a70:	mov    DWORD PTR [ebp-0x88],0x3419120a
  425a7a:	mov    DWORD PTR [ebp-0x84],0x81d150d
  425a84:	mov    DWORD PTR [ebp-0x80],0x7a391f11
  425a8b:	mov    DWORD PTR [ebp-0x7c],0x123f0f31
  425a92:	mov    DWORD PTR [ebp-0x78],0x16390819
  425a99:	mov    DWORD PTR [ebp-0x74],0x3419120a
  425aa0:	mov    DWORD PTR [ebp-0x70],0x81d150d
  425aa7:	mov    DWORD PTR [ebp-0x6c],0x7a231f11
  425aae:	call   0x427da3
  425ab3:	push   eax
  425ab4:	mov    eax,DWORD PTR [ebp+0x8]
  425ab7:	mov    eax,DWORD PTR [eax+0x1a8]
  425abd:	push   DWORD PTR [eax]
  425abf:	call   0x427a44
  425ac4:	test   eax,eax
  425ac6:	jne    0x425b18
  425ac8:	mov    eax,DWORD PTR [ebp+0x8]
  425acb:	mov    eax,DWORD PTR [eax+0x1e0]
  425ad1:	mov    edi,DWORD PTR [ebp+0x8]
  425ad4:	add    eax,0x4
  425ad7:	mov    DWORD PTR [ebp-0x20],eax
  425ada:	mov    eax,DWORD PTR [ebp+0x8]
  425add:	mov    edx,DWORD PTR [eax+0x1b8]
  425ae3:	call   0x427da3
  425ae8:	push   eax
  425ae9:	mov    eax,DWORD PTR [ebp-0x20]
  425aec:	call   DWORD PTR [eax]
  425aee:	test   eax,eax
  425af0:	jne    0x425b18
  425af2:	mov    eax,DWORD PTR [ebp+0x8]
  425af5:	mov    eax,DWORD PTR [eax+0x1e0]
  425afb:	mov    edi,DWORD PTR [ebp+0x8]
  425afe:	add    eax,0x10
  425b01:	mov    DWORD PTR [ebp-0x20],eax
  425b04:	mov    eax,DWORD PTR [ebp+0x8]
  425b07:	mov    edx,DWORD PTR [eax+0x1b8]
  425b0d:	call   0x427da3
  425b12:	push   eax
  425b13:	mov    eax,DWORD PTR [ebp-0x20]
  425b16:	call   DWORD PTR [eax]
  425b18:	mov    eax,DWORD PTR [ebp-0x10]
  425b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  425b1e:	xor    eax,ebx
  425b20:	add    eax,esi
  425b22:	cmp    eax,ecx
  425b24:	je     0x425ce7
  425b2a:	mov    eax,DWORD PTR [ebp-0x18]
  425b2d:	xor    eax,ebx
  425b2f:	mov    ecx,0xffcd8d11
  425b34:	sub    ecx,eax
  425b36:	add    ecx,DWORD PTR [ebp-0x28]
  425b39:	mov    eax,DWORD PTR [ebp-0x1c]
  425b3c:	cmp    eax,ecx
  425b3e:	ja     0x425ce7
  425b44:	mov    DWORD PTR [ebp-0x34],0x0
  425b4b:	push   DWORD PTR [ebp+0x8]
  425b4e:	mov    edi,DWORD PTR [ebp+0x8]
  425b51:	mov    eax,DWORD PTR [ebp+0x8]
  425b54:	mov    edx,DWORD PTR [eax+0x1b4]
  425b5a:	call   0x427da3
  425b5f:	push   eax
  425b60:	mov    eax,DWORD PTR [ebp+0x8]
  425b63:	mov    eax,DWORD PTR [eax+0x1a8]
  425b69:	push   DWORD PTR [eax]
  425b6b:	call   0x427a44
  425b70:	mov    ecx,DWORD PTR [ebp+0x8]
  425b73:	mov    ecx,DWORD PTR [ecx+0x19c]
  425b79:	mov    DWORD PTR [ecx],eax
  425b7b:	mov    eax,DWORD PTR [ebp+0x8]
  425b7e:	mov    edi,DWORD PTR [eax+0x1e0]
  425b84:	mov    esi,DWORD PTR [ebp+0x8]
  425b87:	xor    eax,eax
  425b89:	lea    edx,[ebp-0x7c]
  425b8c:	call   0x427dd9
  425b91:	push   eax
  425b92:	mov    eax,DWORD PTR [ebp+0x8]
  425b95:	mov    eax,DWORD PTR [eax+0x19c]
  425b9b:	push   DWORD PTR [eax]
  425b9d:	call   DWORD PTR [edi+0x8]
  425ba0:	mov    DWORD PTR [ebp-0x20],eax
  425ba3:	mov    eax,DWORD PTR [ebp+0x8]
  425ba6:	mov    edi,DWORD PTR [eax+0x1e0]
  425bac:	mov    esi,DWORD PTR [ebp+0x8]
  425baf:	xor    eax,eax
  425bb1:	lea    edx,[ebp-0x90]
  425bb7:	call   0x427dd9
  425bbc:	push   eax
  425bbd:	mov    eax,DWORD PTR [ebp+0x8]
  425bc0:	mov    eax,DWORD PTR [eax+0x19c]
  425bc6:	push   DWORD PTR [eax]
  425bc8:	call   DWORD PTR [edi+0x8]
  425bcb:	mov    eax,DWORD PTR [ebp+0x8]
  425bce:	mov    edi,DWORD PTR [eax+0x1e0]
  425bd4:	mov    esi,DWORD PTR [ebp+0x8]
  425bd7:	xor    eax,eax
  425bd9:	lea    edx,[ebp-0xa8]
  425bdf:	call   0x427dd9
  425be4:	push   eax
  425be5:	mov    eax,DWORD PTR [ebp+0x8]
  425be8:	mov    eax,DWORD PTR [eax+0x19c]
  425bee:	push   DWORD PTR [eax]
  425bf0:	call   DWORD PTR [edi+0x8]
  425bf3:	and    DWORD PTR [ebp-0x8],0x0
  425bf7:	mov    DWORD PTR [ebp-0x48],eax
  425bfa:	mov    eax,DWORD PTR [ebp-0x8]
  425bfd:	and    eax,0x7
  425c00:	add    eax,0x31
  425c03:	push   eax
  425c04:	call   DWORD PTR [ebp-0x20]
  425c07:	test   eax,eax
  425c09:	je     0x425c4d
  425c0b:	mov    eax,DWORD PTR [ebp-0x8]
  425c0e:	push   0x19
  425c10:	xor    edx,edx
  425c12:	pop    ecx
  425c13:	div    ecx
  425c15:	add    dl,0x41
  425c18:	movzx  eax,dl
  425c1b:	push   eax
  425c1c:	call   DWORD PTR [ebp-0x48]
  425c1f:	test   eax,eax
  425c21:	jne    0x425c4d
  425c23:	mov    eax,DWORD PTR [ebp+0x8]
  425c26:	mov    edi,DWORD PTR [eax+0x1e0]
  425c2c:	mov    esi,DWORD PTR [ebp+0x8]
  425c2f:	xor    eax,eax
  425c31:	lea    edx,[ebp-0x68]
  425c34:	call   0x427dd9
  425c39:	push   eax
  425c3a:	mov    eax,DWORD PTR [ebp+0x8]
  425c3d:	mov    eax,DWORD PTR [eax+0x198]
  425c43:	push   DWORD PTR [eax]
  425c45:	call   DWORD PTR [edi+0x8]
  425c48:	mov    DWORD PTR [ebp-0x14],eax
  425c4b:	jmp    0x425c51
  425c4d:	and    DWORD PTR [ebp-0x14],0x0
  425c51:	inc    DWORD PTR [ebp-0x8]
  425c54:	cmp    DWORD PTR [ebp-0x8],0x10
  425c58:	jb     0x425bfa
  425c5a:	mov    eax,DWORD PTR [ebp-0x18]
  425c5d:	mov    esi,DWORD PTR [ebp+0x8]
  425c60:	xor    eax,ebx
  425c62:	mov    edi,0x3272ef
  425c67:	add    eax,edi
  425c69:	lea    edx,[ebp-0x10c]
  425c6f:	call   0x427dd9
  425c74:	push   eax
  425c75:	mov    eax,DWORD PTR [ebp-0x10]
  425c78:	mov    esi,DWORD PTR [ebp+0x8]
  425c7b:	xor    eax,ebx
  425c7d:	add    eax,edi
  425c7f:	lea    edx,[ebp-0x12c]
  425c85:	call   0x427dd9
  425c8a:	push   eax
  425c8b:	call   DWORD PTR [ebp-0x14]
  425c8e:	mov    ecx,DWORD PTR [ebp-0x10]
  425c91:	xor    ecx,ebx
  425c93:	add    ecx,edi
  425c95:	cmp    ecx,eax
  425c97:	jne    0x425ca0
  425c99:	mov    DWORD PTR [ebp-0x34],0x1
  425ca0:	mov    eax,DWORD PTR [ebp-0x18]
  425ca3:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ca6:	xor    eax,ebx
  425ca8:	lea    eax,[eax+ecx*1+0x3272ef]
  425caf:	mov    DWORD PTR [ebp-0x1c],eax
  425cb2:	mov    eax,DWORD PTR [ebp-0x34]
  425cb5:	test   eax,eax
  425cb7:	je     0x425ccb
  425cb9:	mov    eax,DWORD PTR [ebp-0x18]
  425cbc:	mov    ecx,DWORD PTR [ebp-0x38]
  425cbf:	xor    eax,ebx
  425cc1:	lea    eax,[eax+ecx*1+0x3272ef]
  425cc8:	mov    DWORD PTR [ebp-0x38],eax
  425ccb:	mov    eax,DWORD PTR [ebp-0x18]
  425cce:	xor    eax,ebx
  425cd0:	mov    ecx,0xffcd8d11
  425cd5:	sub    ecx,eax
  425cd7:	add    ecx,DWORD PTR [ebp-0x28]
  425cda:	mov    eax,DWORD PTR [ebp-0x1c]
  425cdd:	cmp    eax,ecx
  425cdf:	jbe    0x425b44
  425ce5:	mov    esi,edi
  425ce7:	mov    eax,DWORD PTR [ebp-0x38]
  425cea:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ced:	cmp    ecx,eax
  425cef:	jne    0x425d02
  425cf1:	push   DWORD PTR [ebp+0x8]
  425cf4:	lea    eax,[ebp-0x40]
  425cf7:	push   eax
  425cf8:	call   0x428846
  425cfd:	mov    DWORD PTR [ebp-0x24],eax
  425d00:	jmp    0x425d0e
  425d02:	mov    eax,DWORD PTR [ebp-0x24]
  425d05:	mov    ecx,DWORD PTR [ebp-0x18]
  425d08:	xor    ecx,ebx
  425d0a:	add    ecx,esi
  425d0c:	xor    DWORD PTR [eax],ecx
  425d0e:	mov    eax,DWORD PTR [ebp-0x10]
  425d11:	mov    ecx,DWORD PTR [ebp-0x24]
  425d14:	xor    eax,ebx
  425d16:	add    eax,esi
  425d18:	cmp    eax,ecx
  425d1a:	je     0x426491
  425d20:	mov    eax,DWORD PTR [ebp-0x10]
  425d23:	mov    ecx,DWORD PTR [ebp-0x40]
  425d26:	xor    eax,ebx
  425d28:	add    eax,esi
  425d2a:	cmp    eax,ecx
  425d2c:	je     0x426491
  425d32:	mov    eax,DWORD PTR [ebp-0x10]
  425d35:	xor    eax,ebx
  425d37:	add    eax,esi
  425d39:	jmp    0x425d57
  425d3b:	mov    edi,DWORD PTR [ebp-0x24]
  425d3e:	mov    cl,al
  425d40:	and    cl,0x1f
  425d43:	or     dl,0xff
  425d46:	sub    dl,cl
  425d48:	add    BYTE PTR [edi+eax*1],dl
  425d4b:	mov    ecx,DWORD PTR [ebp-0x18]
  425d4e:	xor    ecx,ebx
  425d50:	lea    eax,[eax+ecx*1+0x3272ef]
  425d57:	mov    ecx,DWORD PTR [ebp-0x40]
  425d5a:	cmp    eax,ecx
  425d5c:	jb     0x425d3b
  425d5e:	mov    eax,DWORD PTR [ebp-0x40]
  425d61:	mov    DWORD PTR [ebp-0x28],eax
  425d64:	mov    eax,DWORD PTR [ebp-0x24]
  425d67:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425d6e:	mov    DWORD PTR [ebp-0xd4],eax
  425d74:	mov    edi,0xf89c85ba
  425d79:	mov    DWORD PTR [ebp-0x2c],edi
  425d7c:	mov    eax,DWORD PTR [ebp-0x38]
  425d7f:	xor    eax,ebx
  425d81:	add    eax,esi
  425d83:	mov    DWORD PTR [ebp-0xc],eax
  425d86:	mov    eax,DWORD PTR [ebp-0x38]
  425d89:	xor    eax,ebx
  425d8b:	add    eax,esi
  425d8d:	mov    DWORD PTR [ebp-0x8],eax
  425d90:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  425d97:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425d9e:	mov    eax,DWORD PTR [ebp-0x38]
  425da1:	mov    ecx,DWORD PTR [ebp-0x28]
  425da4:	xor    eax,ebx
  425da6:	add    eax,esi
  425da8:	cmp    ecx,eax
  425daa:	je     0x425fa9
  425db0:	jmp    0x425f85
  425db5:	mov    ecx,DWORD PTR [ebp-0xc]
  425db8:	mov    eax,DWORD PTR [ebp-0x28]
  425dbb:	sub    eax,ecx
  425dbd:	mov    ecx,DWORD PTR [ebp-0x48]
  425dc0:	xor    ecx,ebx
  425dc2:	add    ecx,esi
  425dc4:	xor    edx,edx
  425dc6:	div    ecx
  425dc8:	mov    DWORD PTR [ebp-0x8],eax
  425dcb:	mov    eax,DWORD PTR [ebp-0x4c]
  425dce:	mov    ecx,DWORD PTR [ebp-0x8]
  425dd1:	xor    eax,ebx
  425dd3:	add    eax,esi
  425dd5:	cmp    ecx,eax
  425dd7:	jbe    0x425de3
  425dd9:	mov    eax,DWORD PTR [ebp-0x4c]
  425ddc:	xor    eax,ebx
  425dde:	add    eax,esi
  425de0:	mov    DWORD PTR [ebp-0x8],eax
  425de3:	mov    eax,DWORD PTR [ebp-0x48]
  425de6:	mov    ecx,DWORD PTR [ebp-0x8]
  425de9:	xor    eax,ebx
  425deb:	add    eax,esi
  425ded:	imul   eax,ecx
  425df0:	mov    DWORD PTR [ebp-0x8],eax
  425df3:	mov    eax,DWORD PTR [ebp-0x38]
  425df6:	mov    ecx,DWORD PTR [ebp-0x8]
  425df9:	xor    eax,ebx
  425dfb:	add    eax,esi
  425dfd:	cmp    ecx,eax
  425dff:	je     0x425f73
  425e05:	mov    eax,DWORD PTR [ebp-0x8]
  425e08:	mov    DWORD PTR [ebp-0x14],eax
  425e0b:	mov    eax,DWORD PTR [ebp-0xc]
  425e0e:	add    eax,DWORD PTR [ebp-0xd4]
  425e14:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425e1b:	mov    DWORD PTR [ebp-0x34],edi
  425e1e:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  425e28:	mov    DWORD PTR [ebp-0x8],eax
  425e2b:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  425e32:	mov    DWORD PTR [ebp-0x1c],edi
  425e35:	mov    eax,DWORD PTR [ebp-0x20]
  425e38:	xor    eax,ebx
  425e3a:	add    eax,esi
  425e3c:	jmp    0x425f32
  425e41:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425e4b:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425e55:	mov    eax,DWORD PTR [ebp-0x1c]
  425e58:	mov    ecx,DWORD PTR [ebp-0x44]
  425e5b:	xor    eax,ebx
  425e5d:	add    eax,esi
  425e5f:	imul   eax,ecx
  425e62:	mov    ecx,DWORD PTR [ebp-0x8]
  425e65:	mov    al,BYTE PTR [eax+ecx*1]
  425e68:	mov    BYTE PTR [ebp-0x2],al
  425e6b:	mov    eax,DWORD PTR [ebp-0x1c]
  425e6e:	mov    ecx,DWORD PTR [ebp-0x44]
  425e71:	xor    eax,ebx
  425e73:	add    eax,esi
  425e75:	imul   eax,ecx
  425e78:	mov    ecx,DWORD PTR [ebp-0xe8]
  425e7e:	xor    ecx,ebx
  425e80:	add    eax,ecx
  425e82:	mov    ecx,DWORD PTR [ebp-0x8]
  425e85:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425e8d:	mov    ecx,DWORD PTR [ebp-0xe0]
  425e93:	xor    ecx,ebx
  425e95:	lea    eax,[ecx+eax*1+0x3272ef]
  425e9c:	movzx  ecx,BYTE PTR [ebp-0x2]
  425ea0:	xor    ecx,eax
  425ea2:	mov    BYTE PTR [ebp-0x2],cl
  425ea5:	mov    al,BYTE PTR [ebp-0x2]
  425ea8:	mov    ecx,DWORD PTR [ebp-0x1c]
  425eab:	mov    edx,DWORD PTR [ebp-0x44]
  425eae:	xor    ecx,ebx
  425eb0:	add    ecx,esi
  425eb2:	imul   ecx,edx
  425eb5:	mov    edx,DWORD PTR [ebp-0x8]
  425eb8:	mov    BYTE PTR [ecx+edx*1],al
  425ebb:	mov    eax,DWORD PTR [ebp-0x1c]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x44]
  425ec1:	xor    eax,ebx
  425ec3:	add    eax,esi
  425ec5:	imul   eax,ecx
  425ec8:	mov    ecx,DWORD PTR [ebp-0x8]
  425ecb:	mov    al,BYTE PTR [eax+ecx*1]
  425ece:	mov    BYTE PTR [ebp-0x2],al
  425ed1:	mov    eax,DWORD PTR [ebp-0x1c]
  425ed4:	mov    ecx,DWORD PTR [ebp-0x44]
  425ed7:	xor    eax,ebx
  425ed9:	add    eax,esi
  425edb:	imul   eax,ecx
  425ede:	mov    ecx,DWORD PTR [ebp-0x34]
  425ee1:	xor    ecx,ebx
  425ee3:	add    eax,ecx
  425ee5:	mov    ecx,DWORD PTR [ebp-0x8]
  425ee8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425ef0:	mov    ecx,DWORD PTR [ebp-0xc4]
  425ef6:	xor    ecx,ebx
  425ef8:	lea    eax,[ecx+eax*1+0x3272ef]
  425eff:	movzx  ecx,BYTE PTR [ebp-0x2]
  425f03:	xor    ecx,eax
  425f05:	mov    BYTE PTR [ebp-0x2],cl
  425f08:	mov    al,BYTE PTR [ebp-0x2]
  425f0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  425f0e:	mov    edx,DWORD PTR [ebp-0x44]
  425f11:	xor    ecx,ebx
  425f13:	add    ecx,esi
  425f15:	imul   ecx,edx
  425f18:	mov    edx,DWORD PTR [ebp-0x8]
  425f1b:	mov    BYTE PTR [ecx+edx*1],al
  425f1e:	mov    eax,DWORD PTR [ebp-0x30]
  425f21:	mov    ecx,DWORD PTR [ebp-0x34]
  425f24:	xor    eax,ebx
  425f26:	xor    ecx,ebx
  425f28:	add    eax,esi
  425f2a:	add    ecx,esi
  425f2c:	imul   eax,ecx
  425f2f:	add    eax,DWORD PTR [ebp-0x44]
  425f32:	mov    DWORD PTR [ebp-0x44],eax
  425f35:	mov    eax,DWORD PTR [ebp-0x44]
  425f38:	mov    ecx,DWORD PTR [ebp-0x14]
  425f3b:	cmp    ecx,eax
  425f3d:	jb     0x425e41
  425f43:	mov    eax,DWORD PTR [ebp-0x34]
  425f46:	mov    ecx,DWORD PTR [ebp-0x14]
  425f49:	xor    eax,ebx
  425f4b:	add    eax,esi
  425f4d:	imul   eax,ecx
  425f50:	mov    ecx,DWORD PTR [ebp-0x20]
  425f53:	xor    ecx,ebx
  425f55:	add    ecx,esi
  425f57:	or     eax,ecx
  425f59:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f5c:	xor    ecx,ebx
  425f5e:	add    eax,ecx
  425f60:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f63:	xor    ecx,ebx
  425f65:	add    eax,ecx
  425f67:	mov    ecx,DWORD PTR [ebp-0xc]
  425f6a:	lea    eax,[eax+ecx*1+0x64e5de]
  425f71:	jmp    0x425f82
  425f73:	mov    eax,DWORD PTR [ebp-0x2c]
  425f76:	mov    ecx,DWORD PTR [ebp-0xc]
  425f79:	xor    eax,ebx
  425f7b:	lea    eax,[eax+ecx*1+0x3272ef]
  425f82:	mov    DWORD PTR [ebp-0xc],eax
  425f85:	mov    eax,DWORD PTR [ebp-0x2c]
  425f88:	xor    eax,ebx
  425f8a:	mov    ecx,0xffcd8d11
  425f8f:	sub    ecx,eax
  425f91:	add    ecx,DWORD PTR [ebp-0x28]
  425f94:	mov    eax,DWORD PTR [ebp-0x2c]
  425f97:	mov    edx,DWORD PTR [ebp-0xc]
  425f9a:	xor    eax,ebx
  425f9c:	add    eax,esi
  425f9e:	imul   eax,edx
  425fa1:	cmp    eax,ecx
  425fa3:	jbe    0x425db5
  425fa9:	mov    eax,DWORD PTR [ebp-0x10]
  425fac:	mov    ecx,DWORD PTR [ebp-0x40]
  425faf:	mov    eax,DWORD PTR [ebp+0x8]
  425fb2:	mov    edx,DWORD PTR [ebp-0x54]
  425fb5:	mov    eax,DWORD PTR [eax+0x1e0]
  425fbb:	xor    edx,ebx
  425fbd:	add    edx,esi
  425fbf:	push   edx
  425fc0:	mov    edx,DWORD PTR [ebp-0x3c]
  425fc3:	xor    edx,ebx
  425fc5:	add    edx,esi
  425fc7:	push   edx
  425fc8:	push   ecx
  425fc9:	mov    DWORD PTR [ebp-0x30],ecx
  425fcc:	mov    ecx,DWORD PTR [ebp-0x10]
  425fcf:	xor    ecx,ebx
  425fd1:	add    ecx,esi
  425fd3:	push   ecx
  425fd4:	call   DWORD PTR [eax+0x14]
  425fd7:	mov    edi,eax
  425fd9:	mov    eax,DWORD PTR [ebp-0x10]
  425fdc:	xor    eax,ebx
  425fde:	add    eax,esi
  425fe0:	cmp    eax,edi
  425fe2:	je     0x42603d
  425fe4:	mov    eax,DWORD PTR [ebp-0x10]
  425fe7:	jmp    0x42600a
  425fe9:	mov    ecx,DWORD PTR [ebp-0x24]
  425fec:	xor    eax,ebx
  425fee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ef]
  425ff5:	mov    BYTE PTR [eax+edi*1+0x3272ef],cl
  425ffc:	mov    ecx,DWORD PTR [ebp-0x18]
  425fff:	xor    ecx,ebx
  426001:	lea    eax,[ecx+eax*1+0x3272ef]
  426008:	xor    eax,ebx
  42600a:	mov    ecx,DWORD PTR [ebp-0x40]
  42600d:	sub    ecx,esi
  42600f:	xor    ecx,ebx
  426011:	cmp    eax,ecx
  426013:	jne    0x425fe9
  426015:	mov    eax,DWORD PTR [ebp+0x8]
  426018:	mov    ecx,DWORD PTR [ebp-0x50]
  42601b:	mov    eax,DWORD PTR [eax+0x1e0]
  426021:	xor    ecx,ebx
  426023:	add    ecx,esi
  426025:	push   ecx
  426026:	mov    ecx,DWORD PTR [ebp-0x10]
  426029:	xor    ecx,ebx
  42602b:	add    ecx,esi
  42602d:	push   ecx
  42602e:	push   DWORD PTR [ebp-0x24]
  426031:	call   DWORD PTR [eax+0x18]
  426034:	mov    eax,DWORD PTR [ebp-0x30]
  426037:	mov    DWORD PTR [ebp-0x24],edi
  42603a:	mov    DWORD PTR [ebp-0x40],eax
  42603d:	mov    edi,DWORD PTR [ebp-0x24]
  426040:	mov    eax,DWORD PTR [ebp-0x18]
  426043:	mov    ecx,DWORD PTR [ebp-0x10]
  426046:	xor    eax,ebx
  426048:	mov    DWORD PTR [ebp-0x30],edi
  42604b:	add    eax,esi
  42604d:	mov    DWORD PTR [ebp-0x5c],0x39222a22
  426054:	mov    DWORD PTR [ebp-0x58],0x37223f22
  42605b:	jmp    0x42608e
  42605d:	xor    ecx,ebx
  42605f:	mov    dl,BYTE PTR [ebp+ecx*1+0x327293]
  426066:	xor    dl,0x7b
  426069:	dec    dl
  42606b:	mov    DWORD PTR [ebp-0x3c],ecx
  42606e:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272ef]
  426076:	movzx  edx,dl
  426079:	cmp    ecx,edx
  42607b:	jne    0x426098
  42607d:	mov    ecx,DWORD PTR [ebp-0x18]
  426080:	mov    edx,DWORD PTR [ebp-0x3c]
  426083:	xor    ecx,ebx
  426085:	lea    ecx,[ecx+edx*1+0x3272ef]
  42608c:	xor    ecx,ebx
  42608e:	cmp    ecx,0xf89c85b1
  426094:	jne    0x42605d
  426096:	jmp    0x42609f
  426098:	mov    eax,DWORD PTR [ebp-0x10]
  42609b:	xor    eax,ebx
  42609d:	add    eax,esi
  42609f:	mov    ecx,DWORD PTR [ebp-0x10]
  4260a2:	xor    ecx,ebx
  4260a4:	add    ecx,esi
  4260a6:	cmp    ecx,eax
  4260a8:	je     0x42621b
  4260ae:	mov    eax,DWORD PTR [edi+0x8]
  4260b1:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4260b8:	mov    DWORD PTR [ebp-0x3c],0xf89cc328
  4260bf:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  4260c6:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4260cd:	mov    DWORD PTR [ebp-0x14],eax
  4260d0:	mov    eax,DWORD PTR [ebp+0x8]
  4260d3:	mov    ecx,DWORD PTR [ebp-0x20]
  4260d6:	xor    ecx,ebx
  4260d8:	add    ecx,esi
  4260da:	push   ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x48]
  4260de:	mov    eax,DWORD PTR [eax+0x1e0]
  4260e4:	xor    ecx,ebx
  4260e6:	add    ecx,esi
  4260e8:	push   ecx
  4260e9:	mov    ecx,DWORD PTR [ebp-0x3c]
  4260ec:	xor    ecx,ebx
  4260ee:	add    ecx,esi
  4260f0:	push   ecx
  4260f1:	mov    ecx,DWORD PTR [ebp-0xc]
  4260f4:	xor    ecx,ebx
  4260f6:	add    ecx,esi
  4260f8:	push   ecx
  4260f9:	call   DWORD PTR [eax+0x14]
  4260fc:	mov    edi,eax
  4260fe:	mov    eax,DWORD PTR [ebp+0x8]
  426101:	mov    ecx,DWORD PTR [ebp-0x20]
  426104:	mov    eax,DWORD PTR [eax+0x1e0]
  42610a:	xor    ecx,ebx
  42610c:	add    ecx,esi
  42610e:	push   ecx
  42610f:	mov    ecx,DWORD PTR [ebp-0x48]
  426112:	xor    ecx,ebx
  426114:	add    ecx,esi
  426116:	push   ecx
  426117:	mov    ecx,DWORD PTR [ebp-0xc]
  42611a:	push   DWORD PTR [ebp-0x14]
  42611d:	xor    ecx,ebx
  42611f:	add    ecx,esi
  426121:	push   ecx
  426122:	call   DWORD PTR [eax+0x14]
  426125:	mov    ecx,DWORD PTR [ebp-0xc]
  426128:	xor    ecx,ebx
  42612a:	add    ecx,esi
  42612c:	mov    DWORD PTR [ebp-0x20],eax
  42612f:	cmp    ecx,edi
  426131:	je     0x4264be
  426137:	mov    ecx,DWORD PTR [ebp-0xc]
  42613a:	xor    ecx,ebx
  42613c:	add    ecx,esi
  42613e:	cmp    ecx,eax
  426140:	je     0x4264be
  426146:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  42614d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426154:	mov    ecx,DWORD PTR [ebp-0x3c]
  426157:	xor    cl,0xa8
  42615a:	sub    cl,0x11
  42615d:	mov    BYTE PTR [edi],cl
  42615f:	mov    ecx,DWORD PTR [ebp-0xc]
  426162:	xor    cl,0xa8
  426165:	sub    cl,0x11
  426168:	mov    BYTE PTR [edi+0x1],cl
  42616b:	mov    ecx,DWORD PTR [ebp-0x54]
  42616e:	xor    cl,0xa8
  426171:	sub    cl,0x11
  426174:	mov    BYTE PTR [edi+0x2],cl
  426177:	and    DWORD PTR [ebp-0xc8],0x0
  42617e:	and    DWORD PTR [ebp-0xdc],0x0
  426185:	lea    ecx,[ebp-0xdc]
  42618b:	push   ecx
  42618c:	push   DWORD PTR [ebp-0x14]
  42618f:	push   eax
  426190:	lea    eax,[ebp-0xc8]
  426196:	push   eax
  426197:	mov    eax,DWORD PTR [ebp-0x30]
  42619a:	push   DWORD PTR [eax+0xc]
  42619d:	mov    eax,DWORD PTR [ebp-0x24]
  4261a0:	add    eax,0x10
  4261a3:	push   eax
  4261a4:	push   edi
  4261a5:	call   0x42544c
  4261aa:	mov    DWORD PTR [ebp-0x3c],eax
  4261ad:	mov    eax,DWORD PTR [ebp+0x8]
  4261b0:	mov    ecx,DWORD PTR [ebp-0x50]
  4261b3:	mov    eax,DWORD PTR [eax+0x1e0]
  4261b9:	xor    ecx,ebx
  4261bb:	add    ecx,esi
  4261bd:	push   ecx
  4261be:	mov    ecx,DWORD PTR [ebp-0xc]
  4261c1:	xor    ecx,ebx
  4261c3:	add    ecx,esi
  4261c5:	push   ecx
  4261c6:	push   edi
  4261c7:	call   DWORD PTR [eax+0x18]
  4261ca:	mov    eax,DWORD PTR [ebp-0x3c]
  4261cd:	add    eax,0xffcd8d11
  4261d2:	xor    eax,ebx
  4261d4:	cmp    eax,0xf89c85b9
  4261d9:	mov    eax,DWORD PTR [ebp+0x8]
  4261dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4261e2:	mov    ecx,DWORD PTR [ebp-0x50]
  4261e5:	jne    0x426208
  4261e7:	xor    ecx,ebx
  4261e9:	add    ecx,esi
  4261eb:	push   ecx
  4261ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4261ef:	xor    ecx,ebx
  4261f1:	add    ecx,esi
  4261f3:	push   ecx
  4261f4:	push   DWORD PTR [ebp-0x24]
  4261f7:	call   DWORD PTR [eax+0x18]
  4261fa:	mov    eax,DWORD PTR [ebp-0x20]
  4261fd:	mov    DWORD PTR [ebp-0x24],eax
  426200:	mov    eax,DWORD PTR [ebp-0x14]
  426203:	mov    DWORD PTR [ebp-0x40],eax
  426206:	jmp    0x42621b
  426208:	xor    ecx,ebx
  42620a:	add    ecx,esi
  42620c:	push   ecx
  42620d:	mov    ecx,DWORD PTR [ebp-0xc]
  426210:	xor    ecx,ebx
  426212:	add    ecx,esi
  426214:	push   ecx
  426215:	push   DWORD PTR [ebp-0x20]
  426218:	call   DWORD PTR [eax+0x18]
  42621b:	mov    eax,DWORD PTR [ebp-0x40]
  42621e:	mov    DWORD PTR [ebp-0x38],eax
  426221:	mov    eax,DWORD PTR [ebp-0x24]
  426224:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  42622b:	mov    DWORD PTR [ebp-0x3c],eax
  42622e:	mov    edi,0xf89c85ba
  426233:	mov    DWORD PTR [ebp-0x2c],edi
  426236:	mov    eax,DWORD PTR [ebp-0x28]
  426239:	xor    eax,ebx
  42623b:	add    eax,esi
  42623d:	mov    DWORD PTR [ebp-0xc],eax
  426240:	mov    eax,DWORD PTR [ebp-0x28]
  426243:	xor    eax,ebx
  426245:	add    eax,esi
  426247:	mov    DWORD PTR [ebp-0x14],eax
  42624a:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  426251:	mov    DWORD PTR [ebp-0x20],0xf89c85b0
  426258:	mov    eax,DWORD PTR [ebp-0x28]
  42625b:	mov    ecx,DWORD PTR [ebp-0x38]
  42625e:	xor    eax,ebx
  426260:	add    eax,esi
  426262:	cmp    ecx,eax
  426264:	je     0x42645a
  42626a:	jmp    0x426436
  42626f:	mov    ecx,DWORD PTR [ebp-0xc]
  426272:	mov    eax,DWORD PTR [ebp-0x38]
  426275:	sub    eax,ecx
  426277:	mov    ecx,DWORD PTR [ebp-0x48]
  42627a:	xor    ecx,ebx
  42627c:	add    ecx,esi
  42627e:	xor    edx,edx
  426280:	div    ecx
  426282:	mov    DWORD PTR [ebp-0x14],eax
  426285:	mov    eax,DWORD PTR [ebp-0x20]
  426288:	mov    ecx,DWORD PTR [ebp-0x14]
  42628b:	xor    eax,ebx
  42628d:	add    eax,esi
  42628f:	cmp    ecx,eax
  426291:	jbe    0x42629d
  426293:	mov    eax,DWORD PTR [ebp-0x20]
  426296:	xor    eax,ebx
  426298:	add    eax,esi
  42629a:	mov    DWORD PTR [ebp-0x14],eax
  42629d:	mov    eax,DWORD PTR [ebp-0x48]
  4262a0:	mov    ecx,DWORD PTR [ebp-0x14]
  4262a3:	xor    eax,ebx
  4262a5:	add    eax,esi
  4262a7:	imul   eax,ecx
  4262aa:	mov    DWORD PTR [ebp-0x14],eax
  4262ad:	mov    eax,DWORD PTR [ebp-0x28]
  4262b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4262b3:	xor    eax,ebx
  4262b5:	add    eax,esi
  4262b7:	cmp    ecx,eax
  4262b9:	je     0x426424
  4262bf:	mov    eax,DWORD PTR [ebp-0x14]
  4262c2:	mov    DWORD PTR [ebp-0x34],eax
  4262c5:	mov    eax,DWORD PTR [ebp-0xc]
  4262c8:	add    eax,DWORD PTR [ebp-0x3c]
  4262cb:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  4262d2:	mov    DWORD PTR [ebp-0x14],edi
  4262d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4262dc:	mov    DWORD PTR [ebp-0x1c],eax
  4262df:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4262e6:	mov    DWORD PTR [ebp-0x8],edi
  4262e9:	mov    eax,DWORD PTR [ebp-0x4c]
  4262ec:	xor    eax,ebx
  4262ee:	add    eax,esi
  4262f0:	jmp    0x4263e3
  4262f5:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  4262ff:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426309:	mov    eax,DWORD PTR [ebp-0x8]
  42630c:	mov    ecx,DWORD PTR [ebp-0x18]
  42630f:	xor    eax,ebx
  426311:	add    eax,esi
  426313:	imul   eax,ecx
  426316:	mov    ecx,DWORD PTR [ebp-0x1c]
  426319:	mov    al,BYTE PTR [eax+ecx*1]
  42631c:	mov    BYTE PTR [ebp-0x1],al
  42631f:	mov    eax,DWORD PTR [ebp-0x8]
  426322:	mov    ecx,DWORD PTR [ebp-0x18]
  426325:	xor    eax,ebx
  426327:	add    eax,esi
  426329:	imul   eax,ecx
  42632c:	mov    ecx,DWORD PTR [ebp-0x54]
  42632f:	xor    ecx,ebx
  426331:	add    eax,ecx
  426333:	mov    ecx,DWORD PTR [ebp-0x1c]
  426336:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  42633e:	mov    ecx,DWORD PTR [ebp-0xe4]
  426344:	xor    ecx,ebx
  426346:	lea    eax,[ecx+eax*1+0x3272ef]
  42634d:	movzx  ecx,BYTE PTR [ebp-0x1]
  426351:	xor    ecx,eax
  426353:	mov    BYTE PTR [ebp-0x1],cl
  426356:	mov    al,BYTE PTR [ebp-0x1]
  426359:	mov    ecx,DWORD PTR [ebp-0x8]
  42635c:	mov    edx,DWORD PTR [ebp-0x18]
  42635f:	xor    ecx,ebx
  426361:	add    ecx,esi
  426363:	imul   ecx,edx
  426366:	mov    edx,DWORD PTR [ebp-0x1c]
  426369:	mov    BYTE PTR [ecx+edx*1],al
  42636c:	mov    eax,DWORD PTR [ebp-0x8]
  42636f:	mov    ecx,DWORD PTR [ebp-0x18]
  426372:	xor    eax,ebx
  426374:	add    eax,esi
  426376:	imul   eax,ecx
  426379:	mov    ecx,DWORD PTR [ebp-0x1c]
  42637c:	mov    al,BYTE PTR [eax+ecx*1]
  42637f:	mov    BYTE PTR [ebp-0x1],al
  426382:	mov    eax,DWORD PTR [ebp-0x8]
  426385:	mov    ecx,DWORD PTR [ebp-0x18]
  426388:	xor    eax,ebx
  42638a:	add    eax,esi
  42638c:	imul   eax,ecx
  42638f:	mov    ecx,DWORD PTR [ebp-0x14]
  426392:	xor    ecx,ebx
  426394:	add    eax,ecx
  426396:	mov    ecx,DWORD PTR [ebp-0x1c]
  426399:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  4263a1:	mov    ecx,DWORD PTR [ebp-0xd0]
  4263a7:	xor    ecx,ebx
  4263a9:	lea    eax,[ecx+eax*1+0x3272ef]
  4263b0:	movzx  ecx,BYTE PTR [ebp-0x1]
  4263b4:	xor    ecx,eax
  4263b6:	mov    BYTE PTR [ebp-0x1],cl
  4263b9:	mov    al,BYTE PTR [ebp-0x1]
  4263bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4263bf:	mov    edx,DWORD PTR [ebp-0x18]
  4263c2:	xor    ecx,ebx
  4263c4:	add    ecx,esi
  4263c6:	imul   ecx,edx
  4263c9:	mov    edx,DWORD PTR [ebp-0x1c]
  4263cc:	mov    BYTE PTR [ecx+edx*1],al
  4263cf:	mov    eax,DWORD PTR [ebp-0x30]
  4263d2:	mov    ecx,DWORD PTR [ebp-0x14]
  4263d5:	xor    eax,ebx
  4263d7:	xor    ecx,ebx
  4263d9:	add    eax,esi
  4263db:	add    ecx,esi
  4263dd:	imul   eax,ecx
  4263e0:	add    eax,DWORD PTR [ebp-0x18]
  4263e3:	mov    DWORD PTR [ebp-0x18],eax
  4263e6:	mov    eax,DWORD PTR [ebp-0x18]
  4263e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4263ec:	cmp    ecx,eax
  4263ee:	jb     0x4262f5
  4263f4:	mov    eax,DWORD PTR [ebp-0x14]
  4263f7:	mov    ecx,DWORD PTR [ebp-0x34]
  4263fa:	xor    eax,ebx
  4263fc:	add    eax,esi
  4263fe:	imul   eax,ecx
  426401:	mov    ecx,DWORD PTR [ebp-0x4c]
  426404:	xor    ecx,ebx
  426406:	add    ecx,esi
  426408:	or     eax,ecx
  42640a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42640d:	xor    ecx,ebx
  42640f:	add    eax,ecx
  426411:	mov    ecx,DWORD PTR [ebp-0x2c]
  426414:	xor    ecx,ebx
  426416:	add    eax,ecx
  426418:	mov    ecx,DWORD PTR [ebp-0xc]
  42641b:	lea    eax,[eax+ecx*1+0x64e5de]
  426422:	jmp    0x426433
  426424:	mov    eax,DWORD PTR [ebp-0x2c]
  426427:	mov    ecx,DWORD PTR [ebp-0xc]
  42642a:	xor    eax,ebx
  42642c:	lea    eax,[eax+ecx*1+0x3272ef]
  426433:	mov    DWORD PTR [ebp-0xc],eax
  426436:	mov    eax,DWORD PTR [ebp-0x2c]
  426439:	xor    eax,ebx
  42643b:	mov    ecx,0xffcd8d11
  426440:	sub    ecx,eax
  426442:	add    ecx,DWORD PTR [ebp-0x38]
  426445:	mov    eax,DWORD PTR [ebp-0x2c]
  426448:	mov    edx,DWORD PTR [ebp-0xc]
  42644b:	xor    eax,ebx
  42644d:	add    eax,esi
  42644f:	imul   eax,edx
  426452:	cmp    eax,ecx
  426454:	jbe    0x42626f
  42645a:	push   DWORD PTR [ebp+0x8]
  42645d:	mov    eax,DWORD PTR [ebp+0x8]
  426460:	push   DWORD PTR [eax+0x1cc]
  426466:	lea    eax,[ebp-0xd8]
  42646c:	push   eax
  42646d:	mov    eax,DWORD PTR [ebp+0x8]
  426470:	mov    eax,DWORD PTR [eax+0x1c4]
  426476:	push   DWORD PTR [eax]
  426478:	mov    eax,DWORD PTR [ebp+0x8]
  42647b:	mov    eax,DWORD PTR [eax+0x1c0]
  426481:	push   DWORD PTR [eax]
  426483:	push   DWORD PTR [ebp-0x40]
  426486:	push   DWORD PTR [ebp-0x24]
  426489:	call   0x426f20
  42648e:	mov    DWORD PTR [ebp-0x3c],eax
  426491:	mov    eax,DWORD PTR [ebp-0x10]
  426494:	mov    ecx,DWORD PTR [ebp-0x24]
  426497:	xor    eax,ebx
  426499:	add    eax,esi
  42649b:	cmp    eax,ecx
  42649d:	je     0x4264be
  42649f:	mov    eax,DWORD PTR [ebp+0x8]
  4264a2:	mov    ecx,DWORD PTR [ebp-0x50]
  4264a5:	mov    eax,DWORD PTR [eax+0x1e0]
  4264ab:	xor    ecx,ebx
  4264ad:	add    ecx,esi
  4264af:	push   ecx
  4264b0:	mov    ecx,DWORD PTR [ebp-0x10]
  4264b3:	xor    ecx,ebx
  4264b5:	add    ecx,esi
  4264b7:	push   ecx
  4264b8:	push   DWORD PTR [ebp-0x24]
  4264bb:	call   DWORD PTR [eax+0x18]
  4264be:	pop    edi
  4264bf:	pop    esi
  4264c0:	pop    ebx
  4264c1:	leave  
  4264c2:	ret    0x4
  4264c5:	push   ebp
  4264c6:	mov    ebp,esp
  4264c8:	push   ecx
  4264c9:	push   ecx
  4264ca:	lea    eax,[ebp-0x8]
  4264cd:	mov    DWORD PTR [ebp-0x4],eax
  4264d0:	push   esi
  4264d1:	mov    esi,DWORD PTR [ebp-0x4]
  4264d4:	mov    eax,0xf881ba2f
  4264d9:	mov    DWORD PTR [esi],eax
  4264db:	mov    esi,DWORD PTR [ebp-0x8]
  4264de:	cmp    esi,eax
  4264e0:	pop    esi
  4264e1:	jne    0x4264eb
  4264e3:	mov    BYTE PTR [ecx+0xa],0x7a
  4264e7:	mov    BYTE PTR [edx+0x8],0x2f
  4264eb:	mov    BYTE PTR [edx+0xa],0x7a
  4264ef:	mov    BYTE PTR [ecx+0x2],0x14
  4264f3:	leave  
  4264f4:	ret    
  4264f5:	push   ebp
  4264f6:	mov    ebp,esp
  4264f8:	push   ecx
  4264f9:	push   ecx
  4264fa:	lea    eax,[ebp-0x8]
  4264fd:	mov    DWORD PTR [ebp-0x4],eax
  426500:	mov    edx,DWORD PTR [ebp-0x4]
  426503:	mov    eax,0xf88b0bc3
  426508:	mov    DWORD PTR [edx],eax
  42650a:	mov    edx,DWORD PTR [ebp-0x8]
  42650d:	cmp    edx,eax
  42650f:	jne    0x426520
  426511:	mov    eax,DWORD PTR [ebp+0x8]
  426514:	mov    BYTE PTR [ecx+0x9],0xe
  426518:	mov    BYTE PTR [eax+0x7],0x57
  42651c:	mov    BYTE PTR [ecx+0x6],0xf
  426520:	mov    BYTE PTR [ecx+0x3],0x1e
  426524:	leave  
  426525:	ret    0x4
  426528:	push   ebp
  426529:	mov    ebp,esp
  42652b:	push   ecx
  42652c:	push   ecx
  42652d:	lea    eax,[ebp-0x8]
  426530:	mov    DWORD PTR [ebp-0x4],eax
  426533:	mov    edx,DWORD PTR [ebp-0x4]
  426536:	mov    eax,0x7e0da2f
  42653b:	mov    DWORD PTR [edx],eax
  42653d:	mov    edx,DWORD PTR [ebp-0x8]
  426540:	cmp    edx,eax
  426542:	jne    0x426548
  426544:	mov    BYTE PTR [ecx+0x7],0x57
  426548:	mov    eax,DWORD PTR [ebp+0x8]
  42654b:	mov    BYTE PTR [ecx+0x1],0x11
  42654f:	mov    BYTE PTR [eax+0x9],0x2e
  426553:	leave  
  426554:	ret    0x4
  426557:	push   ebp
  426558:	mov    ebp,esp
  42655a:	push   ecx
  42655b:	push   ecx
  42655c:	lea    eax,[ebp-0x8]
  42655f:	mov    DWORD PTR [ebp-0x4],eax
  426562:	push   esi
  426563:	mov    esi,DWORD PTR [ebp-0x4]
  426566:	mov    eax,0x7060e30
  42656b:	mov    DWORD PTR [esi],eax
  42656d:	mov    esi,DWORD PTR [ebp-0x8]
  426570:	cmp    esi,eax
  426572:	pop    esi
  426573:	jne    0x42657f
  426575:	mov    BYTE PTR [edx+0x4],0xb
  426579:	mov    WORD PTR [ecx+0x3],0xb1e
  42657f:	mov    BYTE PTR [edx],0x3f
  426582:	leave  
  426583:	ret    
  426584:	push   ebp
  426585:	mov    ebp,esp
  426587:	push   ecx
  426588:	push   ecx
  426589:	lea    eax,[ebp-0x8]
  42658c:	mov    DWORD PTR [ebp-0x4],eax
  42658f:	mov    edx,DWORD PTR [ebp-0x4]
  426592:	mov    eax,0xf8870b3f
  426597:	mov    DWORD PTR [edx],eax
  426599:	mov    edx,DWORD PTR [ebp-0x8]
  42659c:	cmp    edx,eax
  42659e:	jne    0x4265ab
  4265a0:	mov    eax,DWORD PTR [ebp+0x8]
  4265a3:	mov    BYTE PTR [ecx+0x8],0xf
  4265a7:	mov    BYTE PTR [eax+0x1],0x11
  4265ab:	mov    BYTE PTR [ecx+0x5],0x3
  4265af:	leave  
  4265b0:	ret    0x4
  4265b3:	push   esi
  4265b4:	mov    ecx,edi
  4265b6:	call   0x426584
  4265bb:	mov    edx,edi
  4265bd:	mov    ecx,esi
  4265bf:	mov    BYTE PTR [esi],0x1f
  4265c2:	call   0x426557
  4265c7:	push   esi
  4265c8:	mov    ecx,edi
  4265ca:	mov    BYTE PTR [esi+0x5],0x3
  4265ce:	call   0x426528
  4265d3:	push   esi
  4265d4:	mov    BYTE PTR [esi+0x6],0xf
  4265d8:	call   0x4264f5
  4265dd:	mov    BYTE PTR [esi+0x2],0x14
  4265e1:	mov    edx,esi
  4265e3:	jmp    0x4264c5
  4265e8:	push   ebp
  4265e9:	mov    ebp,esp
  4265eb:	push   ecx
  4265ec:	mov    ecx,DWORD PTR [edx+0x194]
  4265f2:	push   esi
  4265f3:	mov    esi,DWORD PTR [ebp+0x8]
  4265f6:	mov    esi,DWORD PTR [esi]
  4265f8:	mov    DWORD PTR [ecx],esi
  4265fa:	mov    ecx,DWORD PTR [edx+0x194]
  426600:	mov    ecx,DWORD PTR [ecx]
  426602:	mov    esi,DWORD PTR [edx+0x190]
  426608:	mov    DWORD PTR [esi],ecx
  42660a:	mov    eax,DWORD PTR [edx+0x194]
  426610:	mov    ecx,DWORD PTR [eax]
  426612:	mov    ecx,DWORD PTR [ecx+0x3c]
  426615:	add    ecx,DWORD PTR [eax]
  426617:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  42661e:	mov    eax,DWORD PTR [ebp-0x4]
  426621:	movzx  ecx,WORD PTR [ecx+0x16]
  426625:	xor    eax,0x75108a8
  42662a:	add    eax,0x3272ef
  42662f:	pop    esi
  426630:	test   ecx,eax
  426632:	je     0x426640
  426634:	mov    eax,DWORD PTR [edx+0x1c8]
  42663a:	mov    DWORD PTR [eax],0xf89c85ba
  426640:	leave  
  426641:	ret    0x4
  426644:	push   ebp
  426645:	mov    ebp,esp
  426647:	sub    esp,0x70
  42664a:	and    DWORD PTR [ebp-0x20],0x0
  42664e:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  426655:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  42665c:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  426663:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42666a:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  426671:	mov    eax,DWORD PTR [ebp+0x20]
  426674:	mov    eax,DWORD PTR [eax+0x194]
  42667a:	mov    DWORD PTR [ebp-0xc],eax
  42667d:	mov    eax,DWORD PTR [ebp+0x20]
  426680:	push   ebx
  426681:	push   esi
  426682:	mov    esi,DWORD PTR [eax+0x190]
  426688:	mov    eax,DWORD PTR [ebp+0x20]
  42668b:	mov    eax,DWORD PTR [eax+0x18c]
  426691:	mov    DWORD PTR [ebp-0x8],eax
  426694:	mov    eax,DWORD PTR [eax]
  426696:	push   edi
  426697:	mov    DWORD PTR [ebp-0x4],esi
  42669a:	test   eax,eax
  42669c:	jne    0x4266a9
  42669e:	push   DWORD PTR [ebp+0x1c]
  4266a1:	mov    edx,DWORD PTR [ebp+0x20]
  4266a4:	call   0x4265e8
  4266a9:	mov    eax,DWORD PTR [esi]
  4266ab:	mov    ebx,DWORD PTR [esi]
  4266ad:	add    ebx,DWORD PTR [eax+0x3c]
  4266b0:	mov    eax,DWORD PTR [ebp+0xc]
  4266b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4266b6:	mov    ecx,DWORD PTR [ecx]
  4266b8:	mov    esi,0x75108a8
  4266bd:	xor    eax,esi
  4266bf:	mov    edi,0x3272ef
  4266c4:	add    eax,edi
  4266c6:	cmp    eax,ecx
  4266c8:	jne    0x426900
  4266ce:	mov    eax,DWORD PTR [ebp-0xc]
  4266d1:	mov    eax,DWORD PTR [eax]
  4266d3:	mov    DWORD PTR [ebp-0x10],eax
  4266d6:	mov    eax,DWORD PTR [ebx+0x50]
  4266d9:	mov    DWORD PTR [ebp-0x68],eax
  4266dc:	mov    eax,DWORD PTR [ebp-0x18]
  4266df:	xor    eax,esi
  4266e1:	add    eax,edi
  4266e3:	mov    DWORD PTR [ebp-0x64],eax
  4266e6:	mov    eax,DWORD PTR [ebp-0x14]
  4266e9:	and    DWORD PTR [ebp-0x6c],0x0
  4266ed:	xor    eax,esi
  4266ef:	add    eax,edi
  4266f1:	mov    DWORD PTR [ebp-0x60],eax
  4266f4:	lea    eax,[ebp-0x70]
  4266f7:	push   eax
  4266f8:	mov    eax,DWORD PTR [ebp+0x8]
  4266fb:	xor    eax,esi
  4266fd:	add    eax,edi
  4266ff:	push   eax
  426700:	mov    eax,DWORD PTR [ebp+0x20]
  426703:	add    eax,0xaa
  426708:	push   eax
  426709:	mov    eax,DWORD PTR [ebp+0x20]
  42670c:	mov    eax,DWORD PTR [eax+0x198]
  426712:	mov    DWORD PTR [ebp-0x70],0x4
  426719:	push   DWORD PTR [eax]
  42671b:	mov    eax,DWORD PTR [ebp+0x10]
  42671e:	call   eax
  426720:	mov    ecx,DWORD PTR [ebp-0xc]
  426723:	mov    ecx,DWORD PTR [ecx]
  426725:	mov    edx,DWORD PTR [ebp-0x8]
  426728:	mov    DWORD PTR [ebp-0x6c],eax
  42672b:	mov    DWORD PTR [ebp+0x1c],eax
  42672e:	mov    DWORD PTR [edx],ecx
  426730:	mov    ecx,DWORD PTR [ebp-0x4]
  426733:	mov    DWORD PTR [ecx],eax
  426735:	mov    eax,DWORD PTR [ebx+0x50]
  426738:	mov    DWORD PTR [ebp-0x68],eax
  42673b:	mov    eax,DWORD PTR [ebp-0x1c]
  42673e:	xor    eax,esi
  426740:	add    eax,edi
  426742:	mov    DWORD PTR [ebp-0x64],eax
  426745:	lea    eax,[ebp-0x20]
  426748:	mov    DWORD PTR [ebp-0x60],eax
  42674b:	lea    eax,[ebp-0x70]
  42674e:	push   eax
  42674f:	mov    eax,DWORD PTR [ebp+0x8]
  426752:	xor    eax,esi
  426754:	add    eax,edi
  426756:	push   eax
  426757:	mov    eax,DWORD PTR [ebp+0x20]
  42675a:	add    eax,0xee
  42675f:	push   eax
  426760:	mov    eax,DWORD PTR [ebp+0x20]
  426763:	mov    eax,DWORD PTR [eax+0x198]
  426769:	mov    DWORD PTR [ebp-0x70],0x4
  426770:	push   DWORD PTR [eax]
  426772:	mov    eax,DWORD PTR [ebp+0x10]
  426775:	call   eax
  426777:	test   eax,eax
  426779:	je     0x42679e
  42677b:	and    DWORD PTR [ebp+0xc],0x0
  42677f:	cmp    DWORD PTR [ebx+0x50],0x0
  426783:	jbe    0x42679e
  426785:	mov    eax,DWORD PTR [ebp+0x1c]
  426788:	mov    ecx,DWORD PTR [ebp-0x10]
  42678b:	sub    ecx,eax
  42678d:	mov    dl,BYTE PTR [ecx+eax*1]
  426790:	inc    DWORD PTR [ebp+0xc]
  426793:	mov    BYTE PTR [eax],dl
  426795:	mov    edx,DWORD PTR [ebp+0xc]
  426798:	inc    eax
  426799:	cmp    edx,DWORD PTR [ebx+0x50]
  42679c:	jb     0x42678d
  42679e:	mov    edx,DWORD PTR [ebp+0x1c]
  4267a1:	mov    ecx,DWORD PTR [edx+0x3c]
  4267a4:	add    ecx,edx
  4267a6:	mov    eax,DWORD PTR [ecx+0xa0]
  4267ac:	mov    ebx,DWORD PTR [ecx+0x28]
  4267af:	add    eax,edx
  4267b1:	sub    edx,DWORD PTR [ebp-0x10]
  4267b4:	add    ebx,DWORD PTR [ebp+0x1c]
  4267b7:	mov    DWORD PTR [ebp+0xc],edx
  4267ba:	mov    DWORD PTR [ebp-0x2c],ecx
  4267bd:	mov    DWORD PTR [ebp-0x14],ebx
  4267c0:	mov    DWORD PTR [ebp-0x8],0x0
  4267c7:	jmp    0x426843
  4267c9:	add    edx,0xfffffff8
  4267cc:	shr    edx,1
  4267ce:	mov    DWORD PTR [ebp-0x18],edx
  4267d1:	je     0x42682f
  4267d3:	lea    edx,[eax+0x8]
  4267d6:	mov    DWORD PTR [ebp-0x4],edx
  4267d9:	mov    edx,DWORD PTR [ebp-0x18]
  4267dc:	mov    DWORD PTR [ebp-0x18],edx
  4267df:	mov    edx,DWORD PTR [ebp-0x4]
  4267e2:	movzx  edx,WORD PTR [edx]
  4267e5:	mov    DWORD PTR [ebp-0x24],edx
  4267e8:	and    edx,0xfff
  4267ee:	mov    DWORD PTR [ebp-0x28],edx
  4267f1:	mov    edx,DWORD PTR [ebp-0x24]
  4267f4:	shr    edx,0xc
  4267f7:	add    edx,0xffcd8d11
  4267fd:	xor    edx,esi
  4267ff:	cmp    edx,0xf89c85bc
  426805:	jne    0x426826
  426807:	mov    edx,DWORD PTR [ebp-0x28]
  42680a:	add    edx,DWORD PTR [ebp+0x1c]
  42680d:	mov    ebx,DWORD PTR [eax]
  42680f:	cmp    DWORD PTR [ebx+edx*1],0x0
  426813:	je     0x426823
  426815:	mov    ecx,DWORD PTR [ebp+0xc]
  426818:	add    ecx,DWORD PTR [ebx+edx*1]
  42681b:	mov    ebx,DWORD PTR [eax]
  42681d:	mov    DWORD PTR [edx+ebx*1],ecx
  426820:	mov    ecx,DWORD PTR [ebp-0x2c]
  426823:	mov    ebx,DWORD PTR [ebp-0x14]
  426826:	add    DWORD PTR [ebp-0x4],0x2
  42682a:	dec    DWORD PTR [ebp-0x18]
  42682d:	jne    0x4267df
  42682f:	mov    edx,DWORD PTR [ebp-0xc]
  426832:	add    DWORD PTR [ebp-0x8],edx
  426835:	mov    edx,DWORD PTR [ebp-0x8]
  426838:	cmp    edx,DWORD PTR [ecx+0xa4]
  42683e:	jae    0x426851
  426840:	add    eax,DWORD PTR [ebp-0xc]
  426843:	mov    edx,DWORD PTR [eax+0x4]
  426846:	mov    DWORD PTR [ebp-0xc],edx
  426849:	test   edx,edx
  42684b:	jne    0x4267c9
  426851:	mov    eax,DWORD PTR [ebp-0x10]
  426854:	mov    DWORD PTR [ebp-0x6c],eax
  426857:	mov    DWORD PTR [ebp-0x70],0x4
  42685e:	mov    eax,DWORD PTR [ecx+0x50]
  426861:	mov    DWORD PTR [ebp-0x68],eax
  426864:	mov    eax,DWORD PTR [ebp-0x1c]
  426867:	xor    eax,esi
  426869:	add    eax,edi
  42686b:	mov    DWORD PTR [ebp-0x64],eax
  42686e:	lea    eax,[ebp-0x20]
  426871:	mov    DWORD PTR [ebp-0x60],eax
  426874:	lea    eax,[ebp-0x70]
  426877:	push   eax
  426878:	mov    eax,DWORD PTR [ebp+0x8]
  42687b:	xor    eax,esi
  42687d:	add    eax,edi
  42687f:	push   eax
  426880:	mov    eax,DWORD PTR [ebp+0x20]
  426883:	add    eax,0xee
  426888:	push   eax
  426889:	mov    eax,DWORD PTR [ebp+0x20]
  42688c:	mov    eax,DWORD PTR [eax+0x198]
  426892:	push   DWORD PTR [eax]
  426894:	mov    eax,DWORD PTR [ebp+0x10]
  426897:	call   eax
  426899:	mov    eax,DWORD PTR [ebp+0x20]
  42689c:	mov    eax,DWORD PTR [eax+0x180]
  4268a2:	add    eax,DWORD PTR [ebp+0xc]
  4268a5:	mov    ecx,DWORD PTR [ebp+0xc]
  4268a8:	push   DWORD PTR [ebp+0x18]
  4268ab:	mov    DWORD PTR [eax],ecx
  4268ad:	push   DWORD PTR [ebp+0x14]
  4268b0:	push   DWORD PTR [ebp+0x1c]
  4268b3:	call   ebx
  4268b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4268b8:	add    ecx,DWORD PTR [ebp+0x20]
  4268bb:	lea    eax,[ebp+0x4]
  4268be:	mov    DWORD PTR [ebp+0x20],ecx
  4268c1:	mov    ecx,DWORD PTR [ebp+0x20]
  4268c4:	mov    ecx,DWORD PTR [ebp+0x20]
  4268c7:	mov    edx,DWORD PTR [ecx+0x190]
  4268cd:	mov    ecx,DWORD PTR [ebp+0x20]
  4268d0:	mov    ecx,DWORD PTR [ecx+0x18c]
  4268d6:	mov    esi,DWORD PTR [ecx]
  4268d8:	cmp    DWORD PTR [eax],esi
  4268da:	jb     0x4268fb
  4268dc:	mov    esi,DWORD PTR [edx]
  4268de:	mov    edi,DWORD PTR [edx]
  4268e0:	mov    esi,DWORD PTR [esi+0x3c]
  4268e3:	lea    esi,[edi+esi*1+0x50]
  4268e7:	mov    edi,DWORD PTR [ecx]
  4268e9:	add    edi,DWORD PTR [esi]
  4268eb:	cmp    DWORD PTR [eax],edi
  4268ed:	jae    0x4268fb
  4268ef:	mov    esi,DWORD PTR [ecx]
  4268f1:	mov    ecx,DWORD PTR [eax]
  4268f3:	mov    edx,DWORD PTR [edx]
  4268f5:	sub    ecx,esi
  4268f7:	add    edx,ecx
  4268f9:	mov    DWORD PTR [eax],edx
  4268fb:	mov    eax,DWORD PTR [ebp+0xc]
  4268fe:	jmp    0x426902
  426900:	xor    eax,eax
  426902:	pop    edi
  426903:	pop    esi
  426904:	pop    ebx
  426905:	leave  
  426906:	ret    0x1c
  426909:	push   ebp
  42690a:	mov    ebp,esp
  42690c:	sub    esp,0x1c
  42690f:	push   esi
  426910:	mov    esi,eax
  426912:	mov    eax,DWORD PTR [ecx+0x190]
  426918:	cmp    DWORD PTR [eax],0x0
  42691b:	je     0x426a2b
  426921:	test   edx,edx
  426923:	je     0x426a2b
  426929:	test   esi,esi
  42692b:	je     0x426a2b
  426931:	mov    eax,DWORD PTR [esi+0x88]
  426937:	test   eax,eax
  426939:	je     0x426a26
  42693f:	cmp    DWORD PTR [esi+0x8c],0x10
  426946:	je     0x426a26
  42694c:	cmp    DWORD PTR [esi+0x34],edx
  42694f:	je     0x426a26
  426955:	mov    esi,DWORD PTR [ecx+0x18c]
  42695b:	and    DWORD PTR [ebp-0x10],0x0
  42695f:	mov    ecx,edx
  426961:	sub    ecx,DWORD PTR [esi]
  426963:	add    eax,edx
  426965:	movzx  edx,WORD PTR [eax+0xc]
  426969:	mov    DWORD PTR [ebp-0x1c],ecx
  42696c:	movzx  ecx,WORD PTR [eax+0xe]
  426970:	add    ecx,edx
  426972:	je     0x426a26
  426978:	lea    ecx,[eax+0x14]
  42697b:	push   ebx
  42697c:	mov    DWORD PTR [ebp-0x18],ecx
  42697f:	mov    esi,0x7fffffff
  426984:	push   edi
  426985:	test   DWORD PTR [ecx],esi
  426987:	je     0x426a08
  426989:	mov    edx,DWORD PTR [ecx]
  42698b:	and    DWORD PTR [ebp-0xc],0x0
  42698f:	and    edx,esi
  426991:	add    edx,eax
  426993:	movzx  edi,WORD PTR [edx+0xe]
  426997:	movzx  ebx,WORD PTR [edx+0xc]
  42699b:	add    edi,ebx
  42699d:	je     0x426a08
  42699f:	lea    ecx,[edx+0x14]
  4269a2:	mov    DWORD PTR [ebp-0x14],ecx
  4269a5:	test   DWORD PTR [ecx],esi
  4269a7:	je     0x4269ea
  4269a9:	mov    ecx,DWORD PTR [ecx]
  4269ab:	and    DWORD PTR [ebp-0x8],0x0
  4269af:	and    ecx,esi
  4269b1:	add    ecx,eax
  4269b3:	movzx  edi,WORD PTR [ecx+0xe]
  4269b7:	movzx  ebx,WORD PTR [ecx+0xc]
  4269bb:	add    edi,ebx
  4269bd:	je     0x4269ea
  4269bf:	lea    edi,[ecx+0x14]
  4269c2:	mov    DWORD PTR [ebp-0x4],edi
  4269c5:	mov    edi,DWORD PTR [ebp-0x4]
  4269c8:	mov    edi,DWORD PTR [edi]
  4269ca:	test   edi,edi
  4269cc:	je     0x4269d4
  4269ce:	mov    ebx,DWORD PTR [ebp-0x1c]
  4269d1:	add    DWORD PTR [edi+eax*1],ebx
  4269d4:	movzx  edi,WORD PTR [ecx+0xe]
  4269d8:	movzx  ebx,WORD PTR [ecx+0xc]
  4269dc:	inc    DWORD PTR [ebp-0x8]
  4269df:	add    DWORD PTR [ebp-0x4],0x8
  4269e3:	add    edi,ebx
  4269e5:	cmp    DWORD PTR [ebp-0x8],edi
  4269e8:	jb     0x4269c5
  4269ea:	movzx  edi,WORD PTR [edx+0xe]
  4269ee:	movzx  ebx,WORD PTR [edx+0xc]
  4269f2:	mov    ecx,DWORD PTR [ebp-0x14]
  4269f5:	inc    DWORD PTR [ebp-0xc]
  4269f8:	add    ecx,0x8
  4269fb:	add    edi,ebx
  4269fd:	mov    DWORD PTR [ebp-0x14],ecx
  426a00:	cmp    DWORD PTR [ebp-0xc],edi
  426a03:	jb     0x4269a5
  426a05:	mov    ecx,DWORD PTR [ebp-0x18]
  426a08:	movzx  edx,WORD PTR [eax+0xe]
  426a0c:	movzx  edi,WORD PTR [eax+0xc]
  426a10:	inc    DWORD PTR [ebp-0x10]
  426a13:	add    ecx,0x8
  426a16:	add    edx,edi
  426a18:	mov    DWORD PTR [ebp-0x18],ecx
  426a1b:	cmp    DWORD PTR [ebp-0x10],edx
  426a1e:	jb     0x426985
  426a24:	pop    edi
  426a25:	pop    ebx
  426a26:	xor    eax,eax
  426a28:	inc    eax
  426a29:	jmp    0x426a2d
  426a2b:	xor    eax,eax
  426a2d:	pop    esi
  426a2e:	leave  
  426a2f:	ret    
  426a30:	push   ebp
  426a31:	mov    ebp,esp
  426a33:	mov    ecx,DWORD PTR [ecx+0x190]
  426a39:	mov    eax,DWORD PTR [ebp+0xc]
  426a3c:	sub    esp,0x10
  426a3f:	push   ebx
  426a40:	xor    ebx,ebx
  426a42:	push   esi
  426a43:	push   edi
  426a44:	cmp    DWORD PTR [ecx],ebx
  426a46:	je     0x426ace
  426a4c:	cmp    eax,ebx
  426a4e:	je     0x426ace
  426a50:	cmp    DWORD PTR [eax+0x78],ebx
  426a53:	jne    0x426a5a
  426a55:	xor    eax,eax
  426a57:	inc    eax
  426a58:	jmp    0x426ad0
  426a5a:	mov    eax,DWORD PTR [eax+0x78]
  426a5d:	add    eax,DWORD PTR [ebp+0x8]
  426a60:	mov    ecx,DWORD PTR [eax+0x1c]
  426a63:	mov    edx,DWORD PTR [eax+0x24]
  426a66:	mov    esi,DWORD PTR [eax+0x14]
  426a69:	mov    edi,DWORD PTR [eax+0x18]
  426a6c:	add    ecx,DWORD PTR [ebp+0x8]
  426a6f:	add    edx,DWORD PTR [ebp+0x8]
  426a72:	mov    DWORD PTR [ebp-0x4],esi
  426a75:	cmp    esi,edi
  426a77:	ja     0x426a7c
  426a79:	mov    DWORD PTR [ebp-0x4],edi
  426a7c:	mov    DWORD PTR [ebp-0x8],ebx
  426a7f:	cmp    DWORD PTR [ebp-0x4],ebx
  426a82:	jbe    0x426a55
  426a84:	cmp    ebx,DWORD PTR [eax+0x14]
  426a87:	jae    0x426a8f
  426a89:	movzx  esi,WORD PTR [edx+ebx*2]
  426a8d:	jmp    0x426a91
  426a8f:	mov    esi,ebx
  426a91:	lea    esi,[ecx+esi*4]
  426a94:	mov    edi,DWORD PTR [esi]
  426a96:	test   edi,edi
  426a98:	je     0x426ac3
  426a9a:	add    edi,DWORD PTR [ebp+0x8]
  426a9d:	mov    DWORD PTR [ebp-0x10],edi
  426aa0:	cmp    edi,eax
  426aa2:	jbe    0x426ab4
  426aa4:	mov    ebx,DWORD PTR [ebp+0xc]
  426aa7:	mov    ebx,DWORD PTR [ebx+0x7c]
  426aaa:	add    ebx,eax
  426aac:	cmp    edi,ebx
  426aae:	jae    0x426ab4
  426ab0:	mov    esi,DWORD PTR [esi]
  426ab2:	jmp    0x426abc
  426ab4:	sub    edi,DWORD PTR [ebp+0x8]
  426ab7:	mov    DWORD PTR [esi],edi
  426ab9:	mov    esi,DWORD PTR [ebp-0x10]
  426abc:	test   esi,esi
  426abe:	je     0x426ace
  426ac0:	mov    ebx,DWORD PTR [ebp-0x8]
  426ac3:	inc    ebx
  426ac4:	mov    DWORD PTR [ebp-0x8],ebx
  426ac7:	cmp    ebx,DWORD PTR [ebp-0x4]
  426aca:	jb     0x426a84
  426acc:	jmp    0x426a55
  426ace:	xor    eax,eax
  426ad0:	pop    edi
  426ad1:	pop    esi
  426ad2:	pop    ebx
  426ad3:	leave  
  426ad4:	ret    0x8
  426ad7:	push   ebp
  426ad8:	mov    ebp,esp
  426ada:	sub    esp,0x2c
  426add:	mov    edx,0xf89c85b9
  426ae2:	mov    DWORD PTR [ebp-0x4],edx
  426ae5:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426aec:	mov    eax,DWORD PTR [ebp-0x4]
  426aef:	mov    ecx,DWORD PTR [ebp-0x4]
  426af2:	mov    ecx,DWORD PTR [ebp-0x4]
  426af5:	mov    ecx,DWORD PTR [ebp-0x4]
  426af8:	mov    ecx,DWORD PTR [ebp-0x4]
  426afb:	mov    ecx,DWORD PTR [ebp-0x4]
  426afe:	push   ebx
  426aff:	mov    ebx,DWORD PTR [ebp+0x10]
  426b02:	push   esi
  426b03:	mov    esi,0x75108a8
  426b08:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426b0f:	mov    ecx,DWORD PTR [ebp-0x4]
  426b12:	mov    ebx,DWORD PTR [ebx+0x190]
  426b18:	push   edi
  426b19:	mov    edi,0x3272ef
  426b1e:	xor    ecx,esi
  426b20:	xor    eax,esi
  426b22:	add    eax,edi
  426b24:	add    ecx,edi
  426b26:	mov    DWORD PTR [ebp-0x18],eax
  426b29:	cmp    ecx,DWORD PTR [ebx]
  426b2b:	je     0x426dac
  426b31:	mov    ebx,DWORD PTR [ebp-0x4]
  426b34:	mov    ecx,DWORD PTR [ebp+0xc]
  426b37:	xor    ebx,esi
  426b39:	add    ebx,edi
  426b3b:	cmp    ebx,ecx
  426b3d:	je     0x426dac
  426b43:	mov    ebx,DWORD PTR [ebp-0x4]
  426b46:	mov    ecx,DWORD PTR [ecx+0x80]
  426b4c:	xor    ebx,esi
  426b4e:	add    ebx,edi
  426b50:	cmp    ecx,ebx
  426b52:	je     0x426da7
  426b58:	add    ecx,DWORD PTR [ebp+0x8]
  426b5b:	mov    DWORD PTR [ebp-0x2c],ecx
  426b5e:	mov    ebx,edx
  426b60:	xor    ebx,esi
  426b62:	add    ebx,edi
  426b64:	mov    DWORD PTR [ebp-0x10],ebx
  426b67:	mov    ebx,DWORD PTR [ebp-0x10]
  426b6a:	cmp    ebx,edx
  426b6c:	je     0x426b80
  426b6e:	mov    edx,DWORD PTR [ebp-0x10]
  426b71:	mov    ebx,DWORD PTR [ebp-0x4]
  426b74:	imul   edx,edx,0x14
  426b77:	xor    ebx,esi
  426b79:	add    ebx,edi
  426b7b:	cmp    DWORD PTR [edx+ecx*1],ebx
  426b7e:	jne    0x426b97
  426b80:	mov    edx,DWORD PTR [ebp-0x10]
  426b83:	mov    ebx,DWORD PTR [ebp-0x4]
  426b86:	imul   edx,edx,0x14
  426b89:	xor    ebx,esi
  426b8b:	add    ebx,edi
  426b8d:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426b91:	je     0x426d99
  426b97:	mov    eax,DWORD PTR [ebp-0x4]
  426b9a:	mov    ebx,DWORD PTR [ebp-0x4]
  426b9d:	mov    eax,DWORD PTR [ebp-0x10]
  426ba0:	imul   eax,eax,0x14
  426ba3:	add    eax,ecx
  426ba5:	mov    ecx,DWORD PTR [eax+0x10]
  426ba8:	add    ecx,DWORD PTR [ebp+0x8]
  426bab:	xor    ebx,esi
  426bad:	mov    DWORD PTR [ebp-0x1c],ecx
  426bb0:	mov    ecx,DWORD PTR [ebp-0x4]
  426bb3:	mov    edx,DWORD PTR [ebp-0x4]
  426bb6:	xor    ecx,esi
  426bb8:	add    ecx,edi
  426bba:	xor    edx,esi
  426bbc:	mov    DWORD PTR [ebp-0x24],ecx
  426bbf:	mov    ecx,DWORD PTR [eax]
  426bc1:	add    edx,edi
  426bc3:	add    ebx,edi
  426bc5:	cmp    ecx,edx
  426bc7:	je     0x426bcf
  426bc9:	add    ecx,DWORD PTR [ebp+0x8]
  426bcc:	mov    DWORD PTR [ebp-0x24],ecx
  426bcf:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd2:	xor    ecx,esi
  426bd4:	add    ecx,DWORD PTR [eax+0xc]
  426bd7:	mov    eax,DWORD PTR [ebp+0x8]
  426bda:	lea    eax,[ecx+eax*1+0x3272ef]
  426be1:	mov    DWORD PTR [ebp+0xc],eax
  426be4:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426beb:	mov    eax,DWORD PTR [ebp+0x10]
  426bee:	push   DWORD PTR [ebp+0xc]
  426bf1:	mov    eax,DWORD PTR [eax+0x1e0]
  426bf7:	call   DWORD PTR [eax]
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	xor    ecx,esi
  426bfe:	add    ecx,edi
  426c00:	mov    DWORD PTR [ebp-0xc],eax
  426c03:	cmp    ecx,eax
  426c05:	jne    0x426c19
  426c07:	mov    eax,DWORD PTR [ebp+0x10]
  426c0a:	push   DWORD PTR [ebp+0xc]
  426c0d:	mov    eax,DWORD PTR [eax+0x1e0]
  426c13:	call   DWORD PTR [eax+0xc]
  426c16:	mov    DWORD PTR [ebp-0xc],eax
  426c19:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426c20:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426c27:	mov    eax,DWORD PTR [ebp-0x4]
  426c2a:	xor    eax,esi
  426c2c:	add    eax,edi
  426c2e:	cmp    eax,DWORD PTR [ebp-0xc]
  426c31:	jne    0x426c56
  426c33:	mov    eax,DWORD PTR [ebp-0x8]
  426c36:	mov    ecx,DWORD PTR [ebp-0x20]
  426c39:	xor    eax,esi
  426c3b:	xor    ecx,esi
  426c3d:	lea    ebx,[ebx+eax*1+0x3272ef]
  426c44:	mov    eax,DWORD PTR [ebp+0x10]
  426c47:	mov    eax,DWORD PTR [eax+0x1e0]
  426c4d:	add    ecx,edi
  426c4f:	imul   ecx,ebx
  426c52:	push   ecx
  426c53:	call   DWORD PTR [eax+0x24]
  426c56:	mov    eax,DWORD PTR [ebp-0x4]
  426c59:	xor    eax,esi
  426c5b:	add    eax,edi
  426c5d:	cmp    eax,DWORD PTR [ebp-0xc]
  426c60:	jne    0x426c71
  426c62:	mov    eax,DWORD PTR [ebp-0x28]
  426c65:	xor    eax,esi
  426c67:	add    eax,edi
  426c69:	cmp    ebx,eax
  426c6b:	jbe    0x426beb
  426c71:	mov    eax,DWORD PTR [ebp-0x4]
  426c74:	xor    eax,esi
  426c76:	add    eax,edi
  426c78:	cmp    eax,DWORD PTR [ebp-0xc]
  426c7b:	jne    0x426c94
  426c7d:	mov    eax,DWORD PTR [ebp-0x8]
  426c80:	mov    ecx,DWORD PTR [ebp-0x18]
  426c83:	xor    eax,esi
  426c85:	lea    eax,[ecx+eax*1+0x3272ef]
  426c8c:	mov    DWORD PTR [ebp-0x18],eax
  426c8f:	jmp    0x426d83
  426c94:	mov    DWORD PTR [ebp-0x14],0x1121b21
  426c9b:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426ca2:	mov    ebx,DWORD PTR [ebp-0x4]
  426ca5:	xor    ebx,esi
  426ca7:	add    ebx,edi
  426ca9:	jmp    0x426d70
  426cae:	mov    eax,DWORD PTR [ebp-0x4]
  426cb1:	xor    eax,esi
  426cb3:	add    eax,edi
  426cb5:	mov    DWORD PTR [ebp-0x14],eax
  426cb8:	mov    eax,DWORD PTR [ebp-0x4]
  426cbb:	xor    eax,esi
  426cbd:	add    eax,edi
  426cbf:	mov    DWORD PTR [ebp+0xc],eax
  426cc2:	mov    ecx,DWORD PTR [ebp-0x4]
  426cc5:	mov    eax,DWORD PTR [ebp-0x24]
  426cc8:	xor    ecx,esi
  426cca:	add    ecx,edi
  426ccc:	cmp    ecx,eax
  426cce:	je     0x426cd6
  426cd0:	mov    eax,DWORD PTR [eax+ebx*4]
  426cd3:	mov    DWORD PTR [ebp-0x14],eax
  426cd6:	mov    eax,DWORD PTR [ebp-0x1c]
  426cd9:	mov    eax,DWORD PTR [eax+ebx*4]
  426cdc:	mov    DWORD PTR [ebp+0xc],eax
  426cdf:	mov    eax,DWORD PTR [ebp-0x4]
  426ce2:	mov    ecx,DWORD PTR [ebp-0x14]
  426ce5:	xor    eax,esi
  426ce7:	add    eax,edi
  426ce9:	cmp    eax,ecx
  426ceb:	je     0x426d16
  426ced:	mov    eax,DWORD PTR [ebp-0x4]
  426cf0:	mov    ecx,DWORD PTR [ebp-0x14]
  426cf3:	xor    eax,esi
  426cf5:	add    eax,edi
  426cf7:	shr    ecx,0x1f
  426cfa:	cmp    eax,ecx
  426cfc:	je     0x426d16
  426cfe:	mov    ecx,DWORD PTR [ebp-0x14]
  426d01:	mov    eax,DWORD PTR [ebp+0x10]
  426d04:	mov    eax,DWORD PTR [eax+0x1e0]
  426d0a:	movzx  ecx,cx
  426d0d:	push   ecx
  426d0e:	push   DWORD PTR [ebp-0xc]
  426d11:	call   DWORD PTR [eax+0x8]
  426d14:	jmp    0x426d2f
  426d16:	mov    eax,DWORD PTR [ebp+0xc]
  426d19:	add    eax,DWORD PTR [ebp+0x8]
  426d1c:	mov    ecx,DWORD PTR [ebp+0x10]
  426d1f:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426d25:	add    eax,0x2
  426d28:	push   eax
  426d29:	push   DWORD PTR [ebp-0xc]
  426d2c:	call   DWORD PTR [ecx+0x8]
  426d2f:	mov    DWORD PTR [ebp+0xc],eax
  426d32:	mov    eax,DWORD PTR [ebp-0x4]
  426d35:	mov    ecx,DWORD PTR [ebp+0xc]
  426d38:	xor    eax,esi
  426d3a:	add    eax,edi
  426d3c:	cmp    eax,ecx
  426d3e:	mov    eax,DWORD PTR [ebp-0x8]
  426d41:	jne    0x426d54
  426d43:	mov    ecx,DWORD PTR [ebp-0x18]
  426d46:	xor    eax,esi
  426d48:	lea    eax,[ecx+eax*1+0x3272ef]
  426d4f:	mov    DWORD PTR [ebp-0x18],eax
  426d52:	jmp    0x426d64
  426d54:	mov    ecx,DWORD PTR [ebp+0xc]
  426d57:	xor    eax,esi
  426d59:	add    eax,edi
  426d5b:	imul   eax,ecx
  426d5e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d61:	mov    DWORD PTR [ecx+ebx*4],eax
  426d64:	mov    eax,DWORD PTR [ebp-0x8]
  426d67:	xor    eax,esi
  426d69:	lea    ebx,[ebx+eax*1+0x3272ef]
  426d70:	mov    eax,DWORD PTR [ebp-0x4]
  426d73:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d76:	xor    eax,esi
  426d78:	add    eax,edi
  426d7a:	cmp    DWORD PTR [ecx+ebx*4],eax
  426d7d:	jne    0x426cae
  426d83:	mov    edx,DWORD PTR [ebp-0x10]
  426d86:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d89:	mov    eax,DWORD PTR [ebp-0x18]
  426d8c:	sub    edx,0x3272ee
  426d92:	xor    edx,esi
  426d94:	jmp    0x426b5e
  426d99:	mov    ecx,DWORD PTR [ebp-0x4]
  426d9c:	xor    ecx,esi
  426d9e:	add    ecx,edi
  426da0:	cmp    eax,ecx
  426da2:	mov    eax,DWORD PTR [ebp-0x4]
  426da5:	jne    0x426daf
  426da7:	mov    eax,DWORD PTR [ebp-0x8]
  426daa:	jmp    0x426daf
  426dac:	mov    eax,DWORD PTR [ebp-0x4]
  426daf:	xor    eax,esi
  426db1:	add    eax,edi
  426db3:	pop    edi
  426db4:	pop    esi
  426db5:	pop    ebx
  426db6:	leave  
  426db7:	ret    0xc
  426dba:	push   ebp
  426dbb:	mov    ebp,esp
  426dbd:	sub    esp,0x28
  426dc0:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426dc7:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  426dce:	mov    eax,DWORD PTR [ebp+0xc]
  426dd1:	mov    DWORD PTR [ebp+0xc],eax
  426dd4:	push   esi
  426dd5:	mov    eax,eax
  426dd7:	mov    eax,DWORD PTR [ebp-0x4]
  426dda:	mov    esi,DWORD PTR [ebp+0x8]
  426ddd:	mov    ecx,0x75108a8
  426de2:	xor    eax,ecx
  426de4:	mov    edx,0x3272ef
  426de9:	add    eax,edx
  426deb:	cmp    esi,eax
  426ded:	je     0x426f14
  426df3:	mov    eax,DWORD PTR [ebp+0x8]
  426df6:	mov    esi,DWORD PTR [ebp+0x8]
  426df9:	add    esi,DWORD PTR [eax+0x3c]
  426dfc:	push   edi
  426dfd:	mov    DWORD PTR [ebp+0xc],esi
  426e00:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426e07:	mov    eax,DWORD PTR [ebp-0x1c]
  426e0a:	mov    esi,DWORD PTR [ebp-0x4]
  426e0d:	mov    edi,DWORD PTR [ebp+0xc]
  426e10:	xor    esi,ecx
  426e12:	xor    eax,ecx
  426e14:	add    esi,edx
  426e16:	cmp    DWORD PTR [edi+eax*8+0x19397f0],esi
  426e1d:	je     0x426f0e
  426e23:	mov    esi,DWORD PTR [ebp+0xc]
  426e26:	mov    eax,DWORD PTR [ebp+0x8]
  426e29:	add    eax,DWORD PTR [esi+0xa0]
  426e2f:	mov    esi,DWORD PTR [ebp+0x8]
  426e32:	mov    edi,DWORD PTR [ebp+0xc]
  426e35:	sub    esi,DWORD PTR [edi+0x34]
  426e38:	mov    edi,DWORD PTR [ebp-0x4]
  426e3b:	xor    edi,ecx
  426e3d:	add    edi,edx
  426e3f:	mov    DWORD PTR [ebp-0x24],esi
  426e42:	cmp    esi,edi
  426e44:	je     0x426f0e
  426e4a:	mov    esi,DWORD PTR [ebp-0x4]
  426e4d:	xor    esi,ecx
  426e4f:	add    esi,edx
  426e51:	mov    DWORD PTR [ebp-0x8],esi
  426e54:	push   ebx
  426e55:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426e5c:	jmp    0x426ef8
  426e61:	mov    esi,DWORD PTR [ebp-0x4]
  426e64:	xor    esi,ecx
  426e66:	lea    edi,[ebx-0x8]
  426e69:	add    esi,edx
  426e6b:	shr    edi,1
  426e6d:	cmp    esi,edi
  426e6f:	jae    0x426ede
  426e71:	sub    edi,esi
  426e73:	lea    ebx,[eax+esi*2+0x8]
  426e77:	mov    DWORD PTR [ebp-0x18],edi
  426e7a:	movzx  esi,WORD PTR [ebx]
  426e7d:	and    esi,0xfff
  426e83:	mov    DWORD PTR [ebp-0x14],esi
  426e86:	mov    edi,DWORD PTR [ebp-0x14]
  426e89:	mov    esi,DWORD PTR [eax]
  426e8b:	sub    esi,edx
  426e8d:	add    edi,esi
  426e8f:	movzx  esi,WORD PTR [ebx]
  426e92:	shr    esi,0xc
  426e95:	xor    edi,ecx
  426e97:	mov    DWORD PTR [ebp-0x20],edi
  426e9a:	mov    DWORD PTR [ebp-0x14],esi
  426e9d:	mov    esi,DWORD PTR [ebp-0x20]
  426ea0:	mov    edi,DWORD PTR [ebp+0x8]
  426ea3:	xor    esi,ecx
  426ea5:	lea    esi,[esi+edi*1+0x3272ef]
  426eac:	mov    DWORD PTR [ebp-0x20],esi
  426eaf:	mov    esi,DWORD PTR [ebp-0x10]
  426eb2:	mov    edi,DWORD PTR [ebp-0x14]
  426eb5:	xor    esi,ecx
  426eb7:	add    esi,edx
  426eb9:	cmp    edi,esi
  426ebb:	jne    0x426ed3
  426ebd:	mov    esi,DWORD PTR [ebp-0x10]
  426ec0:	mov    edi,DWORD PTR [ebp-0x14]
  426ec3:	xor    esi,ecx
  426ec5:	add    esi,edx
  426ec7:	cmp    edi,esi
  426ec9:	jne    0x426ed3
  426ecb:	mov    esi,DWORD PTR [ebp-0x20]
  426ece:	mov    edi,DWORD PTR [ebp-0x24]
  426ed1:	add    DWORD PTR [esi],edi
  426ed3:	add    ebx,0x2
  426ed6:	dec    DWORD PTR [ebp-0x18]
  426ed9:	jne    0x426e7a
  426edb:	mov    ebx,DWORD PTR [ebp-0xc]
  426ede:	add    DWORD PTR [ebp-0x8],ebx
  426ee1:	mov    esi,DWORD PTR [ebp-0x1c]
  426ee4:	mov    edi,DWORD PTR [ebp-0x8]
  426ee7:	mov    ebx,DWORD PTR [ebp+0xc]
  426eea:	xor    esi,ecx
  426eec:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397f4]
  426ef3:	jae    0x426f0d
  426ef5:	add    eax,DWORD PTR [ebp-0xc]
  426ef8:	mov    esi,DWORD PTR [ebp-0x4]
  426efb:	mov    ebx,DWORD PTR [eax+0x4]
  426efe:	xor    esi,ecx
  426f00:	add    esi,edx
  426f02:	mov    DWORD PTR [ebp-0xc],ebx
  426f05:	cmp    ebx,esi
  426f07:	jne    0x426e61
  426f0d:	pop    ebx
  426f0e:	mov    eax,DWORD PTR [ebp-0x28]
  426f11:	pop    edi
  426f12:	jmp    0x426f17
  426f14:	mov    eax,DWORD PTR [ebp-0x4]
  426f17:	xor    eax,ecx
  426f19:	add    eax,edx
  426f1b:	pop    esi
  426f1c:	leave  
  426f1d:	ret    0x8
  426f20:	push   ebp
  426f21:	mov    ebp,esp
  426f23:	sub    esp,0xd8
  426f29:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426f30:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  426f37:	mov    eax,DWORD PTR [ebp-0x4]
  426f3a:	push   ebx
  426f3b:	push   esi
  426f3c:	mov    esi,0x75108a8
  426f41:	xor    eax,esi
  426f43:	push   edi
  426f44:	mov    edi,0x3272ef
  426f49:	add    eax,edi
  426f4b:	mov    DWORD PTR [ebp-0x18],eax
  426f4e:	mov    eax,DWORD PTR [ebp-0x4]
  426f51:	xor    eax,esi
  426f53:	add    eax,edi
  426f55:	mov    DWORD PTR [ebp-0x8],eax
  426f58:	mov    ebx,DWORD PTR [ebp+0x20]
  426f5b:	mov    eax,DWORD PTR [ebp-0x1c]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426f61:	xor    eax,ecx
  426f63:	mov    DWORD PTR [ebp-0x1c],eax
  426f66:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  426f6d:	mov    eax,DWORD PTR [ebp-0xc]
  426f70:	mov    ecx,DWORD PTR [ebp-0xc]
  426f73:	xor    eax,ecx
  426f75:	mov    DWORD PTR [ebp-0xc],eax
  426f78:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426f7f:	mov    eax,DWORD PTR [ebp-0x10]
  426f82:	mov    ecx,DWORD PTR [ebp-0x10]
  426f85:	xor    eax,ecx
  426f87:	mov    DWORD PTR [ebp-0x10],eax
  426f8a:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426f91:	mov    eax,DWORD PTR [ebp-0x28]
  426f94:	mov    ecx,DWORD PTR [ebp-0x28]
  426f97:	xor    eax,ecx
  426f99:	mov    DWORD PTR [ebp-0x28],eax
  426f9c:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  426fa3:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  426faa:	mov    eax,DWORD PTR [ebp+0x8]
  426fad:	test   eax,eax
  426faf:	je     0x427438
  426fb5:	mov    eax,DWORD PTR [ebp+0xc]
  426fb8:	test   eax,eax
  426fba:	je     0x427438
  426fc0:	mov    eax,DWORD PTR [ebp+0x18]
  426fc3:	test   eax,eax
  426fc5:	je     0x427438
  426fcb:	mov    eax,DWORD PTR [ebp+0x20]
  426fce:	mov    ecx,DWORD PTR [ebp+0x8]
  426fd1:	xor    eax,0x8a8
  426fd6:	add    eax,0x72ef
  426fdb:	cmp    WORD PTR [ecx],ax
  426fde:	jne    0x427438
  426fe4:	mov    eax,DWORD PTR [ebp-0x4]
  426fe7:	xor    eax,esi
  426fe9:	add    eax,edi
  426feb:	mov    DWORD PTR [ebp-0x30],eax
  426fee:	mov    eax,DWORD PTR [ebp-0x4]
  426ff1:	mov    ecx,DWORD PTR [ebp+0x8]
  426ff4:	mov    eax,DWORD PTR [ebp+0x8]
  426ff7:	add    eax,DWORD PTR [ecx+0x3c]
  426ffa:	mov    DWORD PTR [ebp+0xc],eax
  426ffd:	mov    eax,DWORD PTR [eax+0x50]
  427000:	test   eax,eax
  427002:	je     0x427438
  427008:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  42700f:	mov    eax,DWORD PTR [ebp-0x2c]
  427012:	xor    eax,esi
  427014:	add    eax,edi
  427016:	mov    DWORD PTR [ebp-0x2c],eax
  427019:	mov    eax,DWORD PTR [ebp-0x4]
  42701c:	mov    eax,DWORD PTR [ebx+0x190]
  427022:	mov    ecx,DWORD PTR [eax]
  427024:	mov    ecx,DWORD PTR [ecx+0x3c]
  427027:	add    ecx,DWORD PTR [eax]
  427029:	mov    eax,DWORD PTR [ebp-0x4]
  42702c:	mov    eax,DWORD PTR [ebx+0x18c]
  427032:	mov    edx,DWORD PTR [eax]
  427034:	mov    DWORD PTR [ebp-0x20],ecx
  427037:	mov    DWORD PTR [ebp+0x20],edx
  42703a:	cmp    edx,edx
  42703c:	jne    0x427070
  42703e:	mov    eax,DWORD PTR [ebx+0x1e0]
  427044:	lea    edx,[ebp-0x18]
  427047:	push   edx
  427048:	mov    edx,DWORD PTR [ebp-0xc]
  42704b:	xor    edx,esi
  42704d:	add    edx,edi
  42704f:	push   edx
  427050:	push   DWORD PTR [ecx+0x50]
  427053:	push   DWORD PTR [ebp+0x20]
  427056:	call   DWORD PTR [eax+0x1c]
  427059:	mov    eax,DWORD PTR [ebp-0x20]
  42705c:	mov    ecx,DWORD PTR [eax+0x54]
  42705f:	mov    eax,DWORD PTR [eax+0x50]
  427062:	sub    eax,ecx
  427064:	add    ecx,DWORD PTR [ebp+0x20]
  427067:	push   ecx
  427068:	call   0x4279d3
  42706d:	mov    edx,DWORD PTR [ebp+0x20]
  427070:	mov    eax,DWORD PTR [ebx+0x194]
  427076:	mov    DWORD PTR [eax],edx
  427078:	mov    eax,DWORD PTR [ebp+0xc]
  42707b:	push   DWORD PTR [eax+0x54]
  42707e:	push   DWORD PTR [ebp+0x8]
  427081:	push   edx
  427082:	call   0x4278c9
  427087:	mov    ecx,DWORD PTR [ebp+0x20]
  42708a:	mov    eax,DWORD PTR [ecx+0x3c]
  42708d:	add    eax,ecx
  42708f:	movzx  ecx,WORD PTR [eax+0x14]
  427093:	lea    ecx,[ecx+eax*1+0x18]
  427097:	mov    DWORD PTR [ebp+0x18],ecx
  42709a:	mov    ecx,DWORD PTR [ebp-0x4]
  42709d:	movzx  edx,WORD PTR [eax+0x6]
  4270a1:	xor    ecx,esi
  4270a3:	add    ecx,edi
  4270a5:	mov    DWORD PTR [ebp+0xc],eax
  4270a8:	cmp    edx,ecx
  4270aa:	je     0x427157
  4270b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270b3:	xor    ecx,esi
  4270b5:	add    ecx,edi
  4270b7:	mov    DWORD PTR [ebp-0x8],ecx
  4270ba:	mov    ecx,DWORD PTR [ebp-0x24]
  4270bd:	movzx  edx,WORD PTR [eax+0x6]
  4270c1:	xor    ecx,esi
  4270c3:	sub    edx,ecx
  4270c5:	sub    edx,edi
  4270c7:	cmp    DWORD PTR [ebp-0x8],edx
  4270ca:	ja     0x427157
  4270d0:	mov    edx,DWORD PTR [ebp+0x18]
  4270d3:	add    edx,0x8
  4270d6:	mov    DWORD PTR [ebp+0x18],edx
  4270d9:	jmp    0x4270de
  4270db:	mov    edx,DWORD PTR [ebp+0x18]
  4270de:	mov    eax,DWORD PTR [eax+0x38]
  4270e1:	lea    ecx,[eax-0x1]
  4270e4:	mov    DWORD PTR [ebp-0x38],eax
  4270e7:	mov    eax,DWORD PTR [edx]
  4270e9:	test   eax,ecx
  4270eb:	je     0x4270f4
  4270ed:	not    ecx
  4270ef:	and    eax,ecx
  4270f1:	add    eax,DWORD PTR [ebp-0x38]
  4270f4:	mov    ecx,DWORD PTR [edx+0x4]
  4270f7:	add    ecx,DWORD PTR [ebp+0x20]
  4270fa:	push   ecx
  4270fb:	call   0x4279d3
  427100:	mov    edx,DWORD PTR [ebp-0x4]
  427103:	mov    eax,DWORD PTR [ebp+0x18]
  427106:	mov    ecx,DWORD PTR [eax+0x8]
  427109:	xor    edx,esi
  42710b:	add    edx,edi
  42710d:	cmp    ecx,edx
  42710f:	je     0x427128
  427111:	push   ecx
  427112:	mov    ecx,DWORD PTR [ebp+0x8]
  427115:	add    ecx,DWORD PTR [eax+0xc]
  427118:	mov    eax,DWORD PTR [eax+0x4]
  42711b:	add    eax,DWORD PTR [ebp+0x20]
  42711e:	push   ecx
  42711f:	push   eax
  427120:	call   0x4278c9
  427125:	mov    eax,DWORD PTR [ebp+0x18]
  427128:	mov    ecx,DWORD PTR [ebp-0x24]
  42712b:	mov    edx,DWORD PTR [ebp-0x8]
  42712e:	add    eax,0x28
  427131:	xor    ecx,esi
  427133:	lea    ecx,[edx+ecx*1+0x3272ef]
  42713a:	mov    edx,DWORD PTR [ebp+0xc]
  42713d:	mov    DWORD PTR [ebp+0x18],eax
  427140:	mov    eax,DWORD PTR [ebp-0x24]
  427143:	movzx  edx,WORD PTR [edx+0x6]
  427147:	xor    eax,esi
  427149:	sub    edx,eax
  42714b:	mov    eax,DWORD PTR [ebp+0xc]
  42714e:	sub    edx,edi
  427150:	mov    DWORD PTR [ebp-0x8],ecx
  427153:	cmp    ecx,edx
  427155:	jbe    0x4270db
  427157:	mov    edx,DWORD PTR [ebx+0x18c]
  42715d:	mov    ecx,DWORD PTR [ebp+0x20]
  427160:	cmp    ecx,DWORD PTR [edx]
  427162:	jne    0x42718b
  427164:	mov    eax,DWORD PTR [ebx+0x1e0]
  42716a:	lea    edx,[ebp-0x18]
  42716d:	push   edx
  42716e:	mov    edx,DWORD PTR [ebp-0x10]
  427171:	xor    edx,esi
  427173:	add    edx,edi
  427175:	push   edx
  427176:	mov    edx,DWORD PTR [ebp-0x20]
  427179:	push   DWORD PTR [edx+0x54]
  42717c:	push   ecx
  42717d:	call   DWORD PTR [eax+0x1c]
  427180:	test   eax,eax
  427182:	je     0x427429
  427188:	mov    eax,DWORD PTR [ebp+0xc]
  42718b:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427191:	mov    ecx,DWORD PTR [ecx]
  427193:	xor    ecx,esi
  427195:	add    ecx,edi
  427197:	je     0x427354
  42719d:	mov    eax,DWORD PTR [ebp-0x4]
  4271a0:	xor    eax,esi
  4271a2:	add    eax,edi
  4271a4:	and    DWORD PTR [ebp+0x8],0x0
  4271a8:	mov    DWORD PTR [ebp-0x14],eax
  4271ab:	mov    eax,0xf89c85dd
  4271b0:	lea    ecx,[eax-0x8]
  4271b3:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4271ba:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4271c1:	mov    DWORD PTR [ebp-0x50],eax
  4271c4:	mov    DWORD PTR [ebp-0x4c],ecx
  4271c7:	mov    DWORD PTR [ebp-0x48],ecx
  4271ca:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  4271d1:	mov    edx,DWORD PTR [ebp+0x8]
  4271d4:	mov    ecx,0x8a8
  4271d9:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4271de:	mov    edx,0x72ef
  4271e3:	add    cx,dx
  4271e6:	mov    edx,DWORD PTR [ebp+0x8]
  4271e9:	inc    DWORD PTR [ebp+0x8]
  4271ec:	cmp    DWORD PTR [ebp+0x8],0x6
  4271f0:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4271f8:	jb     0x4271d1
  4271fa:	mov    ecx,0xf89c852b
  4271ff:	mov    DWORD PTR [ebp-0xb0],eax
  427205:	mov    DWORD PTR [ebp-0x9c],eax
  42720b:	mov    DWORD PTR [ebp-0x74],eax
  42720e:	mov    DWORD PTR [ebp-0x70],eax
  427211:	lea    eax,[ecx+0x1]
  427214:	mov    edx,0xf89c85ff
  427219:	mov    DWORD PTR [ebp-0x64],eax
  42721c:	mov    DWORD PTR [ebp-0x60],eax
  42721f:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  427229:	mov    DWORD PTR [ebp-0xac],ecx
  42722f:	mov    DWORD PTR [ebp-0xa8],edx
  427235:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  42723f:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427249:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427253:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  42725d:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  427267:	mov    DWORD PTR [ebp-0x8c],ecx
  42726d:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  427277:	mov    DWORD PTR [ebp-0x84],edx
  42727d:	mov    DWORD PTR [ebp-0x80],0xf89c8528
  427284:	mov    DWORD PTR [ebp-0x7c],ecx
  427287:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  42728e:	mov    DWORD PTR [ebp-0x6c],ecx
  427291:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427298:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  42729f:	xor    eax,eax
  4272a1:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4272a8:	xor    cl,0xa8
  4272ab:	sub    cl,0x11
  4272ae:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4272b5:	inc    eax
  4272b6:	cmp    eax,0x17
  4272b9:	jb     0x4272a1
  4272bb:	mov    eax,DWORD PTR [ebx+0x1e0]
  4272c1:	lea    ecx,[ebp-0xc0]
  4272c7:	push   ecx
  4272c8:	call   DWORD PTR [eax+0x4]
  4272cb:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4272d1:	lea    edx,[ebp-0xd8]
  4272d7:	push   edx
  4272d8:	push   eax
  4272d9:	call   DWORD PTR [ecx+0x8]
  4272dc:	mov    DWORD PTR [ebp-0x40],eax
  4272df:	lea    eax,[ebp-0x14]
  4272e2:	push   eax
  4272e3:	mov    eax,DWORD PTR [ebx+0x18c]
  4272e9:	push   DWORD PTR [eax]
  4272eb:	mov    eax,DWORD PTR [ebp-0x40]
  4272ee:	call   eax
  4272f0:	mov    eax,DWORD PTR [ebp-0x4]
  4272f3:	xor    eax,esi
  4272f5:	add    eax,edi
  4272f7:	mov    DWORD PTR [ebp-0x34],eax
  4272fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4272fd:	mov    eax,DWORD PTR [ebp-0x14]
  427300:	xor    ecx,esi
  427302:	add    ecx,edi
  427304:	cmp    eax,ecx
  427306:	je     0x427351
  427308:	mov    DWORD PTR [ebp-0x3c],eax
  42730b:	jmp    0x42731c
  42730d:	mov    eax,DWORD PTR [eax]
  42730f:	mov    ecx,DWORD PTR [ebp-0x3c]
  427312:	mov    DWORD PTR [ebp-0x14],eax
  427315:	mov    eax,DWORD PTR [ebp-0x14]
  427318:	cmp    eax,ecx
  42731a:	je     0x427329
  42731c:	mov    edx,DWORD PTR [eax+0x18]
  42731f:	mov    ecx,DWORD PTR [ebx+0x18c]
  427325:	cmp    edx,DWORD PTR [ecx]
  427327:	jne    0x42730d
  427329:	mov    ecx,DWORD PTR [ebx+0x18c]
  42732f:	mov    edx,DWORD PTR [eax+0x18]
  427332:	cmp    edx,DWORD PTR [ecx]
  427334:	jne    0x427351
  427336:	mov    ecx,DWORD PTR [ebx+0x190]
  42733c:	mov    edx,DWORD PTR [ebp-0x20]
  42733f:	mov    edx,DWORD PTR [edx+0x28]
  427342:	add    edx,DWORD PTR [ecx]
  427344:	mov    DWORD PTR [eax+0x1c],edx
  427347:	mov    eax,DWORD PTR [ebp-0x24]
  42734a:	xor    eax,esi
  42734c:	add    eax,edi
  42734e:	mov    DWORD PTR [ebp-0x34],eax
  427351:	mov    eax,DWORD PTR [ebp+0xc]
  427354:	push   ebx
  427355:	push   eax
  427356:	push   DWORD PTR [ebp+0x20]
  427359:	call   0x426ad7
  42735e:	test   eax,eax
  427360:	je     0x427429
  427366:	push   DWORD PTR [ebp+0xc]
  427369:	mov    ecx,ebx
  42736b:	push   DWORD PTR [ebp+0x20]
  42736e:	call   0x426a30
  427373:	test   eax,eax
  427375:	je     0x427429
  42737b:	mov    eax,DWORD PTR [ebp+0xc]
  42737e:	mov    edx,DWORD PTR [ebp+0x20]
  427381:	mov    ecx,ebx
  427383:	call   0x426909
  427388:	test   eax,eax
  42738a:	je     0x427429
  427390:	push   ebx
  427391:	push   DWORD PTR [ebp+0x20]
  427394:	call   0x426dba
  427399:	test   eax,eax
  42739b:	je     0x427429
  4273a1:	mov    eax,DWORD PTR [ebx+0x18c]
  4273a7:	mov    edx,DWORD PTR [ebp+0x20]
  4273aa:	cmp    edx,DWORD PTR [eax]
  4273ac:	jne    0x4273c8
  4273ae:	mov    eax,DWORD PTR [ebx+0x1e0]
  4273b4:	lea    ecx,[ebp-0x18]
  4273b7:	push   ecx
  4273b8:	push   DWORD PTR [ebp-0x18]
  4273bb:	mov    ecx,DWORD PTR [ebp-0x20]
  4273be:	push   DWORD PTR [ecx+0x54]
  4273c1:	push   edx
  4273c2:	call   DWORD PTR [eax+0x1c]
  4273c5:	mov    edx,DWORD PTR [ebp+0x20]
  4273c8:	mov    eax,DWORD PTR [ebx+0x1c8]
  4273ce:	mov    eax,DWORD PTR [eax]
  4273d0:	xor    eax,esi
  4273d2:	add    eax,edi
  4273d4:	je     0x42740d
  4273d6:	mov    ecx,DWORD PTR [ebp+0xc]
  4273d9:	mov    eax,DWORD PTR [ecx+0x28]
  4273dc:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  4273e3:	mov    esi,DWORD PTR [ebp+0x8]
  4273e6:	push   DWORD PTR [ebp+0x14]
  4273e9:	xor    esi,0x8a8
  4273ef:	push   DWORD PTR [ebp+0x10]
  4273f2:	add    esi,0x72ef
  4273f8:	or     WORD PTR [ecx+0x16],si
  4273fc:	add    eax,edx
  4273fe:	push   edx
  4273ff:	call   eax
  427401:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  42740b:	jmp    0x427417
  42740d:	mov    eax,DWORD PTR [ebp+0xc]
  427410:	mov    eax,DWORD PTR [eax+0x28]
  427413:	add    eax,edx
  427415:	call   eax
  427417:	mov    DWORD PTR [ebp-0x8],eax
  42741a:	mov    eax,DWORD PTR [ebp-0x8]
  42741d:	mov    ecx,DWORD PTR [ebp+0x1c]
  427420:	mov    DWORD PTR [ecx],eax
  427422:	mov    DWORD PTR [ebp-0x30],0x1
  427429:	cmp    DWORD PTR [ebp-0x30],0x0
  42742d:	jne    0x427433
  42742f:	and    DWORD PTR [ebp+0x20],0x0
  427433:	mov    eax,DWORD PTR [ebp+0x20]
  427436:	jmp    0x42743a
  427438:	xor    eax,eax
  42743a:	pop    edi
  42743b:	pop    esi
  42743c:	pop    ebx
  42743d:	leave  
  42743e:	ret    0x1c
  427441:	push   ebp
  427442:	mov    ebp,esp
  427444:	movzx  edx,WORD PTR [ecx+0x6]
  427448:	movzx  eax,WORD PTR [ecx+0x14]
  42744c:	push   ebx
  42744d:	push   edi
  42744e:	xor    edi,edi
  427450:	lea    eax,[eax+ecx*1+0x18]
  427454:	test   edx,edx
  427456:	je     0x427477
  427458:	mov    ecx,DWORD PTR [eax+0xc]
  42745b:	lea    ebx,[ecx+esi*1]
  42745e:	cmp    DWORD PTR [ebp+0x8],ebx
  427461:	jb     0x42746f
  427463:	mov    ebx,DWORD PTR [eax+0x8]
  427466:	add    ebx,ecx
  427468:	add    ebx,esi
  42746a:	cmp    DWORD PTR [ebp+0x8],ebx
  42746d:	jb     0x427479
  42746f:	add    eax,0x28
  427472:	inc    edi
  427473:	cmp    edi,edx
  427475:	jb     0x427458
  427477:	xor    eax,eax
  427479:	pop    edi
  42747a:	pop    ebx
  42747b:	pop    ebp
  42747c:	ret    0x4
  42747f:	push   ebp
  427480:	mov    ebp,esp
  427482:	sub    esp,0x34
  427485:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  42748c:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427493:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  42749a:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  4274a1:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  4274a8:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  4274af:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  4274b6:	mov    DWORD PTR [ebp-0x10],eax
  4274b9:	mov    eax,DWORD PTR [ebp+0x8]
  4274bc:	mov    DWORD PTR [ebp-0x14],eax
  4274bf:	mov    eax,DWORD PTR [ebp-0xc]
  4274c2:	push   ebx
  4274c3:	mov    ecx,0x75108a8
  4274c8:	xor    eax,ecx
  4274ca:	push   esi
  4274cb:	mov    esi,DWORD PTR [ebp-0x10]
  4274ce:	mov    edx,0x3272ef
  4274d3:	add    eax,edx
  4274d5:	push   edi
  4274d6:	cmp    esi,eax
  4274d8:	je     0x4276b7
  4274de:	mov    eax,DWORD PTR [ebp-0xc]
  4274e1:	mov    esi,DWORD PTR [ebp-0x14]
  4274e4:	xor    eax,ecx
  4274e6:	add    eax,edx
  4274e8:	cmp    esi,eax
  4274ea:	je     0x4276b7
  4274f0:	mov    eax,DWORD PTR [ebp-0xc]
  4274f3:	xor    eax,ecx
  4274f5:	add    eax,edx
  4274f7:	mov    DWORD PTR [ebp-0x24],eax
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	xor    eax,ecx
  4274ff:	add    eax,edx
  427501:	mov    DWORD PTR [ebp-0x28],eax
  427504:	mov    edi,DWORD PTR [ebp-0x20]
  427507:	mov    ebx,DWORD PTR [ebp-0x8]
  42750a:	mov    esi,0x8a8
  42750f:	xor    edi,esi
  427511:	mov    eax,0x72ef
  427516:	xor    ebx,esi
  427518:	add    edi,eax
  42751a:	add    ebx,eax
  42751c:	sub    ebx,edi
  42751e:	mov    WORD PTR [ebp-0x8],bx
  427522:	jmp    0x4275e7
  427527:	mov    edi,DWORD PTR [ebp-0xc]
  42752a:	mov    bx,WORD PTR [ebp-0x4]
  42752e:	xor    edi,esi
  427530:	add    edi,eax
  427532:	cmp    bx,di
  427535:	je     0x427629
  42753b:	mov    edi,DWORD PTR [ebp-0xc]
  42753e:	mov    ebx,DWORD PTR [ebp+0xc]
  427541:	xor    edi,ecx
  427543:	add    edi,edx
  427545:	cmp    ebx,edi
  427547:	mov    di,WORD PTR [ebp-0x4]
  42754b:	mov    bx,WORD PTR [ebp+0x8]
  42754f:	je     0x4275ba
  427551:	cmp    bx,di
  427554:	je     0x4275c3
  427556:	mov    edi,DWORD PTR [ebp-0x20]
  427559:	mov    bx,WORD PTR [ebp+0x8]
  42755d:	xor    edi,esi
  42755f:	add    edi,eax
  427561:	cmp    bx,di
  427564:	jb     0x427584
  427566:	mov    edi,DWORD PTR [ebp-0x2c]
  427569:	mov    bx,WORD PTR [ebp+0x8]
  42756d:	xor    edi,esi
  42756f:	add    edi,eax
  427571:	cmp    bx,di
  427574:	ja     0x427584
  427576:	movzx  edi,WORD PTR [ebp+0x8]
  42757a:	movzx  ebx,WORD PTR [ebp-0x8]
  42757e:	add    edi,ebx
  427580:	mov    WORD PTR [ebp+0x8],di
  427584:	mov    edi,DWORD PTR [ebp-0x20]
  427587:	mov    bx,WORD PTR [ebp-0x4]
  42758b:	xor    edi,esi
  42758d:	add    edi,eax
  42758f:	cmp    bx,di
  427592:	jb     0x4275b2
  427594:	mov    edi,DWORD PTR [ebp-0x2c]
  427597:	mov    bx,WORD PTR [ebp-0x4]
  42759b:	xor    edi,esi
  42759d:	add    edi,eax
  42759f:	cmp    bx,di
  4275a2:	ja     0x4275b2
  4275a4:	movzx  edi,WORD PTR [ebp-0x4]
  4275a8:	movzx  ebx,WORD PTR [ebp-0x8]
  4275ac:	add    edi,ebx
  4275ae:	mov    WORD PTR [ebp-0x4],di
  4275b2:	mov    di,WORD PTR [ebp-0x4]
  4275b6:	mov    bx,WORD PTR [ebp+0x8]
  4275ba:	cmp    bx,di
  4275bd:	jne    0x4276b7
  4275c3:	mov    edi,DWORD PTR [ebp-0x1c]
  4275c6:	mov    ebx,DWORD PTR [ebp-0x10]
  4275c9:	xor    edi,ecx
  4275cb:	lea    edi,[edi+ebx*1+0x3272ef]
  4275d2:	mov    DWORD PTR [ebp-0x10],edi
  4275d5:	mov    edi,DWORD PTR [ebp-0x1c]
  4275d8:	mov    ebx,DWORD PTR [ebp-0x14]
  4275db:	xor    edi,ecx
  4275dd:	lea    edi,[edi+ebx*1+0x3272ef]
  4275e4:	mov    DWORD PTR [ebp-0x14],edi
  4275e7:	mov    edi,DWORD PTR [ebp-0x24]
  4275ea:	mov    ebx,DWORD PTR [ebp-0x10]
  4275ed:	mov    di,WORD PTR [ebx+edi*2]
  4275f1:	mov    WORD PTR [ebp+0x8],di
  4275f5:	mov    edi,DWORD PTR [ebp-0x28]
  4275f8:	mov    ebx,DWORD PTR [ebp-0x14]
  4275fb:	mov    di,WORD PTR [ebx+edi*2]
  4275ff:	mov    WORD PTR [ebp-0x4],di
  427603:	mov    edi,DWORD PTR [ebp-0xc]
  427606:	mov    bx,WORD PTR [ebp+0x8]
  42760a:	xor    edi,esi
  42760c:	add    edi,eax
  42760e:	cmp    bx,di
  427611:	jne    0x427527
  427617:	mov    eax,DWORD PTR [ebp-0x18]
  42761a:	mov    esi,DWORD PTR [ebp-0xc]
  42761d:	xor    eax,ecx
  42761f:	add    eax,edx
  427621:	imul   eax,esi
  427624:	mov    DWORD PTR [ebp-0xc],eax
  427627:	jmp    0x42763b
  427629:	mov    eax,DWORD PTR [ebp-0xc]
  42762c:	mov    esi,DWORD PTR [ebp-0x18]
  42762f:	xor    eax,ecx
  427631:	lea    eax,[eax+esi*1+0x3272ef]
  427638:	mov    DWORD PTR [ebp-0x18],eax
  42763b:	mov    eax,DWORD PTR [ebp-0x24]
  42763e:	sub    eax,edx
  427640:	xor    eax,ecx
  427642:	mov    DWORD PTR [ebp-0x30],eax
  427645:	mov    eax,DWORD PTR [ebp-0x28]
  427648:	sub    eax,edx
  42764a:	xor    eax,ecx
  42764c:	mov    DWORD PTR [ebp-0x34],eax
  42764f:	mov    eax,DWORD PTR [ebp-0x34]
  427652:	mov    esi,DWORD PTR [ebp-0x1c]
  427655:	xor    esi,ecx
  427657:	add    esi,edx
  427659:	xor    eax,ecx
  42765b:	add    eax,0x3272ef
  427660:	imul   esi,eax
  427663:	mov    eax,DWORD PTR [ebp-0x14]
  427666:	movzx  eax,WORD PTR [esi+eax*1]
  42766a:	mov    esi,DWORD PTR [ebp-0x30]
  42766d:	mov    edi,DWORD PTR [ebp-0x1c]
  427670:	xor    esi,ecx
  427672:	add    esi,edx
  427674:	xor    edi,ecx
  427676:	add    edi,edx
  427678:	imul   edi,esi
  42767b:	mov    esi,DWORD PTR [ebp-0x10]
  42767e:	movzx  esi,WORD PTR [edi+esi*1]
  427682:	sub    eax,edx
  427684:	sub    esi,edx
  427686:	xor    eax,ecx
  427688:	xor    esi,ecx
  42768a:	cmp    esi,eax
  42768c:	jne    0x4276b7
  42768e:	mov    eax,DWORD PTR [ebp-0x30]
  427691:	mov    esi,DWORD PTR [ebp-0x1c]
  427694:	xor    eax,ecx
  427696:	add    eax,0x3272ef
  42769b:	xor    esi,ecx
  42769d:	add    esi,edx
  42769f:	imul   esi,eax
  4276a2:	mov    eax,DWORD PTR [ebp-0x10]
  4276a5:	movzx  eax,WORD PTR [esi+eax*1]
  4276a9:	mov    esi,DWORD PTR [ebp-0xc]
  4276ac:	sub    eax,edx
  4276ae:	xor    eax,ecx
  4276b0:	cmp    eax,esi
  4276b2:	mov    eax,DWORD PTR [ebp-0xc]
  4276b5:	je     0x4276ba
  4276b7:	mov    eax,DWORD PTR [ebp-0x18]
  4276ba:	pop    edi
  4276bb:	xor    eax,ecx
  4276bd:	pop    esi
  4276be:	add    eax,edx
  4276c0:	pop    ebx
  4276c1:	leave  
  4276c2:	ret    0x8
  4276c5:	push   ebp
  4276c6:	mov    ebp,esp
  4276c8:	push   ecx
  4276c9:	mov    cx,WORD PTR [eax]
  4276cc:	push   esi
  4276cd:	mov    esi,0x3b59
  4276d2:	sub    cx,si
  4276d5:	mov    esi,0x8a96
  4276da:	xor    cx,si
  4276dd:	mov    esi,0x4e31
  4276e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4276e9:	mov    edx,0xf89c85b9
  4276ee:	cmp    cx,si
  4276f1:	je     0x427750
  4276f3:	push   ebx
  4276f4:	push   edi
  4276f5:	movzx  ecx,cx
  4276f8:	mov    edi,0xffcd8d11
  4276fd:	mov    esi,0x75108a8
  427702:	mov    ebx,0x4f95
  427707:	cmp    cx,bx
  42770a:	jne    0x42770f
  42770c:	mov    DWORD PTR [ebp-0x4],edx
  42770f:	lea    edx,[edi+0x1]
  427712:	xor    edx,esi
  427714:	mov    edi,edx
  427716:	xor    edi,esi
  427718:	mov    cx,WORD PTR [eax+edi*2+0x64e5de]
  427720:	mov    ebx,0x3b59
  427725:	sub    cx,bx
  427728:	mov    ebx,0x8a96
  42772d:	xor    cx,bx
  427730:	mov    ebx,0x4e31
  427735:	cmp    cx,bx
  427738:	jne    0x427702
  42773a:	mov    ecx,DWORD PTR [ebp-0x4]
  42773d:	pop    edi
  42773e:	pop    ebx
  42773f:	cmp    ecx,0xf89c85b8
  427745:	je     0x427750
  427747:	xor    ecx,esi
  427749:	lea    eax,[eax+ecx*2+0x64e5e0]
  427750:	pop    esi
  427751:	leave  
  427752:	ret    
  427753:	push   ebp
  427754:	mov    ebp,esp
  427756:	push   ecx
  427757:	push   esi
  427758:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  42775f:	mov    esi,0xf89c85b9
  427764:	call   0x4276c5
  427769:	mov    cl,BYTE PTR [eax]
  42776b:	inc    cl
  42776d:	xor    cl,0x7b
  427770:	cmp    cl,0x7a
  427773:	je     0x4277d8
  427775:	push   ebx
  427776:	push   edi
  427777:	mov    edx,eax
  427779:	mov    edi,0xffcd8d11
  42777e:	mov    ecx,0x75108a8
  427783:	mov    dx,WORD PTR [edx]
  427786:	mov    ebx,0x3b59
  42778b:	sub    dx,bx
  42778e:	mov    ebx,0x8a96
  427793:	xor    dx,bx
  427796:	mov    ebx,0x4e43
  42779b:	cmp    dx,bx
  42779e:	jne    0x4277a3
  4277a0:	mov    DWORD PTR [ebp-0x4],esi
  4277a3:	lea    esi,[edi+0x1]
  4277a6:	xor    esi,ecx
  4277a8:	mov    edi,esi
  4277aa:	xor    edi,ecx
  4277ac:	lea    edx,[eax+edi*2+0x64e5de]
  4277b3:	mov    bl,BYTE PTR [edx]
  4277b5:	inc    bl
  4277b7:	xor    bl,0x7b
  4277ba:	cmp    bl,0x7a
  4277bd:	jne    0x427783
  4277bf:	mov    edx,DWORD PTR [ebp-0x4]
  4277c2:	pop    edi
  4277c3:	pop    ebx
  4277c4:	cmp    edx,0xf89c85b8
  4277ca:	je     0x4277d8
  4277cc:	xor    edx,ecx
  4277ce:	xor    ecx,ecx
  4277d0:	mov    WORD PTR [eax+edx*2+0x64e5de],cx
  4277d8:	pop    esi
  4277d9:	leave  
  4277da:	ret    
  4277db:	push   ebp
  4277dc:	mov    ebp,esp
  4277de:	push   ecx
  4277df:	push   esi
  4277e0:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4277e7:	mov    esi,0xf89c85b9
  4277ec:	call   0x4276c5
  4277f1:	mov    cx,WORD PTR [eax]
  4277f4:	mov    edx,0x3b59
  4277f9:	sub    cx,dx
  4277fc:	mov    edx,0x8a96
  427801:	xor    cx,dx
  427804:	mov    edx,0x4e31
  427809:	cmp    cx,dx
  42780c:	je     0x427865
  42780e:	push   ebx
  42780f:	push   edi
  427810:	movzx  ecx,cx
  427813:	mov    edx,0xffcd8d11
  427818:	mov    edi,0x75108a8
  42781d:	mov    ebx,0x4e43
  427822:	cmp    cx,bx
  427825:	jne    0x42782a
  427827:	mov    DWORD PTR [ebp-0x4],esi
  42782a:	lea    esi,[edx+0x1]
  42782d:	xor    esi,edi
  42782f:	mov    edx,esi
  427831:	xor    edx,edi
  427833:	mov    cx,WORD PTR [eax+edx*2+0x64e5de]
  42783b:	mov    ebx,0x3b59
  427840:	sub    cx,bx
  427843:	mov    ebx,0x8a96
  427848:	xor    cx,bx
  42784b:	mov    ebx,0x4e31
  427850:	cmp    cx,bx
  427853:	jne    0x42781d
  427855:	cmp    DWORD PTR [ebp-0x4],0xf89c85b8
  42785c:	pop    edi
  42785d:	pop    ebx
  42785e:	je     0x427865
  427860:	xor    eax,eax
  427862:	inc    eax
  427863:	jmp    0x427867
  427865:	xor    eax,eax
  427867:	pop    esi
  427868:	leave  
  427869:	ret    
  42786a:	push   ebp
  42786b:	mov    ebp,esp
  42786d:	push   ecx
  42786e:	mov    eax,DWORD PTR [ebp+0x8]
  427871:	movzx  ecx,WORD PTR [eax]
  427874:	push   esi
  427875:	lea    eax,[ecx-0x3b59]
  42787b:	mov    esi,0x8a96
  427880:	push   edi
  427881:	xor    eax,esi
  427883:	mov    edi,0x4e31
  427888:	mov    DWORD PTR [ebp-0x4],edx
  42788b:	cmp    ax,di
  42788e:	je     0x4278bb
  427890:	mov    eax,DWORD PTR [ebp+0x8]
  427893:	sub    eax,edx
  427895:	mov    DWORD PTR [ebp+0x8],eax
  427898:	jmp    0x42789d
  42789a:	mov    eax,DWORD PTR [ebp+0x8]
  42789d:	mov    WORD PTR [edx],cx
  4278a0:	add    edx,0x2
  4278a3:	movzx  edi,WORD PTR [eax+edx*1]
  4278a7:	mov    ecx,edi
  4278a9:	add    edi,0xffffc4a7
  4278af:	xor    edi,esi
  4278b1:	mov    eax,0x4e31
  4278b6:	cmp    di,ax
  4278b9:	jne    0x42789a
  4278bb:	xor    eax,eax
  4278bd:	pop    edi
  4278be:	mov    WORD PTR [edx],ax
  4278c1:	mov    eax,DWORD PTR [ebp-0x4]
  4278c4:	pop    esi
  4278c5:	leave  
  4278c6:	ret    0x4
  4278c9:	push   ebp
  4278ca:	mov    ebp,esp
  4278cc:	sub    esp,0x18
  4278cf:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  4278d6:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4278dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4278e0:	push   esi
  4278e1:	mov    eax,0x75108a8
  4278e6:	xor    ecx,eax
  4278e8:	mov    esi,0x3272ef
  4278ed:	add    ecx,esi
  4278ef:	mov    DWORD PTR [ebp-0x4],ecx
  4278f2:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4278f9:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  427900:	push   edi
  427901:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427908:	jmp    0x4279a9
  42790d:	mov    ecx,DWORD PTR [ebp-0x4]
  427910:	mov    edx,DWORD PTR [ebp+0x10]
  427913:	sub    edx,ecx
  427915:	mov    ecx,DWORD PTR [ebp-0xc]
  427918:	xor    ecx,eax
  42791a:	add    ecx,esi
  42791c:	cmp    edx,ecx
  42791e:	jbe    0x42793b
  427920:	mov    edx,DWORD PTR [ebp-0x4]
  427923:	add    edx,DWORD PTR [ebp+0x8]
  427926:	mov    ecx,DWORD PTR [ebp-0x4]
  427929:	add    ecx,DWORD PTR [ebp+0xc]
  42792c:	mov    edi,DWORD PTR [ecx]
  42792e:	mov    DWORD PTR [edx],edi
  427930:	mov    ecx,DWORD PTR [ecx+0x4]
  427933:	mov    DWORD PTR [edx+0x4],ecx
  427936:	mov    ecx,DWORD PTR [ebp-0xc]
  427939:	jmp    0x427988
  42793b:	mov    ecx,DWORD PTR [ebp-0x4]
  42793e:	mov    edx,DWORD PTR [ebp+0x10]
  427941:	sub    edx,ecx
  427943:	mov    ecx,DWORD PTR [ebp-0x10]
  427946:	xor    ecx,eax
  427948:	add    ecx,esi
  42794a:	cmp    edx,ecx
  42794c:	mov    ecx,DWORD PTR [ebp-0x4]
  42794f:	jbe    0x427963
  427951:	add    ecx,DWORD PTR [ebp+0x8]
  427954:	mov    edx,DWORD PTR [ebp-0x4]
  427957:	add    edx,DWORD PTR [ebp+0xc]
  42795a:	mov    edx,DWORD PTR [edx]
  42795c:	mov    DWORD PTR [ecx],edx
  42795e:	mov    ecx,DWORD PTR [ebp-0x10]
  427961:	jmp    0x427988
  427963:	mov    edx,DWORD PTR [ebp+0x10]
  427966:	sub    edx,ecx
  427968:	mov    ecx,DWORD PTR [ebp-0x14]
  42796b:	xor    ecx,eax
  42796d:	add    ecx,esi
  42796f:	cmp    edx,ecx
  427971:	mov    ecx,DWORD PTR [ebp-0x4]
  427974:	jbe    0x427999
  427976:	add    ecx,DWORD PTR [ebp+0x8]
  427979:	mov    edx,DWORD PTR [ebp-0x4]
  42797c:	add    edx,DWORD PTR [ebp+0xc]
  42797f:	mov    dx,WORD PTR [edx]
  427982:	mov    WORD PTR [ecx],dx
  427985:	mov    ecx,DWORD PTR [ebp-0x14]
  427988:	mov    edx,DWORD PTR [ebp-0x4]
  42798b:	xor    ecx,eax
  42798d:	lea    ecx,[ecx+edx*1+0x3272ef]
  427994:	mov    DWORD PTR [ebp-0x4],ecx
  427997:	jmp    0x4279a9
  427999:	add    ecx,DWORD PTR [ebp+0x8]
  42799c:	mov    edx,DWORD PTR [ebp-0x4]
  42799f:	add    edx,DWORD PTR [ebp+0xc]
  4279a2:	mov    dl,BYTE PTR [edx]
  4279a4:	mov    BYTE PTR [ecx],dl
  4279a6:	inc    DWORD PTR [ebp-0x4]
  4279a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4279ac:	mov    edx,DWORD PTR [ebp+0x10]
  4279af:	xor    ecx,eax
  4279b1:	add    ecx,esi
  4279b3:	imul   ecx,edx
  4279b6:	mov    edx,DWORD PTR [ebp-0x8]
  4279b9:	mov    edi,DWORD PTR [ebp-0x4]
  4279bc:	xor    edx,eax
  4279be:	lea    edx,[edx+edi*1+0x3272ef]
  4279c5:	cmp    edx,ecx
  4279c7:	jb     0x42790d
  4279cd:	pop    edi
  4279ce:	pop    esi
  4279cf:	leave  
  4279d0:	ret    0xc
  4279d3:	push   ebp
  4279d4:	mov    ebp,esp
  4279d6:	sub    esp,0xc
  4279d9:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4279e0:	push   esi
  4279e1:	mov    esi,eax
  4279e3:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  4279ea:	mov    edx,DWORD PTR [ebp-0x4]
  4279ed:	mov    eax,0x75108a8
  4279f2:	xor    edx,eax
  4279f4:	mov    ecx,0x3272ef
  4279f9:	add    edx,ecx
  4279fb:	cmp    esi,edx
  4279fd:	je     0x427a3f
  4279ff:	push   ebx
  427a00:	push   edi
  427a01:	mov    edx,DWORD PTR [ebp-0x8]
  427a04:	mov    ebx,DWORD PTR [ebp+0x8]
  427a07:	xor    edx,eax
  427a09:	mov    edi,0xffcd8d11
  427a0e:	sub    edi,edx
  427a10:	add    esi,edi
  427a12:	lea    edx,[esi-0x3272ef]
  427a18:	xor    edx,eax
  427a1a:	mov    DWORD PTR [ebp-0xc],edx
  427a1d:	mov    edx,DWORD PTR [ebp-0x4]
  427a20:	mov    edi,DWORD PTR [ebp-0xc]
  427a23:	xor    dl,0xa8
  427a26:	sub    dl,0x11
  427a29:	xor    edi,eax
  427a2b:	mov    BYTE PTR [edi+ebx*1+0x3272ef],dl
  427a32:	mov    edx,DWORD PTR [ebp-0x4]
  427a35:	xor    edx,eax
  427a37:	add    edx,ecx
  427a39:	cmp    esi,edx
  427a3b:	jne    0x427a01
  427a3d:	pop    edi
  427a3e:	pop    ebx
  427a3f:	pop    esi
  427a40:	leave  
  427a41:	ret    0x4
  427a44:	push   ebp
  427a45:	mov    ebp,esp
  427a47:	sub    esp,0x21c
  427a4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427a54:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427a5b:	mov    eax,DWORD PTR [ebp+0x10]
  427a5e:	mov    eax,DWORD PTR [ebp-0x4]
  427a61:	mov    ecx,DWORD PTR [ebp+0x8]
  427a64:	push   esi
  427a65:	push   edi
  427a66:	mov    edi,0x75108a8
  427a6b:	xor    eax,edi
  427a6d:	mov    esi,0x3272ef
  427a72:	add    eax,esi
  427a74:	cmp    eax,ecx
  427a76:	mov    eax,DWORD PTR [ebp-0x4]
  427a79:	jne    0x427a84
  427a7b:	xor    eax,edi
  427a7d:	add    eax,esi
  427a7f:	jmp    0x427b30
  427a84:	mov    ecx,DWORD PTR [ebp+0xc]
  427a87:	xor    eax,edi
  427a89:	add    eax,esi
  427a8b:	cmp    eax,ecx
  427a8d:	jne    0x427a94
  427a8f:	mov    eax,DWORD PTR [ebp-0x4]
  427a92:	jmp    0x427a7b
  427a94:	lea    eax,[ebp-0x21c]
  427a9a:	mov    DWORD PTR [ebp-0x8],eax
  427a9d:	mov    eax,DWORD PTR [ebp+0xc]
  427aa0:	mov    DWORD PTR [ebp-0x10],eax
  427aa3:	mov    eax,DWORD PTR [ebp-0x4]
  427aa6:	xor    eax,edi
  427aa8:	add    eax,esi
  427aaa:	mov    DWORD PTR [ebp+0x10],eax
  427aad:	mov    eax,DWORD PTR [ebp+0xc]
  427ab0:	push   ebx
  427ab1:	call   0x4277db
  427ab6:	mov    ebx,eax
  427ab8:	mov    eax,DWORD PTR [ebp+0x8]
  427abb:	mov    eax,DWORD PTR [eax+0x14]
  427abe:	jmp    0x427b18
  427ac0:	mov    eax,DWORD PTR [ebp+0xc]
  427ac3:	sub    eax,0x8
  427ac6:	mov    DWORD PTR [ebp-0xc],eax
  427ac9:	mov    eax,DWORD PTR [ebp-0xc]
  427acc:	mov    eax,DWORD PTR [eax+0x28]
  427acf:	call   0x4276c5
  427ad4:	mov    DWORD PTR [ebp+0x10],eax
  427ad7:	push   DWORD PTR [ebp+0x10]
  427ada:	mov    edx,DWORD PTR [ebp-0x8]
  427add:	call   0x42786a
  427ae2:	mov    eax,DWORD PTR [ebp-0x4]
  427ae5:	xor    eax,edi
  427ae7:	add    eax,esi
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af5
  427aed:	mov    eax,DWORD PTR [ebp-0x8]
  427af0:	call   0x427753
  427af5:	mov    eax,DWORD PTR [ebp-0x14]
  427af8:	xor    eax,edi
  427afa:	add    eax,esi
  427afc:	push   eax
  427afd:	push   DWORD PTR [ebp-0x10]
  427b00:	mov    eax,DWORD PTR [ebp-0x8]
  427b03:	call   0x42747f
  427b08:	mov    ecx,DWORD PTR [ebp-0x4]
  427b0b:	xor    ecx,edi
  427b0d:	add    ecx,esi
  427b0f:	cmp    eax,ecx
  427b11:	je     0x427b36
  427b13:	mov    eax,DWORD PTR [ebp+0xc]
  427b16:	mov    eax,DWORD PTR [eax]
  427b18:	mov    DWORD PTR [ebp+0xc],eax
  427b1b:	mov    eax,DWORD PTR [ebp+0x8]
  427b1e:	mov    ecx,DWORD PTR [ebp+0xc]
  427b21:	add    eax,0x14
  427b24:	cmp    ecx,eax
  427b26:	jne    0x427ac0
  427b28:	mov    eax,DWORD PTR [ebp-0x4]
  427b2b:	xor    eax,edi
  427b2d:	add    eax,esi
  427b2f:	pop    ebx
  427b30:	pop    edi
  427b31:	pop    esi
  427b32:	leave  
  427b33:	ret    0xc
  427b36:	mov    eax,DWORD PTR [ebp-0xc]
  427b39:	mov    eax,DWORD PTR [eax+0x18]
  427b3c:	jmp    0x427b2f
  427b3e:	push   ebp
  427b3f:	mov    ebp,esp
  427b41:	mov    eax,DWORD PTR [ebp+0xc]
  427b44:	sub    esp,0x10
  427b47:	cmp    DWORD PTR [ebp+0x8],0x0
  427b4b:	push   ebx
  427b4c:	push   esi
  427b4d:	push   edi
  427b4e:	je     0x427c03
  427b54:	test   eax,eax
  427b56:	je     0x427c03
  427b5c:	movzx  eax,WORD PTR [eax+0x20]
  427b60:	mov    ecx,eax
  427b62:	mov    DWORD PTR [ebp-0x10],eax
  427b65:	xor    edx,edx
  427b67:	and    DWORD PTR [ebp-0x8],edx
  427b6a:	mov    eax,0x8a96
  427b6f:	xor    ecx,eax
  427b71:	add    ecx,0x3b59
  427b77:	mov    DWORD PTR [ebp-0xc],ecx
  427b7a:	and    DWORD PTR [ebp-0x4],0x0
  427b7e:	xor    ecx,ecx
  427b80:	push   0x78
  427b82:	pop    edi
  427b83:	cmp    cx,WORD PTR [ebp-0xc]
  427b87:	jae    0x427bed
  427b89:	lea    esi,[edx-0x3b59]
  427b8f:	xor    esi,eax
  427b91:	movzx  ecx,WORD PTR [ebp-0x4]
  427b95:	mov    ebx,DWORD PTR [ebp+0xc]
  427b98:	lea    ecx,[ebx+ecx*4]
  427b9b:	cmp    WORD PTR [ecx+0x2],si
  427b9f:	jne    0x427bd8
  427ba1:	movzx  ecx,WORD PTR [ecx]
  427ba4:	mov    edi,0x4e31
  427ba9:	cmp    cx,di
  427bac:	jne    0x427bba
  427bae:	mov    ebx,DWORD PTR [ebp+0x8]
  427bb1:	movzx  edi,dx
  427bb4:	cmp    BYTE PTR [edi+ebx*1],0x0
  427bb8:	je     0x427be7
  427bba:	mov    ebx,DWORD PTR [ebp+0x8]
  427bbd:	movzx  edi,dx
  427bc0:	movsx  di,BYTE PTR [edi+ebx*1]
  427bc5:	mov    ebx,0x3b59
  427bca:	sub    di,bx
  427bcd:	xor    di,ax
  427bd0:	cmp    cx,di
  427bd3:	je     0x427be7
  427bd5:	push   0x7a
  427bd7:	pop    edi
  427bd8:	inc    DWORD PTR [ebp-0x4]
  427bdb:	mov    cx,WORD PTR [ebp-0xc]
  427bdf:	cmp    WORD PTR [ebp-0x4],cx
  427be3:	jb     0x427b91
  427be5:	jmp    0x427bed
  427be7:	inc    DWORD PTR [ebp-0x8]
  427bea:	push   0x79
  427bec:	pop    edi
  427bed:	mov    esi,DWORD PTR [ebp+0x8]
  427bf0:	movzx  ecx,dx
  427bf3:	cmp    BYTE PTR [ecx+esi*1],0x0
  427bf7:	je     0x427c0c
  427bf9:	inc    edx
  427bfa:	cmp    edi,0x7a
  427bfd:	jne    0x427b7a
  427c03:	xor    eax,eax
  427c05:	pop    edi
  427c06:	pop    esi
  427c07:	pop    ebx
  427c08:	leave  
  427c09:	ret    0x8
  427c0c:	mov    ecx,DWORD PTR [ebp-0x8]
  427c0f:	add    ecx,0xffffc4a7
  427c15:	xor    cx,ax
  427c18:	xor    eax,eax
  427c1a:	cmp    cx,WORD PTR [ebp-0x10]
  427c1e:	sete   al
  427c21:	jmp    0x427c05
  427c23:	push   ebp
  427c24:	mov    ebp,esp
  427c26:	sub    esp,0x50
  427c29:	push   edi
  427c2a:	mov    edi,eax
  427c2c:	mov    eax,DWORD PTR [edi+0x1a8]
  427c32:	cmp    DWORD PTR [eax],0x0
  427c35:	jne    0x427c3e
  427c37:	xor    eax,eax
  427c39:	jmp    0x427d6f
  427c3e:	push   DWORD PTR [ebp+0x8]
  427c41:	push   0x2c
  427c43:	pop    eax
  427c44:	call   0x4279d3
  427c49:	mov    edx,DWORD PTR [edi+0x1ac]
  427c4f:	lea    eax,[edi+0x22]
  427c52:	mov    DWORD PTR [ebp-0x4c],eax
  427c55:	lea    eax,[edi+0x44]
  427c58:	mov    DWORD PTR [ebp-0x48],eax
  427c5b:	lea    eax,[edi+0x66]
  427c5e:	mov    DWORD PTR [ebp-0x44],eax
  427c61:	lea    eax,[edi+0x88]
  427c67:	mov    DWORD PTR [ebp-0x40],eax
  427c6a:	lea    eax,[edi+0xaa]
  427c70:	mov    DWORD PTR [ebp-0x3c],eax
  427c73:	lea    eax,[edi+0xcc]
  427c79:	mov    DWORD PTR [ebp-0x38],eax
  427c7c:	lea    eax,[edi+0xee]
  427c82:	mov    DWORD PTR [ebp-0x34],eax
  427c85:	lea    eax,[edi+0x110]
  427c8b:	mov    DWORD PTR [ebp-0x30],eax
  427c8e:	lea    eax,[edi+0x132]
  427c94:	mov    DWORD PTR [ebp-0x2c],eax
  427c97:	lea    eax,[edi+0x154]
  427c9d:	push   edi
  427c9e:	mov    DWORD PTR [ebp-0x50],edi
  427ca1:	mov    DWORD PTR [ebp-0x28],eax
  427ca4:	call   0x427da3
  427ca9:	push   eax
  427caa:	mov    eax,DWORD PTR [edi+0x1a8]
  427cb0:	push   DWORD PTR [eax]
  427cb2:	call   0x427a44
  427cb7:	mov    DWORD PTR [ebp-0x10],eax
  427cba:	test   eax,eax
  427cbc:	je     0x427d6f
  427cc2:	mov    ecx,DWORD PTR [eax+0x3c]
  427cc5:	push   ebx
  427cc6:	push   esi
  427cc7:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427ccb:	add    esi,eax
  427ccd:	mov    edi,DWORD PTR [esi+0x24]
  427cd0:	mov    ecx,DWORD PTR [esi+0x1c]
  427cd3:	mov    edx,DWORD PTR [esi+0x20]
  427cd6:	mov    ebx,DWORD PTR [esi+0x18]
  427cd9:	add    edi,eax
  427cdb:	mov    DWORD PTR [ebp-0x20],edi
  427cde:	mov    edi,DWORD PTR [esi+0x14]
  427ce1:	add    ecx,eax
  427ce3:	add    edx,eax
  427ce5:	mov    DWORD PTR [ebp-0xc],ecx
  427ce8:	mov    DWORD PTR [ebp-0x1c],edx
  427ceb:	mov    DWORD PTR [ebp-0x8],edi
  427cee:	cmp    edi,ebx
  427cf0:	ja     0x427cf5
  427cf2:	mov    DWORD PTR [ebp-0x8],ebx
  427cf5:	xor    ebx,ebx
  427cf7:	mov    DWORD PTR [ebp-0x18],ebx
  427cfa:	cmp    DWORD PTR [ebp-0x8],ebx
  427cfd:	jbe    0x427d6d
  427cff:	jmp    0x427d04
  427d01:	mov    edx,DWORD PTR [ebp-0x1c]
  427d04:	mov    edi,DWORD PTR [ebp-0x20]
  427d07:	movzx  edi,WORD PTR [edi+ebx*2]
  427d0b:	cmp    ebx,DWORD PTR [esi+0x18]
  427d0e:	jae    0x427d6d
  427d10:	cmp    edi,DWORD PTR [esi+0x14]
  427d13:	jae    0x427d6d
  427d15:	mov    ebx,DWORD PTR [edx+ebx*4]
  427d18:	mov    edx,DWORD PTR [ebp+0x8]
  427d1b:	mov    edi,DWORD PTR [ecx+edi*4]
  427d1e:	mov    DWORD PTR [ebp-0x4],edx
  427d21:	lea    edx,[ebp-0x50]
  427d24:	add    ebx,eax
  427d26:	add    edi,eax
  427d28:	sub    edx,DWORD PTR [ebp+0x8]
  427d2b:	mov    DWORD PTR [ebp-0x14],0xb
  427d32:	mov    DWORD PTR [ebp-0x24],edx
  427d35:	mov    edx,DWORD PTR [ebp-0x4]
  427d38:	cmp    DWORD PTR [edx],0x0
  427d3b:	jne    0x427d58
  427d3d:	mov    eax,DWORD PTR [ebp-0x24]
  427d40:	push   DWORD PTR [eax+edx*1]
  427d43:	push   ebx
  427d44:	call   0x427b3e
  427d49:	mov    ecx,DWORD PTR [ebp-0xc]
  427d4c:	test   eax,eax
  427d4e:	je     0x427d55
  427d50:	mov    eax,DWORD PTR [ebp-0x4]
  427d53:	mov    DWORD PTR [eax],edi
  427d55:	mov    eax,DWORD PTR [ebp-0x10]
  427d58:	add    DWORD PTR [ebp-0x4],0x4
  427d5c:	dec    DWORD PTR [ebp-0x14]
  427d5f:	jne    0x427d35
  427d61:	mov    ebx,DWORD PTR [ebp-0x18]
  427d64:	inc    ebx
  427d65:	mov    DWORD PTR [ebp-0x18],ebx
  427d68:	cmp    ebx,DWORD PTR [ebp-0x8]
  427d6b:	jb     0x427d01
  427d6d:	pop    esi
  427d6e:	pop    ebx
  427d6f:	pop    edi
  427d70:	leave  
  427d71:	ret    0x4
  427d74:	push   ebp
  427d75:	mov    ebp,esp
  427d77:	mov    eax,DWORD PTR [ebp+0x8]
  427d7a:	push   esi
  427d7b:	push   DWORD PTR [eax+0x1e0]
  427d81:	lea    esi,[eax+0x198]
  427d87:	mov    eax,DWORD PTR [ebp+0x8]
  427d8a:	call   0x427c23
  427d8f:	mov    ecx,DWORD PTR [esi]
  427d91:	mov    DWORD PTR [ecx],eax
  427d93:	mov    eax,DWORD PTR [esi]
  427d95:	xor    ecx,ecx
  427d97:	cmp    DWORD PTR [eax],ecx
  427d99:	pop    esi
  427d9a:	setne  cl
  427d9d:	mov    eax,ecx
  427d9f:	pop    ebp
  427da0:	ret    0x4
  427da3:	mov    ecx,DWORD PTR [edi+0x188]
  427da9:	push   ebx
  427daa:	jmp    0x427dbf
  427dac:	xor    eax,0x8a96
  427db1:	add    eax,0x3b59
  427db6:	mov    WORD PTR [ecx],ax
  427db9:	add    ecx,0x2
  427dbc:	add    edx,0x2
  427dbf:	movzx  eax,WORD PTR [edx]
  427dc2:	mov    ebx,0x4e31
  427dc7:	cmp    ax,bx
  427dca:	jne    0x427dac
  427dcc:	xor    eax,eax
  427dce:	mov    WORD PTR [ecx],ax
  427dd1:	mov    eax,DWORD PTR [edi+0x188]
  427dd7:	pop    ebx
  427dd8:	ret    
  427dd9:	push   edi
  427dda:	mov    edi,eax
  427ddc:	mov    eax,DWORD PTR [esi+0x188]
  427de2:	shl    edi,0x6
  427de5:	add    eax,edi
  427de7:	jmp    0x427df2
  427de9:	xor    cl,0x7b
  427dec:	dec    cl
  427dee:	mov    BYTE PTR [eax],cl
  427df0:	inc    eax
  427df1:	inc    edx
  427df2:	mov    cl,BYTE PTR [edx]
  427df4:	cmp    cl,0x7a
  427df7:	jne    0x427de9
  427df9:	mov    BYTE PTR [eax],0x0
  427dfc:	mov    eax,DWORD PTR [esi+0x188]
  427e02:	add    eax,edi
  427e04:	pop    edi
  427e05:	ret    
  427e06:	push   ebp
  427e07:	mov    ebp,esp
  427e09:	sub    esp,0x14
  427e0c:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427e13:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  427e1a:	mov    eax,DWORD PTR [ebx]
  427e1c:	mov    DWORD PTR [ebp-0x8],eax
  427e1f:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427e26:	push   esi
  427e27:	push   edi
  427e28:	mov    DWORD PTR [ebp-0x14],0xead71899
  427e2f:	mov    edi,DWORD PTR [ebp-0x4]
  427e32:	mov    ecx,DWORD PTR [ebp-0x10]
  427e35:	mov    eax,0x75108a8
  427e3a:	xor    edi,eax
  427e3c:	mov    edx,0x3272ef
  427e41:	xor    ecx,eax
  427e43:	add    edi,edx
  427e45:	add    ecx,edx
  427e47:	imul   edi,ecx
  427e4a:	jmp    0x427e92
  427e4c:	mov    ecx,DWORD PTR [ebp-0x8]
  427e4f:	mov    esi,DWORD PTR [ebp-0x4]
  427e52:	xor    ecx,eax
  427e54:	xor    esi,eax
  427e56:	add    ecx,edx
  427e58:	add    esi,edx
  427e5a:	test   esi,ecx
  427e5c:	mov    esi,DWORD PTR [ebp-0x8]
  427e5f:	mov    ecx,DWORD PTR [ebp-0x4]
  427e62:	je     0x427e79
  427e64:	xor    ecx,eax
  427e66:	xor    esi,eax
  427e68:	add    ecx,edx
  427e6a:	add    esi,edx
  427e6c:	shr    esi,cl
  427e6e:	mov    ecx,DWORD PTR [ebp-0x14]
  427e71:	xor    ecx,eax
  427e73:	add    ecx,edx
  427e75:	xor    esi,ecx
  427e77:	jmp    0x427e83
  427e79:	xor    esi,eax
  427e7b:	xor    ecx,eax
  427e7d:	add    esi,edx
  427e7f:	add    ecx,edx
  427e81:	shr    esi,cl
  427e83:	mov    DWORD PTR [ebp-0x8],esi
  427e86:	mov    ecx,DWORD PTR [ebp-0x4]
  427e89:	xor    ecx,eax
  427e8b:	lea    edi,[edi+ecx*1+0x3272ef]
  427e92:	mov    ecx,DWORD PTR [ebp-0xc]
  427e95:	mov    esi,DWORD PTR [ebp-0x4]
  427e98:	xor    esi,eax
  427e9a:	xor    ecx,eax
  427e9c:	sub    ecx,esi
  427e9e:	cmp    edi,ecx
  427ea0:	jbe    0x427e4c
  427ea2:	mov    eax,DWORD PTR [ebp-0x8]
  427ea5:	pop    edi
  427ea6:	mov    DWORD PTR [ebx],eax
  427ea8:	mov    eax,DWORD PTR [ebp-0x8]
  427eab:	pop    esi
  427eac:	leave  
  427ead:	ret    
  427eae:	push   ebp
  427eaf:	mov    ebp,esp
  427eb1:	sub    esp,0x38
  427eb4:	push   ebx
  427eb5:	mov    ebx,0xf89c85b9
  427eba:	mov    DWORD PTR [ebp-0x4],ebx
  427ebd:	lea    ecx,[ebx+0x1]
  427ec0:	mov    DWORD PTR [ebp-0x24],ecx
  427ec3:	mov    eax,DWORD PTR [ebp-0x4]
  427ec6:	mov    edx,DWORD PTR [ebp+0x8]
  427ec9:	push   esi
  427eca:	mov    esi,0x75108a8
  427ecf:	xor    eax,esi
  427ed1:	push   edi
  427ed2:	mov    edi,0x3272ef
  427ed7:	add    eax,edi
  427ed9:	cmp    edx,eax
  427edb:	mov    eax,DWORD PTR [ebp-0x4]
  427ede:	je     0x428042
  427ee4:	mov    edx,DWORD PTR [ebp+0xc]
  427ee7:	xor    eax,esi
  427ee9:	add    eax,edi
  427eeb:	cmp    edx,eax
  427eed:	je     0x42803f
  427ef3:	mov    eax,DWORD PTR [ebp+0x10]
  427ef6:	mov    edx,DWORD PTR [ebp+0xc]
  427ef9:	mov    DWORD PTR [ebp-0x14],eax
  427efc:	mov    eax,DWORD PTR [ebp+0x8]
  427eff:	mov    DWORD PTR [ebp-0x18],0xf89c853e
  427f06:	mov    DWORD PTR [ebp-0xc],eax
  427f09:	lea    eax,[ebx+0x2]
  427f0c:	mov    DWORD PTR [ebp-0x1c],eax
  427f0f:	mov    DWORD PTR [ebp-0x10],ebx
  427f12:	mov    DWORD PTR [ebp+0xc],ecx
  427f15:	mov    DWORD PTR [ebp+0x10],eax
  427f18:	mov    eax,DWORD PTR [ebp+0xc]
  427f1b:	xor    eax,esi
  427f1d:	mov    DWORD PTR [ebp-0x20],edx
  427f20:	sub    edx,eax
  427f22:	sub    edx,edi
  427f24:	mov    DWORD PTR [ebp+0x8],edx
  427f27:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  427f2e:	jmp    0x42802f
  427f33:	mov    eax,DWORD PTR [ebp+0xc]
  427f36:	mov    ecx,DWORD PTR [ebp+0xc]
  427f39:	xor    eax,esi
  427f3b:	xor    ecx,esi
  427f3d:	lea    ecx,[eax+ecx*1+0x64e5de]
  427f44:	mov    eax,DWORD PTR [ebp+0x8]
  427f47:	xor    edx,edx
  427f49:	div    ecx
  427f4b:	mov    eax,DWORD PTR [ebp+0x10]
  427f4e:	mov    ecx,DWORD PTR [ebp+0xc]
  427f51:	xor    eax,esi
  427f53:	xor    ecx,esi
  427f55:	sub    eax,ecx
  427f57:	cmp    edx,eax
  427f59:	jne    0x427fee
  427f5f:	mov    eax,DWORD PTR [ebp+0x8]
  427f62:	mov    ecx,DWORD PTR [ebp-0xc]
  427f65:	mov    dl,BYTE PTR [eax+ecx*1]
  427f68:	mov    eax,DWORD PTR [ebp-0x10]
  427f6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427f6e:	xor    eax,esi
  427f70:	xor    ecx,esi
  427f72:	add    eax,edi
  427f74:	add    ecx,edi
  427f76:	cmp    eax,ecx
  427f78:	jae    0x427fc0
  427f7a:	lea    ecx,[eax-0x3272ef]
  427f80:	mov    DWORD PTR [ebp-0x4],ecx
  427f83:	mov    ebx,DWORD PTR [ebp-0x4]
  427f86:	xor    ebx,esi
  427f88:	add    ebx,0x7f55d8fb
  427f8e:	lea    ecx,[ebp+eax*4-0x38]
  427f92:	mov    DWORD PTR [ecx],ebx
  427f94:	mov    ebx,DWORD PTR [ecx]
  427f96:	cmp    ebx,0x244ecb9c
  427f9c:	jbe    0x427fa6
  427f9e:	add    DWORD PTR [ecx],0x405fcdd
  427fa4:	jmp    0x427fac
  427fa6:	add    DWORD PTR [ecx],0xfdaf4323
  427fac:	mov    ecx,DWORD PTR [ebp-0x8]
  427faf:	xor    ecx,esi
  427fb1:	inc    eax
  427fb2:	inc    DWORD PTR [ebp-0x4]
  427fb5:	add    ecx,edi
  427fb7:	cmp    eax,ecx
  427fb9:	jb     0x427f83
  427fbb:	mov    ebx,0xf89c85b9
  427fc0:	cmp    DWORD PTR [ebp-0x14],0x0
  427fc4:	jne    0x427fcd
  427fc6:	xor    dl,0x7b
  427fc9:	dec    dl
  427fcb:	jmp    0x427fe3
  427fcd:	mov    eax,DWORD PTR [ebp-0x18]
  427fd0:	xor    al,0xa8
  427fd2:	mov    cl,0x11
  427fd4:	sub    cl,al
  427fd6:	add    dl,cl
  427fd8:	mov    ecx,DWORD PTR [ebp-0x1c]
  427fdb:	xor    cl,0xa8
  427fde:	sub    cl,0x11
  427fe1:	ror    dl,cl
  427fe3:	xor    eax,eax
  427fe5:	mov    eax,DWORD PTR [ebp+0x8]
  427fe8:	mov    ecx,DWORD PTR [ebp-0xc]
  427feb:	mov    BYTE PTR [eax+ecx*1],dl
  427fee:	mov    eax,DWORD PTR [ebp+0x8]
  427ff1:	mov    ecx,DWORD PTR [ebp-0x10]
  427ff4:	sub    eax,edi
  427ff6:	xor    eax,esi
  427ff8:	cmp    eax,ecx
  427ffa:	jne    0x42801d
  427ffc:	mov    eax,DWORD PTR [ebp+0x10]
  427fff:	mov    ecx,DWORD PTR [ebp+0xc]
  428002:	xor    eax,esi
  428004:	xor    ecx,esi
  428006:	sub    eax,ecx
  428008:	mov    ecx,DWORD PTR [ebp-0x20]
  42800b:	sub    eax,edi
  42800d:	xor    eax,esi
  42800f:	mov    DWORD PTR [ebp+0x10],eax
  428012:	mov    eax,DWORD PTR [ebp+0xc]
  428015:	xor    eax,esi
  428017:	sub    ecx,eax
  428019:	sub    ecx,edi
  42801b:	jmp    0x42802c
  42801d:	mov    eax,DWORD PTR [ebp+0xc]
  428020:	xor    eax,esi
  428022:	mov    ecx,0xffcd8d11
  428027:	sub    ecx,eax
  428029:	add    ecx,DWORD PTR [ebp+0x8]
  42802c:	mov    DWORD PTR [ebp+0x8],ecx
  42802f:	mov    eax,DWORD PTR [ebp+0x10]
  428032:	cmp    eax,ebx
  428034:	jne    0x427f33
  42803a:	mov    eax,DWORD PTR [ebp-0x24]
  42803d:	jmp    0x428042
  42803f:	mov    eax,DWORD PTR [ebp-0x4]
  428042:	xor    eax,esi
  428044:	add    eax,edi
  428046:	pop    edi
  428047:	pop    esi
  428048:	pop    ebx
  428049:	leave  
  42804a:	ret    0xc
  42804d:	push   ebp
  42804e:	mov    ebp,esp
  428050:	sub    esp,0x420
  428056:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  42805d:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428064:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  42806b:	push   ebx
  42806c:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  428073:	mov    eax,DWORD PTR [ebp-0x14]
  428076:	push   esi
  428077:	mov    esi,0x75108a8
  42807c:	push   edi
  42807d:	xor    eax,esi
  42807f:	mov    edi,0x3272ef
  428084:	add    eax,edi
  428086:	mov    DWORD PTR [ebp-0x8],eax
  428089:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  428090:	mov    DWORD PTR [ebp-0x4],0xead71899
  428097:	mov    DWORD PTR [ebp-0x10],0x8
  42809e:	mov    ecx,ecx
  4280a0:	mov    eax,DWORD PTR [ebp-0xc]
  4280a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4280a6:	xor    eax,esi
  4280a8:	xor    ecx,esi
  4280aa:	add    eax,edi
  4280ac:	add    ecx,edi
  4280ae:	imul   eax,ecx
  4280b1:	jmp    0x4280e4
  4280b3:	mov    eax,DWORD PTR [ebp-0x4]
  4280b6:	sub    eax,edi
  4280b8:	xor    eax,esi
  4280ba:	mov    DWORD PTR [ebp-0x8],eax
  4280bd:	lea    ebx,[ebp-0x8]
  4280c0:	call   0x427e06
  4280c5:	mov    DWORD PTR [ebp-0x8],eax
  4280c8:	mov    eax,DWORD PTR [ebp-0x8]
  4280cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4280ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4280d5:	mov    eax,DWORD PTR [ebp-0xc]
  4280d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4280db:	xor    eax,esi
  4280dd:	lea    eax,[eax+ecx*1+0x3272ef]
  4280e4:	mov    DWORD PTR [ebp-0x4],eax
  4280e7:	mov    eax,DWORD PTR [ebp-0x18]
  4280ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4280ed:	xor    ecx,esi
  4280ef:	xor    eax,esi
  4280f1:	sub    eax,ecx
  4280f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4280f6:	cmp    ecx,eax
  4280f8:	jbe    0x4280b3
  4280fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4280fd:	xor    eax,esi
  4280ff:	add    eax,edi
  428101:	mov    DWORD PTR [ebp-0x8],eax
  428104:	mov    DWORD PTR [ebp-0x18],0xf89c86b8
  42810b:	mov    ebx,ebx
  42810d:	jmp    0x428170
  42810f:	mov    ecx,DWORD PTR [ebp-0x20]
  428112:	mov    eax,DWORD PTR [ebp-0x8]
  428115:	xor    ecx,esi
  428117:	add    ecx,edi
  428119:	shr    eax,cl
  42811b:	mov    DWORD PTR [ebp-0x4],eax
  42811e:	mov    eax,DWORD PTR [ebp+0x8]
  428121:	mov    cl,BYTE PTR [eax]
  428123:	mov    BYTE PTR [ebp+0xb],cl
  428126:	mov    cl,BYTE PTR [ebp+0xb]
  428129:	mov    edx,DWORD PTR [ebp-0x8]
  42812c:	movzx  ecx,cl
  42812f:	xor    ecx,edx
  428131:	mov    DWORD PTR [ebp+0x8],ecx
  428134:	mov    ecx,DWORD PTR [ebp-0x18]
  428137:	mov    edx,DWORD PTR [ebp+0x8]
  42813a:	xor    ecx,esi
  42813c:	add    ecx,edi
  42813e:	and    ecx,edx
  428140:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428147:	mov    edx,DWORD PTR [ebp-0x4]
  42814a:	xor    ecx,edx
  42814c:	mov    DWORD PTR [ebp-0x8],ecx
  42814f:	mov    ecx,DWORD PTR [ebp-0xc]
  428152:	xor    ecx,esi
  428154:	lea    eax,[eax+ecx*1+0x3272ef]
  42815b:	mov    DWORD PTR [ebp+0x8],eax
  42815e:	mov    eax,DWORD PTR [ebp-0xc]
  428161:	xor    eax,esi
  428163:	mov    ecx,0xffcd8d11
  428168:	sub    ecx,eax
  42816a:	add    ecx,DWORD PTR [ebp-0x10]
  42816d:	mov    DWORD PTR [ebp-0x10],ecx
  428170:	mov    eax,DWORD PTR [ebp-0x14]
  428173:	mov    ecx,DWORD PTR [ebp-0x10]
  428176:	xor    eax,esi
  428178:	add    eax,edi
  42817a:	cmp    ecx,eax
  42817c:	jne    0x42810f
  42817e:	mov    eax,DWORD PTR [ebp-0x1c]
  428181:	mov    ecx,DWORD PTR [ebp-0x8]
  428184:	xor    eax,esi
  428186:	add    eax,edi
  428188:	pop    edi
  428189:	pop    esi
  42818a:	xor    eax,ecx
  42818c:	pop    ebx
  42818d:	leave  
  42818e:	ret    0x4
  428191:	push   ebp
  428192:	mov    ebp,esp
  428194:	mov    eax,DWORD PTR [ebp+0x1c]
  428197:	mov    ecx,DWORD PTR [ebp+0x8]
  42819a:	mov    edx,DWORD PTR [ebp+0x10]
  42819d:	mov    eax,DWORD PTR [eax+0x190]
  4281a3:	mov    eax,DWORD PTR [eax]
  4281a5:	sub    esp,0x64
  4281a8:	push   ebx
  4281a9:	push   esi
  4281aa:	push   edi
  4281ab:	mov    edi,0x75108a8
  4281b0:	xor    ecx,edi
  4281b2:	mov    ebx,0x3272ef
  4281b7:	add    ecx,ebx
  4281b9:	cmp    ecx,edx
  4281bb:	jne    0x4281cc
  4281bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb20
  4281c7:	jmp    0x4286c8
  4281cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4281cf:	mov    esi,DWORD PTR [ebp+0x14]
  4281d2:	mov    edx,DWORD PTR [esi]
  4281d4:	xor    ecx,edi
  4281d6:	add    ecx,ebx
  4281d8:	cmp    edx,ecx
  4281da:	je     0x428683
  4281e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4281e3:	mov    DWORD PTR [ebp-0x1c],eax
  4281e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4281e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4281ec:	mov    eax,DWORD PTR [esi]
  4281ee:	mov    DWORD PTR [ebp-0x20],eax
  4281f1:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  4281f8:	mov    edx,0xf89c85ba
  4281fd:	mov    DWORD PTR [ebp-0x8],edx
  428200:	mov    eax,DWORD PTR [ebp+0x1c]
  428203:	mov    DWORD PTR [ebp+0x1c],eax
  428206:	mov    eax,DWORD PTR [ebp+0x1c]
  428209:	mov    eax,DWORD PTR [eax+0x190]
  42820f:	mov    eax,DWORD PTR [eax]
  428211:	mov    DWORD PTR [ebp-0x24],ecx
  428214:	mov    ecx,DWORD PTR [ebp+0x1c]
  428217:	mov    ecx,DWORD PTR [ecx+0x190]
  42821d:	mov    ecx,DWORD PTR [ecx]
  42821f:	add    ecx,DWORD PTR [eax+0x3c]
  428222:	mov    DWORD PTR [ebp+0x10],ecx
  428225:	mov    eax,DWORD PTR [ebp+0x8]
  428228:	xor    eax,edi
  42822a:	add    eax,ebx
  42822c:	mov    DWORD PTR [ebp-0x4],eax
  42822f:	mov    eax,DWORD PTR [ebp+0x8]
  428232:	xor    eax,edi
  428234:	add    eax,ebx
  428236:	mov    DWORD PTR [ebp+0x18],eax
  428239:	mov    eax,DWORD PTR [ebp+0x10]
  42823c:	mov    eax,DWORD PTR [eax+0x50]
  42823f:	sub    eax,0xc
  428242:	mov    DWORD PTR [ebp-0x28],eax
  428245:	mov    eax,DWORD PTR [ebp+0x10]
  428248:	mov    eax,DWORD PTR [eax+0x38]
  42824b:	mov    ecx,DWORD PTR [ebp+0x10]
  42824e:	dec    eax
  42824f:	test   DWORD PTR [ecx+0x54],eax
  428252:	mov    eax,DWORD PTR [ebp+0x10]
  428255:	je     0x42826f
  428257:	mov    eax,DWORD PTR [eax+0x38]
  42825a:	mov    ecx,DWORD PTR [ebp+0x10]
  42825d:	mov    ecx,DWORD PTR [ecx+0x54]
  428260:	dec    eax
  428261:	not    eax
  428263:	and    ecx,eax
  428265:	mov    eax,DWORD PTR [ebp+0x10]
  428268:	mov    eax,DWORD PTR [eax+0x38]
  42826b:	add    eax,ecx
  42826d:	jmp    0x428272
  42826f:	mov    eax,DWORD PTR [eax+0x54]
  428272:	mov    DWORD PTR [ebp+0x1c],eax
  428275:	mov    eax,DWORD PTR [ebp+0x8]
  428278:	xor    eax,edi
  42827a:	add    eax,ebx
  42827c:	mov    DWORD PTR [ebp+0x18],eax
  42827f:	mov    eax,DWORD PTR [ebp+0x8]
  428282:	xor    eax,edi
  428284:	add    eax,ebx
  428286:	mov    DWORD PTR [ebp+0x18],eax
  428289:	mov    eax,DWORD PTR [ebp+0x8]
  42828c:	mov    ecx,DWORD PTR [ebp-0x24]
  42828f:	xor    eax,edi
  428291:	add    eax,ebx
  428293:	mov    DWORD PTR [ecx],eax
  428295:	mov    DWORD PTR [ebp+0x18],edx
  428298:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  42829f:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4282a6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4282ad:	mov    eax,DWORD PTR [ebp-0x8]
  4282b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4282b3:	xor    eax,edi
  4282b5:	add    eax,ebx
  4282b7:	imul   eax,ecx
  4282ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4282bd:	mov    edx,DWORD PTR [ebp-0x28]
  4282c0:	xor    ecx,edi
  4282c2:	lea    ecx,[ecx+edx*1+0x3272ef]
  4282c9:	cmp    eax,ecx
  4282cb:	jae    0x42867c
  4282d1:	mov    eax,DWORD PTR [ebp+0x8]
  4282d4:	xor    eax,edi
  4282d6:	add    eax,ebx
  4282d8:	mov    DWORD PTR [ebp+0x18],eax
  4282db:	mov    eax,DWORD PTR [ebp+0x1c]
  4282de:	add    eax,DWORD PTR [ebp-0x1c]
  4282e1:	mov    DWORD PTR [ebp-0x4],eax
  4282e4:	push   DWORD PTR [ebp-0x4]
  4282e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4282ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4282ed:	call   0x427441
  4282f2:	mov    DWORD PTR [ebp+0xc],eax
  4282f5:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4282fc:	mov    eax,DWORD PTR [ebp-0x18]
  4282ff:	xor    eax,edi
  428301:	lea    ecx,[ebp-0x40]
  428304:	add    eax,ebx
  428306:	push   ecx
  428307:	call   0x4279d3
  42830c:	mov    eax,DWORD PTR [ebp+0xc]
  42830f:	test   eax,eax
  428311:	je     0x428361
  428313:	mov    eax,DWORD PTR [ebp-0x18]
  428316:	xor    eax,edi
  428318:	add    eax,ebx
  42831a:	push   eax
  42831b:	push   DWORD PTR [ebp+0xc]
  42831e:	lea    eax,[ebp-0x40]
  428321:	push   eax
  428322:	call   0x4278c9
  428327:	mov    eax,DWORD PTR [ebp-0x4]
  42832a:	mov    DWORD PTR [ebp-0x18],eax
  42832d:	mov    eax,DWORD PTR [ebp-0x18]
  428330:	mov    ecx,DWORD PTR [ebp-0x1c]
  428333:	sub    eax,ecx
  428335:	mov    DWORD PTR [ebp-0x18],eax
  428338:	mov    eax,DWORD PTR [ebp+0xc]
  42833b:	mov    ecx,DWORD PTR [ebp+0xc]
  42833e:	mov    eax,DWORD PTR [eax+0x10]
  428341:	add    eax,DWORD PTR [ecx+0xc]
  428344:	mov    ecx,DWORD PTR [ebp-0x18]
  428347:	cmp    ecx,eax
  428349:	jb     0x428361
  42834b:	mov    eax,DWORD PTR [ebp+0xc]
  42834e:	mov    eax,DWORD PTR [eax+0xc]
  428351:	mov    ecx,DWORD PTR [ebp+0xc]
  428354:	add    eax,DWORD PTR [ecx+0x8]
  428357:	mov    ecx,DWORD PTR [ebp-0x18]
  42835a:	sub    eax,ecx
  42835c:	jmp    0x42864f
  428361:	push   0xc
  428363:	push   DWORD PTR [ebp-0x4]
  428366:	lea    eax,[ebp-0x4c]
  428369:	push   eax
  42836a:	call   0x4278c9
  42836f:	mov    eax,0xf89c85b9
  428374:	mov    DWORD PTR [ebp-0x2c],eax
  428377:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42837e:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  428385:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42838c:	lea    ecx,[ebp-0x2c]
  42838f:	mov    DWORD PTR [ebp-0xc],ecx
  428392:	lea    ecx,[ebp-0x30]
  428395:	mov    DWORD PTR [ebp-0x10],ecx
  428398:	lea    ecx,[ebp-0x34]
  42839b:	mov    DWORD PTR [ebp+0xc],ecx
  42839e:	lea    ecx,[ebp-0x38]
  4283a1:	mov    DWORD PTR [ebp-0x14],ecx
  4283a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4283a7:	xor    ecx,edi
  4283a9:	add    ecx,ebx
  4283ab:	mov    DWORD PTR [ebp-0x18],ecx
  4283ae:	jmp    0x4285aa
  4283b3:	cmp    eax,0xf89c85bb
  4283b8:	je     0x4285bc
  4283be:	mov    ecx,DWORD PTR [ebp-0x8]
  4283c1:	xor    ecx,edi
  4283c3:	mov    esi,eax
  4283c5:	add    ecx,ebx
  4283c7:	mov    DWORD PTR [ebp+0x18],ecx
  4283ca:	mov    eax,DWORD PTR [ebp-0x18]
  4283cd:	xor    esi,edi
  4283cf:	lea    eax,[eax+esi*1+0x3272ef]
  4283d6:	mov    DWORD PTR [ebp-0x18],eax
  4283d9:	mov    eax,DWORD PTR [ebp-0x8]
  4283dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4283df:	xor    eax,edi
  4283e1:	add    eax,ebx
  4283e3:	cmp    ecx,eax
  4283e5:	jne    0x4283fa
  4283e7:	mov    eax,DWORD PTR [ebp+0x8]
  4283ea:	xor    eax,edi
  4283ec:	add    eax,ebx
  4283ee:	push   eax
  4283ef:	push   0xc
  4283f1:	lea    eax,[ebp-0x4c]
  4283f4:	push   eax
  4283f5:	call   0x427eae
  4283fa:	mov    eax,DWORD PTR [ebp-0xc]
  4283fd:	mov    eax,DWORD PTR [eax]
  4283ff:	xor    eax,edi
  428401:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428408:	mov    ecx,DWORD PTR [ebp+0x8]
  42840b:	xor    ecx,edi
  42840d:	movzx  eax,al
  428410:	add    ecx,ebx
  428412:	cmp    eax,ecx
  428414:	je     0x428592
  42841a:	mov    eax,DWORD PTR [ebp-0x10]
  42841d:	mov    eax,DWORD PTR [eax]
  42841f:	xor    eax,edi
  428421:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428428:	mov    ecx,DWORD PTR [ebp+0x8]
  42842b:	xor    ecx,edi
  42842d:	movzx  eax,al
  428430:	add    ecx,ebx
  428432:	cmp    eax,ecx
  428434:	je     0x428592
  42843a:	mov    eax,DWORD PTR [ebp+0xc]
  42843d:	mov    eax,DWORD PTR [eax]
  42843f:	xor    eax,edi
  428441:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428448:	mov    ecx,DWORD PTR [ebp+0x8]
  42844b:	xor    ecx,edi
  42844d:	movzx  eax,al
  428450:	add    ecx,ebx
  428452:	cmp    eax,ecx
  428454:	je     0x428592
  42845a:	mov    eax,DWORD PTR [ebp-0x14]
  42845d:	mov    eax,DWORD PTR [eax]
  42845f:	xor    eax,edi
  428461:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428468:	mov    ecx,DWORD PTR [ebp+0x8]
  42846b:	xor    ecx,edi
  42846d:	movzx  eax,al
  428470:	add    ecx,ebx
  428472:	cmp    eax,ecx
  428474:	je     0x428592
  42847a:	mov    eax,DWORD PTR [ebp-0x10]
  42847d:	mov    eax,DWORD PTR [eax]
  42847f:	xor    eax,edi
  428481:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428488:	mov    ecx,DWORD PTR [ebp-0xc]
  42848b:	mov    ecx,DWORD PTR [ecx]
  42848d:	xor    ecx,edi
  42848f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  428496:	xor    al,cl
  428498:	mov    ecx,DWORD PTR [ebp+0xc]
  42849b:	mov    ecx,DWORD PTR [ecx]
  42849d:	xor    ecx,edi
  42849f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284a6:	or     al,cl
  4284a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4284ab:	mov    ecx,DWORD PTR [ecx]
  4284ad:	xor    ecx,edi
  4284af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4284b6:	cmp    cl,al
  4284b8:	jne    0x428592
  4284be:	mov    eax,DWORD PTR [ebp+0xc]
  4284c1:	mov    eax,DWORD PTR [eax]
  4284c3:	xor    eax,edi
  4284c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4284cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4284cf:	mov    ecx,DWORD PTR [ecx]
  4284d1:	xor    ecx,edi
  4284d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284da:	xor    al,cl
  4284dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4284df:	mov    ecx,DWORD PTR [ecx]
  4284e1:	xor    ecx,edi
  4284e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4284ea:	or     al,cl
  4284ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4284ef:	mov    ecx,DWORD PTR [ecx]
  4284f1:	xor    ecx,edi
  4284f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4284fa:	cmp    cl,al
  4284fc:	jne    0x428592
  428502:	mov    eax,DWORD PTR [ebp-0x14]
  428505:	mov    eax,DWORD PTR [eax]
  428507:	xor    eax,edi
  428509:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428510:	mov    ecx,DWORD PTR [ebp+0xc]
  428513:	mov    ecx,DWORD PTR [ecx]
  428515:	xor    ecx,edi
  428517:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42851e:	xor    al,cl
  428520:	mov    ecx,DWORD PTR [ebp-0xc]
  428523:	mov    ecx,DWORD PTR [ecx]
  428525:	xor    ecx,edi
  428527:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42852e:	or     al,cl
  428530:	mov    ecx,DWORD PTR [ebp+0xc]
  428533:	mov    ecx,DWORD PTR [ecx]
  428535:	xor    ecx,edi
  428537:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42853e:	cmp    cl,al
  428540:	jne    0x428592
  428542:	mov    eax,DWORD PTR [ebp-0x14]
  428545:	mov    eax,DWORD PTR [eax]
  428547:	xor    eax,edi
  428549:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428550:	mov    ecx,DWORD PTR [ebp-0xc]
  428553:	mov    ecx,DWORD PTR [ecx]
  428555:	xor    ecx,edi
  428557:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42855e:	xor    al,cl
  428560:	mov    ecx,DWORD PTR [ebp-0x10]
  428563:	mov    ecx,DWORD PTR [ecx]
  428565:	xor    ecx,edi
  428567:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42856e:	or     al,cl
  428570:	mov    ecx,DWORD PTR [ebp-0x14]
  428573:	mov    ecx,DWORD PTR [ecx]
  428575:	xor    ecx,edi
  428577:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42857e:	cmp    cl,al
  428580:	jne    0x428592
  428582:	lea    eax,[ebp-0x4c]
  428585:	push   eax
  428586:	call   0x42804d
  42858b:	mov    ecx,DWORD PTR [ebp-0x44]
  42858e:	cmp    eax,ecx
  428590:	je     0x42859c
  428592:	mov    eax,DWORD PTR [ebp+0x8]
  428595:	xor    eax,edi
  428597:	add    eax,ebx
  428599:	mov    DWORD PTR [ebp+0x18],eax
  42859c:	mov    eax,DWORD PTR [ebp-0x8]
  42859f:	xor    eax,edi
  4285a1:	lea    eax,[eax+esi*1+0x3272ef]
  4285a8:	xor    eax,edi
  4285aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4285ad:	mov    edx,DWORD PTR [ebp+0x18]
  4285b0:	xor    ecx,edi
  4285b2:	add    ecx,ebx
  4285b4:	cmp    edx,ecx
  4285b6:	je     0x4283b3
  4285bc:	mov    eax,DWORD PTR [ebp+0x8]
  4285bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4285c2:	xor    eax,edi
  4285c4:	add    eax,ebx
  4285c6:	cmp    ecx,eax
  4285c8:	jne    0x4285db
  4285ca:	mov    eax,DWORD PTR [ebp-0x8]
  4285cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4285d0:	xor    eax,edi
  4285d2:	lea    eax,[eax+ecx*1+0x3272ef]
  4285d9:	jmp    0x428652
  4285db:	push   0x18
  4285dd:	push   DWORD PTR [ebp-0x4]
  4285e0:	lea    eax,[ebp-0x64]
  4285e3:	push   eax
  4285e4:	call   0x4278c9
  4285e9:	mov    eax,DWORD PTR [ebp+0x8]
  4285ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4285ef:	xor    eax,edi
  4285f1:	add    eax,ebx
  4285f3:	cmp    eax,ecx
  4285f5:	je     0x42860a
  4285f7:	mov    eax,DWORD PTR [ebp+0x8]
  4285fa:	xor    eax,edi
  4285fc:	add    eax,ebx
  4285fe:	push   eax
  4285ff:	push   0x18
  428601:	lea    eax,[ebp-0x64]
  428604:	push   eax
  428605:	call   0x427eae
  42860a:	mov    eax,DWORD PTR [ebp-0x4]
  42860d:	add    eax,0x18
  428610:	mov    DWORD PTR [ebp+0x18],eax
  428613:	push   DWORD PTR [ebp-0x50]
  428616:	push   DWORD PTR [ebp+0x18]
  428619:	mov    eax,DWORD PTR [ebp-0x54]
  42861c:	add    eax,DWORD PTR [ebp-0x20]
  42861f:	push   eax
  428620:	call   0x4278c9
  428625:	mov    eax,DWORD PTR [ebp+0x8]
  428628:	mov    ecx,DWORD PTR [ebp-0x18]
  42862b:	xor    eax,edi
  42862d:	add    eax,ebx
  42862f:	cmp    eax,ecx
  428631:	je     0x428644
  428633:	push   0x0
  428635:	push   DWORD PTR [ebp-0x50]
  428638:	mov    eax,DWORD PTR [ebp-0x54]
  42863b:	add    eax,DWORD PTR [ebp-0x20]
  42863e:	push   eax
  42863f:	call   0x427eae
  428644:	mov    eax,DWORD PTR [ebp-0x24]
  428647:	mov    ecx,DWORD PTR [ebp-0x50]
  42864a:	add    DWORD PTR [eax],ecx
  42864c:	mov    eax,DWORD PTR [ebp-0x50]
  42864f:	add    eax,DWORD PTR [ebp+0x1c]
  428652:	mov    DWORD PTR [ebp+0x1c],eax
  428655:	mov    eax,DWORD PTR [ebp-0x8]
  428658:	mov    ecx,DWORD PTR [ebp+0x1c]
  42865b:	xor    eax,edi
  42865d:	add    eax,ebx
  42865f:	imul   eax,ecx
  428662:	mov    ecx,DWORD PTR [ebp+0x8]
  428665:	mov    edx,DWORD PTR [ebp-0x28]
  428668:	xor    ecx,edi
  42866a:	lea    ecx,[ecx+edx*1+0x3272ef]
  428671:	cmp    eax,ecx
  428673:	jb     0x4282d1
  428679:	mov    esi,DWORD PTR [ebp+0x14]
  42867c:	mov    eax,DWORD PTR [ebp-0x20]
  42867f:	mov    DWORD PTR [esi],eax
  428681:	jmp    0x4286c8
  428683:	mov    ecx,DWORD PTR [ebp+0x8]
  428686:	mov    edx,DWORD PTR [ebp+0xc]
  428689:	xor    ecx,edi
  42868b:	xor    edx,edi
  42868d:	add    ecx,ebx
  42868f:	add    edx,ebx
  428691:	cmp    ecx,edx
  428693:	jne    0x4286a7
  428695:	mov    eax,ds:0x7f642dd0
  42869a:	imul   eax,eax,0x9f15fccf
  4286a0:	mov    ds:0x7f642dd0,eax
  4286a5:	jmp    0x4286c8
  4286a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4286aa:	xor    ecx,edi
  4286ac:	add    ecx,ebx
  4286ae:	cmp    eax,ecx
  4286b0:	je     0x4286be
  4286b2:	sub    DWORD PTR ds:0xf861e30,0x709bead0
  4286bc:	jmp    0x4286c8
  4286be:	and    DWORD PTR ds:0x3343fad0,0x5265ec3f
  4286c8:	pop    edi
  4286c9:	pop    esi
  4286ca:	pop    ebx
  4286cb:	leave  
  4286cc:	ret    0x18
  4286cf:	push   ebp
  4286d0:	mov    ebp,esp
  4286d2:	and    esp,0xfffffff8
  4286d5:	mov    eax,DWORD PTR [ebp+0x20]
  4286d8:	sub    esp,0x14
  4286db:	push   ebx
  4286dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4286df:	push   esi
  4286e0:	push   edi
  4286e1:	cmp    eax,0xf89c85b9
  4286e6:	jne    0x4286f2
  4286e8:	push   0xf89c85ba
  4286ed:	jmp    0x428824
  4286f2:	mov    eax,DWORD PTR [ebp+0x20]
  4286f5:	cmp    eax,0xf89c85ba
  4286fa:	jne    0x428706
  4286fc:	push   0xf89c85bb
  428701:	jmp    0x428824
  428706:	mov    eax,DWORD PTR [ebp+0x20]
  428709:	cmp    eax,0xf89c85bb
  42870e:	jne    0x42871a
  428710:	push   0xf89c85bc
  428715:	jmp    0x428824
  42871a:	mov    eax,DWORD PTR [ebp+0x20]
  42871d:	cmp    eax,0xf89c85bc
  428722:	jne    0x42872e
  428724:	push   0xf89c85bd
  428729:	jmp    0x428824
  42872e:	mov    ecx,DWORD PTR [ebp+0x20]
  428731:	mov    eax,0xf89c85b0
  428736:	cmp    ecx,eax
  428738:	jne    0x4287f4
  42873e:	mov    eax,DWORD PTR [ebp+0x10]
  428741:	mov    DWORD PTR [esp+0xc],eax
  428745:	mov    eax,DWORD PTR [ebp+0x18]
  428748:	mov    DWORD PTR [esp+0x14],eax
  42874c:	mov    eax,DWORD PTR [ebp+0xc]
  42874f:	mov    DWORD PTR [esp+0x18],eax
  428753:	mov    eax,DWORD PTR [ebp+0x8]
  428756:	mov    DWORD PTR [esp+0x10],eax
  42875a:	mov    eax,DWORD PTR [esp+0x10]
  42875e:	mov    ecx,DWORD PTR [esp+0x14]
  428762:	mov    edi,0x75108a8
  428767:	xor    eax,edi
  428769:	mov    esi,0x3272ef
  42876e:	add    eax,esi
  428770:	mov    DWORD PTR [ecx],eax
  428772:	mov    eax,DWORD PTR [esp+0xc]
  428776:	mov    eax,DWORD PTR [eax+0x194]
  42877c:	mov    ecx,DWORD PTR [eax]
  42877e:	mov    eax,DWORD PTR [esp+0xc]
  428782:	mov    eax,DWORD PTR [eax+0x194]
  428788:	mov    eax,DWORD PTR [eax]
  42878a:	add    eax,DWORD PTR [ecx+0x3c]
  42878d:	mov    ecx,DWORD PTR [esp+0xc]
  428791:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428797:	mov    ecx,DWORD PTR [ecx+0x14]
  42879a:	push   0x4
  42879c:	push   0x3000
  4287a1:	push   DWORD PTR [eax+0x50]
  4287a4:	push   0x0
  4287a6:	call   ecx
  4287a8:	mov    DWORD PTR [ebx],eax
  4287aa:	mov    eax,DWORD PTR [esp+0x10]
  4287ae:	push   DWORD PTR [esp+0xc]
  4287b2:	xor    eax,edi
  4287b4:	add    eax,esi
  4287b6:	mov    DWORD PTR [esp+0x20],eax
  4287ba:	lea    eax,[esp+0x20]
  4287be:	push   eax
  4287bf:	push   ebx
  4287c0:	push   DWORD PTR [esp+0x20]
  4287c4:	push   DWORD PTR [esp+0x28]
  4287c8:	push   DWORD PTR [esp+0x24]
  4287cc:	call   0x428191
  4287d1:	mov    eax,DWORD PTR [esp+0x10]
  4287d5:	mov    ecx,DWORD PTR [ebx]
  4287d7:	xor    eax,edi
  4287d9:	add    eax,esi
  4287db:	cmp    ecx,eax
  4287dd:	je     0x42883b
  4287df:	mov    eax,DWORD PTR [esp+0x18]
  4287e3:	mov    ecx,DWORD PTR [esp+0x14]
  4287e7:	xor    eax,edi
  4287e9:	add    eax,esi
  4287eb:	imul   eax,DWORD PTR [esp+0x1c]
  4287f0:	mov    DWORD PTR [ecx],eax
  4287f2:	jmp    0x42883b
  4287f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4287f7:	cmp    ecx,0xf89c85bd
  4287fd:	jne    0x428806
  4287ff:	push   0xf89c85be
  428804:	jmp    0x428824
  428806:	mov    ecx,DWORD PTR [ebp+0x20]
  428809:	cmp    ecx,0xf89c85be
  42880f:	jne    0x428818
  428811:	push   0xf89c85bf
  428816:	jmp    0x428824
  428818:	mov    ecx,DWORD PTR [ebp+0x20]
  42881b:	cmp    ecx,0xf89c85bf
  428821:	jne    0x42883b
  428823:	push   eax
  428824:	push   DWORD PTR [ebp+0x1c]
  428827:	push   DWORD PTR [ebp+0x18]
  42882a:	push   ebx
  42882b:	push   DWORD PTR [ebp+0x10]
  42882e:	push   DWORD PTR [ebp+0xc]
  428831:	push   DWORD PTR [ebp+0x8]
  428834:	call   0x4286cf
  428839:	mov    DWORD PTR [ebx],eax
  42883b:	mov    eax,DWORD PTR [ebx]
  42883d:	pop    edi
  42883e:	pop    esi
  42883f:	pop    ebx
  428840:	mov    esp,ebp
  428842:	pop    ebp
  428843:	ret    0x1c
  428846:	push   ebp
  428847:	mov    ebp,esp
  428849:	sub    esp,0xc
  42884c:	mov    eax,0xf89c85b9
  428851:	mov    DWORD PTR [ebp-0x8],eax
  428854:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  42885b:	mov    ecx,DWORD PTR [ebp-0x8]
  42885e:	xor    ecx,0x75108a8
  428864:	add    ecx,0x3272ef
  42886a:	mov    DWORD PTR [ebp-0x4],ecx
  42886d:	mov    ecx,DWORD PTR [ebp+0xc]
  428870:	push   eax
  428871:	mov    DWORD PTR [ebp+0xc],ecx
  428874:	push   DWORD PTR [ebp+0xc]
  428877:	lea    eax,[ebp-0x4]
  42887a:	push   DWORD PTR [ebp+0x8]
  42887d:	push   eax
  42887e:	push   DWORD PTR [ebp+0xc]
  428881:	push   DWORD PTR [ebp-0xc]
  428884:	push   DWORD PTR [ebp-0x8]
  428887:	call   0x4286cf
  42888c:	mov    DWORD PTR [ebp-0x4],eax
  42888f:	mov    eax,DWORD PTR [ebp-0x4]
  428892:	leave  
  428893:	ret    0x8
